[
  {
    "start": "0",
    "end": "23000"
  },
  {
    "text": "hello welcome to the cubecon cloud nativecon north america 2020 virtual event",
    "start": "3040",
    "end": "8639"
  },
  {
    "text": "my name is daniel feldman i am a software engineer at hewlett packard enterprise and i am so excited to be here today the",
    "start": "8639",
    "end": "15759"
  },
  {
    "text": "title of this session is no more mults protecting your cloud native infrastructure with zero trust",
    "start": "15759",
    "end": "21920"
  },
  {
    "text": "here's a preview of the topics we'll be discussing today first of all what is zero trust why would you want it",
    "start": "21920",
    "end": "27359"
  },
  {
    "start": "23000",
    "end": "82000"
  },
  {
    "text": "to protect your cloud native infrastructure that will just take a few minutes then we'll discuss spiffy and spire",
    "start": "27359",
    "end": "33760"
  },
  {
    "text": "which are the cncf incubating cloud native security projects that i work on every day that help you",
    "start": "33760",
    "end": "39920"
  },
  {
    "text": "implement zero trust on your infrastructure next we'll discuss building systems with",
    "start": "39920",
    "end": "45200"
  },
  {
    "text": "spiffy inspire this is where we'll go over some design patterns that we've learned from helping dozens",
    "start": "45200",
    "end": "51840"
  },
  {
    "text": "of companies get started with zero trust on their infrastructure next we'll be discussing my favorite topic",
    "start": "51840",
    "end": "58399"
  },
  {
    "text": "which is the roadmap for spiffy inspire this is where i get to talk about the features that i and my colleagues are working on",
    "start": "58399",
    "end": "64799"
  },
  {
    "text": "for spiffy inspire to make them better for everyone using cloud native infrastructure to implement",
    "start": "64799",
    "end": "69920"
  },
  {
    "text": "zero trust finally hopefully by this point in the talk i'll have convinced you that zero",
    "start": "69920",
    "end": "74960"
  },
  {
    "text": "trust is a great idea and we'll discuss the next steps for getting started with spiffy inspire zero trust security",
    "start": "74960",
    "end": "80720"
  },
  {
    "text": "inside your organization most organizations today use something called perimeter security",
    "start": "80720",
    "end": "86320"
  },
  {
    "start": "82000",
    "end": "196000"
  },
  {
    "text": "in perimeter security you have a firewall and everything inside your firewall is trusted and everything outside your firewall is",
    "start": "86320",
    "end": "93200"
  },
  {
    "text": "untrusted so you have a bunch of internal servers they're communicating with each other usually over unencrypted connections",
    "start": "93200",
    "end": "99920"
  },
  {
    "text": "then you have a dmz and that dmz contains your email server your web server your vpn server and those are locked",
    "start": "99920",
    "end": "106479"
  },
  {
    "text": "down and only have encrypted inputs and outputs to the outside world and meanwhile these internal servers",
    "start": "106479",
    "end": "112479"
  },
  {
    "text": "can't accept connections from the outside world at all now this architecture was great 10 or 15 years ago",
    "start": "112479",
    "end": "118479"
  },
  {
    "text": "and it evolved because most organizations started with no internet connection at all and they just wanted to connect their internal network to the internet and",
    "start": "118479",
    "end": "125200"
  },
  {
    "text": "they did it in the easiest way possible but today things are a lot more complicated you have sas applications",
    "start": "125200",
    "end": "132319"
  },
  {
    "text": "you have business partners that need to access internal services you have tons of stuff in the cloud in",
    "start": "132319",
    "end": "137520"
  },
  {
    "text": "multiple clouds you might have some stuff in azure some stuff in aws some stuff in gcp",
    "start": "137520",
    "end": "143200"
  },
  {
    "text": "you might have different regions within all those different clouds you might have managed databases which are run by some",
    "start": "143200",
    "end": "148800"
  },
  {
    "text": "external provider and those are really hard to get inside your firewall so as we add all this stuff perimeter",
    "start": "148800",
    "end": "155040"
  },
  {
    "text": "security becomes increasingly untenable it's really hard to maintain and even if you do maintain it",
    "start": "155040",
    "end": "160400"
  },
  {
    "text": "it's insecure if you make a mistake one of my colleagues frederick coutts",
    "start": "160400",
    "end": "166400"
  },
  {
    "text": "likes to say we're protecting 21st century infrastructure with 14th century technology",
    "start": "166400",
    "end": "172720"
  },
  {
    "text": "we're building a moat around your network like it's a like it's a medieval castle so attackers can't get in but that's",
    "start": "172720",
    "end": "178800"
  },
  {
    "text": "just not the right way to do things for the future zero trust means giving each service",
    "start": "178800",
    "end": "185440"
  },
  {
    "text": "wherever it runs whether it's in the cloud in your data center being a sas provider its own unique",
    "start": "185440",
    "end": "191360"
  },
  {
    "text": "secure provable identity and that's what i work on and that's what we're going to be talking about today",
    "start": "191360",
    "end": "197120"
  },
  {
    "text": "smithy is the new open standard for how to implement a xero trust identity provider",
    "start": "197120",
    "end": "202800"
  },
  {
    "text": "it includes apis file formats and written english descriptions of how a zero trust identity provider has to work",
    "start": "202800",
    "end": "209200"
  },
  {
    "text": "so that applications can talk to any conformance spiffy implementation spire is a production ready",
    "start": "209200",
    "end": "215760"
  },
  {
    "text": "implementation of spiffy both spiffy and spire independently",
    "start": "215760",
    "end": "220799"
  },
  {
    "text": "are cncf incubating projects so you can go on github join meetings comment on proposals open",
    "start": "220799",
    "end": "227519"
  },
  {
    "text": "issues maybe resolve some issues we encourage everyone to get involved in the spiffy inspire open source projects",
    "start": "227519",
    "end": "235040"
  },
  {
    "text": "what are the key benefits of xero trust the first benefit and the one that most people care about",
    "start": "235040",
    "end": "240400"
  },
  {
    "text": "is defense in depth that means if one service is compromised the attacker can't use that service to",
    "start": "240400",
    "end": "245840"
  },
  {
    "text": "move laterally within your network the second benefit of xero trust is",
    "start": "245840",
    "end": "250959"
  },
  {
    "text": "there's reduced overhead for your security teams your security teams aren't manually maintaining that",
    "start": "250959",
    "end": "256239"
  },
  {
    "text": "perimeter and creating and rotating credentials constantly for all your different services because the xero trust identity provider",
    "start": "256239",
    "end": "263120"
  },
  {
    "text": "is just giving all those services their own unique identities and the last benefit of xero trust",
    "start": "263120",
    "end": "269759"
  },
  {
    "text": "is that services can't operate at all without an explicit identity and then you can use that identity",
    "start": "269759",
    "end": "275600"
  },
  {
    "text": "for observability and logging and this is really useful for your bigger companies that might have thousands of different services and",
    "start": "275600",
    "end": "281919"
  },
  {
    "text": "they've lost track of which services are talking to which other services at which times or maybe they accidentally",
    "start": "281919",
    "end": "288000"
  },
  {
    "text": "have some stuff in a dev environment that's talking to a production database you really don't want that",
    "start": "288000",
    "end": "293360"
  },
  {
    "text": "so the observability and logging benefit really benefits the the bigger organization now that we've",
    "start": "293360",
    "end": "299759"
  },
  {
    "text": "talked about the key benefits of xero trust let's discuss spiffy inspire which are the cncf sponsored implementations",
    "start": "299759",
    "end": "305600"
  },
  {
    "text": "of xero trust that i work on like i said before spiffy is a standard for",
    "start": "305600",
    "end": "310800"
  },
  {
    "text": "an application to use a service identity provider and then spire is a production ready",
    "start": "310800",
    "end": "316240"
  },
  {
    "text": "implementation of spiffy that you can download and get started using both of them are open source uh projects in the incubation phase of",
    "start": "316240",
    "end": "323759"
  },
  {
    "text": "the cncf the spiffy standard consists of four pieces the first piece is the spiffy id",
    "start": "323759",
    "end": "331680"
  },
  {
    "start": "326000",
    "end": "481000"
  },
  {
    "text": "which is a standard format for a service identifier it looks like this it starts with spiffy colon",
    "start": "331680",
    "end": "336960"
  },
  {
    "text": "slash then there's a trust domain name which is simply your company's unique name",
    "start": "336960",
    "end": "342160"
  },
  {
    "text": "then there's another slash and then there's a unique service identifier which can just be any string that makes",
    "start": "342160",
    "end": "347759"
  },
  {
    "text": "sense for your company so that's pretty simple the next part of the spiffy standard is",
    "start": "347759",
    "end": "353520"
  },
  {
    "text": "the standard format for spiffy verifiable identity documents or s vids and an svid is a cryptographically",
    "start": "353520",
    "end": "359919"
  },
  {
    "text": "verifiable document asserting a specific spiffy id now we actually support two different",
    "start": "359919",
    "end": "366000"
  },
  {
    "text": "formats for these s-vids one is an x-509 certificate just a standard x 509 certificate",
    "start": "366000",
    "end": "371759"
  },
  {
    "text": "with a certain field filled in it's a field that's used for other purposes um with the spiffy id",
    "start": "371759",
    "end": "380240"
  },
  {
    "text": "the other format we support is javascript web tokens or jots and that's another standard format for",
    "start": "380240",
    "end": "386080"
  },
  {
    "text": "cryptographically verifiable identifiers and uh it's really useful in certain",
    "start": "386080",
    "end": "392319"
  },
  {
    "text": "situations where x509 doesn't work so we support both of those two formats",
    "start": "392319",
    "end": "397759"
  },
  {
    "text": "ninety percent of the time and svid is in the x 509 s vid format",
    "start": "397759",
    "end": "404000"
  },
  {
    "text": "the next part of the spiffy standard is the standard format for trust bundles which are sets of public keys",
    "start": "404000",
    "end": "409199"
  },
  {
    "text": "used to verify svids so each trust domain will have a trust bundle and that trust bundle will contain the",
    "start": "409199",
    "end": "415120"
  },
  {
    "text": "public keys that can be used to verify any s vids within that trust domain so that's pretty simple",
    "start": "415120",
    "end": "421199"
  },
  {
    "text": "that's very simple similar to what your web browser has built in or your operating system has",
    "start": "421199",
    "end": "426240"
  },
  {
    "text": "built in your phone has built in to verify servers it's just a standard format",
    "start": "426240",
    "end": "431360"
  },
  {
    "text": "for those public keys finally the last part of the smithy",
    "start": "431360",
    "end": "436639"
  },
  {
    "text": "standard is the workload api and the workload api is the most complicated part of the standard",
    "start": "436639",
    "end": "442080"
  },
  {
    "text": "this is a local api that workloads can connect to and retrieve their own spiffy ids their",
    "start": "442080",
    "end": "448240"
  },
  {
    "text": "own svids and their own trust bundles now when i say it's a local api it's a unix domain",
    "start": "448240",
    "end": "453680"
  },
  {
    "text": "socket which is a service that's provided by the linux or unix kernel that lets",
    "start": "453680",
    "end": "460720"
  },
  {
    "text": "you create a server that sits there and accepts connections and when anyone connects to it it has to be a local connection the",
    "start": "460720",
    "end": "467599"
  },
  {
    "text": "kernel will provide the pid the uid and the gid of the connecting process so this lets any process connect",
    "start": "467599",
    "end": "474479"
  },
  {
    "text": "to that workload api and get the right identif identity for that process securely based on the",
    "start": "474479",
    "end": "480319"
  },
  {
    "text": "security of the operating system so at this point you might be thinking this looks a whole lot like traditional",
    "start": "480319",
    "end": "485759"
  },
  {
    "start": "481000",
    "end": "556000"
  },
  {
    "text": "pki i've got something that's basically a certificate and i've got something that's basically a root certificate",
    "start": "485759",
    "end": "491120"
  },
  {
    "text": "bundle and you'd be right we're using open standards here but there's a key difference which is that s-vids and trust bundles",
    "start": "491120",
    "end": "498720"
  },
  {
    "text": "are rotating frequently they're rotating every couple of hours so in traditional pki",
    "start": "498720",
    "end": "504400"
  },
  {
    "text": "if you compromise a certificate if you're a bad guy you obtain a certificate that's really",
    "start": "504400",
    "end": "509440"
  },
  {
    "text": "bad you have basically unlimited access to the identity of that certificate maybe for months or years in",
    "start": "509440",
    "end": "516880"
  },
  {
    "text": "spiffy those s-vids and those trust bundles they're rotating every couple of hours",
    "start": "516880",
    "end": "522640"
  },
  {
    "text": "so if you compromise something the blast radius is very small you only have a very limited window",
    "start": "522640",
    "end": "527680"
  },
  {
    "text": "where you can actually access anything on the network now there is a big problem here which is that you have to use the",
    "start": "527680",
    "end": "533360"
  },
  {
    "text": "workload api in order to get your svid and your trust bundle you can't just download the s-vid",
    "start": "533360",
    "end": "538959"
  },
  {
    "text": "download the trust bundle put them in a container put them in a vm deploy them later and be able to use them for months or",
    "start": "538959",
    "end": "545600"
  },
  {
    "text": "years like you could with the traditional certificate because these are rotating all the time you have to use the workload api for",
    "start": "545600",
    "end": "552720"
  },
  {
    "text": "each service to get its current test vid and its current trust bundle now that we've talked about the spiffy",
    "start": "552720",
    "end": "557839"
  },
  {
    "start": "556000",
    "end": "783000"
  },
  {
    "text": "standard for service identity we can talk about the spire implementation of that standard spire consists of two components the",
    "start": "557839",
    "end": "564800"
  },
  {
    "text": "spire server which is responsible for generating and signing all the s vids in the entire",
    "start": "564800",
    "end": "570399"
  },
  {
    "text": "system and then the spire agent which sits on each node and is responsible for serving the workload api",
    "start": "570399",
    "end": "578959"
  },
  {
    "text": "when the spire agent first starts up it performs a task called no data station in no data station the agent proves the",
    "start": "579839",
    "end": "586640"
  },
  {
    "text": "identity of the node to the spire server so if the agent is running on an amazon ec2 instance",
    "start": "586640",
    "end": "592800"
  },
  {
    "text": "it can collect the ec2 instance identity document and send it to the spire server and",
    "start": "592800",
    "end": "598240"
  },
  {
    "text": "that's a cryptographically signed document that proves that the node is who it says it is",
    "start": "598240",
    "end": "604000"
  },
  {
    "text": "if it's physical hardware maybe it gets a key from the trusted platform module of that physical hardware",
    "start": "604000",
    "end": "610240"
  },
  {
    "text": "and uses that to prove its identity to the spire server if it's running in kubernetes kubernetes",
    "start": "610240",
    "end": "616560"
  },
  {
    "text": "provides a mechanism for proving that a particular pod is running on a particular node and it uses that to prove its identity",
    "start": "616560",
    "end": "623040"
  },
  {
    "text": "to the spire server once the spire server has that information in some cases",
    "start": "623040",
    "end": "628480"
  },
  {
    "text": "it needs to talk to the api server for whatever platform you're running on so for ec2 this actually isn't mandatory",
    "start": "628480",
    "end": "634880"
  },
  {
    "text": "but it can collect some extra information from the ec2 api server for kubernetes",
    "start": "634880",
    "end": "640720"
  },
  {
    "text": "you actually do have to take a token that's returned from the local node apis and then send that to the api",
    "start": "640720",
    "end": "647600"
  },
  {
    "text": "server through something called the token review api and then the spire server can guarantee",
    "start": "647600",
    "end": "653120"
  },
  {
    "text": "that that spire agent is running on the node that it says it's running on now right now we have implementations",
    "start": "653120",
    "end": "659839"
  },
  {
    "text": "for a couple of different platforms amazon web services ec2 microsoft azure",
    "start": "659839",
    "end": "666079"
  },
  {
    "text": "google cloud and kubernetes and we're working on more all the time",
    "start": "666079",
    "end": "672640"
  },
  {
    "text": "once no data station is complete the spire agent has proven its identity to the spire",
    "start": "672640",
    "end": "677680"
  },
  {
    "text": "server and the spire server has an entry in its database indicating for sure that that spire agent is",
    "start": "677680",
    "end": "683519"
  },
  {
    "text": "running on the expected node once that's complete we perform another task called workload attestation",
    "start": "683519",
    "end": "690959"
  },
  {
    "text": "so first of all uh the spire server is constantly sending every spire agent a list of all the workloads that are",
    "start": "690959",
    "end": "697120"
  },
  {
    "text": "expected to run on that spire egypt then when a workload connects to the workload api remember it's a node local",
    "start": "697120",
    "end": "703680"
  },
  {
    "text": "api that requires no authentication then the spire agent checks the details of that workload",
    "start": "703680",
    "end": "709680"
  },
  {
    "text": "that's connecting and checks it against the list of expected workloads",
    "start": "709680",
    "end": "715680"
  },
  {
    "text": "gets the right spiffy id svids and trust bundles for that workload and sends them over",
    "start": "715680",
    "end": "720880"
  },
  {
    "text": "the workload api and remember this is changing constantly it's changing rapidly so it's constantly",
    "start": "720880",
    "end": "726240"
  },
  {
    "text": "pushing these to the workload and again we support some platforms we support kubernetes we support docker",
    "start": "726240",
    "end": "732720"
  },
  {
    "text": "we support raw linux processes uh and we're working on more all the time",
    "start": "732720",
    "end": "738720"
  },
  {
    "text": "so once you have one workload that has its asvid trust bundle and spiffy id and then you do the same process on a",
    "start": "739440",
    "end": "746240"
  },
  {
    "text": "different node to give it its svid trust bundle and spiffy id uh then they can communicate",
    "start": "746240",
    "end": "752639"
  },
  {
    "text": "securely uh now we don't specify how you communicate securely typically this",
    "start": "752639",
    "end": "758720"
  },
  {
    "text": "would be a mutual tls encrypted connection but there are other ways of doing it that make more sense in different",
    "start": "758720",
    "end": "764320"
  },
  {
    "text": "contexts so we're not a service mesh we don't route the traffic between the two nodes",
    "start": "764320",
    "end": "769440"
  },
  {
    "text": "all we do is allow you to prove your identity uh if you're one service in a",
    "start": "769440",
    "end": "774480"
  },
  {
    "text": "multi-service system now we have secure communication which is the goal of a zero trust network",
    "start": "774480",
    "end": "782720"
  },
  {
    "start": "783000",
    "end": "899000"
  },
  {
    "text": "remember that we had uh specific platforms that we supported for no data station and for workload attestation it's",
    "start": "784320",
    "end": "791600"
  },
  {
    "text": "important that spire is a plugable architecture so we have all these plug-in interfaces on both the agent side and the server",
    "start": "791600",
    "end": "798079"
  },
  {
    "text": "side that let you add new support for new platforms as they're as they're developed so we have multiple",
    "start": "798079",
    "end": "805120"
  },
  {
    "text": "workload tester plugins some for the operating system uh different container runtimes uh for",
    "start": "805120",
    "end": "810959"
  },
  {
    "text": "the cubelet you could add more there as uh especially as different container runtimes are developed or different",
    "start": "810959",
    "end": "817279"
  },
  {
    "text": "workload orchestration engines are developed uh on the um both the spire agent and the spire",
    "start": "817279",
    "end": "823519"
  },
  {
    "text": "server have noda tester plug-ins and you need a matching node tester plug-in on the agent side and the server side",
    "start": "823519",
    "end": "830320"
  },
  {
    "text": "and these plugins uh can implement different cloud platforms so if you wanted to support digitalocean",
    "start": "830320",
    "end": "836800"
  },
  {
    "text": "you could easily write a plugin for that uh and we have existing plugins like i said for google cloud",
    "start": "836800",
    "end": "842000"
  },
  {
    "text": "platform microsoft azure amazon web services etc",
    "start": "842000",
    "end": "847120"
  },
  {
    "text": "another type of plugin that's very important is called an upstream authority plugin and what this plugin does is every time",
    "start": "847120",
    "end": "853440"
  },
  {
    "text": "the spire server needs its own new root certificate it uses the upstream authority plugin",
    "start": "853440",
    "end": "858959"
  },
  {
    "text": "which can then talk to some external service to get that root certificate for spire and remember",
    "start": "858959",
    "end": "864240"
  },
  {
    "text": "the spire server is rotating its root certificate frequently every couple of hours so it'll make this call pretty",
    "start": "864240",
    "end": "869279"
  },
  {
    "text": "frequently uh it's common to use the upstream authority plug-in to get a root certificate from something",
    "start": "869279",
    "end": "876000"
  },
  {
    "text": "else that ties into your organization's pki infrastructure if you have some standards in your organization already",
    "start": "876000",
    "end": "882800"
  },
  {
    "text": "about who needs to sign certificates another option is actually using another spire server",
    "start": "882800",
    "end": "888240"
  },
  {
    "text": "as the upstream authority so you can have a nested tree of spire servers and we'll talk about that in a few minutes",
    "start": "888240",
    "end": "894639"
  },
  {
    "text": "uh another important design consideration for spire that you need to understand is that it's really designed for defense",
    "start": "894639",
    "end": "901760"
  },
  {
    "start": "899000",
    "end": "931000"
  },
  {
    "text": "in depth so if an attacker compromises one spire agent it can't issue identities that are",
    "start": "901760",
    "end": "908480"
  },
  {
    "text": "intended for another spire agent and this is very important because you might have 10 000 spire agents",
    "start": "908480",
    "end": "914320"
  },
  {
    "text": "throughout your infrastructure and maybe one of them gets compromised because it's sitting on some edge node",
    "start": "914320",
    "end": "919519"
  },
  {
    "text": "that is poorly protected but even if it can talk to the spire server it's not trusted",
    "start": "919519",
    "end": "924959"
  },
  {
    "text": "to just request any s vid for the entire system it has a very restricted list of svids that it can request now that we've",
    "start": "924959",
    "end": "932560"
  },
  {
    "start": "931000",
    "end": "941000"
  },
  {
    "text": "talked about spiffy inspire we can start talking about practical ways to use spiffy inspire within your applications",
    "start": "932560",
    "end": "938399"
  },
  {
    "text": "there are three main ways for a service to get its own sved trust bundle and spiffy id uh the first",
    "start": "938399",
    "end": "944560"
  },
  {
    "text": "way is by directly accessing the workload api and we provide libraries for java and go",
    "start": "944560",
    "end": "950480"
  },
  {
    "text": "that make that really easy and we're working on a python library and then your workload can just call a function and get its own svid and then",
    "start": "950480",
    "end": "957680"
  },
  {
    "text": "use that to establish a mutual tls connection or present that to other services as proof of its",
    "start": "957680",
    "end": "963680"
  },
  {
    "text": "identity the second way is for workloads that you can't easily modify",
    "start": "963680",
    "end": "969120"
  },
  {
    "start": "967000",
    "end": "1021000"
  },
  {
    "text": "and that's to use an envoy proxy and that envoy proxy then talks to the spire agent",
    "start": "969120",
    "end": "974320"
  },
  {
    "text": "and gets the acid and uses that for incoming and outgoing communication and optionally in this configuration you",
    "start": "974320",
    "end": "981519"
  },
  {
    "text": "can use open policy agent to make authorization decisions this is actually a really useful design pattern",
    "start": "981519",
    "end": "987839"
  },
  {
    "text": "because open policy agent supports a wide variety of flexibility for which spiffy ids can talk to your",
    "start": "987839",
    "end": "994639"
  },
  {
    "text": "workload using a very fancy configuration language called regal so then you can outsource all the",
    "start": "994639",
    "end": "1001440"
  },
  {
    "text": "responsibility for deciding who gets to talk to your workload to open policy agent",
    "start": "1001440",
    "end": "1007519"
  },
  {
    "text": "which means your workload doesn't have to worry about it and you can change it in configuration files instead of in code",
    "start": "1007519",
    "end": "1013360"
  },
  {
    "text": "so this is actually the most common way right now to use spiffy identities within your infrastructure",
    "start": "1013360",
    "end": "1019120"
  },
  {
    "text": "and then the last way this is a little bit more rare but this is really good for workloads that already provide their",
    "start": "1019120",
    "end": "1024798"
  },
  {
    "start": "1021000",
    "end": "1066000"
  },
  {
    "text": "own authorization framework in particular databases like postgres",
    "start": "1024799",
    "end": "1029839"
  },
  {
    "text": "this is called the spiffy helper which is a process that we provide that talks to the spire agent over the",
    "start": "1029839",
    "end": "1036480"
  },
  {
    "text": "workload api it gets your svid and trust bundle and then it feeds that into the workload",
    "start": "1036480",
    "end": "1042079"
  },
  {
    "text": "using a script and it just uses a shell script that's really easy to write and again this is really useful for",
    "start": "1042079",
    "end": "1049280"
  },
  {
    "text": "databases like postgres that already have their own concept of users with different levels of access",
    "start": "1049280",
    "end": "1054720"
  },
  {
    "text": "permission because then the spiffy helper can just map those s-vids that it gets and map those to",
    "start": "1054720",
    "end": "1062400"
  },
  {
    "text": "users with with different permission levels within the database now that we know the basics of using spiffy inspire",
    "start": "1062400",
    "end": "1068960"
  },
  {
    "start": "1066000",
    "end": "1156000"
  },
  {
    "text": "identities in your workloads we can talk about some zero trust design patterns that i think everyone should",
    "start": "1068960",
    "end": "1074080"
  },
  {
    "text": "know about in order to take the most advantage of spiffy inspire in their environments",
    "start": "1074080",
    "end": "1079440"
  },
  {
    "text": "the first design pattern is high availability the spire server is actually stateless",
    "start": "1079440",
    "end": "1084960"
  },
  {
    "text": "it stores everything in a data store and we support several different types of data stores if you use a high availability data",
    "start": "1084960",
    "end": "1091360"
  },
  {
    "text": "store then you can run multiple copies of aspire and multiple instances of that data store and",
    "start": "1091360",
    "end": "1097520"
  },
  {
    "text": "have an active active high availability configuration so this means that if spire server 1 or",
    "start": "1097520",
    "end": "1104960"
  },
  {
    "text": "data store 1 or spire server 2 or data store 2 crash",
    "start": "1104960",
    "end": "1110240"
  },
  {
    "text": "uh or the instances that are on get deleted or all kinds of different things can happen then spire continues to run this is",
    "start": "1110240",
    "end": "1117280"
  },
  {
    "text": "really important because spire needs to be high availability if spire goes down",
    "start": "1117280",
    "end": "1123039"
  },
  {
    "text": "then very quickly those assets are going to start to expire and your workloads will no longer be able to communicate",
    "start": "1123039",
    "end": "1128960"
  },
  {
    "text": "with each other so it's very important that the spire servers be deployed in a high availability configuration",
    "start": "1128960",
    "end": "1135200"
  },
  {
    "text": "uh so this is one design pattern that i think every organization that is looking at spiffy inspire",
    "start": "1135200",
    "end": "1140720"
  },
  {
    "text": "needs to think about you can have these different spire servers in different availability zones or running on different racks if you're",
    "start": "1140720",
    "end": "1146880"
  },
  {
    "text": "on physical infrastructure so they're less likely to fail together",
    "start": "1146880",
    "end": "1152160"
  },
  {
    "text": "and bring down your whole spiffy identity infrastructure the next design pattern i'd like to talk",
    "start": "1152160",
    "end": "1158720"
  },
  {
    "start": "1156000",
    "end": "1206000"
  },
  {
    "text": "about is using separate trust domains for separate environments with separate spire servers so you can have a dev",
    "start": "1158720",
    "end": "1164799"
  },
  {
    "text": "environment with one spire server and a prod environment with a different spire server and then these the workloads in the dev",
    "start": "1164799",
    "end": "1171280"
  },
  {
    "text": "environment won't be able to talk to the prod uh environment workloads because their s",
    "start": "1171280",
    "end": "1177120"
  },
  {
    "text": "vids won't validate against each other so this is really useful if you have multiple environments",
    "start": "1177120",
    "end": "1182160"
  },
  {
    "text": "that need to be completely isolated even if they're running maybe on multiple different clouds multiple different",
    "start": "1182160",
    "end": "1187840"
  },
  {
    "text": "on-prem servers uh multiple different kubernetes clusters it would be challenging to isolate them",
    "start": "1187840",
    "end": "1194000"
  },
  {
    "text": "normally but by using separate spire servers you can have completely separate trust domains",
    "start": "1194000",
    "end": "1199120"
  },
  {
    "text": "and completely isolated environments this is one of the key advantages when you're just getting started with spiffy",
    "start": "1199120",
    "end": "1204840"
  },
  {
    "text": "inspire the next xero trust design pattern i'd like to talk about is something that many of our users are just getting",
    "start": "1204840",
    "end": "1211120"
  },
  {
    "start": "1206000",
    "end": "1280000"
  },
  {
    "text": "started with right now so you have some ci cd system continuous integration and continuous delivery",
    "start": "1211120",
    "end": "1218400"
  },
  {
    "text": "that takes your source code every time you make a change to the source code it is updating a container image with a",
    "start": "1218400",
    "end": "1225760"
  },
  {
    "text": "compiled version of that new source code and uploading that to some artifact repository",
    "start": "1225760",
    "end": "1230880"
  },
  {
    "text": "or container registry you can tie that in to the spire infrastructure",
    "start": "1230880",
    "end": "1236480"
  },
  {
    "text": "so the hash of that container is tied to a specific spiffy id and then only that container",
    "start": "1236480",
    "end": "1242240"
  },
  {
    "text": "will ever be able to get that spiffy id so this is really useful for high security environments",
    "start": "1242240",
    "end": "1248080"
  },
  {
    "text": "because even if an attacker compromises the contents of the container later on and replaces some binary add some",
    "start": "1248080",
    "end": "1253919"
  },
  {
    "text": "scripts uh because the container hash has changed it will never be able to get the spiffy",
    "start": "1253919",
    "end": "1260000"
  },
  {
    "text": "id it's supposed to get so this is really good for high security environments where you really want to be able to tie",
    "start": "1260000",
    "end": "1266159"
  },
  {
    "text": "up a spiffy id to a specific build hash it is challenging to set up though",
    "start": "1266159",
    "end": "1271200"
  },
  {
    "text": "because you need to have some scripts in your ci cd system that talk to the spire server",
    "start": "1271200",
    "end": "1276559"
  },
  {
    "text": "and configure the spiffy ids and build hashes",
    "start": "1276559",
    "end": "1281440"
  },
  {
    "start": "1280000",
    "end": "1330000"
  },
  {
    "text": "the next design pattern i'd like to talk about is using spiffy ids to talk to a secret store",
    "start": "1281760",
    "end": "1287520"
  },
  {
    "text": "so you probably already have a secret storing your infrastructure hashicorp vault is one of the popular ones although there are plenty of others",
    "start": "1287520",
    "end": "1295280"
  },
  {
    "text": "you can use your workload spiffy id to authenticate to the secret store and then you can talk to that secret",
    "start": "1295280",
    "end": "1301919"
  },
  {
    "text": "store get a credential and use that credential to access some non-spiffy aware service so this is really useful if you want to",
    "start": "1301919",
    "end": "1308799"
  },
  {
    "text": "gradually deploy spiffy inspire throughout your infrastructure without just having to do a big bang and spiffy",
    "start": "1308799",
    "end": "1314960"
  },
  {
    "text": "eyes every service all at the same time and then gradually you can replace those hard-coded credentials in the secret",
    "start": "1314960",
    "end": "1321120"
  },
  {
    "text": "store with a zero trust pattern and use spiffy authentication to talk to them",
    "start": "1321120",
    "end": "1326159"
  },
  {
    "text": "so this is a really good way to gradually roll out spire over time",
    "start": "1326159",
    "end": "1332480"
  },
  {
    "start": "1330000",
    "end": "1415000"
  },
  {
    "text": "the next design pattern is in the same vein uh in this design pattern you use something called oidc federation",
    "start": "1332480",
    "end": "1339679"
  },
  {
    "text": "uh so the spire server can provide its trust bundle its root certificates in a format called oyadc federation and",
    "start": "1339679",
    "end": "1347360"
  },
  {
    "text": "this is supported by a couple of different external apis the big one is aws and aws allows you to",
    "start": "1347360",
    "end": "1353840"
  },
  {
    "text": "map uh different oidc identities to aws im identities so the net result",
    "start": "1353840",
    "end": "1361679"
  },
  {
    "text": "is that you have some workload that's running uh in your spire environment that workload can access the aws api",
    "start": "1361679",
    "end": "1369600"
  },
  {
    "text": "uh it will automatically be granted an iam identity and then it can use the aws api for all",
    "start": "1369600",
    "end": "1375440"
  },
  {
    "text": "kinds of different purposes maybe accessing database in an amazon rds database uh",
    "start": "1375440",
    "end": "1383200"
  },
  {
    "text": "so the cool part about this is you can have thousands of processes that are running",
    "start": "1383280",
    "end": "1388559"
  },
  {
    "text": "on-prem and they can talk directly to the aws api without ever having any fixed access",
    "start": "1388559",
    "end": "1394159"
  },
  {
    "text": "token or secret key for aws uh which is really great for",
    "start": "1394159",
    "end": "1399520"
  },
  {
    "text": "security and really great for managing those credentials so oitc federation is really a key",
    "start": "1399520",
    "end": "1405520"
  },
  {
    "text": "feature for a lot of organizations that are using aws some of the other cloud providers are starting to support oidc",
    "start": "1405520",
    "end": "1411840"
  },
  {
    "text": "they're not quite as mature yet but they'll get there the next zero truss design pattern is",
    "start": "1411840",
    "end": "1418799"
  },
  {
    "start": "1415000",
    "end": "1499000"
  },
  {
    "text": "called nested spire and nested spiral looks a lot like high availability at first um",
    "start": "1418799",
    "end": "1423919"
  },
  {
    "text": "in this design pattern you've got a global spire server and then you've got multiple intermediary spire servers",
    "start": "1423919",
    "end": "1430880"
  },
  {
    "text": "that function as intermediate certificate authorities so each one of these intermediary spire servers lowered down",
    "start": "1430880",
    "end": "1437279"
  },
  {
    "text": "is repeatedly fetching its root certificate from the global spire server",
    "start": "1437279",
    "end": "1442799"
  },
  {
    "text": "every couple of hours and then it's talking to all the actual aspire agents that authenticate workloads the",
    "start": "1442799",
    "end": "1449039"
  },
  {
    "text": "advantage of this design pattern is that if the data center on the left goes down it doesn't affect the data",
    "start": "1449039",
    "end": "1454480"
  },
  {
    "text": "center on the right or if the network connection gets really slow between the data center and the left and",
    "start": "1454480",
    "end": "1460400"
  },
  {
    "text": "the global spire server it doesn't affect the data center on the right and this is really useful for separating",
    "start": "1460400",
    "end": "1466960"
  },
  {
    "text": "multiple failure domains we're working with companies who have thousands of servers in different data centers and they",
    "start": "1466960",
    "end": "1472960"
  },
  {
    "text": "really don't want to be in a situation where if access to one data center uh becomes slow",
    "start": "1472960",
    "end": "1478720"
  },
  {
    "text": "or goes down it causes failures in other data centers so nested spire is really ideal for",
    "start": "1478720",
    "end": "1484000"
  },
  {
    "text": "separating failure domains uh each one of these fire servers especially the global server and then",
    "start": "1484000",
    "end": "1489440"
  },
  {
    "text": "each one of the intermediary spire servers should also be high availability itself",
    "start": "1489440",
    "end": "1494480"
  },
  {
    "text": "uh just to further reduce the chances that any one of them will go down",
    "start": "1494480",
    "end": "1500720"
  },
  {
    "start": "1499000",
    "end": "1592000"
  },
  {
    "text": "the next design pattern i'd like to talk about is federation uh so this is this is spiffy federation",
    "start": "1500720",
    "end": "1507279"
  },
  {
    "text": "it's actually specified in the spiffy standards so multiple different implementations of spiffy will be able to talk to each",
    "start": "1507279",
    "end": "1513120"
  },
  {
    "text": "other and in this each spire server has its own trust domain",
    "start": "1513120",
    "end": "1518640"
  },
  {
    "text": "its own set of agents its own set of spiffy ids but what they're doing is they're constantly exchanging trust bundles",
    "start": "1518640",
    "end": "1525520"
  },
  {
    "text": "and feeding those trust bundles to all the spire agents on their side so that means any workload running on",
    "start": "1525520",
    "end": "1530720"
  },
  {
    "text": "the left side will be able to authenticate any workload running on the right side and any workload on the right side will",
    "start": "1530720",
    "end": "1537120"
  },
  {
    "text": "be able to authenticate any workload on the left side what makes this different from nested spire and this is very important",
    "start": "1537120",
    "end": "1544640"
  },
  {
    "text": "is that these are still two independents fire servers with separate trust domains in separate configuration so this is really good if",
    "start": "1544640",
    "end": "1552159"
  },
  {
    "text": "uh the system on the left is owned by one company and the system on the right is owned by another company",
    "start": "1552159",
    "end": "1557760"
  },
  {
    "text": "and they want to be able to communicate without trusting each other fully or in some organizations you may have",
    "start": "1557760",
    "end": "1562960"
  },
  {
    "text": "multiple different divisions that need to be able to communicate without being able to trust each other fully so federation is",
    "start": "1562960",
    "end": "1570640"
  },
  {
    "text": "really useful for separating security domains it isn't designed to separate failure domains as much as",
    "start": "1570640",
    "end": "1577600"
  },
  {
    "text": "nested spire and you still need to use high availability in order to make sure that if one's fire",
    "start": "1577600",
    "end": "1584000"
  },
  {
    "text": "server goes down nothing bad happens but it's really good for separating security concerns between one",
    "start": "1584000",
    "end": "1589919"
  },
  {
    "text": "organization and another organization i'm a software engineer on spire i'm not in sales and marketing so i really like",
    "start": "1589919",
    "end": "1596240"
  },
  {
    "start": "1592000",
    "end": "1608000"
  },
  {
    "text": "to talk about the roadmap for features working on inspire we are just about hitting our aspire 1.0",
    "start": "1596240",
    "end": "1601600"
  },
  {
    "text": "release with all the features i've discussed so far but we have a lot on board for releases after 1.0",
    "start": "1601600",
    "end": "1609200"
  },
  {
    "start": "1608000",
    "end": "1811000"
  },
  {
    "text": "the first item on the roadmap and one of the ones that will make spire that will improve spire the most",
    "start": "1609919",
    "end": "1615840"
  },
  {
    "text": "is having an improved data store layer so right now we support using mysql or postgresql as that data store",
    "start": "1615840",
    "end": "1622640"
  },
  {
    "text": "layer where we store all the information about what nodes are attested what spiffy ideas are available to be",
    "start": "1622640",
    "end": "1628480"
  },
  {
    "text": "granted that kind of thing that's a little bit limiting so we're working on an improved data store",
    "start": "1628480",
    "end": "1633760"
  },
  {
    "text": "interface that will let you talk to all kinds of different distributed databases as the data store",
    "start": "1633760",
    "end": "1639120"
  },
  {
    "text": "layer that will improve our performance and production readiness uh across the board so that's one of the",
    "start": "1639120",
    "end": "1644559"
  },
  {
    "text": "things i'm most looking forward to uh the next thing is support for trusted platform modules",
    "start": "1644559",
    "end": "1650000"
  },
  {
    "text": "so you might know this hpe is the largest server company in the entire world every server we make has a trusted",
    "start": "1650000",
    "end": "1656720"
  },
  {
    "text": "platform module which is a secure chip that comes built in with a certificate signed by hpe",
    "start": "1656720",
    "end": "1663520"
  },
  {
    "text": "now we should be able to use those tpms as a source of truth for no data station",
    "start": "1663520",
    "end": "1668960"
  },
  {
    "text": "right now that feature isn't quite there but we are working on it and it will be available soon and then when you buy a server from hpe",
    "start": "1668960",
    "end": "1676159"
  },
  {
    "text": "or any other company that provides a server with a trusted platform module you'll be able to plug it in and perform no data",
    "start": "1676159",
    "end": "1682720"
  },
  {
    "text": "station right away the next feature we're working on is support for serverless functions",
    "start": "1682720",
    "end": "1689279"
  },
  {
    "text": "so you might know this in a lot of cloud infrastructure now uh sort of the glue is serverless",
    "start": "1689279",
    "end": "1694840"
  },
  {
    "text": "functions these things don't require an instance to run they don't require a kubernetes cluster",
    "start": "1694840",
    "end": "1700799"
  },
  {
    "text": "they're just built into the cloud environment amazon calls them lambda functions",
    "start": "1700799",
    "end": "1706399"
  },
  {
    "text": "google calls them cloud functions every cloud provider has these we're working on a really good mechanism",
    "start": "1706399",
    "end": "1712000"
  },
  {
    "text": "for supporting spiffy ids in serverless functions that isn't there because there's no agent",
    "start": "1712000",
    "end": "1717120"
  },
  {
    "text": "there's no obvious place to get the spiffy id and we're working on some glue that will generate spiffy ids and feed",
    "start": "1717120",
    "end": "1723840"
  },
  {
    "text": "them into the serverless functions so then they can talk to other traditional non-serverless services",
    "start": "1723840",
    "end": "1729840"
  },
  {
    "text": "securely the next big feature we're working on is something called certificate",
    "start": "1729840",
    "end": "1734880"
  },
  {
    "text": "transparency and this is actually coming from the folks who are at bike dance uh the company that",
    "start": "1734880",
    "end": "1740000"
  },
  {
    "text": "makes tick tock uh they really want this feature in certificate transparency every",
    "start": "1740000",
    "end": "1746399"
  },
  {
    "text": "certificate that's generated is added to a certificate log and that certificate is uh generated in",
    "start": "1746399",
    "end": "1752559"
  },
  {
    "text": "a very clever way where it's cryptographically verifiable what was added to it so every single",
    "start": "1752559",
    "end": "1758000"
  },
  {
    "text": "s-vid that's been generated uh across your entire infrastructure maybe many different",
    "start": "1758000",
    "end": "1763279"
  },
  {
    "text": "spire servers many different trust domains will go into this auditable log and then you'll be able to set up some",
    "start": "1763279",
    "end": "1769279"
  },
  {
    "text": "alarms so that if something goes wrong if someone gets in and manages to generate fake bad s-vids you find out right away",
    "start": "1769279",
    "end": "1777679"
  },
  {
    "text": "and the last thing is improved kubernetes support so right now we already have kubernetes no data station and workload data",
    "start": "1777679",
    "end": "1784320"
  },
  {
    "text": "station like i mentioned uh what we're working on is making it more automatic",
    "start": "1784320",
    "end": "1789360"
  },
  {
    "text": "and again this is this is a contribution that's coming from outside hpe uh",
    "start": "1789360",
    "end": "1794480"
  },
  {
    "text": "we're working on a workload registrar that will go through your kubernetes configuration",
    "start": "1794480",
    "end": "1800080"
  },
  {
    "text": "and automatically do the uh rel the relevant spire configuration so that every kubernetes pod that starts",
    "start": "1800080",
    "end": "1806799"
  },
  {
    "text": "up automatically gets its own spiffy id that you can then use to establish zero trust so i've actually",
    "start": "1806799",
    "end": "1812640"
  },
  {
    "start": "1811000",
    "end": "1900000"
  },
  {
    "text": "been working on spire for about two and a half years and virtually that entire time whenever i talked about it to anyone",
    "start": "1812640",
    "end": "1817919"
  },
  {
    "text": "they always asked who's using it and i always had to say well no one yeah uh but at this point in 2020 we're",
    "start": "1817919",
    "end": "1825360"
  },
  {
    "text": "getting to the point where a number of big companies are using it so first of all we have some cncf projects that are ingesting spire",
    "start": "1825360",
    "end": "1832159"
  },
  {
    "text": "wholesale and using it as their identity plane within a different infrastructure",
    "start": "1832159",
    "end": "1837200"
  },
  {
    "text": "product so kuma and network service mesh fall into that category and you can see other talks",
    "start": "1837200",
    "end": "1842240"
  },
  {
    "text": "about those cncf projects at this conference then in terms of end users there are a",
    "start": "1842240",
    "end": "1847360"
  },
  {
    "text": "ton of big companies that are rolling spire out across their infrastructure because they're trying to go to zero trust uh bike dance which makes the tick",
    "start": "1847360",
    "end": "1855039"
  },
  {
    "text": "tock app uber square github bloomberg stripe anthem uh transferwise those companies",
    "start": "1855039",
    "end": "1862320"
  },
  {
    "text": "have all given public talks on using spiffy inspire that you can google and they're all linked to from the",
    "start": "1862320",
    "end": "1867519"
  },
  {
    "text": "spiffy website uh there are other companies that uh won't talk about it but are starting to roll out spiffy inspire",
    "start": "1867519",
    "end": "1874399"
  },
  {
    "text": "uh finally the last end user is really cool hpe also owns cray super computers which",
    "start": "1874399",
    "end": "1880320"
  },
  {
    "text": "makes the fastest super computers in the world so in a couple of years these exa scale",
    "start": "1880320",
    "end": "1885440"
  },
  {
    "text": "super computers with millions of cores will have spire running on every single node in order to provide",
    "start": "1885440",
    "end": "1891360"
  },
  {
    "text": "zero trust identity to super computing workloads which is really cool uh it's really cool that we've gotten",
    "start": "1891360",
    "end": "1896880"
  },
  {
    "text": "this far in just a couple of years lastly i'd like to talk about the next",
    "start": "1896880",
    "end": "1903200"
  },
  {
    "start": "1900000",
    "end": "1906000"
  },
  {
    "text": "steps for adopting zero trust with spiffy inspire uh first of all we have a website with",
    "start": "1903200",
    "end": "1908240"
  },
  {
    "start": "1906000",
    "end": "1975000"
  },
  {
    "text": "tons of documentation and links to every presentation we've ever done on smithy inspire that you can click and",
    "start": "1908240",
    "end": "1914080"
  },
  {
    "text": "watch uh we also did a community day as part of this conference with people from a number of different",
    "start": "1914080",
    "end": "1920159"
  },
  {
    "text": "companies talking about how they're using spiffy inspire we also have a very active slack community",
    "start": "1920159",
    "end": "1926000"
  },
  {
    "text": "this is separate from the cncf slack in the kubernetes slack it's a zone slack community uh with people from from a number of",
    "start": "1926000",
    "end": "1932480"
  },
  {
    "text": "different companies hundreds of different people talking about how to roll out zero trust security",
    "start": "1932480",
    "end": "1937760"
  },
  {
    "text": "using spiffy inspire uh we've got our own twitter of course uh follow us on twitter and we've got a",
    "start": "1937760",
    "end": "1943840"
  },
  {
    "text": "book coming out soon i actually worked on this book along with about 10 other people it's being published by hpe",
    "start": "1943840",
    "end": "1949760"
  },
  {
    "text": "uh if you shoot me an email i'd be happy to send you a pdf of the book or even a paper copy uh i think it's really good my favorite",
    "start": "1949760",
    "end": "1956480"
  },
  {
    "text": "part of the book is that it has five detailed case studies for how how certain companies are using",
    "start": "1956480",
    "end": "1962559"
  },
  {
    "text": "spiffy inspire in real life and why they made the decision to go with spiffy inspire",
    "start": "1962559",
    "end": "1967840"
  },
  {
    "text": "uh i think those case studies are incredibly valuable if you're thinking about making a case for spiffy inspire to your",
    "start": "1967840",
    "end": "1973519"
  },
  {
    "text": "management so with that i'd like to thank everyone for watching again my name is daniel",
    "start": "1973519",
    "end": "1979200"
  },
  {
    "start": "1975000",
    "end": "1988000"
  },
  {
    "text": "feldman i work in hpe security engineering here's my email address follow me on twitter shoot me an email",
    "start": "1979200",
    "end": "1985760"
  },
  {
    "text": "to follow up and i think we have a few minutes for questions",
    "start": "1985760",
    "end": "1990559"
  }
]