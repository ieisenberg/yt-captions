[
  {
    "text": "thanks for joining our talk how Mercedes-Benz is securing 900 kubernetes clusters uh without part security",
    "start": "80",
    "end": "6480"
  },
  {
    "text": "policies my name is toas giz I'm a software engineer working for Mercedes-Benz Tech Innovation since",
    "start": "6480",
    "end": "12960"
  },
  {
    "text": "2017 I'm a certified kubernetes security specialist and I'm involved into kubernetes since I think 1.7 or",
    "start": "12960",
    "end": "20680"
  },
  {
    "text": "something um I'm a former maintainer of the cluster API provider for open stack and I really love hearing and collecting",
    "start": "20680",
    "end": "28000"
  },
  {
    "text": "records and I also love optimize my home office desk",
    "start": "28000",
    "end": "33239"
  },
  {
    "text": "setup yeah my name is t rash I'm also working as a software engineer at Mercedes ben Tech Innovation uh I've",
    "start": "33239",
    "end": "39800"
  },
  {
    "text": "been working with kubernetes since about version 130 I'm not really sure I'm very",
    "start": "39800",
    "end": "46079"
  },
  {
    "text": "active in the local kubernetes commun community for example I'm the initiator of uh the kubernetes Meetup in our",
    "start": "46079",
    "end": "51960"
  },
  {
    "text": "beautiful suian hometown of and got a few ERS here and also I love making and",
    "start": "51960",
    "end": "58440"
  },
  {
    "text": "teaching music especially playing the drums so uh we work for a company called Mercedes-Benz Tech Innovation uh which",
    "start": "58440",
    "end": "65518"
  },
  {
    "text": "is a 100% subsidiary and strategic partner of Pharm mercedesbenz uh our company has been developing software",
    "start": "65519",
    "end": "71799"
  },
  {
    "text": "phaces Ben since 25 years yeah uh we have around 400 employees who work in",
    "start": "71799",
    "end": "78360"
  },
  {
    "text": "different business streams they're called One customer car car sales car after sales and of course from our point",
    "start": "78360",
    "end": "84600"
  },
  {
    "text": "of view view the most important stream Technologies in security where few people provide cyber security services",
    "start": "84600",
    "end": "91000"
  },
  {
    "text": "for all of Mercedes-Benz and of course we the platform engineering guys uh provide cloud services and",
    "start": "91000",
    "end": "96520"
  },
  {
    "text": "infrastructure for all of mercedesbenz uh so our team runs the main managed coronatus platform for all",
    "start": "96520",
    "end": "103799"
  },
  {
    "text": "of Mercedes-Benz we run round about thousand kubernetes cluster uh we cannot",
    "start": "103799",
    "end": "109040"
  },
  {
    "text": "say the exact number at the moment because it's a full Sal service platform so uh every uh engineering team at",
    "start": "109040",
    "end": "116039"
  },
  {
    "text": "Mercedes-Benz could provision or deprovision a cluster at any time but it's around thousand uh they run in",
    "start": "116039",
    "end": "123039"
  },
  {
    "text": "eight different zones so uh data centers which are located in two geographic regions one in Germany one in the",
    "start": "123039",
    "end": "129879"
  },
  {
    "text": "US and uh they run on premises and in the public Cloud we provide",
    "start": "129879",
    "end": "136959"
  },
  {
    "text": "both so uh before we can go into the deep details and how we work in our security setup uh we have first have to",
    "start": "137120",
    "end": "144360"
  },
  {
    "text": "explain what managed kues actually means at Mercedes-Benz um so our engineering",
    "start": "144360",
    "end": "150239"
  },
  {
    "text": "teams don't have to think about kubernetes operations at all that means they don't have any access to the nodes",
    "start": "150239",
    "end": "155720"
  },
  {
    "text": "so no sshing into the nodes but also they don't have to think about stuff like what operating system is the note",
    "start": "155720",
    "end": "161319"
  },
  {
    "text": "running what's the network infrastructure looking like stuff like that they don't have to think about that at all second maybe even more important",
    "start": "161319",
    "end": "168120"
  },
  {
    "text": "aspect is that we have very strict Security lockdowns on all of our clusters um to so our customers have to",
    "start": "168120",
    "end": "176120"
  },
  {
    "text": "think less about comm's operations for examples no engineering team team can start root containers on our platform",
    "start": "176120",
    "end": "182319"
  },
  {
    "text": "they're not allowed to um Mount host path volumes and also which is a bit",
    "start": "182319",
    "end": "187599"
  },
  {
    "text": "more tricky to implement we totally block system name spaces so for example uh no engineering team but us can access",
    "start": "187599",
    "end": "195319"
  },
  {
    "text": "any resources or change or edit them within Cube system for example yeah and how we actually did or",
    "start": "195319",
    "end": "202799"
  },
  {
    "text": "implemented that before our upgrade to validating emission policies is Toby's time now yeah thanks okay so let's talk",
    "start": "202799",
    "end": "210400"
  },
  {
    "text": "about a bit about this status quo of kubernetes 124 which was one year ago in our case so we used PSPs or po security",
    "start": "210400",
    "end": "217879"
  },
  {
    "text": "policies to enforce uh the pot Security in our kubernetes clusters also we're",
    "start": "217879",
    "end": "223120"
  },
  {
    "text": "using open policy agent this is running as a stoic pot manifest because we have",
    "start": "223120",
    "end": "228319"
  },
  {
    "text": "to um run this completely independent because we add this pot or this",
    "start": "228319",
    "end": "234760"
  },
  {
    "text": "container as a q AP server parameter because we're using the authorization web hook",
    "start": "234760",
    "end": "240400"
  },
  {
    "text": "um also we are handling validating web Hooks and like I said the authorization web hook let's take a deeper look into",
    "start": "240400",
    "end": "246000"
  },
  {
    "text": "the authorization web hook or more like the cube flow of an API server",
    "start": "246000",
    "end": "251200"
  },
  {
    "text": "request so here you can see the complete workflow a user creates a yl or a get",
    "start": "251200",
    "end": "257160"
  },
  {
    "text": "request um and first the authentication and authorization web hook will come in place so here we can handle for example",
    "start": "257160",
    "end": "264919"
  },
  {
    "text": "um the deny of a impersonate or we also deny the deletion of nodes and so on",
    "start": "264919",
    "end": "271720"
  },
  {
    "text": "next step is the mutating emission controller here we can default things or update things and next step is the",
    "start": "271720",
    "end": "279080"
  },
  {
    "text": "object scheme validation this must be after the mutation because we want to",
    "start": "279080",
    "end": "284160"
  },
  {
    "text": "check if the or kubernetes checks if the scheme is valid um and last but not",
    "start": "284160",
    "end": "289199"
  },
  {
    "text": "least the validating admission controllers web hook so here we can validate if the Manifest is valid or not",
    "start": "289199",
    "end": "296120"
  },
  {
    "text": "if we want to allow it or deny um I we'll talk about this later but we we",
    "start": "296120",
    "end": "301520"
  },
  {
    "text": "are using validating emission policies and this is the same step here last but not least it will be stored in the ETS",
    "start": "301520",
    "end": "307880"
  },
  {
    "text": "and it's done okay so let's give you a quick overview about the complete",
    "start": "307880",
    "end": "313320"
  },
  {
    "text": "journey of our replacement of Po security policies first like I already said we are using po security",
    "start": "313320",
    "end": "320280"
  },
  {
    "text": "policies and the next step we try to use kerno or gatekeeper and other policy",
    "start": "320280",
    "end": "326080"
  },
  {
    "text": "engines but uh this was not really feasible because we have performance issues we have uh we had benchmarking we",
    "start": "326080",
    "end": "333120"
  },
  {
    "text": "will see this later and we had request responses up to 11 seconds and this is",
    "start": "333120",
    "end": "338400"
  },
  {
    "text": "completely nogo last but not least the validating emission policies started to evolve with kubernetes 126 and this is",
    "start": "338400",
    "end": "346560"
  },
  {
    "text": "where we are know okay so ch um yeah sorry you may be noticed there's one",
    "start": "346560",
    "end": "354080"
  },
  {
    "text": "thing missing on on the slides and it's the pot security standards so why don't we notice this here",
    "start": "354080",
    "end": "361639"
  },
  {
    "text": "yeah for those of you uh exactly following the development of policy enforcement and and pot Security in",
    "start": "361639",
    "end": "367639"
  },
  {
    "text": "kubernetes you may ask yourself wait uh pot security policies were removed after 124 but they added pot security",
    "start": "367639",
    "end": "374400"
  },
  {
    "text": "admission and the the feature of pot security standards um and to be totally",
    "start": "374400",
    "end": "379759"
  },
  {
    "text": "clear pot security standards are a really great and wellth thought out feature um it's basically just you can",
    "start": "379759",
    "end": "386080"
  },
  {
    "text": "categorize a pot and map it to one of uh the available security standards and then",
    "start": "386080",
    "end": "392440"
  },
  {
    "text": "kubernetes will automatically uh enforce very same default security uh practices on that pod uh so that is pretty great",
    "start": "392440",
    "end": "401000"
  },
  {
    "text": "because you don't have to think about that at all people who really know their stuff the core maintainers will always",
    "start": "401000",
    "end": "406560"
  },
  {
    "text": "uh update the PO security standards so no matter what API changes or future changes happen in kubernetes the",
    "start": "406560",
    "end": "413280"
  },
  {
    "text": "standard will always be up to date and you don't really have to think about pot security at all and while this",
    "start": "413280",
    "end": "418720"
  },
  {
    "text": "opinionated matter is very good for that reason it's also bad for us for the same",
    "start": "418720",
    "end": "424000"
  },
  {
    "text": "reason because it is very opinionated and it gets in the very low details but uh for example we have down on a",
    "start": "424000",
    "end": "431280"
  },
  {
    "text": "capability level things we want to allow which po security standards would block",
    "start": "431280",
    "end": "436360"
  },
  {
    "text": "uh a very concrete example for that is the net admin capability if you want to know more about that uh my colleagues",
    "start": "436360",
    "end": "442759"
  },
  {
    "text": "Toby and Mario he's somewhere in the audience uh once wrote an article why I want to allow that on medium and we also",
    "start": "442759",
    "end": "449120"
  },
  {
    "text": "have a few CIS cuddles we want to allow and stuff like that so we're very detailed uh so let's real quick uh talk",
    "start": "449120",
    "end": "455560"
  },
  {
    "text": "about what we actually would need from a custom policy solution uh first of all and I think",
    "start": "455560",
    "end": "461039"
  },
  {
    "text": "already quite well explained is we need a very flexible way to define policies for pots but also it would be cool if we",
    "start": "461039",
    "end": "468560"
  },
  {
    "text": "could uh Define policies for other resources as well for deployments Chrome jobs stuff like that but that's a pure",
    "start": "468560",
    "end": "475479"
  },
  {
    "text": "user experience issue another thing that's very important for us is uh thing we call cluster pollution uh so",
    "start": "475479",
    "end": "483800"
  },
  {
    "text": "we we're a very large organization there are several thousand Engineers uh working with our kubernetes clusters um",
    "start": "483800",
    "end": "490680"
  },
  {
    "text": "so there are several thousand opinions on which tools are the best to use and stuff like that um and we want to enable",
    "start": "490680",
    "end": "497280"
  },
  {
    "text": "customers to use the tools they want and so if we would Implement our custom",
    "start": "497280",
    "end": "502400"
  },
  {
    "text": "policy solution with tools needing for example Uh custom resources other cluster scoped resources uh we would",
    "start": "502400",
    "end": "509120"
  },
  {
    "text": "hinder the user or the consumer of clusters the engineering teams from using the same tool so we'd really like",
    "start": "509120",
    "end": "515719"
  },
  {
    "text": "to keep out of uh the customer space there and last but not at all least it's",
    "start": "515719",
    "end": "522039"
  },
  {
    "text": "very important for us but actually for everyone who wants to really run secure pods uh enforced to also be able to",
    "start": "522039",
    "end": "528680"
  },
  {
    "text": "mutate resources uh that sounds a bit weird at first but the only reason why",
    "start": "528680",
    "end": "534040"
  },
  {
    "text": "we need that is because kubernetes tends to have quite insecure defaults for some details in uh in pot security uh for",
    "start": "534040",
    "end": "542040"
  },
  {
    "text": "example most of you will probably know the flag uh allow privilege escalation",
    "start": "542040",
    "end": "547440"
  },
  {
    "text": "on a pot if that is not set the kues core will actually default the flag on a",
    "start": "547440",
    "end": "554519"
  },
  {
    "text": "Linux level new new privileges to false so but we would want that to be true to be secure by default that's a very",
    "start": "554519",
    "end": "561160"
  },
  {
    "text": "concrete example of stuff we uh why want to mutate if people don't um don't set",
    "start": "561160",
    "end": "567440"
  },
  {
    "text": "Flags like that at all which most users don't do because probably most users who just want to write a deployment don't",
    "start": "567440",
    "end": "573519"
  },
  {
    "text": "think about that stuff at all which is good that's why we are here the platform team Okay cool so uh now let's take a",
    "start": "573519",
    "end": "580800"
  },
  {
    "text": "look at the main open source tools the players in that field which we could use",
    "start": "580800",
    "end": "586399"
  },
  {
    "text": "which we looked at um the two big players in that space are open policy agent and G um open policy agent and kuo",
    "start": "586399",
    "end": "594480"
  },
  {
    "text": "and we already used open policy agent as a static pot on every note as Toby already explained so that seemed like",
    "start": "594480",
    "end": "601279"
  },
  {
    "text": "the pretty logical choice for us but a very big drawback of uh open policy",
    "start": "601279",
    "end": "606720"
  },
  {
    "text": "agent is that it's very very complex to implement policies with it um it comes",
    "start": "606720",
    "end": "612000"
  },
  {
    "text": "with its own touring complete full-blown programming language just for policies called Rego and we're quite a small team",
    "start": "612000",
    "end": "619519"
  },
  {
    "text": "we're only six people running the Clusters themselves and so we would really like to introduce as little new",
    "start": "619519",
    "end": "626079"
  },
  {
    "text": "technology or technology we're not very familiar with uh as possible also when used in the way we already did",
    "start": "626079",
    "end": "632120"
  },
  {
    "text": "it uh open policy agent is not really kubernetes native because if we wanted to change policies we would have to",
    "start": "632120",
    "end": "637320"
  },
  {
    "text": "change them on the Node somewhere and we cannot do it via the API server uh you",
    "start": "637320",
    "end": "642440"
  },
  {
    "text": "can use open policy agent or the same policy agent uh with gatekeeper then it is kubernetes native you can manage all",
    "start": "642440",
    "end": "647839"
  },
  {
    "text": "policies uh with the API server but in that case uh it pollutes the customer U",
    "start": "647839",
    "end": "653519"
  },
  {
    "text": "the customer cluster as I explained earlier yeah the second really big player is kerno um it Al checks almost",
    "start": "653519",
    "end": "660160"
  },
  {
    "text": "all the boxes you can mutate you can write policies and you can write them in a very kubernetes way is what I'd say it",
    "start": "660160",
    "end": "666000"
  },
  {
    "text": "like everyone who is very experienced writing kubernetes uh manifests will be able to write a kyno policy in quite a",
    "start": "666000",
    "end": "673560"
  },
  {
    "text": "short amount of time um it is kuet is native all policies can be managed via custom",
    "start": "673560",
    "end": "679279"
  },
  {
    "text": "resources and via the API server but it does uh need obviously custom resource",
    "start": "679279",
    "end": "685360"
  },
  {
    "text": "definitions so it would hinder users uh from using C ear themselves but uh that",
    "start": "685360",
    "end": "691800"
  },
  {
    "text": "whole pollution thing is not a hill we're willing to die on it's just something that we really strive for so",
    "start": "691800",
    "end": "696880"
  },
  {
    "text": "uh We've settled actually on kerno in our first iteration so let's talk about what was our experience like with policy",
    "start": "696880",
    "end": "703760"
  },
  {
    "text": "enforcement in cerno it was actually pretty great user experience uh we were able to really achieve a great",
    "start": "703760",
    "end": "709880"
  },
  {
    "text": "readability and a great maintainability it really just reads like normal kubernetes manifest all of us know and",
    "start": "709880",
    "end": "715240"
  },
  {
    "text": "work with daily and we actually had all our policies with which is a quite a large stack and quite complex uh",
    "start": "715240",
    "end": "721720"
  },
  {
    "text": "implemented in a few days and we had to work a bit on our end to-end tests because there were quite po security",
    "start": "721720",
    "end": "727880"
  },
  {
    "text": "policy specific but we had them passing a few days later as well and at that time we thought oh cool goal is reached",
    "start": "727880",
    "end": "734920"
  },
  {
    "text": "uh we're ready to go let's go into U Canary deployment Toby what happened",
    "start": "734920",
    "end": "740279"
  },
  {
    "text": "then yeah thanks dog so the first day of our Canary deployments were like this",
    "start": "740279",
    "end": "746920"
  },
  {
    "text": "this little Fell's looking like at not really cool it was pretty disappointing",
    "start": "746920",
    "end": "752199"
  },
  {
    "text": "so for example we have a canary cluster customer that is using a development cluster and he is deploying a lot of",
    "start": "752199",
    "end": "758760"
  },
  {
    "text": "controllers and operators into it and these controllers are updating the pods",
    "start": "758760",
    "end": "764199"
  },
  {
    "text": "every 10 seconds so they update the annotations and labels and because of this and also because of a failure of us",
    "start": "764199",
    "end": "771519"
  },
  {
    "text": "um kerno also enforce or mutated things during a pot update H this is not",
    "start": "771519",
    "end": "778079"
  },
  {
    "text": "necessary because everything thing is um is is not able to change it's uh",
    "start": "778079",
    "end": "783839"
  },
  {
    "text": "immutable beside for the image but um yeah this was a failable us but we had to Benchmark the kerno controller",
    "start": "783839",
    "end": "791519"
  },
  {
    "text": "somehow so we have to stress test it and we have to take care of this so we started benchmarking so how we did how",
    "start": "791519",
    "end": "798399"
  },
  {
    "text": "did we did this we're using k6 from gra FAL labs and to be compatible to a real",
    "start": "798399",
    "end": "804240"
  },
  {
    "text": "cluster we used kind and add a Max quarter of two CPUs to to this because",
    "start": "804240",
    "end": "810079"
  },
  {
    "text": "our smallest control plane nodes have also two two CPUs and in this case we are some kind of equival",
    "start": "810079",
    "end": "817480"
  },
  {
    "text": "equivalent um we used 100 virtual users as a parameter for case six and also",
    "start": "817480",
    "end": "823519"
  },
  {
    "text": "1,000 iterations this means that during the stress testing we we are doing 100,000 API requests to the Q API server",
    "start": "823519",
    "end": "832320"
  },
  {
    "text": "um to do an API request we use the simple pot manifest which is a valid manifest without any specif ifications",
    "start": "832320",
    "end": "839680"
  },
  {
    "text": "just an image name security context and that's it and also we we we use the dry",
    "start": "839680",
    "end": "845000"
  },
  {
    "text": "run for this okay so let's take a look at the benchmarks yeah and this is pretty awful",
    "start": "845000",
    "end": "852120"
  },
  {
    "text": "so po security policies responds during the stress load with a maximum response",
    "start": "852120",
    "end": "857680"
  },
  {
    "text": "time of4 seconds and kerno is at 11 to 12 seconds um the medium response time",
    "start": "857680",
    "end": "866120"
  },
  {
    "text": "is at 4 seconds and the minimal response time is longer than the maximum response",
    "start": "866120",
    "end": "872160"
  },
  {
    "text": "time from Port security policies this is not really feasible for our Fleet because if you take green it principles",
    "start": "872160",
    "end": "879279"
  },
  {
    "text": "in mind this scales nowhere so we have to take a look at um of of Alternatives",
    "start": "879279",
    "end": "887639"
  },
  {
    "text": "so we went back to the drawing board and created a battle plan so we create we we",
    "start": "887639",
    "end": "893079"
  },
  {
    "text": "had three little teams and each team is doing their own things so we had one team for the open policy agent",
    "start": "893079",
    "end": "899480"
  },
  {
    "text": "implementation so we we have it already implemented there's an existing setup",
    "start": "899480",
    "end": "904560"
  },
  {
    "text": "but someone has to write the policies for it to replace the port security policies next we had a team that is um",
    "start": "904560",
    "end": "912160"
  },
  {
    "text": "there to use a to write a custom controller so we can do this because we have enough knowledge to create",
    "start": "912160",
    "end": "917920"
  },
  {
    "text": "controllers we're using Cube builder for this and it's pretty easy to do this so this team is is creating the custom",
    "start": "917920",
    "end": "924120"
  },
  {
    "text": "controller then also another team is uh improving our benchmarking speed for",
    "start": "924120",
    "end": "929399"
  },
  {
    "text": "this talk we used this improved benchmarking Suite but we had to implement this somehow okay so uh while",
    "start": "929399",
    "end": "937079"
  },
  {
    "text": "this is a really good plan but um we are running out of time because we are currently want to update from 124 to 125",
    "start": "937079",
    "end": "945079"
  },
  {
    "text": "but 126 is already around the corner so we have to think about this as well",
    "start": "945079",
    "end": "950319"
  },
  {
    "text": "because we don't want to tell behind too far okay so um we created a plan for this as well so we can easily update our",
    "start": "950319",
    "end": "958360"
  },
  {
    "text": "control plan from 124 to 125 and if this is done we can update the control plans",
    "start": "958360",
    "end": "963959"
  },
  {
    "text": "to 126 and regarding the kubernetes school policy we are then able to update",
    "start": "963959",
    "end": "969560"
  },
  {
    "text": "all of our worker notes to 12 126 in One update step so so this is pretty cool um",
    "start": "969560",
    "end": "977000"
  },
  {
    "text": "during during uh during reading the release notes of 126 we then found in",
    "start": "977000",
    "end": "982360"
  },
  {
    "text": "our case the Holy Grail because validating emission policy started to uh",
    "start": "982360",
    "end": "987480"
  },
  {
    "text": "evolve in kubernetes with 126 and we can use this Alpha feature easily because we",
    "start": "987480",
    "end": "993120"
  },
  {
    "text": "have a really good end to end test um test suite and we can test this and add",
    "start": "993120",
    "end": "998639"
  },
  {
    "text": "this also to production okay cool but what are validating emission policies um validating admission",
    "start": "998639",
    "end": "1005959"
  },
  {
    "text": "policies allows us to add custom admission logic um and we can do this",
    "start": "1005959",
    "end": "1011519"
  },
  {
    "text": "and and create this to to customize it to our needs as well okay and also it is",
    "start": "1011519",
    "end": "1017880"
  },
  {
    "text": "lightning or pretty fast thanks to inmemory abstract syntax tree and also",
    "start": "1017880",
    "end": "1023399"
  },
  {
    "text": "like Chu uh uh talked to said it before there's no additional control and also",
    "start": "1023399",
    "end": "1029360"
  },
  {
    "text": "no crd needed because we don't want to pollute our customer clusters okay cool",
    "start": "1029360",
    "end": "1035120"
  },
  {
    "text": "um that is really high level but what is a validating emission policy in Technic yeah uh so let's just build some",
    "start": "1035120",
    "end": "1041839"
  },
  {
    "text": "validating emission policies right um by the way the image you can see that's how my grandmother imagines my job I mean",
    "start": "1041839",
    "end": "1048079"
  },
  {
    "text": "I'm an engineer at Mercedes right okay so let's talk about",
    "start": "1048079",
    "end": "1053600"
  },
  {
    "text": "validating admission policies um very basic what we want to do is uh we have an input the admission request we want",
    "start": "1053600",
    "end": "1059919"
  },
  {
    "text": "to do some custom logic and then we want to arrive at a policy decision a cool feature which validate emission policies",
    "start": "1059919",
    "end": "1066120"
  },
  {
    "text": "actually support but which is optional is we can also Define a um custom",
    "start": "1066120",
    "end": "1071440"
  },
  {
    "text": "Resource as input as well for validating emission policies so we can inject U",
    "start": "1071440",
    "end": "1077400"
  },
  {
    "text": "custom configuration values um yeah the admission request I guess is pretty clear it comes from the API",
    "start": "1077400",
    "end": "1083360"
  },
  {
    "text": "server it's just contains what the user actually wants to do uh let's take a",
    "start": "1083360",
    "end": "1089000"
  },
  {
    "text": "look at uh an example validating emission policy to see how we can configure uh the custom Resource as",
    "start": "1089000",
    "end": "1094120"
  },
  {
    "text": "input uh so this is a very very basic uh validating admission policy and if you",
    "start": "1094120",
    "end": "1100320"
  },
  {
    "text": "have a detailed look you can see the param kide property and it's just a custom resource reference in there our",
    "start": "1100320",
    "end": "1108360"
  },
  {
    "text": "custom resource is called admission exception um we have lots of custom controllers running as well in all of",
    "start": "1108360",
    "end": "1114120"
  },
  {
    "text": "our clusters because we have like cool cluster add-ons it's basically my main job to develop them for our users and",
    "start": "1114120",
    "end": "1120400"
  },
  {
    "text": "some sometimes uh these sometimes these controllers want to do things which would actually be not",
    "start": "1120400",
    "end": "1126880"
  },
  {
    "text": "allowed in our policies so it's cool for us to have the ability per cluster to uh",
    "start": "1126880",
    "end": "1132520"
  },
  {
    "text": "manage a list of admission exceptions of exceptions to our admission controlers so in our case the custom research is",
    "start": "1132520",
    "end": "1139240"
  },
  {
    "text": "just simply a list of service accounts and their name space yeah but if we have that",
    "start": "1139240",
    "end": "1145679"
  },
  {
    "text": "configured we also need a way to tell kubernetes which custom resource to use as input for the validating emission",
    "start": "1145679",
    "end": "1151120"
  },
  {
    "text": "policy for that uh kubernetes also introduced a new resource called validating emission policy binding and",
    "start": "1151120",
    "end": "1158000"
  },
  {
    "text": "it's very similar to other resource binding types of kubernetes like you probably know cluster roll binding or",
    "start": "1158000",
    "end": "1163120"
  },
  {
    "text": "role binding very similar stuff you have a param ref which just references the uh",
    "start": "1163120",
    "end": "1168280"
  },
  {
    "text": "custom parameter and our case the admission admission exception custom resource uh by name and also you have",
    "start": "1168280",
    "end": "1174520"
  },
  {
    "text": "the policy name which references the uh regarding policy by name okay so we have",
    "start": "1174520",
    "end": "1180200"
  },
  {
    "text": "both our inputs done now we need to implement the custom logic uh yeah we can take another look",
    "start": "1180200",
    "end": "1187760"
  },
  {
    "text": "at our custom uh at our validated emission policy here and see the validations field down there uh in this",
    "start": "1187760",
    "end": "1194520"
  },
  {
    "text": "case we only have one expression but you could actually add as many as you like but for the Simplicity of this talk we",
    "start": "1194520",
    "end": "1200679"
  },
  {
    "text": "only had one um and you can actually see there's a very simple expression written down",
    "start": "1200679",
    "end": "1206120"
  },
  {
    "text": "there in the expression and that's in a new language introduced by Google which is called common expression language or",
    "start": "1206120",
    "end": "1211480"
  },
  {
    "text": "short cell uh what is cell cell was developed by Google explicitly to be used in uh critical code paths so it is",
    "start": "1211480",
    "end": "1220200"
  },
  {
    "text": "evaluated guaranteed to be evaluated in linear time uh that's possible because it is mutation free and not to",
    "start": "1220200",
    "end": "1226760"
  },
  {
    "text": "incomplete I'm very computer science terms it basically just means you cannot do stuff like for Loops you cannot",
    "start": "1226760",
    "end": "1232039"
  },
  {
    "text": "mutate any variables stuff like that um what it means for us is that it's very",
    "start": "1232039",
    "end": "1237280"
  },
  {
    "text": "fast and that's very good and it's guaranteed to be very fast yeah and if",
    "start": "1237280",
    "end": "1242320"
  },
  {
    "text": "we take a very simple example like this one I think probably most if not everybody in this room can already get",
    "start": "1242320",
    "end": "1248720"
  },
  {
    "text": "what that's doing because it's just some expression like it's very similar to other languages we take uh the object",
    "start": "1248720",
    "end": "1254960"
  },
  {
    "text": "which references the input from the admission uh the admission request itself and check if the service account",
    "start": "1254960",
    "end": "1260000"
  },
  {
    "text": "name referenced in this case it would be a deployment is in the list of excluded service accounts so the params is",
    "start": "1260000",
    "end": "1266679"
  },
  {
    "text": "basically referencing the custom input from the crd uh yeah this looks uh cool and very",
    "start": "1266679",
    "end": "1273039"
  },
  {
    "text": "fine but uh I have to warn you if you want to write uh complex complex",
    "start": "1273039",
    "end": "1278880"
  },
  {
    "text": "validation with cell uh this is a more realistic example of how policies look",
    "start": "1278880",
    "end": "1284640"
  },
  {
    "text": "um yeah quite an unreadable mess but we can look at a few details which are actually great examples for downsides of",
    "start": "1284640",
    "end": "1290840"
  },
  {
    "text": "of uh validating emission policies as well so if you look at that part you can see that we have to repeat ourselves a",
    "start": "1290840",
    "end": "1296279"
  },
  {
    "text": "lot because we want it to be like the user experience to also not only validate the pods or security reasons",
    "start": "1296279",
    "end": "1302400"
  },
  {
    "text": "but also to not allow deployments if they have forbidden Parts in them for example so we have to write stuff like",
    "start": "1302400",
    "end": "1308320"
  },
  {
    "text": "this lists of resources we want to check stuff like that and another way more important because security critical",
    "start": "1308320",
    "end": "1314720"
  },
  {
    "text": "detail you have to think a lot about the details of sub resources in Parts there",
    "start": "1314720",
    "end": "1320400"
  },
  {
    "text": "was in 125 a feature introduced called ephemeral containers those are containers running on your node if you",
    "start": "1320400",
    "end": "1326120"
  },
  {
    "text": "forget to enforce policies on them you could just don't use policies at all there's also quite new in the newer",
    "start": "1326120",
    "end": "1333000"
  },
  {
    "text": "versions of cetes now scy car containers nativ you supported and if you're writing it cell you have to write that",
    "start": "1333000",
    "end": "1339039"
  },
  {
    "text": "uh that out all one after another so the gist of it is we we started writing this",
    "start": "1339039",
    "end": "1344799"
  },
  {
    "text": "stuff manually but I quickly realized that it's not fun at all it's also very error prone uh we realized that because",
    "start": "1344799",
    "end": "1351000"
  },
  {
    "text": "we thought we're done but our ENT interest were still failing um so uh you",
    "start": "1351000",
    "end": "1356200"
  },
  {
    "text": "will need if you want to build something like that something to generate your code in our case it was just a quite simple Helm setup because uh all we",
    "start": "1356200",
    "end": "1363799"
  },
  {
    "text": "basically have to do is repeat the policy we want to enforce for Emeral containers and stuff like that but this",
    "start": "1363799",
    "end": "1369080"
  },
  {
    "text": "is very highly dependent on the policies you would want to enforce yeah um so we've got our custom",
    "start": "1369080",
    "end": "1377440"
  },
  {
    "text": "logic implemented as well in cell with some code generation and now we're done",
    "start": "1377440",
    "end": "1382679"
  },
  {
    "text": "it seems like it right we thought that before but now we're done right but there is a detail missing like what",
    "start": "1382679",
    "end": "1389679"
  },
  {
    "text": "about Toby can you tell us more yeah thanks of course um so we also have to",
    "start": "1389679",
    "end": "1395159"
  },
  {
    "text": "think about the mutation oh no it's working here uh we have to think about the mutation of of pot resources so the",
    "start": "1395159",
    "end": "1401520"
  },
  {
    "text": "validation is working but what is with the mutation there's the same feature like the validating emission policies",
    "start": "1401520",
    "end": "1407640"
  },
  {
    "text": "coming in KU 131 hopefully um called mutating emission policies but this is",
    "start": "1407640",
    "end": "1414360"
  },
  {
    "text": "not available currently so we have to think about something different so if we go back to the drawing board we can see",
    "start": "1414360",
    "end": "1420720"
  },
  {
    "text": "okay there was a team building the custom controller okay this is pretty cool because we can remove the",
    "start": "1420720",
    "end": "1426679"
  },
  {
    "text": "validation part but only use the mutation part so we have to mutate the",
    "start": "1426679",
    "end": "1432120"
  },
  {
    "text": "allowed privilege escalation to false and run as nonwood to true that's that's it okay cool now um after this in mind",
    "start": "1432120",
    "end": "1440200"
  },
  {
    "text": "we can say we have a final setup that is pretty cool we have validating uh validation in lightning speed via",
    "start": "1440200",
    "end": "1445840"
  },
  {
    "text": "validating emission policies and we have the mutation over this this tiny custom controller which is really really tiny",
    "start": "1445840",
    "end": "1454000"
  },
  {
    "text": "and that's it so is it really faster than kerno yeah I think it is okay so um our",
    "start": "1454000",
    "end": "1462279"
  },
  {
    "text": "Max response time is at 1.2 seconds and the average response time is at 4 or",
    "start": "1462279",
    "end": "1470240"
  },
  {
    "text": "37 in comparison to Kono it is really much faster cool um so we are done",
    "start": "1470240",
    "end": "1478640"
  },
  {
    "text": "right yeah um I don't think so by the way this is my cat",
    "start": "1478640",
    "end": "1484640"
  },
  {
    "text": "Clyde it's a real photo he's also a kubernetes engineer he committed a file",
    "start": "1484640",
    "end": "1490600"
  },
  {
    "text": "once in our uh repository but this is another another story okay so um but why does he have",
    "start": "1490600",
    "end": "1498960"
  },
  {
    "text": "this skeptical stare so we have kubernetes uh we have the validating emission policies in 126 and Port",
    "start": "1498960",
    "end": "1505840"
  },
  {
    "text": "security policies in 124 but what is with 125 we don't have anything here so",
    "start": "1505840",
    "end": "1512320"
  },
  {
    "text": "let's get let's get back a last one one more time to the drawing board and take",
    "start": "1512320",
    "end": "1517399"
  },
  {
    "text": "a look here so we had there also a team implementing the open policy agent",
    "start": "1517399",
    "end": "1522679"
  },
  {
    "text": "policies so we can use this for 125 with the admission controller and we",
    "start": "1522679",
    "end": "1530720"
  },
  {
    "text": "can use the validating admission policies with the admission controller for 126 that's perfect so we are ready",
    "start": "1530720",
    "end": "1537279"
  },
  {
    "text": "to go okay cool um by the way our future plans are using validating and mutating",
    "start": "1537279",
    "end": "1542760"
  },
  {
    "text": "emission controllers uh policies to remove the HTTP overhead and have everything built in into kubernetes",
    "start": "1542760",
    "end": "1550039"
  },
  {
    "text": "that's very cool okay then let's take a look at the final Benchmark comparison",
    "start": "1550039",
    "end": "1555320"
  },
  {
    "text": "so we have here this our validating emission policies we have PSP underneath and we can see it",
    "start": "1555320",
    "end": "1561919"
  },
  {
    "text": "is even faster than gatekeeper or open policy agent and it it's much more faster than KERO which is really good in",
    "start": "1561919",
    "end": "1569520"
  },
  {
    "text": "our case that is really cool so but let's take a look back what happened",
    "start": "1569520",
    "end": "1575279"
  },
  {
    "text": "since then so we have implemented this the last uh the first two quarters of",
    "start": "1575279",
    "end": "1581000"
  },
  {
    "text": "2023 but kerno improved the performance by far uh especially thanks to our",
    "start": "1581000",
    "end": "1586760"
  },
  {
    "text": "colleague Robin alabach because he has contributed the benchmarking of k6 to",
    "start": "1586760",
    "end": "1591840"
  },
  {
    "text": "kerno and they were able to test this with their implementations and they saw that there was really a downside so they",
    "start": "1591840",
    "end": "1599720"
  },
  {
    "text": "improved it by far and just to notice this kyano also can generate validating",
    "start": "1599720",
    "end": "1605840"
  },
  {
    "text": "emission policies now so you can add sell Al so common expression language to the uh KERO cluster policies and it will",
    "start": "1605840",
    "end": "1613480"
  },
  {
    "text": "create the validating emission policies for us and also we have reporting for this this is quite cool so let's take a",
    "start": "1613480",
    "end": "1620679"
  },
  {
    "text": "look at the kyono 112 benchmarking yeah it is really really better now so we",
    "start": "1620679",
    "end": "1626279"
  },
  {
    "text": "have an average response time of only 1.2 seconds and the minimum response",
    "start": "1626279",
    "end": "1631640"
  },
  {
    "text": "time at one uh 0.1 which is really great and also only possibly because our",
    "start": "1631640",
    "end": "1637000"
  },
  {
    "text": "colleague has contributed everything to the Kono team cool uh but last but not",
    "start": "1637000",
    "end": "1642840"
  },
  {
    "text": "least we have I think a few Lessons Learned and T will talk about it",
    "start": "1642840",
    "end": "1648919"
  },
  {
    "text": "yeah what have we learned uh first of all Benchmark your policies um we mean",
    "start": "1648919",
    "end": "1654000"
  },
  {
    "text": "it really Benchmark your policies uh we would have saved a lot of work if we had thought of this from the beginning yeah",
    "start": "1654000",
    "end": "1661320"
  },
  {
    "text": "and another very important uh thing that we noticed or learned doing this is that good and really tool independent ENT",
    "start": "1661320",
    "end": "1667640"
  },
  {
    "text": "tests are crucial if you want to iterate really quick and if you want to build fast but also fail fast I mean basically",
    "start": "1667640",
    "end": "1674880"
  },
  {
    "text": "we had implemented the same thing three times you could argue even four times but it wasn't that huge of a a that much",
    "start": "1674880",
    "end": "1682320"
  },
  {
    "text": "of a Time invest we did because we could also we could always just build it run the ENT test if it's not red it's wrong",
    "start": "1682320",
    "end": "1689200"
  },
  {
    "text": "but we were very confident if we uh had all of our policy needs um filled up",
    "start": "1689200",
    "end": "1694880"
  },
  {
    "text": "with uh the code we developed another very important thing if you build your own policy solution but this is no",
    "start": "1694880",
    "end": "1701919"
  },
  {
    "text": "matter how you do it you will have to take care of the nitty-gritty details of sub resources on pots and and you will",
    "start": "1701919",
    "end": "1708480"
  },
  {
    "text": "also have to take care that if new features will be added you think about that so you have to very closely monitor",
    "start": "1708480",
    "end": "1714080"
  },
  {
    "text": "everything that's happening in kubernetes development I talked about ephemeral containers and CYO containers",
    "start": "1714080",
    "end": "1719399"
  },
  {
    "text": "before that's the stuff maybe there will be new sub resources added in the future you would have to uh think about that so",
    "start": "1719399",
    "end": "1726519"
  },
  {
    "text": "yeah in the end you can say uh we paid a price for early adoption we really did",
    "start": "1726519",
    "end": "1731919"
  },
  {
    "text": "uh but we really don't mind that I mean we're called Mercedes-Benz Tech Innovation not Tech trail behind or",
    "start": "1731919",
    "end": "1737799"
  },
  {
    "text": "something um yeah and the most important learning is that a pure kubernetes solution is",
    "start": "1737799",
    "end": "1744760"
  },
  {
    "text": "not only feasible and possible but it's also quite maintainable uh we have just basically just a Helm chart rendering a",
    "start": "1744760",
    "end": "1751080"
  },
  {
    "text": "few uh policies I mean I guess everyone in this room has done that before it's not it's no rocket sides it's just",
    "start": "1751080",
    "end": "1757559"
  },
  {
    "text": "kubernetes and so we're actually really really happy with our final solution and we will even be more happier if we can",
    "start": "1757559",
    "end": "1764080"
  },
  {
    "text": "replace that tiny controller still running with mutating admission policies and then we're completely doing all of",
    "start": "1764080",
    "end": "1771120"
  },
  {
    "text": "our validation and mutation within the API server with no HTTP at overhead or anything at all and that's already it",
    "start": "1771120",
    "end": "1779640"
  },
  {
    "text": "thank you very much for listening to our talk uh if you [Applause]",
    "start": "1779640",
    "end": "1785990"
  },
  {
    "text": "have if [Applause] you if you have if you have any",
    "start": "1786679",
    "end": "1792720"
  },
  {
    "text": "questions don't hesitate at all to ask them but please use the two mics uh which are Prov provided so uh the people",
    "start": "1792720",
    "end": "1799880"
  },
  {
    "text": "watching digitally can also hear that and I have to say this it's very important we're hiring and if you're",
    "start": "1799880",
    "end": "1805120"
  },
  {
    "text": "interested in working with us there's a QR code you can scan it and I'd love to become colleagues with probably not all",
    "start": "1805120",
    "end": "1811480"
  },
  {
    "text": "of you but",
    "start": "1811480",
    "end": "1814679"
  },
  {
    "text": "maybe hi hi hi uh thanks for the talk um I'm not um",
    "start": "1822799",
    "end": "1828519"
  },
  {
    "text": "yeah I'm not very really familiar with the validating admission policies feature inside of kubernetes um but as",
    "start": "1828519",
    "end": "1835200"
  },
  {
    "text": "far as I understand like you can only validate stuff that's in the the spec of that resource that being admitted right",
    "start": "1835200",
    "end": "1841600"
  },
  {
    "text": "is that correct that's correct yeah so you might be familiar but in gatekeeper there's a feature called external data",
    "start": "1841600",
    "end": "1847000"
  },
  {
    "text": "provider so it allows you to basically hand off um some validation that can",
    "start": "1847000",
    "end": "1852480"
  },
  {
    "text": "explore some external data that's not in the in the kubernetes resource um do you have any use cases um like that where",
    "start": "1852480",
    "end": "1860039"
  },
  {
    "text": "you want to validate something maybe something to do with the image itself that you need to pass that off to",
    "start": "1860039",
    "end": "1865600"
  },
  {
    "text": "something else and yeah do you think that there's any shortcomings in terms of validating emission policies related",
    "start": "1865600",
    "end": "1871480"
  },
  {
    "text": "to that kind of thing there are definitely shortcomings in valid emission policies regarding that but I",
    "start": "1871480",
    "end": "1877000"
  },
  {
    "text": "wouldn't really call it a shortcoming because these are running in memory within the API server so they're very",
    "start": "1877000",
    "end": "1882880"
  },
  {
    "text": "focused on critical cold Path Performance so stuff like that would would never be possible POS and also",
    "start": "1882880",
    "end": "1888440"
  },
  {
    "text": "will never be possible but um complex validation like that like we do stuff",
    "start": "1888440",
    "end": "1893840"
  },
  {
    "text": "like that for a lot of things but that's nothing that would happen all the time just because someone is uh changing",
    "start": "1893840",
    "end": "1899720"
  },
  {
    "text": "resources on your API server regularly so you could do that with the traditional way of um M uh admission VAP",
    "start": "1899720",
    "end": "1906880"
  },
  {
    "text": "Poes and stuff custom controllers how you'd like but you probably would not want to have that for every single",
    "start": "1906880",
    "end": "1912159"
  },
  {
    "text": "request reaching the IPI server cuz if you run stuff like Argo CD or we have teams running very custom rollers they",
    "start": "1912159",
    "end": "1918679"
  },
  {
    "text": "tend to update resources every few seconds and then you get the problems of huge overhead yeah thank",
    "start": "1918679",
    "end": "1927600"
  },
  {
    "text": "you uh thank you for the talk was really interesting I have a question regarding",
    "start": "1927760",
    "end": "1932799"
  },
  {
    "text": "kerna uh slowness uh so what it based on",
    "start": "1932799",
    "end": "1937880"
  },
  {
    "text": "your setup and what load on your kind of cluster you have and complexity of the",
    "start": "1937880",
    "end": "1944519"
  },
  {
    "text": "policies or the framework in general was slow and doesn't matter matter what kind of policy you use or kind uh load you",
    "start": "1944519",
    "end": "1951399"
  },
  {
    "text": "generate on your cluster I think I think it's a mix of of different things so um",
    "start": "1951399",
    "end": "1957039"
  },
  {
    "text": "T is going back to the a lot of slides so um basically we only use a kind",
    "start": "1957039",
    "end": "1963600"
  },
  {
    "text": "cluster to reproduce our problem with the high load so this is uh exactly the",
    "start": "1963600",
    "end": "1969880"
  },
  {
    "text": "slide you I think this answers everything because we just added a kind",
    "start": "1969880",
    "end": "1975519"
  },
  {
    "text": "cluster without anything in it but we added our complexity our policies to it yeah for sure um but I also think that",
    "start": "1975519",
    "end": "1983240"
  },
  {
    "text": "Cavo is lacking of of of performance even with a single policy we haven't",
    "start": "1983240",
    "end": "1988919"
  },
  {
    "text": "tested this so because we implemented everything that we have done with with PSPs so um maybe this is something we",
    "start": "1988919",
    "end": "1997039"
  },
  {
    "text": "can try I mean our policies are quite complex but the important thing is that these comparisons we implemented the",
    "start": "1997039",
    "end": "2004000"
  },
  {
    "text": "exact same rule set of policies so it is comparable it it's very possible that uh",
    "start": "2004000",
    "end": "2010159"
  },
  {
    "text": "if you have a less complex set of policies kver is totally fine with that but we have a very it's not like it's",
    "start": "2010159",
    "end": "2016519"
  },
  {
    "text": "not rocket science but we have quite detailed and complex policies and the important thing is the compar comparability and we implemented the",
    "start": "2016519",
    "end": "2022960"
  },
  {
    "text": "exact same rule set on all of them we guarantee that thanks to our cool end tests yeah we also tested to remove some",
    "start": "2022960",
    "end": "2030799"
  },
  {
    "text": "special policies from the um kuo setup but it doesn't improve anything there so",
    "start": "2030799",
    "end": "2036799"
  },
  {
    "text": "it's still slow it was still slow cool thank you yeah thanks as well for the nice",
    "start": "2036799",
    "end": "2043840"
  },
  {
    "text": "talk uh I know the pain of getting rid of PPS and uh yes in the end we adopted",
    "start": "2043840",
    "end": "2049520"
  },
  {
    "text": "kivano um what I'm really curious about is uh how does he ENT test up look uh",
    "start": "2049520",
    "end": "2055599"
  },
  {
    "text": "could you outline that maybe in a few sentence do you want to or I can",
    "start": "2055599",
    "end": "2061679"
  },
  {
    "text": "um how does it look like so basically go ahead so basically we are",
    "start": "2061679",
    "end": "2068839"
  },
  {
    "text": "using the Ginko framework to use end to end testing and we are just testing the",
    "start": "2068839",
    "end": "2073919"
  },
  {
    "text": "port creation of different things like we add a root container to it we test",
    "start": "2073919",
    "end": "2079280"
  },
  {
    "text": "that the mutation is working we we test the volumes and so on so it's it just a simple pot creation and that's it so we",
    "start": "2079280",
    "end": "2086079"
  },
  {
    "text": "are not testing we are not end to end testing the deployment demon set validation so because pot is totally",
    "start": "2086079",
    "end": "2092440"
  },
  {
    "text": "fine so basically the setup is specific to the policies those and to end test",
    "start": "2092440",
    "end": "2098480"
  },
  {
    "text": "are specific for uh testing the policies and not like B basically uh we have a",
    "start": "2098480",
    "end": "2104599"
  },
  {
    "text": "set of rules we want to enforce and we have a test coverage for every rule we",
    "start": "2104599",
    "end": "2109839"
  },
  {
    "text": "want to enforce but that test coverage is not dependent on some error message by some tool or something it just checks",
    "start": "2109839",
    "end": "2115880"
  },
  {
    "text": "if it get gets admitted or not okay thanks okay thank you so much for your",
    "start": "2115880",
    "end": "2122119"
  },
  {
    "text": "presentation that was amazing I have just a quick question about policy exception I'm very curious to know how",
    "start": "2122119",
    "end": "2128520"
  },
  {
    "text": "you manage that because I think in this case with close to 900 cluster I'm sure",
    "start": "2128520",
    "end": "2133720"
  },
  {
    "text": "you you need to to have exception and sometimes that you need to have maybe some temporary exception and some",
    "start": "2133720",
    "end": "2139480"
  },
  {
    "text": "permanent exception um and I'm very curious to know how you manage ad here",
    "start": "2139480",
    "end": "2144520"
  },
  {
    "text": "and thanks again yeah uh there's two ways in which we use uh the policy the",
    "start": "2144520",
    "end": "2149880"
  },
  {
    "text": "admission exceptions in our case um we have controllers uh reconciling stuff",
    "start": "2149880",
    "end": "2156000"
  },
  {
    "text": "like we have custom addons for um clusters you can for example deploy isio with a single crd and data do stuff like",
    "start": "2156000",
    "end": "2162760"
  },
  {
    "text": "that and these controllers sometimes if they need to add privileges to some specific stuff are able to um Manu play",
    "start": "2162760",
    "end": "2169960"
  },
  {
    "text": "these crd uh CRS who are deployed in every cluster anyway automatically and",
    "start": "2169960",
    "end": "2175000"
  },
  {
    "text": "the Second Use case is when we have customers who we where we can trust that they know what they're doing or have",
    "start": "2175000",
    "end": "2180920"
  },
  {
    "text": "very specific needs we can also edit this manually and we have tooling that we call it snowflex that those are",
    "start": "2180920",
    "end": "2186720"
  },
  {
    "text": "applied automatically on upgrades and stuff as well this can happen but we never allow the customer to to use root",
    "start": "2186720",
    "end": "2192119"
  },
  {
    "text": "containers or something no of course not but we have very but yeah thank you so much for your answer",
    "start": "2192119",
    "end": "2198599"
  },
  {
    "text": "perfect okay so yeah on our side we are also using CNO and then I would like to",
    "start": "2198599",
    "end": "2203640"
  },
  {
    "text": "as for example you know with kerno you can also do some kind of you know image validation right so then for example you",
    "start": "2203640",
    "end": "2208839"
  },
  {
    "text": "can restrict to certain registry and then you know even to certain version of some uh images is it still possible with",
    "start": "2208839",
    "end": "2216599"
  },
  {
    "text": "this new of course you can validate everything which is inside the spec of a pot and you can validate if it the",
    "start": "2216599",
    "end": "2223160"
  },
  {
    "text": "registry starts with a certain string and yeah you can do this as well of course and then with with kerno is also",
    "start": "2223160",
    "end": "2229720"
  },
  {
    "text": "possible whenever you create like a policy exception to actually say that you know you want to keep it alive only",
    "start": "2229720",
    "end": "2235000"
  },
  {
    "text": "for I don't know x amount of time you know so is yeah that that's not directly possible I mean you could probably",
    "start": "2235000",
    "end": "2241560"
  },
  {
    "text": "create like a scheduled job or something for that time but we don't want to say that kerno is bad it's it's just just",
    "start": "2241560",
    "end": "2247720"
  },
  {
    "text": "doesn't fit to our needs yeah no sure sure K is a really good user experience",
    "start": "2247720",
    "end": "2253040"
  },
  {
    "text": "that's basically the the trade-off right now that stuff like that is not possible it also will not be possible because like we're talking about very core API",
    "start": "2253040",
    "end": "2260560"
  },
  {
    "text": "server features here so they not got to build some scheduled thing in there or",
    "start": "2260560",
    "end": "2266599"
  },
  {
    "text": "something hello uh thanks for the talk I was just uh wondering if any of the policies or maybe the the helm sh you",
    "start": "2268240",
    "end": "2275359"
  },
  {
    "text": "use to render all the sub policy for the sub resources is this open source",
    "start": "2275359",
    "end": "2281079"
  },
  {
    "text": "somewhere or just internal no we're not allowed to open source that we asked but may but maybe we we can do another round",
    "start": "2281079",
    "end": "2288640"
  },
  {
    "text": "so maybe that's feasible somehow if you need it maybe we can do it open source but currently it's not possible okay",
    "start": "2288640",
    "end": "2296040"
  },
  {
    "text": "thank you yep cool thanks thanks for coming to",
    "start": "2296040",
    "end": "2303359"
  },
  {
    "text": "talk",
    "start": "2303359",
    "end": "2306359"
  }
]