[
  {
    "text": "hello",
    "start": "60",
    "end": "1500"
  },
  {
    "text": "all right uh good evening everyone so",
    "start": "1500",
    "end": "4200"
  },
  {
    "text": "I'm a PhD candidate at Tom",
    "start": "4200",
    "end": "6660"
  },
  {
    "text": "uh working in cloud computing so let's",
    "start": "6660",
    "end": "8940"
  },
  {
    "text": "begin",
    "start": "8940",
    "end": "9960"
  },
  {
    "text": "uh if we look at the brief history of",
    "start": "9960",
    "end": "11940"
  },
  {
    "text": "the cloud from bare metal servers to",
    "start": "11940",
    "end": "13799"
  },
  {
    "text": "infrastructure service platform as a",
    "start": "13799",
    "end": "16020"
  },
  {
    "text": "service and then more recently to",
    "start": "16020",
    "end": "18420"
  },
  {
    "text": "serverless Computing AKA function as a",
    "start": "18420",
    "end": "20699"
  },
  {
    "text": "service in which users are only",
    "start": "20699",
    "end": "22500"
  },
  {
    "text": "responsible for writing small pieces of",
    "start": "22500",
    "end": "24300"
  },
  {
    "text": "code called functions deploying them",
    "start": "24300",
    "end": "26160"
  },
  {
    "text": "onto a functional service platform while",
    "start": "26160",
    "end": "28680"
  },
  {
    "text": "all responsibilities around",
    "start": "28680",
    "end": "30439"
  },
  {
    "text": "infrastructure management are",
    "start": "30439",
    "end": "32160"
  },
  {
    "text": "automatically handled by the cloud",
    "start": "32160",
    "end": "33480"
  },
  {
    "text": "provider so some prominent examples of",
    "start": "33480",
    "end": "36420"
  },
  {
    "text": "fast platforms include AWS Lambda Google",
    "start": "36420",
    "end": "39000"
  },
  {
    "text": "Cloud functions Azure functions and IBM",
    "start": "39000",
    "end": "41520"
  },
  {
    "text": "Cloud functions typically these Cloud",
    "start": "41520",
    "end": "44700"
  },
  {
    "text": "providers see around 1.1 billion",
    "start": "44700",
    "end": "46980"
  },
  {
    "text": "functional invocations each day so if we",
    "start": "46980",
    "end": "49680"
  },
  {
    "text": "look at some of the major challenges in",
    "start": "49680",
    "end": "51719"
  },
  {
    "text": "sustainable serverless Computing one of",
    "start": "51719",
    "end": "54000"
  },
  {
    "text": "the challenge is that due to the high",
    "start": "54000",
    "end": "55800"
  },
  {
    "text": "level of abstraction provided by the",
    "start": "55800",
    "end": "58260"
  },
  {
    "text": "fast Computing Paradigm some core new",
    "start": "58260",
    "end": "60600"
  },
  {
    "text": "technologies which enable it consume a",
    "start": "60600",
    "end": "62820"
  },
  {
    "text": "significant amount of energy as compared",
    "start": "62820",
    "end": "64860"
  },
  {
    "text": "to Conventional Technologies so if you",
    "start": "64860",
    "end": "66900"
  },
  {
    "text": "look at firecracker which is a",
    "start": "66900",
    "end": "69180"
  },
  {
    "text": "lightweight microwave VM use in",
    "start": "69180",
    "end": "70680"
  },
  {
    "text": "production AWS Lambda and AWS forget it",
    "start": "70680",
    "end": "73799"
  },
  {
    "text": "consumes a 19 Joule of energy per",
    "start": "73799",
    "end": "75900"
  },
  {
    "text": "function invocation request another",
    "start": "75900",
    "end": "77939"
  },
  {
    "text": "major challenge is that the geographical",
    "start": "77939",
    "end": "80580"
  },
  {
    "text": "region or data center for serverless",
    "start": "80580",
    "end": "82619"
  },
  {
    "text": "function execution is pre-selected",
    "start": "82619",
    "end": "85560"
  },
  {
    "text": "during function deployment in all",
    "start": "85560",
    "end": "87479"
  },
  {
    "text": "commercial fast offerings so as a result",
    "start": "87479",
    "end": "89939"
  },
  {
    "text": "the varying carbon intensities of",
    "start": "89939",
    "end": "92759"
  },
  {
    "text": "different geographical regions are not",
    "start": "92759",
    "end": "95040"
  },
  {
    "text": "considered for execution",
    "start": "95040",
    "end": "97500"
  },
  {
    "text": "to address these challenges we propose",
    "start": "97500",
    "end": "100619"
  },
  {
    "text": "green career green Courier is a",
    "start": "100619",
    "end": "103860"
  },
  {
    "text": "scheduling framework that intelligently",
    "start": "103860",
    "end": "106320"
  },
  {
    "text": "schedules serverless functions across",
    "start": "106320",
    "end": "108659"
  },
  {
    "text": "geographically distributed kubernetes",
    "start": "108659",
    "end": "111119"
  },
  {
    "text": "clusters to minimize carbon emissions",
    "start": "111119",
    "end": "113820"
  },
  {
    "text": "for function execution at runtime so it",
    "start": "113820",
    "end": "116880"
  },
  {
    "text": "builds on kubernetes and K native which",
    "start": "116880",
    "end": "120000"
  },
  {
    "text": "is an open source functional service",
    "start": "120000",
    "end": "121320"
  },
  {
    "text": "platform use in Google Cloud functions",
    "start": "121320",
    "end": "123780"
  },
  {
    "text": "and also Google Cloud run",
    "start": "123780",
    "end": "126240"
  },
  {
    "text": "so green Courier has three main entities",
    "start": "126240",
    "end": "129000"
  },
  {
    "text": "uh users the central control plane and",
    "start": "129000",
    "end": "132959"
  },
  {
    "text": "geographically distributed independent",
    "start": "132959",
    "end": "135120"
  },
  {
    "text": "provider clusters to connect the",
    "start": "135120",
    "end": "137940"
  },
  {
    "text": "provider clusters to the central control",
    "start": "137940",
    "end": "139440"
  },
  {
    "text": "plane we use the open source project",
    "start": "139440",
    "end": "141180"
  },
  {
    "text": "called liko which internally uses",
    "start": "141180",
    "end": "143400"
  },
  {
    "text": "virtual cubelet uh virtual cubelet",
    "start": "143400",
    "end": "146040"
  },
  {
    "text": "cloaks the provided clusters as virtual",
    "start": "146040",
    "end": "148319"
  },
  {
    "text": "nodes and connects them to the",
    "start": "148319",
    "end": "151440"
  },
  {
    "text": "management cluster",
    "start": "151440",
    "end": "153540"
  },
  {
    "text": "using a Frameworks is extremely simple",
    "start": "153540",
    "end": "155580"
  },
  {
    "text": "in the first step users Implement",
    "start": "155580",
    "end": "157800"
  },
  {
    "text": "functions in different programming",
    "start": "157800",
    "end": "159060"
  },
  {
    "text": "languages such as go python node.js or",
    "start": "159060",
    "end": "161160"
  },
  {
    "text": "Java modify the yaml specification file",
    "start": "161160",
    "end": "164220"
  },
  {
    "text": "with our scheduler name and deploy them",
    "start": "164220",
    "end": "166800"
  },
  {
    "text": "onto a management cluster in the Second",
    "start": "166800",
    "end": "169680"
  },
  {
    "text": "Step uh",
    "start": "169680",
    "end": "171480"
  },
  {
    "text": "custom scoring plugin for kubernetes",
    "start": "171480",
    "end": "174120"
  },
  {
    "text": "implemented using the kubernetes",
    "start": "174120",
    "end": "175980"
  },
  {
    "text": "scheduler API scores the independent",
    "start": "175980",
    "end": "178980"
  },
  {
    "text": "provider clusters depending upon the",
    "start": "178980",
    "end": "180959"
  },
  {
    "text": "Region's current carbon efficiency",
    "start": "180959",
    "end": "183120"
  },
  {
    "text": "to get information about uh different",
    "start": "183120",
    "end": "187019"
  },
  {
    "text": "geographical regions uh carbon data we",
    "start": "187019",
    "end": "189780"
  },
  {
    "text": "implemented a metric server which",
    "start": "189780",
    "end": "192239"
  },
  {
    "text": "supports multiple marginal operating",
    "start": "192239",
    "end": "194400"
  },
  {
    "text": "emission rate sources such as what time",
    "start": "194400",
    "end": "196920"
  },
  {
    "text": "and the carbon aware SDK",
    "start": "196920",
    "end": "199459"
  },
  {
    "text": "so it's essentially exposed to the rest",
    "start": "199459",
    "end": "202200"
  },
  {
    "text": "API which is used by the scheduler",
    "start": "202200",
    "end": "205260"
  },
  {
    "text": "plugin after getting the carbon",
    "start": "205260",
    "end": "207239"
  },
  {
    "text": "efficiency scores uh the",
    "start": "207239",
    "end": "211080"
  },
  {
    "text": "plugin assigns the function part to the",
    "start": "211080",
    "end": "214620"
  },
  {
    "text": "provider cluster with the highest",
    "start": "214620",
    "end": "216060"
  },
  {
    "text": "current score and finally after",
    "start": "216060",
    "end": "218220"
  },
  {
    "text": "completion of the port binding cycle the",
    "start": "218220",
    "end": "221099"
  },
  {
    "text": "function can be invoked by the user",
    "start": "221099",
    "end": "224159"
  },
  {
    "text": "so moving on to some evaluation we",
    "start": "224159",
    "end": "226860"
  },
  {
    "text": "experimented with our framework on gke",
    "start": "226860",
    "end": "228900"
  },
  {
    "text": "with K native across multiple",
    "start": "228900",
    "end": "230879"
  },
  {
    "text": "geographically distributed clusters",
    "start": "230879",
    "end": "232560"
  },
  {
    "text": "spread across Europe",
    "start": "232560",
    "end": "234060"
  },
  {
    "text": "uh we use different standardized fast",
    "start": "234060",
    "end": "237480"
  },
  {
    "text": "functions performing different types of",
    "start": "237480",
    "end": "239519"
  },
  {
    "text": "tasks and to emulate actual user",
    "start": "239519",
    "end": "242280"
  },
  {
    "text": "Behavior we used open source uh",
    "start": "242280",
    "end": "244680"
  },
  {
    "text": "production Azure function traces for",
    "start": "244680",
    "end": "247319"
  },
  {
    "text": "generating requests and we compared a",
    "start": "247319",
    "end": "250260"
  },
  {
    "text": "strategy against the default scheduling",
    "start": "250260",
    "end": "251640"
  },
  {
    "text": "in kubernetes and also Azure where",
    "start": "251640",
    "end": "253620"
  },
  {
    "text": "scheduling strategy with uh maximizes",
    "start": "253620",
    "end": "256739"
  },
  {
    "text": "the placement of functions in regions",
    "start": "256739",
    "end": "258540"
  },
  {
    "text": "which are closest to our management",
    "start": "258540",
    "end": "259979"
  },
  {
    "text": "cluster",
    "start": "259979",
    "end": "261359"
  },
  {
    "text": "to quantify and estimate carbon",
    "start": "261359",
    "end": "263759"
  },
  {
    "text": "emissions we use the software carbon",
    "start": "263759",
    "end": "267320"
  },
  {
    "text": "intensity specification developed by the",
    "start": "267320",
    "end": "270240"
  },
  {
    "text": "green software foundation so SCI for any",
    "start": "270240",
    "end": "272940"
  },
  {
    "text": "application can be calculated using the",
    "start": "272940",
    "end": "275040"
  },
  {
    "text": "shown equation and more information",
    "start": "275040",
    "end": "276900"
  },
  {
    "text": "about SCI can also be found here",
    "start": "276900",
    "end": "280500"
  },
  {
    "text": "so looking at some results uh if across",
    "start": "280500",
    "end": "284160"
  },
  {
    "text": "all functions and per function",
    "start": "284160",
    "end": "286320"
  },
  {
    "text": "invocation with our strategy we were",
    "start": "286320",
    "end": "288540"
  },
  {
    "text": "able to reduce uh carbon emissions by",
    "start": "288540",
    "end": "292380"
  },
  {
    "text": "8.7 percent versus the default strategy",
    "start": "292380",
    "end": "295860"
  },
  {
    "text": "and 17.8 percent on average with respect",
    "start": "295860",
    "end": "299340"
  },
  {
    "text": "to the gos strategy uh but there are",
    "start": "299340",
    "end": "302040"
  },
  {
    "text": "also some trade-offs involved uh so uh",
    "start": "302040",
    "end": "304919"
  },
  {
    "text": "across all functions uh and the default",
    "start": "304919",
    "end": "307740"
  },
  {
    "text": "scheduling strategy we observed 10.26",
    "start": "307740",
    "end": "309979"
  },
  {
    "text": "percent geometric mean average slowdown",
    "start": "309979",
    "end": "313080"
  },
  {
    "text": "in response times and 16.24 percent as",
    "start": "313080",
    "end": "316440"
  },
  {
    "text": "compared to the go away strategy so one",
    "start": "316440",
    "end": "318240"
  },
  {
    "text": "of the reasons why it's the performance",
    "start": "318240",
    "end": "320040"
  },
  {
    "text": "is bad with the geo-based strategy is",
    "start": "320040",
    "end": "322199"
  },
  {
    "text": "that uh the most carbon efficient",
    "start": "322199",
    "end": "324720"
  },
  {
    "text": "regions in the experimental Center were",
    "start": "324720",
    "end": "326460"
  },
  {
    "text": "actually the farthest away from a",
    "start": "326460",
    "end": "329100"
  },
  {
    "text": "management cluster leading to higher",
    "start": "329100",
    "end": "331199"
  },
  {
    "text": "response times so thank you uh for",
    "start": "331199",
    "end": "334440"
  },
  {
    "text": "listening so if you have any questions",
    "start": "334440",
    "end": "337139"
  },
  {
    "text": "thank you",
    "start": "337139",
    "end": "339860"
  }
]