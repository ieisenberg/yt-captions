[
  {
    "text": "I'm I'm really excited about being here",
    "start": "240",
    "end": "1560"
  },
  {
    "text": "it's my first time in Europe uh all the",
    "start": "1560",
    "end": "4799"
  },
  {
    "text": "talks have been great so far I've been",
    "start": "4799",
    "end": "6200"
  },
  {
    "text": "running around between both the rooms uh",
    "start": "6200",
    "end": "8760"
  },
  {
    "text": "but I'm here for now uh I hope you're",
    "start": "8760",
    "end": "11240"
  },
  {
    "text": "excited about learning some things about",
    "start": "11240",
    "end": "12679"
  },
  {
    "text": "serverless observability let me start by",
    "start": "12679",
    "end": "15719"
  },
  {
    "text": "telling you who I am I'm rdwan Sharif I",
    "start": "15719",
    "end": "19160"
  },
  {
    "text": "work on observability tools and",
    "start": "19160",
    "end": "21119"
  },
  {
    "text": "solutions uh for different gcp",
    "start": "21119",
    "end": "23840"
  },
  {
    "text": "environments most of my work has been",
    "start": "23840",
    "end": "25800"
  },
  {
    "text": "focused on agents like open elry and",
    "start": "25800",
    "end": "27960"
  },
  {
    "text": "Prometheus and our own agents called the",
    "start": "27960",
    "end": "30480"
  },
  {
    "text": "Ops agent but and getting them to run on",
    "start": "30480",
    "end": "32920"
  },
  {
    "text": "VMS but more recently I've been working",
    "start": "32920",
    "end": "34840"
  },
  {
    "text": "on leveraging open Elementary and",
    "start": "34840",
    "end": "37160"
  },
  {
    "text": "Prometheus uh on serverless environments",
    "start": "37160",
    "end": "39600"
  },
  {
    "text": "like Cloud run I'm here today for like",
    "start": "39600",
    "end": "42480"
  },
  {
    "text": "two main reasons uh the first is I",
    "start": "42480",
    "end": "45000"
  },
  {
    "text": "always wanted to visit Europe and this",
    "start": "45000",
    "end": "46600"
  },
  {
    "text": "way Google pays for it uh and the second",
    "start": "46600",
    "end": "49800"
  },
  {
    "text": "is because for the past 6 months I've",
    "start": "49800",
    "end": "51480"
  },
  {
    "text": "been working on making Google seress",
    "start": "51480",
    "end": "54079"
  },
  {
    "text": "offering called Cloud run uh more",
    "start": "54079",
    "end": "56960"
  },
  {
    "text": "observable there were lots of lessons",
    "start": "56960",
    "end": "58840"
  },
  {
    "text": "along the way and I think",
    "start": "58840",
    "end": "60480"
  },
  {
    "text": "it makes for a good talk I think uh and",
    "start": "60480",
    "end": "62960"
  },
  {
    "text": "a lot of our lessons are very applicable",
    "start": "62960",
    "end": "65320"
  },
  {
    "text": "to the open source world and we just",
    "start": "65320",
    "end": "67119"
  },
  {
    "text": "wanted to make sure we build these",
    "start": "67119",
    "end": "68799"
  },
  {
    "text": "Solutions in OSS as opposed to in",
    "start": "68799",
    "end": "72159"
  },
  {
    "text": "private this is a quick agenda of what",
    "start": "72159",
    "end": "74600"
  },
  {
    "text": "we'll cover we only have like 25 minutes",
    "start": "74600",
    "end": "77439"
  },
  {
    "text": "so we'll stick to some of the basics but",
    "start": "77439",
    "end": "80680"
  },
  {
    "text": "and if you feel like some of these",
    "start": "80680",
    "end": "81799"
  },
  {
    "text": "topics are rushed find me after they",
    "start": "81799",
    "end": "83479"
  },
  {
    "text": "probably are rust but yeah let's just",
    "start": "83479",
    "end": "85600"
  },
  {
    "text": "get",
    "start": "85600",
    "end": "86640"
  },
  {
    "text": "started oh actually let me give tell",
    "start": "86640",
    "end": "89119"
  },
  {
    "text": "tell you what to GR talking about we",
    "start": "89119",
    "end": "90759"
  },
  {
    "text": "we'll cover serverless briefly we'll",
    "start": "90759",
    "end": "92880"
  },
  {
    "text": "talk about some of the problems with",
    "start": "92880",
    "end": "94200"
  },
  {
    "text": "serus observability we'll then cover",
    "start": "94200",
    "end": "96600"
  },
  {
    "text": "some changes we actually made to Cloud",
    "start": "96600",
    "end": "98360"
  },
  {
    "text": "run itself to accommodate observability",
    "start": "98360",
    "end": "101360"
  },
  {
    "text": "and then we'll talk about its",
    "start": "101360",
    "end": "102280"
  },
  {
    "text": "implications on different kinds of",
    "start": "102280",
    "end": "104079"
  },
  {
    "text": "telemetry systems like push based ones",
    "start": "104079",
    "end": "105880"
  },
  {
    "text": "like open tary collector pole based ones",
    "start": "105880",
    "end": "108000"
  },
  {
    "text": "like Prometheus and then we talk about",
    "start": "108000",
    "end": "109960"
  },
  {
    "text": "how we productionize and configure these",
    "start": "109960",
    "end": "112200"
  },
  {
    "text": "agents in the",
    "start": "112200",
    "end": "114000"
  },
  {
    "text": "wild so let's get started what why and",
    "start": "114000",
    "end": "117079"
  },
  {
    "text": "when do we use",
    "start": "117079",
    "end": "118680"
  },
  {
    "text": "serverless now now the premise of",
    "start": "118680",
    "end": "120600"
  },
  {
    "text": "serverless is pretty simple it gives you",
    "start": "120600",
    "end": "122600"
  },
  {
    "text": "the promise of having users only pay for",
    "start": "122600",
    "end": "125200"
  },
  {
    "text": "what they consume uh it scales quickly",
    "start": "125200",
    "end": "127719"
  },
  {
    "text": "and transparently as workloads demands",
    "start": "127719",
    "end": "129800"
  },
  {
    "text": "change it's it's a way of providing the",
    "start": "129800",
    "end": "132160"
  },
  {
    "text": "infrastructure as a service on an paper",
    "start": "132160",
    "end": "136000"
  },
  {
    "text": "use basis uh typically you'll have to",
    "start": "136000",
    "end": "138560"
  },
  {
    "text": "write like code or some configuration",
    "start": "138560",
    "end": "140800"
  },
  {
    "text": "and that's it you don't have to worry",
    "start": "140800",
    "end": "142120"
  },
  {
    "text": "about the underlying infrastructure",
    "start": "142120",
    "end": "143280"
  },
  {
    "text": "anymore and and that's and and Google",
    "start": "143280",
    "end": "146160"
  },
  {
    "text": "serverless offering called Cloud run",
    "start": "146160",
    "end": "149400"
  },
  {
    "text": "offers serverless for containerized",
    "start": "149400",
    "end": "151120"
  },
  {
    "text": "workloads if you have containers you",
    "start": "151120",
    "end": "152959"
  },
  {
    "text": "will you can scale them pretty",
    "start": "152959",
    "end": "155040"
  },
  {
    "text": "seamlessly with Cloud run it implements",
    "start": "155040",
    "end": "157160"
  },
  {
    "text": "the K native serving API and like K",
    "start": "157160",
    "end": "161239"
  },
  {
    "text": "native it attempts to scale to zero what",
    "start": "161239",
    "end": "163200"
  },
  {
    "text": "that means is if your service sees no",
    "start": "163200",
    "end": "165480"
  },
  {
    "text": "traffic you pay for no CPU or memory",
    "start": "165480",
    "end": "168920"
  },
  {
    "text": "costs why you would Ser use serverless",
    "start": "168920",
    "end": "171560"
  },
  {
    "text": "well the main reason is cost it's",
    "start": "171560",
    "end": "173159"
  },
  {
    "text": "generally very cost effective you often",
    "start": "173159",
    "end": "175959"
  },
  {
    "text": "pay a fraction of what you would pay",
    "start": "175959",
    "end": "177159"
  },
  {
    "text": "otherwise because you don't pay for",
    "start": "177159",
    "end": "178560"
  },
  {
    "text": "unused space or idle CPU uh developers",
    "start": "178560",
    "end": "182400"
  },
  {
    "text": "that want to use serverless will not",
    "start": "182400",
    "end": "184840"
  },
  {
    "text": "have to worry about how to scale up",
    "start": "184840",
    "end": "186200"
  },
  {
    "text": "their code and it'll all scale on",
    "start": "186200",
    "end": "189239"
  },
  {
    "text": "demand um it also gives you like a quick",
    "start": "189239",
    "end": "193239"
  },
  {
    "text": "time to Market because you don't have to",
    "start": "193239",
    "end": "195400"
  },
  {
    "text": "worry about like complicated roll out",
    "start": "195400",
    "end": "197760"
  },
  {
    "text": "processes and procedures you can just",
    "start": "197760",
    "end": "199400"
  },
  {
    "text": "write code and the serverless vendor",
    "start": "199400",
    "end": "201239"
  },
  {
    "text": "usually takes care of the rest I really",
    "start": "201239",
    "end": "204000"
  },
  {
    "text": "like this illustration that shows some",
    "start": "204000",
    "end": "206840"
  },
  {
    "text": "of the cost benefit of serverless the",
    "start": "206840",
    "end": "208400"
  },
  {
    "text": "things you see in dark blue there or",
    "start": "208400",
    "end": "210239"
  },
  {
    "text": "your cost savings for because you don't",
    "start": "210239",
    "end": "212760"
  },
  {
    "text": "pay for unused space or idle",
    "start": "212760",
    "end": "216120"
  },
  {
    "text": "CPUs serverless is not a silver bullet",
    "start": "216120",
    "end": "218480"
  },
  {
    "text": "though you don't get to use it for every",
    "start": "218480",
    "end": "220799"
  },
  {
    "text": "problem you encounter uh for cloud run",
    "start": "220799",
    "end": "223080"
  },
  {
    "text": "specifically and other containerized",
    "start": "223080",
    "end": "224560"
  },
  {
    "text": "servs workloads there are very specific",
    "start": "224560",
    "end": "227120"
  },
  {
    "text": "condition conditions you need to satisfy",
    "start": "227120",
    "end": "229120"
  },
  {
    "text": "for you to use it for cloud run you it",
    "start": "229120",
    "end": "231319"
  },
  {
    "text": "has to be requests driven usually HP or",
    "start": "231319",
    "end": "234519"
  },
  {
    "text": "grpc it does not require a local file",
    "start": "234519",
    "end": "237280"
  },
  {
    "text": "system Network file systems or fmal file",
    "start": "237280",
    "end": "239439"
  },
  {
    "text": "systems Network databases are fine",
    "start": "239439",
    "end": "241000"
  },
  {
    "text": "though um your container should be",
    "start": "241000",
    "end": "244560"
  },
  {
    "text": "should be able to handle multiple",
    "start": "244560",
    "end": "246200"
  },
  {
    "text": "instances of the app running",
    "start": "246200",
    "end": "248640"
  },
  {
    "text": "simultaneously and doesn't have like",
    "start": "248640",
    "end": "251120"
  },
  {
    "text": "very strict very high CPU or memory",
    "start": "251120",
    "end": "255120"
  },
  {
    "text": "usage per instance uh and the most",
    "start": "255120",
    "end": "257919"
  },
  {
    "text": "important one is for cloud run",
    "start": "257919",
    "end": "259280"
  },
  {
    "text": "specifically it has to be containerized",
    "start": "259280",
    "end": "261199"
  },
  {
    "text": "they have there are containers that",
    "start": "261199",
    "end": "262880"
  },
  {
    "text": "we're",
    "start": "262880",
    "end": "265080"
  },
  {
    "text": "scaling there exists a perception that",
    "start": "265160",
    "end": "267639"
  },
  {
    "text": "like if you're running containerized",
    "start": "267639",
    "end": "268880"
  },
  {
    "text": "workloads you have to choose between",
    "start": "268880",
    "end": "270440"
  },
  {
    "text": "like Cloud run or kubernetes or some",
    "start": "270440",
    "end": "273160"
  },
  {
    "text": "equivalent but I don't think that's",
    "start": "273160",
    "end": "275479"
  },
  {
    "text": "really true they can and should be used",
    "start": "275479",
    "end": "277479"
  },
  {
    "text": "together I like this sketch because it",
    "start": "277479",
    "end": "281039"
  },
  {
    "text": "kind of gives you a simple illustration",
    "start": "281039",
    "end": "282800"
  },
  {
    "text": "of when to use what resource uh what run",
    "start": "282800",
    "end": "285120"
  },
  {
    "text": "time if you want committed resources use",
    "start": "285120",
    "end": "287280"
  },
  {
    "text": "VMS or kubernetes if you want pay as you",
    "start": "287280",
    "end": "289320"
  },
  {
    "text": "go use one of the servus offerings if",
    "start": "289320",
    "end": "291479"
  },
  {
    "text": "you're using containers evaluate",
    "start": "291479",
    "end": "293680"
  },
  {
    "text": "kubernetes or Cloud run uh yeah and",
    "start": "293680",
    "end": "297000"
  },
  {
    "text": "that's what serverless is now let's talk",
    "start": "297000",
    "end": "298800"
  },
  {
    "text": "about why observability is tricky when",
    "start": "298800",
    "end": "301680"
  },
  {
    "text": "you're dealing with",
    "start": "301680",
    "end": "304320"
  },
  {
    "text": "serverless so on the Spectrum there from",
    "start": "304880",
    "end": "308039"
  },
  {
    "text": "like traditional on premise",
    "start": "308039",
    "end": "310600"
  },
  {
    "text": "instances from all the way to like",
    "start": "310600",
    "end": "313000"
  },
  {
    "text": "software as a service and fun serverless",
    "start": "313000",
    "end": "314840"
  },
  {
    "text": "things you trade off what you manage",
    "start": "314840",
    "end": "317520"
  },
  {
    "text": "with what your serverless vendor manages",
    "start": "317520",
    "end": "319759"
  },
  {
    "text": "for you or your Cloud vendor manages for",
    "start": "319759",
    "end": "322479"
  },
  {
    "text": "you on one end you manage everything",
    "start": "322479",
    "end": "325360"
  },
  {
    "text": "from like the hardware to the operating",
    "start": "325360",
    "end": "326919"
  },
  {
    "text": "system and on the other end you only",
    "start": "326919",
    "end": "328639"
  },
  {
    "text": "manage like maybe the configuration and",
    "start": "328639",
    "end": "330440"
  },
  {
    "text": "maybe some application",
    "start": "330440",
    "end": "332240"
  },
  {
    "text": "code but what does that mean for",
    "start": "332240",
    "end": "334240"
  },
  {
    "text": "observability if your",
    "start": "334240",
    "end": "336479"
  },
  {
    "text": "vendor abstracts away the infrastructure",
    "start": "336479",
    "end": "339400"
  },
  {
    "text": "that you want to observe what does",
    "start": "339400",
    "end": "341319"
  },
  {
    "text": "observability mean in this environment",
    "start": "341319",
    "end": "344440"
  },
  {
    "text": "well sometimes it feels like you're",
    "start": "344440",
    "end": "345840"
  },
  {
    "text": "looking at a brick wall you might be",
    "start": "345840",
    "end": "348199"
  },
  {
    "text": "Flying Blind without access to custom",
    "start": "348199",
    "end": "350680"
  },
  {
    "text": "Telemetry that you really want or you're",
    "start": "350680",
    "end": "352240"
  },
  {
    "text": "used to in the other run times um and",
    "start": "352240",
    "end": "355240"
  },
  {
    "text": "sometimes when you want to add this",
    "start": "355240",
    "end": "356440"
  },
  {
    "text": "Elementary it feels like you're",
    "start": "356440",
    "end": "357440"
  },
  {
    "text": "onboarding onto the Ser the cloud vendor",
    "start": "357440",
    "end": "359880"
  },
  {
    "text": "specific text stack",
    "start": "359880",
    "end": "361960"
  },
  {
    "text": "now I don't mean to say there is no",
    "start": "361960",
    "end": "364000"
  },
  {
    "text": "observability on serverless right now",
    "start": "364000",
    "end": "365639"
  },
  {
    "text": "there certainly is like if you have any",
    "start": "365639",
    "end": "367199"
  },
  {
    "text": "logs that go to standard out or standard",
    "start": "367199",
    "end": "368800"
  },
  {
    "text": "err they usually go to like Cloud",
    "start": "368800",
    "end": "370919"
  },
  {
    "text": "logging or one of the equivalent",
    "start": "370919",
    "end": "372599"
  },
  {
    "text": "backends you also have like a bunch of",
    "start": "372599",
    "end": "375599"
  },
  {
    "text": "buil-in metrics for serverless like this",
    "start": "375599",
    "end": "377880"
  },
  {
    "text": "is an example from from our backend uh",
    "start": "377880",
    "end": "381680"
  },
  {
    "text": "you get request count CPU utilization",
    "start": "381680",
    "end": "384360"
  },
  {
    "text": "you get like counts of running jobs and",
    "start": "384360",
    "end": "385840"
  },
  {
    "text": "a bunch of like built-in metrics that",
    "start": "385840",
    "end": "387199"
  },
  {
    "text": "are quite useful but say you have your",
    "start": "387199",
    "end": "390479"
  },
  {
    "text": "custom application your container is",
    "start": "390479",
    "end": "392120"
  },
  {
    "text": "running some exporter you're running you",
    "start": "392120",
    "end": "394520"
  },
  {
    "text": "want some application custom code that",
    "start": "394520",
    "end": "396120"
  },
  {
    "text": "you've instrumented yourself some things",
    "start": "396120",
    "end": "398319"
  },
  {
    "text": "about your business logic that you have",
    "start": "398319",
    "end": "400199"
  },
  {
    "text": "Telemetry for what",
    "start": "400199",
    "end": "402240"
  },
  {
    "text": "then then you're actually out of look",
    "start": "402240",
    "end": "404759"
  },
  {
    "text": "you might you might you might need to",
    "start": "404759",
    "end": "406880"
  },
  {
    "text": "actually get your hands dirty and add a",
    "start": "406880",
    "end": "408960"
  },
  {
    "text": "considerable amount of complexity to",
    "start": "408960",
    "end": "410319"
  },
  {
    "text": "your",
    "start": "410319",
    "end": "411440"
  },
  {
    "text": "infrastructure and that kind of sucks",
    "start": "411440",
    "end": "413400"
  },
  {
    "text": "from like Google's perspective we would",
    "start": "413400",
    "end": "414919"
  },
  {
    "text": "much rather have that you build an image",
    "start": "414919",
    "end": "417960"
  },
  {
    "text": "you instrument it once with your face",
    "start": "417960",
    "end": "419599"
  },
  {
    "text": "favorite instrumentation whether it be",
    "start": "419599",
    "end": "421120"
  },
  {
    "text": "Prometheus open tet Tre or something",
    "start": "421120",
    "end": "422879"
  },
  {
    "text": "else and you take this container and you",
    "start": "422879",
    "end": "426440"
  },
  {
    "text": "run it across any of these run times uh",
    "start": "426440",
    "end": "429039"
  },
  {
    "text": "and then in instrument and visualize",
    "start": "429039",
    "end": "431639"
  },
  {
    "text": "them the same way this would be like",
    "start": "431639",
    "end": "433840"
  },
  {
    "text": "what ideally we would want except that",
    "start": "433840",
    "end": "436599"
  },
  {
    "text": "serverless Branch there is not really",
    "start": "436599",
    "end": "438919"
  },
  {
    "text": "true it's not as as simple uh because of",
    "start": "438919",
    "end": "442120"
  },
  {
    "text": "a few problems and let's cover them",
    "start": "442120",
    "end": "445280"
  },
  {
    "text": "now now serverless compute is designed",
    "start": "445280",
    "end": "448120"
  },
  {
    "text": "to reduce runtime of service services",
    "start": "448120",
    "end": "450560"
  },
  {
    "text": "this means that instances and serverless",
    "start": "450560",
    "end": "453919"
  },
  {
    "text": "might actually live at an extreme for",
    "start": "453919",
    "end": "455960"
  },
  {
    "text": "exactly one request they might only they",
    "start": "455960",
    "end": "457639"
  },
  {
    "text": "might pop up server request and then the",
    "start": "457639",
    "end": "459560"
  },
  {
    "text": "instance might terminate and so all",
    "start": "459560",
    "end": "461840"
  },
  {
    "text": "Telemetry produced by the serverless",
    "start": "461840",
    "end": "463680"
  },
  {
    "text": "instance will need to export and flush",
    "start": "463680",
    "end": "466319"
  },
  {
    "text": "all their telet very efficiently and",
    "start": "466319",
    "end": "468440"
  },
  {
    "text": "quickly and uh a lot of the",
    "start": "468440",
    "end": "471800"
  },
  {
    "text": "instrumentation libraries that exist",
    "start": "471800",
    "end": "473599"
  },
  {
    "text": "right now don't actually have that",
    "start": "473599",
    "end": "475120"
  },
  {
    "text": "functionality they don't flush Telemetry",
    "start": "475120",
    "end": "477479"
  },
  {
    "text": "on shut down that doesn't happen with",
    "start": "477479",
    "end": "479759"
  },
  {
    "text": "like Prometheus and open sensus for",
    "start": "479759",
    "end": "481120"
  },
  {
    "text": "example open Telemetry does support this",
    "start": "481120",
    "end": "484360"
  },
  {
    "text": "but we don't want to require everyone",
    "start": "484360",
    "end": "486479"
  },
  {
    "text": "just use that for instrumentation here",
    "start": "486479",
    "end": "490400"
  },
  {
    "text": "um and often times what you build for",
    "start": "490400",
    "end": "492759"
  },
  {
    "text": "serverless will be built in a way that's",
    "start": "492759",
    "end": "494639"
  },
  {
    "text": "not very portable you're often writing",
    "start": "494639",
    "end": "496319"
  },
  {
    "text": "containers that are built specifically",
    "start": "496319",
    "end": "497560"
  },
  {
    "text": "for serverless to get around",
    "start": "497560",
    "end": "500680"
  },
  {
    "text": "this admittedly the second problem is",
    "start": "500680",
    "end": "503159"
  },
  {
    "text": "more of a Google problem uh our time",
    "start": "503159",
    "end": "505960"
  },
  {
    "text": "series database Monarch doesn't allow",
    "start": "505960",
    "end": "508319"
  },
  {
    "text": "cumulative metrics",
    "start": "508319",
    "end": "510000"
  },
  {
    "text": "to be stored without start times what",
    "start": "510000",
    "end": "512640"
  },
  {
    "text": "that really means for us is we actually",
    "start": "512640",
    "end": "515680"
  },
  {
    "text": "need two points to report one cumul the",
    "start": "515680",
    "end": "518719"
  },
  {
    "text": "first cumulative point to our time she",
    "start": "518719",
    "end": "520240"
  },
  {
    "text": "database because we cach the first one",
    "start": "520240",
    "end": "522680"
  },
  {
    "text": "and normalize every subsequent point",
    "start": "522680",
    "end": "524440"
  },
  {
    "text": "with it in in serverless this is tricky",
    "start": "524440",
    "end": "527399"
  },
  {
    "text": "because we might not live long enough to",
    "start": "527399",
    "end": "530240"
  },
  {
    "text": "actually have two successful scrapes",
    "start": "530240",
    "end": "532480"
  },
  {
    "text": "because of the previous problem where",
    "start": "532480",
    "end": "533839"
  },
  {
    "text": "instances die very",
    "start": "533839",
    "end": "536160"
  },
  {
    "text": "quickly the third problem is quite",
    "start": "536160",
    "end": "538760"
  },
  {
    "text": "General though",
    "start": "538760",
    "end": "540279"
  },
  {
    "text": "a lot of the Prometheus based scraping",
    "start": "540279",
    "end": "542320"
  },
  {
    "text": "Prometheus based and pull-based metrics",
    "start": "542320",
    "end": "545200"
  },
  {
    "text": "they often require that metrics are",
    "start": "545200",
    "end": "547040"
  },
  {
    "text": "pulled and not pushed from the instance",
    "start": "547040",
    "end": "549760"
  },
  {
    "text": "itself and this is a problem Prometheus",
    "start": "549760",
    "end": "552680"
  },
  {
    "text": "is like pretty opinionated as as",
    "start": "552680",
    "end": "554560"
  },
  {
    "text": "probably all of you know here uh it",
    "start": "554560",
    "end": "556600"
  },
  {
    "text": "assumes that you have like long running",
    "start": "556600",
    "end": "558040"
  },
  {
    "text": "instances that live long enough to be",
    "start": "558040",
    "end": "560120"
  },
  {
    "text": "scraped and discovered they're okay with",
    "start": "560120",
    "end": "562440"
  },
  {
    "text": "missing scrapes and they communicate",
    "start": "562440",
    "end": "564839"
  },
  {
    "text": "with like Local Host and ports a lot of",
    "start": "564839",
    "end": "567720"
  },
  {
    "text": "these assumptions don't actually hold",
    "start": "567720",
    "end": "569160"
  },
  {
    "text": "with serverless vendors um and even if",
    "start": "569160",
    "end": "573200"
  },
  {
    "text": "it did an external Prometheus entity",
    "start": "573200",
    "end": "575160"
  },
  {
    "text": "doing the",
    "start": "575160",
    "end": "576480"
  },
  {
    "text": "scrapes doesn't know the life cycle of",
    "start": "576480",
    "end": "578680"
  },
  {
    "text": "these instances themselves and so what",
    "start": "578680",
    "end": "580640"
  },
  {
    "text": "you'll have is you'll and we'll see an",
    "start": "580640",
    "end": "582040"
  },
  {
    "text": "example shortly you'll have the",
    "start": "582040",
    "end": "583600"
  },
  {
    "text": "Prometheus scraping fail often times uh",
    "start": "583600",
    "end": "586959"
  },
  {
    "text": "there are solutions around this there",
    "start": "586959",
    "end": "588200"
  },
  {
    "text": "are like push gateways and aggregation",
    "start": "588200",
    "end": "589760"
  },
  {
    "text": "gateways actually in in cucon like 2",
    "start": "589760",
    "end": "592399"
  },
  {
    "text": "years ago in Europe there were two talks",
    "start": "592399",
    "end": "595120"
  },
  {
    "text": "about how you",
    "start": "595120",
    "end": "596720"
  },
  {
    "text": "can play around with Prometheus for the",
    "start": "596720",
    "end": "599519"
  },
  {
    "text": "serverless world using aggregation",
    "start": "599519",
    "end": "601120"
  },
  {
    "text": "gateways there talks from like call and",
    "start": "601120",
    "end": "603160"
  },
  {
    "text": "D from cloud flare and fleeting metrics",
    "start": "603160",
    "end": "605320"
  },
  {
    "text": "by like btek and SAS interestingly",
    "start": "605320",
    "end": "607920"
  },
  {
    "text": "they're all here at this cubec Con so",
    "start": "607920",
    "end": "609640"
  },
  {
    "text": "hunt them down too uh but this is what",
    "start": "609640",
    "end": "613000"
  },
  {
    "text": "that looks like in Prometheus when you",
    "start": "613000",
    "end": "615120"
  },
  {
    "text": "have like a long running instance and",
    "start": "615120",
    "end": "616839"
  },
  {
    "text": "you have like interval based",
    "start": "616839",
    "end": "619200"
  },
  {
    "text": "scraping you'll get successful scrapes",
    "start": "619200",
    "end": "621600"
  },
  {
    "text": "and you'll get like a lot of aggregated",
    "start": "621600",
    "end": "623040"
  },
  {
    "text": "data that you can pull away but when you",
    "start": "623040",
    "end": "625120"
  },
  {
    "text": "take this long running instance and you",
    "start": "625120",
    "end": "626839"
  },
  {
    "text": "split it up and have a bunch of short",
    "start": "626839",
    "end": "628519"
  },
  {
    "text": "running instances you might have scrapes",
    "start": "628519",
    "end": "630519"
  },
  {
    "text": "that Miss entirely and even scrapes that",
    "start": "630519",
    "end": "633399"
  },
  {
    "text": "do actually scrape partial data you'll",
    "start": "633399",
    "end": "636600"
  },
  {
    "text": "only get partial results because that",
    "start": "636600",
    "end": "638399"
  },
  {
    "text": "instance might never be scraped again to",
    "start": "638399",
    "end": "640320"
  },
  {
    "text": "get the rest of the aggregation or rest",
    "start": "640320",
    "end": "642079"
  },
  {
    "text": "of the results and that's a problem",
    "start": "642079",
    "end": "645440"
  },
  {
    "text": "there's also the last problem it's a",
    "start": "645440",
    "end": "647399"
  },
  {
    "text": "it's a minor one in the other one times",
    "start": "647399",
    "end": "650279"
  },
  {
    "text": "like kuties you might have nice",
    "start": "650279",
    "end": "651959"
  },
  {
    "text": "operators to configure your agents uh",
    "start": "651959",
    "end": "655800"
  },
  {
    "text": "but on cloud run and on a lot of servic",
    "start": "655800",
    "end": "658000"
  },
  {
    "text": "vendors we don't have that so we need to",
    "start": "658000",
    "end": "659399"
  },
  {
    "text": "be more creative on how we configure",
    "start": "659399",
    "end": "660880"
  },
  {
    "text": "these agents and deploy",
    "start": "660880",
    "end": "662519"
  },
  {
    "text": "them and so this is what that looks like",
    "start": "662519",
    "end": "664880"
  },
  {
    "text": "the nice and portable story we wanted we",
    "start": "664880",
    "end": "666639"
  },
  {
    "text": "don't really have instead we have this",
    "start": "666639",
    "end": "668880"
  },
  {
    "text": "very",
    "start": "668880",
    "end": "671160"
  },
  {
    "text": "handwavy system of like how we should",
    "start": "671240",
    "end": "673440"
  },
  {
    "text": "instrument and deploy our observability",
    "start": "673440",
    "end": "676120"
  },
  {
    "text": "Solutions and we were determined okay we",
    "start": "676120",
    "end": "678480"
  },
  {
    "text": "were going to address this now how how",
    "start": "678480",
    "end": "680880"
  },
  {
    "text": "should we do",
    "start": "680880",
    "end": "682279"
  },
  {
    "text": "it well we actually cheated uh we",
    "start": "682279",
    "end": "686480"
  },
  {
    "text": "decided that this problem we should",
    "start": "686480",
    "end": "687880"
  },
  {
    "text": "actually partially solve in the",
    "start": "687880",
    "end": "690000"
  },
  {
    "text": "serverless like Cloud run service itself",
    "start": "690000",
    "end": "693240"
  },
  {
    "text": "not so it could run our bespoke agents",
    "start": "693240",
    "end": "695079"
  },
  {
    "text": "but also so it could run otel and",
    "start": "695079",
    "end": "696839"
  },
  {
    "text": "Prometheus so let let's cover that now",
    "start": "696839",
    "end": "699320"
  },
  {
    "text": "what changes did we need to make to",
    "start": "699320",
    "end": "700680"
  },
  {
    "text": "Cloud run to accommodate",
    "start": "700680",
    "end": "703680"
  },
  {
    "text": "observability well the first one is we",
    "start": "703680",
    "end": "706079"
  },
  {
    "text": "introduced side cars now side cars allow",
    "start": "706079",
    "end": "709279"
  },
  {
    "text": "you to start independent containers that",
    "start": "709279",
    "end": "711839"
  },
  {
    "text": "run alongside the main container that",
    "start": "711839",
    "end": "714120"
  },
  {
    "text": "that's serving web requests the main use",
    "start": "714120",
    "end": "716519"
  },
  {
    "text": "case for this is to support running",
    "start": "716519",
    "end": "719240"
  },
  {
    "text": "collection agents like otel might run in",
    "start": "719240",
    "end": "721079"
  },
  {
    "text": "a",
    "start": "721079",
    "end": "721800"
  },
  {
    "text": "sitecore and they can communicate freely",
    "start": "721800",
    "end": "723959"
  },
  {
    "text": "with the agents with the applications",
    "start": "723959",
    "end": "726399"
  },
  {
    "text": "all containers will share the same",
    "start": "726399",
    "end": "728360"
  },
  {
    "text": "network name space so they can",
    "start": "728360",
    "end": "730560"
  },
  {
    "text": "communicate with Local Host and Port",
    "start": "730560",
    "end": "732839"
  },
  {
    "text": "they also can share files because they",
    "start": "732839",
    "end": "734639"
  },
  {
    "text": "have shared volumes that are",
    "start": "734639",
    "end": "737839"
  },
  {
    "text": "mounted now to be fair like",
    "start": "737839",
    "end": "740199"
  },
  {
    "text": "observability is not the only use case",
    "start": "740199",
    "end": "741760"
  },
  {
    "text": "for site cars so we didn't have like a",
    "start": "741760",
    "end": "744079"
  },
  {
    "text": "very hard time convincing people to add",
    "start": "744079",
    "end": "746360"
  },
  {
    "text": "this because they can also be used for",
    "start": "746360",
    "end": "748600"
  },
  {
    "text": "like engine in front of your application",
    "start": "748600",
    "end": "750120"
  },
  {
    "text": "container you could have like",
    "start": "750120",
    "end": "751160"
  },
  {
    "text": "authentication and authorization filters",
    "start": "751160",
    "end": "752880"
  },
  {
    "text": "you could have connection proxies side",
    "start": "752880",
    "end": "754720"
  },
  {
    "text": "cards are generally quite",
    "start": "754720",
    "end": "756519"
  },
  {
    "text": "useful we didn't need just side cars",
    "start": "756519",
    "end": "758839"
  },
  {
    "text": "though we also needed one more bit which",
    "start": "758839",
    "end": "761600"
  },
  {
    "text": "is we needed the ability to order the",
    "start": "761600",
    "end": "764480"
  },
  {
    "text": "life cycles of these containers and so",
    "start": "764480",
    "end": "767160"
  },
  {
    "text": "what that means is we can define a",
    "start": "767160",
    "end": "769240"
  },
  {
    "text": "dependency between the containers in",
    "start": "769240",
    "end": "770680"
  },
  {
    "text": "this case container a is a dependency of",
    "start": "770680",
    "end": "772560"
  },
  {
    "text": "container B and what that will mean is",
    "start": "772560",
    "end": "775519"
  },
  {
    "text": "container a will start up before",
    "start": "775519",
    "end": "777399"
  },
  {
    "text": "container B starts up and contain",
    "start": "777399",
    "end": "779160"
  },
  {
    "text": "container B shuts down before container",
    "start": "779160",
    "end": "781079"
  },
  {
    "text": "a shuts down and let's motivate why this",
    "start": "781079",
    "end": "784040"
  },
  {
    "text": "is important with a couple of examples",
    "start": "784040",
    "end": "786079"
  },
  {
    "text": "say you have a push-based approach to",
    "start": "786079",
    "end": "788720"
  },
  {
    "text": "your Telemetry with like the open",
    "start": "788720",
    "end": "790360"
  },
  {
    "text": "Telemetry collector your application",
    "start": "790360",
    "end": "792959"
  },
  {
    "text": "starts up it might want to flush some",
    "start": "792959",
    "end": "795440"
  },
  {
    "text": "metrics when it flushes that Telemetry",
    "start": "795440",
    "end": "797920"
  },
  {
    "text": "it will expect that the otel collector",
    "start": "797920",
    "end": "799639"
  },
  {
    "text": "is up and ready to respond to those",
    "start": "799639",
    "end": "802560"
  },
  {
    "text": "flushes so the oal collector actually",
    "start": "802560",
    "end": "804199"
  },
  {
    "text": "needs to exist before your side car is",
    "start": "804199",
    "end": "806160"
  },
  {
    "text": "alive the same thing on shutdown on",
    "start": "806160",
    "end": "808240"
  },
  {
    "text": "shutdown your application might flush",
    "start": "808240",
    "end": "809639"
  },
  {
    "text": "tet once again and when it does that",
    "start": "809639",
    "end": "811959"
  },
  {
    "text": "theal collector needs to still be alive",
    "start": "811959",
    "end": "814399"
  },
  {
    "text": "and so theal collector needs to",
    "start": "814399",
    "end": "816199"
  },
  {
    "text": "terminate after and so this dependency",
    "start": "816199",
    "end": "818440"
  },
  {
    "text": "relationship is quite important to make",
    "start": "818440",
    "end": "820199"
  },
  {
    "text": "sure we don't miss like",
    "start": "820199",
    "end": "823000"
  },
  {
    "text": "Telemetry for the pole-based approach",
    "start": "823000",
    "end": "825240"
  },
  {
    "text": "now say you have Prometheus as a side",
    "start": "825240",
    "end": "826800"
  },
  {
    "text": "core uh you actually need the opposite",
    "start": "826800",
    "end": "829399"
  },
  {
    "text": "you actually because the flow of",
    "start": "829399",
    "end": "830880"
  },
  {
    "text": "telemetry is initiated by the side car",
    "start": "830880",
    "end": "833759"
  },
  {
    "text": "itself the Prometheus side car might",
    "start": "833759",
    "end": "836680"
  },
  {
    "text": "actually want to pull when it start up",
    "start": "836680",
    "end": "839600"
  },
  {
    "text": "in which case it'll expect the",
    "start": "839600",
    "end": "841000"
  },
  {
    "text": "application to already be alive and the",
    "start": "841000",
    "end": "843000"
  },
  {
    "text": "same thing on shutdown on shutdown when",
    "start": "843000",
    "end": "845560"
  },
  {
    "text": "Cloud one says okay there's no more",
    "start": "845560",
    "end": "846720"
  },
  {
    "text": "requests we're shutting down the",
    "start": "846720",
    "end": "847680"
  },
  {
    "text": "instance we actually need to shut down",
    "start": "847680",
    "end": "849600"
  },
  {
    "text": "the side car first so it can do a final",
    "start": "849600",
    "end": "851519"
  },
  {
    "text": "scrape of the application before the",
    "start": "851519",
    "end": "853560"
  },
  {
    "text": "application itself",
    "start": "853560",
    "end": "855399"
  },
  {
    "text": "terminates and so this is what like an",
    "start": "855399",
    "end": "858000"
  },
  {
    "text": "instance would look like with no",
    "start": "858000",
    "end": "859000"
  },
  {
    "text": "instrumentation once you add these side",
    "start": "859000",
    "end": "860959"
  },
  {
    "text": "cars they will look like this where we",
    "start": "860959",
    "end": "863279"
  },
  {
    "text": "talked about the dependenc dependency",
    "start": "863279",
    "end": "865279"
  },
  {
    "text": "before and so every time the instance",
    "start": "865279",
    "end": "867440"
  },
  {
    "text": "pops up the side cards pop up with it",
    "start": "867440",
    "end": "869839"
  },
  {
    "text": "for the purpose of observability and",
    "start": "869839",
    "end": "872240"
  },
  {
    "text": "when they shut down they shut down",
    "start": "872240",
    "end": "874680"
  },
  {
    "text": "together and that's it that's all we",
    "start": "874680",
    "end": "876680"
  },
  {
    "text": "needed to do to Cloud run now let's look",
    "start": "876680",
    "end": "878839"
  },
  {
    "text": "at what this meant for OTP push Bas",
    "start": "878839",
    "end": "882079"
  },
  {
    "text": "inest and then we'll talk about",
    "start": "882079",
    "end": "883320"
  },
  {
    "text": "Prometheus",
    "start": "883320",
    "end": "884839"
  },
  {
    "text": "after turns out nothing uh that's all we",
    "start": "884839",
    "end": "888000"
  },
  {
    "text": "actually need and LLP push based metrics",
    "start": "888000",
    "end": "890959"
  },
  {
    "text": "now work fine all you need to do is make",
    "start": "890959",
    "end": "893959"
  },
  {
    "text": "sure when you add the collector as a",
    "start": "893959",
    "end": "896720"
  },
  {
    "text": "side car you specify the dependency",
    "start": "896720",
    "end": "898519"
  },
  {
    "text": "ordering and you'll have your metrics",
    "start": "898519",
    "end": "900399"
  },
  {
    "text": "flowing with no lossy",
    "start": "900399",
    "end": "903199"
  },
  {
    "text": "Telemetry that's quite nice actually",
    "start": "903199",
    "end": "906519"
  },
  {
    "text": "um pull based metrics are not as nice",
    "start": "906519",
    "end": "909680"
  },
  {
    "text": "pull based metrics were a little tricky",
    "start": "909680",
    "end": "911920"
  },
  {
    "text": "and not as simple and we actually needed",
    "start": "911920",
    "end": "913360"
  },
  {
    "text": "to make a few changes to the Prometheus",
    "start": "913360",
    "end": "915800"
  },
  {
    "text": "libraries and some otel components to",
    "start": "915800",
    "end": "917800"
  },
  {
    "text": "get this to",
    "start": "917800",
    "end": "919279"
  },
  {
    "text": "work the main thing we needed to add was",
    "start": "919279",
    "end": "922040"
  },
  {
    "text": "the ability to scrape on shutdown this",
    "start": "922040",
    "end": "924959"
  },
  {
    "text": "is that when the Prometheus collector is",
    "start": "924959",
    "end": "928040"
  },
  {
    "text": "shutting down it performs a final scrape",
    "start": "928040",
    "end": "930480"
  },
  {
    "text": "and we had to add that to the libraries",
    "start": "930480",
    "end": "932000"
  },
  {
    "text": "and we need to make sure that these",
    "start": "932000",
    "end": "933120"
  },
  {
    "text": "scrapes are guaranteed even if the side",
    "start": "933120",
    "end": "935279"
  },
  {
    "text": "card just booted up uh the last point",
    "start": "935279",
    "end": "938160"
  },
  {
    "text": "there is a gcp specific thing we needed",
    "start": "938160",
    "end": "940519"
  },
  {
    "text": "to make sure that these final scrapes",
    "start": "940519",
    "end": "942720"
  },
  {
    "text": "actually do complete within 10 seconds",
    "start": "942720",
    "end": "945199"
  },
  {
    "text": "because because of the dependency",
    "start": "945199",
    "end": "947360"
  },
  {
    "text": "ordering we need to make sure that after",
    "start": "947360",
    "end": "949880"
  },
  {
    "text": "10 seconds the application gets a chance",
    "start": "949880",
    "end": "952440"
  },
  {
    "text": "to gracefully shut down otherwise",
    "start": "952440",
    "end": "953880"
  },
  {
    "text": "everything is going to be killed non-",
    "start": "953880",
    "end": "956519"
  },
  {
    "text": "gracefully this is what that looks like",
    "start": "956519",
    "end": "959399"
  },
  {
    "text": "you'll have your regular interval based",
    "start": "959399",
    "end": "961920"
  },
  {
    "text": "promethus scraping and then you have",
    "start": "961920",
    "end": "963800"
  },
  {
    "text": "this final scrape at the end to make",
    "start": "963800",
    "end": "965440"
  },
  {
    "text": "sure you collect all data and you're not",
    "start": "965440",
    "end": "967360"
  },
  {
    "text": "missing any",
    "start": "967360",
    "end": "970240"
  },
  {
    "text": "aggregation this is what it looks like",
    "start": "970480",
    "end": "972240"
  },
  {
    "text": "when you your instance is only alive for",
    "start": "972240",
    "end": "974120"
  },
  {
    "text": "let's say 10 seconds uh we'll actually",
    "start": "974120",
    "end": "976519"
  },
  {
    "text": "scrape optimistically on Startup like",
    "start": "976519",
    "end": "979480"
  },
  {
    "text": "with some offset and then again we will",
    "start": "979480",
    "end": "981759"
  },
  {
    "text": "scrape on shutdown and like we talked",
    "start": "981759",
    "end": "984079"
  },
  {
    "text": "about before there is the extreme case",
    "start": "984079",
    "end": "986160"
  },
  {
    "text": "where your instance only lives for",
    "start": "986160",
    "end": "988040"
  },
  {
    "text": "exactly one request request in which",
    "start": "988040",
    "end": "989959"
  },
  {
    "text": "case your instance pops ups and dies",
    "start": "989959",
    "end": "991600"
  },
  {
    "text": "immediately after it serves the request",
    "start": "991600",
    "end": "993639"
  },
  {
    "text": "we will still scrape one on shut",
    "start": "993639",
    "end": "997319"
  },
  {
    "text": "down I alluded to this before we like",
    "start": "998199",
    "end": "1001160"
  },
  {
    "text": "our issue with gcp was we we weren't",
    "start": "1001160",
    "end": "1003360"
  },
  {
    "text": "able to deal with just a single scrape",
    "start": "1003360",
    "end": "1004959"
  },
  {
    "text": "for cumulative metrics so we needed to",
    "start": "1004959",
    "end": "1006839"
  },
  {
    "text": "make a change to like OTP uh openet",
    "start": "1006839",
    "end": "1009240"
  },
  {
    "text": "tre's Prometheus receiver to allow us to",
    "start": "1009240",
    "end": "1012319"
  },
  {
    "text": "like do some hacky things one thing is",
    "start": "1012319",
    "end": "1014600"
  },
  {
    "text": "we actually synthesize a start time",
    "start": "1014600",
    "end": "1016160"
  },
  {
    "text": "metric so we will look for the process",
    "start": "1016160",
    "end": "1018560"
  },
  {
    "text": "start time metric that a lot of",
    "start": "1018560",
    "end": "1020040"
  },
  {
    "text": "Prometheus as the case will export and",
    "start": "1020040",
    "end": "1022199"
  },
  {
    "text": "if we don't find that we'll use the",
    "start": "1022199",
    "end": "1023480"
  },
  {
    "text": "collector start time and synthesize that",
    "start": "1023480",
    "end": "1026280"
  },
  {
    "text": "instead there is a slight catch that's",
    "start": "1026280",
    "end": "1028678"
  },
  {
    "text": "like very rare and definitely an anti-",
    "start": "1028679",
    "end": "1030280"
  },
  {
    "text": "pattern where if your serous application",
    "start": "1030280",
    "end": "1033839"
  },
  {
    "text": "is like using using an exporter that's",
    "start": "1033839",
    "end": "1036038"
  },
  {
    "text": "emitting a metric about something that",
    "start": "1036039",
    "end": "1037520"
  },
  {
    "text": "lives outside you might see a high rate",
    "start": "1037520",
    "end": "1040079"
  },
  {
    "text": "but again this is rare and we were okay",
    "start": "1040079",
    "end": "1042079"
  },
  {
    "text": "making this",
    "start": "1042079",
    "end": "1043438"
  },
  {
    "text": "radar and that's it now we should have",
    "start": "1043439",
    "end": "1046360"
  },
  {
    "text": "pull base and push base metrics working",
    "start": "1046360",
    "end": "1048079"
  },
  {
    "text": "correctly the only last bit we need to",
    "start": "1048079",
    "end": "1049640"
  },
  {
    "text": "figure out is how we deploy and",
    "start": "1049640",
    "end": "1052039"
  },
  {
    "text": "configure these collectors in the",
    "start": "1052039",
    "end": "1055240"
  },
  {
    "text": "world well we this this is admittedly a",
    "start": "1055240",
    "end": "1058840"
  },
  {
    "text": "little hacky but we use secret manager",
    "start": "1058840",
    "end": "1060960"
  },
  {
    "text": "secret manager is like our secret store",
    "start": "1060960",
    "end": "1063919"
  },
  {
    "text": "uh there are a bunch of equivalents but",
    "start": "1063919",
    "end": "1065240"
  },
  {
    "text": "what we do essentially is we store the",
    "start": "1065240",
    "end": "1067600"
  },
  {
    "text": "configs of these collectors as",
    "start": "1067600",
    "end": "1069960"
  },
  {
    "text": "secrets and these secrets are nice",
    "start": "1069960",
    "end": "1072480"
  },
  {
    "text": "because you have like Gran granular",
    "start": "1072480",
    "end": "1074200"
  },
  {
    "text": "access controls for who can edit and",
    "start": "1074200",
    "end": "1076559"
  },
  {
    "text": "view them and uh we then Mount these",
    "start": "1076559",
    "end": "1080280"
  },
  {
    "text": "secrets onto the collectors so that the",
    "start": "1080280",
    "end": "1082960"
  },
  {
    "text": "side cars can access them this is quite",
    "start": "1082960",
    "end": "1085520"
  },
  {
    "text": "nice because any update made to the",
    "start": "1085520",
    "end": "1087600"
  },
  {
    "text": "secret will",
    "start": "1087600",
    "end": "1089360"
  },
  {
    "text": "automatically automatically",
    "start": "1089360",
    "end": "1092120"
  },
  {
    "text": "uh find itself in the local file system",
    "start": "1092120",
    "end": "1095720"
  },
  {
    "text": "for these collectors because they're",
    "start": "1095720",
    "end": "1096880"
  },
  {
    "text": "mounted and then we have the supervisor",
    "start": "1096880",
    "end": "1098799"
  },
  {
    "text": "process of The Collector that polls for",
    "start": "1098799",
    "end": "1100960"
  },
  {
    "text": "updates to this file and reloads The",
    "start": "1100960",
    "end": "1103320"
  },
  {
    "text": "Collector so it makes sure it's it's",
    "start": "1103320",
    "end": "1104799"
  },
  {
    "text": "running the latest",
    "start": "1104799",
    "end": "1106880"
  },
  {
    "text": "configs this is what that looks like you",
    "start": "1106880",
    "end": "1108919"
  },
  {
    "text": "have the secret manager and how you",
    "start": "1108919",
    "end": "1110760"
  },
  {
    "text": "stored the secret it's mounted as a",
    "start": "1110760",
    "end": "1112760"
  },
  {
    "text": "volume and then you have your Cloud run",
    "start": "1112760",
    "end": "1116200"
  },
  {
    "text": "uh side cars look keep it'll keep",
    "start": "1116200",
    "end": "1119320"
  },
  {
    "text": "reading the file until it sees a new",
    "start": "1119320",
    "end": "1122039"
  },
  {
    "text": "config and at which point it will reload",
    "start": "1122039",
    "end": "1123799"
  },
  {
    "text": "The",
    "start": "1123799",
    "end": "1125600"
  },
  {
    "text": "Collector if you want to configure it",
    "start": "1125600",
    "end": "1128039"
  },
  {
    "text": "all you need to do is again Define the",
    "start": "1128039",
    "end": "1130039"
  },
  {
    "text": "dependency ordering that we talked about",
    "start": "1130039",
    "end": "1131480"
  },
  {
    "text": "before making sure that the",
    "start": "1131480",
    "end": "1133640"
  },
  {
    "text": "application's uh dependency of The",
    "start": "1133640",
    "end": "1136760"
  },
  {
    "text": "Collector and then you define the it",
    "start": "1136760",
    "end": "1139080"
  },
  {
    "text": "mount it as a volume and use that otel",
    "start": "1139080",
    "end": "1142720"
  },
  {
    "text": "collector that uses the Prometheus",
    "start": "1142720",
    "end": "1145440"
  },
  {
    "text": "receiver and that's it you don't have to",
    "start": "1145440",
    "end": "1147799"
  },
  {
    "text": "make any changes to your instrumentation",
    "start": "1147799",
    "end": "1149559"
  },
  {
    "text": "this is an application that we have that",
    "start": "1149559",
    "end": "1151600"
  },
  {
    "text": "runs it's the same image that runs on a",
    "start": "1151600",
    "end": "1153679"
  },
  {
    "text": "VM on gke and on cloud run and using",
    "start": "1153679",
    "end": "1157360"
  },
  {
    "text": "this you have the same metrics come",
    "start": "1157360",
    "end": "1158760"
  },
  {
    "text": "flowing in the same way from all all",
    "start": "1158760",
    "end": "1161080"
  },
  {
    "text": "three run",
    "start": "1161080",
    "end": "1163600"
  },
  {
    "text": "times and that's kind of where we are",
    "start": "1164559",
    "end": "1166600"
  },
  {
    "text": "now we we had like built-in Telemetry",
    "start": "1166600",
    "end": "1168440"
  },
  {
    "text": "support",
    "start": "1168440",
    "end": "1169400"
  },
  {
    "text": "we then made some changes to Cloud run",
    "start": "1169400",
    "end": "1171720"
  },
  {
    "text": "to accommodate",
    "start": "1171720",
    "end": "1173400"
  },
  {
    "text": "observability over the next few months",
    "start": "1173400",
    "end": "1175640"
  },
  {
    "text": "what we're trying to do is making sure",
    "start": "1175640",
    "end": "1177520"
  },
  {
    "text": "the changes we had to make to open",
    "start": "1177520",
    "end": "1179360"
  },
  {
    "text": "Telemetry and Prometheus are upstreamed",
    "start": "1179360",
    "end": "1182200"
  },
  {
    "text": "so that they're useful to not just our",
    "start": "1182200",
    "end": "1183640"
  },
  {
    "text": "collectors but but just these projects",
    "start": "1183640",
    "end": "1186080"
  },
  {
    "text": "in the",
    "start": "1186080",
    "end": "1187039"
  },
  {
    "text": "wild and then looking ahead there are a",
    "start": "1187039",
    "end": "1189280"
  },
  {
    "text": "bunch of problems we still have to solve",
    "start": "1189280",
    "end": "1190799"
  },
  {
    "text": "with with Cloud run and serverless um a",
    "start": "1190799",
    "end": "1193480"
  },
  {
    "text": "few of them are like resource overhead",
    "start": "1193480",
    "end": "1195400"
  },
  {
    "text": "because the sidecar approach is nice but",
    "start": "1195400",
    "end": "1197640"
  },
  {
    "text": "customers directly pay pay for them pay",
    "start": "1197640",
    "end": "1199480"
  },
  {
    "text": "for the CPU and memory they use so us",
    "start": "1199480",
    "end": "1202679"
  },
  {
    "text": "keeping control of like how much memory",
    "start": "1202679",
    "end": "1204919"
  },
  {
    "text": "they use is is vitally important and",
    "start": "1204919",
    "end": "1207159"
  },
  {
    "text": "there've already been a few talks about",
    "start": "1207159",
    "end": "1208880"
  },
  {
    "text": "instrumentation overhead and and maybe",
    "start": "1208880",
    "end": "1211280"
  },
  {
    "text": "collector overhead is something we can",
    "start": "1211280",
    "end": "1212559"
  },
  {
    "text": "look into U there are other issues like",
    "start": "1212559",
    "end": "1214840"
  },
  {
    "text": "CPU throttling this is quite tricky this",
    "start": "1214840",
    "end": "1217480"
  },
  {
    "text": "one is annoying and we have not figured",
    "start": "1217480",
    "end": "1219039"
  },
  {
    "text": "it out yet but essentially if you have a",
    "start": "1219039",
    "end": "1221679"
  },
  {
    "text": "serverless service that doesn't have",
    "start": "1221679",
    "end": "1225320"
  },
  {
    "text": "high enough QPS that it's continuously",
    "start": "1225320",
    "end": "1227720"
  },
  {
    "text": "alive but doesn't have low enough that",
    "start": "1227720",
    "end": "1229080"
  },
  {
    "text": "it shuts down you might be in a state",
    "start": "1229080",
    "end": "1230960"
  },
  {
    "text": "where Cloud R will give you an instance",
    "start": "1230960",
    "end": "1233280"
  },
  {
    "text": "but will give you no CPU in which case",
    "start": "1233280",
    "end": "1236159"
  },
  {
    "text": "it will uh your scrapes will fail and",
    "start": "1236159",
    "end": "1239799"
  },
  {
    "text": "your your flushes will fail and you get",
    "start": "1239799",
    "end": "1242679"
  },
  {
    "text": "a bunch of errors and limited",
    "start": "1242679",
    "end": "1244679"
  },
  {
    "text": "observability there are also other",
    "start": "1244679",
    "end": "1247000"
  },
  {
    "text": "approaches we're considering those are",
    "start": "1247000",
    "end": "1249120"
  },
  {
    "text": "like more vendor specific though like",
    "start": "1249120",
    "end": "1251280"
  },
  {
    "text": "having side carard less monitoring where",
    "start": "1251280",
    "end": "1252919"
  },
  {
    "text": "like the control plane itself will do",
    "start": "1252919",
    "end": "1254360"
  },
  {
    "text": "scraping but that's not as interesting",
    "start": "1254360",
    "end": "1258080"
  },
  {
    "text": "because it's like like completely close",
    "start": "1258080",
    "end": "1259679"
  },
  {
    "text": "sours uh yeah but that's what that's",
    "start": "1259679",
    "end": "1261600"
  },
  {
    "text": "what I have for you I hope I hope this",
    "start": "1261600",
    "end": "1265320"
  },
  {
    "text": "was useful uh I'm also curious about",
    "start": "1265320",
    "end": "1268120"
  },
  {
    "text": "what people will use these changes we",
    "start": "1268120",
    "end": "1270720"
  },
  {
    "text": "made to Cloud one for uh yeah but that's",
    "start": "1270720",
    "end": "1273080"
  },
  {
    "text": "about it I'll open up to questions thank",
    "start": "1273080",
    "end": "1276559"
  },
  {
    "text": "you for listening to me",
    "start": "1276559",
    "end": "1279278"
  },
  {
    "text": "Rambo",
    "start": "1280799",
    "end": "1283799"
  }
]