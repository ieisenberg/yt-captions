[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "so hello everyone today i'm going to",
    "start": "240",
    "end": "2560"
  },
  {
    "text": "share my challenges and learnings",
    "start": "2560",
    "end": "4560"
  },
  {
    "text": "from building the grpc python asynchio",
    "start": "4560",
    "end": "7120"
  },
  {
    "text": "stack",
    "start": "7120",
    "end": "8240"
  },
  {
    "text": "so today we are going to cover four",
    "start": "8240",
    "end": "10000"
  },
  {
    "text": "topics the first is about",
    "start": "10000",
    "end": "11920"
  },
  {
    "text": "python's asynchronous story the second",
    "start": "11920",
    "end": "14240"
  },
  {
    "text": "is about the collaboration between jfc",
    "start": "14240",
    "end": "16560"
  },
  {
    "text": "team",
    "start": "16560",
    "end": "17039"
  },
  {
    "text": "and the community third is about some",
    "start": "17039",
    "end": "19840"
  },
  {
    "text": "highlights",
    "start": "19840",
    "end": "20640"
  },
  {
    "text": "of the asynchial api and finally some",
    "start": "20640",
    "end": "23840"
  },
  {
    "text": "implementation challenges",
    "start": "23840",
    "end": "25279"
  },
  {
    "text": "i've i personally encountered",
    "start": "25279",
    "end": "29199"
  },
  {
    "text": "so for many of you may know japanese has",
    "start": "29199",
    "end": "32238"
  },
  {
    "text": "a lot of stacks",
    "start": "32239",
    "end": "33360"
  },
  {
    "text": "we support 14 different languages and",
    "start": "33360",
    "end": "35600"
  },
  {
    "text": "some of them even have",
    "start": "35600",
    "end": "37120"
  },
  {
    "text": "more than one implementations and",
    "start": "37120",
    "end": "40399"
  },
  {
    "text": "some information share a majority of",
    "start": "40399",
    "end": "42559"
  },
  {
    "text": "copas but some of them",
    "start": "42559",
    "end": "44000"
  },
  {
    "text": "are very different programming paradigm",
    "start": "44000",
    "end": "49039"
  },
  {
    "start": "49000",
    "end": "49000"
  },
  {
    "text": "so why do we want to build the new stack",
    "start": "49039",
    "end": "52079"
  },
  {
    "text": "if there are already many stacks existed",
    "start": "52079",
    "end": "55600"
  },
  {
    "text": "is this is because pythons fragmented",
    "start": "55600",
    "end": "58800"
  },
  {
    "text": "asynchronous story and as you may know",
    "start": "58800",
    "end": "61680"
  },
  {
    "text": "python have many different",
    "start": "61680",
    "end": "63120"
  },
  {
    "text": "uh asynchronous libraries for example",
    "start": "63120",
    "end": "65360"
  },
  {
    "text": "like g band twisted tornado",
    "start": "65360",
    "end": "67600"
  },
  {
    "text": "and they can split into two different",
    "start": "67600",
    "end": "70560"
  },
  {
    "text": "kinds the first kind is they do monkey",
    "start": "70560",
    "end": "72479"
  },
  {
    "text": "patching",
    "start": "72479",
    "end": "73040"
  },
  {
    "text": "they patch all the standard libraries of",
    "start": "73040",
    "end": "75119"
  },
  {
    "text": "python",
    "start": "75119",
    "end": "76560"
  },
  {
    "text": "and the second one is providing an",
    "start": "76560",
    "end": "78240"
  },
  {
    "text": "alternative event loop so you can",
    "start": "78240",
    "end": "80080"
  },
  {
    "text": "register your own coding",
    "start": "80080",
    "end": "81840"
  },
  {
    "text": "into it but the problem is if",
    "start": "81840",
    "end": "85040"
  },
  {
    "text": "you are using more than one asynchronous",
    "start": "85040",
    "end": "87040"
  },
  {
    "text": "library it may very likely to cause a",
    "start": "87040",
    "end": "89119"
  },
  {
    "text": "deadlock",
    "start": "89119",
    "end": "90240"
  },
  {
    "text": "and each one of them have many different",
    "start": "90240",
    "end": "93439"
  },
  {
    "text": "programming paradigm so it's very hard",
    "start": "93439",
    "end": "96400"
  },
  {
    "text": "to switch from one to the other luckily",
    "start": "96400",
    "end": "100560"
  },
  {
    "start": "100000",
    "end": "100000"
  },
  {
    "text": "the python maintainers also realize this",
    "start": "100560",
    "end": "103040"
  },
  {
    "text": "is a problem",
    "start": "103040",
    "end": "104079"
  },
  {
    "text": "and they did so they developed the",
    "start": "104079",
    "end": "106720"
  },
  {
    "text": "official",
    "start": "106720",
    "end": "107680"
  },
  {
    "text": "asynchronous library which is named",
    "start": "107680",
    "end": "109759"
  },
  {
    "text": "async io",
    "start": "109759",
    "end": "111280"
  },
  {
    "text": "and it introduces the new keywords async",
    "start": "111280",
    "end": "114640"
  },
  {
    "text": "and await",
    "start": "114640",
    "end": "115439"
  },
  {
    "text": "just like javascript and hd shop and",
    "start": "115439",
    "end": "118799"
  },
  {
    "text": "all and all the asymus libraries we saw",
    "start": "118799",
    "end": "122079"
  },
  {
    "text": "before they are trying to be compatible",
    "start": "122079",
    "end": "123840"
  },
  {
    "text": "with this new official",
    "start": "123840",
    "end": "125680"
  },
  {
    "text": "asynchronous library and on the right",
    "start": "125680",
    "end": "128160"
  },
  {
    "text": "side",
    "start": "128160",
    "end": "128720"
  },
  {
    "text": "is a short snippet showing how to view",
    "start": "128720",
    "end": "131520"
  },
  {
    "text": "how to open up a tcp connection",
    "start": "131520",
    "end": "133920"
  },
  {
    "text": "and how to read write from it using the",
    "start": "133920",
    "end": "136560"
  },
  {
    "text": "asynchronous",
    "start": "136560",
    "end": "137520"
  },
  {
    "text": "using the async io semantic",
    "start": "137520",
    "end": "140959"
  },
  {
    "text": "well um all of this is great",
    "start": "140959",
    "end": "144319"
  },
  {
    "text": "and one of our grpc team member posted",
    "start": "144319",
    "end": "148160"
  },
  {
    "text": "a comment saying we are going to build",
    "start": "148160",
    "end": "150400"
  },
  {
    "text": "this thing",
    "start": "150400",
    "end": "151840"
  },
  {
    "text": "and this comment god is the most is one",
    "start": "151840",
    "end": "154560"
  },
  {
    "text": "of the most",
    "start": "154560",
    "end": "155360"
  },
  {
    "text": "uploaded comments in entire drives repo",
    "start": "155360",
    "end": "159360"
  },
  {
    "text": "however despite there is a high demand",
    "start": "159360",
    "end": "161760"
  },
  {
    "text": "and all those benefits we talked about",
    "start": "161760",
    "end": "164319"
  },
  {
    "text": "it never happened due to lack of",
    "start": "164319",
    "end": "167680"
  },
  {
    "text": "engineering resources so",
    "start": "167680",
    "end": "170239"
  },
  {
    "text": "it so the async io api never got",
    "start": "170239",
    "end": "173120"
  },
  {
    "text": "prioritized",
    "start": "173120",
    "end": "174319"
  },
  {
    "text": "before helping him",
    "start": "174319",
    "end": "178239"
  },
  {
    "start": "177000",
    "end": "177000"
  },
  {
    "text": "appeared so an engineer named",
    "start": "178239",
    "end": "181760"
  },
  {
    "text": "paul frixis and he was from sky scanner",
    "start": "181760",
    "end": "185440"
  },
  {
    "text": "he sent us an email saying okay",
    "start": "185440",
    "end": "188560"
  },
  {
    "text": "now we have now i had built",
    "start": "188560",
    "end": "191680"
  },
  {
    "text": "a pro proof of concept of",
    "start": "191680",
    "end": "195200"
  },
  {
    "text": "a grpc async io native driver and he's",
    "start": "195200",
    "end": "198319"
  },
  {
    "text": "asking for collaboration",
    "start": "198319",
    "end": "200480"
  },
  {
    "text": "from the grcc team and after our first",
    "start": "200480",
    "end": "203599"
  },
  {
    "text": "meeting",
    "start": "203599",
    "end": "205040"
  },
  {
    "text": "they promised to contribute four",
    "start": "205040",
    "end": "207120"
  },
  {
    "text": "part-time suites",
    "start": "207120",
    "end": "209840"
  },
  {
    "text": "and which solved which gives the project",
    "start": "209840",
    "end": "212400"
  },
  {
    "text": "all the engineering resources it needed",
    "start": "212400",
    "end": "214879"
  },
  {
    "text": "and then we can get finally get started",
    "start": "214879",
    "end": "218560"
  },
  {
    "start": "218000",
    "end": "218000"
  },
  {
    "text": "and as time goes by more and more",
    "start": "218560",
    "end": "221120"
  },
  {
    "text": "companies",
    "start": "221120",
    "end": "222000"
  },
  {
    "text": "join the effort including some engineers",
    "start": "222000",
    "end": "224720"
  },
  {
    "text": "from dropbox",
    "start": "224720",
    "end": "225599"
  },
  {
    "text": "and some from uber and many other",
    "start": "225599",
    "end": "227519"
  },
  {
    "text": "community members",
    "start": "227519",
    "end": "228799"
  },
  {
    "text": "they're not only contributing to code",
    "start": "228799",
    "end": "231200"
  },
  {
    "text": "but also to design itself",
    "start": "231200",
    "end": "233120"
  },
  {
    "text": "and commenting about the directions and",
    "start": "233120",
    "end": "237920"
  },
  {
    "text": "company about the directions so",
    "start": "239439",
    "end": "242879"
  },
  {
    "text": "that as you can see there are many",
    "start": "242879",
    "end": "244400"
  },
  {
    "text": "comments on the design dog",
    "start": "244400",
    "end": "246959"
  },
  {
    "text": "this on the design dock itself and all",
    "start": "246959",
    "end": "249439"
  },
  {
    "text": "other threads",
    "start": "249439",
    "end": "250799"
  },
  {
    "text": "all of these flashes always call it",
    "start": "250799",
    "end": "252799"
  },
  {
    "text": "alternative so it might not be as hard",
    "start": "252799",
    "end": "255360"
  },
  {
    "text": "to read as as",
    "start": "255360",
    "end": "258639"
  },
  {
    "text": "expected expected so here i want to say",
    "start": "258639",
    "end": "262000"
  },
  {
    "text": "thank you to all the people who have",
    "start": "262000",
    "end": "263680"
  },
  {
    "text": "contributed",
    "start": "263680",
    "end": "264720"
  },
  {
    "text": "to this project um i know this may sound",
    "start": "264720",
    "end": "268479"
  },
  {
    "text": "like an ending but i'm just getting",
    "start": "268479",
    "end": "270160"
  },
  {
    "text": "started",
    "start": "270160",
    "end": "272560"
  },
  {
    "text": "so next let me try to sell the async io",
    "start": "273520",
    "end": "277199"
  },
  {
    "text": "api through some of these highlights",
    "start": "277199",
    "end": "279360"
  },
  {
    "text": "the async api was tailored to the async",
    "start": "279360",
    "end": "282000"
  },
  {
    "start": "282000",
    "end": "282000"
  },
  {
    "text": "io semantic",
    "start": "282000",
    "end": "283360"
  },
  {
    "text": "and it has redesigned entire public",
    "start": "283360",
    "end": "286000"
  },
  {
    "text": "interface",
    "start": "286000",
    "end": "287040"
  },
  {
    "text": "it includes 23 new public classes",
    "start": "287040",
    "end": "290080"
  },
  {
    "text": "64 methods or functions all the io",
    "start": "290080",
    "end": "293759"
  },
  {
    "text": "operations now is labeled with async",
    "start": "293759",
    "end": "296320"
  },
  {
    "text": "and is now type annotated so it's more",
    "start": "296320",
    "end": "298479"
  },
  {
    "text": "friendly to new project",
    "start": "298479",
    "end": "300000"
  },
  {
    "text": "to larger projects on the right side",
    "start": "300000",
    "end": "303440"
  },
  {
    "text": "is a short example about how to use the",
    "start": "303440",
    "end": "306560"
  },
  {
    "text": "async io",
    "start": "306560",
    "end": "307600"
  },
  {
    "text": "api as you can see we can use",
    "start": "307600",
    "end": "311039"
  },
  {
    "text": "a single wave to create a channel and",
    "start": "311039",
    "end": "313680"
  },
  {
    "text": "use a weight",
    "start": "313680",
    "end": "314639"
  },
  {
    "text": "to wait for an rpc to finish on the",
    "start": "314639",
    "end": "317600"
  },
  {
    "text": "lower part",
    "start": "317600",
    "end": "318880"
  },
  {
    "text": "you can define asynchronous master",
    "start": "318880",
    "end": "321520"
  },
  {
    "text": "handlers through",
    "start": "321520",
    "end": "322479"
  },
  {
    "text": "async defined and finally you can start",
    "start": "322479",
    "end": "324960"
  },
  {
    "text": "the server in asynchronous way",
    "start": "324960",
    "end": "327919"
  },
  {
    "text": "it only not only introduced jpc python",
    "start": "327919",
    "end": "331280"
  },
  {
    "text": "into the async io world",
    "start": "331280",
    "end": "332720"
  },
  {
    "text": "it also solves other problems for",
    "start": "332720",
    "end": "334960"
  },
  {
    "text": "example the thread exhaustion issue so",
    "start": "334960",
    "end": "338160"
  },
  {
    "start": "335000",
    "end": "335000"
  },
  {
    "text": "in current api",
    "start": "338160",
    "end": "339199"
  },
  {
    "text": "if you are trying to build a if truck",
    "start": "339199",
    "end": "342400"
  },
  {
    "text": "you're trying to initialize a grpc",
    "start": "342400",
    "end": "344479"
  },
  {
    "text": "server",
    "start": "344479",
    "end": "345039"
  },
  {
    "text": "you have to provide a thread pull",
    "start": "345039",
    "end": "346960"
  },
  {
    "text": "executor which",
    "start": "346960",
    "end": "348479"
  },
  {
    "text": "currently requires you to specify a",
    "start": "348479",
    "end": "350400"
  },
  {
    "text": "maximum worker",
    "start": "350400",
    "end": "352160"
  },
  {
    "text": "however if the worker number is limited",
    "start": "352160",
    "end": "356319"
  },
  {
    "text": "there might be a threat exhaustion issue",
    "start": "356319",
    "end": "358560"
  },
  {
    "text": "because each rpc consumes at least one",
    "start": "358560",
    "end": "361039"
  },
  {
    "text": "thread",
    "start": "361039",
    "end": "362160"
  },
  {
    "text": "and if you have 10 loan running",
    "start": "362160",
    "end": "364080"
  },
  {
    "text": "streaming rpc or you have to",
    "start": "364080",
    "end": "366080"
  },
  {
    "text": "slow user rpc which means the entire",
    "start": "366080",
    "end": "368560"
  },
  {
    "text": "server will deadlock",
    "start": "368560",
    "end": "370400"
  },
  {
    "text": "okay",
    "start": "370400",
    "end": "372880"
  },
  {
    "text": "luckily this problem would will be no",
    "start": "373600",
    "end": "376240"
  },
  {
    "text": "longer existed",
    "start": "376240",
    "end": "377280"
  },
  {
    "text": "with async io api and moreover",
    "start": "377280",
    "end": "380960"
  },
  {
    "start": "380000",
    "end": "380000"
  },
  {
    "text": "we're trying to unify the core entrance",
    "start": "380960",
    "end": "383600"
  },
  {
    "text": "for the on the client side",
    "start": "383600",
    "end": "385840"
  },
  {
    "text": "currently there's three way to call to",
    "start": "385840",
    "end": "388240"
  },
  {
    "text": "invoke an rpc",
    "start": "388240",
    "end": "389520"
  },
  {
    "text": "you can invoke it directly invoke it",
    "start": "389520",
    "end": "391840"
  },
  {
    "text": "with a waste core",
    "start": "391840",
    "end": "394319"
  },
  {
    "text": "method invoke it with a future method",
    "start": "394319",
    "end": "397840"
  },
  {
    "text": "it creates some confusion for our users",
    "start": "397840",
    "end": "400639"
  },
  {
    "text": "about how to use it",
    "start": "400639",
    "end": "401759"
  },
  {
    "text": "and when to use it well in the new api",
    "start": "401759",
    "end": "404800"
  },
  {
    "text": "there is only one user a unified",
    "start": "404800",
    "end": "408000"
  },
  {
    "text": "way to invoke it",
    "start": "408000",
    "end": "411120"
  },
  {
    "start": "411000",
    "end": "411000"
  },
  {
    "text": "secondly is about the streaming costs so",
    "start": "411120",
    "end": "414080"
  },
  {
    "text": "in current api",
    "start": "414080",
    "end": "415199"
  },
  {
    "text": "as you can see there are a lot of boy",
    "start": "415199",
    "end": "417599"
  },
  {
    "text": "played",
    "start": "417599",
    "end": "418240"
  },
  {
    "text": "if you are trying to send a message",
    "start": "418240",
    "end": "420880"
  },
  {
    "text": "depending on the response you received",
    "start": "420880",
    "end": "423199"
  },
  {
    "text": "from the server",
    "start": "423199",
    "end": "424479"
  },
  {
    "text": "and the sending logic is before the",
    "start": "424479",
    "end": "427120"
  },
  {
    "text": "invocation of the rpc",
    "start": "427120",
    "end": "428720"
  },
  {
    "text": "and the receiving logic is down below so",
    "start": "428720",
    "end": "430479"
  },
  {
    "text": "you have this",
    "start": "430479",
    "end": "432160"
  },
  {
    "text": "conflict of reach of logic flow here",
    "start": "432160",
    "end": "435599"
  },
  {
    "text": "well on the other hand on the new async",
    "start": "435599",
    "end": "437840"
  },
  {
    "text": "api we're trying to introduce a read",
    "start": "437840",
    "end": "440160"
  },
  {
    "text": "write",
    "start": "440160",
    "end": "440639"
  },
  {
    "text": "so you can really write from a stream",
    "start": "440639",
    "end": "443280"
  },
  {
    "text": "just",
    "start": "443280",
    "end": "443840"
  },
  {
    "text": "like many other grpc languages design",
    "start": "443840",
    "end": "447120"
  },
  {
    "text": "and but you can also use a very pythonic",
    "start": "447120",
    "end": "449680"
  },
  {
    "text": "way",
    "start": "449680",
    "end": "450160"
  },
  {
    "text": "of trying trying to iterate through each",
    "start": "450160",
    "end": "453039"
  },
  {
    "text": "response",
    "start": "453039",
    "end": "453919"
  },
  {
    "text": "in an rpc",
    "start": "453919",
    "end": "457280"
  },
  {
    "text": "and finally this part may get into a",
    "start": "457919",
    "end": "460960"
  },
  {
    "text": "little bit",
    "start": "460960",
    "end": "462840"
  },
  {
    "text": "technical",
    "start": "462840",
    "end": "465840"
  },
  {
    "start": "465000",
    "end": "465000"
  },
  {
    "text": "during building this uh during building",
    "start": "465840",
    "end": "469199"
  },
  {
    "text": "this",
    "start": "469199",
    "end": "470240"
  },
  {
    "text": "188 io api we encountered some challenge",
    "start": "470240",
    "end": "474639"
  },
  {
    "text": "the first one is about the numbering",
    "start": "474639",
    "end": "477440"
  },
  {
    "text": "non-blocking io itself",
    "start": "477440",
    "end": "480639"
  },
  {
    "text": "the so if you if a",
    "start": "480639",
    "end": "483759"
  },
  {
    "text": "application trying to run any logic",
    "start": "483759",
    "end": "487199"
  },
  {
    "text": "that is blocking for example reading a",
    "start": "487199",
    "end": "489840"
  },
  {
    "text": "file or writing to a network socket",
    "start": "489840",
    "end": "492960"
  },
  {
    "text": "it might deadlock the entire event loop",
    "start": "492960",
    "end": "496400"
  },
  {
    "text": "and here and luckily here is how a jrpg",
    "start": "496400",
    "end": "499919"
  },
  {
    "text": "core organizes io operations",
    "start": "499919",
    "end": "502400"
  },
  {
    "text": "so it has an io manager inside the uh",
    "start": "502400",
    "end": "506000"
  },
  {
    "text": "jftc core and the abstract all the",
    "start": "506000",
    "end": "509520"
  },
  {
    "text": "lower uh the the system level",
    "start": "509520",
    "end": "512800"
  },
  {
    "text": "io operations into several categories",
    "start": "512800",
    "end": "515518"
  },
  {
    "text": "and allows people to",
    "start": "515519",
    "end": "517039"
  },
  {
    "text": "to provide their own so our solution",
    "start": "517039",
    "end": "520320"
  },
  {
    "text": "is that we can data io manager",
    "start": "520320",
    "end": "523919"
  },
  {
    "text": "calling back into the python space",
    "start": "523919",
    "end": "528080"
  },
  {
    "text": "calling back sorry my screen just logged",
    "start": "528080",
    "end": "532640"
  },
  {
    "text": "according to the the",
    "start": "533600",
    "end": "537040"
  },
  {
    "text": "custom i o manager and",
    "start": "537040",
    "end": "541120"
  },
  {
    "text": "however this method it was deprecated",
    "start": "541120",
    "end": "543519"
  },
  {
    "text": "and not recommended to use anymore",
    "start": "543519",
    "end": "547279"
  },
  {
    "text": "so do not follow this pattern so despite",
    "start": "547279",
    "end": "550399"
  },
  {
    "start": "549000",
    "end": "549000"
  },
  {
    "text": "the last solution that is working it may",
    "start": "550399",
    "end": "552959"
  },
  {
    "text": "dialogue",
    "start": "552959",
    "end": "553600"
  },
  {
    "text": "if the application is trying to fork or",
    "start": "553600",
    "end": "556080"
  },
  {
    "text": "using multiple event loop",
    "start": "556080",
    "end": "557839"
  },
  {
    "text": "or using multiple threads running an rpc",
    "start": "557839",
    "end": "561279"
  },
  {
    "text": "the root cause is because the python's",
    "start": "561279",
    "end": "564720"
  },
  {
    "text": "three enchants",
    "start": "564720",
    "end": "567360"
  },
  {
    "text": "so on the right side is a diagram",
    "start": "567680",
    "end": "569600"
  },
  {
    "text": "showing how this problem occurred",
    "start": "569600",
    "end": "571839"
  },
  {
    "text": "in straight a a python application is",
    "start": "571839",
    "end": "574080"
  },
  {
    "text": "trying to invoke a grpc core",
    "start": "574080",
    "end": "576320"
  },
  {
    "text": "method and the javascript acquired a",
    "start": "576320",
    "end": "579360"
  },
  {
    "text": "certain mutex",
    "start": "579360",
    "end": "580480"
  },
  {
    "text": "and calling back into python space",
    "start": "580480",
    "end": "583760"
  },
  {
    "text": "however the python space required a gear",
    "start": "583760",
    "end": "586800"
  },
  {
    "text": "the the global interpreter log and",
    "start": "586800",
    "end": "590000"
  },
  {
    "text": "on the right side however it cannot do",
    "start": "590000",
    "end": "593200"
  },
  {
    "text": "so because thready already acquired the",
    "start": "593200",
    "end": "595200"
  },
  {
    "text": "deal",
    "start": "595200",
    "end": "595920"
  },
  {
    "text": "and but but the threat be",
    "start": "595920",
    "end": "599040"
  },
  {
    "text": "can doesn't want to yield the gear",
    "start": "599040",
    "end": "601600"
  },
  {
    "text": "because",
    "start": "601600",
    "end": "602839"
  },
  {
    "text": "um because it was trying to",
    "start": "602839",
    "end": "607040"
  },
  {
    "text": "call another jfc called api which",
    "start": "607040",
    "end": "609600"
  },
  {
    "text": "requires the mutex",
    "start": "609600",
    "end": "610959"
  },
  {
    "text": "x again so it enters into a deadlock",
    "start": "610959",
    "end": "614880"
  },
  {
    "start": "614000",
    "end": "614000"
  },
  {
    "text": "the solution is easy which is",
    "start": "614880",
    "end": "618320"
  },
  {
    "text": "uh posting a polar thread in in the as a",
    "start": "618320",
    "end": "621440"
  },
  {
    "text": "middleman which",
    "start": "621440",
    "end": "622320"
  },
  {
    "text": "involves the japanese core api",
    "start": "622320",
    "end": "625519"
  },
  {
    "text": "to fetch the events from the nfc core",
    "start": "625519",
    "end": "628720"
  },
  {
    "text": "space",
    "start": "628720",
    "end": "629519"
  },
  {
    "text": "and then sending the events to the async",
    "start": "629519",
    "end": "632880"
  },
  {
    "text": "io event loop saying",
    "start": "632880",
    "end": "634240"
  },
  {
    "text": "hey this is a there is a i o events for",
    "start": "634240",
    "end": "637760"
  },
  {
    "text": "example a",
    "start": "637760",
    "end": "639040"
  },
  {
    "text": "new message arrived or a dns",
    "start": "639040",
    "end": "642160"
  },
  {
    "text": "result resolutions said succeed",
    "start": "642160",
    "end": "646399"
  },
  {
    "text": "in this way we keep the python",
    "start": "646399",
    "end": "650160"
  },
  {
    "text": "objects in the python space and",
    "start": "650160",
    "end": "653200"
  },
  {
    "text": "there's no longer any deadlock issues",
    "start": "653200",
    "end": "658079"
  },
  {
    "start": "658000",
    "end": "658000"
  },
  {
    "text": "however you introduce a performance",
    "start": "658160",
    "end": "660959"
  },
  {
    "text": "regression",
    "start": "660959",
    "end": "661920"
  },
  {
    "text": "which means uh which as many of you may",
    "start": "661920",
    "end": "664800"
  },
  {
    "text": "know",
    "start": "664800",
    "end": "665279"
  },
  {
    "text": "um because of the existence of geo",
    "start": "665279",
    "end": "668640"
  },
  {
    "text": "mos threading basically means small log",
    "start": "668640",
    "end": "670800"
  },
  {
    "text": "contention",
    "start": "670800",
    "end": "673120"
  },
  {
    "text": "lower in lower part there is a latency",
    "start": "673120",
    "end": "676000"
  },
  {
    "text": "distribution",
    "start": "676000",
    "end": "677279"
  },
  {
    "text": "which means uh if the latency",
    "start": "677279",
    "end": "681440"
  },
  {
    "text": "oh in low part is a latency distribution",
    "start": "681440",
    "end": "686079"
  },
  {
    "text": "which means um",
    "start": "686079",
    "end": "689839"
  },
  {
    "text": "so which shows the more the more thread",
    "start": "691279",
    "end": "694320"
  },
  {
    "text": "you're using",
    "start": "694320",
    "end": "694959"
  },
  {
    "text": "the higher the latency will be",
    "start": "694959",
    "end": "698640"
  },
  {
    "start": "698000",
    "end": "698000"
  },
  {
    "text": "let's take another look at the previous",
    "start": "699120",
    "end": "701279"
  },
  {
    "text": "solution",
    "start": "701279",
    "end": "702240"
  },
  {
    "text": "so the polar strand was skill protected",
    "start": "702240",
    "end": "705680"
  },
  {
    "text": "hence that you have to jump between the",
    "start": "705680",
    "end": "707680"
  },
  {
    "text": "ac ion thread and the polar thread",
    "start": "707680",
    "end": "711680"
  },
  {
    "text": "so how the the solution to solve this is",
    "start": "711760",
    "end": "715680"
  },
  {
    "start": "712000",
    "end": "712000"
  },
  {
    "text": "uh straightforward",
    "start": "715680",
    "end": "716959"
  },
  {
    "text": "so we can make the polar thread only",
    "start": "716959",
    "end": "719760"
  },
  {
    "text": "running in the sizing",
    "start": "719760",
    "end": "721360"
  },
  {
    "text": "the reason in sizing it doesn't require",
    "start": "721360",
    "end": "725519"
  },
  {
    "text": "and he releases the gills so it doesn't",
    "start": "725519",
    "end": "728079"
  },
  {
    "text": "need",
    "start": "728079",
    "end": "728560"
  },
  {
    "text": "any access to any python object but",
    "start": "728560",
    "end": "731680"
  },
  {
    "text": "instead",
    "start": "731680",
    "end": "732959"
  },
  {
    "text": "when you receive a core event you are",
    "start": "732959",
    "end": "735600"
  },
  {
    "text": "trying to send",
    "start": "735600",
    "end": "736560"
  },
  {
    "text": "a circuit a socket right into",
    "start": "736560",
    "end": "738959"
  },
  {
    "text": "asynchronous space",
    "start": "738959",
    "end": "740480"
  },
  {
    "text": "and the azure io event will receive the",
    "start": "740480",
    "end": "742639"
  },
  {
    "text": "socket right",
    "start": "742639",
    "end": "743600"
  },
  {
    "text": "and being wake up and check the c clock",
    "start": "743600",
    "end": "745760"
  },
  {
    "text": "fast queue to see if",
    "start": "745760",
    "end": "748160"
  },
  {
    "text": "to to process this core event",
    "start": "748160",
    "end": "752639"
  },
  {
    "text": "and finally as as a result we can see",
    "start": "752639",
    "end": "755600"
  },
  {
    "text": "the benchmark",
    "start": "755600",
    "end": "756720"
  },
  {
    "text": "or between the current api and the async",
    "start": "756720",
    "end": "760000"
  },
  {
    "text": "api",
    "start": "760000",
    "end": "760800"
  },
  {
    "text": "and the cpl plus uh api",
    "start": "760800",
    "end": "764560"
  },
  {
    "text": "and the cpanel api the red the red one",
    "start": "764560",
    "end": "766800"
  },
  {
    "text": "is the current api the blue one is the",
    "start": "766800",
    "end": "768959"
  },
  {
    "text": "async",
    "start": "768959",
    "end": "769760"
  },
  {
    "text": "i o api the gray one is the cpr plus api",
    "start": "769760",
    "end": "774399"
  },
  {
    "text": "so c5 as you can see um the 18ml api",
    "start": "774399",
    "end": "778800"
  },
  {
    "text": "reaches around 50 of the per core",
    "start": "778800",
    "end": "781440"
  },
  {
    "text": "performance of cpr plus",
    "start": "781440",
    "end": "784000"
  },
  {
    "text": "and is two times to 28 times better than",
    "start": "784000",
    "end": "786800"
  },
  {
    "text": "the sync stack",
    "start": "786800",
    "end": "789519"
  },
  {
    "start": "790000",
    "end": "790000"
  },
  {
    "text": "finally is an upstate test update about",
    "start": "791040",
    "end": "793680"
  },
  {
    "text": "the jpc",
    "start": "793680",
    "end": "794959"
  },
  {
    "text": "async io stack so it has it have been",
    "start": "794959",
    "end": "798079"
  },
  {
    "text": "released",
    "start": "798079",
    "end": "799440"
  },
  {
    "text": "it has been releasing as experimental",
    "start": "799440",
    "end": "801519"
  },
  {
    "text": "api since",
    "start": "801519",
    "end": "802560"
  },
  {
    "text": "version 1.25 and it passes all the",
    "start": "802560",
    "end": "805440"
  },
  {
    "text": "internal tests which means",
    "start": "805440",
    "end": "807600"
  },
  {
    "text": "it can communicate well with all the",
    "start": "807600",
    "end": "809360"
  },
  {
    "text": "historical version of",
    "start": "809360",
    "end": "810959"
  },
  {
    "text": "jrpc and other languages other jrpg",
    "start": "810959",
    "end": "813839"
  },
  {
    "text": "languages",
    "start": "813839",
    "end": "816000"
  },
  {
    "text": "and is now feature complete with",
    "start": "816000",
    "end": "819120"
  },
  {
    "text": "sync stack and we are trying to",
    "start": "819120",
    "end": "821279"
  },
  {
    "text": "integrate it with",
    "start": "821279",
    "end": "822560"
  },
  {
    "text": "a google cloud platform clients",
    "start": "822560",
    "end": "825600"
  },
  {
    "text": "and they are expected some of them",
    "start": "825600",
    "end": "827839"
  },
  {
    "text": "expected to release in quarter 3",
    "start": "827839",
    "end": "830240"
  },
  {
    "text": "of 2020 and you can find api reference",
    "start": "830240",
    "end": "833279"
  },
  {
    "text": "on jrpgio for more information",
    "start": "833279",
    "end": "836639"
  },
  {
    "text": "thank you that was my presentation",
    "start": "836639",
    "end": "841759"
  }
]