[
  {
    "start": "0",
    "end": "37000"
  },
  {
    "text": "hello i'm andre clementiev and i'm a",
    "start": "80",
    "end": "2720"
  },
  {
    "text": "solutions engineer at fland",
    "start": "2720",
    "end": "5440"
  },
  {
    "text": "hi i'm dmitry stolleroff i'm cto and",
    "start": "5440",
    "end": "8160"
  },
  {
    "text": "co-founder of land",
    "start": "8160",
    "end": "10000"
  },
  {
    "text": "yeah we both work at fland we don't want",
    "start": "10000",
    "end": "12799"
  },
  {
    "text": "to waste your time telling you about",
    "start": "12799",
    "end": "14480"
  },
  {
    "text": "what our company does but of course we",
    "start": "14480",
    "end": "16640"
  },
  {
    "text": "will appreciate it",
    "start": "16640",
    "end": "17680"
  },
  {
    "text": "if you check our site and we don't want",
    "start": "17680",
    "end": "20880"
  },
  {
    "text": "to waste your time because today",
    "start": "20880",
    "end": "23119"
  },
  {
    "text": "we're gonna talk about yes we are gonna",
    "start": "23119",
    "end": "25199"
  },
  {
    "text": "talk about",
    "start": "25199",
    "end": "27119"
  },
  {
    "text": "cloud native shell scripting so let's",
    "start": "27119",
    "end": "30480"
  },
  {
    "text": "talk",
    "start": "30480",
    "end": "32238"
  },
  {
    "text": "yeah let's do it",
    "start": "32239",
    "end": "33650"
  },
  {
    "text": "[Music]",
    "start": "33650",
    "end": "37280"
  },
  {
    "start": "37000",
    "end": "72000"
  },
  {
    "text": "before expanding on this notion of cloud",
    "start": "37280",
    "end": "39920"
  },
  {
    "text": "native shell scripting",
    "start": "39920",
    "end": "41520"
  },
  {
    "text": "we'd like to talk about kubernetes yes",
    "start": "41520",
    "end": "44320"
  },
  {
    "text": "this platform that we all know and love",
    "start": "44320",
    "end": "46960"
  },
  {
    "text": "from its wonderful api to",
    "start": "46960",
    "end": "48719"
  },
  {
    "text": "well-thought-out programming patterns",
    "start": "48719",
    "end": "51280"
  },
  {
    "text": "upon which the kubernetes is built",
    "start": "51280",
    "end": "53760"
  },
  {
    "text": "instead of working with low-level system",
    "start": "53760",
    "end": "55920"
  },
  {
    "text": "stuff",
    "start": "55920",
    "end": "56480"
  },
  {
    "text": "such as configuration files systemd",
    "start": "56480",
    "end": "58960"
  },
  {
    "text": "units or even containers",
    "start": "58960",
    "end": "61199"
  },
  {
    "text": "we operate on a higher level of",
    "start": "61199",
    "end": "63120"
  },
  {
    "text": "abstraction",
    "start": "63120",
    "end": "64320"
  },
  {
    "text": "such high level concepts as deployment",
    "start": "64320",
    "end": "67040"
  },
  {
    "text": "stateful set",
    "start": "67040",
    "end": "68240"
  },
  {
    "text": "secret or even node are available to",
    "start": "68240",
    "end": "71280"
  },
  {
    "text": "kubernetes",
    "start": "71280",
    "end": "72000"
  },
  {
    "start": "72000",
    "end": "282000"
  },
  {
    "text": "users when i think about kubernetes api",
    "start": "72000",
    "end": "74640"
  },
  {
    "text": "i imagine the file server having",
    "start": "74640",
    "end": "76560"
  },
  {
    "text": "folders for each kind of the object and",
    "start": "76560",
    "end": "80000"
  },
  {
    "text": "objects or resources being gmo files",
    "start": "80000",
    "end": "83280"
  },
  {
    "text": "on that server and it has",
    "start": "83280",
    "end": "86320"
  },
  {
    "text": "simple http api which allows us to do",
    "start": "86320",
    "end": "89119"
  },
  {
    "text": "three things with this server",
    "start": "89119",
    "end": "91119"
  },
  {
    "text": "first we can get a resource knowing",
    "start": "91119",
    "end": "94400"
  },
  {
    "text": "its kind and its name second we can",
    "start": "94400",
    "end": "97920"
  },
  {
    "text": "change the resource",
    "start": "97920",
    "end": "99520"
  },
  {
    "text": "and what's important is that we can only",
    "start": "99520",
    "end": "102079"
  },
  {
    "text": "store the object if it's valid",
    "start": "102079",
    "end": "104399"
  },
  {
    "text": "so if we try to put the object into the",
    "start": "104399",
    "end": "106799"
  },
  {
    "text": "wrong",
    "start": "106799",
    "end": "107680"
  },
  {
    "text": "directory or if it's just not formed",
    "start": "107680",
    "end": "110560"
  },
  {
    "text": "object",
    "start": "110560",
    "end": "111200"
  },
  {
    "text": "the operation will be denied",
    "start": "111200",
    "end": "114320"
  },
  {
    "text": "third we can watch resources",
    "start": "114320",
    "end": "117360"
  },
  {
    "text": "to do that we ask the server and we",
    "start": "117360",
    "end": "120960"
  },
  {
    "text": "immediately receive the same result as",
    "start": "120960",
    "end": "123040"
  },
  {
    "text": "if we would use",
    "start": "123040",
    "end": "124880"
  },
  {
    "text": "the get method but if the resource",
    "start": "124880",
    "end": "127840"
  },
  {
    "text": "changes",
    "start": "127840",
    "end": "128720"
  },
  {
    "text": "we instantly receive a new version and",
    "start": "128720",
    "end": "131360"
  },
  {
    "text": "if it changes again",
    "start": "131360",
    "end": "132879"
  },
  {
    "text": "we receive the update again and so on",
    "start": "132879",
    "end": "136319"
  },
  {
    "text": "so basically kubernetes in some way",
    "start": "136319",
    "end": "140000"
  },
  {
    "text": "is a yaml file server with three methods",
    "start": "140000",
    "end": "143280"
  },
  {
    "text": "of course there are many others but we",
    "start": "143280",
    "end": "145040"
  },
  {
    "text": "skip them we just need those",
    "start": "145040",
    "end": "147520"
  },
  {
    "text": "three but the server except for storing",
    "start": "147520",
    "end": "151680"
  },
  {
    "text": "information does completely nothing",
    "start": "151680",
    "end": "155280"
  },
  {
    "text": "and to put life into the kubernetes we",
    "start": "155280",
    "end": "158800"
  },
  {
    "text": "need",
    "start": "158800",
    "end": "159360"
  },
  {
    "text": "controllers the second",
    "start": "159360",
    "end": "162400"
  },
  {
    "text": "most important fundamental thing in",
    "start": "162400",
    "end": "164400"
  },
  {
    "text": "kubernetes in my list",
    "start": "164400",
    "end": "166959"
  },
  {
    "text": "generally we have two types of",
    "start": "166959",
    "end": "168480"
  },
  {
    "text": "controllers controllers of the first",
    "start": "168480",
    "end": "170640"
  },
  {
    "text": "type read from kubernetes",
    "start": "170640",
    "end": "172239"
  },
  {
    "text": "process information using some logic and",
    "start": "172239",
    "end": "175040"
  },
  {
    "text": "write",
    "start": "175040",
    "end": "175519"
  },
  {
    "text": "back to the kubernetes and controllers",
    "start": "175519",
    "end": "178319"
  },
  {
    "text": "of the second type",
    "start": "178319",
    "end": "179360"
  },
  {
    "text": "they also read from the kubernetes but",
    "start": "179360",
    "end": "182400"
  },
  {
    "text": "they",
    "start": "182400",
    "end": "182720"
  },
  {
    "text": "change in some way the state of external",
    "start": "182720",
    "end": "186080"
  },
  {
    "text": "world",
    "start": "186080",
    "end": "187360"
  },
  {
    "text": "let's just quickly look into what",
    "start": "187360",
    "end": "188879"
  },
  {
    "text": "happens when a user creates a deployment",
    "start": "188879",
    "end": "191200"
  },
  {
    "text": "in kubernetes",
    "start": "191200",
    "end": "192959"
  },
  {
    "text": "the deployment controller it's part of",
    "start": "192959",
    "end": "195120"
  },
  {
    "text": "cube controller manager",
    "start": "195120",
    "end": "196640"
  },
  {
    "text": "gets this information and create the",
    "start": "196640",
    "end": "199120"
  },
  {
    "text": "replica set",
    "start": "199120",
    "end": "200319"
  },
  {
    "text": "then the replica set controller gets the",
    "start": "200319",
    "end": "202080"
  },
  {
    "text": "information and it creates two",
    "start": "202080",
    "end": "204239"
  },
  {
    "text": "replicas two pods but these spots are",
    "start": "204239",
    "end": "207840"
  },
  {
    "text": "not scheduled so the scheduler get them",
    "start": "207840",
    "end": "210400"
  },
  {
    "text": "schedule them and write their yammels",
    "start": "210400",
    "end": "212799"
  },
  {
    "text": "back",
    "start": "212799",
    "end": "213519"
  },
  {
    "text": "but update it having not filled in them",
    "start": "213519",
    "end": "217040"
  },
  {
    "text": "and then we have cubelets running on",
    "start": "217040",
    "end": "219840"
  },
  {
    "text": "different nodes",
    "start": "219840",
    "end": "221519"
  },
  {
    "text": "and that and they get their parts",
    "start": "221519",
    "end": "224959"
  },
  {
    "text": "and update information in external world",
    "start": "224959",
    "end": "229120"
  },
  {
    "text": "but this time it's docker and then",
    "start": "229120",
    "end": "232560"
  },
  {
    "text": "what happens then then",
    "start": "232560",
    "end": "235599"
  },
  {
    "text": "basically almost all the chain repeats",
    "start": "235599",
    "end": "239120"
  },
  {
    "text": "but in reverse order so cubelet",
    "start": "239120",
    "end": "243200"
  },
  {
    "text": "checks status of containers calculate",
    "start": "243200",
    "end": "245920"
  },
  {
    "text": "status of the pod",
    "start": "245920",
    "end": "247519"
  },
  {
    "text": "and report it back then",
    "start": "247519",
    "end": "251239"
  },
  {
    "text": "replicasetcontroller receives it updates",
    "start": "251239",
    "end": "253840"
  },
  {
    "text": "status of the replica set",
    "start": "253840",
    "end": "255920"
  },
  {
    "text": "the deployment controller does",
    "start": "255920",
    "end": "259120"
  },
  {
    "text": "the same and then user",
    "start": "259120",
    "end": "262479"
  },
  {
    "text": "if he watch receive final status",
    "start": "262479",
    "end": "265520"
  },
  {
    "text": "or he can get it later if",
    "start": "265520",
    "end": "268880"
  },
  {
    "text": "he doesn't watch so kubernetes",
    "start": "268880",
    "end": "272479"
  },
  {
    "text": "is all about controllers acting together",
    "start": "272479",
    "end": "277040"
  },
  {
    "text": "and if you are going to automate",
    "start": "277040",
    "end": "279120"
  },
  {
    "text": "anything",
    "start": "279120",
    "end": "280400"
  },
  {
    "text": "you need to write controllers but we all",
    "start": "280400",
    "end": "283520"
  },
  {
    "start": "282000",
    "end": "352000"
  },
  {
    "text": "are cis admins",
    "start": "283520",
    "end": "284639"
  },
  {
    "text": "aren't we and we all love unix",
    "start": "284639",
    "end": "286720"
  },
  {
    "text": "philosophy",
    "start": "286720",
    "end": "287680"
  },
  {
    "text": "and we all are used to piping and shell",
    "start": "287680",
    "end": "289680"
  },
  {
    "text": "scripting",
    "start": "289680",
    "end": "290720"
  },
  {
    "text": "so when we want to count files in a",
    "start": "290720",
    "end": "292560"
  },
  {
    "text": "directory what do we all do",
    "start": "292560",
    "end": "294800"
  },
  {
    "text": "well of course we use find and wc",
    "start": "294800",
    "end": "298080"
  },
  {
    "text": "and when we want to find the process by",
    "start": "298080",
    "end": "299919"
  },
  {
    "text": "name we use ps and grep",
    "start": "299919",
    "end": "302320"
  },
  {
    "text": "and maybe an extra grep when we want to",
    "start": "302320",
    "end": "305840"
  },
  {
    "text": "find",
    "start": "305840",
    "end": "306160"
  },
  {
    "text": "top 10 ip addresses in the log we cut",
    "start": "306160",
    "end": "308960"
  },
  {
    "text": "the log",
    "start": "308960",
    "end": "309680"
  },
  {
    "text": "extract the second field because we know",
    "start": "309680",
    "end": "312320"
  },
  {
    "text": "that it has an ap address",
    "start": "312320",
    "end": "314160"
  },
  {
    "text": "then sort count unique values sort again",
    "start": "314160",
    "end": "317759"
  },
  {
    "text": "and take the first 10 and that is our",
    "start": "317759",
    "end": "320560"
  },
  {
    "text": "result",
    "start": "320560",
    "end": "322080"
  },
  {
    "text": "that's how we used to do things and on",
    "start": "322080",
    "end": "325120"
  },
  {
    "text": "one side",
    "start": "325120",
    "end": "325840"
  },
  {
    "text": "kubernetes adapted to it very well if",
    "start": "325840",
    "end": "328560"
  },
  {
    "text": "you want to find most used images in our",
    "start": "328560",
    "end": "330560"
  },
  {
    "text": "cluster",
    "start": "330560",
    "end": "331360"
  },
  {
    "text": "we can use kubectl and tell it to get",
    "start": "331360",
    "end": "333919"
  },
  {
    "text": "all pods from all namespaces and",
    "start": "333919",
    "end": "336160"
  },
  {
    "text": "extract the image field from them and",
    "start": "336160",
    "end": "338479"
  },
  {
    "text": "then",
    "start": "338479",
    "end": "339199"
  },
  {
    "text": "use the same approach as with logs sort",
    "start": "339199",
    "end": "342639"
  },
  {
    "text": "count unique sort again and take the",
    "start": "342639",
    "end": "345520"
  },
  {
    "text": "first 10.",
    "start": "345520",
    "end": "347039"
  },
  {
    "text": "but what should we do if we want to",
    "start": "347039",
    "end": "350400"
  },
  {
    "text": "act on a change controllers",
    "start": "350400",
    "end": "353840"
  },
  {
    "start": "352000",
    "end": "388000"
  },
  {
    "text": "as i've told you and i think as we all",
    "start": "353840",
    "end": "356560"
  },
  {
    "text": "knew",
    "start": "356560",
    "end": "357280"
  },
  {
    "text": "kubernetes is all about controllers",
    "start": "357280",
    "end": "360560"
  },
  {
    "text": "and to be successful in the kubernetes",
    "start": "360560",
    "end": "362639"
  },
  {
    "text": "world we need to be able to write",
    "start": "362639",
    "end": "365039"
  },
  {
    "text": "controllers",
    "start": "365039",
    "end": "367120"
  },
  {
    "text": "so what we are trying to do is to",
    "start": "367120",
    "end": "369919"
  },
  {
    "text": "implement a tool that will allow us to",
    "start": "369919",
    "end": "371680"
  },
  {
    "text": "write controllers",
    "start": "371680",
    "end": "373440"
  },
  {
    "text": "or you can call it operators simply",
    "start": "373440",
    "end": "376880"
  },
  {
    "text": "and effectively but by using",
    "start": "376880",
    "end": "380000"
  },
  {
    "text": "those methods we are used to as",
    "start": "380000",
    "end": "382479"
  },
  {
    "text": "sysadmins",
    "start": "382479",
    "end": "384240"
  },
  {
    "text": "and we think we quite succeeded in that",
    "start": "384240",
    "end": "386720"
  },
  {
    "text": "let's look at",
    "start": "386720",
    "end": "387680"
  },
  {
    "text": "an example we've got a kubernetes",
    "start": "387680",
    "end": "390160"
  },
  {
    "start": "388000",
    "end": "433000"
  },
  {
    "text": "cluster with the default namespace and",
    "start": "390160",
    "end": "392000"
  },
  {
    "text": "the secret in it",
    "start": "392000",
    "end": "393440"
  },
  {
    "text": "we also got a lot of other namespaces",
    "start": "393440",
    "end": "395360"
  },
  {
    "text": "and some of them are marked with a",
    "start": "395360",
    "end": "397120"
  },
  {
    "text": "special label",
    "start": "397120",
    "end": "398319"
  },
  {
    "text": "what we'd like to do is take our source",
    "start": "398319",
    "end": "400080"
  },
  {
    "text": "secret and copy it into these namespaces",
    "start": "400080",
    "end": "403280"
  },
  {
    "text": "some namespaces get added to the cluster",
    "start": "403280",
    "end": "405759"
  },
  {
    "text": "later",
    "start": "405759",
    "end": "406720"
  },
  {
    "text": "and some of them might have a special",
    "start": "406720",
    "end": "408479"
  },
  {
    "text": "label if it has",
    "start": "408479",
    "end": "410080"
  },
  {
    "text": "we'd like to take our source secret and",
    "start": "410080",
    "end": "411759"
  },
  {
    "text": "copy it into them as well",
    "start": "411759",
    "end": "413599"
  },
  {
    "text": "if a label is removed from a namespace",
    "start": "413599",
    "end": "415520"
  },
  {
    "text": "we'd like to remove the secret from it",
    "start": "415520",
    "end": "417840"
  },
  {
    "text": "if a source secret changes we'd like to",
    "start": "417840",
    "end": "420560"
  },
  {
    "text": "propagate these changes",
    "start": "420560",
    "end": "422000"
  },
  {
    "text": "into labeled namespaces if",
    "start": "422000",
    "end": "426479"
  },
  {
    "text": "a secret is removed from a namespace by",
    "start": "427120",
    "end": "430240"
  },
  {
    "text": "accident",
    "start": "430240",
    "end": "431280"
  },
  {
    "text": "we'd like to immediately restore it but",
    "start": "431280",
    "end": "433599"
  },
  {
    "start": "433000",
    "end": "477000"
  },
  {
    "text": "before we take a look",
    "start": "433599",
    "end": "434960"
  },
  {
    "text": "at the implementation of such a",
    "start": "434960",
    "end": "436560"
  },
  {
    "text": "controller in shell operator",
    "start": "436560",
    "end": "438240"
  },
  {
    "text": "let's take a look at what shell operator",
    "start": "438240",
    "end": "440240"
  },
  {
    "text": "is shell operator",
    "start": "440240",
    "end": "441520"
  },
  {
    "text": "like all other workloads in the",
    "start": "441520",
    "end": "443120"
  },
  {
    "text": "coordinates is deployed in a pod",
    "start": "443120",
    "end": "446000"
  },
  {
    "text": "in this pod we've got hooks directory",
    "start": "446000",
    "end": "448880"
  },
  {
    "text": "into which we place",
    "start": "448880",
    "end": "450000"
  },
  {
    "text": "executables written in bash in python in",
    "start": "450000",
    "end": "453680"
  },
  {
    "text": "ruby",
    "start": "453680",
    "end": "454400"
  },
  {
    "text": "you name it we name these executables",
    "start": "454400",
    "end": "458000"
  },
  {
    "text": "hooks shell operator subscribes to",
    "start": "458000",
    "end": "461440"
  },
  {
    "text": "kubernetes events and objects",
    "start": "461440",
    "end": "463280"
  },
  {
    "text": "and if something of interest to us",
    "start": "463280",
    "end": "464879"
  },
  {
    "text": "changes",
    "start": "464879",
    "end": "466319"
  },
  {
    "text": "a shell operator executes these hooks",
    "start": "466319",
    "end": "469280"
  },
  {
    "text": "now",
    "start": "469280",
    "end": "470080"
  },
  {
    "text": "how does it decide what hook and when to",
    "start": "470080",
    "end": "472639"
  },
  {
    "text": "execute",
    "start": "472639",
    "end": "473599"
  },
  {
    "text": "to solve this problem a hook has two",
    "start": "473599",
    "end": "476240"
  },
  {
    "text": "phases",
    "start": "476240",
    "end": "477199"
  },
  {
    "start": "477000",
    "end": "503000"
  },
  {
    "text": "when shell operator starts it executes",
    "start": "477199",
    "end": "480560"
  },
  {
    "text": "each hook",
    "start": "480560",
    "end": "481280"
  },
  {
    "text": "with a config argument each hook outputs",
    "start": "481280",
    "end": "484879"
  },
  {
    "text": "a yaml with its configuration",
    "start": "484879",
    "end": "487919"
  },
  {
    "text": "once the configuration phase passes each",
    "start": "487919",
    "end": "490319"
  },
  {
    "text": "hook gets executed when the relevant",
    "start": "490319",
    "end": "492240"
  },
  {
    "text": "tweeted",
    "start": "492240",
    "end": "493120"
  },
  {
    "text": "event happens it is executed without any",
    "start": "493120",
    "end": "496319"
  },
  {
    "text": "arguments",
    "start": "496319",
    "end": "497199"
  },
  {
    "text": "and it gets passed a binding context",
    "start": "497199",
    "end": "500080"
  },
  {
    "text": "special json",
    "start": "500080",
    "end": "501360"
  },
  {
    "text": "about that we'll talk a bit later now if",
    "start": "501360",
    "end": "504479"
  },
  {
    "start": "503000",
    "end": "528000"
  },
  {
    "text": "you use bash",
    "start": "504479",
    "end": "505520"
  },
  {
    "text": "we highly recommend that you use shell",
    "start": "505520",
    "end": "507440"
  },
  {
    "text": "lib which simplifies writing hooks in",
    "start": "507440",
    "end": "509599"
  },
  {
    "text": "bash",
    "start": "509599",
    "end": "510560"
  },
  {
    "text": "you'd want to implement two functions",
    "start": "510560",
    "end": "512560"
  },
  {
    "text": "one for configuration phase",
    "start": "512560",
    "end": "514320"
  },
  {
    "text": "in which you output your binding",
    "start": "514320",
    "end": "515680"
  },
  {
    "text": "configuration and one",
    "start": "515680",
    "end": "517680"
  },
  {
    "text": "for the normal execution which contains",
    "start": "517680",
    "end": "519839"
  },
  {
    "text": "your logic",
    "start": "519839",
    "end": "521680"
  },
  {
    "text": "now we've discussed what a hook is",
    "start": "521680",
    "end": "525440"
  },
  {
    "text": "and how it subscribes to kubernetes",
    "start": "525440",
    "end": "527760"
  },
  {
    "text": "events",
    "start": "527760",
    "end": "528959"
  },
  {
    "start": "528000",
    "end": "556000"
  },
  {
    "text": "but what objects are we interested in we",
    "start": "528959",
    "end": "531760"
  },
  {
    "text": "are interested in a source object",
    "start": "531760",
    "end": "534000"
  },
  {
    "text": "source secret since we'd like to know",
    "start": "534000",
    "end": "536320"
  },
  {
    "text": "when it changes and whether it exists or",
    "start": "536320",
    "end": "538160"
  },
  {
    "text": "not",
    "start": "538160",
    "end": "538880"
  },
  {
    "text": "we are interested in all our namespaces",
    "start": "538880",
    "end": "540880"
  },
  {
    "text": "in the cluster",
    "start": "540880",
    "end": "542320"
  },
  {
    "text": "to check whether they are labeled or not",
    "start": "542320",
    "end": "545200"
  },
  {
    "text": "and we are interested in destination",
    "start": "545200",
    "end": "547279"
  },
  {
    "text": "secrets to check whether they are synced",
    "start": "547279",
    "end": "549279"
  },
  {
    "text": "with the source secret",
    "start": "549279",
    "end": "551200"
  },
  {
    "text": "let's start off with configuring a",
    "start": "551200",
    "end": "553360"
  },
  {
    "text": "subscription to",
    "start": "553360",
    "end": "554640"
  },
  {
    "text": "the source secret binging configuration",
    "start": "554640",
    "end": "557279"
  },
  {
    "start": "556000",
    "end": "813000"
  },
  {
    "text": "for it",
    "start": "557279",
    "end": "557760"
  },
  {
    "text": "is extremely simple we define that we",
    "start": "557760",
    "end": "560000"
  },
  {
    "text": "are interested",
    "start": "560000",
    "end": "560880"
  },
  {
    "text": "in secrets in a default namespace with",
    "start": "560880",
    "end": "563760"
  },
  {
    "text": "the name",
    "start": "563760",
    "end": "564320"
  },
  {
    "text": "mysecret once configured in such way",
    "start": "564320",
    "end": "567440"
  },
  {
    "text": "a hook will get executed if a source",
    "start": "567440",
    "end": "569760"
  },
  {
    "text": "secret changes",
    "start": "569760",
    "end": "570800"
  },
  {
    "text": "and it will receive a binding context",
    "start": "570800",
    "end": "572800"
  },
  {
    "text": "which has a name",
    "start": "572800",
    "end": "574000"
  },
  {
    "text": "that we've configured and the full",
    "start": "574000",
    "end": "576080"
  },
  {
    "text": "object",
    "start": "576080",
    "end": "577760"
  },
  {
    "text": "next up the namespaces we specify a kind",
    "start": "577760",
    "end": "580800"
  },
  {
    "text": "namespace",
    "start": "580800",
    "end": "581519"
  },
  {
    "text": "and also include a new field that's",
    "start": "581519",
    "end": "583839"
  },
  {
    "text": "named jkfilter",
    "start": "583839",
    "end": "585360"
  },
  {
    "text": "now what is a jq filter let's get to the",
    "start": "585360",
    "end": "588080"
  },
  {
    "text": "console and find out",
    "start": "588080",
    "end": "589760"
  },
  {
    "text": "if it could ctl get namespace and output",
    "start": "589760",
    "end": "592480"
  },
  {
    "text": "it in json format",
    "start": "592480",
    "end": "593920"
  },
  {
    "text": "and pass it through a simple jq filter",
    "start": "593920",
    "end": "596320"
  },
  {
    "text": "we'll get a new json object that",
    "start": "596320",
    "end": "598080"
  },
  {
    "text": "contains two fields",
    "start": "598080",
    "end": "599360"
  },
  {
    "text": "that we are interested in once",
    "start": "599360",
    "end": "602160"
  },
  {
    "text": "configured in such way",
    "start": "602160",
    "end": "603680"
  },
  {
    "text": "a hook will receive a binding context",
    "start": "603680",
    "end": "605680"
  },
  {
    "text": "that contains an array of filter results",
    "start": "605680",
    "end": "608240"
  },
  {
    "text": "for each namespace that we in a cluster",
    "start": "608240",
    "end": "613279"
  },
  {
    "text": "this filter results will contain a",
    "start": "613279",
    "end": "615760"
  },
  {
    "text": "namespaces name",
    "start": "615760",
    "end": "616880"
  },
  {
    "text": "and the boolean value which describes",
    "start": "616880",
    "end": "619680"
  },
  {
    "text": "where",
    "start": "619680",
    "end": "620480"
  },
  {
    "text": "whether it has a label or not in",
    "start": "620480",
    "end": "623519"
  },
  {
    "text": "previous example",
    "start": "623519",
    "end": "624480"
  },
  {
    "text": "we received a full source object a full",
    "start": "624480",
    "end": "627440"
  },
  {
    "text": "grenade subject",
    "start": "627440",
    "end": "628720"
  },
  {
    "text": "but since we are we aren't interested in",
    "start": "628720",
    "end": "631200"
  },
  {
    "text": "it we can remove it with",
    "start": "631200",
    "end": "633680"
  },
  {
    "text": "a keepful objects in memory false",
    "start": "633680",
    "end": "636800"
  },
  {
    "text": "statement in a minimum configuration and",
    "start": "636800",
    "end": "639200"
  },
  {
    "text": "it will be",
    "start": "639200",
    "end": "640160"
  },
  {
    "text": "missing in binding context last but not",
    "start": "640160",
    "end": "643120"
  },
  {
    "text": "least",
    "start": "643120",
    "end": "643680"
  },
  {
    "text": "destination objects destination secrets",
    "start": "643680",
    "end": "646560"
  },
  {
    "text": "we subscribe to all secrets with the",
    "start": "646560",
    "end": "649040"
  },
  {
    "text": "manage secret yes annotation label",
    "start": "649040",
    "end": "652480"
  },
  {
    "text": "and pass it through a jq filter which",
    "start": "652480",
    "end": "656000"
  },
  {
    "text": "contains its secret namespace and",
    "start": "656000",
    "end": "659120"
  },
  {
    "text": "a resource version that we",
    "start": "659120",
    "end": "662240"
  },
  {
    "text": "pass into a annotation when create",
    "start": "662240",
    "end": "665360"
  },
  {
    "text": "when we create a destination secret we",
    "start": "665360",
    "end": "667839"
  },
  {
    "text": "use resource versions",
    "start": "667839",
    "end": "669279"
  },
  {
    "text": "and store it in the annotation of a",
    "start": "669279",
    "end": "671519"
  },
  {
    "text": "destination secret",
    "start": "671519",
    "end": "672959"
  },
  {
    "text": "to compare secrets yes we can compare",
    "start": "672959",
    "end": "676160"
  },
  {
    "text": "secrets bite by byte",
    "start": "676160",
    "end": "677600"
  },
  {
    "text": "why why do so when kubernetes already",
    "start": "677600",
    "end": "680160"
  },
  {
    "text": "stores",
    "start": "680160",
    "end": "680880"
  },
  {
    "text": "resource versions for us if configured",
    "start": "680880",
    "end": "684720"
  },
  {
    "text": "in such way a hook will execute when",
    "start": "684720",
    "end": "688560"
  },
  {
    "text": "some of these objects change",
    "start": "688560",
    "end": "690000"
  },
  {
    "text": "if any of these objects change it will",
    "start": "690000",
    "end": "692560"
  },
  {
    "text": "receive",
    "start": "692560",
    "end": "693120"
  },
  {
    "text": "three binding contexts that we've",
    "start": "693120",
    "end": "694720"
  },
  {
    "text": "described previously",
    "start": "694720",
    "end": "697040"
  },
  {
    "text": "it will be like a small snapshot of a",
    "start": "697040",
    "end": "699200"
  },
  {
    "text": "cluster",
    "start": "699200",
    "end": "700399"
  },
  {
    "text": "using this information we can devise a",
    "start": "700399",
    "end": "702399"
  },
  {
    "text": "simple algorithm",
    "start": "702399",
    "end": "703839"
  },
  {
    "text": "we iterate over all namespaces and we",
    "start": "703839",
    "end": "706640"
  },
  {
    "text": "check whether it has a label or not",
    "start": "706640",
    "end": "708959"
  },
  {
    "text": "if it has a label we compare source",
    "start": "708959",
    "end": "711440"
  },
  {
    "text": "resources version",
    "start": "711440",
    "end": "713279"
  },
  {
    "text": "to destinations resource version and",
    "start": "713279",
    "end": "716639"
  },
  {
    "text": "if they are similar if they are the same",
    "start": "716639",
    "end": "719760"
  },
  {
    "text": "then we have nothing to do and if they",
    "start": "719760",
    "end": "723680"
  },
  {
    "text": "differ then we execute coop ctl replace",
    "start": "723680",
    "end": "727600"
  },
  {
    "text": "or create if a namespace does not have a",
    "start": "727600",
    "end": "731519"
  },
  {
    "text": "label",
    "start": "731519",
    "end": "732320"
  },
  {
    "text": "then we have to make sure that no secret",
    "start": "732320",
    "end": "734320"
  },
  {
    "text": "is present in the namespace",
    "start": "734320",
    "end": "735920"
  },
  {
    "text": "so we check if a destination secret if a",
    "start": "735920",
    "end": "738639"
  },
  {
    "text": "destination object exists",
    "start": "738639",
    "end": "740399"
  },
  {
    "text": "we coup ctl delete it and if it does not",
    "start": "740399",
    "end": "743360"
  },
  {
    "text": "well",
    "start": "743360",
    "end": "743760"
  },
  {
    "text": "then we do nothing a bash implementation",
    "start": "743760",
    "end": "746639"
  },
  {
    "text": "is simple",
    "start": "746639",
    "end": "747360"
  },
  {
    "text": "as well we iterate over namespaces we",
    "start": "747360",
    "end": "750160"
  },
  {
    "text": "check",
    "start": "750160",
    "end": "750560"
  },
  {
    "text": "whether it has a label or not and if it",
    "start": "750560",
    "end": "752959"
  },
  {
    "text": "does we synchronize secrets",
    "start": "752959",
    "end": "755040"
  },
  {
    "text": "and uh if it does with synchronized",
    "start": "755040",
    "end": "757279"
  },
  {
    "text": "secrets and if it does not we delete",
    "start": "757279",
    "end": "759120"
  },
  {
    "text": "secret",
    "start": "759120",
    "end": "759920"
  },
  {
    "text": "the delete secret function contains",
    "start": "759920",
    "end": "762000"
  },
  {
    "text": "three lines of bash",
    "start": "762000",
    "end": "763680"
  },
  {
    "text": "we check whether a namespace has a",
    "start": "763680",
    "end": "765760"
  },
  {
    "text": "secret and we delete it by static name",
    "start": "765760",
    "end": "768240"
  },
  {
    "text": "my secret",
    "start": "768240",
    "end": "770240"
  },
  {
    "text": "when we synchronize secrets we compare",
    "start": "770240",
    "end": "772240"
  },
  {
    "text": "the source secrets",
    "start": "772240",
    "end": "774240"
  },
  {
    "text": "uh resource version to destination",
    "start": "774240",
    "end": "777440"
  },
  {
    "text": "secrets",
    "start": "777440",
    "end": "778079"
  },
  {
    "text": "uh source resource version that we've",
    "start": "778079",
    "end": "780639"
  },
  {
    "text": "placed in an",
    "start": "780639",
    "end": "781279"
  },
  {
    "text": "annotation and if they differ we",
    "start": "781279",
    "end": "784320"
  },
  {
    "text": "construct a new object and we",
    "start": "784320",
    "end": "787839"
  },
  {
    "text": "execute kubctl create replace to make",
    "start": "787839",
    "end": "790800"
  },
  {
    "text": "sure that the destination secret",
    "start": "790800",
    "end": "792480"
  },
  {
    "text": "is a carbon copy of a source one",
    "start": "792480",
    "end": "795760"
  },
  {
    "text": "as you can see we've skipped some parts",
    "start": "795760",
    "end": "797920"
  },
  {
    "text": "of a script",
    "start": "797920",
    "end": "799120"
  },
  {
    "text": "you can see the full version on the url",
    "start": "799120",
    "end": "802079"
  },
  {
    "text": "below",
    "start": "802079",
    "end": "803360"
  },
  {
    "text": "and that's how we've implemented a",
    "start": "803360",
    "end": "805519"
  },
  {
    "text": "simple controller",
    "start": "805519",
    "end": "806800"
  },
  {
    "text": "in 35 lines of yaml 20 lines in bash",
    "start": "806800",
    "end": "810639"
  },
  {
    "text": "and a shell operator that binds them all",
    "start": "810639",
    "end": "812839"
  },
  {
    "text": "together",
    "start": "812839",
    "end": "814000"
  },
  {
    "start": "813000",
    "end": "922000"
  },
  {
    "text": "secret copying is not the only thing you",
    "start": "814000",
    "end": "816320"
  },
  {
    "text": "can do with the shell operator",
    "start": "816320",
    "end": "818160"
  },
  {
    "text": "few more examples let's imagine",
    "start": "818160",
    "end": "820959"
  },
  {
    "text": "deployment having three pods",
    "start": "820959",
    "end": "823440"
  },
  {
    "text": "and this deployment parts of this",
    "start": "823440",
    "end": "826240"
  },
  {
    "text": "deployment",
    "start": "826240",
    "end": "827519"
  },
  {
    "text": "use config map for some configuration",
    "start": "827519",
    "end": "830639"
  },
  {
    "text": "they might use environment variables or",
    "start": "830639",
    "end": "832800"
  },
  {
    "text": "they might mount configmap as a file",
    "start": "832800",
    "end": "835279"
  },
  {
    "text": "but that's not important what is",
    "start": "835279",
    "end": "838000"
  },
  {
    "text": "important",
    "start": "838000",
    "end": "839120"
  },
  {
    "text": "is that when these pods were starting",
    "start": "839120",
    "end": "841920"
  },
  {
    "text": "config map was in some state",
    "start": "841920",
    "end": "844079"
  },
  {
    "text": "let's call it version one so all",
    "start": "844079",
    "end": "847199"
  },
  {
    "text": "our pods are running with this version",
    "start": "847199",
    "end": "851120"
  },
  {
    "text": "but if configmap changes to another",
    "start": "851120",
    "end": "854000"
  },
  {
    "text": "version",
    "start": "854000",
    "end": "854800"
  },
  {
    "text": "pods will continue running with the old",
    "start": "854800",
    "end": "856959"
  },
  {
    "text": "version",
    "start": "856959",
    "end": "858480"
  },
  {
    "text": "and what we usually do in such cases",
    "start": "858480",
    "end": "862399"
  },
  {
    "text": "yes usually we add something to our pods",
    "start": "862399",
    "end": "866160"
  },
  {
    "text": "template",
    "start": "866160",
    "end": "867920"
  },
  {
    "text": "let's add the annotation with configmap",
    "start": "867920",
    "end": "870560"
  },
  {
    "text": "exam",
    "start": "870560",
    "end": "871839"
  },
  {
    "text": "so now our deployment has this checksum",
    "start": "871839",
    "end": "874880"
  },
  {
    "text": "in it",
    "start": "874880",
    "end": "876079"
  },
  {
    "text": "and all the pods also have it so when we",
    "start": "876079",
    "end": "879279"
  },
  {
    "text": "change the config map",
    "start": "879279",
    "end": "880800"
  },
  {
    "text": "we should not forget to also update the",
    "start": "880800",
    "end": "883199"
  },
  {
    "text": "annotation",
    "start": "883199",
    "end": "884079"
  },
  {
    "text": "or we can use the shell operator",
    "start": "884079",
    "end": "887440"
  },
  {
    "text": "and program a hook that will subscribe",
    "start": "887440",
    "end": "889760"
  },
  {
    "text": "to the config map",
    "start": "889760",
    "end": "891040"
  },
  {
    "text": "and change the checksum so",
    "start": "891040",
    "end": "894320"
  },
  {
    "text": "when a user modifies the config map",
    "start": "894320",
    "end": "897120"
  },
  {
    "text": "shell operator",
    "start": "897120",
    "end": "898399"
  },
  {
    "text": "notices the change and updates checksum",
    "start": "898399",
    "end": "902240"
  },
  {
    "text": "and then the kubernetes auto magic",
    "start": "902240",
    "end": "905120"
  },
  {
    "text": "happens",
    "start": "905120",
    "end": "906240"
  },
  {
    "text": "kubernetes removes one of the pods",
    "start": "906240",
    "end": "908880"
  },
  {
    "text": "creates new one",
    "start": "908880",
    "end": "910480"
  },
  {
    "text": "waits while it becomes ready and then",
    "start": "910480",
    "end": "913519"
  },
  {
    "text": "repeat the same with two other parts",
    "start": "913519",
    "end": "916880"
  },
  {
    "text": "so our deployment becomes fully in",
    "start": "916880",
    "end": "918720"
  },
  {
    "text": "synced fully running with the updated",
    "start": "918720",
    "end": "921040"
  },
  {
    "text": "config map",
    "start": "921040",
    "end": "923040"
  },
  {
    "start": "922000",
    "end": "1006000"
  },
  {
    "text": "we are not going to delve into the code",
    "start": "923040",
    "end": "925279"
  },
  {
    "text": "for such a hook",
    "start": "925279",
    "end": "926560"
  },
  {
    "text": "but you can find the whole examples by",
    "start": "926560",
    "end": "928639"
  },
  {
    "text": "following the link",
    "start": "928639",
    "end": "930880"
  },
  {
    "text": "below it should be like here or",
    "start": "930880",
    "end": "934959"
  },
  {
    "text": "it probably will be bigger so like here",
    "start": "934959",
    "end": "938839"
  },
  {
    "text": "um okay",
    "start": "938839",
    "end": "943040"
  },
  {
    "text": "another example and",
    "start": "943360",
    "end": "946639"
  },
  {
    "text": "let's jump back to the beginning to the",
    "start": "946639",
    "end": "949920"
  },
  {
    "text": "slide with",
    "start": "949920",
    "end": "950800"
  },
  {
    "text": "yaml file server we should remember that",
    "start": "950800",
    "end": "954160"
  },
  {
    "text": "kubernetes allows us not only",
    "start": "954160",
    "end": "956560"
  },
  {
    "text": "use the object kinds that are",
    "start": "956560",
    "end": "960160"
  },
  {
    "text": "embedded but it allows us to create our",
    "start": "960160",
    "end": "962800"
  },
  {
    "text": "own kinds",
    "start": "962800",
    "end": "963600"
  },
  {
    "text": "so we can create the kind with the name",
    "start": "963600",
    "end": "965519"
  },
  {
    "text": "mysql database",
    "start": "965519",
    "end": "967120"
  },
  {
    "text": "why not and this kind will have only",
    "start": "967120",
    "end": "970079"
  },
  {
    "text": "metadata",
    "start": "970079",
    "end": "971120"
  },
  {
    "text": "only name and namespace so",
    "start": "971120",
    "end": "974399"
  },
  {
    "text": "basically we have our kubernetes with",
    "start": "974399",
    "end": "976720"
  },
  {
    "text": "our namespaces",
    "start": "976720",
    "end": "978160"
  },
  {
    "text": "and we can create mysql databases in",
    "start": "978160",
    "end": "980399"
  },
  {
    "text": "them",
    "start": "980399",
    "end": "981680"
  },
  {
    "text": "and we can use shell operator to watch",
    "start": "981680",
    "end": "984800"
  },
  {
    "text": "for resources of kind mysql database",
    "start": "984800",
    "end": "987279"
  },
  {
    "text": "connect to the real mysql database and",
    "start": "987279",
    "end": "990079"
  },
  {
    "text": "synchronize the list of databases",
    "start": "990079",
    "end": "991839"
  },
  {
    "text": "between",
    "start": "991839",
    "end": "993199"
  },
  {
    "text": "what we have in kubernetes between the",
    "start": "993199",
    "end": "996160"
  },
  {
    "text": "desired state",
    "start": "996160",
    "end": "997199"
  },
  {
    "text": "and what we have in the mysql server",
    "start": "997199",
    "end": "1000720"
  },
  {
    "text": "the observed state between desired",
    "start": "1000720",
    "end": "1004959"
  },
  {
    "text": "and observed state okay",
    "start": "1004959",
    "end": "1008880"
  },
  {
    "start": "1006000",
    "end": "1134000"
  },
  {
    "text": "example number three uh",
    "start": "1008880",
    "end": "1012800"
  },
  {
    "text": "or four we want to monitor",
    "start": "1012800",
    "end": "1016079"
  },
  {
    "text": "the cluster network and",
    "start": "1016079",
    "end": "1019360"
  },
  {
    "text": "one of the easiest way to monitor the",
    "start": "1019360",
    "end": "1021120"
  },
  {
    "text": "network we know it from our previous",
    "start": "1021120",
    "end": "1023839"
  },
  {
    "text": "sysadmin life",
    "start": "1023839",
    "end": "1025280"
  },
  {
    "text": "is by using ping and to do that",
    "start": "1025280",
    "end": "1028720"
  },
  {
    "text": "we of course use shell operator and we",
    "start": "1028720",
    "end": "1031678"
  },
  {
    "text": "subscribe to nodes",
    "start": "1031679",
    "end": "1033918"
  },
  {
    "text": "and we only need the node name and its",
    "start": "1033919",
    "end": "1037199"
  },
  {
    "text": "ip address so we can go through the list",
    "start": "1037199",
    "end": "1040240"
  },
  {
    "text": "of nodes",
    "start": "1040240",
    "end": "1040959"
  },
  {
    "text": "and just ping each of them but",
    "start": "1040959",
    "end": "1045280"
  },
  {
    "text": "i want to add a few things to this",
    "start": "1045280",
    "end": "1047038"
  },
  {
    "text": "binding configuration",
    "start": "1047039",
    "end": "1048880"
  },
  {
    "text": "first i don't want the hook to be",
    "start": "1048880",
    "end": "1051360"
  },
  {
    "text": "executed",
    "start": "1051360",
    "end": "1052000"
  },
  {
    "text": "on any event so i pass the empty array",
    "start": "1052000",
    "end": "1055679"
  },
  {
    "text": "so when notes are added changed",
    "start": "1055679",
    "end": "1058799"
  },
  {
    "text": "deleted or whatever the hook will not be",
    "start": "1058799",
    "end": "1061600"
  },
  {
    "text": "executed",
    "start": "1061600",
    "end": "1062480"
  },
  {
    "text": "but then when it will be executed",
    "start": "1062480",
    "end": "1066240"
  },
  {
    "text": "every minute it will be executed every",
    "start": "1066240",
    "end": "1069280"
  },
  {
    "text": "minute",
    "start": "1069280",
    "end": "1070080"
  },
  {
    "text": "and every minute hook will receive the",
    "start": "1070080",
    "end": "1072480"
  },
  {
    "text": "list of all nodes",
    "start": "1072480",
    "end": "1074000"
  },
  {
    "text": "because we have subscribed to them",
    "start": "1074000",
    "end": "1077039"
  },
  {
    "text": "okay uh",
    "start": "1077039",
    "end": "1080880"
  },
  {
    "text": "that's that looks cool i suppose but",
    "start": "1080880",
    "end": "1084880"
  },
  {
    "text": "how do we report problems how do we",
    "start": "1084880",
    "end": "1087600"
  },
  {
    "text": "report",
    "start": "1087600",
    "end": "1088240"
  },
  {
    "text": "packet loss let's look a bit into the",
    "start": "1088240",
    "end": "1091120"
  },
  {
    "text": "code",
    "start": "1091120",
    "end": "1092160"
  },
  {
    "text": "and find out so we walk through",
    "start": "1092160",
    "end": "1095360"
  },
  {
    "text": "nodes extract node's name and node ip",
    "start": "1095360",
    "end": "1098880"
  },
  {
    "text": "address",
    "start": "1098880",
    "end": "1100080"
  },
  {
    "text": "pins the node and then we write",
    "start": "1100080",
    "end": "1102559"
  },
  {
    "text": "prometheus metric",
    "start": "1102559",
    "end": "1104400"
  },
  {
    "text": "shell operator allows hooks to export",
    "start": "1104400",
    "end": "1106640"
  },
  {
    "text": "metrics to promisios",
    "start": "1106640",
    "end": "1108160"
  },
  {
    "text": "and all you need to do is to write to",
    "start": "1108160",
    "end": "1110880"
  },
  {
    "text": "the file stored in",
    "start": "1110880",
    "end": "1112559"
  },
  {
    "text": "pass to the file is stored in",
    "start": "1112559",
    "end": "1114480"
  },
  {
    "text": "environment where where",
    "start": "1114480",
    "end": "1116240"
  },
  {
    "text": "variable metrics path",
    "start": "1116240",
    "end": "1119919"
  },
  {
    "text": "and you should write the metric name um",
    "start": "1119919",
    "end": "1124000"
  },
  {
    "text": "what to do with it in this case we",
    "start": "1124000",
    "end": "1126160"
  },
  {
    "text": "increment a counter",
    "start": "1126160",
    "end": "1127840"
  },
  {
    "text": "and add the labels you need",
    "start": "1127840",
    "end": "1131440"
  },
  {
    "text": "that's basically it so i don't know how",
    "start": "1131440",
    "end": "1135039"
  },
  {
    "text": "many",
    "start": "1135039",
    "end": "1135520"
  },
  {
    "text": "lines of code but not many",
    "start": "1135520",
    "end": "1139120"
  },
  {
    "text": "and you get simple network monitoring",
    "start": "1139120",
    "end": "1143360"
  },
  {
    "text": "okay i suppose now your uh imagination",
    "start": "1144080",
    "end": "1147280"
  },
  {
    "text": "is running and you have",
    "start": "1147280",
    "end": "1148960"
  },
  {
    "text": "in your mind at least a few things you",
    "start": "1148960",
    "end": "1151679"
  },
  {
    "text": "want to automate with shell operator",
    "start": "1151679",
    "end": "1154320"
  },
  {
    "text": "or maybe even a dozen and",
    "start": "1154320",
    "end": "1157679"
  },
  {
    "text": "probably that's time for us to finish",
    "start": "1157679",
    "end": "1160240"
  },
  {
    "text": "but i",
    "start": "1160240",
    "end": "1160960"
  },
  {
    "text": "want to explain one last thing but",
    "start": "1160960",
    "end": "1163840"
  },
  {
    "text": "extremely important thing",
    "start": "1163840",
    "end": "1165520"
  },
  {
    "text": "without knowing it you will not feel",
    "start": "1165520",
    "end": "1167360"
  },
  {
    "text": "comfortable with the shell operator",
    "start": "1167360",
    "end": "1171280"
  },
  {
    "text": "kubernetes shell operator event happens",
    "start": "1171280",
    "end": "1175760"
  },
  {
    "text": "shell operator executes a hook and it's",
    "start": "1175760",
    "end": "1178320"
  },
  {
    "text": "running",
    "start": "1178320",
    "end": "1179840"
  },
  {
    "text": "but then another event happens",
    "start": "1179840",
    "end": "1183200"
  },
  {
    "text": "will shell operator start another",
    "start": "1183200",
    "end": "1185200"
  },
  {
    "text": "instance of the same hook",
    "start": "1185200",
    "end": "1187520"
  },
  {
    "text": "but off but what if five events happen",
    "start": "1187520",
    "end": "1190840"
  },
  {
    "text": "simultaneously will she'll operator run",
    "start": "1190840",
    "end": "1193200"
  },
  {
    "text": "all of them in parallel",
    "start": "1193200",
    "end": "1195039"
  },
  {
    "text": "and what will happen to our resources to",
    "start": "1195039",
    "end": "1197520"
  },
  {
    "text": "our memory cpu",
    "start": "1197520",
    "end": "1198960"
  },
  {
    "text": "how can we manage them no shell operator",
    "start": "1198960",
    "end": "1202799"
  },
  {
    "text": "will not do like that",
    "start": "1202799",
    "end": "1204960"
  },
  {
    "text": "shell operator has cueing mechanism",
    "start": "1204960",
    "end": "1208240"
  },
  {
    "text": "so all events are put into the queue",
    "start": "1208240",
    "end": "1211360"
  },
  {
    "text": "before being processed let's imagine we",
    "start": "1211360",
    "end": "1214240"
  },
  {
    "text": "have two hooks",
    "start": "1214240",
    "end": "1215440"
  },
  {
    "text": "and having two hooks our cue will have a",
    "start": "1215440",
    "end": "1218000"
  },
  {
    "text": "vans form",
    "start": "1218000",
    "end": "1219200"
  },
  {
    "text": "for two hooks the first event is for one",
    "start": "1219200",
    "end": "1222799"
  },
  {
    "text": "hook",
    "start": "1222799",
    "end": "1223679"
  },
  {
    "text": "so it's executed and the event is passed",
    "start": "1223679",
    "end": "1227360"
  },
  {
    "text": "to the hook",
    "start": "1227360",
    "end": "1228400"
  },
  {
    "text": "and when it's done the cue proceeds",
    "start": "1228400",
    "end": "1232559"
  },
  {
    "text": "three nicks three next events",
    "start": "1232559",
    "end": "1235679"
  },
  {
    "text": "are for another hook and they are popped",
    "start": "1235679",
    "end": "1238559"
  },
  {
    "text": "out",
    "start": "1238559",
    "end": "1238880"
  },
  {
    "text": "of q and passed to the hook as a badge",
    "start": "1238880",
    "end": "1242400"
  },
  {
    "text": "so who receives the array of events the",
    "start": "1242400",
    "end": "1245280"
  },
  {
    "text": "array of",
    "start": "1245280",
    "end": "1246400"
  },
  {
    "text": "binding contacts or",
    "start": "1246400",
    "end": "1249840"
  },
  {
    "text": "these events can be even combined into a",
    "start": "1249840",
    "end": "1253120"
  },
  {
    "text": "bigger one and we have been actually",
    "start": "1253120",
    "end": "1256559"
  },
  {
    "text": "using this",
    "start": "1256559",
    "end": "1257360"
  },
  {
    "text": "all the time through all the examples",
    "start": "1257360",
    "end": "1259600"
  },
  {
    "text": "the group field is",
    "start": "1259600",
    "end": "1261679"
  },
  {
    "text": "responsible for grouping",
    "start": "1261679",
    "end": "1265039"
  },
  {
    "text": "moreover you can have",
    "start": "1265039",
    "end": "1268159"
  },
  {
    "text": "as many cues as you want and you can",
    "start": "1268159",
    "end": "1270720"
  },
  {
    "text": "have",
    "start": "1270720",
    "end": "1271280"
  },
  {
    "text": "as many hooks as you want",
    "start": "1271280",
    "end": "1274640"
  },
  {
    "text": "and you can use one cue from",
    "start": "1274640",
    "end": "1278000"
  },
  {
    "text": "two hooks or you can use two cues in",
    "start": "1278000",
    "end": "1281120"
  },
  {
    "text": "one hook or create any combination you",
    "start": "1281120",
    "end": "1284080"
  },
  {
    "text": "want",
    "start": "1284080",
    "end": "1284799"
  },
  {
    "text": "and all you need to do is to add just",
    "start": "1284799",
    "end": "1287679"
  },
  {
    "text": "one field",
    "start": "1287679",
    "end": "1288799"
  },
  {
    "text": "into the binding configuration if the",
    "start": "1288799",
    "end": "1291760"
  },
  {
    "text": "queue name is",
    "start": "1291760",
    "end": "1292880"
  },
  {
    "text": "not specified hook is just run in the",
    "start": "1292880",
    "end": "1296559"
  },
  {
    "text": "default queue",
    "start": "1296559",
    "end": "1298320"
  },
  {
    "start": "1298000",
    "end": "1409000"
  },
  {
    "text": "and this queueing mechanism",
    "start": "1298320",
    "end": "1302000"
  },
  {
    "text": "totally solves all the resource",
    "start": "1302000",
    "end": "1304880"
  },
  {
    "text": "management",
    "start": "1304880",
    "end": "1306000"
  },
  {
    "text": "problems a shell operator has an older",
    "start": "1306000",
    "end": "1308799"
  },
  {
    "text": "brother",
    "start": "1308799",
    "end": "1309440"
  },
  {
    "text": "that is named addon operator if you",
    "start": "1309440",
    "end": "1312320"
  },
  {
    "text": "recall",
    "start": "1312320",
    "end": "1312880"
  },
  {
    "text": "a shell operator subscribes to",
    "start": "1312880",
    "end": "1314720"
  },
  {
    "text": "kubernetes events",
    "start": "1314720",
    "end": "1316159"
  },
  {
    "text": "execute hooks if something interesting",
    "start": "1316159",
    "end": "1318480"
  },
  {
    "text": "happens",
    "start": "1318480",
    "end": "1319360"
  },
  {
    "text": "these hooks can change something in the",
    "start": "1319360",
    "end": "1321120"
  },
  {
    "text": "kubernetes cluster",
    "start": "1321120",
    "end": "1322400"
  },
  {
    "text": "or affect something in an external world",
    "start": "1322400",
    "end": "1325520"
  },
  {
    "text": "if we replace shell operator with addon",
    "start": "1325520",
    "end": "1328080"
  },
  {
    "text": "operator",
    "start": "1328080",
    "end": "1328960"
  },
  {
    "text": "we can bundle a helm chart with it",
    "start": "1328960",
    "end": "1332559"
  },
  {
    "text": "then the hooks that previously affected",
    "start": "1332559",
    "end": "1335120"
  },
  {
    "text": "the",
    "start": "1335120",
    "end": "1336080"
  },
  {
    "text": "kubernetes or the external world can set",
    "start": "1336080",
    "end": "1339120"
  },
  {
    "text": "modify or delete values in a value store",
    "start": "1339120",
    "end": "1342799"
  },
  {
    "text": "of an add-on operator",
    "start": "1342799",
    "end": "1344480"
  },
  {
    "text": "if such a change is detected an add-on",
    "start": "1344480",
    "end": "1347200"
  },
  {
    "text": "operator",
    "start": "1347200",
    "end": "1347840"
  },
  {
    "text": "executes helm and passes it a helm chart",
    "start": "1347840",
    "end": "1351120"
  },
  {
    "text": "and the value store the rendered",
    "start": "1351120",
    "end": "1354159"
  },
  {
    "text": "chart is applied to the kubernetes",
    "start": "1354159",
    "end": "1356880"
  },
  {
    "text": "cluster",
    "start": "1356880",
    "end": "1358480"
  },
  {
    "text": "if shell operator is a collection of",
    "start": "1358480",
    "end": "1360480"
  },
  {
    "text": "hooks that are triggered by events",
    "start": "1360480",
    "end": "1362880"
  },
  {
    "text": "an add-on operator is the same thing",
    "start": "1362880",
    "end": "1365520"
  },
  {
    "text": "plus helm integration",
    "start": "1365520",
    "end": "1367760"
  },
  {
    "text": "okay that's it for today thank you for",
    "start": "1367760",
    "end": "1370480"
  },
  {
    "text": "your time",
    "start": "1370480",
    "end": "1371120"
  },
  {
    "text": "we hope you enjoyed it we'll be happy to",
    "start": "1371120",
    "end": "1373440"
  },
  {
    "text": "answer your questions right now",
    "start": "1373440",
    "end": "1375440"
  },
  {
    "text": "and we will be answering in the slack",
    "start": "1375440",
    "end": "1377120"
  },
  {
    "text": "channel for the next few hours",
    "start": "1377120",
    "end": "1379840"
  },
  {
    "text": "and yes just one thing how can you try",
    "start": "1379840",
    "end": "1383039"
  },
  {
    "text": "shallow curator",
    "start": "1383039",
    "end": "1384320"
  },
  {
    "text": "the easiest way is to open the shower",
    "start": "1384320",
    "end": "1386080"
  },
  {
    "text": "paradox github page",
    "start": "1386080",
    "end": "1387679"
  },
  {
    "text": "and you'll find the getting started",
    "start": "1387679",
    "end": "1389280"
  },
  {
    "text": "guide there",
    "start": "1389280",
    "end": "1391280"
  },
  {
    "text": "and if you liked it don't forget to",
    "start": "1391280",
    "end": "1393840"
  },
  {
    "text": "start",
    "start": "1393840",
    "end": "1394880"
  },
  {
    "text": "and subscribe to our youtube channel we",
    "start": "1394880",
    "end": "1396960"
  },
  {
    "text": "just have started it",
    "start": "1396960",
    "end": "1398159"
  },
  {
    "text": "and uh check out our other projects",
    "start": "1398159",
    "end": "1401440"
  },
  {
    "text": "i think you might find them useful see",
    "start": "1401440",
    "end": "1403760"
  },
  {
    "text": "you",
    "start": "1403760",
    "end": "1405120"
  },
  {
    "text": "see ya",
    "start": "1405120",
    "end": "1411840"
  }
]