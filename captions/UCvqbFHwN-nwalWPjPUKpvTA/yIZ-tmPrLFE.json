[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "hello everyone hi I'm Nikhil",
    "start": "290",
    "end": "3600"
  },
  {
    "text": "and I'm a friend Madhu here and we are",
    "start": "3600",
    "end": "5850"
  },
  {
    "text": "going to talk about cluster Federation",
    "start": "5850",
    "end": "7620"
  },
  {
    "text": "in kubernetes and especially",
    "start": "7620",
    "end": "9769"
  },
  {
    "text": "specifically how to write a federated",
    "start": "9769",
    "end": "11730"
  },
  {
    "text": "controller but before we get started can",
    "start": "11730",
    "end": "14849"
  },
  {
    "text": "you get a show of hands of how many",
    "start": "14849",
    "end": "16379"
  },
  {
    "text": "people have actually used cluster",
    "start": "16379",
    "end": "18570"
  },
  {
    "text": "Federation alright a few so just to make",
    "start": "18570",
    "end": "26189"
  },
  {
    "start": "22000",
    "end": "181000"
  },
  {
    "text": "sure everyone understands what cluster",
    "start": "26189",
    "end": "27750"
  },
  {
    "text": "Federation is so cluster Federation",
    "start": "27750",
    "end": "30510"
  },
  {
    "text": "makes it easy to manage multiple",
    "start": "30510",
    "end": "32099"
  },
  {
    "text": "clusters and why would you need multiple",
    "start": "32099",
    "end": "35160"
  },
  {
    "text": "clusters there can be many reasons like",
    "start": "35160",
    "end": "38190"
  },
  {
    "text": "you want clusters closer to where your",
    "start": "38190",
    "end": "39930"
  },
  {
    "text": "customers are you have customers in",
    "start": "39930",
    "end": "41610"
  },
  {
    "text": "Europe and you have customers in US so",
    "start": "41610",
    "end": "44940"
  },
  {
    "text": "you would want clusters in both those",
    "start": "44940",
    "end": "46590"
  },
  {
    "text": "continents across you don't want cross",
    "start": "46590",
    "end": "48660"
  },
  {
    "text": "Atlantic latency or you want high",
    "start": "48660",
    "end": "51210"
  },
  {
    "text": "availability that you will have clusters",
    "start": "51210",
    "end": "53100"
  },
  {
    "text": "in multiple availability zones so even",
    "start": "53100",
    "end": "55140"
  },
  {
    "text": "if one goes down the other still",
    "start": "55140",
    "end": "57360"
  },
  {
    "text": "continues to work all right you might",
    "start": "57360",
    "end": "59640"
  },
  {
    "text": "need multiple clusters for scalability",
    "start": "59640",
    "end": "61579"
  },
  {
    "text": "or you want to avoid vendor lock-in like",
    "start": "61579",
    "end": "64408"
  },
  {
    "text": "you have a hybrid make a hybrid setup",
    "start": "64409",
    "end": "67290"
  },
  {
    "text": "you have one on AWS one on GCP or on",
    "start": "67290",
    "end": "69540"
  },
  {
    "text": "Prem so those are some of the reasons",
    "start": "69540",
    "end": "71670"
  },
  {
    "text": "why you might need multiple clusters and",
    "start": "71670",
    "end": "73979"
  },
  {
    "text": "what Federation specifically helps with",
    "start": "73979",
    "end": "76409"
  },
  {
    "text": "is like in this example you can see you",
    "start": "76409",
    "end": "78960"
  },
  {
    "text": "might have red blue and green three",
    "start": "78960",
    "end": "81000"
  },
  {
    "text": "different clusters and you want to",
    "start": "81000",
    "end": "82680"
  },
  {
    "text": "deploy your app across all the three",
    "start": "82680",
    "end": "84479"
  },
  {
    "text": "clusters so without Federation how would",
    "start": "84479",
    "end": "86670"
  },
  {
    "text": "you do it your developer would have to",
    "start": "86670",
    "end": "89460"
  },
  {
    "text": "create the same deployment across all",
    "start": "89460",
    "end": "91439"
  },
  {
    "text": "those three clusters ensure whenever you",
    "start": "91439",
    "end": "93450"
  },
  {
    "text": "are doing a rolling update you'll have",
    "start": "93450",
    "end": "94890"
  },
  {
    "text": "to update all three of them with",
    "start": "94890",
    "end": "96810"
  },
  {
    "text": "Federation you get a single endpoint",
    "start": "96810",
    "end": "98549"
  },
  {
    "text": "which ensures that you are all that your",
    "start": "98549",
    "end": "101310"
  },
  {
    "text": "app is in sync across all the three",
    "start": "101310",
    "end": "103079"
  },
  {
    "text": "clusters so instead of sending those",
    "start": "103079",
    "end": "105570"
  },
  {
    "text": "commands to all those three individual",
    "start": "105570",
    "end": "107430"
  },
  {
    "text": "clusters you just tell Federation that I",
    "start": "107430",
    "end": "109320"
  },
  {
    "text": "want this app deployed and this is the",
    "start": "109320",
    "end": "111240"
  },
  {
    "text": "version I want and Federation ensures",
    "start": "111240",
    "end": "112920"
  },
  {
    "text": "that it's deployed to all all the",
    "start": "112920",
    "end": "115020"
  },
  {
    "text": "clusters you do you can do rolling",
    "start": "115020",
    "end": "116430"
  },
  {
    "text": "update rollbacks everything works and",
    "start": "116430",
    "end": "118409"
  },
  {
    "text": "all the clusters are in sync and once",
    "start": "118409",
    "end": "122820"
  },
  {
    "text": "you have these apps deployed you also",
    "start": "122820",
    "end": "124530"
  },
  {
    "text": "want to create these network resources",
    "start": "124530",
    "end": "126149"
  },
  {
    "text": "like service or ingress like if you have",
    "start": "126149",
    "end": "128280"
  },
  {
    "text": "an English object you want to configure",
    "start": "128280",
    "end": "131370"
  },
  {
    "text": "that ingress in such a way that",
    "start": "131370",
    "end": "133260"
  },
  {
    "text": "it's backends are configured from all",
    "start": "133260",
    "end": "134940"
  },
  {
    "text": "the clusters like if there are pods",
    "start": "134940",
    "end": "136950"
  },
  {
    "text": "running in red blue green all the tree",
    "start": "136950",
    "end": "138930"
  },
  {
    "text": "clusters all of them should be",
    "start": "138930",
    "end": "140640"
  },
  {
    "text": "configured as correct backends for",
    "start": "140640",
    "end": "142319"
  },
  {
    "text": "ingress or your global service as well",
    "start": "142319",
    "end": "144930"
  },
  {
    "text": "so if you if you are creating service or",
    "start": "144930",
    "end": "147510"
  },
  {
    "text": "ingress via Federation Federation does",
    "start": "147510",
    "end": "149549"
  },
  {
    "text": "it for you it will automatically create",
    "start": "149549",
    "end": "151049"
  },
  {
    "text": "the load balancer or the DNS DNS rules",
    "start": "151049",
    "end": "154560"
  },
  {
    "text": "for this service in such a way that all",
    "start": "154560",
    "end": "156510"
  },
  {
    "text": "of those would be valid backends and now",
    "start": "156510",
    "end": "159180"
  },
  {
    "text": "since your developer or your admins are",
    "start": "159180",
    "end": "161879"
  },
  {
    "text": "talking to this single Federation",
    "start": "161879",
    "end": "163980"
  },
  {
    "text": "control plane instead of talking to each",
    "start": "163980",
    "end": "165629"
  },
  {
    "text": "of those individual Estelle's this",
    "start": "165629",
    "end": "168269"
  },
  {
    "text": "becomes the single place you can apply",
    "start": "168269",
    "end": "170190"
  },
  {
    "text": "all your policies like should ulam",
    "start": "170190",
    "end": "171989"
  },
  {
    "text": "policies or our policies everything you",
    "start": "171989",
    "end": "174989"
  },
  {
    "text": "you apply those policies in Federation",
    "start": "174989",
    "end": "177569"
  },
  {
    "text": "and Federation gives you a single point",
    "start": "177569",
    "end": "179489"
  },
  {
    "text": "where you do that so if you want to do",
    "start": "179489",
    "end": "183209"
  },
  {
    "start": "181000",
    "end": "251000"
  },
  {
    "text": "it how it really works",
    "start": "183209",
    "end": "184319"
  },
  {
    "text": "you first have to sign up for Federation",
    "start": "184319",
    "end": "186390"
  },
  {
    "text": "control plane and then you can join all",
    "start": "186390",
    "end": "188760"
  },
  {
    "text": "the clusters that you want to Federation",
    "start": "188760",
    "end": "190530"
  },
  {
    "text": "once you've done that you use the you",
    "start": "190530",
    "end": "195150"
  },
  {
    "text": "can use Federation as in you'll use",
    "start": "195150",
    "end": "196799"
  },
  {
    "text": "kubernetes Federation is 100% api",
    "start": "196799",
    "end": "199230"
  },
  {
    "text": "compatible with kubernetes if you have",
    "start": "199230",
    "end": "201389"
  },
  {
    "text": "your existing replica set definition and",
    "start": "201389",
    "end": "203849"
  },
  {
    "text": "you run like you cal create queue cut",
    "start": "203849",
    "end": "206069"
  },
  {
    "text": "will create replicas set to and you send",
    "start": "206069",
    "end": "208410"
  },
  {
    "text": "that request to cube api server the same",
    "start": "208410",
    "end": "210540"
  },
  {
    "text": "request can be sent to federation api",
    "start": "210540",
    "end": "212220"
  },
  {
    "text": "server and the defaults are configured",
    "start": "212220",
    "end": "214349"
  },
  {
    "text": "in such a way that it will all work out",
    "start": "214349",
    "end": "215849"
  },
  {
    "text": "like it",
    "start": "215849",
    "end": "216329"
  },
  {
    "text": "by default balance the replicas across",
    "start": "216329",
    "end": "218760"
  },
  {
    "text": "all the three clusters and obviously you",
    "start": "218760",
    "end": "221280"
  },
  {
    "text": "there are some additional advantages",
    "start": "221280",
    "end": "222900"
  },
  {
    "text": "that Federation gives and you can",
    "start": "222900",
    "end": "224519"
  },
  {
    "text": "enhance the replica side spec that you",
    "start": "224519",
    "end": "226950"
  },
  {
    "text": "already had to take advantage of those",
    "start": "226950",
    "end": "229139"
  },
  {
    "text": "Federation specific features as well but",
    "start": "229139",
    "end": "231359"
  },
  {
    "text": "your existing replica set spec that used",
    "start": "231359",
    "end": "233370"
  },
  {
    "text": "to work with kubernetes",
    "start": "233370",
    "end": "234480"
  },
  {
    "text": "will work with Federation as well so",
    "start": "234480",
    "end": "236609"
  },
  {
    "text": "like your kubernetes don't need to know",
    "start": "236609",
    "end": "238500"
  },
  {
    "text": "developers don't need to know that are",
    "start": "238500",
    "end": "241410"
  },
  {
    "text": "they talking to a kubernetes api server",
    "start": "241410",
    "end": "243209"
  },
  {
    "text": "or a federation api server they just get",
    "start": "243209",
    "end": "245069"
  },
  {
    "text": "an endpoint and the same kubernetes",
    "start": "245069",
    "end": "247139"
  },
  {
    "text": "resources work for Federation so to go",
    "start": "247139",
    "end": "252329"
  },
  {
    "start": "251000",
    "end": "306000"
  },
  {
    "text": "deeper into the architecture this is",
    "start": "252329",
    "end": "255329"
  },
  {
    "text": "like a 30,000 foot view of how a cluster",
    "start": "255329",
    "end": "258479"
  },
  {
    "text": "Federation setup looks like you see",
    "start": "258479",
    "end": "260639"
  },
  {
    "text": "their users on the right and there's",
    "start": "260639",
    "end": "263010"
  },
  {
    "text": "Federation control plane which is",
    "start": "263010",
    "end": "264630"
  },
  {
    "text": "talking to you multiple clusters",
    "start": "264630",
    "end": "266729"
  },
  {
    "text": "the users can talk the various ways they",
    "start": "266729",
    "end": "269249"
  },
  {
    "text": "can talk to the Federation control plane",
    "start": "269249",
    "end": "270870"
  },
  {
    "text": "they can use the REST API they can use q",
    "start": "270870",
    "end": "273360"
  },
  {
    "text": "cuttle command-line interface or the UI",
    "start": "273360",
    "end": "275219"
  },
  {
    "text": "and you'll see those are similar to how",
    "start": "275219",
    "end": "277379"
  },
  {
    "text": "you would talk to a kubernetes control",
    "start": "277379",
    "end": "279150"
  },
  {
    "text": "plane as well and you send you our",
    "start": "279150",
    "end": "281999"
  },
  {
    "text": "request to Federation control plane",
    "start": "281999",
    "end": "283650"
  },
  {
    "text": "which then sends it to the other",
    "start": "283650",
    "end": "285419"
  },
  {
    "text": "clusters that you registered with",
    "start": "285419",
    "end": "287129"
  },
  {
    "text": "Federation and for those of you who are",
    "start": "287129",
    "end": "289770"
  },
  {
    "text": "familiar with kubernetes this looks very",
    "start": "289770",
    "end": "291930"
  },
  {
    "text": "similar to how kubernetes works their",
    "start": "291930",
    "end": "294509"
  },
  {
    "text": "users who can you talk to kubernetes",
    "start": "294509",
    "end": "296310"
  },
  {
    "text": "control plane but then sends those",
    "start": "296310",
    "end": "298020"
  },
  {
    "text": "requests to nodes so your developers no",
    "start": "298020",
    "end": "301020"
  },
  {
    "text": "need to talk to the nodes directly they",
    "start": "301020",
    "end": "302729"
  },
  {
    "text": "just talk to the kubernetes control",
    "start": "302729",
    "end": "304199"
  },
  {
    "text": "plane and to go deeper into the control",
    "start": "304199",
    "end": "309120"
  },
  {
    "start": "306000",
    "end": "386000"
  },
  {
    "text": "plane in kubernetes you know the control",
    "start": "309120",
    "end": "312509"
  },
  {
    "text": "plane consists of like these are the",
    "start": "312509",
    "end": "314279"
  },
  {
    "text": "main components in the control plane",
    "start": "314279",
    "end": "317039"
  },
  {
    "text": "there's API server there's HCD and",
    "start": "317039",
    "end": "319349"
  },
  {
    "text": "there's controller so when users send",
    "start": "319349",
    "end": "322289"
  },
  {
    "text": "their request to the control plane",
    "start": "322289",
    "end": "323550"
  },
  {
    "text": "they're actually talking to the API",
    "start": "323550",
    "end": "325080"
  },
  {
    "text": "server cube api server which stores the",
    "start": "325080",
    "end": "327779"
  },
  {
    "text": "desired state which it received from the",
    "start": "327779",
    "end": "330089"
  },
  {
    "text": "user and just those stores it in its CD",
    "start": "330089",
    "end": "332849"
  },
  {
    "text": "and then controllers make those desired",
    "start": "332849",
    "end": "336089"
  },
  {
    "text": "state happen",
    "start": "336089",
    "end": "336900"
  },
  {
    "text": "so what controllers do is they'll read",
    "start": "336900",
    "end": "338550"
  },
  {
    "text": "the desired state that the user wanted",
    "start": "338550",
    "end": "341310"
  },
  {
    "text": "from API server then they'll read what",
    "start": "341310",
    "end": "343740"
  },
  {
    "text": "is the existing state of the cluster and",
    "start": "343740",
    "end": "345930"
  },
  {
    "text": "then they'll take actions to bring the",
    "start": "345930",
    "end": "348629"
  },
  {
    "text": "current state of the system to the",
    "start": "348629",
    "end": "350159"
  },
  {
    "text": "desired state so if the user said I want",
    "start": "350159",
    "end": "352710"
  },
  {
    "text": "a replica set with five replicas the",
    "start": "352710",
    "end": "355500"
  },
  {
    "text": "replica state controller will observe",
    "start": "355500",
    "end": "357060"
  },
  {
    "text": "that this is the users intent and right",
    "start": "357060",
    "end": "359250"
  },
  {
    "text": "now in the cluster",
    "start": "359250",
    "end": "360000"
  },
  {
    "text": "I see only like there's no replica",
    "start": "360000",
    "end": "361680"
  },
  {
    "text": "existing so then it will go ahead and",
    "start": "361680",
    "end": "363960"
  },
  {
    "text": "create those five replicas so controller",
    "start": "363960",
    "end": "366060"
  },
  {
    "text": "is the one that does all that work in",
    "start": "366060",
    "end": "369000"
  },
  {
    "text": "Federation",
    "start": "369000",
    "end": "369810"
  },
  {
    "text": "again the control plane looks very",
    "start": "369810",
    "end": "371310"
  },
  {
    "text": "similar there's Federation API server",
    "start": "371310",
    "end": "373349"
  },
  {
    "text": "and users are talking to Federation API",
    "start": "373349",
    "end": "375629"
  },
  {
    "text": "server they express the desired state",
    "start": "375629",
    "end": "378089"
  },
  {
    "text": "what they want it's stored in HDD and",
    "start": "378089",
    "end": "380849"
  },
  {
    "text": "then there's Federation controllers",
    "start": "380849",
    "end": "382439"
  },
  {
    "text": "which make that the desired state happen",
    "start": "382439",
    "end": "386210"
  },
  {
    "start": "386000",
    "end": "564000"
  },
  {
    "text": "now to tell us more about how those",
    "start": "386210",
    "end": "388830"
  },
  {
    "text": "controllers work I'll invite module",
    "start": "388830",
    "end": "391009"
  },
  {
    "text": "thanks thank you so before actually",
    "start": "391009",
    "end": "393779"
  },
  {
    "text": "looking at how to write a Federation",
    "start": "393779",
    "end": "396149"
  },
  {
    "text": "controller or a federated control",
    "start": "396149",
    "end": "398190"
  },
  {
    "text": "let's try to understand why one would",
    "start": "398190",
    "end": "401010"
  },
  {
    "text": "want to write a federated controller or",
    "start": "401010",
    "end": "402750"
  },
  {
    "text": "like any controller but before that",
    "start": "402750",
    "end": "405780"
  },
  {
    "text": "let's also do a show of hands again how",
    "start": "405780",
    "end": "407880"
  },
  {
    "text": "many of you attended one of the",
    "start": "407880",
    "end": "409740"
  },
  {
    "text": "controller stock either esterday or",
    "start": "409740",
    "end": "411810"
  },
  {
    "text": "today we have talked means ever number",
    "start": "411810",
    "end": "413610"
  },
  {
    "text": "of talks about this ok not many of you I",
    "start": "413610",
    "end": "417180"
  },
  {
    "text": "guess anyway so what's the motivation",
    "start": "417180",
    "end": "419430"
  },
  {
    "text": "one of the main the key powers of",
    "start": "419430",
    "end": "422790"
  },
  {
    "text": "kubernetes actually lies on its",
    "start": "422790",
    "end": "424680"
  },
  {
    "text": "extensibility it's a very extensible",
    "start": "424680",
    "end": "426990"
  },
  {
    "text": "system one way to look at kubernetes is",
    "start": "426990",
    "end": "430790"
  },
  {
    "text": "kubernetes is an api server so it ships",
    "start": "430790",
    "end": "434550"
  },
  {
    "text": "a bunch of interfaces and in the",
    "start": "434550",
    "end": "437340"
  },
  {
    "text": "official release or the distribution",
    "start": "437340",
    "end": "439220"
  },
  {
    "text": "along with those interfaces we ship a",
    "start": "439220",
    "end": "442320"
  },
  {
    "text": "bunch of implementations those are the",
    "start": "442320",
    "end": "444270"
  },
  {
    "text": "controllers and there are other",
    "start": "444270",
    "end": "446910"
  },
  {
    "text": "components like your proxy DNS or and",
    "start": "446910",
    "end": "449280"
  },
  {
    "text": "all those things which could be",
    "start": "449280",
    "end": "450390"
  },
  {
    "text": "considered as controllers because they",
    "start": "450390",
    "end": "451890"
  },
  {
    "text": "they do similar things but these",
    "start": "451890",
    "end": "457250"
  },
  {
    "text": "implementations are our most cases 90 to",
    "start": "457250",
    "end": "460890"
  },
  {
    "text": "95 percent of use cases but there are",
    "start": "460890",
    "end": "462930"
  },
  {
    "text": "always cases which are not covered by",
    "start": "462930",
    "end": "465030"
  },
  {
    "text": "these implementations so in order to",
    "start": "465030",
    "end": "468060"
  },
  {
    "text": "extend this implementation or extend the",
    "start": "468060",
    "end": "469950"
  },
  {
    "text": "functionality provided by the default",
    "start": "469950",
    "end": "471690"
  },
  {
    "text": "implementations or the default",
    "start": "471690",
    "end": "472860"
  },
  {
    "text": "controllers you might want to either",
    "start": "472860",
    "end": "475530"
  },
  {
    "text": "augment or extend the existing",
    "start": "475530",
    "end": "477180"
  },
  {
    "text": "controllers one of the example that I",
    "start": "477180",
    "end": "479070"
  },
  {
    "text": "can think of is let's say you have a",
    "start": "479070",
    "end": "480930"
  },
  {
    "text": "replica set in API object and we ship a",
    "start": "480930",
    "end": "484020"
  },
  {
    "text": "replica set controller but what if you",
    "start": "484020",
    "end": "486870"
  },
  {
    "text": "also wanted to create an audit trail or",
    "start": "486870",
    "end": "489540"
  },
  {
    "text": "audit log for every replica set created",
    "start": "489540",
    "end": "491640"
  },
  {
    "text": "in your system which is not provided by",
    "start": "491640",
    "end": "493440"
  },
  {
    "text": "kubernetes today there are talks about",
    "start": "493440",
    "end": "494700"
  },
  {
    "text": "providing it in the future releases but",
    "start": "494700",
    "end": "496590"
  },
  {
    "text": "it's not there today and you want it now",
    "start": "496590",
    "end": "498960"
  },
  {
    "text": "so you could write your own controller",
    "start": "498960",
    "end": "501480"
  },
  {
    "text": "to extend this functionality create",
    "start": "501480",
    "end": "503910"
  },
  {
    "text": "audit logs like who created the log at",
    "start": "503910",
    "end": "505680"
  },
  {
    "text": "what time who created a replica sec at",
    "start": "505680",
    "end": "507510"
  },
  {
    "text": "what time was it created and you could",
    "start": "507510",
    "end": "509550"
  },
  {
    "text": "store in your database you could do that",
    "start": "509550",
    "end": "511590"
  },
  {
    "text": "today if you want to another reason why",
    "start": "511590",
    "end": "514469"
  },
  {
    "text": "you might want to write your own",
    "start": "514469",
    "end": "516539"
  },
  {
    "text": "controller is to customize the behavior",
    "start": "516539",
    "end": "518240"
  },
  {
    "text": "there are a number of implementations",
    "start": "518240",
    "end": "520860"
  },
  {
    "text": "examples for this today the ingress API",
    "start": "520860",
    "end": "524340"
  },
  {
    "text": "object is the best example",
    "start": "524340",
    "end": "526200"
  },
  {
    "text": "kubernetes for GCP ships and ingress",
    "start": "526200",
    "end": "528810"
  },
  {
    "text": "implementation but there is",
    "start": "528810",
    "end": "530209"
  },
  {
    "text": "ix implementation people have written",
    "start": "530209",
    "end": "532009"
  },
  {
    "text": "their own implementation for fi or any",
    "start": "532009",
    "end": "534170"
  },
  {
    "text": "other load balancer that they have on",
    "start": "534170",
    "end": "535670"
  },
  {
    "text": "Prem so these are the key motivations",
    "start": "535670",
    "end": "538790"
  },
  {
    "text": "one of the other motivations but lesser",
    "start": "538790",
    "end": "541459"
  },
  {
    "text": "a far lesser motivation is you might",
    "start": "541459",
    "end": "543800"
  },
  {
    "text": "want to implement your own API object",
    "start": "543800",
    "end": "546730"
  },
  {
    "text": "kubernetes code kubernetes as a cluster",
    "start": "546730",
    "end": "549470"
  },
  {
    "text": "has this concept called",
    "start": "549470",
    "end": "550850"
  },
  {
    "text": "TP our third-party resource we don't",
    "start": "550850",
    "end": "553369"
  },
  {
    "text": "have that in Federation right now",
    "start": "553369",
    "end": "555559"
  },
  {
    "text": "but we'll probably have it sometime in",
    "start": "555559",
    "end": "557149"
  },
  {
    "text": "the near future but yeah that's also",
    "start": "557149",
    "end": "559309"
  },
  {
    "text": "another use case where you might want to",
    "start": "559309",
    "end": "560839"
  },
  {
    "text": "have your own object and write a",
    "start": "560839",
    "end": "562550"
  },
  {
    "text": "controller for it with that let's look",
    "start": "562550",
    "end": "565819"
  },
  {
    "start": "564000",
    "end": "708000"
  },
  {
    "text": "at the architecture of the Federation",
    "start": "565819",
    "end": "567980"
  },
  {
    "text": "controller specifically for this a for",
    "start": "567980",
    "end": "571519"
  },
  {
    "text": "this talk we have created a demo I don't",
    "start": "571519",
    "end": "574730"
  },
  {
    "text": "know how much the demo is going to work",
    "start": "574730",
    "end": "576759"
  },
  {
    "text": "but for this demo we have created an API",
    "start": "576759",
    "end": "580309"
  },
  {
    "text": "object called the foo object it's called",
    "start": "580309",
    "end": "582649"
  },
  {
    "text": "type foo it's exposed by our the",
    "start": "582649",
    "end": "585350"
  },
  {
    "text": "Federation API server I'm for that we're",
    "start": "585350",
    "end": "588230"
  },
  {
    "text": "going to write a controller today so",
    "start": "588230",
    "end": "589819"
  },
  {
    "text": "like equivalent is controller if you are",
    "start": "589819",
    "end": "591800"
  },
  {
    "text": "familiar with the kubernetes controller",
    "start": "591800",
    "end": "593059"
  },
  {
    "text": "architecture the Federation controller",
    "start": "593059",
    "end": "595119"
  },
  {
    "text": "is a binary it's an executable that can",
    "start": "595119",
    "end": "599509"
  },
  {
    "text": "run as a part inside your cluster so we",
    "start": "599509",
    "end": "602329"
  },
  {
    "text": "have this controller called the foo",
    "start": "602329",
    "end": "604069"
  },
  {
    "text": "controller and just like the kubernetes",
    "start": "604069",
    "end": "606559"
  },
  {
    "text": "controller it talks to the API server",
    "start": "606559",
    "end": "608869"
  },
  {
    "text": "but the difference in this case is it",
    "start": "608869",
    "end": "610759"
  },
  {
    "text": "talks to the Federation API server which",
    "start": "610759",
    "end": "612619"
  },
  {
    "text": "is on the right here what does it do",
    "start": "612619",
    "end": "615170"
  },
  {
    "text": "what do controllers do in kubernetes",
    "start": "615170",
    "end": "616790"
  },
  {
    "text": "they watch for the desired state and",
    "start": "616790",
    "end": "619339"
  },
  {
    "text": "reconcile so in this case this is the",
    "start": "619339",
    "end": "622670"
  },
  {
    "text": "foo controller and because we want to",
    "start": "622670",
    "end": "625429"
  },
  {
    "text": "reconcile the stage for the foo object",
    "start": "625429",
    "end": "627410"
  },
  {
    "text": "this watches for the foo API resource in",
    "start": "627410",
    "end": "631100"
  },
  {
    "text": "the Federation API server but in",
    "start": "631100",
    "end": "634639"
  },
  {
    "text": "addition to that this is special to",
    "start": "634639",
    "end": "637069"
  },
  {
    "text": "Federation every federated controller",
    "start": "637069",
    "end": "639920"
  },
  {
    "text": "also watches an API resource called",
    "start": "639920",
    "end": "643160"
  },
  {
    "text": "clusters this API resource lists all the",
    "start": "643160",
    "end": "646879"
  },
  {
    "text": "clusters that are part of the Federation",
    "start": "646879",
    "end": "648529"
  },
  {
    "text": "this is the key difference kubernetes",
    "start": "648529",
    "end": "652309"
  },
  {
    "text": "controllers watch for the desired state",
    "start": "652309",
    "end": "655339"
  },
  {
    "text": "in a kubernetes cluster and reconciles",
    "start": "655339",
    "end": "658879"
  },
  {
    "text": "the state in the same cluster",
    "start": "658879",
    "end": "661459"
  },
  {
    "text": "whereas federated control",
    "start": "661459",
    "end": "663620"
  },
  {
    "text": "Swach for the desired state on the",
    "start": "663620",
    "end": "665839"
  },
  {
    "text": "Federation API server but reconcile this",
    "start": "665839",
    "end": "669230"
  },
  {
    "text": "state in the kubernetes underlying",
    "start": "669230",
    "end": "671060"
  },
  {
    "text": "kubernetes clusters which are part of",
    "start": "671060",
    "end": "672560"
  },
  {
    "text": "the Federation so we don't have clusters",
    "start": "672560",
    "end": "674839"
  },
  {
    "text": "right now but after you start watching",
    "start": "674839",
    "end": "677680"
  },
  {
    "text": "the clusters you probably also want to",
    "start": "677680",
    "end": "681170"
  },
  {
    "text": "start watching the same API resource foo",
    "start": "681170",
    "end": "684050"
  },
  {
    "text": "in all the underlying clusters so if a",
    "start": "684050",
    "end": "686839"
  },
  {
    "text": "new cluster joins Federation you",
    "start": "686839",
    "end": "689779"
  },
  {
    "text": "immediately want to start watching for",
    "start": "689779",
    "end": "691520"
  },
  {
    "text": "the foo API type in the underlying",
    "start": "691520",
    "end": "694460"
  },
  {
    "text": "cluster so if another cluster joins you",
    "start": "694460",
    "end": "697760"
  },
  {
    "text": "want to start doing the same thing and",
    "start": "697760",
    "end": "699380"
  },
  {
    "text": "the same thing every time in your",
    "start": "699380",
    "end": "700520"
  },
  {
    "text": "cluster joins and you might also want to",
    "start": "700520",
    "end": "702589"
  },
  {
    "text": "do some cleanup operations if you want",
    "start": "702589",
    "end": "704210"
  },
  {
    "text": "when a cluster leaves Federation so with",
    "start": "704210",
    "end": "709220"
  },
  {
    "start": "708000",
    "end": "818000"
  },
  {
    "text": "that let's go a little deeper this is",
    "start": "709220",
    "end": "712400"
  },
  {
    "text": "like lowering the conceptual levels we",
    "start": "712400",
    "end": "715040"
  },
  {
    "text": "looked at the conceptual architecture",
    "start": "715040",
    "end": "716570"
  },
  {
    "text": "now let's look at the actual API types",
    "start": "716570",
    "end": "718880"
  },
  {
    "text": "and after this let's go little deeper",
    "start": "718880",
    "end": "720890"
  },
  {
    "text": "into the code itself so the Federation",
    "start": "720890",
    "end": "726290"
  },
  {
    "text": "API server exposes the clusters API type",
    "start": "726290",
    "end": "729230"
  },
  {
    "text": "and it also exposes the food resource",
    "start": "729230",
    "end": "731690"
  },
  {
    "text": "type and we want to what watch these API",
    "start": "731690",
    "end": "735020"
  },
  {
    "text": "objects these are the specific specific",
    "start": "735020",
    "end": "737320"
  },
  {
    "text": "resource version and kind name",
    "start": "737320",
    "end": "740089"
  },
  {
    "text": "Federation /v 1 beta 1 slash cluster is",
    "start": "740089",
    "end": "742610"
  },
  {
    "text": "actually a real API resource type in",
    "start": "742610",
    "end": "745160"
  },
  {
    "text": "Federation and you can watch for this",
    "start": "745160",
    "end": "747290"
  },
  {
    "text": "and for is another type that we added",
    "start": "747290",
    "end": "749360"
  },
  {
    "text": "just for this demo then you watch for",
    "start": "749360",
    "end": "752779"
  },
  {
    "text": "the same food source type which is also",
    "start": "752779",
    "end": "755240"
  },
  {
    "text": "exposed for this demo in all the",
    "start": "755240",
    "end": "757370"
  },
  {
    "text": "underlying kubernetes clusters once you",
    "start": "757370",
    "end": "760100"
  },
  {
    "text": "do that you basically set up your",
    "start": "760100",
    "end": "763550"
  },
  {
    "text": "control loops which reconcile all you do",
    "start": "763550",
    "end": "766790"
  },
  {
    "text": "in in this particular example the only",
    "start": "766790",
    "end": "769010"
  },
  {
    "text": "thing that we do is copy the object from",
    "start": "769010",
    "end": "771440"
  },
  {
    "text": "the Federation API server to the",
    "start": "771440",
    "end": "772820"
  },
  {
    "text": "kubernetes api server it does not really",
    "start": "772820",
    "end": "775520"
  },
  {
    "text": "do anything interesting but it shows it",
    "start": "775520",
    "end": "778880"
  },
  {
    "text": "demonstrates the idea of Federation",
    "start": "778880",
    "end": "781400"
  },
  {
    "text": "so you basically watch for the desired",
    "start": "781400",
    "end": "784070"
  },
  {
    "text": "state in Federation API server and",
    "start": "784070",
    "end": "787010"
  },
  {
    "text": "update the state in the underlying",
    "start": "787010",
    "end": "788390"
  },
  {
    "text": "clusters and in addition to that one",
    "start": "788390",
    "end": "790700"
  },
  {
    "text": "more thing that a federation or a",
    "start": "790700",
    "end": "792350"
  },
  {
    "text": "federated controller handles is",
    "start": "792350",
    "end": "794320"
  },
  {
    "text": "cascading deletion when you warn the",
    "start": "794320",
    "end": "797300"
  },
  {
    "text": "when the object is deleted from",
    "start": "797300",
    "end": "798970"
  },
  {
    "text": "federated API server you want the same",
    "start": "798970",
    "end": "801740"
  },
  {
    "text": "object to be deleted from all the",
    "start": "801740",
    "end": "803210"
  },
  {
    "text": "underlying kubernetes clusters so with",
    "start": "803210",
    "end": "807500"
  },
  {
    "text": "that let's actually go like right into",
    "start": "807500",
    "end": "810590"
  },
  {
    "text": "the code this is a little too much I",
    "start": "810590",
    "end": "812870"
  },
  {
    "text": "think but let's see how much we can so",
    "start": "812870",
    "end": "820880"
  },
  {
    "start": "818000",
    "end": "1008000"
  },
  {
    "text": "we talked about all these concept shell",
    "start": "820880",
    "end": "823280"
  },
  {
    "text": "things the first thing that we talked",
    "start": "823280",
    "end": "826100"
  },
  {
    "text": "about was watching the full resource the",
    "start": "826100",
    "end": "828620"
  },
  {
    "text": "controller architecture or the",
    "start": "828620",
    "end": "830240"
  },
  {
    "text": "controller infrastructure in kubernetes",
    "start": "830240",
    "end": "832100"
  },
  {
    "text": "is actually a library that you can use",
    "start": "832100",
    "end": "834310"
  },
  {
    "text": "there's a lot of coding here but I'll",
    "start": "834310",
    "end": "836870"
  },
  {
    "text": "point out the important bits this is",
    "start": "836870",
    "end": "839630"
  },
  {
    "text": "this some of this is boilerplate which",
    "start": "839630",
    "end": "841850"
  },
  {
    "text": "is setting up the library or calling the",
    "start": "841850",
    "end": "843320"
  },
  {
    "text": "right functions or the packages right",
    "start": "843320",
    "end": "847160"
  },
  {
    "text": "the methods so we have a library called",
    "start": "847160",
    "end": "850970"
  },
  {
    "text": "as the informer library for writing",
    "start": "850970",
    "end": "852860"
  },
  {
    "text": "controllers informer libraries used",
    "start": "852860",
    "end": "855380"
  },
  {
    "text": "everywhere including a disk controllers",
    "start": "855380",
    "end": "857030"
  },
  {
    "text": "every kubernetes controller talks to API",
    "start": "857030",
    "end": "859790"
  },
  {
    "text": "server or sets up a watch",
    "start": "859790",
    "end": "861590"
  },
  {
    "text": "using the informer library so setting up",
    "start": "861590",
    "end": "864290"
  },
  {
    "text": "the informer library looks like a lot of",
    "start": "864290",
    "end": "866360"
  },
  {
    "text": "code but it's mostly boilerplate it's",
    "start": "866360",
    "end": "868370"
  },
  {
    "text": "not a lot actually and it can be easily",
    "start": "868370",
    "end": "871010"
  },
  {
    "text": "copy pasted and that's how most of us",
    "start": "871010",
    "end": "872930"
  },
  {
    "text": "start writing new controllers we",
    "start": "872930",
    "end": "874400"
  },
  {
    "text": "copy/paste from somewhere else and then",
    "start": "874400",
    "end": "875930"
  },
  {
    "text": "start changing and then actually",
    "start": "875930",
    "end": "877550"
  },
  {
    "text": "implement the logic so this is how you",
    "start": "877550",
    "end": "880400"
  },
  {
    "text": "set up an informer this Informer is",
    "start": "880400",
    "end": "883130"
  },
  {
    "text": "basically setting up a watch for your",
    "start": "883130",
    "end": "886640"
  },
  {
    "text": "resource type foo resource type in the",
    "start": "886640",
    "end": "889070"
  },
  {
    "text": "Federation API server so it says foo",
    "start": "889070",
    "end": "892220"
  },
  {
    "text": "resource and you need to provide two",
    "start": "892220",
    "end": "894920"
  },
  {
    "text": "lambda functions which are",
    "start": "894920",
    "end": "895940"
  },
  {
    "text": "implementations which are basically to",
    "start": "895940",
    "end": "897980"
  },
  {
    "text": "list and watch watch does a watch for",
    "start": "897980",
    "end": "901340"
  },
  {
    "text": "the events in the API server and we also",
    "start": "901340",
    "end": "904670"
  },
  {
    "text": "need a list implementation because a",
    "start": "904670",
    "end": "906740"
  },
  {
    "text": "watch uses a cache and caches can go out",
    "start": "906740",
    "end": "909470"
  },
  {
    "text": "of sync so time to time we do a",
    "start": "909470",
    "end": "912530"
  },
  {
    "text": "completely sink like list all the",
    "start": "912530",
    "end": "914360"
  },
  {
    "text": "resources from the underlying API server",
    "start": "914360",
    "end": "917570"
  },
  {
    "text": "and update the cache so you need to",
    "start": "917570",
    "end": "920150"
  },
  {
    "text": "provide these two implementations list",
    "start": "920150",
    "end": "922040"
  },
  {
    "text": "and watch pretty simple they just call",
    "start": "922040",
    "end": "923540"
  },
  {
    "text": "the client functions the appropriate",
    "start": "923540",
    "end": "926090"
  },
  {
    "text": "client functions and then you need to",
    "start": "926090",
    "end": "928010"
  },
  {
    "text": "say what object you are watching",
    "start": "928010",
    "end": "930470"
  },
  {
    "text": "then a bunch of other boilerplate once",
    "start": "930470",
    "end": "932510"
  },
  {
    "text": "you do that the second important thing",
    "start": "932510",
    "end": "935660"
  },
  {
    "text": "that you need to do is watch the",
    "start": "935660",
    "end": "937100"
  },
  {
    "text": "clusters and the other impart the third",
    "start": "937100",
    "end": "939590"
  },
  {
    "text": "important thing is to watch all the",
    "start": "939590",
    "end": "941180"
  },
  {
    "text": "resources in the underlined twisters",
    "start": "941180",
    "end": "943480"
  },
  {
    "text": "these two are taken care by a single",
    "start": "943480",
    "end": "945860"
  },
  {
    "text": "library the other library is called as",
    "start": "945860",
    "end": "948110"
  },
  {
    "text": "the federated informer library don't",
    "start": "948110",
    "end": "950390"
  },
  {
    "text": "worry too much you can see I mean seat",
    "start": "950390",
    "end": "952430"
  },
  {
    "text": "in the back like you can go and look at",
    "start": "952430",
    "end": "953780"
  },
  {
    "text": "one of the controller file files but the",
    "start": "953780",
    "end": "956960"
  },
  {
    "text": "concepts are important so this this",
    "start": "956960",
    "end": "959540"
  },
  {
    "text": "setup looks very much similar to the",
    "start": "959540",
    "end": "961520"
  },
  {
    "text": "previous setup it's just that here you",
    "start": "961520",
    "end": "964790"
  },
  {
    "text": "are watching for the objects in all the",
    "start": "964790",
    "end": "967190"
  },
  {
    "text": "underlying clusters every cluster that",
    "start": "967190",
    "end": "969380"
  },
  {
    "text": "is part of Federation and in the bottom",
    "start": "969380",
    "end": "971750"
  },
  {
    "text": "here you also say you are watching the",
    "start": "971750",
    "end": "974750"
  },
  {
    "text": "clusters themselves the clusters object",
    "start": "974750",
    "end": "976520"
  },
  {
    "text": "that I talked about so in the",
    "start": "976520",
    "end": "978680"
  },
  {
    "text": "implementations that you provide you say",
    "start": "978680",
    "end": "980570"
  },
  {
    "text": "what you want to do when a cluster joins",
    "start": "980570",
    "end": "982880"
  },
  {
    "text": "or leaves a Federation so here in this",
    "start": "982880",
    "end": "985760"
  },
  {
    "text": "specific implementation we only say we",
    "start": "985760",
    "end": "988400"
  },
  {
    "text": "care about cluster available that is we",
    "start": "988400",
    "end": "990650"
  },
  {
    "text": "want to do something when a cluster",
    "start": "990650",
    "end": "991880"
  },
  {
    "text": "becomes available or join Federation we",
    "start": "991880",
    "end": "994430"
  },
  {
    "text": "don't really define what we want to do",
    "start": "994430",
    "end": "996740"
  },
  {
    "text": "when a coastal use Federation but in a",
    "start": "996740",
    "end": "998570"
  },
  {
    "text": "real controller you probably also say",
    "start": "998570",
    "end": "1000600"
  },
  {
    "text": "cluster unavailable and supply an",
    "start": "1000600",
    "end": "1003190"
  },
  {
    "text": "implementation for it so these are the",
    "start": "1003190",
    "end": "1006220"
  },
  {
    "text": "key things to set up the watches and",
    "start": "1006220",
    "end": "1007900"
  },
  {
    "text": "once you set up these watches the other",
    "start": "1007900",
    "end": "1010780"
  },
  {
    "start": "1008000",
    "end": "1188000"
  },
  {
    "text": "thing that you need to set up is the",
    "start": "1010780",
    "end": "1012460"
  },
  {
    "text": "cascading deletion itself again this is",
    "start": "1012460",
    "end": "1015340"
  },
  {
    "text": "another library function where you call",
    "start": "1015340",
    "end": "1018520"
  },
  {
    "text": "the appropriate function new deletion",
    "start": "1018520",
    "end": "1020380"
  },
  {
    "text": "help I mean you call the new deletion",
    "start": "1020380",
    "end": "1021730"
  },
  {
    "text": "helper to set up the deletion helper and",
    "start": "1021730",
    "end": "1023710"
  },
  {
    "text": "you provide a bunch of implementations",
    "start": "1023710",
    "end": "1026079"
  },
  {
    "text": "all these are basically lambda functions",
    "start": "1026080",
    "end": "1027790"
  },
  {
    "text": "or the functions themselves so you",
    "start": "1027790",
    "end": "1030280"
  },
  {
    "text": "provide these functions as",
    "start": "1030280",
    "end": "1032410"
  },
  {
    "text": "implementations we use the finalizer api",
    "start": "1032410",
    "end": "1034660"
  },
  {
    "text": "to set up cascading deletion the details",
    "start": "1034660",
    "end": "1037600"
  },
  {
    "text": "are not that important it can be like",
    "start": "1037600",
    "end": "1040569"
  },
  {
    "text": "you can look at decode one of the",
    "start": "1040570",
    "end": "1042339"
  },
  {
    "text": "controller's code and just use the same",
    "start": "1042340",
    "end": "1044350"
  },
  {
    "text": "code we are also working on simplifying",
    "start": "1044350",
    "end": "1046720"
  },
  {
    "text": "all these libraries so that you don't",
    "start": "1046720",
    "end": "1048310"
  },
  {
    "text": "have to repeat the same things over and",
    "start": "1048310",
    "end": "1050650"
  },
  {
    "text": "over again for controllers but this is",
    "start": "1050650",
    "end": "1052720"
  },
  {
    "text": "the current API or the libraries",
    "start": "1052720",
    "end": "1055060"
  },
  {
    "text": "available once you have all these you",
    "start": "1055060",
    "end": "1058230"
  },
  {
    "text": "basically hook things up you say you",
    "start": "1058230",
    "end": "1061210"
  },
  {
    "text": "want to start the informer for the API",
    "start": "1061210",
    "end": "1064610"
  },
  {
    "text": "and then you say you also want to start",
    "start": "1064610",
    "end": "1066620"
  },
  {
    "text": "the Federated Informer and you start all",
    "start": "1066620",
    "end": "1069320"
  },
  {
    "text": "of them but one key thing that you do",
    "start": "1069320",
    "end": "1071299"
  },
  {
    "text": "here is when you start the informers you",
    "start": "1071299",
    "end": "1074029"
  },
  {
    "text": "also register handlers you want to say",
    "start": "1074029",
    "end": "1076870"
  },
  {
    "text": "you also want to define or you define",
    "start": "1076870",
    "end": "1080179"
  },
  {
    "text": "how you want the reconcile operations to",
    "start": "1080179",
    "end": "1082399"
  },
  {
    "text": "handle so you provide implementations",
    "start": "1082399",
    "end": "1084740"
  },
  {
    "text": "for very consulars there are two",
    "start": "1084740",
    "end": "1086240"
  },
  {
    "text": "reconcile as one is reconciler that runs",
    "start": "1086240",
    "end": "1089059"
  },
  {
    "text": "whenever the cluster membership",
    "start": "1089059",
    "end": "1091309"
  },
  {
    "text": "information changes which is called",
    "start": "1091309",
    "end": "1093260"
  },
  {
    "text": "reconcile force and cluster change and",
    "start": "1093260",
    "end": "1095330"
  },
  {
    "text": "there is other reconciler which runs",
    "start": "1095330",
    "end": "1097159"
  },
  {
    "text": "every time an object itself changes so",
    "start": "1097159",
    "end": "1099710"
  },
  {
    "text": "you provide the implementation for these",
    "start": "1099710",
    "end": "1101690"
  },
  {
    "text": "two types of reconcile errs and the",
    "start": "1101690",
    "end": "1105830"
  },
  {
    "text": "implementation for the reconciles are",
    "start": "1105830",
    "end": "1107929"
  },
  {
    "text": "really simple this is the reconcile",
    "start": "1107929",
    "end": "1110090"
  },
  {
    "text": "force on trusted change so whenever a",
    "start": "1110090",
    "end": "1112010"
  },
  {
    "text": "new cluster we only define what to do",
    "start": "1112010",
    "end": "1114919"
  },
  {
    "text": "when a cluster becomes available so this",
    "start": "1114919",
    "end": "1116990"
  },
  {
    "text": "handler only takes care of cluster",
    "start": "1116990",
    "end": "1119149"
  },
  {
    "text": "becoming available case so in this case",
    "start": "1119149",
    "end": "1121700"
  },
  {
    "text": "if you look at the last few lines of",
    "start": "1121700",
    "end": "1123559"
  },
  {
    "text": "code which is important first one is",
    "start": "1123559",
    "end": "1125659"
  },
  {
    "text": "just the error handling part this is the",
    "start": "1125659",
    "end": "1127789"
  },
  {
    "text": "important part here whenever a new",
    "start": "1127789",
    "end": "1129950"
  },
  {
    "text": "cluster becomes available what to do is",
    "start": "1129950",
    "end": "1131690"
  },
  {
    "text": "you take all the objects you have in",
    "start": "1131690",
    "end": "1133700"
  },
  {
    "text": "Federation and copied to the new cluster",
    "start": "1133700",
    "end": "1135860"
  },
  {
    "text": "so you basically do a list and copy",
    "start": "1135860",
    "end": "1138470"
  },
  {
    "text": "that's it deliver does the copy to the",
    "start": "1138470",
    "end": "1140240"
  },
  {
    "text": "underlined clusters and then the more",
    "start": "1140240",
    "end": "1143330"
  },
  {
    "text": "interesting part the real logic is",
    "start": "1143330",
    "end": "1146029"
  },
  {
    "text": "implemented in reconcile full function",
    "start": "1146029",
    "end": "1148480"
  },
  {
    "text": "all the Federated controller logics are",
    "start": "1148480",
    "end": "1151789"
  },
  {
    "text": "implemented if logica is implemented in",
    "start": "1151789",
    "end": "1153889"
  },
  {
    "text": "this function every single controller",
    "start": "1153889",
    "end": "1155690"
  },
  {
    "text": "but each controller has its own",
    "start": "1155690",
    "end": "1157610"
  },
  {
    "text": "implementation so here every time the",
    "start": "1157610",
    "end": "1161029"
  },
  {
    "text": "Federation or API object itself changes",
    "start": "1161029",
    "end": "1163870"
  },
  {
    "text": "you compare you compare what changed and",
    "start": "1163870",
    "end": "1167179"
  },
  {
    "text": "if anything has changed you propagate",
    "start": "1167179",
    "end": "1169429"
  },
  {
    "text": "the same changes to the underlying",
    "start": "1169429",
    "end": "1170840"
  },
  {
    "text": "clusters and you usually don't want to",
    "start": "1170840",
    "end": "1173929"
  },
  {
    "text": "do the operations every single time",
    "start": "1173929",
    "end": "1176120"
  },
  {
    "text": "something has changed so there is a",
    "start": "1176120",
    "end": "1178580"
  },
  {
    "text": "facility or library to batch these",
    "start": "1178580",
    "end": "1180260"
  },
  {
    "text": "operations so you batch these operations",
    "start": "1180260",
    "end": "1182480"
  },
  {
    "text": "and give it to the updater which does",
    "start": "1182480",
    "end": "1185600"
  },
  {
    "text": "the batch update on all the underlying",
    "start": "1185600",
    "end": "1186919"
  },
  {
    "text": "clusters so with that let's try a demo",
    "start": "1186919",
    "end": "1191440"
  },
  {
    "start": "1188000",
    "end": "1602000"
  },
  {
    "text": "yeah that was a lot of code and we",
    "start": "1191440",
    "end": "1194270"
  },
  {
    "text": "assumed all of you are software",
    "start": "1194270",
    "end": "1195409"
  },
  {
    "text": "developers and wanted to see code but",
    "start": "1195409",
    "end": "1197630"
  },
  {
    "text": "you also",
    "start": "1197630",
    "end": "1198330"
  },
  {
    "text": "demo and hope it works so what I what I",
    "start": "1198330",
    "end": "1206880"
  },
  {
    "text": "have is I have a liquor Federation",
    "start": "1206880",
    "end": "1209429"
  },
  {
    "text": "control plane set up I have two clusters",
    "start": "1209429",
    "end": "1212760"
  },
  {
    "text": "on GCE",
    "start": "1212760",
    "end": "1214169"
  },
  {
    "text": "money on defends owns on GC one is in",
    "start": "1214169",
    "end": "1216690"
  },
  {
    "text": "your central one A and one F and I have",
    "start": "1216690",
    "end": "1220230"
  },
  {
    "text": "set up that this expose foo both those",
    "start": "1220230",
    "end": "1222600"
  },
  {
    "text": "clusters and Federation he pays server",
    "start": "1222600",
    "end": "1224130"
  },
  {
    "text": "also exposes foo and what I'm going to",
    "start": "1224130",
    "end": "1227220"
  },
  {
    "text": "do is I'll create foo and I'll created",
    "start": "1227220",
    "end": "1229740"
  },
  {
    "text": "only in Federation control plane and",
    "start": "1229740",
    "end": "1231299"
  },
  {
    "text": "we'll see how the controller works and",
    "start": "1231299",
    "end": "1233490"
  },
  {
    "text": "propagate said to the underlying",
    "start": "1233490",
    "end": "1235080"
  },
  {
    "text": "clusters as well yeah let's see if I'm",
    "start": "1235080",
    "end": "1239669"
  },
  {
    "text": "able to connect to my machine looks like",
    "start": "1239669",
    "end": "1243870"
  },
  {
    "text": "the odds are not in our favor every",
    "start": "1243870",
    "end": "1246269"
  },
  {
    "text": "single Federation demo since Tuesday",
    "start": "1246269",
    "end": "1248789"
  },
  {
    "text": "evening so law of averages has to work",
    "start": "1248789",
    "end": "1252570"
  },
  {
    "text": "Murphy's Law has to work and we are gone",
    "start": "1252570",
    "end": "1256200"
  },
  {
    "text": "lucky ones",
    "start": "1256200",
    "end": "1257010"
  },
  {
    "text": "yeah and this is even basic SSH what's",
    "start": "1257010",
    "end": "1264059"
  },
  {
    "text": "like yeah I have already seen the code",
    "start": "1264059",
    "end": "1269120"
  },
  {
    "text": "yeah let's actually move forward and if",
    "start": "1269120",
    "end": "1272760"
  },
  {
    "text": "it actually works we can come back come",
    "start": "1272760",
    "end": "1275460"
  },
  {
    "text": "back",
    "start": "1275460",
    "end": "1277490"
  },
  {
    "text": "yeah all right",
    "start": "1277880",
    "end": "1282110"
  },
  {
    "text": "so we've talked about a lot of stuff",
    "start": "1287130",
    "end": "1290279"
  },
  {
    "text": "here and all of that is not implemented",
    "start": "1290279",
    "end": "1292919"
  },
  {
    "text": "we have a lot of stuff working like we",
    "start": "1292919",
    "end": "1295139"
  },
  {
    "text": "have federated ingress replicas",
    "start": "1295139",
    "end": "1297000"
  },
  {
    "text": "self.namespace secrets config maps we",
    "start": "1297000",
    "end": "1299730"
  },
  {
    "text": "have added alpha support for deployments",
    "start": "1299730",
    "end": "1301590"
  },
  {
    "text": "and we recently launched a new come a",
    "start": "1301590",
    "end": "1304259"
  },
  {
    "text": "new command line tool called cube fit",
    "start": "1304259",
    "end": "1306029"
  },
  {
    "text": "which makes it easy to set up the",
    "start": "1306029",
    "end": "1308070"
  },
  {
    "text": "Federation control plane registered",
    "start": "1308070",
    "end": "1309630"
  },
  {
    "text": "clusters and in 1.6 it's going beta as",
    "start": "1309630",
    "end": "1312870"
  },
  {
    "text": "well",
    "start": "1312870",
    "end": "1313289"
  },
  {
    "text": "but there's still a lot of work left to",
    "start": "1313289",
    "end": "1315600"
  },
  {
    "text": "be done like the ingress especially",
    "start": "1315600",
    "end": "1320220"
  },
  {
    "text": "works only on GCP right now it doesn't",
    "start": "1320220",
    "end": "1322500"
  },
  {
    "text": "support hybrid scenarios we want to do",
    "start": "1322500",
    "end": "1324600"
  },
  {
    "text": "that these federated services you need a",
    "start": "1324600",
    "end": "1327600"
  },
  {
    "text": "public endpoint for them to work like",
    "start": "1327600",
    "end": "1329309"
  },
  {
    "text": "the DNS rules that we configure it uses",
    "start": "1329309",
    "end": "1331470"
  },
  {
    "text": "Google Cloud DNS provider or route 53 if",
    "start": "1331470",
    "end": "1334080"
  },
  {
    "text": "you are on it ablaze but we want to make",
    "start": "1334080",
    "end": "1336029"
  },
  {
    "text": "it work with private services as well",
    "start": "1336029",
    "end": "1337740"
  },
  {
    "text": "and we we are improving how the access",
    "start": "1337740",
    "end": "1340769"
  },
  {
    "text": "management and identity work and the",
    "start": "1340769",
    "end": "1343320"
  },
  {
    "text": "work that I talked about that Federation",
    "start": "1343320",
    "end": "1344850"
  },
  {
    "text": "control plane becomes the single place",
    "start": "1344850",
    "end": "1346320"
  },
  {
    "text": "where you apply all the policies we are",
    "start": "1346320",
    "end": "1348299"
  },
  {
    "text": "doing a lot of work there as well so",
    "start": "1348299",
    "end": "1350850"
  },
  {
    "text": "there's still a lot of work left to be",
    "start": "1350850",
    "end": "1352470"
  },
  {
    "text": "done and madelyn I have been just lucky",
    "start": "1352470",
    "end": "1356610"
  },
  {
    "text": "enough to be presenting it here but we",
    "start": "1356610",
    "end": "1358379"
  },
  {
    "text": "we are not the only ones working on it",
    "start": "1358379",
    "end": "1360240"
  },
  {
    "text": "like everything in kubernetes this is",
    "start": "1360240",
    "end": "1362399"
  },
  {
    "text": "the community effort we have a",
    "start": "1362399",
    "end": "1364769"
  },
  {
    "text": "federation mailing list which you guys",
    "start": "1364769",
    "end": "1366779"
  },
  {
    "text": "can join or we meet every other week and",
    "start": "1366779",
    "end": "1370230"
  },
  {
    "text": "we have us we are active on slack",
    "start": "1370230",
    "end": "1371850"
  },
  {
    "text": "channel as well and here you can see our",
    "start": "1371850",
    "end": "1374580"
  },
  {
    "text": "email ids and github IDs and you can",
    "start": "1374580",
    "end": "1376350"
  },
  {
    "text": "ping us directly if you are interested",
    "start": "1376350",
    "end": "1378269"
  },
  {
    "text": "in any of the work that we listed you",
    "start": "1378269",
    "end": "1380100"
  },
  {
    "text": "want to contribute we'd love to have",
    "start": "1380100",
    "end": "1381539"
  },
  {
    "text": "those contributions yeah and yes a such",
    "start": "1381539",
    "end": "1385710"
  },
  {
    "text": "thing came back let's see if that works",
    "start": "1385710",
    "end": "1389570"
  },
  {
    "text": "ok can you guys see this can anybody can",
    "start": "1391940",
    "end": "1400470"
  },
  {
    "text": "everyone see this ok",
    "start": "1400470",
    "end": "1405950"
  },
  {
    "text": "yes sir here",
    "start": "1406960",
    "end": "1408590"
  },
  {
    "text": "I've the Federation control plane side",
    "start": "1408590",
    "end": "1410450"
  },
  {
    "text": "up and I have two clusters",
    "start": "1410450",
    "end": "1411890"
  },
  {
    "text": "I sent them up last night and I have",
    "start": "1411890",
    "end": "1413900"
  },
  {
    "text": "food or so side up as well so I'm",
    "start": "1413900",
    "end": "1416750"
  },
  {
    "text": "getting I I can run cue card will get",
    "start": "1416750",
    "end": "1419210"
  },
  {
    "text": "foods with Federation and I can do that",
    "start": "1419210",
    "end": "1421040"
  },
  {
    "text": "the same thing with the underlying",
    "start": "1421040",
    "end": "1422690"
  },
  {
    "text": "clusters as well so you can see here",
    "start": "1422690",
    "end": "1424910"
  },
  {
    "text": "cube cuddle I am using the same cube",
    "start": "1424910",
    "end": "1426800"
  },
  {
    "text": "cuddle binary to be able to talk to",
    "start": "1426800",
    "end": "1428150"
  },
  {
    "text": "Federation API server or the underline",
    "start": "1428150",
    "end": "1430400"
  },
  {
    "text": "clusters as well the way it works is I",
    "start": "1430400",
    "end": "1432530"
  },
  {
    "text": "have set up multiple contexts and I have",
    "start": "1432530",
    "end": "1435680"
  },
  {
    "text": "a Federation context which was talking",
    "start": "1435680",
    "end": "1437300"
  },
  {
    "text": "to Federation API server and similarly I",
    "start": "1437300",
    "end": "1439580"
  },
  {
    "text": "have two other context which are talking",
    "start": "1439580",
    "end": "1441230"
  },
  {
    "text": "to those two underlying cluster clusters",
    "start": "1441230",
    "end": "1443990"
  },
  {
    "text": "that I registered with Federation so not",
    "start": "1443990",
    "end": "1446540"
  },
  {
    "text": "now what I'm going to do is I'll create",
    "start": "1446540",
    "end": "1448460"
  },
  {
    "text": "a very simple foo object and I am I've",
    "start": "1448460",
    "end": "1454040"
  },
  {
    "text": "created it in Federation like you cuddly",
    "start": "1454040",
    "end": "1456440"
  },
  {
    "text": "context Federation and this is how my",
    "start": "1456440",
    "end": "1459080"
  },
  {
    "text": "food looks like it's a very simple",
    "start": "1459080",
    "end": "1460670"
  },
  {
    "text": "object which says cuke on rocks and so",
    "start": "1460670",
    "end": "1464330"
  },
  {
    "text": "now what's happening in the background",
    "start": "1464330",
    "end": "1466160"
  },
  {
    "text": "is the stuff that madhu talked about",
    "start": "1466160",
    "end": "1468080"
  },
  {
    "text": "there's this reconciliation loop running",
    "start": "1468080",
    "end": "1470300"
  },
  {
    "text": "in the controller I have a foo",
    "start": "1470300",
    "end": "1471680"
  },
  {
    "text": "controller running which what it does is",
    "start": "1471680",
    "end": "1473750"
  },
  {
    "text": "it observes that the desired state from",
    "start": "1473750",
    "end": "1476150"
  },
  {
    "text": "the user is that this foo object should",
    "start": "1476150",
    "end": "1478220"
  },
  {
    "text": "exist everywhere in my cluster and what",
    "start": "1478220",
    "end": "1480290"
  },
  {
    "text": "the current state of my cluster is that",
    "start": "1480290",
    "end": "1482030"
  },
  {
    "text": "it doesn't exist in any of those",
    "start": "1482030",
    "end": "1483320"
  },
  {
    "text": "underlying clusters so what the",
    "start": "1483320",
    "end": "1484910"
  },
  {
    "text": "controller will do it will send create",
    "start": "1484910",
    "end": "1486830"
  },
  {
    "text": "requests to both these underlying",
    "start": "1486830",
    "end": "1488720"
  },
  {
    "text": "clusters and now if I do the same Keuka",
    "start": "1488720",
    "end": "1492170"
  },
  {
    "text": "delegate foods in the underlying",
    "start": "1492170",
    "end": "1493430"
  },
  {
    "text": "clusters and see those this cube",
    "start": "1493430",
    "end": "1496100"
  },
  {
    "text": "cointreau object there as well so it",
    "start": "1496100",
    "end": "1498350"
  },
  {
    "text": "exists in Federation and it exists in",
    "start": "1498350",
    "end": "1501170"
  },
  {
    "text": "the underlying clusters as well so foo",
    "start": "1501170",
    "end": "1507650"
  },
  {
    "text": "controller did this panning out of the",
    "start": "1507650",
    "end": "1510140"
  },
  {
    "text": "request to underlying clusters but it",
    "start": "1510140",
    "end": "1511970"
  },
  {
    "text": "wasn't just at creation time it's always",
    "start": "1511970",
    "end": "1514460"
  },
  {
    "text": "running always active so what if I go",
    "start": "1514460",
    "end": "1517040"
  },
  {
    "text": "ahead and delete this foo object from",
    "start": "1517040",
    "end": "1519770"
  },
  {
    "text": "one of the underlying clusters so I'll",
    "start": "1519770",
    "end": "1521450"
  },
  {
    "text": "delete it from money so since this foo",
    "start": "1521450",
    "end": "1525110"
  },
  {
    "text": "controller is always running it will",
    "start": "1525110",
    "end": "1526910"
  },
  {
    "text": "again figure out that the desired state",
    "start": "1526910",
    "end": "1529070"
  },
  {
    "text": "is that this fool this coupon few",
    "start": "1529070",
    "end": "1531890"
  },
  {
    "text": "objects should exist in all the clusters",
    "start": "1531890",
    "end": "1533540"
  },
  {
    "text": "but it got deleted from one so it",
    "start": "1533540",
    "end": "1535429"
  },
  {
    "text": "doesn't exist there",
    "start": "1535429",
    "end": "1536880"
  },
  {
    "text": "again send a create request to that",
    "start": "1536880",
    "end": "1538710"
  },
  {
    "text": "cluster and again make sure that coupon",
    "start": "1538710",
    "end": "1542070"
  },
  {
    "text": "true exists in both the clusters so if I",
    "start": "1542070",
    "end": "1545070"
  },
  {
    "text": "get Fu's again I see it was recreated 13",
    "start": "1545070",
    "end": "1548010"
  },
  {
    "text": "seconds ago and if you really want to",
    "start": "1548010",
    "end": "1552120"
  },
  {
    "text": "delete this coupon few object you will",
    "start": "1552120",
    "end": "1554820"
  },
  {
    "text": "delete it from Federation API server",
    "start": "1554820",
    "end": "1557100"
  },
  {
    "text": "because that becomes the place of like",
    "start": "1557100",
    "end": "1560190"
  },
  {
    "text": "the source of growth so if I go ahead",
    "start": "1560190",
    "end": "1562770"
  },
  {
    "text": "and delete coupon food from Federation",
    "start": "1562770",
    "end": "1564750"
  },
  {
    "text": "again the foo controller will observe",
    "start": "1564750",
    "end": "1568380"
  },
  {
    "text": "that now coupon few is not part of the",
    "start": "1568380",
    "end": "1570630"
  },
  {
    "text": "desired state but it still exists in the",
    "start": "1570630",
    "end": "1572640"
  },
  {
    "text": "underlying clusters so then it will go",
    "start": "1572640",
    "end": "1574230"
  },
  {
    "text": "ahead and delete it from the underlying",
    "start": "1574230",
    "end": "1575490"
  },
  {
    "text": "clusters as well that shows like it's",
    "start": "1575490",
    "end": "1578490"
  },
  {
    "text": "always active always running always",
    "start": "1578490",
    "end": "1580380"
  },
  {
    "text": "ensuring what did the desired state",
    "start": "1580380",
    "end": "1583290"
  },
  {
    "text": "matches the current state so now if I do",
    "start": "1583290",
    "end": "1585510"
  },
  {
    "text": "get foods in the underlined cluster it",
    "start": "1585510",
    "end": "1587760"
  },
  {
    "text": "should say no resource found in both",
    "start": "1587760",
    "end": "1589320"
  },
  {
    "text": "those clusters yeah that's all I have",
    "start": "1589320",
    "end": "1594750"
  },
  {
    "text": "glad that bit of a work yeah that's it",
    "start": "1594750",
    "end": "1598930"
  },
  {
    "text": "[Applause]",
    "start": "1598930",
    "end": "1603989"
  }
]