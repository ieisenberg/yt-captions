[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "3480"
  },
  {
    "text": "hello everyone and welcome to our session about insights into unsecured kubernetes in the wild we are really",
    "start": "5520",
    "end": "12880"
  },
  {
    "text": "excited to be here virtually and hope you'll enjoy and learn from this talk",
    "start": "12880",
    "end": "19119"
  },
  {
    "text": "all right so let's go over the agenda for today uh first we'll talk about attacks against misconfigured docker",
    "start": "19119",
    "end": "26720"
  },
  {
    "text": "we'll talk about the notorious misconfiguration in docker that allow uh executing uh commands on docker demons",
    "start": "26720",
    "end": "34559"
  },
  {
    "text": "and then we will talk about the trends the growing trends trends of attacking",
    "start": "34559",
    "end": "41040"
  },
  {
    "text": "those demons and after that we'll go over the research we did which is splitted into",
    "start": "41040",
    "end": "48399"
  },
  {
    "text": "two parts the first one is that we thought how kubernetes can be",
    "start": "48399",
    "end": "53520"
  },
  {
    "text": "misconfigured and then we actively can scans the internet for such misconfigured kubernetes",
    "start": "53520",
    "end": "61359"
  },
  {
    "text": "clusters and the results are going to shock you at least they shocked me after that we'll go",
    "start": "61359",
    "end": "67680"
  },
  {
    "text": "and talk about the honeypot we deployed so we deployed those honeypots in order",
    "start": "67680",
    "end": "72880"
  },
  {
    "text": "to see how frequent and what the the impact of those attacks on in on",
    "start": "72880",
    "end": "79520"
  },
  {
    "text": "misconfigured kubernetes components so basically those honeypots are the",
    "start": "79520",
    "end": "84840"
  },
  {
    "text": "misconfigured kubernetes components and then we'll show you the results of",
    "start": "84840",
    "end": "90400"
  },
  {
    "text": "the the honeypots and then we'll talk about hildegard which is a crypto jacking",
    "start": "90400",
    "end": "97360"
  },
  {
    "text": "malware we found using one of our honeypots it's the first ever documented",
    "start": "97360",
    "end": "103840"
  },
  {
    "text": "malware that is designed to attack cubelets and we show you how it takes",
    "start": "103840",
    "end": "108880"
  },
  {
    "text": "over all of the cluster and right after it will talk about how to avoid such",
    "start": "108880",
    "end": "115640"
  },
  {
    "text": "misconfigurations so that stuff like this won't happen to you",
    "start": "115640",
    "end": "120880"
  },
  {
    "text": "all right so let's go over who we are so me and jay both are security researchers",
    "start": "120880",
    "end": "128720"
  },
  {
    "text": "at palo alto networks under unit 42 which is the division for uh threat",
    "start": "128720",
    "end": "134400"
  },
  {
    "text": "intelligence in palo alto networks uh our area of expertise",
    "start": "134400",
    "end": "139840"
  },
  {
    "text": "is the cloud we're both really enthusiastic about the cloud and all of our researchers were about anything that",
    "start": "139840",
    "end": "146959"
  },
  {
    "text": "involves the cloud that includes vulnerabilities malware uh campaign",
    "start": "146959",
    "end": "152400"
  },
  {
    "text": "attack surfaces and everything that is security wise interesting and as you see by the pictures we are",
    "start": "152400",
    "end": "159920"
  },
  {
    "text": "both proud pet owners i got my dog and jay got his cats hopefully someday we'll be",
    "start": "159920",
    "end": "167360"
  },
  {
    "text": "friends so let's start and talk about insecure docker demons",
    "start": "167360",
    "end": "172959"
  },
  {
    "text": "so basically uh docker demon listen on a unix socket for api request and only",
    "start": "172959",
    "end": "179920"
  },
  {
    "text": "root can acquire this unix socket so docker count on that and",
    "start": "179920",
    "end": "185440"
  },
  {
    "text": "that's why they don't have any authentication or authorization mechanism inside so anything anyone that",
    "start": "185440",
    "end": "192959"
  },
  {
    "text": "acquired this socket can just run any commands on the docker demon but there are also another option to",
    "start": "192959",
    "end": "199440"
  },
  {
    "text": "configure docker to listen on a tcp port but as i said earlier by default there",
    "start": "199440",
    "end": "206560"
  },
  {
    "text": "isn't any authentication or authorization so that leads to the situation where",
    "start": "206560",
    "end": "213680"
  },
  {
    "text": "people just expose their docker demon using the tcp socket",
    "start": "213680",
    "end": "218959"
  },
  {
    "text": "and they don't have any authentication or authorization and anyone can just access their daemon and execute commands",
    "start": "218959",
    "end": "225920"
  },
  {
    "text": "they can create new containers delete existing containers pull images",
    "start": "225920",
    "end": "231840"
  },
  {
    "text": "execute commands on existing containers they just got full privileges",
    "start": "231840",
    "end": "238239"
  },
  {
    "text": "and actually last year we found that there were over 1400 exposed",
    "start": "238239",
    "end": "244560"
  },
  {
    "text": "unsecured docker demons online and my hunch is",
    "start": "244560",
    "end": "249680"
  },
  {
    "text": "that during the last year this number just got increased",
    "start": "249680",
    "end": "255439"
  },
  {
    "start": "255000",
    "end": "345000"
  },
  {
    "text": "right so we have this misconfiguration but is this really problem does anyone",
    "start": "255439",
    "end": "262240"
  },
  {
    "text": "really exploit those demons so we wanted to test it and in 2019 unit",
    "start": "262240",
    "end": "269600"
  },
  {
    "text": "42 researchers detected the malware that exploits exploit dismissed configuration and they",
    "start": "269600",
    "end": "275759"
  },
  {
    "text": "call it graboid and it was a warm a crypto jacking worm",
    "start": "275759",
    "end": "281840"
  },
  {
    "text": "its purpose was to mine monero which is a cryptocurrency and",
    "start": "281840",
    "end": "287120"
  },
  {
    "text": "it propagated through the misconfiguration of docker and just",
    "start": "287120",
    "end": "292960"
  },
  {
    "text": "exploited it and scanned other docker demons and exploited them",
    "start": "292960",
    "end": "298560"
  },
  {
    "text": "as well so we saw that and this was two years ago",
    "start": "298560",
    "end": "304560"
  },
  {
    "text": "and it was just the tip of the iceberg because since then we saw numerous other",
    "start": "304560",
    "end": "313759"
  },
  {
    "text": "malware designed to attack unsecured docker demons and we actually have a",
    "start": "313759",
    "end": "320000"
  },
  {
    "text": "honeypot that been operating for more than one year and a half",
    "start": "320000",
    "end": "325520"
  },
  {
    "text": "and we could see that during this time the frequency of attacks",
    "start": "325520",
    "end": "332479"
  },
  {
    "text": "was more than doubled and the number of adversaries was more than tripled we",
    "start": "332479",
    "end": "338400"
  },
  {
    "text": "talked about it on this black hat and the fighting the findings over there are",
    "start": "338400",
    "end": "343919"
  },
  {
    "text": "just nuts so we have this problem with docker and everyone exploited but we wanted to to",
    "start": "343919",
    "end": "352400"
  },
  {
    "text": "ask ourselves is there any similar issue like this in kubernetes",
    "start": "352400",
    "end": "359120"
  },
  {
    "text": "as well are there any common misconfiguration kubernetes that can allow such attacks",
    "start": "359120",
    "end": "365520"
  },
  {
    "text": "and if there are are there any attack surfaces uh for that misconfigurations and if",
    "start": "365520",
    "end": "373280"
  },
  {
    "text": "there are any attack surfaces are they being exploited in the wild",
    "start": "373280",
    "end": "379280"
  },
  {
    "text": "so that's the question that led us in this research and now i'm going to hand it to jay",
    "start": "379280",
    "end": "386400"
  },
  {
    "text": "thank you ali let's dive into kubernetes so",
    "start": "386400",
    "end": "392560"
  },
  {
    "text": "we have seen a lot of attacks against misconfigure uh dr demons",
    "start": "392560",
    "end": "397600"
  },
  {
    "text": "and we thought that hey this may also happen to darker bigger brother",
    "start": "397600",
    "end": "402960"
  },
  {
    "text": "kubernetes so we want to look into the attacks against kubernetes in the wild",
    "start": "402960",
    "end": "410000"
  },
  {
    "text": "and what are the components what are the attack surfaces of kubernetes that",
    "start": "410000",
    "end": "415680"
  },
  {
    "text": "we are focusing on so we pick two components in kubernetes api server and",
    "start": "415680",
    "end": "422319"
  },
  {
    "text": "kubila the reason we pick these two components is that they mirror the functionalities of darker daemons in",
    "start": "422319",
    "end": "429440"
  },
  {
    "text": "darker environment api server is like the gateway to the entire",
    "start": "429440",
    "end": "434639"
  },
  {
    "text": "to entire kubernetes cluster and copy that is like a gateway to",
    "start": "434639",
    "end": "439759"
  },
  {
    "text": "uh to a single worker node so api server can control",
    "start": "439759",
    "end": "444880"
  },
  {
    "text": "so api server takes http request and translate into operation to control",
    "start": "444880",
    "end": "450720"
  },
  {
    "text": "nodes parts and deployments in a in a quantity cluster could be that text",
    "start": "450720",
    "end": "457680"
  },
  {
    "text": "usually takes http request from api server and translate translate those",
    "start": "457680",
    "end": "462880"
  },
  {
    "text": "http requests into operations uh in a single worker node so let's see how these two components",
    "start": "462880",
    "end": "470400"
  },
  {
    "text": "can be uh can can be misconfigured api server misconfiguration so by default",
    "start": "470400",
    "end": "476240"
  },
  {
    "text": "kubernetes api server listens on two ports a secure port and a local host port",
    "start": "476240",
    "end": "482639"
  },
  {
    "text": "secured port use mutual tos to authenticate between clients and servers",
    "start": "482639",
    "end": "487919"
  },
  {
    "text": "by default it runs on port 643 so any clients who need to communicate",
    "start": "487919",
    "end": "494639"
  },
  {
    "text": "with the api server need to pass strict mutual authentication in",
    "start": "494639",
    "end": "501120"
  },
  {
    "text": "order to invoke any api on the api server",
    "start": "501120",
    "end": "507840"
  },
  {
    "text": "and for the local host port it is by default it is intended for testing and bootstrap",
    "start": "507840",
    "end": "514240"
  },
  {
    "text": "purpose by default it is exposed to only localhost port 8080 it is not supposed to be",
    "start": "514240",
    "end": "522080"
  },
  {
    "text": "exposed to the entire internet it is it can only listen to requests coming from",
    "start": "522080",
    "end": "527279"
  },
  {
    "text": "the same host of the api server and an identity can authenticate clients",
    "start": "527279",
    "end": "534080"
  },
  {
    "text": "accessing this particular local host port are mapped to system master groups",
    "start": "534080",
    "end": "539920"
  },
  {
    "text": "meaning that any request sent to this port doesn't need to be authenticated",
    "start": "539920",
    "end": "545279"
  },
  {
    "text": "any anonymous request sent to this port can actually act as a system assistant",
    "start": "545279",
    "end": "551360"
  },
  {
    "text": "academy of the community class so what can possibly go wrong with this",
    "start": "551360",
    "end": "557600"
  },
  {
    "text": "local host port what if the local host port is exposed to the public internet",
    "start": "557600",
    "end": "562880"
  },
  {
    "text": "so on the right is the this this is how uh could be a kobe api",
    "start": "562880",
    "end": "568640"
  },
  {
    "text": "server can be misconfigured if someone accidentally bind this port to",
    "start": "568640",
    "end": "574839"
  },
  {
    "text": "0.0.0.0 instead of localhost this port is exposed in to the entire",
    "start": "574839",
    "end": "581760"
  },
  {
    "text": "internet and anyone who knows the address of the iphone of this",
    "start": "581760",
    "end": "589200"
  },
  {
    "text": "api server will be able to control the entire cluster so this is one of the most common",
    "start": "589200",
    "end": "596320"
  },
  {
    "text": "misconfiguration that that we have seen in the past year and another commonly",
    "start": "596320",
    "end": "601360"
  },
  {
    "text": "seen misconfiguration in api server is overly permissive row-based access control",
    "start": "601360",
    "end": "607120"
  },
  {
    "text": "so by default kubernetes come with a set of before rule before uh custom rows and",
    "start": "607120",
    "end": "612880"
  },
  {
    "text": "before row binding for example by default what i highlight in the order box here",
    "start": "612880",
    "end": "620079"
  },
  {
    "text": "then an authenticated user or an anonymous request sent to the api server",
    "start": "620079",
    "end": "626480"
  },
  {
    "text": "is met to authenticate uh an authenticate group and this group isn't is fine is this",
    "start": "626480",
    "end": "633200"
  },
  {
    "text": "this group is found with the public info viewer so the system public info viewer role",
    "start": "633200",
    "end": "638880"
  },
  {
    "text": "doesn't have much permission it can only view a list of apis available",
    "start": "638880",
    "end": "646399"
  },
  {
    "text": "in this api server or in this kubernetes",
    "start": "646399",
    "end": "651440"
  },
  {
    "text": "whatever kubernetes complex each cluster can be shared between tens or hundreds of",
    "start": "651440",
    "end": "658839"
  },
  {
    "text": "developers when more and more developers working in the same cluster what if someone",
    "start": "658839",
    "end": "666160"
  },
  {
    "text": "accidentally finds this system and authenticate group to another more privileged",
    "start": "666160",
    "end": "673120"
  },
  {
    "text": "roles such as cluster admin or admin and this can be also this again can be",
    "start": "673120",
    "end": "678399"
  },
  {
    "text": "really bad any attackers or cyber criminals who knows",
    "start": "678399",
    "end": "684480"
  },
  {
    "text": "the ip address of this api server will be able to gain privilege control to the cluster now let's look at",
    "start": "684480",
    "end": "691839"
  },
  {
    "text": "let's look at the second component that we focus on copy kubilet works similar",
    "start": "691839",
    "end": "696880"
  },
  {
    "text": "to api server but it can control because sync only a single worker node it can control only the",
    "start": "696880",
    "end": "704000"
  },
  {
    "text": "containers and parts in the network node by default an authenticated request",
    "start": "704000",
    "end": "710240"
  },
  {
    "text": "central copulate are mapped to system anonymous user and c our system",
    "start": "710240",
    "end": "716320"
  },
  {
    "text": "uh this user is mapped to the authentic authenticate group so this user in group",
    "start": "716320",
    "end": "721839"
  },
  {
    "text": "doesn't have too much doesn't have a lot of permission in the cluster itself however by default copylet",
    "start": "721839",
    "end": "730240"
  },
  {
    "text": "accept anonymous request so anyone can anyone who can communicate with copylab",
    "start": "730240",
    "end": "736399"
  },
  {
    "text": "can send requests to it and this is a problem by default this",
    "start": "736399",
    "end": "743760"
  },
  {
    "text": "copylet allows anonymous access what if someone accidentally exposed",
    "start": "743760",
    "end": "750000"
  },
  {
    "text": "this kubelet port to the entire internet is again a very common misconfiguration we have",
    "start": "750000",
    "end": "755519"
  },
  {
    "text": "seen although the misconfigured copylab is not as bad as misconfigured api server",
    "start": "755519",
    "end": "762079"
  },
  {
    "text": "however a misconfigure could be let allow an attacker to gain control to a",
    "start": "762079",
    "end": "767680"
  },
  {
    "text": "single worker node and from this single worker node they gain the initial access",
    "start": "767680",
    "end": "773440"
  },
  {
    "text": "and can start to uh move later move laterally to other worker nodes",
    "start": "773440",
    "end": "780399"
  },
  {
    "text": "in the cluster as we will see in the hill that are male 1 that we we found",
    "start": "780399",
    "end": "787200"
  },
  {
    "start": "787000",
    "end": "1242000"
  },
  {
    "text": "now let's look at how we can how we find uh real world attacks",
    "start": "787200",
    "end": "793279"
  },
  {
    "text": "against kubernetes we need to find we we at the time we started the research we",
    "start": "793279",
    "end": "799839"
  },
  {
    "text": "have the hypothesis that kubernetes will be attacked similarly in",
    "start": "799839",
    "end": "805279"
  },
  {
    "text": "the same way as attacker attack dr daemon but we didn't have any proof",
    "start": "805279",
    "end": "811279"
  },
  {
    "text": "we didn't have any data so we have to find our data or create our data so we",
    "start": "811279",
    "end": "816560"
  },
  {
    "text": "lay out two different research methods we proactively a project method and the reactive method",
    "start": "816560",
    "end": "823600"
  },
  {
    "text": "for the proactive project method we periodically scan the entire internet for misconfigured",
    "start": "823600",
    "end": "830880"
  },
  {
    "text": "kubernetes and for the reactive method uh as we'll talk about in a few in a few",
    "start": "830880",
    "end": "837440"
  },
  {
    "text": "minutes we've deployed a few is intentionally misconfigure kubernetes",
    "start": "837440",
    "end": "842560"
  },
  {
    "text": "honeypot to attract attackers and to learn what are the",
    "start": "842560",
    "end": "848399"
  },
  {
    "text": "what are the technique techniques and procedures of of these attacks",
    "start": "848399",
    "end": "854240"
  },
  {
    "text": "so one advantage of having these two methods deployed at the same time is that they",
    "start": "854240",
    "end": "859360"
  },
  {
    "text": "can actually cross verify with each other our our our kubernetes scanner should be",
    "start": "859360",
    "end": "865199"
  },
  {
    "text": "able to find our misconfigured kubernetes honeypot and on our",
    "start": "865199",
    "end": "871279"
  },
  {
    "text": "kubernetes honeypot you should be able to pick up the scanning traffic from our scanner so",
    "start": "871279",
    "end": "878320"
  },
  {
    "text": "this is how we actually make sure these two different methods or work",
    "start": "878320",
    "end": "884480"
  },
  {
    "text": "uh as they as we expected for the proactive research",
    "start": "884480",
    "end": "890160"
  },
  {
    "text": "as much as we would like to scan the entire ipv4 space for ourselves",
    "start": "890160",
    "end": "895600"
  },
  {
    "text": "it is not that it is not that easy actually as soon as i started to scan the internet either my isp or",
    "start": "895600",
    "end": "903680"
  },
  {
    "text": "the cloud survivor or my service provider send me a warning they",
    "start": "903680",
    "end": "908800"
  },
  {
    "text": "typically don't like any of they don't like their customer to scan the internet this is",
    "start": "908800",
    "end": "914720"
  },
  {
    "text": "scanning traffic is usually considered malicious so i went for easier easier path instead of",
    "start": "914720",
    "end": "922320"
  },
  {
    "text": "scanning the internet by myself i use the internet iot scanner such as census",
    "start": "922320",
    "end": "927440"
  },
  {
    "text": "and children to help me at least identify the potential misconfigure endpoints",
    "start": "927440",
    "end": "933279"
  },
  {
    "text": "so i use i i use these two services from census and children to",
    "start": "933279",
    "end": "939680"
  },
  {
    "text": "to collect like data from them every week and do some data aggregation and",
    "start": "939680",
    "end": "944959"
  },
  {
    "text": "filtering to come up with a list of potential uh kubernetes node or",
    "start": "944959",
    "end": "950720"
  },
  {
    "text": "potential port that run could be api server or quibblet",
    "start": "950720",
    "end": "956079"
  },
  {
    "text": "then i do the ipad then i start to create those nodes to see if they are",
    "start": "956079",
    "end": "962880"
  },
  {
    "text": "misconfigured and after that i did some course analysis",
    "start": "962880",
    "end": "968079"
  },
  {
    "text": "the result is what i'm going to show in the next few slides",
    "start": "968079",
    "end": "973519"
  },
  {
    "text": "overall in the period of three months we identified more than 2000 unsecured",
    "start": "973519",
    "end": "980079"
  },
  {
    "text": "kubernetes cluster that consists of more than 5000 nodes and within this 5000 now there are more",
    "start": "980079",
    "end": "987279"
  },
  {
    "text": "than 31 000 cpus that attackers can attend can potentially",
    "start": "987279",
    "end": "995199"
  },
  {
    "text": "uh abuse and within this 5000 note there are more than 75 000 active fast running",
    "start": "995199",
    "end": "1004800"
  },
  {
    "text": "and one of the biggest clusters that i encounter during the research had more",
    "start": "1004800",
    "end": "1010320"
  },
  {
    "text": "than 500 nodes and more than and more than 2000 active parts",
    "start": "1010320",
    "end": "1017680"
  },
  {
    "text": "and that said that that's that's a very shocking finding and also said because i",
    "start": "1017680",
    "end": "1026000"
  },
  {
    "text": "if an attacker [Music] found this cluster they can not only",
    "start": "1026000",
    "end": "1033038"
  },
  {
    "text": "steal data from from that kubernetes cluster they can also",
    "start": "1033039",
    "end": "1039280"
  },
  {
    "text": "start to deploy a lot of malicious payload in those in in this particular cluster",
    "start": "1039280",
    "end": "1047280"
  },
  {
    "text": "so the cluster that we so there's no way that i could",
    "start": "1047280",
    "end": "1052320"
  },
  {
    "text": "individually identify the owner of each misconfigured kubernetes cluster",
    "start": "1052320",
    "end": "1057760"
  },
  {
    "text": "but for a few that i could kick into i can see that because they belong to",
    "start": "1057760",
    "end": "1063280"
  },
  {
    "text": "e-commerce finance or even healthcare providers and the figure here showed the overall",
    "start": "1063280",
    "end": "1071760"
  },
  {
    "text": "findings throughout the research we overall",
    "start": "1071760",
    "end": "1076880"
  },
  {
    "text": "came across more than 37 000 containers and except for this 47 different image",
    "start": "1076880",
    "end": "1086320"
  },
  {
    "text": "and in this cluster they expose more than 83 000 secrets that can be used to access",
    "start": "1086320",
    "end": "1093919"
  },
  {
    "text": "applications or parts or or even the host and each cluster expose",
    "start": "1093919",
    "end": "1101679"
  },
  {
    "text": "each misconfigured kubernetes cluster expose different set of api server",
    "start": "1101679",
    "end": "1108640"
  },
  {
    "text": "different set of apis so because due to the misconfigured row based access control",
    "start": "1108640",
    "end": "1116559"
  },
  {
    "text": "every misconfigured cluster can be misconfigured differently for example",
    "start": "1117039",
    "end": "1124160"
  },
  {
    "text": "among all the misconfigured foreign clusters that we encounter 18 of them",
    "start": "1124160",
    "end": "1130240"
  },
  {
    "text": "expose the the path api they can list all the paths and",
    "start": "1130240",
    "end": "1135840"
  },
  {
    "text": "read all the parts in those classes and only third and only 13",
    "start": "1135840",
    "end": "1141919"
  },
  {
    "text": "of the cluster expose the secret",
    "start": "1141919",
    "end": "1147440"
  },
  {
    "text": "api overall uh",
    "start": "1147440",
    "end": "1152720"
  },
  {
    "text": "china and united states these two countries add up to more about",
    "start": "1152720",
    "end": "1159679"
  },
  {
    "text": "75 of the misconfigured kubernetes cluster this is kind of expected these two",
    "start": "1159679",
    "end": "1166400"
  },
  {
    "text": "countries are where most of the network infrastructure or car",
    "start": "1166400",
    "end": "1171760"
  },
  {
    "text": "infrastructures are hosted and these are some common these are some malicious",
    "start": "1171760",
    "end": "1178480"
  },
  {
    "text": "activities that we have seen in those misconfigured kubernetes",
    "start": "1178480",
    "end": "1183679"
  },
  {
    "text": "most of the malicious activities started from deploying",
    "start": "1183679",
    "end": "1189280"
  },
  {
    "text": "and official and science doctor image such as ubuntu send always or david",
    "start": "1189280",
    "end": "1196080"
  },
  {
    "text": "when attackers deploy this type of official and site image they are generally trusted",
    "start": "1196080",
    "end": "1202799"
  },
  {
    "text": "by the kubernetes platform however",
    "start": "1202799",
    "end": "1207919"
  },
  {
    "text": "after deploying this image the attacker then deployed the malicious payload",
    "start": "1207919",
    "end": "1213760"
  },
  {
    "text": "inside this container most of this payload that we have seen",
    "start": "1213760",
    "end": "1219360"
  },
  {
    "text": "involved in jacking operations some of the payload may also attempt to",
    "start": "1219360",
    "end": "1226000"
  },
  {
    "text": "uh infect other nodes in the cluster such as heal the guard that heavy will expand in a few",
    "start": "1226000",
    "end": "1233360"
  },
  {
    "text": "slides now i will pass to a bit to talk about the reactive",
    "start": "1233360",
    "end": "1238880"
  },
  {
    "text": "research what we found in our honeypot right thanks jay i'll take it from here",
    "start": "1238880",
    "end": "1244720"
  },
  {
    "start": "1242000",
    "end": "1722000"
  },
  {
    "text": "so let's talk about the reactive research so basically the the reason we did this",
    "start": "1244720",
    "end": "1251760"
  },
  {
    "text": "reactive research is to see what is the frequency of those attacks and to see if",
    "start": "1251760",
    "end": "1257520"
  },
  {
    "text": "there are any other attacks and if they are then what are their impacts so we deployed two types of honeypots",
    "start": "1257520",
    "end": "1265679"
  },
  {
    "text": "for around uh six months and the first one is misconfigured api",
    "start": "1265679",
    "end": "1271919"
  },
  {
    "text": "server whereas the rbok is misconfigured in a way that any user that will access",
    "start": "1271919",
    "end": "1278320"
  },
  {
    "text": "the api server will have uh admin privileges",
    "start": "1278320",
    "end": "1283840"
  },
  {
    "text": "so that's really uh critical and the second honeypot is misconfigured cubelet",
    "start": "1283840",
    "end": "1290480"
  },
  {
    "text": "on this in this honeypot we just deploy cubelet with anonymous access",
    "start": "1290480",
    "end": "1296880"
  },
  {
    "text": "aloud and expose it to the internet so that anyone that will access this cubelet will have permission to do",
    "start": "1296880",
    "end": "1303679"
  },
  {
    "text": "anything he wants on that specific node right so let's go over to their results",
    "start": "1303679",
    "end": "1310799"
  },
  {
    "text": "uh for the api server it was really kind of disappointing because we saw",
    "start": "1310799",
    "end": "1317360"
  },
  {
    "text": "zero uh exploit attempts but one interesting thing that we saw is that",
    "start": "1317360",
    "end": "1324159"
  },
  {
    "text": "census uh scanned us really in depth and when i say in depth i mean that they",
    "start": "1324159",
    "end": "1330880"
  },
  {
    "text": "query the api server for nodes for quotes for uh for a role",
    "start": "1330880",
    "end": "1337120"
  },
  {
    "text": "for roblox for a secret for anything that the api server had to offer and for",
    "start": "1337120",
    "end": "1343600"
  },
  {
    "text": "those those of you who doesn't know what census is so that's a search engine they",
    "start": "1343600",
    "end": "1350720"
  },
  {
    "text": "just scan the whole internet put it in a database and allow users to query this",
    "start": "1350720",
    "end": "1356720"
  },
  {
    "text": "database so our honeypot for sure is being in senses",
    "start": "1356720",
    "end": "1363360"
  },
  {
    "text": "but other than that nothing interesting happened over there and so let's go to the second part to",
    "start": "1363360",
    "end": "1369600"
  },
  {
    "text": "the cubelet honeypot which was really excited with exciting uh we got exploited numerous times by different",
    "start": "1369600",
    "end": "1377039"
  },
  {
    "text": "adversaries uh most of the attacks were for crypto jacking",
    "start": "1377039",
    "end": "1382799"
  },
  {
    "text": "purposes and one of the attacks included a really interesting mallard they did a lot of",
    "start": "1382799",
    "end": "1389679"
  },
  {
    "text": "mess so we decided to explore it and then we",
    "start": "1389679",
    "end": "1395600"
  },
  {
    "text": "found out about hildegard so that's the name of the malware",
    "start": "1395840",
    "end": "1401039"
  },
  {
    "text": "we decided to call it hildegard uh as there were there was a spring in",
    "start": "1401039",
    "end": "1406559"
  },
  {
    "text": "the in the binary which was hildegard and this",
    "start": "1406559",
    "end": "1411760"
  },
  {
    "text": "malware is just crazy it's the first ever malware that is uh designed to attack cubelets and to",
    "start": "1411760",
    "end": "1419760"
  },
  {
    "text": "propagate across the cluster and we'll talk about how it operates",
    "start": "1419760",
    "end": "1425360"
  },
  {
    "text": "so first of all the first thing that happens is that the attacker exploits an",
    "start": "1425360",
    "end": "1430880"
  },
  {
    "text": "unsecured cubelet and after that he deployed a container",
    "start": "1430880",
    "end": "1436799"
  },
  {
    "text": "uh that includes first a teammate client which is an opers which is a tool that can be",
    "start": "1436799",
    "end": "1444080"
  },
  {
    "text": "used as a reverse shell and this way the attacker can",
    "start": "1444080",
    "end": "1449200"
  },
  {
    "text": "run commands on the on the node and the second thing they do is they deploy a",
    "start": "1449200",
    "end": "1456799"
  },
  {
    "text": "mass which tools and this tool is ca this tool scans the",
    "start": "1456799",
    "end": "1464000"
  },
  {
    "text": "internal network of the cluster and try to find other cubelets and when it does it",
    "start": "1464000",
    "end": "1471039"
  },
  {
    "text": "exploits them as well so hildegard just tried to propagate to all",
    "start": "1471039",
    "end": "1477679"
  },
  {
    "text": "of the nodes in the cluster and on every node it deployed first a crypto miner which",
    "start": "1477679",
    "end": "1485200"
  },
  {
    "text": "mine monero and a irc client that will connect to an irc server owned",
    "start": "1485200",
    "end": "1492720"
  },
  {
    "text": "by the attackers and this way the attackers could send",
    "start": "1492720",
    "end": "1497760"
  },
  {
    "text": "commands to the containers and do whatever they want on the cluster",
    "start": "1497760",
    "end": "1504480"
  },
  {
    "text": "so that's how everything works basically but we wanted to",
    "start": "1504480",
    "end": "1511360"
  },
  {
    "text": "talk a little bit about the techniques they use because we think it's really worth talking about",
    "start": "1511360",
    "end": "1517360"
  },
  {
    "text": "so let's go over and talk about through escalation and hildegard deploy two open source",
    "start": "1517360",
    "end": "1525600"
  },
  {
    "text": "tools the first one is pirates so this tool",
    "start": "1525600",
    "end": "1531200"
  },
  {
    "text": "scan for cloud credentials and cloud and in the cloud metadata server whether if",
    "start": "1531200",
    "end": "1537840"
  },
  {
    "text": "it's aws gcp or azure and it also looks",
    "start": "1537840",
    "end": "1542880"
  },
  {
    "text": "for uh service account tokens or secrets and when it's found when it finds one of",
    "start": "1542880",
    "end": "1549039"
  },
  {
    "text": "them they just try to escalate uh to get higher",
    "start": "1549039",
    "end": "1554840"
  },
  {
    "text": "privileges the second tool is pot b i hope i pronounce it",
    "start": "1554840",
    "end": "1560799"
  },
  {
    "text": "good well it's break out the box and as the name implies",
    "start": "1560799",
    "end": "1566080"
  },
  {
    "text": "it will try to break out of containers it will try to use known vulnerabilities",
    "start": "1566080",
    "end": "1571360"
  },
  {
    "text": "uh it will try to find if there are any uh capability or cisco that are",
    "start": "1571360",
    "end": "1578000"
  },
  {
    "text": "i are in there by mistake and try to exploit them they'll try to access docker demon on the host as we talked",
    "start": "1578000",
    "end": "1584880"
  },
  {
    "text": "about in the first slides of the presentation they also try to find some cloud and",
    "start": "1584880",
    "end": "1590799"
  },
  {
    "text": "kubernetes credentials and even look at the environment variables for",
    "start": "1590799",
    "end": "1596000"
  },
  {
    "text": "credentials and other than that hildegard by itself has a script that tries",
    "start": "1596000",
    "end": "1602640"
  },
  {
    "text": "also to find credentials and it will scan",
    "start": "1602640",
    "end": "1608480"
  },
  {
    "text": "the cloud provider metadata server they scan for ssh keys they scan for",
    "start": "1608480",
    "end": "1614559"
  },
  {
    "text": "docker credentials and of course and foremost they scan for kubernetes",
    "start": "1614559",
    "end": "1620080"
  },
  {
    "text": "service accounts token so you can see the script uh below",
    "start": "1620080",
    "end": "1626720"
  },
  {
    "text": "that's how it does so all right and to my favorite part which",
    "start": "1626720",
    "end": "1631760"
  },
  {
    "text": "is defense evasion well hildegard uses two types of techniques of defensive",
    "start": "1631760",
    "end": "1639600"
  },
  {
    "text": "asian the first one is they use ld preload and we won't get into what is at",
    "start": "1639600",
    "end": "1645919"
  },
  {
    "text": "the preload because that can take like uh 30 minutes but we'll just say that hildegard just",
    "start": "1645919",
    "end": "1653120"
  },
  {
    "text": "hijack some lipsy functions and while hijacking them",
    "start": "1653120",
    "end": "1658159"
  },
  {
    "text": "it replaced them with other functions that basically does the same as the",
    "start": "1658159",
    "end": "1664080"
  },
  {
    "text": "normal functions except the fact that they uh",
    "start": "1664080",
    "end": "1669120"
  },
  {
    "text": "sanitize the output and by that i mean that this how kindergart hide itself so",
    "start": "1669120",
    "end": "1676080"
  },
  {
    "text": "let's say for example we run ps so we won't see pierre let's see hildegard",
    "start": "1676080",
    "end": "1682960"
  },
  {
    "text": "in the ps and if they run ls we won't see the hildegard in the alice and if we",
    "start": "1682960",
    "end": "1688159"
  },
  {
    "text": "wan run top to see the cpu research we won't see the uh the superior siege because hilda",
    "start": "1688159",
    "end": "1696240"
  },
  {
    "text": "because the the ldpro function will show us something else and the second part is",
    "start": "1696240",
    "end": "1702320"
  },
  {
    "text": "the encrypted elf binary and hildegard uses a well-known rc client in",
    "start": "1702320",
    "end": "1708159"
  },
  {
    "text": "order for for him not to get detected they encrypt it and decrypt it only when running into",
    "start": "1708159",
    "end": "1715840"
  },
  {
    "text": "the memory so in this way static analysis tools cannot be effective",
    "start": "1715840",
    "end": "1722080"
  },
  {
    "start": "1722000",
    "end": "1739000"
  },
  {
    "text": "right that's all for hildegard for today uh jay can you take it from here thank you aviv",
    "start": "1722080",
    "end": "1729279"
  },
  {
    "text": "now let's look at how individual can protect and defend",
    "start": "1729279",
    "end": "1735200"
  },
  {
    "text": "against uh cyber criminals this threat exploits its",
    "start": "1735200",
    "end": "1740559"
  },
  {
    "start": "1739000",
    "end": "1816000"
  },
  {
    "text": "configuration 99 of the known attacks exploit its configuration like we only",
    "start": "1740559",
    "end": "1746799"
  },
  {
    "text": "look at the api server the misconfigured api server and software copyleft but us",
    "start": "1746799",
    "end": "1754080"
  },
  {
    "text": "as we mentioned earlier this is just the tip of the iceberg",
    "start": "1754080",
    "end": "1759919"
  },
  {
    "text": "to our biggest surprise is that we didn't see any",
    "start": "1759919",
    "end": "1765520"
  },
  {
    "text": "attacks targeting our",
    "start": "1765520",
    "end": "1771120"
  },
  {
    "text": "api server honeypot we think that attackers haven't really moved from",
    "start": "1771760",
    "end": "1780480"
  },
  {
    "text": "attacking darker demons to kubernetes kubernetes is much more complicated than dockers",
    "start": "1780480",
    "end": "1788799"
  },
  {
    "text": "and however the potential computational and storage resource as well as data in",
    "start": "1788799",
    "end": "1795440"
  },
  {
    "text": "the kubernetes should be can be much bigger and more juicier than this",
    "start": "1795440",
    "end": "1802320"
  },
  {
    "text": "configure darpa daemon so we think this can be just the beginning and",
    "start": "1802320",
    "end": "1810000"
  },
  {
    "text": "there we expect to see more and more attacks against kubernetes in the near future",
    "start": "1810000",
    "end": "1816159"
  },
  {
    "start": "1816000",
    "end": "1838000"
  },
  {
    "text": "what are the best what are the uh strategies to protect your kubernetes",
    "start": "1816159",
    "end": "1821360"
  },
  {
    "text": "kubernetes infrastructure best practice follow the best practice you",
    "start": "1821360",
    "end": "1826880"
  },
  {
    "text": "should keep you secure really secure the layers of defense built into the kubernetes platform",
    "start": "1826880",
    "end": "1833840"
  },
  {
    "text": "provide very strong security such as",
    "start": "1833840",
    "end": "1838880"
  },
  {
    "start": "1838000",
    "end": "1861000"
  },
  {
    "text": "namespace isolation network policy and second secure your network and identity",
    "start": "1839039",
    "end": "1845120"
  },
  {
    "text": "as long as you make sure you don't accidentally expose your kubernetes components such as api server copyled",
    "start": "1845120",
    "end": "1852559"
  },
  {
    "text": "proxy fcd you should be safe from 99 of these attacks and also",
    "start": "1852559",
    "end": "1861360"
  },
  {
    "text": "secure your identity make sure you follow the principle of this",
    "start": "1861360",
    "end": "1867039"
  },
  {
    "text": "privilege minimize the number of users in your users and groups in your kubernetes and",
    "start": "1867039",
    "end": "1875679"
  },
  {
    "text": "continuously monitors the permission provision to these",
    "start": "1875679",
    "end": "1883039"
  },
  {
    "text": "users and and applications finally patch frequently",
    "start": "1883039",
    "end": "1889279"
  },
  {
    "text": "patch not only your application but patch also your kubernetes",
    "start": "1889279",
    "end": "1896240"
  },
  {
    "start": "1896000",
    "end": "1962000"
  },
  {
    "text": "well kubernetes is complicated involving a lot of moving parts and",
    "start": "1896240",
    "end": "1901360"
  },
  {
    "text": "when you have a cluster of hundreds of worker nodes it's not easy for a single person to",
    "start": "1901360",
    "end": "1908480"
  },
  {
    "text": "oversee them this you can never be 100 sure that you don't have any",
    "start": "1908480",
    "end": "1914480"
  },
  {
    "text": "insecure or accidentally introduced any misconfiguration",
    "start": "1914480",
    "end": "1919519"
  },
  {
    "text": "so if you are not so comfortable to",
    "start": "1919519",
    "end": "1924880"
  },
  {
    "text": "provision and maintain the coordinated clusters from scratch use many community",
    "start": "1924880",
    "end": "1930720"
  },
  {
    "text": "services such as aws aws eks or azure aks cloud service providers",
    "start": "1930720",
    "end": "1938240"
  },
  {
    "text": "can help you manage and control the control plane and you only need to",
    "start": "1938240",
    "end": "1944720"
  },
  {
    "text": "manage the application running on top of the kubernetes clusters and also most of",
    "start": "1944720",
    "end": "1950399"
  },
  {
    "text": "the cloud service provider have some sort of gun rail to oversee",
    "start": "1950399",
    "end": "1955679"
  },
  {
    "text": "your kubernetes cluster to make sure that you don't have any misconfiguration",
    "start": "1955679",
    "end": "1961840"
  },
  {
    "text": "next one ephemeral workload design so if you have an ephemeral workflow design",
    "start": "1961840",
    "end": "1968720"
  },
  {
    "start": "1962000",
    "end": "2060000"
  },
  {
    "text": "meaning that your comp all the cards and containers in your cluster can can",
    "start": "1968720",
    "end": "1975840"
  },
  {
    "text": "sailing they can be killed and restart anytime without losing uh losing anything so if your container",
    "start": "1975840",
    "end": "1982480"
  },
  {
    "text": "infrastructure or micro service applications are designed this way then attackers don't really have any way to",
    "start": "1982480",
    "end": "1988840"
  },
  {
    "text": "gain uh get initial or can any getting the foothold inside your application",
    "start": "1988840",
    "end": "1995120"
  },
  {
    "text": "as long as you see a containers drift from the",
    "start": "1995120",
    "end": "2000880"
  },
  {
    "text": "from the normal from the normal or benign state you can simply just kill and restart the container and you start",
    "start": "2000880",
    "end": "2008480"
  },
  {
    "text": "from a fresh and clean state again",
    "start": "2008480",
    "end": "2013760"
  },
  {
    "text": "and finally continuous monitoring is also important",
    "start": "2013760",
    "end": "2018960"
  },
  {
    "text": "use tools to check configurations of your cluster and use tool to check for",
    "start": "2018960",
    "end": "2026000"
  },
  {
    "text": "suspicious workloads or traffic again although your infrastructure is",
    "start": "2026000",
    "end": "2031840"
  },
  {
    "text": "your application may be vulnerable your zero day or new vulnerability may be",
    "start": "2031840",
    "end": "2038720"
  },
  {
    "text": "found in the application deployed in your clusters and this attacker can",
    "start": "2038720",
    "end": "2044480"
  },
  {
    "text": "can attack those applications there may be a chance that they they can escape break out the container",
    "start": "2044480",
    "end": "2050960"
  },
  {
    "text": "and start to attack your uh kinetic so continuous monitoring to the to a",
    "start": "2050960",
    "end": "2057358"
  },
  {
    "text": "kubernetes cluster is important and this is the end of our presentation thank you",
    "start": "2057359",
    "end": "2063040"
  },
  {
    "start": "2060000",
    "end": "2092000"
  },
  {
    "text": "for being in our session if you have any questions feel free to reach me jay can call autonetworks.com for",
    "start": "2063040",
    "end": "2071280"
  },
  {
    "text": "habits this is a as a session it's his email at colorado network and",
    "start": "2071280",
    "end": "2078000"
  },
  {
    "text": "we also publish the findings in unifor tubebugs feel free to go to the",
    "start": "2078000",
    "end": "2083440"
  },
  {
    "text": "university.hellonetworks.com to see more of our research",
    "start": "2083440",
    "end": "2090540"
  },
  {
    "text": "[Music]",
    "start": "2090540",
    "end": "2093650"
  }
]