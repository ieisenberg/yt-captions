[
  {
    "text": "hello and welcome I am csvp of engineering at Sten and today I'm happy",
    "start": "4200",
    "end": "11880"
  },
  {
    "text": "to talk to you about transforming devops and managing um mother infrastructure um",
    "start": "11880",
    "end": "18800"
  },
  {
    "text": "I spent years battling the chaos of infrastructure management um before Sten",
    "start": "18800",
    "end": "24640"
  },
  {
    "text": "at the financial industry and today I'm here to share some of those hard one secrets for making devops life just a",
    "start": "24640",
    "end": "31720"
  },
  {
    "text": "little bit less painful uh let's talk about some of those daily headaches that we face um with manual configurations",
    "start": "31720",
    "end": "40079"
  },
  {
    "text": "inconsistent deployments and infrastructure drift and how to overcome them and before we get started let me",
    "start": "40079",
    "end": "47079"
  },
  {
    "text": "share with you what I think about and what comes to my mind when I hear the",
    "start": "47079",
    "end": "52559"
  },
  {
    "text": "world the word drift so um first thing that comes to my mind is um I'll share a",
    "start": "52559",
    "end": "59440"
  },
  {
    "text": "story here every now and then at night I go to my kids playroom I put all the",
    "start": "59440",
    "end": "65640"
  },
  {
    "text": "toys away I put things in the shelves things in the closet but um the very",
    "start": "65640",
    "end": "73560"
  },
  {
    "text": "next day once they get into that playroom I experien drift I and and it's",
    "start": "73560",
    "end": "79600"
  },
  {
    "text": "a little bit painful um but but let's talk a little bit about some of some of the lessons that I've learned throughout",
    "start": "79600",
    "end": "85360"
  },
  {
    "text": "the years on how to make uh that drift and that chaos that sometimes we experience in our daily Liv as devops",
    "start": "85360",
    "end": "92560"
  },
  {
    "text": "Engineers a little bit less",
    "start": "92560",
    "end": "96078"
  },
  {
    "text": "painful all right so um let's talk about some of the",
    "start": "97680",
    "end": "103759"
  },
  {
    "text": "challenges in modern uh devops and I'll talk in within the context of Stack gen",
    "start": "103759",
    "end": "110119"
  },
  {
    "text": "because we designed stack gen to make infrastructure management seamless for",
    "start": "110119",
    "end": "116119"
  },
  {
    "text": "for you for me for devop teams by eliminating some those manual processes",
    "start": "116119",
    "end": "121360"
  },
  {
    "text": "and and trying to automate as much as possible so so first thing is",
    "start": "121360",
    "end": "126479"
  },
  {
    "text": "infrastructure complexity and this is the pain that a lot of us feel um when",
    "start": "126479",
    "end": "132200"
  },
  {
    "text": "we manage things like multiple Cloud environments sometimes across different Cloud providers for example here at",
    "start": "132200",
    "end": "138879"
  },
  {
    "text": "stacken we have an environment in AWS one in Asher one in ECP um we have",
    "start": "138879",
    "end": "145400"
  },
  {
    "text": "microservices kubernetes and all of that adds layers of complexity",
    "start": "145400",
    "end": "150480"
  },
  {
    "text": "which sometimes can make troubleshooting a little bit tricky and and scaling a little bit difficult um",
    "start": "150480",
    "end": "158360"
  },
  {
    "text": "also sometimes we have slow and error prone deployments in in traditional cic",
    "start": "158360",
    "end": "165720"
  },
  {
    "text": "pipelines there's manual intervention uh security gates",
    "start": "165720",
    "end": "171480"
  },
  {
    "text": "operational Gates architectural Gates which cause delays and and may introduce",
    "start": "171480",
    "end": "176879"
  },
  {
    "text": "human errors you know um and and I'm not going to blame you if you uh implemented",
    "start": "176879",
    "end": "183040"
  },
  {
    "text": "a manual gate within your cicd process I've done it myself um in my PRI prior",
    "start": "183040",
    "end": "190440"
  },
  {
    "text": "Life as a security architect and and ideally we want to automate as",
    "start": "190440",
    "end": "197680"
  },
  {
    "text": "much of that as possible as we can just for the sake of all the stakeholders on the next thing is the",
    "start": "197680",
    "end": "204480"
  },
  {
    "text": "misalignment between Dev and operational teams so",
    "start": "204480",
    "end": "210840"
  },
  {
    "text": "um yeah the developers want to go fast they want to meet their business objectives they're getting a lot of",
    "start": "210840",
    "end": "216879"
  },
  {
    "text": "pressure from the business to deliver as quickly as possible but uh we as op",
    "start": "216879",
    "end": "223080"
  },
  {
    "text": "people we want to make sure that there's stability in the environment uh we know",
    "start": "223080",
    "end": "228439"
  },
  {
    "text": "that we're going to be the first on to get cold and pay if something goes wrong so so sometimes we're a little bit",
    "start": "228439",
    "end": "235040"
  },
  {
    "text": "hesitant uh and there's some friction uh which we cause delays",
    "start": "235040",
    "end": "240239"
  },
  {
    "text": "inefficiencies and and duplicated",
    "start": "240239",
    "end": "244200"
  },
  {
    "text": "efforts all right so so within Staten we designed the system to make",
    "start": "245680",
    "end": "251640"
  },
  {
    "text": "infrastructure management seamless by eliminating a lot of those manual processes and and we enable automation",
    "start": "251640",
    "end": "259000"
  },
  {
    "text": "at scale we we want to empower Engineers to focus on Innovation rather than what I like to",
    "start": "259000",
    "end": "267360"
  },
  {
    "text": "call a technical term called the bo boring stuff so to me the boring stuff",
    "start": "267360",
    "end": "272600"
  },
  {
    "text": "is things like maintenance of old Tero templates maintenance of Helm charts um",
    "start": "272600",
    "end": "280440"
  },
  {
    "text": "responding to tickets and escalations uh we want to eliminate that as much as possible and accelerate",
    "start": "280440",
    "end": "288520"
  },
  {
    "text": "deployments and ensure that you can focus on the reliability of your",
    "start": "288520",
    "end": "293720"
  },
  {
    "text": "environment um and the important stuff so the special sauce uh behind our",
    "start": "293720",
    "end": "299840"
  },
  {
    "text": "product and section are these critical benefits first is infrastructure from",
    "start": "299840",
    "end": "306680"
  },
  {
    "text": "code um so for us code can mean multiple",
    "start": "306680",
    "end": "311759"
  },
  {
    "text": "things so it can mean Source codes like a Java application python application",
    "start": "311759",
    "end": "317360"
  },
  {
    "text": "goang C or it can mean your configuration files or things like your",
    "start": "317360",
    "end": "324919"
  },
  {
    "text": "existing terraform State file so we want to eliminate the cognitive overload and",
    "start": "324919",
    "end": "333319"
  },
  {
    "text": "manual scripting and what IFC allows us to do is to ingest your either your",
    "start": "333319",
    "end": "340120"
  },
  {
    "text": "existing environment through State file or ingest what the developers of of a",
    "start": "340120",
    "end": "346680"
  },
  {
    "text": "particular software system application need and what they codified",
    "start": "346680",
    "end": "352800"
  },
  {
    "text": "by inferring the dependencies that they injected within their application source code itself the next thing is uh visual",
    "start": "352800",
    "end": "362560"
  },
  {
    "text": "deployment topology so um I know that",
    "start": "362560",
    "end": "368000"
  },
  {
    "text": "sometimes we dread uis and we want to go to the CLI but um have you ever been in",
    "start": "368000",
    "end": "374960"
  },
  {
    "text": "a meeting with a development team or an architecture team and they Drew Drew up",
    "start": "374960",
    "end": "382400"
  },
  {
    "text": "the most beautiful architectural diagram or the most crappy architectural diagram",
    "start": "382400",
    "end": "388520"
  },
  {
    "text": "and it d didn't really reflect the reality of what you were observing in",
    "start": "388520",
    "end": "393599"
  },
  {
    "text": "the actual environment so I've been there too so this is what we want to eliminate with our visual deployment",
    "start": "393599",
    "end": "400880"
  },
  {
    "text": "topology um view is we want to make sure that teams have a clear interactive way",
    "start": "400880",
    "end": "408919"
  },
  {
    "text": "of viewing the reality of their Cloud environment and it makes it easy to",
    "start": "408919",
    "end": "414400"
  },
  {
    "text": "debug it makes it easy to optimize to scale deployments it makes it easy to Comm communicate with stakeholders",
    "start": "414400",
    "end": "421280"
  },
  {
    "text": "because you're seeing a picture of what the actual actual environment and its configuration look like um so we have",
    "start": "421280",
    "end": "429440"
  },
  {
    "text": "more visibility into our infrastructure components and dependencies and it can really optimize Communications",
    "start": "429440",
    "end": "436520"
  },
  {
    "text": "troubleshooting and optimization everything within uh this",
    "start": "436520",
    "end": "442680"
  },
  {
    "text": "visual topology is backed by the next bullet which is declarative and modular",
    "start": "442680",
    "end": "448000"
  },
  {
    "text": "infrastructure so our idea here is that within uh the",
    "start": "448000",
    "end": "453919"
  },
  {
    "text": "infrastructure that um apology that we design we're always going to have",
    "start": "453919",
    "end": "461400"
  },
  {
    "text": "declarative templates that are going to be backing that topology and these could be um things like terraform and Helm",
    "start": "461400",
    "end": "470080"
  },
  {
    "text": "chart that our system it's that supports out of the book or it can be your own",
    "start": "470080",
    "end": "476159"
  },
  {
    "text": "terraform modules that have been hardened to SW Blood and Tears through",
    "start": "476159",
    "end": "482000"
  },
  {
    "text": "production incidents and that you know and love you can bring that in and it",
    "start": "482000",
    "end": "487360"
  },
  {
    "text": "will help you ensure consistency across your development staging and production",
    "start": "487360",
    "end": "492599"
  },
  {
    "text": "environments um it will help you prevent configuration drift and it will help you",
    "start": "492599",
    "end": "497800"
  },
  {
    "text": "minimize errors so we want to make sure that your infrastructure management is a",
    "start": "497800",
    "end": "503039"
  },
  {
    "text": "simple as possible through using reusable and composable modules um next",
    "start": "503039",
    "end": "511120"
  },
  {
    "text": "is uh all these tools help prevent and fill the void between water dep and",
    "start": "511120",
    "end": "518120"
  },
  {
    "text": "operational team experience so we try to accelerate the",
    "start": "518120",
    "end": "523399"
  },
  {
    "text": "sdlc and try to reduce as much as possible some of the Redundant and",
    "start": "523399",
    "end": "529240"
  },
  {
    "text": "duplicate efforts across these",
    "start": "529240",
    "end": "532800"
  },
  {
    "text": "teams so let's take a moment to break down and infrastructure from code so if",
    "start": "534920",
    "end": "541360"
  },
  {
    "text": "you're familiar with I infrastructure as code you know it requires writing things",
    "start": "541360",
    "end": "548200"
  },
  {
    "text": "like geml terraform scripts to Define your Cloud environment with IFC we take",
    "start": "548200",
    "end": "556720"
  },
  {
    "text": "this to the next level by automatically generating infrastructure configurations",
    "start": "556720",
    "end": "562839"
  },
  {
    "text": "based on your application code so there's no manual scripting for your developers folks that always compl when",
    "start": "562839",
    "end": "569880"
  },
  {
    "text": "you keep in the task of uh of riding terraform uh there's no more cognitive",
    "start": "569880",
    "end": "576279"
  },
  {
    "text": "overload it's just seamless infrastructure that aligns directly with your software um so why is this a game",
    "start": "576279",
    "end": "584279"
  },
  {
    "text": "Cher for the teams it eliminates human errors and",
    "start": "584279",
    "end": "589640"
  },
  {
    "text": "inconsistencies because now we make sure that the infrastructure is always defined from the application needs it",
    "start": "589640",
    "end": "596800"
  },
  {
    "text": "also drastically accelerates deployment time since your infrastructure is",
    "start": "596800",
    "end": "602320"
  },
  {
    "text": "provision dynamically it reduces bottlenecks and it simplifies roll back",
    "start": "602320",
    "end": "609600"
  },
  {
    "text": "um and I'll give you an anecdote uh let me after the next bullet so",
    "start": "609600",
    "end": "616000"
  },
  {
    "text": "IFC enhances collaboration so developers can focus on coding while operation",
    "start": "616000",
    "end": "621920"
  },
  {
    "text": "teams can gain better visibility and control over deployments so here's the",
    "start": "621920",
    "end": "627839"
  },
  {
    "text": "anecdote um one with one of our first customers when",
    "start": "627839",
    "end": "633279"
  },
  {
    "text": "we were um developing this IFC concept and feature one of the things that we",
    "start": "633279",
    "end": "639240"
  },
  {
    "text": "found was we were trying to test how does the um how does the terraform code",
    "start": "639240",
    "end": "645839"
  },
  {
    "text": "that we generate through stacken um compared to their existing terraform",
    "start": "645839",
    "end": "651160"
  },
  {
    "text": "code for a particular application in this customer environment and uh so we",
    "start": "651160",
    "end": "656639"
  },
  {
    "text": "ran stacken We Run The Tool It's kind of work this is the first time that we're",
    "start": "656639",
    "end": "661720"
  },
  {
    "text": "running it with in a customer mment it kind of worked um but the most surprising thing",
    "start": "661720",
    "end": "668680"
  },
  {
    "text": "were the things that it didn't find so",
    "start": "668680",
    "end": "674040"
  },
  {
    "text": "in the terraform that the customer already had um there were resources like S3",
    "start": "674040",
    "end": "680360"
  },
  {
    "text": "buckets that the infrastructur go was defining they had tform templates",
    "start": "680360",
    "end": "685480"
  },
  {
    "text": "defining this but um but with stacken",
    "start": "685480",
    "end": "691079"
  },
  {
    "text": "when we scan the application we didn't see those resources so yeah we thought it kind of work it kind of work but I'm",
    "start": "691079",
    "end": "698040"
  },
  {
    "text": "not sure because uh I have a s bucket defin in terraform and I don't see stackin generating that so we dock",
    "start": "698040",
    "end": "704959"
  },
  {
    "text": "deeper into the code to check what's happening and then that's when we",
    "start": "704959",
    "end": "710440"
  },
  {
    "text": "realized that there were a bunch of resources that they had provisioned but",
    "start": "710440",
    "end": "715839"
  },
  {
    "text": "they never took the time to decommission those resources once they're no longer",
    "start": "715839",
    "end": "721839"
  },
  {
    "text": "needed and this has happened to me many times um where in the day Zero of your",
    "start": "721839",
    "end": "729360"
  },
  {
    "text": "development life cycle you may think that you need access to certain resources you may think that you are",
    "start": "729360",
    "end": "736000"
  },
  {
    "text": "going to do X but then you end up doing Y and and this is the problem with",
    "start": "736000",
    "end": "742800"
  },
  {
    "text": "manual security gates usually you just go through that gate with your original plan X but once you switch to Y you",
    "start": "742800",
    "end": "752320"
  },
  {
    "text": "don't go back to that manual security gate to refine that the the the plan",
    "start": "752320",
    "end": "758920"
  },
  {
    "text": "from an operational and security perspective so that's the benefit of IFC your infrastructure is always consistent",
    "start": "758920",
    "end": "766040"
  },
  {
    "text": "with the reality of your code all right so let's talk about the",
    "start": "766040",
    "end": "773160"
  },
  {
    "text": "signing and managing and troubleshooting with a visual topology so IM man imagine being able to see your entire",
    "start": "773160",
    "end": "780760"
  },
  {
    "text": "infrastructure in a clear interactive way there's no more guessing what's running where no more digging through",
    "start": "780760",
    "end": "788079"
  },
  {
    "text": "endless jaml files um you get called up to for a production incident uh you call",
    "start": "788079",
    "end": "796120"
  },
  {
    "text": "you call the development team uh there's no more guessing because a lot of these",
    "start": "796120",
    "end": "801279"
  },
  {
    "text": "develop development teams may not know what's there they they may have inherited the code they just did a few",
    "start": "801279",
    "end": "808120"
  },
  {
    "text": "changes the people that originally wrote the system are no longer employed by your company um so you're basically",
    "start": "808120",
    "end": "815839"
  },
  {
    "text": "screwed but um and that's the benefit of having a visual deployment topology and",
    "start": "815839",
    "end": "821920"
  },
  {
    "text": "that's what it enables instead of just abstract configuration hdden and code you get a live real representation of",
    "start": "821920",
    "end": "828360"
  },
  {
    "text": "your Cloud environment of what your system looks like you can drag and drop resources see directly how code will",
    "start": "828360",
    "end": "835800"
  },
  {
    "text": "impact your infrastructure and eliminate a lot of those manual provisioning all of those tedious configuration within",
    "start": "835800",
    "end": "843839"
  },
  {
    "text": "yaml um and with st visual topology deployment um your team can quickly",
    "start": "843839",
    "end": "851839"
  },
  {
    "text": "identify those bottlenecks you can troublesho issues you can optimize deployment you can Outsource some of",
    "start": "851839",
    "end": "858240"
  },
  {
    "text": "these tasks to your development teams that may not have the the knowledge on",
    "start": "858240",
    "end": "864279"
  },
  {
    "text": "how to operate at the code level and and the really cool thing is that you have a",
    "start": "864279",
    "end": "870040"
  },
  {
    "text": "single pan of glass that connects infrastructure components and application dependencies and Cloud",
    "start": "870040",
    "end": "876440"
  },
  {
    "text": "resources so it makes it really easy to debug to scale and to give you all one",
    "start": "876440",
    "end": "884440"
  },
  {
    "text": "of the most important things which is faster decision making um so yeah",
    "start": "884440",
    "end": "890360"
  },
  {
    "text": "definitely it can reduce your downtime and it's and it's very intuitive and and a very easy way to manage all your Cloud",
    "start": "890360",
    "end": "898600"
  },
  {
    "text": "applications so",
    "start": "898600",
    "end": "904399"
  },
  {
    "text": "um one of the biggest challenges in devops today is managing infrastructure",
    "start": "904399",
    "end": "909519"
  },
  {
    "text": "at scale while you ensure that your environments are consistent um and",
    "start": "909519",
    "end": "916000"
  },
  {
    "text": "that's where declarative infrastructure and modelar deployments come in so",
    "start": "916000",
    "end": "922040"
  },
  {
    "text": "instead of relying on procedural scripts things like spreadsheets things",
    "start": "922040",
    "end": "927920"
  },
  {
    "text": "like uh [Music] python code um where every change you have to",
    "start": "927920",
    "end": "935639"
  },
  {
    "text": "explicitly Define it on a step by step um declarative infrastructure allows you to State the desired outcome and the",
    "start": "935639",
    "end": "942759"
  },
  {
    "text": "system ensures it happens automatically so these are things like terraform Helm charts cloud formation Asher uh RM Al so",
    "start": "942759",
    "end": "952800"
  },
  {
    "text": "with Sten infrastructure configurations are not just declarative but they're",
    "start": "952800",
    "end": "958199"
  },
  {
    "text": "also modular uh what I what we mean by that is that instead of managing a monolithic tangled",
    "start": "958199",
    "end": "965480"
  },
  {
    "text": "web of configuration you can start breaking everything down into reusable composable modules whether it's a",
    "start": "965480",
    "end": "972959"
  },
  {
    "text": "networking stack kubernetes cluster a database setup um having these modules",
    "start": "972959",
    "end": "980319"
  },
  {
    "text": "that can be easily reused um it canex the understanding that you have of your",
    "start": "980319",
    "end": "987240"
  },
  {
    "text": "of your system um and it can really reduce some of the redundancies",
    "start": "987240",
    "end": "993240"
  },
  {
    "text": "and human errors that we can experience in a very large scale environment so you get faster deployment you get reduced",
    "start": "993240",
    "end": "1000519"
  },
  {
    "text": "complexity you get better reliability especially as you harden that those",
    "start": "1000519",
    "end": "1005759"
  },
  {
    "text": "modules over time and you can roll out those infrastructure changes with confidence",
    "start": "1005759",
    "end": "1012519"
  },
  {
    "text": "because your modules have been battle tested and you'll know that your environments are going to remain consist",
    "start": "1012519",
    "end": "1018920"
  },
  {
    "text": "assistance from development all the way into the production and when something needs to scale you don't have to",
    "start": "1018920",
    "end": "1025520"
  },
  {
    "text": "reinvent the wheel you just reuse what's already been working so sten's approach",
    "start": "1025520",
    "end": "1031678"
  },
  {
    "text": "to declarative and modular infrastructure helps you move faster",
    "start": "1031679",
    "end": "1038038"
  },
  {
    "text": "safer and smarter and allows you to focus on the things that deliver value value instead of firefighting all the",
    "start": "1038039",
    "end": "1046880"
  },
  {
    "text": "time all right so um developers want to move fast they",
    "start": "1046880",
    "end": "1054799"
  },
  {
    "text": "want to ship new features they typically have a lot of pressure from the business to iter",
    "start": "1054799",
    "end": "1062799"
  },
  {
    "text": "iterate quickly and focusing on writing their code while operational teams on the",
    "start": "1062799",
    "end": "1071080"
  },
  {
    "text": "other hand they're responsible for maintaining the stability the security",
    "start": "1071080",
    "end": "1076720"
  },
  {
    "text": "the compliance the governance of the system and typically we're the best the",
    "start": "1076720",
    "end": "1083159"
  },
  {
    "text": "the ones that are going to receive the first call and the blame when things go wrong so this often slow things down to",
    "start": "1083159",
    "end": "1090880"
  },
  {
    "text": "avoid risks so this tension can lead to bottlenecks miscommunications",
    "start": "1090880",
    "end": "1096679"
  },
  {
    "text": "inefficiency and stackin Brides this Gap by enabling a shared understanding of",
    "start": "1096679",
    "end": "1103240"
  },
  {
    "text": "infrastructure so with infrastructure from code developers don't have to worry about writing infrastructure scripts",
    "start": "1103240",
    "end": "1109880"
  },
  {
    "text": "stagen will provision automatically your Cloud resources based on your application code and meanwhile",
    "start": "1109880",
    "end": "1116559"
  },
  {
    "text": "operational teams get the full visibility and control through the visual deployment topology and the Clara",
    "start": "1116559",
    "end": "1123400"
  },
  {
    "text": "of modular infrastructure making sure that you're always in compliance that you're",
    "start": "1123400",
    "end": "1128799"
  },
  {
    "text": "consistent and that you are at scale so so we want to help you move faster",
    "start": "1128799",
    "end": "1136559"
  },
  {
    "text": "without sacrificing on that security and stability um so we trying to bring true",
    "start": "1136559",
    "end": "1143600"
  },
  {
    "text": "devops collaboration to life and I'll show you what this means in a demo in a few",
    "start": "1143600",
    "end": "1149240"
  },
  {
    "text": "minutes so let's talk about a case study here so one of our customers um had",
    "start": "1149240",
    "end": "1155200"
  },
  {
    "text": "develop their whole environment in a particular region they were using a",
    "start": "1155200",
    "end": "1161200"
  },
  {
    "text": "combination of cloud information template and manual provisioning we had",
    "start": "1161200",
    "end": "1167559"
  },
  {
    "text": "the AWS console and even when they use cloud formation",
    "start": "1167559",
    "end": "1172720"
  },
  {
    "text": "they used that for the beginning of their project they wrote a my cloud foration template but then over time",
    "start": "1172720",
    "end": "1179360"
  },
  {
    "text": "things started to drift they started doing manual changes and now the challenge was that they had the business",
    "start": "1179360",
    "end": "1187880"
  },
  {
    "text": "had some regulatory requirements um based on privacy that",
    "start": "1187880",
    "end": "1193360"
  },
  {
    "text": "required them to be in a particular region or a particular set of customers",
    "start": "1193360",
    "end": "1198480"
  },
  {
    "text": "so they had to Priss an additional environment in an additional region and",
    "start": "1198480",
    "end": "1204360"
  },
  {
    "text": "the timeline for that was um as you can imagine it was months because now they",
    "start": "1204360",
    "end": "1210679"
  },
  {
    "text": "had to copy paste what they've done for over years in one particular region now",
    "start": "1210679",
    "end": "1217520"
  },
  {
    "text": "into a new region so um so what we did here is with stacken we were able to",
    "start": "1217520",
    "end": "1225360"
  },
  {
    "text": "automatically scan their current state",
    "start": "1225360",
    "end": "1230640"
  },
  {
    "text": "um region um we from that scan we",
    "start": "1230720",
    "end": "1236720"
  },
  {
    "text": "created a state file that when then we inserted into stacken all stacken then",
    "start": "1236720",
    "end": "1243919"
  },
  {
    "text": "visualized the deployment topology their architecture the infrastructure architecture of their system um that",
    "start": "1243919",
    "end": "1253120"
  },
  {
    "text": "help them optimize some of the bad decisions that they made they look at what things were looking like they um",
    "start": "1253120",
    "end": "1261320"
  },
  {
    "text": "variabe some of the parameters within that topology and at the end they had",
    "start": "1261320",
    "end": "1267919"
  },
  {
    "text": "some reusable terraform modules that they used to provision the control plane",
    "start": "1267919",
    "end": "1275559"
  },
  {
    "text": "um of their new environment in the new region so we definitely help them reduce",
    "start": "1275559",
    "end": "1281360"
  },
  {
    "text": "some of the manual intervention because I don't know how would they have done this quickly um without",
    "start": "1281360",
    "end": "1289559"
  },
  {
    "text": "we helped them accelerate some of those deployment Cycles um and then everyone",
    "start": "1289559",
    "end": "1296320"
  },
  {
    "text": "was in the same page so you had real-time feedback everyone was on the same page because we had a nice topology",
    "start": "1296320",
    "end": "1301799"
  },
  {
    "text": "of what the system was looking like uh the death death teams and the op team could collaborate easily and quickly",
    "start": "1301799",
    "end": "1309480"
  },
  {
    "text": "based on that visual diagram um which make the end system more reliable which",
    "start": "1309480",
    "end": "1317240"
  },
  {
    "text": "is really good",
    "start": "1317240",
    "end": "1320520"
  },
  {
    "text": "at the end of the day uh devop is all about efficiency uh delivering software faster with fewer errors and at scale",
    "start": "1322760",
    "end": "1330559"
  },
  {
    "text": "but the reality is that managing infrastructure often slow teams down",
    "start": "1330559",
    "end": "1335840"
  },
  {
    "text": "manually writing configurations debugging fail deployments and ensuring",
    "start": "1335840",
    "end": "1341559"
  },
  {
    "text": "consistency across environments take up valuable time that could be spent on",
    "start": "1341559",
    "end": "1347840"
  },
  {
    "text": "better things like Innovation so with stack gen you can move fast without",
    "start": "1347840",
    "end": "1353240"
  },
  {
    "text": "breaking things ensuring that your cloud enironment is optimized compliant and",
    "start": "1353240",
    "end": "1358400"
  },
  {
    "text": "ready to scale so now let's see what stack gen",
    "start": "1358400",
    "end": "1364840"
  },
  {
    "text": "looks like in action with a quick demo I'm going to log in with my Google",
    "start": "1364840",
    "end": "1371960"
  },
  {
    "text": "account and the first thing I want to show you is how can stackin import and",
    "start": "1371960",
    "end": "1379000"
  },
  {
    "text": "generate your infrastructure from your source",
    "start": "1379000",
    "end": "1384240"
  },
  {
    "text": "code for this demo I'm going to use one of our stack gen demo repositories it's",
    "start": "1384440",
    "end": "1389600"
  },
  {
    "text": "called retr board and retr board is a python based uh serverless application",
    "start": "1389600",
    "end": "1397520"
  },
  {
    "text": "it is available in our GitHub at st- demos um and it has three functions one",
    "start": "1397520",
    "end": "1405039"
  },
  {
    "text": "is the API function the other one is to send email function fun and lastly a",
    "start": "1405039",
    "end": "1410760"
  },
  {
    "text": "function to send slack alerts so I'm going to go ahead and click proceed um and if you see as you can see",
    "start": "1410760",
    "end": "1419240"
  },
  {
    "text": "here a Lambda selected by default we can see some of the policies that have been",
    "start": "1419240",
    "end": "1425559"
  },
  {
    "text": "enforced these policies are a little bit different than uh traditional policies",
    "start": "1425559",
    "end": "1431159"
  },
  {
    "text": "because this a instead of being reactive policies checking the compliance of your",
    "start": "1431159",
    "end": "1436200"
  },
  {
    "text": "existing state um these are proactive policies when you when you enforce policies at the Inception of your",
    "start": "1436200",
    "end": "1444080"
  },
  {
    "text": "infrastructure as scode generated Sten makees sure that whatever policy you",
    "start": "1444080",
    "end": "1449159"
  },
  {
    "text": "pick is in compliance by default so we have different Frameworks that are supported",
    "start": "1449159",
    "end": "1455320"
  },
  {
    "text": "here we also have uh policy domains um that you can pick and choose depending on your",
    "start": "1455320",
    "end": "1461799"
  },
  {
    "text": "requirements so I'll click proceed here and I'll name this retro board",
    "start": "1461799",
    "end": "1469039"
  },
  {
    "text": "um demo I'll have a demo label as",
    "start": "1469039",
    "end": "1474840"
  },
  {
    "text": "well all right so I'll hit create and once I hit create our system goes ahead",
    "start": "1474840",
    "end": "1482279"
  },
  {
    "text": "and clones the repository and perform static code analysis on that repository",
    "start": "1482279",
    "end": "1488000"
  },
  {
    "text": "extracting all the traits all the API calls and the configuration of the application that",
    "start": "1488000",
    "end": "1496320"
  },
  {
    "text": "allows us to determine what would this infrastructure architecture looks like",
    "start": "1496320",
    "end": "1502080"
  },
  {
    "text": "and then it generates this architectural diagram showing us the resources that the application is",
    "start": "1502080",
    "end": "1508000"
  },
  {
    "text": "exposed to and how does it relate uh relationships between the resources one",
    "start": "1508000",
    "end": "1514080"
  },
  {
    "text": "thing that it pops off here on the right is things that we cannot determine from the application source code these are",
    "start": "1514080",
    "end": "1520279"
  },
  {
    "text": "things like values for environment variables um as as topic name in this",
    "start": "1520279",
    "end": "1525600"
  },
  {
    "text": "example so names those are typically things that we don't see on source code so I'll go ahead and convert these two",
    "start": "1525600",
    "end": "1532720"
  },
  {
    "text": "TF bars and give a value of for for some of these environment variables that",
    "start": "1532720",
    "end": "1537919"
  },
  {
    "text": "these Lambda functions",
    "start": "1537919",
    "end": "1540840"
  },
  {
    "text": "required and and this is this is your canvas now this is your infrastructure architecture and the what we from what",
    "start": "1556200",
    "end": "1564600"
  },
  {
    "text": "we observe from The Source good source code itself um there once you have this",
    "start": "1564600",
    "end": "1570520"
  },
  {
    "text": "there's multiple things that you can do if there's resources that for some",
    "start": "1570520",
    "end": "1575559"
  },
  {
    "text": "reason you don't have in your source code that you want to drag and drop you can click here on the left hand side",
    "start": "1575559",
    "end": "1581480"
  },
  {
    "text": "click on add new resource drag and drop it into the canvas configure that Resource as you see fit um um while",
    "start": "1581480",
    "end": "1589200"
  },
  {
    "text": "you're doing this if you accidentally um violate a policy and save it um our",
    "start": "1589200",
    "end": "1597720"
  },
  {
    "text": "system will automatically detect that you'll get a warning here it'll show you what is the policy that is being",
    "start": "1597720",
    "end": "1603760"
  },
  {
    "text": "violated why are you violating violating that policy how to fix it if you click on that violation It'll point you to the",
    "start": "1603760",
    "end": "1611039"
  },
  {
    "text": "exact place where you can make that fix and once you save it you are good to go",
    "start": "1611039",
    "end": "1617200"
  },
  {
    "text": "wait what did I do",
    "start": "1617200",
    "end": "1620240"
  },
  {
    "text": "there we go everything that you see in this",
    "start": "1624159",
    "end": "1629799"
  },
  {
    "text": "canvas is backed by modular and compliant infrastructure as code we",
    "start": "1629799",
    "end": "1637000"
  },
  {
    "text": "output terraform for the cloud providers control plane Helm charts for CET space",
    "start": "1637000",
    "end": "1643679"
  },
  {
    "text": "uh deployments and then there's different types of connections between the resources here that Define the",
    "start": "1643679",
    "end": "1650120"
  },
  {
    "text": "relationship one is uh the dependencies or so if you can see here this lamb the",
    "start": "1650120",
    "end": "1655840"
  },
  {
    "text": "function is connected with an API role and if we click on this icon we can see that the Arn of that Ro is being",
    "start": "1655840",
    "end": "1662440"
  },
  {
    "text": "connected to the input of the role in the LDA function so this is translates",
    "start": "1662440",
    "end": "1668919"
  },
  {
    "text": "here to where is",
    "start": "1668919",
    "end": "1674440"
  },
  {
    "text": "it permissions this Ro reference",
    "start": "1674440",
    "end": "1679679"
  },
  {
    "text": "and then if you see here the IPI function is talking to an sqsq if we click on the icon here we can see the IM",
    "start": "1679679",
    "end": "1686840"
  },
  {
    "text": "IM policy that is being generated if we scroll down here we can see besides the",
    "start": "1686840",
    "end": "1692559"
  },
  {
    "text": "KMS uh access that we're giving for encryption we are also giving it sqs",
    "start": "1692559",
    "end": "1698080"
  },
  {
    "text": "send message and the reason we are giving this uh permission is because we",
    "start": "1698080",
    "end": "1703840"
  },
  {
    "text": "observed within the source code of the application of the API function that it",
    "start": "1703840",
    "end": "1709600"
  },
  {
    "text": "was performing send messages API calls and that's the only API call that we",
    "start": "1709600",
    "end": "1714679"
  },
  {
    "text": "observe so we give it least privilege permissions by",
    "start": "1714679",
    "end": "1719200"
  },
  {
    "text": "default the other type of connection here are triggers so if you click here on this trigger you can see this SNS uh",
    "start": "1721640",
    "end": "1728360"
  },
  {
    "text": "topic is going to trigger this uh Lambda function for sending slack alerts",
    "start": "1728360",
    "end": "1736559"
  },
  {
    "text": "once you're good with this architecture this topology diagram you can always export your um generated IC you can",
    "start": "1739399",
    "end": "1746799"
  },
  {
    "text": "download it if you want to onlo it locally and play with it you can push it to your GitHub repositories gitlab bit",
    "start": "1746799",
    "end": "1752559"
  },
  {
    "text": "bucket you can also use our CLI to integrate within your cicd pipelines we",
    "start": "1752559",
    "end": "1758919"
  },
  {
    "text": "also have a GitHub action so you can leverage if you're in GitHub the next thing I wanted to show",
    "start": "1758919",
    "end": "1765440"
  },
  {
    "text": "you is a modernization use case so let's say",
    "start": "1765440",
    "end": "1771960"
  },
  {
    "text": "that you already either have a terraform in place that was created a long time",
    "start": "1771960",
    "end": "1777679"
  },
  {
    "text": "ago um or even if you have a cloud account where you created resources via",
    "start": "1777679",
    "end": "1783200"
  },
  {
    "text": "click Ops we can ingest those as well so I am going to go here and click create",
    "start": "1783200",
    "end": "1789240"
  },
  {
    "text": "click from deployment files and I'm going to give it one of my state files that I have here for demo purposes from",
    "start": "1789240",
    "end": "1795919"
  },
  {
    "text": "an Asher environment once I click proceed I'll select Asher as my source",
    "start": "1795919",
    "end": "1803640"
  },
  {
    "text": "and I'll pick all of my policies here by default and I'll name it Asher",
    "start": "1803640",
    "end": "1811279"
  },
  {
    "text": "modern and I'll create the appstack and here you can see we're",
    "start": "1811279",
    "end": "1816840"
  },
  {
    "text": "doing the same thing we're we're inferring what are the resources what are the connections between those resources to give you an architectural",
    "start": "1816840",
    "end": "1823519"
  },
  {
    "text": "diagram and regardless if this is coming from your Cloud directly while using our",
    "start": "1823519",
    "end": "1829000"
  },
  {
    "text": "Cloud to code tool to scan your existing Cloud environment or if you have Old State files um that you want to bring to",
    "start": "1829000",
    "end": "1836559"
  },
  {
    "text": "in compliance with the best practices the output of stacken is always",
    "start": "1836559",
    "end": "1841840"
  },
  {
    "text": "modalized infrastructure is good that follows the best practices and that can",
    "start": "1841840",
    "end": "1848519"
  },
  {
    "text": "give you um very very good confidence of what you're running in your cloud and",
    "start": "1848519",
    "end": "1854200"
  },
  {
    "text": "how you're running it without really having to get into um uh deeps of how",
    "start": "1854200",
    "end": "1860200"
  },
  {
    "text": "terraform itself work how IC itself works and having this canvas um is",
    "start": "1860200",
    "end": "1865279"
  },
  {
    "text": "really useful for having conversations between different teams from your development team to your operation team",
    "start": "1865279",
    "end": "1871200"
  },
  {
    "text": "from your security team um having a clear picture of what's running in your",
    "start": "1871200",
    "end": "1876240"
  },
  {
    "text": "environment how is it running how does it look like inde dependencies between resources from an architectural",
    "start": "1876240",
    "end": "1881840"
  },
  {
    "text": "perspective can really accelerate some of some of those bottlenecks that we",
    "start": "1881840",
    "end": "1886919"
  },
  {
    "text": "have in manual processes where we have to have meetings and and gates to",
    "start": "1886919",
    "end": "1892919"
  },
  {
    "text": "understand what's really happening here here the the Bops and governance team",
    "start": "1892919",
    "end": "1898440"
  },
  {
    "text": "can focus on enforcing policies and the developers or consumers of your Cloud",
    "start": "1898440",
    "end": "1906200"
  },
  {
    "text": "infrastructure can just focus on on building and provisioning these building blocks everything that you see here",
    "start": "1906200",
    "end": "1913120"
  },
  {
    "text": "within stattin can be customizable um you can bring your own policies you can bring your own U",
    "start": "1913120",
    "end": "1919399"
  },
  {
    "text": "modules if you have ter four modules that have been hardened that you know and love and has sweated over over",
    "start": "1919399",
    "end": "1925760"
  },
  {
    "text": "incidents over time you can bring those in and we just want to make it as easy",
    "start": "1925760",
    "end": "1931159"
  },
  {
    "text": "as possible to adopt um cloud in",
    "start": "1931159",
    "end": "1936320"
  },
  {
    "text": "general so thank you so much for your time today you can scan the QR code here",
    "start": "1936320",
    "end": "1943480"
  },
  {
    "text": "to schedule a meeting or you can visit stack.com to learn more and I look forward to shatting you with you and",
    "start": "1943480",
    "end": "1951039"
  },
  {
    "text": "meeting with you in the future",
    "start": "1951039",
    "end": "1954720"
  }
]