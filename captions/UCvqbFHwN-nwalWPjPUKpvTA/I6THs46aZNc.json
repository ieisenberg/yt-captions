[
  {
    "start": "0",
    "end": "13000"
  },
  {
    "text": "hello everyone i'm dhruv i'm a i'm a",
    "start": "160",
    "end": "2080"
  },
  {
    "text": "software engineer with the marketplace",
    "start": "2080",
    "end": "3600"
  },
  {
    "text": "team at digitalocean",
    "start": "3600",
    "end": "6160"
  },
  {
    "text": "hello and",
    "start": "6160",
    "end": "7359"
  },
  {
    "text": "my name is bayan and i'm a senior server",
    "start": "7359",
    "end": "9440"
  },
  {
    "text": "engineer on the app platform team",
    "start": "9440",
    "end": "13518"
  },
  {
    "start": "13000",
    "end": "13000"
  },
  {
    "text": "today we're going to be talking about",
    "start": "14240",
    "end": "15519"
  },
  {
    "text": "integrating fluent bit into a pass",
    "start": "15519",
    "end": "18800"
  },
  {
    "text": "when the context is a",
    "start": "18800",
    "end": "21119"
  },
  {
    "text": "platform as a service",
    "start": "21119",
    "end": "23519"
  },
  {
    "text": "the challenges are different and",
    "start": "23519",
    "end": "26000"
  },
  {
    "text": "hopefully we'll be able to go through",
    "start": "26000",
    "end": "27439"
  },
  {
    "text": "some of them today",
    "start": "27439",
    "end": "28800"
  },
  {
    "text": "so as for the agenda we are going to",
    "start": "28800",
    "end": "30400"
  },
  {
    "text": "first provide a context",
    "start": "30400",
    "end": "33520"
  },
  {
    "text": "as to what our platform is and what",
    "start": "33520",
    "end": "36239"
  },
  {
    "text": "are we working with",
    "start": "36239",
    "end": "38239"
  },
  {
    "text": "uh then",
    "start": "38239",
    "end": "39840"
  },
  {
    "text": "we would move towards internal logging",
    "start": "39840",
    "end": "42559"
  },
  {
    "text": "external logging the issues which we",
    "start": "42559",
    "end": "44960"
  },
  {
    "text": "faced and scope for future improvement",
    "start": "44960",
    "end": "49360"
  },
  {
    "start": "50000",
    "end": "50000"
  },
  {
    "text": "digitalocean app platform is a fully",
    "start": "51280",
    "end": "53360"
  },
  {
    "text": "managed platform as a service that lets",
    "start": "53360",
    "end": "55520"
  },
  {
    "text": "customers build deploy manage and scale",
    "start": "55520",
    "end": "58399"
  },
  {
    "text": "all kinds of different applications",
    "start": "58399",
    "end": "60640"
  },
  {
    "text": "these applications could be web apps",
    "start": "60640",
    "end": "62800"
  },
  {
    "text": "static sites apis background workers and",
    "start": "62800",
    "end": "66479"
  },
  {
    "text": "in a different of a different number of",
    "start": "66479",
    "end": "68240"
  },
  {
    "text": "languages",
    "start": "68240",
    "end": "69760"
  },
  {
    "text": "such as php python ruby javascript etc",
    "start": "69760",
    "end": "75439"
  },
  {
    "text": "use this in create",
    "start": "77600",
    "end": "79360"
  },
  {
    "text": "applications via our cloud dashboard",
    "start": "79360",
    "end": "82080"
  },
  {
    "text": "command line tool or api",
    "start": "82080",
    "end": "84640"
  },
  {
    "text": "regardless of the mechanism used the",
    "start": "84640",
    "end": "86960"
  },
  {
    "text": "application ends up represented as a",
    "start": "86960",
    "end": "88880"
  },
  {
    "text": "manifest specifying different components",
    "start": "88880",
    "end": "91600"
  },
  {
    "text": "in the application",
    "start": "91600",
    "end": "93680"
  },
  {
    "text": "each application may have one or more",
    "start": "93680",
    "end": "95920"
  },
  {
    "text": "component",
    "start": "95920",
    "end": "97200"
  },
  {
    "text": "for example an app",
    "start": "97200",
    "end": "99280"
  },
  {
    "text": "may have an http web api",
    "start": "99280",
    "end": "101600"
  },
  {
    "text": "and a background worker",
    "start": "101600",
    "end": "103920"
  },
  {
    "text": "we take these components stitch them",
    "start": "103920",
    "end": "105759"
  },
  {
    "text": "together",
    "start": "105759",
    "end": "106720"
  },
  {
    "text": "build them and deploy them on our",
    "start": "106720",
    "end": "108560"
  },
  {
    "text": "platform",
    "start": "108560",
    "end": "111040"
  },
  {
    "text": "app platform is built on top of existing",
    "start": "112799",
    "end": "115360"
  },
  {
    "text": "digital ocean products primarily we are",
    "start": "115360",
    "end": "117759"
  },
  {
    "text": "built on managed kubernetes container",
    "start": "117759",
    "end": "119840"
  },
  {
    "text": "registry and spaces offering",
    "start": "119840",
    "end": "122399"
  },
  {
    "text": "but underneath",
    "start": "122399",
    "end": "124000"
  },
  {
    "text": "we leverage almost all core",
    "start": "124000",
    "end": "125759"
  },
  {
    "text": "infrastructure products",
    "start": "125759",
    "end": "129320"
  },
  {
    "start": "130000",
    "end": "130000"
  },
  {
    "text": "app platform consists of numerous",
    "start": "131120",
    "end": "133280"
  },
  {
    "text": "kubernetes clusters in various digital",
    "start": "133280",
    "end": "135920"
  },
  {
    "text": "ocean regions and data centers",
    "start": "135920",
    "end": "138560"
  },
  {
    "text": "we treat our clusters as cattle not pets",
    "start": "138560",
    "end": "141200"
  },
  {
    "text": "and can reconfigure destroy and deploy",
    "start": "141200",
    "end": "144000"
  },
  {
    "text": "new clusters as needed",
    "start": "144000",
    "end": "146640"
  },
  {
    "text": "at a high level there is a core cluster",
    "start": "146640",
    "end": "149360"
  },
  {
    "text": "reconciliator component or management",
    "start": "149360",
    "end": "151200"
  },
  {
    "text": "control plane that's responsible for",
    "start": "151200",
    "end": "153519"
  },
  {
    "text": "managing clusters in the data plane",
    "start": "153519",
    "end": "156640"
  },
  {
    "text": "each cluster has several node poses",
    "start": "156640",
    "end": "159519"
  },
  {
    "text": "some dedicated to running customer",
    "start": "159519",
    "end": "161680"
  },
  {
    "text": "application workloads",
    "start": "161680",
    "end": "163440"
  },
  {
    "text": "some are dedicated to posting",
    "start": "163440",
    "end": "164879"
  },
  {
    "text": "application builds and some host our",
    "start": "164879",
    "end": "167920"
  },
  {
    "text": "internal in-class or control services",
    "start": "167920",
    "end": "170239"
  },
  {
    "text": "such as prometheus",
    "start": "170239",
    "end": "172239"
  },
  {
    "text": "istio and celium",
    "start": "172239",
    "end": "174720"
  },
  {
    "text": "all the reconciliation is done",
    "start": "174720",
    "end": "176319"
  },
  {
    "text": "programmatically using go client",
    "start": "176319",
    "end": "178080"
  },
  {
    "text": "libraries and the combination of",
    "start": "178080",
    "end": "179760"
  },
  {
    "text": "template and manifest and go code",
    "start": "179760",
    "end": "184360"
  },
  {
    "text": "similarly there is a control component",
    "start": "185120",
    "end": "187200"
  },
  {
    "text": "responsible for managing",
    "start": "187200",
    "end": "189360"
  },
  {
    "text": "the builds and deployments of actual",
    "start": "189360",
    "end": "191519"
  },
  {
    "text": "customer applications",
    "start": "191519",
    "end": "193760"
  },
  {
    "text": "these are orchestrated completely",
    "start": "193760",
    "end": "195519"
  },
  {
    "text": "dynamically as well as needed via go",
    "start": "195519",
    "end": "198319"
  },
  {
    "text": "client",
    "start": "198319",
    "end": "200640"
  },
  {
    "start": "200000",
    "end": "200000"
  },
  {
    "text": "within each cluster we need logging",
    "start": "200800",
    "end": "202720"
  },
  {
    "text": "visibility for our in cluster control",
    "start": "202720",
    "end": "204799"
  },
  {
    "text": "components",
    "start": "204799",
    "end": "206560"
  },
  {
    "text": "these logs need to be ingested securely",
    "start": "206560",
    "end": "208799"
  },
  {
    "text": "via websocket into digital ocean central",
    "start": "208799",
    "end": "212080"
  },
  {
    "text": "logging system in our main management",
    "start": "212080",
    "end": "214400"
  },
  {
    "text": "management control plane",
    "start": "214400",
    "end": "216480"
  },
  {
    "text": "we use flow and bit",
    "start": "216480",
    "end": "218319"
  },
  {
    "text": "deployed as a daemon set",
    "start": "218319",
    "end": "220319"
  },
  {
    "text": "within cluster to collect processes",
    "start": "220319",
    "end": "223040"
  },
  {
    "text": "analogs into the central login system we",
    "start": "223040",
    "end": "226319"
  },
  {
    "text": "use a custom websocket output plugin to",
    "start": "226319",
    "end": "228879"
  },
  {
    "text": "send the logs",
    "start": "228879",
    "end": "231680"
  },
  {
    "text": "and this is an example of our custom",
    "start": "231840",
    "end": "234159"
  },
  {
    "text": "website and plugin configuration looks",
    "start": "234159",
    "end": "236400"
  },
  {
    "text": "like",
    "start": "236400",
    "end": "237599"
  },
  {
    "text": "we have options to specify the end point",
    "start": "237599",
    "end": "240159"
  },
  {
    "text": "and any additional headers for example",
    "start": "240159",
    "end": "242879"
  },
  {
    "text": "the authorization bearer token",
    "start": "242879",
    "end": "246640"
  },
  {
    "start": "247000",
    "end": "247000"
  },
  {
    "text": "while we just covered",
    "start": "248480",
    "end": "250239"
  },
  {
    "text": "internal login a different use case is",
    "start": "250239",
    "end": "252879"
  },
  {
    "text": "where we want to send actual customer",
    "start": "252879",
    "end": "254560"
  },
  {
    "text": "application logs to other logging",
    "start": "254560",
    "end": "256160"
  },
  {
    "text": "systems",
    "start": "256160",
    "end": "257519"
  },
  {
    "text": "we want to support sending logs using",
    "start": "257519",
    "end": "260000"
  },
  {
    "text": "syslog or http protocols",
    "start": "260000",
    "end": "263440"
  },
  {
    "text": "applications run",
    "start": "263440",
    "end": "265120"
  },
  {
    "text": "in a secure isolated sandbox environment",
    "start": "265120",
    "end": "268479"
  },
  {
    "text": "using the g-wiser runtime",
    "start": "268479",
    "end": "271199"
  },
  {
    "text": "fluent pods that perform the actual lock",
    "start": "271199",
    "end": "274000"
  },
  {
    "text": "collection and processing also need to",
    "start": "274000",
    "end": "276160"
  },
  {
    "text": "run in the sandbox environment",
    "start": "276160",
    "end": "279280"
  },
  {
    "text": "we need dynamic and fine-grained control",
    "start": "279280",
    "end": "281919"
  },
  {
    "text": "over logging",
    "start": "281919",
    "end": "283360"
  },
  {
    "text": "configuration as applications change",
    "start": "283360",
    "end": "286240"
  },
  {
    "text": "are deployed or re-allocated",
    "start": "286240",
    "end": "288800"
  },
  {
    "text": "around the cluster",
    "start": "288800",
    "end": "291680"
  },
  {
    "text": "for security and performance purposes we",
    "start": "292560",
    "end": "295120"
  },
  {
    "text": "need to be able to throttle and",
    "start": "295120",
    "end": "296479"
  },
  {
    "text": "dynamically disable logging for",
    "start": "296479",
    "end": "298160"
  },
  {
    "text": "applications",
    "start": "298160",
    "end": "299680"
  },
  {
    "text": "we also need to have detailed",
    "start": "299680",
    "end": "301280"
  },
  {
    "text": "observability and insights into the",
    "start": "301280",
    "end": "303280"
  },
  {
    "text": "health and metrics of different",
    "start": "303280",
    "end": "305280"
  },
  {
    "text": "applications log",
    "start": "305280",
    "end": "306880"
  },
  {
    "text": "logging behavior for example",
    "start": "306880",
    "end": "309600"
  },
  {
    "text": "we need to track how much logging data",
    "start": "309600",
    "end": "312080"
  },
  {
    "text": "each app is outputting",
    "start": "312080",
    "end": "314160"
  },
  {
    "text": "we need to know if logging is working",
    "start": "314160",
    "end": "316400"
  },
  {
    "text": "and is healthy for a specific",
    "start": "316400",
    "end": "318240"
  },
  {
    "text": "application",
    "start": "318240",
    "end": "319600"
  },
  {
    "text": "we need to know the overall health of",
    "start": "319600",
    "end": "322320"
  },
  {
    "text": "the logging system itself",
    "start": "322320",
    "end": "325120"
  },
  {
    "text": "all of this needs to happen dynamically",
    "start": "325120",
    "end": "328160"
  },
  {
    "text": "and",
    "start": "328160",
    "end": "329120"
  },
  {
    "text": "programmatically as part of a normal",
    "start": "329120",
    "end": "331440"
  },
  {
    "text": "application reconcile flow covered",
    "start": "331440",
    "end": "335680"
  },
  {
    "text": "earlier for",
    "start": "336840",
    "end": "339800"
  },
  {
    "text": "application logging we choose to utilize",
    "start": "339800",
    "end": "343360"
  },
  {
    "text": "fluent bit operator to orchestrate all",
    "start": "343360",
    "end": "345440"
  },
  {
    "text": "the necessary components and",
    "start": "345440",
    "end": "346800"
  },
  {
    "text": "configuration",
    "start": "346800",
    "end": "348400"
  },
  {
    "text": "we deploy one instance of the fluid bit",
    "start": "348400",
    "end": "350800"
  },
  {
    "text": "operator in each of the clusters",
    "start": "350800",
    "end": "354240"
  },
  {
    "text": "the operator manages the fluent bit",
    "start": "354240",
    "end": "356319"
  },
  {
    "text": "daemon set which controls the fluid bit",
    "start": "356319",
    "end": "358319"
  },
  {
    "text": "pods on all the relevant customer",
    "start": "358319",
    "end": "360960"
  },
  {
    "text": "workload uh nodes",
    "start": "360960",
    "end": "363440"
  },
  {
    "text": "as applications are deployed by the apps",
    "start": "363440",
    "end": "366479"
  },
  {
    "text": "reconciler discussed earlier input",
    "start": "366479",
    "end": "368800"
  },
  {
    "text": "filter and output custom resources are",
    "start": "368800",
    "end": "370720"
  },
  {
    "text": "created for each application and login",
    "start": "370720",
    "end": "372720"
  },
  {
    "text": "destination endpoints",
    "start": "372720",
    "end": "375360"
  },
  {
    "text": "these custom resources get reconciled by",
    "start": "375360",
    "end": "377840"
  },
  {
    "text": "the fluent bit operator into a secret",
    "start": "377840",
    "end": "380160"
  },
  {
    "text": "containing the fluent bit configuration",
    "start": "380160",
    "end": "383039"
  },
  {
    "text": "file",
    "start": "383039",
    "end": "384479"
  },
  {
    "text": "this gets mounted to the fluent bit pods",
    "start": "384479",
    "end": "387120"
  },
  {
    "text": "which then performs the actual log",
    "start": "387120",
    "end": "389120"
  },
  {
    "text": "processing",
    "start": "389120",
    "end": "390720"
  },
  {
    "text": "one initial problem which we had",
    "start": "390720",
    "end": "393360"
  },
  {
    "text": "was that the fluid bit operator did not",
    "start": "393360",
    "end": "395199"
  },
  {
    "text": "expose the go client we had to add the",
    "start": "395199",
    "end": "398000"
  },
  {
    "text": "go client packages to up to the operator",
    "start": "398000",
    "end": "400479"
  },
  {
    "text": "in order to use the custom resources",
    "start": "400479",
    "end": "402080"
  },
  {
    "text": "programmatically",
    "start": "402080",
    "end": "404879"
  },
  {
    "start": "405000",
    "end": "405000"
  },
  {
    "text": "this is an overview of a single",
    "start": "406880",
    "end": "408880"
  },
  {
    "text": "applications logging pipeline",
    "start": "408880",
    "end": "411280"
  },
  {
    "text": "we collect application logs using the",
    "start": "411280",
    "end": "413599"
  },
  {
    "text": "tail input",
    "start": "413599",
    "end": "414880"
  },
  {
    "text": "since we are running on container d we",
    "start": "414880",
    "end": "417360"
  },
  {
    "text": "use the cri parser to parse the log",
    "start": "417360",
    "end": "420160"
  },
  {
    "text": "records",
    "start": "420160",
    "end": "421520"
  },
  {
    "text": "next we throttle the log processing",
    "start": "421520",
    "end": "423919"
  },
  {
    "text": "we also use",
    "start": "423919",
    "end": "425360"
  },
  {
    "text": "modify filter to set some additional",
    "start": "425360",
    "end": "427919"
  },
  {
    "text": "application specific metadata to the log",
    "start": "427919",
    "end": "430080"
  },
  {
    "text": "records",
    "start": "430080",
    "end": "432080"
  },
  {
    "text": "and finally",
    "start": "432080",
    "end": "433520"
  },
  {
    "text": "we route the records to the appropriate",
    "start": "433520",
    "end": "435360"
  },
  {
    "text": "output based",
    "start": "435360",
    "end": "436960"
  },
  {
    "text": "on the application's login configuration",
    "start": "436960",
    "end": "440479"
  },
  {
    "text": "so here is an example",
    "start": "440479",
    "end": "442639"
  },
  {
    "start": "441000",
    "end": "441000"
  },
  {
    "text": "of an input configuration",
    "start": "442639",
    "end": "444960"
  },
  {
    "text": "applications live in their own namespace",
    "start": "444960",
    "end": "447039"
  },
  {
    "text": "which is determined by a unique",
    "start": "447039",
    "end": "448840"
  },
  {
    "text": "identifier we have to be very specific",
    "start": "448840",
    "end": "451440"
  },
  {
    "text": "about the input path",
    "start": "451440",
    "end": "453360"
  },
  {
    "text": "we specify so we only collect",
    "start": "453360",
    "end": "455680"
  },
  {
    "text": "the current running containers",
    "start": "455680",
    "end": "457919"
  },
  {
    "text": "in the apps name space",
    "start": "457919",
    "end": "461759"
  },
  {
    "text": "we ensure we do not collect any",
    "start": "461759",
    "end": "463520"
  },
  {
    "text": "kubernetes system logs",
    "start": "463520",
    "end": "466080"
  },
  {
    "text": "and we tag the app very specifically so",
    "start": "466080",
    "end": "468160"
  },
  {
    "text": "that we can control the routing",
    "start": "468160",
    "end": "471199"
  },
  {
    "text": "by default the tail input uses input",
    "start": "471199",
    "end": "473919"
  },
  {
    "text": "output notify system calls to collect",
    "start": "473919",
    "end": "476479"
  },
  {
    "text": "data from log files as it is written to",
    "start": "476479",
    "end": "481199"
  },
  {
    "text": "because both the application pods and",
    "start": "481199",
    "end": "483759"
  },
  {
    "text": "the fluent bit pods run in separate",
    "start": "483759",
    "end": "486160"
  },
  {
    "text": "gvisor environments",
    "start": "486160",
    "end": "487919"
  },
  {
    "text": "the file system call restrictions",
    "start": "487919",
    "end": "489680"
  },
  {
    "text": "enforced by g-wiser make this type of",
    "start": "489680",
    "end": "492639"
  },
  {
    "text": "lock collection prohibitive and",
    "start": "492639",
    "end": "494080"
  },
  {
    "text": "non-functional",
    "start": "494080",
    "end": "495520"
  },
  {
    "text": "fortunately fluent bit eight point fluid",
    "start": "495520",
    "end": "497919"
  },
  {
    "text": "1.8",
    "start": "497919",
    "end": "499440"
  },
  {
    "text": "came with the tail input plug-in option",
    "start": "499440",
    "end": "502639"
  },
  {
    "text": "to use stat watcher to collect log data",
    "start": "502639",
    "end": "506080"
  },
  {
    "text": "which works around sandbox issues",
    "start": "506080",
    "end": "510080"
  },
  {
    "text": "the",
    "start": "511280",
    "end": "512320"
  },
  {
    "text": "modify filter",
    "start": "512320",
    "end": "515200"
  },
  {
    "start": "514000",
    "end": "514000"
  },
  {
    "text": "is used to insert additional metadata",
    "start": "516959",
    "end": "519440"
  },
  {
    "text": "into the log records",
    "start": "519440",
    "end": "521440"
  },
  {
    "text": "these include the component name and the",
    "start": "521440",
    "end": "523760"
  },
  {
    "text": "app name",
    "start": "523760",
    "end": "526240"
  },
  {
    "start": "527000",
    "end": "527000"
  },
  {
    "text": "for outputs",
    "start": "527040",
    "end": "528480"
  },
  {
    "text": "we match exactly the component within",
    "start": "528480",
    "end": "530720"
  },
  {
    "text": "the app that needs to be that needs to",
    "start": "530720",
    "end": "533120"
  },
  {
    "text": "get sent to the log destination",
    "start": "533120",
    "end": "535760"
  },
  {
    "text": "for syslog output we enhance the",
    "start": "535760",
    "end": "538080"
  },
  {
    "text": "transport record with the enriched",
    "start": "538080",
    "end": "540320"
  },
  {
    "text": "metadata values inserted in the modify",
    "start": "540320",
    "end": "542800"
  },
  {
    "text": "filter",
    "start": "542800",
    "end": "545120"
  },
  {
    "text": "these then can be parsed at the",
    "start": "545120",
    "end": "546880"
  },
  {
    "text": "destination to associate logs with the",
    "start": "546880",
    "end": "549360"
  },
  {
    "text": "actual app and components for nicer",
    "start": "549360",
    "end": "551600"
  },
  {
    "text": "aggregation",
    "start": "551600",
    "end": "554160"
  },
  {
    "start": "555000",
    "end": "555000"
  },
  {
    "text": "for monitoring all of this we have some",
    "start": "556640",
    "end": "558959"
  },
  {
    "text": "specific needs for detailed metric",
    "start": "558959",
    "end": "561040"
  },
  {
    "text": "collection in the log processing",
    "start": "561040",
    "end": "562959"
  },
  {
    "text": "pipeline",
    "start": "562959",
    "end": "564399"
  },
  {
    "text": "we need to be able to tell on a per",
    "start": "564399",
    "end": "566320"
  },
  {
    "text": "component level how many log records and",
    "start": "566320",
    "end": "569279"
  },
  {
    "text": "how much bandwidth has been processed",
    "start": "569279",
    "end": "572000"
  },
  {
    "text": "we need to be able to collect all the",
    "start": "572000",
    "end": "573760"
  },
  {
    "text": "data all of this data in the prometheus",
    "start": "573760",
    "end": "576000"
  },
  {
    "text": "exposition format",
    "start": "576000",
    "end": "578080"
  },
  {
    "text": "and we need to be able to",
    "start": "578080",
    "end": "579839"
  },
  {
    "text": "connect the metric values to specific",
    "start": "579839",
    "end": "582080"
  },
  {
    "text": "application and customer identifiers",
    "start": "582080",
    "end": "586320"
  },
  {
    "text": "we would like to have a time series with",
    "start": "587360",
    "end": "589360"
  },
  {
    "text": "metadata such as an app name id and",
    "start": "589360",
    "end": "592560"
  },
  {
    "text": "customer id",
    "start": "592560",
    "end": "594320"
  },
  {
    "text": "like seen here",
    "start": "594320",
    "end": "596080"
  },
  {
    "text": "flimbit provides an api for exposing",
    "start": "596080",
    "end": "598480"
  },
  {
    "text": "plug-in metrics however the api is",
    "start": "598480",
    "end": "600640"
  },
  {
    "text": "limited in the data it exposes he only",
    "start": "600640",
    "end": "603120"
  },
  {
    "text": "provides the name of the plugin",
    "start": "603120",
    "end": "605600"
  },
  {
    "text": "furthermore even when using an alias to",
    "start": "605600",
    "end": "608240"
  },
  {
    "text": "uniquely identify plugins the name",
    "start": "608240",
    "end": "610959"
  },
  {
    "text": "exposed in the matrix api is truncated",
    "start": "610959",
    "end": "613279"
  },
  {
    "text": "to 32 characters",
    "start": "613279",
    "end": "615279"
  },
  {
    "text": "even new uids cannot fit nicely in the",
    "start": "615279",
    "end": "617680"
  },
  {
    "text": "alias name",
    "start": "617680",
    "end": "620480"
  },
  {
    "text": "ideally we will like a solution similar",
    "start": "621519",
    "end": "623760"
  },
  {
    "text": "to this",
    "start": "623760",
    "end": "624800"
  },
  {
    "text": "where we can specify the extra",
    "start": "624800",
    "end": "626480"
  },
  {
    "text": "monitoring labels for the plugin which",
    "start": "626480",
    "end": "628800"
  },
  {
    "text": "then would be exposed in the monitoring",
    "start": "628800",
    "end": "630720"
  },
  {
    "text": "api by fluent date",
    "start": "630720",
    "end": "632640"
  },
  {
    "text": "we have created a github issue that",
    "start": "632640",
    "end": "634480"
  },
  {
    "text": "hopefully can be addressed at some point",
    "start": "634480",
    "end": "636560"
  },
  {
    "text": "in the near future",
    "start": "636560",
    "end": "639680"
  },
  {
    "text": "as a worker we dynamically generate",
    "start": "642000",
    "end": "643920"
  },
  {
    "text": "prometheus recording rules for enhanced",
    "start": "643920",
    "end": "646399"
  },
  {
    "text": "metric collection",
    "start": "646399",
    "end": "648079"
  },
  {
    "text": "this enables us to add automated",
    "start": "648079",
    "end": "650000"
  },
  {
    "text": "metadata to the ingested metrics as",
    "start": "650000",
    "end": "652399"
  },
  {
    "text": "they're scraped",
    "start": "652399",
    "end": "653600"
  },
  {
    "text": "from the fluency api",
    "start": "653600",
    "end": "656720"
  },
  {
    "text": "the name",
    "start": "656720",
    "end": "657839"
  },
  {
    "text": "is a unique identifier for the plugin",
    "start": "657839",
    "end": "659600"
  },
  {
    "text": "that we generate",
    "start": "659600",
    "end": "661040"
  },
  {
    "text": "that can fit in the alias field and",
    "start": "661040",
    "end": "663200"
  },
  {
    "text": "connects",
    "start": "663200",
    "end": "664320"
  },
  {
    "text": "metrics to app and customer ids",
    "start": "664320",
    "end": "668640"
  },
  {
    "start": "669000",
    "end": "669000"
  },
  {
    "text": "this is a summary of some of the issues",
    "start": "670480",
    "end": "672240"
  },
  {
    "text": "we've encountered when working with",
    "start": "672240",
    "end": "674399"
  },
  {
    "text": "fluent bits",
    "start": "674399",
    "end": "675680"
  },
  {
    "text": "the tail input plug-in did not work",
    "start": "675680",
    "end": "677600"
  },
  {
    "text": "under gvisor and we had to use the",
    "start": "677600",
    "end": "680000"
  },
  {
    "text": "disabled i notified watcher option that",
    "start": "680000",
    "end": "682959"
  },
  {
    "text": "only became available in 1.8",
    "start": "682959",
    "end": "686480"
  },
  {
    "text": "dynamic configuration of fluid within",
    "start": "686480",
    "end": "688480"
  },
  {
    "text": "kubernetes is still cumbersome requires",
    "start": "688480",
    "end": "690640"
  },
  {
    "text": "some requirements",
    "start": "690640",
    "end": "692560"
  },
  {
    "text": "a fluid bit operator uses a custom",
    "start": "692560",
    "end": "695279"
  },
  {
    "text": "process called fluid bay watcher that",
    "start": "695279",
    "end": "697760"
  },
  {
    "text": "watches for the changes within the",
    "start": "697760",
    "end": "699360"
  },
  {
    "text": "configuration configuration file and",
    "start": "699360",
    "end": "701360"
  },
  {
    "text": "restarts the actual flowing bit process",
    "start": "701360",
    "end": "703839"
  },
  {
    "text": "when changes happen",
    "start": "703839",
    "end": "706000"
  },
  {
    "text": "the fluent bit watchers also uses input",
    "start": "706000",
    "end": "709040"
  },
  {
    "text": "output notify system calls which do not",
    "start": "709040",
    "end": "711360"
  },
  {
    "text": "work under gvisor in this context",
    "start": "711360",
    "end": "714720"
  },
  {
    "text": "so we had to add support for stat",
    "start": "714720",
    "end": "716639"
  },
  {
    "text": "polling to fluently watch your component",
    "start": "716639",
    "end": "719360"
  },
  {
    "text": "within the operator to enable dynamic",
    "start": "719360",
    "end": "721360"
  },
  {
    "text": "configuration within g visor",
    "start": "721360",
    "end": "724639"
  },
  {
    "text": "as mentioned earlier flimbit operator",
    "start": "724639",
    "end": "726639"
  },
  {
    "text": "did not have go client you had to add it",
    "start": "726639",
    "end": "729440"
  },
  {
    "text": "as well",
    "start": "729440",
    "end": "730720"
  },
  {
    "text": "finally uh with some investigation we",
    "start": "730720",
    "end": "733600"
  },
  {
    "text": "found an issue where fluent bit operator",
    "start": "733600",
    "end": "736160"
  },
  {
    "text": "is using a lot of cpu rendering the",
    "start": "736160",
    "end": "738800"
  },
  {
    "text": "configuration file into the secret",
    "start": "738800",
    "end": "741760"
  },
  {
    "text": "we had a fix for this and submitted a pr",
    "start": "741760",
    "end": "744880"
  },
  {
    "text": "upstream",
    "start": "744880",
    "end": "747360"
  },
  {
    "start": "747000",
    "end": "747000"
  },
  {
    "text": "for some future work we wanted to",
    "start": "749600",
    "end": "751440"
  },
  {
    "text": "explore the native fluent bid website",
    "start": "751440",
    "end": "754000"
  },
  {
    "text": "plugin introduced in 1.7 and see if that",
    "start": "754000",
    "end": "757200"
  },
  {
    "text": "can fit our needs like our custom one",
    "start": "757200",
    "end": "760880"
  },
  {
    "text": "gvisor encourages performance mentally",
    "start": "760880",
    "end": "763200"
  },
  {
    "text": "when working with file system io we want",
    "start": "763200",
    "end": "766480"
  },
  {
    "text": "to",
    "start": "766480",
    "end": "768000"
  },
  {
    "text": "investigate this further with respect to",
    "start": "768000",
    "end": "769920"
  },
  {
    "text": "tail input plugin performance",
    "start": "769920",
    "end": "773760"
  },
  {
    "text": "uh additionally we want to optimize the",
    "start": "773760",
    "end": "775920"
  },
  {
    "text": "fluent bit operator operator",
    "start": "775920",
    "end": "778639"
  },
  {
    "text": "fluid bit operator stores a single",
    "start": "778639",
    "end": "780480"
  },
  {
    "text": "config file for all the fluency damage",
    "start": "780480",
    "end": "783279"
  },
  {
    "text": "and in a single kubernetes secret",
    "start": "783279",
    "end": "786639"
  },
  {
    "text": "data in kubernetes secrets has one mappy",
    "start": "786639",
    "end": "789839"
  },
  {
    "text": "byte size image which can be problematic",
    "start": "789839",
    "end": "792399"
  },
  {
    "text": "if we store large amounts of",
    "start": "792399",
    "end": "794079"
  },
  {
    "text": "configuration data",
    "start": "794079",
    "end": "796320"
  },
  {
    "text": "one relatively easy improvement might be",
    "start": "796320",
    "end": "798639"
  },
  {
    "text": "to use compressions such as gzip to",
    "start": "798639",
    "end": "800560"
  },
  {
    "text": "shrink the configuration file",
    "start": "800560",
    "end": "802720"
  },
  {
    "text": "additionally we can try to",
    "start": "802720",
    "end": "804959"
  },
  {
    "text": "fix this with some more work and display",
    "start": "804959",
    "end": "807519"
  },
  {
    "text": "the config files",
    "start": "807519",
    "end": "809120"
  },
  {
    "text": "as they grow and rejoin them with their",
    "start": "809120",
    "end": "810800"
  },
  {
    "text": "red by film bit pods",
    "start": "810800",
    "end": "814160"
  },
  {
    "text": "finally we would like to solve the",
    "start": "814160",
    "end": "815440"
  },
  {
    "text": "matrix metadata really re-labeling the",
    "start": "815440",
    "end": "818079"
  },
  {
    "text": "issue that we mentioned earlier for our",
    "start": "818079",
    "end": "820880"
  },
  {
    "text": "monitoring functionality",
    "start": "820880",
    "end": "824399"
  },
  {
    "text": "thank you and we can answer any",
    "start": "825279",
    "end": "827360"
  },
  {
    "text": "questions",
    "start": "827360",
    "end": "829839"
  }
]