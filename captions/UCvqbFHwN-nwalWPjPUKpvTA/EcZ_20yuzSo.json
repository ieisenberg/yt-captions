[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "good morning and good evening to",
    "start": "1680",
    "end": "3360"
  },
  {
    "text": "everyone this is ru chandra and this is",
    "start": "3360",
    "end": "6240"
  },
  {
    "text": "the co-work with my colleague david chen",
    "start": "6240",
    "end": "9360"
  },
  {
    "text": "we both work in arm",
    "start": "9360",
    "end": "11679"
  },
  {
    "text": "today we will share some cognitive",
    "start": "11679",
    "end": "13679"
  },
  {
    "text": "performance tests and talks on cloud",
    "start": "13679",
    "end": "16640"
  },
  {
    "text": "instance",
    "start": "16640",
    "end": "19119"
  },
  {
    "start": "18000",
    "end": "18000"
  },
  {
    "text": "our motivation is three points",
    "start": "19439",
    "end": "21680"
  },
  {
    "text": "first has a hardware platform increasing",
    "start": "21680",
    "end": "24320"
  },
  {
    "text": "performance",
    "start": "24320",
    "end": "25920"
  },
  {
    "text": "such as the higher cpu performance",
    "start": "25920",
    "end": "28240"
  },
  {
    "text": "increased core qualcomm's",
    "start": "28240",
    "end": "30400"
  },
  {
    "text": "the ip integration",
    "start": "30400",
    "end": "32640"
  },
  {
    "text": "cloud native deployment",
    "start": "32640",
    "end": "34800"
  },
  {
    "text": "could benefit a lot",
    "start": "34800",
    "end": "37200"
  },
  {
    "text": "secondly we want to explore",
    "start": "37200",
    "end": "40079"
  },
  {
    "text": "performance across different size",
    "start": "40079",
    "end": "42960"
  },
  {
    "text": "clusters here we use ews graviton too",
    "start": "42960",
    "end": "48640"
  },
  {
    "text": "especially we'd like to figure out",
    "start": "48640",
    "end": "50879"
  },
  {
    "text": "what's performance bottleneck with a",
    "start": "50879",
    "end": "53920"
  },
  {
    "text": "large-scale kubernetes deployment",
    "start": "53920",
    "end": "56960"
  },
  {
    "text": "here is the question we don't have 1000",
    "start": "56960",
    "end": "60879"
  },
  {
    "text": "and more physical note",
    "start": "60879",
    "end": "62960"
  },
  {
    "text": "how do we test and collect performance",
    "start": "62960",
    "end": "66000"
  },
  {
    "text": "data",
    "start": "66000",
    "end": "68479"
  },
  {
    "text": "last we would like to analyze the",
    "start": "69760",
    "end": "72000"
  },
  {
    "text": "performance difference",
    "start": "72000",
    "end": "73840"
  },
  {
    "text": "between different architecture",
    "start": "73840",
    "end": "77679"
  },
  {
    "start": "77000",
    "end": "77000"
  },
  {
    "text": "let's start from the lifecycle of the",
    "start": "78000",
    "end": "79840"
  },
  {
    "text": "port",
    "start": "79840",
    "end": "80799"
  },
  {
    "text": "pod is a set of a container and it's",
    "start": "80799",
    "end": "84479"
  },
  {
    "text": "the smallest unit to create or delete",
    "start": "84479",
    "end": "87680"
  },
  {
    "text": "incognitus",
    "start": "87680",
    "end": "89600"
  },
  {
    "text": "on the left is the typical deployment",
    "start": "89600",
    "end": "92159"
  },
  {
    "text": "can think file",
    "start": "92159",
    "end": "94320"
  },
  {
    "text": "this config",
    "start": "94320",
    "end": "96560"
  },
  {
    "text": "will create three",
    "start": "96560",
    "end": "99200"
  },
  {
    "text": "http",
    "start": "99200",
    "end": "100960"
  },
  {
    "text": "port",
    "start": "100960",
    "end": "102720"
  },
  {
    "text": "on the right is the port creator process",
    "start": "102720",
    "end": "106320"
  },
  {
    "text": "first",
    "start": "106320",
    "end": "107680"
  },
  {
    "text": "user sends the create port request",
    "start": "107680",
    "end": "111439"
  },
  {
    "text": "to the api server",
    "start": "111439",
    "end": "114640"
  },
  {
    "text": "then the api server will write the",
    "start": "114640",
    "end": "116719"
  },
  {
    "text": "information to etcd",
    "start": "116719",
    "end": "119600"
  },
  {
    "text": "http is a kind of a",
    "start": "119600",
    "end": "122000"
  },
  {
    "text": "storage solution",
    "start": "122000",
    "end": "124399"
  },
  {
    "text": "and then the scheduler will find that",
    "start": "124399",
    "end": "127360"
  },
  {
    "text": "there are a new port",
    "start": "127360",
    "end": "129039"
  },
  {
    "text": "and a scheduler will abandon support",
    "start": "129039",
    "end": "133120"
  },
  {
    "text": "to one node that",
    "start": "133120",
    "end": "135200"
  },
  {
    "text": "that physical requirement",
    "start": "135200",
    "end": "137840"
  },
  {
    "text": "then the couplet",
    "start": "137840",
    "end": "140400"
  },
  {
    "text": "notice that a new",
    "start": "140400",
    "end": "142480"
  },
  {
    "text": "port would bounce the unknown",
    "start": "142480",
    "end": "145760"
  },
  {
    "text": "the kubelet will",
    "start": "145760",
    "end": "147599"
  },
  {
    "text": "call docker or other",
    "start": "147599",
    "end": "150080"
  },
  {
    "text": "container runtime to create a containers",
    "start": "150080",
    "end": "154080"
  },
  {
    "text": "at last the quibblet will update support",
    "start": "154080",
    "end": "157680"
  },
  {
    "text": "status",
    "start": "157680",
    "end": "159120"
  },
  {
    "text": "to api server and api server write it to",
    "start": "159120",
    "end": "162560"
  },
  {
    "text": "ectd",
    "start": "162560",
    "end": "165120"
  },
  {
    "text": "the port determination will do things",
    "start": "167280",
    "end": "169360"
  },
  {
    "text": "offset to creation",
    "start": "169360",
    "end": "171840"
  },
  {
    "text": "and the user",
    "start": "171840",
    "end": "173440"
  },
  {
    "text": "sends the delete port request to api",
    "start": "173440",
    "end": "176480"
  },
  {
    "text": "server",
    "start": "176480",
    "end": "178159"
  },
  {
    "text": "and the kublet will notice the delete",
    "start": "178159",
    "end": "181920"
  },
  {
    "text": "and do the delete by canon runtimes and",
    "start": "181920",
    "end": "186239"
  },
  {
    "text": "inform api server at last",
    "start": "186239",
    "end": "189920"
  },
  {
    "start": "189000",
    "end": "189000"
  },
  {
    "text": "we divided the test in two parts first",
    "start": "190879",
    "end": "194640"
  },
  {
    "text": "is workload",
    "start": "194640",
    "end": "196080"
  },
  {
    "text": "some typical workloads are listed here",
    "start": "196080",
    "end": "198480"
  },
  {
    "text": "such as web server midi file",
    "start": "198480",
    "end": "203120"
  },
  {
    "text": "database",
    "start": "203280",
    "end": "204799"
  },
  {
    "text": "we choose interacts and redis",
    "start": "204799",
    "end": "207440"
  },
  {
    "text": "and the workload",
    "start": "207440",
    "end": "209840"
  },
  {
    "text": "the bottleneck of a database is usually",
    "start": "209840",
    "end": "212720"
  },
  {
    "text": "io",
    "start": "212720",
    "end": "213760"
  },
  {
    "text": "so we didn't test any database",
    "start": "213760",
    "end": "217920"
  },
  {
    "text": "a lot of tools available here we use",
    "start": "217920",
    "end": "220720"
  },
  {
    "text": "systems",
    "start": "220720",
    "end": "222080"
  },
  {
    "text": "to test cpu and memory",
    "start": "222080",
    "end": "226440"
  },
  {
    "text": "for workload tests we choose wrk and",
    "start": "226799",
    "end": "231120"
  },
  {
    "text": "regis benchmark",
    "start": "231120",
    "end": "234080"
  },
  {
    "text": "both of them can test multiple items",
    "start": "237439",
    "end": "240000"
  },
  {
    "text": "such as requests per second",
    "start": "240000",
    "end": "242319"
  },
  {
    "text": "average and",
    "start": "242319",
    "end": "244400"
  },
  {
    "text": "some number of percentage latency",
    "start": "244400",
    "end": "246640"
  },
  {
    "text": "and the stress of a tor can be set to",
    "start": "246640",
    "end": "251280"
  },
  {
    "text": "check different pressure",
    "start": "251280",
    "end": "254159"
  },
  {
    "text": "last but not least is easy to use",
    "start": "254159",
    "end": "257759"
  },
  {
    "text": "we test two situation one is with",
    "start": "257759",
    "end": "260799"
  },
  {
    "text": "kubernetes and the workload will be",
    "start": "260799",
    "end": "263600"
  },
  {
    "text": "deployed in a port",
    "start": "263600",
    "end": "266800"
  },
  {
    "text": "the other is without kubernetes and the",
    "start": "266960",
    "end": "269440"
  },
  {
    "text": "workload will be wrong directly on os",
    "start": "269440",
    "end": "274160"
  },
  {
    "text": "in both situation the test client will",
    "start": "274160",
    "end": "276960"
  },
  {
    "text": "run another instance",
    "start": "276960",
    "end": "279360"
  },
  {
    "text": "and",
    "start": "279360",
    "end": "280400"
  },
  {
    "text": "it",
    "start": "280400",
    "end": "281440"
  },
  {
    "text": "will",
    "start": "281440",
    "end": "282560"
  },
  {
    "text": "request the work the workload service",
    "start": "282560",
    "end": "287120"
  },
  {
    "start": "286000",
    "end": "286000"
  },
  {
    "text": "the other part is test",
    "start": "288240",
    "end": "290960"
  },
  {
    "text": "test the scalability",
    "start": "290960",
    "end": "293360"
  },
  {
    "text": "we choose class loader to do the",
    "start": "293360",
    "end": "296720"
  },
  {
    "text": "scalability part",
    "start": "296720",
    "end": "299440"
  },
  {
    "text": "cataloguer is an official kubernetes",
    "start": "299440",
    "end": "302080"
  },
  {
    "text": "scalability and performance testing",
    "start": "302080",
    "end": "303919"
  },
  {
    "text": "framework",
    "start": "303919",
    "end": "305360"
  },
  {
    "text": "and it has a long",
    "start": "305360",
    "end": "307120"
  },
  {
    "text": "list of supports providers it also",
    "start": "307120",
    "end": "310560"
  },
  {
    "text": "decoupled from cognitive cells it has",
    "start": "310560",
    "end": "313199"
  },
  {
    "text": "compared with performance test cases",
    "start": "313199",
    "end": "316960"
  },
  {
    "text": "also it provides fine fine grained",
    "start": "316960",
    "end": "320400"
  },
  {
    "text": "control over the number of posts and",
    "start": "320400",
    "end": "323440"
  },
  {
    "text": "notes",
    "start": "323440",
    "end": "325199"
  },
  {
    "text": "there are also some other good tools the",
    "start": "325199",
    "end": "327600"
  },
  {
    "text": "most important reason that we",
    "start": "327600",
    "end": "330400"
  },
  {
    "text": "didn't chose them is that",
    "start": "330400",
    "end": "333120"
  },
  {
    "text": "is the simulation",
    "start": "333120",
    "end": "335680"
  },
  {
    "text": "cut loader is the only tour to simulate",
    "start": "335680",
    "end": "339199"
  },
  {
    "text": "a large",
    "start": "339199",
    "end": "341759"
  },
  {
    "text": "cluster",
    "start": "341759",
    "end": "344320"
  },
  {
    "start": "345000",
    "end": "345000"
  },
  {
    "text": "this is the instance we use",
    "start": "346240",
    "end": "348560"
  },
  {
    "text": "other instances are on aws",
    "start": "348560",
    "end": "351120"
  },
  {
    "text": "we use two different architecture",
    "start": "351120",
    "end": "354720"
  },
  {
    "text": "arm and x86",
    "start": "354720",
    "end": "358080"
  },
  {
    "text": "both arc has the same width view",
    "start": "358080",
    "end": "360960"
  },
  {
    "text": "same set of memory and similar cost",
    "start": "360960",
    "end": "367080"
  },
  {
    "start": "368000",
    "end": "368000"
  },
  {
    "text": "first of all we test the cpu and memory",
    "start": "368960",
    "end": "371680"
  },
  {
    "text": "by 6 bench 6 bench",
    "start": "371680",
    "end": "374479"
  },
  {
    "text": "on the left is a",
    "start": "374479",
    "end": "376000"
  },
  {
    "text": "cpu performance single core and",
    "start": "376000",
    "end": "378400"
  },
  {
    "text": "multicore",
    "start": "378400",
    "end": "379600"
  },
  {
    "text": "system to calculate the prime number",
    "start": "379600",
    "end": "382800"
  },
  {
    "text": "using",
    "start": "382800",
    "end": "383840"
  },
  {
    "text": "given threads the result is the event",
    "start": "383840",
    "end": "386880"
  },
  {
    "text": "per second",
    "start": "386880",
    "end": "388720"
  },
  {
    "text": "we test",
    "start": "388720",
    "end": "389919"
  },
  {
    "text": "two situation of one thread and all",
    "start": "389919",
    "end": "394639"
  },
  {
    "text": "64 threads",
    "start": "394639",
    "end": "397840"
  },
  {
    "text": "on the right is memory copyright the",
    "start": "397840",
    "end": "400240"
  },
  {
    "text": "memory",
    "start": "400240",
    "end": "401280"
  },
  {
    "text": "block size is",
    "start": "401280",
    "end": "402960"
  },
  {
    "text": "8 kilobits",
    "start": "402960",
    "end": "405440"
  },
  {
    "text": "and the total size is 64 gigabytes",
    "start": "405440",
    "end": "411360"
  },
  {
    "text": "as the graph shows",
    "start": "412080",
    "end": "414000"
  },
  {
    "text": "arm is better on cpu and x",
    "start": "414000",
    "end": "418560"
  },
  {
    "text": "86 is better in memory",
    "start": "418560",
    "end": "423639"
  },
  {
    "start": "423000",
    "end": "423000"
  },
  {
    "text": "here is the engine's throughput we test",
    "start": "424479",
    "end": "426800"
  },
  {
    "text": "for situations armed with kubernetes arm",
    "start": "426800",
    "end": "429919"
  },
  {
    "text": "without kubernetes",
    "start": "429919",
    "end": "432199"
  },
  {
    "text": "x86 with kubernetes and x86 without",
    "start": "432199",
    "end": "436080"
  },
  {
    "text": "kubernetes",
    "start": "436080",
    "end": "438720"
  },
  {
    "text": "corresponding with four situation the",
    "start": "438720",
    "end": "441039"
  },
  {
    "text": "four lines",
    "start": "441039",
    "end": "442400"
  },
  {
    "text": "are on the right",
    "start": "442400",
    "end": "444479"
  },
  {
    "text": "we also test different pressures by",
    "start": "444479",
    "end": "447039"
  },
  {
    "text": "citing the",
    "start": "447039",
    "end": "448639"
  },
  {
    "text": "client stress",
    "start": "448639",
    "end": "450080"
  },
  {
    "text": "from one to five hundred and health",
    "start": "450080",
    "end": "454560"
  },
  {
    "text": "as the very beginning fall line",
    "start": "454560",
    "end": "457199"
  },
  {
    "text": "shows same trend if",
    "start": "457199",
    "end": "459199"
  },
  {
    "text": "before reaching the top",
    "start": "459199",
    "end": "461199"
  },
  {
    "text": "each instance are not 4 speed",
    "start": "461199",
    "end": "465840"
  },
  {
    "text": "when the threads go",
    "start": "466000",
    "end": "467919"
  },
  {
    "text": "to",
    "start": "467919",
    "end": "468800"
  },
  {
    "text": "a certain number",
    "start": "468800",
    "end": "471199"
  },
  {
    "text": "the slope doesn't increase at all",
    "start": "471199",
    "end": "474400"
  },
  {
    "text": "which means the incidents are on",
    "start": "474400",
    "end": "476879"
  },
  {
    "text": "phosphate",
    "start": "476879",
    "end": "478800"
  },
  {
    "text": "then the line is falling",
    "start": "478800",
    "end": "482159"
  },
  {
    "text": "which means",
    "start": "482319",
    "end": "483680"
  },
  {
    "text": "that",
    "start": "483680",
    "end": "485520"
  },
  {
    "text": "instance",
    "start": "485520",
    "end": "486800"
  },
  {
    "text": "spend too much cpu time to do price to",
    "start": "486800",
    "end": "490080"
  },
  {
    "text": "two process switch or",
    "start": "490080",
    "end": "492720"
  },
  {
    "text": "interrupt or other traffic scene",
    "start": "492720",
    "end": "497039"
  },
  {
    "text": "from the graph it's easy to see that",
    "start": "497360",
    "end": "500800"
  },
  {
    "text": "first kubernetes will decrease",
    "start": "500800",
    "end": "503599"
  },
  {
    "text": "throughput",
    "start": "503599",
    "end": "504840"
  },
  {
    "text": "second the arms show",
    "start": "504840",
    "end": "508000"
  },
  {
    "text": "higher performance with a faster cpu",
    "start": "508000",
    "end": "512000"
  },
  {
    "text": "loss in high concurrency",
    "start": "512000",
    "end": "514880"
  },
  {
    "text": "scenarios",
    "start": "514880",
    "end": "516240"
  },
  {
    "text": "the x86 incident perform",
    "start": "516240",
    "end": "519599"
  },
  {
    "text": "this creates very fast",
    "start": "519599",
    "end": "523120"
  },
  {
    "start": "524000",
    "end": "524000"
  },
  {
    "text": "this graph is about",
    "start": "525920",
    "end": "528000"
  },
  {
    "text": "50",
    "start": "528000",
    "end": "529360"
  },
  {
    "text": "percent latency",
    "start": "529360",
    "end": "531120"
  },
  {
    "text": "as the pressure goes up the 50 percent",
    "start": "531120",
    "end": "534480"
  },
  {
    "text": "latency of engines goes up too",
    "start": "534480",
    "end": "538640"
  },
  {
    "text": "it's not very hard to understand",
    "start": "538640",
    "end": "541279"
  },
  {
    "text": "more requests arrive at the same time",
    "start": "541279",
    "end": "543839"
  },
  {
    "text": "and some of them should wait",
    "start": "543839",
    "end": "546720"
  },
  {
    "text": "until the other one accomplished",
    "start": "546720",
    "end": "550720"
  },
  {
    "text": "from the graph we can see that sequence",
    "start": "550959",
    "end": "553680"
  },
  {
    "text": "first kubernetes will lead extra",
    "start": "553680",
    "end": "557120"
  },
  {
    "text": "latency",
    "start": "557120",
    "end": "559200"
  },
  {
    "text": "and arm performance",
    "start": "559200",
    "end": "561600"
  },
  {
    "text": "better on this",
    "start": "561600",
    "end": "564560"
  },
  {
    "text": "and originally are under 4",
    "start": "565600",
    "end": "570240"
  },
  {
    "text": "milliseconds",
    "start": "570240",
    "end": "571920"
  },
  {
    "text": "is tolerable",
    "start": "571920",
    "end": "574800"
  },
  {
    "text": "this graph is about 99 latency",
    "start": "574959",
    "end": "579440"
  },
  {
    "text": "and it's similar with the",
    "start": "580240",
    "end": "583120"
  },
  {
    "text": "50",
    "start": "583120",
    "end": "584320"
  },
  {
    "text": "percent latency",
    "start": "584320",
    "end": "587279"
  },
  {
    "text": "acts 86 perform better on this and",
    "start": "587760",
    "end": "592240"
  },
  {
    "text": "all latency are under",
    "start": "592240",
    "end": "595839"
  },
  {
    "text": "40 milliseconds",
    "start": "595839",
    "end": "599279"
  },
  {
    "text": "the last one is about radius testing",
    "start": "600399",
    "end": "603600"
  },
  {
    "text": "redis benchmark tests some function of",
    "start": "603600",
    "end": "606160"
  },
  {
    "text": "radix such as",
    "start": "606160",
    "end": "608079"
  },
  {
    "text": "get",
    "start": "608079",
    "end": "609200"
  },
  {
    "text": "a sketch",
    "start": "609200",
    "end": "611040"
  },
  {
    "text": "apparently kubernetes will",
    "start": "611040",
    "end": "614399"
  },
  {
    "text": "also reduce the performance of radius",
    "start": "614399",
    "end": "617760"
  },
  {
    "text": "unarmed is",
    "start": "617760",
    "end": "619200"
  },
  {
    "text": "seven percent and on x",
    "start": "619200",
    "end": "623279"
  },
  {
    "text": "86",
    "start": "623839",
    "end": "626079"
  },
  {
    "text": "is 17",
    "start": "626079",
    "end": "628800"
  },
  {
    "start": "628000",
    "end": "628000"
  },
  {
    "text": "we made some summary here first arm",
    "start": "629839",
    "end": "633279"
  },
  {
    "text": "instance show better results with higher",
    "start": "633279",
    "end": "636160"
  },
  {
    "text": "load particularly with high concurrency",
    "start": "636160",
    "end": "639040"
  },
  {
    "text": "scenarios",
    "start": "639040",
    "end": "640880"
  },
  {
    "text": "second",
    "start": "640880",
    "end": "641920"
  },
  {
    "text": "the extra latency caused by combination",
    "start": "641920",
    "end": "645360"
  },
  {
    "text": "is acceptable on both arm and the",
    "start": "645360",
    "end": "650079"
  },
  {
    "text": "x86",
    "start": "650079",
    "end": "652880"
  },
  {
    "text": "third the engine uh x86",
    "start": "653519",
    "end": "657360"
  },
  {
    "text": "with kubernetes only reach half to the",
    "start": "657360",
    "end": "660240"
  },
  {
    "text": "peak performance",
    "start": "660240",
    "end": "661760"
  },
  {
    "text": "in",
    "start": "661760",
    "end": "662480"
  },
  {
    "text": "high concurrency",
    "start": "662480",
    "end": "665600"
  },
  {
    "text": "next part will be dave's",
    "start": "665839",
    "end": "669200"
  },
  {
    "start": "671000",
    "end": "671000"
  },
  {
    "text": "hello everybody this is dave chen from",
    "start": "672480",
    "end": "674640"
  },
  {
    "text": "i'm an image today i'm going to",
    "start": "674640",
    "end": "676480"
  },
  {
    "text": "introduce a couple of tools",
    "start": "676480",
    "end": "679120"
  },
  {
    "text": "used for scalability testing in",
    "start": "679120",
    "end": "682800"
  },
  {
    "text": "kubernetes",
    "start": "682800",
    "end": "684320"
  },
  {
    "text": "so",
    "start": "684320",
    "end": "685360"
  },
  {
    "text": "the first one is the class loader and",
    "start": "685360",
    "end": "687360"
  },
  {
    "text": "the other one is kobe mark",
    "start": "687360",
    "end": "689440"
  },
  {
    "text": "what's the class loader class loader is",
    "start": "689440",
    "end": "692000"
  },
  {
    "text": "the official kubernetes scalability and",
    "start": "692000",
    "end": "694000"
  },
  {
    "text": "performance testing framework",
    "start": "694000",
    "end": "696160"
  },
  {
    "text": "we can use the framework to",
    "start": "696160",
    "end": "698160"
  },
  {
    "text": "profile cpu and memory we have the",
    "start": "698160",
    "end": "700800"
  },
  {
    "text": "sample of the scheduling check the",
    "start": "700800",
    "end": "702800"
  },
  {
    "text": "startup analysis of the port etcetera",
    "start": "702800",
    "end": "705519"
  },
  {
    "text": "the tests are defined in a yaml file",
    "start": "705519",
    "end": "707760"
  },
  {
    "text": "using",
    "start": "707760",
    "end": "708800"
  },
  {
    "text": "declarative statements for example how",
    "start": "708800",
    "end": "711760"
  },
  {
    "text": "many",
    "start": "711760",
    "end": "712880"
  },
  {
    "text": "nodes that part will be scheduled",
    "start": "712880",
    "end": "716160"
  },
  {
    "text": "how many",
    "start": "716160",
    "end": "717360"
  },
  {
    "text": "status sets will be created in the",
    "start": "717360",
    "end": "718959"
  },
  {
    "text": "cluster",
    "start": "718959",
    "end": "720000"
  },
  {
    "text": "currently class loader",
    "start": "720000",
    "end": "721920"
  },
  {
    "text": "spots copy mac client",
    "start": "721920",
    "end": "724480"
  },
  {
    "text": "local and other providers",
    "start": "724480",
    "end": "728480"
  },
  {
    "text": "and the copy map is a tool",
    "start": "729440",
    "end": "733120"
  },
  {
    "text": "which allows user to run performance",
    "start": "733120",
    "end": "735200"
  },
  {
    "text": "testing on the fake nodes",
    "start": "735200",
    "end": "738480"
  },
  {
    "text": "it simulates a node by creating a part",
    "start": "738480",
    "end": "742480"
  },
  {
    "text": "well",
    "start": "742480",
    "end": "743279"
  },
  {
    "text": "coordinate and copy proxy services are",
    "start": "743279",
    "end": "746000"
  },
  {
    "text": "run inside of the port",
    "start": "746000",
    "end": "748560"
  },
  {
    "text": "in this way you can simulate a cluster",
    "start": "748560",
    "end": "751040"
  },
  {
    "text": "with thousands of nodes by creating",
    "start": "751040",
    "end": "753519"
  },
  {
    "text": "thousand ports instead",
    "start": "753519",
    "end": "755680"
  },
  {
    "text": "the primary",
    "start": "755680",
    "end": "757040"
  },
  {
    "text": "use case of the copy mark is scalability",
    "start": "757040",
    "end": "759920"
  },
  {
    "text": "testing",
    "start": "759920",
    "end": "760880"
  },
  {
    "text": "as the simulated cluster can be much",
    "start": "760880",
    "end": "763040"
  },
  {
    "text": "bigger than the real one the purpose is",
    "start": "763040",
    "end": "765440"
  },
  {
    "text": "to",
    "start": "765440",
    "end": "766560"
  },
  {
    "text": "expose problems of the controller plane",
    "start": "766560",
    "end": "769600"
  },
  {
    "text": "component",
    "start": "769600",
    "end": "770800"
  },
  {
    "text": "for api server",
    "start": "770800",
    "end": "772880"
  },
  {
    "text": "on",
    "start": "772880",
    "end": "774000"
  },
  {
    "text": "big cluster",
    "start": "774000",
    "end": "776320"
  },
  {
    "text": "in our experiment",
    "start": "776320",
    "end": "778320"
  },
  {
    "text": "class loader combined with the copy mark",
    "start": "778320",
    "end": "781279"
  },
  {
    "text": "are used to create",
    "start": "781279",
    "end": "783760"
  },
  {
    "text": "a big combination cluster based on",
    "start": "783760",
    "end": "786240"
  },
  {
    "text": "multiple aws graphene 2 instance",
    "start": "786240",
    "end": "790240"
  },
  {
    "text": "and the cpu memory profiling is done in",
    "start": "790240",
    "end": "792480"
  },
  {
    "text": "this cluster",
    "start": "792480",
    "end": "795199"
  },
  {
    "text": "here's just change on the class loaders",
    "start": "796079",
    "end": "798639"
  },
  {
    "text": "configuration",
    "start": "798639",
    "end": "801639"
  },
  {
    "text": "kubernetes has documented the ports and",
    "start": "801760",
    "end": "804320"
  },
  {
    "text": "the protocols used by the kubernetes",
    "start": "804320",
    "end": "806560"
  },
  {
    "text": "component",
    "start": "806560",
    "end": "807680"
  },
  {
    "text": "you should be aware that class node will",
    "start": "807680",
    "end": "811040"
  },
  {
    "text": "access",
    "start": "811040",
    "end": "812839"
  },
  {
    "text": "to those parts to collect the matches",
    "start": "812839",
    "end": "817120"
  },
  {
    "text": "matrix or profanity data",
    "start": "817120",
    "end": "819600"
  },
  {
    "text": "so you need to open this part",
    "start": "819600",
    "end": "820959"
  },
  {
    "text": "accordingly",
    "start": "820959",
    "end": "823120"
  },
  {
    "text": "you might need to manually enable the",
    "start": "823120",
    "end": "824560"
  },
  {
    "text": "profiling for the components like",
    "start": "824560",
    "end": "827839"
  },
  {
    "text": "or control manager",
    "start": "827839",
    "end": "829519"
  },
  {
    "text": "as it is possible that provider is not",
    "start": "829519",
    "end": "831760"
  },
  {
    "text": "enabled by default",
    "start": "831760",
    "end": "835040"
  },
  {
    "text": "it is at this specific setting like the",
    "start": "835040",
    "end": "837120"
  },
  {
    "text": "listening port or the third location",
    "start": "837120",
    "end": "839120"
  },
  {
    "text": "should also be specified to make sure",
    "start": "839120",
    "end": "841920"
  },
  {
    "text": "the matrix data could be",
    "start": "841920",
    "end": "844160"
  },
  {
    "text": "connected successfully",
    "start": "844160",
    "end": "847600"
  },
  {
    "text": "finally",
    "start": "848399",
    "end": "850000"
  },
  {
    "text": "class loader has a test to measure the",
    "start": "850000",
    "end": "852560"
  },
  {
    "text": "performance of",
    "start": "852560",
    "end": "853920"
  },
  {
    "text": "finding the persistent volume with a",
    "start": "853920",
    "end": "856000"
  },
  {
    "text": "part",
    "start": "856000",
    "end": "857040"
  },
  {
    "text": "but the test assumes your provider",
    "start": "857040",
    "end": "859839"
  },
  {
    "text": "supports the feature of the dynamic",
    "start": "859839",
    "end": "861440"
  },
  {
    "text": "provisioning",
    "start": "861440",
    "end": "863839"
  },
  {
    "text": "this is not always true so you might",
    "start": "863839",
    "end": "866480"
  },
  {
    "text": "need to either implement the feature by",
    "start": "866480",
    "end": "869199"
  },
  {
    "text": "yourself or disable the persistent",
    "start": "869199",
    "end": "871680"
  },
  {
    "text": "volume in the config",
    "start": "871680",
    "end": "873680"
  },
  {
    "text": "if you don't want to evaluate the",
    "start": "873680",
    "end": "876079"
  },
  {
    "text": "performance of the storage",
    "start": "876079",
    "end": "879440"
  },
  {
    "start": "880000",
    "end": "880000"
  },
  {
    "text": "so basically we will",
    "start": "881519",
    "end": "883519"
  },
  {
    "text": "talk about the three kinds of",
    "start": "883519",
    "end": "885920"
  },
  {
    "text": "test",
    "start": "885920",
    "end": "887199"
  },
  {
    "text": "throughput destiny and load",
    "start": "887199",
    "end": "890000"
  },
  {
    "text": "we will check the matrix",
    "start": "890000",
    "end": "892000"
  },
  {
    "text": "when the fifteen percent of the parts or",
    "start": "892000",
    "end": "894000"
  },
  {
    "text": "ninety percent of the ports are",
    "start": "894000",
    "end": "895440"
  },
  {
    "text": "scheduled respectively",
    "start": "895440",
    "end": "897600"
  },
  {
    "text": "first",
    "start": "897600",
    "end": "898560"
  },
  {
    "text": "firstly let's go through the indicator",
    "start": "898560",
    "end": "900560"
  },
  {
    "text": "we use here",
    "start": "900560",
    "end": "901920"
  },
  {
    "text": "schedule to watch",
    "start": "901920",
    "end": "903680"
  },
  {
    "text": "scheduled watch is the time taken from",
    "start": "903680",
    "end": "906079"
  },
  {
    "text": "the party schedule to the event",
    "start": "906079",
    "end": "910160"
  },
  {
    "text": "is received which show the product is",
    "start": "910160",
    "end": "912639"
  },
  {
    "text": "running",
    "start": "912639",
    "end": "915040"
  },
  {
    "text": "post startup",
    "start": "915839",
    "end": "917519"
  },
  {
    "text": "post startup is the time from the police",
    "start": "917519",
    "end": "919760"
  },
  {
    "text": "created",
    "start": "919760",
    "end": "920880"
  },
  {
    "text": "to",
    "start": "920880",
    "end": "922720"
  },
  {
    "text": "uh the party is running",
    "start": "922720",
    "end": "925199"
  },
  {
    "text": "run to watch",
    "start": "925199",
    "end": "927279"
  },
  {
    "text": "is trying to watch is the time from the",
    "start": "927279",
    "end": "929920"
  },
  {
    "text": "first start of the container to",
    "start": "929920",
    "end": "933040"
  },
  {
    "text": "the event that does show the part is",
    "start": "933040",
    "end": "935759"
  },
  {
    "text": "running",
    "start": "935759",
    "end": "937040"
  },
  {
    "text": "there are other",
    "start": "937040",
    "end": "939040"
  },
  {
    "text": "indicators",
    "start": "939040",
    "end": "940959"
  },
  {
    "text": "such as the credit schedule and",
    "start": "940959",
    "end": "942720"
  },
  {
    "text": "scheduled to run",
    "start": "942720",
    "end": "945519"
  },
  {
    "text": "let's check the",
    "start": "945680",
    "end": "947839"
  },
  {
    "text": "surprise first",
    "start": "947839",
    "end": "950480"
  },
  {
    "text": "uh",
    "start": "950480",
    "end": "952079"
  },
  {
    "text": "this moment",
    "start": "952079",
    "end": "954000"
  },
  {
    "text": "gets a scheduling sample for example we",
    "start": "954000",
    "end": "956320"
  },
  {
    "text": "can try to schedule",
    "start": "956320",
    "end": "958279"
  },
  {
    "text": "2000.21 sound nodes and then connect the",
    "start": "958279",
    "end": "961440"
  },
  {
    "text": "data to",
    "start": "961440",
    "end": "963440"
  },
  {
    "text": "analyze the startup latency for the",
    "start": "963440",
    "end": "965920"
  },
  {
    "text": "spots",
    "start": "965920",
    "end": "968920"
  },
  {
    "text": "the data keys show",
    "start": "969279",
    "end": "971040"
  },
  {
    "text": "there are no magic difference between",
    "start": "971040",
    "end": "973120"
  },
  {
    "text": "two platforms",
    "start": "973120",
    "end": "975199"
  },
  {
    "text": "the difference on the schedule watch is",
    "start": "975199",
    "end": "977120"
  },
  {
    "text": "relatively big but if we run the test",
    "start": "977120",
    "end": "980079"
  },
  {
    "text": "multiple times multiple times we will",
    "start": "980079",
    "end": "983199"
  },
  {
    "text": "see this is still with the margin of",
    "start": "983199",
    "end": "985839"
  },
  {
    "text": "errors",
    "start": "985839",
    "end": "988320"
  },
  {
    "text": "testing test",
    "start": "991120",
    "end": "992800"
  },
  {
    "text": "we have trying to",
    "start": "992800",
    "end": "994399"
  },
  {
    "text": "schedule",
    "start": "994399",
    "end": "995800"
  },
  {
    "text": "13.21 sound effect nodes",
    "start": "995800",
    "end": "999759"
  },
  {
    "text": "which means our region is 30",
    "start": "1000399",
    "end": "1004720"
  },
  {
    "text": "parts will be scheduled to each each",
    "start": "1004720",
    "end": "1007120"
  },
  {
    "text": "node",
    "start": "1007120",
    "end": "1007920"
  },
  {
    "text": "the results that decreased is only",
    "start": "1007920",
    "end": "1010480"
  },
  {
    "text": "department",
    "start": "1010480",
    "end": "1012160"
  },
  {
    "text": "and then do the profiling against the",
    "start": "1012160",
    "end": "1014639"
  },
  {
    "text": "cpu memory",
    "start": "1014639",
    "end": "1016240"
  },
  {
    "text": "for each of the kubernetes components",
    "start": "1016240",
    "end": "1019040"
  },
  {
    "text": "scheduling metrics",
    "start": "1019040",
    "end": "1020959"
  },
  {
    "text": "can actually",
    "start": "1020959",
    "end": "1022800"
  },
  {
    "text": "collect the metrics for different",
    "start": "1022800",
    "end": "1026640"
  },
  {
    "text": "schedule plugin",
    "start": "1026640",
    "end": "1029600"
  },
  {
    "text": "we can see that the bind is possible",
    "start": "1029600",
    "end": "1033438"
  },
  {
    "text": "bottleneck on both platform it takes",
    "start": "1033439",
    "end": "1036839"
  },
  {
    "text": "clearly",
    "start": "1036839",
    "end": "1038558"
  },
  {
    "text": "one hour to finish the binding of the",
    "start": "1038559",
    "end": "1040880"
  },
  {
    "text": "spots",
    "start": "1040880",
    "end": "1042079"
  },
  {
    "text": "this is not accessible",
    "start": "1042079",
    "end": "1044319"
  },
  {
    "text": "this binding plugin will interact with",
    "start": "1044319",
    "end": "1046558"
  },
  {
    "text": "the api server to bind the port to a",
    "start": "1046559",
    "end": "1049039"
  },
  {
    "text": "specific node",
    "start": "1049039",
    "end": "1052080"
  },
  {
    "text": "this is because in our experiment we",
    "start": "1052080",
    "end": "1055360"
  },
  {
    "text": "only have one controller plane",
    "start": "1055360",
    "end": "1057679"
  },
  {
    "text": "controller plane node",
    "start": "1057679",
    "end": "1060480"
  },
  {
    "text": "so the possible solution here is that if",
    "start": "1060480",
    "end": "1062880"
  },
  {
    "text": "your cluster is too big",
    "start": "1062880",
    "end": "1065200"
  },
  {
    "text": "you need to consider the call standby",
    "start": "1065200",
    "end": "1068240"
  },
  {
    "text": "high availability mode to spread the",
    "start": "1068240",
    "end": "1070559"
  },
  {
    "text": "load of the api server to other control",
    "start": "1070559",
    "end": "1072960"
  },
  {
    "text": "plane nodes",
    "start": "1072960",
    "end": "1075600"
  },
  {
    "text": "no testing",
    "start": "1077840",
    "end": "1079679"
  },
  {
    "text": "in no testing we are trying to schedule",
    "start": "1079679",
    "end": "1082320"
  },
  {
    "text": "even more parts to each of the nodes",
    "start": "1082320",
    "end": "1084880"
  },
  {
    "text": "what's the difference here comparing",
    "start": "1084880",
    "end": "1086480"
  },
  {
    "text": "with the testing is no testing we're",
    "start": "1086480",
    "end": "1088160"
  },
  {
    "text": "trying to",
    "start": "1088160",
    "end": "1089440"
  },
  {
    "text": "deploy demonstrate",
    "start": "1089440",
    "end": "1091520"
  },
  {
    "text": "instead of says and other kinds of the",
    "start": "1091520",
    "end": "1093679"
  },
  {
    "text": "kubernetes resources to each node",
    "start": "1093679",
    "end": "1096160"
  },
  {
    "text": "instead of just the deployment",
    "start": "1096160",
    "end": "1098559"
  },
  {
    "text": "in other words",
    "start": "1098559",
    "end": "1100480"
  },
  {
    "text": "testing testing is a simple node testing",
    "start": "1100480",
    "end": "1104880"
  },
  {
    "text": "the data on the data scene is similar",
    "start": "1104880",
    "end": "1106799"
  },
  {
    "text": "with each other",
    "start": "1106799",
    "end": "1109120"
  },
  {
    "text": "again",
    "start": "1109120",
    "end": "1110080"
  },
  {
    "text": "there is no much difference between",
    "start": "1110080",
    "end": "1112000"
  },
  {
    "text": "different platforms",
    "start": "1112000",
    "end": "1113840"
  },
  {
    "text": "and the class node",
    "start": "1113840",
    "end": "1116320"
  },
  {
    "text": "contains other testing to measure the",
    "start": "1116320",
    "end": "1119200"
  },
  {
    "text": "performance of the functionality of the",
    "start": "1119200",
    "end": "1120960"
  },
  {
    "text": "network and storage",
    "start": "1120960",
    "end": "1122799"
  },
  {
    "text": "you can play around",
    "start": "1122799",
    "end": "1124320"
  },
  {
    "text": "with the class loader to evaluate the",
    "start": "1124320",
    "end": "1127679"
  },
  {
    "text": "performance of the network and storage",
    "start": "1127679",
    "end": "1130000"
  },
  {
    "text": "as well",
    "start": "1130000",
    "end": "1132400"
  },
  {
    "start": "1132000",
    "end": "1132000"
  },
  {
    "text": "providing results",
    "start": "1133200",
    "end": "1135679"
  },
  {
    "text": "the class loader can collect the",
    "start": "1135679",
    "end": "1137679"
  },
  {
    "text": "providing profiling data for the",
    "start": "1137679",
    "end": "1140640"
  },
  {
    "text": "scheduler",
    "start": "1140640",
    "end": "1143280"
  },
  {
    "text": "control manager api server",
    "start": "1144640",
    "end": "1147440"
  },
  {
    "text": "etc etc",
    "start": "1147440",
    "end": "1151039"
  },
  {
    "text": "we can export a call graph or a flame",
    "start": "1151039",
    "end": "1153679"
  },
  {
    "text": "graph",
    "start": "1153679",
    "end": "1154720"
  },
  {
    "text": "from this provided data",
    "start": "1154720",
    "end": "1156960"
  },
  {
    "text": "it's clear to see",
    "start": "1156960",
    "end": "1158720"
  },
  {
    "text": "the resource consumption and the method",
    "start": "1158720",
    "end": "1160880"
  },
  {
    "text": "method stack in this this graph",
    "start": "1160880",
    "end": "1164880"
  },
  {
    "text": "in this example we can see",
    "start": "1164880",
    "end": "1167360"
  },
  {
    "text": "that the prioritized method itself costs",
    "start": "1167360",
    "end": "1170640"
  },
  {
    "text": "20 milliseconds",
    "start": "1170640",
    "end": "1172480"
  },
  {
    "text": "and accumulated",
    "start": "1172480",
    "end": "1174799"
  },
  {
    "text": "cost of the method is 110",
    "start": "1174799",
    "end": "1178640"
  },
  {
    "text": "milliseconds",
    "start": "1178640",
    "end": "1180320"
  },
  {
    "text": "is here",
    "start": "1180320",
    "end": "1181679"
  },
  {
    "text": "and",
    "start": "1181679",
    "end": "1182960"
  },
  {
    "text": "besides",
    "start": "1182960",
    "end": "1185760"
  },
  {
    "text": "we can",
    "start": "1186960",
    "end": "1188960"
  },
  {
    "text": "also generate a flame graph",
    "start": "1188960",
    "end": "1193679"
  },
  {
    "text": "it's very easy to find how many cpu or",
    "start": "1193679",
    "end": "1196720"
  },
  {
    "text": "memory resources is occupied by the",
    "start": "1196720",
    "end": "1200000"
  },
  {
    "text": "method",
    "start": "1200000",
    "end": "1201200"
  },
  {
    "text": "in the flame graph",
    "start": "1201200",
    "end": "1205480"
  },
  {
    "text": "uh",
    "start": "1211600",
    "end": "1212400"
  },
  {
    "text": "here is one example on how to find the",
    "start": "1212400",
    "end": "1215039"
  },
  {
    "text": "potential issues based on the testing",
    "start": "1215039",
    "end": "1217440"
  },
  {
    "text": "test",
    "start": "1217440",
    "end": "1218720"
  },
  {
    "text": "we can list the top entries with the",
    "start": "1218720",
    "end": "1221039"
  },
  {
    "text": "command line then then we found that the",
    "start": "1221039",
    "end": "1225120"
  },
  {
    "text": "logic of the preemption was called",
    "start": "1225120",
    "end": "1229280"
  },
  {
    "text": "the preemption is uh",
    "start": "1229280",
    "end": "1232000"
  },
  {
    "text": "is not the normal process for post",
    "start": "1232000",
    "end": "1234480"
  },
  {
    "text": "scheduling",
    "start": "1234480",
    "end": "1236559"
  },
  {
    "text": "it only happens when there are no",
    "start": "1236559",
    "end": "1238559"
  },
  {
    "text": "available loads in the cluster",
    "start": "1238559",
    "end": "1242400"
  },
  {
    "text": "it might be resource exhaustion",
    "start": "1242400",
    "end": "1245360"
  },
  {
    "text": "or the topology cannot be satisfied for",
    "start": "1245360",
    "end": "1248159"
  },
  {
    "text": "the part",
    "start": "1248159",
    "end": "1249679"
  },
  {
    "text": "but in this test",
    "start": "1249679",
    "end": "1251440"
  },
  {
    "text": "the test framework will create",
    "start": "1251440",
    "end": "1253919"
  },
  {
    "text": "1000 nodes",
    "start": "1253919",
    "end": "1256960"
  },
  {
    "text": "we have",
    "start": "1256960",
    "end": "1258080"
  },
  {
    "text": "we only have 30 000 parts going to be",
    "start": "1258080",
    "end": "1261280"
  },
  {
    "text": "scheduled",
    "start": "1261280",
    "end": "1263600"
  },
  {
    "text": "and the",
    "start": "1263600",
    "end": "1265520"
  },
  {
    "text": "copy scheduler has a plugin which is",
    "start": "1265520",
    "end": "1268480"
  },
  {
    "text": "named as topology spread which we are",
    "start": "1268480",
    "end": "1270799"
  },
  {
    "text": "trying to spread the port evenly in the",
    "start": "1270799",
    "end": "1273280"
  },
  {
    "text": "cluster",
    "start": "1273280",
    "end": "1275200"
  },
  {
    "text": "and the onenote is able to draw with 110",
    "start": "1275200",
    "end": "1278960"
  },
  {
    "text": "parts by default so",
    "start": "1278960",
    "end": "1281520"
  },
  {
    "text": "the logic of the preemption in",
    "start": "1281520",
    "end": "1284159"
  },
  {
    "text": "scheduler should not happen in the test",
    "start": "1284159",
    "end": "1286720"
  },
  {
    "text": "at all",
    "start": "1286720",
    "end": "1289120"
  },
  {
    "text": "based on this assumption",
    "start": "1289280",
    "end": "1292400"
  },
  {
    "text": "something change in this code base might",
    "start": "1292400",
    "end": "1294880"
  },
  {
    "text": "bring down the",
    "start": "1294880",
    "end": "1296400"
  },
  {
    "text": "influence of the",
    "start": "1296400",
    "end": "1298000"
  },
  {
    "text": "topology and spread plugin",
    "start": "1298000",
    "end": "1300159"
  },
  {
    "text": "and eventually we found this is a",
    "start": "1300159",
    "end": "1302159"
  },
  {
    "text": "regression issue",
    "start": "1302159",
    "end": "1303760"
  },
  {
    "text": "the reason is that in this specific case",
    "start": "1303760",
    "end": "1306400"
  },
  {
    "text": "if there are a lot of ports with no",
    "start": "1306400",
    "end": "1308480"
  },
  {
    "text": "requests of the cpu or memory",
    "start": "1308480",
    "end": "1311360"
  },
  {
    "text": "the change in source makes the specific",
    "start": "1311360",
    "end": "1313919"
  },
  {
    "text": "plugin which is named as a banner's",
    "start": "1313919",
    "end": "1316320"
  },
  {
    "text": "resource allocation has higher impact on",
    "start": "1316320",
    "end": "1319360"
  },
  {
    "text": "the finance score",
    "start": "1319360",
    "end": "1320960"
  },
  {
    "text": "so the number which has lots of the",
    "start": "1320960",
    "end": "1322799"
  },
  {
    "text": "parts with no request of the memory of",
    "start": "1322799",
    "end": "1325360"
  },
  {
    "text": "cpu which is result to be a higher score",
    "start": "1325360",
    "end": "1329840"
  },
  {
    "text": "and lead to the uneven impulse",
    "start": "1329840",
    "end": "1332559"
  },
  {
    "text": "distribution",
    "start": "1332559",
    "end": "1335279"
  },
  {
    "text": "uh",
    "start": "1343440",
    "end": "1344159"
  },
  {
    "text": "object letter",
    "start": "1344159",
    "end": "1346559"
  },
  {
    "text": "goes through the dead connect from the",
    "start": "1346559",
    "end": "1348640"
  },
  {
    "text": "node testing we found that the memory",
    "start": "1348640",
    "end": "1350799"
  },
  {
    "text": "foam",
    "start": "1350799",
    "end": "1351840"
  },
  {
    "text": "memory footprint",
    "start": "1351840",
    "end": "1354080"
  },
  {
    "text": "of the cabbage connector is a little",
    "start": "1354080",
    "end": "1356000"
  },
  {
    "text": "bigger than our expectation",
    "start": "1356000",
    "end": "1359200"
  },
  {
    "text": "the peak value is around",
    "start": "1359200",
    "end": "1361360"
  },
  {
    "text": "60 megabytes",
    "start": "1361360",
    "end": "1364080"
  },
  {
    "text": "we can use the source by the command",
    "start": "1364080",
    "end": "1365919"
  },
  {
    "text": "line and check where the memory is",
    "start": "1365919",
    "end": "1367600"
  },
  {
    "text": "consumed and",
    "start": "1367600",
    "end": "1369200"
  },
  {
    "text": "based on the data cleared by the",
    "start": "1369200",
    "end": "1371520"
  },
  {
    "text": "go now p prof we find that 18 of the",
    "start": "1371520",
    "end": "1374640"
  },
  {
    "text": "memory is taken on the updating of the",
    "start": "1374640",
    "end": "1377200"
  },
  {
    "text": "map divided is a graph builder",
    "start": "1377200",
    "end": "1380960"
  },
  {
    "text": "this is understandable if we dive into",
    "start": "1380960",
    "end": "1383679"
  },
  {
    "text": "the source code and change that the test",
    "start": "1383679",
    "end": "1385840"
  },
  {
    "text": "we're trying to create different kinds",
    "start": "1385840",
    "end": "1388000"
  },
  {
    "text": "of resources",
    "start": "1388000",
    "end": "1389440"
  },
  {
    "text": "and then trying to scale up an app",
    "start": "1389440",
    "end": "1391200"
  },
  {
    "text": "update",
    "start": "1391200",
    "end": "1392240"
  },
  {
    "text": "for example the tester will create a",
    "start": "1392240",
    "end": "1395280"
  },
  {
    "text": "credit deployment which is replicas",
    "start": "1395280",
    "end": "1397840"
  },
  {
    "text": "defined as",
    "start": "1397840",
    "end": "1400559"
  },
  {
    "text": "250 this means 215 parts will be correct",
    "start": "1400840",
    "end": "1405760"
  },
  {
    "text": "for this deployment",
    "start": "1405760",
    "end": "1408799"
  },
  {
    "text": "and when the deployment is updated or",
    "start": "1408960",
    "end": "1411280"
  },
  {
    "text": "deleted",
    "start": "1411280",
    "end": "1412559"
  },
  {
    "text": "all the supports managed by the",
    "start": "1412559",
    "end": "1414000"
  },
  {
    "text": "deployment will be either deleted or",
    "start": "1414000",
    "end": "1416960"
  },
  {
    "text": "updated as well",
    "start": "1416960",
    "end": "1418720"
  },
  {
    "text": "both will trigger the process of capture",
    "start": "1418720",
    "end": "1420799"
  },
  {
    "text": "collection",
    "start": "1420799",
    "end": "1422159"
  },
  {
    "text": "and update the map of the",
    "start": "1422159",
    "end": "1425279"
  },
  {
    "text": "graph builder",
    "start": "1425279",
    "end": "1426799"
  },
  {
    "text": "accordingly",
    "start": "1426799",
    "end": "1429799"
  },
  {
    "text": "and last",
    "start": "1431039",
    "end": "1432640"
  },
  {
    "text": "let's take a quick look on the go now",
    "start": "1432640",
    "end": "1435440"
  },
  {
    "text": "runtime",
    "start": "1435440",
    "end": "1436799"
  },
  {
    "text": "this line shows that going around time",
    "start": "1436799",
    "end": "1438720"
  },
  {
    "text": "the performance is a little bigger a",
    "start": "1438720",
    "end": "1440960"
  },
  {
    "text": "little better",
    "start": "1440960",
    "end": "1443200"
  },
  {
    "text": "on x86",
    "start": "1443200",
    "end": "1446080"
  },
  {
    "text": "64 if we trust the data connected by the",
    "start": "1446080",
    "end": "1448799"
  },
  {
    "text": "go non-people",
    "start": "1448799",
    "end": "1451600"
  },
  {
    "start": "1451000",
    "end": "1451000"
  },
  {
    "text": "let's wrap up this partition",
    "start": "1452799",
    "end": "1456000"
  },
  {
    "text": "so in this presentation we have compared",
    "start": "1456000",
    "end": "1458320"
  },
  {
    "text": "the cognitive performance between",
    "start": "1458320",
    "end": "1461440"
  },
  {
    "text": "different architectures",
    "start": "1461440",
    "end": "1464400"
  },
  {
    "text": "and we have",
    "start": "1464400",
    "end": "1465760"
  },
  {
    "text": "observed that going around time",
    "start": "1465760",
    "end": "1468960"
  },
  {
    "text": "might show something different different",
    "start": "1468960",
    "end": "1472480"
  },
  {
    "text": "but the impact is not as big as what we",
    "start": "1472480",
    "end": "1475120"
  },
  {
    "text": "have seen from those scheduling matrix",
    "start": "1475120",
    "end": "1479520"
  },
  {
    "text": "the software online companies kubernetes",
    "start": "1479600",
    "end": "1482159"
  },
  {
    "text": "doesn't seem to how many problems",
    "start": "1482159",
    "end": "1483919"
  },
  {
    "text": "difference on two different",
    "start": "1483919",
    "end": "1485840"
  },
  {
    "text": "architectures",
    "start": "1485840",
    "end": "1487600"
  },
  {
    "text": "if we don't have enough physical nodes",
    "start": "1487600",
    "end": "1490720"
  },
  {
    "text": "we can use the class loader and the",
    "start": "1490720",
    "end": "1492799"
  },
  {
    "text": "cover mark to simulate a notch cluster",
    "start": "1492799",
    "end": "1495840"
  },
  {
    "text": "with 500 or even 1000 nodes for",
    "start": "1495840",
    "end": "1499200"
  },
  {
    "text": "performance providing",
    "start": "1499200",
    "end": "1501919"
  },
  {
    "text": "the next one is that if you are planning",
    "start": "1501919",
    "end": "1504559"
  },
  {
    "text": "to use the crossover please take care of",
    "start": "1504559",
    "end": "1506880"
  },
  {
    "text": "the configuration carefully",
    "start": "1506880",
    "end": "1508960"
  },
  {
    "text": "the draw environment is complex and the",
    "start": "1508960",
    "end": "1511360"
  },
  {
    "text": "default configuration might be locked",
    "start": "1511360",
    "end": "1513679"
  },
  {
    "text": "with the provided knight gce for example",
    "start": "1513679",
    "end": "1517039"
  },
  {
    "text": "we can connect with",
    "start": "1517039",
    "end": "1518480"
  },
  {
    "text": "various metrics of providing data based",
    "start": "1518480",
    "end": "1520960"
  },
  {
    "text": "on those tools",
    "start": "1520960",
    "end": "1522880"
  },
  {
    "text": "analysis on this data will help to",
    "start": "1522880",
    "end": "1524960"
  },
  {
    "text": "reveal",
    "start": "1524960",
    "end": "1526320"
  },
  {
    "text": "the potential issues which can be found",
    "start": "1526320",
    "end": "1528880"
  },
  {
    "text": "in large class only",
    "start": "1528880",
    "end": "1531039"
  },
  {
    "text": "and finally let's improve the kubernetes",
    "start": "1531039",
    "end": "1533279"
  },
  {
    "text": "community together upstream your",
    "start": "1533279",
    "end": "1535039"
  },
  {
    "text": "enhancement prs",
    "start": "1535039",
    "end": "1538240"
  },
  {
    "text": "okay thank you um",
    "start": "1540159",
    "end": "1542960"
  },
  {
    "text": "this is this is our",
    "start": "1542960",
    "end": "1545360"
  },
  {
    "text": "uh email address so if you have anything",
    "start": "1545360",
    "end": "1548159"
  },
  {
    "text": "you want to discuss please email us",
    "start": "1548159",
    "end": "1551600"
  },
  {
    "text": "and thank you for your time",
    "start": "1551600",
    "end": "1554880"
  },
  {
    "text": "bye bye",
    "start": "1554880",
    "end": "1557840"
  }
]