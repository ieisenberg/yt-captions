[
  {
    "start": "0",
    "end": "9000"
  },
  {
    "text": "all right welcome everybody to our talk on kubernetes and crossplane and building a platform api on top of",
    "start": "80",
    "end": "6799"
  },
  {
    "text": "kubernetes so there are still some free seats available here in the front",
    "start": "6799",
    "end": "13120"
  },
  {
    "start": "9000",
    "end": "55000"
  },
  {
    "text": "on the right side and a couple there on the left if you don't want to stand in the back",
    "start": "13120",
    "end": "20000"
  },
  {
    "text": "and well today we want to talk about our experience in adopting kubernetes",
    "start": "20000",
    "end": "27760"
  },
  {
    "text": "controllers for managing things who are not core kubernetes controllers",
    "start": "27760",
    "end": "33440"
  },
  {
    "text": "and we are doing that with a cncf project called crossplane and they have",
    "start": "33440",
    "end": "39360"
  },
  {
    "text": "quite the presence here so i want to have a quick show fans who has heard of crossplane before",
    "start": "39360",
    "end": "46719"
  },
  {
    "text": "all right all right so it's hard to not uh hard to ignore crossplane at this conference that's for",
    "start": "46719",
    "end": "52559"
  },
  {
    "text": "sure and that's good so we'll start with a quick intro uh who",
    "start": "52559",
    "end": "57920"
  },
  {
    "start": "55000",
    "end": "125000"
  },
  {
    "text": "who we are uh michael lecanis maybe you want to go first yeah my name is hans",
    "start": "57920",
    "end": "63359"
  },
  {
    "text": "blut i i'm a cloud architect at accenture and i live in frankfurt germany",
    "start": "63359",
    "end": "70960"
  },
  {
    "text": "my name is jan vegas i live in berlin i'm a platform architect accenture",
    "start": "70960",
    "end": "77040"
  },
  {
    "text": "i do uh i do most of the stuff i do is open",
    "start": "77040",
    "end": "82320"
  },
  {
    "text": "source i'm a contributor to the crossplane project i do also do the",
    "start": "82320",
    "end": "87439"
  },
  {
    "text": "valencia icd meetup so if you're in berlin and if you are interested in",
    "start": "87439",
    "end": "93200"
  },
  {
    "text": "in in connecting and with other folks who are running cicd",
    "start": "93200",
    "end": "98240"
  },
  {
    "text": "then feel free to reach out it's been on hiatus for the past two years due to some pandemic events but we plan to pick",
    "start": "98240",
    "end": "106159"
  },
  {
    "text": "it up this summer again and we are also managing the foster mci cd dev room so if you are joining foster",
    "start": "106159",
    "end": "114399"
  },
  {
    "text": "in brussels hopefully in presence next year um feel free to catch us and the",
    "start": "114399",
    "end": "119759"
  },
  {
    "text": "cicd deaf room",
    "start": "119759",
    "end": "122880"
  },
  {
    "start": "125000",
    "end": "231000"
  },
  {
    "text": "all right so a very quick introduction crossplane so probably you've by now heard many",
    "start": "125040",
    "end": "130879"
  },
  {
    "text": "intros to crossplane uh this is uh this might be the third one but",
    "start": "130879",
    "end": "136160"
  },
  {
    "text": "let me quickly explain in layman's terms so what crossplane does it extends",
    "start": "136160",
    "end": "142080"
  },
  {
    "text": "a service provider apis which are pictured here at the bottom into the kubernetes resource model into the",
    "start": "142080",
    "end": "148319"
  },
  {
    "text": "kubernetes database so a as a user i can cube cd get clusters and i do get",
    "start": "148319",
    "end": "155599"
  },
  {
    "text": "my eks cluster back from aws similar i can",
    "start": "155599",
    "end": "161360"
  },
  {
    "text": "create kubernetes clusters via [Music] via the kubernetes platform so i just",
    "start": "161360",
    "end": "168560"
  },
  {
    "text": "apply a familial yammer and there's a controller running who takes",
    "start": "168560",
    "end": "173840"
  },
  {
    "text": "this yaml representation and talks to the aws api via aws go sdk and manage",
    "start": "173840",
    "end": "182959"
  },
  {
    "text": "the state at aws for me it continuously does so so that's the kubernetes pattern",
    "start": "182959",
    "end": "188480"
  },
  {
    "text": "the reconciliation uh every well it's configurable but every 60 seconds by default",
    "start": "188480",
    "end": "194640"
  },
  {
    "text": "so if there's any any drift or any changes then those are overwritten or updated to the",
    "start": "194640",
    "end": "201680"
  },
  {
    "text": "state which i want to give that so this is a kubernetes example i can",
    "start": "201680",
    "end": "207280"
  },
  {
    "text": "provision kubernetes via kubernetes but obviously i can create any object at",
    "start": "207280",
    "end": "212799"
  },
  {
    "text": "any external api provider so it could be an s3 bucket",
    "start": "212799",
    "end": "217920"
  },
  {
    "text": "a cloud storage object an aks cluster a lambda",
    "start": "217920",
    "end": "223760"
  },
  {
    "text": "stuff so anything really which which is mirrored into the kubernetes ecosystem",
    "start": "223760",
    "end": "231120"
  },
  {
    "start": "231000",
    "end": "492000"
  },
  {
    "text": "okay let's take a closer look at the kubernetes example i'll have to take the kubernetes example because it's uh it's",
    "start": "231120",
    "end": "237200"
  },
  {
    "text": "a very complex one um usually an s3 bucket or a cloud",
    "start": "237200",
    "end": "243280"
  },
  {
    "text": "cloud storage bucket is just a similar a very simple object and you just apply it so there's no",
    "start": "243280",
    "end": "249280"
  },
  {
    "text": "like magic behind that but to provision a kubernetes cluster at uh cloud",
    "start": "249280",
    "end": "254799"
  },
  {
    "text": "providers or or on-prem is usually a very complex thing to do",
    "start": "254799",
    "end": "260000"
  },
  {
    "text": "and so pictured here at the bottom are it's an example stack of a fictional",
    "start": "260000",
    "end": "266000"
  },
  {
    "text": "company which you you might run uh there are two club providers aws and azure there's a code repository gitlab",
    "start": "266000",
    "end": "273520"
  },
  {
    "text": "uh there's a grafana for dashboarding there's obviously probably your organization runs kubernetes so there's",
    "start": "273520",
    "end": "279199"
  },
  {
    "text": "the kubernetes api vote for secret store styra for policies argo cd for githubs",
    "start": "279199",
    "end": "284400"
  },
  {
    "text": "and so on and so forth so all those are mirrored into the kubernetes ecosystem",
    "start": "284400",
    "end": "289680"
  },
  {
    "text": "so you have them available as like one-to-one representations however that's usually not what you want",
    "start": "289680",
    "end": "297520"
  },
  {
    "text": "to kind of push this complexity to the to every user of your of your platform",
    "start": "297520",
    "end": "304000"
  },
  {
    "text": "um what you most of the time want to do is at least apply some",
    "start": "304000",
    "end": "309759"
  },
  {
    "text": "compliance and security so for example a famous example is the visibility of an api in in the kubernetes case that would",
    "start": "309759",
    "end": "317759"
  },
  {
    "text": "be like every kubernetes cluster should be a private kubernetes cluster and not a public one that should be a default",
    "start": "317759",
    "end": "326160"
  },
  {
    "text": "with nx s3 bucket it's the same should be private by default for example and should be encrypted via",
    "start": "326160",
    "end": "333199"
  },
  {
    "text": "kms so those are defaults you can set and you also want",
    "start": "333199",
    "end": "338720"
  },
  {
    "text": "to make it simple and in the case for kubernetes cluster there are many many different api calls you",
    "start": "338720",
    "end": "345520"
  },
  {
    "text": "need to take to add aws to create a cluster then at your internal sas",
    "start": "345520",
    "end": "353520"
  },
  {
    "text": "services to register the cluster once it's ready and to install",
    "start": "353520",
    "end": "358960"
  },
  {
    "text": "operators and controllers to make your cluster compliant and integrate in the rest of your enterprise",
    "start": "358960",
    "end": "365520"
  },
  {
    "text": "and that's something which happens here in the integration part and in the custom platform part",
    "start": "365520",
    "end": "372960"
  },
  {
    "text": "at the top you see the simple object which your users of the platform are using when they want to have a",
    "start": "372960",
    "end": "379919"
  },
  {
    "text": "kubernetes cluster and provision a kubernetes cluster so it's a very simple one but under the hood it goes to aws",
    "start": "379919",
    "end": "386160"
  },
  {
    "text": "and it creates a im role im policy security group oelc provider",
    "start": "386160",
    "end": "392800"
  },
  {
    "text": "actual eks cluster um all those eks cluster add-ons um which are available",
    "start": "392800",
    "end": "399600"
  },
  {
    "text": "um and it goes to it goes then to kubernetes because once the eks cluster",
    "start": "399600",
    "end": "405039"
  },
  {
    "text": "is ready it's not like not ready to hand out it still needs to run like compliance and integration software",
    "start": "405039",
    "end": "411440"
  },
  {
    "text": "which you need to deploy and that's happening via the kubernetes api then in the same kind of",
    "start": "411440",
    "end": "419120"
  },
  {
    "text": "call so um there then is deployed the compliance software for cm or security scanning",
    "start": "419120",
    "end": "425680"
  },
  {
    "text": "also um and all those controllers for integrating which are not available via eks add-ons",
    "start": "425680",
    "end": "432080"
  },
  {
    "text": "and then the the kubernetes cluster is registered at um well in this case at",
    "start": "432080",
    "end": "437919"
  },
  {
    "text": "styra which is a control plane for policies for opa and it's registered at argo cd so that users can use githubs to",
    "start": "437919",
    "end": "445120"
  },
  {
    "text": "deploy their application into the cluster so they get everything out of the box",
    "start": "445120",
    "end": "451599"
  },
  {
    "text": "but still that's hidden from the user by the platform team by this integration",
    "start": "451599",
    "end": "458720"
  },
  {
    "text": "so in the end uh crossplane to achieve this it's a crossbar is a kind of a low code",
    "start": "458720",
    "end": "465599"
  },
  {
    "text": "platform so you cannot like edit the stuff via ui yet but you",
    "start": "465599",
    "end": "471440"
  },
  {
    "text": "you can offer an api without writing actual code so you can describe it in",
    "start": "471440",
    "end": "477759"
  },
  {
    "text": "and it allows you to provide kind of abstractions and governance and",
    "start": "477759",
    "end": "484000"
  },
  {
    "text": "security to it all right that sounds really fun and",
    "start": "484000",
    "end": "489280"
  },
  {
    "text": "games um but what are the top nine challenges uh",
    "start": "489280",
    "end": "495280"
  },
  {
    "start": "492000",
    "end": "545000"
  },
  {
    "text": "we encountered when running this approach at scale and in production so",
    "start": "495280",
    "end": "500319"
  },
  {
    "text": "at scale means we are running it's obviously it's not google scale we are running",
    "start": "500319",
    "end": "507759"
  },
  {
    "text": "a couple of thousand managed resources so that's uh i guess it's not like um",
    "start": "507759",
    "end": "515120"
  },
  {
    "text": "super less it's also not like google scale but maybe it's something in between and we want to go over some",
    "start": "515120",
    "end": "520560"
  },
  {
    "text": "challenges we faced when when implementing that we've been starting with crossplane two years ago and this",
    "start": "520560",
    "end": "526480"
  },
  {
    "text": "helped us to like get a very very good understanding of the product we adopted it pre version",
    "start": "526480",
    "end": "532080"
  },
  {
    "text": "1.0 and we're able to uh kind of shape a bit the product to our needs and some of the stuff you see",
    "start": "532080",
    "end": "539600"
  },
  {
    "text": "in today's crossplane is based on our feedback",
    "start": "539600",
    "end": "544639"
  },
  {
    "start": "545000",
    "end": "606000"
  },
  {
    "text": "so the first thing is the crossplane deployment model so crossplane is a kubernetes extension and",
    "start": "545200",
    "end": "552000"
  },
  {
    "text": "by that it's it's installable in a kubernetes cluster so you might go",
    "start": "552000",
    "end": "557839"
  },
  {
    "text": "that just simply every application cluster gets a crossplay installation so",
    "start": "557839",
    "end": "563360"
  },
  {
    "text": "the application is the the blue boxes on on the right and the crossbar",
    "start": "563360",
    "end": "568880"
  },
  {
    "text": "installation is the the colorful representation so what that gets you from an",
    "start": "568880",
    "end": "574000"
  },
  {
    "text": "application point of view it's a very good integration between infrastructure and application because now you can take",
    "start": "574000",
    "end": "580399"
  },
  {
    "text": "the you can read from an application you can directly read the connection details of",
    "start": "580399",
    "end": "585680"
  },
  {
    "text": "the database or the the s3 bucket or so from the same cluster in",
    "start": "585680",
    "end": "592560"
  },
  {
    "text": "in from a secret for example uh and also you have a very good heart isolation between tenants because well",
    "start": "592560",
    "end": "598560"
  },
  {
    "text": "kubernetes uh tenancy model is the best when there are different kubernetes clusters however how do you bootstrap",
    "start": "598560",
    "end": "605600"
  },
  {
    "text": "those clusters so in the end you can offer a very",
    "start": "605600",
    "end": "611680"
  },
  {
    "start": "606000",
    "end": "839000"
  },
  {
    "text": "the the broad range of the cloud provider or sas provider offerings into",
    "start": "611680",
    "end": "619040"
  },
  {
    "text": "the cluster however a kubernetes cluster is just one of these offerings and with",
    "start": "619040",
    "end": "624320"
  },
  {
    "text": "this approach where you are kind of it's expected you're already running a kubernetes cluster so how do you",
    "start": "624320",
    "end": "630560"
  },
  {
    "text": "get to those clusters so the next thing in the middle is well you have a central api for",
    "start": "630560",
    "end": "638480"
  },
  {
    "text": "infrastructure provisioning so that users go to the central api provision their cloud resources or sas",
    "start": "638480",
    "end": "646480"
  },
  {
    "text": "resources and then they are using those sas resources directly",
    "start": "646480",
    "end": "651600"
  },
  {
    "text": "so they go to a central crossplay instance and create a bucket",
    "start": "651600",
    "end": "657600"
  },
  {
    "text": "any gis clusters and so on and then they connect to those directly and use that",
    "start": "657600",
    "end": "662959"
  },
  {
    "text": "so that's great bootstrapping problem solved i have a i have a control plane for all",
    "start": "662959",
    "end": "668399"
  },
  {
    "text": "my infrastructure however now you have kind of a bit of the soft isolation problem between",
    "start": "668399",
    "end": "675360"
  },
  {
    "text": "between tenants although you're not running any workloads in the central cluster uh that's that's offered by like a",
    "start": "675360",
    "end": "682959"
  },
  {
    "text": "central platform team there are no workloads so",
    "start": "682959",
    "end": "689680"
  },
  {
    "text": "it's not like like uh resource starvation or so which you might run into which is a common problem if if if",
    "start": "689680",
    "end": "695600"
  },
  {
    "text": "you're running a multi-tenant kubernetes cluster however you are still",
    "start": "695600",
    "end": "701279"
  },
  {
    "text": "running a single controller for the entire um for for all the tenants and you could",
    "start": "701279",
    "end": "708959"
  },
  {
    "text": "still get into some issues when for example one tenant creates a huge load",
    "start": "708959",
    "end": "714160"
  },
  {
    "text": "of api resources and then you get rate limited or something because crds are cluster-wide in kubernetes as",
    "start": "714160",
    "end": "722320"
  },
  {
    "text": "you all probably know and cluster-wide means there's only a single controller",
    "start": "722320",
    "end": "727839"
  },
  {
    "text": "reconciling those objects so there's no well at least not a crossplay no",
    "start": "727839",
    "end": "732880"
  },
  {
    "text": "no way to shard uh controllers to uh crds and that's kind of",
    "start": "732880",
    "end": "739440"
  },
  {
    "text": "the issue with this model there are some scalability uh challenges so",
    "start": "739440",
    "end": "745200"
  },
  {
    "text": "third on the bottom is well obvious solution you run a crossplane instance",
    "start": "745200",
    "end": "750240"
  },
  {
    "text": "per tenant so everybody gets a crossplane instance however it's a",
    "start": "750240",
    "end": "756160"
  },
  {
    "text": "kind of a tricky thing because you don't want to run the crossplane instance in an actual",
    "start": "756160",
    "end": "761680"
  },
  {
    "text": "kubernetes cluster because it doesn't run any workloads it and it would be very kind of",
    "start": "761680",
    "end": "767760"
  },
  {
    "text": "from a resource point of view very cost intensive to run a dedicated kubernetes cluster just for the control plane for",
    "start": "767760",
    "end": "774880"
  },
  {
    "text": "every tenant that depends on how many tenants you have obviously",
    "start": "774880",
    "end": "781040"
  },
  {
    "text": "so those can be virtualized and there are some uh ways to virtualize them via",
    "start": "781120",
    "end": "787920"
  },
  {
    "text": "open source tools so a lot of folks use vcluster by loft.sh for running virtual",
    "start": "787920",
    "end": "794959"
  },
  {
    "text": "kubernetes cluster or there's the cluster api provider",
    "start": "794959",
    "end": "800000"
  },
  {
    "text": "nested from from the special interest group from kubernetes",
    "start": "800000",
    "end": "805600"
  },
  {
    "text": "who does also that and probably a thousand other ways you could also use",
    "start": "805600",
    "end": "811279"
  },
  {
    "text": "an offering from upbound to achieve that and then you can run the controller either inside the",
    "start": "811279",
    "end": "817279"
  },
  {
    "text": "virtual cluster or you can run it outside and connect to the virtual cluster",
    "start": "817279",
    "end": "822560"
  },
  {
    "text": "but you get the heart isolation that's solved you get a separation between control",
    "start": "822560",
    "end": "829199"
  },
  {
    "text": "plane and data plane however it's a bit more complex setup and probably your adaption goes",
    "start": "829199",
    "end": "835519"
  },
  {
    "text": "a bit along this lines all right the approach to compositions",
    "start": "835519",
    "end": "842160"
  },
  {
    "start": "839000",
    "end": "981000"
  },
  {
    "text": "that's something we we face so compositions are the feature how to abstract um",
    "start": "842160",
    "end": "849120"
  },
  {
    "text": "resources so when you build your automation you maybe you are in an application team and",
    "start": "849120",
    "end": "855760"
  },
  {
    "text": "you want to start with the application so build from top down application on top crowd resources at the bottom and",
    "start": "855760",
    "end": "862000"
  },
  {
    "text": "you want to deploy the application and it should come with like a stack it comes it's a vertical",
    "start": "862000",
    "end": "868320"
  },
  {
    "text": "integrated stack application uses database object store queue",
    "start": "868320",
    "end": "873440"
  },
  {
    "text": "maybe kubernetes maybe not maybe cloud functions or so but that's something you want to",
    "start": "873440",
    "end": "880720"
  },
  {
    "text": "aggregate so basically you abstract the application that's very useful if you're starting",
    "start": "881600",
    "end": "888079"
  },
  {
    "text": "with crossplane from like either an application team or a small company",
    "start": "888079",
    "end": "893360"
  },
  {
    "text": "but however if you're starting in a large organization that's very cumbersome and very challenging to",
    "start": "893360",
    "end": "898880"
  },
  {
    "text": "implement because now you're the one with the sme for crossplan nf the experience with running that",
    "start": "898880",
    "end": "905760"
  },
  {
    "text": "you need to go to every application team in the enterprise and build those abstractions for them and that's",
    "start": "905760",
    "end": "912480"
  },
  {
    "text": "uh simply not gonna scale so you start from the bottom you are the service provider and you want to offer those",
    "start": "912480",
    "end": "919120"
  },
  {
    "text": "resources to your users so from like the uh azure example you have from the aks",
    "start": "919120",
    "end": "926639"
  },
  {
    "text": "you build a a compliant aks object a compliant aks api a cloud compliant blob",
    "start": "926639",
    "end": "932880"
  },
  {
    "text": "store uh a compliant um cosmos db and a compliant load balancer",
    "start": "932880",
    "end": "938160"
  },
  {
    "text": "those are just examples here so those applications team they can just like pick and choose what they",
    "start": "938160",
    "end": "943920"
  },
  {
    "text": "from a service catalog kind of of thing and then like from a maturity point or",
    "start": "943920",
    "end": "950000"
  },
  {
    "text": "adoption points the third example here would be the one where the adoption is",
    "start": "950000",
    "end": "955120"
  },
  {
    "text": "is quite far already a platform team would create those um stuff from the bottom so those",
    "start": "955120",
    "end": "961120"
  },
  {
    "text": "compliant api objects and then application teams who are already familiar or kind of",
    "start": "961120",
    "end": "966399"
  },
  {
    "text": "uh borrowing resources from from the central team they would write their automated automation based",
    "start": "966399",
    "end": "973199"
  },
  {
    "text": "on top of those compliant objects already",
    "start": "973199",
    "end": "978079"
  },
  {
    "text": "well speaking of all those compositions that might be not a surprise uh for many of",
    "start": "980560",
    "end": "987759"
  },
  {
    "start": "981000",
    "end": "1084000"
  },
  {
    "text": "you but uh kubernetes is a favorite uh well someone said that at a conference",
    "start": "987759",
    "end": "993839"
  },
  {
    "text": "kubernetes is my favorite yama database so expect that you need to manage more",
    "start": "993839",
    "end": "1000240"
  },
  {
    "text": "even more yaml so probably already managing a lot of yaml",
    "start": "1000240",
    "end": "1005680"
  },
  {
    "text": "for sure if you're running stuff like the q prometheus deck or something um",
    "start": "1005680",
    "end": "1011199"
  },
  {
    "text": "but it will now get even more it's like crossbar is a low code platform you don't need to write go code to for just",
    "start": "1011199",
    "end": "1019279"
  },
  {
    "text": "well use to use it however you need to still describe those apis and those",
    "start": "1019279",
    "end": "1024720"
  },
  {
    "text": "compositions and that's done in open api in yaml so",
    "start": "1024720",
    "end": "1030959"
  },
  {
    "text": "there could be a lot of bugs as as you all probably know with indentation and and and white spaces and types and so on",
    "start": "1030959",
    "end": "1037600"
  },
  {
    "text": "depending on their approach how you manage yammer so if it's just like basic templating and templating or",
    "start": "1037600",
    "end": "1044400"
  },
  {
    "text": "or writing that manually that's maybe something which will uh which will",
    "start": "1044400",
    "end": "1049440"
  },
  {
    "text": "change when you when you adopt that so definitely some some stuff i'm very",
    "start": "1049440",
    "end": "1055200"
  },
  {
    "text": "excited about is culang for when you can do validation and like",
    "start": "1055200",
    "end": "1061360"
  },
  {
    "text": "have a type safety and all this kind of stuff however it also kind of",
    "start": "1061360",
    "end": "1067120"
  },
  {
    "text": "uh is a bit of since it has a very good go integration it's it's very kind of uh",
    "start": "1067120",
    "end": "1073200"
  },
  {
    "text": "it defeats a bit the low code pattern because now you kind of still go into a bit of of writing code however that's",
    "start": "1073200",
    "end": "1080080"
  },
  {
    "text": "you get a lot more safety this way",
    "start": "1080080",
    "end": "1083919"
  },
  {
    "start": "1084000",
    "end": "1194000"
  },
  {
    "text": "user expectations when you apply conte a pod spec",
    "start": "1085200",
    "end": "1090720"
  },
  {
    "text": "you get a container almost immediately so at least you should",
    "start": "1090720",
    "end": "1096480"
  },
  {
    "text": "but infrastructure is slow so if you apply for example an rds database it will take",
    "start": "1096480",
    "end": "1103840"
  },
  {
    "text": "easily five minutes or more and there are some very familiar uh",
    "start": "1103840",
    "end": "1108960"
  },
  {
    "text": "famous examples which take 10 50 minutes for infrastructure to get ready um",
    "start": "1108960",
    "end": "1114480"
  },
  {
    "text": "and that's something which some users might not expect to see from",
    "start": "1114480",
    "end": "1119679"
  },
  {
    "text": "the kubernetes api because usually from what they know the kubernetes api it's like quick and and you get a like",
    "start": "1119679",
    "end": "1125280"
  },
  {
    "text": "immediate reaction so some might just like delete and",
    "start": "1125280",
    "end": "1130400"
  },
  {
    "text": "recreate those objects in a very fast way and that's it infrastructure usually doesn't like that",
    "start": "1130400",
    "end": "1136480"
  },
  {
    "text": "and then obviously depending on the approach your users might not know kubernetes",
    "start": "1136480",
    "end": "1142480"
  },
  {
    "text": "so there are some users in your org who who don't use kubernetes they are running google cloud functions or",
    "start": "1142480",
    "end": "1148799"
  },
  {
    "text": "lambdas or app runner or cloudrun or or some like",
    "start": "1148799",
    "end": "1154640"
  },
  {
    "text": "data batch products aws batch or something",
    "start": "1154640",
    "end": "1160160"
  },
  {
    "text": "but now they need to kind of describe their stuff in kubernetes yammer so",
    "start": "1160160",
    "end": "1166880"
  },
  {
    "text": "while they not might run workloads in kubernetes they still need to kind of know the",
    "start": "1166880",
    "end": "1172799"
  },
  {
    "text": "api so you can get around that by well offering a ui so that they can",
    "start": "1172799",
    "end": "1179520"
  },
  {
    "text": "more or less uh create those resources via workflow or via ui but still in the end",
    "start": "1179520",
    "end": "1187360"
  },
  {
    "text": "they need to know some api to create those stuffs okay i'm looking a bit at the time so",
    "start": "1187360",
    "end": "1193440"
  },
  {
    "text": "i'll skip the stuff another thing now that you're using",
    "start": "1193440",
    "end": "1198799"
  },
  {
    "start": "1194000",
    "end": "1345000"
  },
  {
    "text": "kubernetes for not only applications but also for your platform and the infrastructure you can leverage the",
    "start": "1198799",
    "end": "1205200"
  },
  {
    "text": "wealth of the kubernetes ecosystem and that might be a well at least it sure is my first example of showing the cncf",
    "start": "1205200",
    "end": "1211919"
  },
  {
    "text": "landscape in a in a good way because uh many many of those things are or",
    "start": "1211919",
    "end": "1218400"
  },
  {
    "text": "probably all of those things are integrated with kubernetes so to i brought two examples here so for",
    "start": "1218400",
    "end": "1224960"
  },
  {
    "text": "example since now you have this central layer where you apply all your stuff you have also a central",
    "start": "1224960",
    "end": "1232320"
  },
  {
    "text": "way for managing policies at this layer you don't well still you should",
    "start": "1232320",
    "end": "1238240"
  },
  {
    "text": "use for example those im stuff on aws and on on google cloud and",
    "start": "1238240",
    "end": "1244320"
  },
  {
    "text": "roles and responsibilities at gitlab and um",
    "start": "1244320",
    "end": "1250320"
  },
  {
    "text": "and and argo cd and all those sas offerings you you might use however you can do you can shift a bit more to the",
    "start": "1250320",
    "end": "1257200"
  },
  {
    "text": "left and apply those things in a common language at the same layer so you've",
    "start": "1257200",
    "end": "1263039"
  },
  {
    "text": "write the same policies kind of for for for the source code repository for the",
    "start": "1263039",
    "end": "1269120"
  },
  {
    "text": "github software for for graphana for for kubernetes",
    "start": "1269120",
    "end": "1275120"
  },
  {
    "text": "for the application so well on a on a very",
    "start": "1275120",
    "end": "1280799"
  },
  {
    "text": "low layer that means the arbex stuff from core kubernetes but you can also and probably you should run some more",
    "start": "1280799",
    "end": "1288400"
  },
  {
    "text": "fine grained policy execution stuff like opa like cuberno or any of those things",
    "start": "1288400",
    "end": "1295760"
  },
  {
    "text": "and what you can do with those is then to have like quotas for example for um for your infrastructure so depending",
    "start": "1295760",
    "end": "1303440"
  },
  {
    "text": "on most sometimes the uh the billing processes in enlarged orgs are not very",
    "start": "1303440",
    "end": "1309520"
  },
  {
    "text": "uh cloud native maybe so there might be some subscription models so someone says",
    "start": "1309520",
    "end": "1315200"
  },
  {
    "text": "okay i've like an sml subscription and s is i don't know two kubernetes clusters",
    "start": "1315200",
    "end": "1320720"
  },
  {
    "text": "and and ten nodes and this you can easily implement in uh in at this layer so that's",
    "start": "1320720",
    "end": "1326720"
  },
  {
    "text": "it it's really easy and other examples are for example running cube janitor to just really like remove demo",
    "start": "1326720",
    "end": "1333679"
  },
  {
    "text": "environments after after a day or two um that's pretty easy or cube cost to",
    "start": "1333679",
    "end": "1338960"
  },
  {
    "text": "manage costs so this gets very easy and that was just a",
    "start": "1338960",
    "end": "1345360"
  },
  {
    "start": "1345000",
    "end": "1535000"
  },
  {
    "text": "small examples i'll now head over to hannes for free all right",
    "start": "1345360",
    "end": "1352480"
  },
  {
    "text": "so the next point or the the next topic where we had to deal with some",
    "start": "1352480",
    "end": "1358559"
  },
  {
    "text": "issues was a crd maturity so",
    "start": "1358559",
    "end": "1364080"
  },
  {
    "text": "crds are very nice to extend kubernetes but",
    "start": "1364080",
    "end": "1369760"
  },
  {
    "text": "they they were built to um to be part of the container",
    "start": "1370240",
    "end": "1376480"
  },
  {
    "text": "orchestration at first and then they evolved to be more than that where people started",
    "start": "1376480",
    "end": "1383280"
  },
  {
    "text": "building operators rather than controllers that were just inside kubernetes",
    "start": "1383280",
    "end": "1389039"
  },
  {
    "text": "and with with that now as jan said",
    "start": "1389039",
    "end": "1394480"
  },
  {
    "text": "there are providers that implement all the resources for their specific cloud provider",
    "start": "1394480",
    "end": "1401120"
  },
  {
    "text": "and with aws that's over 700 apis and with azure that's over",
    "start": "1401120",
    "end": "1406960"
  },
  {
    "text": "600 apis and then you end up with multiple thousand crds in your cluster",
    "start": "1406960",
    "end": "1413039"
  },
  {
    "text": "and just that just doesn't scale very well",
    "start": "1413120",
    "end": "1418480"
  },
  {
    "text": "so one of the issues that we had was the kubernetes behavior around immutability in in the",
    "start": "1418799",
    "end": "1426559"
  },
  {
    "text": "open ap scheme you can specify that the field is immutable but it's not observed",
    "start": "1426559",
    "end": "1432159"
  },
  {
    "text": "in kubernetes so sometimes your pro your cloud provider also has",
    "start": "1432159",
    "end": "1439279"
  },
  {
    "text": "some sort of api points that can't be changed i don't actually have an example but",
    "start": "1439440",
    "end": "1446640"
  },
  {
    "text": "i i remember they that you you couldn't change",
    "start": "1446640",
    "end": "1452000"
  },
  {
    "text": "uh like the type of node that you're running on or something like that but",
    "start": "1452000",
    "end": "1458000"
  },
  {
    "text": "and then i could say in my crd description please don't change this or don't allow it to change but you can and",
    "start": "1458000",
    "end": "1463679"
  },
  {
    "text": "then the user is confused about why why it's not updating in aws because that's what you would expect",
    "start": "1463679",
    "end": "1469600"
  },
  {
    "text": "from the api the next thing that we have is when",
    "start": "1469600",
    "end": "1476240"
  },
  {
    "text": "we're working with apis we have some sort of like if it evolves you want to version",
    "start": "1476240",
    "end": "1482080"
  },
  {
    "text": "it because you might have breaking changes and crds allow you to write conversion web hooks",
    "start": "1482080",
    "end": "1488880"
  },
  {
    "text": "but until recently that wasn't available in crossplane i'm",
    "start": "1488880",
    "end": "1495440"
  },
  {
    "text": "it's being worked on but it's not there yet and then on the other hand even if you",
    "start": "1495440",
    "end": "1501520"
  },
  {
    "text": "have conversion web hooks it's still more reliable to uh to do the migration",
    "start": "1501520",
    "end": "1507520"
  },
  {
    "text": "manually and to help your users do their migration over time as in the",
    "start": "1507520",
    "end": "1514559"
  },
  {
    "text": "deprecated deprecation version that kubernetes is using itself um",
    "start": "1514559",
    "end": "1521200"
  },
  {
    "text": "all right i will also skip the rest here because of the time concerning the scalability there was a",
    "start": "1521200",
    "end": "1527120"
  },
  {
    "text": "talk yesterday it was yesterday afternoon the crd that",
    "start": "1527120",
    "end": "1532240"
  },
  {
    "text": "broke the camel's back i'm sure you'll find some information there",
    "start": "1532240",
    "end": "1538080"
  },
  {
    "start": "1535000",
    "end": "1703000"
  },
  {
    "text": "since we're using yaml in our kubernetes api you can we can now deploy everything uh to",
    "start": "1538799",
    "end": "1546960"
  },
  {
    "text": "through git ops instead of ci ops we don't use a pipeline that executes a",
    "start": "1546960",
    "end": "1552080"
  },
  {
    "text": "terraform script anymore it's you can actually use the same tool like argo cd for example",
    "start": "1552080",
    "end": "1558799"
  },
  {
    "text": "to synchronize everything that we have in our repository to our cluster",
    "start": "1558799",
    "end": "1565039"
  },
  {
    "text": "and that allows us to use the same mechanisms for our applications and infrastructure",
    "start": "1565919",
    "end": "1572639"
  },
  {
    "text": "but again this this goes back to what is your user expectation and if you say",
    "start": "1574400",
    "end": "1579760"
  },
  {
    "text": "okay you can use the same same behavior or the same api for both",
    "start": "1579760",
    "end": "1585440"
  },
  {
    "text": "they might expect you to have those offered in the same cluster and then with what we discussed earlier about the",
    "start": "1585440",
    "end": "1591679"
  },
  {
    "text": "how do we deploy or architecture our different crossplane",
    "start": "1591679",
    "end": "1597120"
  },
  {
    "text": "control planes it's just that they might expect to be able to",
    "start": "1597120",
    "end": "1603200"
  },
  {
    "text": "deploy both into the same cluster for example with the helm chart but that might not work",
    "start": "1603200",
    "end": "1610799"
  },
  {
    "text": "and so there's some interesting development around multi-cluster architectures and or management and",
    "start": "1610799",
    "end": "1617679"
  },
  {
    "text": "cluster federations and that is something where we need to figure out how can we make it manageable across",
    "start": "1617679",
    "end": "1623279"
  },
  {
    "text": "multiple clusters as well um and then there's a of course the question",
    "start": "1623279",
    "end": "1629279"
  },
  {
    "text": "what's the end like where do we uh where do we stop using githubs do we deploy our secrets with githubs we can use tops",
    "start": "1629279",
    "end": "1636480"
  },
  {
    "text": "for example to to encrypt everything in our repositories and then let it deploy",
    "start": "1636480",
    "end": "1642000"
  },
  {
    "text": "but it might be more reasonable to use a secret provider like walt or the secrets",
    "start": "1642000",
    "end": "1647279"
  },
  {
    "text": "manager or something similar um to just",
    "start": "1647279",
    "end": "1652640"
  },
  {
    "text": "request the secret and then use that as credential instead and of course using using git ops with",
    "start": "1652640",
    "end": "1660320"
  },
  {
    "text": "your node group with like a scaling configuration that just creates more",
    "start": "1660320",
    "end": "1666480"
  },
  {
    "text": "conflicts where your your provider is or your argo city is trying to to sync your",
    "start": "1666480",
    "end": "1672320"
  },
  {
    "text": "repository and then on the other hand you have the autoscaler telling the cluster",
    "start": "1672320",
    "end": "1677600"
  },
  {
    "text": "please scale down and and crossplane in between thinking the options back so you have a couple of",
    "start": "1677600",
    "end": "1684000"
  },
  {
    "text": "conflicting controllers as well and that then there's there are options around that you can",
    "start": "1684000",
    "end": "1690399"
  },
  {
    "text": "set fields to be ignored in some in some sense but that is an issue that needs to be",
    "start": "1690399",
    "end": "1696799"
  },
  {
    "text": "solved uh whenever it occurs um",
    "start": "1696799",
    "end": "1702159"
  },
  {
    "text": "and then i think what we also learned uh since we're offering a platform to our users",
    "start": "1702159",
    "end": "1710480"
  },
  {
    "start": "1703000",
    "end": "1774000"
  },
  {
    "text": "it needs to be documented and that's that's not enough to just",
    "start": "1710480",
    "end": "1716639"
  },
  {
    "text": "to write a short entry and oh please use crossplane pull your clds from the server because",
    "start": "1717039",
    "end": "1723840"
  },
  {
    "text": "get crds is already an operation that a normal user can't do because it's cluster scoped",
    "start": "1723840",
    "end": "1730320"
  },
  {
    "text": "so we need api documentation similar to the doc cld staff",
    "start": "1730320",
    "end": "1735600"
  },
  {
    "text": "that really well reflects all the apis in",
    "start": "1735600",
    "end": "1740960"
  },
  {
    "text": "for crossplane for example then there is a usage documentation on",
    "start": "1740960",
    "end": "1747600"
  },
  {
    "text": "what are the behaviors of what the user is deploying what are the side effects how do they interact",
    "start": "1747600",
    "end": "1753440"
  },
  {
    "text": "and of course whenever something changes or is",
    "start": "1753440",
    "end": "1758720"
  },
  {
    "text": "deprecated we need release notes really need some sort of life cycle management",
    "start": "1758720",
    "end": "1763760"
  },
  {
    "text": "and api and operator lifecycle management there was another talk on wednesday on",
    "start": "1763760",
    "end": "1768880"
  },
  {
    "text": "this i think on wednesday",
    "start": "1768880",
    "end": "1773360"
  },
  {
    "start": "1774000",
    "end": "1846000"
  },
  {
    "text": "and then the last thing is contributions since we are working in an enterprise situation it's",
    "start": "1774559",
    "end": "1782080"
  },
  {
    "text": "important to be sure that you know we can use open source we can contribute to open source and in our case we were",
    "start": "1782080",
    "end": "1788720"
  },
  {
    "text": "lucky we were able to engage with crossplane very early on to shape their",
    "start": "1788720",
    "end": "1794960"
  },
  {
    "text": "their product as well so we can um can make sure that it fulfills the needs",
    "start": "1794960",
    "end": "1802080"
  },
  {
    "text": "that we have at that point or um that that you need for building a platform",
    "start": "1802080",
    "end": "1807840"
  },
  {
    "text": "we have also been contributors to the provider aws in",
    "start": "1807840",
    "end": "1813840"
  },
  {
    "text": "a lot of resources and we have open sourced a couple of other providers like the provider gitlab",
    "start": "1813840",
    "end": "1820159"
  },
  {
    "text": "provider argo cd and provider styra and then with a provider graphana we",
    "start": "1820159",
    "end": "1825360"
  },
  {
    "text": "have built it using the jet implementation or like the terra jet implementation",
    "start": "1825360",
    "end": "1832720"
  },
  {
    "text": "and that was then taken over by the grafana community and they are now maintaining their own provider as well",
    "start": "1832720",
    "end": "1839600"
  },
  {
    "text": "which is something that might be nice for all the other cloud providers to do as well",
    "start": "1839600",
    "end": "1845919"
  },
  {
    "start": "1846000",
    "end": "1862000"
  },
  {
    "text": "thank you for listening and if you want to to reach out to us feel free to do so",
    "start": "1848799",
    "end": "1855520"
  },
  {
    "text": "and if there are any questions i think",
    "start": "1855520",
    "end": "1859799"
  }
]