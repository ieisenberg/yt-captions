[
  {
    "text": "hello I'm here to speak about craps",
    "start": "480",
    "end": "2800"
  },
  {
    "text": "today so and how this crap conquers the",
    "start": "2800",
    "end": "5359"
  },
  {
    "text": "cloud native landscape so we'll speak",
    "start": "5359",
    "end": "7120"
  },
  {
    "text": "about the programming language Rust i'm",
    "start": "7120",
    "end": "9440"
  },
  {
    "text": "Sasha i'm maintaining multiple CNCF",
    "start": "9440",
    "end": "11679"
  },
  {
    "text": "projects for now and some of them are",
    "start": "11679",
    "end": "13280"
  },
  {
    "text": "also a bit rusty you know so let's look",
    "start": "13280",
    "end": "16960"
  },
  {
    "text": "at all those projects we have right now",
    "start": "16960",
    "end": "19680"
  },
  {
    "text": "in the CNCF which utilize Rust for their",
    "start": "19680",
    "end": "22640"
  },
  {
    "text": "problem solution aspects so",
    "start": "22640",
    "end": "25160"
  },
  {
    "text": "interestingly we have projects which are",
    "start": "25160",
    "end": "27840"
  },
  {
    "text": "part of the landscape since a longer",
    "start": "27840",
    "end": "29359"
  },
  {
    "text": "period of time like tick vi but we also",
    "start": "29359",
    "end": "31840"
  },
  {
    "text": "have like web assembly related projects",
    "start": "31840",
    "end": "33920"
  },
  {
    "text": "like wasome edge wasn't cloud um but",
    "start": "33920",
    "end": "36640"
  },
  {
    "text": "also cube warden which is a policy",
    "start": "36640",
    "end": "38480"
  },
  {
    "text": "engine written completely in rust and if",
    "start": "38480",
    "end": "41120"
  },
  {
    "text": "you look closer uh into that picture",
    "start": "41120",
    "end": "43200"
  },
  {
    "text": "then you will see that there are also",
    "start": "43200",
    "end": "44879"
  },
  {
    "text": "some projects like cryo and containerd",
    "start": "44879",
    "end": "47840"
  },
  {
    "text": "which also utilize rust part at least",
    "start": "47840",
    "end": "50000"
  },
  {
    "text": "partially for their projects um but you",
    "start": "50000",
    "end": "53600"
  },
  {
    "text": "all know that they are mainly written in",
    "start": "53600",
    "end": "55559"
  },
  {
    "text": "Golang right now which is pretty",
    "start": "55559",
    "end": "57680"
  },
  {
    "text": "interesting we have like 250 million",
    "start": "57680",
    "end": "60000"
  },
  {
    "text": "lines of code Rust and more than 370",
    "start": "60000",
    "end": "63039"
  },
  {
    "text": "repositories in the CNCF so that makes",
    "start": "63039",
    "end": "65680"
  },
  {
    "text": "it number six uh topmost programming",
    "start": "65680",
    "end": "69360"
  },
  {
    "text": "languages in the whole cloud native",
    "start": "69360",
    "end": "72840"
  },
  {
    "text": "ecosystem now how can we do something",
    "start": "72840",
    "end": "75920"
  },
  {
    "text": "actually in Rust so just rewriting",
    "start": "75920",
    "end": "77920"
  },
  {
    "text": "something in Rust is probably not the",
    "start": "77920",
    "end": "79600"
  },
  {
    "text": "right solution well at some point it is",
    "start": "79600",
    "end": "82560"
  },
  {
    "text": "but you still have to if you rewrite",
    "start": "82560",
    "end": "85680"
  },
  {
    "text": "something you will find out that you",
    "start": "85680",
    "end": "88000"
  },
  {
    "text": "have to restructure it to be more",
    "start": "88000",
    "end": "89520"
  },
  {
    "text": "modular and extendable for the future",
    "start": "89520",
    "end": "91119"
  },
  {
    "text": "use cases so we made the same experience",
    "start": "91119",
    "end": "93200"
  },
  {
    "text": "in cryo we had a dedicated tool would",
    "start": "93200",
    "end": "96159"
  },
  {
    "text": "like to rewrite it in rust we rewrote in",
    "start": "96159",
    "end": "98560"
  },
  {
    "text": "rust and then we just had to change the",
    "start": "98560",
    "end": "100320"
  },
  {
    "text": "architecture while rewriting and that",
    "start": "100320",
    "end": "101759"
  },
  {
    "text": "was a bit problematic because you also",
    "start": "101759",
    "end": "104240"
  },
  {
    "text": "have to change the testing and if you",
    "start": "104240",
    "end": "106079"
  },
  {
    "text": "change the tests then the output might",
    "start": "106079",
    "end": "108240"
  },
  {
    "text": "be different than before",
    "start": "108240",
    "end": "110240"
  },
  {
    "text": "but good interfaces will help us to",
    "start": "110240",
    "end": "113360"
  },
  {
    "text": "cross those language borders um the",
    "start": "113360",
    "end": "116000"
  },
  {
    "text": "command line interface is probably the",
    "start": "116000",
    "end": "117920"
  },
  {
    "text": "most natural one when we speak about",
    "start": "117920",
    "end": "119520"
  },
  {
    "text": "Linux and you can also utilize RPC",
    "start": "119520",
    "end": "122719"
  },
  {
    "text": "systems like GPC or captain proto gc had",
    "start": "122719",
    "end": "126399"
  },
  {
    "text": "the issue in the past that um it was not",
    "start": "126399",
    "end": "129280"
  },
  {
    "text": "as performant as the Golang",
    "start": "129280",
    "end": "130640"
  },
  {
    "text": "implementation but this is somehow",
    "start": "130640",
    "end": "133360"
  },
  {
    "text": "resolved there are still some partially",
    "start": "133360",
    "end": "137840"
  },
  {
    "text": "um some small issues open for example",
    "start": "137840",
    "end": "140319"
  },
  {
    "text": "when it comes to handling Unix do the",
    "start": "140319",
    "end": "141680"
  },
  {
    "text": "main sockets um but that's something you",
    "start": "141680",
    "end": "144239"
  },
  {
    "text": "just have to be aware of and on the",
    "start": "144239",
    "end": "146560"
  },
  {
    "text": "other side you have the web assembly",
    "start": "146560",
    "end": "147920"
  },
  {
    "text": "runtimes like web assembly runtimes are",
    "start": "147920",
    "end": "150560"
  },
  {
    "text": "more or less like awesome to handle Rust",
    "start": "150560",
    "end": "154360"
  },
  {
    "text": "code but for using like different",
    "start": "154360",
    "end": "157760"
  },
  {
    "text": "libraries in your projects there are",
    "start": "157760",
    "end": "159920"
  },
  {
    "text": "huge amount of maturity differences if",
    "start": "159920",
    "end": "161920"
  },
  {
    "text": "you look like how they are used for",
    "start": "161920",
    "end": "164080"
  },
  {
    "text": "example in Golang considered to rust and",
    "start": "164080",
    "end": "167200"
  },
  {
    "text": "also those two chains can move fast so",
    "start": "167200",
    "end": "169040"
  },
  {
    "text": "we had the issue that we would like to",
    "start": "169040",
    "end": "171280"
  },
  {
    "text": "implement features in rust which require",
    "start": "171280",
    "end": "173120"
  },
  {
    "text": "higher rust to chain or a new rust to",
    "start": "173120",
    "end": "175200"
  },
  {
    "text": "chain and the issue was that just the",
    "start": "175200",
    "end": "177040"
  },
  {
    "text": "major distributions are not fast enough",
    "start": "177040",
    "end": "178640"
  },
  {
    "text": "for us so we had to make them make the",
    "start": "178640",
    "end": "181760"
  },
  {
    "text": "application backwards compatible to also",
    "start": "181760",
    "end": "183280"
  },
  {
    "text": "work on older rust versions",
    "start": "183280",
    "end": "187319"
  },
  {
    "text": "so how we could now fill the gaps I",
    "start": "187720",
    "end": "191040"
  },
  {
    "text": "think one of the best examples we have",
    "start": "191040",
    "end": "192959"
  },
  {
    "text": "right now is Yuki um the first thing we",
    "start": "192959",
    "end": "196319"
  },
  {
    "text": "had to do for Yuki was to find a way to",
    "start": "196319",
    "end": "198879"
  },
  {
    "text": "actually do the OCI spec in Rust the OCI",
    "start": "198879",
    "end": "202080"
  },
  {
    "text": "spec is just written in Golang but it's",
    "start": "202080",
    "end": "204080"
  },
  {
    "text": "like a definition for how containers and",
    "start": "204080",
    "end": "206239"
  },
  {
    "text": "runtimes should behave and the cool",
    "start": "206239",
    "end": "208800"
  },
  {
    "text": "thing about this is that we just spoke",
    "start": "208800",
    "end": "210400"
  },
  {
    "text": "to existing maintainers for the OCI spec",
    "start": "210400",
    "end": "212640"
  },
  {
    "text": "and they said \"Hey yeah you can take",
    "start": "212640",
    "end": "214400"
  },
  {
    "text": "over the crate but you have to maintain",
    "start": "214400",
    "end": "216159"
  },
  {
    "text": "it.\" And funny enough we created this uh",
    "start": "216159",
    "end": "219760"
  },
  {
    "text": "OCI Spec RS project which now has more",
    "start": "219760",
    "end": "222400"
  },
  {
    "text": "than like 700 users since 2021 uh so we",
    "start": "222400",
    "end": "226560"
  },
  {
    "text": "maintain it and it's actually being used",
    "start": "226560",
    "end": "228640"
  },
  {
    "text": "that's a a win-win",
    "start": "228640",
    "end": "231440"
  },
  {
    "text": "and Yuki is an OCI compatible uh runtime",
    "start": "231440",
    "end": "236080"
  },
  {
    "text": "comparable to run C or C run it is way",
    "start": "236080",
    "end": "239519"
  },
  {
    "text": "faster than run C it is written",
    "start": "239519",
    "end": "241519"
  },
  {
    "text": "completely in Rust and it's now CNCF and",
    "start": "241519",
    "end": "244480"
  },
  {
    "text": "the CNCF sandbox since 2024 so if you",
    "start": "244480",
    "end": "247360"
  },
  {
    "text": "would like to understand how it should",
    "start": "247360",
    "end": "249439"
  },
  {
    "text": "be made and uh what is the great great",
    "start": "249439",
    "end": "252640"
  },
  {
    "text": "way to understand how container runtimes",
    "start": "252640",
    "end": "254239"
  },
  {
    "text": "work then I can just recommend you to",
    "start": "254239",
    "end": "256079"
  },
  {
    "text": "check out Yuki",
    "start": "256079",
    "end": "259359"
  },
  {
    "text": "but to wrap this up I would like just to",
    "start": "259359",
    "end": "262800"
  },
  {
    "text": "say that be careful and prepared when",
    "start": "262800",
    "end": "264960"
  },
  {
    "text": "considering Rust for your application",
    "start": "264960",
    "end": "266800"
  },
  {
    "text": "isolated functionality is always a good",
    "start": "266800",
    "end": "269520"
  },
  {
    "text": "way to start with and to challenge like",
    "start": "269520",
    "end": "271600"
  },
  {
    "text": "Golang implementations to find out if",
    "start": "271600",
    "end": "273919"
  },
  {
    "text": "the problem you're solving is actually",
    "start": "273919",
    "end": "275520"
  },
  {
    "text": "faster or does it make more sense when",
    "start": "275520",
    "end": "277360"
  },
  {
    "text": "using a different programming language",
    "start": "277360",
    "end": "278880"
  },
  {
    "text": "than than Golang um and like the",
    "start": "278880",
    "end": "282080"
  },
  {
    "text": "integration of like hot topics you know",
    "start": "282080",
    "end": "284080"
  },
  {
    "text": "it's all a IML nowadays um could should",
    "start": "284080",
    "end": "287520"
  },
  {
    "text": "be considered to do completely in rust",
    "start": "287520",
    "end": "289680"
  },
  {
    "text": "because rust is like memory safe it",
    "start": "289680",
    "end": "291759"
  },
  {
    "text": "looks for performance constraints and it",
    "start": "291759",
    "end": "293680"
  },
  {
    "text": "also targets like environments for",
    "start": "293680",
    "end": "296720"
  },
  {
    "text": "various",
    "start": "296720",
    "end": "298360"
  },
  {
    "text": "architectures so then I'm running now",
    "start": "298360",
    "end": "300960"
  },
  {
    "text": "out of time but I'm happy to chat with",
    "start": "300960",
    "end": "302639"
  },
  {
    "text": "you Rust after that and I wish to thank",
    "start": "302639",
    "end": "305440"
  },
  {
    "text": "you all thanks",
    "start": "305440",
    "end": "308919"
  }
]