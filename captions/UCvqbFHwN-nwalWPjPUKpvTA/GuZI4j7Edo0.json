[
  {
    "text": "[Music] hi welcome to this Quantum Readiness",
    "start": "840",
    "end": "7520"
  },
  {
    "text": "Workshop about building hybrid pkis and working with key encapsulation mechanisms my name is thas Kon I'm the",
    "start": "7520",
    "end": "14639"
  },
  {
    "text": "chief pki officer at key factor and I'm David hook VP software",
    "start": "14639",
    "end": "19800"
  },
  {
    "text": "engineering crypto workshop and bansy Castle before we get into the details",
    "start": "19800",
    "end": "26080"
  },
  {
    "text": "about hybrid pkis and key encapsulation mechanisms we want to say that in case",
    "start": "26080",
    "end": "32078"
  },
  {
    "text": "you missed it we now have standardized post Quantum cryptographic algorithms in",
    "start": "32079",
    "end": "38399"
  },
  {
    "text": "the form of ml DSA fips 204 ml cam fips 203 and slh DSA fips 205 well pretty",
    "start": "38399",
    "end": "45399"
  },
  {
    "text": "mixed order there but you get it so what is important is that the old names that",
    "start": "45399",
    "end": "51039"
  },
  {
    "text": "we used to use which are of course much cooler the lithium kyber and SX plus",
    "start": "51039",
    "end": "56719"
  },
  {
    "text": "those are out and the new ones are in because we shouldn't make mix them up because mlsa is not the same as the",
    "start": "56719",
    "end": "63680"
  },
  {
    "text": "lithium but it's definitely a time to celebrate so this is a you know we've",
    "start": "63680",
    "end": "68840"
  },
  {
    "text": "worked in this industry for many years now and this is the biggest migration we've ever done in the cryptographic",
    "start": "68840",
    "end": "76439"
  },
  {
    "text": "industry so this is celebratory times and this is a Monumental moment it's",
    "start": "76439",
    "end": "83000"
  },
  {
    "text": "something you will tell your grand kids about you were here when we switch from",
    "start": "83000",
    "end": "88040"
  },
  {
    "text": "classic cryptography to post quum cryptography okay so one of the things",
    "start": "88040",
    "end": "95280"
  },
  {
    "text": "that's come up a lot with this of course is you know it's moving to the new algorithms what does it really mean in terms of how you want to do things in",
    "start": "95280",
    "end": "101960"
  },
  {
    "text": "the future and this idea of crypto agility uh has been talked about mainly",
    "start": "101960",
    "end": "107079"
  },
  {
    "text": "in the context of trying to prepare for the migration but the other thing that's really coming becoming obvious is the",
    "start": "107079",
    "end": "113159"
  },
  {
    "text": "crypto agility is still going to be required moving on now there's a definition here from a paper that was",
    "start": "113159",
    "end": "119280"
  },
  {
    "text": "published in 2021 crypto agility refers to the ability of an entity to replace",
    "start": "119280",
    "end": "125159"
  },
  {
    "text": "existing crypto Primitives algorithms and protocols with a new alternative quickly",
    "start": "125159",
    "end": "130440"
  },
  {
    "text": "inexpensively with no no or acceptable risk",
    "start": "130440",
    "end": "135800"
  },
  {
    "text": "exposure that those three things are quite important the thing about crypto agility is it's not just a matter of you",
    "start": "135800",
    "end": "142000"
  },
  {
    "text": "know being able to edit the code and replace one algorithm name with another or an algorithm identify with another",
    "start": "142000",
    "end": "148560"
  },
  {
    "text": "there is also this issue of expense risk and uh how what difficulties are faced by your user Community when you do the",
    "start": "148560",
    "end": "156239"
  },
  {
    "text": "adaption so with replacement uh replacement of course first step is to replace The Primitives",
    "start": "156239",
    "end": "163159"
  },
  {
    "text": "and keys with the use of New Primitives and keys uh really that is where the excitement begins though uh with",
    "start": "163159",
    "end": "169720"
  },
  {
    "text": "signature algorithms of course this is fairly straightforward I mean signature algorithms fundamentally haven't changed",
    "start": "169720",
    "end": "175080"
  },
  {
    "text": "uh the only issue that you've got is whether or not you've actually hardcoded the keys you're using in the first place or somehow hardcoded the",
    "start": "175080",
    "end": "181920"
  },
  {
    "text": "algorithms with key capsulation mechanisms however the process of moving from classical to pkc is actually more",
    "start": "181920",
    "end": "188440"
  },
  {
    "text": "complex uh King capsulation mechanisms are actually quite different what we used to dealing with uh for example two-",
    "start": "188440",
    "end": "196319"
  },
  {
    "text": "party symmetric key sharing protocols will need to be changed to incorporate a kdf in most cases and also to deal with",
    "start": "196319",
    "end": "203680"
  },
  {
    "text": "the fact that a chem actually generates a secret key internally rather than you providing it with one as you do with RSA",
    "start": "203680",
    "end": "209799"
  },
  {
    "text": "or doing calculations as you would with Diffy Helman where both parties arrive on together finally yeah multi-party",
    "start": "209799",
    "end": "216959"
  },
  {
    "text": "protocols need to be adjusted because chams at the moment are all two- party so being able to use multiple Diffy",
    "start": "216959",
    "end": "223680"
  },
  {
    "text": "Helman Keys finite field Diffy Helman Keys together uh is no longer really going to be an",
    "start": "223680",
    "end": "229879"
  },
  {
    "text": "option okay so looking at replacement further um ease of agility usually means",
    "start": "229879",
    "end": "236159"
  },
  {
    "text": "a cheaper cost of moving so a great measurement of whether or not you've actually prepared properly is you know",
    "start": "236159",
    "end": "241799"
  },
  {
    "text": "how much it's actually going to cost and costs of course are dollar costs convenience costs all those sort of",
    "start": "241799",
    "end": "247519"
  },
  {
    "text": "things moving from classical to pqc needs to consider resource costs as well so Keys signatures Cipher Texs are all",
    "start": "247519",
    "end": "255519"
  },
  {
    "text": "still bigger um more computation is often required uh bandwidth of course is",
    "start": "255519",
    "end": "260840"
  },
  {
    "text": "going to be something that you'll be using a lot more of too uh CPUs that are currently running flat chat will not be",
    "start": "260840",
    "end": "266520"
  },
  {
    "text": "able to support the throughput that you're currently seeing also you know the truth is there'll be",
    "start": "266520",
    "end": "272160"
  },
  {
    "text": "new algorithms coming so the move from pqc to pqc should be allowing should be",
    "start": "272160",
    "end": "277360"
  },
  {
    "text": "allowed for so you can take advantage of more efficient resource friendly algorithms because there is still a lot of ongoing development",
    "start": "277360",
    "end": "283479"
  },
  {
    "text": "work um things to think about are course there are some assets remote I mean if you're trying to change something on a",
    "start": "283479",
    "end": "288840"
  },
  {
    "text": "cloud-based server it's quite straightforward if the thing you're trying to change is actually on top of a 100t pole on the top of a remote",
    "start": "288840",
    "end": "295800"
  },
  {
    "text": "Mountain it could be a little bit more difficult uh dat migration also needs to",
    "start": "295800",
    "end": "301080"
  },
  {
    "text": "be considered because encrypted data that you've got stored at rest you will probably need to reencrypt or in some",
    "start": "301080",
    "end": "307400"
  },
  {
    "text": "cases you might just decide to get it off the internet all together or at least you know protect it some other way",
    "start": "307400",
    "end": "312479"
  },
  {
    "text": "so that you're only re-encrypting stuff that you actually need to use likewise there's also the cost of",
    "start": "312479",
    "end": "318520"
  },
  {
    "text": "updating Key Management systems and disposal of retired cryptographic assets uh you obviously need to make sure that",
    "start": "318520",
    "end": "324720"
  },
  {
    "text": "old keys and old data is disposed properly",
    "start": "324720",
    "end": "329840"
  },
  {
    "text": "so then with crypto agility there is the risk aspect as well do you have to take systems offline",
    "start": "331199",
    "end": "337720"
  },
  {
    "text": "to migrate what does that mean for your users does it mean they're going to have",
    "start": "337720",
    "end": "343000"
  },
  {
    "text": "not have access when they need it you know how do you manage that um okay you",
    "start": "343000",
    "end": "348479"
  },
  {
    "text": "take something offline to upgrade it what happens if it comes back up and it doesn't come back properly uh what do",
    "start": "348479",
    "end": "354520"
  },
  {
    "text": "you do if there are issues do you have some Incident Management response in place uh how many migration processes",
    "start": "354520",
    "end": "361360"
  },
  {
    "text": "have that you've got can you actually involve uh automation I mean there'll be a lot of certificates to update for",
    "start": "361360",
    "end": "366840"
  },
  {
    "text": "example this is clearly an area where tools will help will any of the migration process",
    "start": "366840",
    "end": "373000"
  },
  {
    "text": "create a security risk in themselves and how can those risks be mitigated uh ideally it wouldn't be",
    "start": "373000",
    "end": "378880"
  },
  {
    "text": "turning off encryption temporarily but yeah the reality is that while stuff's been taken offline and bought back",
    "start": "378880",
    "end": "384080"
  },
  {
    "text": "online there might be gaps there might be data written to diss that you may not be aware of there might be a whole bunch",
    "start": "384080",
    "end": "389400"
  },
  {
    "text": "of things like that if you're not monitoring all that carefully there may be stuff left around after migration has taken place which could create problems",
    "start": "389400",
    "end": "397280"
  },
  {
    "text": "not to mention actual issues with the migration itself and finally yeah what are your third parties doing so are any",
    "start": "397280",
    "end": "403880"
  },
  {
    "text": "of these on the critical path of migration and will they be ready in time uh it's not just you most likely that is",
    "start": "403880",
    "end": "411919"
  },
  {
    "text": "actually managing a cryptographic assets you'll probably have third party applications which are actually also",
    "start": "411919",
    "end": "417319"
  },
  {
    "text": "doing involved in this by proxy they also need to be",
    "start": "417319",
    "end": "422478"
  },
  {
    "text": "updated okay so one of the migration mechanisms that's been uh put forward is",
    "start": "424520",
    "end": "429960"
  },
  {
    "text": "the idea of hybrid certificates so the concept here really is that the Dual",
    "start": "429960",
    "end": "435120"
  },
  {
    "text": "key uh the mechanisms most of the mechanisms that are provided in the context of hybrids are actually there to",
    "start": "435120",
    "end": "441120"
  },
  {
    "text": "allow you to introduce the postquantum key into your system without actually",
    "start": "441120",
    "end": "446240"
  },
  {
    "text": "having migrated to it properly so they really uh what you call a forward provisioning",
    "start": "446240",
    "end": "451319"
  },
  {
    "text": "mechanism there's currently four different approaches of this which are all in different stages of",
    "start": "451319",
    "end": "456400"
  },
  {
    "text": "standardization uh the one that is most standardized at the moment is a system",
    "start": "456400",
    "end": "462199"
  },
  {
    "text": "that was previously known by Catalyst from the company that originally developed it and that was standardized",
    "start": "462199",
    "end": "468479"
  },
  {
    "text": "in x509 in 2019 uh there's several new standards",
    "start": "468479",
    "end": "473800"
  },
  {
    "text": "one is Delta which is also known as chameleon which is a draft in the ITF process",
    "start": "473800",
    "end": "479879"
  },
  {
    "text": "uh there's composite which is uh another way of providing multi-algorithm support but via the Declaration of a new",
    "start": "479879",
    "end": "486120"
  },
  {
    "text": "algorithm so it doesn't quite have the backwards compatibility aspects that uh Delta and the x509 standard do and it's",
    "start": "486120",
    "end": "495199"
  },
  {
    "text": "also in draft although some bits of the composite idea are actually coming out of draft at this point and then finally",
    "start": "495199",
    "end": "501639"
  },
  {
    "text": "there's a a concept called related certificates which is another iotf draft and it's it's not actually dual",
    "start": "501639",
    "end": "508280"
  },
  {
    "text": "key but it does actually give you a mechanism for um marking a particular postquantum certificate as been related",
    "start": "508280",
    "end": "515080"
  },
  {
    "text": "to an earlier certificate that you may not be able to issue reissue rather so that's also in draft in the ITF and",
    "start": "515080",
    "end": "521959"
  },
  {
    "text": "that's also managed via extensions now with backwards",
    "start": "521959",
    "end": "528680"
  },
  {
    "text": "compatibility as I mentioned Catalyst Delta and related certificates are all extension based and the use of the",
    "start": "528680",
    "end": "534080"
  },
  {
    "text": "extension base mechanism means that uh fundamentally as long as the extensions Mark non-critical you should should find",
    "start": "534080",
    "end": "539839"
  },
  {
    "text": "that it's ignored by whatever you're giving it to now Catalyst allows for the addition",
    "start": "539839",
    "end": "545360"
  },
  {
    "text": "of a second public key in a second signature uh the Delta approach actually",
    "start": "545360",
    "end": "551200"
  },
  {
    "text": "uh the extension provides a uh template basically for constructing a new certificate using the carrying",
    "start": "551200",
    "end": "558880"
  },
  {
    "text": "certificate and the template in the extension actually allows you to fully specify a completely different",
    "start": "558880",
    "end": "565680"
  },
  {
    "text": "certificate to the one that's actually carrying it and then finally related certificates as I said before basically",
    "start": "565680",
    "end": "571880"
  },
  {
    "text": "the idea there is that um they establish a relationship between the new certificate and the old",
    "start": "571880",
    "end": "579880"
  },
  {
    "text": "certificate so the kind of issues that we've got um at the moment and this is due to the",
    "start": "582720",
    "end": "589800"
  },
  {
    "text": "fact that things are in a state of flux only Delta and related certificates include attributes defined for use and",
    "start": "589800",
    "end": "595000"
  },
  {
    "text": "certification requests so these are the only only really the only two that actually have a standardized mechanism",
    "start": "595000",
    "end": "601680"
  },
  {
    "text": "for providing certification requests there is a certification request attribute for Catalyst but it",
    "start": "601680",
    "end": "607440"
  },
  {
    "text": "relies on a definition but what we're currently using relies on a definition in what's known as the trakowski draft",
    "start": "607440",
    "end": "613240"
  },
  {
    "text": "which was the original Catalyst proposal the ITF which has now expired and hasn't",
    "start": "613240",
    "end": "618640"
  },
  {
    "text": "come back to life um on the other hand Delta and related certificates are actually still",
    "start": "618640",
    "end": "624320"
  },
  {
    "text": "in draft themselves so it doesn't really matter which way you go you're basically stuck using a draft and some aspect now",
    "start": "624320",
    "end": "632200"
  },
  {
    "text": "composite also requires the implementation of new public key and algorithm types so with a composite",
    "start": "632200",
    "end": "637360"
  },
  {
    "text": "certificate you can't just uh send it to a device that's got no idea it's coming you really have to have upgraded the",
    "start": "637360",
    "end": "643160"
  },
  {
    "text": "software on that device first before it can make effective use of it the other thing too about all these",
    "start": "643160",
    "end": "649560"
  },
  {
    "text": "mechanisms is they really are designed for transition if these certificates hang around for too long they do have",
    "start": "649560",
    "end": "654839"
  },
  {
    "text": "the potential possibly due to uh mouth or just uh minor bugs in the",
    "start": "654839",
    "end": "661040"
  },
  {
    "text": "way the migration was handled T to be using a downgrade Tech so ideally you'd",
    "start": "661040",
    "end": "666200"
  },
  {
    "text": "make use of these while you need them and then you'd actually move to regular certificates with single",
    "start": "666200",
    "end": "671800"
  },
  {
    "text": "Keys now we'll look into how this specifically relates to pki and signing",
    "start": "671800",
    "end": "678639"
  },
  {
    "text": "and I'll start by looking at some of the protocols and the crypto agility aspects",
    "start": "678639",
    "end": "683920"
  },
  {
    "text": "that these have you know these Protocols are things that we've been using now for a long time and you can see some you",
    "start": "683920",
    "end": "690240"
  },
  {
    "text": "know how they will cope without significant changes you could say so we put a green checkbox on CMP or",
    "start": "690240",
    "end": "697079"
  },
  {
    "text": "certificate management protocol uh which handles you know plain signatures and small data and the",
    "start": "697079",
    "end": "705079"
  },
  {
    "text": "interesting thing is that which we'll talk more about later is that it has the",
    "start": "705079",
    "end": "710200"
  },
  {
    "text": "capability of using the crmf Certificate request format which actually can handle key encapsulation mechanisms it can also",
    "start": "710200",
    "end": "717440"
  },
  {
    "text": "do p pkcs can CSR so it's quite uh very flexible and and agile then we have EST",
    "start": "717440",
    "end": "726600"
  },
  {
    "text": "which is somewhere in between I would say uh it uses TLS and plain signatures",
    "start": "726600",
    "end": "732320"
  },
  {
    "text": "on fairly small data which makes it you know agile enough uh for moving to",
    "start": "732320",
    "end": "737839"
  },
  {
    "text": "postor algorithms from that aspect uh the only downside is that it relies on",
    "start": "737839",
    "end": "743320"
  },
  {
    "text": "pkcs 10 certificate signing request which uh today require",
    "start": "743320",
    "end": "749720"
  },
  {
    "text": "signatures which is something that key encapsulation mechanisms cannot handle so it's not perfect it's not bad but",
    "start": "749720",
    "end": "758639"
  },
  {
    "text": "it's not perfect either and then we have a scap or which is a fairly popular protocol in",
    "start": "758639",
    "end": "766880"
  },
  {
    "text": "a lot of instances today which does both signing and encryption in a way that",
    "start": "766880",
    "end": "774040"
  },
  {
    "text": "typically relies on RSA keys today so which will be quite hard hard to move",
    "start": "774040",
    "end": "780360"
  },
  {
    "text": "over to using postquantum cryptographic algorithms without significant changes to algorithms so uh it might be good to",
    "start": "780360",
    "end": "790079"
  },
  {
    "text": "look over algor or protocol usage for Solutions as you go forward during the",
    "start": "790079",
    "end": "795839"
  },
  {
    "text": "uh cryptographic migration and if we look at hybrid pki",
    "start": "795839",
    "end": "804399"
  },
  {
    "text": "there is as David mentioned currently only one standard out there which is the x59 alternative keys and",
    "start": "804399",
    "end": "811959"
  },
  {
    "text": "signatures uh but as also as da mentioned x59 does doesn't specify",
    "start": "811959",
    "end": "817240"
  },
  {
    "text": "certificate signing request so how to request a certificate you can get a standard certificate but uh it's hard to",
    "start": "817240",
    "end": "824399"
  },
  {
    "text": "request if you don't have a request format then of course we have implemented the draft truskowski as",
    "start": "824399",
    "end": "831959"
  },
  {
    "text": "David also mentioned by a command so we can generate these draft CSR at least",
    "start": "831959",
    "end": "837360"
  },
  {
    "text": "and process these so considering the uh say almost fully",
    "start": "837360",
    "end": "844600"
  },
  {
    "text": "standardized approach here there are likely some dragons you know lingering",
    "start": "844600",
    "end": "849759"
  },
  {
    "text": "in the bushes here so and U of course we want to",
    "start": "849759",
    "end": "854880"
  },
  {
    "text": "encourage viewers of this to who will be the first to submit a pull request to",
    "start": "854880",
    "end": "860920"
  },
  {
    "text": "our edbc e rest client to handle uh hybrid CSR which it doesn't do today",
    "start": "860920",
    "end": "867720"
  },
  {
    "text": "shouldn't be a big change though so with all that as background I think",
    "start": "867720",
    "end": "873839"
  },
  {
    "text": "it's probably worth just taking a bit of time to have a look at the current state of play um as Thomas said at the beginning",
    "start": "873839",
    "end": "880839"
  },
  {
    "text": "you know we've just gone from The Fairly coolly named KY D lithium and well",
    "start": "880839",
    "end": "886959"
  },
  {
    "text": "Sphinx plus um to the official ml CM MLD DSA and slh",
    "start": "886959",
    "end": "893880"
  },
  {
    "text": "DSA and as Thomas also pointed out it's very important to realize that those",
    "start": "893880",
    "end": "899120"
  },
  {
    "text": "final standardized arams are not the same as kyber Del lithium and sphinx plus so if you're going to be using them",
    "start": "899120",
    "end": "905759"
  },
  {
    "text": "make sure the implementation you're using is MLM or mlsa or slh",
    "start": "905759",
    "end": "911680"
  },
  {
    "text": "DSA now the other thing that's going on of course is round four is currently",
    "start": "911680",
    "end": "917320"
  },
  {
    "text": "drawing to a close so round four was a extra round that was started to select another key en capsulation",
    "start": "917320",
    "end": "923880"
  },
  {
    "text": "mechanism basically it's now between two algorithms one called bike and the other one called HQ",
    "start": "923880",
    "end": "929480"
  },
  {
    "text": "see uh there's a third algorithm that's also in the round classic molise but it looks like it's going to be standardized",
    "start": "929480",
    "end": "935759"
  },
  {
    "text": "outside of the nist process anyway uh the question really I think for nist",
    "start": "935759",
    "end": "941240"
  },
  {
    "text": "really at the moment is more whether or not they're going to join in with their own standard or just refer people to the",
    "start": "941240",
    "end": "946759"
  },
  {
    "text": "other one the other thing of course too is there is a fourth um signature AR that's",
    "start": "946759",
    "end": "953160"
  },
  {
    "text": "not in this slide called Falcon and uh there should be a draft standard for that coming out about the",
    "start": "953160",
    "end": "959120"
  },
  {
    "text": "same time round four was",
    "start": "959120",
    "end": "962360"
  },
  {
    "text": "closing so further to this and and just going back to the comment I made before about pqc to pqc migration and the need",
    "start": "964959",
    "end": "971680"
  },
  {
    "text": "for crypto agility for that there's another signature round that's currently taking place it's got 40 candidates 30",
    "start": "971680",
    "end": "978279"
  },
  {
    "text": "of them are still standing seven of them are lattice base uh some of them are smaller some of",
    "start": "978279",
    "end": "983360"
  },
  {
    "text": "them might be more useful some of them are interesting um nist is going to be",
    "start": "983360",
    "end": "989199"
  },
  {
    "text": "announcing the next round of that sometime around the end of the year as well apparently but yeah it's just",
    "start": "989199",
    "end": "996440"
  },
  {
    "text": "further Evidence so that you know there's a lot of work still going on in this area so even though we do have three fairly good standards right now",
    "start": "996440",
    "end": "1003120"
  },
  {
    "text": "that we can use today it's important to keep in mind that you may want to use move to one of the other ones",
    "start": "1003120",
    "end": "1009920"
  },
  {
    "text": "later and for example yeah there's a variant in the process of sphinx plus",
    "start": "1011399",
    "end": "1016920"
  },
  {
    "text": "which is actually based on ascon which was winner of the uh lightweight encryption competition so for small",
    "start": "1016920",
    "end": "1023040"
  },
  {
    "text": "device people uh this particular signature algorithm could be quite useful in terms of the fact that if",
    "start": "1023040",
    "end": "1029880"
  },
  {
    "text": "you've implemented ascon you can actually then provide a pko mechanism on top of it I assume it because it stands up",
    "start": "1029880",
    "end": "1036798"
  },
  {
    "text": "securely but at the moment there's no reason to think it",
    "start": "1036799",
    "end": "1041120"
  },
  {
    "text": "won't and yeah the other thing that's going on of course is with uh new algorithms we need new",
    "start": "1042400",
    "end": "1048960"
  },
  {
    "text": "public key formats new private key formats uh the public key formats are pretty much decided uh there's still a",
    "start": "1048960",
    "end": "1054840"
  },
  {
    "text": "few conversations going on about how private Keys should be done and the ITF drafts are that are going through the",
    "start": "1054840",
    "end": "1061000"
  },
  {
    "text": "process which will document this are currently getting finished up right",
    "start": "1061000",
    "end": "1065919"
  },
  {
    "text": "now yes of course as we mentioned before x509 actually includes the alt",
    "start": "1069280",
    "end": "1075840"
  },
  {
    "text": "extensions but lacks a standardized Co me mechanism um and yeah there's all",
    "start": "1075840",
    "end": "1082520"
  },
  {
    "text": "these other ITF drafts which are going on certificates cryptographic Mage syntax is quite a good one for doing",
    "start": "1082520",
    "end": "1089280"
  },
  {
    "text": "using key encapsulation mechanisms now in uh CMS there's various approaches of course",
    "start": "1089280",
    "end": "1095600"
  },
  {
    "text": "certification request management and various things like that too so a lot of standards and revised standards coming",
    "start": "1095600",
    "end": "1102760"
  },
  {
    "text": "out so before we dig into showing what you can do uh we",
    "start": "1102760",
    "end": "1109440"
  },
  {
    "text": "just briefly mention the quantum ready Solutions of key factor so we have a",
    "start": "1109440",
    "end": "1115440"
  },
  {
    "text": "basically a full Suite of pki and cryptography related tools we have key",
    "start": "1115440",
    "end": "1120799"
  },
  {
    "text": "factor command that can do inventory of your existing certificates you know what you have and on the other hand help you",
    "start": "1120799",
    "end": "1127720"
  },
  {
    "text": "automate replacement of certificates then of course we have the bouncy cost",
    "start": "1127720",
    "end": "1133039"
  },
  {
    "text": "cryptographic apis which is H David here which implements all the nitty grd the",
    "start": "1133039",
    "end": "1138960"
  },
  {
    "text": "details the algorithms everything we need to build things like egca on top of that to issue certificates and sign",
    "start": "1138960",
    "end": "1145880"
  },
  {
    "text": "server in order to issue or to sign artifacts using of course the",
    "start": "1145880",
    "end": "1151360"
  },
  {
    "text": "postquantum algorithms basically in the bouncy castle case U we've actually got support",
    "start": "1151360",
    "end": "1158240"
  },
  {
    "text": "now for all the nist standards uh there's a beta that's currently available and hopefully we'll",
    "start": "1158240",
    "end": "1164799"
  },
  {
    "text": "have an actual proper release out in the next few weeks um we're currently doing",
    "start": "1164799",
    "end": "1169840"
  },
  {
    "text": "algorithm testing with the nist acvp system so we feel confident the implementations themselves all right",
    "start": "1169840",
    "end": "1176000"
  },
  {
    "text": "we've done interoperation testing as well uh on the public key certificate side of things thanks to the iotf",
    "start": "1176000",
    "end": "1181919"
  },
  {
    "text": "hackathon group and uh yeah we've got private Keys encoding but it remains to be seen",
    "start": "1181919",
    "end": "1188480"
  },
  {
    "text": "whether that would be the ultimate way that they'll encode um we probably move to using a seed based mechanism though",
    "start": "1188480",
    "end": "1194159"
  },
  {
    "text": "for the U final release in the case of uh uh ml cm and ml dsas that seems to be",
    "start": "1194159",
    "end": "1201600"
  },
  {
    "text": "where it's all heading now we do have support in place for the",
    "start": "1201600",
    "end": "1206919"
  },
  {
    "text": "different hybrid alt mechanisms duel Delta and chameleon are also supported",
    "start": "1206919",
    "end": "1212559"
  },
  {
    "text": "as is composite and we're currently in the process of adding some certificate binding support too uh the only real",
    "start": "1212559",
    "end": "1219760"
  },
  {
    "text": "issue with certificate binding is they still hav allocated the oids for that so we're probably going to have to use an experimental oid for that at the moment",
    "start": "1219760",
    "end": "1226039"
  },
  {
    "text": "you need to wait until the actual standard is RA ifed before actually trying to use that in",
    "start": "1226039",
    "end": "1232520"
  },
  {
    "text": "production then finally um we've done updates to cryptographic miss sytax so there's already support for the newly",
    "start": "1232520",
    "end": "1239159"
  },
  {
    "text": "released uh uh chem recipient info structure uh We've that's allowed us to",
    "start": "1239159",
    "end": "1246799"
  },
  {
    "text": "actually do additional updates to the certificate management protocol uh Certificate request message format as",
    "start": "1246799",
    "end": "1252840"
  },
  {
    "text": "well which take advantage of the fact that the chem recipient is now in place",
    "start": "1252840",
    "end": "1258120"
  },
  {
    "text": "and we're also Al in the process of uh adding some of the tless cipher Suites which have been proposed just in draft",
    "start": "1258120",
    "end": "1264880"
  },
  {
    "text": "as experimental and that brings us to our",
    "start": "1264880",
    "end": "1270679"
  },
  {
    "text": "demos where we're going to try to show a couple of these things that we've been talking to we're talking about and uh",
    "start": "1270679",
    "end": "1278159"
  },
  {
    "text": "see that it's not only talk that you can start doing things for",
    "start": "1278159",
    "end": "1285159"
  },
  {
    "text": "real and yeah I mean one thing that the uh is",
    "start": "1285320",
    "end": "1291960"
  },
  {
    "text": "really interesting and fun and important is that with the standardization of the",
    "start": "1291960",
    "end": "1297520"
  },
  {
    "text": "algorithms you can actually start to use things in production because now we had several years where we you know had",
    "start": "1297520",
    "end": "1304559"
  },
  {
    "text": "proof of concept and things with the the draft algorithms but this was always not",
    "start": "1304559",
    "end": "1309720"
  },
  {
    "text": "for production because it's going to change and you will have to throw everything away but if you do something",
    "start": "1309720",
    "end": "1315440"
  },
  {
    "text": "with ML DSA or ml cam today you it's going to be inoperable and it's going to",
    "start": "1315440",
    "end": "1320559"
  },
  {
    "text": "live for many many years so uh of course the only snag right now",
    "start": "1320559",
    "end": "1328360"
  },
  {
    "text": "is that while the standards are here and we're implementing it x59 is done there",
    "start": "1328360",
    "end": "1334159"
  },
  {
    "text": "is a very huge ecosystem of course you know there's TLS and CMS that we already",
    "start": "1334159",
    "end": "1339799"
  },
  {
    "text": "mentioned and different providers and venders and uh implementations are still",
    "start": "1339799",
    "end": "1345799"
  },
  {
    "text": "in a bit of a flux so but I give it a a couple of months more and will surely be",
    "start": "1345799",
    "end": "1353559"
  },
  {
    "text": "in a much better position we actually see a little bit about this in the",
    "start": "1353559",
    "end": "1360720"
  },
  {
    "text": "demos so what we're going to start with in the demo is to create a postquantum",
    "start": "1360960",
    "end": "1366679"
  },
  {
    "text": "hybrid pki which means of course a pki which uses a hybrid certificate the uh",
    "start": "1366679",
    "end": "1372679"
  },
  {
    "text": "x509 Al sign Al key and signature hybrid standard uh use one classic algorithm EC",
    "start": "1372679",
    "end": "1380240"
  },
  {
    "text": "DSA and one postquantum algorithm AML",
    "start": "1380240",
    "end": "1385440"
  },
  {
    "text": "DSA and everything the only thing we need before to get started is an egbc",
    "start": "1385480",
    "end": "1392360"
  },
  {
    "text": "container and uh with that we will create a CA hierarchy with a classic uh",
    "start": "1392360",
    "end": "1398360"
  },
  {
    "text": "you know CA setup with a root CA using a higher security level and a subc using",
    "start": "1398360",
    "end": "1407640"
  },
  {
    "text": "slightly smaller keys and then finally an end entity which will be the next",
    "start": "1407640",
    "end": "1413279"
  },
  {
    "text": "phase of the demo so here we",
    "start": "1413279",
    "end": "1418799"
  },
  {
    "text": "will go into the uh demo so here we have",
    "start": "1418799",
    "end": "1424039"
  },
  {
    "text": "a branch of egbc 9 which will come later which will be the upcoming uh release",
    "start": "1424039",
    "end": "1432159"
  },
  {
    "text": "that supports eventually the final standards of ml DSA Etc you can see here",
    "start": "1432159",
    "end": "1438279"
  },
  {
    "text": "that I started a which we what we call T setup simple which gives you a warning a",
    "start": "1438279",
    "end": "1445400"
  },
  {
    "text": "security warning there which is just a nice way to tell you that if you're going to production it will be uh things",
    "start": "1445400",
    "end": "1454480"
  },
  {
    "text": "to do so I'll do in in a non-production setup here so the first thing we have to",
    "start": "1454480",
    "end": "1460880"
  },
  {
    "text": "do is create what we call a crypto token which is where we generate the keys in egca so first I will create a cryp this",
    "start": "1460880",
    "end": "1468480"
  },
  {
    "text": "how can call pqc Root it will be software Keys only no HSM here so far",
    "start": "1468480",
    "end": "1475240"
  },
  {
    "text": "and I create the crypto token and it's done and then I will create generate keys on the crypto token for the root CA",
    "start": "1475240",
    "end": "1483000"
  },
  {
    "text": "I will generate uh two keys since it's going to be hybrid and we'll use nist security",
    "start": "1483000",
    "end": "1490520"
  },
  {
    "text": "level 256bit on this one which means a classic signing key of uh ecp2",
    "start": "1490520",
    "end": "1500158"
  },
  {
    "text": "521 and we also need to generate a test key for this this is just an internal",
    "start": "1500279",
    "end": "1505640"
  },
  {
    "text": "dbca thing in order to make sure things are running and we will generate a what we",
    "start": "1505640",
    "end": "1513520"
  },
  {
    "text": "call a default key which is just an internal key it's actually not going to be used but it has to be there for uh",
    "start": "1513520",
    "end": "1520880"
  },
  {
    "text": "things to be created as we want and finally we will create our post",
    "start": "1520880",
    "end": "1527480"
  },
  {
    "text": "quantum key which where we will use MLD DSA 87 which is the level five of",
    "start": "1527480",
    "end": "1535200"
  },
  {
    "text": "mlsa after this competition so that's it now we have our",
    "start": "1535200",
    "end": "1541600"
  },
  {
    "text": "keys for the root CA we will do the same for the Suba create the crypto token for the",
    "start": "1541600",
    "end": "1550240"
  },
  {
    "text": "subc and once that is done we will create a signature key in this case we",
    "start": "1550600",
    "end": "1557440"
  },
  {
    "text": "will use a 3 at4 for the",
    "start": "1557440",
    "end": "1562158"
  },
  {
    "text": "subc and as just as for the root CA we need a test key which is just used to do",
    "start": "1567440",
    "end": "1573760"
  },
  {
    "text": "some internal tests uh we also need a default key which will not be used by this CA but uh it's",
    "start": "1573760",
    "end": "1582760"
  },
  {
    "text": "needed and finally we our post Quantum key which where we use mlsa 65 which",
    "start": "1586000",
    "end": "1593520"
  },
  {
    "text": "matches security level of uh P 384 of ecdsa so now we have our keys created",
    "start": "1593520",
    "end": "1601240"
  },
  {
    "text": "for our C with that done we can move on to",
    "start": "1601240",
    "end": "1606919"
  },
  {
    "text": "create the ca so here we see we have unused crypto tokens so now we'll put them in use by creating two CA of course",
    "start": "1606919",
    "end": "1615880"
  },
  {
    "text": "first we will create our uh root CA you see root I will call",
    "start": "1615880",
    "end": "1622200"
  },
  {
    "text": "it I will select the crypto token I just created of course and the signature",
    "start": "1622200",
    "end": "1628120"
  },
  {
    "text": "algorithm the classic signature algorithm will be shot 512 with ecdsa so",
    "start": "1628120",
    "end": "1634039"
  },
  {
    "text": "it automatically friendly enough selects the assign key p521 for me so as for the hybrid I will",
    "start": "1634039",
    "end": "1642919"
  },
  {
    "text": "select the signature algorithm MLD DSA 87 because now ebca recognizes that I",
    "start": "1642919",
    "end": "1648039"
  },
  {
    "text": "have have only an mlsa 87 key on this",
    "start": "1648039",
    "end": "1653200"
  },
  {
    "text": "crypto token uh I will finalize with giving this CA validity that's all I need to do",
    "start": "1653200",
    "end": "1660360"
  },
  {
    "text": "I can of course specify a lot of other fields but for a simple root CA this is",
    "start": "1660360",
    "end": "1665840"
  },
  {
    "text": "enough it will be kind of best practice uh content of the",
    "start": "1665840",
    "end": "1671640"
  },
  {
    "text": "certificate now I will create a uh pqc sub CA so the only difference here of",
    "start": "1671640",
    "end": "1677720"
  },
  {
    "text": "course is that it will be signed by the root CA I will use the subc crypto token",
    "start": "1677720",
    "end": "1683720"
  },
  {
    "text": "I will use shot 384 with ecdsa and hence it selects my sign key P",
    "start": "1683720",
    "end": "1691000"
  },
  {
    "text": "384 uh and as a uh alternative signature algorithm I select MLD DSA 65 which of",
    "start": "1691279",
    "end": "1699559"
  },
  {
    "text": "course goes together with my sign key ml DSA 65 now there's a little bit more to do",
    "start": "1699559",
    "end": "1706960"
  },
  {
    "text": "instead of a self sign CA I will say that this would be signed by our pqc",
    "start": "1706960",
    "end": "1712120"
  },
  {
    "text": "route and I will give this a slightly shorter validity of one year you can uh",
    "start": "1712120",
    "end": "1719480"
  },
  {
    "text": "easily select this and create and it's fast of course cryptography is fast so",
    "start": "1719480",
    "end": "1726039"
  },
  {
    "text": "now we have our casa and we can go in and look at the ca certificates in the",
    "start": "1726039",
    "end": "1732279"
  },
  {
    "text": "ca structure and crls so we can see here on the pqc sub for example you can view",
    "start": "1732279",
    "end": "1738440"
  },
  {
    "text": "the certificate and when we look at this we see that it has two keys one uh EC uh P",
    "start": "1738440",
    "end": "1746559"
  },
  {
    "text": "384 key it's of course signed by the root CA and it has the alternative",
    "start": "1746559",
    "end": "1752159"
  },
  {
    "text": "public key of MLD DSA 65 here we print out the supposedly n security level of",
    "start": "1752159",
    "end": "1757880"
  },
  {
    "text": "192 bits and we also see that there are two signature algorithms one classic which",
    "start": "1757880",
    "end": "1764240"
  },
  {
    "text": "is a standard certificate signature algorithm sha 5 12 with is cdsa because",
    "start": "1764240",
    "end": "1769880"
  },
  {
    "text": "it's signed by the C root CA and the alternative signature algorithm of mlsa",
    "start": "1769880",
    "end": "1776159"
  },
  {
    "text": "8 to7 also from the root CA which had those keys",
    "start": "1776159",
    "end": "1782440"
  },
  {
    "text": "so that's uh how easy it is to create a hybrid pki with ML DSA or with ecdsa and",
    "start": "1782440",
    "end": "1792399"
  },
  {
    "text": "ml DSA and of course there are other algorithms that you can select",
    "start": "1792399",
    "end": "1798200"
  },
  {
    "text": "now with our hybrid pki created we can move on to create an ml cm and entty",
    "start": "1798200",
    "end": "1804480"
  },
  {
    "text": "certificate and this we will do using CMP or certificate management protocol",
    "start": "1804480",
    "end": "1810799"
  },
  {
    "text": "that we talked about earlier and ml cam which interestingly enough is unable to create a classic proof of possession for",
    "start": "1810799",
    "end": "1818880"
  },
  {
    "text": "those who don't know proof of possession is a structure used in certificate signing request where you take the",
    "start": "1818880",
    "end": "1825039"
  },
  {
    "text": "certificate signing request contained in the public key and sign it with the corresponding private key and this",
    "start": "1825039",
    "end": "1830760"
  },
  {
    "text": "enables anyone who receives this CSR to verify that whoever created the CSR is",
    "start": "1830760",
    "end": "1837440"
  },
  {
    "text": "in possession of both the public and the private key so you're not sending a CSR with someone else public key in it so",
    "start": "1837440",
    "end": "1844000"
  },
  {
    "text": "this is very useful and uh but with mlcm we have to do it in slightly different way that we're used",
    "start": "1844000",
    "end": "1851399"
  },
  {
    "text": "to so the starting point is of course our egbc container started with our",
    "start": "1851399",
    "end": "1856639"
  },
  {
    "text": "postquantum hybrid p I created and we will use the egbc CMP client which is a",
    "start": "1856639",
    "end": "1863519"
  },
  {
    "text": "tool that comes with egbc to run our CMP",
    "start": "1863519",
    "end": "1869519"
  },
  {
    "text": "protocol and what we will do briefly overview we will create the CMP alas we will create an end entity in edca we",
    "start": "1869519",
    "end": "1876760"
  },
  {
    "text": "will create this crmf request requesting indirect proof of possession we'll",
    "start": "1876760",
    "end": "1883000"
  },
  {
    "text": "mention that a little bit more in detail we will issue the certificate from the ca using cm m p and the indirect proof",
    "start": "1883000",
    "end": "1890039"
  },
  {
    "text": "of possession means that the certificate is actually sent back encrypted to the client so the indirection here means",
    "start": "1890039",
    "end": "1896360"
  },
  {
    "text": "that well if the client is able to decrypt the certificate then the client",
    "start": "1896360",
    "end": "1901880"
  },
  {
    "text": "has proven that he is in possession of the corresponding private key so that is",
    "start": "1901880",
    "end": "1908080"
  },
  {
    "text": "done when the CMP response is received and the issued certificate decrypted",
    "start": "1908080",
    "end": "1916120"
  },
  {
    "text": "so let's jump into the demo in order to issue a certificate with egb save we need to create a what is called an end",
    "start": "1917960",
    "end": "1925360"
  },
  {
    "text": "entity so we start by creating an end entity so we go to ra functions add end",
    "start": "1925360",
    "end": "1930720"
  },
  {
    "text": "entity and maybe embarrassing embarrassingly enough I will not use a",
    "start": "1930720",
    "end": "1936559"
  },
  {
    "text": "very production ready setup here so I will use this pre-installed empty profile install of course in a real",
    "start": "1936559",
    "end": "1943080"
  },
  {
    "text": "environment you would create a your a new uh end entity profile file",
    "start": "1943080",
    "end": "1948960"
  },
  {
    "text": "containing only the fields you need etc etc but for the sake of keeping the demo",
    "start": "1948960",
    "end": "1955360"
  },
  {
    "text": "short enough I will use the empty empty one there are lots of tutorials how to create end entity profiles so I will",
    "start": "1955360",
    "end": "1962200"
  },
  {
    "text": "create an end entity called CMP inert and give it a onetime enrollment",
    "start": "1962200",
    "end": "1968720"
  },
  {
    "text": "code I will use the uh the same common name as the username here we map this",
    "start": "1968720",
    "end": "1975320"
  },
  {
    "text": "actually so I copy the field and paste it in there as a common name so we'll",
    "start": "1975320",
    "end": "1980760"
  },
  {
    "text": "make a very simple end entity with only common name and then we can scroll down",
    "start": "1980760",
    "end": "1986200"
  },
  {
    "text": "and select the ca so we'll issue of course from the postquantum sub CA and",
    "start": "1986200",
    "end": "1991720"
  },
  {
    "text": "we will use use generated Keys which we will do from our CMP",
    "start": "1991720",
    "end": "1996880"
  },
  {
    "text": "client so with that end entity added we also need a an end point for",
    "start": "1996880",
    "end": "2003679"
  },
  {
    "text": "CMP so this is done in egbc by creating a cmpa yes because you can configure",
    "start": "2003679",
    "end": "2009080"
  },
  {
    "text": "multiple CMP end points with different configuration and different policy so",
    "start": "2009080",
    "end": "2015159"
  },
  {
    "text": "but here we will add a CMP alias in client mode which we will call it",
    "start": "2015159",
    "end": "2021840"
  },
  {
    "text": "CMP uh which is a default one we will use hm authentication using the onetime",
    "start": "2021840",
    "end": "2028519"
  },
  {
    "text": "enrollment code we will use uh map use the CN to map the request to the end",
    "start": "2028519",
    "end": "2036600"
  },
  {
    "text": "entity we just created and we'll just keep this uh CMP endpoint simple and don't need to return so many",
    "start": "2036600",
    "end": "2044000"
  },
  {
    "text": "additional C certificates and such so if we save there we have our CMP endpoint",
    "start": "2044000",
    "end": "2049800"
  },
  {
    "text": "created and now we can move into creating the uh actually end entity",
    "start": "2049800",
    "end": "2056679"
  },
  {
    "text": "certificate which is the uh very interesting part in this demo",
    "start": "2056679",
    "end": "2064520"
  },
  {
    "text": "okay we switch over to our CMP client which is a tool that comes with egca",
    "start": "2068760",
    "end": "2074679"
  },
  {
    "text": "it's called the CMP client do at s and uh we have a nice command line",
    "start": "2074679",
    "end": "2080839"
  },
  {
    "text": "here in the command line we say that uh we give the command crmf which means",
    "start": "2080839",
    "end": "2086638"
  },
  {
    "text": "that we will create a crmf uh request message of course we pointed to a URL",
    "start": "2086639",
    "end": "2093960"
  },
  {
    "text": "which is our CMP Alias that we just created we provide the CMP insert common",
    "start": "2093960",
    "end": "2101040"
  },
  {
    "text": "name the same as we added with the end entity we give a password which is for",
    "start": "2101040",
    "end": "2107320"
  },
  {
    "text": "the HM authentication and we say that it",
    "start": "2107320",
    "end": "2112839"
  },
  {
    "text": "will generate an ml cam 512 key uh which will be the requested key key",
    "start": "2112839",
    "end": "2119720"
  },
  {
    "text": "encapsulation mechanism and we'll give the flag to say include Popa which is include proof of possession which then",
    "start": "2119720",
    "end": "2127760"
  },
  {
    "text": "of course will create this uh request for an encrypted uh proof of possession",
    "start": "2127760",
    "end": "2135839"
  },
  {
    "text": "so running a command it goes fast so it first prints out a bunch of uh things",
    "start": "2135839",
    "end": "2141280"
  },
  {
    "text": "about request but it specifically says that it added proof of possession of type two anchor resert which is you know",
    "start": "2141280",
    "end": "2149680"
  },
  {
    "text": "something you can find in RSC 4211 if you want to study it in",
    "start": "2149680",
    "end": "2155040"
  },
  {
    "text": "detail and uh it it uh goes on to say",
    "start": "2155040",
    "end": "2160520"
  },
  {
    "text": "that it uses a CMP URL and",
    "start": "2160520",
    "end": "2165880"
  },
  {
    "text": "uh uh writes a certificate to a destination directory and interesting of",
    "start": "2165960",
    "end": "2172960"
  },
  {
    "text": "course is that we specify here that decrypting return certificate with",
    "start": "2172960",
    "end": "2178359"
  },
  {
    "text": "private key of type mlcm 512 this is uh the CMP client just saying that okay I",
    "start": "2178359",
    "end": "2185520"
  },
  {
    "text": "received an encrypted certificate back and I decrypted it with my public key",
    "start": "2185520",
    "end": "2191119"
  },
  {
    "text": "sorry with the private key and then so the request was successful and we",
    "start": "2191119",
    "end": "2196720"
  },
  {
    "text": "received a certificate so we can try to look at the",
    "start": "2196720",
    "end": "2201760"
  },
  {
    "text": "certificate we",
    "start": "2201760",
    "end": "2204640"
  },
  {
    "text": "stored to do that we switch over to another tab that we have with the open",
    "start": "2208040",
    "end": "2215240"
  },
  {
    "text": "SSL so I have installed an as a cell with the open quum safe provider which",
    "start": "2215240",
    "end": "2223280"
  },
  {
    "text": "is a currently a provider to allow open as cell to perform some Quantum or to",
    "start": "2223280",
    "end": "2230800"
  },
  {
    "text": "use some Quantum safe algorithm post Quantum algorithms so if we look at the uh",
    "start": "2230800",
    "end": "2238079"
  },
  {
    "text": "certificate I just received from the",
    "start": "2238079",
    "end": "2241760"
  },
  {
    "text": "ca with open SSL we see there's a bunch bunch of extensions which are the",
    "start": "2243440",
    "end": "2249160"
  },
  {
    "text": "extension that David talked about for being a hybrid certificate so these are all of course by the ca so that's the",
    "start": "2249160",
    "end": "2256359"
  },
  {
    "text": "since the ca is hybrid the uh end enter certificate will be a hybrid certificate",
    "start": "2256359",
    "end": "2262680"
  },
  {
    "text": "as well which means it's signed by the both keys of the ca uh secondly we can see that it's of",
    "start": "2262680",
    "end": "2270880"
  },
  {
    "text": "course issued by our pqc subc it has the correct uh subject DN and the public key",
    "start": "2270880",
    "end": "2278240"
  },
  {
    "text": "algorithm is actually the oid here for ML cam the official nist issued oid for",
    "start": "2278240",
    "end": "2283520"
  },
  {
    "text": "ML cam but uh we also can see that open cell is not able to parse this so this",
    "start": "2283520",
    "end": "2289599"
  },
  {
    "text": "is where we talked about bit earlier that things are currently in a state of flux so if you want interoperability so",
    "start": "2289599",
    "end": "2297240"
  },
  {
    "text": "we're testing interoperability but tools are right now in a in a bit of varying",
    "start": "2297240",
    "end": "2304000"
  },
  {
    "text": "state of implementation and understanding the say Hy oids the the nist final oids of the",
    "start": "2304000",
    "end": "2312520"
  },
  {
    "text": "algorithms Etc so in order to get everything interoperable interoperable",
    "start": "2312520",
    "end": "2319359"
  },
  {
    "text": "between different vendors or different tools it can be quite tricky I will show uh an older",
    "start": "2319359",
    "end": "2327480"
  },
  {
    "text": "certificate that I issued that you we can parse with OP SSL with the oqs provider this is actually an older",
    "start": "2327480",
    "end": "2334599"
  },
  {
    "text": "certificate that I issued with based on the the uh draft specifications of the",
    "start": "2334599",
    "end": "2340560"
  },
  {
    "text": "algorithms and in this case you know op SSL claims that it's signed by mlsa 44",
    "start": "2340560",
    "end": "2347280"
  },
  {
    "text": "but it's actually a draft version of this uh standard so the the at least the",
    "start": "2347280",
    "end": "2353720"
  },
  {
    "text": "branch of oqs that I uh found could not handle the final updates but could",
    "start": "2353720",
    "end": "2360359"
  },
  {
    "text": "handle the draft updates so this is uh ah you could say interesting experiments",
    "start": "2360359",
    "end": "2368839"
  },
  {
    "text": "but give it a couple more month and I'm sure that everything will be quite",
    "start": "2368839",
    "end": "2376720"
  },
  {
    "text": "smooth so that was a demo of proof of possession for cams so code for this for",
    "start": "2376720",
    "end": "2383520"
  },
  {
    "text": "bouncer CER is available in something nicely named as the pqc almanac which",
    "start": "2383520",
    "end": "2390720"
  },
  {
    "text": "shows how you can do this in code which we'll dig into a little bit as well but just a summary of what we have done so",
    "start": "2390720",
    "end": "2396760"
  },
  {
    "text": "we generate a crmf request with an ml cam public key and requesting proof of",
    "start": "2396760",
    "end": "2402599"
  },
  {
    "text": "possession of type key encipherment and popup private key subsequent message inchor search so this",
    "start": "2402599",
    "end": "2410000"
  },
  {
    "text": "is all uh things taken from the rfcs like RFC 4211 and what happens when the",
    "start": "2410000",
    "end": "2417280"
  },
  {
    "text": "ca receives this request is that it will issue the certificate but encrypt it in",
    "start": "2417280",
    "end": "2422760"
  },
  {
    "text": "the form of a CMS message and envelope data and it will encrypted with an as",
    "start": "2422760",
    "end": "2428640"
  },
  {
    "text": "key derived using the ml cam public key of the uh",
    "start": "2428640",
    "end": "2433880"
  },
  {
    "text": "request so then the client will receive the CMP response and find out that it's",
    "start": "2433880",
    "end": "2439839"
  },
  {
    "text": "an actually encrypted envelope data CMS message and it will de decapsulate the",
    "start": "2439839",
    "end": "2445119"
  },
  {
    "text": "as key using its ml cam private key and eventually then decrypt the CMS envelope",
    "start": "2445119",
    "end": "2451880"
  },
  {
    "text": "data retrieving the actual certificate so this is all the steps that we did and",
    "start": "2451880",
    "end": "2457720"
  },
  {
    "text": "now David will show talk about how it's actually done yeah so the having seen how it",
    "start": "2457720",
    "end": "2465920"
  },
  {
    "text": "actually works in the ejb cui you know it's interesting to have a look at how it actually gets written under under the",
    "start": "2465920",
    "end": "2474000"
  },
  {
    "text": "hood so to speak um if only to just because it actually shows uh use of",
    "start": "2474000",
    "end": "2481240"
  },
  {
    "text": "um the uh some of the new features of CMS for supporting cams so in this case basically we've",
    "start": "2481240",
    "end": "2488720"
  },
  {
    "text": "just got the generation uh first three lines of the generation of the mlcm key pair we're using mlcm 768 which is the",
    "start": "2488720",
    "end": "2496280"
  },
  {
    "text": "mid-range parameter Set uh we then do something unforgivable to generate the Certificate request ID",
    "start": "2496280",
    "end": "2503280"
  },
  {
    "text": "but that's okay we'll deal with that later um maybe don't do it like this if you're doing it at work though um this",
    "start": "2503280",
    "end": "2510760"
  },
  {
    "text": "is used to actually build a Certificate request message Builder and then we actually go on to add uh the public key",
    "start": "2510760",
    "end": "2517240"
  },
  {
    "text": "ke uh identity information and then we specify the enert protocol which Thomas",
    "start": "2517240",
    "end": "2522599"
  },
  {
    "text": "mentioned before and that tells the CIA that what we're expecting is that uh it",
    "start": "2522599",
    "end": "2529240"
  },
  {
    "text": "will send us back an encrypted certificate and we'll respond to that with a hash of that certificate to prove",
    "start": "2529240",
    "end": "2534880"
  },
  {
    "text": "that we actually understood it thus satisfying the proof of possession requirement showing we've got the",
    "start": "2534880",
    "end": "2539920"
  },
  {
    "text": "private",
    "start": "2539920",
    "end": "2542318"
  },
  {
    "text": "key contining with the client side of the uh transaction um having sent our",
    "start": "2545680",
    "end": "2551720"
  },
  {
    "text": "certification request message off to the ca we get back a uh a certificate rep",
    "start": "2551720",
    "end": "2557839"
  },
  {
    "text": "message as a response um the next thing we're able to do is we can confirm that that actually has the encrypted",
    "start": "2557839",
    "end": "2563720"
  },
  {
    "text": "certificate in it which is what we're expecting so we can tell that the CI has correctly implemented C en",
    "start": "2563720",
    "end": "2569480"
  },
  {
    "text": "protocol now for getting the encrypted certificate out we need to create a uh a",
    "start": "2569480",
    "end": "2577200"
  },
  {
    "text": "envelope recipient which actually uses a chem key so we have the JC chem envelope recipient here which is constructed",
    "start": "2577200",
    "end": "2583280"
  },
  {
    "text": "using the chem private key for the public key that we've been requesting the certificate",
    "start": "2583280",
    "end": "2589079"
  },
  {
    "text": "for our next step uh what actually happens under the covers is that we basically",
    "start": "2589079",
    "end": "2594210"
  },
  {
    "text": "[Music] um the cem private key is used in the recipient to uh extract the shared",
    "start": "2594210",
    "end": "2601520"
  },
  {
    "text": "secret from the encapsulation that's carried in the CMS message that's uh enveloping the actual certificate that",
    "start": "2601520",
    "end": "2608839"
  },
  {
    "text": "recovers the RSA session the as session key which is then used to decrypt the",
    "start": "2608839",
    "end": "2614480"
  },
  {
    "text": "certificate and uh return it to us then finally the last step in uh this",
    "start": "2614480",
    "end": "2620079"
  },
  {
    "text": "particular slide is we're just verifying that the uh certificate is actually valid for the uh CA that we've actually",
    "start": "2620079",
    "end": "2627839"
  },
  {
    "text": "requested it from and one thing which is not shown on the slide what we would do next is we would then send back a",
    "start": "2627839",
    "end": "2634640"
  },
  {
    "text": "message to the ca containing a of the certificate we just decrypted which would allow the ca to actually verify",
    "start": "2634640",
    "end": "2641440"
  },
  {
    "text": "that we have proof of possession and then allow our certificate to be published by the ca so Thomas mentioned",
    "start": "2641440",
    "end": "2648440"
  },
  {
    "text": "earlier there was a pqc Almanac the full details of this protocol as described in the code here actually in that too so if",
    "start": "2648440",
    "end": "2655800"
  },
  {
    "text": "you're interested in these things I'd definitely encourage you to download it and have a look and finally we would just like to",
    "start": "2655800",
    "end": "2664280"
  },
  {
    "text": "mention the key factor pqc lab where you can stay up to date on the latest",
    "start": "2664280",
    "end": "2669680"
  },
  {
    "text": "Innovations from key factor and easily for free set up your own lab environment in ashure AWS with trials and open",
    "start": "2669680",
    "end": "2678680"
  },
  {
    "text": "source software and there's plenty of Education resources on our pqc",
    "start": "2678680",
    "end": "2686319"
  },
  {
    "text": "lab and this concludes our Workshop I hope you enjoyed it thanks for sticking",
    "start": "2686319",
    "end": "2691440"
  },
  {
    "text": "with us all this time hope to see you next time and thank you and yes don't forget",
    "start": "2691440",
    "end": "2697359"
  },
  {
    "text": "to download the almanac cheers",
    "start": "2697359",
    "end": "2703200"
  },
  {
    "text": "[Music]",
    "start": "2704440",
    "end": "2707389"
  }
]