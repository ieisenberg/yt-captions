[
  {
    "text": "hi everyone thank you for attending to our talk I know it's the last one so probably want to go to sleep and like",
    "start": "120",
    "end": "6560"
  },
  {
    "text": "enough with that already right so we're here to make it very easy and lightweight and just show you how we hecked the biggest a infrastructure in",
    "start": "6560",
    "end": "13240"
  },
  {
    "text": "the world and do it like very light and easy and with a lot of jokes so I hope you enjoy it and let's quickly start by",
    "start": "13240",
    "end": "21080"
  },
  {
    "text": "introducing ourself first so I'm G I'm the co-founder and CTO of oigo security",
    "start": "21080",
    "end": "27359"
  },
  {
    "text": "with me AI is one of our AI security Ninja and really quickly about ourself um have",
    "start": "27359",
    "end": "34239"
  },
  {
    "text": "we pass it to you you can start introducing yourself yeah thank you so I'm aeli I'm an AI security researcher",
    "start": "34239",
    "end": "40360"
  },
  {
    "text": "in the city office of Figo I have around 10 years of experience in AI engineering",
    "start": "40360",
    "end": "46399"
  },
  {
    "text": "and focusing on security research these days and on my spare time I love to climb M mountains and if you're into it",
    "start": "46399",
    "end": "53600"
  },
  {
    "text": "so let me know after the session I know it's a big thing in the US and with me is G and my awesome CTO so hi everyone",
    "start": "53600",
    "end": "60760"
  },
  {
    "text": "I'm G I'm the co-founder in city of oligo prior to oligo I was leading the research group of checkpoint basically",
    "start": "60760",
    "end": "66119"
  },
  {
    "text": "hacking the biggest application in the world and then go doing lectures about it blackhead Defcon these type of",
    "start": "66119",
    "end": "71600"
  },
  {
    "text": "conferences and I'm super famous for um being handsome CU I cannot climb",
    "start": "71600",
    "end": "77720"
  },
  {
    "text": "mountains right so um let's start with a quick agenda um so what we're going to",
    "start": "77720",
    "end": "83560"
  },
  {
    "text": "discuss today basically is the um the concept that we dubbed and called",
    "start": "83560",
    "end": "89920"
  },
  {
    "text": "called Shadow vulnerabilities basically it's those type of um risk that doesn't",
    "start": "89920",
    "end": "95200"
  },
  {
    "text": "get a cve assigned you might hear this analogy from different Industries but we're going to explain what this term",
    "start": "95200",
    "end": "101600"
  },
  {
    "text": "means and what shadow vulnerabilities really are then we're going to Deep dive into one of the example of a very famous",
    "start": "101600",
    "end": "107119"
  },
  {
    "text": "shed of vulnerability that we found that actually led to the discovery of shell torch and of course we're going to",
    "start": "107119",
    "end": "113560"
  },
  {
    "text": "discuss how we scaled it um it's a new approach that we invented it's called reverse fuzzing basically what you know",
    "start": "113560",
    "end": "120640"
  },
  {
    "text": "is traditional fuzzing but the other way around and then we're going to discuss the shell torch vulnerabilities",
    "start": "120640",
    "end": "126119"
  },
  {
    "text": "themselves and of course we not going to give you stranded we're going to discuss how you can detect or even prevent those",
    "start": "126119",
    "end": "131440"
  },
  {
    "text": "type of attacks so cool let's begin and really deep dive into what shadow",
    "start": "131440",
    "end": "136840"
  },
  {
    "text": "vulnerability basically mean so you probably heard this concept or this Shadow term from other Industries Shadow",
    "start": "136840",
    "end": "143920"
  },
  {
    "text": "data for the data that you don't monitor so you don't know what's going on or Shadow it for workloads or machine that",
    "start": "143920",
    "end": "149920"
  },
  {
    "text": "you don't monitor so you don't know what's going on so we s the same analogy exactly Shadow vulnerabilities this this",
    "start": "149920",
    "end": "155920"
  },
  {
    "text": "type of vulnerability doesn't get a cve assign right and it can happen due to different reason it can be a",
    "start": "155920",
    "end": "161640"
  },
  {
    "text": "vulnerability that it's in dispute and the maintainer don't want to fix it or it's an example of developers not",
    "start": "161640",
    "end": "167879"
  },
  {
    "text": "following best practices and leading to this risk that actually happening or just insecure by Design libraries and",
    "start": "167879",
    "end": "174519"
  },
  {
    "text": "all of those type of Shadow example are in the end a silent misconfigurations",
    "start": "174519",
    "end": "179599"
  },
  {
    "text": "that are very very devastating because on one hand security tools are not aware of them and cannot be aware of them",
    "start": "179599",
    "end": "186159"
  },
  {
    "text": "right we're scanning for CV this common vulnerability entity that like helps us to understand and if we don't have it so",
    "start": "186159",
    "end": "193159"
  },
  {
    "text": "we're like blind to that risk and in the end all of those type of uh of Shadow",
    "start": "193159",
    "end": "199200"
  },
  {
    "text": "vulnerabilities actually lurk inside their documentation that no one ever reads right including us uh so uh we're",
    "start": "199200",
    "end": "207519"
  },
  {
    "text": "going to give some example of shadow ities that we found and you can see that for each and every vulnerability there",
    "start": "207519",
    "end": "214000"
  },
  {
    "text": "is a um section in the docks very very hidden that say oh it's a warning or you",
    "start": "214000",
    "end": "219799"
  },
  {
    "text": "should not do that or just throwing responsibility on the developers themselves we cannot expect for a",
    "start": "219799",
    "end": "225200"
  },
  {
    "text": "developer to be a security expert in Java object handling or a data engineer to be an expert in node and how this",
    "start": "225200",
    "end": "232239"
  },
  {
    "text": "language is being attacked and this is the reason why you're going to see all of those Shadows vulnerability starting",
    "start": "232239",
    "end": "237760"
  },
  {
    "text": "from this simple throwing responsibility in the docks that again no one reads even us and this is why we are as an",
    "start": "237760",
    "end": "244040"
  },
  {
    "text": "attacker started to look for those type of example this is how we got to find a lot of those Shadow vulnerabilities so",
    "start": "244040",
    "end": "250439"
  },
  {
    "text": "now I'm going to pass it back to AI the real smart guy here that hacked everyone and he's going to explain a very uh",
    "start": "250439",
    "end": "256759"
  },
  {
    "text": "interesting Shadow example that we found in a very famous library that actually led to the discovery of shell torch",
    "start": "256759",
    "end": "263400"
  },
  {
    "text": "amazing so thank you Bal again for being so awesome and um let's dive into the",
    "start": "263400",
    "end": "268840"
  },
  {
    "text": "first example I wish we had more time but sadly um um it's pretty short um",
    "start": "268840",
    "end": "274880"
  },
  {
    "text": "this example Shadow vulnerability that I'm about to um um show you uh affects not only shell torch which is around pie",
    "start": "274880",
    "end": "281840"
  },
  {
    "text": "torch and tors if you know it already H it also affects Apache candra and the",
    "start": "281840",
    "end": "287360"
  },
  {
    "text": "Confluence server which is the one of the most 25 targeted servers according to the NSA and if you ever used Java you",
    "start": "287360",
    "end": "295560"
  },
  {
    "text": "must have used syel before H directly or indirectly so uh today we work with yaml",
    "start": "295560",
    "end": "301280"
  },
  {
    "text": "almost everywhere kubernetes is almost entirely based on yaml files for example so uh if you want to work with yaml in",
    "start": "301280",
    "end": "307880"
  },
  {
    "text": "Java this is the go-to now if you look closely inside the documentation you'll notice that it allows you to construct",
    "start": "307880",
    "end": "315160"
  },
  {
    "text": "any kind of java object any type of java object AB yeah so any type wow which",
    "start": "315160",
    "end": "321160"
  },
  {
    "text": "might got me uh thinking um and eventually the default Constructor the default behavior is what matters the",
    "start": "321160",
    "end": "328000"
  },
  {
    "text": "most so apparently the default Constructor of snake caml uh is um",
    "start": "328000",
    "end": "333800"
  },
  {
    "text": "unsafe by default and in this example you can see uh an arbitrary code that is",
    "start": "333800",
    "end": "339240"
  },
  {
    "text": "attack and controlled um that when this payload is passed to the yl file it will",
    "start": "339240",
    "end": "344800"
  },
  {
    "text": "execute it just like that without thinking twice without validating it and this is the default behavior of the",
    "start": "344800",
    "end": "350479"
  },
  {
    "text": "library so the interesting thing is what did the maintainers have to say about",
    "start": "350479",
    "end": "356319"
  },
  {
    "text": "it so of course it's all in the docks um the mnal said that uh it can by default",
    "start": "356319",
    "end": "362880"
  },
  {
    "text": "construct a JavaScript a Java object sorry of any type and therefore it won't be fixed and and he said that the",
    "start": "362880",
    "end": "369360"
  },
  {
    "text": "migration is very simple simply use safe Constructor and um this is a classic",
    "start": "369360",
    "end": "375120"
  },
  {
    "text": "case of not a bug uh it's a feature and uh we went to and tried to understand it",
    "start": "375120",
    "end": "380400"
  },
  {
    "text": "uh what it means even further and what can be the common pitfalls the developers might run",
    "start": "380400",
    "end": "386720"
  },
  {
    "text": "into so here you can see uh the result of someone that extends safe Constructor",
    "start": "386720",
    "end": "393599"
  },
  {
    "text": "to its own Constructor at the very moment you extend it you drop all the safety of the Constructor there that's",
    "start": "393599",
    "end": "400400"
  },
  {
    "text": "the main common Pitfall and also it allows you to create a reference of a safe Constructor C and have a value that",
    "start": "400400",
    "end": "407440"
  },
  {
    "text": "is Constructor that extends it so um it's very misleading so snake camel is not so safe",
    "start": "407440",
    "end": "414639"
  },
  {
    "text": "by default and when we presented all of those evidence to the uh to the",
    "start": "414639",
    "end": "420120"
  },
  {
    "text": "maintainers uh he said something pretty uh funny which we kind of understood but",
    "start": "420120",
    "end": "426479"
  },
  {
    "text": "uh let's understand what it means they said that 100% of the projects and applications that depend on snake caml",
    "start": "426479",
    "end": "433759"
  },
  {
    "text": "uh are 100% safe and they don't uh use a code from an untrusted source so we try",
    "start": "433759",
    "end": "440680"
  },
  {
    "text": "to validate it using something called reverse fuzing which I'll dive into soon but there is a constant tension between",
    "start": "440680",
    "end": "447280"
  },
  {
    "text": "the user and the project maintainer and and you just it it will always be there",
    "start": "447280",
    "end": "452599"
  },
  {
    "text": "as long as we have open source and people maintain them so um we talked so",
    "start": "452599",
    "end": "458160"
  },
  {
    "text": "far about the technical part and now let's talk about the ethical part of the things and this is a classic scenario",
    "start": "458160",
    "end": "465080"
  },
  {
    "text": "where the maintainer and the user don't agree upon something and the maintainer has the power so just to go over that uh",
    "start": "465080",
    "end": "472879"
  },
  {
    "text": "first of all when someone say 100% it's okay we know for 100% we it's going to",
    "start": "472879",
    "end": "478240"
  },
  {
    "text": "have a problem right this is why we decided to Deep dive but also just to mention like we do understand each and",
    "start": "478240",
    "end": "484360"
  },
  {
    "text": "every side right like the developers there cannot be a security expert in each and every language right they want to use an open source and just use it",
    "start": "484360",
    "end": "491280"
  },
  {
    "text": "and the maintainers they have like thousands of open sources now they need to be responsible for each and every library and its own security risk right",
    "start": "491280",
    "end": "498479"
  },
  {
    "text": "and and the actual like users themselves like and and each and every angle here",
    "start": "498479",
    "end": "503759"
  },
  {
    "text": "is like like we can understand it we don't have the right solution right and and and like this is why we should think",
    "start": "503759",
    "end": "510080"
  },
  {
    "text": "it should be a community effort and we'll deep dive into that but just to mention like we're not blaming anyone we're just raising those problem and",
    "start": "510080",
    "end": "516760"
  },
  {
    "text": "like starting to talk who actually owns the responsibility amazing thank you g",
    "start": "516760",
    "end": "522000"
  },
  {
    "text": "um now I'm going to dive into something we call reverse fuzzing um and what I want you to take from the previous",
    "start": "522000",
    "end": "528360"
  },
  {
    "text": "example from the um from section two uh is that it's only one vulnerability that",
    "start": "528360",
    "end": "533920"
  },
  {
    "text": "affects many open sources and there are much more shadow viabilities that some of them are already out there and some",
    "start": "533920",
    "end": "540320"
  },
  {
    "text": "of them are not some of them still l in the code and wait to be uh found and uh",
    "start": "540320",
    "end": "546959"
  },
  {
    "text": "now I'm going to talk about how we manag to scale this technique in order to found um vulnerable targets or prime",
    "start": "546959",
    "end": "553120"
  },
  {
    "text": "Targets in other words these are projects that are very interesting uh in high use by big",
    "start": "553120",
    "end": "560120"
  },
  {
    "text": "organizations um so we wanted to automate the process instead of going next next next on GitHub uh search",
    "start": "560120",
    "end": "566040"
  },
  {
    "text": "results and um we went to uh we wanted to scale the attack so in traditional fuzzing what we",
    "start": "566040",
    "end": "573040"
  },
  {
    "text": "do is we take a bunch of in of inputs and you have many open sources that do it automatically Google does it with OSS",
    "start": "573040",
    "end": "579640"
  },
  {
    "text": "fuz and Asing fuz Loop and and so on so you have a lot of projects to fuz software where you have a bunch of",
    "start": "579640",
    "end": "585959"
  },
  {
    "text": "inputs you just feed it to the application uh which is the Target and you expect it to break eventually so",
    "start": "585959",
    "end": "592320"
  },
  {
    "text": "considering infinite amount of inputs eventually the application will break because we are all human and we don't",
    "start": "592320",
    "end": "597920"
  },
  {
    "text": "think of every single scenar in advance and um it's just the way it is and this is how people are fuzzing",
    "start": "597920",
    "end": "604680"
  },
  {
    "text": "for exploits these days and try to patch them automatically now we did the exact opposite we took one vulnerable code",
    "start": "604680",
    "end": "612200"
  },
  {
    "text": "pattern which I'm about to show you and we tried to identify the project that use uh the open source in the vulnerable",
    "start": "612200",
    "end": "618200"
  },
  {
    "text": "way in the in the unsafe way and so on if you go on gab and you just try to",
    "start": "618200",
    "end": "624160"
  },
  {
    "text": "search for the Constructor um which is unsafe by default um you would see 42",
    "start": "624160",
    "end": "629480"
  },
  {
    "text": "200 possible targets and filtering them out and of course this is just one example we have many more of them we",
    "start": "629480",
    "end": "635440"
  },
  {
    "text": "want ability to scale it and um what we did is we tried to filter it by stars",
    "start": "635440",
    "end": "641839"
  },
  {
    "text": "because this is this is the travel thing to do now GitHub does not allow you to filter by stars at least not from the UI",
    "start": "641839",
    "end": "648959"
  },
  {
    "text": "so you can see we have zero results so we just tried the API and it",
    "start": "648959",
    "end": "654920"
  },
  {
    "text": "worked of course so you have the size parameter which is interesting you can just um fuz it as well and eventually",
    "start": "654920",
    "end": "662079"
  },
  {
    "text": "have a list of all the open sources that use a specific uh code pattern and the",
    "start": "662079",
    "end": "667760"
  },
  {
    "text": "amount of stars that they have so we did it and we filtered out those",
    "start": "667760",
    "end": "673200"
  },
  {
    "text": "two um these two examples use yaml in a unsafe and safe way so uh the second one",
    "start": "673200",
    "end": "679720"
  },
  {
    "text": "is the interesting Glide I want you to focus on you have to pass a new safe Constructor to the new yaml in order to",
    "start": "679720",
    "end": "686399"
  },
  {
    "text": "uh make it safe and of course it's not the default expected behavior and uh we",
    "start": "686399",
    "end": "691720"
  },
  {
    "text": "saw very few projects that do it among thousands of projects so um the ecosystem is kind of broken because the",
    "start": "691720",
    "end": "697720"
  },
  {
    "text": "default matters more than anything now thanks to code ql and this",
    "start": "697720",
    "end": "703839"
  },
  {
    "text": "simple query we managed to uh scale scale everything and make um these 4200",
    "start": "703839",
    "end": "709720"
  },
  {
    "text": "targets uh to only a few which are very vulnerable as I said we have um Tor",
    "start": "709720",
    "end": "716639"
  },
  {
    "text": "serve which I'm about to dive into we have confluence to have aachi Cassandra which is the most widely used nosql",
    "start": "716639",
    "end": "722880"
  },
  {
    "text": "server out there and um I wish we had more time to talk about all them I think all of them are equiv interesting but",
    "start": "722880",
    "end": "730519"
  },
  {
    "text": "I'm here to uh talk about shell torch which is a chain of of vulnerability that when change together um can do",
    "start": "730519",
    "end": "737160"
  },
  {
    "text": "something very uh very alarming so meet the pie torch torch Ser",
    "start": "737160",
    "end": "743199"
  },
  {
    "text": "it's the default deployment and the go-to when you finish developing a model in pytorch and you want to deploy it and",
    "start": "743199",
    "end": "749320"
  },
  {
    "text": "uh give it to users uh of course you have many other INF servers but this is the recommended way to deploy torch uh",
    "start": "749320",
    "end": "755920"
  },
  {
    "text": "models and it's an official Linux Foundation uh product these",
    "start": "755920",
    "end": "762320"
  },
  {
    "text": "days it is used by almost anyone in the industry that wants to support it because it's the default uh inference",
    "start": "762320",
    "end": "769360"
  },
  {
    "text": "server of pytorch including mlflow Cube flow uh even AWS and and Google they all",
    "start": "769360",
    "end": "776000"
  },
  {
    "text": "uh use it as a uh paid product and manage",
    "start": "776000",
    "end": "781120"
  },
  {
    "text": "service now we have four cves that when chained together they allow us to uh run",
    "start": "781680",
    "end": "787360"
  },
  {
    "text": "arbitrary code completely arbitrary code that is attack and controlled and using this arbitrary code execution primitive",
    "start": "787360",
    "end": "794160"
  },
  {
    "text": "we manag to steal models model theft we Pro that model theft is actually a real",
    "start": "794160",
    "end": "799880"
  },
  {
    "text": "issue and it's no longer a hypothetical threat it's a real thing that can happen and I just want you to understand the",
    "start": "799880",
    "end": "805880"
  },
  {
    "text": "scope of model theft when you steal a model and you walk work like one year or 6 months or maybe less but you spend a",
    "start": "805880",
    "end": "813480"
  },
  {
    "text": "lot of time on itating and building a good model right then you deploy it and the next day someone just downloads it",
    "start": "813480",
    "end": "819680"
  },
  {
    "text": "as if it was a file that's broken by Design and moreover it can poison the inference server and alter the",
    "start": "819680",
    "end": "826399"
  },
  {
    "text": "predictions alter the results that end users are receiving from the server and because these are Shadow vulnerabilities",
    "start": "826399",
    "end": "832639"
  },
  {
    "text": "it happens without you knowing so just to understand the scope of the attack and of course there's a demo uh we'll",
    "start": "832639",
    "end": "838800"
  },
  {
    "text": "show you later but we have four vulnerabilities we don't have much time so I'm just going to dive into the more",
    "start": "838800",
    "end": "844360"
  },
  {
    "text": "interesting ones the shadow vulnerabilities among them and by saying Shadow vulnerabilities I'm saying that",
    "start": "844360",
    "end": "850639"
  },
  {
    "text": "they could have been prevented they're out there but we could have prevented them and um it's mostly about usage and",
    "start": "850639",
    "end": "858000"
  },
  {
    "text": "not reading the docs and it can happen to every organization even the large ones including meta um because errors do",
    "start": "858000",
    "end": "867279"
  },
  {
    "text": "happen so the first vulnerability is around the management API we all have uh",
    "start": "867720",
    "end": "873000"
  },
  {
    "text": "servers that are Dynamic that can change that can scale and so on so the management API supposed to be run",
    "start": "873000",
    "end": "879880"
  },
  {
    "text": "running only on Local Host by default at least according to the to the documentation uh but we'll see about",
    "start": "879880",
    "end": "885480"
  },
  {
    "text": "that and it allows us to manage the server to uh register a Model deregister A model list the models that the server",
    "start": "885480",
    "end": "892360"
  },
  {
    "text": "has at the moment uh defined versions and so on but we'll see if it's really running",
    "start": "892360",
    "end": "898440"
  },
  {
    "text": "only on local or not when I read the docs and when when I actually read it I want to uh validate it and to to see",
    "start": "898440",
    "end": "905880"
  },
  {
    "text": "whether it's actually true um because many times we we know that it can def from the docs um and the actual results",
    "start": "905880",
    "end": "912480"
  },
  {
    "text": "might be different so to validate it I just went to uh the config do properties file um",
    "start": "912480",
    "end": "919399"
  },
  {
    "text": "which is uh um as you can see it binds to z0000 which results on all the",
    "start": "919399",
    "end": "925680"
  },
  {
    "text": "network interfaces being exposed um and the management API being exposed to anyone with network access which is",
    "start": "925680",
    "end": "932920"
  },
  {
    "text": "broken and if this was not enough the docks are very misleading",
    "start": "932920",
    "end": "938160"
  },
  {
    "text": "already if this was not enough so uh we had a hardcoded echo with luck uh",
    "start": "938160",
    "end": "944360"
  },
  {
    "text": "address which is kind of funny instead of string formatting like any project does uh hardcoding the address of the",
    "start": "944360",
    "end": "951839"
  },
  {
    "text": "server listening port and and host is something that is unexpected and um in",
    "start": "951839",
    "end": "957920"
  },
  {
    "text": "reality the H the model the sorry the inference server instead of listening on local OST it was available to anyone",
    "start": "957920",
    "end": "964880"
  },
  {
    "text": "from outside the organization and of course nobody knew about it so we have a management API console",
    "start": "964880",
    "end": "973399"
  },
  {
    "text": "that uh we've seen thousands of instances that are exposed to the network to anyone who wants and if I'm",
    "start": "973399",
    "end": "979839"
  },
  {
    "text": "as as a user wanted to predict an image and understand whether it's a cat or a dog I could might as well just override",
    "start": "979839",
    "end": "987199"
  },
  {
    "text": "the model uh steal it and and do anything I want just um because it's",
    "start": "987199",
    "end": "992399"
  },
  {
    "text": "it's kind of coupled the same API is not running on local lost it's just accessible to anyone who could have",
    "start": "992399",
    "end": "998160"
  },
  {
    "text": "predict an image text or whatever it is now back to the snake y use case this",
    "start": "998160",
    "end": "1006160"
  },
  {
    "text": "function passes yaml file um and as you can see it uses the default",
    "start": "1006160",
    "end": "1011240"
  },
  {
    "text": "Constructor all right it uses new yaml and then yaml load and nothing",
    "start": "1011240",
    "end": "1016480"
  },
  {
    "text": "interesting in particular if you would have looked at it you probably would have thought that it's okay right because it's the default behavior and",
    "start": "1016480",
    "end": "1023519"
  },
  {
    "text": "nothing can be can go wrong but this yaml which represents a",
    "start": "1023519",
    "end": "1028798"
  },
  {
    "text": "model deployment is actually uh running arbitrary Cod that is controlled by me an attacker uh it it will download the",
    "start": "1028799",
    "end": "1035798"
  },
  {
    "text": "arbitrary jar file and execute it um right away without thinking twice without validating and of course it",
    "start": "1035799",
    "end": "1042038"
  },
  {
    "text": "depends on another bug which I don't have time to talk about which is an ssrf bug uh that allows us to um down the jar",
    "start": "1042039",
    "end": "1049520"
  },
  {
    "text": "file from any address HTTP https uh it does not",
    "start": "1049520",
    "end": "1055759"
  },
  {
    "text": "matter so to sum up this attack so uh a single HTTP post uh can run arbitrary",
    "start": "1056400",
    "end": "1062320"
  },
  {
    "text": "code on the server and take over the entire inference server uh and do the following so in the figure you can see",
    "start": "1062320",
    "end": "1069320"
  },
  {
    "text": "that the inference server is infected toor serve is running our malicious model and then add users which",
    "start": "1069320",
    "end": "1075520"
  },
  {
    "text": "communicate with the inference API use the new model instead of of the regular one now let's take it even",
    "start": "1075520",
    "end": "1085080"
  },
  {
    "text": "further so this is a demo of the uh end to endend uh uh",
    "start": "1085720",
    "end": "1092720"
  },
  {
    "text": "exploitation so this model predicts whether it's a green light or a red light it's a very simple dumb model that",
    "start": "1092720",
    "end": "1099440"
  },
  {
    "text": "just classifies whether it's red or green but uh you can see that he classifies green as green and red as red",
    "start": "1099440",
    "end": "1106480"
  },
  {
    "text": "so using the exploit that we did uh the user have no idea that the uh",
    "start": "1106480",
    "end": "1112679"
  },
  {
    "text": "model changed behind the scenes and now red light will result in green light so just imagine um the attacker without any",
    "start": "1112679",
    "end": "1121240"
  },
  {
    "text": "effort using a single HTTP request could override the server and affect all of its end users and I'm talking about big",
    "start": "1121240",
    "end": "1127960"
  },
  {
    "text": "companies right so G let me pass the mic back to you to talk about the scope of the impact and the result the actual",
    "start": "1127960",
    "end": "1135039"
  },
  {
    "text": "thing that thank you AI for being so awesome so shell torch was all over in",
    "start": "1135039",
    "end": "1142760"
  },
  {
    "text": "every media outlet and I think this is where the world started to understood first of all that pytorch is a very",
    "start": "1142760",
    "end": "1147919"
  },
  {
    "text": "prominent Target to attackers only few months before the torchon uh uh source",
    "start": "1147919",
    "end": "1153720"
  },
  {
    "text": "code itself was infected and there was around 1 million uh downloads that were malicious but this is the first example",
    "start": "1153720",
    "end": "1160400"
  },
  {
    "text": "ever of an actual rce the one that you always uh see when you're taking web interfaces and web servers like this 10",
    "start": "1160400",
    "end": "1167559"
  },
  {
    "text": "out of 10 RC that actually eating one of the most famous AI um Frameworks in the",
    "start": "1167559",
    "end": "1172799"
  },
  {
    "text": "world and why is it so important because when we start discussing about uh um uh",
    "start": "1172799",
    "end": "1178919"
  },
  {
    "text": "the theoretical uh aspect of it and and again of course we can hack to your infrastructure and use it with the high",
    "start": "1178919",
    "end": "1185520"
  },
  {
    "text": "privileges to to Lally move in the organization and do but but now we have something new we are at the core of your",
    "start": "1185520",
    "end": "1191360"
  },
  {
    "text": "AI infrastructure and we can do stuff that you couldn't think about before right we could change the models and",
    "start": "1191360",
    "end": "1197039"
  },
  {
    "text": "alter the results as as mentioned but we can see each and every data that flow through the model and communicates out",
    "start": "1197039",
    "end": "1203600"
  },
  {
    "text": "and and like the the the risk or the potential damage it's huge right and",
    "start": "1203600",
    "end": "1208840"
  },
  {
    "text": "when we first introduced shelter to the world everyone was like Wow super interesting sounds cool this is like",
    "start": "1208840",
    "end": "1214880"
  },
  {
    "text": "still still a theory right like attackers are still like you know it's not it's a yeah it's a buzz",
    "start": "1214880",
    "end": "1221760"
  },
  {
    "text": "world it's not actually happen so like for us it was very important to mention it is happening this is where we",
    "start": "1221760",
    "end": "1227600"
  },
  {
    "text": "actually took a step forward and we find the first ever Tech campaign targeting",
    "start": "1227600",
    "end": "1232880"
  },
  {
    "text": "AI workloads we're going to present it tomorrow a is doing a lot of troubles we're going to see it in the cncf",
    "start": "1232880",
    "end": "1238480"
  },
  {
    "text": "tomorrow after the keynote we're going to explain how Shadow Ray uh um a very",
    "start": "1238480",
    "end": "1244039"
  },
  {
    "text": "famous uh uh um AI framework Ray it's kind of like kubernetes for AI that also",
    "start": "1244039",
    "end": "1251159"
  },
  {
    "text": "again we s didn't to nothing but again a disputed vulnerability actually ended up in in in finding those uh um",
    "start": "1251159",
    "end": "1258600"
  },
  {
    "text": "vulnerabilities and when we actually looked inside we saw there is a campaign that is actively going for more than a",
    "start": "1258600",
    "end": "1265000"
  },
  {
    "text": "year so just to again to sum it up this is not a theory anymore attackers",
    "start": "1265000",
    "end": "1270799"
  },
  {
    "text": "understood this is a gold mine they want to get there everyone is interested about it and this is why uh uh we",
    "start": "1270799",
    "end": "1276799"
  },
  {
    "text": "decided to really focus on uh this amazing uh uh Frameworks and um one",
    "start": "1276799",
    "end": "1283200"
  },
  {
    "text": "click here um just to to like understand what were our uh aim on when we're",
    "start": "1283200",
    "end": "1289600"
  },
  {
    "text": "protecting those type of attacks for us when we talking about AI security before",
    "start": "1289600",
    "end": "1294720"
  },
  {
    "text": "we go into sixth grade and blocking prompts and like let's start from scratch right your AI infrastructure is",
    "start": "1294720",
    "end": "1300279"
  },
  {
    "text": "basically apps this is the same type of apps that inherits the same type of problem for each and every uh software",
    "start": "1300279",
    "end": "1307480"
  },
  {
    "text": "that you already know and software problems but the problem the real problem is that those application have a",
    "start": "1307480",
    "end": "1312919"
  },
  {
    "text": "lot more power and a lot more responsibility and today the White House",
    "start": "1312919",
    "end": "1318200"
  },
  {
    "text": "and regulation around it and everyone is talking about it right cuz it's frightening and we're trusting it in",
    "start": "1318200",
    "end": "1323279"
  },
  {
    "text": "everything we do in our life and this is why we decided again to really focus on",
    "start": "1323279",
    "end": "1328640"
  },
  {
    "text": "like securing your AI by starting first and foremost to secure infrastructure which means secure your apps so first of",
    "start": "1328640",
    "end": "1335200"
  },
  {
    "text": "all like let's talk about the concept of Shadow V abilities it's here like to stay we have a lot of example of other",
    "start": "1335200",
    "end": "1342919"
  },
  {
    "text": "uh uh Shadow vulnerabilities that ended up uh uh causing devastating results and this is why we think it should be a",
    "start": "1342919",
    "end": "1349000"
  },
  {
    "text": "community effort those type of vulnerabilities has to be called out in the end maintainers we do understand",
    "start": "1349000",
    "end": "1355320"
  },
  {
    "text": "them and like they're coming and doing amazing open sources and like this is the way they do it they're not security",
    "start": "1355320",
    "end": "1360520"
  },
  {
    "text": "expert they're not here to do it but we have to trust this open source say it's like everywhere we go and this is why we",
    "start": "1360520",
    "end": "1367240"
  },
  {
    "text": "think it should be a community effort we're going to publish a huge list of all of the Shadow vulnerabilities we actually automated it uh using our",
    "start": "1367240",
    "end": "1374120"
  },
  {
    "text": "technology to find it in scale but we urge everyone to add more and more examples again just simply reading the",
    "start": "1374120",
    "end": "1380400"
  },
  {
    "text": "docks right and um just to emphasize in order to actually catch a text you have",
    "start": "1380400",
    "end": "1386919"
  },
  {
    "text": "to be in runtime to understand that the tech is occurring right and this is where uh our approach uh uh and how we",
    "start": "1386919",
    "end": "1393760"
  },
  {
    "text": "tackle stuff is very different but it can actually help a lot only um from our angle what we do in oligo is actually",
    "start": "1393760",
    "end": "1401159"
  },
  {
    "text": "we're baselining how open source libraries should behave what we're basically doing we're monitoring the",
    "start": "1401159",
    "end": "1406840"
  },
  {
    "text": "same pieces of code at the enough envirment for enough time to tell you not how not only how you use this piece",
    "start": "1406840",
    "end": "1411919"
  },
  {
    "text": "of code but how the rest of the world is using this piece of code and then only based on that manner we can tell you",
    "start": "1411919",
    "end": "1417840"
  },
  {
    "text": "when your opos Source starts to deviate from its nor normal behavior we can actually detect detect it or even block",
    "start": "1417840",
    "end": "1424120"
  },
  {
    "text": "it and with that ability we can actually we don't care about no cve or cwe we",
    "start": "1424120",
    "end": "1430240"
  },
  {
    "text": "care about that your snake parer that should only part files suddenly executes code right and this ability actually",
    "start": "1430240",
    "end": "1437799"
  },
  {
    "text": "goes beyond what we know as the the scope of application security we actually uh uh I",
    "start": "1437799",
    "end": "1444960"
  },
  {
    "text": "know we look cool but we're a bunch of nerds we have like six different Pro on the technology uh that we invented that",
    "start": "1444960",
    "end": "1451039"
  },
  {
    "text": "can actually help us to monitor any type of code we don't need your code we don't need your developers and we don't need",
    "start": "1451039",
    "end": "1456279"
  },
  {
    "text": "High privileges plug-in play we can show you for each and every app what is actually going on which means also to do",
    "start": "1456279",
    "end": "1462919"
  },
  {
    "text": "to the AI application that you just deploy even if you don't have the source code or you just deploy it or even it",
    "start": "1462919",
    "end": "1469080"
  },
  {
    "text": "like for us it's the same type of problem and what we actually do is by showing you what's risk are actually",
    "start": "1469080",
    "end": "1474960"
  },
  {
    "text": "real and from there trying to actually add mitigations and detect attacks even without being aware to the actual",
    "start": "1474960",
    "end": "1481600"
  },
  {
    "text": "Associated cve so just going to pause here because I need to breathe now and then but if you have any other questions",
    "start": "1481600",
    "end": "1488640"
  },
  {
    "text": "we would love to answer",
    "start": "1488640",
    "end": "1491840"
  },
  {
    "text": "anything thank you very much question is that you know this onslot of",
    "start": "1494919",
    "end": "1500559"
  },
  {
    "text": "CV week by week whether the I mean the research about it is it manual or",
    "start": "1500559",
    "end": "1507279"
  },
  {
    "text": "somehow we can actually figure out what could go wrong because if it manual then it's kind of still not sustainable",
    "start": "1507279",
    "end": "1513960"
  },
  {
    "text": "definitely you're right actually um this talk was also present like a different talk about Shadow vulnerabilities was",
    "start": "1513960",
    "end": "1519919"
  },
  {
    "text": "presented at Defcon last year where we actually explain how we automated it first of all what we show here it's only",
    "start": "1519919",
    "end": "1525559"
  },
  {
    "text": "like the manual graphql searching on GitHub but as I just mentioned our technology can monitor any type of code",
    "start": "1525559",
    "end": "1532880"
  },
  {
    "text": "so basically went to dockerhub and like we started monitoring projects and we wanted to see which project actually use",
    "start": "1532880",
    "end": "1539159"
  },
  {
    "text": "snake yl in an unsafe way but as part of the logic not only at the beginning when it's like initiating something and",
    "start": "1539159",
    "end": "1545559"
  },
  {
    "text": "configurating and then it never uses it so we actually automated this own way and with our technology we find more and",
    "start": "1545559",
    "end": "1552600"
  },
  {
    "text": "more vulnerabilities including the ray one that we're going to present tomorrow so to your question is it autom",
    "start": "1552600",
    "end": "1559000"
  },
  {
    "text": "yes does it have to be automated yes there are too many vulnerabilities that are growing immensely and like we cannot",
    "start": "1559000",
    "end": "1565080"
  },
  {
    "text": "keep up if it's not an automated scalable",
    "start": "1565080",
    "end": "1569240"
  },
  {
    "text": "way Hi H you have mentioned uh for this Shadow vulnerabilities uh some specifics",
    "start": "1576919",
    "end": "1585440"
  },
  {
    "text": "being mentioned in the documentation but in a way that you have to really understand what's going on to make sure you're doing the right thing uh there's",
    "start": "1585440",
    "end": "1592600"
  },
  {
    "text": "something I've seen a lot of times I want your comment on this it's the other way around is H examples on the internet",
    "start": "1592600",
    "end": "1600480"
  },
  {
    "text": "maybe not from the official maintenance of some library or Bo that are wrong",
    "start": "1600480",
    "end": "1605600"
  },
  {
    "text": "because they're misconfigured or there just a pro concept they are too open in permissions but people constantly copy",
    "start": "1605600",
    "end": "1611640"
  },
  {
    "text": "and paste and Implement them in production have have you look into into this also is that your experience that this is also a problem",
    "start": "1611640",
    "end": "1619080"
  },
  {
    "text": "yeah so uh we have been and uh actually we um we know what as G said before we",
    "start": "1619080",
    "end": "1626320"
  },
  {
    "text": "know what is the normal behavior of the pattern and what it should do in real world scenarios so um you should",
    "start": "1626320",
    "end": "1633440"
  },
  {
    "text": "distinguish like unsafe usage and safe usage that is like partially unsafe or might lead to something unsafe and we H",
    "start": "1633440",
    "end": "1640279"
  },
  {
    "text": "go on and automated with with code ql and other tools um but um it's not an",
    "start": "1640279",
    "end": "1645520"
  },
  {
    "text": "easy there is no easy solution that's this why we think that it's a community effort and shadowed vulnerabilities need",
    "start": "1645520",
    "end": "1650919"
  },
  {
    "text": "to be called out and if we have osv or other vulnerability databases um we",
    "start": "1650919",
    "end": "1656399"
  },
  {
    "text": "should have Shadow vulnerabilities database um that's open and examples of",
    "start": "1656399",
    "end": "1661519"
  },
  {
    "text": "um misconfigurations silent misconfigurations that are unsafe by default and so on um llms might help",
    "start": "1661519",
    "end": "1669519"
  },
  {
    "text": "here I've seen some startups that try to incorporate the source code together with the documentation and trying to",
    "start": "1669519",
    "end": "1675080"
  },
  {
    "text": "understand whether it's using it the right way or not but um personally I I I think it's this this method is really",
    "start": "1675080",
    "end": "1681919"
  },
  {
    "text": "hard to scale and it's pretty expensive and it's not as efficient as having a",
    "start": "1681919",
    "end": "1687240"
  },
  {
    "text": "runtime um security product or something that um sits in production or any given",
    "start": "1687240",
    "end": "1693679"
  },
  {
    "text": "environment and tell you where a new deviation occurs and over time and you have a lot of factors that you can",
    "start": "1693679",
    "end": "1699919"
  },
  {
    "text": "consider when looking on the deviation like the up time of the application when",
    "start": "1699919",
    "end": "1705200"
  },
  {
    "text": "it was changed the last time um did we see see this Behavior already if if we",
    "start": "1705200",
    "end": "1710480"
  },
  {
    "text": "did where and and so on so it makes a lot of U it makes it much more e easier",
    "start": "1710480",
    "end": "1715880"
  },
  {
    "text": "for us um to automate it using the behavioral pattern and not um some cve",
    "start": "1715880",
    "end": "1722559"
  },
  {
    "text": "management solution that names them and and that's it um as we said we want to protect oursel against unknown unknowns",
    "start": "1722559",
    "end": "1730000"
  },
  {
    "text": "and this is the way we we chose to solve it just to add on that like we do",
    "start": "1730000",
    "end": "1735159"
  },
  {
    "text": "believe that security should be done in layers right so like we do say like scan your code do the stuff like you have to",
    "start": "1735159",
    "end": "1741200"
  },
  {
    "text": "the post stuff but you keep on running on like trying to get to this theoretical Z zero vulnerabilities you",
    "start": "1741200",
    "end": "1747760"
  },
  {
    "text": "can't like 95% of what you're finding it's not real theoretical and that's why you have to have a different layer of",
    "start": "1747760",
    "end": "1754080"
  },
  {
    "text": "real time runtime that actually add mitigation and it can help you to detect like the unfixable or the unknown and",
    "start": "1754080",
    "end": "1759720"
  },
  {
    "text": "with that create a much more holistic approach to tackle application vulnerabilities or tackle any risk in",
    "start": "1759720",
    "end": "1766000"
  },
  {
    "text": "like but what about supply chain risk right exib or stuff that are coming or like Palo Alto got hacked and then checkpoint",
    "start": "1766000",
    "end": "1772519"
  },
  {
    "text": "have to equal white this is application that are you bought you don't have the source code but for us it's just Java",
    "start": "1772519",
    "end": "1778360"
  },
  {
    "text": "application that have a command injection and we can block it even if it doesn't have a CV assigned or even if we",
    "start": "1778360",
    "end": "1784080"
  },
  {
    "text": "are as a community are not aware to this risk and get a number associated with it does it answer a question yes yes thank",
    "start": "1784080",
    "end": "1790799"
  },
  {
    "text": "you very much thank you any other questions",
    "start": "1790799",
    "end": "1799480"
  },
  {
    "text": "so yeah snake yeah I'm an example I think it's bothering right as we speak to me because we are dealing with some",
    "start": "1802120",
    "end": "1807320"
  },
  {
    "text": "fallouts so so that was good example my question is that uh some of these",
    "start": "1807320",
    "end": "1813240"
  },
  {
    "text": "vulnerabilities which you find in CV which is buried in layer for example there is this one bite buffer overflow",
    "start": "1813240",
    "end": "1818919"
  },
  {
    "text": "somewhere so what is the impact or what your tool does for close systems where",
    "start": "1818919",
    "end": "1824440"
  },
  {
    "text": "there is no one is running user brought code user brought yl file or something so what is the outcome in that case so",
    "start": "1824440",
    "end": "1832640"
  },
  {
    "text": "each and every vulnerability um it's a theoretical risk but for us trying to",
    "start": "1832640",
    "end": "1838679"
  },
  {
    "text": "understand first of all if this risk actually apply what we do is our technology we're going to show you each and every piece of code and we're going",
    "start": "1838679",
    "end": "1844880"
  },
  {
    "text": "to show you if it's running and if it's running which functions are running so let's start by understanding okay you might have the theoretical vulnerability",
    "start": "1844880",
    "end": "1851200"
  },
  {
    "text": "but it's actually exploitable in order for something to actually be exploitable it has to be running and running the",
    "start": "1851200",
    "end": "1857200"
  },
  {
    "text": "vulnerable function and you need to reach with the vulnerable input to that function no one checks that today so",
    "start": "1857200",
    "end": "1863960"
  },
  {
    "text": "just by showing you which libraries are actually running in function as parameters will help you to just check",
    "start": "1863960",
    "end": "1869279"
  },
  {
    "text": "the box am I like actually vulnerable or not is this actually exploitable on my application but then we don't stop there",
    "start": "1869279",
    "end": "1876440"
  },
  {
    "text": "even it's a one bite overflow or buffer overflow he buffer overflow or any type of cve for us when it's starting to get",
    "start": "1876440",
    "end": "1883639"
  },
  {
    "text": "exploited it will create a deviation in the actual open source that that is using it okay so for example I exploited",
    "start": "1883639",
    "end": "1892320"
  },
  {
    "text": "this one by overflow but now as an attacker I need to do something right I want to write a sensitive file I want to",
    "start": "1892320",
    "end": "1898720"
  },
  {
    "text": "uh create a test schedu that will run something in two I need to do something at the post exploitation technique this",
    "start": "1898720",
    "end": "1904200"
  },
  {
    "text": "is what we've been taught as the industry that today security tools are meant to detect right someone is reading",
    "start": "1904200",
    "end": "1910639"
  },
  {
    "text": "a sensitive file someone is doing reverse shell someone is already there right in order to do it what we've done",
    "start": "1910639",
    "end": "1917360"
  },
  {
    "text": "is the to actually profile and sand box each and every open source Library only",
    "start": "1917360",
    "end": "1922519"
  },
  {
    "text": "the act of exploitation will deviate from the normal behavior we say hey one of our open sources now it's actually",
    "start": "1922519",
    "end": "1928600"
  },
  {
    "text": "actively being exploited so just an analogy we're not catching the attacker as they're trying to take everything and",
    "start": "1928600",
    "end": "1934679"
  },
  {
    "text": "go out we're catching the attacker as they actually try to oppose the door does that make sense so we don't care",
    "start": "1934679",
    "end": "1940159"
  },
  {
    "text": "about how the vulnerability started what is the underlying vulnerability we care how the vulnerability affects and change",
    "start": "1940159",
    "end": "1947039"
  },
  {
    "text": "the way that this pie of code should behave in a legitimate Behavior does that make sense answer your question",
    "start": "1947039",
    "end": "1952600"
  },
  {
    "text": "yeah thank you cool anyone",
    "start": "1952600",
    "end": "1960638"
  },
  {
    "text": "else thank you thank you very much thank you thank you very much",
    "start": "1961080",
    "end": "1967960"
  }
]