[
  {
    "text": "good morning everyone I am Holly calto",
    "start": "520",
    "end": "4480"
  },
  {
    "text": "currently a graduate researcher at UC",
    "start": "4480",
    "end": "8599"
  },
  {
    "text": "santus thank you for joining me today",
    "start": "8599",
    "end": "11719"
  },
  {
    "text": "for our case study of enhancing grpc",
    "start": "11719",
    "end": "16000"
  },
  {
    "text": "microservices in high performance",
    "start": "16000",
    "end": "17960"
  },
  {
    "text": "trading",
    "start": "17960",
    "end": "19080"
  },
  {
    "text": "systems this work was done in",
    "start": "19080",
    "end": "21199"
  },
  {
    "text": "collaboration with my colleague Yukon uh",
    "start": "21199",
    "end": "24039"
  },
  {
    "text": "during my time at",
    "start": "24039",
    "end": "25760"
  },
  {
    "text": "coinbase I have since transitioned to",
    "start": "25760",
    "end": "28519"
  },
  {
    "text": "shift my f Focus to my re uh PhD uh work",
    "start": "28519",
    "end": "33079"
  },
  {
    "text": "which continues to explore optimizing",
    "start": "33079",
    "end": "36280"
  },
  {
    "text": "rpcs for microservice",
    "start": "36280",
    "end": "39200"
  },
  {
    "text": "performance for today's talk due to a",
    "start": "39200",
    "end": "41840"
  },
  {
    "text": "scheduling conflict you can couldn't be",
    "start": "41840",
    "end": "44840"
  },
  {
    "text": "here so I will be presenting our work",
    "start": "44840",
    "end": "48840"
  },
  {
    "text": "solo let's start by outlining our agenda",
    "start": "48960",
    "end": "53120"
  },
  {
    "text": "so we first do a brief introduction on",
    "start": "53120",
    "end": "56320"
  },
  {
    "text": "trading system with a focus on its uh",
    "start": "56320",
    "end": "60079"
  },
  {
    "text": "single thread model then we will be",
    "start": "60079",
    "end": "62320"
  },
  {
    "text": "discussing the two uh grpc usage",
    "start": "62320",
    "end": "65439"
  },
  {
    "text": "enhancements we implemented which are",
    "start": "65439",
    "end": "68040"
  },
  {
    "text": "transitioning from un to bidirectional",
    "start": "68040",
    "end": "71119"
  },
  {
    "text": "streaming model and then replacing um",
    "start": "71119",
    "end": "74479"
  },
  {
    "text": "Proto buff with flat buffers uh we will",
    "start": "74479",
    "end": "77360"
  },
  {
    "text": "also cover our um briefly our systematic",
    "start": "77360",
    "end": "80759"
  },
  {
    "text": "approach in load testing those",
    "start": "80759",
    "end": "82680"
  },
  {
    "text": "enhancements and lastly we would like to",
    "start": "82680",
    "end": "85439"
  },
  {
    "text": "uh present our wish list for grpc",
    "start": "85439",
    "end": "88439"
  },
  {
    "text": "protuff and flat buffers um that we",
    "start": "88439",
    "end": "93119"
  },
  {
    "text": "believe could further enhance our",
    "start": "93119",
    "end": "97200"
  },
  {
    "text": "system so let's first do an introduction",
    "start": "97799",
    "end": "100360"
  },
  {
    "text": "on trading",
    "start": "100360",
    "end": "102280"
  },
  {
    "text": "systems trading systems are essentially",
    "start": "102280",
    "end": "106040"
  },
  {
    "text": "uh performance sensitive",
    "start": "106040",
    "end": "108880"
  },
  {
    "text": "systems um specific to coinbase trading",
    "start": "108880",
    "end": "112119"
  },
  {
    "text": "system it's an application written in go",
    "start": "112119",
    "end": "115640"
  },
  {
    "text": "it is engineered to",
    "start": "115640",
    "end": "118680"
  },
  {
    "text": "um uh um process request with ultra low",
    "start": "118680",
    "end": "122399"
  },
  {
    "text": "latency and uh extremely high um",
    "start": "122399",
    "end": "125920"
  },
  {
    "text": "throughput specifically",
    "start": "125920",
    "end": "128440"
  },
  {
    "text": "achieving um submillisecond latency and",
    "start": "128440",
    "end": "132319"
  },
  {
    "text": "uh processing over 10,000 requests per",
    "start": "132319",
    "end": "136400"
  },
  {
    "text": "second at the core of such system lies",
    "start": "136400",
    "end": "140160"
  },
  {
    "text": "the matching engine which internally",
    "start": "140160",
    "end": "142080"
  },
  {
    "text": "uses a rough cluster for its fult",
    "start": "142080",
    "end": "144920"
  },
  {
    "text": "tolerance",
    "start": "144920",
    "end": "146879"
  },
  {
    "text": "mechanism matching engine accepts order",
    "start": "146879",
    "end": "149959"
  },
  {
    "text": "requests from the order entry um matches",
    "start": "149959",
    "end": "153120"
  },
  {
    "text": "them and then",
    "start": "153120",
    "end": "155319"
  },
  {
    "text": "um generate messages for those matching",
    "start": "155319",
    "end": "158080"
  },
  {
    "text": "results to be disseminated to the",
    "start": "158080",
    "end": "160480"
  },
  {
    "text": "downstream in the",
    "start": "160480",
    "end": "162000"
  },
  {
    "text": "market as performance is very critical",
    "start": "162000",
    "end": "165280"
  },
  {
    "text": "for trading systems a effective trading",
    "start": "165280",
    "end": "168319"
  },
  {
    "text": "system must be",
    "start": "168319",
    "end": "169920"
  },
  {
    "text": "designed with the maximum e efficiency",
    "start": "169920",
    "end": "174080"
  },
  {
    "text": "of uh compute resource in mind at all",
    "start": "174080",
    "end": "177040"
  },
  {
    "text": "time",
    "start": "177040",
    "end": "180040"
  },
  {
    "text": "Beyond performance ensuring the uh",
    "start": "181040",
    "end": "183879"
  },
  {
    "text": "correctness of transaction execution is",
    "start": "183879",
    "end": "186680"
  },
  {
    "text": "crucial for trading",
    "start": "186680",
    "end": "188239"
  },
  {
    "text": "systems while there are concurrent",
    "start": "188239",
    "end": "191519"
  },
  {
    "text": "threats inside the matching engine",
    "start": "191519",
    "end": "194720"
  },
  {
    "text": "handling various tasks to guarantee",
    "start": "194720",
    "end": "199040"
  },
  {
    "text": "correctness each task must adhere to a",
    "start": "199040",
    "end": "202680"
  },
  {
    "text": "strict single thread model at during",
    "start": "202680",
    "end": "206440"
  },
  {
    "text": "execution this ensures that all",
    "start": "206440",
    "end": "209120"
  },
  {
    "text": "transactions are executed sequentially",
    "start": "209120",
    "end": "212480"
  },
  {
    "text": "and without risk",
    "start": "212480",
    "end": "214519"
  },
  {
    "text": "conditions but in the meantime it also",
    "start": "214519",
    "end": "217480"
  },
  {
    "text": "requires each task to be designed um to",
    "start": "217480",
    "end": "221080"
  },
  {
    "text": "execute with maximum efficiency uh",
    "start": "221080",
    "end": "224239"
  },
  {
    "text": "minimize CPU usage pre-allocate memory",
    "start": "224239",
    "end": "227239"
  },
  {
    "text": "when never possible and avoid um",
    "start": "227239",
    "end": "230519"
  },
  {
    "text": "avoiding um blocking",
    "start": "230519",
    "end": "235040"
  },
  {
    "text": "situations here's an example of a simple",
    "start": "235879",
    "end": "238959"
  },
  {
    "text": "grpc usage pattern in tra trading",
    "start": "238959",
    "end": "242519"
  },
  {
    "text": "systems in fact it was the um model in",
    "start": "242519",
    "end": "246640"
  },
  {
    "text": "place before our enhancement",
    "start": "246640",
    "end": "248879"
  },
  {
    "text": "work in this model an order request",
    "start": "248879",
    "end": "252439"
  },
  {
    "text": "arrives as a unary service call um",
    "start": "252439",
    "end": "256720"
  },
  {
    "text": "prompting the creation of a separate uh",
    "start": "256720",
    "end": "260600"
  },
  {
    "text": "server side go routine to handle the",
    "start": "260600",
    "end": "264720"
  },
  {
    "text": "request given the heavy traffic pattern",
    "start": "264720",
    "end": "268040"
  },
  {
    "text": "in trading systems this straightforward",
    "start": "268040",
    "end": "272000"
  },
  {
    "text": "model um often results in tens of",
    "start": "272000",
    "end": "275759"
  },
  {
    "text": "thousands of go routines",
    "start": "275759",
    "end": "278919"
  },
  {
    "text": "um to be running",
    "start": "278919",
    "end": "281240"
  },
  {
    "text": "simultaneously uh leading to Resource uh",
    "start": "281240",
    "end": "284240"
  },
  {
    "text": "contention and",
    "start": "284240",
    "end": "286199"
  },
  {
    "text": "strash this also could um cause the",
    "start": "286199",
    "end": "290720"
  },
  {
    "text": "Laten uh tail latency to",
    "start": "290720",
    "end": "293560"
  },
  {
    "text": "spike especially when a blocking go",
    "start": "293560",
    "end": "296720"
  },
  {
    "text": "routine has to wait for its turn to be",
    "start": "296720",
    "end": "300080"
  },
  {
    "text": "uh rescheduled on uh randomly by um go",
    "start": "300080",
    "end": "304560"
  },
  {
    "text": "scheduler on the",
    "start": "304560",
    "end": "307880"
  },
  {
    "text": "CPU this chart illustrates one of the",
    "start": "308840",
    "end": "311759"
  },
  {
    "text": "key problems um of the simple usage",
    "start": "311759",
    "end": "314680"
  },
  {
    "text": "model we discussed in the previous slide",
    "start": "314680",
    "end": "317320"
  },
  {
    "text": "which is the increasing gap between uh",
    "start": "317320",
    "end": "320440"
  },
  {
    "text": "the average and tail latencies when",
    "start": "320440",
    "end": "322240"
  },
  {
    "text": "request volume is high as you can see",
    "start": "322240",
    "end": "325840"
  },
  {
    "text": "when the request volume increases the",
    "start": "325840",
    "end": "329280"
  },
  {
    "text": "average latency remains relatively",
    "start": "329280",
    "end": "331919"
  },
  {
    "text": "stable however the tail latency starts",
    "start": "331919",
    "end": "335319"
  },
  {
    "text": "to rise",
    "start": "335319",
    "end": "336960"
  },
  {
    "text": "significantly the gap between the",
    "start": "336960",
    "end": "339759"
  },
  {
    "text": "average and tail latencies uh become",
    "start": "339759",
    "end": "342240"
  },
  {
    "text": "more prominent at higher througho levels",
    "start": "342240",
    "end": "346000"
  },
  {
    "text": "especially when the system is handling",
    "start": "346000",
    "end": "347840"
  },
  {
    "text": "over 8,000 requests per",
    "start": "347840",
    "end": "351080"
  },
  {
    "text": "second the widening Gap indicates that",
    "start": "351080",
    "end": "354600"
  },
  {
    "text": "while uh the majority of the requests",
    "start": "354600",
    "end": "356880"
  },
  {
    "text": "are being processed with within a a",
    "start": "356880",
    "end": "360319"
  },
  {
    "text": "acceptable time frame there is a small",
    "start": "360319",
    "end": "363560"
  },
  {
    "text": "but critical percentage of requests that",
    "start": "363560",
    "end": "366479"
  },
  {
    "text": "are experiencing much longer delays this",
    "start": "366479",
    "end": "370000"
  },
  {
    "text": "could be particularly problematic in",
    "start": "370000",
    "end": "372240"
  },
  {
    "text": "trading systems where timing is crucial",
    "start": "372240",
    "end": "375720"
  },
  {
    "text": "as these um tail latency spikes could um",
    "start": "375720",
    "end": "379720"
  },
  {
    "text": "cause significant performance bottleneck",
    "start": "379720",
    "end": "382759"
  },
  {
    "text": "and impact overall user",
    "start": "382759",
    "end": "385919"
  },
  {
    "text": "experience the ca of this issue lies in",
    "start": "385919",
    "end": "388479"
  },
  {
    "text": "the string problem",
    "start": "388479",
    "end": "390160"
  },
  {
    "text": "we mentioned earlier as more go routines",
    "start": "390160",
    "end": "393560"
  },
  {
    "text": "are created to handle the increasing",
    "start": "393560",
    "end": "396960"
  },
  {
    "text": "volume of requests they begin to compute",
    "start": "396960",
    "end": "399720"
  },
  {
    "text": "for CPU resource leading to more um",
    "start": "399720",
    "end": "403520"
  },
  {
    "text": "inefficient scheduling and consequently",
    "start": "403520",
    "end": "407280"
  },
  {
    "text": "longer delays um in for some of the",
    "start": "407280",
    "end": "412160"
  },
  {
    "text": "requests the problem of the simple usage",
    "start": "413160",
    "end": "415759"
  },
  {
    "text": "model is further demonstrated by these",
    "start": "415759",
    "end": "418000"
  },
  {
    "text": "charts let's look at the top graph first",
    "start": "418000",
    "end": "422400"
  },
  {
    "text": "as number of clients",
    "start": "422400",
    "end": "425120"
  },
  {
    "text": "increases um we see that the throughput",
    "start": "425120",
    "end": "427919"
  },
  {
    "text": "initially Rises and then it",
    "start": "427919",
    "end": "431280"
  },
  {
    "text": "plate the throughput plateau indicates",
    "start": "431280",
    "end": "434160"
  },
  {
    "text": "that the system has reached its maximum",
    "start": "434160",
    "end": "436680"
  },
  {
    "text": "processing capacity so adding any more",
    "start": "436680",
    "end": "440000"
  },
  {
    "text": "clients does not result in the",
    "start": "440000",
    "end": "441879"
  },
  {
    "text": "corresponding rise in",
    "start": "441879",
    "end": "445080"
  },
  {
    "text": "through essentially the system is",
    "start": "445080",
    "end": "447960"
  },
  {
    "text": "saturated and now look at the bottom",
    "start": "447960",
    "end": "451080"
  },
  {
    "text": "graph we see that uh the tail latency",
    "start": "451080",
    "end": "454160"
  },
  {
    "text": "starts to rise",
    "start": "454160",
    "end": "455759"
  },
  {
    "text": "significantly around the time when",
    "start": "455759",
    "end": "457879"
  },
  {
    "text": "through put plateus the sharp R of tail",
    "start": "457879",
    "end": "462160"
  },
  {
    "text": "latency indicate is a direct consequence",
    "start": "462160",
    "end": "466000"
  },
  {
    "text": "of the system's inability to efficiently",
    "start": "466000",
    "end": "470000"
  },
  {
    "text": "manage the growing load leading to",
    "start": "470000",
    "end": "472960"
  },
  {
    "text": "delays for some of the",
    "start": "472960",
    "end": "475960"
  },
  {
    "text": "requests the combination of uh",
    "start": "475960",
    "end": "478599"
  },
  {
    "text": "throughput plat uh throughput plateau",
    "start": "478599",
    "end": "481759"
  },
  {
    "text": "and the Shar prise Intel latency clearly",
    "start": "481759",
    "end": "484720"
  },
  {
    "text": "demonstrates the limitations of the",
    "start": "484720",
    "end": "487120"
  },
  {
    "text": "simple usage model when",
    "start": "487120",
    "end": "491000"
  },
  {
    "text": "scaled the issue of this",
    "start": "491000",
    "end": "494400"
  },
  {
    "text": "um",
    "start": "494400",
    "end": "497360"
  },
  {
    "text": "um the the cause of this uh problem is",
    "start": "497360",
    "end": "501560"
  },
  {
    "text": "um the the distraction that we mentioned",
    "start": "501560",
    "end": "505759"
  },
  {
    "text": "earlier you know while the system is",
    "start": "505759",
    "end": "508120"
  },
  {
    "text": "able to handle um um a moderate load",
    "start": "508120",
    "end": "512200"
  },
  {
    "text": "effectively it struggled at a higher",
    "start": "512200",
    "end": "516159"
  },
  {
    "text": "volume volume leading to um significant",
    "start": "516159",
    "end": "519479"
  },
  {
    "text": "performance",
    "start": "519479",
    "end": "521640"
  },
  {
    "text": "degradation now let's dive into the",
    "start": "521640",
    "end": "523880"
  },
  {
    "text": "details of our enhancment uh um",
    "start": "523880",
    "end": "528839"
  },
  {
    "text": "work but before we discuss um the",
    "start": "528839",
    "end": "532760"
  },
  {
    "text": "transition from un to to the streaming",
    "start": "532760",
    "end": "535640"
  },
  {
    "text": "model let's take another closer look at",
    "start": "535640",
    "end": "538839"
  },
  {
    "text": "um The Sur thre model in the UN",
    "start": "538839",
    "end": "542519"
  },
  {
    "text": "approach in this model uh when an order",
    "start": "542519",
    "end": "546320"
  },
  {
    "text": "request",
    "start": "546320",
    "end": "547519"
  },
  {
    "text": "arrives is server side go routine is",
    "start": "547519",
    "end": "551360"
  },
  {
    "text": "spawn to handle the request by adding a",
    "start": "551360",
    "end": "556240"
  },
  {
    "text": "uh notified callback channel to the",
    "start": "556240",
    "end": "559120"
  },
  {
    "text": "request and then passing the combined",
    "start": "559120",
    "end": "561800"
  },
  {
    "text": "struct to the other processing",
    "start": "561800",
    "end": "564839"
  },
  {
    "text": "queue after that the server go routine",
    "start": "564839",
    "end": "568120"
  },
  {
    "text": "blocks until the response to the request",
    "start": "568120",
    "end": "571240"
  },
  {
    "text": "is placed by this other order processing",
    "start": "571240",
    "end": "574279"
  },
  {
    "text": "threat in um the notified",
    "start": "574279",
    "end": "577880"
  },
  {
    "text": "Channel as we mentioned earlier this",
    "start": "577880",
    "end": "581040"
  },
  {
    "text": "approach um at times could cause a large",
    "start": "581040",
    "end": "585079"
  },
  {
    "text": "number sometimes Unbound basically",
    "start": "585079",
    "end": "588040"
  },
  {
    "text": "unbounded number of go routines to be",
    "start": "588040",
    "end": "590839"
  },
  {
    "text": "competing for um CPU resource",
    "start": "590839",
    "end": "594959"
  },
  {
    "text": "exacerbating uh uh latency spikes",
    "start": "594959",
    "end": "600480"
  },
  {
    "text": "so we transition from the UN to the",
    "start": "600640",
    "end": "604279"
  },
  {
    "text": "bidirectional um streaming uh model by",
    "start": "604279",
    "end": "608200"
  },
  {
    "text": "using three threats and two um",
    "start": "608200",
    "end": "612480"
  },
  {
    "text": "channels um two of those threats are um",
    "start": "612480",
    "end": "616519"
  },
  {
    "text": "blocking go routines um with one",
    "start": "616519",
    "end": "619839"
  },
  {
    "text": "responsible for um sending uh receiving",
    "start": "619839",
    "end": "622959"
  },
  {
    "text": "requests and sending back uh the other",
    "start": "622959",
    "end": "625720"
  },
  {
    "text": "sending back responses the third go",
    "start": "625720",
    "end": "628240"
  },
  {
    "text": "routine um",
    "start": "628240",
    "end": "629839"
  },
  {
    "text": "um basically picks up request to process",
    "start": "629839",
    "end": "632279"
  },
  {
    "text": "it and put it in the response Channel",
    "start": "632279",
    "end": "635680"
  },
  {
    "text": "and when U to avoid getting scheduled",
    "start": "635680",
    "end": "638399"
  },
  {
    "text": "off of the CPU when there's no request",
    "start": "638399",
    "end": "641320"
  },
  {
    "text": "to process it engages in busy spinning",
    "start": "641320",
    "end": "645320"
  },
  {
    "text": "and this approach resolves the uh issue",
    "start": "645320",
    "end": "647839"
  },
  {
    "text": "of uh unbounded number of go routines",
    "start": "647839",
    "end": "650959"
  },
  {
    "text": "and it delivers responses in in the same",
    "start": "650959",
    "end": "653800"
  },
  {
    "text": "order as requests come in which uh help",
    "start": "653800",
    "end": "657720"
  },
  {
    "text": "um um prevent um unwanted um tail",
    "start": "657720",
    "end": "662200"
  },
  {
    "text": "latency",
    "start": "662200",
    "end": "664720"
  },
  {
    "text": "spikes um as one of the uh blocking go",
    "start": "666200",
    "end": "669680"
  },
  {
    "text": "routine the go routine number one",
    "start": "669680",
    "end": "671440"
  },
  {
    "text": "executes in this infinite Loop um it",
    "start": "671440",
    "end": "674880"
  },
  {
    "text": "exits um gracefully when a termination",
    "start": "674880",
    "end": "678279"
  },
  {
    "text": "termination signal is received otherwise",
    "start": "678279",
    "end": "681120"
  },
  {
    "text": "it continuously listening for uh",
    "start": "681120",
    "end": "683720"
  },
  {
    "text": "incoming requests using stream. receive",
    "start": "683720",
    "end": "686519"
  },
  {
    "text": "function the function blocks will never",
    "start": "686519",
    "end": "689839"
  },
  {
    "text": "uh until a request is available and",
    "start": "689839",
    "end": "693000"
  },
  {
    "text": "after a request is received it's placed",
    "start": "693000",
    "end": "695240"
  },
  {
    "text": "in this Channel and after that the go",
    "start": "695240",
    "end": "698360"
  },
  {
    "text": "routine immediately returns to um listen",
    "start": "698360",
    "end": "701120"
  },
  {
    "text": "for the next request go routine number",
    "start": "701120",
    "end": "704120"
  },
  {
    "text": "two similarly uh is um also executes in",
    "start": "704120",
    "end": "707760"
  },
  {
    "text": "this infinite Loop and um it retrieves",
    "start": "707760",
    "end": "711560"
  },
  {
    "text": "uh response from the response Channel",
    "start": "711560",
    "end": "713800"
  },
  {
    "text": "and attempts to send it using the",
    "start": "713800",
    "end": "716000"
  },
  {
    "text": "stream. send function um the the",
    "start": "716000",
    "end": "719560"
  },
  {
    "text": "function blocks until the um request uh",
    "start": "719560",
    "end": "722800"
  },
  {
    "text": "the response is sent successfully after",
    "start": "722800",
    "end": "725200"
  },
  {
    "text": "which it immediately proceeds to",
    "start": "725200",
    "end": "727760"
  },
  {
    "text": "retrieve and send the next",
    "start": "727760",
    "end": "732000"
  },
  {
    "text": "response uh the coordinator thre is a",
    "start": "732000",
    "end": "735000"
  },
  {
    "text": "continuously active thread by either",
    "start": "735000",
    "end": "738160"
  },
  {
    "text": "processing a request or engages in busy",
    "start": "738160",
    "end": "742519"
  },
  {
    "text": "spinning when there is no request to",
    "start": "742519",
    "end": "744920"
  },
  {
    "text": "process uh it's connected to the other",
    "start": "744920",
    "end": "747120"
  },
  {
    "text": "two go routines via those two channels",
    "start": "747120",
    "end": "750600"
  },
  {
    "text": "um the the primary responsibility for",
    "start": "750600",
    "end": "753480"
  },
  {
    "text": "the coordinator threat is to process um",
    "start": "753480",
    "end": "757760"
  },
  {
    "text": "requests um um The Busy spinning",
    "start": "757760",
    "end": "761320"
  },
  {
    "text": "mechanism helps the coordinator thre to",
    "start": "761320",
    "end": "763839"
  },
  {
    "text": "stay on the CPU such that it can pick up",
    "start": "763839",
    "end": "766240"
  },
  {
    "text": "the request and process it without",
    "start": "766240",
    "end": "768399"
  },
  {
    "text": "delays and this helps the system to",
    "start": "768399",
    "end": "771040"
  },
  {
    "text": "maintain a high level of overall",
    "start": "771040",
    "end": "775440"
  },
  {
    "text": "responsiveness the transition from the",
    "start": "775720",
    "end": "777959"
  },
  {
    "text": "UN to by Direction resulted in and",
    "start": "777959",
    "end": "780760"
  },
  {
    "text": "significant performance Improvement",
    "start": "780760",
    "end": "783279"
  },
  {
    "text": "unlike the UN model where the latency",
    "start": "783279",
    "end": "786000"
  },
  {
    "text": "spikes were the uh throughput Platos",
    "start": "786000",
    "end": "790720"
  },
  {
    "text": "the the bir directional streaming model",
    "start": "790720",
    "end": "794160"
  },
  {
    "text": "continues to scale effectively and the",
    "start": "794160",
    "end": "797040"
  },
  {
    "text": "result indicates to us that the B",
    "start": "797040",
    "end": "800199"
  },
  {
    "text": "directional streaming model is better",
    "start": "800199",
    "end": "802320"
  },
  {
    "text": "equipped at handling higher throughput",
    "start": "802320",
    "end": "805040"
  },
  {
    "text": "without uh compromising on",
    "start": "805040",
    "end": "807880"
  },
  {
    "text": "latency this this is likely due to its",
    "start": "807880",
    "end": "811079"
  },
  {
    "text": "ability to mitigate the resource uh",
    "start": "811079",
    "end": "813959"
  },
  {
    "text": "contention and thrashing",
    "start": "813959",
    "end": "816199"
  },
  {
    "text": "problem um now let's move on to our",
    "start": "816199",
    "end": "819399"
  },
  {
    "text": "second enhancement which in which we",
    "start": "819399",
    "end": "821680"
  },
  {
    "text": "replace Proto buff by flat",
    "start": "821680",
    "end": "824560"
  },
  {
    "text": "buffers um the motivation behind the",
    "start": "824560",
    "end": "827480"
  },
  {
    "text": "shift from Proto to Plat buff uh flat",
    "start": "827480",
    "end": "831800"
  },
  {
    "text": "buffers is to avoid the repeated",
    "start": "831800",
    "end": "834399"
  },
  {
    "text": "serialization and",
    "start": "834399",
    "end": "835959"
  },
  {
    "text": "deserialization of data across",
    "start": "835959",
    "end": "838199"
  },
  {
    "text": "microservices",
    "start": "838199",
    "end": "840519"
  },
  {
    "text": "um the top graph shows how data was",
    "start": "840519",
    "end": "842759"
  },
  {
    "text": "handled uh in the trading system using",
    "start": "842759",
    "end": "845240"
  },
  {
    "text": "protuff as you can see after data is",
    "start": "845240",
    "end": "848759"
  },
  {
    "text": "serialized um it needs to be",
    "start": "848759",
    "end": "850800"
  },
  {
    "text": "deserialized once more when it enters um",
    "start": "850800",
    "end": "854279"
  },
  {
    "text": "another microservice and similarly the",
    "start": "854279",
    "end": "857199"
  },
  {
    "text": "deserialized data needs to be serialized",
    "start": "857199",
    "end": "859440"
  },
  {
    "text": "when it needs to be stored in the",
    "start": "859440",
    "end": "860880"
  },
  {
    "text": "storage system and this cycle just",
    "start": "860880",
    "end": "863600"
  },
  {
    "text": "continues the repeated serialization and",
    "start": "863600",
    "end": "866519"
  },
  {
    "text": "deserialization adds latency and",
    "start": "866519",
    "end": "869279"
  },
  {
    "text": "overhead um uh CPU overhead to the",
    "start": "869279",
    "end": "872680"
  },
  {
    "text": "system leading to possible um",
    "start": "872680",
    "end": "876360"
  },
  {
    "text": "performance bottle X um look at the",
    "start": "876360",
    "end": "879839"
  },
  {
    "text": "bottom uh uh diagram uh which shows the",
    "start": "879839",
    "end": "884120"
  },
  {
    "text": "new approach using um the flat buffers",
    "start": "884120",
    "end": "887560"
  },
  {
    "text": "so with the flat buffers the need for",
    "start": "887560",
    "end": "890800"
  },
  {
    "text": "repeated sterilization and distalization",
    "start": "890800",
    "end": "893839"
  },
  {
    "text": "is eliminated when the request re",
    "start": "893839",
    "end": "897240"
  },
  {
    "text": "arrives um there's no need to",
    "start": "897240",
    "end": "899120"
  },
  {
    "text": "deserialize it and instead data is",
    "start": "899120",
    "end": "901160"
  },
  {
    "text": "directly accessed from the Rob buffers",
    "start": "901160",
    "end": "903959"
  },
  {
    "text": "and later when it needs to get ready to",
    "start": "903959",
    "end": "906000"
  },
  {
    "text": "be sent to the next microservice it",
    "start": "906000",
    "end": "908560"
  },
  {
    "text": "undergoes a simple repack Pro uh",
    "start": "908560",
    "end": "911600"
  },
  {
    "text": "operation Which is far less in resource",
    "start": "911600",
    "end": "914680"
  },
  {
    "text": "intensive compared to the um the full",
    "start": "914680",
    "end": "918360"
  },
  {
    "text": "serialization process and finally when",
    "start": "918360",
    "end": "921480"
  },
  {
    "text": "the data reaches the new microservice it",
    "start": "921480",
    "end": "923920"
  },
  {
    "text": "can be used and repacked as necessary",
    "start": "923920",
    "end": "927040"
  },
  {
    "text": "without the overhead of the serialized",
    "start": "927040",
    "end": "929120"
  },
  {
    "text": "ation and",
    "start": "929120",
    "end": "930759"
  },
  {
    "text": "serialization so having gone through the",
    "start": "930759",
    "end": "932759"
  },
  {
    "text": "motivation let's move on to the how how",
    "start": "932759",
    "end": "935040"
  },
  {
    "text": "did we do the migration well first step",
    "start": "935040",
    "end": "938000"
  },
  {
    "text": "we translated field by field um the",
    "start": "938000",
    "end": "941120"
  },
  {
    "text": "schema generation def definition file",
    "start": "941120",
    "end": "943519"
  },
  {
    "text": "from pule buff to Flat",
    "start": "943519",
    "end": "945759"
  },
  {
    "text": "buffers and the second step is one of",
    "start": "945759",
    "end": "948399"
  },
  {
    "text": "the most challenging and time consuming",
    "start": "948399",
    "end": "950959"
  },
  {
    "text": "steps in this uh migration process which",
    "start": "950959",
    "end": "955160"
  },
  {
    "text": "is to ensure that the migrated flat",
    "start": "955160",
    "end": "957440"
  },
  {
    "text": "buffer schema is the exact match to uh",
    "start": "957440",
    "end": "960759"
  },
  {
    "text": "the original protuff schema as the",
    "start": "960759",
    "end": "964040"
  },
  {
    "text": "internal data representation for these",
    "start": "964040",
    "end": "966480"
  },
  {
    "text": "two are differ quite significantly there",
    "start": "966480",
    "end": "970160"
  },
  {
    "text": "is no offthe shelf tool that can verify",
    "start": "970160",
    "end": "973240"
  },
  {
    "text": "this",
    "start": "973240",
    "end": "974639"
  },
  {
    "text": "automatically to address this we uh",
    "start": "974639",
    "end": "977199"
  },
  {
    "text": "invested considerable effort uh in this",
    "start": "977199",
    "end": "980440"
  },
  {
    "text": "rigorous double check process we um",
    "start": "980440",
    "end": "983600"
  },
  {
    "text": "either uh write custom functions to",
    "start": "983600",
    "end": "986279"
  },
  {
    "text": "convert this two to a uh common format",
    "start": "986279",
    "end": "989839"
  },
  {
    "text": "such as Json for comparison or we write",
    "start": "989839",
    "end": "993319"
  },
  {
    "text": "custom functions to directly compare",
    "start": "993319",
    "end": "995360"
  },
  {
    "text": "them them to verify that that represent",
    "start": "995360",
    "end": "998160"
  },
  {
    "text": "the same data so these checks are",
    "start": "998160",
    "end": "1000759"
  },
  {
    "text": "essential to maintaining data Integrity",
    "start": "1000759",
    "end": "1004079"
  },
  {
    "text": "uh uh throughout the migration process",
    "start": "1004079",
    "end": "1008560"
  },
  {
    "text": "so now after um um thoroughly testing",
    "start": "1008560",
    "end": "1012920"
  },
  {
    "text": "and validating the migration the scheme",
    "start": "1012920",
    "end": "1015959"
  },
  {
    "text": "of migration and we proceeded to add um",
    "start": "1015959",
    "end": "1020319"
  },
  {
    "text": "to implement the code on the client side",
    "start": "1020319",
    "end": "1022920"
  },
  {
    "text": "we added code to write data into the um",
    "start": "1022920",
    "end": "1026199"
  },
  {
    "text": "R buffers and on the server side we",
    "start": "1026199",
    "end": "1029280"
  },
  {
    "text": "implemented code to access",
    "start": "1029280",
    "end": "1031720"
  },
  {
    "text": "data uh uh from the buffers so this",
    "start": "1031720",
    "end": "1035038"
  },
  {
    "text": "fully this enabled us to fully uh",
    "start": "1035039",
    "end": "1038000"
  },
  {
    "text": "leverage um flat buffers um efficient",
    "start": "1038000",
    "end": "1041880"
  },
  {
    "text": "zeroc copy",
    "start": "1041880",
    "end": "1044280"
  },
  {
    "text": "design um the transition from Proto buff",
    "start": "1044280",
    "end": "1047280"
  },
  {
    "text": "to Flat buffers also resulted in um",
    "start": "1047280",
    "end": "1051039"
  },
  {
    "text": "significant performance Improvement",
    "start": "1051039",
    "end": "1053600"
  },
  {
    "text": "across various stages of the request",
    "start": "1053600",
    "end": "1056280"
  },
  {
    "text": "response um um cycle notably we saw a",
    "start": "1056280",
    "end": "1062160"
  },
  {
    "text": "seven times um uh ENT latency",
    "start": "1062160",
    "end": "1066400"
  },
  {
    "text": "reduction um this includes receiving",
    "start": "1066400",
    "end": "1070360"
  },
  {
    "text": "requests and processing requests and",
    "start": "1070360",
    "end": "1073400"
  },
  {
    "text": "sending back responses so breaking down",
    "start": "1073400",
    "end": "1076400"
  },
  {
    "text": "further we saw 20 times uh Improvement",
    "start": "1076400",
    "end": "1079400"
  },
  {
    "text": "for receiving requests and 15 times for",
    "start": "1079400",
    "end": "1082360"
  },
  {
    "text": "internal processing the messages and 2.5",
    "start": "1082360",
    "end": "1085520"
  },
  {
    "text": "times for sending back responses those",
    "start": "1085520",
    "end": "1088840"
  },
  {
    "text": "uh results clearly demonstrated the",
    "start": "1088840",
    "end": "1091280"
  },
  {
    "text": "efficiency gains uh achieved by moving",
    "start": "1091280",
    "end": "1094440"
  },
  {
    "text": "to Flat",
    "start": "1094440",
    "end": "1097000"
  },
  {
    "text": "buffers um and next I would like to",
    "start": "1097000",
    "end": "1100919"
  },
  {
    "text": "briefly mention um the systematic",
    "start": "1100919",
    "end": "1103840"
  },
  {
    "text": "approach we adopted in load testing the",
    "start": "1103840",
    "end": "1107760"
  },
  {
    "text": "enhancements um pacing is the key",
    "start": "1107760",
    "end": "1110559"
  },
  {
    "text": "technique that we uh introduced to",
    "start": "1110559",
    "end": "1112760"
  },
  {
    "text": "simulate different real world uh load",
    "start": "1112760",
    "end": "1115760"
  },
  {
    "text": "scenarios by varying the Sleep duration",
    "start": "1115760",
    "end": "1118480"
  },
  {
    "text": "we were able to generate um uh different",
    "start": "1118480",
    "end": "1121559"
  },
  {
    "text": "levels of uh traffic load on the system",
    "start": "1121559",
    "end": "1124200"
  },
  {
    "text": "this Ena us to focus on observing um how",
    "start": "1124200",
    "end": "1128840"
  },
  {
    "text": "average and tail latency responded to um",
    "start": "1128840",
    "end": "1133120"
  },
  {
    "text": "under different uh varying conditions",
    "start": "1133120",
    "end": "1136559"
  },
  {
    "text": "and by combining the uh analysis of test",
    "start": "1136559",
    "end": "1139799"
  },
  {
    "text": "data and a detailed system profiling we",
    "start": "1139799",
    "end": "1143120"
  },
  {
    "text": "were able to identify areas for",
    "start": "1143120",
    "end": "1145799"
  },
  {
    "text": "improvement and effectively uh optimize",
    "start": "1145799",
    "end": "1148799"
  },
  {
    "text": "our system using empirical",
    "start": "1148799",
    "end": "1151280"
  },
  {
    "text": "data uh this concluded uh sharing of our",
    "start": "1151280",
    "end": "1154600"
  },
  {
    "text": "enhancement work um to improve the",
    "start": "1154600",
    "end": "1157240"
  },
  {
    "text": "trading system uh performance using grpc",
    "start": "1157240",
    "end": "1160679"
  },
  {
    "text": "next we would like to um present our",
    "start": "1160679",
    "end": "1163240"
  },
  {
    "text": "wish list for based on our experience",
    "start": "1163240",
    "end": "1165760"
  },
  {
    "text": "with grpc protuff and flat buffers and",
    "start": "1165760",
    "end": "1169080"
  },
  {
    "text": "this wish list is not intended as",
    "start": "1169080",
    "end": "1171400"
  },
  {
    "text": "criticism it and rather it's just um um",
    "start": "1171400",
    "end": "1175760"
  },
  {
    "text": "constructive feedback from the field and",
    "start": "1175760",
    "end": "1178720"
  },
  {
    "text": "hopes of help helping um enhancing those",
    "start": "1178720",
    "end": "1182559"
  },
  {
    "text": "very valuable",
    "start": "1182559",
    "end": "1184039"
  },
  {
    "text": "libraries so although we have used three",
    "start": "1184039",
    "end": "1186880"
  },
  {
    "text": "threats to work around the blocking",
    "start": "1186880",
    "end": "1189200"
  },
  {
    "text": "nature of stream that receive and stream",
    "start": "1189200",
    "end": "1191480"
  },
  {
    "text": "that send we believe a set of",
    "start": "1191480",
    "end": "1194200"
  },
  {
    "text": "non-blocking apis could uh greatly help",
    "start": "1194200",
    "end": "1197640"
  },
  {
    "text": "simplifying our implementation and",
    "start": "1197640",
    "end": "1199720"
  },
  {
    "text": "further enhancing uh",
    "start": "1199720",
    "end": "1202000"
  },
  {
    "text": "performance additionally we we think a",
    "start": "1202000",
    "end": "1204919"
  },
  {
    "text": "API to provide visibility into the",
    "start": "1204919",
    "end": "1207760"
  },
  {
    "text": "network level uh queueing um would great",
    "start": "1207760",
    "end": "1212240"
  },
  {
    "text": "would be invaluable in helping",
    "start": "1212240",
    "end": "1213919"
  },
  {
    "text": "diagnosing and optimizing um um the",
    "start": "1213919",
    "end": "1218280"
  },
  {
    "text": "system behaviors under their",
    "start": "1218280",
    "end": "1220400"
  },
  {
    "text": "load um although we have transition from",
    "start": "1220400",
    "end": "1223880"
  },
  {
    "text": "um Proto buff to Flat buffers we believe",
    "start": "1223880",
    "end": "1226200"
  },
  {
    "text": "that Proto buff could greatly benefit",
    "start": "1226200",
    "end": "1229520"
  },
  {
    "text": "performance sensitive applications by um",
    "start": "1229520",
    "end": "1232760"
  },
  {
    "text": "enable by allowing this enable option",
    "start": "1232760",
    "end": "1237000"
  },
  {
    "text": "for developers to pre-allocate memory",
    "start": "1237000",
    "end": "1240159"
  },
  {
    "text": "for one of",
    "start": "1240159",
    "end": "1241480"
  },
  {
    "text": "fields uh also we believe allowing uh",
    "start": "1241480",
    "end": "1245600"
  },
  {
    "text": "opening some direct and um partial",
    "start": "1245600",
    "end": "1248159"
  },
  {
    "text": "access to the raw buffers could uh help",
    "start": "1248159",
    "end": "1250480"
  },
  {
    "text": "with scenarios where low-level access of",
    "start": "1250480",
    "end": "1254080"
  },
  {
    "text": "memory is",
    "start": "1254080",
    "end": "1255960"
  },
  {
    "text": "critical and for flat buffers right now",
    "start": "1255960",
    "end": "1258720"
  },
  {
    "text": "the codc requires a flat buffer St",
    "start": "1258720",
    "end": "1261080"
  },
  {
    "text": "Builder to uh be used when building a",
    "start": "1261080",
    "end": "1264600"
  },
  {
    "text": "message buffer and this in turn gets",
    "start": "1264600",
    "end": "1266559"
  },
  {
    "text": "pass to a grpc send function and when",
    "start": "1266559",
    "end": "1269760"
  },
  {
    "text": "the message buffer is received the",
    "start": "1269760",
    "end": "1272159"
  },
  {
    "text": "received function returns a pointer to",
    "start": "1272159",
    "end": "1274799"
  },
  {
    "text": "the root type of the message struct we",
    "start": "1274799",
    "end": "1277760"
  },
  {
    "text": "believe uh it would be advantageous if",
    "start": "1277760",
    "end": "1280440"
  },
  {
    "text": "we can unify those uh processes to",
    "start": "1280440",
    "end": "1283080"
  },
  {
    "text": "streamline buffer handling that could",
    "start": "1283080",
    "end": "1285520"
  },
  {
    "text": "make uh forwarding data received easier",
    "start": "1285520",
    "end": "1290000"
  },
  {
    "text": "additionally we are hoping that there",
    "start": "1290000",
    "end": "1292200"
  },
  {
    "text": "will be more integration between grpc",
    "start": "1292200",
    "end": "1294840"
  },
  {
    "text": "and flat buffers that um to allow easier",
    "start": "1294840",
    "end": "1298520"
  },
  {
    "text": "access to data fields without the need",
    "start": "1298520",
    "end": "1300960"
  },
  {
    "text": "of uh extensive code that will really",
    "start": "1300960",
    "end": "1304000"
  },
  {
    "text": "benefit um developers working with uh",
    "start": "1304000",
    "end": "1307480"
  },
  {
    "text": "performance sensitive",
    "start": "1307480",
    "end": "1309880"
  },
  {
    "text": "applications and with that thank you all",
    "start": "1309880",
    "end": "1312279"
  },
  {
    "text": "for your time",
    "start": "1312279",
    "end": "1314510"
  },
  {
    "text": "[Applause]",
    "start": "1314510",
    "end": "1318680"
  }
]