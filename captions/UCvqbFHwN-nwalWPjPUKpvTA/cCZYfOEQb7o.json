[
  {
    "start": "0",
    "end": "58000"
  },
  {
    "text": "hello",
    "start": "1439",
    "end": "3280"
  },
  {
    "text": "hello kubecon tracy from new vector here",
    "start": "3280",
    "end": "6399"
  },
  {
    "text": "bringing you a little bit of security as",
    "start": "6399",
    "end": "9040"
  },
  {
    "text": "code",
    "start": "9040",
    "end": "9840"
  },
  {
    "text": "uh egress inferno stay in a live edition",
    "start": "9840",
    "end": "17760"
  },
  {
    "text": "so what i'm going to be talking about",
    "start": "17760",
    "end": "19039"
  },
  {
    "text": "today is kubernetes security as code",
    "start": "19039",
    "end": "21760"
  },
  {
    "text": "we're going to take one specific use",
    "start": "21760",
    "end": "24080"
  },
  {
    "text": "case",
    "start": "24080",
    "end": "24960"
  },
  {
    "text": "and compare it against different ways of",
    "start": "24960",
    "end": "27359"
  },
  {
    "text": "implementing",
    "start": "27359",
    "end": "28480"
  },
  {
    "text": "within a kubernetes environment those",
    "start": "28480",
    "end": "31760"
  },
  {
    "text": "different ways are going to be with",
    "start": "31760",
    "end": "33360"
  },
  {
    "text": "kubernetes security policies",
    "start": "33360",
    "end": "35440"
  },
  {
    "text": "open shift istio egress control as well",
    "start": "35440",
    "end": "38719"
  },
  {
    "text": "as",
    "start": "38719",
    "end": "39520"
  },
  {
    "text": "new vector egress control which is a",
    "start": "39520",
    "end": "41520"
  },
  {
    "text": "commercial approach to egress control",
    "start": "41520",
    "end": "44719"
  },
  {
    "text": "if you're asking yourself well why",
    "start": "44719",
    "end": "46960"
  },
  {
    "text": "egress inferno stay in a live edition",
    "start": "46960",
    "end": "49440"
  },
  {
    "text": "well that's what happens when you mix",
    "start": "49440",
    "end": "51199"
  },
  {
    "text": "the conference theme with disco",
    "start": "51199",
    "end": "53760"
  },
  {
    "text": "and throw in a little bit of copyright",
    "start": "53760",
    "end": "55360"
  },
  {
    "text": "infringement on the side as well",
    "start": "55360",
    "end": "57199"
  },
  {
    "text": "enjoy so first let's take a",
    "start": "57199",
    "end": "60559"
  },
  {
    "start": "58000",
    "end": "58000"
  },
  {
    "text": "very quick big picture view of security",
    "start": "60559",
    "end": "63039"
  },
  {
    "text": "issues for containers",
    "start": "63039",
    "end": "64400"
  },
  {
    "text": "microsoft deployments and then we will",
    "start": "64400",
    "end": "66640"
  },
  {
    "text": "quickly narrow",
    "start": "66640",
    "end": "67439"
  },
  {
    "text": "into our topic ideally security is being",
    "start": "67439",
    "end": "70799"
  },
  {
    "text": "built from the beginning of your",
    "start": "70799",
    "end": "72080"
  },
  {
    "text": "pipeline",
    "start": "72080",
    "end": "73439"
  },
  {
    "text": "you're wanting to prevent",
    "start": "73439",
    "end": "74400"
  },
  {
    "text": "vulnerabilities from getting into that",
    "start": "74400",
    "end": "76080"
  },
  {
    "text": "pipeline so you're doing scanning",
    "start": "76080",
    "end": "78080"
  },
  {
    "text": "you're also wanting to try to prevent",
    "start": "78080",
    "end": "79880"
  },
  {
    "text": "misconfigurations with",
    "start": "79880",
    "end": "81520"
  },
  {
    "text": "kubernetes the hosts themselves",
    "start": "81520",
    "end": "84560"
  },
  {
    "text": "if you are using kubernetes then you are",
    "start": "84560",
    "end": "87119"
  },
  {
    "text": "all too aware that you don't want to",
    "start": "87119",
    "end": "88799"
  },
  {
    "text": "negatively impact the velocity due to",
    "start": "88799",
    "end": "92079"
  },
  {
    "text": "network issues or security everything",
    "start": "92079",
    "end": "94479"
  },
  {
    "text": "needs to be as automated as possible",
    "start": "94479",
    "end": "96560"
  },
  {
    "text": "once those containers are deployed there",
    "start": "96560",
    "end": "98479"
  },
  {
    "text": "are not only risks from the applications",
    "start": "98479",
    "end": "100560"
  },
  {
    "text": "themselves",
    "start": "100560",
    "end": "101439"
  },
  {
    "text": "but now you have the new attack surfaces",
    "start": "101439",
    "end": "103520"
  },
  {
    "text": "such as the kubernetes api",
    "start": "103520",
    "end": "105600"
  },
  {
    "text": "the orchestrator itself the container",
    "start": "105600",
    "end": "107680"
  },
  {
    "text": "runtime or if you're using a service",
    "start": "107680",
    "end": "109680"
  },
  {
    "text": "mesh like istio",
    "start": "109680",
    "end": "111119"
  },
  {
    "text": "the control day the control or data",
    "start": "111119",
    "end": "113759"
  },
  {
    "text": "plane",
    "start": "113759",
    "end": "114560"
  },
  {
    "text": "can also be a potential attack vector",
    "start": "114560",
    "end": "117600"
  },
  {
    "text": "and finally we have all the traditional",
    "start": "117600",
    "end": "119360"
  },
  {
    "text": "attacks against applications just like",
    "start": "119360",
    "end": "121119"
  },
  {
    "text": "we did before containers",
    "start": "121119",
    "end": "122560"
  },
  {
    "text": "vulnerability attacks ransomware crypto",
    "start": "122560",
    "end": "124560"
  },
  {
    "text": "mining these are all serious things to",
    "start": "124560",
    "end": "126479"
  },
  {
    "text": "think about",
    "start": "126479",
    "end": "127360"
  },
  {
    "text": "but today i am going to focus on one",
    "start": "127360",
    "end": "130399"
  },
  {
    "text": "aspect of security",
    "start": "130399",
    "end": "131840"
  },
  {
    "text": "and that is the connections leaving the",
    "start": "131840",
    "end": "134080"
  },
  {
    "text": "container workloads to",
    "start": "134080",
    "end": "135440"
  },
  {
    "text": "outside of the cluster as my granddaddy",
    "start": "135440",
    "end": "138239"
  },
  {
    "text": "said",
    "start": "138239",
    "end": "138800"
  },
  {
    "text": "don't rob a bank on half a tank getting",
    "start": "138800",
    "end": "141360"
  },
  {
    "text": "away",
    "start": "141360",
    "end": "142160"
  },
  {
    "text": "is half the battle so if getting away is",
    "start": "142160",
    "end": "144640"
  },
  {
    "text": "worth",
    "start": "144640",
    "end": "145440"
  },
  {
    "text": "their time doing egress control is",
    "start": "145440",
    "end": "147599"
  },
  {
    "text": "certainly going to be worth your time",
    "start": "147599",
    "end": "149840"
  },
  {
    "text": "when we're talking about egress control",
    "start": "149840",
    "end": "152000"
  },
  {
    "start": "151000",
    "end": "151000"
  },
  {
    "text": "let's just assume that's any connection",
    "start": "152000",
    "end": "153680"
  },
  {
    "text": "that goes outside of the kubernetes",
    "start": "153680",
    "end": "155360"
  },
  {
    "text": "cluster",
    "start": "155360",
    "end": "156800"
  },
  {
    "text": "or that's for namespace for kubernetes",
    "start": "156800",
    "end": "159599"
  },
  {
    "text": "openshift describes that as outside of",
    "start": "159599",
    "end": "161360"
  },
  {
    "text": "the project",
    "start": "161360",
    "end": "162879"
  },
  {
    "text": "this could be a desired connection to",
    "start": "162879",
    "end": "165200"
  },
  {
    "text": "the internet",
    "start": "165200",
    "end": "166000"
  },
  {
    "text": "an api service a popular domain",
    "start": "166000",
    "end": "168560"
  },
  {
    "text": "basically anything outside of the",
    "start": "168560",
    "end": "170080"
  },
  {
    "text": "cluster",
    "start": "170080",
    "end": "171280"
  },
  {
    "text": "even like to a legacy database or",
    "start": "171280",
    "end": "173440"
  },
  {
    "text": "something like that",
    "start": "173440",
    "end": "174720"
  },
  {
    "text": "the reason egress control is worth at",
    "start": "174720",
    "end": "177360"
  },
  {
    "text": "least",
    "start": "177360",
    "end": "177760"
  },
  {
    "text": "15 minutes of your time is because this",
    "start": "177760",
    "end": "179599"
  },
  {
    "text": "is how someone actually makes off with",
    "start": "179599",
    "end": "181519"
  },
  {
    "text": "your data",
    "start": "181519",
    "end": "182560"
  },
  {
    "text": "we too often focus on preventing attacks",
    "start": "182560",
    "end": "184879"
  },
  {
    "text": "or vulnerabilities of getting into our",
    "start": "184879",
    "end": "186400"
  },
  {
    "text": "environments",
    "start": "186400",
    "end": "187360"
  },
  {
    "text": "but the egress connections are literally",
    "start": "187360",
    "end": "189360"
  },
  {
    "text": "the getaway car",
    "start": "189360",
    "end": "190879"
  },
  {
    "text": "in order to get the value of an",
    "start": "190879",
    "end": "192480"
  },
  {
    "text": "infiltration the attacker",
    "start": "192480",
    "end": "194480"
  },
  {
    "text": "may need to use a reverse shell or",
    "start": "194480",
    "end": "197040"
  },
  {
    "text": "connect to a",
    "start": "197040",
    "end": "198319"
  },
  {
    "text": "command and control server or in the",
    "start": "198319",
    "end": "200800"
  },
  {
    "text": "case of crypto mining",
    "start": "200800",
    "end": "202560"
  },
  {
    "text": "you need an egress to get your bitcoin",
    "start": "202560",
    "end": "204720"
  },
  {
    "text": "credit",
    "start": "204720",
    "end": "205760"
  },
  {
    "text": "with kubernetes egress control can be a",
    "start": "205760",
    "end": "207840"
  },
  {
    "text": "challenge because the source ips of the",
    "start": "207840",
    "end": "209680"
  },
  {
    "text": "pods change dynamically when they're",
    "start": "209680",
    "end": "211360"
  },
  {
    "text": "spun up",
    "start": "211360",
    "end": "212239"
  },
  {
    "text": "or moved node to node this makes it",
    "start": "212239",
    "end": "215040"
  },
  {
    "text": "difficult for traditional firewalls or",
    "start": "215040",
    "end": "216640"
  },
  {
    "text": "gateways that need",
    "start": "216640",
    "end": "217680"
  },
  {
    "text": "a source ip address to base their",
    "start": "217680",
    "end": "220319"
  },
  {
    "text": "policies on",
    "start": "220319",
    "end": "221599"
  },
  {
    "text": "if you're trying to funnel all your",
    "start": "221599",
    "end": "223040"
  },
  {
    "text": "traffic through a gateway inside of the",
    "start": "223040",
    "end": "224720"
  },
  {
    "text": "cluster",
    "start": "224720",
    "end": "225280"
  },
  {
    "text": "in order to egress that too can become a",
    "start": "225280",
    "end": "228400"
  },
  {
    "text": "bottleneck",
    "start": "228400",
    "end": "229280"
  },
  {
    "text": "and that can create some performance",
    "start": "229280",
    "end": "230799"
  },
  {
    "text": "issues or even obscure the source",
    "start": "230799",
    "end": "233760"
  },
  {
    "text": "or the content of the requesting service",
    "start": "233760",
    "end": "236799"
  },
  {
    "text": "for example if a certain service is",
    "start": "236799",
    "end": "238480"
  },
  {
    "text": "allowed to egress coming from a certain",
    "start": "238480",
    "end": "240720"
  },
  {
    "text": "pod",
    "start": "240720",
    "end": "241599"
  },
  {
    "text": "and that pod needs to be identified by",
    "start": "241599",
    "end": "243680"
  },
  {
    "text": "labels or service names",
    "start": "243680",
    "end": "246000"
  },
  {
    "text": "instead of ip addresses so let's take a",
    "start": "246000",
    "end": "248560"
  },
  {
    "start": "248000",
    "end": "248000"
  },
  {
    "text": "look at some basic egress controls built",
    "start": "248560",
    "end": "250879"
  },
  {
    "text": "into",
    "start": "250879",
    "end": "251439"
  },
  {
    "text": "kubernetes this will be a very quick",
    "start": "251439",
    "end": "253200"
  },
  {
    "text": "review in kubernetes you must be using a",
    "start": "253200",
    "end": "256320"
  },
  {
    "text": "cni plug-in that supports the",
    "start": "256320",
    "end": "258239"
  },
  {
    "text": "enforcement",
    "start": "258239",
    "end": "258959"
  },
  {
    "text": "of network policy in general and",
    "start": "258959",
    "end": "262000"
  },
  {
    "text": "it has to be enabled not just using",
    "start": "262000",
    "end": "265040"
  },
  {
    "text": "the cni without enabling it will not",
    "start": "265040",
    "end": "267280"
  },
  {
    "text": "allow your",
    "start": "267280",
    "end": "268080"
  },
  {
    "text": "network security policies to take effect",
    "start": "268080",
    "end": "271680"
  },
  {
    "text": "this is inner pod as well as egress",
    "start": "271680",
    "end": "274400"
  },
  {
    "text": "control",
    "start": "274400",
    "end": "275199"
  },
  {
    "text": "the default is that all pods can egress",
    "start": "275199",
    "end": "277600"
  },
  {
    "text": "to the cluster",
    "start": "277600",
    "end": "278720"
  },
  {
    "text": "but as soon as you enable a single",
    "start": "278720",
    "end": "280560"
  },
  {
    "text": "network policy egress control",
    "start": "280560",
    "end": "283040"
  },
  {
    "text": "is then enforced and in kubernetes you",
    "start": "283040",
    "end": "285280"
  },
  {
    "text": "can create egress control based on a",
    "start": "285280",
    "end": "287440"
  },
  {
    "text": "destination ip address",
    "start": "287440",
    "end": "289199"
  },
  {
    "text": "or port or you can block all egress",
    "start": "289199",
    "end": "291840"
  },
  {
    "text": "controls",
    "start": "291840",
    "end": "292720"
  },
  {
    "text": "again this is a name space based policy",
    "start": "292720",
    "end": "296880"
  },
  {
    "text": "now there are some limitations",
    "start": "296880",
    "end": "299919"
  },
  {
    "text": "for example you can only allow specific",
    "start": "299919",
    "end": "302960"
  },
  {
    "text": "egress",
    "start": "302960",
    "end": "303919"
  },
  {
    "text": "there's no concept of deny to specific",
    "start": "303919",
    "end": "306560"
  },
  {
    "text": "ips so if you're",
    "start": "306560",
    "end": "307919"
  },
  {
    "text": "if you've got a block of ips that are in",
    "start": "307919",
    "end": "309919"
  },
  {
    "text": "allow you can't then",
    "start": "309919",
    "end": "312000"
  },
  {
    "text": "deny specific ips within those allows",
    "start": "312000",
    "end": "315360"
  },
  {
    "text": "there's no concept of external outside",
    "start": "315360",
    "end": "317840"
  },
  {
    "text": "of the cluster",
    "start": "317840",
    "end": "319039"
  },
  {
    "text": "so you have to specifically and now",
    "start": "319039",
    "end": "321840"
  },
  {
    "text": "allow connections",
    "start": "321840",
    "end": "323039"
  },
  {
    "text": "outside of the namespace and then",
    "start": "323039",
    "end": "325199"
  },
  {
    "text": "separately",
    "start": "325199",
    "end": "326080"
  },
  {
    "text": "to specific services there's no concept",
    "start": "326080",
    "end": "328800"
  },
  {
    "text": "of rule prioritization or order",
    "start": "328800",
    "end": "331039"
  },
  {
    "text": "so if you're familiar with firewall",
    "start": "331039",
    "end": "332479"
  },
  {
    "text": "rules you know that rule order is",
    "start": "332479",
    "end": "334560"
  },
  {
    "text": "important for how the rules are hit",
    "start": "334560",
    "end": "336560"
  },
  {
    "text": "so that that can be cumbersome if",
    "start": "336560",
    "end": "338960"
  },
  {
    "text": "there's no host name",
    "start": "338960",
    "end": "340240"
  },
  {
    "text": "or dns support red hat's open shift",
    "start": "340240",
    "end": "344560"
  },
  {
    "start": "343000",
    "end": "343000"
  },
  {
    "text": "extends kubernetes and adds some nice",
    "start": "344560",
    "end": "346800"
  },
  {
    "text": "functionality",
    "start": "346800",
    "end": "347840"
  },
  {
    "text": "by using custom resource definition or",
    "start": "347840",
    "end": "350400"
  },
  {
    "text": "crd",
    "start": "350400",
    "end": "351680"
  },
  {
    "text": "called the egress network policy egress",
    "start": "351680",
    "end": "355120"
  },
  {
    "text": "network policy",
    "start": "355120",
    "end": "356240"
  },
  {
    "text": "is able to deploy an egress firewall",
    "start": "356240",
    "end": "359199"
  },
  {
    "text": "which does recognize the concept of",
    "start": "359199",
    "end": "361600"
  },
  {
    "text": "egress outside a cluster you can enforce",
    "start": "361600",
    "end": "365280"
  },
  {
    "text": "one egress network policy per namespace",
    "start": "365280",
    "end": "367840"
  },
  {
    "text": "but not",
    "start": "367840",
    "end": "368639"
  },
  {
    "text": "on the default namespace so everything",
    "start": "368639",
    "end": "371919"
  },
  {
    "text": "needs to be",
    "start": "371919",
    "end": "372800"
  },
  {
    "text": "in a designated namespace the openshift",
    "start": "372800",
    "end": "376080"
  },
  {
    "text": "crd",
    "start": "376080",
    "end": "376720"
  },
  {
    "text": "does support the resolution of dns names",
    "start": "376720",
    "end": "379759"
  },
  {
    "text": "and adds the concept of rule",
    "start": "379759",
    "end": "382880"
  },
  {
    "text": "ordering the different rules shown for",
    "start": "382880",
    "end": "385919"
  },
  {
    "text": "egress",
    "start": "385919",
    "end": "386479"
  },
  {
    "text": "in the example i have here on the right",
    "start": "386479",
    "end": "388880"
  },
  {
    "text": "is exactly the order that they will be",
    "start": "388880",
    "end": "390960"
  },
  {
    "text": "enforced",
    "start": "390960",
    "end": "391919"
  },
  {
    "text": "much like a firewall the egress network",
    "start": "391919",
    "end": "394800"
  },
  {
    "text": "policy also supports deny rules",
    "start": "394800",
    "end": "397280"
  },
  {
    "text": "in addition to the allow rules and has a",
    "start": "397280",
    "end": "399919"
  },
  {
    "text": "granularity at the layer",
    "start": "399919",
    "end": "402080"
  },
  {
    "text": "4 port level a few limitations first",
    "start": "402080",
    "end": "405440"
  },
  {
    "text": "the egress control does not apply to",
    "start": "405440",
    "end": "407360"
  },
  {
    "text": "routes so if you're using routes",
    "start": "407360",
    "end": "409440"
  },
  {
    "text": "to send traffic from the name space",
    "start": "409440",
    "end": "412080"
  },
  {
    "text": "through the pod to a router",
    "start": "412080",
    "end": "413919"
  },
  {
    "text": "the egress controls will not apply to",
    "start": "413919",
    "end": "416240"
  },
  {
    "text": "those routes",
    "start": "416240",
    "end": "417440"
  },
  {
    "text": "secondly the egress controls you see",
    "start": "417440",
    "end": "419360"
  },
  {
    "text": "here apply to the demo",
    "start": "419360",
    "end": "421440"
  },
  {
    "text": "namespace but notice there are no pod",
    "start": "421440",
    "end": "424240"
  },
  {
    "text": "selectors",
    "start": "424240",
    "end": "425120"
  },
  {
    "text": "in kubernetes you can do namespace and",
    "start": "425120",
    "end": "427199"
  },
  {
    "text": "pod selectors",
    "start": "427199",
    "end": "428240"
  },
  {
    "text": "but in openshift you can only apply",
    "start": "428240",
    "end": "430960"
  },
  {
    "text": "namespace rules",
    "start": "430960",
    "end": "433039"
  },
  {
    "text": "and in neither kubernetes and open shift",
    "start": "433039",
    "end": "436160"
  },
  {
    "text": "there is not an ability to verify the",
    "start": "436160",
    "end": "439199"
  },
  {
    "text": "application protocol at layer 7 for",
    "start": "439199",
    "end": "441599"
  },
  {
    "text": "egress",
    "start": "441599",
    "end": "442560"
  },
  {
    "text": "and that's another layer of security",
    "start": "442560",
    "end": "444160"
  },
  {
    "text": "that can prevent tunneling",
    "start": "444160",
    "end": "446240"
  },
  {
    "text": "or other types of attacks which try to",
    "start": "446240",
    "end": "449039"
  },
  {
    "text": "mask themselves",
    "start": "449039",
    "end": "449919"
  },
  {
    "text": "inside of a network protocol so the",
    "start": "449919",
    "end": "452880"
  },
  {
    "text": "ability to verify the application",
    "start": "452880",
    "end": "454720"
  },
  {
    "text": "protocol being used",
    "start": "454720",
    "end": "455919"
  },
  {
    "text": "not just define it but verify it",
    "start": "455919",
    "end": "459039"
  },
  {
    "text": "for like say mysql mongodb",
    "start": "459039",
    "end": "462080"
  },
  {
    "text": "ssl that is not supported and as noted",
    "start": "462080",
    "end": "465680"
  },
  {
    "text": "the order of the rules here",
    "start": "465680",
    "end": "467360"
  },
  {
    "text": "must be set and maintained in the yaml",
    "start": "467360",
    "end": "470160"
  },
  {
    "text": "file",
    "start": "470160",
    "end": "471520"
  },
  {
    "text": "a third way of implementing egress rules",
    "start": "471520",
    "end": "474000"
  },
  {
    "text": "might be through a service mesh",
    "start": "474000",
    "end": "476000"
  },
  {
    "text": "such as istio if you're familiar with",
    "start": "476000",
    "end": "478879"
  },
  {
    "text": "the architecture of istio",
    "start": "478879",
    "end": "480319"
  },
  {
    "text": "or kubernetes service mesh products you",
    "start": "480319",
    "end": "483280"
  },
  {
    "text": "know that a sidecar",
    "start": "483280",
    "end": "484479"
  },
  {
    "text": "proxy is deployed next to the pod for",
    "start": "484479",
    "end": "487599"
  },
  {
    "text": "every application workload",
    "start": "487599",
    "end": "489520"
  },
  {
    "text": "and the connections will go through that",
    "start": "489520",
    "end": "491599"
  },
  {
    "text": "sidecar proxy",
    "start": "491599",
    "end": "493520"
  },
  {
    "text": "that's how you can actually implement",
    "start": "493520",
    "end": "495599"
  },
  {
    "text": "egress control",
    "start": "495599",
    "end": "497520"
  },
  {
    "text": "using a service mesh via that sidecar",
    "start": "497520",
    "end": "499919"
  },
  {
    "text": "proxy",
    "start": "499919",
    "end": "501120"
  },
  {
    "text": "an istio egress is allowed through a",
    "start": "501120",
    "end": "503680"
  },
  {
    "text": "sidecar proxy for dns lookups",
    "start": "503680",
    "end": "506000"
  },
  {
    "text": "as well as http and https traffic",
    "start": "506000",
    "end": "509759"
  },
  {
    "text": "you can see the mesh example here on the",
    "start": "509759",
    "end": "512320"
  },
  {
    "text": "right",
    "start": "512320",
    "end": "513039"
  },
  {
    "text": "is setting an outbound traffic policy",
    "start": "513039",
    "end": "516080"
  },
  {
    "text": "allowing https egress",
    "start": "516080",
    "end": "519200"
  },
  {
    "text": "you do have the flexibility to bypass",
    "start": "519200",
    "end": "521518"
  },
  {
    "start": "520000",
    "end": "520000"
  },
  {
    "text": "the sdo proxy for a specific range of ip",
    "start": "521519",
    "end": "524880"
  },
  {
    "text": "addresses and you can implement egress",
    "start": "524880",
    "end": "527839"
  },
  {
    "text": "control",
    "start": "527839",
    "end": "528480"
  },
  {
    "text": "in istio via an egress gateway",
    "start": "528480",
    "end": "531839"
  },
  {
    "text": "which will allow access to external http",
    "start": "531839",
    "end": "535279"
  },
  {
    "text": "https services",
    "start": "535279",
    "end": "537200"
  },
  {
    "text": "from applications inside the mesh a",
    "start": "537200",
    "end": "540240"
  },
  {
    "text": "specific use case for this approach",
    "start": "540240",
    "end": "542240"
  },
  {
    "text": "might be where a cluster or an",
    "start": "542240",
    "end": "545040"
  },
  {
    "text": "applications node",
    "start": "545040",
    "end": "546240"
  },
  {
    "text": "application nodes don't have public ips",
    "start": "546240",
    "end": "549360"
  },
  {
    "text": "so the in-mesh services that run on them",
    "start": "549360",
    "end": "551760"
  },
  {
    "text": "cannot access the internet",
    "start": "551760",
    "end": "553920"
  },
  {
    "text": "by defining an egress gateway you can",
    "start": "553920",
    "end": "556160"
  },
  {
    "text": "direct all of the egress traffic through",
    "start": "556160",
    "end": "558399"
  },
  {
    "text": "it",
    "start": "558399",
    "end": "558800"
  },
  {
    "text": "and allocate public ips to the gateway",
    "start": "558800",
    "end": "561200"
  },
  {
    "text": "nodes so",
    "start": "561200",
    "end": "562080"
  },
  {
    "text": "application nodes can access external",
    "start": "562080",
    "end": "564720"
  },
  {
    "text": "services",
    "start": "564720",
    "end": "565600"
  },
  {
    "text": "in a controlled way the limitations of a",
    "start": "565600",
    "end": "569440"
  },
  {
    "text": "service mesh first and foremost",
    "start": "569440",
    "end": "571839"
  },
  {
    "text": "and i'm taking this from istio",
    "start": "571839",
    "end": "573360"
  },
  {
    "text": "documentation a sidecar proxy",
    "start": "573360",
    "end": "576000"
  },
  {
    "text": "is not considered secure and can be",
    "start": "576000",
    "end": "578560"
  },
  {
    "text": "bypassed",
    "start": "578560",
    "end": "579360"
  },
  {
    "text": "so whether it's being bypassed for",
    "start": "579360",
    "end": "580880"
  },
  {
    "text": "specific ip ranges",
    "start": "580880",
    "end": "582720"
  },
  {
    "text": "or for a malicious bypass of the proxy",
    "start": "582720",
    "end": "586080"
  },
  {
    "text": "istio will not guarantee traffic is",
    "start": "586080",
    "end": "588160"
  },
  {
    "text": "going through the proxy and as i said",
    "start": "588160",
    "end": "590640"
  },
  {
    "text": "before",
    "start": "590640",
    "end": "591120"
  },
  {
    "text": "other than http or https there is no",
    "start": "591120",
    "end": "594480"
  },
  {
    "text": "verification",
    "start": "594480",
    "end": "595440"
  },
  {
    "text": "of application protocol and if you're",
    "start": "595440",
    "end": "598000"
  },
  {
    "text": "thinking about using the egress gateway",
    "start": "598000",
    "end": "600160"
  },
  {
    "text": "approach",
    "start": "600160",
    "end": "601200"
  },
  {
    "text": "and funneling traffic through that",
    "start": "601200",
    "end": "602880"
  },
  {
    "text": "gateway again",
    "start": "602880",
    "end": "604880"
  },
  {
    "text": "istio's documentation says it cannot",
    "start": "604880",
    "end": "608320"
  },
  {
    "text": "securely enforce all the traffic that",
    "start": "608320",
    "end": "611120"
  },
  {
    "text": "goes through the egress",
    "start": "611120",
    "end": "612880"
  },
  {
    "text": "gateway so if you really want to lock",
    "start": "612880",
    "end": "614959"
  },
  {
    "text": "down your environment",
    "start": "614959",
    "end": "616000"
  },
  {
    "text": "you're going to have to probably use a",
    "start": "616000",
    "end": "618000"
  },
  {
    "text": "combination of",
    "start": "618000",
    "end": "619440"
  },
  {
    "text": "istio gateway policy and maybe some",
    "start": "619440",
    "end": "622160"
  },
  {
    "text": "basic kubernetes network policies",
    "start": "622160",
    "end": "624399"
  },
  {
    "text": "combine those together to enforce all",
    "start": "624399",
    "end": "626240"
  },
  {
    "text": "the traffic is going through the gateway",
    "start": "626240",
    "end": "628399"
  },
  {
    "text": "and denying all of the other egress",
    "start": "628399",
    "end": "630959"
  },
  {
    "text": "traffic perhaps",
    "start": "630959",
    "end": "632480"
  },
  {
    "text": "a little bit more prone to",
    "start": "632480",
    "end": "634760"
  },
  {
    "text": "misconfiguration",
    "start": "634760",
    "end": "636240"
  },
  {
    "text": "or potential unknown holes that allow",
    "start": "636240",
    "end": "639360"
  },
  {
    "text": "egress that you may not be aware of",
    "start": "639360",
    "end": "642399"
  },
  {
    "text": "and finally the performance",
    "start": "642399",
    "end": "644240"
  },
  {
    "text": "considerations of a side car",
    "start": "644240",
    "end": "645920"
  },
  {
    "text": "on every pod enforcing egress or",
    "start": "645920",
    "end": "649120"
  },
  {
    "text": "funneling all of the traffic through the",
    "start": "649120",
    "end": "651440"
  },
  {
    "text": "gateway",
    "start": "651440",
    "end": "652800"
  },
  {
    "text": "depending on your application",
    "start": "652800",
    "end": "654079"
  },
  {
    "text": "performance that could be an impairment",
    "start": "654079",
    "end": "656240"
  },
  {
    "text": "there",
    "start": "656240",
    "end": "657200"
  },
  {
    "text": "so now let's take a look at a fourth way",
    "start": "657200",
    "end": "659200"
  },
  {
    "start": "659000",
    "end": "659000"
  },
  {
    "text": "of doing egress control and that would",
    "start": "659200",
    "end": "661360"
  },
  {
    "text": "be with",
    "start": "661360",
    "end": "662160"
  },
  {
    "text": "a commercial product called new vector",
    "start": "662160",
    "end": "664399"
  },
  {
    "text": "new vector is a container security",
    "start": "664399",
    "end": "666640"
  },
  {
    "text": "product that can enforce network egress",
    "start": "666640",
    "end": "669440"
  },
  {
    "text": "control policies",
    "start": "669440",
    "end": "670880"
  },
  {
    "text": "based on ip address source destination",
    "start": "670880",
    "end": "673600"
  },
  {
    "text": "for applications running outside of a",
    "start": "673600",
    "end": "675279"
  },
  {
    "text": "cluster",
    "start": "675279",
    "end": "676240"
  },
  {
    "text": "or dns names that can be resolved",
    "start": "676240",
    "end": "679279"
  },
  {
    "text": "new vector also verifies the layer 7",
    "start": "679279",
    "end": "682160"
  },
  {
    "text": "application protocol",
    "start": "682160",
    "end": "683680"
  },
  {
    "text": "provides support beyond http and https",
    "start": "683680",
    "end": "687120"
  },
  {
    "text": "to include tcp udp dns and",
    "start": "687120",
    "end": "690800"
  },
  {
    "text": "others also provides granular egress",
    "start": "690800",
    "end": "694240"
  },
  {
    "text": "rules beyond",
    "start": "694240",
    "end": "695440"
  },
  {
    "text": "network ip addresses or host names but",
    "start": "695440",
    "end": "698000"
  },
  {
    "text": "that also",
    "start": "698000",
    "end": "698959"
  },
  {
    "text": "use the container native deployment",
    "start": "698959",
    "end": "701680"
  },
  {
    "text": "names",
    "start": "701680",
    "end": "702399"
  },
  {
    "text": "labels or groups of namespaces",
    "start": "702399",
    "end": "706560"
  },
  {
    "text": "and can also be combined with process",
    "start": "706560",
    "end": "709680"
  },
  {
    "text": "security rules and",
    "start": "709680",
    "end": "711040"
  },
  {
    "text": "file access security rules",
    "start": "711040",
    "end": "714399"
  },
  {
    "text": "and so if you're asking well wait how",
    "start": "714399",
    "end": "716240"
  },
  {
    "text": "can i combine network security policies",
    "start": "716240",
    "end": "718800"
  },
  {
    "text": "and process and storage",
    "start": "718800",
    "end": "721839"
  },
  {
    "text": "slash file access together how does that",
    "start": "721839",
    "end": "724480"
  },
  {
    "text": "work",
    "start": "724480",
    "end": "725279"
  },
  {
    "text": "well so new vector also uses a crd",
    "start": "725279",
    "end": "729200"
  },
  {
    "text": "much like openshift a custom resource",
    "start": "729200",
    "end": "732240"
  },
  {
    "start": "731000",
    "end": "731000"
  },
  {
    "text": "definition that allows",
    "start": "732240",
    "end": "734000"
  },
  {
    "text": "for there's the nv security rule that",
    "start": "734000",
    "end": "737120"
  },
  {
    "text": "allows for egress",
    "start": "737120",
    "end": "738639"
  },
  {
    "text": "allows for ingress at the network level",
    "start": "738639",
    "end": "741440"
  },
  {
    "text": "and so that's both",
    "start": "741440",
    "end": "742399"
  },
  {
    "text": "allow and deny roles the layer 7",
    "start": "742399",
    "end": "745839"
  },
  {
    "text": "protocol as well as any ports new vector",
    "start": "745839",
    "end": "749360"
  },
  {
    "text": "also",
    "start": "749360",
    "end": "749760"
  },
  {
    "text": "implements file protection or for",
    "start": "749760",
    "end": "753519"
  },
  {
    "text": "specific file locations directories as",
    "start": "753519",
    "end": "756160"
  },
  {
    "text": "well as process protection basically",
    "start": "756160",
    "end": "758480"
  },
  {
    "text": "blocking",
    "start": "758480",
    "end": "759040"
  },
  {
    "text": "any process that hasn't been seen before",
    "start": "759040",
    "end": "762399"
  },
  {
    "text": "new vector uses different policies uh",
    "start": "762399",
    "end": "764800"
  },
  {
    "text": "there's a discover mode",
    "start": "764800",
    "end": "766240"
  },
  {
    "text": "that automatically learns all the",
    "start": "766240",
    "end": "767680"
  },
  {
    "text": "processes and all the network activity",
    "start": "767680",
    "end": "769839"
  },
  {
    "text": "so that you don't actually have to write",
    "start": "769839",
    "end": "771839"
  },
  {
    "text": "this yaml file it can be created",
    "start": "771839",
    "end": "773760"
  },
  {
    "text": "automatically",
    "start": "773760",
    "end": "774800"
  },
  {
    "text": "it can be exported and applied to other",
    "start": "774800",
    "end": "777600"
  },
  {
    "text": "clusters",
    "start": "777600",
    "end": "778639"
  },
  {
    "text": "as security as code so a quick summary",
    "start": "778639",
    "end": "781360"
  },
  {
    "text": "for new vector securities code",
    "start": "781360",
    "end": "783279"
  },
  {
    "text": "allows you to define specific",
    "start": "783279",
    "end": "786000"
  },
  {
    "text": "application behaviors",
    "start": "786000",
    "end": "787360"
  },
  {
    "text": "in kubernetes native yaml that can be",
    "start": "787360",
    "end": "790720"
  },
  {
    "text": "exported and applied to multiple",
    "start": "790720",
    "end": "794079"
  },
  {
    "text": "clusters with the same",
    "start": "794079",
    "end": "795760"
  },
  {
    "text": "application same rule sets automatically",
    "start": "795760",
    "end": "799040"
  },
  {
    "text": "learns the",
    "start": "799040",
    "end": "800079"
  },
  {
    "text": "pro processes and network activity and",
    "start": "800079",
    "end": "802880"
  },
  {
    "text": "you can add",
    "start": "802880",
    "end": "803760"
  },
  {
    "text": "file system activity protection as well",
    "start": "803760",
    "end": "806560"
  },
  {
    "text": "integrates with our back",
    "start": "806560",
    "end": "808560"
  },
  {
    "text": "makes it easy to move rules from",
    "start": "808560",
    "end": "811600"
  },
  {
    "text": "one environment to another and supports",
    "start": "811600",
    "end": "813760"
  },
  {
    "text": "opa and other integrations",
    "start": "813760",
    "end": "816560"
  },
  {
    "text": "so here is a quick summary uh egress",
    "start": "816560",
    "end": "819760"
  },
  {
    "start": "818000",
    "end": "818000"
  },
  {
    "text": "control comparison between the four",
    "start": "819760",
    "end": "822240"
  },
  {
    "text": "feel free to screen cap this particular",
    "start": "822240",
    "end": "824880"
  },
  {
    "text": "slide",
    "start": "824880",
    "end": "826320"
  },
  {
    "text": "and finally in summary definitely should",
    "start": "826320",
    "end": "828880"
  },
  {
    "text": "be looking at egress control again",
    "start": "828880",
    "end": "831600"
  },
  {
    "text": "it's half of the robbery lots of good",
    "start": "831600",
    "end": "834399"
  },
  {
    "text": "ways to enforce via open source",
    "start": "834399",
    "end": "837120"
  },
  {
    "text": "lots of good ways to enforce with",
    "start": "837120",
    "end": "838639"
  },
  {
    "text": "commercial products such as new vector",
    "start": "838639",
    "end": "841199"
  },
  {
    "text": "definitely consider your egress as part",
    "start": "841199",
    "end": "843440"
  },
  {
    "text": "of your segmentation",
    "start": "843440",
    "end": "845279"
  },
  {
    "text": "strategies and include that process file",
    "start": "845279",
    "end": "848639"
  },
  {
    "text": "protection as well",
    "start": "848639",
    "end": "849839"
  },
  {
    "text": "basically assess your risks and apply",
    "start": "849839",
    "end": "852160"
  },
  {
    "text": "security where appropriate",
    "start": "852160",
    "end": "854240"
  },
  {
    "text": "so thank you so much for taking the time",
    "start": "854240",
    "end": "856160"
  },
  {
    "text": "to get through this entire video",
    "start": "856160",
    "end": "857920"
  },
  {
    "text": "much respect hope you're having a great",
    "start": "857920",
    "end": "859920"
  },
  {
    "text": "conference",
    "start": "859920",
    "end": "860959"
  },
  {
    "text": "from everybody at new vector thank you",
    "start": "860959",
    "end": "870720"
  }
]