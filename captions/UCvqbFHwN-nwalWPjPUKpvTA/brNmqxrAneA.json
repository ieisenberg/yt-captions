[
  {
    "text": "hey Christy hey Priya are you eating salsa",
    "start": "179",
    "end": "7319"
  },
  {
    "text": "yeah you know I know I have to film this talk but I'm kind of hungry so I thought I have a little snack first",
    "start": "7319",
    "end": "13320"
  },
  {
    "text": "that's a good idea what what kind of salsa are you eating it's kubernetes flavored salsa",
    "start": "13320",
    "end": "20939"
  },
  {
    "text": "what wait kubernetes flavored salsa what is that",
    "start": "20939",
    "end": "26519"
  },
  {
    "text": "you know that's actually a really good question and it's actually what we're here to talk about today",
    "start": "26519",
    "end": "32520"
  },
  {
    "text": "ah let's get into it maybe well actually maybe before we get",
    "start": "32520",
    "end": "38760"
  },
  {
    "text": "into it we should introduce ourselves yeah that's a good idea um so my name is Priya I'm a software",
    "start": "38760",
    "end": "46260"
  },
  {
    "text": "engineer at chain guard uh I work on a bunch of Open Source projects um I'm on the TSC for the six store project so I",
    "start": "46260",
    "end": "53100"
  },
  {
    "text": "do a lot of open source security work um and I work on tactone chains with Christy",
    "start": "53100",
    "end": "58860"
  },
  {
    "text": "and hey everybody I'm Christy I'm a software engineer at Google I've been working on tecton since it started and",
    "start": "58860",
    "end": "65518"
  },
  {
    "text": "lately I've been specializing a lot in the supply chain security area and also",
    "start": "65519",
    "end": "70560"
  },
  {
    "text": "working on supply chain security for Google Cloud build and also working on chains with Priya",
    "start": "70560",
    "end": "77100"
  },
  {
    "text": "yeah fun fact me and Christy were on the same team at Google when we when she started tucked on and I would just chill",
    "start": "77100",
    "end": "83880"
  },
  {
    "text": "there and watch her create all this awesome stuff and hopefully we'll be working together soon one day not soon",
    "start": "83880",
    "end": "90540"
  },
  {
    "text": "that's not that's absolutely not what I wanted that makes it sound like I'm gonna like quit my job or something",
    "start": "90540",
    "end": "97100"
  },
  {
    "text": "that's not happening everything's good all right Okay cool so uh today we're going to be",
    "start": "97140",
    "end": "104100"
  },
  {
    "text": "talking about supply chain security and focusing on cacd platforms that run on kubernetes",
    "start": "104100",
    "end": "110220"
  },
  {
    "text": "so um supply chain security has been a really hot topic in the past couple of years and it's important to know what",
    "start": "110220",
    "end": "116759"
  },
  {
    "text": "supply chain security threats are out there and how they could affect your specific build platform so if you",
    "start": "116759",
    "end": "123540"
  },
  {
    "text": "haven't heard of salsa yet we'll be talking about it a little bit more in detail in a few slides but it's basically a security framework that you",
    "start": "123540",
    "end": "130020"
  },
  {
    "text": "can use to evaluate the security of your supply chain this also gets you most of the way there",
    "start": "130020",
    "end": "136140"
  },
  {
    "text": "in evaluating your specific supply chain but if you're also using kubernetes to build software it's imp important to",
    "start": "136140",
    "end": "143160"
  },
  {
    "text": "consider the unique attributes of kubernetes when evaluating how secure your supply chain really is",
    "start": "143160",
    "end": "149959"
  },
  {
    "text": "so we'll be talking about how you can use salsa to evaluate cicd on kubernetes",
    "start": "149959",
    "end": "155879"
  },
  {
    "text": "using tecton as a case study we'll dive into a threat model analysis of tecton",
    "start": "155879",
    "end": "161879"
  },
  {
    "text": "on kubernetes to fill in all of the kubernetes specifics around how to provide a salsa compliant build system",
    "start": "161879",
    "end": "168720"
  },
  {
    "text": "so by combining the power of salsa with a kubernetes specific threat model you",
    "start": "168720",
    "end": "174180"
  },
  {
    "text": "can create a secure supply chain or at least as secure as we know how to make",
    "start": "174180",
    "end": "180800"
  },
  {
    "text": "awesome so first let's take a look at the threat model that salsa addresses",
    "start": "181680",
    "end": "187080"
  },
  {
    "text": "so uh for those of you who have been interested in the software supply chain space you have probably seen this",
    "start": "187080",
    "end": "193560"
  },
  {
    "text": "diagram before but for those new to this topic I'm going to run through it really quickly so as I mentioned before salsa",
    "start": "193560",
    "end": "201060"
  },
  {
    "text": "is a security framework that you can use to evaluate the security of your software supply chain I think it stands",
    "start": "201060",
    "end": "206580"
  },
  {
    "text": "for supply chain levels for software artifacts um so we're looking at this salsa threat",
    "start": "206580",
    "end": "212099"
  },
  {
    "text": "model diagram which is kind of provided by the salsa project and it's a simplified but overall pretty accurate",
    "start": "212099",
    "end": "219239"
  },
  {
    "text": "look at a typical supply chain we start on the left hand side with the code that a developer is writing that",
    "start": "219239",
    "end": "226019"
  },
  {
    "text": "developer is likely going to pull in dependencies which is code that they haven't written once they've got all their code the software will be built",
    "start": "226019",
    "end": "232620"
  },
  {
    "text": "somewhere typically some sort of build pipeline like tecton or something like it have actions maybe once the software",
    "start": "232620",
    "end": "238980"
  },
  {
    "text": "is built it's usually packaged in some way before it's distributed to the final consumer",
    "start": "238980",
    "end": "244140"
  },
  {
    "text": "so you can see that there are many points in this process that are subject to risk and some of these like potential",
    "start": "244140",
    "end": "249540"
  },
  {
    "text": "risks are actually called out in this diagram so on the left hand side we're focused on Source Integrity this is",
    "start": "249540",
    "end": "255540"
  },
  {
    "text": "looking at how we make sure the dependencies we pull in are trustworthy and how we make sure the code that's being added to our repository is also",
    "start": "255540",
    "end": "262680"
  },
  {
    "text": "trustworthy on the right hand side we're looking at bills Integrity Integrity which focuses",
    "start": "262680",
    "end": "267780"
  },
  {
    "text": "on ensuring the build system is secure you can see that on the diagram there's like a variety of risks that we have to",
    "start": "267780",
    "end": "274320"
  },
  {
    "text": "mitigate at each step and since each risk is so different and happens in such a different place we need a variety of",
    "start": "274320",
    "end": "281040"
  },
  {
    "text": "solutions to address each of these risks",
    "start": "281040",
    "end": "285320"
  },
  {
    "text": "so salsa tries to address this variety of risks with a comprehensive list of attributes that your supply chain should",
    "start": "288240",
    "end": "294600"
  },
  {
    "text": "follow so you can kind of think of salsa as a checklist and the more checks that you have ticked off the more secure your",
    "start": "294600",
    "end": "301560"
  },
  {
    "text": "supply chain is uh for each risk there's an associate explanation as to how the",
    "start": "301560",
    "end": "306840"
  },
  {
    "text": "specific salsa recommendation mitigates it so for example say that you are",
    "start": "306840",
    "end": "312240"
  },
  {
    "text": "worried that modified source code will enter your repository and thus your final software application one of the",
    "start": "312240",
    "end": "318660"
  },
  {
    "text": "things that salsa requires to help you identify if this threat has occurred is requiring bill is requiring some sort of",
    "start": "318660",
    "end": "325740"
  },
  {
    "text": "provenance which will help you identify all the sources used if it's also compliant",
    "start": "325740",
    "end": "332360"
  },
  {
    "text": "so there are some themes across many of the mitigations that salsa recommends but they kind of boil down to these two",
    "start": "334259",
    "end": "340919"
  },
  {
    "text": "large themes to keep in mind so the first is that it's important to use the secure build system and the second is",
    "start": "340919",
    "end": "346800"
  },
  {
    "text": "that it's important to verify provenance um if it's available and so when you're",
    "start": "346800",
    "end": "352740"
  },
  {
    "text": "actually building your software it's important that your build system is secure and when you're using software it's important that you verify the",
    "start": "352740",
    "end": "359039"
  },
  {
    "text": "provenance of that software so uh if you remember following the",
    "start": "359039",
    "end": "364320"
  },
  {
    "text": "salsa project at all um you'll know that it's gearing up for a 1.0 release the",
    "start": "364320",
    "end": "369419"
  },
  {
    "text": "build track for salsa 1.0 actually addresses how to create a secure build system and there are three levels from",
    "start": "369419",
    "end": "375180"
  },
  {
    "text": "L1 to L3 with L1 being kind of the most basic level of security and all three",
    "start": "375180",
    "end": "380759"
  },
  {
    "text": "um being the highest level of security so at L1 it's important that provenance",
    "start": "380759",
    "end": "385800"
  },
  {
    "text": "exists L2 it needs to be authentic and at L3 we need to be able to prove that it is non-forgeable",
    "start": "385800",
    "end": "393560"
  },
  {
    "text": "so now let's bring in our case study which is tecton and let's take a look at how tecton meets the salsa build system",
    "start": "394440",
    "end": "400440"
  },
  {
    "text": "requirements so with tecton uh we can actually",
    "start": "400440",
    "end": "408419"
  },
  {
    "text": "cover all three of the provenance generation requirements that salsa requires techton provenance is generated",
    "start": "408419",
    "end": "415380"
  },
  {
    "text": "by the optional tecton chain service which is basically a service that runs alongside the core tecton service in",
    "start": "415380",
    "end": "422280"
  },
  {
    "text": "your kubernetes cluster tactone chains subscribes to updates from the kubernetes API server for executing",
    "start": "422280",
    "end": "428699"
  },
  {
    "text": "workloads and once those workloads have successfully completed it's able to generate Providence based on the",
    "start": "428699",
    "end": "433979"
  },
  {
    "text": "information in that workload not only does it generate provenance it also signs that Providence so in theory you",
    "start": "433979",
    "end": "440940"
  },
  {
    "text": "would think that the provenance is both authentic and nonforgeable since it exists and it's been signed and the",
    "start": "440940",
    "end": "447599"
  },
  {
    "text": "information has been taken straight from the API server surely the API server won't lie to us",
    "start": "447599",
    "end": "453780"
  },
  {
    "text": "but we might actually need to look into this a little bit more before we can be confident in that",
    "start": "453780",
    "end": "460759"
  },
  {
    "text": "the second piece of salsa that we want to look at is isolation strength ideally build systems that adhere to salsa",
    "start": "460979",
    "end": "468360"
  },
  {
    "text": "requirements um ideally the build processes are isolated and also ephemeral so the kind",
    "start": "468360",
    "end": "475740"
  },
  {
    "text": "of a classic unit of execution protect on is the pods that run on kubernetes",
    "start": "475740",
    "end": "481199"
  },
  {
    "text": "a new pot is spun up for every Tech ton workload and so you would think that since we have a new pod every time we",
    "start": "481199",
    "end": "488220"
  },
  {
    "text": "kind of get ephemeral and isolated execution for free this might not actually be the case and",
    "start": "488220",
    "end": "493380"
  },
  {
    "text": "we're going to look into this a little bit more so Priya raises some good points out of",
    "start": "493380",
    "end": "499979"
  },
  {
    "text": "the box does kubernetes actually give us isolated ephemeral execution with",
    "start": "499979",
    "end": "505379"
  },
  {
    "text": "non-forgeable values that we can generate provenance from or should we maybe investigate a bit more about how",
    "start": "505379",
    "end": "511979"
  },
  {
    "text": "exactly tecton builds to be sure I think we should investigate a bit more",
    "start": "511979",
    "end": "517520"
  },
  {
    "text": "let's start with zooming in on the salsa threat model you may remember this threat in this in the salsa model",
    "start": "517919",
    "end": "524219"
  },
  {
    "text": "compromising the build process it looks so simple it's just this one little box but",
    "start": "524219",
    "end": "530100"
  },
  {
    "text": "in reality it's a little bit more complicated this is what build execution looks like",
    "start": "530100",
    "end": "535140"
  },
  {
    "text": "in textile and this is even the simplest simple version but don't worry we're going to step through it and look at the",
    "start": "535140",
    "end": "540600"
  },
  {
    "text": "specifics of what's happening at every step to kind of put this whole thing into perspective",
    "start": "540600",
    "end": "546779"
  },
  {
    "text": "so first if you're executing a build workload with tech time you execute",
    "start": "546779",
    "end": "552360"
  },
  {
    "text": "either a task run or a pipeline run a pipeline run also ultimately just executes a bunch of task runs so it kind",
    "start": "552360",
    "end": "559140"
  },
  {
    "text": "of all comes down to task runs so if you execute a task run what you will do is",
    "start": "559140",
    "end": "565560"
  },
  {
    "text": "you'll apply it to the cluster which will store it via the kubernetes API server in FCD",
    "start": "565560",
    "end": "571860"
  },
  {
    "text": "the pipelines controller that actually executes everything for techton or protecton pipelines subscribes to",
    "start": "571860",
    "end": "578880"
  },
  {
    "text": "updates from the API server so as soon as you create that task run the API server will tell the pipelines",
    "start": "578880",
    "end": "584820"
  },
  {
    "text": "controller oh there's something to execute so next assuming that you're using build",
    "start": "584820",
    "end": "591959"
  },
  {
    "text": "as code the Tasker pipeline that you want to execute will be fetched from version version control or from an oci",
    "start": "591959",
    "end": "598980"
  },
  {
    "text": "registry so as a side note build this code is a practice where like infrastructure is code or any of the",
    "start": "598980",
    "end": "605220"
  },
  {
    "text": "other is codes instead of just writing a script and then firing it off you're actually storing it somewhere probably",
    "start": "605220",
    "end": "611640"
  },
  {
    "text": "in Version Control with a history and hopefully a review process and all the good stuff that you do to code in",
    "start": "611640",
    "end": "618120"
  },
  {
    "text": "general but applied to your build configuration foreign",
    "start": "618120",
    "end": "624200"
  },
  {
    "text": "so now that the pipelines controller has the task or pipeline spec it knows",
    "start": "624200",
    "end": "629700"
  },
  {
    "text": "exactly what it needs to do to run that so it'll go through the task spec and it",
    "start": "629700",
    "end": "634740"
  },
  {
    "text": "translates that basically into a pod that needs to execute the pipelines controller will create the pod which",
    "start": "634740",
    "end": "640860"
  },
  {
    "text": "will trigger the API server to start the Pod via kubelet which will run the pod",
    "start": "640860",
    "end": "645959"
  },
  {
    "text": "which ultimately runs the task from",
    "start": "645959",
    "end": "650300"
  },
  {
    "text": "once the task run starts it will start pulling images that it needs to run",
    "start": "652040",
    "end": "657240"
  },
  {
    "text": "because it is because what it executes is a sequence of containers so each of those images will be fetched from a",
    "start": "657240",
    "end": "663959"
  },
  {
    "text": "remote container Repository also it needs to amount usually needs to",
    "start": "663959",
    "end": "669720"
  },
  {
    "text": "mount volumes in order to actually do anything so those can either be volumes from the cluster that it mounts or it",
    "start": "669720",
    "end": "675360"
  },
  {
    "text": "can even Mount local disks",
    "start": "675360",
    "end": "679100"
  },
  {
    "text": "as the task run executes it will emit strings that are called results which we'll talk about a little bit more uh",
    "start": "680700",
    "end": "687600"
  },
  {
    "text": "shortly which indicate what the task run is actually done for example the digest",
    "start": "687600",
    "end": "692880"
  },
  {
    "text": "of an image that it is built and then the pipelines controller will read those results they're emitted either by the",
    "start": "692880",
    "end": "700380"
  },
  {
    "text": "task run or the underlying pod putting them into the termination message of the Pod so that the controller can read them",
    "start": "700380",
    "end": "706560"
  },
  {
    "text": "or there's a new experimental feature which has them actually being written to logs which the controller will then read",
    "start": "706560",
    "end": "713839"
  },
  {
    "text": "finally once the task run or the pipeline run completes the tecton chains",
    "start": "714779",
    "end": "720060"
  },
  {
    "text": "controller which is also subscribed to updates on those types from the API server will be notified that execution",
    "start": "720060",
    "end": "726600"
  },
  {
    "text": "completed and then it'll start looking at the details of what happened and pulling out individual values that it can use to generate and sign Providence",
    "start": "726600",
    "end": "736399"
  },
  {
    "text": "so here's the threat model at a high level basically anywhere the data is flowing",
    "start": "737820",
    "end": "743160"
  },
  {
    "text": "through the system there's a threat and when we look at how tecton executes on kubernetes even a very simplified",
    "start": "743160",
    "end": "749399"
  },
  {
    "text": "version of just a simple task run not even getting into the details of whether it's trying to pull Source or build or",
    "start": "749399",
    "end": "755040"
  },
  {
    "text": "pull independencies you can see that there's a lot of data moving around and you'll also notice that we're",
    "start": "755040",
    "end": "761459"
  },
  {
    "text": "leaving some of the kubernetes internal details like communication between the API server and the kublet out of the",
    "start": "761459",
    "end": "767399"
  },
  {
    "text": "picture but we will touch on that very briefly later so let's look at each of these threats",
    "start": "767399",
    "end": "772560"
  },
  {
    "text": "in detail cool so uh the first threat that we're",
    "start": "772560",
    "end": "778740"
  },
  {
    "text": "going to specifically be looking at is around crds so these are custom resource definitions and kubernetes and tecton",
    "start": "778740",
    "end": "785579"
  },
  {
    "text": "relies on custom resource definitions to create this concept of a tecton task or",
    "start": "785579",
    "end": "790920"
  },
  {
    "text": "a tecton pipeline which is how we actually execute workloads with tecton to track and track what is actually",
    "start": "790920",
    "end": "796380"
  },
  {
    "text": "happening tecton chains basically watches these workloads and once the workloads have",
    "start": "796380",
    "end": "802019"
  },
  {
    "text": "successfully executed it'll grab all the information from the workload um to determine what values to include",
    "start": "802019",
    "end": "808440"
  },
  {
    "text": "in build provenance so ideally these crds should only be updated by the",
    "start": "808440",
    "end": "814320"
  },
  {
    "text": "pipelines controller only the pipelines controller should be able to set the status should be able to set the results",
    "start": "814320",
    "end": "819360"
  },
  {
    "text": "and should be able to say exactly what steps happened in what order",
    "start": "819360",
    "end": "825000"
  },
  {
    "text": "so the risk that we're trying to prevent is mutated crds in theory anyone with",
    "start": "825000",
    "end": "831540"
  },
  {
    "text": "access to a kubernetes cluster can go in and edit whatever resources are in that",
    "start": "831540",
    "end": "836579"
  },
  {
    "text": "cluster and since the basis of tecton is the crds they are at risk of being",
    "start": "836579",
    "end": "842459"
  },
  {
    "text": "mutated by someone who can access them another threat is around results this is",
    "start": "842459",
    "end": "850260"
  },
  {
    "text": "kind of a sub case of the one that Priya was just talking about so as tasks execute in techton they can emit these",
    "start": "850260",
    "end": "856860"
  },
  {
    "text": "string values to show what they actually did so another example of that is if a task is fetching from Git it can emit a",
    "start": "856860",
    "end": "864240"
  },
  {
    "text": "result to indicate the actual commitment fetched for example if it's resolving a branch name it's important to know at",
    "start": "864240",
    "end": "870839"
  },
  {
    "text": "build time what branch what commit was that Branch actually pointing at so these values are read by the",
    "start": "870839",
    "end": "876959"
  },
  {
    "text": "pipelines controller and they ultimately end up going into the crd status and",
    "start": "876959",
    "end": "882060"
  },
  {
    "text": "then making it into the provenance that change generates so it's very important that we know that these are actually",
    "start": "882060",
    "end": "887760"
  },
  {
    "text": "generated by the task run that we expect them to be and that's an important part of meeting the salsa non-forge ability",
    "start": "887760",
    "end": "894839"
  },
  {
    "text": "requirements because we have to be able to say that the provenance and the values in the Providence couldn't have",
    "start": "894839",
    "end": "900899"
  },
  {
    "text": "been forged by something else so since these are ultimately stored in the crd they're subject to the same",
    "start": "900899",
    "end": "907339"
  },
  {
    "text": "vulnerabilities that Priya was mentioning around crds in general and then there's this additional",
    "start": "907339",
    "end": "912660"
  },
  {
    "text": "path where the the mechanism that transmits the results to the controller for example the logs that's vulnerable",
    "start": "912660",
    "end": "918839"
  },
  {
    "text": "as well so kind of another small piece of that",
    "start": "918839",
    "end": "924959"
  },
  {
    "text": "big diagram that Christie just walked us through um is the uh is techtone workspaces and the",
    "start": "924959",
    "end": "933180"
  },
  {
    "text": "risk here is that these workspaces can be mutated so textile workspaces are usually backed with PVCs and these PVCs",
    "start": "933180",
    "end": "940380"
  },
  {
    "text": "can kind of be shared across various tasks and pipelines in theory but the intention is that usually only a",
    "start": "940380",
    "end": "947880"
  },
  {
    "text": "specific task or in an executing pipeline will write data to this volume in reality any pod in the cluster can",
    "start": "947880",
    "end": "955440"
  },
  {
    "text": "mount that same volume and mutate the contents and so this makes it really hard to meet the salsa requirements for",
    "start": "955440",
    "end": "961079"
  },
  {
    "text": "isolated execution because anybody with access to the cluster could in Theory start a pod Mount that volume and then",
    "start": "961079",
    "end": "968160"
  },
  {
    "text": "mutate contents",
    "start": "968160",
    "end": "971120"
  },
  {
    "text": "so I mentioned earlier that tecton pipeline supports build this code for tasks and pipelines so they could be",
    "start": "973399",
    "end": "979500"
  },
  {
    "text": "stored in Version Control and there's also a feature called tecton bundles which lets you store tasks and pipelines",
    "start": "979500",
    "end": "985680"
  },
  {
    "text": "in an oci registry so fetching this data is another place where tecton is",
    "start": "985680",
    "end": "991260"
  },
  {
    "text": "vulnerable it could be through a less likely but still possible man in the",
    "start": "991260",
    "end": "996360"
  },
  {
    "text": "middle attack between the repository and tecton or again since the content is",
    "start": "996360",
    "end": "1001579"
  },
  {
    "text": "stored in the crd anybody who has permission to modify those crds within",
    "start": "1001579",
    "end": "1006740"
  },
  {
    "text": "the cluster could modify the content and could change the definitions of the tasks and Pipelines and that's because",
    "start": "1006740",
    "end": "1013220"
  },
  {
    "text": "the detect on pipelines controller after it fetches these tasks and pipelines we'll store them into crd",
    "start": "1013220",
    "end": "1020600"
  },
  {
    "text": "so another Potential Threat that we should keep in mind is compromised step",
    "start": "1020600",
    "end": "1025699"
  },
  {
    "text": "images so the basic unit of kind of kubernetes in general is the Pod and when you kick off",
    "start": "1025699",
    "end": "1032360"
  },
  {
    "text": "a tecton task run you also kick off a pod um and obviously that pod is responsible",
    "start": "1032360",
    "end": "1037640"
  },
  {
    "text": "for for pulling in container images to run as steps so we want to prevent",
    "start": "1037640",
    "end": "1043880"
  },
  {
    "text": "against compromise step images and make sure that the images that we're running are the ones that we are intending to",
    "start": "1043880",
    "end": "1049940"
  },
  {
    "text": "run the last vulnerability that we want to",
    "start": "1049940",
    "end": "1055820"
  },
  {
    "text": "highlight is related to the actual node that the task executes on one of the salsa requirements is",
    "start": "1055820",
    "end": "1062600"
  },
  {
    "text": "isolation it's important that workloads that are executing in the build cluster",
    "start": "1062600",
    "end": "1067940"
  },
  {
    "text": "can't interfere with each other so one build workload shouldn't be able to do anything at least within the context of",
    "start": "1067940",
    "end": "1073580"
  },
  {
    "text": "the build system that influences another but if these pods that are running on",
    "start": "1073580",
    "end": "1078980"
  },
  {
    "text": "the nodes have access to the the file system of the underlying node you can't guarantee that because you don't know",
    "start": "1078980",
    "end": "1085160"
  },
  {
    "text": "the state that one pod has left the node in and you don't know if that's going to change the results from another task",
    "start": "1085160",
    "end": "1091820"
  },
  {
    "text": "that runs on that same note so there are a couple ways that this could be violated one is you might do it",
    "start": "1091820",
    "end": "1098900"
  },
  {
    "text": "on purpose you might explicitly give a task privilege execution permission and",
    "start": "1098900",
    "end": "1104600"
  },
  {
    "text": "that might sound like something you wouldn't want to do but it actually turns out that for a lot of Docker build scenarios this is the common way to do",
    "start": "1104600",
    "end": "1111799"
  },
  {
    "text": "it is you have to give this task pod elevated permissions in order to actually be able to use Docker to build",
    "start": "1111799",
    "end": "1119240"
  },
  {
    "text": "or you might it might even if you're not doing that there's still the possibility that this could happen because there",
    "start": "1119240",
    "end": "1125059"
  },
  {
    "text": "could be an unpatched vulnerability that allows a malicious workload that's been",
    "start": "1125059",
    "end": "1130160"
  },
  {
    "text": "submitted via a task to X to escape the Pod and actually access the underlying node so the last vulnerability is",
    "start": "1130160",
    "end": "1138200"
  },
  {
    "text": "related to trying to make sure that tasks that run can't do anything to the underlying node that might impact other",
    "start": "1138200",
    "end": "1144559"
  },
  {
    "text": "tasks oh so look at",
    "start": "1144559",
    "end": "1149780"
  },
  {
    "text": "locate model it seems like out of the box they're we're not actually getting quite as much for free as maybe we were",
    "start": "1149780",
    "end": "1155299"
  },
  {
    "text": "hoping uh there's some unique challenges around meeting the particularly the isolation and non-forge ability",
    "start": "1155299",
    "end": "1162080"
  },
  {
    "text": "requirements when we're running on kubernetes so what can we do",
    "start": "1162080",
    "end": "1167860"
  },
  {
    "text": "great question Christy let's get into it",
    "start": "1167860",
    "end": "1173120"
  },
  {
    "text": "um so as I mentioned earlier one of the threats that we want to prevent against is the mutated crds so we want to make",
    "start": "1173120",
    "end": "1179780"
  },
  {
    "text": "sure that someone has that has access to the cluster can't just go in edit a bunch of yaml and say that things",
    "start": "1179780",
    "end": "1185840"
  },
  {
    "text": "happened when they didn't um this could be as simple as saying that a pipeline succeeded when it didn't",
    "start": "1185840",
    "end": "1191299"
  },
  {
    "text": "or it could mean changing the results of a task run to say that potentially an",
    "start": "1191299",
    "end": "1196460"
  },
  {
    "text": "image was built when it wasn't um so how do we protect against this",
    "start": "1196460",
    "end": "1202039"
  },
  {
    "text": "ideally we don't want anyone to be able to tamper with our tactone crds at all but for now we can at least settle for",
    "start": "1202039",
    "end": "1209539"
  },
  {
    "text": "making sure that we can catch it when they do tamper with our crds",
    "start": "1209539",
    "end": "1214700"
  },
  {
    "text": "and the solution that we've come up with involves another open source tool called spire",
    "start": "1214700",
    "end": "1219799"
  },
  {
    "text": "so Spire is a production ready implementation of the spiffy apis and it's used to perform node and workload",
    "start": "1219799",
    "end": "1226280"
  },
  {
    "text": "attestation it basically runs in your cluster alongside tacton and they work",
    "start": "1226280",
    "end": "1231559"
  },
  {
    "text": "together to provide this workload at a station Spire is a pretty complicated topic so instead of diving deep into how",
    "start": "1231559",
    "end": "1238700"
  },
  {
    "text": "it works I'm just going to explain how techton is able to take advantage of it for now",
    "start": "1238700",
    "end": "1244400"
  },
  {
    "text": "um so when we set up spire on a kubernetes cluster we can set it up to issue svids or certificates only to the",
    "start": "1244400",
    "end": "1251299"
  },
  {
    "text": "tecton controller the controller can then um",
    "start": "1251299",
    "end": "1256419"
  },
  {
    "text": "generate signatures for our tecton objects whether that's the results that are being created or the status of a",
    "start": "1256419",
    "end": "1263419"
  },
  {
    "text": "tecton pipeline and it can provide those fire certificates for verification to be",
    "start": "1263419",
    "end": "1269600"
  },
  {
    "text": "used later on CE later on perhaps in tucked on chains when build provenance is being created",
    "start": "1269600",
    "end": "1275900"
  },
  {
    "text": "we can actually verify the signatures against the provided certificates and in this way we can catch it if",
    "start": "1275900",
    "end": "1284179"
  },
  {
    "text": "someone has tried to modify the tecton objects because the signature verification will fail so while we can't",
    "start": "1284179",
    "end": "1290299"
  },
  {
    "text": "really prevent someone from mutating crgs at this point we can we can be",
    "start": "1290299",
    "end": "1296000"
  },
  {
    "text": "aware of when it happens and we can kind of cut off the build and provenance process at that point once we've",
    "start": "1296000",
    "end": "1301760"
  },
  {
    "text": "realized that something has gone wrong another threat is around the content of",
    "start": "1301760",
    "end": "1309200"
  },
  {
    "text": "the tasks and pipelines themselves and also around the images that these tasks reference as we mentioned it's possible",
    "start": "1309200",
    "end": "1316520"
  },
  {
    "text": "actually we didn't get into detail about this but one potential thing that can happen is a task in reference an image",
    "start": "1316520",
    "end": "1322400"
  },
  {
    "text": "and if it uses a label or something that's not fixed to refer to that image you don't necessarily know what you're",
    "start": "1322400",
    "end": "1328880"
  },
  {
    "text": "actually pulling in so we need to ensure that both when",
    "start": "1328880",
    "end": "1334039"
  },
  {
    "text": "we're using remote locations for tasks and pipelines that those are actually the source of truth that the definitions",
    "start": "1334039",
    "end": "1340039"
  },
  {
    "text": "of the tasks and pipelines in that remote location are what we're actually executing and we need to make sure when",
    "start": "1340039",
    "end": "1345620"
  },
  {
    "text": "we're executing images that they are the images that the task author intended and they're not some other version where",
    "start": "1345620",
    "end": "1351980"
  },
  {
    "text": "something maybe malicious has been inserted in the meantime",
    "start": "1351980",
    "end": "1356620"
  },
  {
    "text": "so the solution that we have here is a tecton feature called trusted resources or you might hear reference to trusted",
    "start": "1357500",
    "end": "1364100"
  },
  {
    "text": "tasks or trusted Pipelines this feature lets the authors sign tasks and",
    "start": "1364100",
    "end": "1370039"
  },
  {
    "text": "pipelines using a private key and then protect on pipelines controller can be",
    "start": "1370039",
    "end": "1375380"
  },
  {
    "text": "configured with a policy that will require tasks and pipelines to be verified before execution",
    "start": "1375380",
    "end": "1381080"
  },
  {
    "text": "so what this allows for is that the content of the task and pipeline will have to match what the content that was",
    "start": "1381080",
    "end": "1388460"
  },
  {
    "text": "that was included when the signature was created and the controller can actually verify that before it executes anything",
    "start": "1388460",
    "end": "1395179"
  },
  {
    "text": "and an interesting use of this is this makes it possible we've there's been there's a there's a tecton open source",
    "start": "1395179",
    "end": "1402020"
  },
  {
    "text": "catalog and theoretically anyone could create a catalog of reusable tasks and pipelines that can be used with tech",
    "start": "1402020",
    "end": "1408440"
  },
  {
    "text": "talks so if you're creating a catalog you can leverage this feature by signing",
    "start": "1408440",
    "end": "1414080"
  },
  {
    "text": "your tasks and pipelines using a key and then publishing a public key and anyone",
    "start": "1414080",
    "end": "1419659"
  },
  {
    "text": "who wants to use your catalog can configure their controller so that whenever it fetches from the catalog it'll use that key to verify the",
    "start": "1419659",
    "end": "1426320"
  },
  {
    "text": "contents and then they know that they're getting the exact tasks and pipelines that you wrote which hopefully you're",
    "start": "1426320",
    "end": "1432020"
  },
  {
    "text": "also testing and doing code review for and all that good stuff and so when they actually what they're actually executing",
    "start": "1432020",
    "end": "1437659"
  },
  {
    "text": "isn't just kind of some random script that someone wrote It's these actual verified tasks and pipelines that are",
    "start": "1437659",
    "end": "1445039"
  },
  {
    "text": "backed by Version Control and signed and all that good stuff so that way if anything happened in between when these",
    "start": "1445039",
    "end": "1452179"
  },
  {
    "text": "specifications were signed and when execution began can be caught and execution will just stop there",
    "start": "1452179",
    "end": "1459020"
  },
  {
    "text": "so this doesn't quite there's one problem that doesn't quite address which is the images that are referenced inside",
    "start": "1459020",
    "end": "1465200"
  },
  {
    "text": "the task but there's a mitigation which is if you at least specify your images",
    "start": "1465200",
    "end": "1470539"
  },
  {
    "text": "by digest in the task definition then we get a little bit more certainty because",
    "start": "1470539",
    "end": "1475700"
  },
  {
    "text": "we can if you if you so if you specify the image by by digest and then you sign the entire task then we know that the",
    "start": "1475700",
    "end": "1483320"
  },
  {
    "text": "image that you meant to reference is the one that's going to get pulled and then the hash of the image that we're",
    "start": "1483320",
    "end": "1488600"
  },
  {
    "text": "actually running should match the digest that you mentioned so we get a lot more certainty that way another way that you can violate",
    "start": "1488600",
    "end": "1495140"
  },
  {
    "text": "isolation requirements is via tecton workspaces so tecton workspaces are",
    "start": "1495140",
    "end": "1500539"
  },
  {
    "text": "almost always are pretty much exclusively mapped to volumes and those volumes are subject to being mutated by",
    "start": "1500539",
    "end": "1506539"
  },
  {
    "text": "pretty much any pod in the cluster we have two potential fixes here one of",
    "start": "1506539",
    "end": "1513440"
  },
  {
    "text": "them is kind of a short-term workaround which is to always use ephemeral pods during pipeline execution",
    "start": "1513440",
    "end": "1520280"
  },
  {
    "text": "so if you create oh sorry ephemeral volumes during pipeline execution so",
    "start": "1520280",
    "end": "1525380"
  },
  {
    "text": "basically if you create the volume before the pipeline is executed and you only use the volume during that pipeline",
    "start": "1525380",
    "end": "1531520"
  },
  {
    "text": "wow did I just mix Pipeline and I'm just starting over again I think I'm just mixing up words randomly here",
    "start": "1531520",
    "end": "1539020"
  },
  {
    "text": "so we have two potential fixes here which are either one is super compelling but one is oh God okay sorry I'm so",
    "start": "1541159",
    "end": "1548480"
  },
  {
    "text": "sorry I'm just like throwing myself okay sorry yeah okay so we have two potential fixes here one",
    "start": "1548480",
    "end": "1555860"
  },
  {
    "text": "is kind of a shorter term workaround which is to always use ephemeral volumes",
    "start": "1555860",
    "end": "1560960"
  },
  {
    "text": "for pipeline execution so what that means is when a pipeline starts to execute create a volume use that volume",
    "start": "1560960",
    "end": "1568400"
  },
  {
    "text": "only in the context of that Pipeline and then destroy it at the end this in on its own doesn't prevent other",
    "start": "1568400",
    "end": "1576140"
  },
  {
    "text": "pods from mutating the volume to prevent that you'd have to build a layer on top of tecton to control how the volumes are",
    "start": "1576140",
    "end": "1583159"
  },
  {
    "text": "used and I think this is a pattern that we do see with people who are using tecton inside an organization and maybe",
    "start": "1583159",
    "end": "1589880"
  },
  {
    "text": "building some kind of layer on top of it but it is obviously a lot of work to build and maintain this layer but the",
    "start": "1589880",
    "end": "1595940"
  },
  {
    "text": "idea would be that if your users are only accessing tecton through this layer then you've at least reduced the surface",
    "start": "1595940",
    "end": "1602860"
  },
  {
    "text": "of the attack surface to people who have privileged access to that cluster which shouldn't be you basically if you if",
    "start": "1602860",
    "end": "1610159"
  },
  {
    "text": "you're not letting users run random pods in the cluster then you can have more Assurance around what pods might be able",
    "start": "1610159",
    "end": "1616400"
  },
  {
    "text": "to take advantage of mute of of this this vulnerability where you're writing",
    "start": "1616400",
    "end": "1621919"
  },
  {
    "text": "to a volume that's being used by another pod so not not not an answer on its own but at",
    "start": "1621919",
    "end": "1628460"
  },
  {
    "text": "least an approach that you could use that would improve the situation there's also a longer term fix that's a",
    "start": "1628460",
    "end": "1633980"
  },
  {
    "text": "bit more theoretical called tecton artifacts so this is an abstraction that we're currently designing and adding to",
    "start": "1633980",
    "end": "1639799"
  },
  {
    "text": "techton and one of the requirements is that artifacts should be immutable so once an artifact is produced by a task",
    "start": "1639799",
    "end": "1646580"
  },
  {
    "text": "nothing should be able to ever change the content and it also should be possible to verify that it wasn't",
    "start": "1646580",
    "end": "1651860"
  },
  {
    "text": "changed so if we once we have this feature and you can switch to using",
    "start": "1651860",
    "end": "1656960"
  },
  {
    "text": "tecton artifacts throughout the pipeline instead of workspaces that is a long-term fix for the issue but it's",
    "start": "1656960",
    "end": "1663140"
  },
  {
    "text": "still very early stages so we don't actually even know what the syntax looks like let alone you can't quite use you",
    "start": "1663140",
    "end": "1669740"
  },
  {
    "text": "definitely can't use the feature just yet so watch this space",
    "start": "1669740",
    "end": "1674679"
  },
  {
    "text": "cool so the last part that we'll be discussing is tampering with the underlying node so again to me it's",
    "start": "1677500",
    "end": "1684380"
  },
  {
    "text": "also's isolation requirements tasks should not be able to impact any node that they run on",
    "start": "1684380",
    "end": "1690380"
  },
  {
    "text": "um and Tash should also not be able to affect the execution of other tasks",
    "start": "1690380",
    "end": "1697419"
  },
  {
    "text": "so the first step in fixing this is to not allow privilege escalation within",
    "start": "1697960",
    "end": "1703159"
  },
  {
    "text": "the cluster so as soon as a pod is allowed access to the underlying node if",
    "start": "1703159",
    "end": "1708500"
  },
  {
    "text": "that node is used for another pod then isolation guarantees are kind of out the window so the solution for this might kind of",
    "start": "1708500",
    "end": "1716360"
  },
  {
    "text": "depend on exactly how you run your cluster and kind of what environment you run it in but there are a few different",
    "start": "1716360",
    "end": "1722419"
  },
  {
    "text": "options out there that you could explore something like cata containers or kubernetes cloud provider specific",
    "start": "1722419",
    "end": "1728480"
  },
  {
    "text": "features like gke sandboxing there's also an option to use one-time use VMS",
    "start": "1728480",
    "end": "1734419"
  },
  {
    "text": "instead of PODS so that you don't have to rely on an underlying node between pods",
    "start": "1734419",
    "end": "1741159"
  },
  {
    "text": "so by combining these two threat models we were able to get a pretty",
    "start": "1742880",
    "end": "1747980"
  },
  {
    "text": "comprehensive picture of the threats to tecton built on kubernetes with salsa we",
    "start": "1747980",
    "end": "1753740"
  },
  {
    "text": "were able to identify the threats outside of the build system and then salsa also set standards for how build",
    "start": "1753740",
    "end": "1759260"
  },
  {
    "text": "systems need to execute in order to be trusted and then by diving in to the details",
    "start": "1759260",
    "end": "1765500"
  },
  {
    "text": "around the build piece and creating a threat model for our build system on kubernetes we were able to identify a",
    "start": "1765500",
    "end": "1772220"
  },
  {
    "text": "number of specific additional threats and how to mitigate them some of these threats map directly to salsa standards",
    "start": "1772220",
    "end": "1779419"
  },
  {
    "text": "for example around isolation and some of them were more specific to how this exact cicd system worked",
    "start": "1779419",
    "end": "1787419"
  },
  {
    "text": "there are also a few things that came up in our threat analysis that aren't addressed by tecton",
    "start": "1788299",
    "end": "1793399"
  },
  {
    "text": "for example we have a way of working around around compromised step",
    "start": "1793399",
    "end": "1799460"
  },
  {
    "text": "images by specifying a by digest and then verifying the task that specified them but tecton could do more for",
    "start": "1799460",
    "end": "1805640"
  },
  {
    "text": "example tecton could actually try to fetch provenance of those images and verify it before it uses them of course",
    "start": "1805640",
    "end": "1812299"
  },
  {
    "text": "in order to be able to do that we have to actually be making Providence for more images so we kind of have a bit of a chicken and an egg problem but in the",
    "start": "1812299",
    "end": "1818360"
  },
  {
    "text": "future that's something that maybe tektar could do also you might have noticed the solutions for dealing with volume",
    "start": "1818360",
    "end": "1824299"
  },
  {
    "text": "isolation are pretty hand wavy they require either building your own system on top of tecton or waiting for a",
    "start": "1824299",
    "end": "1831380"
  },
  {
    "text": "feature that doesn't yet exist also it's going to be interesting to try to figure out how we can meet the salsa",
    "start": "1831380",
    "end": "1838340"
  },
  {
    "text": "isolation requirements around this but still have caching so you don't actually have to refetch large pieces of data",
    "start": "1838340",
    "end": "1844520"
  },
  {
    "text": "every time you're using them and then lastly we didn't get into this too much but for a complete picture you",
    "start": "1844520",
    "end": "1851059"
  },
  {
    "text": "should consider the Integrity of the cluster itself so everything that we've talked about has kind of been around",
    "start": "1851059",
    "end": "1856820"
  },
  {
    "text": "protecting the execution of the build system but then if you really want to be thorough you have to start thinking",
    "start": "1856820",
    "end": "1862460"
  },
  {
    "text": "about some of the some of the some of the considerations outside of that like the binaries that are actually being",
    "start": "1862460",
    "end": "1868640"
  },
  {
    "text": "used to run your kubernetes cluster like the kublet and the API server and we talked about adding spider to the",
    "start": "1868640",
    "end": "1875419"
  },
  {
    "text": "picture what about the binaries that are used to run spire and what about the Spire agent is it possible to compromise",
    "start": "1875419",
    "end": "1881240"
  },
  {
    "text": "those and probably the easiest way to do that would be if you are in charge of how those pieces are actually being",
    "start": "1881240",
    "end": "1887600"
  },
  {
    "text": "built and distributed and how your organization is using them and you are malicious maybe you could insert something into this fire agent binary",
    "start": "1887600",
    "end": "1894559"
  },
  {
    "text": "that makes it pretend to be a different workload so we haven't fixed everything but we've at least reduced the surface",
    "start": "1894559",
    "end": "1900799"
  },
  {
    "text": "and identified what the other places are that we need to look into",
    "start": "1900799",
    "end": "1905860"
  },
  {
    "text": "so in summary um if you're working on any sort of cic CD system and want to do a threat",
    "start": "1909020",
    "end": "1915919"
  },
  {
    "text": "analysis of it salsa is a great place to start the salsa standards really help um provide a comprehensive look at",
    "start": "1915919",
    "end": "1923059"
  },
  {
    "text": "everything you should be keeping in mind um and it's a really great starting point for threat modeling combining the",
    "start": "1923059",
    "end": "1930080"
  },
  {
    "text": "salsa standards with the specifics of the build platform that you're using we'll show you exactly where your security gaps are and can help you get",
    "start": "1930080",
    "end": "1937279"
  },
  {
    "text": "started figuring out um how you want to mitigate some of those risks",
    "start": "1937279",
    "end": "1942880"
  },
  {
    "text": "and if you're looking for a build system that was created with salsa in mind or you're looking to build a CI CD system",
    "start": "1943279",
    "end": "1949940"
  },
  {
    "text": "on top of an existing platform consider using tecton",
    "start": "1949940",
    "end": "1955179"
  },
  {
    "text": "and that's kubernetes flavored salsa",
    "start": "1955460",
    "end": "1960039"
  },
  {
    "text": "and I think after all that talking I'm feeling pretty hungry can I have some of that salsa you know Christy you live a",
    "start": "1960860",
    "end": "1968299"
  },
  {
    "text": "thousand miles away from me but we'll find a way I think I don't know what the import rules are but I feel like maybe",
    "start": "1968299",
    "end": "1974299"
  },
  {
    "text": "if you if you shift it right now it might make it to me before the end of the day I don't know let's give it a go",
    "start": "1974299",
    "end": "1980600"
  },
  {
    "text": "all right sounds good if you're interested in more on tecton",
    "start": "1980600",
    "end": "1985760"
  },
  {
    "text": "and salsa please join the techton supply chain security working group and also a big thank you to chitron Patel at Google",
    "start": "1985760",
    "end": "1992299"
  },
  {
    "text": "who created the tecton threat model and lastly I wrote a book on continuous delivery and in this slide there's a",
    "start": "1992299",
    "end": "1999140"
  },
  {
    "text": "discount code that will be good till the end of April if you want to get it from Manny and that's it thanks for watching",
    "start": "1999140",
    "end": "2005559"
  },
  {
    "text": "our talk awesome thank you everyone",
    "start": "2005559",
    "end": "2009419"
  }
]