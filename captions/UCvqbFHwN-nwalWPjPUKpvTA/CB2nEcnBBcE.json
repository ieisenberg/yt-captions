[
  {
    "text": "hello everybody uh it's 4:30 I figure it's time we can get started um if",
    "start": "80",
    "end": "5720"
  },
  {
    "text": "you're coming on in grab a seat this is open Telemetry 101 let's instrument",
    "start": "5720",
    "end": "13120"
  },
  {
    "text": "specifically for traces today is sort of a observability 101 and a tracing 101 uh",
    "start": "13120",
    "end": "20400"
  },
  {
    "text": "the most important thing to know at the top is all of these slides are available you can uh if you don't trust QR codes",
    "start": "20400",
    "end": "27080"
  },
  {
    "text": "there's a bitly link for you um no worries this Workshop will be available after cubec con so if you are running",
    "start": "27080",
    "end": "34600"
  },
  {
    "text": "out of power um and your laptop dies there's something within Network um you can't grab podman and time whatever it",
    "start": "34600",
    "end": "41440"
  },
  {
    "text": "takes um you can access this workshop at any time free of charge um extend it",
    "start": "41440",
    "end": "46480"
  },
  {
    "text": "modify it for your use case um so no worries take this workshop at your own",
    "start": "46480",
    "end": "51640"
  },
  {
    "text": "pace um and I'll leave this up for a couple more minutes as people are finding their seats but thank you all",
    "start": "51640",
    "end": "58879"
  },
  {
    "text": "for coming it's really lovely to see so much interest in otel and tracing it's",
    "start": "58879",
    "end": "64040"
  },
  {
    "text": "my favorite Telemetry type and I'm excited to share it with you today I have with me two helpers right over",
    "start": "64040",
    "end": "72119"
  },
  {
    "text": "there if they can raise their hands stand up if you are working on the workshop and you get stuck um raise your",
    "start": "72119",
    "end": "79680"
  },
  {
    "text": "hand and uh one of them or me will come over and see if we can debug and help you out the way this Workshop will go is",
    "start": "79680",
    "end": "86799"
  },
  {
    "text": "I'll present some content we've got about five labs um but this is sort of a work at your own pace so if you want to",
    "start": "86799",
    "end": "93200"
  },
  {
    "text": "skip ahead or there's stuff you already know it's really for your benefit and your",
    "start": "93200",
    "end": "99600"
  },
  {
    "text": "learning all right we got a couple more people finding their seats welcome",
    "start": "99920",
    "end": "106799"
  },
  {
    "text": "welcome okay the second thing that is important to know other than the QR code",
    "start": "108960",
    "end": "114119"
  },
  {
    "text": "is there are a few prere that uh you may want to get started downloading one of",
    "start": "114119",
    "end": "119920"
  },
  {
    "text": "of which is podman if you haven't heard of it is a alternative to Docker there's",
    "start": "119920",
    "end": "125680"
  },
  {
    "text": "a lot of other use cases for it um but that is what this Workshop is set up so",
    "start": "125680",
    "end": "130759"
  },
  {
    "text": "um grab a link to podman uh download it for your system Python 3 um we'll be",
    "start": "130759",
    "end": "136480"
  },
  {
    "text": "working on a Python 3 application um and then I should have added a comma here Python 3 is one dependency and then the",
    "start": "136480",
    "end": "143280"
  },
  {
    "text": "sample application the repo is another so while folks are streaming in",
    "start": "143280",
    "end": "148480"
  },
  {
    "text": "make sure you've got those three setup um and if the Wi-Fi is a little iffy you've got there's one whole intro to",
    "start": "148480",
    "end": "155599"
  },
  {
    "text": "observability so you can kind of keep retrying all right okay we'll take",
    "start": "155599",
    "end": "163480"
  },
  {
    "text": "things away so um if you have this loaded on your",
    "start": "163480",
    "end": "168640"
  },
  {
    "text": "laptop I kind of recommend having one window with the slide deck and one window with your editor um or another",
    "start": "168640",
    "end": "174720"
  },
  {
    "text": "browser um this is sort of how you can get around the slide deck everything",
    "start": "174720",
    "end": "180239"
  },
  {
    "text": "that is green text are links you should click um I do not have video images and",
    "start": "180239",
    "end": "185280"
  },
  {
    "text": "then we've got some code Snippets in there so if we're ready to get started Lab One",
    "start": "185280",
    "end": "193040"
  },
  {
    "text": "observability primer we start each lab with a goal so",
    "start": "193040",
    "end": "198400"
  },
  {
    "text": "here is really just making sure we all have the same understanding of common terminology observability loves to throw",
    "start": "198400",
    "end": "205000"
  },
  {
    "text": "in scary academic sounding terms and I just want to demystify those and get those understood up front and let's",
    "start": "205000",
    "end": "212439"
  },
  {
    "text": "understand where otel fits in the landscape so what is observability",
    "start": "212439",
    "end": "217480"
  },
  {
    "text": "there's you ask 10 different people you get 10 different answers I think it's how effectively you can understand your",
    "start": "217480",
    "end": "224080"
  },
  {
    "text": "system behavior from the outside using the data it generates monitoring on the other hand",
    "start": "224080",
    "end": "230920"
  },
  {
    "text": "is the continuous process of watching and tracking system Health based on a predefined set of data I think of",
    "start": "230920",
    "end": "237159"
  },
  {
    "text": "monitoring as like the smoke alarm in your house it's checking for smoke particles it will alert you when it senses those in the air it's kind of",
    "start": "237159",
    "end": "243920"
  },
  {
    "text": "always watching what is telemetry the process",
    "start": "243920",
    "end": "249040"
  },
  {
    "text": "of recording and sending data from remote components to a backend um and when we talk about software Telemetry or",
    "start": "249040",
    "end": "256320"
  },
  {
    "text": "infrastructure Telemetry that is typically metrics logs events and traces",
    "start": "256320",
    "end": "262280"
  },
  {
    "text": "and if you've been to some of the otel talks today you know that uh we will soon be adding another type which is",
    "start": "262280",
    "end": "269080"
  },
  {
    "text": "profile so um Telemetry is really just about sending this sort of data um from",
    "start": "269080",
    "end": "274160"
  },
  {
    "text": "one device to either a central backend or a proxy what is",
    "start": "274160",
    "end": "280759"
  },
  {
    "text": "instrumentation this is the code that records and measures the behavior of an app or infrastructure component um we",
    "start": "280759",
    "end": "287600"
  },
  {
    "text": "can really break down instrumentation I got a slide later into three kind of categories there's that",
    "start": "287600",
    "end": "294320"
  },
  {
    "text": "auto instrumentation which uh is mostly what is marketed and is really the first step most take um especially with open",
    "start": "294320",
    "end": "301400"
  },
  {
    "text": "Telemetry sort of out of the box you flip on or toggle um Auto instrumentation and boom you get some",
    "start": "301400",
    "end": "307240"
  },
  {
    "text": "data there's programmatic instrumentation which is where you're manually bringing in libraries setting",
    "start": "307240",
    "end": "312800"
  },
  {
    "text": "up some configuration and then of course manual instrumentation when you're adding those custom",
    "start": "312800",
    "end": "319720"
  },
  {
    "text": "attributes and that all of that primer brings us finally to open Telemetry what is it why do we care standardized set of",
    "start": "319720",
    "end": "327560"
  },
  {
    "text": "vendor agnostic SDK apis and tools to ingest transform and send Telemetry to",
    "start": "327560",
    "end": "334280"
  },
  {
    "text": "observability backends if you've been to talks you know how real the vendor agnosticism is um there's a lot of",
    "start": "334280",
    "end": "340600"
  },
  {
    "text": "wonderful cooperation um across all of the vendors in the observability space and we all can play nicely in the otel",
    "start": "340600",
    "end": "348240"
  },
  {
    "text": "sandbox unsurprisingly otel is a part of the cncf um it's joined back in",
    "start": "348240",
    "end": "355800"
  },
  {
    "text": "2019 so one thing I think gets a little bit conf confused about open Telemetry",
    "start": "355800",
    "end": "361319"
  },
  {
    "text": "is what it is not it is not just a tracing tool although we did start with",
    "start": "361319",
    "end": "367240"
  },
  {
    "text": "tracing that was kind of our first signal to GA um we have expanded into all of the other signals um and",
    "start": "367240",
    "end": "374319"
  },
  {
    "text": "interestingly enough otel is not a backend or storage system it is the pipeline and the set of libraries to",
    "start": "374319",
    "end": "380800"
  },
  {
    "text": "generate the data to transmit them maybe transform them and then export them somewhere else and it is also not an",
    "start": "380800",
    "end": "387720"
  },
  {
    "text": "observability UI and that is why in this Workshop we needed to bring in an A A UI",
    "start": "387720",
    "end": "395000"
  },
  {
    "text": "for tracing and in this case I chose Jager um but that is because that is not uh the purview of otel to get into um",
    "start": "395000",
    "end": "403960"
  },
  {
    "text": "storing this data long term or visualizing it when we break down the otel",
    "start": "403960",
    "end": "409680"
  },
  {
    "text": "components we've got apis defining the data types and how to generate the data",
    "start": "409680",
    "end": "414720"
  },
  {
    "text": "the SDK which are defining language specific implementations plus some",
    "start": "414720",
    "end": "420199"
  },
  {
    "text": "configuration data processing and exporting you are in luck if you work in",
    "start": "420199",
    "end": "427000"
  },
  {
    "text": "one of these languages because these are the supported ones with open Telemetry although I am sure the community would",
    "start": "427000",
    "end": "433000"
  },
  {
    "text": "be happy if you were to find another language and add it to this group",
    "start": "433000",
    "end": "440000"
  },
  {
    "text": "um uh we will be looking at the registry but if you want to take a chance now that green text again green text is a",
    "start": "440000",
    "end": "447199"
  },
  {
    "text": "link you can click on that will take you to the open Telemetry registry where you can see um for the apps and libraries",
    "start": "447199",
    "end": "453080"
  },
  {
    "text": "and Frameworks you use on the daily if there's already instrumentation out there so in our case we'll be relying on",
    "start": "453080",
    "end": "459960"
  },
  {
    "text": "the open Telemetry instrumentation flask Library which is built on the otel",
    "start": "459960",
    "end": "465240"
  },
  {
    "text": "middleware and we'll just be observing a very simple web application again this is what the",
    "start": "465240",
    "end": "471520"
  },
  {
    "text": "registry looks like um you can check to see if your favorite library is instrumented and the one component that",
    "start": "471520",
    "end": "479360"
  },
  {
    "text": "that we won't be using today but I think is important to understand overall about open Telemetry is the collector um which",
    "start": "479360",
    "end": "486360"
  },
  {
    "text": "is an open source proxy that receives processes um transforms with OTL um the",
    "start": "486360",
    "end": "493879"
  },
  {
    "text": "open Telemetry transformation language um your Telemetry data and can export it",
    "start": "493879",
    "end": "499960"
  },
  {
    "text": "out to various backends or storage so this is a little rehash of",
    "start": "499960",
    "end": "505599"
  },
  {
    "text": "what I covered before we I really break down instrumentation and kind of three concepts the automatic what you get out",
    "start": "505599",
    "end": "512159"
  },
  {
    "text": "of the box just by installing something the programmatic where you're mixing pre-instrumental dependencies and",
    "start": "512159",
    "end": "518760"
  },
  {
    "text": "manually adding metadata and manual I think",
    "start": "518760",
    "end": "524120"
  },
  {
    "text": "a a misconception is that if you're manually instrumenting you're manually instrumenting anything no um what I hope",
    "start": "524120",
    "end": "531080"
  },
  {
    "text": "you take away from this Workshop is that you can do any sort of mixing and matching from automatic to programmatic",
    "start": "531080",
    "end": "536800"
  },
  {
    "text": "and manual it's not one or the other one versus the other you'll actually probably need to rely on all three types",
    "start": "536800",
    "end": "543000"
  },
  {
    "text": "to get the best visibility great um like I said Auto",
    "start": "543000",
    "end": "548440"
  },
  {
    "text": "automatic instrumentation is great uh because you don't have to take make code changes um if you've got service mesh",
    "start": "548440",
    "end": "554440"
  },
  {
    "text": "running that's something you kind of get out of the box um with tracing and we'll take a closer look at we'll have a lab",
    "start": "554440",
    "end": "561680"
  },
  {
    "text": "on auto instrumentation programmatic and manual so no worries about catching up",
    "start": "561680",
    "end": "567040"
  },
  {
    "text": "on the code there so look at us we completed lab one we've got a common",
    "start": "567040",
    "end": "573000"
  },
  {
    "text": "understanding of some of the terminology that we throw around in this observability space and we looked at a",
    "start": "573000",
    "end": "579640"
  },
  {
    "text": "highlevel overview of the components of open Telemetry that are going to be relevant for us today so now we will be",
    "start": "579640",
    "end": "586600"
  },
  {
    "text": "installing and configuring open Telemetry in our demo app and um yes there's some resources",
    "start": "586600",
    "end": "594279"
  },
  {
    "text": "that you can find at the end of every lab if you have question questions or",
    "start": "594279",
    "end": "599800"
  },
  {
    "text": "maybe issues that come up you're please uh free to submit them to the get lab repo associated with this or get in",
    "start": "599800",
    "end": "606240"
  },
  {
    "text": "touch with me on Mastodon or email so this is where the fund starts",
    "start": "606240",
    "end": "612120"
  },
  {
    "text": "this is the interactive portion um and if you joined us a little bit",
    "start": "612120",
    "end": "617519"
  },
  {
    "text": "later uh you need podman Python 3 and then grab the gitlab repo with the",
    "start": "617519",
    "end": "623440"
  },
  {
    "text": "sample application so what we want to do for automatically instrumenting is we want",
    "start": "623440",
    "end": "629399"
  },
  {
    "text": "otel to get set up on your machine we want to configure the SDK run our demo app and view Trace data in the console",
    "start": "629399",
    "end": "636880"
  },
  {
    "text": "we're going to start building these Concepts up one by",
    "start": "636880",
    "end": "641839"
  },
  {
    "text": "one all right we will be working with a python flask app I specifically chose",
    "start": "643880",
    "end": "649160"
  },
  {
    "text": "python because we've got a really lovely strong set of documentation in the python Community the python agent and a",
    "start": "649160",
    "end": "656360"
  },
  {
    "text": "lot of great code examples um this is you can kind of fill in the blank with your favorite framework um but for today",
    "start": "656360",
    "end": "662639"
  },
  {
    "text": "we'll be doing python all right so we will begin I",
    "start": "662639",
    "end": "668079"
  },
  {
    "text": "imagine this is where folks may run into some issues as we get to the interactive component and again if you run into a",
    "start": "668079",
    "end": "674600"
  },
  {
    "text": "snag raise your hand and me or one of U my very helpful helpers will come around",
    "start": "674600",
    "end": "680079"
  },
  {
    "text": "and try and debug with you but this one this step I think should be pretty easy",
    "start": "680079",
    "end": "685680"
  },
  {
    "text": "let's make let's make a project directory and let's CD into it you can name it whatever you want but uh",
    "start": "685680",
    "end": "692639"
  },
  {
    "text": "it's probably best if you copy paste next you're going to want to download the demo app this is a python",
    "start": "692639",
    "end": "699320"
  },
  {
    "text": "flask app it is very simple it's got three end points nothing too fancy there",
    "start": "699320",
    "end": "704839"
  },
  {
    "text": "um you can grab a git clone uh htps SSH Choose Your Own",
    "start": "704839",
    "end": "710600"
  },
  {
    "text": "Adventure I'll leave this up just for a little bit to make sure folks have time to grab it",
    "start": "710600",
    "end": "717000"
  },
  {
    "text": "down all",
    "start": "717959",
    "end": "723320"
  },
  {
    "text": "right and now we want to just explore our demo app what are we going to be instrumenting what do we need to get",
    "start": "725040",
    "end": "731040"
  },
  {
    "text": "visibility into we have we're starting with no instrumentation we don't know anything about this app as it's",
    "start": "731040",
    "end": "737199"
  },
  {
    "text": "running we've got three routes that we're going to look at today we got our basic slash and it is just going to",
    "start": "737199",
    "end": "743240"
  },
  {
    "text": "display the count of how many times you've loaded that page um for that session um we have doggo an endpoint",
    "start": "743240",
    "end": "751079"
  },
  {
    "text": "that calls out to the dog API and fetches a random photo of a dog it is very delightful I would have a little",
    "start": "751079",
    "end": "757440"
  },
  {
    "text": "fun today and finally roll dice which is just going to display the result of a",
    "start": "757440",
    "end": "762800"
  },
  {
    "text": "randomized dice roll a number between like one and six so pretty simple nothing too nothing too gnarly in the",
    "start": "762800",
    "end": "769360"
  },
  {
    "text": "code today because really what we want to focus on is learning the concepts of tracing the concepts of instrumenting",
    "start": "769360",
    "end": "775079"
  },
  {
    "text": "with traces so I really wanted to slim down um The Complex",
    "start": "775079",
    "end": "780839"
  },
  {
    "text": "and so we begin once you've gotten that sample repo down go ahead and get into",
    "start": "781240",
    "end": "787560"
  },
  {
    "text": "that directory and we will build our first image um and again I did all of",
    "start": "787560",
    "end": "793240"
  },
  {
    "text": "this testing with podman so if you do run into a Docker",
    "start": "793240",
    "end": "798199"
  },
  {
    "text": "problem I wish you luck I may try to help um but this is the how the workshop",
    "start": "798560",
    "end": "804839"
  },
  {
    "text": "set up and this is why I wanted to make it available after the fact so you can kind of hack on this at your own Leisure",
    "start": "804839",
    "end": "812440"
  },
  {
    "text": "so we'll start by building a image podman builds we're going to tag it we're calling this app hello otel little",
    "start": "812440",
    "end": "819880"
  },
  {
    "text": "simple um oh gosh and I did put a Docker file I thought I changed that to container file that's fine you'll know",
    "start": "819880",
    "end": "826680"
  },
  {
    "text": "you're successful when you get um a message like below it will obviously be a different",
    "start": "826680",
    "end": "835079"
  },
  {
    "text": "ID once you've got an image now we can run this",
    "start": "835079",
    "end": "840759"
  },
  {
    "text": "container okay so you're going to run this command you can copy paste but let me just walk through what's going on um",
    "start": "841759",
    "end": "847959"
  },
  {
    "text": "we've got Port 8,000 exposed in the container mapping to our local port on",
    "start": "847959",
    "end": "854279"
  },
  {
    "text": "801 there may or may not be I may or may not have changed it to 5,000 later on I",
    "start": "854279",
    "end": "860000"
  },
  {
    "text": "really hope I didn't we will find out so once you get",
    "start": "860000",
    "end": "865120"
  },
  {
    "text": "this running we are going to there's this little command that snuck in here",
    "start": "865120",
    "end": "870399"
  },
  {
    "text": "open Telemetry instrument that is the component that is going to be doing our Auto instrumentation for us if you open",
    "start": "870399",
    "end": "877680"
  },
  {
    "text": "up the source code you'll see there's no otel libraries being installed we're totally doing this from the outside with",
    "start": "877680",
    "end": "883880"
  },
  {
    "text": "the otel agent we are going to export our traces to the console we're going",
    "start": "883880",
    "end": "890920"
  },
  {
    "text": "to export some metrics but we're not going to be working with metrics today and then flask run is what we give to",
    "start": "890920",
    "end": "897320"
  },
  {
    "text": "the application to start it up once you've got that running go ahead and open up local host 80001 and confirm",
    "start": "897320",
    "end": "905440"
  },
  {
    "text": "that for that slash endpoint you see this web page has been viewed one time and note I am a backend engineer not a",
    "start": "905440",
    "end": "912560"
  },
  {
    "text": "front-end so there is not a lot of pretty CSS or anything happening",
    "start": "912560",
    "end": "919920"
  },
  {
    "text": "so once we've gotten there we can kind of confirm your setup's working the",
    "start": "919920",
    "end": "925279"
  },
  {
    "text": "app's working pod man's working we're ready to move On To The Next Step if",
    "start": "925279",
    "end": "930920"
  },
  {
    "text": "this is causing a problem and you do not get to this web page has been viewed one time you are please raise your hand",
    "start": "930920",
    "end": "937600"
  },
  {
    "text": "we'll come help or you can kind of follow along as we go and just kind of see how the slides",
    "start": "937600",
    "end": "945440"
  },
  {
    "text": "run so just a quick show of hands is are people getting this running I just want",
    "start": "945519",
    "end": "951480"
  },
  {
    "text": "to get a little temperature okay a few yeah good all right and again please we we do",
    "start": "951480",
    "end": "959079"
  },
  {
    "text": "want to help you so raise your hand and uh we'll come over okay so if you confirmed that",
    "start": "959079",
    "end": "965880"
  },
  {
    "text": "that's working go ahead and just stop that container contrl C and now we're going to run",
    "start": "965880",
    "end": "975079"
  },
  {
    "text": "interactively and use a little tool called open Telemetry bootstrap and what that will do is go ahead and detect",
    "start": "975079",
    "end": "982240"
  },
  {
    "text": "whatever installed libraries we have in the app and in this case it'll see oh there's a python library for flask it",
    "start": "982240",
    "end": "988680"
  },
  {
    "text": "will go out to the registry and find relevant instrumentation packages to",
    "start": "988680",
    "end": "993800"
  },
  {
    "text": "bring in this is the magic of Auto instrumentation that happens",
    "start": "993800",
    "end": "1000560"
  },
  {
    "text": "so go ahead and run your container map your ports run it run the image that we just",
    "start": "1000560",
    "end": "1007360"
  },
  {
    "text": "built and then go ahead and make sure that you get into a shell once you are in that shell we're",
    "start": "1007360",
    "end": "1014959"
  },
  {
    "text": "going to pip install the both open Tel drro and open Telemetry exporter",
    "start": "1014959",
    "end": "1021759"
  },
  {
    "text": "OTP OTP is the open Telemetry language protocol and that is",
    "start": "1021759",
    "end": "1028918"
  },
  {
    "text": "what speaks otel traces in spans um from one system to another so we need both of",
    "start": "1028919",
    "end": "1035558"
  },
  {
    "text": "those things pip is what uh python uses for package management and once you're",
    "start": "1035559",
    "end": "1041760"
  },
  {
    "text": "in there you can run open Telemetry bootstrap Das a install and that's what",
    "start": "1041760",
    "end": "1046959"
  },
  {
    "text": "will go out and grab all those dependencies and those instrumented libraries for us and um you know you'll",
    "start": "1046959",
    "end": "1054679"
  },
  {
    "text": "be successful because you should be dropped into root into that container uh I guess it depends on how you set up the",
    "start": "1054679",
    "end": "1061600"
  },
  {
    "text": "podman VM but if you're just doing it all kind of like Villa from the start you should be dropped in as",
    "start": "1061600",
    "end": "1068120"
  },
  {
    "text": "root now you can run the auto instrumentation agent and this is where",
    "start": "1068120",
    "end": "1074240"
  },
  {
    "text": "we're going to lean on open Telemetry instrument that command we're going to again this looks very similar to our app",
    "start": "1074240",
    "end": "1081240"
  },
  {
    "text": "run Command right but we're wrapping it in the open Telemetry instrument kind of agent there so we've kind of changed our",
    "start": "1081240",
    "end": "1089520"
  },
  {
    "text": "our run command we've added this up top and what we should",
    "start": "1089520",
    "end": "1095679"
  },
  {
    "text": "get is some verification so if that is working you can go ahead and open up",
    "start": "1095720",
    "end": "1101520"
  },
  {
    "text": "Local Host 80001 make a couple requests generate some traffic and you should see in your",
    "start": "1101520",
    "end": "1109039"
  },
  {
    "text": "console and no worries if this is super small what you should see are spans appearing in textual form this is this",
    "start": "1109039",
    "end": "1117039"
  },
  {
    "text": "is what a span looks like when it's not visualized in a UI it's this blob of information and that is how you know",
    "start": "1117039",
    "end": "1123960"
  },
  {
    "text": "that you have successfully wrapped our flask app in the otel auto instrumentation agent and are getting",
    "start": "1123960",
    "end": "1130679"
  },
  {
    "text": "span data this is Success at this point in the",
    "start": "1130679",
    "end": "1136480"
  },
  {
    "text": "workshop I'm going to pause cuz I don't want to get too far ahead and see raise a hands are we at",
    "start": "1136480",
    "end": "1145760"
  },
  {
    "text": "this point have are you able to verify your auto instrumentation or should we pause a little bit and maybe walk around",
    "start": "1145760",
    "end": "1151799"
  },
  {
    "text": "and do some helping raise your hand if you're successfully at this point okay okay all right okay we got",
    "start": "1151799",
    "end": "1161520"
  },
  {
    "text": "some and again um if you missed in the beginning there is a QR code and a bit.ly link you can follow along and",
    "start": "1161520",
    "end": "1167799"
  },
  {
    "text": "this is totally available after cubec con um so no worries about fitting it all in today if you run into a",
    "start": "1167799",
    "end": "1175039"
  },
  {
    "text": "snack great so we were interactively in our",
    "start": "1175039",
    "end": "1180120"
  },
  {
    "text": "container we need to get out of there uh so just type exit um or some systems you",
    "start": "1180120",
    "end": "1185360"
  },
  {
    "text": "may need to control see out of there great so what we did is confirmed",
    "start": "1185360",
    "end": "1190960"
  },
  {
    "text": "that without making any code changes we were able to get span data um",
    "start": "1190960",
    "end": "1196080"
  },
  {
    "text": "automatically just by wrapping our Command with the otel instrumentation",
    "start": "1196080",
    "end": "1201200"
  },
  {
    "text": "agent now let's go ahead and add a span attribute in this case we want to just",
    "start": "1201200",
    "end": "1207840"
  },
  {
    "text": "see how many times the page has been loaded maybe that's an interesting metric for us to track so we're going to",
    "start": "1207840",
    "end": "1213880"
  },
  {
    "text": "hop into your IDE or your text editor or whatever you're using to write code you're most comfortable with open up",
    "start": "1213880",
    "end": "1220440"
  },
  {
    "text": "that sample application and find app.py what we're going to do now is",
    "start": "1220440",
    "end": "1227000"
  },
  {
    "text": "manually import the open Telemetry library and we're going to modify the index method that is what is attached to",
    "start": "1227000",
    "end": "1233640"
  },
  {
    "text": "the slash route for this app so the things you're going to bring in from",
    "start": "1233640",
    "end": "1239159"
  },
  {
    "text": "open Telemetry import Trace you're going to instantiate a tracer so we've got to",
    "start": "1239159",
    "end": "1245280"
  },
  {
    "text": "make sure we've got something that's tracking all of our spans now we'll just call it demo app",
    "start": "1245280",
    "end": "1251200"
  },
  {
    "text": "you can call it whatever you'd like hello otel and then we're going to drop into",
    "start": "1251200",
    "end": "1256720"
  },
  {
    "text": "the index method when we're manually instrumenting",
    "start": "1256720",
    "end": "1262720"
  },
  {
    "text": "you've got to start this ban yourself and so we're going to say with Tracer",
    "start": "1262720",
    "end": "1267840"
  },
  {
    "text": "start as current span which means this method I'm in we're going to start a new span right now you should call it",
    "start": "1267840",
    "end": "1274799"
  },
  {
    "text": "something meaningful and relevant to you so in this case load homepage Works um",
    "start": "1274799",
    "end": "1280400"
  },
  {
    "text": "and then I always just like to type out fully um we're going to reference that variable as span some people shorten it",
    "start": "1280400",
    "end": "1286360"
  },
  {
    "text": "to S I just like to be very explicit and then the next line You'll",
    "start": "1286360",
    "end": "1291679"
  },
  {
    "text": "add is span. set attribute attributes are key value Pairs and so we'll call",
    "start": "1291679",
    "end": "1296960"
  },
  {
    "text": "this page load. count and then you're going to give it the value of hits which is how many times that page has been",
    "start": "1296960",
    "end": "1304640"
  },
  {
    "text": "loaded so when we've done that we're going to do this Loop many",
    "start": "1304640",
    "end": "1311120"
  },
  {
    "text": "many times um in this Workshop we will make some code changes we will rebuild our container image and then we're going",
    "start": "1311120",
    "end": "1317880"
  },
  {
    "text": "to load up our app send some traffic to it and then look at our Trace data this is a loop we'll do over and over again",
    "start": "1317880",
    "end": "1324720"
  },
  {
    "text": "um you are more than welcome to write a little script or if you've got your podman VM that's like mounted to your",
    "start": "1324720",
    "end": "1330559"
  },
  {
    "text": "directory uh you can kind of do this stuff on the Fly um but for the ease of",
    "start": "1330559",
    "end": "1335760"
  },
  {
    "text": "use we'll just kind of run through these commands as is so go ahead and rebuild your image uh",
    "start": "1335760",
    "end": "1342200"
  },
  {
    "text": "same kind of command as before make sure you get that success message that things",
    "start": "1342200",
    "end": "1347559"
  },
  {
    "text": "are built building run our",
    "start": "1347559",
    "end": "1352960"
  },
  {
    "text": "container copy paste this command I don't know that I want to read all that command out um please copy paste",
    "start": "1352960",
    "end": "1358360"
  },
  {
    "text": "liberally and get this application",
    "start": "1358360",
    "end": "1363440"
  },
  {
    "text": "running the way that we're going to verify this manual instrumentation what we've done is ADD what we should see is",
    "start": "1363440",
    "end": "1369760"
  },
  {
    "text": "when we load up our homepage we should see in our console a span pop up that",
    "start": "1369760",
    "end": "1376960"
  },
  {
    "text": "specifically um has this in this attribute block block page load count one or however",
    "start": "1376960",
    "end": "1385000"
  },
  {
    "text": "many times you refreshed I like to refresh like a man mad man so mine always gets up to like seven or eight um",
    "start": "1385000",
    "end": "1391039"
  },
  {
    "text": "and that is how you know that we've successfully piped through that manual um attribute there we will not be",
    "start": "1391039",
    "end": "1397919"
  },
  {
    "text": "working with spans in textual form for long I promise uh this is just the easiest way for us to constrain the",
    "start": "1397919",
    "end": "1403600"
  },
  {
    "text": "space and get started um early on so I'm going to pause right here and",
    "start": "1403600",
    "end": "1410080"
  },
  {
    "text": "just do another temperature check raise your hand if you've been able to verify",
    "start": "1410080",
    "end": "1415400"
  },
  {
    "text": "that this page load count is in your span payload oh okay now we're losing people",
    "start": "1415400",
    "end": "1423880"
  },
  {
    "text": "okay then again please feel feel feel comfortable and free to raise your hand um work with a neighbor or I've got two",
    "start": "1423880",
    "end": "1430520"
  },
  {
    "text": "Tas all right we've got one person that needs some help we are here we got",
    "start": "1430520",
    "end": "1435559"
  },
  {
    "text": "another three okay yeah keep them up and uh we will head over and Vic we got some",
    "start": "1435559",
    "end": "1443000"
  },
  {
    "text": "one here and one up front we want to make sure this is a good learning experience for you um we got one right",
    "start": "1443000",
    "end": "1449840"
  },
  {
    "text": "there um",
    "start": "1449840",
    "end": "1454158"
  },
  {
    "text": "perfect okay when you've gotten to this point we can go ahead and stop that container we did a good job this is this",
    "start": "1455480",
    "end": "1462000"
  },
  {
    "text": "feedback loop that you should get used to as you're instrumenting code I make my change I need to validate I need to",
    "start": "1462000",
    "end": "1468440"
  },
  {
    "text": "run it validate that I what I expected to be there is there um and then move on to the",
    "start": "1468440",
    "end": "1475080"
  },
  {
    "text": "next so at this point we will have completed",
    "start": "1475080",
    "end": "1480640"
  },
  {
    "text": "lab one and even if you ran into some issues with the auto instrumentation",
    "start": "1480640",
    "end": "1486080"
  },
  {
    "text": "programmatic instrumentation is like a totally um we'll be using a different image build and everything so you can",
    "start": "1486080",
    "end": "1492440"
  },
  {
    "text": "roll forward um or we'll come over and help",
    "start": "1492440",
    "end": "1498679"
  },
  {
    "text": "um and if you're curious for some more resources um there's the poto python Auto instrumentation agent config here",
    "start": "1498679",
    "end": "1506240"
  },
  {
    "text": "the open Telemetry instrument man page if you want to do a little more digging on your own um and again this project",
    "start": "1506240",
    "end": "1513559"
  },
  {
    "text": "repo and the otel official site but that one's pretty easy to find if you just Google",
    "start": "1513559",
    "end": "1520279"
  },
  {
    "text": "otel okay and we've got one more up",
    "start": "1520640",
    "end": "1526679"
  },
  {
    "text": "front okay so when we're talking about programmatic instrumentation like Auto",
    "start": "1526679",
    "end": "1533720"
  },
  {
    "text": "instrumentation is great it's not that it's not this great thing it's just there's a little bit of a dark side where people think that that is all they",
    "start": "1533720",
    "end": "1540679"
  },
  {
    "text": "need to do they treat Auto instrumentation as the Finish Point um instead of the Launchpad and I just",
    "start": "1540679",
    "end": "1548039"
  },
  {
    "text": "don't think you're ever going to get the full visibility you need for context or",
    "start": "1548039",
    "end": "1554679"
  },
  {
    "text": "business specific stuff without programmatic or manually instrumenting so that's why I thought it was important",
    "start": "1554679",
    "end": "1560520"
  },
  {
    "text": "to kind of show the differences so to now we'll move to programmatic",
    "start": "1560520",
    "end": "1565559"
  },
  {
    "text": "instrumentation with otel libraries and we'll finally bring in joerger for some Trace visualizations because working",
    "start": "1565559",
    "end": "1572559"
  },
  {
    "text": "with spans and textual form is just not um not my favorite",
    "start": "1572559",
    "end": "1579000"
  },
  {
    "text": "so go ahead and head back to the IDE open up app.py and reset that file so just um",
    "start": "1579000",
    "end": "1588000"
  },
  {
    "text": "you can kind of delete what you had and copy paste here um this is what your file should look like um and you can see our routes",
    "start": "1588000",
    "end": "1596720"
  },
  {
    "text": "are very basic so we are going to update our",
    "start": "1596720",
    "end": "1603399"
  },
  {
    "text": "Imports um this dots the dots just mean there's more code there I just wanted to focus on what we'd be changing so we're",
    "start": "1603399",
    "end": "1611000"
  },
  {
    "text": "going to import these libraries open Telemetry instrumentation flask we're going to import flask instrument that is",
    "start": "1611000",
    "end": "1617720"
  },
  {
    "text": "what we'll be doing the programmatic instrumentation what that means is the maintainers and authors of flask have",
    "start": "1617720",
    "end": "1623880"
  },
  {
    "text": "already taken the time to add open Telemetry instrumentation the spans and metrics or whatever you need to flask",
    "start": "1623880",
    "end": "1631360"
  },
  {
    "text": "and we can just bring that in and we can kind of piggy back off of that um you do not have you should not really be",
    "start": "1631360",
    "end": "1637520"
  },
  {
    "text": "manually instrumenting everything I really think you lean on manual instrumentation for um specific",
    "start": "1637520",
    "end": "1644120"
  },
  {
    "text": "attributes and metadata and then maybe some internal code path That Couldn't naturally be picked up by a",
    "start": "1644120",
    "end": "1650399"
  },
  {
    "text": "framework there's a couple um when we're bringing in the otel SDK we're going to bring in two things the console span",
    "start": "1650399",
    "end": "1657440"
  },
  {
    "text": "exporter I guess we'll still be working with the console a little bit and then batch span processor and what this will",
    "start": "1657440",
    "end": "1663200"
  },
  {
    "text": "do is um bring a bunch of spans in the queue once that queue gets you know whatever size it will then send off",
    "start": "1663200",
    "end": "1669880"
  },
  {
    "text": "spans so sometimes you're like I've been sending traffic to my app where did my",
    "start": "1669880",
    "end": "1675240"
  },
  {
    "text": "where's why don't I see traces well maybe you need to make a couple more requests and make sure we have enough uh",
    "start": "1675240",
    "end": "1680919"
  },
  {
    "text": "to get a batch out the door all",
    "start": "1680919",
    "end": "1686240"
  },
  {
    "text": "right and then we'll move to configuring the otel SDK um so after our import",
    "start": "1686240",
    "end": "1692240"
  },
  {
    "text": "statements and above any existing code this will be the first thing that we want to drop in there we're still in",
    "start": "1692240",
    "end": "1697720"
  },
  {
    "text": "app.py we're not going to be anywhere else for a while um and this is the all the config that we need to do set our",
    "start": "1697720",
    "end": "1705559"
  },
  {
    "text": "Tracer provider and get our tracer provider and make sure we're adding that batch span processor and the console",
    "start": "1705559",
    "end": "1712559"
  },
  {
    "text": "span exporter that's not a lot of config it's kind of nice it's not like totally making our app code horrible it's it's",
    "start": "1712559",
    "end": "1719600"
  },
  {
    "text": "very minimal and the last part we need to do",
    "start": "1719600",
    "end": "1725919"
  },
  {
    "text": "is set up our programmatic instrumentation so we've dropped in we've set up a tracer we've set up the",
    "start": "1725919",
    "end": "1731960"
  },
  {
    "text": "provider now we need to say okay this flask instrument needs to run and do its thing um and what we're instrumenting is",
    "start": "1731960",
    "end": "1739440"
  },
  {
    "text": "our specific app instance so go ahead and make sure this",
    "start": "1739440",
    "end": "1744640"
  },
  {
    "text": "is reflected in your app.py and um oh yeah it's a little",
    "start": "1744640",
    "end": "1750240"
  },
  {
    "text": "scroll so if you're following along you can if you got a little bit lost or the lines didn't add up you can kind of copy",
    "start": "1750240",
    "end": "1756559"
  },
  {
    "text": "paste this like blessed version of the",
    "start": "1756559",
    "end": "1760640"
  },
  {
    "text": "file and again this is this Loop that we've been talking about where we'll rebuild the container image we're going",
    "start": "1761919",
    "end": "1767679"
  },
  {
    "text": "to run the container and then we're going to send some traffic and validate our results this is the loop you should",
    "start": "1767679",
    "end": "1773279"
  },
  {
    "text": "get used to when you're instrumenting so in this case the only thing I've changed is that we're going to tag this",
    "start": "1773279",
    "end": "1779080"
  },
  {
    "text": "programmatic in case you wanted to kind of head-to-head the the manual versus the programmatic versus the auto",
    "start": "1779080",
    "end": "1786039"
  },
  {
    "text": "instrumentation later um we've just I've tagged them differently per lab make sure you get the success",
    "start": "1786039",
    "end": "1793080"
  },
  {
    "text": "message that you've built it and then go ahead and run only thing that would have changed from",
    "start": "1793080",
    "end": "1799159"
  },
  {
    "text": "the last time is this programmatic everything else is the same doing the flask",
    "start": "1799159",
    "end": "1805159"
  },
  {
    "text": "run and go ahead and same thing just open up Local Host a0001 confirm that you that the app is",
    "start": "1805159",
    "end": "1813399"
  },
  {
    "text": "still running and you can go ahead to R dice you can go ahead to doggo what flask",
    "start": "1813399",
    "end": "1819960"
  },
  {
    "text": "Auto in what flask programmatic instrumentation does flask knows about routes so flask will make sure that it s",
    "start": "1819960",
    "end": "1827600"
  },
  {
    "text": "all of our calls to the different routes but it doesn't know too much more about what we're doing on the inside there so",
    "start": "1827600",
    "end": "1832679"
  },
  {
    "text": "you won't see like the how many times this P web page has been loaded but you will see a span for the slash route has",
    "start": "1832679",
    "end": "1840080"
  },
  {
    "text": "been called so if you just do roll dice for example what you should see what we get",
    "start": "1840080",
    "end": "1847000"
  },
  {
    "text": "out of out of the box with programmatic instrumentation is this representation",
    "start": "1847000",
    "end": "1852760"
  },
  {
    "text": "of a trace um and again we didn't change any of our routing code we just imported",
    "start": "1852760",
    "end": "1860120"
  },
  {
    "text": "the flask Library which is essentially what the auto instrumentation agent was doing for us",
    "start": "1860120",
    "end": "1867480"
  },
  {
    "text": "um go ahead and stop that container and now we finally get to actually looking",
    "start": "1867480",
    "end": "1873279"
  },
  {
    "text": "at these traces um in jger podman like kubernetes has a concept of a pod which",
    "start": "1873279",
    "end": "1879399"
  },
  {
    "text": "is where you're running multiple containers and they share some resources um so what we're going to do is open up",
    "start": "1879399",
    "end": "1885519"
  },
  {
    "text": "appp pod. it's the yo you know and love um and just make sure you're comfy with",
    "start": "1885519",
    "end": "1891360"
  },
  {
    "text": "what we're doing here we're bringing in the Jagger all-in-one container this is not production ready this is",
    "start": "1891360",
    "end": "1897440"
  },
  {
    "text": "specifically um for local testing just in case you are wondering and then the",
    "start": "1897440",
    "end": "1902480"
  },
  {
    "text": "ports that you need to care about 16686 is the port for Jagger's web UI 4318 of",
    "start": "1902480",
    "end": "1909080"
  },
  {
    "text": "course is uh for sending uh the otel data and then we're going to make sure",
    "start": "1909080",
    "end": "1914600"
  },
  {
    "text": "that the collector OTP is enabled so so jerger knows to receive otel data and",
    "start": "1914600",
    "end": "1920600"
  },
  {
    "text": "we're going to be sending it via OTP okay so your other container should",
    "start": "1920600",
    "end": "1927320"
  },
  {
    "text": "be stopped um so just make sure that's happening you can always do a podman PS um and see what what's running um and",
    "start": "1927320",
    "end": "1933960"
  },
  {
    "text": "the way that you run a pod in podman podman play Cube and then pass it your",
    "start": "1933960",
    "end": "1939399"
  },
  {
    "text": "pod file uh you should get a success message that not one but two containers",
    "start": "1939399",
    "end": "1945039"
  },
  {
    "text": "have spun up one for our app and one for jerger all-in-one uh jger natively",
    "start": "1945039",
    "end": "1950279"
  },
  {
    "text": "supports uh sending otel data so we um all the config that we had to do was",
    "start": "1950279",
    "end": "1956480"
  },
  {
    "text": "also pretty minimal the stuff all plays nicely together you'll know you're successful",
    "start": "1956480",
    "end": "1961880"
  },
  {
    "text": "if you can open up Local Host 16686 um and you will see the very very",
    "start": "1961880",
    "end": "1967240"
  },
  {
    "text": "cute um Jagger mascot this little gopher detective he's following the footprints the trace um this is what success looks",
    "start": "1967240",
    "end": "1975519"
  },
  {
    "text": "like for this part and let's go ahead and generate some",
    "start": "1975519",
    "end": "1981279"
  },
  {
    "text": "traffic um make a few requests to Local Host 801 to doggo to roll dice um and",
    "start": "1981279",
    "end": "1987039"
  },
  {
    "text": "kind of see what you get out of the box in jger what you should see is the hello",
    "start": "1987039",
    "end": "1994840"
  },
  {
    "text": "otel or whatever you have named your service um in the dropdown and you should see some little dots for the",
    "start": "1994840",
    "end": "2000919"
  },
  {
    "text": "request representing each request that you've made um and then you know like I said I love to refresh stuff so I made",
    "start": "2000919",
    "end": "2007480"
  },
  {
    "text": "10 traces you may make one or two and okay not a hand um this is what this is",
    "start": "2007480",
    "end": "2015240"
  },
  {
    "text": "where we're at now Jer has a lot of really beautiful ways to visualize traces one common visualization you will",
    "start": "2015240",
    "end": "2023120"
  },
  {
    "text": "see is a trace waterfall um you can go ahead and click so if you see down here",
    "start": "2023120",
    "end": "2029360"
  },
  {
    "text": "like hello otel doggo you can click that and be taken into the trace waterfall",
    "start": "2029360",
    "end": "2035320"
  },
  {
    "text": "view um this Trace waterfall if you look at the Chrome devb tools sort of like",
    "start": "2035320",
    "end": "2040639"
  },
  {
    "text": "their waterfall diagrams or it's not quite a flame graph but this should",
    "start": "2040639",
    "end": "2046360"
  },
  {
    "text": "be this is a visualization you turn to when you want to examine in detail one",
    "start": "2046360",
    "end": "2052280"
  },
  {
    "text": "particular request that was traced um and you can get all sorts of helpful attributes if you click on one of the",
    "start": "2052280",
    "end": "2058280"
  },
  {
    "text": "spans it should open up into this nice little table",
    "start": "2058280",
    "end": "2063599"
  },
  {
    "text": "so if all of this was working for you locally and we have completed",
    "start": "2063599",
    "end": "2069040"
  },
  {
    "text": "programmatic instrumentation um and successfully sent and viewed some traces",
    "start": "2069040",
    "end": "2074398"
  },
  {
    "text": "in Yager um leave your pod running because next up we're going to talk about the visualizations and you may",
    "start": "2074399",
    "end": "2080638"
  },
  {
    "text": "want to explore that on your machine all",
    "start": "2080639",
    "end": "2087119"
  },
  {
    "text": "right yep yep yep uh what is yger it is an open source uh distributed tracing",
    "start": "2088000",
    "end": "2093599"
  },
  {
    "text": "system it spun out of uber um when Uber was um sort of had their death star of",
    "start": "2093599",
    "end": "2099200"
  },
  {
    "text": "microservices and they really needed tracing to understand the complexities of uh the path that one single request",
    "start": "2099200",
    "end": "2106480"
  },
  {
    "text": "could take in their system tracing was their answer so they built joerger and originally joerger actually had its own",
    "start": "2106480",
    "end": "2113480"
  },
  {
    "text": "ecosystem its own instrumentation and format but luckily uh joerger decided to",
    "start": "2113480",
    "end": "2119000"
  },
  {
    "text": "join forces with otel or at least interoperate with otel and has actively deprecated any Jagger specific",
    "start": "2119000",
    "end": "2125720"
  },
  {
    "text": "instrumentation in favor of otel so we use Jer today um for the UI um if you",
    "start": "2125720",
    "end": "2131800"
  },
  {
    "text": "want to self-host distributed tracing backend in UI that is also um what some",
    "start": "2131800",
    "end": "2136920"
  },
  {
    "text": "companies do so jger allinone we're not going to go super deep into jerger architecture",
    "start": "2136920",
    "end": "2142560"
  },
  {
    "text": "because we're just using it for a UI um but there's two components that you should know about the collector um which",
    "start": "2142560",
    "end": "2149240"
  },
  {
    "text": "similar to The otel Collector receives processes and sends that Trace data and jerger query which exposes those apis uh",
    "start": "2149240",
    "end": "2156839"
  },
  {
    "text": "for retrieving traces and of course our beautiful web UI that we are going to be very comfy with",
    "start": "2156839",
    "end": "2162920"
  },
  {
    "text": "soon so this first page that you land on is sort of that default view of view you",
    "start": "2162920",
    "end": "2168760"
  },
  {
    "text": "can query for traces you can query for spans um and you can look at traces in aggregate um yeah so you could say maybe",
    "start": "2168760",
    "end": "2176079"
  },
  {
    "text": "I want to see everything that's status code 500 or I want to see only traces from this specific service this is sort",
    "start": "2176079",
    "end": "2182800"
  },
  {
    "text": "of your homepage view is the jger search console",
    "start": "2182800",
    "end": "2188480"
  },
  {
    "text": "um the scatter plot up there matches the traces that jger knows about and in the",
    "start": "2188480",
    "end": "2193839"
  },
  {
    "text": "case of allinone we're storing this data in memory uh which is again why it's not a production ready system um but if you",
    "start": "2193839",
    "end": "2201319"
  },
  {
    "text": "want to click maybe you see like in this example wow that's a very you know maybe that took a lot of time or why is this",
    "start": "2201319",
    "end": "2207560"
  },
  {
    "text": "dot so big kind of click on that and see the traces that uh led to that um table",
    "start": "2207560",
    "end": "2213400"
  },
  {
    "text": "view I think is helpful if you want to compare so each of these traces should have a little checkbox maybe you want to",
    "start": "2213400",
    "end": "2220240"
  },
  {
    "text": "dep compare a trace from before and after a deploy or before and after a feature flag got flipped um that is a",
    "start": "2220240",
    "end": "2227160"
  },
  {
    "text": "very common use case and so jerger supports that out of the box once you click on a trace you get",
    "start": "2227160",
    "end": "2234000"
  },
  {
    "text": "again taken back to this Trace waterfall View and when you're in running in a production system maybe at scale in a",
    "start": "2234000",
    "end": "2241240"
  },
  {
    "text": "cloud native architecture you actually could have traces that have hundreds of services thousands of spans and making",
    "start": "2241240",
    "end": "2246920"
  },
  {
    "text": "it kind of overwhelming so having this Trace waterfall view where you can collapse groups groups of spans or spans",
    "start": "2246920",
    "end": "2254160"
  },
  {
    "text": "from a particular service is really helpful to navigate as you're pinpointing maybe what's the source of",
    "start": "2254160",
    "end": "2259319"
  },
  {
    "text": "latency or specific error that you saw we're going to be working with really tiny traces today um but just know that",
    "start": "2259319",
    "end": "2266760"
  },
  {
    "text": "uh please make heavy use of collapsing spans because it can be data overload um in a sufficiently big",
    "start": "2266760",
    "end": "2273160"
  },
  {
    "text": "system um you can even use it's a little tiny",
    "start": "2273160",
    "end": "2278800"
  },
  {
    "text": "you can even use this tiny search box so maybe you are looking at a 100 span Trace maybe you just you know that",
    "start": "2278800",
    "end": "2285800"
  },
  {
    "text": "there's a specific attribute or property you want to look at like get requests 400s 500s 200s um and so if you go ahead",
    "start": "2285800",
    "end": "2293440"
  },
  {
    "text": "and type into this text box um one of those attributes it will uh bring you",
    "start": "2293440",
    "end": "2298880"
  },
  {
    "text": "down to the span that uh matches that so that can be a helpful way if you know what you're looking for or you're",
    "start": "2298880",
    "end": "2304480"
  },
  {
    "text": "curious if some attribute popped up and Trace and you don't want to read the whole waterfall um that's one uh thing",
    "start": "2304480",
    "end": "2311119"
  },
  {
    "text": "that you can do again the scatter plot um it's kind of a quick way to visually compare",
    "start": "2311119",
    "end": "2317359"
  },
  {
    "text": "traces without getting into all the details of the spans and the attributes um you could look for things that are",
    "start": "2317359",
    "end": "2322560"
  },
  {
    "text": "out of the or ordinary or anomalous and clicking on that bubble each bubble is a trace um you'll go to that Trace",
    "start": "2322560",
    "end": "2329079"
  },
  {
    "text": "waterfall detail view um and then the table view you can also sort by most",
    "start": "2329079",
    "end": "2334359"
  },
  {
    "text": "recent you can look at a dependency graph there's really so many different ways that you can interact with and",
    "start": "2334359",
    "end": "2339640"
  },
  {
    "text": "visualize this Trace data which is why I was really happy to leave the sort of Json text representation of spans",
    "start": "2339640",
    "end": "2346319"
  },
  {
    "text": "because this is the tracing that I know and love um being able to interact with it like",
    "start": "2346319",
    "end": "2351640"
  },
  {
    "text": "this um so we've talked a little bit about the trace table again you can sort",
    "start": "2351640",
    "end": "2356680"
  },
  {
    "text": "Traces by duration this is back on that home search page um the amount of spans",
    "start": "2356680",
    "end": "2362240"
  },
  {
    "text": "so maybe if you saw maybe for a request to check out you normally see 50 spans",
    "start": "2362240",
    "end": "2369119"
  },
  {
    "text": "and then all of a sudden you see a trace that has 300 spans something might have went wrong there um so being able to",
    "start": "2369119",
    "end": "2376400"
  },
  {
    "text": "look at traces in Aggregate and sort of sort and filter them is very",
    "start": "2376400",
    "end": "2381920"
  },
  {
    "text": "helpful um and then Trace details so again clicking on a span so you get to",
    "start": "2381920",
    "end": "2387280"
  },
  {
    "text": "you see the trace is an aggregate you find one that looks interesting you click into it you're taken to the trace",
    "start": "2387280",
    "end": "2392400"
  },
  {
    "text": "waterfall you find a span that's interesting it's maybe in the critical path in taking a long time it's got a",
    "start": "2392400",
    "end": "2398839"
  },
  {
    "text": "wonky air Message something about it doesn't look right you can again zoom in more and drill into the details for that",
    "start": "2398839",
    "end": "2405680"
  },
  {
    "text": "span that is where all of the manual instrumentation of that metadata comes in handy um so you can start to do some",
    "start": "2405680",
    "end": "2412640"
  },
  {
    "text": "correlation so the beauty of traces is you can go from that Trace aggregate view oh some of these requests look a",
    "start": "2412640",
    "end": "2418960"
  },
  {
    "text": "little funky let me look at one of them hm this is I think where the problem is",
    "start": "2418960",
    "end": "2424040"
  },
  {
    "text": "or it's this call to this database and zoom in into that span and then all the way back out again traces are really",
    "start": "2424040",
    "end": "2430119"
  },
  {
    "text": "great for that zooming in zooming out as you're developing hypothesis as to what's going wrong um or maybe what's",
    "start": "2430119",
    "end": "2437119"
  },
  {
    "text": "going right maybe you made a performance Improvement and you just want to understand and explain how that happened and get that promotion so doesn't always",
    "start": "2437119",
    "end": "2444800"
  },
  {
    "text": "have to be a bad use case when you're loading up the trace page there are a couple other ways you",
    "start": "2444800",
    "end": "2449839"
  },
  {
    "text": "can look at traces um it is not super discoverable but there's this tiny tiny",
    "start": "2449839",
    "end": "2454960"
  },
  {
    "text": "drop down on the right hand side uh just follow it on",
    "start": "2454960",
    "end": "2460000"
  },
  {
    "text": "your laptop you can grab a graph a span table and a flame graph if you are like",
    "start": "2460000",
    "end": "2467119"
  },
  {
    "text": "really into flame graphs and that's how you troubleshoot best I love the graph or sometimes it's called the system",
    "start": "2467119",
    "end": "2473440"
  },
  {
    "text": "topology view this is what is going to show you is how the services relate to",
    "start": "2473440",
    "end": "2479520"
  },
  {
    "text": "each other and there's another view you can get of how each method or span relates to each other you can change the",
    "start": "2479520",
    "end": "2486319"
  },
  {
    "text": "color to highlight either what has taken the longest what's in the critical path or um self times which shows the longest",
    "start": "2486319",
    "end": "2493920"
  },
  {
    "text": "bations that weren't waiting on uh children or other work to be",
    "start": "2493920",
    "end": "2499160"
  },
  {
    "text": "done this is experimental um so but it is something that you'll see in a lot of",
    "start": "2499160",
    "end": "2505160"
  },
  {
    "text": "vendors as well so the more you get used to exploring spans and traces um in the graph view it's really easy to bring",
    "start": "2505160",
    "end": "2511880"
  },
  {
    "text": "that knowledge over to um any sort of vendor this B table again if you're",
    "start": "2511880",
    "end": "2517880"
  },
  {
    "text": "looking at a trace that has so many so many spans and you just know that you're looking for an error is true or um some",
    "start": "2517880",
    "end": "2525280"
  },
  {
    "text": "other attribute you can go ahead and even search within a trace um just for a specific um maybe we're looking at the",
    "start": "2525280",
    "end": "2532440"
  },
  {
    "text": "ginger load or the HTTP G there's lots of ways that you can inspect and query",
    "start": "2532440",
    "end": "2537720"
  },
  {
    "text": "this data and I am not a flame graph person but if you are um please feel free to",
    "start": "2537720",
    "end": "2543920"
  },
  {
    "text": "use the flame graph view to visualize these traces um you can similarly to the",
    "start": "2543920",
    "end": "2549280"
  },
  {
    "text": "waterfall you can collapse the unnecessary details that you don't need to see or don't care about um you can",
    "start": "2549280",
    "end": "2554680"
  },
  {
    "text": "copy that function name to use in maybe a metrics query or a logs query in another system or even highlight similar",
    "start": "2554680",
    "end": "2561319"
  },
  {
    "text": "spans within the trace so that is why I wanted to bring Jer today um because",
    "start": "2561319",
    "end": "2566760"
  },
  {
    "text": "there are just lots of ways for you to visualize the data in a way that make sense for",
    "start": "2566760",
    "end": "2572119"
  },
  {
    "text": "you and we'll take a quick look at comparing traces for change I will say this is uh comparing traces is what I",
    "start": "2572119",
    "end": "2579680"
  },
  {
    "text": "used the most when I was troubleshooting as an SRE but joerger has a very interesting way of showing them I think",
    "start": "2579680",
    "end": "2586920"
  },
  {
    "text": "there are some very nice options in in vendors and I'm excited to see what the",
    "start": "2586920",
    "end": "2592119"
  },
  {
    "text": "open Telemetry desktop viewer does for Trace comparisons that is another project that is kind of getting",
    "start": "2592119",
    "end": "2598880"
  },
  {
    "text": "started so uh why do you want to compare traces really most of the time when I would get paged or someone would tell me",
    "start": "2598880",
    "end": "2605319"
  },
  {
    "text": "something is wrong I'm like well what changed it was working before um what is",
    "start": "2605319",
    "end": "2610599"
  },
  {
    "text": "different so I like to look at a trace a request that happened from when things were normal um to afterwards when I got",
    "start": "2610599",
    "end": "2618119"
  },
  {
    "text": "alerted or somebody told me something was wrong being able to compare that request path is super powerful um and in",
    "start": "2618119",
    "end": "2624839"
  },
  {
    "text": "our case we'll think um for our doggo app why did one request for doggo take",
    "start": "2624839",
    "end": "2630240"
  },
  {
    "text": "685 milliseconds in the other only 281 um this is something you should be",
    "start": "2630240",
    "end": "2636280"
  },
  {
    "text": "able to Repro the machine uh it's a little hard to see there but what we do",
    "start": "2636280",
    "end": "2642240"
  },
  {
    "text": "now is Click both of those checkboxes hit compare traces and you'll be taken to this view they've decided to model",
    "start": "2642240",
    "end": "2650280"
  },
  {
    "text": "the colors after code diffs um so gray represents spans that are in both traces",
    "start": "2650280",
    "end": "2656319"
  },
  {
    "text": "so kind of Fading Into the background you don't need to focus on those that's what was similar red nodes red or spans",
    "start": "2656319",
    "end": "2664440"
  },
  {
    "text": "that were only in the first Trace that you selected green nodes or spans were",
    "start": "2664440",
    "end": "2670280"
  },
  {
    "text": "only in the second Trace you selected and so if we look at I don't think I can",
    "start": "2670280",
    "end": "2675760"
  },
  {
    "text": "zoom in but if you look closer maybe on your machine at this Trace stiff you can",
    "start": "2675760",
    "end": "2681119"
  },
  {
    "text": "see what was present in the first Trace was compiling the Ginga template which Ginga is what flask uses for its HTML",
    "start": "2681119",
    "end": "2688920"
  },
  {
    "text": "templating under the hood um and it's only done on the first time a page is loaded so in this case we were able to",
    "start": "2688920",
    "end": "2695160"
  },
  {
    "text": "compare traces is to say oh the first time that we make a request to this",
    "start": "2695160",
    "end": "2700400"
  },
  {
    "text": "application when it spins up it takes a little bit longer obviously it's not the end of the world we're still under like",
    "start": "2700400",
    "end": "2705720"
  },
  {
    "text": "a mill one second um but we can see where that latency came from and so",
    "start": "2705720",
    "end": "2710880"
  },
  {
    "text": "that's a small example that shows why Trace comparison can be uh super fast",
    "start": "2710880",
    "end": "2716720"
  },
  {
    "text": "and helpful and again like why are there so many ways to visualize a trace It's",
    "start": "2716720",
    "end": "2721800"
  },
  {
    "text": "really because you have that ability to zoom out looking at traces in aggregate to zooming all the way down to an",
    "start": "2721800",
    "end": "2727520"
  },
  {
    "text": "individual operation that happen to uh take place for a request and it'd be",
    "start": "2727520",
    "end": "2732559"
  },
  {
    "text": "really overwhelming to try to shoehorn that in into one specific visualization or one single paint of glass um as the",
    "start": "2732559",
    "end": "2740200"
  },
  {
    "text": "industry loves to say and so for me it's all about the ability to go from high level to low level back up again and you",
    "start": "2740200",
    "end": "2747760"
  },
  {
    "text": "just need different visualizations to support whatever zoom level that you're working",
    "start": "2747760",
    "end": "2753599"
  },
  {
    "text": "with okay so you can go ahead and stop the Pod um or if you want to keep playing with the visualizations you can",
    "start": "2753599",
    "end": "2760720"
  },
  {
    "text": "but I think that means we will go to the next Lab yes so we reviewed our Trace",
    "start": "2760720",
    "end": "2767040"
  },
  {
    "text": "visualizations we've kind of gotten a little more comfortable with the Jagger UI and now um is the final lab on",
    "start": "2767040",
    "end": "2773800"
  },
  {
    "text": "manually instrumenting metadata this is the change we'll make to our instrumentation Loop we'll make some",
    "start": "2773800",
    "end": "2779839"
  },
  {
    "text": "code changes we'll rebuild our image we will run our container we will generate",
    "start": "2779839",
    "end": "2786000"
  },
  {
    "text": "Traces by sending requests to our app and then we will load them up in jger and see um the results of our",
    "start": "2786000",
    "end": "2792720"
  },
  {
    "text": "instrumentation so we're adding one step to our instrumentation feedback loop but it's still pretty",
    "start": "2792720",
    "end": "2799200"
  },
  {
    "text": "manageable all right um if you were really into the trace comparison there's a deep dive blog that I've linked here",
    "start": "2799200",
    "end": "2805720"
  },
  {
    "text": "in these slides you can check out the Jagger project site or while you're here go talk to a jagger maintainer talk to",
    "start": "2805720",
    "end": "2811720"
  },
  {
    "text": "the Jager folks about what's going on in their world um you can read about native OTL support and if you're really keen on",
    "start": "2811720",
    "end": "2818880"
  },
  {
    "text": "bringing Jagger to your org it's definitely a good idea to look at the deployment options you've got available",
    "start": "2818880",
    "end": "2824559"
  },
  {
    "text": "to you because all-in-one is not for production I cannot say that enough it is just for our local testing",
    "start": "2824559",
    "end": "2831800"
  },
  {
    "text": "today all right and here we go lab",
    "start": "2831800",
    "end": "2839640"
  },
  {
    "text": "five and it's kind of a rehash of before but again automatic and programmatic",
    "start": "2839640",
    "end": "2844680"
  },
  {
    "text": "instrumentation gets you most of the way to visibility it is definitely better than nothing but if you have the skills",
    "start": "2844680",
    "end": "2852200"
  },
  {
    "text": "and can teach other developers the skills of manual instrumentation you will be able to add specific metadata to",
    "start": "2852200",
    "end": "2858520"
  },
  {
    "text": "your apps um so that you can derive insights from your business you will see um some examples of what we'll be",
    "start": "2858520",
    "end": "2864960"
  },
  {
    "text": "manually instrumenting now as we begin so we'll head back to our IDE open",
    "start": "2864960",
    "end": "2871480"
  },
  {
    "text": "up app.py kind of delete whatever we had there and go ahead and copy paste this",
    "start": "2871480",
    "end": "2878359"
  },
  {
    "text": "um reset app.py then we are going to manually",
    "start": "2878359",
    "end": "2885119"
  },
  {
    "text": "bring in some libraries again reinitialize our Tracer provider which",
    "start": "2885119",
    "end": "2890319"
  },
  {
    "text": "is what creates the Tracer that accesses and modify span as we run our",
    "start": "2890319",
    "end": "2895359"
  },
  {
    "text": "application and we did like that flask framework instrumentation it was pretty nice to be able to see traces for the uh",
    "start": "2895359",
    "end": "2902079"
  },
  {
    "text": "attached to the routes we were making requests to so we also want to bring back the flask instrument so um we could",
    "start": "2902079",
    "end": "2910040"
  },
  {
    "text": "we could go through this line by line but I do promise you you can copy paste that we're bringing in some otel libraries um and we're bringing back the",
    "start": "2910040",
    "end": "2916839"
  },
  {
    "text": "flask instrumenter and again this is the the",
    "start": "2916839",
    "end": "2922119"
  },
  {
    "text": "loop we know we will build our image make sure that we get that tagged and in this case only change is we're going to",
    "start": "2922119",
    "end": "2929200"
  },
  {
    "text": "tag this as manual just so that you've got a version of the programmatic the automatic and the manual if you want to",
    "start": "2929200",
    "end": "2935839"
  },
  {
    "text": "do some comparisons later on uh you would need to remap some ports to make",
    "start": "2935839",
    "end": "2941359"
  },
  {
    "text": "that work but that's pretty doable so the other change we'll make is",
    "start": "2941359",
    "end": "2947119"
  },
  {
    "text": "over in appor pod. yl which is our podspec um",
    "start": "2947119",
    "end": "2953599"
  },
  {
    "text": "because we've changed our tag um for the image we built we need to make sure that our pod has that updated tag um and then",
    "start": "2953599",
    "end": "2961720"
  },
  {
    "text": "comment out that command block because we're manually instrumenting now and we don't need the auto instrumentation",
    "start": "2961720",
    "end": "2968359"
  },
  {
    "text": "agent to wrap our flask command um because we're going to be",
    "start": "2968359",
    "end": "2973920"
  },
  {
    "text": "running the OTP span exporter and relying on Jagger's native OTP ingestion",
    "start": "2973920",
    "end": "2979760"
  },
  {
    "text": "to cend spans over HTP so we don't need open Telemetry instrument anymore we",
    "start": "2979760",
    "end": "2984799"
  },
  {
    "text": "thank it for its service but we are moving on to manual instrumentation you should not have um",
    "start": "2984799",
    "end": "2992200"
  },
  {
    "text": "your pod running if it was running from later on go ahead and control contr C exit out and go ahead and play Cube",
    "start": "2992200",
    "end": "2999920"
  },
  {
    "text": "pod. and again we're back in our Loop where we're making requests to our application endpoints um I like to have",
    "start": "2999920",
    "end": "3006440"
  },
  {
    "text": "a variety of traces so maybe just make a couple to each of our endpoints uh SL doggo en roll dice and",
    "start": "3006440",
    "end": "3013680"
  },
  {
    "text": "this is where I had 500 so we started out with using Port 8,000 so go ahead",
    "start": "3013680",
    "end": "3020160"
  },
  {
    "text": "and swap that five to an eight I'm very sorry and we'll update this in gitlab tonight",
    "start": "3020160",
    "end": "3027440"
  },
  {
    "text": "so you'll know it's working if you can load up Jagger which again Local Host",
    "start": "3027920",
    "end": "3033240"
  },
  {
    "text": "16686 you don't have to select H otel from the menu um but Jer also instruments itself so you will see jger",
    "start": "3033240",
    "end": "3040680"
  },
  {
    "text": "query pop up as a service we really care about hello otel spans so maybe just go ahead and select hello otel as a service",
    "start": "3040680",
    "end": "3048240"
  },
  {
    "text": "um and confirm that you see traces that reflect the requests that you were making to the application and when that",
    "start": "3048240",
    "end": "3056119"
  },
  {
    "text": "is all said and done we are ready to add some manual",
    "start": "3056119",
    "end": "3061680"
  },
  {
    "text": "instrumentation we did this before but it's important this is people's first steps with tracing instrumentation where",
    "start": "3061680",
    "end": "3068040"
  },
  {
    "text": "they just need to add a key value pair span attribute um they're just metadata",
    "start": "3068040",
    "end": "3073839"
  },
  {
    "text": "to annotate a span with just more information that might help you the uh sort of API call is span do set",
    "start": "3073839",
    "end": "3080880"
  },
  {
    "text": "attribute key and value both strings in our case we'll go ahead and",
    "start": "3080880",
    "end": "3088599"
  },
  {
    "text": "because we're manually instrumenting um we'll declare a span we'll call Trace",
    "start": "3088599",
    "end": "3094200"
  },
  {
    "text": "we'll get the current span um that is attached to index and then we'll go",
    "start": "3094200",
    "end": "3099400"
  },
  {
    "text": "ahead and set the attribute again hits the string and then hits the value um",
    "start": "3099400",
    "end": "3105480"
  },
  {
    "text": "that comes from index very similar we'll stop um in our",
    "start": "3105480",
    "end": "3110960"
  },
  {
    "text": "case when we're stopping a pod it is actually podman play Cube um pod file",
    "start": "3110960",
    "end": "3116280"
  },
  {
    "text": "and then dash dash down then go ahead and rebuild your Docker file container",
    "start": "3116280",
    "end": "3122040"
  },
  {
    "text": "file and then run the Pod",
    "start": "3122040",
    "end": "3126559"
  },
  {
    "text": "again then go ahead and open up your browser make a couple requests to Local Host 8000 we know that we' started with",
    "start": "3128960",
    "end": "3135799"
  },
  {
    "text": "8 we'll stick with 8,000 and go ahead and make sure that when you find a trace for that slash",
    "start": "3135799",
    "end": "3143079"
  },
  {
    "text": "route that you click on the span Details page open up that span and make sure",
    "start": "3143079",
    "end": "3148880"
  },
  {
    "text": "that you see right at the top in Span tags hits and however many times you were refreshing that",
    "start": "3148880",
    "end": "3157119"
  },
  {
    "text": "page and this is where we think okay Class Auto instrumentation was",
    "start": "3157480",
    "end": "3164000"
  },
  {
    "text": "instrumenting at the route level but it didn't capture external requests or",
    "start": "3164000",
    "end": "3169280"
  },
  {
    "text": "custom work and our doggo endpoint we know calls out to the custom dog API um",
    "start": "3169280",
    "end": "3175520"
  },
  {
    "text": "we don't control that code we can't add instrumentation there um but that means",
    "start": "3175520",
    "end": "3181000"
  },
  {
    "text": "if we only have flask programmatic instrumentation and we are looking at traces for doggo we don't really know",
    "start": "3181000",
    "end": "3188119"
  },
  {
    "text": "how much time we spent calling out to the dog API and how much time we spent internally processing or pulling out the",
    "start": "3188119",
    "end": "3195200"
  },
  {
    "text": "dog breed it'd be super handy to know if it was a dog API problem or an us",
    "start": "3195200",
    "end": "3201160"
  },
  {
    "text": "problem if we needed to optimize this code path and we don't have to stop at",
    "start": "3201160",
    "end": "3206319"
  },
  {
    "text": "flas programmatic instrumentation Library let's see I got this out of",
    "start": "3206319",
    "end": "3212079"
  },
  {
    "text": "order well let's see what we get for doggo make a few requests go ahead open up Jagger look at",
    "start": "3212079",
    "end": "3219680"
  },
  {
    "text": "what we get for doggo out of the box and you'll see it is just a one span Trace",
    "start": "3219680",
    "end": "3225119"
  },
  {
    "text": "um which doesn't tell you a lot but it does tell you how long it took to fulfill this request to Doo and what",
    "start": "3225119",
    "end": "3232119"
  },
  {
    "text": "you'll notice if you look closely at the spam tags is you'll see a span. kind and",
    "start": "3232119",
    "end": "3237280"
  },
  {
    "text": "it says server which reflects that this span was generated from flask's point of",
    "start": "3237280",
    "end": "3242559"
  },
  {
    "text": "view our application and so again we don't know",
    "start": "3242559",
    "end": "3248040"
  },
  {
    "text": "how much time we spent waiting on the dog API maybe they had problems maybe they pushed out really buggy code that",
    "start": "3248040",
    "end": "3253599"
  },
  {
    "text": "took forever um all we would see from our end is longer and longer request",
    "start": "3253599",
    "end": "3259319"
  },
  {
    "text": "times or higher and higher latency and we wouldn't be able to figure out why our requests suddenly taking longer for",
    "start": "3259319",
    "end": "3266640"
  },
  {
    "text": "the doggo endpoint so we can instrument that go ahead and stop your pod and what",
    "start": "3266640",
    "end": "3273920"
  },
  {
    "text": "we want to do is a look at what else we're doing with flask and if you look at that import statement you'll see an",
    "start": "3273920",
    "end": "3280160"
  },
  {
    "text": "import requests um if you work with python you know that request is a pretty popular Library um and it might be",
    "start": "3280160",
    "end": "3287319"
  },
  {
    "text": "possible that that maintainer was super kind and already instrumented for us so",
    "start": "3287319",
    "end": "3293599"
  },
  {
    "text": "we could be in luck and all we we need to do is import a library just like we did with the flask instrumenter add a",
    "start": "3293599",
    "end": "3299839"
  },
  {
    "text": "few lines of config and then we'll get this extra visibility to our external HTTP requests actually all HTTP requests",
    "start": "3299839",
    "end": "3307799"
  },
  {
    "text": "but in this case we care about external um so in a new tab you can open up the",
    "start": "3307799",
    "end": "3313079"
  },
  {
    "text": "open Telemetry registry it's a good idea to get comfy opening up and exploring the registry just to see what's out",
    "start": "3313079",
    "end": "3319839"
  },
  {
    "text": "there you don't want to instrument more than you have to um you can filter down to",
    "start": "3319839",
    "end": "3325559"
  },
  {
    "text": "python you could filter even down to type instrumentation if you wanted type in requests or um you can click this",
    "start": "3325559",
    "end": "3332839"
  },
  {
    "text": "handy green link and it'll take you right to haha the top result which is",
    "start": "3332839",
    "end": "3338920"
  },
  {
    "text": "yes thank you um I believe it is Kenneth who runs uh the request he's already done the work for us so let's pull in",
    "start": "3338920",
    "end": "3347119"
  },
  {
    "text": "this library in order to do that this is where the Python 3 dependency comes into",
    "start": "3347119",
    "end": "3353240"
  },
  {
    "text": "play because we need to pip install this library and make some code changes",
    "start": "3353240",
    "end": "3358520"
  },
  {
    "text": "locally python uses this concept of virtual environments uh so that you can isolate",
    "start": "3358520",
    "end": "3365119"
  },
  {
    "text": "system dependencies for another so you can have multiple versions of a python library but they're all kind of isolated",
    "start": "3365119",
    "end": "3371079"
  },
  {
    "text": "in different directories um the way we create a virtual environment python 3-m you can call it whatever you want",
    "start": "3371079",
    "end": "3378400"
  },
  {
    "text": "it's easy if you if you stick with a copy paste here and then go ahead and",
    "start": "3378400",
    "end": "3384160"
  },
  {
    "text": "activate that virtual environment you know you will be successful if you run a pip Das capital",
    "start": "3384160",
    "end": "3391920"
  },
  {
    "text": "V and you'll get this nice little long do not super nice long path and as long",
    "start": "3391920",
    "end": "3398559"
  },
  {
    "text": "as ven is in there you know that you're activated and good so at this point now we can do the",
    "start": "3398559",
    "end": "3406160"
  },
  {
    "text": "work we've seen that there's this request Library out there we want to bring that into our application we're",
    "start": "3406160",
    "end": "3411520"
  },
  {
    "text": "going to pip install open Telemetry instrumentation requests requests is that name of that",
    "start": "3411520",
    "end": "3417640"
  },
  {
    "text": "Library um python uses a package management uh requirements.txt to just",
    "start": "3417640",
    "end": "3425039"
  },
  {
    "text": "track what we're installing so you can go ahead and pip freeze type that to requirements.txt to save your",
    "start": "3425039",
    "end": "3432039"
  },
  {
    "text": "work um and let's go ahead and configure this add an import statement near the",
    "start": "3432039",
    "end": "3438240"
  },
  {
    "text": "top for um importing our library request instrument namespace just the same as FL",
    "start": "3438240",
    "end": "3445000"
  },
  {
    "text": "instrument and then right under our flask instrument instrument app go ahead and do request instrument. instrument um",
    "start": "3445000",
    "end": "3453400"
  },
  {
    "text": "add a sufficient size or more complex application you may just want to pull that out into a config file but we're",
    "start": "3453400",
    "end": "3459640"
  },
  {
    "text": "just working locally today and keeping it simple again we want to rebuild our",
    "start": "3459640",
    "end": "3465240"
  },
  {
    "text": "image we'll still keep that manual tag and we'll go ahead and run that",
    "start": "3465240",
    "end": "3472038"
  },
  {
    "text": "pod great we really only did work um we were really curious about doggo",
    "start": "3472119",
    "end": "3477839"
  },
  {
    "text": "endpoints so you can make requests to everything else but make sure you make a few requests to doggo so that we can",
    "start": "3477839",
    "end": "3484720"
  },
  {
    "text": "check out what we got by adding this new library you can go ahead and search the",
    "start": "3484720",
    "end": "3491559"
  },
  {
    "text": "hello otel service and even drop down to the particular operation for/ doggo and",
    "start": "3491559",
    "end": "3497240"
  },
  {
    "text": "what we should see is that the span count has increased from 1 to two so",
    "start": "3497240",
    "end": "3502960"
  },
  {
    "text": "let's take a look at what we got our Trace waterfall should show that",
    "start": "3502960",
    "end": "3509319"
  },
  {
    "text": "first root span that overall um how long it took us to respond to that request to",
    "start": "3509319",
    "end": "3514400"
  },
  {
    "text": "doggo and we should see a child span underneath for an HTTP get request out",
    "start": "3514400",
    "end": "3520240"
  },
  {
    "text": "to the dog API if you look at the span. kind it is not server in this case in",
    "start": "3520240",
    "end": "3527160"
  },
  {
    "text": "this case it is client because we are the client making an external request that's one way that you can sort of sort",
    "start": "3527160",
    "end": "3533640"
  },
  {
    "text": "through um what side of the request that you're on so all we had to do is bring",
    "start": "3533640",
    "end": "3539280"
  },
  {
    "text": "in a library add a little bit of configuration we did not have to manually instrument the doggo API call",
    "start": "3539280",
    "end": "3545960"
  },
  {
    "text": "and we kind of got this out of the box so well yes we're manually bringing things in we're still benefiting from",
    "start": "3545960",
    "end": "3553200"
  },
  {
    "text": "the programmatic auto programmatic instrumentation we'll go ahead and stop",
    "start": "3553200",
    "end": "3559240"
  },
  {
    "text": "the Pod and now we'll kind of mix in some other manual instrumentation so",
    "start": "3559240",
    "end": "3564760"
  },
  {
    "text": "there's a little bit of work um done in this doggo request to pull out the dog breed so that as you're loading it up",
    "start": "3564760",
    "end": "3571640"
  },
  {
    "text": "you know what kind of dog you're looking at because maybe you're a cat person you don't know it's helpful to have that info you could imagine that was maybe a",
    "start": "3571640",
    "end": "3579240"
  },
  {
    "text": "computationally expensive uh method that we needed to run it could maybe be",
    "start": "3579240",
    "end": "3584520"
  },
  {
    "text": "running some crazy reject or something like that and it might be helpful if we tracked our internal work in addition to",
    "start": "3584520",
    "end": "3592039"
  },
  {
    "text": "the dog API maybe we saw that latency was up to Dogo requests we've confirmed",
    "start": "3592039",
    "end": "3597920"
  },
  {
    "text": "that the dog API is still run in super performant and now we got to look internally what is causing that latency",
    "start": "3597920",
    "end": "3604200"
  },
  {
    "text": "well we need to add some more instrumentation to track this internal work this is where we're going to create",
    "start": "3604200",
    "end": "3611000"
  },
  {
    "text": "a new span so far we've been relying on spans that have been kind of created from these programmatic libraries and",
    "start": "3611000",
    "end": "3617160"
  },
  {
    "text": "now we are creating a new span that these libraries could not have known about this is where we're manually",
    "start": "3617160",
    "end": "3623160"
  },
  {
    "text": "instrumenting in this it is the get breed method so we want to make sure",
    "start": "3623160",
    "end": "3628480"
  },
  {
    "text": "we're not just creating the span and sending it into the ether we want the span to be tied to traces that are",
    "start": "3628480",
    "end": "3634880"
  },
  {
    "text": "related to in this request path so that means when we create this new span it",
    "start": "3634880",
    "end": "3640880"
  },
  {
    "text": "needs to be a child span related to that first overall doggo span when we look at",
    "start": "3640880",
    "end": "3647400"
  },
  {
    "text": "the otel API it is Tracer do start as current span to create a new Span in the",
    "start": "3647400",
    "end": "3654760"
  },
  {
    "text": "current Trace context um you can attach or unattach it we will be",
    "start": "3654760",
    "end": "3660200"
  },
  {
    "text": "attaching so all of those words to say open up app.py it is a lot easier to",
    "start": "3660200",
    "end": "3666599"
  },
  {
    "text": "create a nested span than to do that explaining head down to the fetch dog method find the doggo route go to fetch",
    "start": "3666599",
    "end": "3674480"
  },
  {
    "text": "dog and add that line with Tracer Stardust current span um I just called",
    "start": "3674480",
    "end": "3679920"
  },
  {
    "text": "it the method name again you can call it whatever you want um and then we'll call it as",
    "start": "3679920",
    "end": "3686359"
  },
  {
    "text": "child and again we will rebuild our image we",
    "start": "3686359",
    "end": "3692559"
  },
  {
    "text": "will launch a pod um make sure that you had the Pod stopped and generate some",
    "start": "3692559",
    "end": "3698280"
  },
  {
    "text": "traces so make a few requests to the Dogo endpoint and let's see what we got",
    "start": "3698280",
    "end": "3703839"
  },
  {
    "text": "what we're expecting to see is going from a trace with two spans to a trace with three spans one overall tracking",
    "start": "3703839",
    "end": "3711640"
  },
  {
    "text": "our request to doggo one for our external call to the dog API and then",
    "start": "3711640",
    "end": "3716880"
  },
  {
    "text": "finally that internal work for get breed it is not computationally expensive in",
    "start": "3716880",
    "end": "3722039"
  },
  {
    "text": "our case but um it would be helpful if we knew internal work versus external work so go ahead after you've made some",
    "start": "3722039",
    "end": "3729680"
  },
  {
    "text": "requests open up Jager UI this should be old hat by now and search for traces for",
    "start": "3729680",
    "end": "3734920"
  },
  {
    "text": "the operation doggo we should if everything goes according to plan see three spans um in",
    "start": "3734920",
    "end": "3743240"
  },
  {
    "text": "these traces and go ahead and click on one of those to get the detail view so",
    "start": "3743240",
    "end": "3749200"
  },
  {
    "text": "we get the doggo overall What's called the root span we have that get request and now that third span at the bottom is",
    "start": "3749200",
    "end": "3757200"
  },
  {
    "text": "Operation um for get breed so now now that we've mixed programmatic and this",
    "start": "3757200",
    "end": "3763039"
  },
  {
    "text": "manual instrumentation we could step back step away from our computer and know if all of a sudden we get paged",
    "start": "3763039",
    "end": "3770359"
  },
  {
    "text": "because it's taking super long to fetch these dog picks because they're really really important to your business um you",
    "start": "3770359",
    "end": "3775960"
  },
  {
    "text": "have a sense of was it me or was it my dependency and it took a mix of",
    "start": "3775960",
    "end": "3781079"
  },
  {
    "text": "programmatic instrumentation and adding that manual span which was not a lot of work but did give us a lot more",
    "start": "3781079",
    "end": "3787839"
  },
  {
    "text": "visibility so when you're instrumenting there's always this level of detail what",
    "start": "3787839",
    "end": "3793079"
  },
  {
    "text": "would you need to answer questions like that um when you're on call or even when",
    "start": "3793079",
    "end": "3798880"
  },
  {
    "text": "you're deploying changes how do you know that your changes were effective you should think about when it makes sense to add add in that manual span or",
    "start": "3798880",
    "end": "3808319"
  },
  {
    "text": "span uh so again you can visualize as a trace graph um the waterfall or you can",
    "start": "3808319",
    "end": "3814240"
  },
  {
    "text": "go ahead now that we've got more spans it's more of an interesting Trace we can hop over to the trace graph and see that",
    "start": "3814240",
    "end": "3821480"
  },
  {
    "text": "while it is simple with three spans um this is what the kind of operation map",
    "start": "3821480",
    "end": "3827160"
  },
  {
    "text": "looks like um doggo is starting our request and then it calls out to the API",
    "start": "3827160",
    "end": "3833000"
  },
  {
    "text": "and does our little get breed work um also if you wanted to visualize",
    "start": "3833000",
    "end": "3838240"
  },
  {
    "text": "it by time like what was in the critical path what was taking the longest click on the t uh over the right hand vertical",
    "start": "3838240",
    "end": "3845520"
  },
  {
    "text": "Bar menu and that is going to highlight for it's very helpful for very complex",
    "start": "3845520",
    "end": "3850799"
  },
  {
    "text": "request chains um the spans that are in the critical path which means it",
    "start": "3850799",
    "end": "3856279"
  },
  {
    "text": "directly contributes to the slowest path um that you have to if you want to do optimizing work you need to look at the",
    "start": "3856279",
    "end": "3862400"
  },
  {
    "text": "critical path so if you were working on doing some perf improvements go ahead and trace it go ahead and flip on this",
    "start": "3862400",
    "end": "3869839"
  },
  {
    "text": "color by time and see where you need to start honing in to do that work um and again like I said we've been",
    "start": "3869839",
    "end": "3877079"
  },
  {
    "text": "using some toy apps uh but here is an example with 160 spans looking at that",
    "start": "3877079",
    "end": "3882960"
  },
  {
    "text": "Trace graph you can see how powerful this bird's eye view is and imagine if we had flipped on um by time to see",
    "start": "3882960",
    "end": "3891240"
  },
  {
    "text": "where your path of optimization should be so this uh while we're focusing on",
    "start": "3891240",
    "end": "3896440"
  },
  {
    "text": "learning instrumentation today know that this stuff gets more and more helpful for the more complex uh your distributed",
    "start": "3896440",
    "end": "3902440"
  },
  {
    "text": "system that you're instrumenting so those are creating a nested span and creating a span",
    "start": "3902440",
    "end": "3909240"
  },
  {
    "text": "attribute there is this concept called span events very confusingly in the",
    "start": "3909240",
    "end": "3914440"
  },
  {
    "text": "jerger UI it will show up as a span log I do not know why there are plenty of otel maintainers here that can have that",
    "start": "3914440",
    "end": "3921520"
  },
  {
    "text": "conversation with you but let's go ahead and add a ban event it is basically a structured log with a name and one or",
    "start": "3921520",
    "end": "3929359"
  },
  {
    "text": "more attributes and a timestamp so that's kind of why we want to call it a log because it's a time stamp with some",
    "start": "3929359",
    "end": "3935440"
  },
  {
    "text": "textual metadata we look at the API it's pretty simple span. add event whatever",
    "start": "3935440",
    "end": "3941880"
  },
  {
    "text": "you want to call it page click um page load whatever and then your attributes",
    "start": "3941880",
    "end": "3948520"
  },
  {
    "text": "um so let's just look at the r dice um end point so go ahead to the roll dice",
    "start": "3948520",
    "end": "3955039"
  },
  {
    "text": "method go ahead and get the current span we don't need to create a new span",
    "start": "3955039",
    "end": "3961160"
  },
  {
    "text": "because we know that flask Auto flask programmatic instrumentation is already",
    "start": "3961160",
    "end": "3966480"
  },
  {
    "text": "instrumented this route but so we just need to get a hold of the span that's already there already going to be",
    "start": "3966480",
    "end": "3972559"
  },
  {
    "text": "created we roll our Dice and we get some result that we maybe care about and so",
    "start": "3972559",
    "end": "3977680"
  },
  {
    "text": "go ahead and spam. addevent roll dice and maybe it's helpful for for",
    "start": "3977680",
    "end": "3984240"
  },
  {
    "text": "troubleshooting the future to know what the result of that role is so the attributes is a map of Key value pairs",
    "start": "3984240",
    "end": "3991359"
  },
  {
    "text": "in this case we'll call it results and pipe in um whatever the result of that dice Ru",
    "start": "3991359",
    "end": "3997319"
  },
  {
    "text": "was so to see this again very similar stop your stop your pod rebuild your",
    "start": "3997319",
    "end": "4003960"
  },
  {
    "text": "image go ahead and run the new pod send some traces over to the r dice endpoint",
    "start": "4003960",
    "end": "4011400"
  },
  {
    "text": "and let's verify what this looks like in Jagger what we're going to see when we",
    "start": "4011400",
    "end": "4017000"
  },
  {
    "text": "click in to our Trace view is Boom you see this little thing that",
    "start": "4017000",
    "end": "4022880"
  },
  {
    "text": "says logs all of a sudden we've got this span event that shows up as logs um with",
    "start": "4022880",
    "end": "4028760"
  },
  {
    "text": "a Tim stamp that time stamp is relative to the start of the trace itself um just",
    "start": "4028760",
    "end": "4035319"
  },
  {
    "text": "important to know uh you can go ahead and click down and see whatever our",
    "start": "4035319",
    "end": "4040640"
  },
  {
    "text": "result was in this case it was five you could add a lot more log here maybe you could tie it into the existing logs that",
    "start": "4040640",
    "end": "4046520"
  },
  {
    "text": "your app has um but span events are a really helpful way to enrich your",
    "start": "4046520",
    "end": "4052400"
  },
  {
    "text": "traces we can go ahead and stop this pod and there's just a couple more attributes we'll get to one of which is",
    "start": "4052400",
    "end": "4059960"
  },
  {
    "text": "span status a lot of times when you're looking at traces um you will the most important field that I relied on was",
    "start": "4059960",
    "end": "4067240"
  },
  {
    "text": "error equals true um that would mean for a given Trace one of the spans somewhere",
    "start": "4067240",
    "end": "4072839"
  },
  {
    "text": "in there maybe mult multiple experienced an error and that's probably something you want to look at and compare to a",
    "start": "4072839",
    "end": "4078960"
  },
  {
    "text": "healthy trace or a green Trace um but maybe you're manually instrumenting and",
    "start": "4078960",
    "end": "4084119"
  },
  {
    "text": "maybe you need to manually change a span status so maybe if we rolled a dice and",
    "start": "4084119",
    "end": "4091599"
  },
  {
    "text": "a five meant something had gone terribly wrong there's no way that the programmatic instrumentation would know",
    "start": "4091599",
    "end": "4097880"
  },
  {
    "text": "that so you would need to go ahead and manually set that span status there's three unset",
    "start": "4097880",
    "end": "4104400"
  },
  {
    "text": "okay or error and when a span status is set to error that is there's a lot of",
    "start": "4104400",
    "end": "4110040"
  },
  {
    "text": "visual cues that pop up both in jger and any vendor that you're using um span status error is very very",
    "start": "4110040",
    "end": "4117238"
  },
  {
    "text": "meaningful uh in our case the API is just get the current span set the status",
    "start": "4117239",
    "end": "4122679"
  },
  {
    "text": "either unset okay or error and if you want to add a little description of what's going on um that would be very",
    "start": "4122679",
    "end": "4128318"
  },
  {
    "text": "helpful to Future you so we will simulate um",
    "start": "4128319",
    "end": "4134318"
  },
  {
    "text": "having an issue with uh the doggo API so open up random petp pick.",
    "start": "4134319",
    "end": "4141238"
  },
  {
    "text": "HTML and update our template to include a search bar plenty of things can go wrong when you give folks um an open",
    "start": "4141239",
    "end": "4148359"
  },
  {
    "text": "search bar so there is a chance that whatever our user is searching for is not actually a",
    "start": "4148359",
    "end": "4155080"
  },
  {
    "text": "dog breed that the dog API has and that's an error or case that we want to handle um or the user could totally put",
    "start": "4155080",
    "end": "4162278"
  },
  {
    "text": "in nonsense or you know many many things so we want to pass to the template any",
    "start": "4162279",
    "end": "4167679"
  },
  {
    "text": "error messages that we get resulting from validation we do on our end um",
    "start": "4167679",
    "end": "4173880"
  },
  {
    "text": "great so we're going to go ahead and import a breeds list that I've copied over from the dog API and then we're",
    "start": "4173880",
    "end": "4181040"
  },
  {
    "text": "going to add a couple things to our flask import statement",
    "start": "4181040",
    "end": "4187080"
  },
  {
    "text": "there now we're going to head back to app.py find our doggo route and update",
    "start": "4187600",
    "end": "4192679"
  },
  {
    "text": "the fetch dog method so now we need to handle post requests from the search bar",
    "start": "4192679",
    "end": "4197960"
  },
  {
    "text": "form we need to validate the input and we need to pass any error messages that",
    "start": "4197960",
    "end": "4203080"
  },
  {
    "text": "we get to the template so that we show the user what you're searching for cannot be found here and we should get a",
    "start": "4203080",
    "end": "4209880"
  },
  {
    "text": "little message to ourselves as we're looking at this in the future hm this is what the this is what the users are",
    "start": "4209880",
    "end": "4216320"
  },
  {
    "text": "searching for and it didn't go according to",
    "start": "4216320",
    "end": "4220880"
  },
  {
    "text": "plan so you can go ahead and kind of copy paste this block and we'll do our",
    "start": "4222640",
    "end": "4228560"
  },
  {
    "text": "stop rebuild relaunch generate traffic open up Jagger so what you should see um",
    "start": "4228560",
    "end": "4235400"
  },
  {
    "text": "when you load up the doggo endpoint is this very beautiful search bar um and",
    "start": "4235400",
    "end": "4240480"
  },
  {
    "text": "you can go ahead and start searching for things um let's start with a valid",
    "start": "4240480",
    "end": "4245600"
  },
  {
    "text": "search though um husky Greyhound those are uh definitely in the dog API and you",
    "start": "4245600",
    "end": "4251760"
  },
  {
    "text": "should get returned um one of those adorable breeds and now we want to test an",
    "start": "4251760",
    "end": "4257840"
  },
  {
    "text": "invalid search so like MAA which is a type of parrot or Tabby which is a type",
    "start": "4257840",
    "end": "4262880"
  },
  {
    "text": "of cat or your name um go ahead and throw that in there just something that will throw an",
    "start": "4262880",
    "end": "4268800"
  },
  {
    "text": "error and what we should see is that we've got this very nice error message",
    "start": "4268800",
    "end": "4274199"
  },
  {
    "text": "for the user uh-oh no breed found but what helps us uh as The",
    "start": "4274199",
    "end": "4280760"
  },
  {
    "text": "Operators understand what happened here go go ahead and open up the Jer UI search for traces for doggo um and",
    "start": "4280760",
    "end": "4288400"
  },
  {
    "text": "you'll see that there's no traces with uh marked errors which is kind of interesting because we know that we just",
    "start": "4288400",
    "end": "4294880"
  },
  {
    "text": "had to handle an invalid search case um find your Trace with the invalid search",
    "start": "4294880",
    "end": "4300159"
  },
  {
    "text": "and it is the one that'll only have one span um or you can kind of just follow",
    "start": "4300159",
    "end": "4305199"
  },
  {
    "text": "along up here the reason it only has one span is because uh it was fulfilling the",
    "start": "4305199",
    "end": "4311199"
  },
  {
    "text": "post request the invalid search ter term failed our validation logic which prevented us from even calling the dog",
    "start": "4311199",
    "end": "4317760"
  },
  {
    "text": "API um because that would have just kicked back um you know whatever the airor message was like the 403 not found",
    "start": "4317760",
    "end": "4324760"
  },
  {
    "text": "um maybe it's 304 it dog API would have given us an invalid search anyway and it",
    "start": "4324760",
    "end": "4329920"
  },
  {
    "text": "would have given us a failed request and so we just already dodged that by moving the validation in our app um we passed",
    "start": "4329920",
    "end": "4336480"
  },
  {
    "text": "our error message to the user and we did successfully respond to that invalid search request to doggo but we know that",
    "start": "4336480",
    "end": "4344239"
  },
  {
    "text": "there was kind of an error along the way or that things didn't go as planned um",
    "start": "4344239",
    "end": "4349679"
  },
  {
    "text": "we know like in my case I was searching for Tabby but even when we look at the span details we don't really see that",
    "start": "4349679",
    "end": "4356199"
  },
  {
    "text": "something went ay so we can instead set a span status",
    "start": "4356199",
    "end": "4362639"
  },
  {
    "text": "because even though we successfully responded um it still may be important",
    "start": "4362639",
    "end": "4368080"
  },
  {
    "text": "for us to track what users are putting in or what users um are ending up on this error page uh it will not make the",
    "start": "4368080",
    "end": "4375920"
  },
  {
    "text": "entire Trace failed if we set the span status um but it will be helpful for us as we're",
    "start": "4375920",
    "end": "4381440"
  },
  {
    "text": "troubleshooting so we'll go ahead and pop back into the doggo route we'll update our fetch dog method and we'll",
    "start": "4381440",
    "end": "4388199"
  },
  {
    "text": "create a new nested span for these post requests handling that form search input",
    "start": "4388199",
    "end": "4393639"
  },
  {
    "text": "and for good measure let's just see what users are searching by adding an attribute for breed onto that span this",
    "start": "4393639",
    "end": "4400880"
  },
  {
    "text": "will help us very much in the future debug and understand um what the source of these errors",
    "start": "4400880",
    "end": "4408320"
  },
  {
    "text": "are and then we will update our error handling code and this is where we are going to manually set our status to",
    "start": "4408320",
    "end": "4415639"
  },
  {
    "text": "error um we also might want to record any exceptions that pop up within the context of that span so it'll be a child",
    "start": "4415639",
    "end": "4424080"
  },
  {
    "text": "set status and child again is um what we're calling our new span that we",
    "start": "4424080",
    "end": "4430239"
  },
  {
    "text": "created up here we are going to set status status code error and we're going",
    "start": "4430239",
    "end": "4435280"
  },
  {
    "text": "to record the exception and this is in our try catch",
    "start": "4435280",
    "end": "4440679"
  },
  {
    "text": "block again bring down your pod rebuild your image bring the Pod back up send",
    "start": "4440679",
    "end": "4447120"
  },
  {
    "text": "some requests to doggo make sure you have a healthy mix of valid and invalid",
    "start": "4447120",
    "end": "4452199"
  },
  {
    "text": "Search terms so uh Doberman Akita husky Greyhound valid Maka Tabby Paige invalid",
    "start": "4452199",
    "end": "4460000"
  },
  {
    "text": "um Calico Fox then let's load up Jagger and do a little bit of comparison so a going",
    "start": "4460000",
    "end": "4467920"
  },
  {
    "text": "ahead to look for doggo traces verify that there is at least one Trace um that",
    "start": "4467920",
    "end": "4474159"
  },
  {
    "text": "has this that was successful but has this little red error box that is what",
    "start": "4474159",
    "end": "4479679"
  },
  {
    "text": "we did by adding setting that span status to error and you'll notice because we still technically did a",
    "start": "4479679",
    "end": "4486760"
  },
  {
    "text": "successful response back to the user we did load um that beautiful user facing error message we don't want to say this",
    "start": "4486760",
    "end": "4493440"
  },
  {
    "text": "whole Trace failed this whole request to doggo failed because it didn't but we do want to know something didn't quite go",
    "start": "4493440",
    "end": "4499440"
  },
  {
    "text": "right and let's take a look at what that was um going down into the search breed",
    "start": "4499440",
    "end": "4505480"
  },
  {
    "text": "span since we recorded the airror message you can see uh we did some custom error message no breed found",
    "start": "4505480",
    "end": "4512760"
  },
  {
    "text": "you'd be like okay that's fine someone just didn't know what they were searching for um and our breed made it",
    "start": "4512760",
    "end": "4518880"
  },
  {
    "text": "as a span attribute that's all super helpful stuff when you're investigating and troubleshooting to have that airor",
    "start": "4518880",
    "end": "4525520"
  },
  {
    "text": "message not locked away in logs perhaps in another system but right there in your Trace as you're looking at",
    "start": "4525520",
    "end": "4532280"
  },
  {
    "text": "things so oh my goodness we've completed our Labs we've looked at Auto",
    "start": "4532280",
    "end": "4537520"
  },
  {
    "text": "instrumentation we've looked at programmatic instrumentation and we've hopefully seen the value of manually",
    "start": "4537520",
    "end": "4543760"
  },
  {
    "text": "instrumenting and that it you do not need to manually instrument everything but instead you want to have a nice",
    "start": "4543760",
    "end": "4548800"
  },
  {
    "text": "healthy mix of programmatic and manual um instrumentation we've looked at all",
    "start": "4548800",
    "end": "4554360"
  },
  {
    "text": "the different ways you can visualize traces how you can add attributes record errors and most importantly Self Serve",
    "start": "4554360",
    "end": "4561480"
  },
  {
    "text": "and look for the libraries you care about in the open Telemetry registry we will not be taking distributed tracing",
    "start": "4561480",
    "end": "4568239"
  },
  {
    "text": "with otel and production that is a lab I will be working on uh later on keep an",
    "start": "4568239",
    "end": "4573520"
  },
  {
    "text": "eye on this repo um I do want to help folks move otel into prod but the focus",
    "start": "4573520",
    "end": "4578800"
  },
  {
    "text": "of this Workshop was just getting your feet wet with tracing learning a little bit more about banss and what you can do",
    "start": "4578800",
    "end": "4584719"
  },
  {
    "text": "today to instrument some sample apps or applications you're running at work we've still got this room for about 13",
    "start": "4584719",
    "end": "4591760"
  },
  {
    "text": "and a half minutes so I'm very happy if you want to raise your hand and ask a question or kind of talk shop or if you",
    "start": "4591760",
    "end": "4598320"
  },
  {
    "text": "ran into issues or have suggestions um I'll be kind of walking around but I",
    "start": "4598320",
    "end": "4603800"
  },
  {
    "text": "very much appreciate everyone for coming to the workshop spending your end of your Wednesday hanging out and learning",
    "start": "4603800",
    "end": "4610000"
  },
  {
    "text": "more about Open Telemetry so thank you very much",
    "start": "4610000",
    "end": "4615080"
  },
  {
    "text": "sh",
    "start": "4615360",
    "end": "4618360"
  }
]