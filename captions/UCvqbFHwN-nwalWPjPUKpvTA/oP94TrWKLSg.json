[
  {
    "text": "hey I'm Eric Gregory and I'm a technical",
    "start": "560",
    "end": "2760"
  },
  {
    "text": "content writer at marantis today I'm",
    "start": "2760",
    "end": "4960"
  },
  {
    "text": "talking hopefully quickly enough about",
    "start": "4960",
    "end": "6879"
  },
  {
    "text": "reducing container image size the talk",
    "start": "6879",
    "end": "8639"
  },
  {
    "text": "is focused on cloud native beginners but",
    "start": "8639",
    "end": "10360"
  },
  {
    "text": "by the end we'll get into some more",
    "start": "10360",
    "end": "11960"
  },
  {
    "text": "advanced approaches to Tiny",
    "start": "11960",
    "end": "14080"
  },
  {
    "text": "workloads so first why does this matter",
    "start": "14080",
    "end": "17279"
  },
  {
    "text": "smaller images reduce time to build",
    "start": "17279",
    "end": "19000"
  },
  {
    "text": "important for CI and time to pull which",
    "start": "19000",
    "end": "21000"
  },
  {
    "text": "is important when spinning up a new node",
    "start": "21000",
    "end": "22439"
  },
  {
    "text": "in a production environment improved",
    "start": "22439",
    "end": "24480"
  },
  {
    "text": "performance and utilization Drive",
    "start": "24480",
    "end": "25720"
  },
  {
    "text": "sustainability and performance",
    "start": "25720",
    "end": "26960"
  },
  {
    "text": "enhancements are particularly impactful",
    "start": "26960",
    "end": "28439"
  },
  {
    "text": "on power efficient Hardware finally",
    "start": "28439",
    "end": "30920"
  },
  {
    "text": "minimal base images reduce attack",
    "start": "30920",
    "end": "32398"
  },
  {
    "text": "surface and defends defend against",
    "start": "32399",
    "end": "34040"
  },
  {
    "text": "privilege escalation",
    "start": "34040",
    "end": "36280"
  },
  {
    "text": "attacks so here we've got four",
    "start": "36280",
    "end": "38360"
  },
  {
    "text": "approaches to a simple HTTP server",
    "start": "38360",
    "end": "40200"
  },
  {
    "text": "written in go first the default Debian",
    "start": "40200",
    "end": "42440"
  },
  {
    "text": "based go 1.21 image with single stage",
    "start": "42440",
    "end": "44879"
  },
  {
    "text": "build this clocks in at 301 megabytes",
    "start": "44879",
    "end": "48000"
  },
  {
    "text": "next a single stage build on the Alpine",
    "start": "48000",
    "end": "49760"
  },
  {
    "text": "based go image if you're not sure what",
    "start": "49760",
    "end": "51480"
  },
  {
    "text": "that means I'll explain in a moment but",
    "start": "51480",
    "end": "52840"
  },
  {
    "text": "this takes us down to 85 megabytes third",
    "start": "52840",
    "end": "55440"
  },
  {
    "text": "is a statically linked binary wrapped in",
    "start": "55440",
    "end": "57039"
  },
  {
    "text": "the scratch base image this gets down to",
    "start": "57039",
    "end": "58719"
  },
  {
    "text": "4 megabytes last is a web assembly",
    "start": "58719",
    "end": "61160"
  },
  {
    "text": "module that can run on kubernetes at way",
    "start": "61160",
    "end": "63000"
  },
  {
    "text": "under a megabyte we'll come back to that",
    "start": "63000",
    "end": "64518"
  },
  {
    "text": "at the",
    "start": "64519",
    "end": "66360"
  },
  {
    "text": "end so to understand the differences",
    "start": "66360",
    "end": "68640"
  },
  {
    "text": "let's review the structure of a",
    "start": "68640",
    "end": "69720"
  },
  {
    "text": "container at the bottom is the OS kernel",
    "start": "69720",
    "end": "72320"
  },
  {
    "text": "which is shared with the host machine",
    "start": "72320",
    "end": "73680"
  },
  {
    "text": "everything above this point is part of",
    "start": "73680",
    "end": "75159"
  },
  {
    "text": "our image that's going to include our",
    "start": "75159",
    "end": "76840"
  },
  {
    "text": "application but also language run times",
    "start": "76840",
    "end": "78680"
  },
  {
    "text": "dependencies libraries Etc this middle",
    "start": "78680",
    "end": "81560"
  },
  {
    "text": "layer can really add up now our goal",
    "start": "81560",
    "end": "83799"
  },
  {
    "text": "isn't to get the smallest possible image",
    "start": "83799",
    "end": "85520"
  },
  {
    "text": "at any cost but to cultivate standard",
    "start": "85520",
    "end": "87479"
  },
  {
    "text": "repeatable practices that tend to give",
    "start": "87479",
    "end": "88880"
  },
  {
    "text": "us smaller images while respecting other",
    "start": "88880",
    "end": "91000"
  },
  {
    "text": "priorities like time and maintainability",
    "start": "91000",
    "end": "93360"
  },
  {
    "text": "so as always context is",
    "start": "93360",
    "end": "95520"
  },
  {
    "text": "everything here's the docker file that",
    "start": "95520",
    "end": "97479"
  },
  {
    "text": "gave us our Debian based image we're",
    "start": "97479",
    "end": "99360"
  },
  {
    "text": "building and running from the same base",
    "start": "99360",
    "end": "101159"
  },
  {
    "text": "image and since we're trying to do two",
    "start": "101159",
    "end": "102880"
  },
  {
    "text": "jobs with one tool we need a bunch of",
    "start": "102880",
    "end": "104280"
  },
  {
    "text": "build time dependencies that we don't",
    "start": "104280",
    "end": "105560"
  },
  {
    "text": "need at runtime we've also got a shell",
    "start": "105560",
    "end": "107520"
  },
  {
    "text": "curl apt and so",
    "start": "107520",
    "end": "110520"
  },
  {
    "text": "on as a rule we don't want to include",
    "start": "110600",
    "end": "112960"
  },
  {
    "text": "stuff we don't need the goang project",
    "start": "112960",
    "end": "114799"
  },
  {
    "text": "has made this easy for us with a goang",
    "start": "114799",
    "end": "116280"
  },
  {
    "text": "image built on a Slimmer base image",
    "start": "116280",
    "end": "117840"
  },
  {
    "text": "called Alpine Alpine Linux is designed",
    "start": "117840",
    "end": "120119"
  },
  {
    "text": "to be a slim foundation for environments",
    "start": "120119",
    "end": "121880"
  },
  {
    "text": "like containers and it does so by",
    "start": "121880",
    "end": "123280"
  },
  {
    "text": "clearing out everything that doesn't",
    "start": "123280",
    "end": "124479"
  },
  {
    "text": "spark joy and leaving a package manager",
    "start": "124479",
    "end": "126719"
  },
  {
    "text": "so you can download the stuff you really",
    "start": "126719",
    "end": "128360"
  },
  {
    "text": "need the only thing I've changed in this",
    "start": "128360",
    "end": "130399"
  },
  {
    "text": "Docker file is the base image we can",
    "start": "130399",
    "end": "132000"
  },
  {
    "text": "swap out our base image with goang",
    "start": "132000",
    "end": "133480"
  },
  {
    "text": "alpine and reduce the size by more than",
    "start": "133480",
    "end": "135080"
  },
  {
    "text": "2/3 just that simple step this image",
    "start": "135080",
    "end": "137920"
  },
  {
    "text": "uses muscle Lipsy rather than and",
    "start": "137920",
    "end": "139920"
  },
  {
    "text": "that can be an issue in some cases but",
    "start": "139920",
    "end": "141440"
  },
  {
    "text": "that's a good reminder that we need to",
    "start": "141440",
    "end": "142760"
  },
  {
    "text": "be thinking about what we actually need",
    "start": "142760",
    "end": "144160"
  },
  {
    "text": "in a base",
    "start": "144160",
    "end": "146680"
  },
  {
    "text": "image so here we have the start of a",
    "start": "147040",
    "end": "150040"
  },
  {
    "text": "good practice prefer the most Bimal",
    "start": "150040",
    "end": "151920"
  },
  {
    "text": "minimal base image that fits your",
    "start": "151920",
    "end": "153480"
  },
  {
    "text": "requirements sometimes you'll need lots",
    "start": "153480",
    "end": "155160"
  },
  {
    "text": "of tools and dependencies especially",
    "start": "155160",
    "end": "156519"
  },
  {
    "text": "when containerizing existing",
    "start": "156519",
    "end": "157760"
  },
  {
    "text": "applications but try to find the minimum",
    "start": "157760",
    "end": "159760"
  },
  {
    "text": "that works where possible try to use",
    "start": "159760",
    "end": "161480"
  },
  {
    "text": "consistent base image disos across",
    "start": "161480",
    "end": "163040"
  },
  {
    "text": "different applications so you can have",
    "start": "163040",
    "end": "164319"
  },
  {
    "text": "consistent bass layers across your",
    "start": "164319",
    "end": "165920"
  },
  {
    "text": "images when we use the Alpine base image",
    "start": "165920",
    "end": "168239"
  },
  {
    "text": "for a dedicated runtime container we can",
    "start": "168239",
    "end": "169840"
  },
  {
    "text": "get down to about 7 megabytes but Alpine",
    "start": "169840",
    "end": "172280"
  },
  {
    "text": "isn't our only choice of Base image",
    "start": "172280",
    "end": "174319"
  },
  {
    "text": "distro list tied these up even more and",
    "start": "174319",
    "end": "176000"
  },
  {
    "text": "removes things like the shell and",
    "start": "176000",
    "end": "177159"
  },
  {
    "text": "package manager there are a number of",
    "start": "177159",
    "end": "178879"
  },
  {
    "text": "variants that let you get really really",
    "start": "178879",
    "end": "179879"
  },
  {
    "text": "granular on things like including or",
    "start": "179879",
    "end": "181599"
  },
  {
    "text": "excluding gpy or lib SSL scratch is an",
    "start": "181599",
    "end": "184959"
  },
  {
    "text": "explicitly empty base image good for",
    "start": "184959",
    "end": "186560"
  },
  {
    "text": "Standalone binaries note that it's",
    "start": "186560",
    "end": "188280"
  },
  {
    "text": "really and truly empty so you'll have to",
    "start": "188280",
    "end": "189720"
  },
  {
    "text": "account for things like searchs and",
    "start": "189720",
    "end": "190840"
  },
  {
    "text": "users and time zone info and you won't",
    "start": "190840",
    "end": "192959"
  },
  {
    "text": "be able to build inside a scratch base",
    "start": "192959",
    "end": "194440"
  },
  {
    "text": "image since there's nothing to build",
    "start": "194440",
    "end": "195519"
  },
  {
    "text": "with which brings us to our second",
    "start": "195519",
    "end": "198840"
  },
  {
    "text": "practice multi-stage builds in the top",
    "start": "198840",
    "end": "201920"
  },
  {
    "text": "half of this Docker file we're using the",
    "start": "201920",
    "end": "203440"
  },
  {
    "text": "big Deb and base image to build our",
    "start": "203440",
    "end": "204959"
  },
  {
    "text": "binary and then in the bottom half",
    "start": "204959",
    "end": "206519"
  },
  {
    "text": "copying it over to a new runtime image",
    "start": "206519",
    "end": "208040"
  },
  {
    "text": "built from scratch this is most perent",
    "start": "208040",
    "end": "210200"
  },
  {
    "text": "to compiled languages like go but even",
    "start": "210200",
    "end": "211879"
  },
  {
    "text": "containerized python python apps might",
    "start": "211879",
    "end": "213519"
  },
  {
    "text": "use multi-stage builds with tools like",
    "start": "213519",
    "end": "216720"
  },
  {
    "text": "PC for Windows containers Microsoft",
    "start": "216720",
    "end": "219200"
  },
  {
    "text": "provides four base images ranging from",
    "start": "219200",
    "end": "220720"
  },
  {
    "text": "the 3.4 gig windows image that includes",
    "start": "220720",
    "end": "222760"
  },
  {
    "text": "the complete Windows API set down to the",
    "start": "222760",
    "end": "225360"
  },
  {
    "text": "100 odd megabyte Nano server image",
    "start": "225360",
    "end": "226920"
  },
  {
    "text": "tailored to new applications micros",
    "start": "226920",
    "end": "228360"
  },
  {
    "text": "servers and apps of minimal",
    "start": "228360",
    "end": "230879"
  },
  {
    "text": "dependencies we can take advantage of",
    "start": "230879",
    "end": "232959"
  },
  {
    "text": "multi-stage builds here as well for",
    "start": "232959",
    "end": "234599"
  },
  {
    "text": "example building from a goang nano",
    "start": "234599",
    "end": "236280"
  },
  {
    "text": "server image and then running from",
    "start": "236280",
    "end": "237599"
  },
  {
    "text": "Baseline Nano server",
    "start": "237599",
    "end": "241239"
  },
  {
    "text": "finally let's look forward to an",
    "start": "241239",
    "end": "242640"
  },
  {
    "text": "emerging approach web assembly also",
    "start": "242640",
    "end": "244519"
  },
  {
    "text": "known as wum web assembly is a low-level",
    "start": "244519",
    "end": "247040"
  },
  {
    "text": "binary code format enabling small fast",
    "start": "247040",
    "end": "249000"
  },
  {
    "text": "and portable workloads projects like run",
    "start": "249000",
    "end": "251200"
  },
  {
    "text": "wasi are making it more and more",
    "start": "251200",
    "end": "252360"
  },
  {
    "text": "practical to run web assembly workloads",
    "start": "252360",
    "end": "253799"
  },
  {
    "text": "on kubernetes the kzer kubernetes drro",
    "start": "253799",
    "end": "256759"
  },
  {
    "text": "makes it easy to experiment with runtime",
    "start": "256759",
    "end": "258359"
  },
  {
    "text": "plugins not just for web assembly but",
    "start": "258359",
    "end": "260000"
  },
  {
    "text": "also things like gvisor when the kuet",
    "start": "260000",
    "end": "262360"
  },
  {
    "text": "gets a request for a workload with a",
    "start": "262360",
    "end": "263639"
  },
  {
    "text": "particular runtime requirement it passes",
    "start": "263639",
    "end": "265240"
  },
  {
    "text": "on that information to container D which",
    "start": "265240",
    "end": "266880"
  },
  {
    "text": "can then select the appropriate lowlevel",
    "start": "266880",
    "end": "268479"
  },
  {
    "text": "runtime which might be run C for an",
    "start": "268479",
    "end": "270360"
  },
  {
    "text": "ordinary container or in this case wasm",
    "start": "270360",
    "end": "272440"
  },
  {
    "text": "time spin for web",
    "start": "272440",
    "end": "275000"
  },
  {
    "text": "assembly once you have the environment",
    "start": "275000",
    "end": "276800"
  },
  {
    "text": "up and running building an image for a",
    "start": "276800",
    "end": "278600"
  },
  {
    "text": "simple app doesn't have to be a whole",
    "start": "278600",
    "end": "279759"
  },
  {
    "text": "lot more complicated in essence we're",
    "start": "279759",
    "end": "281560"
  },
  {
    "text": "compiling the bite code and then",
    "start": "281560",
    "end": "282639"
  },
  {
    "text": "plopping that down in an empty oci",
    "start": "282639",
    "end": "284160"
  },
  {
    "text": "compatible Scrat shell of a container",
    "start": "284160",
    "end": "286039"
  },
  {
    "text": "then the web assembly runtime handles",
    "start": "286039",
    "end": "287479"
  },
  {
    "text": "the job of running that code against the",
    "start": "287479",
    "end": "288680"
  },
  {
    "text": "wasm virtual architecture so practice",
    "start": "288680",
    "end": "291039"
  },
  {
    "text": "three is look out for new",
    "start": "291039",
    "end": "294080"
  },
  {
    "text": "approaches finally if you'd like to",
    "start": "294080",
    "end": "296120"
  },
  {
    "text": "check out a detailed tutorial on using",
    "start": "296120",
    "end": "297520"
  },
  {
    "text": "web assembly on K zos or look through",
    "start": "297520",
    "end": "299080"
  },
  {
    "text": "the docker file from this presentation",
    "start": "299080",
    "end": "300600"
  },
  {
    "text": "this QR code will take you to a page",
    "start": "300600",
    "end": "302000"
  },
  {
    "text": "where you can find all of that thank you",
    "start": "302000",
    "end": "304000"
  },
  {
    "text": "so much for your time keep it tiny keep",
    "start": "304000",
    "end": "305759"
  },
  {
    "text": "it safe have a great",
    "start": "305759",
    "end": "308680"
  },
  {
    "text": "coupon",
    "start": "312160",
    "end": "315160"
  }
]