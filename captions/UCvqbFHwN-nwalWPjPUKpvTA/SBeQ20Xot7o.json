[
  {
    "start": "0",
    "end": "76000"
  },
  {
    "text": "hello welcome to the cubecon cloud",
    "start": "80",
    "end": "2639"
  },
  {
    "text": "nativecon",
    "start": "2639",
    "end": "3360"
  },
  {
    "text": "europe 2020 virtual event i'm daniel",
    "start": "3360",
    "end": "6160"
  },
  {
    "text": "feldman and the title of this session is",
    "start": "6160",
    "end": "7919"
  },
  {
    "text": "save your services",
    "start": "7919",
    "end": "9120"
  },
  {
    "text": "from sneaky snoops with spiffy first of",
    "start": "9120",
    "end": "11759"
  },
  {
    "text": "all i'd like to start by introducing",
    "start": "11759",
    "end": "13120"
  },
  {
    "text": "myself",
    "start": "13120",
    "end": "14000"
  },
  {
    "text": "again my name is daniel feldman i live",
    "start": "14000",
    "end": "15920"
  },
  {
    "text": "in minneapolis in the u.s",
    "start": "15920",
    "end": "17600"
  },
  {
    "text": "and i've been working on cloud security",
    "start": "17600",
    "end": "19119"
  },
  {
    "text": "engineering for most of my career",
    "start": "19119",
    "end": "21199"
  },
  {
    "text": "i started out at a company called",
    "start": "21199",
    "end": "22640"
  },
  {
    "text": "veritas which makes the number one used",
    "start": "22640",
    "end": "24960"
  },
  {
    "text": "enterprise backup software which has a",
    "start": "24960",
    "end": "26880"
  },
  {
    "text": "lot of really interesting security",
    "start": "26880",
    "end": "28400"
  },
  {
    "text": "requirements",
    "start": "28400",
    "end": "29279"
  },
  {
    "text": "i worked on the security protocols team",
    "start": "29279",
    "end": "31119"
  },
  {
    "text": "at that company",
    "start": "31119",
    "end": "32880"
  },
  {
    "text": "that work led me to join a startup",
    "start": "32880",
    "end": "34480"
  },
  {
    "text": "called scitel which developed the spiffy",
    "start": "34480",
    "end": "36880"
  },
  {
    "text": "inspire open source cncf security",
    "start": "36880",
    "end": "39040"
  },
  {
    "text": "projects",
    "start": "39040",
    "end": "39680"
  },
  {
    "text": "that i'll be discussing today then just",
    "start": "39680",
    "end": "42480"
  },
  {
    "text": "recently",
    "start": "42480",
    "end": "43040"
  },
  {
    "text": "scitel was actually acquired by hpe",
    "start": "43040",
    "end": "45440"
  },
  {
    "text": "which is the number one manufacturer of",
    "start": "45440",
    "end": "47120"
  },
  {
    "text": "servers in the world",
    "start": "47120",
    "end": "48160"
  },
  {
    "text": "and has a variety of really interesting",
    "start": "48160",
    "end": "50000"
  },
  {
    "text": "open source projects",
    "start": "50000",
    "end": "52399"
  },
  {
    "text": "so i'm really excited to be continuing",
    "start": "52399",
    "end": "53920"
  },
  {
    "text": "to work on spiffy inspire at hpe",
    "start": "53920",
    "end": "56480"
  },
  {
    "text": "but i'm not just here to represent",
    "start": "56480",
    "end": "57840"
  },
  {
    "text": "myself there's a huge team with security",
    "start": "57840",
    "end": "60160"
  },
  {
    "text": "experience at a variety of top companies",
    "start": "60160",
    "end": "62640"
  },
  {
    "text": "that's working on spiffy inspire in fact",
    "start": "62640",
    "end": "65040"
  },
  {
    "text": "one of our founding engineers evan",
    "start": "65040",
    "end": "66720"
  },
  {
    "text": "gilman",
    "start": "66720",
    "end": "67520"
  },
  {
    "text": "was the author of the book zero trust",
    "start": "67520",
    "end": "69200"
  },
  {
    "text": "networks and he'd probably be here today",
    "start": "69200",
    "end": "71920"
  },
  {
    "text": "except that he's out on paternity leave",
    "start": "71920",
    "end": "74159"
  },
  {
    "text": "so congratulations evan here are the",
    "start": "74159",
    "end": "76799"
  },
  {
    "start": "76000",
    "end": "107000"
  },
  {
    "text": "subjects we'll be discussing today",
    "start": "76799",
    "end": "78880"
  },
  {
    "text": "first what is service identity and why",
    "start": "78880",
    "end": "80799"
  },
  {
    "text": "is it an interesting problem to solve",
    "start": "80799",
    "end": "82960"
  },
  {
    "text": "second we'll be discussing several",
    "start": "82960",
    "end": "84640"
  },
  {
    "text": "different approaches to service identity",
    "start": "84640",
    "end": "86560"
  },
  {
    "text": "that you might already be familiar with",
    "start": "86560",
    "end": "88880"
  },
  {
    "text": "third we'll be discussing spiffy",
    "start": "88880",
    "end": "90799"
  },
  {
    "text": "which is the standard for service",
    "start": "90799",
    "end": "92320"
  },
  {
    "text": "identity",
    "start": "92320",
    "end": "94000"
  },
  {
    "text": "fourth we'll be discussing spire which",
    "start": "94000",
    "end": "96320"
  },
  {
    "text": "is the implementation of spiffy that i",
    "start": "96320",
    "end": "98000"
  },
  {
    "text": "work on every day",
    "start": "98000",
    "end": "99759"
  },
  {
    "text": "and then fifth we'll be discussing the",
    "start": "99759",
    "end": "101360"
  },
  {
    "text": "next steps for using spiffy inspire",
    "start": "101360",
    "end": "103600"
  },
  {
    "text": "at your company and contributing back to",
    "start": "103600",
    "end": "105439"
  },
  {
    "text": "open source",
    "start": "105439",
    "end": "107759"
  },
  {
    "start": "107000",
    "end": "203000"
  },
  {
    "text": "why is service identity an interesting",
    "start": "107759",
    "end": "109520"
  },
  {
    "text": "problem well you've probably seen charts",
    "start": "109520",
    "end": "111439"
  },
  {
    "text": "like this before",
    "start": "111439",
    "end": "112560"
  },
  {
    "text": "each one of these dots is a service at",
    "start": "112560",
    "end": "114399"
  },
  {
    "text": "netflix",
    "start": "114399",
    "end": "115600"
  },
  {
    "text": "all of these services are chunks of code",
    "start": "115600",
    "end": "117840"
  },
  {
    "text": "that are then deployed in multiple",
    "start": "117840",
    "end": "119439"
  },
  {
    "text": "clouds multiple regions maybe on cdns",
    "start": "119439",
    "end": "122320"
  },
  {
    "text": "and they're all communicating with each",
    "start": "122320",
    "end": "123680"
  },
  {
    "text": "other",
    "start": "123680",
    "end": "125520"
  },
  {
    "text": "and they're all constantly changing",
    "start": "125520",
    "end": "126960"
  },
  {
    "text": "developers are constantly updating the",
    "start": "126960",
    "end": "128479"
  },
  {
    "text": "code",
    "start": "128479",
    "end": "129039"
  },
  {
    "text": "and changing how these services interact",
    "start": "129039",
    "end": "130720"
  },
  {
    "text": "with each other",
    "start": "130720",
    "end": "132239"
  },
  {
    "text": "in order to do any kind of security each",
    "start": "132239",
    "end": "135040"
  },
  {
    "text": "entity that you're trying to secure has",
    "start": "135040",
    "end": "136480"
  },
  {
    "text": "to have some kind of identity",
    "start": "136480",
    "end": "138319"
  },
  {
    "text": "for example to encrypt something you",
    "start": "138319",
    "end": "140160"
  },
  {
    "text": "have to know the identity of the party",
    "start": "140160",
    "end": "141920"
  },
  {
    "text": "that will be decrypting it",
    "start": "141920",
    "end": "143280"
  },
  {
    "text": "in order to ensure data integrity if",
    "start": "143280",
    "end": "145360"
  },
  {
    "text": "you're adding a digital signature you",
    "start": "145360",
    "end": "147120"
  },
  {
    "text": "have to know who will be verifying the",
    "start": "147120",
    "end": "148480"
  },
  {
    "text": "digital signature",
    "start": "148480",
    "end": "149680"
  },
  {
    "text": "and how they'll access your public key",
    "start": "149680",
    "end": "152239"
  },
  {
    "text": "in order to do authentication",
    "start": "152239",
    "end": "153680"
  },
  {
    "text": "obviously the thing that you're",
    "start": "153680",
    "end": "155280"
  },
  {
    "text": "authenticating has to have some kind of",
    "start": "155280",
    "end": "156640"
  },
  {
    "text": "identity",
    "start": "156640",
    "end": "157680"
  },
  {
    "text": "and in order to do authorization you",
    "start": "157680",
    "end": "159840"
  },
  {
    "text": "need to first do authentication and",
    "start": "159840",
    "end": "161360"
  },
  {
    "text": "authentication",
    "start": "161360",
    "end": "162400"
  },
  {
    "text": "depends on identity for humans identity",
    "start": "162400",
    "end": "165920"
  },
  {
    "text": "identity is mostly straightforward each",
    "start": "165920",
    "end": "167680"
  },
  {
    "text": "human is a unique individual",
    "start": "167680",
    "end": "169519"
  },
  {
    "text": "humans don't clone each other they don't",
    "start": "169519",
    "end": "171280"
  },
  {
    "text": "constantly change they have memories",
    "start": "171280",
    "end": "173519"
  },
  {
    "text": "you can give a human a username you can",
    "start": "173519",
    "end": "175440"
  },
  {
    "text": "give a human a password",
    "start": "175440",
    "end": "176879"
  },
  {
    "text": "you can give a human a two-factor",
    "start": "176879",
    "end": "178319"
  },
  {
    "text": "authentication device and expect them to",
    "start": "178319",
    "end": "180800"
  },
  {
    "text": "to retain that information",
    "start": "180800",
    "end": "182560"
  },
  {
    "text": "for services the situation is much more",
    "start": "182560",
    "end": "184239"
  },
  {
    "text": "complicated services are constantly",
    "start": "184239",
    "end": "186560"
  },
  {
    "text": "scaling up scaling down",
    "start": "186560",
    "end": "188000"
  },
  {
    "text": "moving around changing completely they",
    "start": "188000",
    "end": "190560"
  },
  {
    "text": "have no long-term memory when the",
    "start": "190560",
    "end": "191840"
  },
  {
    "text": "service starts up how is it supposed to",
    "start": "191840",
    "end": "193280"
  },
  {
    "text": "know what its username and password is",
    "start": "193280",
    "end": "195440"
  },
  {
    "text": "so solving the service identity problem",
    "start": "195440",
    "end": "197760"
  },
  {
    "text": "is very important in order to be able to",
    "start": "197760",
    "end": "199599"
  },
  {
    "text": "do any kind of security",
    "start": "199599",
    "end": "201360"
  },
  {
    "text": "for connections between",
    "start": "201360",
    "end": "204400"
  },
  {
    "start": "203000",
    "end": "389000"
  },
  {
    "text": "back in the pre-cloud days we used to",
    "start": "204400",
    "end": "206000"
  },
  {
    "text": "use perimeter security",
    "start": "206000",
    "end": "207440"
  },
  {
    "text": "in the perimeter security model",
    "start": "207440",
    "end": "209200"
  },
  {
    "text": "everything inside a perimeter is trusted",
    "start": "209200",
    "end": "211360"
  },
  {
    "text": "and everything outside is untrusted",
    "start": "211360",
    "end": "213519"
  },
  {
    "text": "so you have a firewall you have a dmz",
    "start": "213519",
    "end": "215680"
  },
  {
    "text": "that allows connections",
    "start": "215680",
    "end": "217120"
  },
  {
    "text": "that uh that go through the firewall",
    "start": "217120",
    "end": "218799"
  },
  {
    "text": "boundary and then all the services",
    "start": "218799",
    "end": "220560"
  },
  {
    "text": "inside the perimeter are essentially",
    "start": "220560",
    "end": "222000"
  },
  {
    "text": "trusted",
    "start": "222000",
    "end": "222640"
  },
  {
    "text": "they can all talk to each other they",
    "start": "222640",
    "end": "224159"
  },
  {
    "text": "don't require any credentials within the",
    "start": "224159",
    "end": "225680"
  },
  {
    "text": "perimeter",
    "start": "225680",
    "end": "227680"
  },
  {
    "text": "as you add multiple data centers",
    "start": "227680",
    "end": "229440"
  },
  {
    "text": "multiple clouds multiple regions within",
    "start": "229440",
    "end": "231680"
  },
  {
    "text": "clouds this becomes increasingly complex",
    "start": "231680",
    "end": "233360"
  },
  {
    "text": "to maintain",
    "start": "233360",
    "end": "234159"
  },
  {
    "text": "you need really complicated firewall",
    "start": "234159",
    "end": "236000"
  },
  {
    "text": "rules to allow specific connections from",
    "start": "236000",
    "end": "238239"
  },
  {
    "text": "service a to service b to service",
    "start": "238239",
    "end": "240000"
  },
  {
    "text": "c and then as you add in developers",
    "start": "240000",
    "end": "242799"
  },
  {
    "text": "throwing in new code constantly with",
    "start": "242799",
    "end": "244239"
  },
  {
    "text": "continuous integration and continuous",
    "start": "244239",
    "end": "246080"
  },
  {
    "text": "delivery uh this gets impossible to",
    "start": "246080",
    "end": "248319"
  },
  {
    "text": "maintain because the the connections",
    "start": "248319",
    "end": "249920"
  },
  {
    "text": "between services are constantly changing",
    "start": "249920",
    "end": "252159"
  },
  {
    "text": "and as these systems get more and more",
    "start": "252159",
    "end": "253840"
  },
  {
    "text": "complicated there are more and more",
    "start": "253840",
    "end": "255360"
  },
  {
    "text": "holes in the perimeter that a hacker can",
    "start": "255360",
    "end": "256880"
  },
  {
    "text": "exploit",
    "start": "256880",
    "end": "258959"
  },
  {
    "text": "can we just use shared secrets well this",
    "start": "258959",
    "end": "260799"
  },
  {
    "text": "is what you're probably using today",
    "start": "260799",
    "end": "262560"
  },
  {
    "text": "if you haven't heard of spiffy yet in",
    "start": "262560",
    "end": "264479"
  },
  {
    "text": "the shared secrets model",
    "start": "264479",
    "end": "266080"
  },
  {
    "text": "every service has credentials or",
    "start": "266080",
    "end": "267680"
  },
  {
    "text": "certificates that are used to access",
    "start": "267680",
    "end": "269199"
  },
  {
    "text": "other services",
    "start": "269199",
    "end": "270639"
  },
  {
    "text": "hopefully these are all stored in a",
    "start": "270639",
    "end": "272479"
  },
  {
    "text": "secret store maybe",
    "start": "272479",
    "end": "274000"
  },
  {
    "text": "amazon secret store maybe hashicorp",
    "start": "274000",
    "end": "276000"
  },
  {
    "text": "vault maybe azure secret store",
    "start": "276000",
    "end": "278400"
  },
  {
    "text": "but maintaining these secrets is hard",
    "start": "278400",
    "end": "280000"
  },
  {
    "text": "work you have to you have to rotate them",
    "start": "280000",
    "end": "281520"
  },
  {
    "text": "frequently",
    "start": "281520",
    "end": "282000"
  },
  {
    "text": "you have to make sure they're not being",
    "start": "282000",
    "end": "283199"
  },
  {
    "text": "misused uh you have to make sure that",
    "start": "283199",
    "end": "286080"
  },
  {
    "text": "they are",
    "start": "286080",
    "end": "286560"
  },
  {
    "text": "being stolen by insiders by by hackers",
    "start": "286560",
    "end": "289600"
  },
  {
    "text": "from the outside and",
    "start": "289600",
    "end": "290720"
  },
  {
    "text": "and then you're really reducing the",
    "start": "290720",
    "end": "292720"
  },
  {
    "text": "problem to a different question which is",
    "start": "292720",
    "end": "294240"
  },
  {
    "text": "how do you authenticate your service to",
    "start": "294240",
    "end": "295759"
  },
  {
    "text": "the secret store in the first place",
    "start": "295759",
    "end": "297600"
  },
  {
    "text": "and there's no good way to do that",
    "start": "297600",
    "end": "298960"
  },
  {
    "text": "usually you just have some kind of a",
    "start": "298960",
    "end": "300639"
  },
  {
    "text": "token that's in your config",
    "start": "300639",
    "end": "302000"
  },
  {
    "text": "map that authenticates your service to",
    "start": "302000",
    "end": "304400"
  },
  {
    "text": "the secret source so it can get other",
    "start": "304400",
    "end": "305919"
  },
  {
    "text": "secrets this is really a hack uh",
    "start": "305919",
    "end": "309039"
  },
  {
    "text": "mapping username password authentication",
    "start": "309039",
    "end": "311520"
  },
  {
    "text": "for humans",
    "start": "311520",
    "end": "312479"
  },
  {
    "text": "onto services but it doesn't work very",
    "start": "312479",
    "end": "314400"
  },
  {
    "text": "well before we move on it's worth asking",
    "start": "314400",
    "end": "317039"
  },
  {
    "text": "why we can't just use web public key",
    "start": "317039",
    "end": "318720"
  },
  {
    "text": "infrastructure or web pki",
    "start": "318720",
    "end": "320639"
  },
  {
    "text": "to secure our internal services web pki",
    "start": "320639",
    "end": "323520"
  },
  {
    "text": "works great for securing access to our",
    "start": "323520",
    "end": "325360"
  },
  {
    "text": "bank accounts",
    "start": "325360",
    "end": "326240"
  },
  {
    "text": "so it should work for internal services",
    "start": "326240",
    "end": "328000"
  },
  {
    "text": "right unfortunately",
    "start": "328000",
    "end": "329840"
  },
  {
    "text": "web pki is just not a great fit for",
    "start": "329840",
    "end": "332000"
  },
  {
    "text": "internal services",
    "start": "332000",
    "end": "333360"
  },
  {
    "text": "in webdki your browser requests a",
    "start": "333360",
    "end": "335759"
  },
  {
    "text": "hostname from dns",
    "start": "335759",
    "end": "337120"
  },
  {
    "text": "and dns gives it an ip address then your",
    "start": "337120",
    "end": "339759"
  },
  {
    "text": "browser connects to that ip address",
    "start": "339759",
    "end": "341600"
  },
  {
    "text": "and receives a certificate signed by a",
    "start": "341600",
    "end": "343440"
  },
  {
    "text": "certificate authority",
    "start": "343440",
    "end": "344800"
  },
  {
    "text": "indicating that that server really owns",
    "start": "344800",
    "end": "347199"
  },
  {
    "text": "that host name",
    "start": "347199",
    "end": "348320"
  },
  {
    "text": "so web pki is really about establishing",
    "start": "348320",
    "end": "350639"
  },
  {
    "text": "a strong binding",
    "start": "350639",
    "end": "351759"
  },
  {
    "text": "from the dns name of a service to the",
    "start": "351759",
    "end": "354240"
  },
  {
    "text": "actual service itself",
    "start": "354240",
    "end": "356160"
  },
  {
    "text": "unfortunately internal services",
    "start": "356160",
    "end": "358560"
  },
  {
    "text": "typically do not have an individual",
    "start": "358560",
    "end": "360800"
  },
  {
    "text": "globally recognized dns name you might",
    "start": "360800",
    "end": "363840"
  },
  {
    "text": "have",
    "start": "363840",
    "end": "364479"
  },
  {
    "text": "a service with thousands of copies they",
    "start": "364479",
    "end": "366160"
  },
  {
    "text": "might all have different host names",
    "start": "366160",
    "end": "368000"
  },
  {
    "text": "or you might have one service that only",
    "start": "368000",
    "end": "370160"
  },
  {
    "text": "has an ip address it doesn't have a host",
    "start": "370160",
    "end": "371840"
  },
  {
    "text": "name at all",
    "start": "371840",
    "end": "372960"
  },
  {
    "text": "even if we could solve that problem",
    "start": "372960",
    "end": "375039"
  },
  {
    "text": "there would be no way for",
    "start": "375039",
    "end": "376479"
  },
  {
    "text": "an instance of a service that's just",
    "start": "376479",
    "end": "378080"
  },
  {
    "text": "starting up to find out its own identity",
    "start": "378080",
    "end": "381039"
  },
  {
    "text": "so web pki just doesn't fit well with",
    "start": "381039",
    "end": "383680"
  },
  {
    "text": "solving the internal service identity",
    "start": "383680",
    "end": "385440"
  },
  {
    "text": "problem",
    "start": "385440",
    "end": "386080"
  },
  {
    "text": "and we don't see it used very often for",
    "start": "386080",
    "end": "387840"
  },
  {
    "text": "that application",
    "start": "387840",
    "end": "390240"
  },
  {
    "start": "389000",
    "end": "459000"
  },
  {
    "text": "so if you think about the solutions we",
    "start": "390240",
    "end": "391680"
  },
  {
    "text": "just discussed perimeter security",
    "start": "391680",
    "end": "394319"
  },
  {
    "text": "shared secrets and web pki you'll",
    "start": "394319",
    "end": "396639"
  },
  {
    "text": "realize that what we really need is a",
    "start": "396639",
    "end": "398080"
  },
  {
    "text": "way to securely distribute identities to",
    "start": "398080",
    "end": "400000"
  },
  {
    "text": "services",
    "start": "400000",
    "end": "400800"
  },
  {
    "text": "without depending on any manual effort",
    "start": "400800",
    "end": "402639"
  },
  {
    "text": "without depending on any external",
    "start": "402639",
    "end": "404080"
  },
  {
    "text": "services",
    "start": "404080",
    "end": "404880"
  },
  {
    "text": "like dns or a secret store and that",
    "start": "404880",
    "end": "407919"
  },
  {
    "text": "method is spiffy",
    "start": "407919",
    "end": "409120"
  },
  {
    "text": "the secure production identity framework",
    "start": "409120",
    "end": "411120"
  },
  {
    "text": "for everyone that's what we're here to",
    "start": "411120",
    "end": "412639"
  },
  {
    "text": "talk about today and that's what i work",
    "start": "412639",
    "end": "414160"
  },
  {
    "text": "on",
    "start": "414160",
    "end": "415039"
  },
  {
    "text": "spiffy is a platform agnostic standard",
    "start": "415039",
    "end": "417039"
  },
  {
    "text": "for implementing service identity",
    "start": "417039",
    "end": "419039"
  },
  {
    "text": "it's inspired by internal software that",
    "start": "419039",
    "end": "420880"
  },
  {
    "text": "was developed at google",
    "start": "420880",
    "end": "422319"
  },
  {
    "text": "netflix and facebook and people from",
    "start": "422319",
    "end": "424000"
  },
  {
    "text": "those companies got together",
    "start": "424000",
    "end": "425520"
  },
  {
    "text": "way back in 2017 to start drafting the",
    "start": "425520",
    "end": "427680"
  },
  {
    "text": "spiffy standard",
    "start": "427680",
    "end": "429360"
  },
  {
    "text": "spiffy gives your service a passport for",
    "start": "429360",
    "end": "431360"
  },
  {
    "text": "communicating with other services",
    "start": "431360",
    "end": "433440"
  },
  {
    "text": "it doesn't actually do the communication",
    "start": "433440",
    "end": "435039"
  },
  {
    "text": "it's not a service mesh it's not an",
    "start": "435039",
    "end": "436800"
  },
  {
    "text": "overlay network",
    "start": "436800",
    "end": "437840"
  },
  {
    "text": "it just gives your service the identity",
    "start": "437840",
    "end": "439520"
  },
  {
    "text": "information it needs to establish",
    "start": "439520",
    "end": "441360"
  },
  {
    "text": "connections within those other",
    "start": "441360",
    "end": "443120"
  },
  {
    "text": "systems but it is partially implemented",
    "start": "443120",
    "end": "445520"
  },
  {
    "text": "in several different service meshes",
    "start": "445520",
    "end": "448400"
  },
  {
    "text": "then the full implementation is called",
    "start": "448400",
    "end": "450319"
  },
  {
    "text": "spire and",
    "start": "450319",
    "end": "451680"
  },
  {
    "text": "that's the the reference implementation",
    "start": "451680",
    "end": "453360"
  },
  {
    "text": "that's the code i actually work on",
    "start": "453360",
    "end": "455199"
  },
  {
    "text": "but other other software is free to",
    "start": "455199",
    "end": "457199"
  },
  {
    "text": "implement spiffy",
    "start": "457199",
    "end": "459360"
  },
  {
    "start": "459000",
    "end": "641000"
  },
  {
    "text": "the safety standard consists of four",
    "start": "459360",
    "end": "461120"
  },
  {
    "text": "different pieces",
    "start": "461120",
    "end": "462400"
  },
  {
    "text": "the first piece is spiffy ids spiffy ids",
    "start": "462400",
    "end": "465840"
  },
  {
    "text": "are a standard format for identifying",
    "start": "465840",
    "end": "467599"
  },
  {
    "text": "services",
    "start": "467599",
    "end": "468639"
  },
  {
    "text": "it starts with spiffy colon slash it",
    "start": "468639",
    "end": "470720"
  },
  {
    "text": "looks like a url",
    "start": "470720",
    "end": "472080"
  },
  {
    "text": "and then there's a trust domain field",
    "start": "472080",
    "end": "473919"
  },
  {
    "text": "that's a unique identifier for your",
    "start": "473919",
    "end": "475599"
  },
  {
    "text": "organization typically it's just",
    "start": "475599",
    "end": "477360"
  },
  {
    "text": "your organization's uh top level domain",
    "start": "477360",
    "end": "481199"
  },
  {
    "text": "then there's a slash then there's an",
    "start": "481199",
    "end": "483199"
  },
  {
    "text": "identifier for the service",
    "start": "483199",
    "end": "484639"
  },
  {
    "text": "it's very simple the next piece of",
    "start": "484639",
    "end": "487199"
  },
  {
    "text": "spiffy is",
    "start": "487199",
    "end": "488000"
  },
  {
    "text": "spiffy verifiable identity documents",
    "start": "488000",
    "end": "490879"
  },
  {
    "text": "these are cryptographically verifiable",
    "start": "490879",
    "end": "492879"
  },
  {
    "text": "documents",
    "start": "492879",
    "end": "493919"
  },
  {
    "text": "asserting that a service has a specific",
    "start": "493919",
    "end": "496160"
  },
  {
    "text": "spiffy id",
    "start": "496160",
    "end": "498160"
  },
  {
    "text": "we actually support two different",
    "start": "498160",
    "end": "499520"
  },
  {
    "text": "formats for svids one is x 509",
    "start": "499520",
    "end": "502160"
  },
  {
    "text": "certificates",
    "start": "502160",
    "end": "503120"
  },
  {
    "text": "with certain fields filled in to include",
    "start": "503120",
    "end": "505360"
  },
  {
    "text": "the spiffy id",
    "start": "505360",
    "end": "506560"
  },
  {
    "text": "and the other is javascript web tokens",
    "start": "506560",
    "end": "508960"
  },
  {
    "text": "again with certain fields filled into",
    "start": "508960",
    "end": "511599"
  },
  {
    "text": "to a service specific spiffy id and you",
    "start": "511599",
    "end": "514640"
  },
  {
    "text": "may want the x 509 certificate",
    "start": "514640",
    "end": "516640"
  },
  {
    "text": "or the javascript web token in different",
    "start": "516640",
    "end": "518839"
  },
  {
    "text": "situations",
    "start": "518839",
    "end": "520640"
  },
  {
    "text": "the next piece of the spiffy standard is",
    "start": "520640",
    "end": "522800"
  },
  {
    "text": "trust bundles",
    "start": "522800",
    "end": "523839"
  },
  {
    "text": "these are sets of certificates that can",
    "start": "523839",
    "end": "525440"
  },
  {
    "text": "be used to verify the asvids",
    "start": "525440",
    "end": "527279"
  },
  {
    "text": "and the spiffy standard provides a",
    "start": "527279",
    "end": "528959"
  },
  {
    "text": "format for the trust bundles",
    "start": "528959",
    "end": "530480"
  },
  {
    "text": "and then a way for a service to get the",
    "start": "530480",
    "end": "532240"
  },
  {
    "text": "list of trust bundles that's available",
    "start": "532240",
    "end": "535440"
  },
  {
    "text": "finally this biffy standard includes the",
    "start": "535440",
    "end": "537920"
  },
  {
    "text": "workload api",
    "start": "537920",
    "end": "539200"
  },
  {
    "text": "this is a very simple local grpc api",
    "start": "539200",
    "end": "543279"
  },
  {
    "text": "that allows your service to obtain its",
    "start": "543279",
    "end": "545920"
  },
  {
    "text": "spiffy id",
    "start": "545920",
    "end": "547040"
  },
  {
    "text": "its svids and its trust bundles and then",
    "start": "547040",
    "end": "550080"
  },
  {
    "text": "use them to establish secure",
    "start": "550080",
    "end": "551279"
  },
  {
    "text": "communication later on",
    "start": "551279",
    "end": "553120"
  },
  {
    "text": "why is it a local grpc api well",
    "start": "553120",
    "end": "556320"
  },
  {
    "text": "if it was a remote api it would need",
    "start": "556320",
    "end": "557680"
  },
  {
    "text": "some kind of authentication and when",
    "start": "557680",
    "end": "559440"
  },
  {
    "text": "your service is first starting up it",
    "start": "559440",
    "end": "560720"
  },
  {
    "text": "doesn't have any kind of identity",
    "start": "560720",
    "end": "562320"
  },
  {
    "text": "so it can't perform any kind of",
    "start": "562320",
    "end": "563600"
  },
  {
    "text": "authentication so as part of the",
    "start": "563600",
    "end": "565760"
  },
  {
    "text": "specification",
    "start": "565760",
    "end": "566800"
  },
  {
    "text": "we guarantee that this local workload",
    "start": "566800",
    "end": "568720"
  },
  {
    "text": "api is available",
    "start": "568720",
    "end": "571680"
  },
  {
    "text": "here's another diagram of the spiffy",
    "start": "574320",
    "end": "576080"
  },
  {
    "text": "standard you have a spiffy provider",
    "start": "576080",
    "end": "578399"
  },
  {
    "text": "which is providing those four elements",
    "start": "578399",
    "end": "579920"
  },
  {
    "text": "of the spiffy standard to each of your",
    "start": "579920",
    "end": "581680"
  },
  {
    "text": "services",
    "start": "581680",
    "end": "582480"
  },
  {
    "text": "each service gets a spiffy id an svid",
    "start": "582480",
    "end": "586080"
  },
  {
    "text": "a trust bundle and access to that",
    "start": "586080",
    "end": "588000"
  },
  {
    "text": "workload api",
    "start": "588000",
    "end": "589279"
  },
  {
    "text": "which lets it obtain the spiffy id svid",
    "start": "589279",
    "end": "591680"
  },
  {
    "text": "trust bundle",
    "start": "591680",
    "end": "592800"
  },
  {
    "text": "and also notifications whenever any of",
    "start": "592800",
    "end": "594640"
  },
  {
    "text": "those elements change",
    "start": "594640",
    "end": "596480"
  },
  {
    "text": "so there are a couple of different",
    "start": "596480",
    "end": "597600"
  },
  {
    "text": "implementations of the spiffy standard",
    "start": "597600",
    "end": "599040"
  },
  {
    "text": "that are available right now",
    "start": "599040",
    "end": "600800"
  },
  {
    "text": "some of the service meshes including",
    "start": "600800",
    "end": "602399"
  },
  {
    "text": "kuma istio and network service mesh",
    "start": "602399",
    "end": "604880"
  },
  {
    "text": "implement spiffy",
    "start": "604880",
    "end": "606320"
  },
  {
    "text": "to varying degrees and then the official",
    "start": "606320",
    "end": "608320"
  },
  {
    "text": "reference implementation",
    "start": "608320",
    "end": "609839"
  },
  {
    "text": "is spire which is the implementation of",
    "start": "609839",
    "end": "612800"
  },
  {
    "text": "spiffy",
    "start": "612800",
    "end": "613600"
  },
  {
    "text": "that includes the entire api and it is",
    "start": "613600",
    "end": "616320"
  },
  {
    "text": "production quality software it's in use",
    "start": "616320",
    "end": "618000"
  },
  {
    "text": "at a number of big companies right now",
    "start": "618000",
    "end": "619760"
  },
  {
    "text": "it's at the incubation level in the cncf",
    "start": "619760",
    "end": "622000"
  },
  {
    "text": "structure",
    "start": "622000",
    "end": "622880"
  },
  {
    "text": "so similar to envoy or at cd",
    "start": "622880",
    "end": "625920"
  },
  {
    "text": "we're trying to get it up to to the",
    "start": "625920",
    "end": "627680"
  },
  {
    "text": "graduated level in cncf but that may",
    "start": "627680",
    "end": "630079"
  },
  {
    "text": "take a little while longer",
    "start": "630079",
    "end": "632720"
  },
  {
    "text": "and it's available on github you can",
    "start": "632720",
    "end": "634240"
  },
  {
    "text": "download it right now and see the open",
    "start": "634240",
    "end": "635920"
  },
  {
    "text": "issues and contribute back up to it",
    "start": "635920",
    "end": "638000"
  },
  {
    "text": "i and many others work on spire every",
    "start": "638000",
    "end": "640160"
  },
  {
    "text": "day",
    "start": "640160",
    "end": "642000"
  },
  {
    "start": "641000",
    "end": "788000"
  },
  {
    "text": "spire consists of two parts the spire",
    "start": "642000",
    "end": "644560"
  },
  {
    "text": "server is actually responsible for",
    "start": "644560",
    "end": "646079"
  },
  {
    "text": "signing the svids",
    "start": "646079",
    "end": "647440"
  },
  {
    "text": "because it needs to be highly secure we",
    "start": "647440",
    "end": "649600"
  },
  {
    "text": "recommend running spire",
    "start": "649600",
    "end": "650959"
  },
  {
    "text": "server on an isolated virtual machine or",
    "start": "650959",
    "end": "653360"
  },
  {
    "text": "even on dedicated hardware within your",
    "start": "653360",
    "end": "654880"
  },
  {
    "text": "data center",
    "start": "654880",
    "end": "656000"
  },
  {
    "text": "then the spire agent provides the",
    "start": "656000",
    "end": "658079"
  },
  {
    "text": "workload api and that runs on all the",
    "start": "658079",
    "end": "660640"
  },
  {
    "text": "alongside your services on individual",
    "start": "660640",
    "end": "662560"
  },
  {
    "text": "nodes",
    "start": "662560",
    "end": "664880"
  },
  {
    "text": "the first step in getting spire running",
    "start": "665360",
    "end": "667440"
  },
  {
    "text": "is called no data station",
    "start": "667440",
    "end": "669200"
  },
  {
    "text": "in no data station the node proves its",
    "start": "669200",
    "end": "672079"
  },
  {
    "text": "identity to the spire server on cloud",
    "start": "672079",
    "end": "674399"
  },
  {
    "text": "platforms or on kubernetes",
    "start": "674399",
    "end": "676000"
  },
  {
    "text": "the node provides an instance identity",
    "start": "676000",
    "end": "677839"
  },
  {
    "text": "document to the spire server",
    "start": "677839",
    "end": "679600"
  },
  {
    "text": "and then the spire server validates that",
    "start": "679600",
    "end": "681440"
  },
  {
    "text": "instance identity document",
    "start": "681440",
    "end": "683200"
  },
  {
    "text": "and grants the agent its own svid it's",
    "start": "683200",
    "end": "686000"
  },
  {
    "text": "also possible to perform no datastation",
    "start": "686000",
    "end": "687839"
  },
  {
    "text": "through pre-distributed certificates",
    "start": "687839",
    "end": "689760"
  },
  {
    "text": "or using join token strings because the",
    "start": "689760",
    "end": "692320"
  },
  {
    "text": "node attestation process is automated",
    "start": "692320",
    "end": "694640"
  },
  {
    "text": "as you scale up the number of nodes each",
    "start": "694640",
    "end": "696800"
  },
  {
    "text": "node can be attested automatically",
    "start": "696800",
    "end": "698640"
  },
  {
    "text": "so you don't have to do any manual",
    "start": "698640",
    "end": "700000"
  },
  {
    "text": "effort as you deploy more nodes",
    "start": "700000",
    "end": "702560"
  },
  {
    "text": "now that we have secure communication",
    "start": "702560",
    "end": "704240"
  },
  {
    "text": "from the spire agent to the spire server",
    "start": "704240",
    "end": "708079"
  },
  {
    "text": "the aspire agent can provide the",
    "start": "708320",
    "end": "710399"
  },
  {
    "text": "workload api",
    "start": "710399",
    "end": "711760"
  },
  {
    "text": "over a local connection as new workloads",
    "start": "711760",
    "end": "714399"
  },
  {
    "text": "connect",
    "start": "714399",
    "end": "715040"
  },
  {
    "text": "the spire agent performs another process",
    "start": "715040",
    "end": "717200"
  },
  {
    "text": "called workload attestation",
    "start": "717200",
    "end": "718959"
  },
  {
    "text": "for each workload the spire agent checks",
    "start": "718959",
    "end": "721440"
  },
  {
    "text": "that the workload's uid",
    "start": "721440",
    "end": "723440"
  },
  {
    "text": "image checksum or other characteristics",
    "start": "723440",
    "end": "726399"
  },
  {
    "text": "match the expected values",
    "start": "726399",
    "end": "728160"
  },
  {
    "text": "to give that workload in svid remember",
    "start": "728160",
    "end": "730399"
  },
  {
    "text": "the spire server actually creates and",
    "start": "730399",
    "end": "732399"
  },
  {
    "text": "signs the svid",
    "start": "732399",
    "end": "733680"
  },
  {
    "text": "but the spire agent is local to the",
    "start": "733680",
    "end": "735519"
  },
  {
    "text": "workload and that's the only place where",
    "start": "735519",
    "end": "737360"
  },
  {
    "text": "those detailed characteristics of the",
    "start": "737360",
    "end": "738880"
  },
  {
    "text": "workload can be checked",
    "start": "738880",
    "end": "741279"
  },
  {
    "text": "once no data station and workload",
    "start": "741279",
    "end": "743040"
  },
  {
    "text": "attestation are done we have a secure",
    "start": "743040",
    "end": "744959"
  },
  {
    "text": "chain of trust",
    "start": "744959",
    "end": "745680"
  },
  {
    "text": "going from the workload all the way back",
    "start": "745680",
    "end": "747279"
  },
  {
    "text": "to the spire server",
    "start": "747279",
    "end": "750240"
  },
  {
    "text": "and it looks a little bit like this you",
    "start": "750240",
    "end": "751680"
  },
  {
    "text": "can have all these different workloads",
    "start": "751680",
    "end": "753279"
  },
  {
    "text": "they're all communicating with aspire",
    "start": "753279",
    "end": "754880"
  },
  {
    "text": "server getting up-to-date essays",
    "start": "754880",
    "end": "757200"
  },
  {
    "text": "and those workloads can establish secure",
    "start": "757200",
    "end": "759200"
  },
  {
    "text": "communication between each other",
    "start": "759200",
    "end": "760959"
  },
  {
    "text": "using their secure identities",
    "start": "760959",
    "end": "764240"
  },
  {
    "text": "it's important to remember that none of",
    "start": "764240",
    "end": "766320"
  },
  {
    "text": "this is static",
    "start": "766320",
    "end": "767440"
  },
  {
    "text": "the bundles and svids are getting",
    "start": "767440",
    "end": "769040"
  },
  {
    "text": "updated frequently workloads are",
    "start": "769040",
    "end": "770959"
  },
  {
    "text": "starting up and shutting down",
    "start": "770959",
    "end": "772480"
  },
  {
    "text": "nodes are starting up and getting shut",
    "start": "772480",
    "end": "774160"
  },
  {
    "text": "and shutting down",
    "start": "774160",
    "end": "775519"
  },
  {
    "text": "uh typically we actually refresh the",
    "start": "775519",
    "end": "777760"
  },
  {
    "text": "svids every four hours",
    "start": "777760",
    "end": "779760"
  },
  {
    "text": "so it's it's very frequent and there's",
    "start": "779760",
    "end": "781519"
  },
  {
    "text": "no manual effort needed",
    "start": "781519",
    "end": "783279"
  },
  {
    "text": "everything is happening behind the",
    "start": "783279",
    "end": "784399"
  },
  {
    "text": "scenes automated by the spire",
    "start": "784399",
    "end": "787839"
  },
  {
    "start": "788000",
    "end": "864000"
  },
  {
    "text": "so of course running spire in real",
    "start": "788800",
    "end": "790480"
  },
  {
    "text": "systems is a little bit more complicated",
    "start": "790480",
    "end": "792000"
  },
  {
    "text": "than the toy example we just did",
    "start": "792000",
    "end": "794079"
  },
  {
    "text": "uh first of all most organizations will",
    "start": "794079",
    "end": "796240"
  },
  {
    "text": "run several spire servers side by side",
    "start": "796240",
    "end": "798079"
  },
  {
    "text": "two or three copies",
    "start": "798079",
    "end": "799360"
  },
  {
    "text": "of the same spire server for high",
    "start": "799360",
    "end": "800880"
  },
  {
    "text": "availability",
    "start": "800880",
    "end": "802720"
  },
  {
    "text": "second uh if you have multiple clouds",
    "start": "802720",
    "end": "805200"
  },
  {
    "text": "you want them to be loosely coupled so",
    "start": "805200",
    "end": "806800"
  },
  {
    "text": "that if if one can't access another the",
    "start": "806800",
    "end": "808800"
  },
  {
    "text": "entire system doesn't go down",
    "start": "808800",
    "end": "810000"
  },
  {
    "text": "immediately",
    "start": "810000",
    "end": "810880"
  },
  {
    "text": "so we support a feature called",
    "start": "810880",
    "end": "812079"
  },
  {
    "text": "federation which lets you have multiple",
    "start": "812079",
    "end": "814160"
  },
  {
    "text": "spire clusters",
    "start": "814160",
    "end": "815519"
  },
  {
    "text": "that are exchanging their bundles",
    "start": "815519",
    "end": "817120"
  },
  {
    "text": "periodically uh so that they can all",
    "start": "817120",
    "end": "819440"
  },
  {
    "text": "exchange",
    "start": "819440",
    "end": "820000"
  },
  {
    "text": "uh all the aspens are compatible within",
    "start": "820000",
    "end": "822399"
  },
  {
    "text": "both systems",
    "start": "822399",
    "end": "823440"
  },
  {
    "text": "but they are they aren't tightly coupled",
    "start": "823440",
    "end": "825040"
  },
  {
    "text": "they are constantly talking to each",
    "start": "825040",
    "end": "826320"
  },
  {
    "text": "other",
    "start": "826320",
    "end": "827760"
  },
  {
    "text": "third we have a feature called upstream",
    "start": "827760",
    "end": "829440"
  },
  {
    "text": "authorities which lets you use an",
    "start": "829440",
    "end": "830800"
  },
  {
    "text": "external ca",
    "start": "830800",
    "end": "832959"
  },
  {
    "text": "uh to do the spire root certificate",
    "start": "832959",
    "end": "835199"
  },
  {
    "text": "signing and this is really common for",
    "start": "835199",
    "end": "836800"
  },
  {
    "text": "organizations that have some kind of",
    "start": "836800",
    "end": "838079"
  },
  {
    "text": "compliance mandate",
    "start": "838079",
    "end": "839920"
  },
  {
    "text": "to use a single single trust hierarchy",
    "start": "839920",
    "end": "842800"
  },
  {
    "text": "for their whole organization",
    "start": "842800",
    "end": "844240"
  },
  {
    "text": "or maybe they want to use some kind of",
    "start": "844240",
    "end": "845519"
  },
  {
    "text": "hardware security module like an hsm",
    "start": "845519",
    "end": "848399"
  },
  {
    "text": "available in aws to do all their root",
    "start": "848399",
    "end": "850480"
  },
  {
    "text": "certificate signing",
    "start": "850480",
    "end": "851519"
  },
  {
    "text": "or maybe they want a hierarchy of spire",
    "start": "851519",
    "end": "853519"
  },
  {
    "text": "servers they want to have one master",
    "start": "853519",
    "end": "854880"
  },
  {
    "text": "spire server for the whole organization",
    "start": "854880",
    "end": "857199"
  },
  {
    "text": "and then lots of spire servers for",
    "start": "857199",
    "end": "859279"
  },
  {
    "text": "individual",
    "start": "859279",
    "end": "860560"
  },
  {
    "text": "individual divisions within their",
    "start": "860560",
    "end": "861839"
  },
  {
    "text": "organization",
    "start": "861839",
    "end": "864480"
  },
  {
    "start": "864000",
    "end": "1173000"
  },
  {
    "text": "now let's talk about some frequently",
    "start": "864560",
    "end": "866079"
  },
  {
    "text": "asked questions about spire",
    "start": "866079",
    "end": "868000"
  },
  {
    "text": "first of all why do we need one spire",
    "start": "868000",
    "end": "870079"
  },
  {
    "text": "agent per node and what counts as a node",
    "start": "870079",
    "end": "871839"
  },
  {
    "text": "anyway do virtual machine host counts as",
    "start": "871839",
    "end": "873760"
  },
  {
    "text": "a node do kubernetes hosts count as a",
    "start": "873760",
    "end": "875440"
  },
  {
    "text": "node",
    "start": "875440",
    "end": "875920"
  },
  {
    "text": "and the answer is remember the spire",
    "start": "875920",
    "end": "878079"
  },
  {
    "text": "agent is providing the spiffy workload",
    "start": "878079",
    "end": "880000"
  },
  {
    "text": "api",
    "start": "880000",
    "end": "880720"
  },
  {
    "text": "the spiffy workload api is a local api",
    "start": "880720",
    "end": "883120"
  },
  {
    "text": "it's unauthenticated",
    "start": "883120",
    "end": "884720"
  },
  {
    "text": "and then it the implementation uses",
    "start": "884720",
    "end": "886959"
  },
  {
    "text": "features of the operating system to",
    "start": "886959",
    "end": "888399"
  },
  {
    "text": "identify the process that's connecting",
    "start": "888399",
    "end": "890160"
  },
  {
    "text": "to",
    "start": "890160",
    "end": "890880"
  },
  {
    "text": "that api and then use characteristics of",
    "start": "890880",
    "end": "893440"
  },
  {
    "text": "that process to give that process the",
    "start": "893440",
    "end": "894880"
  },
  {
    "text": "right asset",
    "start": "894880",
    "end": "895760"
  },
  {
    "text": "so you need at least one spire agent per",
    "start": "895760",
    "end": "898000"
  },
  {
    "text": "instance of the operating system",
    "start": "898000",
    "end": "899839"
  },
  {
    "text": "and again we support linux we support",
    "start": "899839",
    "end": "901519"
  },
  {
    "text": "bsd uh",
    "start": "901519",
    "end": "902880"
  },
  {
    "text": "we mostly support windows although",
    "start": "902880",
    "end": "904480"
  },
  {
    "text": "that's not official yet",
    "start": "904480",
    "end": "906079"
  },
  {
    "text": "but whichever operating system you're",
    "start": "906079",
    "end": "907760"
  },
  {
    "text": "used you're using",
    "start": "907760",
    "end": "909440"
  },
  {
    "text": "you need one spire agent for instance of",
    "start": "909440",
    "end": "911279"
  },
  {
    "text": "that operating system",
    "start": "911279",
    "end": "912800"
  },
  {
    "text": "so a virtual machine host wouldn't make",
    "start": "912800",
    "end": "914800"
  },
  {
    "text": "sense to run a spire agent on because it",
    "start": "914800",
    "end": "916480"
  },
  {
    "text": "doesn't have",
    "start": "916480",
    "end": "917440"
  },
  {
    "text": "access to those those operating system",
    "start": "917440",
    "end": "919440"
  },
  {
    "text": "system calls",
    "start": "919440",
    "end": "920720"
  },
  {
    "text": "that let us determine which process is",
    "start": "920720",
    "end": "923040"
  },
  {
    "text": "connecting to which socket",
    "start": "923040",
    "end": "924639"
  },
  {
    "text": "but a kubernetes node running lots of",
    "start": "924639",
    "end": "926560"
  },
  {
    "text": "pods is fine to have just one spire",
    "start": "926560",
    "end": "928800"
  },
  {
    "text": "agent",
    "start": "928800",
    "end": "929279"
  },
  {
    "text": "because there's just one kernel and that",
    "start": "929279",
    "end": "931040"
  },
  {
    "text": "kernel can identify which",
    "start": "931040",
    "end": "933040"
  },
  {
    "text": "process is connecting to the workload",
    "start": "933040",
    "end": "935040"
  },
  {
    "text": "api regardless of which pod it's in",
    "start": "935040",
    "end": "938880"
  },
  {
    "text": "what if the spire agent is compromised",
    "start": "938880",
    "end": "941920"
  },
  {
    "text": "uh so i didn't discuss this in the",
    "start": "941920",
    "end": "943360"
  },
  {
    "text": "presentation but the spire agent",
    "start": "943360",
    "end": "945120"
  },
  {
    "text": "itself has really minimal trust it can",
    "start": "945120",
    "end": "948240"
  },
  {
    "text": "only",
    "start": "948240",
    "end": "948959"
  },
  {
    "text": "issue acids that are uh allowed to be",
    "start": "948959",
    "end": "951759"
  },
  {
    "text": "issued by that node",
    "start": "951759",
    "end": "953120"
  },
  {
    "text": "so even if the spire agent is completely",
    "start": "953120",
    "end": "954800"
  },
  {
    "text": "compromised even if a hacker gets in",
    "start": "954800",
    "end": "957040"
  },
  {
    "text": "and tampers with the spire agent it",
    "start": "957040",
    "end": "959680"
  },
  {
    "text": "can't simply request",
    "start": "959680",
    "end": "960639"
  },
  {
    "text": "acids for any possible workload within",
    "start": "960639",
    "end": "962399"
  },
  {
    "text": "your organization can only request",
    "start": "962399",
    "end": "964560"
  },
  {
    "text": "s-vids for the processes that are",
    "start": "964560",
    "end": "966320"
  },
  {
    "text": "supposed to be running on that node",
    "start": "966320",
    "end": "968399"
  },
  {
    "text": "also the spire agent doesn't have any of",
    "start": "968399",
    "end": "970880"
  },
  {
    "text": "your cloud credentials",
    "start": "970880",
    "end": "972399"
  },
  {
    "text": "all of that is stored in the spire",
    "start": "972399",
    "end": "973759"
  },
  {
    "text": "server configuration",
    "start": "973759",
    "end": "976079"
  },
  {
    "text": "so even though it probably isn't great",
    "start": "976079",
    "end": "977920"
  },
  {
    "text": "if your spire agent is compromised",
    "start": "977920",
    "end": "980000"
  },
  {
    "text": "because it can implement it can issue s",
    "start": "980000",
    "end": "982399"
  },
  {
    "text": "vids that",
    "start": "982399",
    "end": "983120"
  },
  {
    "text": "uh that it isn't supposed to issue it",
    "start": "983120",
    "end": "986000"
  },
  {
    "text": "can't",
    "start": "986000",
    "end": "986399"
  },
  {
    "text": "issue just any s fit for your entire",
    "start": "986399",
    "end": "988240"
  },
  {
    "text": "organization it can only issue",
    "start": "988240",
    "end": "989920"
  },
  {
    "text": "estimates that are supposed to be issued",
    "start": "989920",
    "end": "991440"
  },
  {
    "text": "by that node",
    "start": "991440",
    "end": "993440"
  },
  {
    "text": "next uh what about my old workload that",
    "start": "993440",
    "end": "995279"
  },
  {
    "text": "i don't want to change remember spiffy",
    "start": "995279",
    "end": "997680"
  },
  {
    "text": "you have to you have to implement some",
    "start": "997680",
    "end": "999600"
  },
  {
    "text": "kind of client for that workload api",
    "start": "999600",
    "end": "1001600"
  },
  {
    "text": "in order to get your spiffy id trust",
    "start": "1001600",
    "end": "1003440"
  },
  {
    "text": "bundle in sved",
    "start": "1003440",
    "end": "1005920"
  },
  {
    "text": "well you can use a sidecar proxy in",
    "start": "1005920",
    "end": "1008079"
  },
  {
    "text": "kubernetes to implement spire",
    "start": "1008079",
    "end": "1010800"
  },
  {
    "text": "aspire client and in fact there are",
    "start": "1010800",
    "end": "1012480"
  },
  {
    "text": "several open source sidecar proxies that",
    "start": "1012480",
    "end": "1014240"
  },
  {
    "text": "you can just use already",
    "start": "1014240",
    "end": "1015920"
  },
  {
    "text": "and also for java we've provided a jar",
    "start": "1015920",
    "end": "1018720"
  },
  {
    "text": "that plugs into the java tls apis at a",
    "start": "1018720",
    "end": "1021279"
  },
  {
    "text": "low level",
    "start": "1021279",
    "end": "1022240"
  },
  {
    "text": "so you can use java you can use spiffy",
    "start": "1022240",
    "end": "1025280"
  },
  {
    "text": "in java",
    "start": "1025280",
    "end": "1025839"
  },
  {
    "text": "without changing your code at all you",
    "start": "1025839",
    "end": "1027199"
  },
  {
    "text": "just need to change some java",
    "start": "1027199",
    "end": "1028240"
  },
  {
    "text": "configuration",
    "start": "1028240",
    "end": "1029280"
  },
  {
    "text": "and then when your java application",
    "start": "1029280",
    "end": "1030798"
  },
  {
    "text": "creates a tls socket",
    "start": "1030799",
    "end": "1032319"
  },
  {
    "text": "it will automatically use spiffy to get",
    "start": "1032319",
    "end": "1034000"
  },
  {
    "text": "a client certificate",
    "start": "1034000",
    "end": "1036959"
  },
  {
    "text": "how do i specify which workloads get",
    "start": "1037199",
    "end": "1039120"
  },
  {
    "text": "which spiffy ids",
    "start": "1039120",
    "end": "1040720"
  },
  {
    "text": "so inspire this is done using a concept",
    "start": "1040720",
    "end": "1043199"
  },
  {
    "text": "called registration entries and these",
    "start": "1043199",
    "end": "1044720"
  },
  {
    "text": "are stored in the spire database",
    "start": "1044720",
    "end": "1047438"
  },
  {
    "text": "the registration entries map the",
    "start": "1047439",
    "end": "1049600"
  },
  {
    "text": "characteristics of a workload",
    "start": "1049600",
    "end": "1051440"
  },
  {
    "text": "to a specific spiffy id and then spire",
    "start": "1051440",
    "end": "1053840"
  },
  {
    "text": "will generate an",
    "start": "1053840",
    "end": "1054559"
  },
  {
    "text": "svid for that spiffy id uh when it needs",
    "start": "1054559",
    "end": "1057120"
  },
  {
    "text": "to",
    "start": "1057120",
    "end": "1057840"
  },
  {
    "text": "so here is an example registration entry",
    "start": "1057840",
    "end": "1060080"
  },
  {
    "text": "for a node it says",
    "start": "1060080",
    "end": "1061679"
  },
  {
    "text": "if this node is starting up and it has",
    "start": "1061679",
    "end": "1063760"
  },
  {
    "text": "this aws tag database then give it the",
    "start": "1063760",
    "end": "1066400"
  },
  {
    "text": "spiffy id",
    "start": "1066400",
    "end": "1067200"
  },
  {
    "text": "corresponding to database so these are",
    "start": "1067200",
    "end": "1069679"
  },
  {
    "text": "these are little chunks of",
    "start": "1069679",
    "end": "1070960"
  },
  {
    "text": "it's almost like code that says if",
    "start": "1070960",
    "end": "1074080"
  },
  {
    "text": "something has these characteristics give",
    "start": "1074080",
    "end": "1076000"
  },
  {
    "text": "it this spiffy id",
    "start": "1076000",
    "end": "1077600"
  },
  {
    "text": "here's another example for a workload it",
    "start": "1077600",
    "end": "1080640"
  },
  {
    "text": "says if the workload",
    "start": "1080640",
    "end": "1081840"
  },
  {
    "text": "has the parent id database meaning it's",
    "start": "1081840",
    "end": "1083919"
  },
  {
    "text": "running on the node",
    "start": "1083919",
    "end": "1085840"
  },
  {
    "text": "with the spiffy id database and also has",
    "start": "1085840",
    "end": "1088960"
  },
  {
    "text": "the uid",
    "start": "1088960",
    "end": "1089840"
  },
  {
    "text": "payments then give it this 50 id",
    "start": "1089840",
    "end": "1092240"
  },
  {
    "text": "database",
    "start": "1092240",
    "end": "1093039"
  },
  {
    "text": "payments and this kind of structure can",
    "start": "1093039",
    "end": "1095440"
  },
  {
    "text": "be used",
    "start": "1095440",
    "end": "1096320"
  },
  {
    "text": "to create spiffy ids flexibly for all",
    "start": "1096320",
    "end": "1098640"
  },
  {
    "text": "the services within your organization",
    "start": "1098640",
    "end": "1100880"
  },
  {
    "text": "and the specific we call them selectors",
    "start": "1100880",
    "end": "1103840"
  },
  {
    "text": "things like aws tag",
    "start": "1103840",
    "end": "1105520"
  },
  {
    "text": "parent id uid characteristics of the",
    "start": "1105520",
    "end": "1108400"
  },
  {
    "text": "workload or the node that can be used to",
    "start": "1108400",
    "end": "1110080"
  },
  {
    "text": "generate the right spiffy ids",
    "start": "1110080",
    "end": "1111600"
  },
  {
    "text": "those are all defined in plugins so you",
    "start": "1111600",
    "end": "1113120"
  },
  {
    "text": "can even create new plugins",
    "start": "1113120",
    "end": "1115360"
  },
  {
    "text": "that define new characteristics of the",
    "start": "1115360",
    "end": "1116880"
  },
  {
    "text": "node that can be used in registration",
    "start": "1116880",
    "end": "1118480"
  },
  {
    "text": "entries",
    "start": "1118480",
    "end": "1120320"
  },
  {
    "text": "finally what if the spire server goes",
    "start": "1120320",
    "end": "1123039"
  },
  {
    "text": "down",
    "start": "1123039",
    "end": "1124640"
  },
  {
    "text": "well every estimate is configured with",
    "start": "1124640",
    "end": "1126320"
  },
  {
    "text": "the time to live and",
    "start": "1126320",
    "end": "1127919"
  },
  {
    "text": "it will continue working for that length",
    "start": "1127919",
    "end": "1129360"
  },
  {
    "text": "of time in our default configuration",
    "start": "1129360",
    "end": "1131679"
  },
  {
    "text": "we've set up the time to live to be four",
    "start": "1131679",
    "end": "1133360"
  },
  {
    "text": "hours",
    "start": "1133360",
    "end": "1134080"
  },
  {
    "text": "so if your spire server goes down you",
    "start": "1134080",
    "end": "1136320"
  },
  {
    "text": "have four full hours to fix it",
    "start": "1136320",
    "end": "1138240"
  },
  {
    "text": "before s-vids start failing in a lot of",
    "start": "1138240",
    "end": "1140559"
  },
  {
    "text": "organizations",
    "start": "1140559",
    "end": "1141520"
  },
  {
    "text": "four hours isn't long enough so they",
    "start": "1141520",
    "end": "1143360"
  },
  {
    "text": "make that time to live longer they make",
    "start": "1143360",
    "end": "1144960"
  },
  {
    "text": "it a week or two weeks",
    "start": "1144960",
    "end": "1146640"
  },
  {
    "text": "and that way if the spire server goes",
    "start": "1146640",
    "end": "1148160"
  },
  {
    "text": "down they actually have a good length of",
    "start": "1148160",
    "end": "1150240"
  },
  {
    "text": "time to be able to fix it",
    "start": "1150240",
    "end": "1151840"
  },
  {
    "text": "before connections between services",
    "start": "1151840",
    "end": "1153520"
  },
  {
    "text": "start to fail",
    "start": "1153520",
    "end": "1155679"
  },
  {
    "text": "now of course the problem with making",
    "start": "1155679",
    "end": "1157039"
  },
  {
    "text": "the ttl longer is then you have a",
    "start": "1157039",
    "end": "1158960"
  },
  {
    "text": "greater risk",
    "start": "1158960",
    "end": "1159919"
  },
  {
    "text": "that an attacker will be able to get in",
    "start": "1159919",
    "end": "1161840"
  },
  {
    "text": "and steal those acids",
    "start": "1161840",
    "end": "1163679"
  },
  {
    "text": "and be able to use them to make",
    "start": "1163679",
    "end": "1165919"
  },
  {
    "text": "unauthorized connections to services",
    "start": "1165919",
    "end": "1168080"
  },
  {
    "text": "so there's a trade-off between uptime",
    "start": "1168080",
    "end": "1170080"
  },
  {
    "text": "and security",
    "start": "1170080",
    "end": "1172720"
  },
  {
    "start": "1173000",
    "end": "1244000"
  },
  {
    "text": "one of the aspects of spire that i'm",
    "start": "1173919",
    "end": "1175600"
  },
  {
    "text": "most proud of is the growing ecosystem",
    "start": "1175600",
    "end": "1177919"
  },
  {
    "text": "of third-party tools and plugins for",
    "start": "1177919",
    "end": "1179600"
  },
  {
    "text": "using it in specific situations",
    "start": "1179600",
    "end": "1181840"
  },
  {
    "text": "the team at bloomberg has written a",
    "start": "1181840",
    "end": "1183840"
  },
  {
    "text": "plug-in for spire that uses a trusted",
    "start": "1183840",
    "end": "1185840"
  },
  {
    "text": "platform module",
    "start": "1185840",
    "end": "1187039"
  },
  {
    "text": "to do no data station so say you're",
    "start": "1187039",
    "end": "1189200"
  },
  {
    "text": "running physical hardware in the data",
    "start": "1189200",
    "end": "1190720"
  },
  {
    "text": "center",
    "start": "1190720",
    "end": "1191280"
  },
  {
    "text": "and you order a thousand new servers you",
    "start": "1191280",
    "end": "1193760"
  },
  {
    "text": "can do that no data station",
    "start": "1193760",
    "end": "1195200"
  },
  {
    "text": "automatically",
    "start": "1195200",
    "end": "1196160"
  },
  {
    "text": "using the secure unique identifiers that",
    "start": "1196160",
    "end": "1198480"
  },
  {
    "text": "are built into those servers at the",
    "start": "1198480",
    "end": "1199919"
  },
  {
    "text": "factory",
    "start": "1199919",
    "end": "1202240"
  },
  {
    "text": "they also developed vault auth aspire a",
    "start": "1202240",
    "end": "1205039"
  },
  {
    "text": "plug-in for hashicorp vault",
    "start": "1205039",
    "end": "1206720"
  },
  {
    "text": "that lets you connect to it using",
    "start": "1206720",
    "end": "1208159"
  },
  {
    "text": "aspiresvid so you can access shared",
    "start": "1208159",
    "end": "1210559"
  },
  {
    "text": "secrets",
    "start": "1210559",
    "end": "1211440"
  },
  {
    "text": "this is very useful for organizations",
    "start": "1211440",
    "end": "1213520"
  },
  {
    "text": "that are currently using shared secrets",
    "start": "1213520",
    "end": "1215360"
  },
  {
    "text": "for communication between their services",
    "start": "1215360",
    "end": "1217440"
  },
  {
    "text": "but they want to switch to spiffy",
    "start": "1217440",
    "end": "1219039"
  },
  {
    "text": "authentication gradually",
    "start": "1219039",
    "end": "1221360"
  },
  {
    "text": "finally github has released emissary a",
    "start": "1221360",
    "end": "1224080"
  },
  {
    "text": "sophisticated sidecar proxy based on",
    "start": "1224080",
    "end": "1226159"
  },
  {
    "text": "envoy",
    "start": "1226159",
    "end": "1226880"
  },
  {
    "text": "that implements a client for the",
    "start": "1226880",
    "end": "1228320"
  },
  {
    "text": "workload api and also flexible access",
    "start": "1228320",
    "end": "1231039"
  },
  {
    "text": "control based on svids",
    "start": "1231039",
    "end": "1232799"
  },
  {
    "text": "this lets you wrap your existing",
    "start": "1232799",
    "end": "1234559"
  },
  {
    "text": "services in a fully featured spiffy",
    "start": "1234559",
    "end": "1237039"
  },
  {
    "text": "client",
    "start": "1237039",
    "end": "1237679"
  },
  {
    "text": "so you don't have to change a lot of",
    "start": "1237679",
    "end": "1239039"
  },
  {
    "text": "code i'm really looking forward to using",
    "start": "1239039",
    "end": "1241200"
  },
  {
    "text": "this one in our own projects",
    "start": "1241200",
    "end": "1244559"
  },
  {
    "start": "1244000",
    "end": "1442000"
  },
  {
    "text": "now that you've heard a basic",
    "start": "1244640",
    "end": "1245760"
  },
  {
    "text": "introduction to spiffy you might be",
    "start": "1245760",
    "end": "1247520"
  },
  {
    "text": "interested",
    "start": "1247520",
    "end": "1248000"
  },
  {
    "text": "in who's using it well first of all",
    "start": "1248000",
    "end": "1249760"
  },
  {
    "text": "because spiffy is just a standard",
    "start": "1249760",
    "end": "1251679"
  },
  {
    "text": "parts of it are actually implemented in",
    "start": "1251679",
    "end": "1253280"
  },
  {
    "text": "most of the major service meshes like",
    "start": "1253280",
    "end": "1255120"
  },
  {
    "text": "istiokuma nsm",
    "start": "1255120",
    "end": "1256960"
  },
  {
    "text": "console connect hamlet or several other",
    "start": "1256960",
    "end": "1259360"
  },
  {
    "text": "service meshes that are all part of cncf",
    "start": "1259360",
    "end": "1261679"
  },
  {
    "text": "but as far as fire specifically",
    "start": "1261679",
    "end": "1263520"
  },
  {
    "text": "implementing the entire spiffy standard",
    "start": "1263520",
    "end": "1266080"
  },
  {
    "text": "separately as a first class service a",
    "start": "1266080",
    "end": "1269120"
  },
  {
    "text": "number of big companies are using it",
    "start": "1269120",
    "end": "1270480"
  },
  {
    "text": "within their infrastructure",
    "start": "1270480",
    "end": "1272000"
  },
  {
    "text": "including bite dance uber square github",
    "start": "1272000",
    "end": "1274640"
  },
  {
    "text": "bloomberg stripe",
    "start": "1274640",
    "end": "1276080"
  },
  {
    "text": "anthem and transferwise and because it's",
    "start": "1276080",
    "end": "1278480"
  },
  {
    "text": "open source there are probably others",
    "start": "1278480",
    "end": "1279840"
  },
  {
    "text": "that haven't announced that they're",
    "start": "1279840",
    "end": "1280880"
  },
  {
    "text": "using it",
    "start": "1280880",
    "end": "1281520"
  },
  {
    "text": "so this is very widely used software at",
    "start": "1281520",
    "end": "1283280"
  },
  {
    "text": "this point",
    "start": "1283280",
    "end": "1285280"
  },
  {
    "text": "where can you go to find out more well",
    "start": "1285280",
    "end": "1287679"
  },
  {
    "text": "you can go to our website spiffy.io",
    "start": "1287679",
    "end": "1290080"
  },
  {
    "text": "we also host regular community days",
    "start": "1290080",
    "end": "1292400"
  },
  {
    "text": "these are quarterly events",
    "start": "1292400",
    "end": "1293600"
  },
  {
    "text": "they're online these days of course",
    "start": "1293600",
    "end": "1295440"
  },
  {
    "text": "where members of the spiffy community",
    "start": "1295440",
    "end": "1297120"
  },
  {
    "text": "present and how they're using the",
    "start": "1297120",
    "end": "1298240"
  },
  {
    "text": "standard",
    "start": "1298240",
    "end": "1298960"
  },
  {
    "text": "and propose various improvements and",
    "start": "1298960",
    "end": "1300559"
  },
  {
    "text": "enhancements to the standard",
    "start": "1300559",
    "end": "1302240"
  },
  {
    "text": "and finally we have a very active slack",
    "start": "1302240",
    "end": "1304159"
  },
  {
    "text": "i'm always on the slack answering",
    "start": "1304159",
    "end": "1305600"
  },
  {
    "text": "questions about spiffy",
    "start": "1305600",
    "end": "1307120"
  },
  {
    "text": "and many others are too and that's where",
    "start": "1307120",
    "end": "1309440"
  },
  {
    "text": "you should go if you have",
    "start": "1309440",
    "end": "1310960"
  },
  {
    "text": "questions about how to get started or",
    "start": "1310960",
    "end": "1312880"
  },
  {
    "text": "ideas for improvements that make sense",
    "start": "1312880",
    "end": "1314559"
  },
  {
    "text": "for",
    "start": "1314559",
    "end": "1314960"
  },
  {
    "text": "for your use case we also have some more",
    "start": "1314960",
    "end": "1317760"
  },
  {
    "text": "talks you can watch",
    "start": "1317760",
    "end": "1319120"
  },
  {
    "text": "uh i've linked to them in the powerpoint",
    "start": "1319120",
    "end": "1320720"
  },
  {
    "text": "that you can download",
    "start": "1320720",
    "end": "1322400"
  },
  {
    "text": "first you can see an introduction to",
    "start": "1322400",
    "end": "1324320"
  },
  {
    "text": "spiffy inspire from evan gilman again",
    "start": "1324320",
    "end": "1326159"
  },
  {
    "text": "he's the author of",
    "start": "1326159",
    "end": "1327440"
  },
  {
    "text": "the zero trust networks books um",
    "start": "1327440",
    "end": "1330559"
  },
  {
    "text": "then we have another presentation that's",
    "start": "1330559",
    "end": "1332240"
  },
  {
    "text": "part of kubecon 2020",
    "start": "1332240",
    "end": "1334080"
  },
  {
    "text": "which is uh called running spire in",
    "start": "1334080",
    "end": "1336480"
  },
  {
    "text": "large scale enterprise grade",
    "start": "1336480",
    "end": "1337840"
  },
  {
    "text": "environments",
    "start": "1337840",
    "end": "1338799"
  },
  {
    "text": "that gets more into the federation high",
    "start": "1338799",
    "end": "1340640"
  },
  {
    "text": "availability upstream certificate",
    "start": "1340640",
    "end": "1342720"
  },
  {
    "text": "authorities",
    "start": "1342720",
    "end": "1343679"
  },
  {
    "text": "uh that kind of stuff that you need to",
    "start": "1343679",
    "end": "1345120"
  },
  {
    "text": "run spire for for truly large",
    "start": "1345120",
    "end": "1347440"
  },
  {
    "text": "environments like with tens of thousands",
    "start": "1347440",
    "end": "1348960"
  },
  {
    "text": "of agents",
    "start": "1348960",
    "end": "1350880"
  },
  {
    "text": "finally i've linked to another",
    "start": "1350880",
    "end": "1352080"
  },
  {
    "text": "presentation that's on uh our website",
    "start": "1352080",
    "end": "1354720"
  },
  {
    "text": "called building zero trust based",
    "start": "1354720",
    "end": "1356880"
  },
  {
    "text": "authentication in healthcare",
    "start": "1356880",
    "end": "1358799"
  },
  {
    "text": "with spire and this is actually a",
    "start": "1358799",
    "end": "1360320"
  },
  {
    "text": "presentation from the team",
    "start": "1360320",
    "end": "1362000"
  },
  {
    "text": "at anthem health insurance about how",
    "start": "1362000",
    "end": "1364240"
  },
  {
    "text": "they're using spire to make",
    "start": "1364240",
    "end": "1365919"
  },
  {
    "text": "their network super secure to protect",
    "start": "1365919",
    "end": "1368159"
  },
  {
    "text": "healthcare data",
    "start": "1368159",
    "end": "1370240"
  },
  {
    "text": "finally again we're part of hpe and hpe",
    "start": "1370240",
    "end": "1373120"
  },
  {
    "text": "runs its own annual",
    "start": "1373120",
    "end": "1374000"
  },
  {
    "text": "conference it actually just happened",
    "start": "1374000",
    "end": "1376159"
  },
  {
    "text": "it's all online these days of course",
    "start": "1376159",
    "end": "1378159"
  },
  {
    "text": "and there are a number of inspired deep",
    "start": "1378159",
    "end": "1379840"
  },
  {
    "text": "dives at that conference that",
    "start": "1379840",
    "end": "1381520"
  },
  {
    "text": "uh will will be very helpful if you're",
    "start": "1381520",
    "end": "1383280"
  },
  {
    "text": "trying to learn more about spire",
    "start": "1383280",
    "end": "1385120"
  },
  {
    "text": "finally again we're on github you can",
    "start": "1385120",
    "end": "1387360"
  },
  {
    "text": "just go to github",
    "start": "1387360",
    "end": "1388720"
  },
  {
    "text": "see what the open issues are maybe",
    "start": "1388720",
    "end": "1390400"
  },
  {
    "text": "contribute a patch maybe update some",
    "start": "1390400",
    "end": "1392320"
  },
  {
    "text": "documentation",
    "start": "1392320",
    "end": "1393679"
  },
  {
    "text": "we can always use the help",
    "start": "1393679",
    "end": "1396799"
  },
  {
    "text": "so again just to recap we discussed why",
    "start": "1396960",
    "end": "1399280"
  },
  {
    "text": "you need service identity",
    "start": "1399280",
    "end": "1400960"
  },
  {
    "text": "we discussed several different",
    "start": "1400960",
    "end": "1402000"
  },
  {
    "text": "approaches to service identity that",
    "start": "1402000",
    "end": "1404000"
  },
  {
    "text": "don't use spiffy such as perimeter",
    "start": "1404000",
    "end": "1406400"
  },
  {
    "text": "security",
    "start": "1406400",
    "end": "1407039"
  },
  {
    "text": "shared secrets web pki",
    "start": "1407039",
    "end": "1410480"
  },
  {
    "text": "things that that aren't a perfect fit",
    "start": "1410480",
    "end": "1412400"
  },
  {
    "text": "for the service identity challenge",
    "start": "1412400",
    "end": "1414640"
  },
  {
    "text": "then we discuss spiffy which is the",
    "start": "1414640",
    "end": "1416720"
  },
  {
    "text": "standard that i work on",
    "start": "1416720",
    "end": "1418240"
  },
  {
    "text": "we discuss spire which is the actual",
    "start": "1418240",
    "end": "1420000"
  },
  {
    "text": "implementation of that standard",
    "start": "1420000",
    "end": "1422480"
  },
  {
    "text": "and then we discuss next steps for",
    "start": "1422480",
    "end": "1424080"
  },
  {
    "text": "adopting spiffy within your organization",
    "start": "1424080",
    "end": "1428000"
  },
  {
    "text": "thank you very much everyone for your",
    "start": "1428240",
    "end": "1430480"
  },
  {
    "text": "time",
    "start": "1430480",
    "end": "1431600"
  },
  {
    "text": "you can follow up with me on twitter on",
    "start": "1431600",
    "end": "1434000"
  },
  {
    "text": "email",
    "start": "1434000",
    "end": "1434640"
  },
  {
    "text": "and we should have plenty of time for",
    "start": "1434640",
    "end": "1436000"
  },
  {
    "text": "questions within this session",
    "start": "1436000",
    "end": "1444559"
  },
  {
    "start": "1442000",
    "end": "1669000"
  },
  {
    "text": "hi everyone i hope you enjoyed the talk",
    "start": "1444559",
    "end": "1446960"
  },
  {
    "text": "and i'm here to answer a couple of",
    "start": "1446960",
    "end": "1448159"
  },
  {
    "text": "questions that came up during the talk",
    "start": "1448159",
    "end": "1450320"
  },
  {
    "text": "um the first question was are there",
    "start": "1450320",
    "end": "1452799"
  },
  {
    "text": "already established patterns to extend",
    "start": "1452799",
    "end": "1455279"
  },
  {
    "text": "user authentication using svids and this",
    "start": "1455279",
    "end": "1457360"
  },
  {
    "text": "is a really good",
    "start": "1457360",
    "end": "1460158"
  },
  {
    "text": "this is a really good question um we",
    "start": "1460480",
    "end": "1462880"
  },
  {
    "text": "actually have a working group",
    "start": "1462880",
    "end": "1464320"
  },
  {
    "text": "uh in the spiffy standards org",
    "start": "1464320",
    "end": "1467760"
  },
  {
    "text": "uh working on something called",
    "start": "1467760",
    "end": "1469039"
  },
  {
    "text": "transitive identity which is",
    "start": "1469039",
    "end": "1471200"
  },
  {
    "text": "going to be a way for one um",
    "start": "1471200",
    "end": "1474559"
  },
  {
    "text": "authentication service to essentially",
    "start": "1474559",
    "end": "1476880"
  },
  {
    "text": "prove",
    "start": "1476880",
    "end": "1477600"
  },
  {
    "text": "to the rest of your system that a user",
    "start": "1477600",
    "end": "1480799"
  },
  {
    "text": "has a particular identity so it'll be a",
    "start": "1480799",
    "end": "1482480"
  },
  {
    "text": "way to attach",
    "start": "1482480",
    "end": "1483679"
  },
  {
    "text": "user information to svid service",
    "start": "1483679",
    "end": "1486640"
  },
  {
    "text": "identity",
    "start": "1486640",
    "end": "1487600"
  },
  {
    "text": "that's work in progress and we're",
    "start": "1487600",
    "end": "1489039"
  },
  {
    "text": "discussing a bunch of different ways to",
    "start": "1489039",
    "end": "1490640"
  },
  {
    "text": "do it",
    "start": "1490640",
    "end": "1491360"
  },
  {
    "text": "and different trade-offs so i'd really",
    "start": "1491360",
    "end": "1492640"
  },
  {
    "text": "encourage you to get involved with that",
    "start": "1492640",
    "end": "1494640"
  },
  {
    "text": "um but we're just working on it now and",
    "start": "1494640",
    "end": "1496799"
  },
  {
    "text": "it's not quite ready yet",
    "start": "1496799",
    "end": "1498799"
  },
  {
    "text": "um the next question from uh shyam",
    "start": "1498799",
    "end": "1502480"
  },
  {
    "text": "sundar um will different instances have",
    "start": "1502480",
    "end": "1505840"
  },
  {
    "text": "different spiffy ids",
    "start": "1505840",
    "end": "1507600"
  },
  {
    "text": "uh will the same application have a",
    "start": "1507600",
    "end": "1509200"
  },
  {
    "text": "unique spiffy id if there's a deployment",
    "start": "1509200",
    "end": "1511919"
  },
  {
    "text": "with three replicas will have three",
    "start": "1511919",
    "end": "1513600"
  },
  {
    "text": "different spiffy ids",
    "start": "1513600",
    "end": "1515039"
  },
  {
    "text": "and that's a really good question too uh",
    "start": "1515039",
    "end": "1517360"
  },
  {
    "text": "the easy answer is",
    "start": "1517360",
    "end": "1519360"
  },
  {
    "text": "uh basically you can do whatever makes",
    "start": "1519360",
    "end": "1521600"
  },
  {
    "text": "sense for your organization there's no",
    "start": "1521600",
    "end": "1523200"
  },
  {
    "text": "rules about this",
    "start": "1523200",
    "end": "1524720"
  },
  {
    "text": "and we do have organizations doing a",
    "start": "1524720",
    "end": "1526159"
  },
  {
    "text": "bunch of different things what i'd",
    "start": "1526159",
    "end": "1527840"
  },
  {
    "text": "really recommend",
    "start": "1527840",
    "end": "1529200"
  },
  {
    "text": "is uh just have one spiffy id uh",
    "start": "1529200",
    "end": "1532640"
  },
  {
    "text": "for all the instances of your service",
    "start": "1532640",
    "end": "1534400"
  },
  {
    "text": "and that way when you scale out multiple",
    "start": "1534400",
    "end": "1536559"
  },
  {
    "text": "instances of the service",
    "start": "1536559",
    "end": "1538480"
  },
  {
    "text": "uh they can all have the same",
    "start": "1538480",
    "end": "1540080"
  },
  {
    "text": "authentication properties",
    "start": "1540080",
    "end": "1542159"
  },
  {
    "text": "um but that's uh that's what's really",
    "start": "1542159",
    "end": "1545200"
  },
  {
    "text": "interesting about spiffy is",
    "start": "1545200",
    "end": "1546880"
  },
  {
    "text": "it's really flexible and people are",
    "start": "1546880",
    "end": "1548240"
  },
  {
    "text": "using it in a bunch of different ways",
    "start": "1548240",
    "end": "1550320"
  },
  {
    "text": "for a bunch of different needs um next",
    "start": "1550320",
    "end": "1553600"
  },
  {
    "text": "question",
    "start": "1553600",
    "end": "1554480"
  },
  {
    "text": "from nattie on slack uh would spiffy",
    "start": "1554480",
    "end": "1557840"
  },
  {
    "text": "inspire work for ias workloads",
    "start": "1557840",
    "end": "1560159"
  },
  {
    "text": "i.e traditional servers and vms and the",
    "start": "1560159",
    "end": "1562559"
  },
  {
    "text": "answer is yes",
    "start": "1562559",
    "end": "1563840"
  },
  {
    "text": "actually a lot of what makes this so",
    "start": "1563840",
    "end": "1565279"
  },
  {
    "text": "complicated is because we're trying to",
    "start": "1565279",
    "end": "1567520"
  },
  {
    "text": "support",
    "start": "1567520",
    "end": "1568159"
  },
  {
    "text": "um individual vms that are outside of",
    "start": "1568159",
    "end": "1570480"
  },
  {
    "text": "kubernetes",
    "start": "1570480",
    "end": "1571840"
  },
  {
    "text": "uh so we support kubernetes but we're",
    "start": "1571840",
    "end": "1574159"
  },
  {
    "text": "not super tightly linked to kubernetes",
    "start": "1574159",
    "end": "1576000"
  },
  {
    "text": "and we also work",
    "start": "1576000",
    "end": "1576960"
  },
  {
    "text": "on uh bare metal servers we work on all",
    "start": "1576960",
    "end": "1579440"
  },
  {
    "text": "kinds of different platforms",
    "start": "1579440",
    "end": "1581120"
  },
  {
    "text": "uh we have plugins that can talk to all",
    "start": "1581120",
    "end": "1582720"
  },
  {
    "text": "kinds of different platforms",
    "start": "1582720",
    "end": "1584240"
  },
  {
    "text": "um again i work for hpe we're a server",
    "start": "1584240",
    "end": "1587440"
  },
  {
    "text": "company",
    "start": "1587440",
    "end": "1589120"
  },
  {
    "text": "so we're working on some features that",
    "start": "1589120",
    "end": "1591200"
  },
  {
    "text": "integrate with hpe",
    "start": "1591200",
    "end": "1592720"
  },
  {
    "text": "bare metal servers uh as well",
    "start": "1592720",
    "end": "1595760"
  },
  {
    "text": "um next oh sorry that's the same",
    "start": "1595760",
    "end": "1598640"
  },
  {
    "text": "question",
    "start": "1598640",
    "end": "1599520"
  },
  {
    "text": "um another question that comes up really",
    "start": "1599520",
    "end": "1601760"
  },
  {
    "text": "frequently is",
    "start": "1601760",
    "end": "1603279"
  },
  {
    "text": "uh can i use spiffy ideas to",
    "start": "1603279",
    "end": "1605039"
  },
  {
    "text": "authenticate to my",
    "start": "1605039",
    "end": "1606880"
  },
  {
    "text": "databases maybe databases that are",
    "start": "1606880",
    "end": "1608640"
  },
  {
    "text": "running in amazon rds or the equivalent",
    "start": "1608640",
    "end": "1611760"
  },
  {
    "text": "on azure or gcp",
    "start": "1611760",
    "end": "1614400"
  },
  {
    "text": "and the answer is yes we have a way to",
    "start": "1614400",
    "end": "1616080"
  },
  {
    "text": "do that we can",
    "start": "1616080",
    "end": "1618320"
  },
  {
    "text": "share all the root certificates the root",
    "start": "1618320",
    "end": "1620960"
  },
  {
    "text": "certificate bundle from your spiffy",
    "start": "1620960",
    "end": "1622559"
  },
  {
    "text": "server",
    "start": "1622559",
    "end": "1623520"
  },
  {
    "text": "in a standard format for oidc",
    "start": "1623520",
    "end": "1627279"
  },
  {
    "text": "federation so then you can use your",
    "start": "1627279",
    "end": "1629279"
  },
  {
    "text": "spiffy svid",
    "start": "1629279",
    "end": "1630480"
  },
  {
    "text": "to connect seamlessly to a database",
    "start": "1630480",
    "end": "1632159"
  },
  {
    "text": "that's in some managed service",
    "start": "1632159",
    "end": "1633760"
  },
  {
    "text": "that doesn't know about spiffy that's",
    "start": "1633760",
    "end": "1635760"
  },
  {
    "text": "something that i think is really useful",
    "start": "1635760",
    "end": "1637919"
  },
  {
    "text": "because often the database security is",
    "start": "1637919",
    "end": "1640000"
  },
  {
    "text": "really the weak point in a lot of",
    "start": "1640000",
    "end": "1642000"
  },
  {
    "text": "um environments so uh are there any more",
    "start": "1642000",
    "end": "1645520"
  },
  {
    "text": "questions",
    "start": "1645520",
    "end": "1646559"
  },
  {
    "text": "you can uh feel free to follow up with",
    "start": "1646559",
    "end": "1648399"
  },
  {
    "text": "me on slack or",
    "start": "1648399",
    "end": "1650080"
  },
  {
    "text": "uh in the q a box on in toronto i guess",
    "start": "1650080",
    "end": "1654240"
  },
  {
    "text": "uh and i'll be here to answer answer",
    "start": "1654240",
    "end": "1656559"
  },
  {
    "text": "questions for a while",
    "start": "1656559",
    "end": "1657679"
  },
  {
    "text": "you can also email me or join the spiffy",
    "start": "1657679",
    "end": "1659919"
  },
  {
    "text": "slack",
    "start": "1659919",
    "end": "1660880"
  },
  {
    "text": "and uh again thank you very much i'm",
    "start": "1660880",
    "end": "1663200"
  },
  {
    "text": "really happy to be here",
    "start": "1663200",
    "end": "1664480"
  },
  {
    "text": "i guess we're done just a couple minutes",
    "start": "1664480",
    "end": "1666320"
  },
  {
    "text": "early",
    "start": "1666320",
    "end": "1667520"
  },
  {
    "text": "so thanks everyone",
    "start": "1667520",
    "end": "1671279"
  }
]