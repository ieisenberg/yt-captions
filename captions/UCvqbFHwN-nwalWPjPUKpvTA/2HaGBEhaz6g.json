[
  {
    "text": "hi i'm steve cavallo and i'm going to",
    "start": "240",
    "end": "2320"
  },
  {
    "text": "talk about cross plane and promises",
    "start": "2320",
    "end": "5920"
  },
  {
    "text": "promise theory is a way we can think",
    "start": "5920",
    "end": "7440"
  },
  {
    "text": "about interactions between agents within",
    "start": "7440",
    "end": "9599"
  },
  {
    "text": "a system",
    "start": "9599",
    "end": "11200"
  },
  {
    "text": "in promise theory we say get into the",
    "start": "11200",
    "end": "13679"
  },
  {
    "text": "state",
    "start": "13679",
    "end": "14240"
  },
  {
    "text": "instead of do this we're familiar with",
    "start": "14240",
    "end": "16800"
  },
  {
    "text": "working the promise theory way",
    "start": "16800",
    "end": "18480"
  },
  {
    "text": "maybe from using chef and puppet and",
    "start": "18480",
    "end": "20640"
  },
  {
    "text": "other config management tools",
    "start": "20640",
    "end": "22080"
  },
  {
    "text": "or most likely from using kubernetes",
    "start": "22080",
    "end": "25599"
  },
  {
    "text": "in kubernetes we define and think in",
    "start": "25599",
    "end": "28240"
  },
  {
    "text": "terms of end state",
    "start": "28240",
    "end": "30240"
  },
  {
    "text": "in kubernetes you don't write a stateful",
    "start": "30240",
    "end": "32238"
  },
  {
    "text": "set script",
    "start": "32239",
    "end": "33440"
  },
  {
    "text": "you define and apply a stateful set",
    "start": "33440",
    "end": "35600"
  },
  {
    "text": "manifest",
    "start": "35600",
    "end": "36559"
  },
  {
    "text": "and kubernetes promises to attempt to",
    "start": "36559",
    "end": "38640"
  },
  {
    "text": "get into your desired state",
    "start": "38640",
    "end": "42160"
  },
  {
    "text": "kubernetes uses a very literal",
    "start": "42160",
    "end": "44719"
  },
  {
    "text": "implementation of promise theory",
    "start": "44719",
    "end": "46559"
  },
  {
    "text": "and many benefits can be realized at",
    "start": "46559",
    "end": "48239"
  },
  {
    "text": "scale when promise theory is applied",
    "start": "48239",
    "end": "52480"
  },
  {
    "text": "it's also best if we can break things up",
    "start": "52800",
    "end": "54719"
  },
  {
    "text": "into small sets of primitives which can",
    "start": "54719",
    "end": "56239"
  },
  {
    "text": "be applied independently",
    "start": "56239",
    "end": "59840"
  },
  {
    "text": "how does it all stack up and how can we",
    "start": "62000",
    "end": "64239"
  },
  {
    "text": "apply promise theory to some existing",
    "start": "64239",
    "end": "66080"
  },
  {
    "text": "tools",
    "start": "66080",
    "end": "68400"
  },
  {
    "text": "in terraform we define our model in hcl",
    "start": "68560",
    "end": "71439"
  },
  {
    "text": "but the challenge in terms of promise",
    "start": "71439",
    "end": "73040"
  },
  {
    "text": "theory is",
    "start": "73040",
    "end": "73840"
  },
  {
    "text": "we don't know exactly what our model is",
    "start": "73840",
    "end": "75920"
  },
  {
    "text": "until we run a plan or apply to generate",
    "start": "75920",
    "end": "78080"
  },
  {
    "text": "it",
    "start": "78080",
    "end": "79200"
  },
  {
    "text": "until then it's not a true promise",
    "start": "79200",
    "end": "82960"
  },
  {
    "text": "in our first example we're creating a",
    "start": "83439",
    "end": "86080"
  },
  {
    "text": "spot",
    "start": "86080",
    "end": "86479"
  },
  {
    "text": "instance but we don't know what it will",
    "start": "86479",
    "end": "88960"
  },
  {
    "text": "evaluate to",
    "start": "88960",
    "end": "90240"
  },
  {
    "text": "until runtime and in fact we don't know",
    "start": "90240",
    "end": "94079"
  },
  {
    "text": "what it will evaluate to in multiple",
    "start": "94079",
    "end": "96320"
  },
  {
    "text": "different environments",
    "start": "96320",
    "end": "97280"
  },
  {
    "text": "until runtime in our second example",
    "start": "97280",
    "end": "101200"
  },
  {
    "text": "we didn't know that this terraform apply",
    "start": "101200",
    "end": "103439"
  },
  {
    "text": "would destroy our resource",
    "start": "103439",
    "end": "106880"
  },
  {
    "text": "any human invention required makes it",
    "start": "108159",
    "end": "110479"
  },
  {
    "text": "difficult to support at scale",
    "start": "110479",
    "end": "115840"
  },
  {
    "text": "with terraform there's also no control",
    "start": "117680",
    "end": "119520"
  },
  {
    "text": "plane",
    "start": "119520",
    "end": "121520"
  },
  {
    "text": "so there's no guarantee of system state",
    "start": "121520",
    "end": "124079"
  },
  {
    "text": "and",
    "start": "124079",
    "end": "124719"
  },
  {
    "text": "we have no way of knowing whether our",
    "start": "124719",
    "end": "127759"
  },
  {
    "text": "existing promises are being kept",
    "start": "127759",
    "end": "131360"
  },
  {
    "text": "where terraform is great though is",
    "start": "131360",
    "end": "132959"
  },
  {
    "text": "determining what changes to enact to",
    "start": "132959",
    "end": "134640"
  },
  {
    "text": "bring a system into the",
    "start": "134640",
    "end": "135920"
  },
  {
    "text": "desired state however at scale",
    "start": "135920",
    "end": "140560"
  },
  {
    "text": "managing anything is procedural",
    "start": "140560",
    "end": "143920"
  },
  {
    "text": "and when terraform must be run in a",
    "start": "143920",
    "end": "145760"
  },
  {
    "text": "specific order",
    "start": "145760",
    "end": "147120"
  },
  {
    "text": "or has specific dependencies",
    "start": "147120",
    "end": "150239"
  },
  {
    "text": "it gets very difficult to manage",
    "start": "150239",
    "end": "153360"
  },
  {
    "text": "taking my previous examples if a human",
    "start": "153360",
    "end": "156239"
  },
  {
    "text": "has to intervene",
    "start": "156239",
    "end": "157760"
  },
  {
    "text": "to see if any resources will be changed",
    "start": "157760",
    "end": "161440"
  },
  {
    "text": "as part of a deploy it gets very",
    "start": "161440",
    "end": "163519"
  },
  {
    "text": "difficult to",
    "start": "163519",
    "end": "164720"
  },
  {
    "text": "to maintain its skill",
    "start": "164720",
    "end": "170160"
  },
  {
    "text": "formation allows definition in json yaml",
    "start": "170160",
    "end": "173280"
  },
  {
    "text": "with very low interpolation it is much",
    "start": "173280",
    "end": "177040"
  },
  {
    "text": "closer to a promise cloud formation also",
    "start": "177040",
    "end": "180640"
  },
  {
    "text": "has a control plane",
    "start": "180640",
    "end": "181840"
  },
  {
    "text": "so control theory can be applied",
    "start": "181840",
    "end": "185840"
  },
  {
    "text": "we have much better idea of what the",
    "start": "186879",
    "end": "189280"
  },
  {
    "text": "state of our system is",
    "start": "189280",
    "end": "192400"
  },
  {
    "text": "so at scale with cloud formation we get",
    "start": "194000",
    "end": "196239"
  },
  {
    "text": "high predictability of outcome",
    "start": "196239",
    "end": "197860"
  },
  {
    "text": "[Music]",
    "start": "197860",
    "end": "199440"
  },
  {
    "text": "we have a better model of our end states",
    "start": "199440",
    "end": "202640"
  },
  {
    "text": "we have a control plane that can",
    "start": "202640",
    "end": "204799"
  },
  {
    "text": "maintain drift",
    "start": "204799",
    "end": "206239"
  },
  {
    "text": "in states we still have the challenge",
    "start": "206239",
    "end": "209760"
  },
  {
    "text": "though when we have",
    "start": "209760",
    "end": "210799"
  },
  {
    "text": "many cloud formation stacks with",
    "start": "210799",
    "end": "212640"
  },
  {
    "text": "dependencies and specific orders",
    "start": "212640",
    "end": "214400"
  },
  {
    "text": "that it becomes imperative",
    "start": "214400",
    "end": "217519"
  },
  {
    "text": "cross plane allows definition in json",
    "start": "219680",
    "end": "222959"
  },
  {
    "text": "yaml",
    "start": "222959",
    "end": "223840"
  },
  {
    "text": "and by nature must be aligned with",
    "start": "223840",
    "end": "225599"
  },
  {
    "text": "promise theory because it's a kubernetes",
    "start": "225599",
    "end": "227360"
  },
  {
    "text": "operator",
    "start": "227360",
    "end": "228799"
  },
  {
    "text": "very very close to the little literal",
    "start": "228799",
    "end": "230799"
  },
  {
    "text": "interpretation of promise theory",
    "start": "230799",
    "end": "234159"
  },
  {
    "text": "because it has a controller it can",
    "start": "234400",
    "end": "236159"
  },
  {
    "text": "maintain our state",
    "start": "236159",
    "end": "237519"
  },
  {
    "text": "so as you can see my example we have",
    "start": "237519",
    "end": "240159"
  },
  {
    "text": "controllability",
    "start": "240159",
    "end": "241760"
  },
  {
    "text": "observability and the controller ensures",
    "start": "241760",
    "end": "245519"
  },
  {
    "text": "that we're in our expected state",
    "start": "245519",
    "end": "249040"
  },
  {
    "text": "so at scale crossplane gives us high",
    "start": "249599",
    "end": "251599"
  },
  {
    "text": "predictability of outcomes",
    "start": "251599",
    "end": "253760"
  },
  {
    "text": "in fact all of its dependencies are",
    "start": "253760",
    "end": "256560"
  },
  {
    "text": "promises",
    "start": "256560",
    "end": "257600"
  },
  {
    "text": "you can see in my example i am role",
    "start": "257600",
    "end": "260239"
  },
  {
    "text": "policy attachment",
    "start": "260239",
    "end": "262079"
  },
  {
    "text": "policy r ref is a promise a roll ref",
    "start": "262079",
    "end": "265120"
  },
  {
    "text": "is a promise we no longer have to worry",
    "start": "265120",
    "end": "268080"
  },
  {
    "text": "about order",
    "start": "268080",
    "end": "269120"
  },
  {
    "text": "crossplane will keep retrying until",
    "start": "269120",
    "end": "271520"
  },
  {
    "text": "those promises are satisfied",
    "start": "271520",
    "end": "274960"
  },
  {
    "text": "and versioning will allow us to verify",
    "start": "274960",
    "end": "277360"
  },
  {
    "text": "which promises are deployed",
    "start": "277360",
    "end": "282320"
  },
  {
    "text": "now in this screenshot i have all of my",
    "start": "282320",
    "end": "285840"
  },
  {
    "text": "cross plane",
    "start": "285840",
    "end": "286639"
  },
  {
    "text": "i am rolls inversions and visibilities",
    "start": "286639",
    "end": "289919"
  },
  {
    "text": "into various environments so using your",
    "start": "289919",
    "end": "292960"
  },
  {
    "text": "favorites",
    "start": "292960",
    "end": "293520"
  },
  {
    "text": "flavor of cd you can get visibility into",
    "start": "293520",
    "end": "297120"
  },
  {
    "text": "what versions of the promises exist and",
    "start": "297120",
    "end": "299680"
  },
  {
    "text": "whether they're in the promised state or",
    "start": "299680",
    "end": "301280"
  },
  {
    "text": "not",
    "start": "301280",
    "end": "303280"
  },
  {
    "text": "in the promise theory we can think of",
    "start": "303280",
    "end": "306080"
  },
  {
    "text": "many many resources",
    "start": "306080",
    "end": "307360"
  },
  {
    "text": "each maintaining the promise date and",
    "start": "307360",
    "end": "309280"
  },
  {
    "text": "trusting all the other",
    "start": "309280",
    "end": "310800"
  },
  {
    "text": "actors in cooperation in harmony",
    "start": "310800",
    "end": "313919"
  },
  {
    "text": "so at scale we can see cross planes",
    "start": "313919",
    "end": "316080"
  },
  {
    "text": "maintaining all of its promises",
    "start": "316080",
    "end": "317919"
  },
  {
    "text": "across multiple systems",
    "start": "317919",
    "end": "320960"
  },
  {
    "text": "and much larger systems in conclusion",
    "start": "320960",
    "end": "324800"
  },
  {
    "text": "cross plane keeps its promises",
    "start": "324800",
    "end": "329520"
  }
]