[
  {
    "start": "0",
    "end": "62000"
  },
  {
    "text": "hello my name is carlos sanchez and i'm",
    "start": "1680",
    "end": "3919"
  },
  {
    "text": "here to talk to you about dedicated",
    "start": "3919",
    "end": "5680"
  },
  {
    "text": "infrastructure in a multi-tenant world",
    "start": "5680",
    "end": "8960"
  },
  {
    "text": "why would you care about this",
    "start": "8960",
    "end": "11040"
  },
  {
    "text": "our use case was we have multi-tenant",
    "start": "11040",
    "end": "13840"
  },
  {
    "text": "kubernetes clusters",
    "start": "13840",
    "end": "15839"
  },
  {
    "text": "where each tenant may want to have",
    "start": "15839",
    "end": "18320"
  },
  {
    "text": "dedicated",
    "start": "18320",
    "end": "19840"
  },
  {
    "text": "networking features like dedicated ips",
    "start": "19840",
    "end": "24000"
  },
  {
    "text": "dedicated",
    "start": "24000",
    "end": "25760"
  },
  {
    "text": "network connections or vpn connections",
    "start": "25760",
    "end": "28560"
  },
  {
    "text": "things like that and",
    "start": "28560",
    "end": "31359"
  },
  {
    "text": "we built this solution on top of envoy",
    "start": "31359",
    "end": "35280"
  },
  {
    "text": "and",
    "start": "35280",
    "end": "36160"
  },
  {
    "text": "i think it's uh",
    "start": "36160",
    "end": "38079"
  },
  {
    "text": "for us it's been a great success to be",
    "start": "38079",
    "end": "41040"
  },
  {
    "text": "able to do this while keeping",
    "start": "41040",
    "end": "43280"
  },
  {
    "text": "multi-tenancy on the kubernetes cluster",
    "start": "43280",
    "end": "45760"
  },
  {
    "text": "and creating this",
    "start": "45760",
    "end": "47600"
  },
  {
    "text": "infrastructure with with emboy",
    "start": "47600",
    "end": "51120"
  },
  {
    "text": "kind of",
    "start": "51120",
    "end": "52239"
  },
  {
    "text": "driving it",
    "start": "52239",
    "end": "53680"
  },
  {
    "text": "and it's been great for us so maybe it's",
    "start": "53680",
    "end": "56960"
  },
  {
    "text": "it's good for you too",
    "start": "56960",
    "end": "59120"
  },
  {
    "text": "so",
    "start": "59120",
    "end": "60320"
  },
  {
    "text": "let's go",
    "start": "60320",
    "end": "62239"
  },
  {
    "text": "i'm a cloud engineer at the adobe",
    "start": "62239",
    "end": "64640"
  },
  {
    "text": "experience manager cloud service",
    "start": "64640",
    "end": "67600"
  },
  {
    "text": "that's the product i'm going to talk to",
    "start": "67600",
    "end": "69040"
  },
  {
    "text": "you about today and where we built this",
    "start": "69040",
    "end": "71200"
  },
  {
    "text": "at adobe",
    "start": "71200",
    "end": "72720"
  },
  {
    "text": "and",
    "start": "72720",
    "end": "73840"
  },
  {
    "text": "my background is a lot of option source",
    "start": "73840",
    "end": "78799"
  },
  {
    "text": "work over the years i'm the author of",
    "start": "78799",
    "end": "81280"
  },
  {
    "text": "the yankees kubernetes plugin i started",
    "start": "81280",
    "end": "84960"
  },
  {
    "text": "years ago",
    "start": "84960",
    "end": "86479"
  },
  {
    "text": "and i'm a long time open source",
    "start": "86479",
    "end": "88159"
  },
  {
    "text": "contributor at open source projects like",
    "start": "88159",
    "end": "90560"
  },
  {
    "text": "jenkins maven puppet and so on",
    "start": "90560",
    "end": "95200"
  },
  {
    "start": "96000",
    "end": "132000"
  },
  {
    "text": "so",
    "start": "96479",
    "end": "97360"
  },
  {
    "text": "brief introduction about the experience",
    "start": "97360",
    "end": "99759"
  },
  {
    "text": "manager is a content management system",
    "start": "99759",
    "end": "102880"
  },
  {
    "text": "digitalizes asset management digital",
    "start": "102880",
    "end": "105040"
  },
  {
    "text": "enrollment and forms and is used by many",
    "start": "105040",
    "end": "107920"
  },
  {
    "text": "14 100 companies this was even before",
    "start": "107920",
    "end": "111680"
  },
  {
    "text": "the cloud service was",
    "start": "111680",
    "end": "113680"
  },
  {
    "text": "was created",
    "start": "113680",
    "end": "115680"
  },
  {
    "text": "and it was already a distributed java",
    "start": "115680",
    "end": "118159"
  },
  {
    "text": "osgi application that used a lot of open",
    "start": "118159",
    "end": "121119"
  },
  {
    "text": "source components from apaches of our",
    "start": "121119",
    "end": "122880"
  },
  {
    "text": "foundation",
    "start": "122880",
    "end": "124240"
  },
  {
    "text": "and it has a huge market of extension",
    "start": "124240",
    "end": "127759"
  },
  {
    "text": "developers writing code for aem",
    "start": "127759",
    "end": "132000"
  },
  {
    "start": "132000",
    "end": "267000"
  },
  {
    "text": "so",
    "start": "132480",
    "end": "133280"
  },
  {
    "text": "adobe experience manager on kubernetes",
    "start": "133280",
    "end": "135680"
  },
  {
    "text": "we took what was already there we",
    "start": "135680",
    "end": "138000"
  },
  {
    "text": "started running it in kubernetes like a",
    "start": "138000",
    "end": "139840"
  },
  {
    "text": "couple of years ago",
    "start": "139840",
    "end": "142640"
  },
  {
    "text": "running on asia we have more than 18",
    "start": "142640",
    "end": "145680"
  },
  {
    "text": "clusters already",
    "start": "145680",
    "end": "147440"
  },
  {
    "text": "across multiple regions u.s europe all",
    "start": "147440",
    "end": "150640"
  },
  {
    "text": "over the world",
    "start": "150640",
    "end": "152400"
  },
  {
    "text": "and",
    "start": "152400",
    "end": "153920"
  },
  {
    "text": "an interesting point is that we have",
    "start": "153920",
    "end": "156319"
  },
  {
    "text": "adobe has a dedicated team that runs the",
    "start": "156319",
    "end": "158959"
  },
  {
    "text": "clusters for us and for other products",
    "start": "158959",
    "end": "161760"
  },
  {
    "text": "so this is also limiting the amount of",
    "start": "161760",
    "end": "164560"
  },
  {
    "text": "customizations we can do to the to the",
    "start": "164560",
    "end": "166400"
  },
  {
    "text": "kubernetes clusters",
    "start": "166400",
    "end": "170040"
  },
  {
    "text": "a very",
    "start": "170800",
    "end": "172000"
  },
  {
    "text": "specific use case is that customers can",
    "start": "172000",
    "end": "174560"
  },
  {
    "text": "run their own code",
    "start": "174560",
    "end": "176400"
  },
  {
    "text": "um so this uh the customers can create",
    "start": "176400",
    "end": "179760"
  },
  {
    "text": "their own extensions and run them on the",
    "start": "179760",
    "end": "182159"
  },
  {
    "text": "cloud in this in a.m",
    "start": "182159",
    "end": "185840"
  },
  {
    "text": "that's why cluster permissions are very",
    "start": "185840",
    "end": "187680"
  },
  {
    "text": "limited for security and we have to",
    "start": "187680",
    "end": "190560"
  },
  {
    "text": "enforce like traffic",
    "start": "190560",
    "end": "192480"
  },
  {
    "text": "leaving the clusters uh has to be",
    "start": "192480",
    "end": "194319"
  },
  {
    "text": "encrypted",
    "start": "194319",
    "end": "196239"
  },
  {
    "text": "we use namespace to provide a scope on",
    "start": "196239",
    "end": "199280"
  },
  {
    "text": "network isolation quartus permissions",
    "start": "199280",
    "end": "202560"
  },
  {
    "text": "and trying to keep every tenant separate",
    "start": "202560",
    "end": "205599"
  },
  {
    "text": "from other tenants",
    "start": "205599",
    "end": "208640"
  },
  {
    "text": "if you want to know more about",
    "start": "208640",
    "end": "210879"
  },
  {
    "text": "these details you can watch my",
    "start": "210879",
    "end": "213120"
  },
  {
    "text": "kubernetes stock uh",
    "start": "213120",
    "end": "215599"
  },
  {
    "text": "my kubecon 2020 talk",
    "start": "215599",
    "end": "218080"
  },
  {
    "text": "and where i last year when i went",
    "start": "218080",
    "end": "220400"
  },
  {
    "text": "through more details today i'm just",
    "start": "220400",
    "end": "222400"
  },
  {
    "text": "gonna focus more on the envoy details",
    "start": "222400",
    "end": "225280"
  },
  {
    "text": "and on this",
    "start": "225280",
    "end": "226720"
  },
  {
    "text": "networking",
    "start": "226720",
    "end": "228080"
  },
  {
    "text": "infrastructure that we set up",
    "start": "228080",
    "end": "231440"
  },
  {
    "text": "so for the dedicated infrastructure part",
    "start": "232560",
    "end": "235920"
  },
  {
    "text": "as i said customers want to have uh",
    "start": "235920",
    "end": "238400"
  },
  {
    "text": "their own like egress ips because by",
    "start": "238400",
    "end": "241120"
  },
  {
    "text": "default all the tenants running on the",
    "start": "241120",
    "end": "242959"
  },
  {
    "text": "same",
    "start": "242959",
    "end": "244000"
  },
  {
    "text": "on the same cluster would get the",
    "start": "244000",
    "end": "245599"
  },
  {
    "text": "cluster igor's ips",
    "start": "245599",
    "end": "248799"
  },
  {
    "text": "maybe they want to have private",
    "start": "248799",
    "end": "250319"
  },
  {
    "text": "connections uh v-net peering private",
    "start": "250319",
    "end": "253120"
  },
  {
    "text": "link express route all these things that",
    "start": "253120",
    "end": "255200"
  },
  {
    "text": "the cloud provides you that cloud",
    "start": "255200",
    "end": "257040"
  },
  {
    "text": "provider does",
    "start": "257040",
    "end": "258880"
  },
  {
    "text": "or they want to connect through vpn to",
    "start": "258880",
    "end": "261759"
  },
  {
    "text": "their on-premise or other cloud assets",
    "start": "261759",
    "end": "266560"
  },
  {
    "text": "so we",
    "start": "267040",
    "end": "268400"
  },
  {
    "text": "built the solution on top of envoy we",
    "start": "268400",
    "end": "270800"
  },
  {
    "text": "run envoy on virtual machines",
    "start": "270800",
    "end": "273680"
  },
  {
    "text": "and we run envoy on both sidecars inside",
    "start": "273680",
    "end": "276720"
  },
  {
    "text": "kubernetes",
    "start": "276720",
    "end": "278160"
  },
  {
    "text": "and that's",
    "start": "278160",
    "end": "279600"
  },
  {
    "text": "a bit of how",
    "start": "279600",
    "end": "281199"
  },
  {
    "text": "the whole system works",
    "start": "281199",
    "end": "284000"
  },
  {
    "text": "on",
    "start": "284000",
    "end": "285680"
  },
  {
    "text": "on the",
    "start": "285680",
    "end": "287280"
  },
  {
    "text": "setup or the architecture",
    "start": "287280",
    "end": "289120"
  },
  {
    "text": "we have like each tenant we give them a",
    "start": "289120",
    "end": "291600"
  },
  {
    "text": "virtual network and a virtual machine",
    "start": "291600",
    "end": "294320"
  },
  {
    "text": "how to scale set and load balancer these",
    "start": "294320",
    "end": "296560"
  },
  {
    "text": "virtual machines are running envoy",
    "start": "296560",
    "end": "300560"
  },
  {
    "text": "the v-net can be privately connected to",
    "start": "302479",
    "end": "304880"
  },
  {
    "text": "the customer network so if they wanted",
    "start": "304880",
    "end": "307600"
  },
  {
    "text": "to have",
    "start": "307600",
    "end": "309039"
  },
  {
    "text": "this vpn or if",
    "start": "309039",
    "end": "312880"
  },
  {
    "text": "we wanted to support express route",
    "start": "312880",
    "end": "315600"
  },
  {
    "text": "things like that",
    "start": "315600",
    "end": "316880"
  },
  {
    "text": "we could use the cloud provided",
    "start": "316880",
    "end": "320639"
  },
  {
    "text": "features and products to connect this",
    "start": "320639",
    "end": "323039"
  },
  {
    "text": "v-net to the to the customer so the",
    "start": "323039",
    "end": "325840"
  },
  {
    "text": "v-net where the envoy vms are running",
    "start": "325840",
    "end": "330080"
  },
  {
    "text": "the load balancer in front of the virton",
    "start": "330320",
    "end": "332320"
  },
  {
    "text": "machines",
    "start": "332320",
    "end": "333440"
  },
  {
    "text": "uh provides the a dedicated public rear",
    "start": "333440",
    "end": "336160"
  },
  {
    "text": "sip that is only for those vms",
    "start": "336160",
    "end": "339680"
  },
  {
    "text": "so all the traffic going out of those",
    "start": "339680",
    "end": "341520"
  },
  {
    "text": "vms will have a dedicated egress ip",
    "start": "341520",
    "end": "346160"
  },
  {
    "text": "the private load balancer on the on the",
    "start": "346880",
    "end": "350080"
  },
  {
    "text": "right hand side gives the dedicated",
    "start": "350080",
    "end": "353039"
  },
  {
    "text": "private but egress ip for all the",
    "start": "353039",
    "end": "355600"
  },
  {
    "text": "traffic that is going to their customer",
    "start": "355600",
    "end": "357840"
  },
  {
    "text": "network",
    "start": "357840",
    "end": "359199"
  },
  {
    "text": "through vpn or dedicated connections",
    "start": "359199",
    "end": "362479"
  },
  {
    "text": "on the kubernetes side we have the java",
    "start": "362479",
    "end": "365039"
  },
  {
    "text": "virtual machine configured with an envoy",
    "start": "365039",
    "end": "368080"
  },
  {
    "text": "sidecar as an http proxy",
    "start": "368080",
    "end": "371360"
  },
  {
    "text": "and so",
    "start": "371360",
    "end": "372479"
  },
  {
    "text": "the traffic",
    "start": "372479",
    "end": "373919"
  },
  {
    "text": "from",
    "start": "373919",
    "end": "374800"
  },
  {
    "text": "that via jvm is going to the invoice",
    "start": "374800",
    "end": "377759"
  },
  {
    "text": "sidecar",
    "start": "377759",
    "end": "379840"
  },
  {
    "text": "between the sidecar envoy and the envoy",
    "start": "379840",
    "end": "382960"
  },
  {
    "text": "in the virtual machines we have an http",
    "start": "382960",
    "end": "385600"
  },
  {
    "text": "2 tunnel",
    "start": "385600",
    "end": "387199"
  },
  {
    "text": "that is encrypted",
    "start": "387199",
    "end": "389680"
  },
  {
    "text": "and authorized with mtls",
    "start": "389680",
    "end": "394240"
  },
  {
    "text": "so",
    "start": "394240",
    "end": "395120"
  },
  {
    "text": "what are the benefits of for us of using",
    "start": "395120",
    "end": "397759"
  },
  {
    "text": "envoy",
    "start": "397759",
    "end": "398800"
  },
  {
    "text": "it is uh for for the java virtual",
    "start": "398800",
    "end": "401680"
  },
  {
    "text": "machine we have a simple and transparent",
    "start": "401680",
    "end": "403919"
  },
  {
    "text": "configuration uh we're using hdb proxy",
    "start": "403919",
    "end": "407039"
  },
  {
    "text": "system properties so this is like java",
    "start": "407039",
    "end": "409199"
  },
  {
    "text": "level",
    "start": "409199",
    "end": "411360"
  },
  {
    "text": "configuration that will apply to",
    "start": "411360",
    "end": "414479"
  },
  {
    "text": "most or if not all the http connections",
    "start": "414479",
    "end": "417280"
  },
  {
    "text": "that got out of the of the jvm",
    "start": "417280",
    "end": "420319"
  },
  {
    "text": "and we can also support",
    "start": "420319",
    "end": "422560"
  },
  {
    "text": "any other protocols not in http by using",
    "start": "422560",
    "end": "426479"
  },
  {
    "text": "different listeners on the envoy sidecar",
    "start": "426479",
    "end": "429199"
  },
  {
    "text": "and all traffic from that pod into the",
    "start": "429199",
    "end": "431840"
  },
  {
    "text": "vms is encrypted",
    "start": "431840",
    "end": "435360"
  },
  {
    "text": "the virtual network on nature allows us",
    "start": "435759",
    "end": "438240"
  },
  {
    "text": "to configuration of vpn private",
    "start": "438240",
    "end": "440000"
  },
  {
    "text": "connections at cloud level as a service",
    "start": "440000",
    "end": "442080"
  },
  {
    "text": "and there's nothing else we have to",
    "start": "442080",
    "end": "444960"
  },
  {
    "text": "to set up or buy infrastructure and",
    "start": "444960",
    "end": "447919"
  },
  {
    "text": "anything like that",
    "start": "447919",
    "end": "449680"
  },
  {
    "text": "and mtls prevents unauthorized",
    "start": "449680",
    "end": "452000"
  },
  {
    "text": "connections and",
    "start": "452000",
    "end": "453840"
  },
  {
    "text": "also one tenant connecting to another",
    "start": "453840",
    "end": "455840"
  },
  {
    "text": "tenant envoy so this is how we can",
    "start": "455840",
    "end": "458080"
  },
  {
    "text": "isolate",
    "start": "458080",
    "end": "460720"
  },
  {
    "text": "some of the issues we hit or or the main",
    "start": "461120",
    "end": "463840"
  },
  {
    "text": "issue is that",
    "start": "463840",
    "end": "465520"
  },
  {
    "text": "we have to manage as one set of",
    "start": "465520",
    "end": "467120"
  },
  {
    "text": "certificates for each tenant",
    "start": "467120",
    "end": "469520"
  },
  {
    "text": "for side cars and for vms and that comes",
    "start": "469520",
    "end": "472000"
  },
  {
    "text": "with like rotation expiration and all",
    "start": "472000",
    "end": "474639"
  },
  {
    "text": "the things that we have to do with with",
    "start": "474639",
    "end": "477440"
  },
  {
    "text": "certificates which becomes",
    "start": "477440",
    "end": "479680"
  },
  {
    "text": "complex over time",
    "start": "479680",
    "end": "482720"
  },
  {
    "text": "how is the end voice sidecar set up",
    "start": "483120",
    "end": "486960"
  },
  {
    "text": "so we have one listener with a tcp proxy",
    "start": "486960",
    "end": "490240"
  },
  {
    "text": "filter for http on https",
    "start": "490240",
    "end": "494080"
  },
  {
    "text": "by using http connect so using it as a",
    "start": "494080",
    "end": "497199"
  },
  {
    "text": "hdb proxy that gives envoy the",
    "start": "497199",
    "end": "500160"
  },
  {
    "text": "destination where that connection should",
    "start": "500160",
    "end": "502160"
  },
  {
    "text": "go",
    "start": "502160",
    "end": "504400"
  },
  {
    "text": "for each non-hdb port we have one",
    "start": "504400",
    "end": "507039"
  },
  {
    "text": "listener",
    "start": "507039",
    "end": "508240"
  },
  {
    "text": "that",
    "start": "508240",
    "end": "509520"
  },
  {
    "text": "hard codes that the destination on the",
    "start": "509520",
    "end": "511919"
  },
  {
    "text": "envoy configuration under the tunneling",
    "start": "511919",
    "end": "514000"
  },
  {
    "text": "config",
    "start": "514000",
    "end": "516479"
  },
  {
    "text": "and we have one cluster",
    "start": "516880",
    "end": "519200"
  },
  {
    "text": "that just points to the envoy load",
    "start": "519200",
    "end": "521919"
  },
  {
    "text": "balancer",
    "start": "521919",
    "end": "523518"
  },
  {
    "text": "that is in front of the envoy vms",
    "start": "523519",
    "end": "526080"
  },
  {
    "text": "and",
    "start": "526080",
    "end": "527040"
  },
  {
    "text": "we have the tls transport circuit",
    "start": "527040",
    "end": "528959"
  },
  {
    "text": "configuration there",
    "start": "528959",
    "end": "532160"
  },
  {
    "text": "so quickly through some code uh we have",
    "start": "532640",
    "end": "536480"
  },
  {
    "text": "uh",
    "start": "536480",
    "end": "537920"
  },
  {
    "text": "the filter chains and uh we are",
    "start": "537920",
    "end": "541680"
  },
  {
    "text": "listening on port three one two eight",
    "start": "541680",
    "end": "544240"
  },
  {
    "text": "uh where we just get all the",
    "start": "544240",
    "end": "546959"
  },
  {
    "text": "http proxy traffic and we send it to the",
    "start": "546959",
    "end": "549760"
  },
  {
    "text": "cluster cluster zero",
    "start": "549760",
    "end": "553040"
  },
  {
    "text": "for non-http uh we just put tunneling",
    "start": "553040",
    "end": "556399"
  },
  {
    "text": "config host name what's the destination",
    "start": "556399",
    "end": "558640"
  },
  {
    "text": "host that we want to send every all the",
    "start": "558640",
    "end": "561200"
  },
  {
    "text": "traffic that is coming through that port",
    "start": "561200",
    "end": "564720"
  },
  {
    "text": "and on the cluster side uh we just put",
    "start": "564800",
    "end": "568480"
  },
  {
    "text": "the in the socket address the",
    "start": "568480",
    "end": "570640"
  },
  {
    "text": "destination address",
    "start": "570640",
    "end": "572640"
  },
  {
    "text": "uh the envoy load balancer",
    "start": "572640",
    "end": "576160"
  },
  {
    "text": "that it and the port that where the load",
    "start": "576160",
    "end": "578480"
  },
  {
    "text": "balancer is listening",
    "start": "578480",
    "end": "581279"
  },
  {
    "text": "so those are the main",
    "start": "581279",
    "end": "584640"
  },
  {
    "text": "the main configuration options",
    "start": "584720",
    "end": "587440"
  },
  {
    "text": "and on the tls configuration",
    "start": "587440",
    "end": "590800"
  },
  {
    "text": "we use we point",
    "start": "590800",
    "end": "594399"
  },
  {
    "text": "we point to envoy to the sds",
    "start": "594399",
    "end": "595920"
  },
  {
    "text": "configuration files",
    "start": "595920",
    "end": "597839"
  },
  {
    "text": "for the certificates and the certificate",
    "start": "597839",
    "end": "600720"
  },
  {
    "text": "authority",
    "start": "600720",
    "end": "603279"
  },
  {
    "start": "603000",
    "end": "764000"
  },
  {
    "text": "what about the envoy vm side",
    "start": "603680",
    "end": "606160"
  },
  {
    "text": "how is this configured",
    "start": "606160",
    "end": "608000"
  },
  {
    "text": "we just have one connection manager that",
    "start": "608000",
    "end": "610560"
  },
  {
    "text": "listens with a connector break",
    "start": "610560",
    "end": "613839"
  },
  {
    "text": "so every traffic coming in",
    "start": "613839",
    "end": "616640"
  },
  {
    "text": "and we will check the connect header and",
    "start": "616640",
    "end": "618640"
  },
  {
    "text": "then it knows where the destination is",
    "start": "618640",
    "end": "622399"
  },
  {
    "text": "we have one dynamic forward proxy for",
    "start": "622399",
    "end": "625040"
  },
  {
    "text": "cluster for all the destinations we",
    "start": "625040",
    "end": "627040"
  },
  {
    "text": "don't have to com",
    "start": "627040",
    "end": "628399"
  },
  {
    "text": "to hard code any destinations so neither",
    "start": "628399",
    "end": "631680"
  },
  {
    "text": "on the listener side or on the cluster",
    "start": "631680",
    "end": "633440"
  },
  {
    "text": "side",
    "start": "633440",
    "end": "635600"
  },
  {
    "text": "so on the listener side http connection",
    "start": "635600",
    "end": "637920"
  },
  {
    "text": "manager and port 443",
    "start": "637920",
    "end": "640480"
  },
  {
    "text": "and this is accepting the connections",
    "start": "640480",
    "end": "642320"
  },
  {
    "text": "from the invoice sidecar",
    "start": "642320",
    "end": "644839"
  },
  {
    "text": "and uh we also need to",
    "start": "644839",
    "end": "648399"
  },
  {
    "text": "configure a bit differently what https",
    "start": "648399",
    "end": "651120"
  },
  {
    "text": "and http is",
    "start": "651120",
    "end": "653279"
  },
  {
    "text": "and the braid type is connect so all the",
    "start": "653279",
    "end": "656079"
  },
  {
    "text": "http 2 connections coming in from from",
    "start": "656079",
    "end": "658640"
  },
  {
    "text": "one name through the tunnel",
    "start": "658640",
    "end": "662160"
  },
  {
    "text": "they get sent to the to the right",
    "start": "662160",
    "end": "663600"
  },
  {
    "text": "destination",
    "start": "663600",
    "end": "666319"
  },
  {
    "text": "and",
    "start": "667200",
    "end": "668320"
  },
  {
    "text": "yeah upgrade type is connect",
    "start": "668320",
    "end": "671040"
  },
  {
    "text": "and",
    "start": "671040",
    "end": "673360"
  },
  {
    "text": "yeah we just set the dynamic forward",
    "start": "673360",
    "end": "675680"
  },
  {
    "text": "proxy",
    "start": "675680",
    "end": "676800"
  },
  {
    "text": "dns setup and all that",
    "start": "676800",
    "end": "680320"
  },
  {
    "text": "again for the tls configuration we point",
    "start": "681920",
    "end": "684720"
  },
  {
    "text": "and void to the",
    "start": "684720",
    "end": "686240"
  },
  {
    "text": "sds config files um both um",
    "start": "686240",
    "end": "690959"
  },
  {
    "text": "for the certificates and the ca and very",
    "start": "690959",
    "end": "693360"
  },
  {
    "text": "important we require a client",
    "start": "693360",
    "end": "695120"
  },
  {
    "text": "certificate we set that request client",
    "start": "695120",
    "end": "697279"
  },
  {
    "text": "certificate to true so it uh",
    "start": "697279",
    "end": "700720"
  },
  {
    "text": "it is effectively mtls",
    "start": "700720",
    "end": "705519"
  },
  {
    "text": "and on the cluster side it's just the",
    "start": "706720",
    "end": "709360"
  },
  {
    "text": "dynamic forward proxy as i mentioned",
    "start": "709360",
    "end": "713440"
  },
  {
    "text": "for sds configuration we have a separate",
    "start": "714480",
    "end": "717120"
  },
  {
    "text": "file because uh this way allows us to",
    "start": "717120",
    "end": "720720"
  },
  {
    "text": "reload the certificates we have having",
    "start": "720720",
    "end": "722800"
  },
  {
    "text": "to touch envoy and we will automatically",
    "start": "722800",
    "end": "725040"
  },
  {
    "text": "read the",
    "start": "725040",
    "end": "726320"
  },
  {
    "text": "the new certificate files when there's",
    "start": "726320",
    "end": "728800"
  },
  {
    "text": "uh they changed",
    "start": "728800",
    "end": "730639"
  },
  {
    "text": "and we set the match subject alt names",
    "start": "730639",
    "end": "733920"
  },
  {
    "text": "so we use the sound subject alternative",
    "start": "733920",
    "end": "736079"
  },
  {
    "text": "names",
    "start": "736079",
    "end": "737120"
  },
  {
    "text": "to match uh exactly the",
    "start": "737120",
    "end": "740959"
  },
  {
    "text": "tenant that we want to allow in those",
    "start": "740959",
    "end": "743279"
  },
  {
    "text": "set of vms so",
    "start": "743279",
    "end": "745120"
  },
  {
    "text": "the tenant that is set on this side has",
    "start": "745120",
    "end": "747279"
  },
  {
    "text": "to match the tenant uh",
    "start": "747279",
    "end": "749519"
  },
  {
    "text": "the certificate",
    "start": "749519",
    "end": "751600"
  },
  {
    "text": "song that has been generated for the for",
    "start": "751600",
    "end": "754880"
  },
  {
    "text": "the sidecar so both sidecar and vmm",
    "start": "754880",
    "end": "758000"
  },
  {
    "text": "voice",
    "start": "758000",
    "end": "759279"
  },
  {
    "text": "certificates have to have the same",
    "start": "759279",
    "end": "761600"
  },
  {
    "text": "subject alternative name",
    "start": "761600",
    "end": "764800"
  },
  {
    "start": "764000",
    "end": "833000"
  },
  {
    "text": "for",
    "start": "765360",
    "end": "766720"
  },
  {
    "text": "certificate rotation",
    "start": "766720",
    "end": "768720"
  },
  {
    "text": "we use fault agents to generate",
    "start": "768720",
    "end": "771040"
  },
  {
    "text": "short-lived certificates both on the",
    "start": "771040",
    "end": "772639"
  },
  {
    "text": "sidecar and the vm",
    "start": "772639",
    "end": "774560"
  },
  {
    "text": "we have the certificate authority store",
    "start": "774560",
    "end": "776480"
  },
  {
    "text": "involved",
    "start": "776480",
    "end": "777600"
  },
  {
    "text": "and we have a password-less",
    "start": "777600",
    "end": "779600"
  },
  {
    "text": "authentication from kubernetes and azure",
    "start": "779600",
    "end": "782240"
  },
  {
    "text": "vms to the to vault",
    "start": "782240",
    "end": "784720"
  },
  {
    "text": "so we don't have any i mean it's using",
    "start": "784720",
    "end": "786959"
  },
  {
    "text": "the the apis there",
    "start": "786959",
    "end": "790399"
  },
  {
    "text": "the certificates are configured as i",
    "start": "790399",
    "end": "792720"
  },
  {
    "text": "mentioned in separate sds files and this",
    "start": "792720",
    "end": "795839"
  },
  {
    "text": "ensures that they are automatically",
    "start": "795839",
    "end": "797360"
  },
  {
    "text": "reload uh unchanged so when the voltage",
    "start": "797360",
    "end": "800000"
  },
  {
    "text": "in rotates the certificates envoy",
    "start": "800000",
    "end": "801920"
  },
  {
    "text": "automatically notices",
    "start": "801920",
    "end": "804800"
  },
  {
    "text": "and the ca is the same",
    "start": "804800",
    "end": "806959"
  },
  {
    "text": "same setup",
    "start": "806959",
    "end": "808560"
  },
  {
    "text": "just two different files",
    "start": "808560",
    "end": "811760"
  },
  {
    "text": "there are some alternatives you can use",
    "start": "811760",
    "end": "813600"
  },
  {
    "text": "cert manager on kubernetes side to do",
    "start": "813600",
    "end": "816240"
  },
  {
    "text": "that rotation for the sidecars",
    "start": "816240",
    "end": "818560"
  },
  {
    "text": "or you could use a spfe",
    "start": "818560",
    "end": "820880"
  },
  {
    "text": "that's another option we just didn't",
    "start": "820880",
    "end": "823199"
  },
  {
    "text": "want to",
    "start": "823199",
    "end": "825040"
  },
  {
    "text": "complicate our first implementation but",
    "start": "825040",
    "end": "827440"
  },
  {
    "text": "that's something we also consider",
    "start": "827440",
    "end": "831519"
  },
  {
    "start": "833000",
    "end": "931000"
  },
  {
    "text": "what about employee debugging this is",
    "start": "833279",
    "end": "835120"
  },
  {
    "text": "something that is probably the most",
    "start": "835120",
    "end": "837040"
  },
  {
    "text": "useful",
    "start": "837040",
    "end": "838240"
  },
  {
    "text": "advice that i can give on all the issues",
    "start": "838240",
    "end": "840959"
  },
  {
    "text": "we hit",
    "start": "840959",
    "end": "843040"
  },
  {
    "text": "a lot of tls connection errors only show",
    "start": "843040",
    "end": "845199"
  },
  {
    "text": "up on the",
    "start": "845199",
    "end": "846399"
  },
  {
    "text": "debug logs under the connection",
    "start": "846399",
    "end": "848160"
  },
  {
    "text": "component",
    "start": "848160",
    "end": "849600"
  },
  {
    "text": "and when there's a tls connection error",
    "start": "849600",
    "end": "852240"
  },
  {
    "text": "the client like the sidecar side",
    "start": "852240",
    "end": "855680"
  },
  {
    "text": "only sees the socket closing messages",
    "start": "855680",
    "end": "857760"
  },
  {
    "text": "and doesn't get any feedback on why it",
    "start": "857760",
    "end": "860880"
  },
  {
    "text": "is",
    "start": "860880",
    "end": "861839"
  },
  {
    "text": "the connection is not is not working",
    "start": "861839",
    "end": "864720"
  },
  {
    "text": "so some errors that you should look for",
    "start": "864720",
    "end": "868800"
  },
  {
    "text": "um",
    "start": "868800",
    "end": "869680"
  },
  {
    "text": "so",
    "start": "869680",
    "end": "870480"
  },
  {
    "text": "on the config side uh",
    "start": "870480",
    "end": "873360"
  },
  {
    "text": "level warning at least this is one is",
    "start": "873360",
    "end": "874959"
  },
  {
    "text": "level warning that you weren't gonna get",
    "start": "874959",
    "end": "877040"
  },
  {
    "text": "a key values mismatch if the key doesn't",
    "start": "877040",
    "end": "879120"
  },
  {
    "text": "match the certificate",
    "start": "879120",
    "end": "881600"
  },
  {
    "text": "but all these other ones are only on the",
    "start": "881600",
    "end": "884079"
  },
  {
    "text": "debug level",
    "start": "884079",
    "end": "885519"
  },
  {
    "text": "so alert certificate expired",
    "start": "885519",
    "end": "888800"
  },
  {
    "text": "okay your certificate is no longer valid",
    "start": "888800",
    "end": "891920"
  },
  {
    "text": "certificate verify failed or certificate",
    "start": "891920",
    "end": "895040"
  },
  {
    "text": "unknown it means that the certificate",
    "start": "895040",
    "end": "898880"
  },
  {
    "text": "subject alternative name does not match",
    "start": "898880",
    "end": "901680"
  },
  {
    "text": "the expected one",
    "start": "901680",
    "end": "903519"
  },
  {
    "text": "and you only get this on the debug logs",
    "start": "903519",
    "end": "907600"
  },
  {
    "text": "so",
    "start": "907600",
    "end": "908399"
  },
  {
    "text": "if there's an example if the certificate",
    "start": "908399",
    "end": "911440"
  },
  {
    "text": "sun doesn't",
    "start": "911440",
    "end": "912959"
  },
  {
    "text": "does not match",
    "start": "912959",
    "end": "914320"
  },
  {
    "text": "uh this is the the log errors you're",
    "start": "914320",
    "end": "916560"
  },
  {
    "text": "gonna get uh certificate verify failed",
    "start": "916560",
    "end": "919519"
  },
  {
    "text": "on the vm side",
    "start": "919519",
    "end": "921199"
  },
  {
    "text": "and this one shows on the sidecar side",
    "start": "921199",
    "end": "923760"
  },
  {
    "text": "as",
    "start": "923760",
    "end": "924720"
  },
  {
    "text": "this one does show as a alert",
    "start": "924720",
    "end": "927360"
  },
  {
    "text": "certificate unknown",
    "start": "927360",
    "end": "930480"
  },
  {
    "start": "931000",
    "end": "988000"
  },
  {
    "text": "how do we use",
    "start": "932639",
    "end": "934480"
  },
  {
    "text": "all this",
    "start": "934480",
    "end": "935600"
  },
  {
    "text": "envoy setup",
    "start": "935600",
    "end": "937360"
  },
  {
    "text": "so for http and hbbs as a normal hdb",
    "start": "937360",
    "end": "941199"
  },
  {
    "text": "proxy for other ports we just open a",
    "start": "941199",
    "end": "943759"
  },
  {
    "text": "port in localhost in the pod",
    "start": "943759",
    "end": "947199"
  },
  {
    "text": "so in the sidecar and it's available for",
    "start": "947199",
    "end": "949199"
  },
  {
    "text": "any any container in the pod",
    "start": "949199",
    "end": "952720"
  },
  {
    "text": "on java we just set this instant",
    "start": "952720",
    "end": "954880"
  },
  {
    "text": "properties",
    "start": "954880",
    "end": "956480"
  },
  {
    "text": "that are the default ones uh that any",
    "start": "956480",
    "end": "960160"
  },
  {
    "text": "or most of the java clients will uh",
    "start": "960160",
    "end": "963600"
  },
  {
    "text": "honor",
    "start": "963600",
    "end": "964880"
  },
  {
    "text": "so this point to localhost and the port",
    "start": "964880",
    "end": "967279"
  },
  {
    "text": "where everybody is listening",
    "start": "967279",
    "end": "970399"
  },
  {
    "text": "um",
    "start": "970800",
    "end": "972240"
  },
  {
    "text": "and there's a specific case on java like",
    "start": "972240",
    "end": "975120"
  },
  {
    "text": "the apache http client ignores and you",
    "start": "975120",
    "end": "977600"
  },
  {
    "text": "have to",
    "start": "977600",
    "end": "979120"
  },
  {
    "text": "explicitly tell them tell the client to",
    "start": "979120",
    "end": "981920"
  },
  {
    "text": "use the system properties so this is",
    "start": "981920",
    "end": "984320"
  },
  {
    "text": "something we've we've seen",
    "start": "984320",
    "end": "987839"
  },
  {
    "start": "988000",
    "end": "1106000"
  },
  {
    "text": "some issues with long-running",
    "start": "989440",
    "end": "991360"
  },
  {
    "text": "connections and typical connections for",
    "start": "991360",
    "end": "995600"
  },
  {
    "text": "database like where you have connection",
    "start": "995600",
    "end": "998160"
  },
  {
    "text": "pooling uh or lo and run running",
    "start": "998160",
    "end": "1000720"
  },
  {
    "text": "connections",
    "start": "1000720",
    "end": "1002079"
  },
  {
    "text": "something we have to do is configure max",
    "start": "1002079",
    "end": "1004320"
  },
  {
    "text": "stream duration and stream idle timeout",
    "start": "1004320",
    "end": "1008560"
  },
  {
    "text": "because otherwise our connections were",
    "start": "1008560",
    "end": "1010320"
  },
  {
    "text": "getting uh disconnected very early",
    "start": "1010320",
    "end": "1013360"
  },
  {
    "text": "and we had also to increase the load",
    "start": "1013360",
    "end": "1015199"
  },
  {
    "text": "balancer timeouts to make sure these",
    "start": "1015199",
    "end": "1017440"
  },
  {
    "text": "connections didn't get dropped",
    "start": "1017440",
    "end": "1019360"
  },
  {
    "text": "but yeah this is uh something that you",
    "start": "1019360",
    "end": "1021759"
  },
  {
    "text": "can tweak and you should if you have",
    "start": "1021759",
    "end": "1023600"
  },
  {
    "text": "long running connections the defaults",
    "start": "1023600",
    "end": "1025760"
  },
  {
    "text": "don't really",
    "start": "1025760",
    "end": "1028160"
  },
  {
    "text": "they drop the connections very early",
    "start": "1028160",
    "end": "1032319"
  },
  {
    "text": "for the connection pools we advise",
    "start": "1032400",
    "end": "1034240"
  },
  {
    "text": "customers to use",
    "start": "1034240",
    "end": "1037199"
  },
  {
    "text": "validation of connections before use",
    "start": "1037199",
    "end": "1039520"
  },
  {
    "text": "like in java jdbc drivers this is just a",
    "start": "1039520",
    "end": "1042319"
  },
  {
    "text": "configuration option where you say",
    "start": "1042319",
    "end": "1044240"
  },
  {
    "text": "whenever you pick a connection from the",
    "start": "1044240",
    "end": "1046160"
  },
  {
    "text": "pool",
    "start": "1046160",
    "end": "1047199"
  },
  {
    "text": "just",
    "start": "1047199",
    "end": "1048000"
  },
  {
    "text": "execute this query to verify that the",
    "start": "1048000",
    "end": "1050000"
  },
  {
    "text": "connection is good",
    "start": "1050000",
    "end": "1053640"
  },
  {
    "text": "and some tweaks we have done yeah the",
    "start": "1053760",
    "end": "1057120"
  },
  {
    "text": "max stream duration extreme idle timeout",
    "start": "1057120",
    "end": "1061039"
  },
  {
    "text": "these are set up",
    "start": "1061039",
    "end": "1063280"
  },
  {
    "text": "to increase",
    "start": "1063280",
    "end": "1064720"
  },
  {
    "text": "the to prevent the connections for being",
    "start": "1064720",
    "end": "1067200"
  },
  {
    "text": "dropped",
    "start": "1067200",
    "end": "1069600"
  },
  {
    "text": "on http",
    "start": "1070320",
    "end": "1072080"
  },
  {
    "text": "you can also",
    "start": "1072080",
    "end": "1074880"
  },
  {
    "text": "proxy connections through this invoice",
    "start": "1075280",
    "end": "1079280"
  },
  {
    "text": "one case we've seen",
    "start": "1079280",
    "end": "1081520"
  },
  {
    "text": "is like httpd sends the proxy request",
    "start": "1081520",
    "end": "1084240"
  },
  {
    "text": "with a connect 1.0 http 1.0 header",
    "start": "1084240",
    "end": "1088400"
  },
  {
    "text": "and so that we saw envoy was dropping",
    "start": "1088400",
    "end": "1091200"
  },
  {
    "text": "these connections",
    "start": "1091200",
    "end": "1092880"
  },
  {
    "text": "and we had to",
    "start": "1092880",
    "end": "1094640"
  },
  {
    "text": "set these hdb protocol options except",
    "start": "1094640",
    "end": "1097120"
  },
  {
    "text": "http 1 0 that is by default uh disabled",
    "start": "1097120",
    "end": "1102480"
  },
  {
    "text": "so that's something that took us a bit",
    "start": "1102480",
    "end": "1104160"
  },
  {
    "text": "to figure out",
    "start": "1104160",
    "end": "1106880"
  },
  {
    "start": "1106000",
    "end": "1138000"
  },
  {
    "text": "some more resources you can",
    "start": "1106960",
    "end": "1109520"
  },
  {
    "text": "find about how all this is set up uh",
    "start": "1109520",
    "end": "1113200"
  },
  {
    "text": "very interesting reads",
    "start": "1113200",
    "end": "1115120"
  },
  {
    "text": "uh the app http upgrades on how these",
    "start": "1115120",
    "end": "1119360"
  },
  {
    "text": "http 2 connections tunnels work",
    "start": "1119360",
    "end": "1123039"
  },
  {
    "text": "tls for all the mtls setup",
    "start": "1123039",
    "end": "1126160"
  },
  {
    "text": "and the double proxy example on the",
    "start": "1126160",
    "end": "1128160"
  },
  {
    "text": "sandbox",
    "start": "1128160",
    "end": "1129440"
  },
  {
    "text": "those were very very helpful to",
    "start": "1129440",
    "end": "1131600"
  },
  {
    "text": "understand how emboy would be configured",
    "start": "1131600",
    "end": "1133840"
  },
  {
    "text": "for these use cases",
    "start": "1133840",
    "end": "1137559"
  },
  {
    "start": "1138000",
    "end": "1231000"
  },
  {
    "text": "so that's all from me",
    "start": "1138559",
    "end": "1141039"
  },
  {
    "text": "if you have",
    "start": "1141039",
    "end": "1143520"
  },
  {
    "text": "a use case like this",
    "start": "1143520",
    "end": "1146240"
  },
  {
    "text": "then i hope this helped you and show you",
    "start": "1146240",
    "end": "1149679"
  },
  {
    "text": "what you could do with",
    "start": "1149679",
    "end": "1151520"
  },
  {
    "text": "envoy what you could do to have",
    "start": "1151520",
    "end": "1154799"
  },
  {
    "text": "multi-tenant kubernetes clusters and",
    "start": "1154799",
    "end": "1157520"
  },
  {
    "text": "also have a dedicated infrastructure",
    "start": "1157520",
    "end": "1160480"
  },
  {
    "text": "like networking",
    "start": "1160480",
    "end": "1162960"
  },
  {
    "text": "uh this this v-net solution providing a",
    "start": "1162960",
    "end": "1166000"
  },
  {
    "text": "v-net for each tenant",
    "start": "1166000",
    "end": "1167840"
  },
  {
    "text": "allows us to use any of the cloud",
    "start": "1167840",
    "end": "1170080"
  },
  {
    "text": "providers um products",
    "start": "1170080",
    "end": "1173120"
  },
  {
    "text": "to set up",
    "start": "1173120",
    "end": "1174400"
  },
  {
    "text": "a vpn we could set up a dedicated ips we",
    "start": "1174400",
    "end": "1178720"
  },
  {
    "text": "can set up",
    "start": "1178720",
    "end": "1180080"
  },
  {
    "text": "an expert route the private connections",
    "start": "1180080",
    "end": "1183039"
  },
  {
    "text": "anything like that any cluster",
    "start": "1183039",
    "end": "1186000"
  },
  {
    "text": "sorry any",
    "start": "1186000",
    "end": "1187200"
  },
  {
    "text": "cloud provider will allow you to do that",
    "start": "1187200",
    "end": "1189360"
  },
  {
    "text": "once you have a virtual network and then",
    "start": "1189360",
    "end": "1192240"
  },
  {
    "text": "the configuration with envoy and all",
    "start": "1192240",
    "end": "1194720"
  },
  {
    "text": "this architecture with envoy allows us",
    "start": "1194720",
    "end": "1197520"
  },
  {
    "text": "to breach",
    "start": "1197520",
    "end": "1198960"
  },
  {
    "text": "the the gap between the kubernetes",
    "start": "1198960",
    "end": "1201280"
  },
  {
    "text": "clusters",
    "start": "1201280",
    "end": "1202640"
  },
  {
    "text": "and the virtual machines with ember",
    "start": "1202640",
    "end": "1205039"
  },
  {
    "text": "running on this v-net",
    "start": "1205039",
    "end": "1206640"
  },
  {
    "text": "so",
    "start": "1206640",
    "end": "1207360"
  },
  {
    "text": "this uh",
    "start": "1207360",
    "end": "1209039"
  },
  {
    "text": "this is one solution that",
    "start": "1209039",
    "end": "1211760"
  },
  {
    "text": "we are",
    "start": "1211760",
    "end": "1212880"
  },
  {
    "text": "running now",
    "start": "1212880",
    "end": "1214159"
  },
  {
    "text": "and it has solved a lot of these",
    "start": "1214159",
    "end": "1217919"
  },
  {
    "text": "use cases for us so i hope it's it's",
    "start": "1217919",
    "end": "1220640"
  },
  {
    "text": "also useful for you",
    "start": "1220640",
    "end": "1222799"
  },
  {
    "text": "and i think i can answer",
    "start": "1222799",
    "end": "1225679"
  },
  {
    "text": "i want to be able to answer some",
    "start": "1225679",
    "end": "1227200"
  },
  {
    "text": "questions",
    "start": "1227200",
    "end": "1228880"
  },
  {
    "text": "thank you and have a good day",
    "start": "1228880",
    "end": "1232880"
  }
]