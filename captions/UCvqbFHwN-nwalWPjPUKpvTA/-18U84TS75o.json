[
  {
    "text": "hello everybody welcome to this",
    "start": "80",
    "end": "2960"
  },
  {
    "text": "presentation about kubernetes advanced",
    "start": "2960",
    "end": "5120"
  },
  {
    "text": "networking testing with kine",
    "start": "5120",
    "end": "6879"
  },
  {
    "text": "my name is antonio here and i'm a",
    "start": "6879",
    "end": "9519"
  },
  {
    "text": "contributor in kubernetes and kind",
    "start": "9519",
    "end": "11519"
  },
  {
    "text": "projects",
    "start": "11519",
    "end": "14000"
  },
  {
    "text": "for those of you that are not familiar",
    "start": "14799",
    "end": "16720"
  },
  {
    "text": "with kind kind is a",
    "start": "16720",
    "end": "19600"
  },
  {
    "text": "tool that is able to deploy kubernetes",
    "start": "19600",
    "end": "23680"
  },
  {
    "text": "in docker containers it was created by",
    "start": "23680",
    "end": "26640"
  },
  {
    "text": "benjamin",
    "start": "26640",
    "end": "27439"
  },
  {
    "text": "elder some time ago to improve the",
    "start": "27439",
    "end": "29199"
  },
  {
    "text": "testing of the kubernetes project",
    "start": "29199",
    "end": "32320"
  },
  {
    "text": "one of the most important features",
    "start": "32320",
    "end": "35440"
  },
  {
    "text": "of kind is that it allows you to create",
    "start": "35440",
    "end": "38239"
  },
  {
    "text": "multi-node",
    "start": "38239",
    "end": "39040"
  },
  {
    "text": "scenarios very useful to test",
    "start": "39040",
    "end": "40719"
  },
  {
    "text": "conformance and",
    "start": "40719",
    "end": "43120"
  },
  {
    "text": "it's very optimized for performance and",
    "start": "43120",
    "end": "46719"
  },
  {
    "text": "stability",
    "start": "46719",
    "end": "47520"
  },
  {
    "text": "it's able to boost to with the crust and",
    "start": "47520",
    "end": "50079"
  },
  {
    "text": "in less than 30 seconds",
    "start": "50079",
    "end": "53359"
  },
  {
    "text": "the way that kind works is using a",
    "start": "53840",
    "end": "56640"
  },
  {
    "text": "special",
    "start": "56640",
    "end": "57440"
  },
  {
    "text": "node images these node images are",
    "start": "57440",
    "end": "60239"
  },
  {
    "text": "container images that",
    "start": "60239",
    "end": "61920"
  },
  {
    "text": "come preloaded with systemd",
    "start": "61920",
    "end": "65040"
  },
  {
    "text": "cumulating container d binaries and",
    "start": "65040",
    "end": "68400"
  },
  {
    "text": "the rest of the kubernetes components",
    "start": "68400",
    "end": "71119"
  },
  {
    "text": "container images",
    "start": "71119",
    "end": "74159"
  },
  {
    "text": "the way that kind works is using these",
    "start": "74960",
    "end": "77920"
  },
  {
    "text": "images",
    "start": "77920",
    "end": "78479"
  },
  {
    "text": "to create a cluster and once the images",
    "start": "78479",
    "end": "81840"
  },
  {
    "text": "are created and running it runs cubadmin",
    "start": "81840",
    "end": "84720"
  },
  {
    "text": "on top",
    "start": "84720",
    "end": "85360"
  },
  {
    "text": "to configure the cluster so in the slide",
    "start": "85360",
    "end": "88320"
  },
  {
    "text": "you can see",
    "start": "88320",
    "end": "89200"
  },
  {
    "text": "what is the most common deployment of",
    "start": "89200",
    "end": "92640"
  },
  {
    "text": "kind for testing with one control plane",
    "start": "92640",
    "end": "95200"
  },
  {
    "text": "node",
    "start": "95200",
    "end": "96000"
  },
  {
    "text": "and two worker nodes",
    "start": "96000",
    "end": "100799"
  },
  {
    "text": "for this presentation we are going to",
    "start": "100799",
    "end": "102479"
  },
  {
    "text": "focus in the networking so",
    "start": "102479",
    "end": "104479"
  },
  {
    "text": "what we are interested in is how kind",
    "start": "104479",
    "end": "107280"
  },
  {
    "text": "implements the networking",
    "start": "107280",
    "end": "109360"
  },
  {
    "text": "kind in by default uses docker",
    "start": "109360",
    "end": "113439"
  },
  {
    "text": "and the docker networking",
    "start": "113439",
    "end": "117439"
  },
  {
    "text": "creates a linux bridge",
    "start": "117439",
    "end": "120880"
  },
  {
    "text": "then then all the container images",
    "start": "120880",
    "end": "124479"
  },
  {
    "text": "are attached to this linux bridge using",
    "start": "124479",
    "end": "128720"
  },
  {
    "text": "bs interfaces on top of that",
    "start": "128720",
    "end": "132800"
  },
  {
    "text": "we have a lot of iptable rules in",
    "start": "132800",
    "end": "135360"
  },
  {
    "text": "different layers so for example",
    "start": "135360",
    "end": "137200"
  },
  {
    "text": "docker uses ip tables to implement",
    "start": "137200",
    "end": "139920"
  },
  {
    "text": "forwarding",
    "start": "139920",
    "end": "140800"
  },
  {
    "text": "from the horse to the containers and",
    "start": "140800",
    "end": "143360"
  },
  {
    "text": "kind",
    "start": "143360",
    "end": "144400"
  },
  {
    "text": "or the kubernetes cluster uses iptables",
    "start": "144400",
    "end": "147599"
  },
  {
    "text": "by q",
    "start": "147599",
    "end": "148080"
  },
  {
    "text": "proxy to create the services abstraction",
    "start": "148080",
    "end": "151440"
  },
  {
    "text": "for networking",
    "start": "151440",
    "end": "152879"
  },
  {
    "text": "and kinetic ec to create to warp",
    "start": "152879",
    "end": "157200"
  },
  {
    "text": "the pod to pod communication",
    "start": "157200",
    "end": "160720"
  },
  {
    "text": "another important feature from kind is",
    "start": "162959",
    "end": "166080"
  },
  {
    "text": "that it has",
    "start": "166080",
    "end": "167040"
  },
  {
    "text": "an api and we can use this",
    "start": "167040",
    "end": "170239"
  },
  {
    "text": "api to create plugins so we don't need",
    "start": "170239",
    "end": "172560"
  },
  {
    "text": "to wait",
    "start": "172560",
    "end": "173599"
  },
  {
    "text": "for the project to implement the feature",
    "start": "173599",
    "end": "175680"
  },
  {
    "text": "that we want we just",
    "start": "175680",
    "end": "177280"
  },
  {
    "text": "can use this api and this is what we are",
    "start": "177280",
    "end": "180480"
  },
  {
    "text": "going to demonstrate",
    "start": "180480",
    "end": "181920"
  },
  {
    "text": "in this presentation how to use kine api",
    "start": "181920",
    "end": "184640"
  },
  {
    "text": "to create",
    "start": "184640",
    "end": "185599"
  },
  {
    "text": "complex network scenarios",
    "start": "185599",
    "end": "189360"
  },
  {
    "text": "one of the most common requests in kind",
    "start": "192959",
    "end": "195760"
  },
  {
    "text": "that we",
    "start": "195760",
    "end": "197200"
  },
  {
    "text": "didn't implement it officially",
    "start": "197200",
    "end": "200400"
  },
  {
    "text": "is to be able to simulate",
    "start": "200400",
    "end": "203519"
  },
  {
    "text": "nodes with multiple interfaces and",
    "start": "203519",
    "end": "206239"
  },
  {
    "text": "multiple",
    "start": "206239",
    "end": "206879"
  },
  {
    "text": "networks this usually this is common",
    "start": "206879",
    "end": "210640"
  },
  {
    "text": "in bare metal scenarios when you want to",
    "start": "210640",
    "end": "213920"
  },
  {
    "text": "provide different",
    "start": "213920",
    "end": "215120"
  },
  {
    "text": "networks for different functionalities",
    "start": "215120",
    "end": "217680"
  },
  {
    "text": "in this case",
    "start": "217680",
    "end": "218720"
  },
  {
    "text": "in the example we have an installer a",
    "start": "218720",
    "end": "221680"
  },
  {
    "text": "storage network and an external network",
    "start": "221680",
    "end": "226959"
  },
  {
    "text": "so let's explain how we can create a",
    "start": "226959",
    "end": "230400"
  },
  {
    "text": "plugin to stand kind",
    "start": "230400",
    "end": "232159"
  },
  {
    "text": "without having to have the feature in",
    "start": "232159",
    "end": "235360"
  },
  {
    "text": "the",
    "start": "235360",
    "end": "235680"
  },
  {
    "text": "kind project itself so what we are going",
    "start": "235680",
    "end": "238640"
  },
  {
    "text": "to do is to deploy a kind cluster the",
    "start": "238640",
    "end": "241920"
  },
  {
    "text": "kind cluster as we saw before",
    "start": "241920",
    "end": "243680"
  },
  {
    "text": "is going to create several nodes",
    "start": "243680",
    "end": "245680"
  },
  {
    "text": "attaches to",
    "start": "245680",
    "end": "246879"
  },
  {
    "text": "attach to a to a linux bridge",
    "start": "246879",
    "end": "251680"
  },
  {
    "text": "if we want to create new networks we can",
    "start": "251680",
    "end": "254879"
  },
  {
    "text": "we can use docker directory to create a",
    "start": "254879",
    "end": "257280"
  },
  {
    "text": "new network",
    "start": "257280",
    "end": "258880"
  },
  {
    "text": "the command docker network create is",
    "start": "258880",
    "end": "261120"
  },
  {
    "text": "going to create a new linux bridge",
    "start": "261120",
    "end": "263680"
  },
  {
    "text": "as we can see in the image this new",
    "start": "263680",
    "end": "267040"
  },
  {
    "text": "linux bridge is going to be isolated",
    "start": "267040",
    "end": "271520"
  },
  {
    "text": "the next step is to connect",
    "start": "271520",
    "end": "274720"
  },
  {
    "text": "the containers the node cluster",
    "start": "274720",
    "end": "277360"
  },
  {
    "text": "containers",
    "start": "277360",
    "end": "278320"
  },
  {
    "text": "to this linux bridge so again docker",
    "start": "278320",
    "end": "281440"
  },
  {
    "text": "has another command that allows us to do",
    "start": "281440",
    "end": "284960"
  },
  {
    "text": "that",
    "start": "284960",
    "end": "285440"
  },
  {
    "text": "and automatically creates the interfaces",
    "start": "285440",
    "end": "288000"
  },
  {
    "text": "inside the nodes",
    "start": "288000",
    "end": "291280"
  },
  {
    "text": "this is very useful for example to test",
    "start": "291759",
    "end": "294840"
  },
  {
    "text": "scenarios",
    "start": "294840",
    "end": "296240"
  },
  {
    "text": "and to use the docker capabilities",
    "start": "296240",
    "end": "300560"
  },
  {
    "text": "because we can with one just simple",
    "start": "300560",
    "end": "303680"
  },
  {
    "text": "command we can run an external container",
    "start": "303680",
    "end": "306000"
  },
  {
    "text": "simulating an nfs server that",
    "start": "306000",
    "end": "309520"
  },
  {
    "text": "bots can can use",
    "start": "309520",
    "end": "312880"
  },
  {
    "text": "to test the multi",
    "start": "312880",
    "end": "316240"
  },
  {
    "text": "the multi-network functionality",
    "start": "316240",
    "end": "319919"
  },
  {
    "text": "so we are going to demonstrate how to do",
    "start": "319919",
    "end": "322840"
  },
  {
    "text": "this",
    "start": "322840",
    "end": "325840"
  },
  {
    "text": "did you see my screen you can see that",
    "start": "332320",
    "end": "336080"
  },
  {
    "text": "i have a repository with different",
    "start": "336080",
    "end": "338560"
  },
  {
    "text": "plugins",
    "start": "338560",
    "end": "339440"
  },
  {
    "text": "in this case i created a plugin that is",
    "start": "339440",
    "end": "342560"
  },
  {
    "text": "called bermeta",
    "start": "342560",
    "end": "344800"
  },
  {
    "text": "this plugin uses the config",
    "start": "344800",
    "end": "348000"
  },
  {
    "text": "file to define",
    "start": "348000",
    "end": "351039"
  },
  {
    "text": "the topology as you can see",
    "start": "351039",
    "end": "355440"
  },
  {
    "text": "you can you can leverage",
    "start": "355680",
    "end": "358960"
  },
  {
    "text": "the kind api to keep having all the kind",
    "start": "358960",
    "end": "362319"
  },
  {
    "text": "functionalities",
    "start": "362319",
    "end": "363360"
  },
  {
    "text": "understand it to have a new field that",
    "start": "363360",
    "end": "366479"
  },
  {
    "text": "allows you to",
    "start": "366479",
    "end": "367520"
  },
  {
    "text": "define external networks so",
    "start": "367520",
    "end": "370720"
  },
  {
    "text": "we can just tell",
    "start": "370720",
    "end": "375039"
  },
  {
    "text": "the command to create a new cluster",
    "start": "375039",
    "end": "378080"
  },
  {
    "text": "with this configuration where we",
    "start": "378080",
    "end": "381199"
  },
  {
    "text": "tell that we want to add two new",
    "start": "381199",
    "end": "384400"
  },
  {
    "text": "external networks to the class",
    "start": "384400",
    "end": "387840"
  },
  {
    "text": "config",
    "start": "392840",
    "end": "395520"
  },
  {
    "text": "once we have the cluster deploy we can",
    "start": "395520",
    "end": "398720"
  },
  {
    "text": "see",
    "start": "398720",
    "end": "400000"
  },
  {
    "text": "that we can still use the kind",
    "start": "400000",
    "end": "403680"
  },
  {
    "text": "commands",
    "start": "403680",
    "end": "406240"
  },
  {
    "text": "with our new cluster",
    "start": "406880",
    "end": "410319"
  },
  {
    "text": "and we can see that we are going to have",
    "start": "410479",
    "end": "412800"
  },
  {
    "text": "the new",
    "start": "412800",
    "end": "414880"
  },
  {
    "text": "networks that we define so",
    "start": "414880",
    "end": "418560"
  },
  {
    "text": "here we have external and storage",
    "start": "418560",
    "end": "421599"
  },
  {
    "text": "and we can see that these new",
    "start": "421599",
    "end": "426080"
  },
  {
    "text": "networks",
    "start": "426080",
    "end": "428800"
  },
  {
    "text": "are attached to the",
    "start": "430880",
    "end": "434319"
  },
  {
    "text": "commands that to the containers can",
    "start": "435039",
    "end": "438240"
  },
  {
    "text": "control plane and quarkit so let's now",
    "start": "438240",
    "end": "441599"
  },
  {
    "text": "try to simulate uh",
    "start": "441599",
    "end": "445599"
  },
  {
    "text": "an external nfs server that is going to",
    "start": "445680",
    "end": "448960"
  },
  {
    "text": "share with a container one of the hosts",
    "start": "448960",
    "end": "451919"
  },
  {
    "text": "folders",
    "start": "451919",
    "end": "453280"
  },
  {
    "text": "let's create one folder",
    "start": "453280",
    "end": "457919"
  },
  {
    "text": "that we want to share",
    "start": "458080",
    "end": "461439"
  },
  {
    "text": "it already sees okay let me",
    "start": "462400",
    "end": "467199"
  },
  {
    "text": "clean it",
    "start": "468000",
    "end": "470479"
  },
  {
    "text": "so",
    "start": "474160",
    "end": "476400"
  },
  {
    "text": "you can see that we start from a clean",
    "start": "477360",
    "end": "479759"
  },
  {
    "text": "environment",
    "start": "479759",
    "end": "481280"
  },
  {
    "text": "and now we are going to create a",
    "start": "481280",
    "end": "483599"
  },
  {
    "text": "container",
    "start": "483599",
    "end": "484479"
  },
  {
    "text": "with an nfs server in the storage",
    "start": "484479",
    "end": "486479"
  },
  {
    "text": "network",
    "start": "486479",
    "end": "488240"
  },
  {
    "text": "so this is the command that says",
    "start": "488240",
    "end": "491599"
  },
  {
    "text": "docker run a container with the name nfs",
    "start": "491599",
    "end": "495759"
  },
  {
    "text": "in the network storage and these are the",
    "start": "495759",
    "end": "500560"
  },
  {
    "text": "the options to mount the new",
    "start": "500560",
    "end": "504560"
  },
  {
    "text": "recently created folder into the",
    "start": "504560",
    "end": "506639"
  },
  {
    "text": "container so we can",
    "start": "506639",
    "end": "508560"
  },
  {
    "text": "export it okay now",
    "start": "508560",
    "end": "512080"
  },
  {
    "text": "we can see that we have a new container",
    "start": "512080",
    "end": "515760"
  },
  {
    "text": "called nfs",
    "start": "515760",
    "end": "518959"
  },
  {
    "text": "here we go and it is running so the next",
    "start": "519519",
    "end": "522640"
  },
  {
    "text": "thing that we are going to do is we are",
    "start": "522640",
    "end": "524320"
  },
  {
    "text": "going to create a pot",
    "start": "524320",
    "end": "526160"
  },
  {
    "text": "that is able to mount this volume",
    "start": "526160",
    "end": "529360"
  },
  {
    "text": "and we are going to see",
    "start": "529360",
    "end": "532399"
  },
  {
    "text": "how the cluster",
    "start": "533600",
    "end": "537279"
  },
  {
    "text": "is able to use both network one of the",
    "start": "537279",
    "end": "540160"
  },
  {
    "text": "good things of kind",
    "start": "540160",
    "end": "541600"
  },
  {
    "text": "is that it uses the docker custom",
    "start": "541600",
    "end": "544720"
  },
  {
    "text": "networks that allow",
    "start": "544720",
    "end": "545839"
  },
  {
    "text": "to resolve the container name so for the",
    "start": "545839",
    "end": "548480"
  },
  {
    "text": "server we don't have to use a piece we",
    "start": "548480",
    "end": "550320"
  },
  {
    "text": "just",
    "start": "550320",
    "end": "550800"
  },
  {
    "text": "can use the name of the container here",
    "start": "550800",
    "end": "552880"
  },
  {
    "text": "directory",
    "start": "552880",
    "end": "553839"
  },
  {
    "text": "so this spot is going to mount this",
    "start": "553839",
    "end": "557839"
  },
  {
    "text": "new folder and it's going to create",
    "start": "557839",
    "end": "561040"
  },
  {
    "text": "a file called dates with the time in a",
    "start": "561040",
    "end": "563680"
  },
  {
    "text": "loop",
    "start": "563680",
    "end": "565120"
  },
  {
    "text": "so let's apply the manifest",
    "start": "565120",
    "end": "569120"
  },
  {
    "text": "and once it is running",
    "start": "572880",
    "end": "576240"
  },
  {
    "text": "it has been created",
    "start": "576240",
    "end": "579440"
  },
  {
    "text": "when it is running we should be able to",
    "start": "581519",
    "end": "583760"
  },
  {
    "text": "see",
    "start": "583760",
    "end": "585200"
  },
  {
    "text": "the file in the host",
    "start": "585200",
    "end": "588720"
  },
  {
    "text": "tmp and fshare",
    "start": "588839",
    "end": "592959"
  },
  {
    "text": "dates",
    "start": "602839",
    "end": "605839"
  },
  {
    "text": "okay",
    "start": "610079",
    "end": "612480"
  },
  {
    "text": "it took some time to to create it but",
    "start": "613760",
    "end": "617120"
  },
  {
    "text": "you can see how the file is being",
    "start": "617120",
    "end": "620640"
  },
  {
    "text": "updated by the pod every five",
    "start": "620640",
    "end": "622880"
  },
  {
    "text": "seconds",
    "start": "622880",
    "end": "625360"
  },
  {
    "text": "one of the more complex scenarios to",
    "start": "629279",
    "end": "631920"
  },
  {
    "text": "test are the multi-cluster",
    "start": "631920",
    "end": "634320"
  },
  {
    "text": "by multi-cluster i mean different",
    "start": "634320",
    "end": "637120"
  },
  {
    "text": "kubernetes clusters",
    "start": "637120",
    "end": "638560"
  },
  {
    "text": "in different regions or in different",
    "start": "638560",
    "end": "642880"
  },
  {
    "text": "data centers the",
    "start": "643200",
    "end": "646640"
  },
  {
    "text": "problematic here is that the",
    "start": "646640",
    "end": "650399"
  },
  {
    "text": "network between this cluster is not",
    "start": "650399",
    "end": "653600"
  },
  {
    "text": "always readable",
    "start": "653600",
    "end": "655040"
  },
  {
    "text": "and sometimes it goes through",
    "start": "655040",
    "end": "659279"
  },
  {
    "text": "internet and you have latency and you",
    "start": "659279",
    "end": "661760"
  },
  {
    "text": "have packet drawers",
    "start": "661760",
    "end": "663360"
  },
  {
    "text": "and all this thing so for testing these",
    "start": "663360",
    "end": "666320"
  },
  {
    "text": "scenarios",
    "start": "666320",
    "end": "668720"
  },
  {
    "text": "we need to emulate this",
    "start": "668720",
    "end": "671760"
  },
  {
    "text": "connection between cluster this",
    "start": "671760",
    "end": "674800"
  },
  {
    "text": "intra cluster connectivity",
    "start": "674800",
    "end": "678560"
  },
  {
    "text": "that is not always easy to do",
    "start": "678560",
    "end": "681680"
  },
  {
    "text": "so how can we do this in kind well",
    "start": "681680",
    "end": "686000"
  },
  {
    "text": "first what we are going to do is to",
    "start": "686320",
    "end": "688320"
  },
  {
    "text": "create one cluster",
    "start": "688320",
    "end": "690640"
  },
  {
    "text": "in each in its own network so its",
    "start": "690640",
    "end": "693200"
  },
  {
    "text": "cluster is going to be as",
    "start": "693200",
    "end": "694640"
  },
  {
    "text": "isolated in its own network what we are",
    "start": "694640",
    "end": "697120"
  },
  {
    "text": "going to do this",
    "start": "697120",
    "end": "698480"
  },
  {
    "text": "because we want to emulate the inter",
    "start": "698480",
    "end": "702320"
  },
  {
    "text": "cluster com",
    "start": "702320",
    "end": "703360"
  },
  {
    "text": "communication and for that we are going",
    "start": "703360",
    "end": "706000"
  },
  {
    "text": "to connect",
    "start": "706000",
    "end": "706800"
  },
  {
    "text": "all these clusters to a container",
    "start": "706800",
    "end": "710639"
  },
  {
    "text": "to a special container that contains the",
    "start": "710639",
    "end": "713920"
  },
  {
    "text": "that is able to emulate the the one",
    "start": "713920",
    "end": "718880"
  },
  {
    "text": "but we have a problem with docker that",
    "start": "721040",
    "end": "725760"
  },
  {
    "text": "docker doesn't allow to change the",
    "start": "725760",
    "end": "727920"
  },
  {
    "text": "gateway of the docker network so what we",
    "start": "727920",
    "end": "731360"
  },
  {
    "text": "are going to do",
    "start": "731360",
    "end": "732399"
  },
  {
    "text": "is a small",
    "start": "732399",
    "end": "735680"
  },
  {
    "text": "we can work around this with net link so",
    "start": "736079",
    "end": "738639"
  },
  {
    "text": "at the end",
    "start": "738639",
    "end": "739600"
  },
  {
    "text": "these docker containers are network name",
    "start": "739600",
    "end": "742320"
  },
  {
    "text": "displays",
    "start": "742320",
    "end": "743440"
  },
  {
    "text": "name spaces with",
    "start": "743440",
    "end": "746880"
  },
  {
    "text": "bs interfaces so what we are going to do",
    "start": "746880",
    "end": "751040"
  },
  {
    "text": "is to use netlink to",
    "start": "751040",
    "end": "754480"
  },
  {
    "text": "replace the gateways this way we achieve",
    "start": "754480",
    "end": "757680"
  },
  {
    "text": "that",
    "start": "757680",
    "end": "758160"
  },
  {
    "text": "each cluster send the traffic to this",
    "start": "758160",
    "end": "761120"
  },
  {
    "text": "one emulator container",
    "start": "761120",
    "end": "764560"
  },
  {
    "text": "okay so let me show you",
    "start": "767760",
    "end": "772720"
  },
  {
    "text": "how to do this so in this case",
    "start": "772720",
    "end": "775920"
  },
  {
    "text": "we are going we have a new plugin called",
    "start": "775920",
    "end": "778800"
  },
  {
    "text": "multicaster",
    "start": "778800",
    "end": "780399"
  },
  {
    "text": "and i created a configuration file",
    "start": "780399",
    "end": "786160"
  },
  {
    "text": "this is up to you you can define you can",
    "start": "786160",
    "end": "789279"
  },
  {
    "text": "create the configurations that you want",
    "start": "789279",
    "end": "792720"
  },
  {
    "text": "for this what i used is",
    "start": "792720",
    "end": "796560"
  },
  {
    "text": "a template that allows you to to",
    "start": "796560",
    "end": "799440"
  },
  {
    "text": "indicate the cluster name",
    "start": "799440",
    "end": "801360"
  },
  {
    "text": "and the number of nodes that you want",
    "start": "801360",
    "end": "803519"
  },
  {
    "text": "per cluster and the network",
    "start": "803519",
    "end": "805519"
  },
  {
    "text": "characteristics because in multicluster",
    "start": "805519",
    "end": "808720"
  },
  {
    "text": "we need",
    "start": "808720",
    "end": "809279"
  },
  {
    "text": "different subnets per cluster",
    "start": "809279",
    "end": "812480"
  },
  {
    "text": "they can overlap if they overlap",
    "start": "812480",
    "end": "815680"
  },
  {
    "text": "we cannot route and the traffic from",
    "start": "815680",
    "end": "818800"
  },
  {
    "text": "cluster to cluster is not going to work",
    "start": "818800",
    "end": "822959"
  },
  {
    "text": "once we have the configuration",
    "start": "823279",
    "end": "827360"
  },
  {
    "text": "file we just need to run this",
    "start": "827360",
    "end": "830800"
  },
  {
    "text": "plugin needs sudo",
    "start": "830800",
    "end": "834639"
  },
  {
    "text": "privilege because",
    "start": "834639",
    "end": "838240"
  },
  {
    "text": "the maintenance replaced gateway",
    "start": "838480",
    "end": "842639"
  },
  {
    "text": "work around so we tell",
    "start": "842639",
    "end": "847680"
  },
  {
    "text": "sudo multicaster create config",
    "start": "848480",
    "end": "853440"
  },
  {
    "text": "and it starts to create the clusters",
    "start": "855120",
    "end": "859040"
  },
  {
    "text": "okay",
    "start": "868839",
    "end": "871839"
  },
  {
    "text": "once it once it finished we can see that",
    "start": "883360",
    "end": "888160"
  },
  {
    "text": "we are going to have two clusters",
    "start": "888320",
    "end": "892720"
  },
  {
    "text": "and each cluster is going to have its",
    "start": "894320",
    "end": "896639"
  },
  {
    "text": "own network",
    "start": "896639",
    "end": "899279"
  },
  {
    "text": "okay so",
    "start": "899279",
    "end": "902639"
  },
  {
    "text": "we can create",
    "start": "902880",
    "end": "906720"
  },
  {
    "text": "an iperf server in one of the clusters",
    "start": "906720",
    "end": "912320"
  },
  {
    "text": "so",
    "start": "912320",
    "end": "914560"
  },
  {
    "text": "we are going to test the connectivity",
    "start": "917199",
    "end": "920000"
  },
  {
    "text": "between two applications",
    "start": "920000",
    "end": "921760"
  },
  {
    "text": "in different clusters",
    "start": "921760",
    "end": "925279"
  },
  {
    "text": "so in this case we are going to use this",
    "start": "925519",
    "end": "928959"
  },
  {
    "text": "image",
    "start": "928959",
    "end": "931440"
  },
  {
    "text": "that has an ipad server okay",
    "start": "932399",
    "end": "935600"
  },
  {
    "text": "we created one hyperserver in us and we",
    "start": "935600",
    "end": "938800"
  },
  {
    "text": "are going to create another",
    "start": "938800",
    "end": "940079"
  },
  {
    "text": "hyper server in europe",
    "start": "940079",
    "end": "945440"
  },
  {
    "text": "so",
    "start": "946160",
    "end": "948399"
  },
  {
    "text": "let's see oh sorry",
    "start": "949839",
    "end": "955839"
  },
  {
    "text": "so we can see that the body running okay",
    "start": "956320",
    "end": "960800"
  },
  {
    "text": "okay once we have the port running",
    "start": "962720",
    "end": "966480"
  },
  {
    "text": "we are going to",
    "start": "966480",
    "end": "969839"
  },
  {
    "text": "expose the pod",
    "start": "970240",
    "end": "973600"
  },
  {
    "text": "the pod in us so the ball from",
    "start": "973600",
    "end": "977199"
  },
  {
    "text": "europe can reach it because",
    "start": "977199",
    "end": "980800"
  },
  {
    "text": "for iperf we need to specify the part",
    "start": "980800",
    "end": "985839"
  },
  {
    "text": "the port repair listening the port 5001",
    "start": "985839",
    "end": "990079"
  },
  {
    "text": "by the four so we expose the port",
    "start": "990079",
    "end": "995279"
  },
  {
    "text": "and we are going to",
    "start": "995279",
    "end": "999120"
  },
  {
    "text": "remember the ip address because",
    "start": "1001040",
    "end": "1005040"
  },
  {
    "text": "right now what we are going to do let me",
    "start": "1005040",
    "end": "1008079"
  },
  {
    "text": "try to split the terminal",
    "start": "1008079",
    "end": "1011680"
  },
  {
    "text": "we are going to connect to the",
    "start": "1011680",
    "end": "1017040"
  },
  {
    "text": "pole in europe",
    "start": "1017920",
    "end": "1025839"
  },
  {
    "text": "okay and we are going to test",
    "start": "1033600",
    "end": "1036959"
  },
  {
    "text": "the tcp connectivity so",
    "start": "1036959",
    "end": "1040160"
  },
  {
    "text": "we can",
    "start": "1040160",
    "end": "1042640"
  },
  {
    "text": "report every second and connect to the",
    "start": "1043600",
    "end": "1047038"
  },
  {
    "text": "cluster that is",
    "start": "1047039",
    "end": "1048558"
  },
  {
    "text": "10 and this is",
    "start": "1048559",
    "end": "1052960"
  },
  {
    "text": "one two eight two five four",
    "start": "1052960",
    "end": "1058080"
  },
  {
    "text": "and we can see okay that",
    "start": "1058080",
    "end": "1062480"
  },
  {
    "text": "we are in a an ideal situation",
    "start": "1062480",
    "end": "1066000"
  },
  {
    "text": "we have 30 gigabits",
    "start": "1066000",
    "end": "1069200"
  },
  {
    "text": "per second between europe and us",
    "start": "1069200",
    "end": "1072240"
  },
  {
    "text": "okay we can check",
    "start": "1072240",
    "end": "1076720"
  },
  {
    "text": "the ip of one of the nodes in us",
    "start": "1077360",
    "end": "1082559"
  },
  {
    "text": "i have a query that",
    "start": "1085679",
    "end": "1088880"
  },
  {
    "text": "is able to give us the eyepiece of the",
    "start": "1088880",
    "end": "1092240"
  },
  {
    "text": "nose",
    "start": "1092240",
    "end": "1092840"
  },
  {
    "text": "so we can check",
    "start": "1092840",
    "end": "1096240"
  },
  {
    "text": "the latency pinging one of these",
    "start": "1096240",
    "end": "1100480"
  },
  {
    "text": "ips and we can see that",
    "start": "1100480",
    "end": "1105200"
  },
  {
    "text": "we have close to 100",
    "start": "1105200",
    "end": "1109400"
  },
  {
    "text": "0.100 milliseconds between the cluster",
    "start": "1109400",
    "end": "1112880"
  },
  {
    "text": "but all of us know that that's not real",
    "start": "1112880",
    "end": "1116720"
  },
  {
    "text": "so",
    "start": "1116720",
    "end": "1117760"
  },
  {
    "text": "less and this is the thing",
    "start": "1117760",
    "end": "1121440"
  },
  {
    "text": "we can we can",
    "start": "1121440",
    "end": "1125759"
  },
  {
    "text": "see that we have this special container",
    "start": "1126000",
    "end": "1128000"
  },
  {
    "text": "that we talked before",
    "start": "1128000",
    "end": "1129120"
  },
  {
    "text": "that is the one container and this is",
    "start": "1129120",
    "end": "1131120"
  },
  {
    "text": "the one that we are going to use",
    "start": "1131120",
    "end": "1132640"
  },
  {
    "text": "the more the to emulate the one",
    "start": "1132640",
    "end": "1135840"
  },
  {
    "text": "the clusters behave as if they were",
    "start": "1135840",
    "end": "1138559"
  },
  {
    "text": "deploying",
    "start": "1138559",
    "end": "1140160"
  },
  {
    "text": "in in a real",
    "start": "1140160",
    "end": "1143600"
  },
  {
    "text": "scenario so we are going to",
    "start": "1143600",
    "end": "1147200"
  },
  {
    "text": "get into this container",
    "start": "1147200",
    "end": "1151440"
  },
  {
    "text": "and we are going to emulate a latency",
    "start": "1151440",
    "end": "1155120"
  },
  {
    "text": "of 100 milliseconds to emulate the",
    "start": "1155120",
    "end": "1158480"
  },
  {
    "text": "latency",
    "start": "1158480",
    "end": "1159440"
  },
  {
    "text": "what we are going to use is the traffic",
    "start": "1159440",
    "end": "1161440"
  },
  {
    "text": "control from the linux",
    "start": "1161440",
    "end": "1164240"
  },
  {
    "text": "this is this",
    "start": "1164240",
    "end": "1167440"
  },
  {
    "text": "and we know that",
    "start": "1167440",
    "end": "1170640"
  },
  {
    "text": "each cluster is connected to the eth1",
    "start": "1170640",
    "end": "1173840"
  },
  {
    "text": "and eth2 interfaces if you have more",
    "start": "1173840",
    "end": "1176400"
  },
  {
    "text": "clusters you just need to map",
    "start": "1176400",
    "end": "1178400"
  },
  {
    "text": "then the commands to the corresponding",
    "start": "1178400",
    "end": "1181120"
  },
  {
    "text": "interfaces",
    "start": "1181120",
    "end": "1182400"
  },
  {
    "text": "and we are going to tell to add a 100",
    "start": "1182400",
    "end": "1185919"
  },
  {
    "text": "milliseconds today",
    "start": "1185919",
    "end": "1187440"
  },
  {
    "text": "okay we can see that the pin starts to",
    "start": "1187440",
    "end": "1190880"
  },
  {
    "text": "go",
    "start": "1190880",
    "end": "1191360"
  },
  {
    "text": "100 milliseconds this is in one",
    "start": "1191360",
    "end": "1194480"
  },
  {
    "text": "directions",
    "start": "1194480",
    "end": "1195679"
  },
  {
    "text": "let's do it for the other direction so",
    "start": "1195679",
    "end": "1198720"
  },
  {
    "text": "we see that we have 200 milliseconds",
    "start": "1198720",
    "end": "1202320"
  },
  {
    "text": "and what do i want to demonstrate with",
    "start": "1202320",
    "end": "1204559"
  },
  {
    "text": "this okay",
    "start": "1204559",
    "end": "1205440"
  },
  {
    "text": "so we have more latency okay",
    "start": "1205440",
    "end": "1209360"
  },
  {
    "text": "we can live with that but let's see what",
    "start": "1209360",
    "end": "1211840"
  },
  {
    "text": "happens to the ipad",
    "start": "1211840",
    "end": "1214960"
  },
  {
    "text": "okay you see now we have",
    "start": "1215360",
    "end": "1219440"
  },
  {
    "text": "43 megabits per second that is why it's",
    "start": "1219440",
    "end": "1223039"
  },
  {
    "text": "important",
    "start": "1223039",
    "end": "1224080"
  },
  {
    "text": "to emulate real scenarios if you are",
    "start": "1224080",
    "end": "1226640"
  },
  {
    "text": "testing",
    "start": "1226640",
    "end": "1227200"
  },
  {
    "text": "a multicluster and you are not emulating",
    "start": "1227200",
    "end": "1229760"
  },
  {
    "text": "the latency you are",
    "start": "1229760",
    "end": "1231679"
  },
  {
    "text": "in a very happy scenario because when",
    "start": "1231679",
    "end": "1234880"
  },
  {
    "text": "somebody deploys your application",
    "start": "1234880",
    "end": "1236720"
  },
  {
    "text": "whatever",
    "start": "1236720",
    "end": "1237440"
  },
  {
    "text": "in a multicultural scenario and",
    "start": "1237440",
    "end": "1240960"
  },
  {
    "text": "with long distances like europe to",
    "start": "1240960",
    "end": "1244960"
  },
  {
    "text": "acl to us they are going to have",
    "start": "1244960",
    "end": "1248720"
  },
  {
    "text": "latency and the latency impact directly",
    "start": "1248720",
    "end": "1252080"
  },
  {
    "text": "on the",
    "start": "1252080",
    "end": "1252960"
  },
  {
    "text": "bandwidth of the tcp connections",
    "start": "1252960",
    "end": "1256880"
  },
  {
    "text": "for our last example we are going to",
    "start": "1258400",
    "end": "1260840"
  },
  {
    "text": "simulate",
    "start": "1260840",
    "end": "1262159"
  },
  {
    "text": "a multi-sony scenario and demonstrate a",
    "start": "1262159",
    "end": "1265520"
  },
  {
    "text": "new feature that is",
    "start": "1265520",
    "end": "1266880"
  },
  {
    "text": "going to be released in this new",
    "start": "1266880",
    "end": "1268960"
  },
  {
    "text": "kubernetes 1.21 version",
    "start": "1268960",
    "end": "1272159"
  },
  {
    "text": "that is called topology aware things",
    "start": "1272159",
    "end": "1276320"
  },
  {
    "text": "so basically users start to",
    "start": "1276320",
    "end": "1279600"
  },
  {
    "text": "deploy more multi-sound scenarios to",
    "start": "1279600",
    "end": "1282000"
  },
  {
    "text": "improve the resilience of their clusters",
    "start": "1282000",
    "end": "1284559"
  },
  {
    "text": "but current implementation of service",
    "start": "1284559",
    "end": "1288159"
  },
  {
    "text": "doesn't provide a good way to indicate",
    "start": "1288159",
    "end": "1291200"
  },
  {
    "text": "the traffic",
    "start": "1291200",
    "end": "1292080"
  },
  {
    "text": "to remain on zone so it",
    "start": "1292080",
    "end": "1295360"
  },
  {
    "text": "usually is a spread all over the cluster",
    "start": "1295360",
    "end": "1298480"
  },
  {
    "text": "however the users may want to give some",
    "start": "1298480",
    "end": "1301679"
  },
  {
    "text": "affinity to improve",
    "start": "1301679",
    "end": "1302880"
  },
  {
    "text": "performance and reduce costs for that",
    "start": "1302880",
    "end": "1306720"
  },
  {
    "text": "this new feature give a new field",
    "start": "1306720",
    "end": "1309919"
  },
  {
    "text": "in the endpoint slices to provide this",
    "start": "1309919",
    "end": "1312480"
  },
  {
    "text": "information so",
    "start": "1312480",
    "end": "1313760"
  },
  {
    "text": "q proxy or other services implementation",
    "start": "1313760",
    "end": "1316799"
  },
  {
    "text": "can use it to to",
    "start": "1316799",
    "end": "1320480"
  },
  {
    "text": "implement the service affinity to the",
    "start": "1320480",
    "end": "1323120"
  },
  {
    "text": "song",
    "start": "1323120",
    "end": "1325440"
  },
  {
    "text": "we can demonstrate this new",
    "start": "1327280",
    "end": "1330640"
  },
  {
    "text": "and test this new feature with kai an",
    "start": "1330640",
    "end": "1333039"
  },
  {
    "text": "example on how to do this",
    "start": "1333039",
    "end": "1334960"
  },
  {
    "text": "is i've created a plugin that deploy a",
    "start": "1334960",
    "end": "1339039"
  },
  {
    "text": "multi-song cluster so you just",
    "start": "1339039",
    "end": "1342720"
  },
  {
    "text": "need to",
    "start": "1342720",
    "end": "1346480"
  },
  {
    "text": "give the parameters with the topology",
    "start": "1346480",
    "end": "1349280"
  },
  {
    "text": "that you want",
    "start": "1349280",
    "end": "1350240"
  },
  {
    "text": "it means the the songs",
    "start": "1350240",
    "end": "1353679"
  },
  {
    "text": "the number of songs we are going to say",
    "start": "1353679",
    "end": "1355919"
  },
  {
    "text": "two zones",
    "start": "1355919",
    "end": "1357200"
  },
  {
    "text": "and the number of notes person",
    "start": "1357200",
    "end": "1362559"
  },
  {
    "text": "let's add one node person",
    "start": "1363360",
    "end": "1367280"
  },
  {
    "text": "in this case the control plane node is",
    "start": "1368000",
    "end": "1371039"
  },
  {
    "text": "not considered as part of the zone",
    "start": "1371039",
    "end": "1375840"
  },
  {
    "text": "once we have our cluster working we are",
    "start": "1379520",
    "end": "1382080"
  },
  {
    "text": "going to create a",
    "start": "1382080",
    "end": "1383440"
  },
  {
    "text": "deployment with your replicas one part",
    "start": "1383440",
    "end": "1386559"
  },
  {
    "text": "per node",
    "start": "1386559",
    "end": "1387360"
  },
  {
    "text": "so for that i have a template here that",
    "start": "1387360",
    "end": "1390720"
  },
  {
    "text": "you can use so we are going to deploy",
    "start": "1390720",
    "end": "1394720"
  },
  {
    "text": "three replicas",
    "start": "1394720",
    "end": "1395760"
  },
  {
    "text": "and this this program is a",
    "start": "1395760",
    "end": "1399840"
  },
  {
    "text": "server that replies with the name of the",
    "start": "1399840",
    "end": "1402880"
  },
  {
    "text": "bot",
    "start": "1402880",
    "end": "1403520"
  },
  {
    "text": "so we are going to create a deployment",
    "start": "1403520",
    "end": "1408400"
  },
  {
    "text": "and we are going to expose",
    "start": "1411600",
    "end": "1415200"
  },
  {
    "text": "the deployment to create a service",
    "start": "1415200",
    "end": "1420799"
  },
  {
    "text": "so we have a new service",
    "start": "1427200",
    "end": "1431760"
  },
  {
    "text": "and this new service has to have",
    "start": "1431760",
    "end": "1436960"
  },
  {
    "text": "endpoint slices per each spot the way",
    "start": "1437679",
    "end": "1440799"
  },
  {
    "text": "that this fit will work",
    "start": "1440799",
    "end": "1443200"
  },
  {
    "text": "is adding a new field to the endpoint",
    "start": "1443200",
    "end": "1445760"
  },
  {
    "text": "slices",
    "start": "1445760",
    "end": "1446640"
  },
  {
    "text": "with the topology information so i have",
    "start": "1446640",
    "end": "1450080"
  },
  {
    "text": "a",
    "start": "1450080",
    "end": "1451520"
  },
  {
    "text": "query here that will allow us",
    "start": "1451520",
    "end": "1455200"
  },
  {
    "text": "to extract this information so",
    "start": "1455200",
    "end": "1458240"
  },
  {
    "text": "this basically is iterating over the",
    "start": "1458240",
    "end": "1460480"
  },
  {
    "text": "point slice and",
    "start": "1460480",
    "end": "1461679"
  },
  {
    "text": "for each endpoint it prints the name of",
    "start": "1461679",
    "end": "1464960"
  },
  {
    "text": "the pot of the point",
    "start": "1464960",
    "end": "1466240"
  },
  {
    "text": "and the new field called hints",
    "start": "1466240",
    "end": "1470559"
  },
  {
    "text": "right now",
    "start": "1470559",
    "end": "1473840"
  },
  {
    "text": "it's missing the name of the pointed",
    "start": "1474320",
    "end": "1476080"
  },
  {
    "text": "lice",
    "start": "1476080",
    "end": "1478399"
  },
  {
    "text": "server deployment so",
    "start": "1479360",
    "end": "1482480"
  },
  {
    "text": "we can see that these are the name of",
    "start": "1482480",
    "end": "1485760"
  },
  {
    "text": "the",
    "start": "1485760",
    "end": "1486000"
  },
  {
    "text": "pots but there is no value in the hints",
    "start": "1486000",
    "end": "1489279"
  },
  {
    "text": "field",
    "start": "1489279",
    "end": "1490080"
  },
  {
    "text": "this is because the service has to be",
    "start": "1490080",
    "end": "1492640"
  },
  {
    "text": "annotated with a special",
    "start": "1492640",
    "end": "1494480"
  },
  {
    "text": "annotation to enable the topology hints",
    "start": "1494480",
    "end": "1500320"
  },
  {
    "text": "so we are going to annotate the service",
    "start": "1500320",
    "end": "1503279"
  },
  {
    "text": "this is the notation",
    "start": "1503279",
    "end": "1504840"
  },
  {
    "text": "service.kubernetes topology",
    "start": "1504840",
    "end": "1508400"
  },
  {
    "text": "aware hints equal auto",
    "start": "1508400",
    "end": "1511600"
  },
  {
    "text": "so once we annotate the service",
    "start": "1511600",
    "end": "1514960"
  },
  {
    "text": "we should be able to see the topology",
    "start": "1514960",
    "end": "1517200"
  },
  {
    "text": "hints okay",
    "start": "1517200",
    "end": "1518400"
  },
  {
    "text": "so we have this endpoint",
    "start": "1518400",
    "end": "1522400"
  },
  {
    "text": "that are preferred to have traffic from",
    "start": "1522400",
    "end": "1525200"
  },
  {
    "text": "zones here",
    "start": "1525200",
    "end": "1526159"
  },
  {
    "text": "zero and the other this other one that",
    "start": "1526159",
    "end": "1528559"
  },
  {
    "text": "is prefer to have traffic from",
    "start": "1528559",
    "end": "1530480"
  },
  {
    "text": "some one so how can we test it so the",
    "start": "1530480",
    "end": "1533919"
  },
  {
    "text": "most simple way to test this",
    "start": "1533919",
    "end": "1536000"
  },
  {
    "text": "is to send traffic to the pods from one",
    "start": "1536000",
    "end": "1539279"
  },
  {
    "text": "specific zone",
    "start": "1539279",
    "end": "1541360"
  },
  {
    "text": "in this case i have this",
    "start": "1541360",
    "end": "1544559"
  },
  {
    "text": "query that is going to give us the name",
    "start": "1544559",
    "end": "1548159"
  },
  {
    "text": "of the nodes and the zone it belongs",
    "start": "1548159",
    "end": "1551520"
  },
  {
    "text": "so that's using the",
    "start": "1551520",
    "end": "1555520"
  },
  {
    "text": "well-known label for the nodes",
    "start": "1555520",
    "end": "1559159"
  },
  {
    "text": "topology.kubernetes.oh",
    "start": "1559159",
    "end": "1560400"
  },
  {
    "text": "so okay and we can see that the",
    "start": "1560400",
    "end": "1563520"
  },
  {
    "text": "kind worker 2 is in song one so if we",
    "start": "1563520",
    "end": "1568840"
  },
  {
    "text": "query the",
    "start": "1568840",
    "end": "1572158"
  },
  {
    "text": "if we query",
    "start": "1572799",
    "end": "1575679"
  },
  {
    "text": "the service from this node",
    "start": "1576159",
    "end": "1581360"
  },
  {
    "text": "the feature should give us",
    "start": "1581440",
    "end": "1584480"
  },
  {
    "text": "affinity to the pod in the song one only",
    "start": "1584480",
    "end": "1589840"
  },
  {
    "text": "so for doing that",
    "start": "1589840",
    "end": "1592799"
  },
  {
    "text": "we can",
    "start": "1593039",
    "end": "1595600"
  },
  {
    "text": "exec directory from the",
    "start": "1596480",
    "end": "1599520"
  },
  {
    "text": "in this case worker 2",
    "start": "1599520",
    "end": "1603600"
  },
  {
    "text": "it's missing our kind worker 2",
    "start": "1603600",
    "end": "1606880"
  },
  {
    "text": "and we call this a special",
    "start": "1606880",
    "end": "1613840"
  },
  {
    "text": "this is the pld service",
    "start": "1615520",
    "end": "1619279"
  },
  {
    "text": "that has a handler first name",
    "start": "1619279",
    "end": "1622960"
  },
  {
    "text": "that returns the hostname of the post",
    "start": "1622960",
    "end": "1626960"
  },
  {
    "text": "we do that",
    "start": "1626960",
    "end": "1629600"
  },
  {
    "text": "i did something wrong okay",
    "start": "1630720",
    "end": "1634159"
  },
  {
    "text": "exit if we do that",
    "start": "1634159",
    "end": "1637360"
  },
  {
    "text": "we can see that",
    "start": "1637360",
    "end": "1640480"
  },
  {
    "text": "everything goes to the same endpoint",
    "start": "1640480",
    "end": "1642559"
  },
  {
    "text": "that if we",
    "start": "1642559",
    "end": "1644320"
  },
  {
    "text": "check again is the point",
    "start": "1644320",
    "end": "1649039"
  },
  {
    "text": "prefer for someone if we do the same",
    "start": "1649039",
    "end": "1652880"
  },
  {
    "text": "but for the other node the kind worker",
    "start": "1652880",
    "end": "1656640"
  },
  {
    "text": "that is in zone zero we should see the",
    "start": "1656640",
    "end": "1659760"
  },
  {
    "text": "other two endpoints",
    "start": "1659760",
    "end": "1662799"
  },
  {
    "text": "okay so ns6 and",
    "start": "1663840",
    "end": "1666960"
  },
  {
    "text": "and b chi hm",
    "start": "1666960",
    "end": "1670240"
  },
  {
    "text": "that we see here",
    "start": "1670240",
    "end": "1674399"
  },
  {
    "text": "that are the ones prefer for zone zero",
    "start": "1674399",
    "end": "1683039"
  },
  {
    "text": "well i think that with these three",
    "start": "1683039",
    "end": "1685520"
  },
  {
    "text": "examples we were able to demonstrate how",
    "start": "1685520",
    "end": "1687600"
  },
  {
    "text": "to use",
    "start": "1687600",
    "end": "1688080"
  },
  {
    "text": "kind to emulate and test complex it",
    "start": "1688080",
    "end": "1690799"
  },
  {
    "text": "scenarios",
    "start": "1690799",
    "end": "1692480"
  },
  {
    "text": "my recommendation is to try to keep it",
    "start": "1692480",
    "end": "1695520"
  },
  {
    "text": "always these scenarios as close as",
    "start": "1695520",
    "end": "1697600"
  },
  {
    "text": "possible to the reality as we",
    "start": "1697600",
    "end": "1699520"
  },
  {
    "text": "saw in the multi multi-cluster example",
    "start": "1699520",
    "end": "1703520"
  },
  {
    "text": "adding latency to the to the test",
    "start": "1703520",
    "end": "1707120"
  },
  {
    "text": "make a big difference another important",
    "start": "1707120",
    "end": "1710240"
  },
  {
    "text": "point is the",
    "start": "1710240",
    "end": "1711039"
  },
  {
    "text": "kind is not a replacement for system",
    "start": "1711039",
    "end": "1713760"
  },
  {
    "text": "testing",
    "start": "1713760",
    "end": "1714480"
  },
  {
    "text": "there are things that you are not going",
    "start": "1714480",
    "end": "1716159"
  },
  {
    "text": "to be able to emulate in containers",
    "start": "1716159",
    "end": "1720000"
  },
  {
    "text": "with this if you are interested in",
    "start": "1721520",
    "end": "1723840"
  },
  {
    "text": "helping or contributing or you have",
    "start": "1723840",
    "end": "1725840"
  },
  {
    "text": "some idea you want to create your own",
    "start": "1725840",
    "end": "1728080"
  },
  {
    "text": "plugins or",
    "start": "1728080",
    "end": "1728880"
  },
  {
    "text": "collaborate with me or with the kind",
    "start": "1728880",
    "end": "1731679"
  },
  {
    "text": "community",
    "start": "1731679",
    "end": "1732799"
  },
  {
    "text": "in this plugins you have the links to",
    "start": "1732799",
    "end": "1735440"
  },
  {
    "text": "the",
    "start": "1735440",
    "end": "1736080"
  },
  {
    "text": "luck channels and if you're interested",
    "start": "1736080",
    "end": "1739200"
  },
  {
    "text": "in the",
    "start": "1739200",
    "end": "1740000"
  },
  {
    "text": "in this presentation code",
    "start": "1740000",
    "end": "1743279"
  },
  {
    "text": "you have the link to my own repo so you",
    "start": "1743279",
    "end": "1746080"
  },
  {
    "text": "can",
    "start": "1746080",
    "end": "1747200"
  },
  {
    "text": "go through the examples on your own",
    "start": "1747200",
    "end": "1752240"
  },
  {
    "text": "thank you very much for attending this",
    "start": "1752240",
    "end": "1754000"
  },
  {
    "text": "presentation and",
    "start": "1754000",
    "end": "1757279"
  },
  {
    "text": "goodbye",
    "start": "1757799",
    "end": "1760799"
  }
]