[
  {
    "text": "all right good afternoon everybody welcome to throw away your passwords trusting workload identity",
    "start": "320",
    "end": "7279"
  },
  {
    "text": "my name's rick featherstone i'm a engineer at control plane for the last couple of years i've mostly",
    "start": "8080",
    "end": "15120"
  },
  {
    "text": "been working with secrets management and machine identity",
    "start": "15120",
    "end": "20320"
  },
  {
    "text": "i work for control plane we're a cloud native security consultancy we do security audits",
    "start": "20640",
    "end": "26720"
  },
  {
    "text": "consultancy pen testing things like that hopefully you've had a chance to come to our stand and talk to people if you haven't pop",
    "start": "26720",
    "end": "33360"
  },
  {
    "text": "over before you go home",
    "start": "33360",
    "end": "36320"
  },
  {
    "text": "so on the left are the things that i've claimed i'm going to talk about this afternoon",
    "start": "38480",
    "end": "44000"
  },
  {
    "text": "and so we're talking about trust uh in the context of secrets management",
    "start": "44000",
    "end": "49360"
  },
  {
    "text": "and access control but focusing primarily on machine identity what it is",
    "start": "49360",
    "end": "55680"
  },
  {
    "text": "how do you get one we're up against the post lunchtime dip",
    "start": "55680",
    "end": "62640"
  },
  {
    "text": "at the end of a long week so you're probably all as tired as",
    "start": "62640",
    "end": "68400"
  },
  {
    "text": "as i am i'm going to attempt to cover a lot of ground in sort of 30 minutes or so",
    "start": "68400",
    "end": "73920"
  },
  {
    "text": "i'm going to focus on concepts rather than going into too much depth on some of these",
    "start": "73920",
    "end": "79360"
  },
  {
    "text": "things the idea is to give you options that you can kind of take away and apply to the things that",
    "start": "79360",
    "end": "85600"
  },
  {
    "text": "you're doing when you get back to your day jobs just talking about some of the things that are available to you some of the",
    "start": "85600",
    "end": "92079"
  },
  {
    "text": "things you might already know hopefully some of them you don't yet otherwise it's not going to be very",
    "start": "92079",
    "end": "97280"
  },
  {
    "text": "interesting talk for you so",
    "start": "97280",
    "end": "103200"
  },
  {
    "text": "historically infrastructure was reasonably static iop addresses were statically allocated",
    "start": "103200",
    "end": "109680"
  },
  {
    "text": "so you could reasonably use these to represent your identity",
    "start": "109680",
    "end": "115840"
  },
  {
    "text": "firewalls used ip and port combinations ip addresses were used in x509",
    "start": "115840",
    "end": "121360"
  },
  {
    "text": "certificates secrets and certificates were manually deployed to machines by admins",
    "start": "121360",
    "end": "129840"
  },
  {
    "text": "you might use protocols like kerberos to initiate trust between machines if you didn't really like yourself very",
    "start": "129840",
    "end": "135920"
  },
  {
    "text": "much but then cloud computing fundamentally",
    "start": "135920",
    "end": "141680"
  },
  {
    "text": "changed the way that we do infrastructure ip addresses are no longer a useful",
    "start": "141680",
    "end": "148959"
  },
  {
    "text": "identifier workloads come and go your workload will get a different ip",
    "start": "148959",
    "end": "155440"
  },
  {
    "text": "address as it gets restarted you could have multiple instances of your workload so they've got multiple ip addresses at",
    "start": "155440",
    "end": "161440"
  },
  {
    "text": "the same time secrets distribution becomes a much harder problem",
    "start": "161440",
    "end": "166480"
  },
  {
    "text": "with these dynamic workloads how do you get the secrets on there with more services wanting to",
    "start": "166480",
    "end": "172879"
  },
  {
    "text": "communicate with each other the old ip and boundary-based approaches",
    "start": "172879",
    "end": "178239"
  },
  {
    "text": "that they no longer work sequence management solutions like",
    "start": "178239",
    "end": "184000"
  },
  {
    "text": "hashicorp vault cloud secrets managers cloud kms they help with the sequence distribution",
    "start": "184000",
    "end": "191040"
  },
  {
    "text": "but in order to access the secrets we need a secret to get access to the secrets management",
    "start": "191040",
    "end": "196239"
  },
  {
    "text": "solution this is commonly referred to as a secret zero and that's synonymous with workload",
    "start": "196239",
    "end": "202640"
  },
  {
    "text": "identity this thing that workloads can use to prove",
    "start": "202640",
    "end": "207680"
  },
  {
    "text": "who they are so what do we need",
    "start": "207680",
    "end": "212799"
  },
  {
    "text": "we need a trusted third party issuing workloads with their identities",
    "start": "212799",
    "end": "218000"
  },
  {
    "text": "we need a way for these subjects to retrieve their identities in a secure manner without the need to have a secret",
    "start": "218000",
    "end": "225360"
  },
  {
    "text": "in the first place and possibly without any knowledge of the identity that they're being issued",
    "start": "225360",
    "end": "232400"
  },
  {
    "text": "we want these identity documents to be short-lived and we want the acquisition to be",
    "start": "232400",
    "end": "239200"
  },
  {
    "text": "seamless um and and simple for these workloads um we need a way for the relying party",
    "start": "239200",
    "end": "247040"
  },
  {
    "text": "to be able to ver verify uh the correctness and the valet the validity of these identity documents",
    "start": "247040",
    "end": "254560"
  },
  {
    "text": "so ideally the basis for that verifiability is cryptography and the format of choice for those",
    "start": "254560",
    "end": "260000"
  },
  {
    "text": "identity documents will be jwts or jots and x509 certificates",
    "start": "260000",
    "end": "266840"
  },
  {
    "text": "so that all sounds great but how do you get one how do you get this secret zero this workload identity",
    "start": "270720",
    "end": "276639"
  },
  {
    "text": "so we'll start simple something with something that you're probably uh already familiar with and then we'll",
    "start": "276639",
    "end": "281680"
  },
  {
    "text": "sort of build on that so who's running workloads on kubernetes at the moment quick show help me out a",
    "start": "281680",
    "end": "287440"
  },
  {
    "text": "little show of hands yeah loads of you excellent",
    "start": "287440",
    "end": "292479"
  },
  {
    "text": "who's heard of the token review api oh that's surprising i thought i thought",
    "start": "292479",
    "end": "298479"
  },
  {
    "text": "we would have more hands for that one so basically we've got two two service accounts the subject and the relying",
    "start": "298479",
    "end": "306000"
  },
  {
    "text": "party they've both got um service account tokens",
    "start": "306000",
    "end": "311199"
  },
  {
    "text": "and uh we can use the token review api to verify that token and obtain some",
    "start": "311199",
    "end": "316479"
  },
  {
    "text": "information about the subject it's a simple api call",
    "start": "316479",
    "end": "322080"
  },
  {
    "text": "the um the subjects token in in the payload there and then the relying parties token uh in",
    "start": "322080",
    "end": "329919"
  },
  {
    "text": "the authorization bearer field there and we can just make this api call",
    "start": "329919",
    "end": "335280"
  },
  {
    "text": "if you're passing jots around when you're making api calls and things like that you want to make sure you're using a secure channel to protect yourself",
    "start": "335280",
    "end": "342479"
  },
  {
    "text": "against interception and replay attacks and once you've made that api call",
    "start": "342479",
    "end": "349039"
  },
  {
    "text": "from the response you can get information back about the the subject",
    "start": "349039",
    "end": "355199"
  },
  {
    "text": "the username the fully qualified name of the service account there you might use the groups and now you can",
    "start": "355199",
    "end": "361120"
  },
  {
    "text": "use this information to start to make authorization decisions",
    "start": "361120",
    "end": "366800"
  },
  {
    "text": "and this is the most common way of integrating uh kubernetes workloads with hashicorp vault",
    "start": "366800",
    "end": "372880"
  },
  {
    "text": "and kubernetes authentication method so now we can get dynamic secrets passwords",
    "start": "372880",
    "end": "378639"
  },
  {
    "text": "api keys certificates from vault that's pretty cool",
    "start": "378639",
    "end": "385280"
  },
  {
    "text": "so the trust domain here is rooted in your kubernetes cluster kubernetes is your identity provider",
    "start": "385759",
    "end": "391680"
  },
  {
    "text": "and if you're building something that's going to run in a single kubernetes cluster you can build on this api",
    "start": "391680",
    "end": "397440"
  },
  {
    "text": "yourself it's it's not it's not complex and you can use this to then start to make authorization",
    "start": "397440",
    "end": "404080"
  },
  {
    "text": "decisions if you are passing these",
    "start": "404080",
    "end": "409840"
  },
  {
    "text": "service account tokens around you you need to be careful about um",
    "start": "409840",
    "end": "415440"
  },
  {
    "text": "about this the tokens themselves they exist for the lifetime of that service account",
    "start": "415440",
    "end": "421440"
  },
  {
    "text": "they're replaced if you delete the token but they're not rotated so there's some things we can do to kind",
    "start": "421440",
    "end": "427919"
  },
  {
    "text": "of restrict the usefulness of a compromised token",
    "start": "427919",
    "end": "432319"
  },
  {
    "text": "everybody heard of bounce quick show of hands you heard of the bound service account tokens",
    "start": "433759",
    "end": "439120"
  },
  {
    "text": "they're sometimes called projected service account tokens they use the projected volume functionality",
    "start": "439840",
    "end": "445520"
  },
  {
    "text": "they're bound by audience and time so in this example here",
    "start": "445520",
    "end": "452319"
  },
  {
    "text": "if our demo service is malicious and we pass it our service account token",
    "start": "452319",
    "end": "458880"
  },
  {
    "text": "it can't use our token to impersonate us to another service because it's bound",
    "start": "458880",
    "end": "464879"
  },
  {
    "text": "uh by that audience there um and this this works kind of within a",
    "start": "464879",
    "end": "470080"
  },
  {
    "text": "single kubernetes cluster but if we're let's say we've got vault on outside a",
    "start": "470080",
    "end": "475840"
  },
  {
    "text": "cluster and a service account in the cluster talking to vault",
    "start": "475840",
    "end": "481039"
  },
  {
    "text": "vault needs to verify this token but it can't use a bound service account token because it's not in that",
    "start": "481039",
    "end": "486479"
  },
  {
    "text": "kubernetes cluster so now we need to create a long-lived service account token and share that with vault in order",
    "start": "486479",
    "end": "493360"
  },
  {
    "text": "to be able to validate our token so now we've got a sequence management problem again",
    "start": "493360",
    "end": "500800"
  },
  {
    "text": "we can reduce the risk around that token by just giving it permissions to create token reviews",
    "start": "500800",
    "end": "509599"
  },
  {
    "text": "but can we do something so that vault or any other relying party doesn't need",
    "start": "511199",
    "end": "516800"
  },
  {
    "text": "a token to validate our tokens",
    "start": "516800",
    "end": "522080"
  },
  {
    "text": "well unsurprisingly we can so since version 1.2 uh 1.12 of",
    "start": "522080",
    "end": "529200"
  },
  {
    "text": "kubernetes and stable since 1.20 the service account issue discovery feature was added",
    "start": "529200",
    "end": "535519"
  },
  {
    "text": "quick show of hands if anybody's heard of this before",
    "start": "535519",
    "end": "540399"
  },
  {
    "text": "uh quite a few not but in my experience this isn't quite as well known as the token review api",
    "start": "540640",
    "end": "546880"
  },
  {
    "text": "um but it's based on the oidc discovery protocol which gives you the means to",
    "start": "546880",
    "end": "552560"
  },
  {
    "text": "dynamically retrieve the details you need to validate these tokens",
    "start": "552560",
    "end": "557920"
  },
  {
    "text": "and you can have it set up so that you don't need any uh authorization",
    "start": "557920",
    "end": "563440"
  },
  {
    "text": "in order to get this information so you can verify the identity from the",
    "start": "563440",
    "end": "568560"
  },
  {
    "text": "token and you can get basic profile information uh stored in the claims in",
    "start": "568560",
    "end": "574720"
  },
  {
    "text": "in your job your relying parties should maintain a",
    "start": "574720",
    "end": "579760"
  },
  {
    "text": "a white list of trusted issuers otherwise anybody with an oidc",
    "start": "579760",
    "end": "586560"
  },
  {
    "text": "compatible issuer can can authenticate um so now you can start to extend your",
    "start": "586560",
    "end": "592000"
  },
  {
    "text": "your trust domain and in order to kind of really understand how this works",
    "start": "592000",
    "end": "599040"
  },
  {
    "text": "we need to understand what's in a job",
    "start": "599040",
    "end": "603399"
  },
  {
    "text": "so it's it's a it's a simple serialization format we've got a header a payload and a signature",
    "start": "606240",
    "end": "612640"
  },
  {
    "text": "base64 url encoded and separated with a period so we can pipe that through jq if we",
    "start": "612640",
    "end": "619680"
  },
  {
    "text": "want to look at the claims uh in the in the payload of a token",
    "start": "619680",
    "end": "625760"
  },
  {
    "text": "you can't decode the signature because it's not utf-8 encoded but you're generally interested in the payload you",
    "start": "625760",
    "end": "631519"
  },
  {
    "text": "want to see what claims are when you're messing up with tokens you might be interested in the header um",
    "start": "631519",
    "end": "637040"
  },
  {
    "text": "so there's no no need for you to copy your service account tokens and paste them into jwtio just to see what's what",
    "start": "637040",
    "end": "643920"
  },
  {
    "text": "claims are in there you're welcome",
    "start": "643920",
    "end": "649200"
  },
  {
    "text": "okay so here's the decoded token it's in the header there",
    "start": "650480",
    "end": "657200"
  },
  {
    "text": "we've got the algorithm and the id for the signing key and we'll come back to that in a sec",
    "start": "657200",
    "end": "663440"
  },
  {
    "text": "and then in the payload we've got various claims for the token there's we've got some around the validity of the token the",
    "start": "663440",
    "end": "670000"
  },
  {
    "text": "expiry time not before the issue that time",
    "start": "670000",
    "end": "675440"
  },
  {
    "text": "and then we've got information about the subject and also the audience so so who is this",
    "start": "675440",
    "end": "680880"
  },
  {
    "text": "token valid for but key to the oidc discovery is this",
    "start": "680880",
    "end": "685920"
  },
  {
    "text": "issuer field so we'll go back to the previous slide so with that issuer field you can append",
    "start": "685920",
    "end": "692480"
  },
  {
    "text": "this well-known suffix onto there and that will give you the discovery document",
    "start": "692480",
    "end": "698560"
  },
  {
    "text": "and from that we can extract the url to get the",
    "start": "698560",
    "end": "703600"
  },
  {
    "text": "json web key set which allows us to validate the signature and then we know it's a valid token and then we can trust",
    "start": "703600",
    "end": "709920"
  },
  {
    "text": "the claims that are encoded in that token it's it's a fixed url out of the box",
    "start": "709920",
    "end": "716880"
  },
  {
    "text": "with vanilla kubernetes but it is customizable um and so and and it's also protected",
    "start": "716880",
    "end": "723519"
  },
  {
    "text": "with uh vanilla kubernetes so if you tweak that url you need to tweak your your r back so that you can access it",
    "start": "723519",
    "end": "730399"
  },
  {
    "text": "or you make or you make that um unauthenticated",
    "start": "730399",
    "end": "736480"
  },
  {
    "text": "but it's also now supported by your major cloud providers but they're managed kubernetes offerings",
    "start": "736480",
    "end": "742560"
  },
  {
    "text": "it's previewing as in azure because they kind of went off in a different direction",
    "start": "742560",
    "end": "747680"
  },
  {
    "text": "initially but they've now course corrected and are going down their idc route",
    "start": "747680",
    "end": "753680"
  },
  {
    "text": "so what does it look like just to kind of reinforce this simple protocol we'll go through",
    "start": "754560",
    "end": "760720"
  },
  {
    "text": "an example and look at the data structures for each of the major cloud providers",
    "start": "760720",
    "end": "766480"
  },
  {
    "text": "so that's that's the payload for uh gk you can kind of see the issuer you can tell from that that it's a",
    "start": "768399",
    "end": "774560"
  },
  {
    "text": "gke cluster we append a well-known url on the end of that",
    "start": "774560",
    "end": "780480"
  },
  {
    "text": "and then we get the discovery document we can see some metadata in there and the key one is that jwks uri",
    "start": "780480",
    "end": "788800"
  },
  {
    "text": "and if we do a get on that we get the key set",
    "start": "788800",
    "end": "794079"
  },
  {
    "text": "so you can see there the key id we talked about a little bit earlier the algorithm",
    "start": "794079",
    "end": "799360"
  },
  {
    "text": "and then we've got the the modulus and the exponent for the rsa public key and then we can reconstitute",
    "start": "799360",
    "end": "805200"
  },
  {
    "text": "that public key and verify the signature eks",
    "start": "805200",
    "end": "811440"
  },
  {
    "text": "looks the same take that issue afield stick the well known url on the end",
    "start": "811440",
    "end": "816880"
  },
  {
    "text": "get the discovery document slightly different metadata but the same kind of thing the key field again is",
    "start": "816880",
    "end": "822880"
  },
  {
    "text": "that jwks uri and we get the key set",
    "start": "822880",
    "end": "829279"
  },
  {
    "text": "and for aks same sort of thing notice the trailing forward slash on the",
    "start": "829279",
    "end": "834720"
  },
  {
    "text": "issuer field there if you're building something yourself it's i mean it's a simple protocol it's get extract get and",
    "start": "834720",
    "end": "841839"
  },
  {
    "text": "you can validate these um and the oidc spec tells you to check for that trailing",
    "start": "841839",
    "end": "847760"
  },
  {
    "text": "slash um so that you can uh so you can get it so you can build you can build yourself",
    "start": "847760",
    "end": "853519"
  },
  {
    "text": "a simple codes to get the keys that you need to verify these tokens",
    "start": "853519",
    "end": "859519"
  },
  {
    "text": "and extract the claims",
    "start": "859519",
    "end": "862800"
  },
  {
    "text": "so there's the discovery document and the key set so in the key sets that we've seen so",
    "start": "864800",
    "end": "870959"
  },
  {
    "text": "far you've only got one key in there but periodically these will be rotated and so you'll see more keys",
    "start": "870959",
    "end": "876880"
  },
  {
    "text": "in that list there and that's why the key id is important you need to make sure you're getting the right key",
    "start": "876880",
    "end": "882959"
  },
  {
    "text": "otherwise your signature's not going to not going to validate even if your token is valid so that key",
    "start": "882959",
    "end": "889360"
  },
  {
    "text": "ideas is very important",
    "start": "889360",
    "end": "893560"
  },
  {
    "text": "so that's all well and good what can we do with it well you can use it with anything that supports our odc",
    "start": "898720",
    "end": "905440"
  },
  {
    "text": "discovery it's a it's a widely used protocol all the major cloud",
    "start": "905440",
    "end": "910839"
  },
  {
    "text": "providers allow you to hook that into their web identity federation so you can take this token",
    "start": "910839",
    "end": "916560"
  },
  {
    "text": "and swap it for temporary cloud credentials so you can access cloud secret stores",
    "start": "916560",
    "end": "922560"
  },
  {
    "text": "cloud kms basically all of the cloud apis so now you can start to run your",
    "start": "922560",
    "end": "928880"
  },
  {
    "text": "infrastructure's code pipelines on your kubernetes clusters with temporary cloud credentials you're",
    "start": "928880",
    "end": "934959"
  },
  {
    "text": "not having to put long-lived cloud credentials into secrets in your kubernetes cluster you",
    "start": "934959",
    "end": "941120"
  },
  {
    "text": "can exchange your token uh for these temporary credentials",
    "start": "941120",
    "end": "946720"
  },
  {
    "text": "so and you can go across cloud providers as well so for example you could run in gke",
    "start": "946720",
    "end": "954240"
  },
  {
    "text": "and you can you can access aws so i am roles for service accounts the",
    "start": "954240",
    "end": "959600"
  },
  {
    "text": "um from aws that builds on this odc discovery um",
    "start": "959600",
    "end": "965440"
  },
  {
    "text": "and this web identity federation so there's uh there's a mutating web hook that aws",
    "start": "965440",
    "end": "971120"
  },
  {
    "text": "provides you can install this into your gke cluster and then you annotate your service",
    "start": "971120",
    "end": "976240"
  },
  {
    "text": "account with the i am role that you want to get credentials for and then when you do a deployment",
    "start": "976240",
    "end": "982399"
  },
  {
    "text": "it will mutate your pod and it will automatically um it will automatically uh mutate and add",
    "start": "982399",
    "end": "989920"
  },
  {
    "text": "the bound service account token for you and also the environment variables required to use the aws to authenticate",
    "start": "989920",
    "end": "996639"
  },
  {
    "text": "for the aws apis so this is all seamless to your workload just with just with that that web hook in there your",
    "start": "996639",
    "end": "1003440"
  },
  {
    "text": "workload can just use the aws apis without having to worry about it it's pretty cool right",
    "start": "1003440",
    "end": "1011839"
  },
  {
    "text": "you can use opa to enforce access control based on bearer tokens in your api calls",
    "start": "1013680",
    "end": "1021199"
  },
  {
    "text": "so you can verify the token and make policy decisions based on the subject the audience",
    "start": "1021199",
    "end": "1027360"
  },
  {
    "text": "and the issuer you should probably not just as i mentioned earlier not just trust",
    "start": "1027360",
    "end": "1033120"
  },
  {
    "text": "any issuer you probably want to maintain a list of trusted issuers and check against that",
    "start": "1033120",
    "end": "1039360"
  },
  {
    "text": "but that's yes we can get cloud credentials if we're passing tokens between services we",
    "start": "1039360",
    "end": "1045199"
  },
  {
    "text": "can do author authorization using open",
    "start": "1045199",
    "end": "1049839"
  },
  {
    "text": "but now we're now in the oidc space we can start looking outside of kubernetes",
    "start": "1051120",
    "end": "1057919"
  },
  {
    "text": "to identity pride it doesn't have to be kubernetes it could be github",
    "start": "1057919",
    "end": "1063759"
  },
  {
    "text": "so we can run our infrastructure's code pipelines in github and get temporary cloud credentials",
    "start": "1065679",
    "end": "1073200"
  },
  {
    "text": "and uh and create infrastructure so in this example",
    "start": "1073200",
    "end": "1079280"
  },
  {
    "text": "uh we're configuring uh gcp to get temporary credentials you need to",
    "start": "1079280",
    "end": "1084960"
  },
  {
    "text": "create a service account a workload identity pool an oidc provider and then you do some",
    "start": "1084960",
    "end": "1090880"
  },
  {
    "text": "mapping between the claims in the github token",
    "start": "1090880",
    "end": "1096000"
  },
  {
    "text": "and then bind that to the gcp service account that you want to impersonate",
    "start": "1096000",
    "end": "1102880"
  },
  {
    "text": "and then google provided github auth action that allows you to exchange that token",
    "start": "1104640",
    "end": "1111039"
  },
  {
    "text": "for credentials so you can get an access token to use in authorization bearer field for making",
    "start": "1111039",
    "end": "1118000"
  },
  {
    "text": "api calls you can get a credentials file and in this case we're just getting an id token",
    "start": "1118000",
    "end": "1124240"
  },
  {
    "text": "which is the same as the the kubernetes jots that we've been looking at just so that it kind of looks the same",
    "start": "1124240",
    "end": "1130240"
  },
  {
    "text": "and if we pipe that through jq we can see a similar set of claims",
    "start": "1130240",
    "end": "1135760"
  },
  {
    "text": "that we were getting from the kubernetes cluster that subject field there that that long",
    "start": "1135760",
    "end": "1141919"
  },
  {
    "text": "numeric string that's the oauth 2 client id for your gcp service account and you",
    "start": "1141919",
    "end": "1148160"
  },
  {
    "text": "can look in the console and verify that that's that's correct",
    "start": "1148160",
    "end": "1153440"
  },
  {
    "text": "what if you need what if you need more than this what if you want a meaningful name in that subject field",
    "start": "1155520",
    "end": "1161919"
  },
  {
    "text": "unlike that numeric value we just looked at or the fully qualified name of your kubernetes service account",
    "start": "1161919",
    "end": "1167919"
  },
  {
    "text": "you might have multiple kubernetes clusters and you want to simplify validation of those tokens between",
    "start": "1167919",
    "end": "1174799"
  },
  {
    "text": "workloads you might want to use the same workload",
    "start": "1174799",
    "end": "1179919"
  },
  {
    "text": "identity across multiple clusters your clusters might be repaved regularly",
    "start": "1179919",
    "end": "1186320"
  },
  {
    "text": "and that issue of fields might change you don't want to have to automatically keep changing that that configuration for the idc provider",
    "start": "1186320",
    "end": "1195280"
  },
  {
    "text": "you might want to extend your trust domain over multiple kubernetes clusters or you might want to",
    "start": "1195280",
    "end": "1200880"
  },
  {
    "text": "have separate just domains for each kubernetes cluster but you want to federate them so that",
    "start": "1200880",
    "end": "1206559"
  },
  {
    "text": "you can simplify verifying those tokens across those kubernetes clusters you might not even",
    "start": "1206559",
    "end": "1212400"
  },
  {
    "text": "be running in kubernetes you might be running on vms you might have iot devices",
    "start": "1212400",
    "end": "1218240"
  },
  {
    "text": "so we need something a little bit more we can't just rely on that that kubernetes is the identity provider",
    "start": "1218240",
    "end": "1224400"
  },
  {
    "text": "and that's where spiffy and spire come in so spiffy defines the standards for an",
    "start": "1224400",
    "end": "1230960"
  },
  {
    "text": "identity framework the spiffy id is the basic the format the representation of that that",
    "start": "1230960",
    "end": "1237600"
  },
  {
    "text": "identifier it's a it's a uri and it's and it's made up of uh",
    "start": "1237600",
    "end": "1243039"
  },
  {
    "text": "the spiffy protocol the trust domain in this example acme.com and then an arbitrary string on",
    "start": "1243039",
    "end": "1249440"
  },
  {
    "text": "the end as your workload identifier billing.payments here",
    "start": "1249440",
    "end": "1256520"
  },
  {
    "text": "those svids the spiffy verifiable identity documents",
    "start": "1262480",
    "end": "1268000"
  },
  {
    "text": "they're short-lived and rotated frequently the trust domain itself",
    "start": "1268000",
    "end": "1274559"
  },
  {
    "text": "provides you with a bundle which is basically the root keys that allow you to verify",
    "start": "1274559",
    "end": "1279679"
  },
  {
    "text": "that s vid and it could be a jot but it could also be an x509 certificate",
    "start": "1279679",
    "end": "1288320"
  },
  {
    "text": "the workload api that's that's how your workloads get get these identity documents um and other",
    "start": "1288880",
    "end": "1296080"
  },
  {
    "text": "workloads can get the trust bundles and verify these identity documents and spire is the implementation",
    "start": "1296080",
    "end": "1302880"
  },
  {
    "text": "of these spiffy standards aspire has aspire server then you've got agents",
    "start": "1302880",
    "end": "1309760"
  },
  {
    "text": "that run on nodes and they attest themselves to the server and then the workloads will attest",
    "start": "1309760",
    "end": "1315919"
  },
  {
    "text": "themselves to the agent running on the node that they're running on",
    "start": "1315919",
    "end": "1321200"
  },
  {
    "text": "and use the registration api to map selectors basically metadata depending",
    "start": "1321200",
    "end": "1327440"
  },
  {
    "text": "on how they test themselves to the workload you map that to spiffy ids",
    "start": "1327440",
    "end": "1333440"
  },
  {
    "text": "and when you're when you're creating your spiffy ids for your workloads you map them to the spiffy id of the agent",
    "start": "1333440",
    "end": "1339919"
  },
  {
    "text": "so now you're tying your workload identities to the nodes that they can run on",
    "start": "1339919",
    "end": "1346880"
  },
  {
    "text": "and then the workloads just use the api to get their their s-vids and they don't need um",
    "start": "1346880",
    "end": "1352559"
  },
  {
    "text": "they don't need any secrets up front they just by virtue of",
    "start": "1352559",
    "end": "1357600"
  },
  {
    "text": "the attestation they can get these identity documents",
    "start": "1357600",
    "end": "1361840"
  },
  {
    "text": "so we've got a list of the uh of the plugins listed in the documentation there so the node ones",
    "start": "1362799",
    "end": "1368960"
  },
  {
    "text": "agent to server top three there are our pre-shed secrets the next two",
    "start": "1368960",
    "end": "1376000"
  },
  {
    "text": "are for kubernetes um the sat is a regular service count token",
    "start": "1376000",
    "end": "1381200"
  },
  {
    "text": "the psat is a bound service account token and then the next three are cloud identity documents so you can use uh",
    "start": "1381200",
    "end": "1388880"
  },
  {
    "text": "kind of information that this node already has or that you've pre-populated and stored on there and",
    "start": "1388880",
    "end": "1395120"
  },
  {
    "text": "then for workload at station three key ones there unix docker and kubernetes",
    "start": "1395120",
    "end": "1401520"
  },
  {
    "text": "and the um the selectors so for the unix for example the selectors might be",
    "start": "1401520",
    "end": "1408000"
  },
  {
    "text": "user id username group id group name for the process that's running that workload",
    "start": "1408000",
    "end": "1413760"
  },
  {
    "text": "uh it could be the path to the binary on the file system that the digest of that binary itself",
    "start": "1413760",
    "end": "1419679"
  },
  {
    "text": "for docker it'll be things like the image id labels uh environment variables for kubernetes",
    "start": "1419679",
    "end": "1426400"
  },
  {
    "text": "it's your service account your namespace the image things like that kind of just just metadata about this these running",
    "start": "1426400",
    "end": "1433039"
  },
  {
    "text": "workloads and then when the workloads come up and talk to the node they're just",
    "start": "1433039",
    "end": "1439279"
  },
  {
    "text": "attesting themselves the node's checking for this this metadata mapping it",
    "start": "1439279",
    "end": "1444480"
  },
  {
    "text": "knowing which identity to assign",
    "start": "1444480",
    "end": "1448880"
  },
  {
    "text": "so in this example deployment we're running on a on a single kubernetes cluster using",
    "start": "1451360",
    "end": "1456880"
  },
  {
    "text": "the projected service account token the bound service account token for the no data station",
    "start": "1456880",
    "end": "1462000"
  },
  {
    "text": "now under the covers that's the token review api that we saw at the start of the talk um same as the vault authentication",
    "start": "1462000",
    "end": "1469360"
  },
  {
    "text": "the uh the workloads are you because we're running on a kubernetes cluster we're just using the kubernetes",
    "start": "1469360",
    "end": "1475520"
  },
  {
    "text": "workload data station the oidc discovery provider that's an optional component",
    "start": "1475520",
    "end": "1481279"
  },
  {
    "text": "and that exposes the endpoints to retrieve the discovery document and the jw ks url",
    "start": "1481279",
    "end": "1489919"
  },
  {
    "text": "let's have a look and see what that looks like unsurprisingly the tokens look the same",
    "start": "1489919",
    "end": "1498159"
  },
  {
    "text": "the discovery document looks very similar and the key set looks very similar",
    "start": "1498159",
    "end": "1506880"
  },
  {
    "text": "so we talked about x59 s vids as well we focus kind of primarily on jots",
    "start": "1508000",
    "end": "1513679"
  },
  {
    "text": "before and and the reasoning for that was because you can get these from your",
    "start": "1513679",
    "end": "1518880"
  },
  {
    "text": "kubernetes cluster you don't need to install anything else if you're running kubernetes you've got uh you've got some",
    "start": "1518880",
    "end": "1525440"
  },
  {
    "text": "administration of that kubernetes cluster but without with the service account",
    "start": "1525440",
    "end": "1530480"
  },
  {
    "text": "issuer discovery stuff you can start to use the tokens that your kubernetes cluster",
    "start": "1530480",
    "end": "1535600"
  },
  {
    "text": "is assigned to to authenticate to things outside of your cluster and that's kind of it's not free because",
    "start": "1535600",
    "end": "1542159"
  },
  {
    "text": "you've got to manage a kubernetes cluster but it's freer than installing aspire server",
    "start": "1542159",
    "end": "1548240"
  },
  {
    "text": "and an agent somewhere else",
    "start": "1548240",
    "end": "1552840"
  },
  {
    "text": "so that's just some of the information in the x 509 s vids you can see in the uri sand field",
    "start": "1557200",
    "end": "1563679"
  },
  {
    "text": "there we've got the spiffy id so just domain arbitrary workday identifier",
    "start": "1563679",
    "end": "1571600"
  },
  {
    "text": "um and if we're running uh some um that's that's kind of different to",
    "start": "1571600",
    "end": "1577679"
  },
  {
    "text": "service account names it's a nice meaningful uh identifier so that's kind of useful we can see that we can use the",
    "start": "1577679",
    "end": "1584159"
  },
  {
    "text": "certificate for server and client authentication so we can now start to use this for",
    "start": "1584159",
    "end": "1589679"
  },
  {
    "text": "mutual tls um we can log into volt with this x509",
    "start": "1589679",
    "end": "1595120"
  },
  {
    "text": "certificate or anything else that supports certificate-based authentication",
    "start": "1595120",
    "end": "1601360"
  },
  {
    "text": "spyro itself implements envoy's secret discovery service sds",
    "start": "1601360",
    "end": "1608080"
  },
  {
    "text": "so envoy it's if you're running envoy kind of as a lightweight service mesh",
    "start": "1608080",
    "end": "1613200"
  },
  {
    "text": "that can retrieve these x509s vids and use those for your mutual tls",
    "start": "1613200",
    "end": "1618240"
  },
  {
    "text": "and now you're using the same identity for your um for your certificate for",
    "start": "1618240",
    "end": "1623760"
  },
  {
    "text": "your tls that you'll be using if you're going to pass your your jots around whereas if you're running",
    "start": "1623760",
    "end": "1630559"
  },
  {
    "text": "a service mesh like istio istio is issuing different identifiers for your",
    "start": "1630559",
    "end": "1635840"
  },
  {
    "text": "certificates then kubernetes would be issuing for your jots",
    "start": "1635840",
    "end": "1641520"
  },
  {
    "text": "and again you can plug envoy into oppa for policy based authorization decisions",
    "start": "1641520",
    "end": "1649320"
  },
  {
    "text": "so i did say something about hardware route of trust um so the rest of the rest of this deck",
    "start": "1659840",
    "end": "1666080"
  },
  {
    "text": "gives an indication of where where i think uh kind of workload identity is heading",
    "start": "1666080",
    "end": "1671520"
  },
  {
    "text": "kind of trying to tie that trust down to the to the hardware level there's been a couple of interesting talks already this",
    "start": "1671520",
    "end": "1677279"
  },
  {
    "text": "week uh wednesday there was talk about the confidential containers project",
    "start": "1677279",
    "end": "1683039"
  },
  {
    "text": "using running kubernetes workloads in trusted execution environments",
    "start": "1683039",
    "end": "1688080"
  },
  {
    "text": "there was a talk this morning about running kubernetes in interested execution environments",
    "start": "1688080",
    "end": "1695679"
  },
  {
    "text": "really kind of interesting stuff like right down to to hardware level uh",
    "start": "1695679",
    "end": "1700880"
  },
  {
    "text": "at station security um so this is kind of this is something i'm just starting to look at so please",
    "start": "1700880",
    "end": "1706880"
  },
  {
    "text": "don't ask me any difficult questions at the end about this but i wanted to just uh give you some information about some",
    "start": "1706880",
    "end": "1712720"
  },
  {
    "text": "of the things you might want to go away and look at and keep an eye out and say it's it's an evolving field um and so",
    "start": "1712720",
    "end": "1717760"
  },
  {
    "text": "some of this stuff isn't quite production ready so don't think you can go home and and start to run this stuff but it's definitely worth",
    "start": "1717760",
    "end": "1725840"
  },
  {
    "text": "keeping an eye on so trusted executive environments we'll leave that guys who know what they're",
    "start": "1725840",
    "end": "1732240"
  },
  {
    "text": "talking about much more than i do i've already spoken about that this week um actually i've i've just scuffled myself",
    "start": "1732240",
    "end": "1738960"
  },
  {
    "text": "there because i'm making up some of this stuff as i go along uh so tpm's",
    "start": "1738960",
    "end": "1745200"
  },
  {
    "text": "quick show of hands who knows what what a trusted platform module is",
    "start": "1745200",
    "end": "1749919"
  },
  {
    "text": "oh that's interesting more people know about that than know about the kubernetes token review api that's",
    "start": "1750480",
    "end": "1756640"
  },
  {
    "text": "so you can't make assumptions when you come and do things like this so tpm is a is a cryptographic device um",
    "start": "1756640",
    "end": "1764000"
  },
  {
    "text": "does things like secure generation and storage of of keys and these keys can't leave that",
    "start": "1764000",
    "end": "1769919"
  },
  {
    "text": "tpm in a in an unencrypted form um so that's really that's really useful",
    "start": "1769919",
    "end": "1775760"
  },
  {
    "text": "property for for tying things down to a specific machine so we earlier we saw that you could use an x509 certificate",
    "start": "1775760",
    "end": "1782559"
  },
  {
    "text": "to attest to node to spire but if i get hold of that certificate and walk off with it and put it on",
    "start": "1782559",
    "end": "1788240"
  },
  {
    "text": "another another machine i can impersonate that node with the keys from a tpm",
    "start": "1788240",
    "end": "1794559"
  },
  {
    "text": "they're they're encrypted outside of that tpm and you have to load them into the tpm",
    "start": "1794559",
    "end": "1799679"
  },
  {
    "text": "to decrypt them and use them so i can't i can't steal your certificate",
    "start": "1799679",
    "end": "1804960"
  },
  {
    "text": "and pretend to be you i have to be you with that tpm um so that's that's quite a nice",
    "start": "1804960",
    "end": "1811039"
  },
  {
    "text": "property uh pcrs they're special registers",
    "start": "1811039",
    "end": "1816640"
  },
  {
    "text": "you you can read from them but you cut you don't directly write to them um",
    "start": "1816640",
    "end": "1822399"
  },
  {
    "text": "the you can you basically extend them so um the new",
    "start": "1822399",
    "end": "1828559"
  },
  {
    "text": "they store a hash of of something so the new hash is the old hash plus the new measurement",
    "start": "1828559",
    "end": "1834840"
  },
  {
    "text": "um and key lime really interesting to look at so this uses it with the linux",
    "start": "1834840",
    "end": "1841440"
  },
  {
    "text": "ima subsystem and so it's doing remote attestation so",
    "start": "1841440",
    "end": "1846799"
  },
  {
    "text": "you can you can use that to kind of scan the files on on your node",
    "start": "1846799",
    "end": "1853840"
  },
  {
    "text": "stick that uh the hash of that into the uh the pcr",
    "start": "1853840",
    "end": "1859279"
  },
  {
    "text": "and then keylime can remotely check that so that gives you the ability to continuously verify the integrity",
    "start": "1859279",
    "end": "1866480"
  },
  {
    "text": "of your remote machines and on the keylime site they've got a nice little demo of removing a",
    "start": "1866480",
    "end": "1871840"
  },
  {
    "text": "compromised lcd node from a cluster so",
    "start": "1871840",
    "end": "1878720"
  },
  {
    "text": "we can use this with with spire now i only came across this last week",
    "start": "1878720",
    "end": "1883760"
  },
  {
    "text": "frantically playing around with it trying to get it to work so i could i could get it in here but it's it's it's pretty cool",
    "start": "1883760",
    "end": "1889120"
  },
  {
    "text": "um so you've got a a local device id which is a a public and a private key and a",
    "start": "1889120",
    "end": "1894640"
  },
  {
    "text": "certificate that are provisioned out of band um and then they come out of the tp the",
    "start": "1894640",
    "end": "1900480"
  },
  {
    "text": "the tpm encrypted um and then in the attestation process the",
    "start": "1900480",
    "end": "1906320"
  },
  {
    "text": "agent loads them into the tpm the the server will then go through",
    "start": "1906320",
    "end": "1911360"
  },
  {
    "text": "a challenge process um that can only succeed if uh",
    "start": "1911360",
    "end": "1916720"
  },
  {
    "text": "if you've got the keys in the tpm decrypted so now we can",
    "start": "1916720",
    "end": "1922960"
  },
  {
    "text": "we can provide harder guarantees that that node is than the node that we thought it is um",
    "start": "1922960",
    "end": "1929200"
  },
  {
    "text": "the spiffy id uses the fingerprint of the certificate so it's it's very it's very predictable",
    "start": "1929200",
    "end": "1935200"
  },
  {
    "text": "um just like the x509 um and the ssh certificate um",
    "start": "1935200",
    "end": "1940960"
  },
  {
    "text": "attestation methods so that's it's not i only found it last week",
    "start": "1940960",
    "end": "1946480"
  },
  {
    "text": "because it's not on the main documentation site for the uh for the spy stuff",
    "start": "1946480",
    "end": "1951919"
  },
  {
    "text": "but it it looks looks pretty interesting",
    "start": "1951919",
    "end": "1956320"
  },
  {
    "text": "and that's it so key takeaways",
    "start": "1958080",
    "end": "1963519"
  },
  {
    "text": "from my rambling this afternoon you might already have a workload identity if you're running on kubernetes",
    "start": "1963519",
    "end": "1970000"
  },
  {
    "text": "you have you've got your service account token and depending on on what you're trying to do",
    "start": "1970000",
    "end": "1977120"
  },
  {
    "text": "your kubernetes cluster might work as your identity provider if you're running on kubernetes and just talking to volt",
    "start": "1977120",
    "end": "1982480"
  },
  {
    "text": "um on the same kubernetes cluster then the token review api might be fine",
    "start": "1982480",
    "end": "1988960"
  },
  {
    "text": "if you're just running kubernetes workloads and you want to get temporary cloud credentials then maybe the oidc",
    "start": "1988960",
    "end": "1994640"
  },
  {
    "text": "stuff works to just swap your token for for that if you would kind of go into the",
    "start": "1994640",
    "end": "1999679"
  },
  {
    "text": "wider fields where you want to use the same job and the same identity in your job and your x 509 certificate",
    "start": "1999679",
    "end": "2006000"
  },
  {
    "text": "then you might want to think about uh spliffy inspire you kind of you've got more complexity",
    "start": "2006000",
    "end": "2011679"
  },
  {
    "text": "um and an operational and administrative overhead to run spire",
    "start": "2011679",
    "end": "2017519"
  },
  {
    "text": "but if you need the extra uh capabilities that gives you um",
    "start": "2017519",
    "end": "2023200"
  },
  {
    "text": "it it's certainly worth thinking about it so yeah consider spiffinspire see if",
    "start": "2023200",
    "end": "2029200"
  },
  {
    "text": "your if your needs really require that and investigate things like tpm's key lime and trusted",
    "start": "2029200",
    "end": "2036480"
  },
  {
    "text": "execution environments and that's me done",
    "start": "2036480",
    "end": "2043410"
  },
  {
    "text": "[Applause]",
    "start": "2043410",
    "end": "2049650"
  },
  {
    "text": "you",
    "start": "2051599",
    "end": "2053679"
  }
]