[
  {
    "start": "0",
    "end": "52000"
  },
  {
    "text": "hello everyone thanks for joining this",
    "start": "0",
    "end": "1839"
  },
  {
    "text": "cloud native security conference session",
    "start": "1839",
    "end": "5279"
  },
  {
    "text": "my name is kailan ching i'm a cloud",
    "start": "5279",
    "end": "7440"
  },
  {
    "text": "software engineer at intel",
    "start": "7440",
    "end": "9519"
  },
  {
    "text": "with a focus on security and",
    "start": "9519",
    "end": "11519"
  },
  {
    "text": "confidential computing",
    "start": "11519",
    "end": "14000"
  },
  {
    "text": "my topic today is towards the hardened",
    "start": "14000",
    "end": "16320"
  },
  {
    "text": "cloud native cornerstone",
    "start": "16320",
    "end": "18320"
  },
  {
    "text": "container runtime protection from",
    "start": "18320",
    "end": "20480"
  },
  {
    "text": "security to privacy",
    "start": "20480",
    "end": "23600"
  },
  {
    "text": "i'd like to hereby thankfully tremendous",
    "start": "23600",
    "end": "26000"
  },
  {
    "text": "help received from my teammates while",
    "start": "26000",
    "end": "28560"
  },
  {
    "text": "building these contents",
    "start": "28560",
    "end": "31840"
  },
  {
    "text": "so firstly let's jump into the question",
    "start": "31840",
    "end": "34160"
  },
  {
    "text": "about our main character today",
    "start": "34160",
    "end": "37440"
  },
  {
    "text": "the cloud native cornerstone container",
    "start": "37440",
    "end": "39840"
  },
  {
    "text": "how secure it is",
    "start": "39840",
    "end": "42879"
  },
  {
    "text": "we may not have a direct answer right",
    "start": "43040",
    "end": "44879"
  },
  {
    "text": "away",
    "start": "44879",
    "end": "45920"
  },
  {
    "text": "but let's take a look at the container",
    "start": "45920",
    "end": "47600"
  },
  {
    "text": "security",
    "start": "47600",
    "end": "48640"
  },
  {
    "text": "from different views",
    "start": "48640",
    "end": "51680"
  },
  {
    "start": "52000",
    "end": "52000"
  },
  {
    "text": "let's start with the container security",
    "start": "52239",
    "end": "54000"
  },
  {
    "text": "risks from users view",
    "start": "54000",
    "end": "57120"
  },
  {
    "text": "here is the chart from a white paper of",
    "start": "57120",
    "end": "59120"
  },
  {
    "text": "tencent cloud in 2021",
    "start": "59120",
    "end": "62000"
  },
  {
    "text": "which illustrates the container security",
    "start": "62000",
    "end": "64239"
  },
  {
    "text": "risks that users are most concerned",
    "start": "64239",
    "end": "66720"
  },
  {
    "text": "about",
    "start": "66720",
    "end": "69119"
  },
  {
    "text": "in this chart we can find that the",
    "start": "69600",
    "end": "71760"
  },
  {
    "text": "container escape",
    "start": "71760",
    "end": "73280"
  },
  {
    "text": "which is part of the runtime security",
    "start": "73280",
    "end": "75840"
  },
  {
    "text": "together with the image security and",
    "start": "75840",
    "end": "78159"
  },
  {
    "text": "cluster intrusion are the top three",
    "start": "78159",
    "end": "80560"
  },
  {
    "text": "concerns raised by users",
    "start": "80560",
    "end": "84079"
  },
  {
    "text": "however it is really hard to address the",
    "start": "84720",
    "end": "87119"
  },
  {
    "text": "risks before knowing the potential",
    "start": "87119",
    "end": "88799"
  },
  {
    "text": "threats",
    "start": "88799",
    "end": "90240"
  },
  {
    "text": "a systematic analysis of canadian",
    "start": "90240",
    "end": "92240"
  },
  {
    "text": "threats is therefore needed",
    "start": "92240",
    "end": "95520"
  },
  {
    "text": "here we present the threat model which",
    "start": "95520",
    "end": "97840"
  },
  {
    "text": "was given by open web application",
    "start": "97840",
    "end": "99680"
  },
  {
    "text": "security project lwasp on docker",
    "start": "99680",
    "end": "103280"
  },
  {
    "text": "in 2019",
    "start": "103280",
    "end": "105759"
  },
  {
    "text": "the threads of containers have been",
    "start": "105759",
    "end": "107360"
  },
  {
    "text": "categorized into six aspects according",
    "start": "107360",
    "end": "109600"
  },
  {
    "text": "to owasp",
    "start": "109600",
    "end": "111920"
  },
  {
    "text": "kernel exploits container outbreak",
    "start": "111920",
    "end": "114560"
  },
  {
    "text": "denial of service",
    "start": "114560",
    "end": "116079"
  },
  {
    "text": "and network threats",
    "start": "116079",
    "end": "117759"
  },
  {
    "text": "also possible poison images and",
    "start": "117759",
    "end": "120399"
  },
  {
    "text": "compromising secrets",
    "start": "120399",
    "end": "123360"
  },
  {
    "text": "it's easy to understand that most of",
    "start": "123360",
    "end": "125600"
  },
  {
    "text": "these threats are happening or can",
    "start": "125600",
    "end": "127520"
  },
  {
    "text": "eventually lead to security risks",
    "start": "127520",
    "end": "130080"
  },
  {
    "text": "at the wrong time of containers",
    "start": "130080",
    "end": "133520"
  },
  {
    "start": "134000",
    "end": "134000"
  },
  {
    "text": "in fact the threat model of containers",
    "start": "134239",
    "end": "136560"
  },
  {
    "text": "can be further extended in several ways",
    "start": "136560",
    "end": "139920"
  },
  {
    "text": "to complete the owsp threat model",
    "start": "139920",
    "end": "143200"
  },
  {
    "text": "first the end-to-end flow of containers",
    "start": "143200",
    "end": "145360"
  },
  {
    "text": "should be considered including the cncd",
    "start": "145360",
    "end": "148319"
  },
  {
    "text": "phases",
    "start": "148319",
    "end": "149520"
  },
  {
    "text": "as well as the code and image management",
    "start": "149520",
    "end": "152000"
  },
  {
    "text": "where supply chain kind of attacks can",
    "start": "152000",
    "end": "154160"
  },
  {
    "text": "happen",
    "start": "154160",
    "end": "156879"
  },
  {
    "text": "secondly a stride analysis can be",
    "start": "156879",
    "end": "159599"
  },
  {
    "text": "applied",
    "start": "159599",
    "end": "160640"
  },
  {
    "text": "to more fine-graded layers of containers",
    "start": "160640",
    "end": "164239"
  },
  {
    "text": "where we should be able to understand",
    "start": "164239",
    "end": "166239"
  },
  {
    "text": "when and how spoofing tempering",
    "start": "166239",
    "end": "169040"
  },
  {
    "text": "repudiation and information disclosure",
    "start": "169040",
    "end": "172000"
  },
  {
    "text": "and so on can occur in which layer",
    "start": "172000",
    "end": "175760"
  },
  {
    "text": "moreover with the evolution of attacks",
    "start": "175760",
    "end": "178560"
  },
  {
    "text": "and varied user scenarios we should take",
    "start": "178560",
    "end": "181280"
  },
  {
    "text": "stronger security targets and more",
    "start": "181280",
    "end": "183519"
  },
  {
    "text": "advanced attacker assumptions into our",
    "start": "183519",
    "end": "186000"
  },
  {
    "text": "account",
    "start": "186000",
    "end": "188319"
  },
  {
    "text": "with this extended continuous threat",
    "start": "188319",
    "end": "190000"
  },
  {
    "text": "modeling",
    "start": "190000",
    "end": "191519"
  },
  {
    "start": "191000",
    "end": "191000"
  },
  {
    "text": "then let's take another look from an",
    "start": "191519",
    "end": "193040"
  },
  {
    "text": "attacker's view",
    "start": "193040",
    "end": "194560"
  },
  {
    "text": "how does the running container look like",
    "start": "194560",
    "end": "196239"
  },
  {
    "text": "in their eyes",
    "start": "196239",
    "end": "198879"
  },
  {
    "text": "a container can run in a vm or directly",
    "start": "198879",
    "end": "201599"
  },
  {
    "text": "on top of the bare metal depending on",
    "start": "201599",
    "end": "204080"
  },
  {
    "text": "the deployment schemes",
    "start": "204080",
    "end": "207120"
  },
  {
    "text": "while in this diagram there are a host",
    "start": "207120",
    "end": "209280"
  },
  {
    "text": "of attack vectors",
    "start": "209280",
    "end": "211280"
  },
  {
    "text": "for instance",
    "start": "211280",
    "end": "212879"
  },
  {
    "text": "vulnerable code exploits",
    "start": "212879",
    "end": "215120"
  },
  {
    "text": "can occur in almost everywhere the code",
    "start": "215120",
    "end": "217040"
  },
  {
    "text": "runs",
    "start": "217040",
    "end": "219360"
  },
  {
    "text": "in addition",
    "start": "219360",
    "end": "220560"
  },
  {
    "text": "bad and uncompliant configurations",
    "start": "220560",
    "end": "223360"
  },
  {
    "text": "can expose a large attack surface",
    "start": "223360",
    "end": "227599"
  },
  {
    "text": "also the running containers can be",
    "start": "227599",
    "end": "229440"
  },
  {
    "text": "connected with insecure networking",
    "start": "229440",
    "end": "233599"
  },
  {
    "text": "besides",
    "start": "233760",
    "end": "235040"
  },
  {
    "text": "containers can be using compromised",
    "start": "235040",
    "end": "237280"
  },
  {
    "text": "images leaking secrets and escaping from",
    "start": "237280",
    "end": "240480"
  },
  {
    "text": "their security boundaries",
    "start": "240480",
    "end": "243439"
  },
  {
    "text": "it's also worth mentioning that in some",
    "start": "243439",
    "end": "245599"
  },
  {
    "text": "scenarios",
    "start": "245599",
    "end": "246799"
  },
  {
    "text": "even the hosts i mean the hosts kernels",
    "start": "246799",
    "end": "249840"
  },
  {
    "text": "and os's themselves can be malicious",
    "start": "249840",
    "end": "254599"
  },
  {
    "text": "so with these attack surface",
    "start": "254640",
    "end": "256959"
  },
  {
    "start": "255000",
    "end": "255000"
  },
  {
    "text": "surfaces exposed",
    "start": "256959",
    "end": "258880"
  },
  {
    "text": "we are able to summarize the possible",
    "start": "258880",
    "end": "260720"
  },
  {
    "text": "attack paths or scenarios of containers",
    "start": "260720",
    "end": "264320"
  },
  {
    "text": "so firstly",
    "start": "264320",
    "end": "265680"
  },
  {
    "text": "the first attack scenario is the intro",
    "start": "265680",
    "end": "268000"
  },
  {
    "text": "container attack",
    "start": "268000",
    "end": "269919"
  },
  {
    "text": "where the user's applications can be",
    "start": "269919",
    "end": "272560"
  },
  {
    "text": "attacked by the language runtime or",
    "start": "272560",
    "end": "274800"
  },
  {
    "text": "libraries running within the same",
    "start": "274800",
    "end": "276240"
  },
  {
    "text": "container",
    "start": "276240",
    "end": "278160"
  },
  {
    "text": "the second attack scenario is called",
    "start": "278160",
    "end": "280000"
  },
  {
    "text": "intercontainer attack where containers",
    "start": "280000",
    "end": "282240"
  },
  {
    "text": "are able to attack each other",
    "start": "282240",
    "end": "285199"
  },
  {
    "text": "the third one is called container to",
    "start": "285199",
    "end": "287280"
  },
  {
    "text": "host and host to container attack",
    "start": "287280",
    "end": "289759"
  },
  {
    "text": "this is one of the most common attack",
    "start": "289759",
    "end": "291600"
  },
  {
    "text": "scenarios",
    "start": "291600",
    "end": "293919"
  },
  {
    "text": "well the fourth attack is called",
    "start": "293919",
    "end": "295840"
  },
  {
    "text": "container to container wrong time or",
    "start": "295840",
    "end": "297919"
  },
  {
    "text": "sometimes container engine attack",
    "start": "297919",
    "end": "301039"
  },
  {
    "text": "the fifth one is host to runtime attack",
    "start": "301039",
    "end": "303840"
  },
  {
    "text": "and finally we have the last one we call",
    "start": "303840",
    "end": "306000"
  },
  {
    "text": "it cluster or cloud attack",
    "start": "306000",
    "end": "308560"
  },
  {
    "text": "where attacks can be launched through",
    "start": "308560",
    "end": "310880"
  },
  {
    "text": "cross-host networks",
    "start": "310880",
    "end": "314400"
  },
  {
    "text": "after having a thorough analysis of our",
    "start": "315600",
    "end": "317759"
  },
  {
    "text": "enemies the next question is",
    "start": "317759",
    "end": "320320"
  },
  {
    "text": "how can we defend against all these",
    "start": "320320",
    "end": "322320"
  },
  {
    "text": "threats",
    "start": "322320",
    "end": "324000"
  },
  {
    "text": "so let's try to put a shield on the",
    "start": "324000",
    "end": "326400"
  },
  {
    "text": "containers",
    "start": "326400",
    "end": "328960"
  },
  {
    "start": "329000",
    "end": "329000"
  },
  {
    "text": "one first attempt is to apply the best",
    "start": "329600",
    "end": "332560"
  },
  {
    "text": "practices of container hardening",
    "start": "332560",
    "end": "335520"
  },
  {
    "text": "such as using secure mapping following",
    "start": "335520",
    "end": "337919"
  },
  {
    "text": "mutable paradigm and so on as suggested",
    "start": "337919",
    "end": "340400"
  },
  {
    "text": "by owasp",
    "start": "340400",
    "end": "343360"
  },
  {
    "text": "this best practice",
    "start": "343360",
    "end": "345120"
  },
  {
    "text": "can help avoid at least",
    "start": "345120",
    "end": "347759"
  },
  {
    "text": "or at least mitigate several types of",
    "start": "347759",
    "end": "349680"
  },
  {
    "text": "container threats",
    "start": "349680",
    "end": "353160"
  },
  {
    "start": "353000",
    "end": "353000"
  },
  {
    "text": "a second short can be given by fully",
    "start": "353520",
    "end": "356240"
  },
  {
    "text": "leveraging the container security",
    "start": "356240",
    "end": "357919"
  },
  {
    "text": "features",
    "start": "357919",
    "end": "358960"
  },
  {
    "text": "that we have so far in the container",
    "start": "358960",
    "end": "360560"
  },
  {
    "text": "ecosystem",
    "start": "360560",
    "end": "362639"
  },
  {
    "text": "the security features include the ones",
    "start": "362639",
    "end": "365360"
  },
  {
    "text": "applied to the images",
    "start": "365360",
    "end": "367039"
  },
  {
    "text": "cluster environments",
    "start": "367039",
    "end": "368639"
  },
  {
    "text": "demand and the core components of",
    "start": "368639",
    "end": "370160"
  },
  {
    "text": "containers",
    "start": "370160",
    "end": "371360"
  },
  {
    "text": "and to the containers themselves",
    "start": "371360",
    "end": "374880"
  },
  {
    "text": "let's revisit here the software-based",
    "start": "374880",
    "end": "376800"
  },
  {
    "text": "security features",
    "start": "376800",
    "end": "378479"
  },
  {
    "text": "of containers themselves for example",
    "start": "378479",
    "end": "381280"
  },
  {
    "text": "we have c groups and namespacing the",
    "start": "381280",
    "end": "383199"
  },
  {
    "text": "kernel space which are the foundations",
    "start": "383199",
    "end": "385360"
  },
  {
    "text": "of containers",
    "start": "385360",
    "end": "387360"
  },
  {
    "text": "beyond these two there are also",
    "start": "387360",
    "end": "389280"
  },
  {
    "text": "capability mechanisms",
    "start": "389280",
    "end": "391360"
  },
  {
    "text": "and cisco restriction mechanisms like",
    "start": "391360",
    "end": "393360"
  },
  {
    "text": "sitcom",
    "start": "393360",
    "end": "395840"
  },
  {
    "text": "in addition mandatory access controls",
    "start": "395919",
    "end": "398639"
  },
  {
    "text": "mac",
    "start": "398639",
    "end": "399840"
  },
  {
    "text": "can be enabled by linux security modules",
    "start": "399840",
    "end": "402240"
  },
  {
    "text": "lsm",
    "start": "402240",
    "end": "404880"
  },
  {
    "text": "it's also containing uid and gid",
    "start": "405199",
    "end": "406960"
  },
  {
    "text": "management and usernamespace remap etc",
    "start": "406960",
    "end": "410960"
  },
  {
    "text": "we can build up a more security hardened",
    "start": "410960",
    "end": "413360"
  },
  {
    "text": "container",
    "start": "413360",
    "end": "415918"
  },
  {
    "start": "418000",
    "end": "418000"
  },
  {
    "text": "what else can we try",
    "start": "418000",
    "end": "419759"
  },
  {
    "text": "in production runtime security detection",
    "start": "419759",
    "end": "423199"
  },
  {
    "text": "which monitors and reports out abnormal",
    "start": "423199",
    "end": "426000"
  },
  {
    "text": "container behaviors such as high-risk",
    "start": "426000",
    "end": "428240"
  },
  {
    "text": "systems and file tempering is usually",
    "start": "428240",
    "end": "430560"
  },
  {
    "text": "deployed in production",
    "start": "430560",
    "end": "433280"
  },
  {
    "text": "a series of vulnerability mitigations in",
    "start": "433280",
    "end": "435520"
  },
  {
    "text": "kernel and applications",
    "start": "435520",
    "end": "437840"
  },
  {
    "text": "can be utilized in parallel",
    "start": "437840",
    "end": "441440"
  },
  {
    "text": "note that image scanning and encryption",
    "start": "441440",
    "end": "444160"
  },
  {
    "text": "are two practical enhancements for",
    "start": "444160",
    "end": "445840"
  },
  {
    "text": "images to help raise the security bar",
    "start": "445840",
    "end": "450639"
  },
  {
    "text": "it's worth highlighting that",
    "start": "450639",
    "end": "452639"
  },
  {
    "text": "hardware-based container security",
    "start": "452639",
    "end": "454400"
  },
  {
    "text": "techniques",
    "start": "454400",
    "end": "455919"
  },
  {
    "text": "like virtualized secure containers are",
    "start": "455919",
    "end": "458080"
  },
  {
    "text": "regarded as very helpful",
    "start": "458080",
    "end": "460319"
  },
  {
    "text": "for defending against the container",
    "start": "460319",
    "end": "462319"
  },
  {
    "text": "escape",
    "start": "462319",
    "end": "463759"
  },
  {
    "text": "and for world looking trusty execution",
    "start": "463759",
    "end": "466319"
  },
  {
    "text": "environment-based confidential",
    "start": "466319",
    "end": "467759"
  },
  {
    "text": "containers appealing to address the",
    "start": "467759",
    "end": "470000"
  },
  {
    "text": "privacy concerns",
    "start": "470000",
    "end": "472000"
  },
  {
    "text": "which will talk about them further later",
    "start": "472000",
    "end": "474560"
  },
  {
    "text": "in this",
    "start": "474560",
    "end": "476840"
  },
  {
    "text": "talk with all this black magic",
    "start": "476840",
    "end": "480000"
  },
  {
    "text": "our container is free from security",
    "start": "480000",
    "end": "481599"
  },
  {
    "text": "threats today",
    "start": "481599",
    "end": "484319"
  },
  {
    "start": "484000",
    "end": "484000"
  },
  {
    "text": "unfortunately the answer might be a",
    "start": "484400",
    "end": "486560"
  },
  {
    "text": "little bit annoying and disappointing",
    "start": "486560",
    "end": "489680"
  },
  {
    "text": "but the truth is that the containers are",
    "start": "489680",
    "end": "492160"
  },
  {
    "text": "far from secure",
    "start": "492160",
    "end": "494080"
  },
  {
    "text": "one of the first reasons is that through",
    "start": "494080",
    "end": "497280"
  },
  {
    "text": "even though designed almost perfectly",
    "start": "497280",
    "end": "500319"
  },
  {
    "text": "but we lack security feature deployment",
    "start": "500319",
    "end": "502240"
  },
  {
    "text": "in real production environment",
    "start": "502240",
    "end": "504800"
  },
  {
    "text": "this can be due to their high energy",
    "start": "504800",
    "end": "507120"
  },
  {
    "text": "barrier low roi and stability concerns",
    "start": "507120",
    "end": "510800"
  },
  {
    "text": "and so on",
    "start": "510800",
    "end": "513279"
  },
  {
    "text": "the investigation from tension cloud",
    "start": "513279",
    "end": "515279"
  },
  {
    "text": "found out that there are still seven",
    "start": "515279",
    "end": "517360"
  },
  {
    "text": "percent of users are still running",
    "start": "517360",
    "end": "519760"
  },
  {
    "text": "without any security capabilities",
    "start": "519760",
    "end": "522080"
  },
  {
    "text": "which can be very terrible",
    "start": "522080",
    "end": "525120"
  },
  {
    "text": "furthermore some advanced security",
    "start": "525120",
    "end": "527200"
  },
  {
    "text": "capabilities that we introduced just now",
    "start": "527200",
    "end": "529680"
  },
  {
    "text": "are not yet a use",
    "start": "529680",
    "end": "531279"
  },
  {
    "text": "to tackle with the advanced exploits",
    "start": "531279",
    "end": "535839"
  },
  {
    "start": "536000",
    "end": "536000"
  },
  {
    "text": "besides the shortage of deployment",
    "start": "536560",
    "end": "539040"
  },
  {
    "text": "another important fact that cannot be",
    "start": "539040",
    "end": "541120"
  },
  {
    "text": "ignored is that the weaknesses are still",
    "start": "541120",
    "end": "543839"
  },
  {
    "text": "across every layer",
    "start": "543839",
    "end": "546000"
  },
  {
    "text": "the kernel layer",
    "start": "546000",
    "end": "547680"
  },
  {
    "text": "the container layer and the",
    "start": "547680",
    "end": "549200"
  },
  {
    "text": "orchestration layer",
    "start": "549200",
    "end": "551360"
  },
  {
    "text": "even in this year or the past 2021 cves",
    "start": "551360",
    "end": "555279"
  },
  {
    "text": "that can lead to container escape and",
    "start": "555279",
    "end": "557360"
  },
  {
    "text": "privilege exclamation still come up very",
    "start": "557360",
    "end": "559839"
  },
  {
    "text": "very frequently in the kernel layer and",
    "start": "559839",
    "end": "562080"
  },
  {
    "text": "the container layer",
    "start": "562080",
    "end": "564080"
  },
  {
    "text": "the content layer where the core",
    "start": "564080",
    "end": "565920"
  },
  {
    "text": "container components like docker",
    "start": "565920",
    "end": "568240"
  },
  {
    "text": "container d and run c are lying in",
    "start": "568240",
    "end": "570720"
  },
  {
    "text": "are still facing a huge number of",
    "start": "570720",
    "end": "572080"
  },
  {
    "text": "vulnerabilities",
    "start": "572080",
    "end": "573519"
  },
  {
    "text": "not only the container escape privilege",
    "start": "573519",
    "end": "575839"
  },
  {
    "text": "escalation but also in the command",
    "start": "575839",
    "end": "578160"
  },
  {
    "text": "execution their mounts and configs",
    "start": "578160",
    "end": "582560"
  },
  {
    "text": "even the",
    "start": "582560",
    "end": "583600"
  },
  {
    "text": "virtualized secure containers like kata",
    "start": "583600",
    "end": "585680"
  },
  {
    "text": "containers which were thought to be more",
    "start": "585680",
    "end": "587839"
  },
  {
    "text": "secure are found to be not immune from",
    "start": "587839",
    "end": "591200"
  },
  {
    "text": "some advanced hacks",
    "start": "591200",
    "end": "594480"
  },
  {
    "text": "well in short",
    "start": "594880",
    "end": "596320"
  },
  {
    "text": "the container on time security is yet",
    "start": "596320",
    "end": "598320"
  },
  {
    "text": "another canon mouse game",
    "start": "598320",
    "end": "600640"
  },
  {
    "text": "let's then deep dive into what are the",
    "start": "600640",
    "end": "602560"
  },
  {
    "text": "recent advances of defense security",
    "start": "602560",
    "end": "604480"
  },
  {
    "text": "techniques in the container world in",
    "start": "604480",
    "end": "606640"
  },
  {
    "text": "response to the varied requirements and",
    "start": "606640",
    "end": "609120"
  },
  {
    "text": "advanced attacks",
    "start": "609120",
    "end": "612079"
  },
  {
    "text": "in real world",
    "start": "612240",
    "end": "614320"
  },
  {
    "text": "inoculates and trusted process can",
    "start": "614320",
    "end": "616959"
  },
  {
    "text": "sometimes become malicious during its",
    "start": "616959",
    "end": "619760"
  },
  {
    "text": "lifetime because of bugs have been",
    "start": "619760",
    "end": "622480"
  },
  {
    "text": "exploited by attackers or just triggered",
    "start": "622480",
    "end": "624880"
  },
  {
    "text": "by or used misused by users",
    "start": "624880",
    "end": "628800"
  },
  {
    "text": "a series of sandboxing mechanical",
    "start": "628800",
    "end": "630839"
  },
  {
    "text": "mechanisms are therefore invented to",
    "start": "630839",
    "end": "633680"
  },
  {
    "text": "help isolate a software component from",
    "start": "633680",
    "end": "636240"
  },
  {
    "text": "the rest of the system",
    "start": "636240",
    "end": "638800"
  },
  {
    "text": "in this picture we are comparing",
    "start": "638800",
    "end": "640880"
  },
  {
    "text": "different sandboxing mechanisms",
    "start": "640880",
    "end": "643200"
  },
  {
    "text": "and we will introduce today a recently",
    "start": "643200",
    "end": "645440"
  },
  {
    "text": "one called landlock which has some",
    "start": "645440",
    "end": "649519"
  },
  {
    "text": "advantages in performance fine grain",
    "start": "649519",
    "end": "652399"
  },
  {
    "text": "control embedded policy and unprivileged",
    "start": "652399",
    "end": "655600"
  },
  {
    "text": "use",
    "start": "655600",
    "end": "657680"
  },
  {
    "start": "657000",
    "end": "657000"
  },
  {
    "text": "different from",
    "start": "657680",
    "end": "658959"
  },
  {
    "text": "a mandatory access control mac provided",
    "start": "658959",
    "end": "661360"
  },
  {
    "text": "by linux security module lsm in kernel",
    "start": "661360",
    "end": "664560"
  },
  {
    "text": "then log is the first mac available to",
    "start": "664560",
    "end": "667279"
  },
  {
    "text": "unprivileged processes on learning syncs",
    "start": "667279",
    "end": "670160"
  },
  {
    "text": "513.",
    "start": "670160",
    "end": "672320"
  },
  {
    "text": "landlord is such a sandboxing technique",
    "start": "672320",
    "end": "675040"
  },
  {
    "text": "to restrict ambient rights according to",
    "start": "675040",
    "end": "677760"
  },
  {
    "text": "the kernel semantic for example global",
    "start": "677760",
    "end": "679839"
  },
  {
    "text": "file system accesses a set of processes",
    "start": "679839",
    "end": "682880"
  },
  {
    "text": "to complete the limitations of the",
    "start": "682880",
    "end": "685200"
  },
  {
    "text": "c-comp",
    "start": "685200",
    "end": "687680"
  },
  {
    "text": "it also helps create a safe security",
    "start": "687760",
    "end": "689760"
  },
  {
    "text": "sandboxes as new security layers",
    "start": "689760",
    "end": "692959"
  },
  {
    "text": "in addition to the existing system-wide",
    "start": "692959",
    "end": "694959"
  },
  {
    "text": "access controls",
    "start": "694959",
    "end": "697680"
  },
  {
    "text": "so with landlock we are",
    "start": "697680",
    "end": "699839"
  },
  {
    "text": "also able to compose success controls",
    "start": "699839",
    "end": "702480"
  },
  {
    "text": "from multiple tenants for example system",
    "start": "702480",
    "end": "704640"
  },
  {
    "text": "domains app developers and cloud clients",
    "start": "704640",
    "end": "708959"
  },
  {
    "text": "it's a really interesting technique to",
    "start": "708959",
    "end": "710800"
  },
  {
    "text": "enable built-in application sandboxing",
    "start": "710800",
    "end": "713200"
  },
  {
    "text": "to protect against explorable",
    "start": "713200",
    "end": "715839"
  },
  {
    "text": "in trusted applications via embedded",
    "start": "715839",
    "end": "718240"
  },
  {
    "text": "policy",
    "start": "718240",
    "end": "719360"
  },
  {
    "text": "or directly against untrusted",
    "start": "719360",
    "end": "721279"
  },
  {
    "text": "applications",
    "start": "721279",
    "end": "722480"
  },
  {
    "text": "via sandboxes or container managers",
    "start": "722480",
    "end": "726639"
  },
  {
    "text": "the container on time is such a case",
    "start": "726720",
    "end": "728959"
  },
  {
    "start": "727000",
    "end": "727000"
  },
  {
    "text": "that can benefit from landlock a lot",
    "start": "728959",
    "end": "732720"
  },
  {
    "text": "equipping containers with landlocked is",
    "start": "732720",
    "end": "734880"
  },
  {
    "text": "an ongoing effort happening in the wrong",
    "start": "734880",
    "end": "736959"
  },
  {
    "text": "time spec and the wrong c communities",
    "start": "736959",
    "end": "740880"
  },
  {
    "text": "here in this diagram we are",
    "start": "740880",
    "end": "742959"
  },
  {
    "text": "demonstrating the schema in the runtime",
    "start": "742959",
    "end": "745040"
  },
  {
    "text": "spec where users can specify the lan",
    "start": "745040",
    "end": "747519"
  },
  {
    "text": "lock unprivileged set",
    "start": "747519",
    "end": "749440"
  },
  {
    "text": "access control settings for the",
    "start": "749440",
    "end": "751200"
  },
  {
    "text": "container process",
    "start": "751200",
    "end": "754000"
  },
  {
    "text": "the users firstly need to identify a set",
    "start": "754000",
    "end": "756639"
  },
  {
    "text": "of rules and define them as a rule set",
    "start": "756639",
    "end": "759519"
  },
  {
    "text": "so in general the rule set is basically",
    "start": "759519",
    "end": "762160"
  },
  {
    "text": "the actions or objects that need to be",
    "start": "762160",
    "end": "764320"
  },
  {
    "text": "handled or restricted",
    "start": "764320",
    "end": "767200"
  },
  {
    "text": "next the rules field specifies the",
    "start": "767200",
    "end": "769519"
  },
  {
    "text": "security policies to be added to",
    "start": "769519",
    "end": "771279"
  },
  {
    "text": "existing rule set",
    "start": "771279",
    "end": "773360"
  },
  {
    "text": "and pass beneath is the only supported",
    "start": "773360",
    "end": "775360"
  },
  {
    "text": "currently",
    "start": "775360",
    "end": "776480"
  },
  {
    "text": "which is an array of",
    "start": "776480",
    "end": "778399"
  },
  {
    "text": "the file hierarchy type rules",
    "start": "778399",
    "end": "781519"
  },
  {
    "text": "in each rule",
    "start": "781519",
    "end": "783279"
  },
  {
    "text": "users can specify a fine-grained",
    "start": "783279",
    "end": "785200"
  },
  {
    "text": "approach of the file's hierarchies to",
    "start": "785200",
    "end": "787360"
  },
  {
    "text": "restrict and the actions are allowed for",
    "start": "787360",
    "end": "789760"
  },
  {
    "text": "each one",
    "start": "789760",
    "end": "791680"
  },
  {
    "text": "a best effort control is also provided",
    "start": "791680",
    "end": "795200"
  },
  {
    "text": "to help the runtime enforce the",
    "start": "795200",
    "end": "797120"
  },
  {
    "text": "strongest rules configured up to the",
    "start": "797120",
    "end": "799920"
  },
  {
    "text": "kernel which is currently supported",
    "start": "799920",
    "end": "804079"
  },
  {
    "text": "in general unpredicted sandboxing can be",
    "start": "804560",
    "end": "807600"
  },
  {
    "text": "enabled through this approach",
    "start": "807600",
    "end": "811040"
  },
  {
    "text": "then let's take a look at an advanced",
    "start": "811440",
    "end": "814079"
  },
  {
    "text": "attack called crossht attack",
    "start": "814079",
    "end": "816880"
  },
  {
    "text": "ht here stands for hyper threading or",
    "start": "816880",
    "end": "819040"
  },
  {
    "text": "hyperthreads",
    "start": "819040",
    "end": "820720"
  },
  {
    "text": "a cross-hd attack",
    "start": "820720",
    "end": "822399"
  },
  {
    "text": "involves the attacker and the victim",
    "start": "822399",
    "end": "824399"
  },
  {
    "text": "running on different types of threats of",
    "start": "824399",
    "end": "826639"
  },
  {
    "text": "the same core",
    "start": "826639",
    "end": "828720"
  },
  {
    "text": "mds and l1tf are examples",
    "start": "828720",
    "end": "831680"
  },
  {
    "text": "of such attacks where an attacker is",
    "start": "831680",
    "end": "834320"
  },
  {
    "text": "able to steal secrets from another",
    "start": "834320",
    "end": "836720"
  },
  {
    "text": "co-located",
    "start": "836720",
    "end": "838079"
  },
  {
    "text": "hyperthread",
    "start": "838079",
    "end": "839440"
  },
  {
    "text": "through some set channels",
    "start": "839440",
    "end": "842800"
  },
  {
    "text": "the only full mitigation of cross ht",
    "start": "842800",
    "end": "845600"
  },
  {
    "text": "attacks is to disable ht",
    "start": "845600",
    "end": "848320"
  },
  {
    "text": "which is considered to be extremely",
    "start": "848320",
    "end": "850240"
  },
  {
    "text": "inefficient",
    "start": "850240",
    "end": "853040"
  },
  {
    "start": "853000",
    "end": "853000"
  },
  {
    "text": "cross scheduling since linux 514 is a",
    "start": "854480",
    "end": "857600"
  },
  {
    "text": "scheduler feature that can mitigate some",
    "start": "857600",
    "end": "860160"
  },
  {
    "text": "but not all cross hd attacks",
    "start": "860160",
    "end": "862800"
  },
  {
    "text": "it allows http to be enabled or turned",
    "start": "862800",
    "end": "865279"
  },
  {
    "text": "on safely by ensuring that only tasks in",
    "start": "865279",
    "end": "868399"
  },
  {
    "text": "a user designated untrusted group can",
    "start": "868399",
    "end": "871839"
  },
  {
    "text": "share a call",
    "start": "871839",
    "end": "874480"
  },
  {
    "text": "this increase in core sharing can also",
    "start": "875199",
    "end": "877199"
  },
  {
    "text": "improve performance however it is not",
    "start": "877199",
    "end": "879440"
  },
  {
    "text": "guaranteed that the performance will",
    "start": "879440",
    "end": "881120"
  },
  {
    "text": "always improve",
    "start": "881120",
    "end": "882399"
  },
  {
    "text": "so that is seen to be the case with the",
    "start": "882399",
    "end": "884720"
  },
  {
    "text": "number of real-world workloads",
    "start": "884720",
    "end": "887440"
  },
  {
    "text": "but in theory",
    "start": "887440",
    "end": "888959"
  },
  {
    "text": "cost scheduling aims to perform at least",
    "start": "888959",
    "end": "891199"
  },
  {
    "text": "as good as when have us writing is",
    "start": "891199",
    "end": "893440"
  },
  {
    "text": "disabled",
    "start": "893440",
    "end": "896079"
  },
  {
    "text": "the basic concept of course scheduling",
    "start": "896160",
    "end": "898079"
  },
  {
    "text": "is to allow user space to define groups",
    "start": "898079",
    "end": "900160"
  },
  {
    "text": "of tasks and can share a core",
    "start": "900160",
    "end": "903199"
  },
  {
    "text": "from this diagram here",
    "start": "903199",
    "end": "905600"
  },
  {
    "text": "we can observe that some tasks are",
    "start": "905600",
    "end": "907680"
  },
  {
    "text": "grouped together",
    "start": "907680",
    "end": "909120"
  },
  {
    "text": "the grouped tasks are holding the same",
    "start": "909120",
    "end": "912160"
  },
  {
    "text": "so-called task cookies",
    "start": "912160",
    "end": "915680"
  },
  {
    "text": "tasks from the same group",
    "start": "915680",
    "end": "917600"
  },
  {
    "text": "for example t1 and t5 can be scheduled",
    "start": "917600",
    "end": "920720"
  },
  {
    "text": "on the same core",
    "start": "920720",
    "end": "922880"
  },
  {
    "text": "there are two other rules the first one",
    "start": "922880",
    "end": "925040"
  },
  {
    "text": "is that never mixing on the same core",
    "start": "925040",
    "end": "928240"
  },
  {
    "text": "tasks from different groups",
    "start": "928240",
    "end": "930480"
  },
  {
    "text": "for instance t6 and t7 on the right of",
    "start": "930480",
    "end": "933680"
  },
  {
    "text": "the diagram will never be scheduled onto",
    "start": "933680",
    "end": "935759"
  },
  {
    "text": "the same floor",
    "start": "935759",
    "end": "937680"
  },
  {
    "text": "another one is to never mix on the same",
    "start": "937680",
    "end": "940399"
  },
  {
    "text": "call the tasks that one is grouped and",
    "start": "940399",
    "end": "943440"
  },
  {
    "text": "another one",
    "start": "943440",
    "end": "944800"
  },
  {
    "text": "which is not or ungrouped",
    "start": "944800",
    "end": "948240"
  },
  {
    "text": "some cpu threads may stay idle even if",
    "start": "948240",
    "end": "951680"
  },
  {
    "text": "run queue is not empty",
    "start": "951680",
    "end": "953680"
  },
  {
    "text": "in this diagram we can find that ta and",
    "start": "953680",
    "end": "956639"
  },
  {
    "text": "t9 are in this case",
    "start": "956639",
    "end": "960320"
  },
  {
    "text": "know that co-scheduling can also help",
    "start": "960320",
    "end": "962240"
  },
  {
    "text": "with some performance use cases but we",
    "start": "962240",
    "end": "964480"
  },
  {
    "text": "will not elaborate them here in this",
    "start": "964480",
    "end": "966639"
  },
  {
    "text": "topic",
    "start": "966639",
    "end": "969639"
  },
  {
    "start": "968000",
    "end": "968000"
  },
  {
    "text": "enhancing containers with core",
    "start": "969759",
    "end": "971120"
  },
  {
    "text": "scheduling support",
    "start": "971120",
    "end": "972560"
  },
  {
    "text": "is also raised in the runtime spec and",
    "start": "972560",
    "end": "974880"
  },
  {
    "text": "around c communities",
    "start": "974880",
    "end": "977600"
  },
  {
    "text": "in this schema users are allowed to",
    "start": "977600",
    "end": "980000"
  },
  {
    "text": "configure the course scheduling options",
    "start": "980000",
    "end": "981839"
  },
  {
    "text": "for the container",
    "start": "981839",
    "end": "983839"
  },
  {
    "text": "by coursegate users are allowed to",
    "start": "983839",
    "end": "985759"
  },
  {
    "text": "define the following operations",
    "start": "985759",
    "end": "988480"
  },
  {
    "text": "the create",
    "start": "988480",
    "end": "990480"
  },
  {
    "text": "field can choose whether to create a new",
    "start": "990480",
    "end": "992639"
  },
  {
    "text": "unique cookie",
    "start": "992639",
    "end": "994160"
  },
  {
    "text": "for the process in the container",
    "start": "994160",
    "end": "996800"
  },
  {
    "text": "the share to field specified the pids",
    "start": "996800",
    "end": "1000320"
  },
  {
    "text": "that",
    "start": "1000320",
    "end": "1001440"
  },
  {
    "text": "the course get cookie of the current",
    "start": "1001440",
    "end": "1003120"
  },
  {
    "text": "process should push to",
    "start": "1003120",
    "end": "1004800"
  },
  {
    "text": "and share form specifies the pids that",
    "start": "1004800",
    "end": "1007839"
  },
  {
    "text": "the calls get copied of the current",
    "start": "1007839",
    "end": "1009839"
  },
  {
    "text": "process should prove from",
    "start": "1009839",
    "end": "1012639"
  },
  {
    "text": "all these provide support for setting",
    "start": "1012639",
    "end": "1014959"
  },
  {
    "text": "and copying cost scheduling task cookies",
    "start": "1014959",
    "end": "1017440"
  },
  {
    "text": "between the container processes",
    "start": "1017440",
    "end": "1019440"
  },
  {
    "text": "and the threads processes and the",
    "start": "1019440",
    "end": "1021839"
  },
  {
    "text": "process groups which helps define groups",
    "start": "1021839",
    "end": "1024400"
  },
  {
    "text": "of tasks that can be co-scheduled onto",
    "start": "1024400",
    "end": "1026798"
  },
  {
    "text": "the same core according to the basic",
    "start": "1026799",
    "end": "1029438"
  },
  {
    "text": "concept that we mentioned just now",
    "start": "1029439",
    "end": "1033199"
  },
  {
    "start": "1033000",
    "end": "1033000"
  },
  {
    "text": "the hardware software code design is",
    "start": "1033520",
    "end": "1035038"
  },
  {
    "text": "another merging advance in the container",
    "start": "1035039",
    "end": "1036959"
  },
  {
    "text": "security enhancement",
    "start": "1036959",
    "end": "1038480"
  },
  {
    "text": "that is worth introducing here in our",
    "start": "1038480",
    "end": "1040720"
  },
  {
    "text": "talk",
    "start": "1040720",
    "end": "1042480"
  },
  {
    "text": "for instance the control flow",
    "start": "1042480",
    "end": "1044160"
  },
  {
    "text": "enforcement technology",
    "start": "1044160",
    "end": "1046000"
  },
  {
    "text": "deliver cpu level",
    "start": "1046000",
    "end": "1048160"
  },
  {
    "text": "level security capabilities to help",
    "start": "1048160",
    "end": "1051039"
  },
  {
    "text": "protect against quantum malware attacks",
    "start": "1051039",
    "end": "1055039"
  },
  {
    "text": "and they have been a challenge to",
    "start": "1055039",
    "end": "1057039"
  },
  {
    "text": "mitigate with software alone",
    "start": "1057039",
    "end": "1060480"
  },
  {
    "text": "cet offers",
    "start": "1060480",
    "end": "1062240"
  },
  {
    "text": "two key capabilities to help define",
    "start": "1062240",
    "end": "1064880"
  },
  {
    "text": "against control flow hijacking malware",
    "start": "1064880",
    "end": "1067520"
  },
  {
    "text": "here we can find these two technologies",
    "start": "1067520",
    "end": "1070960"
  },
  {
    "text": "the first one is called indirect branch",
    "start": "1070960",
    "end": "1072960"
  },
  {
    "text": "tracking ibt and the second one is",
    "start": "1072960",
    "end": "1075760"
  },
  {
    "text": "called shadow stack",
    "start": "1075760",
    "end": "1077600"
  },
  {
    "text": "we call it ss",
    "start": "1077600",
    "end": "1079520"
  },
  {
    "text": "you can see from the left left part that",
    "start": "1079520",
    "end": "1082799"
  },
  {
    "text": "the ibt delivers indirect branch",
    "start": "1082799",
    "end": "1084880"
  },
  {
    "text": "protection to defend against jump or",
    "start": "1084880",
    "end": "1087760"
  },
  {
    "text": "core oriented programming we often call",
    "start": "1087760",
    "end": "1090080"
  },
  {
    "text": "them gop or copy attacks",
    "start": "1090080",
    "end": "1092720"
  },
  {
    "text": "you can see from the picture",
    "start": "1092720",
    "end": "1094400"
  },
  {
    "text": "that ibt will prevent attacks from",
    "start": "1094400",
    "end": "1096640"
  },
  {
    "text": "jumping to arbitrary addresses",
    "start": "1096640",
    "end": "1099679"
  },
  {
    "text": "and the ss technology on the right",
    "start": "1099679",
    "end": "1102240"
  },
  {
    "text": "delivers the return address protection",
    "start": "1102240",
    "end": "1104640"
  },
  {
    "text": "to help defend against return-oriented",
    "start": "1104640",
    "end": "1106960"
  },
  {
    "text": "programming we often call them rope",
    "start": "1106960",
    "end": "1108960"
  },
  {
    "text": "attacks",
    "start": "1108960",
    "end": "1110400"
  },
  {
    "text": "in this picture we notice that ss will",
    "start": "1110400",
    "end": "1112640"
  },
  {
    "text": "block call if return addresses on both",
    "start": "1112640",
    "end": "1115200"
  },
  {
    "text": "sets don't match",
    "start": "1115200",
    "end": "1117760"
  },
  {
    "text": "these types of attack methods are part",
    "start": "1117760",
    "end": "1119760"
  },
  {
    "text": "of a class of malware referred to as",
    "start": "1119760",
    "end": "1122480"
  },
  {
    "text": "memory safety issues",
    "start": "1122480",
    "end": "1124240"
  },
  {
    "text": "and include tactics",
    "start": "1124240",
    "end": "1126080"
  },
  {
    "text": "such as the corruption of step buffer",
    "start": "1126080",
    "end": "1128320"
  },
  {
    "text": "overflow and use after free",
    "start": "1128320",
    "end": "1131039"
  },
  {
    "text": "there may be widely used techniques in",
    "start": "1131039",
    "end": "1133039"
  },
  {
    "text": "large classes of vulnerable",
    "start": "1133039",
    "end": "1135679"
  },
  {
    "text": "exploits in the container world",
    "start": "1135679",
    "end": "1139440"
  },
  {
    "text": "and most recently data breaches have",
    "start": "1139840",
    "end": "1142080"
  },
  {
    "text": "been",
    "start": "1142080",
    "end": "1142880"
  },
  {
    "text": "increasing which is constantly suffering",
    "start": "1142880",
    "end": "1145120"
  },
  {
    "text": "enterprises",
    "start": "1145120",
    "end": "1146480"
  },
  {
    "text": "and regulators and customers",
    "start": "1146480",
    "end": "1149360"
  },
  {
    "text": "for containers",
    "start": "1149360",
    "end": "1151120"
  },
  {
    "text": "which are the de facto vehicles carrying",
    "start": "1151120",
    "end": "1153360"
  },
  {
    "text": "a variety of workloads today",
    "start": "1153360",
    "end": "1155600"
  },
  {
    "text": "are facing rising concerns about the",
    "start": "1155600",
    "end": "1157520"
  },
  {
    "text": "privacy or the protection of",
    "start": "1157520",
    "end": "1159039"
  },
  {
    "text": "confidential",
    "start": "1159039",
    "end": "1160559"
  },
  {
    "text": "code and data within them apart from the",
    "start": "1160559",
    "end": "1163039"
  },
  {
    "text": "security concerns",
    "start": "1163039",
    "end": "1165679"
  },
  {
    "start": "1165000",
    "end": "1165000"
  },
  {
    "text": "the consequently the augmented threat",
    "start": "1165679",
    "end": "1168400"
  },
  {
    "text": "model has come into being in this",
    "start": "1168400",
    "end": "1170240"
  },
  {
    "text": "context",
    "start": "1170240",
    "end": "1172400"
  },
  {
    "text": "different from the original threat model",
    "start": "1172400",
    "end": "1174720"
  },
  {
    "text": "which considers the host to be benign",
    "start": "1174720",
    "end": "1177520"
  },
  {
    "text": "and includes the host software stack",
    "start": "1177520",
    "end": "1179840"
  },
  {
    "text": "into the trusted computing base tcb",
    "start": "1179840",
    "end": "1182880"
  },
  {
    "text": "the intention of this thread model is to",
    "start": "1182880",
    "end": "1184720"
  },
  {
    "text": "prevent the whole software stack from",
    "start": "1184720",
    "end": "1186480"
  },
  {
    "text": "accessing container data and code while",
    "start": "1186480",
    "end": "1188880"
  },
  {
    "text": "in use",
    "start": "1188880",
    "end": "1191200"
  },
  {
    "text": "a new technology called confidential",
    "start": "1191200",
    "end": "1193120"
  },
  {
    "text": "computing makes it all possible to",
    "start": "1193120",
    "end": "1195679"
  },
  {
    "text": "provide isolation runtime encryption and",
    "start": "1195679",
    "end": "1199200"
  },
  {
    "text": "verifiability at the same time to fill",
    "start": "1199200",
    "end": "1201280"
  },
  {
    "text": "in this blank",
    "start": "1201280",
    "end": "1203600"
  },
  {
    "text": "with confidential computing we are able",
    "start": "1203600",
    "end": "1205440"
  },
  {
    "text": "to completely remove the whole software",
    "start": "1205440",
    "end": "1207280"
  },
  {
    "text": "stack from the container tcb",
    "start": "1207280",
    "end": "1209760"
  },
  {
    "text": "this includes the host software",
    "start": "1209760",
    "end": "1212799"
  },
  {
    "text": "which are",
    "start": "1212799",
    "end": "1213840"
  },
  {
    "text": "host firmware kernel os hypervisor which",
    "start": "1213840",
    "end": "1217600"
  },
  {
    "text": "are all out of the tcb and only the",
    "start": "1217600",
    "end": "1220400"
  },
  {
    "text": "tenant can see and modify its data",
    "start": "1220400",
    "end": "1223679"
  },
  {
    "text": "we can see that infrastructure owner",
    "start": "1223679",
    "end": "1226320"
  },
  {
    "text": "sometimes this csp cloud service",
    "start": "1226320",
    "end": "1228640"
  },
  {
    "text": "providers themselves are not even",
    "start": "1228640",
    "end": "1230880"
  },
  {
    "text": "trusted in this case",
    "start": "1230880",
    "end": "1234320"
  },
  {
    "start": "1234000",
    "end": "1234000"
  },
  {
    "text": "now with additional support in the",
    "start": "1234320",
    "end": "1236000"
  },
  {
    "text": "container runtime",
    "start": "1236000",
    "end": "1237440"
  },
  {
    "text": "a two-way sandbox for seamless security",
    "start": "1237440",
    "end": "1239679"
  },
  {
    "text": "and privacy we call them confidential",
    "start": "1239679",
    "end": "1241840"
  },
  {
    "text": "containers can be constructed based on",
    "start": "1241840",
    "end": "1244320"
  },
  {
    "text": "hardware based trusted execution",
    "start": "1244320",
    "end": "1246480"
  },
  {
    "text": "environment",
    "start": "1246480",
    "end": "1248720"
  },
  {
    "text": "there are in general two types of",
    "start": "1248720",
    "end": "1250400"
  },
  {
    "text": "confidential containers we can see",
    "start": "1250400",
    "end": "1252960"
  },
  {
    "text": "them in this diagram",
    "start": "1252960",
    "end": "1254960"
  },
  {
    "text": "the first one is called process based",
    "start": "1254960",
    "end": "1256720"
  },
  {
    "text": "and the second one is called vm-based",
    "start": "1256720",
    "end": "1259919"
  },
  {
    "text": "the process-based confidential",
    "start": "1259919",
    "end": "1261440"
  },
  {
    "text": "containers can be built on top of intel",
    "start": "1261440",
    "end": "1264080"
  },
  {
    "text": "sgx for example",
    "start": "1264080",
    "end": "1266480"
  },
  {
    "text": "process-based isolation is beneficial by",
    "start": "1266480",
    "end": "1268640"
  },
  {
    "text": "joining the isolation boundary exactly",
    "start": "1268640",
    "end": "1271520"
  },
  {
    "text": "around each container process",
    "start": "1271520",
    "end": "1273919"
  },
  {
    "text": "and this reduces the trusted computing",
    "start": "1273919",
    "end": "1275919"
  },
  {
    "text": "base",
    "start": "1275919",
    "end": "1276799"
  },
  {
    "text": "to some extent",
    "start": "1276799",
    "end": "1278880"
  },
  {
    "text": "in contrast the vm-based confidential",
    "start": "1278880",
    "end": "1281120"
  },
  {
    "text": "containers can be more straightforward",
    "start": "1281120",
    "end": "1283280"
  },
  {
    "text": "with the hardware will augment directly",
    "start": "1283280",
    "end": "1285440"
  },
  {
    "text": "the vm-based secure containers for",
    "start": "1285440",
    "end": "1287840"
  },
  {
    "text": "example cutter containers to guarantee",
    "start": "1287840",
    "end": "1289840"
  },
  {
    "text": "confidentiality and integrity based on",
    "start": "1289840",
    "end": "1292480"
  },
  {
    "text": "that",
    "start": "1292480",
    "end": "1294720"
  },
  {
    "text": "additionally image management and the",
    "start": "1294720",
    "end": "1297200"
  },
  {
    "text": "test station services should be provided",
    "start": "1297200",
    "end": "1299919"
  },
  {
    "text": "to firstly ensure that the container",
    "start": "1299919",
    "end": "1302159"
  },
  {
    "text": "image is always encrypted or signed",
    "start": "1302159",
    "end": "1306159"
  },
  {
    "text": "i mean the container images should be",
    "start": "1306159",
    "end": "1307760"
  },
  {
    "text": "protected in some",
    "start": "1307760",
    "end": "1309679"
  },
  {
    "text": "cases",
    "start": "1309679",
    "end": "1310799"
  },
  {
    "text": "and their post processing",
    "start": "1310799",
    "end": "1312559"
  },
  {
    "text": "is also need to be",
    "start": "1312559",
    "end": "1314159"
  },
  {
    "text": "protected",
    "start": "1314159",
    "end": "1316799"
  },
  {
    "text": "and secondly the ability to test the",
    "start": "1317039",
    "end": "1319760"
  },
  {
    "text": "confidential containers",
    "start": "1319760",
    "end": "1321360"
  },
  {
    "text": "which run on top of genuine and trusted",
    "start": "1321360",
    "end": "1324320"
  },
  {
    "text": "hardware should be guaranteed and the",
    "start": "1324320",
    "end": "1326640"
  },
  {
    "text": "workload is exactly expected",
    "start": "1326640",
    "end": "1331720"
  },
  {
    "start": "1331000",
    "end": "1331000"
  },
  {
    "text": "here we are unable to dive into every",
    "start": "1332000",
    "end": "1334000"
  },
  {
    "text": "single detail of the potential gaps that",
    "start": "1334000",
    "end": "1336400"
  },
  {
    "text": "the original containers need to fill in",
    "start": "1336400",
    "end": "1340000"
  },
  {
    "text": "but we list a few of them from a bird's",
    "start": "1340000",
    "end": "1342240"
  },
  {
    "text": "eye view",
    "start": "1342240",
    "end": "1344320"
  },
  {
    "text": "firstly confidential container runtimes",
    "start": "1344320",
    "end": "1346960"
  },
  {
    "text": "need to",
    "start": "1346960",
    "end": "1348720"
  },
  {
    "text": "adapt to different hardware based",
    "start": "1348720",
    "end": "1350720"
  },
  {
    "text": "encryption",
    "start": "1350720",
    "end": "1351840"
  },
  {
    "text": "they should also support attestation key",
    "start": "1351840",
    "end": "1354240"
  },
  {
    "text": "provisioning and the secure agent apis",
    "start": "1354240",
    "end": "1357280"
  },
  {
    "text": "which are",
    "start": "1357280",
    "end": "1358400"
  },
  {
    "text": "strictly limited to confidential",
    "start": "1358400",
    "end": "1360720"
  },
  {
    "text": "containers",
    "start": "1360720",
    "end": "1363280"
  },
  {
    "text": "also for confidential container images",
    "start": "1363679",
    "end": "1366000"
  },
  {
    "text": "the image service offloading layer",
    "start": "1366000",
    "end": "1368400"
  },
  {
    "text": "encryption and security context need to",
    "start": "1368400",
    "end": "1371200"
  },
  {
    "text": "be added to adapt to the confidential",
    "start": "1371200",
    "end": "1373280"
  },
  {
    "text": "computing usages",
    "start": "1373280",
    "end": "1375919"
  },
  {
    "text": "for confidential container os is",
    "start": "1375919",
    "end": "1378400"
  },
  {
    "text": "minimized tcp and unified onclick",
    "start": "1378400",
    "end": "1380960"
  },
  {
    "text": "abstractions as the top two requirements",
    "start": "1380960",
    "end": "1384960"
  },
  {
    "text": "we should also know that confidential",
    "start": "1384960",
    "end": "1386640"
  },
  {
    "text": "container orchestration and monitoring",
    "start": "1386640",
    "end": "1389679"
  },
  {
    "text": "especially for the logging debugging",
    "start": "1389679",
    "end": "1392320"
  },
  {
    "text": "error management and potential migration",
    "start": "1392320",
    "end": "1394880"
  },
  {
    "text": "vci guarantees",
    "start": "1394880",
    "end": "1397120"
  },
  {
    "text": "should also be considered by the",
    "start": "1397120",
    "end": "1399039"
  },
  {
    "text": "confidential containers",
    "start": "1399039",
    "end": "1402600"
  },
  {
    "start": "1403000",
    "end": "1403000"
  },
  {
    "text": "you may have the ambition to achieve a",
    "start": "1403120",
    "end": "1404880"
  },
  {
    "text": "further stronger strain model",
    "start": "1404880",
    "end": "1407840"
  },
  {
    "text": "yes indeed it should be possible",
    "start": "1407840",
    "end": "1409919"
  },
  {
    "text": "ultimately",
    "start": "1409919",
    "end": "1411919"
  },
  {
    "text": "imagine we'd like to extend an intro",
    "start": "1411919",
    "end": "1413760"
  },
  {
    "text": "container with more fine-grained",
    "start": "1413760",
    "end": "1415360"
  },
  {
    "text": "isolation",
    "start": "1415360",
    "end": "1416640"
  },
  {
    "text": "in this case for example we'd like to",
    "start": "1416640",
    "end": "1418880"
  },
  {
    "text": "only consider the sensitive data",
    "start": "1418880",
    "end": "1420880"
  },
  {
    "text": "compartment within this container and",
    "start": "1420880",
    "end": "1423679"
  },
  {
    "text": "the hardware it runs on to be trusted",
    "start": "1423679",
    "end": "1426720"
  },
  {
    "text": "where with all the others including the",
    "start": "1426720",
    "end": "1429200"
  },
  {
    "text": "libraries and references by the comp",
    "start": "1429200",
    "end": "1432240"
  },
  {
    "text": "department can be malicious",
    "start": "1432240",
    "end": "1435760"
  },
  {
    "text": "actually multiple fine-grained isolation",
    "start": "1435760",
    "end": "1438559"
  },
  {
    "text": "techniques are already available",
    "start": "1438559",
    "end": "1441600"
  },
  {
    "text": "to help this dream come true",
    "start": "1441600",
    "end": "1444720"
  },
  {
    "text": "they often have different execution of",
    "start": "1444720",
    "end": "1446720"
  },
  {
    "text": "switching overheads",
    "start": "1446720",
    "end": "1448240"
  },
  {
    "text": "so one of the",
    "start": "1448240",
    "end": "1450080"
  },
  {
    "text": "challenges here is to balance between",
    "start": "1450080",
    "end": "1452159"
  },
  {
    "text": "security and performance for different",
    "start": "1452159",
    "end": "1454559"
  },
  {
    "text": "container workloads",
    "start": "1454559",
    "end": "1457039"
  },
  {
    "text": "one example is to integrate or combine",
    "start": "1457039",
    "end": "1459200"
  },
  {
    "text": "the memory protection keys as known as",
    "start": "1459200",
    "end": "1461200"
  },
  {
    "text": "mpk with containers",
    "start": "1461200",
    "end": "1463600"
  },
  {
    "text": "this mpk is able to tag memory pages",
    "start": "1463600",
    "end": "1466080"
  },
  {
    "text": "within the containers using p keys",
    "start": "1466080",
    "end": "1468880"
  },
  {
    "text": "within",
    "start": "1468880",
    "end": "1470000"
  },
  {
    "text": "a permission register called pkru",
    "start": "1470000",
    "end": "1473200"
  },
  {
    "text": "which is provided to allow the user",
    "start": "1473200",
    "end": "1475360"
  },
  {
    "text": "space instruction to update pkru so that",
    "start": "1475360",
    "end": "1477840"
  },
  {
    "text": "letting the hardware to enforce the",
    "start": "1477840",
    "end": "1480159"
  },
  {
    "text": "isolation between the compartments",
    "start": "1480159",
    "end": "1482240"
  },
  {
    "text": "within the containers",
    "start": "1482240",
    "end": "1486039"
  },
  {
    "text": "well i think we might be",
    "start": "1486480",
    "end": "1488799"
  },
  {
    "text": "getting the right feeling that advances",
    "start": "1488799",
    "end": "1490880"
  },
  {
    "text": "of container security will never stop",
    "start": "1490880",
    "end": "1493760"
  },
  {
    "text": "just as new attack measures will",
    "start": "1493760",
    "end": "1495679"
  },
  {
    "text": "continue to emerge",
    "start": "1495679",
    "end": "1498000"
  },
  {
    "text": "the future of container security still",
    "start": "1498000",
    "end": "1500080"
  },
  {
    "text": "has a lot to explore and it's worth",
    "start": "1500080",
    "end": "1502400"
  },
  {
    "text": "checking out",
    "start": "1502400",
    "end": "1504799"
  },
  {
    "text": "that's all for my talk thanks for",
    "start": "1504799",
    "end": "1506480"
  },
  {
    "text": "listening any questions",
    "start": "1506480",
    "end": "1510600"
  }
]