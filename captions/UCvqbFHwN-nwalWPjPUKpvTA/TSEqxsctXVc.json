[
  {
    "start": "0",
    "end": "491000"
  },
  {
    "text": "hey everyone welcome to our talk on observing and troubleshooting your micro",
    "start": "30",
    "end": "5339"
  },
  {
    "text": "services with this do thank you for sticking around I know it's the end of the conference I hope some of you have",
    "start": "5339",
    "end": "10710"
  },
  {
    "text": "more energy than I do at the end of these two days my name is Doug I might say I'm a software engineer for IBM yeah",
    "start": "10710",
    "end": "20039"
  },
  {
    "text": "we're both core contributors to this t√≠o project what we thought we'd do today is sort of walk through just a little bit",
    "start": "20039",
    "end": "25920"
  },
  {
    "text": "of an overview of what ICO is just in case there are people in here who haven't been hearing about it or service measures in general talk a little bit",
    "start": "25920",
    "end": "32160"
  },
  {
    "text": "about the ways that an in-service machinist in particular allows you to sort of get better insight into what's",
    "start": "32160",
    "end": "38070"
  },
  {
    "text": "going on in the service even what's going on with this to itself and then Isaiah is gonna talk talk sway through a demo on troubleshooting some issues with",
    "start": "38070",
    "end": "45809"
  },
  {
    "text": "the proxy that you might have so so I",
    "start": "45809",
    "end": "56039"
  },
  {
    "text": "think you find now I've probably seen this feature slide and heard people talk about SEO so I won't spend a whole lot",
    "start": "56039",
    "end": "61710"
  },
  {
    "text": "of time here I just wanted to call out a couple things about service meshes that",
    "start": "61710",
    "end": "67229"
  },
  {
    "text": "I think help with debugging and observing micro service architectures and in particular like you know it's",
    "start": "67229",
    "end": "73710"
  },
  {
    "text": "very easy to talk about metrics and logs and traces I think that's what comes to mind one of the powerful things that I",
    "start": "73710",
    "end": "79470"
  },
  {
    "text": "think SEO provides as well relates to traffic control and I've highlighted fault injection as part of this right so",
    "start": "79470",
    "end": "85970"
  },
  {
    "text": "as you're developing new versions of microservices and ready to roll things out we can do makes it very easy to",
    "start": "85970",
    "end": "92310"
  },
  {
    "text": "canary and there was a great talk earlier today about canoeing services do traffic shadowing to have traffic",
    "start": "92310",
    "end": "97860"
  },
  {
    "text": "splitting but you can also test failure cases so if I want to see what happens",
    "start": "97860",
    "end": "102869"
  },
  {
    "text": "when a particular service takes too long to respond I can simulate that behavior very easily with this do and so I think",
    "start": "102869",
    "end": "109200"
  },
  {
    "text": "that gives you another powerful way in addition to just looking at dashboards and metrics to see what happens to be",
    "start": "109200",
    "end": "114990"
  },
  {
    "text": "services and you can do that before something goes wrong which is fairly useful just real brief that to talk",
    "start": "114990",
    "end": "123689"
  },
  {
    "text": "about the different pieces of SEO right we have we have proxies we have something that's translating SEO config",
    "start": "123689",
    "end": "128970"
  },
  {
    "text": "into the config for the proxies and pushing it out that's pilot we have mixer which is an integration",
    "start": "128970",
    "end": "135040"
  },
  {
    "text": "point for a CEO that is providing policy enforcement in telemetry collection export to various systems that you might",
    "start": "135040",
    "end": "140950"
  },
  {
    "text": "want to do for traffic analysis etc and then there's a certificate authority",
    "start": "140950",
    "end": "147370"
  },
  {
    "text": "called Citadel which is in charge if you want to turn on you see auth and we have an ingress for traffic coming into the",
    "start": "147370",
    "end": "155079"
  },
  {
    "text": "mesh as well as an initializer which will inject steel everywhere so I think",
    "start": "155079",
    "end": "161530"
  },
  {
    "text": "I like the slide just because I like to show what SEO is and I think it's easier to understand this way so I don't know",
    "start": "161530",
    "end": "168670"
  },
  {
    "text": "if it helps other people but so if you think about it CEO right you have a user client application that no notice that",
    "start": "168670",
    "end": "174849"
  },
  {
    "text": "is trying to call say this angular service and that angular service notice is trying to call it back-end everything",
    "start": "174849",
    "end": "180760"
  },
  {
    "text": "else should be sort of invisible to each of those pieces and then there's a",
    "start": "180760",
    "end": "186459"
  },
  {
    "text": "couple things that I wanted to point out about this do in general is it all of the config lives in the API server so if",
    "start": "186459",
    "end": "192069"
  },
  {
    "text": "you ever want to know what's happening or why SEO is behaving a certain way you can start with looking at the config",
    "start": "192069",
    "end": "197079"
  },
  {
    "text": "just by pulling it straight out of the API server the other thing that I wanted",
    "start": "197079",
    "end": "203049"
  },
  {
    "text": "to point out was that the pilot is pushing all the config and doing the translation to the proxies and so when",
    "start": "203049",
    "end": "209290"
  },
  {
    "text": "you want to find out what behavior is happening you don't necessarily have to look at the config that pilot consumes",
    "start": "209290",
    "end": "215049"
  },
  {
    "text": "but you can look at the actual Envoy config and look at their Doc's as well that the third part is that and this is",
    "start": "215049",
    "end": "222310"
  },
  {
    "text": "what I was mentioning earlier we are doing automatic telemetry collection on behalf of services so we're gathering",
    "start": "222310",
    "end": "228060"
  },
  {
    "text": "information that we can use the form metrics access logs and generate trace data for the service manage with very",
    "start": "228060",
    "end": "235180"
  },
  {
    "text": "little to no need to do that in the applications themselves and the final",
    "start": "235180",
    "end": "240220"
  },
  {
    "text": "bit that I think is sort of interesting to point out is that we're also running a CEO on SEO and so that allows you to",
    "start": "240220",
    "end": "246370"
  },
  {
    "text": "use those same standard tools to debug how a CEO itself is behaving and that",
    "start": "246370",
    "end": "251739"
  },
  {
    "text": "maybe will come out in the next couple of slides so yeah I just wanted to go",
    "start": "251739",
    "end": "256930"
  },
  {
    "text": "briefly over the the kinds of things that a service mission is to in particular give you to help you",
    "start": "256930",
    "end": "261940"
  },
  {
    "text": "understand what's happening on your mesh with traffic so Isaiah's gonna talk",
    "start": "261940",
    "end": "268389"
  },
  {
    "text": "through a demo on debugging at the proxy level so I won't spend a lot of time here I just wanted to call out that",
    "start": "268389",
    "end": "273490"
  },
  {
    "text": "their envoy and there's been a couple of great talks on envoy this session or",
    "start": "273490",
    "end": "279009"
  },
  {
    "text": "this conference as well about how was built around observability and so I think the admin interface is a great",
    "start": "279009",
    "end": "285789"
  },
  {
    "text": "place if you're just trying to figure out what's happening you can look to provide stats for each instance you can dump the whole config which you know",
    "start": "285789",
    "end": "292659"
  },
  {
    "text": "depending on how complicated things get is is worth while I like just looking at",
    "start": "292659",
    "end": "298210"
  },
  {
    "text": "the access logs it comes straight out of envoy last night when I was just sort of looking at the talk I noticed there was",
    "start": "298210",
    "end": "303909"
  },
  {
    "text": "a bunch of traffic on my test cluster and I was wondering what was happening and so I just went and saw and can see I'm just getting slammed by just random",
    "start": "303909",
    "end": "311560"
  },
  {
    "text": "web traffic so that's the kind of thing that can help you understand why you might see a traffic spike they're a",
    "start": "311560",
    "end": "318580"
  },
  {
    "text": "bunch of dashboard are compatible with the default metrics in SEO and they're worth taking a look",
    "start": "318580",
    "end": "325100"
  },
  {
    "text": "at you have mesh wide dashboards per service dashboards and dashboards on mixer and pilot themselves so you can",
    "start": "325100",
    "end": "331790"
  },
  {
    "text": "see how mixer and pilot are exporting things about their configuration errors in their configuration how often they're",
    "start": "331790",
    "end": "339140"
  },
  {
    "text": "calling the API server that kind of thing so please take a look at those if you don't want to use the pre-canned",
    "start": "339140",
    "end": "344930"
  },
  {
    "text": "queries in the dashboards you can quote directly to Prometheus or another metrics back end and run queries and so",
    "start": "344930",
    "end": "352370"
  },
  {
    "text": "this is an example of I just wanted I was playing around and I applied a",
    "start": "352370",
    "end": "357410"
  },
  {
    "text": "traffic splitting rule between the three versions of the review service I think and I just wanted to see that that was",
    "start": "357410",
    "end": "365000"
  },
  {
    "text": "actually happening so you can see that you know real quickly I can get a feel for how many requests are going to which place and so there's there's that as",
    "start": "365000",
    "end": "371780"
  },
  {
    "text": "well oh yeah and so then distributed",
    "start": "371780",
    "end": "376940"
  },
  {
    "text": "tracing I don't know how much time I want to spend here but I think this is provides an another unique way to look",
    "start": "376940",
    "end": "383630"
  },
  {
    "text": "at traffic flowing through your service because you can see the dependencies between services pretty easily and and",
    "start": "383630",
    "end": "388850"
  },
  {
    "text": "where latency and errors might come in so that's something that's worth",
    "start": "388850",
    "end": "395180"
  },
  {
    "text": "mentioning and finally logs echo saying we generate access logs for every request is coming",
    "start": "395180",
    "end": "402380"
  },
  {
    "text": "through at each point that it goes through the mesh and so we have the fault integrations with things like",
    "start": "402380",
    "end": "407780"
  },
  {
    "text": "fluency and you can hear I'm using that to use Cabana to analyze logs so that's",
    "start": "407780",
    "end": "414140"
  },
  {
    "text": "something to remember and the final piece that I think is worth pointing out for when you're debugging and trying to",
    "start": "414140",
    "end": "420140"
  },
  {
    "text": "figure out what's happening is you can use coop control you can use it for a number of things you can use it to see",
    "start": "420140",
    "end": "425390"
  },
  {
    "text": "the logs of any of the processes but also you can use it to get the actual config like I was saying earlier for",
    "start": "425390",
    "end": "432080"
  },
  {
    "text": "each component each little subsystem with an SEO and I find that very useful and I think it's neat because the by",
    "start": "432080",
    "end": "440240"
  },
  {
    "text": "using the API server we make that stuff available through standardized tooling the other thing that I end up doing",
    "start": "440240",
    "end": "445490"
  },
  {
    "text": "sometimes in development is editing deployments on the fly in changing logging levels and scopes for various",
    "start": "445490",
    "end": "451040"
  },
  {
    "text": "parts of the system I want to test while I'm doing development and with that I think I'll",
    "start": "451040",
    "end": "456260"
  },
  {
    "text": "hand it over to Isaiah yeah so thanks Doug thanks Doug gave a very",
    "start": "456260",
    "end": "462380"
  },
  {
    "text": "good overview of the high level of SEO like why you'd want to use it the basic",
    "start": "462380",
    "end": "470210"
  },
  {
    "text": "architecture and some of the tools that",
    "start": "470210",
    "end": "475370"
  },
  {
    "text": "exists for debugging in SEO for my portion of the talk I'm going to take a",
    "start": "475370",
    "end": "482450"
  },
  {
    "text": "little bit of a dip into some of the implementation of sto so everyone's seen",
    "start": "482450",
    "end": "493940"
  },
  {
    "start": "491000",
    "end": "543000"
  },
  {
    "text": "like the the feature list for SEO it's pretty long and it's it's fairly",
    "start": "493940",
    "end": "499190"
  },
  {
    "text": "impressive it's sometimes not entirely clear how su is actually doing these",
    "start": "499190",
    "end": "507770"
  },
  {
    "text": "things and that's usually one of the first questions I get when people come",
    "start": "507770",
    "end": "513050"
  },
  {
    "text": "up to me and ask me a lot of these features seem like magic and you know",
    "start": "513050",
    "end": "520729"
  },
  {
    "text": "magic is great as long as it is actually working and doing what you expect if",
    "start": "520729",
    "end": "529970"
  },
  {
    "text": "it's acting in a way you're not expecting you need to have a little bit",
    "start": "529970",
    "end": "536990"
  },
  {
    "text": "of background knowledge to understand the system actually a troubleshoot so if",
    "start": "536990",
    "end": "545630"
  },
  {
    "start": "543000",
    "end": "660000"
  },
  {
    "text": "we're going to talk about debugging and troubleshooting in SEO we have to start",
    "start": "545630",
    "end": "550910"
  },
  {
    "text": "with our proxy the proxy we use in SEO which is in boy there's a whole host of",
    "start": "550910",
    "end": "558080"
  },
  {
    "text": "reasons we use envoy first of all it's battle-tested using production by lyft",
    "start": "558080",
    "end": "565330"
  },
  {
    "text": "used by a lot of big-name companies it's also very lightweight which is",
    "start": "565330",
    "end": "570830"
  },
  {
    "text": "incredibly important for a proxy for a service mesh because you're gonna have",
    "start": "570830",
    "end": "576710"
  },
  {
    "text": "to deploy that proxy in all your pots so if it's heavy it's gonna be costly and",
    "start": "576710",
    "end": "583790"
  },
  {
    "text": "then it's it's going to hurt the overall",
    "start": "583790",
    "end": "591320"
  },
  {
    "text": "usefulness of the service mesh then the third ball point which is it has",
    "start": "591320",
    "end": "597680"
  },
  {
    "text": "incredibly good performance I don't know if how many of you watched some of Matt",
    "start": "597680",
    "end": "603710"
  },
  {
    "text": "Klein stocks on the internals but has some amazing it's amazing logic and",
    "start": "603710",
    "end": "613220"
  },
  {
    "text": "tricks to get very high performance and finally it's very important that envoy",
    "start": "613220",
    "end": "622880"
  },
  {
    "text": "provides high dynamic configurability so",
    "start": "622880",
    "end": "628330"
  },
  {
    "text": "for a service mesh where you have these",
    "start": "628330",
    "end": "633620"
  },
  {
    "text": "declarative configs that you're sending out to the control plane and the control",
    "start": "633620",
    "end": "639080"
  },
  {
    "text": "plane is applying these to this large host of proxies you want those proxies",
    "start": "639080",
    "end": "646010"
  },
  {
    "text": "to be able to adopt those new configs without any downtime or and without you",
    "start": "646010",
    "end": "652340"
  },
  {
    "text": "know dropping old requests for instance otherwise surface mesh is not going to",
    "start": "652340",
    "end": "658460"
  },
  {
    "text": "be very useful so I thought I'd just",
    "start": "658460",
    "end": "663530"
  },
  {
    "start": "660000",
    "end": "699000"
  },
  {
    "text": "briefly touch on this point which is like what is the service mesh exactly if",
    "start": "663530",
    "end": "671930"
  },
  {
    "text": "you boil it down to the very basic overly simplified one bullet point it's",
    "start": "671930",
    "end": "679630"
  },
  {
    "text": "it's basically a bunch of proxies talking to a bunch of proxies that are",
    "start": "679630",
    "end": "687170"
  },
  {
    "text": "all configured from a control plane and so you see all the behaviors because of",
    "start": "687170",
    "end": "695180"
  },
  {
    "text": "the configurations of these proxies so",
    "start": "695180",
    "end": "701030"
  },
  {
    "start": "699000",
    "end": "937000"
  },
  {
    "text": "just to illustrate this I'm gonna go through a just a quick example and show",
    "start": "701030",
    "end": "706550"
  },
  {
    "text": "how the config actually the configuration of the proxies actually results in the declarative behavior that",
    "start": "706550",
    "end": "714110"
  },
  {
    "text": "you are looking for so in this example we have inbox UI service think like",
    "start": "714110",
    "end": "722520"
  },
  {
    "text": "Gmail basically the front page from Gmail and it talks to a messages",
    "start": "722520",
    "end": "728520"
  },
  {
    "text": "back-end service where the emails or the text messages or whatever else live and",
    "start": "728520",
    "end": "736130"
  },
  {
    "text": "in this scenario the operators have decided they want to test out the",
    "start": "736130",
    "end": "742770"
  },
  {
    "text": "behavior of the UI when there's a bunch",
    "start": "742770",
    "end": "749490"
  },
  {
    "text": "of lateness latency in the network and make sure that like it actually behaves",
    "start": "749490",
    "end": "754770"
  },
  {
    "text": "in a reasonable way when that happens now traditionally you you could do this",
    "start": "754770",
    "end": "760529"
  },
  {
    "text": "by you know adding some extra logic in your code but with Sto or a service mesh",
    "start": "760529",
    "end": "767870"
  },
  {
    "text": "you can do this with config so you can see over on the left have a routing rule",
    "start": "767870",
    "end": "775370"
  },
  {
    "text": "this lives out and as a CRD in inside of",
    "start": "775370",
    "end": "781020"
  },
  {
    "text": "kubernetes it's very simple it just says that all requests going to",
    "start": "781020",
    "end": "787320"
  },
  {
    "text": "the messages service from the source of the inbox UI with this special header",
    "start": "787320",
    "end": "795000"
  },
  {
    "text": "the special test header should delay by 5 seconds 100% of the time and so the",
    "start": "795000",
    "end": "803430"
  },
  {
    "text": "way this actually like flows is the",
    "start": "803430",
    "end": "809250"
  },
  {
    "text": "requests starts as it normally would inside the UI and it's sent as it",
    "start": "809250",
    "end": "816270"
  },
  {
    "text": "normally would be to the messages service but it's captured by the inbox",
    "start": "816270",
    "end": "825180"
  },
  {
    "text": "you eyes sidecar using IP tables and NAT magic basically and from there it's",
    "start": "825180",
    "end": "835640"
  },
  {
    "text": "since that particular convoy has configuration that it's gotten from",
    "start": "835640",
    "end": "840750"
  },
  {
    "text": "pilot which has been listening to kubernetes and like listening for",
    "start": "840750",
    "end": "847730"
  },
  {
    "text": "resource definitions like this route rule it delays that connection that request by",
    "start": "847730",
    "end": "855360"
  },
  {
    "text": "the five seconds then sends it on across the wire as as it usually would be to",
    "start": "855360",
    "end": "863819"
  },
  {
    "text": "the messages service and once it reaches the message service its captured again",
    "start": "863819",
    "end": "869730"
  },
  {
    "text": "and sent to the messages service on",
    "start": "869730",
    "end": "876179"
  },
  {
    "text": "localhost inside the pod and then the response is sent back to the inbox UI",
    "start": "876179",
    "end": "883619"
  },
  {
    "text": "and then important thing to emphasize of course is this is completely transparent",
    "start": "883619",
    "end": "890519"
  },
  {
    "text": "as far as either service is concerned all that happened was sent out a request",
    "start": "890519",
    "end": "897329"
  },
  {
    "text": "and for some reason it took five seconds on the network so hopefully that like",
    "start": "897329",
    "end": "905759"
  },
  {
    "text": "shows just a very simple example of how",
    "start": "905759",
    "end": "910999"
  },
  {
    "text": "configuration is actually enforced inside of a surface mesh via cognitive",
    "start": "910999",
    "end": "919169"
  },
  {
    "text": "inside of the proxies it was a fun",
    "start": "919169",
    "end": "925199"
  },
  {
    "text": "example but there wasn't really any chance of it going wrong so I'm gonna do",
    "start": "925199",
    "end": "930689"
  },
  {
    "text": "a live demo and wish me the best so just",
    "start": "930689",
    "end": "939869"
  },
  {
    "start": "937000",
    "end": "1015000"
  },
  {
    "text": "a quick overview of this the micro services app we're gonna be working in",
    "start": "939869",
    "end": "945470"
  },
  {
    "text": "starting out it's very simple just have ingress which takes traffic from outside",
    "start": "945470",
    "end": "951299"
  },
  {
    "text": "the mesh that goes to a guestbook UI service inside the guestbook UI service",
    "start": "951299",
    "end": "957989"
  },
  {
    "text": "you can enter phrases and the phrases get sent to a Redis database back-end",
    "start": "957989",
    "end": "964230"
  },
  {
    "text": "and stored there and the UI can also show that I'm like a little wall what",
    "start": "964230",
    "end": "971489"
  },
  {
    "text": "we're gonna do is we're gonna add a version two of the service and we're",
    "start": "971489",
    "end": "978689"
  },
  {
    "text": "gonna add in a tone analyzer so it looks at the tone of the phrase that you're entering and",
    "start": "978689",
    "end": "985950"
  },
  {
    "text": "based on that it will like annotate the phrase and say like it's this is the angry phrase or a sad phrase and a half",
    "start": "985950",
    "end": "993240"
  },
  {
    "text": "like a little smiley face and I'll show you how the UI looks in a second just to",
    "start": "993240",
    "end": "1001250"
  },
  {
    "text": "save time I've already deployed the tone analyzer but I have not deployed the version 2 of the guestbook",
    "start": "1001250",
    "end": "1008110"
  },
  {
    "text": "so here's demo let's see so first of all",
    "start": "1008110",
    "end": "1016850"
  },
  {
    "start": "1015000",
    "end": "1220000"
  },
  {
    "text": "just show you how it looks and very",
    "start": "1016850",
    "end": "1026418"
  },
  {
    "text": "simple stuff so what I've done for this demo is I've actually done",
    "start": "1026419",
    "end": "1033020"
  },
  {
    "text": "Coop's ETL work forwarding from localhost 15:03 to the pilot API and the",
    "start": "1033020",
    "end": "1045110"
  },
  {
    "text": "pilot API has a rest endpoint which is actually where the invoice call to get",
    "start": "1045110",
    "end": "1054799"
  },
  {
    "text": "their configuration so if we take a look at it you can see this is the",
    "start": "1054799",
    "end": "1061010"
  },
  {
    "text": "registration API so you can see it and",
    "start": "1061010",
    "end": "1066380"
  },
  {
    "text": "see the service is in our system there's the analyzer because I've already played that and gifts book and",
    "start": "1066380",
    "end": "1074090"
  },
  {
    "text": "these are all just a bunch of internal sto or kubernetes systems if you notice",
    "start": "1074090",
    "end": "1083419"
  },
  {
    "text": "here inside the array of hosts for gifts book we have this dot 1 to 12 or that",
    "start": "1083419",
    "end": "1089809"
  },
  {
    "text": "this dot 12 IP address and just to",
    "start": "1089809",
    "end": "1095210"
  },
  {
    "text": "illustrate a point if we do coop CA I'll get in points for guestbook we can see",
    "start": "1095210",
    "end": "1103760"
  },
  {
    "text": "is the same IP address it and this is because it's actually in terms of implementation it's actually talking to",
    "start": "1103760",
    "end": "1108799"
  },
  {
    "text": "the coop API server to get that information so we're gonna go ahead and",
    "start": "1108799",
    "end": "1116510"
  },
  {
    "text": "deploy this new version of the guestbook service so let's see",
    "start": "1116510",
    "end": "1128560"
  },
  {
    "text": "create chef yeah I'm not gonna cat it or",
    "start": "1128560",
    "end": "1133760"
  },
  {
    "text": "anything because it's just a standard kubernetes deployment with a special label of v2 which will we use later so",
    "start": "1133760",
    "end": "1143050"
  },
  {
    "text": "if we refresh a couple times hopefully in a couple seconds we'll see that this",
    "start": "1143050",
    "end": "1148610"
  },
  {
    "text": "new endpoint has been added the dot thirteen that's the cluster IP of the",
    "start": "1148610",
    "end": "1155860"
  },
  {
    "text": "guestbook of v2 a service that instance of that service of course if we look at",
    "start": "1155860",
    "end": "1167830"
  },
  {
    "text": "made page we can see it shows the new version so let's do a phrase that has",
    "start": "1169450",
    "end": "1175850"
  },
  {
    "text": "some kind of town like I love coffee and",
    "start": "1175850",
    "end": "1180549"
  },
  {
    "text": "takes a little bit but shows this annotation here which is actually",
    "start": "1181330",
    "end": "1188540"
  },
  {
    "text": "talking to external service Watson but one thing to notice is we keep on",
    "start": "1188540",
    "end": "1195110"
  },
  {
    "text": "refreshing it just kind of randomly bounces between these two versions of",
    "start": "1195110",
    "end": "1200930"
  },
  {
    "text": "the service which isn't really what you want if you're deploying a new version you'd want to ideally do a canary",
    "start": "1200930",
    "end": "1208370"
  },
  {
    "text": "deployment and just route like it's very small percentage of the traffic to the new version and then look at metrics to",
    "start": "1208370",
    "end": "1215360"
  },
  {
    "text": "make sure that like it's actually handling it properly so what I'm gonna",
    "start": "1215360",
    "end": "1222890"
  },
  {
    "start": "1220000",
    "end": "1664000"
  },
  {
    "text": "show is just the current configuration and then we're gonna go through applying",
    "start": "1222890",
    "end": "1232580"
  },
  {
    "text": "a configuration where we send a percentage of the traffic so the first",
    "start": "1232580",
    "end": "1240170"
  },
  {
    "text": "thing that any traffic in this particular micro service application hits is the sto ingress controller so",
    "start": "1240170",
    "end": "1248960"
  },
  {
    "text": "we're gonna look at the route configuration for that ingress controller and basically the easiest way that I",
    "start": "1248960",
    "end": "1256789"
  },
  {
    "text": "know if doing it is just to go do a coop see TLX AK on it and do you have PS - X",
    "start": "1256789",
    "end": "1268510"
  },
  {
    "text": "and I'll show you how that looks in a second here so that basically shows the",
    "start": "1268510",
    "end": "1276470"
  },
  {
    "text": "running processes inside the container and you can see there's a this pilot",
    "start": "1276470",
    "end": "1283220"
  },
  {
    "text": "agent which is just a little management process and then the actual Envoy that's",
    "start": "1283220",
    "end": "1288860"
  },
  {
    "text": "doing the proxy it has a huge number of arguments sent into it the one we care",
    "start": "1288860",
    "end": "1294679"
  },
  {
    "text": "about though is this service node argument and basically what the service",
    "start": "1294679",
    "end": "1299900"
  },
  {
    "text": "node is is it's the name of the unique identifier that each of the odd boys is",
    "start": "1299900",
    "end": "1307190"
  },
  {
    "text": "given when when it started up inside of Sto and if we grab it we can use that ID",
    "start": "1307190",
    "end": "1317480"
  },
  {
    "text": "to look at some of the other api's that are exposed so we're gonna look at the",
    "start": "1317480",
    "end": "1323900"
  },
  {
    "text": "routes API for port 80 as a ingress type of proxy and for this particular node so",
    "start": "1323900",
    "end": "1332530"
  },
  {
    "text": "this shows the routing configuration that's actually being used for the",
    "start": "1332530",
    "end": "1338690"
  },
  {
    "text": "ingress controller it's a super simple all it is is for a wild card domain any",
    "start": "1338690",
    "end": "1345470"
  },
  {
    "text": "domain we're going to route to this cluster reference basically in the Envoy",
    "start": "1345470",
    "end": "1353840"
  },
  {
    "text": "nomenclature cluster is just a collection of endpoints and a way of",
    "start": "1353840",
    "end": "1359840"
  },
  {
    "text": "discovering them and then also a load bouncing them and so if we continue on",
    "start": "1359840",
    "end": "1366679"
  },
  {
    "text": "to this next API which is the clusters",
    "start": "1366679",
    "end": "1371929"
  },
  {
    "text": "API we can see oops clusters",
    "start": "1371929",
    "end": "1378010"
  },
  {
    "text": "oh I see one second I'm missing one part",
    "start": "1379680",
    "end": "1389880"
  },
  {
    "text": "of the path what needs to be for the role of an ingress proxy so so if we",
    "start": "1389880",
    "end": "1396180"
  },
  {
    "text": "look at the clusters for ingress this is the active clusters for this ingress",
    "start": "1396180",
    "end": "1402870"
  },
  {
    "text": "controller we can see that same cluster reference the thing now here is its type",
    "start": "1402870",
    "end": "1409230"
  },
  {
    "text": "server s D S which is service discovery service which means that it actually",
    "start": "1409230",
    "end": "1415050"
  },
  {
    "text": "gets the actual endpoints from another API and then of course it's load balance",
    "start": "1415050",
    "end": "1424530"
  },
  {
    "text": "type round-robin which is what we are seeing and if we grab the service name we can actually look at the endpoints",
    "start": "1424530",
    "end": "1432990"
  },
  {
    "text": "that on that Envoy will be getting for this particular cluster and you can see",
    "start": "1432990",
    "end": "1444630"
  },
  {
    "text": "here it's the dot 12-under dot 13 which is version 1 and version 2 so we want it",
    "start": "1444630",
    "end": "1453270"
  },
  {
    "text": "to just to actually be routing based on that percentage instead of just based on",
    "start": "1453270",
    "end": "1459390"
  },
  {
    "text": "the number of endpoints inside the cluster so the way we do that is just",
    "start": "1459390",
    "end": "1465510"
  },
  {
    "text": "with a simple routing rule so it looks",
    "start": "1465510",
    "end": "1471750"
  },
  {
    "text": "pretty similar to the one we used before the only thing to know is it applies to",
    "start": "1471750",
    "end": "1477810"
  },
  {
    "text": "the destination of guestbooks all requests going to yes book should be",
    "start": "1477810",
    "end": "1483630"
  },
  {
    "text": "routed to like say version 1 90% of the time and then version to 10% of time so",
    "start": "1483630",
    "end": "1490380"
  },
  {
    "text": "let's go ahead and apply that all right",
    "start": "1490380",
    "end": "1498150"
  },
  {
    "text": "and actually if we go back a couple pages back to the routes not the URL",
    "start": "1498150",
    "end": "1506130"
  },
  {
    "text": "whether I was trying to figure out back to the routes and refresh we see that instead of that",
    "start": "1506130",
    "end": "1512990"
  },
  {
    "text": "single cluster reference we have a weighted cluster references and weights",
    "start": "1512990",
    "end": "1518809"
  },
  {
    "text": "given to each of these clusters and you can actually see version two right here",
    "start": "1518809",
    "end": "1524149"
  },
  {
    "text": "in the name for the cluster I mean that's implementation detail but it's",
    "start": "1524149",
    "end": "1529429"
  },
  {
    "text": "it's still handy so we go back forward",
    "start": "1529429",
    "end": "1536200"
  },
  {
    "text": "back to the clusters API we can see instead of that original one cluster we",
    "start": "1536200",
    "end": "1542210"
  },
  {
    "text": "have these two new ones and if we grab the service name again and look at the",
    "start": "1542210",
    "end": "1550129"
  },
  {
    "text": "registration API with that particular service name we can see that it's just",
    "start": "1550129",
    "end": "1557840"
  },
  {
    "text": "the dot 13 which is version 2 of guestbook so let's actually verify this",
    "start": "1557840",
    "end": "1563600"
  },
  {
    "text": "by just bubbling the UI with requests",
    "start": "1563600",
    "end": "1568610"
  },
  {
    "text": "you can see it's yeah it's roughly like 10% of the time you see a tonne analysis",
    "start": "1568610",
    "end": "1576529"
  },
  {
    "text": "show up so like normally what you do",
    "start": "1576529",
    "end": "1585409"
  },
  {
    "text": "here is you'd start looking at your metrics and making sure that the",
    "start": "1585409",
    "end": "1591230"
  },
  {
    "text": "guestbook v2 is actually handling the traffic properly and was healthy and",
    "start": "1591230",
    "end": "1596299"
  },
  {
    "text": "looked like you could scale up and you slowly step up until you could replace",
    "start": "1596299",
    "end": "1601539"
  },
  {
    "text": "version 1 but we don't have time that for that so I'm just going to replace",
    "start": "1601539",
    "end": "1608779"
  },
  {
    "text": "our routing rule with a new one which just sends everything to the new version",
    "start": "1608779",
    "end": "1614509"
  },
  {
    "text": "and now it's all at the new version and",
    "start": "1614509",
    "end": "1620470"
  },
  {
    "text": "you can see that reflected in the routes as well so there's 0% being sent over u1",
    "start": "1622629",
    "end": "1631960"
  },
  {
    "text": "so that was pretty much that was pretty much the entire demo the point of it",
    "start": "1633820",
    "end": "1641710"
  },
  {
    "text": "wasn't really to say like write down these steps and you can call these api's",
    "start": "1641710",
    "end": "1647499"
  },
  {
    "text": "and figure things out it's more of the principle of being able to look at the",
    "start": "1647499",
    "end": "1655409"
  },
  {
    "text": "configurations of these different proxies in order to debug your system",
    "start": "1655409",
    "end": "1662519"
  },
  {
    "start": "1664000",
    "end": "1717000"
  },
  {
    "text": "so just to recap where your surface mesh really is at a simple level is it's a",
    "start": "1664289",
    "end": "1670929"
  },
  {
    "text": "bunch of proxies talking to a bunch of proxies and they're all configured by a",
    "start": "1670929",
    "end": "1676330"
  },
  {
    "text": "data plane and then sometimes it can be",
    "start": "1676330",
    "end": "1681879"
  },
  {
    "text": "really useful when you're debugging a scenario like this in a service mesh to look at the perspective that each of",
    "start": "1681879",
    "end": "1689590"
  },
  {
    "text": "your services has inside that that service mesh by looking at the",
    "start": "1689590",
    "end": "1696129"
  },
  {
    "text": "configuration of the proxy that it talks to when it's talking to all the other services and just to touch on the thing",
    "start": "1696129",
    "end": "1704799"
  },
  {
    "text": "I started with magic is great but you know a little bit of understanding",
    "start": "1704799",
    "end": "1710049"
  },
  {
    "text": "really goes a long way in terms of no debugging issues when you hit them",
    "start": "1710049",
    "end": "1717809"
  },
  {
    "start": "1717000",
    "end": "1838000"
  },
  {
    "text": "moving on to the future for sto our next",
    "start": "1721889",
    "end": "1729070"
  },
  {
    "text": "release whenever that comes out is going to have a huge amount of changes so",
    "start": "1729070",
    "end": "1738309"
  },
  {
    "text": "right now all the envoys use the version 1 API for obtaining new configurations",
    "start": "1738309",
    "end": "1747489"
  },
  {
    "text": "and it's written in Raths it's all restful so it's very easy to call the",
    "start": "1747489",
    "end": "1754179"
  },
  {
    "text": "API yourself but it's also you know it's inefficient because you have to send the",
    "start": "1754179",
    "end": "1760599"
  },
  {
    "text": "entire state to the proxies and it's",
    "start": "1760599",
    "end": "1766779"
  },
  {
    "text": "also they're pulling instead of in the new version it will be pushing and it's",
    "start": "1766779",
    "end": "1773770"
  },
  {
    "text": "going to be using G RPC and version 2 of the Envoy API s so with version 2 we can",
    "start": "1773770",
    "end": "1783669"
  },
  {
    "text": "now look for specific changes and only",
    "start": "1783669",
    "end": "1789100"
  },
  {
    "text": "when there is a change that actually matters we can send it on to the proxies",
    "start": "1789100",
    "end": "1794200"
  },
  {
    "text": "and only the part of that change that matters is sent on to it so bad news is",
    "start": "1794200",
    "end": "1800710"
  },
  {
    "text": "that little demo did you're not gonna be able do it in point 8 but it",
    "start": "1800710",
    "end": "1809649"
  },
  {
    "text": "good news is it's going to be much better performance and there's going to",
    "start": "1809649",
    "end": "1817480"
  },
  {
    "text": "actually be a bunch of new tools hopefully to the bug your mesh kind of",
    "start": "1817480",
    "end": "1825039"
  },
  {
    "text": "in the way that I showed before this slide in the demo so I believe Doug it's",
    "start": "1825039",
    "end": "1836950"
  },
  {
    "text": "a nice segue so like you saying better visibility is coming and one of the",
    "start": "1836950",
    "end": "1841960"
  },
  {
    "start": "1838000",
    "end": "1968000"
  },
  {
    "text": "command-line tools that will help is we have a tool called SCO control and in",
    "start": "1841960",
    "end": "1847750"
  },
  {
    "text": "point 8 they'll be a proxy config to mend did you can provide a service name",
    "start": "1847750",
    "end": "1853149"
  },
  {
    "text": "and we'll go and pull that information that you saw him step through in multiple steps so that you can look at it all at once without having to know",
    "start": "1853149",
    "end": "1858760"
  },
  {
    "text": "api's and do all the copy pasting of names from different parts of they can fake I think that's gonna be pretty",
    "start": "1858760",
    "end": "1864580"
  },
  {
    "text": "valuable as you try and understand why proxy is behaving and why routing is acting the way it is there's also going",
    "start": "1864580",
    "end": "1871179"
  },
  {
    "text": "to be a metrics command that we've we've added as sort of an experimental thing so that from the command line you can",
    "start": "1871179",
    "end": "1876279"
  },
  {
    "text": "just see all right here's what's happening across these services this is where traffic is hitting and you could",
    "start": "1876279",
    "end": "1881679"
  },
  {
    "text": "do something like see the difference between v1 and v2 of a service depending on on how you label things there's also",
    "start": "1881679",
    "end": "1888730"
  },
  {
    "text": "been some work that's been committed already that should be in the next release on adding pages UI pages for",
    "start": "1888730",
    "end": "1895299"
  },
  {
    "text": "each of the SEO components and also is available to link into other libraries that allow you to control behavior of",
    "start": "1895299",
    "end": "1901090"
  },
  {
    "text": "and visual instance of something and this will be useful for turning up logging scopes like I mentioned at the beginning which I find useful in debugging for",
    "start": "1901090",
    "end": "1907840"
  },
  {
    "text": "targeted parts of an application as well as seeing the metrics for that particular instance and memory and CPU",
    "start": "1907840",
    "end": "1914559"
  },
  {
    "text": "consumption etc and then as far as telemetry typically in SEO a lot of the",
    "start": "1914559",
    "end": "1922960"
  },
  {
    "text": "telemetry is collected server-side and that's great if you're concerned only about your service and how its behaving but it doesn't help understand what",
    "start": "1922960",
    "end": "1930269"
  },
  {
    "text": "clients are seeing and if there are other things that are happening before traffic arrives at your service so there",
    "start": "1930269",
    "end": "1936700"
  },
  {
    "text": "is work going on right now to add client-side telemetry and add metrics support so that you can see the",
    "start": "1936700",
    "end": "1941979"
  },
  {
    "text": "difference between client and server for a given service there's also work design",
    "start": "1941979",
    "end": "1948009"
  },
  {
    "text": "work going on to support telemetry around config especially is config rollout and errors around config so that",
    "start": "1948009",
    "end": "1955179"
  },
  {
    "text": "we can make that exposed in the same way and in a first-class way throughout a CO and there's always work on more adapters",
    "start": "1955179",
    "end": "1962619"
  },
  {
    "text": "that can push this information to wherever you need it so that you can do further analysis this is just sort of a",
    "start": "1962619",
    "end": "1970179"
  },
  {
    "text": "pictorial representation of was just talking through this is what the alpha version of the control page looks like",
    "start": "1970179",
    "end": "1975369"
  },
  {
    "text": "and what a command might look like from the command line interestingly I put",
    "start": "1975369",
    "end": "1980919"
  },
  {
    "text": "this to your pilot just to show that SEO itself is available for inspection with all of these tools and you can see how",
    "start": "1980919",
    "end": "1986470"
  },
  {
    "text": "it's behaving I think that that is it so",
    "start": "1986470",
    "end": "1991690"
  },
  {
    "text": "thank you for coming especially Jen there's a long day and yeah there any questions please fire away",
    "start": "1991690",
    "end": "1998729"
  },
  {
    "text": "[Applause]",
    "start": "2001160",
    "end": "2003789"
  }
]