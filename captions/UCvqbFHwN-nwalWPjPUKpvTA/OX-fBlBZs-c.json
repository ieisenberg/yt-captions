[
  {
    "text": "hello everyone uh welcome to cubec con I'm ashik and I lead the internal",
    "start": "199",
    "end": "6319"
  },
  {
    "text": "Cloud platform team at clra uh and and I'm here with cir Raja",
    "start": "6319",
    "end": "12639"
  },
  {
    "text": "who is a staff engineer in my team hello everyone this is CBI what do you yeah so",
    "start": "12639",
    "end": "17840"
  },
  {
    "text": "let me Begin by so clra is uh is we are the creators",
    "start": "17840",
    "end": "23400"
  },
  {
    "text": "of uh Big Data ecosystem powered by open source our uh open data lak house",
    "start": "23400",
    "end": "29640"
  },
  {
    "text": "product which is CL data platform enables uh portable Cloud native data analytics and uh helps organizations",
    "start": "29640",
    "end": "36920"
  },
  {
    "text": "manage and analyze data of all types on private and public Cloud so we are the",
    "start": "36920",
    "end": "42640"
  },
  {
    "text": "only true hybrid platform for data analytics and AI so shipping an open data lake house",
    "start": "42640",
    "end": "50000"
  },
  {
    "text": "is a massive effort right that's because mostly because you know we are built on over 30 open- Source projects uh we do",
    "start": "50000",
    "end": "59160"
  },
  {
    "text": "dozens of uh releases and year we support multiple data operating systems",
    "start": "59160",
    "end": "65198"
  },
  {
    "text": "we also uh you know integrate with multiple data bases Hardware Appliances and all those and because we have hybrid",
    "start": "65199",
    "end": "72119"
  },
  {
    "text": "we also have to support both public and private Cloud so it results in hundreds and thousands of tests running across",
    "start": "72119",
    "end": "78520"
  },
  {
    "text": "thousands of clusters uh in an hybrid environment for each release to certify",
    "start": "78520",
    "end": "83880"
  },
  {
    "text": "quality so being part of an internal platform team one of our major responsibilities is to enable",
    "start": "83880",
    "end": "89159"
  },
  {
    "text": "development and certifications for shipping the product right and in today's sessions we are",
    "start": "89159",
    "end": "95000"
  },
  {
    "text": "today's session we are going to actually dive deep into uh how uh to into the uh",
    "start": "95000",
    "end": "101000"
  },
  {
    "text": "the hybrid environments that we manage uh the pain points that we had uh how kuber has helped us solve it and uh the",
    "start": "101000",
    "end": "108040"
  },
  {
    "text": "challenges uh that we faced uh throughout our journey right so hybrid",
    "start": "108040",
    "end": "114000"
  },
  {
    "text": "environments combined of both uh onframe and public clouds so on your right hand",
    "start": "114000",
    "end": "119240"
  },
  {
    "text": "side you you can see the state that we were in we had bunch of tools talking to",
    "start": "119240",
    "end": "124360"
  },
  {
    "text": "you know multiple environments some public Cloud some private Cloud uh multiple public Cloud vendors uh VMware",
    "start": "124360",
    "end": "131239"
  },
  {
    "text": "and on premise bare metal on premise kubernetes clusters Etc and as you can",
    "start": "131239",
    "end": "136400"
  },
  {
    "text": "assume this state was uh this was not an uh know intentional right because we first started with Jenkins deploying",
    "start": "136400",
    "end": "143120"
  },
  {
    "text": "some VMware VMS when public Cloud came along we introduced terraform because that was the go-to product at that time",
    "start": "143120",
    "end": "150040"
  },
  {
    "text": "and when kubernetes came in it bought Argo CD because it was tightly coupled with the life cycle management of",
    "start": "150040",
    "end": "156080"
  },
  {
    "text": "kubernetes resources right so with all this with the state that we were in let's look at the pain points that we",
    "start": "156080",
    "end": "162480"
  },
  {
    "text": "actually faced so the major one was from the operational perspective that was",
    "start": "162480",
    "end": "169480"
  },
  {
    "text": "managing all these multiple pipelines multiple tools uh you know whenever uh a de or a QE had to add something extra",
    "start": "169480",
    "end": "176760"
  },
  {
    "text": "trying to you know fit it in to all those uh uh tools and along with that uh",
    "start": "176760",
    "end": "182239"
  },
  {
    "text": "developer and qes they had they had they were spending a lot of man hours switching between uh interfaces trying",
    "start": "182239",
    "end": "188720"
  },
  {
    "text": "to navigate the uis and uh you know how you know the workloads especially when",
    "start": "188720",
    "end": "194760"
  },
  {
    "text": "you have to add something new or you know troubleshoot something some fail test and",
    "start": "194760",
    "end": "199879"
  },
  {
    "text": "Etc and because these all these tools were uh independently interacting with all these environments tracking all the",
    "start": "199879",
    "end": "206280"
  },
  {
    "text": "resources that these were creating both onframe and public cloud at a single place was not possible at all and that",
    "start": "206280",
    "end": "213239"
  },
  {
    "text": "was leading to Resource wastage both on prise on the public cloud and uh you",
    "start": "213239",
    "end": "219239"
  },
  {
    "text": "know we were not able to track anything properly excessive Cloud uh cost wastage",
    "start": "219239",
    "end": "225120"
  },
  {
    "text": "and and you know poor capacity planning and forecasting right so how do we solve",
    "start": "225120",
    "end": "230239"
  },
  {
    "text": "this how do we solve this so and we didn't we didn't just want to solve this anyway uh like like for the sake of it",
    "start": "230239",
    "end": "235760"
  },
  {
    "text": "but you know we also wanted to Future proof it because you know in in the Keynotes might have seen U and heard",
    "start": "235760",
    "end": "241760"
  },
  {
    "text": "that you know kubernetes is going to be everywhere right so we wanted to solve this the kubernetes way so that we future proof our Cloud pipelines and and",
    "start": "241760",
    "end": "249640"
  },
  {
    "text": "you know uh uh for the coming this one so before I go into know the",
    "start": "249640",
    "end": "255200"
  },
  {
    "text": "solutions that we implemented and the things that we did uh let let me just uh summarize the problem statement and the",
    "start": "255200",
    "end": "261160"
  },
  {
    "text": "needs right so we had we focused on two verticals uh primarily one was uh",
    "start": "261160",
    "end": "266840"
  },
  {
    "text": "managing hybrid environments so preferably we wanted a single cicd pipeline which would uh help us deploy",
    "start": "266840",
    "end": "273600"
  },
  {
    "text": "things and also a single interface to manage and interact with all the resources and an ability to track all",
    "start": "273600",
    "end": "281320"
  },
  {
    "text": "the resources in a single place and with in terms of form factors along with so a",
    "start": "281320",
    "end": "287440"
  },
  {
    "text": "lot of our products were already containerized but we still had some of the Legacy things sitting in on-prem uh",
    "start": "287440",
    "end": "294000"
  },
  {
    "text": "VMS and uh you know ec2 instances and everything so we we wanted something that would help us manage both the form",
    "start": "294000",
    "end": "301280"
  },
  {
    "text": "factors the the the contrain rized one and the non-rain rized ones and that's",
    "start": "301280",
    "end": "306600"
  },
  {
    "text": "where we started our journey uh you know trying to uh you know look at the different products in the cncf landscape",
    "start": "306600",
    "end": "313240"
  },
  {
    "text": "which uh you know which can solve things for us and that's where the first uh the crossplane comes into picture so",
    "start": "313240",
    "end": "319600"
  },
  {
    "text": "crossplane is uh a cloud native control plane framework it actually um you know",
    "start": "319600",
    "end": "326600"
  },
  {
    "text": "helped us streamline our multicloud provisioning by consolidating management of public Cloud resources into",
    "start": "326600",
    "end": "333560"
  },
  {
    "text": "kubernetes right it reduced complexity for us by giving us consistent workflows",
    "start": "333560",
    "end": "339880"
  },
  {
    "text": "uh across multiple public Cloud vendors so what did it mean right like in this",
    "start": "339880",
    "end": "345400"
  },
  {
    "text": "so as you can see uh using cross plane we could manage all of the public Cloud",
    "start": "345400",
    "end": "351199"
  },
  {
    "text": "resources that we were creating through a single kubernetes cluster right so we",
    "start": "351199",
    "end": "356280"
  },
  {
    "text": "didn't have to rely on or directly talk to any of the public Cloud uh uis interfaces or anything and we could just",
    "start": "356280",
    "end": "363000"
  },
  {
    "text": "rely everything on kubernetes and manage them just like kubernetes resources right so this solved much of it for us",
    "start": "363000",
    "end": "370599"
  },
  {
    "text": "from the public Cloud perspective but the on prame thing was still an open question mark right so we still had uh",
    "start": "370599",
    "end": "378080"
  },
  {
    "text": "you know we still had to interact it just like a different uh resource and that's where cubert helped us cubert is",
    "start": "378080",
    "end": "385560"
  },
  {
    "text": "kuon is virtualization API and runtime and uh this allows us to bring VMS into",
    "start": "385560",
    "end": "391880"
  },
  {
    "text": "the kubernetes ecosystem uh it allows us to manage virtual machines just like how",
    "start": "391880",
    "end": "398440"
  },
  {
    "text": "we manage pods container Etc in kues and and and because it's uh it's it becomes",
    "start": "398440",
    "end": "403720"
  },
  {
    "text": "native it also we can also leverage things like autoscaler and and all those things and we can have Services talk to",
    "start": "403720",
    "end": "410560"
  },
  {
    "text": "uh virtual machines uh ingresses and everything like that and and and the major this one uh Advantage CUO gave us",
    "start": "410560",
    "end": "418000"
  },
  {
    "text": "was it was using KVM virtualization so we were not losing any of the features",
    "start": "418000",
    "end": "423759"
  },
  {
    "text": "that the conventional VMS were providing us right so and and also because of this",
    "start": "423759",
    "end": "429400"
  },
  {
    "text": "we were also able to manage uh VMS just like any other kubernetes",
    "start": "429400",
    "end": "436199"
  },
  {
    "text": "resource so if you see with crossplane and cubert into picture by using the",
    "start": "436199",
    "end": "441960"
  },
  {
    "text": "single kubernetes cluster we were able to talk to uh we manage all of the",
    "start": "441960",
    "end": "447360"
  },
  {
    "text": "resources and that was just using the Cube CTL tool so what this actually enabled us was to set a new standard uh",
    "start": "447360",
    "end": "455240"
  },
  {
    "text": "a streamlined and scalable approach uh and it it set a new standard for anything that we are going to onboard in",
    "start": "455240",
    "end": "462120"
  },
  {
    "text": "the future and also it set a direction for whatever is present today uh for",
    "start": "462120",
    "end": "467639"
  },
  {
    "text": "itself to be uh you know aligned towards this and and in fact we we have actually moved most of our uh workloads and uh",
    "start": "467639",
    "end": "475360"
  },
  {
    "text": "pipelines to to to this new standard right so so you can see how uh kuber is",
    "start": "475360",
    "end": "481360"
  },
  {
    "text": "acted as a central U centralizing Force for us and uh it provid us an unit",
    "start": "481360",
    "end": "487560"
  },
  {
    "text": "unified platform to manage all the resources in respect of it being in a",
    "start": "487560",
    "end": "493919"
  },
  {
    "text": "public cloud or on premise or anything it gave us a single interface uh basically Cube CTL and you know",
    "start": "493919",
    "end": "499680"
  },
  {
    "text": "basically kues modules Etc uh to interact with any kind of the resources",
    "start": "499680",
    "end": "505000"
  },
  {
    "text": "and it gave us a very simple streamlined and scalable release certification and",
    "start": "505000",
    "end": "511039"
  },
  {
    "text": "uh you know uh deployment pipelines so although kubernetes did all this but it was not a very straight",
    "start": "511039",
    "end": "517518"
  },
  {
    "text": "forward Journey for us it did come with challenges most of it was mostly uh you know due to some of the unique",
    "start": "517519",
    "end": "523279"
  },
  {
    "text": "requirements that we had so let let's look at uh few of the challenges that we",
    "start": "523279",
    "end": "529320"
  },
  {
    "text": "faced in terms of CUO in terms of onboarding CUO the first thing uh was uh",
    "start": "529320",
    "end": "535279"
  },
  {
    "text": "as as I mentioned the VMS were being treated as pods and pods right right in kubernetes cluster by CU but for our",
    "start": "535279",
    "end": "543279"
  },
  {
    "text": "Legacy applications we need we needed the VM to have uh SSH access uh external",
    "start": "543279",
    "end": "548680"
  },
  {
    "text": "network connectivity uh and static IP address right so that is that that was",
    "start": "548680",
    "end": "554279"
  },
  {
    "text": "something that we didn't have when when we used CUO VMS and for the same reason we also needed DNS when we we can't have",
    "start": "554279",
    "end": "560959"
  },
  {
    "text": "we can't keep using uh static IP addresses right so we wanted a meaningful DNS also for those VMS in in",
    "start": "560959",
    "end": "569040"
  },
  {
    "text": "with to crossplane uh the major challenges that we had was uh you know in terms of deploying a complex",
    "start": "569040",
    "end": "575240"
  },
  {
    "text": "architecture we didn't want to manage uh manifests or yaml files or uh you know",
    "start": "575240",
    "end": "581519"
  },
  {
    "text": "things for each of the resources that we are deploying in a public Cloud we have very complex architecture and you know",
    "start": "581519",
    "end": "587680"
  },
  {
    "text": "uh we would have thousands of manifest in that case to follow and and and the on the the",
    "start": "587680",
    "end": "593519"
  },
  {
    "text": "kubernetes cluster which we were using for cubert and the cross plane control as a crossplane control plane uh was on",
    "start": "593519",
    "end": "599079"
  },
  {
    "text": "Prim so so managing uh a secure multicloud access was also another",
    "start": "599079",
    "end": "604399"
  },
  {
    "text": "another challenge right and and and Disaster Recovery this was very important for us because you know now",
    "start": "604399",
    "end": "610519"
  },
  {
    "text": "that we are uh relying on multiple uh we are relying our release certifications",
    "start": "610519",
    "end": "615640"
  },
  {
    "text": "on this cluster uh you know in case of any disasters or you know un uh this one",
    "start": "615640",
    "end": "621279"
  },
  {
    "text": "events we actually wanted to recover it without much downtime so so this is where I'm handing",
    "start": "621279",
    "end": "628959"
  },
  {
    "text": "over the the session to C Raja so he'll be uh you know walking you guys through uh the things that we did how we",
    "start": "628959",
    "end": "635320"
  },
  {
    "text": "innovated how we work around and also we'll have a demo at the end of the session okay thank you folks thank",
    "start": "635320",
    "end": "642800"
  },
  {
    "text": "you hello everyone Let's uh look at all the challenges what we come across and",
    "start": "642800",
    "end": "648800"
  },
  {
    "text": "The Innovation we have did around to solve the problems the first thing is the uh Network so providing the external",
    "start": "648800",
    "end": "655360"
  },
  {
    "text": "connectivity is a deal breaker for us and we need a routable IP for VMS and ports and the default cni that comes",
    "start": "655360",
    "end": "662639"
  },
  {
    "text": "with the kubernetes cluster that doesn't provide the support for additional network interface and there is no",
    "start": "662639",
    "end": "668480"
  },
  {
    "text": "support for adding the routable IP for the parts or VMS and uh we explored the",
    "start": "668480",
    "end": "674200"
  },
  {
    "text": "mulus that is the uh the extra CNA and uh it has also no support for Standalone",
    "start": "674200",
    "end": "681160"
  },
  {
    "text": "deployment and it only uh provide the support for VM and no support for po networking and U it manages the IP in IP",
    "start": "681160",
    "end": "689800"
  },
  {
    "text": "addresses in the local uh host way that is specific to that particular",
    "start": "689800",
    "end": "696000"
  },
  {
    "text": "notes so the solution around here is that we used the the NM State operator",
    "start": "696000",
    "end": "702160"
  },
  {
    "text": "that creat the bridge interface on all the cuade holers and uh the molter CNA will attach the secondary interface for",
    "start": "702160",
    "end": "709160"
  },
  {
    "text": "the uh ports and networks uh to the resources and we created the bridge interface by using the 10m state",
    "start": "709160",
    "end": "715480"
  },
  {
    "text": "operator and the whereabout cni plugin that works on top of the cni and that is",
    "start": "715480",
    "end": "721480"
  },
  {
    "text": "will be responsible for managing the IP address for the resources so th the resources were attached to the host",
    "start": "721480",
    "end": "727800"
  },
  {
    "text": "Network and uh it it will it allows that resource to be accessible from the outside of the cluster and here is the",
    "start": "727800",
    "end": "735519"
  },
  {
    "text": "the network architecture overall how it looks like by combining all these tools so the next thing is about the the",
    "start": "735519",
    "end": "742839"
  },
  {
    "text": "network interface here is the Manifest that captures all the uh Network IP",
    "start": "742839",
    "end": "748079"
  },
  {
    "text": "ranges and the routing information for the parts and VM which can be associated with this network attachment definition",
    "start": "748079",
    "end": "755320"
  },
  {
    "text": "so when we create the VMS or part resource that will reference this as a",
    "start": "755320",
    "end": "760760"
  },
  {
    "text": "network definition then it IP will be assigned from these ranges so the next thing is about the",
    "start": "760760",
    "end": "768040"
  },
  {
    "text": "DNS architecture so having the stable DNS name for VM and pod is the primary",
    "start": "768040",
    "end": "774079"
  },
  {
    "text": "um um uh requirement for us the default kubernetes DNS service it comes with one",
    "start": "774079",
    "end": "780000"
  },
  {
    "text": "challenges and it doesn't support for VM resource type and it considers only the",
    "start": "780000",
    "end": "785720"
  },
  {
    "text": "the interface for the Pod and uh DNS names were also not much",
    "start": "785720",
    "end": "791160"
  },
  {
    "text": "friendly it has its own Convention of that name representation and Cubo",
    "start": "791160",
    "end": "796440"
  },
  {
    "text": "recommends that Cube secondary DNS to handle the um DNS names for VMS and",
    "start": "796440",
    "end": "802240"
  },
  {
    "text": "however it has also uh don't have support for ports and uh there is no support for PTR cords and the it it has",
    "start": "802240",
    "end": "809440"
  },
  {
    "text": "its own uh naming convention for the uh DNS name so that was not that much",
    "start": "809440",
    "end": "814560"
  },
  {
    "text": "expectation of our format and the solution here is that",
    "start": "814560",
    "end": "819600"
  },
  {
    "text": "there is a VMI controller which will watch for the VMS and creat that",
    "start": "819600",
    "end": "824760"
  },
  {
    "text": "appropriate records uh with the help of Zone Manager the core there is a core dnner service which uh monitors for the",
    "start": "824760",
    "end": "832320"
  },
  {
    "text": "resource creation and reloads when and there there is a changes to the records so Zone fails are maintained in the",
    "start": "832320",
    "end": "838320"
  },
  {
    "text": "persistent volume and uh they they will be shared between the The Zone Manager and then the",
    "start": "838320",
    "end": "846399"
  },
  {
    "text": "cers so then we further patch that Cube secondary DNS by introducing the P",
    "start": "847079",
    "end": "853519"
  },
  {
    "text": "controller to provide that static DNS name for ports and uh it will watch for",
    "start": "853519",
    "end": "859079"
  },
  {
    "text": "the P creation and it will create that appropriate record in the zone files with the help of Jone",
    "start": "859079",
    "end": "866199"
  },
  {
    "text": "manager so so let's uh look at the challenges what we face in the cross plane so developer face significant",
    "start": "867839",
    "end": "874759"
  },
  {
    "text": "complexity When U provisoning resources such as easy to um elastic Lo balancer",
    "start": "874759",
    "end": "880440"
  },
  {
    "text": "and S3 buet and AWS account and each resources requirs its own manifest for",
    "start": "880440",
    "end": "886800"
  },
  {
    "text": "creation to streamline the process uh we leverage the composite resource claim uh",
    "start": "886800",
    "end": "892600"
  },
  {
    "text": "that is part of the um offer by cross plan and developer can provis multiple resources together by eliminating the",
    "start": "892600",
    "end": "899440"
  },
  {
    "text": "complex need of having multiple maintaining the Manifest so by writing just one kubernetes manifest they can",
    "start": "899440",
    "end": "906079"
  },
  {
    "text": "deploy all together by using the this manifest so here the example we provided this manifest that creates the easy2",
    "start": "906079",
    "end": "912959"
  },
  {
    "text": "inance elastic Road balancer and the security group will be attached to that particular e inance so they just need to",
    "start": "912959",
    "end": "920000"
  },
  {
    "text": "provide that as a input parameter and everything all the complexity of that resource creation and the the the actual",
    "start": "920000",
    "end": "928319"
  },
  {
    "text": "resource management can be done by within the crossplane layer so multicloud access management",
    "start": "928319",
    "end": "936120"
  },
  {
    "text": "when running crossplane on the kubernetes cluster it often requires access to uh cloud services like uh AWS",
    "start": "936120",
    "end": "942360"
  },
  {
    "text": "or gcp uh Cloud providers so this access traditionally relays on the static user",
    "start": "942360",
    "end": "948120"
  },
  {
    "text": "credentials and uh which are challenging to rotate periodically and it is not secure and efficient way so the solution",
    "start": "948120",
    "end": "955319"
  },
  {
    "text": "here uh uh we applied to address these challenges is by waging the IM roles",
    "start": "955319",
    "end": "960800"
  },
  {
    "text": "with a web feder Federated identities by using the open ID connect so this",
    "start": "960800",
    "end": "966360"
  },
  {
    "text": "approach provides as the robust and secure Dynamic method for enabling the",
    "start": "966360",
    "end": "971800"
  },
  {
    "text": "access from crossplane to the cloud providers so there will be a shortterm credentials um offered from the open ID",
    "start": "971800",
    "end": "979199"
  },
  {
    "text": "connect for the service account request and that will be used for the access between the cross plane and the cloud",
    "start": "979199",
    "end": "985319"
  },
  {
    "text": "provider so this eliminate rels on the static credentials management and rot ating and which improve the security for",
    "start": "985319",
    "end": "991639"
  },
  {
    "text": "the access management so the crossplane uh Disaster",
    "start": "991639",
    "end": "996920"
  },
  {
    "text": "Recovery one critical challenge um when R cross plan is ensuring that resilience",
    "start": "996920",
    "end": "1002720"
  },
  {
    "text": "in case of unexpected cluster failers so recreating the the cluster environment",
    "start": "1002720",
    "end": "1009240"
  },
  {
    "text": "is time consuming error consum I mean the error prone and can lead to more",
    "start": "1009240",
    "end": "1014440"
  },
  {
    "text": "downtime so to address this challenge we utilize willo and open source uh tool to",
    "start": "1014440",
    "end": "1021199"
  },
  {
    "text": "design and backup and restore the kubernetes object resource so it provides that option to back up that",
    "start": "1021199",
    "end": "1027678"
  },
  {
    "text": "resource periodically where we can um get the data of kubernetes resources in",
    "start": "1027679",
    "end": "1033038"
  },
  {
    "text": "point of time and then that can be stored in AWS object storage like S3 and",
    "start": "1033039",
    "end": "1038400"
  },
  {
    "text": "during the restore functionality when there is a crash happens we can deploy a new cluster as a fresh cluster from the",
    "start": "1038400",
    "end": "1045160"
  },
  {
    "text": "backup where we have to recover from the latest backup we can use that and restor directly to the cluster and the",
    "start": "1045160",
    "end": "1051320"
  },
  {
    "text": "operation can be continued from where that left out so this is how that valo helps us to set up more resent system",
    "start": "1051320",
    "end": "1058200"
  },
  {
    "text": "and reducing the risk ass associated with unexpected cluster",
    "start": "1058200",
    "end": "1063360"
  },
  {
    "text": "failures so let's look at the demo",
    "start": "1064240",
    "end": "1069320"
  },
  {
    "text": "yeah so it's a recorded",
    "start": "1089679",
    "end": "1093480"
  },
  {
    "text": "demo so here is the Manifest to deploy the ec2 instance by using the cross plan on AWS so here we Define that instance",
    "start": "1095320",
    "end": "1102720"
  },
  {
    "text": "type and then the the region and the Ami ID and these are all the tags has to be",
    "start": "1102720",
    "end": "1108120"
  },
  {
    "text": "attached to the e to",
    "start": "1108120",
    "end": "1111480"
  },
  {
    "text": "instance so let's apply this",
    "start": "1118600",
    "end": "1123559"
  },
  {
    "text": "manifest the Manifest has been applied and uh there will be the cross planine",
    "start": "1127559",
    "end": "1133880"
  },
  {
    "text": "controller in the back end so that will try to create the resource in AWS by using this uh",
    "start": "1133880",
    "end": "1142000"
  },
  {
    "text": "manifest oh",
    "start": "1144440",
    "end": "1147600"
  },
  {
    "text": "sorry so I can't able to",
    "start": "1166480",
    "end": "1170720"
  },
  {
    "text": "pause yeah the instance is currently in the pending State and uh let's get the",
    "start": "1184840",
    "end": "1190600"
  },
  {
    "text": "instance State and uh there will be R column that denotes that the instance is deployed and state is also running so",
    "start": "1190600",
    "end": "1197360"
  },
  {
    "text": "this confirm that the instance is created in AWS and let us run the AWS CA to confirm",
    "start": "1197360",
    "end": "1205400"
  },
  {
    "text": "the instance state it is also confirmed that the instance is created with this public AP",
    "start": "1205400",
    "end": "1210840"
  },
  {
    "text": "and state also in the running so from here we can take it Forward of accessing the E to instense by using this IP",
    "start": "1210840",
    "end": "1218280"
  },
  {
    "text": "public",
    "start": "1218280",
    "end": "1220640"
  },
  {
    "text": "IP so next we will deploy the S3 bucket by using this manifest",
    "start": "1223520",
    "end": "1229600"
  },
  {
    "text": "But it includes all the parameters requir for deploying the S3 bucket like versing",
    "start": "1229600",
    "end": "1236759"
  },
  {
    "text": "everything so the Manifest is applied so let's run get bucket so this",
    "start": "1237039",
    "end": "1243200"
  },
  {
    "text": "will confirm the bucket state so S3 controller will create that S3 bucket in",
    "start": "1243200",
    "end": "1248440"
  },
  {
    "text": "AWS so once the bucket creation is completed succeeded the ready will be turned to true and let's run that AWS S3",
    "start": "1248440",
    "end": "1256799"
  },
  {
    "text": "CLA to confirm what is the state of the bucket in AWS side so this confirm that",
    "start": "1256799",
    "end": "1261880"
  },
  {
    "text": "bucket is created and this is the time of the bucket",
    "start": "1261880",
    "end": "1266640"
  },
  {
    "text": "creation so the next uh uh manifest s that how we can deploy the E2 instance",
    "start": "1272039",
    "end": "1278440"
  },
  {
    "text": "and S3 bucket together by using the composite resource clim so let's apply this",
    "start": "1278440",
    "end": "1285200"
  },
  {
    "text": "manifest so so basically this creates the ec2 instance and then S3 so let's",
    "start": "1287279",
    "end": "1292799"
  },
  {
    "text": "run that get bucket and instance both together so S3 buet is created and the",
    "start": "1292799",
    "end": "1298360"
  },
  {
    "text": "instance also is created that is the instance ID and that is also turned to",
    "start": "1298360",
    "end": "1303400"
  },
  {
    "text": "straight running so aw says3 CLA confirmed that bucket is also created along with this and let us describe that",
    "start": "1303400",
    "end": "1310880"
  },
  {
    "text": "instant State yeah instense also tend to be",
    "start": "1310880",
    "end": "1316200"
  },
  {
    "text": "running now this is a public AP associated that",
    "start": "1316200",
    "end": "1321200"
  },
  {
    "text": "instance so this is the example of how we can use the cross plane to deploy or basically manage the AWS um or public",
    "start": "1321320",
    "end": "1328720"
  },
  {
    "text": "other public Cloud envir by using the kubernetes let us look at how we can deploy the KU I mean the cubt VM by",
    "start": "1328720",
    "end": "1335520"
  },
  {
    "text": "using the same kubernetes cluster the VM is deployed and it is scheduled on this",
    "start": "1335520",
    "end": "1342080"
  },
  {
    "text": "work two and the external IP is assigned to that VM and we can reach that VM by using the static H name or IP from our",
    "start": "1342080",
    "end": "1349080"
  },
  {
    "text": "mission yeah so that's it for the demo so we would like to thank all of our",
    "start": "1349080",
    "end": "1355200"
  },
  {
    "text": "open source tools so which help us to come across all our challenges along the way so these are our key pillars which",
    "start": "1355200",
    "end": "1361919"
  },
  {
    "text": "helped us to build this project yeah we are open for",
    "start": "1361919",
    "end": "1367278"
  },
  {
    "text": "[Applause] questions the mic so mic",
    "start": "1371200",
    "end": "1379039"
  },
  {
    "text": "uh first of all thanks ashik this is a wonderful presentation thank uh I'm gorab from Black Rock I lead Cloud team",
    "start": "1398080",
    "end": "1404120"
  },
  {
    "text": "uh in India so my question is that I want to uh your thoughts on comparing",
    "start": "1404120",
    "end": "1409840"
  },
  {
    "text": "terraform versus crossplane because in terraform normally you have plan and apply phase so more control if if plan",
    "start": "1409840",
    "end": "1415640"
  },
  {
    "text": "fails apply will not work or you can control when you want to apply but in Cross plane as soon as you submit the",
    "start": "1415640",
    "end": "1421760"
  },
  {
    "text": "your configuration the resource will be created so did you guys think about this case like how do you like do you agree",
    "start": "1421760",
    "end": "1427919"
  },
  {
    "text": "that deliver will create always the good things on infrastructure side of things so how do you uh feel about this uh",
    "start": "1427919",
    "end": "1433760"
  },
  {
    "text": "limitation in crossplay and what's your thought about it yeah yeah I think uh you know that that is a very big",
    "start": "1433760",
    "end": "1439919"
  },
  {
    "text": "limitation of cross plane and you know trying to implement crossplane as a production level thing right I think",
    "start": "1439919",
    "end": "1445760"
  },
  {
    "text": "that is still being worked upon uh from crpl and we also trying to see how we can solve that and but for us it worked",
    "start": "1445760",
    "end": "1453080"
  },
  {
    "text": "because we are mostly looking at relase certification and development pipelines right for that it didn't make this was",
    "start": "1453080",
    "end": "1458799"
  },
  {
    "text": "not a big of a hindrance but I think that is one of the reasons why this is not being as widely uh this one but for",
    "start": "1458799",
    "end": "1465480"
  },
  {
    "text": "us you know in our use case it hit well because it we got everything you know",
    "start": "1465480",
    "end": "1471200"
  },
  {
    "text": "managed through the single Cube CTL kubernetes cluster right and all the tracking and everything became easy for",
    "start": "1471200",
    "end": "1477039"
  },
  {
    "text": "us we we did we do have Tera farm and everything right uh and and that that limitation is there and if if we we",
    "start": "1477039",
    "end": "1483880"
  },
  {
    "text": "going uh you know considering crossplane as a part of our production whole environment then this this definitely",
    "start": "1483880",
    "end": "1489919"
  },
  {
    "text": "would have been an entrance but it it did work for us for our use case yeah and absolutely I mean if you're creating",
    "start": "1489919",
    "end": "1496640"
  },
  {
    "text": "networks and virtual machines on on on on on cloud it's a it's a big uh",
    "start": "1496640",
    "end": "1501720"
  },
  {
    "text": "decision to make right also is there any dry and feature like uh something like a plan no no yes that that is also",
    "start": "1501720",
    "end": "1508480"
  },
  {
    "text": "something that we that is not there in crossplane right like like terraform so that that those are the biggest",
    "start": "1508480",
    "end": "1514080"
  },
  {
    "text": "hindrances as I said right while while looking for production thing but for release pipelines and because you know",
    "start": "1514080",
    "end": "1519520"
  },
  {
    "text": "we could audit it from the cube seed kubernetes itself it it actually made sense for us to include in uh our",
    "start": "1519520",
    "end": "1526120"
  },
  {
    "text": "pipelines okay thank you thanks",
    "start": "1526120",
    "end": "1530320"
  },
  {
    "text": "you you can go ahead I'll repeat the question",
    "start": "1534919",
    "end": "1542799"
  },
  {
    "text": "s okay so so the demo just covered the same so okay so your question was how how do we cover uh you know multiple",
    "start": "1546799",
    "end": "1553720"
  },
  {
    "text": "replica sets and all those things right and H and stuff so basically uh the one that we covered is just for a single",
    "start": "1553720",
    "end": "1560200"
  },
  {
    "text": "instance for the demo purpose but we cubert also provides us virtual machine replica set right uh and that uh that",
    "start": "1560200",
    "end": "1567919"
  },
  {
    "text": "will just act as a replica Set uh uh like B replica set so you can uh Define",
    "start": "1567919",
    "end": "1573960"
  },
  {
    "text": "the number of replicas you can have the probes and everything uh and you can also have a service forward to this",
    "start": "1573960",
    "end": "1579760"
  },
  {
    "text": "replica set and things like that so cuber gives us all those uh capabilities",
    "start": "1579760",
    "end": "1586440"
  },
  {
    "text": "h no so this is basically not mostly for the production kind of roll out this is for release certification pipelines",
    "start": "1588960",
    "end": "1594640"
  },
  {
    "text": "right so we don't have a blue green kind of thing we just want the pipeline to come up it deploy the VMS test to run",
    "start": "1594640",
    "end": "1602039"
  },
  {
    "text": "and you know just go off yeah thanks so uh how do you uh you know",
    "start": "1602039",
    "end": "1609440"
  },
  {
    "text": "deploy net applications uh and does it support net applications and stateful",
    "start": "1609440",
    "end": "1615440"
  },
  {
    "text": "applications yeah with stateful applications what what we did was the cube word right allows us to give",
    "start": "1615440",
    "end": "1622080"
  },
  {
    "text": "persistent volumes uh as root volumes and also secondary volumes to the talking about uh session IDs on the",
    "start": "1622080",
    "end": "1628799"
  },
  {
    "text": "client side so uh yeah so we we don't don't",
    "start": "1628799",
    "end": "1634240"
  },
  {
    "text": "have that kind of a requirement as such in this because you know as we are mostly solving the development and",
    "start": "1634240",
    "end": "1639559"
  },
  {
    "text": "release certification pipelines right so mostly everything is static from the user side as of now the test suit we'll",
    "start": "1639559",
    "end": "1646120"
  },
  {
    "text": "have but let's assume that I wanted to migrate a net applications yeah that I think we'll have to we'll have to research around that not thanks for the",
    "start": "1646120",
    "end": "1654200"
  },
  {
    "text": "for our use case that was not",
    "start": "1654200",
    "end": "1657639"
  },
  {
    "text": "uh that has been created by crossplane has been uh terminated by some other user will crossplane again yes spin up",
    "start": "1661600",
    "end": "1668960"
  },
  {
    "text": "those things yeah there will be a crossplane controller for S3 and ec2 for each component it will be there so it",
    "start": "1668960",
    "end": "1675200"
  },
  {
    "text": "will make sure to uh sync that state always between the cloud and the kubernetes clust okay we can just like a",
    "start": "1675200",
    "end": "1682200"
  },
  {
    "text": "part we can configure the time that uh you know we need to the Cross plane to",
    "start": "1682200",
    "end": "1687559"
  },
  {
    "text": "monitor the the resource the public cloud like every hourly it can syn every",
    "start": "1687559",
    "end": "1692840"
  },
  {
    "text": "2 hourly it can syn like for example crossplane creates an E2 instance and someone deletes the E2 instance that's",
    "start": "1692840",
    "end": "1698640"
  },
  {
    "text": "the question right correct so we can configure a time frame for example for crossplane to go and check okay uh you",
    "start": "1698640",
    "end": "1704279"
  },
  {
    "text": "know whether that still exists and if it is not it will syn okay so the duration can be like a minutes to hours or it's",
    "start": "1704279",
    "end": "1711320"
  },
  {
    "text": "from it can be customizable customiz but when you have a lot of resources right it is not uh generally advised to keep",
    "start": "1711320",
    "end": "1717159"
  },
  {
    "text": "it very low uh so because you know it creates a lot of overhead on both on",
    "start": "1717159",
    "end": "1722640"
  },
  {
    "text": "kubernetes and uh you know the uh public Cloud so this process called that",
    "start": "1722640",
    "end": "1728360"
  },
  {
    "text": "reconcile Loop Rec there is a reconcilation loop that crossplane has you can configure the timings okay",
    "start": "1728360",
    "end": "1735080"
  },
  {
    "text": "depending on how how critical is the system for you thank",
    "start": "1735080",
    "end": "1740518"
  },
  {
    "text": "you yeah yeah HD structure that you guys were",
    "start": "1741279",
    "end": "1747480"
  },
  {
    "text": "discussing and thank you for the thought we have a very specific issue of like Docker image distribution how do you",
    "start": "1747480",
    "end": "1754399"
  },
  {
    "text": "guys manage to distribute your yeah how do you guys manage to distribute your uh Docker images across like multiple",
    "start": "1754399",
    "end": "1761200"
  },
  {
    "text": "clouds and in um the private uh data centers as well do you guys have like a",
    "start": "1761200",
    "end": "1767039"
  },
  {
    "text": "central uh artifact repositories um uh the biggest challenge is do you guys",
    "start": "1767039",
    "end": "1773679"
  },
  {
    "text": "push it to a central one and then distribute it individually we are we are trying to solve it through oci but still",
    "start": "1773679",
    "end": "1779440"
  },
  {
    "text": "trying to uh get around it how did you guys uh solve it so so we we used a very",
    "start": "1779440",
    "end": "1784480"
  },
  {
    "text": "pecular thing in this it might not make sense but I'll explain what we did right so because uh you know for stateful and",
    "start": "1784480",
    "end": "1791640"
  },
  {
    "text": "persistent things and all those right uh for cubert especially uh it by default it uses something called Data volumes",
    "start": "1791640",
    "end": "1797880"
  },
  {
    "text": "okay okay so when we give an image or something it takes time for it to download creates a volume and downloads",
    "start": "1797880",
    "end": "1804080"
  },
  {
    "text": "the data and then like the image and then brings this one so we leveraged",
    "start": "1804080",
    "end": "1809320"
  },
  {
    "text": "Lon uh in our C dis cluster which actually gives us uh persist uh the uh",
    "start": "1809320",
    "end": "1815679"
  },
  {
    "text": "storage class with backing image okay so each OS had a storage class and the",
    "start": "1815679",
    "end": "1820960"
  },
  {
    "text": "backing image would be the image that we need right right so uh when a VM comes",
    "start": "1820960",
    "end": "1826240"
  },
  {
    "text": "up VM the root system would be a volume from this storage class okay okay and",
    "start": "1826240",
    "end": "1831399"
  },
  {
    "text": "it's copy on right so we are not spending time at all to we are not Distributing it across anywhere we are",
    "start": "1831399",
    "end": "1837200"
  },
  {
    "text": "just creating a storage class in the communi cluster any VM coming anywhere in the worker node is a uh is a copy of",
    "start": "1837200",
    "end": "1843320"
  },
  {
    "text": "this persistent volume uh and long hand long takes care of Distributing it with it yeah that makes sense on the uh Ami",
    "start": "1843320",
    "end": "1850279"
  },
  {
    "text": "side of things but in terms of Docker images do you guys have Central repositories for yeah we we do have",
    "start": "1850279",
    "end": "1855880"
  },
  {
    "text": "Central reposit for Docker images but you know for for this cubert use cases we we've stopped using the those",
    "start": "1855880",
    "end": "1861519"
  },
  {
    "text": "directly and the VM uh uh image will will refer to a storage class okay thank",
    "start": "1861519",
    "end": "1868000"
  },
  {
    "text": "you so much thank you um hey thanks for the talk so uh I",
    "start": "1868000",
    "end": "1873320"
  },
  {
    "text": "work with trago and we also have built a similar HCI in our data center my question is does your VMS have a static",
    "start": "1873320",
    "end": "1881279"
  },
  {
    "text": "IP address or when I reboot that machine would that be changing because for us we had to use a DHCP controller in",
    "start": "1881279",
    "end": "1888919"
  },
  {
    "text": "Harvester and that has a Mac Mac to the IP address mapping so how does that work",
    "start": "1888919",
    "end": "1894080"
  },
  {
    "text": "for you guys if I reboot the machine does IP change uh no so basically that's where we use this whereabout cni right",
    "start": "1894080",
    "end": "1900559"
  },
  {
    "text": "so whereabout cni will uh take care of Distributing the B uh the whole this one",
    "start": "1900559",
    "end": "1905840"
  },
  {
    "text": "subnet or Bunch across the cluster so it is not host local or any kind there is no any kind of mapping so if uh if live",
    "start": "1905840",
    "end": "1912639"
  },
  {
    "text": "migration I think you might be doing live exactly that's so when live migration uh uh uh uh you know the V",
    "start": "1912639",
    "end": "1919240"
  },
  {
    "text": "when the VM moves because whereabout cni is the one that takes care it can float the IP anywhere and we have a bridge and",
    "start": "1919240",
    "end": "1925720"
  },
  {
    "text": "all those setup so CB can uh we can you can sing up with CB more after this you",
    "start": "1925720",
    "end": "1932519"
  },
  {
    "text": "know how we set up the network and stuff sure sure would love that thank you thanks sure okay um hi my name is great",
    "start": "1932519",
    "end": "1939279"
  },
  {
    "text": "talk thanks I wanted to know more about how you have deployed your crossplane and how do you take care of like is it",
    "start": "1939279",
    "end": "1945000"
  },
  {
    "text": "active active active passive and how how do you reconcile between two instances of cross plane or you have just one we",
    "start": "1945000",
    "end": "1952760"
  },
  {
    "text": "we only have one as of now any thought on as we have one massive KU cluster but",
    "start": "1952760",
    "end": "1959240"
  },
  {
    "text": "any thoughts on how you would make sure that your cross planes in crossplane is deployed on two different region and it",
    "start": "1959240",
    "end": "1964639"
  },
  {
    "text": "is also resilient so we don't we don't uh so so we we have a single control",
    "start": "1964639",
    "end": "1971080"
  },
  {
    "text": "plane kubernetes cluster right so crossplane is installed one at one place and it manages multiple clouds",
    "start": "1971080",
    "end": "1978120"
  },
  {
    "text": "right so we didn't have a news case where we had to put crossplane at multiple places we just had to link the",
    "start": "1978120",
    "end": "1984000"
  },
  {
    "text": "public cloud account and that would take care of the deployments there or or are you are you talking about multiple",
    "start": "1984000",
    "end": "1989840"
  },
  {
    "text": "kubernetes clusters with cross yeah multiple regions right so let's say yeah so for us the same KU cross plane was",
    "start": "1989840",
    "end": "1996840"
  },
  {
    "text": "going to take is taking care of all the you know all the regions actually we don't we don't have a replica of this",
    "start": "1996840",
    "end": "2002440"
  },
  {
    "text": "control plane anywhere essentially if your cross plane is down if the region is down then your control plane is down",
    "start": "2002440",
    "end": "2007880"
  },
  {
    "text": "yes correct so that that is where we use this Valero for a backup and things like that and uh because you know because",
    "start": "2007880",
    "end": "2014120"
  },
  {
    "text": "this is again development and relase we didn't want to spend more money uh",
    "start": "2014120",
    "end": "2019279"
  },
  {
    "text": "managing backups and all those that was something that uh the the decision that we took that instead of spending so much",
    "start": "2019279",
    "end": "2025600"
  },
  {
    "text": "and having like we didn't a didn't make much of a sense for us we could afford small time time for development and",
    "start": "2025600",
    "end": "2031039"
  },
  {
    "text": "release certification pipelines right uh so that's what but Valero helped us reduce that downtime So within that",
    "start": "2031039",
    "end": "2037200"
  },
  {
    "text": "downtime uh is acceptable looking at the you know the cost that we would incur managing multiple kubernetes servers",
    "start": "2037200",
    "end": "2043960"
  },
  {
    "text": "across this one in public Cloud okay what level of RP and RP you",
    "start": "2043960",
    "end": "2050599"
  },
  {
    "text": "supportan the recovery Point objective and recy time objective so could could you rep so what level of RPO and RTO",
    "start": "2050599",
    "end": "2057839"
  },
  {
    "text": "your Disaster Recovery is going to uh enable us right is it in RS or uh no so",
    "start": "2057839",
    "end": "2064118"
  },
  {
    "text": "so basically we have uh so it will be um uh currently we have around 20 to 25",
    "start": "2064119",
    "end": "2069599"
  },
  {
    "text": "minutes because for the kubernetes cluster to come up right uh uh so that",
    "start": "2069599",
    "end": "2074760"
  },
  {
    "text": "that that is a level of this one that we have oh it's not active active where you have a platform only know okay yeah",
    "start": "2074760",
    "end": "2084118"
  },
  {
    "text": "sure back basically get transed",
    "start": "2091679",
    "end": "2099640"
  },
  {
    "text": "so does long on uh provide you that capability in terms of uh so one thing is going and creating the volume from",
    "start": "2106640",
    "end": "2113400"
  },
  {
    "text": "the storage array or using these plugins with kubernets and you can go and create the volumes themselves the other part is",
    "start": "2113400",
    "end": "2119800"
  },
  {
    "text": "making the hypervisor aware of those volumes virtual disc there's no problem because hyper can do a native conversion",
    "start": "2119800",
    "end": "2124880"
  },
  {
    "text": "like from your data volumes it can create the virtual disc and how many cards you want they can go ahead and create it but when it comes to the other",
    "start": "2124880",
    "end": "2131320"
  },
  {
    "text": "types of volume pools that hypervisor will support like Icey pools in terms of raw disk mappings and things like that",
    "start": "2131320",
    "end": "2138000"
  },
  {
    "text": "that's does long on today support things like that where it can also make the hypervisor aware of these raw volumes so",
    "start": "2138000",
    "end": "2144040"
  },
  {
    "text": "that when you want to deploy a VM say I just give an ISO or an image backing but I ask it to deploy it as a raw on a raw",
    "start": "2144040",
    "end": "2150720"
  },
  {
    "text": "volume backing rather than a virtual disc so does long on support that today",
    "start": "2150720",
    "end": "2155880"
  },
  {
    "text": "or do you have a use case like that um we we did uh we did try that out right so but but the raw volume thing was uh",
    "start": "2155880",
    "end": "2163200"
  },
  {
    "text": "it was very slow for us to import the image importing image and stuff like that so what was happening is our uh",
    "start": "2163200",
    "end": "2170680"
  },
  {
    "text": "because you know for our some of the certifications we need pre-warm data",
    "start": "2170680",
    "end": "2175960"
  },
  {
    "text": "within the image itself so it would it would be some 10 15 GB of data for the hive and all those things that itself",
    "start": "2175960",
    "end": "2183000"
  },
  {
    "text": "was taking a lot of time for the uh the VM to come up okay right so it didn't make sense for us to so we just we tried",
    "start": "2183000",
    "end": "2190160"
  },
  {
    "text": "it a bit and then you know initially we gave up you know any of such RDS because you know uh we realized that it didn't",
    "start": "2190160",
    "end": "2197560"
  },
  {
    "text": "make much sense so we have not spent much time there and and this G came into picture right the backing image was very",
    "start": "2197560",
    "end": "2203240"
  },
  {
    "text": "helpful for us so okay mostly you know because of the time and our uni use case",
    "start": "2203240",
    "end": "2208720"
  },
  {
    "text": "right we had to we we didn't put much okay so uh one thing again uh touching upon one thing is the base image itself",
    "start": "2208720",
    "end": "2214640"
  },
  {
    "text": "where the operating system and all this is uh coming on say how do you scale those VMS in terms of the data volumes",
    "start": "2214640",
    "end": "2219800"
  },
  {
    "text": "or the other discs like as an example the drives that you talk about right say I I want to add additional file system",
    "start": "2219800",
    "end": "2226440"
  },
  {
    "text": "space and additional volumes added to it correct correct so again the point there is there you don't have a you don't have",
    "start": "2226440",
    "end": "2232520"
  },
  {
    "text": "to go and Seed any data to the volume it's it's like you present the volume then the operating system takes over uh",
    "start": "2232520",
    "end": "2238520"
  },
  {
    "text": "so again does long on provide capabilities adding those so I think all",
    "start": "2238520",
    "end": "2244200"
  },
  {
    "text": "those are the same capabilities what a persistent volume has in kubernetes are",
    "start": "2244200",
    "end": "2249280"
  },
  {
    "text": "applied to whatever volumes you are using as the root or the additional yeah",
    "start": "2249280",
    "end": "2254760"
  },
  {
    "text": "thank you want to add something this is Punit from net app uh while you run the",
    "start": "2254760",
    "end": "2260200"
  },
  {
    "text": "cube word on public Cloud do you enable emulation we use metal instance we use",
    "start": "2260200",
    "end": "2266359"
  },
  {
    "text": "metal instance okay yeah and and U we actually are mostly running the cubeo in",
    "start": "2266359",
    "end": "2272240"
  },
  {
    "text": "the on Prem bare metal clusters itself okay but we have we are building a feature called burst to public Cloud uh",
    "start": "2272240",
    "end": "2279000"
  },
  {
    "text": "and whenever you know because you know with on Prim whenever you run out of capacity the the the uh initial this one",
    "start": "2279000",
    "end": "2287240"
  },
  {
    "text": "uh to procure the hardware and set up itself is a there is an initial overhead right of time and things like that so",
    "start": "2287240",
    "end": "2295000"
  },
  {
    "text": "due to that we are building the burst to public Cloud uh and there and we will be adding more worker nodes in the the",
    "start": "2295000",
    "end": "2301280"
  },
  {
    "text": "kuties Clusters only uh we will not be having a complete control plane or anything in public Cloud only workers",
    "start": "2301280",
    "end": "2306680"
  },
  {
    "text": "will get SIM like spined up there and those will be metal instances which will actually have",
    "start": "2306680",
    "end": "2313040"
  },
  {
    "text": "cuber uh installed and we'll talk to the same control plane in the okay for the RPO RTO you said you have 25 minutes",
    "start": "2313040",
    "end": "2320920"
  },
  {
    "text": "right did you also explore any other backup Solutions uh no so Valero is what",
    "start": "2320920",
    "end": "2326079"
  },
  {
    "text": "we have currently been using and this is very fairly new for us too so you know we definitely will have something U you",
    "start": "2326079",
    "end": "2332680"
  },
  {
    "text": "know going forward and I think we know in the next talk or something we we'll present okay because there are other Solutions which have lower RPO RTO",
    "start": "2332680",
    "end": "2340160"
  },
  {
    "text": "correct correct yes yes so the the main so major this one would be you know to bring up the kubernetes cluster itself",
    "start": "2340160",
    "end": "2347800"
  },
  {
    "text": "mhm right so the major of the 25 minutes goes into bringing up the kubernetes cluster in case you know so in case of a",
    "start": "2347800",
    "end": "2353920"
  },
  {
    "text": "total failure is what is 25 minutes right in case of degradation we are not we are not expecting that",
    "start": "2353920",
    "end": "2360640"
  },
  {
    "text": "much hi first of all great talk guys uh what I wanted to ask you mentioned release certification multiple times",
    "start": "2360880",
    "end": "2366880"
  },
  {
    "text": "right so what does it what does it mean exactly and could you expand on that yeah so basically release certification",
    "start": "2366880",
    "end": "2373119"
  },
  {
    "text": "is you know when when uh you know functional test non-functional Q test and you bring you ship out a you know",
    "start": "2373119",
    "end": "2379760"
  },
  {
    "text": "version build right and you have to run all functional test performance test and",
    "start": "2379760",
    "end": "2385520"
  },
  {
    "text": "uh non-functional test and all those things right on that that is that that thing is what I refer to as release",
    "start": "2385520",
    "end": "2390760"
  },
  {
    "text": "certification um basically once you start building once a developer build uh like commits a code you have build ready",
    "start": "2390760",
    "end": "2398920"
  },
  {
    "text": "you have to certify whether you know there are any things like so all that that that process is what I meant by",
    "start": "2398920",
    "end": "2404319"
  },
  {
    "text": "relase certification so basically you build your whatever Docker images you run your test so once you build the",
    "start": "2404319",
    "end": "2409400"
  },
  {
    "text": "product you you deploy it and because we are hybrid you have to deploy the same thing in multiple places and there are",
    "start": "2409400",
    "end": "2415400"
  },
  {
    "text": "Appliance also isilon and all those things that we support so uh multiple places we'll have to deploy this we'll",
    "start": "2415400",
    "end": "2421640"
  },
  {
    "text": "run test against that and see the coverage and all those things so basically validating at m at mul correct",
    "start": "2421640",
    "end": "2427040"
  },
  {
    "text": "valid yes yes thank you thanks hello I have two question U the first one is",
    "start": "2427040",
    "end": "2433440"
  },
  {
    "text": "which network policies your tool is supporting a your uh platform is ready",
    "start": "2433440",
    "end": "2439040"
  },
  {
    "text": "to onboard multitud and um",
    "start": "2439040",
    "end": "2443960"
  },
  {
    "text": "applications uh by Network policies did you mean uh celium or any other uh yeah",
    "start": "2444240",
    "end": "2450680"
  },
  {
    "text": "we we don't have anything as of that like that specifically uh but uh for for policy management as such over overall",
    "start": "2450680",
    "end": "2458119"
  },
  {
    "text": "uh we use uh we use something called kyero but that is not that is not a network policy kind of thing because",
    "start": "2458119",
    "end": "2463960"
  },
  {
    "text": "this is all mostly internal right we are not exposing this anywhere and and most of them uh most of the Kota is managed",
    "start": "2463960",
    "end": "2469480"
  },
  {
    "text": "by something called unicor and all those things so we didn't have much of a use case in that that direction uh what else",
    "start": "2469480",
    "end": "2475440"
  },
  {
    "text": "do you have for the name space isolation uh yeah so so policies as for",
    "start": "2475440",
    "end": "2481599"
  },
  {
    "text": "the name space and everything for Access ACLS and everything we use something called kerno okay know is what we use so",
    "start": "2481599",
    "end": "2489200"
  },
  {
    "text": "basically to protect all the name spaces that U like like the the schedular name space and all those things that we have",
    "start": "2489200",
    "end": "2496560"
  },
  {
    "text": "KY hello uh so I have basically two question the first one is as uh we are",
    "start": "2496560",
    "end": "2502480"
  },
  {
    "text": "deploying uh the thing using cuart as a port basically we are deploying a VM as a port right so what is the flexibility",
    "start": "2502480",
    "end": "2509800"
  },
  {
    "text": "about the choosing the operating system like in traditional Cube we use some ISO something like that or or here are we",
    "start": "2509800",
    "end": "2515880"
  },
  {
    "text": "using like the base do bler image as a operating system or uh something else or some more flexibility we have yeah yeah",
    "start": "2515880",
    "end": "2522480"
  },
  {
    "text": "we do have flexibilities right we can use uh Cav images we can use uh Docker",
    "start": "2522480",
    "end": "2527760"
  },
  {
    "text": "images but what we do is we all we'll try to create a storage class out of it",
    "start": "2527760",
    "end": "2533000"
  },
  {
    "text": "right Lan supports creating storage class using images so something like uh",
    "start": "2533000",
    "end": "2538200"
  },
  {
    "text": "similar like Ami kind of concept like predate image that will spin up correct",
    "start": "2538200",
    "end": "2543319"
  },
  {
    "text": "correct okay and second thing is um like is there anything like versing kind of",
    "start": "2543319",
    "end": "2548480"
  },
  {
    "text": "thing like that resource versing let's say I deployed one VM with some State some stage of resource and maybe after",
    "start": "2548480",
    "end": "2556280"
  },
  {
    "text": "sometimes I updated it maybe I updated some Ram but I want to just maybe roll back or I want to see the history some",
    "start": "2556280",
    "end": "2562559"
  },
  {
    "text": "stat similar like Terra from offers so is there anything like this so it is very similar to P right it is the so",
    "start": "2562559",
    "end": "2569119"
  },
  {
    "text": "just instead of kind we uh uh P it will become kind virtual machine so so it is",
    "start": "2569119",
    "end": "2575960"
  },
  {
    "text": "all as flexible as no no not about flexibility I'm asking about the historical data or the part Shing kind",
    "start": "2575960",
    "end": "2581200"
  },
  {
    "text": "of thing let's say I want to rever the changes so you will have to have the you will have the Manifest somewhere right",
    "start": "2581200",
    "end": "2587680"
  },
  {
    "text": "so yeah so that it is again means mean mean the tools is not providing some historical no roll back as but uh but",
    "start": "2587680",
    "end": "2595440"
  },
  {
    "text": "you know the the we we do to support the replica set right we have for virtual",
    "start": "2595440",
    "end": "2600599"
  },
  {
    "text": "machines we have virtual machine replica set okay okay so using that you can roll",
    "start": "2600599",
    "end": "2606359"
  },
  {
    "text": "back and roll uh roll out yeah okay and one one more small question like uh",
    "start": "2606359",
    "end": "2611599"
  },
  {
    "text": "during the deployment uh does it Provide support uh to the Ws level something like let's say some startup script we",
    "start": "2611599",
    "end": "2617680"
  },
  {
    "text": "can configure like while while running we run right VNC right no the cloud in",
    "start": "2617680",
    "end": "2623480"
  },
  {
    "text": "ITT Cloud kind yeah yeah it it does support thank you yeah",
    "start": "2623480",
    "end": "2628640"
  },
  {
    "text": "okay yeah yeah thank you everyone thank you thank you guys",
    "start": "2628640",
    "end": "2634240"
  }
]