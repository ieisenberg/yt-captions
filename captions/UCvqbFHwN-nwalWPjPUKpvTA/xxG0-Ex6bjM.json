[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "for red hat and i also act as a tech lead for the c instrumentation and today with me there is patrick that",
    "start": "0",
    "end": "6480"
  },
  {
    "text": "is working for intel and he is the structural logging working group organizer",
    "start": "6480",
    "end": "12559"
  },
  {
    "text": "and he will be talking later about more things on logging so today what we will talk about um",
    "start": "12559",
    "end": "19279"
  },
  {
    "text": "we'll do an introduction about the group uh what is the the purpose of this group and what we are doing upstream",
    "start": "19279",
    "end": "25680"
  },
  {
    "text": "um as well as we'll cover the different activities that we are responsible of which are for example some subproject",
    "start": "25680",
    "end": "31840"
  },
  {
    "text": "related to observability in kubernetes as well as the different observability signals that are really common nowadays",
    "start": "31840",
    "end": "37440"
  },
  {
    "text": "such as like logging tracing and monitoring and then i will kind of teach you how you can",
    "start": "37440",
    "end": "44399"
  },
  {
    "text": "also contribute and help us uh building observability on kubernetes in a in a better way",
    "start": "44399",
    "end": "49840"
  },
  {
    "text": "and where you can find us if you have any question or anything really",
    "start": "49840",
    "end": "55120"
  },
  {
    "start": "55000",
    "end": "55000"
  },
  {
    "text": "um so what do we do so first if you are not really familiar with how the development cycle works in kubernetes um",
    "start": "55120",
    "end": "61120"
  },
  {
    "text": "like we are splitted into groups that are called a special interest group and there are many of them and all of",
    "start": "61120",
    "end": "67840"
  },
  {
    "text": "them have a particular focus and in the case of instrumentation well",
    "start": "67840",
    "end": "73520"
  },
  {
    "text": "the main focus is of stability and all these uh groups have a charter that",
    "start": "73520",
    "end": "78960"
  },
  {
    "text": "they define at the creation of the group that basically give the baseline of what's the purpose of this group and",
    "start": "78960",
    "end": "85360"
  },
  {
    "text": "what it is going to cover in our case that's an extract of the official shortage that we have for the",
    "start": "85360",
    "end": "92159"
  },
  {
    "text": "group and we are meant to cover the best practices for cluster observability across all kubernetes components so in",
    "start": "92159",
    "end": "98880"
  },
  {
    "text": "the communities project as well as develop new components and new projects around observability equalities as a",
    "start": "98880",
    "end": "105280"
  },
  {
    "text": "whole so we are not only working on the kubernetes repository in the communities",
    "start": "105280",
    "end": "112159"
  },
  {
    "text": "project we're also working on many subprojects that are covering observation kubernetes such as cubesat",
    "start": "112159",
    "end": "118079"
  },
  {
    "text": "metric that is producing metrics based on the kubernetes states so based on the",
    "start": "118079",
    "end": "123680"
  },
  {
    "text": "api as well as for example k log that is a logging library that we are using in",
    "start": "123680",
    "end": "129759"
  },
  {
    "text": "kubernetes a lot and of course like many projects that use kubernetes as a library for example",
    "start": "129759",
    "end": "135360"
  },
  {
    "text": "a client there is also matrix server that is a project used for autoscaling based on",
    "start": "135360",
    "end": "140720"
  },
  {
    "text": "resource matrix that is part of our responsibilities and there are many many more so",
    "start": "140720",
    "end": "147840"
  },
  {
    "text": "we are kind of split between like working on a different kubernetes project as well as like many other",
    "start": "147840",
    "end": "152879"
  },
  {
    "text": "sub-projects and we are also working a lot on all the different observability signals uh that",
    "start": "152879",
    "end": "159200"
  },
  {
    "text": "you might have already seen kubernetes so matrix logs event as well and traces",
    "start": "159200",
    "end": "165920"
  },
  {
    "start": "165000",
    "end": "165000"
  },
  {
    "text": "so how do we do that well we really like like any other uh group uh",
    "start": "165920",
    "end": "171360"
  },
  {
    "text": "we are triaging and fixing the relevant tissue that are assigned to us um and how it uh how it works something",
    "start": "171360",
    "end": "178800"
  },
  {
    "text": "is that we have labels that identify uh issues or pr that are related to a particular group and then we just go",
    "start": "178800",
    "end": "185519"
  },
  {
    "text": "through them and try to see what can we do and sometimes it's",
    "start": "185519",
    "end": "190959"
  },
  {
    "text": "like the person that opened the ticket that assigned us or something just someone that did",
    "start": "190959",
    "end": "196239"
  },
  {
    "text": "put us on the list of people that should review the thing we also try generally to",
    "start": "196239",
    "end": "202319"
  },
  {
    "text": "review all the new additions to metrics or all the changes related to matrix because we really want to",
    "start": "202319",
    "end": "208560"
  },
  {
    "text": "have a high quality of metrics and kubernetes but the review is like stricter",
    "start": "208560",
    "end": "214480"
  },
  {
    "text": "depending on the stability of the matrix so if it's a new metric we might not review it but if it's a machine that",
    "start": "214480",
    "end": "219760"
  },
  {
    "text": "will become stable we'll definitely review it and we also involved a lot on features",
    "start": "219760",
    "end": "225280"
  },
  {
    "text": "development and announcement related to observability as also if anyone in the project has any issues with",
    "start": "225280",
    "end": "231440"
  },
  {
    "text": "observability or if there is any gaps then we will try to cover it and as i mentioned before we are",
    "start": "231440",
    "end": "237519"
  },
  {
    "text": "maintaining a lot of the projects so for the sub project i will speak about three",
    "start": "237519",
    "end": "243040"
  },
  {
    "start": "242000",
    "end": "242000"
  },
  {
    "text": "of them because like they are the one that i'm the most familiar with and that i contribute to um so keep saying music matrix seven",
    "start": "243040",
    "end": "249040"
  },
  {
    "text": "pretty selector so for cubesat metrics for those who don't know and i'm not too familiar with like the promised",
    "start": "249040",
    "end": "254239"
  },
  {
    "start": "250000",
    "end": "250000"
  },
  {
    "text": "terminology it's meant to be an exporter so the goal is to",
    "start": "254239",
    "end": "260880"
  },
  {
    "text": "create metrics and expose metrics based on a third-party application that doesn't",
    "start": "260880",
    "end": "265919"
  },
  {
    "text": "that isn't meant to be monitored for example such as the kubernetes api we have a lot of objects in kubernetes and",
    "start": "265919",
    "end": "272720"
  },
  {
    "text": "sometimes you want to have metrics about them let's say you want metrics about your parts your deployment your stateful set well",
    "start": "272720",
    "end": "279840"
  },
  {
    "text": "keepsake cubesat metric will be the tool that generates a positive style matrix based",
    "start": "279840",
    "end": "285040"
  },
  {
    "text": "on those and for example on the slide we have like two of them that are deployment",
    "start": "285040",
    "end": "290880"
  },
  {
    "text": "related metrics the first one gives you the number of replica that the deployment should have in spec and the",
    "start": "290880",
    "end": "297120"
  },
  {
    "text": "second one is the status of the recent update of the deployment so it",
    "start": "297120",
    "end": "303120"
  },
  {
    "text": "basically tells you if an update like a rollout for example has been completed or not so it's really useful",
    "start": "303120",
    "end": "309759"
  },
  {
    "text": "when you want to for example investigate issue related to a deployment that hasn't completed for example or stuff",
    "start": "309759",
    "end": "315680"
  },
  {
    "text": "like that and it does so by watching for all kind of events so creation updates",
    "start": "315680",
    "end": "323840"
  },
  {
    "text": "of objects in kubernetes and then expose the metrics and then you have your platform that will ingest",
    "start": "323840",
    "end": "329759"
  },
  {
    "text": "these metrics since like it's a text-based format like any platform can really ingest the matrix and use them",
    "start": "329759",
    "end": "337520"
  },
  {
    "start": "337000",
    "end": "337000"
  },
  {
    "text": "um for matrix server magic server is a project a bit different um it's an implementation of",
    "start": "337600",
    "end": "343360"
  },
  {
    "text": "a metric api that is the resource matrix api um so we have like three api that we",
    "start": "343360",
    "end": "348479"
  },
  {
    "text": "maintain actively which are meant as a way to communicate between the auto scaling pipeline",
    "start": "348479",
    "end": "356240"
  },
  {
    "text": "and the matrix and it's a way to have auto scaling based on",
    "start": "356240",
    "end": "362560"
  },
  {
    "text": "metric basically and over the years we've seen many use cases uh for this",
    "start": "362560",
    "end": "368479"
  },
  {
    "text": "that were not uh designed by default for example qatar top which is used a lot",
    "start": "368479",
    "end": "373759"
  },
  {
    "text": "nowadays to get the usage of a board and to try to track uh in a linux way for",
    "start": "373759",
    "end": "378880"
  },
  {
    "text": "example like nextup the usage of your your pods and containers and then that that was",
    "start": "378880",
    "end": "384639"
  },
  {
    "text": "created based on this api as well as well resource based auto scaling so if you have an hp and you",
    "start": "384639",
    "end": "390639"
  },
  {
    "text": "want to auto scale your pods based on i don't know if they reach a 50 percent cpu usage then you will use a",
    "start": "390639",
    "end": "397680"
  },
  {
    "text": "metric server primitives adapter is a project that is",
    "start": "397680",
    "end": "403199"
  },
  {
    "start": "401000",
    "end": "401000"
  },
  {
    "text": "very similar it solves cement photo scaling but it's supporting a larger amount of",
    "start": "403199",
    "end": "410720"
  },
  {
    "text": "matrix instead of only having the resource matrix for autoscaling you will only be able to auto scale on any kind",
    "start": "410720",
    "end": "417759"
  },
  {
    "text": "of metric so for example if you want to scale your micro service based on the number of query per second that it is",
    "start": "417759",
    "end": "424800"
  },
  {
    "text": "receiving then you can use a project such as permitted selector to do so",
    "start": "424800",
    "end": "429840"
  },
  {
    "text": "and what it does basically that it adapts the query that comes from the api server so let's say you have an auto",
    "start": "429840",
    "end": "436720"
  },
  {
    "text": "scaling request that should go to through this api and point",
    "start": "436720",
    "end": "442400"
  },
  {
    "text": "to selector will convert it into a punctual query query parameters with that and then",
    "start": "442400",
    "end": "448319"
  },
  {
    "text": "return you the results so you can imagine that you can then via",
    "start": "448319",
    "end": "453919"
  },
  {
    "text": "this adapter convert really anything into a pointers query and auto scale based on it",
    "start": "453919",
    "end": "460000"
  },
  {
    "text": "and then i will let patrick talk about the logs okay",
    "start": "460240",
    "end": "466720"
  },
  {
    "text": "so as you as you know sig instrumentation owns two different things the metrics and as another pillar of observability",
    "start": "466720",
    "end": "474080"
  },
  {
    "start": "468000",
    "end": "468000"
  },
  {
    "text": "the logging infrastructure and lock output to some extent but mostly we just maintain the infrastructure and help",
    "start": "474080",
    "end": "480800"
  },
  {
    "text": "other six to write good lock calls into their code and help guide them towards",
    "start": "480800",
    "end": "486240"
  },
  {
    "text": "producing better lock output and one of the initiatives that has been started a while ago was to rethink",
    "start": "486240",
    "end": "492720"
  },
  {
    "start": "492000",
    "end": "492000"
  },
  {
    "text": "what a lock message should look like from a kubernetes component originally it was inherited from k-log it's just a",
    "start": "492720",
    "end": "499919"
  },
  {
    "text": "plain string with no format whatsoever to it and you if you need to look into that string you basically need to do regular expression matching or grabbing",
    "start": "499919",
    "end": "507440"
  },
  {
    "text": "or something and it's fairly informal what we are trying to achieve now is",
    "start": "507440",
    "end": "513279"
  },
  {
    "text": "so-called structured logging where the output contains clearly separated lock message string ideally",
    "start": "513279",
    "end": "520159"
  },
  {
    "text": "constant and key value pairs in an easy to form a pass format the text output",
    "start": "520159",
    "end": "526560"
  },
  {
    "text": "still exists it's useful for debugging for developers but we also now support",
    "start": "526560",
    "end": "531839"
  },
  {
    "text": "outputting the same data as json and the idea here is that any kind of log",
    "start": "531839",
    "end": "536880"
  },
  {
    "text": "ingestion pipeline will be easier to implement if we if we use the json format so that's structured logging it's",
    "start": "536880",
    "end": "544640"
  },
  {
    "text": "implemented as rewriting source code replacing one unstructured log call from",
    "start": "544640",
    "end": "549839"
  },
  {
    "text": "in k log with another variant that takes key value pairs and the rest is taken care of in k log but it means touching a",
    "start": "549839",
    "end": "555120"
  },
  {
    "text": "lot of code and that's what we are organizing and we've done that work with",
    "start": "555120",
    "end": "560800"
  },
  {
    "text": "the help of quite a lot of contributors and and helpful people with cubelet that was already completed",
    "start": "560800",
    "end": "568080"
  },
  {
    "text": "in 121 and we also completed that work in scube",
    "start": "568080",
    "end": "573360"
  },
  {
    "text": "scheduler in villa just just for current uh kubernetes 124. there was one final",
    "start": "573360",
    "end": "579680"
  },
  {
    "text": "blocker and what that was related to multi-line output of strings it became unreadable if it was a quoted",
    "start": "579680",
    "end": "586880"
  },
  {
    "text": "string and we changed that in the k-log text output for when 124s of it remains",
    "start": "586880",
    "end": "592000"
  },
  {
    "text": "useful even also in the text output and with that change we will convert to basically the last remaining log call in",
    "start": "592000",
    "end": "598480"
  },
  {
    "text": "cube scheduler and we consider it done this is just for the cube scheduler code itself it will still call into functions",
    "start": "598480",
    "end": "605839"
  },
  {
    "text": "from client go for example that don't use structured logging but then those appear as a single string as we did",
    "start": "605839",
    "end": "612079"
  },
  {
    "text": "before so you can turn on json and you get all new json outputs from these two",
    "start": "612079",
    "end": "617360"
  },
  {
    "text": "components you can also turn it on in all of the alpha components it just won't be very",
    "start": "617360",
    "end": "622560"
  },
  {
    "text": "structured it will still have only that string and that's where we need help further going on going further to to",
    "start": "622560",
    "end": "628959"
  },
  {
    "text": "continue this effort but i'll get to that when i present the working group that i'm a part of",
    "start": "628959",
    "end": "634880"
  },
  {
    "text": "we also own or kind of are the defacto maintainers of k-log implementation",
    "start": "634880",
    "end": "640160"
  },
  {
    "text": "itself one thing that we observed in kubernetes is that for historic reasons we have",
    "start": "640160",
    "end": "645200"
  },
  {
    "text": "lots of command line options in cuba in k-log that we don't think fit into",
    "start": "645200",
    "end": "651680"
  },
  {
    "text": "a container like a log file handling that really should be handled by whoever ingests",
    "start": "651680",
    "end": "657760"
  },
  {
    "text": "the the data so we want to deprecate and we have deprecated all flags related to",
    "start": "657760",
    "end": "663680"
  },
  {
    "text": "log file handling for example there's a longer list of things that only make sense in very specific scenarios so",
    "start": "663680",
    "end": "669200"
  },
  {
    "text": "these are now marked deprecated in kubernetes but still available if you get that warning if you",
    "start": "669200",
    "end": "674880"
  },
  {
    "text": "try to still still call them and we will remove them in 126. so the clock is",
    "start": "674880",
    "end": "680560"
  },
  {
    "text": "ticking if you are calling kubernetes components with some of these flags you should better start removing those those",
    "start": "680560",
    "end": "686240"
  },
  {
    "text": "options the main goal here is or it was to remove or get rid of that code that we",
    "start": "686240",
    "end": "692399"
  },
  {
    "text": "don't really need in kubernetes but we kind of reformed our approach here and we will continue to support them in",
    "start": "692399",
    "end": "698240"
  },
  {
    "text": "k-log itself it's just that the kubernetes components won't use them so if you are a user of k-log rest",
    "start": "698240",
    "end": "705360"
  },
  {
    "text": "assured nothing we're not breaking your application that is based on k-log it will just make kubernetes simpler",
    "start": "705360",
    "end": "712959"
  },
  {
    "text": "and the other purpose is that if we have a json backend that writes lock messages it's basically really different code",
    "start": "712959",
    "end": "718959"
  },
  {
    "text": "path that is being taken and things like increased verbosity by a module which is",
    "start": "718959",
    "end": "724880"
  },
  {
    "text": "a one of these k log options that won't work if you use json",
    "start": "724880",
    "end": "730880"
  },
  {
    "text": "but that's that's now fully documented you see which options are supported which are not and there's a cap that's",
    "start": "730880",
    "end": "736000"
  },
  {
    "text": "linked here with more details now the the new feature that i've been working",
    "start": "736000",
    "end": "742079"
  },
  {
    "start": "738000",
    "end": "738000"
  },
  {
    "text": "on in 124 is basically a continuation of that structured logging work",
    "start": "742079",
    "end": "748880"
  },
  {
    "text": "with structured logging you still call a global k log function to output a log",
    "start": "748880",
    "end": "754000"
  },
  {
    "text": "message and it's using the globally configured logarithm but will be the same for all go routines in your program",
    "start": "754000",
    "end": "761279"
  },
  {
    "text": "and contextual logging goes one step further it uses an abstract logging interface go",
    "start": "761279",
    "end": "767200"
  },
  {
    "text": "logger you have some utility code in k-log to extract that logger from your context",
    "start": "767200",
    "end": "772880"
  },
  {
    "text": "that gets passed into your call chain and then you can do calls through that local logger that is specific to the",
    "start": "772880",
    "end": "778959"
  },
  {
    "text": "current call chain and the caller basically determines what that logger does it can do things like",
    "start": "778959",
    "end": "785680"
  },
  {
    "text": "adding a certain key value pair and it will be printed by every single lock message inside that call chain that's",
    "start": "785680",
    "end": "792160"
  },
  {
    "text": "useful if you are doing request pro processing and you have concurrencies or",
    "start": "792160",
    "end": "798240"
  },
  {
    "text": "multiple things going on at the same time printing logs now you will see what each lock message",
    "start": "798240",
    "end": "803680"
  },
  {
    "text": "is about and that was not possible before we are going to use that in cube scheduler for example to include the pot",
    "start": "803680",
    "end": "810160"
  },
  {
    "text": "that is being scheduled in all calls and that that also works in code that doesn't even know that it's working on a",
    "start": "810160",
    "end": "815279"
  },
  {
    "text": "pot because it's part of a context my own favorite use case is",
    "start": "815279",
    "end": "821120"
  },
  {
    "text": "logging in unit tests because now the output can be redirected into testing t",
    "start": "821120",
    "end": "827760"
  },
  {
    "text": "lock and go test will just show me the log messages for my failed test case and not",
    "start": "827760",
    "end": "834399"
  },
  {
    "text": "all of the rest thing all the rest of the log messages that are not of no interest to me",
    "start": "834399",
    "end": "839600"
  },
  {
    "text": "so as i said we are not going to break k-log users all of a code if you are importing a kubernetes library",
    "start": "839600",
    "end": "846480"
  },
  {
    "text": "will work with a global k-log logger as default but we we make it so that if your code a",
    "start": "846480",
    "end": "852720"
  },
  {
    "text": "library is instrument it's supporting this it it basically can also work without depending on on k-log output for",
    "start": "852720",
    "end": "859199"
  },
  {
    "text": "example you can have your own logger you can completely replace the logging back-end in your binary and make sure",
    "start": "859199",
    "end": "864800"
  },
  {
    "text": "that and you will will be a can rest assured that k-log based code kubernetes code will pick it",
    "start": "864800",
    "end": "869920"
  },
  {
    "text": "up and use it and that's part where we started that work because",
    "start": "869920",
    "end": "875839"
  },
  {
    "text": "it also again needs to touch all of these source code lines that do log calls in kubernetes and going forward",
    "start": "875839",
    "end": "881600"
  },
  {
    "text": "we'll combine both we will go straight to the contextual logging function calls",
    "start": "881600",
    "end": "886639"
  },
  {
    "text": "they also have very similar parameters so the previous work on structured logging will be will be what's the first step",
    "start": "886639",
    "end": "893519"
  },
  {
    "text": "now we need to take another step and replace the global logger that's what we are now going to do also in other components",
    "start": "893519",
    "end": "900320"
  },
  {
    "start": "899000",
    "end": "899000"
  },
  {
    "text": "so damien introduced for sick this whole work on structured logging is organized",
    "start": "900639",
    "end": "907360"
  },
  {
    "text": "as a working group that's another concept in kubernetes it's basically a smaller subset of people who meet independently of a",
    "start": "907360",
    "end": "914800"
  },
  {
    "text": "larger sick it has separate organizers i'm i'm one of them now to vote with mariek who's not here today",
    "start": "914800",
    "end": "923920"
  },
  {
    "text": "and we don't own the code so any kind of triaging code ownership still rests with",
    "start": "923920",
    "end": "929360"
  },
  {
    "text": "sick instrumentation but it's a good way to get started uh getting your your feet wet with doing",
    "start": "929360",
    "end": "935519"
  },
  {
    "text": "some kubernetes work because it's a smaller group you can it's less distracting also that i i don't know much about metrics for example i've used",
    "start": "935519",
    "end": "942079"
  },
  {
    "text": "them but i don't attend usually attend for stick meetings so i learned something today about metrics",
    "start": "942079",
    "end": "947279"
  },
  {
    "text": "uh but this is a basically subset different subset of work that we're doing and you're welcome to join our slack uh",
    "start": "947279",
    "end": "954959"
  },
  {
    "text": "our zoom meetings show up on our slack because we do need help this is this is basically to some",
    "start": "954959",
    "end": "961040"
  },
  {
    "text": "extent busy work but it's also interesting because you get to see a lot of code get",
    "start": "961040",
    "end": "966880"
  },
  {
    "text": "a lot of experience exposure in the community it's a good way to get started in kubernetes in my opinion",
    "start": "966880",
    "end": "973920"
  },
  {
    "text": "and and for contextual logging you actually need to understand a little bit it's not just cut and paste we really need to make some some",
    "start": "973920",
    "end": "980560"
  },
  {
    "text": "investigations about what's the best way to pass in a logger into a certain code base so i",
    "start": "980560",
    "end": "986880"
  },
  {
    "text": "think it's a good way to get started and we're looking forward to contributors thanks",
    "start": "986880",
    "end": "992320"
  },
  {
    "text": "now i will present you the work we've been doing on tracing recently and most likely like the",
    "start": "992880",
    "end": "1000480"
  },
  {
    "text": "yeah what we've done to build the experience around facing it's been an issue for a while and we've been trying",
    "start": "1000480",
    "end": "1006480"
  },
  {
    "text": "to improve that over the years by designing the features and started to implement it",
    "start": "1006480",
    "end": "1012399"
  },
  {
    "text": "and the original goal that we wanted to achieve was to be able to trace",
    "start": "1012399",
    "end": "1017440"
  },
  {
    "text": "any kind of request that is made to the api server and to be able to know where it went how long does it took to",
    "start": "1017440",
    "end": "1025918"
  },
  {
    "text": "for example um return from hcd how long a cd took to um like",
    "start": "1025919",
    "end": "1031678"
  },
  {
    "text": "do the work there and stuff like that um so we wanted um to have a tracing",
    "start": "1031679",
    "end": "1037678"
  },
  {
    "text": "available for the whole control plane um so we added tracing to jpi server uh in",
    "start": "1037679",
    "end": "1044079"
  },
  {
    "text": "122 and it reached alpha we are still working currently on like promoting it to better uh and it should be happening",
    "start": "1044079",
    "end": "1050880"
  },
  {
    "text": "in the upcoming releases and it will now be available by default on kubernetes",
    "start": "1050880",
    "end": "1057679"
  },
  {
    "text": "um and it was also added to hcd because like we wanted a full experience right of like distributed tracing in",
    "start": "1057679",
    "end": "1064559"
  },
  {
    "text": "kubernetes so the support was added to lcd and v3.5.0 but it's still experimental in",
    "start": "1064559",
    "end": "1071280"
  },
  {
    "text": "the same way as in kubernetes so you will need to enable it yourself if you want to start using this",
    "start": "1071280",
    "end": "1077039"
  },
  {
    "text": "feature and we've also had use cases uh where people wanted to also tracing because",
    "start": "1077039",
    "end": "1082880"
  },
  {
    "text": "like it was working well in the api server so why not i did adding it somewhere else right um so it's like",
    "start": "1082880",
    "end": "1089200"
  },
  {
    "text": "some effort started around like both life cycle and there is an ongoing effort to add",
    "start": "1089200",
    "end": "1094400"
  },
  {
    "text": "tracing to the cubelet uh it was supposed to actually land in uh 123 124",
    "start": "1094400",
    "end": "1100080"
  },
  {
    "text": "and start being available now but we were a bit late so maybe in the upcoming releases you will be able to",
    "start": "1100080",
    "end": "1105360"
  },
  {
    "text": "see that uh and also like when we started this discussion uh some people from the container runtime also were interesting",
    "start": "1105360",
    "end": "1112400"
  },
  {
    "text": "uh by this feature uh and now it's available in cryo and container d and you can enable it in your clients",
    "start": "1112400",
    "end": "1119120"
  },
  {
    "text": "cluster and yeah we've had also some users of tracing that started",
    "start": "1119120",
    "end": "1124960"
  },
  {
    "text": "seeing gaps uh in the current solution and add some ideas to improve it",
    "start": "1124960",
    "end": "1130559"
  },
  {
    "text": "one of them was to add context at every point into every controller so that we can",
    "start": "1130559",
    "end": "1137440"
  },
  {
    "text": "follow uh the actual requests that are made from one controller to another and propagate that into the the tracing so",
    "start": "1137440",
    "end": "1143840"
  },
  {
    "text": "that we have an overview really of what happens and this is still in discussion as well",
    "start": "1143840",
    "end": "1150320"
  },
  {
    "start": "1150000",
    "end": "1150000"
  },
  {
    "text": "um so i will give you a quick example of how it works today uh to have like tracing uh the control plane uh so since",
    "start": "1150320",
    "end": "1158240"
  },
  {
    "text": "uh the feature is not still like alpha and it's still like experimental you need to enable the api",
    "start": "1158240",
    "end": "1164640"
  },
  {
    "text": "server tracing feature gate at first and then to configure it it's pretty easy like a lot of configuration in the jps server",
    "start": "1164640",
    "end": "1172080"
  },
  {
    "text": "you need to add cli flag and then add a config file to specify the configuration of your",
    "start": "1172080",
    "end": "1177919"
  },
  {
    "text": "your tracing in this case the example just saw very basic tracing configuration with a one",
    "start": "1177919",
    "end": "1183919"
  },
  {
    "text": "person sampling rate and it did quite the same you need to set a cli flag in order to enable the",
    "start": "1183919",
    "end": "1191600"
  },
  {
    "text": "features not available by default and then the only thing that you really need to to set up in order to start",
    "start": "1191600",
    "end": "1198240"
  },
  {
    "text": "tracing your cluster is to have open telemetry collectors running as a sidecar of like each of the like for",
    "start": "1198240",
    "end": "1204799"
  },
  {
    "text": "example jbs server container and the hd container and that's about it then you can send the traces to whichever backend",
    "start": "1204799",
    "end": "1211360"
  },
  {
    "text": "you want and start using this amazing feature um and this is an example",
    "start": "1211360",
    "end": "1217520"
  },
  {
    "text": "that was done with jager but you could use anything really of like the result that was achieved with",
    "start": "1217520",
    "end": "1224080"
  },
  {
    "text": "this feature we can see different spans um the first one into from the api",
    "start": "1224080",
    "end": "1230000"
  },
  {
    "text": "server so you can see where the api server spend time when the request was received",
    "start": "1230000",
    "end": "1236640"
  },
  {
    "text": "same for lcd like you have lcd in a range and you also like for some requests they",
    "start": "1236640",
    "end": "1242240"
  },
  {
    "text": "may be eating a web book for example so you will also have that and you will be able to see really like where the",
    "start": "1242240",
    "end": "1249360"
  },
  {
    "text": "time was spent and if you ever had to investigate issues with uh slowness for example of a micro",
    "start": "1249360",
    "end": "1256400"
  },
  {
    "text": "service of like or like any kind of latency issue you must likely had a bad experience",
    "start": "1256400",
    "end": "1261919"
  },
  {
    "text": "because it's really hard to figure out where the problem is going from it could be network it could be your application and then if it's your application where",
    "start": "1261919",
    "end": "1268720"
  },
  {
    "text": "exactly in the application did it happen and with tracing this is something that we can see",
    "start": "1268720",
    "end": "1275120"
  },
  {
    "text": "more easily i would say because you can really see like what was the factor that made your request slow",
    "start": "1275120",
    "end": "1282480"
  },
  {
    "text": "so that's the key behind this feature and now i'll talk about like metrics",
    "start": "1282480",
    "end": "1289039"
  },
  {
    "text": "as you might have seen as currency's users we have a lot of metrics in",
    "start": "1289039",
    "end": "1294080"
  },
  {
    "text": "kubernetes and that's because most of the components in kubernetes have default integration responses like they",
    "start": "1294080",
    "end": "1300720"
  },
  {
    "text": "are all using the promotive client to expose metrics in a text based format",
    "start": "1300720",
    "end": "1305840"
  },
  {
    "text": "um and in the matrix endpoint and that can be described by really anyone",
    "start": "1305840",
    "end": "1312480"
  },
  {
    "text": "uh like you can use any kind of timesave database that is compatible with the promoters format and that would work but",
    "start": "1312480",
    "end": "1319039"
  },
  {
    "text": "in most cases it still promotes that is used because it's like the most common",
    "start": "1319039",
    "end": "1324080"
  },
  {
    "text": "nowadays but over the years we've encountered many issues with metrics you might have",
    "start": "1324080",
    "end": "1331520"
  },
  {
    "start": "1326000",
    "end": "1326000"
  },
  {
    "text": "faced some of them but what we saw is that there was a reoccurring problem",
    "start": "1331520",
    "end": "1338159"
  },
  {
    "text": "which was related to memory like there were some spikes in memory usage sometimes there was some memory leaks",
    "start": "1338159",
    "end": "1344000"
  },
  {
    "text": "that we detected and the issue is that like we were seeing metrics that were growing growing",
    "start": "1344000",
    "end": "1349760"
  },
  {
    "text": "and growing i was never stopping and the problem was related to metric cardinality",
    "start": "1349760",
    "end": "1355760"
  },
  {
    "text": "which is a concept where for example you take this metric that could be a metric from any",
    "start": "1355760",
    "end": "1362559"
  },
  {
    "text": "microservice then the metric has some labels",
    "start": "1362559",
    "end": "1368080"
  },
  {
    "text": "and you can consider labels as a dimension and then the label name would",
    "start": "1368080",
    "end": "1373280"
  },
  {
    "text": "be the width of your matrix so let's say in this case we have a width of three we",
    "start": "1373280",
    "end": "1378559"
  },
  {
    "text": "have the verb code and pass label and then for each",
    "start": "1378559",
    "end": "1383760"
  },
  {
    "text": "label there will be label value and that's the eight of each label so for example here for the",
    "start": "1383760",
    "end": "1390320"
  },
  {
    "text": "verb we have a height of four same for the code and the bus is one and then if you really want to estimate",
    "start": "1390320",
    "end": "1396880"
  },
  {
    "text": "like how many time series your metric will generate well it's pretty simple um the time",
    "start": "1396880",
    "end": "1402400"
  },
  {
    "text": "series basically um the like a unique set of label values so for",
    "start": "1402400",
    "end": "1408480"
  },
  {
    "text": "example put 200 on the pod path will be one time three put",
    "start": "1408480",
    "end": "1414400"
  },
  {
    "text": "201 on the bypass will be another time series both uh 200 on the board pass",
    "start": "1414400",
    "end": "1419840"
  },
  {
    "text": "will be the same so you can see where it is going like each",
    "start": "1419840",
    "end": "1425360"
  },
  {
    "text": "value will multiply with one another so here the theoretical cardinality would be four",
    "start": "1425360",
    "end": "1431760"
  },
  {
    "text": "times four times one right um so that can be problematic in a sense if uh you have a label at some point",
    "start": "1431760",
    "end": "1438400"
  },
  {
    "text": "that have an unbounded number of values for example a url a url is simple but",
    "start": "1438400",
    "end": "1445120"
  },
  {
    "text": "well if someone hits your api and you are like no matter the path that is",
    "start": "1445120",
    "end": "1450240"
  },
  {
    "text": "queried you are producing a metric then that means they have control over the actual values that the bus can take",
    "start": "1450240",
    "end": "1456880"
  },
  {
    "text": "and the problem is that there is some security concern with that because well they can basically create metrics that",
    "start": "1456880",
    "end": "1462400"
  },
  {
    "text": "will be stored in your monitoring platform by themselves and if they query basically a million parts that doesn't",
    "start": "1462400",
    "end": "1469600"
  },
  {
    "text": "make any sense then you will store them in your monitoring platform and in most cases if you don't have any kind of",
    "start": "1469600",
    "end": "1476080"
  },
  {
    "text": "security features enabled um then your monitoring platform will be down uh you will",
    "start": "1476080",
    "end": "1482799"
  },
  {
    "text": "like you will be in the dark in your cluster and selected so it's something to be considered",
    "start": "1482799",
    "end": "1488880"
  },
  {
    "text": "and since it was eating a lot of people in the humanities community we've tried",
    "start": "1488880",
    "end": "1494320"
  },
  {
    "start": "1489000",
    "end": "1489000"
  },
  {
    "text": "to put something in place in order to to cover that",
    "start": "1494320",
    "end": "1499679"
  },
  {
    "text": "so we've introduced a framework that is meant as a way to define",
    "start": "1499679",
    "end": "1505360"
  },
  {
    "text": "the fact that a metric is an immutable api in a sense that if someone ever were to",
    "start": "1505360",
    "end": "1511360"
  },
  {
    "text": "add a new label that would take a thousand value well they won't be able to do so because like the metric would",
    "start": "1511360",
    "end": "1517279"
  },
  {
    "text": "have been stable and it wouldn't be possible so that's what we call the metric stability uh",
    "start": "1517279",
    "end": "1522799"
  },
  {
    "text": "framework and the idea was that we added some um",
    "start": "1522799",
    "end": "1528559"
  },
  {
    "text": "checks in order to verify that whenever metric is stable it's impossible uh as a developer to add new labels to it like",
    "start": "1528559",
    "end": "1536240"
  },
  {
    "text": "we have checked in ci that prevents that um and we will like you",
    "start": "1536240",
    "end": "1541520"
  },
  {
    "text": "see it as one immutable api like any other api that reaches table at some point",
    "start": "1541520",
    "end": "1548158"
  },
  {
    "start": "1548000",
    "end": "1548000"
  },
  {
    "text": "um but like we noticed that it wasn't enough we were still seeing the issues because like well you cannot see anything and",
    "start": "1548559",
    "end": "1555840"
  },
  {
    "text": "even maybe some alpha metrics are also uh causing uh like cardinality explosion",
    "start": "1555840",
    "end": "1562320"
  },
  {
    "text": "right um so uh what we did was that we had to start with which was that when",
    "start": "1562320",
    "end": "1569600"
  },
  {
    "text": "you need to fix this kind of problem uh in the project itself sometimes it takes a while just to get the fixing",
    "start": "1569600",
    "end": "1576000"
  },
  {
    "text": "then uh sometimes like the problem was from like two reasons ago so you need to do a backboard which takes a lot of time",
    "start": "1576000",
    "end": "1581679"
  },
  {
    "text": "and as a user of kubernetes you might see the fix like maybe uh",
    "start": "1581679",
    "end": "1586720"
  },
  {
    "text": "one or two months after we leave the batch right and after you encounter the issue",
    "start": "1586720",
    "end": "1592080"
  },
  {
    "text": "so we added this tool that is a matrix coordinate reinforcement two that allows you in each component of",
    "start": "1592080",
    "end": "1598400"
  },
  {
    "text": "kubernetes to specify a cliff like in order to uh like specify the metrics that you want",
    "start": "1598400",
    "end": "1605840"
  },
  {
    "text": "to remove in case like they are exploding because like we are developer we might make mistakes so mistakes might",
    "start": "1605840",
    "end": "1611919"
  },
  {
    "text": "happen but we want to give you a way at front time you know to be able to fix this kind of",
    "start": "1611919",
    "end": "1617600"
  },
  {
    "text": "problem if there ever cures so this is what we built to solve this issue",
    "start": "1617600",
    "end": "1625200"
  },
  {
    "start": "1624000",
    "end": "1624000"
  },
  {
    "text": "and we have some other ideas around that because um the stability framework is great",
    "start": "1625200",
    "end": "1630400"
  },
  {
    "text": "but we want to use it to improve the quality of the metrics that we have um so in the future development process",
    "start": "1630400",
    "end": "1637919"
  },
  {
    "text": "and kubernetes we have like different stages which is alpha beta and stable but in",
    "start": "1637919",
    "end": "1643120"
  },
  {
    "text": "the matrix stability framework only have to only have alpha and stable so we want to add beta in order to add a bit more",
    "start": "1643120",
    "end": "1650240"
  },
  {
    "text": "expressiveness to this framework because today it was like either",
    "start": "1650240",
    "end": "1655279"
  },
  {
    "text": "the we could change anything in the metric because the metric was alpha or it was stable and we couldn't change",
    "start": "1655279",
    "end": "1660559"
  },
  {
    "text": "anything anymore like there was nothing we could do to this metric we wanted to add more expressiveness as",
    "start": "1660559",
    "end": "1667440"
  },
  {
    "text": "well as there is a big problem in kubernetes that you might have faced that there are many metrics and there is no actual documentation to really know",
    "start": "1667440",
    "end": "1674399"
  },
  {
    "text": "which metric does what and even like what are the metrics that are available to me um so we want to build an",
    "start": "1674399",
    "end": "1680399"
  },
  {
    "text": "automated documentation that gives you the power to really use metrics",
    "start": "1680399",
    "end": "1687679"
  },
  {
    "text": "and yeah get involved like we are very welcoming community we are always",
    "start": "1687679",
    "end": "1692799"
  },
  {
    "start": "1690000",
    "end": "1690000"
  },
  {
    "text": "looking for new contributors and the best way to start is to start",
    "start": "1692799",
    "end": "1697919"
  },
  {
    "text": "attending our sig meetings um because that's where we usually meet",
    "start": "1697919",
    "end": "1703200"
  },
  {
    "text": "and on board people the things you can do like there are many ways to contribute you don't have",
    "start": "1703200",
    "end": "1708880"
  },
  {
    "text": "to just contribute code you can do reviews you can feel issues you can contribute to the documentation and",
    "start": "1708880",
    "end": "1715200"
  },
  {
    "text": "stuff like that and since at the beginning of the talk i said that we have like many",
    "start": "1715200",
    "end": "1720399"
  },
  {
    "text": "sub-projects as part of the instrumentation group there are many of them that are looking",
    "start": "1720399",
    "end": "1726640"
  },
  {
    "text": "for contributors new contributors new reviewers and stuff like that so if you are interested in one of them feel free",
    "start": "1726640",
    "end": "1732960"
  },
  {
    "text": "to reach out to the person in chart and they will be very happy to onboard you",
    "start": "1732960",
    "end": "1739200"
  },
  {
    "text": "um for the meetings that we are running the sick meetings we have a regular one that is bi-weekly where we discuss like",
    "start": "1739200",
    "end": "1745360"
  },
  {
    "text": "general topics for the group uh it takes you that 9 30 a.m pacific time on",
    "start": "1745360",
    "end": "1751600"
  },
  {
    "text": "thursdays and like it's one time is the meeting the other time it's the triage and trade it's more like we go through",
    "start": "1751600",
    "end": "1757840"
  },
  {
    "text": "issues we go through the pr's and make sure that someone is assigned to it and looking at it actively",
    "start": "1757840",
    "end": "1763360"
  },
  {
    "text": "but other than that you can reach out to us on the sync instrumentation channel",
    "start": "1763360",
    "end": "1768480"
  },
  {
    "text": "we should be fairly active there or if you have any like questions that you want to ask to delete directly feel free",
    "start": "1768480",
    "end": "1774720"
  },
  {
    "text": "to reach out to any of them they will be very happy to to answer all your questions and to start onboarding",
    "start": "1774720",
    "end": "1780880"
  },
  {
    "text": "you in that and yeah that's about it for the talk",
    "start": "1780880",
    "end": "1786080"
  },
  {
    "text": "thank you everyone",
    "start": "1786080",
    "end": "1788640"
  },
  {
    "text": "so we don't have any questions online so if you want to ask questions raise your hand and i will bring microphone",
    "start": "1792559",
    "end": "1800480"
  },
  {
    "text": "hi uh first thanks and uh so you mentioned about tracing uh",
    "start": "1800480",
    "end": "1805919"
  },
  {
    "text": "setting it up and running a collector as a side car uh which not doesn't seem very easy when",
    "start": "1805919",
    "end": "1813039"
  },
  {
    "text": "using manage kubernetes such as eks do you have a solution for that or are you",
    "start": "1813039",
    "end": "1818880"
  },
  {
    "text": "working with providers to provide those kind of solutions um",
    "start": "1818880",
    "end": "1824159"
  },
  {
    "text": "on top of my end i i don't think we've considered even supporting it like by default like running the cycle",
    "start": "1824159",
    "end": "1829840"
  },
  {
    "text": "ourself in companies because we don't want to like take a position like choosing for example the open telemetry",
    "start": "1829840",
    "end": "1835600"
  },
  {
    "text": "collect or like any other future collector that might be created at some point but i think",
    "start": "1835600",
    "end": "1841360"
  },
  {
    "text": "some vendors are actively uh trying to onboard tracing in general but",
    "start": "1841360",
    "end": "1846640"
  },
  {
    "text": "we will see like it's still very early to take that kind of decision and even for vendors to",
    "start": "1846640",
    "end": "1853120"
  },
  {
    "text": "onboard this feature um so the more stable it will become the more likely it will be that uh like for",
    "start": "1853120",
    "end": "1859360"
  },
  {
    "text": "example gke azure or whichever like cloud will start supporting this tutorial",
    "start": "1859360",
    "end": "1867360"
  },
  {
    "text": "and regarding the tracing i was wondering which is the idea the user should enable it whenever he sees",
    "start": "1872640",
    "end": "1879760"
  },
  {
    "text": "an issues or the idea is to have it always enabled and if so which is the overhead",
    "start": "1879760",
    "end": "1886799"
  },
  {
    "text": "um i think the avoid is still quite big it depends on the sampling rate um",
    "start": "1886799",
    "end": "1893840"
  },
  {
    "text": "but it's mostly a way for us developers for example components in",
    "start": "1893840",
    "end": "1899679"
  },
  {
    "text": "kubernetes to see if we have any latency regression to then handle them or for",
    "start": "1899679",
    "end": "1905679"
  },
  {
    "text": "you uh users to really empowers you to know like where is my problem um let's say tracing",
    "start": "1905679",
    "end": "1912559"
  },
  {
    "text": "to me is a mean for uh investigating your slos like if you have a problem with your slo your",
    "start": "1912559",
    "end": "1917760"
  },
  {
    "text": "availability is degrading then it is a mean for you to notice hey the point is",
    "start": "1917760",
    "end": "1924000"
  },
  {
    "text": "going from a cd the problem is coming from the api server and then you can know exactly like where it is coming",
    "start": "1924000",
    "end": "1929600"
  },
  {
    "text": "from but the overhead is still quite big so yeah",
    "start": "1929600",
    "end": "1936720"
  },
  {
    "text": "i think it's more like if you encounter this issue at some point i think it's a good way to say yeah maybe i need to",
    "start": "1936880",
    "end": "1943519"
  },
  {
    "text": "enable tracing but it's more like depending on the budget that you have and how much you",
    "start": "1943519",
    "end": "1949120"
  },
  {
    "text": "can afford because like the more signal signal you have the easier it will be for you to investigate",
    "start": "1949120",
    "end": "1955279"
  },
  {
    "text": "any kind of problems uh but it depends on the budget like sometimes it's something that you need",
    "start": "1955279",
    "end": "1960480"
  },
  {
    "text": "to enable so you need to choose whether like it seems worse or like you don't have",
    "start": "1960480",
    "end": "1965919"
  },
  {
    "text": "the budget for it thanks",
    "start": "1965919",
    "end": "1969760"
  },
  {
    "text": "hey so thanks thanks a lot for the for the talk so i i have a question related to to locks but uh perhaps more to the",
    "start": "1973279",
    "end": "1981519"
  },
  {
    "text": "up in the logs for applications that run in the cluster rather than the the logs of control plane components itself and",
    "start": "1981519",
    "end": "1987279"
  },
  {
    "text": "this this information may be out of date but last time i checked it was not super",
    "start": "1987279",
    "end": "1993120"
  },
  {
    "text": "easy to collect logs from application running in the cluster right you you either will need to go to the cri which",
    "start": "1993120",
    "end": "1999679"
  },
  {
    "text": "requires quite some privilege that may not available everywhere or modify the",
    "start": "1999679",
    "end": "2004880"
  },
  {
    "text": "application code to send the logs somewhere so my question will be is there any any plans or are there any",
    "start": "2004880",
    "end": "2012399"
  },
  {
    "text": "ideas of how to make a bit easier to collect locks for the application running in the",
    "start": "2012399",
    "end": "2018000"
  },
  {
    "text": "in the cluster so conceptually at least a containerized application should be writing to standard out or standard",
    "start": "2018000",
    "end": "2023919"
  },
  {
    "text": "error and then it's the job of the container runtime and for container orchestrator to do something with that",
    "start": "2023919",
    "end": "2030799"
  },
  {
    "text": "data marek my code co-organizer he is interested in that topic he wants to",
    "start": "2030799",
    "end": "2036480"
  },
  {
    "text": "investigate how to make it more performant but there are no specific plans at this",
    "start": "2036480",
    "end": "2041519"
  },
  {
    "text": "point time but so if you are interested in that low level part and how to feed that data into lock collection agents",
    "start": "2041519",
    "end": "2048878"
  },
  {
    "text": "marek would be the person to ask for because but he's probably going to do something or look into that fairly soon",
    "start": "2048879",
    "end": "2056720"
  },
  {
    "text": "okay we have one more minute for the last question anyone",
    "start": "2057919",
    "end": "2063440"
  },
  {
    "text": "all right i think we're done thanks",
    "start": "2068480",
    "end": "2073079"
  },
  {
    "text": "foreign",
    "start": "2076560",
    "end": "2078720"
  }
]