[
  {
    "text": "all right everyone thanks for coming my name is Tom bassani I work at platform 9",
    "start": "0",
    "end": "6000"
  },
  {
    "text": "and I'm here to talk about fishing the server let's functions or functions as a",
    "start": "6000",
    "end": "11309"
  },
  {
    "text": "service framework for kubernetes so I",
    "start": "11309",
    "end": "17390"
  },
  {
    "text": "read the street the other day and I just had to put it up on now so so basically",
    "start": "17390",
    "end": "25380"
  },
  {
    "text": "what it says is server less means using somebody else's kubernetes cluster and I",
    "start": "25380",
    "end": "31399"
  },
  {
    "text": "kind of agree with that don't you think it makes sense because if somebody else",
    "start": "31399",
    "end": "38489"
  },
  {
    "text": "is managing all the nodes for you and all you get is an API endpoint that you can deploy anything to isn't that server",
    "start": "38489",
    "end": "45390"
  },
  {
    "text": "less so so what else do you need so I think the kubernetes has created a",
    "start": "45390",
    "end": "53610"
  },
  {
    "text": "great platform that you can deploy software onto but I think there's a",
    "start": "53610",
    "end": "58649"
  },
  {
    "text": "couple of things that we can improve as soon as we have our slides back no",
    "start": "58649",
    "end": "66090"
  },
  {
    "text": "pressure should each other okay",
    "start": "66090",
    "end": "82110"
  },
  {
    "text": "just it's like those old TVs um yeah I",
    "start": "82110",
    "end": "88700"
  },
  {
    "text": "don't have a whole lot of words to just read fast before it disappeared all",
    "start": "88700",
    "end": "96360"
  },
  {
    "text": "right so here's the picture of a container yeah but but really what so I",
    "start": "96360",
    "end": "101640"
  },
  {
    "text": "want to talk about containers as about the word flows itself that we have",
    "start": "101640",
    "end": "106950"
  },
  {
    "text": "around containers we created great workflows and operations they made everything uniform you don't have to",
    "start": "106950",
    "end": "112229"
  },
  {
    "text": "worry about virtual end in your production environment anymore every single thing is a docker container",
    "start": "112229",
    "end": "117360"
  },
  {
    "text": "whether it has you know Python or node or whatever running inside it but the development workflow got heavier and",
    "start": "117360",
    "end": "124530"
  },
  {
    "text": "somewhat more complicated you now have to any you know have you end here knows",
    "start": "124530",
    "end": "130170"
  },
  {
    "text": "containers very well probably so yeah try to my you know the time before you before you",
    "start": "130170",
    "end": "136319"
  },
  {
    "text": "are so familiar with containers you have to learn how to build containers you have to learn what docker registry to",
    "start": "136319",
    "end": "142200"
  },
  {
    "text": "use you have to figure out what container image format to use you to",
    "start": "142200",
    "end": "148140"
  },
  {
    "text": "figure out how to version your containers and so on so there's a certain amount of development process",
    "start": "148140",
    "end": "153269"
  },
  {
    "text": "weight that's added by containers and so that said can we have the can we have",
    "start": "153269",
    "end": "160980"
  },
  {
    "text": "the benefits of the operational uniformity of containers and still have a lighter-weight development process the",
    "start": "160980",
    "end": "169620"
  },
  {
    "text": "holder thought about containers for a second while we switch subjects to resource allocation",
    "start": "169620",
    "end": "175879"
  },
  {
    "text": "so as we split our cloud native world into lots and lots of tiny services we",
    "start": "175909",
    "end": "182730"
  },
  {
    "text": "end up with a lot of services that are very rarely used but every single",
    "start": "182730",
    "end": "188099"
  },
  {
    "text": "service that you deploy needs a certain minimum memory usage and if it's idle",
    "start": "188099",
    "end": "193530"
  },
  {
    "text": "it's not consuming so much CPU but you have to allocate it and so if you deploy",
    "start": "193530",
    "end": "201479"
  },
  {
    "text": "a lot of these services you have to account for your cluster capacity as a function of how many things you deploy",
    "start": "201479",
    "end": "207840"
  },
  {
    "text": "rather than how much your services are used and so can we can we have can we",
    "start": "207840",
    "end": "215099"
  },
  {
    "text": "have more of flusher capacity as a function of usage rather than deployment size so two questions can we have",
    "start": "215099",
    "end": "222479"
  },
  {
    "text": "lighter weight development processes around really operationally simple thing",
    "start": "222479",
    "end": "227699"
  },
  {
    "text": "like containers and can we have cluster capacity as a as a function of actual",
    "start": "227699",
    "end": "233129"
  },
  {
    "text": "service usage",
    "start": "233129",
    "end": "235819"
  },
  {
    "text": "I guess we're just going with these slides hold on I'm going to try to live",
    "start": "238540",
    "end": "248170"
  },
  {
    "text": "fix this thing give me one second",
    "start": "248170",
    "end": "261239"
  },
  {
    "text": "okay yeah all right well okay so so",
    "start": "267940",
    "end": "285400"
  },
  {
    "text": "since this talk is about functions a service answer to that question is of course functions as a service so so I'm",
    "start": "285400",
    "end": "291370"
  },
  {
    "text": "going to try and define it somewhat so we so we have short lives stateless",
    "start": "291370",
    "end": "297190"
  },
  {
    "text": "functions and and and functions in coats because they're not strictly functions",
    "start": "297190",
    "end": "303700"
  },
  {
    "text": "they can also be modules or packages in whatever language you working on and that function is associated with an",
    "start": "303700",
    "end": "309790"
  },
  {
    "text": "event or a trigger of some sort like HTTP or a timer or something like that and these functions are only activated",
    "start": "309790",
    "end": "318550"
  },
  {
    "text": "when that trigger fires which means your resource usages is proportional to the",
    "start": "318550",
    "end": "324070"
  },
  {
    "text": "actual usage of the function and since your function can't be running all the",
    "start": "324070",
    "end": "329590"
  },
  {
    "text": "time but it has to be started on demand it needs to start quickly when you do one to start it and so you need to have",
    "start": "329590",
    "end": "337780"
  },
  {
    "text": "some sort of fast cold start for function to it but a cold start is when",
    "start": "337780",
    "end": "343510"
  },
  {
    "text": "the function hasn't has never been run before or what scale due to being idle that time needs to be pretty fast so we",
    "start": "343510",
    "end": "353140"
  },
  {
    "text": "come to defining session sufficient is a open source functions as a service framework that works on top of",
    "start": "353140",
    "end": "358390"
  },
  {
    "text": "kubernetes and as efficient user you see three core concept functions there a",
    "start": "358390",
    "end": "366430"
  },
  {
    "text": "function or a module in various supported languages and environments",
    "start": "366430",
    "end": "371550"
  },
  {
    "text": "environments are the runtime dependencies of the function",
    "start": "371550",
    "end": "377850"
  },
  {
    "text": "environments are also the only language specific part efficient everything else is is language agnostic and so there is",
    "start": "377850",
    "end": "384640"
  },
  {
    "text": "a node environment Python environment ago environment c-sharp and Java are",
    "start": "384640",
    "end": "391300"
  },
  {
    "text": "also being developed and as PHP as well and of course triggers are the events",
    "start": "391300",
    "end": "397900"
  },
  {
    "text": "that activate your functions so today there's a DP triggers and you can also trigger",
    "start": "397900",
    "end": "405640"
  },
  {
    "text": "functions based on kubernetes watches and we see a demo of that today so you can you can fire a function when when",
    "start": "405640",
    "end": "414460"
  },
  {
    "text": "something on your kubernetes resource changes so you can watch a set of pods or or services and so on",
    "start": "414460",
    "end": "423750"
  },
  {
    "text": "so I want to talk a little bit about how efficient works are fundamentally to get",
    "start": "423750",
    "end": "430240"
  },
  {
    "text": "a fast cold start you need a part that's already running because you don't want",
    "start": "430240",
    "end": "436000"
  },
  {
    "text": "to have the time to pull an image even if an image is already pre pull the image the the time to schedule and",
    "start": "436000",
    "end": "442600"
  },
  {
    "text": "allocate an IP address and start a node or Python server can easily exceed whatever cold start tolerance you have",
    "start": "442600",
    "end": "450400"
  },
  {
    "text": "which is which is typically somewhere between twenty to hundred or so",
    "start": "450400",
    "end": "455530"
  },
  {
    "text": "milliseconds so if you want if you want to fast cold start then we need a pool",
    "start": "455530",
    "end": "460690"
  },
  {
    "text": "of already warm containers that already have a server running in them and we",
    "start": "460690",
    "end": "466510"
  },
  {
    "text": "just need to be able to load functions on demand I'm going to talk a little bit about the components of fishin and how",
    "start": "466510",
    "end": "472120"
  },
  {
    "text": "we achieve that so the user deploys the",
    "start": "472120",
    "end": "477760"
  },
  {
    "text": "vision API on a carbon eros cluster and has efficient client I'm going to",
    "start": "477760",
    "end": "483340"
  },
  {
    "text": "represent the functions that they create with those little colorful circles they",
    "start": "483340",
    "end": "489130"
  },
  {
    "text": "upload those functions to the fishin API fishin has a pool manager and this is",
    "start": "489130",
    "end": "495580"
  },
  {
    "text": "what creates that pool of functions so sorry the pool of environments so each",
    "start": "495580",
    "end": "502570"
  },
  {
    "text": "function is associated with some environment so node or Python and so on and for each of the environments that",
    "start": "502570",
    "end": "508150"
  },
  {
    "text": "exist a pool of generic parts is created that capable of running any function in that language and then there's a router",
    "start": "508150",
    "end": "516490"
  },
  {
    "text": "which is where of course the requests come in so that's an HTTP request comes to the HTTP router",
    "start": "516490",
    "end": "522539"
  },
  {
    "text": "as soon as the request comes in that sort of cold start clock is ticking and now we need to quickly provision a part",
    "start": "522540",
    "end": "528970"
  },
  {
    "text": "with that function so so let's say a request comes in for that purple function",
    "start": "528970",
    "end": "534680"
  },
  {
    "text": "and the router talks today API and figures out what function is associated with that request that thing is actually",
    "start": "534680",
    "end": "541370"
  },
  {
    "text": "cached so it's often pretty fast and then requests the pool manager for a",
    "start": "541370",
    "end": "547570"
  },
  {
    "text": "function part for that function and the pool manager creates that part gives it",
    "start": "547570",
    "end": "553310"
  },
  {
    "text": "to the router and the router proxies the request to that part so that typically",
    "start": "553310",
    "end": "558860"
  },
  {
    "text": "happens in about 100 milliseconds or so it also depends on the startup time or the load time of the function itself the",
    "start": "558860",
    "end": "565100"
  },
  {
    "text": "bigger it is the more dependencies it has the longer the startup time of the",
    "start": "565100",
    "end": "570230"
  },
  {
    "text": "function and so that continues for other functions they're pulled from the pool",
    "start": "570230",
    "end": "576920"
  },
  {
    "text": "and as you take out function parts from the generic pool you we actually use a",
    "start": "576920",
    "end": "584360"
  },
  {
    "text": "deployment and a replica set to create that pool so it gets replenished when you remove function parts from it so",
    "start": "584360",
    "end": "590360"
  },
  {
    "text": "that we're ready for the next functions to be taken out of those those parts are",
    "start": "590360",
    "end": "596300"
  },
  {
    "text": "cached for a while even when there are no requests coming in for a few minutes and after a certain amount of time",
    "start": "596300",
    "end": "603410"
  },
  {
    "text": "that's when those pods are idle there killed so your resource usage goes back",
    "start": "603410",
    "end": "610580"
  },
  {
    "text": "down to what it was before you got these function calls okay so that's that's pretty much how efficient works there",
    "start": "610580",
    "end": "617420"
  },
  {
    "text": "are other components are actually watching kubernetes but this is the basic flow of HTTP requests and",
    "start": "617420",
    "end": "623029"
  },
  {
    "text": "functions so so let's move on to what",
    "start": "623029",
    "end": "628070"
  },
  {
    "text": "you can actually use this for we see sort of three use cases and such fast",
    "start": "628070",
    "end": "639829"
  },
  {
    "text": "frameworks are good for writing really small REST API s and Web books where",
    "start": "639829",
    "end": "646370"
  },
  {
    "text": "books are basically an API with one endpoint and they're also really useful for writing kubernetes watch event",
    "start": "646370",
    "end": "652940"
  },
  {
    "text": "handlers and we'll talk about that in a bit but kubernetes watches today require",
    "start": "652940",
    "end": "658700"
  },
  {
    "text": "you to use one of the client libraries and write a pretty significant amount of code to keep track of some sort of",
    "start": "658700",
    "end": "665779"
  },
  {
    "text": "kubernetes resource so you can do that pretty really efficient so let us move on to a",
    "start": "665779",
    "end": "671790"
  },
  {
    "text": "few demos we have gates to 10 so I'm",
    "start": "671790",
    "end": "681300"
  },
  {
    "text": "just up okay",
    "start": "681300",
    "end": "685430"
  },
  {
    "text": "all right so I have a kubernetes cluster here and it has three nodes this is",
    "start": "690680",
    "end": "704069"
  },
  {
    "text": "running on the gke EU region and we have",
    "start": "704069",
    "end": "709790"
  },
  {
    "text": "efficient services deployed already so you can see the router the booth manager",
    "start": "709790",
    "end": "715170"
  },
  {
    "text": "and the API server and fishing has a CLI",
    "start": "715170",
    "end": "722370"
  },
  {
    "text": "that's already mapped that's already configured to talk to this cluster so we",
    "start": "722370",
    "end": "730589"
  },
  {
    "text": "can look at the environment that already exists on this cluster so we have node and Python already set up but if they",
    "start": "730589",
    "end": "737310"
  },
  {
    "text": "aren't you could have created one with with this and you can just specify an",
    "start": "737310",
    "end": "743009"
  },
  {
    "text": "image so you could create the go environment with with that and you can",
    "start": "743009",
    "end": "748889"
  },
  {
    "text": "choose what environments you want in your deployment according to what languages you're actually using ok so let's create a simple hello world",
    "start": "748889",
    "end": "755910"
  },
  {
    "text": "function I'm going to I'm going to clear and go back to the top so we have",
    "start": "755910",
    "end": "763730"
  },
  {
    "text": "we have a really simple hello world and we will map it to will create a function",
    "start": "771460",
    "end": "776860"
  },
  {
    "text": "and map an HTTP route to that and see how long it takes to actually activate that function so we point this function",
    "start": "776860",
    "end": "790000"
  },
  {
    "text": "to the Python environment and okay and",
    "start": "790000",
    "end": "798550"
  },
  {
    "text": "now we create trigger for that function with a ship it out",
    "start": "798550",
    "end": "805259"
  },
  {
    "text": "at the type of looking backwards",
    "start": "814140",
    "end": "817850"
  },
  {
    "text": "okay so for this demo I'm just going to curl it so we created a function so far",
    "start": "820030",
    "end": "827800"
  },
  {
    "text": "just a second and nothing is running yet the function is just stored on fission",
    "start": "827800",
    "end": "833170"
  },
  {
    "text": "and root has been created the router is",
    "start": "833170",
    "end": "838720"
  },
  {
    "text": "exposed as a kubernetes service on this cluster with Google's load balancers so we can hit it directly using that IP",
    "start": "838720",
    "end": "846310"
  },
  {
    "text": "address so let me just do that",
    "start": "846310",
    "end": "852360"
  },
  {
    "text": "okay so the first one so you can see it's time okay when when you don't have",
    "start": "857360",
    "end": "870769"
  },
  {
    "text": "highly variables Wi-Fi Layton sees what you usually see it yeah what you usually",
    "start": "870769",
    "end": "880220"
  },
  {
    "text": "see is that the first one takes 100 or so milliseconds and the next one's takes",
    "start": "880220",
    "end": "885230"
  },
  {
    "text": "around tens of milliseconds depending on your real latency to wherever you've deployed session and the first one is",
    "start": "885230",
    "end": "891439"
  },
  {
    "text": "where the cold start overhead actually shows up and the subsequent requests are",
    "start": "891439",
    "end": "897319"
  },
  {
    "text": "really just fast routing to existing instances that as fast as talking to an odious or whatever server on a Python",
    "start": "897319",
    "end": "905089"
  },
  {
    "text": "server on on kubernetes you had it I can",
    "start": "905089",
    "end": "911600"
  },
  {
    "text": "take a couple of questions where I want to move on to that difference yeah yeah",
    "start": "911600",
    "end": "917378"
  },
  {
    "text": "right right right so there is a it calls so there's a specification there's a",
    "start": "918879",
    "end": "924919"
  },
  {
    "text": "interface that each language environment has are from that that efficient expects",
    "start": "924919",
    "end": "931970"
  },
  {
    "text": "and so for Python its main for node.js it's you know the main export of a",
    "start": "931970",
    "end": "938209"
  },
  {
    "text": "module and for forego it's the default HTTP handler and so on so whatever",
    "start": "938209",
    "end": "945769"
  },
  {
    "text": "idiomatic in each language yeah",
    "start": "945769",
    "end": "949988"
  },
  {
    "text": "the pool manager is a fishing service",
    "start": "954190",
    "end": "959270"
  },
  {
    "text": "and I asked him when the pool is created yeah the food is created when you do",
    "start": "959270",
    "end": "964310"
  },
  {
    "text": "fish in environment create it's also possible to lazily create the pool only",
    "start": "964310",
    "end": "969830"
  },
  {
    "text": "when you create a function that uses the environment we could do that as well",
    "start": "969830",
    "end": "974900"
  },
  {
    "text": "yeah node.js Python go c-sharp Java is",
    "start": "974900",
    "end": "984560"
  },
  {
    "text": "under development and I'm missing one PHP okay",
    "start": "984560",
    "end": "994490"
  },
  {
    "text": "so I want to show you we talked about heavyweight development processes and I",
    "start": "994490",
    "end": "999680"
  },
  {
    "text": "wanted to show you a little bit about how easy it is to change efficient function you wouldn't do this particular",
    "start": "999680",
    "end": "1006250"
  },
  {
    "text": "thing in production but you can just edit your function and it's just right",
    "start": "1006250",
    "end": "1019050"
  },
  {
    "text": "and it's easy as that but the point is",
    "start": "1019050",
    "end": "1025140"
  },
  {
    "text": "that even if you don't edit it in place you can you probably have those controls",
    "start": "1025140",
    "end": "1030569"
  },
  {
    "text": "and so on but you can very easily deploy new functions without going through the whole loop of building a container",
    "start": "1030570",
    "end": "1037410"
  },
  {
    "text": "uploading it to a registry finding a new version pulling the image and so on okay",
    "start": "1037410",
    "end": "1044459"
  },
  {
    "text": "so let's go to a slightly longer demo so",
    "start": "1044459",
    "end": "1052170"
  },
  {
    "text": "one benefit of running a fast on kubernetes as opposed to its own cluster",
    "start": "1052170",
    "end": "1058080"
  },
  {
    "text": "is that you can interoperate really well with other services on kubernetes that",
    "start": "1058080",
    "end": "1064320"
  },
  {
    "text": "don't necessarily fit the faz model very well right because any any non-trivial solution is going to have some some",
    "start": "1064320",
    "end": "1071400"
  },
  {
    "text": "kinds of services that fit well into the short-lived the you know deploy on-demand fast model",
    "start": "1071400",
    "end": "1077730"
  },
  {
    "text": "and some services was much better than their long-running such as Redis there's",
    "start": "1077730",
    "end": "1082740"
  },
  {
    "text": "no point in restarting Redis all the time because it really operates in memory so here we have a little",
    "start": "1082740",
    "end": "1088410"
  },
  {
    "text": "guestbook app that stores its state in Redis and as a couple of endpoints a",
    "start": "1088410",
    "end": "1093930"
  },
  {
    "text": "gate and a post method the get retrieves the guestbook from Redis and generates a",
    "start": "1093930",
    "end": "1099420"
  },
  {
    "text": "web page let's see if I can show you the code yeah okay",
    "start": "1099420",
    "end": "1107000"
  },
  {
    "text": "okay so that is two functions add and get and there's a redis yama which which",
    "start": "1111590",
    "end": "1118820"
  },
  {
    "text": "is a standard kubernetes deployment and service and there's a shell script that deploys all of them and the gate",
    "start": "1118820",
    "end": "1126769"
  },
  {
    "text": "function what it does is it grabs your connection to read is simply by name you can use a standard kubernetes service",
    "start": "1126769",
    "end": "1133070"
  },
  {
    "text": "discovery stuff reads the guesswork and outputs HTML since it's just a little",
    "start": "1133070",
    "end": "1138980"
  },
  {
    "text": "toy app we have it in line but obviously because we would do more complex things",
    "start": "1138980",
    "end": "1145639"
  },
  {
    "text": "when it says when it's a real app so let's deploy this on our fishing cluster I'm just going to run that deploy script",
    "start": "1145639",
    "end": "1152960"
  },
  {
    "text": "it creates Redis and it of sufficient to upload those two functions and it clears",
    "start": "1152960",
    "end": "1158749"
  },
  {
    "text": "it out for those functions",
    "start": "1158749",
    "end": "1162039"
  },
  {
    "text": "oh it worked okay so",
    "start": "1172050",
    "end": "1176690"
  },
  {
    "text": "right so we created get route for slash gas book and it goes to get forget and a",
    "start": "1181130",
    "end": "1187400"
  },
  {
    "text": "post route which goes to yes book ad and both of those doctors the same radius instance it's good to that",
    "start": "1187400",
    "end": "1197769"
  },
  {
    "text": "all right so so that's the guest and there's nothing inside the register right now since we just deployed it so",
    "start": "1202320",
    "end": "1210440"
  },
  {
    "text": "so you can add so that hit the add endpoint and when we first loaded this",
    "start": "1210440",
    "end": "1217020"
  },
  {
    "text": "guess when we first did that reload to see that page that's when the get function was first activated when I hit",
    "start": "1217020",
    "end": "1223530"
  },
  {
    "text": "the Add button is when the add function was first activated so they're fast enough that you can just that you can",
    "start": "1223530",
    "end": "1231510"
  },
  {
    "text": "build a REST API that a user can see and the user doesn't usually notice the cold start latency and so let's add things to",
    "start": "1231510",
    "end": "1240660"
  },
  {
    "text": "it and yeah it is accessible so feel",
    "start": "1240660",
    "end": "1249780"
  },
  {
    "text": "free so so that's good actually I was",
    "start": "1249780",
    "end": "1257460"
  },
  {
    "text": "going to open it in a different tab to show that it's not a client-side trick but it obviously isn't and all right so",
    "start": "1257460",
    "end": "1266000"
  },
  {
    "text": "the same story with changing the guest book you can change functions",
    "start": "1266000",
    "end": "1274340"
  },
  {
    "text": "okay and we can choose the",
    "start": "1277460",
    "end": "1283720"
  },
  {
    "text": "okay and hey I'm surprised at myself",
    "start": "1288910",
    "end": "1310390"
  },
  {
    "text": "that this didn't do it oh I call it skip okay well thanks for",
    "start": "1310390",
    "end": "1323800"
  },
  {
    "text": "the free pendant so that's the guestbook",
    "start": "1323800",
    "end": "1331330"
  },
  {
    "text": "I have one more demo we have eight minutes left actually",
    "start": "1331330",
    "end": "1336520"
  },
  {
    "text": "eight plus five thirteen minutes left okay so this demo is a little tricky so",
    "start": "1336520",
    "end": "1343480"
  },
  {
    "text": "I already have it deployed but I wanted to show let's see",
    "start": "1343480",
    "end": "1351090"
  },
  {
    "text": "okay I wanted to show the the feature where we can watch kubernetes event and",
    "start": "1352150",
    "end": "1357850"
  },
  {
    "text": "trigger functions from that so function",
    "start": "1357850",
    "end": "1363970"
  },
  {
    "text": "good so this is already deployed on the",
    "start": "1363970",
    "end": "1369690"
  },
  {
    "text": "cluster I think and you don't have to",
    "start": "1369690",
    "end": "1375280"
  },
  {
    "text": "understand all this code but basically this is the this is the interface that you get when you when you wire a",
    "start": "1375280",
    "end": "1381070"
  },
  {
    "text": "function to a kubernetes event we send the event an object type as headers and",
    "start": "1381070",
    "end": "1387580"
  },
  {
    "text": "we and the body of the request is a JSON serialization of the kubernetes objects that changed so you can get so you can",
    "start": "1387580",
    "end": "1394750"
  },
  {
    "text": "deserialize it and look at pod and service data in any language you want so",
    "start": "1394750",
    "end": "1400660"
  },
  {
    "text": "this one is obviously Python and what this does is it it summarizes the state of a pod it looks at the individual",
    "start": "1400660",
    "end": "1409120"
  },
  {
    "text": "container states and figures out whether they are running or waiting for an image and so on and it sends it to a little",
    "start": "1409120",
    "end": "1417370"
  },
  {
    "text": "server that I have running here that that then sends servers and events to this webpage so the idea is to watch to",
    "start": "1417370",
    "end": "1424570"
  },
  {
    "text": "be able to watch pods from a web page so I have no idea if this will work",
    "start": "1424570",
    "end": "1434970"
  },
  {
    "text": "so we have some existing pods and so oh",
    "start": "1437110",
    "end": "1444910"
  },
  {
    "text": "so that pod watcher function that is a size map to look at all pods in the",
    "start": "1445630",
    "end": "1452150"
  },
  {
    "text": "default namespace and call the pod water function so you can just efficient watch create to create such watches that one's",
    "start": "1452150",
    "end": "1460940"
  },
  {
    "text": "already there so let's actually make some part so that the thing will get",
    "start": "1460940",
    "end": "1468230"
  },
  {
    "text": "activated oh yeah okay",
    "start": "1468230",
    "end": "1483260"
  },
  {
    "text": "well that creates a deployment which creates Arabic sir two states apart and",
    "start": "1483260",
    "end": "1489010"
  },
  {
    "text": "a lever pretty fast so so this thing got",
    "start": "1489010",
    "end": "1494179"
  },
  {
    "text": "that event and drew that thing that's supposed to represent a running part so",
    "start": "1494179",
    "end": "1501230"
  },
  {
    "text": "let's hear some more",
    "start": "1501230",
    "end": "1504040"
  },
  {
    "text": "alert so the first state is container creating and then they change to running",
    "start": "1511370",
    "end": "1516920"
  },
  {
    "text": "pods their container creating the new and then they become running parts and",
    "start": "1516920",
    "end": "1522410"
  },
  {
    "text": "then we can let's see you can delete the",
    "start": "1522410",
    "end": "1527930"
  },
  {
    "text": "deployment so obviously this is a sort",
    "start": "1527930",
    "end": "1536390"
  },
  {
    "text": "of silly controller but you can write the real behavior like I heard of a user",
    "start": "1536390",
    "end": "1542570"
  },
  {
    "text": "who was using this to watch services and wire them up to their internal load",
    "start": "1542570",
    "end": "1548780"
  },
  {
    "text": "balancer using f5 or something and any time a service with a certain annotation",
    "start": "1548780",
    "end": "1554210"
  },
  {
    "text": "was created they would call into their load balancer API and create some sort",
    "start": "1554210",
    "end": "1559460"
  },
  {
    "text": "of entry for that service so normally you do that by adding a specific controller maybe an ingress controller",
    "start": "1559460",
    "end": "1566170"
  },
  {
    "text": "but it's really easy to just write a function especially in in one of these languages that you may be more familiar",
    "start": "1566170",
    "end": "1572480"
  },
  {
    "text": "with so that's it for my demos I can talk a little bit about the project",
    "start": "1572480",
    "end": "1579620"
  },
  {
    "text": "status and roadmap and then we have time for some questions so",
    "start": "1579620",
    "end": "1587500"
  },
  {
    "text": "it's back let's try this well",
    "start": "1590889",
    "end": "1597720"
  },
  {
    "text": "it's kind of",
    "start": "1597720",
    "end": "1600620"
  },
  {
    "text": "well okay",
    "start": "1603610",
    "end": "1607090"
  },
  {
    "text": "well maybe I'll just turn my laptop screen around and make the font really big",
    "start": "1614000",
    "end": "1621919"
  },
  {
    "text": "she's like one slide left well I give up",
    "start": "1624170",
    "end": "1631670"
  },
  {
    "text": "we we open sourced at the last cube con in Seattle in November 2016",
    "start": "1631670",
    "end": "1640080"
  },
  {
    "text": "since then we've got decent traction the 1,600 github stars for what that's worth",
    "start": "1640080",
    "end": "1647690"
  },
  {
    "text": "there's a we're in early alpha we intend to beta around mid to late this year",
    "start": "1647690",
    "end": "1655970"
  },
  {
    "text": "there's a bunch of things we need to do despite it works well for for the demos",
    "start": "1655970",
    "end": "1664020"
  },
  {
    "text": "but we have when you're doing functions as a service you need better observability and things like that",
    "start": "1664020",
    "end": "1670200"
  },
  {
    "text": "because you're actually creating in destroying pods so we recently added log",
    "start": "1670200",
    "end": "1675270"
  },
  {
    "text": "aggregation built in so we create fluent D for each as a daemon set and pipe the",
    "start": "1675270",
    "end": "1682890"
  },
  {
    "text": "logs to whatever log aggregation thing you're using and if you aren't then we can use influx dB",
    "start": "1682890",
    "end": "1691040"
  },
  {
    "text": "so there's various improvements that that are coming to sort of improve the development and operations workflows and",
    "start": "1695110",
    "end": "1705600"
  },
  {
    "text": "there's so that should be mid to late this year that's one thing and the",
    "start": "1705600",
    "end": "1714989"
  },
  {
    "text": "community has contributed a lot the go c-sharp PHP and Java support all",
    "start": "1714989",
    "end": "1720669"
  },
  {
    "text": "came from the community there's a web UI being developed and lots of bug fixes so",
    "start": "1720669",
    "end": "1726629"
  },
  {
    "text": "thanks to the people who did this if any of you are here thank you",
    "start": "1726629",
    "end": "1731669"
  },
  {
    "text": "it's a bunch of stuff on our roadmap we're improving the power of environment",
    "start": "1731669",
    "end": "1736690"
  },
  {
    "text": "here today only can do single files so we're adding packages compilation",
    "start": "1736690",
    "end": "1743169"
  },
  {
    "text": "because today even though we support go you have to build it on your own machine and upload a plugin we're integrating",
    "start": "1743169",
    "end": "1749799"
  },
  {
    "text": "with one or more event queues there's a whole bunch of work around the API and",
    "start": "1749799",
    "end": "1757600"
  },
  {
    "text": "you know I have I'll dive into it more their documentation on the on the github",
    "start": "1757600",
    "end": "1762609"
  },
  {
    "text": "repository we're adding metrics tracing support for other kubernetes primitives",
    "start": "1762609",
    "end": "1767859"
  },
  {
    "text": "volume secrets config maps and so on so on to stop and not go into too much",
    "start": "1767859",
    "end": "1775419"
  },
  {
    "text": "detail there we're fully open source there's no there's no closed source component here we're on github there's a",
    "start": "1775419",
    "end": "1782080"
  },
  {
    "text": "website and come talk to us on slack and check us out on Twitter and have we have",
    "start": "1782080",
    "end": "1788080"
  },
  {
    "text": "five minutes for questions so let's go from here and then I did talk to",
    "start": "1788080",
    "end": "1799119"
  },
  {
    "text": "Sebastian yeah I hope we can work together you know I don't know how there",
    "start": "1799119",
    "end": "1805539"
  },
  {
    "text": "you go it's early it is for everything in service I think yeah I think people",
    "start": "1805539",
    "end": "1811629"
  },
  {
    "text": "who attended both talks maybe you can write a blog post and help people that hurt compared but yes",
    "start": "1811629",
    "end": "1820450"
  },
  {
    "text": "someone here okay yeah so today is",
    "start": "1820450",
    "end": "1826729"
  },
  {
    "text": "stored on a persistent volume the API server just directly talks to that we're working on splitting that out into a",
    "start": "1826729",
    "end": "1832909"
  },
  {
    "text": "separate storage service which will have pluggable backends like a tree and all that yeah today you have to rebuild the",
    "start": "1832909",
    "end": "1843229"
  },
  {
    "text": "environment image so with each environment we have a readme that says here's how you add dependencies for the",
    "start": "1843229",
    "end": "1848359"
  },
  {
    "text": "Python environment you you edit a requirement txt and rebuild the docker image we're also working on automating",
    "start": "1848359",
    "end": "1855409"
  },
  {
    "text": "that and packaging dependencies with the function itself so you'll be able to",
    "start": "1855409",
    "end": "1860840"
  },
  {
    "text": "upload a zip file and things like that now you want to get one today we don't",
    "start": "1860840",
    "end": "1876409"
  },
  {
    "text": "have any kind of first-class fission function call that the function itself",
    "start": "1876409",
    "end": "1881479"
  },
  {
    "text": "can do but you can hit the HTTP endpoint of the router",
    "start": "1881479",
    "end": "1887440"
  },
  {
    "text": "that's an interesting use case I know we nobody's asked for that yet but yeah I",
    "start": "1896880",
    "end": "1904140"
  },
  {
    "text": "see what you're saying no it's something we could add if you're you know it is interesting hey you",
    "start": "1904140",
    "end": "1911460"
  },
  {
    "text": "already sorry let me take question something yes it would be easier to talk",
    "start": "1911460",
    "end": "1927060"
  },
  {
    "text": "to the router than to replace it but you could rewrite the router each of those",
    "start": "1927060",
    "end": "1932730"
  },
  {
    "text": "um if you go back to that picture the the router calls the efficient API and",
    "start": "1932730",
    "end": "1937740"
  },
  {
    "text": "the and the pools managers internal API so you could duplicate that but the way",
    "start": "1937740",
    "end": "1944490"
  },
  {
    "text": "we did the kubernetes events for example is to just write a separate service that watches kubernetes events and feeds them",
    "start": "1944490",
    "end": "1950730"
  },
  {
    "text": "to the router so it's easier to just feed the router we are also adding message queue support so that will make",
    "start": "1950730",
    "end": "1956970"
  },
  {
    "text": "it easier to just send events into a queue and then that's that will be more",
    "start": "1956970",
    "end": "1962010"
  },
  {
    "text": "generic today the user has to compile",
    "start": "1962010",
    "end": "1969720"
  },
  {
    "text": "them so we give the user a container that they can use to compile or you can just compile it locally and forgo views",
    "start": "1969720",
    "end": "1977010"
  },
  {
    "text": "plug in a Java visa jar file those are the two compiled and yes",
    "start": "1977010",
    "end": "1987020"
  },
  {
    "text": "yeah yeah that's a tricky one because so",
    "start": "1991729",
    "end": "2000970"
  },
  {
    "text": "today we don't there's a kubernetes feature in very early stages called",
    "start": "2000970",
    "end": "2008269"
  },
  {
    "text": "vertical part scaling where you can change the limit of a CPU and of CPU and",
    "start": "2008269",
    "end": "2014809"
  },
  {
    "text": "memory so it's hard to it's hard to increase the memory requests or CPU",
    "start": "2014809",
    "end": "2020869"
  },
  {
    "text": "requests of a running board but you could always reduce it so a function could carry a CPU and memory limit and",
    "start": "2020869",
    "end": "2027970"
  },
  {
    "text": "the environment parts could could be run with higher limits or without them and",
    "start": "2027970",
    "end": "2034249"
  },
  {
    "text": "the and as soon as the function is scheduled into those parts we could tighten that limit so this your question",
    "start": "2034249",
    "end": "2041779"
  },
  {
    "text": "goes into a more general question of the way we're using parts we're dropping",
    "start": "2041779",
    "end": "2047119"
  },
  {
    "text": "functions into them and in some sense we're changing water part is after it's run so there's various things that that",
    "start": "2047119",
    "end": "2056898"
  },
  {
    "text": "we might have to try and make more dynamic and we're sort of in touch with",
    "start": "2056899",
    "end": "2062990"
  },
  {
    "text": "kubernetes community and will will talk to various things about you know say",
    "start": "2062990",
    "end": "2069290"
  },
  {
    "text": "volumes for example today you can't mount a volume in a running part you have to restart that part so for us",
    "start": "2069290",
    "end": "2076099"
  },
  {
    "text": "options are you can just you can have the volume already mounted but then what",
    "start": "2076099",
    "end": "2082669"
  },
  {
    "text": "happens to volumes that can only be mounted in one place and so on so our volume support is not very good so",
    "start": "2082669",
    "end": "2088309"
  },
  {
    "text": "that's on our roadmap to it so the long answer",
    "start": "2088309",
    "end": "2093490"
  },
  {
    "text": "did it authorization yeah so again more",
    "start": "2096980",
    "end": "2102710"
  },
  {
    "text": "generally the question is how to do more complex API gateway stuff and you mean",
    "start": "2102710",
    "end": "2109490"
  },
  {
    "text": "for the functions right so the users functions right so we want to be able to integrate with existing API gateways",
    "start": "2109490",
    "end": "2116299"
  },
  {
    "text": "either using kubernetes ingress or by talking to their API s so there's",
    "start": "2116299",
    "end": "2121309"
  },
  {
    "text": "traffic and song and things like that so we're working on this thing where you",
    "start": "2121309",
    "end": "2127250"
  },
  {
    "text": "can add a you can create an ingress resource when a function route or when a",
    "start": "2127250",
    "end": "2132890"
  },
  {
    "text": "function is created and you can map that to the function and then your interest controller can support things like that",
    "start": "2132890",
    "end": "2141160"
  },
  {
    "text": "and if there are no other questions thanks very much for coming",
    "start": "2141160",
    "end": "2147400"
  },
  {
    "text": "[Applause]",
    "start": "2148360",
    "end": "2150749"
  }
]