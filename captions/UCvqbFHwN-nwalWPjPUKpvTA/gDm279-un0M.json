[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "um good morning i'm aditi and today i",
    "start": "320",
    "end": "3199"
  },
  {
    "text": "will be talking about with getting",
    "start": "3199",
    "end": "5120"
  },
  {
    "text": "started",
    "start": "5120",
    "end": "6560"
  },
  {
    "text": "about getting started with prometheus",
    "start": "6560",
    "end": "8160"
  },
  {
    "text": "instrumentation from the ground up",
    "start": "8160",
    "end": "10639"
  },
  {
    "text": "if you're a beginner looking to",
    "start": "10639",
    "end": "12240"
  },
  {
    "text": "instrument your application to tap into",
    "start": "12240",
    "end": "14320"
  },
  {
    "text": "prometheus this one's for you",
    "start": "14320",
    "end": "17920"
  },
  {
    "start": "17000",
    "end": "36000"
  },
  {
    "text": "so a little bit about me i am",
    "start": "18000",
    "end": "20720"
  },
  {
    "text": "i was in lfx",
    "start": "20720",
    "end": "22320"
  },
  {
    "text": "mentee last fall at the thanos project",
    "start": "22320",
    "end": "24560"
  },
  {
    "text": "and i'm currently an intern at couch",
    "start": "24560",
    "end": "26640"
  },
  {
    "text": "pace",
    "start": "26640",
    "end": "27760"
  },
  {
    "text": "i'm from bangalore india and my",
    "start": "27760",
    "end": "30320"
  },
  {
    "text": "interests include distributed systems",
    "start": "30320",
    "end": "32480"
  },
  {
    "text": "and databases you can find me on those",
    "start": "32480",
    "end": "35120"
  },
  {
    "text": "links",
    "start": "35120",
    "end": "37440"
  },
  {
    "start": "36000",
    "end": "65000"
  },
  {
    "text": "broadly this stock is meant to be a",
    "start": "38480",
    "end": "41040"
  },
  {
    "text": "practical introduction to instrumenting",
    "start": "41040",
    "end": "43120"
  },
  {
    "text": "applications",
    "start": "43120",
    "end": "44559"
  },
  {
    "text": "ideal for beginners",
    "start": "44559",
    "end": "46480"
  },
  {
    "text": "that means quite a bit of code and focus",
    "start": "46480",
    "end": "48640"
  },
  {
    "text": "on implementation",
    "start": "48640",
    "end": "50559"
  },
  {
    "text": "i will be talking",
    "start": "50559",
    "end": "52160"
  },
  {
    "text": "with the respective specifics of client",
    "start": "52160",
    "end": "54320"
  },
  {
    "text": "golang but the broad principles should",
    "start": "54320",
    "end": "56879"
  },
  {
    "text": "be language agnostic",
    "start": "56879",
    "end": "60239"
  },
  {
    "text": "so let's start setting the stage with a",
    "start": "60719",
    "end": "62640"
  },
  {
    "text": "very brief look into the prometheus",
    "start": "62640",
    "end": "64320"
  },
  {
    "text": "model",
    "start": "64320",
    "end": "66640"
  },
  {
    "start": "65000",
    "end": "108000"
  },
  {
    "text": "prometheus uses a pull approach where it",
    "start": "66640",
    "end": "69920"
  },
  {
    "text": "actively scrapes or extracts metrics",
    "start": "69920",
    "end": "72400"
  },
  {
    "text": "from an end point exposing them in a",
    "start": "72400",
    "end": "74640"
  },
  {
    "text": "compatible format at regular scrape and",
    "start": "74640",
    "end": "77280"
  },
  {
    "text": "towels",
    "start": "77280",
    "end": "78960"
  },
  {
    "text": "to harness prometheus for metric",
    "start": "78960",
    "end": "81280"
  },
  {
    "text": "observable observability for our",
    "start": "81280",
    "end": "83280"
  },
  {
    "text": "applications one of the ways is to",
    "start": "83280",
    "end": "85759"
  },
  {
    "text": "expose metrics over an end point",
    "start": "85759",
    "end": "87600"
  },
  {
    "text": "accessible to prom from where they are",
    "start": "87600",
    "end": "89840"
  },
  {
    "text": "then pulled",
    "start": "89840",
    "end": "91520"
  },
  {
    "text": "in an application developed in go um",
    "start": "91520",
    "end": "93920"
  },
  {
    "text": "this can be done in client golang as you",
    "start": "93920",
    "end": "96880"
  },
  {
    "text": "all know",
    "start": "96880",
    "end": "98320"
  },
  {
    "text": "so today i will be discussing client",
    "start": "98320",
    "end": "100479"
  },
  {
    "text": "golang with an example application and",
    "start": "100479",
    "end": "102720"
  },
  {
    "text": "then drawing on my mentorship experience",
    "start": "102720",
    "end": "105280"
  },
  {
    "text": "from last fall",
    "start": "105280",
    "end": "108720"
  },
  {
    "start": "108000",
    "end": "137000"
  },
  {
    "text": "so instrumentation involves thinking",
    "start": "109759",
    "end": "112240"
  },
  {
    "text": "about how to integrate prometheus in",
    "start": "112240",
    "end": "114560"
  },
  {
    "text": "your code base ground up",
    "start": "114560",
    "end": "117360"
  },
  {
    "text": "this is different from an exporter which",
    "start": "117360",
    "end": "119600"
  },
  {
    "text": "you may have heard which i am sure you",
    "start": "119600",
    "end": "121520"
  },
  {
    "text": "have heard of where existing exported",
    "start": "121520",
    "end": "124159"
  },
  {
    "text": "metrics are converted to a compatible",
    "start": "124159",
    "end": "126159"
  },
  {
    "text": "format and exposed over an end point",
    "start": "126159",
    "end": "129280"
  },
  {
    "text": "so an exporter is like an intermediary",
    "start": "129280",
    "end": "132080"
  },
  {
    "text": "of sorts whereas instrumentation works",
    "start": "132080",
    "end": "134560"
  },
  {
    "text": "at the code level",
    "start": "134560",
    "end": "137360"
  },
  {
    "start": "137000",
    "end": "160000"
  },
  {
    "text": "briefly",
    "start": "137760",
    "end": "138959"
  },
  {
    "text": "instrumenting code could be walked",
    "start": "138959",
    "end": "140720"
  },
  {
    "text": "through a four stage process defined by",
    "start": "140720",
    "end": "143360"
  },
  {
    "text": "the questions",
    "start": "143360",
    "end": "145040"
  },
  {
    "text": "what should i instrument also covering",
    "start": "145040",
    "end": "147200"
  },
  {
    "text": "the y",
    "start": "147200",
    "end": "148400"
  },
  {
    "text": "how do i get the data for it",
    "start": "148400",
    "end": "150480"
  },
  {
    "text": "how do i organize it that is what types",
    "start": "150480",
    "end": "152959"
  },
  {
    "text": "of metrics represent this data the best",
    "start": "152959",
    "end": "156160"
  },
  {
    "text": "and finally the implementation the nuts",
    "start": "156160",
    "end": "158400"
  },
  {
    "text": "and bolts",
    "start": "158400",
    "end": "160959"
  },
  {
    "text": "to set the context for one of the",
    "start": "161200",
    "end": "162959"
  },
  {
    "text": "examples thanos is a metric data store",
    "start": "162959",
    "end": "166000"
  },
  {
    "text": "extending the long term storage",
    "start": "166000",
    "end": "168000"
  },
  {
    "text": "capabilities of prometheus",
    "start": "168000",
    "end": "170879"
  },
  {
    "text": "so taking the example of some",
    "start": "170879",
    "end": "173519"
  },
  {
    "text": "common thanos processes compaction down",
    "start": "173519",
    "end": "176400"
  },
  {
    "text": "sampling and retention",
    "start": "176400",
    "end": "178720"
  },
  {
    "text": "these are each multi-stage processes",
    "start": "178720",
    "end": "180800"
  },
  {
    "text": "which can take varying amounts of time",
    "start": "180800",
    "end": "183200"
  },
  {
    "text": "based on the data to be processed",
    "start": "183200",
    "end": "186080"
  },
  {
    "text": "these lagged observability and hence",
    "start": "186080",
    "end": "189040"
  },
  {
    "text": "these were the perfect candidates to",
    "start": "189040",
    "end": "190959"
  },
  {
    "text": "instrument to gather observable metrics",
    "start": "190959",
    "end": "193519"
  },
  {
    "text": "that was the focus of my project during",
    "start": "193519",
    "end": "195840"
  },
  {
    "text": "my mentorship",
    "start": "195840",
    "end": "198560"
  },
  {
    "text": "so looking at some terms",
    "start": "198560",
    "end": "201280"
  },
  {
    "start": "200000",
    "end": "314000"
  },
  {
    "text": "um metrics um this is a fairly common",
    "start": "201280",
    "end": "204640"
  },
  {
    "text": "term but just reiterating",
    "start": "204640",
    "end": "206799"
  },
  {
    "text": "so each time series has a unique",
    "start": "206799",
    "end": "208720"
  },
  {
    "text": "identifier ideally providing some idea",
    "start": "208720",
    "end": "210879"
  },
  {
    "text": "about its function called a metric name",
    "start": "210879",
    "end": "214000"
  },
  {
    "text": "labels are key value pairs along with",
    "start": "214000",
    "end": "216319"
  },
  {
    "text": "the metric name which uniquely identify",
    "start": "216319",
    "end": "218799"
  },
  {
    "text": "a time series these show metrics in",
    "start": "218799",
    "end": "221840"
  },
  {
    "text": "another dimension",
    "start": "221840",
    "end": "223599"
  },
  {
    "text": "that is the help identify metrics by the",
    "start": "223599",
    "end": "226319"
  },
  {
    "text": "attributes represented by those very",
    "start": "226319",
    "end": "228640"
  },
  {
    "text": "labels",
    "start": "228640",
    "end": "231040"
  },
  {
    "text": "so quickly the four metric types are",
    "start": "231680",
    "end": "233760"
  },
  {
    "text": "counters these are used for continually",
    "start": "233760",
    "end": "235760"
  },
  {
    "text": "increasing values most commonly used",
    "start": "235760",
    "end": "238080"
  },
  {
    "text": "with rate to find the rate of",
    "start": "238080",
    "end": "240400"
  },
  {
    "text": "increase per second",
    "start": "240400",
    "end": "242720"
  },
  {
    "text": "gauges",
    "start": "242720",
    "end": "244000"
  },
  {
    "text": "in contrast to counters these are used",
    "start": "244000",
    "end": "246080"
  },
  {
    "text": "when the values can go in either",
    "start": "246080",
    "end": "247439"
  },
  {
    "text": "direction increasing or decreasing and",
    "start": "247439",
    "end": "250480"
  },
  {
    "text": "these can be used to compare snapshots",
    "start": "250480",
    "end": "252560"
  },
  {
    "text": "of the metrics at certain intervals",
    "start": "252560",
    "end": "255680"
  },
  {
    "text": "counters can be set to answer the",
    "start": "255680",
    "end": "257199"
  },
  {
    "text": "question how often since they're mostly",
    "start": "257199",
    "end": "259680"
  },
  {
    "text": "used in getting the rate of increase",
    "start": "259680",
    "end": "262800"
  },
  {
    "text": "and",
    "start": "262800",
    "end": "264400"
  },
  {
    "text": "gauges can also be reset to zero on",
    "start": "264400",
    "end": "266160"
  },
  {
    "text": "demand unlike counters where that",
    "start": "266160",
    "end": "267919"
  },
  {
    "text": "happens only on restart",
    "start": "267919",
    "end": "270560"
  },
  {
    "text": "histograms these sample observations",
    "start": "270560",
    "end": "273280"
  },
  {
    "text": "based on frequency and slot these into",
    "start": "273280",
    "end": "275840"
  },
  {
    "text": "specified buckets",
    "start": "275840",
    "end": "277680"
  },
  {
    "text": "each of these buckets is a unique time",
    "start": "277680",
    "end": "279680"
  },
  {
    "text": "series and holds a counter which",
    "start": "279680",
    "end": "281280"
  },
  {
    "text": "contains the count of attributes in that",
    "start": "281280",
    "end": "283199"
  },
  {
    "text": "bucket plus all of the preceding buckets",
    "start": "283199",
    "end": "287680"
  },
  {
    "text": "summaries these two track distributions",
    "start": "287680",
    "end": "290320"
  },
  {
    "text": "but in contrast to histograms these",
    "start": "290320",
    "end": "293600"
  },
  {
    "text": "expose quantile values directly",
    "start": "293600",
    "end": "296800"
  },
  {
    "text": "and",
    "start": "296800",
    "end": "297759"
  },
  {
    "text": "each of these four can also be organized",
    "start": "297759",
    "end": "300320"
  },
  {
    "text": "into vectors",
    "start": "300320",
    "end": "303039"
  },
  {
    "text": "on the top left is a counter and on the",
    "start": "303280",
    "end": "305919"
  },
  {
    "text": "bottom right is a gauge",
    "start": "305919",
    "end": "309039"
  },
  {
    "text": "this is another default gometric a",
    "start": "309120",
    "end": "311360"
  },
  {
    "text": "histogram and a summary",
    "start": "311360",
    "end": "315120"
  },
  {
    "start": "314000",
    "end": "375000"
  },
  {
    "text": "so let's apply what we just",
    "start": "315440",
    "end": "317600"
  },
  {
    "text": "looked at to a practical example",
    "start": "317600",
    "end": "320400"
  },
  {
    "text": "how did i get the metrics data for my",
    "start": "320400",
    "end": "322240"
  },
  {
    "text": "thanos project",
    "start": "322240",
    "end": "324400"
  },
  {
    "text": "an estimate about the number of data",
    "start": "324400",
    "end": "326479"
  },
  {
    "text": "blocks to be compacted or down sampled",
    "start": "326479",
    "end": "328720"
  },
  {
    "text": "or processed in any form would be a",
    "start": "328720",
    "end": "330800"
  },
  {
    "text": "pretty good proxy for the estimate for",
    "start": "330800",
    "end": "334000"
  },
  {
    "text": "each processes estimate",
    "start": "334000",
    "end": "336479"
  },
  {
    "text": "since the metrics chosen for these",
    "start": "336479",
    "end": "338160"
  },
  {
    "text": "process that is the number of runs or",
    "start": "338160",
    "end": "340160"
  },
  {
    "text": "the blocks to be processed can be",
    "start": "340160",
    "end": "342000"
  },
  {
    "text": "computed when supplied with the data",
    "start": "342000",
    "end": "344400"
  },
  {
    "text": "without actually running the process",
    "start": "344400",
    "end": "346960"
  },
  {
    "text": "simulating them provides the needed",
    "start": "346960",
    "end": "348800"
  },
  {
    "text": "metric data",
    "start": "348800",
    "end": "350960"
  },
  {
    "text": "for example this is the down sampling",
    "start": "350960",
    "end": "353280"
  },
  {
    "text": "process",
    "start": "353280",
    "end": "354800"
  },
  {
    "text": "to simulate this and get the number of",
    "start": "354800",
    "end": "357120"
  },
  {
    "text": "blocks to be down sampled",
    "start": "357120",
    "end": "359039"
  },
  {
    "text": "all i needed to do was follow the course",
    "start": "359039",
    "end": "360960"
  },
  {
    "text": "and filter out any steps not involved in",
    "start": "360960",
    "end": "363520"
  },
  {
    "text": "the decision making",
    "start": "363520",
    "end": "365759"
  },
  {
    "text": "i segregated blocks based on the",
    "start": "365759",
    "end": "367680"
  },
  {
    "text": "resolution time a resolution level",
    "start": "367680",
    "end": "370000"
  },
  {
    "text": "indicating how sparse the final down",
    "start": "370000",
    "end": "372319"
  },
  {
    "text": "sample data was to be",
    "start": "372319",
    "end": "375600"
  },
  {
    "start": "375000",
    "end": "395000"
  },
  {
    "text": "then part 2 to get the number of blocks",
    "start": "376639",
    "end": "379520"
  },
  {
    "text": "to be downsampled from that i proceeded",
    "start": "379520",
    "end": "382160"
  },
  {
    "text": "to further filter them",
    "start": "382160",
    "end": "384080"
  },
  {
    "text": "based on whether there are already",
    "start": "384080",
    "end": "385840"
  },
  {
    "text": "existing source blocks with the same",
    "start": "385840",
    "end": "387759"
  },
  {
    "text": "resolution and if the time difference",
    "start": "387759",
    "end": "390800"
  },
  {
    "text": "of the block data was above a certain",
    "start": "390800",
    "end": "392880"
  },
  {
    "text": "threshold",
    "start": "392880",
    "end": "395840"
  },
  {
    "start": "395000",
    "end": "474000"
  },
  {
    "text": "in the thanos processes the data was",
    "start": "396720",
    "end": "399120"
  },
  {
    "text": "segregated into groups based on the",
    "start": "399120",
    "end": "400960"
  },
  {
    "text": "minimum time and each of these were",
    "start": "400960",
    "end": "402720"
  },
  {
    "text": "computed per group",
    "start": "402720",
    "end": "404479"
  },
  {
    "text": "so coming to my thought process in on",
    "start": "404479",
    "end": "406479"
  },
  {
    "text": "how i picked the matrix metric types to",
    "start": "406479",
    "end": "408960"
  },
  {
    "text": "represent these",
    "start": "408960",
    "end": "410960"
  },
  {
    "text": "since these values could increase or",
    "start": "410960",
    "end": "412880"
  },
  {
    "text": "decrease and would need to be reset like",
    "start": "412880",
    "end": "415120"
  },
  {
    "text": "i discussed earlier i went with gauges",
    "start": "415120",
    "end": "417919"
  },
  {
    "text": "and since each group required a separate",
    "start": "417919",
    "end": "420240"
  },
  {
    "text": "identifiable value i used gauge vectors",
    "start": "420240",
    "end": "422880"
  },
  {
    "text": "labeled with the group ids",
    "start": "422880",
    "end": "425840"
  },
  {
    "text": "the number of blocks to be down sampled",
    "start": "425840",
    "end": "428080"
  },
  {
    "text": "was divided based on group keys which",
    "start": "428080",
    "end": "430639"
  },
  {
    "text": "are unique to each group",
    "start": "430639",
    "end": "433440"
  },
  {
    "text": "i have an intermediate map group blocks",
    "start": "433440",
    "end": "435599"
  },
  {
    "text": "which you can see in the snippet",
    "start": "435599",
    "end": "437599"
  },
  {
    "text": "where i store the results for each group",
    "start": "437599",
    "end": "440479"
  },
  {
    "text": "and",
    "start": "440479",
    "end": "441360"
  },
  {
    "text": "this is how its",
    "start": "441360",
    "end": "443360"
  },
  {
    "text": "update a gauge is updated in client",
    "start": "443360",
    "end": "445120"
  },
  {
    "text": "golang and after all the blocks have",
    "start": "445120",
    "end": "447120"
  },
  {
    "text": "been processed i reset it to zero the",
    "start": "447120",
    "end": "449520"
  },
  {
    "text": "first line of the snippet and",
    "start": "449520",
    "end": "451919"
  },
  {
    "text": "each group key becomes a label",
    "start": "451919",
    "end": "454319"
  },
  {
    "text": "for each group i then increased the",
    "start": "454319",
    "end": "456639"
  },
  {
    "text": "value by the number of blocks for that",
    "start": "456639",
    "end": "458479"
  },
  {
    "text": "group",
    "start": "458479",
    "end": "460000"
  },
  {
    "text": "so this was a quick peek into how i",
    "start": "460000",
    "end": "461840"
  },
  {
    "text": "gathered the data and implemented",
    "start": "461840",
    "end": "464000"
  },
  {
    "text": "instrumentation for one of the processes",
    "start": "464000",
    "end": "466800"
  },
  {
    "text": "for compaction and retention of data i",
    "start": "466800",
    "end": "469759"
  },
  {
    "text": "followed a similar thought process",
    "start": "469759",
    "end": "473280"
  },
  {
    "text": "so the first example of seeing",
    "start": "475840",
    "end": "477680"
  },
  {
    "text": "exposition to prom via http is exposing",
    "start": "477680",
    "end": "480800"
  },
  {
    "text": "the default",
    "start": "480800",
    "end": "482160"
  },
  {
    "text": "metrics on an endpoint",
    "start": "482160",
    "end": "484560"
  },
  {
    "text": "so i'm using the prom http package here",
    "start": "484560",
    "end": "486879"
  },
  {
    "text": "and",
    "start": "486879",
    "end": "487759"
  },
  {
    "text": "these are accessed via the specified",
    "start": "487759",
    "end": "489759"
  },
  {
    "text": "port",
    "start": "489759",
    "end": "491840"
  },
  {
    "text": "and the handler function here is the",
    "start": "491840",
    "end": "493680"
  },
  {
    "text": "default way of exposing these via an",
    "start": "493680",
    "end": "495840"
  },
  {
    "text": "endpoint",
    "start": "495840",
    "end": "498160"
  },
  {
    "text": "the default prom config yaml supports",
    "start": "498160",
    "end": "500479"
  },
  {
    "text": "this and um it's it the scrape config",
    "start": "500479",
    "end": "503520"
  },
  {
    "text": "scrapes port 9090 every 15 seconds as",
    "start": "503520",
    "end": "506960"
  },
  {
    "text": "i'm sure you'll know",
    "start": "506960",
    "end": "509440"
  },
  {
    "text": "the code on the top right serves these",
    "start": "509440",
    "end": "511599"
  },
  {
    "text": "metrics on on the custom port on the",
    "start": "511599",
    "end": "514159"
  },
  {
    "text": "custom endpoint and i have added a job",
    "start": "514159",
    "end": "517440"
  },
  {
    "text": "to the",
    "start": "517440",
    "end": "518560"
  },
  {
    "text": "config just below it",
    "start": "518560",
    "end": "521039"
  },
  {
    "text": "and uh having all of these default",
    "start": "521039",
    "end": "522959"
  },
  {
    "text": "metrics in the default registry is",
    "start": "522959",
    "end": "524880"
  },
  {
    "text": "actually an anti-pattern and should be",
    "start": "524880",
    "end": "527040"
  },
  {
    "text": "and will be removed in the next version",
    "start": "527040",
    "end": "529120"
  },
  {
    "text": "of the client",
    "start": "529120",
    "end": "532000"
  },
  {
    "text": "this can be extended to support",
    "start": "532640",
    "end": "534480"
  },
  {
    "text": "exposition from custom applications in a",
    "start": "534480",
    "end": "536640"
  },
  {
    "text": "similar manner",
    "start": "536640",
    "end": "538240"
  },
  {
    "text": "so i will start off with a quick example",
    "start": "538240",
    "end": "540160"
  },
  {
    "text": "using basic weather data for cities and",
    "start": "540160",
    "end": "542320"
  },
  {
    "text": "then move on to a more involved example",
    "start": "542320",
    "end": "545839"
  },
  {
    "text": "in this example every two seconds i get",
    "start": "545839",
    "end": "548399"
  },
  {
    "text": "temperature data for a city",
    "start": "548399",
    "end": "550640"
  },
  {
    "text": "and that's a gauge vector with labels",
    "start": "550640",
    "end": "552800"
  },
  {
    "text": "for the city which i update based on",
    "start": "552800",
    "end": "555279"
  },
  {
    "text": "values only for that city",
    "start": "555279",
    "end": "558160"
  },
  {
    "text": "ops process is simply the total number",
    "start": "558160",
    "end": "560480"
  },
  {
    "text": "of such updates which i increment each",
    "start": "560480",
    "end": "562640"
  },
  {
    "text": "time an update takes place",
    "start": "562640",
    "end": "565920"
  },
  {
    "text": "so now let's look at",
    "start": "567839",
    "end": "569600"
  },
  {
    "text": "um some more examples of client golang",
    "start": "569600",
    "end": "572560"
  },
  {
    "text": "so i first create the end point with",
    "start": "572560",
    "end": "575519"
  },
  {
    "text": "this with a handler on the same port",
    "start": "575519",
    "end": "578560"
  },
  {
    "text": "and here i have used a custom handler",
    "start": "578560",
    "end": "580399"
  },
  {
    "text": "with a specific registry unlike the",
    "start": "580399",
    "end": "582480"
  },
  {
    "text": "previous example",
    "start": "582480",
    "end": "584320"
  },
  {
    "text": "with the default metrics i use the",
    "start": "584320",
    "end": "586160"
  },
  {
    "text": "default handler which came with the",
    "start": "586160",
    "end": "587760"
  },
  {
    "text": "default registry and hence the default",
    "start": "587760",
    "end": "589760"
  },
  {
    "text": "metrics were already registered",
    "start": "589760",
    "end": "592480"
  },
  {
    "text": "so point to note using a custom handler",
    "start": "592480",
    "end": "595120"
  },
  {
    "text": "allows me greater control over the",
    "start": "595120",
    "end": "596880"
  },
  {
    "text": "registry contents and only the metrics",
    "start": "596880",
    "end": "599040"
  },
  {
    "text": "which i will register will be part of",
    "start": "599040",
    "end": "600800"
  },
  {
    "text": "this new registry",
    "start": "600800",
    "end": "604120"
  },
  {
    "text": "um",
    "start": "604240",
    "end": "605600"
  },
  {
    "text": "let's discuss the more detailed example",
    "start": "605600",
    "end": "608800"
  },
  {
    "text": "in this example i will be discussing",
    "start": "608800",
    "end": "611600"
  },
  {
    "text": "a small um application involving apache",
    "start": "611600",
    "end": "614320"
  },
  {
    "text": "kafka an event streaming platform which",
    "start": "614320",
    "end": "616880"
  },
  {
    "text": "can also be used as a message queue",
    "start": "616880",
    "end": "619519"
  },
  {
    "text": "i will be using their go client to",
    "start": "619519",
    "end": "621279"
  },
  {
    "text": "create and delete topics produce and",
    "start": "621279",
    "end": "623519"
  },
  {
    "text": "consume messages and instruments to",
    "start": "623519",
    "end": "625760"
  },
  {
    "text": "expose some basic metrics",
    "start": "625760",
    "end": "629600"
  },
  {
    "text": "when creating a topic i have a stroke",
    "start": "629920",
    "end": "632079"
  },
  {
    "text": "topics created with metrics for both the",
    "start": "632079",
    "end": "634480"
  },
  {
    "text": "possible cases successfully and",
    "start": "634480",
    "end": "636560"
  },
  {
    "text": "unsuccessfully created",
    "start": "636560",
    "end": "638880"
  },
  {
    "text": "so the successful metric represents",
    "start": "638880",
    "end": "641040"
  },
  {
    "text": "topics the net number of topics created",
    "start": "641040",
    "end": "643600"
  },
  {
    "text": "at the end of the run categorized by",
    "start": "643600",
    "end": "645360"
  },
  {
    "text": "labels and hence it is a gauge",
    "start": "645360",
    "end": "648560"
  },
  {
    "text": "so when creating when creating this i",
    "start": "648560",
    "end": "651040"
  },
  {
    "text": "use promoto to register these without an",
    "start": "651040",
    "end": "653519"
  },
  {
    "text": "explicit registration step",
    "start": "653519",
    "end": "656640"
  },
  {
    "text": "in the prometheus package creating and",
    "start": "656640",
    "end": "658640"
  },
  {
    "text": "registering metrics is separate with",
    "start": "658640",
    "end": "660560"
  },
  {
    "text": "creation preceding registration",
    "start": "660560",
    "end": "663360"
  },
  {
    "text": "so since this is a very simple case i",
    "start": "663360",
    "end": "665920"
  },
  {
    "text": "have gone ahead and used promoto but",
    "start": "665920",
    "end": "669279"
  },
  {
    "text": "one disadvantage is that",
    "start": "669279",
    "end": "671519"
  },
  {
    "text": "this has a higher chance of failing and",
    "start": "671519",
    "end": "674000"
  },
  {
    "text": "an also clean way of handling errors",
    "start": "674000",
    "end": "676079"
  },
  {
    "text": "which has a higher chance of occurring",
    "start": "676079",
    "end": "678320"
  },
  {
    "text": "in larger code bases",
    "start": "678320",
    "end": "680320"
  },
  {
    "text": "where multiple packages may try to",
    "start": "680320",
    "end": "682240"
  },
  {
    "text": "register variables",
    "start": "682240",
    "end": "684399"
  },
  {
    "text": "whereas explicit registration which",
    "start": "684399",
    "end": "686480"
  },
  {
    "text": "returns an error can be handled cleaner",
    "start": "686480",
    "end": "689200"
  },
  {
    "text": "and allows for more fine grained control",
    "start": "689200",
    "end": "691360"
  },
  {
    "text": "of the metrics",
    "start": "691360",
    "end": "692800"
  },
  {
    "text": "and neater ways of handling registration",
    "start": "692800",
    "end": "695600"
  },
  {
    "text": "errors",
    "start": "695600",
    "end": "698000"
  },
  {
    "text": "since this is the first metric type we",
    "start": "698079",
    "end": "699920"
  },
  {
    "text": "are discussing let's look at what the",
    "start": "699920",
    "end": "701600"
  },
  {
    "text": "options mean",
    "start": "701600",
    "end": "703200"
  },
  {
    "text": "just in brief",
    "start": "703200",
    "end": "705440"
  },
  {
    "text": "name",
    "start": "705440",
    "end": "706240"
  },
  {
    "text": "this is the unique identifier for the",
    "start": "706240",
    "end": "708320"
  },
  {
    "text": "metric and it's",
    "start": "708320",
    "end": "710000"
  },
  {
    "text": "a mandatory option when querying we use",
    "start": "710000",
    "end": "712160"
  },
  {
    "text": "this",
    "start": "712160",
    "end": "713519"
  },
  {
    "text": "help is a longer more verbose",
    "start": "713519",
    "end": "715279"
  },
  {
    "text": "description of the purpose",
    "start": "715279",
    "end": "718000"
  },
  {
    "text": "namespace and subsystem are used to",
    "start": "718000",
    "end": "720240"
  },
  {
    "text": "create the fully qualified domain name",
    "start": "720240",
    "end": "722320"
  },
  {
    "text": "when combined with name",
    "start": "722320",
    "end": "724399"
  },
  {
    "text": "and the last slice of strings represents",
    "start": "724399",
    "end": "726800"
  },
  {
    "text": "labels and there can be multiple such",
    "start": "726800",
    "end": "728959"
  },
  {
    "text": "labels",
    "start": "728959",
    "end": "731040"
  },
  {
    "text": "so since this talk is about a quick",
    "start": "731040",
    "end": "733040"
  },
  {
    "text": "practical",
    "start": "733040",
    "end": "734160"
  },
  {
    "text": "introduction to prometheus",
    "start": "734160",
    "end": "735839"
  },
  {
    "text": "instrumentations a few things to keep in",
    "start": "735839",
    "end": "737920"
  },
  {
    "text": "mind while naming metrics",
    "start": "737920",
    "end": "740079"
  },
  {
    "text": "the namespace should specify the",
    "start": "740079",
    "end": "742800"
  },
  {
    "text": "domain or the application of the metric",
    "start": "742800",
    "end": "744560"
  },
  {
    "text": "ideally here i have used kafka",
    "start": "744560",
    "end": "748160"
  },
  {
    "text": "the suffix should have the unit or the",
    "start": "748160",
    "end": "750480"
  },
  {
    "text": "word total for accumulating counts like",
    "start": "750480",
    "end": "752720"
  },
  {
    "text": "counter i have used total here",
    "start": "752720",
    "end": "755760"
  },
  {
    "text": "and avoid adding the label name into the",
    "start": "755760",
    "end": "758160"
  },
  {
    "text": "metric name since that's a redundancy",
    "start": "758160",
    "end": "761200"
  },
  {
    "text": "an example of that would be naming the",
    "start": "761200",
    "end": "763200"
  },
  {
    "text": "message count metric for a topic topic",
    "start": "763200",
    "end": "765360"
  },
  {
    "text": "messages total the preferred way to name",
    "start": "765360",
    "end": "767760"
  },
  {
    "text": "it would be message total and have a",
    "start": "767760",
    "end": "769519"
  },
  {
    "text": "label topic",
    "start": "769519",
    "end": "772639"
  },
  {
    "start": "772000",
    "end": "916000"
  },
  {
    "text": "so now on to the create topic function",
    "start": "772639",
    "end": "775120"
  },
  {
    "text": "when a topic is created i increment the",
    "start": "775120",
    "end": "777839"
  },
  {
    "text": "create the",
    "start": "777839",
    "end": "779120"
  },
  {
    "text": "topics created on successfully gauge",
    "start": "779120",
    "end": "781519"
  },
  {
    "text": "vector for that category using the",
    "start": "781519",
    "end": "783600"
  },
  {
    "text": "increment function",
    "start": "783600",
    "end": "785519"
  },
  {
    "text": "so um i categorize label",
    "start": "785519",
    "end": "789200"
  },
  {
    "text": "topics by this really simple method",
    "start": "789200",
    "end": "792560"
  },
  {
    "text": "based on their suffixes either is order",
    "start": "792560",
    "end": "794880"
  },
  {
    "text": "even",
    "start": "794880",
    "end": "796079"
  },
  {
    "text": "so i add to the gauge with the label for",
    "start": "796079",
    "end": "797839"
  },
  {
    "text": "that topic and specifying that label",
    "start": "797839",
    "end": "800079"
  },
  {
    "text": "makes sure that only that time series",
    "start": "800079",
    "end": "802320"
  },
  {
    "text": "gets incremented",
    "start": "802320",
    "end": "804560"
  },
  {
    "text": "so the recommended practices for code",
    "start": "804560",
    "end": "806880"
  },
  {
    "text": "instrumentation make a good point about",
    "start": "806880",
    "end": "809360"
  },
  {
    "text": "adding a metric for anything interesting",
    "start": "809360",
    "end": "811519"
  },
  {
    "text": "that's worth a log",
    "start": "811519",
    "end": "813600"
  },
  {
    "text": "here since i think tracking the number",
    "start": "813600",
    "end": "815519"
  },
  {
    "text": "of errors while creating topics is",
    "start": "815519",
    "end": "817360"
  },
  {
    "text": "worthwhile i have added a separate",
    "start": "817360",
    "end": "819120"
  },
  {
    "text": "counter for that which i increment on an",
    "start": "819120",
    "end": "821040"
  },
  {
    "text": "error",
    "start": "821040",
    "end": "823120"
  },
  {
    "text": "i initially considered using a gauge",
    "start": "823120",
    "end": "825279"
  },
  {
    "text": "vector for this function topics",
    "start": "825279",
    "end": "826880"
  },
  {
    "text": "categorized in a separate counter",
    "start": "826880",
    "end": "828560"
  },
  {
    "text": "without labels",
    "start": "828560",
    "end": "830480"
  },
  {
    "text": "the options for that would be similar to",
    "start": "830480",
    "end": "832880"
  },
  {
    "text": "the the previous slide and um here i",
    "start": "832880",
    "end": "835600"
  },
  {
    "text": "thought i'd use type to categorize",
    "start": "835600",
    "end": "837519"
  },
  {
    "text": "topics",
    "start": "837519",
    "end": "839199"
  },
  {
    "text": "so i'm mentioning this because this is a",
    "start": "839199",
    "end": "841199"
  },
  {
    "text": "deliberate anti-pattern i'm bringing up",
    "start": "841199",
    "end": "843760"
  },
  {
    "text": "instead of a separate gauge for just",
    "start": "843760",
    "end": "845360"
  },
  {
    "text": "categorizing topics the create topic",
    "start": "845360",
    "end": "847760"
  },
  {
    "text": "metric could have had label specifying",
    "start": "847760",
    "end": "849680"
  },
  {
    "text": "types",
    "start": "849680",
    "end": "850880"
  },
  {
    "text": "naming a label type is also considered",
    "start": "850880",
    "end": "853360"
  },
  {
    "text": "bad form since it's so generic",
    "start": "853360",
    "end": "857800"
  },
  {
    "text": "while we're on labels a point to note",
    "start": "858000",
    "end": "860160"
  },
  {
    "text": "that adding a label is equivalent to",
    "start": "860160",
    "end": "862240"
  },
  {
    "text": "adding a new time series and cardinality",
    "start": "862240",
    "end": "865199"
  },
  {
    "text": "is the number of possible values for a",
    "start": "865199",
    "end": "867199"
  },
  {
    "text": "label",
    "start": "867199",
    "end": "868560"
  },
  {
    "text": "assuming multiple labels on a metric um",
    "start": "868560",
    "end": "871040"
  },
  {
    "text": "let's say x y and z each with three",
    "start": "871040",
    "end": "873040"
  },
  {
    "text": "possible values",
    "start": "873040",
    "end": "875279"
  },
  {
    "text": "multiplying that could um",
    "start": "875279",
    "end": "877360"
  },
  {
    "text": "could take us to 27 unique time series",
    "start": "877360",
    "end": "880720"
  },
  {
    "text": "and it can have an impact on performance",
    "start": "880720",
    "end": "883040"
  },
  {
    "text": "after point since each resulting time",
    "start": "883040",
    "end": "885440"
  },
  {
    "text": "series is one that might need to be",
    "start": "885440",
    "end": "887360"
  },
  {
    "text": "processed index stored after every",
    "start": "887360",
    "end": "890240"
  },
  {
    "text": "scrape and topple",
    "start": "890240",
    "end": "892000"
  },
  {
    "text": "and although each combination is",
    "start": "892000",
    "end": "893920"
  },
  {
    "text": "unlikely to occur it's something to keep",
    "start": "893920",
    "end": "896160"
  },
  {
    "text": "in mind while deciding on metrics and",
    "start": "896160",
    "end": "898800"
  },
  {
    "text": "labels",
    "start": "898800",
    "end": "901279"
  },
  {
    "text": "outstanding message count in a topic is",
    "start": "901680",
    "end": "904320"
  },
  {
    "text": "the count of messages yet to be",
    "start": "904320",
    "end": "905920"
  },
  {
    "text": "processed",
    "start": "905920",
    "end": "906959"
  },
  {
    "text": "and this will be incremented on",
    "start": "906959",
    "end": "908880"
  },
  {
    "text": "producing new messages and decremented",
    "start": "908880",
    "end": "910959"
  },
  {
    "text": "on consuming them it's just a very",
    "start": "910959",
    "end": "913519"
  },
  {
    "text": "simple triple counter",
    "start": "913519",
    "end": "916639"
  },
  {
    "text": "so let's write some messages to the new",
    "start": "917279",
    "end": "919040"
  },
  {
    "text": "topic",
    "start": "919040",
    "end": "920480"
  },
  {
    "text": "here we are looking at a struct message",
    "start": "920480",
    "end": "922639"
  },
  {
    "text": "produced with counter vectors and this",
    "start": "922639",
    "end": "925360"
  },
  {
    "text": "two has its error equivalent in message",
    "start": "925360",
    "end": "927680"
  },
  {
    "text": "produced failed",
    "start": "927680",
    "end": "929519"
  },
  {
    "text": "these are incremented as obviously on",
    "start": "929519",
    "end": "932320"
  },
  {
    "text": "successfully and unsuccessfully",
    "start": "932320",
    "end": "934320"
  },
  {
    "text": "producing a message",
    "start": "934320",
    "end": "937279"
  },
  {
    "text": "so the histogram buckets here indicate",
    "start": "937360",
    "end": "939360"
  },
  {
    "text": "message consumption latencies which are",
    "start": "939360",
    "end": "941519"
  },
  {
    "text": "less than the specified buckets in the",
    "start": "941519",
    "end": "943519"
  },
  {
    "text": "buckets before it",
    "start": "943519",
    "end": "945279"
  },
  {
    "text": "so there are multiple ways that this can",
    "start": "945279",
    "end": "947519"
  },
  {
    "text": "be specified the first is the method i",
    "start": "947519",
    "end": "949519"
  },
  {
    "text": "have shown explicit demarcations and",
    "start": "949519",
    "end": "953360"
  },
  {
    "text": "the second when they are evenly spaced",
    "start": "953360",
    "end": "956000"
  },
  {
    "text": "and the count is known is using linear",
    "start": "956000",
    "end": "957839"
  },
  {
    "text": "buckets",
    "start": "957839",
    "end": "959279"
  },
  {
    "text": "and finally if they are not linear one",
    "start": "959279",
    "end": "961680"
  },
  {
    "text": "can also use exponential buckets",
    "start": "961680",
    "end": "965839"
  },
  {
    "start": "965000",
    "end": "1040000"
  },
  {
    "text": "the message latency here is the duration",
    "start": "966880",
    "end": "969680"
  },
  {
    "text": "between writing a message and returning",
    "start": "969680",
    "end": "971759"
  },
  {
    "text": "from the right function",
    "start": "971759",
    "end": "974800"
  },
  {
    "text": "so the histograms have observations",
    "start": "974800",
    "end": "977040"
  },
  {
    "text": "added using the observe method this is",
    "start": "977040",
    "end": "979199"
  },
  {
    "text": "the timer in the client golang library",
    "start": "979199",
    "end": "982560"
  },
  {
    "text": "and the duration is calculated using",
    "start": "982560",
    "end": "984800"
  },
  {
    "text": "timer.timers which can be used with",
    "start": "984800",
    "end": "987199"
  },
  {
    "text": "histograms or gauges or summaries",
    "start": "987199",
    "end": "990720"
  },
  {
    "text": "the observer method gets called by the",
    "start": "990720",
    "end": "992880"
  },
  {
    "text": "default observed duration and that",
    "start": "992880",
    "end": "995199"
  },
  {
    "text": "updates the histogram",
    "start": "995199",
    "end": "997360"
  },
  {
    "text": "if there is an error while writing the",
    "start": "997360",
    "end": "998959"
  },
  {
    "text": "message again that's worth a log and so",
    "start": "998959",
    "end": "1001600"
  },
  {
    "text": "the error metric for that topic is",
    "start": "1001600",
    "end": "1003120"
  },
  {
    "text": "incremented",
    "start": "1003120",
    "end": "1004959"
  },
  {
    "text": "on successfully sending a message the",
    "start": "1004959",
    "end": "1007040"
  },
  {
    "text": "successful message counter is",
    "start": "1007040",
    "end": "1008560"
  },
  {
    "text": "incremented along with the message count",
    "start": "1008560",
    "end": "1010720"
  },
  {
    "text": "cage",
    "start": "1010720",
    "end": "1012480"
  },
  {
    "text": "this is",
    "start": "1012480",
    "end": "1013440"
  },
  {
    "text": "how the counter looks",
    "start": "1013440",
    "end": "1016800"
  },
  {
    "text": "consuming messages",
    "start": "1017759",
    "end": "1019600"
  },
  {
    "text": "so the message consumed struct is um",
    "start": "1019600",
    "end": "1021920"
  },
  {
    "text": "pretty similar to the previous one",
    "start": "1021920",
    "end": "1025280"
  },
  {
    "text": "and each time a message is successfully",
    "start": "1025280",
    "end": "1027280"
  },
  {
    "text": "consumed the gauge message count for",
    "start": "1027280",
    "end": "1029280"
  },
  {
    "text": "that topic is incremented using the",
    "start": "1029280",
    "end": "1032160"
  },
  {
    "text": "decrement decremented using the",
    "start": "1032160",
    "end": "1034079"
  },
  {
    "text": "decrement function",
    "start": "1034079",
    "end": "1035839"
  },
  {
    "text": "if not this error 2 has a corresponding",
    "start": "1035839",
    "end": "1038160"
  },
  {
    "text": "metric",
    "start": "1038160",
    "end": "1040559"
  },
  {
    "start": "1040000",
    "end": "1066000"
  },
  {
    "text": "so another example of decrementing",
    "start": "1041039",
    "end": "1043438"
  },
  {
    "text": "gauges is",
    "start": "1043439",
    "end": "1044880"
  },
  {
    "text": "provided by the delete topic function",
    "start": "1044880",
    "end": "1047199"
  },
  {
    "text": "where each time a topic is successfully",
    "start": "1047199",
    "end": "1049840"
  },
  {
    "text": "deleted a gauge is decremented",
    "start": "1049840",
    "end": "1052640"
  },
  {
    "text": "here too there is a corresponding metric",
    "start": "1052640",
    "end": "1054559"
  },
  {
    "text": "for the errors during deletion which is",
    "start": "1054559",
    "end": "1056720"
  },
  {
    "text": "incremented on an error",
    "start": "1056720",
    "end": "1060000"
  },
  {
    "text": "so i have organized my test suit using",
    "start": "1060640",
    "end": "1064000"
  },
  {
    "text": "table",
    "start": "1064000",
    "end": "1064840"
  },
  {
    "text": "testing",
    "start": "1064840",
    "end": "1066799"
  },
  {
    "start": "1066000",
    "end": "1101000"
  },
  {
    "text": "each of the elements in this list is a",
    "start": "1066799",
    "end": "1068880"
  },
  {
    "text": "test case which will run through this",
    "start": "1068880",
    "end": "1071120"
  },
  {
    "text": "block for each of the cases only um",
    "start": "1071120",
    "end": "1074320"
  },
  {
    "text": "these few name input in the expected",
    "start": "1074320",
    "end": "1076880"
  },
  {
    "text": "parameters change",
    "start": "1076880",
    "end": "1078799"
  },
  {
    "text": "whereas the rest is just boilerplate",
    "start": "1078799",
    "end": "1080640"
  },
  {
    "text": "code common to each case",
    "start": "1080640",
    "end": "1083200"
  },
  {
    "text": "the table here refers to the struct",
    "start": "1083200",
    "end": "1085120"
  },
  {
    "text": "which holds the name input and output",
    "start": "1085120",
    "end": "1087200"
  },
  {
    "text": "for each case and these run",
    "start": "1087200",
    "end": "1089600"
  },
  {
    "text": "independently of each other meaning a",
    "start": "1089600",
    "end": "1091679"
  },
  {
    "text": "failed case won't stop the others from",
    "start": "1091679",
    "end": "1093919"
  },
  {
    "text": "running",
    "start": "1093919",
    "end": "1095200"
  },
  {
    "text": "and each is called a subtest to check",
    "start": "1095200",
    "end": "1097600"
  },
  {
    "text": "for equalities i use assertions from",
    "start": "1097600",
    "end": "1100160"
  },
  {
    "text": "assert",
    "start": "1100160",
    "end": "1101919"
  },
  {
    "start": "1101000",
    "end": "1134000"
  },
  {
    "text": "let's start by testing the create topic",
    "start": "1101919",
    "end": "1104880"
  },
  {
    "text": "function",
    "start": "1104880",
    "end": "1106799"
  },
  {
    "text": "the input test struct has the topic name",
    "start": "1106799",
    "end": "1109120"
  },
  {
    "text": "and the key and the output has the",
    "start": "1109120",
    "end": "1111280"
  },
  {
    "text": "expected count of successfully and",
    "start": "1111280",
    "end": "1113440"
  },
  {
    "text": "unsuccessfully created topics",
    "start": "1113440",
    "end": "1116240"
  },
  {
    "text": "i am creating a new topic create each",
    "start": "1116240",
    "end": "1118240"
  },
  {
    "text": "time to reset this to zero",
    "start": "1118240",
    "end": "1120799"
  },
  {
    "text": "and to test the gauge vector values for",
    "start": "1120799",
    "end": "1122720"
  },
  {
    "text": "this key use get metrics with label",
    "start": "1122720",
    "end": "1125360"
  },
  {
    "text": "values and compare it with the expected",
    "start": "1125360",
    "end": "1127760"
  },
  {
    "text": "output that's the second um",
    "start": "1127760",
    "end": "1131280"
  },
  {
    "text": "those are the last two lines",
    "start": "1131280",
    "end": "1134480"
  },
  {
    "start": "1134000",
    "end": "1145000"
  },
  {
    "text": "to test the send message function too i",
    "start": "1135600",
    "end": "1138080"
  },
  {
    "text": "do something similar i have um specific",
    "start": "1138080",
    "end": "1141360"
  },
  {
    "text": "um structs",
    "start": "1141360",
    "end": "1143360"
  },
  {
    "text": "for the subtests",
    "start": "1143360",
    "end": "1145679"
  },
  {
    "start": "1145000",
    "end": "1180000"
  },
  {
    "text": "i run the functions to be tested again",
    "start": "1145679",
    "end": "1147679"
  },
  {
    "text": "and get the metric values for the labels",
    "start": "1147679",
    "end": "1149679"
  },
  {
    "text": "so",
    "start": "1149679",
    "end": "1150559"
  },
  {
    "text": "you can see i have my custom registry i",
    "start": "1150559",
    "end": "1153600"
  },
  {
    "text": "reset it all",
    "start": "1153600",
    "end": "1155200"
  },
  {
    "text": "and",
    "start": "1155200",
    "end": "1156480"
  },
  {
    "text": "i get metrics with label values and i",
    "start": "1156480",
    "end": "1159200"
  },
  {
    "text": "check for assertions",
    "start": "1159200",
    "end": "1162639"
  },
  {
    "text": "um",
    "start": "1162960",
    "end": "1163760"
  },
  {
    "text": "a lot of um this talk was meant to",
    "start": "1163760",
    "end": "1166080"
  },
  {
    "text": "provide a beginner's perspective since i",
    "start": "1166080",
    "end": "1169120"
  },
  {
    "text": "learned of this during my mentorship and",
    "start": "1169120",
    "end": "1171039"
  },
  {
    "text": "um",
    "start": "1171039",
    "end": "1172320"
  },
  {
    "text": "i was hoping some others would benefit",
    "start": "1172320",
    "end": "1175520"
  },
  {
    "text": "from",
    "start": "1175520",
    "end": "1176320"
  },
  {
    "text": "the perspective i had during the project",
    "start": "1176320",
    "end": "1179919"
  },
  {
    "text": "so um",
    "start": "1179919",
    "end": "1181280"
  },
  {
    "start": "1180000",
    "end": "1313000"
  },
  {
    "text": "so this brings me to the end i hope my",
    "start": "1181280",
    "end": "1183760"
  },
  {
    "text": "talk helps any novices getting started",
    "start": "1183760",
    "end": "1186480"
  },
  {
    "text": "with instrumentation to leverage",
    "start": "1186480",
    "end": "1188480"
  },
  {
    "text": "prometheus observability",
    "start": "1188480",
    "end": "1191039"
  },
  {
    "text": "thank you",
    "start": "1191039",
    "end": "1193840"
  },
  {
    "text": "any questions",
    "start": "1199440",
    "end": "1202720"
  },
  {
    "text": "there we go",
    "start": "1202960",
    "end": "1206279"
  },
  {
    "text": "what was the",
    "start": "1210159",
    "end": "1211360"
  },
  {
    "text": "most",
    "start": "1211360",
    "end": "1212320"
  },
  {
    "text": "difficult",
    "start": "1212320",
    "end": "1213679"
  },
  {
    "text": "thing that you",
    "start": "1213679",
    "end": "1215200"
  },
  {
    "text": "had to learn when",
    "start": "1215200",
    "end": "1217200"
  },
  {
    "text": "learning the",
    "start": "1217200",
    "end": "1218880"
  },
  {
    "text": "how to instrument your prometheus",
    "start": "1218880",
    "end": "1220799"
  },
  {
    "text": "applications",
    "start": "1220799",
    "end": "1222640"
  },
  {
    "text": "so um",
    "start": "1222640",
    "end": "1224640"
  },
  {
    "text": "in in the client i um",
    "start": "1224640",
    "end": "1227120"
  },
  {
    "text": "in i went through the source code and",
    "start": "1227120",
    "end": "1229440"
  },
  {
    "text": "understanding collectors and metrics all",
    "start": "1229440",
    "end": "1231600"
  },
  {
    "text": "those interfaces",
    "start": "1231600",
    "end": "1233200"
  },
  {
    "text": "and how um",
    "start": "1233200",
    "end": "1234720"
  },
  {
    "text": "how those could be applied to the thanos",
    "start": "1234720",
    "end": "1236480"
  },
  {
    "text": "processes was",
    "start": "1236480",
    "end": "1238080"
  },
  {
    "text": "challenging",
    "start": "1238080",
    "end": "1240559"
  },
  {
    "text": "all right we have a question from slack",
    "start": "1243280",
    "end": "1245919"
  },
  {
    "text": "is",
    "start": "1245919",
    "end": "1247120"
  },
  {
    "text": "should there be separation between the",
    "start": "1247120",
    "end": "1248960"
  },
  {
    "text": "business logic like creating the kafka",
    "start": "1248960",
    "end": "1250960"
  },
  {
    "text": "topic and the prometheus instrumentation",
    "start": "1250960",
    "end": "1254720"
  },
  {
    "text": "um i i think um",
    "start": "1254720",
    "end": "1257679"
  },
  {
    "text": "so from my limited experience with this",
    "start": "1257679",
    "end": "1260240"
  },
  {
    "text": "i feel um instrumentation is um",
    "start": "1260240",
    "end": "1265039"
  },
  {
    "text": "is um harnessing it from the core level",
    "start": "1265039",
    "end": "1267360"
  },
  {
    "text": "so",
    "start": "1267360",
    "end": "1268320"
  },
  {
    "text": "i don't think there is too distinct a",
    "start": "1268320",
    "end": "1270960"
  },
  {
    "text": "separation possible like not too",
    "start": "1270960",
    "end": "1273679"
  },
  {
    "text": "thick a line",
    "start": "1273679",
    "end": "1277000"
  },
  {
    "text": "any more questions",
    "start": "1279919",
    "end": "1282799"
  },
  {
    "text": "be bold",
    "start": "1284799",
    "end": "1288039"
  },
  {
    "text": "do you want to add something",
    "start": "1297520",
    "end": "1299840"
  },
  {
    "text": "um no i'm sorry no totally fine",
    "start": "1299840",
    "end": "1303840"
  },
  {
    "text": "last call for questions",
    "start": "1303840",
    "end": "1306880"
  },
  {
    "text": "three two one",
    "start": "1307360",
    "end": "1308720"
  },
  {
    "text": "thank you very much",
    "start": "1308720",
    "end": "1312120"
  }
]