[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "welcome to uncovering the sophisticated",
    "start": "2800",
    "end": "4480"
  },
  {
    "text": "kubernetes attack in real time",
    "start": "4480",
    "end": "7279"
  },
  {
    "text": "kubernetes has become the de facto cloud",
    "start": "7279",
    "end": "9280"
  },
  {
    "text": "operating system",
    "start": "9280",
    "end": "10320"
  },
  {
    "text": "and every day more and more critical",
    "start": "10320",
    "end": "12160"
  },
  {
    "text": "applications are containerized and moved",
    "start": "12160",
    "end": "14160"
  },
  {
    "text": "to kubernetes",
    "start": "14160",
    "end": "15759"
  },
  {
    "text": "this means kubernetes is quickly",
    "start": "15759",
    "end": "17119"
  },
  {
    "text": "becoming a crucial component to secure",
    "start": "17119",
    "end": "20160"
  },
  {
    "text": "today we as defenders are in the dark",
    "start": "20160",
    "end": "22720"
  },
  {
    "text": "because we lack the observability",
    "start": "22720",
    "end": "24800"
  },
  {
    "text": "needed to detect and respond to attacks",
    "start": "24800",
    "end": "26640"
  },
  {
    "text": "on our workloads",
    "start": "26640",
    "end": "28320"
  },
  {
    "text": "today we'll show you how we can build",
    "start": "28320",
    "end": "30000"
  },
  {
    "text": "out a detection program to uncover a",
    "start": "30000",
    "end": "31679"
  },
  {
    "text": "sophisticated attack against a",
    "start": "31679",
    "end": "32960"
  },
  {
    "text": "kubernetes cluster",
    "start": "32960",
    "end": "35920"
  },
  {
    "start": "36000",
    "end": "54000"
  },
  {
    "text": "hi i'm jed salazar platform security at",
    "start": "36960",
    "end": "39440"
  },
  {
    "text": "tesla",
    "start": "39440",
    "end": "40399"
  },
  {
    "text": "i like mountains and distributed systems",
    "start": "40399",
    "end": "44640"
  },
  {
    "text": "hey my name is natalia and i'm a",
    "start": "44640",
    "end": "46879"
  },
  {
    "text": "security engineer and i surveillance",
    "start": "46879",
    "end": "49039"
  },
  {
    "text": "i really like traveling and flying on",
    "start": "49039",
    "end": "51440"
  },
  {
    "text": "planes",
    "start": "51440",
    "end": "53920"
  },
  {
    "start": "54000",
    "end": "134000"
  },
  {
    "text": "observability in distributed systems is",
    "start": "55120",
    "end": "57039"
  },
  {
    "text": "a crucial element in detecting issues",
    "start": "57039",
    "end": "59039"
  },
  {
    "text": "and making changes to improve the",
    "start": "59039",
    "end": "60480"
  },
  {
    "text": "stability and security of the system",
    "start": "60480",
    "end": "63039"
  },
  {
    "text": "so for sre we use things like prometheus",
    "start": "63039",
    "end": "66479"
  },
  {
    "text": "to actually",
    "start": "66479",
    "end": "67200"
  },
  {
    "text": "come up with metrics to define how we",
    "start": "67200",
    "end": "69040"
  },
  {
    "text": "can actually improve the reliability of",
    "start": "69040",
    "end": "70799"
  },
  {
    "text": "a service",
    "start": "70799",
    "end": "72880"
  },
  {
    "text": "what we're advocating for is that",
    "start": "72880",
    "end": "74159"
  },
  {
    "text": "security takes the same approach",
    "start": "74159",
    "end": "76159"
  },
  {
    "text": "being data driven and using data to",
    "start": "76159",
    "end": "78159"
  },
  {
    "text": "drive forward security improvements",
    "start": "78159",
    "end": "80080"
  },
  {
    "text": "within our system",
    "start": "80080",
    "end": "81920"
  },
  {
    "text": "so a lot of security today practices",
    "start": "81920",
    "end": "83680"
  },
  {
    "text": "they really focus on the pre-fail",
    "start": "83680",
    "end": "85759"
  },
  {
    "text": "and post-fail approach to security",
    "start": "85759",
    "end": "88479"
  },
  {
    "text": "pre-fail tries to predict the necessary",
    "start": "88479",
    "end": "90560"
  },
  {
    "text": "protections that a system is going to",
    "start": "90560",
    "end": "92079"
  },
  {
    "text": "require",
    "start": "92079",
    "end": "93040"
  },
  {
    "text": "based on threat modeling or an",
    "start": "93040",
    "end": "94640"
  },
  {
    "text": "assumption of risk",
    "start": "94640",
    "end": "96560"
  },
  {
    "text": "post fail ensures that you have the",
    "start": "96560",
    "end": "98079"
  },
  {
    "text": "necessary logs for intrusion detection",
    "start": "98079",
    "end": "100479"
  },
  {
    "text": "to be notified if you get compromised",
    "start": "100479",
    "end": "102479"
  },
  {
    "text": "despite those protections what we're",
    "start": "102479",
    "end": "105280"
  },
  {
    "text": "advocating for",
    "start": "105280",
    "end": "106320"
  },
  {
    "text": "is that we actually change that paragon",
    "start": "106320",
    "end": "108720"
  },
  {
    "text": "and we move from a pre-fail and",
    "start": "108720",
    "end": "110479"
  },
  {
    "text": "post-fail",
    "start": "110479",
    "end": "111360"
  },
  {
    "text": "to a pre-data and post data paradigm",
    "start": "111360",
    "end": "115520"
  },
  {
    "text": "data allows us to continually measure",
    "start": "115520",
    "end": "117680"
  },
  {
    "text": "that our hardening and security",
    "start": "117680",
    "end": "118880"
  },
  {
    "text": "configurations",
    "start": "118880",
    "end": "120079"
  },
  {
    "text": "are suitable to protect against real",
    "start": "120079",
    "end": "121920"
  },
  {
    "text": "world threats",
    "start": "121920",
    "end": "123119"
  },
  {
    "text": "that are attacked that are detected by",
    "start": "123119",
    "end": "125280"
  },
  {
    "text": "observability within our environment",
    "start": "125280",
    "end": "127920"
  },
  {
    "text": "with observability we will open your",
    "start": "127920",
    "end": "129920"
  },
  {
    "text": "eyes to the reality of the threats in",
    "start": "129920",
    "end": "131599"
  },
  {
    "text": "your environment",
    "start": "131599",
    "end": "134239"
  },
  {
    "start": "134000",
    "end": "187000"
  },
  {
    "text": "so how do we secure this this is the",
    "start": "135200",
    "end": "138480"
  },
  {
    "text": "cncf landscape",
    "start": "138480",
    "end": "139840"
  },
  {
    "text": "basically the set of tools and systems",
    "start": "139840",
    "end": "141599"
  },
  {
    "text": "that make up the kubernetes ecosystem",
    "start": "141599",
    "end": "144160"
  },
  {
    "text": "i like to call this the cncf threat",
    "start": "144160",
    "end": "146160"
  },
  {
    "text": "landscape",
    "start": "146160",
    "end": "147840"
  },
  {
    "text": "if you're tasked with securing",
    "start": "147840",
    "end": "149040"
  },
  {
    "text": "kubernetes you might look at this",
    "start": "149040",
    "end": "150480"
  },
  {
    "text": "landscape",
    "start": "150480",
    "end": "151200"
  },
  {
    "text": "and become overwhelmed it takes a lot of",
    "start": "151200",
    "end": "153680"
  },
  {
    "text": "resources and time to successfully build",
    "start": "153680",
    "end": "155599"
  },
  {
    "text": "and operate a cloud-native environment",
    "start": "155599",
    "end": "157519"
  },
  {
    "text": "let alone secure it however different",
    "start": "157519",
    "end": "160480"
  },
  {
    "text": "components of your stack have different",
    "start": "160480",
    "end": "162480"
  },
  {
    "text": "levels of risk",
    "start": "162480",
    "end": "163760"
  },
  {
    "text": "and prioritizing your focus where",
    "start": "163760",
    "end": "165599"
  },
  {
    "text": "there's the least trust",
    "start": "165599",
    "end": "167200"
  },
  {
    "text": "and the most risk is a good way to get",
    "start": "167200",
    "end": "169440"
  },
  {
    "text": "started",
    "start": "169440",
    "end": "170720"
  },
  {
    "text": "for example it's reasonable to assume",
    "start": "170720",
    "end": "172959"
  },
  {
    "text": "that the kubernetes scheduler",
    "start": "172959",
    "end": "174480"
  },
  {
    "text": "is less of an attack vector for your",
    "start": "174480",
    "end": "176239"
  },
  {
    "text": "cluster than an internet exposed pod",
    "start": "176239",
    "end": "178480"
  },
  {
    "text": "that handles untrusted user input",
    "start": "178480",
    "end": "181440"
  },
  {
    "text": "but what if i'm following cis benchmarks",
    "start": "181440",
    "end": "183360"
  },
  {
    "text": "and scanning my container images",
    "start": "183360",
    "end": "185280"
  },
  {
    "text": "is that enough don't do this",
    "start": "185280",
    "end": "190000"
  },
  {
    "start": "187000",
    "end": "248000"
  },
  {
    "text": "not to say that vulnerability scanning",
    "start": "190000",
    "end": "191599"
  },
  {
    "text": "isn't important you should definitely",
    "start": "191599",
    "end": "193519"
  },
  {
    "text": "not deploy vulnerabilities in the",
    "start": "193519",
    "end": "195200"
  },
  {
    "text": "problem",
    "start": "195200",
    "end": "197040"
  },
  {
    "text": "there are a number of different",
    "start": "197040",
    "end": "198000"
  },
  {
    "text": "protections that we can implement within",
    "start": "198000",
    "end": "199760"
  },
  {
    "text": "a system",
    "start": "199760",
    "end": "201040"
  },
  {
    "text": "admission controls like opa can define",
    "start": "201040",
    "end": "203200"
  },
  {
    "text": "security standards and enforce policy",
    "start": "203200",
    "end": "205440"
  },
  {
    "text": "for objects before they're persisted to",
    "start": "205440",
    "end": "207200"
  },
  {
    "text": "etcd",
    "start": "207200",
    "end": "208640"
  },
  {
    "text": "you can protect your containers by",
    "start": "208640",
    "end": "210239"
  },
  {
    "text": "removing dangerous debugging tools",
    "start": "210239",
    "end": "212000"
  },
  {
    "text": "like interactive shells package managers",
    "start": "212000",
    "end": "214560"
  },
  {
    "text": "compilers",
    "start": "214560",
    "end": "215519"
  },
  {
    "text": "and unneeded run times with distrolus",
    "start": "215519",
    "end": "217360"
  },
  {
    "text": "base images",
    "start": "217360",
    "end": "218879"
  },
  {
    "text": "bonus vulnerability scanning should be",
    "start": "218879",
    "end": "220879"
  },
  {
    "text": "integrated to a container image build",
    "start": "220879",
    "end": "222720"
  },
  {
    "text": "stage",
    "start": "222720",
    "end": "223440"
  },
  {
    "text": "and runtime sandboxing such as setcomp",
    "start": "223440",
    "end": "225920"
  },
  {
    "text": "app armor g-visor and firecracker",
    "start": "225920",
    "end": "228400"
  },
  {
    "text": "can limit the potential of privilege",
    "start": "228400",
    "end": "229920"
  },
  {
    "text": "escalation or container escapes",
    "start": "229920",
    "end": "233920"
  },
  {
    "text": "still each of these tools offer varying",
    "start": "234480",
    "end": "236879"
  },
  {
    "text": "degrees of locking things down",
    "start": "236879",
    "end": "239120"
  },
  {
    "text": "so how can we verify that these",
    "start": "239120",
    "end": "240480"
  },
  {
    "text": "protections give us sufficient",
    "start": "240480",
    "end": "241840"
  },
  {
    "text": "protections from the real world attacks",
    "start": "241840",
    "end": "243519"
  },
  {
    "text": "that we're",
    "start": "243519",
    "end": "244080"
  },
  {
    "text": "actually going to see within our",
    "start": "244080",
    "end": "245120"
  },
  {
    "text": "kubernetes environment",
    "start": "245120",
    "end": "248080"
  },
  {
    "start": "248000",
    "end": "309000"
  },
  {
    "text": "so the way that we can enable that is by",
    "start": "249439",
    "end": "252159"
  },
  {
    "text": "making security",
    "start": "252159",
    "end": "253439"
  },
  {
    "text": "look more like sre so",
    "start": "253439",
    "end": "256479"
  },
  {
    "text": "if i were to ask how secure are you",
    "start": "256479",
    "end": "258560"
  },
  {
    "text": "today",
    "start": "258560",
    "end": "259919"
  },
  {
    "text": "could you provide a quantifiable answer",
    "start": "259919",
    "end": "261840"
  },
  {
    "text": "to that question",
    "start": "261840",
    "end": "263520"
  },
  {
    "text": "are you measuring your assumptions on",
    "start": "263520",
    "end": "265120"
  },
  {
    "text": "how secure you are",
    "start": "265120",
    "end": "267360"
  },
  {
    "text": "we need to make security more like sre",
    "start": "267360",
    "end": "270320"
  },
  {
    "text": "by",
    "start": "270320",
    "end": "270960"
  },
  {
    "text": "sharing a lot of the same sre principles",
    "start": "270960",
    "end": "273360"
  },
  {
    "text": "like being data driven",
    "start": "273360",
    "end": "274639"
  },
  {
    "text": "and measuring the data that we actually",
    "start": "274639",
    "end": "276160"
  },
  {
    "text": "receive within an environment",
    "start": "276160",
    "end": "279360"
  },
  {
    "text": "in this new paradigm where security",
    "start": "279360",
    "end": "281440"
  },
  {
    "text": "shares sre practices",
    "start": "281440",
    "end": "283440"
  },
  {
    "text": "security collects data observes the",
    "start": "283440",
    "end": "286160"
  },
  {
    "text": "feedback",
    "start": "286160",
    "end": "287120"
  },
  {
    "text": "and then makes continuous data-driven",
    "start": "287120",
    "end": "289280"
  },
  {
    "text": "decisions to improve the security of our",
    "start": "289280",
    "end": "291680"
  },
  {
    "text": "systems",
    "start": "291680",
    "end": "293120"
  },
  {
    "text": "are you scanning your images do you",
    "start": "293120",
    "end": "295040"
  },
  {
    "text": "apply network policy",
    "start": "295040",
    "end": "296639"
  },
  {
    "text": "are you encrypting your data at rest how",
    "start": "296639",
    "end": "298880"
  },
  {
    "text": "are you measuring the efficacy of these",
    "start": "298880",
    "end": "300560"
  },
  {
    "text": "protections",
    "start": "300560",
    "end": "301600"
  },
  {
    "text": "and can we detect if the service running",
    "start": "301600",
    "end": "303520"
  },
  {
    "text": "in our environment",
    "start": "303520",
    "end": "304639"
  },
  {
    "text": "is outside of our security policy",
    "start": "304639",
    "end": "310960"
  },
  {
    "start": "309000",
    "end": "376000"
  },
  {
    "text": "the way that we do that is we trust but",
    "start": "310960",
    "end": "313039"
  },
  {
    "text": "verify",
    "start": "313039",
    "end": "314320"
  },
  {
    "text": "this is an old security adage so",
    "start": "314320",
    "end": "317520"
  },
  {
    "text": "you place a lot of trust in your systems",
    "start": "317520",
    "end": "319440"
  },
  {
    "text": "at deployment time",
    "start": "319440",
    "end": "321440"
  },
  {
    "text": "for example if you build up a container",
    "start": "321440",
    "end": "323440"
  },
  {
    "text": "image you should have this",
    "start": "323440",
    "end": "325120"
  },
  {
    "text": "container image represented as",
    "start": "325120",
    "end": "326639"
  },
  {
    "text": "infrastructure as code",
    "start": "326639",
    "end": "328240"
  },
  {
    "text": "so the configs that we deploy",
    "start": "328240",
    "end": "331280"
  },
  {
    "text": "are pretty much well understood for",
    "start": "331280",
    "end": "333759"
  },
  {
    "text": "example when the cubelet launches our",
    "start": "333759",
    "end": "335280"
  },
  {
    "text": "workload",
    "start": "335280",
    "end": "336160"
  },
  {
    "text": "we can assert that the configs have been",
    "start": "336160",
    "end": "338240"
  },
  {
    "text": "statically analyzed",
    "start": "338240",
    "end": "339759"
  },
  {
    "text": "hardening measures have been applied and",
    "start": "339759",
    "end": "341680"
  },
  {
    "text": "we can basically account for every bit",
    "start": "341680",
    "end": "343520"
  },
  {
    "text": "in the deployment",
    "start": "343520",
    "end": "345120"
  },
  {
    "text": "however over time entropy reduces that",
    "start": "345120",
    "end": "348000"
  },
  {
    "text": "trust",
    "start": "348000",
    "end": "348800"
  },
  {
    "text": "for example an internet exposed workload",
    "start": "348800",
    "end": "351120"
  },
  {
    "text": "gets attacked",
    "start": "351120",
    "end": "352720"
  },
  {
    "text": "an sre runs cube cuddle exec and",
    "start": "352720",
    "end": "354960"
  },
  {
    "text": "installs some debugging tool",
    "start": "354960",
    "end": "356560"
  },
  {
    "text": "and fails to clean up after themselves",
    "start": "356560",
    "end": "359280"
  },
  {
    "text": "over time this entropy",
    "start": "359280",
    "end": "362160"
  },
  {
    "text": "becomes a problem and observability",
    "start": "362160",
    "end": "364479"
  },
  {
    "text": "verifies the trust that we",
    "start": "364479",
    "end": "366000"
  },
  {
    "text": "place in a system throughout its entire",
    "start": "366000",
    "end": "367759"
  },
  {
    "text": "life cycle until that trust is broken",
    "start": "367759",
    "end": "371120"
  },
  {
    "text": "by some type of compromise that's what",
    "start": "371120",
    "end": "373120"
  },
  {
    "text": "we call detection",
    "start": "373120",
    "end": "376000"
  },
  {
    "text": "so we want to test our security of",
    "start": "376880",
    "end": "380319"
  },
  {
    "text": "assumptions and measure whether the",
    "start": "380319",
    "end": "383280"
  },
  {
    "text": "protections that we're applying are",
    "start": "383280",
    "end": "384960"
  },
  {
    "text": "suitable for the threats that we",
    "start": "384960",
    "end": "386479"
  },
  {
    "text": "actually detect within our environment",
    "start": "386479",
    "end": "389280"
  },
  {
    "text": "so devsecops integrates security into",
    "start": "389280",
    "end": "392960"
  },
  {
    "text": "devops and devops writes tests for code",
    "start": "392960",
    "end": "396639"
  },
  {
    "text": "for example unit testing which is",
    "start": "396639",
    "end": "398720"
  },
  {
    "text": "ensuring that the behavior of a system",
    "start": "398720",
    "end": "400319"
  },
  {
    "text": "is understood",
    "start": "400319",
    "end": "402160"
  },
  {
    "text": "observability continually validates this",
    "start": "402160",
    "end": "404960"
  },
  {
    "text": "behavior",
    "start": "404960",
    "end": "406240"
  },
  {
    "text": "if you have security controls applied",
    "start": "406240",
    "end": "408160"
  },
  {
    "text": "for example a network policy",
    "start": "408160",
    "end": "410479"
  },
  {
    "text": "do you have the observability for",
    "start": "410479",
    "end": "412319"
  },
  {
    "text": "example via network flow logs or dns",
    "start": "412319",
    "end": "414720"
  },
  {
    "text": "queries",
    "start": "414720",
    "end": "415280"
  },
  {
    "text": "to verify that that network policy is",
    "start": "415280",
    "end": "417360"
  },
  {
    "text": "suitable for the type of protections",
    "start": "417360",
    "end": "419120"
  },
  {
    "text": "that are needed",
    "start": "419120",
    "end": "421599"
  },
  {
    "text": "capturing system calls and file system",
    "start": "421599",
    "end": "423360"
  },
  {
    "text": "access from a container",
    "start": "423360",
    "end": "424720"
  },
  {
    "text": "can validate the efficacy of our setcomp",
    "start": "424720",
    "end": "427120"
  },
  {
    "text": "and app armor profiles",
    "start": "427120",
    "end": "429919"
  },
  {
    "text": "on the left we actually have unit",
    "start": "429919",
    "end": "431360"
  },
  {
    "text": "testing and on the right we have the",
    "start": "431360",
    "end": "432639"
  },
  {
    "text": "observability that can test and verify",
    "start": "432639",
    "end": "434880"
  },
  {
    "text": "that unit test",
    "start": "434880",
    "end": "437039"
  },
  {
    "text": "these measurements can continually",
    "start": "437039",
    "end": "438560"
  },
  {
    "text": "inform us whether the protections that",
    "start": "438560",
    "end": "440880"
  },
  {
    "text": "we're",
    "start": "440880",
    "end": "441280"
  },
  {
    "text": "utilizing are sufficient based on the",
    "start": "441280",
    "end": "444800"
  },
  {
    "text": "attacks that we've identified in our",
    "start": "444800",
    "end": "446319"
  },
  {
    "text": "environment",
    "start": "446319",
    "end": "447120"
  },
  {
    "text": "or if we need better protections",
    "start": "447120",
    "end": "451599"
  },
  {
    "start": "450000",
    "end": "519000"
  },
  {
    "text": "so why bpf bpf is really the optimal",
    "start": "451599",
    "end": "455599"
  },
  {
    "text": "tool to provide this observability in",
    "start": "455599",
    "end": "457360"
  },
  {
    "text": "kubernetes",
    "start": "457360",
    "end": "458960"
  },
  {
    "text": "because a pod is just a set of linux",
    "start": "458960",
    "end": "461120"
  },
  {
    "text": "processes running in the context of a",
    "start": "461120",
    "end": "462880"
  },
  {
    "text": "kernel namespace",
    "start": "462880",
    "end": "464319"
  },
  {
    "text": "the pod makes system calls and",
    "start": "464319",
    "end": "466000"
  },
  {
    "text": "implements cni network functions",
    "start": "466000",
    "end": "467919"
  },
  {
    "text": "within the kernel where ebpf resides",
    "start": "467919",
    "end": "471280"
  },
  {
    "text": "ebpfx is a virtual machine in the kernel",
    "start": "471280",
    "end": "473919"
  },
  {
    "text": "with a generic set of 64-bit registers",
    "start": "473919",
    "end": "476560"
  },
  {
    "text": "and evf ebpf programs that are attached",
    "start": "476560",
    "end": "479919"
  },
  {
    "text": "to",
    "start": "479919",
    "end": "480319"
  },
  {
    "text": "kernel code paths this means ebpf can",
    "start": "480319",
    "end": "483520"
  },
  {
    "text": "intercept system call events",
    "start": "483520",
    "end": "485360"
  },
  {
    "text": "and react in real time with fully",
    "start": "485360",
    "end": "487520"
  },
  {
    "text": "programmable logic",
    "start": "487520",
    "end": "489840"
  },
  {
    "text": "using eppf we can build out a detection",
    "start": "489840",
    "end": "492400"
  },
  {
    "text": "program",
    "start": "492400",
    "end": "493280"
  },
  {
    "text": "and the best way to get started is to",
    "start": "493280",
    "end": "495440"
  },
  {
    "text": "work with your red team",
    "start": "495440",
    "end": "496879"
  },
  {
    "text": "or just attack your systems yourself",
    "start": "496879",
    "end": "500080"
  },
  {
    "text": "even as a beginner you can start to",
    "start": "500080",
    "end": "501919"
  },
  {
    "text": "collect the knowledge of tools and",
    "start": "501919",
    "end": "503280"
  },
  {
    "text": "techniques",
    "start": "503280",
    "end": "504080"
  },
  {
    "text": "and use ebpf to detect these these",
    "start": "504080",
    "end": "507440"
  },
  {
    "text": "attacks",
    "start": "507440",
    "end": "508000"
  },
  {
    "text": "and configure alerting options to detect",
    "start": "508000",
    "end": "511199"
  },
  {
    "text": "attacks in real time",
    "start": "511199",
    "end": "512959"
  },
  {
    "text": "but the best way to detect is first",
    "start": "512959",
    "end": "516080"
  },
  {
    "text": "knowing how to attack",
    "start": "516080",
    "end": "520959"
  },
  {
    "text": "so in this talk for detection we are",
    "start": "520959",
    "end": "523279"
  },
  {
    "text": "going to use cilium",
    "start": "523279",
    "end": "524800"
  },
  {
    "text": "and show how it uses evpf to very",
    "start": "524800",
    "end": "527040"
  },
  {
    "text": "efficiently monitor our malicious",
    "start": "527040",
    "end": "528959"
  },
  {
    "text": "network",
    "start": "528959",
    "end": "529680"
  },
  {
    "text": "and process behavior inside of a",
    "start": "529680",
    "end": "531440"
  },
  {
    "text": "kubernetes workload",
    "start": "531440",
    "end": "532880"
  },
  {
    "text": "and give you identity over visibility",
    "start": "532880",
    "end": "535120"
  },
  {
    "text": "into into those malicious behaviors",
    "start": "535120",
    "end": "538240"
  },
  {
    "text": "so a little bit of background psyllium",
    "start": "538240",
    "end": "540399"
  },
  {
    "text": "deploys as a demon set inside of a",
    "start": "540399",
    "end": "542240"
  },
  {
    "text": "kubernetes environment",
    "start": "542240",
    "end": "544080"
  },
  {
    "text": "this means that there is a cilium agent",
    "start": "544080",
    "end": "546080"
  },
  {
    "text": "running on each one of your communities",
    "start": "546080",
    "end": "547920"
  },
  {
    "text": "worker nodes",
    "start": "547920",
    "end": "549360"
  },
  {
    "text": "these agents are communicating with the",
    "start": "549360",
    "end": "551120"
  },
  {
    "text": "kubernetes api server to understand",
    "start": "551120",
    "end": "553600"
  },
  {
    "text": "but identities network policies services",
    "start": "553600",
    "end": "556800"
  },
  {
    "text": "and so on and based on those identities",
    "start": "556800",
    "end": "559839"
  },
  {
    "text": "of each one of the workloads",
    "start": "559839",
    "end": "561519"
  },
  {
    "text": "deployed inside the kubernetes",
    "start": "561519",
    "end": "563440"
  },
  {
    "text": "environment celium generates a",
    "start": "563440",
    "end": "565680"
  },
  {
    "text": "customized and highly efficient ebpf",
    "start": "565680",
    "end": "568080"
  },
  {
    "text": "program to do connectivity",
    "start": "568080",
    "end": "570120"
  },
  {
    "text": "observability and security for those",
    "start": "570120",
    "end": "572640"
  },
  {
    "text": "workloads",
    "start": "572640",
    "end": "574399"
  },
  {
    "text": "serem is able to both enforce what",
    "start": "574399",
    "end": "577440"
  },
  {
    "text": "behavior happened inside of linux system",
    "start": "577440",
    "end": "580320"
  },
  {
    "text": "as well as very efficiently observe that",
    "start": "580320",
    "end": "582399"
  },
  {
    "text": "behavior",
    "start": "582399",
    "end": "583519"
  },
  {
    "text": "it can collect and filter out with",
    "start": "583519",
    "end": "585680"
  },
  {
    "text": "observability data directly in the",
    "start": "585680",
    "end": "587839"
  },
  {
    "text": "in the kernel and export it to user",
    "start": "587839",
    "end": "590160"
  },
  {
    "text": "space as",
    "start": "590160",
    "end": "590959"
  },
  {
    "text": "js and events where it can be sent to",
    "start": "590959",
    "end": "594000"
  },
  {
    "text": "many external system for example cm to",
    "start": "594000",
    "end": "597120"
  },
  {
    "text": "do",
    "start": "597120",
    "end": "597440"
  },
  {
    "text": "investigation and alerting",
    "start": "597440",
    "end": "600560"
  },
  {
    "text": "in this talk we are focusing on the",
    "start": "600560",
    "end": "602320"
  },
  {
    "text": "security use cases and security themes",
    "start": "602320",
    "end": "604880"
  },
  {
    "text": "and how they would like to consume those",
    "start": "604880",
    "end": "606880"
  },
  {
    "text": "data",
    "start": "606880",
    "end": "609200"
  },
  {
    "start": "610000",
    "end": "660000"
  },
  {
    "text": "so this is how our json event looks like",
    "start": "610480",
    "end": "612720"
  },
  {
    "text": "which was exported to user space by an",
    "start": "612720",
    "end": "614800"
  },
  {
    "text": "avpf program",
    "start": "614800",
    "end": "616160"
  },
  {
    "text": "you can see the kubernetes identity over",
    "start": "616160",
    "end": "618240"
  },
  {
    "text": "information like pods",
    "start": "618240",
    "end": "619760"
  },
  {
    "text": "containers labels and theos level",
    "start": "619760",
    "end": "622320"
  },
  {
    "text": "process visibility",
    "start": "622320",
    "end": "623519"
  },
  {
    "text": "information like binary arguments docker",
    "start": "623519",
    "end": "626160"
  },
  {
    "text": "id",
    "start": "626160",
    "end": "626560"
  },
  {
    "text": "and the pid for simplicity we will just",
    "start": "626560",
    "end": "629440"
  },
  {
    "text": "use some python scripts directly",
    "start": "629440",
    "end": "631120"
  },
  {
    "text": "consuming the json events",
    "start": "631120",
    "end": "633120"
  },
  {
    "text": "that would be otherwise sent to an",
    "start": "633120",
    "end": "634560"
  },
  {
    "text": "external system like",
    "start": "634560",
    "end": "636640"
  },
  {
    "text": "cm system like elasticsearch or splunk",
    "start": "636640",
    "end": "640399"
  },
  {
    "text": "in this talk we are going to see two",
    "start": "640399",
    "end": "642320"
  },
  {
    "text": "attacks both happening on a live gk",
    "start": "642320",
    "end": "644560"
  },
  {
    "text": "cluster",
    "start": "644560",
    "end": "645600"
  },
  {
    "text": "in the first one we are going to reach",
    "start": "645600",
    "end": "647360"
  },
  {
    "text": "the host file system and break out from",
    "start": "647360",
    "end": "649279"
  },
  {
    "text": "the container",
    "start": "649279",
    "end": "650560"
  },
  {
    "text": "and on the second one we are going to",
    "start": "650560",
    "end": "652320"
  },
  {
    "text": "download some sensitive data from an",
    "start": "652320",
    "end": "654240"
  },
  {
    "text": "external s3 packet",
    "start": "654240",
    "end": "656000"
  },
  {
    "text": "and for detection we are going to use",
    "start": "656000",
    "end": "658240"
  },
  {
    "text": "ceiling and the power of evpf",
    "start": "658240",
    "end": "660880"
  },
  {
    "start": "660000",
    "end": "1009000"
  },
  {
    "text": "so from an environment perspective let's",
    "start": "660880",
    "end": "663279"
  },
  {
    "text": "assume that jet has already",
    "start": "663279",
    "end": "664959"
  },
  {
    "text": "accessed a gka cluster that's what we",
    "start": "664959",
    "end": "667200"
  },
  {
    "text": "can see on the right terminal",
    "start": "667200",
    "end": "669279"
  },
  {
    "text": "and on the same cluster i have psyllium",
    "start": "669279",
    "end": "671360"
  },
  {
    "text": "set up and running which monitors all",
    "start": "671360",
    "end": "672959"
  },
  {
    "text": "the kubernetes workloads and provide",
    "start": "672959",
    "end": "674839"
  },
  {
    "text": "observability connectivity and security",
    "start": "674839",
    "end": "677360"
  },
  {
    "text": "for them",
    "start": "677360",
    "end": "678560"
  },
  {
    "text": "for simplicity i'm going to use a python",
    "start": "678560",
    "end": "681040"
  },
  {
    "text": "script which would parse all the json",
    "start": "681040",
    "end": "682880"
  },
  {
    "text": "events coming from the kernel and export",
    "start": "682880",
    "end": "684880"
  },
  {
    "text": "it to user space via an ebpf program",
    "start": "684880",
    "end": "687680"
  },
  {
    "text": "and then which would look for malicious",
    "start": "687680",
    "end": "689600"
  },
  {
    "text": "behaviors",
    "start": "689600",
    "end": "691519"
  },
  {
    "text": "now the question is can jed get access",
    "start": "691519",
    "end": "694720"
  },
  {
    "text": "to the host file system",
    "start": "694720",
    "end": "696720"
  },
  {
    "text": "so let's find it out",
    "start": "696720",
    "end": "700079"
  },
  {
    "text": "so the easiest thing to do would be to",
    "start": "700079",
    "end": "701360"
  },
  {
    "text": "spin up a pod with the privileged equals",
    "start": "701360",
    "end": "703440"
  },
  {
    "text": "true flag",
    "start": "703440",
    "end": "704800"
  },
  {
    "text": "note that kubernetes allows us by",
    "start": "704800",
    "end": "706560"
  },
  {
    "text": "default and disables",
    "start": "706560",
    "end": "708160"
  },
  {
    "text": "and this disables all the sandboxing",
    "start": "708160",
    "end": "710079"
  },
  {
    "text": "mechanisms inside of a pod okay let's",
    "start": "710079",
    "end": "716480"
  },
  {
    "text": "apply the privilege pod spec",
    "start": "716480",
    "end": "719920"
  },
  {
    "text": "now we have a privileged pod which gives",
    "start": "720800",
    "end": "722639"
  },
  {
    "text": "us the same permissions as root on the",
    "start": "722639",
    "end": "724480"
  },
  {
    "text": "node",
    "start": "724480",
    "end": "725760"
  },
  {
    "text": "why is this so powerful privilege",
    "start": "725760",
    "end": "728160"
  },
  {
    "text": "enables",
    "start": "728160",
    "end": "729279"
  },
  {
    "text": "the capabilities all of the capabilities",
    "start": "729279",
    "end": "731440"
  },
  {
    "text": "which the pod",
    "start": "731440",
    "end": "732800"
  },
  {
    "text": "as you can see has started this includes",
    "start": "732800",
    "end": "734880"
  },
  {
    "text": "capsis admin which is basically the new",
    "start": "734880",
    "end": "737040"
  },
  {
    "text": "route in linux",
    "start": "737040",
    "end": "739519"
  },
  {
    "text": "and on the left terminal we can see that",
    "start": "739519",
    "end": "741360"
  },
  {
    "text": "the generated evpf program was able to",
    "start": "741360",
    "end": "743760"
  },
  {
    "text": "pick up the new",
    "start": "743760",
    "end": "745120"
  },
  {
    "text": "container that has started we can also",
    "start": "745120",
    "end": "747440"
  },
  {
    "text": "see the privileges that include capsis",
    "start": "747440",
    "end": "749680"
  },
  {
    "text": "admin",
    "start": "749680",
    "end": "752079"
  },
  {
    "text": "so now let's try to cue cuddle exec into",
    "start": "754079",
    "end": "756160"
  },
  {
    "text": "that pod",
    "start": "756160",
    "end": "759839"
  },
  {
    "text": "let's see if we have access to the",
    "start": "760880",
    "end": "762160"
  },
  {
    "text": "host's file system i'm going to run",
    "start": "762160",
    "end": "764000"
  },
  {
    "text": "cat etsy sorry cat proc partitions",
    "start": "764000",
    "end": "767200"
  },
  {
    "text": "and see if we have access to the",
    "start": "767200",
    "end": "768480"
  },
  {
    "text": "resources on that host",
    "start": "768480",
    "end": "773839"
  },
  {
    "text": "here we see that the partitions listed",
    "start": "774240",
    "end": "776160"
  },
  {
    "text": "are actually partitions",
    "start": "776160",
    "end": "777440"
  },
  {
    "text": "from the host and on the left terminal",
    "start": "777440",
    "end": "780880"
  },
  {
    "text": "the generated ebpf",
    "start": "780880",
    "end": "782560"
  },
  {
    "text": "program was able to pick up the",
    "start": "782560",
    "end": "784240"
  },
  {
    "text": "sensitive command detected",
    "start": "784240",
    "end": "787839"
  },
  {
    "text": "so now let's mount the host's file",
    "start": "791760",
    "end": "794079"
  },
  {
    "text": "system inside the container",
    "start": "794079",
    "end": "796240"
  },
  {
    "text": "breaking the boundary between the",
    "start": "796240",
    "end": "797519"
  },
  {
    "text": "container and the host this is also",
    "start": "797519",
    "end": "799760"
  },
  {
    "text": "known",
    "start": "799760",
    "end": "800000"
  },
  {
    "text": "as a container escape",
    "start": "800000",
    "end": "803360"
  },
  {
    "text": "and on the left side we can actually see",
    "start": "803360",
    "end": "805839"
  },
  {
    "text": "the name space the source but then the",
    "start": "805839",
    "end": "807360"
  },
  {
    "text": "container",
    "start": "807360",
    "end": "810000"
  },
  {
    "text": "so now that we have access to the host's",
    "start": "811760",
    "end": "813920"
  },
  {
    "text": "file system",
    "start": "813920",
    "end": "814800"
  },
  {
    "text": "we can just directly cd into that mount",
    "start": "814800",
    "end": "817680"
  },
  {
    "text": "this gives us",
    "start": "817680",
    "end": "818560"
  },
  {
    "text": "direct route privileges over that file",
    "start": "818560",
    "end": "821279"
  },
  {
    "text": "system",
    "start": "821279",
    "end": "821920"
  },
  {
    "text": "which is effectively game over and we",
    "start": "821920",
    "end": "823760"
  },
  {
    "text": "have full root access to the file system",
    "start": "823760",
    "end": "826240"
  },
  {
    "text": "which means that we can mutate things",
    "start": "826240",
    "end": "827920"
  },
  {
    "text": "like you know the roots",
    "start": "827920",
    "end": "829839"
  },
  {
    "text": "bash rc uh we can change we can add",
    "start": "829839",
    "end": "832480"
  },
  {
    "text": "users we can really do whatever we want",
    "start": "832480",
    "end": "834240"
  },
  {
    "text": "at this point",
    "start": "834240",
    "end": "836079"
  },
  {
    "text": "so the continent escape is not the only",
    "start": "836079",
    "end": "838079"
  },
  {
    "text": "thing that you want to monitor for",
    "start": "838079",
    "end": "840000"
  },
  {
    "text": "sadly most of the people are only",
    "start": "840000",
    "end": "841600"
  },
  {
    "text": "looking for this in the second demo we",
    "start": "841600",
    "end": "844079"
  },
  {
    "text": "will detect an attack version is able to",
    "start": "844079",
    "end": "846160"
  },
  {
    "text": "download sensitive data from an external",
    "start": "846160",
    "end": "848240"
  },
  {
    "text": "s3 bucket",
    "start": "848240",
    "end": "849680"
  },
  {
    "text": "from an environment perspective the",
    "start": "849680",
    "end": "851279"
  },
  {
    "text": "setup is the same",
    "start": "851279",
    "end": "852720"
  },
  {
    "text": "so let's assume that jet has access to a",
    "start": "852720",
    "end": "854639"
  },
  {
    "text": "gk cluster",
    "start": "854639",
    "end": "856160"
  },
  {
    "text": "and from a workload perspective he is",
    "start": "856160",
    "end": "858000"
  },
  {
    "text": "currently seeing running application",
    "start": "858000",
    "end": "859680"
  },
  {
    "text": "with multiple services like job posting",
    "start": "859680",
    "end": "861839"
  },
  {
    "text": "and drag reader",
    "start": "861839",
    "end": "862959"
  },
  {
    "text": "and with multiple databases like",
    "start": "862959",
    "end": "864720"
  },
  {
    "text": "elasticsearch and zookeeper",
    "start": "864720",
    "end": "868480"
  },
  {
    "text": "so let's assume that he has already",
    "start": "868880",
    "end": "870720"
  },
  {
    "text": "compromised the core api service and got",
    "start": "870720",
    "end": "873040"
  },
  {
    "text": "into the core api port",
    "start": "873040",
    "end": "874560"
  },
  {
    "text": "that's what we can see on the right",
    "start": "874560",
    "end": "875920"
  },
  {
    "text": "terminal so now he can run our",
    "start": "875920",
    "end": "878399"
  },
  {
    "text": "arbitrary commands to discover the",
    "start": "878399",
    "end": "880079"
  },
  {
    "text": "environment do any lateral movements",
    "start": "880079",
    "end": "882639"
  },
  {
    "text": "connect to external services and get",
    "start": "882639",
    "end": "885199"
  },
  {
    "text": "access to any sensitive data",
    "start": "885199",
    "end": "888079"
  },
  {
    "text": "and on the left terminal i'm going to",
    "start": "888079",
    "end": "890000"
  },
  {
    "text": "run a custom python script which",
    "start": "890000",
    "end": "891839"
  },
  {
    "text": "processes the json events exported by",
    "start": "891839",
    "end": "893920"
  },
  {
    "text": "the ebpf program",
    "start": "893920",
    "end": "895040"
  },
  {
    "text": "directly from the kernel and which",
    "start": "895040",
    "end": "897040"
  },
  {
    "text": "monitors all the malicious behavior",
    "start": "897040",
    "end": "899040"
  },
  {
    "text": "that he will do",
    "start": "899040",
    "end": "902639"
  },
  {
    "text": "so now that i've compromised the pod i'm",
    "start": "903839",
    "end": "905360"
  },
  {
    "text": "going to run the end command to see if",
    "start": "905360",
    "end": "906720"
  },
  {
    "text": "there are any credentials or secrets",
    "start": "906720",
    "end": "908160"
  },
  {
    "text": "mounted in the pod that i can take",
    "start": "908160",
    "end": "909519"
  },
  {
    "text": "advantage of",
    "start": "909519",
    "end": "911680"
  },
  {
    "text": "excellent we can see that there's an aws",
    "start": "911680",
    "end": "913920"
  },
  {
    "text": "access key and secret key as well as an",
    "start": "913920",
    "end": "916000"
  },
  {
    "text": "s3 bucket name that i can use",
    "start": "916000",
    "end": "918160"
  },
  {
    "text": "so ideally secrets are mounted in a",
    "start": "918160",
    "end": "920959"
  },
  {
    "text": "volume",
    "start": "920959",
    "end": "921519"
  },
  {
    "text": "inside the container to avoid having to",
    "start": "921519",
    "end": "923360"
  },
  {
    "text": "restart the container if the secret is",
    "start": "923360",
    "end": "925040"
  },
  {
    "text": "rotated",
    "start": "925040",
    "end": "925680"
  },
  {
    "text": "but in this case i'm able to take",
    "start": "925680",
    "end": "927040"
  },
  {
    "text": "advantage of the fact that they're",
    "start": "927040",
    "end": "928160"
  },
  {
    "text": "environment variables",
    "start": "928160",
    "end": "929759"
  },
  {
    "text": "and on the left left terminal i can see",
    "start": "929759",
    "end": "932320"
  },
  {
    "text": "that",
    "start": "932320",
    "end": "932880"
  },
  {
    "text": "that the sensitive command got picked up",
    "start": "932880",
    "end": "934639"
  },
  {
    "text": "by the generated ebpf program",
    "start": "934639",
    "end": "937040"
  },
  {
    "text": "i can see the namespace the source but",
    "start": "937040",
    "end": "938720"
  },
  {
    "text": "then the container",
    "start": "938720",
    "end": "941839"
  },
  {
    "text": "so let's access the s3 bucket and list",
    "start": "943040",
    "end": "945040"
  },
  {
    "text": "the contents",
    "start": "945040",
    "end": "947680"
  },
  {
    "text": "so here we see three folders",
    "start": "951279",
    "end": "954560"
  },
  {
    "text": "what's this super secret pdf and on the",
    "start": "954560",
    "end": "958000"
  },
  {
    "text": "left side i can see that the sensitive",
    "start": "958000",
    "end": "959920"
  },
  {
    "text": "command get picked up by the generated",
    "start": "959920",
    "end": "961600"
  },
  {
    "text": "ebpf program",
    "start": "961600",
    "end": "964480"
  },
  {
    "text": "so let's download this super secret file",
    "start": "964560",
    "end": "967440"
  },
  {
    "text": "and we can see this was successful",
    "start": "967440",
    "end": "971040"
  },
  {
    "text": "excellent and on the left terminal",
    "start": "971120",
    "end": "974320"
  },
  {
    "text": "i can see that the sensitive command got",
    "start": "974320",
    "end": "976320"
  },
  {
    "text": "picked up by the ebpf program with all",
    "start": "976320",
    "end": "978560"
  },
  {
    "text": "the name speeds the source within the",
    "start": "978560",
    "end": "980000"
  },
  {
    "text": "container",
    "start": "980000",
    "end": "980959"
  },
  {
    "text": "and then the network circuit that was",
    "start": "980959",
    "end": "983279"
  },
  {
    "text": "initiated",
    "start": "983279",
    "end": "984079"
  },
  {
    "text": "was identified as well",
    "start": "984079",
    "end": "987360"
  },
  {
    "text": "so now that we've downloaded this super",
    "start": "987519",
    "end": "989199"
  },
  {
    "text": "secret file let's inspect the contents",
    "start": "989199",
    "end": "991519"
  },
  {
    "text": "and see what it contains",
    "start": "991519",
    "end": "996959"
  },
  {
    "text": "ah",
    "start": "996959",
    "end": "999279"
  },
  {
    "text": "okay i don't know what to say there i'm",
    "start": "1002639",
    "end": "1005759"
  },
  {
    "text": "just like",
    "start": "1005759",
    "end": "1006520"
  },
  {
    "text": "[Music]",
    "start": "1006520",
    "end": "1007920"
  },
  {
    "text": "all right but how do we translate system",
    "start": "1007920",
    "end": "1010800"
  },
  {
    "start": "1009000",
    "end": "1125000"
  },
  {
    "text": "calls and network flows into an attack",
    "start": "1010800",
    "end": "1013120"
  },
  {
    "text": "not everyone has the detection skills to",
    "start": "1013120",
    "end": "1014959"
  },
  {
    "text": "identify an attack based on these",
    "start": "1014959",
    "end": "1016480"
  },
  {
    "text": "signals alone",
    "start": "1016480",
    "end": "1018160"
  },
  {
    "text": "the image on the right comes from a blog",
    "start": "1018160",
    "end": "1019680"
  },
  {
    "text": "post called the pyramid of pain",
    "start": "1019680",
    "end": "1021440"
  },
  {
    "text": "and it identifies the value of detection",
    "start": "1021440",
    "end": "1023600"
  },
  {
    "text": "data progressively from trivial to",
    "start": "1023600",
    "end": "1025520"
  },
  {
    "text": "collect",
    "start": "1025520",
    "end": "1026160"
  },
  {
    "text": "and the relative value that that data",
    "start": "1026160",
    "end": "1027760"
  },
  {
    "text": "provides",
    "start": "1027760",
    "end": "1029360"
  },
  {
    "text": "in a regular environment at the bottom",
    "start": "1029360",
    "end": "1031520"
  },
  {
    "text": "you have a hash of a file",
    "start": "1031520",
    "end": "1033199"
  },
  {
    "text": "if you flip a single bit in a file its",
    "start": "1033199",
    "end": "1034959"
  },
  {
    "text": "hash value completely changes so its",
    "start": "1034959",
    "end": "1036798"
  },
  {
    "text": "value is minimal",
    "start": "1036799",
    "end": "1038480"
  },
  {
    "text": "however in the environment of kubernetes",
    "start": "1038480",
    "end": "1041760"
  },
  {
    "text": "we can start to deploy the concept of",
    "start": "1041760",
    "end": "1043839"
  },
  {
    "text": "immutability",
    "start": "1043839",
    "end": "1045520"
  },
  {
    "text": "immutability enables us to declare",
    "start": "1045520",
    "end": "1047839"
  },
  {
    "text": "patterns to understand the behavior of",
    "start": "1047839",
    "end": "1049600"
  },
  {
    "text": "an object",
    "start": "1049600",
    "end": "1050799"
  },
  {
    "text": "if you need to change an object you",
    "start": "1050799",
    "end": "1052720"
  },
  {
    "text": "don't change it in place or patch it",
    "start": "1052720",
    "end": "1054720"
  },
  {
    "text": "you replace it all together so we can",
    "start": "1054720",
    "end": "1057440"
  },
  {
    "text": "use this immutability to unlock the",
    "start": "1057440",
    "end": "1059360"
  },
  {
    "text": "detection of tactics techniques and",
    "start": "1059360",
    "end": "1060960"
  },
  {
    "text": "procedures",
    "start": "1060960",
    "end": "1061760"
  },
  {
    "text": "or ttps for example if there's an",
    "start": "1061760",
    "end": "1064880"
  },
  {
    "text": "execution of a binary",
    "start": "1064880",
    "end": "1066080"
  },
  {
    "text": "that's not part of the container image",
    "start": "1066080",
    "end": "1068320"
  },
  {
    "text": "we immediately know it's suspicious",
    "start": "1068320",
    "end": "1070880"
  },
  {
    "text": "immutability really brings a lot of",
    "start": "1070880",
    "end": "1072640"
  },
  {
    "text": "benefits to security",
    "start": "1072640",
    "end": "1074400"
  },
  {
    "text": "all the binaries in a container should",
    "start": "1074400",
    "end": "1076080"
  },
  {
    "text": "be packaged into a container image",
    "start": "1076080",
    "end": "1078480"
  },
  {
    "text": "using a hardened base image like",
    "start": "1078480",
    "end": "1080160"
  },
  {
    "text": "distrolus it makes it easy to identify",
    "start": "1080160",
    "end": "1082880"
  },
  {
    "text": "all the binaries in the container and",
    "start": "1082880",
    "end": "1084559"
  },
  {
    "text": "those that should be running",
    "start": "1084559",
    "end": "1086559"
  },
  {
    "text": "downloading binaries in a production",
    "start": "1086559",
    "end": "1088160"
  },
  {
    "text": "container for purposes other than",
    "start": "1088160",
    "end": "1089600"
  },
  {
    "text": "debugging",
    "start": "1089600",
    "end": "1090559"
  },
  {
    "text": "is an anti-pattern so if there's a",
    "start": "1090559",
    "end": "1093840"
  },
  {
    "text": "execution of a",
    "start": "1093840",
    "end": "1095039"
  },
  {
    "text": "binary inside of that container image",
    "start": "1095039",
    "end": "1097360"
  },
  {
    "text": "that isn't",
    "start": "1097360",
    "end": "1098080"
  },
  {
    "text": "part of the container image we",
    "start": "1098080",
    "end": "1100240"
  },
  {
    "text": "immediately know that it's suspect",
    "start": "1100240",
    "end": "1103919"
  },
  {
    "text": "what this further allows is those hash",
    "start": "1104080",
    "end": "1106000"
  },
  {
    "text": "values that are trivial",
    "start": "1106000",
    "end": "1107440"
  },
  {
    "text": "in value actually become very critical",
    "start": "1107440",
    "end": "1110480"
  },
  {
    "text": "inside of an immutable environment",
    "start": "1110480",
    "end": "1112720"
  },
  {
    "text": "because we don't make any changes",
    "start": "1112720",
    "end": "1114640"
  },
  {
    "text": "to any of the files inside of that",
    "start": "1114640",
    "end": "1116400"
  },
  {
    "text": "environment so a change to a hash",
    "start": "1116400",
    "end": "1118799"
  },
  {
    "text": "in the case of immutability might",
    "start": "1118799",
    "end": "1121200"
  },
  {
    "text": "actually become",
    "start": "1121200",
    "end": "1122320"
  },
  {
    "text": "a tactic technique or procedure so",
    "start": "1122320",
    "end": "1125520"
  },
  {
    "start": "1125000",
    "end": "1214000"
  },
  {
    "text": "wrapping up just wanted to kind of go",
    "start": "1125520",
    "end": "1127360"
  },
  {
    "text": "over some of the things that we talked",
    "start": "1127360",
    "end": "1128799"
  },
  {
    "text": "about through this talk",
    "start": "1128799",
    "end": "1130320"
  },
  {
    "text": "so first is that to measure the efficacy",
    "start": "1130320",
    "end": "1133600"
  },
  {
    "text": "of the security in your environment that",
    "start": "1133600",
    "end": "1136000"
  },
  {
    "text": "requires observability",
    "start": "1136000",
    "end": "1138000"
  },
  {
    "text": "so the key thing here is starting to",
    "start": "1138000",
    "end": "1140720"
  },
  {
    "text": "collect",
    "start": "1140720",
    "end": "1141360"
  },
  {
    "text": "the right data so that you're actually",
    "start": "1141360",
    "end": "1143440"
  },
  {
    "text": "going to be positioned",
    "start": "1143440",
    "end": "1144720"
  },
  {
    "text": "to be able to detect the sophisticated",
    "start": "1144720",
    "end": "1147520"
  },
  {
    "text": "attack",
    "start": "1147520",
    "end": "1148160"
  },
  {
    "text": "that occurs within your environment um",
    "start": "1148160",
    "end": "1150720"
  },
  {
    "text": "today we've talked about a couple of",
    "start": "1150720",
    "end": "1152640"
  },
  {
    "text": "kind of simple attacks but the key here",
    "start": "1152640",
    "end": "1155120"
  },
  {
    "text": "is that we're actually measuring that",
    "start": "1155120",
    "end": "1156480"
  },
  {
    "text": "data to be able to detect those things",
    "start": "1156480",
    "end": "1158960"
  },
  {
    "text": "oh and by the way cilium is going to",
    "start": "1158960",
    "end": "1161120"
  },
  {
    "text": "open source the ebpf",
    "start": "1161120",
    "end": "1162720"
  },
  {
    "text": "observability tool that was used today",
    "start": "1162720",
    "end": "1164799"
  },
  {
    "text": "for the demos",
    "start": "1164799",
    "end": "1166640"
  },
  {
    "text": "awesome so when we actually start with",
    "start": "1166640",
    "end": "1168880"
  },
  {
    "text": "this observability we can detect",
    "start": "1168880",
    "end": "1171600"
  },
  {
    "text": "the the types of behavior that we expect",
    "start": "1171600",
    "end": "1173919"
  },
  {
    "text": "in a system",
    "start": "1173919",
    "end": "1174960"
  },
  {
    "text": "when things go wrong for example whether",
    "start": "1174960",
    "end": "1177360"
  },
  {
    "text": "we have a compromise in the environment",
    "start": "1177360",
    "end": "1179520"
  },
  {
    "text": "that's called detection and really if",
    "start": "1179520",
    "end": "1182640"
  },
  {
    "text": "you don't collect this data if you're",
    "start": "1182640",
    "end": "1184320"
  },
  {
    "text": "actually",
    "start": "1184320",
    "end": "1184720"
  },
  {
    "text": "lacking this data hope is your best",
    "start": "1184720",
    "end": "1187600"
  },
  {
    "text": "strategy",
    "start": "1187600",
    "end": "1188640"
  },
  {
    "text": "and if i can take one thing away from",
    "start": "1188640",
    "end": "1191120"
  },
  {
    "text": "the sre book",
    "start": "1191120",
    "end": "1192080"
  },
  {
    "text": "it's that hope is not a good strategy",
    "start": "1192080",
    "end": "1195919"
  },
  {
    "text": "and lastly we just wanted to give a huge",
    "start": "1195919",
    "end": "1198000"
  },
  {
    "text": "shout out to everyone on this slide",
    "start": "1198000",
    "end": "1200240"
  },
  {
    "text": "everyone here has given us either",
    "start": "1200240",
    "end": "1202000"
  },
  {
    "text": "feedback directly",
    "start": "1202000",
    "end": "1203280"
  },
  {
    "text": "or helped us somehow throughout our",
    "start": "1203280",
    "end": "1205200"
  },
  {
    "text": "kubernetes security learning journey",
    "start": "1205200",
    "end": "1207200"
  },
  {
    "text": "this talk wouldn't be what it is without",
    "start": "1207200",
    "end": "1208880"
  },
  {
    "text": "these people so",
    "start": "1208880",
    "end": "1210320"
  },
  {
    "text": "thank you very much thank you",
    "start": "1210320",
    "end": "1216559"
  }
]