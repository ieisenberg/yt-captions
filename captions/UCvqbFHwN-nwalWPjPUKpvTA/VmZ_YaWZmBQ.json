[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "yeah we want to talk today about how we can run VM workload side by side with",
    "start": "0",
    "end": "6839"
  },
  {
    "text": "container workloads I'm the bastard chiller one of the two co-founders of",
    "start": "6839",
    "end": "12650"
  },
  {
    "text": "Lutzer and with me on stage is David",
    "start": "12650",
    "end": "18230"
  },
  {
    "text": "principal engineer Red Hat well the core contributors to the Q Burke project so",
    "start": "18230",
    "end": "24449"
  },
  {
    "text": "let me take it yeah you were stuff all right so I'm going to just kind of give",
    "start": "24449",
    "end": "31500"
  },
  {
    "start": "28000",
    "end": "68000"
  },
  {
    "text": "an overview of the cube root project and what we're doing here so kubernetes kubernetes is a container",
    "start": "31500",
    "end": "37140"
  },
  {
    "text": "platform and Cubert is a virtualization extension for Cooper neighs that allows",
    "start": "37140",
    "end": "43350"
  },
  {
    "text": "us to run virtual machine workload side by side with container workloads and from a really high level what I'm",
    "start": "43350",
    "end": "48809"
  },
  {
    "text": "talking about here is giving Cabernets the same kind of ability to do the use",
    "start": "48809",
    "end": "54629"
  },
  {
    "text": "cases you might use something like an open stack for we get that feedback",
    "start": "54629",
    "end": "60780"
  },
  {
    "text": "maybe backed off a little all right all right so that kind of begs the question",
    "start": "60780",
    "end": "68520"
  },
  {
    "start": "68000",
    "end": "91000"
  },
  {
    "text": "to me why why would we do this we already have on-premise solutions like OpenStack and overt and we have the",
    "start": "68520",
    "end": "75750"
  },
  {
    "text": "public cloud we know how to manage virtual machines there in a Dib s and GC and we've had things like vmware so we",
    "start": "75750",
    "end": "82200"
  },
  {
    "text": "solved this problem with vm management hundred times in a hundred different ways why are we doing it yet again with",
    "start": "82200",
    "end": "88439"
  },
  {
    "text": "Qbert so a couple of reasons first one infrastructure convergence so if you",
    "start": "88439",
    "end": "96540"
  },
  {
    "start": "91000",
    "end": "143000"
  },
  {
    "text": "have legacy virtual machines right now maybe their name and legacy virtual machines maybe you have to develop some",
    "start": "96540",
    "end": "102390"
  },
  {
    "text": "of your applications and virtual machines but you also want to do development in containers as well your",
    "start": "102390",
    "end": "108390"
  },
  {
    "text": "system probably looks like this you're gonna have two stacks one from your virtual machine management maybe that's",
    "start": "108390",
    "end": "113850"
  },
  {
    "text": "running OpenStack for example and a separate one for your container workload management and that's going to be",
    "start": "113850",
    "end": "119340"
  },
  {
    "text": "kubernetes so with two stacks that means you're having to do to duplicate",
    "start": "119340",
    "end": "125009"
  },
  {
    "text": "everything so you're duplicating your logging and metrics you're monitoring you have two schedulers you're gonna",
    "start": "125009",
    "end": "130739"
  },
  {
    "text": "have two networks two storage providers all of this and that operational",
    "start": "130739",
    "end": "136349"
  },
  {
    "text": "complexity comes at a cost the more complex the operation is more costly just to operate so Qbert we're",
    "start": "136349",
    "end": "144840"
  },
  {
    "start": "143000",
    "end": "187000"
  },
  {
    "text": "converging these stacks now you can run virtual machines and container workloads",
    "start": "144840",
    "end": "149970"
  },
  {
    "text": "using kubernetes and we're reusing all the things kubernetes gives us so the",
    "start": "149970",
    "end": "155129"
  },
  {
    "text": "same logging same metrics monitoring the same scheduler the same storage network",
    "start": "155129",
    "end": "160709"
  },
  {
    "text": "they're using for containers you can now use for virtual machines we're even",
    "start": "160709",
    "end": "166260"
  },
  {
    "text": "extending this to things like our back so you create a roll that gives a user",
    "start": "166260",
    "end": "171780"
  },
  {
    "text": "the ability to schedule a pod you can also give the user permissions to create",
    "start": "171780",
    "end": "177150"
  },
  {
    "text": "virtual machines so we're tying in to all the things that Cooper nase gives us today so infrastructure convergence one",
    "start": "177150",
    "end": "184319"
  },
  {
    "text": "stack second reason for couvert workflow",
    "start": "184319",
    "end": "190079"
  },
  {
    "start": "187000",
    "end": "315000"
  },
  {
    "text": "convergence so back in I think was like twenty fourteen or something when I first heard",
    "start": "190079",
    "end": "196139"
  },
  {
    "text": "about kubernetes I didn't quite get it I was working on another cluster manager actually at the time and I saw Cabernets",
    "start": "196139",
    "end": "204090"
  },
  {
    "text": "this just another way they did the same thing that all the other things did and",
    "start": "204090",
    "end": "209220"
  },
  {
    "text": "there was a few things I was missing there and one key part I was missing with the power of this declarative API",
    "start": "209220",
    "end": "215340"
  },
  {
    "text": "so in kubernetes you declare the state",
    "start": "215340",
    "end": "220379"
  },
  {
    "text": "you want and kubernetes converges on that state so for example if you have a deployment and you say you want Tim",
    "start": "220379",
    "end": "226349"
  },
  {
    "text": "replicas of that deployment then kubernetes converges on that it's going to give you ten pods if a node goes down",
    "start": "226349",
    "end": "232709"
  },
  {
    "text": "that's running one of those pods Coover reconvergence on that state and it's going to spin up that tenth pod",
    "start": "232709",
    "end": "239280"
  },
  {
    "text": "somewhere else for you we're allowing virtual machines to be managed using the same declarative pattern in addition to",
    "start": "239280",
    "end": "246510"
  },
  {
    "text": "that we're using all the same tooling that you already use for container workloads to manage virtual machines so",
    "start": "246510",
    "end": "253280"
  },
  {
    "text": "if you're using cube CTL or cube control or cube cuddle I don't know whatever you",
    "start": "253280",
    "end": "258900"
  },
  {
    "text": "call it the command line tool to create a pod like we on the left hand side you see that",
    "start": "258900",
    "end": "264030"
  },
  {
    "text": "you're just creating the pod by defining the manifest and posting it to the cluster that's the same way you manage",
    "start": "264030",
    "end": "271230"
  },
  {
    "text": "your virtual machines on the right hand side you can see an example of us posting a virtual machine manifest to",
    "start": "271230",
    "end": "277470"
  },
  {
    "text": "the cluster and just kind of looking a whole manifest there but you can see it",
    "start": "277470",
    "end": "282570"
  },
  {
    "text": "looks fewer Nettie's like it looks really familiar you're gonna have a metadata section you're gonna have a spec and a status",
    "start": "282570",
    "end": "289170"
  },
  {
    "text": "the kind is a virtual machine instance that's our API that we're registering is a custom resource definition the things",
    "start": "289170",
    "end": "296370"
  },
  {
    "text": "that differ are the things that are in the spec so we have virtual machine specific values in there so workflow",
    "start": "296370",
    "end": "306240"
  },
  {
    "text": "convergence we're allowing virtual machines to be managed with the same declarative API that you're using for containers and you're using the same",
    "start": "306240",
    "end": "312450"
  },
  {
    "text": "tooling so one last thing before I do a",
    "start": "312450",
    "end": "318000"
  },
  {
    "start": "315000",
    "end": "470000"
  },
  {
    "text": "demo I want to talk about the simplicity of our install process Cubert it just",
    "start": "318000",
    "end": "323460"
  },
  {
    "text": "drops into any existing kubernetes cluster it's that simple you don't have to do any sort of node level",
    "start": "323460",
    "end": "329340"
  },
  {
    "text": "configuration there's no changing of runtimes or anything like that it's just going to work so it's as simple as going",
    "start": "329340",
    "end": "336450"
  },
  {
    "text": "to our github page you can find our releases you can take one of those manifests and their releases and you can",
    "start": "336450",
    "end": "343260"
  },
  {
    "text": "just post it to your cluster so cube CTL creates that chef and I have a URL there",
    "start": "343260",
    "end": "348840"
  },
  {
    "text": "and that's one of our release manifests that's going to pull in all of our api's custom resource definitions all of our",
    "start": "348840",
    "end": "355100"
  },
  {
    "text": "components that involve the virtual machine launch flow it's going to install that for you and you didn't have",
    "start": "355100",
    "end": "360960"
  },
  {
    "text": "to think about any of that at that point you can just start using our API start posting virtual machine specs and",
    "start": "360960",
    "end": "367580"
  },
  {
    "text": "virtual machines come up it's it's that easy the reason it's that simple is a key",
    "start": "367580",
    "end": "375120"
  },
  {
    "text": "architecture decision that we made early on and that was so we're going to run virtual machines inside of pods so",
    "start": "375120",
    "end": "383520"
  },
  {
    "text": "that's how we reuse the scheduler reuse everything that kubernetes gives us we're just running a virtual machine",
    "start": "383520",
    "end": "389280"
  },
  {
    "text": "process inside of a pot so when we post a virtual machine instance back",
    "start": "389280",
    "end": "394710"
  },
  {
    "text": "that's our manifest that's our API to the cluster we have a controller behind",
    "start": "394710",
    "end": "400350"
  },
  {
    "text": "the scenes that observes the creation of that object and in response to that is during a pod for that virtual machine",
    "start": "400350",
    "end": "406650"
  },
  {
    "text": "instance process to live in so if in your virtual machine instance manifest",
    "start": "406650",
    "end": "413130"
  },
  {
    "text": "you said you want a fork or machine with ten gigabytes of memory and persistent volume claimed with a virtual machine",
    "start": "413130",
    "end": "419250"
  },
  {
    "text": "disk on it then when our controller generates the pod for that virtual machine to live in it's going to have",
    "start": "419250",
    "end": "425580"
  },
  {
    "text": "all those resources assigned to it when the pod starts up there's a component inside the pod that manages mapping all",
    "start": "425580",
    "end": "433560"
  },
  {
    "text": "of those resources that have been attached to the pod to the virtual machine process that we're starting inside of the pod so the end result here",
    "start": "433560",
    "end": "441930"
  },
  {
    "text": "is we kind of have a virtual machine process in the pod that kind of assumes the role of the pod and they kind of",
    "start": "441930",
    "end": "447990"
  },
  {
    "text": "drive that home with our default networking if you ping the pods IP",
    "start": "447990",
    "end": "453510"
  },
  {
    "text": "address you're actually getting a response from the virtual machine guest",
    "start": "453510",
    "end": "459030"
  },
  {
    "text": "so it's where actually the guest owns that network address the device that C&I",
    "start": "459030",
    "end": "465780"
  },
  {
    "text": "created for it all right so I'm going to do a quick demo real",
    "start": "465780",
    "end": "471930"
  },
  {
    "start": "470000",
    "end": "745000"
  },
  {
    "text": "quick this demo it's been recorded so if you're interested in looking at it again take a picture of that you can play it",
    "start": "471930",
    "end": "478980"
  },
  {
    "text": "back for yourself inspect what I did and and you can even try it out for yourself if you want what I'm going to do is I'm",
    "start": "478980",
    "end": "485520"
  },
  {
    "text": "going to show an example of creating a virtual machine and I'm gonna quickly live migrate that purch machine this so",
    "start": "485520",
    "end": "491550"
  },
  {
    "text": "that's a new feature we have you can live migrate a workload from one node to",
    "start": "491550",
    "end": "496920"
  },
  {
    "text": "another all right so start with we have",
    "start": "496920",
    "end": "505080"
  },
  {
    "text": "two notes because you get that two notes do a migration I'm going to show the",
    "start": "505080",
    "end": "511140"
  },
  {
    "text": "virtual machine instance manifest real quick show you what's going on there this is a full manifest I guess it cut",
    "start": "511140",
    "end": "517469"
  },
  {
    "text": "off a little bit the top that's okay in the spec the only thing that's worth pointing out here is the type of disc that we've defined",
    "start": "517470",
    "end": "524000"
  },
  {
    "text": "here it's a cool feature we have that lets you actually put your disc inside a",
    "start": "524000",
    "end": "529310"
  },
  {
    "text": "container image and you actually can run the disc from a container image so we're",
    "start": "529310",
    "end": "535190"
  },
  {
    "text": "allowing you to run virtual machines and distribute the virtual machine images and container images which is which is",
    "start": "535190",
    "end": "541370"
  },
  {
    "text": "kind of a neat thing all right so I'm going to post this manifested the",
    "start": "541370",
    "end": "548300"
  },
  {
    "text": "cluster we've created the virtual",
    "start": "548300",
    "end": "555590"
  },
  {
    "text": "machine called it VMI my credible we'll take a look real quick at it alright so",
    "start": "555590",
    "end": "563270"
  },
  {
    "text": "we see it scheduling that means the pods been created so let's take a look at the pod all right so that's the virtual",
    "start": "563270",
    "end": "573050"
  },
  {
    "text": "machine instance pod that's where the virtual machine process lives we now look at the VMI object we can see a few",
    "start": "573050",
    "end": "580520"
  },
  {
    "text": "things we see in the event section here we can track the state of the virtual",
    "start": "580520",
    "end": "586700"
  },
  {
    "text": "machine instance as it started so we see that it was successfully created that means the POW was generated and now the",
    "start": "586700",
    "end": "592430"
  },
  {
    "text": "virtual machine process inside that pod has started so for fun I'm going to log",
    "start": "592430",
    "end": "598430"
  },
  {
    "text": "into the console we have a convenience tool called verts ETL and that lets you",
    "start": "598430",
    "end": "604460"
  },
  {
    "text": "do some extended functionality you don't need it to manage your virtual machines but it does allow you to log into the",
    "start": "604460",
    "end": "610520"
  },
  {
    "text": "console which is nice so now I'm inside the virtual machine and when I do here is I'm launching a simple process here",
    "start": "610520",
    "end": "619940"
  },
  {
    "text": "that's it's just a loop echoing some output so what I want to do now is I",
    "start": "619940",
    "end": "626030"
  },
  {
    "text": "want to migrate that virtual machine to another node and a well lock back into the console after I've migrated and show",
    "start": "626030",
    "end": "631790"
  },
  {
    "text": "you that that counter is still ticking it represents a process running inside the virtual machine we know that it",
    "start": "631790",
    "end": "638960"
  },
  {
    "text": "wasn't interrupted so to migrate a virtual machine we have a migration",
    "start": "638960",
    "end": "645890"
  },
  {
    "text": "object that needs to be posted to the cluster that declares that you want this - virtual machine to move",
    "start": "645890",
    "end": "652130"
  },
  {
    "text": "from one to another so if you look at the migrations back it's really simple this one's really simple all I said is",
    "start": "652130",
    "end": "659150"
  },
  {
    "text": "the virtual machine named then once migrate is fee mi gradable and we're just telling it by posting this object",
    "start": "659150",
    "end": "665510"
  },
  {
    "text": "that we want it to move somewhere other than where it is now so we'll post this manifest to the",
    "start": "665510",
    "end": "672860"
  },
  {
    "text": "cluster jobs been created we look at the",
    "start": "672860",
    "end": "681950"
  },
  {
    "text": "pods here we see that another pod has been chariot on a different node and that's the target for this and we do it",
    "start": "681950",
    "end": "688550"
  },
  {
    "text": "described on our VM I again we'll see lots more events so we're tracking the",
    "start": "688550",
    "end": "694550"
  },
  {
    "text": "migration we can see when the target was prepared this happened really fast because the it's a really small virtual",
    "start": "694550",
    "end": "701960"
  },
  {
    "text": "machine then running we can tell when start migrating when it finished migrating when the virtual machine",
    "start": "701960",
    "end": "708170"
  },
  {
    "text": "process is up and running and the target pod so I look at the pods again real",
    "start": "708170",
    "end": "715460"
  },
  {
    "text": "quick I see that the source pod originated in is completed if I log back",
    "start": "715460",
    "end": "720950"
  },
  {
    "text": "into the console work load is still",
    "start": "720950",
    "end": "727610"
  },
  {
    "text": "running",
    "start": "727610",
    "end": "730180"
  },
  {
    "text": "all right when I hand it off to Sebastian I'm interested in - in your use cases for keeper and why you're",
    "start": "732890",
    "end": "739220"
  },
  {
    "text": "interested in the stocks and find me afterwards cool thanks",
    "start": "739220",
    "end": "745040"
  },
  {
    "text": "yeah so and I want to talk a little bit how we are using Hubert to run also",
    "start": "745040",
    "end": "752000"
  },
  {
    "text": "kubernetes cluster on top of a Cuban is cluster so from Lutzer we built Cuba",
    "start": "752000",
    "end": "759830"
  },
  {
    "text": "Matic which is a platform to run kubernetes cluster anywhere so we can run on cloud provider on-premise and",
    "start": "759830",
    "end": "767930"
  },
  {
    "text": "what we saw quite often our secret often especially if you are in the on from environment customer has this huge",
    "start": "767930",
    "end": "776380"
  },
  {
    "text": "bi-metal machines but you want to have not like 10 5 500 gigabyte machine in",
    "start": "776380",
    "end": "783290"
  },
  {
    "text": "one cluster because then you have 10 5 terabyte of memory in the cluster and",
    "start": "783290",
    "end": "789110"
  },
  {
    "text": "this is not working your developer wants to have a small class a development classes the next developer wants to have",
    "start": "789110",
    "end": "794330"
  },
  {
    "text": "a small cluster so what we saw a lot of times is like customers are using old",
    "start": "794330",
    "end": "800660"
  },
  {
    "text": "mistake VMware or others virtualization solution - only for partitioning the",
    "start": "800660",
    "end": "807500"
  },
  {
    "text": "machines into smaller chunks and so the main challenge with this is you must",
    "start": "807500",
    "end": "812810"
  },
  {
    "text": "manage two different platforms you need to manage like OpenStack and on top of",
    "start": "812810",
    "end": "819590"
  },
  {
    "text": "fixes you need to manage q.q bonitas and so when Qbert was announced we were",
    "start": "819590",
    "end": "826880"
  },
  {
    "text": "looking into it and say hmm interesting concept because we were already internally also thinking about country",
    "start": "826880",
    "end": "832820"
  },
  {
    "text": "run a KVM inside of a pot and let that VM join one of our clusters so it was",
    "start": "832820",
    "end": "839180"
  },
  {
    "text": "more or less similar ideas and we were saying cool let's see how where this is",
    "start": "839180",
    "end": "844670"
  },
  {
    "text": "going and potentially we can integrate this for some use cases to streamline",
    "start": "844670",
    "end": "852020"
  },
  {
    "text": "and to make the API at our customers and say usability much more easier so that",
    "start": "852020",
    "end": "857810"
  },
  {
    "text": "we really have the possibility to run everything with Cuban ideas so only tool what you need is Q control and you don't",
    "start": "857810",
    "end": "864470"
  },
  {
    "text": "need different tooling to manages one managing all and the other big side",
    "start": "864470",
    "end": "870980"
  },
  {
    "text": "effect of this is I think it's unrealistically in the next year's to get everything inside of a container you",
    "start": "870980",
    "end": "876410"
  },
  {
    "text": "still have like virtualization workloads but then you have like David mentioned the unified platform you can run your",
    "start": "876410",
    "end": "882980"
  },
  {
    "text": "queue bonitas cluster you run can run you can antennas inside and you can also side by side your VM workloads so we are",
    "start": "882980",
    "end": "892189"
  },
  {
    "start": "891000",
    "end": "1056000"
  },
  {
    "text": "quite actively in the cluster API I'm not sure who is familiar with the cluster API okay only a few I will give",
    "start": "892189",
    "end": "900470"
  },
  {
    "text": "you a rough overview so the idea of the cluster API it's a zigg of Q Benitez to create a",
    "start": "900470",
    "end": "907699"
  },
  {
    "text": "declarative API to spinning up Q bonitas cluster and one part of this is the",
    "start": "907699",
    "end": "914240"
  },
  {
    "text": "Machine API and I will show you how we integrated cube word into the machine",
    "start": "914240",
    "end": "920240"
  },
  {
    "text": "API so the main concept of the machine API is to make really machines natively",
    "start": "920240",
    "end": "925790"
  },
  {
    "text": "available inside of cuban eaters so that you can do Cube control create machines or even like queue control a machine did",
    "start": "925790",
    "end": "932959"
  },
  {
    "text": "create machine deployment and cuban eaters will manage and generate all of your machines and this cube control",
    "start": "932959",
    "end": "940459"
  },
  {
    "text": "create machines should run everywhere the same it doesn't matter if you are in the cloud on AWS on google or if you are",
    "start": "940459",
    "end": "947779"
  },
  {
    "text": "on firm on with cube vert or VMware or",
    "start": "947779",
    "end": "953540"
  },
  {
    "text": "even when you're using tools like mass you have an API for your bi-metal machines you could also do this",
    "start": "953540",
    "end": "958910"
  },
  {
    "text": "integration with super metal machines directly so the main component here is a",
    "start": "958910",
    "end": "964430"
  },
  {
    "text": "machine it's a decorative point to describe how your machine should be",
    "start": "964430",
    "end": "970220"
  },
  {
    "text": "configure like with cubelet version you want to have yeah how to provision a new",
    "start": "970220",
    "end": "975740"
  },
  {
    "text": "node and then what we have is a machine controller who watches on this object on this machine objects so when you create",
    "start": "975740",
    "end": "982339"
  },
  {
    "text": "a new machine the machine controller will detects us and then yeah we will do",
    "start": "982339",
    "end": "987649"
  },
  {
    "text": "the necessary stuff and then at the end create a VM in this case on Qbert or",
    "start": "987649",
    "end": "993889"
  },
  {
    "text": "like on your cloud provider and afterwards when you delete the machine also deletes a VM a",
    "start": "993889",
    "end": "1000130"
  },
  {
    "text": "again and how did we implement this so our machine controller is open source",
    "start": "1000130",
    "end": "1007150"
  },
  {
    "text": "it's when you check on the cluster API repository you find a link to it or you can find it also at the end of our",
    "start": "1007150",
    "end": "1013510"
  },
  {
    "text": "presentation there's a link to it and mainly it has six methods we might we",
    "start": "1013510",
    "end": "1021640"
  },
  {
    "text": "must implement the two main methods are create and delete so we must create a",
    "start": "1021640",
    "end": "1027720"
  },
  {
    "text": "custom resource definition for cube vert and then Qbert is picking it up and we must delete it and some other smaller",
    "start": "1027720",
    "end": "1035410"
  },
  {
    "text": "functions to do this but because this is so generic it took us like two having a",
    "start": "1035410",
    "end": "1041140"
  },
  {
    "text": "first POC running with cube word three days of development and then we already could run kubernetes cluster with cuban",
    "start": "1041140",
    "end": "1050800"
  },
  {
    "text": "eaters on on top of per metal machines and this is what I want to show you now so in the backend I spin up the master",
    "start": "1050800",
    "end": "1059380"
  },
  {
    "start": "1056000",
    "end": "1308000"
  },
  {
    "text": "with our to Cuba Matic so the master some we're running and then I'm running",
    "start": "1059380",
    "end": "1065740"
  },
  {
    "text": "this machine controller and now this is checking all the time if there any",
    "start": "1065740",
    "end": "1071620"
  },
  {
    "text": "changes and then execute this changes and on the one side I have my user we",
    "start": "1071620",
    "end": "1079960"
  },
  {
    "text": "call it user cluster where as a developer want to deploy some workload on it so it's a normal cube Anita's",
    "start": "1079960",
    "end": "1092080"
  },
  {
    "text": "cluster in this case we use flannel as an overlay and I have my metal mask a",
    "start": "1092080",
    "end": "1099280"
  },
  {
    "text": "cluster where everything should run on top of it and so what I already did here",
    "start": "1099280",
    "end": "1104920"
  },
  {
    "text": "as I said",
    "start": "1104920",
    "end": "1108150"
  },
  {
    "text": "I created already a machine deployment so we have a machine deployment with two",
    "start": "1111410",
    "end": "1117590"
  },
  {
    "text": "replicas and this is then mapped to a machine set in the provider you see",
    "start": "1117590",
    "end": "1123500"
  },
  {
    "text": "already is Qbert so similar like poor",
    "start": "1123500",
    "end": "1129200"
  },
  {
    "text": "deployment and pots in Cuban eaters we now have a machine set so that we can",
    "start": "1129200",
    "end": "1134780"
  },
  {
    "text": "also do rolling upgrades of the machine and then based on the Machine set we",
    "start": "1134780",
    "end": "1141320"
  },
  {
    "text": "generate the machines and then what we",
    "start": "1141320",
    "end": "1146630"
  },
  {
    "text": "technically do is like we play see custom resource comes custom resources",
    "start": "1146630",
    "end": "1152390"
  },
  {
    "text": "for the cube light controller for the Qbert controller and the Qbert",
    "start": "1152390",
    "end": "1157520"
  },
  {
    "text": "controller is picking this up and spinning up the machine so when we're looking here that's now the biometric",
    "start": "1157520",
    "end": "1165500"
  },
  {
    "text": "last EAC cube word is running with the API and they control us and you see also",
    "start": "1165500",
    "end": "1170710"
  },
  {
    "text": "two instances launched for worker notes so when we now do Cube get notes you",
    "start": "1170710",
    "end": "1180740"
  },
  {
    "text": "know this is a master but we have two worker nodes running here and what we also can now add we can create a new",
    "start": "1180740",
    "end": "1193659"
  },
  {
    "text": "machine deployment so now when we do",
    "start": "1193659",
    "end": "1199370"
  },
  {
    "text": "cube get machines we will see now there",
    "start": "1199370",
    "end": "1205250"
  },
  {
    "text": "aren't two new machines created potentially we see it students it looks",
    "start": "1205250",
    "end": "1211179"
  },
  {
    "text": "yeah you see here it's processing the entries which is created and now when we",
    "start": "1211179",
    "end": "1217520"
  },
  {
    "text": "check on the biometric roster we have",
    "start": "1217520",
    "end": "1223000"
  },
  {
    "text": "four virtual machines running it now takes a little bit time to start this up and that's a are ready to join it takes",
    "start": "1223000",
    "end": "1229250"
  },
  {
    "text": "now for five minutes so that they're ready to join but then all of this is running and see",
    "start": "1229250",
    "end": "1236330"
  },
  {
    "text": "developers can use the small cluster for the development purposes and we could",
    "start": "1236330",
    "end": "1242059"
  },
  {
    "text": "easily easily do",
    "start": "1242059",
    "end": "1245559"
  },
  {
    "text": "we could easily also scale the replicas so scale it up scale it down change also",
    "start": "1253730",
    "end": "1260080"
  },
  {
    "text": "where do we have it here you see the configuration like you see cloud",
    "start": "1260080",
    "end": "1268730"
  },
  {
    "text": "provider its Qbert and then you have to some specification for it you see the amount of memory CPU so and you see the",
    "start": "1268730",
    "end": "1276740"
  },
  {
    "text": "couplet version so when we now want to run an upgrade our cluster we only would change the couplet version and then the",
    "start": "1276740",
    "end": "1283340"
  },
  {
    "text": "machine deployment up deployment will generate a new machine set and will generate new machines and so the old VMs",
    "start": "1283340",
    "end": "1290120"
  },
  {
    "text": "will be terminated and cubed Q Bert will create new new machines out of this",
    "start": "1290120",
    "end": "1298809"
  },
  {
    "text": "let's see if they're already there yeah still still in process so and it's if",
    "start": "1301299",
    "end": "1310940"
  },
  {
    "start": "1308000",
    "end": "1523000"
  },
  {
    "text": "you're interesting in the implementation the implementation is quite easy it's",
    "start": "1310940",
    "end": "1316159"
  },
  {
    "text": "like in total it was 350 lines of code to integrate this it's currently POC but",
    "start": "1316159",
    "end": "1326059"
  },
  {
    "text": "you can of course try this out and it's running you can run it this on a",
    "start": "1326059",
    "end": "1331490"
  },
  {
    "text": "miniature cluster and connect this with your bare metal cluster and now we really have the possibility to manage a",
    "start": "1331490",
    "end": "1338690"
  },
  {
    "text": "lot of smaller clusters on top of such big PerR metal machines and can provide",
    "start": "1338690",
    "end": "1343840"
  },
  {
    "text": "developers like one or two nodes cube anita's cluster instead of trying only",
    "start": "1343840",
    "end": "1352090"
  },
  {
    "text": "multi-tenancy with namespaces so now one developer can run already on one on 11 the next developer who wants to use",
    "start": "1352090",
    "end": "1358490"
  },
  {
    "text": "already one or 12 or 13 can can already deploy this and they can indeed individually decide ok when it's the",
    "start": "1358490",
    "end": "1365059"
  },
  {
    "text": "best time to upgrade and as an operation from operation perspective I only need",
    "start": "1365059",
    "end": "1371870"
  },
  {
    "text": "true control and perhaps third control but even this so like when I'm currently",
    "start": "1371870",
    "end": "1377360"
  },
  {
    "text": "working with like cloud provider I barely use their CLI because with this",
    "start": "1377360",
    "end": "1384169"
  },
  {
    "text": "you can already use queue control to manage everything because when VM dies you don't care it's",
    "start": "1384169",
    "end": "1390320"
  },
  {
    "text": "automatically restarting a new one so I'm not really looking into what's happening in the VM as long as C VMs",
    "start": "1390320",
    "end": "1395950"
  },
  {
    "text": "contain a runtime installed and the couplet is running on top of it it's joining and that's the only thing as a",
    "start": "1395950",
    "end": "1403100"
  },
  {
    "text": "developer perspective I'm interested in to it so and also in most cases from the operational side so really having one to",
    "start": "1403100",
    "end": "1410600"
  },
  {
    "text": "to manage all of this also in your per metal environment and like we already",
    "start": "1410600",
    "end": "1417110"
  },
  {
    "text": "discussed was far beyond like potentially if you want to run CI - it's on cloud providers and you want to use",
    "start": "1417110",
    "end": "1423950"
  },
  {
    "text": "bigger machines this could be also possibility running nested on cloud",
    "start": "1423950",
    "end": "1429799"
  },
  {
    "text": "provider by using like peckers running on their infrastructure so then you can",
    "start": "1429799",
    "end": "1435289"
  },
  {
    "text": "easily deploy this on the infrastructure with cube hood and having VMs and then",
    "start": "1435289",
    "end": "1440539"
  },
  {
    "text": "additional you really have this benefit if you need a dedicated VM you can spin",
    "start": "1440539",
    "end": "1445610"
  },
  {
    "text": "it up side-by-side and they're on the same network they can talk to each other you don't must think about okay how do I",
    "start": "1445610",
    "end": "1451850"
  },
  {
    "text": "now get my traffic from outside of my kubernetes cluster inside my cubans cluster they could work on the same",
    "start": "1451850",
    "end": "1459159"
  },
  {
    "text": "network same storage and all this kind of stuff",
    "start": "1459159",
    "end": "1465490"
  },
  {
    "text": "yeah as I said these are the two main links the cube vert repository and the",
    "start": "1470330",
    "end": "1477720"
  },
  {
    "text": "Machine controller it's it's a POC it's not polished yet our our setup so you",
    "start": "1477720",
    "end": "1485220"
  },
  {
    "text": "must do make deploy but in general it's working you can use mini Clube mini cube or they",
    "start": "1485220",
    "end": "1491250"
  },
  {
    "text": "are also some terror from suspending up cube anita's cluster and you can connect this with a bi-metal cluster and then",
    "start": "1491250",
    "end": "1497670"
  },
  {
    "text": "you easily can try this out play around if you want to have feedback create a PR",
    "start": "1497670",
    "end": "1504720"
  },
  {
    "text": "or contact us we also have a booth there if you want to talk about this was",
    "start": "1504720",
    "end": "1510270"
  },
  {
    "text": "really interesting about feedback if you see a use case in your environment we're",
    "start": "1510270",
    "end": "1516780"
  },
  {
    "text": "really interesting to see ok where this can go because we think there is a lot of potential in this yeah that's it so",
    "start": "1516780",
    "end": "1525120"
  },
  {
    "start": "1523000",
    "end": "2016000"
  },
  {
    "text": "we would now open it up for Q&A [Applause]",
    "start": "1525120",
    "end": "1536069"
  },
  {
    "text": "test test okay Hubert's very new it's something that's being actively",
    "start": "1552100",
    "end": "1558590"
  },
  {
    "text": "developed from you know last year up until now so it's we're just getting to the part where we're starting to see",
    "start": "1558590",
    "end": "1564980"
  },
  {
    "text": "people actually adopting it we've seen and I think most of the interests that",
    "start": "1564980",
    "end": "1571100"
  },
  {
    "text": "we've seen is people that have traditional workloads they're wearing a virtual machines that want to converge on top of cooper neighs",
    "start": "1571100",
    "end": "1577550"
  },
  {
    "text": "because they want the ability to have into that operational simplicity that was talking about as far as specifics go",
    "start": "1577550",
    "end": "1585560"
  },
  {
    "text": "I don't have any examples I can share right now yeah it's KVM shirt",
    "start": "1585560",
    "end": "1600549"
  },
  {
    "text": "so the question is what kind of overhead does Cooper nays introduced for KVM",
    "start": "1614630",
    "end": "1623300"
  },
  {
    "text": "there's not a lot of overhead so you have the kubernetes components that are",
    "start": "1623300",
    "end": "1628590"
  },
  {
    "text": "running on site on top of the bare metal and we're launching virtual machines",
    "start": "1628590",
    "end": "1635400"
  },
  {
    "text": "inside the container environment and so you have things like cgroups they're involved there and just any sort",
    "start": "1635400",
    "end": "1643560"
  },
  {
    "text": "of it's going to depend on how you've figure cluster so the perform is going",
    "start": "1643560",
    "end": "1649320"
  },
  {
    "text": "to depend on how fast your containerized environment is so what kind of c and i plug in your using and things like that",
    "start": "1649320",
    "end": "1656330"
  },
  {
    "text": "but from a cpu performance perspective we're reusing what kubernetes gives us",
    "start": "1656330",
    "end": "1661650"
  },
  {
    "text": "so Cooper neighs has more time I like overcommit and things like that some of the things people think about with",
    "start": "1661650",
    "end": "1667560"
  },
  {
    "text": "virtual machines we're reusing the same quality of service that qu Bernays",
    "start": "1667560",
    "end": "1673890"
  },
  {
    "text": "provides us if you have request limits and things like that and we are able to",
    "start": "1673890",
    "end": "1679230"
  },
  {
    "text": "do like CPU pinning because kubernetes provides us cpu pinning so we're trying",
    "start": "1679230",
    "end": "1684360"
  },
  {
    "text": "to leverage all the things kubernetes gets us for performance yeah",
    "start": "1684360",
    "end": "1691760"
  },
  {
    "text": "the question is how we're implementing live migration we're using key mu so",
    "start": "1695419",
    "end": "1702240"
  },
  {
    "text": "we're just tunneling it through the lot of migration features that Kimia already provide us right yeah absolutely so the",
    "start": "1702240",
    "end": "1716549"
  },
  {
    "text": "questions about PCI pass through again yeah we're definitely interested in that that's the same sort of thing where we",
    "start": "1716549",
    "end": "1723450"
  },
  {
    "text": "need kubernetes functionality for that let's go over here yeah",
    "start": "1723450",
    "end": "1730669"
  },
  {
    "text": "to storage local storage",
    "start": "1735630",
    "end": "1740390"
  },
  {
    "text": "in a cluster does this require Adam you",
    "start": "1744950",
    "end": "1758210"
  },
  {
    "text": "want to answer that",
    "start": "1758210",
    "end": "1760658"
  },
  {
    "text": "I don't know if I can carry it forward I",
    "start": "1765910",
    "end": "1771070"
  },
  {
    "text": "can okay all right yes so basically cube",
    "start": "1771070",
    "end": "1778330"
  },
  {
    "text": "verges uses all the native kubernetes facilities so any storage that's available to the cluster whether it be",
    "start": "1778330",
    "end": "1785650"
  },
  {
    "text": "host path or local storage or statically provisioned persistent volumes dynamic",
    "start": "1785650",
    "end": "1792460"
  },
  {
    "text": "provisioning CSI any of the the mechanisms that are available today would be compatible with this so how",
    "start": "1792460",
    "end": "1801250"
  },
  {
    "text": "much time do we have good question 20 we",
    "start": "1801250",
    "end": "1806620"
  },
  {
    "text": "have 20 minutes oh it's 11:20 I'm not sure I guess let's kick us off any more questions yeah",
    "start": "1806620",
    "end": "1816570"
  },
  {
    "text": "absolutely so the question is our multiple NIC supported through something like Malta's we support Malta",
    "start": "1818070",
    "end": "1824070"
  },
  {
    "text": "specifically actually so yes you same five minutes okay any more questions",
    "start": "1824070",
    "end": "1830740"
  },
  {
    "text": "yeah there's Andale",
    "start": "1830740",
    "end": "1834450"
  },
  {
    "text": "sure so the question is is keeper compatible with service messages such as",
    "start": "1841420",
    "end": "1847580"
  },
  {
    "text": "sto we have lots of different networking options and we have a specific networking option that plays nicely was",
    "start": "1847580",
    "end": "1854210"
  },
  {
    "text": "sto and that's one of our use cases that we are definitely interested in so yes",
    "start": "1854210",
    "end": "1859550"
  },
  {
    "text": "we do play nice with this do ya the",
    "start": "1859550",
    "end": "1870770"
  },
  {
    "text": "question is how to dynamically provision virtual machines there's lots of ways of doing that cloud in it like you",
    "start": "1870770",
    "end": "1877220"
  },
  {
    "text": "mentioned we we support that directly and so you can actually define your cloud in its script inline in the",
    "start": "1877220",
    "end": "1883280"
  },
  {
    "text": "virtual machine instance manifest and you can also we support I believe",
    "start": "1883280",
    "end": "1888460"
  },
  {
    "text": "writing your cloud in it into a grenade secret so if you have like a huge script I can get like a megabyte orthis don't",
    "start": "1888460",
    "end": "1895580"
  },
  {
    "text": "recommend that but you can you can write like a megabyte worth of cloud Anette data there yes like we did with some",
    "start": "1895580",
    "end": "1902210"
  },
  {
    "text": "machine controller so we generate the machine controllers generating the cloud",
    "start": "1902210",
    "end": "1907370"
  },
  {
    "text": "init file and then the VM knows how to configure as a container run time and",
    "start": "1907370",
    "end": "1913430"
  },
  {
    "text": "the couplets and joining the cluster we",
    "start": "1913430",
    "end": "1920000"
  },
  {
    "text": "can further questions",
    "start": "1920000",
    "end": "1923440"
  },
  {
    "text": "so the question is have we considered writing a live vert runtime",
    "start": "1941880",
    "end": "1949300"
  },
  {
    "text": "I like container runtime it's equivalent and have it where we launch virtual",
    "start": "1949300",
    "end": "1954790"
  },
  {
    "text": "machines from like a centralized levert on the host we considered that but that",
    "start": "1954790",
    "end": "1960900"
  },
  {
    "text": "that removes some of the simplicity that I was talking about where we just reuse",
    "start": "1960900",
    "end": "1966310"
  },
  {
    "text": "everything that's already given us we play nicely with all container runtimes and that would prevent us from being a",
    "start": "1966310",
    "end": "1972190"
  },
  {
    "text": "drop-in solution which is what we're really going for question Cubert support",
    "start": "1972190",
    "end": "1984940"
  },
  {
    "text": "Windows I'm assuming you're talking about Windows guests yeah we we definitely support Windows that's an",
    "start": "1984940",
    "end": "1990250"
  },
  {
    "text": "important use case to us is even part of our CI environment right now more",
    "start": "1990250",
    "end": "1997810"
  },
  {
    "text": "questions perfect so yeah thanks for your time and",
    "start": "1997810",
    "end": "2004760"
  },
  {
    "text": "yeah we'll be here also available afterwards or come to our booth",
    "start": "2004760",
    "end": "2010110"
  },
  {
    "text": "Lutz its closest in say",
    "start": "2010110",
    "end": "2013549"
  }
]