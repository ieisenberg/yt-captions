[
  {
    "start": "0",
    "end": "75000"
  },
  {
    "text": "so this is asked to sub out for you vile uh i it was my intention that we shall switch her back in at some point",
    "start": "240",
    "end": "7040"
  },
  {
    "text": "uh otherwise we have a very manly panel and no one wants that so let's start with",
    "start": "7040",
    "end": "13280"
  },
  {
    "text": "um victor here so again for everyone who will have heard uh i think everyone here but louise had",
    "start": "13280",
    "end": "19680"
  },
  {
    "text": "a chance to have a chat today uh some earlier in the morning than the others so if you don't mind please uh just a",
    "start": "19680",
    "end": "25439"
  },
  {
    "text": "little quick introduction to yourself two sentences and we'll pass the mic down the panel as we go all right it's",
    "start": "25439",
    "end": "30960"
  },
  {
    "text": "working um i'm victor i work as a developer of the care.com um doing all things around",
    "start": "30960",
    "end": "36640"
  },
  {
    "text": "cloud connectivity api kubernetes cloud native all this type of stuff um i feed",
    "start": "36640",
    "end": "42079"
  },
  {
    "text": "this in one sentence beautiful depends where you put your commas yep hey i'm william morgan uh one of the",
    "start": "42079",
    "end": "48640"
  },
  {
    "text": "creators of linkery you probably remember me from the very boring keynote this morning",
    "start": "48640",
    "end": "54480"
  },
  {
    "text": "i'm ivalkojavi i'm the chief architect in solo io uh hi i'm louis ryan uh um i guess one",
    "start": "55199",
    "end": "62480"
  },
  {
    "text": "of the early founders of istio and i work at google hey i'm thomas groff cto and co-founder",
    "start": "62480",
    "end": "68960"
  },
  {
    "text": "isovalent creator of psyllium and long-time kernel maintainer developer whatever",
    "start": "68960",
    "end": "76000"
  },
  {
    "start": "75000",
    "end": "183000"
  },
  {
    "text": "all right so can we bring the mic down to william please because i want to ask first of all that's you uh about the",
    "start": "76000",
    "end": "82960"
  },
  {
    "text": "uh for people with a shorter memory in the ecosystem space here linker d",
    "start": "82960",
    "end": "89280"
  },
  {
    "text": "started out as a single proxy that ran per node and then",
    "start": "89280",
    "end": "94320"
  },
  {
    "text": "there was a sort of a skunk works project perhaps if i characterize that right called conduit with the idea of moving to a sidecar",
    "start": "94320",
    "end": "101119"
  },
  {
    "text": "model and that eventually became blinker d version two which is what we're all used to today could you recount please",
    "start": "101119",
    "end": "106720"
  },
  {
    "text": "william a little bit of the history behind why you made that first move and then why you eventually made the migration to a sidecar model sure yeah",
    "start": "106720",
    "end": "114159"
  },
  {
    "text": "so you know linker d was a very first service mesh and the way we started out was with uh some",
    "start": "114159",
    "end": "119680"
  },
  {
    "text": "scala technology that we had imported from twitter so we were on the jvm and jvm was awesome at a lot of things but",
    "start": "119680",
    "end": "126799"
  },
  {
    "text": "it was not very awesome at being small and tiny so you know the recommendation for the linker d1.x was for you to run",
    "start": "126799",
    "end": "133200"
  },
  {
    "text": "it on a per host basis you could actually run it inside cars but it was like 150 megs so you know if you had a",
    "start": "133200",
    "end": "138879"
  },
  {
    "text": "giant application that was kind of okay you got a tiny application it kind of sucked um and we had a lot of problems from our",
    "start": "138879",
    "end": "146239"
  },
  {
    "text": "early adopters who were uh adding it to their kubernetes stack on a per host model operational problems primarily you",
    "start": "146239",
    "end": "152400"
  },
  {
    "text": "know things around upgrades and and and um uh and maintenance and you know when",
    "start": "152400",
    "end": "157760"
  },
  {
    "text": "something went wrong trying to figure out where that was so we eventually for that and other reasons like craig",
    "start": "157760",
    "end": "163120"
  },
  {
    "text": "mentioned we uh we end up rewriting everything and and we now have a data plane that you know is designed to be in",
    "start": "163120",
    "end": "169120"
  },
  {
    "text": "a sidecar wren and rust and we have a control plane some go and increasingly have some rust in it i wrote a longer version of this in an info queue article",
    "start": "169120",
    "end": "175760"
  },
  {
    "text": "so if you google for like service mesh lessons learned or something you'll you'll find it in there but that's kind",
    "start": "175760",
    "end": "180800"
  },
  {
    "text": "of the basic history and then louis perhaps uh if you wouldn't mind giving a sort of a rundown",
    "start": "180800",
    "end": "187440"
  },
  {
    "start": "183000",
    "end": "273000"
  },
  {
    "text": "on the secret internal google thing that we promised not to talk about the istio was",
    "start": "187440",
    "end": "192480"
  },
  {
    "text": "in some way sort of based on the idea of putting the sidecar next to the workload",
    "start": "192480",
    "end": "198159"
  },
  {
    "text": "and why that was important to us we talked about it publicly sure yeah it's fine just don't name it yeah well no we",
    "start": "198159",
    "end": "203760"
  },
  {
    "text": "talked about it we called envelope and esf or whatever but yeah i mean we you know at google we have a very large",
    "start": "203760",
    "end": "210799"
  },
  {
    "text": "fleet of stuff and we needed a common set of services that would abstract some of the interfaces in front of those",
    "start": "210799",
    "end": "216799"
  },
  {
    "text": "applications and trying to roll out libraries and updates throughout that fleet would just be massively massively",
    "start": "216799",
    "end": "223440"
  },
  {
    "text": "expensive and so it you know the idea of creating you know value as a sidecar",
    "start": "223440",
    "end": "228480"
  },
  {
    "text": "service that sits in front of your application as an abstraction layer to provide you know support for",
    "start": "228480",
    "end": "234080"
  },
  {
    "text": "cross-cutting concerns whether it was quotas and rate limiting or whether it was content transformation or protocol",
    "start": "234080",
    "end": "239360"
  },
  {
    "text": "transformation or you know if you wanted to introduce a new security mechanism into the transport layer right so they were you",
    "start": "239360",
    "end": "245439"
  },
  {
    "text": "know we had a lot of those use cases and you know at google scale that like the management of that became",
    "start": "245439",
    "end": "250640"
  },
  {
    "text": "extraordinarily important um you know so you could kind of consider it as google's legacy problem",
    "start": "250640",
    "end": "256320"
  },
  {
    "text": "right um and you know google in you know the software in production tends to update",
    "start": "256320",
    "end": "261359"
  },
  {
    "text": "update quite regularly and is rebuilt very regularly but we still consider this to be a kind of legacy workload and",
    "start": "261359",
    "end": "268320"
  },
  {
    "text": "you know framework management problem and that's why we introduced sitecars to solve that problem",
    "start": "268320",
    "end": "274000"
  },
  {
    "start": "273000",
    "end": "433000"
  },
  {
    "text": "all right so as so as not to sort of mischaracterize",
    "start": "274000",
    "end": "279120"
  },
  {
    "text": "what thomas is talking about before there's currently no intention to get rid of the layer 7 proxy there is a goal",
    "start": "279120",
    "end": "284479"
  },
  {
    "text": "that perhaps that the functionality could one day be moved into the kernel everything seems to run quicker there i",
    "start": "284479",
    "end": "290080"
  },
  {
    "text": "want to dig into the idea of the the psyllium service mesh idea saying well we'll move some of that down",
    "start": "290080",
    "end": "295840"
  },
  {
    "text": "we might still have to run one proxy per node versus running one proxy per side car",
    "start": "295840",
    "end": "302720"
  },
  {
    "text": "uh there are some tenancy concerns that were brought up when this discussion first happened so",
    "start": "302720",
    "end": "307759"
  },
  {
    "text": "i don't know if it's it's probably better for you to summarize them than me thomas if you would so the idea of",
    "start": "307759",
    "end": "314320"
  },
  {
    "text": "what do you gain by doing this and what things do you think you lose if we're moving to a model where all of the layer",
    "start": "314320",
    "end": "319919"
  },
  {
    "text": "7 processing is still done by a proxy envoy in this case but it's now done by one per node rather than one per process",
    "start": "319919",
    "end": "327199"
  },
  {
    "text": "per sidecar yes i think very important is that we don't necessarily need to do everything in kernel and ebpf to gain",
    "start": "327199",
    "end": "333919"
  },
  {
    "text": "some benefits a good example is we can do in kernel ebpf http visibility and",
    "start": "333919",
    "end": "339840"
  },
  {
    "text": "pure ebpf and the gains are massive but we cannot do layer 7 retries or low",
    "start": "339840",
    "end": "344880"
  },
  {
    "text": "balancing yet but that does not mean that we shouldn't do the visibility part getting open",
    "start": "344880",
    "end": "350080"
  },
  {
    "text": "telemetry metrics and traces almost for free is amazing so to the question of",
    "start": "350080",
    "end": "355680"
  },
  {
    "text": "the the the proxy so we love envoy sirium has been integrating with envoy",
    "start": "355680",
    "end": "361120"
  },
  {
    "text": "forever matt i love you you've built a great proxy we've been",
    "start": "361120",
    "end": "366240"
  },
  {
    "text": "using envoy to leverage and enforce layer 7 policies for years and it's been in production for years",
    "start": "366240",
    "end": "371919"
  },
  {
    "text": "the multi-tenancy aspect is very interesting um because the discussion we're having right now is very similar",
    "start": "371919",
    "end": "377680"
  },
  {
    "text": "to the one when vms and containers were or containers were",
    "start": "377680",
    "end": "382880"
  },
  {
    "text": "replacing virtual machines one of the immediate concerns was what about multi-tenancy what if my apps share the",
    "start": "382880",
    "end": "388720"
  },
  {
    "text": "same operating system who controls memory who controls cpu who controls access to all of these resources and we",
    "start": "388720",
    "end": "394560"
  },
  {
    "text": "re we was required that we built a model multi-tenancy angle into the operating system into linux that's what we call",
    "start": "394560",
    "end": "400319"
  },
  {
    "text": "containers today and we got a lot out of it we actually got better control out of it because now we can do we can do fair",
    "start": "400319",
    "end": "406880"
  },
  {
    "text": "cueing we can actually share memory and do best effort and so on so i think that's actually the benefit so just",
    "start": "406880",
    "end": "413039"
  },
  {
    "text": "because um the sidecar model was once the right approach doesn't mean that we shouldn't question it and we shouldn't",
    "start": "413039",
    "end": "419280"
  },
  {
    "text": "look at potentially introducing a multi-tenant proxy also it's not necessarily one",
    "start": "419280",
    "end": "424880"
  },
  {
    "text": "proxy per node it could be one proxy per name space one proxy per uh service account or some other granularity that",
    "start": "424880",
    "end": "431759"
  },
  {
    "text": "makes sense the kernel has a way for people to run",
    "start": "431759",
    "end": "438639"
  },
  {
    "text": "multi-tenant things it's called user space it's called processes at which point do we get the idea of",
    "start": "438639",
    "end": "446000"
  },
  {
    "text": "envoys written in c plus kernels written in c plus plus why don't we just make envoy a kernel module",
    "start": "446000",
    "end": "452800"
  },
  {
    "text": "i think what we probably is actually very close to this um i think envoy running envoy in part of the kernel",
    "start": "452800",
    "end": "458880"
  },
  {
    "text": "you'll probably face some rejection so when you say we have this concept of um",
    "start": "458880",
    "end": "464639"
  },
  {
    "text": "multi-tenancy user space yes that's one of the two answers the other answer is c groups and namespace and that's what containers are what we propose is",
    "start": "464639",
    "end": "471280"
  },
  {
    "text": "essentially this envoy actually has a great design and it's very close to what the kernel does it's multi-threaded and",
    "start": "471280",
    "end": "477520"
  },
  {
    "text": "it's very siloed the kernel has the capability to run individual",
    "start": "477520",
    "end": "482720"
  },
  {
    "text": "intuitive threats of an application in separate c groups so we can run part of a single envoy instance in the c group",
    "start": "482720",
    "end": "490080"
  },
  {
    "text": "off the part and we get the the cpu accounting automatically um",
    "start": "490080",
    "end": "495520"
  },
  {
    "text": "accounted for in the c group of the part that's amazing right because that's exactly like as mentioned before with",
    "start": "495520",
    "end": "501039"
  },
  {
    "text": "layer seven cpu is the bottleneck like http processing is very cpu and intensive so you definitely don't want",
    "start": "501039",
    "end": "507440"
  },
  {
    "text": "all of your cpu off the note to be used up by a single single proxy and louie perhaps you might like to",
    "start": "507440",
    "end": "513599"
  },
  {
    "text": "contrast some of the things in envoy that you think don't necessarily work so well on the multi-tenant yeah i mean there was a",
    "start": "513599",
    "end": "519200"
  },
  {
    "text": "you know uh thomas i and tim had a bit of a back and forth on twitter about",
    "start": "519200",
    "end": "524240"
  },
  {
    "text": "this um it took a long time for all that to happen in the kernel it's a lot of engineering work",
    "start": "524240",
    "end": "530959"
  },
  {
    "text": "and there are a lot of ancillary concerns that come in because it's not just this process or this request or this",
    "start": "530959",
    "end": "537040"
  },
  {
    "text": "thing that i have to deal with it's the whole configuration space the shared memory space it's a lot of complexity for envoy to",
    "start": "537040",
    "end": "543120"
  },
  {
    "text": "take on and like that doesn't exist today it's yeah um so i you know",
    "start": "543120",
    "end": "550240"
  },
  {
    "text": "like reasonable people can disagree on that front i'm a little skeptical about when and if that would be viable like as",
    "start": "550240",
    "end": "557120"
  },
  {
    "text": "you've all mentioned you know there's what holes today and they're what might hold two years from now so you know",
    "start": "557120",
    "end": "562640"
  },
  {
    "text": "right now i don't think it's practical um and you know i think",
    "start": "562640",
    "end": "567760"
  },
  {
    "text": "what we do with user space with good acceleration from ebpf to get data into user space as efficiently as possible",
    "start": "567760",
    "end": "573440"
  },
  {
    "text": "you know gets us very close to that anyway in terms or should get us very close to",
    "start": "573440",
    "end": "578880"
  },
  {
    "text": "that in terms of efficiency um i'm not going to say side cars don't have problems right we're all aware of",
    "start": "578880",
    "end": "584640"
  },
  {
    "text": "the total cost of ownership issues like lifecycle and maintenance but you still have to maintain",
    "start": "584640",
    "end": "590480"
  },
  {
    "text": "one running on the node and there's granularity issues so right there are right now i'm just a little skeptical of",
    "start": "590480",
    "end": "597120"
  },
  {
    "text": "you know vaping the solution you know i'm happy to be proven wrong but right now that's not where i would be you know",
    "start": "597120",
    "end": "602959"
  },
  {
    "text": "placing my dollars in bets but thomas is free to spend his money how he likes um",
    "start": "602959",
    "end": "608480"
  },
  {
    "text": "so yeah that's that's that's where we are but we'll obviously you know keep talking and see how this develops but",
    "start": "608480",
    "end": "613519"
  },
  {
    "text": "right now that's where i'm at now not everyone on the stage is spending their dollars on envoy in",
    "start": "613519",
    "end": "618800"
  },
  {
    "start": "615000",
    "end": "775000"
  },
  {
    "text": "general i know that there is work happening to support rust in the linux kernel though i know that vlankerdeep",
    "start": "618800",
    "end": "624959"
  },
  {
    "text": "proxy's written in rust is there any synergy between this is there any chance that you'd consider internal options for",
    "start": "624959",
    "end": "631680"
  },
  {
    "text": "the length of the proxy yeah that's a good question you know to a certain extent right you know linker d doesn't use odd voice like i don't really have a",
    "start": "631680",
    "end": "638560"
  },
  {
    "text": "direct horse in this race although it's interesting to listen in um i think for me you know would we",
    "start": "638560",
    "end": "643920"
  },
  {
    "text": "consider you know running stuff in the kernel i mean i guess you know i guess we consider",
    "start": "643920",
    "end": "649360"
  },
  {
    "text": "everything that the would you consider expanding the link of the proxy to become its own operating system well",
    "start": "649360",
    "end": "654720"
  },
  {
    "text": "yeah i think we should import the kernel of course into the proxy and you know it's a lot simpler that way no i think",
    "start": "654720",
    "end": "660240"
  },
  {
    "text": "for me the the question is always you know what's the actual user benefit that that we're getting and and i happen to",
    "start": "660240",
    "end": "666480"
  },
  {
    "text": "be someone who loves the sidecar model i think it's a really elegant model it has some",
    "start": "666480",
    "end": "671600"
  },
  {
    "text": "implementation issues in kubernetes especially when it comes to like ordering and things like that there's stuff that has to be fixed",
    "start": "671600",
    "end": "677920"
  },
  {
    "text": "there's annoying aspects of it but i think as a model i actually love it so if someone were to come to me and say i want a sidecar free service mesh like",
    "start": "677920",
    "end": "685279"
  },
  {
    "text": "why like what you know what you're prescribing an implementation what problem are you actually trying to solve is it like you want to reduce complexity",
    "start": "685279",
    "end": "691839"
  },
  {
    "text": "okay well then why don't you say that i want a simpler service mesh oh is it taking too much memory okay why don't you say that i want a smaller service",
    "start": "691839",
    "end": "698079"
  },
  {
    "text": "mesh right so i think from my perspective we've tried very hard to make the linker d proxy and",
    "start": "698079",
    "end": "703519"
  },
  {
    "text": "implementation detail it's not something you have to think about we don't even give it a good name it's got like a terrible name and it's not meant to be",
    "start": "703519",
    "end": "710240"
  },
  {
    "text": "consumed by anyone outside of linker d and i tried very hard to to have users have that mindset too you know it's not something that you're directly",
    "start": "710240",
    "end": "716079"
  },
  {
    "text": "manipulating you know and in tuning except in extreme cases so i actually don't really care like i could follow",
    "start": "716079",
    "end": "722160"
  },
  {
    "text": "that same theme yes we could put stuff in the kernel or we could put it in outer space and you know",
    "start": "722160",
    "end": "727839"
  },
  {
    "text": "what i care about the most is what's the operational you know kind of impact of all that and when the user is",
    "start": "727839",
    "end": "733440"
  },
  {
    "text": "maintaining their service mesh and they're operating it and they have to upgrade it or like there's a problem and they have to trace it down you know try",
    "start": "733440",
    "end": "739200"
  },
  {
    "text": "trace trace it to its uh its root cause like what does that actually entail and so far the sidecar model has been",
    "start": "739200",
    "end": "746480"
  },
  {
    "text": "beautiful for that i think you know in my opinion it's been it's been a really nice way of doing that and it ties that",
    "start": "746480",
    "end": "752079"
  },
  {
    "text": "functionality to the kind of the your mental model of your application anyways right like you want to change something",
    "start": "752079",
    "end": "757360"
  },
  {
    "text": "in one service while you change it on that service you know and and the further we get away from that the harder it is for me",
    "start": "757360",
    "end": "763040"
  },
  {
    "text": "personally to to think that you would maintain that same kind of operational uh uh simplicity but i i'm like a babe",
    "start": "763040",
    "end": "770639"
  },
  {
    "text": "in the woods when it comes to these discussions so you know i'm happy to learn",
    "start": "770639",
    "end": "776240"
  },
  {
    "text": "if anyone has any questions that i'd like to pose to the panel please do stand in front of the microphone over there",
    "start": "776240",
    "end": "781760"
  },
  {
    "text": "while you make your way there i'd like to bring back into the discussion and say that",
    "start": "781760",
    "end": "786959"
  },
  {
    "text": "kumar and kong's mesh play based on envoy but not based on sdo",
    "start": "786959",
    "end": "792720"
  },
  {
    "text": "you have the benefit of having seen some of this play out over time you have the benefit perhaps of the project having come up in a world where ebpf was",
    "start": "792720",
    "end": "799680"
  },
  {
    "text": "perhaps a nascent possibility what design decisions did you make looking at",
    "start": "799680",
    "end": "805120"
  },
  {
    "text": "linker d looking at istio the meshes that were out there at the time that sort of relate to the space in deciding",
    "start": "805120",
    "end": "810720"
  },
  {
    "text": "how to arrange your proxies for example so kuma is relatively new project",
    "start": "810720",
    "end": "816480"
  },
  {
    "text": "comparing to istio and even linker d and definitely we learn a lot of things",
    "start": "816480",
    "end": "822399"
  },
  {
    "text": "designing kuma and idea around the kuma always was developer experience we want",
    "start": "822399",
    "end": "828160"
  },
  {
    "text": "to like i want to share the same sentiment with william around we really want to people have a simpler mesh with",
    "start": "828160",
    "end": "835519"
  },
  {
    "text": "the benefits of having service mesh capabilities that they know because the people already have some",
    "start": "835519",
    "end": "841440"
  },
  {
    "text": "experience with envoy uh people have experience understanding and getting out of it a lot of things there's a plenty",
    "start": "841440",
    "end": "848000"
  },
  {
    "text": "of the protocol supported including some of the l4 protocols some people running like",
    "start": "848000",
    "end": "853440"
  },
  {
    "text": "more and more like workloads like mongodb and kafka in in things and some of the things that",
    "start": "853440",
    "end": "858800"
  },
  {
    "text": "no one actually mentioned yet and i probably would be it's a very unpopular thing and running",
    "start": "858800",
    "end": "865600"
  },
  {
    "text": "like your production workloads on windows and i think for yourself exactly so um",
    "start": "865600",
    "end": "872720"
  },
  {
    "text": "and uh the the running uh similar like same experience for developers in in the mesh uh in",
    "start": "872720",
    "end": "879440"
  },
  {
    "text": "regardless on operating system that you're running in production um and that the flexibility that gives us like a",
    "start": "879440",
    "end": "885839"
  },
  {
    "text": "side car capabilities is something that we're really getting benefits plus we",
    "start": "885839",
    "end": "891360"
  },
  {
    "text": "simplified a we're not trying to abuse crds like that much um and we want you to use the crds only",
    "start": "891360",
    "end": "898560"
  },
  {
    "text": "for the things that are really important to configure um so that's that's the only thing like kuma tries to be like",
    "start": "898560",
    "end": "905199"
  },
  {
    "text": "developer friendly and put a lot of pointers into you know how you can get simpler mesh",
    "start": "905199",
    "end": "910480"
  },
  {
    "start": "910000",
    "end": "995000"
  },
  {
    "text": "okay well we're going to take an audience question now i think it's a question to thomas",
    "start": "910480",
    "end": "917519"
  },
  {
    "text": "in the case of layer 7 traffic what perform besides memory footprint",
    "start": "917519",
    "end": "924160"
  },
  {
    "text": "what is the performance advantage of option two versions option one you were showing before",
    "start": "924160",
    "end": "929759"
  },
  {
    "text": "yeah i will i will publish the slide so you can see uh the specific differences in terms of visibility it makes a",
    "start": "929759",
    "end": "935680"
  },
  {
    "text": "massive difference i i don't have the exact numbers in my head right now but it was in the single digit percentage",
    "start": "935680",
    "end": "942000"
  },
  {
    "text": "for like overhead for in kernel http visibility and the latency was 2 3x 4x bigger for a proxy",
    "start": "942000",
    "end": "951279"
  },
  {
    "text": "for the visibility case we also measured the the psyllium envoy filter against the istional filter maybe that's an",
    "start": "951279",
    "end": "957519"
  },
  {
    "text": "unfair comparison because the on the psyllium on white filter is massively simpler compared to the",
    "start": "957519",
    "end": "962880"
  },
  {
    "text": "uh istio on y filter in that in that environment or in that in from that perspective um there is i think a",
    "start": "962880",
    "end": "968880"
  },
  {
    "text": "feature feature imbalance there i think that the gain is definitely as soon as we can go in",
    "start": "968880",
    "end": "974399"
  },
  {
    "text": "kernel we're talking almost no overhead which is the appeal right and i think the other appeal is",
    "start": "974399",
    "end": "980959"
  },
  {
    "text": "that we can provide this type of visibility for protocols enterprise protocols that a proxy does not support",
    "start": "980959",
    "end": "988000"
  },
  {
    "text": "a proxy is typically very limited to tcp and enterprises obviously speak a variety of other network protocols as",
    "start": "988000",
    "end": "994480"
  },
  {
    "text": "well and sorry follow-up question and in the case of for example you were saying that",
    "start": "994480",
    "end": "1000160"
  },
  {
    "start": "995000",
    "end": "1053000"
  },
  {
    "text": "it's harder for layer seven like retries and routing so on",
    "start": "1000160",
    "end": "1005680"
  },
  {
    "text": "how do you do you have any any estimation so i think for things like retries",
    "start": "1005680",
    "end": "1010800"
  },
  {
    "text": "circuit breaking whenever it is about connection splicing or replaying traffic",
    "start": "1010800",
    "end": "1016000"
  },
  {
    "text": "i think the combination of ebpf and envoy will be the answer where it is i think was lewis said correctly it's",
    "start": "1016000",
    "end": "1022000"
  },
  {
    "text": "about leveraging ebpf to inject envoy better and quicker and",
    "start": "1022000",
    "end": "1027120"
  },
  {
    "text": "faster and not require this very expensive network-based injection of the sidecar proxy and what to loose it was",
    "start": "1027120",
    "end": "1033678"
  },
  {
    "text": "actually very very accurate and i think a couple of years ago the complexity of solving what's needed to make this",
    "start": "1033679",
    "end": "1039760"
  },
  {
    "text": "happen would have been very hard what changed is ebpf because we can now integrate envoy into the kernel without",
    "start": "1039760",
    "end": "1045918"
  },
  {
    "text": "kernel changes and that's a massive massive difference which makes this feasible and",
    "start": "1045919",
    "end": "1051360"
  },
  {
    "text": "approachable thank you very much all right we have another question and",
    "start": "1051360",
    "end": "1056720"
  },
  {
    "start": "1053000",
    "end": "1180000"
  },
  {
    "text": "then we'll talk about something something fun don't tell you what it is yet",
    "start": "1056720",
    "end": "1062799"
  },
  {
    "text": "okay i think um i should have passed this at ebpf day yesterday but then how would you compare uh calico ebpf with celium",
    "start": "1062799",
    "end": "1072640"
  },
  {
    "text": "but maybe not strictly a service mesh related uh question but with combination of you know uh using envoy with celium",
    "start": "1072640",
    "end": "1079280"
  },
  {
    "text": "versus i'll allow you 15 seconds to 15 seconds so solium has native onward integration",
    "start": "1079280",
    "end": "1084640"
  },
  {
    "text": "calico is not and there's a couple of features missing in eb calico data path vpf that's the short answer okay",
    "start": "1084640",
    "end": "1092080"
  },
  {
    "text": "thank you all right so in the web browser we have the javascript runtime and through a",
    "start": "1092080",
    "end": "1099360"
  },
  {
    "text": "sequence of events we decided that we could basically re-implement a turing-complete machine dot dot",
    "start": "1099360",
    "end": "1105120"
  },
  {
    "text": "webassembly so we now have a mechanism for running doom quake whatever you want",
    "start": "1105120",
    "end": "1110320"
  },
  {
    "text": "in the web browser or probably doing some actual real work as well uh the google team",
    "start": "1110320",
    "end": "1115760"
  },
  {
    "text": "on working on this dear envoy especially led a lot of work to add support for web assembly into the envoy proxy allowing",
    "start": "1115760",
    "end": "1123039"
  },
  {
    "text": "arbitrary code to be run giving the safety taking the safety models of the webassembly sandbox",
    "start": "1123039",
    "end": "1128640"
  },
  {
    "text": "putting that inside the the concept of the proxy so put that aside for a second we have the colonel",
    "start": "1128640",
    "end": "1135840"
  },
  {
    "text": "and that if you're going to ask a question i'm going to demand that you come and ask ask it from the stage please um",
    "start": "1135840",
    "end": "1141200"
  },
  {
    "text": "put us that aside for a second and say we now have these points in the kernel where as i",
    "start": "1141200",
    "end": "1146559"
  },
  {
    "text": "understand and thomas and i spoke about this on a podcast back in january there are certain extension points you can say",
    "start": "1146559",
    "end": "1152160"
  },
  {
    "text": "send me a message when this thing happens and there are a certain set of things that you can say why don't we get to a point where we can",
    "start": "1152160",
    "end": "1158720"
  },
  {
    "text": "run a webassembly-like thing if not actually webassembly in the kernel and we can",
    "start": "1158720",
    "end": "1163919"
  },
  {
    "text": "implement a turing complete thing to what uval was saying where we're able to arbitrarily hook anything and we can",
    "start": "1163919",
    "end": "1169600"
  },
  {
    "text": "rewrite envoy in javascript and run it in the kernel and get all these benefits and not have to worry about the",
    "start": "1169600",
    "end": "1174799"
  },
  {
    "text": "arbitrary split between we can do certain things on packets but we can't do them on streams",
    "start": "1174799",
    "end": "1181120"
  },
  {
    "start": "1180000",
    "end": "1229000"
  },
  {
    "text": "i think that discussion is actually exactly happening with rust and not with ebpf but there are people that want",
    "start": "1181120",
    "end": "1187520"
  },
  {
    "text": "exactly this like ebpf has been specifically designed to not be able to crash your kernel and a big part of this",
    "start": "1187520",
    "end": "1193520"
  },
  {
    "text": "is you have to run to completion you can loop but loop needs to be bounded it means that",
    "start": "1193520",
    "end": "1199039"
  },
  {
    "text": "whatever program can run as an ebpf program needs to be safe needs to be",
    "start": "1199039",
    "end": "1204400"
  },
  {
    "text": "guaranteed to complete which is why ebpf on its own is not enough like why the combination of envoy and ebpf makes",
    "start": "1204400",
    "end": "1210559"
  },
  {
    "text": "sense it's essentially when we get to the level of complexity where it's not possible bpf we go to to",
    "start": "1210559",
    "end": "1216799"
  },
  {
    "text": "to envoy for the full touring complete version of this discussion or the the",
    "start": "1216799",
    "end": "1222240"
  },
  {
    "text": "upstream consensus is now currently leaning towards just enabling rust in the linux kernel but that's probably a",
    "start": "1222240",
    "end": "1227520"
  },
  {
    "text": "couple of years out so i might just pass it down to yuval if we can but the",
    "start": "1227520",
    "end": "1233280"
  },
  {
    "text": "my understanding of the rust support in the linux kernel is basically to allow you to write parts of the kernel in rust",
    "start": "1233280",
    "end": "1239200"
  },
  {
    "text": "not necessarily to arbitrarily inject rust into the kernel at runtime uh please if that's not correct like please",
    "start": "1239200",
    "end": "1245679"
  },
  {
    "text": "tell me what okay so so that that's fine but again that comes down to installing a kernel module re um",
    "start": "1245679",
    "end": "1252799"
  },
  {
    "text": "recompiling your own kernel perhaps so that's not necessarily as simple as upload a module like we might expect",
    "start": "1252799",
    "end": "1258240"
  },
  {
    "text": "today like uval perhaps is there a way that you see being able to safely run",
    "start": "1258240",
    "end": "1263679"
  },
  {
    "text": "arbitrary things that maybe don't run to completion being a possibility in the 2025 kind of vision you have",
    "start": "1263679",
    "end": "1270320"
  },
  {
    "text": "there is a way definitely just um you want to guarantee that yeah sorry oh",
    "start": "1270320",
    "end": "1276400"
  },
  {
    "text": "closer yeah so you want to guarantee that a certain program doesn't bring the whole kernel",
    "start": "1276400",
    "end": "1281440"
  },
  {
    "text": "into a halt right so you need to find a way for example with web assembly to",
    "start": "1281440",
    "end": "1287360"
  },
  {
    "text": "help it terminate while still running it in native speeds right which means that you'll have to",
    "start": "1287360",
    "end": "1293200"
  },
  {
    "text": "instrument the web assembly in order so the program itself will stop whether",
    "start": "1293200",
    "end": "1299360"
  },
  {
    "text": "somebody is structured in such a way it's actually not horribly hard to do",
    "start": "1299360",
    "end": "1305200"
  },
  {
    "text": "webassembly does have infinite loops but infinite loops are basically the i",
    "start": "1305200",
    "end": "1310880"
  },
  {
    "text": "think the only way you can jump backwards right so if we instrument those loops and edge checks have we",
    "start": "1310880",
    "end": "1317919"
  },
  {
    "text": "people familiar with blockchains and web3 kind of add the gas concept into webassembly",
    "start": "1317919",
    "end": "1323840"
  },
  {
    "text": "we could potentially provide you know a budget for a weber survey program to run and once it exceeds this budget",
    "start": "1323840",
    "end": "1331679"
  },
  {
    "text": "stop it you know return an error have some some semantics around what happens in case of you know run it running out",
    "start": "1331679",
    "end": "1338000"
  },
  {
    "text": "of gas right and to do that it's it's not that hard conceptually you have to instrument",
    "start": "1338000",
    "end": "1343360"
  },
  {
    "text": "the webassembly program and eject opcodes in the cases where it can recurse and it can",
    "start": "1343360",
    "end": "1350000"
  },
  {
    "text": "loop but those cases are pretty limited as far as webassembly goes",
    "start": "1350000",
    "end": "1356640"
  },
  {
    "text": "i've seen some papers around it in the internet i believe some of them from the izu community you're probably familiar",
    "start": "1356640",
    "end": "1362240"
  },
  {
    "text": "with those better than me and so it's definitely possible i don't know if anybody's working on this or not",
    "start": "1362240",
    "end": "1367520"
  },
  {
    "text": "but but that would be the concept yeah so i'm interested obviously in the",
    "start": "1367520",
    "end": "1374240"
  },
  {
    "start": "1370000",
    "end": "1455000"
  },
  {
    "text": "the fact that a lot of people are moving stuff out of the kernel a lot of things network",
    "start": "1374240",
    "end": "1379840"
  },
  {
    "text": "processing and so on packet processing is being offloaded to specific hardware where there are user",
    "start": "1379840",
    "end": "1385520"
  },
  {
    "text": "space programs that are able to access them a lot of the conversation that we're having here is effectively we need to move things back into the kernel in",
    "start": "1385520",
    "end": "1391520"
  },
  {
    "text": "order to get things to be sped up is this the right direction is there a way of",
    "start": "1391520",
    "end": "1397280"
  },
  {
    "text": "uh like we talked before about kubernetes needing to support running sidecars is there a way that we as a community can petition the linux",
    "start": "1397280",
    "end": "1404640"
  },
  {
    "text": "developers uh and thomas your friends in that community to to solve this problem in such a way where we don't have to",
    "start": "1404640",
    "end": "1410720"
  },
  {
    "text": "think about it so much as as moving things into the kernel but just making the things we're running in our sidecar",
    "start": "1410720",
    "end": "1416240"
  },
  {
    "text": "model run quicker i think what you're asking is can we get like a unified approach yeah i'd like a",
    "start": "1416240",
    "end": "1423360"
  },
  {
    "text": "pony please yeah like everything i know there's different approaches right there's the",
    "start": "1423360",
    "end": "1428480"
  },
  {
    "text": "dp dedicated data path development kit that helps you kind of bring things directly from",
    "start": "1428480",
    "end": "1434960"
  },
  {
    "text": "the network r2 user mode there's actually all sorts of models uh there's vpp and there's ebpf",
    "start": "1434960",
    "end": "1442240"
  },
  {
    "text": "you know it's kind of all in flux right now and eventually i believe there will be consolidation i'm not too much of an",
    "start": "1442240",
    "end": "1449600"
  },
  {
    "text": "expert with the other stuff so if anybody else wants to comment on that",
    "start": "1449600",
    "end": "1454480"
  },
  {
    "start": "1455000",
    "end": "1526000"
  },
  {
    "text": "i think this is an interesting topic we see a massive shift back from user space processing back into the coral and the",
    "start": "1455919",
    "end": "1462080"
  },
  {
    "text": "reason is containers virtual machines were essentially machines and we had to kind of it didn't matter whether it was the kernel or the",
    "start": "1462080",
    "end": "1468320"
  },
  {
    "text": "user space doing whatever processing was required applications directly interface with the kernel and packets data needs to go",
    "start": "1468320",
    "end": "1475600"
  },
  {
    "text": "through the kernel there is no additional operating system that's running in the vm as in the virtual machine model and this is what's why",
    "start": "1475600",
    "end": "1482000"
  },
  {
    "text": "making ebpf is so interesting because it's directly integrated into the kernel that's also the difference of ebpf with",
    "start": "1482000",
    "end": "1488720"
  },
  {
    "text": "other languages like webassembly ebpf is specifically for the linux and now windows kernel and its main value is",
    "start": "1488720",
    "end": "1495520"
  },
  {
    "text": "that it can interact with the kernel with the operating system so it can take shortcuts it can do processing",
    "start": "1495520",
    "end": "1502000"
  },
  {
    "text": "it does not have to for example we talk about vbp or other dpdk-based applications yes they do processing and",
    "start": "1502000",
    "end": "1507760"
  },
  {
    "text": "user space but then in order to deliver that data into the application you have to either change the applications which",
    "start": "1507760",
    "end": "1514159"
  },
  {
    "text": "most uh users are not willing to do or have to go back through into the kernel and because of the rise of containers",
    "start": "1514159",
    "end": "1519679"
  },
  {
    "text": "we're seeing more and more processing essentially go back into the kernel with",
    "start": "1519679",
    "end": "1526400"
  },
  {
    "start": "1526000",
    "end": "1593000"
  },
  {
    "text": "ebpf yeah i mean i i think your pony is going to be a hybrid right it's going to be like a a z-donk or something",
    "start": "1526840",
    "end": "1534159"
  },
  {
    "text": "yes uh a mule i don't know right any foundation fans in the right",
    "start": "1534159",
    "end": "1539200"
  },
  {
    "text": "and just it's it's the degree to which some functionality will live in ebpf like i think ebpf has done an excellent",
    "start": "1539200",
    "end": "1544480"
  },
  {
    "text": "job in like accelerating some of these integration points and providing lower level hooks for certain types of things",
    "start": "1544480",
    "end": "1550640"
  },
  {
    "text": "right like maybe you'd see something like dpdk right used for things like middle boxes right where you never have to go back",
    "start": "1550640",
    "end": "1556559"
  },
  {
    "text": "into the kernel but certainly if you're going back into the application space you're going to go back through the operating system right because that's",
    "start": "1556559",
    "end": "1561840"
  },
  {
    "text": "what all the applications are targeting it's really when you look at the functionality that you provide like from you know l3 l4 l7",
    "start": "1561840",
    "end": "1569520"
  },
  {
    "text": "where there's going to be a sweet spot in terms of management and updatability and maintainability and platform coverage right that's what's going to",
    "start": "1569520",
    "end": "1575760"
  },
  {
    "text": "determine it and you know ebpf is certainly moving the needle somewhat towards the kernel but",
    "start": "1575760",
    "end": "1581279"
  },
  {
    "text": "you know there's there's disagreements about how far that can go before you know you're going to hit limits and you",
    "start": "1581279",
    "end": "1587120"
  },
  {
    "text": "know people are going to have issues with maintenance cycles or other types of tenancy issues",
    "start": "1587120",
    "end": "1593200"
  },
  {
    "text": "all right you had a question if you don't you can either switch out",
    "start": "1593200",
    "end": "1599279"
  },
  {
    "text": "for uval or you can switch your mic sorry it will so quick question is about debug debug ability",
    "start": "1599279",
    "end": "1606400"
  },
  {
    "text": "like one of the things that is anyway not easy with envoy is basically how to figure out where the problem is",
    "start": "1606400",
    "end": "1612480"
  },
  {
    "text": "now think about that if we're taking a lot of those functionality to the kernel how is we going to do that how easy it's",
    "start": "1612480",
    "end": "1618400"
  },
  {
    "text": "to debug a problem yeah so while the mic comes back up i'll",
    "start": "1618400",
    "end": "1624960"
  },
  {
    "start": "1622000",
    "end": "1718000"
  },
  {
    "text": "let william keep gloating about the relative lack of debuggability of one's environment",
    "start": "1624960",
    "end": "1630880"
  },
  {
    "text": "yeah i mean i feel like i'm just gonna sound like a broken record like the the stuff that i",
    "start": "1635520",
    "end": "1640720"
  },
  {
    "text": "think is is really important it's exciting to have these conversations but what's really important is like what's the effect on the end user and",
    "start": "1640720",
    "end": "1647919"
  },
  {
    "text": "you know what's the what's like the operational burden that we're asking them to to take on now",
    "start": "1647919",
    "end": "1653679"
  },
  {
    "text": "i can i can sort of twist the question a little bit if you would um",
    "start": "1653679",
    "end": "1659279"
  },
  {
    "text": "we have in a group like this we sort of represent a percentage of people who are end users and care about it but then we",
    "start": "1659279",
    "end": "1664640"
  },
  {
    "text": "also have a percentage of people who are building the various technologies out so setting the user part aside for a second",
    "start": "1664640",
    "end": "1670880"
  },
  {
    "text": "like there are benefits that uh thomas talked about especially just to shorten the data path between two different",
    "start": "1670880",
    "end": "1677679"
  },
  {
    "text": "processes using ebpf is that something for for you and then",
    "start": "1677679",
    "end": "1682720"
  },
  {
    "text": "for vic in terms of kumar is that something that is a win for you to build into the application such that the users",
    "start": "1682720",
    "end": "1688159"
  },
  {
    "text": "don't need to see it and if so do you see linker d two point whatever the next one",
    "start": "1688159",
    "end": "1693200"
  },
  {
    "text": "is supporting this out of the box or is there something that's that's stopping it being a quick win in that regard",
    "start": "1693200",
    "end": "1698320"
  },
  {
    "text": "yeah so without you know really knowing the specifics i would say operability has to come first and subject to those constraints then yes",
    "start": "1698320",
    "end": "1705039"
  },
  {
    "text": "more performance is better yeah well like you've i know there's some work we don't like have you got a team who said hey we can get three percent speed up if",
    "start": "1705039",
    "end": "1711600"
  },
  {
    "text": "we do this or something like is it as simple as just enabling it for everyone yeah so that i don't know right i don't",
    "start": "1711600",
    "end": "1716799"
  },
  {
    "text": "know okay director evan uh i think uh the someone mentioned uh i",
    "start": "1716799",
    "end": "1722480"
  },
  {
    "start": "1718000",
    "end": "1847000"
  },
  {
    "text": "think valve inch the hybrid mode is the win so that's something that we looking into uh to implement in cool for example",
    "start": "1722480",
    "end": "1728960"
  },
  {
    "text": "replacing the way how um how we're currently handling uh the network traffic through right now these ip",
    "start": "1728960",
    "end": "1734960"
  },
  {
    "text": "tables and we're looking to use this uh epf functionality to to to replace",
    "start": "1734960",
    "end": "1740000"
  },
  {
    "text": "potentially this thing um and again to make it also like invisible",
    "start": "1740000",
    "end": "1745520"
  },
  {
    "text": "for people if they want to use the uh the models would be just like configuration switch and allow them to",
    "start": "1745520",
    "end": "1750720"
  },
  {
    "text": "you know for compatibility reasons um so i don't believe that like everything would be just like replaced with one",
    "start": "1750720",
    "end": "1756399"
  },
  {
    "text": "thing and operability and user experience is the first thing rather than um performance it's",
    "start": "1756399",
    "end": "1762880"
  },
  {
    "text": "i would like i might sound like uh you know the clueless person but like can we have like a bigger machines or",
    "start": "1762880",
    "end": "1769360"
  },
  {
    "text": "like uh spent a little bit more money on the cloud or type of thing i'm a cloud vendor so yes absolutely please yeah",
    "start": "1769360",
    "end": "1775440"
  },
  {
    "text": "in the past there would be there would be kind of numbers that even developers need to know like there's a chart like",
    "start": "1775440",
    "end": "1780799"
  },
  {
    "text": "how your you know the performance goes and perform like throughput goes down and you latency grows from the processor",
    "start": "1780799",
    "end": "1787520"
  },
  {
    "text": "to network to to to distribute things now it's just like one credit card swipe",
    "start": "1787520",
    "end": "1794960"
  },
  {
    "text": "and you have a bigger machine to calculate your stuff after that you can kill this machine and just pay for it",
    "start": "1794960",
    "end": "1800720"
  },
  {
    "text": "for the task it's it's a practical choice just yeah bill bill all your vms to uh to vic hill sort of that for you",
    "start": "1800720",
    "end": "1807679"
  },
  {
    "text": "well just just quickly to follow up on on its question specifically maybe maybe thomas",
    "start": "1807679",
    "end": "1812720"
  },
  {
    "text": "uh maybe louis like the if everything else can be held the same like in the case of ebpf the more we",
    "start": "1812720",
    "end": "1818880"
  },
  {
    "text": "move in um we want to be able to tell when things go wrong",
    "start": "1818880",
    "end": "1824240"
  },
  {
    "text": "is there a concern that a user who might be debugging an application isn't necessarily able to get access to",
    "start": "1824240",
    "end": "1830159"
  },
  {
    "text": "because they're no longer dealing with a process that's inside their own container their own namespace perhaps",
    "start": "1830159",
    "end": "1835360"
  },
  {
    "text": "some of this might run in the c group they control but do i have the same visibility into the kernel with the",
    "start": "1835360",
    "end": "1841679"
  },
  {
    "text": "the model we're talking about here as i had in the past and am i able to debug my own application absolutely i would",
    "start": "1841679",
    "end": "1848159"
  },
  {
    "text": "actually turn it around it's actually an opportunity to provide even better visibility monitoring performance troubleshooting",
    "start": "1848159",
    "end": "1855279"
  },
  {
    "text": "observability has been a main driver of ebpf ebpf has been primarily used for perth linux performance benchmarking and",
    "start": "1855279",
    "end": "1862480"
  },
  {
    "text": "monitoring we have a lot of experience in building a networking layer with ebpf and we have built massive observability",
    "start": "1862480",
    "end": "1868799"
  },
  {
    "text": "and troubleshooting capabilities in i would actually turn around and say it's an opportunity to provide better",
    "start": "1868799",
    "end": "1874159"
  },
  {
    "text": "visibility on the lower levels that process like kuma can then leverage to provide great end user experience i'm a",
    "start": "1874159",
    "end": "1880399"
  },
  {
    "text": "kernel developer i'm not especially good with ux but i'm really good at providing like the low level visibility and and",
    "start": "1880399",
    "end": "1886799"
  },
  {
    "text": "the intro and introspection that is required for troubleshooting because running at scale such as psyllium",
    "start": "1886799",
    "end": "1892720"
  },
  {
    "text": "clusters or running observability monitoring metrics is absolutely essential and that goes all the way into the service mesh of course",
    "start": "1892720",
    "end": "1899360"
  },
  {
    "start": "1899000",
    "end": "1926000"
  },
  {
    "text": "all right niran has a question one one all right okay cool all right did i miss it sorry",
    "start": "1899360",
    "end": "1905120"
  },
  {
    "text": "i'll just have you evolve maybe just a follow-up question is i know uh you know cm has a the data",
    "start": "1905120",
    "end": "1911200"
  },
  {
    "text": "plane implemented in mvpf if you have a problem there you know today when i do",
    "start": "1911200",
    "end": "1916399"
  },
  {
    "text": "ip tables i can add iptables log everywhere till i figure out which rule is my problem how would you go about",
    "start": "1916399",
    "end": "1922399"
  },
  {
    "text": "that type of debugging with ebpf k printf take a kernel system no",
    "start": "1922399",
    "end": "1929840"
  },
  {
    "start": "1926000",
    "end": "1959000"
  },
  {
    "text": "no there's tooling like cli tooling observable dashboards everything similarly and usually it's actually on a",
    "start": "1929840",
    "end": "1935200"
  },
  {
    "text": "higher level intent it would take kubernetes metadata into into account very similar it's usually not a dump of",
    "start": "1935200",
    "end": "1941120"
  },
  {
    "text": "100 000 ip tables rules which you sometimes get and nobody likes it's usually like i think more more",
    "start": "1941120",
    "end": "1946720"
  },
  {
    "text": "abstracted so no user has to read ebpf bytecode you don't even need to",
    "start": "1946720",
    "end": "1951840"
  },
  {
    "text": "understand ebpf programs it's an implementation detail that gives opportunity do you need to be able to",
    "start": "1951840",
    "end": "1957200"
  },
  {
    "text": "spell ebpf well i think we're probably talking about the wrong thing um",
    "start": "1957200",
    "end": "1962640"
  },
  {
    "start": "1959000",
    "end": "1996000"
  },
  {
    "text": "right most application like we're trying to serve the application developer and maintainer community right and that's",
    "start": "1962640",
    "end": "1968720"
  },
  {
    "text": "mostly l7 stuff and they want higher level observability tools to go and find their stuff",
    "start": "1968720",
    "end": "1974880"
  },
  {
    "text": "you know if you're looking in logs we're probably not helping you and we're not doing a good job and you should probably fire us um right like you should be",
    "start": "1974880",
    "end": "1981519"
  },
  {
    "text": "looking in the tooling and the integrations in the tooling for the the protocol and you know the application",
    "start": "1981519",
    "end": "1987120"
  },
  {
    "text": "type and all those types of things uh if we're talking about syslog dumps and like what yeah we should just stop um",
    "start": "1987120",
    "end": "1994240"
  },
  {
    "text": "so maybe we should take the next question all right so final question please",
    "start": "1994240",
    "end": "1999360"
  },
  {
    "start": "1996000",
    "end": "2024000"
  },
  {
    "text": "it's gotta be good i'm a bit stuffed there we go",
    "start": "1999360",
    "end": "2004158"
  },
  {
    "text": "so i'm really interested in your opinion about the adoption of service mesh because we're here talking about ebpf",
    "start": "2004480",
    "end": "2010799"
  },
  {
    "text": "and kernel not kernel in my opinion performance is not the inhibitor for adoption for service mesh so",
    "start": "2010799",
    "end": "2016880"
  },
  {
    "text": "what is the inhibitor for adoption for wider adoption of service mesh in your opinion like what do we need to do to",
    "start": "2016880",
    "end": "2022000"
  },
  {
    "text": "make service measures more widely adopted that is a great question i'd love it if we could end by going down",
    "start": "2022000",
    "end": "2027039"
  },
  {
    "start": "2024000",
    "end": "2069000"
  },
  {
    "text": "the line with an answer to it from everybody yeah so i think actually the we've done a variety of surveys when we",
    "start": "2027039",
    "end": "2032159"
  },
  {
    "text": "launched some service mesh and we asked what do you want us to do what is your motivation main ask was please know sidecars why",
    "start": "2032159",
    "end": "2039760"
  },
  {
    "text": "complexity it's not performance right it's great to show benchmarks and yes performance is always better i think",
    "start": "2039760",
    "end": "2045760"
  },
  {
    "text": "william said it's 100 correct same complexity same values overall performance is better but our main",
    "start": "2045760",
    "end": "2051520"
  },
  {
    "text": "motivations to get rid of sidecars is actually not necessarily performance but getting to a simpler model i think that",
    "start": "2051520",
    "end": "2058320"
  },
  {
    "text": "service mesh should be as boring as tcp is today we don't think about tcp today i think the side car the data path of",
    "start": "2058320",
    "end": "2065520"
  },
  {
    "text": "service mass should be as transparent as simple as ccp is today",
    "start": "2065520",
    "end": "2070560"
  },
  {
    "start": "2069000",
    "end": "2121000"
  },
  {
    "text": "um i would agree tco although you know he and i have slightly different opinions about maybe how to go about it um but i",
    "start": "2071040",
    "end": "2077440"
  },
  {
    "text": "think we generally would agree with that point um market confusion is probably not helping",
    "start": "2077440",
    "end": "2084079"
  },
  {
    "text": "you know just being honest about it um and you know getting to a standard api",
    "start": "2084079",
    "end": "2089599"
  },
  {
    "text": "that most people here could agree is a good api i think there's an opportunity in",
    "start": "2089599",
    "end": "2095200"
  },
  {
    "text": "this space right now uh you know i think the kubernetes gateway apis and",
    "start": "2095200",
    "end": "2100720"
  },
  {
    "text": "that specification right are a good set of apis for traffic management and they",
    "start": "2100720",
    "end": "2105839"
  },
  {
    "text": "are applicable to the service mesh use case so you know it's it's my intention to kind",
    "start": "2105839",
    "end": "2111440"
  },
  {
    "text": "of foster that i think that's a good thing for the community and i think they you know the the establishment of that",
    "start": "2111440",
    "end": "2117839"
  },
  {
    "text": "under the umbrella of kubernetes would actually be helpful here all right we're running a little into the wrap-up session so just to get",
    "start": "2117839",
    "end": "2124560"
  },
  {
    "start": "2121000",
    "end": "2164000"
  },
  {
    "text": "another 20 seconds each from you all on that if we can and then yeah so um these are all good points i",
    "start": "2124560",
    "end": "2130160"
  },
  {
    "text": "definitely agree i would add that in addition to that what we're seeing with our customers they need to see the value",
    "start": "2130160",
    "end": "2136000"
  },
  {
    "text": "right they need to get something out of service mesh and especially big customer with complex environments",
    "start": "2136000",
    "end": "2142000"
  },
  {
    "text": "we want to simplify that and we want to help them get trust right",
    "start": "2142000",
    "end": "2147040"
  },
  {
    "text": "part of it is enabling a service mesh in their environments in",
    "start": "2147040",
    "end": "2152160"
  },
  {
    "text": "their setups vms multi-cluster support and so on that they can show show the value of a",
    "start": "2152160",
    "end": "2159359"
  },
  {
    "text": "service mesh to the you know management in the org",
    "start": "2159359",
    "end": "2164640"
  },
  {
    "start": "2164000",
    "end": "2222000"
  },
  {
    "text": "yeah so what's blocking service mesh adoption cncf released a micro survey this very morning so i would encourage",
    "start": "2164640",
    "end": "2170000"
  },
  {
    "text": "you to check it out it's our service mesh microserver that asks people exactly what that was and i'm not going to tell",
    "start": "2170000",
    "end": "2176240"
  },
  {
    "text": "you what the answer is you're going to have to go look at it just don't look at the graphs i'll just say you know again i i agree",
    "start": "2176240",
    "end": "2182880"
  },
  {
    "text": "that complexity is a big issue whether that's a real issue or a perceived issue i think is a little blurrier these days",
    "start": "2182880",
    "end": "2189119"
  },
  {
    "text": "i agree zero percent that sidecars are the fundamental source of the complexity i think the sidecar model again it's a",
    "start": "2189119",
    "end": "2195200"
  },
  {
    "text": "beautiful elegant model there's tooling that can help there are some busted parts of it that kind of suck but that's",
    "start": "2195200",
    "end": "2201599"
  },
  {
    "text": "not those are not fatal flaws i think the model is a really nice model so uh you know",
    "start": "2201599",
    "end": "2206880"
  },
  {
    "text": "go back home and tell your people that the the extra cost whether it be in cpu",
    "start": "2206880",
    "end": "2212079"
  },
  {
    "text": "usage or cycles whatever is offset by the benefit you get in terms of the observability and the",
    "start": "2212079",
    "end": "2218480"
  },
  {
    "text": "business value savings and things that you gain out of this and the beauty perhaps",
    "start": "2218480",
    "end": "2223760"
  },
  {
    "text": "um it's like a very hard sport to be because like so many like good opinions were shared so i think um what uh what",
    "start": "2223760",
    "end": "2231680"
  },
  {
    "text": "we can do better is just to alleviate the confusion uh around the the we",
    "start": "2231680",
    "end": "2236960"
  },
  {
    "text": "should not developers hate magic we just they love to use magic they love to use",
    "start": "2236960",
    "end": "2243760"
  },
  {
    "text": "technology that looks like magic but they hate when they need to you know deal with this and uh especially when",
    "start": "2243760",
    "end": "2250240"
  },
  {
    "text": "they need to debug something in the 4 a.m in the morning so that's responsibility of like my personal",
    "start": "2250240",
    "end": "2257359"
  },
  {
    "text": "responsibility to to provide more more knowledge around the the things and what they should put an application code and",
    "start": "2257359",
    "end": "2264079"
  },
  {
    "text": "what they should use from infrastructure so in my that's probably",
    "start": "2264079",
    "end": "2269359"
  },
  {
    "text": "my my final thoughts yeah just elevate confusion and just like let make it less magic and you know allow people to to",
    "start": "2269359",
    "end": "2277440"
  },
  {
    "text": "use this technology all right well our panelists are going to be outside momentarily we're just going to now give",
    "start": "2277440",
    "end": "2283359"
  },
  {
    "start": "2279000",
    "end": "2438000"
  },
  {
    "text": "them a warm round of applause to thank them very much for joining us",
    "start": "2283359",
    "end": "2288000"
  },
  {
    "text": "and as they gently filter off the stage in that direction lynn will come up and give some closing thoughts",
    "start": "2289920",
    "end": "2297000"
  },
  {
    "text": "exit stage thank you so much to our panelists and craig good job moderating this",
    "start": "2298800",
    "end": "2306079"
  },
  {
    "text": "so i'd like to take a time to some time to thank everyone from the program",
    "start": "2306079",
    "end": "2311280"
  },
  {
    "text": "committee please stand up if you're in the program committee i believe victor ur and edith and craig",
    "start": "2311280",
    "end": "2319119"
  },
  {
    "text": "so thank you so much for making sure we have a wonderful programs",
    "start": "2319119",
    "end": "2325760"
  },
  {
    "text": "thank you for all of our sponsors and thank you most of you for attending",
    "start": "2325760",
    "end": "2331240"
  },
  {
    "text": "servicemeshcon without you you know this has been i guess the best conference i've ever",
    "start": "2331240",
    "end": "2336960"
  },
  {
    "text": "had since covet so really really uh exciting to be on the stage and also",
    "start": "2336960",
    "end": "2343520"
  },
  {
    "text": "talking to everyone you know honestly to me as as somebody sitting in the",
    "start": "2343520",
    "end": "2348720"
  },
  {
    "text": "conference the biggest takeaway i have is uh i think we are pretty confused at",
    "start": "2348720",
    "end": "2355440"
  },
  {
    "text": "the market right now right listening to the debate of evpf service mesh",
    "start": "2355440",
    "end": "2361839"
  },
  {
    "text": "psychiatrists and all the projects we are seeing in the ecosystem with",
    "start": "2361839",
    "end": "2368960"
  },
  {
    "text": "you know qmi ico linker d and console connect it's and",
    "start": "2368960",
    "end": "2376160"
  },
  {
    "text": "now cilia service mesh you know what i really hope is next time when we get together at",
    "start": "2376160",
    "end": "2382400"
  },
  {
    "text": "servicemashcon i really hope you know we can bring some clarity to our user you",
    "start": "2382400",
    "end": "2387680"
  },
  {
    "text": "know so that we can be less confused about the market we can be less confused about the architecture of",
    "start": "2387680",
    "end": "2395280"
  },
  {
    "text": "service match well there would be a little bit more agreement among some of",
    "start": "2395280",
    "end": "2400720"
  },
  {
    "text": "our industry leaders with that i want to thank you again i believe you all have the ticket for the",
    "start": "2400720",
    "end": "2407599"
  },
  {
    "text": "drinks i'm actually not sure where the drinks will be but i think it's somewhere outside so enjoy our kubecon",
    "start": "2407599",
    "end": "2415839"
  },
  {
    "text": "tomorrow and enjoy the drinks this evening and if you haven't take any of the sponsors events i believe there are",
    "start": "2415839",
    "end": "2422800"
  },
  {
    "text": "some events i think we have a cocktail tomorrow so feel free to join us and",
    "start": "2422800",
    "end": "2428880"
  },
  {
    "text": "also you know enjoy interacting with each of you in the conference thank you so much",
    "start": "2428880",
    "end": "2438000"
  },
  {
    "text": "you",
    "start": "2438000",
    "end": "2440079"
  }
]