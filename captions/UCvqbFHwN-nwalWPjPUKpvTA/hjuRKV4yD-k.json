[
  {
    "text": "so this is a maintainer track talk uh we're both K native maintainers if you were expecting something not about K",
    "start": "40",
    "end": "5720"
  },
  {
    "text": "native or whatever then you know go check your skit but I'm assuming you're all here for us uh so K native has been",
    "start": "5720",
    "end": "13920"
  },
  {
    "text": "released for a little over six years and we thought it would be a good opportunity to reflect back and see",
    "start": "13920",
    "end": "19560"
  },
  {
    "text": "how's the project changed since very early days to very recent days yeah so I'm Callum I'm one of the",
    "start": "19560",
    "end": "27160"
  },
  {
    "text": "newer maintainers in the can project so this talk was also interesting for me since I learned a lot about version 0.1",
    "start": "27160",
    "end": "33680"
  },
  {
    "text": "I joined around 1.7 1.8 so a lot of the earlier stuff was a cool learning",
    "start": "33680",
    "end": "39360"
  },
  {
    "text": "experience for me to go back and look at it I mostly work in the Eventing area and I'm the lead of the new ux working",
    "start": "39360",
    "end": "45079"
  },
  {
    "text": "group that we restarted and I'm currently in my final year at the University of Toronto where I do um engineering science and I'm Evan",
    "start": "45079",
    "end": "52640"
  },
  {
    "text": "Anderson uh I was one of the ogk Native folks um when it was a project starting",
    "start": "52640",
    "end": "59680"
  },
  {
    "text": "it Google before it actually even came out to the public uh I was there busily",
    "start": "59680",
    "end": "65119"
  },
  {
    "text": "working on apis and things like that and compatibility between Google Cloud run",
    "start": "65119",
    "end": "70680"
  },
  {
    "text": "which shares zero code with the open source can native project but shares a compatible API um and since then I also",
    "start": "70680",
    "end": "79520"
  },
  {
    "text": "have been worked at VMware and I'm now working on software supply chain security at stack loock but I'm also on the K native steering committee and I'm",
    "start": "79520",
    "end": "86280"
  },
  {
    "text": "still involved with K native so I had to look looked this up um I was I was the one who drew sort of",
    "start": "86280",
    "end": "94000"
  },
  {
    "text": "the Short Straw to be answering stuff online when everyone else was partying at Google Cloud next um and so I just",
    "start": "94000",
    "end": "101360"
  },
  {
    "text": "pulled out a couple of the things I remember so there's the Google Blog and",
    "start": "101360",
    "end": "107360"
  },
  {
    "text": "Hacker News um you know had a bunch of folks chiming in from different areas",
    "start": "107360",
    "end": "113680"
  },
  {
    "text": "and uh Joe beta was one of the early folks um for those of you who don't know him he was one of the original",
    "start": "113680",
    "end": "120200"
  },
  {
    "text": "kubernetes Founders um who chimed in with some takes on kubernetes on K native that uh",
    "start": "120200",
    "end": "127119"
  },
  {
    "text": "helped you know direct things after it was out in the public um and the basic",
    "start": "127119",
    "end": "133120"
  },
  {
    "text": "Vision that we had was hey uh these servus services and these platform as",
    "start": "133120",
    "end": "138160"
  },
  {
    "text": "service things were great um but they all locked you into a very specific",
    "start": "138160",
    "end": "143640"
  },
  {
    "text": "vendor and nobody else no two companies offered the same API and uh if Google",
    "start": "143640",
    "end": "150480"
  },
  {
    "text": "was going to in 2018 launch a new serverless thing um it needed some distinguishing characteristic and what",
    "start": "150480",
    "end": "158160"
  },
  {
    "text": "if the characteristic was that you could run it on kubernetes in your own environment and it was open source and",
    "start": "158160",
    "end": "166200"
  },
  {
    "text": "you could build it it was built from different decomposable pieces that you could plug together um in the way that",
    "start": "166200",
    "end": "173120"
  },
  {
    "text": "suited you so you didn't have to build everything as a function if some things didn't belong as functions",
    "start": "173120",
    "end": "181040"
  },
  {
    "text": "and so that's what K native was um do you want to talk a little bit about some",
    "start": "181040",
    "end": "186599"
  },
  {
    "text": "of the benefits of Lambda yeah so one of the things that comes up if you're trying to make K native into these",
    "start": "186599",
    "end": "192159"
  },
  {
    "text": "different building blocks that you can combine is you need to figure out what building blocks do we actually want to have and so if you look at Lambda it has",
    "start": "192159",
    "end": "201239"
  },
  {
    "text": "as we list on the slide you know you don't have to do the infrastructure your management yourself it's very easy to integrate with different AWS services",
    "start": "201239",
    "end": "208360"
  },
  {
    "text": "and it's got a really simple developer experience and so some of the key characteristics that people are looking",
    "start": "208360",
    "end": "213879"
  },
  {
    "text": "at is there's that huge scaling that lambda's able to do and that really maps onto what people were trying to put into",
    "start": "213879",
    "end": "219959"
  },
  {
    "text": "can of serving of scaling your different containers independently and then also",
    "start": "219959",
    "end": "225319"
  },
  {
    "text": "you want to run time that basically knows how much load there is and runs enough and you don't have to think about",
    "start": "225319",
    "end": "232239"
  },
  {
    "text": "what enough is um and it reacts on a second byc scale rather than oh we had a",
    "start": "232239",
    "end": "239799"
  },
  {
    "text": "big spike of load I noticed it 3 minutes later and I added some you know some more pods and it's like well great but",
    "start": "239799",
    "end": "246439"
  },
  {
    "text": "it's 3 minutes later all that load has gone away so um you know if you've looked at Lambda they can go from zero",
    "start": "246439",
    "end": "253640"
  },
  {
    "text": "to 3,000 in like 30 seconds and so that was that's kind of what scales",
    "start": "253640",
    "end": "258919"
  },
  {
    "text": "infinitely means here yeah and I think crucially doing that without dropping any of the traffic so all those users",
    "start": "258919",
    "end": "264880"
  },
  {
    "text": "still get access to the whatever you're running that's making these requests the next thing that was important is you can",
    "start": "264880",
    "end": "271000"
  },
  {
    "text": "choose how to trigger your lambdas and so the next building block was we wanted something where you can say hey when",
    "start": "271000",
    "end": "278000"
  },
  {
    "text": "this event happens run my code and that's sort of independent from scaling",
    "start": "278000",
    "end": "283199"
  },
  {
    "text": "your code and so that led to the Eventing building block uh do you add anything sure um and",
    "start": "283199",
    "end": "290039"
  },
  {
    "text": "the last piece that um we'll see both with Lambda and with Heroku is that um",
    "start": "290039",
    "end": "298199"
  },
  {
    "text": "unlike a lot of kuber stuff which is like okay so we start with you write an application and you write a Docker file",
    "start": "298199",
    "end": "304600"
  },
  {
    "text": "and you figure out how to package all of it you just say here's my code please run it for me in the cloud I do not care",
    "start": "304600",
    "end": "310360"
  },
  {
    "text": "how uh which is an old uh pivotal Cloud Foundry Haiku but that's really the",
    "start": "310360",
    "end": "315840"
  },
  {
    "text": "experience you want here is my code please run it for me I don't care how",
    "start": "315840",
    "end": "320880"
  },
  {
    "text": "you do it just turn it into something that executes um and so if we SK skip",
    "start": "320880",
    "end": "326160"
  },
  {
    "text": "forward to Heroku um we can see bunch of similar patterns here um Heroku has a",
    "start": "326160",
    "end": "334280"
  },
  {
    "text": "lot more flexibility in what you run than Lambda does Lambda is like you are a function you are this big and Heroku",
    "start": "334280",
    "end": "341199"
  },
  {
    "text": "you know you can bring in your web apps and things like that um but it still abstracts away a lot of that",
    "start": "341199",
    "end": "346479"
  },
  {
    "text": "infrastructure and gives you that hey um you know run my code for me uh one of",
    "start": "346479",
    "end": "352919"
  },
  {
    "text": "the neat other things that you get with Heroku that Lambda got a lot later is um",
    "start": "352919",
    "end": "358560"
  },
  {
    "text": "you get a host name back you're like here's my code and they're like here's where you can reach your code you didn't",
    "start": "358560",
    "end": "364440"
  },
  {
    "text": "have to set up any network infrastructure or anything like that it just happens um and similarly buildpacks",
    "start": "364440",
    "end": "371840"
  },
  {
    "text": "there's a cncf build buildpacks project now grew out of um the Heroku builds for",
    "start": "371840",
    "end": "378360"
  },
  {
    "text": "dinos which were their early version of containers and then their V2 of that and Cloud Foundry kind of copied that",
    "start": "378360",
    "end": "384319"
  },
  {
    "text": "pattern and then um everyone said maybe it' be better if we had one way to build things than",
    "start": "384319",
    "end": "390199"
  },
  {
    "text": "like ever fractal growing number and so cncf build packs kind of standardized",
    "start": "390199",
    "end": "396120"
  },
  {
    "text": "that yeah and so when we looked at all these different things we were able to come up with sort of three big building",
    "start": "396120",
    "end": "403080"
  },
  {
    "text": "blocks that we want to provide in K native the first one was can native serving second one was can native",
    "start": "403080",
    "end": "408599"
  },
  {
    "text": "venting and the final one was originally can native build which now there's can native functions filling a similar role",
    "start": "408599",
    "end": "415680"
  },
  {
    "text": "and so the cool thing is you can mix and match these different components how you want so if you take functions in serving you",
    "start": "415680",
    "end": "423160"
  },
  {
    "text": "get very similar to that um Heroku experience where you just give it some code and it builds it for you and you",
    "start": "423160",
    "end": "428560"
  },
  {
    "text": "get a URL back you also get all that scaling that you get out of Lambda well",
    "start": "428560",
    "end": "434280"
  },
  {
    "text": "I'm not sure if Heroku has a lot of fancy scaling stuff heru doesn't the Heroku scaling is not as fancy as lambdas but they still have Auto scaling",
    "start": "434280",
    "end": "441199"
  },
  {
    "text": "available um and if you want to go back in time you can also see that like the",
    "start": "441199",
    "end": "448440"
  },
  {
    "text": "original idea of like J boss and you know here's a jar that encodes my application please just you know run it",
    "start": "448440",
    "end": "456599"
  },
  {
    "text": "for me and I don't want to worry about any of the infrastructure and similarly if you ever you know if you're if you've",
    "start": "456599",
    "end": "462360"
  },
  {
    "text": "been around a while and I have the white hair to have been around a while um you just uploaded your script onto a Apache",
    "start": "462360",
    "end": "468919"
  },
  {
    "text": "server and you put in the CGI bin directory and like you didn't worry about scaling because um at that time",
    "start": "468919",
    "end": "474960"
  },
  {
    "text": "the web was just not that big and you didn't have to worry about scaling um nowadays we live in a world where the",
    "start": "474960",
    "end": "480319"
  },
  {
    "text": "web is a lot bigger and our machines uh a single thread won't do it",
    "start": "480319",
    "end": "486199"
  },
  {
    "text": "so we need to be able to scale out horizontally but you know it should feel",
    "start": "486199",
    "end": "491840"
  },
  {
    "text": "it should feel as good as CGI bin did and CGI bin was you know it was not bad",
    "start": "491840",
    "end": "496879"
  },
  {
    "text": "like there were some warts we can do better but it it was you know it was",
    "start": "496879",
    "end": "502280"
  },
  {
    "text": "simple and easy to figure out um and",
    "start": "502280",
    "end": "507720"
  },
  {
    "text": "so uh yeah this is this is what some of these decompositions look like if you do",
    "start": "507720",
    "end": "513080"
  },
  {
    "text": "them each separately so um I don't have a great example of a system that takes",
    "start": "513080",
    "end": "520240"
  },
  {
    "text": "your source code and handles an event but doesn't give you a runtime for it um",
    "start": "520240",
    "end": "525480"
  },
  {
    "text": "I'd love if some of you have like hey actually I recognize a system like that to talk about it afterwards um but uh",
    "start": "525480",
    "end": "533160"
  },
  {
    "text": "you know hey we can build your code to handle an event and we can route your events but we don't run it yourself we",
    "start": "533160",
    "end": "539279"
  },
  {
    "text": "don't don't have a great example of that um he's got a little bit mixed up so you want to talk about serving only be of",
    "start": "539279",
    "end": "544959"
  },
  {
    "text": "our slides but with just serving alone you just it runs a container for you you don't need to worry about how to run the",
    "start": "544959",
    "end": "551320"
  },
  {
    "text": "container on kuber ands and it gets easy connections so like Heroku it gives you",
    "start": "551320",
    "end": "556360"
  },
  {
    "text": "a URL right away um unlike in kubernetes where you need to make your deployment and your service and all these different",
    "start": "556360",
    "end": "562279"
  },
  {
    "text": "Resources with the labels lining up to get your end points to work uh and it has all that scaling built in so you",
    "start": "562279",
    "end": "568240"
  },
  {
    "text": "don't need to attach an HP PA or vpa onto your deployment um and so it makes",
    "start": "568240",
    "end": "573399"
  },
  {
    "text": "a really nice experience to just run your code and not worry about anything else and so some similar Services I",
    "start": "573399",
    "end": "580120"
  },
  {
    "text": "guess uh I haven't worked with these myself but there's Google app engine flexible and AWS app Runner then there's",
    "start": "580120",
    "end": "586240"
  },
  {
    "text": "just the Eventing component which is just how do you wrote events so I've got some data running through my system and",
    "start": "586240",
    "end": "591560"
  },
  {
    "text": "I want to send them given different conditions to the right event consumer and so this makes it declarative you can",
    "start": "591560",
    "end": "598800"
  },
  {
    "text": "declare on these conditions on my events wrote it over here and then that's the",
    "start": "598800",
    "end": "603839"
  },
  {
    "text": "experience of just the venting building block and there's a lot of equivalent services like AWS eventbridge or Azure",
    "start": "603839",
    "end": "610880"
  },
  {
    "text": "event Hub or Google event Arc they seem to stick event and then some other word after it but um it turns out event",
    "start": "610880",
    "end": "617200"
  },
  {
    "text": "routing is really useful but everyone does it their own special way and they've got their own secret sauce um",
    "start": "617200",
    "end": "623680"
  },
  {
    "text": "and K native Eventing gives you kind of a common way to express it and then you",
    "start": "623680",
    "end": "628920"
  },
  {
    "text": "can underneath plugin Kafka or rabbit mq or something like that so that was one of the big pieces of feedback we got",
    "start": "628920",
    "end": "634760"
  },
  {
    "text": "from Joe actually um was you need to make sure that these things are pluggable so that people can bring in",
    "start": "634760",
    "end": "641720"
  },
  {
    "text": "their you know they a Kafka shop and they're like oh well we can't use K of venting because you only use Rabbid mq",
    "start": "641720",
    "end": "648120"
  },
  {
    "text": "or you only use Nats or something like that it needs to be able to take the",
    "start": "648120",
    "end": "653480"
  },
  {
    "text": "environment that it's in there and you can pick out like oh we are a shop X and we can still use these Eventing patterns",
    "start": "653480",
    "end": "660360"
  },
  {
    "text": "even though um you know they were developed at shop y that uses a different transport underneath yeah and",
    "start": "660360",
    "end": "667040"
  },
  {
    "text": "then the next building block and the Third Kind of individual building block was bu originally called K native build",
    "start": "667040",
    "end": "673200"
  },
  {
    "text": "that spun out into tecton and I think we'll talk about that more as we talk about how the project evolved but now there's can functions and the key",
    "start": "673200",
    "end": "680120"
  },
  {
    "text": "characteristic there is you shouldn't have to worry about how do you get a container from your code you should be able to just say here's my code give me",
    "start": "680120",
    "end": "686320"
  },
  {
    "text": "a container somehow and maybe even deploy it in to my system for me and so cncf build packs is another project that",
    "start": "686320",
    "end": "693279"
  },
  {
    "text": "handles kind of the not don't give me a Docker file just build my code experience um I'm also going to mention",
    "start": "693279",
    "end": "700079"
  },
  {
    "text": "jib and Co are a couple of go and Java specific tools that do the same type of thing um build packs is nice because it",
    "start": "700079",
    "end": "707880"
  },
  {
    "text": "handles many different languages as opposed to lock you know saying oh well you can only do this nice experience with go or you can only do this nice",
    "start": "707880",
    "end": "713839"
  },
  {
    "text": "experience with Java um and then the original combination that that we had",
    "start": "713839",
    "end": "720600"
  },
  {
    "text": "working was basically a container plus deliver events to it um a pachy open",
    "start": "720600",
    "end": "726120"
  },
  {
    "text": "whisk was a little bit similar to that but that's kind of all the different ways that you can",
    "start": "726120",
    "end": "731399"
  },
  {
    "text": "mix these things up and just use different pieces without putting the whole thing together um and if we",
    "start": "731399",
    "end": "736600"
  },
  {
    "text": "actually go back to talking about Eventing uh Eventing only you can route",
    "start": "736600",
    "end": "741880"
  },
  {
    "text": "the events to a VM or you can route the events to some other service and um that can be that can be",
    "start": "741880",
    "end": "750160"
  },
  {
    "text": "handy to just have the events without necessarily needing to feed everything into K native um and so now Call's going to",
    "start": "750160",
    "end": "756720"
  },
  {
    "text": "talk a bunch about what does it mean to have these components and then we'll go through a bunch of how did we do against",
    "start": "756720",
    "end": "763639"
  },
  {
    "text": "these you know against these criteria um after that yeah I'll just stop over here",
    "start": "763639",
    "end": "768880"
  },
  {
    "text": "for I'll let you um so we're to go through each of the components one at a",
    "start": "768880",
    "end": "774040"
  },
  {
    "text": "time and look at what were some of the main requirements we care about for you know serving and then venting and and",
    "start": "774040",
    "end": "779320"
  },
  {
    "text": "then build so first of all for serving the three biggest requirements were seamless fast scaling all the way down",
    "start": "779320",
    "end": "786760"
  },
  {
    "text": "to zero and then up to as large as you need um the simple developer experience that you're getting with Lambda and",
    "start": "786760",
    "end": "792199"
  },
  {
    "text": "Heroku and then a lot of different controls over how everything works so",
    "start": "792199",
    "end": "797360"
  },
  {
    "text": "one of the experiences uh when we originally started writing the K native uh serving spec was we wrote something",
    "start": "797360",
    "end": "805360"
  },
  {
    "text": "that was nice and simple and worked well for the hercy experience and one of the engineers on the Google App engine team",
    "start": "805360",
    "end": "811839"
  },
  {
    "text": "looked at it and said well but that's not going to work for our biggest customer you know we need an API that",
    "start": "811839",
    "end": "817760"
  },
  {
    "text": "also works for them and so uh we were like great we just spent three weeks agreeing on an API tear it all up and",
    "start": "817760",
    "end": "824720"
  },
  {
    "text": "let's start again and see if we can keep a lot of the Simplicity while also accommodating you know a customer who",
    "start": "824720",
    "end": "831480"
  },
  {
    "text": "has millions of requests per second and need for you know multiple fine grain traffic you know splits and rollouts and",
    "start": "831480",
    "end": "838639"
  },
  {
    "text": "things like that and I think we succeeded at that um but those fi full featured controls meant",
    "start": "838639",
    "end": "845160"
  },
  {
    "text": "that you didn't have to graduate off of the platform the way that some people sometimes had to graduate off of Heroku",
    "start": "845160",
    "end": "851920"
  },
  {
    "text": "yeah that way you know you can start as simple as you want and then start opting into the more advanced controls as you need them so diving more into these",
    "start": "851920",
    "end": "858480"
  },
  {
    "text": "requirements we'll start with that scaling so first of all the scaling had to be fast enough that users won't quit",
    "start": "858480",
    "end": "864639"
  },
  {
    "text": "your app while you're waiting for the request so if the scaling takes 10 seconds most users would just leave your",
    "start": "864639",
    "end": "870360"
  },
  {
    "text": "application and never visit the website so it had to be on the time scale of a few seconds in the worst case for your",
    "start": "870360",
    "end": "876880"
  },
  {
    "text": "average web app um nowadays with people putting like huge gen models into",
    "start": "876880",
    "end": "882079"
  },
  {
    "text": "surfing I think that a few seconds would be a little miraculous but back depends on how your caching works I guess yeah",
    "start": "882079",
    "end": "888480"
  },
  {
    "text": "back then if you're looking at just a website or web app um you know we looking at fast enough for that use case",
    "start": "888480",
    "end": "894360"
  },
  {
    "text": "and then also another key requirement is instead of going from zero to one fast F enough it should be able to get to a",
    "start": "894360",
    "end": "900880"
  },
  {
    "text": "huge scale basically whatever scale you could achieve in that kubernetes cluster without K native um like K native should",
    "start": "900880",
    "end": "907279"
  },
  {
    "text": "be able to get you up to that scale and for all of the scaling K native shouldn't drop any of your requests",
    "start": "907279",
    "end": "913000"
  },
  {
    "text": "users should just be able to interact like your website like it's any other website and never know that it's can",
    "start": "913000",
    "end": "918360"
  },
  {
    "text": "native under the hood job zero is to be invisible yeah and then for the simple",
    "start": "918360",
    "end": "926079"
  },
  {
    "text": "developer experience um we didn't want app developers have to actually learn the complexities of the underlying",
    "start": "926079",
    "end": "932040"
  },
  {
    "text": "kubernetes infrastructure you should be able to just learn how Cana of serving works and that should be all you need to",
    "start": "932040",
    "end": "937759"
  },
  {
    "text": "know and so you should be able to say hey K if here's where my container is Maybe here's the port that my container",
    "start": "937759",
    "end": "943279"
  },
  {
    "text": "exposes which as an app developer you normally know at least that much and then usually hopefully um and then can",
    "start": "943279",
    "end": "949639"
  },
  {
    "text": "should be able to do the rest at that simple end before you start opting into the faner features and then you should",
    "start": "949639",
    "end": "954759"
  },
  {
    "text": "also get a URL for each of your service without any extra work so if you remember before and if most people here",
    "start": "954759",
    "end": "960240"
  },
  {
    "text": "have probably done it before there's a lot of different resources you have to create in kubernetes before you get to the point of having a URL that you can",
    "start": "960240",
    "end": "966160"
  },
  {
    "text": "expose to the public internet for example oh you also don't get a URL until you set up DNS",
    "start": "966160",
    "end": "971959"
  },
  {
    "text": "yeah um and that's something that you may be not be able to do on your own so you really want the system to be able to",
    "start": "971959",
    "end": "978360"
  },
  {
    "text": "get the DNS lined up for you as well yeah and then another thing about this whole simpler experience is we",
    "start": "978360",
    "end": "984959"
  },
  {
    "text": "didn't want to force users to adopt a specific language or runtime so if you think about many kind of function of",
    "start": "984959",
    "end": "991880"
  },
  {
    "text": "service things there's a specific runtime that you're using which you have to import and can serving should just",
    "start": "991880",
    "end": "997440"
  },
  {
    "text": "work with any container which means any language as well and the best way to sum it up is it should just work for",
    "start": "997440",
    "end": "1003440"
  },
  {
    "text": "anything that receives HTTP and you shouldn't have to worry about it if you if you have an engine xstatic container",
    "start": "1003440",
    "end": "1008880"
  },
  {
    "text": "then like that should just go and then going on so going beyond that simple experience into the full",
    "start": "1008880",
    "end": "1015040"
  },
  {
    "text": "featured controls there's um a lot of different features you might want in terms of revisions and traffic",
    "start": "1015040",
    "end": "1021800"
  },
  {
    "text": "management um but the first criteria to all this fancier features is that it should still be forgiving and easy if",
    "start": "1021800",
    "end": "1027839"
  },
  {
    "text": "you're not an expert in all these topics and so you know it should automatically",
    "start": "1027839",
    "end": "1032959"
  },
  {
    "text": "create named revisions whenever you change it you shouldn't have to learn how all those work and do it yourself or",
    "start": "1032959",
    "end": "1038240"
  },
  {
    "text": "you know learn about rollbacks only the first time you need them you know hopefully it's already there and ready",
    "start": "1038240",
    "end": "1043918"
  },
  {
    "text": "for you rather than you're like oh what do I do now",
    "start": "1043919",
    "end": "1049440"
  },
  {
    "text": "yeah and I guess that's and if youve ever tried to roll back at kubernetes deployment there's a lot of documentation to read about what you're",
    "start": "1049440",
    "end": "1056240"
  },
  {
    "text": "doing exactly and that ties nicely to our next Point making it easy to roll forwards and back by changing your",
    "start": "1056240",
    "end": "1061480"
  },
  {
    "text": "traffic amounts so as many people know your K of service you have different revisions and you can basically specify",
    "start": "1061480",
    "end": "1067360"
  },
  {
    "text": "what percentage of the traffic should go to these different revisions and so if K is automatically creating those revisions for you as you make changes",
    "start": "1067360",
    "end": "1073679"
  },
  {
    "text": "then you can just assign 100% traffic to an earlyer revision if you need to roll back and you don't have to worry about",
    "start": "1073679",
    "end": "1079080"
  },
  {
    "text": "uh oh did I have a revision back then it's just there and you can pit the traffic onto it um and finally you",
    "start": "1079080",
    "end": "1085280"
  },
  {
    "text": "shouldn't need a separate project to manage everything you should be able to do all this traffic splitting and revision management within K native",
    "start": "1085280",
    "end": "1091559"
  },
  {
    "text": "instead of some external roll back system or yeah something like that so those are the key requirements for",
    "start": "1091559",
    "end": "1097480"
  },
  {
    "text": "serving so let's move on to Eventing and so some of the main requirements made for venting was you should be able to",
    "start": "1097480",
    "end": "1103880"
  },
  {
    "text": "give different delivery semantics and guarantees to the user from the system",
    "start": "1103880",
    "end": "1109080"
  },
  {
    "text": "um it should completely decouple the event producers from the event consumers as much as possible and it should be",
    "start": "1109080",
    "end": "1114320"
  },
  {
    "text": "able to do asynchronous delivery of these events at a large scale so on the",
    "start": "1114320",
    "end": "1120159"
  },
  {
    "text": "topic of delivery semantics and guarantees we want to make sure that the envelope for the different data that's",
    "start": "1120159",
    "end": "1125400"
  },
  {
    "text": "being delivered was standard we didn't want to come up with our own K native specific event thing and so everyone's",
    "start": "1125400",
    "end": "1131080"
  },
  {
    "text": "seen the xkcd you know there were 14 competing standards we went to fix it now there are 15 yeah um",
    "start": "1131080",
    "end": "1140679"
  },
  {
    "text": "I'm not sure if this lesson was learned but we tried um and we really wanted",
    "start": "1140679",
    "end": "1146120"
  },
  {
    "text": "people to be able to understand like this is the contract you have to follow like you know it's consistent no matter",
    "start": "1146120",
    "end": "1153320"
  },
  {
    "text": "which underlying transport you use will bring you up to some kind of common bar and if something doesn't fit that then",
    "start": "1153320",
    "end": "1160280"
  },
  {
    "text": "you know it'll have to lift up a little bit if something is you know above that that's great maybe you get extra",
    "start": "1160280",
    "end": "1165440"
  },
  {
    "text": "functionality but you get at least a minimum bar that lets you design useful applications yeah and one of the cool",
    "start": "1165440",
    "end": "1170799"
  },
  {
    "text": "things now about using the standard Cloud events envelope is more and more services are starting to adopt Cloud",
    "start": "1170799",
    "end": "1176320"
  },
  {
    "text": "events support so back in April or May AWS event Bridge announced support for sending and receiving Cloud events so",
    "start": "1176320",
    "end": "1183159"
  },
  {
    "text": "now if you want to have a like hybrid two-part event system you can send events from Cana of Eventing into event",
    "start": "1183159",
    "end": "1189159"
  },
  {
    "text": "Bridge all speaking Cloud events yeah um the next one was we wanted to make sure that there's you your normal delivery",
    "start": "1189159",
    "end": "1195520"
  },
  {
    "text": "semantics of at least once delivery so if you send an event into K venting it should send it to all the",
    "start": "1195520",
    "end": "1201080"
  },
  {
    "text": "consumers who care about it at least once um exactly once delivery semantics are pretty complicated and normally",
    "start": "1201080",
    "end": "1206840"
  },
  {
    "text": "involve code on the consumer side as well so K venting said we'll get it there at least once um I'm just going to",
    "start": "1206840",
    "end": "1212880"
  },
  {
    "text": "cut in for a moment we're we're running slightly behind our slide schedule we'll go faster so yeah we'll let some people",
    "start": "1212880",
    "end": "1219200"
  },
  {
    "text": "read some of those yeah um basically chain event handlers um and the producer should just know if the event was",
    "start": "1219200",
    "end": "1225240"
  },
  {
    "text": "delivered or not that's an important one um and then users should be able to specify what happens when the delivery",
    "start": "1225240",
    "end": "1230280"
  },
  {
    "text": "fails for the event um the biggest thing for venting is it should let the producers um not need to be aware of",
    "start": "1230280",
    "end": "1236679"
  },
  {
    "text": "who's consuming the events and the consumers shouldn't need to know who's actually sending them the events and so",
    "start": "1236679",
    "end": "1242000"
  },
  {
    "text": "having the event driven components in the middle should let you decouple your different containers you're running I'm just going to cut in real quick there",
    "start": "1242000",
    "end": "1248039"
  },
  {
    "text": "with a example um that was talked about early on from the insurance industry",
    "start": "1248039",
    "end": "1253760"
  },
  {
    "text": "where you have a CRM system where customers go and update their addresses but if a customer updates their address",
    "start": "1253760",
    "end": "1259320"
  },
  {
    "text": "and they've moved you may need to requote their insurance and you don't",
    "start": "1259320",
    "end": "1264600"
  },
  {
    "text": "want the insurance quoting system to have dependency on the CRM system and",
    "start": "1264600",
    "end": "1270480"
  },
  {
    "text": "the CRM system to also be calling the insurance quoting system you get a weird cycle in your architecture and",
    "start": "1270480",
    "end": "1276480"
  },
  {
    "text": "Architects hate those Cycles so Eventing lets you say oh I put this onto the event bus and then I don't know what",
    "start": "1276480",
    "end": "1282159"
  },
  {
    "text": "happened to it it's fine and the event bus then kind of sits at the bottom of your architecture and it gives you an",
    "start": "1282159",
    "end": "1287760"
  },
  {
    "text": "out from some those Cycles yeah the other really nice feature of that is you can just add another consumer whenever",
    "start": "1287760",
    "end": "1293080"
  },
  {
    "text": "you want you don't need to rearchitecturing",
    "start": "1293080",
    "end": "1296159"
  },
  {
    "text": "this should all work at scale and so you don't really want Eventing to be a huge bottom neck in your system um we want to",
    "start": "1303080",
    "end": "1310640"
  },
  {
    "text": "use existing battle tested message writing systems like rabbit mq or Kafka to do all this message delivery um it",
    "start": "1310640",
    "end": "1317440"
  },
  {
    "text": "should be able to handle failure or overload or back pressure and the clients shouldn't need to do special",
    "start": "1317440",
    "end": "1324360"
  },
  {
    "text": "things to handle producing or consuming these events that scale it should just work so final component that we had some",
    "start": "1324360",
    "end": "1331360"
  },
  {
    "text": "requirements for was build at the time and now its functions the first main requirement was you should be able to",
    "start": "1331360",
    "end": "1337200"
  },
  {
    "text": "just give it some source code and get an executable out um sounds easy yeah if",
    "start": "1337200",
    "end": "1343320"
  },
  {
    "text": "you've never run a build system it sounds real easy so specific specifically um for",
    "start": "1343320",
    "end": "1350840"
  },
  {
    "text": "functions for example you might need to wrap your source code into a framework to set up all the HTTP listing and stuff",
    "start": "1350840",
    "end": "1356640"
  },
  {
    "text": "and then we want to be able to build either just from some local source code or remote repository reference and it",
    "start": "1356640",
    "end": "1362880"
  },
  {
    "text": "should just work regardless of what language you're using so the build system shouldn't force you to use Java or go or C++ it should",
    "start": "1362880",
    "end": "1370600"
  },
  {
    "text": "work um in terms of the build definition it should be simple but you should be able to repeat it and it should be",
    "start": "1370600",
    "end": "1377240"
  },
  {
    "text": "declarative you shouldn't have to to imperatively say do this first step and then the second step you should be able to say what I want to get out of this",
    "start": "1377240",
    "end": "1383360"
  },
  {
    "text": "system um you should be able to reuse them between your different projects so",
    "start": "1383360",
    "end": "1388559"
  },
  {
    "text": "that if you figure it out once you can just Port it over and it should be really easy to move from building",
    "start": "1388559",
    "end": "1393799"
  },
  {
    "text": "locally and testing locally to using this on a kubert cluster um and finally anything that's build in containers should be able to",
    "start": "1393799",
    "end": "1400200"
  },
  {
    "text": "push the containers to a container registry and hopefully deploy it into a cluster as well I mean the the",
    "start": "1400200",
    "end": "1406080"
  },
  {
    "text": "observation here was simply that hey uses containers as the basic way of handling things we should be native to",
    "start": "1406080",
    "end": "1413960"
  },
  {
    "text": "that and we shouldn't have like you know hu has dinos and that's their native thing but bringing dinos to kubernetes",
    "start": "1413960",
    "end": "1421480"
  },
  {
    "text": "would be weird and ignoring all the stuff all the other tooling we should work nicely with all those other tools",
    "start": "1421480",
    "end": "1428039"
  },
  {
    "text": "yeah so now that we've kind of seen what these requirements for these different points I think it's worth asking how well do we actually achieve these",
    "start": "1428039",
    "end": "1433480"
  },
  {
    "text": "requirements I'm going to pass it back to Evan who can take us through some of the history of the project yeah so um",
    "start": "1433480",
    "end": "1439720"
  },
  {
    "text": "we're going to we're going to wind wind all the way back to the beginning and I apologized for the traffic lights I",
    "start": "1439720",
    "end": "1444760"
  },
  {
    "text": "couldn't quite figure out how to express this well and so you can see that I did traffic lights with gradations which um",
    "start": "1444760",
    "end": "1451080"
  },
  {
    "text": "if you're a traffic engineer you're probably screaming at me right now but um 0.1 we didn't actually manage to",
    "start": "1451080",
    "end": "1457720"
  },
  {
    "text": "package venting um serving installation was about 500k of yaml uh it took Joe",
    "start": "1457720",
    "end": "1464840"
  },
  {
    "text": "beta two tgik episodes of 2 hours each to decide that he'd seen enough yaml and",
    "start": "1464840",
    "end": "1470200"
  },
  {
    "text": "was just going to try installing this thing um and uh yeah you know build was",
    "start": "1470200",
    "end": "1477840"
  },
  {
    "text": "kind of there but if we wind forward to the next year build is gone build went",
    "start": "1477840",
    "end": "1484520"
  },
  {
    "text": "away build grew up and realized that they could build things that weren't just containers for serverless but they",
    "start": "1484520",
    "end": "1490600"
  },
  {
    "text": "could build containers for other things and they could build things that weren't containers and they graduated to become tekon um which was great for them and",
    "start": "1490600",
    "end": "1498960"
  },
  {
    "text": "meant that for the next several slides we'll have kind of a blank where build is",
    "start": "1498960",
    "end": "1504520"
  },
  {
    "text": "um the initial K native 0.1 packaged ISO",
    "start": "1504520",
    "end": "1510279"
  },
  {
    "text": "because we were like well you need an ISO in order to be able to make things work let's bundle it up into the Amel",
    "start": "1510279",
    "end": "1515640"
  },
  {
    "text": "that you install uh we got a lot of feedback on that um a lot of people weren't ready to adopt ISO IO the first",
    "start": "1515640",
    "end": "1523440"
  },
  {
    "text": "version that we installed um failed closed which is kind of a fun experience you install ISO on your cluster and then",
    "start": "1523440",
    "end": "1530600"
  },
  {
    "text": "everything that was working for talking to each other doesn't work until you figure out how to open things up again they changed that in ISO 111 or one2 um",
    "start": "1530600",
    "end": "1540120"
  },
  {
    "text": "but we' also heard that a lot of people weren't ready to install sto and so we defined what does it look like to give",
    "start": "1540120",
    "end": "1546679"
  },
  {
    "text": "you a nice Ingress that we could use with K native and then we started building adapters for things like",
    "start": "1546679",
    "end": "1551799"
  },
  {
    "text": "Contour an ambassador and eventually the Gateway API come along and has kind of redone a lot of that work Dave had a",
    "start": "1551799",
    "end": "1557919"
  },
  {
    "text": "great talk talk about Gateway API yesterday um one of the things we really",
    "start": "1557919",
    "end": "1563320"
  },
  {
    "text": "wanted was the ability to know when is the programming done when can you expect to not get a 400 or a 500 when you try",
    "start": "1563320",
    "end": "1569320"
  },
  {
    "text": "to reach this thing um and a lot of those Frameworks didn't build that natively and so we built a lot of that",
    "start": "1569320",
    "end": "1574880"
  },
  {
    "text": "infrastructure ourselves so now I'm going to wind us another year or so forward a little bit",
    "start": "1574880",
    "end": "1580960"
  },
  {
    "text": "more than that um and uh serving has a V1 API Eventing has most of a V1 API has",
    "start": "1580960",
    "end": "1589080"
  },
  {
    "text": "figured out a lot of those pieces and um Kafka and rabbit mq and Nats all our",
    "start": "1589080",
    "end": "1596960"
  },
  {
    "text": "providers there um for routing and we figured out a lot of that event model",
    "start": "1596960",
    "end": "1602399"
  },
  {
    "text": "and build is still MIA we haven't figured out what to do about the fact that you know building a container is",
    "start": "1602399",
    "end": "1608840"
  },
  {
    "text": "hard and there's no easy mode we just say assume that you could build a",
    "start": "1608840",
    "end": "1614399"
  },
  {
    "text": "container um also we've been furiously dealing with the fact that K native was",
    "start": "1614399",
    "end": "1620640"
  },
  {
    "text": "not part of the cncf and it was owned by Google and trying to work through a bunch of",
    "start": "1620640",
    "end": "1626559"
  },
  {
    "text": "governance things and one of the governance things was who gets to extend the core K native apis and how do we",
    "start": "1626559",
    "end": "1633200"
  },
  {
    "text": "work together on stuff that's not core and so we built this extensions organ organization and we now have something",
    "start": "1633200",
    "end": "1640320"
  },
  {
    "text": "like 100 repos at the time we had about 60 um and you can see some of the reports that we did you know like 140",
    "start": "1640320",
    "end": "1647640"
  },
  {
    "text": "releases in a year um across all the repos and a six every six we release process so we got real good at releases",
    "start": "1647640",
    "end": "1655000"
  },
  {
    "text": "um if you want to get good at releases I recommend doing them often um so November",
    "start": "1655000",
    "end": "1660120"
  },
  {
    "text": "2021 uh we've decided that we've hit a 1.0 um serving and Eventing are both V1",
    "start": "1660120",
    "end": "1666120"
  },
  {
    "text": "they've hit test coverage targets and documentation targets and a bunch of other things that um you know mean that",
    "start": "1666120",
    "end": "1674159"
  },
  {
    "text": "they really work for real people as opposed to just they work when the develop working on them um and red hat",
    "start": "1674159",
    "end": "1681840"
  },
  {
    "text": "was just offering this funk build project to build functions into containers and we were looking at we're",
    "start": "1681840",
    "end": "1687919"
  },
  {
    "text": "like yeah let's try it but we're not sure that's a core interface yet um and",
    "start": "1687919",
    "end": "1693320"
  },
  {
    "text": "so we had a big celebration on all the good stuff um and then I'm going to fast forward another year because the",
    "start": "1693320",
    "end": "1699480"
  },
  {
    "text": "celebration was fun the cake was yummy and it's gone now no more cake um so",
    "start": "1699480",
    "end": "1704679"
  },
  {
    "text": "functions has reached its GA um around this time Google decided that they were",
    "start": "1704679",
    "end": "1710840"
  },
  {
    "text": "happy to cooperate with the cncf and start the donation process I forgot to mention that in here um but you know",
    "start": "1710840",
    "end": "1719519"
  },
  {
    "text": "functions is a real thing we've gone back from the dark days if there's no build to hey actually we can take your",
    "start": "1719519",
    "end": "1726519"
  },
  {
    "text": "code it's a little bit hot off the press but we can turn it into a container and",
    "start": "1726519",
    "end": "1731600"
  },
  {
    "text": "we can run it on K native um uh we also around this time start",
    "start": "1731600",
    "end": "1737120"
  },
  {
    "text": "talking about changing our releas Cadence uh we uh got some feedback that",
    "start": "1737120",
    "end": "1742200"
  },
  {
    "text": "you know hey great you were rolling out new features every 6 weeks it was great to get the new features Fresh Off The",
    "start": "1742200",
    "end": "1748000"
  },
  {
    "text": "Tap and now your part of your focus is stability and maybe we don't have to",
    "start": "1748000",
    "end": "1753320"
  },
  {
    "text": "upgrade every six weeks please um and so we talked about it uh we moved to a",
    "start": "1753320",
    "end": "1759120"
  },
  {
    "text": "quarterly Cadence I did some fun stuff where I uh wrote a doc about it and",
    "start": "1759120",
    "end": "1764640"
  },
  {
    "text": "actually calendared out all the different holidays that we might have to work around and we have a cron that cron",
    "start": "1764640",
    "end": "1771480"
  },
  {
    "text": "pattern that says this is when the release day is it will hit the fewest holidays if you want to do it quarterly",
    "start": "1771480",
    "end": "1777480"
  },
  {
    "text": "and if anyone's curious um it's in our public repo and if you want to do you know a different interval you can figure",
    "start": "1777480",
    "end": "1784559"
  },
  {
    "text": "out what your fewest holidays are uh Easter is super hard by the way that's like six weeks of holiday that you don't",
    "start": "1784559",
    "end": "1791960"
  },
  {
    "text": "know when it is because it's lunar calendar um oh and Eastern Orthodox is different than it was fun",
    "start": "1791960",
    "end": "1798799"
  },
  {
    "text": "um so we're going to skip forward another eight you know8 releases which is a bigger Gap um you'll notice this",
    "start": "1798799",
    "end": "1805840"
  },
  {
    "text": "was November to October and now we got almost two years forward um and I'm",
    "start": "1805840",
    "end": "1811159"
  },
  {
    "text": "going to hand those things over to Callum because Callum showed up around 1.8 and he's experienced a lot of this",
    "start": "1811159",
    "end": "1816519"
  },
  {
    "text": "life sense and has driven some of this stuff yeah I guess specifically this slide was the main thing I drove but one",
    "start": "1816519",
    "end": "1822399"
  },
  {
    "text": "of the things that um happened at this point was there's all these different parts of K native that had all evolved",
    "start": "1822399",
    "end": "1828519"
  },
  {
    "text": "semi-independently like serving was doing its own thing Eventing was doing its own thing functions was doing its own thing and they all work really well",
    "start": "1828519",
    "end": "1834000"
  },
  {
    "text": "together but there are different groups different people and so coming into the project later um there was I felt a lack",
    "start": "1834000",
    "end": "1841039"
  },
  {
    "text": "of great user experience of learning how to use all these things or interacting with the website if it turns out it",
    "start": "1841039",
    "end": "1846600"
  },
  {
    "text": "turns out if you have three teams and you ask them each to write documentation they write documentation for their one",
    "start": "1846600",
    "end": "1852440"
  },
  {
    "text": "thing and a user shows up and they're like I don't get the whole thing or even",
    "start": "1852440",
    "end": "1857480"
  },
  {
    "text": "why I which part oh yeah so one of the things that I was able to do is I knew a",
    "start": "1857480",
    "end": "1862960"
  },
  {
    "text": "lot of designers at the Ontario College of Art and Design University um it's a bit of a Funny Story why it's both a",
    "start": "1862960",
    "end": "1868760"
  },
  {
    "text": "college and university uh but I don't think we have time for that today but we managed to start a uxw working group",
    "start": "1868760",
    "end": "1874600"
  },
  {
    "text": "that had ux designers participating in it instead of just Engineers trying to figure out this ux design stuff and they",
    "start": "1874600",
    "end": "1880399"
  },
  {
    "text": "managed to redesign the documentation on boarding flow and we got this great new mascot called quack who you've seen on",
    "start": "1880399",
    "end": "1885960"
  },
  {
    "text": "some of the slides and hopefully we can get get some stickers in the future I also want to call out something that",
    "start": "1885960",
    "end": "1891120"
  },
  {
    "text": "I've seen elsewhere uh as an anti pattern of Technical and non-technical contributions uh we should really talk",
    "start": "1891120",
    "end": "1897440"
  },
  {
    "text": "about coding and non-coding contributions when we do that because what these designers do is very",
    "start": "1897440",
    "end": "1903200"
  },
  {
    "text": "technical I don't understand how to do it but there's clearly a lot of",
    "start": "1903200",
    "end": "1909000"
  },
  {
    "text": "technique and understanding and patterns involved and so we should really when we",
    "start": "1909000",
    "end": "1915000"
  },
  {
    "text": "talk about you know contributions rather than saying technically and non-technical we should really say coding or software and non-software",
    "start": "1915000",
    "end": "1922880"
  },
  {
    "text": "because um I highly recommend if you can find some of these people",
    "start": "1922880",
    "end": "1928120"
  },
  {
    "text": "superpowers uh because they look at the world a different way yeah and they like they managed to do this cool exercise at",
    "start": "1928120",
    "end": "1933880"
  },
  {
    "text": "cubec con which let us restructure our whole documentation and it's been really cool so far um and they were like hey",
    "start": "1933880",
    "end": "1939559"
  },
  {
    "text": "you need a mascot and they did that yeah um there's also been new",
    "start": "1939559",
    "end": "1945320"
  },
  {
    "text": "authorization being built into venting where you get TLS and oidc and you can say which service accounts are allowed",
    "start": "1945320",
    "end": "1951080"
  },
  {
    "text": "to send events to which resources and so you get all the normal security authorization stuff you'd expect in 2024",
    "start": "1951080",
    "end": "1957519"
  },
  {
    "text": "out of Eventing um so Eventing is is a little bit asynchronous stuff in general is a",
    "start": "1957519",
    "end": "1964120"
  },
  {
    "text": "little bit funny because you're like here's this thing it gets stored um and",
    "start": "1964120",
    "end": "1969519"
  },
  {
    "text": "then like at some point later someone else gets to pick it up and see it and you don't really get to know where all that message goes unlike grpc or",
    "start": "1969519",
    "end": "1976840"
  },
  {
    "text": "something like that where you can just just check the other end so um building all of that authorization and figuring",
    "start": "1976840",
    "end": "1982840"
  },
  {
    "text": "out well who do I check and at what points um was an interesting process I",
    "start": "1982840",
    "end": "1989760"
  },
  {
    "text": "think we ended up in a good place but yeah like what should be the API for defining who's allowed to send stuff was",
    "start": "1989760",
    "end": "1995799"
  },
  {
    "text": "interesting um see yeah like you can just pick any deliverable and they can say here's the audiences I expect and",
    "start": "1995799",
    "end": "2001600"
  },
  {
    "text": "then venting checks that all for you and and you can say Hey you know I'm getting a customer you know address updated",
    "start": "2001600",
    "end": "2008840"
  },
  {
    "text": "event and it's coming from the customer retention Nam space well that sounds great uh it's coming from the billing",
    "start": "2008840",
    "end": "2015760"
  },
  {
    "text": "Nam space why are they doing anything about customer information you know maybe we need to go and block that event",
    "start": "2015760",
    "end": "2022639"
  },
  {
    "text": "and look at what's going on um and what's up next we are in the queue",
    "start": "2022639",
    "end": "2030559"
  },
  {
    "text": "for graduation um we are looking I've run into a number of people but we're",
    "start": "2030559",
    "end": "2035760"
  },
  {
    "text": "looking for people who are interested in being interviewed for our graduation",
    "start": "2035760",
    "end": "2041000"
  },
  {
    "text": "process um if you are a k of user add yourself to our adopter file in the community repo or you know come talk to",
    "start": "2041000",
    "end": "2048320"
  },
  {
    "text": "myself or Callum I see Dave and some other folks over there um and we'll help get you in and if you want you know we'd",
    "start": "2048320",
    "end": "2056520"
  },
  {
    "text": "be happy to talk to you and say nice things about you if you're using K native so um that's part of our next",
    "start": "2056520",
    "end": "2063320"
  },
  {
    "text": "next phase of life and I guess just while we're on that topic if anyone else is interested in contributing to K",
    "start": "2063320",
    "end": "2068560"
  },
  {
    "text": "native we're always looking for more contributors yeah whether it's code contributions or non-code contributions as we talked about we have a very robust",
    "start": "2068560",
    "end": "2075280"
  },
  {
    "text": "ux working group now where you can also participate if you are interested but maybe writing code isn't your",
    "start": "2075280",
    "end": "2082000"
  },
  {
    "text": "thing and here's where you can find us there's cncf slack lots of K native channels then there's a new great set of",
    "start": "2082000",
    "end": "2088480"
  },
  {
    "text": "tutorials where you build the whole end2end application and we were just talking about extending that earlier to",
    "start": "2088480",
    "end": "2093839"
  },
  {
    "text": "give further examples of chaining events together um to do like a pipeline it's a",
    "start": "2093839",
    "end": "2099200"
  },
  {
    "text": "bookstore and your book delivery and so forth would be part of that pipeline I think we're out of time now but that's",
    "start": "2099200",
    "end": "2105160"
  },
  {
    "text": "kind of how K native started and how it's gotten to where it is now and I'm excited to see what the future is for",
    "start": "2105160",
    "end": "2110240"
  },
  {
    "text": "the project yeah thank you",
    "start": "2110240",
    "end": "2117200"
  }
]