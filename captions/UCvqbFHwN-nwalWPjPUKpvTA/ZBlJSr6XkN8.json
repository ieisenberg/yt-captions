[
  {
    "text": "good afternoon everyone and welcome to",
    "start": "0",
    "end": "1760"
  },
  {
    "text": "falco at apple i'm melissa kilby from",
    "start": "1760",
    "end": "4240"
  },
  {
    "text": "the apple services security engineering",
    "start": "4240",
    "end": "6160"
  },
  {
    "text": "team no hybrid conference without a",
    "start": "6160",
    "end": "8080"
  },
  {
    "text": "hybrid format we're already good at this",
    "start": "8080",
    "end": "9760"
  },
  {
    "text": "so i'll be virtually joined by",
    "start": "9760",
    "end": "12000"
  },
  {
    "text": "eric sage a member of the linux kernel",
    "start": "12000",
    "end": "14080"
  },
  {
    "text": "team at apple today we're going to show",
    "start": "14080",
    "end": "16080"
  },
  {
    "text": "how we deployed falco as one of our",
    "start": "16080",
    "end": "18160"
  },
  {
    "text": "security monitoring solutions",
    "start": "18160",
    "end": "21279"
  },
  {
    "text": "but first we would like to address why",
    "start": "21279",
    "end": "23119"
  },
  {
    "text": "the linux kernel team at apple loves",
    "start": "23119",
    "end": "25119"
  },
  {
    "text": "evps the linux kernel team manages and",
    "start": "25119",
    "end": "28320"
  },
  {
    "text": "improves the linux kernel across the",
    "start": "28320",
    "end": "30160"
  },
  {
    "text": "fleet of servers that power apple's",
    "start": "30160",
    "end": "32160"
  },
  {
    "text": "services",
    "start": "32160",
    "end": "33360"
  },
  {
    "text": "ebpf provides us with an incredibly",
    "start": "33360",
    "end": "36559"
  },
  {
    "text": "powerful and flexible tool",
    "start": "36559",
    "end": "38800"
  },
  {
    "text": "for adding features into the kernel that",
    "start": "38800",
    "end": "40640"
  },
  {
    "text": "provides many improvements over",
    "start": "40640",
    "end": "42480"
  },
  {
    "text": "traditional methods of extending kernel",
    "start": "42480",
    "end": "44320"
  },
  {
    "text": "functionality",
    "start": "44320",
    "end": "46399"
  },
  {
    "text": "thanks melissa to go into more detail",
    "start": "46399",
    "end": "48879"
  },
  {
    "text": "traditionally kernel modules have been",
    "start": "48879",
    "end": "50399"
  },
  {
    "text": "used to add third-party code to the",
    "start": "50399",
    "end": "51840"
  },
  {
    "text": "kernel but they come at the high cost of",
    "start": "51840",
    "end": "53920"
  },
  {
    "text": "giving full access to kernel data",
    "start": "53920",
    "end": "55520"
  },
  {
    "text": "structures and access to the system's",
    "start": "55520",
    "end": "56960"
  },
  {
    "text": "hardware for example the falco kernel",
    "start": "56960",
    "end": "59600"
  },
  {
    "text": "module may concern itself only with",
    "start": "59600",
    "end": "61280"
  },
  {
    "text": "tracing but is the ability to do",
    "start": "61280",
    "end": "63120"
  },
  {
    "text": "anything at once and load it into the",
    "start": "63120",
    "end": "64478"
  },
  {
    "text": "kernel from a security perspective it",
    "start": "64479",
    "end": "66880"
  },
  {
    "text": "does not follow the principle of least",
    "start": "66880",
    "end": "68479"
  },
  {
    "text": "privilege",
    "start": "68479",
    "end": "69520"
  },
  {
    "text": "ebpf programs on the other hand are",
    "start": "69520",
    "end": "71360"
  },
  {
    "text": "limited to a set of curated function",
    "start": "71360",
    "end": "72880"
  },
  {
    "text": "calls called ebpf helper functions",
    "start": "72880",
    "end": "75439"
  },
  {
    "text": "depending upon the epf program type",
    "start": "75439",
    "end": "78080"
  },
  {
    "text": "ebpf programs",
    "start": "78080",
    "end": "80000"
  },
  {
    "text": "allow us to categorize the types of",
    "start": "80000",
    "end": "81680"
  },
  {
    "text": "programs loaded into the kernel so that",
    "start": "81680",
    "end": "83280"
  },
  {
    "text": "each program be given only the data and",
    "start": "83280",
    "end": "85200"
  },
  {
    "text": "functionality needs to complete its task",
    "start": "85200",
    "end": "87680"
  },
  {
    "text": "the new falco ebpf probe for example is",
    "start": "87680",
    "end": "90560"
  },
  {
    "text": "specifically a tracing program and only",
    "start": "90560",
    "end": "92720"
  },
  {
    "text": "has access to tracing helper functions",
    "start": "92720",
    "end": "94720"
  },
  {
    "text": "and data in this way bbpf virtual",
    "start": "94720",
    "end": "97200"
  },
  {
    "text": "machine provides a safe sandbox for the",
    "start": "97200",
    "end": "98880"
  },
  {
    "text": "third-party code to run in without",
    "start": "98880",
    "end": "100560"
  },
  {
    "text": "getting full access to the kernel",
    "start": "100560",
    "end": "102720"
  },
  {
    "text": "even though it runs in kernel space it",
    "start": "102720",
    "end": "104560"
  },
  {
    "text": "still follows the principle of least",
    "start": "104560",
    "end": "106079"
  },
  {
    "text": "privilege",
    "start": "106079",
    "end": "108479"
  },
  {
    "text": "edpf overall reduces the dependency",
    "start": "108960",
    "end": "111680"
  },
  {
    "text": "complexity",
    "start": "111680",
    "end": "113040"
  },
  {
    "text": "there are many reasons why software",
    "start": "113040",
    "end": "114560"
  },
  {
    "text": "needs access to kernel data or direct",
    "start": "114560",
    "end": "116799"
  },
  {
    "text": "access to the hardware which has led to",
    "start": "116799",
    "end": "118799"
  },
  {
    "text": "frameworks and modules that bypass the",
    "start": "118799",
    "end": "120479"
  },
  {
    "text": "kernel to process data in user space",
    "start": "120479",
    "end": "123040"
  },
  {
    "text": "or load large amounts of code into the",
    "start": "123040",
    "end": "124719"
  },
  {
    "text": "kernel to greatly extend kernel",
    "start": "124719",
    "end": "126159"
  },
  {
    "text": "functionality",
    "start": "126159",
    "end": "127439"
  },
  {
    "text": "for example there are many packet",
    "start": "127439",
    "end": "129119"
  },
  {
    "text": "processing frameworks designed to",
    "start": "129119",
    "end": "130560"
  },
  {
    "text": "circumvent the cost of the kernel",
    "start": "130560",
    "end": "132319"
  },
  {
    "text": "network stack to process packets at line",
    "start": "132319",
    "end": "134319"
  },
  {
    "text": "rate",
    "start": "134319",
    "end": "135280"
  },
  {
    "text": "ebpf programs alleviate the need for",
    "start": "135280",
    "end": "137280"
  },
  {
    "text": "these drastic solutions by allowing user",
    "start": "137280",
    "end": "139280"
  },
  {
    "text": "space to provide different types of epf",
    "start": "139280",
    "end": "141120"
  },
  {
    "text": "programs to solve specific problems and",
    "start": "141120",
    "end": "143840"
  },
  {
    "text": "gives the eppf code access to very low",
    "start": "143840",
    "end": "146080"
  },
  {
    "text": "level processing pipelines such as tying",
    "start": "146080",
    "end": "149040"
  },
  {
    "text": "directly into a network driver before",
    "start": "149040",
    "end": "150800"
  },
  {
    "text": "the network stack is invoked in the case",
    "start": "150800",
    "end": "152720"
  },
  {
    "text": "of xdp programs",
    "start": "152720",
    "end": "156360"
  },
  {
    "text": "when it comes time to debugging and",
    "start": "157040",
    "end": "158720"
  },
  {
    "text": "profiling evps also reduces the need for",
    "start": "158720",
    "end": "161360"
  },
  {
    "text": "many complicated add-on solutions",
    "start": "161360",
    "end": "163840"
  },
  {
    "text": "because ebpf unifies adverse set of",
    "start": "163840",
    "end": "166080"
  },
  {
    "text": "frameworks and modules with a single",
    "start": "166080",
    "end": "167680"
  },
  {
    "text": "solution many tools can be created that",
    "start": "167680",
    "end": "170000"
  },
  {
    "text": "specifically target the eppf ecosystem",
    "start": "170000",
    "end": "173280"
  },
  {
    "text": "lib bpf is a user space library that",
    "start": "173280",
    "end": "175599"
  },
  {
    "text": "provides functionality on top of the",
    "start": "175599",
    "end": "177040"
  },
  {
    "text": "ebps syscall",
    "start": "177040",
    "end": "178959"
  },
  {
    "text": "lib bpf's common set of library",
    "start": "178959",
    "end": "180879"
  },
  {
    "text": "abstractions make tool development quick",
    "start": "180879",
    "end": "182959"
  },
  {
    "text": "and easy greatly reducing the work one",
    "start": "182959",
    "end": "185200"
  },
  {
    "text": "needs to do to build on top of the ebpf",
    "start": "185200",
    "end": "187120"
  },
  {
    "text": "foundation",
    "start": "187120",
    "end": "188239"
  },
  {
    "text": "for example bpf tool is one such program",
    "start": "188239",
    "end": "191120"
  },
  {
    "text": "that uses leadpf to provide operators of",
    "start": "191120",
    "end": "193440"
  },
  {
    "text": "information about loaded ebbf maps and",
    "start": "193440",
    "end": "195599"
  },
  {
    "text": "programs it can show map contents jitted",
    "start": "195599",
    "end": "198480"
  },
  {
    "text": "instructions the amount of locked kernel",
    "start": "198480",
    "end": "200400"
  },
  {
    "text": "memory number of programs invocations",
    "start": "200400",
    "end": "203120"
  },
  {
    "text": "and much more",
    "start": "203120",
    "end": "205760"
  },
  {
    "text": "the linux kernel team at apple is always",
    "start": "208720",
    "end": "211360"
  },
  {
    "text": "improving our testing and deployment",
    "start": "211360",
    "end": "212799"
  },
  {
    "text": "strategy",
    "start": "212799",
    "end": "213920"
  },
  {
    "text": "ebpf has added compile once run anywhere",
    "start": "213920",
    "end": "216720"
  },
  {
    "text": "which allows us to write ebpf programs",
    "start": "216720",
    "end": "219120"
  },
  {
    "text": "which can be targeted to many different",
    "start": "219120",
    "end": "220720"
  },
  {
    "text": "kernel versions this is a drastic",
    "start": "220720",
    "end": "222879"
  },
  {
    "text": "improvement over kernel modules which",
    "start": "222879",
    "end": "224560"
  },
  {
    "text": "must be compiled and tested against",
    "start": "224560",
    "end": "226080"
  },
  {
    "text": "specific kernel versions",
    "start": "226080",
    "end": "227760"
  },
  {
    "text": "compile once from anywhere uses btf type",
    "start": "227760",
    "end": "230799"
  },
  {
    "text": "information to adjust epf programs on",
    "start": "230799",
    "end": "233439"
  },
  {
    "text": "the fly to work on a variety of kernel",
    "start": "233439",
    "end": "237280"
  },
  {
    "text": "versions ebpf is also kernel native",
    "start": "238840",
    "end": "242560"
  },
  {
    "text": "which is a feature that cannot be",
    "start": "242560",
    "end": "243920"
  },
  {
    "text": "oversold",
    "start": "243920",
    "end": "245120"
  },
  {
    "text": "many of the solutions that eppf replaces",
    "start": "245120",
    "end": "247760"
  },
  {
    "text": "do not have direct support from the",
    "start": "247760",
    "end": "249200"
  },
  {
    "text": "normal kernel development channels",
    "start": "249200",
    "end": "251200"
  },
  {
    "text": "and must work to maintain compatibility",
    "start": "251200",
    "end": "253120"
  },
  {
    "text": "with the direction of kernel development",
    "start": "253120",
    "end": "255760"
  },
  {
    "text": "having ebpf be a part of the kernel",
    "start": "255760",
    "end": "258079"
  },
  {
    "text": "means having the peace of mind the eppf",
    "start": "258079",
    "end": "260400"
  },
  {
    "text": "will always be supported by the primary",
    "start": "260400",
    "end": "262240"
  },
  {
    "text": "kernel developers",
    "start": "262240",
    "end": "263840"
  },
  {
    "text": "for example many tools are already being",
    "start": "263840",
    "end": "266160"
  },
  {
    "text": "built with bpf which is maintained in",
    "start": "266160",
    "end": "268880"
  },
  {
    "text": "the kernel source and mirrored on github",
    "start": "268880",
    "end": "271360"
  },
  {
    "text": "users of lib bpf can get direct support",
    "start": "271360",
    "end": "273440"
  },
  {
    "text": "from the colonel's netdev and bpf",
    "start": "273440",
    "end": "275040"
  },
  {
    "text": "communities where the libraries actively",
    "start": "275040",
    "end": "276720"
  },
  {
    "text": "being developed",
    "start": "276720",
    "end": "278960"
  },
  {
    "text": "last hybrid slide let's hear about some",
    "start": "278960",
    "end": "280880"
  },
  {
    "text": "of the ways evpf could evolve in the",
    "start": "280880",
    "end": "282800"
  },
  {
    "text": "future",
    "start": "282800",
    "end": "285198"
  },
  {
    "text": "we still believe there are many",
    "start": "285440",
    "end": "286800"
  },
  {
    "text": "improvements that can be made to ebpf",
    "start": "286800",
    "end": "289360"
  },
  {
    "text": "we would love to see better tooling",
    "start": "289360",
    "end": "291120"
  },
  {
    "text": "around analyzing the performance of ebpf",
    "start": "291120",
    "end": "293280"
  },
  {
    "text": "programs make it easier to identify",
    "start": "293280",
    "end": "295120"
  },
  {
    "text": "bottlenecks and inefficiencies in bpf",
    "start": "295120",
    "end": "297600"
  },
  {
    "text": "program design",
    "start": "297600",
    "end": "299199"
  },
  {
    "text": "we would also love to see better tools",
    "start": "299199",
    "end": "301120"
  },
  {
    "text": "and documentation for operators who may",
    "start": "301120",
    "end": "303680"
  },
  {
    "text": "not be familiar with epf just yet with",
    "start": "303680",
    "end": "306080"
  },
  {
    "text": "the aim of simplifying ebpf so that it",
    "start": "306080",
    "end": "308400"
  },
  {
    "text": "is easy to understand what each program",
    "start": "308400",
    "end": "310880"
  },
  {
    "text": "is doing on a running system",
    "start": "310880",
    "end": "312720"
  },
  {
    "text": "finally there are many security features",
    "start": "312720",
    "end": "314639"
  },
  {
    "text": "that could be added to eppf such as",
    "start": "314639",
    "end": "316320"
  },
  {
    "text": "using the same kernel signing mechanisms",
    "start": "316320",
    "end": "318560"
  },
  {
    "text": "used to sign kernel modules to sign and",
    "start": "318560",
    "end": "320479"
  },
  {
    "text": "verify ebpf programs",
    "start": "320479",
    "end": "322720"
  },
  {
    "text": "that said we can't wait to see what the",
    "start": "322720",
    "end": "324880"
  },
  {
    "text": "amazing evp community comes up with next",
    "start": "324880",
    "end": "329280"
  },
  {
    "text": "thanks eric now we dive into how an",
    "start": "329520",
    "end": "331360"
  },
  {
    "text": "organization can leverage falco to",
    "start": "331360",
    "end": "333120"
  },
  {
    "text": "supercharge its runtime security",
    "start": "333120",
    "end": "334880"
  },
  {
    "text": "monitoring we will cover a lot of",
    "start": "334880",
    "end": "336960"
  },
  {
    "text": "content very fast such as insights",
    "start": "336960",
    "end": "339280"
  },
  {
    "text": "detections or data modeling implications",
    "start": "339280",
    "end": "342400"
  },
  {
    "text": "and we are in la this year hollywood",
    "start": "342400",
    "end": "345199"
  },
  {
    "text": "magic happens just around the corner so",
    "start": "345199",
    "end": "347759"
  },
  {
    "text": "there will be a magical offensive",
    "start": "347759",
    "end": "349520"
  },
  {
    "text": "security demo with special effects and",
    "start": "349520",
    "end": "351840"
  },
  {
    "text": "then we show how you can use file code",
    "start": "351840",
    "end": "354000"
  },
  {
    "text": "to detect such attacker behavior which",
    "start": "354000",
    "end": "356080"
  },
  {
    "text": "is pretty cool",
    "start": "356080",
    "end": "358240"
  },
  {
    "text": "at the center of the stage are running",
    "start": "358240",
    "end": "360160"
  },
  {
    "text": "instances of a program in memory and",
    "start": "360160",
    "end": "362240"
  },
  {
    "text": "they make requests to the kernel via",
    "start": "362240",
    "end": "364319"
  },
  {
    "text": "system calls to interact with a piece of",
    "start": "364319",
    "end": "366160"
  },
  {
    "text": "hardware",
    "start": "366160",
    "end": "367280"
  },
  {
    "text": "system calls are a highly effective",
    "start": "367280",
    "end": "369360"
  },
  {
    "text": "source of truth for a broad spectrum of",
    "start": "369360",
    "end": "371919"
  },
  {
    "text": "security monitoring use cases",
    "start": "371919",
    "end": "374400"
  },
  {
    "text": "one could say that system calls hold the",
    "start": "374400",
    "end": "376800"
  },
  {
    "text": "potential to capture",
    "start": "376800",
    "end": "378880"
  },
  {
    "text": "entire classes of vulnerabilities and",
    "start": "378880",
    "end": "380880"
  },
  {
    "text": "attacker behavior often chained together",
    "start": "380880",
    "end": "382960"
  },
  {
    "text": "to a nice skill chain if there was one",
    "start": "382960",
    "end": "385360"
  },
  {
    "text": "takeaway message then it would be",
    "start": "385360",
    "end": "387199"
  },
  {
    "text": "syscalls never lie consider this your",
    "start": "387199",
    "end": "389520"
  },
  {
    "text": "open invitation to run off and make it a",
    "start": "389520",
    "end": "391759"
  },
  {
    "text": "false statement",
    "start": "391759",
    "end": "393360"
  },
  {
    "text": "when a system call is made it is the",
    "start": "393360",
    "end": "395759"
  },
  {
    "text": "metadata around the system call most",
    "start": "395759",
    "end": "397840"
  },
  {
    "text": "notably the process execution path",
    "start": "397840",
    "end": "400479"
  },
  {
    "text": "command args or file descriptor name",
    "start": "400479",
    "end": "402880"
  },
  {
    "text": "that is essential to determine if the",
    "start": "402880",
    "end": "404960"
  },
  {
    "text": "observed behavior is unusual or even",
    "start": "404960",
    "end": "407039"
  },
  {
    "text": "malicious for your environment",
    "start": "407039",
    "end": "410400"
  },
  {
    "text": "here's a list of the most important",
    "start": "410400",
    "end": "412080"
  },
  {
    "text": "system calls from a security monitoring",
    "start": "412080",
    "end": "414000"
  },
  {
    "text": "perspective",
    "start": "414000",
    "end": "415280"
  },
  {
    "text": "they are important because they cover",
    "start": "415280",
    "end": "417440"
  },
  {
    "text": "behavior observed in many exploitations",
    "start": "417440",
    "end": "420479"
  },
  {
    "text": "falca rules are written in a basic",
    "start": "420479",
    "end": "422400"
  },
  {
    "text": "expression language how it works the",
    "start": "422400",
    "end": "424240"
  },
  {
    "text": "rules specifically built for linux",
    "start": "424240",
    "end": "426720"
  },
  {
    "text": "kubernetes or cloud native are instantly",
    "start": "426720",
    "end": "429520"
  },
  {
    "text": "evaluated on the host",
    "start": "429520",
    "end": "431520"
  },
  {
    "text": "falco ships were standard rules created",
    "start": "431520",
    "end": "433599"
  },
  {
    "text": "by the community that you can easily",
    "start": "433599",
    "end": "436160"
  },
  {
    "text": "build upon",
    "start": "436160",
    "end": "437440"
  },
  {
    "text": "falco can also lock container events or",
    "start": "437440",
    "end": "439680"
  },
  {
    "text": "has a kubernetes integration today",
    "start": "439680",
    "end": "441759"
  },
  {
    "text": "however we continue to focus on system",
    "start": "441759",
    "end": "444080"
  },
  {
    "text": "calls only",
    "start": "444080",
    "end": "446240"
  },
  {
    "text": "a subset of falco rules falls into the",
    "start": "446240",
    "end": "448240"
  },
  {
    "text": "category of very specific security",
    "start": "448240",
    "end": "450240"
  },
  {
    "text": "detections",
    "start": "450240",
    "end": "451599"
  },
  {
    "text": "for instance ssh outbound connections",
    "start": "451599",
    "end": "454319"
  },
  {
    "text": "could channel a shell over non-standard",
    "start": "454319",
    "end": "456319"
  },
  {
    "text": "ports",
    "start": "456319",
    "end": "457280"
  },
  {
    "text": "perhaps configurations are such that",
    "start": "457280",
    "end": "459599"
  },
  {
    "text": "this should never happen",
    "start": "459599",
    "end": "461360"
  },
  {
    "text": "in this case such a rule can also serve",
    "start": "461360",
    "end": "463280"
  },
  {
    "text": "as assurance if the alert fires we can",
    "start": "463280",
    "end": "465919"
  },
  {
    "text": "say with high confidence that this is",
    "start": "465919",
    "end": "467520"
  },
  {
    "text": "unusual",
    "start": "467520",
    "end": "468720"
  },
  {
    "text": "a larger subset of falco rules falls",
    "start": "468720",
    "end": "470800"
  },
  {
    "text": "into the category of less specific",
    "start": "470800",
    "end": "474000"
  },
  {
    "text": "they are derived from high-level",
    "start": "474000",
    "end": "475680"
  },
  {
    "text": "constructs that are known to be security",
    "start": "475680",
    "end": "477759"
  },
  {
    "text": "critical for example spawning a shell by",
    "start": "477759",
    "end": "480560"
  },
  {
    "text": "a non-shell application or modifying",
    "start": "480560",
    "end": "483120"
  },
  {
    "text": "files below a set of system standard",
    "start": "483120",
    "end": "485039"
  },
  {
    "text": "binary directories these type of falco",
    "start": "485039",
    "end": "487440"
  },
  {
    "text": "rules generate a whole bunch of signals",
    "start": "487440",
    "end": "489680"
  },
  {
    "text": "and it is hard to map them to attacker",
    "start": "489680",
    "end": "491599"
  },
  {
    "text": "behavior",
    "start": "491599",
    "end": "493199"
  },
  {
    "text": "such rules can also assist in developing",
    "start": "493199",
    "end": "495520"
  },
  {
    "text": "new organization specific detections",
    "start": "495520",
    "end": "498319"
  },
  {
    "text": "in any case enormous work is required to",
    "start": "498319",
    "end": "500800"
  },
  {
    "text": "analyze and triage them",
    "start": "500800",
    "end": "502720"
  },
  {
    "text": "this is why follicle docs are usually",
    "start": "502720",
    "end": "505039"
  },
  {
    "text": "sent to a centralized data lake where",
    "start": "505039",
    "end": "507599"
  },
  {
    "text": "the environment is profiled over time in",
    "start": "507599",
    "end": "510000"
  },
  {
    "text": "order to fine-tune the rules",
    "start": "510000",
    "end": "513599"
  },
  {
    "text": "it's now time for a story worth sharing",
    "start": "513919",
    "end": "517200"
  },
  {
    "text": "once upon a time there was a web",
    "start": "517200",
    "end": "519360"
  },
  {
    "text": "application",
    "start": "519360",
    "end": "520959"
  },
  {
    "text": "what can possibly go wrong",
    "start": "520959",
    "end": "523360"
  },
  {
    "text": "over the next couple of slides we will",
    "start": "523360",
    "end": "525120"
  },
  {
    "text": "show",
    "start": "525120",
    "end": "526000"
  },
  {
    "text": "some of the ways you can exploit the",
    "start": "526000",
    "end": "527839"
  },
  {
    "text": "three top three consistently exploited",
    "start": "527839",
    "end": "530320"
  },
  {
    "text": "vulnerabilities and misconfigurations",
    "start": "530320",
    "end": "532320"
  },
  {
    "text": "that is arbitrary file read bugs remote",
    "start": "532320",
    "end": "534880"
  },
  {
    "text": "code execution and misconfigurations",
    "start": "534880",
    "end": "537440"
  },
  {
    "text": "leading to privileged escalation",
    "start": "537440",
    "end": "540399"
  },
  {
    "text": "i am a hacker now my terminal is ready",
    "start": "540399",
    "end": "543120"
  },
  {
    "text": "to go suppose we found a third party php",
    "start": "543120",
    "end": "545839"
  },
  {
    "text": "application and then discovered that the",
    "start": "545839",
    "end": "547519"
  },
  {
    "text": "app contains a local file include",
    "start": "547519",
    "end": "549360"
  },
  {
    "text": "vulnerability this means the app takes a",
    "start": "549360",
    "end": "552160"
  },
  {
    "text": "parameter from the user in the php",
    "start": "552160",
    "end": "554080"
  },
  {
    "text": "request and then goes to that file to",
    "start": "554080",
    "end": "556720"
  },
  {
    "text": "evaluate it as php code",
    "start": "556720",
    "end": "559440"
  },
  {
    "text": "interesting here is that we can use such",
    "start": "559440",
    "end": "561279"
  },
  {
    "text": "an lfi",
    "start": "561279",
    "end": "562399"
  },
  {
    "text": "to trigger an arbitrary file read we",
    "start": "562399",
    "end": "564160"
  },
  {
    "text": "just successfully read the world",
    "start": "564160",
    "end": "565920"
  },
  {
    "text": "treatable at the password file",
    "start": "565920",
    "end": "568399"
  },
  {
    "text": "more interesting is how do we get remote",
    "start": "568399",
    "end": "570560"
  },
  {
    "text": "code execution out of this the way we",
    "start": "570560",
    "end": "572560"
  },
  {
    "text": "can achieve this is to upload a file we",
    "start": "572560",
    "end": "574800"
  },
  {
    "text": "create over the lfi",
    "start": "574800",
    "end": "576800"
  },
  {
    "text": "and then invoke that file using the",
    "start": "576800",
    "end": "578800"
  },
  {
    "text": "local file include vulnerability again",
    "start": "578800",
    "end": "581600"
  },
  {
    "text": "the file we create would typically",
    "start": "581600",
    "end": "583519"
  },
  {
    "text": "contain a payload that gives us a shell",
    "start": "583519",
    "end": "585760"
  },
  {
    "text": "on the victim machine",
    "start": "585760",
    "end": "588640"
  },
  {
    "text": "in this example application there was an",
    "start": "588880",
    "end": "592240"
  },
  {
    "text": "authenticated endpoint that processes",
    "start": "592240",
    "end": "594080"
  },
  {
    "text": "uploaded files so we simply include this",
    "start": "594080",
    "end": "597200"
  },
  {
    "text": "admin upload functionality.php file with",
    "start": "597200",
    "end": "600000"
  },
  {
    "text": "the lfi in order to upload our script to",
    "start": "600000",
    "end": "603200"
  },
  {
    "text": "the web app that's sneaky",
    "start": "603200",
    "end": "605760"
  },
  {
    "text": "and we also know where that file ends up",
    "start": "605760",
    "end": "609920"
  },
  {
    "text": "after setting up the listener on the",
    "start": "610160",
    "end": "611680"
  },
  {
    "text": "attacker machine we make another request",
    "start": "611680",
    "end": "614160"
  },
  {
    "text": "to include the just uploaded file with",
    "start": "614160",
    "end": "616800"
  },
  {
    "text": "the lfi and that way invoke the payloads",
    "start": "616800",
    "end": "620240"
  },
  {
    "text": "now we have remote code execution on the",
    "start": "620240",
    "end": "622480"
  },
  {
    "text": "box",
    "start": "622480",
    "end": "624800"
  },
  {
    "text": "i now switch roles in m.a defense",
    "start": "625360",
    "end": "627680"
  },
  {
    "text": "magician one by one we will build up the",
    "start": "627680",
    "end": "630079"
  },
  {
    "text": "subregistry that will contain all the",
    "start": "630079",
    "end": "632240"
  },
  {
    "text": "events collected by falco for the",
    "start": "632240",
    "end": "634560"
  },
  {
    "text": "suspect processes",
    "start": "634560",
    "end": "637600"
  },
  {
    "text": "falco can log the open rate of the file",
    "start": "638720",
    "end": "641440"
  },
  {
    "text": "containing the payload then falco",
    "start": "641440",
    "end": "643440"
  },
  {
    "text": "detects that the non-shell applications",
    "start": "643440",
    "end": "646560"
  },
  {
    "text": "spawned a shell subsequently the payload",
    "start": "646560",
    "end": "649120"
  },
  {
    "text": "unwraps",
    "start": "649120",
    "end": "650240"
  },
  {
    "text": "and finally through the dupe system call",
    "start": "650240",
    "end": "654160"
  },
  {
    "text": "bass standarding centered out is hooked",
    "start": "654160",
    "end": "656640"
  },
  {
    "text": "to the tcp socket effectively providing",
    "start": "656640",
    "end": "659360"
  },
  {
    "text": "the attacker with a reverse shell",
    "start": "659360",
    "end": "662880"
  },
  {
    "text": "over the reverse shell remote commands",
    "start": "662880",
    "end": "664720"
  },
  {
    "text": "can be run on the victim machine",
    "start": "664720",
    "end": "668000"
  },
  {
    "text": "besides vulnerabilities",
    "start": "668000",
    "end": "669360"
  },
  {
    "text": "misconfigurations are a common concern",
    "start": "669360",
    "end": "671680"
  },
  {
    "text": "in this scenario the rpm manager is",
    "start": "671680",
    "end": "674880"
  },
  {
    "text": "terribly misconfigured the current user",
    "start": "674880",
    "end": "677279"
  },
  {
    "text": "account",
    "start": "677279",
    "end": "678240"
  },
  {
    "text": "can run the rpm binary literally",
    "start": "678240",
    "end": "680640"
  },
  {
    "text": "anything as root",
    "start": "680640",
    "end": "683839"
  },
  {
    "text": "i get it it's not actually that",
    "start": "683839",
    "end": "685200"
  },
  {
    "text": "glamorous but i hope it gets the point",
    "start": "685200",
    "end": "687040"
  },
  {
    "text": "across the",
    "start": "687040",
    "end": "688880"
  },
  {
    "text": "suitor process executed without",
    "start": "688880",
    "end": "691519"
  },
  {
    "text": "password enforcement the attacker now",
    "start": "691519",
    "end": "694160"
  },
  {
    "text": "has full control on the system",
    "start": "694160",
    "end": "697600"
  },
  {
    "text": "falca also has a generic rule that",
    "start": "697600",
    "end": "699600"
  },
  {
    "text": "detects if a package management process",
    "start": "699600",
    "end": "701920"
  },
  {
    "text": "is run inside a container",
    "start": "701920",
    "end": "704320"
  },
  {
    "text": "this demo made it look very easy to",
    "start": "704320",
    "end": "706800"
  },
  {
    "text": "accurately detect all malicious",
    "start": "706800",
    "end": "708399"
  },
  {
    "text": "artifacts in reality systems are very",
    "start": "708399",
    "end": "711200"
  },
  {
    "text": "noisy",
    "start": "711200",
    "end": "712480"
  },
  {
    "text": "and falco logs yes they can drive you",
    "start": "712480",
    "end": "715200"
  },
  {
    "text": "crazy this is",
    "start": "715200",
    "end": "717360"
  },
  {
    "text": "why we're now going to dive deeper into",
    "start": "717360",
    "end": "719360"
  },
  {
    "text": "some of the challenges you may face once",
    "start": "719360",
    "end": "721440"
  },
  {
    "text": "you're ready to get even more value out",
    "start": "721440",
    "end": "723120"
  },
  {
    "text": "of falcon",
    "start": "723120",
    "end": "725600"
  },
  {
    "text": "the application just read the file names",
    "start": "726160",
    "end": "728160"
  },
  {
    "text": "at the password",
    "start": "728160",
    "end": "730480"
  },
  {
    "text": "with a technique called directory",
    "start": "730480",
    "end": "732079"
  },
  {
    "text": "traversal etsy password is quite",
    "start": "732079",
    "end": "734000"
  },
  {
    "text": "literally read all the time on linux",
    "start": "734000",
    "end": "735760"
  },
  {
    "text": "systems so generically modifying",
    "start": "735760",
    "end": "739040"
  },
  {
    "text": "monitoring this file would not be very",
    "start": "739040",
    "end": "740959"
  },
  {
    "text": "helpful",
    "start": "740959",
    "end": "742000"
  },
  {
    "text": "but this particular artifact is pretty",
    "start": "742000",
    "end": "744000"
  },
  {
    "text": "suspicious and indeed could indicate",
    "start": "744000",
    "end": "746240"
  },
  {
    "text": "that the app is vulnerable to an",
    "start": "746240",
    "end": "747680"
  },
  {
    "text": "arbitrary file read bug",
    "start": "747680",
    "end": "750399"
  },
  {
    "text": "but what happened to the falco logs here",
    "start": "750399",
    "end": "752560"
  },
  {
    "text": "the directory traversal signal is not in",
    "start": "752560",
    "end": "755360"
  },
  {
    "text": "the file descriptor name this will make",
    "start": "755360",
    "end": "758079"
  },
  {
    "text": "a good and bad etsy password read look",
    "start": "758079",
    "end": "760399"
  },
  {
    "text": "exactly the same",
    "start": "760399",
    "end": "763040"
  },
  {
    "text": "some source and make file modifications",
    "start": "763040",
    "end": "765200"
  },
  {
    "text": "are necessary to unlock the entire",
    "start": "765200",
    "end": "767040"
  },
  {
    "text": "debugging engine so we start our",
    "start": "767040",
    "end": "768639"
  },
  {
    "text": "debugging journey in kernel space bpf",
    "start": "768639",
    "end": "770959"
  },
  {
    "text": "print k will show that the file",
    "start": "770959",
    "end": "772639"
  },
  {
    "text": "descriptor name is captured as expected",
    "start": "772639",
    "end": "775519"
  },
  {
    "text": "following the control flow in user space",
    "start": "775519",
    "end": "777920"
  },
  {
    "text": "will show",
    "start": "777920",
    "end": "779519"
  },
  {
    "text": "that the fd path is being sanitized",
    "start": "779519",
    "end": "782399"
  },
  {
    "text": "modifying this sanitization function can",
    "start": "782399",
    "end": "784639"
  },
  {
    "text": "fix this ironically user input",
    "start": "784639",
    "end": "787360"
  },
  {
    "text": "sanitization function or let's say",
    "start": "787360",
    "end": "789120"
  },
  {
    "text": "better lag thereof",
    "start": "789120",
    "end": "790560"
  },
  {
    "text": "are often the root cause for such",
    "start": "790560",
    "end": "792320"
  },
  {
    "text": "arbitrary file read bugs we're trying to",
    "start": "792320",
    "end": "794160"
  },
  {
    "text": "detect here",
    "start": "794160",
    "end": "796879"
  },
  {
    "text": "next",
    "start": "797200",
    "end": "798160"
  },
  {
    "text": "making sense out of command arcs or file",
    "start": "798160",
    "end": "800480"
  },
  {
    "text": "descriptor names is the tricky part that",
    "start": "800480",
    "end": "802399"
  },
  {
    "text": "can drive you crazy this is because",
    "start": "802399",
    "end": "805120"
  },
  {
    "text": "one you rely too much on prior",
    "start": "805120",
    "end": "806959"
  },
  {
    "text": "assumptions to match for two specific",
    "start": "806959",
    "end": "809279"
  },
  {
    "text": "strings and are at risk of missing",
    "start": "809279",
    "end": "811760"
  },
  {
    "text": "potentially malicious behavior or two",
    "start": "811760",
    "end": "815200"
  },
  {
    "text": "you have a hard time tuning your rule",
    "start": "815200",
    "end": "817120"
  },
  {
    "text": "and constantly play",
    "start": "817120",
    "end": "818880"
  },
  {
    "text": "catch up with filtering out benign",
    "start": "818880",
    "end": "821040"
  },
  {
    "text": "activities specific to your environment",
    "start": "821040",
    "end": "823760"
  },
  {
    "text": "the hard part really is that shell input",
    "start": "823760",
    "end": "826639"
  },
  {
    "text": "is touring complete",
    "start": "826639",
    "end": "829440"
  },
  {
    "text": "combined with the inherit variability in",
    "start": "829440",
    "end": "831760"
  },
  {
    "text": "exploits there is an unknown amount of",
    "start": "831760",
    "end": "834160"
  },
  {
    "text": "semantically related process behavior",
    "start": "834160",
    "end": "836480"
  },
  {
    "text": "that will look very different in all of",
    "start": "836480",
    "end": "838800"
  },
  {
    "text": "these system called metadata",
    "start": "838800",
    "end": "841199"
  },
  {
    "text": "to make matters worse many benign",
    "start": "841199",
    "end": "843360"
  },
  {
    "text": "commands contain exotic elements think",
    "start": "843360",
    "end": "845920"
  },
  {
    "text": "of hashes ips timestamps that can make",
    "start": "845920",
    "end": "849920"
  },
  {
    "text": "normalization and profiling a daunting",
    "start": "849920",
    "end": "852160"
  },
  {
    "text": "task in and of itself",
    "start": "852160",
    "end": "856199"
  },
  {
    "text": "furthermore",
    "start": "856399",
    "end": "857600"
  },
  {
    "text": "similarity or rarity alone is of little",
    "start": "857600",
    "end": "860800"
  },
  {
    "text": "help to know if the intent of the",
    "start": "860800",
    "end": "863279"
  },
  {
    "text": "process is malicious",
    "start": "863279",
    "end": "865040"
  },
  {
    "text": "therefore knowledge bases that encode",
    "start": "865040",
    "end": "867279"
  },
  {
    "text": "domain knowledge are super critical as",
    "start": "867279",
    "end": "869680"
  },
  {
    "text": "well",
    "start": "869680",
    "end": "871199"
  },
  {
    "text": "finally depending on your threat model",
    "start": "871199",
    "end": "873440"
  },
  {
    "text": "and the type of activity you seek to",
    "start": "873440",
    "end": "875120"
  },
  {
    "text": "detect you also have to be aware of ways",
    "start": "875120",
    "end": "877519"
  },
  {
    "text": "that obfuscate behavior",
    "start": "877519",
    "end": "879440"
  },
  {
    "text": "for example when reading a file over",
    "start": "879440",
    "end": "881360"
  },
  {
    "text": "shell built-ins no external exactly e",
    "start": "881360",
    "end": "884000"
  },
  {
    "text": "system call is made that would allow you",
    "start": "884000",
    "end": "885839"
  },
  {
    "text": "to see those intermediary steps",
    "start": "885839",
    "end": "889120"
  },
  {
    "text": "however",
    "start": "889120",
    "end": "891199"
  },
  {
    "text": "when touching a monitored file falco has",
    "start": "891199",
    "end": "893760"
  },
  {
    "text": "the power to accurately lock such",
    "start": "893760",
    "end": "895680"
  },
  {
    "text": "activity regardless of the level of",
    "start": "895680",
    "end": "898320"
  },
  {
    "text": "obfuscation or exploit variability",
    "start": "898320",
    "end": "901360"
  },
  {
    "text": "this file descriptor",
    "start": "901360",
    "end": "902959"
  },
  {
    "text": "or monitoring capabilities are beautiful",
    "start": "902959",
    "end": "905279"
  },
  {
    "text": "and one of my personal favorite features",
    "start": "905279",
    "end": "907199"
  },
  {
    "text": "of falcom",
    "start": "907199",
    "end": "908560"
  },
  {
    "text": "in summary the community as a whole",
    "start": "908560",
    "end": "910560"
  },
  {
    "text": "still has a lot of work to do to solve",
    "start": "910560",
    "end": "912720"
  },
  {
    "text": "both the semantic similarity challenge",
    "start": "912720",
    "end": "915519"
  },
  {
    "text": "and the intent attribution challenge",
    "start": "915519",
    "end": "919279"
  },
  {
    "text": "moving on to another important aspect",
    "start": "919279",
    "end": "922959"
  },
  {
    "text": "there is a growing body of research on",
    "start": "922959",
    "end": "925279"
  },
  {
    "text": "correlating signals according to the",
    "start": "925279",
    "end": "927360"
  },
  {
    "text": "miter attack framework in order to",
    "start": "927360",
    "end": "929839"
  },
  {
    "text": "derive a higher fidelity alert",
    "start": "929839",
    "end": "933120"
  },
  {
    "text": "correlations can also help tremendously",
    "start": "933120",
    "end": "935360"
  },
  {
    "text": "in the alert triage process",
    "start": "935360",
    "end": "938320"
  },
  {
    "text": "popular tools are big data technologies",
    "start": "938320",
    "end": "941199"
  },
  {
    "text": "such as presto spark or elasticsearch as",
    "start": "941199",
    "end": "944480"
  },
  {
    "text": "far as methodologies are concerned there",
    "start": "944480",
    "end": "947040"
  },
  {
    "text": "are endless ways",
    "start": "947040",
    "end": "948800"
  },
  {
    "text": "one simple approach could be to simply",
    "start": "948800",
    "end": "950639"
  },
  {
    "text": "group and aggregate the signals",
    "start": "950639",
    "end": "953279"
  },
  {
    "text": "grouping could be done on a per",
    "start": "953279",
    "end": "955040"
  },
  {
    "text": "container basis or for a particular",
    "start": "955040",
    "end": "957199"
  },
  {
    "text": "subprocess tree",
    "start": "957199",
    "end": "958720"
  },
  {
    "text": "when performing subprocess tree analysis",
    "start": "958720",
    "end": "961120"
  },
  {
    "text": "there are a few tricks that can help",
    "start": "961120",
    "end": "963199"
  },
  {
    "text": "reduce computational burden for example",
    "start": "963199",
    "end": "966320"
  },
  {
    "text": "you can check for the same virtual",
    "start": "966320",
    "end": "967920"
  },
  {
    "text": "process group id to correlate all falco",
    "start": "967920",
    "end": "970639"
  },
  {
    "text": "rules in a connected subtrees",
    "start": "970639",
    "end": "973279"
  },
  {
    "text": "or you can check for the same tty or",
    "start": "973279",
    "end": "976079"
  },
  {
    "text": "login shell id if the use case is to",
    "start": "976079",
    "end": "978240"
  },
  {
    "text": "track down activity in the same terminal",
    "start": "978240",
    "end": "980720"
  },
  {
    "text": "or interactive shell",
    "start": "980720",
    "end": "983040"
  },
  {
    "text": "one word of caution here again making",
    "start": "983040",
    "end": "984880"
  },
  {
    "text": "too many prior assumptions regarding how",
    "start": "984880",
    "end": "987040"
  },
  {
    "text": "correlated signals are expected to look",
    "start": "987040",
    "end": "989040"
  },
  {
    "text": "like can be tricky in reality we just",
    "start": "989040",
    "end": "991839"
  },
  {
    "text": "don't know things always look very",
    "start": "991839",
    "end": "993920"
  },
  {
    "text": "logical in retrospect and puzzling and",
    "start": "993920",
    "end": "996480"
  },
  {
    "text": "prospect and this is especially true in",
    "start": "996480",
    "end": "998880"
  },
  {
    "text": "security",
    "start": "998880",
    "end": "1000399"
  },
  {
    "text": "personally a big fan of first",
    "start": "1000399",
    "end": "1002639"
  },
  {
    "text": "focusing on high value single events one",
    "start": "1002639",
    "end": "1005519"
  },
  {
    "text": "at a time in line with what we have",
    "start": "1005519",
    "end": "1007440"
  },
  {
    "text": "shown up to this point before performing",
    "start": "1007440",
    "end": "1010000"
  },
  {
    "text": "correlations",
    "start": "1010000",
    "end": "1012720"
  },
  {
    "text": "one big question remains in the room is",
    "start": "1014160",
    "end": "1016160"
  },
  {
    "text": "falco right from our organization",
    "start": "1016160",
    "end": "1019759"
  },
  {
    "text": "we demonstrated that these type of tools",
    "start": "1019759",
    "end": "1021839"
  },
  {
    "text": "hold the potential to capture",
    "start": "1021839",
    "end": "1023680"
  },
  {
    "text": "exploitation artifacts for entire",
    "start": "1023680",
    "end": "1026079"
  },
  {
    "text": "classes of vulnerabilities",
    "start": "1026079",
    "end": "1028400"
  },
  {
    "text": "within one day of deployment you can get",
    "start": "1028400",
    "end": "1030880"
  },
  {
    "text": "a lot of value out of the tool",
    "start": "1030880",
    "end": "1033038"
  },
  {
    "text": "as the standard rules that were created",
    "start": "1033039",
    "end": "1035360"
  },
  {
    "text": "by the community are very well tuned",
    "start": "1035360",
    "end": "1039520"
  },
  {
    "text": "falco is production ready and battle",
    "start": "1039520",
    "end": "1041918"
  },
  {
    "text": "proven featuring a sophisticated yet",
    "start": "1041919",
    "end": "1044798"
  },
  {
    "text": "easily extendable kernel instrumentation",
    "start": "1044799",
    "end": "1047760"
  },
  {
    "text": "finally the tax you pay in terms of cpu",
    "start": "1047760",
    "end": "1050400"
  },
  {
    "text": "and memory usage is appropriate",
    "start": "1050400",
    "end": "1052320"
  },
  {
    "text": "considering falco's capabilities",
    "start": "1052320",
    "end": "1056639"
  },
  {
    "text": "earlier we touched on some of the",
    "start": "1057120",
    "end": "1058799"
  },
  {
    "text": "possibilities evpf in general could",
    "start": "1058799",
    "end": "1061039"
  },
  {
    "text": "evolve but also for security monitoring",
    "start": "1061039",
    "end": "1063360"
  },
  {
    "text": "focused extension there are a lot of",
    "start": "1063360",
    "end": "1065760"
  },
  {
    "text": "possibilities that have yet to be",
    "start": "1065760",
    "end": "1067440"
  },
  {
    "text": "explored",
    "start": "1067440",
    "end": "1069120"
  },
  {
    "text": "one projection could be that more high",
    "start": "1069120",
    "end": "1071039"
  },
  {
    "text": "volume kernel signals could be",
    "start": "1071039",
    "end": "1073440"
  },
  {
    "text": "discovered this is also in line with",
    "start": "1073440",
    "end": "1075440"
  },
  {
    "text": "what we heard earlier this morning that",
    "start": "1075440",
    "end": "1077840"
  },
  {
    "text": "perhaps the way we do tracing at the",
    "start": "1077840",
    "end": "1079919"
  },
  {
    "text": "moment where falco is not what we should",
    "start": "1079919",
    "end": "1081679"
  },
  {
    "text": "be doing in the future",
    "start": "1081679",
    "end": "1084160"
  },
  {
    "text": "and this also includes new ways of",
    "start": "1084160",
    "end": "1087600"
  },
  {
    "text": "deriving high value kernel signals also",
    "start": "1087600",
    "end": "1090559"
  },
  {
    "text": "enhanced encoding of the enriched",
    "start": "1090559",
    "end": "1092240"
  },
  {
    "text": "metadata around process collection which",
    "start": "1092240",
    "end": "1094400"
  },
  {
    "text": "would address all the challenges",
    "start": "1094400",
    "end": "1096880"
  },
  {
    "text": "we touched on earlier when making sense",
    "start": "1096880",
    "end": "1098960"
  },
  {
    "text": "out of command arcs or file descriptor",
    "start": "1098960",
    "end": "1101200"
  },
  {
    "text": "names",
    "start": "1101200",
    "end": "1102880"
  },
  {
    "text": "finally advanced pre-filters in the",
    "start": "1102880",
    "end": "1105120"
  },
  {
    "text": "kernel could be in enticing proposition",
    "start": "1105120",
    "end": "1107840"
  },
  {
    "text": "advanced here could mean that the",
    "start": "1107840",
    "end": "1110160"
  },
  {
    "text": "semantics or intent of a process",
    "start": "1110160",
    "end": "1113280"
  },
  {
    "text": "is encoded as a state vector for more",
    "start": "1113280",
    "end": "1115919"
  },
  {
    "text": "dynamic ai ml like reasoning right in",
    "start": "1115919",
    "end": "1118480"
  },
  {
    "text": "the kernel and i am aware we are very",
    "start": "1118480",
    "end": "1120799"
  },
  {
    "text": "very far away from this",
    "start": "1120799",
    "end": "1122480"
  },
  {
    "text": "but remember a lot can happen between",
    "start": "1122480",
    "end": "1124240"
  },
  {
    "text": "now and never",
    "start": "1124240",
    "end": "1127039"
  },
  {
    "text": "wait what if i didn't pay any",
    "start": "1127760",
    "end": "1129919"
  },
  {
    "text": "attention at all it happens",
    "start": "1129919",
    "end": "1132000"
  },
  {
    "text": "start with a very simple rules created",
    "start": "1132000",
    "end": "1134160"
  },
  {
    "text": "by the community",
    "start": "1134160",
    "end": "1136000"
  },
  {
    "text": "customize falco and falco rules to suit",
    "start": "1136000",
    "end": "1138480"
  },
  {
    "text": "your environment and threat model better",
    "start": "1138480",
    "end": "1140880"
  },
  {
    "text": "then slowly venture out eventually into",
    "start": "1140880",
    "end": "1143280"
  },
  {
    "text": "deep space to start getting even more",
    "start": "1143280",
    "end": "1145200"
  },
  {
    "text": "value out of the tool",
    "start": "1145200",
    "end": "1147200"
  },
  {
    "text": "and",
    "start": "1147200",
    "end": "1148240"
  },
  {
    "text": "for which sophisticated data modeling",
    "start": "1148240",
    "end": "1150480"
  },
  {
    "text": "approaches can be of help perhaps in the",
    "start": "1150480",
    "end": "1152960"
  },
  {
    "text": "future we'll be given the opportunity to",
    "start": "1152960",
    "end": "1155280"
  },
  {
    "text": "dive even deeper into modeling",
    "start": "1155280",
    "end": "1156880"
  },
  {
    "text": "implications for now thank you for",
    "start": "1156880",
    "end": "1159520"
  },
  {
    "text": "having us here and big shout out to the",
    "start": "1159520",
    "end": "1162320"
  },
  {
    "text": "falco developers and the falco community",
    "start": "1162320",
    "end": "1167210"
  },
  {
    "text": "[Applause]",
    "start": "1167210",
    "end": "1172589"
  }
]