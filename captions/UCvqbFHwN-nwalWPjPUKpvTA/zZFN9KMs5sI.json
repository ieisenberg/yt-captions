[
  {
    "text": "uh today yeah and I will be giving an intran deep dive of cool native's sick",
    "start": "9840",
    "end": "15780"
  },
  {
    "text": "storage my name is Xin Yang I work at VMware in the cloud native sports team",
    "start": "15780",
    "end": "21359"
  },
  {
    "text": "I'm also a co-chair of six storage and I am yanchafronic I'm from Red Hat I",
    "start": "21359",
    "end": "27300"
  },
  {
    "text": "work on openshift storage and I am techlete of kubernetes storage",
    "start": "27300",
    "end": "32940"
  },
  {
    "text": "so what are we talk what are we going to talk about we will talk about what is sex storage",
    "start": "32940",
    "end": "39239"
  },
  {
    "text": "what we did in couple of past releases what is being developed right now and",
    "start": "39239",
    "end": "45600"
  },
  {
    "text": "most importantly how to get involved in the end we would like to have some time for question and answers",
    "start": "45600",
    "end": "51780"
  },
  {
    "text": "and so uh what actually is special interest",
    "start": "51780",
    "end": "57059"
  },
  {
    "text": "group Dash storage it's a pretty loose group of people we don't have any",
    "start": "57059",
    "end": "63799"
  },
  {
    "text": "onboarding process or graduation you just come and contribute",
    "start": "63799",
    "end": "70560"
  },
  {
    "text": "and that's how you become part of six storage we have two code chairs Saturday from",
    "start": "70560",
    "end": "76860"
  },
  {
    "text": "Google and xinjiang from VMware and we have two decades Michelle Orr",
    "start": "76860",
    "end": "82140"
  },
  {
    "text": "from Google and me from Red Hat we have quite some CSI channels on",
    "start": "82140",
    "end": "89220"
  },
  {
    "text": "kubernetes slack here are here are some numbers from the biggest one uh the main six storage channel has 5",
    "start": "89220",
    "end": "97619"
  },
  {
    "text": "000 people on them on it but that doesn't mean that everybody contributes",
    "start": "97619",
    "end": "102840"
  },
  {
    "text": "like most people they just come and ask or find something in the history and never say anything on the channel and",
    "start": "102840",
    "end": "110460"
  },
  {
    "text": "the group that actually does uh issues answer the questions",
    "start": "110460",
    "end": "118159"
  },
  {
    "text": "write pull requests fixed issues work on new features this is pretty small",
    "start": "118159",
    "end": "123840"
  },
  {
    "text": "group we have a regular bi-weekly storage Zoom",
    "start": "123840",
    "end": "129599"
  },
  {
    "text": "meeting on average we have 24 25 attendees but again not everybody is",
    "start": "129599",
    "end": "135540"
  },
  {
    "text": "speaking I would say like 30 percent is active and the last rest is just",
    "start": "135540",
    "end": "140819"
  },
  {
    "text": "listening and throughout the time we accumulated a",
    "start": "140819",
    "end": "146220"
  },
  {
    "text": "30 unique sick approvers from our stick in our different repositories and",
    "start": "146220",
    "end": "152940"
  },
  {
    "text": "directories and directories of different repositories",
    "start": "152940",
    "end": "157280"
  },
  {
    "text": "uh what do we do uh we have a charger for that we basically",
    "start": "158340",
    "end": "163500"
  },
  {
    "text": "maintain the storage apis for users like persistent volumes persistent volume",
    "start": "163500",
    "end": "169560"
  },
  {
    "text": "claims snapshots snapshot contents storage classes volumes and short classes volume attachments uh",
    "start": "169560",
    "end": "176459"
  },
  {
    "text": "storage capacities and so on so all the apis exposed in kubernetes related to",
    "start": "176459",
    "end": "181920"
  },
  {
    "text": "storage we maintain them we also maintain the implementation of the SP apis and kubernetes",
    "start": "181920",
    "end": "188879"
  },
  {
    "text": "and on the bottom and we maintain kubernetes volume",
    "start": "188879",
    "end": "194459"
  },
  {
    "text": "plugins that are in kubernetes kubernetes repository like NFS like",
    "start": "194459",
    "end": "200180"
  },
  {
    "text": "RBD and so on except for secret config Maps then",
    "start": "200180",
    "end": "205980"
  },
  {
    "text": "download apis for projected and empty theirs we co maintain them with signals",
    "start": "205980",
    "end": "211140"
  },
  {
    "text": "because sick node knows better than us how to get a secret in cubelet they already have functionality for that",
    "start": "211140",
    "end": "217379"
  },
  {
    "text": "and we know how to mount volumes and present it to users to Ports",
    "start": "217379",
    "end": "223400"
  },
  {
    "text": "we also created and maintain the container storage interface CSI and we",
    "start": "223400",
    "end": "230519"
  },
  {
    "text": "maintain the kubernetes implementation both in kubernetes kubernetes repository and in many of our CSI sidecars but we",
    "start": "230519",
    "end": "240480"
  },
  {
    "text": "don't maintain too many CSI drivers we maintain the generic ones like NFS like",
    "start": "240480",
    "end": "246060"
  },
  {
    "text": "sambam but most of the better but not they aren't better but",
    "start": "246060",
    "end": "252860"
  },
  {
    "text": "more important drivers are owned by sequel provider like CSA drivers for AWS",
    "start": "252860",
    "end": "260100"
  },
  {
    "text": "or the cloud all the clouds or other community for example Rook maintains the",
    "start": "260100",
    "end": "266160"
  },
  {
    "text": "CSI driver for cfrbd and CFS and we also started container object",
    "start": "266160",
    "end": "272699"
  },
  {
    "text": "storage interface which is our attempts to provide object storage to pods and",
    "start": "272699",
    "end": "278280"
  },
  {
    "text": "object storage in this case means like S3 buckets and similar",
    "start": "278280",
    "end": "284639"
  },
  {
    "text": "object storages this is in Alpha yet",
    "start": "284639",
    "end": "291060"
  },
  {
    "text": "so what we did in 126 SGA in 126 we allow CSI drivers to opt",
    "start": "291060",
    "end": "301919"
  },
  {
    "text": "in for applying FS group to volumes FS group is kubernetes",
    "start": "301919",
    "end": "309720"
  },
  {
    "text": "mechanism how to uh allow a random Port that runs as a",
    "start": "309720",
    "end": "315300"
  },
  {
    "text": "random user on random group to access data on a volume that again is owned by",
    "start": "315300",
    "end": "321120"
  },
  {
    "text": "random user random group so uh with FS group uh",
    "start": "321120",
    "end": "326539"
  },
  {
    "text": "cubelet basically change ownership of all files on a volume so the Pod can",
    "start": "326539",
    "end": "334080"
  },
  {
    "text": "read it they can access it this is slow and uh some storage",
    "start": "334080",
    "end": "340020"
  },
  {
    "text": "backends have a better options how to do that so if the storage backend can has",
    "start": "340020",
    "end": "346020"
  },
  {
    "text": "has some better way how to apply FS group to a volume they can opt in this",
    "start": "346020",
    "end": "351479"
  },
  {
    "text": "is really dedicated only to special CSI drivers like like Samba where you can apply FS group using Mount option for",
    "start": "351479",
    "end": "359280"
  },
  {
    "text": "example if your CSI driver doesn't have any such option please use kubernetes",
    "start": "359280",
    "end": "364340"
  },
  {
    "text": "functionality because if we improve it or anybody improves it then or CSI drivers will benefit from that not only",
    "start": "364340",
    "end": "370440"
  },
  {
    "text": "your CSI level users uh SGA we also are continuing with CSM",
    "start": "370440",
    "end": "376620"
  },
  {
    "text": "migration and we have Azure file and vsphere a CSI migration that means that",
    "start": "376620",
    "end": "383759"
  },
  {
    "text": "users can still use the old Azure file and vsphere storage classes persistent",
    "start": "383759",
    "end": "389340"
  },
  {
    "text": "volumes they don't need to change anything however when they upgrade to 126 all the storage work will be done by",
    "start": "389340",
    "end": "396120"
  },
  {
    "text": "CSI driver and not by cubelet so uh again from user perspective",
    "start": "396120",
    "end": "403020"
  },
  {
    "text": "nothing changes from admin perspective they need to install the driver of",
    "start": "403020",
    "end": "408120"
  },
  {
    "text": "course but it should be seamless for users as beta",
    "start": "408120",
    "end": "413639"
  },
  {
    "text": "we are improving how storage class is applied and how default storage classes applies to persistent volume claims if",
    "start": "413639",
    "end": "421919"
  },
  {
    "text": "you know something about default storage classes it's just an annotation on a storage class and if there is no default",
    "start": "421919",
    "end": "429900"
  },
  {
    "text": "storage class at the point when user creates persistent volume claim asking for this default storage class then this",
    "start": "429900",
    "end": "436440"
  },
  {
    "text": "persistent volume claim will be never dynamically provisioned it will stay pending forever basically",
    "start": "436440",
    "end": "441720"
  },
  {
    "text": "so we fixed that when you create a personal volume plane first asking for",
    "start": "441720",
    "end": "447300"
  },
  {
    "text": "default storage class and the default storage class later we will we will retroactively change the percent",
    "start": "447300",
    "end": "453840"
  },
  {
    "text": "volume claim and it will get provisioned from the default storage class also if you guys have two or more default",
    "start": "453840",
    "end": "460560"
  },
  {
    "text": "storage classes for a short time uh persistent volume claims will get some",
    "start": "460560",
    "end": "466620"
  },
  {
    "text": "of them and they will not return error and uh",
    "start": "466620",
    "end": "474780"
  },
  {
    "text": "I would like to dive deeper into non-graceful not shutdown which is a new",
    "start": "474780",
    "end": "479880"
  },
  {
    "text": "feature in kubernetes 120 6s beta uh first what is a graceful no shutdown",
    "start": "479880",
    "end": "487400"
  },
  {
    "text": "it is a kubernetes feature in cubelet and",
    "start": "487400",
    "end": "493620"
  },
  {
    "text": "it handles situation when user wants to turn off a note so they SSH to a note",
    "start": "493620",
    "end": "500240"
  },
  {
    "text": "issue a command to power off the machine or they use some API to gracefully shut",
    "start": "500240",
    "end": "506160"
  },
  {
    "text": "down to send the shutdown signal to the node and cubelet will gracefully stop",
    "start": "506160",
    "end": "511620"
  },
  {
    "text": "all the containers in the unmount all the volumes and it will Mark itself as",
    "start": "511620",
    "end": "516659"
  },
  {
    "text": "not available",
    "start": "516659",
    "end": "519500"
  },
  {
    "text": "[Music]",
    "start": "533370",
    "end": "536519"
  },
  {
    "text": "uh it's something like sensing it's we are getting closer to fencing we don't have fencing yet but",
    "start": "542339",
    "end": "548279"
  },
  {
    "text": "uh in 126 uh",
    "start": "548279",
    "end": "553320"
  },
  {
    "text": "if you want to use the feature the expected workflow is that of course you enable the",
    "start": "553320",
    "end": "558779"
  },
  {
    "text": "feature gate node out of service volume detached feature gate then the cluster admin or some",
    "start": "558779",
    "end": "566279"
  },
  {
    "text": "third-party software detects that the node is unhealthy or the network is split or whatever again cluster admin or third party",
    "start": "566279",
    "end": "573959"
  },
  {
    "text": "software shuts down the node using either physically going to the machine",
    "start": "573959",
    "end": "579660"
  },
  {
    "text": "and turning off or using ipmi using idrac using Cloud apis whatever",
    "start": "579660",
    "end": "587100"
  },
  {
    "text": "and that's still nothing new you could do it even before but if you do it in",
    "start": "587100",
    "end": "593700"
  },
  {
    "text": "kubernetes 125 without this feature then you need to wait six minutes for fuel",
    "start": "593700",
    "end": "599240"
  },
  {
    "text": "for the control manager to see that the node is not available and after six",
    "start": "599240",
    "end": "606360"
  },
  {
    "text": "minutes we detach volumes from that node only after six minutes with this",
    "start": "606360",
    "end": "612660"
  },
  {
    "text": "Improvement in 126 if clusteramine or third-party",
    "start": "612660",
    "end": "618540"
  },
  {
    "text": "software applies attend no no kubernetes dot IO slash out of service",
    "start": "618540",
    "end": "625500"
  },
  {
    "text": "we will kill all the pots immediately or delete them because we can't kill them",
    "start": "625500",
    "end": "630839"
  },
  {
    "text": "on the Node because it's available and we will detach all the volumes at",
    "start": "630839",
    "end": "636540"
  },
  {
    "text": "once so uh the replacement parts that need the volumes can start on different modes",
    "start": "636540",
    "end": "642540"
  },
  {
    "text": "quickly you don't need to wait for this magic six minutes",
    "start": "642540",
    "end": "648800"
  },
  {
    "text": "and as Alpha in 126 you can provision volumes across",
    "start": "650040",
    "end": "656700"
  },
  {
    "text": "namespaces either from other volumes like cloning or from snapshots and tomorrow there will be a talk by",
    "start": "656700",
    "end": "664220"
  },
  {
    "text": "masaki and takusame please go there if you are interested I will",
    "start": "664220",
    "end": "670500"
  },
  {
    "text": "not go into details and in 127 that will be covered by",
    "start": "670500",
    "end": "678240"
  },
  {
    "text": "sorry thanks thanks yeah so I will talk about what we did in 1.27",
    "start": "678240",
    "end": "684120"
  },
  {
    "text": "release you can see that we moved a lot of features to Beta in 1.27 we have a",
    "start": "684120",
    "end": "690600"
  },
  {
    "text": "secure Linux relabeling feature that speeds up the container startup Time by",
    "start": "690600",
    "end": "697200"
  },
  {
    "text": "multi volumes with the correct secure Linux label instead of changing each file on the volumes recursively",
    "start": "697200",
    "end": "705120"
  },
  {
    "text": "we also have robust worry manager reconstruction feature this is a refactoring of the volume",
    "start": "705120",
    "end": "712320"
  },
  {
    "text": "manager code it allows cubelet to provide more information about how",
    "start": "712320",
    "end": "718140"
  },
  {
    "text": "existing volumes are mounted and this will help us to rebuild and clean up the",
    "start": "718140",
    "end": "724320"
  },
  {
    "text": "volumes at the cubelete restart time we also have node expense secret this",
    "start": "724320",
    "end": "731700"
  },
  {
    "text": "allows the CSI driver to pass the sequence information to the storage system when the file system is expanded",
    "start": "731700",
    "end": "739680"
  },
  {
    "text": "on a node during volume expansion and we also have a feature that we",
    "start": "739680",
    "end": "745800"
  },
  {
    "text": "co-owned with Sig apps where we provide an option to allow the",
    "start": "745800",
    "end": "751260"
  },
  {
    "text": "PVCs created by the staple sets to be deleted automatically when stable set is",
    "start": "751260",
    "end": "757320"
  },
  {
    "text": "deleted in 127 we also have this rewrite once",
    "start": "757320",
    "end": "766620"
  },
  {
    "text": "pod persistent volume access mode this is a new access mode that we added",
    "start": "766620",
    "end": "772139"
  },
  {
    "text": "so in cssback there are a few access modes one is called a single node writer that",
    "start": "772139",
    "end": "779639"
  },
  {
    "text": "means that the volume can be published on a node as a read write only once at",
    "start": "779639",
    "end": "787079"
  },
  {
    "text": "any given time but it did not specify whether that means only one pod or",
    "start": "787079",
    "end": "793019"
  },
  {
    "text": "multiple Parts can access the volume so we introduced two new access modes",
    "start": "793019",
    "end": "799500"
  },
  {
    "text": "one is called single node single writer that restrict the access to that volume",
    "start": "799500",
    "end": "805320"
  },
  {
    "text": "by just one part on that node and this is corresponding to this new rewrite",
    "start": "805320",
    "end": "812519"
  },
  {
    "text": "once pod PV access mode in the kubernetes and also there is another new mode a",
    "start": "812519",
    "end": "820500"
  },
  {
    "text": "single node multi-writer that allows multiple parts to access the volume on",
    "start": "820500",
    "end": "826200"
  },
  {
    "text": "that node so this is the corresponding to read write once PV access mode in kubernetes",
    "start": "826200",
    "end": "833399"
  },
  {
    "text": "if a sister driver do not support this new modes then it can still use a single",
    "start": "833399",
    "end": "838740"
  },
  {
    "text": "node writer that's the existing Behavior",
    "start": "838740",
    "end": "843500"
  },
  {
    "text": "in 1.27 we also have a an option to",
    "start": "845339",
    "end": "850500"
  },
  {
    "text": "prevent unauthorized body mode conversion this also moves to data",
    "start": "850500",
    "end": "856200"
  },
  {
    "text": "without this feature we can create a PVC from a on Snap snapshot and convert the",
    "start": "856200",
    "end": "862920"
  },
  {
    "text": "water mode from file system to Roblox or vice versa without any control this",
    "start": "862920",
    "end": "869220"
  },
  {
    "text": "could potentially introduce security problems on the other hand the ability to change",
    "start": "869220",
    "end": "875579"
  },
  {
    "text": "the volume mode from file system to Roblox and retrieve change blocks is a",
    "start": "875579",
    "end": "881240"
  },
  {
    "text": "valid use case for efficient backups so we need to be able to support it",
    "start": "881240",
    "end": "887220"
  },
  {
    "text": "so we added this feature we introduced some API changes in the volume snapshot content we added",
    "start": "887220",
    "end": "895320"
  },
  {
    "text": "a new field Source volume mode the snapshot controller will be populating",
    "start": "895320",
    "end": "900959"
  },
  {
    "text": "this field from the volume mode field in the original PVC",
    "start": "900959",
    "end": "906240"
  },
  {
    "text": "and when user wants to create a PVC front it won't snapshot the external",
    "start": "906240",
    "end": "913139"
  },
  {
    "text": "provisioner will be checking this body mode field if the pvc's body mode is",
    "start": "913139",
    "end": "918779"
  },
  {
    "text": "different from the source volume mode in one snapshot content it's going to take a look and see if there is an annotation",
    "start": "918779",
    "end": "926160"
  },
  {
    "text": "called allow body mode change under a volume snapshot content and if that is",
    "start": "926160",
    "end": "932760"
  },
  {
    "text": "set to true if it is true then you can proceed otherwise the request will be",
    "start": "932760",
    "end": "938279"
  },
  {
    "text": "rejected since this feature is a beta in 1.27 we",
    "start": "938279",
    "end": "943740"
  },
  {
    "text": "are planning to enable the feature flag prevent volume mode conversion by",
    "start": "943740",
    "end": "949680"
  },
  {
    "text": "default in the snapshot controller and CSR provisioner in the sidecar release",
    "start": "949680",
    "end": "955079"
  },
  {
    "text": "for 1.28 so if your workflow requires 40 mode",
    "start": "955079",
    "end": "961019"
  },
  {
    "text": "conversion please make a change accordingly otherwise it's going to fail",
    "start": "961019",
    "end": "968000"
  },
  {
    "text": "in 1.27 we introduced an alpha feature to support bowling group snapshot",
    "start": "972779",
    "end": "981380"
  },
  {
    "text": "we already have a volume snapshot API that is for individual snapshots",
    "start": "983220",
    "end": "989040"
  },
  {
    "text": "however some storage systems will be able to create a crash consistent",
    "start": "989040",
    "end": "994079"
  },
  {
    "text": "snapshot across multiple volumes this is a very useful feature if you have an",
    "start": "994079",
    "end": "1000019"
  },
  {
    "text": "application that uses multiple volumes for example one for the data one for the",
    "start": "1000019",
    "end": "1005300"
  },
  {
    "text": "logs you want to be able to take a snapshot at the same point in time across all the volumes that are used by",
    "start": "1005300",
    "end": "1013220"
  },
  {
    "text": "the application to ensure a right order consistency so in this feature we added a few new",
    "start": "1013220",
    "end": "1022399"
  },
  {
    "text": "kubernetes apis we introduced the volume group snapshot API this is a username space object it",
    "start": "1022399",
    "end": "1031938"
  },
  {
    "text": "represents a user's request for a group snapshot and also awarding group",
    "start": "1031939",
    "end": "1037400"
  },
  {
    "text": "snapshot content this is a cluster scope it represents a group snapshot on the 3D",
    "start": "1037400",
    "end": "1044720"
  },
  {
    "text": "system and also a volume group snapshot class that defines how a group snapshot should",
    "start": "1044720",
    "end": "1052820"
  },
  {
    "text": "be created this is defined by the Admin in the cluster scope it includes information such as the CSA",
    "start": "1052820",
    "end": "1060440"
  },
  {
    "text": "driver name and the deletion policy and so on and also there are CSI spec changes we",
    "start": "1060440",
    "end": "1070100"
  },
  {
    "text": "introduced a new group controller service and for this new control service we have",
    "start": "1070100",
    "end": "1078080"
  },
  {
    "text": "a new capability and three new grpc interfaces create delete and get one",
    "start": "1078080",
    "end": "1084799"
  },
  {
    "text": "group snapshots so if you see the driver wants to support this new feature it needs to",
    "start": "1084799",
    "end": "1091640"
  },
  {
    "text": "implement this new group control service and the three new grpc interfaces",
    "start": "1091640",
    "end": "1099799"
  },
  {
    "text": "and we added a new control logic in the snapshot controller and the CSI snapshot",
    "start": "1099799",
    "end": "1106280"
  },
  {
    "text": "the sidecar to support this new feature if you want to dynamically provision a",
    "start": "1106280",
    "end": "1112100"
  },
  {
    "text": "one group snapshot then you need to specify a label selector in the morning",
    "start": "1112100",
    "end": "1117320"
  },
  {
    "text": "group snapshots back so that the snapshot controller will find the PVCs with the matching label to snapshot them",
    "start": "1117320",
    "end": "1125299"
  },
  {
    "text": "together",
    "start": "1125299",
    "end": "1127480"
  },
  {
    "text": "this immigration is feature that we have been working on for several releases",
    "start": "1130700",
    "end": "1137260"
  },
  {
    "text": "foreign the CSI migration core feature or the",
    "start": "1139100",
    "end": "1146840"
  },
  {
    "text": "two ga and also openstack Cinder Azure disk and",
    "start": "1146840",
    "end": "1152960"
  },
  {
    "text": "file AWS EBS gcpd and vsphere almost two ga and a few",
    "start": "1152960",
    "end": "1160940"
  },
  {
    "text": "of the plugins entry plugins have already been removed and some of them",
    "start": "1160940",
    "end": "1166100"
  },
  {
    "text": "are targeted for removal in later releases you can refer to this table for the",
    "start": "1166100",
    "end": "1172160"
  },
  {
    "text": "status of the CSM aggression",
    "start": "1172160",
    "end": "1176140"
  },
  {
    "text": "and this table shows the entry driver removal the drivers do not go through CSM",
    "start": "1178760",
    "end": "1184760"
  },
  {
    "text": "migration in 1.26 we removed the cluster FS entry",
    "start": "1184760",
    "end": "1190580"
  },
  {
    "text": "driver",
    "start": "1190580",
    "end": "1192940"
  },
  {
    "text": "there are also a few features that are in design prototyping",
    "start": "1196340",
    "end": "1201740"
  },
  {
    "text": "change block tracking this is a feature that the data protection when group has",
    "start": "1201740",
    "end": "1207140"
  },
  {
    "text": "been working on we want to design new apis and some common approach to be able",
    "start": "1207140",
    "end": "1214580"
  },
  {
    "text": "to retrieve changed blocks of the data this is a for efficient backups so if",
    "start": "1214580",
    "end": "1221240"
  },
  {
    "text": "you're interested in this feature join the data protection going group meeting that happens by weekly on Wednesdays for",
    "start": "1221240",
    "end": "1229340"
  },
  {
    "text": "this discussion and there's also a kubernetes volume provisioned IO",
    "start": "1229340",
    "end": "1235480"
  },
  {
    "text": "this feature is also being designed right now we're trying to design apis to",
    "start": "1235480",
    "end": "1241460"
  },
  {
    "text": "dynamically provision and modify iops and throughput of persistent volumes",
    "start": "1241460",
    "end": "1249440"
  },
  {
    "text": "and also we have a runtime assistant mounting of persistent volumes and wood",
    "start": "1249440",
    "end": "1255440"
  },
  {
    "text": "extension for safer sets those features are also designed in progress so if you are interested take a look of the cap",
    "start": "1255440",
    "end": "1262100"
  },
  {
    "text": "and join the discussion",
    "start": "1262100",
    "end": "1266200"
  },
  {
    "text": "so now let me talk about how to get involved we have a sick Storage Company page",
    "start": "1269840",
    "end": "1276679"
  },
  {
    "text": "this page has a lot of information to help you get started there is a",
    "start": "1276679",
    "end": "1282020"
  },
  {
    "text": "contributing page there that has links from some previous presentations",
    "start": "1282020",
    "end": "1289520"
  },
  {
    "text": "and we also have our bi-weekly meetings on Thursdays in that meeting we go over the features",
    "start": "1289520",
    "end": "1297260"
  },
  {
    "text": "we are targeting for every release and making sure that they are on track",
    "start": "1297260",
    "end": "1303140"
  },
  {
    "text": "and also we recently added a new meeting we have a weekly issue tryout meeting on",
    "start": "1303140",
    "end": "1310580"
  },
  {
    "text": "Wednesdays so if you are interested in contributing to seek storage I strongly encourage you",
    "start": "1310580",
    "end": "1317000"
  },
  {
    "text": "to join our meetings we also have mailing lists and slack",
    "start": "1317000",
    "end": "1323059"
  },
  {
    "text": "channels and this Friday there is a sick meet and",
    "start": "1323059",
    "end": "1328880"
  },
  {
    "text": "greet and yeah and I will be there so join us if you are around",
    "start": "1328880",
    "end": "1334779"
  },
  {
    "text": "here are some additional resources for your reference",
    "start": "1337760",
    "end": "1342460"
  },
  {
    "text": "that's all for our presentation today thank you all for coming are there any questions",
    "start": "1343820",
    "end": "1351220"
  },
  {
    "text": "[Applause]",
    "start": "1354650",
    "end": "1364360"
  },
  {
    "text": "thank you I was wondering if you could elaborate a bit more on the functionality of the change block",
    "start": "1365360",
    "end": "1371000"
  },
  {
    "text": "tracking functionality what because for example we use vsphere as an underlying infrastructure and there we",
    "start": "1371000",
    "end": "1377720"
  },
  {
    "text": "already have it enabled on the high proposal level but what does it actually do at the kubernetes container volume",
    "start": "1377720",
    "end": "1384620"
  },
  {
    "text": "level at computer level you could use the same apis you're using vadp apis right you",
    "start": "1384620",
    "end": "1391640"
  },
  {
    "text": "could use that same apis but here we are just trying to have some common apis in",
    "start": "1391640",
    "end": "1396740"
  },
  {
    "text": "kubernetes so allow you to retrieve those blocks let's say you have two snapshots you",
    "start": "1396740",
    "end": "1402980"
  },
  {
    "text": "want to get the divs you want to be able to provide the single snapshot handle and get that and make the backup more",
    "start": "1402980",
    "end": "1409159"
  },
  {
    "text": "efficient efficiently the primary use case is backup so backup vendors will",
    "start": "1409159",
    "end": "1414740"
  },
  {
    "text": "use this API to get the changes between two snapshots and back up just the bits",
    "start": "1414740",
    "end": "1420559"
  },
  {
    "text": "they need to back up yeah thank you any other question",
    "start": "1420559",
    "end": "1427299"
  },
  {
    "text": "just as a follow-on to the cbts what's the sort of timeline and and what kind of things do you need to help move it",
    "start": "1431179",
    "end": "1437360"
  },
  {
    "text": "forward for CD yeah please come to your",
    "start": "1437360",
    "end": "1442840"
  },
  {
    "text": "computer yeah tomorrow I'm hoping to join us tomorrow as well oh okay",
    "start": "1443840",
    "end": "1449539"
  },
  {
    "text": "um yeah uh yeah sure um so the meeting meetings of bi-weekly you say yeah yeah tomorrow no recession",
    "start": "1449539",
    "end": "1456200"
  },
  {
    "text": "yeah but I think the last session uh yeah yeah sure you can do it I won't be there because I",
    "start": "1456200",
    "end": "1462860"
  },
  {
    "text": "have a complete sorry um but we do have a bi-weekly meetings we actually have been discussing that",
    "start": "1462860",
    "end": "1468980"
  },
  {
    "text": "for quite a while now uh there are some design details we have not finalized there are some concerns initially we're",
    "start": "1468980",
    "end": "1475940"
  },
  {
    "text": "trying to use the aggregated API server but API reviewers have some concerns on",
    "start": "1475940",
    "end": "1481280"
  },
  {
    "text": "the performance impact on the API server okay too much data um so we are trying a different approach",
    "start": "1481280",
    "end": "1490220"
  },
  {
    "text": "Ed in discussion right if you want to know the details please join and help us finalize the design yeah sure I'll join",
    "start": "1490220",
    "end": "1497299"
  },
  {
    "text": "them awesome welcome",
    "start": "1497299",
    "end": "1503020"
  },
  {
    "text": "ah I see a couple of things I will start here",
    "start": "1503020",
    "end": "1507880"
  },
  {
    "text": "so one question to the staff you uh mentioned during the first stuff you mentioned six minutes magic",
    "start": "1509600",
    "end": "1516740"
  },
  {
    "text": "six minutes what did you mean by that uh",
    "start": "1516740",
    "end": "1521600"
  },
  {
    "text": "initially in kubernetes uh we added a six minute time out to uh so when a node",
    "start": "1523340",
    "end": "1530480"
  },
  {
    "text": "gets unavailable and we don't know it yet in kubernetes",
    "start": "1530480",
    "end": "1535940"
  },
  {
    "text": "and somebody deleted the port that uses a persistent volume we give cubelet on that note six minutes",
    "start": "1535940",
    "end": "1542720"
  },
  {
    "text": "to unmount the volume and after those six minutes we force detach the volume",
    "start": "1542720",
    "end": "1547760"
  },
  {
    "text": "if cluster API allows or Cloud API allows or if we have API it will attach",
    "start": "1547760",
    "end": "1553039"
  },
  {
    "text": "the volume so the volume could get corrupted but in some cases it will help you to",
    "start": "1553039",
    "end": "1560179"
  },
  {
    "text": "start the new port on a different note with some data that was on the volume",
    "start": "1560179",
    "end": "1566059"
  },
  {
    "text": "uh with the ungraceful not shutdown you can shut down the note and detach the",
    "start": "1566059",
    "end": "1572120"
  },
  {
    "text": "volumes faster does it answer your question yes I guess I'm just wondering what is",
    "start": "1572120",
    "end": "1579080"
  },
  {
    "text": "about this and disgraceful shutdown ungraceful shutdown because usually if",
    "start": "1579080",
    "end": "1584299"
  },
  {
    "text": "you have the situation that it does not work the note you can try to coordinate or you just like plug off if you use the",
    "start": "1584299",
    "end": "1591500"
  },
  {
    "text": "viscerals of like something similar so I'm not really sure what is the use case",
    "start": "1591500",
    "end": "1598940"
  },
  {
    "text": "of that actually like all the other I can just remove if I can just remove the note I can I can use the existing",
    "start": "1598940",
    "end": "1605659"
  },
  {
    "text": "functionality to to have some things ah right now so yeah you can but not in kubernetes API",
    "start": "1605659",
    "end": "1612500"
  },
  {
    "text": "if you delete a note in kubernetes API then nothing really happens",
    "start": "1612500",
    "end": "1617779"
  },
  {
    "text": "you know this the virtual machine is still there it's still working it still has volume volumes attached so",
    "start": "1617779",
    "end": "1623539"
  },
  {
    "text": "yeah but assuming I have the access to the to the to the underlying architecture yeah of course you can use the cloud API",
    "start": "1623539",
    "end": "1630260"
  },
  {
    "text": "but people usually want to use just one API let's see that's usually kubernetes",
    "start": "1630260",
    "end": "1636980"
  },
  {
    "text": "so I think actually without this feature you can manually achieve that you can actually just forcefully delete",
    "start": "1636980",
    "end": "1643400"
  },
  {
    "text": "in the parts that will also happen but we what this",
    "start": "1643400",
    "end": "1648440"
  },
  {
    "text": "one just added a little bit uh make it more formal and also it's a kubernetes way right so you just add apply that",
    "start": "1648440",
    "end": "1655900"
  },
  {
    "text": "annotation there and then also as young was saying that you don't have to wait for that six",
    "start": "1655900",
    "end": "1661640"
  },
  {
    "text": "minutes additional six minutes is what just happened automatically after that so making it more",
    "start": "1661640",
    "end": "1668059"
  },
  {
    "text": "um smoothly but right now still need a little bit of a manual thing because you still have to go apply that that",
    "start": "1668059",
    "end": "1675320"
  },
  {
    "text": "annotation so we're trying to next step is that we're trying to see if we can make this more automatic",
    "start": "1675320",
    "end": "1681740"
  },
  {
    "text": "which is you know completely ultimate this but that's we're not there yet but this is like one step further you can",
    "start": "1681740",
    "end": "1687799"
  },
  {
    "text": "right now at least you can add some maybe admin can add something on top of",
    "start": "1687799",
    "end": "1692840"
  },
  {
    "text": "this one you can just apply that annotation instead you go you know firstly use no command to delete the",
    "start": "1692840",
    "end": "1699919"
  },
  {
    "text": "pause that's not very nice thank you",
    "start": "1699919",
    "end": "1705158"
  },
  {
    "text": "another question somewhere here uh yeah I want to ask is there also are",
    "start": "1705200",
    "end": "1712880"
  },
  {
    "text": "there also plans to create a compliant archive image what do you mean compliant will",
    "start": "1712880",
    "end": "1720679"
  },
  {
    "text": "say that it can never be changed for a certain period anymore",
    "start": "1720679",
    "end": "1726940"
  },
  {
    "text": "perhaps you thought about it open image for instance or we don't care",
    "start": "1729200",
    "end": "1737539"
  },
  {
    "text": "about images in six storage we care about persistent volumes only volumes yeah okay we don't pull",
    "start": "1737539",
    "end": "1744740"
  },
  {
    "text": "images okay and we don't we are not responsible for Image store or notes or",
    "start": "1744740",
    "end": "1751400"
  },
  {
    "text": "how it gets stored on the nodes we don't that's signaled okay",
    "start": "1751400",
    "end": "1757778"
  },
  {
    "text": "any other question sorry",
    "start": "1758419",
    "end": "1762580"
  },
  {
    "text": "yeah thank you thanks first for working on the consistent volume snapshotting the volume groups",
    "start": "1766940",
    "end": "1774380"
  },
  {
    "text": "shortly so question is about that if there's already some CSI driver",
    "start": "1774380",
    "end": "1780440"
  },
  {
    "text": "that supports that uh well they may do something underneath but",
    "start": "1780440",
    "end": "1787820"
  },
  {
    "text": "this feature is not a kubernetes feature yet before we introduce this group snapshot API right okay are you asking",
    "start": "1787820",
    "end": "1794840"
  },
  {
    "text": "if there are already CSS supporting it or are you asking about future are there any trouble okay because I think we're",
    "start": "1794840",
    "end": "1801380"
  },
  {
    "text": "planning to add support to our always there yeah so right now this is just we",
    "start": "1801380",
    "end": "1808399"
  },
  {
    "text": "just introduced this feature to Alpha so we will be waiting for uh story vendors",
    "start": "1808399",
    "end": "1813860"
  },
  {
    "text": "to implement this feature okay yeah okay okay no I'm just thinking ahead yeah yeah you're gonna be",
    "start": "1813860",
    "end": "1820700"
  },
  {
    "text": "the first yeah any other question",
    "start": "1820700",
    "end": "1827200"
  },
  {
    "text": "around yes hi um I just wonder why it's not",
    "start": "1828440",
    "end": "1834919"
  },
  {
    "text": "possible to mount as a PVC in the same pot twice on a different Mount points",
    "start": "1834919",
    "end": "1842799"
  },
  {
    "text": "I think it is is it no support because in in gke it's not possible",
    "start": "1842960",
    "end": "1848960"
  },
  {
    "text": "like uh in Boston with different surprises so",
    "start": "1848960",
    "end": "1854000"
  },
  {
    "text": "um it you can only mount it once okay so it's in the sports bag you have",
    "start": "1854000",
    "end": "1860960"
  },
  {
    "text": "like uh generic volume section when you declare like what volumes you use and then you have in each container you have",
    "start": "1860960",
    "end": "1867380"
  },
  {
    "text": "volume Mount section and you can mount each volume multiple times in different",
    "start": "1867380",
    "end": "1872600"
  },
  {
    "text": "places as you want I'm pretty sure gke supports that okay",
    "start": "1872600",
    "end": "1879340"
  },
  {
    "text": "thank you it's about something you said at the beginning about the storage classes there could be a moment where",
    "start": "1883940",
    "end": "1890240"
  },
  {
    "text": "there are two default storage classes and you said that kubernetes would decide yeah it would pick some uh it's",
    "start": "1890240",
    "end": "1897740"
  },
  {
    "text": "deterministic it will choose the one with newest creation timestamp",
    "start": "1897740",
    "end": "1903980"
  },
  {
    "text": "which is not something you should depend on it's just some some so we have something deterministic but if there are",
    "start": "1903980",
    "end": "1910880"
  },
  {
    "text": "the problem is if you want to change the default storage class you can either delete the old default storage class and",
    "start": "1910880",
    "end": "1916820"
  },
  {
    "text": "create new and then then you have some mean time when there is no default we fix that or you can you can create two default",
    "start": "1916820",
    "end": "1923539"
  },
  {
    "text": "storage classes and delete the old one with the old default storage class and then you have some some short time when",
    "start": "1923539",
    "end": "1929059"
  },
  {
    "text": "you have two default storage classes and we picked that one with has newer creation timestamp but you should not",
    "start": "1929059",
    "end": "1935360"
  },
  {
    "text": "depend on the behavior it's racy anyway the first thing that I",
    "start": "1935360",
    "end": "1941299"
  },
  {
    "text": "mean there is a very short time if someone is just well deleting it depends on you like on the customer they can",
    "start": "1941299",
    "end": "1947600"
  },
  {
    "text": "leave cluster with two different storage classes for a long time if they want I don't know why would they do that we",
    "start": "1947600",
    "end": "1953000"
  },
  {
    "text": "will consistently pick the one with newest creation thanks and my point is to me would be worth it to not spawn the",
    "start": "1953000",
    "end": "1960860"
  },
  {
    "text": "pods until that is a mistake me I mean it seems to be kind of I forgot to",
    "start": "1960860",
    "end": "1966020"
  },
  {
    "text": "remove that's what we did uh",
    "start": "1966020",
    "end": "1974059"
  },
  {
    "text": "uh when in older kubernetes when you had two default storage classes and you create new PVC then you get 400 error",
    "start": "1974059",
    "end": "1982760"
  },
  {
    "text": "that the PVC is not valid because there are two before storage classes yeah and that's not user friendly because user",
    "start": "1982760",
    "end": "1990740"
  },
  {
    "text": "needs to go to the Cross tournament to fix that and go back so we choose some default storage class among these two or",
    "start": "1990740",
    "end": "1997220"
  },
  {
    "text": "three or four how many how many you have yeah so if I am distracted the user like I am",
    "start": "1997220",
    "end": "2003760"
  },
  {
    "text": "actually I could then live with two default storage classes for a while before I realized the time I look at the",
    "start": "2003760",
    "end": "2009880"
  },
  {
    "text": "storage in everyone's place yeah that's just my comments you have an",
    "start": "2009880",
    "end": "2015700"
  },
  {
    "text": "alert for to the first to reach classes okay here sorry is related to that so if",
    "start": "2015700",
    "end": "2024700"
  },
  {
    "text": "you accidentally delete one Stretch Class and you have PVCs belonging to that stress class those PVCs get orphan",
    "start": "2024700",
    "end": "2033039"
  },
  {
    "text": "somehow okay and as far as I remember you it's difficult to delete them if",
    "start": "2033039",
    "end": "2039880"
  },
  {
    "text": "they are not belonging to an existing storage class is there anything in place",
    "start": "2039880",
    "end": "2045039"
  },
  {
    "text": "to solve this kind of problems like ideally uh the storage cards should be",
    "start": "2045039",
    "end": "2050320"
  },
  {
    "text": "used only during Dynamic provisioning and ideally all the information from the",
    "start": "2050320",
    "end": "2055419"
  },
  {
    "text": "storage class should bubble up into the PV so when you delete the storage class you don't need you don't need it to",
    "start": "2055419",
    "end": "2061480"
  },
  {
    "text": "delete the persistent volumes I know there are some cases some storage backends that they they need the storage",
    "start": "2061480",
    "end": "2067118"
  },
  {
    "text": "class during Dynamic deletion but I would suggest to fix them",
    "start": "2067119",
    "end": "2072700"
  },
  {
    "text": "to put all the information from the storage class to CSI volume attributes or volume context",
    "start": "2072700",
    "end": "2078580"
  },
  {
    "text": "and so it's there available for the deletion or precise or whatever they",
    "start": "2078580",
    "end": "2084580"
  },
  {
    "text": "need so is there any way to patch the PVCs to you know a different storage class just",
    "start": "2084580",
    "end": "2092020"
  },
  {
    "text": "to make them easier to delete them nope I no way",
    "start": "2092020",
    "end": "2097080"
  },
  {
    "text": "storage class field is sticky once it's set it's okay not possible to change it",
    "start": "2097080",
    "end": "2102220"
  },
  {
    "text": "thank you welcome",
    "start": "2102220",
    "end": "2106619"
  },
  {
    "text": "okay first hi so with this discussion about several",
    "start": "2107680",
    "end": "2113859"
  },
  {
    "text": "default storage classes another kind of question idea let's say",
    "start": "2113859",
    "end": "2119079"
  },
  {
    "text": "we have a stateful set which contains uh wetted elasticsearch yes and let's see",
    "start": "2119079",
    "end": "2124839"
  },
  {
    "text": "it has three replicas and then we want to have this PVC is",
    "start": "2124839",
    "end": "2131740"
  },
  {
    "text": "provisioned by state faucet in different storage classes because storage class one is a data center one and storage",
    "start": "2131740",
    "end": "2139480"
  },
  {
    "text": "Class 2 is data center 2 and storage class 3 is data center three other any plans to actually Implement like uh",
    "start": "2139480",
    "end": "2146800"
  },
  {
    "text": "round robin so to say or random choice of default storage class and a colleague",
    "start": "2146800",
    "end": "2152920"
  },
  {
    "text": "of mine hundred can maybe explain his idea of his implementation but not across storage classes okay you can have",
    "start": "2152920",
    "end": "2161040"
  },
  {
    "text": "one storage class that can provision volumes in all data centers and then",
    "start": "2161040",
    "end": "2166720"
  },
  {
    "text": "volume topology a feature work topology volume topology ever provisioning and",
    "start": "2166720",
    "end": "2173500"
  },
  {
    "text": "notes Zone anti-affinity in your pots will make your pot still set post schedule in",
    "start": "2173500",
    "end": "2180760"
  },
  {
    "text": "different zones and the volumes will be provisioned for them in these different zones",
    "start": "2180760",
    "end": "2185859"
  },
  {
    "text": "so you have one storage class but it can provision uh storage in different zones",
    "start": "2185859",
    "end": "2192339"
  },
  {
    "text": "regions here hi hello everyone so while talking about",
    "start": "2192339",
    "end": "2199660"
  },
  {
    "text": "volume snapshot groups I think we said something for dynamically provisioning we have to apply labels",
    "start": "2199660",
    "end": "2206500"
  },
  {
    "text": "can we briefly talk about that because if I am if I am correct in case of",
    "start": "2206500",
    "end": "2211660"
  },
  {
    "text": "volume snapshots we don't have to apply any labels obviously so so how is it",
    "start": "2211660",
    "end": "2217000"
  },
  {
    "text": "different why do we have to apply labels in case of volume snapshot groups thank you",
    "start": "2217000",
    "end": "2223380"
  },
  {
    "text": "API object that hold all the volumes right so we need to have a way to say what volumes",
    "start": "2232680",
    "end": "2238960"
  },
  {
    "text": "you want to you want to be grouped together right so this this label is",
    "start": "2238960",
    "end": "2244720"
  },
  {
    "text": "basically just to say hey here are all the volumes they are in the same application they have this label let's",
    "start": "2244720",
    "end": "2250119"
  },
  {
    "text": "put group snapshot say in the same group snapshot yeah we initially actually in the",
    "start": "2250119",
    "end": "2256599"
  },
  {
    "text": "earlier version of the design we actually have a wooden group construct that was the initial design but it just",
    "start": "2256599",
    "end": "2264460"
  },
  {
    "text": "getting very complicated so then it will introduced six new API objects and they",
    "start": "2264460",
    "end": "2269560"
  },
  {
    "text": "also uh the original planes to have that support both group snapshot and also group replication",
    "start": "2269560",
    "end": "2275500"
  },
  {
    "text": "um but it's just because of the complexity that we decided just to uh for the group snapshot we just use this",
    "start": "2275500",
    "end": "2282339"
  },
  {
    "text": "one one set of constructs",
    "start": "2282339",
    "end": "2287020"
  },
  {
    "text": "yes yes unfortunately we're out of time",
    "start": "2288579",
    "end": "2295859"
  },
  {
    "text": "so thank you for the questions thank you [Applause]",
    "start": "2295859",
    "end": "2303630"
  }
]