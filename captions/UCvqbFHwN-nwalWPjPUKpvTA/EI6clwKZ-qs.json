[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "well it's about time we'll get started hey I want to thank everybody for coming appreciate your time and this is",
    "start": "60",
    "end": "7080"
  },
  {
    "text": "introduction to Nance my name is Colin Sullivan I'm product manager of Nats and and we actually have",
    "start": "7080",
    "end": "13380"
  },
  {
    "text": "Derek here who can answer questions after the presentation Derek's a creator of Nats so let's get started",
    "start": "13380",
    "end": "21330"
  },
  {
    "start": "19000",
    "end": "44000"
  },
  {
    "text": "so what is messaging just to start at a higher level messaging is message Orion",
    "start": "21330",
    "end": "26430"
  },
  {
    "text": "middleware which is software hardware that's it's an infrastructure that",
    "start": "26430",
    "end": "32340"
  },
  {
    "text": "supports sending or receiving messages between distributed systems or as some",
    "start": "32340",
    "end": "38010"
  },
  {
    "text": "of described it's the intersection of the stuff that network engineers don't want to do with the stuff that application developers don't want to do",
    "start": "38010",
    "end": "44239"
  },
  {
    "start": "44000",
    "end": "98000"
  },
  {
    "text": "why do we need messaging well developing and deploying applications in distributed systems it's really hard it",
    "start": "44239",
    "end": "51000"
  },
  {
    "text": "is very complex master join and middleware vendors provide a set of basic features to make this easier and",
    "start": "51000",
    "end": "58140"
  },
  {
    "text": "these can include multiple message patterns bundled in one tack location transparency and the decoupling of data",
    "start": "58140",
    "end": "65489"
  },
  {
    "text": "producers and consumers this means I don't need to know exactly where the",
    "start": "65489",
    "end": "70560"
  },
  {
    "text": "application that's sending me data is I don't even need to know what that application is and vice-versa",
    "start": "70560",
    "end": "76350"
  },
  {
    "text": "I don't need to know where I'm sending the data or who's going to consume it in fact I should never even assume who's",
    "start": "76350",
    "end": "82619"
  },
  {
    "text": "going to consume the data and built-in load balancing so messaging systems have been really",
    "start": "82619",
    "end": "88470"
  },
  {
    "text": "successful over the last thirty years in providing features like these some messaging systems have a subset of these",
    "start": "88470",
    "end": "95119"
  },
  {
    "text": "features some have all of them but messaging has been designed to meet the",
    "start": "95119",
    "end": "101610"
  },
  {
    "start": "98000",
    "end": "189000"
  },
  {
    "text": "needs of the day it was originally developed for static systems where you knew exactly what was running where",
    "start": "101610",
    "end": "107820"
  },
  {
    "text": "software ran on servers with long-lived addresses configuring endpoints was onerous and infrequent and that's",
    "start": "107820",
    "end": "114240"
  },
  {
    "text": "because scaling required manual positioning of hardware and software you had to go put a machine in a server room",
    "start": "114240",
    "end": "121290"
  },
  {
    "text": "that also meant deployments were smaller and systems were file siloed these",
    "start": "121290",
    "end": "126869"
  },
  {
    "text": "static systems were very predictable and that allowed resiliency to be built by",
    "start": "126869",
    "end": "132030"
  },
  {
    "text": "shoring up the weak parts of the system but with an emphasis on individual servers and individual",
    "start": "132030",
    "end": "137910"
  },
  {
    "text": "clients most messaging products today carry this legacy but things have",
    "start": "137910",
    "end": "143100"
  },
  {
    "text": "changed technologies matured these these old monolithic apps that you haven't been",
    "start": "143100",
    "end": "149130"
  },
  {
    "text": "decomposed into micro services lightweight communications are needed",
    "start": "149130",
    "end": "154590"
  },
  {
    "text": "now for micro services edge and endpoint devices we need a resiliency with an",
    "start": "154590",
    "end": "159660"
  },
  {
    "text": "emphasis on the health of the system as a whole not individual components we need ease of use and ease of deployment",
    "start": "159660",
    "end": "167420"
  },
  {
    "text": "for CI CD we need really really easy and low touch operations we need to be",
    "start": "167420",
    "end": "174030"
  },
  {
    "text": "highly scalable with built-in load balancing and very little configuration and we need identity and security that's",
    "start": "174030",
    "end": "181560"
  },
  {
    "text": "consistent end-to-end from edge devices to back-end services Nats was created specifically to meet these needs so what",
    "start": "181560",
    "end": "190470"
  },
  {
    "start": "189000",
    "end": "223000"
  },
  {
    "text": "is net Nance is an eight year old production proven cloud native messaging system Nance was designed to be easy",
    "start": "190470",
    "end": "196410"
  },
  {
    "text": "it's for developers and operators so just want to spend their time doing their jobs they don't want to spend their time having to learn about",
    "start": "196410",
    "end": "202560"
  },
  {
    "text": "messaging or manage messaging so the DNA of Nats is simplicity performance",
    "start": "202560",
    "end": "207690"
  },
  {
    "text": "security and availability it was built from the ground up to be cloud native NAT supports multiple qualities of",
    "start": "207690",
    "end": "213750"
  },
  {
    "text": "service at least once and at most once messaging support from multiple",
    "start": "213750",
    "end": "219239"
  },
  {
    "text": "communication patterns and we've got over 30 client languages Nats was created by Derrick Collison",
    "start": "219239",
    "end": "225600"
  },
  {
    "start": "223000",
    "end": "259000"
  },
  {
    "text": "Derek's been solving these hard problems and distributed computing for over 25",
    "start": "225600",
    "end": "231030"
  },
  {
    "text": "years he was SVP & chief architect at TIBCO a technical director at Google he Derick",
    "start": "231030",
    "end": "236489"
  },
  {
    "text": "architect at cloud foundry that was actually where NASA was born he was CTO and chief architect of VMware founder",
    "start": "236489",
    "end": "242970"
  },
  {
    "text": "and CEO of Apps era and currently founder and CEO at cinavia derek has",
    "start": "242970",
    "end": "248130"
  },
  {
    "text": "built a highly experienced messaging team around NAT so we've got over a hundred years experience specific to",
    "start": "248130",
    "end": "255090"
  },
  {
    "text": "messaging and we have a very engaged user community I was I was really surprised to discover",
    "start": "255090",
    "end": "263120"
  },
  {
    "start": "259000",
    "end": "299000"
  },
  {
    "text": "this when I looked on dub stats for CN CF that over the last eight years we've had over a thousand different",
    "start": "263120",
    "end": "269449"
  },
  {
    "text": "contributors and there's over a hundred with more than ten commits we've got thirty over thirty public repos we're",
    "start": "269449",
    "end": "276260"
  },
  {
    "text": "getting close to 36 million nat server docker hub pulse and 25 million that streaming server pools I'm really hoping",
    "start": "276260",
    "end": "283040"
  },
  {
    "text": "after Kubb con will break a thousand Nets our slack members and we've got a",
    "start": "283040",
    "end": "288080"
  },
  {
    "text": "really good cadence of about five releases a year of the net server many users and adapters large and small from",
    "start": "288080",
    "end": "295400"
  },
  {
    "text": "many different verticals so net solves a variety of different problems Nets is",
    "start": "295400",
    "end": "301160"
  },
  {
    "start": "299000",
    "end": "325000"
  },
  {
    "text": "used in cloud messaging as a micro service is transport or control plane for serve service discovery and event",
    "start": "301160",
    "end": "307910"
  },
  {
    "text": "sourcing we also find Nats being used in IOT and edge mobile and big data masses",
    "start": "307910",
    "end": "313940"
  },
  {
    "text": "used for high fan-out messaging and we're finding that people want to augment or replace their legacy",
    "start": "313940",
    "end": "319639"
  },
  {
    "text": "messaging with Nats we get a lot of requests for bridging to other technologies we have really great",
    "start": "319639",
    "end": "328639"
  },
  {
    "start": "325000",
    "end": "370000"
  },
  {
    "text": "integration with kubernetes through our Nats operator the Nats operator will be installed that automatically creates",
    "start": "328639",
    "end": "334789"
  },
  {
    "text": "network services automatically clusters NAT servers which isn't hard to do to begin with but it does a lot of other",
    "start": "334789",
    "end": "341960"
  },
  {
    "text": "things as well it's got authorization with service accounts so you can tie into kubernetes authorization any sort",
    "start": "341960",
    "end": "348590"
  },
  {
    "text": "of configuration is stored as secrets and anytime you update the configuration the Nats operator will reload the NAT",
    "start": "348590",
    "end": "354349"
  },
  {
    "text": "servers for you it's a hot reload nothing has to go down and come back up and then we also have a net streaming",
    "start": "354349",
    "end": "359870"
  },
  {
    "text": "operator which clusters net streaming servers together if you choose to operate them that way we've got a",
    "start": "359870",
    "end": "365030"
  },
  {
    "text": "Prometheus Nats exporter we've got plug-ins for fluent D and help charts let's talk a little bit about",
    "start": "365030",
    "end": "372919"
  },
  {
    "start": "370000",
    "end": "374000"
  },
  {
    "text": "messaging patterns where we've got publish/subscribe load balance cue subscribers and request to reply but",
    "start": "372919",
    "end": "380210"
  },
  {
    "start": "374000",
    "end": "381000"
  },
  {
    "text": "before we understand these messaging patterns we need to understand what subjects are a subject is simple it just",
    "start": "380210",
    "end": "385940"
  },
  {
    "start": "381000",
    "end": "435000"
  },
  {
    "text": "it's a string that represents interest in data so a simple subject foo if I",
    "start": "385940",
    "end": "391159"
  },
  {
    "text": "publish a message on foo any subscriber who says I'm gonna subscribe to foo will receive that data",
    "start": "391159",
    "end": "397180"
  },
  {
    "text": "it can be hierarchically tokenized where you can string tokens together in",
    "start": "397180",
    "end": "402289"
  },
  {
    "text": "a subject and that allows you to create wildcard subscriptions where this the",
    "start": "402289",
    "end": "408020"
  },
  {
    "text": "star operator and the in a subscription will match a particular token or greater",
    "start": "408020",
    "end": "413210"
  },
  {
    "text": "than will match any token anything beyond so for example food at star will match food at bar and food a pass foo",
    "start": "413210",
    "end": "419750"
  },
  {
    "text": "star dot bar will match foo dot something dot bar and food at bar",
    "start": "419750",
    "end": "425240"
  },
  {
    "text": "matches anything above you can even just say I want to subscribe to absolutely everything going on in that and if you",
    "start": "425240",
    "end": "431659"
  },
  {
    "text": "have authorization to do so you can do it so with the publish/subscribe pattern",
    "start": "431659",
    "end": "438590"
  },
  {
    "start": "435000",
    "end": "464000"
  },
  {
    "text": "you publish a message to a subject in one to end subscribers however many you have will receive that message this is",
    "start": "438590",
    "end": "446030"
  },
  {
    "text": "used for high fan-out it's used for specialization or parallelization of work so for example you might have one",
    "start": "446030",
    "end": "451909"
  },
  {
    "text": "subscriber that updates a log another one that will upon receiving the same message will update a UI and a third one",
    "start": "451909",
    "end": "459710"
  },
  {
    "text": "let's say it's sensor data might trigger an alert of some sort and then we take",
    "start": "459710",
    "end": "467060"
  },
  {
    "start": "464000",
    "end": "500000"
  },
  {
    "text": "that and we we tweak it a little and we've got a load balance cue pattern so you poke when you create subscribers you",
    "start": "467060",
    "end": "473569"
  },
  {
    "text": "can optionally add them to a group and when a message is published to these",
    "start": "473569",
    "end": "479029"
  },
  {
    "text": "subscribers one of that group will receive it and this this happens",
    "start": "479029",
    "end": "484130"
  },
  {
    "text": "randomly in cornets and that streaming uses a little bit of intelligence and which message it sends it to but this is",
    "start": "484130",
    "end": "489889"
  },
  {
    "text": "used for low balancing auto scaling and lame-duck mode so in the diagram you can see the publisher publishes messages one",
    "start": "489889",
    "end": "496400"
  },
  {
    "text": "two and three and these will be spread out amongst subscribers we also have a",
    "start": "496400",
    "end": "502699"
  },
  {
    "start": "500000",
    "end": "571000"
  },
  {
    "text": "request reply API and those are available to most clients but because",
    "start": "502699",
    "end": "508310"
  },
  {
    "text": "under the hood everything in Nats is a subject when we do request reply it",
    "start": "508310",
    "end": "514339"
  },
  {
    "text": "operates over unique subjects but that lets us use some of these optimizations to to build some really interesting",
    "start": "514339",
    "end": "521750"
  },
  {
    "text": "request reply patterns so you can request reply to mini and you tell the NAT server",
    "start": "521750",
    "end": "526910"
  },
  {
    "text": "I only want one response the first response that comes in will be handled",
    "start": "526910",
    "end": "532520"
  },
  {
    "text": "and passed back to the client and the net server will unsubscribe circuit breaking preventing that message from propagating any further that gets you",
    "start": "532520",
    "end": "539360"
  },
  {
    "text": "the lowest latency response you can respond with cue subscribers to load balance so if my reply err - my message",
    "start": "539360",
    "end": "548390"
  },
  {
    "text": "my replying application isn't performing and isn't giving me the the response",
    "start": "548390",
    "end": "554570"
  },
  {
    "text": "times I need all I have to do is scale all I have to do is launch another instance of this it'll subscribe well",
    "start": "554570",
    "end": "561500"
  },
  {
    "text": "let the net server know it's part of this group and start receiving messages what's really important here is there's",
    "start": "561500",
    "end": "566960"
  },
  {
    "text": "no config changes this is automatic you just launch another instance and",
    "start": "566960",
    "end": "572050"
  },
  {
    "start": "571000",
    "end": "599000"
  },
  {
    "text": "supported clients also provide a drain API this allows you to do graceful",
    "start": "572050",
    "end": "577790"
  },
  {
    "text": "shutdown to eliminate any sort of data loss it's great for downward scaling and great for upgrades so you've got your",
    "start": "577790",
    "end": "585440"
  },
  {
    "text": "load balance cue subscribers and instead of just closing your connection you drain and drain unsubscribes processes",
    "start": "585440",
    "end": "593150"
  },
  {
    "text": "the rest of the messages and then closes your connection allowing for a graceful shutdown",
    "start": "593150",
    "end": "599500"
  },
  {
    "start": "599000",
    "end": "614000"
  },
  {
    "text": "Nats performed extremely well we're upwards around 20 million in messages a",
    "start": "600160",
    "end": "605840"
  },
  {
    "text": "second with one server one stream and upwards of 80 million with multiple streams this is in coronets this is",
    "start": "605840",
    "end": "612620"
  },
  {
    "text": "extremely fast we get there by by being smart and what decisions we make in the",
    "start": "612620",
    "end": "621110"
  },
  {
    "start": "614000",
    "end": "677000"
  },
  {
    "text": "design decisions so we designed for scale anytime we're looking at making a change say what happens if we multiply",
    "start": "621110",
    "end": "627350"
  },
  {
    "text": "this by million or and also we take a very careful analysis of the fast path so as we watch how messages will flow",
    "start": "627350",
    "end": "635420"
  },
  {
    "text": "through the server say are we adding a lock are there going to be additional members these and then we also",
    "start": "635420",
    "end": "640910"
  },
  {
    "text": "performance test every change to make sure we maintain this speed but just as",
    "start": "640910",
    "end": "646040"
  },
  {
    "text": "important as these decisions to make things fast are what we've decided not to implement and people have asked for",
    "start": "646040",
    "end": "652100"
  },
  {
    "text": "these you feel kind of bad saying no but it's not part of cornets it's not part of our tenants so we don't have any",
    "start": "652100",
    "end": "658310"
  },
  {
    "text": "message guarantees and cornets we don't support transactions we don't support message schemas things like last",
    "start": "658310",
    "end": "664740"
  },
  {
    "text": "will and testament or JMS message groups because that doesn't fit into the",
    "start": "664740",
    "end": "669990"
  },
  {
    "text": "performance characteristics characteristics these are things that can happen outside of Nats in your application or at a higher level and NAT",
    "start": "669990",
    "end": "676079"
  },
  {
    "text": "streaming Nats is really lightweight and scalable we've had one user actually RI",
    "start": "676079",
    "end": "683790"
  },
  {
    "start": "677000",
    "end": "708000"
  },
  {
    "text": "pannier actually he's a maintainer now he's joined us and it took him 90",
    "start": "683790",
    "end": "689639"
  },
  {
    "text": "seconds to pull 50,000 nodes with Nats and get responses back we worked with",
    "start": "689639",
    "end": "695819"
  },
  {
    "text": "him and we got that down to 1.8 seconds to pull 50,000 nodes and get all the",
    "start": "695819",
    "end": "701040"
  },
  {
    "text": "responses back I'm sorry oh yeah it's",
    "start": "701040",
    "end": "707189"
  },
  {
    "text": "under a second now and Nats prioritizes the health and",
    "start": "707189",
    "end": "712290"
  },
  {
    "start": "708000",
    "end": "757000"
  },
  {
    "text": "availability of the system as a whole over any individual client or server and and I call this selfish optimization so",
    "start": "712290",
    "end": "720149"
  },
  {
    "text": "when a client is not consuming fast enough a coronets client the NAT server",
    "start": "720149",
    "end": "725399"
  },
  {
    "text": "will actually cut that client off because in the cloud what do you want you don't want a service and unhealthy client you want to cut it off have an",
    "start": "725399",
    "end": "732360"
  },
  {
    "text": "operator take a look at it maybe it's restarted we have full mesh",
    "start": "732360",
    "end": "737670"
  },
  {
    "text": "clustering of Nats servers which means any server can go down and the rest just take over clients will automatically",
    "start": "737670",
    "end": "745620"
  },
  {
    "text": "failover to new servers and servers and clients their connections self-heal in",
    "start": "745620",
    "end": "750749"
  },
  {
    "text": "that they try to recreate the connections to them to existing servers or even new servers they might have",
    "start": "750749",
    "end": "756360"
  },
  {
    "text": "discovered Nats is extremely resilient this simplicity allows us to be very",
    "start": "756360",
    "end": "763559"
  },
  {
    "start": "757000",
    "end": "775000"
  },
  {
    "text": "very resilient at scale even though we plan for the worst we have users that run Nats for months and months and",
    "start": "763559",
    "end": "770279"
  },
  {
    "text": "months upon time that at a time without running into any issues",
    "start": "770279",
    "end": "776149"
  },
  {
    "start": "775000",
    "end": "833000"
  },
  {
    "text": "Nantz is simple it's a single binary with about under 10 megabyte docker",
    "start": "776470",
    "end": "782270"
  },
  {
    "text": "image no external dependencies we have a text-based protocol with just a handful verbs and and just to clarify while the",
    "start": "782270",
    "end": "788990"
  },
  {
    "text": "protocol itself is text base it's really simple so you've got pub/sub message",
    "start": "788990",
    "end": "794210"
  },
  {
    "text": "connect info the payloads are binary and what this allows you to do is send a",
    "start": "794210",
    "end": "801950"
  },
  {
    "text": "message of any sort of type but with the text-based protocol it makes it extremely easy to develop clients that's",
    "start": "801950",
    "end": "808790"
  },
  {
    "text": "why we have over 30 we've got a lot of contributions and clients I mean someone just started a dart client for us it's",
    "start": "808790",
    "end": "817040"
  },
  {
    "text": "very very low config so clients only need at your own credentials servers will auto discover and you can share",
    "start": "817040",
    "end": "823130"
  },
  {
    "text": "your configuration files amongst servers in the cluster so that you've got one source of truth for things like",
    "start": "823130",
    "end": "828740"
  },
  {
    "text": "authorization or policy and a very very simple straightforward API I mentioned",
    "start": "828740",
    "end": "834890"
  },
  {
    "start": "833000",
    "end": "900000"
  },
  {
    "text": "Auto discovery a bit earlier so Auto discovery is where the NAT servers will",
    "start": "834890",
    "end": "840410"
  },
  {
    "text": "detect topology changes and share this with each other so let's say you have a cluster of three servers and you want to",
    "start": "840410",
    "end": "846650"
  },
  {
    "text": "scale up you add another server you direct it to any one of those three running servers they all exchange",
    "start": "846650",
    "end": "853280"
  },
  {
    "text": "information about each other and suddenly you've got a full mesh with four you've got four in your cluster",
    "start": "853280",
    "end": "859010"
  },
  {
    "text": "this happens transparently to clients they don't they don't have to have any configuration updates this actually",
    "start": "859010",
    "end": "865670"
  },
  {
    "text": "happens transparently to servers they don't need any configuration updates as well but there's more",
    "start": "865670",
    "end": "871190"
  },
  {
    "text": "so this topology information is also passed to the clients that means the",
    "start": "871190",
    "end": "877580"
  },
  {
    "text": "clients can then connect to servers they were never originally configured with now imagine this in a situation with a",
    "start": "877580",
    "end": "884210"
  },
  {
    "text": "rolling upgrade or you want to move regions you can simply launch new",
    "start": "884210",
    "end": "889220"
  },
  {
    "text": "servers build your cluster across across regions and drop your old servers and the clients just simply reconnect to the",
    "start": "889220",
    "end": "896150"
  },
  {
    "text": "new new cluster they don't even really notice a difference we've got a very very simple API where",
    "start": "896150",
    "end": "904160"
  },
  {
    "start": "900000",
    "end": "926000"
  },
  {
    "text": "we connect we publish send a series of bytes flush and the flush is just in",
    "start": "904160",
    "end": "909769"
  },
  {
    "text": "this example just to show that you can flush a message to get lower latency and",
    "start": "909769",
    "end": "915309"
  },
  {
    "text": "here's the Java API that would receive this message so you subscribe on demo",
    "start": "915309",
    "end": "921110"
  },
  {
    "text": "net simple subject just print out a message after you create a connection that's it NAT supports two different",
    "start": "921110",
    "end": "929569"
  },
  {
    "start": "926000",
    "end": "985000"
  },
  {
    "text": "delivery modes so I've been speaking a lot about Coronets which is the basic installation and apps",
    "start": "929569",
    "end": "935119"
  },
  {
    "text": "that provides that most once delivery so there's no there's no guarantee messages can be lost applications have to detect",
    "start": "935119",
    "end": "941569"
  },
  {
    "text": "and handle messages sounds fragile it's really not it's how the internet works today but then some people need more on",
    "start": "941569",
    "end": "948589"
  },
  {
    "text": "top of that we provide at least once delivery which is NAT streaming where a",
    "start": "948589",
    "end": "953749"
  },
  {
    "text": "message will always be delivered and in certain cases that will be delivered more than once generally I mean those",
    "start": "953749",
    "end": "960019"
  },
  {
    "text": "are always failure cases there is another delivery mode that we've chosen not to support which is exactly once",
    "start": "960019",
    "end": "967749"
  },
  {
    "text": "we'll argue it's unnecessary it's always complex and inevitably slow it",
    "start": "967749",
    "end": "973699"
  },
  {
    "text": "essentially becomes like a distributed transaction and Derrick always loves",
    "start": "973699",
    "end": "980769"
  },
  {
    "text": "Derrick always loves to discuss exactly once",
    "start": "980769",
    "end": "985899"
  },
  {
    "start": "985000",
    "end": "1036000"
  },
  {
    "text": "so with NAT streaming is a data streaming system that sits sits on top",
    "start": "986499",
    "end": "991850"
  },
  {
    "text": "of Nats it provides at least once delivery you can replay messages so you can replay the last hours worth of data",
    "start": "991850",
    "end": "998149"
  },
  {
    "text": "that's been received or give me everything since sequence number 10,000 it can also provide a last value cache",
    "start": "998149",
    "end": "1005740"
  },
  {
    "text": "an application comes up hey I just want the last message that was sent you have durable subscribers where subscribers",
    "start": "1005740",
    "end": "1012309"
  },
  {
    "text": "are receiving a stream of data if anything bad happens whenever things were turned back to normal you'll just",
    "start": "1012309",
    "end": "1017350"
  },
  {
    "text": "pick up right where you left off we've got rape matching per subscriber different types of storage including",
    "start": "1017350",
    "end": "1025029"
  },
  {
    "text": "memory file and database we've got a couple different ways to configure fault",
    "start": "1025029",
    "end": "1030069"
  },
  {
    "text": "tolerance through full clustering or a fault configuration and you can scale through",
    "start": "1030069",
    "end": "1035260"
  },
  {
    "text": "partitioning now we're going to talk about some of the newer features with",
    "start": "1035260",
    "end": "1040930"
  },
  {
    "text": "Nats global deployments so this is new actually the changes here are in master",
    "start": "1040930",
    "end": "1046000"
  },
  {
    "text": "branch right now we'll be cutting a release pretty soon so we've got super clusters imagined clusters of clusters",
    "start": "1046000",
    "end": "1053110"
  },
  {
    "text": "of Nats it uses a spline based technology we use optimistic sense and",
    "start": "1053110",
    "end": "1058720"
  },
  {
    "text": "interest graph pruning and also provide intelligence support for geo distributed",
    "start": "1058720",
    "end": "1064240"
  },
  {
    "text": "cue describers that's that's actually really interesting so remember I was",
    "start": "1064240",
    "end": "1069610"
  },
  {
    "text": "talking about the cue subscribers where you send a message and I'll randomly send to one of the subscribers to",
    "start": "1069610",
    "end": "1074740"
  },
  {
    "text": "load-balanced well it can be smart geographically so if I have a huge subscriber in Japan one here in Seattle",
    "start": "1074740",
    "end": "1082330"
  },
  {
    "text": "and I'm publishing from Seattle it'll use the cue subscriber in Seattle until",
    "start": "1082330",
    "end": "1088000"
  },
  {
    "text": "it's gone and then it will back up and use the one in Japan we've also",
    "start": "1088000",
    "end": "1093790"
  },
  {
    "start": "1091000",
    "end": "1150000"
  },
  {
    "text": "introduced accounts so accounts are isolated communication contexts they allow multi-tenancy so what this does is",
    "start": "1093790",
    "end": "1102640"
  },
  {
    "text": "this this separates this bifurcates technology from business driven use cases people used to silo data because",
    "start": "1102640",
    "end": "1109960"
  },
  {
    "text": "of software and hardware limitations this is no longer the case you can silo data if you want",
    "start": "1109960",
    "end": "1115330"
  },
  {
    "text": "geographically or you can silo data with accounts horizontally across the global deployment it's easy secure and",
    "start": "1115330",
    "end": "1122230"
  },
  {
    "text": "cost-effective because one Nats deployment there's one Nats deployment",
    "start": "1122230",
    "end": "1128440"
  },
  {
    "text": "for operators to manage and it's decentralized so we've built accounts to be decentralized so different account",
    "start": "1128440",
    "end": "1135900"
  },
  {
    "text": "administrators can self manage and I'll talk a little bit more about that but you can share data between accounts with",
    "start": "1135900",
    "end": "1142540"
  },
  {
    "text": "secure streams and services and only mutual agreement between these accounts will allow this data to flow so services",
    "start": "1142540",
    "end": "1151690"
  },
  {
    "start": "1150000",
    "end": "1204000"
  },
  {
    "text": "are secure RPC endpoint RPC again a request to reply is that one-on-one",
    "start": "1151690",
    "end": "1156970"
  },
  {
    "text": "conversation a phone call and you can have two accounts you want to open up a",
    "start": "1156970",
    "end": "1162010"
  },
  {
    "text": "service the other one will import the service and then they can talk you have streams as well which instead",
    "start": "1162010",
    "end": "1169220"
  },
  {
    "text": "of a request reply pattern that's your published pattern that's published subscribed so the stream of data can",
    "start": "1169220",
    "end": "1174890"
  },
  {
    "text": "flow through but what's what's really really cool about this is within an",
    "start": "1174890",
    "end": "1180650"
  },
  {
    "text": "account the subject namespace is isolated so if I have two applications in account a that are publishing on foo",
    "start": "1180650",
    "end": "1186670"
  },
  {
    "text": "no subscriber and account B will receive foo unless you create a stream to allow",
    "start": "1186670",
    "end": "1193400"
  },
  {
    "text": "that to flow through all this is transparent to clients there's no client",
    "start": "1193400",
    "end": "1199880"
  },
  {
    "text": "configuration or client API API changes to get this Nance is secure we have",
    "start": "1199880",
    "end": "1207680"
  },
  {
    "start": "1204000",
    "end": "1225000"
  },
  {
    "text": "authentication and Cripps encryption you can set some policy and we've got",
    "start": "1207680",
    "end": "1212690"
  },
  {
    "text": "subject based authorization you can update these in the server anytime with a hot with a hot reload and clients",
    "start": "1212690",
    "end": "1221480"
  },
  {
    "text": "don't really notice the difference unless they're affected by the policy change we support TLS with CH certificate",
    "start": "1221480",
    "end": "1228560"
  },
  {
    "start": "1225000",
    "end": "1314000"
  },
  {
    "text": "support client certificate support TLS one three is coming soon we have n keys",
    "start": "1228560",
    "end": "1234110"
  },
  {
    "text": "that you can use as identities these are 82 five five one nine keys that we've made very easy they serve as identities",
    "start": "1234110",
    "end": "1241040"
  },
  {
    "text": "in the net server and will continue to support user password you can be crypt",
    "start": "1241040",
    "end": "1246080"
  },
  {
    "text": "password than storage so shouldn't administrator look at a config file they still won't know what the password is so",
    "start": "1246080",
    "end": "1253760"
  },
  {
    "text": "n keys are a new Nats identity and authentication and authorization system are actually just a authentication",
    "start": "1253760",
    "end": "1261140"
  },
  {
    "text": "system but they can be used with authorization so again there edie two five five one nine keys they're very",
    "start": "1261140",
    "end": "1267950"
  },
  {
    "text": "fast and resistant to side-channel attacks you can sign and verify with these which allows a new form of",
    "start": "1267950",
    "end": "1276010"
  },
  {
    "text": "authentication where a client where a",
    "start": "1276010",
    "end": "1281030"
  },
  {
    "text": "client connects to the server the server sends a nonce back which is just random bytes that are salted and then the",
    "start": "1281030",
    "end": "1287660"
  },
  {
    "text": "client signs that with this private key sends that back to the server and the server checks to make sure that the",
    "start": "1287660",
    "end": "1294200"
  },
  {
    "text": "client identity the client is who they say they are and what this does is this this allows",
    "start": "1294200",
    "end": "1299510"
  },
  {
    "text": "the net server to operate and never have to maintain private keys only the public",
    "start": "1299510",
    "end": "1304550"
  },
  {
    "text": "keys of the client you can you can encapsulate these JW TS that will",
    "start": "1304550",
    "end": "1310190"
  },
  {
    "text": "associate users and accounts and permission sets with this N key identity we support encryption you encrypt",
    "start": "1310190",
    "end": "1317180"
  },
  {
    "start": "1314000",
    "end": "1331000"
  },
  {
    "text": "through TLS we default to the most secure cipher suites you can override encryption to define a list of ciphers",
    "start": "1317180",
    "end": "1323900"
  },
  {
    "text": "elliptical curves and NAT streaming in key one is going to support encrypting",
    "start": "1323900",
    "end": "1330050"
  },
  {
    "text": "data on disk we have subject based authorization which is who can control",
    "start": "1330050",
    "end": "1335920"
  },
  {
    "start": "1331000",
    "end": "1356000"
  },
  {
    "text": "you can control who can publish and who can subscribe to different subjects and",
    "start": "1335920",
    "end": "1341180"
  },
  {
    "text": "you can use wildcard support and we also have allow or deny clauses which provides a lot of flexibility you can",
    "start": "1341180",
    "end": "1347960"
  },
  {
    "text": "actually generate some pretty complex authorization scenarios with very terse",
    "start": "1347960",
    "end": "1354050"
  },
  {
    "text": "configuration this way like everything",
    "start": "1354050",
    "end": "1359180"
  },
  {
    "start": "1356000",
    "end": "1397000"
  },
  {
    "text": "else in Nats we go for simplicity monitoring is very very simple each server is monitored independently it",
    "start": "1359180",
    "end": "1365930"
  },
  {
    "text": "returns JSON and the simplicity allows you to build really complex tools on top",
    "start": "1365930",
    "end": "1371390"
  },
  {
    "text": "of it we've got integration with Prometheus that allows aggregating and alerting on Nats for various server events where",
    "start": "1371390",
    "end": "1378530"
  },
  {
    "text": "Prometheus we've got a Prometheus exporter that just takes us JSON and serves it up in a way that Prometheus",
    "start": "1378530",
    "end": "1384920"
  },
  {
    "text": "likes we also have an ATS top tool that was written by Wally right here in the audience which is a really really handy",
    "start": "1384920",
    "end": "1391940"
  },
  {
    "text": "tool that that takes this JSON presents it in a way that's that's very familiar to Linux users in production monitoring",
    "start": "1391940",
    "end": "1400550"
  },
  {
    "start": "1397000",
    "end": "1412000"
  },
  {
    "text": "we advocate that you use the Prometheus exporter of Prometheus server to generate alerts and then you can put a",
    "start": "1400550",
    "end": "1409400"
  },
  {
    "text": "dashboard in front of it this is what one looks like so we'll go run through some upcoming",
    "start": "1409400",
    "end": "1415220"
  },
  {
    "start": "1412000",
    "end": "1458000"
  },
  {
    "text": "features we we get a lot of requests for other messaging product integrations so",
    "start": "1415220",
    "end": "1421340"
  },
  {
    "text": "we're looking at integrating with MQ series but then we're also looking at an",
    "start": "1421340",
    "end": "1427040"
  },
  {
    "text": "integral integrating with Kafka we've got data at rest encryption and streaming we've got project we call it",
    "start": "1427040",
    "end": "1433530"
  },
  {
    "text": "project jet stream it's an app streaming version 2.0 it's gonna bring some more",
    "start": "1433530",
    "end": "1438570"
  },
  {
    "text": "tightly integrated streaming solution to Nats and some some really cool features MQ cheechee is ubiquitous",
    "start": "1438570",
    "end": "1445800"
  },
  {
    "text": "I mean it's NASA is a great use case for IOT being as lightweight performing as it is and we are going to support MQTT",
    "start": "1445800",
    "end": "1453540"
  },
  {
    "text": "natively we're gonna add WebSocket support and we're gonna develop some microcontroller clients we welcome",
    "start": "1453540",
    "end": "1460830"
  },
  {
    "start": "1458000",
    "end": "1481000"
  },
  {
    "text": "contributions of all kinds some ways to contribute are blogs you can fix a bug",
    "start": "1460830",
    "end": "1467100"
  },
  {
    "text": "if you find anything in our documentation please let us know and",
    "start": "1467100",
    "end": "1472140"
  },
  {
    "text": "even some more submit a PR for us you can propose features or present your",
    "start": "1472140",
    "end": "1477780"
  },
  {
    "text": "Nats product project at meetups if you do let us know well send you swag so",
    "start": "1477780",
    "end": "1483150"
  },
  {
    "start": "1481000",
    "end": "1669000"
  },
  {
    "text": "let's do a quick demo whoops and I've",
    "start": "1483150",
    "end": "1490470"
  },
  {
    "text": "actually had this demo running so remember I was talking about the cue",
    "start": "1490470",
    "end": "1496410"
  },
  {
    "text": "subscribers and we request reply so I've got this set up so I have a requester",
    "start": "1496410",
    "end": "1502440"
  },
  {
    "text": "and start with a requester EverQuest earth as Prometheus enabled and all it",
    "start": "1502440",
    "end": "1508860"
  },
  {
    "text": "does is it connects to nets it starts up in this case 50 simultaneous requests",
    "start": "1508860",
    "end": "1516720"
  },
  {
    "text": "that is trying to pound on a reply err and it sends this request and just record how long it takes I have a reply",
    "start": "1516720",
    "end": "1524190"
  },
  {
    "text": "err that connects to Nats and it simply",
    "start": "1524190",
    "end": "1531630"
  },
  {
    "text": "queue subscribes and then sleeps for a period of time simulating a 50",
    "start": "1531630",
    "end": "1537540"
  },
  {
    "text": "millisecond workload I've had this running and kubernetes with the Nats",
    "start": "1537540",
    "end": "1544500"
  },
  {
    "text": "operator and let's let me refresh this I've had this in kubernetes with the",
    "start": "1544500",
    "end": "1551480"
  },
  {
    "text": "Nats operator so here's the Nats operator we've gotten for free refine on Prometheus just so I can visually show",
    "start": "1551480",
    "end": "1557420"
  },
  {
    "text": "you what's going on we've got a requester and one reply right now if we",
    "start": "1557420",
    "end": "1563330"
  },
  {
    "text": "look at our statistics this is what is being returned you can see we're handling about 20 requests per second",
    "start": "1563330",
    "end": "1570340"
  },
  {
    "text": "we're averaging or we're getting about two and a half second average response",
    "start": "1570340",
    "end": "1577850"
  },
  {
    "text": "time which is about right 50 milliseconds by 50 requests at the same",
    "start": "1577850",
    "end": "1584480"
  },
  {
    "text": "time and you can see pretty steady with latency between two and four thousand two and four seconds so what we're going",
    "start": "1584480",
    "end": "1591920"
  },
  {
    "text": "to do is without any config changes",
    "start": "1591920",
    "end": "1597610"
  },
  {
    "text": "we're going to scale the reply err so we",
    "start": "1597610",
    "end": "1603770"
  },
  {
    "text": "scale the reply err up if you remember when I was talking before what we've done is just launched 10 more or nine",
    "start": "1603770",
    "end": "1610370"
  },
  {
    "text": "more instances of this reply err so now when the requester is sending its requesting the servers randomly sending",
    "start": "1610370",
    "end": "1617120"
  },
  {
    "text": "these requests to requires so if we look at what's happening your requests per",
    "start": "1617120",
    "end": "1625910"
  },
  {
    "text": "second just jumped up it's getting close to 200 now your average response time",
    "start": "1625910",
    "end": "1632240"
  },
  {
    "text": "has plummeted and",
    "start": "1632240",
    "end": "1638050"
  },
  {
    "text": "you can see with the latency histogram here you're now in the 128 to 256",
    "start": "1640230",
    "end": "1647790"
  },
  {
    "text": "millisecond response time even down as low as 32 milliseconds in some cases on",
    "start": "1647790",
    "end": "1655950"
  },
  {
    "text": "average these are these are some of the off hits and all this was done with a",
    "start": "1655950",
    "end": "1661679"
  },
  {
    "text": "very very simple cue subscriber and a click of a button to scale",
    "start": "1661679",
    "end": "1667070"
  },
  {
    "start": "1669000",
    "end": "2071000"
  },
  {
    "text": "so that's that's the presentation for today any questions and Derek you're",
    "start": "1670850",
    "end": "1676549"
  },
  {
    "text": "welcome to come up and field any questions if you'd like",
    "start": "1676549",
    "end": "1681159"
  },
  {
    "text": "when you start up and form a connection you can unconnect you can tell the",
    "start": "1698440",
    "end": "1703809"
  },
  {
    "text": "server if I go away send this message on my behalf saying I work ladybug is something that the first time I heard",
    "start": "1703809",
    "end": "1711480"
  },
  {
    "text": "which says instead of just taking a server out take it out say hey stop",
    "start": "1711480",
    "end": "1717370"
  },
  {
    "text": "accepting new stuff but bring everything so a lot of these techniques I think are",
    "start": "1717370",
    "end": "1723580"
  },
  {
    "text": "extremely effective and keep you had at most once deliveries panels so that",
    "start": "1723580",
    "end": "1729070"
  },
  {
    "text": "firing forget that attack supportive so lightweight with brain mode we can run crazy tests or Auto unsubscribing me",
    "start": "1729070",
    "end": "1735820"
  },
  {
    "text": "killing me going down up and everything and not a single messages every drop that's not to say that it can't happen",
    "start": "1735820",
    "end": "1741460"
  },
  {
    "text": "or something underneath of us it changes but it makes extreme we did that can be",
    "start": "1741460",
    "end": "1750130"
  },
  {
    "text": "cycling application",
    "start": "1750130",
    "end": "1753570"
  },
  {
    "text": "yes",
    "start": "1756190",
    "end": "1758759"
  },
  {
    "text": "so the question is Kafka versus have to be mean when what I think I actually",
    "start": "1764970",
    "end": "1770220"
  },
  {
    "text": "think it's a good story together Colin and I have done a couple trips already this year people who have large",
    "start": "1770220",
    "end": "1776580"
  },
  {
    "text": "investments know what happens is whenever you pick a technology and kind of go all in on it",
    "start": "1776580",
    "end": "1782340"
  },
  {
    "text": "one of two things happen one's a very small sense which is the other which",
    "start": "1782340",
    "end": "1787440"
  },
  {
    "text": "usually happens is like well we're pretty good for this but then we decided to so what we were seeing is a lot of",
    "start": "1787440",
    "end": "1797670"
  },
  {
    "text": "people said we like the concepts of streaming and location replay you just",
    "start": "1797670",
    "end": "1803220"
  },
  {
    "text": "want to have something like by the way easier to operate I don't know we were",
    "start": "1803220",
    "end": "1813120"
  },
  {
    "text": "setting up for our trip to New York it",
    "start": "1813120",
    "end": "1818220"
  },
  {
    "text": "was very and so with that being said",
    "start": "1818220",
    "end": "1829980"
  },
  {
    "text": "we're not going in the never say",
    "start": "1829980",
    "end": "1833690"
  },
  {
    "text": "and we have some really cool ideas for me to NAT streaming v2",
    "start": "1836899",
    "end": "1846340"
  },
  {
    "text": "so the question is what happens and inside the the server what happens if it",
    "start": "1864790",
    "end": "1869830"
  },
  {
    "text": "crashes how you so that's the reality is",
    "start": "1869830",
    "end": "1881050"
  },
  {
    "text": "the systems are very simple so in that's",
    "start": "1881050",
    "end": "1889600"
  },
  {
    "text": "for if something happens in a by the way if you get an answer of the crashes we",
    "start": "1889600",
    "end": "1895660"
  },
  {
    "text": "haven't had those the e crashed last night so we're not inside the server the",
    "start": "1895660",
    "end": "1915400"
  },
  {
    "text": "the the general gist of things is that there's an interest at propagation and",
    "start": "1915400",
    "end": "1920530"
  },
  {
    "text": "that's what the column was alluded to and we do some really interesting tricks",
    "start": "1920530",
    "end": "1925840"
  },
  {
    "text": "for global scale so I say hey I'm",
    "start": "1925840",
    "end": "1931450"
  },
  {
    "text": "interested in food but again in",
    "start": "1931450",
    "end": "1939610"
  },
  {
    "text": "coordinates they're moving data loss map streaming will persist things",
    "start": "1939610",
    "end": "1945450"
  },
  {
    "text": "where is so they can bring all those",
    "start": "1946430",
    "end": "1950770"
  },
  {
    "text": "who copy as far as I know we hear a lot and what we tried very hard not to do is",
    "start": "1966010",
    "end": "1973919"
  },
  {
    "text": "we're gonna make a change on the server and you're going to change all your clients now with figuration and upgrade",
    "start": "1973919",
    "end": "1980230"
  },
  {
    "text": "like that so even with the new technology that Colin was talking about with what we call NGS your conscious",
    "start": "1980230",
    "end": "1987340"
  },
  {
    "text": "still work this is the codes don't just doesn't see much messages now",
    "start": "1987340",
    "end": "1993840"
  },
  {
    "text": "very intelligent replication but not on the gist google gfs /r 5 or whatever",
    "start": "1999430",
    "end": "2006059"
  },
  {
    "text": "type thing which is usually kind of wasteful so we're trying it and they got much better at it after I left but um",
    "start": "2006059",
    "end": "2011970"
  },
  {
    "text": "we're trying to do some really interesting things there and stay committed to the the philosophy that is",
    "start": "2011970",
    "end": "2018840"
  },
  {
    "text": "just easy but it does everything predictably but the things you're supposed to be doing like security and",
    "start": "2018840",
    "end": "2024540"
  },
  {
    "text": "things like that yes",
    "start": "2024540",
    "end": "2029630"
  },
  {
    "text": "so the question is on Io te and do you want all of the data I think that's a great question I don't know if it's a",
    "start": "2038450",
    "end": "2044870"
  },
  {
    "text": "specific Nats question what I think it is is what type of data are you",
    "start": "2044870",
    "end": "2050000"
  },
  {
    "text": "generating how big is it what is the cost to transport it let's say for example from an endpoint to the cloud",
    "start": "2050000",
    "end": "2055700"
  },
  {
    "text": "versus an edge IOT gateway versus gossiping between themselves we want",
    "start": "2055700",
    "end": "2060800"
  },
  {
    "text": "Nats to be the enabler of that so if you notice when Colin was talking the net server already runs on like raspberry",
    "start": "2060800",
    "end": "2066350"
  },
  {
    "text": "pies and arms and stuff and we're gonna push into microcontrollers especially for clients but I think those types of",
    "start": "2066350",
    "end": "2073280"
  },
  {
    "text": "questions are more about how do you design a system you know a full end and distribute system to achieve what you",
    "start": "2073280",
    "end": "2079310"
  },
  {
    "text": "want and we just want to be part of the story now we've all done these systems before so we have opinions you know like",
    "start": "2079310",
    "end": "2086030"
  },
  {
    "text": "if you say well I'm talking specifically about this I'll tell you what I think could be wrong and it's free so you get",
    "start": "2086030",
    "end": "2091220"
  },
  {
    "text": "what you pay for but yeah it's all in the application and and the notion of",
    "start": "2091220",
    "end": "2096530"
  },
  {
    "text": "edge and edge propagation and and sensors is changing every day right",
    "start": "2096530",
    "end": "2102890"
  },
  {
    "text": "everything is just keep pushing further out so right now and I think of very end",
    "start": "2102890",
    "end": "2108680"
  },
  {
    "text": "point type things I'm actually starting to think of extremely restricted communication channels and probably",
    "start": "2108680",
    "end": "2115160"
  },
  {
    "text": "battery-powered which might not be what you would say was you know as IOT I'm",
    "start": "2115160",
    "end": "2120470"
  },
  {
    "text": "saying that a lot of the consumer electronics is in your house actually probably or more edge not necessarily",
    "start": "2120470",
    "end": "2125750"
  },
  {
    "text": "IOT anymore right I mean they're running on processors faster than I went to school with you know in the 80s oh yes",
    "start": "2125750",
    "end": "2135550"
  },
  {
    "text": "so the question is if a company is going all in on you know using things like",
    "start": "2155690",
    "end": "2163580"
  },
  {
    "text": "Kafka and streaming to represent a global state so for example what we",
    "start": "2163580",
    "end": "2169010"
  },
  {
    "text": "always used to put in the database now people are saying oh replay all the messages and the events and then you come up with the same state and it was",
    "start": "2169010",
    "end": "2175220"
  },
  {
    "text": "not applicable for that you know I see sometimes architectures that I kind of",
    "start": "2175220",
    "end": "2181490"
  },
  {
    "text": "go yeah that that kind of makes sense I get it more often than not I look at it and I go I just wouldn't do it that way",
    "start": "2181490",
    "end": "2187850"
  },
  {
    "text": "not to say that's right or wrong and and we have these conversations all the time and it's always a transition from",
    "start": "2187850",
    "end": "2194860"
  },
  {
    "text": "development to to operations which sounds like it should make a lot of sense but what I mean is is most times",
    "start": "2194860",
    "end": "2202490"
  },
  {
    "text": "when you talk to developers you know and we say oh we do blah blah and they go why all I need to do is ask him a",
    "start": "2202490",
    "end": "2207800"
  },
  {
    "text": "question I just need RPC you know step away I don't need any of your crazy stuff but then you get into production right and",
    "start": "2207800",
    "end": "2213830"
  },
  {
    "text": "you're gone well okay and the golden rule that all of us who have been doing messaging for so long and just learned",
    "start": "2213830",
    "end": "2220640"
  },
  {
    "text": "it not it's not an IQ thing it's just the scars on your back thing is never make an assumption today when you send a",
    "start": "2220640",
    "end": "2227420"
  },
  {
    "text": "message what the message can be used for tomorrow and so what we see is when you transition to ops it's like I'm still asking you a question and I as a",
    "start": "2227420",
    "end": "2233930"
  },
  {
    "text": "developer I know I'm asking you a question but now sudden he's moving he's coming in and he needs to do compliance so he",
    "start": "2233930",
    "end": "2239660"
  },
  {
    "text": "needs to see my request and his answers and I don't want to change and he doesn't want to change now suddenly we",
    "start": "2239660",
    "end": "2245480"
  },
  {
    "text": "need ten of him I don't want to be installing load balancers and moving stuff and now we want to move into a different cloud and all geez you know",
    "start": "2245480",
    "end": "2251660"
  },
  {
    "text": "and everybody's throwing their keyboards nats takes care of all of that so it allows you to transition from a simple",
    "start": "2251660",
    "end": "2257000"
  },
  {
    "text": "request reply RPC model and dev into a production system where you can change that whole system without ever changing",
    "start": "2257000",
    "end": "2262610"
  },
  {
    "text": "him and I and I like those patterns and again the system is extremely predictable so when you you make changes",
    "start": "2262610",
    "end": "2269000"
  },
  {
    "text": "to it you know exactly what it's going to do you're not going I hope this works you know what I mean which we've all been there now that being said we are",
    "start": "2269000",
    "end": "2277010"
  },
  {
    "text": "going to invest a good amount of effort into where we feel we've seen those patterns and they make a lot of sense",
    "start": "2277010",
    "end": "2283310"
  },
  {
    "text": "and we're trying to take that plus a lot of the feedback that the community gave not streaming and roll that into jet",
    "start": "2283310",
    "end": "2290990"
  },
  {
    "text": "stream and a lot of the feedback was it's not you went too far away from Nats",
    "start": "2290990",
    "end": "2296000"
  },
  {
    "text": "come back you know I mean we like this just add us a little bit of you know at",
    "start": "2296000",
    "end": "2301430"
  },
  {
    "text": "least once semantics but don't make it a different API or don't make it feel like it's apples and oranges so no word",
    "start": "2301430",
    "end": "2310540"
  },
  {
    "start": "2306000",
    "end": "2391000"
  },
  {
    "text": "mm-hmm",
    "start": "2318810",
    "end": "2321680"
  },
  {
    "text": "so the question is about Kafka's attractiveness and if I say it wrong tell me I'm wrong but uh Kafka's",
    "start": "2340140",
    "end": "2346650"
  },
  {
    "text": "attractiveness is that there isn't a mat a massive ecosystem and a massive amount of built-in integrations in connector",
    "start": "2346650",
    "end": "2353099"
  },
  {
    "text": "technologies already we haven't gone down that path but our ecosystem has and",
    "start": "2353099",
    "end": "2360210"
  },
  {
    "text": "all of us on the team live that in the 90s where all we did was tip Co adaptors",
    "start": "2360210",
    "end": "2365309"
  },
  {
    "text": "and stuff for like years on end and stuff so yeah we're definitely we're",
    "start": "2365309",
    "end": "2370410"
  },
  {
    "text": "looking at that we're trying to pick and choose we got about a thousand slack members now and and it feels like a",
    "start": "2370410",
    "end": "2377040"
  },
  {
    "text": "great ecosystem people are always willing to help each other out it just feels right can it compete with Kaka's",
    "start": "2377040",
    "end": "2384660"
  },
  {
    "text": "ecosystem today probably not but I don't know if I want to you know I don't even",
    "start": "2384660",
    "end": "2389790"
  },
  {
    "text": "like Java anymore so I don't know yes",
    "start": "2389790",
    "end": "2395869"
  },
  {
    "start": "2391000",
    "end": "2486000"
  },
  {
    "text": "yeah so the question is in superclusters houses the concept of locality playing a",
    "start": "2405500",
    "end": "2410790"
  },
  {
    "text": "role in the distributed queuing algorithms so the way it works is clusters today so if anyone is using ATS",
    "start": "2410790",
    "end": "2417150"
  },
  {
    "text": "they probably know about the clusters that existed a full mesh one hop I've always done those the internet actually",
    "start": "2417150",
    "end": "2424230"
  },
  {
    "text": "is based on those as well even though they don't scale so they logically underneath they're full mesh one hop BGP",
    "start": "2424230",
    "end": "2429660"
  },
  {
    "text": "and then you try to do weird stuff on top our super clusters are the same way it's essentially clusters of clusters in",
    "start": "2429660",
    "end": "2434970"
  },
  {
    "text": "a full mesh one-hot so it sounds really really cool and it is when you see it working we have it working in NGS which",
    "start": "2434970",
    "end": "2440880"
  },
  {
    "text": "is our global system but what it does is it says oh I'm gonna pin to my local",
    "start": "2440880",
    "end": "2445890"
  },
  {
    "text": "cluster and when I send a message I know if there's any interest locally on a q",
    "start": "2445890",
    "end": "2452040"
  },
  {
    "text": "group and so if it's like you're listening on foo and you're part of far we do that when we fail and there's",
    "start": "2452040",
    "end": "2457980"
  },
  {
    "text": "nobody home in that local cluster the super cluster technology that it bifurcates inbound and outbound it does",
    "start": "2457980",
    "end": "2464339"
  },
  {
    "text": "a spline based technology so that there's no single point of failure there's no one blessed guy that's the",
    "start": "2464339",
    "end": "2469890"
  },
  {
    "text": "one sending all the data over so we think it's kind of cool but um they understand independently all the RTT",
    "start": "2469890",
    "end": "2476940"
  },
  {
    "text": "times to all the other gateways and so what they do is they they have them sorted internally all the time and so",
    "start": "2476940",
    "end": "2482460"
  },
  {
    "text": "they just say oh we're gonna send it to him he's only three milliseconds away",
    "start": "2482460",
    "end": "2488210"
  },
  {
    "start": "2486000",
    "end": "2606000"
  },
  {
    "text": "yeah so the question is do I know there's a scriber over there so this is",
    "start": "2495020",
    "end": "2500520"
  },
  {
    "text": "uh this could be like a three-hour conversation but I'll try to make it really short in in local clusters small",
    "start": "2500520",
    "end": "2507570"
  },
  {
    "text": "clusters the ones that exist today interest propagation always happens so",
    "start": "2507570",
    "end": "2513900"
  },
  {
    "text": "if he listens to foo everyone the cluster knows he's listening the foo now we've optimized it in the latest version",
    "start": "2513900",
    "end": "2520140"
  },
  {
    "text": "that's on master such that if there's a thousand people listen on foo the owner goes over the wire once saying hey",
    "start": "2520140",
    "end": "2526470"
  },
  {
    "text": "someone over there is listening on foo so it's gotten better there that actually doesn't work though very well with clusters of clusters and you know",
    "start": "2526470",
    "end": "2534630"
  },
  {
    "text": "tens of thousands hundreds out of millions of accounts hundreds of millions of users to say yeah we want to",
    "start": "2534630",
    "end": "2540240"
  },
  {
    "text": "have every server know everything about the world so the way briefly that the",
    "start": "2540240",
    "end": "2546840"
  },
  {
    "text": "super cluster gateway technology works is is that we start in an optimistic way which is oh yeah I'll send you",
    "start": "2546840",
    "end": "2553050"
  },
  {
    "text": "everything and then you'll prune the interest rate and what's nice is that when Colin was talking about accounts",
    "start": "2553050",
    "end": "2559470"
  },
  {
    "text": "think of accounts as like the containers for your messaging system they put a little wrapper around it",
    "start": "2559470",
    "end": "2564540"
  },
  {
    "text": "right and so you're kind of isolated in there so if I'm sending something over and he has nobody even at home on that",
    "start": "2564540",
    "end": "2570030"
  },
  {
    "text": "account he will actually not just prune the subject he'll prune the whole account and I'll remember that I'm like oh okay fine I won't bother you anymore",
    "start": "2570030",
    "end": "2576350"
  },
  {
    "text": "and then we have a way that under degenerative cases where what we're",
    "start": "2576350",
    "end": "2582210"
  },
  {
    "text": "trying to do is minimize the amount of traffic on the wire going back and forth but there's degenerative cases where the",
    "start": "2582210",
    "end": "2587280"
  },
  {
    "text": "pruning method might actually start generating more traffic than perfect knowledge mode and so we Auto switched a",
    "start": "2587280",
    "end": "2592619"
  },
  {
    "text": "perfect knowledge mode so he can go hey stop sending all this crap I will promise you I'll tell you what I want",
    "start": "2592619",
    "end": "2598320"
  },
  {
    "text": "you to send me otherwise don't send it and so the system dynamically is switching all the time based on that so",
    "start": "2598320",
    "end": "2603619"
  },
  {
    "text": "that's a little bit longer answer but it's cool tech I think it's pretty neat yes oh absolutely that's I mean so the",
    "start": "2603619",
    "end": "2613950"
  },
  {
    "start": "2606000",
    "end": "2646000"
  },
  {
    "text": "the yeah so when Colin was talking about the notion of accounts and then when you want to share something he said two",
    "start": "2613950",
    "end": "2619920"
  },
  {
    "text": "words services and streams Stream is an immense stream it's a published thing things are going out I don't know I",
    "start": "2619920",
    "end": "2625260"
  },
  {
    "text": "don't know who's out there who wants to see him but if you want to great services are you're gonna send me a request I'm going to send you response",
    "start": "2625260",
    "end": "2631420"
  },
  {
    "text": "an RPC request reply and those are the two major patterns because even low balance Q's or the distributive queuing",
    "start": "2631420",
    "end": "2638230"
  },
  {
    "text": "technology is still a request replies just we automatically can load balance without additional side cards or load",
    "start": "2638230",
    "end": "2643750"
  },
  {
    "text": "balancers or any other goofy tech so any others yes",
    "start": "2643750",
    "end": "2651599"
  },
  {
    "text": "so the question is does the kubernetes operator deal in such a way that the NAT",
    "start": "2668860",
    "end": "2675230"
  },
  {
    "text": "system and them are talking about scaling is that fair so while he's the one that designed the operator do you",
    "start": "2675230",
    "end": "2681140"
  },
  {
    "text": "want to take it or just say no so the closed-loop stuff on low balancing is an",
    "start": "2681140",
    "end": "2687620"
  },
  {
    "text": "interesting problem the information is there and in the tech that we're coming up with the ability to not have to ask",
    "start": "2687620",
    "end": "2695660"
  },
  {
    "text": "for information out of the system but it'll actually push it to you is being introduced and this was an idea that",
    "start": "2695660",
    "end": "2702020"
  },
  {
    "text": "Colin and others on the team had had and now that we have accounts we feel that we're in a perfect space because we can",
    "start": "2702020",
    "end": "2708290"
  },
  {
    "text": "put that in a system account and then the system account has to say I will export this to you otherwise you can",
    "start": "2708290",
    "end": "2713420"
  },
  {
    "text": "never see that is saying hey somebody's listening on foo or I'm using this much memory but now sudden that's all going",
    "start": "2713420",
    "end": "2719360"
  },
  {
    "text": "around so I would imagine and while you'll hit me with his book if I'm wrong we'll start taking advantage of that in",
    "start": "2719360",
    "end": "2726050"
  },
  {
    "text": "the operator sometime in 19 such that if you wanted to and you told it hey listen to this stuff and here's the thresholds",
    "start": "2726050",
    "end": "2731690"
  },
  {
    "text": "or whatever model you want and you can auto scale based on that that's a lot more possible now I think is that fair",
    "start": "2731690",
    "end": "2739690"
  },
  {
    "start": "2736000",
    "end": "2861000"
  },
  {
    "text": "yes",
    "start": "2739690",
    "end": "2742690"
  },
  {
    "text": "so that the question is and the operator can you do throughput monitoring things",
    "start": "2759240",
    "end": "2764290"
  },
  {
    "text": "like that well yeah so Natchez is designed in a way that was very specific",
    "start": "2764290",
    "end": "2771820"
  },
  {
    "text": "to decisions that I made that I regret in the early 90s I designed a pub/sub",
    "start": "2771820",
    "end": "2777340"
  },
  {
    "text": "system with a bunch of guys at Technic Ron which became TIBCO and everything was pub/sub except for your reply right",
    "start": "2777340",
    "end": "2784870"
  },
  {
    "text": "so I'd send the message out and then there was a special thing underneath the covers called an inbox and matter of fact every all of our special things are",
    "start": "2784870",
    "end": "2791440"
  },
  {
    "text": "named underbar inbox but in rendezvous they were special meaning if you came along and said show me everything you",
    "start": "2791440",
    "end": "2797170"
  },
  {
    "text": "can see everything except the response Nats it's not like that it is pure pub/sub meaning if you want to and",
    "start": "2797170",
    "end": "2803470"
  },
  {
    "text": "you're allowed to you're authorized which by default you are you can say show me everything I want to see all the",
    "start": "2803470",
    "end": "2808840"
  },
  {
    "text": "requests going oh I want to see the responses I can measure latency which is kind of what Colin was showing in that",
    "start": "2808840",
    "end": "2814420"
  },
  {
    "text": "graph you can easily say I see the latency and I don't like it and I'm gonna press a button to say start more",
    "start": "2814420",
    "end": "2820030"
  },
  {
    "text": "of these that's really really straightforward with that and then I think your other question was about",
    "start": "2820030",
    "end": "2826600"
  },
  {
    "text": "monitoring the original design of Nats I took a lesson from Google and it has the",
    "start": "2826600",
    "end": "2832510"
  },
  {
    "text": "ability to have var Z's and stuff which are HD JSON endpoints the system that's",
    "start": "2832510",
    "end": "2837640"
  },
  {
    "text": "on master now that we're cutting release can optionally be configured with a system account and as soon as you do",
    "start": "2837640",
    "end": "2844180"
  },
  {
    "text": "that the system wakes up and it starts sending messages pure Nats messages out on all the stuff it's doing internally",
    "start": "2844180",
    "end": "2849820"
  },
  {
    "text": "and then if you want to you can subscribe to those either can service import them or stream import them or I",
    "start": "2849820",
    "end": "2856420"
  },
  {
    "text": "wouldn't recommend it but you can give yourself a user on the system account and directly look at them but I like the separation to be honest with you",
    "start": "2856420",
    "end": "2863480"
  },
  {
    "start": "2861000",
    "end": "2968000"
  },
  {
    "text": "any others yes so the question is do you",
    "start": "2863480",
    "end": "2871470"
  },
  {
    "text": "have a time stamp on the message and that synchronize the the answer is no and the the payloads are opaque to us",
    "start": "2871470",
    "end": "2878060"
  },
  {
    "text": "but that being said in the the last thing that we've been working on we want",
    "start": "2878060",
    "end": "2884400"
  },
  {
    "text": "it to be able to coordinate you know as well and so what we've done is is that we instead of doing time we do sequence",
    "start": "2884400",
    "end": "2891180"
  },
  {
    "text": "based on event streams and so if I'll sudden I get something out of order I know I can ignore the one that was",
    "start": "2891180",
    "end": "2897000"
  },
  {
    "text": "delivered out of order so it's not as you know it's not like a vector clock type of thing but it's a simple mechanism that we can say oh okay you",
    "start": "2897000",
    "end": "2903900"
  },
  {
    "text": "know the message I just got from him and then you sent me one you know yours was old or I'll just you know if it's an",
    "start": "2903900",
    "end": "2909690"
  },
  {
    "text": "idempotent feed which we always do so all of our our eventing out of there is always item potent meaning you have",
    "start": "2909690",
    "end": "2915599"
  },
  {
    "text": "everything you need to know what the message in hand and then we just added the sequence number so you know to ignore ones that come in which in very",
    "start": "2915599",
    "end": "2922770"
  },
  {
    "text": "large topologies like we're doing with NGS is possible right because you're going all over all over the world stuff",
    "start": "2922770",
    "end": "2928310"
  },
  {
    "text": "time time coordination is a hard problem but it's an interesting one because if",
    "start": "2928310",
    "end": "2933869"
  },
  {
    "text": "you can coordinate it gives you a lot of things and Google kind of taught everyone again like they had been to",
    "start": "2933869",
    "end": "2940830"
  },
  {
    "text": "think outside the box and they go well wait a minute if we actually just by this fancy piece of hardware and sitting on our data centers we know that all of",
    "start": "2940830",
    "end": "2947160"
  },
  {
    "text": "the clocks I think will be within two milliseconds or something seven so that's their spanner window right for if",
    "start": "2947160",
    "end": "2952830"
  },
  {
    "text": "there's conflicts if it's in that seven millisecond window they got to kind of figure stuff out otherwise they're good to go but most people don't have that so any",
    "start": "2952830",
    "end": "2961320"
  },
  {
    "text": "others these are good questions by the way thank you okay thank you guys very",
    "start": "2961320",
    "end": "2966839"
  },
  {
    "text": "much I appreciate it",
    "start": "2966839",
    "end": "2969830"
  }
]