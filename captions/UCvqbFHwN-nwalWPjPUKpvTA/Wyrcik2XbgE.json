[
  {
    "text": "thank you everyone for coming in person and this is cool to see everyone together a lot of the talks and",
    "start": "719",
    "end": "7520"
  },
  {
    "text": "the observability track have been virtual unfortunately i hope it changes but i'm glad to get everyone together",
    "start": "7520",
    "end": "14080"
  },
  {
    "text": "and and showing up and meeting and talking uh today i'm actually the title's a",
    "start": "14080",
    "end": "19520"
  },
  {
    "text": "little misleading but this talk is going to be about jager and we're going to dig into the jaeger operator which is a",
    "start": "19520",
    "end": "25840"
  },
  {
    "text": "really cool piece of technology that's part of the project and then we're going to talk about some of the metrics work that's",
    "start": "25840",
    "end": "32640"
  },
  {
    "text": "been going on in yeager uh the first part of the talk about the operator uh joe elliott actually put the",
    "start": "32640",
    "end": "39680"
  },
  {
    "text": "slides together and he was unable to make it last minute he's one of the maintainers as well",
    "start": "39680",
    "end": "46239"
  },
  {
    "text": "he's over at grafana labs and he's the person responsible for tempo for those",
    "start": "46239",
    "end": "51520"
  },
  {
    "text": "of you that are maybe using that he's a great engineer sorry he's not with us today",
    "start": "51520",
    "end": "57600"
  },
  {
    "text": "my name is jonah cowell i'm the cto at logs i o i do a lot of work on jaeger",
    "start": "57600",
    "end": "62640"
  },
  {
    "text": "open telemetry and open search which is the new open source fork of elasticsearch",
    "start": "62640",
    "end": "69600"
  },
  {
    "text": "um and i'm happy to be here when i'm not working at the computer",
    "start": "69600",
    "end": "75759"
  },
  {
    "text": "or maybe playing a little video games i spend a lot of time underwater uh it's been nice and covered because",
    "start": "75759",
    "end": "82159"
  },
  {
    "text": "you're very isolated that way so i do a lot of diving that's my passion for the last several years and",
    "start": "82159",
    "end": "90000"
  },
  {
    "text": "explore a lot of cool places where i live in south florida and all over the world",
    "start": "90000",
    "end": "95520"
  },
  {
    "text": "so if you want to talk diving that's definitely another thing besides observability that i like to talk about",
    "start": "95520",
    "end": "104000"
  },
  {
    "text": "and my company is a sas observability company there are many out there i can",
    "start": "104000",
    "end": "109119"
  },
  {
    "text": "see many of you representing other ones we focus on an open source based",
    "start": "109119",
    "end": "115040"
  },
  {
    "text": "platform and jager is part of our platform uh so it's the same ui the same",
    "start": "115040",
    "end": "120159"
  },
  {
    "text": "usability with a bunch of other stuff around it um and jager is a is a great cncf",
    "start": "120159",
    "end": "128000"
  },
  {
    "text": "project it's been graduated for quite some time uh for those of you that are not",
    "start": "128000",
    "end": "133360"
  },
  {
    "text": "familiar with jaeger it's and you're maybe using open telemetry or",
    "start": "133360",
    "end": "139200"
  },
  {
    "text": "looking at it the collector component of jager was actually forked to create the open",
    "start": "139200",
    "end": "144800"
  },
  {
    "text": "telemetry collector and we're starting to bring some of that back into jaeger and we're essentially going to just be",
    "start": "144800",
    "end": "151280"
  },
  {
    "text": "consuming upstream collector and that's the plan so jaeger is",
    "start": "151280",
    "end": "156400"
  },
  {
    "text": "basically a storage format and a ui and a bunch of other pieces around it in",
    "start": "156400",
    "end": "162640"
  },
  {
    "text": "order to scale it out but in general we build things in a very different way",
    "start": "162640",
    "end": "169120"
  },
  {
    "text": "they're very componentized it's designed to run on kubernetes and this is something that uber created",
    "start": "169120",
    "end": "176400"
  },
  {
    "text": "many years ago and open sourced donated to cncf",
    "start": "176400",
    "end": "182239"
  },
  {
    "text": "yuri the gentleman who created jaeger at uber has a great book on distributed",
    "start": "182239",
    "end": "187680"
  },
  {
    "text": "tracing many of you have probably read it it's very helpful even though the examples",
    "start": "187680",
    "end": "192800"
  },
  {
    "text": "are open tracing they're still very similar to open telemetry",
    "start": "192800",
    "end": "198080"
  },
  {
    "text": "and those that are not familiar i'll just give you a really quick rundown of what you're looking at here this is a",
    "start": "198080",
    "end": "203920"
  },
  {
    "text": "trace and in the trace there's a bunch of different transactions that are",
    "start": "203920",
    "end": "209920"
  },
  {
    "text": "occurring here so we can look at the different spans which are each of these little segments",
    "start": "209920",
    "end": "215920"
  },
  {
    "text": "and how much time they're taking and then we can look at the end to end trace how much time that's taking",
    "start": "215920",
    "end": "222159"
  },
  {
    "text": "are there errors are there other things that are going on and you can drill down into these there are tags that are added",
    "start": "222159",
    "end": "228959"
  },
  {
    "text": "that show you different information uh in the example here that mysql call",
    "start": "228959",
    "end": "234400"
  },
  {
    "text": "you can see the database query how long it took whether there were issues so it's a really useful tool",
    "start": "234400",
    "end": "241599"
  },
  {
    "text": "and it can take data in a lot of different ways and allow you to analyze",
    "start": "241599",
    "end": "247439"
  },
  {
    "text": "the trace data it's very focused on debugging so when you compare it to apm tools",
    "start": "247439",
    "end": "254640"
  },
  {
    "text": "this is very much a tool that people use to debug problems or understand what's happening",
    "start": "254640",
    "end": "260639"
  },
  {
    "text": "not really monitoring as much and i'll talk about that on the second half of the presentation when we talk about",
    "start": "260639",
    "end": "267520"
  },
  {
    "text": "metrics because that's really what's going to make jaeger more of a monitoring tool and less of just a",
    "start": "267520",
    "end": "273120"
  },
  {
    "text": "debugging tool like it is today so the operator is a really cool piece",
    "start": "273120",
    "end": "280080"
  },
  {
    "text": "of technology uh that that has been evolving a lot over the last year",
    "start": "280080",
    "end": "285680"
  },
  {
    "text": "um jp or jurassic depending on how well you know him uh is uh",
    "start": "285680",
    "end": "292800"
  },
  {
    "text": "is the gentleman responsible for this he was previously an engineer red hat he recently joined grafana labs",
    "start": "292800",
    "end": "300080"
  },
  {
    "text": "and he did a lot of work on the operator does some really cool things and i'm gonna show you how",
    "start": "300080",
    "end": "305840"
  },
  {
    "text": "you can use this on your laptop to do uh set set up jager and start using it",
    "start": "305840",
    "end": "311759"
  },
  {
    "text": "and even how you can use the operator to scale out and operate kubernetes in a large distributed environment the",
    "start": "311759",
    "end": "318560"
  },
  {
    "text": "operator is designed to do all of those things here's a link to it",
    "start": "318560",
    "end": "323600"
  },
  {
    "text": "to the docs which are also really good and comprehensive and explain everything in depth",
    "start": "323600",
    "end": "329600"
  },
  {
    "text": "so a lot of work went into this and thanks to the folks at red hat who are big into the operator model that",
    "start": "329600",
    "end": "336320"
  },
  {
    "text": "basically want everything to be deployed this way i think it's the right type of",
    "start": "336320",
    "end": "341520"
  },
  {
    "text": "uh model to use with kubernetes you've heard about it a lot this week and i think it's uh",
    "start": "341520",
    "end": "347280"
  },
  {
    "text": "it's really important for the ecosystem to adopt this way of of deploying and",
    "start": "347280",
    "end": "352400"
  },
  {
    "text": "running things i'm definitely a fan so",
    "start": "352400",
    "end": "357520"
  },
  {
    "text": "we're going to go through a bunch of different pieces how do i basically do",
    "start": "357520",
    "end": "363280"
  },
  {
    "text": "deployments configuration scale out and even talk about agents and sampling",
    "start": "363280",
    "end": "369360"
  },
  {
    "text": "and auto scaling so keep in mind that some of the things that were going over here are jager specific like",
    "start": "369360",
    "end": "375520"
  },
  {
    "text": "the instrumentation libraries open telemetry is going to be the standard jaeger had its own libraries",
    "start": "375520",
    "end": "382479"
  },
  {
    "text": "before but open telemetry is basically going to replace all of that",
    "start": "382479",
    "end": "387759"
  },
  {
    "text": "something that's currently being discussed a lot of people do use the jaeger libraries in their applications",
    "start": "387759",
    "end": "395360"
  },
  {
    "text": "and they're still supported we're just using hotel in the future similar to",
    "start": "395360",
    "end": "400400"
  },
  {
    "text": "people that maybe used open tracing before open tracing is being deprecated there's",
    "start": "400400",
    "end": "406160"
  },
  {
    "text": "nothing new going into it all the work is in hotel but that doesn't mean that the hotel collector",
    "start": "406160",
    "end": "413280"
  },
  {
    "text": "will not accept open tracing data it does and it will continue to do so",
    "start": "413280",
    "end": "420160"
  },
  {
    "text": "and this is the challenge with instrumentation is that as new things come whether we decide to replace them or not",
    "start": "420160",
    "end": "427039"
  },
  {
    "text": "we have to figure out what we do with that data and those formats it's it's tricky",
    "start": "427039",
    "end": "432800"
  },
  {
    "text": "so anyways to the operator um basically to get up and running uh cube cuddle create",
    "start": "432800",
    "end": "440720"
  },
  {
    "text": "this is essentially how you get a jaeger system up and running",
    "start": "440720",
    "end": "446240"
  },
  {
    "text": "uh so a couple things to keep in mind the logs are very useful when you're getting this up and running",
    "start": "446240",
    "end": "452960"
  },
  {
    "text": "and also it will watch specific name spaces to deploy",
    "start": "452960",
    "end": "458880"
  },
  {
    "text": "new new instances essentially if you leave it blank it will deploy on",
    "start": "458880",
    "end": "464400"
  },
  {
    "text": "every namespace or you can specify certain namespaces as well",
    "start": "464400",
    "end": "470240"
  },
  {
    "text": "um so it's up to you depending on how you're deploying this if you're testing it",
    "start": "470240",
    "end": "475599"
  },
  {
    "text": "in your test environment or on your laptop just leave it blank and it'll deploy everywhere essentially",
    "start": "475599",
    "end": "483840"
  },
  {
    "text": "so uh crd you essentially define what you want to do with jager and there",
    "start": "484479",
    "end": "491199"
  },
  {
    "text": "are three strategies that are defined in the operator there's all-in-one production and streaming and i'm going",
    "start": "491199",
    "end": "497919"
  },
  {
    "text": "to explain the difference between them and you specify the strategy in your resource definition and this",
    "start": "497919",
    "end": "504639"
  },
  {
    "text": "tells the operator what to deploy configure setup and how to scale it",
    "start": "504639",
    "end": "511360"
  },
  {
    "text": "so so the really basic way of deploying",
    "start": "511360",
    "end": "516640"
  },
  {
    "text": "jaeger on your desktop laptop whatnot is basically a single binary",
    "start": "516640",
    "end": "523200"
  },
  {
    "text": "um so this includes uh the the application well so the single binary is",
    "start": "523200",
    "end": "529519"
  },
  {
    "text": "the centerpiece the jager single binary the other pieces around it it needs a",
    "start": "529519",
    "end": "534640"
  },
  {
    "text": "data store a place to store information and then data comes from your application",
    "start": "534640",
    "end": "540880"
  },
  {
    "text": "instrumented with the client and goes to a jager agent the jager agent is sometimes optional",
    "start": "540880",
    "end": "547839"
  },
  {
    "text": "depending on how you're setting it up and then the single jager binary includes everything that you need",
    "start": "547839",
    "end": "554399"
  },
  {
    "text": "for the user interface for the data ingestion for the storage",
    "start": "554399",
    "end": "559839"
  },
  {
    "text": "and then a database and i'll explain what the database is and such this is",
    "start": "559839",
    "end": "565519"
  },
  {
    "text": "the really simple deployment the all-in-one version of that",
    "start": "565519",
    "end": "570560"
  },
  {
    "text": "the second and you'll use this on your laptop if you want to test it out start playing around",
    "start": "570560",
    "end": "576720"
  },
  {
    "text": "the second one is production which includes everything except for the",
    "start": "576720",
    "end": "582640"
  },
  {
    "text": "green box which says streaming and i'll explain streaming after and so what this means is now we're",
    "start": "582640",
    "end": "589200"
  },
  {
    "text": "starting to deploy a collector and the collector allows us to scale out the way the data ingestion comes in",
    "start": "589200",
    "end": "596320"
  },
  {
    "text": "so you can think of this as a way to essentially support more jaeger agents",
    "start": "596320",
    "end": "602399"
  },
  {
    "text": "more infrastructure that is sending trace data and we're going to talk more about the",
    "start": "602399",
    "end": "608240"
  },
  {
    "text": "back end database and about kafka and how those work in the production mode",
    "start": "608240",
    "end": "613440"
  },
  {
    "text": "because there are options for those uh jager query is also a service that",
    "start": "613440",
    "end": "619440"
  },
  {
    "text": "helps scale out the ui so when you're running in production it's a microservice that's also deployed and",
    "start": "619440",
    "end": "625360"
  },
  {
    "text": "managed the operator does work for all of this stuff basically to deploy it to scale it",
    "start": "625360",
    "end": "632160"
  },
  {
    "text": "and to manage it it's very powerful and i'll show you some examples of how that",
    "start": "632160",
    "end": "637279"
  },
  {
    "text": "works so today when you decide",
    "start": "637279",
    "end": "643120"
  },
  {
    "text": "what you're going to run jager on there are two options today in the operator one is elasticsearch and the other is",
    "start": "643120",
    "end": "650320"
  },
  {
    "text": "cassandra the operator will handle deploying those and being able to scale",
    "start": "650320",
    "end": "655600"
  },
  {
    "text": "them out so it's actually quite comprehensive what the options are",
    "start": "655600",
    "end": "661279"
  },
  {
    "text": "you can also point this at another cluster if let's say in your organization you've got a big elastic",
    "start": "661279",
    "end": "667519"
  },
  {
    "text": "search cluster you can just point it at a url instead of deploying that but the operator will",
    "start": "667519",
    "end": "674160"
  },
  {
    "text": "deploy that as well so",
    "start": "674160",
    "end": "679200"
  },
  {
    "text": "we do support open search which is the apache 2 version of elasticsearch",
    "start": "679200",
    "end": "684480"
  },
  {
    "text": "it's not in the operator yet it would be trivial to add it we'll see right now red hat hasn't decided whether",
    "start": "684480",
    "end": "691760"
  },
  {
    "text": "they want to switch to open search just because they they do keep things apache too in their",
    "start": "691760",
    "end": "698800"
  },
  {
    "text": "uh code base so we'll see what happens with that",
    "start": "698800",
    "end": "703839"
  },
  {
    "text": "the other option is or the other piece is uh is deploying kafka",
    "start": "704240",
    "end": "709839"
  },
  {
    "text": "kafka gives you the ability to deal with back pressure on the database so anyone that's running big elastic search",
    "start": "709839",
    "end": "716639"
  },
  {
    "text": "clusters you're already running kafka because there's essentially no other way to scale it well",
    "start": "716639",
    "end": "722800"
  },
  {
    "text": "uh and so in the streaming strategy or configuration it will deploy kafka you",
    "start": "722800",
    "end": "730000"
  },
  {
    "text": "can use various topics as well if you want to separate and manage the data effectively",
    "start": "730000",
    "end": "735600"
  },
  {
    "text": "and this allows you to deal with bursts of data coming in that maybe your",
    "start": "735600",
    "end": "740800"
  },
  {
    "text": "back end can't deal with kafka will cue them the other thing that kafka can be",
    "start": "740800",
    "end": "745839"
  },
  {
    "text": "used for is to do some stream analysis and there's been some nice little",
    "start": "745839",
    "end": "751120"
  },
  {
    "text": "experimental projects that are in one of our repos in the jager org of people that have built kafka streams",
    "start": "751120",
    "end": "758480"
  },
  {
    "text": "and spark streaming type of analytics on the trace data none of it's really well",
    "start": "758480",
    "end": "764480"
  },
  {
    "text": "baked but some of it came from uber and other companies that do that type of analysis",
    "start": "764480",
    "end": "770959"
  },
  {
    "text": "we built something similar in kafka streams that does some of our streaming analysis",
    "start": "770959",
    "end": "776399"
  },
  {
    "text": "we haven't open sourced all of it but we're we're going to do that soon it's definitely in the plan",
    "start": "776399",
    "end": "782240"
  },
  {
    "text": "uh so kafka is something that you're going to want to deal with if you're running a bigger cluster",
    "start": "782240",
    "end": "787839"
  },
  {
    "text": "or you have other use cases there but the operator will do that so to give you kind of an idea of how",
    "start": "787839",
    "end": "795040"
  },
  {
    "text": "this works the nice thing about jager is that each of the components because it's all in go it's just command line",
    "start": "795040",
    "end": "801360"
  },
  {
    "text": "arguments so the operator is basically passing in the right command line arguments for",
    "start": "801360",
    "end": "807839"
  },
  {
    "text": "what you're trying to deploy so some examples here and we can we can",
    "start": "807839",
    "end": "813120"
  },
  {
    "text": "specify a lot of this on the command line this basically is an example of us deploying",
    "start": "813120",
    "end": "818959"
  },
  {
    "text": "uh uh you know it it essentially does all the configuration and passes the command line arguments in",
    "start": "818959",
    "end": "825519"
  },
  {
    "text": "uh for you by running the operator so you don't have to deal with this all yourself",
    "start": "825519",
    "end": "830959"
  },
  {
    "text": "which is what happens when you run it on your own so it's definitely gives you a lot of",
    "start": "830959",
    "end": "836560"
  },
  {
    "text": "options and makes it easily scalable in a kubernetes environment",
    "start": "836560",
    "end": "843279"
  },
  {
    "text": "and the other thing to note is that if you decide to pass in other command line",
    "start": "843279",
    "end": "850000"
  },
  {
    "text": "parameters so in this case the example is there are there's blurrg and blarg that",
    "start": "850000",
    "end": "856639"
  },
  {
    "text": "are basically being specified in the crd here and you'll notice down at the bottom when the command line is run",
    "start": "856639",
    "end": "864079"
  },
  {
    "text": "uh unknown flag blur dot blarg it actually just passes all of those parameters in so if you feel like",
    "start": "864079",
    "end": "871120"
  },
  {
    "text": "passing a different parameter in to one of the jaeger components the operator will just essentially run",
    "start": "871120",
    "end": "878160"
  },
  {
    "text": "that in the command line so it gives you a lot of flexibility to do custom things",
    "start": "878160",
    "end": "883440"
  },
  {
    "text": "on top of what the operator already supports so the crd just makes it really easy to",
    "start": "883440",
    "end": "889279"
  },
  {
    "text": "manage the config and roll this out consistently it's definitely pretty powerful in terms of what you can",
    "start": "889279",
    "end": "896399"
  },
  {
    "text": "do with it so the other thing to think about is the",
    "start": "896399",
    "end": "901680"
  },
  {
    "text": "agents and in jaeger the agent is essentially something that the instrumentation talks to",
    "start": "901680",
    "end": "908399"
  },
  {
    "text": "so in the open telemetry uh world it's it's essentially a collector",
    "start": "908399",
    "end": "914800"
  },
  {
    "text": "in jaeger we actually have two different things we have an agent and a collector in open telemetry the collector can be",
    "start": "914800",
    "end": "921279"
  },
  {
    "text": "an agent or it can be a collector that was kind of part of the design of open telemetry was to have that same binary",
    "start": "921279",
    "end": "928399"
  },
  {
    "text": "be flexible for both use cases so when you decide to deploy your agent",
    "start": "928399",
    "end": "934720"
  },
  {
    "text": "as a sidecar in the operator what this means is that for every node that's",
    "start": "934720",
    "end": "939759"
  },
  {
    "text": "running an application an agent is going to go there there's going to be centralized",
    "start": "939759",
    "end": "945199"
  },
  {
    "text": "collector that the agents all talk to this is one option that people use",
    "start": "945199",
    "end": "950320"
  },
  {
    "text": "uh and i'll show you the other options for for agent deployment that the",
    "start": "950320",
    "end": "955839"
  },
  {
    "text": "operator supports so this is one way uh this way is kind of better because it's",
    "start": "955839",
    "end": "962320"
  },
  {
    "text": "more segmented with each of the applications that you're deploying",
    "start": "962320",
    "end": "968399"
  },
  {
    "text": "in in kubernetes the second way to do it is with a daemon",
    "start": "968399",
    "end": "973440"
  },
  {
    "text": "set this is another option where you have a single agent for multiple applications",
    "start": "973440",
    "end": "979440"
  },
  {
    "text": "now the challenge here is that you can overload the agent and you may have different teams",
    "start": "979440",
    "end": "985120"
  },
  {
    "text": "deploying applications that would talk to a single agent and the config and and just",
    "start": "985120",
    "end": "992160"
  },
  {
    "text": "managing that may be difficult depending on your configuration and how your teams",
    "start": "992160",
    "end": "997199"
  },
  {
    "text": "work and then those get sent on to a collector so these are basically the",
    "start": "997199",
    "end": "1003040"
  },
  {
    "text": "options for agent strategy deployment that are in the",
    "start": "1003040",
    "end": "1008839"
  },
  {
    "text": "operator the other interesting thing that jaeger has which is almost in open",
    "start": "1008839",
    "end": "1014399"
  },
  {
    "text": "telemetry i saw some actually commits go in this morning is this idea of remote sampling",
    "start": "1014399",
    "end": "1021040"
  },
  {
    "text": "and sampling is a big area of discussion in tracing and in open telemetry",
    "start": "1021040",
    "end": "1027199"
  },
  {
    "text": "what remote sampling is is it's actually pretty unique it's something that they built at uber for their specific use",
    "start": "1027199",
    "end": "1033678"
  },
  {
    "text": "cases around the volume of data that they were dealing with so today most of",
    "start": "1033679",
    "end": "1039038"
  },
  {
    "text": "the sampling happens at the collector so the traces come in and the collector decides whether it's",
    "start": "1039039",
    "end": "1045038"
  },
  {
    "text": "going to send those on to your back end the challenge is that all of that data is still going over your network and if",
    "start": "1045039",
    "end": "1052240"
  },
  {
    "text": "your collector isn't really close to your infrastructure that could cause other contention or cost if you're",
    "start": "1052240",
    "end": "1058480"
  },
  {
    "text": "running in the cloud with remote sampling the instrumentation",
    "start": "1058480",
    "end": "1063520"
  },
  {
    "text": "library actually is able to read a file or get a signal to change its sampling",
    "start": "1063520",
    "end": "1069520"
  },
  {
    "text": "strategy in real time and so because that's happening in the instrumentation",
    "start": "1069520",
    "end": "1074960"
  },
  {
    "text": "you can eliminate the fact that the instrumentation is even going to send trace data or not",
    "start": "1074960",
    "end": "1081600"
  },
  {
    "text": "and there's a lot of really great use cases for this i'll give you a good hypothetical",
    "start": "1081600",
    "end": "1087120"
  },
  {
    "text": "let's say uh in general i want to get one percent of my trace data so i'm i'm",
    "start": "1087120",
    "end": "1092880"
  },
  {
    "text": "sampling but when there's a problem i want to get 50 of my trace data so that",
    "start": "1092880",
    "end": "1099840"
  },
  {
    "text": "i can debug better with remote sampling i can send a signal that says change your sampling strategy",
    "start": "1099840",
    "end": "1107520"
  },
  {
    "text": "and then i can get more data temporarily so this feature is really powerful it's",
    "start": "1107520",
    "end": "1112559"
  },
  {
    "text": "it's almost in open telemetry the challenge is that the libraries have",
    "start": "1112559",
    "end": "1117600"
  },
  {
    "text": "to implement it also so we have to go in the go instrumentation and support remote sampling not just the collector",
    "start": "1117600",
    "end": "1125200"
  },
  {
    "text": "so there's still work to do here so one of the and the other thing is with open",
    "start": "1125200",
    "end": "1131679"
  },
  {
    "text": "telemetries it does tail-based sampling which the jaeger agent only does",
    "start": "1131679",
    "end": "1136880"
  },
  {
    "text": "head-based sampling so hotel is more sophisticated for sampling strategies",
    "start": "1136880",
    "end": "1143120"
  },
  {
    "text": "uh here are some examples of uh of sampling strategies",
    "start": "1143120",
    "end": "1148400"
  },
  {
    "text": "using both using basically the probabilistic which is the basic type of sampler and you can specify different",
    "start": "1148400",
    "end": "1155360"
  },
  {
    "text": "types of sampling for each service depending on what you want to capture and what you want to discard",
    "start": "1155360",
    "end": "1163120"
  },
  {
    "text": "and you can put this all in the crd it gets passed in uh to the rest of the jaeger deployment",
    "start": "1163120",
    "end": "1169840"
  },
  {
    "text": "so it's really powerful in terms of configuring everything together as a crd",
    "start": "1169840",
    "end": "1175919"
  },
  {
    "text": "which has a lot of benefits so the other thing that the operator",
    "start": "1175919",
    "end": "1182080"
  },
  {
    "text": "supports is auto scaling and scaling the collectors and ingestors which is really",
    "start": "1182080",
    "end": "1187440"
  },
  {
    "text": "uh useful as well how many of the um collectors do i want",
    "start": "1187440",
    "end": "1192960"
  },
  {
    "text": "to potentially scale to and you can also uh extend this on your own and maybe use",
    "start": "1192960",
    "end": "1199760"
  },
  {
    "text": "a metric for auto scaling and i'll talk about the metrics that uh jager supports",
    "start": "1199760",
    "end": "1205360"
  },
  {
    "text": "because it exposes a lot of data and prometheus that you can scrape and then you can use that as part of your auto",
    "start": "1205360",
    "end": "1212159"
  },
  {
    "text": "scaling as well so there's a lot of options here in the operator",
    "start": "1212159",
    "end": "1217360"
  },
  {
    "text": "to to do the auto scaling for you defined once again in the same crd so it",
    "start": "1217360",
    "end": "1223200"
  },
  {
    "text": "gives you one nice place to keep all of your config is code which is really handy",
    "start": "1223200",
    "end": "1230799"
  },
  {
    "text": "so i mentioned the storage um you know that supported",
    "start": "1231200",
    "end": "1236960"
  },
  {
    "text": "kafka and elasticsearch and monitoring jager itself",
    "start": "1236960",
    "end": "1242240"
  },
  {
    "text": "with prometheus is also easy we expose a lot of metrics that you can easily scrape",
    "start": "1242240",
    "end": "1248159"
  },
  {
    "text": "so a lot of folks are are doing that and it helps operationalize yeager for sure",
    "start": "1248159",
    "end": "1254400"
  },
  {
    "text": "so there's also a bunch of other pieces that the operator can do that i'm",
    "start": "1254400",
    "end": "1261120"
  },
  {
    "text": "not going to dig into because they're even more advanced use cases but here's",
    "start": "1261120",
    "end": "1266400"
  },
  {
    "text": "a few example examples of them in cassandra it can create schemas",
    "start": "1266400",
    "end": "1273120"
  },
  {
    "text": "there's a lot of index management and elasticsearch where jaeger will actually do the whole life cycle management of",
    "start": "1273120",
    "end": "1279360"
  },
  {
    "text": "indices for you and then there's all kinds of other things that",
    "start": "1279360",
    "end": "1284559"
  },
  {
    "text": "you know that this can do and of course open shift support that's the main reason that red hat contributed",
    "start": "1284559",
    "end": "1290480"
  },
  {
    "text": "all the work into the operator because they're big into that and there's lots of things that you can",
    "start": "1290480",
    "end": "1296480"
  },
  {
    "text": "do with this operator as well so it's it's worth checking out it's worth using even if you're just starting to play",
    "start": "1296480",
    "end": "1302880"
  },
  {
    "text": "with jaeger on your machine it's definitely a good way to do that and it helps",
    "start": "1302880",
    "end": "1308080"
  },
  {
    "text": "you see the power of operators because i think that's the future and if you listen to the keynotes",
    "start": "1308080",
    "end": "1313520"
  },
  {
    "text": "that's clearly kind of where the foundation is taking things i think",
    "start": "1313520",
    "end": "1319799"
  },
  {
    "text": "so the other pieces is the logs are very useful",
    "start": "1320240",
    "end": "1325440"
  },
  {
    "text": "as i said it exposes open metrics you can scrape with prometheus or any other",
    "start": "1325440",
    "end": "1330960"
  },
  {
    "text": "openmetrics compatible format and then and then you can also get traces off of jaeger of course",
    "start": "1330960",
    "end": "1338710"
  },
  {
    "text": "[Music] so i did want to spend a couple of minutes talking about metrics and this is really",
    "start": "1338710",
    "end": "1345760"
  },
  {
    "text": "how we move jaeger from being a debugging tool to a monitoring tool",
    "start": "1345760",
    "end": "1351679"
  },
  {
    "text": "is really introducing and integrating metrics so",
    "start": "1351679",
    "end": "1357679"
  },
  {
    "text": "most of you that have used an apm tool or or other products that call",
    "start": "1357679",
    "end": "1363360"
  },
  {
    "text": "themselves that it's because they use traces and they also use metrics together and this",
    "start": "1363360",
    "end": "1369840"
  },
  {
    "text": "allows you to do things like monitoring alerting capacity planning other types of",
    "start": "1369840",
    "end": "1375360"
  },
  {
    "text": "planning when i deploy something new how's it going to trend what's going to happen in my environment",
    "start": "1375360",
    "end": "1382080"
  },
  {
    "text": "this is really the difference between distributed tracing and monitoring tools",
    "start": "1382080",
    "end": "1387280"
  },
  {
    "text": "like apm tools so we built recently over the last several months",
    "start": "1387280",
    "end": "1395600"
  },
  {
    "text": "a new capability we call atm or aggregated trace metrics",
    "start": "1395600",
    "end": "1401039"
  },
  {
    "text": "and what this is is there's a couple of pieces to it one is an open telemetry there's a",
    "start": "1401039",
    "end": "1408960"
  },
  {
    "text": "a span metrics processor and in this processor when traces come",
    "start": "1408960",
    "end": "1414080"
  },
  {
    "text": "in the little diagram over to the right traces come in we then are able to look at those traces",
    "start": "1414080",
    "end": "1421600"
  },
  {
    "text": "and derive metrics from the traces that then use you send to a any type of",
    "start": "1421600",
    "end": "1428720"
  },
  {
    "text": "metrics back end so whether you're using prometheus or you're using a commercial",
    "start": "1428720",
    "end": "1434000"
  },
  {
    "text": "tool anything in open telemetry can take those metrics from that trace processor",
    "start": "1434000",
    "end": "1440720"
  },
  {
    "text": "and then the traces continue on to your tracing back end so the most common use case is",
    "start": "1440720",
    "end": "1447120"
  },
  {
    "text": "if i want to use all open source is i'm going to send my metrics to prometheus",
    "start": "1447120",
    "end": "1452159"
  },
  {
    "text": "and i'm going to send my traces to jaeger as an example and uh and so this allows us to create",
    "start": "1452159",
    "end": "1459760"
  },
  {
    "text": "all kinds of metrics off of the trace data and i'll give you some examples and and show you what that",
    "start": "1459760",
    "end": "1465760"
  },
  {
    "text": "what that does so in the configuration for open telemetry",
    "start": "1465760",
    "end": "1470960"
  },
  {
    "text": "uh this is an example config we basically specify the histogram",
    "start": "1470960",
    "end": "1476559"
  },
  {
    "text": "buckets that we want to create inside of prometheus and uh and we can define definitions",
    "start": "1476559",
    "end": "1484080"
  },
  {
    "text": "there's a bunch of examples in the code base um the challenge is that it can create a",
    "start": "1484080",
    "end": "1490720"
  },
  {
    "text": "lot of metrics depending on cardinality that you define uh most commonly we do status code based",
    "start": "1490720",
    "end": "1499039"
  },
  {
    "text": "so okay versus errors versus you know redirects and other things like",
    "start": "1499039",
    "end": "1504880"
  },
  {
    "text": "that and then you have all the histogram buckets and prometheus to do that",
    "start": "1504880",
    "end": "1510480"
  },
  {
    "text": "down at the bottom is an example of how you would use that together so using jaeger and prometheus together this is",
    "start": "1510559",
    "end": "1517039"
  },
  {
    "text": "basically a simple config of the pipeline so how that's all set up",
    "start": "1517039",
    "end": "1522640"
  },
  {
    "text": "in open telemetry and the code in github is down at the bottom as well it's part",
    "start": "1522640",
    "end": "1529120"
  },
  {
    "text": "of the collector so once i have this data",
    "start": "1529120",
    "end": "1534240"
  },
  {
    "text": "i can do all kinds of cool things here's a screenshot from grafana showing the",
    "start": "1534240",
    "end": "1539600"
  },
  {
    "text": "histogram buckets the performance of all my traces um and uh and we basically are",
    "start": "1539600",
    "end": "1546159"
  },
  {
    "text": "calculating uh the require the requests per second or the request time the latency the",
    "start": "1546159",
    "end": "1552720"
  },
  {
    "text": "errors so it allows you to do a lot of different monitoring use cases and gives you real visibility into it",
    "start": "1552720",
    "end": "1561360"
  },
  {
    "text": "we also added a view into yeager to query these metrics and i'll show you",
    "start": "1561840",
    "end": "1566880"
  },
  {
    "text": "that in a second and that supports anything that's prom ql compatible",
    "start": "1566880",
    "end": "1572240"
  },
  {
    "text": "um so in jager whatever supports prom ql you can point it there and it will query",
    "start": "1572240",
    "end": "1577600"
  },
  {
    "text": "those metrics and bring them into the ui and i'll show you how that looks the community can add other things um",
    "start": "1577600",
    "end": "1584720"
  },
  {
    "text": "but we use m3db in my organization and prometheus of course",
    "start": "1584720",
    "end": "1591840"
  },
  {
    "text": "but it'll work fine with cortex or cortex-based systems and of course",
    "start": "1591840",
    "end": "1597279"
  },
  {
    "text": "thanos time scale db whatever else is prom ql compatible uh if you listen to the talk yesterday",
    "start": "1597279",
    "end": "1604640"
  },
  {
    "text": "about compatibility uh it does matter whether things support",
    "start": "1604640",
    "end": "1609679"
  },
  {
    "text": "prom ql the right way so naturally it does have to support the right type of",
    "start": "1609679",
    "end": "1615200"
  },
  {
    "text": "query language for it to work uh but if someone wants to contribute a",
    "start": "1615200",
    "end": "1620640"
  },
  {
    "text": "uh you know the ability for this to work with another pr another metric system that's fine we'll definitely take any",
    "start": "1620640",
    "end": "1627760"
  },
  {
    "text": "prs in the project and so we have a new this is actually",
    "start": "1627760",
    "end": "1633600"
  },
  {
    "text": "appending pr right now in jager ui as there's a new monitor tab in the ui",
    "start": "1633600",
    "end": "1639679"
  },
  {
    "text": "and this allows you to visualize this data so you know latency response time error",
    "start": "1639679",
    "end": "1646640"
  },
  {
    "text": "rates the trending of those um and then some views this is kind of the first",
    "start": "1646640",
    "end": "1651919"
  },
  {
    "text": "step i think for jaeger obviously would be nice if we built alert manager visibility into",
    "start": "1651919",
    "end": "1659200"
  },
  {
    "text": "jaeger and really created more monitoring capabilities really to move jaeger from a just a distributed tracing",
    "start": "1659200",
    "end": "1666159"
  },
  {
    "text": "system into more of a an operational monitoring tool and debugging tool",
    "start": "1666159",
    "end": "1672159"
  },
  {
    "text": "um so that's kind of uh what we put together definitely check",
    "start": "1672159",
    "end": "1678240"
  },
  {
    "text": "out the docs uh come visit us in slack and we're always posting blogs and if",
    "start": "1678240",
    "end": "1684240"
  },
  {
    "text": "you have blogs or cool ideas that you want to post on our medium just let us know we're always looking for new",
    "start": "1684240",
    "end": "1691279"
  },
  {
    "text": "content and ideas and i think that is about it i'm open",
    "start": "1691279",
    "end": "1697840"
  },
  {
    "text": "for questions here i'll repeat them for those of you that are listening online um and i will also bring up the slack",
    "start": "1697840",
    "end": "1705360"
  },
  {
    "text": "and the online thing so that we can uh make sure to include everyone so if there's any questions please",
    "start": "1705360",
    "end": "1712720"
  },
  {
    "text": "uh raise your hand and sure",
    "start": "1712720",
    "end": "1721320"
  },
  {
    "text": "so the question was i talked about the scalability of jaeger is there any questions about the scalability of the",
    "start": "1731120",
    "end": "1738080"
  },
  {
    "text": "atm component that's inside open telemetry so one of the challenges with with",
    "start": "1738080",
    "end": "1744320"
  },
  {
    "text": "anything that's doing sampling or calculation is that you're going to get",
    "start": "1744320",
    "end": "1750159"
  },
  {
    "text": "it's it's tricky because you're going to be somewhat limited based on where the traces are going so let's say you have",
    "start": "1750159",
    "end": "1756720"
  },
  {
    "text": "10 different collectors that are calculating metrics you're going to have 10 different sets of metrics in",
    "start": "1756720",
    "end": "1762559"
  },
  {
    "text": "prometheus but if you roll those up so let's say i put the collector name in",
    "start": "1762559",
    "end": "1767600"
  },
  {
    "text": "the metric path i can then use it without the collector name",
    "start": "1767600",
    "end": "1772799"
  },
  {
    "text": "and get the aggregate of that data so the idea and that's what's nice about prometheus is that you can aggregate",
    "start": "1772799",
    "end": "1779600"
  },
  {
    "text": "data up a level from where you are and if you decide that maybe i don't want a",
    "start": "1779600",
    "end": "1784640"
  },
  {
    "text": "service i mean maybe i don't want a micro service level view and i want to move a",
    "start": "1784640",
    "end": "1790000"
  },
  {
    "text": "level up and look at a let's say a pod level view or a kubernetes you know construct you can",
    "start": "1790000",
    "end": "1797039"
  },
  {
    "text": "use all different kinds of things in the metric path so it gives you a lot of flexibility um",
    "start": "1797039",
    "end": "1803200"
  },
  {
    "text": "in terms of scalability we haven't really posted numbers on it but we put a",
    "start": "1803200",
    "end": "1808559"
  },
  {
    "text": "lot of metrics through it like to the point where it got prohibitively expensive and we actually tuned it down",
    "start": "1808559",
    "end": "1815760"
  },
  {
    "text": "so it can definitely create a lot of metrics i'm not really worried about that",
    "start": "1815760",
    "end": "1821840"
  },
  {
    "text": "but so hopefully that answers it um i'm going to take one online uh which",
    "start": "1821840",
    "end": "1828159"
  },
  {
    "text": "is can yeager work in a multi-cluster environment uh so yeah definitely i mean jager is a",
    "start": "1828159",
    "end": "1835679"
  },
  {
    "text": "microservices architecture it's scalable there's no real issues around that",
    "start": "1835679",
    "end": "1841039"
  },
  {
    "text": "if you have different storage back-ends jager doesn't work across separate",
    "start": "1841039",
    "end": "1846159"
  },
  {
    "text": "clusters of elasticsearch or cassandra for example so you should",
    "start": "1846159",
    "end": "1851760"
  },
  {
    "text": "scale those out which presents its own set of challenges because they're not the easiest things",
    "start": "1851760",
    "end": "1857600"
  },
  {
    "text": "to scale out but it does work well but it only supports",
    "start": "1857600",
    "end": "1863120"
  },
  {
    "text": "basically one back end because of the way that the that the product really works today or",
    "start": "1863120",
    "end": "1868240"
  },
  {
    "text": "the project really works today um over there",
    "start": "1868240",
    "end": "1874919"
  },
  {
    "text": "set of cool or categorize traffic",
    "start": "1891360",
    "end": "1896760"
  },
  {
    "text": "so i'm gonna try to rephrase the question and hopefully still get it uh",
    "start": "1910720",
    "end": "1915760"
  },
  {
    "text": "can you combine the remote sampling with other types of sampling is that kind of what you were getting at",
    "start": "1915760",
    "end": "1923039"
  },
  {
    "text": "an attribute sorry yeah",
    "start": "1930159",
    "end": "1935840"
  },
  {
    "text": "so you can build sampling and sorry i'm sorry for people online i'm trying to to",
    "start": "1938960",
    "end": "1945039"
  },
  {
    "text": "rephrase it but uh you can you can combine different things in the sampling strategy so you can use tags you can use",
    "start": "1945039",
    "end": "1952480"
  },
  {
    "text": "any type of part of the transaction itself to create a sampling strategy and do sampling and filtering",
    "start": "1952480",
    "end": "1960640"
  },
  {
    "text": "the challenge is with remote sampling is that we haven't implemented all the way in",
    "start": "1960640",
    "end": "1967360"
  },
  {
    "text": "hotel but it will go that way because there are customers or sorry they're not customers there are users using the",
    "start": "1967360",
    "end": "1974640"
  },
  {
    "text": "jager libraries that support that and they want that feature including companies like uber that created it they",
    "start": "1974640",
    "end": "1981360"
  },
  {
    "text": "they need it and they want to go to hotel so the only path they have for it is is for that to",
    "start": "1981360",
    "end": "1987039"
  },
  {
    "text": "happen so it will be supported you will be able to combine them together but it might give",
    "start": "1987039",
    "end": "1992799"
  },
  {
    "text": "you weird results depending on what your goals are um combining remote sampling and",
    "start": "1992799",
    "end": "1998240"
  },
  {
    "text": "centralized sampling uh there was a working group in hotel on sampling it's",
    "start": "1998240",
    "end": "2004799"
  },
  {
    "text": "not that active anymore but it's still an interesting topic for sure um",
    "start": "2004799",
    "end": "2011120"
  },
  {
    "text": "let me take one for online uh",
    "start": "2011120",
    "end": "2016000"
  },
  {
    "text": "so uh a talk from the speaker uh in the next session bartek asks uh i wonder",
    "start": "2016640",
    "end": "2024080"
  },
  {
    "text": "does permission does prometheus aggregator for trace data",
    "start": "2024080",
    "end": "2029600"
  },
  {
    "text": "in hotel also populate exemplars that's a really good question the answer is no",
    "start": "2029600",
    "end": "2035679"
  },
  {
    "text": "i don't believe that there's good example or support and open telemetry",
    "start": "2035679",
    "end": "2040799"
  },
  {
    "text": "yet or maybe i just haven't seen it but if if that's there that would",
    "start": "2040799",
    "end": "2046320"
  },
  {
    "text": "definitely be an option for enhancement and exemplars for those of you that are not familiar really powerful prometheus",
    "start": "2046320",
    "end": "2053760"
  },
  {
    "text": "feature or open metrics feature sorry that allows you to specify an example",
    "start": "2053760",
    "end": "2059919"
  },
  {
    "text": "trace or log with a metric and that allows you to move from a metric to an example of something that",
    "start": "2059919",
    "end": "2066800"
  },
  {
    "text": "matches the metric so it gives you a lot of context when you're troubleshooting to use exemplars",
    "start": "2066800",
    "end": "2072638"
  },
  {
    "text": "a really powerful thing for sure um i'll take another one for the live",
    "start": "2072639",
    "end": "2078398"
  },
  {
    "text": "audience i'm trying to go back and forth uh sure",
    "start": "2078399",
    "end": "2083799"
  },
  {
    "text": "sure so the question is does the operator work with service mesh like istio and in",
    "start": "2091280",
    "end": "2097680"
  },
  {
    "text": "that case do you not want to use the agent uh",
    "start": "2097680",
    "end": "2102880"
  },
  {
    "text": "so i've seen users use the built-in instrumentation for istio the challenges unless you",
    "start": "2102880",
    "end": "2110160"
  },
  {
    "text": "instrument the code the traces are very they're not much better than logs put it",
    "start": "2110160",
    "end": "2115359"
  },
  {
    "text": "that way and the issue is that the data being generated from service meshes",
    "start": "2115359",
    "end": "2121280"
  },
  {
    "text": "it's not going to create an end-to-end transaction you're just going to see what the service mesh is doing so you do",
    "start": "2121280",
    "end": "2127599"
  },
  {
    "text": "need to instrument your code and if you and there's auto instrumentation if you don't want to make code changes for many",
    "start": "2127599",
    "end": "2134480"
  },
  {
    "text": "languages uh and that's a good option uh but you do have to instrument your code and",
    "start": "2134480",
    "end": "2140720"
  },
  {
    "text": "therefore you need a collector and an agent in the case of jaeger",
    "start": "2140720",
    "end": "2145839"
  },
  {
    "text": "so there's no way around it if you want meaningful traces like the example that i that i showed you um",
    "start": "2145839",
    "end": "2153440"
  },
  {
    "text": "and i we've i've had uh end users at my company that have done that and they say why is the trace data so",
    "start": "2153440",
    "end": "2160480"
  },
  {
    "text": "boring it's like the same as a log message and i said well you've got to instrument the code or we're just going",
    "start": "2160480",
    "end": "2165760"
  },
  {
    "text": "to see what the service mesh is doing so there's no shortcut unfortunately with",
    "start": "2165760",
    "end": "2171760"
  },
  {
    "text": "service meshes and proxies and that kind of thing so",
    "start": "2171760",
    "end": "2177119"
  },
  {
    "text": "yeah sure uh i'll take one online i'm just kind of picking the top voted one uh",
    "start": "2177119",
    "end": "2184240"
  },
  {
    "text": "oh that was the top voted one so the next one down uh what's the expected memory or cpu",
    "start": "2184240",
    "end": "2191599"
  },
  {
    "text": "footprint of running agents's sidecars so the cpu is going to depend on the",
    "start": "2191599",
    "end": "2196960"
  },
  {
    "text": "throughput of what you're sending through the agent similar to the collector but the footprint on the",
    "start": "2196960",
    "end": "2202640"
  },
  {
    "text": "memory side should be very small it's a go binary it doesn't do much it's actually not a",
    "start": "2202640",
    "end": "2209359"
  },
  {
    "text": "super complex piece of technology at all similarly if you decide to use open",
    "start": "2209359",
    "end": "2215440"
  },
  {
    "text": "telemetry in that way you can run a strip down collector that doesn't have all the exporters and other",
    "start": "2215440",
    "end": "2222320"
  },
  {
    "text": "things in there there's a custom builder for open telemetry that lets you build your own distribution essentially it's",
    "start": "2222320",
    "end": "2229520"
  },
  {
    "text": "really simple to use and then you can create a really small collector and it shouldn't be using much",
    "start": "2229520",
    "end": "2237200"
  },
  {
    "text": "in terms of uh resources beyond what you're sending through it which is",
    "start": "2237200",
    "end": "2242400"
  },
  {
    "text": "obviously the the processing power that's that's really required there um",
    "start": "2242400",
    "end": "2249119"
  },
  {
    "text": "another question live anyone and i know i'm",
    "start": "2249119",
    "end": "2254320"
  },
  {
    "text": "kind of running out of time but all right you can go again",
    "start": "2254320",
    "end": "2261359"
  },
  {
    "text": "sure",
    "start": "2262160",
    "end": "2264400"
  },
  {
    "text": "um",
    "start": "2273040",
    "end": "2276040"
  },
  {
    "text": "sure so the question was that if you're running it across multiple regions and",
    "start": "2288320",
    "end": "2294320"
  },
  {
    "text": "you have multiple elastic search clusters the thing i said it doesn't support we don't really query across",
    "start": "2294320",
    "end": "2299760"
  },
  {
    "text": "them so you would have a single jaeger ui instance for each region and you can't really search",
    "start": "2299760",
    "end": "2306160"
  },
  {
    "text": "across them so unfortunately the answer today is we don't support it",
    "start": "2306160",
    "end": "2311440"
  },
  {
    "text": "it could definitely be built but it would be pretty hard to federate those queries and make the ui work the right",
    "start": "2311440",
    "end": "2317839"
  },
  {
    "text": "way uh there are there is work going on in open",
    "start": "2317839",
    "end": "2323440"
  },
  {
    "text": "search to to to do uh multi-cluster query it's actually was just released",
    "start": "2323440",
    "end": "2329040"
  },
  {
    "text": "recently in open search and so you'll have some capabilities there but it's uh",
    "start": "2329040",
    "end": "2336320"
  },
  {
    "text": "it's not something that's supported in the jaeger ui someone could contribute it but i would guess that's a pretty big",
    "start": "2336320",
    "end": "2342160"
  },
  {
    "text": "feature to build [Music] and i don't",
    "start": "2342160",
    "end": "2347680"
  },
  {
    "text": "really have a good recommendation around it my company we do something differently",
    "start": "2347680",
    "end": "2354880"
  },
  {
    "text": "where we allow you to create different sub accounts that point to different clusters and indexes",
    "start": "2354880",
    "end": "2362400"
  },
  {
    "text": "and we can search across those but we built a whole bunch of abstraction to make that happen it's part of our",
    "start": "2362400",
    "end": "2369119"
  },
  {
    "text": "platform but it would be really hard to contribute that because it's",
    "start": "2369119",
    "end": "2375200"
  },
  {
    "text": "it's uh it changes the way that all the back end works basically",
    "start": "2375200",
    "end": "2380960"
  },
  {
    "text": "but if you want to contribute something like that then you know by all means i think it would be a cool feature uh",
    "start": "2380960",
    "end": "2386960"
  },
  {
    "text": "there may already be an open issue on it but feel free to suggest it in the channel and if it's something that you're",
    "start": "2386960",
    "end": "2393280"
  },
  {
    "text": "looking for so uh i mean i'll keep going until someone",
    "start": "2393280",
    "end": "2398400"
  },
  {
    "text": "cuts me off i'm over though well i think bartek's talk is uh is",
    "start": "2398400",
    "end": "2403520"
  },
  {
    "text": "starting actually there's a little bit of time i'll i'll answer one more before i call it um",
    "start": "2403520",
    "end": "2410800"
  },
  {
    "text": "so here's a good one because i like app decks uh kenya sorry",
    "start": "2410800",
    "end": "2416480"
  },
  {
    "text": "okay this is the last one uh can jager uh plus atm generate app deck scores so",
    "start": "2416480",
    "end": "2423760"
  },
  {
    "text": "aptx is an interesting way of trying to summarize user frustration or how well your application is performing it's not",
    "start": "2423760",
    "end": "2431280"
  },
  {
    "text": "something that's supported but it could easily be added to the to the to the metrics processor that's there or",
    "start": "2431280",
    "end": "2438000"
  },
  {
    "text": "you could actually make a different uh a different one to do that so it's a good idea",
    "start": "2438000",
    "end": "2443680"
  },
  {
    "text": "i think but not something that's supported today um and so i'm going to wrap it up but",
    "start": "2443680",
    "end": "2449680"
  },
  {
    "text": "thanks for attending and it's good to see everyone again and come and join us in the jaeger",
    "start": "2449680",
    "end": "2456240"
  },
  {
    "text": "channel and appreciate everyone showing up thanks again [Music] [Applause]",
    "start": "2456240",
    "end": "2465058"
  }
]