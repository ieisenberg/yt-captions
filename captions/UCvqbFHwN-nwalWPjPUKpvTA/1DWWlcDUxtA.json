[
  {
    "start": "0",
    "end": "67000"
  },
  {
    "text": "to start off with we would like to give you a little bit of context into the motivations behind coop control apply",
    "start": "979",
    "end": "7740"
  },
  {
    "text": "and some of the decisions that went into its implementation kubernetes is a",
    "start": "7740",
    "end": "14250"
  },
  {
    "text": "declarative system but that declarative system is primarily managed through",
    "start": "14250",
    "end": "19260"
  },
  {
    "text": "imperative API Slyke create update delete and patch and lots of users",
    "start": "19260",
    "end": "25080"
  },
  {
    "text": "wanted a more declarative way to manage their clusters by defining a local state",
    "start": "25080",
    "end": "30960"
  },
  {
    "text": "and running something to push that state into a cluster so could control apply",
    "start": "30960",
    "end": "38250"
  },
  {
    "text": "was written to do just that you will have a directory of resource configuration and when you run can",
    "start": "38250",
    "end": "45480"
  },
  {
    "text": "control apply your declarative configuration will be transformed into imperative requests that will get sent",
    "start": "45480",
    "end": "51780"
  },
  {
    "text": "to the cluster to enact your desired state wage any declarative management of",
    "start": "51780",
    "end": "58469"
  },
  {
    "text": "kubernetes resources is such a thing even possible yes it is you might just",
    "start": "58469",
    "end": "69420"
  },
  {
    "start": "67000",
    "end": "126000"
  },
  {
    "text": "think that we could naively replace the state in the cluster with the users local state when applies run but that",
    "start": "69420",
    "end": "75390"
  },
  {
    "text": "doesn't actually work because the control plan is going to add some state of its own every time you make a request",
    "start": "75390",
    "end": "80610"
  },
  {
    "text": "for example when you create a service a cluster IP field is added that allows",
    "start": "80610",
    "end": "87570"
  },
  {
    "text": "your cluster IP to be known and if you",
    "start": "87570",
    "end": "93840"
  },
  {
    "text": "just naively replace the state in the cluster with the local state that field is going to get wiped out and that's not good and there are other fields besides",
    "start": "93840",
    "end": "101520"
  },
  {
    "text": "this one and they're set by admission plug-ins and web hooks and defaulting so",
    "start": "101520",
    "end": "107640"
  },
  {
    "text": "instead of sending a replace request we're going to do a patch and that's going to preserve those fields that we",
    "start": "107640",
    "end": "113280"
  },
  {
    "text": "don't know about and the patch is generated from the local state in the system the last applied state and also",
    "start": "113280",
    "end": "121170"
  },
  {
    "text": "the current live state in the cluster so",
    "start": "121170",
    "end": "127950"
  },
  {
    "start": "126000",
    "end": "285000"
  },
  {
    "text": "how are we going to generate that patch the first thing we need to do is to perform a DIF on the last applied state",
    "start": "127950",
    "end": "133890"
  },
  {
    "text": "and the current state in the users local environment and where can we get the",
    "start": "133890",
    "end": "139769"
  },
  {
    "text": "last supplied state from we made a decision with cube control apply to just add an annotation to every resource",
    "start": "139769",
    "end": "146609"
  },
  {
    "text": "that's being applied which is a copy of the entire resource configuration so not",
    "start": "146609",
    "end": "153209"
  },
  {
    "text": "sure if that was a good decision but it worked it works well so it works at least well enough at the time and now",
    "start": "153209",
    "end": "163170"
  },
  {
    "text": "that we have the diff we need to transform it into a patch request because the cluster doesn't accept a div",
    "start": "163170",
    "end": "168980"
  },
  {
    "text": "and we started out using a merge patch but we quickly realized that merge patch",
    "start": "168980",
    "end": "175189"
  },
  {
    "text": "wasn't expressive enough for the types of operations that Q control ply needed",
    "start": "175189",
    "end": "181230"
  },
  {
    "text": "to do to these resources for example you can't delete a list item indexed by a",
    "start": "181230",
    "end": "186480"
  },
  {
    "text": "key field with the merge patch so we created a new patch format strategic",
    "start": "186480",
    "end": "191760"
  },
  {
    "text": "merge patch which you've probably heard of and it's just like a merge patch but there are some imperative merge",
    "start": "191760",
    "end": "199859"
  },
  {
    "text": "instructions that are on put on top of that merge patch that tell the cluster",
    "start": "199859",
    "end": "206489"
  },
  {
    "text": "more specifically how to update the object and as we found more people using",
    "start": "206489",
    "end": "212819"
  },
  {
    "text": "apply we noticed that there were other cases that weren't covered by our patch",
    "start": "212819",
    "end": "217980"
  },
  {
    "text": "format and we've just added more and more of these imperative patch directives and it got really complicated",
    "start": "217980",
    "end": "225030"
  },
  {
    "text": "to make a strategic merge patch and so tools that wanted to benefit from the",
    "start": "225030",
    "end": "230970"
  },
  {
    "text": "apply workflow would just exec out to cube control apply to get the same",
    "start": "230970",
    "end": "236639"
  },
  {
    "text": "behavior and this is not the best situation because all the tools are",
    "start": "236639",
    "end": "242099"
  },
  {
    "text": "going to have different versions of coop control apply and the behavior is not going to be consistent at all and the",
    "start": "242099",
    "end": "247620"
  },
  {
    "text": "version of coop control apply being run really matters because some of these patch directives are set depending on",
    "start": "247620",
    "end": "254879"
  },
  {
    "text": "the version of the client and some of them are set depending on the version of the server implicitly one",
    "start": "254879",
    "end": "262170"
  },
  {
    "text": "it receives the request so the behavior of apply is going to depend on both the",
    "start": "262170",
    "end": "267180"
  },
  {
    "text": "version of the client and the server and not even all combinations of these versions are supported so it's not a",
    "start": "267180",
    "end": "273900"
  },
  {
    "text": "good situation yo dawg i heard you like dipping on I don't like dipping oh let's come up with a new solution",
    "start": "273900",
    "end": "280770"
  },
  {
    "text": "then okay so what Jenny just finished",
    "start": "280770",
    "end": "288900"
  },
  {
    "start": "285000",
    "end": "527000"
  },
  {
    "text": "talking about is challenges when you're trying to take the resource config for",
    "start": "288900",
    "end": "294630"
  },
  {
    "text": "one resource and push those changes into the cluster there's another set of",
    "start": "294630",
    "end": "300660"
  },
  {
    "text": "challenges with declarative application management which is about the authoring of the resource config itself so the",
    "start": "300660",
    "end": "307080"
  },
  {
    "text": "vision is that users can author all their all their config declaratively put",
    "start": "307080",
    "end": "312150"
  },
  {
    "text": "it in this nice directory you can write to control apply on that directory and it will just magically make the",
    "start": "312150",
    "end": "319020"
  },
  {
    "text": "resources appear in the cluster right if they need to be created it will create them if they need to be updated it will update them and if you change those",
    "start": "319020",
    "end": "325290"
  },
  {
    "text": "resources then it just gets pushed so there are actually a couple challenges",
    "start": "325290",
    "end": "331260"
  },
  {
    "text": "with this the first is around config Maps and secrets so config maps and secrets are",
    "start": "331260",
    "end": "338070"
  },
  {
    "text": "oftentimes derived from some other source of truth the secret is really comes from some key file the config map",
    "start": "338070",
    "end": "346560"
  },
  {
    "text": "may come from some environment file and so what a user wants to do is change the",
    "start": "346560",
    "end": "352290"
  },
  {
    "text": "environment file or the key file and then have that pushed into the cluster they don't want to necessarily write a",
    "start": "352290",
    "end": "358290"
  },
  {
    "text": "script that then regenerates all the resources and before doing the declarative steps another challenge is",
    "start": "358290",
    "end": "366000"
  },
  {
    "text": "when you push a config map or secret change to actually consumed by pods and",
    "start": "366000",
    "end": "372150"
  },
  {
    "text": "those pods might consume it as environment variables whereas command-line arguments and pushing that",
    "start": "372150",
    "end": "378540"
  },
  {
    "text": "config map or secret change doesn't necessarily do anything to those pods and so you won't see that change",
    "start": "378540",
    "end": "384750"
  },
  {
    "text": "reflected right and what music the way",
    "start": "384750",
    "end": "389880"
  },
  {
    "text": "users are used to rolling out changes to deployments for instance as they push a change to the image or",
    "start": "389880",
    "end": "395990"
  },
  {
    "text": "something like this and they need to get a nice rolling update new pods are started health checked and then the",
    "start": "395990",
    "end": "403639"
  },
  {
    "text": "rollout progresses right instead of kind of an all at one shot so what did we",
    "start": "403639",
    "end": "411800"
  },
  {
    "text": "tell users to do well one recommendation we gave is create a new config map a new secret when you",
    "start": "411800",
    "end": "418130"
  },
  {
    "text": "make changes those files right and so now you change your deployments to point to those new config maps and new secrets",
    "start": "418130",
    "end": "423560"
  },
  {
    "text": "right and then you actually get a rolling update because there is a change to the deployment itself so this is",
    "start": "423560",
    "end": "432949"
  },
  {
    "text": "actually just really easy not impaired at all you just write these imperative scripts to regenerate these things use",
    "start": "432949",
    "end": "439160"
  },
  {
    "text": "the hash suffix flag to make sure you get a unique name each time go find everywhere you reference those things",
    "start": "439160",
    "end": "444979"
  },
  {
    "text": "and then make sure you update them and go and apply right so actually does start to look pretty imperative another",
    "start": "444979",
    "end": "454220"
  },
  {
    "text": "issue has to do with metadata and in fields that are set across many",
    "start": "454220",
    "end": "459289"
  },
  {
    "text": "resources and a common desire is to perhaps set an annotation across a collection of resources where all those",
    "start": "459289",
    "end": "466849"
  },
  {
    "text": "resources are part of a single release and you want to annotate them with release and you don't want to go update",
    "start": "466849",
    "end": "473240"
  },
  {
    "text": "every single resource file you just want to update one place that says here's the new annotation labels are similar to",
    "start": "473240",
    "end": "480110"
  },
  {
    "text": "this and and especially namespaces right if you have a collection of resources",
    "start": "480110",
    "end": "485150"
  },
  {
    "text": "that you know what you want to go into the same rese namespace like services that prefer to pause from deployments",
    "start": "485150",
    "end": "491330"
  },
  {
    "text": "you don't want to have the possibility of introducing this error where you leave the namespace off one but not the",
    "start": "491330",
    "end": "496820"
  },
  {
    "text": "other or you copy and pasted one that have the namespace set to a different thing right this is just a way of introducing air into your system and so",
    "start": "496820",
    "end": "504410"
  },
  {
    "text": "there was the - in flag introduced a coop control apply so this allowed you to apply a set of resources to a single",
    "start": "504410",
    "end": "511310"
  },
  {
    "text": "namespace but that data isn't captured declaratively anymore it exists in some script some other place right and so if",
    "start": "511310",
    "end": "517610"
  },
  {
    "text": "you just look at the resource config that may be checked in to get where these things actually getting applied well you have to look someplace else",
    "start": "517610",
    "end": "525669"
  },
  {
    "start": "527000",
    "end": "605000"
  },
  {
    "text": "so what do we decide to do we recognize that there's two parts of this problem",
    "start": "530320",
    "end": "536360"
  },
  {
    "text": "one part of the problem is about taking a single resource pushing updates into a cluster for that single resource the",
    "start": "536360",
    "end": "542750"
  },
  {
    "text": "complexity surrounding that the ability for other tools and controllers and",
    "start": "542750",
    "end": "548510"
  },
  {
    "text": "other systems to take advantage of that logic rather than a single resource basis a second problem was about users",
    "start": "548510",
    "end": "556760"
  },
  {
    "text": "actually managing their resource config declaratively right and and how can they",
    "start": "556760",
    "end": "562000"
  },
  {
    "text": "do updates to secrets and do updates to config maps and Express this higher-level logic that we've already",
    "start": "562000",
    "end": "569510"
  },
  {
    "text": "put into coop control as imperative commands so we already know that users",
    "start": "569510",
    "end": "574640"
  },
  {
    "text": "want high-level access to this sort of stuff but we haven't provided a nice mechanism from the declarative way I was",
    "start": "574640",
    "end": "583940"
  },
  {
    "text": "thinking of a third project could we use the elder sign in this logo as our new",
    "start": "583940",
    "end": "590630"
  },
  {
    "text": "logo no I really like the COO be cuttlefish that we have today I thought",
    "start": "590630",
    "end": "595670"
  },
  {
    "text": "it was brown CTL fish well you can pronounce in CTL fish cuttlefish or",
    "start": "595670",
    "end": "600770"
  },
  {
    "text": "control fish actually okay so for the",
    "start": "600770",
    "end": "606710"
  },
  {
    "start": "605000",
    "end": "704000"
  },
  {
    "text": "first of those projects what did we change in server and client relationship we used to require a client that wanted",
    "start": "606710",
    "end": "614330"
  },
  {
    "text": "to use the supply operation to maintain a last applied configuration annotation",
    "start": "614330",
    "end": "621080"
  },
  {
    "text": "and to do some client-side dipping and to generate a complicated strategic",
    "start": "621080",
    "end": "626660"
  },
  {
    "text": "merge patch request and in practice no one was doing that implementation themselves they would just exec out to",
    "start": "626660",
    "end": "633080"
  },
  {
    "text": "coop control ply and it caused lots of problems that we already talked about so",
    "start": "633080",
    "end": "639080"
  },
  {
    "text": "instead of that we decided to develop a new API endpoint for apply that would natively speak the language of",
    "start": "639080",
    "end": "645050"
  },
  {
    "text": "kubernetes resources and understand the specific quirks of each resource type",
    "start": "645050",
    "end": "651130"
  },
  {
    "text": "this way instead of the client doing lots of work on its side you can just",
    "start": "651130",
    "end": "657440"
  },
  {
    "text": "send you can just send your configuration for a single resource directly to the server",
    "start": "657440",
    "end": "663180"
  },
  {
    "text": "and it will understand what you intended to change and instead of you managing",
    "start": "663180",
    "end": "668430"
  },
  {
    "text": "that annotation the cluster is going to manage a new field called the manage fields in metadata that will keep track",
    "start": "668430",
    "end": "676590"
  },
  {
    "text": "of the last user to update each field in the object so by moving all this work",
    "start": "676590",
    "end": "683610"
  },
  {
    "text": "and logic into the server it allows tools besides cube control and controllers now to take advantage of",
    "start": "683610",
    "end": "690750"
  },
  {
    "text": "this workflow and have greater consistency between them since the",
    "start": "690750",
    "end": "696470"
  },
  {
    "text": "behavior only depends on the version of the server and a moving applied to the",
    "start": "696470",
    "end": "707040"
  },
  {
    "start": "704000",
    "end": "830000"
  },
  {
    "text": "server we also found some other functionality of cube control apply that was more natural to be done in the",
    "start": "707040",
    "end": "713940"
  },
  {
    "text": "server than the client and one of those is dry run and dry run was a flag on cube control apply which told the client",
    "start": "713940",
    "end": "721590"
  },
  {
    "text": "to generate the patch request as normal and apply it locally to a copy of the",
    "start": "721590",
    "end": "727530"
  },
  {
    "text": "object that it had requested from the server at some point and earlier in the",
    "start": "727530",
    "end": "733020"
  },
  {
    "text": "process so this was pretty good it worked pretty well people could see what",
    "start": "733020",
    "end": "738450"
  },
  {
    "text": "was going to happen when they ran apply without it actually changing their clusters configuration but it wasn't",
    "start": "738450",
    "end": "745080"
  },
  {
    "text": "perfect and the reason is that the server actually changes your request before it gets committed to the storage",
    "start": "745080",
    "end": "752450"
  },
  {
    "text": "it has admission plug-ins and user-defined web hooks and also",
    "start": "752450",
    "end": "758340"
  },
  {
    "text": "defaulting that all change your resource before it gets committed so when we move",
    "start": "758340",
    "end": "764880"
  },
  {
    "text": "dry run to the server as a query parameter on all the modifying endpoints like create or patch or delete what we",
    "start": "764880",
    "end": "774930"
  },
  {
    "text": "found is that it's more accurate than it was when we did it on the client and",
    "start": "774930",
    "end": "780090"
  },
  {
    "text": "when we combined the apply endpoint with the dry run parameter it creates a more",
    "start": "780090",
    "end": "786870"
  },
  {
    "text": "accurate dipping tool cube control diff and that's going to you allow users to see exactly what's",
    "start": "786870",
    "end": "794380"
  },
  {
    "text": "going to change on the cluster the next time they run apply and so they won't have any surprises or unexpected changes",
    "start": "794380",
    "end": "801940"
  },
  {
    "text": "to their cluster and the last thing we changed is those implicit patch directives that the server sets on the",
    "start": "801940",
    "end": "809560"
  },
  {
    "text": "patches that you send are being replaced by a more declarative structure that is",
    "start": "809560",
    "end": "816850"
  },
  {
    "text": "defined for the schema of the resource and it's useful for things besides cube control apply now too",
    "start": "816850",
    "end": "822490"
  },
  {
    "text": "it's useful for CRD field pruning and different okay so now what did we do on",
    "start": "822490",
    "end": "835150"
  },
  {
    "start": "830000",
    "end": "1085000"
  },
  {
    "text": "the client side to address the challenges with authoring the config so",
    "start": "835150",
    "end": "841960"
  },
  {
    "text": "we came up with a new declarative file and this is a meta resource that isn't",
    "start": "841960",
    "end": "847510"
  },
  {
    "text": "actually applied itself to the cluster but describes how to apply resources right in the the coop config file that",
    "start": "847510",
    "end": "853330"
  },
  {
    "text": "describes how to talk to a cluster is another example of something like this",
    "start": "853330",
    "end": "858750"
  },
  {
    "text": "and so what I've shown here is part of a customization EML file and so the first",
    "start": "858990",
    "end": "865900"
  },
  {
    "text": "thing we did is well we put on generators for the secrets in config",
    "start": "865900",
    "end": "870970"
  },
  {
    "text": "maps and so what you can see here on the slide is the first entry is about how to",
    "start": "870970",
    "end": "877210"
  },
  {
    "text": "generate the config map and so what this directive says is generate a config map",
    "start": "877210",
    "end": "882730"
  },
  {
    "text": "with the base name app - config from an environment variable or an environment",
    "start": "882730",
    "end": "887920"
  },
  {
    "text": "file with the same name for each line in that file go create a new data entry and",
    "start": "887920",
    "end": "894460"
  },
  {
    "text": "so those can be used as environment variables and as flags from the pods so",
    "start": "894460",
    "end": "903280"
  },
  {
    "text": "when you change that M file it will then generate a new secret with a new name",
    "start": "903280",
    "end": "908980"
  },
  {
    "text": "and it does this by applying a suffix unique suffix to the name of the config map it generates so the deployments and",
    "start": "908980",
    "end": "919540"
  },
  {
    "text": "the staple sets and the different workloads that went to consume this",
    "start": "919540",
    "end": "924610"
  },
  {
    "text": "config map can do so referring to that app name right the app - config name and",
    "start": "924610",
    "end": "933420"
  },
  {
    "text": "then customize because it's schema where and it knows what a reference to a secret looks like and it knows what a",
    "start": "933420",
    "end": "939070"
  },
  {
    "text": "reference to a config map looks like and because it has a visible view into all of the resources that are being",
    "start": "939070",
    "end": "945790"
  },
  {
    "text": "customized it can go then change the references to those right and so it can",
    "start": "945790",
    "end": "951640"
  },
  {
    "text": "substitute the app - config name with the hash suffix name right and so this",
    "start": "951640",
    "end": "957700"
  },
  {
    "text": "allows you to get that rolling update behavior that would kind of been asking users to manually do the second entry is",
    "start": "957700",
    "end": "965470"
  },
  {
    "text": "for a secret this is very similar to a config map it looks basically the same but generates secrets and in this case",
    "start": "965470",
    "end": "971440"
  },
  {
    "text": "it generates a TLS secret from a couple files the ways you can generate config",
    "start": "971440",
    "end": "978160"
  },
  {
    "text": "maps and secrets actually looks really similar to the ways you can do them imperative Lee with the KU control create secret KU control create config",
    "start": "978160",
    "end": "984519"
  },
  {
    "text": "map commands where those commands allow you to specify literals specify files or",
    "start": "984519",
    "end": "991660"
  },
  {
    "text": "m-files the declarative commands lie to do the same thing lower down on the",
    "start": "991660",
    "end": "997990"
  },
  {
    "text": "customization Yama file you'll see a resources section and so what this is about is numerating the resources that",
    "start": "997990",
    "end": "1005550"
  },
  {
    "text": "you want to apply instead of applying a directory recursively right where you",
    "start": "1005550",
    "end": "1011670"
  },
  {
    "text": "just kind of get whatever you get the happens to be in that directory the customize has a view into all the",
    "start": "1011670",
    "end": "1017399"
  },
  {
    "text": "resources that it's going to work with and this allows it to go and find which resources refer to these config maps and",
    "start": "1017399",
    "end": "1024030"
  },
  {
    "text": "then go and update them and transform them before they're actually sent to the cluster the last piece on the slide is",
    "start": "1024030",
    "end": "1033380"
  },
  {
    "text": "this thing called bases bases are about factoring config into multiple modules",
    "start": "1033380",
    "end": "1039000"
  },
  {
    "text": "right whereas before you might have several different directories if resource config and you pass each one",
    "start": "1039000",
    "end": "1044520"
  },
  {
    "text": "with a dash F flag to apply and that's how you get separating the resource",
    "start": "1044520",
    "end": "1050100"
  },
  {
    "text": "config in two different sections here you can just have a single target and that target will refer to other bases",
    "start": "1050100",
    "end": "1057419"
  },
  {
    "text": "and those other our customization amell's I didn't so you can refer to a base which generates",
    "start": "1057419",
    "end": "1063510"
  },
  {
    "text": "the secret or generates a config map or has its own list of resources and so you can begin to compose these things together declaratively the setup of the",
    "start": "1063510",
    "end": "1071039"
  },
  {
    "text": "command-line be careful I heard that time flows 20 times slower",
    "start": "1071039",
    "end": "1076169"
  },
  {
    "text": "in bases yeah well most of that time is spent cloning and get repo some of you",
    "start": "1076169",
    "end": "1087570"
  },
  {
    "start": "1085000",
    "end": "1280000"
  },
  {
    "text": "actually get that joke too the second",
    "start": "1087570",
    "end": "1092809"
  },
  {
    "text": "piece of the authoring piece that we were trying to address was about these",
    "start": "1092809",
    "end": "1098820"
  },
  {
    "text": "kind of meta level transformations right certain best practices around applying",
    "start": "1098820",
    "end": "1104010"
  },
  {
    "text": "labels applying annotations putting things in namespaces we tell users to do",
    "start": "1104010",
    "end": "1109320"
  },
  {
    "text": "it but we didn't make it easy for them right so how can we make it easy for them",
    "start": "1109320",
    "end": "1114899"
  },
  {
    "text": "declaratively so you can see that we now have a top-level field called namespace",
    "start": "1114899",
    "end": "1121470"
  },
  {
    "text": "right in now right in the alright should",
    "start": "1121470",
    "end": "1136620"
  },
  {
    "text": "we go to that if you go to that that's a good excuse now as I was saying",
    "start": "1136620",
    "end": "1145970"
  },
  {
    "text": "the namespace is now a field you can specify declaratively right so someone",
    "start": "1145970",
    "end": "1150980"
  },
  {
    "text": "looking at this yam will config can look at okay here's the resources that are being applied here's the bases that are",
    "start": "1150980",
    "end": "1157670"
  },
  {
    "text": "being pulled in and here's the namespace this stuff is going into if you add a",
    "start": "1157670",
    "end": "1162830"
  },
  {
    "text": "new resource in there you don't have to worry about did I update the namespace or did I screw it up the second pieces",
    "start": "1162830",
    "end": "1172550"
  },
  {
    "text": "are round labels and annotations are Oh name prefix so another common pattern actually is for users to have some",
    "start": "1172550",
    "end": "1180290"
  },
  {
    "text": "naming convention around their apps right you may want all your dev resources to have the dev - prefix names",
    "start": "1180290",
    "end": "1186730"
  },
  {
    "text": "or you may want your progress sources tab the prod - name prefix alright and",
    "start": "1186730",
    "end": "1193460"
  },
  {
    "text": "this can make it easier just to look at a resource and say yes I know this is a Deborah and I immediately without having",
    "start": "1193460",
    "end": "1198800"
  },
  {
    "text": "to go look at what namespaces is in or what labels are on it right and if someone happens to be manually deleting",
    "start": "1198800",
    "end": "1205220"
  },
  {
    "text": "something with cout control delete and in the wrong namespace then they don't accidentally delete your prod one",
    "start": "1205220",
    "end": "1210410"
  },
  {
    "text": "because it happens to have the exact same name as your dev one or something like that so this was kind of a fun new",
    "start": "1210410",
    "end": "1217910"
  },
  {
    "text": "feature we introduced the others our annotations and labels the annotations",
    "start": "1217910",
    "end": "1224090"
  },
  {
    "text": "it's exactly what you'd expect you specify top level annotations and then it will apply it to all the",
    "start": "1224090",
    "end": "1230000"
  },
  {
    "text": "resources and the labels similarly get applied to all the resources but they",
    "start": "1230000",
    "end": "1236360"
  },
  {
    "text": "also get applied to the selectors and the labels of the pod templates and so",
    "start": "1236360",
    "end": "1244100"
  },
  {
    "text": "this allows you to define like top-level wiring across all the resources in your project you do have to be careful with",
    "start": "1244100",
    "end": "1250940"
  },
  {
    "text": "this because it does apply to selectors and certain resources like deployments",
    "start": "1250940",
    "end": "1256640"
  },
  {
    "text": "don't allow you to change selectors after the deployment is created right and changing selectors arbitrarily can",
    "start": "1256640",
    "end": "1264860"
  },
  {
    "text": "have odd side effects these transformers are great but aren't they really just",
    "start": "1264860",
    "end": "1271040"
  },
  {
    "text": "workflow optimists actually I think they're Optimus Prime",
    "start": "1271040",
    "end": "1276710"
  },
  {
    "text": "is a shion's these jokes are going way",
    "start": "1276710",
    "end": "1282680"
  },
  {
    "text": "better than I thought they were gonna go of it I thought it would be crickets every tune we had a whole series of jokes to make fun of how silent everyone",
    "start": "1282680",
    "end": "1288410"
  },
  {
    "text": "was gonna be alright so you might think from what we told you that this is a",
    "start": "1288410",
    "end": "1293870"
  },
  {
    "text": "solved problem and there's nothing left to work on but in 2020 we have a few areas that we still plan to improve and",
    "start": "1293870",
    "end": "1301760"
  },
  {
    "text": "one of those is pruning what pruning means is if you apply with a resource in your directory once and then apply again",
    "start": "1301760",
    "end": "1308840"
  },
  {
    "text": "with that resource missing from your directory and you specified pruning that the resource should be deleted from the",
    "start": "1308840",
    "end": "1315140"
  },
  {
    "text": "cluster so we have something like this already but we still want to extend it",
    "start": "1315140",
    "end": "1321470"
  },
  {
    "text": "to support deleting created config Maps and secrets another thing we want to do",
    "start": "1321470",
    "end": "1327020"
  },
  {
    "text": "is to support the cube control apply blocking on the status of the resource being created so when you apply a",
    "start": "1327020",
    "end": "1334610"
  },
  {
    "text": "deployment to update the image the request is going to complete before the image has been fully rolled out to all",
    "start": "1334610",
    "end": "1341420"
  },
  {
    "text": "of the replicas and this is the intended behavior you can check the status of the",
    "start": "1341420",
    "end": "1346940"
  },
  {
    "text": "deployment yourself to see if it's been fully rolled out but some users might want to have a blocking cube control",
    "start": "1346940",
    "end": "1353090"
  },
  {
    "text": "apply request so that they can be sure that their changes have fully propagated and we don't just want to support this",
    "start": "1353090",
    "end": "1359330"
  },
  {
    "text": "for built-in types like deployments we really need this to work for CR DS as well so we'll need some mechanism for",
    "start": "1359330",
    "end": "1366320"
  },
  {
    "text": "CRD authors to define which fields in their in their status are blocking and",
    "start": "1366320",
    "end": "1372980"
  },
  {
    "text": "what values should be waited for finally",
    "start": "1372980",
    "end": "1380920"
  },
  {
    "text": "some other interesting things that we're gonna be working on are around how we develop the CLI tools themselves today",
    "start": "1380920",
    "end": "1388280"
  },
  {
    "text": "we're kind of in this weird state where customizes and actually a separate repo the code for customize was built in a",
    "start": "1388280",
    "end": "1395120"
  },
  {
    "text": "criminai SIG's repo cout control still in the main repo and the reason we did",
    "start": "1395120",
    "end": "1400520"
  },
  {
    "text": "customize is a separate repo was because we wanted to be able to get user feedback quickly and address it and",
    "start": "1400520",
    "end": "1406130"
  },
  {
    "text": "experiment with is it possible to actually build something outside of kubernetes kubernetes for a long time it",
    "start": "1406130",
    "end": "1411680"
  },
  {
    "text": "was like can we actually split up the model repo and this was kind of a chance to see if we could and it did have some",
    "start": "1411680",
    "end": "1419390"
  },
  {
    "text": "nice things as a result we were able to get feedback from users who could",
    "start": "1419390",
    "end": "1425780"
  },
  {
    "text": "actually take build of customize and then make changes and then push a new",
    "start": "1425780",
    "end": "1430850"
  },
  {
    "text": "build within two weeks and get more feedback right and that worked out nicer than a three-month release cycle right",
    "start": "1430850",
    "end": "1438710"
  },
  {
    "text": "where it's a lot harder there were challenges around getting that code back",
    "start": "1438710",
    "end": "1444350"
  },
  {
    "text": "in the coop control as was all of it being outside the main repo and we had to do some fund engineering tricks to",
    "start": "1444350",
    "end": "1450590"
  },
  {
    "text": "get around various vending cycles we",
    "start": "1450590",
    "end": "1455990"
  },
  {
    "text": "actually want to move to control outside the main repo this has been something that we have been trying to do for about two years and it has been a massive task",
    "start": "1455990",
    "end": "1464270"
  },
  {
    "text": "that I think is harder than anyone expected it to be and burned out a lot of maintainer x' people have moved off a",
    "start": "1464270",
    "end": "1470180"
  },
  {
    "text": "bit but we're very close today and it's going to move into something called the staging directory and then we firmly",
    "start": "1470180",
    "end": "1477530"
  },
  {
    "text": "believe despite other people saying it's impossible that we will move it into its",
    "start": "1477530",
    "end": "1482750"
  },
  {
    "text": "own cupen jewelry PO one of the reasons this is important is that today kou",
    "start": "1482750",
    "end": "1489080"
  },
  {
    "text": "control is built alongside the cluster as part of the same release right and so when we test coop control we bring up",
    "start": "1489080",
    "end": "1495890"
  },
  {
    "text": "the cluster the same code in the cluster or bringing up a cluster with the same",
    "start": "1495890",
    "end": "1501410"
  },
  {
    "text": "code as coop control at the same release and then get to test them against one another right and then we have this",
    "start": "1501410",
    "end": "1508010"
  },
  {
    "text": "other separate version skew testing thing as a separate entity in reality",
    "start": "1508010",
    "end": "1513590"
  },
  {
    "text": "when users actually consume to control they typically download it independently",
    "start": "1513590",
    "end": "1519140"
  },
  {
    "text": "of the cluster like the clusters over here in coop controls locally over here or it's in a container over there so",
    "start": "1519140",
    "end": "1525920"
  },
  {
    "text": "that means your version of coop control is probably not always matching the version of the cluster right and you're",
    "start": "1525920",
    "end": "1531860"
  },
  {
    "text": "either one version behind or one version ahead and you'll encounter Funston things with",
    "start": "1531860",
    "end": "1539490"
  },
  {
    "text": "ghosts serialization for instance where certain fields get dropped when you serialize them and around tripping and",
    "start": "1539490",
    "end": "1545220"
  },
  {
    "text": "so this actually there's a lot of challenges around supporting version skew between these things and by moving",
    "start": "1545220",
    "end": "1550860"
  },
  {
    "text": "who control out into its own repo it becomes much more obvious that it's",
    "start": "1550860",
    "end": "1556169"
  },
  {
    "text": "decoupled on a separate release cycle and therefore we have to make very intentional decisions about how we are",
    "start": "1556169",
    "end": "1561840"
  },
  {
    "text": "going to support multiple kubernetes releases and how we're going to test and",
    "start": "1561840",
    "end": "1567450"
  },
  {
    "text": "validate that stuff hey woody would you say that in 2020 apply will boldly go",
    "start": "1567450",
    "end": "1573210"
  },
  {
    "text": "wait no Jenny that's that's Star Trek and it's a snow Star Trek name-o applied",
    "start": "1573210",
    "end": "1580110"
  },
  {
    "text": "to infinity and beyond yeah nailed it",
    "start": "1580110",
    "end": "1584360"
  },
  {
    "start": "1588000",
    "end": "1664000"
  },
  {
    "text": "alright so finally getting to questions what Jenny and I have done is talked at",
    "start": "1588889",
    "end": "1594419"
  },
  {
    "text": "a very high level about it's funny",
    "start": "1594419",
    "end": "1600029"
  },
  {
    "text": "because it's true we've talked about a high level about where cou control apply",
    "start": "1600029",
    "end": "1609179"
  },
  {
    "text": "came from many of the challenges users we're encountering kind of how we worked around them in the short term and the",
    "start": "1609179",
    "end": "1615510"
  },
  {
    "text": "guidance we gave to users and then how we try to look at those challenges and figure out what can we do to address",
    "start": "1615510",
    "end": "1621659"
  },
  {
    "text": "them but if you really want to take advantage of this stuff you'll probably",
    "start": "1621659",
    "end": "1627450"
  },
  {
    "text": "want to take a look at the documentation linked here and begin playing with them hands on when you say questions do we",
    "start": "1627450",
    "end": "1635940"
  },
  {
    "text": "get to ask them questions or are they just asking us questions so I thought we'd do like a Jeopardy thing where they give us questions in the form of answers",
    "start": "1635940",
    "end": "1642600"
  },
  {
    "text": "and we give them answers in the form of questions oh okay so I'll take kubernetes trivia",
    "start": "1642600",
    "end": "1648720"
  },
  {
    "text": "for 200 Alex the answer is coop control how do you pronounce the kubernetes CLA",
    "start": "1648720",
    "end": "1657080"
  },
  {
    "text": "all right",
    "start": "1659049",
    "end": "1662320"
  },
  {
    "text": "all right if there's one thing we've learned it's hard to pronounce QC TL and I just did it wrong",
    "start": "1673130",
    "end": "1678190"
  },
  {
    "text": "alright any questions for hey aside from",
    "start": "1678190",
    "end": "1690590"
  },
  {
    "text": "the whole customers getting into main line and the arguments that cost what",
    "start": "1690590",
    "end": "1696049"
  },
  {
    "text": "lessons did the customers team take from helm which already does a lot of what",
    "start": "1696049",
    "end": "1703220"
  },
  {
    "text": "customize does how can you show people that you know those lessons were already",
    "start": "1703220",
    "end": "1708830"
  },
  {
    "text": "like learned yeah great so the question",
    "start": "1708830",
    "end": "1715070"
  },
  {
    "start": "1713000",
    "end": "2093000"
  },
  {
    "text": "was what lessons did the customize team FRA learned from looking at helm and I",
    "start": "1715070",
    "end": "1722690"
  },
  {
    "text": "think of the two as complimentary the one of the big lessons was that the last",
    "start": "1722690",
    "end": "1736549"
  },
  {
    "text": "model of customization is hard with templating right how can a user a",
    "start": "1736549",
    "end": "1741559"
  },
  {
    "text": "templating is great like to have an abstraction with a set of knobs right",
    "start": "1741559",
    "end": "1746860"
  },
  {
    "text": "but then when someone wants to break through that abstraction are you able to break through it to the lower level",
    "start": "1746860",
    "end": "1753740"
  },
  {
    "text": "right and how easy is that right and that what we were looking at is how can",
    "start": "1753740",
    "end": "1761059"
  },
  {
    "text": "we enable that right and so that was actually done through this notion of patches which I didn't get a chance to",
    "start": "1761059",
    "end": "1767059"
  },
  {
    "text": "talk about but if you look at the way the API machinery will looks with",
    "start": "1767059",
    "end": "1772850"
  },
  {
    "text": "controllers and you look at the original patch logic for coop control apply one",
    "start": "1772850",
    "end": "1779450"
  },
  {
    "text": "of the mechanics was we generate like these were schema where and we able to generate patches and overlay this config",
    "start": "1779450",
    "end": "1785750"
  },
  {
    "text": "onto that config without having a notion of the whole thing right so like Jenny was saying the cluster IP how do we just",
    "start": "1785750",
    "end": "1792409"
  },
  {
    "text": "override this set of fields without blasting the custom cluster IP or these sorts of things right and so we looked",
    "start": "1792409",
    "end": "1801080"
  },
  {
    "text": "at we said actually we can provide kind of like arbitrary last-mile customers a using that exact same mechanic but",
    "start": "1801080",
    "end": "1807960"
  },
  {
    "text": "instead of applying a patch to the resource in the API server write a human",
    "start": "1807960",
    "end": "1813690"
  },
  {
    "text": "patching over a robot we can actually have a human patch over something written by another human on the",
    "start": "1813690",
    "end": "1820440"
  },
  {
    "text": "client-side so I think that's one of the lessons learned and I think Vicki classiest has done some talks on the",
    "start": "1820440",
    "end": "1828210"
  },
  {
    "text": "ways customizing helm can be used together to complement hi my question is",
    "start": "1828210",
    "end": "1851100"
  },
  {
    "text": "are you planning to make a secret generator in the customize pluggable so that we can support secret generally",
    "start": "1851100",
    "end": "1859200"
  },
  {
    "text": "like sealed secrets because we're trying to commit the secret in get so can do kids hops",
    "start": "1859200",
    "end": "1864260"
  },
  {
    "text": "I'm so glad you asked this question yes we actually are doing some things and",
    "start": "1864260",
    "end": "1871590"
  },
  {
    "text": "that are really exciting around just that we're planning on making every every sort of generator pluggable so",
    "start": "1871590",
    "end": "1879000"
  },
  {
    "text": "it's not just secret generators it's not just config maps but to actually allow users to generate arbitrary objects and",
    "start": "1879000",
    "end": "1886890"
  },
  {
    "text": "do arbitrary transformations right if you look at the architecture of this it's general it's just about how do I",
    "start": "1886890",
    "end": "1892590"
  },
  {
    "text": "have a high level generation of a couple objects and then how can I do some transformation of looking at the collect",
    "start": "1892590",
    "end": "1899100"
  },
  {
    "text": "total collection that's in early alpha right now and I think there's gonna be a lot of back-and-forth on what's the best",
    "start": "1899100",
    "end": "1905940"
  },
  {
    "text": "way of developing that in a way that we're able to allow the broader",
    "start": "1905940",
    "end": "1912270"
  },
  {
    "text": "ecosystem of tools to take advantage of it and allow them to maybe plug themselves into coop control more directly through possibly building",
    "start": "1912270",
    "end": "1919320"
  },
  {
    "text": "plugins but yes there's there's already actually an alpha ability to both do",
    "start": "1919320",
    "end": "1925050"
  },
  {
    "text": "just secret generation and then there's the ability to do arbitrary generation",
    "start": "1925050",
    "end": "1931800"
  },
  {
    "text": "of resources there's alpha as well thank you",
    "start": "1931800",
    "end": "1935960"
  },
  {
    "text": "[Applause] Hey so quick question now that we have",
    "start": "1947950",
    "end": "1954210"
  },
  {
    "text": "customized integrated and we have the keeps TL DIF ordinary any recommended",
    "start": "1954210",
    "end": "1960990"
  },
  {
    "text": "ways to so we're basically using the Hamill's from upstream you're not losing help and is there any dark heart to use",
    "start": "1960990",
    "end": "1969330"
  },
  {
    "text": "the cube secured if to auto-generate the differences between the upstream or how do you recommend staying close to",
    "start": "1969330",
    "end": "1976200"
  },
  {
    "text": "upstream iam was using chip steel different customized is there any recommendation so I think the question",
    "start": "1976200",
    "end": "1984030"
  },
  {
    "text": "was how that you are using upstream llamo files yeah and that you want to",
    "start": "1984030",
    "end": "1989880"
  },
  {
    "text": "get a diff between your local copy of those upstream llamo files are the changes between your copy and those",
    "start": "1989880",
    "end": "1995580"
  },
  {
    "text": "upstream ones yeah keep close to the obstacles and only have the patches in power people if",
    "start": "1995580",
    "end": "2002150"
  },
  {
    "text": "there is any way to automatically generate the patches which keep still different so you have a you've changed",
    "start": "2002150",
    "end": "2011240"
  },
  {
    "text": "enough if fort basically the llamo file is that what you say yeah we're cloning the upstream but we want to keep close",
    "start": "2011240",
    "end": "2018260"
  },
  {
    "text": "to the upstream with customize so one way of doing that is to actually use the",
    "start": "2018260",
    "end": "2023900"
  },
  {
    "text": "patching mechanism I described earlier it it kind of depends on on the",
    "start": "2023900",
    "end": "2028940"
  },
  {
    "text": "specifics of your environment and setup if you are trying to do something very simple like we want to use the upstream",
    "start": "2028940",
    "end": "2035090"
  },
  {
    "text": "but we want this one arbitrary field changed or this set of arbitrary fields change you can actually use a patch to",
    "start": "2035090",
    "end": "2041120"
  },
  {
    "text": "just not actually modify the source and so you can just look at that patch and",
    "start": "2041120",
    "end": "2046580"
  },
  {
    "text": "you can see these are the things I've changed from upstream without having to do it every base so that's that's one",
    "start": "2046580",
    "end": "2053149"
  },
  {
    "text": "approach if you are just taking a another yamo file and from some get repo and changing",
    "start": "2053150",
    "end": "2061100"
  },
  {
    "text": "it then maybe get diff is enough for you that case okay thanks so much I think",
    "start": "2061100",
    "end": "2069950"
  },
  {
    "text": "we're out of time but I think Philip and Jennifer will be around to talk more",
    "start": "2069950",
    "end": "2075169"
  },
  {
    "text": "yeah grab grab us outside in the hallway if you have any more questions okay thanks a lot for coming and thank you",
    "start": "2075169",
    "end": "2080540"
  },
  {
    "text": "jennifer and pip and again don't forget",
    "start": "2080540",
    "end": "2087618"
  },
  {
    "text": "to rate the session on shed calm",
    "start": "2087619",
    "end": "2092440"
  }
]