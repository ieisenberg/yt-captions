[
  {
    "text": "boom perfect awesome so how many of you",
    "start": "1360",
    "end": "5319"
  },
  {
    "text": "had a Mr",
    "start": "5319",
    "end": "7480"
  },
  {
    "text": "Softy all right Mr stof is gonna be here",
    "start": "7480",
    "end": "9800"
  },
  {
    "text": "till 3 so you guys have permission for a",
    "start": "9800",
    "end": "12840"
  },
  {
    "text": "second this is only once a year so I was",
    "start": "12840",
    "end": "16440"
  },
  {
    "text": "at a uh a close friend that I've been",
    "start": "16440",
    "end": "18800"
  },
  {
    "text": "playing soccer with for a few years um",
    "start": "18800",
    "end": "21359"
  },
  {
    "text": "and he had a big house party and uh this",
    "start": "21359",
    "end": "24039"
  },
  {
    "text": "was a I don't know a month ago and he",
    "start": "24039",
    "end": "26119"
  },
  {
    "text": "had Mr Softy there and I I I reached out",
    "start": "26119",
    "end": "30759"
  },
  {
    "text": "to Connor test test and said figure it",
    "start": "30759",
    "end": "33879"
  },
  {
    "text": "out make it happen we gotta have Mr",
    "start": "33879",
    "end": "35600"
  },
  {
    "text": "Softy so Conor pulled some magic um at",
    "start": "35600",
    "end": "39800"
  },
  {
    "text": "Google you can imagine we have a lot of",
    "start": "39800",
    "end": "41800"
  },
  {
    "text": "processing paperwork so Mr Softy is now",
    "start": "41800",
    "end": "44680"
  },
  {
    "text": "an approved I don't know or whatever",
    "start": "44680",
    "end": "47239"
  },
  {
    "text": "it's called here at Google and uh we",
    "start": "47239",
    "end": "49480"
  },
  {
    "text": "went through all that thankfully I don't",
    "start": "49480",
    "end": "51480"
  },
  {
    "text": "have to do any of that but uh Conor got",
    "start": "51480",
    "end": "54120"
  },
  {
    "text": "got Mr salty so definitely feel feel",
    "start": "54120",
    "end": "57120"
  },
  {
    "text": "encouraged to have at least one before",
    "start": "57120",
    "end": "60079"
  },
  {
    "text": "you leave test test okay for those who",
    "start": "60079",
    "end": "63359"
  },
  {
    "text": "don't know the great trick of Magic",
    "start": "63359",
    "end": "65040"
  },
  {
    "text": "Shell and Mr Softy is really easy to",
    "start": "65040",
    "end": "66799"
  },
  {
    "text": "replicate if you take two parts coconut",
    "start": "66799",
    "end": "69080"
  },
  {
    "text": "oil and three parts dark chocolate you",
    "start": "69080",
    "end": "71200"
  },
  {
    "text": "just melt them in a microwave and it",
    "start": "71200",
    "end": "72640"
  },
  {
    "text": "becomes Magic Shell and if you use",
    "start": "72640",
    "end": "74400"
  },
  {
    "text": "really good chocolate it becomes really",
    "start": "74400",
    "end": "76439"
  },
  {
    "text": "good Magic",
    "start": "76439",
    "end": "78520"
  },
  {
    "text": "Shell very good all right I think we're",
    "start": "78520",
    "end": "82200"
  },
  {
    "text": "ready to",
    "start": "82200",
    "end": "83479"
  },
  {
    "text": "go",
    "start": "83479",
    "end": "86280"
  },
  {
    "text": "awesome let's just verify that this",
    "start": "86280",
    "end": "88640"
  },
  {
    "text": "thing fcks it does as God and nature",
    "start": "88640",
    "end": "91920"
  },
  {
    "text": "intended wait it's not put in this is",
    "start": "91920",
    "end": "97320"
  },
  {
    "text": "it yes it is great",
    "start": "97320",
    "end": "102479"
  },
  {
    "text": "right lights",
    "start": "106960",
    "end": "110240"
  },
  {
    "text": "out I would can you cut the front lights",
    "start": "111040",
    "end": "113640"
  },
  {
    "text": "they're washing out",
    "start": "113640",
    "end": "116240"
  },
  {
    "text": "the thank",
    "start": "116240",
    "end": "118840"
  },
  {
    "text": "you",
    "start": "118840",
    "end": "121119"
  },
  {
    "text": "hey folks I'm Matt kandas and I'm Mike",
    "start": "121119",
    "end": "123680"
  },
  {
    "text": "crcll Welcome to our talk about protuff",
    "start": "123680",
    "end": "126399"
  },
  {
    "text": "Evolution this talk is meant to motivate",
    "start": "126399",
    "end": "129239"
  },
  {
    "text": "and give a sneak peek of the upcoming",
    "start": "129239",
    "end": "131599"
  },
  {
    "text": "work we're doing in the protuff",
    "start": "131599",
    "end": "133239"
  },
  {
    "text": "ecosystem Evolution for protuff is a",
    "start": "133239",
    "end": "136440"
  },
  {
    "text": "really highly dimensional thing so we're",
    "start": "136440",
    "end": "138840"
  },
  {
    "text": "going to try and split apart those",
    "start": "138840",
    "end": "140239"
  },
  {
    "text": "dimensions a little bit to give you a",
    "start": "140239",
    "end": "142160"
  },
  {
    "text": "more clear sense of what we're talking",
    "start": "142160",
    "end": "145200"
  },
  {
    "text": "about consider a very basic system what",
    "start": "145200",
    "end": "148760"
  },
  {
    "text": "are the entities that can evolve here",
    "start": "148760",
    "end": "151239"
  },
  {
    "text": "you have all three that can evolve",
    "start": "151239",
    "end": "153440"
  },
  {
    "text": "independently and this is the evolution",
    "start": "153440",
    "end": "155280"
  },
  {
    "text": "that Proto was really designed for from",
    "start": "155280",
    "end": "156840"
  },
  {
    "text": "the start this is what everyone thinks",
    "start": "156840",
    "end": "158360"
  },
  {
    "text": "about in their microservices right you",
    "start": "158360",
    "end": "160239"
  },
  {
    "text": "can add Fields you can Mark Old Fields",
    "start": "160239",
    "end": "162120"
  },
  {
    "text": "deprecated there's built-in handling of",
    "start": "162120",
    "end": "163879"
  },
  {
    "text": "unknown Fields this is the bread and",
    "start": "163879",
    "end": "166000"
  },
  {
    "text": "butter of the protuff",
    "start": "166000",
    "end": "168840"
  },
  {
    "text": "ecosystem all those wires between the",
    "start": "168840",
    "end": "170959"
  },
  {
    "text": "boxes are the protuff wire format let's",
    "start": "170959",
    "end": "173519"
  },
  {
    "text": "zoom in a bit and walk through an examp",
    "start": "173519",
    "end": "175560"
  },
  {
    "text": "a basic example of schema",
    "start": "175560",
    "end": "177640"
  },
  {
    "text": "Evolution we can start with the simple",
    "start": "177640",
    "end": "179519"
  },
  {
    "text": "master message here just a single string",
    "start": "179519",
    "end": "182000"
  },
  {
    "text": "field along with the wire format that",
    "start": "182000",
    "end": "184080"
  },
  {
    "text": "someone might get from",
    "start": "184080",
    "end": "185319"
  },
  {
    "text": "it first bite a z indicates field one",
    "start": "185319",
    "end": "189000"
  },
  {
    "text": "has length encoded content the second",
    "start": "189000",
    "end": "191120"
  },
  {
    "text": "bite 17 is the length of the string",
    "start": "191120",
    "end": "193159"
  },
  {
    "text": "field and then the rest of the bytes are",
    "start": "193159",
    "end": "195159"
  },
  {
    "text": "just the string contents but rather than",
    "start": "195159",
    "end": "198040"
  },
  {
    "text": "inflicting any more binary on you I'm",
    "start": "198040",
    "end": "200120"
  },
  {
    "text": "going to introduce you to a tool that we",
    "start": "200120",
    "end": "201720"
  },
  {
    "text": "developed for decoding wuff format in a",
    "start": "201720",
    "end": "204640"
  },
  {
    "text": "nicer",
    "start": "204640",
    "end": "206400"
  },
  {
    "text": "way this notation comes from the",
    "start": "206400",
    "end": "209000"
  },
  {
    "text": "protoscope tool and it's equivalent to",
    "start": "209000",
    "end": "211439"
  },
  {
    "text": "the byes I showed earlier it's just a",
    "start": "211439",
    "end": "213319"
  },
  {
    "text": "lot more readable you can see here that",
    "start": "213319",
    "end": "215400"
  },
  {
    "text": "field one has a string in it and the",
    "start": "215400",
    "end": "217360"
  },
  {
    "text": "contents of the",
    "start": "217360",
    "end": "218879"
  },
  {
    "text": "string now imagine that the client had a",
    "start": "218879",
    "end": "221640"
  },
  {
    "text": "newer schema for person that included an",
    "start": "221640",
    "end": "224200"
  },
  {
    "text": "address",
    "start": "224200",
    "end": "226040"
  },
  {
    "text": "field when this message comes to an old",
    "start": "226040",
    "end": "228360"
  },
  {
    "text": "version of the server the server will",
    "start": "228360",
    "end": "229840"
  },
  {
    "text": "see something like",
    "start": "229840",
    "end": "231480"
  },
  {
    "text": "this the server won't know about the",
    "start": "231480",
    "end": "233519"
  },
  {
    "text": "address field but protuff has semantics",
    "start": "233519",
    "end": "235840"
  },
  {
    "text": "for unknown Fields baked into it it'll",
    "start": "235840",
    "end": "238879"
  },
  {
    "text": "be able to decode this message and the",
    "start": "238879",
    "end": "240760"
  },
  {
    "text": "address data will just end up in the",
    "start": "240760",
    "end": "242519"
  },
  {
    "text": "unknown field set schema Evolution has",
    "start": "242519",
    "end": "245400"
  },
  {
    "text": "been planned for from the start and it's",
    "start": "245400",
    "end": "247079"
  },
  {
    "text": "therefore handled very smoothly you",
    "start": "247079",
    "end": "248959"
  },
  {
    "text": "could imagine adding new tag types but",
    "start": "248959",
    "end": "252360"
  },
  {
    "text": "that requires updating all of the",
    "start": "252360",
    "end": "254040"
  },
  {
    "text": "existing",
    "start": "254040",
    "end": "255040"
  },
  {
    "text": "parsers everything right on your mobile",
    "start": "255040",
    "end": "257400"
  },
  {
    "text": "phones deployed in India on your servers",
    "start": "257400",
    "end": "259600"
  },
  {
    "text": "like everywhere so that they can accept",
    "start": "259600",
    "end": "262520"
  },
  {
    "text": "this new format and then you have to",
    "start": "262520",
    "end": "264040"
  },
  {
    "text": "wait for all of the parsers to roll out",
    "start": "264040",
    "end": "266800"
  },
  {
    "text": "globally and then once everything has",
    "start": "266800",
    "end": "269720"
  },
  {
    "text": "rolled out you can then change your",
    "start": "269720",
    "end": "272280"
  },
  {
    "text": "serializers to emit these new tag types",
    "start": "272280",
    "end": "275000"
  },
  {
    "text": "this is the sort of effort that one",
    "start": "275000",
    "end": "277360"
  },
  {
    "text": "really wants to only try once a decade",
    "start": "277360",
    "end": "279800"
  },
  {
    "text": "or less um and that's not what we're",
    "start": "279800",
    "end": "282120"
  },
  {
    "text": "doing right now we are focused on schema",
    "start": "282120",
    "end": "285360"
  },
  {
    "text": "message",
    "start": "285360",
    "end": "286520"
  },
  {
    "text": "Evolution or we're not focused on schema",
    "start": "286520",
    "end": "288919"
  },
  {
    "text": "of message Evolution which is already",
    "start": "288919",
    "end": "290199"
  },
  {
    "text": "well handled we're not focused on wire",
    "start": "290199",
    "end": "292440"
  },
  {
    "text": "format Evolution because it's too big a",
    "start": "292440",
    "end": "294919"
  },
  {
    "text": "problem right now we're focused on API",
    "start": "294919",
    "end": "298560"
  },
  {
    "text": "evolution",
    "start": "298560",
    "end": "300400"
  },
  {
    "text": "consider the component of a single piece",
    "start": "300400",
    "end": "303800"
  },
  {
    "text": "right we're now down into one part of",
    "start": "303800",
    "end": "306400"
  },
  {
    "text": "our micro architecture right this is the",
    "start": "306400",
    "end": "309360"
  },
  {
    "text": "I want to add features I want to upgrade",
    "start": "309360",
    "end": "310880"
  },
  {
    "text": "a library this is the sort of day-to-day",
    "start": "310880",
    "end": "312919"
  },
  {
    "text": "things that we as developers do when we",
    "start": "312919",
    "end": "314840"
  },
  {
    "text": "are doing like a single unit of change",
    "start": "314840",
    "end": "316880"
  },
  {
    "text": "and releasing it um while protuff has",
    "start": "316880",
    "end": "320479"
  },
  {
    "text": "really strong Evolution Primitives for",
    "start": "320479",
    "end": "323520"
  },
  {
    "text": "interacting between components it",
    "start": "323520",
    "end": "325919"
  },
  {
    "text": "doesn't actually have strong Evolution",
    "start": "325919",
    "end": "327560"
  },
  {
    "text": "Primitives for evolving projects like",
    "start": "327560",
    "end": "330520"
  },
  {
    "text": "the within it if you want to change a",
    "start": "330520",
    "end": "333800"
  },
  {
    "text": "protuff API you have to do it entirely",
    "start": "333800",
    "end": "336280"
  },
  {
    "text": "automically you would have to update",
    "start": "336280",
    "end": "337759"
  },
  {
    "text": "protuff and then update all of the code",
    "start": "337759",
    "end": "340000"
  },
  {
    "text": "in your project simultaneously in a",
    "start": "340000",
    "end": "342160"
  },
  {
    "text": "single Atomic",
    "start": "342160",
    "end": "343800"
  },
  {
    "text": "commit and that's just it it's some",
    "start": "343800",
    "end": "347160"
  },
  {
    "text": "somewhat like if you want to bring your",
    "start": "347160",
    "end": "349479"
  },
  {
    "text": "uh program if you want to update from",
    "start": "349479",
    "end": "350759"
  },
  {
    "text": "C++ 11 to C++ 14 you just have to fix",
    "start": "350759",
    "end": "353680"
  },
  {
    "text": "the entire thing and throw a giant",
    "start": "353680",
    "end": "354960"
  },
  {
    "text": "switch for your software stack of course",
    "start": "354960",
    "end": "357600"
  },
  {
    "text": "upgrading languages should be hard and",
    "start": "357600",
    "end": "359840"
  },
  {
    "text": "there's nothing to be done about this",
    "start": "359840",
    "end": "362039"
  },
  {
    "text": "actually Matt maybe we could look at",
    "start": "362039",
    "end": "363600"
  },
  {
    "text": "some specific examples of this and see",
    "start": "363600",
    "end": "365479"
  },
  {
    "text": "if they give us any",
    "start": "365479",
    "end": "366919"
  },
  {
    "text": "ideas what about the evolution of python",
    "start": "366919",
    "end": "368960"
  },
  {
    "text": "2 to Python 3 okay that was a super",
    "start": "368960",
    "end": "371880"
  },
  {
    "text": "painful transition they they didn't do",
    "start": "371880",
    "end": "374680"
  },
  {
    "text": "it",
    "start": "374680",
    "end": "375800"
  },
  {
    "text": "great but I mean they did it better than",
    "start": "375800",
    "end": "378199"
  },
  {
    "text": "Pearl six in some sense uh there are",
    "start": "378199",
    "end": "381240"
  },
  {
    "text": "good points in two to three that we can",
    "start": "381240",
    "end": "383000"
  },
  {
    "text": "learn",
    "start": "383000",
    "end": "385280"
  },
  {
    "text": "from like the let's look at the various",
    "start": "385599",
    "end": "389000"
  },
  {
    "text": "points they had uh the 2 to3 tool it it",
    "start": "389000",
    "end": "393039"
  },
  {
    "text": "had rough edges but it helped a lot it",
    "start": "393039",
    "end": "395639"
  },
  {
    "text": "saved a ton of just like Mindless things",
    "start": "395639",
    "end": "399720"
  },
  {
    "text": "like that import future allowed",
    "start": "399720",
    "end": "402840"
  },
  {
    "text": "libraries to pre- migrate before the",
    "start": "402840",
    "end": "405319"
  },
  {
    "text": "rest of the code was ready so you could",
    "start": "405319",
    "end": "406759"
  },
  {
    "text": "say in your python 2 code import future",
    "start": "406759",
    "end": "409639"
  },
  {
    "text": "and now I want to like use the pro",
    "start": "409639",
    "end": "411360"
  },
  {
    "text": "Python 3",
    "start": "411360",
    "end": "412599"
  },
  {
    "text": "features similarly they had the six",
    "start": "412599",
    "end": "414759"
  },
  {
    "text": "package which kind of gave you this way",
    "start": "414759",
    "end": "416400"
  },
  {
    "text": "to be like I want to live in Both Worlds",
    "start": "416400",
    "end": "418120"
  },
  {
    "text": "at the same time for a little while file",
    "start": "418120",
    "end": "420879"
  },
  {
    "text": "um and so despite all that the change",
    "start": "420879",
    "end": "424120"
  },
  {
    "text": "was just too large for python 2:3 to",
    "start": "424120",
    "end": "426840"
  },
  {
    "text": "smoothly incorporate into a large system",
    "start": "426840",
    "end": "429560"
  },
  {
    "text": "I think the key pattern here is obvious",
    "start": "429560",
    "end": "431000"
  },
  {
    "text": "though things that allow for flexibility",
    "start": "431000",
    "end": "433080"
  },
  {
    "text": "and incremental migrations make life",
    "start": "433080",
    "end": "435960"
  },
  {
    "text": "easier generated API Evolution has huge",
    "start": "435960",
    "end": "439840"
  },
  {
    "text": "potential to unlock performance wins it",
    "start": "439840",
    "end": "442680"
  },
  {
    "text": "lets us fix historical mistakes and",
    "start": "442680",
    "end": "445599"
  },
  {
    "text": "replace inefficient designs this is the",
    "start": "445599",
    "end": "448440"
  },
  {
    "text": "target we actually aiming",
    "start": "448440",
    "end": "451039"
  },
  {
    "text": "for but how do we apply the lessons from",
    "start": "451039",
    "end": "454759"
  },
  {
    "text": "python 2 to 3 so that this target is",
    "start": "454759",
    "end": "459160"
  },
  {
    "text": "tenable what we want are powerful",
    "start": "459160",
    "end": "461800"
  },
  {
    "text": "Primitives in protuff to enable",
    "start": "461800",
    "end": "464639"
  },
  {
    "text": "evolution of generated apis so that",
    "start": "464639",
    "end": "467400"
  },
  {
    "text": "people that produce language bindings in",
    "start": "467400",
    "end": "469159"
  },
  {
    "text": "prabu can actually do these sorts of",
    "start": "469159",
    "end": "471879"
  },
  {
    "text": "things without harming their",
    "start": "471879",
    "end": "473680"
  },
  {
    "text": "users we're currently in a worse State",
    "start": "473680",
    "end": "476159"
  },
  {
    "text": "than python 2 to3 because we don't have",
    "start": "476159",
    "end": "478159"
  },
  {
    "text": "any of those mechanism M for incremental",
    "start": "478159",
    "end": "480840"
  },
  {
    "text": "Evolution so the question becomes how do",
    "start": "480840",
    "end": "483560"
  },
  {
    "text": "we create the equivalence of 2 to three",
    "start": "483560",
    "end": "485599"
  },
  {
    "text": "and import future for protuff how do we",
    "start": "485599",
    "end": "487680"
  },
  {
    "text": "evolve the schema language defining",
    "start": "487680",
    "end": "489440"
  },
  {
    "text": "dopro files so that it provides Rich",
    "start": "489440",
    "end": "491520"
  },
  {
    "text": "Primitives for API",
    "start": "491520",
    "end": "494479"
  },
  {
    "text": "Evolution fortunately language evolution",
    "start": "494560",
    "end": "497400"
  },
  {
    "text": "is a lot simpler than y format Evolution",
    "start": "497400",
    "end": "499919"
  },
  {
    "text": "you have to go and update all the",
    "start": "499919",
    "end": "501000"
  },
  {
    "text": "parsers and if the change modifies the",
    "start": "501000",
    "end": "503319"
  },
  {
    "text": "semantics in any meaningful way then you",
    "start": "503319",
    "end": "505520"
  },
  {
    "text": "have to go update all the code",
    "start": "505520",
    "end": "506680"
  },
  {
    "text": "generators as",
    "start": "506680",
    "end": "508240"
  },
  {
    "text": "well also it's important that your",
    "start": "508240",
    "end": "510919"
  },
  {
    "text": "changes don't affect the wire format at",
    "start": "510919",
    "end": "513200"
  },
  {
    "text": "all otherwise you're back in the",
    "start": "513200",
    "end": "514320"
  },
  {
    "text": "situation we mentioned earlier with wire",
    "start": "514320",
    "end": "516159"
  },
  {
    "text": "format",
    "start": "516159",
    "end": "518560"
  },
  {
    "text": "Evolution to start with we're going to",
    "start": "518560",
    "end": "521039"
  },
  {
    "text": "borrow a concept from Rost called",
    "start": "521039",
    "end": "523599"
  },
  {
    "text": "additions but before we dive too much",
    "start": "523600",
    "end": "526080"
  },
  {
    "text": "into that let's talk about Proto 2 and",
    "start": "526080",
    "end": "527959"
  },
  {
    "text": "Proto",
    "start": "527959",
    "end": "528959"
  },
  {
    "text": "3 these can be thought of as two",
    "start": "528959",
    "end": "531760"
  },
  {
    "text": "different representations of the same",
    "start": "531760",
    "end": "533839"
  },
  {
    "text": "common underlying language on The Wire",
    "start": "533839",
    "end": "536279"
  },
  {
    "text": "they're identical and they can work in",
    "start": "536279",
    "end": "538040"
  },
  {
    "text": "conjunction with one another they just",
    "start": "538040",
    "end": "539760"
  },
  {
    "text": "have slightly different",
    "start": "539760",
    "end": "541519"
  },
  {
    "text": "semantics unfortunately when Proto 3 was",
    "start": "541519",
    "end": "544240"
  },
  {
    "text": "created nobody had a migration plan from",
    "start": "544240",
    "end": "546360"
  },
  {
    "text": "Proto 2 because of that there was no way",
    "start": "546360",
    "end": "548959"
  },
  {
    "text": "to switch between them incrementally and",
    "start": "548959",
    "end": "550600"
  },
  {
    "text": "the differences between them are all or",
    "start": "550600",
    "end": "552120"
  },
  {
    "text": "nothing and now we're just stuck",
    "start": "552120",
    "end": "553880"
  },
  {
    "text": "supporting both of them this rigidity is",
    "start": "553880",
    "end": "557040"
  },
  {
    "text": "one of the major problems we face and to",
    "start": "557040",
    "end": "558800"
  },
  {
    "text": "get around it we're pivoting to the",
    "start": "558800",
    "end": "560600"
  },
  {
    "text": "concept of",
    "start": "560600",
    "end": "563040"
  },
  {
    "text": "additions rather than the current All or",
    "start": "563320",
    "end": "565760"
  },
  {
    "text": "Nothing set of configuration changes an",
    "start": "565760",
    "end": "567720"
  },
  {
    "text": "addition is a set of default that can be",
    "start": "567720",
    "end": "570200"
  },
  {
    "text": "overridden we call each of these fine",
    "start": "570200",
    "end": "572399"
  },
  {
    "text": "grain configurable differences",
    "start": "572399",
    "end": "575240"
  },
  {
    "text": "features features are the mechanism to",
    "start": "575240",
    "end": "577519"
  },
  {
    "text": "provide us both import future and import",
    "start": "577519",
    "end": "579880"
  },
  {
    "text": "past",
    "start": "579880",
    "end": "580959"
  },
  {
    "text": "incrementally but this will be a lot",
    "start": "580959",
    "end": "582560"
  },
  {
    "text": "easier to explain if we look at a",
    "start": "582560",
    "end": "583680"
  },
  {
    "text": "concrete example of how to use",
    "start": "583680",
    "end": "586160"
  },
  {
    "text": "additions we're currently in a bit of a",
    "start": "586160",
    "end": "588120"
  },
  {
    "text": "knot around strings consider this",
    "start": "588120",
    "end": "590920"
  },
  {
    "text": "message and the C++ that it",
    "start": "590920",
    "end": "594959"
  },
  {
    "text": "generates the C++ that it generates it's",
    "start": "596120",
    "end": "598640"
  },
  {
    "text": "actually pretty obvious kind of",
    "start": "598640",
    "end": "600320"
  },
  {
    "text": "straightforward um if you're Loosely",
    "start": "600320",
    "end": "602360"
  },
  {
    "text": "familiar with C++ you might look at this",
    "start": "602360",
    "end": "603920"
  },
  {
    "text": "and be like there's nothing really wrong",
    "start": "603920",
    "end": "605440"
  },
  {
    "text": "with this but it has two really",
    "start": "605440",
    "end": "607320"
  },
  {
    "text": "important",
    "start": "607320",
    "end": "608640"
  },
  {
    "text": "shortcomings this Setter means that a",
    "start": "608640",
    "end": "612040"
  },
  {
    "text": "caller must have a stood string object",
    "start": "612040",
    "end": "615800"
  },
  {
    "text": "so if you want to call set name Matthew",
    "start": "615800",
    "end": "618360"
  },
  {
    "text": "F gundis what you'll end up doing is",
    "start": "618360",
    "end": "621680"
  },
  {
    "text": "creating a temporary stood string",
    "start": "621680",
    "end": "623760"
  },
  {
    "text": "allocating memory mem copying from the",
    "start": "623760",
    "end": "626399"
  },
  {
    "text": "static portion of your binary into that",
    "start": "626399",
    "end": "629240"
  },
  {
    "text": "ated memory passing that temp string",
    "start": "629240",
    "end": "631640"
  },
  {
    "text": "into set name then Proto will take it",
    "start": "631640",
    "end": "633480"
  },
  {
    "text": "and then make a copy of that stood",
    "start": "633480",
    "end": "634800"
  },
  {
    "text": "string into its own stood string and",
    "start": "634800",
    "end": "636720"
  },
  {
    "text": "then it will go back to you and then",
    "start": "636720",
    "end": "638399"
  },
  {
    "text": "your temporary string will be destroyed",
    "start": "638399",
    "end": "640240"
  },
  {
    "text": "which will free that memory like this is",
    "start": "640240",
    "end": "642279"
  },
  {
    "text": "a lot of churn for something that should",
    "start": "642279",
    "end": "645320"
  },
  {
    "text": "just have been one mem",
    "start": "645320",
    "end": "647320"
  },
  {
    "text": "copy and there's a relatively easy",
    "start": "647320",
    "end": "649560"
  },
  {
    "text": "migration that allows us to change this",
    "start": "649560",
    "end": "651720"
  },
  {
    "text": "to use a string",
    "start": "651720",
    "end": "653920"
  },
  {
    "text": "View and fortunately we already did that",
    "start": "653920",
    "end": "657000"
  },
  {
    "text": "um",
    "start": "657000",
    "end": "658040"
  },
  {
    "text": "our our our contracts allow this because",
    "start": "658040",
    "end": "662600"
  },
  {
    "text": "you're not supposed to take the address",
    "start": "662600",
    "end": "664519"
  },
  {
    "text": "or specify the exact signature of",
    "start": "664519",
    "end": "666760"
  },
  {
    "text": "function names this is very similar to",
    "start": "666760",
    "end": "668880"
  },
  {
    "text": "the abale uh contracts for how to use",
    "start": "668880",
    "end": "671880"
  },
  {
    "text": "C++ with them um this accessor on the",
    "start": "671880",
    "end": "676240"
  },
  {
    "text": "other hand means that a stood string",
    "start": "676240",
    "end": "679920"
  },
  {
    "text": "must exist",
    "start": "679920",
    "end": "682279"
  },
  {
    "text": "somewhere inside person's representation",
    "start": "682279",
    "end": "685160"
  },
  {
    "text": "so as a result we're highly constrained",
    "start": "685160",
    "end": "686720"
  },
  {
    "text": "in how we can Implement person we must",
    "start": "686720",
    "end": "689200"
  },
  {
    "text": "have a stood string object that we can",
    "start": "689200",
    "end": "690959"
  },
  {
    "text": "provide a con stood string reference to",
    "start": "690959",
    "end": "692639"
  },
  {
    "text": "the user that means we either have to",
    "start": "692639",
    "end": "694680"
  },
  {
    "text": "have it by value or we have to Heap",
    "start": "694680",
    "end": "696360"
  },
  {
    "text": "allocate it and have a pointer to it and",
    "start": "696360",
    "end": "698200"
  },
  {
    "text": "the stood string must exist and the",
    "start": "698200",
    "end": "699600"
  },
  {
    "text": "stood string will have its own",
    "start": "699600",
    "end": "700519"
  },
  {
    "text": "indirection and all of that but what if",
    "start": "700519",
    "end": "702800"
  },
  {
    "text": "we knew from runtime data and profiling",
    "start": "702800",
    "end": "704639"
  },
  {
    "text": "information that this string was always",
    "start": "704639",
    "end": "706560"
  },
  {
    "text": "between three and 14 bytes then we're",
    "start": "706560",
    "end": "709399"
  },
  {
    "text": "wasting space we could have had a",
    "start": "709399",
    "end": "711000"
  },
  {
    "text": "scratch buffer of 16 bytes directly in",
    "start": "711000",
    "end": "712800"
  },
  {
    "text": "the Proto what if we knew it was always",
    "start": "712800",
    "end": "714600"
  },
  {
    "text": "two bytes what if we knew it was always",
    "start": "714600",
    "end": "716160"
  },
  {
    "text": "a thousand there's so much you can do if",
    "start": "716160",
    "end": "718959"
  },
  {
    "text": "if you have flexibility in the",
    "start": "718959",
    "end": "721120"
  },
  {
    "text": "underlying",
    "start": "721120",
    "end": "722519"
  },
  {
    "text": "representation so instead we want to",
    "start": "722519",
    "end": "724839"
  },
  {
    "text": "return an opaque handle to the",
    "start": "724839",
    "end": "729000"
  },
  {
    "text": "data then all of these optimizations we",
    "start": "729160",
    "end": "732720"
  },
  {
    "text": "get we could do custom sizing where we",
    "start": "732720",
    "end": "735519"
  },
  {
    "text": "have a custom SSO buffer for it or we",
    "start": "735519",
    "end": "738680"
  },
  {
    "text": "could do a pascal string for things that",
    "start": "738680",
    "end": "741000"
  },
  {
    "text": "we really want to minimize and we can",
    "start": "741000",
    "end": "743279"
  },
  {
    "text": "avoid having the stood string",
    "start": "743279",
    "end": "744880"
  },
  {
    "text": "destructors run entirely which is really",
    "start": "744880",
    "end": "747120"
  },
  {
    "text": "big if you're using Arenas which like a",
    "start": "747120",
    "end": "749440"
  },
  {
    "text": "15 to 30% performance win in C++ and",
    "start": "749440",
    "end": "752680"
  },
  {
    "text": "it's more if we can avoid the stood",
    "start": "752680",
    "end": "754040"
  },
  {
    "text": "string destructors so how do we use",
    "start": "754040",
    "end": "757360"
  },
  {
    "text": "features to help us get",
    "start": "757360",
    "end": "760760"
  },
  {
    "text": "here to start out we can make it",
    "start": "760760",
    "end": "763320"
  },
  {
    "text": "explicit what addition we're on and",
    "start": "763320",
    "end": "765079"
  },
  {
    "text": "consider a slightly more complicated",
    "start": "765079",
    "end": "766760"
  },
  {
    "text": "Proto here we've added an address field",
    "start": "766760",
    "end": "769199"
  },
  {
    "text": "and specified that we're on addition",
    "start": "769199",
    "end": "770920"
  },
  {
    "text": "2023 which is the first one we'll be",
    "start": "770920",
    "end": "773959"
  },
  {
    "text": "shipping now we can use features to",
    "start": "773959",
    "end": "776720"
  },
  {
    "text": "import future for a single field",
    "start": "776720",
    "end": "779959"
  },
  {
    "text": "here we've specified that the name field",
    "start": "779959",
    "end": "781800"
  },
  {
    "text": "should generate string view Getters even",
    "start": "781800",
    "end": "783880"
  },
  {
    "text": "though the address field doesn't because",
    "start": "783880",
    "end": "785480"
  },
  {
    "text": "the defaults for 2023 are to generate",
    "start": "785480",
    "end": "788199"
  },
  {
    "text": "string the core idea here is that an",
    "start": "788199",
    "end": "790639"
  },
  {
    "text": "addition specifies a set of default",
    "start": "790639",
    "end": "792440"
  },
  {
    "text": "features but that a user can override",
    "start": "792440",
    "end": "794920"
  },
  {
    "text": "them at different levels so when the",
    "start": "794920",
    "end": "797399"
  },
  {
    "text": "time comes to upgrade the entire file",
    "start": "797399",
    "end": "799880"
  },
  {
    "text": "you can import past for the parts that",
    "start": "799880",
    "end": "801519"
  },
  {
    "text": "aren't ready yet here we' bumped the",
    "start": "801519",
    "end": "803760"
  },
  {
    "text": "file up to addition 2024 where",
    "start": "803760",
    "end": "806440"
  },
  {
    "text": "hypothetically string view is Now the",
    "start": "806440",
    "end": "807839"
  },
  {
    "text": "default remove the feature from name and",
    "start": "807839",
    "end": "810680"
  },
  {
    "text": "added a new one to address that says we",
    "start": "810680",
    "end": "812360"
  },
  {
    "text": "want to continue generating",
    "start": "812360",
    "end": "815600"
  },
  {
    "text": "strings alternatively if all of the",
    "start": "816000",
    "end": "818800"
  },
  {
    "text": "strings in this file weren't ready we",
    "start": "818800",
    "end": "821000"
  },
  {
    "text": "could simply specify it at the file",
    "start": "821000",
    "end": "822720"
  },
  {
    "text": "level and this would mean that all of",
    "start": "822720",
    "end": "824920"
  },
  {
    "text": "the fields in this all the string fields",
    "start": "824920",
    "end": "826519"
  },
  {
    "text": "in this file will generate string",
    "start": "826519",
    "end": "829440"
  },
  {
    "text": "Getters as an aside you might be curious",
    "start": "829440",
    "end": "832800"
  },
  {
    "text": "what is the syntax we're using it looks",
    "start": "832800",
    "end": "835040"
  },
  {
    "text": "a little weird the way we've written it",
    "start": "835040",
    "end": "836519"
  },
  {
    "text": "but it's actually pre-existing syntax in",
    "start": "836519",
    "end": "838279"
  },
  {
    "text": "protuff for custom options the only",
    "start": "838279",
    "end": "841279"
  },
  {
    "text": "actual changes we had to make to the",
    "start": "841279",
    "end": "842800"
  },
  {
    "text": "protuff grammar for any of additions is",
    "start": "842800",
    "end": "845320"
  },
  {
    "text": "the first line where you specify an",
    "start": "845320",
    "end": "847079"
  },
  {
    "text": "addition name instead of a",
    "start": "847079",
    "end": "850759"
  },
  {
    "text": "syntax by using custom options for",
    "start": "852199",
    "end": "855000"
  },
  {
    "text": "features it allows language generators",
    "start": "855000",
    "end": "857759"
  },
  {
    "text": "space to evolve their own features",
    "start": "857759",
    "end": "859320"
  },
  {
    "text": "independently this evolves thirdparty",
    "start": "859320",
    "end": "861199"
  },
  {
    "text": "language",
    "start": "861199",
    "end": "862399"
  },
  {
    "text": "generators to play on equal footing with",
    "start": "862399",
    "end": "865079"
  },
  {
    "text": "ones built directly into protoc C that",
    "start": "865079",
    "end": "866720"
  },
  {
    "text": "we",
    "start": "866720",
    "end": "867399"
  },
  {
    "text": "own together",
    "start": "867399",
    "end": "869240"
  },
  {
    "text": "additions and features give us an",
    "start": "869240",
    "end": "870920"
  },
  {
    "text": "equivalent to Python's import future",
    "start": "870920",
    "end": "872839"
  },
  {
    "text": "import past and also way to know what",
    "start": "872839",
    "end": "875160"
  },
  {
    "text": "time it is but we still need an",
    "start": "875160",
    "end": "877240"
  },
  {
    "text": "equivalent to the two to three",
    "start": "877240",
    "end": "878959"
  },
  {
    "text": "tool what if we had a simple way to",
    "start": "878959",
    "end": "881680"
  },
  {
    "text": "automate upgrading a Proto",
    "start": "881680",
    "end": "885199"
  },
  {
    "text": "file it would be a single command and",
    "start": "885199",
    "end": "888160"
  },
  {
    "text": "would update a file for you",
    "start": "888160",
    "end": "890120"
  },
  {
    "text": "automatically importing import past and",
    "start": "890120",
    "end": "892160"
  },
  {
    "text": "removing import future as",
    "start": "892160",
    "end": "894519"
  },
  {
    "text": "needed it would even guarantee that it",
    "start": "894519",
    "end": "897920"
  },
  {
    "text": "would do this without changing what the",
    "start": "897920",
    "end": "900360"
  },
  {
    "text": "generated code was so you could just",
    "start": "900360",
    "end": "902639"
  },
  {
    "text": "sweep it across get everything up to the",
    "start": "902639",
    "end": "904480"
  },
  {
    "text": "next Edition and then start the",
    "start": "904480",
    "end": "905959"
  },
  {
    "text": "incremental things we could also allow",
    "start": "905959",
    "end": "907959"
  },
  {
    "text": "more fine grain control of the",
    "start": "907959",
    "end": "909959"
  },
  {
    "text": "modifications this tool",
    "start": "909959",
    "end": "912720"
  },
  {
    "text": "supports with a rich set of Primitives",
    "start": "912720",
    "end": "915680"
  },
  {
    "text": "people can evolve their own code bases",
    "start": "915680",
    "end": "919680"
  },
  {
    "text": "safely but we can take it a step further",
    "start": "919680",
    "end": "922000"
  },
  {
    "text": "and encode more smarts into the",
    "start": "922000",
    "end": "924480"
  },
  {
    "text": "tool by making the tool aware of protuff",
    "start": "924480",
    "end": "927600"
  },
  {
    "text": "semantics we can teach it how to ensure",
    "start": "927600",
    "end": "930920"
  },
  {
    "text": "that the edits it generates are safe",
    "start": "930920",
    "end": "933279"
  },
  {
    "text": "from several different perspectives is",
    "start": "933279",
    "end": "936079"
  },
  {
    "text": "it safe from a wire format perspective",
    "start": "936079",
    "end": "938319"
  },
  {
    "text": "right changing a string to an INT is not",
    "start": "938319",
    "end": "940079"
  },
  {
    "text": "but changing an in32 to an int64 is is",
    "start": "940079",
    "end": "943279"
  },
  {
    "text": "it safe from a Json format perspective",
    "start": "943279",
    "end": "946480"
  },
  {
    "text": "actually changing the name of a field",
    "start": "946480",
    "end": "948360"
  },
  {
    "text": "isn't safe from a Json format",
    "start": "948360",
    "end": "951480"
  },
  {
    "text": "perspective whereas",
    "start": "951480",
    "end": "954160"
  },
  {
    "text": "changing a tag is not safe from a wire",
    "start": "954160",
    "end": "957519"
  },
  {
    "text": "format perspective but is safe from a",
    "start": "957519",
    "end": "959079"
  },
  {
    "text": "Json format perspective and so you can",
    "start": "959079",
    "end": "960880"
  },
  {
    "text": "build those",
    "start": "960880",
    "end": "962519"
  },
  {
    "text": "in we hope this tool provides sort of",
    "start": "962519",
    "end": "965519"
  },
  {
    "text": "Baseline capability to the protuff",
    "start": "965519",
    "end": "967279"
  },
  {
    "text": "ecosystem that is value Beyond simply",
    "start": "967279",
    "end": "969759"
  },
  {
    "text": "updating to the latest edition so Mike H",
    "start": "969759",
    "end": "973319"
  },
  {
    "text": "how long until it's",
    "start": "973319",
    "end": "974600"
  },
  {
    "text": "released well we have finished the C++",
    "start": "974600",
    "end": "978600"
  },
  {
    "text": "implementation um addition 2023 is out",
    "start": "978600",
    "end": "981920"
  },
  {
    "text": "as of our 24. overlease it's just",
    "start": "981920",
    "end": "984480"
  },
  {
    "text": "guarded by an experimental",
    "start": "984480",
    "end": "986040"
  },
  {
    "text": "flag we've uh finished Objective C",
    "start": "986040",
    "end": "989800"
  },
  {
    "text": "implementation we've open sourced all",
    "start": "989800",
    "end": "992399"
  },
  {
    "text": "our internal design",
    "start": "992399",
    "end": "993959"
  },
  {
    "text": "docs and started on the public facing",
    "start": "993959",
    "end": "997319"
  },
  {
    "text": "documentation that will actually be",
    "start": "997319",
    "end": "998600"
  },
  {
    "text": "maintained long term for additions we're",
    "start": "998600",
    "end": "1001440"
  },
  {
    "text": "also currently working on rolling it out",
    "start": "1001440",
    "end": "1003199"
  },
  {
    "text": "to Java python Ruby and PHP and all of",
    "start": "1003199",
    "end": "1006800"
  },
  {
    "text": "those should be available well before",
    "start": "1006800",
    "end": "1008360"
  },
  {
    "text": "the end of the",
    "start": "1008360",
    "end": "1009360"
  },
  {
    "text": "year Proto tiller is still under",
    "start": "1009360",
    "end": "1011720"
  },
  {
    "text": "development and that's mainly because",
    "start": "1011720",
    "end": "1013759"
  },
  {
    "text": "we're focused on finishing addition 2023",
    "start": "1013759",
    "end": "1016680"
  },
  {
    "text": "and also implementing it in all the",
    "start": "1016680",
    "end": "1018240"
  },
  {
    "text": "langu you",
    "start": "1018240",
    "end": "1020880"
  },
  {
    "text": "support does anyone have any",
    "start": "1021079",
    "end": "1023600"
  },
  {
    "text": "questions uh someone I believe is",
    "start": "1023600",
    "end": "1025640"
  },
  {
    "text": "running around with the mic so that's me",
    "start": "1025640",
    "end": "1029720"
  },
  {
    "text": "thank if you want to ask now I can",
    "start": "1029720",
    "end": "1031880"
  },
  {
    "text": "repeat the question while he gets the",
    "start": "1031880",
    "end": "1033678"
  },
  {
    "text": "mic is the feature a guaranteed Behavior",
    "start": "1033679",
    "end": "1037880"
  },
  {
    "text": "or is it more a su like inine uh so the",
    "start": "1037880",
    "end": "1041678"
  },
  {
    "text": "question is is the feature a guaranteed",
    "start": "1041679",
    "end": "1043240"
  },
  {
    "text": "Behavior or a suggestion and the intent",
    "start": "1043240",
    "end": "1046319"
  },
  {
    "text": "is for features to be guaranteed",
    "start": "1046319",
    "end": "1047918"
  },
  {
    "text": "Behavior",
    "start": "1047919",
    "end": "1049039"
  },
  {
    "text": "uh there are a few historical quirks",
    "start": "1049039",
    "end": "1051240"
  },
  {
    "text": "around things like utf8 handling that",
    "start": "1051240",
    "end": "1053760"
  },
  {
    "text": "we've had to play a little bit of",
    "start": "1053760",
    "end": "1055760"
  },
  {
    "text": "marginalia with um but the intent is",
    "start": "1055760",
    "end": "1059160"
  },
  {
    "text": "that features are",
    "start": "1059160",
    "end": "1062240"
  },
  {
    "text": "requirements follow so how do",
    "start": "1062240",
    "end": "1067280"
  },
  {
    "text": "that or something that does",
    "start": "1070840",
    "end": "1074200"
  },
  {
    "text": "string how does that play into like the",
    "start": "1074200",
    "end": "1077720"
  },
  {
    "text": "using the generat at code with um with",
    "start": "1077720",
    "end": "1080760"
  },
  {
    "text": "the rest of my um code base um great",
    "start": "1080760",
    "end": "1083720"
  },
  {
    "text": "question uh for the specific case of",
    "start": "1083720",
    "end": "1085559"
  },
  {
    "text": "protuff there's already a dependency on",
    "start": "1085559",
    "end": "1087440"
  },
  {
    "text": "abale and so we use abale string view",
    "start": "1087440",
    "end": "1090440"
  },
  {
    "text": "but like the the intent of your question",
    "start": "1090440",
    "end": "1092320"
  },
  {
    "text": "isn't specific to string view so I'll",
    "start": "1092320",
    "end": "1093880"
  },
  {
    "text": "try and answer that intent as well and",
    "start": "1093880",
    "end": "1096600"
  },
  {
    "text": "it is if the rest of your system isn't",
    "start": "1096600",
    "end": "1099280"
  },
  {
    "text": "ready you should put in top level",
    "start": "1099280",
    "end": "1101200"
  },
  {
    "text": "disables on things and say like oh I",
    "start": "1101200",
    "end": "1103159"
  },
  {
    "text": "want string accessors and it'll hit all",
    "start": "1103159",
    "end": "1105799"
  },
  {
    "text": "of the fields right they lexically",
    "start": "1105799",
    "end": "1107360"
  },
  {
    "text": "inherit so you can just put a line at",
    "start": "1107360",
    "end": "1109440"
  },
  {
    "text": "the top of all of your files saying I'm",
    "start": "1109440",
    "end": "1110919"
  },
  {
    "text": "not ready for this",
    "start": "1110919",
    "end": "1112559"
  },
  {
    "text": "feature right but my question is more",
    "start": "1112559",
    "end": "1115159"
  },
  {
    "text": "along the lines of it's obscure from the",
    "start": "1115159",
    "end": "1118240"
  },
  {
    "text": "user right like for example if I don't",
    "start": "1118240",
    "end": "1120679"
  },
  {
    "text": "really need to I'm not going to look at",
    "start": "1120679",
    "end": "1123039"
  },
  {
    "text": "what the types are in the generated code",
    "start": "1123039",
    "end": "1125520"
  },
  {
    "text": "and so how would I know if I'm adopting",
    "start": "1125520",
    "end": "1127679"
  },
  {
    "text": "Edition 2024 that I have to preemptively",
    "start": "1127679",
    "end": "1130760"
  },
  {
    "text": "disable certain",
    "start": "1130760",
    "end": "1132240"
  },
  {
    "text": "features I would think it wouldn't",
    "start": "1132240",
    "end": "1134240"
  },
  {
    "text": "compile when you try it um right but",
    "start": "1134240",
    "end": "1137120"
  },
  {
    "text": "Proto would still generate the code but",
    "start": "1137120",
    "end": "1139039"
  },
  {
    "text": "it wouldn't compile yes but like when",
    "start": "1139039",
    "end": "1140720"
  },
  {
    "text": "you went to upgrade with Proto it would",
    "start": "1140720",
    "end": "1143320"
  },
  {
    "text": "add all the features for you because",
    "start": "1143320",
    "end": "1145240"
  },
  {
    "text": "your previous Edition had string by",
    "start": "1145240",
    "end": "1146679"
  },
  {
    "text": "default and protot Tiller has a noop",
    "start": "1146679",
    "end": "1148440"
  },
  {
    "text": "upgrade so it would add string to all",
    "start": "1148440",
    "end": "1150280"
  },
  {
    "text": "your Proto files when you did the",
    "start": "1150280",
    "end": "1151440"
  },
  {
    "text": "upgrade gotcha um and then you also had",
    "start": "1151440",
    "end": "1154600"
  },
  {
    "text": "a slide for the Proto tiller uh example",
    "start": "1154600",
    "end": "1157600"
  },
  {
    "text": "where it kind of you went from 2023 to",
    "start": "1157600",
    "end": "1160240"
  },
  {
    "text": "24 and then it went from string view to",
    "start": "1160240",
    "end": "1162480"
  },
  {
    "text": "string um I'm Cur I'm curious why it",
    "start": "1162480",
    "end": "1165760"
  },
  {
    "text": "went backward uh so in this slide string",
    "start": "1165760",
    "end": "1169799"
  },
  {
    "text": "view in 2023 is the future it's the",
    "start": "1169799",
    "end": "1173400"
  },
  {
    "text": "default is string and in 2024 the",
    "start": "1173400",
    "end": "1175720"
  },
  {
    "text": "default is string View and so Proto",
    "start": "1175720",
    "end": "1177880"
  },
  {
    "text": "tiller maintaining that this should be a",
    "start": "1177880",
    "end": "1179880"
  },
  {
    "text": "noop when it did it said well you don't",
    "start": "1179880",
    "end": "1181880"
  },
  {
    "text": "need to specify something that's the",
    "start": "1181880",
    "end": "1183280"
  },
  {
    "text": "same as the default but you were using a",
    "start": "1183280",
    "end": "1185799"
  },
  {
    "text": "default that's no longer here so I'll",
    "start": "1185799",
    "end": "1188080"
  },
  {
    "text": "will explicitly set it for you I see",
    "start": "1188080",
    "end": "1191480"
  },
  {
    "text": "okay thank you",
    "start": "1191480",
    "end": "1194400"
  },
  {
    "text": "yeah",
    "start": "1197240",
    "end": "1200240"
  },
  {
    "text": "um so I'm curious about the fact that um",
    "start": "1200720",
    "end": "1205760"
  },
  {
    "text": "you know like the internal Proto files",
    "start": "1205760",
    "end": "1207960"
  },
  {
    "text": "like Des scrypto Proto all these Proto",
    "start": "1207960",
    "end": "1210200"
  },
  {
    "text": "files um they are it's feasible to open",
    "start": "1210200",
    "end": "1214840"
  },
  {
    "text": "them and look at like file options uh",
    "start": "1214840",
    "end": "1218559"
  },
  {
    "text": "message options Etc will you do the same",
    "start": "1218559",
    "end": "1221960"
  },
  {
    "text": "with features so that we can get a list",
    "start": "1221960",
    "end": "1224400"
  },
  {
    "text": "of all the features yep or yeah yeah uh",
    "start": "1224400",
    "end": "1228480"
  },
  {
    "text": "yes the features live on descriptors",
    "start": "1228480",
    "end": "1231679"
  },
  {
    "text": "descriptor will have appropriate things",
    "start": "1231679",
    "end": "1233520"
  },
  {
    "text": "you can access them each language",
    "start": "1233520",
    "end": "1235679"
  },
  {
    "text": "generator like you saw in this case pb.",
    "start": "1235679",
    "end": "1238400"
  },
  {
    "text": "CPP will be its own file but like you'll",
    "start": "1238400",
    "end": "1241760"
  },
  {
    "text": "have Proto messages and be able to see",
    "start": "1241760",
    "end": "1243960"
  },
  {
    "text": "it from there so so will it be like a",
    "start": "1243960",
    "end": "1246840"
  },
  {
    "text": "folder",
    "start": "1246840",
    "end": "1248320"
  },
  {
    "text": "per uh language and then inside there",
    "start": "1248320",
    "end": "1251840"
  },
  {
    "text": "will be like some Proto",
    "start": "1251840",
    "end": "1254200"
  },
  {
    "text": "files or because because I guess like if",
    "start": "1254200",
    "end": "1256840"
  },
  {
    "text": "you have a lot of uh you have a lot of",
    "start": "1256840",
    "end": "1259440"
  },
  {
    "text": "languages right if you put everything in",
    "start": "1259440",
    "end": "1261919"
  },
  {
    "text": "descriptor Proto yeah it's not all in",
    "start": "1261919",
    "end": "1264440"
  },
  {
    "text": "descriptor dopro the idea is that each",
    "start": "1264440",
    "end": "1266080"
  },
  {
    "text": "language generator would Define its own",
    "start": "1266080",
    "end": "1267960"
  },
  {
    "text": "so C++ will have a CPP dopro that and",
    "start": "1267960",
    "end": "1272600"
  },
  {
    "text": "then in we we cheated a little bit we",
    "start": "1272600",
    "end": "1276279"
  },
  {
    "text": "didn't import features do there should",
    "start": "1276279",
    "end": "1278919"
  },
  {
    "text": "be an import statement at the top of",
    "start": "1278919",
    "end": "1280320"
  },
  {
    "text": "this but slides compress",
    "start": "1280320",
    "end": "1282480"
  },
  {
    "text": "things okay thank",
    "start": "1282480",
    "end": "1285799"
  },
  {
    "text": "you I didn't I didn't",
    "start": "1285799",
    "end": "1290039"
  },
  {
    "text": "okay I didn't hear any mention of go are",
    "start": "1290679",
    "end": "1293480"
  },
  {
    "text": "you planning on supporting go yes yeah",
    "start": "1293480",
    "end": "1295480"
  },
  {
    "text": "we are um we forgot it it's there we're",
    "start": "1295480",
    "end": "1299080"
  },
  {
    "text": "planning on supporting",
    "start": "1299080",
    "end": "1301960"
  },
  {
    "text": "it we it's pretty easy to forget a",
    "start": "1301960",
    "end": "1304520"
  },
  {
    "text": "language when you're listing the like",
    "start": "1304520",
    "end": "1305919"
  },
  {
    "text": "set of languages we support is that out",
    "start": "1305919",
    "end": "1308720"
  },
  {
    "text": "now",
    "start": "1308720",
    "end": "1310000"
  },
  {
    "text": "no in progress and Doug here is R TL for",
    "start": "1310000",
    "end": "1313919"
  },
  {
    "text": "go on drpc maintainer yeah we're working",
    "start": "1313919",
    "end": "1317000"
  },
  {
    "text": "with floran on it yeah yeah awesome so",
    "start": "1317000",
    "end": "1320520"
  },
  {
    "text": "we have five minutes until the next set",
    "start": "1320520",
    "end": "1323919"
  },
  {
    "text": "of talks so Antoine's going to be in in",
    "start": "1323919",
    "end": "1326520"
  },
  {
    "text": "this room I forget who's in the other",
    "start": "1326520",
    "end": "1327919"
  },
  {
    "text": "room but I think we'll go ahead and stop",
    "start": "1327919",
    "end": "1329760"
  },
  {
    "text": "the",
    "start": "1329760",
    "end": "1330520"
  },
  {
    "text": "Q&A",
    "start": "1330520",
    "end": "1332279"
  },
  {
    "text": "um now and uh many thanks just as a",
    "start": "1332279",
    "end": "1336559"
  },
  {
    "text": "quick the slides are available online if",
    "start": "1336559",
    "end": "1339400"
  },
  {
    "text": "I fly back through time here you can get",
    "start": "1339400",
    "end": "1342960"
  },
  {
    "text": "to the slides if you go to that",
    "start": "1342960",
    "end": "1346520"
  },
  {
    "text": "URL thank you all",
    "start": "1346520",
    "end": "1350279"
  },
  {
    "text": "right yeah good",
    "start": "1364320",
    "end": "1368880"
  },
  {
    "text": "job I heard it last year and um I",
    "start": "1372159",
    "end": "1375320"
  },
  {
    "text": "thinking how far long have you gotten",
    "start": "1375320",
    "end": "1378880"
  },
  {
    "text": "so you made some good progress yeah",
    "start": "1378880",
    "end": "1381120"
  },
  {
    "text": "Mike's Mike has been the one doing the",
    "start": "1381120",
    "end": "1382799"
  },
  {
    "text": "work and move this",
    "start": "1382799",
    "end": "1386519"
  },
  {
    "text": "one what if a field is",
    "start": "1394520",
    "end": "1398240"
  },
  {
    "text": "structure stay in front of the Town yeah",
    "start": "1401720",
    "end": "1404799"
  },
  {
    "text": "uh what language which language so if if",
    "start": "1404799",
    "end": "1408360"
  },
  {
    "text": "we talk from",
    "start": "1408360",
    "end": "1410000"
  },
  {
    "text": "here you can even pick up from back here",
    "start": "1410000",
    "end": "1413400"
  },
  {
    "text": "oh really really",
    "start": "1413400",
    "end": "1415320"
  },
  {
    "text": "good",
    "start": "1415320",
    "end": "1418320"
  },
  {
    "text": "um that's what we",
    "start": "1422200",
    "end": "1426200"
  },
  {
    "text": "work I think I have to do some I'll",
    "start": "1426200",
    "end": "1431039"
  },
  {
    "text": "doile def finding features for that",
    "start": "1431440",
    "end": "1435200"
  },
  {
    "text": "front",
    "start": "1435200",
    "end": "1438200"
  }
]