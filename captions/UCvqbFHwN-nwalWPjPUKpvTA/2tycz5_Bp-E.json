[
  {
    "text": "so let's do a little overview of what I'm gonna talk about first so first I'd like to talk about the motivations",
    "start": "30",
    "end": "6779"
  },
  {
    "text": "around service catalog what nice shits filling in the career Nettie's ecosystem and why it's important and then I'll",
    "start": "6779",
    "end": "12809"
  },
  {
    "text": "introduce the open service broker API which is the API that service catalogs backed by and then finally we'll take a",
    "start": "12809",
    "end": "19680"
  },
  {
    "text": "look at the new Resources Service Catalog gives you and what a typical flow would look like when interacting",
    "start": "19680",
    "end": "25949"
  },
  {
    "text": "with it and then hope to do a demo if everything goes smoothly and finally a",
    "start": "25949",
    "end": "31500"
  },
  {
    "text": "QA so what is service catalog in one",
    "start": "31500",
    "end": "37710"
  },
  {
    "text": "sentence service catalog is a kubernetes extension for the discovery and connection to externally managed",
    "start": "37710",
    "end": "44430"
  },
  {
    "text": "services so the idea is we want to bring the concept of external managed services",
    "start": "44430",
    "end": "49700"
  },
  {
    "text": "into the kubernetes ecosystem as a first-class citizen and let me talk a",
    "start": "49700",
    "end": "56430"
  },
  {
    "text": "little bit a while about what those manages manage services actually are so I'm gonna do a goofy little example so",
    "start": "56430",
    "end": "64680"
  },
  {
    "text": "let's say you're a web app developer who's trying to come up with the biggest new startup and you know that people",
    "start": "64680",
    "end": "71280"
  },
  {
    "text": "really like taking and sharing pictures of their cats and you suspect there's a real problem today though where people",
    "start": "71280",
    "end": "79259"
  },
  {
    "text": "really want to know whether the pictures they're taking will be highly up voted on reddit or elect on Facebook before",
    "start": "79259",
    "end": "85140"
  },
  {
    "text": "they share them so you want to develop an app that people can upload their pictures to and it will predict how well",
    "start": "85140",
    "end": "91740"
  },
  {
    "text": "that picture will do on social media so what are the sort of components you",
    "start": "91740",
    "end": "97079"
  },
  {
    "text": "would want for this app then so obviously you would want the the web interface that's what your bread and",
    "start": "97079",
    "end": "103710"
  },
  {
    "text": "butter but then you also need some sort of bucket storage for the cat pictures you need an ml engine to do the actual",
    "start": "103710",
    "end": "110100"
  },
  {
    "text": "prediction aspect and you probably want some database to maybe store previous cute cat prediction results but as I",
    "start": "110100",
    "end": "117750"
  },
  {
    "text": "said your core competency is the web app development you really don't want to be in the business of having to manage your",
    "start": "117750",
    "end": "123719"
  },
  {
    "text": "own like tensorflow deployment or a sequel server in your cluster and you happen to know that hey google has a",
    "start": "123719",
    "end": "130259"
  },
  {
    "text": "really good ml engine that you could use but maybe you want to use IBM clouds databases and maybe you found",
    "start": "130259",
    "end": "137010"
  },
  {
    "text": "some free buckets store somewhere that's good enough for now and you can swap in and out later with something more robust",
    "start": "137010",
    "end": "144740"
  },
  {
    "text": "so that's sort of the concept of externally managed services in this case you would have your web app running in",
    "start": "144740",
    "end": "150930"
  },
  {
    "text": "pods on your capes cluster on Prem but it reaches out to multiple services outside the boundaries of your cluster",
    "start": "150930",
    "end": "156570"
  },
  {
    "text": "and that way you can focus really on only having to manage your deployments",
    "start": "156570",
    "end": "161610"
  },
  {
    "text": "your services your resources but you can trust the hosted services to be managed by their providers and so that's the",
    "start": "161610",
    "end": "168510"
  },
  {
    "text": "dream of sort of a hybrid cloud services story and kubernetes but this model",
    "start": "168510",
    "end": "173760"
  },
  {
    "text": "could also apply to services just within your single company as well as it grows",
    "start": "173760",
    "end": "178830"
  },
  {
    "text": "larger so different teams in your company might be responsible for like the billing service or a logging service",
    "start": "178830",
    "end": "184680"
  },
  {
    "text": "or their own managed database outside the realm of kubernetes and you still want to be able to interface with those",
    "start": "184680",
    "end": "191310"
  },
  {
    "text": "easily from within your cluster and so that's great in theory but what does",
    "start": "191310",
    "end": "198660"
  },
  {
    "text": "that look like today in kubernetes so first you need to get access to these services and that's",
    "start": "198660",
    "end": "204959"
  },
  {
    "text": "gonna have to be completely out-of-band with kubernetes so you'll have to go through the web UIs of whatever service",
    "start": "204959",
    "end": "211830"
  },
  {
    "text": "providers you're interested in probably authenticate a hundred different times with OAuth or maybe there's a",
    "start": "211830",
    "end": "217830"
  },
  {
    "text": "proprietary CLI tool you need to download in order to manage your interfacing with these services or if",
    "start": "217830",
    "end": "223920"
  },
  {
    "text": "it's internal in your organization maybe you need to like file a ticket for a different team and wait three days",
    "start": "223920",
    "end": "229290"
  },
  {
    "text": "before somebody brings you a post-it note with like username and password for your database instance and then you have",
    "start": "229290",
    "end": "236910"
  },
  {
    "text": "to manually inject that into your cluster somehow so you probably create secrets but that's just deploying at one",
    "start": "236910",
    "end": "243540"
  },
  {
    "text": "time so maybe each developer really needs their own isolated environment to",
    "start": "243540",
    "end": "249720"
  },
  {
    "text": "develop in so you'd want to cluster per developer or maybe a namespace per developer and then there's the test",
    "start": "249720",
    "end": "255060"
  },
  {
    "text": "cluster the staging cluster the production cluster and you want each of the instances of these external services",
    "start": "255060",
    "end": "261479"
  },
  {
    "text": "to be sandbox really if you want them to have the applications to have their own",
    "start": "261479",
    "end": "266970"
  },
  {
    "text": "views of these services and so you probably need to start writing a bunch of scripts in order to handle the interfacing with",
    "start": "266970",
    "end": "275250"
  },
  {
    "text": "whatever api's are offered by the service providers so that means every",
    "start": "275250",
    "end": "280860"
  },
  {
    "text": "time that you deploy your app you also need to run these scripts and these are your scripts so good luck maintaining",
    "start": "280860",
    "end": "286650"
  },
  {
    "text": "them and then you have to interface with the Kate's API in order to automatically inject the credentials and then the",
    "start": "286650",
    "end": "292860"
  },
  {
    "text": "lifecycle of these things aren't tied to your applications so you also have to write scripts to tear down the services",
    "start": "292860",
    "end": "298410"
  },
  {
    "text": "and hopefully everybody remembers to run those or you're gonna be leaking resources all the time and I think",
    "start": "298410",
    "end": "305670"
  },
  {
    "text": "that's not the best story because I believe that we're heading towards a world of many different interconnected",
    "start": "305670",
    "end": "311490"
  },
  {
    "text": "services from all different service providers not just the big ones and I think with products like sto that story",
    "start": "311490",
    "end": "317310"
  },
  {
    "text": "is really taking off for inside of your cluster inside of kubernetes but what about outside that bound what about",
    "start": "317310",
    "end": "324720"
  },
  {
    "text": "outside the bounds of whatever may be hosted kubernetes environment early hosted cloud provider you're running on",
    "start": "324720",
    "end": "331020"
  },
  {
    "text": "and the more friction I think there is with connecting services and connecting",
    "start": "331020",
    "end": "336480"
  },
  {
    "text": "clouds the less that people will create services for people to consume and so",
    "start": "336480",
    "end": "342780"
  },
  {
    "text": "you'll have your bucket of maybe Google cloud services your bucket of AWS services the big players but you won't",
    "start": "342780",
    "end": "349260"
  },
  {
    "text": "see a truly hybrid story and so that's sort of the state of the",
    "start": "349260",
    "end": "357600"
  },
  {
    "text": "world today and so I'm wondering how ours are we we were wondering how do we",
    "start": "357600",
    "end": "363840"
  },
  {
    "text": "make that experience better and if we're designing the concept of externally managed services and kubernetes from the",
    "start": "363840",
    "end": "370710"
  },
  {
    "text": "ground floor what would we want so firstly just like all other resources it should be",
    "start": "370710",
    "end": "376740"
  },
  {
    "text": "declarative so I should tell kubernetes what external services I want and kubernetes just like all the other",
    "start": "376740",
    "end": "382530"
  },
  {
    "text": "resources it manages internally should do the heavy lifting to make sure that happens and the lifecycle should be tied",
    "start": "382530",
    "end": "389010"
  },
  {
    "text": "to my applications lifecycle so I should be able to keep control apply my entire manifest directory external services",
    "start": "389010",
    "end": "396240"
  },
  {
    "text": "included and everything just spins up as expected and then Cube control delete it all tears down as expected and secondly",
    "start": "396240",
    "end": "402990"
  },
  {
    "text": "I think it should ideally be a consistent API so you could make CR DS",
    "start": "402990",
    "end": "408120"
  },
  {
    "text": "for and controllers for all the different possible external service",
    "start": "408120",
    "end": "413820"
  },
  {
    "text": "types but I think in the interest of like portability moving from one hosted sequel to another and also as far as",
    "start": "413820",
    "end": "422580"
  },
  {
    "text": "like the extra resource costs extra infrastructure cost and the extra baggage for people to have to understand",
    "start": "422580",
    "end": "429180"
  },
  {
    "text": "all the different resources and not to mention that if you want to be able to",
    "start": "429180",
    "end": "435150"
  },
  {
    "text": "build a good GUI on like a GUI dashboard on top of all these arbitrary implementations that would be hard",
    "start": "435150",
    "end": "444199"
  },
  {
    "text": "and so ideally as well though we wouldn't create our own standardized API to expose eServices and kubernetes we",
    "start": "444199",
    "end": "452180"
  },
  {
    "text": "should leverage something bigger than just kubernetes and ideally we wouldn't also need to create custom logic to",
    "start": "452180",
    "end": "459349"
  },
  {
    "text": "front all existing service provider api's and so luckily for us there's a",
    "start": "459349",
    "end": "466370"
  },
  {
    "text": "industry standard emerging for discovering and connecting to manage services and that's the open service",
    "start": "466370",
    "end": "472189"
  },
  {
    "text": "broker API so this is an API that Cloud Foundry originally kick-started for",
    "start": "472189",
    "end": "477770"
  },
  {
    "text": "interfacing with external services in their marketplace and since then it's started to be adopted as an industry",
    "start": "477770",
    "end": "483889"
  },
  {
    "text": "standard with collaboration for the last couple years from pivotal Google IBM Red",
    "start": "483889",
    "end": "488900"
  },
  {
    "text": "Hat sa P and more and so how the model works is that service providers create",
    "start": "488900",
    "end": "497029"
  },
  {
    "text": "service brokers and those service brokers expose a catalog of service offerings and so developers can just",
    "start": "497029",
    "end": "504349"
  },
  {
    "text": "browse the catalog and if they see a service that they want to use they tell the broker to provision a service",
    "start": "504349",
    "end": "509569"
  },
  {
    "text": "instance which represents their own sandbox instantiation of that service for them to use and then any developers",
    "start": "509569",
    "end": "516409"
  },
  {
    "text": "that want to use that specific or connect that specific instance to their application can bind their application",
    "start": "516409",
    "end": "523518"
  },
  {
    "text": "to that instance and this creates a unique set of credentials for that applications identity and that relationship",
    "start": "523519",
    "end": "529910"
  },
  {
    "text": "and so that's like a bird's-eye view of the API and there's a little bit more",
    "start": "529910",
    "end": "537050"
  },
  {
    "text": "customization involved so there's the concept of plans of a service which are",
    "start": "537050",
    "end": "542540"
  },
  {
    "text": "basically just different flavors or tiers so you could have like a free tier you could have a paid tier a premium or",
    "start": "542540",
    "end": "549650"
  },
  {
    "text": "a ha1 just depending on what the service broker implementer wants to offer and then each plan has schemas for",
    "start": "549650",
    "end": "557630"
  },
  {
    "text": "parameters when creating instances and when binding your application so it's a",
    "start": "557630",
    "end": "562970"
  },
  {
    "text": "simple API but I think it really has like the the power of it is in its",
    "start": "562970",
    "end": "568100"
  },
  {
    "text": "simplicity and so with that foundation let's take a look at Service Catalog so",
    "start": "568100",
    "end": "576320"
  },
  {
    "text": "at a high-level service catalog is a kubernetes extension that exposes a declarative and consistent API for",
    "start": "576320",
    "end": "582680"
  },
  {
    "text": "interfacing with externally managed services using the open service broker API and so to do that we've taken all",
    "start": "582680",
    "end": "588350"
  },
  {
    "text": "the concepts of the OSB api and map them into what feels right for kubernetes resources so these are the resources",
    "start": "588350",
    "end": "595730"
  },
  {
    "text": "that we came up with in so it looks exactly like the slides a couple ago",
    "start": "595730",
    "end": "601010"
  },
  {
    "text": "so there's service broker service class service plan service instance and service binding so the service class is",
    "start": "601010",
    "end": "608090"
  },
  {
    "text": "how we describe the service offerings and that's a little bit of a lie though",
    "start": "608090",
    "end": "615110"
  },
  {
    "text": "because what we actually ended up deciding for our view on beta one was we",
    "start": "615110",
    "end": "620540"
  },
  {
    "text": "wanted broker classes and plans to be cluster scoped so it's the responsibility of the cluster admin to",
    "start": "620540",
    "end": "626990"
  },
  {
    "text": "be the one adding the brokers that all the developers in that cluster could use and currently we're working on namespace",
    "start": "626990",
    "end": "634520"
  },
  {
    "text": "versions though so that's coming in the next couple months and then instances and bindings are namespace scoped for",
    "start": "634520",
    "end": "640370"
  },
  {
    "text": "the time being and so let me just go over sort of the resources that you would be directly",
    "start": "640370",
    "end": "646670"
  },
  {
    "text": "creating so cluster service broker that represents the external broker that",
    "start": "646670",
    "end": "652339"
  },
  {
    "text": "you're communicating with and as part of its spec you define the URL that it lives at and you specify a secret",
    "start": "652339",
    "end": "659000"
  },
  {
    "text": "containing credentials to talk to that broker and so this is the only part that has to be negotiated out of band of",
    "start": "659000",
    "end": "664910"
  },
  {
    "text": "kubernetes once you get that injected into your environment then everything",
    "start": "664910",
    "end": "670759"
  },
  {
    "text": "else is just creating declarative resources and so once you create the cluster service broker resource our",
    "start": "670759",
    "end": "676639"
  },
  {
    "text": "Service Catalog controller will connect to the broker and learn the catalog of service offerings from that broker and",
    "start": "676639",
    "end": "682880"
  },
  {
    "text": "it will create cluster service class and cluster service plan resources to represent those in your cluster then you",
    "start": "682880",
    "end": "690170"
  },
  {
    "text": "can browse the catalog of services and when you find something that you want you can create a service instance resource so you specify the class the",
    "start": "690170",
    "end": "699230"
  },
  {
    "text": "plan and then any parameters that were specified by the schema of that plan and",
    "start": "699230",
    "end": "705860"
  },
  {
    "text": "so just one thing is that we use the external name of the class and plan just",
    "start": "705860",
    "end": "711740"
  },
  {
    "text": "because there's a difference between the OSB concept of its external name and",
    "start": "711740",
    "end": "717079"
  },
  {
    "text": "then the kubernetes concept of its internal name so you can specify either but this example just uses the external",
    "start": "717079",
    "end": "723290"
  },
  {
    "text": "name and then once the service instance is provisioned you can create a service",
    "start": "723290",
    "end": "730130"
  },
  {
    "text": "binding resource which represents your intention to bind or in other words like",
    "start": "730130",
    "end": "735500"
  },
  {
    "text": "the relationship between your application and your instance and as part of this you specify the instance",
    "start": "735500",
    "end": "741140"
  },
  {
    "text": "you want to bind to so the instance ref and then any bind parameters and as a",
    "start": "741140",
    "end": "746900"
  },
  {
    "text": "result of the binding our controller will create a secret in your applications namespace with any information needed for your application",
    "start": "746900",
    "end": "753590"
  },
  {
    "text": "to talk to that instance so like credentials hostname port and the secret name will by default just be",
    "start": "753590",
    "end": "759110"
  },
  {
    "text": "the name of the binding but you can specify that and of course because it's kubernetes it doesn't matter the",
    "start": "759110",
    "end": "764240"
  },
  {
    "text": "ordering of which you create any of these resources so you can create the binding than the instance then wait a",
    "start": "764240",
    "end": "769970"
  },
  {
    "text": "while create the broker and then everything will become eventually consistent and same for deleting the",
    "start": "769970",
    "end": "775790"
  },
  {
    "text": "resources and so that's the experience with using the service catalog just manifest",
    "start": "775790",
    "end": "784649"
  },
  {
    "text": "manifests of the resources directly but it would be also nice to have a little bit more command line porcelain around",
    "start": "784649",
    "end": "790990"
  },
  {
    "text": "the experience to be able to do things like easily browse the catalog for maybe services from specific brokers or plans",
    "start": "790990",
    "end": "798550"
  },
  {
    "text": "of specific classes or do imperative commands like I want to reach the",
    "start": "798550",
    "end": "803679"
  },
  {
    "text": "catalog or provision or bind and so for that we created a CLI tool called SV",
    "start": "803679",
    "end": "810189"
  },
  {
    "text": "capped for these Service Catalog specific actions and so it also has a",
    "start": "810189",
    "end": "815199"
  },
  {
    "text": "mode that it can operate as a cube control plugin so you can do a cube control plug-in SV cat but because the",
    "start": "815199",
    "end": "821139"
  },
  {
    "text": "plug-in ecosystems not quite mature yet I would personally recommend the standalone",
    "start": "821139",
    "end": "827750"
  },
  {
    "text": "and let's take a look at a little demo so this is a let me actually",
    "start": "827750",
    "end": "841120"
  },
  {
    "text": "second let me try to get my terminal mirrored",
    "start": "851590",
    "end": "859329"
  },
  {
    "text": "um let me see how to mirror my window",
    "start": "874560",
    "end": "882210"
  },
  {
    "text": "there we go",
    "start": "889810",
    "end": "892560"
  },
  {
    "text": "all right so this is just going to be a little bookstore web app demo so the idea is",
    "start": "919950",
    "end": "927269"
  },
  {
    "text": "that you have a bookstore with a bunch of books that you can purchase and every time you purchase a book it sends a",
    "start": "927269",
    "end": "933060"
  },
  {
    "text": "message on pub/sub and so the pub/sub will be the externally managed service",
    "start": "933060",
    "end": "938360"
  },
  {
    "text": "so",
    "start": "938360",
    "end": "941360"
  },
  {
    "text": "so here are all the resources for the internal all the internal resources so",
    "start": "950110",
    "end": "958000"
  },
  {
    "text": "the deployment of the bookstore the services it relies on so I'll just scoop",
    "start": "958000",
    "end": "963370"
  },
  {
    "text": "control apply this directory",
    "start": "963370",
    "end": "966540"
  },
  {
    "text": "there we go",
    "start": "969070",
    "end": "971940"
  },
  {
    "text": "and so the idea is that in the books Effie the books Effie pod won't come up",
    "start": "974120",
    "end": "980839"
  },
  {
    "text": "quite yet because I have it the deployment relying on",
    "start": "980839",
    "end": "988029"
  },
  {
    "text": "the pub/sub secret that we expect so we can see that I am mounting a volume for",
    "start": "988480",
    "end": "997149"
  },
  {
    "text": "the credentials for pub/sub and then I am also and I'm specifying an",
    "start": "997149",
    "end": "1004470"
  },
  {
    "text": "environment variable for that information and then I specify the pub subtopic and all this comes from the pub",
    "start": "1004470",
    "end": "1011609"
  },
  {
    "text": "sub bindings secret so now let's",
    "start": "1011609",
    "end": "1016619"
  },
  {
    "text": "actually create the pub sub",
    "start": "1016619",
    "end": "1022129"
  },
  {
    "text": "so I'm going to show the two different flavors the imperative CLI and then also the manifest files so first let me do SB",
    "start": "1022950",
    "end": "1033240"
  },
  {
    "text": "cat I get broker and so you can see that",
    "start": "1033240",
    "end": "1038760"
  },
  {
    "text": "I have the Google cloud platform service broker currently registered in my cluster so that means that since it's",
    "start": "1038760",
    "end": "1045870"
  },
  {
    "text": "ready we should be able to do get classes and now we can see all the",
    "start": "1045870",
    "end": "1052790"
  },
  {
    "text": "Google cloud platform services that are exposed to us so in this case we're",
    "start": "1052790",
    "end": "1059760"
  },
  {
    "text": "interested in the cloud pub/sub one so let's just look at that one a little further see what plans it has",
    "start": "1059760",
    "end": "1067220"
  },
  {
    "text": "actually",
    "start": "1070230",
    "end": "1072980"
  },
  {
    "text": "so we can see that it has a betta plan so that's the one that we're going to use",
    "start": "1079960",
    "end": "1085580"
  },
  {
    "text": "so let's use sv cap to provision that first actually let's look at any parameters that it needs so we can do",
    "start": "1085580",
    "end": "1093649"
  },
  {
    "text": "that with SV cot describe the plan",
    "start": "1093649",
    "end": "1099279"
  },
  {
    "text": "and so here we can see that there's some there's an instance create parameter schema and what we can see inside of",
    "start": "1106500",
    "end": "1113669"
  },
  {
    "text": "here is there's just one property that it needs which is the topic ID so the",
    "start": "1113669",
    "end": "1119370"
  },
  {
    "text": "pub subtopic so I can go ahead and do SP cap provision let's call it pub sub",
    "start": "1119370",
    "end": "1128650"
  },
  {
    "text": "class cloud pub/sub plan beta and I give it a parameter",
    "start": "1128650",
    "end": "1134279"
  },
  {
    "text": "topic ID equals cube calm",
    "start": "1134279",
    "end": "1141419"
  },
  {
    "text": "and so now this should be provisioning for us so we can do get instance yeah we",
    "start": "1142700",
    "end": "1150050"
  },
  {
    "text": "can see that it's provisioning and if we want to look at the kubernetes resource",
    "start": "1150050",
    "end": "1155450"
  },
  {
    "text": "we can do get service instance pub/sub",
    "start": "1155450",
    "end": "1163150"
  },
  {
    "text": "and so now we can see here's the speck that was created for us automatically by SB cat and then also here's some",
    "start": "1166190",
    "end": "1175310"
  },
  {
    "text": "conditions so in this case we have its provision successfully so now we can",
    "start": "1175310",
    "end": "1182630"
  },
  {
    "text": "just look at the instance real quick and so SP cut says it's ready so now let us",
    "start": "1182630",
    "end": "1188470"
  },
  {
    "text": "bind to this instance so in this case I'm going to do the Yama file so let me",
    "start": "1188470",
    "end": "1196250"
  },
  {
    "text": "first apply that",
    "start": "1196250",
    "end": "1201220"
  },
  {
    "text": "now let's take a look at that file and so it is a service binding resource",
    "start": "1201520",
    "end": "1208110"
  },
  {
    "text": "API version service catalog its IO and its name is pub/sub it references the",
    "start": "1208110",
    "end": "1214230"
  },
  {
    "text": "pub/sub instance and it just has a few parameters roles that we want our own",
    "start": "1214230",
    "end": "1220710"
  },
  {
    "text": "service account for this and then also create a subscription",
    "start": "1220710",
    "end": "1226610"
  },
  {
    "text": "and now this one takes a little longer to",
    "start": "1228250",
    "end": "1235080"
  },
  {
    "text": "get up and running so let's just wait for the service finding resource",
    "start": "1235160",
    "end": "1241660"
  },
  {
    "text": "or if there's a quick question or something I can take that",
    "start": "1255840",
    "end": "1260660"
  },
  {
    "text": "there we go okay so it has injected the bind result into our cluster so now we",
    "start": "1266090",
    "end": "1273409"
  },
  {
    "text": "can do cube control get secrets and we see that there is a pub sub",
    "start": "1273409",
    "end": "1279950"
  },
  {
    "text": "secret created 12 seconds ago and so if we look at that real quick",
    "start": "1279950",
    "end": "1285880"
  },
  {
    "text": "we can see that we have the private key data for interfacing with the the",
    "start": "1289520",
    "end": "1296179"
  },
  {
    "text": "service and then we get some useful information that we might just want to use in our application so project ID",
    "start": "1296179",
    "end": "1302600"
  },
  {
    "text": "service account name and then subscription ID and topic ID so now that that secrets up we should actually have",
    "start": "1302600",
    "end": "1310160"
  },
  {
    "text": "our pod up and running and",
    "start": "1310160",
    "end": "1317510"
  },
  {
    "text": "maybe let's just wait on it",
    "start": "1317830",
    "end": "1321090"
  },
  {
    "text": "it's",
    "start": "1324770",
    "end": "1327190"
  },
  {
    "text": "timeout expired okay yeah oh okay cool",
    "start": "1341360",
    "end": "1350269"
  },
  {
    "text": "okay so now that the pots up and running let's get the kubernetes service IP",
    "start": "1350269",
    "end": "1358720"
  },
  {
    "text": "for this",
    "start": "1358720",
    "end": "1361320"
  },
  {
    "text": "and so here's our bookstore application so",
    "start": "1366660",
    "end": "1372370"
  },
  {
    "text": "we have a couple of interesting books a game of tones tone-deaf ten year olds are pitted in an acapella battle royale",
    "start": "1372370",
    "end": "1378040"
  },
  {
    "text": "where only one will survive I would like that so let's go ahead and purchase that",
    "start": "1378040",
    "end": "1385360"
  },
  {
    "text": "one okay and then if everything worked we",
    "start": "1385360",
    "end": "1390870"
  },
  {
    "text": "should be able to see that there was a purchase message for that one so in this case I made a script that just does the",
    "start": "1390870",
    "end": "1398030"
  },
  {
    "text": "G cloud pub/sub subscriptions pull and now if we get the message",
    "start": "1398030",
    "end": "1407180"
  },
  {
    "text": "where you see that there was one book purchased and if we do it again",
    "start": "1408360",
    "end": "1413500"
  },
  {
    "text": "Oh Oh it's reading probably from the previous one I had so let's I previously",
    "start": "1413500",
    "end": "1421210"
  },
  {
    "text": "oh sorry I've run this demo with the same exact subscription name multiple times so but that's the idea is that",
    "start": "1421210",
    "end": "1430620"
  },
  {
    "text": "this allows you to just really easily interface your pub/sub application",
    "start": "1430620",
    "end": "1435870"
  },
  {
    "text": "pub/sub service with your application and so now we can see that we can",
    "start": "1435870",
    "end": "1445950"
  },
  {
    "text": "just easily deprovision these resources as well so in this case all unbind",
    "start": "1446360",
    "end": "1453730"
  },
  {
    "text": "and deep revision",
    "start": "1457670",
    "end": "1461290"
  },
  {
    "text": "what you say oh you oh you bought the books okay okay that'll makes a lot more",
    "start": "1472610",
    "end": "1481399"
  },
  {
    "text": "sense I was like huh I thought it I",
    "start": "1481399",
    "end": "1486940"
  },
  {
    "text": "didn't want it to make it seem like it was smoking mirrors but that was yeah",
    "start": "1486940",
    "end": "1492159"
  },
  {
    "text": "okay cool",
    "start": "1492159",
    "end": "1495429"
  },
  {
    "text": "yeah so that makes sense because it's two three and four so the Shelf is index",
    "start": "1499380",
    "end": "1505770"
  },
  {
    "text": "1 so this is book 2 3 and 4 and I bought 3 first so that's why it's ok so now our",
    "start": "1505770",
    "end": "1516690"
  },
  {
    "text": "bindings gone which also means that our resources should have been cleaned up so",
    "start": "1516690",
    "end": "1521850"
  },
  {
    "text": "if we go back to my get messages script we should see that now it fails because",
    "start": "1521850",
    "end": "1527730"
  },
  {
    "text": "the Service Catalog resource was deleted so the external service was also cleaned",
    "start": "1527730",
    "end": "1534150"
  },
  {
    "text": "up for you and",
    "start": "1534150",
    "end": "1540550"
  },
  {
    "text": "one second",
    "start": "1542770",
    "end": "1545640"
  },
  {
    "text": "just going back to the slides",
    "start": "1557570",
    "end": "1561580"
  },
  {
    "text": "okay so that's pretty much the end of the talk so here are some other",
    "start": "1568730",
    "end": "1573950"
  },
  {
    "text": "resources that you can get involved with if you want to learn more so we have a",
    "start": "1573950",
    "end": "1579460"
  },
  {
    "text": "sick for service catalog it's meetings are Mondays at 1 Pacific Time weekly and",
    "start": "1579460",
    "end": "1585500"
  },
  {
    "text": "then also for the open service broker API it's Tuesdays at 9:30 Pacific Time weekly and with that are there any",
    "start": "1585500",
    "end": "1593210"
  },
  {
    "text": "questions yes um well it's a it's a v1 beta1 API which",
    "start": "1593210",
    "end": "1602450"
  },
  {
    "text": "means we're not going to pull the rug out from the API itself and I believe I",
    "start": "1602450",
    "end": "1608749"
  },
  {
    "text": "would say it is production-ready I believe OpenShift is running it in production perfectly fine yes books",
    "start": "1608749",
    "end": "1616340"
  },
  {
    "text": "books books is is not I think I saw him",
    "start": "1616340",
    "end": "1621739"
  },
  {
    "text": "first oh okay",
    "start": "1621739",
    "end": "1625119"
  },
  {
    "text": "how to deploy a create a binding or a service request from an image chart how",
    "start": "1627190",
    "end": "1632590"
  },
  {
    "text": "is it possible I'm not familiar with nem charts Morgan oh hell yes yes yeah you",
    "start": "1632590",
    "end": "1641290"
  },
  {
    "text": "can that's that's originally how I had been deploying a lot of my services but",
    "start": "1641290",
    "end": "1648490"
  },
  {
    "text": "yeah it doesn't have to be Helmick you don't have to worry about managing sort of ordering or anything you can just add",
    "start": "1648490",
    "end": "1655690"
  },
  {
    "text": "them manifest to your question how does it make sense to use this for the",
    "start": "1655690",
    "end": "1662140"
  },
  {
    "text": "provision database I would say so yeah",
    "start": "1662140",
    "end": "1669420"
  },
  {
    "text": "so right at the moment that's more of a question for the implementation details",
    "start": "1669420",
    "end": "1676240"
  },
  {
    "text": "of the service broker so what I see service brokers doing now is offering",
    "start": "1676240",
    "end": "1682480"
  },
  {
    "text": "plans that represent currently provisioned resources so the things that",
    "start": "1682480",
    "end": "1688060"
  },
  {
    "text": "were made outside of the scope of the open service broker API you can still pull them in to Service Catalog and then",
    "start": "1688060",
    "end": "1694090"
  },
  {
    "text": "the bind and everything works just as expected do you see a use case for adding things",
    "start": "1694090",
    "end": "1701560"
  },
  {
    "text": "like storage STS solutions or drivers to your cluster because you know for using",
    "start": "1701560",
    "end": "1708640"
  },
  {
    "text": "open Service Catalog and OSB yeah I absolutely think so we're having some",
    "start": "1708640",
    "end": "1718480"
  },
  {
    "text": "some talks with some of the kubernetes story like the CSI people and how we can",
    "start": "1718480",
    "end": "1723850"
  },
  {
    "text": "get more involved there there's some questions as far as life cycle as far as migration of data how maybe OSB can help",
    "start": "1723850",
    "end": "1730840"
  },
  {
    "text": "you with that so we have a concept of API extensions coming where we are able",
    "start": "1730840",
    "end": "1739060"
  },
  {
    "text": "to define our brokers are able to define an API on",
    "start": "1739060",
    "end": "1745230"
  },
  {
    "text": "top of the instances that is able to be managed by the platform's so that's how",
    "start": "1745230",
    "end": "1751050"
  },
  {
    "text": "we could have some aspect of migration and",
    "start": "1751050",
    "end": "1756110"
  },
  {
    "text": "correct me if I'm wrong but you have taken ownership of the book presets so",
    "start": "1762040",
    "end": "1767820"
  },
  {
    "text": "currently Morgan yes yes we yes we did take ownership of pot presets this is",
    "start": "1767820",
    "end": "1774250"
  },
  {
    "text": "not currently in our demo we are in our current build because we originally had",
    "start": "1774250",
    "end": "1780520"
  },
  {
    "text": "pod preset bindings which we're able to just automatically create pod presets",
    "start": "1780520",
    "end": "1785650"
  },
  {
    "text": "for you we decided to work on revamping that a little so for now the story is",
    "start": "1785650",
    "end": "1791320"
  },
  {
    "text": "just create the secret and then you consume the secret but what our hope is is that yes you will be able to create a",
    "start": "1791320",
    "end": "1798370"
  },
  {
    "text": "pod preset automatically with your binding and then your applications will",
    "start": "1798370",
    "end": "1803560"
  },
  {
    "text": "just have the necessary environment variables and volumes just mounted automatically and does mean and it means",
    "start": "1803560",
    "end": "1811150"
  },
  {
    "text": "that the preset in the main Coburn's repository will be gone probably at some point because it still be one of yes",
    "start": "1811150",
    "end": "1817600"
  },
  {
    "text": "okay yeah",
    "start": "1817600",
    "end": "1820890"
  },
  {
    "text": "I saw an additional project called service managers sitting on top under",
    "start": "1829779",
    "end": "1835840"
  },
  {
    "text": "service Service Catalog yes and Google IBM and as Appy yes what's the role of",
    "start": "1835840",
    "end": "1843369"
  },
  {
    "text": "them so a service manager is about the concept of okay Service Catalog is",
    "start": "1843369",
    "end": "1850149"
  },
  {
    "text": "really good at managing the external services that you created inside your",
    "start": "1850149",
    "end": "1855279"
  },
  {
    "text": "cluster and also you can pull in stuff via the broker if they provide specific",
    "start": "1855279",
    "end": "1860950"
  },
  {
    "text": "plans for pulling in already provisioned resources but what's the story around sharing instances between different",
    "start": "1860950",
    "end": "1868330"
  },
  {
    "text": "instances of Service Catalog or between Cloud Foundry and Service Catalog so service manager is a layer on top",
    "start": "1868330",
    "end": "1874899"
  },
  {
    "text": "that allows you to register your brokers with service manager and then service",
    "start": "1874899",
    "end": "1880809"
  },
  {
    "text": "manager is able to expose a broker API to the controllers that register with it",
    "start": "1880809",
    "end": "1886450"
  },
  {
    "text": "and then you're able to see already provisioned instances as plans and the",
    "start": "1886450",
    "end": "1892450"
  },
  {
    "text": "broker doesn't even need to support that functionality it's a separate project",
    "start": "1892450",
    "end": "1899259"
  },
  {
    "text": "yeah is there a technical reason why you use",
    "start": "1899259",
    "end": "1904760"
  },
  {
    "text": "Q by Q greater and the separate API server on the controller or is that it",
    "start": "1904760",
    "end": "1910880"
  },
  {
    "text": "is because we were a very early adopter of sort of the extension kubernetes",
    "start": "1910880",
    "end": "1916100"
  },
  {
    "text": "extension concept and so yeah CRTs didn't exist when we started with this",
    "start": "1916100",
    "end": "1922299"
  },
  {
    "text": "yeah TBR's existed but we yeah we wanted a bit more of a yeah",
    "start": "1922299",
    "end": "1931250"
  },
  {
    "text": "we we are looking currently into where CR DS and web hooks and such play into",
    "start": "1931250",
    "end": "1937340"
  },
  {
    "text": "service catalog if it makes sense maybe to even move it to CRTs and web hooks but currently yeah we use API",
    "start": "1937340",
    "end": "1943160"
  },
  {
    "text": "aggregation the other question I just wondering the productive environment I mean connecting services you're assuming",
    "start": "1943160",
    "end": "1950090"
  },
  {
    "text": "you will have the connectivity right yeah I mean in real enterprise you have this bloody firewalls over the place and",
    "start": "1950090",
    "end": "1956510"
  },
  {
    "text": "yes yeah that's you need to do more stuff around it right yeah yeah",
    "start": "1956510",
    "end": "1962059"
  },
  {
    "text": "currently the open service broker API assumes that you have the connectivity",
    "start": "1962059",
    "end": "1967220"
  },
  {
    "text": "and that's something that we're actively talking about in OSB how do we give the",
    "start": "1967220",
    "end": "1972980"
  },
  {
    "text": "plug points to be able to expose different networking sort of",
    "start": "1972980",
    "end": "1978130"
  },
  {
    "text": "configuration and I believe service manager though also has this in mind",
    "start": "1978130",
    "end": "1983480"
  },
  {
    "text": "it's it's something built into that so if you if your platform can talk to service manager then you should be able",
    "start": "1983480",
    "end": "1989840"
  },
  {
    "text": "to talk to the brokers assuming that the brokers can talk to service manager",
    "start": "1989840",
    "end": "1996070"
  },
  {
    "text": "they will or won't yeah yeah",
    "start": "2000930",
    "end": "2011169"
  },
  {
    "text": "so in one of your diagrams you showed other kubernetes clusters so called",
    "start": "2011590",
    "end": "2017049"
  },
  {
    "text": "referencing services within another kubernetes cluster is that something that supported or does misinterpret that",
    "start": "2017049",
    "end": "2022629"
  },
  {
    "text": "slide well that was that was more of that you would front your applications",
    "start": "2022629",
    "end": "2029049"
  },
  {
    "text": "as OS B services so you would create a service broker your team would create a",
    "start": "2029049",
    "end": "2034570"
  },
  {
    "text": "service broker exposing your application and then other teams could because if you expose it as a kubernetes service as",
    "start": "2034570",
    "end": "2041889"
  },
  {
    "text": "long as there is the network and connectivity it all plays plugs in and plays well last question",
    "start": "2041889",
    "end": "2051388"
  },
  {
    "text": "from the documentation I got an impression that this whole parody is pretty much provider oriented service",
    "start": "2052940",
    "end": "2058849"
  },
  {
    "text": "provider oriented what about to use this pattern for integration of external",
    "start": "2058849",
    "end": "2066289"
  },
  {
    "text": "services external a relative to kubernetes cluster but inside of enterprise for example database Kafka message",
    "start": "2066289",
    "end": "2072919"
  },
  {
    "text": "broker what I miss here where where to find",
    "start": "2072919",
    "end": "2078020"
  },
  {
    "text": "already-existing bro complementation service broker presentations for for such initiatives I",
    "start": "2078020",
    "end": "2085940"
  },
  {
    "text": "mean can't imagine that everybody should implement provisioning of Postgres",
    "start": "2085940",
    "end": "2091490"
  },
  {
    "text": "database user yourself themselves",
    "start": "2091490",
    "end": "2095260"
  },
  {
    "text": "there there are some like so if I if I",
    "start": "2097520",
    "end": "2102720"
  },
  {
    "text": "understand your question correctly are you asking what is the so the tools",
    "start": "2102720",
    "end": "2111030"
  },
  {
    "text": "provided in order to be able to easily create brokers mm-hmm so that's we have an OSP starter kit",
    "start": "2111030",
    "end": "2119040"
  },
  {
    "text": "from Paul Morey Red Hat is one of the implementations I think Scott Nichols",
    "start": "2119040",
    "end": "2124260"
  },
  {
    "text": "from Google he has a different OS B starter kit okay okay nice and that's",
    "start": "2124260",
    "end": "2134370"
  },
  {
    "text": "also something that we've we just talked about a couple weeks ago at the open",
    "start": "2134370",
    "end": "2139470"
  },
  {
    "text": "service broker API face to face is we really need to provide tools to make it",
    "start": "2139470",
    "end": "2146430"
  },
  {
    "text": "really easy to provide brokers",
    "start": "2146430",
    "end": "2150020"
  },
  {
    "text": "yes",
    "start": "2154619",
    "end": "2157248"
  },
  {
    "text": "and I think Microsoft has a helm sort of broker as well yeah so that",
    "start": "2170610",
    "end": "2178819"
  },
  {
    "text": "all right thank you everybody [Applause]",
    "start": "2181430",
    "end": "2188339"
  }
]