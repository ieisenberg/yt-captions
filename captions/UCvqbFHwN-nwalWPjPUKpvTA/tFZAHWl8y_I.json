[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "thank you everyone for joining today this is the Jaeger project deep dive",
    "start": "60",
    "end": "5250"
  },
  {
    "text": "my name is julissa Shawn Crowley I'm a software engineer at Red Hat and I work",
    "start": "5250",
    "end": "10500"
  },
  {
    "text": "at the chaotic project more specifically under disability tracing team meaning that I work mostly",
    "start": "10500",
    "end": "16108"
  },
  {
    "text": "on Jaeger and open tracing now how many of you were here yesterday for the",
    "start": "16109",
    "end": "21210"
  },
  {
    "text": "project intro yeah good perfect so just like yesterday I'm starting with",
    "start": "21210",
    "end": "28680"
  },
  {
    "text": "some assumptions about your knowledge right so let's we have only 35 minutes again and I'll then just move relatively",
    "start": "28680",
    "end": "38640"
  },
  {
    "start": "30000",
    "end": "142000"
  },
  {
    "text": "quickly and I'm starting from where I left yesterday just for those who were",
    "start": "38640",
    "end": "44879"
  },
  {
    "text": "not here yesterday our context here for you is micro-services so we are solving",
    "start": "44879",
    "end": "51390"
  },
  {
    "text": "a problem that is very common in micro-services the problem the observability problem or specifically",
    "start": "51390",
    "end": "57180"
  },
  {
    "text": "where one of the pillars of observability daughter to be another",
    "start": "57180",
    "end": "62969"
  },
  {
    "text": "2min matrix and logging right we talked yesterday about what is the tracing why",
    "start": "62969",
    "end": "69510"
  },
  {
    "text": "is it needed why is it relevant for micro services we talked at why open tracing so why open tracing is required",
    "start": "69510",
    "end": "76740"
  },
  {
    "text": "or what it were are the advantages of open tracing what is the context why was",
    "start": "76740",
    "end": "82740"
  },
  {
    "text": "it formed and we left off with a slide like this one right so telling their",
    "start": "82740",
    "end": "89220"
  },
  {
    "text": "Jaeger architecture so just to recap this slide from yesterday",
    "start": "89220",
    "end": "95780"
  },
  {
    "text": "Iger is a set of components there is one that runs alongside with your",
    "start": "95780",
    "end": "102240"
  },
  {
    "text": "application and that's the component that is that is responsible for",
    "start": "102240",
    "end": "107759"
  },
  {
    "text": "capturing the data and sending somewhere right and this is the the Jaeger client",
    "start": "107759",
    "end": "113729"
  },
  {
    "text": "and the client when when we think about Java or goal it's a library that you",
    "start": "113729",
    "end": "119430"
  },
  {
    "text": "ship with your application either part of the binary in goal or as a jar in",
    "start": "119430",
    "end": "125159"
  },
  {
    "text": "your wor packaging or a jar packaging for Java now that that [Music]",
    "start": "125159",
    "end": "131310"
  },
  {
    "text": "that client sends data to an agent or to a collector the collector writes data to",
    "start": "131310",
    "end": "137490"
  },
  {
    "text": "the storage and the query the query service reads from storage right so Mars",
    "start": "137490",
    "end": "143550"
  },
  {
    "start": "142000",
    "end": "282000"
  },
  {
    "text": "going tip dive into the client the client is the party that is responsible",
    "start": "143550",
    "end": "149670"
  },
  {
    "text": "for actually building these pens right so if you remember yesterday span is a data structure that records the time",
    "start": "149670",
    "end": "157380"
  },
  {
    "text": "information so how long when when a span started and how long it took to finish",
    "start": "157380",
    "end": "162710"
  },
  {
    "text": "it also stores a log information if you tell it to tags and and it may also",
    "start": "162710",
    "end": "172140"
  },
  {
    "text": "carry data along to you know each other the child's events like baggage items",
    "start": "172140",
    "end": "178430"
  },
  {
    "text": "the Jaeger client packs data into this pen and dispatches to an agent in the",
    "start": "178430",
    "end": "187410"
  },
  {
    "text": "default case the agent is something that is running locally like localhost and",
    "start": "187410",
    "end": "194450"
  },
  {
    "text": "sends data via UDP meaning the client itself can be very thin and it should",
    "start": "194450",
    "end": "201420"
  },
  {
    "text": "never fail right so if there is a problem in sending data to the agent it",
    "start": "201420",
    "end": "206970"
  },
  {
    "text": "will just you know not care about so it's it logs metrics so the client has a",
    "start": "206970",
    "end": "213510"
  },
  {
    "text": "metric standpoint or you can extract metrics and consume that on Prometheus so you know that X spends or X traces",
    "start": "213510",
    "end": "221520"
  },
  {
    "text": "were expected to be seen on the server but if you're seeing less number of traces and then you have a networking",
    "start": "221520",
    "end": "229260"
  },
  {
    "text": "problem somewhere the client is extensible so you can",
    "start": "229260",
    "end": "234870"
  },
  {
    "text": "implement your own senders like HTTP center and UDP centers are two that we",
    "start": "234870",
    "end": "240180"
  },
  {
    "text": "have so if you need a different one you can implement those and different reporters as well yeah so as I mentioned",
    "start": "240180",
    "end": "247920"
  },
  {
    "text": "it emits internal metrics for the Java client you can plug a micrometer",
    "start": "247920",
    "end": "254400"
  },
  {
    "text": "integration and with that you can plug any micrometer back-end that you want",
    "start": "254400",
    "end": "259440"
  },
  {
    "text": "all right so who if you're familiar with micrometer okay yeah cool so yeah you can plug that",
    "start": "259440",
    "end": "267250"
  },
  {
    "text": "means one micrometer back end is for me it's right so you can get this information for me to use quite easily",
    "start": "267250",
    "end": "272680"
  },
  {
    "text": "or stats D or jmx or any other backend that is supported by a micrometer so it",
    "start": "272680",
    "end": "280150"
  },
  {
    "text": "is a client so the agent again it's a",
    "start": "280150",
    "end": "286090"
  },
  {
    "start": "282000",
    "end": "574000"
  },
  {
    "text": "component that sits very close to the client usually localhost now what localhost means today is quite",
    "start": "286090",
    "end": "293200"
  },
  {
    "text": "cloudy right so yeah so we don't know what localhost is is it the the bare",
    "start": "293200",
    "end": "300580"
  },
  {
    "text": "metal that we're running on or is it in Cuba this context this is the node or is",
    "start": "300580",
    "end": "306130"
  },
  {
    "text": "it the pod right so yeah so for our case",
    "start": "306130",
    "end": "311710"
  },
  {
    "text": "here we just say it sits close to the client the agent acts as a buffer so",
    "start": "311710",
    "end": "319030"
  },
  {
    "text": "when we are talking about bare metal we may have one agent in several services",
    "start": "319030",
    "end": "324880"
  },
  {
    "text": "running on the same bare metal on the same server and all they all send data to the same agent agent piles spent data",
    "start": "324880",
    "end": "333010"
  },
  {
    "text": "and and cents to the collector it receives data via UDP and sends data to",
    "start": "333010",
    "end": "340210"
  },
  {
    "text": "a collector somewhere science via TCP by a usual thrift or regular HTTP call now",
    "start": "340210",
    "end": "351460"
  },
  {
    "text": "the collector the collectors sole purpose is to write data today storage",
    "start": "351460",
    "end": "358560"
  },
  {
    "text": "not sounds quite simple but when we are talking about storage nothing is really",
    "start": "358560",
    "end": "364210"
  },
  {
    "text": "simple is it so we write two elasticsearch and cassandra we also have",
    "start": "364210",
    "end": "372340"
  },
  {
    "text": "an in-memory datastore so ephemeral but we also accept the agriculture also",
    "start": "372340",
    "end": "378520"
  },
  {
    "text": "accepts data in different formats so if you have a client instrument using Zipkin libraries bigger collector can",
    "start": "378520",
    "end": "385810"
  },
  {
    "text": "accept that and also your client may talk the j√§ger protocols directly from",
    "start": "385810",
    "end": "393160"
  },
  {
    "text": "your client to your collector so bypassing the agent if your environment does not support UDP",
    "start": "393160",
    "end": "398800"
  },
  {
    "text": "for instance and then we have the Jaeger query the eager query is usually bundled",
    "start": "398800",
    "end": "408820"
  },
  {
    "text": "with the UI so technically the UI and the query there are different components the query is only a rest service that",
    "start": "408820",
    "end": "416110"
  },
  {
    "text": "accepts queries and gets data from the vacuum storage and returns JSON it",
    "start": "416110",
    "end": "424800"
  },
  {
    "text": "usually comes with a y so there Y is what we've seen yesterday you know it's",
    "start": "424800",
    "end": "430120"
  },
  {
    "text": "assembles that JSON in a easy to consume format for you know humans yeah we",
    "start": "430120",
    "end": "439300"
  },
  {
    "text": "actually thought about splitting the Y with the query but we see no real purpose on earth because the query is",
    "start": "439300",
    "end": "446020"
  },
  {
    "text": "the least of your problems when you're trying to scale alright so it's only a limited amount of people looking at the",
    "start": "446020",
    "end": "451090"
  },
  {
    "text": "traces but you have a very high number of people or machines writing data so",
    "start": "451090",
    "end": "456370"
  },
  {
    "text": "the query is the we have no benefits in splitting the Y right so this is the",
    "start": "456370",
    "end": "465010"
  },
  {
    "text": "main overview for the components themselves now it's a deep dive meaning",
    "start": "465010",
    "end": "470830"
  },
  {
    "text": "I have to show you how to configure it or tell you how to configure j√§ger so",
    "start": "470830",
    "end": "476350"
  },
  {
    "text": "there are the main idea for the components for the back back-end components for j√§ger if you follow this",
    "start": "476350",
    "end": "483070"
  },
  {
    "text": "idea from the 12 factor apps that your application should be configurable through a different sources of your mate",
    "start": "483070",
    "end": "490450"
  },
  {
    "text": "of you know from from different sources so configuration file environment",
    "start": "490450",
    "end": "495640"
  },
  {
    "text": "variables and comment line interface switches or options so the first part is",
    "start": "495640",
    "end": "504490"
  },
  {
    "text": "how we can configure using a cuban ideas config map this copy and paste from one",
    "start": "504490",
    "end": "510370"
  },
  {
    "text": "of our examples so you specify config map and within the data for that for",
    "start": "510370",
    "end": "515530"
  },
  {
    "text": "that key you specify spam - storage - type on Cassandra if you want to specify",
    "start": "515530",
    "end": "522370"
  },
  {
    "text": "Cassandra data register you can override that by passing a",
    "start": "522370",
    "end": "528620"
  },
  {
    "text": "a command-line interface option like means being storage - spender type is memory equals memories if you want to",
    "start": "528620",
    "end": "535310"
  },
  {
    "text": "use the in memory but in some cases you also want to just export an environment",
    "start": "535310",
    "end": "542000"
  },
  {
    "text": "variable it's easy in docker for docker containers usually you can a can do a",
    "start": "542000",
    "end": "547430"
  },
  {
    "text": "docker run - II and then environment variable and that's easier then using",
    "start": "547430",
    "end": "554089"
  },
  {
    "text": "the command-line interface option for instance so this is the pattern I'm not going to show you all the options the",
    "start": "554089",
    "end": "560839"
  },
  {
    "text": "easy way of finding those options is you know docker run and then ministry needs help it prints everything or if you have the",
    "start": "560839",
    "end": "567620"
  },
  {
    "text": "binary just run the binary ministry yourself we try to document every option so so and so if you if you are looking",
    "start": "567620",
    "end": "577550"
  },
  {
    "text": "for tuning yogur we provide some options some hooks one of them or perhaps the",
    "start": "577550",
    "end": "584779"
  },
  {
    "text": "tube more important ones are queue size and workers so you can if your machine",
    "start": "584779",
    "end": "590089"
  },
  {
    "text": "is really beefy you can increase the number of workers and if you have a lot of memory you can increase the queue",
    "start": "590089",
    "end": "596480"
  },
  {
    "text": "size and you can also if you if you have a lot of requests coming in if you have",
    "start": "596480",
    "end": "602000"
  },
  {
    "text": "a lot of data to digest you may want to play with a simply right so instead of",
    "start": "602000",
    "end": "607070"
  },
  {
    "text": "sampling every single request that comes in you may want a sample I don't want percent of the requests or you can",
    "start": "607070",
    "end": "613250"
  },
  {
    "text": "specify a different strategy and so",
    "start": "613250",
    "end": "618500"
  },
  {
    "text": "strategies are something that we are that you know we are planning on improving so it's on the roadmap",
    "start": "618500",
    "end": "625660"
  },
  {
    "text": "especially the adaptive sampling but roadmap something that I have for later",
    "start": "625660",
    "end": "632140"
  },
  {
    "text": "another another aspect of the backend",
    "start": "632140",
    "end": "637430"
  },
  {
    "start": "633000",
    "end": "706000"
  },
  {
    "text": "components that we have is a support for exposing telemetry data so it's both",
    "start": "637430",
    "end": "643490"
  },
  {
    "text": "exposing metrics right so by the fall we expose data in Prometheus firmage so we provide an endpoint with a bunch of",
    "start": "643490",
    "end": "651290"
  },
  {
    "text": "metrics like how many traces were started how many of those were finished so you should have a one to one",
    "start": "651290",
    "end": "657560"
  },
  {
    "text": "relationship most of the time so it's okay to have some is not finished but if you have a big",
    "start": "657560",
    "end": "663380"
  },
  {
    "text": "number unfinished then you have a problem somewhere right the same as the number of expense that were reported and",
    "start": "663380",
    "end": "669890"
  },
  {
    "text": "so on so forth so there are two backends",
    "start": "669890",
    "end": "676730"
  },
  {
    "text": "that we support right now X part expires or XP bar which is I think the default",
    "start": "676730",
    "end": "684950"
  },
  {
    "text": "Fargo and Prometheus which is a default for everything right so everybody's talking Prometheus oh yeah so that was",
    "start": "684950",
    "end": "694760"
  },
  {
    "text": "it for the configuration monitoring and you know that the simple parts of the",
    "start": "694760",
    "end": "700520"
  },
  {
    "text": "back end and now we talk more about how to run it so the simplest way of running",
    "start": "700520",
    "end": "709180"
  },
  {
    "start": "706000",
    "end": "765000"
  },
  {
    "text": "Jaeger is the all-in-one docker image it's also known as the standalone if you",
    "start": "709180",
    "end": "715550"
  },
  {
    "text": "download the binary from the github release page and this is as the name",
    "start": "715550",
    "end": "722540"
  },
  {
    "text": "implies it's a package that contains everything right so you just run the binary and it starts the collector the",
    "start": "722540",
    "end": "728780"
  },
  {
    "text": "query the agent the why everything on the same process opens a bunch of ports",
    "start": "728780",
    "end": "735140"
  },
  {
    "text": "and you can start interacting with it this is quite ok and it's you know it's",
    "start": "735140",
    "end": "743510"
  },
  {
    "text": "it's quite easy to use and if you have only one servers one one server with one",
    "start": "743510",
    "end": "751340"
  },
  {
    "text": "service running on the same server that's what you should be using but",
    "start": "751340",
    "end": "758180"
  },
  {
    "text": "that's not always the case you're not always using you know one server with one service everything there then you",
    "start": "758180",
    "end": "765860"
  },
  {
    "start": "765000",
    "end": "865000"
  },
  {
    "text": "probably want to use a deployment protection let me call it so it's not that the other one is not suitable for production it's just that this use case",
    "start": "765860",
    "end": "772910"
  },
  {
    "text": "is probably what you want to use when you go to production because each component is a binary so the collector",
    "start": "772910",
    "end": "779210"
  },
  {
    "text": "is a binary the agent is a binary the query UI is another binary on kubernetes",
    "start": "779210",
    "end": "785450"
  },
  {
    "text": "you could apply them on their own pods and scale them up and down accordingly",
    "start": "785450",
    "end": "790750"
  },
  {
    "text": "all right so to help you with that we provide some openshift in kubernetes templates it's as easy as cooker all munis f apply",
    "start": "790750",
    "end": "799639"
  },
  {
    "text": "min as a fan and the template file the tricky part here is storage so for",
    "start": "799639",
    "end": "807740"
  },
  {
    "text": "those of you who have played with the storage on kubernetes or on any other a scalable environment you know that",
    "start": "807740",
    "end": "812959"
  },
  {
    "text": "storage is a tricky part alright so the word of caution here is do not use our",
    "start": "812959",
    "end": "818809"
  },
  {
    "text": "storage templates use bring your own storage template so we provide some for",
    "start": "818809",
    "end": "823850"
  },
  {
    "text": "guidance elastic search and Cassandra but you should really look into you know",
    "start": "823850",
    "end": "829759"
  },
  {
    "text": "apply that to your infra so if you have a ready Cassandra use the same the same",
    "start": "829759",
    "end": "836660"
  },
  {
    "text": "patterns that you are using for other applications and we also have a",
    "start": "836660",
    "end": "841910"
  },
  {
    "text": "community contributed helm chart it's been a while since I personally use it but I do recommend you take another look",
    "start": "841910",
    "end": "847850"
  },
  {
    "text": "and see if that helps you I know it it just helped a lot of people so so that's",
    "start": "847850",
    "end": "856759"
  },
  {
    "text": "the main idea for a deployment you know the main two options is the all-in-one or production the next one is talking",
    "start": "856759",
    "end": "864980"
  },
  {
    "text": "about the agent so I kind of hinted it earlier that we don't know what local",
    "start": "864980",
    "end": "870319"
  },
  {
    "start": "865000",
    "end": "1018000"
  },
  {
    "text": "host trees right so when we are you know some years ago it was quite easy is",
    "start": "870319",
    "end": "875600"
  },
  {
    "text": "local host is local host and that's it once you sell one two seven zero zero one that's it bare metal host process a",
    "start": "875600",
    "end": "882350"
  },
  {
    "text": "host level process that's it now on kubernetes we have at least two options",
    "start": "882350",
    "end": "887809"
  },
  {
    "text": "for interpreting as local host it's either the node where the pot is",
    "start": "887809",
    "end": "893569"
  },
  {
    "text": "running or the pot itself we could also argue that it's a container but it",
    "start": "893569",
    "end": "898939"
  },
  {
    "text": "doesn't make sense three so we have then two options of running the agent for",
    "start": "898939",
    "end": "906050"
  },
  {
    "text": "kubernetes as a demo set or as a sidecar so as a daemon set you probably you",
    "start": "906050",
    "end": "913670"
  },
  {
    "text": "probably want to use a demo set when you have all the pots on that node running",
    "start": "913670",
    "end": "920269"
  },
  {
    "text": "belonging to the same tenant or having the same sort of security concerns right",
    "start": "920269",
    "end": "926420"
  },
  {
    "text": "so they belong to the same owner basically if you are a deploying year or the agent",
    "start": "926420",
    "end": "933490"
  },
  {
    "text": "in a in a machine that is that belongs to one company alone if you're not a like a cloud provider then it's probably",
    "start": "933490",
    "end": "940480"
  },
  {
    "text": "okay to have as a diamond setter now the tricky part is the agent has a long-lived connection to a collector so",
    "start": "940480",
    "end": "947890"
  },
  {
    "text": "if you have ten collectors but one node it means you have one agent talking to one collector alone all right so you",
    "start": "947890",
    "end": "954459"
  },
  {
    "text": "have if you have a lot of data you probably do not want to use a demo set you probably want to use a sidecar so",
    "start": "954459",
    "end": "960970"
  },
  {
    "text": "that you spread your load throughout during from and the sidecar approach is",
    "start": "960970",
    "end": "966580"
  },
  {
    "text": "I think I don't need to tell what sidecar is so the second container in",
    "start": "966580",
    "end": "973270"
  },
  {
    "text": "the pod would be the agent and your application the main container for the",
    "start": "973270",
    "end": "979360"
  },
  {
    "text": "pod sends data to the agent by a local host and that agent that makes a",
    "start": "979360",
    "end": "985089"
  },
  {
    "text": "long-lived connection to the collector so if you have 10 collectors and you have 10 instances of your service you",
    "start": "985089",
    "end": "991959"
  },
  {
    "text": "have 10 agents each one have any long-lived connection so if you then that means you know he's in theory if",
    "start": "991959",
    "end": "999670"
  },
  {
    "text": "you use all your collectors so this about the point the agent now one",
    "start": "999670",
    "end": "1008880"
  },
  {
    "text": "question that came a couple of times already was",
    "start": "1008880",
    "end": "1013920"
  },
  {
    "text": "how about multi-tenancy how about if I want to run Jaeger in a multi-tenancy setup and then we ask you what is",
    "start": "1013920",
    "end": "1022260"
  },
  {
    "start": "1018000",
    "end": "1073000"
  },
  {
    "text": "multi-tenancy then for eager alright so there are several aspects of",
    "start": "1022260",
    "end": "1027660"
  },
  {
    "text": "multi-tenancy that are not well defined for us so what is Tennessee is it",
    "start": "1027660",
    "end": "1033510"
  },
  {
    "text": "Tennessee at this pain level at you know is the application being traced multi-tenant and should they spend",
    "start": "1033510",
    "end": "1040020"
  },
  {
    "text": "reported by that application go to different a very instances or should you",
    "start": "1040020",
    "end": "1045510"
  },
  {
    "text": "know Jaeger you use different name spaces for different applications so there are quite a few questions about",
    "start": "1045510",
    "end": "1051330"
  },
  {
    "text": "what is multi-tenancy free ager and we",
    "start": "1051330",
    "end": "1057770"
  },
  {
    "text": "we cannot pretend to know that we know all the use case",
    "start": "1057770",
    "end": "1063120"
  },
  {
    "text": "and you know we just easy microservices approach which is don't do that I mean",
    "start": "1063120",
    "end": "1069390"
  },
  {
    "text": "that something else do that in your name and because the the the components",
    "start": "1069390",
    "end": "1077490"
  },
  {
    "start": "1073000",
    "end": "1137000"
  },
  {
    "text": "themselves they are lightweight we we can afford to have multiple installations of figure in our infra",
    "start": "1077490",
    "end": "1083130"
  },
  {
    "text": "alright so if you have two or three tenants each one of those in a concubine areas namespace or in a OpenShift",
    "start": "1083130",
    "end": "1089850"
  },
  {
    "text": "project you can just then just install a Jaeger in one in each of those",
    "start": "1089850",
    "end": "1095400"
  },
  {
    "text": "namespaces right I think the overhead for that for the agent it's like the 20 megabytes so the",
    "start": "1095400",
    "end": "1102960"
  },
  {
    "text": "binary is only 20 megabytes and the whole infra the whole binary they stand alone is less than 30 megabytes so it's",
    "start": "1102960",
    "end": "1109080"
  },
  {
    "text": "not that expensive to have multiple instances of error and even if you",
    "start": "1109080",
    "end": "1117000"
  },
  {
    "text": "cannot solve this problem by playing with your deployment architecture by",
    "start": "1117000",
    "end": "1122429"
  },
  {
    "text": "playing with namespaces by playing with setting agents talking to you know different collectors you can is to",
    "start": "1122429",
    "end": "1130670"
  },
  {
    "text": "extend the client to implement your own tenancy model alright so in that case we",
    "start": "1130670",
    "end": "1139500"
  },
  {
    "start": "1137000",
    "end": "1226000"
  },
  {
    "text": "would be having the client so this is an",
    "start": "1139500",
    "end": "1144750"
  },
  {
    "text": "image of the the traditional model I would call it where one agent talks to",
    "start": "1144750",
    "end": "1150210"
  },
  {
    "text": "one collector belonging to a tenant and if there is another application we have",
    "start": "1150210",
    "end": "1157050"
  },
  {
    "text": "the same but talking to a different so we just duplicating from right so and it's not that expensive now the second",
    "start": "1157050",
    "end": "1163440"
  },
  {
    "text": "one is we may implement a different reporter and or sender with our own",
    "start": "1163440",
    "end": "1170220"
  },
  {
    "text": "requirements and make them choose which collector to talk to right so in that",
    "start": "1170220",
    "end": "1176130"
  },
  {
    "text": "case the knowledge is on the client side closer to your application than to the in front so we hope that with this",
    "start": "1176130",
    "end": "1184740"
  },
  {
    "text": "solution multi-tenancy is solved by",
    "start": "1184740",
    "end": "1189960"
  },
  {
    "text": "basically doing nothing right so but you guys can do it yeah so if it is not if you have so if",
    "start": "1189960",
    "end": "1199360"
  },
  {
    "text": "you have a scenario where you cannot fix by any of those strategies but then join",
    "start": "1199360",
    "end": "1206440"
  },
  {
    "text": "the community and let's discuss that you know it is we're quite open to do to",
    "start": "1206440",
    "end": "1211450"
  },
  {
    "text": "doing something as long as it makes sense that as long as it benefits a big number of people now a very similar",
    "start": "1211450",
    "end": "1222510"
  },
  {
    "text": "approach we took with regards to security all right so what is security",
    "start": "1222510",
    "end": "1230440"
  },
  {
    "start": "1226000",
    "end": "1585000"
  },
  {
    "text": "for us so what should we protect should we protect the agent so should we trust",
    "start": "1230440",
    "end": "1235600"
  },
  {
    "text": "that the agent is receiving data from untrusted sources like do we have micro",
    "start": "1235600",
    "end": "1240940"
  },
  {
    "text": "services in our infraorbital areas cluster which are not trusted or should",
    "start": "1240940",
    "end": "1246070"
  },
  {
    "text": "we just assume that everything that is running there is running there for a reason and we trust people who deploy those so there are scenarios where like",
    "start": "1246070",
    "end": "1255220"
  },
  {
    "text": "in startups which was every code that is running there in theory right but for banks or for healthcare we",
    "start": "1255220",
    "end": "1261520"
  },
  {
    "text": "probably want to do some more security tightening there and just like with",
    "start": "1261520",
    "end": "1267850"
  },
  {
    "text": "multi-tenancy it looks like everyone has a different requirement and again",
    "start": "1267850",
    "end": "1274080"
  },
  {
    "text": "because the components are lightweight we can afford to also have you know to",
    "start": "1274080",
    "end": "1279250"
  },
  {
    "text": "duplicate or to have a auditor components order to delegate those things to other parts of the infra like",
    "start": "1279250",
    "end": "1288309"
  },
  {
    "text": "security proxies all right so if you want to protect the collector we can place an OAuth proxy in",
    "start": "1288309",
    "end": "1294520"
  },
  {
    "text": "front of the collector and then get the agent or the client just send an OAuth",
    "start": "1294520",
    "end": "1299559"
  },
  {
    "text": "token to the collector all right so we completely got security off of our client and of our collector and still",
    "start": "1299559",
    "end": "1307000"
  },
  {
    "text": "it's quite useful for most people alright so one feature that is missing",
    "start": "1307000",
    "end": "1312010"
  },
  {
    "text": "is telling the agent to send how to get a token a bearer token or JWT how to get",
    "start": "1312010",
    "end": "1319210"
  },
  {
    "text": "it and how to send it but a client a they are able to do that already right",
    "start": "1319210",
    "end": "1324370"
  },
  {
    "text": "so they you can specify when configuring the client you can either exposing environment variable or you can",
    "start": "1324370",
    "end": "1329470"
  },
  {
    "text": "just configure the client programmatically saying this is the username and password or the bearer",
    "start": "1329470",
    "end": "1335230"
  },
  {
    "text": "token to be used the collector itself is not aware of the security part because",
    "start": "1335230",
    "end": "1340710"
  },
  {
    "text": "the proxy runs before it so if it got a request and it's then it's acceptable",
    "start": "1340710",
    "end": "1348520"
  },
  {
    "text": "right there is a an example of how to do that using key clock click clock is a",
    "start": "1348520",
    "end": "1354280"
  },
  {
    "text": "single sign-on solution open-source project as well and you know it just",
    "start": "1354280",
    "end": "1359590"
  },
  {
    "text": "works right so why should we do this kind of thing on eager if we can",
    "start": "1359590",
    "end": "1365380"
  },
  {
    "text": "leverage other parts of the in front now on east geo we could use as well",
    "start": "1365380",
    "end": "1373179"
  },
  {
    "text": "multiple Telus connections so that we trust that we are talking to services which are trusted in our infra so if you",
    "start": "1373179",
    "end": "1381820"
  },
  {
    "text": "have experience with issue and if you know how to do that yeah feel free to come to us afterwards it would be a nice",
    "start": "1381820",
    "end": "1390130"
  },
  {
    "text": "blog post by the way so yeah and again the same with multi-tenancy",
    "start": "1390130",
    "end": "1395980"
  },
  {
    "text": "if your security requirements they are not they cannot be satisfied with the",
    "start": "1395980",
    "end": "1402460"
  },
  {
    "text": "scenario you can extreme point your own reporter right so it's extensible yeah",
    "start": "1402460",
    "end": "1410290"
  },
  {
    "text": "so the road map so we we have in the roadmap for for j√§ger those three",
    "start": "1410290",
    "end": "1416980"
  },
  {
    "text": "features the first one is data pipeline right so imagine that you that we are",
    "start": "1416980",
    "end": "1422470"
  },
  {
    "text": "receiving spans and instead of just letting data flow to Cassandra or elasticsearch we want also to have this",
    "start": "1422470",
    "end": "1430150"
  },
  {
    "text": "data on spark we want to have some knowledge about this data we want to do some extract insights from it we want to",
    "start": "1430150",
    "end": "1440040"
  },
  {
    "text": "do what you know wanna understand what is the service path for a given request",
    "start": "1440040",
    "end": "1447040"
  },
  {
    "text": "pattern so that we can say well whenever my order my check-out endpoint is called then",
    "start": "1447040",
    "end": "1453280"
  },
  {
    "text": "those are the services which are involved so that when I'm doing an upgrade or you know I can see what are",
    "start": "1453280",
    "end": "1458380"
  },
  {
    "text": "the critical paths in my application so when I do end up I know well those are the things that I",
    "start": "1458380",
    "end": "1463700"
  },
  {
    "text": "have to take care of before doing the upgrade the second thing is adaptive",
    "start": "1463700",
    "end": "1469039"
  },
  {
    "text": "sampling that I mentioned before so adaptive sampling is on the fly letting the same plane change based on",
    "start": "1469039",
    "end": "1477139"
  },
  {
    "text": "our current requirements right so right now we can kinda achieve adaptive",
    "start": "1477139",
    "end": "1482690"
  },
  {
    "text": "sampling by playing with cuber NIDA spots so we could have a one service backed by two sets of deployments on",
    "start": "1482690",
    "end": "1490669"
  },
  {
    "text": "kubernetes and then or sto as well we can just switch like blue green and a B",
    "start": "1490669",
    "end": "1498469"
  },
  {
    "text": "and so on and play with sampling rates but we can do actual you know more than",
    "start": "1498469",
    "end": "1503839"
  },
  {
    "text": "that so adaptive sampling is to provide more features on a smarter decision about the",
    "start": "1503839",
    "end": "1509959"
  },
  {
    "text": "same thing so should i sample this request or should I not sample is required that's the basic decision the",
    "start": "1509959",
    "end": "1516889"
  },
  {
    "text": "third one is discharge plugging and this one is quite hot right now so we are it",
    "start": "1516889",
    "end": "1521989"
  },
  {
    "text": "we are actually working on it on this one at this moment and we are trying to",
    "start": "1521989",
    "end": "1529070"
  },
  {
    "text": "figure out what is the best way of doing storage plug-ins for our back end so the",
    "start": "1529070",
    "end": "1535579"
  },
  {
    "text": "back end is a goal application is a goal and application so there are quite a few different ways of dream plugins looks",
    "start": "1535579",
    "end": "1543139"
  },
  {
    "text": "like the preferred one was cheese-like goal plugins there is something called",
    "start": "1543139",
    "end": "1548329"
  },
  {
    "text": "the goal plugins the problem is if the plug-in code has a dependency on a on a",
    "start": "1548329",
    "end": "1553879"
  },
  {
    "text": "version of package a package a version one and the main code has you know",
    "start": "1553879",
    "end": "1559099"
  },
  {
    "text": "packaged a version two then you have both in the binary in the end and that",
    "start": "1559099",
    "end": "1564289"
  },
  {
    "text": "leads to funny situations yeah so that",
    "start": "1564289",
    "end": "1570649"
  },
  {
    "text": "was pretty much it that I had I talked actually too much we are almost we have only a few minutes",
    "start": "1570649",
    "end": "1577519"
  },
  {
    "text": "left for questions one message that I want to share with you or what I want to",
    "start": "1577519",
    "end": "1582829"
  },
  {
    "text": "ask you is to join our community so if you guys were at the keynote today there",
    "start": "1582829",
    "end": "1589429"
  },
  {
    "start": "1585000",
    "end": "1646000"
  },
  {
    "text": "was a slide where people just you know raise hands and asked asked the community for something or ask the",
    "start": "1589429",
    "end": "1595900"
  },
  {
    "text": "demo chance for something and so remember that that slide when you know",
    "start": "1595900",
    "end": "1602280"
  },
  {
    "text": "do raise your hand and ask us when you and you need something and yeah join our",
    "start": "1602280",
    "end": "1608350"
  },
  {
    "text": "community you know if you have something interesting to share feedback on how on",
    "start": "1608350",
    "end": "1614740"
  },
  {
    "text": "you did something with Jaeger so you you deploy it in some way share with us we are also happy to take",
    "start": "1614740",
    "end": "1622510"
  },
  {
    "text": "gas blog post on our medium yeah so we meet every two weeks on zoom it's open",
    "start": "1622510",
    "end": "1631240"
  },
  {
    "text": "for everyone the meeting details are on the main Jager core repository github",
    "start": "1631240",
    "end": "1637450"
  },
  {
    "text": "repository we're also active on Twitter and we also have a mailing list so it's quite easy to reach out to us yeah and",
    "start": "1637450",
    "end": "1646420"
  },
  {
    "start": "1646000",
    "end": "2204000"
  },
  {
    "text": "that's pretty much it and I think we have like seven minutes for questions if",
    "start": "1646420",
    "end": "1655570"
  },
  {
    "text": "Gloucester can be used for the backend I [Music]",
    "start": "1655570",
    "end": "1662700"
  },
  {
    "text": "understand cluster being as you know the block level storage right so it's right",
    "start": "1665550",
    "end": "1674320"
  },
  {
    "text": "we need something running on top of that so perhaps the perhaps Cassandra could use bluster or rook as I saw yesterday",
    "start": "1674320",
    "end": "1683010"
  },
  {
    "text": "as a mean - as you know the actual storage cheese but we need something",
    "start": "1683010",
    "end": "1689830"
  },
  {
    "text": "more up like a Sandra or elasticsearch",
    "start": "1689830",
    "end": "1694110"
  },
  {
    "text": "the idea is that this would be a sort of question is if there is a way of",
    "start": "1711929",
    "end": "1717519"
  },
  {
    "text": "limiting how many pens a client can report right yeah so this is a good idea",
    "start": "1717519",
    "end": "1726070"
  },
  {
    "text": "actually so this is something that I can see implemented as a as a sampling",
    "start": "1726070",
    "end": "1734440"
  },
  {
    "text": "strategy yeah sorry so you can you can talk to him and exchange later if you want so but so",
    "start": "1734440",
    "end": "1745389"
  },
  {
    "text": "also part of the adaptive sampling is blacklisting services so you could probably blacklist that service after",
    "start": "1745389",
    "end": "1751840"
  },
  {
    "text": "sometime after spamming the the agent or the collector but it's not something",
    "start": "1751840",
    "end": "1757000"
  },
  {
    "text": "that we have right now so this is a great idea so opening an issue on the get github repo with this idea I think",
    "start": "1757000",
    "end": "1764740"
  },
  {
    "text": "if it is not on people's mind right now it should be perfuming for the kernel no",
    "start": "1764740",
    "end": "1793120"
  },
  {
    "text": "not not aware of so tracing so what Jager traces is the from from the looms",
    "start": "1793120",
    "end": "1800710"
  },
  {
    "text": "perspective is the user space things so the application running on user space right and okay all right it would make",
    "start": "1800710",
    "end": "1811120"
  },
  {
    "text": "sense so I've heard this question yesterday as well so you're not the first one to ask that but it's not",
    "start": "1811120",
    "end": "1817090"
  },
  {
    "text": "something that we did or experimented with it's mostly micros versus mostly",
    "start": "1817090",
    "end": "1824320"
  },
  {
    "text": "things that are that developers you know reading writing business applications are dealing with",
    "start": "1824320",
    "end": "1830908"
  },
  {
    "text": "cases that it's useful to know what went into the right so that yeah that's",
    "start": "1831090",
    "end": "1841950"
  },
  {
    "text": "exactly what I think the guy might even be here so if you are just yeah so there",
    "start": "1841950",
    "end": "1847530"
  },
  {
    "text": "so talk to that guy so the idea is to if you have an io weight and you don't know",
    "start": "1847530",
    "end": "1852540"
  },
  {
    "text": "why you would use trace information to understand what went wrong or what's going on there right so I think he asked",
    "start": "1852540",
    "end": "1860760"
  },
  {
    "text": "him to start a conversation with the community about that so if you're also interested in this part so just join the",
    "start": "1860760",
    "end": "1867330"
  },
  {
    "text": "conversation it's easy let me take one question from",
    "start": "1867330",
    "end": "1873270"
  },
  {
    "text": "the back cause I yeah because I okay so yeah so I have two quick questions is it",
    "start": "1873270",
    "end": "1879210"
  },
  {
    "text": "possible to use ecology be instead of Cassandra you're not the first one to",
    "start": "1879210",
    "end": "1884640"
  },
  {
    "text": "ask there is actually a github issue for that so go on that github issue and give",
    "start": "1884640",
    "end": "1890130"
  },
  {
    "text": "it plus one okay and the next one what is your view on open turns open trace in",
    "start": "1890130",
    "end": "1896220"
  },
  {
    "text": "versus open census so open tracing is an",
    "start": "1896220",
    "end": "1902610"
  },
  {
    "text": "instrumentation API open census is a so do you know micrometer for Java no so",
    "start": "1902610",
    "end": "1910190"
  },
  {
    "text": "open census is a a complete set of",
    "start": "1910190",
    "end": "1917600"
  },
  {
    "text": "components to have not only tracing what also monitoring and logging for",
    "start": "1917600",
    "end": "1923130"
  },
  {
    "text": "applications so there is a Jager exporter for open census it works it's",
    "start": "1923130",
    "end": "1931470"
  },
  {
    "text": "quite different than open tracing my personal opinion is that as a so for",
    "start": "1931470",
    "end": "1938970"
  },
  {
    "text": "monitoring job applications I would use micrometer because that's what I see as a standard right now",
    "start": "1938970",
    "end": "1945110"
  },
  {
    "text": "for tracing I would use the open tracing API because that's vendor-neutral",
    "start": "1945110",
    "end": "1954170"
  },
  {
    "text": "basically so I can ship my application with a no op tracer and and I'm not",
    "start": "1954170",
    "end": "1961140"
  },
  {
    "text": "using any vendor I'm not using any tracing but the tracing hooks are there so but if you if you want a complete",
    "start": "1961140",
    "end": "1967560"
  },
  {
    "text": "solution if you want one API to do everything for you then it should certainly go with open census Spence",
    "start": "1967560",
    "end": "1993030"
  },
  {
    "text": "dropped so at the agent level I Spencer opted so if you have a mismatch between",
    "start": "1993030",
    "end": "1999180"
  },
  {
    "text": "the spans reported by the client and the the spends that you see on the server then there are spends been dropped",
    "start": "1999180",
    "end": "2004790"
  },
  {
    "text": "somewhere either the queue is whole you know at the agent side or the collector",
    "start": "2004790",
    "end": "2011300"
  },
  {
    "text": "maybe I think the collector is not dropping anything but the agent certainly is if the queue is full for",
    "start": "2011300",
    "end": "2017900"
  },
  {
    "text": "instance right so that's the first early indication of something going wrong then",
    "start": "2017900",
    "end": "2033230"
  },
  {
    "text": "the question in the front so yeah okay",
    "start": "2033230",
    "end": "2040520"
  },
  {
    "text": "cool do we have time or effort okay so we",
    "start": "2040520",
    "end": "2045980"
  },
  {
    "text": "have time for one or two questions one I",
    "start": "2045980",
    "end": "2050648"
  },
  {
    "text": "still have stickers yeah so for you're",
    "start": "2051700",
    "end": "2057980"
  },
  {
    "text": "not asked a question yep so yeah one cool idea that we are",
    "start": "2057980",
    "end": "2076759"
  },
  {
    "text": "starting to think about is like the table based simply meaning the decision",
    "start": "2076759",
    "end": "2084019"
  },
  {
    "text": "to trace or not trace is done after the fact right so we store data somewhere",
    "start": "2084019",
    "end": "2090108"
  },
  {
    "text": "and we either drop it or we record it and we send it somewhere because you may",
    "start": "2090109",
    "end": "2095358"
  },
  {
    "text": "have an error happening like three micro-services down there but the first microservice is not aware of that or you",
    "start": "2095359",
    "end": "2101930"
  },
  {
    "text": "know at that time that it started it did not know that it would fail right so it",
    "start": "2101930",
    "end": "2107329"
  },
  {
    "text": "it will place data somewhere or store data somehow and if the trace finishes",
    "start": "2107329",
    "end": "2114049"
  },
  {
    "text": "completely and there's no you know information and then it just drops somewhere along the line so perhaps the",
    "start": "2114049",
    "end": "2119329"
  },
  {
    "text": "agent perhaps the collector something would drop this data and not store on permanent storage that's one cool",
    "start": "2119329",
    "end": "2125749"
  },
  {
    "text": "feature that you can think of so",
    "start": "2125749",
    "end": "2145190"
  },
  {
    "text": "alerting so the question is whether there is alerting for j√§ger right basically there is not but there",
    "start": "2145190",
    "end": "2154459"
  },
  {
    "text": "is an open tracing contra plug that converts your spend data into metrics",
    "start": "2154459",
    "end": "2161690"
  },
  {
    "text": "and expose that to promise use and so on and then you can use that data to create",
    "start": "2161690",
    "end": "2168650"
  },
  {
    "text": "an alert right so either with alert manager from from from premises or plug any other alerting system so here itself",
    "start": "2168650",
    "end": "2176690"
  },
  {
    "text": "or you know so the trace is good for debugging an issue and not for really monitoring outside all right so",
    "start": "2176690",
    "end": "2182930"
  },
  {
    "text": "monitoring is more like metrics perhaps logs but once you see that one request",
    "start": "2182930",
    "end": "2190190"
  },
  {
    "text": "went wrong then you go and debug that one",
    "start": "2190190",
    "end": "2194410"
  },
  {
    "text": "do you have time we are sorry uh you can ask me later yeah thank you",
    "start": "2196210",
    "end": "2202580"
  },
  {
    "text": "[Applause]",
    "start": "2202580",
    "end": "2205960"
  }
]