[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "hello everyone my name is vitashokuri i'm with the open source team in aqua security",
    "start": "0",
    "end": "6240"
  },
  {
    "text": "hi and my name is amir jelby i'm the cto and co-founder of aqua security and today's session we are going to talk",
    "start": "6240",
    "end": "12880"
  },
  {
    "text": "about the party that we've identified in a one of our clusters and how we",
    "start": "12880",
    "end": "18560"
  },
  {
    "text": "could have stopped that party by applying some of the security controls of kubernetes",
    "start": "18560",
    "end": "25279"
  },
  {
    "text": "the focus of this talk is going to be scanning of your container images",
    "start": "25279",
    "end": "30640"
  },
  {
    "text": "so let's start so today when when we are talking about scanning of",
    "start": "30640",
    "end": "36000"
  },
  {
    "start": "32000",
    "end": "218000"
  },
  {
    "text": "your container images we are basically looking for three things we are looking for",
    "start": "36000",
    "end": "41040"
  },
  {
    "text": "vulnerabilities for malware and for misconfiguration inside of the container images",
    "start": "41040",
    "end": "47840"
  },
  {
    "text": "so what does it mean let's give you a small background of that so vulnerabilities mean bad code",
    "start": "47840",
    "end": "55520"
  },
  {
    "text": "usually it's components that are outdated all components that are known to be",
    "start": "55520",
    "end": "61520"
  },
  {
    "text": "vulnerable basically they have code that an attacker can leverage and exploit in order to get access to the",
    "start": "61520",
    "end": "68159"
  },
  {
    "text": "system or to collect data there is a database of vulnerabilities called nvd each vulnerability has",
    "start": "68159",
    "end": "74640"
  },
  {
    "text": "a unique identifier a description a severity between load to critical and",
    "start": "74640",
    "end": "80479"
  },
  {
    "text": "it also has the affected component what is the component and the version that has those vulnerabilities",
    "start": "80479",
    "end": "87119"
  },
  {
    "text": "and in the market today we use vulnerability scanners in order to identify those vulnerabilities in container images",
    "start": "87119",
    "end": "93520"
  },
  {
    "text": "so there are open source vulnerabilities like 3v there are also commercial options for vulnerability scanners and",
    "start": "93520",
    "end": "100000"
  },
  {
    "text": "what's in common for all of them is that they will take your container image open it up look for all of the files inside of it",
    "start": "100000",
    "end": "106640"
  },
  {
    "text": "all of the operating system all of the programming languages packages and basically match them",
    "start": "106640",
    "end": "111680"
  },
  {
    "text": "against the mvp database or in some cases other flat intelligence database of vulnerabilities and the",
    "start": "111680",
    "end": "118799"
  },
  {
    "text": "result will be the list of components that are vulnerable each component will usually have the",
    "start": "118799",
    "end": "125520"
  },
  {
    "text": "name of the vulnerability and how to fix the vulnerability basically it will have the instruction about you",
    "start": "125520",
    "end": "132000"
  },
  {
    "text": "need to fix by applying a patch upgrading your component to a newer version",
    "start": "132000",
    "end": "138160"
  },
  {
    "text": "the second thing that we are scanning today for container images is mis",
    "start": "138160",
    "end": "143520"
  },
  {
    "text": "configurations so that there are scanners today in the market that can find whether your container image has hard-coded",
    "start": "143520",
    "end": "149840"
  },
  {
    "text": "ssh keys weak ciphers of tls in some cases you don't have any",
    "start": "149840",
    "end": "155040"
  },
  {
    "text": "configuration of tls setup in your container image hardcoded passwords um those bad configurations the outcome",
    "start": "155040",
    "end": "162720"
  },
  {
    "text": "of them will be that if you are running this container",
    "start": "162720",
    "end": "167440"
  },
  {
    "text": "the image will be calling a tackle so an attacker can leverage the fact that you don't have",
    "start": "169440",
    "end": "174800"
  },
  {
    "text": "ssl setup to steal data from your organization or the fact that you have hardcoded secrets",
    "start": "174800",
    "end": "179840"
  },
  {
    "text": "in order to steal those secrets and and leverage them to connect to your infrastructure and the last item that we",
    "start": "179840",
    "end": "187920"
  },
  {
    "text": "are scanning is malware basically malware scanning means that we are taking the container image",
    "start": "187920",
    "end": "193360"
  },
  {
    "text": "we are looking at all of the files inside of it we are taking the the files and and",
    "start": "193360",
    "end": "199040"
  },
  {
    "text": "creating a sha signature out of them and then comparing this sha against the database of malware",
    "start": "199040",
    "end": "204879"
  },
  {
    "text": "in the screenshot you you can see a very popular database called virustotal basically you provide a shar value of a",
    "start": "204879",
    "end": "212159"
  },
  {
    "text": "file and as a result you get all of the malwares that are that were found for this sha value so the question is",
    "start": "212159",
    "end": "219840"
  },
  {
    "start": "218000",
    "end": "397000"
  },
  {
    "text": "if i have a scanning for vulnerabilities scanning for misconfiguration and scanning for malware",
    "start": "219840",
    "end": "225599"
  },
  {
    "text": "am i protected and the answer is no there is still a blind spot",
    "start": "225599",
    "end": "233120"
  },
  {
    "text": "there is something called evasive malware evasive malware are the malwares that are basically",
    "start": "233120",
    "end": "239280"
  },
  {
    "text": "hiding right there they are inside of your container image and they are hiding using either encryption or in",
    "start": "239280",
    "end": "246799"
  },
  {
    "text": "some cases they are using um techniques like tar files",
    "start": "246799",
    "end": "251840"
  },
  {
    "text": "seven layers of style files right so they are hiding inside of your container image and what they are doing they are waiting",
    "start": "251840",
    "end": "258639"
  },
  {
    "text": "for you to execute the container image in order for them to basically run the malware and decompress",
    "start": "258639",
    "end": "265680"
  },
  {
    "text": "themselves and start attacking your organization and the technique for adding an evasive",
    "start": "265680",
    "end": "272639"
  },
  {
    "text": "malware into your container image is something called a supply chain attack so what does it",
    "start": "272639",
    "end": "277759"
  },
  {
    "text": "mean it means that you as a developer you are building a container image you are leveraging open source",
    "start": "277759",
    "end": "283919"
  },
  {
    "text": "components you are leveraging public container images and inside of those open source components there might",
    "start": "283919",
    "end": "290400"
  },
  {
    "text": "be an evasive malware meaning an attacker got control on a gita project was able to",
    "start": "290400",
    "end": "296800"
  },
  {
    "text": "contribute code to the github project and basically this code is the manual it's a",
    "start": "296800",
    "end": "302560"
  },
  {
    "text": "malware that is hiding inside of the component and the same goes for a container image",
    "start": "302560",
    "end": "308800"
  },
  {
    "text": "in a public registry that you might be downloading and using and inside of this container image there is an invasive malware",
    "start": "308800",
    "end": "317039"
  },
  {
    "text": "what we have seen in the in the wild we actually have seen cases and this is a good example you can see a",
    "start": "317280",
    "end": "322560"
  },
  {
    "text": "screenshot of it where images that do not have any vulnerability when you scan them you do",
    "start": "322560",
    "end": "329120"
  },
  {
    "text": "not see any malware basically those images have evasive malware and as an example we",
    "start": "329120",
    "end": "334639"
  },
  {
    "text": "have honeypots in the internet and in those honeypots we have weak configurations of",
    "start": "334639",
    "end": "340000"
  },
  {
    "text": "ma of kubernetes and docker and what we have seen we've seen attackers trying to attack us by running",
    "start": "340000",
    "end": "347520"
  },
  {
    "text": "legitimate container images they pass all of the scanning everything was okay with them but as you are",
    "start": "347520",
    "end": "353280"
  },
  {
    "text": "running those container images basically they will download a malware from the internet this malware",
    "start": "353280",
    "end": "360800"
  },
  {
    "text": "will then start searching for ssh keys and other encrypt other tokens inside of the",
    "start": "360800",
    "end": "366800"
  },
  {
    "text": "container image and they will try to connect to other infrastructure components in your environment in order to do",
    "start": "366800",
    "end": "373199"
  },
  {
    "text": "lateral movement and to steal data and this is the party that we've seen",
    "start": "373199",
    "end": "378240"
  },
  {
    "text": "basically an innocent ma innocent container image running inside of our infrastructure",
    "start": "378240",
    "end": "384639"
  },
  {
    "text": "using of course evasive malware and then taking control on the entire environment",
    "start": "384639",
    "end": "389759"
  },
  {
    "text": "and i will now move it to itai in order to talk about how can you protect against it",
    "start": "389759",
    "end": "396639"
  },
  {
    "text": "thanks amir uh thank you for establishing the fact that uh image scanning is important however it's",
    "start": "396639",
    "end": "403280"
  },
  {
    "start": "397000",
    "end": "700000"
  },
  {
    "text": "not uh comprehensive enough there are some blind spots as you pointed pointed them out and it's probably",
    "start": "403280",
    "end": "410560"
  },
  {
    "text": "because we were looking at the container images in hoping to",
    "start": "410560",
    "end": "415759"
  },
  {
    "text": "understand what the containers would do in runtime now there is a correlation of course",
    "start": "415759",
    "end": "421120"
  },
  {
    "text": "but we know that once we start the container from the image it has a life of its own it is free to",
    "start": "421120",
    "end": "426880"
  },
  {
    "text": "do whatever it wants and we cannot predict what's going to happen at runtime just by analyzing the image",
    "start": "426880",
    "end": "435759"
  },
  {
    "text": "so the logical conclusion is that we need to look at the containers at",
    "start": "435759",
    "end": "441599"
  },
  {
    "text": "runtime in addition to scanning those images which brings us to discuss",
    "start": "441599",
    "end": "447440"
  },
  {
    "text": "runtime security runtime security is nothing new it's about monitoring",
    "start": "447440",
    "end": "454240"
  },
  {
    "text": "the containers in production collecting as much as for information as we can",
    "start": "454240",
    "end": "462000"
  },
  {
    "text": "looking for suspicious patterns or anomalies or interesting behavior and then",
    "start": "462000",
    "end": "469599"
  },
  {
    "text": "applying some policies that will allow us to block this kind of behavior there are a lot of",
    "start": "469599",
    "end": "476639"
  },
  {
    "text": "solutions for that in the market mature and effective solutions aqua security the company that we are from",
    "start": "476639",
    "end": "482639"
  },
  {
    "text": "is one of the leaders in this space but this is not what this talk is about when it comes to",
    "start": "482639",
    "end": "488879"
  },
  {
    "text": "malware assessment specifically won't you agree that it's better to make the assessment",
    "start": "488879",
    "end": "494080"
  },
  {
    "text": "before we reach the production i mean if we already know what to look",
    "start": "494080",
    "end": "499280"
  },
  {
    "text": "for if we already know what the patterns are looking like what the behavior is like we could be",
    "start": "499280",
    "end": "507199"
  },
  {
    "text": "making this assessment before production in other words what i'm saying is",
    "start": "507199",
    "end": "513360"
  },
  {
    "text": "let's shift left the runtime security from the production into earlier stages",
    "start": "513360",
    "end": "520080"
  },
  {
    "text": "such as the build and test phases of the containers so now we will need to actually run the containers as part",
    "start": "520080",
    "end": "528000"
  },
  {
    "text": "of the pipeline that leads to production we need some kind of sandbox some kind of an",
    "start": "528000",
    "end": "533360"
  },
  {
    "text": "isolated environment where we can run this uh maybe malicious containers and container technology is",
    "start": "533360",
    "end": "541600"
  },
  {
    "text": "not enough i mean container technology is providing some kind of logical isolation",
    "start": "541600",
    "end": "546880"
  },
  {
    "text": "but this is not suitable for malware assessment we need something better than that",
    "start": "546880",
    "end": "552160"
  },
  {
    "text": "we are using um virtual machines in the cloud for that we built some automation around it to make it more practical for",
    "start": "552160",
    "end": "558720"
  },
  {
    "text": "us so we are spinning these sandboxes as virtual machines in the cloud and then we are running",
    "start": "558720",
    "end": "565120"
  },
  {
    "text": "those containers inside of them and then we need a set of eyes in the",
    "start": "565120",
    "end": "570800"
  },
  {
    "text": "sandbox that tells us what's happening there we need something to observe how the container is behaving",
    "start": "570800",
    "end": "579040"
  },
  {
    "text": "and this is not your ordinary debugging troubleshooting tool that you",
    "start": "579040",
    "end": "584320"
  },
  {
    "text": "may have used from other contexts because now it needs to be able to handle malware",
    "start": "584320",
    "end": "590000"
  },
  {
    "text": "and malware may be evasive maybe tricky amir gave a few examples for how it can",
    "start": "590000",
    "end": "596560"
  },
  {
    "text": "be evasive so we need something that is very robust and very comprehensive and",
    "start": "596560",
    "end": "604079"
  },
  {
    "text": "luckily for us we have just the perfect technology to build something like that",
    "start": "604079",
    "end": "609680"
  },
  {
    "text": "on which is evpf in linux this is not a talk about edpf",
    "start": "609680",
    "end": "614720"
  },
  {
    "text": "we've actually done other talks about ebpf which you are welcome to check out but i just want to emphasize in this",
    "start": "614720",
    "end": "622399"
  },
  {
    "text": "context that edtf is what allows us to plug into the kernel and the kernel",
    "start": "622399",
    "end": "628079"
  },
  {
    "text": "is exactly where we want to be in order to handle this tricky and evasive",
    "start": "628079",
    "end": "634079"
  },
  {
    "text": "malware because the malware is running in a container in user space on top of the container",
    "start": "634079",
    "end": "640560"
  },
  {
    "text": "runtime on top of the operating system api and so on eventually it will make some call",
    "start": "640560",
    "end": "647040"
  },
  {
    "text": "into the kernel this is how operating systems work and we will be down there waiting for",
    "start": "647040",
    "end": "653519"
  },
  {
    "text": "this to happen and collect this information and ebpf is just what gives us the opportunity",
    "start": "653519",
    "end": "659600"
  },
  {
    "text": "to instrument these critical parts of the kernel and extract the information that we need",
    "start": "659600",
    "end": "665839"
  },
  {
    "text": "in order to make this the assessment so we've built some",
    "start": "665839",
    "end": "670880"
  },
  {
    "text": "tooling around that we've made an open source project in github it's called",
    "start": "670880",
    "end": "676240"
  },
  {
    "text": "tracy it's uh tracy is a cli tool that uses ebpf technology and it's",
    "start": "676240",
    "end": "682640"
  },
  {
    "text": "particularly useful in the context of assessing containers",
    "start": "682640",
    "end": "688079"
  },
  {
    "text": "and maybe malware inside of the sandbox and this is what we are using as well and this is what i will be using now",
    "start": "688079",
    "end": "695120"
  },
  {
    "text": "for the demo so actually let's switch gears into the demo",
    "start": "695120",
    "end": "700959"
  },
  {
    "start": "700000",
    "end": "720000"
  },
  {
    "text": "all right so what i want to do for the demo is work you through a few examples for",
    "start": "701519",
    "end": "707040"
  },
  {
    "text": "patterns that we've seen in malware and especially i want to show you how it looks like from the operating system",
    "start": "707040",
    "end": "713120"
  },
  {
    "text": "point of view and also how you can use tracy in order to detect those patterns so the first",
    "start": "713120",
    "end": "721600"
  },
  {
    "start": "720000",
    "end": "1147000"
  },
  {
    "text": "behavior that i want to demonstrate is something that amir has discussed this is a malware that is downloading",
    "start": "721600",
    "end": "728240"
  },
  {
    "text": "an executable from the internet and then executing it so if you scanned the image",
    "start": "728240",
    "end": "733440"
  },
  {
    "text": "you will find nothing using static scanning but if you run the image it's very easy to see",
    "start": "733440",
    "end": "738720"
  },
  {
    "text": "that it's downloaded with something so what i'm doing here i'm using wget",
    "start": "738720",
    "end": "744240"
  },
  {
    "text": "which is a utility that is almost on any linux and i am setting the output into a local",
    "start": "744240",
    "end": "752240"
  },
  {
    "text": "file called drop and i have a file here that i've prepared this is",
    "start": "752240",
    "end": "757920"
  },
  {
    "text": "just a very simple hello world executable",
    "start": "757920",
    "end": "764079"
  },
  {
    "text": "and after i download it i need to make it an executable",
    "start": "764079",
    "end": "770240"
  },
  {
    "text": "and then i can actually execute in the background i will start tracing",
    "start": "770959",
    "end": "778880"
  },
  {
    "text": "with the following flags so i'm telling tracy to trace the exact ve",
    "start": "778880",
    "end": "786320"
  },
  {
    "text": "system core which is what used to start new executables",
    "start": "786320",
    "end": "791519"
  },
  {
    "text": "the socket and connect system calls which are used to communicate with remote endpoints",
    "start": "791519",
    "end": "796639"
  },
  {
    "text": "the vfs write function which is um instrumenting writes into files so",
    "start": "796639",
    "end": "802480"
  },
  {
    "text": "basically these three events uh tells us that there was a file",
    "start": "802480",
    "end": "808160"
  },
  {
    "text": "download if we take a close look there and finally the file change mode at",
    "start": "808160",
    "end": "814000"
  },
  {
    "text": "system call which is used by uh geomod binary in order to make the permission",
    "start": "814000",
    "end": "819279"
  },
  {
    "text": "change and i'm going to also filter the output from tracy",
    "start": "819279",
    "end": "825440"
  },
  {
    "text": "because it's going to be a little bit noisy for only things that originate from this",
    "start": "825440",
    "end": "830639"
  },
  {
    "text": "shell here because i want it to be more readable so let's check for a second",
    "start": "830639",
    "end": "836959"
  },
  {
    "text": "the process id here and this process id is included in the output of traces so",
    "start": "836959",
    "end": "842079"
  },
  {
    "text": "we can just filter for it right so i am starting tracy",
    "start": "842079",
    "end": "850880"
  },
  {
    "text": "and then i will initiate this sequence of commands",
    "start": "851040",
    "end": "857839"
  },
  {
    "text": "which will again just to remind you download from this url to this file make it an executable forgot",
    "start": "858320",
    "end": "866560"
  },
  {
    "text": "to specify the filename and then execute it so it's downloading",
    "start": "866560",
    "end": "875040"
  },
  {
    "text": "file already downloaded and we have hello world i can stop tracing now",
    "start": "875040",
    "end": "880959"
  },
  {
    "text": "and we can observe the output so what can tracy tell us first of all zesh which is my shell",
    "start": "880959",
    "end": "888880"
  },
  {
    "text": "has executed the wgets command and these are the arguments this is very",
    "start": "888880",
    "end": "894079"
  },
  {
    "text": "useful because it maybe i didn't have access to the original script here but i can still see from the os point of",
    "start": "894079",
    "end": "901199"
  },
  {
    "text": "view what happened then i see that w get to control and it started to do some stuff so we see",
    "start": "901199",
    "end": "908079"
  },
  {
    "text": "the socket and connect a few times here i guess that this is the ip",
    "start": "908079",
    "end": "913600"
  },
  {
    "text": "that we are downloading from over https",
    "start": "913600",
    "end": "918800"
  },
  {
    "text": "and then there's a vfs right because we are um writing to the file actually here so",
    "start": "918800",
    "end": "924480"
  },
  {
    "text": "these four events here are what copies from the socket into the file",
    "start": "924480",
    "end": "930079"
  },
  {
    "text": "you can see the arguments here is the path to the file and some sizes i guess uh it's for it's four",
    "start": "930079",
    "end": "936959"
  },
  {
    "text": "events because the download is being done in chunks so we have four chunks once wget is finished downloading the",
    "start": "936959",
    "end": "944399"
  },
  {
    "text": "file zesh is executing the change mode",
    "start": "944399",
    "end": "950240"
  },
  {
    "text": "executable with these arguments and then chmod is using this system",
    "start": "950240",
    "end": "956480"
  },
  {
    "text": "called to do what it's supposed to do so this is the the arguments for each mod",
    "start": "956480",
    "end": "961680"
  },
  {
    "text": "uh the name of the file and the requested permissions so we request read write and execute for the user for",
    "start": "961680",
    "end": "967680"
  },
  {
    "text": "the group and so on and finally zesch is executing",
    "start": "967680",
    "end": "973040"
  },
  {
    "text": "the dropped binary so this is how a dropper",
    "start": "973040",
    "end": "978079"
  },
  {
    "text": "looks like for tracy and this is how we can detect it but actually we can do something even",
    "start": "978079",
    "end": "984079"
  },
  {
    "text": "better you know we've instrumented these",
    "start": "984079",
    "end": "989199"
  },
  {
    "text": "vfs write functions here so we were at the right time in the",
    "start": "989199",
    "end": "995759"
  },
  {
    "text": "right place to be able to actually see the binary data to look at the data itself",
    "start": "995759",
    "end": "1002240"
  },
  {
    "text": "and we can ask tracy to make a copy of this data for us so what i'm going to do next",
    "start": "1002240",
    "end": "1010000"
  },
  {
    "text": "is use a very neat feature of tracy",
    "start": "1010000",
    "end": "1014800"
  },
  {
    "text": "that basically means we want to capture",
    "start": "1018079",
    "end": "1023120"
  },
  {
    "text": "all of the right operations so whenever there's a vfs write into a",
    "start": "1023120",
    "end": "1028160"
  },
  {
    "text": "file i want you to capture it i'm telling tracy um but not everything because there's a",
    "start": "1028160",
    "end": "1033520"
  },
  {
    "text": "lot of things going on in the computer we want just to filter it for stuff that happens in the current directory",
    "start": "1033520",
    "end": "1040240"
  },
  {
    "text": "so in our case we know that this is the file download and i'm asking tracy to save the result",
    "start": "1040240",
    "end": "1046160"
  },
  {
    "text": "also into the current directory so i will start tracy",
    "start": "1046160",
    "end": "1053520"
  },
  {
    "text": "and i will start another download",
    "start": "1053520",
    "end": "1058480"
  },
  {
    "text": "starting another download tracy collects a lot of information and",
    "start": "1065200",
    "end": "1072400"
  },
  {
    "text": "actually i stopped it in the in the middle",
    "start": "1072400",
    "end": "1076799"
  },
  {
    "text": "no actually it completed the download so we can take a look here",
    "start": "1077600",
    "end": "1083120"
  },
  {
    "text": "and see that there is a a new directory that's called uh this is",
    "start": "1083120",
    "end": "1090320"
  },
  {
    "text": "actually the amount time space for the machine and we can look inside of it",
    "start": "1090320",
    "end": "1096799"
  },
  {
    "text": "and see that there is a file actually this file uh is owned by root which is not us",
    "start": "1097679",
    "end": "1103360"
  },
  {
    "text": "because we started tracy as soon so i'm just gonna fix that real quick",
    "start": "1103360",
    "end": "1108880"
  },
  {
    "text": "i'm going to just change the ownership to be me and now we can look at the file but it's",
    "start": "1108880",
    "end": "1115200"
  },
  {
    "text": "a binary file so there's not a lot to see here however we can try to execute it because they know it's a",
    "start": "1115200",
    "end": "1121360"
  },
  {
    "text": "binary file we actually know that it's the hello world and indeed this is the alarm",
    "start": "1121360",
    "end": "1127679"
  },
  {
    "text": "so this is very cool because not only tracy told us there is a dropper here it actually gave",
    "start": "1127679",
    "end": "1134000"
  },
  {
    "text": "us the evidence and said here is the file that we downloaded and this is from the kernel",
    "start": "1134000",
    "end": "1139360"
  },
  {
    "text": "and not from wget great so let's continue",
    "start": "1139360",
    "end": "1150080"
  },
  {
    "start": "1147000",
    "end": "1427000"
  },
  {
    "text": "so the next demo that i want to show you is uh an interesting technique that's called",
    "start": "1150080",
    "end": "1155360"
  },
  {
    "text": "uh packing it means that we take the malware",
    "start": "1155360",
    "end": "1161039"
  },
  {
    "text": "we embed it within another executable and that other executable is shipped with the container and then",
    "start": "1161039",
    "end": "1168480"
  },
  {
    "text": "when it's executing it will unpack the embedded malware and run it we're going to use",
    "start": "1168480",
    "end": "1176559"
  },
  {
    "text": "a well-known tool for that it's called upx it's on github i'm just using that to pack",
    "start": "1176559",
    "end": "1184720"
  },
  {
    "text": "the hello world executable and i want to show you how tracy",
    "start": "1184720",
    "end": "1192080"
  },
  {
    "text": "sees that so i'm going to show open the output directly for the",
    "start": "1192080",
    "end": "1199520"
  },
  {
    "text": "back example okay so the reason that this is very",
    "start": "1199520",
    "end": "1207679"
  },
  {
    "text": "interesting is because there is no exact ve happening here",
    "start": "1207679",
    "end": "1213039"
  },
  {
    "text": "after the the original executable is done so because there are two executables",
    "start": "1213039",
    "end": "1220080"
  },
  {
    "text": "involved here the the malware and the wrapper you would expect",
    "start": "1220080",
    "end": "1225280"
  },
  {
    "text": "to exactly e in this slow but actually there's only one",
    "start": "1225280",
    "end": "1230320"
  },
  {
    "text": "because the way that upx for example works it allocates a memory region",
    "start": "1230320",
    "end": "1237120"
  },
  {
    "text": "for the model by the way upx is not meant for malware i'm just using it for",
    "start": "1237120",
    "end": "1242640"
  },
  {
    "text": "this demo and it allocates a memory region it makes this memory region executable",
    "start": "1242640",
    "end": "1248640"
  },
  {
    "text": "it copies the binary data for the malware there and then it changes execution to that place this is",
    "start": "1248640",
    "end": "1255200"
  },
  {
    "text": "all legitimate operation that the process can do the process can manipulate its memory addresses it can",
    "start": "1255200",
    "end": "1261440"
  },
  {
    "text": "jump to whatever instructions they want so there's nothing particularly malicious there",
    "start": "1261440",
    "end": "1267360"
  },
  {
    "text": "however we can identify the pattern that is very typical to upx and and look at it so this is what we",
    "start": "1267360",
    "end": "1274640"
  },
  {
    "text": "see here we see a series of m up and m protect events and we can look at the arguments",
    "start": "1274640",
    "end": "1280480"
  },
  {
    "text": "for example we see that um there is an m protect here and protect",
    "start": "1280480",
    "end": "1287600"
  },
  {
    "text": "is the system called used to change the permission of a memory region",
    "start": "1287600",
    "end": "1294080"
  },
  {
    "text": "so it takes an address a pointer to the memory it takes a length which",
    "start": "1294080",
    "end": "1300960"
  },
  {
    "text": "together gives us a memory region and then the requested permissions and we see that they requested executable",
    "start": "1300960",
    "end": "1306640"
  },
  {
    "text": "permissions here which probably means that they are going to execute something from this region",
    "start": "1306640",
    "end": "1311679"
  },
  {
    "text": "if this and if this wasn't originally meant for execution this is alerting so actually we know",
    "start": "1311679",
    "end": "1319360"
  },
  {
    "text": "that this is alerting and this is why we have uh embedded this",
    "start": "1319360",
    "end": "1324400"
  },
  {
    "text": "uh insight into tracy so there is a nice flag for tracy that is called",
    "start": "1324400",
    "end": "1330640"
  },
  {
    "text": "dash security alerts and this makes tracy emit additional",
    "start": "1330640",
    "end": "1338640"
  },
  {
    "text": "information additional alerts which are not raw data for example this one this",
    "start": "1338640",
    "end": "1345280"
  },
  {
    "text": "memprot alert event is not a system called it's not a function it's not raw data this is tracy",
    "start": "1345280",
    "end": "1352559"
  },
  {
    "text": "trying to tell you that hey they make the protection change to executable this is",
    "start": "1352559",
    "end": "1358320"
  },
  {
    "text": "interesting you should note and again tracy here is telling you hey",
    "start": "1358320",
    "end": "1363919"
  },
  {
    "text": "a memory mapped region with write and execute permissions i wonder what that can be and finally",
    "start": "1363919",
    "end": "1371360"
  },
  {
    "text": "tracy is telling you again hey protection change from right and",
    "start": "1371360",
    "end": "1376400"
  },
  {
    "text": "execute to execute which we know is the is the final step before upx actually",
    "start": "1376400",
    "end": "1381600"
  },
  {
    "text": "jumps to that memory region and uh this is why at this point we decide to",
    "start": "1381600",
    "end": "1388720"
  },
  {
    "text": "dump this memory region into a file so you can analyze it so we",
    "start": "1388720",
    "end": "1394159"
  },
  {
    "text": "saved this this is actually achieved if you add the capture flag",
    "start": "1394159",
    "end": "1402080"
  },
  {
    "text": "which we have seen before right before that we've used capture uh capture right but",
    "start": "1402080",
    "end": "1408400"
  },
  {
    "text": "in this case we've used capture mesh which means uh whenever you see something an alert",
    "start": "1408400",
    "end": "1414400"
  },
  {
    "text": "like this i want you to also capture this memory region into a file so i can further analyze it",
    "start": "1414400",
    "end": "1422720"
  },
  {
    "text": "great so we've seen how tracy can help us identify the behavior of a memory packers such as upx",
    "start": "1422799",
    "end": "1431840"
  },
  {
    "start": "1427000",
    "end": "1671000"
  },
  {
    "text": "the next example is another technique that is called fileless files execution",
    "start": "1431840",
    "end": "1439360"
  },
  {
    "text": "is uh is leveraging a unix system called that is called uh mfd",
    "start": "1439360",
    "end": "1445600"
  },
  {
    "text": "creator sorry linux system code mfd create creates a file",
    "start": "1445600",
    "end": "1450960"
  },
  {
    "text": "that doesn't have any backing in the disk or in the file system it is purely in memory",
    "start": "1450960",
    "end": "1458960"
  },
  {
    "text": "and we can use this uh special file in order to create an executable",
    "start": "1458960",
    "end": "1465760"
  },
  {
    "text": "and execute it actually without ever saving anything to disk so we can",
    "start": "1465760",
    "end": "1470840"
  },
  {
    "text": "escape software such as the anti-malware software which are constantly scanning the disk",
    "start": "1470840",
    "end": "1476640"
  },
  {
    "text": "or even escape security image scanners such as mentioned that",
    "start": "1476640",
    "end": "1483919"
  },
  {
    "text": "are scanning for malware for no malware so in this case we will be able to",
    "start": "1483919",
    "end": "1489440"
  },
  {
    "text": "put the malware in memory and execute it from there without ever touching the disk so for that i'm",
    "start": "1489440",
    "end": "1495120"
  },
  {
    "text": "going to use another nice utility that i found it's called elf exact",
    "start": "1495120",
    "end": "1500559"
  },
  {
    "text": "and it's just a nice uh way to exercise this technique amp exact will create an mfd",
    "start": "1500559",
    "end": "1507039"
  },
  {
    "text": "file it will read from start and input and write into this file and then it will use exactly add to execute this",
    "start": "1507039",
    "end": "1514400"
  },
  {
    "text": "mfd file all right so the command that i'm going",
    "start": "1514400",
    "end": "1519919"
  },
  {
    "text": "to write that i'm going to run is something like",
    "start": "1519919",
    "end": "1525679"
  },
  {
    "text": "the following so w get again i'm pointing to a remote",
    "start": "1525679",
    "end": "1531120"
  },
  {
    "text": "location this time i'm not giving it a file name because i don't want it to save the file",
    "start": "1531120",
    "end": "1536880"
  },
  {
    "text": "to disk i want it to save to just download the file and emit the",
    "start": "1536880",
    "end": "1542559"
  },
  {
    "text": "contents into standard output this is what the dash means but then i am redirecting standard",
    "start": "1542559",
    "end": "1549039"
  },
  {
    "text": "output into alpha exact health exact read from standard input it will find the contents of this file",
    "start": "1549039",
    "end": "1556000"
  },
  {
    "text": "and it will write them into the mfd file and then execute it so basically we will be able to",
    "start": "1556000",
    "end": "1565440"
  },
  {
    "text": "stream the bytes from the file here on the remote server",
    "start": "1565520",
    "end": "1570720"
  },
  {
    "text": "directly into the memory into the mfd file and then execute it without writing anything to disk this is very",
    "start": "1570720",
    "end": "1577360"
  },
  {
    "text": "cool this is like hackers love this so let's look at how",
    "start": "1577360",
    "end": "1582840"
  },
  {
    "text": "tracy is able to detect that",
    "start": "1582840",
    "end": "1589039"
  },
  {
    "text": "all right so this is how the output for jc looks like i have added another event here that i",
    "start": "1591600",
    "end": "1598400"
  },
  {
    "text": "want to trace which is the name of the create of course so we started the command",
    "start": "1598400",
    "end": "1605919"
  },
  {
    "text": "with uh f exec and w gets it's a pipe so both of them start simultaneously",
    "start": "1605919",
    "end": "1611520"
  },
  {
    "text": "these are the arguments and then immediately elf exec has invoked the name of the",
    "start": "1611520",
    "end": "1618720"
  },
  {
    "text": "create system code and it created an mfd file it received the file descriptor",
    "start": "1618720",
    "end": "1624080"
  },
  {
    "text": "free and then wget started to download the file this is a similar behavior to",
    "start": "1624080",
    "end": "1630240"
  },
  {
    "text": "what we've seen before except that this time the vfs write is",
    "start": "1630240",
    "end": "1635279"
  },
  {
    "text": "not writing into a file on this there's no real path here this string here is not a path it just",
    "start": "1635279",
    "end": "1642720"
  },
  {
    "text": "symbolizes this pseudo file so it it is writing directly into into",
    "start": "1642720",
    "end": "1649679"
  },
  {
    "text": "memory and once we are done writing into this mfd file fxec is executing",
    "start": "1649679",
    "end": "1658399"
  },
  {
    "text": "this file descriptor number three and this is how we achieve the execution",
    "start": "1658399",
    "end": "1663520"
  },
  {
    "text": "without ever writing to disk but tracy was able to detect that",
    "start": "1663520",
    "end": "1670880"
  },
  {
    "start": "1671000",
    "end": "1857000"
  },
  {
    "text": "all right so we've seen a few techniques that are actually being used out in a while and i wanted to stress this that",
    "start": "1673919",
    "end": "1680960"
  },
  {
    "text": "this can meet you in the real world for example amir mentioned supply chain",
    "start": "1680960",
    "end": "1687279"
  },
  {
    "text": "attacks um let's think of a scenario when we need some kind of",
    "start": "1687279",
    "end": "1692640"
  },
  {
    "text": "utility and we found the solution as a perfect container on docker hub",
    "start": "1692640",
    "end": "1698720"
  },
  {
    "text": "let's say that we were looking for a web service that returns the current date and time",
    "start": "1698720",
    "end": "1704080"
  },
  {
    "text": "for example so i've created something like this here it is called road rotten debt you will",
    "start": "1704080",
    "end": "1710720"
  },
  {
    "text": "soon see why and it's actually working it is actually a web server that i can um i can make",
    "start": "1710720",
    "end": "1719279"
  },
  {
    "text": "an http request to and it will return the current date and time and i run this",
    "start": "1719279",
    "end": "1724640"
  },
  {
    "text": "on my infrastructure but what i don't know is that it actually has",
    "start": "1724640",
    "end": "1729919"
  },
  {
    "text": "ran a malware on my servers and it has used all of the evasion",
    "start": "1729919",
    "end": "1735360"
  },
  {
    "text": "techniques that we've just discussed actually a few others that we didn't in order to evade us",
    "start": "1735360",
    "end": "1741120"
  },
  {
    "text": "or any tools that we were using and if we were to scan this image using uh any static image scanning",
    "start": "1741120",
    "end": "1749360"
  },
  {
    "text": "tool so let's use for example uh trevi which is an excellent",
    "start": "1749360",
    "end": "1755279"
  },
  {
    "text": "uh static scanning tool by aqua so it is k slash protein date this is the image",
    "start": "1755279",
    "end": "1763360"
  },
  {
    "text": "3v will basically say everything looks fine right because it looks at the image",
    "start": "1763360",
    "end": "1770480"
  },
  {
    "text": "and there is no indication by looking at this file that there is anything",
    "start": "1770480",
    "end": "1775840"
  },
  {
    "text": "bad with it however as you can see zero incidents but however if we run tracy it",
    "start": "1775840",
    "end": "1782480"
  },
  {
    "text": "will tell us a lot of things so i've actually ran tracy here with this container",
    "start": "1782480",
    "end": "1788159"
  },
  {
    "text": "and this is the output so this is a very long file all right this is uh um we're not going to go over that don't",
    "start": "1788159",
    "end": "1794640"
  },
  {
    "text": "worry but i just want to show you that all of the indications that we've just uh seen are in there so for example",
    "start": "1794640",
    "end": "1801520"
  },
  {
    "text": "mem fd create there it is it's in there for example the um the security alerts",
    "start": "1801520",
    "end": "1809440"
  },
  {
    "text": "the tracy uh the tracy uh generates everything is",
    "start": "1809440",
    "end": "1816960"
  },
  {
    "text": "here including the captured files the tracy",
    "start": "1816960",
    "end": "1822080"
  },
  {
    "text": "has captured for us during the execution of the container all of the information is in here you",
    "start": "1822080",
    "end": "1827440"
  },
  {
    "text": "just need to know how to uh search for it and you actually need to know what",
    "start": "1827440",
    "end": "1833200"
  },
  {
    "text": "you're looking for which brings me to the next point that tracy is an excellent",
    "start": "1833200",
    "end": "1839200"
  },
  {
    "text": "analysis tool but you do need to know what you're looking for you need to",
    "start": "1839200",
    "end": "1844399"
  },
  {
    "text": "know that a file attack exists and how it looks like and",
    "start": "1844399",
    "end": "1849600"
  },
  {
    "text": "there are many other things that we didn't discuss here so we have another uh offering",
    "start": "1849600",
    "end": "1856880"
  },
  {
    "text": "a product offering that we called dta dynamic threat analysis dta basically",
    "start": "1856880",
    "end": "1864960"
  },
  {
    "start": "1857000",
    "end": "2063000"
  },
  {
    "text": "wraps the entire uh session into a product so basically we create a",
    "start": "1864960",
    "end": "1871120"
  },
  {
    "text": "sandbox for you we run the potentially malicious container in there",
    "start": "1871120",
    "end": "1876960"
  },
  {
    "text": "and we run tracy in there this is the same open source tracy that we've just seen and you can also",
    "start": "1876960",
    "end": "1883440"
  },
  {
    "text": "use it for your needs we just run it in this sandbox and we collect the output",
    "start": "1883440",
    "end": "1889120"
  },
  {
    "text": "and we show you this lovely dashboard that summarizes all of the information but the real interesting thing here",
    "start": "1889120",
    "end": "1898159"
  },
  {
    "text": "is not the pretty dashboard the really interesting thing here is that we have uh took all of the experience",
    "start": "1898159",
    "end": "1906080"
  },
  {
    "text": "that our research team has from studying malware and we have created a an extensive",
    "start": "1906080",
    "end": "1912720"
  },
  {
    "text": "library of signatures that we think are interesting for you for example here is",
    "start": "1912720",
    "end": "1920640"
  },
  {
    "text": "the fireless attack by the way this is this the scan result for the same container the rotten date container that we've",
    "start": "1920640",
    "end": "1926480"
  },
  {
    "text": "just seen so we see here the file is attack and this is the line we see here the upx executing and here",
    "start": "1926480",
    "end": "1933519"
  },
  {
    "text": "is the evidence we see here something else that we didn't see before that uh this id address might be",
    "start": "1933519",
    "end": "1940960"
  },
  {
    "text": "um might be uh have a bad reputation or something we see here the dropper that w getting so",
    "start": "1940960",
    "end": "1949760"
  },
  {
    "text": "we have the knowledge of what what we think is potentially malicious",
    "start": "1949760",
    "end": "1956080"
  },
  {
    "text": "and we have uh given this image a general score a risk score of high so you can use",
    "start": "1956080",
    "end": "1963360"
  },
  {
    "text": "this uh summary information in order to make a decision if you want to run this container or not",
    "start": "1963360",
    "end": "1970159"
  },
  {
    "text": "so this is dta it's actually free to start and you can scan a lot of images",
    "start": "1970159",
    "end": "1976480"
  },
  {
    "text": "with it for free but i just want to mention that tracy is completely open source so you can actually take tracy",
    "start": "1976480",
    "end": "1982880"
  },
  {
    "text": "and uh combine it with something like elasticsearch to automate the process",
    "start": "1982880",
    "end": "1989279"
  },
  {
    "text": "of analyzing the events or you can just use tracy for analysis or",
    "start": "1989279",
    "end": "1995679"
  },
  {
    "text": "research purposes if you want to investigate specific containers",
    "start": "1995679",
    "end": "2001919"
  },
  {
    "text": "thank you so to summarize we are talking today about a party that",
    "start": "2002559",
    "end": "2008640"
  },
  {
    "text": "we've identified in our cluster and the fact that static scanning that are looking for vulnerabilities malware",
    "start": "2008640",
    "end": "2015159"
  },
  {
    "text": "misconfigurations cannot address the issues because this part is basically because of an invasive",
    "start": "2015159",
    "end": "2021840"
  },
  {
    "text": "malware we also talked about the fact that runtime security can help you because the runtime security will detect",
    "start": "2021840",
    "end": "2028399"
  },
  {
    "text": "and prevent malicious activity but the reason need to shift left the reason to find",
    "start": "2028399",
    "end": "2034320"
  },
  {
    "text": "the bad behavior the invasive malware before you go production and this is what we presented today we presented a",
    "start": "2034320",
    "end": "2040559"
  },
  {
    "text": "dynamic threat analysis a technique to take a container image running",
    "start": "2040559",
    "end": "2045679"
  },
  {
    "text": "run it in a sandbox and and basically observe the behavior all before going to production i hope",
    "start": "2045679",
    "end": "2052638"
  },
  {
    "text": "that you find this information very helpful and if you have any questions we are here there for q a thank you very",
    "start": "2052639",
    "end": "2059919"
  },
  {
    "text": "much thank you everyone",
    "start": "2059919",
    "end": "2065200"
  }
]