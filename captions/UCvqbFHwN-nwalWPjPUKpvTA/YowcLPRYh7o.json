[
  {
    "text": "all right thank you for joining us everyone welcome to today's cncf live webinar from pipelines to supply chains",
    "start": "4400",
    "end": "11679"
  },
  {
    "text": "level up with supply chain choreography i'm libby schultz and i'll be moderating today's webinar i'm going to read our",
    "start": "11679",
    "end": "18080"
  },
  {
    "text": "code of conduct and then i'll hand over to david espejo cartographer community manager at vmware",
    "start": "18080",
    "end": "24640"
  },
  {
    "text": "and cora iberclyde developer advocate at vmware a few housekeeping items before we get started during the webinar you",
    "start": "24640",
    "end": "31840"
  },
  {
    "text": "are not able to talk as an attendee but there is a q a box on the left hand right hand side of your screen",
    "start": "31840",
    "end": "38079"
  },
  {
    "text": "please feel free to put your questions there and we will get to as many as we can at the end",
    "start": "38079",
    "end": "43360"
  },
  {
    "text": "this is an official webinar of the cncf and as such is subject to the cncf code of conduct please do not add anything to",
    "start": "43360",
    "end": "49920"
  },
  {
    "text": "the chat or questions that would be in violation of that code of conduct and please be respectful of all of your",
    "start": "49920",
    "end": "55440"
  },
  {
    "text": "fellow participants and presenters please also note that the recording and slides will be posted later today to the",
    "start": "55440",
    "end": "61039"
  },
  {
    "text": "cncf online programs page at community.cncf.io under online programs",
    "start": "61039",
    "end": "67360"
  },
  {
    "text": "they will also be available via your registration link and the recording will be available on our online programs",
    "start": "67360",
    "end": "72799"
  },
  {
    "text": "youtube playlist with that i'll hand it over to david and cora to kick off today's presentation",
    "start": "72799",
    "end": "80000"
  },
  {
    "text": "all right thank you libby and thanks to the cncf for giving us the chance of being here",
    "start": "80000",
    "end": "85759"
  },
  {
    "text": "all right welcome everyone um in this session alongside with core iver",
    "start": "85759",
    "end": "90960"
  },
  {
    "text": "clyde developer advocate at vmware we will discuss or",
    "start": "90960",
    "end": "96000"
  },
  {
    "text": "describe some of the current challenges we see in the um the whole problem of delivering software",
    "start": "96000",
    "end": "103920"
  },
  {
    "text": "and also we will introduce a different way to do it using the choreography pattern finally the cartographer open",
    "start": "103920",
    "end": "110640"
  },
  {
    "text": "source project which is basically an implementation of this pattern uh cora will give us a fantastic demo as",
    "start": "110640",
    "end": "118880"
  },
  {
    "text": "usual and we will have a wrap-up and a section for questions and answers",
    "start": "118880",
    "end": "125040"
  },
  {
    "text": "all right so let's start with why so motivation for all these comes",
    "start": "125040",
    "end": "131920"
  },
  {
    "text": "from from different places first of all according to the authors of this seminal",
    "start": "131920",
    "end": "137760"
  },
  {
    "text": "book on the field of continuous delivery the most important problem we face as",
    "start": "137760",
    "end": "142879"
  },
  {
    "text": "software professionals is this how to take a new idea a new application",
    "start": "142879",
    "end": "148959"
  },
  {
    "text": "version new commit into the hands of users as quickly as possible",
    "start": "148959",
    "end": "154239"
  },
  {
    "text": "that's it this book was published like 11 years ago so fast forward into the future we",
    "start": "154239",
    "end": "161040"
  },
  {
    "text": "have the definition for the term cloud native provided by jovita coordinators",
    "start": "161040",
    "end": "167760"
  },
  {
    "text": "co-founder and this definition has an implicit recognition of the same kind of",
    "start": "167760",
    "end": "173840"
  },
  {
    "text": "problems cloud native is basically a set of tools processes culture to manage",
    "start": "173840",
    "end": "180560"
  },
  {
    "text": "complexity and to tackle a problem of lack of velocity lack of speed",
    "start": "180560",
    "end": "185760"
  },
  {
    "text": "delivering software so the core problem remains the same",
    "start": "185760",
    "end": "191120"
  },
  {
    "text": "so so far cicd pipelines have been the de facto",
    "start": "191120",
    "end": "196560"
  },
  {
    "text": "standard to address this problem in this pattern we define a set of steps",
    "start": "196560",
    "end": "202239"
  },
  {
    "text": "that code need to complete before going into production and we have several features here first",
    "start": "202239",
    "end": "210319"
  },
  {
    "text": "each one of these steps most likely is executed by a different tool",
    "start": "210319",
    "end": "216080"
  },
  {
    "text": "right and if you consider the abundant number of tools present in the in the cloud native",
    "start": "216080",
    "end": "224560"
  },
  {
    "text": "space for each one of these steps we have a lot of options so these individual tools",
    "start": "224560",
    "end": "231519"
  },
  {
    "text": "need to be somehow connected between them or wire between them",
    "start": "231519",
    "end": "236640"
  },
  {
    "text": "using this sequential pattern where where each step is completed sequentially in a linear manner",
    "start": "236640",
    "end": "243599"
  },
  {
    "text": "and also in order to manage the flow of information between the steps we rely",
    "start": "243599",
    "end": "249040"
  },
  {
    "text": "on entity that is that follows an orchestrator pattern is it's a something",
    "start": "249040",
    "end": "254640"
  },
  {
    "text": "like the server client pattern and this orchestrator not only deals",
    "start": "254640",
    "end": "260160"
  },
  {
    "text": "with um what should be done to take code to production i mean the steps in the",
    "start": "260160",
    "end": "265440"
  },
  {
    "text": "supply chain but also how it should be done in terms of all the tooling integration",
    "start": "265440",
    "end": "271919"
  },
  {
    "text": "the external integrations that are necessary for this to happen so for example the",
    "start": "271919",
    "end": "277280"
  },
  {
    "text": "tool that you use to watch a github repo is different to the tool that you use",
    "start": "277280",
    "end": "282720"
  },
  {
    "text": "to scan source code against a set of security baselines right so we end up with this high level",
    "start": "282720",
    "end": "290639"
  },
  {
    "text": "of interdependencies between different tools and a very rigid logic that is",
    "start": "290639",
    "end": "296320"
  },
  {
    "text": "right there codified in the orchestrator that in summary this is tight coupling",
    "start": "296320",
    "end": "301759"
  },
  {
    "text": "right and if this is an enemy for change in distributed systems and",
    "start": "301759",
    "end": "307520"
  },
  {
    "text": "thai coupling is also the cause of some other problems here",
    "start": "307520",
    "end": "312880"
  },
  {
    "text": "because it makes it difficult to swap or add tools so for example let's say that",
    "start": "312880",
    "end": "318240"
  },
  {
    "text": "for a different workload you you want to have a different tool that actually builds your image",
    "start": "318240",
    "end": "324960"
  },
  {
    "text": "if you want to change a tool for one of the steps you will need to change the logic that you already created or there",
    "start": "324960",
    "end": "332160"
  },
  {
    "text": "in the orchestrator so it's not easy it's very fragile and hard to maintain",
    "start": "332160",
    "end": "338560"
  },
  {
    "text": "and in general this rigid workflow also means that for example what if",
    "start": "338560",
    "end": "345919"
  },
  {
    "text": "not all the changes to your app come from a comment in a github repo in this example we are the first step is watch a",
    "start": "345919",
    "end": "353199"
  },
  {
    "text": "repo for a new comment but what if for example in this scan source code there's",
    "start": "353199",
    "end": "358319"
  },
  {
    "text": "a new vulnerability discovered in order to update or trigger the",
    "start": "358319",
    "end": "363520"
  },
  {
    "text": "pipeline you will have to submit an artificial commit for it to run so it's a very rigid",
    "start": "363520",
    "end": "370479"
  },
  {
    "text": "workflow very linear and if some step fails the remaining steps",
    "start": "370479",
    "end": "376479"
  },
  {
    "text": "won't be invoked at all and also any delay in the execution of one step or any delay in the response",
    "start": "376479",
    "end": "383680"
  },
  {
    "text": "time from the orchestration will delay the whole process",
    "start": "383680",
    "end": "389120"
  },
  {
    "text": "so the challenge becomes even harder when you start scaling so when you",
    "start": "389120",
    "end": "395840"
  },
  {
    "text": "this is the supply chain or the pipeline definition for a specific app that runs",
    "start": "395840",
    "end": "401520"
  },
  {
    "text": "for example in a rails framework and it's maintained by developer team number one but what if you have another",
    "start": "401520",
    "end": "408639"
  },
  {
    "text": "team with a completely different workload and for example they plan to",
    "start": "408639",
    "end": "413759"
  },
  {
    "text": "use a different tool to build the image you will have to codify that different",
    "start": "413759",
    "end": "419599"
  },
  {
    "text": "logic in the orchestrator and so on so for you have different teams for example",
    "start": "419599",
    "end": "424800"
  },
  {
    "text": "this team they have a completely different pipeline design that doesn't start by watching a repo",
    "start": "424800",
    "end": "431680"
  },
  {
    "text": "they want to start a different point it's a different logic that you will also have to codify there in the",
    "start": "431680",
    "end": "438720"
  },
  {
    "text": "orchestrator so at scale we find even deeper problems for example this could be this could",
    "start": "438720",
    "end": "446319"
  },
  {
    "text": "mean an inconsistent path to production if we see here each",
    "start": "446319",
    "end": "451680"
  },
  {
    "text": "one of these pipelines with different tools these tools have different inputs different outputs and",
    "start": "451680",
    "end": "458560"
  },
  {
    "text": "once you finally have pipeline number one working it doesn't necessarily",
    "start": "458560",
    "end": "464479"
  },
  {
    "text": "is useful for depth in number two of the team number three for different workouts",
    "start": "464479",
    "end": "469680"
  },
  {
    "text": "so you will end up having a cicd pipeline sprawl for as many teams and as many warlocks",
    "start": "469680",
    "end": "476879"
  },
  {
    "text": "that you may have you will have completely different paths to production that's first thing",
    "start": "476879",
    "end": "483199"
  },
  {
    "text": "second thing is that there's no clear separation of concerns between operations and development teams what",
    "start": "483199",
    "end": "491120"
  },
  {
    "text": "happens in this universe of configuration what happens if something fails",
    "start": "491120",
    "end": "496560"
  },
  {
    "text": "well most likely developers will end up doing devops stuff instead of actually",
    "start": "496560",
    "end": "502000"
  },
  {
    "text": "writing code and it creates a high operational burden",
    "start": "502000",
    "end": "507440"
  },
  {
    "text": "in general because it's hard to maintain what happens for example again if",
    "start": "507440",
    "end": "512640"
  },
  {
    "text": "the organization now wants to standardize in a different tool for the",
    "start": "512640",
    "end": "518159"
  },
  {
    "text": "security scan you will need to change the logic for all the pipelines in the",
    "start": "518159",
    "end": "523919"
  },
  {
    "text": "environment with it becomes a nightmare right so these are the challenges so far",
    "start": "523919",
    "end": "530240"
  },
  {
    "text": "and what we are proposing here is the adoption of a pattern that is natural to",
    "start": "530240",
    "end": "535920"
  },
  {
    "text": "event-driven architectures called choreography in choreography different to",
    "start": "535920",
    "end": "541360"
  },
  {
    "text": "orchestration imagine an orchestra with where each musician they know how to play the actual musical piece but",
    "start": "541360",
    "end": "549120"
  },
  {
    "text": "they still rely on a central conductor that manage the flow of",
    "start": "549120",
    "end": "554560"
  },
  {
    "text": "information for the the whole musical world to happen in choreography is different because",
    "start": "554560",
    "end": "561519"
  },
  {
    "text": "once they are in the scenario and the music starts to play each dancer knows",
    "start": "561519",
    "end": "566880"
  },
  {
    "text": "what to do even if someone else in the dance team fails the remaining members of the team they know",
    "start": "566880",
    "end": "574240"
  },
  {
    "text": "what to do so we consider here the term resource as a step as a component in",
    "start": "574240",
    "end": "580640"
  },
  {
    "text": "your supply chain we call it resource because it could be several things it could be a heat ups aging watching repo",
    "start": "580640",
    "end": "587920"
  },
  {
    "text": "it could be a service building your image it could be a conflict map in your",
    "start": "587920",
    "end": "594080"
  },
  {
    "text": "kubernetes cluster whatever you need to take code to production we call it a",
    "start": "594080",
    "end": "599440"
  },
  {
    "text": "resource and we know two things about this resource first it has a single",
    "start": "599440",
    "end": "604880"
  },
  {
    "text": "input input type yellow and it will produce a single output",
    "start": "604880",
    "end": "612480"
  },
  {
    "text": "output type yellow output value x that's it it's a black box we don't know how it",
    "start": "612480",
    "end": "618079"
  },
  {
    "text": "works and we don't care at this point we don't care so if we use a different input value",
    "start": "618079",
    "end": "624240"
  },
  {
    "text": "well it will produce a different output pretty simple so we can use the choreography pattern",
    "start": "624240",
    "end": "630959"
  },
  {
    "text": "for two things here in the context of supply chains first",
    "start": "630959",
    "end": "636480"
  },
  {
    "text": "we can use it for self mutating resources so imagine this resource is a githubs agent watching a",
    "start": "636480",
    "end": "643760"
  },
  {
    "text": "repo so the input will be the url for the repo and the branch and that's it",
    "start": "643760",
    "end": "650480"
  },
  {
    "text": "so imagine that the url has not changed the branch has not changed but there is",
    "start": "650480",
    "end": "655519"
  },
  {
    "text": "a new comment this new commit will be auto detected",
    "start": "655519",
    "end": "660880"
  },
  {
    "text": "by by the controller and it will produce a new output even when inputs have no",
    "start": "660880",
    "end": "666800"
  },
  {
    "text": "change in the same case as for example if you're using kpac or some other",
    "start": "666800",
    "end": "672320"
  },
  {
    "text": "service to build your image if the container definition has not",
    "start": "672320",
    "end": "678240"
  },
  {
    "text": "changed but there is a new revision to the base os image layer",
    "start": "678240",
    "end": "685360"
  },
  {
    "text": "it's not a new input but it will produce a new output and automatically it will update the downstream resources",
    "start": "685360",
    "end": "692160"
  },
  {
    "text": "accordingly that will eliminate the need for developers to codify that kind of",
    "start": "692160",
    "end": "697200"
  },
  {
    "text": "logic or submit an artificial comments to trigger a pipeline it will happen automatically here",
    "start": "697200",
    "end": "703600"
  },
  {
    "text": "so now that we are using the image build example what happens if for a different",
    "start": "703600",
    "end": "709440"
  },
  {
    "text": "workload you want to use a different tool i mean instead of kpak for example volcanic",
    "start": "709440",
    "end": "715200"
  },
  {
    "text": "well as long as these need to produce the same type of output which is",
    "start": "715200",
    "end": "720720"
  },
  {
    "text": "very likely it will produce a path to your image",
    "start": "720720",
    "end": "725680"
  },
  {
    "text": "using k park or mechanical well you can swap out or change the",
    "start": "725839",
    "end": "730880"
  },
  {
    "text": "tools without changing anything else without affecting the logic of the whole supply chain without changing anything",
    "start": "730880",
    "end": "737519"
  },
  {
    "text": "else very different compared to the pipeline orchestration pattern",
    "start": "737519",
    "end": "742720"
  },
  {
    "text": "right so that's resource a what happens with the next step in the supply chain well the only thing this next step will",
    "start": "742720",
    "end": "749760"
  },
  {
    "text": "do is to subscribe to a specific type of output or to watch for a type of up",
    "start": "749760",
    "end": "756320"
  },
  {
    "text": "once this output is produced you will know what to do",
    "start": "756320",
    "end": "761760"
  },
  {
    "text": "but we have a missing layer here we need an intermediate layer here that",
    "start": "761760",
    "end": "768320"
  },
  {
    "text": "will actually translate what is desired state everything above this layer is desired",
    "start": "768320",
    "end": "775839"
  },
  {
    "text": "state or its declarative it's declared because we will define these are the components of my software",
    "start": "775839",
    "end": "782800"
  },
  {
    "text": "supply chain these are the inputs the outputs and that's it but",
    "start": "782800",
    "end": "788399"
  },
  {
    "text": "there we need a layer that translate or reconcile desired state into actual",
    "start": "788399",
    "end": "793519"
  },
  {
    "text": "state in the underlying platform who could be that layer who could be",
    "start": "793519",
    "end": "798639"
  },
  {
    "text": "that choreographer that is common to all the components here well",
    "start": "798639",
    "end": "804560"
  },
  {
    "text": "introducing cartographer the supply chain choreographer for kubernetes",
    "start": "804560",
    "end": "810800"
  },
  {
    "text": "we are in a project that recently joined this cncf landscape like a week ago we",
    "start": "810800",
    "end": "816720"
  },
  {
    "text": "are failing you here it's an open source project initiated by vmware",
    "start": "816720",
    "end": "822320"
  },
  {
    "text": "and it has several difference here so the first thing is that it removes completely the",
    "start": "822320",
    "end": "828160"
  },
  {
    "text": "dependency on a central entity right and we have the same step the same",
    "start": "828160",
    "end": "834560"
  },
  {
    "text": "resources for your supply chain but the first thing that it does is to wrap them",
    "start": "834560",
    "end": "839839"
  },
  {
    "text": "around a common abstraction this abstraction is called template in",
    "start": "839839",
    "end": "845920"
  },
  {
    "text": "the cartographer jargon but conceptually it means that now we remove all these",
    "start": "845920",
    "end": "854399"
  },
  {
    "text": "inputs at and outputs of each one of the elements in the supply chain that produces this complexity that is hard to",
    "start": "854399",
    "end": "860560"
  },
  {
    "text": "maintain we now have a common abstraction pretty simple to deal with",
    "start": "860560",
    "end": "865920"
  },
  {
    "text": "science has already demonstrated that the only thing you can do with complexity is to hide it to put an",
    "start": "865920",
    "end": "872959"
  },
  {
    "text": "abstraction layer on top of it you cannot remove it right so the you know what we are doing here in the",
    "start": "872959",
    "end": "879920"
  },
  {
    "text": "project is to use that you know to put an obstruction layer a common obstruction layer for all these",
    "start": "879920",
    "end": "886720"
  },
  {
    "text": "steps in the supply chain then we glue them together or wire them together using the choreography pattern",
    "start": "886720",
    "end": "893440"
  },
  {
    "text": "that we just saw and then we wrap the whole thing in a bigger abstraction or higher abstraction",
    "start": "893440",
    "end": "899760"
  },
  {
    "text": "called blueprint in this case a cluster supply chain blueprint it's pretty",
    "start": "899760",
    "end": "905600"
  },
  {
    "text": "simple i mean the project only implements two types of blueprints and that's it",
    "start": "905600",
    "end": "911440"
  },
  {
    "text": "what's the implication what's the meaning of this well in terms of teams we have here the",
    "start": "911440",
    "end": "917760"
  },
  {
    "text": "cluster supply chain abstraction we have the underlying platform the",
    "start": "917760",
    "end": "925120"
  },
  {
    "text": "and we have the photographer controller or choreographer in the middle so devops and sec ops in general",
    "start": "925519",
    "end": "933199"
  },
  {
    "text": "operations team they will own and apply the cluster supply chain definition",
    "start": "933199",
    "end": "938720"
  },
  {
    "text": "they they control two things first they define the steps",
    "start": "938720",
    "end": "943839"
  },
  {
    "text": "for the supply chains this the supply the the steps that quote need to complete before going to production",
    "start": "943839",
    "end": "950959"
  },
  {
    "text": "and then they also define the level of flexibility they will enable for developers so for example operations",
    "start": "950959",
    "end": "957360"
  },
  {
    "text": "teams can say developers team you can choose whatever",
    "start": "957360",
    "end": "962399"
  },
  {
    "text": "tool you want for building your image i don't care but you cannot change the tool we use of",
    "start": "962399",
    "end": "969920"
  },
  {
    "text": "to scan source code and in terms of security i mean that's the standard you cannot change that but you can change",
    "start": "969920",
    "end": "976720"
  },
  {
    "text": "other steps and this is completely under the control of the operations teams",
    "start": "976720",
    "end": "982800"
  },
  {
    "text": "from the developer point of view the only thing they deal with is the workload definition it's a single yama",
    "start": "982800",
    "end": "989920"
  },
  {
    "text": "and where they they where they define their needs for their workload they will",
    "start": "989920",
    "end": "995120"
  },
  {
    "text": "submit that using keep control to the cartographer controller the controller will",
    "start": "995120",
    "end": "1001600"
  },
  {
    "text": "find a supply chain definition that matches the workload definition",
    "start": "1001600",
    "end": "1006639"
  },
  {
    "text": "and it will translate that into resources that needs to be created or updated in the underlying platform",
    "start": "1006639",
    "end": "1014560"
  },
  {
    "text": "that's it that's the whole idea so benefits here i hope they're clear",
    "start": "1014560",
    "end": "1019920"
  },
  {
    "text": "first there's a clear separation of concerns i mean team members they will",
    "start": "1019920",
    "end": "1025199"
  },
  {
    "text": "spend their time and efforts in their respective areas of expertise",
    "start": "1025199",
    "end": "1030558"
  },
  {
    "text": "they know [Music] what to do with their respective field",
    "start": "1030559",
    "end": "1036240"
  },
  {
    "text": "and also implies a lot of flexibility because remember we have here and a",
    "start": "1036240",
    "end": "1041760"
  },
  {
    "text": "system that that reacts to even to low level changes so for example there's no new comet",
    "start": "1041760",
    "end": "1048480"
  },
  {
    "text": "right but there's a new vulnerability discovered by the scan source code",
    "start": "1048480",
    "end": "1053600"
  },
  {
    "text": "process remember it will produce a new output and it will update the downstream resources accordingly so",
    "start": "1053600",
    "end": "1061120"
  },
  {
    "text": "you you have now the ability to build supply chains that are much more flexible than just a sequential linear",
    "start": "1061120",
    "end": "1068400"
  },
  {
    "text": "uh step-by-step process also you have it's it's much more",
    "start": "1068400",
    "end": "1073679"
  },
  {
    "text": "modular because as we saw we have these very granular controls",
    "start": "1073679",
    "end": "1079120"
  },
  {
    "text": "and you can also with a as long as the output type is the same you can",
    "start": "1079120",
    "end": "1084240"
  },
  {
    "text": "interchange you can swap out tools and add tools for different warlocks",
    "start": "1084240",
    "end": "1089760"
  },
  {
    "text": "very simple without affecting the consistency of the whole supply chain definition so that helps with scaling up",
    "start": "1089760",
    "end": "1097280"
  },
  {
    "text": "scaling out the um the problem of delivering software",
    "start": "1097280",
    "end": "1103200"
  },
  {
    "text": "it's also consistent in terms that not only the consistent interfaces between",
    "start": "1103200",
    "end": "1108799"
  },
  {
    "text": "step but in general what the operations teams define and apply the cluster",
    "start": "1108799",
    "end": "1114559"
  },
  {
    "text": "supply chain definition will it can be reused for different workloads for",
    "start": "1114559",
    "end": "1121280"
  },
  {
    "text": "different environments and it will produce the same type of outputs it will",
    "start": "1121280",
    "end": "1126720"
  },
  {
    "text": "it will give them peace of mind that source code is completing the necessary step before going",
    "start": "1126720",
    "end": "1133200"
  },
  {
    "text": "to production right so now for the specifics",
    "start": "1133200",
    "end": "1140480"
  },
  {
    "text": "how it works so we have here the steps again the the steps or the resources",
    "start": "1140480",
    "end": "1145919"
  },
  {
    "text": "watching themselves for a specific output as we mentioned the first um abstraction",
    "start": "1145919",
    "end": "1151919"
  },
  {
    "text": "is called the template and we have five kinds of templates here",
    "start": "1151919",
    "end": "1156960"
  },
  {
    "text": "and projects for different components or steps in the supply chain and with different combinations of the",
    "start": "1156960",
    "end": "1163919"
  },
  {
    "text": "templates we produce what is called a blueprint this is the higher abstraction",
    "start": "1163919",
    "end": "1169280"
  },
  {
    "text": "in cartographer with cluster supply chain blueprint or being clustered",
    "start": "1169280",
    "end": "1175360"
  },
  {
    "text": "delivery this blueprint constantly deploys and validate the configuration",
    "start": "1175360",
    "end": "1180720"
  },
  {
    "text": "to the kubernetes environment what if you already have an investment",
    "start": "1180720",
    "end": "1186559"
  },
  {
    "text": "on ci cd tooling what can we do here well",
    "start": "1186559",
    "end": "1191679"
  },
  {
    "text": "cartographers ships with a runnable call with a crd called wannable that is used",
    "start": "1191679",
    "end": "1197440"
  },
  {
    "text": "as a gateway let's say to integrate with existing task runners like tekton jenkins circle",
    "start": "1197440",
    "end": "1205200"
  },
  {
    "text": "ci etc you can still use them for the specific steps that you require",
    "start": "1205200",
    "end": "1211280"
  },
  {
    "text": "right all right so in yeah yeah the theory of operation in summary will be that once a",
    "start": "1211280",
    "end": "1219200"
  },
  {
    "text": "developer submits a workload that match specific blueprint cartographer will",
    "start": "1219200",
    "end": "1224400"
  },
  {
    "text": "reconcile that into the actual resources in the underlying platform",
    "start": "1224400",
    "end": "1229520"
  },
  {
    "text": "that's the summary here make sure that if you have any questions",
    "start": "1229520",
    "end": "1235600"
  },
  {
    "text": "please put it in the chat we will be really glad to read you there",
    "start": "1235600",
    "end": "1240960"
  },
  {
    "text": "um and without further ado i will pass into my colleague cora for a nice demo",
    "start": "1240960",
    "end": "1249760"
  },
  {
    "text": "okay thanks david that was great cool all right so",
    "start": "1249760",
    "end": "1256320"
  },
  {
    "text": "uh let me share my screen and",
    "start": "1256320",
    "end": "1263400"
  },
  {
    "text": "okay i'm gonna move this screen over here so uh",
    "start": "1263840",
    "end": "1270320"
  },
  {
    "text": "my demo was working perfectly uh and then i started to detect some",
    "start": "1270320",
    "end": "1275919"
  },
  {
    "text": "problems so if the demo does not work then i will switch i have uh i do have",
    "start": "1275919",
    "end": "1282000"
  },
  {
    "text": "like i recorded it at some point so i have a little bit of a backup plan",
    "start": "1282000",
    "end": "1287280"
  },
  {
    "text": "so bear with me hopefully everybody cross your fingers uh we'll get through it somehow",
    "start": "1287280",
    "end": "1292960"
  },
  {
    "text": "um but basically the plan for the demo is to show you some uh introductory concepts so just to reinforce the things",
    "start": "1292960",
    "end": "1298559"
  },
  {
    "text": "that david was saying um show you how everything is wired together and then uh go through an",
    "start": "1298559",
    "end": "1304799"
  },
  {
    "text": "example of uh the git ops workflow because there's different kinds of workflows that you could um compose with",
    "start": "1304799",
    "end": "1311840"
  },
  {
    "text": "cartographers so i'm gonna try to show you one from code to publishing your image into a registry and",
    "start": "1311840",
    "end": "1317760"
  },
  {
    "text": "publishing your configuration yaml into a gear repository and then taking that and having a second blueprint or",
    "start": "1317760",
    "end": "1324320"
  },
  {
    "text": "workflow that will uh deploy that to a cluster uh so let's get started",
    "start": "1324320",
    "end": "1331200"
  },
  {
    "text": "let's see how far we get with a live demo uh okay so the basic workflow that we're talking about is source code",
    "start": "1331200",
    "end": "1338240"
  },
  {
    "text": "publish an image and then end up with a running application um and for that the implementation that we're gonna use is",
    "start": "1338240",
    "end": "1345120"
  },
  {
    "text": "we're going to use flux to pull the git repository we're going to use kpak to build and publish the image and then",
    "start": "1345120",
    "end": "1350159"
  },
  {
    "text": "we'll deploy the application using k-native um so one one thing to gather from here",
    "start": "1350159",
    "end": "1355919"
  },
  {
    "text": "is that cartographer is not trying to do all of the things right it's not trying to replace these tools from the",
    "start": "1355919",
    "end": "1361520"
  },
  {
    "text": "ecosystem that do their job very well rather it's just trying to help us use all of these tools together",
    "start": "1361520",
    "end": "1368480"
  },
  {
    "text": "integrate them in a way that uh that makes sense and that's easy to work with so first of all just to reinforce the the",
    "start": "1368480",
    "end": "1374799"
  },
  {
    "text": "concepts i wanted to talk about what would it mean for you if you were doing this uh manually let me make this just a",
    "start": "1374799",
    "end": "1381440"
  },
  {
    "text": "little bit smaller on the screen if you were doing this uh manually",
    "start": "1381440",
    "end": "1386799"
  },
  {
    "text": "so you'd have to write you know at least one yama for each of these things right one flexi ammo one k back down with one",
    "start": "1386799",
    "end": "1392159"
  },
  {
    "text": "k needed a service animal so that would look like uh could look like something like this right so this could",
    "start": "1392159",
    "end": "1397600"
  },
  {
    "text": "be uh so there's no cartographer here right this is just a flux definition of an object called get repository and what",
    "start": "1397600",
    "end": "1403679"
  },
  {
    "text": "we're asking flux to do is every minute to go to our source code repository main",
    "start": "1403679",
    "end": "1409120"
  },
  {
    "text": "branch and just check if there is a new commit that's all that flux is going to do it's not going to talk to any other",
    "start": "1409120",
    "end": "1414880"
  },
  {
    "text": "product in your cluster and then we know that ideally we would like to be able to",
    "start": "1414880",
    "end": "1420480"
  },
  {
    "text": "uh whenever git repository finds a new commit to take that code somehow inject",
    "start": "1420480",
    "end": "1426400"
  },
  {
    "text": "it into the definition of our kpac image and then have kpack uh",
    "start": "1426400",
    "end": "1432400"
  },
  {
    "text": "build uh an image using this builder that we are providing as part of the kickback configuration and then publish",
    "start": "1432400",
    "end": "1438400"
  },
  {
    "text": "that to our registry so whenever kpac is done with that then we would like to know that there is",
    "start": "1438400",
    "end": "1444880"
  },
  {
    "text": "a new image available and we would like to know what the full tag of it is with the precise sha so that we can inject",
    "start": "1444880",
    "end": "1451360"
  },
  {
    "text": "that value into our k native definition so here's just plain k native uh so that",
    "start": "1451360",
    "end": "1457279"
  },
  {
    "text": "then we can apply this to our cluster and effectively have our application running in our cluster so all of those",
    "start": "1457279",
    "end": "1463200"
  },
  {
    "text": "things that i've called out that have to be done manually are opportunities for automation of course right",
    "start": "1463200",
    "end": "1470158"
  },
  {
    "text": "so um so let's talk about okay so let's go",
    "start": "1471120",
    "end": "1476960"
  },
  {
    "text": "ahead and apply that uh get that's the um get repository so we have flux doing",
    "start": "1476960",
    "end": "1482880"
  },
  {
    "text": "this thing right so now [Music] uh so that's one thing right applying that gamble in and of itself that",
    "start": "1482880",
    "end": "1489440"
  },
  {
    "text": "submission of that uh configuration to the cluster that's one thing to automate the second one is to just monitor the",
    "start": "1489440",
    "end": "1495440"
  },
  {
    "text": "status so we can see here that the status of this git repository object has",
    "start": "1495440",
    "end": "1500480"
  },
  {
    "text": "a couple of things it has some conditions so we know programmatically we could tell because the type is ready",
    "start": "1500480",
    "end": "1506000"
  },
  {
    "text": "and the status is true we could tell that this one is ready and then if we look at here this url field",
    "start": "1506000",
    "end": "1512559"
  },
  {
    "text": "has actually the tar gz flux has actually gone and downloaded this and storing it in the",
    "start": "1512559",
    "end": "1517760"
  },
  {
    "text": "cluster of that last commit of code so we could just pull out this value we could give it to kpac right and the way",
    "start": "1517760",
    "end": "1523440"
  },
  {
    "text": "we pull it out is dot status dot artifact dot url",
    "start": "1523440",
    "end": "1530320"
  },
  {
    "text": "so if we wanted to pull that value out we could do something like this for",
    "start": "1530320",
    "end": "1535520"
  },
  {
    "text": "example i'm just going to copy it to the clipboard",
    "start": "1535520",
    "end": "1540559"
  },
  {
    "text": "so then we would want cartographer to actually go to our payback ammo and",
    "start": "1540559",
    "end": "1546320"
  },
  {
    "text": "actually do this edit for us",
    "start": "1546320",
    "end": "1550879"
  },
  {
    "text": "and paste that and then we would want to apply this",
    "start": "1552000",
    "end": "1559279"
  },
  {
    "text": "yaml to the cluster and have kpak build an image for us",
    "start": "1559279",
    "end": "1565039"
  },
  {
    "text": "uh so at this point this is where i'm not sure that my cluster is actually working out for me",
    "start": "1565039",
    "end": "1571520"
  },
  {
    "text": "uh the build does take a couple of minutes so i my expectation is that immediately it's not uh",
    "start": "1571520",
    "end": "1578240"
  },
  {
    "text": "it's not ready yet so this is okay uh if you uh if you know a little bit",
    "start": "1578240",
    "end": "1584000"
  },
  {
    "text": "about payback so either either we could just kind of like wait a couple of minutes and keep checking until the build is ready but kpak has this handy",
    "start": "1584000",
    "end": "1590640"
  },
  {
    "text": "cli called kp that allows us to check the logs of an ongoing build so hopefully",
    "start": "1590640",
    "end": "1596799"
  },
  {
    "text": "okay so maybe it will work uh we just gotta give it a little bit of a minute so uh so the way so just if",
    "start": "1596799",
    "end": "1602559"
  },
  {
    "text": "you're curious the way kpac works is that it uses a combination of build packs",
    "start": "1602559",
    "end": "1607600"
  },
  {
    "text": "to build an image so it's it's kind of analyzed our code it's decided that it has to use four different build packs to",
    "start": "1607600",
    "end": "1614400"
  },
  {
    "text": "build an image for us it's going to execute each one of those build packs in order",
    "start": "1614400",
    "end": "1620480"
  },
  {
    "text": "and we'll just give it a second to finish by the time it's done kpac will have published",
    "start": "1620480",
    "end": "1626400"
  },
  {
    "text": "an image to uh to the registry so i guess while that's happening i'm",
    "start": "1626400",
    "end": "1632080"
  },
  {
    "text": "going to check the chat and see if there are any questions i don't see any questions but i do see",
    "start": "1632080",
    "end": "1638000"
  },
  {
    "text": "we have people joining us from bangalore and maybe other locations in india",
    "start": "1638000",
    "end": "1644159"
  },
  {
    "text": "david here in colombia we have somebody in argentina aj in the bay area jonas from boston welcome",
    "start": "1644159",
    "end": "1653799"
  },
  {
    "text": "very cool well the build is moving along",
    "start": "1654000",
    "end": "1661919"
  },
  {
    "text": "this is the slowest part of the demo the rest will go well",
    "start": "1662000",
    "end": "1668679"
  },
  {
    "text": "that would be a k-pack question because cartographer cartographer isn't gonna in um",
    "start": "1680960",
    "end": "1687760"
  },
  {
    "text": "is not gonna step into like so so if k-pac is kickback is slow on my machine",
    "start": "1687760",
    "end": "1692960"
  },
  {
    "text": "this is because i'm doing this demo locally so if you wanted to optimize this build time there are definitely",
    "start": "1692960",
    "end": "1698080"
  },
  {
    "text": "things you can do uh for kpac to make the build go faster that i obviously have not done but um so",
    "start": "1698080",
    "end": "1705440"
  },
  {
    "text": "cartographer doesn't know anything about kpac that's part of the beauty of choreography and one of the differences",
    "start": "1705440",
    "end": "1711360"
  },
  {
    "text": "between um orchestration and choreography that as a choreographer cartographer is really",
    "start": "1711360",
    "end": "1716480"
  },
  {
    "text": "just a layer above all of these things so uh so you can optimize the build for sure but you would be doing it with uh",
    "start": "1716480",
    "end": "1723039"
  },
  {
    "text": "kpac so we're almost done here it's exporting the image so it's publishing it to gcr",
    "start": "1723039",
    "end": "1729279"
  },
  {
    "text": "you can see already that it's got the full tag with the shot that we're going to want okay all right moving on cool",
    "start": "1729279",
    "end": "1735679"
  },
  {
    "text": "we have an image on the registry so um",
    "start": "1735679",
    "end": "1741600"
  },
  {
    "text": "the okay so now what we want to do is again cartographer we would want cartographer to have been monitoring",
    "start": "1741600",
    "end": "1747760"
  },
  {
    "text": "that and to realize again that the status type is ready and uh and it's",
    "start": "1747760",
    "end": "1753120"
  },
  {
    "text": "true and so now the piece of information we want to pull out of here is this latest image field",
    "start": "1753120",
    "end": "1759520"
  },
  {
    "text": "right it's here's the tag and this is what we want to give so it would be dot status dot latest image in the case of",
    "start": "1759520",
    "end": "1766960"
  },
  {
    "text": "k-pac right if you were using another build tool then maybe it would be a different it",
    "start": "1766960",
    "end": "1772320"
  },
  {
    "text": "would be probably a different field right so uh so specifically so i've just",
    "start": "1772320",
    "end": "1777440"
  },
  {
    "text": "gotten that same value and i'm just storing it in an environment variable so i can just",
    "start": "1777440",
    "end": "1782480"
  },
  {
    "text": "inline do the environment substitution and i'm going to take that same k native yaml that we were looking at before",
    "start": "1782480",
    "end": "1788960"
  },
  {
    "text": "and here it is so now i have this yaml so my i have choices now i could either just do uh sort of",
    "start": "1788960",
    "end": "1796240"
  },
  {
    "text": "the equivalent of a cue cuddle apply have cartographer just submit this yaml to the api server and then i would have",
    "start": "1796240",
    "end": "1801919"
  },
  {
    "text": "my application running in the same cluster where i've just done this build or i could do a git push of",
    "start": "1801919",
    "end": "1807840"
  },
  {
    "text": "this uh to um uh some ops repo so that i could then deliver this application to maybe",
    "start": "1807840",
    "end": "1814960"
  },
  {
    "text": "multiple clusters in multiple regions etc so both of those use cases are valid uh and hopefully as long as my demo",
    "start": "1814960",
    "end": "1821200"
  },
  {
    "text": "keeps working and we have enough time i'm going to show you cartographer doing the get push and then the delivery",
    "start": "1821200",
    "end": "1827440"
  },
  {
    "text": "um but just to continue on these core concepts um",
    "start": "1827440",
    "end": "1833600"
  },
  {
    "text": "the next thing is so we've seen the manual approach and we've observed the opportunities for",
    "start": "1833600",
    "end": "1839279"
  },
  {
    "text": "automation so how does cartographer actually do this so when you install",
    "start": "1839279",
    "end": "1845039"
  },
  {
    "text": "cartographer it installs a few additional resources so i'm to grabbing specifically for",
    "start": "1845039",
    "end": "1850720"
  },
  {
    "text": "those for the ones called templates that david was mentioning earlier you can see there are several different types of",
    "start": "1850720",
    "end": "1856080"
  },
  {
    "text": "templates that cartographers giving us to work with and what we want to do is embed our our resources those three that",
    "start": "1856080",
    "end": "1862080"
  },
  {
    "text": "we created into three of these we have to choose the right ones and basically you choose them based on the kind of",
    "start": "1862080",
    "end": "1867840"
  },
  {
    "text": "output that the templates provide so you can imagine that a cluster source template is probably good for our flex cd get repository source a cluster image",
    "start": "1867840",
    "end": "1876080"
  },
  {
    "text": "template is probably a good choice for the k-pac one and then k-native we're just deploying it we don't need any output from it so cluster template makes",
    "start": "1876080",
    "end": "1882880"
  },
  {
    "text": "sense so let's look at what that looks like i'm just going to focus on just the get",
    "start": "1882880",
    "end": "1888880"
  },
  {
    "text": "repository and the k-pac because they have more fields in them so",
    "start": "1888880",
    "end": "1894240"
  },
  {
    "text": "the way that you embed it is um i see literally",
    "start": "1894240",
    "end": "1899360"
  },
  {
    "text": "this stuff everything underneath template here is just copy paste the exact same thing that we just submitted",
    "start": "1899360",
    "end": "1905600"
  },
  {
    "text": "to that we were just using and that we just looked at this template is kind of like a freeform",
    "start": "1905600",
    "end": "1911120"
  },
  {
    "text": "field you could put anything so cartographer itself doesn't know how to work with flux it's just like you give",
    "start": "1911120",
    "end": "1916960"
  },
  {
    "text": "me some yaml and i'll apply it to the cluster so after so so by that we're giving cartographer control to create",
    "start": "1916960",
    "end": "1922960"
  },
  {
    "text": "the resource and then because cartographer has created the resource of course it has",
    "start": "1922960",
    "end": "1928159"
  },
  {
    "text": "now knowledge about it so it can continue to check the status to see when the uh when it's ready when the",
    "start": "1928159",
    "end": "1934000"
  },
  {
    "text": "conditions show that it has done something and then at that point because this is a cluster source",
    "start": "1934000",
    "end": "1940000"
  },
  {
    "text": "template the cluster source template has two fields of output one is url and the other one is a revision",
    "start": "1940000",
    "end": "1946000"
  },
  {
    "text": "and so what we have to do is explain to cartographer how to pull the information that we need",
    "start": "1946000",
    "end": "1952159"
  },
  {
    "text": "outside of from the flux resource and so we've just seen that flux",
    "start": "1952159",
    "end": "1957760"
  },
  {
    "text": "puts the url that we want in this field called status artifact url so this is",
    "start": "1957760",
    "end": "1963440"
  },
  {
    "text": "how we uh bridge that gap and teach cartographer how to read the desired",
    "start": "1963440",
    "end": "1968880"
  },
  {
    "text": "information from whatever uh resources underneath the template same for",
    "start": "1968880",
    "end": "1975039"
  },
  {
    "text": "uh kpac image because this is an image type of template the output is going to be an",
    "start": "1975039",
    "end": "1981279"
  },
  {
    "text": "image and we're telling it where to get the value is going to be the image path is status latest image but other than",
    "start": "1981279",
    "end": "1988080"
  },
  {
    "text": "that underneath this template field we basically just copied and pasted the very same thing we just looked at",
    "start": "1988080",
    "end": "1993360"
  },
  {
    "text": "uh the only thing that's different here is just the syntax so you can tell that cartographer is going to have to inject",
    "start": "1993360",
    "end": "1998799"
  },
  {
    "text": "the source url um so the syntax is not environment variables it's it's this kind of syntax",
    "start": "1998799",
    "end": "2006240"
  },
  {
    "text": "so that's how you uh kind of start to wire it together but what we haven't told cartographer yet is that it should apply",
    "start": "2006240",
    "end": "2013039"
  },
  {
    "text": "the git repository vml before it applies the kpac right it doesn't photographer doesn't know what order to do things in",
    "start": "2013039",
    "end": "2019600"
  },
  {
    "text": "and also we could have maybe several git repositories that we are monitoring so we have to tell cartographer exactly",
    "start": "2019600",
    "end": "2025760"
  },
  {
    "text": "which of those gate repositories it should use to inject the value into kpac",
    "start": "2025760",
    "end": "2031200"
  },
  {
    "text": "so we do that using a supply chain so uh supply chain is",
    "start": "2031200",
    "end": "2038000"
  },
  {
    "text": "um i'm just going to get tiny bit smaller i hope you can still read this",
    "start": "2038000",
    "end": "2044080"
  },
  {
    "text": "okay so here's our supply chain uh so it's another cartographer resource",
    "start": "2044080",
    "end": "2049839"
  },
  {
    "text": "and um you can see that it has a list of resources right david was talking about resources so we have three resources our",
    "start": "2049839",
    "end": "2056878"
  },
  {
    "text": "git repository our kpac image and our k native application and so the way that these work is every",
    "start": "2056879",
    "end": "2063599"
  },
  {
    "text": "resource is a name and a reference to a template and so these references are exactly the templates we were just",
    "start": "2063599",
    "end": "2069358"
  },
  {
    "text": "looking at that's cluster source cluster image and cluster template uh and this is just the name of the of the actual",
    "start": "2069359",
    "end": "2075760"
  },
  {
    "text": "resource that we're pointing to um the metadata.name inside of our",
    "start": "2075760",
    "end": "2080800"
  },
  {
    "text": "cluster source template so so now there's an order now cartographer knows it is first cape is second and when it",
    "start": "2080800",
    "end": "2088079"
  },
  {
    "text": "does capec we're also creating a dependency now for injection where we're saying we need",
    "start": "2088079",
    "end": "2093760"
  },
  {
    "text": "this template that needs input and that input is going to come from a cluster source template so it's a list",
    "start": "2093760",
    "end": "2100560"
  },
  {
    "text": "of sources and which one is it it's the one called source provider so this is",
    "start": "2100560",
    "end": "2106160"
  },
  {
    "text": "matches this and same here you're saying we're saying here that we have an image type input",
    "start": "2106160",
    "end": "2112480"
  },
  {
    "text": "coming from a resource called image builder here is image builder and in effect it is an image type template",
    "start": "2112480",
    "end": "2119440"
  },
  {
    "text": "um and so that's basically it you can have many many inputs so that's why they have",
    "start": "2119440",
    "end": "2125520"
  },
  {
    "text": "names here so that you can refer to them separately if you have multiples and then it would be sources dot source dot",
    "start": "2125520",
    "end": "2132240"
  },
  {
    "text": "url for example or images dot image and then the field is also called image",
    "start": "2132240",
    "end": "2138720"
  },
  {
    "text": "uh so that that explains this syntax i showed you so",
    "start": "2138720",
    "end": "2143839"
  },
  {
    "text": "that's where that's coming from from the supply chain so uh so now we've got a lot working for",
    "start": "2143839",
    "end": "2149280"
  },
  {
    "text": "us but uh this is this supply chain that i showed you is gonna work really really",
    "start": "2149280",
    "end": "2155280"
  },
  {
    "text": "well for my hello world application because i've hard-coded that name in there and i've hard-coded that url so",
    "start": "2155280",
    "end": "2160480"
  },
  {
    "text": "really what we want to do is parameterize that information and we do that through something called",
    "start": "2160480",
    "end": "2166240"
  },
  {
    "text": "a workload and so you can also imagine that so far everything that we've seen the templates in the supply chain is",
    "start": "2166240",
    "end": "2171839"
  },
  {
    "text": "something that an applications operator would do they could build out multiple supply chains with multiple paths to",
    "start": "2171839",
    "end": "2177200"
  },
  {
    "text": "production and then this view is what the developer would see what would use right",
    "start": "2177200",
    "end": "2182480"
  },
  {
    "text": "um the developer would be responsible for providing the url in the branch you know most basically that would be the",
    "start": "2182480",
    "end": "2188640"
  },
  {
    "text": "basic information if the application operator exposed more fields for the developer to use then you",
    "start": "2188640",
    "end": "2195520"
  },
  {
    "text": "know it's possible that a developer could fill in more fields but the sort of the basics are these um",
    "start": "2195520",
    "end": "2201680"
  },
  {
    "text": "and then because you could have multiple supply chains running in the cluster we put a label",
    "start": "2201680",
    "end": "2207440"
  },
  {
    "text": "on the workload here and this one is called uh uptown's vmware.com workload",
    "start": "2207440",
    "end": "2213200"
  },
  {
    "text": "type web and that label is needs to match the selector so if i scroll back up to the",
    "start": "2213200",
    "end": "2219760"
  },
  {
    "text": "cluster supply chain this has a selector with the same value so as soon as that workload is deployed this supply chain",
    "start": "2219760",
    "end": "2227520"
  },
  {
    "text": "will respond it'll say oh i have i see that workload i have to act on it and so it will take those values and uh",
    "start": "2227520",
    "end": "2234960"
  },
  {
    "text": "and inject them so the last very last thing we need to do is go review all of our templates",
    "start": "2234960",
    "end": "2240560"
  },
  {
    "text": "and parameterize all those values that were hard coded so the way that would look",
    "start": "2240560",
    "end": "2246000"
  },
  {
    "text": "would be if i scroll up here so for our for our cluster source template instead of hard coding the name",
    "start": "2246000",
    "end": "2252400"
  },
  {
    "text": "when it's when when it's going to stamp out that git repository resource for our particular application instead of hard",
    "start": "2252400",
    "end": "2259119"
  },
  {
    "text": "coding hello world now we're going to take that value from the workload and instead of hard coding the url and the",
    "start": "2259119",
    "end": "2264560"
  },
  {
    "text": "branch again we're taking those values from the workload so now this can be used for many applications and",
    "start": "2264560",
    "end": "2270800"
  },
  {
    "text": "you can see here on the image one same thing the work the name will match uh we're gonna use the same name to name",
    "start": "2270800",
    "end": "2277520"
  },
  {
    "text": "the image but we also have uh other sources we can define more global parameters that are",
    "start": "2277520",
    "end": "2283839"
  },
  {
    "text": "shared across workloads so for example the name of the registry that might be something we want to make",
    "start": "2283839",
    "end": "2289119"
  },
  {
    "text": "more general um and then you can better understand also here the syntax of this is the injection that cartographer will do",
    "start": "2289119",
    "end": "2295520"
  },
  {
    "text": "automatically from the source right it has all these different sources of information so that's kind of how it all uh wires",
    "start": "2295520",
    "end": "2303440"
  },
  {
    "text": "together so i'm gonna uh i'm gonna keep going with this example so i'm gonna move to",
    "start": "2303440",
    "end": "2310079"
  },
  {
    "text": "to the get ops example and i'll just i guess keep going until",
    "start": "2310079",
    "end": "2315440"
  },
  {
    "text": "for as long as i have time so hopefully i can get through the whole thing but um i do want to show you that",
    "start": "2315440",
    "end": "2321920"
  },
  {
    "text": "these examples are coming from [Music]",
    "start": "2321920",
    "end": "2327920"
  },
  {
    "text": "here i'm going to run actually this there's a set of examples in the cartographer repo which are really great",
    "start": "2327920",
    "end": "2333359"
  },
  {
    "text": "and what i'm going to try to get through is these last two this is sort of the get ops uh using the supply chain to go",
    "start": "2333359",
    "end": "2340079"
  },
  {
    "text": "from code to git repo and then the delivery to go from git repo the ops",
    "start": "2340079",
    "end": "2345520"
  },
  {
    "text": "repo to the deployment but i would encourage you if you're if you're you want to try it on your own you can get",
    "start": "2345520",
    "end": "2350640"
  },
  {
    "text": "it from here or you can try the other examples here as well they're all great so",
    "start": "2350640",
    "end": "2357599"
  },
  {
    "text": "okay so let's try the get writer example so",
    "start": "2357599",
    "end": "2364640"
  },
  {
    "text": "we're going to do a little bit of a different flow uh we're going to go still source using flux and to build the image using kpac",
    "start": "2364800",
    "end": "2372079"
  },
  {
    "text": "we might have a time for a little more chat while cape is doing its work and then we're going to actually use a",
    "start": "2372079",
    "end": "2377119"
  },
  {
    "text": "cluster config template to write the configuration to a config map and then",
    "start": "2377119",
    "end": "2382480"
  },
  {
    "text": "use techton to do a git push it'll read from the config",
    "start": "2382480",
    "end": "2388160"
  },
  {
    "text": "map and it'll get pushed to a git repository so that'll be our the",
    "start": "2388160",
    "end": "2394560"
  },
  {
    "text": "left side i guess of of uh get offs so i'm just going to go ahead and deploy",
    "start": "2394560",
    "end": "2400480"
  },
  {
    "text": "so the example files that i showed you that are part of that uh that are part of the cartographer",
    "start": "2400480",
    "end": "2405839"
  },
  {
    "text": "repository i just deployed everything at once the the supply chain as well as the workload",
    "start": "2405839",
    "end": "2412640"
  },
  {
    "text": "so uh while that's running in the background so hopefully kpac will uh we'll finish before we're done talking",
    "start": "2412640",
    "end": "2418400"
  },
  {
    "text": "about this so this this supply chain is a little bit different from the first one we looked at right uh this is the same i",
    "start": "2418400",
    "end": "2425440"
  },
  {
    "text": "left the the selector the same instead of having two supply chains we're just overwriting the last one which is okay",
    "start": "2425440",
    "end": "2431200"
  },
  {
    "text": "um and uh so we don't have to change the workload basically that's what that means and the resources again the first",
    "start": "2431200",
    "end": "2437680"
  },
  {
    "text": "two resources are exactly the same so you can also kind of see that these supply chains because they're decoupled",
    "start": "2437680",
    "end": "2443359"
  },
  {
    "text": "from the templates they allow you to reuse templates in different order if you want or in different just in",
    "start": "2443359",
    "end": "2448560"
  },
  {
    "text": "different kinds of designs so we're reusing our first two the cluster source template and the cluster image template",
    "start": "2448560",
    "end": "2454720"
  },
  {
    "text": "that we had before and and uh at the end instead of just",
    "start": "2454720",
    "end": "2459839"
  },
  {
    "text": "deploying it we're going to use a cluster config template to uh",
    "start": "2459839",
    "end": "2465040"
  },
  {
    "text": "write the value write the um k native definition to a map to a config map and",
    "start": "2465040",
    "end": "2470480"
  },
  {
    "text": "then we're going to use a cluster template that is going to call tecton uh",
    "start": "2470480",
    "end": "2476000"
  },
  {
    "text": "it's going to utilize tecton to do the gate push so i'm going to show you the cluster config template the one that the",
    "start": "2476000",
    "end": "2482880"
  },
  {
    "text": "third new resource here",
    "start": "2482880",
    "end": "2486000"
  },
  {
    "text": "okay so this basically let's scroll to the top um",
    "start": "2490160",
    "end": "2495920"
  },
  {
    "text": "okay so here it is and so it's another one of our cartographer templates cluster config template",
    "start": "2495920",
    "end": "2501599"
  },
  {
    "text": "and in this case uh the output of this is going to be some config information so we have to tell it where to find this",
    "start": "2501599",
    "end": "2509040"
  },
  {
    "text": "config information and we're saying this one's not in the status but this one is in a field",
    "start": "2509040",
    "end": "2514480"
  },
  {
    "text": "called.data.manifest how do we know that it's because we're",
    "start": "2514480",
    "end": "2519920"
  },
  {
    "text": "defining in our config map definition that the values are going to be in",
    "start": "2519920",
    "end": "2525240"
  },
  {
    "text": "dotdata.manifest so that's it's going to go to the configmap and get whatever is there and then as far as like what we're",
    "start": "2525240",
    "end": "2530800"
  },
  {
    "text": "actually writing to that field it's a bunch of ammo but it includes um",
    "start": "2530800",
    "end": "2535920"
  },
  {
    "text": "it includes that same candidate this is a little bit differently coded i guess here but it is ultimately",
    "start": "2535920",
    "end": "2542880"
  },
  {
    "text": "that same k native service definition and uh and we also want to be able to",
    "start": "2542880",
    "end": "2548160"
  },
  {
    "text": "interpolate values dynamically so we're just using rather than the dollar sign syntax it uses a syntax ytt is a tool",
    "start": "2548160",
    "end": "2555920"
  },
  {
    "text": "from carvel very powerful for templating and overlaying yaml",
    "start": "2555920",
    "end": "2561119"
  },
  {
    "text": "but at the end of the day this is going to generate that same uh yaml so if you kind of peek out",
    "start": "2561119",
    "end": "2567119"
  },
  {
    "text": "here's the k native service and uh it's going to um inject",
    "start": "2567119",
    "end": "2573200"
  },
  {
    "text": "again this is just different way of saying the same thing data values images there's just a way to call out the image",
    "start": "2573200",
    "end": "2578880"
  },
  {
    "text": "that we want to dynamically inject in a way that ytt can understand so um",
    "start": "2578880",
    "end": "2585920"
  },
  {
    "text": "it's just a lot of yaml for the screen uh so the templates for the tecton portion of it to push to get",
    "start": "2585920",
    "end": "2592560"
  },
  {
    "text": "uh that's also a lot of yaml for the screen so i'm not actually going to show you i'm just going to show you that there's three files here",
    "start": "2592560",
    "end": "2598880"
  },
  {
    "text": "uh and i think i think soon with cartographer you might we might be able to like consolidate this a little bit",
    "start": "2598880",
    "end": "2605119"
  },
  {
    "text": "but uh we're basically using a task that's available on the tecton",
    "start": "2605119",
    "end": "2610480"
  },
  {
    "text": "catalog for git cli and uh and hooking that into cartographer but same thing",
    "start": "2610480",
    "end": "2616400"
  },
  {
    "text": "concepts that you've seen so far more or less to do that so from a developer perspective since we didn't",
    "start": "2616400",
    "end": "2622560"
  },
  {
    "text": "change the selector on the supply chain nothing really changes for the developer",
    "start": "2622560",
    "end": "2628560"
  },
  {
    "text": "so um so remember when i switch directories i already applied this so let's see if",
    "start": "2628560",
    "end": "2635520"
  },
  {
    "text": "it's done hopefully it will have finished already okay good okay so in the meantime uh our",
    "start": "2635520",
    "end": "2643760"
  },
  {
    "text": "our workload finished running so let's see we can use there's a handy plugin called tree uh let's to see like what",
    "start": "2643760",
    "end": "2652079"
  },
  {
    "text": "what our resource kind of like spawned what are what's the tree of things that that got generated",
    "start": "2652079",
    "end": "2658319"
  },
  {
    "text": "so sorry this is",
    "start": "2658319",
    "end": "2663440"
  },
  {
    "text": "okay there we go so we as developers uh apply to workload",
    "start": "2663440",
    "end": "2668720"
  },
  {
    "text": "right and that generated first a get repository resource when that was done created an image the image did its thing",
    "start": "2668720",
    "end": "2675839"
  },
  {
    "text": "and built built an image and then after that was ready it generated the supply chain",
    "start": "2675839",
    "end": "2680880"
  },
  {
    "text": "created the config map with our values and then uh and then it and then after the configmac",
    "start": "2680880",
    "end": "2687200"
  },
  {
    "text": "was ready it called tekton so what we should have and these are red but they're just because they're jobs they don't fail",
    "start": "2687200",
    "end": "2694079"
  },
  {
    "text": "what we expect to have right now is that in our git repository we should have",
    "start": "2694079",
    "end": "2700480"
  },
  {
    "text": "the yaml that we would want to deploy to any cluster so i'm just going to do here a git clone i have a git repo running on the cluster",
    "start": "2700480",
    "end": "2707040"
  },
  {
    "text": "but it's just i'm just doing a git clone and let's look at what we got in that git clone and we said we do have config",
    "start": "2707040",
    "end": "2713599"
  },
  {
    "text": "manifest.yaml so that's good that's what we expect and if we look inside the file",
    "start": "2713599",
    "end": "2719920"
  },
  {
    "text": "uh there we go there's yaml here's the k native portion so it's done ytt without all that ygt",
    "start": "2719920",
    "end": "2726319"
  },
  {
    "text": "kind of like eye stuff uh it's interpolated all the right values so our application name and the image and so",
    "start": "2726319",
    "end": "2732720"
  },
  {
    "text": "now this is ready to be deployed to any cluster you want right so that part of our demo that part of the demo finished",
    "start": "2732720",
    "end": "2740160"
  },
  {
    "text": "right the we've we've done our job for the left side of githubs so now if we move over to the right hand",
    "start": "2740160",
    "end": "2746160"
  },
  {
    "text": "side uh we have something called a delivery so just as we've been looking at supply",
    "start": "2746160",
    "end": "2751599"
  },
  {
    "text": "chains there's a counterpart we call these blueprints that does the delivery of that yellow uh to whatever",
    "start": "2751599",
    "end": "2759359"
  },
  {
    "text": "cluster you want and so it's going to be responding we're going to use again very similar we're going to use flux to",
    "start": "2759359",
    "end": "2764720"
  },
  {
    "text": "detect new commits on that boss repo and then deploy it to kubernetes so if we",
    "start": "2764720",
    "end": "2770480"
  },
  {
    "text": "look at the delivery very similar structure to the supply chain uh cluster delivery instead of cluster supply chain",
    "start": "2770480",
    "end": "2776640"
  },
  {
    "text": "we still have the selector so that it can detect when there will be deliverables instead",
    "start": "2776640",
    "end": "2782960"
  },
  {
    "text": "of workloads they're deliverables and again similar structure to resources the first one is",
    "start": "2782960",
    "end": "2788640"
  },
  {
    "text": "very similar it still it uses a git git repository from flux again because all we're doing is pulling a get re",
    "start": "2788640",
    "end": "2795119"
  },
  {
    "text": "repo but then for the deploy we use another kind of template called a cluster deployment template",
    "start": "2795119",
    "end": "2800720"
  },
  {
    "text": "uh where we're gonna take you know the output from that this one finds in git",
    "start": "2800720",
    "end": "2805920"
  },
  {
    "text": "and deploy that so i think uh yeah we can take okay let's take a look at that yaml quickly but",
    "start": "2805920",
    "end": "2812000"
  },
  {
    "text": "it's it's sort of the same idea right cluster deployment template uh there's no output here either so we",
    "start": "2812000",
    "end": "2818640"
  },
  {
    "text": "just have this uh this template to to grab whatever url was there",
    "start": "2818640",
    "end": "2823760"
  },
  {
    "text": "uh extract that and um and we're just telling it uh how how do you know how can cartographer",
    "start": "2823760",
    "end": "2830160"
  },
  {
    "text": "know that this was successful because not everything uses the same syntax like the ones that we saw earlier were ready",
    "start": "2830160",
    "end": "2836240"
  },
  {
    "text": "is true but sometimes there's some resources that are built differently so this one is reconcile succeeded reconcile failed so just another way",
    "start": "2836240",
    "end": "2842480"
  },
  {
    "text": "that you can teach photographer to work with the resources that you're asking it to",
    "start": "2842480",
    "end": "2848240"
  },
  {
    "text": "deploy so uh the deliverable again the counterpart to the workload so this",
    "start": "2848240",
    "end": "2853280"
  },
  {
    "text": "would be the thing that represents that precise repo that uh",
    "start": "2853280",
    "end": "2859040"
  },
  {
    "text": "that we are working with for this hello cncf app right so this is our that's our that's our repo for this for",
    "start": "2859040",
    "end": "2865359"
  },
  {
    "text": "this particular app so if we apply all of this",
    "start": "2865359",
    "end": "2870960"
  },
  {
    "text": "then we would expect cartographer to very quickly go",
    "start": "2870960",
    "end": "2876240"
  },
  {
    "text": "um go to that repo realize that there's a commit ready for us grab it and deploy",
    "start": "2876640",
    "end": "2882640"
  },
  {
    "text": "it so we can see and that's what it did so that deliverable led uh cartographer to create the git",
    "start": "2882640",
    "end": "2888800"
  },
  {
    "text": "repository the git repository very quickly realized there's something to apply and then it created the deployer",
    "start": "2888800",
    "end": "2894880"
  },
  {
    "text": "template was applied and it created this so just to",
    "start": "2894880",
    "end": "2900400"
  },
  {
    "text": "uh make sure that it is actually running let's make sure that our k native deployment is there which it is",
    "start": "2900400",
    "end": "2906800"
  },
  {
    "text": "so we can really quickly do a port forward",
    "start": "2906800",
    "end": "2912240"
  },
  {
    "text": "and we can send a request to our application and it is",
    "start": "2912480",
    "end": "2918480"
  },
  {
    "text": "running and okay the demo did work it's panicking for no reason",
    "start": "2918480",
    "end": "2924000"
  },
  {
    "text": "okay that's um that's it let me",
    "start": "2924000",
    "end": "2929040"
  },
  {
    "text": "awesome thank you cora yeah demogods are with us today",
    "start": "2930800",
    "end": "2937680"
  },
  {
    "text": "yeah thank you all right yeah so um",
    "start": "2937680",
    "end": "2942720"
  },
  {
    "text": "yeah keep the the questions coming we're we're doing our best to try to address them and just let us know if if that's not",
    "start": "2942720",
    "end": "2950000"
  },
  {
    "text": "the case and we hope to continue continue the conversation after the session so",
    "start": "2950000",
    "end": "2955200"
  },
  {
    "text": "wrapping up the current challenges we see with the",
    "start": "2955200",
    "end": "2960559"
  },
  {
    "text": "pipeline orchestration pattern is that is tightly coupled very high level of interdependencies",
    "start": "2960559",
    "end": "2966559"
  },
  {
    "text": "between steps and once you start scaling it becomes harder to maintain to adapt to different",
    "start": "2966559",
    "end": "2972800"
  },
  {
    "text": "workloads and also to you know modify tools or add tools",
    "start": "2972800",
    "end": "2979119"
  },
  {
    "text": "as we saw it it implies a lack of consistent paths to production because these",
    "start": "2979119",
    "end": "2985440"
  },
  {
    "text": "highly customized do-it-yourself pipelines along your whole environment",
    "start": "2985440",
    "end": "2992240"
  },
  {
    "text": "and also there's no clear separation of concerns benefits we see in the using supply",
    "start": "2992240",
    "end": "3000319"
  },
  {
    "text": "chain choreography will be that well first because of the choreography pattern there is this loosely coupled",
    "start": "3000319",
    "end": "3007200"
  },
  {
    "text": "loose coupling between steps between resources it's highly customizable in turn as as",
    "start": "3007200",
    "end": "3014000"
  },
  {
    "text": "we just saw and you know each one of the examples or each one of supply chains",
    "start": "3014000",
    "end": "3019680"
  },
  {
    "text": "that cora demonstrated was completely different and it uses uses different tools for different",
    "start": "3019680",
    "end": "3027280"
  },
  {
    "text": "purposes and even you know providing and",
    "start": "3027280",
    "end": "3032640"
  },
  {
    "text": "the enough level of flexibility to developers it maintains consistency",
    "start": "3032640",
    "end": "3038079"
  },
  {
    "text": "and it's repeatable for different environments and workloads it also provides a model with clear",
    "start": "3038079",
    "end": "3044800"
  },
  {
    "text": "separation of concerns both for operations and depth teams and finally giving us the flexibility to",
    "start": "3044800",
    "end": "3051920"
  },
  {
    "text": "produce or design different configurations to get source code to",
    "start": "3051920",
    "end": "3057359"
  },
  {
    "text": "production and in general is much more reliable it doesn't have a dependency on a central entity",
    "start": "3057359",
    "end": "3064000"
  },
  {
    "text": "to manage all the steps much more trustable",
    "start": "3064000",
    "end": "3069119"
  },
  {
    "text": "all right we hope uh this was educational for you we would really like",
    "start": "3069119",
    "end": "3075200"
  },
  {
    "text": "to keep the conversation going bring your questions your",
    "start": "3075200",
    "end": "3080400"
  },
  {
    "text": "easy your tough questions too or several communication channels i will",
    "start": "3080400",
    "end": "3087359"
  },
  {
    "text": "uh let me i will put here link to our slack channel in the coordinates",
    "start": "3087359",
    "end": "3094000"
  },
  {
    "text": "workspace you are welcome to join continue conversation and even join us in the",
    "start": "3094000",
    "end": "3099520"
  },
  {
    "text": "meetings if you want is there any question outstanding question right there that we",
    "start": "3099520",
    "end": "3106240"
  },
  {
    "text": "could address in the few minutes that we have remaining",
    "start": "3106240",
    "end": "3113839"
  },
  {
    "text": "i think we do have a few core can you see them or do we want to turn yeah",
    "start": "3113839",
    "end": "3120640"
  },
  {
    "text": "yeah which ones are outstanding which ones have not been answered i'm just trying to catch up on that uh",
    "start": "3120640",
    "end": "3127200"
  },
  {
    "text": "yeah the one from ananth is basically optimizing sequential and",
    "start": "3127200",
    "end": "3133440"
  },
  {
    "text": "parallel steps by analyzing steps",
    "start": "3133440",
    "end": "3139720"
  },
  {
    "text": "i'm not sure how much is on the road map and how much is now i guess david you're probably you're probably more up to date on on uh",
    "start": "3148319",
    "end": "3154960"
  },
  {
    "text": "and cartographer but if you're talking about k-pac um then k-pac does definitely have uh optimizations built",
    "start": "3154960",
    "end": "3161920"
  },
  {
    "text": "into it uh and it does a lot of like caching um it doesn't it doesn't apply the build",
    "start": "3161920",
    "end": "3168559"
  },
  {
    "text": "packs in parallel um but there's there it has two different kinds of caching and it does a",
    "start": "3168559",
    "end": "3174480"
  },
  {
    "text": "lot of analogy but that build that you were watching was the first time build um",
    "start": "3174480",
    "end": "3179520"
  },
  {
    "text": "and so uh with any further builds would be faster um and then any other kind of",
    "start": "3179520",
    "end": "3185520"
  },
  {
    "text": "parallelization kind of depends on that [Music] um",
    "start": "3185520",
    "end": "3192079"
  },
  {
    "text": "yeah right now what cartographer can provide here is again a way to design the",
    "start": "3193040",
    "end": "3199599"
  },
  {
    "text": "execution pad even considering parallel tasks not much in the analysis",
    "start": "3199599",
    "end": "3206720"
  },
  {
    "text": "field i mean cartographer itself tries to not deal with the specifics of each step",
    "start": "3206720",
    "end": "3213119"
  },
  {
    "text": "and specifically not much with analyzing but in in the whole context of providing",
    "start": "3213119",
    "end": "3220640"
  },
  {
    "text": "flexibility for different supply chain designs because i've ever could help with that",
    "start": "3220640",
    "end": "3227440"
  },
  {
    "text": "then i think",
    "start": "3232559",
    "end": "3235200"
  },
  {
    "text": "you can see the example at the bottom [Music]",
    "start": "3238319",
    "end": "3243440"
  },
  {
    "text": "uh i mean definitely there's a lot of use cases if you don't have if you're in cluster and if there's not a tool that",
    "start": "3243440",
    "end": "3249680"
  },
  {
    "text": "does exactly what you want um like um",
    "start": "3249680",
    "end": "3254880"
  },
  {
    "text": "uh like plugs or paper like kpak for example the git push use case right we",
    "start": "3254880",
    "end": "3260800"
  },
  {
    "text": "had to use tekton for that tecton is is a tool that allows you that will execute for you in a container a script of your",
    "start": "3260800",
    "end": "3268240"
  },
  {
    "text": "of your authoring right so cartographer doesn't do that guitar you can't give cartographer a script",
    "start": "3268240",
    "end": "3273839"
  },
  {
    "text": "for it to run a container photographer can orchestrate things but um you need some kind of like",
    "start": "3273839",
    "end": "3280400"
  },
  {
    "text": "uh arbitrary activity to happen you could reach out to something like a techton",
    "start": "3280400",
    "end": "3286799"
  },
  {
    "text": "and tekton will run any script for you so um i think that probably covers a few of",
    "start": "3286799",
    "end": "3292160"
  },
  {
    "text": "these sort of uh cases where uh the task that you're trying to",
    "start": "3292160",
    "end": "3297520"
  },
  {
    "text": "accomplish doesn't exist as uh as a tool itself in in um",
    "start": "3297520",
    "end": "3303920"
  },
  {
    "text": "in kubernetes um there's a really there's an example i",
    "start": "3303920",
    "end": "3310079"
  },
  {
    "text": "think uh scott rosenberg actually uh he has his github repository i think",
    "start": "3310079",
    "end": "3317119"
  },
  {
    "text": "would be rabbi or v rabbi il",
    "start": "3317119",
    "end": "3321119"
  },
  {
    "text": "an example of like provisioning vms i think it was right he stamped out a whole set of google",
    "start": "3322799",
    "end": "3328480"
  },
  {
    "text": "machines using cartographer so because it's just this orchestration layer that can orchestrate uh any any any sequence",
    "start": "3328480",
    "end": "3336640"
  },
  {
    "text": "of tools and those those tools can essentially accomplish anything because if there isn't a tool that does exactly what you want you can say you can use a",
    "start": "3336640",
    "end": "3343119"
  },
  {
    "text": "tool that can run any script that you want that can make call outs uh you know that can check things out that are outside the cluster trigger",
    "start": "3343119",
    "end": "3349760"
  },
  {
    "text": "things check check responses uh i don't know that there's really any limitation to what you could put",
    "start": "3349760",
    "end": "3355440"
  },
  {
    "text": "together i wonder if we could bear that uh get it quickly enough let me see",
    "start": "3355440",
    "end": "3361200"
  },
  {
    "text": "um right yeah i just shared the link to the",
    "start": "3361200",
    "end": "3368000"
  },
  {
    "text": "repo um is a cryptographer use user and this is just an example how far",
    "start": "3368000",
    "end": "3374720"
  },
  {
    "text": "can the project get outside kubernetes yeah so he's using right he's goes from",
    "start": "3374720",
    "end": "3380640"
  },
  {
    "text": "a git source and he provisions virtual machines so he's stamping out so so that terraform kind of question right uh that",
    "start": "3380640",
    "end": "3387599"
  },
  {
    "text": "repo would be a great example of how to stamp out a bunch of virtual machines and so that that's the approach that",
    "start": "3387599",
    "end": "3395440"
  },
  {
    "text": "scott took but you can use it as a model if you want to take a slightly different approach so yeah",
    "start": "3395440",
    "end": "3400720"
  },
  {
    "text": "i hope that that answers the question [Music]",
    "start": "3400720",
    "end": "3411349"
  },
  {
    "text": "yeah i don't think i see different ones",
    "start": "3415599",
    "end": "3420318"
  },
  {
    "text": "and we are a time okay all right well thank you both so much",
    "start": "3420640",
    "end": "3428000"
  },
  {
    "text": "david and cora thank you everyone for joining us definitely click their links to join in",
    "start": "3428000",
    "end": "3434640"
  },
  {
    "text": "the conversation post event and we will have all of this up and online later this afternoon for anyone",
    "start": "3434640",
    "end": "3442319"
  },
  {
    "text": "who missed it thank you all and we'll see you next time",
    "start": "3442319",
    "end": "3447599"
  },
  {
    "text": "thank you thank you",
    "start": "3447599",
    "end": "3451559"
  }
]