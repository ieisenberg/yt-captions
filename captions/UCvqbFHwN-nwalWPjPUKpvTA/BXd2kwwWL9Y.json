[
  {
    "text": "[Music]",
    "start": "1420",
    "end": "24149"
  },
  {
    "text": "hello everyone welcome to cloud native live where we",
    "start": "27279",
    "end": "32558"
  },
  {
    "text": "dive deep into the code behind cloud native i'm annie talvasto and i am a cncf ambassador as well as the product",
    "start": "32559",
    "end": "39360"
  },
  {
    "text": "marketing manager cast ai a kubernetes cloud cost optimization company",
    "start": "39360",
    "end": "44399"
  },
  {
    "text": "very much a welcome on my part so every week we bring a new set of",
    "start": "44399",
    "end": "49440"
  },
  {
    "text": "presenters to showcase how to work with cloud native technologies they will build things they will break things and",
    "start": "49440",
    "end": "56160"
  },
  {
    "text": "they will answer your questions join us every wednesday at 11 a.m et",
    "start": "56160",
    "end": "61440"
  },
  {
    "text": "so this week we have the pleasure to have alex jai corp kai porp hopefully",
    "start": "61440",
    "end": "66799"
  },
  {
    "text": "i'm not even butchering the name you can give the correct pronunciation shoe soon hear us with us to talk about a very",
    "start": "66799",
    "end": "73600"
  },
  {
    "text": "exciting topic um so join us for kubecon plus cloud nativecon virtual north",
    "start": "73600",
    "end": "80720"
  },
  {
    "text": "america october 11th to 15th to hear the latest from the cloud native community",
    "start": "80720",
    "end": "86640"
  },
  {
    "text": "as always this is an official live stream of the cncf and as such is",
    "start": "86640",
    "end": "92400"
  },
  {
    "text": "subject to the cncf code of conduct so please do not add anything to the chat or questions that would be in violation",
    "start": "92400",
    "end": "99040"
  },
  {
    "text": "of that code of conduct basically be respectful of all of your fellow",
    "start": "99040",
    "end": "104640"
  },
  {
    "text": "participants and presenters with that hand it over to alex to kick off today's presentation",
    "start": "104640",
    "end": "111920"
  },
  {
    "text": "thank you so much anna and uh good morning good afternoon good evening",
    "start": "111920",
    "end": "116960"
  },
  {
    "text": "wherever you're watching i'm really excited to be uh to be presenting today and uh",
    "start": "116960",
    "end": "123759"
  },
  {
    "text": "and hopefully um you wouldn't have jinxed the demo guards and my demo will just work",
    "start": "123759",
    "end": "131039"
  },
  {
    "text": "great okay um if we can switch to the slides",
    "start": "134239",
    "end": "140400"
  },
  {
    "text": "brilliant so i'm going to be talking today about kubernetes and persistent data and",
    "start": "141120",
    "end": "147360"
  },
  {
    "text": "stateful workloads um which which i'm sure is um",
    "start": "147360",
    "end": "153360"
  },
  {
    "text": "something which is a very you know commonly uh a very common pain point in in many use",
    "start": "153360",
    "end": "159680"
  },
  {
    "text": "cases when when using uh kubernetes so before we start a little bit a little",
    "start": "159680",
    "end": "166160"
  },
  {
    "text": "bit about myself uh my name is alex kirkhoff um i'm very as you can tell i'm",
    "start": "166160",
    "end": "171760"
  },
  {
    "text": "very passionate about storage um i'm the founder and ceo of storage os where we're um building a software",
    "start": "171760",
    "end": "178400"
  },
  {
    "text": "defined cloud native storage platform um but i also have two hats i'm i'm the co-chair for the cncf storage tank",
    "start": "178400",
    "end": "186800"
  },
  {
    "text": "that was formerly the cncf storage sig and basically my background is is in",
    "start": "186800",
    "end": "192959"
  },
  {
    "text": "engineering and infrastructure and i did that for 25 years before the the startup bug um got",
    "start": "192959",
    "end": "200879"
  },
  {
    "text": "me and and you know promoted me into this into this uh into this direction and adventure which is which is pretty",
    "start": "200879",
    "end": "207360"
  },
  {
    "text": "cool um as always we'll try and keep this interactive so if if there are questions",
    "start": "207360",
    "end": "213519"
  },
  {
    "text": "please feel free to stick them in the chat and i'll try and answer them as we go along or other at an opportune moment",
    "start": "213519",
    "end": "219680"
  },
  {
    "text": "in the presentation um i'm going to do a little shameless plug um with my with",
    "start": "219680",
    "end": "227519"
  },
  {
    "text": "my co-chair hat on um i'd like to just um sort of mention that the",
    "start": "227519",
    "end": "233120"
  },
  {
    "text": "um a lot of the topics that we're talking about today are the sort of topics and and technical work that we do",
    "start": "233120",
    "end": "239840"
  },
  {
    "text": "as part of the tag storage in in in the cncf we meet every couple of weeks and all",
    "start": "239840",
    "end": "247040"
  },
  {
    "text": "the calls are open membership is open so please feel free to join the calls and contribute and",
    "start": "247040",
    "end": "253519"
  },
  {
    "text": "join the main analysts and help us build our storage community which which i",
    "start": "253519",
    "end": "260079"
  },
  {
    "text": "think would be really beneficial okay with that plug out of the way",
    "start": "260079",
    "end": "265600"
  },
  {
    "text": "i'm going to talk a little bit about just to set the scene the the the journey to cloud native that we see",
    "start": "265600",
    "end": "271600"
  },
  {
    "text": "um a lot of uh organizations big and small uh doing to when they when they're",
    "start": "271600",
    "end": "276880"
  },
  {
    "text": "when they start uh when they first adopt this this this this new paradigm um and",
    "start": "276880",
    "end": "282560"
  },
  {
    "text": "really you know this is kind of obvious but obviously you know developers starting off with",
    "start": "282560",
    "end": "289199"
  },
  {
    "text": "with containers is the first is the first step the big thing that containers do is it",
    "start": "289199",
    "end": "295600"
  },
  {
    "text": "kind of it breaks that lock-in to individual servers right so so",
    "start": "295600",
    "end": "301280"
  },
  {
    "text": "we we now have portable codes that can run anywhere and obviously by",
    "start": "301280",
    "end": "307360"
  },
  {
    "text": "allowing codes to run anywhere you um you enable the ability to automate code",
    "start": "307360",
    "end": "314080"
  },
  {
    "text": "and of course um you know that's where kubernetes comes in and kubernetes is now the de facto container orchestrator that",
    "start": "314080",
    "end": "321600"
  },
  {
    "text": "allows the automation of applications in in just about any environment in fact",
    "start": "321600",
    "end": "327199"
  },
  {
    "text": "you know you can think of kubernetes as a layer that abstracts the",
    "start": "327199",
    "end": "332240"
  },
  {
    "text": "infrastructure and provides developers with a way of composing what their",
    "start": "332240",
    "end": "338160"
  },
  {
    "text": "application needs so so so developers can now say my application is um formed of these",
    "start": "338160",
    "end": "344240"
  },
  {
    "text": "containers and it needs this amount of cpu and this amount of memory and these sort of networking requirements and",
    "start": "344240",
    "end": "350320"
  },
  {
    "text": "kubernetes can just go ahead and make that happen and can also automate you know",
    "start": "350320",
    "end": "356639"
  },
  {
    "text": "not just the deployment but also scaling healing um and and a variety of",
    "start": "356639",
    "end": "361919"
  },
  {
    "text": "other um advanced features too so when we talk about kubernetes how how",
    "start": "361919",
    "end": "368720"
  },
  {
    "text": "how are many organizations doing this and there's there's there's a mix of different things in play and i'm and i'm",
    "start": "368720",
    "end": "374319"
  },
  {
    "text": "showing this to kind of show the diverse ways of of doing kubernetes that we see in real",
    "start": "374319",
    "end": "379759"
  },
  {
    "text": "life because kubernetes is this abstraction there for for infrastructure",
    "start": "379759",
    "end": "384880"
  },
  {
    "text": "so you know there's there are all of the um self-managed um and you know common",
    "start": "384880",
    "end": "392319"
  },
  {
    "text": "distributions that we see um with uh with with kubernetes you know products",
    "start": "392319",
    "end": "397840"
  },
  {
    "text": "like rancher and openshift and um and and even you know simple things like like cube adm where where we can",
    "start": "397840",
    "end": "404400"
  },
  {
    "text": "provision and manage our own uh kubernetes clusters of course there are kubernetes services which are",
    "start": "404400",
    "end": "410560"
  },
  {
    "text": "available in in all the public clouds and there are more and more um",
    "start": "410560",
    "end": "415599"
  },
  {
    "text": "uh you know managed service providers and and and service providers of all sizes",
    "start": "415599",
    "end": "420720"
  },
  {
    "text": "providing managed kubernetes services too and of course you know you have you also",
    "start": "420720",
    "end": "426160"
  },
  {
    "text": "have um environments running on laptops so the the nice thing about using",
    "start": "426160",
    "end": "432560"
  },
  {
    "text": "kubernetes means that you can have the same uh bit of yaml that defines your",
    "start": "432560",
    "end": "440240"
  },
  {
    "text": "application and whether you're running it on your laptop um on premise on big",
    "start": "440240",
    "end": "445440"
  },
  {
    "text": "bare metal environments in the clouds and managed service providers or in fact you know using any number of of the",
    "start": "445440",
    "end": "452479"
  },
  {
    "text": "certified cncf distributions you get the same uh you get the same uh user experience and the application can",
    "start": "452479",
    "end": "459039"
  },
  {
    "text": "can run everywhere so when when we're talking about some of the applications and and and you know",
    "start": "459039",
    "end": "466000"
  },
  {
    "text": "we're we're quoting um a data dog survey here in terms of you know the top",
    "start": "466000",
    "end": "471919"
  },
  {
    "text": "containers that are that are running um in in um",
    "start": "471919",
    "end": "477120"
  },
  {
    "text": "in people's environments we kind of see that you know there are some um",
    "start": "477120",
    "end": "482240"
  },
  {
    "text": "platforms which are uh which don't require statements on platforms which are ephemeral we we",
    "start": "482240",
    "end": "487680"
  },
  {
    "text": "obviously have a lot of most most uh end users start with some sort of um stateless or or ephemeral",
    "start": "487680",
    "end": "494879"
  },
  {
    "text": "workload you know perhaps nginx perhaps perhaps red is um and you have you know things like um",
    "start": "494879",
    "end": "501599"
  },
  {
    "text": "nginx can is is really easy to deploy without without um storage",
    "start": "501599",
    "end": "507280"
  },
  {
    "text": "um and it's kind of easy to create and delete instances of of the",
    "start": "507280",
    "end": "513279"
  },
  {
    "text": "product and the same sort of thing applies for redis and in a very um in a very simple",
    "start": "513279",
    "end": "519360"
  },
  {
    "text": "uh in a very simple configurations however um",
    "start": "519360",
    "end": "525360"
  },
  {
    "text": "we'll talk a little bit about why applications need state and why i think you know all applications need to store",
    "start": "525360",
    "end": "530640"
  },
  {
    "text": "state somewhere so that's the spoiler um but the the the key thing here is that um",
    "start": "530640",
    "end": "538480"
  },
  {
    "text": "ephemeral workloads kind of have um problems because they always need to",
    "start": "538480",
    "end": "544080"
  },
  {
    "text": "refer to something that's going to be storing data somewhere right and that can be a service it can be a database",
    "start": "544080",
    "end": "549760"
  },
  {
    "text": "can be an object store it can be a file system um and and therefore what we what we end",
    "start": "549760",
    "end": "555040"
  },
  {
    "text": "up seeing is a lot of legacy environments you know whether it's it's simple ec2 instances running in in your",
    "start": "555040",
    "end": "561279"
  },
  {
    "text": "cloud or vms running alongside your your your kubernetes instance",
    "start": "561279",
    "end": "567200"
  },
  {
    "text": "um and of course the the what this means is that even the applications that can run ephemerally",
    "start": "567200",
    "end": "574000"
  },
  {
    "text": "tends to be running in a less optimal way because those um",
    "start": "574000",
    "end": "580640"
  },
  {
    "text": "those systems can now um um can can now not use the a storage system",
    "start": "580640",
    "end": "587680"
  },
  {
    "text": "that's available to them so for example um you know recovery times for these applications",
    "start": "587680",
    "end": "593440"
  },
  {
    "text": "can be longer and it can be it can take um a lot of time to warm up these systems",
    "start": "593440",
    "end": "599760"
  },
  {
    "text": "like like caches like redis for example and so you kind of end up with a ton of",
    "start": "599760",
    "end": "604800"
  },
  {
    "text": "scaffolding that is put around these systems you know and we we start detracting from the",
    "start": "604800",
    "end": "612160"
  },
  {
    "text": "benefits that kubernetes provides so for example you know one of the",
    "start": "612160",
    "end": "617279"
  },
  {
    "text": "one of the workarounds that we kind of commonly see is where we we remove the ability of kubernetes",
    "start": "617279",
    "end": "624480"
  },
  {
    "text": "to dynamically place um application workloads based on you know capacity or",
    "start": "624480",
    "end": "629839"
  },
  {
    "text": "or um or utilization of the nodes and and we we start tying down",
    "start": "629839",
    "end": "636800"
  },
  {
    "text": "applications to individual nodes um and and this is this is a really big",
    "start": "636800",
    "end": "642320"
  },
  {
    "text": "challenge because the whole point of of kubernetes is there to to abstract away the infrastructure but what we see",
    "start": "642320",
    "end": "648959"
  },
  {
    "text": "is um storage in in to a large extent that is and",
    "start": "648959",
    "end": "654720"
  },
  {
    "text": "still is um something that you present and bind to a server and what we're and",
    "start": "654720",
    "end": "660959"
  },
  {
    "text": "what we need to to move away from and what we need to start thinking about is how do we",
    "start": "660959",
    "end": "666000"
  },
  {
    "text": "make storage composable and how do we start making storage um",
    "start": "666000",
    "end": "671279"
  },
  {
    "text": "uh bounds to the application because at the end of the day it's the application that needs to move",
    "start": "671279",
    "end": "676399"
  },
  {
    "text": "around it's the application that needs to be dynamic we've we've done all of the work to move to make an application portable",
    "start": "676399",
    "end": "682800"
  },
  {
    "text": "by containerizing it and the storage line needs to be able to follow the applications",
    "start": "682800",
    "end": "689440"
  },
  {
    "text": "so so here's the the sort of you know my premise and it's it's it's not always it's not always obvious and it's not",
    "start": "689440",
    "end": "695760"
  },
  {
    "text": "always a you know um a popular statement but i'll i'll go ahead and say it you know i think all",
    "start": "695760",
    "end": "702320"
  },
  {
    "text": "applications store state somewhere right um even even um",
    "start": "702320",
    "end": "707440"
  },
  {
    "text": "even the most simplest of applications will store data in a file or a database or an object store or a key value store",
    "start": "707440",
    "end": "714160"
  },
  {
    "text": "or a message bus or streaming or or something right there's always going to",
    "start": "714160",
    "end": "719279"
  },
  {
    "text": "be something there um and the question is then once you're using kubernetes",
    "start": "719279",
    "end": "726320"
  },
  {
    "text": "how do you make take advantage of um how do you take advantage of kubernetes",
    "start": "726320",
    "end": "732720"
  },
  {
    "text": "to to actually automate the the storage and and and the answer is you know cloud",
    "start": "732720",
    "end": "738079"
  },
  {
    "text": "native storage and there's there's there's obviously a wide variety of of uh of options here what we're going",
    "start": "738079",
    "end": "744320"
  },
  {
    "text": "to focus on a little bit today is is software-defined um options because",
    "start": "744320",
    "end": "750000"
  },
  {
    "text": "you know we talked about all of the different ways that people can use kubernetes whether it's you know on",
    "start": "750000",
    "end": "756560"
  },
  {
    "text": "laptops in in managed services in uh cloud providers on prem etc etc",
    "start": "756560",
    "end": "763279"
  },
  {
    "text": "um and and therefore if you've made your application portable you've made your",
    "start": "763279",
    "end": "768480"
  },
  {
    "text": "application composable you've got composable memory and compute and",
    "start": "768480",
    "end": "773839"
  },
  {
    "text": "networking why wouldn't you also want composable storage and why wouldn't you also want",
    "start": "773839",
    "end": "779200"
  },
  {
    "text": "portable storage that's that's available in in in every environment and that's where that software defines cloud cloud-native",
    "start": "779200",
    "end": "785920"
  },
  {
    "text": "storage comes in so and and we'll kind of make it one step further um in much the same way now that",
    "start": "785920",
    "end": "793760"
  },
  {
    "text": "that developers can compose what they need in terms of cpu memory and network you also have the",
    "start": "793760",
    "end": "800399"
  },
  {
    "text": "ability now for developers to compose what they need from the storage and and have that storage uh be",
    "start": "800399",
    "end": "806399"
  },
  {
    "text": "application-centric and fundamentally it allows you to it allows developers and devops teams to",
    "start": "806399",
    "end": "812399"
  },
  {
    "text": "to move any of the applications uh and take advantage of kubernetes for any application and and specifically you",
    "start": "812399",
    "end": "818720"
  },
  {
    "text": "know build anything as a service because the the other effect of um of being able",
    "start": "818720",
    "end": "825680"
  },
  {
    "text": "to compose this is that you can now create a database as a service or or say",
    "start": "825680",
    "end": "831040"
  },
  {
    "text": "a message bus as a service or or even you know with with with some of the",
    "start": "831040",
    "end": "836720"
  },
  {
    "text": "um with some of the uh cncf projects like kubert for example where you know",
    "start": "836720",
    "end": "842000"
  },
  {
    "text": "kubernetes can actually manage vms um you can even create infrastructure as",
    "start": "842000",
    "end": "847040"
  },
  {
    "text": "a service you know and in fact we certainly have clients um managing you know uh vms in in in that sort of",
    "start": "847040",
    "end": "854560"
  },
  {
    "text": "environment so what we're kind of saying with a software-defined cloud-native storage is",
    "start": "854560",
    "end": "862079"
  },
  {
    "text": "kind of treating persistent data like networking technologies and this is kind of a given right so so whether if in in",
    "start": "862079",
    "end": "870240"
  },
  {
    "text": "all of the different environments you know you have a variety of different cni providers which effectively give you the",
    "start": "870240",
    "end": "877040"
  },
  {
    "text": "capability of um having software-defined network systems that that provide meshes that provide",
    "start": "877040",
    "end": "883279"
  },
  {
    "text": "service discovery that provides routing and and and services and kubernetes and",
    "start": "883279",
    "end": "888480"
  },
  {
    "text": "all those services run um natively as demon sets and people just don't think about it it's one of those things it's",
    "start": "888480",
    "end": "894639"
  },
  {
    "text": "just there what we're basically saying is that you can have the same sort of things with the software defined storage so of",
    "start": "894639",
    "end": "901040"
  },
  {
    "text": "course you know storage us is one of those but again with my cncf um go to our hat on you know there are",
    "start": "901040",
    "end": "907279"
  },
  {
    "text": "obviously a number of different um projects in this in this space but effectively we can have an operator or a",
    "start": "907279",
    "end": "914079"
  },
  {
    "text": "demon set that can operate in these environments and what we what we then get is we get the",
    "start": "914079",
    "end": "920560"
  },
  {
    "text": "ability to effectively you know abstract the storage that's in your kubernetes",
    "start": "920560",
    "end": "926639"
  },
  {
    "text": "environment and provide the platform agnostic way for applications to access the storage",
    "start": "926639",
    "end": "934480"
  },
  {
    "text": "um the the key thing here is you now have that portability so applications can",
    "start": "934480",
    "end": "939839"
  },
  {
    "text": "move to any nodes um nodes can fail and that's a really important usage",
    "start": "939839",
    "end": "945120"
  },
  {
    "text": "pattern here right because in kubernetes clusters um if you're going to you know",
    "start": "945120",
    "end": "950720"
  },
  {
    "text": "upgrade versions if you're going to patch versions if you're going to use say spot instances etc you generally",
    "start": "950720",
    "end": "957360"
  },
  {
    "text": "have dynamic clusters where nodes come and go and nodes can be upgraded on the fly so so applications just move around",
    "start": "957360",
    "end": "964240"
  },
  {
    "text": "a lot more in a kubernetes world and therefore being able to to have that that that you know in in a similar way",
    "start": "964240",
    "end": "970880"
  },
  {
    "text": "that you can sort of create a service mesh in the networking space you kind of need um you kind of effectively have the",
    "start": "970880",
    "end": "976959"
  },
  {
    "text": "same sort of space uh the same sort of mesh in in the storage space that allows you to access the storage from",
    "start": "976959",
    "end": "982560"
  },
  {
    "text": "everywhere and kubernetes has done uh you know a really good job of creating",
    "start": "982560",
    "end": "989120"
  },
  {
    "text": "um the concept of storage classes and storage classes",
    "start": "989120",
    "end": "994160"
  },
  {
    "text": "um effectively define a way of dynamically provisioning um",
    "start": "994160",
    "end": "1000560"
  },
  {
    "text": "volumes and accessing those volumes so a storage class is",
    "start": "1000560",
    "end": "1005920"
  },
  {
    "text": "kind of a very fancy way of saying this is a name that i give to a group of",
    "start": "1005920",
    "end": "1012079"
  },
  {
    "text": "uh due to a group of volumes um it it tends to refer to um a driver almost every",
    "start": "1012079",
    "end": "1019680"
  },
  {
    "text": "kubernetes deployment nowadays will have some sort of default um storage class",
    "start": "1019680",
    "end": "1025600"
  },
  {
    "text": "um but the but the nice thing here is you can create um storage classes with",
    "start": "1025600",
    "end": "1031360"
  },
  {
    "text": "different services you know of course depending on the um the projects you're using and",
    "start": "1031360",
    "end": "1036880"
  },
  {
    "text": "the cloud providers you're using to actually do different things for different purposes",
    "start": "1036880",
    "end": "1042000"
  },
  {
    "text": "so so for example you may have um a storage class that you use for for",
    "start": "1042000",
    "end": "1047918"
  },
  {
    "text": "development workloads where where perhaps you you're you're not actually interested about availability or or or",
    "start": "1047919",
    "end": "1054080"
  },
  {
    "text": "replicas but you're interested in just making sure that the date is available across all of the nodes you might have",
    "start": "1054080",
    "end": "1060559"
  },
  {
    "text": "um a production system where you you you want to focus on",
    "start": "1060559",
    "end": "1066240"
  },
  {
    "text": "availability and you want um data to be replicated across different nodes in the cluster you know to protect against say",
    "start": "1066240",
    "end": "1073039"
  },
  {
    "text": "disk failures or node failures or or that sort of thing um you may use um storage classes to",
    "start": "1073039",
    "end": "1079039"
  },
  {
    "text": "defying um a security level where where perhaps you might have you know certain are back rules or policies or or",
    "start": "1079039",
    "end": "1086000"
  },
  {
    "text": "encryption um enabled um and you might also you know have storage classes that affect um",
    "start": "1086000",
    "end": "1093200"
  },
  {
    "text": "things like the the uh data redund the data redundancy or the or the data compression",
    "start": "1093200",
    "end": "1099360"
  },
  {
    "text": "capabilities um for you know say archive or or or data which is which is not",
    "start": "1099360",
    "end": "1105600"
  },
  {
    "text": "often used or very cold um and just as a and just as an example um you know i've",
    "start": "1105600",
    "end": "1112480"
  },
  {
    "text": "got a storage class listed here on the left the storage class as i said is is kind",
    "start": "1112480",
    "end": "1117919"
  },
  {
    "text": "of a very you know it's it's it's really quite a basic thing a small piece of",
    "start": "1117919",
    "end": "1123520"
  },
  {
    "text": "yaml typically where um you have uh you have a name in this case in this",
    "start": "1123520",
    "end": "1130400"
  },
  {
    "text": "example the name is production for example you'll have a provisioner which refers to",
    "start": "1130400",
    "end": "1136480"
  },
  {
    "text": "a csi driver csi is the container storage interface which kubernetes will use",
    "start": "1136480",
    "end": "1143360"
  },
  {
    "text": "um as a as a standardized api to to talk to a variety of different systems and",
    "start": "1143360",
    "end": "1149360"
  },
  {
    "text": "i think at present counts there must be 50 or 60 different uh different csi drivers out",
    "start": "1149360",
    "end": "1156000"
  },
  {
    "text": "there and you'll then have a number of parameters that might define",
    "start": "1156000",
    "end": "1163600"
  },
  {
    "text": "um you know things like secrets or or the number of replicas or or things like that which which would which might be",
    "start": "1163600",
    "end": "1169840"
  },
  {
    "text": "specific to you know a certain um a certain storage driver",
    "start": "1169840",
    "end": "1175200"
  },
  {
    "text": "um but effectively that's that's where you know the the definition of storage stops",
    "start": "1175200",
    "end": "1180960"
  },
  {
    "text": "right because from then on um applications can just use um persistent volume claims and then",
    "start": "1180960",
    "end": "1187520"
  },
  {
    "text": "persistent volume claim is effectively just a way of saying oh an application i want to have data which is persistent",
    "start": "1187520",
    "end": "1194880"
  },
  {
    "text": "and stateful and i want to give it a name which i can then reference in my applications so",
    "start": "1194880",
    "end": "1201360"
  },
  {
    "text": "in this case for example the persistent volume claim is is the",
    "start": "1201360",
    "end": "1207200"
  },
  {
    "text": "is the box on the right um and we have uh uh we're creating uh",
    "start": "1207200",
    "end": "1213200"
  },
  {
    "text": "a pvc which is called mysql pvc um presumably for mysql database um and in",
    "start": "1213200",
    "end": "1220799"
  },
  {
    "text": "general the only thing that that you'll that you'll need to specify is something simple like the size because",
    "start": "1220799",
    "end": "1226880"
  },
  {
    "text": "um everything else gets inherited um through the storage class um which in this case you know we're",
    "start": "1226880",
    "end": "1233360"
  },
  {
    "text": "referring to the production storage class defined on the left um",
    "start": "1233360",
    "end": "1238480"
  },
  {
    "text": "and and the thing is you know using these using these um capabilities you can do um a lot of advanced things",
    "start": "1238480",
    "end": "1245840"
  },
  {
    "text": "so some systems for example supports the use of of encryption and have automation",
    "start": "1245840",
    "end": "1251120"
  },
  {
    "text": "with um kubernetes secrets or external um key management services to to",
    "start": "1251120",
    "end": "1258159"
  },
  {
    "text": "automatically encrypt the data typically that's done through the use of some sort of labels or other parameters",
    "start": "1258159",
    "end": "1265200"
  },
  {
    "text": "um as you can see in this in this example here um",
    "start": "1265200",
    "end": "1270400"
  },
  {
    "text": "and applications like in this case um mysql for example",
    "start": "1270400",
    "end": "1276640"
  },
  {
    "text": "can can rely on on on precision date and they'll just continue to run um you know and we can kind of see the",
    "start": "1276640",
    "end": "1282880"
  },
  {
    "text": "scaffolding and those legacy uh environments um fading out into the background and",
    "start": "1282880",
    "end": "1288320"
  },
  {
    "text": "kubernetes coming out and being able to use all of the power of kubernetes here and",
    "start": "1288320",
    "end": "1293520"
  },
  {
    "text": "if you look at the example piamel um on the right we can kind of see",
    "start": "1293520",
    "end": "1299600"
  },
  {
    "text": "um we can kind of see an example of that of that mysql database and what it would take to run so",
    "start": "1299600",
    "end": "1305679"
  },
  {
    "text": "i'll i'll just sort of talk you through it very quickly here we have um",
    "start": "1305679",
    "end": "1311679"
  },
  {
    "text": "a really simple definition where we're saying we're creating a mysql instance um using the mysql",
    "start": "1311679",
    "end": "1319840"
  },
  {
    "text": "container we're defining a mount point",
    "start": "1319840",
    "end": "1325440"
  },
  {
    "text": "which is which is effectively a unix part within the container namespace that's going to",
    "start": "1325440",
    "end": "1330559"
  },
  {
    "text": "mount amount that's going to mount a volume and that volume is called my sql dash",
    "start": "1330559",
    "end": "1337440"
  },
  {
    "text": "data and then what we're saying is we're saying that the volume mysql data is",
    "start": "1337440",
    "end": "1342880"
  },
  {
    "text": "actually to use the persistent volume claim called mysql pvc so so what what happens in this in this",
    "start": "1342880",
    "end": "1349679"
  },
  {
    "text": "instance when the when the container is being scheduled is that um",
    "start": "1349679",
    "end": "1355919"
  },
  {
    "text": "the the attach request will be issued via the csi api um kubernetes will will attach the the",
    "start": "1355919",
    "end": "1364720"
  },
  {
    "text": "volume to the node where it needs to run uh mysql",
    "start": "1364720",
    "end": "1369760"
  },
  {
    "text": "um and then that will be mounted and put into the container namespace and",
    "start": "1369760",
    "end": "1375760"
  },
  {
    "text": "effectively as far as the mysql instance is concerned it's it's it's accessing a local volume but of course that that",
    "start": "1375760",
    "end": "1382159"
  },
  {
    "text": "volume is is actually persistent and and is and is available across",
    "start": "1382159",
    "end": "1387200"
  },
  {
    "text": "uh across container mounts and if the demo guards uh smile down on me",
    "start": "1387200",
    "end": "1392240"
  },
  {
    "text": "i'll i'll show a little demo of running in my sequel um my sequel image",
    "start": "1392240",
    "end": "1397760"
  },
  {
    "text": "uh in just that fashion in a minute um another thing which is which is worth",
    "start": "1397760",
    "end": "1403760"
  },
  {
    "text": "pointing out is that um volumes for example with um with",
    "start": "1403760",
    "end": "1410480"
  },
  {
    "text": "kubernetes cannot can be read write once or read write many read write many",
    "start": "1410480",
    "end": "1415919"
  },
  {
    "text": "volumes effectively allow a volume to be used by multiple pods at the same time",
    "start": "1415919",
    "end": "1423120"
  },
  {
    "text": "on different nodes and this is you know sometimes this could be implemented",
    "start": "1423120",
    "end": "1428159"
  },
  {
    "text": "via nfs but there are you know a variety to different um file systems which which",
    "start": "1428159",
    "end": "1433200"
  },
  {
    "text": "allow these services um and one of the key things here is",
    "start": "1433200",
    "end": "1438640"
  },
  {
    "text": "um you know there are many applications that that benefit from from having a",
    "start": "1438640",
    "end": "1444159"
  },
  {
    "text": "shared volume that they can refer to perhaps it's sharing some some common reference data",
    "start": "1444159",
    "end": "1450480"
  },
  {
    "text": "or some common config sometimes it's just you know",
    "start": "1450480",
    "end": "1455840"
  },
  {
    "text": "using a file system as a as a message bus as as horrible as that sounds you you often",
    "start": "1455840",
    "end": "1463039"
  },
  {
    "text": "have uh you often have environments where um you have a workload a workflow",
    "start": "1463039",
    "end": "1468799"
  },
  {
    "text": "of of of transforms for example where you know one application hands over to another application across across a",
    "start": "1468799",
    "end": "1474720"
  },
  {
    "text": "shared file system and these sort of things are are very common work uh work",
    "start": "1474720",
    "end": "1480320"
  },
  {
    "text": "loads which you can find in many kubernetes environments and it's it's a it's a very effective way of doing it",
    "start": "1480320",
    "end": "1487039"
  },
  {
    "text": "um and of course you know you also have um you also can unlock a lot of additional",
    "start": "1487039",
    "end": "1494960"
  },
  {
    "text": "functionality using the persistent storage for example redis becomes more than just an ephemeral cache and becomes",
    "start": "1494960",
    "end": "1501679"
  },
  {
    "text": "you know full-blown uh database um with uh with with",
    "start": "1501679",
    "end": "1506880"
  },
  {
    "text": "persistent storage you know and and enables a whole suite of of different and",
    "start": "1506880",
    "end": "1513120"
  },
  {
    "text": "advanced use cases and the other thing um that we often",
    "start": "1513120",
    "end": "1518480"
  },
  {
    "text": "see more and more now is with with the use of githubs is the ability of",
    "start": "1518480",
    "end": "1523919"
  },
  {
    "text": "actually having a standardized way of deploying",
    "start": "1523919",
    "end": "1529679"
  },
  {
    "text": "applications across your different your different kubernetes use cases so",
    "start": "1529679",
    "end": "1534720"
  },
  {
    "text": "for example you know how we said earlier on that you can have a variety of different kubernetes distributions",
    "start": "1534720",
    "end": "1542080"
  },
  {
    "text": "some might be on prem some might be in the cloud some might be on on laptops and things like that",
    "start": "1542080",
    "end": "1547279"
  },
  {
    "text": "but what you can have is you can have um storage classes with the same name in each of those um different",
    "start": "1547279",
    "end": "1554559"
  },
  {
    "text": "environments but defined with different specifications as needed by those by those environments so you can have the",
    "start": "1554559",
    "end": "1561840"
  },
  {
    "text": "same uh the same piece of yaml to start the same database for example",
    "start": "1561840",
    "end": "1567120"
  },
  {
    "text": "and have no replication uh on your laptop and have you know uh replication with with for",
    "start": "1567120",
    "end": "1574559"
  },
  {
    "text": "for production availability when it's on prem and maybe add encryption if you're running in the client for example um and",
    "start": "1574559",
    "end": "1581039"
  },
  {
    "text": "those sort of things mean that that's you know it makes it that much easier for ci cd environments um especially",
    "start": "1581039",
    "end": "1587679"
  },
  {
    "text": "when when when managed by by github's processes um to to to evolve in those in those",
    "start": "1587679",
    "end": "1593760"
  },
  {
    "text": "spaces okay then um so that takes me neatly on",
    "start": "1593760",
    "end": "1601200"
  },
  {
    "text": "to um the demo um so this this is the base where",
    "start": "1601200",
    "end": "1608000"
  },
  {
    "text": "uh things get a little scary i will stop sharing that screen and i'll share my",
    "start": "1608000",
    "end": "1616720"
  },
  {
    "text": "um",
    "start": "1618640",
    "end": "1620880"
  },
  {
    "text": "i will share my can you see that okay yes i can see it very well and let's",
    "start": "1624000",
    "end": "1630640"
  },
  {
    "text": "hope the demo gods will be uh kind today indeed yeah if if if something goes wrong i'll",
    "start": "1630640",
    "end": "1638559"
  },
  {
    "text": "i'll talk you through it and as usual just feel free to ask questions at any point so",
    "start": "1638559",
    "end": "1645360"
  },
  {
    "text": "um i've just uh just just for a reference of of alias k2 to cube cuddle um just",
    "start": "1645360",
    "end": "1652640"
  },
  {
    "text": "because it's easier to type um so what we have here is",
    "start": "1652640",
    "end": "1658159"
  },
  {
    "text": "we have a three nodes uh kubernetes cluster",
    "start": "1658159",
    "end": "1663360"
  },
  {
    "text": "um i'm going to use k9s which if you haven't used it before",
    "start": "1663360",
    "end": "1669200"
  },
  {
    "text": "it's an amazing tool to to be able to explore and manage your",
    "start": "1669200",
    "end": "1674559"
  },
  {
    "text": "uh your clusters so here i'm looking at the cube system namespace which obviously has you know",
    "start": "1674559",
    "end": "1681679"
  },
  {
    "text": "things like psyllium uh running in there which is you know the demon set for the networking you'll",
    "start": "1681679",
    "end": "1687840"
  },
  {
    "text": "see other things like q proxy and um and core dns for example which are",
    "start": "1687840",
    "end": "1693039"
  },
  {
    "text": "other services there and in this case i've got um a storage usd set running in there to provide",
    "start": "1693039",
    "end": "1699279"
  },
  {
    "text": "uh to provide the the um the cloud native uh software defined",
    "start": "1699279",
    "end": "1704799"
  },
  {
    "text": "storage capabilities so we'll we'll switch that to the default namespace",
    "start": "1704799",
    "end": "1710640"
  },
  {
    "text": "instead i just want to",
    "start": "1710640",
    "end": "1715519"
  },
  {
    "text": "i just want to get a list of the storage classes so in this case we've got a storage",
    "start": "1717039",
    "end": "1724000"
  },
  {
    "text": "class conveniently enabled fast",
    "start": "1724000",
    "end": "1728240"
  },
  {
    "text": "and and again you know similar to to to the description we did when we were looking at the slides",
    "start": "1734480",
    "end": "1741840"
  },
  {
    "text": "you can kind of see the storage classes is a really simple definition where it it defines",
    "start": "1741840",
    "end": "1748880"
  },
  {
    "text": "a csi driver we see a bunch of parameters and that's really",
    "start": "1748880",
    "end": "1755760"
  },
  {
    "text": "it and when we if we if we switch back to uh k9s and",
    "start": "1755760",
    "end": "1760960"
  },
  {
    "text": "look at the running systems you'll you'll tend to see something like a csi helper here which which has",
    "start": "1760960",
    "end": "1768000"
  },
  {
    "text": "a number of different uh csi functions in there to to do things like provisioning and attach",
    "start": "1768000",
    "end": "1774720"
  },
  {
    "text": "um volumes and and that's effectively the api endpoint that kubernetes will be talking to when",
    "start": "1774720",
    "end": "1781440"
  },
  {
    "text": "when looking to provision the volume so",
    "start": "1781440",
    "end": "1786399"
  },
  {
    "text": "um on the if if you if you have a look at docs.surgeries.com you have a whole",
    "start": "1786559",
    "end": "1792480"
  },
  {
    "text": "section of use cases where we have put together you know a number of simple examples covering my",
    "start": "1792480",
    "end": "1799760"
  },
  {
    "text": "sequel postgres redis um you know kafka jenkins even cute",
    "start": "1799760",
    "end": "1804960"
  },
  {
    "text": "um and those are those are some some fun things to to try if uh if you want for",
    "start": "1804960",
    "end": "1810320"
  },
  {
    "text": "today i'm going to be looking at a my sequel uh uh my sequel demo",
    "start": "1810320",
    "end": "1817120"
  },
  {
    "text": "so what we have in our mysql demo is",
    "start": "1817120",
    "end": "1823840"
  },
  {
    "text": "we have a little bit of yaml that defines what we want out of the mysql database",
    "start": "1828720",
    "end": "1835039"
  },
  {
    "text": "so the first is mysql will have a service account we have a mysql service that that uses",
    "start": "1835039",
    "end": "1844000"
  },
  {
    "text": "ports 3306 in this case and allows us to access mysql transparently within",
    "start": "1844000",
    "end": "1852399"
  },
  {
    "text": "within the environment there's a little bit of config for my sequel",
    "start": "1852399",
    "end": "1858159"
  },
  {
    "text": "and then we define a stateful set so a stateful set is effectively",
    "start": "1858159",
    "end": "1864640"
  },
  {
    "text": "um one of the one of the objects uh one of the management controller objects that",
    "start": "1864640",
    "end": "1870320"
  },
  {
    "text": "kubernetes supports um it's a stateful set is what's used",
    "start": "1870320",
    "end": "1875519"
  },
  {
    "text": "when we're defining stateful workloads and kubernetes does does a good job of making sure that",
    "start": "1875519",
    "end": "1882480"
  },
  {
    "text": "stateful workloads have extra functionality like for example",
    "start": "1882480",
    "end": "1888880"
  },
  {
    "text": "it protects it protects stable workloads from um from running in multiple instances and",
    "start": "1888880",
    "end": "1897919"
  },
  {
    "text": "it protects them from partition events and things like that as as one of the few things as one of",
    "start": "1897919",
    "end": "1903440"
  },
  {
    "text": "the things that differs between say stateful sets in the standard uh",
    "start": "1903440",
    "end": "1908720"
  },
  {
    "text": "container or deployment um and what we can see with the staple set similar to the to the example that",
    "start": "1908720",
    "end": "1914720"
  },
  {
    "text": "we were um just looking at is we have a we have a volume endpoint",
    "start": "1914720",
    "end": "1921600"
  },
  {
    "text": "called data and it's mounted within the container as far live mysql",
    "start": "1921600",
    "end": "1929120"
  },
  {
    "text": "and we have the volume claim",
    "start": "1929120",
    "end": "1935840"
  },
  {
    "text": "where we have data and it's using the fast storage class that we created that",
    "start": "1935840",
    "end": "1941360"
  },
  {
    "text": "that was created earlier and we're saying that we want um a 5g",
    "start": "1941360",
    "end": "1946880"
  },
  {
    "text": "sorry a five gig um size volume um",
    "start": "1946880",
    "end": "1953039"
  },
  {
    "text": "so what i will do is i will just look to create that my sql workload i'll",
    "start": "1953039",
    "end": "1960240"
  },
  {
    "text": "just switch to the default namespace that will be obvious okay",
    "start": "1960240",
    "end": "1966159"
  },
  {
    "text": "so we created them we can see the containers creating there's a client container in the mysql database",
    "start": "1966159",
    "end": "1973760"
  },
  {
    "text": "container which is which is just creating now what we can see is",
    "start": "1973760",
    "end": "1980880"
  },
  {
    "text": "the uh we have the my sequel database has created",
    "start": "1983679",
    "end": "1991919"
  },
  {
    "text": "a persistent volume claim called data mice equal zero and",
    "start": "1991919",
    "end": "1998399"
  },
  {
    "text": "if we describe the pvc",
    "start": "1998399",
    "end": "2005840"
  },
  {
    "text": "um we can see the we can see the persistent volume",
    "start": "2010320",
    "end": "2015360"
  },
  {
    "text": "um being provisioned dynamically and being automatically uh attached and being",
    "start": "2015360",
    "end": "2021600"
  },
  {
    "text": "mounted and if we look",
    "start": "2021600",
    "end": "2027360"
  },
  {
    "text": "within the my sequel container so i'll just start a shell within that container",
    "start": "2027360",
    "end": "2034640"
  },
  {
    "text": "we can effectively see that kubernetes has mounted",
    "start": "2037919",
    "end": "2043039"
  },
  {
    "text": "the volume into the carbonate into the mysql namespace as far live mysql so as",
    "start": "2043039",
    "end": "2050000"
  },
  {
    "text": "far as as far as the pod is concerned it's just running um with a persistent",
    "start": "2050000",
    "end": "2055118"
  },
  {
    "text": "volume under violet mysql it doesn't know it's very that's a persistent volume it's completely abstracted it's",
    "start": "2055119",
    "end": "2062320"
  },
  {
    "text": "just another fast it's just like another local file system so",
    "start": "2062320",
    "end": "2069440"
  },
  {
    "text": "once we what what i'll do now it whoops what i'll do now is i will",
    "start": "2070320",
    "end": "2077919"
  },
  {
    "text": "get",
    "start": "2077919",
    "end": "2080240"
  },
  {
    "text": "i will show the databases so that's those are just like the standard um databases uh",
    "start": "2085280",
    "end": "2091679"
  },
  {
    "text": "that that we would have in a in a simple mysql system what i'm going to do is",
    "start": "2091679",
    "end": "2099599"
  },
  {
    "text": "i am going to create a database and i'll go with something more creative than alex and call this",
    "start": "2099599",
    "end": "2107440"
  },
  {
    "text": "cncf live",
    "start": "2107440",
    "end": "2110720"
  },
  {
    "text": "and now when we show databases um cncflive is is there listed as a",
    "start": "2113200",
    "end": "2119200"
  },
  {
    "text": "database so what i'm going to do what i'm going to do is",
    "start": "2119200",
    "end": "2124640"
  },
  {
    "text": "we'll we'll start by actually doing something you know pretty drastic in a normal environment",
    "start": "2124640",
    "end": "2130560"
  },
  {
    "text": "if we um if we deleted the stateful set",
    "start": "2130560",
    "end": "2136960"
  },
  {
    "text": "um we would obviously lose all the data because it would just be ephemeral data",
    "start": "2136960",
    "end": "2143119"
  },
  {
    "text": "and that um and and that that database that we just created would be gone for",
    "start": "2143119",
    "end": "2149839"
  },
  {
    "text": "good but what we'll do is we'll we'll delete the database",
    "start": "2149839",
    "end": "2155200"
  },
  {
    "text": "and we can see the database terminating within within k9s",
    "start": "2155359",
    "end": "2162800"
  },
  {
    "text": "come on",
    "start": "2164560",
    "end": "2167119"
  },
  {
    "text": "and what we can see though is if we list",
    "start": "2170839",
    "end": "2177040"
  },
  {
    "text": "the pvcs we can see that the pvc is still there and it's still available",
    "start": "2177040",
    "end": "2182560"
  },
  {
    "text": "even though it's no longer attached to to any workloads",
    "start": "2182560",
    "end": "2187680"
  },
  {
    "text": "if we create the workloads again",
    "start": "2187680",
    "end": "2195880"
  },
  {
    "text": "and that's that took a couple of seconds um i think that's just downloading the container",
    "start": "2224079",
    "end": "2230640"
  },
  {
    "text": "and what we can see is if we go to show",
    "start": "2230640",
    "end": "2236800"
  },
  {
    "text": "the databases the database is still there and we can see that that you know the data has",
    "start": "2236800",
    "end": "2243680"
  },
  {
    "text": "persisted um across restarts now what we also just just to kind of take",
    "start": "2243680",
    "end": "2250720"
  },
  {
    "text": "that um demo and this is a really simple and a very boring demo but but it it",
    "start": "2250720",
    "end": "2255760"
  },
  {
    "text": "does show sort of the the the flexibility and and the",
    "start": "2255760",
    "end": "2261680"
  },
  {
    "text": "and the power of of having that cloud native storage but what we'll do is just",
    "start": "2261680",
    "end": "2266720"
  },
  {
    "text": "to just to sort of prove that i'm not actually you know making this up um and and and you know cheating in any way",
    "start": "2266720",
    "end": "2274560"
  },
  {
    "text": "will will actually cordon the nodes that",
    "start": "2274560",
    "end": "2279920"
  },
  {
    "text": "the workload is working on",
    "start": "2279920",
    "end": "2284119"
  },
  {
    "text": "and this will kind of give us an idea of what um of what the",
    "start": "2290400",
    "end": "2296480"
  },
  {
    "text": "the availability will look like and i'm actually going to terminate it i'm actually going to terminate that",
    "start": "2296480",
    "end": "2302320"
  },
  {
    "text": "that pod now so that's been deleted and what we'll see now",
    "start": "2302320",
    "end": "2308880"
  },
  {
    "text": "is that kubernetes because it's a stateful set we'll go and recreate",
    "start": "2308880",
    "end": "2314240"
  },
  {
    "text": "um the workload you can see it's it was previously running on f3 and now",
    "start": "2314240",
    "end": "2319839"
  },
  {
    "text": "it's running on f8 the container is",
    "start": "2319839",
    "end": "2326960"
  },
  {
    "text": "just restarting it's probably just downloading there we",
    "start": "2326960",
    "end": "2332240"
  },
  {
    "text": "go and it's running again and",
    "start": "2332240",
    "end": "2337520"
  },
  {
    "text": "if we look to show the databases we can just see the databases are there so",
    "start": "2337520",
    "end": "2343119"
  },
  {
    "text": "that that seems like a really simple and boring demo but effectively what's happened there is",
    "start": "2343119",
    "end": "2349040"
  },
  {
    "text": "the database was shut down um it restarted automatically on another",
    "start": "2349040",
    "end": "2354800"
  },
  {
    "text": "node within seconds continued to access the same persistent data that it had before",
    "start": "2354800",
    "end": "2360480"
  },
  {
    "text": "the service ips were automatically redirected to the new node",
    "start": "2360480",
    "end": "2366240"
  },
  {
    "text": "and the client continued to be able to connect to the to the database um and access the data so so effectively",
    "start": "2366240",
    "end": "2374000"
  },
  {
    "text": "you have a fully ha um service that's that's automated um",
    "start": "2374000",
    "end": "2379200"
  },
  {
    "text": "with the power of kubernetes and persistent volumes and this is something which is available",
    "start": "2379200",
    "end": "2384960"
  },
  {
    "text": "in all of your clusters today so i strongly suggest that you go out and try it um",
    "start": "2384960",
    "end": "2391520"
  },
  {
    "text": "and if you have uh any questions happy to answer them",
    "start": "2391520",
    "end": "2397839"
  },
  {
    "text": "perfect i think the boring and simple demos are usually the best as well",
    "start": "2399920",
    "end": "2406800"
  },
  {
    "text": "yeah so now is the time for the audience to to ask questions um if i got that correctly so so ask",
    "start": "2407200",
    "end": "2414800"
  },
  {
    "text": "away people and and leave the questions to the um chat area so we can get some conversation going on of course",
    "start": "2414800",
    "end": "2421839"
  },
  {
    "text": "as well waiting waiting looking forward to the questions from everyone indeed",
    "start": "2421839",
    "end": "2427119"
  },
  {
    "text": "yeah and i think actually the demogods were behaving very nicely so it was all good so far so good i i've had so many",
    "start": "2427119",
    "end": "2434720"
  },
  {
    "text": "instances where broadband played up or or vpn stopped working",
    "start": "2434720",
    "end": "2440640"
  },
  {
    "text": "i know i know exactly the feeling i think i have every time i i do a demo and if if there's something that needs",
    "start": "2440640",
    "end": "2446240"
  },
  {
    "text": "to like spring up or what not wordpress or anything that takes like few minutes when i try it out before the demo it",
    "start": "2446240",
    "end": "2452720"
  },
  {
    "text": "takes let's say one minute to two minutes and then during the demo it always takes seven minutes and i'm just",
    "start": "2452720",
    "end": "2457760"
  },
  {
    "text": "so typical yeah but while we wait for the audience",
    "start": "2457760",
    "end": "2464319"
  },
  {
    "text": "questions uh i can maybe ask a few to get the conversation started absolutely",
    "start": "2464319",
    "end": "2470000"
  },
  {
    "text": "yeah so you mentioned uh in the beginning that there's a lot of cncf projects in the space that are doing a",
    "start": "2470000",
    "end": "2476400"
  },
  {
    "text": "great work and are doing kind of interesting things so what are your favorites and why",
    "start": "2476400",
    "end": "2482960"
  },
  {
    "text": "so that's um okay that's that's that's a very good question so when we talk about",
    "start": "2482960",
    "end": "2488000"
  },
  {
    "text": "um business and storage in in the cncf um it covers actually quite a wide",
    "start": "2488000",
    "end": "2495200"
  },
  {
    "text": "variety of different technologies so you know persisting data can be done in",
    "start": "2495200",
    "end": "2501520"
  },
  {
    "text": "any number of ways the most the most obvious thing is a um is volumes where we have you know",
    "start": "2501520",
    "end": "2509440"
  },
  {
    "text": "block stores and file systems um but we also have you know a huge number of systems which are of course",
    "start": "2509440",
    "end": "2515520"
  },
  {
    "text": "accessed via apis and that can be um databases key value stores object stores",
    "start": "2515520",
    "end": "2520960"
  },
  {
    "text": "for example um and so when when",
    "start": "2520960",
    "end": "2526000"
  },
  {
    "text": "we one of the one of the things that we did um one of the first things we did as",
    "start": "2526000",
    "end": "2531200"
  },
  {
    "text": "part of the seiko which is now the tag is to create a",
    "start": "2531200",
    "end": "2536640"
  },
  {
    "text": "cloud native storage white paper that kind of defines all of those different options and and both",
    "start": "2536640",
    "end": "2542800"
  },
  {
    "text": "you know the the data parts of how you access those different systems but also the control plane management and how you",
    "start": "2542800",
    "end": "2548880"
  },
  {
    "text": "automate things like dynamic provisioning and access of these of these different systems um",
    "start": "2548880",
    "end": "2554560"
  },
  {
    "text": "and we actually also defined um because you know one of the interesting things here is that for the first time ever",
    "start": "2554560",
    "end": "2561599"
  },
  {
    "text": "um developers actually get to choose what storage systems they need that they",
    "start": "2561599",
    "end": "2567119"
  },
  {
    "text": "they want to use so it's it's um it's more complicated than you'd imagine",
    "start": "2567119",
    "end": "2573200"
  },
  {
    "text": "there's there's obviously a lot of different options available for for different use cases",
    "start": "2573200",
    "end": "2578560"
  },
  {
    "text": "um and so you know we we kind of encourage users to understand what attributes their application",
    "start": "2578560",
    "end": "2585520"
  },
  {
    "text": "requires um from from their from their system to",
    "start": "2585520",
    "end": "2591040"
  },
  {
    "text": "and we define the number of attributes like um availability and um you know performance",
    "start": "2591040",
    "end": "2596960"
  },
  {
    "text": "and uh durability uh and data protection these sort of things um which which",
    "start": "2596960",
    "end": "2603520"
  },
  {
    "text": "which which can affect um what what what you need out of your storage system some of the some of the projects that we",
    "start": "2603520",
    "end": "2609839"
  },
  {
    "text": "have um in uh the tag storage includes things like um xcd",
    "start": "2609839",
    "end": "2616160"
  },
  {
    "text": "which is which is obviously a key value store and it's it's it's used as as i guess the brains of of every kubernetes",
    "start": "2616160",
    "end": "2623119"
  },
  {
    "text": "cluster out there um there are um projects like uh ti tikv",
    "start": "2623119",
    "end": "2628880"
  },
  {
    "text": "or um tai kv which is um which is a distributed uh which is another",
    "start": "2628880",
    "end": "2634400"
  },
  {
    "text": "distributed key value store there are also um products like um",
    "start": "2634400",
    "end": "2640800"
  },
  {
    "text": "vitesse which are which which came out of youtube and it's a distributed",
    "start": "2640800",
    "end": "2646400"
  },
  {
    "text": "database for example and we're actually talking about some of these things and some of the different",
    "start": "2646400",
    "end": "2651920"
  },
  {
    "text": "storage attributes in in our kubecon uh presentation in",
    "start": "2651920",
    "end": "2657440"
  },
  {
    "text": "i guess just over a month away so attend that as well if you want to hear more",
    "start": "2657440",
    "end": "2662640"
  },
  {
    "text": "about about those different projects perfect nice plug there as well for uh",
    "start": "2662640",
    "end": "2668960"
  },
  {
    "text": "kubecon and collaborative con that's upcoming in a month um yeah and i think there's an audience",
    "start": "2668960",
    "end": "2674560"
  },
  {
    "text": "question which is very exciting um i will just read it out loud so you can get to answering",
    "start": "2674560",
    "end": "2680640"
  },
  {
    "text": "will you share some observations the story preferences or recommendations for distributed storage in kubernetes um",
    "start": "2680640",
    "end": "2687680"
  },
  {
    "text": "they'd especially in be interested in anything related to multi-cluster kubernetes persistence for example do",
    "start": "2687680",
    "end": "2693280"
  },
  {
    "text": "you tend to prefer application centric storage which method of persistence is tailored for the app as opposed to",
    "start": "2693280",
    "end": "2699680"
  },
  {
    "text": "general purpose file system or block storage okay so there's there's a bit to unpack",
    "start": "2699680",
    "end": "2706720"
  },
  {
    "text": "there um again the the question",
    "start": "2706720",
    "end": "2712000"
  },
  {
    "text": "the question is not about you know it's hard to make a recommendation one way or another simply because there are lots of",
    "start": "2712000",
    "end": "2718880"
  },
  {
    "text": "different systems available and and they're optimized for um for different use cases so you know",
    "start": "2718880",
    "end": "2725200"
  },
  {
    "text": "some systems might be um optimized for for latency and and",
    "start": "2725200",
    "end": "2730839"
  },
  {
    "text": "transactions um others might be um optimized for sequential throughput and",
    "start": "2730839",
    "end": "2736160"
  },
  {
    "text": "and analytics for example and and they would be very very different systems so it's it's hard to make a generic",
    "start": "2736160",
    "end": "2741520"
  },
  {
    "text": "recommendation the the reality is that there are um that there are a number of different",
    "start": "2741520",
    "end": "2747359"
  },
  {
    "text": "um file systems software-defined storage systems uh object stores um databases",
    "start": "2747359",
    "end": "2754240"
  },
  {
    "text": "etc that fits different use cases so more than anything else understand the use case that's it application-centric",
    "start": "2754240",
    "end": "2760880"
  },
  {
    "text": "storage i think is the is the key um the the point behind that is that if you",
    "start": "2760880",
    "end": "2767599"
  },
  {
    "text": "have um an application which is um and you want to be able to compose it",
    "start": "2767599",
    "end": "2773040"
  },
  {
    "text": "you need to actually link it to the storage and we have in in kubernetes we have like we",
    "start": "2773040",
    "end": "2778880"
  },
  {
    "text": "we discussed today the concept of volumes and and that's probably the most mature",
    "start": "2778880",
    "end": "2784400"
  },
  {
    "text": "um functionality but application centric storage um can also refer to things like",
    "start": "2784400",
    "end": "2790079"
  },
  {
    "text": "object stores and there's there's now um the cozy init initiative which is",
    "start": "2790079",
    "end": "2796079"
  },
  {
    "text": "which which enables the the orchestration of things like um um",
    "start": "2796079",
    "end": "2801119"
  },
  {
    "text": "object store buckets and and access and i can can can um define those sort of",
    "start": "2801119",
    "end": "2806880"
  },
  {
    "text": "access uh methods as well um so so although you know kubernetes started",
    "start": "2806880",
    "end": "2812319"
  },
  {
    "text": "with volumes i think we're seeing extensions into into different areas and of course you know there are also",
    "start": "2812319",
    "end": "2818720"
  },
  {
    "text": "um an explosion of of operators using different operator frameworks to to provision things like distributed um",
    "start": "2818720",
    "end": "2826160"
  },
  {
    "text": "databases and and things like that as well in terms of in terms of multi-cluster",
    "start": "2826160",
    "end": "2832640"
  },
  {
    "text": "that's certainly a a um a fairly immature process",
    "start": "2832640",
    "end": "2839440"
  },
  {
    "text": "but what we're seeing um in in a lot of environments is that",
    "start": "2839440",
    "end": "2845520"
  },
  {
    "text": "the customers or enterprises and organizations are deploying a larger",
    "start": "2845520",
    "end": "2852079"
  },
  {
    "text": "number of smaller clusters and perhaps clusters for you know specific applications or specific",
    "start": "2852079",
    "end": "2858240"
  },
  {
    "text": "projects rather than have these these huge multi-talented you know big scalable clusters",
    "start": "2858240",
    "end": "2863440"
  },
  {
    "text": "so i think more than ever before um there is the need and therefore you know projects will be working on this to to",
    "start": "2863440",
    "end": "2870640"
  },
  {
    "text": "provide the capability to consume storage across clusters but also to to replicate and move data across",
    "start": "2870640",
    "end": "2877760"
  },
  {
    "text": "um across clusters um and we're we're kind of seeing also",
    "start": "2877760",
    "end": "2883680"
  },
  {
    "text": "um some work being done in in hybrid environments where we're looking at",
    "start": "2883680",
    "end": "2889200"
  },
  {
    "text": "the ability of sharing storage between kubernetes and say you know traditional uh traditional",
    "start": "2889200",
    "end": "2896079"
  },
  {
    "text": "systems um whether it's it's because those traditional systems haven't yet been",
    "start": "2896079",
    "end": "2902160"
  },
  {
    "text": "made the transition into kubernetes or because you know they can't uh be migrated for for whatever reason",
    "start": "2902160",
    "end": "2908240"
  },
  {
    "text": "you know perhaps they're using some old code or something um so so i think i think that is that is always going to be",
    "start": "2908240",
    "end": "2914880"
  },
  {
    "text": "a factor um when it comes to sort of api versus volumes is the sort of the last",
    "start": "2914880",
    "end": "2920160"
  },
  {
    "text": "bit of that question um again i don't think there's a particularly um good answer for that in",
    "start": "2920160",
    "end": "2926960"
  },
  {
    "text": "the sense that even if you're going to process storage say with a key value",
    "start": "2926960",
    "end": "2933119"
  },
  {
    "text": "store or you're going to purchase storage with with an object store ultimately that object store",
    "start": "2933119",
    "end": "2940480"
  },
  {
    "text": "is going to be using a volume or a file system at some point in the back end so so it it kind of depends on where you",
    "start": "2940480",
    "end": "2948240"
  },
  {
    "text": "are in the in the platform owner stack right if if you're if you're the if you're the person responsible for",
    "start": "2948240",
    "end": "2954800"
  },
  {
    "text": "building the database as a service you probably are going to want to focus on",
    "start": "2954800",
    "end": "2960000"
  },
  {
    "text": "the volumes and if you're the person who's wants to consume the database as a",
    "start": "2960000",
    "end": "2965599"
  },
  {
    "text": "service you probably only care about the database and so it it really you know that that that answer is is kind of",
    "start": "2965599",
    "end": "2972079"
  },
  {
    "text": "conditionless to where you sit in the in the in the stack and and what your what your focus is",
    "start": "2972079",
    "end": "2978960"
  },
  {
    "text": "perfect very uh informative and good answer uh hopefully um qr courtier got",
    "start": "2979200",
    "end": "2986000"
  },
  {
    "text": "what they wanted out of there um hopefully pronouncing a very difficult name correctly here again",
    "start": "2986000",
    "end": "2994160"
  },
  {
    "text": "anyone else if you have any questions now is the time to put them to the chat as well we welcome every question all",
    "start": "2995200",
    "end": "3001040"
  },
  {
    "text": "questions so far really nice questions actually a few questions i think in within this one one comment there so",
    "start": "3001040",
    "end": "3008720"
  },
  {
    "text": "yeah um maybe while we see if anyone else has anything to ask um i have another",
    "start": "3008720",
    "end": "3014880"
  },
  {
    "text": "question i'm always interested in um because we usually i think these kind of discussions focus on okay what's",
    "start": "3014880",
    "end": "3020400"
  },
  {
    "text": "happening currently in the cncf landscape what's happening in these projects and everything so where do you see the future of all of",
    "start": "3020400",
    "end": "3026960"
  },
  {
    "text": "these projects as well as um storage and kubernetes going where do you think it's gonna be going in one to",
    "start": "3026960",
    "end": "3033040"
  },
  {
    "text": "a few years from this point onwards so i mean that's okay that's that's",
    "start": "3033040",
    "end": "3038800"
  },
  {
    "text": "that's an interesting question so so i think what we're seeing is we're seeing a move to data services and",
    "start": "3038800",
    "end": "3046559"
  },
  {
    "text": "data management um so as um you know",
    "start": "3046559",
    "end": "3052559"
  },
  {
    "text": "i kind of say this a lot and it's it's it's people people in in in my team kind of",
    "start": "3052559",
    "end": "3058160"
  },
  {
    "text": "roll their eyes every time i say this but i i strongly believe cloud is not a place",
    "start": "3058160",
    "end": "3064079"
  },
  {
    "text": "um in the sense that what i think um people want out of cloud environments is",
    "start": "3064079",
    "end": "3070800"
  },
  {
    "text": "the the on off consumption model the the self-provisioning the automated deployments and automated operations",
    "start": "3070800",
    "end": "3078000"
  },
  {
    "text": "and i think you you're you're you're able to get that now through a number of different services",
    "start": "3078000",
    "end": "3084079"
  },
  {
    "text": "not least of which of course is kubernetes because effectively you know kubernetes gives you that that composable um environment which can be",
    "start": "3084079",
    "end": "3092079"
  },
  {
    "text": "running everywhere from your laptop to big bare metal boxes to vms so so what i think is um we'll we'll see",
    "start": "3092079",
    "end": "3100319"
  },
  {
    "text": "a lot more um focus on the requirements for application-centric storage we'll see a",
    "start": "3100319",
    "end": "3105839"
  },
  {
    "text": "lot more focus on data mobility and the ability to move applications between different",
    "start": "3105839",
    "end": "3111599"
  },
  {
    "text": "environments so for example a very common pattern that's that's coming up nowadays is",
    "start": "3111599",
    "end": "3117680"
  },
  {
    "text": "being able to develop on prime and deploy in the cloud or develop in the cloud and deploy on-prem for example",
    "start": "3117680",
    "end": "3124079"
  },
  {
    "text": "we'll also see um the use of storage becoming key in",
    "start": "3124079",
    "end": "3130800"
  },
  {
    "text": "diagnostics and and and other debugging purposes so so for example the ability",
    "start": "3130800",
    "end": "3136000"
  },
  {
    "text": "to have uh copies of data um which which are used for analytics or or diagnostics um",
    "start": "3136000",
    "end": "3143359"
  },
  {
    "text": "separate to the production environment um i think we'll also see um",
    "start": "3143359",
    "end": "3150240"
  },
  {
    "text": "we'll also see uh the the emergence of of more mission critical services so so",
    "start": "3150240",
    "end": "3155760"
  },
  {
    "text": "you know the concept of cloud native disaster recovery um and in fact that that is a document",
    "start": "3155760",
    "end": "3162319"
  },
  {
    "text": "um that we're working on um that that we've been recently working on in the sig and and just uh and just",
    "start": "3162319",
    "end": "3168800"
  },
  {
    "text": "published um which which kind of covers the the concept of having you know using the",
    "start": "3168800",
    "end": "3174480"
  },
  {
    "text": "automation and using the composable um environments to to actually",
    "start": "3174480",
    "end": "3180480"
  },
  {
    "text": "um create a distributed uh distributed system which which would um cross",
    "start": "3180480",
    "end": "3187200"
  },
  {
    "text": "failure domains and and be able to automatically survive and and have uh and have quick recovery processes",
    "start": "3187200",
    "end": "3194559"
  },
  {
    "text": "across all of those environments so there's a lot of exciting things coming up for sure",
    "start": "3194559",
    "end": "3200720"
  },
  {
    "text": "yes sounds absolutely lovely um looking forward to the future as well then for",
    "start": "3200720",
    "end": "3206000"
  },
  {
    "text": "sure um and then there's a really lovely comment um from from hemanskata saying",
    "start": "3206000",
    "end": "3212079"
  },
  {
    "text": "thanks for the nice presentation i very much agree thank you so much for a really wonderful information packed",
    "start": "3212079",
    "end": "3219279"
  },
  {
    "text": "and then also uh linux pizza cats says hi hi back to you linux pizza cats",
    "start": "3219680",
    "end": "3227760"
  },
  {
    "text": "a big portion here um so",
    "start": "3229359",
    "end": "3234400"
  },
  {
    "text": "is there any other questions from their audience now is i think one of your last moments to shoot them away",
    "start": "3234400",
    "end": "3240319"
  },
  {
    "text": "to get anything if there is in your mind um alex do you have any final comments words um things to mention",
    "start": "3240319",
    "end": "3248800"
  },
  {
    "text": "um the one thing i'll say is um",
    "start": "3248800",
    "end": "3254079"
  },
  {
    "text": "storage is kind of becoming ubiquitous in in kubernetes and the whole concept of",
    "start": "3254079",
    "end": "3259920"
  },
  {
    "text": "um you know not having stateful workloads or not or or feeling afraid of stateful workloads i think it's",
    "start": "3259920",
    "end": "3265599"
  },
  {
    "text": "something that that should just go away for good um the",
    "start": "3265599",
    "end": "3270720"
  },
  {
    "text": "once once you see the benefits of the automation in kubernetes you obviously",
    "start": "3270720",
    "end": "3275760"
  },
  {
    "text": "want to have that automation all the way down to every point in your stack including",
    "start": "3275760",
    "end": "3280799"
  },
  {
    "text": "the storage and that kind of enables uh you to build anything as a service and to move stateful workloads from",
    "start": "3280799",
    "end": "3287760"
  },
  {
    "text": "traditional environments into kubernetes as well i think the other key thing here is um",
    "start": "3287760",
    "end": "3293680"
  },
  {
    "text": "facts um for the first time like never before developers and devops teams have",
    "start": "3293680",
    "end": "3302599"
  },
  {
    "text": "storage systems right which is i think we're having some technical",
    "start": "3331440",
    "end": "3336799"
  },
  {
    "text": "difficulties um oh you're back perfect yep there there was my broadband",
    "start": "3336799",
    "end": "3343440"
  },
  {
    "text": "connection trouble thankfully it didn't happen demo i'm so sorry it happens i think every time with these",
    "start": "3343440",
    "end": "3350079"
  },
  {
    "text": "things i i was i was just saying um just just finish off the comment before we finish",
    "start": "3350079",
    "end": "3355520"
  },
  {
    "text": "that developers can use storage like a superpower because storage can enable so",
    "start": "3355520",
    "end": "3360559"
  },
  {
    "text": "many use cases whether it's you know protecting your data creating highly available um applications um providing",
    "start": "3360559",
    "end": "3368559"
  },
  {
    "text": "the ability to have data mobility and things like that which um",
    "start": "3368559",
    "end": "3374240"
  },
  {
    "text": "which which effectively um they now have the ability to choose on their own because most of these systems are are",
    "start": "3374240",
    "end": "3379839"
  },
  {
    "text": "software defined and effectively can be can be deployed everywhere so i'll just end on that note",
    "start": "3379839",
    "end": "3386079"
  },
  {
    "text": "perfect i think it's a really wonderful note to end on and since there wasn't any immediate new questions",
    "start": "3386079",
    "end": "3393520"
  },
  {
    "text": "um let me just wrap things up for today so thank you so much everyone for",
    "start": "3393520",
    "end": "3399200"
  },
  {
    "text": "joining the latest episode of cloud native live it was really great to have alex talking about communities",
    "start": "3399200",
    "end": "3405839"
  },
  {
    "text": "persistent data the bridge for legacy applications thank you so much for being here",
    "start": "3405839",
    "end": "3412079"
  },
  {
    "text": "um yes and we also really love the interaction the questions from the audience thank you everyone for",
    "start": "3412079",
    "end": "3418079"
  },
  {
    "text": "commenting attending and and being here so we really bring you the latest cloud",
    "start": "3418079",
    "end": "3423920"
  },
  {
    "text": "native code every wednesday at 3 p.m eastern so next week we will have jason",
    "start": "3423920",
    "end": "3428960"
  },
  {
    "text": "deberry at peers presenting building on h a control plane for tinkerbell with",
    "start": "3428960",
    "end": "3434880"
  },
  {
    "text": "cube vip thanks for joining us today and see you",
    "start": "3434880",
    "end": "3440079"
  },
  {
    "text": "next week thanks everyone bye",
    "start": "3440079",
    "end": "3446920"
  }
]