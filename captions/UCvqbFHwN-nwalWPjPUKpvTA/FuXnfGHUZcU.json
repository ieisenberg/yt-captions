[
  {
    "text": "hello okay this is working hi I am",
    "start": "0",
    "end": "3929"
  },
  {
    "text": "Michelle I'm a software engineer at",
    "start": "3929",
    "end": "5879"
  },
  {
    "text": "Google I work in the load balancing team",
    "start": "5879",
    "end": "8639"
  },
  {
    "text": "where we try to solve and the load",
    "start": "8639",
    "end": "12090"
  },
  {
    "text": "balancing polish problems for Google",
    "start": "12090",
    "end": "14400"
  },
  {
    "text": "services and also for Google Cloud",
    "start": "14400",
    "end": "16650"
  },
  {
    "text": "customers some of the learnings that",
    "start": "16650",
    "end": "18480"
  },
  {
    "text": "we've had over years we'll see in this",
    "start": "18480",
    "end": "22289"
  },
  {
    "text": "presentation but this presentation will",
    "start": "22289",
    "end": "25590"
  },
  {
    "text": "primarily focus on load balancing for a",
    "start": "25590",
    "end": "29970"
  },
  {
    "text": "large service we are not going to cover",
    "start": "29970",
    "end": "32099"
  },
  {
    "text": "a lot of basics of grpe load balancing",
    "start": "32099",
    "end": "34610"
  },
  {
    "text": "because this is something that has been",
    "start": "34610",
    "end": "38219"
  },
  {
    "text": "covered before in queue con 18 by my",
    "start": "38219",
    "end": "41250"
  },
  {
    "text": "colleague liane if you have since we can",
    "start": "41250",
    "end": "43770"
  },
  {
    "text": "talk about it at the end of this",
    "start": "43770",
    "end": "45000"
  },
  {
    "text": "presentation yan is here so you can ask",
    "start": "45000",
    "end": "47219"
  },
  {
    "text": "him those questions so what do I mean by",
    "start": "47219",
    "end": "49739"
  },
  {
    "text": "a large service a large service is",
    "start": "49739",
    "end": "51690"
  },
  {
    "text": "generally a service which has a lot of",
    "start": "51690",
    "end": "53489"
  },
  {
    "text": "clients a lot of requests that the",
    "start": "53489",
    "end": "57719"
  },
  {
    "text": "clients need to make and generally",
    "start": "57719",
    "end": "59340"
  },
  {
    "text": "clients which are distributed pretty",
    "start": "59340",
    "end": "61829"
  },
  {
    "text": "much globally so when we talk about the",
    "start": "61829",
    "end": "64978"
  },
  {
    "text": "problems and we talk about the things",
    "start": "64979",
    "end": "66630"
  },
  {
    "text": "that we want to care about will Jen when",
    "start": "66630",
    "end": "69570"
  },
  {
    "text": "I say large service is the aspect of the",
    "start": "69570",
    "end": "72360"
  },
  {
    "text": "service that I am going to talk about so",
    "start": "72360",
    "end": "76310"
  },
  {
    "text": "this is we have a small agenda for this",
    "start": "76310",
    "end": "79950"
  },
  {
    "text": "presentation will look at load balancing",
    "start": "79950",
    "end": "83159"
  },
  {
    "text": "in G RPC at a very high level go quickly",
    "start": "83159",
    "end": "85140"
  },
  {
    "text": "over it then talk about centralized load",
    "start": "85140",
    "end": "87150"
  },
  {
    "text": "balancing what does it mean and how all",
    "start": "87150",
    "end": "90060"
  },
  {
    "text": "that goes into load balancing at scale",
    "start": "90060",
    "end": "92820"
  },
  {
    "text": "and then we look at service mesh and how",
    "start": "92820",
    "end": "95400"
  },
  {
    "text": "does that work with G RPC services",
    "start": "95400",
    "end": "100130"
  },
  {
    "text": "so why load balancing I believe I don't",
    "start": "100130",
    "end": "103680"
  },
  {
    "text": "need to talk a lot about that but",
    "start": "103680",
    "end": "105590"
  },
  {
    "text": "generally load balancing is used to",
    "start": "105590",
    "end": "108540"
  },
  {
    "text": "improve a throughput of a service so if",
    "start": "108540",
    "end": "110100"
  },
  {
    "text": "you have a very large service you would",
    "start": "110100",
    "end": "111630"
  },
  {
    "text": "need multiple endpoints or backends for",
    "start": "111630",
    "end": "113640"
  },
  {
    "text": "that particular service which can serve",
    "start": "113640",
    "end": "116909"
  },
  {
    "text": "those clients so that you can scale and",
    "start": "116909",
    "end": "118939"
  },
  {
    "text": "it also means that more endpoints you",
    "start": "118939",
    "end": "122009"
  },
  {
    "text": "have it includes this your service",
    "start": "122009",
    "end": "124290"
  },
  {
    "text": "reliability and availability these are",
    "start": "124290",
    "end": "127290"
  },
  {
    "text": "important for load balancing but outside",
    "start": "127290",
    "end": "129239"
  },
  {
    "text": "of that there are a couple of other",
    "start": "129239",
    "end": "130229"
  },
  {
    "text": "things that load balancing needs to",
    "start": "130229",
    "end": "132239"
  },
  {
    "text": "worry about one",
    "start": "132239",
    "end": "133350"
  },
  {
    "text": "is the client requirements you can't",
    "start": "133350",
    "end": "135510"
  },
  {
    "text": "really have clients connect to all your",
    "start": "135510",
    "end": "137280"
  },
  {
    "text": "endpoints for example or the client is",
    "start": "137280",
    "end": "139620"
  },
  {
    "text": "written C is sensitive so how do you",
    "start": "139620",
    "end": "141840"
  },
  {
    "text": "need to load balanced looking at the",
    "start": "141840",
    "end": "144510"
  },
  {
    "text": "client characteristics also you need to",
    "start": "144510",
    "end": "146670"
  },
  {
    "text": "look at endpoint or the backend",
    "start": "146670",
    "end": "148110"
  },
  {
    "text": "requirement whether it needs isolation",
    "start": "148110",
    "end": "150540"
  },
  {
    "text": "or protection of certain format which",
    "start": "150540",
    "end": "152640"
  },
  {
    "text": "for most large services is true and also",
    "start": "152640",
    "end": "155190"
  },
  {
    "text": "if there is a lot of connections from",
    "start": "155190",
    "end": "157320"
  },
  {
    "text": "clients how do you really make sure that",
    "start": "157320",
    "end": "159840"
  },
  {
    "text": "only a portion of clients connect to",
    "start": "159840",
    "end": "162060"
  },
  {
    "text": "them and don't overwhelm the endpoints",
    "start": "162060",
    "end": "165200"
  },
  {
    "text": "so let's briefly look at client side",
    "start": "165200",
    "end": "170100"
  },
  {
    "text": "load balancing in G RPC in G RPC we have",
    "start": "170100",
    "end": "174030"
  },
  {
    "text": "to load balancing algorithms which are",
    "start": "174030",
    "end": "176850"
  },
  {
    "text": "round-robin and pick first",
    "start": "176850",
    "end": "178620"
  },
  {
    "text": "which basically pick a set of backends",
    "start": "178620",
    "end": "181830"
  },
  {
    "text": "or a single back-end based on the",
    "start": "181830",
    "end": "183870"
  },
  {
    "text": "discovery or the resolution of that",
    "start": "183870",
    "end": "185280"
  },
  {
    "text": "endpoints so based on the load balancing",
    "start": "185280",
    "end": "188430"
  },
  {
    "text": "policy the client can decide to pick one",
    "start": "188430",
    "end": "190650"
  },
  {
    "text": "endpoint and just use that endpoint for",
    "start": "190650",
    "end": "192630"
  },
  {
    "text": "all its requests or round-robin over all",
    "start": "192630",
    "end": "194700"
  },
  {
    "text": "the endpoints that it has received",
    "start": "194700",
    "end": "197060"
  },
  {
    "text": "optionally the client can also connect",
    "start": "197060",
    "end": "198960"
  },
  {
    "text": "to a sub set of endpoints we don't have",
    "start": "198960",
    "end": "201120"
  },
  {
    "text": "it in G RPC but I this is one of the",
    "start": "201120",
    "end": "204450"
  },
  {
    "text": "aspects that can be completely",
    "start": "204450",
    "end": "205650"
  },
  {
    "text": "controlled on the client side so at the",
    "start": "205650",
    "end": "208920"
  },
  {
    "text": "client side you have certain control",
    "start": "208920",
    "end": "210180"
  },
  {
    "text": "over what endpoints you can select and",
    "start": "210180",
    "end": "211860"
  },
  {
    "text": "how you can select it and that can",
    "start": "211860",
    "end": "215280"
  },
  {
    "text": "basically help you to limit the number",
    "start": "215280",
    "end": "218760"
  },
  {
    "text": "of connections a client can make and can",
    "start": "218760",
    "end": "222030"
  },
  {
    "text": "be used to enable full of client",
    "start": "222030",
    "end": "226380"
  },
  {
    "text": "behavior that we've seen previously but",
    "start": "226380",
    "end": "229740"
  },
  {
    "text": "just making decisions on client is not",
    "start": "229740",
    "end": "232290"
  },
  {
    "text": "really helpful in the bunch of scenarios",
    "start": "232290",
    "end": "234600"
  },
  {
    "text": "for example if you do decide to use pick",
    "start": "234600",
    "end": "237510"
  },
  {
    "text": "first now in in this particular case if",
    "start": "237510",
    "end": "240330"
  },
  {
    "text": "because all the clients are taking",
    "start": "240330",
    "end": "242160"
  },
  {
    "text": "decisions independently a bunch of",
    "start": "242160",
    "end": "244050"
  },
  {
    "text": "clients or maybe all of them end up",
    "start": "244050",
    "end": "245730"
  },
  {
    "text": "connecting to a single endpoint which",
    "start": "245730",
    "end": "247590"
  },
  {
    "text": "can overwhelm those endpoints and bring",
    "start": "247590",
    "end": "250470"
  },
  {
    "text": "those endpoint down this can eventually",
    "start": "250470",
    "end": "252600"
  },
  {
    "text": "cascade to bring all the endpoints down",
    "start": "252600",
    "end": "255150"
  },
  {
    "text": "no that's definitely not desirable also",
    "start": "255150",
    "end": "257430"
  },
  {
    "text": "round-robin is not really great if a",
    "start": "257430",
    "end": "260790"
  },
  {
    "text": "single client has a lot of requests to",
    "start": "260790",
    "end": "263430"
  },
  {
    "text": "make and maybe it is buggy or maybe it's",
    "start": "263430",
    "end": "265770"
  },
  {
    "text": "it's a",
    "start": "265770",
    "end": "266500"
  },
  {
    "text": "attack eventually bring out bring down",
    "start": "266500",
    "end": "268810"
  },
  {
    "text": "your whole service so just making",
    "start": "268810",
    "end": "270790"
  },
  {
    "text": "decisions on the client side is not",
    "start": "270790",
    "end": "272530"
  },
  {
    "text": "enough you need more so this is where a",
    "start": "272530",
    "end": "276240"
  },
  {
    "text": "centralized load balancing really helps",
    "start": "276240",
    "end": "279150"
  },
  {
    "text": "centralize load balancing can",
    "start": "279150",
    "end": "281080"
  },
  {
    "text": "essentially determine what endpoints",
    "start": "281080",
    "end": "283410"
  },
  {
    "text": "offline can connect to now this is more",
    "start": "283410",
    "end": "286480"
  },
  {
    "text": "than just the discovery that we've seen",
    "start": "286480",
    "end": "289210"
  },
  {
    "text": "previously for client lb and in this the",
    "start": "289210",
    "end": "293380"
  },
  {
    "text": "load balancer actually knows about what",
    "start": "293380",
    "end": "296170"
  },
  {
    "text": "clients are available and can tell each",
    "start": "296170",
    "end": "298630"
  },
  {
    "text": "of the clients what endpoints to connect",
    "start": "298630",
    "end": "300850"
  },
  {
    "text": "to and the clients can eventually take",
    "start": "300850",
    "end": "302740"
  },
  {
    "text": "their own local decisions to connect to",
    "start": "302740",
    "end": "304390"
  },
  {
    "text": "those endpoints in this particular end",
    "start": "304390",
    "end": "306460"
  },
  {
    "text": "pause in this particular example you can",
    "start": "306460",
    "end": "308980"
  },
  {
    "text": "see that the load balancer actually",
    "start": "308980",
    "end": "311020"
  },
  {
    "text": "ended up giving even number endpoints to",
    "start": "311020",
    "end": "313090"
  },
  {
    "text": "one of the clients and odd number to the",
    "start": "313090",
    "end": "315370"
  },
  {
    "text": "client to so it can help provide",
    "start": "315370",
    "end": "318340"
  },
  {
    "text": "isolation to those backends and protect",
    "start": "318340",
    "end": "320919"
  },
  {
    "text": "them in case one of the clients really",
    "start": "320919",
    "end": "323350"
  },
  {
    "text": "starts overwhelming the service and",
    "start": "323350",
    "end": "325360"
  },
  {
    "text": "still allow the client there are that",
    "start": "325360",
    "end": "327430"
  },
  {
    "text": "line to continue to serve now let's look",
    "start": "327430",
    "end": "332979"
  },
  {
    "text": "at example of Sandler's load balancing",
    "start": "332979",
    "end": "334750"
  },
  {
    "text": "I'm sure most of you have already looked",
    "start": "334750",
    "end": "338470"
  },
  {
    "text": "at G RPC or GCL B now GRP CLP the way it",
    "start": "338470",
    "end": "341320"
  },
  {
    "text": "is right now is a protocol to provide",
    "start": "341320",
    "end": "345210"
  },
  {
    "text": "endpoints to the client where from",
    "start": "345210",
    "end": "348310"
  },
  {
    "text": "centralized ERP clb server now this is",
    "start": "348310",
    "end": "352960"
  },
  {
    "text": "called look at a leukocyte load",
    "start": "352960",
    "end": "354850"
  },
  {
    "text": "balancing because this is purely a",
    "start": "354850",
    "end": "357220"
  },
  {
    "text": "control path load balancing where your",
    "start": "357220",
    "end": "359530"
  },
  {
    "text": "actual connection from client to",
    "start": "359530",
    "end": "360910"
  },
  {
    "text": "endpoint is directly between them and",
    "start": "360910",
    "end": "364750"
  },
  {
    "text": "there is no control apart aspects of",
    "start": "364750",
    "end": "367030"
  },
  {
    "text": "this there is no hop and we'll see",
    "start": "367030",
    "end": "368590"
  },
  {
    "text": "another example after this which is the",
    "start": "368590",
    "end": "370690"
  },
  {
    "text": "proxy load balancing which has a hop in",
    "start": "370690",
    "end": "372460"
  },
  {
    "text": "between which is slightly different but",
    "start": "372460",
    "end": "374500"
  },
  {
    "text": "in gr PC the GRP CLP essentially picks",
    "start": "374500",
    "end": "378160"
  },
  {
    "text": "at the endpoints that is sent to the",
    "start": "378160",
    "end": "379600"
  },
  {
    "text": "client right now the default for client",
    "start": "379600",
    "end": "381940"
  },
  {
    "text": "with GI PCL B is the round robin and the",
    "start": "381940",
    "end": "385090"
  },
  {
    "text": "balancer essentially provides a weighted",
    "start": "385090",
    "end": "386890"
  },
  {
    "text": "endpoints to the clients in the form of",
    "start": "386890",
    "end": "389530"
  },
  {
    "text": "repeated lists and we'll look at a",
    "start": "389530",
    "end": "391090"
  },
  {
    "text": "little bit more in terms of how those",
    "start": "391090",
    "end": "393280"
  },
  {
    "text": "weighted end points impact the clients",
    "start": "393280",
    "end": "395440"
  },
  {
    "text": "and why they are needed so J RPC lb is",
    "start": "395440",
    "end": "399070"
  },
  {
    "text": "the first example of",
    "start": "399070",
    "end": "400240"
  },
  {
    "text": "your centralized load balancing another",
    "start": "400240",
    "end": "402819"
  },
  {
    "text": "example that is commonly used is proxy",
    "start": "402819",
    "end": "406090"
  },
  {
    "text": "based load balancing for this",
    "start": "406090",
    "end": "407530"
  },
  {
    "text": "presentation I am a purely going to talk",
    "start": "407530",
    "end": "409120"
  },
  {
    "text": "about envoy as a proxy and I know there",
    "start": "409120",
    "end": "412990"
  },
  {
    "text": "are a lot of other load balancing proxy",
    "start": "412990",
    "end": "415360"
  },
  {
    "text": "is available but we are talking about on",
    "start": "415360",
    "end": "418150"
  },
  {
    "text": "why because it is one of the most",
    "start": "418150",
    "end": "419199"
  },
  {
    "text": "popular ones for this presentation will",
    "start": "419199",
    "end": "421810"
  },
  {
    "text": "only worry about the load balancing",
    "start": "421810",
    "end": "423520"
  },
  {
    "text": "aspect for Envoy and not of other",
    "start": "423520",
    "end": "425860"
  },
  {
    "text": "capabilities that our proxy provides and",
    "start": "425860",
    "end": "428500"
  },
  {
    "text": "you might want to use it for those",
    "start": "428500",
    "end": "430090"
  },
  {
    "text": "reasons but from a load balancing point",
    "start": "430090",
    "end": "432130"
  },
  {
    "text": "of view and on why proxy connects to",
    "start": "432130",
    "end": "437430"
  },
  {
    "text": "management server in this particular",
    "start": "437430",
    "end": "439419"
  },
  {
    "text": "case I have shown you an example of",
    "start": "439419",
    "end": "440680"
  },
  {
    "text": "Ischia pilot which serves an ax TS load",
    "start": "440680",
    "end": "443080"
  },
  {
    "text": "balancing API for Envoy",
    "start": "443080",
    "end": "445150"
  },
  {
    "text": "so the on OA connects to management",
    "start": "445150",
    "end": "447130"
  },
  {
    "text": "server to get the endpoints that it",
    "start": "447130",
    "end": "448810"
  },
  {
    "text": "needs to talk to and and then uses that",
    "start": "448810",
    "end": "452319"
  },
  {
    "text": "to route the request to the right",
    "start": "452319",
    "end": "455409"
  },
  {
    "text": "endpoints the client over here in this",
    "start": "455409",
    "end": "457449"
  },
  {
    "text": "case the GI PC client doesn't really",
    "start": "457449",
    "end": "459190"
  },
  {
    "text": "know about all these endpoints and dip",
    "start": "459190",
    "end": "460750"
  },
  {
    "text": "and it basically the the connection gets",
    "start": "460750",
    "end": "463659"
  },
  {
    "text": "terminated at or at the Envoy proxy and",
    "start": "463659",
    "end": "466949"
  },
  {
    "text": "subsequently the on web proxy does the",
    "start": "466949",
    "end": "469780"
  },
  {
    "text": "load balancing for those endpoints the",
    "start": "469780",
    "end": "474639"
  },
  {
    "text": "Envoy itself can be deployed in middle",
    "start": "474639",
    "end": "477190"
  },
  {
    "text": "proxy or a side proxy mode and in this",
    "start": "477190",
    "end": "480370"
  },
  {
    "text": "particular example we are using a",
    "start": "480370",
    "end": "482889"
  },
  {
    "text": "sidecar it's again one of the most",
    "start": "482889",
    "end": "484690"
  },
  {
    "text": "popular methods of deployment now we've",
    "start": "484690",
    "end": "489639"
  },
  {
    "text": "talked about how a centralized load",
    "start": "489639",
    "end": "491949"
  },
  {
    "text": "balancer can allow you to to provide",
    "start": "491949",
    "end": "496060"
  },
  {
    "text": "isolation such that your servers are",
    "start": "496060",
    "end": "497590"
  },
  {
    "text": "protected but that's not enough there",
    "start": "497590",
    "end": "500080"
  },
  {
    "text": "are more deployment considerations for a",
    "start": "500080",
    "end": "501729"
  },
  {
    "text": "large service one of it is your",
    "start": "501729",
    "end": "504069"
  },
  {
    "text": "endpoints themselves for heterogeneous",
    "start": "504069",
    "end": "506289"
  },
  {
    "text": "and they can be heterogeneous and",
    "start": "506289",
    "end": "508360"
  },
  {
    "text": "various aspects like their capacity",
    "start": "508360",
    "end": "510400"
  },
  {
    "text": "we'll talk about what capacity means a",
    "start": "510400",
    "end": "513279"
  },
  {
    "text": "little bit later in when we talk about",
    "start": "513279",
    "end": "516370"
  },
  {
    "text": "it in more detail also in terms of",
    "start": "516370",
    "end": "519250"
  },
  {
    "text": "location of endpoint could be in",
    "start": "519250",
    "end": "522990"
  },
  {
    "text": "geographically different location than a",
    "start": "522990",
    "end": "525070"
  },
  {
    "text": "client or endpoints can be globally",
    "start": "525070",
    "end": "527380"
  },
  {
    "text": "distributed but they're headed in",
    "start": "527380",
    "end": "529120"
  },
  {
    "text": "heterogeneous to the point where a",
    "start": "529120",
    "end": "531250"
  },
  {
    "text": "request made from a client",
    "start": "531250",
    "end": "533620"
  },
  {
    "text": "we'll have a different behavior when we",
    "start": "533620",
    "end": "535390"
  },
  {
    "text": "do when you reach out to different end",
    "start": "535390",
    "end": "536980"
  },
  {
    "text": "points also end points health and",
    "start": "536980",
    "end": "540730"
  },
  {
    "text": "capacity can change over time for",
    "start": "540730",
    "end": "542140"
  },
  {
    "text": "various reasons you are abrading the",
    "start": "542140",
    "end": "544540"
  },
  {
    "text": "your service or you are there's a",
    "start": "544540",
    "end": "547570"
  },
  {
    "text": "hardware failure when you are actually",
    "start": "547570",
    "end": "549070"
  },
  {
    "text": "dealing with physical machines which can",
    "start": "549070",
    "end": "552040"
  },
  {
    "text": "change the capacity over time there are",
    "start": "552040",
    "end": "554140"
  },
  {
    "text": "other aspects too like request could not",
    "start": "554140",
    "end": "556840"
  },
  {
    "text": "mean not every request is the same and",
    "start": "556840",
    "end": "560560"
  },
  {
    "text": "the search and that could impact your",
    "start": "560560",
    "end": "562120"
  },
  {
    "text": "service capacity and availability so",
    "start": "562120",
    "end": "566040"
  },
  {
    "text": "looking at just the endpoints and making",
    "start": "566040",
    "end": "569140"
  },
  {
    "text": "decision without really taking endpoint",
    "start": "569140",
    "end": "572790"
  },
  {
    "text": "information into consideration is not",
    "start": "572790",
    "end": "575350"
  },
  {
    "text": "really great and that is where we mean",
    "start": "575350",
    "end": "578710"
  },
  {
    "text": "we need to start thinking about",
    "start": "578710",
    "end": "579850"
  },
  {
    "text": "centralized load balancing having to get",
    "start": "579850",
    "end": "582760"
  },
  {
    "text": "those information to make better",
    "start": "582760",
    "end": "583990"
  },
  {
    "text": "decisions",
    "start": "583990",
    "end": "584710"
  },
  {
    "text": "so what we're essentially trying to say",
    "start": "584710",
    "end": "587080"
  },
  {
    "text": "is for inform load balancing we want the",
    "start": "587080",
    "end": "590050"
  },
  {
    "text": "back ends or end points to start",
    "start": "590050",
    "end": "592180"
  },
  {
    "text": "reporting information to load balancers",
    "start": "592180",
    "end": "593890"
  },
  {
    "text": "now what are this kind of information",
    "start": "593890",
    "end": "595990"
  },
  {
    "text": "that you would need we talked about",
    "start": "595990",
    "end": "598540"
  },
  {
    "text": "capacity what is capacity capacity is",
    "start": "598540",
    "end": "600760"
  },
  {
    "text": "essentially a certain specific and can",
    "start": "600760",
    "end": "603310"
  },
  {
    "text": "be various aspects it could be number of",
    "start": "603310",
    "end": "605020"
  },
  {
    "text": "our pcs that your particular service",
    "start": "605020",
    "end": "606700"
  },
  {
    "text": "scan or the endpoint and serve and that",
    "start": "606700",
    "end": "608980"
  },
  {
    "text": "can differ based on how big your",
    "start": "608980",
    "end": "612220"
  },
  {
    "text": "endpoint is in in compute or in memory",
    "start": "612220",
    "end": "615790"
  },
  {
    "text": "it can also differ it can also be",
    "start": "615790",
    "end": "618880"
  },
  {
    "text": "something like like your utilization of",
    "start": "618880",
    "end": "621190"
  },
  {
    "text": "and aspect and one of the good example",
    "start": "621190",
    "end": "625630"
  },
  {
    "text": "of this is the G RPC load reported",
    "start": "625630",
    "end": "628270"
  },
  {
    "text": "protocol which allows you to end report",
    "start": "628270",
    "end": "631060"
  },
  {
    "text": "all of this back to the balancer and I",
    "start": "631060",
    "end": "633760"
  },
  {
    "text": "believe open source implementation for",
    "start": "633760",
    "end": "635290"
  },
  {
    "text": "this exists at least in C++ I'm sure",
    "start": "635290",
    "end": "638290"
  },
  {
    "text": "about other languages but this is",
    "start": "638290",
    "end": "639760"
  },
  {
    "text": "something that you can use to provide",
    "start": "639760",
    "end": "641500"
  },
  {
    "text": "more information to the balancer such",
    "start": "641500",
    "end": "643480"
  },
  {
    "text": "that the load balancer can make better",
    "start": "643480",
    "end": "644860"
  },
  {
    "text": "decisions based on endpoint capacity and",
    "start": "644860",
    "end": "647340"
  },
  {
    "text": "do and provide those to your your",
    "start": "647340",
    "end": "652390"
  },
  {
    "text": "clients we saw in G RPC example that the",
    "start": "652390",
    "end": "656380"
  },
  {
    "text": "GRP CL b just gives you a list of",
    "start": "656380",
    "end": "659710"
  },
  {
    "text": "endpoints that clients like round-robin",
    "start": "659710",
    "end": "661990"
  },
  {
    "text": "over using your capacity the load",
    "start": "661990",
    "end": "664630"
  },
  {
    "text": "balancer can actually give weighted",
    "start": "664630",
    "end": "666550"
  },
  {
    "text": "information",
    "start": "666550",
    "end": "667170"
  },
  {
    "text": "it could repeat some servers indicating",
    "start": "667170",
    "end": "670049"
  },
  {
    "text": "to the clients that you can do more our",
    "start": "670049",
    "end": "671459"
  },
  {
    "text": "pcs on tho then it is as it has more",
    "start": "671459",
    "end": "674100"
  },
  {
    "text": "capacity one other important information",
    "start": "674100",
    "end": "676170"
  },
  {
    "text": "that a load balancer can use to a",
    "start": "676170",
    "end": "679350"
  },
  {
    "text": "centralized node can use is the health",
    "start": "679350",
    "end": "681660"
  },
  {
    "text": "of an ED point by that the end point is",
    "start": "681660",
    "end": "683069"
  },
  {
    "text": "up or not so instead of giving an end",
    "start": "683069",
    "end": "684839"
  },
  {
    "text": "point which essentially doesn't serve",
    "start": "684839",
    "end": "687329"
  },
  {
    "text": "anything it could really give end point",
    "start": "687329",
    "end": "689129"
  },
  {
    "text": "which is serving right now and these are",
    "start": "689129",
    "end": "690929"
  },
  {
    "text": "more timely information that's allowing",
    "start": "690929",
    "end": "693329"
  },
  {
    "text": "the clients to be able to do their",
    "start": "693329",
    "end": "695579"
  },
  {
    "text": "requests and get a successful response",
    "start": "695579",
    "end": "700790"
  },
  {
    "text": "second aspect of informed load balancing",
    "start": "700790",
    "end": "703499"
  },
  {
    "text": "is locality now what is the locality I",
    "start": "703499",
    "end": "706829"
  },
  {
    "text": "talked about log a large services where",
    "start": "706829",
    "end": "708779"
  },
  {
    "text": "clients are distributed all over the",
    "start": "708779",
    "end": "710249"
  },
  {
    "text": "world for for the behavior of the",
    "start": "710249",
    "end": "715649"
  },
  {
    "text": "service that you expect you would want",
    "start": "715649",
    "end": "717660"
  },
  {
    "text": "those endpoints to be also distributed",
    "start": "717660",
    "end": "719879"
  },
  {
    "text": "across the globe which means that is an",
    "start": "719879",
    "end": "722730"
  },
  {
    "text": "advantage for your clients to reach out",
    "start": "722730",
    "end": "724919"
  },
  {
    "text": "to endpoints which are more local or",
    "start": "724919",
    "end": "726929"
  },
  {
    "text": "close that geographically to them but to",
    "start": "726929",
    "end": "729419"
  },
  {
    "text": "have to actually do that you need a",
    "start": "729419",
    "end": "731429"
  },
  {
    "text": "construct to allow the load balancer to",
    "start": "731429",
    "end": "734790"
  },
  {
    "text": "inform the clients that these are the",
    "start": "734790",
    "end": "736949"
  },
  {
    "text": "servers that you need to connect to so",
    "start": "736949",
    "end": "740040"
  },
  {
    "text": "I've shown an example of couple of",
    "start": "740040",
    "end": "742499"
  },
  {
    "text": "locations over here so the construct of",
    "start": "742499",
    "end": "745019"
  },
  {
    "text": "what we're and endpoint resides needs to",
    "start": "745019",
    "end": "749399"
  },
  {
    "text": "be made available to the load balancer",
    "start": "749399",
    "end": "751679"
  },
  {
    "text": "and also needs to be made available to",
    "start": "751679",
    "end": "753629"
  },
  {
    "text": "the client in some format either it can",
    "start": "753629",
    "end": "755309"
  },
  {
    "text": "be encoded as part of the protocol like",
    "start": "755309",
    "end": "757139"
  },
  {
    "text": "in G RPC lb or it could be done as part",
    "start": "757139",
    "end": "760529"
  },
  {
    "text": "of a protocol which XPS does wherein it",
    "start": "760529",
    "end": "765179"
  },
  {
    "text": "provides locality as an explicit member",
    "start": "765179",
    "end": "768480"
  },
  {
    "text": "in the protocol which where the client",
    "start": "768480",
    "end": "771869"
  },
  {
    "text": "can take more informed decisions about",
    "start": "771869",
    "end": "774089"
  },
  {
    "text": "where it wants to go and the advantage",
    "start": "774089",
    "end": "777089"
  },
  {
    "text": "of this is the client can take advantage",
    "start": "777089",
    "end": "780989"
  },
  {
    "text": "of spatial locality and have Layton sees",
    "start": "780989",
    "end": "784939"
  },
  {
    "text": "ready latencies for the request this",
    "start": "784939",
    "end": "787739"
  },
  {
    "text": "kind of locality is different from the",
    "start": "787739",
    "end": "791699"
  },
  {
    "text": "temporal locality associated with pic",
    "start": "791699",
    "end": "793499"
  },
  {
    "text": "server that we've seen before where a",
    "start": "793499",
    "end": "795509"
  },
  {
    "text": "client would want to reach to the same",
    "start": "795509",
    "end": "797039"
  },
  {
    "text": "server again and again",
    "start": "797039",
    "end": "798910"
  },
  {
    "text": "also the other advantage that a locality",
    "start": "798910",
    "end": "801429"
  },
  {
    "text": "gives you is it can give you an abstract",
    "start": "801429",
    "end": "803529"
  },
  {
    "text": "concept of locality capacity capacity",
    "start": "803529",
    "end": "805720"
  },
  {
    "text": "that can be used for smarter balancing",
    "start": "805720",
    "end": "808919"
  },
  {
    "text": "at the load balancer for example a bunch",
    "start": "808919",
    "end": "811929"
  },
  {
    "text": "of servers capacities can be aggregated",
    "start": "811929",
    "end": "813789"
  },
  {
    "text": "for a particular location and you can",
    "start": "813789",
    "end": "815799"
  },
  {
    "text": "say a particular location has a certain",
    "start": "815799",
    "end": "817720"
  },
  {
    "text": "capacity this allows the load balancer",
    "start": "817720",
    "end": "820179"
  },
  {
    "text": "to basically balance based on those",
    "start": "820179",
    "end": "822910"
  },
  {
    "text": "capacities and we'll see how this",
    "start": "822910",
    "end": "825329"
  },
  {
    "text": "becomes more relevant when we move on to",
    "start": "825329",
    "end": "829269"
  },
  {
    "text": "the next slide so we talked about a",
    "start": "829269",
    "end": "835149"
  },
  {
    "text": "bunch of concepts till now about what is",
    "start": "835149",
    "end": "837669"
  },
  {
    "text": "required for load balancing at scale how",
    "start": "837669",
    "end": "839769"
  },
  {
    "text": "to make centralized load balancing have",
    "start": "839769",
    "end": "842799"
  },
  {
    "text": "more information such that it can make",
    "start": "842799",
    "end": "844329"
  },
  {
    "text": "do smarter decisions now assuming we do",
    "start": "844329",
    "end": "847119"
  },
  {
    "text": "all of this what what what does the real",
    "start": "847119",
    "end": "850629"
  },
  {
    "text": "architecture look like this the mocked",
    "start": "850629",
    "end": "853449"
  },
  {
    "text": "up load balancer but it tries to",
    "start": "853449",
    "end": "855939"
  },
  {
    "text": "illustrate what exactly we've talked",
    "start": "855939",
    "end": "857889"
  },
  {
    "text": "till now we have you have multiple",
    "start": "857889",
    "end": "859989"
  },
  {
    "text": "locations a to Z and you have a bunch of",
    "start": "859989",
    "end": "862209"
  },
  {
    "text": "services all are reporting they are load",
    "start": "862209",
    "end": "864549"
  },
  {
    "text": "back to the load balancer and the load",
    "start": "864549",
    "end": "867789"
  },
  {
    "text": "balancer is basically making global",
    "start": "867789",
    "end": "869199"
  },
  {
    "text": "decisions for each of these services and",
    "start": "869199",
    "end": "872079"
  },
  {
    "text": "at the same time sending those",
    "start": "872079",
    "end": "874149"
  },
  {
    "text": "information to the client where it's",
    "start": "874149",
    "end": "876279"
  },
  {
    "text": "telling client what to do based on those",
    "start": "876279",
    "end": "877779"
  },
  {
    "text": "capacities weights localities etc trying",
    "start": "877779",
    "end": "881259"
  },
  {
    "text": "to serve it closer to the clients all",
    "start": "881259",
    "end": "884619"
  },
  {
    "text": "this calculation will take a lot will",
    "start": "884619",
    "end": "887169"
  },
  {
    "text": "take some time because it and it's",
    "start": "887169",
    "end": "889659"
  },
  {
    "text": "purely depending on your scale and",
    "start": "889659",
    "end": "891069"
  },
  {
    "text": "number of services but is this the right",
    "start": "891069",
    "end": "893769"
  },
  {
    "text": "way to do maybe not maybe there's",
    "start": "893769",
    "end": "896199"
  },
  {
    "text": "something additional that we could do",
    "start": "896199",
    "end": "897669"
  },
  {
    "text": "which is we could divide the",
    "start": "897669",
    "end": "899919"
  },
  {
    "text": "responsibility between the centralized",
    "start": "899919",
    "end": "902679"
  },
  {
    "text": "global load balancer and the client we",
    "start": "902679",
    "end": "904779"
  },
  {
    "text": "could have the centralized load balancer",
    "start": "904779",
    "end": "906399"
  },
  {
    "text": "take some of these decisions while the",
    "start": "906399",
    "end": "908649"
  },
  {
    "text": "clients can take more decisions more",
    "start": "908649",
    "end": "911589"
  },
  {
    "text": "locally based on the information that",
    "start": "911589",
    "end": "913119"
  },
  {
    "text": "they have the global decisions like",
    "start": "913119",
    "end": "915959"
  },
  {
    "text": "what's the capacity of a particular",
    "start": "915959",
    "end": "918189"
  },
  {
    "text": "locality and where is for clients in",
    "start": "918189",
    "end": "921009"
  },
  {
    "text": "particular locality where should they",
    "start": "921009",
    "end": "922329"
  },
  {
    "text": "directly go to those can be decisions",
    "start": "922329",
    "end": "924939"
  },
  {
    "text": "made at those decisions can be made",
    "start": "924939",
    "end": "927869"
  },
  {
    "text": "globally at the load balancer while the",
    "start": "927869",
    "end": "931419"
  },
  {
    "text": "clients can take more local",
    "start": "931419",
    "end": "932860"
  },
  {
    "text": "decisions of which servers to pick and",
    "start": "932860",
    "end": "935550"
  },
  {
    "text": "which localities to pick be in case",
    "start": "935550",
    "end": "938410"
  },
  {
    "text": "certain localities fail now this is this",
    "start": "938410",
    "end": "941800"
  },
  {
    "text": "is not really possible in G RPC lb",
    "start": "941800",
    "end": "944650"
  },
  {
    "text": "protocol PCL but whatever doesn't really",
    "start": "944650",
    "end": "946960"
  },
  {
    "text": "have the information of locality encoded",
    "start": "946960",
    "end": "950260"
  },
  {
    "text": "in it but this is something which is all",
    "start": "950260",
    "end": "953530"
  },
  {
    "text": "which already exists in XDS protocol and",
    "start": "953530",
    "end": "957610"
  },
  {
    "text": "is already available with in the form of",
    "start": "957610",
    "end": "960220"
  },
  {
    "text": "locality and endpoints now let's look at",
    "start": "960220",
    "end": "966010"
  },
  {
    "text": "service mesh and load balancing and how",
    "start": "966010",
    "end": "968590"
  },
  {
    "text": "it happens this is a small example of",
    "start": "968590",
    "end": "970930"
  },
  {
    "text": "what it would look like for two services",
    "start": "970930",
    "end": "975010"
  },
  {
    "text": "service one and service to service one",
    "start": "975010",
    "end": "977530"
  },
  {
    "text": "is deployed in two locations USA central",
    "start": "977530",
    "end": "981490"
  },
  {
    "text": "and Asia South and service to is",
    "start": "981490",
    "end": "984940"
  },
  {
    "text": "deployed in Asia south and USA West",
    "start": "984940",
    "end": "987220"
  },
  {
    "text": "service two is a client which wants to",
    "start": "987220",
    "end": "991210"
  },
  {
    "text": "connect to service one and based on",
    "start": "991210",
    "end": "993280"
  },
  {
    "text": "locality all the server's all the",
    "start": "993280",
    "end": "997600"
  },
  {
    "text": "server's all the services sorry are",
    "start": "997600",
    "end": "1001250"
  },
  {
    "text": "sending load reports to sto pilot and",
    "start": "1001250",
    "end": "1005090"
  },
  {
    "text": "it's making load balancing decisions and",
    "start": "1005090",
    "end": "1008040"
  },
  {
    "text": "giving the information to the sites are",
    "start": "1008040",
    "end": "1009630"
  },
  {
    "text": "proxies for load balancing so whenever a",
    "start": "1009630",
    "end": "1011880"
  },
  {
    "text": "service from whenever the client from",
    "start": "1011880",
    "end": "1014150"
  },
  {
    "text": "USA West wants to connect to a service s",
    "start": "1014150",
    "end": "1018600"
  },
  {
    "text": "1 it is redirected to its a server which",
    "start": "1018600",
    "end": "1022710"
  },
  {
    "text": "is closer to it which is in USA central",
    "start": "1022710",
    "end": "1024569"
  },
  {
    "text": "while the servers from s 2 are",
    "start": "1024570",
    "end": "1028709"
  },
  {
    "text": "redirected to Asia South except for one",
    "start": "1028710",
    "end": "1031650"
  },
  {
    "text": "server because the capacity in asia",
    "start": "1031650",
    "end": "1034680"
  },
  {
    "text": "south are indicated by the number of",
    "start": "1034680",
    "end": "1036300"
  },
  {
    "text": "servers which is just 2 is not enough to",
    "start": "1036300",
    "end": "1038370"
  },
  {
    "text": "serve those requests and for that",
    "start": "1038370",
    "end": "1039630"
  },
  {
    "text": "particular which in our case is server s",
    "start": "1039630",
    "end": "1042150"
  },
  {
    "text": "2 3",
    "start": "1042150",
    "end": "1042810"
  },
  {
    "text": "it is redirected to us s central so this",
    "start": "1042810",
    "end": "1046589"
  },
  {
    "text": "way we achieve we can achieve multiple",
    "start": "1046590",
    "end": "1049830"
  },
  {
    "text": "level of load balancing where clients",
    "start": "1049830",
    "end": "1052500"
  },
  {
    "text": "can can locally go to closer servers",
    "start": "1052500",
    "end": "1056550"
  },
  {
    "text": "while globally the sto pilot or a",
    "start": "1056550",
    "end": "1059730"
  },
  {
    "text": "management server can basically redirect",
    "start": "1059730",
    "end": "1062070"
  },
  {
    "text": "them to a different",
    "start": "1062070",
    "end": "1064030"
  },
  {
    "text": "locality now we've talked about G RPC",
    "start": "1064030",
    "end": "1067780"
  },
  {
    "text": "services and we've looked at service",
    "start": "1067780",
    "end": "1068980"
  },
  {
    "text": "mesh now this presentation and service",
    "start": "1068980",
    "end": "1073000"
  },
  {
    "text": "mesh so how do they come together the",
    "start": "1073000",
    "end": "1075760"
  },
  {
    "text": "same infrastructure that we've talked",
    "start": "1075760",
    "end": "1077050"
  },
  {
    "text": "about for service mesh using you using",
    "start": "1077050",
    "end": "1081010"
  },
  {
    "text": "the sidecar proxy can also be and used",
    "start": "1081010",
    "end": "1083770"
  },
  {
    "text": "to do G RPC load balancing and we've",
    "start": "1083770",
    "end": "1087370"
  },
  {
    "text": "looked at how X J's provides various",
    "start": "1087370",
    "end": "1088960"
  },
  {
    "text": "constructs for load balancing",
    "start": "1088960",
    "end": "1090670"
  },
  {
    "text": "flexibility including locality and",
    "start": "1090670",
    "end": "1092290"
  },
  {
    "text": "proximity information these information",
    "start": "1092290",
    "end": "1094510"
  },
  {
    "text": "can be used to do G RPC load balancing",
    "start": "1094510",
    "end": "1098850"
  },
  {
    "text": "using using the sidecar and we look at",
    "start": "1098850",
    "end": "1103780"
  },
  {
    "text": "that in our demo which we are going to",
    "start": "1103780",
    "end": "1106660"
  },
  {
    "text": "do next so this is my demo setup in my",
    "start": "1106660",
    "end": "1110470"
  },
  {
    "text": "demo setup I have something similar to",
    "start": "1110470",
    "end": "1112750"
  },
  {
    "text": "what we have seen before the only",
    "start": "1112750",
    "end": "1114460"
  },
  {
    "text": "difference being only the clients are",
    "start": "1114460",
    "end": "1116920"
  },
  {
    "text": "the only ones that are using the sidecar",
    "start": "1116920",
    "end": "1119020"
  },
  {
    "text": "while the endpoints are do not are not",
    "start": "1119020",
    "end": "1121750"
  },
  {
    "text": "using sidecar and the only information",
    "start": "1121750",
    "end": "1124120"
  },
  {
    "text": "that the end point is really sending is",
    "start": "1124120",
    "end": "1126480"
  },
  {
    "text": "the health information associated with",
    "start": "1126480",
    "end": "1128830"
  },
  {
    "text": "that end point I am NOT configured",
    "start": "1128830",
    "end": "1130570"
  },
  {
    "text": "capacity for this demo and the health is",
    "start": "1130570",
    "end": "1134050"
  },
  {
    "text": "the only information that is going to be",
    "start": "1134050",
    "end": "1135700"
  },
  {
    "text": "used for global load balancing now in",
    "start": "1135700",
    "end": "1138790"
  },
  {
    "text": "this particular case similar to my",
    "start": "1138790",
    "end": "1140890"
  },
  {
    "text": "previous service mesh architecture or",
    "start": "1140890",
    "end": "1145410"
  },
  {
    "text": "deployment I have a greater service and",
    "start": "1145410",
    "end": "1149170"
  },
  {
    "text": "a greater client the greater services",
    "start": "1149170",
    "end": "1151750"
  },
  {
    "text": "actually deployed in USA Central and",
    "start": "1151750",
    "end": "1154360"
  },
  {
    "text": "South Asia",
    "start": "1154360",
    "end": "1155550"
  },
  {
    "text": "each with two instances of service",
    "start": "1155550",
    "end": "1158950"
  },
  {
    "text": "running and this deployment is set up in",
    "start": "1158950",
    "end": "1163450"
  },
  {
    "text": "GC with traffic director as the",
    "start": "1163450",
    "end": "1166570"
  },
  {
    "text": "management server we can use East EO as",
    "start": "1166570",
    "end": "1170500"
  },
  {
    "text": "a as the management server true traffic",
    "start": "1170500",
    "end": "1173680"
  },
  {
    "text": "director was just easier for me to",
    "start": "1173680",
    "end": "1175710"
  },
  {
    "text": "configure for this particular demo and",
    "start": "1175710",
    "end": "1177880"
  },
  {
    "text": "it's easier for for me to write up our",
    "start": "1177880",
    "end": "1181180"
  },
  {
    "text": "demo script which also made available",
    "start": "1181180",
    "end": "1183850"
  },
  {
    "text": "and is present in the last slide so but",
    "start": "1183850",
    "end": "1188200"
  },
  {
    "text": "it's the same X J's API which is to your",
    "start": "1188200",
    "end": "1190420"
  },
  {
    "text": "users so for this particular case I have",
    "start": "1190420",
    "end": "1193540"
  },
  {
    "text": "greater service with two endpoints",
    "start": "1193540",
    "end": "1195160"
  },
  {
    "text": "running each in USA Central and South",
    "start": "1195160",
    "end": "1197650"
  },
  {
    "text": "Asia and I have greater client1 running",
    "start": "1197650",
    "end": "1200950"
  },
  {
    "text": "in USA vest and one running in South",
    "start": "1200950",
    "end": "1204120"
  },
  {
    "text": "South Asia so by default whenever the",
    "start": "1204120",
    "end": "1208000"
  },
  {
    "text": "demo starts you'll see that the greater",
    "start": "1208000",
    "end": "1209770"
  },
  {
    "text": "client basically reaches out to read a",
    "start": "1209770",
    "end": "1211960"
  },
  {
    "text": "service in USA Central and greater",
    "start": "1211960",
    "end": "1215080"
  },
  {
    "text": "client will reach out to service the",
    "start": "1215080",
    "end": "1218650"
  },
  {
    "text": "endpoints running in South Asia so let's",
    "start": "1218650",
    "end": "1221289"
  },
  {
    "text": "look at the demo so these are my machine",
    "start": "1221289",
    "end": "1229120"
  },
  {
    "text": "names they are slightly different from",
    "start": "1229120",
    "end": "1230140"
  },
  {
    "text": "what is it in the what is them the demo",
    "start": "1230140",
    "end": "1232149"
  },
  {
    "text": "from a configuration point of view they",
    "start": "1232149",
    "end": "1234520"
  },
  {
    "text": "are managed instead they are each of",
    "start": "1234520",
    "end": "1237700"
  },
  {
    "text": "them are all of these are under one",
    "start": "1237700",
    "end": "1241149"
  },
  {
    "text": "particular service and I'll show this is",
    "start": "1241149",
    "end": "1250630"
  },
  {
    "text": "not the right version",
    "start": "1250630",
    "end": "1253500"
  },
  {
    "text": "yeah",
    "start": "1277020",
    "end": "1278290"
  },
  {
    "text": "so I have I have this one service which",
    "start": "1278290",
    "end": "1280840"
  },
  {
    "text": "is configured which is right now shown",
    "start": "1280840",
    "end": "1283300"
  },
  {
    "text": "as healthy because it has all the end",
    "start": "1283300",
    "end": "1285070"
  },
  {
    "text": "points associated with it as healthy and",
    "start": "1285070",
    "end": "1287730"
  },
  {
    "text": "I have two clients which just open",
    "start": "1287730",
    "end": "1292510"
  },
  {
    "text": "another console for us",
    "start": "1292510",
    "end": "1295620"
  },
  {
    "text": "so I have two clients one in Asia and US",
    "start": "1313540",
    "end": "1317150"
  },
  {
    "text": "West what I will show you is let me",
    "start": "1317150",
    "end": "1321980"
  },
  {
    "text": "first start the clients on each of my",
    "start": "1321980",
    "end": "1324590"
  },
  {
    "text": "notes so all the server does is respond",
    "start": "1324590",
    "end": "1328130"
  },
  {
    "text": "with its name which has its continent",
    "start": "1328130",
    "end": "1332930"
  },
  {
    "text": "which region it is from and its actual",
    "start": "1332930",
    "end": "1336320"
  },
  {
    "text": "hostname on the on the client side",
    "start": "1336320",
    "end": "1345260"
  },
  {
    "text": "outside of making the actual request I",
    "start": "1345260",
    "end": "1348020"
  },
  {
    "text": "have a HTTP server running which",
    "start": "1348020",
    "end": "1349700"
  },
  {
    "text": "basically displays what the last",
    "start": "1349700",
    "end": "1353180"
  },
  {
    "text": "requests last 50 requests where the last",
    "start": "1353180",
    "end": "1355610"
  },
  {
    "text": "50 requests have gone I have two of them",
    "start": "1355610",
    "end": "1359300"
  },
  {
    "text": "as you can see this is us West it it's",
    "start": "1359300",
    "end": "1364130"
  },
  {
    "text": "for the last 50 requests have all been",
    "start": "1364130",
    "end": "1366290"
  },
  {
    "text": "in US and for Asia South all last 50",
    "start": "1366290",
    "end": "1371090"
  },
  {
    "text": "requests have all been in Asia I need to",
    "start": "1371090",
    "end": "1374780"
  },
  {
    "text": "refresh this because this is a pretty",
    "start": "1374780",
    "end": "1377780"
  },
  {
    "text": "basic HTML page that I could cook up",
    "start": "1377780",
    "end": "1380440"
  },
  {
    "text": "based on my HTML expertise so as you can",
    "start": "1380440",
    "end": "1386000"
  },
  {
    "text": "see they are all last 50 requests are",
    "start": "1386000",
    "end": "1388610"
  },
  {
    "text": "equally divided on two nodes now let's",
    "start": "1388610",
    "end": "1390620"
  },
  {
    "text": "bring one of the server down and see how",
    "start": "1390620",
    "end": "1392390"
  },
  {
    "text": "the how the client react to them",
    "start": "1392390",
    "end": "1397390"
  },
  {
    "text": "so I've stopped the service on one of",
    "start": "1425730",
    "end": "1429279"
  },
  {
    "text": "the nodes in Ashiya south and we'll see",
    "start": "1429279",
    "end": "1432580"
  },
  {
    "text": "how it impacts the requests that are",
    "start": "1432580",
    "end": "1435760"
  },
  {
    "text": "being made so ideally in this particular",
    "start": "1435760",
    "end": "1441340"
  },
  {
    "text": "case once the service goes down the",
    "start": "1441340",
    "end": "1444549"
  },
  {
    "text": "management server over here detects that",
    "start": "1444549",
    "end": "1446020"
  },
  {
    "text": "it is unhealthy and it'll start to",
    "start": "1446020",
    "end": "1448470"
  },
  {
    "text": "redirect some of the traffic to a",
    "start": "1448470",
    "end": "1451710"
  },
  {
    "text": "different node so it's already started",
    "start": "1451710",
    "end": "1459429"
  },
  {
    "text": "to do it on u.s. central ok I think I",
    "start": "1459429",
    "end": "1469840"
  },
  {
    "text": "have brought down both of them so let me",
    "start": "1469840",
    "end": "1474179"
  },
  {
    "text": "so I in in my frenzy of typing I ended",
    "start": "1474179",
    "end": "1478809"
  },
  {
    "text": "up dropping down bringing down servers",
    "start": "1478809",
    "end": "1480640"
  },
  {
    "text": "on both the continents so let me write",
    "start": "1480640",
    "end": "1485890"
  },
  {
    "text": "again so in this particular case because",
    "start": "1485890",
    "end": "1487899"
  },
  {
    "text": "one node went down on each of the",
    "start": "1487899",
    "end": "1490029"
  },
  {
    "text": "continents you see that both the clients",
    "start": "1490029",
    "end": "1492520"
  },
  {
    "text": "the uswest client and the US and the",
    "start": "1492520",
    "end": "1494890"
  },
  {
    "text": "Asia South line and end up making",
    "start": "1494890",
    "end": "1497320"
  },
  {
    "text": "requests or across the continents you",
    "start": "1497320",
    "end": "1500830"
  },
  {
    "text": "would also see at least in this",
    "start": "1500830",
    "end": "1503049"
  },
  {
    "text": "dashboard right now it will show only",
    "start": "1503049",
    "end": "1506200"
  },
  {
    "text": "one as unhealthy because I have bought",
    "start": "1506200",
    "end": "1508240"
  },
  {
    "text": "the other server up so it's unhealthy so",
    "start": "1508240",
    "end": "1513580"
  },
  {
    "text": "you can see that the one servers have",
    "start": "1513580",
    "end": "1515950"
  },
  {
    "text": "been healthy now let me start the G RPC",
    "start": "1515950",
    "end": "1522520"
  },
  {
    "text": "server again on on US central that",
    "start": "1522520",
    "end": "1528909"
  },
  {
    "text": "should this should change the way the",
    "start": "1528909",
    "end": "1531940"
  },
  {
    "text": "requests start noting ok that has",
    "start": "1531940",
    "end": "1538600"
  },
  {
    "text": "started routing again to that particular",
    "start": "1538600",
    "end": "1541360"
  },
  {
    "text": "node so you see as soon as the node came",
    "start": "1541360",
    "end": "1543970"
  },
  {
    "text": "up basically ended up informing the",
    "start": "1543970",
    "end": "1547029"
  },
  {
    "text": "client of the GRP decline to start",
    "start": "1547029",
    "end": "1549490"
  },
  {
    "text": "moving traffic back into u.s. central",
    "start": "1549490",
    "end": "1552010"
  },
  {
    "text": "this is for the sorry us yeah u.s.",
    "start": "1552010",
    "end": "1555279"
  },
  {
    "text": "central so",
    "start": "1555279",
    "end": "1556090"
  },
  {
    "text": "the US clients are not all being served",
    "start": "1556090",
    "end": "1558520"
  },
  {
    "text": "in one region while the Asia plants",
    "start": "1558520",
    "end": "1563080"
  },
  {
    "text": "still has one note down so it's moving",
    "start": "1563080",
    "end": "1566440"
  },
  {
    "text": "traffic from Asia are to us so a bunch",
    "start": "1566440",
    "end": "1580000"
  },
  {
    "text": "of these demo scripts are available in",
    "start": "1580000",
    "end": "1584050"
  },
  {
    "text": "the github repo you can all try this",
    "start": "1584050",
    "end": "1586870"
  },
  {
    "text": "yourself it just took seven steps",
    "start": "1586870",
    "end": "1589470"
  },
  {
    "text": "essentially to get the setup up and",
    "start": "1589470",
    "end": "1592480"
  },
  {
    "text": "running so if you really want to figure",
    "start": "1592480",
    "end": "1594250"
  },
  {
    "text": "out try out for yourself how to do this",
    "start": "1594250",
    "end": "1598120"
  },
  {
    "text": "global load balancing and trigger",
    "start": "1598120",
    "end": "1600820"
  },
  {
    "text": "behavior and get hands-on experience on",
    "start": "1600820",
    "end": "1603460"
  },
  {
    "text": "doing it you can use those scripts the",
    "start": "1603460",
    "end": "1606460"
  },
  {
    "text": "server that I have is pretty basic it's",
    "start": "1606460",
    "end": "1608800"
  },
  {
    "text": "great a server it's one of the most",
    "start": "1608800",
    "end": "1610240"
  },
  {
    "text": "common examples of go server available",
    "start": "1610240",
    "end": "1612840"
  },
  {
    "text": "you could build your own server and",
    "start": "1612840",
    "end": "1615360"
  },
  {
    "text": "replace that and it'll still work the",
    "start": "1615360",
    "end": "1617980"
  },
  {
    "text": "same you could try it with more",
    "start": "1617980",
    "end": "1620530"
  },
  {
    "text": "complicated setup as I mentioned before",
    "start": "1620530",
    "end": "1622750"
  },
  {
    "text": "the G RPC specific load balancing",
    "start": "1622750",
    "end": "1627630"
  },
  {
    "text": "presentation in the examples if you want",
    "start": "1627630",
    "end": "1630340"
  },
  {
    "text": "to take a look at it are present in the",
    "start": "1630340",
    "end": "1631840"
  },
  {
    "text": "second link given below and yeah you",
    "start": "1631840",
    "end": "1636610"
  },
  {
    "text": "could try those out too so that's all I",
    "start": "1636610",
    "end": "1639520"
  },
  {
    "text": "had today if you have any questions",
    "start": "1639520",
    "end": "1642070"
  },
  {
    "text": "around things that we have talked you",
    "start": "1642070",
    "end": "1644010"
  },
  {
    "text": "can ask them",
    "start": "1644010",
    "end": "1646990"
  },
  {
    "text": "[Applause]",
    "start": "1646990",
    "end": "1654230"
  },
  {
    "text": "hi question about long live connections",
    "start": "1654230",
    "end": "1656970"
  },
  {
    "text": "with dear PC so a load balancing works",
    "start": "1656970",
    "end": "1658980"
  },
  {
    "text": "well on the initial connection but if",
    "start": "1658980",
    "end": "1660720"
  },
  {
    "text": "you have a long lived how do you handle",
    "start": "1660720",
    "end": "1662130"
  },
  {
    "text": "rebalancing yeah so a long live",
    "start": "1662130",
    "end": "1665670"
  },
  {
    "text": "connections are definitely a problem",
    "start": "1665670",
    "end": "1666929"
  },
  {
    "text": "when you are thinking about capacity for",
    "start": "1666929",
    "end": "1669270"
  },
  {
    "text": "a particular server so for long link",
    "start": "1669270",
    "end": "1671640"
  },
  {
    "text": "connection unfortunately the most the",
    "start": "1671640",
    "end": "1674820"
  },
  {
    "text": "the biggest decision maker is going to",
    "start": "1674820",
    "end": "1678000"
  },
  {
    "text": "be the centralized load balancer because",
    "start": "1678000",
    "end": "1681150"
  },
  {
    "text": "the client cannot independently make a",
    "start": "1681150",
    "end": "1682410"
  },
  {
    "text": "decision in this particular case your",
    "start": "1682410",
    "end": "1684720"
  },
  {
    "text": "capacity cannot be derived based on your",
    "start": "1684720",
    "end": "1686490"
  },
  {
    "text": "RPC request but in essentially how much",
    "start": "1686490",
    "end": "1688470"
  },
  {
    "text": "you resources are utilized at your",
    "start": "1688470",
    "end": "1690600"
  },
  {
    "text": "server so if you can plug that into your",
    "start": "1690600",
    "end": "1692670"
  },
  {
    "text": "load balancer you could definitely send",
    "start": "1692670",
    "end": "1696170"
  },
  {
    "text": "you can definitely use that information",
    "start": "1696170",
    "end": "1698130"
  },
  {
    "text": "to set the load balancing weights in",
    "start": "1698130",
    "end": "1700740"
  },
  {
    "text": "your Exodus protocol to make sure the",
    "start": "1700740",
    "end": "1703620"
  },
  {
    "text": "next set of requests are coming from are",
    "start": "1703620",
    "end": "1706380"
  },
  {
    "text": "going to different servers so that's",
    "start": "1706380",
    "end": "1708510"
  },
  {
    "text": "definitely possible it's a little more",
    "start": "1708510",
    "end": "1710429"
  },
  {
    "text": "trickier than just single are pcs any",
    "start": "1710429",
    "end": "1715800"
  },
  {
    "text": "more questions",
    "start": "1715800",
    "end": "1718429"
  },
  {
    "text": "going once if I'm if I'm not seeing you",
    "start": "1723520",
    "end": "1727600"
  },
  {
    "text": "wave louder no okay",
    "start": "1727600",
    "end": "1732040"
  },
  {
    "text": "thank you very much then visual",
    "start": "1732040",
    "end": "1735750"
  }
]