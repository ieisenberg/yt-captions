[
  {
    "text": "okay okay welcome everyone and Welcome to our session we are very happy and excited to be here today and today we",
    "start": "400",
    "end": "7720"
  },
  {
    "text": "are going to talk about the world of Shadow vulnerabilities in AI so let's get",
    "start": "7720",
    "end": "14400"
  },
  {
    "text": "started now uh we'll start with an honest disclaimer that we work on a runtime security product but we did try",
    "start": "14400",
    "end": "20439"
  },
  {
    "text": "to uh keep it as objective as possible and our sole intention is to share everything that uh we learned over the",
    "start": "20439",
    "end": "26080"
  },
  {
    "text": "past few years with you guys so I'm a nice to meet you uh I'm a",
    "start": "26080",
    "end": "32320"
  },
  {
    "text": "city I'm a security researcher in the city office of oigo security I have around 10 years of experience in R&D I",
    "start": "32320",
    "end": "39360"
  },
  {
    "text": "focus these days more on security research but previously on AI",
    "start": "39360",
    "end": "44399"
  },
  {
    "text": "engineering and on my SP time I love mountaineering so if you're into climbing let me know afterwards and with",
    "start": "44399",
    "end": "50440"
  },
  {
    "text": "me is nitan my name is nitan I'm a security researcher also in Nigo and I",
    "start": "50440",
    "end": "56480"
  },
  {
    "text": "work on our amazing detection product and uh have experience of security research and",
    "start": "56480",
    "end": "62680"
  },
  {
    "text": "software development and also I really really love baking so H let's see what we have",
    "start": "62680",
    "end": "69840"
  },
  {
    "text": "B for you for today's session okay so um uh a little bit about",
    "start": "69840",
    "end": "77320"
  },
  {
    "text": "what's going to be covered first we'll dive into what are Shadow vulnerabilities and why they are here to stay because they're like a persistent",
    "start": "77320",
    "end": "84479"
  },
  {
    "text": "threat and they will keep happening and we'll understand why then we'll",
    "start": "84479",
    "end": "90119"
  },
  {
    "text": "understand why they're in particular very common in Ai and we'll dive into some real world examples of shadow",
    "start": "90119",
    "end": "96600"
  },
  {
    "text": "vesties that led to actual attacks that took place and finally we'll understand",
    "start": "96600",
    "end": "102240"
  },
  {
    "text": "how we can protect ourselves from them because they are Shadow vulnerabilities and they are invisible and we will have",
    "start": "102240",
    "end": "108399"
  },
  {
    "text": "time for questions so uh please write them down if you have any let's go okay so we will start with what are Shadow",
    "start": "108399",
    "end": "115600"
  },
  {
    "text": "vulnerabilities and we will explain why do they exist so uh Shadow",
    "start": "115600",
    "end": "121799"
  },
  {
    "text": "vulnerabilities is a pattern it's it's a pattern we found in many open source libraries many popular ones and those",
    "start": "121799",
    "end": "128800"
  },
  {
    "text": "are vulnerabilities that just don't have a CV assigned or their CV is just",
    "start": "128800",
    "end": "134040"
  },
  {
    "text": "disputed and just like the famous metaphor of a tree fing in the forest and no one knows H so it's not the exact",
    "start": "134040",
    "end": "141720"
  },
  {
    "text": "case here because someone does know about them those are the maintainers of the library who usually aware to those",
    "start": "141720",
    "end": "148440"
  },
  {
    "text": "security pitfalls and they just mark them as a no fix and just pass the",
    "start": "148440",
    "end": "153760"
  },
  {
    "text": "responsibility to the libraries users they said it's your responsibility to use it right and it's part of the",
    "start": "153760",
    "end": "160000"
  },
  {
    "text": "intended behavior of the library so those actually make the libraries vulnerable by",
    "start": "160000",
    "end": "166000"
  },
  {
    "text": "Design we will also touch a specific type of Shadow vulnerabilities we call a silent misconfigurations which actually",
    "start": "166000",
    "end": "172879"
  },
  {
    "text": "means just configured the way the library was configured in a way that's exposed the users to attacks so we will",
    "start": "172879",
    "end": "180360"
  },
  {
    "text": "see examples of it and the funny thing about Shadow vulnerabilities is that",
    "start": "180360",
    "end": "186040"
  },
  {
    "text": "they actually usually in the documentations of the libraries um but",
    "start": "186040",
    "end": "191400"
  },
  {
    "text": "most of us including me just don't read the documentations before starting to use the library so here is where the",
    "start": "191400",
    "end": "198840"
  },
  {
    "text": "problem starts okay so we brought here multiple examples of documentation warnings H",
    "start": "198840",
    "end": "206040"
  },
  {
    "text": "from the most popular open source libraries so here is what one of the pickle module saying pickle is insecure",
    "start": "206040",
    "end": "212280"
  },
  {
    "text": "and you shouldn't unpickle from untrusted source and another one from the nonp library saying this function",
    "start": "212280",
    "end": "219360"
  },
  {
    "text": "onp is just not secure can lead to arbitrary recode execution",
    "start": "219360",
    "end": "225439"
  },
  {
    "text": "and from the J function and pandas and many many many",
    "start": "225439",
    "end": "232400"
  },
  {
    "text": "more sorry so those warnings are there for a reason but we usually just ignore them",
    "start": "232400",
    "end": "240120"
  },
  {
    "text": "and actually we can't expect developers to just read all the documentations of libraries before starting to using them",
    "start": "240120",
    "end": "248200"
  },
  {
    "text": "um we we just can't expect them to fix CVS that are assigned um so those",
    "start": "248200",
    "end": "255040"
  },
  {
    "text": "warnings are just not enough now we want to dive into a",
    "start": "255040",
    "end": "260720"
  },
  {
    "text": "specific type of Shadow vulnerability just to understand idea H so I bet you",
    "start": "260720",
    "end": "266680"
  },
  {
    "text": "know snake yam so yam is a everywhere everything in kubernetes is a yaml and",
    "start": "266680",
    "end": "274120"
  },
  {
    "text": "snake Y is the go-to when you talk about Java when you want to param and",
    "start": "274120",
    "end": "280520"
  },
  {
    "text": "FES and it's very very popular one and if you uh read snake yam documentation",
    "start": "280520",
    "end": "287479"
  },
  {
    "text": "it just says snake yam allows you to construct any type of java object any",
    "start": "287479",
    "end": "292560"
  },
  {
    "text": "type yeah any type so apparently it does",
    "start": "292560",
    "end": "297639"
  },
  {
    "text": "H allow you to construct any type including this payload which actually",
    "start": "297639",
    "end": "303080"
  },
  {
    "text": "brings a remote code execution H so as you can see just downloads aous jar and",
    "start": "303080",
    "end": "310039"
  },
  {
    "text": "then executes it and this is done by the default",
    "start": "310039",
    "end": "315280"
  },
  {
    "text": "Constructor of snake yam so it's the default one the one that most most of us",
    "start": "315280",
    "end": "322759"
  },
  {
    "text": "use and the interesting part here is what do the maintainer of the snake yam library has to say about that",
    "start": "322759",
    "end": "331639"
  },
  {
    "text": "vulnerability so if you look into the documentation of snake yaml it says it all someone does try to um just report",
    "start": "332560",
    "end": "342160"
  },
  {
    "text": "this vulnerability to to the snake y maintainer but the maintainer just don't",
    "start": "342160",
    "end": "347840"
  },
  {
    "text": "refer this as a problem it just mark this vulnerability as a no fix and it",
    "start": "347840",
    "end": "353680"
  },
  {
    "text": "just recommends the users to use the safe Constructor instead of the default one but H it just just leaves the option",
    "start": "353680",
    "end": "360639"
  },
  {
    "text": "of using the default One open so it turns out that for the Mainer",
    "start": "360639",
    "end": "368520"
  },
  {
    "text": "this remote code execution it's not a bug it's a feature and it's just a classic example of Shadow vulnerability",
    "start": "368520",
    "end": "376160"
  },
  {
    "text": "we will see more examples later on Amazing so let's understand um why",
    "start": "376160",
    "end": "384120"
  },
  {
    "text": "Shadow vulnerabilities are so common specifically in AI um in order to understand it let's divide the AI",
    "start": "384120",
    "end": "390080"
  },
  {
    "text": "landscape of security into two main pillars first there's the AI model and",
    "start": "390080",
    "end": "395160"
  },
  {
    "text": "everything around the model itself the inputs the outputs of the model and how we treat them in the application Level",
    "start": "395160",
    "end": "402120"
  },
  {
    "text": "and then we have the AI infrastructure which which is usually open source uh because it's a very fastly emerging",
    "start": "402120",
    "end": "408880"
  },
  {
    "text": "technology and fastly adopted so we must use open source uh but not every project",
    "start": "408880",
    "end": "414039"
  },
  {
    "text": "is a cncf project and they do include Shadow vulnerabilities um and both of them",
    "start": "414039",
    "end": "419919"
  },
  {
    "text": "might include sh abilities these are the two main pillars now why is it uh in particularly",
    "start": "419919",
    "end": "427319"
  },
  {
    "text": "common in AI first because as I said it's fastly adopted so there is a lot of new code that um includes bugs that's",
    "start": "427319",
    "end": "435080"
  },
  {
    "text": "simply a way to be discovered and this makes AI a prime",
    "start": "435080",
    "end": "440120"
  },
  {
    "text": "target for attackers because everything is in one place and um attackers love it",
    "start": "440120",
    "end": "446280"
  },
  {
    "text": "they love gold mines they love um trying to uh hack or successfully hack into a single asset and have everything they",
    "start": "446280",
    "end": "453560"
  },
  {
    "text": "want in a single place and AI is usually like that because AI um models are",
    "start": "453560",
    "end": "458960"
  },
  {
    "text": "intellectual property and they have a lot of connections to databases and knowledge",
    "start": "458960",
    "end": "464520"
  },
  {
    "text": "graphs and the people who develop the models or the code around the model are not security um Engineers they're data",
    "start": "464520",
    "end": "472080"
  },
  {
    "text": "scientists AI Engineers a researchers and they're simply not measured for the security of their code or for using the",
    "start": "472080",
    "end": "479520"
  },
  {
    "text": "tool the right way they're simply measured for velocity um and it's it makes a lot of",
    "start": "479520",
    "end": "485720"
  },
  {
    "text": "sense now maybe the most interesting part is that models are essentially code",
    "start": "485720",
    "end": "490800"
  },
  {
    "text": "and they have runtime and people tend to forget",
    "start": "490800",
    "end": "495280"
  },
  {
    "text": "it now let's dive into some real world examples of Shadow VOR bilities um all",
    "start": "496520",
    "end": "501680"
  },
  {
    "text": "of those actually led to attacks some of them are firstly discussed here in this session for the first time like cray but",
    "start": "501680",
    "end": "508199"
  },
  {
    "text": "we'll begin with py torch torch serve then we'll talk about tensor flow about",
    "start": "508199",
    "end": "513240"
  },
  {
    "text": "Shadow raid afterwards and uh finally if we'll have enough time we will mention Ginger too and things that happened in",
    "start": "513240",
    "end": "520000"
  },
  {
    "text": "the past year so let's get started with pie torch okay so I guess you know P",
    "start": "520000",
    "end": "525640"
  },
  {
    "text": "torch torch serve if you worked with py torch model it's a tool for allowing",
    "start": "525640",
    "end": "531080"
  },
  {
    "text": "users just to serve py torch model in production and it's actually the default",
    "start": "531080",
    "end": "536200"
  },
  {
    "text": "way to do it it's the recommended one the one in the official the site of the pie torch and it's very very popular one",
    "start": "536200",
    "end": "544320"
  },
  {
    "text": "it has one over 1 million doab pools and as you can see in the image many leading",
    "start": "544320",
    "end": "550920"
  },
  {
    "text": "companies leading projects adopted it including AWS neuron ml flow Cube flow",
    "start": "550920",
    "end": "556959"
  },
  {
    "text": "and many many more so it's very very popular now let's dive into the story of",
    "start": "556959",
    "end": "563560"
  },
  {
    "text": "Shadow van arabit is inside torch serve so shell torch is the name we gave to a",
    "start": "563560",
    "end": "569760"
  },
  {
    "text": "chain of vulnerabilities H we found in oligo that's together allow remote codes",
    "start": "569760",
    "end": "575000"
  },
  {
    "text": "ex execution model Deft and model poisoning now the last two are very",
    "start": "575000",
    "end": "580959"
  },
  {
    "text": "interesting because H model death just think of someone steals H CH gpts models",
    "start": "580959",
    "end": "588320"
  },
  {
    "text": "it's their entire IP so this can actually H bring companies down and when",
    "start": "588320",
    "end": "596160"
  },
  {
    "text": "you get to moded poisoning it just means altering the way the model works so it's",
    "start": "596160",
    "end": "601720"
  },
  {
    "text": "just changes it's all it's all decisions and it can be very",
    "start": "601720",
    "end": "607440"
  },
  {
    "text": "harmful so H all those H model seing and model poisoning might sound to you like",
    "start": "607440",
    "end": "614160"
  },
  {
    "text": "a doomsday scenario but we Pro that those can be executed with the default deployment of torch serve without",
    "start": "614160",
    "end": "620800"
  },
  {
    "text": "changing anything so here you can see the chain",
    "start": "620800",
    "end": "627880"
  },
  {
    "text": "of the vulnerabilities that's together create this attack and together we are going to focus two of them the shadow",
    "start": "627880",
    "end": "634480"
  },
  {
    "text": "vulnerabilities and just understand their part in the",
    "start": "634480",
    "end": "639360"
  },
  {
    "text": "story amazing so um let's discuss the first issue that enabled the infiltrating the pytorch servers in",
    "start": "639720",
    "end": "647040"
  },
  {
    "text": "first place and uh the first vulnerability which is a shadow vulnerability and it's around the",
    "start": "647040",
    "end": "652800"
  },
  {
    "text": "Management console so if you're a hacker if you're a developer both of them love management consoles because real world",
    "start": "652800",
    "end": "659320"
  },
  {
    "text": "applications are Dynamic and um they change all the time so management consoles um are very common that we love",
    "start": "659320",
    "end": "666600"
  },
  {
    "text": "them we use them uh but they are also a prime target for attacker so if you have a Management console be sure that it",
    "start": "666600",
    "end": "672600"
  },
  {
    "text": "will be abused or uh will be researched now interestingly the",
    "start": "672600",
    "end": "677920"
  },
  {
    "text": "documentation again of Pythor Tor serve claims that it is accessible only from",
    "start": "677920",
    "end": "683440"
  },
  {
    "text": "local lost by default so um it should run on Port 881 and be ible only from",
    "start": "683440",
    "end": "690000"
  },
  {
    "text": "local or LC um but we'll see about that now we went on and validated it and",
    "start": "690000",
    "end": "696760"
  },
  {
    "text": "we looked at the config properties um file of the default um Docker file uh in",
    "start": "696760",
    "end": "702800"
  },
  {
    "text": "the py tof project and we found that it was using 00000000 which is all the",
    "start": "702800",
    "end": "708279"
  },
  {
    "text": "network interfaces meaning that anyone with network access can do anything in",
    "start": "708279",
    "end": "714320"
  },
  {
    "text": "the management API now let's see what exactly can one do in the management API",
    "start": "714320",
    "end": "719639"
  },
  {
    "text": "and um you can see that the documentation is very misleading it's not local lost and uh if that was not",
    "start": "719639",
    "end": "726040"
  },
  {
    "text": "enough um we found this hardcoded value of a um Luc that is literally printed in",
    "start": "726040",
    "end": "734560"
  },
  {
    "text": "uh um in the docker uh startup process and you can see that it simply uses an",
    "start": "734560",
    "end": "740680"
  },
  {
    "text": "echo command without string formatting or anything so if you even change the even if you'll change the config",
    "start": "740680",
    "end": "745959"
  },
  {
    "text": "properties file it will just end up printing the same thing over and over again so um it's hardcoded and it's even",
    "start": "745959",
    "end": "754000"
  },
  {
    "text": "more confusing than uh just the documentation so the documentation and the docker logs will uh not uh be",
    "start": "754000",
    "end": "760880"
  },
  {
    "text": "correlative to the uh runtime and the things that actually happen now interestingly it allows us to",
    "start": "760880",
    "end": "767800"
  },
  {
    "text": "register new models which can um we can consider it as model poisoning because",
    "start": "767800",
    "end": "774000"
  },
  {
    "text": "we can alter the results of the model and affect end users using a single HTTP request that will see soon and it can be",
    "start": "774000",
    "end": "780519"
  },
  {
    "text": "done by anyone from anywhere you can scale the model you can try new versions and it makes a lot of sense because it's",
    "start": "780519",
    "end": "787160"
  },
  {
    "text": "widely used for AB testing trying new models um and basically it's an",
    "start": "787160",
    "end": "792760"
  },
  {
    "text": "essential part of Tor serve like any inference server has a management API even others but um the lack of",
    "start": "792760",
    "end": "799279"
  },
  {
    "text": "authorization and the the fact that it is binding on 00000000 um it's available to anyone on",
    "start": "799279",
    "end": "806800"
  },
  {
    "text": "the Internet or anyone with network access uh which is very alarming now let's understand how uh",
    "start": "806800",
    "end": "813360"
  },
  {
    "text": "it's all connected to the snake camel example from the beginning and this is the next stage and I'll pass it back to",
    "start": "813360",
    "end": "819079"
  },
  {
    "text": "you okay so remember the snake yamel issue so apparently also torch serve",
    "start": "819079",
    "end": "824120"
  },
  {
    "text": "uses a snake yl we found it in the in the S source code so this function is",
    "start": "824120",
    "end": "829680"
  },
  {
    "text": "taken from their code the R spec file you can see it just create a yamed",
    "start": "829680",
    "end": "835040"
  },
  {
    "text": "object then uses it to load a yamed file very simple but Unfortunately they used",
    "start": "835040",
    "end": "840680"
  },
  {
    "text": "here the default Constructor which is vulnerable to remote code execution like we said and in torch serve the read speec",
    "start": "840680",
    "end": "849800"
  },
  {
    "text": "file is just part of the flow that registers a new model so the yam file",
    "start": "849800",
    "end": "856440"
  },
  {
    "text": "describes a new model in torch serve and as you can see all we had to do in order",
    "start": "856440",
    "end": "862560"
  },
  {
    "text": "to exploit this we just created D file that uh describes a new model and with",
    "start": "862560",
    "end": "869199"
  },
  {
    "text": "just changed the second line we inserted there the payload that just downloads a",
    "start": "869199",
    "end": "874800"
  },
  {
    "text": "remote jar and executes it a malicious one and that's why we got a remote code",
    "start": "874800",
    "end": "881600"
  },
  {
    "text": "execution in every torch serve deployment and like we said before torch",
    "start": "881600",
    "end": "886720"
  },
  {
    "text": "serve is not like a simple web server it's a the core server that H holds all",
    "start": "886720",
    "end": "893079"
  },
  {
    "text": "the AI models of a company so it's very very harmful and just to sum up the Tor surf",
    "start": "893079",
    "end": "900040"
  },
  {
    "text": "story we have nothing to do with zero days getting published all the time but those two issues the misconfiguration",
    "start": "900040",
    "end": "907600"
  },
  {
    "text": "and the snake yam issue we're known to the maintainers and they just could have been fixed before we use",
    "start": "907600",
    "end": "916040"
  },
  {
    "text": "them amazing so uh before diving into tentor flow I just wanted to emphasize",
    "start": "916120",
    "end": "921759"
  },
  {
    "text": "um that to serve is the default deployment uh server of pytorch and in",
    "start": "921759",
    "end": "928440"
  },
  {
    "text": "our research we found thousands of instances among them are very big organizations and companies and it's all",
    "start": "928440",
    "end": "935399"
  },
  {
    "text": "happened because of two Shadow vulnerabilities and Silent B configurations so they are common and",
    "start": "935399",
    "end": "941319"
  },
  {
    "text": "they can happen even to the largest organizations including meta because we are all humans and uh it's open source",
    "start": "941319",
    "end": "947440"
  },
  {
    "text": "so you cannot keep track of all the changes that all the maintainers do through time and not all the maintainers",
    "start": "947440",
    "end": "953000"
  },
  {
    "text": "have the entire context of the uh project so some of them might not know uh one thing uh and others might um so",
    "start": "953000",
    "end": "962360"
  },
  {
    "text": "it will happen and it will keep happening in the largest projects all the time now let's go to tensor flow we",
    "start": "962360",
    "end": "968440"
  },
  {
    "text": "we're done with the pie torch which is the largest deing framework now let's talk about the second biggest um which",
    "start": "968440",
    "end": "974480"
  },
  {
    "text": "is tensor flow and kasas in in specifically is a part of tensor flow",
    "start": "974480",
    "end": "981079"
  },
  {
    "text": "it's integrated in tensor flows API and it's a legacy AI framework not really Legacy but older than tensorflow and",
    "start": "981079",
    "end": "988120"
  },
  {
    "text": "people love it and uh it is used uh to this day and they keep maintaining it",
    "start": "988120",
    "end": "993199"
  },
  {
    "text": "and if you look on the figure below of a neural network you usually think of a",
    "start": "993199",
    "end": "998959"
  },
  {
    "text": "mathematical computation and you don't expect it to have runtime right you look at this figure you don't expect it to",
    "start": "998959",
    "end": "1005480"
  },
  {
    "text": "have code or python code um but that's actually not",
    "start": "1005480",
    "end": "1010920"
  },
  {
    "text": "true tensor flow says that loud that models are code models are programs and",
    "start": "1010920",
    "end": "1016639"
  },
  {
    "text": "evaluating models from un trusted source is literally equivalent to running code from untrusted Source even if you use",
    "start": "1016639",
    "end": "1023399"
  },
  {
    "text": "the save formats like saved model uh you have the chance of exploitation on the serialization and the serialization",
    "start": "1023399",
    "end": "1030160"
  },
  {
    "text": "attacks keep happening to this day everywhere like we've seen in snake caml um so they say it uh at the first line",
    "start": "1030160",
    "end": "1037360"
  },
  {
    "text": "of their security documentation which is aome by the way and this is also simply not enough",
    "start": "1037360",
    "end": "1043918"
  },
  {
    "text": "and we'll see why uh in a bit but people don't read the security documentation uh",
    "start": "1043919",
    "end": "1048960"
  },
  {
    "text": "even like me I I do it because I try to research and find uh Shadow vulnerability that scale but U you",
    "start": "1048960",
    "end": "1055280"
  },
  {
    "text": "cannot expect all the users of tensor flow to be aware of that uh especially because they lack security",
    "start": "1055280",
    "end": "1061679"
  },
  {
    "text": "orientation now let's talk about the specific layer in kasas uh which is under under tf. k. layers which is a",
    "start": "1061679",
    "end": "1069080"
  },
  {
    "text": "Lambda layer um and if you know Lambda from python it can execute arbitary python",
    "start": "1069080",
    "end": "1074320"
  },
  {
    "text": "code now if you look on the at the Lambda layer implement",
    "start": "1074320",
    "end": "1079559"
  },
  {
    "text": "when saving it to dis or loading it from dis so it uses the Marshall module in Python it's a building modu for",
    "start": "1079559",
    "end": "1086000"
  },
  {
    "text": "serializing python bite code to dis and the serializing back to python bite code",
    "start": "1086000",
    "end": "1091320"
  },
  {
    "text": "uh which can just be evaluated elsewhere and this way people um and AI practitioners could Define ai um",
    "start": "1091320",
    "end": "1098400"
  },
  {
    "text": "functions that are literally in Python instead of the supporter supported layers of caras and Marshall is not",
    "start": "1098400",
    "end": "1105200"
  },
  {
    "text": "considered safe and they even say it in their documentation um but tens oflow did their best and they tried to tell",
    "start": "1105200",
    "end": "1111039"
  },
  {
    "text": "users models can run code so be aware of that and they really um we have nothing",
    "start": "1111039",
    "end": "1116280"
  },
  {
    "text": "to say about it it's out there H everybody know everybody knows about it and uh that's it basically now let's see",
    "start": "1116280",
    "end": "1123400"
  },
  {
    "text": "how it can be exploited and abused okay so I guess you know that AI",
    "start": "1123400",
    "end": "1128600"
  },
  {
    "text": "models can be saved to files just to share with other people or saving the",
    "start": "1128600",
    "end": "1134120"
  },
  {
    "text": "current state of a model just like a snapshot and in caras they use H",
    "start": "1134120",
    "end": "1139320"
  },
  {
    "text": "multiple formats and one of them is the hdf five format H5",
    "start": "1139320",
    "end": "1145000"
  },
  {
    "text": "extension which is a legacy one and as you can see you can just save uh the",
    "start": "1145000",
    "end": "1150360"
  },
  {
    "text": "model uh using the save function and then load it using the load model function so it's very simple H the",
    "start": "1150360",
    "end": "1157640"
  },
  {
    "text": "interesting part here is that as part of its flow the load model function when you give it a model that contains a",
    "start": "1157640",
    "end": "1164960"
  },
  {
    "text": "Lambda ler that we saw before just unmar sh itat which like we said is unsafe so",
    "start": "1164960",
    "end": "1173080"
  },
  {
    "text": "that's got us a sying so what we did here is just to",
    "start": "1173080",
    "end": "1178960"
  },
  {
    "text": "create a new model and just edit a Lambda layer which contains this piece",
    "start": "1178960",
    "end": "1184440"
  },
  {
    "text": "of code here is just a print command just print a message and then we saved",
    "start": "1184440",
    "end": "1191600"
  },
  {
    "text": "it using the model do save function to H5 checkpoint export H5 checkpoint and",
    "start": "1191600",
    "end": "1199360"
  },
  {
    "text": "then all we had to do as an attackers is just to pass this malicious model to",
    "start": "1199360",
    "end": "1205320"
  },
  {
    "text": "targets and when it get loaded the code is executed so do we have here another",
    "start": "1205320",
    "end": "1213120"
  },
  {
    "text": "remote code execution with no cve let's see so we have a good news H after two",
    "start": "1213120",
    "end": "1220960"
  },
  {
    "text": "years uh this issue exists K finally had a CV assigned to this issue and they",
    "start": "1220960",
    "end": "1227919"
  },
  {
    "text": "added this safe mode argument as you can see it's a true by",
    "start": "1227919",
    "end": "1233120"
  },
  {
    "text": "default and it's just used to prevent this this attack and they say h it just",
    "start": "1233120",
    "end": "1240000"
  },
  {
    "text": "reev prevents this arbitrary code execution so we really out this issue is",
    "start": "1240000",
    "end": "1245640"
  },
  {
    "text": "not relevant anymore we're about to remove it from the session but",
    "start": "1245640",
    "end": "1251280"
  },
  {
    "text": "then we read this line and as you can see they just say here loudly H this",
    "start": "1251280",
    "end": "1257440"
  },
  {
    "text": "check of the safe mod argument just don't happen when you talk about H5 checkpoints so it just ignored and we",
    "start": "1257440",
    "end": "1266240"
  },
  {
    "text": "actually got here a kind of a downgrade attack because all an attacker can do is",
    "start": "1266240",
    "end": "1271600"
  },
  {
    "text": "just take the old caras version create the H5 checkpoint and then just pass it",
    "start": "1271600",
    "end": "1278120"
  },
  {
    "text": "to the Target and even if the target uses the most the newest version of kenor flow the code is still going to be",
    "start": "1278120",
    "end": "1285720"
  },
  {
    "text": "executed because this argument is just Ed so to validate this we just executed",
    "start": "1285720",
    "end": "1293159"
  },
  {
    "text": "our old H5 checkpoint using the most the newest versions of Kens oflow as you can",
    "start": "1293159",
    "end": "1300200"
  },
  {
    "text": "see and you will see in a moment the code just got executed",
    "start": "1300200",
    "end": "1306000"
  },
  {
    "text": "again so here is the loading and the message was printed so",
    "start": "1306000",
    "end": "1311799"
  },
  {
    "text": "it got executed just like before so I guess the carot users with just h had to",
    "start": "1311799",
    "end": "1319080"
  },
  {
    "text": "get to wait to another fixed to be through the safe from remote code execution now let's talk a little bit",
    "start": "1319080",
    "end": "1325799"
  },
  {
    "text": "about the impact we found many popular open source tools that are vulnerable to this remote code execution one of them",
    "start": "1325799",
    "end": "1332919"
  },
  {
    "text": "is tfly converter it's an op open source tool to just convert model to TF light",
    "start": "1332919",
    "end": "1338640"
  },
  {
    "text": "format and when we got it the H5 checkpoint the code was just executed by",
    "start": "1338640",
    "end": "1345520"
  },
  {
    "text": "the way I have a typo here in the T of flow output file tens of flow with OE but it still works so I don't",
    "start": "1345520",
    "end": "1352720"
  },
  {
    "text": "care okay and another one which is a very popular one is a Pache beam and in",
    "start": "1352720",
    "end": "1358919"
  },
  {
    "text": "their documentation they also they say out loudly they use H5 checkpoints as you can see so we just used the default",
    "start": "1358919",
    "end": "1365880"
  },
  {
    "text": "commands from the documentation and again the code was executed so those are just two examples",
    "start": "1365880",
    "end": "1373679"
  },
  {
    "text": "of uh how this uh remote code execution with has have no CV e in care tensor",
    "start": "1373679",
    "end": "1380320"
  },
  {
    "text": "flow affects the most popular open source tools in the industry and just a",
    "start": "1380320",
    "end": "1386240"
  },
  {
    "text": "reminder you won't have any cve not in a kasas Apache beam or a t light converter",
    "start": "1386240",
    "end": "1392960"
  },
  {
    "text": "all of those are just vulnerable by Design yeah now before talking about my",
    "start": "1392960",
    "end": "1398640"
  },
  {
    "text": "favorite part which is a shadow Ray that I've personally worked on so I just want to emphasize that what we've seen now is",
    "start": "1398640",
    "end": "1405240"
  },
  {
    "text": "I consider it personally a zero day vulnerability because it's a bypass of a cve that was recently applied and",
    "start": "1405240",
    "end": "1411120"
  },
  {
    "text": "published in April and it's also the maintainer choice to support the Legacy format because they want users to be",
    "start": "1411120",
    "end": "1418039"
  },
  {
    "text": "able to use the the open source Steel in the way they they were used um but it's silent and this is what I want you to",
    "start": "1418039",
    "end": "1424520"
  },
  {
    "text": "remember you will not see uh anything about this kind of attack or the possibility of the attack happening uh",
    "start": "1424520",
    "end": "1431120"
  },
  {
    "text": "in any um Tool uh out there so now let's talk about Shadow Ray now before diving",
    "start": "1431120",
    "end": "1437840"
  },
  {
    "text": "into Ray which is amazing and I love it um I want you to understand the scope of the attack Shadow Ray was the first",
    "start": "1437840",
    "end": "1443640"
  },
  {
    "text": "attack on AI infrastructure the targeted AI workloads in the wild H it was discovered by us by oigo and um the",
    "start": "1443640",
    "end": "1451039"
  },
  {
    "text": "impact was tremendous it was even on Forbes exclusively and we'll see it soon but uh the amazing part here is that a",
    "start": "1451039",
    "end": "1458080"
  },
  {
    "text": "single Shadow vulnerability led to the largest and first attack ever recording on AI infrastructure and we proved here",
    "start": "1458080",
    "end": "1465200"
  },
  {
    "text": "that AI infrastructure is targeted and not tically but it is being exploited in",
    "start": "1465200",
    "end": "1470600"
  },
  {
    "text": "the wild for at least one year um so uh it is amazing a very interesting story I",
    "start": "1470600",
    "end": "1475799"
  },
  {
    "text": "wish I had more time to cover everything but we have some more material online I can do 40 minutes just on Ray I think um",
    "start": "1475799",
    "end": "1483760"
  },
  {
    "text": "but uh okay let's understand um what is Ray Ray is essentially like kubernetes",
    "start": "1483760",
    "end": "1489679"
  },
  {
    "text": "for AI it's a generic job Runner to scale layer workloads for training inference purposes or data processing",
    "start": "1489679",
    "end": "1495960"
  },
  {
    "text": "pipelines and some of you might be thinking of it as a replacement for multiprocessing model in Python so it's",
    "start": "1495960",
    "end": "1502600"
  },
  {
    "text": "very convenient it changed the way that I personally work with uh Python and multiprocessing and changed my mindset",
    "start": "1502600",
    "end": "1508520"
  },
  {
    "text": "and not just me you can see that it is used by the largest organizations out there including open AI which is my",
    "start": "1508520",
    "end": "1514600"
  },
  {
    "text": "favorite testimonial I think uh they say out loud um that we use Ray to train",
    "start": "1514600",
    "end": "1520640"
  },
  {
    "text": "Chad GPT and our largest model to this day and um I think there I I think it",
    "start": "1520640",
    "end": "1526600"
  },
  {
    "text": "says it all right it's literally everywhere used by the largest companies to scale AI Now The Story begins in late 2023",
    "start": "1526600",
    "end": "1534559"
  },
  {
    "text": "when five unique vulnerabilities were reported by any scale um published through a Blog blog post um with five",
    "start": "1534559",
    "end": "1542440"
  },
  {
    "text": "cves and one of the cves was disputed which is the most interesting one and",
    "start": "1542440",
    "end": "1547679"
  },
  {
    "text": "this CV talks about the rest API of the jobs uh dashboard um which is um lacking",
    "start": "1547679",
    "end": "1555360"
  },
  {
    "text": "authorization and as we said before um attackers search for these disputed vulnerabilities and this is a gold mine",
    "start": "1555360",
    "end": "1562240"
  },
  {
    "text": "to them and when we saw it we um wanted to validate and understand what is the impact that do anyone already exploiting",
    "start": "1562240",
    "end": "1569480"
  },
  {
    "text": "it or not and what we did was uh literally as you can see uh in the",
    "start": "1569480",
    "end": "1574600"
  },
  {
    "text": "figure below it's a ray dashboard that luckily for us includes also the jobs history so we could threaten the",
    "start": "1574600",
    "end": "1580480"
  },
  {
    "text": "attackers and understand everything they did but these are real commands that attackers ran among them are are the top",
    "start": "1580480",
    "end": "1587159"
  },
  {
    "text": "line which is a w get command I don't know if you can see the font or not but it's a WG that is piped to A bash um",
    "start": "1587159",
    "end": "1594520"
  },
  {
    "text": "command uh which downloads um just like a privileg escalation",
    "start": "1594520",
    "end": "1600080"
  },
  {
    "text": "payload and uh gaining persistence on the machine using pseudo and and so on",
    "start": "1600080",
    "end": "1605919"
  },
  {
    "text": "so um let's understand why the vulnerability was disputed what is the vulnerability and so on so not that the",
    "start": "1605919",
    "end": "1613880"
  },
  {
    "text": "vendor's position in this case is that Ray is not in intended uh to use outside",
    "start": "1613880",
    "end": "1618960"
  },
  {
    "text": "of a strictly controlled uh uh environment which makes a lot of sense because like kubernetes Ray cannot",
    "start": "1618960",
    "end": "1625080"
  },
  {
    "text": "enforce each and every application or approve it in advance or create a policy for each and every application because",
    "start": "1625080",
    "end": "1631559"
  },
  {
    "text": "it has too many use cases and everybody uses it differently you cannot just add",
    "start": "1631559",
    "end": "1636799"
  },
  {
    "text": "authorization just like that or you cannot um restrict it and they just",
    "start": "1636799",
    "end": "1642039"
  },
  {
    "text": "count on the users which makes a lot of sense by the way I completely understand them and their security team isaz we",
    "start": "1642039",
    "end": "1648679"
  },
  {
    "text": "closely with them um so we understood their position that it's an essential part of Ray and Ray's so intention is to",
    "start": "1648679",
    "end": "1656279"
  },
  {
    "text": "run arbitrary jobs and arbitrary code of course most of the time for some of us it's python but they don't limit it only",
    "start": "1656279",
    "end": "1662880"
  },
  {
    "text": "to python now um what's the interesting part of Ray is that the default",
    "start": "1662880",
    "end": "1668880"
  },
  {
    "text": "deployment uses 00000000 um which exposes the assets to the internet as we said before if you",
    "start": "1668880",
    "end": "1675000"
  },
  {
    "text": "lack security groups or firewalls on top of that now I want you to understand what data was found on the compromis",
    "start": "1675000",
    "end": "1681840"
  },
  {
    "text": "servers and I'm talking about thousands of clusters uh each cluster is an IP address that behind uh this IP address",
    "start": "1681840",
    "end": "1689000"
  },
  {
    "text": "you can see thousands of gpus sometimes uh just a few hundreds but pricey gpus",
    "start": "1689000",
    "end": "1695279"
  },
  {
    "text": "pricey machines that made uh the attackers very very happy and we'll see why so first you uh they hacked into the",
    "start": "1695279",
    "end": "1703600"
  },
  {
    "text": "AI workloads um and got production DB credentials um and got passwords so",
    "start": "1703600",
    "end": "1708880"
  },
  {
    "text": "these are all real outputs uh that the attackers put hands on and uh they were in the job history we found some private",
    "start": "1708880",
    "end": "1716240"
  },
  {
    "text": "private SSH keys that made them uh easy on um just walking between servers and",
    "start": "1716240",
    "end": "1722919"
  },
  {
    "text": "sshing and so on and open AI I personally uh love them and of course we",
    "start": "1722919",
    "end": "1729120"
  },
  {
    "text": "did report them through a designated bu Bounty form on Google but sadly I did not get any Bounty so need someone else",
    "start": "1729120",
    "end": "1735360"
  },
  {
    "text": "to sponsor my ever Everest Expedition but uh uh besides open AI tokens we see",
    "start": "1735360",
    "end": "1741159"
  },
  {
    "text": "uh we saw and found hugging face tokens stripe tokens don't ask me why stripe was on an AI uh stripe tokens were on an",
    "start": "1741159",
    "end": "1749279"
  },
  {
    "text": "AI application and I I'm sure it made the attackers happy and if that was not",
    "start": "1749279",
    "end": "1754679"
  },
  {
    "text": "enough you can see complete takeover because uh Ray has high privileges um",
    "start": "1754679",
    "end": "1761240"
  },
  {
    "text": "and um it's just by Design so we could do anything uh they want the attackers on the uh compromise machines",
    "start": "1761240",
    "end": "1769279"
  },
  {
    "text": "now I don't have time for the threat hunting but it was really fun um as you can see we have some encrypted payloads",
    "start": "1769279",
    "end": "1774840"
  },
  {
    "text": "and connections and we actually saw that several crypto miners um competed over",
    "start": "1774840",
    "end": "1780240"
  },
  {
    "text": "the same resources pricey gpus which is very very funny they started PE killing each other and killing each other uh",
    "start": "1780240",
    "end": "1786519"
  },
  {
    "text": "upon startup and they literally competed over the compromised assets and um I",
    "start": "1786519",
    "end": "1792720"
  },
  {
    "text": "think the uh the the top uh moment was the publication on Forbes exclusively",
    "start": "1792720",
    "end": "1798559"
  },
  {
    "text": "uh which made a lot of Buzz and just to summarize everything so far it was the",
    "start": "1798559",
    "end": "1804320"
  },
  {
    "text": "first attack on a infrastructure um and it led to thousands of organizations",
    "start": "1804320",
    "end": "1809840"
  },
  {
    "text": "getting compromised and a lot of compute for attackers that was leveraged and um",
    "start": "1809840",
    "end": "1815279"
  },
  {
    "text": "and that's it basically we can read about it more online I wish had more time now um let's talk quickly about Ginger okay so I will do it very quickly",
    "start": "1815279",
    "end": "1823200"
  },
  {
    "text": "H so you might know Ginger Ginger 2 it's a python library for a template rendering and it's very known to be",
    "start": "1823200",
    "end": "1830360"
  },
  {
    "text": "vulnerable by Design to something called the template injection uh which can lead",
    "start": "1830360",
    "end": "1835679"
  },
  {
    "text": "to remote code execution so here is a classic payload and this is a very not a",
    "start": "1835679",
    "end": "1841200"
  },
  {
    "text": "new issue actually the first publishment we found of this issue was over there in",
    "start": "1841200",
    "end": "1847320"
  },
  {
    "text": "2015 which is almost a decade ago and what is a connection to AI Ginger is not",
    "start": "1847320",
    "end": "1854240"
  },
  {
    "text": "an AI library but H in the last few months h two very critical",
    "start": "1854240",
    "end": "1859480"
  },
  {
    "text": "vulnerabilities we found in two very popular AI libraries Lama CPP and light",
    "start": "1859480",
    "end": "1865519"
  },
  {
    "text": "llm and one of them was also mentioned as Lama drama and those are all of those",
    "start": "1865519",
    "end": "1874320"
  },
  {
    "text": "drama could have been prevented because those are just a direct result of this template injection in Ginger 2 which",
    "start": "1874320",
    "end": "1881080"
  },
  {
    "text": "like we said is just exists for a more of a more of a decade so it's it's",
    "start": "1881080",
    "end": "1888080"
  },
  {
    "text": "pretty amazing now let's talk about how to protect yourselves from those Shadow",
    "start": "1888080",
    "end": "1895039"
  },
  {
    "text": "vulnerabilities okay so the first point is that we believe that shadow vulnerabilities need to be called out we",
    "start": "1895039",
    "end": "1901000"
  },
  {
    "text": "should keep a maintainers fix them and we should make developers aware of them",
    "start": "1901000",
    "end": "1906880"
  },
  {
    "text": "and it's a community effort just like that and we believe that they are just",
    "start": "1906880",
    "end": "1914039"
  },
  {
    "text": "here to stay and that we they will always exist so as long as they are here",
    "start": "1914039",
    "end": "1919320"
  },
  {
    "text": "we believe that a runtime solution is needed for detecting those Shadow vulnerabilities why runtime because",
    "start": "1919320",
    "end": "1927000"
  },
  {
    "text": "those Shadow vulnerabilities like we said before have no cves so all of those scanning tools running in build time in",
    "start": "1927000",
    "end": "1934240"
  },
  {
    "text": "the left side are just not enough the the shadow vulnerabilities are just invisible to",
    "start": "1934240",
    "end": "1940519"
  },
  {
    "text": "them and we also wanted to introduce you with a concept we call Open Source Library sandboxing so in Allo we have a",
    "start": "1940519",
    "end": "1948360"
  },
  {
    "text": "ebpf technology we developed that's a monitor applications everything that's",
    "start": "1948360",
    "end": "1953960"
  },
  {
    "text": "happening in runtime and using this technology we collect data of the",
    "start": "1953960",
    "end": "1960399"
  },
  {
    "text": "behavior of Open Source libraries and then we just create profiles of the Baseline of the behavior of the",
    "start": "1960399",
    "end": "1967760"
  },
  {
    "text": "libraries and then we are able to detect deviations from that profiles so the",
    "start": "1967760",
    "end": "1973399"
  },
  {
    "text": "best thing about this uh approach is that h no CV is required because we just",
    "start": "1973399",
    "end": "1979240"
  },
  {
    "text": "look at the behavior of the library and just like snake yl that's",
    "start": "1979240",
    "end": "1985279"
  },
  {
    "text": "don't supposed to run arbitrary code or some parel Library that's just not",
    "start": "1985279",
    "end": "1991440"
  },
  {
    "text": "supposed to open a network connection or the Caris Library just that's just don't",
    "start": "1991440",
    "end": "1996880"
  },
  {
    "text": "supposed to H create a child process so here is an example we executed here the",
    "start": "1996880",
    "end": "2003600"
  },
  {
    "text": "kasas exploit we saw before and as you can see the oo platform detect it",
    "start": "2003600",
    "end": "2009000"
  },
  {
    "text": "detected the deviation from the K's Library profile and you can also see the",
    "start": "2009000",
    "end": "2014159"
  },
  {
    "text": "python call stack uh so the load mod model function which leads to the Lambda",
    "start": "2014159",
    "end": "2019360"
  },
  {
    "text": "coding H which leads to the creation of the child process and it's just one",
    "start": "2019360",
    "end": "2025399"
  },
  {
    "text": "example of how we are able to detect such attacks without needing any",
    "start": "2025399",
    "end": "2031638"
  },
  {
    "text": "cve all right so let's quickly conclude everything we H talked about so far and we have time before like one one",
    "start": "2032480",
    "end": "2039519"
  },
  {
    "text": "question um we talked about why what are Shadow vulnerabilities why they're here to stay and we understood that they are",
    "start": "2039519",
    "end": "2045840"
  },
  {
    "text": "very common in particularly in AI because everything is so Dynamic and uh fastly emerging uh we understood uh that",
    "start": "2045840",
    "end": "2053320"
  },
  {
    "text": "there are attacks out there that already have happened because of Shadow vetes we gave you four real use cases uh among",
    "start": "2053320",
    "end": "2060280"
  },
  {
    "text": "them are py tray tensor flow and ginger and uh we have much more we didn't have",
    "start": "2060280",
    "end": "2066118"
  },
  {
    "text": "enough time to talk about everything we found but we managed to automate this process and scalar uh um scale our",
    "start": "2066119",
    "end": "2072638"
  },
  {
    "text": "method and we talked about it in other conferences in Defcon and so uh you can find it online if it interests you but",
    "start": "2072639",
    "end": "2079040"
  },
  {
    "text": "uh we really believe that the way to solve this issue is to create a community effort um and as a community",
    "start": "2079040",
    "end": "2085240"
  },
  {
    "text": "we need to um be able to detect Shadow V abilities call them out and let users know that they are impacted or at least",
    "start": "2085240",
    "end": "2092358"
  },
  {
    "text": "understand the risk before using the open source and that's it basically thank you very much for your time and we",
    "start": "2092359",
    "end": "2097839"
  },
  {
    "text": "have some uh time for question maybe one or",
    "start": "2097839",
    "end": "2102480"
  },
  {
    "text": "two yeah",
    "start": "2105000",
    "end": "2110160"
  },
  {
    "text": "yeah yeah so I think creating baselines is very important but uh the idea is",
    "start": "2116640",
    "end": "2121680"
  },
  {
    "text": "mostly be around the relation between the maintainers and the users so we need to find a way for uh maintainers to be",
    "start": "2121680",
    "end": "2129680"
  },
  {
    "text": "incentive to have incentive to uh prioritize the fix of those vulnerabilities and actually uh fix them",
    "start": "2129680",
    "end": "2136839"
  },
  {
    "text": "uh instead of saying that it's a default behavior and it is what it is and and that's it you know you need to",
    "start": "2136839",
    "end": "2142000"
  },
  {
    "text": "understand the variety of use cases and uh unless today today unless you find it exploited in the wild so they don't",
    "start": "2142000",
    "end": "2148040"
  },
  {
    "text": "really care about it if you look at the exit use case or and so on you have a single",
    "start": "2148040",
    "end": "2153680"
  },
  {
    "text": "maintainer that um because of um because it was only a single maintainer",
    "start": "2153680",
    "end": "2160000"
  },
  {
    "text": "it enabled so much power to for a single person uh which then um created another",
    "start": "2160000",
    "end": "2165760"
  },
  {
    "text": "attack like in the scale of log for Shell uh and in this this is a classic example of a logging library that opens",
    "start": "2165760",
    "end": "2172400"
  },
  {
    "text": "the network connection and it should not it should only file write files to disk right and the same can be uh said on",
    "start": "2172400",
    "end": "2179079"
  },
  {
    "text": "exit it's a compression library and our profile knows that it should only compress and uncompress data and it",
    "start": "2179079",
    "end": "2184920"
  },
  {
    "text": "should not run. system commands for example and does that answer a question yes",
    "start": "2184920",
    "end": "2191440"
  },
  {
    "text": "thank you very much okay I think uh we're done thank you very very much thank you",
    "start": "2191440",
    "end": "2200640"
  }
]