[
  {
    "text": "okay uh okay uh so let's can you hear me i got some noise",
    "start": "960",
    "end": "7040"
  },
  {
    "text": "here okay cool all right so we're gonna get started now and i'd like to thank everyone who's",
    "start": "7040",
    "end": "13040"
  },
  {
    "text": "joining us today so welcome to today's cnc webinar snp experience",
    "start": "13040",
    "end": "18640"
  },
  {
    "text": "report the multi-cloud summaries on k native so my name is danielle i'm working for",
    "start": "18640",
    "end": "24800"
  },
  {
    "text": "redhead as a technical marketing major but also i'm responsible csp investor",
    "start": "24800",
    "end": "30240"
  },
  {
    "text": "so luckily i will be modeling today's webinar so we like to welcome our awesome",
    "start": "30240",
    "end": "35760"
  },
  {
    "text": "presenter evan anderson software engineer and vmware and mark wong",
    "start": "35760",
    "end": "40879"
  },
  {
    "text": "a head of cloud engineering and snp global ratings there are a few a couple of things of",
    "start": "40879",
    "end": "46879"
  },
  {
    "text": "housekeeping item before we get started so during the webinar you are not able to talk as an",
    "start": "46879",
    "end": "52320"
  },
  {
    "text": "attendee so but there is a queen a box at the bottom of your screen so please feel free to drop",
    "start": "52320",
    "end": "58160"
  },
  {
    "text": "your question in there and we will get to as many as we can at the end",
    "start": "58160",
    "end": "63280"
  },
  {
    "text": "this is the official webinar of cncf so please and this is your subject to cnc",
    "start": "63280",
    "end": "69200"
  },
  {
    "text": "code to conduct so please do not add any anything of the chat or question box i will be",
    "start": "69200",
    "end": "76479"
  },
  {
    "text": "violation of the code of conduct so please be respectful for all of your fellow participants and presenters",
    "start": "76479",
    "end": "83119"
  },
  {
    "text": "please also note that the recording and slice that will be posted right today at the cncf webinar",
    "start": "83119",
    "end": "89119"
  },
  {
    "text": "page uh www.cnc.ioslash webinar you know with that all i will hand you",
    "start": "89119",
    "end": "96000"
  },
  {
    "text": "hand it over to even and mr take it away hi so as i was introduced um i'm evan",
    "start": "96000",
    "end": "104640"
  },
  {
    "text": "anderson from vmware and um i'm one of the toc members on the k-native project and",
    "start": "104640",
    "end": "111759"
  },
  {
    "text": "i've been working for the last couple years and we recently had an opportunity to work with mark",
    "start": "111759",
    "end": "117280"
  },
  {
    "text": "at um at s p global um on actually rolling out an",
    "start": "117280",
    "end": "123600"
  },
  {
    "text": "implementation of k-native and so i'm going to let mark introduce himself a little bit thank you daniel and evan good afternoon",
    "start": "123600",
    "end": "131280"
  },
  {
    "text": "good evening everyone so my name is mark wong i have the privilege to run",
    "start": "131280",
    "end": "136319"
  },
  {
    "text": "cloud engineering at s p global ratings so like evan introduced so we have a",
    "start": "136319",
    "end": "142160"
  },
  {
    "text": "current existing relationship with vmware and once we selected the technology of",
    "start": "142160",
    "end": "147280"
  },
  {
    "text": "k-native for our multi-cloud serverless implementation and we started working with evan and the",
    "start": "147280",
    "end": "152959"
  },
  {
    "text": "team it's been a great collaboration and you know our goal today is to just share our experience",
    "start": "152959",
    "end": "159280"
  },
  {
    "text": "on this journey and um you know the talk to me it sounds like it's almost like 100 level so i'll go",
    "start": "159280",
    "end": "166000"
  },
  {
    "text": "through some 100 level and then 200 level developer experience and evan's going to get down to the",
    "start": "166000",
    "end": "171360"
  },
  {
    "text": "nitty-gritty details the 300 level content so evan anything before we start",
    "start": "171360",
    "end": "178959"
  },
  {
    "text": "um oh i was just going to say that you know when we started this a couple years ago it was",
    "start": "178959",
    "end": "185599"
  },
  {
    "text": "you know kind of a dream that hey all the pieces were coming into place that you could actually run a serverless",
    "start": "185599",
    "end": "191920"
  },
  {
    "text": "solution on your own infrastructure without having to build all of the pieces yourself so you didn't",
    "start": "191920",
    "end": "197599"
  },
  {
    "text": "need to build your own scheduler kubernetes had one of those you didn't need to build your own http routing envoy had that",
    "start": "197599",
    "end": "203519"
  },
  {
    "text": "and so it's exciting to see um companies like s p actually taking that",
    "start": "203519",
    "end": "209440"
  },
  {
    "text": "last step of not just having the software but actually having a platform",
    "start": "209440",
    "end": "215360"
  },
  {
    "text": "that they can build and customize to their own needs and it's been great working with them to",
    "start": "215360",
    "end": "221920"
  },
  {
    "text": "be able to get that to happen and with that i'm going to let mark talk",
    "start": "221920",
    "end": "227920"
  },
  {
    "text": "a little bit about how things actually uh",
    "start": "227920",
    "end": "233040"
  },
  {
    "text": "you know how s p actually decided to do a serverless platform right so when you",
    "start": "233040",
    "end": "239680"
  },
  {
    "text": "think of serverless technology right some of the basic things come to mind one is you don't have to manage",
    "start": "239680",
    "end": "245120"
  },
  {
    "text": "infrastructure and the other is the speed to market right and cost is another you know because of",
    "start": "245120",
    "end": "252799"
  },
  {
    "text": "compute density right so you're not using machines you're using everything packed into",
    "start": "252799",
    "end": "257840"
  },
  {
    "text": "containers and even functions right so why do we go to a function as a service",
    "start": "257840",
    "end": "263360"
  },
  {
    "text": "to me the biggest benefit is we can ship software faster right so",
    "start": "263360",
    "end": "269600"
  },
  {
    "text": "i'll go through more of our background in terms of our technology portfolio but if we look at",
    "start": "269600",
    "end": "275680"
  },
  {
    "text": "the overall goal right so why do we want to adopt fast function as a serverless function as a",
    "start": "275680",
    "end": "282000"
  },
  {
    "text": "service or serverless technology right it's to ship our products faster so we want to move",
    "start": "282000",
    "end": "287199"
  },
  {
    "text": "from monthly quarterly releases to weekly or daily releases right so",
    "start": "287199",
    "end": "292639"
  },
  {
    "text": "release frequently so that's one of the benefits from serverless technology",
    "start": "292639",
    "end": "297680"
  },
  {
    "text": "which is that teams scrum teams can focus on the business logic and not worry",
    "start": "297680",
    "end": "304400"
  },
  {
    "text": "about infrastructure worry about coding standards worry about vulnerabilities a lot of",
    "start": "304400",
    "end": "310320"
  },
  {
    "text": "those will be taken care of i'll show a little bit more about that and then the other thing is",
    "start": "310320",
    "end": "315360"
  },
  {
    "text": "that they can own more of their staff right so they don't have to depend on this team or that team so the automation and",
    "start": "315360",
    "end": "321440"
  },
  {
    "text": "the pipeline would take care of a lot of that so they have true cicd experience right they can release code",
    "start": "321440",
    "end": "328160"
  },
  {
    "text": "as soon as they're ready to any environment they would like and the other benefit is that after we",
    "start": "328160",
    "end": "335039"
  },
  {
    "text": "break down the monolith and build more and more functions take out more key capabilities then we",
    "start": "335039",
    "end": "342720"
  },
  {
    "text": "end up retiring our legacy monolithic applications so less technology there to worry about",
    "start": "342720",
    "end": "348639"
  },
  {
    "text": "and one of the things in our journey that we found is that as we moved along you know k-native is a new technology",
    "start": "348639",
    "end": "355280"
  },
  {
    "text": "even kubernetes is a new technology for us so for us to have this global fads",
    "start": "355280",
    "end": "361280"
  },
  {
    "text": "initiative we really needed to transform our culture so one of the things we notice as we",
    "start": "361280",
    "end": "366720"
  },
  {
    "text": "moved along is that we partner with uh application developers because the subject matter",
    "start": "366720",
    "end": "372240"
  },
  {
    "text": "expertise for python4.net for angular and for other technologies resides with",
    "start": "372240",
    "end": "378000"
  },
  {
    "text": "application teams right so these we have a open kind of development open collaboration",
    "start": "378000",
    "end": "385039"
  },
  {
    "text": "model where the engineers can contribute to the platform i'll show you more detail about that and",
    "start": "385039",
    "end": "391520"
  },
  {
    "text": "then when they contribute they kind of unblock themselves as well it's almost like a kind of win-win",
    "start": "391520",
    "end": "397440"
  },
  {
    "text": "situation they're building shared features on the platform meanwhile they're unblocking themselves",
    "start": "397440",
    "end": "404240"
  },
  {
    "text": "and they're enabling their peers to do more on the platform",
    "start": "404240",
    "end": "409759"
  },
  {
    "text": "so you can go to the next slide okay so this is a background so 2020 one of our five",
    "start": "409840",
    "end": "416720"
  },
  {
    "text": "strategic initiatives is to be certified on as a service so if you look at our",
    "start": "416720",
    "end": "422880"
  },
  {
    "text": "portfolio two years ago where majority is on prem",
    "start": "422880",
    "end": "427919"
  },
  {
    "text": "and then last year over a period of nine months or eight months we migrated 100 percent to the cloud",
    "start": "427919",
    "end": "434880"
  },
  {
    "text": "that migration was kind of a learning experience and the culture change in itself if you think about our company right smp",
    "start": "434880",
    "end": "442960"
  },
  {
    "text": "is a financial trusted financial institution in fine in in the world right globally",
    "start": "442960",
    "end": "449759"
  },
  {
    "text": "so we've been around for 160 years and today we're moving at the speed of",
    "start": "449759",
    "end": "454960"
  },
  {
    "text": "fintech so last year 2019 by mid 2019 over a period of a month we",
    "start": "454960",
    "end": "463199"
  },
  {
    "text": "have migrated 100 to the cloud and today we're benefiting from that right with covet with remote",
    "start": "463199",
    "end": "470400"
  },
  {
    "text": "working we enjoy stability and freedom in the cloud right so what is our next",
    "start": "470400",
    "end": "476720"
  },
  {
    "text": "leap so the team gained a lot of confidence from this experience to move to the cloud and",
    "start": "476720",
    "end": "482479"
  },
  {
    "text": "just a little bit more background on that right so while we're doing the move migration mass migration to the cloud we",
    "start": "482479",
    "end": "489280"
  },
  {
    "text": "went through insourcing as well as agile transformation so there's a lot going on culturally",
    "start": "489280",
    "end": "495120"
  },
  {
    "text": "but with clear leadership and dedication of our teams as well as ingenuity from our engineers",
    "start": "495120",
    "end": "502639"
  },
  {
    "text": "so a lot of people don't know the cloud at that time right when we started the journey on the project there was just one and a half cloud engineers",
    "start": "502639",
    "end": "509360"
  },
  {
    "text": "i count myself as half the engineer so we slowly built up the team internally we didn't really get much",
    "start": "509360",
    "end": "514959"
  },
  {
    "text": "help from outside other than we partnered with vmware to use a vmc solution for some of the vm",
    "start": "514959",
    "end": "521760"
  },
  {
    "text": "workloads so we took so after that experience we gained a lot of confidence and then going to 2020 we said let's",
    "start": "521760",
    "end": "530000"
  },
  {
    "text": "take a leap and go all the way to function as a service so if we go to the next slide i'll show",
    "start": "530000",
    "end": "535440"
  },
  {
    "text": "you a little bit of that journey in terms of the road map right so",
    "start": "535440",
    "end": "541360"
  },
  {
    "text": "we did a market research on what are our options to go to function",
    "start": "541360",
    "end": "546640"
  },
  {
    "text": "this service lambda is the first one comes to mind right and then azure functions so we evaluated",
    "start": "546640",
    "end": "552480"
  },
  {
    "text": "those as well as other open source solutions besides k-nid and then we came up came to the",
    "start": "552480",
    "end": "558959"
  },
  {
    "text": "conclusion that k-native really gives us the cloud independence and the multi-cloud capability that we",
    "start": "558959",
    "end": "565519"
  },
  {
    "text": "want and there's a lot of smart engineers like evan that you know back up the active community",
    "start": "565519",
    "end": "571519"
  },
  {
    "text": "behind k native so towards the beginning of this year we started experimenting",
    "start": "571519",
    "end": "577839"
  },
  {
    "text": "k natives so if you look at the first swim lane so we experimented with k native and",
    "start": "577839",
    "end": "584560"
  },
  {
    "text": "then by end of q1 in partnership with evan and team we were able to release our first",
    "start": "584560",
    "end": "592080"
  },
  {
    "text": "version of function as a service platform and then we were able to release a handful of",
    "start": "592080",
    "end": "597920"
  },
  {
    "text": "applications to the cloud to to production and then the other uh the third",
    "start": "597920",
    "end": "604480"
  },
  {
    "text": "swim lane is really around adoption right so regarding that benefit we talked",
    "start": "604480",
    "end": "610240"
  },
  {
    "text": "about earlier that goal of shift shipping product faster right so to for us to",
    "start": "610240",
    "end": "615279"
  },
  {
    "text": "be able to ship product faster we need mass adoption so we came up with a concept of",
    "start": "615279",
    "end": "621360"
  },
  {
    "text": "certification right so bronze silver and gold so the certification really is to measure the",
    "start": "621360",
    "end": "627040"
  },
  {
    "text": "maturity of application teams so bronze is a goal for 2020",
    "start": "627040",
    "end": "632399"
  },
  {
    "text": "it's really to make sure teams know how to do function as a service using k-native",
    "start": "632399",
    "end": "637600"
  },
  {
    "text": "and then they understand how to scale up and scale down so we have certification meetings we",
    "start": "637600",
    "end": "643120"
  },
  {
    "text": "make sure the teams are certified and then they understand what is their roadmap how can they break capabilities",
    "start": "643120",
    "end": "649920"
  },
  {
    "text": "out of the monolith to put into serverless so if you think about it",
    "start": "649920",
    "end": "656160"
  },
  {
    "text": "silver really is to break out more high value capabilities out of the monolith and put",
    "start": "656160",
    "end": "662959"
  },
  {
    "text": "it on to k native right and then when we get to gold we will have a consolidated portfolio of",
    "start": "662959",
    "end": "669279"
  },
  {
    "text": "capabilities and we will also retire a bunch of duplications and monolithic applications",
    "start": "669279",
    "end": "675600"
  },
  {
    "text": "at that time when we reach gold will be completely on function of the service using k native",
    "start": "675600",
    "end": "682720"
  },
  {
    "text": "and let's go on to the next slide so this is kind of a release view",
    "start": "682720",
    "end": "689200"
  },
  {
    "text": "of the platform itself so we majority of the responsibility of my",
    "start": "689200",
    "end": "696640"
  },
  {
    "text": "team is to enable the application teams and strum teams to be able to onboard their use cases",
    "start": "696640",
    "end": "702079"
  },
  {
    "text": "like i talked about earlier we really opened it up we had nine work streams engineers from different areas or were",
    "start": "702079",
    "end": "708560"
  },
  {
    "text": "helping collaborating and moving this thing along so every month we'll have a platform release so mbp",
    "start": "708560",
    "end": "714720"
  },
  {
    "text": "one was that we have a base platform right so we have kubernetes we have k native we have istio we have",
    "start": "714720",
    "end": "722399"
  },
  {
    "text": "azure devops for ci cd and then we have a set of pilot applications",
    "start": "722399",
    "end": "727519"
  },
  {
    "text": "so that was able to go live and then we also defined this model to collaborate with engineers from different groups and",
    "start": "727519",
    "end": "734800"
  },
  {
    "text": "then fast forward to 2.0 so 2.0 was released in q2 at that time we had 24x7 support",
    "start": "734800",
    "end": "742399"
  },
  {
    "text": "and then we have introduced oidc as a standard for authentication we have logging",
    "start": "742399",
    "end": "748240"
  },
  {
    "text": "monitoring onboarding automation as well i'll show you some of that in the demo and we have ci cd uh pipeline automation",
    "start": "748240",
    "end": "755680"
  },
  {
    "text": "so at this time we open it up by 2.0 q2 we open it up for mass adoption and",
    "start": "755680",
    "end": "761120"
  },
  {
    "text": "we introduce the reference implementations i'll show you a little bit of that in the demo as well",
    "start": "761120",
    "end": "767040"
  },
  {
    "text": "and in q3 we are going through more maturity so now",
    "start": "767040",
    "end": "773120"
  },
  {
    "text": "we have k native function as a service running in dmz so we have external phasing applications that's using this",
    "start": "773120",
    "end": "779279"
  },
  {
    "text": "capability now and we have distributed tracing and we're using spot instance for our all of our clusters",
    "start": "779279",
    "end": "786720"
  },
  {
    "text": "and we also introduce containers right container as a service because not everything can go to k-native right",
    "start": "786720",
    "end": "793040"
  },
  {
    "text": "we have commercial off the shelf products that we don't manage the code for and we also",
    "start": "793040",
    "end": "798240"
  },
  {
    "text": "introduce container security for us to go to dmz we want to make sure our images our",
    "start": "798240",
    "end": "804160"
  },
  {
    "text": "runtime is secure we can go to the next slide",
    "start": "804160",
    "end": "810079"
  },
  {
    "text": "all right so some highlights on the features so we support currently these languages for our developers java.net",
    "start": "812560",
    "end": "819120"
  },
  {
    "text": "python and angular and then for eventing we support kafka as well as activemq and for security we have twist",
    "start": "819120",
    "end": "826959"
  },
  {
    "text": "lock we have open policy agent and fortify is for our static code analysis and then on",
    "start": "826959",
    "end": "833920"
  },
  {
    "text": "observability side we have logging so one of the things is",
    "start": "833920",
    "end": "839360"
  },
  {
    "text": "the developers for productivity right they don't have to worry about logging into anything right there's",
    "start": "839360",
    "end": "845120"
  },
  {
    "text": "obviously no machines they don't have to care about where the container runs they have full visibility with logging",
    "start": "845120",
    "end": "850959"
  },
  {
    "text": "and monitoring and we added distributed tracing as well",
    "start": "850959",
    "end": "856160"
  },
  {
    "text": "with the open telemetry and like i said we're using um spot instances i think one thing i want",
    "start": "856160",
    "end": "862639"
  },
  {
    "text": "to highlight here uh maybe in a later slide as we do blue-green cluster automation",
    "start": "862639",
    "end": "868800"
  },
  {
    "text": "so we'll go to the next slide and talk about that yeah so some of the major components",
    "start": "868800",
    "end": "874880"
  },
  {
    "text": "right is we're using eks currently in amazon and this technology is completely",
    "start": "874880",
    "end": "881120"
  },
  {
    "text": "portable on other cloud providers as well right we're currently using alibaba and",
    "start": "881120",
    "end": "887279"
  },
  {
    "text": "as well as we're going to start using azure so because it's built on kubernetes and because k native is built on kubernetes",
    "start": "887279",
    "end": "893839"
  },
  {
    "text": "all these will be portable as well and we're using a lot of automation right like i talked about",
    "start": "893839",
    "end": "900000"
  },
  {
    "text": "blue green so every month when we release we will build a whole new color cluster",
    "start": "900000",
    "end": "906000"
  },
  {
    "text": "right from dev all the way onward the reason why we do that is we want to make sure everything is automated and we want to",
    "start": "906000",
    "end": "913120"
  },
  {
    "text": "also make sure we respond to the changes in the base bay underlying k native and istio",
    "start": "913120",
    "end": "918560"
  },
  {
    "text": "features very quickly right because the technology is changing very quickly we want to be up up to date with the",
    "start": "918560",
    "end": "924399"
  },
  {
    "text": "underlying technology and yeah we can go to the next slide",
    "start": "924399",
    "end": "931120"
  },
  {
    "text": "yeah so this is a kind of a quick view for our developer experience so we",
    "start": "933680",
    "end": "940000"
  },
  {
    "text": "have local environment capabilities so if developer wants to set up local developer experience with building",
    "start": "940000",
    "end": "947360"
  },
  {
    "text": "the image locally and running the image locally they can do that and we also have pipeline with standards",
    "start": "947360",
    "end": "953360"
  },
  {
    "text": "built built in and automation built in as well so once they go through the pipeline let's say",
    "start": "953360",
    "end": "959040"
  },
  {
    "text": "they deploy the code to dev then immediately that is the image is shipped to",
    "start": "959040",
    "end": "964480"
  },
  {
    "text": "our artifactory image repository and then it's put into uh kubernetes",
    "start": "964480",
    "end": "970959"
  },
  {
    "text": "through k native and accesses through istio so why don't we jump to the demo so i'll",
    "start": "970959",
    "end": "977279"
  },
  {
    "text": "give you a little look at this let me share my screen",
    "start": "977279",
    "end": "984320"
  },
  {
    "text": "can you guys see my screen",
    "start": "986399",
    "end": "989600"
  },
  {
    "text": "yes all right so we want this to be as self-service as",
    "start": "992480",
    "end": "998800"
  },
  {
    "text": "possible right so this is a view of our documentation so we have a getting started guide that",
    "start": "998800",
    "end": "1005279"
  },
  {
    "text": "scrum teams can come in and use it to get onboarded help themselves with ci cd secret",
    "start": "1005279",
    "end": "1012399"
  },
  {
    "text": "manager and then we set up a meeting with them in 30 minutes they can get going",
    "start": "1012399",
    "end": "1018560"
  },
  {
    "text": "and we cut down our onboarding time from when we started the mvp one it took",
    "start": "1018560",
    "end": "1024558"
  },
  {
    "text": "like in a week for a team to onboard a function so now it takes about two hours",
    "start": "1024559",
    "end": "1030000"
  },
  {
    "text": "so i'll show you a little bit of that experience so part of it is not all two hours what was that not all two hours no no no",
    "start": "1030000",
    "end": "1037520"
  },
  {
    "text": "no i'll make it quick it's gonna be much less than two hours um",
    "start": "1037520",
    "end": "1043360"
  },
  {
    "text": "so starts with documentation and uh the onboarding automation i talked about so in jenkins",
    "start": "1043360",
    "end": "1050320"
  },
  {
    "text": "right so based on the different types of reference implementation so for example if you're a java application",
    "start": "1050320",
    "end": "1056160"
  },
  {
    "text": "we'll create this template so we'll fill in all the details that you need and then once you run it we're going to",
    "start": "1056160",
    "end": "1062320"
  },
  {
    "text": "build the reference implementation so think about the reference implementation as the best practices",
    "start": "1062320",
    "end": "1067600"
  },
  {
    "text": "and the standards built in so once we run through this pipeline it's going to create that reference",
    "start": "1067600",
    "end": "1072799"
  },
  {
    "text": "implementation into a template for you and i executed this form for our demo",
    "start": "1072799",
    "end": "1079120"
  },
  {
    "text": "here so for example i have a demo repository called demo mark rest so it's a restful function and it's",
    "start": "1079120",
    "end": "1085520"
  },
  {
    "text": "a java function right so we have code reviewers we have um",
    "start": "1085520",
    "end": "1091039"
  },
  {
    "text": "other team members and we have secret manager defined here so after we run this what it will do is",
    "start": "1091039",
    "end": "1097039"
  },
  {
    "text": "it's going to create a reference implementation here so if you look at this this",
    "start": "1097039",
    "end": "1104720"
  },
  {
    "text": "comes sort of out of the box right so you have a reference implementation you know all the monitoring the log and",
    "start": "1104720",
    "end": "1112240"
  },
  {
    "text": "the documentation comes out of the box as well so all you have to do then is to cut and paste your code into",
    "start": "1112240",
    "end": "1118000"
  },
  {
    "text": "it i'll go through a couple of components of this right so since this is a java function we have",
    "start": "1118000",
    "end": "1124880"
  },
  {
    "text": "a pom file so palm file defines your dependencies for java right",
    "start": "1124880",
    "end": "1130480"
  },
  {
    "text": "and then we have a docker file these all come out of the box and then you see this docker file has my",
    "start": "1130480",
    "end": "1136640"
  },
  {
    "text": "function name built into it and then it's we use a base image for",
    "start": "1136640",
    "end": "1141919"
  },
  {
    "text": "java for example and then we use other base images for different reference implementations",
    "start": "1141919",
    "end": "1148320"
  },
  {
    "text": "and we then have a pipeline file so this pipeline file is important",
    "start": "1148320",
    "end": "1153760"
  },
  {
    "text": "because we use ado azure devops and this defines what goes",
    "start": "1153760",
    "end": "1158960"
  },
  {
    "text": "into the pipeline so for this pipeline for example i turned off the fortify right because",
    "start": "1158960",
    "end": "1165919"
  },
  {
    "text": "we don't want to run this for like 10 minutes because fortify is going to scan the code and i turned",
    "start": "1165919",
    "end": "1171440"
  },
  {
    "text": "off couple other things in here as well for example you can all these things are",
    "start": "1171440",
    "end": "1176880"
  },
  {
    "text": "configurable so you can turn these on and off so for example i turned off some of the qa automation so you can have",
    "start": "1176880",
    "end": "1183840"
  },
  {
    "text": "ci cd and ct built into this right and as part of certification would make",
    "start": "1183840",
    "end": "1188880"
  },
  {
    "text": "sure that you have code coverage you have continuous testing as well as",
    "start": "1188880",
    "end": "1193919"
  },
  {
    "text": "well as you know sanity test smoke test regression testing right so these are",
    "start": "1193919",
    "end": "1198960"
  },
  {
    "text": "all configurable you can turn on and off for this demo i turned on the um",
    "start": "1198960",
    "end": "1204960"
  },
  {
    "text": "observability so i want to kind of show you that and the other important file is service",
    "start": "1204960",
    "end": "1210720"
  },
  {
    "text": "yaml so this is the k native file so in here developers have full control",
    "start": "1210720",
    "end": "1215919"
  },
  {
    "text": "over what is their minimal number of instances they want to run maximal number",
    "start": "1215919",
    "end": "1221280"
  },
  {
    "text": "as part of the certification the teams have to demonstrate that they understand all",
    "start": "1221280",
    "end": "1226720"
  },
  {
    "text": "these underlying technology so each team is required to test their performance",
    "start": "1226720",
    "end": "1232240"
  },
  {
    "text": "so one team came in to the certification and they load tested they performance tested",
    "start": "1232240",
    "end": "1238320"
  },
  {
    "text": "their current usage up to 150",
    "start": "1238320",
    "end": "1243600"
  },
  {
    "text": "150 times the current usage so for example they had like 20 concurrent",
    "start": "1243600",
    "end": "1248640"
  },
  {
    "text": "users so they tested up to 300 or 3000 users",
    "start": "1248640",
    "end": "1254080"
  },
  {
    "text": "right so their pot scaled up to 10 and then when they realized that they",
    "start": "1254080",
    "end": "1260720"
  },
  {
    "text": "they really don't need 10 paws maximum so they set it back to four or two or three parts to support their",
    "start": "1260720",
    "end": "1266799"
  },
  {
    "text": "typical load of 20 but they have full control over this and then the other thing i want to show is that going back to the",
    "start": "1266799",
    "end": "1273440"
  },
  {
    "text": "pipeline so they have full control over here i just stopped at qa they have control over deployment all",
    "start": "1273440",
    "end": "1279919"
  },
  {
    "text": "the way to production vr dmz and so on and for the demo purposes i'm just going",
    "start": "1279919",
    "end": "1285520"
  },
  {
    "text": "to make oh yeah so these are the application config files that we can manage",
    "start": "1285520",
    "end": "1290559"
  },
  {
    "text": "for demo purposes i have this um sample function is a ping-pong method and then there's",
    "start": "1290559",
    "end": "1297120"
  },
  {
    "text": "also a method to pull out some sample ratings and what i'll do is",
    "start": "1297120",
    "end": "1302559"
  },
  {
    "text": "i'm going to change the code here to um",
    "start": "1302559",
    "end": "1306960"
  },
  {
    "text": "let's see i will change the code here to let's say cmcf ping pong",
    "start": "1308400",
    "end": "1318080"
  },
  {
    "text": "imagine this is what the developers would go through to change the code or even put the code in the first time",
    "start": "1318080",
    "end": "1323600"
  },
  {
    "text": "and as part of the the pipeline we it's gated release right we want to make sure that",
    "start": "1323600",
    "end": "1328960"
  },
  {
    "text": "your release ties to a story right so we are continuously delivering value right so then they will commit the code",
    "start": "1328960",
    "end": "1336240"
  },
  {
    "text": "and then they'll do a pull request so even within the pull request so i will check into the",
    "start": "1336240",
    "end": "1341360"
  },
  {
    "text": "october release in here we are sure that you must have code reviewers right so",
    "start": "1341360",
    "end": "1346480"
  },
  {
    "text": "this is another gate that you must go through and i'm just gonna you know for i don't want evan or no i",
    "start": "1346480",
    "end": "1353679"
  },
  {
    "text": "haven't can cancel it i don't need anybody else to approve the code so i'm gonna approve it myself",
    "start": "1353679",
    "end": "1359120"
  },
  {
    "text": "and then we'll set the automation um to build the pipeline here so that's going to kick off the",
    "start": "1359120",
    "end": "1364960"
  },
  {
    "text": "pipelines there so we can go in and take a look at this",
    "start": "1364960",
    "end": "1370960"
  },
  {
    "text": "so the pipeline what it does is um it's gonna start with a snapshot build so you can see all",
    "start": "1370960",
    "end": "1376960"
  },
  {
    "text": "the outputs of these so we do a snapshot build first is to ensure that the container image will",
    "start": "1376960",
    "end": "1383600"
  },
  {
    "text": "actually build right the java code will build because if that fails there's no point deploying anything into it to canada",
    "start": "1383600",
    "end": "1389840"
  },
  {
    "text": "so we'll just fail it right away so here we're doing a snapshot build so it's gonna do a maven release it's",
    "start": "1389840",
    "end": "1396240"
  },
  {
    "text": "gonna do a um a docker build as well",
    "start": "1396240",
    "end": "1401679"
  },
  {
    "text": "and and your developers don't need to figure out how to set this up right this is just from a template that you that's",
    "start": "1401679",
    "end": "1407039"
  },
  {
    "text": "already published and they can go in and adjust it later if they need to",
    "start": "1407039",
    "end": "1412240"
  },
  {
    "text": "but they don't but just to get started you've published templates that's right if you if you see this parameter in the",
    "start": "1412240",
    "end": "1418799"
  },
  {
    "text": "template so all of these are part of that um initial automation that we create the reference",
    "start": "1418799",
    "end": "1425120"
  },
  {
    "text": "implementation this is for java and then all of that comes out of the box so you see this is all based on a",
    "start": "1425120",
    "end": "1430799"
  },
  {
    "text": "template so it's git ops right so they use template out of the box and they can control all these different",
    "start": "1430799",
    "end": "1437200"
  },
  {
    "text": "parameters within it for their pipeline good point evan",
    "start": "1437200",
    "end": "1442720"
  },
  {
    "text": "so in this case the snapshot build is successful and after that it's going to run a build",
    "start": "1442720",
    "end": "1450480"
  },
  {
    "text": "to deploy to dev environment and you have certain controls right this is one i did",
    "start": "1450480",
    "end": "1455679"
  },
  {
    "text": "earlier so for example you can we don't need to deploy to qa right so we just we can just reject it",
    "start": "1455679",
    "end": "1462960"
  },
  {
    "text": "so qa has a manual step where somebody has to approve it you know they have to make sure that you",
    "start": "1462960",
    "end": "1468799"
  },
  {
    "text": "have enough code coverage qa will accept that build so in that case",
    "start": "1468799",
    "end": "1474000"
  },
  {
    "text": "for my demo i just stopped that so for here we're doing a build and",
    "start": "1474000",
    "end": "1479919"
  },
  {
    "text": "deploy to our dev environment so remember we have this configuration here that for dev",
    "start": "1479919",
    "end": "1488000"
  },
  {
    "text": "it's gonna do very simple right for time's sake we're just gonna do a build and we're",
    "start": "1488000",
    "end": "1494720"
  },
  {
    "text": "gonna take that image and deploy it into k native into the dev environment oh yeah and then here",
    "start": "1494720",
    "end": "1501200"
  },
  {
    "text": "here's that dev environment um so i'm gonna watch that so it is currently running",
    "start": "1501200",
    "end": "1510080"
  },
  {
    "text": "and this thing is gonna show us that it will deploy the new one",
    "start": "1510080",
    "end": "1518000"
  },
  {
    "text": "right so it's this is running currently in our dev environment",
    "start": "1518000",
    "end": "1523120"
  },
  {
    "text": "um all this is running do you want to show any of the instrumentation or logging oh yes you",
    "start": "1524000",
    "end": "1530799"
  },
  {
    "text": "get out of the box that's right good point so for the instrumentation",
    "start": "1530799",
    "end": "1535919"
  },
  {
    "text": "every function that we release out of the box is a monitor right so",
    "start": "1535919",
    "end": "1542159"
  },
  {
    "text": "you can have health monitoring of your function so remember i talked about blue green so",
    "start": "1542159",
    "end": "1547440"
  },
  {
    "text": "this dashboard shows you what color we're on right because we don't want developers to be confused go into the wrong cluster",
    "start": "1547440",
    "end": "1553760"
  },
  {
    "text": "and typically we once we deploy one cluster we shut down the other clusters so they won't get confused so",
    "start": "1553760",
    "end": "1559760"
  },
  {
    "text": "you have the developers have full visibility into the health of these um",
    "start": "1559760",
    "end": "1566480"
  },
  {
    "text": "the clusters and their their functions right you can have you can look at",
    "start": "1566480",
    "end": "1572240"
  },
  {
    "text": "different name spaces different functions so full visibility",
    "start": "1572240",
    "end": "1577440"
  },
  {
    "text": "out of the box you don't have to you know care or i mean depending on how much you want to care",
    "start": "1577440",
    "end": "1583520"
  },
  {
    "text": "right you if you just worry about the code you don't care about how any of this stuff works so we",
    "start": "1583520",
    "end": "1589360"
  },
  {
    "text": "simplify it for you but if you want to dig into the log right for example this is that function you have full",
    "start": "1589360",
    "end": "1596000"
  },
  {
    "text": "visibility into the log you can drill into it to see the log and then the other thing is that out of",
    "start": "1596000",
    "end": "1602640"
  },
  {
    "text": "the box we have alerts enabled right just you don't have to do anything",
    "start": "1602640",
    "end": "1607679"
  },
  {
    "text": "so this is the container health alert this is log monitoring so if you have",
    "start": "1607679",
    "end": "1612960"
  },
  {
    "text": "errors fatal errors um in the log you will receive alert",
    "start": "1612960",
    "end": "1618159"
  },
  {
    "text": "because in the onboarding remember you have to pull in your contact information so that we use that and i set up an",
    "start": "1618159",
    "end": "1624799"
  },
  {
    "text": "alert for you and then this is more of um okay native",
    "start": "1624799",
    "end": "1629840"
  },
  {
    "text": "uh related alerts and if we go back to this so so the",
    "start": "1629840",
    "end": "1637279"
  },
  {
    "text": "build is done what happens is after the docker build we will publish the artifact into",
    "start": "1637279",
    "end": "1642720"
  },
  {
    "text": "artifactory and that is used for uh for the deployment into the dev environment",
    "start": "1642720",
    "end": "1649360"
  },
  {
    "text": "and you use the same artifact for deploying to both dev and prod that's right that's right so the same so",
    "start": "1649360",
    "end": "1656159"
  },
  {
    "text": "remember we did a snapshot where the snapshot is making sure that your build is clean and then once we have that if we",
    "start": "1656159",
    "end": "1662880"
  },
  {
    "text": "remember this pipeline file you will use the same artifact you won't have to build again",
    "start": "1662880",
    "end": "1668240"
  },
  {
    "text": "you use the same artifact and deploy it all the way through that that would be your gold copy essentially",
    "start": "1668240",
    "end": "1675360"
  },
  {
    "text": "yeah and then so this is uh let's see how this is doing so it's to start terminating it and then",
    "start": "1675760",
    "end": "1682799"
  },
  {
    "text": "put in the new new code and then the other thing i want to show you is more around",
    "start": "1682799",
    "end": "1688159"
  },
  {
    "text": "time series data so prometheus gives us all the time series so this is kind of a high level cluster",
    "start": "1688159",
    "end": "1694399"
  },
  {
    "text": "level view and then you can also view your functions and drill down to the health of each of your functions as",
    "start": "1694399",
    "end": "1701840"
  },
  {
    "text": "well so yeah i won't i won't give you too much information here so we go back to the",
    "start": "1701840",
    "end": "1709919"
  },
  {
    "text": "deployment so yeah it's uh let's see",
    "start": "1709919",
    "end": "1715520"
  },
  {
    "text": "so this usually takes about three minutes so it's deploying the service now",
    "start": "1715520",
    "end": "1722320"
  },
  {
    "text": "i think in here i put in a destroy command yeah i put in the delete",
    "start": "1722720",
    "end": "1729520"
  },
  {
    "text": "so i'll delete the previous deployment and then if you don't want to delete it then it's going to just use out of the box",
    "start": "1729520",
    "end": "1736000"
  },
  {
    "text": "rolling deployment and we're also looking at blue green deployment for the functions as well",
    "start": "1736000",
    "end": "1742080"
  },
  {
    "text": "so that the functions have full control over different versions being deployed",
    "start": "1742080",
    "end": "1748799"
  },
  {
    "text": "when we look at the pipeline so that's done the pipeline is done and um you see all the i think this is a",
    "start": "1749520",
    "end": "1756399"
  },
  {
    "text": "little delayed the message here so you see it's um let's see that's the old container shutting down now",
    "start": "1756399",
    "end": "1762320"
  },
  {
    "text": "that's right the old one is your new one's up and running so you should be able to show it off yeah and the new one is running so if i",
    "start": "1762320",
    "end": "1768559"
  },
  {
    "text": "go to here this method here it should show yeah cncf ping pong right remember that was",
    "start": "1768559",
    "end": "1774960"
  },
  {
    "text": "the code change so i'm going to hit it a couple of times so then we'll go to uh open tracing so we can see these things",
    "start": "1774960",
    "end": "1783360"
  },
  {
    "text": "so i hit this a couple of times so if we look at the open telemetry right this is also out of the box",
    "start": "1783360",
    "end": "1789760"
  },
  {
    "text": "so you can see the if you want to debug right if you can go trace these things so for example",
    "start": "1789760",
    "end": "1797600"
  },
  {
    "text": "um if we look at yeah you see how this is",
    "start": "1797600",
    "end": "1804320"
  },
  {
    "text": "let's see if we look at the traces we're at 1 33 yes",
    "start": "1804320",
    "end": "1811679"
  },
  {
    "text": "so this is that ratings right we're putting pulling back some sample ratings you see this there's a bit of a cold start right so",
    "start": "1811679",
    "end": "1818320"
  },
  {
    "text": "the first one took one second and then the subsequent one took",
    "start": "1818320",
    "end": "1823360"
  },
  {
    "text": "milliseconds so let's drill into it right so the first one you can see majority of the time is spent on java",
    "start": "1823360",
    "end": "1830399"
  },
  {
    "text": "right so this is your this is your select statement database which is pretty quick",
    "start": "1830399",
    "end": "1835520"
  },
  {
    "text": "but then if we look at this one here this is your crud method pulling back all the data so",
    "start": "1835520",
    "end": "1841120"
  },
  {
    "text": "that took majority of time for one second but then if we look at the other one",
    "start": "1841120",
    "end": "1846559"
  },
  {
    "text": "this is after the code start right so you look at this one this total was um nine milliseconds and your select",
    "start": "1846559",
    "end": "1853600"
  },
  {
    "text": "went faster too yeah select one faster everything went faster the second time around",
    "start": "1853600",
    "end": "1858880"
  },
  {
    "text": "it took a little bit of warm-up um i i didn't actually notice that well i did notice that but i",
    "start": "1858880",
    "end": "1865919"
  },
  {
    "text": "didn't see it until we had this instrumentation in place right so developers also get this experience out",
    "start": "1865919",
    "end": "1873200"
  },
  {
    "text": "of the box as well so that's all i want to demo for today",
    "start": "1873200",
    "end": "1878240"
  },
  {
    "text": "so i will turn over to evan okay you'll need to stop sharing okay",
    "start": "1878240",
    "end": "1885840"
  },
  {
    "text": "okay oh just one more slide okay so",
    "start": "1887200",
    "end": "1895519"
  },
  {
    "text": "this technology is very new and exciting right i think a couple of takeaways one is that with",
    "start": "1895840",
    "end": "1902320"
  },
  {
    "text": "that open contribution model right teams are able to come in and contribute and really get excited and",
    "start": "1902320",
    "end": "1908480"
  },
  {
    "text": "get onboarded with this right so we have 90 of the application",
    "start": "1908480",
    "end": "1913600"
  },
  {
    "text": "in scope for this year meaning 90 of our application portfolio have either",
    "start": "1913600",
    "end": "1918960"
  },
  {
    "text": "started or completed fast function so if we look at a team view right 50 percent of our teams",
    "start": "1918960",
    "end": "1925600"
  },
  {
    "text": "all of our teams have done fast functions already right we're kind of sort of following this this adoption curve we're towards",
    "start": "1925600",
    "end": "1933120"
  },
  {
    "text": "the latter stages of adoption now so this year this is less than nine months from having had",
    "start": "1933120",
    "end": "1938720"
  },
  {
    "text": "something to show them at all that's right yeah so k native has really helped us",
    "start": "1938720",
    "end": "1944080"
  },
  {
    "text": "on our journey because it simplifies the developer experience as well as the",
    "start": "1944080",
    "end": "1950240"
  },
  {
    "text": "infrastructure experience with uh with using kubernetes",
    "start": "1950240",
    "end": "1956240"
  },
  {
    "text": "all right okay so um yeah so we've talked a bunch about you",
    "start": "1956720",
    "end": "1962720"
  },
  {
    "text": "know oh hey s p has built this fast platform and they're using k native",
    "start": "1962720",
    "end": "1968399"
  },
  {
    "text": "but what does that actually mean um so k native is a system for building",
    "start": "1968399",
    "end": "1975679"
  },
  {
    "text": "serverless http applications so we've talked a little bit about serverless i'm going to talk a little",
    "start": "1975679",
    "end": "1982559"
  },
  {
    "text": "bit here about why we do htp and then we're going to dig into more about how that serverless stuff works",
    "start": "1982559",
    "end": "1989600"
  },
  {
    "text": "so when we were starting the project um it seemed pretty clear to us building an open serverless system that",
    "start": "1989600",
    "end": "1996960"
  },
  {
    "text": "we wanted to build on some pretty robust standards and http kind of struck us as the obvious way to",
    "start": "1996960",
    "end": "2002480"
  },
  {
    "text": "get requests in and out because it's well understood and it keeps evolving and improving so it's not like",
    "start": "2002480",
    "end": "2008960"
  },
  {
    "text": "we picked a standard and you know it's going to be the same three years or five years from now",
    "start": "2008960",
    "end": "2015679"
  },
  {
    "text": "it'll keep getting better support for things like w3cs tracing",
    "start": "2015679",
    "end": "2022000"
  },
  {
    "text": "will just automatically get added in and so all your tracing tools should work from front end to back end",
    "start": "2022000",
    "end": "2028399"
  },
  {
    "text": "in the next year or two would be my guess as that you know as that ecosystem evolves",
    "start": "2028399",
    "end": "2033840"
  },
  {
    "text": "similarly we bet on kubernetes for container scheduling um because we knew that was going to",
    "start": "2033840",
    "end": "2039360"
  },
  {
    "text": "keep improving and we wanted to be on the ocean where the tide was rising",
    "start": "2039360",
    "end": "2045120"
  },
  {
    "text": "and that would lift our ship as well um but we also wanted to specialize kubernetes more than",
    "start": "2045120",
    "end": "2052079"
  },
  {
    "text": "um more than kubernetes itself is sort of um here here's a tool you can",
    "start": "2052079",
    "end": "2058158"
  },
  {
    "text": "do anything with it and you're like i can do anything um but you most of the time you don't want to do",
    "start": "2058159",
    "end": "2064079"
  },
  {
    "text": "anything you have a specific thing you want to do and so we wanted to make it",
    "start": "2064079",
    "end": "2069358"
  },
  {
    "text": "a sharp specific tool for cases where you were building something that was basically a 12-factor application",
    "start": "2069359",
    "end": "2076000"
  },
  {
    "text": "um that you were willing to speak hdp that you didn't need to keep local state and that um we could make things a lot",
    "start": "2076000",
    "end": "2083280"
  },
  {
    "text": "simpler and so the first place this shows up",
    "start": "2083280",
    "end": "2088320"
  },
  {
    "text": "is i don't know how many of you define kubernetes deployments on a regular basis this is kind of the smallest",
    "start": "2088320",
    "end": "2095358"
  },
  {
    "text": "simplest deployment you could have over on the left hand side",
    "start": "2095359",
    "end": "2100880"
  },
  {
    "text": "you've got a deployment but if you want to talk to it you actually also need a service and you need to have a bunch",
    "start": "2100880",
    "end": "2106480"
  },
  {
    "text": "of selector labels and you need to match some ports and stuff like that um and so you have at least two objects",
    "start": "2106480",
    "end": "2113040"
  },
  {
    "text": "you've got to keep in mind and you have to think about labels um there's actually a lot for developer",
    "start": "2113040",
    "end": "2119040"
  },
  {
    "text": "to dig into here because we haven't even really talked about like what's a docker image um over on the right hand side you can",
    "start": "2119040",
    "end": "2125520"
  },
  {
    "text": "see a k native service you basically say",
    "start": "2125520",
    "end": "2130560"
  },
  {
    "text": "you know hey this is a k-native service that's the api version in kind here's its name um run this container",
    "start": "2130560",
    "end": "2138800"
  },
  {
    "text": "and it speaks http and then there's a bunch of convention and a little bit of magic in there and",
    "start": "2138800",
    "end": "2144880"
  },
  {
    "text": "you get some services that you don't get from a standard kubernetes deployment um",
    "start": "2144880",
    "end": "2150240"
  },
  {
    "text": "like an auto scaler you could go and figure out horizontal pod autoscaler oh look we just added a little bit more",
    "start": "2150240",
    "end": "2155760"
  },
  {
    "text": "yaml to the left-hand side um so",
    "start": "2155760",
    "end": "2161040"
  },
  {
    "text": "we mentioned auto scaling you sort of get this to some extent with",
    "start": "2161040",
    "end": "2166800"
  },
  {
    "text": "ingress for management of http hostnames again we just added another object you have to think about",
    "start": "2166800",
    "end": "2173680"
  },
  {
    "text": "to the kubernetes space so all those things are useful when you need to do something",
    "start": "2173680",
    "end": "2179119"
  },
  {
    "text": "strange you know when you say hey i'm running a bunch of game servers each game server is kind of independent",
    "start": "2179119",
    "end": "2184880"
  },
  {
    "text": "but they're kind of together kubernetes is a great fit for that but if you're building http applications",
    "start": "2184880",
    "end": "2191680"
  },
  {
    "text": "k-native simplifies that we also build in some tracking of previous states",
    "start": "2191680",
    "end": "2198480"
  },
  {
    "text": "every time you do an update it creates a new revision so um that's a little bit like what",
    "start": "2198480",
    "end": "2204240"
  },
  {
    "text": "deployment does but it's a little easier to find them and go back to the earlier ones and their um the garbage collection",
    "start": "2204240",
    "end": "2211200"
  },
  {
    "text": "policy can be date-based and and over time without having to think about um",
    "start": "2211200",
    "end": "2216800"
  },
  {
    "text": "you know how many replica sets am i going to keep around um k native automates a lot of that and um we also automated a bunch of the",
    "start": "2216800",
    "end": "2224720"
  },
  {
    "text": "roll out stuff between them deployment basically has one has a policy that's you know hey we'll just",
    "start": "2224720",
    "end": "2230640"
  },
  {
    "text": "start restarting things um and we'll get you up to the number you need um and since we're serverless and we",
    "start": "2230640",
    "end": "2238079"
  },
  {
    "text": "sort of start from zero it's easy to just start a new pool and scale that up",
    "start": "2238079",
    "end": "2243119"
  },
  {
    "text": "and then the old ones go away when they need to um so you may burst a little bit more if you want to switch things over",
    "start": "2243119",
    "end": "2248480"
  },
  {
    "text": "quickly but you can also do it much more slowly or get more control over http",
    "start": "2248480",
    "end": "2254839"
  },
  {
    "text": "um also since we do knew we were doing http and we knew that it's 2020",
    "start": "2254839",
    "end": "2260000"
  },
  {
    "text": "um we built in integration with cert manager and let's encrypt",
    "start": "2260000",
    "end": "2265040"
  },
  {
    "text": "so that you can automatically also get all your ssl handled without developers having to",
    "start": "2265040",
    "end": "2271839"
  },
  {
    "text": "get involved and you can have just a single wildcard cert that covers",
    "start": "2271839",
    "end": "2278079"
  },
  {
    "text": "all of your functions in all of your domains and let's talk a little bit now",
    "start": "2278079",
    "end": "2285119"
  },
  {
    "text": "about how s p actually ended up using this um so they talked about having blue and",
    "start": "2285119",
    "end": "2293040"
  },
  {
    "text": "green environments so you can see in the picture down at the bottom um you know in their dev environment they'd",
    "start": "2293040",
    "end": "2298960"
  },
  {
    "text": "have cluster one and cluster two and one would be blue and one would be green and so they have a specific dns",
    "start": "2298960",
    "end": "2305280"
  },
  {
    "text": "zone um fazz blue or faz or faz green that lets you hit a specific one of",
    "start": "2305280",
    "end": "2311680"
  },
  {
    "text": "these um you know specific one of these clusters they also have a top-level dns zone for",
    "start": "2311680",
    "end": "2317680"
  },
  {
    "text": "the environment so dev has a different domain than um uat or production um",
    "start": "2317680",
    "end": "2324800"
  },
  {
    "text": "and so if you don't want to have to think about you know already in blue or are we in green you can just hit that top level thing if",
    "start": "2324800",
    "end": "2330960"
  },
  {
    "text": "you need to go into details it's there um and they integrated with aws certificate manager to do the",
    "start": "2330960",
    "end": "2336320"
  },
  {
    "text": "provisioning um out of the box k k-native ships with an integration with let's encrypt",
    "start": "2336320",
    "end": "2341680"
  },
  {
    "text": "um using jetstack cert manager um which is great if you have an internet",
    "start": "2341680",
    "end": "2347119"
  },
  {
    "text": "connected cluster and you don't need too many certs um in the you know first for a company like",
    "start": "2347119",
    "end": "2354800"
  },
  {
    "text": "s p they can afford to send a few dollars aws away to get",
    "start": "2354800",
    "end": "2359839"
  },
  {
    "text": "um to get higher rate limits and certain guarantees that let's encrypt",
    "start": "2359839",
    "end": "2365119"
  },
  {
    "text": "just isn't set up to give their goal is to encrypt the internet um but not necessarily to run",
    "start": "2365119",
    "end": "2373040"
  },
  {
    "text": "uh financial business so um you know find the right tool and um one of the",
    "start": "2373040",
    "end": "2379599"
  },
  {
    "text": "goals from with building canadia was that you should be able to customize this stuff so um i think that was a success",
    "start": "2379599",
    "end": "2387839"
  },
  {
    "text": "and now we're going to talk a little bit about what the data path looks like for k-native serving because we've talked a",
    "start": "2387920",
    "end": "2394000"
  },
  {
    "text": "whole bunch about it being serverless and let's see what that actually means so the first goal for handling requests",
    "start": "2394000",
    "end": "2402079"
  },
  {
    "text": "um i call this life of a query um i got my start at google and one of the",
    "start": "2402079",
    "end": "2408560"
  },
  {
    "text": "first talks that you get is here's what it looks like when you actually do a search query so i always call it life of query um but the goal for steady state is",
    "start": "2408560",
    "end": "2416800"
  },
  {
    "text": "that things should look pretty close to the same cost as if you were just using raw vms or raw kubernetes so",
    "start": "2416800",
    "end": "2425040"
  },
  {
    "text": "a load balancer splits stuff across your http routing layer um and stuff gets sent to a user",
    "start": "2425040",
    "end": "2430960"
  },
  {
    "text": "container um and that's all lovely and good and then so the next question is",
    "start": "2430960",
    "end": "2438800"
  },
  {
    "text": "um you know okay lots of traffic comes in you know that goal of 3000",
    "start": "2438800",
    "end": "2445280"
  },
  {
    "text": "concurrent users for example that mark was talking about how do we actually count those users and",
    "start": "2445280",
    "end": "2451440"
  },
  {
    "text": "then make sure that we've got the right number of containers and k-native does this by injecting this",
    "start": "2451440",
    "end": "2457680"
  },
  {
    "text": "little proxy in front of the user container and being able to count all the requests and feed",
    "start": "2457680",
    "end": "2463920"
  },
  {
    "text": "that back into a based auto scaler so if you're familiar with the kubernetes um horizontal pod auto scaler by default",
    "start": "2463920",
    "end": "2471680"
  },
  {
    "text": "that will cue off of cpu or possibly off of a custom metric but you have to do a bunch of plumbing to",
    "start": "2471680",
    "end": "2477599"
  },
  {
    "text": "get your custom metrics in there the default behavior of k-native is request-based scaling",
    "start": "2477599",
    "end": "2483839"
  },
  {
    "text": "if you want to you can take out the canado auto scaler and put in horizontal pod autoscaler",
    "start": "2483839",
    "end": "2489359"
  },
  {
    "text": "um it's possible to do we find that most people actually like the request-based scaling",
    "start": "2489359",
    "end": "2494480"
  },
  {
    "text": "so this is you know building a particular focus tool because we understand it's http and we",
    "start": "2494480",
    "end": "2500319"
  },
  {
    "text": "can get into the protocol um",
    "start": "2500319",
    "end": "2509119"
  },
  {
    "text": "let's see okay so another thing that aws lambda",
    "start": "2509119",
    "end": "2514640"
  },
  {
    "text": "gives you is um you can write well in lambda you have to write write your",
    "start": "2514640",
    "end": "2521920"
  },
  {
    "text": "code um with the assumption that it's oh there's only going to be one request going on in a process at a time",
    "start": "2521920",
    "end": "2527520"
  },
  {
    "text": "because that's how lambda works um but lots of people actually like that because it means that if you want to have globals for",
    "start": "2527520",
    "end": "2534560"
  },
  {
    "text": "stuff or you just want to know that you aren't going to get interfered with anyone else you have",
    "start": "2534560",
    "end": "2539680"
  },
  {
    "text": "you know a container that wants one request at a time we wanted to support that in k native so q proxy also lets us enforce hey",
    "start": "2539680",
    "end": "2547680"
  },
  {
    "text": "you know you may have 50 http routers but you're only going to get one request per container at a time",
    "start": "2547680",
    "end": "2553119"
  },
  {
    "text": "you can also crank that up if you want to you can say hey 50 or 100 you know look i've written this in java",
    "start": "2553119",
    "end": "2558319"
  },
  {
    "text": "it's all reentrant um you know let it go to a thousand or keep it at one",
    "start": "2558319",
    "end": "2563359"
  },
  {
    "text": "um and the default is to assume it's reentrant but it's easy to just say you know one",
    "start": "2563359",
    "end": "2569760"
  },
  {
    "text": "request per container um so now now you know okay that's all",
    "start": "2569760",
    "end": "2574960"
  },
  {
    "text": "nice kind of nice ergonomics how does that scale from xero thing work",
    "start": "2574960",
    "end": "2580319"
  },
  {
    "text": "because there's nothing actually running how can we count how many requests there are when a request comes",
    "start": "2580319",
    "end": "2586319"
  },
  {
    "text": "in so this is where one of the clever tricks of k-nativ is that we",
    "start": "2586319",
    "end": "2592079"
  },
  {
    "text": "run a single activator for your entire kubernetes cluster or possibly a replicated set of them but a",
    "start": "2592079",
    "end": "2598480"
  },
  {
    "text": "small number when you add a new function it doesn't add a new activator the activator is shared and it will",
    "start": "2598480",
    "end": "2604160"
  },
  {
    "text": "pause the request and it'll say hey um there's no instances of this",
    "start": "2604160",
    "end": "2609359"
  },
  {
    "text": "kubernetes please go talk to cubelet and actually get a pod ready and once that",
    "start": "2609359",
    "end": "2615520"
  },
  {
    "text": "pods ready then the activator will forward the request along so you'll see a longer",
    "start": "2615520",
    "end": "2621599"
  },
  {
    "text": "response time for those requests but they won't get dropped on the floor and um so we've talked about okay we had",
    "start": "2621599",
    "end": "2630640"
  },
  {
    "text": "zero we want many how do we get there how do we do the opposite no requests",
    "start": "2630640",
    "end": "2636000"
  },
  {
    "text": "have come in and we've shut down it turns out that actually takes a little bit of a clever dance",
    "start": "2636000",
    "end": "2641760"
  },
  {
    "text": "as well because first you need to add the activator in after the activator is hooked in and the",
    "start": "2641760",
    "end": "2647920"
  },
  {
    "text": "http routers all know about it then you can scale things down to zero the rest of the way",
    "start": "2647920",
    "end": "2653760"
  },
  {
    "text": "um and k native tests and handles all of that so you don't have to think about it and you don't have to build anything complicated",
    "start": "2653760",
    "end": "2659599"
  },
  {
    "text": "and you get scale to and from zero and the last part is mark talked a little bit about blue",
    "start": "2659599",
    "end": "2665839"
  },
  {
    "text": "green deployments and progressive rollouts and we wanted to support",
    "start": "2665839",
    "end": "2671119"
  },
  {
    "text": "being able to say hey this is a new canary thing we're only going to give it 10 of",
    "start": "2671119",
    "end": "2676640"
  },
  {
    "text": "traffic even in that case that mark was talking about where they have only 20 users maybe you only want to do 10 of traffic",
    "start": "2676640",
    "end": "2683440"
  },
  {
    "text": "anyway so that you tell people reload a few times and it should work um but you only have four pods um so with",
    "start": "2683440",
    "end": "2690720"
  },
  {
    "text": "standard kubernetes services they're all round robin and if you do replace one pod",
    "start": "2690720",
    "end": "2696720"
  },
  {
    "text": "it's a 25 roll out since we control that http router we can actually and it's something envoy based um so far",
    "start": "2696720",
    "end": "2705040"
  },
  {
    "text": "we can actually replace things in there and say do 10 and 90 percent",
    "start": "2705040",
    "end": "2712318"
  },
  {
    "text": "i just kind of hinted at this one we support multiple hdb routers so contour",
    "start": "2714319",
    "end": "2719839"
  },
  {
    "text": "um istio ambassador glue and um red hat wrote a really",
    "start": "2719839",
    "end": "2726079"
  },
  {
    "text": "lightweight one called courier that's specifically focused for being used by k-native um",
    "start": "2726079",
    "end": "2732319"
  },
  {
    "text": "we want to integrate with your http router we don't want to tell you oh you've made a big investment",
    "start": "2732319",
    "end": "2738480"
  },
  {
    "text": "in istio mesh or you've made you know a big investment in glue or contour or something like that",
    "start": "2738480",
    "end": "2745040"
  },
  {
    "text": "sorry throw it all away so we have adapter layers for all of these and you",
    "start": "2745040",
    "end": "2750079"
  },
  {
    "text": "can choose which one you want to install and i'm going to blaze through this",
    "start": "2750079",
    "end": "2757119"
  },
  {
    "text": "because i have one minute left maybe and then we'll have time for",
    "start": "2757119",
    "end": "2762160"
  },
  {
    "text": "questions at the end um so the mental model",
    "start": "2762160",
    "end": "2767440"
  },
  {
    "text": "for k-native is i showed you that service a service is made up of a route which is the networking part",
    "start": "2767440",
    "end": "2772960"
  },
  {
    "text": "and a configuration which tracks basically how you want things to run and",
    "start": "2772960",
    "end": "2778640"
  },
  {
    "text": "the configuration creates additional revisions every time you update it the route",
    "start": "2778640",
    "end": "2785599"
  },
  {
    "text": "lets you pick which thing receives traffic it can either be the latest revision or a specific",
    "start": "2785599",
    "end": "2792000"
  },
  {
    "text": "revision um we call running with the latest revision at 100 yolo mode you only live once um but it's also",
    "start": "2792000",
    "end": "2799920"
  },
  {
    "text": "really handy for for development and um you know stuff that's not really critical",
    "start": "2799920",
    "end": "2806640"
  },
  {
    "text": "and that's the end um we're available for questions and",
    "start": "2806640",
    "end": "2812400"
  },
  {
    "text": "anything else that you know feel free to use the q a or chat or stuff like that to",
    "start": "2812400",
    "end": "2818000"
  },
  {
    "text": "get in touch with us and we've got contact info afterwards um vmware is hiring um i should",
    "start": "2818000",
    "end": "2825520"
  },
  {
    "text": "probably add we are looking for people to add to the canadian community and to hire them so",
    "start": "2825520",
    "end": "2831280"
  },
  {
    "text": "feel free to reach out to me twitter dm or email and i don't know if s p is",
    "start": "2831280",
    "end": "2837760"
  },
  {
    "text": "hiring mark we are i'm actually currently looking for two blockchain developers",
    "start": "2837760",
    "end": "2843040"
  },
  {
    "text": "and by the way blockchain is running on kubernetes too so",
    "start": "2843040",
    "end": "2848400"
  },
  {
    "text": "cool yeah okay uh yeah thanks evan and mark for great",
    "start": "2850800",
    "end": "2856559"
  },
  {
    "text": "presentation and demo so we have now some time for question if you have some question",
    "start": "2856559",
    "end": "2862000"
  },
  {
    "text": "around this topic yeah feel free to drop in your clinic tab okay we got a one question",
    "start": "2862000",
    "end": "2868000"
  },
  {
    "text": "just came up who who will take this one i can take that one",
    "start": "2868000",
    "end": "2873200"
  },
  {
    "text": "um i'm going to answer it live the question is is there a significant difference in responsiveness between auto scaling with",
    "start": "2873200",
    "end": "2879520"
  },
  {
    "text": "k native versus the horizontal pod auto scaler",
    "start": "2879520",
    "end": "2883759"
  },
  {
    "text": "as always the answer's going to be it depends um i will say that the um the kubernetes",
    "start": "2884800",
    "end": "2891280"
  },
  {
    "text": "horizontal pod autoscaler may be i don't know what knobs there are",
    "start": "2891280",
    "end": "2896559"
  },
  {
    "text": "to tune how frequently it's checking to decide if it should rescale an application",
    "start": "2896559",
    "end": "2902400"
  },
  {
    "text": "i know that the k-native autoscaler team looks at that and has tests that are",
    "start": "2902400",
    "end": "2907920"
  },
  {
    "text": "basically hey we're at zero what happens if we dump a thousand requests per second on a k native",
    "start": "2907920",
    "end": "2913680"
  },
  {
    "text": "cluster with you know container concurrency set to 100 or something like that so how fast do we get to 10 instead you",
    "start": "2913680",
    "end": "2920240"
  },
  {
    "text": "know to the 10 or 12 instances that we should have for handling that much load um and",
    "start": "2920240",
    "end": "2926240"
  },
  {
    "text": "uh so they have a pretty fast um cycle on the metrics collection and",
    "start": "2926240",
    "end": "2931839"
  },
  {
    "text": "they've recently migrated that to grpc from hdp to get additional efficiency",
    "start": "2931839",
    "end": "2937359"
  },
  {
    "text": "benefits because they were finding that for large clusters it was too slow",
    "start": "2937359",
    "end": "2943838"
  },
  {
    "text": "i haven't seen hpa measurements so i can't tell you hpa is going to be slower but my suspicion",
    "start": "2944000",
    "end": "2950079"
  },
  {
    "text": "is that it's probably not tuned to check as fast and you may be able to tell it you know",
    "start": "2950079",
    "end": "2956319"
  },
  {
    "text": "check every second or check every two seconds thanks for the answer",
    "start": "2956319",
    "end": "2964160"
  },
  {
    "text": "okay i think uh i'm assuming that mark um that s p is using the default auto",
    "start": "2967200",
    "end": "2973200"
  },
  {
    "text": "scale or the k native one and not yes we have or zomcotta scale we have a demo of it where we just",
    "start": "2973200",
    "end": "2979599"
  },
  {
    "text": "scaled it up to a hundred parts in like seconds it was very efficient",
    "start": "2979599",
    "end": "2985680"
  },
  {
    "text": "um the goal when we started k native was um to be able to",
    "start": "2985680",
    "end": "2992400"
  },
  {
    "text": "match lambda's performance eventually and that's going to take more effort and getting down into",
    "start": "2992400",
    "end": "2999280"
  },
  {
    "text": "kubernetes as well some of the limitations we see today um are around things like how long does",
    "start": "2999280",
    "end": "3006800"
  },
  {
    "text": "it take to schedule a pod and pull the image",
    "start": "3006800",
    "end": "3012318"
  },
  {
    "text": "and so i think that there are one or two caps that are percolating about how do we make that faster",
    "start": "3012400",
    "end": "3020400"
  },
  {
    "text": "for example readiness probes if you use the kubernetes readiness probe you've got a minimum of a second for your",
    "start": "3020400",
    "end": "3026880"
  },
  {
    "text": "service to become ready and we'd like that to be um below a second you know every 100",
    "start": "3026880",
    "end": "3032800"
  },
  {
    "text": "milliseconds or so and currently the activator goes and does that",
    "start": "3032800",
    "end": "3039119"
  },
  {
    "text": "check even on unready members of the service to see if it can can race and beat um",
    "start": "3039119",
    "end": "3046400"
  },
  {
    "text": "kubernetes propagation time on services i think one of the things with k-native",
    "start": "3046400",
    "end": "3053040"
  },
  {
    "text": "is that with lambdas and azure functions of the world you're very limited with k-native we can do so much we",
    "start": "3053040",
    "end": "3060800"
  },
  {
    "text": "we have full control over what we put in there and we're even talking about with pivotal about trying to put a power",
    "start": "3060800",
    "end": "3067839"
  },
  {
    "text": "builder in there because we have legacy apps right we want to modernize",
    "start": "3067839",
    "end": "3072960"
  },
  {
    "text": "and there are different ways of modernizing it gives us a lot more flexibility basically because it's in our full control and we",
    "start": "3072960",
    "end": "3079920"
  },
  {
    "text": "can do whatever you want with it and it's multi-cloud another great example of that is doug",
    "start": "3079920",
    "end": "3086559"
  },
  {
    "text": "davis has a prototype that he's trying to figure out how to how to fit into the community",
    "start": "3086559",
    "end": "3092640"
  },
  {
    "text": "for being able to just have a shell script that gets adapted to an http server so your container just has a shell",
    "start": "3092640",
    "end": "3099280"
  },
  {
    "text": "command in it you know as a shell container and then inject an http server binary through a",
    "start": "3099280",
    "end": "3106720"
  },
  {
    "text": "volume mount rewrite the entry point so that it calls that http server and the http server invokes",
    "start": "3106720",
    "end": "3113520"
  },
  {
    "text": "your normal docker entry point once for every http request and it's a pretty cool demo and we're",
    "start": "3113520",
    "end": "3119599"
  },
  {
    "text": "trying to figure out okay you know how do we make it that next level of accessible to developers",
    "start": "3119599",
    "end": "3127039"
  },
  {
    "text": "yeah i mean you guys are moving fast because we had a feature where we wanted to support s3",
    "start": "3127920",
    "end": "3133119"
  },
  {
    "text": "for iam roles and that that was you know we put in the request through github and that was released to",
    "start": "3133119",
    "end": "3139520"
  },
  {
    "text": "us very quickly so quick turn around [Music] it's definitely been an interesting oh",
    "start": "3139520",
    "end": "3148640"
  },
  {
    "text": "uh there's another question so i'll stop just convincing um what percent of compute or app estate",
    "start": "3148880",
    "end": "3155680"
  },
  {
    "text": "could go to k native or serverless ultimately um uh i'm going to",
    "start": "3155680",
    "end": "3161599"
  },
  {
    "text": "pass that over to mark first to talk for s p and then i can have some unfounded opinions about the state of the industry",
    "start": "3161599",
    "end": "3169359"
  },
  {
    "text": "yeah so from our experience they are other than the commercial off the shelf right if you",
    "start": "3169359",
    "end": "3175280"
  },
  {
    "text": "think about breaking capabilities so we are more mapping capabilities right and then even",
    "start": "3175280",
    "end": "3181200"
  },
  {
    "text": "the first stage is almost like cut and paste like you take your java code cut and paste into your dot net code but",
    "start": "3181200",
    "end": "3188400"
  },
  {
    "text": "then when we look at it right what percentage really depends on what percentage of your apps you know",
    "start": "3188400",
    "end": "3194960"
  },
  {
    "text": "what what is the current state of the target state so target state for us is 100",
    "start": "3194960",
    "end": "3200000"
  },
  {
    "text": "right other than the commercial off the shelf we can move into you know the because of container based so we have a lot of flexibility in terms",
    "start": "3200000",
    "end": "3206960"
  },
  {
    "text": "of what we put into it but it's http right i've i've also moved some commercial off the shelf stuff",
    "start": "3206960",
    "end": "3213280"
  },
  {
    "text": "um to a serverless environment if it um if it can be containerized and and is",
    "start": "3213280",
    "end": "3220079"
  },
  {
    "text": "you know stateless containers uh we are actually so we move pega documentum we are moving documented into",
    "start": "3220079",
    "end": "3227520"
  },
  {
    "text": "uh containers it's a bad idea i ran jira once like that but it turns out that",
    "start": "3227520",
    "end": "3233040"
  },
  {
    "text": "jira keeps a bunch of local caches so um that was an unsuccessful final",
    "start": "3233040",
    "end": "3238559"
  },
  {
    "text": "experiment because your issues wouldn't show up until somebody told it to re-index",
    "start": "3238559",
    "end": "3244880"
  },
  {
    "text": "so so i would say if you have off-the-shelf software try it um you may",
    "start": "3245359",
    "end": "3251280"
  },
  {
    "text": "discover that there's that that it's not successful but some of it actually does work pretty",
    "start": "3251280",
    "end": "3257359"
  },
  {
    "text": "well um in terms of overall um",
    "start": "3257359",
    "end": "3264960"
  },
  {
    "text": "i would say that k native specifically the current k-native serving",
    "start": "3264960",
    "end": "3270079"
  },
  {
    "text": "um might be about 30 of sort of all workloads where all",
    "start": "3270079",
    "end": "3276400"
  },
  {
    "text": "workloads could also include stuff like you know databases and storage and stuff i think there's other places where",
    "start": "3276400",
    "end": "3284000"
  },
  {
    "text": "things could get more serverless than they are today um looking at stuff um",
    "start": "3284000",
    "end": "3290480"
  },
  {
    "text": "you know a system like pulsar or um kafka or active mq",
    "start": "3290480",
    "end": "3296960"
  },
  {
    "text": "that scaled out just automatically from one node to many without having to think",
    "start": "3296960",
    "end": "3302960"
  },
  {
    "text": "a lot about how many partitions do i have would be a really cool serverless you know distributed log system",
    "start": "3302960",
    "end": "3310319"
  },
  {
    "text": "and i'd love to see one of those",
    "start": "3310319",
    "end": "3313599"
  },
  {
    "text": "follow-up question is is state an issue here how does canada deal with it so canadian and a lot of the serverless",
    "start": "3315920",
    "end": "3321280"
  },
  {
    "text": "platforms today are",
    "start": "3321280",
    "end": "3326480"
  },
  {
    "text": "are stateless like 12 factor and the assumption is you can start two or five or 10 instances and when you",
    "start": "3327440",
    "end": "3334079"
  },
  {
    "text": "don't need them you can just shut them down so if you need to have state or shared state",
    "start": "3334079",
    "end": "3340079"
  },
  {
    "text": "using something like memcache or redis if you need lightweight stuff or just",
    "start": "3340079",
    "end": "3345280"
  },
  {
    "text": "using you know your database to share state or an object store to share state",
    "start": "3345280",
    "end": "3350319"
  },
  {
    "text": "keeping state in your process or on disk not such a good idea so don't do that",
    "start": "3350319",
    "end": "3357599"
  },
  {
    "text": "and then there's a question about plants that support fast and k-native on esxi",
    "start": "3359760",
    "end": "3364799"
  },
  {
    "text": "through project pacific well so two answers um you can run k-native on tkgs clusters",
    "start": "3364799",
    "end": "3371920"
  },
  {
    "text": "today um that works we use it for some of our internal testing",
    "start": "3371920",
    "end": "3376960"
  },
  {
    "text": "um in terms of product plans i'm gonna have to point you back to",
    "start": "3376960",
    "end": "3383440"
  },
  {
    "text": "um a vmware product manager um valentina ellaria would be probably the",
    "start": "3383440",
    "end": "3389280"
  },
  {
    "text": "best but feel free to send me email and i can connect you um with the right vmware product",
    "start": "3389280",
    "end": "3394880"
  },
  {
    "text": "managers because i don't i mostly focus on the open source software and i don't keep track",
    "start": "3394880",
    "end": "3400240"
  },
  {
    "text": "of vmware's product plans one thing i want to add so we have uh",
    "start": "3400240",
    "end": "3407040"
  },
  {
    "text": "other than http we also have cron jobs we have a messaging",
    "start": "3407040",
    "end": "3412720"
  },
  {
    "text": "like eventing that showed in one of the slides and we also have static web uis kind of like you would with uh",
    "start": "3412720",
    "end": "3419040"
  },
  {
    "text": "hosting user interface on s3 so we have all those running in k-native as well",
    "start": "3419040",
    "end": "3426000"
  },
  {
    "text": "i think we have some tcp use cases you have to dig that up",
    "start": "3426000",
    "end": "3433599"
  },
  {
    "text": "um oh you mentioned tcp um one of the fun things with k-native if",
    "start": "3433599",
    "end": "3438880"
  },
  {
    "text": "you're a network if you're a networking geek is um we actually support",
    "start": "3438880",
    "end": "3444160"
  },
  {
    "text": "http http 2 and websockets all at the same time which is kind of a",
    "start": "3444160",
    "end": "3451359"
  },
  {
    "text": "fun combination of spaces to talk about because there's lots of different ways",
    "start": "3451359",
    "end": "3457440"
  },
  {
    "text": "to stream things back and forth even though you are just speaking htp and that's one of the great things about having such a",
    "start": "3457440",
    "end": "3463359"
  },
  {
    "text": "broad ecosystem to pick from",
    "start": "3463359",
    "end": "3466640"
  },
  {
    "text": "you can auto scale you know streaming responses um which is",
    "start": "3468880",
    "end": "3476720"
  },
  {
    "text": "yeah i've seen i've seen good use cases for it um i've also seen that start to bleed into the stateful space a little bit more",
    "start": "3476720",
    "end": "3482880"
  },
  {
    "text": "than i'm comfortable with so with great power comes great responsibility",
    "start": "3482880",
    "end": "3489839"
  },
  {
    "text": "and we are at time i promised that things would go early and apparently i've failed at that",
    "start": "3490480",
    "end": "3496799"
  },
  {
    "text": "but yeah don't worry feel free to follow up with questions on",
    "start": "3496799",
    "end": "3502000"
  },
  {
    "text": "either twitter or by emailing either of us and thanks for attending yeah so okay",
    "start": "3502000",
    "end": "3508960"
  },
  {
    "text": "so or yeah any any last word mark thank you for having us yeah perfect so",
    "start": "3508960",
    "end": "3516400"
  },
  {
    "text": "all right and that's all the question we have time for today and thanks for joining us once again the webinar recording and",
    "start": "3516400",
    "end": "3522720"
  },
  {
    "text": "slash there will be online later today and we are looking forward to seeing you at the future cnc webinar",
    "start": "3522720",
    "end": "3529440"
  },
  {
    "text": "but also we have a kubecon and clown that we call north jamaica next month and november",
    "start": "3529440",
    "end": "3535200"
  },
  {
    "text": "17th and we're looking forward to seeing you once again have a good rest of the day thank you and there's no capacity limits on that",
    "start": "3535200",
    "end": "3541599"
  },
  {
    "text": "because it's virtual yeah perfect yeah thanks for watching you guys are good and",
    "start": "3541599",
    "end": "3546960"
  },
  {
    "text": "have a good rest of day everybody bye-bye goodbye",
    "start": "3546960",
    "end": "3552559"
  }
]