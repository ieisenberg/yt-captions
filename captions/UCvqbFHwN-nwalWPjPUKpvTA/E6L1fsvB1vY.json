[
  {
    "text": "welcome everyone to the brigade on demand webinar brigade provides an event-driven",
    "start": "640",
    "end": "6000"
  },
  {
    "text": "scripting platform built on top of kubernetes i'm kent rancourt one of the project",
    "start": "6000",
    "end": "11519"
  },
  {
    "text": "maintainers if you've followed our project at all you may have seen content similar to",
    "start": "11519",
    "end": "16720"
  },
  {
    "text": "this before and if that's the case i'd recommend sticking around regardless",
    "start": "16720",
    "end": "22240"
  },
  {
    "text": "it's an exciting time for brigade right now as of this recording it was just days ago that we cut the first release",
    "start": "22240",
    "end": "28320"
  },
  {
    "text": "candidate of brigade2 most likely by the time you view this brigade2 has already become generally",
    "start": "28320",
    "end": "34800"
  },
  {
    "text": "available so in some ways this is our first presentation and demo that shows off the finished product",
    "start": "34800",
    "end": "41680"
  },
  {
    "text": "brigade has an interesting history which i'll touch on briefly what eventually became brigade v1 was",
    "start": "41680",
    "end": "48320"
  },
  {
    "text": "born at a deus offsite in 2016. the entire team was assembled in denver",
    "start": "48320",
    "end": "53760"
  },
  {
    "text": "and one exercise we all went through that day was a shark tank style game wherein teams pitched ideas to the",
    "start": "53760",
    "end": "60239"
  },
  {
    "text": "senior leadership and the best idea would get resources assigned to it well brigade was the big winner that day",
    "start": "60239",
    "end": "66799"
  },
  {
    "text": "but interestingly helm which we regard as our sister project was born from a",
    "start": "66799",
    "end": "72000"
  },
  {
    "text": "similar exercise at the previous years off-site helmet brigade both were products of an",
    "start": "72000",
    "end": "77840"
  },
  {
    "text": "interesting thought experiment that i'm going to share with you it begins with the comparison of kubernetes to an operating system",
    "start": "77840",
    "end": "85200"
  },
  {
    "text": "so let's begin by asking ourselves what exactly is an operating system",
    "start": "85200",
    "end": "92400"
  },
  {
    "text": "well it's a program that after being initially loaded into a device manages",
    "start": "92400",
    "end": "98079"
  },
  {
    "text": "all the other programs pretty simple really so in what sense is kubernetes an",
    "start": "98079",
    "end": "103840"
  },
  {
    "text": "operating system well an operating system manages processes on a device",
    "start": "103840",
    "end": "109360"
  },
  {
    "text": "kubernetes manages containers in a cluster so if kubernetes can be likened to an",
    "start": "109360",
    "end": "114799"
  },
  {
    "text": "operating system it's useful to ask ourselves what are some features and functionality that we take for granted",
    "start": "114799",
    "end": "121439"
  },
  {
    "text": "in a traditional operating system that are conspicuously absent from kubernetes",
    "start": "121439",
    "end": "126799"
  },
  {
    "text": "in 2015 kubernetes lacked a package manager so helm was born",
    "start": "126799",
    "end": "133200"
  },
  {
    "text": "well something else that we take for granted in a traditional operating system is the presence of at least one",
    "start": "134080",
    "end": "139760"
  },
  {
    "text": "and often multiple scripting environments traditional shell scripting is flow",
    "start": "139760",
    "end": "145280"
  },
  {
    "text": "control that wraps the execution of processes but is not opinionated about what the processes do or how they run",
    "start": "145280",
    "end": "152959"
  },
  {
    "text": "well containers are really just a layer of isolation around your processes",
    "start": "152959",
    "end": "158560"
  },
  {
    "text": "so what would scripting look like in a cluster well cluster shell scripting would be",
    "start": "159280",
    "end": "164959"
  },
  {
    "text": "flow control that wraps the execution of containers but is not opinionated about what the containers do",
    "start": "164959",
    "end": "171440"
  },
  {
    "text": "or how they run that's where brigade comes in",
    "start": "171440",
    "end": "177519"
  },
  {
    "text": "brigade offers asynchronous event driven scripting it can be used to chain together",
    "start": "177519",
    "end": "183280"
  },
  {
    "text": "containers to create complex workflows and it uses kubernetes as a workload",
    "start": "183280",
    "end": "189120"
  },
  {
    "text": "execution substrate that is to say kubernetes is an implementation detail",
    "start": "189120",
    "end": "195040"
  },
  {
    "text": "and users do not have to interact with kubernetes directly",
    "start": "195040",
    "end": "200400"
  },
  {
    "text": "brigade is currently a cncf sandbox project",
    "start": "202400",
    "end": "207760"
  },
  {
    "text": "so before we get too much farther what is brigade really good for essentially anything you'd like to",
    "start": "209360",
    "end": "215440"
  },
  {
    "text": "automate that can be triggered by some event examples may include ci and cd",
    "start": "215440",
    "end": "222080"
  },
  {
    "text": "get ops chat ops nightly code scans or security audits report generation and much more",
    "start": "222080",
    "end": "230959"
  },
  {
    "text": "so what is an event it's something that originates from an external system",
    "start": "232239",
    "end": "238319"
  },
  {
    "text": "indicates that something has occurred and it enters brigade via event gateways",
    "start": "238319",
    "end": "245920"
  },
  {
    "text": "and here's what a graphical depiction of that may look like to the left we see external systems that",
    "start": "246560",
    "end": "252640"
  },
  {
    "text": "send their own sort of events web hooks for instance to a gateway that converts inbound events to brigade events and",
    "start": "252640",
    "end": "260239"
  },
  {
    "text": "uses the brigade api to drop those onto brigade's internal event bus",
    "start": "260239",
    "end": "267720"
  },
  {
    "text": "so here are some example gateways that we have already created there are several others besides these and they're",
    "start": "269840",
    "end": "275440"
  },
  {
    "text": "generally pretty easy to build so you can expect us to be creating more and you can pretty easily create your",
    "start": "275440",
    "end": "281280"
  },
  {
    "text": "own if you'd like to trigger your scripts with events from an external system we don't already integrate with",
    "start": "281280",
    "end": "287199"
  },
  {
    "text": "even a proprietary one",
    "start": "287199",
    "end": "290560"
  },
  {
    "text": "this is what a yaml representation of an event would look like they're really json over the wire but this is a bit",
    "start": "292240",
    "end": "298639"
  },
  {
    "text": "easier to read i also want to point out that even though this may have a striking similarity to kubernetes manifest this",
    "start": "298639",
    "end": "306160"
  },
  {
    "text": "is not a kubernetes manifest you can see that every event has a source",
    "start": "306160",
    "end": "312000"
  },
  {
    "text": "that field denotes where the event came from in this case a github gateway",
    "start": "312000",
    "end": "317600"
  },
  {
    "text": "every event has a type gateways may emit many different types of events and generally they would map",
    "start": "317600",
    "end": "323840"
  },
  {
    "text": "pretty directly onto events sent by the external system and received by that gateway",
    "start": "323840",
    "end": "329120"
  },
  {
    "text": "this event indicates that someone starred a repository in github",
    "start": "329120",
    "end": "334400"
  },
  {
    "text": "gateways should always document the events they emit an event may optionally have qualifiers",
    "start": "334400",
    "end": "341680"
  },
  {
    "text": "if you're familiar with labels and kubernetes qualifiers are similar but a little bit different",
    "start": "341680",
    "end": "347520"
  },
  {
    "text": "they specifically provide more context about the event so here someone starred a repository but",
    "start": "347520",
    "end": "354560"
  },
  {
    "text": "which repository in all likelihood no one subscribed to this event is interested in knowing when any",
    "start": "354560",
    "end": "361199"
  },
  {
    "text": "repository was starred it's more likely one may want to know when some specific repository was",
    "start": "361199",
    "end": "367759"
  },
  {
    "text": "starred so who subscribes to events and how well",
    "start": "367759",
    "end": "374000"
  },
  {
    "text": "that is where projects come in projects are user defined they subscribe to events and they define",
    "start": "374000",
    "end": "380560"
  },
  {
    "text": "workers to handle those events so more succinctly a project simply",
    "start": "380560",
    "end": "388000"
  },
  {
    "text": "pairs event subscriptions with worker configuration directions for handling each subscribed event",
    "start": "388000",
    "end": "395840"
  },
  {
    "text": "workers are pretty simple they either embed a bit of javascript or typescript or include git coordinates",
    "start": "396960",
    "end": "403520"
  },
  {
    "text": "where such a script can be found workers are executed in their own container",
    "start": "403520",
    "end": "409680"
  },
  {
    "text": "workers can handle an event directly usually when the handling is simple and easily accomplished with just javascript",
    "start": "409680",
    "end": "416400"
  },
  {
    "text": "or typescript for more complex situations workers can coordinate multiple jobs",
    "start": "416400",
    "end": "422479"
  },
  {
    "text": "each of which runs in its own container we'll come back to that in a few slides",
    "start": "422479",
    "end": "428800"
  },
  {
    "text": "here's an example of a project with a worker that has directly embedded a simple script",
    "start": "431199",
    "end": "437120"
  },
  {
    "text": "you can see that the project subscribes to all events that indicate someone has starred a specific github repository",
    "start": "437120",
    "end": "444240"
  },
  {
    "text": "the embedded script responds simply by writing some logs to the console when you embed a chunk of script in yaml",
    "start": "444240",
    "end": "451280"
  },
  {
    "text": "however you lose a lot of the niceties that we usually take for granted like syntax highlighting especially so for",
    "start": "451280",
    "end": "458160"
  },
  {
    "text": "more complex scripts it makes more sense to reference a script that is stored elsewhere",
    "start": "458160",
    "end": "465400"
  },
  {
    "text": "like this this alternative to the previous example would handle the event using a script",
    "start": "465680",
    "end": "471599"
  },
  {
    "text": "retrieved from the crankcore stargazer example repository on github",
    "start": "471599",
    "end": "476720"
  },
  {
    "text": "now not all events can easily be handled with javascript or typescript for instance suppose that when someone",
    "start": "476720",
    "end": "482800"
  },
  {
    "text": "opened a pr against a particular github repository we wanted to execute a battery of tests but the project in",
    "start": "482800",
    "end": "489680"
  },
  {
    "text": "question is implemented with go this is where jobs come in",
    "start": "489680",
    "end": "495680"
  },
  {
    "text": "jobs optionally are created by workers to handle discrete tasks they can be executed in serial or",
    "start": "497280",
    "end": "504639"
  },
  {
    "text": "concurrently subject to scheduling constraints jobs themselves run in their own",
    "start": "504639",
    "end": "510800"
  },
  {
    "text": "containers they can be based on any oci image and sidecar containers are also",
    "start": "510800",
    "end": "516080"
  },
  {
    "text": "supported here's an example that builds on our",
    "start": "516080",
    "end": "522399"
  },
  {
    "text": "previous ones it's a more complex script but it spawns two trivial jobs and executes them in",
    "start": "522399",
    "end": "529279"
  },
  {
    "text": "sequence each of these jobs will execute one after the other in their own container",
    "start": "529279",
    "end": "537040"
  },
  {
    "text": "so finally it's demo time one thing i am not going to show you in this demo is the installation process",
    "start": "538640",
    "end": "544640"
  },
  {
    "text": "because frankly it's uninteresting like most other things that are built on top of kubernetes brigade is installed",
    "start": "544640",
    "end": "551279"
  },
  {
    "text": "using helm and our default configuration is well tuned for a local non-production installation so you can be up and",
    "start": "551279",
    "end": "557600"
  },
  {
    "text": "running and kicking the tires in just minutes i'm actually going to utilize the brigade team's own brigade instance for",
    "start": "557600",
    "end": "564399"
  },
  {
    "text": "today's demo for our demo today we're going to be",
    "start": "564399",
    "end": "569760"
  },
  {
    "text": "creating a hello world project it wouldn't be too hard to start from scratch and it might actually be too",
    "start": "569760",
    "end": "575360"
  },
  {
    "text": "easy to start out by copying an existing project definition so what we're going to do is split the",
    "start": "575360",
    "end": "580959"
  },
  {
    "text": "difference and show off what i think is a great and realistic way for beginners to get started with brigade and that's",
    "start": "580959",
    "end": "586560"
  },
  {
    "text": "brig in it so the first thing i'll do is make a new directory for our sample project",
    "start": "586560",
    "end": "593440"
  },
  {
    "text": "now i'll simply type brig init",
    "start": "603600",
    "end": "607839"
  },
  {
    "text": "and give the project a name",
    "start": "609680",
    "end": "612959"
  },
  {
    "text": "you can see this created a number of files under a new dot brigade directory the dot brigade directory is just a way",
    "start": "617600",
    "end": "624160"
  },
  {
    "text": "of keeping everything brigade related separate from everything else in your project remember that brigade scripts use",
    "start": "624160",
    "end": "630720"
  },
  {
    "text": "javascript or typescript and we won't touch on it until later in the demo but you can actually use a package.json file",
    "start": "630720",
    "end": "638079"
  },
  {
    "text": "to enumerate third-party dependencies for your script supposing that you were using brigade to",
    "start": "638079",
    "end": "643839"
  },
  {
    "text": "add some automation to an existing project that was itself implemented in javascript or typescript",
    "start": "643839",
    "end": "650160"
  },
  {
    "text": "having everything brigade related in a separate directory allows you to have separate package.json files for your",
    "start": "650160",
    "end": "657200"
  },
  {
    "text": "main project and for your brigade script again we'll come back to this later in the demo",
    "start": "657200",
    "end": "663839"
  },
  {
    "text": "in the list of things that brig init did you can also see that it created a project definition some notes a file for",
    "start": "663839",
    "end": "671200"
  },
  {
    "text": "secrets and because we didn't already have a dot git ignore file it created one for us and added a couple entries to",
    "start": "671200",
    "end": "678240"
  },
  {
    "text": "it specifically if we should check this project into source control in the future there are certain things we",
    "start": "678240",
    "end": "684880"
  },
  {
    "text": "wouldn't want tracked one of those things is whatever npm modules our brigadescript uses because",
    "start": "684880",
    "end": "691200"
  },
  {
    "text": "it's simply not convention to track those for any javascript or typescript project that's in no way brigade",
    "start": "691200",
    "end": "697200"
  },
  {
    "text": "specific also we see that our secrets aren't being tracked and that also makes sense",
    "start": "697200",
    "end": "703120"
  },
  {
    "text": "because one typically does not check sensitive information into source control you can also see some notes were created",
    "start": "703120",
    "end": "710320"
  },
  {
    "text": "those notes spell out your next steps we're not going to bother looking at them right now because well you've got",
    "start": "710320",
    "end": "715600"
  },
  {
    "text": "me instead next we're going to take a look at the project definition file that brig and",
    "start": "715600",
    "end": "721040"
  },
  {
    "text": "nick created for us",
    "start": "721040",
    "end": "724079"
  },
  {
    "text": "at the very top we see a comment that points to a json schema i'm not sure how widely known this is",
    "start": "729279",
    "end": "735440"
  },
  {
    "text": "but yaml is a superset of json so you can actually use json schemas to",
    "start": "735440",
    "end": "740560"
  },
  {
    "text": "validate yaml documents i've got a vs code extension installed that recognizes this comment and will",
    "start": "740560",
    "end": "747120"
  },
  {
    "text": "provide me with context help based on that schema note that the comment isn't specific to",
    "start": "747120",
    "end": "752560"
  },
  {
    "text": "the extension in any way rather it's specific to the yaml language server",
    "start": "752560",
    "end": "757680"
  },
  {
    "text": "so although i haven't tried it i'm given to believe that you can get the same context help in any editor or ide that",
    "start": "757680",
    "end": "763760"
  },
  {
    "text": "integrates with the gamma language server now we'll look at the main body of the",
    "start": "763760",
    "end": "770320"
  },
  {
    "text": "project definition recall that a project fundamentally pairs event subscriptions",
    "start": "770320",
    "end": "775600"
  },
  {
    "text": "with worker configuration that describes how to handle those events we can see that at work here in this file",
    "start": "775600",
    "end": "783040"
  },
  {
    "text": "we're subscribing to events of type exec that come from a source called brigade.sh",
    "start": "783040",
    "end": "789120"
  },
  {
    "text": "cli we're going to come back to that in a minute or two we can also see a worker template",
    "start": "789120",
    "end": "795120"
  },
  {
    "text": "section that describes our worker under there we see default config files",
    "start": "795120",
    "end": "801920"
  },
  {
    "text": "when your worker launches the full contents of whatever you put in this section will be mounted into the worker",
    "start": "801920",
    "end": "807440"
  },
  {
    "text": "container the worker always looks for a script named either brigade.js or brigade.ts",
    "start": "807440",
    "end": "814240"
  },
  {
    "text": "so by putting a brigade.ts file here in our project definition we've effectively embedded our script in the project",
    "start": "814240",
    "end": "820959"
  },
  {
    "text": "definition you can put other files here as well but we want to keep things simple for right",
    "start": "820959",
    "end": "826839"
  },
  {
    "text": "now now the mere existence of this project definition file doesn't accomplish anything unless we upload it",
    "start": "826839",
    "end": "833440"
  },
  {
    "text": "to brigade although this is not a kubernetes manifest you can think of it in similar",
    "start": "833440",
    "end": "838800"
  },
  {
    "text": "terms if you defined a secret or deployment or other sort of kubernetes resource with a",
    "start": "838800",
    "end": "844160"
  },
  {
    "text": "chunk of yaml kubernetes still wouldn't know about it until you ran cube ctl apply and passed it the file",
    "start": "844160",
    "end": "851920"
  },
  {
    "text": "now i'm already logged into my team's own brigade api server i'm going to list the projects that we have there so you",
    "start": "851920",
    "end": "858720"
  },
  {
    "text": "can see that none are already named hello brigade",
    "start": "858720",
    "end": "863880"
  },
  {
    "text": "you can also see these projects all correspond to our most active repositories and you might surmise that",
    "start": "875120",
    "end": "881199"
  },
  {
    "text": "we're mostly using brigade for ci and cd i really want to emphasize that brigade",
    "start": "881199",
    "end": "886240"
  },
  {
    "text": "is generally useful for anything you want to automate ci and cd just happen to be specialized",
    "start": "886240",
    "end": "891519"
  },
  {
    "text": "cases of automation and their needs we had that we were able to quite easily fill using our own product",
    "start": "891519",
    "end": "898480"
  },
  {
    "text": "so let's go ahead and upload our project definition to brigade",
    "start": "898480",
    "end": "904279"
  },
  {
    "text": "now if we re-list our projects we can see hello brigade is in the list",
    "start": "913600",
    "end": "920199"
  },
  {
    "text": "we can also retrieve that project directly",
    "start": "930000",
    "end": "935000"
  },
  {
    "text": "similar to cubectl we can also ask for the output in a different format if we'd like to see more details so i'll ask to",
    "start": "943839",
    "end": "950959"
  },
  {
    "text": "see a yaml representation of the project",
    "start": "950959",
    "end": "955839"
  },
  {
    "text": "you can see that for the most part this looks just like what we uploaded i do want to call attention however to a",
    "start": "962639",
    "end": "968320"
  },
  {
    "text": "field that wasn't present when we uploaded that project definition something that brigade added in for us",
    "start": "968320",
    "end": "974639"
  },
  {
    "text": "and that's this kubernetes namespace field",
    "start": "974639",
    "end": "979199"
  },
  {
    "text": "brigade automatically creates a new namespace for every project brigade is really designed for end users",
    "start": "980399",
    "end": "987120"
  },
  {
    "text": "who are not necessarily kubernetes experts and it takes great pains to fully abstract end users away from",
    "start": "987120",
    "end": "993040"
  },
  {
    "text": "kubernetes inevitably however people who are kubernetes experts are going to want to",
    "start": "993040",
    "end": "998560"
  },
  {
    "text": "push brigade a little harder and do some things like automate maintenance operations on the cluster itself",
    "start": "998560",
    "end": "1005199"
  },
  {
    "text": "for this sort of person supposing they have direct access to the underlying cluster telling them the namespace that brigade",
    "start": "1005199",
    "end": "1011519"
  },
  {
    "text": "created for this project permits the user to seek out the kubernetes service accounts in that namespace that are used",
    "start": "1011519",
    "end": "1018320"
  },
  {
    "text": "by workers and jobs and amend their permissions so that they can do things within the kubernetes cluster that a",
    "start": "1018320",
    "end": "1024720"
  },
  {
    "text": "worker or job cannot usually do this is obviously extremely advanced",
    "start": "1024720",
    "end": "1030480"
  },
  {
    "text": "usage we're not going to discuss it any further right now but i thought it was important to highlight that this",
    "start": "1030480",
    "end": "1035520"
  },
  {
    "text": "capability exists",
    "start": "1035520",
    "end": "1039160"
  },
  {
    "text": "at this point brigade knows about our new project and we should probably send an appropriate event to trigger the",
    "start": "1042720",
    "end": "1048400"
  },
  {
    "text": "worker now in the real world events usually come from a gateway of some sort that receives events from external systems",
    "start": "1048400",
    "end": "1055440"
  },
  {
    "text": "and transforms them into brigade events gateway setup can be a bit involved",
    "start": "1055440",
    "end": "1060559"
  },
  {
    "text": "and not for any brigade specific reason but just because there's often a lot of setup that needs to be done on the",
    "start": "1060559",
    "end": "1065840"
  },
  {
    "text": "external system github or slack for instance to make it send events to your gateway",
    "start": "1065840",
    "end": "1073440"
  },
  {
    "text": "all of our gateways do have comprehensive documentation that cover whatever external setup needs",
    "start": "1073440",
    "end": "1079280"
  },
  {
    "text": "to be performed but if we took the time to set something like that up right now it would really derail our demo",
    "start": "1079280",
    "end": "1086320"
  },
  {
    "text": "if you look back at the project definition you'll see we subscribe to events of type exec",
    "start": "1086320",
    "end": "1092799"
  },
  {
    "text": "that come from a source called brigade.sh cli well primarily for testing and demo",
    "start": "1092799",
    "end": "1098720"
  },
  {
    "text": "purposes this type of event is trivial to create manually from the cli",
    "start": "1098720",
    "end": "1104000"
  },
  {
    "text": "so instead of setting up a gateway that's what we're going to do",
    "start": "1104000",
    "end": "1109640"
  },
  {
    "text": "adding the follow flag is a bit of a convenience that we'll wait until the worker starts and then begin streaming",
    "start": "1119919",
    "end": "1125360"
  },
  {
    "text": "its logs to our console because we had debug logging enabled we see quite a bit of information about",
    "start": "1125360",
    "end": "1131520"
  },
  {
    "text": "what exactly the worker is doing the most important thing is that it launched a hello job that also ran to",
    "start": "1131520",
    "end": "1137600"
  },
  {
    "text": "completion now that we've seen brigade handle an event for the first time let's look at",
    "start": "1137600",
    "end": "1143200"
  },
  {
    "text": "some other commands for managing events",
    "start": "1143200",
    "end": "1147200"
  },
  {
    "text": "we can list all events",
    "start": "1148240",
    "end": "1151840"
  },
  {
    "text": "this is probably an overwhelming amount of information so we can filter by project",
    "start": "1155120",
    "end": "1162200"
  },
  {
    "text": "here we see our event and its status if we retrieve that one event by its id",
    "start": "1167919",
    "end": "1173679"
  },
  {
    "text": "we will see even more detail",
    "start": "1173679",
    "end": "1177880"
  },
  {
    "text": "included in these details we see the names and statuses of our jobs",
    "start": "1185919",
    "end": "1193080"
  },
  {
    "text": "something else useful we can do is access the logs from the worker that handled the event",
    "start": "1196000",
    "end": "1203000"
  },
  {
    "text": "this may not seem like a big deal we already saw these logs earlier as the event was being handled",
    "start": "1210799",
    "end": "1216240"
  },
  {
    "text": "but the kubernetes pod that ran the worker is long gone by this point and yet the logs have been preserved this is",
    "start": "1216240",
    "end": "1222400"
  },
  {
    "text": "because we run fluent d on every node to collect logs from all workers and jobs and forward them to our database",
    "start": "1222400",
    "end": "1229120"
  },
  {
    "text": "we can also access the logs from individual jobs by using the job or jflag",
    "start": "1229120",
    "end": "1235840"
  },
  {
    "text": "there are other interesting event related commands for instance you can cancel or delete events we're going to",
    "start": "1245120",
    "end": "1250720"
  },
  {
    "text": "skip over those to talk about something more interesting let's revisit our project definition in",
    "start": "1250720",
    "end": "1256799"
  },
  {
    "text": "its embedded brigade.ts script",
    "start": "1256799",
    "end": "1261399"
  },
  {
    "text": "let's say that over time our needs change and we need to start doing something a little more involved with",
    "start": "1265039",
    "end": "1270159"
  },
  {
    "text": "this script it probably won't be long before we're sick of working with typescript that's embedded in a gamel document and offers",
    "start": "1270159",
    "end": "1277200"
  },
  {
    "text": "us no syntax highlighting or context help this is actually pretty easy to deal with so the first thing i'm going",
    "start": "1277200",
    "end": "1283120"
  },
  {
    "text": "to do is copy the embedded script from our project definition",
    "start": "1283120",
    "end": "1289080"
  },
  {
    "text": "now i'm going to create a brigade.ts file",
    "start": "1291440",
    "end": "1296399"
  },
  {
    "text": "and paste in our script",
    "start": "1297440",
    "end": "1300720"
  },
  {
    "text": "immediately i've got all my syntax highlighting and such but you can see that a brigade specific import that i'm",
    "start": "1302559",
    "end": "1308880"
  },
  {
    "text": "using the brigadier library does not resolve so i cannot get context help for",
    "start": "1308880",
    "end": "1313919"
  },
  {
    "text": "that module this is pretty easy to fix using conventional techniques that should be familiar to anyone who's done much with",
    "start": "1313919",
    "end": "1320400"
  },
  {
    "text": "javascript or typescript we can use the javascript package manager of our choice brigade supports",
    "start": "1320400",
    "end": "1327120"
  },
  {
    "text": "both npm and yarn so here i'll run yarn init from inside the dot brigade directory",
    "start": "1327120",
    "end": "1334880"
  },
  {
    "text": "this creates a minimal package.json file for me",
    "start": "1343200",
    "end": "1348159"
  },
  {
    "text": "now i'll run yarn add",
    "start": "1353120",
    "end": "1357320"
  },
  {
    "text": "this takes care of our problem and now we'll easily get full context help for the brigadier library",
    "start": "1367039",
    "end": "1373679"
  },
  {
    "text": "apart from the context help resolving that library also means that we're now able to compile and execute",
    "start": "1373679",
    "end": "1380400"
  },
  {
    "text": "our script locally this can be a convenient thing to do for testing purposes and it's important to note that this",
    "start": "1380400",
    "end": "1386640"
  },
  {
    "text": "won't actually integrate with the brigade api server in any way you see the brigadier library is",
    "start": "1386640",
    "end": "1392480"
  },
  {
    "text": "actually just interfaces and some stub implementations of those interfaces at runtime our worker substitutes an",
    "start": "1392480",
    "end": "1399760"
  },
  {
    "text": "alternative implementation of those interfaces to enable communication with the brigade api server",
    "start": "1399760",
    "end": "1405919"
  },
  {
    "text": "if you run your script locally you can develop a sense of whether it works as you expected without any consequences",
    "start": "1405919",
    "end": "1413840"
  },
  {
    "text": "now because my script is typescript i do have to compile it first if your script were javascript you could",
    "start": "1414400",
    "end": "1420640"
  },
  {
    "text": "skip this step",
    "start": "1420640",
    "end": "1423440"
  },
  {
    "text": "and now we can run it",
    "start": "1427200",
    "end": "1431080"
  },
  {
    "text": "there are ways to control the source and type of the dummy event and even the payload using environment variables but",
    "start": "1434559",
    "end": "1441279"
  },
  {
    "text": "they're documented and so we're going to move on we've successfully separated our script",
    "start": "1441279",
    "end": "1446960"
  },
  {
    "text": "from the project definition let's revisit that definition briefly and remove the embedded script and tell",
    "start": "1446960",
    "end": "1453200"
  },
  {
    "text": "it to go looking elsewhere to find it",
    "start": "1453200",
    "end": "1457799"
  },
  {
    "text": "this is where our context help comes in handy",
    "start": "1465919",
    "end": "1470760"
  },
  {
    "text": "now let's run get in it and add all the files we've created",
    "start": "1488159",
    "end": "1493520"
  },
  {
    "text": "before we do this i'm going to remove the compiled brigade.js file i don't",
    "start": "1498559",
    "end": "1503600"
  },
  {
    "text": "actually want to include that in source control i'd rather have the worker compile my typescript for me",
    "start": "1503600",
    "end": "1511400"
  },
  {
    "text": "we can see all of the files that we're about to commit do not include the secrets or our npm modules",
    "start": "1527039",
    "end": "1536520"
  },
  {
    "text": "now i'm going to add a remote for a repository that i created ahead of time on github",
    "start": "1548960",
    "end": "1556039"
  },
  {
    "text": "now we'll push our files to that remote",
    "start": "1562240",
    "end": "1566919"
  },
  {
    "text": "last let's submit the updated project definition to brigade",
    "start": "1575840",
    "end": "1581799"
  },
  {
    "text": "now we'll manually create another event",
    "start": "1589520",
    "end": "1594360"
  },
  {
    "text": "note that the debug output from the worker is a little different this time around it tells you exactly what it's",
    "start": "1619120",
    "end": "1624799"
  },
  {
    "text": "doing which includes using the package.json and yarn.lock we provided to resolve dependencies you even see",
    "start": "1624799",
    "end": "1631919"
  },
  {
    "text": "where it substitutes an alternative implementation of the brigadier interfaces we'll briefly touch on a few other",
    "start": "1631919",
    "end": "1638320"
  },
  {
    "text": "useful things now the next thing we'll do is demonstrate that you can use whatever third-party",
    "start": "1638320",
    "end": "1643919"
  },
  {
    "text": "dependencies you like in your brigade.js or ts script so here we'll add and use the unique",
    "start": "1643919",
    "end": "1650080"
  },
  {
    "text": "names generator module",
    "start": "1650080",
    "end": "1653960"
  },
  {
    "text": "now we're going to incorporate this module into our script",
    "start": "1674480",
    "end": "1680120"
  },
  {
    "text": "is",
    "start": "1689840",
    "end": "1692840"
  },
  {
    "text": "right here in the same go i'm going to show you how to chain multiple jobs together to create more interesting",
    "start": "1703600",
    "end": "1709440"
  },
  {
    "text": "workflows",
    "start": "1709440",
    "end": "1712440"
  },
  {
    "text": "i also want to demonstrate that jobs can be based on any oci image that you would like so instead of basing this second",
    "start": "1734960",
    "end": "1742080"
  },
  {
    "text": "job on the debian latest image we'll use the alpine latest image",
    "start": "1742080",
    "end": "1748679"
  },
  {
    "text": "here we'll chain these jobs together",
    "start": "1753440",
    "end": "1757720"
  },
  {
    "text": "so",
    "start": "1771360",
    "end": "1774360"
  },
  {
    "text": "last but not least i'm going to show you how to add secrets to your project and make use of them",
    "start": "1780240",
    "end": "1787640"
  },
  {
    "text": "this is one way to do it you can set secrets one at a time",
    "start": "1810399",
    "end": "1815919"
  },
  {
    "text": "an alternative method of doing this is to put your secrets in a yaml file",
    "start": "1817039",
    "end": "1822960"
  },
  {
    "text": "you can upload the entire file at once",
    "start": "1822960",
    "end": "1827200"
  },
  {
    "text": "here's how you use secrets within your script",
    "start": "1829760",
    "end": "1834760"
  },
  {
    "text": "you can see our context help is really coming in handy",
    "start": "1844320",
    "end": "1849559"
  },
  {
    "text": "now note that what i've done here is for demonstration purposes only it's a really bad idea to allow secrets to",
    "start": "1850480",
    "end": "1856799"
  },
  {
    "text": "bleed into your logs as i've done here now there have been no changes to our project definition so there's no need to",
    "start": "1856799",
    "end": "1863919"
  },
  {
    "text": "update that but we have made changes to our script so we should probably push those up to github",
    "start": "1863919",
    "end": "1871880"
  },
  {
    "text": "one last time we'll trigger an event manually and see what happens",
    "start": "1900480",
    "end": "1906440"
  },
  {
    "text": "this time around we see that two jobs ran in sequence if we look at the logs for the",
    "start": "1933120",
    "end": "1938880"
  },
  {
    "text": "individual jobs we can see the first job said hello to a unique name that we",
    "start": "1938880",
    "end": "1943919"
  },
  {
    "text": "generated using our third party dependency",
    "start": "1943919",
    "end": "1948679"
  },
  {
    "text": "and we can see for the second job that it said hello to the secret we passed in",
    "start": "1962720",
    "end": "1968640"
  },
  {
    "text": "with that we're pretty much done remember i've been using my team's own brigade instance for this demo so we'll",
    "start": "1975440",
    "end": "1981120"
  },
  {
    "text": "just clean up after ourselves by deleting the project",
    "start": "1981120",
    "end": "1986120"
  },
  {
    "text": "deleting the project also removes all associated events logs and kubernetes resources",
    "start": "1994480",
    "end": "2001840"
  },
  {
    "text": "and that concludes the demo",
    "start": "2002640",
    "end": "2005840"
  },
  {
    "text": "really up to this point we've discussed just the basics brigade has a lot of other tricks up its sleeve",
    "start": "2011360",
    "end": "2017440"
  },
  {
    "text": "here are some important features we haven't touched on we have get integration so it's easy to",
    "start": "2017440",
    "end": "2023519"
  },
  {
    "text": "build and test source code we have shared volumes so it's easy to pass artifacts from one job to the next",
    "start": "2023519",
    "end": "2031440"
  },
  {
    "text": "we have configurable limits so you can configure the maximum number of workers that may execute concurrently",
    "start": "2031440",
    "end": "2038399"
  },
  {
    "text": "or the maximum number of jobs that may execute concurrently this is important because even the largest kubernetes",
    "start": "2038399",
    "end": "2044399"
  },
  {
    "text": "cluster cannot possibly execute an infinite amount of work concurrently",
    "start": "2044399",
    "end": "2049520"
  },
  {
    "text": "we have fair scheduling this is to say each project has its own work queue and we pseudo-randomly select events from",
    "start": "2049520",
    "end": "2056398"
  },
  {
    "text": "the head of each one so if one project receives a large volume of events and another project",
    "start": "2056399",
    "end": "2062000"
  },
  {
    "text": "receives an event afterwards the second project does not have to wait for all of the first project's events to be cleared",
    "start": "2062000",
    "end": "2069760"
  },
  {
    "text": "we also have several user authentication options that include any open id connect",
    "start": "2069760",
    "end": "2075040"
  },
  {
    "text": "identity provider and github i especially want to zero in on that",
    "start": "2075040",
    "end": "2080480"
  },
  {
    "text": "recall that brigade is built to be useful for teams where not everyone is a kubernetes expert and some may not even",
    "start": "2080480",
    "end": "2086878"
  },
  {
    "text": "have credentials for directly accessing a kubernetes cluster this introduces a requirement to",
    "start": "2086879",
    "end": "2092638"
  },
  {
    "text": "authenticate to brigade's apis in some other way we didn't want to build user management",
    "start": "2092639",
    "end": "2098240"
  },
  {
    "text": "from scratch so we opted to build integration with third third-party identity providers instead",
    "start": "2098240",
    "end": "2103680"
  },
  {
    "text": "our favorite is github it's actually very easy to configure a brigade installation to delegate authentication",
    "start": "2103680",
    "end": "2109920"
  },
  {
    "text": "to github and to limit authentication to users belonging to github orgs of your choice",
    "start": "2109920",
    "end": "2117800"
  },
  {
    "text": "something we're proud of is that we haven't just built brigade we've been developing an entire ecosystem around it",
    "start": "2119040",
    "end": "2125520"
  },
  {
    "text": "here are some gateways and other peripherals that we've been working on",
    "start": "2125520",
    "end": "2130560"
  },
  {
    "text": "gateways include azure container registry bitbucket cloud events 1.0 docker hub",
    "start": "2130560",
    "end": "2137920"
  },
  {
    "text": "github slack and there are more to come we also provide monitoring in the form",
    "start": "2137920",
    "end": "2144240"
  },
  {
    "text": "of brigade metrics we have an offering for chaos engineering something called the brigade",
    "start": "2144240",
    "end": "2150160"
  },
  {
    "text": "noisy neighbor that can apply a lot of load to your brigade installation",
    "start": "2150160",
    "end": "2156079"
  },
  {
    "text": "and we also offer a couple official sdks with a third and possibly a fourth in the works",
    "start": "2156079",
    "end": "2163040"
  },
  {
    "text": "because it's a question we're asked frequently i want to briefly touch on how brigade differs from argo and let me",
    "start": "2163040",
    "end": "2169119"
  },
  {
    "text": "say off the bat that we love argo we don't think we're better than them we think we're different than them",
    "start": "2169119",
    "end": "2175200"
  },
  {
    "text": "brigade and argo address similar use cases and both model workflows as assemblies of containers but they",
    "start": "2175200",
    "end": "2181680"
  },
  {
    "text": "approach the problem space differently argo emphasizes workflows events are an",
    "start": "2181680",
    "end": "2187520"
  },
  {
    "text": "add-on argo is also fully kubernetes native workflows are kubernetes resources",
    "start": "2187520",
    "end": "2195280"
  },
  {
    "text": "compare that to predict to brigade which emphasizes events events do not describe workflows they",
    "start": "2195280",
    "end": "2201920"
  },
  {
    "text": "only indicate that something has occurred subscribed projects can handle events as they each see fit",
    "start": "2201920",
    "end": "2209680"
  },
  {
    "text": "brigade also uses kubernetes only as an implementation detail",
    "start": "2209680",
    "end": "2214720"
  },
  {
    "text": "workflows are scripted and tooling fully abstracts kubernetes so teams can build",
    "start": "2214720",
    "end": "2219760"
  },
  {
    "text": "automation that executes in kubernetes without being experts and without every",
    "start": "2219760",
    "end": "2224880"
  },
  {
    "text": "team member having direct access to the cluster",
    "start": "2224880",
    "end": "2229838"
  },
  {
    "text": "so the bottom line is there's a lot of overlap between brigade and argo but they take very different approaches to",
    "start": "2230240",
    "end": "2235440"
  },
  {
    "text": "similar problems so when would you choose one over the other to a large extent it may be a matter of",
    "start": "2235440",
    "end": "2241520"
  },
  {
    "text": "personal preference but other factors are likely to enter the equation as well what exactly are you building",
    "start": "2241520",
    "end": "2248320"
  },
  {
    "text": "argo is in my opinion in many ways lower level than brigade it's probably a good",
    "start": "2248320",
    "end": "2253440"
  },
  {
    "text": "starting point if you're building your own product that has a need to build and submit workflows for execution",
    "start": "2253440",
    "end": "2260640"
  },
  {
    "text": "brigade is a little more oriented around end users and in particular end users who are not necessarily kubernetes",
    "start": "2260640",
    "end": "2267280"
  },
  {
    "text": "experts so if your team that's looking to automate a lot of your own tasks quickly and the team doesn't have a lot",
    "start": "2267280",
    "end": "2273280"
  },
  {
    "text": "of kubernetes experience on the bench brigade may be what you're looking for",
    "start": "2273280",
    "end": "2279359"
  },
  {
    "text": "last we're quickly going to talk about brigade's architecture for two reasons first i think this will to a large",
    "start": "2280079",
    "end": "2287200"
  },
  {
    "text": "extent demystify brigade sometimes it's useful to look behind the curtain and see there's really no magic at work",
    "start": "2287200",
    "end": "2294240"
  },
  {
    "text": "second i hope this will be a useful primer for anyone who might be interested in making contributions to",
    "start": "2294240",
    "end": "2299839"
  },
  {
    "text": "the project toward the top of this diagram we see external systems these could be things",
    "start": "2299839",
    "end": "2306800"
  },
  {
    "text": "like github or slack they send events to gateways which convert the events to brigade",
    "start": "2306800",
    "end": "2312800"
  },
  {
    "text": "events and utilize the brigade api to enqueue events on a message bus",
    "start": "2312800",
    "end": "2320240"
  },
  {
    "text": "and the cli permits end users to interact with the api as well",
    "start": "2320240",
    "end": "2326400"
  },
  {
    "text": "the api server's main role is to locate subscribers for each event create a discrete copy for each",
    "start": "2326400",
    "end": "2333119"
  },
  {
    "text": "subscriber and add it to both the database and the message",
    "start": "2333119",
    "end": "2338839"
  },
  {
    "text": "bus on the other end of the message bus is the scheduler which monitors for",
    "start": "2338839",
    "end": "2344240"
  },
  {
    "text": "capacity and allocates it to workers and jobs the observer component watches running",
    "start": "2344240",
    "end": "2351359"
  },
  {
    "text": "workers and jobs in the substrate and reports their statuses back to the api",
    "start": "2351359",
    "end": "2356560"
  },
  {
    "text": "server last but not least a logging agent runs on every substrate node and forwards",
    "start": "2356560",
    "end": "2363520"
  },
  {
    "text": "worker and job logs to the database for safe keeping",
    "start": "2363520",
    "end": "2369720"
  },
  {
    "text": "this diagram is the same as the previous one but superimposes the specific technologies and protocols that brigade",
    "start": "2370079",
    "end": "2376880"
  },
  {
    "text": "utilizes our api is a restful one served over https",
    "start": "2376880",
    "end": "2383440"
  },
  {
    "text": "our database is mongodb and our message bus is artemis which is",
    "start": "2383440",
    "end": "2388480"
  },
  {
    "text": "the next generation of apache mq the api server and scheduler both talk",
    "start": "2388480",
    "end": "2393839"
  },
  {
    "text": "to the message bus using the amqp 1.0 protocol",
    "start": "2393839",
    "end": "2398960"
  },
  {
    "text": "we use fluentd to collect and forward logs and last but certainly not least",
    "start": "2398960",
    "end": "2404560"
  },
  {
    "text": "kubernetes is our workload execution substrate",
    "start": "2404560",
    "end": "2410440"
  },
  {
    "text": "thank you everyone for your time today i'm going to leave you with a few resources for getting started with",
    "start": "2412240",
    "end": "2417359"
  },
  {
    "text": "brigade and for locating and engaging with the maintainers and other community members",
    "start": "2417359",
    "end": "2424440"
  },
  {
    "text": "so here's our website some getting started documentation our main repo on github our twitter",
    "start": "2426079",
    "end": "2432480"
  },
  {
    "text": "handle and our slack channel which is part of the kubernetes slack especially want to highlight the quick",
    "start": "2432480",
    "end": "2438880"
  },
  {
    "text": "start as being your next step if you want to try this out for yourself and i also want to emphasize that you should",
    "start": "2438880",
    "end": "2445119"
  },
  {
    "text": "totally come talk to us on slack we love our community we're really interested in hearing from you",
    "start": "2445119",
    "end": "2451200"
  },
  {
    "text": "thanks again for viewing this webinar have a wonderful day",
    "start": "2451200",
    "end": "2456838"
  }
]