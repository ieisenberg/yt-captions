[
  {
    "text": "hello isoon I'm Greg Hansen from solo",
    "start": "80",
    "end": "3360"
  },
  {
    "text": "iio and today I'm going to talk about",
    "start": "3360",
    "end": "5319"
  },
  {
    "text": "the life of a request in ISO ambient",
    "start": "5319",
    "end": "7760"
  },
  {
    "text": "mesh now one of the things that I spent",
    "start": "7760",
    "end": "10599"
  },
  {
    "text": "a lot of time on in ISO is debugging",
    "start": "10599",
    "end": "13320"
  },
  {
    "text": "failed sidecar requests service a can't",
    "start": "13320",
    "end": "16240"
  },
  {
    "text": "talk to service B after I enabled esto",
    "start": "16240",
    "end": "18840"
  },
  {
    "text": "my esto enabled Pond can't reach cloud",
    "start": "18840",
    "end": "21119"
  },
  {
    "text": "service X or why does my sidecar keep",
    "start": "21119",
    "end": "24119"
  },
  {
    "text": "returning 503s so tracing a request and",
    "start": "24119",
    "end": "27519"
  },
  {
    "text": "figuring out which part of the path",
    "start": "27519",
    "end": "28960"
  },
  {
    "text": "that's broken is something I spend a lot",
    "start": "28960",
    "end": "30800"
  },
  {
    "text": "of time learning and I think you should",
    "start": "30800",
    "end": "33960"
  },
  {
    "text": "too ambient isn't beta yet but it's come",
    "start": "33960",
    "end": "37000"
  },
  {
    "text": "to my attention that there are not",
    "start": "37000",
    "end": "38520"
  },
  {
    "text": "nearly enough diagrams surrounding the",
    "start": "38520",
    "end": "40640"
  },
  {
    "text": "new ambient architecture in ISO so let's",
    "start": "40640",
    "end": "43800"
  },
  {
    "text": "see if there's an artist in me somewhere",
    "start": "43800",
    "end": "45640"
  },
  {
    "text": "and we're going to walk through some",
    "start": "45640",
    "end": "47120"
  },
  {
    "text": "request scenarios in",
    "start": "47120",
    "end": "50120"
  },
  {
    "text": "ambient of course I can't talk about",
    "start": "50120",
    "end": "53120"
  },
  {
    "text": "ambient without first rehashing the",
    "start": "53120",
    "end": "54800"
  },
  {
    "text": "sidec car model in the most basic case",
    "start": "54800",
    "end": "57960"
  },
  {
    "text": "every application pod in the mesh get",
    "start": "57960",
    "end": "59960"
  },
  {
    "text": "it's injected with a sidecar the sidecar",
    "start": "59960",
    "end": "62640"
  },
  {
    "text": "container consists of two processes",
    "start": "62640",
    "end": "65600"
  },
  {
    "text": "Envoy which performs all the routing and",
    "start": "65600",
    "end": "67640"
  },
  {
    "text": "traffic management functions that make",
    "start": "67640",
    "end": "69400"
  },
  {
    "text": "up a service mesh and pilot agent uh",
    "start": "69400",
    "end": "73520"
  },
  {
    "text": "which is the iso process that feeds",
    "start": "73520",
    "end": "75360"
  },
  {
    "text": "Envoy the various XTS configurations",
    "start": "75360",
    "end": "78159"
  },
  {
    "text": "that it receives from the stod control",
    "start": "78159",
    "end": "80240"
  },
  {
    "text": "plane and not pictured but worth",
    "start": "80240",
    "end": "83000"
  },
  {
    "text": "mentioning is the init container that is",
    "start": "83000",
    "end": "85400"
  },
  {
    "text": "also injected which performs the IP",
    "start": "85400",
    "end": "87759"
  },
  {
    "text": "tables traffic capture for the Pod to",
    "start": "87759",
    "end": "89920"
  },
  {
    "text": "route all inbound and outbound traffic",
    "start": "89920",
    "end": "91759"
  },
  {
    "text": "to the envoy process in terms of",
    "start": "91759",
    "end": "94479"
  },
  {
    "text": "requests traffic is generally going from",
    "start": "94479",
    "end": "96920"
  },
  {
    "text": "side car to side car or gateway to side",
    "start": "96920",
    "end": "99240"
  },
  {
    "text": "car just one Envoy process talking to",
    "start": "99240",
    "end": "101720"
  },
  {
    "text": "another unless you're making requests to",
    "start": "101720",
    "end": "103880"
  },
  {
    "text": "external",
    "start": "103880",
    "end": "105960"
  },
  {
    "text": "services and how does that compare to",
    "start": "105960",
    "end": "108520"
  },
  {
    "text": "ambient well there are no more side cars",
    "start": "108520",
    "end": "112320"
  },
  {
    "text": "nothing gets added to the users's",
    "start": "112320",
    "end": "113680"
  },
  {
    "text": "application pods unless they themselves",
    "start": "113680",
    "end": "115920"
  },
  {
    "text": "are adding it there are now two new",
    "start": "115920",
    "end": "118880"
  },
  {
    "text": "components Z tunnel and wayo Z tunnels",
    "start": "118880",
    "end": "122159"
  },
  {
    "text": "are a brand new ISO component written in",
    "start": "122159",
    "end": "124600"
  },
  {
    "text": "Rust that are designed to be fast",
    "start": "124600",
    "end": "126399"
  },
  {
    "text": "lightweight and secure Z tunnels are",
    "start": "126399",
    "end": "128840"
  },
  {
    "text": "deployed per node and serve all pods",
    "start": "128840",
    "end": "131599"
  },
  {
    "text": "collocated on the Node they enable the",
    "start": "131599",
    "end": "134239"
  },
  {
    "text": "most basic mesh configurations for layer",
    "start": "134239",
    "end": "136519"
  },
  {
    "text": "4 features such as Mutual TLS Telemetry",
    "start": "136519",
    "end": "140599"
  },
  {
    "text": "authentication and layer 4",
    "start": "140599",
    "end": "143480"
  },
  {
    "text": "authorizations Waypoint proxies provide",
    "start": "143480",
    "end": "146120"
  },
  {
    "text": "layer seven mesh features such as",
    "start": "146120",
    "end": "148000"
  },
  {
    "text": "virtual service routing layer Telemetry",
    "start": "148000",
    "end": "150680"
  },
  {
    "text": "and layer 7 authorization policies way",
    "start": "150680",
    "end": "153599"
  },
  {
    "text": "points are still based on Envoy and are",
    "start": "153599",
    "end": "155800"
  },
  {
    "text": "deployed per name space or service",
    "start": "155800",
    "end": "159519"
  },
  {
    "text": "account let's take a look at a nice",
    "start": "159519",
    "end": "161959"
  },
  {
    "text": "simple request in ambient pod a calls",
    "start": "161959",
    "end": "165239"
  },
  {
    "text": "pod B the traffic is redirected to the",
    "start": "165239",
    "end": "167720"
  },
  {
    "text": "node local Z tunnel the Z tunnel",
    "start": "167720",
    "end": "170200"
  },
  {
    "text": "instance sees the destination is on the",
    "start": "170200",
    "end": "172319"
  },
  {
    "text": "same node and the request is proxy",
    "start": "172319",
    "end": "176440"
  },
  {
    "text": "Tob and what happens if the destination",
    "start": "176440",
    "end": "179120"
  },
  {
    "text": "is on another node well the client local",
    "start": "179120",
    "end": "182120"
  },
  {
    "text": "Z tunnel sends the request to the",
    "start": "182120",
    "end": "183879"
  },
  {
    "text": "destination collocated Z tunnel who then",
    "start": "183879",
    "end": "187000"
  },
  {
    "text": "forwards to b boom all done talk over I",
    "start": "187000",
    "end": "190720"
  },
  {
    "text": "can give everyone a few minutes back to",
    "start": "190720",
    "end": "192200"
  },
  {
    "text": "their",
    "start": "192200",
    "end": "193159"
  },
  {
    "text": "day but wait didn't and I mention there",
    "start": "193159",
    "end": "196480"
  },
  {
    "text": "are two new components what about the",
    "start": "196480",
    "end": "198519"
  },
  {
    "text": "way points let's refer back to our",
    "start": "198519",
    "end": "200959"
  },
  {
    "text": "original",
    "start": "200959",
    "end": "202959"
  },
  {
    "text": "diagram so it's a trick question those",
    "start": "202959",
    "end": "206159"
  },
  {
    "text": "other diagrams were technically correct",
    "start": "206159",
    "end": "209040"
  },
  {
    "text": "way points are entirely optional in",
    "start": "209040",
    "end": "211120"
  },
  {
    "text": "ambient if you as a user just want",
    "start": "211120",
    "end": "213439"
  },
  {
    "text": "Mutual TLS between services and the mesh",
    "start": "213439",
    "end": "216519"
  },
  {
    "text": "and don't care about layer 7 mesh",
    "start": "216519",
    "end": "218319"
  },
  {
    "text": "features such as virtual service routing",
    "start": "218319",
    "end": "220640"
  },
  {
    "text": "layer 7 Telemetry and layer 7",
    "start": "220640",
    "end": "222799"
  },
  {
    "text": "authorization policies then that's all",
    "start": "222799",
    "end": "225319"
  },
  {
    "text": "there is to it I said waypoints are",
    "start": "225319",
    "end": "227840"
  },
  {
    "text": "still based on Envoy but they are",
    "start": "227840",
    "end": "229920"
  },
  {
    "text": "deployed and behave differently in",
    "start": "229920",
    "end": "231799"
  },
  {
    "text": "ambient waypoints are deployed per name",
    "start": "231799",
    "end": "234680"
  },
  {
    "text": "space or po per service account allowing",
    "start": "234680",
    "end": "237840"
  },
  {
    "text": "independent scaling of application pods",
    "start": "237840",
    "end": "240159"
  },
  {
    "text": "and Waypoint pods also waypoints no",
    "start": "240159",
    "end": "243920"
  },
  {
    "text": "longer handle both inbound and outbound",
    "start": "243920",
    "end": "246360"
  },
  {
    "text": "traffic in ambient way points are",
    "start": "246360",
    "end": "248959"
  },
  {
    "text": "producer or serers side proxies so they",
    "start": "248959",
    "end": "252239"
  },
  {
    "text": "receive inbound traffic for that",
    "start": "252239",
    "end": "253840"
  },
  {
    "text": "namespace or service account so let's",
    "start": "253840",
    "end": "256759"
  },
  {
    "text": "draw some",
    "start": "256759",
    "end": "257759"
  },
  {
    "text": "arrows in the basic case client A's",
    "start": "257759",
    "end": "260959"
  },
  {
    "text": "request is sent to the node local Z",
    "start": "260959",
    "end": "263000"
  },
  {
    "text": "tunnel that Z tunnel detects there's a",
    "start": "263000",
    "end": "265360"
  },
  {
    "text": "way point for the destination at B and",
    "start": "265360",
    "end": "268320"
  },
  {
    "text": "directs the request through the name",
    "start": "268320",
    "end": "269840"
  },
  {
    "text": "space Waypoint before eventually",
    "start": "269840",
    "end": "271840"
  },
  {
    "text": "reaching B once again remember even",
    "start": "271840",
    "end": "274720"
  },
  {
    "text": "though the namespace Waypoint serves",
    "start": "274720",
    "end": "277160"
  },
  {
    "text": "both the client and the server",
    "start": "277160",
    "end": "278759"
  },
  {
    "text": "application pods it only handles inbound",
    "start": "278759",
    "end": "283240"
  },
  {
    "text": "requests for cross node the first part",
    "start": "283240",
    "end": "286280"
  },
  {
    "text": "of the request is the same request gets",
    "start": "286280",
    "end": "288800"
  },
  {
    "text": "sent to the collocated Z tunnel for",
    "start": "288800",
    "end": "291039"
  },
  {
    "text": "client a waypoint is detected for",
    "start": "291039",
    "end": "293400"
  },
  {
    "text": "Destination B but then the request gets",
    "start": "293400",
    "end": "296000"
  },
  {
    "text": "routed through B's node local Z tunnel",
    "start": "296000",
    "end": "298840"
  },
  {
    "text": "now you might ask what node is the",
    "start": "298840",
    "end": "300639"
  },
  {
    "text": "Waypoint running on the answer it",
    "start": "300639",
    "end": "303400"
  },
  {
    "text": "doesn't matter the IP that Z tunnel",
    "start": "303400",
    "end": "305919"
  },
  {
    "text": "retrieves for the Waypoint could refer",
    "start": "305919",
    "end": "307880"
  },
  {
    "text": "to a service IP in which case the",
    "start": "307880",
    "end": "310000"
  },
  {
    "text": "Waypoint pod handling the request could",
    "start": "310000",
    "end": "312600"
  },
  {
    "text": "be one of any number of replicas for",
    "start": "312600",
    "end": "314880"
  },
  {
    "text": "that",
    "start": "314880",
    "end": "316720"
  },
  {
    "text": "deployment so I've covered calls between",
    "start": "316720",
    "end": "319319"
  },
  {
    "text": "two ambient enabled pods but what about",
    "start": "319319",
    "end": "321800"
  },
  {
    "text": "calls from outside the mesh pretty",
    "start": "321800",
    "end": "324280"
  },
  {
    "text": "straightforward the request comes in",
    "start": "324280",
    "end": "326280"
  },
  {
    "text": "through an Ingress Gateway and is sent",
    "start": "326280",
    "end": "328240"
  },
  {
    "text": "through the destinations node local Z",
    "start": "328240",
    "end": "330280"
  },
  {
    "text": "tunnel and eventually the destination",
    "start": "330280",
    "end": "333560"
  },
  {
    "text": "app and if we add a waypoint into the",
    "start": "333560",
    "end": "336160"
  },
  {
    "text": "path the request is routed to the",
    "start": "336160",
    "end": "338680"
  },
  {
    "text": "destination Waypoint first then the",
    "start": "338680",
    "end": "341319"
  },
  {
    "text": "collocated Z tunnel and finally the",
    "start": "341319",
    "end": "343560"
  },
  {
    "text": "destination app",
    "start": "343560",
    "end": "345120"
  },
  {
    "text": "itself so I've talked about Ingress only",
    "start": "345120",
    "end": "348039"
  },
  {
    "text": "reasonable to talk about egress",
    "start": "348039",
    "end": "350800"
  },
  {
    "text": "right and that's a good question did I",
    "start": "350800",
    "end": "354560"
  },
  {
    "text": "mention ambient is still pre beta and",
    "start": "354560",
    "end": "357160"
  },
  {
    "text": "egress is still in the design stages so",
    "start": "357160",
    "end": "359759"
  },
  {
    "text": "you can get involved there are weekly",
    "start": "359759",
    "end": "362039"
  },
  {
    "text": "ambient workg group meetings on",
    "start": "362039",
    "end": "363600"
  },
  {
    "text": "Wednesdays a design doc for ambient apis",
    "start": "363600",
    "end": "367280"
  },
  {
    "text": "and several channels on the esto slack",
    "start": "367280",
    "end": "369240"
  },
  {
    "text": "to get",
    "start": "369240",
    "end": "370720"
  },
  {
    "text": "involved thanks for listening everyone I",
    "start": "370720",
    "end": "373560"
  },
  {
    "text": "hope the diagrams helped everyone better",
    "start": "373560",
    "end": "375720"
  },
  {
    "text": "understand ambient a little more have",
    "start": "375720",
    "end": "377720"
  },
  {
    "text": "any follow-up questions I'm available on",
    "start": "377720",
    "end": "379759"
  },
  {
    "text": "slack as giih Hansen hope everyone",
    "start": "379759",
    "end": "382639"
  },
  {
    "text": "enjoys the rest of is",
    "start": "382639",
    "end": "384960"
  },
  {
    "text": "hukan",
    "start": "384960",
    "end": "387960"
  }
]