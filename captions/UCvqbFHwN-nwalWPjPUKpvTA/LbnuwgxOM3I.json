[
  {
    "start": "0",
    "end": "86000"
  },
  {
    "text": "hello everyone I worked the CNC a webinar of today we're gonna get started",
    "start": "89",
    "end": "6480"
  },
  {
    "text": "we seem to be a fair amount of people on the webinar so welcome again so today is",
    "start": "6480",
    "end": "13200"
  },
  {
    "text": "recognize about apps which proxy less service mesh we have Dinesh super of 80",
    "start": "13200",
    "end": "18900"
  },
  {
    "text": "co-founder of orbit my name is alessandro sama CN CF ambassador I'll be moderating today's",
    "start": "18900",
    "end": "25380"
  },
  {
    "text": "webinar again thank you everybody to join us today this webinar will be",
    "start": "25380",
    "end": "30840"
  },
  {
    "text": "recorded we're gonna publish the recording afterwards so a bit of",
    "start": "30840",
    "end": "37260"
  },
  {
    "text": "introduction a bit of housekeeping you won't be able to talk during the webinar but you are very welcome to type your",
    "start": "37260",
    "end": "45120"
  },
  {
    "text": "questions in the Q&A box and I'll collect them for after the webinar for",
    "start": "45120",
    "end": "51750"
  },
  {
    "text": "to us to Dinesh so without further ado I",
    "start": "51750",
    "end": "58020"
  },
  {
    "text": "will end it over to the net Dinesh for for the presentation thank you thanks",
    "start": "58020",
    "end": "64768"
  },
  {
    "text": "Andrew hello everybody thank you for joining today my name is Dinesh Trivedi I'm the",
    "start": "64769",
    "end": "71400"
  },
  {
    "text": "co-founder CTO of Apoorva and also the creator of this technology that I'm",
    "start": "71400",
    "end": "77159"
  },
  {
    "text": "going to talk about it's called apps which there is a pretty picture on screen here I'm going to get to it in a",
    "start": "77159",
    "end": "83970"
  },
  {
    "text": "bit but let me start with a couple observations around the broad trends",
    "start": "83970",
    "end": "90090"
  },
  {
    "text": "that we've been seeing the last several years so there's this application",
    "start": "90090",
    "end": "95430"
  },
  {
    "text": "decomposition and recomposition that's happening microservices paradigm enabled",
    "start": "95430",
    "end": "102180"
  },
  {
    "text": "by containers is driving the decomposition of otherwise monolithic and legacy applications there is a whole",
    "start": "102180",
    "end": "109680"
  },
  {
    "text": "host of benefits in doing that but then these services are logically separate",
    "start": "109680",
    "end": "116250"
  },
  {
    "text": "but not independent so naturally there'd be some problems that come because of",
    "start": "116250",
    "end": "122610"
  },
  {
    "text": "that and there is this other compensating trend which I can which I",
    "start": "122610",
    "end": "127710"
  },
  {
    "text": "think of as recomposition which is which is basically driven by service pair so",
    "start": "127710",
    "end": "133650"
  },
  {
    "text": "paradigm enabled by the sidecar proxy approach it's basically putting these",
    "start": "133650",
    "end": "138989"
  },
  {
    "text": "services back together into well-structured applications it's an interesting cycle of decomposition to",
    "start": "138989",
    "end": "146159"
  },
  {
    "text": "accomplishing that we're seeing here but if we look more closely at containers",
    "start": "146159",
    "end": "151579"
  },
  {
    "text": "the technology that enables this decomposition in microservices it's a",
    "start": "151579",
    "end": "157799"
  },
  {
    "text": "progression actually from pista missions to our solutions to containers it's a right abstraction it's an abstraction that is the application layer it is fit",
    "start": "157799",
    "end": "165150"
  },
  {
    "text": "to encapsulate all of the application state so that's that's good now you have",
    "start": "165150",
    "end": "173129"
  },
  {
    "text": "you have these problems with decomposition first of all when you when you have these services scattered across",
    "start": "173129",
    "end": "181170"
  },
  {
    "text": "the cluster they need to find each other their service discovery problem and there may be some dependency or ring",
    "start": "181170",
    "end": "186959"
  },
  {
    "text": "among these services which may be typically taking care with internal locking mechanisms of a monolithic",
    "start": "186959",
    "end": "192930"
  },
  {
    "text": "application now that's surfaces as an actual problem when it is decomposed and of course these services need to",
    "start": "192930",
    "end": "199889"
  },
  {
    "text": "authenticate themselves to each other they're not together or they're separate now and all of these needs observability",
    "start": "199889",
    "end": "205680"
  },
  {
    "text": "so these are the problems are gonna come out of the decomposition and service mesh is basically an app glue layer to",
    "start": "205680",
    "end": "212579"
  },
  {
    "text": "just all those issues now the question is if containers are the abstraction to",
    "start": "212579",
    "end": "221609"
  },
  {
    "text": "decompose these applications shouldn't they also take care of networking after",
    "start": "221609",
    "end": "228239"
  },
  {
    "text": "all containers abstract all of these resources to application level and that",
    "start": "228239",
    "end": "233609"
  },
  {
    "text": "includes networking so shouldn't containers address that problem already",
    "start": "233609",
    "end": "238639"
  },
  {
    "text": "before before I go into the region let me just you know talk about the some of",
    "start": "238639",
    "end": "245579"
  },
  {
    "text": "the details of the namespaces and and how this came about what do containers do right they take",
    "start": "245579",
    "end": "252359"
  },
  {
    "text": "all of the underlying physical resources abstract them to a level CPU becomes threads block device and storage device",
    "start": "252359",
    "end": "258810"
  },
  {
    "text": "has become final points virtual memory you know but when you look at networking",
    "start": "258810",
    "end": "264810"
  },
  {
    "text": "what is a Nik on the host is it still projected as",
    "start": "264810",
    "end": "269880"
  },
  {
    "text": "a network device inside the container it's a virtual equivalent but it is still a device artifact nevertheless so",
    "start": "269880",
    "end": "277770"
  },
  {
    "text": "there is a there's a fundamental misalignment when it comes to the network aspect of the containers if you",
    "start": "277770",
    "end": "287430"
  },
  {
    "start": "287000",
    "end": "473000"
  },
  {
    "text": "you know to appreciate how this happened this way I'm gonna take a brief detour to to",
    "start": "287430",
    "end": "295740"
  },
  {
    "text": "outline some of this prehistory actually I spent a lot of time thinking about",
    "start": "295740",
    "end": "301830"
  },
  {
    "text": "these problems as as part of my grad school work at Kona in the year 2001",
    "start": "301830",
    "end": "308370"
  },
  {
    "text": "2002 the problem that I was thinking about was how to encapsulate all of this",
    "start": "308370",
    "end": "314640"
  },
  {
    "text": "application state I was fascinated by virtual machines but then they have",
    "start": "314640",
    "end": "320340"
  },
  {
    "text": "their shortcomings now how can that encapsulation be done in in just",
    "start": "320340",
    "end": "326880"
  },
  {
    "text": "application application level so that was a problem and we were actually doing this for different purposes particularly",
    "start": "326880",
    "end": "333900"
  },
  {
    "text": "like migration and checkpointing of these applications in that in that",
    "start": "333900",
    "end": "339270"
  },
  {
    "text": "context we introduced this notion of pod we talked about this in our OS di 2002",
    "start": "339270",
    "end": "344970"
  },
  {
    "text": "paper that's that's where the kubernetes power actually comes from and then that",
    "start": "344970",
    "end": "352200"
  },
  {
    "text": "work we licensed to HP Labs I spent time looking at application of this pod",
    "start": "352200",
    "end": "358410"
  },
  {
    "text": "abstraction to checkpointing of distributed HPC applications MPI based",
    "start": "358410",
    "end": "366240"
  },
  {
    "text": "applications which is which is kind of an old-world equivalent of the modern service mesh micro services happen so",
    "start": "366240",
    "end": "372720"
  },
  {
    "text": "it's a you know say nothing no idea is really new but but after applying",
    "start": "372720",
    "end": "379490"
  },
  {
    "text": "containers to that problem exposed exposed some of these shortcomings at that point also how would we connect",
    "start": "379490",
    "end": "387210"
  },
  {
    "text": "these individual pieces of the application together in a way that that",
    "start": "387210",
    "end": "392910"
  },
  {
    "text": "aligns with the application of abstraction so those those",
    "start": "392910",
    "end": "398050"
  },
  {
    "text": "and that underlying technology became the basis for its company called meiosis",
    "start": "398050",
    "end": "403180"
  },
  {
    "text": "which we which we sold to IBM in 2005 and then IBM invested in pushing some of",
    "start": "403180",
    "end": "411340"
  },
  {
    "text": "those namespace and things like technology into the kernel and that some time and finally when those changes made",
    "start": "411340",
    "end": "417520"
  },
  {
    "text": "their way into the kernel that created opportunity for for building high-level abstractions in a talker and kubernetes",
    "start": "417520",
    "end": "423400"
  },
  {
    "text": "or the proliferation of of these technologies and and in the process",
    "start": "423400",
    "end": "430169"
  },
  {
    "text": "actually the networking aspect of containers was heavily influenced by the",
    "start": "430169",
    "end": "439270"
  },
  {
    "text": "way virtual machines did their networking and containers needed to",
    "start": "439270",
    "end": "445870"
  },
  {
    "text": "support the the use cases of virtual machines and and to that extent the",
    "start": "445870",
    "end": "450969"
  },
  {
    "text": "device abstraction was actually chosen that's not how we urgently implemented",
    "start": "450969",
    "end": "456759"
  },
  {
    "text": "it in the earlier stages of this work but but being influenced by the virtual",
    "start": "456759",
    "end": "462789"
  },
  {
    "text": "machines that's how the abstraction ended up being now there is an opportunity to undo some of this and",
    "start": "462789",
    "end": "470080"
  },
  {
    "text": "perhaps do it the right way you know let me also go over the evolution of the",
    "start": "470080",
    "end": "475960"
  },
  {
    "start": "473000",
    "end": "517000"
  },
  {
    "text": "network abstraction here this is the standard application operating system infrastructure stack the simple bare",
    "start": "475960",
    "end": "482440"
  },
  {
    "text": "metal underlay with virtual machines this overlay networking was introduced",
    "start": "482440",
    "end": "488199"
  },
  {
    "text": "that sits between our existing infrastructure and with containers and cloud and cloud native applications that",
    "start": "488199",
    "end": "493990"
  },
  {
    "text": "same abstraction the old abstraction is is stretched to accommodate the needs of these applications and and it actually",
    "start": "493990",
    "end": "500560"
  },
  {
    "text": "introduces problems so what really needs to happen is the destruction needs to be",
    "start": "500560",
    "end": "506979"
  },
  {
    "text": "stepped up closer to the application and that's kind of what I'm going to talk about the rest of the stock called apps",
    "start": "506979",
    "end": "512828"
  },
  {
    "text": "which and it is an application level networking abstraction so what this does",
    "start": "512829",
    "end": "518050"
  },
  {
    "start": "517000",
    "end": "543000"
  },
  {
    "text": "is this is this is also a progression it's an equivalent progression on the networking stack on the computer side we",
    "start": "518050",
    "end": "524709"
  },
  {
    "text": "have physical machines virtual machines and containers progressively going closer to the application on the",
    "start": "524709",
    "end": "530170"
  },
  {
    "text": "or you can save your physical networking works networking and then absolute it's kind of the up occasionally level",
    "start": "530170",
    "end": "536170"
  },
  {
    "text": "equivalent of containers on the networking stack let me go into the details of how this actually works so",
    "start": "536170",
    "end": "543000"
  },
  {
    "start": "543000",
    "end": "625000"
  },
  {
    "text": "what what we do is is abstract the",
    "start": "543000",
    "end": "549870"
  },
  {
    "text": "network artifact to application level so what how would applications think about",
    "start": "549870",
    "end": "554890"
  },
  {
    "text": "networking it's basically sockets and sessions what duplications want to do they probably",
    "start": "554890",
    "end": "560020"
  },
  {
    "text": "want to make an RPC call or serialize some structure as JSON that's applications view of networking",
    "start": "560020",
    "end": "567210"
  },
  {
    "text": "what actually does is it projects that view based on sockets something that an",
    "start": "567210",
    "end": "573040"
  },
  {
    "text": "application can relate to directly as opposed to the network interface and in order for the application to talk the",
    "start": "573040",
    "end": "578410"
  },
  {
    "text": "network interface you need all these intermediate layers so if you do it this way some of the some of the problems",
    "start": "578410",
    "end": "586480"
  },
  {
    "text": "associated with the decomposition can actually be addressed more effectively and at the same time retain the backward",
    "start": "586480",
    "end": "594400"
  },
  {
    "text": "compatibility for even legacy applications so if there is a challenge",
    "start": "594400",
    "end": "600010"
  },
  {
    "text": "in bringing some of these legacy applications to the new world of service flash because they have certain expectations they they use these archaic",
    "start": "600010",
    "end": "608260"
  },
  {
    "text": "protocols I mean they use UDP they may have certain specific dependencies on",
    "start": "608260",
    "end": "613600"
  },
  {
    "text": "the underlying network artifacts and those can be reconciled much more easily",
    "start": "613600",
    "end": "619290"
  },
  {
    "text": "with with a layer that's closer to the application so let me again go into the details of how this works ok so this is",
    "start": "619290",
    "end": "628060"
  },
  {
    "start": "625000",
    "end": "1099000"
  },
  {
    "text": "the architecture of apps which it has it",
    "start": "628060",
    "end": "634270"
  },
  {
    "text": "has two counterparts one that plugs into",
    "start": "634270",
    "end": "639520"
  },
  {
    "text": "the application itself think of it as application apps which client and the",
    "start": "639520",
    "end": "646990"
  },
  {
    "text": "other part is this apps which daemon the apps which client monitors the",
    "start": "646990",
    "end": "654370"
  },
  {
    "text": "applications network API particularly the BSD socket API as the application is",
    "start": "654370",
    "end": "661240"
  },
  {
    "text": "making calls like socket listen connect sex alcohol or even netlink anything",
    "start": "661240",
    "end": "667870"
  },
  {
    "text": "that tells the application about view of the underlying network all of those",
    "start": "667870",
    "end": "674170"
  },
  {
    "text": "calls are intercepted by by this by this ab switch client and it actually has",
    "start": "674170",
    "end": "682750"
  },
  {
    "text": "this trap generator the the trap generator traps these system calls and",
    "start": "682750",
    "end": "691590"
  },
  {
    "text": "forwards them to the daemon that is a trap handler which is the counterpart of",
    "start": "691590",
    "end": "697450"
  },
  {
    "text": "traps generator the trap handler receives those calls and actually",
    "start": "697450",
    "end": "702780"
  },
  {
    "text": "conducts all of applications networking on behalf of the application and let's",
    "start": "702780",
    "end": "709210"
  },
  {
    "text": "let's take an example here let's say there is a client which is running on one of the nodes in the cluster and it",
    "start": "709210",
    "end": "717340"
  },
  {
    "text": "makes a connect call it creates a socket and then it create it makes a connect call and it provides some IP address to",
    "start": "717340",
    "end": "726130"
  },
  {
    "text": "connect to and then on a different node there is a server which creates a socket",
    "start": "726130",
    "end": "732550"
  },
  {
    "text": "and then performs a bind and listen essentially making that sock into a listening socket and server at that",
    "start": "732550",
    "end": "738520"
  },
  {
    "text": "point apps which records the existence of this service this new server that has",
    "start": "738520",
    "end": "745750"
  },
  {
    "text": "come up and it doesn't have to be TCP it will be uniquely as well but the service comes up and apps which makes a note of",
    "start": "745750",
    "end": "752140"
  },
  {
    "text": "it and then communicates the existence of this server to other nodes in the",
    "start": "752140",
    "end": "757660"
  },
  {
    "text": "cluster or other apps which demons running on other nodes in the cluster now the client on the first node when it",
    "start": "757660",
    "end": "763510"
  },
  {
    "text": "tries to connect to a particular IP address AB switch demon knows about this",
    "start": "763510",
    "end": "769270"
  },
  {
    "text": "IP address but this client is connecting to because it already saw a server come",
    "start": "769270",
    "end": "774730"
  },
  {
    "text": "upon the IP address elsewhere and and in fact when the server comes up and when",
    "start": "774730",
    "end": "781300"
  },
  {
    "text": "it is doing the bind apps which actually binds to perhaps an alternate IP address",
    "start": "781300",
    "end": "788110"
  },
  {
    "text": "that is available on the other line post and the IP address that the application is trying to bind to and the bud and the",
    "start": "788110",
    "end": "794860"
  },
  {
    "text": "address that apps which email answer John host could be different so there is a virtual virtual overlay that is formed",
    "start": "794860",
    "end": "803250"
  },
  {
    "text": "between the slide and server the client thinks that it is connecting to a certain IP address I say 1 1 1 1 but AB",
    "start": "803250",
    "end": "810240"
  },
  {
    "text": "switch daemon would translate it to the appropriate physical IP address on which the server is actually bound to and then",
    "start": "810240",
    "end": "817170"
  },
  {
    "text": "on the server side after we do the reverse translation back to the back to",
    "start": "817170",
    "end": "822900"
  },
  {
    "text": "the server so this is one instance of how you can do overlay without actually",
    "start": "822900",
    "end": "828930"
  },
  {
    "text": "getting the data path now once the connection is actually established a switch is completely out of the picture",
    "start": "828930",
    "end": "834000"
  },
  {
    "text": "the FD or the file description socket that is returned to the application doesn't doesn't have anything that says",
    "start": "834000",
    "end": "842660"
  },
  {
    "text": "what IP addresses are actually being used the application may do a get sock",
    "start": "842660",
    "end": "849180"
  },
  {
    "text": "name or get Pierre name in which case again apps which would get in the way",
    "start": "849180",
    "end": "855330"
  },
  {
    "text": "and and it would translate the idea to Z such that application would see a first",
    "start": "855330",
    "end": "861180"
  },
  {
    "text": "consistent view of the underlying network so going into the details of",
    "start": "861180",
    "end": "868470"
  },
  {
    "text": "this apps which daemon here it has it has a service table which is a",
    "start": "868470",
    "end": "874500"
  },
  {
    "text": "distributed table consisting of all the servers that have come up on all the",
    "start": "874500",
    "end": "880410"
  },
  {
    "text": "nodes in the cluster so this is going to the topology here where I'm showing 3 3",
    "start": "880410",
    "end": "886620"
  },
  {
    "text": "apps which nodes applications all plugged into this apps which daemon and apps which client is it is actually",
    "start": "886620",
    "end": "894900"
  },
  {
    "text": "running in the context of the application itself and the the",
    "start": "894900",
    "end": "902130"
  },
  {
    "text": "communication among the apps which demons is is conductor overhead gossip channel that stitches together these",
    "start": "902130",
    "end": "908880"
  },
  {
    "text": "nodes into a cluster and there could be other clusters of apps which and each",
    "start": "908880",
    "end": "914610"
  },
  {
    "text": "cluster would have a gateway and all gateways participate in a different Federation as a channel so basically you",
    "start": "914610",
    "end": "922560"
  },
  {
    "text": "can have you can have multiple clusters all of them stitched together into into",
    "start": "922560",
    "end": "929370"
  },
  {
    "text": "n network and applications on on one cluster can reach applications and",
    "start": "929370",
    "end": "936779"
  },
  {
    "text": "servers on a different cluster over these IP addresses or these identities",
    "start": "936779",
    "end": "942960"
  },
  {
    "text": "which are decoupled from the underlying network identities so that's the that's",
    "start": "942960",
    "end": "949740"
  },
  {
    "text": "the high-level view but as you can imagine there are many interesting",
    "start": "949740",
    "end": "955260"
  },
  {
    "text": "things you can do once you have this layer the difficulty in being able to do this actually is is intercepting the API",
    "start": "955260",
    "end": "966180"
  },
  {
    "text": "without performance cost and without requiring changes to the application or",
    "start": "966180",
    "end": "972990"
  },
  {
    "text": "the underlying infrastructure this should actually work for any kind of application and we've tested this with",
    "start": "972990",
    "end": "979260"
  },
  {
    "text": "IP in websphere and s AP or libras and things like that and the performance",
    "start": "979260",
    "end": "985770"
  },
  {
    "text": "cost also has to be very low or in fact in this particular case it can be even",
    "start": "985770",
    "end": "993360"
  },
  {
    "text": "faster than native and explain how and the other requirement for this is that",
    "start": "993360",
    "end": "998700"
  },
  {
    "text": "it should not require privilege it shouldn't require a kernel module or or even run as root so AB switch basically",
    "start": "998700",
    "end": "1007900"
  },
  {
    "text": "meets these requirements it doesn't require privilege it doesn't have performance cost and it is completely",
    "start": "1007900",
    "end": "1014480"
  },
  {
    "text": "transparent to applications and also their underlying network infrastructure",
    "start": "1014480",
    "end": "1019870"
  },
  {
    "text": "so now why do we do this and how does it plug into the service mesh so I'm just",
    "start": "1019870",
    "end": "1027260"
  },
  {
    "text": "showing here the architecture of Sto and",
    "start": "1027260",
    "end": "1032360"
  },
  {
    "text": "how how a client and a server would communicate in the context of astillero you know so on the left you see the",
    "start": "1032360",
    "end": "1040428"
  },
  {
    "text": "client is redirected to talk to its sidecar proxy and there's some iptables",
    "start": "1040429",
    "end": "1045829"
  },
  {
    "text": "rules and this can be and there's overhead in doing that but that can be optimized and there's fantastic work",
    "start": "1045829",
    "end": "1051320"
  },
  {
    "text": "that's just being done to address that overhead and and there and the",
    "start": "1051320",
    "end": "1057050"
  },
  {
    "text": "communication would go from the local site to our proxy to the remote site by proxy and then to the server so that",
    "start": "1057050",
    "end": "1062630"
  },
  {
    "text": "that's the multi-hop progression right in the case of apps which actually with",
    "start": "1062630",
    "end": "1068260"
  },
  {
    "text": "with apps which integrated into sto the communication is more directly goes",
    "start": "1068260",
    "end": "1073280"
  },
  {
    "text": "straight from trying to servers no no proxy involved in this case because proxy is ultimately a way to get in the",
    "start": "1073280",
    "end": "1080510"
  },
  {
    "text": "path of interactions between these services and if there is a way to do it without being the data path by just",
    "start": "1080510",
    "end": "1088070"
  },
  {
    "text": "swiss ling foreigners at the connect and the control api level then that that",
    "start": "1088070",
    "end": "1094910"
  },
  {
    "text": "would result in this optimized flow and",
    "start": "1094910",
    "end": "1100580"
  },
  {
    "start": "1099000",
    "end": "1165000"
  },
  {
    "text": "also if you look at how the container networking is currently done so there's",
    "start": "1100580",
    "end": "1106190"
  },
  {
    "text": "this the application running inside the container would see the one end of the",
    "start": "1106190",
    "end": "1112070"
  },
  {
    "text": "we eat there the other end gets plugged into the docker bridge and then there's probably some kind of overlay network",
    "start": "1112070",
    "end": "1120590"
  },
  {
    "text": "that connects these containers across hosts and then there's there's multiple layers of back-and-forth processing that",
    "start": "1120590",
    "end": "1127370"
  },
  {
    "text": "is occurring in the in the most interesting case actually you can you",
    "start": "1127370",
    "end": "1134000"
  },
  {
    "text": "can end up going through this stack seven to eight times even though the",
    "start": "1134000",
    "end": "1139640"
  },
  {
    "text": "application that I'm trying to reach may be running right next to me on the same host topologically I'm actually sharing",
    "start": "1139640",
    "end": "1146810"
  },
  {
    "text": "the row space with this other application but for me to reach this have to go through all this processing right so all of this will also be",
    "start": "1146810",
    "end": "1153620"
  },
  {
    "text": "removed in the case of a switch because because the the client and server are",
    "start": "1153620",
    "end": "1158630"
  },
  {
    "text": "connected simply over directly over a socket cutting through some these layers and we've experimented with the",
    "start": "1158630",
    "end": "1168260"
  },
  {
    "start": "1165000",
    "end": "1195000"
  },
  {
    "text": "integration of AB switch into Sto and we see as much as eighteen times",
    "start": "1168260",
    "end": "1175870"
  },
  {
    "text": "improvement in latency in p50 latency and there is a blog that I am listing here at the bottom of screen it's it",
    "start": "1175870",
    "end": "1183440"
  },
  {
    "text": "basically goes with the details of the integration and basically shows that you",
    "start": "1183440",
    "end": "1188750"
  },
  {
    "text": "can you can bypass these layers",
    "start": "1188750",
    "end": "1193150"
  },
  {
    "start": "1195000",
    "end": "1289000"
  },
  {
    "text": "the other aspect that I was talking about regarding security right",
    "start": "1195460",
    "end": "1201760"
  },
  {
    "text": "applications already can access network today on the on the host an application",
    "start": "1202030",
    "end": "1207530"
  },
  {
    "text": "can access the network on the host even as a regular user but the moment that",
    "start": "1207530",
    "end": "1213080"
  },
  {
    "text": "application is placed in the network namespace of a container it loses all",
    "start": "1213080",
    "end": "1218420"
  },
  {
    "text": "connectivity and a privileged user would need to intervene and do the required",
    "start": "1218420",
    "end": "1225890"
  },
  {
    "text": "plumbing for this container to get Network and that needs to go through the suite fair and the linux bridge that",
    "start": "1225890",
    "end": "1231559"
  },
  {
    "text": "gets plugged into not a link host so this additional steps required required privilege and in fact this is the this",
    "start": "1231559",
    "end": "1240559"
  },
  {
    "text": "is the main reason for containers container adoption being being",
    "start": "1240559",
    "end": "1249980"
  },
  {
    "text": "influenced by this additional requirement of privilege you know otherwise the privilege footprint of the",
    "start": "1249980",
    "end": "1256580"
  },
  {
    "text": "application should be identical to the privilege footprint off its containerized equivalent so what has changed here in fact there is no",
    "start": "1256580",
    "end": "1263679"
  },
  {
    "text": "container object in the kernel but but just by running an application as a",
    "start": "1263679",
    "end": "1270230"
  },
  {
    "text": "containerized application you need this additional privilege so the privilege fruit is expanded and if there is a way",
    "start": "1270230",
    "end": "1278330"
  },
  {
    "text": "to not require the privilege now the additional barrier for container",
    "start": "1278330",
    "end": "1284059"
  },
  {
    "text": "adoption would be more freely and apps which can address that as well see once",
    "start": "1284059",
    "end": "1291050"
  },
  {
    "start": "1289000",
    "end": "1656000"
  },
  {
    "text": "you can imagine right you can imagine that the layer of interposition right",
    "start": "1291050",
    "end": "1296990"
  },
  {
    "text": "below application has interesting implications it's kind of like what we",
    "start": "1296990",
    "end": "1302270"
  },
  {
    "text": "have been doing with with software-defined networking or network",
    "start": "1302270",
    "end": "1307520"
  },
  {
    "text": "virtualization all of the all of the functionality is that the network",
    "start": "1307520",
    "end": "1313130"
  },
  {
    "text": "virtualization can provide can also be done at this at this layer closer to the application in fact anything that the",
    "start": "1313130",
    "end": "1318650"
  },
  {
    "text": "application would need in terms of networking can actually provide it more effectively at this layer so I'm just",
    "start": "1318650",
    "end": "1325580"
  },
  {
    "text": "listing here some of these capabilities that absolute support the first one here",
    "start": "1325580",
    "end": "1330650"
  },
  {
    "text": "is auto-generated service registry because acts which actually knows where",
    "start": "1330650",
    "end": "1336380"
  },
  {
    "text": "the servers are actually coming up it either it has this distributed service",
    "start": "1336380",
    "end": "1341840"
  },
  {
    "text": "table which keeps track of all of these services and you don't need the the",
    "start": "1341840",
    "end": "1347390"
  },
  {
    "text": "service to go and register itself with a centralized service registry and this is",
    "start": "1347390",
    "end": "1354050"
  },
  {
    "text": "automatically curate and when the service goes away its entries are manually moved and and in fact a switch",
    "start": "1354050",
    "end": "1360290"
  },
  {
    "text": "capture some additional metadata around that server and populates the tables of the clients looking for the service can",
    "start": "1360290",
    "end": "1365960"
  },
  {
    "text": "then query this this service registry and and connect them an in fact",
    "start": "1365960",
    "end": "1372860"
  },
  {
    "text": "automatic automatic service dependency discovery can also be performed because",
    "start": "1372860",
    "end": "1378590"
  },
  {
    "text": "the interactions among the clients and",
    "start": "1378590",
    "end": "1384320"
  },
  {
    "text": "servers can be interleaved in a way such",
    "start": "1384320",
    "end": "1389780"
  },
  {
    "text": "that the the the clients that are",
    "start": "1389780",
    "end": "1394940"
  },
  {
    "text": "connecting to the servers would be automatically waited for the service to come up so that there is no case where",
    "start": "1394940",
    "end": "1402320"
  },
  {
    "text": "the client just falls to floor because the service hasn't yet come up yet no I",
    "start": "1402320",
    "end": "1408080"
  },
  {
    "text": "mean the application may be up but the service may not be ready yet there are other ways of handling these",
    "start": "1408080",
    "end": "1414140"
  },
  {
    "text": "kinds of problems but a more effective way would be to actually do this",
    "start": "1414140",
    "end": "1421540"
  },
  {
    "text": "interleaving appropriately at the call level which mean clients and servers and that's there's actually there's a",
    "start": "1421540",
    "end": "1427700"
  },
  {
    "text": "there's a blog that I wrote recently on sto about that integration in fact it",
    "start": "1427700",
    "end": "1434090"
  },
  {
    "text": "also supports applications like IBM WebSphere the details are in the blog as well you can also do load balancing for",
    "start": "1434090",
    "end": "1441830"
  },
  {
    "text": "example the client is connecting to an IP address we'll say one one one one and there may be multiple instances of that",
    "start": "1441830",
    "end": "1448070"
  },
  {
    "text": "service that's backing the IP address and apps which knows about all of them and it can it can decide which",
    "start": "1448070",
    "end": "1454520"
  },
  {
    "text": "particular instance of that service to connect this client to so you're doing load balancing but again without getting",
    "start": "1454520",
    "end": "1461030"
  },
  {
    "text": "into the data path not as a proxy or or doing",
    "start": "1461030",
    "end": "1466130"
  },
  {
    "text": "load-balancing at the the network packet layer so you have and you can do this on",
    "start": "1466130",
    "end": "1473270"
  },
  {
    "text": "the client side obviously it is more efficient and the other point here is",
    "start": "1473270",
    "end": "1480159"
  },
  {
    "text": "the clients may have certain dependencies on the server let's say I",
    "start": "1480159",
    "end": "1485570"
  },
  {
    "text": "have some static configuration in my client which points to the service that",
    "start": "1485570",
    "end": "1492500"
  },
  {
    "text": "I'm connecting to but the service has moved for whatever reason maybe the",
    "start": "1492500",
    "end": "1497860"
  },
  {
    "text": "maybe the client and maybe the server has moved migrated to cloud and they've got a different IP address so there are",
    "start": "1497860",
    "end": "1504200"
  },
  {
    "text": "ways of reducing these kinds of rounds but but actually in in apps which this",
    "start": "1504200",
    "end": "1509270"
  },
  {
    "text": "is this this gives actual level of flexibility if the server I get this changes you don't have to reconfigure",
    "start": "1509270",
    "end": "1516919"
  },
  {
    "text": "the client but it can be automatically reprogrammed to to point to the new",
    "start": "1516919",
    "end": "1523399"
  },
  {
    "text": "location of the server and as I was showing earlier with the cluster",
    "start": "1523399",
    "end": "1528919"
  },
  {
    "text": "topology of apps which you can have a flat network that extends across",
    "start": "1528919",
    "end": "1534250"
  },
  {
    "text": "multiple clouds and on primont cloud so basically the network would all look",
    "start": "1534250",
    "end": "1540710"
  },
  {
    "text": "flat even across these boundaries of data centers and clouds you can do",
    "start": "1540710",
    "end": "1549529"
  },
  {
    "text": "transparent TLS insertion if you if you have a client so we're talking then you",
    "start": "1549529",
    "end": "1554720"
  },
  {
    "text": "can the check box you can say all communication to me would be intercepted",
    "start": "1554720",
    "end": "1559850"
  },
  {
    "text": "and unencrypted this is this is done just with the proxy functionality and",
    "start": "1559850",
    "end": "1565580"
  },
  {
    "text": "natural supports that as well and this last point is particularly interesting better than native performance I alluded",
    "start": "1565580",
    "end": "1571580"
  },
  {
    "text": "to earlier so basically when again coming back to a client and server talking if they happen",
    "start": "1571580",
    "end": "1579380"
  },
  {
    "text": "to be co-located if the client and server happen to be co-located and absolute observes that and let's say",
    "start": "1579380",
    "end": "1585049"
  },
  {
    "text": "this client is asking for a TCP socket and",
    "start": "1585049",
    "end": "1591730"
  },
  {
    "text": "these are collocated services endpoints apps which actually returns a UNIX ID",
    "start": "1591930",
    "end": "1598650"
  },
  {
    "text": "when the application is asking for a TCP socket ab switch transparently returns a UNIX sockets essentially making the",
    "start": "1598650",
    "end": "1606080"
  },
  {
    "text": "connection into a UNIX connection even though the applications expecting a TCP connection and application would know",
    "start": "1606080",
    "end": "1611610"
  },
  {
    "text": "the difference and when it makes calls like get sock name or get for your name it would return appropriate endpoint of",
    "start": "1611610",
    "end": "1618930"
  },
  {
    "text": "disease as expected with the application but application would just perform better because now the communication is",
    "start": "1618930",
    "end": "1624690"
  },
  {
    "text": "a crane over a UNIX socket as opposed to a TCP socket so basically this list can",
    "start": "1624690",
    "end": "1632610"
  },
  {
    "text": "shows what is possible at this layer these the additional awareness of",
    "start": "1632610",
    "end": "1641480"
  },
  {
    "text": "applications internals by being at the layer closer to application enables some",
    "start": "1641480",
    "end": "1648270"
  },
  {
    "text": "of these capabilities that are otherwise hard to perform and the lower network",
    "start": "1648270",
    "end": "1654090"
  },
  {
    "text": "layer so that concludes most of the",
    "start": "1654090",
    "end": "1659520"
  },
  {
    "start": "1656000",
    "end": "1691000"
  },
  {
    "text": "material that I wanted to cover here and you can actually try this out this is available on docker hub and there's a",
    "start": "1659520",
    "end": "1666470"
  },
  {
    "text": "set of references that I that I have pasted here lots of people have played",
    "start": "1666470",
    "end": "1673290"
  },
  {
    "text": "with it some written blogs I have all of them here",
    "start": "1673290",
    "end": "1679160"
  },
  {
    "text": "that is kind of an essential place for finding some misinformation I'm open for",
    "start": "1681430",
    "end": "1687880"
  },
  {
    "text": "questions now Thank You Dinesh there was a great",
    "start": "1687880",
    "end": "1694150"
  },
  {
    "start": "1691000",
    "end": "1836000"
  },
  {
    "text": "presentation and a spark a lot of interest a lot of questions so we have about 10 now so good that we are a bit",
    "start": "1694150",
    "end": "1703270"
  },
  {
    "text": "early to finish so I'm gonna just start repeating the questions and remember",
    "start": "1703270",
    "end": "1710380"
  },
  {
    "text": "there are ten so please be brief and my for all time so the first question is",
    "start": "1710380",
    "end": "1715960"
  },
  {
    "text": "from Nik and he wants to know what happens when the up switch demon crashes I guess in support I suppose also have",
    "start": "1715960",
    "end": "1722440"
  },
  {
    "text": "the same question where is the state saved for the up switch right a switch",
    "start": "1722440",
    "end": "1731170"
  },
  {
    "text": "is actually not involved in the communication itself it is arbitrating",
    "start": "1731170",
    "end": "1740200"
  },
  {
    "text": "the connectivity the initial connect and after that apps was not involved so",
    "start": "1740200",
    "end": "1745300"
  },
  {
    "text": "existing applications any connection and that has already been negotiated that",
    "start": "1745300",
    "end": "1751660"
  },
  {
    "text": "continues to go on that's not affected and when absolute demon comes back it",
    "start": "1751660",
    "end": "1758800"
  },
  {
    "text": "knows about the listening sockets and it",
    "start": "1758800",
    "end": "1764350"
  },
  {
    "text": "is going to rebind them while this restart of apps which demon is happening",
    "start": "1764350",
    "end": "1771900"
  },
  {
    "text": "during that time the the service may not be available and at that point but then",
    "start": "1771900",
    "end": "1779860"
  },
  {
    "text": "you know this is detected and we started and apps which keeps track of the listening sockets and its recreates them",
    "start": "1779860",
    "end": "1787330"
  },
  {
    "text": "and then the services will be back online but any existing pre-negotiated connection will continue to run existing",
    "start": "1787330",
    "end": "1793810"
  },
  {
    "text": "applications are not affected okay clear so only only the the was happening doing",
    "start": "1793810",
    "end": "1800920"
  },
  {
    "text": "the crash will not be up there but when the demon comes back up again will just reconstruct all the connection the",
    "start": "1800920",
    "end": "1809860"
  },
  {
    "text": "server when there is a server that is making a let's created a socketing and is calling",
    "start": "1809860",
    "end": "1815200"
  },
  {
    "text": "listen at that point apps which demon is actually performing listen on behalf of",
    "start": "1815200",
    "end": "1820240"
  },
  {
    "text": "the application navigation is still running and when apps which diamond eyes that listening socket actually dies when",
    "start": "1820240",
    "end": "1826180"
  },
  {
    "text": "apps which comes back its knows that it was listening on this on this socket and",
    "start": "1826180",
    "end": "1831550"
  },
  {
    "text": "and it's going to recreate that state and and the service would be fine okay",
    "start": "1831550",
    "end": "1837540"
  },
  {
    "start": "1836000",
    "end": "1905000"
  },
  {
    "text": "next question is from an almost so is asking to minimize size the Bible is in",
    "start": "1837540",
    "end": "1844060"
  },
  {
    "text": "my team's containers are normally statically linked those ups which work with statically linked binary is all",
    "start": "1844060",
    "end": "1849550"
  },
  {
    "text": "which we need to switch to dynamic linking that's an important question actually I I probably didn't emphasize",
    "start": "1849550",
    "end": "1857380"
  },
  {
    "text": "enough there are three properties that need to be met here first",
    "start": "1857380",
    "end": "1862720"
  },
  {
    "text": "in fact the probably the most important one is transparency to application on the generality of support what are the",
    "start": "1862720",
    "end": "1869410"
  },
  {
    "text": "applications that apps which can work for it is actually any application statically linked or dynamically linked",
    "start": "1869410",
    "end": "1876280"
  },
  {
    "text": "or Java or applications which are not",
    "start": "1876280",
    "end": "1883570"
  },
  {
    "text": "particularly well behaved that's obviously very important so yeah there is no restriction on the kinda binaries",
    "start": "1883570",
    "end": "1890500"
  },
  {
    "text": "this supports and and the question is fair because most of the earlier",
    "start": "1890500",
    "end": "1895750"
  },
  {
    "text": "techniques relied on techniques like le preload which depend on dynamically",
    "start": "1895750",
    "end": "1902080"
  },
  {
    "text": "linked applications but it is not the case with apps which I say in fact you've mentioned WebSphere as an example",
    "start": "1902080",
    "end": "1909100"
  },
  {
    "start": "1905000",
    "end": "2025000"
  },
  {
    "text": "so that's clearly a legacy application right another question from Peter can",
    "start": "1909100",
    "end": "1915460"
  },
  {
    "text": "this do dynamic traffic routing using HTTP error sort of routing based on yes",
    "start": "1915460",
    "end": "1922300"
  },
  {
    "text": "on the on the requests like l7 routing very important question as well I've",
    "start": "1922300",
    "end": "1928360"
  },
  {
    "text": "talked about this in in that blog actually yes it does do that and the way",
    "start": "1928360",
    "end": "1936280"
  },
  {
    "text": "that would work is if the user chooses",
    "start": "1936280",
    "end": "1942690"
  },
  {
    "text": "that kind of deep inspection then apps which would offload the data traffic",
    "start": "1942690",
    "end": "1951360"
  },
  {
    "text": "normally it doesn't intercept read and write and send message and receive message you know the data path calls but",
    "start": "1951360",
    "end": "1958060"
  },
  {
    "text": "it can do so and and in fact what it would do then is it offloads the the",
    "start": "1958060",
    "end": "1965500"
  },
  {
    "text": "processing of HTTP headers to plugins and and the way does it is somewhat were",
    "start": "1965500",
    "end": "1972330"
  },
  {
    "text": "efficient than directly intercepting the data path calls it actually passes the",
    "start": "1972330",
    "end": "1978040"
  },
  {
    "text": "FD so the FB the socket descriptor that apps which accepts that FD is passed to",
    "start": "1978040",
    "end": "1986980"
  },
  {
    "text": "the plug-in and the plug-in will the",
    "start": "1986980",
    "end": "1992440"
  },
  {
    "text": "plug-in could be Envoy or it could be it could be any proxy and it would then",
    "start": "1992440",
    "end": "1997870"
  },
  {
    "text": "receive that FB as opposed to listening on a different FD and then getting the",
    "start": "1997870",
    "end": "2004230"
  },
  {
    "text": "traffic on it it actually receives it's as if it's as if the Envoy proxy has",
    "start": "2004230",
    "end": "2011430"
  },
  {
    "text": "acquired some of these capabilities of apps which and apps which facilitates that and then of course the HTTP plugins",
    "start": "2011430",
    "end": "2019230"
  },
  {
    "text": "and all the processing would be done by own by itself so that integration talked about in in the blog here ok so you",
    "start": "2019230",
    "end": "2028770"
  },
  {
    "start": "2025000",
    "end": "2109000"
  },
  {
    "text": "still need a proxy to do deep inspection of the OT HTTP header yes in the yes in",
    "start": "2028770",
    "end": "2038040"
  },
  {
    "text": "a more efficient way yeah so there is a fast path that apps which supports if",
    "start": "2038040",
    "end": "2045360"
  },
  {
    "text": "the if the deep inspection is not needed but if it is needed then it hands it off to the on web proxy and there are many",
    "start": "2045360",
    "end": "2052290"
  },
  {
    "text": "places where these optimizations are enabled for example maybe you are just",
    "start": "2052290",
    "end": "2059129"
  },
  {
    "text": "making the traffic decision based on the header just the header in which case you",
    "start": "2059130",
    "end": "2065610"
  },
  {
    "text": "actually don't need the proxy because the header occurs right at the first call so you have you do the initial read",
    "start": "2065610",
    "end": "2074280"
  },
  {
    "text": "actually what absolutely does is it doesn't do the it does the peak there is a message peak",
    "start": "2074280",
    "end": "2079419"
  },
  {
    "text": "option to receive message system calls with which it can look at that you can peek at the header and based on that it",
    "start": "2079419",
    "end": "2087158"
  },
  {
    "text": "can make a decision and and then after that it gets out of the data path so you can actually do some of these things",
    "start": "2087159",
    "end": "2094230"
  },
  {
    "text": "without requiring a proxy you can actually do this processing looking at",
    "start": "2094230",
    "end": "2102309"
  },
  {
    "text": "the HTTP headers without without being the data path throughout the connection because relevant information is only at",
    "start": "2102309",
    "end": "2108069"
  },
  {
    "text": "the beginning I see cool next question",
    "start": "2108069",
    "end": "2113530"
  },
  {
    "text": "is about would apps which be able to end all say an increasing information to",
    "start": "2113530",
    "end": "2118780"
  },
  {
    "text": "something like Zipkin like the avoid proxies do or do cease to find a different way to get that fish is always",
    "start": "2118780",
    "end": "2124450"
  },
  {
    "text": "about indeed how to get tracing out of apps which that particular functionality",
    "start": "2124450",
    "end": "2133210"
  },
  {
    "text": "is not well formed in the current implementation that's out there but it",
    "start": "2133210",
    "end": "2140170"
  },
  {
    "text": "is available the average demon itself produces copious amounts of logs and and",
    "start": "2140170",
    "end": "2147130"
  },
  {
    "text": "they can be mined for tracing some of these some of these events can be pushed",
    "start": "2147130",
    "end": "2153069"
  },
  {
    "text": "to time series database and analyzed but because of the richness of events that",
    "start": "2153069",
    "end": "2160990"
  },
  {
    "text": "AB switch tracks that's that's an important valuable use of apps which but",
    "start": "2160990",
    "end": "2168700"
  },
  {
    "text": "it is currently not integrated with Zipkin and other tools like that okay so",
    "start": "2168700",
    "end": "2175569"
  },
  {
    "start": "2174000",
    "end": "2264000"
  },
  {
    "text": "it's a work in progress probably decorating open tracing for month things",
    "start": "2175569",
    "end": "2180579"
  },
  {
    "text": "next question is about so this integrates well with kubernetes but is",
    "start": "2180579",
    "end": "2186339"
  },
  {
    "text": "there a working progress on any work done on integrating with docker swarm you know actually there is no there's no",
    "start": "2186339",
    "end": "2196150"
  },
  {
    "text": "specific integration required as it is apps which daemon and the client are",
    "start": "2196150",
    "end": "2202529"
  },
  {
    "text": "both packaged as one statically linked binary it is all implemented in go",
    "start": "2202529",
    "end": "2208490"
  },
  {
    "text": "with some C and a little assembly parts but ultimately it is a static binary and",
    "start": "2208490",
    "end": "2214090"
  },
  {
    "text": "and one way to run apps which with with swarm or docker is you just instead of",
    "start": "2214090",
    "end": "2223340"
  },
  {
    "text": "running your application you would prefix that with a X X is the absolute binary command so you would you just do",
    "start": "2223340",
    "end": "2230780"
  },
  {
    "text": "you know you can do the amount of apps which binary into the container and then",
    "start": "2230780",
    "end": "2236030"
  },
  {
    "text": "run that binary in the container in place of the entry point for the container and then pass the application",
    "start": "2236030",
    "end": "2242270"
  },
  {
    "text": "in its arguments as arguments to apps which so if you did that then you",
    "start": "2242270",
    "end": "2248660"
  },
  {
    "text": "basically are running apps which integrated with docker and there are",
    "start": "2248660",
    "end": "2255230"
  },
  {
    "text": "tools you can make this change this doesn't require change to darker or this doesn't require change the application",
    "start": "2255230",
    "end": "2260620"
  },
  {
    "text": "it's only a change to your compose file ok so it's just a shell around your",
    "start": "2260620",
    "end": "2267980"
  },
  {
    "start": "2264000",
    "end": "2278000"
  },
  {
    "text": "application this egg's finally so it will is integrated with anything you can think of even there's no specific",
    "start": "2267980",
    "end": "2276350"
  },
  {
    "text": "dependencies right cool next question is from nick again how",
    "start": "2276350",
    "end": "2282980"
  },
  {
    "start": "2278000",
    "end": "2291000"
  },
  {
    "text": "does ups which does l7 load balancing yeah I think I think I covered some of",
    "start": "2282980",
    "end": "2290360"
  },
  {
    "text": "this earlier yeah ok so something more",
    "start": "2290360",
    "end": "2296120"
  },
  {
    "start": "2291000",
    "end": "2327000"
  },
  {
    "text": "about transparent TLS in session so you mention it is one of the features how",
    "start": "2296120",
    "end": "2302000"
  },
  {
    "text": "does it work in detail right this works with the proxy so there is a built-in",
    "start": "2302000",
    "end": "2307940"
  },
  {
    "text": "proxy actually if if you if you're not pointing as switch to an external proxy",
    "start": "2307940",
    "end": "2314480"
  },
  {
    "text": "like envoy there is a built-in proxy that actually does this so it's not it's not particularly distinguished this is",
    "start": "2314480",
    "end": "2322520"
  },
  {
    "text": "done the way any other proxy would do except it is built into Apps which comes out of the box you can provide a key and",
    "start": "2322520",
    "end": "2331250"
  },
  {
    "start": "2327000",
    "end": "2362000"
  },
  {
    "text": "a and and it would it will actually intercept the data calls and calls as",
    "start": "2331250",
    "end": "2338600"
  },
  {
    "text": "well ok so they still no sir ticket management management like like",
    "start": "2338600",
    "end": "2344510"
  },
  {
    "text": "citadel in easy or or no sorry it's up to you providing the keys the",
    "start": "2344510",
    "end": "2349820"
  },
  {
    "text": "certificates and everything yeah so it takes key as an argument and does",
    "start": "2349820",
    "end": "2354890"
  },
  {
    "text": "the encryption so that's not a yeah so it has the built in support but it's not integrated with external tools okay so",
    "start": "2354890",
    "end": "2363770"
  },
  {
    "start": "2362000",
    "end": "2417000"
  },
  {
    "text": "this Maura this next question is more of clarification so to make sure we",
    "start": "2363770",
    "end": "2369710"
  },
  {
    "text": "understand ups which doesn't eliminate traditional approximate we nose in a Cobra's cluster but as a lay of seven",
    "start": "2369710",
    "end": "2376130"
  },
  {
    "text": "integration so the routing to another pod is more efficient is that correct list like guess coupon it is networking",
    "start": "2376130",
    "end": "2384380"
  },
  {
    "text": "in fact this can be apps which can be used as a networking medium for odds",
    "start": "2384380",
    "end": "2390730"
  },
  {
    "text": "which doesn't require privilege which doesn't require these additional layers",
    "start": "2390730",
    "end": "2396980"
  },
  {
    "text": "of heat pair and the bridge and things like that so it makes communities networking more efficient but actually",
    "start": "2396980",
    "end": "2402530"
  },
  {
    "text": "kubernetes doesn't do anything special about l7 and and to that extent apps",
    "start": "2402530",
    "end": "2409190"
  },
  {
    "text": "which actually works fine for communities and for l7 of course we talk about that so for that it uses the",
    "start": "2409190",
    "end": "2416180"
  },
  {
    "text": "section proxy yes so another question is",
    "start": "2416180",
    "end": "2422060"
  },
  {
    "start": "2417000",
    "end": "2492000"
  },
  {
    "text": "about the size and the scale that you tested up switch wait so how many for",
    "start": "2422060",
    "end": "2428030"
  },
  {
    "text": "the cluster can you put together and was the maximum size of the individual",
    "start": "2428030",
    "end": "2433520"
  },
  {
    "text": "caster number of hosts you tested do it we have done testing in a in a lab kind",
    "start": "2433520",
    "end": "2443839"
  },
  {
    "text": "of environment with with as many as a couple hundred nodes actually a couple",
    "start": "2443839",
    "end": "2451400"
  },
  {
    "text": "hundred instances and in terms of real",
    "start": "2451400",
    "end": "2459099"
  },
  {
    "text": "real-life testing with hundreds of nodes of deployment that is working progress",
    "start": "2459099",
    "end": "2465819"
  },
  {
    "text": "and in terms of the breadth of application support we've tested with all kinds of applications almost I mean",
    "start": "2465819",
    "end": "2473329"
  },
  {
    "text": "we've never seen an application that that chokes apps which all will",
    "start": "2473329",
    "end": "2481970"
  },
  {
    "text": "behave the cloud need to type applications and also the legacy old world applications and and funny Lee constructed C binaries all of those work",
    "start": "2481970",
    "end": "2491030"
  },
  {
    "text": "fine promising so the next question is about",
    "start": "2491030",
    "end": "2498020"
  },
  {
    "start": "2492000",
    "end": "2519000"
  },
  {
    "text": "open source in the project if you think innovate or maybe donating to CN CF yes",
    "start": "2498020",
    "end": "2505900"
  },
  {
    "text": "the plans are in progress we're working working hard you just have",
    "start": "2505900",
    "end": "2511430"
  },
  {
    "text": "to we start to figure out a couple things yes that's that's going to happen",
    "start": "2511430",
    "end": "2517640"
  },
  {
    "text": "soon good next one we approaching the end of",
    "start": "2517640",
    "end": "2524210"
  },
  {
    "start": "2519000",
    "end": "2614000"
  },
  {
    "text": "questions how does UPS which comes into play when interacting with services external to the kubernetes cluster okay",
    "start": "2524210",
    "end": "2530990"
  },
  {
    "text": "can it do ingress egress load balancing TLS uplift or do you still need an",
    "start": "2530990",
    "end": "2537079"
  },
  {
    "text": "ingress for your kubernetes cluster that's an extremely important question one that I didn't go into adequate",
    "start": "2537079",
    "end": "2542869"
  },
  {
    "text": "detail in the talk yes a switch has this gateway support and the Gateway performs",
    "start": "2542869",
    "end": "2554390"
  },
  {
    "text": "the ingress in fact I kind of alluded to it in the in the Federation is talking",
    "start": "2554390",
    "end": "2560119"
  },
  {
    "text": "about the federation of these clusters each cluster would have a gateway a switch gateway and all gateways across",
    "start": "2560119",
    "end": "2566270"
  },
  {
    "text": "these clusters form a federation and the the connection between a client in one",
    "start": "2566270",
    "end": "2572960"
  },
  {
    "text": "cluster and a server in a different cluster is is done via a pair of",
    "start": "2572960",
    "end": "2581900"
  },
  {
    "text": "gateways each representing those two clusters so you can have network silos",
    "start": "2581900",
    "end": "2590920"
  },
  {
    "text": "each each cluster being a being a silo",
    "start": "2590920",
    "end": "2596200"
  },
  {
    "text": "the client would still view the server as though it is a part of that same",
    "start": "2596200",
    "end": "2602270"
  },
  {
    "text": "network and and it is done with this gateway and of course the Gateway would",
    "start": "2602270",
    "end": "2608720"
  },
  {
    "text": "so be ei I would also serve as ingress",
    "start": "2608720",
    "end": "2614680"
  },
  {
    "start": "2614000",
    "end": "2655000"
  },
  {
    "text": "okay so it's a mesh of gateways and so",
    "start": "2615250",
    "end": "2621710"
  },
  {
    "text": "you still you can get rid of the classical capitalist English at this",
    "start": "2621710",
    "end": "2627170"
  },
  {
    "text": "point right yes it has both egress and ingress gateways one more question from",
    "start": "2627170",
    "end": "2636140"
  },
  {
    "text": "Stan is the International Cisco's down down via EBP F partly yes actually there",
    "start": "2636140",
    "end": "2645410"
  },
  {
    "text": "is it uses second um and an EVP of",
    "start": "2645410",
    "end": "2652460"
  },
  {
    "text": "snippets yes okay",
    "start": "2652460",
    "end": "2657710"
  },
  {
    "start": "2655000",
    "end": "2717000"
  },
  {
    "text": "so that's interesting is there any possibility of doing dynamic dynamic",
    "start": "2657710",
    "end": "2663859"
  },
  {
    "text": "policy enforcement like talking validation with up switch so also I",
    "start": "2663859",
    "end": "2670069"
  },
  {
    "text": "suppose the question also about enforcing policy Cobra has policy at the",
    "start": "2670069",
    "end": "2675800"
  },
  {
    "text": "with up switch yes maps which supports the this same notion of labels that we",
    "start": "2675800",
    "end": "2684020"
  },
  {
    "text": "will be support and you can even specify label selectors to to enforce the policy",
    "start": "2684020",
    "end": "2692480"
  },
  {
    "text": "so when you're creating a server you can attach some labels to it and then you can specify policy based on those labels",
    "start": "2692480",
    "end": "2698000"
  },
  {
    "text": "and and again this this needs integration into kubernetes network",
    "start": "2698000",
    "end": "2704930"
  },
  {
    "text": "policy but but the policy enforcement itself the enforcement of connectivity",
    "start": "2704930",
    "end": "2712010"
  },
  {
    "text": "can be done today with with the built-in support for labels in apps which I guess",
    "start": "2712010",
    "end": "2718760"
  },
  {
    "start": "2717000",
    "end": "2764000"
  },
  {
    "text": "this also connects to the next word the next and last question which is does UPS",
    "start": "2718760",
    "end": "2723770"
  },
  {
    "text": "which has the capability to block services to be consumed by only a set of consuming services instead so is this",
    "start": "2723770",
    "end": "2731089"
  },
  {
    "text": "the same this is similar or can up switch block connections or allow",
    "start": "2731089",
    "end": "2736609"
  },
  {
    "text": "connections use specific services like as you said if he supports the same labels as kubernetes can",
    "start": "2736609",
    "end": "2742250"
  },
  {
    "text": "also you can you can enforce policies",
    "start": "2742250",
    "end": "2749300"
  },
  {
    "text": "pretty expressively in terms of labels because the switch demon knows about",
    "start": "2749300",
    "end": "2756470"
  },
  {
    "text": "exactly who is connecting and all of that metadata is available to be expressed in in label expressions that's",
    "start": "2756470",
    "end": "2766870"
  },
  {
    "start": "2764000",
    "end": "2805000"
  },
  {
    "text": "that's was a very very exhausting list of questions I guess is a lot of",
    "start": "2766870",
    "end": "2773210"
  },
  {
    "text": "interest for for this kind of approach to service mesh and I can tell that a",
    "start": "2773210",
    "end": "2779540"
  },
  {
    "text": "lot of people are gonna try this tonight thank you very much Dinesh this",
    "start": "2779540",
    "end": "2786290"
  },
  {
    "text": "concludes our webinar today thanks everybody to join the webinar recording",
    "start": "2786290",
    "end": "2792320"
  },
  {
    "text": "and the slides will be made available later today we look forward to see you",
    "start": "2792320",
    "end": "2798470"
  },
  {
    "text": "at the future CNC webinar thanks Dinesh thanks Kathleen and thanks everybody for joining thanks very much",
    "start": "2798470",
    "end": "2807670"
  }
]