[
  {
    "start": "0",
    "end": "11000"
  },
  {
    "text": "my name is Aaron I work on the containers team at Microsoft Azure I'm",
    "start": "420",
    "end": "5819"
  },
  {
    "text": "also a lead on the Service Catalog special interest group so let's get into it",
    "start": "5819",
    "end": "11610"
  },
  {
    "start": "11000",
    "end": "11000"
  },
  {
    "text": "first of all why are we all here so first of all obviously we're at this",
    "start": "11610",
    "end": "17369"
  },
  {
    "text": "conference because we're interested in kubernetes or cloud native technologies in general but also specific to",
    "start": "17369",
    "end": "23939"
  },
  {
    "text": "kubernetes we know that kubernetes is moving blazingly fast in a bunch of different dimensions right it's usage is",
    "start": "23939",
    "end": "32099"
  },
  {
    "text": "growing day by day like gangbusters if you follow kubernetes development both",
    "start": "32099",
    "end": "37530"
  },
  {
    "text": "in the core and adjacent projects that's moving incredibly fast and increasing",
    "start": "37530",
    "end": "43020"
  },
  {
    "text": "the number of projects both in and out of kubernetes are exploding as well",
    "start": "43020",
    "end": "48719"
  },
  {
    "text": "right and so basically this speed of development the speed of features is",
    "start": "48719",
    "end": "54989"
  },
  {
    "text": "outpacing the knowledge that we've built in order to figure out how to use this",
    "start": "54989",
    "end": "60149"
  },
  {
    "text": "stuff right and that's why we're here today at this talk ok so put a little",
    "start": "60149",
    "end": "65610"
  },
  {
    "text": "Wild West reference in there so Clint Eastwood you imagine he's got like a kubernetes cluster in the saloon behind",
    "start": "65610",
    "end": "71400"
  },
  {
    "text": "him he's trying to figure out how to build an app for that so what does that really look like ok if you were at",
    "start": "71400",
    "end": "78090"
  },
  {
    "start": "76000",
    "end": "76000"
  },
  {
    "text": "Brandon burns his keynote at the end of the day yesterday you probably saw something a little bit like this and he",
    "start": "78090",
    "end": "85680"
  },
  {
    "text": "said what I'm about to say right you got to figure out all this stuff all the first two rows in order to just get your",
    "start": "85680",
    "end": "92939"
  },
  {
    "text": "app into let's just say staging right not even production ok you got a new",
    "start": "92939",
    "end": "99420"
  },
  {
    "text": "sort of new development test cycle you got to figure out what is a container how do I container as my app what does",
    "start": "99420",
    "end": "105960"
  },
  {
    "text": "that even mean you got to figure out what a registry is and how do I push to it you got to figure out how to change",
    "start": "105960",
    "end": "112320"
  },
  {
    "text": "your CI CD or build a brand new CI CD so that you can test this stuff on the",
    "start": "112320",
    "end": "118890"
  },
  {
    "text": "target platform which is kubernetes then you've got to figure out what is your staging prod pre prod whatever the stuff",
    "start": "118890",
    "end": "126840"
  },
  {
    "text": "you do before you get to prod what does that look like and then you might wanna",
    "start": "126840",
    "end": "132569"
  },
  {
    "text": "you know take a breath but your apps and prod and you've got to figure out all the stuff in the bottom row right",
    "start": "132569",
    "end": "138129"
  },
  {
    "text": "how do you do monitoring in this new world how do you trace requests in this new world how you do logging",
    "start": "138129",
    "end": "144340"
  },
  {
    "text": "observability resilience so on and so forth auto-scaling is another big one right",
    "start": "144340",
    "end": "149849"
  },
  {
    "text": "these are all new things in the cloud native and kubernetes world that you",
    "start": "149849",
    "end": "155470"
  },
  {
    "text": "have to figure out so it's no wonder that a lot of times I see people coming",
    "start": "155470",
    "end": "160480"
  },
  {
    "text": "in to kubernetes that are super excited about it as they should be but this is a real turnoff right it's really difficult",
    "start": "160480",
    "end": "167500"
  },
  {
    "text": "to get started because there's this massive wall in front of you right",
    "start": "167500",
    "end": "173079"
  },
  {
    "start": "173000",
    "end": "173000"
  },
  {
    "text": "needless to say there's a lot to figure out but we've got sort of another layer to this issue to this problem this",
    "start": "173079",
    "end": "179260"
  },
  {
    "text": "challenge that we need to solve which is that everybody's different right so we can't just publish a document or have a",
    "start": "179260",
    "end": "186459"
  },
  {
    "text": "bunch of consultants go out and tell everybody the same thing can't say this is how you do X this is how you do dev",
    "start": "186459",
    "end": "192849"
  },
  {
    "text": "this is how you do tests this is what every deployment should look like and you're done right because every",
    "start": "192849",
    "end": "198069"
  },
  {
    "text": "organization has different needs and these are wildly different needs so I've gone and I've talked to quite a few",
    "start": "198069",
    "end": "204819"
  },
  {
    "text": "different organizations and seeing how different the needs are there's things like security and topology that there's",
    "start": "204819",
    "end": "211840"
  },
  {
    "text": "there's failover there there's disaster recovery the list goes on right so this",
    "start": "211840",
    "end": "219129"
  },
  {
    "text": "is why if you read the abstract I kind of called this talk and what I want to get out of this talk the North Star",
    "start": "219129",
    "end": "225970"
  },
  {
    "text": "right so this is sort of an aspirational goal this is what we want to tell people our best practices for building a cloud",
    "start": "225970",
    "end": "233319"
  },
  {
    "start": "233000",
    "end": "233000"
  },
  {
    "text": "native app so this is kind of what I see is the North Star what should we get",
    "start": "233319",
    "end": "238720"
  },
  {
    "text": "after we say we have a North Star for kubernetes right so we want some kind of",
    "start": "238720",
    "end": "244090"
  },
  {
    "text": "a document that helps app operators and app developers those could be the same",
    "start": "244090",
    "end": "249639"
  },
  {
    "text": "person or the same group we want to help those people decide what to do should they adopt the new technology should",
    "start": "249639",
    "end": "256449"
  },
  {
    "text": "they use that new beta API in kubernetes how should they scale their app and so",
    "start": "256449",
    "end": "261820"
  },
  {
    "text": "on right we know already that the technology is moving blazingly fast",
    "start": "261820",
    "end": "267700"
  },
  {
    "text": "so we want this Northstar to stand up to that speed so in a month when features",
    "start": "267700",
    "end": "272770"
  },
  {
    "text": "XY and z are out and stable we don't want this document to be obsolete right",
    "start": "272770",
    "end": "278380"
  },
  {
    "text": "and then finally one that's near and dear to my heart as a sig lead is I want",
    "start": "278380",
    "end": "284050"
  },
  {
    "text": "this thing and I think we all probably want this thing to guide the SIG's so that they build the right stuff for us",
    "start": "284050",
    "end": "290560"
  },
  {
    "text": "for our for us being app developers app operators right and again I want to",
    "start": "290560",
    "end": "296530"
  },
  {
    "text": "stress that I don't think these things should be rules I think that should be best practices so that organizations can",
    "start": "296530",
    "end": "302770"
  },
  {
    "text": "pick and choose what they want to bring into their app what what what kind of practices they want to bring into their",
    "start": "302770",
    "end": "308980"
  },
  {
    "text": "app and massage them a little bit to fit their use case right okay so let's look",
    "start": "308980",
    "end": "316120"
  },
  {
    "text": "at what we have now so far okay there's a lot of strong opinions inside of the",
    "start": "316120",
    "end": "321310"
  },
  {
    "text": "kubernetes development community and outside right and that's a great thing we've got a ton of evidence because",
    "start": "321310",
    "end": "327640"
  },
  {
    "text": "people are actually using this stuff right we see how people are using we see the best practices that they have inside",
    "start": "327640",
    "end": "334240"
  },
  {
    "text": "their organization and also as I said since everybody's doing something a",
    "start": "334240",
    "end": "339370"
  },
  {
    "text": "little bit different we've got fragmentation okay and that's actually a good thing I'll touch on that at the end",
    "start": "339370",
    "end": "345720"
  },
  {
    "text": "but in general we might see this word fragmentation and it might be we associate it with doing garbage",
    "start": "345720",
    "end": "353200"
  },
  {
    "text": "collection on our disk or something like that in this case that's not a bad thing",
    "start": "353200",
    "end": "358560"
  },
  {
    "text": "okay so why am I the person to say what",
    "start": "358560",
    "end": "363850"
  },
  {
    "start": "359000",
    "end": "359000"
  },
  {
    "text": "these best practices are well I'm not I'm not the definitive guide but I have seen deployments here and there all over",
    "start": "363850",
    "end": "370630"
  },
  {
    "text": "the place right I've seen good deployments I've seen bad deployments I've seen good deployments that have",
    "start": "370630",
    "end": "376060"
  },
  {
    "text": "some bad practices in their app I've seen vice-versa right so this is kind of",
    "start": "376060",
    "end": "381460"
  },
  {
    "text": "the I've seen some things style slide ok and I am here to propose some ideas all",
    "start": "381460",
    "end": "389560"
  },
  {
    "start": "386000",
    "end": "386000"
  },
  {
    "text": "right we're gonna get into the ideas right after this slide I believe so I'm here to propose some ideas for these",
    "start": "389560",
    "end": "395410"
  },
  {
    "text": "best practices based on what I've seen ok so here's the first idea this is all",
    "start": "395410",
    "end": "402409"
  },
  {
    "text": "about observability so did anyone go so far in this conference to service mesh",
    "start": "402409",
    "end": "409039"
  },
  {
    "text": "talk envoy is do something like that cool that's kind of the so hot right now",
    "start": "409039",
    "end": "415219"
  },
  {
    "text": "deal right service meshes this is the this is the year or at least half a year of the service mesh we've got envoy I",
    "start": "415219",
    "end": "422989"
  },
  {
    "text": "forgot the name but that new thing that starts with a see we've got sto linker D",
    "start": "422989",
    "end": "428059"
  },
  {
    "text": "so on the list goes on right that is a big part of the observability puzzle but",
    "start": "428059",
    "end": "433939"
  },
  {
    "text": "there's more right so first of all some obvious things on the top two little",
    "start": "433939",
    "end": "441229"
  },
  {
    "start": "435000",
    "end": "435000"
  },
  {
    "text": "stars there we know that kubernetes is this always-on system that always is looking at your containers your pods and",
    "start": "441229",
    "end": "447769"
  },
  {
    "text": "scheduling them right and in order to do that it has to figure out what's going on with them are they crashing are they",
    "start": "447769",
    "end": "454579"
  },
  {
    "text": "using too much memory are they swapping so on right and that's what it needs to",
    "start": "454579",
    "end": "460069"
  },
  {
    "text": "do is job but in order for you to do your job you need to observe those containers in production as well but so",
    "start": "460069",
    "end": "468829"
  },
  {
    "text": "time and time again I've seen apps and specifically a few pods in the app just kind of limp along right the keep",
    "start": "468829",
    "end": "475819"
  },
  {
    "text": "restarting they keep using too much memory to keep pegging CPU right you",
    "start": "475819",
    "end": "481339"
  },
  {
    "text": "don't really know why you can't really attach a debugger to a pod okay you don't really know why so you",
    "start": "481339",
    "end": "487819"
  },
  {
    "text": "need to be proactive and what kinds of information are coming out of that pod",
    "start": "487819",
    "end": "492889"
  },
  {
    "text": "right okay so let's cover the first half kubernetes",
    "start": "492889",
    "end": "499969"
  },
  {
    "start": "496000",
    "end": "496000"
  },
  {
    "text": "observing your app right here are some concrete things that you can do fairly simple things that you can do to tell",
    "start": "499969",
    "end": "507199"
  },
  {
    "text": "kubernetes what your app needs so that it can observe your pods more effectively and therefore schedule your",
    "start": "507199",
    "end": "514068"
  },
  {
    "text": "pods more effectively okay so you can give resource limits in your manifests that one is a super easy win because if",
    "start": "514069",
    "end": "520939"
  },
  {
    "text": "you tell kubernetes I need this much CPU I need this much memory it has a lot more insight into where it can put your",
    "start": "520939",
    "end": "527449"
  },
  {
    "text": "pod in the cluster right even better you can give kubernetes readiness and",
    "start": "527449",
    "end": "532759"
  },
  {
    "text": "liveness checks there's a little bit of implementation in your app but that allows kubernetes",
    "start": "532759",
    "end": "537860"
  },
  {
    "text": "to introspect your app way more deeply and that's way more powerful than just telling kubernetes statically this is",
    "start": "537860",
    "end": "545090"
  },
  {
    "text": "what I need all right and those things kind of enable horizontal pod auto",
    "start": "545090",
    "end": "550490"
  },
  {
    "text": "scaling right so if kubernetes knows exactly what's happening with your pods and it knows exactly the criteria you",
    "start": "550490",
    "end": "557570"
  },
  {
    "text": "want to automatically scale horizontally those pods then you just flip a switch and kubernetes now takes over your app",
    "start": "557570",
    "end": "565070"
  },
  {
    "text": "and now all of a sudden your app can tolerate like the massive spike during Black Friday let's say something like",
    "start": "565070",
    "end": "570980"
  },
  {
    "text": "that okay now this is the other side of the coin once kubernetes is taking",
    "start": "570980",
    "end": "576800"
  },
  {
    "start": "573000",
    "end": "573000"
  },
  {
    "text": "action on your pause how do you know what the hell's going on right okay now",
    "start": "576800",
    "end": "582430"
  },
  {
    "text": "the reason that we have this rich ecosystem and CN CF with all these",
    "start": "582430",
    "end": "588560"
  },
  {
    "text": "awesome projects that do great observability things is because we've",
    "start": "588560",
    "end": "593630"
  },
  {
    "text": "got this new paradigm of bunches of pods running and you don't really know what's going on inside those pods sometimes you",
    "start": "593630",
    "end": "600440"
  },
  {
    "text": "don't even know how many there are right so we've got tools for logging we've got",
    "start": "600440",
    "end": "605960"
  },
  {
    "text": "tools service mesh tools we all know about that right we've got tools for tracing anybody go to a tracing workshop",
    "start": "605960",
    "end": "613300"
  },
  {
    "text": "only a few these sort of the year of",
    "start": "613300",
    "end": "624380"
  },
  {
    "text": "tracing but lean tools to say these are all sort of tools that you should",
    "start": "624380",
    "end": "629930"
  },
  {
    "text": "proactively at least it's a best practice to proactively put into your deployments so that at any time during",
    "start": "629930",
    "end": "637160"
  },
  {
    "text": "your pod or your apps existence you can introspect exactly what's going on okay",
    "start": "637160",
    "end": "642380"
  },
  {
    "text": "so you can see are there Network calls that are too slow you can see is there a circuit breaker open is there a service",
    "start": "642380",
    "end": "648890"
  },
  {
    "text": "that's down is data getting corrupted or crazy logs coming out of one of your pause okay and by the way there are CN",
    "start": "648890",
    "end": "656870"
  },
  {
    "text": "CF projects to cover each one of these things logging service mesh and tracing",
    "start": "656870",
    "end": "662050"
  },
  {
    "text": "ok next idea when all else fails crash",
    "start": "662050",
    "end": "667310"
  },
  {
    "text": "so has anybody heard of or written Erlang before the programming language",
    "start": "667310",
    "end": "673249"
  },
  {
    "text": "cool that's a lot more than I thought awesome so Erlang has this principle called",
    "start": "673249",
    "end": "678709"
  },
  {
    "text": "crash only right crash only means that if you crash your software something",
    "start": "678709",
    "end": "685879"
  },
  {
    "text": "goes wrong and something else will restart it so in Erlang there's this thing called a supervisor that runs",
    "start": "685879",
    "end": "691459"
  },
  {
    "text": "above your software and it always is watching right this might sound familiar because kubernetes kind of does the same",
    "start": "691459",
    "end": "697850"
  },
  {
    "text": "thing so the supervisor is always watching and the best practice in Erlang is if something goes wrong just crash",
    "start": "697850",
    "end": "704389"
  },
  {
    "text": "and the supervisor will give you another chance because it'll restart you okay",
    "start": "704389",
    "end": "710230"
  },
  {
    "start": "710000",
    "end": "710000"
  },
  {
    "text": "now in a distributed system that runs in kubernetes things happen right",
    "start": "710230",
    "end": "716480"
  },
  {
    "text": "you'll probably deploy a bug at some point your apps LifeSite your apps lifecycle what I've learned in running",
    "start": "716480",
    "end": "723559"
  },
  {
    "text": "apps on the cloud is that the network is always out the network is always down Murphy's Law will take effect in a",
    "start": "723559",
    "end": "729949"
  },
  {
    "text": "minute you've run your app for maybe a month the network will go down same thing with disk you will",
    "start": "729949",
    "end": "735500"
  },
  {
    "text": "effectively swap after about a month at least on one of your pods okay every",
    "start": "735500",
    "end": "740959"
  },
  {
    "text": "deployment I've seen after a month on average that happens at least six times I actually did the math ok kubernetes is",
    "start": "740959",
    "end": "749569"
  },
  {
    "text": "that supervisor right it is the thing that's always on always watching and I",
    "start": "749569",
    "end": "754939"
  },
  {
    "text": "have written probably ten maybe fifteen times a retry loop right I've tried to",
    "start": "754939",
    "end": "760699"
  },
  {
    "text": "retry a connection pool to the database I've tried retrying connections to the",
    "start": "760699",
    "end": "766459"
  },
  {
    "text": "data to micro services retry and connections to cloud services I'm just done right writing those loops is extra",
    "start": "766459",
    "end": "773750"
  },
  {
    "text": "logic in your app that you have to test right it's in order to give a little piece of your app another chance to",
    "start": "773750",
    "end": "780319"
  },
  {
    "text": "function you have to write a bunch of code and test a bunch of code so instead of that I've given up right I've passed",
    "start": "780319",
    "end": "788329"
  },
  {
    "text": "the work off to someone else which is a best practice in software development right don't do the work don't write the",
    "start": "788329",
    "end": "794689"
  },
  {
    "text": "code right instead if you're writing a program just exit one write kubernetes",
    "start": "794689",
    "end": "799699"
  },
  {
    "text": "will know okay it's not a zero status code restart okay that is a best practice so fairly simple",
    "start": "799699",
    "end": "810800"
  },
  {
    "text": "example here but I've put in some pieces of observability as well okay",
    "start": "810800",
    "end": "816380"
  },
  {
    "text": "app connects to a database tries to connect to a database it can't because the network's down because all clouds",
    "start": "816380",
    "end": "822950"
  },
  {
    "text": "don't have a network kubernetes sees that and it restarts it right but in the",
    "start": "822950",
    "end": "827959"
  },
  {
    "text": "middle here we've got tracing that sees that connection failure okay we've got",
    "start": "827959",
    "end": "833450"
  },
  {
    "text": "monitoring and log aggregation that capture those logs that say there was a connection failure and that captured",
    "start": "833450",
    "end": "840350"
  },
  {
    "text": "that network traffic that tried to egress right and if you've got an alerting system it's watching how many",
    "start": "840350",
    "end": "846709"
  },
  {
    "text": "of those restarts happen in a given time window and it might alert you if you've got over some watermark right it might",
    "start": "846709",
    "end": "853580"
  },
  {
    "text": "be super sophisticated it might have sliding windows and moving averages and so on okay next idea unordered is better",
    "start": "853580",
    "end": "863690"
  },
  {
    "text": "than ordered right so has anybody done any investigation into what ordering",
    "start": "863690",
    "end": "869000"
  },
  {
    "text": "means in a distributed system one okay yeah it's kind of he said it's",
    "start": "869000",
    "end": "876230"
  },
  {
    "text": "impossible so sorta yeah it's pretty close to impossible there's been so much research that's gone into ordering and",
    "start": "876230",
    "end": "883760"
  },
  {
    "text": "distributed systems that there are several kind of sub definitions for ordering and distributed systems so if",
    "start": "883760",
    "end": "890450"
  },
  {
    "text": "your app needs to rely on some kind of ordering in kubernetes in your app you have to first decide which kind of sub",
    "start": "890450",
    "end": "897770"
  },
  {
    "text": "definition you want then you have to implement it which is no small feat then you have to test it to make sure that",
    "start": "897770",
    "end": "903529"
  },
  {
    "text": "you adhere to that definition of ordering right that's hard ordering is",
    "start": "903529",
    "end": "909500"
  },
  {
    "text": "hard and distributing systems I made that point bold on purpose right so again don't do it if you can try not to",
    "start": "909500",
    "end": "916610"
  },
  {
    "text": "do it okay now that's not realistic for all apps of course especially datastore",
    "start": "916610",
    "end": "923060"
  },
  {
    "start": "920000",
    "end": "920000"
  },
  {
    "text": "apps you might not be able to just say I'm not gonna do ordering but if you do kubernetes has built-in primitives that",
    "start": "923060",
    "end": "930380"
  },
  {
    "text": "are really well tested to do that ordering for you right so again Brendan's talk yesterday",
    "start": "930380",
    "end": "936650"
  },
  {
    "text": "he talked about using a sidecar to do distributed locking and distributed leader election okay and I'll provide",
    "start": "936650",
    "end": "943610"
  },
  {
    "text": "links to that afterwards right use that if you need to do ordering if you need",
    "start": "943610",
    "end": "949130"
  },
  {
    "text": "to lock do mutual exclusion you need to have a leader be elected right those are ordering problems use the sidecar but",
    "start": "949130",
    "end": "956600"
  },
  {
    "text": "you don't have to write any code that way another one that I've used pretty extensively for preventing race",
    "start": "956600",
    "end": "962600"
  },
  {
    "text": "conditions is using resource versions on the kubernetes resources themselves right has anyone seen that field on the",
    "start": "962600",
    "end": "970160"
  },
  {
    "text": "all the resources in the object metadata it's a resource version ok well I'm here",
    "start": "970160",
    "end": "975800"
  },
  {
    "text": "to tell you that it's wonderful ok if you've got ten pods running and you need to manage some data all the",
    "start": "975800",
    "end": "982790"
  },
  {
    "text": "pods pull down that resource they all have resource version zero let's say right and then one of them",
    "start": "982790",
    "end": "988970"
  },
  {
    "text": "does the put the upload of the new data and now the resource version globally is",
    "start": "988970",
    "end": "994190"
  },
  {
    "text": "one now all nine other pots try to do the put with resource version zero and",
    "start": "994190",
    "end": "999500"
  },
  {
    "text": "they all fail right so they all race and that's not always the best thing but",
    "start": "999500",
    "end": "1005170"
  },
  {
    "text": "there's no data corruption because the first one just wins and the second ones are left out in the cold alright so that",
    "start": "1005170",
    "end": "1011530"
  },
  {
    "text": "can be very useful depending on your app that's a tool in your tool belt you don't have to implement okay and then",
    "start": "1011530",
    "end": "1018340"
  },
  {
    "text": "the last one is init containers okay so init containers if you don't know they",
    "start": "1018340",
    "end": "1023380"
  },
  {
    "text": "basically run before your pod and they do some initialization logics but they",
    "start": "1023380",
    "end": "1028870"
  },
  {
    "text": "can be used to make sure that something else is running before your thing right so for example anybody know that there's",
    "start": "1028870",
    "end": "1036610"
  },
  {
    "text": "an open source Microsoft sequel server by the way there is it's in docker hub",
    "start": "1036610",
    "end": "1042010"
  },
  {
    "text": "right it's a sequel server Community Edition and on a 7 node Azure container",
    "start": "1042010",
    "end": "1048910"
  },
  {
    "text": "service cluster I work for Microsoft we get free ones so on a seven note add",
    "start": "1048910",
    "end": "1054280"
  },
  {
    "text": "your container service cluster it takes about six minutes to startup in the common case with no other pods in the",
    "start": "1054280",
    "end": "1060400"
  },
  {
    "text": "cluster all right six minutes so by that time if you have an app that is relying on that database it's already in crash",
    "start": "1060400",
    "end": "1066970"
  },
  {
    "text": "loop backup and then you have to wait like another six minutes or ten minutes or something to have it start up so the solution is",
    "start": "1066970",
    "end": "1074030"
  },
  {
    "text": "having a knit container in your app that keeps pinging the database and just",
    "start": "1074030",
    "end": "1079040"
  },
  {
    "text": "trying to see are you up are you up are you up it's like your kid poking you on",
    "start": "1079040",
    "end": "1084110"
  },
  {
    "text": "the shoulder at 6:00 in the morning to see if you're awake right eventually the",
    "start": "1084110",
    "end": "1089510"
  },
  {
    "text": "database is awake and then your app starts right up okay so that's ordering",
    "start": "1089510",
    "end": "1094520"
  },
  {
    "text": "right you are well you are depending on something to be available before you can be available now it's important to note",
    "start": "1094520",
    "end": "1102500"
  },
  {
    "text": "that init containers can be abused horribly if you find yourself writing a",
    "start": "1102500",
    "end": "1107929"
  },
  {
    "text": "huge script or writing some big program that executes in an init container that might be a recipe for disaster but it's",
    "start": "1107929",
    "end": "1115250"
  },
  {
    "text": "really up to your use case right again this is a best practice not a rule all",
    "start": "1115250",
    "end": "1122840"
  },
  {
    "text": "right the next concept here and the next idea is that loose coupling is better than tight coupling now this is taken",
    "start": "1122840",
    "end": "1130040"
  },
  {
    "text": "right out of like a CS 102 book right software development tight coupled code",
    "start": "1130040",
    "end": "1135260"
  },
  {
    "text": "is hard to evolve hard to refactor hard to test all right this means something similar",
    "start": "1135260",
    "end": "1140330"
  },
  {
    "start": "1140000",
    "end": "1140000"
  },
  {
    "text": "in kubernetes okay now that first bullet point I've said before and I will",
    "start": "1140330",
    "end": "1145400"
  },
  {
    "text": "probably I think I'll say it two more times kubernetes is always on and it's always watching it's a dynamic system that has",
    "start": "1145400",
    "end": "1153440"
  },
  {
    "text": "basically undefined behavior over a large period of time and that's a good thing for you because then you don't",
    "start": "1153440",
    "end": "1159559"
  },
  {
    "text": "have to wake up at 3 a.m. and then you'll have undefined behavior because you're going to be tired and not have",
    "start": "1159559",
    "end": "1164780"
  },
  {
    "text": "had your coffee okay but the other side of that is that your app has to tolerate",
    "start": "1164780",
    "end": "1170540"
  },
  {
    "text": "that dynamic environment okay what does that really mean on the ground right",
    "start": "1170540",
    "end": "1176350"
  },
  {
    "start": "1175000",
    "end": "1175000"
  },
  {
    "text": "here's the first best practice and if you take nothing away from this talk nothing else away from this talk take",
    "start": "1176350",
    "end": "1182809"
  },
  {
    "text": "this way please do not talk from one pod directly to another pod right because",
    "start": "1182809",
    "end": "1188570"
  },
  {
    "text": "eventually Murphy's Law again in action here the other pod the target pod is going to go down over a month two months",
    "start": "1188570",
    "end": "1195620"
  },
  {
    "text": "whatever it is so instead communicate between paws using a kubernetes service or",
    "start": "1195620",
    "end": "1201159"
  },
  {
    "text": "servus mash or something similar right a proxy of some time right now going back",
    "start": "1201159",
    "end": "1207070"
  },
  {
    "text": "to crash only sometimes your other service your target micro service is gonna be down or unavailable or like I",
    "start": "1207070",
    "end": "1213759"
  },
  {
    "text": "said the network is going to be down all right crash and just have kubernetes and make her do it retry right so I have",
    "start": "1213759",
    "end": "1221109"
  },
  {
    "text": "seen in one of the apps that I used to administer at a previous job on kubernetes it had a 700 line retry loop",
    "start": "1221109",
    "end": "1229599"
  },
  {
    "text": "there was a bunch of logic in the loop to do things like exponential back-off and custom log and custom stats and",
    "start": "1229599",
    "end": "1236200"
  },
  {
    "text": "metrics and stuff when instead that could have been erased and replaced by OS exit 1 right so back to crash only",
    "start": "1236200",
    "end": "1243999"
  },
  {
    "text": "I'm a huge proponent of that ok now finally I've seen a couple of apps that",
    "start": "1243999",
    "end": "1252190"
  },
  {
    "text": "use the kubernetes api to look up resources right that's not an uncommon",
    "start": "1252190",
    "end": "1257349"
  },
  {
    "text": "thing to do this particular one looked up pods right tried to get a list of",
    "start": "1257349",
    "end": "1262720"
  },
  {
    "text": "pods and then iterate the list and then talk to each one so that's already violating point number one because it",
    "start": "1262720",
    "end": "1268960"
  },
  {
    "text": "was talking directly to pods but there's another issue there right if I loop",
    "start": "1268960",
    "end": "1274149"
  },
  {
    "text": "through a bunch of pods and then do something with them the loop is probably already expired right eventually over",
    "start": "1274149",
    "end": "1280840"
  },
  {
    "text": "another month or so of writing your app you're gonna get the list and before you can do anything to that list one of the",
    "start": "1280840",
    "end": "1286809"
  },
  {
    "text": "pods is gone ok so instead of operating on individual resources a better",
    "start": "1286809",
    "end": "1292659"
  },
  {
    "text": "practice would be to operate on labels right so get all of the pods all of these services although whatever that",
    "start": "1292659",
    "end": "1299200"
  },
  {
    "text": "have a specific label and that way the list will always be up to date because kubernetes will aggregate all those",
    "start": "1299200",
    "end": "1305739"
  },
  {
    "text": "things together that conform to that label and give you it back ok",
    "start": "1305739",
    "end": "1311679"
  },
  {
    "text": "counterpoint the next idea is that tight coupling isn't always wrong there is a",
    "start": "1311679",
    "end": "1316710"
  },
  {
    "text": "specific way for you to do tight coupling in kubernetes right and that is",
    "start": "1316710",
    "end": "1322720"
  },
  {
    "start": "1322000",
    "end": "1322000"
  },
  {
    "text": "with the pod abstraction itself right the pod not the container but the pod is",
    "start": "1322720",
    "end": "1328570"
  },
  {
    "text": "the atomic smallest unit of deployment in kubernetes and it has more than one container in it",
    "start": "1328570",
    "end": "1334720"
  },
  {
    "text": "or it can have one or more containers in it on purpose okay and that is because when Google",
    "start": "1334720",
    "end": "1341950"
  },
  {
    "text": "originally designed this concept they recognized that apps or at least individual pieces of an app might need",
    "start": "1341950",
    "end": "1349030"
  },
  {
    "text": "to have multiple things sitting together right and this is this can be the case for a legacy or big monolithic app but",
    "start": "1349030",
    "end": "1357010"
  },
  {
    "text": "can also be the case for a very very modern app right and we've seen some of",
    "start": "1357010",
    "end": "1362350"
  },
  {
    "text": "those things at this conference already envoy is one service meshes write the",
    "start": "1362350",
    "end": "1367360"
  },
  {
    "text": "proxy generally runs on localhost which means you've got your app container and you've got your proxy container and your",
    "start": "1367360",
    "end": "1374080"
  },
  {
    "text": "app container talks to the proxy on localhost all right those two things would run in the same pot fluent deep",
    "start": "1374080",
    "end": "1381100"
  },
  {
    "text": "another CN CF project there is a fluent D logging driver that also runs on localhost you send your logs to it and",
    "start": "1381100",
    "end": "1388060"
  },
  {
    "text": "then it aggregates them before it forwards them down the chain right and most metric systems as well most metric",
    "start": "1388060",
    "end": "1395110"
  },
  {
    "text": "systems will aggregate metrics sample them and then send them on same thing your app would talk to that metric",
    "start": "1395110",
    "end": "1401020"
  },
  {
    "text": "system via localhost and you'd have the metric system be a sidecar and that's",
    "start": "1401020",
    "end": "1406480"
  },
  {
    "text": "what this pattern is called for all three of these cases and more it's called a sidecar anybody heard that term",
    "start": "1406480",
    "end": "1413740"
  },
  {
    "text": "before sidecar yeah sweet you guys are great alright next and most near and dear to",
    "start": "1413740",
    "end": "1421660"
  },
  {
    "text": "my heart this idea called record your configuration is very important it's",
    "start": "1421660",
    "end": "1427120"
  },
  {
    "text": "probably one of the most important best practices that I can convey today ok so",
    "start": "1427120",
    "end": "1433590"
  },
  {
    "text": "here's I think my last question of the crowd I'm doing this keep you guys awake",
    "start": "1433590",
    "end": "1438840"
  },
  {
    "text": "who has heard of a declarative API ok for those who haven't who has used",
    "start": "1438840",
    "end": "1445810"
  },
  {
    "text": "sequel come on I know everybody is used sequel who's talked to a database before",
    "start": "1445810",
    "end": "1451350"
  },
  {
    "text": "okay you guys you guys can raise your hands it's ok",
    "start": "1451350",
    "end": "1456820"
  },
  {
    "start": "1455000",
    "end": "1455000"
  },
  {
    "text": "okay so sequel basically you tell the database what data you want back you",
    "start": "1456820",
    "end": "1462370"
  },
  {
    "text": "tell it how to group it you tell it how to sort it or you give it some data and you say put it in this row in this",
    "start": "1462370",
    "end": "1467770"
  },
  {
    "text": "database or you say update it this way or delete it right you do crowd operations but the",
    "start": "1467770",
    "end": "1473560"
  },
  {
    "text": "important bit there is that you don't tell the database what exactly it should do you don't tell it how to do that",
    "start": "1473560",
    "end": "1478900"
  },
  {
    "text": "right and that abstraction is super powerful because sequel has scaled from",
    "start": "1478900",
    "end": "1483970"
  },
  {
    "text": "an in-memory sequel Lite database to massive databases in the cloud that have",
    "start": "1483970",
    "end": "1489280"
  },
  {
    "text": "hundreds of nodes thousands or hundreds of thousands of nodes right and the kubernetes api is the same you tell it",
    "start": "1489280",
    "end": "1496180"
  },
  {
    "text": "what the end state should be and that has and then kubernetes figures out how to do it behind the scenes and that has",
    "start": "1496180",
    "end": "1502750"
  },
  {
    "text": "scaled from mini cube up to 5,000 plus node clusters right so why did I tell",
    "start": "1502750",
    "end": "1509080"
  },
  {
    "text": "you all that stuff the bottom line is that you should just keep your manifests in your VCS in github in whatever else",
    "start": "1509080",
    "end": "1517060"
  },
  {
    "text": "right just keep them there and make those represent the latest working configuration of your app and that means",
    "start": "1517060",
    "end": "1523990"
  },
  {
    "text": "that at anytime you can submit those to kubernetes and it'll take the current state of a cluster and make it into your",
    "start": "1523990",
    "end": "1530560"
  },
  {
    "text": "apps working state right and that action is called a reconciliation how do you do",
    "start": "1530560",
    "end": "1536710"
  },
  {
    "text": "that well I'm a huge proponent of how people heard of Hallam before cool yeah",
    "start": "1536710",
    "end": "1544020"
  },
  {
    "text": "so helm is basically it does this right you have this thing called a chart it's",
    "start": "1544020",
    "end": "1549190"
  },
  {
    "text": "a group of the manifests that describe your app and then with one command doing a helm install it'll send those things",
    "start": "1549190",
    "end": "1556090"
  },
  {
    "text": "up to the cluster and it'll make the cluster reconcile from the current state all the way up to the state that you",
    "start": "1556090",
    "end": "1562930"
  },
  {
    "text": "want your app to be in right okay second",
    "start": "1562930",
    "end": "1568420"
  },
  {
    "text": "to last I believe ask for the least I'm gonna go through this one a little bit more quickly this is very similar to the",
    "start": "1568420",
    "end": "1574840"
  },
  {
    "text": "principle of least privilege okay so what we're talking about here in",
    "start": "1574840",
    "end": "1580630"
  },
  {
    "start": "1577000",
    "end": "1577000"
  },
  {
    "text": "kubernetes is that you can ask who minetti's for a ton of stuff you can ask it for permissions you can ask it for",
    "start": "1580630",
    "end": "1586570"
  },
  {
    "text": "storage disk memory CPU compute etc right the point here is that you should",
    "start": "1586570",
    "end": "1592810"
  },
  {
    "text": "leave as much of that for kubernetes to manage as possible right because the more you leave to kubernetes them the",
    "start": "1592810",
    "end": "1599590"
  },
  {
    "text": "less you take for your app the more kubernetes has in flexibility to",
    "start": "1599590",
    "end": "1604840"
  },
  {
    "text": "schedule your app later right and that translates to fewer wake-up calls and 3:00 in the morning and so forth ok so",
    "start": "1604840",
    "end": "1613090"
  },
  {
    "text": "here's some examples of what that might look like I'm not gonna go through them here but the point is that you should",
    "start": "1613090",
    "end": "1620290"
  },
  {
    "text": "basically take your app or components of your app and reduce its resource usage",
    "start": "1620290",
    "end": "1625570"
  },
  {
    "text": "or permissions as much as possible a little bit more so that your app can't run and then increase them a little bit",
    "start": "1625570",
    "end": "1631630"
  },
  {
    "text": "so that you basically have the least amount of resources dedicated to your app at one time ok",
    "start": "1631630",
    "end": "1639780"
  },
  {
    "text": "last point now this one is basically don't repeat yourself ok again back to",
    "start": "1639780",
    "end": "1645700"
  },
  {
    "text": "this theme of don't do more work then you have to write build on the shoulders",
    "start": "1645700",
    "end": "1651220"
  },
  {
    "text": "of giants means that there is a ton of code there are a ton of man-hours there's a ton of research that is gone",
    "start": "1651220",
    "end": "1658300"
  },
  {
    "start": "1652000",
    "end": "1652000"
  },
  {
    "text": "into building kubernetes right there's a ton of infrastructure to that tests kubernetes and the api of kubernetes is",
    "start": "1658300",
    "end": "1665920"
  },
  {
    "text": "publicly accessible of course at least when you're inside your cluster and it abstract away tons of functionality of",
    "start": "1665920",
    "end": "1673150"
  },
  {
    "text": "distributed systems functionality that is super hard to get right including ordering ok so whenever possible call",
    "start": "1673150",
    "end": "1680350"
  },
  {
    "text": "the API if you find yourself building some complicated distributed system inside of kubernetes try to just call",
    "start": "1680350",
    "end": "1686800"
  },
  {
    "text": "the API instead to do what you need and the case that it doesn't do what you need maybe the community has something",
    "start": "1686800",
    "end": "1693730"
  },
  {
    "text": "maybe CN CF dot IO has a project or somewhere else in the community has a project and in the case where you don't",
    "start": "1693730",
    "end": "1699670"
  },
  {
    "text": "see something that fits your exact needs maybe try to build something on top ok it's as simple as that right here's some",
    "start": "1699670",
    "end": "1707590"
  },
  {
    "text": "examples I'm a big fan of helm of course but if you can't use helm directly maybe use the helm API right I'm a huge fan of",
    "start": "1707590",
    "end": "1714760"
  },
  {
    "text": "traffic right it's a great ingress controller but maybe if you can't use traffic directly maybe put a service",
    "start": "1714760",
    "end": "1721780"
  },
  {
    "text": "mesh or a proxy in between traffic and your app right and then fluent D right",
    "start": "1721780",
    "end": "1727510"
  },
  {
    "text": "we talked about flu and D already so I have used fluent D to send 1 million log messages in",
    "start": "1727510",
    "end": "1732980"
  },
  {
    "text": "right and I did that over a period of an hour and I did that it was before Microsoft it was on a gke cluster and it",
    "start": "1732980",
    "end": "1740299"
  },
  {
    "text": "crashed the cluster it was a three under node cluster it's crashed it right so fluent D is pretty good right it's",
    "start": "1740299",
    "end": "1746330"
  },
  {
    "text": "probably better than something that you can write in a weekend and you probably don't want to write it in a weekend",
    "start": "1746330",
    "end": "1752330"
  },
  {
    "text": "because you've got an app to bill right and the same goes for the others too and plenty of the other projects that are in",
    "start": "1752330",
    "end": "1757730"
  },
  {
    "text": "the CNCs so some parting thoughts where should we",
    "start": "1757730",
    "end": "1763909"
  },
  {
    "text": "go from here right I gave some ideas I threw some things out here to start a conversation right but as I said at the",
    "start": "1763909",
    "end": "1771409"
  },
  {
    "text": "beginning we've got that fragmentation right and what that really means is that we all have a wealth of experience and a",
    "start": "1771409",
    "end": "1777620"
  },
  {
    "text": "wealth of ideas on what a good app should look like a cloud native good kubernetes app should look like so we",
    "start": "1777620",
    "end": "1785149"
  },
  {
    "text": "need to share that and this is a call to action ok I've put a description of all these",
    "start": "1785149",
    "end": "1791630"
  },
  {
    "start": "1789000",
    "end": "1789000"
  },
  {
    "text": "ideas into that github repository so I would encourage you to go into that",
    "start": "1791630",
    "end": "1797000"
  },
  {
    "text": "repository submit a pull request submitted an issue do whatever it is",
    "start": "1797000",
    "end": "1802340"
  },
  {
    "text": "that you want to contribute up to that repository to add your ideas right and",
    "start": "1802340",
    "end": "1807860"
  },
  {
    "text": "it might look like a new best practice it might look like fixing a typo either way totally cool right but I want to solicit",
    "start": "1807860",
    "end": "1815179"
  },
  {
    "text": "your ideas to begin compiling this list of best practices for a cloud native app",
    "start": "1815179",
    "end": "1820690"
  },
  {
    "text": "ok so with that I want to say thank you very much I really appreciate you coming",
    "start": "1820690",
    "end": "1826070"
  },
  {
    "text": "there's my contact information up there and I think we've got about five or so",
    "start": "1826070",
    "end": "1831350"
  },
  {
    "text": "minutes for questions so thank you very much",
    "start": "1831350",
    "end": "1835539"
  },
  {
    "text": "yeah so the question was the crash only kind of architecture if we've got too",
    "start": "1861030",
    "end": "1866799"
  },
  {
    "text": "many pods crashing at once is that gonna overload kubernetes so the answer to that well that's a very good",
    "start": "1866799",
    "end": "1873280"
  },
  {
    "text": "question the answer to that is probably not you might have a million pause running and of course that's a corner",
    "start": "1873280",
    "end": "1879760"
  },
  {
    "text": "case that's an edge case if your cluster is too small but if your cluster is big and you've got a million pause running",
    "start": "1879760",
    "end": "1886240"
  },
  {
    "text": "on it that's okay because the kubernetes api isn't gonna get overloaded by that because the cubelets are gonna try the",
    "start": "1886240",
    "end": "1892480"
  },
  {
    "text": "restarts first right so that restart logic is distributed across all the nodes and not all in a single point of",
    "start": "1892480",
    "end": "1899530"
  },
  {
    "text": "failure does that answer quick cool yeah",
    "start": "1899530",
    "end": "1904799"
  },
  {
    "text": "yep yep so I missed the very last part I",
    "start": "1919090",
    "end": "1931550"
  },
  {
    "text": "know that you were asking basically about thundering herd yeah",
    "start": "1931550",
    "end": "1939430"
  },
  {
    "text": "no actually I don't because the supervisor process he's kind of know about ordering and dependencies kubernetes of course doesn't so but I",
    "start": "1940280",
    "end": "1947510"
  },
  {
    "text": "think your question was kind of about how do you avoid that thundering herd when a downstream dependency goes down",
    "start": "1947510",
    "end": "1953120"
  },
  {
    "text": "then all the upstream dependences also go down is that about right yeah yep yep",
    "start": "1953120",
    "end": "1964520"
  },
  {
    "text": "yeah and that's a very tough problem of course so what I would say is the the current state-of-the-art kubernetes is",
    "start": "1964520",
    "end": "1970880"
  },
  {
    "text": "primitive right if you crash if your database crashes and everything above it",
    "start": "1970880",
    "end": "1976040"
  },
  {
    "text": "is gonna crash of course that's right however when you bring it back up and",
    "start": "1976040",
    "end": "1981080"
  },
  {
    "text": "that might be a manual process to bring it back up but when you do bring it back up you can bring it up slowly in a",
    "start": "1981080",
    "end": "1987050"
  },
  {
    "text": "different namespace right and that would mean that not everybody is gonna go and talk to the database and thundering herd",
    "start": "1987050",
    "end": "1993770"
  },
  {
    "text": "basically Dass your database right if you do bring it up in another name space you can use that service masher you can",
    "start": "1993770",
    "end": "2000070"
  },
  {
    "text": "manually route just a trickle of application traffic over to the new deployment and thereby at least avoid",
    "start": "2000070",
    "end": "2006730"
  },
  {
    "text": "that thundering herd problem or the das problem later right so you still have that cascading crash but when it comes",
    "start": "2006730",
    "end": "2014200"
  },
  {
    "text": "back up you don't necessarily have the the I call it the das problem right you",
    "start": "2014200",
    "end": "2019360"
  },
  {
    "text": "don't necessarily have that so half the problem to solve with possibly some manual manual steps but you could also",
    "start": "2019360",
    "end": "2026830"
  },
  {
    "text": "automate that too we just don't have a good mechanism for doing that yet right",
    "start": "2026830",
    "end": "2032370"
  },
  {
    "text": "maybe you can put one up on github yeah",
    "start": "2032370",
    "end": "2038220"
  },
  {
    "text": "yeah well you're absolutely right if the question the comment wife's last question was about is kubernetes gonna",
    "start": "2072380",
    "end": "2079648"
  },
  {
    "text": "have some sort of ordering primitive in deployments or pause in the future I've",
    "start": "2079649",
    "end": "2085320"
  },
  {
    "text": "probably only seen the same issue the github issue that you've seen I don't know the status of that but I do know",
    "start": "2085320",
    "end": "2092190"
  },
  {
    "text": "that it's not gonna be in one nine that's all I can tell you is it alpha",
    "start": "2092190",
    "end": "2097560"
  },
  {
    "text": "right now okay okay scheduling priority yeah thank you any",
    "start": "2097560",
    "end": "2103950"
  },
  {
    "text": "other quick well yes and no yeah exactly",
    "start": "2103950",
    "end": "2116190"
  },
  {
    "text": "so if if Internet container had some kind of an exponential back-off that might work but if you bring up your app",
    "start": "2116190",
    "end": "2123810"
  },
  {
    "text": "let's say you've got upstream dependencies they're gonna take that much longer to come up if you go an",
    "start": "2123810",
    "end": "2129210"
  },
  {
    "text": "automated approach so it still might be better for you to have some outside automated tool or take some manual steps",
    "start": "2129210",
    "end": "2136020"
  },
  {
    "text": "to kind of manually bring your app up because it may happen faster may get back on line faster then if you just",
    "start": "2136020",
    "end": "2143340"
  },
  {
    "text": "tried to let kubernetes do its thing other questions yeah",
    "start": "2143340",
    "end": "2150980"
  },
  {
    "text": "yeah yeah so the question was how do you configure your app at the App layer to",
    "start": "2167070",
    "end": "2173110"
  },
  {
    "text": "do things like connect databases connect to your queue whatever else is that",
    "start": "2173110",
    "end": "2178150"
  },
  {
    "text": "about yeah so right now we've got this thing that one of my colleagues is",
    "start": "2178150",
    "end": "2183250"
  },
  {
    "text": "called the post-it note flow right that's where your operator provisions a database by clicking a button on the",
    "start": "2183250",
    "end": "2189460"
  },
  {
    "text": "cloud console and then gives you the credentials on a post-it and then that's it that's what you have and you have to",
    "start": "2189460",
    "end": "2194740"
  },
  {
    "text": "figure out how to get it into your app this is a little bit of a shameless plug for the the sig that I work in it's",
    "start": "2194740",
    "end": "2202180"
  },
  {
    "text": "called Service Catalog and the point of service catalog the reason it exists is",
    "start": "2202180",
    "end": "2207610"
  },
  {
    "text": "to solve that exact problem so that what you would do is instead of embedding",
    "start": "2207610",
    "end": "2212920"
  },
  {
    "text": "credentials into your app you would embed a new kubernetes resource called an instance into your app and the",
    "start": "2212920",
    "end": "2219100"
  },
  {
    "text": "instance would be the instance resource would be in charge of going out hitting a cloud resource for example creating",
    "start": "2219100",
    "end": "2226090"
  },
  {
    "text": "the database and then dumping the database credentials into a secret and then instead of having your credentials",
    "start": "2226090",
    "end": "2232480"
  },
  {
    "text": "baked into your app config you bacon the binding of the secret to your app config",
    "start": "2232480",
    "end": "2237930"
  },
  {
    "text": "does that make some sense yeah so if you if you Google Service Catalog kubernetes",
    "start": "2237930",
    "end": "2244360"
  },
  {
    "text": "it'll pop up you can kind of see how it works and way more detail of course yeah",
    "start": "2244360",
    "end": "2249570"
  },
  {
    "text": "cool I think we are at time so I'm gonna be around feel free to ask your",
    "start": "2249570",
    "end": "2255580"
  },
  {
    "text": "questions offline so thanks again everybody [Applause]",
    "start": "2255580",
    "end": "2261859"
  }
]