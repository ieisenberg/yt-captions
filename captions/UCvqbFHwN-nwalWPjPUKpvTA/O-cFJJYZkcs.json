[
  {
    "text": "I'd like to thank you all for joining this talk so my name is Dan pev I'm an open source software engineer or in the",
    "start": "359",
    "end": "7399"
  },
  {
    "text": "spirit of this stock I'm an open source Wizard and we are part of the g-",
    "start": "7399",
    "end": "12920"
  },
  {
    "text": "research open source team where our responsibility is to spread the good word of Open Source and contribute back",
    "start": "12920",
    "end": "20880"
  },
  {
    "text": "to the amazing communities which build such awesome projects so today we'll",
    "start": "20880",
    "end": "27720"
  },
  {
    "text": "look and demystify a lot of magic around the cube scheduler around web assembly",
    "start": "27720",
    "end": "33719"
  },
  {
    "text": "we'll try to build some Cube schu plugins using different Frameworks different toolings uh see how we can",
    "start": "33719",
    "end": "40640"
  },
  {
    "text": "test that at scale and yeah handing over to my colleague who is actually a grand",
    "start": "40640",
    "end": "45960"
  },
  {
    "text": "visard of Sir so Jonathan to you thank you danan uh hello everyone hello cucon",
    "start": "45960",
    "end": "53039"
  },
  {
    "text": "uh I'm Jonathan janzi I also work for G research based in London and in my role",
    "start": "53039",
    "end": "58920"
  },
  {
    "text": "on open source team done all kinds of Witchcraft from speeding up net runtime",
    "start": "58920",
    "end": "64680"
  },
  {
    "text": "startup on Apple silicon Max from uh solving caching issues in dock bkit or",
    "start": "64680",
    "end": "70840"
  },
  {
    "text": "more recently building a machine learning experiment tracker to support complex research workflows but uh today",
    "start": "70840",
    "end": "77200"
  },
  {
    "text": "I'm not here to discuss any of that instead D Diane and I are excited to",
    "start": "77200",
    "end": "82400"
  },
  {
    "text": "share some kubernetes Wizardry so let's get ready for a wasm and kubernetes",
    "start": "82400",
    "end": "87520"
  },
  {
    "text": "journey filled with enchantment and it all starts with the mysterious",
    "start": "87520",
    "end": "93799"
  },
  {
    "text": "kubernetes scheduler the kubernetes scheduler is an essential control plane component of the",
    "start": "93799",
    "end": "99720"
  },
  {
    "text": "kues cluster it's responsible for determining which",
    "start": "99720",
    "end": "104880"
  },
  {
    "text": "pods sorry which nodes in the cluster should run the newly created pods and",
    "start": "104880",
    "end": "110240"
  },
  {
    "text": "it's taking for it's taking into account each pod's resource requirements like the CPU the memory and also the current",
    "start": "110240",
    "end": "117039"
  },
  {
    "text": "state of the nodes it will go and care evaluate constraints and resource",
    "start": "117039",
    "end": "122439"
  },
  {
    "text": "availability to select the most suitable node for a pod it's almost like casting",
    "start": "122439",
    "end": "128800"
  },
  {
    "text": "a careful placement spell Additionally the scheduler manages preemption by",
    "start": "128800",
    "end": "134319"
  },
  {
    "text": "ident identifying and removing lower priority pods from nodes where there aren't enough resources available for",
    "start": "134319",
    "end": "140239"
  },
  {
    "text": "the higher priority pods to run now let's dive into the enchanting sheduling",
    "start": "140239",
    "end": "145640"
  },
  {
    "text": "life cycle and see how it all unfolds so the sheduling life cycle will involve several phases to manage the pot",
    "start": "145640",
    "end": "151959"
  },
  {
    "text": "placement efficiently and fairly we'll work through these phases in order from left to right there's the first group",
    "start": "151959",
    "end": "158440"
  },
  {
    "text": "which is queuing then sheduling then binding in the queuing group we start with pre and Q this is before pods that",
    "start": "158440",
    "end": "164680"
  },
  {
    "text": "enter the sheding queue the scheduler can already filter them this will ensure that only the eligible and properly",
    "start": "164680",
    "end": "171200"
  },
  {
    "text": "configured pods proceed to The Next Step next step is sort once the pods are in",
    "start": "171200",
    "end": "176360"
  },
  {
    "text": "the queue the scheduler will sort them based on criteria like priority that will ensure that the most critical or",
    "start": "176360",
    "end": "182920"
  },
  {
    "text": "higher priority pods are scheduled before others we then move on to the actual scheduling cycle the green",
    "start": "182920",
    "end": "189239"
  },
  {
    "text": "box where it starts with Filter I'm skipping the pre- stuff uh the scheduler",
    "start": "189239",
    "end": "194599"
  },
  {
    "text": "Begins by filtering out the noes that don't meet the pods requirements such as resource needs or specific node",
    "start": "194599",
    "end": "201360"
  },
  {
    "text": "labels um then there's post filter which is in red there which um means that if",
    "start": "201360",
    "end": "207599"
  },
  {
    "text": "after filtering there are no nodes that are available this is where preemption will kick in the next one is score where",
    "start": "207599",
    "end": "214959"
  },
  {
    "text": "each feasible node is scored based on factors like available resources and Affinity rules and this will help",
    "start": "214959",
    "end": "222120"
  },
  {
    "text": "identify which node is the best fit for the Pod then we've got Reserve which is",
    "start": "222120",
    "end": "228040"
  },
  {
    "text": "uh essentially to tentatively reserved uh Reserve",
    "start": "228040",
    "end": "233200"
  },
  {
    "text": "um uh a note for the pods before we are done with the shelling cycle uh uh",
    "start": "233200",
    "end": "240760"
  },
  {
    "text": "permit will approve of Deni the placement um and finally if no nodes are",
    "start": "240760",
    "end": "246760"
  },
  {
    "text": "available to the Pods at the end of the scheduling cycle then the Pod goes back into the queue and the last one which is",
    "start": "246760",
    "end": "254280"
  },
  {
    "text": "really not the least is the bind this is when the scheduler will cast the final",
    "start": "254280",
    "end": "260120"
  },
  {
    "text": "spell which will bind the pot to the selected node by making the appropriate API call to the cluster API which will",
    "start": "260120",
    "end": "267320"
  },
  {
    "text": "assign the pot to the node and then it can start running",
    "start": "267320",
    "end": "271720"
  },
  {
    "text": "thank you Jonathan uh so what you want to introduce is the kubernetes schedu",
    "start": "273720",
    "end": "281320"
  },
  {
    "text": "simulator so imagine if you have a safe isolated space where you can test where",
    "start": "281320",
    "end": "287440"
  },
  {
    "text": "you can tweak and where you can optimize your scheduling strategy without affecting your live clusters so",
    "start": "287440",
    "end": "293720"
  },
  {
    "text": "literally that's what the schedule simulator offers a playground to experiment with different scheduling",
    "start": "293720",
    "end": "298919"
  },
  {
    "text": "algorithms uh you can simulate real world loads and discover possible performance",
    "start": "298919",
    "end": "304120"
  },
  {
    "text": "improvements in a controlled environment so unfortunately not all plugins yield",
    "start": "304120",
    "end": "309960"
  },
  {
    "text": "good results so plug-in developers who customize the scheduler need to make",
    "start": "309960",
    "end": "315320"
  },
  {
    "text": "sure that what they did well actually provides an improvement so because it's",
    "start": "315320",
    "end": "321919"
  },
  {
    "text": "really easy to introduce negative impact and just make everything slower in real",
    "start": "321919",
    "end": "327840"
  },
  {
    "text": "kubernetes clusters uh it's pretty difficult to get all of the",
    "start": "327840",
    "end": "332880"
  },
  {
    "text": "results of uh scheduling cycle in detail because usually in order to R you need",
    "start": "332880",
    "end": "339479"
  },
  {
    "text": "access to the Schuler to get the Schuler logs that usually requires privileged access to the control plane and um these",
    "start": "339479",
    "end": "346800"
  },
  {
    "text": "were all the challenges which inspir the simulator project to be created so when",
    "start": "346800",
    "end": "351880"
  },
  {
    "text": "you build some plugins you can immediately try them out uh test them",
    "start": "351880",
    "end": "357280"
  },
  {
    "text": "visualize get observability get some metri and uh I think that's enough talk we",
    "start": "357280",
    "end": "363919"
  },
  {
    "text": "could we could actually see something in action so um in the link Tre in the QR code",
    "start": "363919",
    "end": "371319"
  },
  {
    "text": "there is um uh URL to aipo where we prepared all of the examples if you want",
    "start": "371319",
    "end": "377720"
  },
  {
    "text": "to scan it again we'll show it at the end so first is the simulator",
    "start": "377720",
    "end": "385800"
  },
  {
    "text": "let's start it nice so here from here we can uh we can set",
    "start": "385800",
    "end": "394199"
  },
  {
    "text": "up nodes we can uh add various kubernetes resources we can also tweak",
    "start": "394199",
    "end": "401240"
  },
  {
    "text": "fine-tune the kubernetes scheduler configuration which in turn dictates how",
    "start": "401240",
    "end": "406960"
  },
  {
    "text": "the scheduler will behave in our environment so let's demystify the scheduling a bit let's see what happens",
    "start": "406960",
    "end": "414759"
  },
  {
    "text": "and why a pod goes to some node and what influences this so if you look at the",
    "start": "414759",
    "end": "421919"
  },
  {
    "text": "uhul setting we see here a lot oful plugins which are enabled by default and",
    "start": "421919",
    "end": "428840"
  },
  {
    "text": "all of these plugins do some are filtering plugins scoring plugins uh",
    "start": "428840",
    "end": "433879"
  },
  {
    "text": "before going in depth into all of them let's actually start with an example so",
    "start": "433879",
    "end": "439400"
  },
  {
    "text": "I'll create two nodes two noes each of the notes will contain 32 GB of memory",
    "start": "439400",
    "end": "445599"
  },
  {
    "text": "so let that be wizards one node",
    "start": "445599",
    "end": "451479"
  },
  {
    "text": "let's create a Wizards oh actually sorry name let's create a Wizards to so we",
    "start": "451599",
    "end": "460319"
  },
  {
    "text": "have two nodes each containing 32 GB of memory uh let's schedule some pod",
    "start": "460319",
    "end": "468599"
  },
  {
    "text": "so uh how do we name it we're in the whole Wizardry spirit let it be Gandalf",
    "start": "468599",
    "end": "475280"
  },
  {
    "text": "so Gandalf requires 16 GB of uh memory if we apply it Gandalf gets bound to the",
    "start": "475280",
    "end": "483199"
  },
  {
    "text": "wizards one node if we open it we can see uh the filter plugins all of them",
    "start": "483199",
    "end": "489199"
  },
  {
    "text": "passed for both nodes if we take a look at the scoring plugins we see also the node resources",
    "start": "489199",
    "end": "496159"
  },
  {
    "text": "balanced allocation and no resources fit uh scoring plugins returned identical score so at this point is just a random",
    "start": "496159",
    "end": "504000"
  },
  {
    "text": "on which node it goes uh in this case it went to the wizards one if we create",
    "start": "504000",
    "end": "510080"
  },
  {
    "text": "another one so let's who is a famous wizard let's try with San so San went to",
    "start": "510080",
    "end": "517279"
  },
  {
    "text": "the second node if you look filter plugins all return the same but now the",
    "start": "517279",
    "end": "523039"
  },
  {
    "text": "scoring plugins return different results so for the first node the resources balanced allocation returns lower score",
    "start": "523039",
    "end": "530320"
  },
  {
    "text": "node resources Feit return the lower score so overall Wizards two node is the winner and the Pod is scheduled there uh",
    "start": "530320",
    "end": "538360"
  },
  {
    "text": "now let's an epic crossover and let's add some Harry Potter universe so let's here do",
    "start": "538360",
    "end": "547040"
  },
  {
    "text": "some Dumbledore it goes to the wizards one if you look at score again identical scores",
    "start": "547040",
    "end": "554120"
  },
  {
    "text": "it went to the first if we try to add another one now",
    "start": "554120",
    "end": "559240"
  },
  {
    "text": "name it wouldn't be complete without Harry Potter Harry went to the second one which is expected because we",
    "start": "559240",
    "end": "567279"
  },
  {
    "text": "intuitively know uh that the Wizards node the wizards one node is full",
    "start": "567279",
    "end": "573079"
  },
  {
    "text": "but if you look at it if you look at the filter plugin so no resources fit uh",
    "start": "573079",
    "end": "579040"
  },
  {
    "text": "declared wizards one as unschedulable re reason is insufficient memory and the",
    "start": "579040",
    "end": "584880"
  },
  {
    "text": "scoring cycle wasn't even needed to run here because we have only one node where this can run so yeah that's how the",
    "start": "584880",
    "end": "591320"
  },
  {
    "text": "Harry pod went to wizards 2 node Jonathan do you want to spread some",
    "start": "591320",
    "end": "597519"
  },
  {
    "text": "magic yeah oh okay",
    "start": "597519",
    "end": "603120"
  },
  {
    "text": "prepare yes here you go all",
    "start": "603680",
    "end": "609079"
  },
  {
    "text": "right so if you came to this Stoke you're quite likely to wonder how you can conjur up your own scheduling spells",
    "start": "609839",
    "end": "617320"
  },
  {
    "text": "so we will start with the OG the shedu extenders so the shedule extenders were",
    "start": "617320",
    "end": "622680"
  },
  {
    "text": "the original methods for extending the kubernetes scheduler uh to simple Json",
    "start": "622680",
    "end": "628040"
  },
  {
    "text": "based web hooks and this allows any programming language to be used and while this approach allows flexibility",
    "start": "628040",
    "end": "635279"
  },
  {
    "text": "it can also introduce higher latency in the scheduling decisions this is mostly because of network calls and also",
    "start": "635279",
    "end": "641320"
  },
  {
    "text": "serialization der calization of Json um it will also lack cache",
    "start": "641320",
    "end": "647560"
  },
  {
    "text": "consistency uh with the schu's internal State because it is running as a completely separate process so it needs",
    "start": "647560",
    "end": "653440"
  },
  {
    "text": "to maintain it's if it's a stateful plugin it will need to maintain its own State as well uh the extenders can",
    "start": "653440",
    "end": "660560"
  },
  {
    "text": "influence various phases of the shelling process such as filter preempt which is",
    "start": "660560",
    "end": "666000"
  },
  {
    "text": "the post filter prioritize which is basically sort um and bind and notably",
    "start": "666000",
    "end": "673120"
  },
  {
    "text": "during the bind phase an extender can completely take over the actual binding of the pods to the nodes effectively",
    "start": "673120",
    "end": "679240"
  },
  {
    "text": "replacing the scheduler binding logic and providing full control of how the pods are assigned this whole mechanism",
    "start": "679240",
    "end": "686480"
  },
  {
    "text": "enables customiz scheduling decision but comes with trade offs in terms of performance and",
    "start": "686480",
    "end": "692120"
  },
  {
    "text": "consistency now let's head to the slitter in Dungeon as I'm going to show you how to write an extender in",
    "start": "692120",
    "end": "700399"
  },
  {
    "text": "Python so first I will explain what we're trying to achieve with this uh",
    "start": "702279",
    "end": "707560"
  },
  {
    "text": "this extender so we chose for examples the idea of having a regex extension so what we mean by that",
    "start": "707560",
    "end": "715399"
  },
  {
    "text": "is that it's it's a very simple filter plugin it's quite silly you could do the same kind of stuff with labels and and",
    "start": "715399",
    "end": "721880"
  },
  {
    "text": "and other things but in our case we're going to look for a very specific annotation and uh in the pods and if",
    "start": "721880",
    "end": "728880"
  },
  {
    "text": "that annotation contains a regex then we're going to compile that regx and we're going to apply it to match with",
    "start": "728880",
    "end": "735440"
  },
  {
    "text": "the nodes the nodes that are matching will be returned as uh as a matching",
    "start": "735440",
    "end": "740480"
  },
  {
    "text": "nodes and the other ones will be marked as unschedulable so let's dive into the",
    "start": "740480",
    "end": "745680"
  },
  {
    "text": "code this is written using modern Asing python with fast",
    "start": "745680",
    "end": "750839"
  },
  {
    "text": "API uh we have essentially just one um",
    "start": "750839",
    "end": "756120"
  },
  {
    "text": "endpoint which is SL filter in that endpoint the first thing we do is we just retrieve uh we decode uh the data",
    "start": "756120",
    "end": "763959"
  },
  {
    "text": "that we received through Json this will contain the entire information about all",
    "start": "763959",
    "end": "769000"
  },
  {
    "text": "the nodes in the cluster which is really heavy um and it will contain information",
    "start": "769000",
    "end": "774279"
  },
  {
    "text": "about the Pod being scheduled the first thing we do is that we look for uh the",
    "start": "774279",
    "end": "779639"
  },
  {
    "text": "annotation if we don't find any annotation then we just return success because then we're not concerned with",
    "start": "779639",
    "end": "785639"
  },
  {
    "text": "that pods we then try to compile the regex if the if it is an invalid regex",
    "start": "785639",
    "end": "790839"
  },
  {
    "text": "then we actually uh return an error which will Mark the Pod as unschedulable um for for for all the",
    "start": "790839",
    "end": "797480"
  },
  {
    "text": "nodes it basically that pod will need to be deleted um otherwise it will just be retried over and",
    "start": "797480",
    "end": "803720"
  },
  {
    "text": "over and then we just build we've got a list of nodes list of failed nodes we just go through them with our regex um",
    "start": "803720",
    "end": "811639"
  },
  {
    "text": "interestingly the nodes what we return is again the entire node list which",
    "start": "811639",
    "end": "817320"
  },
  {
    "text": "again can get pretty heavy uh there is an optimization that could be done which is that if your plug-in is node cache",
    "start": "817320",
    "end": "824519"
  },
  {
    "text": "capable and can actually query and maintain the cache about the nodes then you can use an um you can get only node",
    "start": "824519",
    "end": "832600"
  },
  {
    "text": "names instead which we could have done for this plugin uh because it it's quite a silly",
    "start": "832600",
    "end": "838600"
  },
  {
    "text": "plugin after all um let me now deploy it so this is just a make Target that is",
    "start": "838600",
    "end": "844880"
  },
  {
    "text": "building a Docker image with the python code with UV Etc and then running it um",
    "start": "844880",
    "end": "852279"
  },
  {
    "text": "you can see the logs over here now we have created a few nodes uh",
    "start": "852279",
    "end": "860680"
  },
  {
    "text": "before Phoenix one o we're going to",
    "start": "860680",
    "end": "865759"
  },
  {
    "text": "configure our extender to do that I will need to add this to the scheduler config",
    "start": "865759",
    "end": "874279"
  },
  {
    "text": "this is basically uh saying this is the URL where you can find my extender and this is the path to the filter endpoint",
    "start": "874279",
    "end": "882880"
  },
  {
    "text": "so SL filter I'm applying this and now I will create a new pod so we should have",
    "start": "882880",
    "end": "889720"
  },
  {
    "text": "some women as well let's go with Glinda from the Oz universe and Glinda did get",
    "start": "889720",
    "end": "897800"
  },
  {
    "text": "schedule onto the o spot as we expected unfortunately we won't see the results",
    "start": "897800",
    "end": "903680"
  },
  {
    "text": "over here that's a limitation current limitation of the simulator but the simulator is also adding all kinds of",
    "start": "903680",
    "end": "909120"
  },
  {
    "text": "annotations if you look closely on this annotation the extended filter result you will see that we return all the",
    "start": "909120",
    "end": "915639"
  },
  {
    "text": "matching nodes this is again as I said a lot of data and the fail nodes with the",
    "start": "915639",
    "end": "921040"
  },
  {
    "text": "reason for their failure and that's it",
    "start": "921040",
    "end": "926160"
  },
  {
    "text": "for thank you Jonathan quite a lovely demo you're",
    "start": "926160",
    "end": "932199"
  },
  {
    "text": "welcome okay so uh after schedu extenders um became the scheduling",
    "start": "935880",
    "end": "943240"
  },
  {
    "text": "framework which is a framework uh framework built into the core kubernetes",
    "start": "943240",
    "end": "951560"
  },
  {
    "text": "uh it's a pluggable architecture for the Schuler so it consists of a set of",
    "start": "951560",
    "end": "956759"
  },
  {
    "text": "plug-in apis that uh are compiled directly into the scheduler and these apis allow most scheduling features to",
    "start": "956759",
    "end": "964319"
  },
  {
    "text": "be implemented as plugins so the idea was to keep the core logic uh",
    "start": "964319",
    "end": "969920"
  },
  {
    "text": "lightweight maintainable and then you can just uh easily import that framework",
    "start": "969920",
    "end": "976240"
  },
  {
    "text": "Define your plugins and uh easily actually not that easily but build your",
    "start": "976240",
    "end": "982160"
  },
  {
    "text": "custom schedulers so um a couple of terms here there are the concept of in",
    "start": "982160",
    "end": "987759"
  },
  {
    "text": "three and out of three plus plugins inry plugins are plugins which live in the kubernetes code base when I showed the",
    "start": "987759",
    "end": "994639"
  },
  {
    "text": "simulator when I uh open the Schuler config there was a default schedular",
    "start": "994639",
    "end": "1000639"
  },
  {
    "text": "profile and it had a couple of uh plugins enabled by default and uh some",
    "start": "1000639",
    "end": "1006560"
  },
  {
    "text": "of those plugins are node name plug-in for specific node placement this is a filter plugin which uh if a pod defines",
    "start": "1006560",
    "end": "1013959"
  },
  {
    "text": "a node name it matches it with the nodes and for which node it matches it filters",
    "start": "1013959",
    "end": "1020040"
  },
  {
    "text": "out the rest there is an image locality plugin which um prioritize catched images meaning that's a scoring plugin",
    "start": "1020040",
    "end": "1027240"
  },
  {
    "text": "which will assign higher scores to the nodes which have the docker image cached which the Pod wants to execute uh there",
    "start": "1027240",
    "end": "1035079"
  },
  {
    "text": "is the node resources fit plugin which uh also does filtering and scoring and",
    "start": "1035079",
    "end": "1040120"
  },
  {
    "text": "ensure a node has uh the required resources available that the Pod",
    "start": "1040120",
    "end": "1046798"
  },
  {
    "text": "requests um besides that there are out of three plugins out of three plugins are plugins which live outside of the",
    "start": "1046799",
    "end": "1053160"
  },
  {
    "text": "kubernetes code base so those are plugins built using the scheduling framework uh most popular repo is the",
    "start": "1053160",
    "end": "1060240"
  },
  {
    "text": "kubernetes 6 scheduler plugins which contains there is the capacity scheduling plugin uh you have co-",
    "start": "1060240",
    "end": "1066679"
  },
  {
    "text": "scheduling for uh All or Nothing scheduling you have plugins for Network",
    "start": "1066679",
    "end": "1072240"
  },
  {
    "text": "aware scheduling power efficiency aware scheduling so you could use that to",
    "start": "1072240",
    "end": "1077559"
  },
  {
    "text": "customize your strategy based on how literally how you want it to work so um let's see how we can build",
    "start": "1077559",
    "end": "1086799"
  },
  {
    "text": "the same plugin which Jonathan described now uh using go and the scheduling",
    "start": "1086799",
    "end": "1093320"
  },
  {
    "text": "framework so okay if we",
    "start": "1093320",
    "end": "1099640"
  },
  {
    "text": "go uh like one more time",
    "start": "1099640",
    "end": "1106400"
  },
  {
    "text": "again ah amazing thank you so yeah like I said we import the scheduling",
    "start": "1106400",
    "end": "1113559"
  },
  {
    "text": "framework and then we want to build just a filter plug-in meaning we need to implement only the filter method we do",
    "start": "1113559",
    "end": "1120799"
  },
  {
    "text": "literally the same thing we get The annotation if it exists uh we compile",
    "start": "1120799",
    "end": "1126520"
  },
  {
    "text": "the pattern if it's fine then we do match if it is a match we return a success otherwise we return",
    "start": "1126520",
    "end": "1132480"
  },
  {
    "text": "unschedulable and yeah pretty simple plug-in here's the go implementation and",
    "start": "1132480",
    "end": "1137679"
  },
  {
    "text": "uh the key difference with the key difference that this one actually will get called for each",
    "start": "1137679",
    "end": "1143679"
  },
  {
    "text": "node yes thank you for reminding me so uh yeah based on Jonathan's extender uh",
    "start": "1143679",
    "end": "1151320"
  },
  {
    "text": "there kubernetes scheduler will send a list of all nodes but here because this",
    "start": "1151320",
    "end": "1156360"
  },
  {
    "text": "is baked into the scheduler the filter method is called so in a scheduling",
    "start": "1156360",
    "end": "1162400"
  },
  {
    "text": "cycle for a pod this method is called for each node which is evaluated and",
    "start": "1162400",
    "end": "1167840"
  },
  {
    "text": "also you have par parallelism configuration in the schedu config so this can be done in parallel to speed it",
    "start": "1167840",
    "end": "1174360"
  },
  {
    "text": "up and um let's say we want to use it in a real world kubernetes cluster so what",
    "start": "1174360",
    "end": "1181320"
  },
  {
    "text": "we would do in this case is uh in we would create a main function in that",
    "start": "1181320",
    "end": "1187600"
  },
  {
    "text": "main function we would import the complete Cube scheduler application so",
    "start": "1187600",
    "end": "1193600"
  },
  {
    "text": "we import it we run the cube scheduler only difference is when we are in iting",
    "start": "1193600",
    "end": "1199159"
  },
  {
    "text": "the command we have the ability to provide options and the option which is of interest to us is this with plugin",
    "start": "1199159",
    "end": "1205720"
  },
  {
    "text": "where we WP the original kubernetes Schuler and we register our custom",
    "start": "1205720",
    "end": "1211600"
  },
  {
    "text": "plugins after that we would build this package it in a Docker image and then we",
    "start": "1211600",
    "end": "1216720"
  },
  {
    "text": "have two options if we have privileged access to the control plane we can just update the scheduler to use our new",
    "start": "1216720",
    "end": "1222480"
  },
  {
    "text": "Custom Image or if we don't have we can just start wrap this in a kubernetes",
    "start": "1222480",
    "end": "1227760"
  },
  {
    "text": "deployment this alongside the default Schuler and just Define a different scheduling profile in the Schuler",
    "start": "1227760",
    "end": "1235520"
  },
  {
    "text": "configuration uh before we do all of those steps probably we would want to validate that our plugin Works our",
    "start": "1235520",
    "end": "1242360"
  },
  {
    "text": "plugin is uh performant so actually we can go to the scheduler and uh to the",
    "start": "1242360",
    "end": "1248840"
  },
  {
    "text": "simulator and test the plug-in out so the simulator already has support",
    "start": "1248840",
    "end": "1255480"
  },
  {
    "text": "for defining plugins and test in them so",
    "start": "1255480",
    "end": "1260679"
  },
  {
    "text": "if we go to the simulator then simulator in this case we",
    "start": "1260679",
    "end": "1267400"
  },
  {
    "text": "would import our plug-in we just wrote okay this got",
    "start": "1267400",
    "end": "1274120"
  },
  {
    "text": "added uh then we just reference it here so in",
    "start": "1274120",
    "end": "1283200"
  },
  {
    "text": "uh simulator schedu uh simulator Schuler config plug-in go there is support where",
    "start": "1283200",
    "end": "1289400"
  },
  {
    "text": "you can uh import your out of three plugins so we add this is our module here we say regx",
    "start": "1289400",
    "end": "1299279"
  },
  {
    "text": "name of our plugin regx new",
    "start": "1299279",
    "end": "1304440"
  },
  {
    "text": "okay let's try to build it let's see if simulator is Happy those make targets",
    "start": "1304440",
    "end": "1310919"
  },
  {
    "text": "are very convenient they do a lot of heavy lifting behind the scenes so whoever is interested please",
    "start": "1310919",
    "end": "1317400"
  },
  {
    "text": "check out the repo we really did our best to make it as simple as possible uh we rebuil the simulator",
    "start": "1317400",
    "end": "1323799"
  },
  {
    "text": "it should now contain the plugin which we created what do we need to do now we go",
    "start": "1323799",
    "end": "1330799"
  },
  {
    "text": "to the uh Schuler settings uh schuer configuration we need to enable the",
    "start": "1330799",
    "end": "1335960"
  },
  {
    "text": "plugin here so we add in the uh default scheduler profile in the multipoint",
    "start": "1335960",
    "end": "1342159"
  },
  {
    "text": "enabled we add our",
    "start": "1342159",
    "end": "1347200"
  },
  {
    "text": "regex Reg scheduling perfect okay uh let's try now",
    "start": "1347200",
    "end": "1354679"
  },
  {
    "text": "to schedule something and validate that it works we can use",
    "start": "1354679",
    "end": "1360240"
  },
  {
    "text": "the oh actually there is a better example yeah so we don't leave out the Phoenix nodes so we say new",
    "start": "1360240",
    "end": "1368760"
  },
  {
    "text": "pod uh name serious annotation Phoenix okay it went on the Node which we",
    "start": "1368760",
    "end": "1375400"
  },
  {
    "text": "expected if we check out the filter plugins we can see here's a reix scheduling plugin for the O nodes it",
    "start": "1375400",
    "end": "1382640"
  },
  {
    "text": "said aha okay it doesn't match The annotation uh the reix in The annotation which is",
    "start": "1382640",
    "end": "1388640"
  },
  {
    "text": "phoenix. wildcard and yeah if we want to update the",
    "start": "1388640",
    "end": "1395520"
  },
  {
    "text": "plug-in so we need to go through all this the Complete Dance we'll update the",
    "start": "1395520",
    "end": "1400720"
  },
  {
    "text": "code then rebuild update the Schuler and that would be",
    "start": "1400720",
    "end": "1406480"
  },
  {
    "text": "about the scheduling framew works so Jonathan main but wait like I thought",
    "start": "1406480",
    "end": "1413720"
  },
  {
    "text": "that in the title of the talk there was like wasm right uh so when when when are",
    "start": "1413720",
    "end": "1420080"
  },
  {
    "text": "we talking about wasm exactly uh just don't worry we're getting there if I can find the the right desktop again yeah um",
    "start": "1420080",
    "end": "1431840"
  },
  {
    "text": "that's why is this not working",
    "start": "1432760",
    "end": "1437440"
  },
  {
    "text": "yes okay so wasm plugins that's the third method for extending your",
    "start": "1440720",
    "end": "1446919"
  },
  {
    "text": "kubernetes scheduler you can do it through something that is called the wasm extension plugin that's a little",
    "start": "1446919",
    "end": "1452279"
  },
  {
    "text": "bit confusing but this is a plugin not written in wasm written in go which",
    "start": "1452279",
    "end": "1457880"
  },
  {
    "text": "integrates directly with the scheduling framework exactly what like what Dean showed you um and you build it once but",
    "start": "1457880",
    "end": "1465360"
  },
  {
    "text": "then what's cool is that that plugin you deploy it one you build it once you deploy it once and then this one can",
    "start": "1465360",
    "end": "1471640"
  },
  {
    "text": "load different wasm modules the the actual plugins that we want to write atrun time based on the schedu",
    "start": "1471640",
    "end": "1479159"
  },
  {
    "text": "configuration it does that by implementing all of the scheduling framework endpoints so all of the ones",
    "start": "1479159",
    "end": "1485039"
  },
  {
    "text": "that we saw in green um and it's forwarding requests for the endpoints to",
    "start": "1485039",
    "end": "1491120"
  },
  {
    "text": "the wasm plugin um that it got that it loaded but it does that only for the uh",
    "start": "1491120",
    "end": "1498799"
  },
  {
    "text": "phases that got implemented in the wasm plugins themselves the other ones is just no Ops so there's no cost to that",
    "start": "1498799",
    "end": "1505880"
  },
  {
    "text": "um it's loading the wasm plugins via URL so you can deploy your wasm uh plugin to",
    "start": "1505880",
    "end": "1512120"
  },
  {
    "text": "a web server an S3 bucket um that that that basically means that you don't need",
    "start": "1512120",
    "end": "1517799"
  },
  {
    "text": "to recompile and ship the entire scheduler anymore um and also because it the",
    "start": "1517799",
    "end": "1525600"
  },
  {
    "text": "because the wasm extension plugin is running inside schedular process it's avoiding all the latency and cash on",
    "start": "1525600",
    "end": "1531880"
  },
  {
    "text": "inconsistency issues that were associated with the extenders developers can write plugins",
    "start": "1531880",
    "end": "1539200"
  },
  {
    "text": "in any language that can compile to wzy although right now the support is limited to go due to the plugins",
    "start": "1539200",
    "end": "1546760"
  },
  {
    "text": "development preceding the wasm component model we'll get there as a result parts",
    "start": "1546760",
    "end": "1551960"
  },
  {
    "text": "of the sheding framework had to be duplicated or forwarded to the guest environment so to the wasm module that",
    "start": "1551960",
    "end": "1558919"
  },
  {
    "text": "gets loaded and that enables the wasm module to call back into the scheduler for certain functions additionally and",
    "start": "1558919",
    "end": "1566880"
  },
  {
    "text": "that's actually quite important with web assembly with wasm um you have a sandboxed environment so that means that",
    "start": "1566880",
    "end": "1573679"
  },
  {
    "text": "the guest plugin only has access to the functions and resources that have been explicitly defined by the host so that",
    "start": "1573679",
    "end": "1579480"
  },
  {
    "text": "enhances the security and isolation now while there are more sdks",
    "start": "1579480",
    "end": "1586480"
  },
  {
    "text": "that could be added for broader language support to the wasm to the wasm extension plugin project I think we",
    "start": "1586480",
    "end": "1592880"
  },
  {
    "text": "could instead adopt the web assembly component model that's a recent addition to the wasm world that essentially",
    "start": "1592880",
    "end": "1598720"
  },
  {
    "text": "serves as both an ABI and an IDL that's lowering the barrier um to language",
    "start": "1598720",
    "end": "1606960"
  },
  {
    "text": "interop interoperability by allowing the automatic generation of bindings with with bind gen uh for a variety of",
    "start": "1606960",
    "end": "1614240"
  },
  {
    "text": "popular programming languages and this would further simplify and expend the use of wasm based sched plugins so we",
    "start": "1614240",
    "end": "1621159"
  },
  {
    "text": "would really love to have your help uh on that so now let's dive into a bit of",
    "start": "1621159",
    "end": "1627840"
  },
  {
    "text": "community's magic we have a demo where we'll conjure up a wasm plugin from",
    "start": "1627840",
    "end": "1633640"
  },
  {
    "text": "scratch and I'll probably will need to speed that up um so here is a wasm",
    "start": "1633640",
    "end": "1641399"
  },
  {
    "text": "plugin it is very very similar and it's the exact same logic as what Dean just",
    "start": "1641399",
    "end": "1646760"
  },
  {
    "text": "showed you before the key key differences is that it is not importing",
    "start": "1646760",
    "end": "1652000"
  },
  {
    "text": "the uh scheduling framework but rather rather the guest SDK from the wasm",
    "start": "1652000",
    "end": "1657200"
  },
  {
    "text": "extension plugin which is replicating some of those functionalities apart from that it's virtually identical um the",
    "start": "1657200",
    "end": "1665080"
  },
  {
    "text": "main for that one is a little bit different the important bit is that we're using uh we're not wrapping an",
    "start": "1665080",
    "end": "1672600"
  },
  {
    "text": "entire scheduler this time we are just wrapping one plugin and that's it um",
    "start": "1672600",
    "end": "1678640"
  },
  {
    "text": "um the way you compile it is uh in all case we we have a make file for that but",
    "start": "1678640",
    "end": "1684440"
  },
  {
    "text": "basically you would use tinyo there are reasons for that and I can get into it later in the hallway if you want to um",
    "start": "1684440",
    "end": "1691840"
  },
  {
    "text": "so now I'm going to um I'm going to deploy it this is just",
    "start": "1691840",
    "end": "1699440"
  },
  {
    "text": "compiling uh it was already compiled and just creating a static web server which",
    "start": "1699440",
    "end": "1705640"
  },
  {
    "text": "is going to um serve the plugins that are over here so",
    "start": "1705640",
    "end": "1712679"
  },
  {
    "text": "how do I enable this I go back in here I will remove this reg scheduling because",
    "start": "1712679",
    "end": "1718799"
  },
  {
    "text": "it doesn't exist anymore uh wo oh the Snippets are gone that's",
    "start": "1718799",
    "end": "1728320"
  },
  {
    "text": "annoying what happened to the",
    "start": "1728320",
    "end": "1732000"
  },
  {
    "text": "Snippets um",
    "start": "1733399",
    "end": "1737399"
  },
  {
    "text": "I'm going to add the plugin to the multipoint enable",
    "start": "1738480",
    "end": "1744640"
  },
  {
    "text": "plugins but that's not enough we also need to Define where to find the wasm",
    "start": "1744640",
    "end": "1751000"
  },
  {
    "text": "module that we want to load I'm adding that here I'm applying",
    "start": "1751000",
    "end": "1756240"
  },
  {
    "text": "this let's see if it worked I'm just going to check in the static web server",
    "start": "1756240",
    "end": "1762559"
  },
  {
    "text": "the static web server got a get request so it is loaded and now let's try to sh",
    "start": "1762559",
    "end": "1768080"
  },
  {
    "text": "sched not pods it's going to be very antil climatic because it's going to be",
    "start": "1768080",
    "end": "1773720"
  },
  {
    "text": "exactly what you expect it to be and as the demo didn't work yes Alaba went to a",
    "start": "1773720",
    "end": "1780360"
  },
  {
    "text": "no node and you can see here same principle we can see the results so this",
    "start": "1780360",
    "end": "1786399"
  },
  {
    "text": "is all very cool uh I had I had also prepared a V2 I will not show it to you",
    "start": "1786399",
    "end": "1792559"
  },
  {
    "text": "the V2 is using prefilter so that basically the um the regx does does not",
    "start": "1792559",
    "end": "1798279"
  },
  {
    "text": "need to be compiled for every call to the node but instead we compile it once during pre- filter we save it into the",
    "start": "1798279",
    "end": "1803880"
  },
  {
    "text": "state retrieve it into each filter call and we just use that and virus Auto",
    "start": "1803880",
    "end": "1810000"
  },
  {
    "text": "optimizations it's all in the repo well when you sell it that hard I think it's not fair enough to show it so oh we'll",
    "start": "1810000",
    "end": "1816960"
  },
  {
    "text": "need to cut down some other things then but okay I I will quickly quickly show it so um the differences are here you've",
    "start": "1816960",
    "end": "1826200"
  },
  {
    "text": "got a whole prefilter that's has been defined now and as I just explained this one now is the one responsible for",
    "start": "1826200",
    "end": "1832159"
  },
  {
    "text": "getting The annotation if there's no annotation we're done if there's an annotation we compile it and we store it",
    "start": "1832159",
    "end": "1839440"
  },
  {
    "text": "in the state then in the filter we don't look at the Pod we only look at the",
    "start": "1839440",
    "end": "1845039"
  },
  {
    "text": "state if there's no key in the state then we can just return success and otherwise we can do our match but what's",
    "start": "1845039",
    "end": "1852600"
  },
  {
    "text": "really really really cool with all of this is that now I don't need to do any redeployment all I have to do is go in",
    "start": "1852600",
    "end": "1860120"
  },
  {
    "text": "here update my URL just apply and now I",
    "start": "1860120",
    "end": "1865279"
  },
  {
    "text": "can create yet another pods still",
    "start": "1865279",
    "end": "1872720"
  },
  {
    "text": "women let's see where Mina goes she goes to Phoenix as expected except this time",
    "start": "1873559",
    "end": "1879840"
  },
  {
    "text": "that was a more optimized of course in this case there's only two notes over to you Dan thank you so",
    "start": "1879840",
    "end": "1888399"
  },
  {
    "text": "all this was nice but we want to assure that uh what we did is performance so",
    "start": "1888399",
    "end": "1897399"
  },
  {
    "text": "how do we quickly and easily test this at scale qua is a powerful toolkit",
    "start": "1897399",
    "end": "1904120"
  },
  {
    "text": "designed for simulating kubernetes clusters on a massive scale so quac stands kubernetes without cuet meaning",
    "start": "1904120",
    "end": "1911440"
  },
  {
    "text": "you have the qu operator which actually uh takes control and uh uh fake nodes",
    "start": "1911440",
    "end": "1919039"
  },
  {
    "text": "meaning you can create how many nodes you want literally you can create",
    "start": "1919039",
    "end": "1924279"
  },
  {
    "text": "thousands and uh the footprint is really small so on your local machine you can",
    "start": "1924279",
    "end": "1930240"
  },
  {
    "text": "create a kubernetes cluster with let's say 5,000 nodes and schedule what",
    "start": "1930240",
    "end": "1936200"
  },
  {
    "text": "100,000 pods on them um so you those nodes aren't running a cuet those notes",
    "start": "1936200",
    "end": "1943279"
  },
  {
    "text": "are managed by the quo operator so the quo operator is in charge of sending the hard bits and then doing the whole",
    "start": "1943279",
    "end": "1949760"
  },
  {
    "text": "protocol how a node reports to be healthy with the control plane so this",
    "start": "1949760",
    "end": "1955159"
  },
  {
    "text": "has a couple of use cases or the most obvious one if you're a scheduler uh plug-in developer you can",
    "start": "1955159",
    "end": "1962639"
  },
  {
    "text": "use it to see how your schedu or plug-in performs if you let's say create 5,000 nodes uh want to schedule 200 pods per",
    "start": "1962639",
    "end": "1971720"
  },
  {
    "text": "second if you're doing crd controller testing you don't need to use fake clients or if you want to test test your",
    "start": "1971720",
    "end": "1978559"
  },
  {
    "text": "um validating and mutating web hooks you can also the trigger them at scale control plane performance we actually",
    "start": "1978559",
    "end": "1985240"
  },
  {
    "text": "use this to test atcd and uh the API server because we do a lot of bad",
    "start": "1985240",
    "end": "1990720"
  },
  {
    "text": "scheduling and we were running into interesting issues so yeah what would what you would do with this is create",
    "start": "1990720",
    "end": "1997279"
  },
  {
    "text": "your plugin however you want web assembly extender scheduling framework",
    "start": "1997279",
    "end": "2002519"
  },
  {
    "text": "um add it into your cluster and then you can just uh install the quo operator you",
    "start": "2002519",
    "end": "2008120"
  },
  {
    "text": "can add a couple of hundred or couple of thousand nodes you can also install Q promus stch because that comes",
    "start": "2008120",
    "end": "2013679"
  },
  {
    "text": "pre-loaded with uh really nice grafana dashboards for kubernetes API server for kubernetes scheduler and uh also there",
    "start": "2013679",
    "end": "2021320"
  },
  {
    "text": "is an interesting utility called bch simulator which can be used uh you can",
    "start": "2021320",
    "end": "2027039"
  },
  {
    "text": "schedule pods jobs whatever with predefined frequencies so you can literally replicate a b scheduling",
    "start": "2027039",
    "end": "2033200"
  },
  {
    "text": "scenario so that would be a flow how you could test",
    "start": "2033200",
    "end": "2038519"
  },
  {
    "text": "plugins at scale I think we're out of time so yeah here's the uh dashboard",
    "start": "2038519",
    "end": "2045240"
  },
  {
    "text": "which comes from the cube promus stack literally here you could uh observe if",
    "start": "2045240",
    "end": "2051320"
  },
  {
    "text": "you how how does it perform with the 99 percentile does your uh scheduler plugin",
    "start": "2051320",
    "end": "2057358"
  },
  {
    "text": "improve something make it worse sadly we'll need to skip the demo but so thank",
    "start": "2057359",
    "end": "2062599"
  },
  {
    "text": "you thank you thank you thank you we don't have time for questions I believe",
    "start": "2062599",
    "end": "2068118"
  }
]