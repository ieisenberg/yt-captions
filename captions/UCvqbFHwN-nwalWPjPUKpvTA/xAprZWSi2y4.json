[
  {
    "text": "we are happy to see you here and we're going to talk about simplified inner and",
    "start": "80",
    "end": "5240"
  },
  {
    "text": "outer Cloud native developer Loops we're going to talk about developer experience we're going to talk about some tools and",
    "start": "5240",
    "end": "10800"
  },
  {
    "text": "we're going to show you the live demos of how we think the the inner loop and outer loop can could work for for some",
    "start": "10800",
    "end": "18800"
  },
  {
    "text": "environments um I hope we you're going to enjoy that why are we talking about this in",
    "start": "18800",
    "end": "24240"
  },
  {
    "text": "general is because we want to talk about productivity developer time is a very",
    "start": "24240",
    "end": "30080"
  },
  {
    "text": "very expensive resource and well the more productive you are the the better",
    "start": "30080",
    "end": "35760"
  },
  {
    "text": "it is for the business the so you you save money right which is good we all",
    "start": "35760",
    "end": "41960"
  },
  {
    "text": "would like to save money yes we all would like to get more money and improve the margins and everything so how do we",
    "start": "41960",
    "end": "49199"
  },
  {
    "text": "waste time one of the most kind of sort of in an abstract sense biggest bottlenecks is when we do things again",
    "start": "49199",
    "end": "57440"
  },
  {
    "text": "and again but they're slightly different and we are we need to solve the problem",
    "start": "57440",
    "end": "63199"
  },
  {
    "text": "again and again and again um but but like we we cannot reuse the existing",
    "start": "63199",
    "end": "68320"
  },
  {
    "text": "Solutions right and we need to change small things and we get the tooling that",
    "start": "68320",
    "end": "73439"
  },
  {
    "text": "doesn't fit us that we maybe are not fully embracing for working with it and",
    "start": "73439",
    "end": "80960"
  },
  {
    "text": "uh that is that is not great I think that's called Reinventing the wheel right yes we Reinventing the wheel is",
    "start": "80960",
    "end": "87680"
  },
  {
    "text": "one of the biggest uh time SC so today we would like to look at the",
    "start": "87680",
    "end": "94040"
  },
  {
    "text": "workflows for your typical devops uh pipeline uh for your software",
    "start": "94040",
    "end": "99759"
  },
  {
    "text": "development cycle in a loop from code going to production uh and see how some",
    "start": "99759",
    "end": "105439"
  },
  {
    "text": "tools interact and how you can enable maybe better application developer experiences without sacrificing the",
    "start": "105439",
    "end": "113200"
  },
  {
    "text": "needs and your interest in production let's do it my name is Alex I work at as",
    "start": "113200",
    "end": "120280"
  },
  {
    "text": "a developer uh relations person and I work on the test containers project and",
    "start": "120280",
    "end": "125719"
  },
  {
    "text": "this is what we're going to use later for the demos as well you can find me by at life almost universally online and if",
    "start": "125719",
    "end": "132520"
  },
  {
    "text": "you are into that sort of thing uh check out my YouTube channel I do short videos with people is there any more fun facts",
    "start": "132520",
    "end": "139440"
  },
  {
    "text": "on those videos maybe I'll check them out hi everyone thanks so much for coming my name is Alice Gibbons I am",
    "start": "139440",
    "end": "145080"
  },
  {
    "text": "head of customer success at diagrid if you haven't heard of us we are we enable uh tools and apis for developers",
    "start": "145080",
    "end": "151920"
  },
  {
    "text": "building distributed systems and uh yeah we are big supporters of the Dapper",
    "start": "151920",
    "end": "157200"
  },
  {
    "text": "project which I'm going to talk about today and how it enables productivity so you know as o mentioned",
    "start": "157200",
    "end": "163480"
  },
  {
    "text": "how do we enable developer productivity right developer time equals money you all saw the slide you all believe it",
    "start": "163480",
    "end": "170000"
  },
  {
    "text": "maybe you don't um essentially we did a survey and we serveed over 150 developers uh and figured out you know",
    "start": "170000",
    "end": "176879"
  },
  {
    "text": "if they were Dapper users or not and 95% of them told us that Dapper saves developer time so this is me telling you",
    "start": "176879",
    "end": "183239"
  },
  {
    "text": "that Dapper will save you money yeah um essentially this was a huge number of people that we surveyed in terms of",
    "start": "183239",
    "end": "189599"
  },
  {
    "text": "large Enterprises all the way down to uh small and medium all different industry",
    "start": "189599",
    "end": "194720"
  },
  {
    "text": "verticals as well fex we had uh a few other you know midsize retail companies",
    "start": "194720",
    "end": "200440"
  },
  {
    "text": "and you know the amount of time that it saves you is debatable as you can see on this this slide here but you know we had",
    "start": "200440",
    "end": "206599"
  },
  {
    "text": "we had stakeholders saying that around 30% of higher of developer time was saved by enabling Dapper within your",
    "start": "206599",
    "end": "212439"
  },
  {
    "text": "code right yeah so that's something I'm going to talk about today right and today we talk about Dapper not just to",
    "start": "212439",
    "end": "218439"
  },
  {
    "text": "introduce you to Dapper but as an example of a production uh Cloud native tool that you would use in your",
    "start": "218439",
    "end": "226040"
  },
  {
    "text": "development Loop right and we're going to see how it impacts our application developer experiences as well exactly",
    "start": "226040",
    "end": "232599"
  },
  {
    "text": "and during this talk I'm going to be more the person that's on the production side okay I'm going to be the person on the production side and Ole over here is",
    "start": "232599",
    "end": "239040"
  },
  {
    "text": "going to be our our developer side exactly and we are going to work together in harmony hopefully hopefully",
    "start": "239040",
    "end": "245280"
  },
  {
    "text": "hopefully okay so what is Dapper I'm going to do a quick introduction just to get us all on the same page here uh if",
    "start": "245280",
    "end": "250640"
  },
  {
    "text": "you haven't heard of the project it stands for the distributed application runtime essentially what it is is a set",
    "start": "250640",
    "end": "255959"
  },
  {
    "text": "of apis that you can access from your code to write distributed systems okay and you're like okay what's a",
    "start": "255959",
    "end": "262079"
  },
  {
    "text": "distributed system you know we have a huge number of API Services uh apis like",
    "start": "262079",
    "end": "267280"
  },
  {
    "text": "specifications to create patterns and and um applications for things like workflow for things like message uh",
    "start": "267280",
    "end": "274280"
  },
  {
    "text": "publish And subscribe for things like synchronous communication via service invocation um and there are a huge",
    "start": "274280",
    "end": "279840"
  },
  {
    "text": "number of users uh that are using Dapper in production today um okay how does this look right",
    "start": "279840",
    "end": "286160"
  },
  {
    "text": "you're like that's that's cool what does it actually look like you can see on this side up here we have a number of",
    "start": "286160",
    "end": "291479"
  },
  {
    "text": "these apis that you can access directly from your code using your language of choice uh we have a number of sdks",
    "start": "291479",
    "end": "297479"
  },
  {
    "text": "within the project uh so you can build the Apper client in natively to your code or you can literally use hdp and",
    "start": "297479",
    "end": "303919"
  },
  {
    "text": "grpc Native clients in your code in your language of choice uh to reach out to these apis there also are a number of",
    "start": "303919",
    "end": "311800"
  },
  {
    "text": "observability security and resiliency features kind of built in at that App application layer right so if you want",
    "start": "311800",
    "end": "317680"
  },
  {
    "text": "to you know do a little bit of Shifting left and move some of your security features onto the application side one",
    "start": "317680",
    "end": "323680"
  },
  {
    "text": "of the things you can do is take advantage of some of the Dapper security features there this is hosted really on",
    "start": "323680",
    "end": "329840"
  },
  {
    "text": "any cloud or Edge infrastructure uh we see over 95% of people you know hosting this on kubernetes and hey this is cubec",
    "start": "329840",
    "end": "336520"
  },
  {
    "text": "con um but you know there are ways that you can run this on Virtual machines as well um and yeah this is running on a as",
    "start": "336520",
    "end": "344960"
  },
  {
    "text": "a sidecar model I didn't mention that so how this is enabled through what are called Dapper components uh Dapper the",
    "start": "344960",
    "end": "351880"
  },
  {
    "text": "Dapper component model enables the access of infrastructure from your code uh directly using your using the sidecar",
    "start": "351880",
    "end": "358479"
  },
  {
    "text": "and it actually abstracts the code and the languages or the libraries away from your applications making them super",
    "start": "358479",
    "end": "364880"
  },
  {
    "text": "duper modular super duper um composable and you can also shift the platform that you're running on so for instance you",
    "start": "364880",
    "end": "371120"
  },
  {
    "text": "can see a huge number of Services of infrastructure services on here things like you know for publish And subscribe",
    "start": "371120",
    "end": "377680"
  },
  {
    "text": "maybe you're using a your service bus maybe you're using reddis uh maybe you're using Kafka Dapper doesn't care",
    "start": "377680",
    "end": "383800"
  },
  {
    "text": "you can just swap out what's called the Dapper component uh and keep your code exactly the same running from",
    "start": "383800",
    "end": "389080"
  },
  {
    "text": "development into production um as I did mention you know Dapper typically does run as a sidecar",
    "start": "389080",
    "end": "396120"
  },
  {
    "text": "pattern there is you know your application code reaching out over Local Host to these apis again your choice",
    "start": "396120",
    "end": "402240"
  },
  {
    "text": "whether this is HP or grpc and there are a huge number of uh again these apis",
    "start": "402240",
    "end": "407400"
  },
  {
    "text": "that you can reach out to so you can kind of see on uh the side here we have this Local Host endpoint which is",
    "start": "407400",
    "end": "412479"
  },
  {
    "text": "exposing our Dapper side car uh and this is effectively you know my service invocation endpoint where I am invoking",
    "start": "412479",
    "end": "419280"
  },
  {
    "text": "another their service via the Dapper API uh maybe I'm you know publishing a message on my message broker all things",
    "start": "419280",
    "end": "425240"
  },
  {
    "text": "you might want to do while building a you know a typical kind of distributed system um this is also really important",
    "start": "425240",
    "end": "431960"
  },
  {
    "text": "for you know moving from development to production uh because your actual URLs do not change right you're running the",
    "start": "431960",
    "end": "438560"
  },
  {
    "text": "Dapper client locally you're reaching out over Local Host and then you're moving to production uh running that as",
    "start": "438560",
    "end": "444199"
  },
  {
    "text": "a side car still calling over Local Host so to illustrate our kind of you",
    "start": "444199",
    "end": "449919"
  },
  {
    "text": "know end to-end inner and outer developer Loops we're going to use this service called the pizza service everyone loves pizza um and essentially",
    "start": "449919",
    "end": "456879"
  },
  {
    "text": "what we're going to do here is we have a pizza store and this is you know a store that I'm going to place orders in and",
    "start": "456879",
    "end": "462759"
  },
  {
    "text": "I'm going to order a couple pizzas uh and then it has multiple composable Services one for the kitchen service",
    "start": "462759",
    "end": "468720"
  },
  {
    "text": "because you know how pizzas made they're made in the kitchen and then one for the delivery service to actually deliver",
    "start": "468720",
    "end": "473879"
  },
  {
    "text": "that pizza to you know our end users uh this is kind of a pretty standard simple",
    "start": "473879",
    "end": "478919"
  },
  {
    "text": "distributed system right we have a couple things going on we have our reddis key Value Store we're saving saving those orders in we also have h a",
    "start": "478919",
    "end": "486400"
  },
  {
    "text": "message broker we are publishing messages essentially from our kitchen and delivery services to let our",
    "start": "486400",
    "end": "492199"
  },
  {
    "text": "customers know hey what's going on with my pizza delivery if anyone's everever seen like the Domino's Pizza Tracker think like that but a super lowquality",
    "start": "492199",
    "end": "498840"
  },
  {
    "text": "version of it um what's cool about this if I rename the boxes here I can have",
    "start": "498840",
    "end": "504680"
  },
  {
    "text": "any application it could be your bank service it could be your your movie streaming C lock it could be it could be",
    "start": "504680",
    "end": "511039"
  },
  {
    "text": "anything this is your template for architecture exactly and if you have a you know one of these Services you are",
    "start": "511039",
    "end": "517760"
  },
  {
    "text": "typically taking dependencies on your infrastructure directly within your code right so you can kind of see in my pizza",
    "start": "517760",
    "end": "523080"
  },
  {
    "text": "store service here I have you know both the the Kafka and the reddest client because I am you know not only saving my",
    "start": "523080",
    "end": "528279"
  },
  {
    "text": "orders in my state store but I'm also receiving my uh message broker events to tell my customer hey what's going on",
    "start": "528279",
    "end": "534959"
  },
  {
    "text": "with my pizza order um and so this is kind of the pizza service how you would typically develop it with Dapper you",
    "start": "534959",
    "end": "541120"
  },
  {
    "text": "know a lot of these dependencies are removed so you actually can you know remove the SDK of CFA and of redus from",
    "start": "541120",
    "end": "547000"
  },
  {
    "text": "your code and you can actually just put in these the the Dapper client or the Dapper SDK um and then Reach Out",
    "start": "547000",
    "end": "553200"
  },
  {
    "text": "directly to the Dapper apis via their side cars um we also have a number of you",
    "start": "553200",
    "end": "558959"
  },
  {
    "text": "know features kind of built in here around observability security and resiliency and from a operational",
    "start": "558959",
    "end": "564480"
  },
  {
    "text": "perspective since I'm the operational Team all we really have to do is you know install Dapper into the cluster as",
    "start": "564480",
    "end": "571240"
  },
  {
    "text": "the platform team and then wire that available infrastructure so platform teams really like Dabber because what",
    "start": "571240",
    "end": "576720"
  },
  {
    "text": "they can do is actually create those Dabber component files and then hand those over to the developers with all",
    "start": "576720",
    "end": "582079"
  },
  {
    "text": "the necessary specifications for them to connect to their underlying infrastructure okay sounds great don't",
    "start": "582079",
    "end": "588320"
  },
  {
    "text": "need to reinvent the wheel there great okay yeah no Reinventing the field so should we check this out yeah yeah so we",
    "start": "588320",
    "end": "593720"
  },
  {
    "text": "have the pizza application and of course it's a it's an actual application running in the in the kuber cluster",
    "start": "593720",
    "end": "600480"
  },
  {
    "text": "somewhere um in a cloud or uh locally where Alice knows where it runs um there",
    "start": "600480",
    "end": "609440"
  },
  {
    "text": "are three components that we have the main one is The Pizza Store application it's a Java application how many of you",
    "start": "609440",
    "end": "615480"
  },
  {
    "text": "speak Java very good very good because we were not fully sure but it's good that all of",
    "start": "615480",
    "end": "621640"
  },
  {
    "text": "you almost all of you read Java naturally um amazing thank you so much",
    "start": "621640",
    "end": "626839"
  },
  {
    "text": "and so what we have in the code I'm just going to walk you through a tiny little bit of code here and then I'm going to show what this looks like running in production uh we have we're importing",
    "start": "626839",
    "end": "633720"
  },
  {
    "text": "our Dapper client this is how we're going to reach out to our Dapper API via code on the top here and then uh where",
    "start": "633720",
    "end": "640240"
  },
  {
    "text": "am I using this Dapper client we're going to check this out we're using this uh method in the state store method and",
    "start": "640240",
    "end": "646440"
  },
  {
    "text": "essentially what we're doing is we are saving our orders our orders that we're getting in for you know our pizzas we're",
    "start": "646440",
    "end": "651959"
  },
  {
    "text": "going to save those within the state store as a key value pair and essentially you can see I have this um",
    "start": "651959",
    "end": "658720"
  },
  {
    "text": "instantiate the instance of the Dabber client and then I'm actually reaching out to my state store all I really have",
    "start": "658720",
    "end": "664079"
  },
  {
    "text": "in code is this state store name and this is an environment variable and this is relating to my Dapper component file",
    "start": "664079",
    "end": "670959"
  },
  {
    "text": "uh under the hood which in this case I'm using a redus um key value store but again the nice thing about Dapper is",
    "start": "670959",
    "end": "676600"
  },
  {
    "text": "that is entirely abstracted from my code so if I do like a contrl f um and search for redus you can see I'm not getting",
    "start": "676600",
    "end": "682839"
  },
  {
    "text": "any results so no reddis within my code um on the right yes so in production if",
    "start": "682839",
    "end": "688240"
  },
  {
    "text": "I want to switch my data Bas from Rus to say POS grass I can do that without sure can very good very good I love that",
    "start": "688240",
    "end": "695240"
  },
  {
    "text": "amazing and you can kind of see on the right here I have my component file and this is the key things is I have this",
    "start": "695240",
    "end": "700760"
  },
  {
    "text": "you know metadata name which is KV store and I actually have a couple um metadata details that are specifically reaching",
    "start": "700760",
    "end": "706760"
  },
  {
    "text": "out to you know wherever that reddis uh cluster is stored in this case I've deployed it as a Helm chart on my",
    "start": "706760",
    "end": "711800"
  },
  {
    "text": "cluster but this could be like you know your reddis your hosted reddis in a cloud or you know a container on your",
    "start": "711800",
    "end": "717279"
  },
  {
    "text": "local machine um running locally again the only thing that has to change going from development to production is these",
    "start": "717279",
    "end": "723079"
  },
  {
    "text": "component uh these Dapper component files um so that's kind of how this is wired up from a Dapper perspective if I",
    "start": "723079",
    "end": "730000"
  },
  {
    "text": "hop over now to kubernetes um I can see I'm just going to check out what I have running so this is a pretty standard",
    "start": "730000",
    "end": "736480"
  },
  {
    "text": "kubernetes cluster I have a couple name spaces here uh you can see I have my daper system name space that is going to",
    "start": "736480",
    "end": "742000"
  },
  {
    "text": "be my daper control plane that I am have to that I'm going to be keeping up and running um for my Dapper side cars I",
    "start": "742000",
    "end": "748560"
  },
  {
    "text": "also have reddis which are my infrastructure providers which I care about you know CU I'm on the platform",
    "start": "748560",
    "end": "754360"
  },
  {
    "text": "operations team um if I look at my pods one of the things I'm going to",
    "start": "754360",
    "end": "759880"
  },
  {
    "text": "notice is those three uh services that I was talking about earlier so you know my Pizza Kitchen and delivery services and",
    "start": "759880",
    "end": "766120"
  },
  {
    "text": "you'll notice like a couple of these have um multiple containers running so I",
    "start": "766120",
    "end": "771680"
  },
  {
    "text": "have if I check out let's look at the Pizza Kitchen deployment so on the Pizza",
    "start": "771680",
    "end": "777240"
  },
  {
    "text": "Kitchen deployment I have a couple of these containers running I have one of them is my Dapper side car as well as uh",
    "start": "777240",
    "end": "782600"
  },
  {
    "text": "you know my Pizza Kitchen uh container image as well and these two are you know super important because again that's",
    "start": "782600",
    "end": "788639"
  },
  {
    "text": "going to allow that connection to those Dapper apis from within my code okay and then I also have last but not least to",
    "start": "788639",
    "end": "795519"
  },
  {
    "text": "prove everything is running I also have my you know my Dapper components which are again those those uh component crds",
    "start": "795519",
    "end": "801000"
  },
  {
    "text": "those custom resource definitions uh to reach out to my infrastructure okay does this work I",
    "start": "801000",
    "end": "807440"
  },
  {
    "text": "don't know it's a great question okay so what does this look like so here is our pizza store um we have thank you we have",
    "start": "807440",
    "end": "815199"
  },
  {
    "text": "the our Cube gon pizza store and you know it was just lunch but I'm still hungry and uh I'm a vegetarian sorry o",
    "start": "815199",
    "end": "821959"
  },
  {
    "text": "like so I'm going to get this vegan pepperoni and ice tea I supp um so I'm going to send a place order and I'm",
    "start": "821959",
    "end": "827399"
  },
  {
    "text": "going to get a bunch of events that are coming into the UI here yay it's working in production fantastic so you can kind",
    "start": "827399",
    "end": "833440"
  },
  {
    "text": "of see these events coming through to rui again this is wired up also through Dapper via uh publish And subscribe",
    "start": "833440",
    "end": "840959"
  },
  {
    "text": "messaging and you can kind of see where these events are coming from they are coming from the kitchen service they're coming from The Pizza Store Service as",
    "start": "840959",
    "end": "847680"
  },
  {
    "text": "well as that delivery service and hey you know should be coming any minute now yeah so this demo application is of",
    "start": "847680",
    "end": "853680"
  },
  {
    "text": "course like public it sits somewhere on GitHub so if you want to Tinker with it yourself you can absolutely use this uh",
    "start": "853680",
    "end": "859759"
  },
  {
    "text": "very very easily right so so we do we do this and it works it works in kubernetes",
    "start": "859759",
    "end": "865639"
  },
  {
    "text": "it works in my production cuz why not right yeah I have my cluster I have my",
    "start": "865639",
    "end": "870720"
  },
  {
    "text": "things so what about what about then the inner loop of development process right",
    "start": "870720",
    "end": "876519"
  },
  {
    "text": "as an application developer do I do I do I like this setup right production",
    "start": "876519",
    "end": "881720"
  },
  {
    "text": "always wins right if something has to be done in production as a developer I I I",
    "start": "881720",
    "end": "887560"
  },
  {
    "text": "canot just say no right if my if my production system uses Dapper I need to accommodate so that means I need to",
    "start": "887560",
    "end": "894680"
  },
  {
    "text": "leverage and learn and use the same tools that I would use for production to deal with my uh with my setup so that as",
    "start": "894680",
    "end": "902120"
  },
  {
    "text": "an application developer that very often doesn't bring me a lot of joy and a lot of productivity because I need to learn",
    "start": "902120",
    "end": "908120"
  },
  {
    "text": "new tools that I might not be familiar with I need to work with my complexity of a like running a kubernetes cluster I",
    "start": "908120",
    "end": "915440"
  },
  {
    "text": "need to understand how to install things I need to understand the sidecar model for the particular things I need to",
    "start": "915440",
    "end": "921440"
  },
  {
    "text": "understand how to debug that when stuff will go wrong and it will and I will hit my head on the wood like a woodpacker uh",
    "start": "921440",
    "end": "929079"
  },
  {
    "text": "and then I I also need to have some sort of resemblance of uh how I run this",
    "start": "929079",
    "end": "935079"
  },
  {
    "text": "locally on my machine when I develop my applications and then I also will need to have the same setup in the continuous",
    "start": "935079",
    "end": "941319"
  },
  {
    "text": "integration environment because I'm going to run tests there I need that setup also work with my application so I",
    "start": "941319",
    "end": "947759"
  },
  {
    "text": "need some kubernetes clusters in my CI uh and and that that is that is the",
    "start": "947759",
    "end": "953480"
  },
  {
    "text": "complexity that the production choices bring to me as a developer and this is",
    "start": "953480",
    "end": "958639"
  },
  {
    "text": "not this is not ideal because it complicates your development process it complicates your own boarding everyone",
    "start": "958639",
    "end": "965319"
  },
  {
    "text": "on your team needs to figure out how to do this new people joining your projects need to figure out how to do this and in",
    "start": "965319",
    "end": "971279"
  },
  {
    "text": "general there are very many concerns that are not application development specific in this scenario can we do",
    "start": "971279",
    "end": "977160"
  },
  {
    "text": "better that's the question and we we ponder that and we try that and we we",
    "start": "977160",
    "end": "982319"
  },
  {
    "text": "figured out maybe a different setup and the main premise of that setup right is",
    "start": "982319",
    "end": "988240"
  },
  {
    "text": "that my production systems are environment specific right and they the",
    "start": "988240",
    "end": "993759"
  },
  {
    "text": "tools to work with production systems are all sort of environment specific in",
    "start": "993759",
    "end": "999000"
  },
  {
    "text": "production I work with clusters right I work with deployments I I I roll out deployments like the application is a",
    "start": "999000",
    "end": "1006480"
  },
  {
    "text": "mere detail there right because I work with infrastructure and so on so if I as",
    "start": "1006480",
    "end": "1012319"
  },
  {
    "text": "a developer need to understand this whole picture right there is a lot of moving building blocks there as an",
    "start": "1012319",
    "end": "1018040"
  },
  {
    "text": "application developer do I actually work on all of that absolutely not most often",
    "start": "1018040",
    "end": "1023600"
  },
  {
    "text": "the not the actual things that I'm as an application developer working on are my",
    "start": "1023600",
    "end": "1028678"
  },
  {
    "text": "applications so my local development setup and my processes are very application Centric because I want to",
    "start": "1028679",
    "end": "1035640"
  },
  {
    "text": "work with a single application I want to run the test for that application I want to implement changes in a particular",
    "start": "1035640",
    "end": "1041520"
  },
  {
    "text": "application and then pass it into the CI and then make CI build a new version of that and then it will flow into the",
    "start": "1041520",
    "end": "1049080"
  },
  {
    "text": "outerloop of the development naturally but I don't want to I don't want to deal with kubernetes clusters I I mean I can",
    "start": "1049080",
    "end": "1057200"
  },
  {
    "text": "cuz I'm a professional but if I could avoid that maybe this is a little bit easier for me so and this is where this",
    "start": "1057200",
    "end": "1065080"
  },
  {
    "text": "is where this is where we we can try and build it better and developers love API",
    "start": "1065080",
    "end": "1071520"
  },
  {
    "text": "we know how to work with API we know how to request things if if if you are",
    "start": "1071520",
    "end": "1076679"
  },
  {
    "text": "building any sort of developer oriented tools if you give developers API they can build things for themselves right so",
    "start": "1076679",
    "end": "1083240"
  },
  {
    "text": "if you give building blocks of a solution developers like we have very very good at building things right we",
    "start": "1083240",
    "end": "1088480"
  },
  {
    "text": "are doing this for a living so Bast Dapper has the API which is very very great so it's easy to use in your",
    "start": "1088480",
    "end": "1094919"
  },
  {
    "text": "development and also we would like to have an API first solution for",
    "start": "1094919",
    "end": "1100400"
  },
  {
    "text": "development this is where test containers enters the picture how many of you know test containers very good how many of you",
    "start": "1100400",
    "end": "1107000"
  },
  {
    "text": "knew dapper oh T wins very good application developers in the in",
    "start": "1107000",
    "end": "1114520"
  },
  {
    "text": "the in the hole right so for people who are not familiar test containers are open source libraries and they give you",
    "start": "1114520",
    "end": "1120760"
  },
  {
    "text": "programmatic API to do things with containers uh it gives you API to configure containers manage the life",
    "start": "1120760",
    "end": "1126640"
  },
  {
    "text": "cycle configure services in containers uh perform operations with containers and it's all in your favorite",
    "start": "1126640",
    "end": "1132880"
  },
  {
    "text": "programming language that there are multiple implementations of those we target pre-production use cases and we",
    "start": "1132880",
    "end": "1138799"
  },
  {
    "text": "try to build in like things that are excellent for for integration tests on local development setups to kind of",
    "start": "1138799",
    "end": "1145320"
  },
  {
    "text": "nudge you on the actual good path so you would do things easier uh and those",
    "start": "1145320",
    "end": "1150760"
  },
  {
    "text": "things would be more correct and like less correct things you still can do because this is is just a generic API",
    "start": "1150760",
    "end": "1157520"
  },
  {
    "text": "but it's a little bit harder and maybe the the golden path doesn't lead there test containers uh gives you the like a",
    "start": "1157520",
    "end": "1166280"
  },
  {
    "text": "large ecosystem of modules which are predefined distractions which is very easy to do because this is just",
    "start": "1166280",
    "end": "1171679"
  },
  {
    "text": "libraries in your favorite programming language so as an end user you can run particular Technologies in containers",
    "start": "1171679",
    "end": "1178000"
  },
  {
    "text": "like databases or message Brokers or or or Dapper without actually knowing how to run them like yourself using the",
    "start": "1178000",
    "end": "1185760"
  },
  {
    "text": "lowlevel API or container configuration we give you API to configure things easily life cycle and also the a",
    "start": "1185760",
    "end": "1193039"
  },
  {
    "text": "convenience API to wire your application to use those services in containers very",
    "start": "1193039",
    "end": "1198480"
  },
  {
    "text": "very very naturally in a nutal there are different implementations languages and it allows",
    "start": "1198480",
    "end": "1203960"
  },
  {
    "text": "your tests or your application life cycle create environments in which your application wants to run which is",
    "start": "1203960",
    "end": "1209640"
  },
  {
    "text": "exactly what we want here right we want to create a complex environment with diaper side cars and potentially redis",
    "start": "1209640",
    "end": "1215240"
  },
  {
    "text": "potentially Kafka uh service running there potentially other tools in our",
    "start": "1215240",
    "end": "1220600"
  },
  {
    "text": "local environment we in our C without dealing with third party provided",
    "start": "1220600",
    "end": "1226320"
  },
  {
    "text": "kubernetes clusters or anything so so this is what test containers does really really well uh here's an example how I",
    "start": "1226320",
    "end": "1235080"
  },
  {
    "text": "would run a pogress database in my in my Java code I would specify that I want a",
    "start": "1235080",
    "end": "1241240"
  },
  {
    "text": "pogress SQL container abstraction I would specify that I want to initialize",
    "start": "1241240",
    "end": "1246400"
  },
  {
    "text": "it with a particular schema for the given Docker image uh that I would use I",
    "start": "1246400",
    "end": "1251760"
  },
  {
    "text": "will start it and then I can get the jdbc URL which is the connection URL",
    "start": "1251760",
    "end": "1257320"
  },
  {
    "text": "which I will pass to my application and my application will know where to find the database database test containers",
    "start": "1257320",
    "end": "1263320"
  },
  {
    "text": "will take care of the resource cleanup after the fact so you don't need to you don't need to clean up manually even if",
    "start": "1263320",
    "end": "1269200"
  },
  {
    "text": "something goes wrong and your test or your application process will crash and it burn and they your your doer",
    "start": "1269200",
    "end": "1275559"
  },
  {
    "text": "environment where we run containers will be abandoned we will still do the",
    "start": "1275559",
    "end": "1280640"
  },
  {
    "text": "cleanup so to ensure that you have this repeatable environment that you can run your tests or run your application and",
    "start": "1280640",
    "end": "1286919"
  },
  {
    "text": "again and again and again and you always you get an Emeral environment and you will never connect to this stale",
    "start": "1286919",
    "end": "1292520"
  },
  {
    "text": "instance of a cluster that is running on on a cloud somewhere with 319 days of",
    "start": "1292520",
    "end": "1299600"
  },
  {
    "text": "the Dapper system component installed U I didn't think you noticed that nobody",
    "start": "1299600",
    "end": "1304640"
  },
  {
    "text": "notice that and then and then uh you get this fresh environment right so as an application developer it takes away a",
    "start": "1304640",
    "end": "1310559"
  },
  {
    "text": "lot of concerns for how to operational operation how to operationalize yes how",
    "start": "1310559",
    "end": "1316440"
  },
  {
    "text": "to make operations for your integration test you can do the same thing in for example",
    "start": "1316440",
    "end": "1321559"
  },
  {
    "text": "goang which is the base Primitives of the abstractions are the same across all test containers implementations I can",
    "start": "1321559",
    "end": "1328159"
  },
  {
    "text": "say run a container that is a passg grass initialize it in a proper way wait until a certain log line will appear in",
    "start": "1328159",
    "end": "1334960"
  },
  {
    "text": "my container and then get the connection string that I can pass to my test or my",
    "start": "1334960",
    "end": "1340760"
  },
  {
    "text": "application to connect to that particular P grass it's very flexible approach can we see it yeah we can see",
    "start": "1340760",
    "end": "1346240"
  },
  {
    "text": "it we can see it we we will not see the pass grass cuz this session is not about PES this session is about Dapper so uh",
    "start": "1346240",
    "end": "1355120"
  },
  {
    "text": "test containers team offers the whole experience and the multiple tools for",
    "start": "1355120",
    "end": "1360400"
  },
  {
    "text": "you so there are open source libraries uh you Test's desktop free application",
    "start": "1360400",
    "end": "1366159"
  },
  {
    "text": "uh and then the cloud back end if you want to run containers in the cloud and you don't want to run them locally in",
    "start": "1366159",
    "end": "1372480"
  },
  {
    "text": "your Docker environment so this is how we do it uh",
    "start": "1372480",
    "end": "1380159"
  },
  {
    "text": "yeah let's look let's look at the pizza application what I'm doing Pizza application come here pizza right this",
    "start": "1380159",
    "end": "1386559"
  },
  {
    "text": "is the same Pizza application it's a pizza store application and if we look at the store method where store store",
    "start": "1386559",
    "end": "1395520"
  },
  {
    "text": "store this is this is the code that Alice showed you as well right this is exactly the same application it comes",
    "start": "1395520",
    "end": "1400960"
  },
  {
    "text": "from the same repository this is just I have it locally right so now to run this",
    "start": "1400960",
    "end": "1408039"
  },
  {
    "text": "application because it depends on Dapper being available in my environment I need to",
    "start": "1408039",
    "end": "1413559"
  },
  {
    "text": "provide it with a Dapper system somehow how do I do this I would run Dapper in a",
    "start": "1413559",
    "end": "1419720"
  },
  {
    "text": "container and I would do that with test containers so for that this is a Java",
    "start": "1419720",
    "end": "1425120"
  },
  {
    "text": "application there are very good integration between test containers and Frameworks in the Java ecosystem but you",
    "start": "1425120",
    "end": "1431240"
  },
  {
    "text": "can do the same in any language is just for a particular project it's just a couple lines of code where you can say",
    "start": "1431240",
    "end": "1436559"
  },
  {
    "text": "like if development Val value development environment is enabled do the containers in production don't do",
    "start": "1436559",
    "end": "1444000"
  },
  {
    "text": "containers right so I have my pizza store application entry point under my test and it will run in my actual Pizza",
    "start": "1444000",
    "end": "1451080"
  },
  {
    "text": "Store application but aent that with the configuration for containers and in my containers configuration what I see I",
    "start": "1451080",
    "end": "1458279"
  },
  {
    "text": "see ad Dapper container the adaper container implementation comes from a library it comes from the jar file that",
    "start": "1458279",
    "end": "1465720"
  },
  {
    "text": "I add to my project and it encodes how to run Dapper in the container as an end",
    "start": "1465720",
    "end": "1470960"
  },
  {
    "text": "user as an end developer I don't need to know all these details because the community has already provided us with",
    "start": "1470960",
    "end": "1477159"
  },
  {
    "text": "the implementation for this as an end user I just need to say give me a daer",
    "start": "1477159",
    "end": "1482720"
  },
  {
    "text": "container make this my application name and application is going to run on port",
    "start": "1482720",
    "end": "1488880"
  },
  {
    "text": "8080 I will not just have the application called the daer sidecar which is not a sidecar but a container",
    "start": "1488880",
    "end": "1494960"
  },
  {
    "text": "now but also I will expose my application to the D demon daer service so if I need to",
    "start": "1494960",
    "end": "1502399"
  },
  {
    "text": "receive some messages it will also flow back into my application so when I'm receiving those pizza events my pizza",
    "start": "1502399",
    "end": "1508720"
  },
  {
    "text": "store is going to be receiving it that way when kitchen is done with the pizza the event can flow back I expose my host",
    "start": "1508720",
    "end": "1515080"
  },
  {
    "text": "on the host machine uh for test containers for the port where I will run my machine and I also configure my",
    "start": "1515080",
    "end": "1521840"
  },
  {
    "text": "application to run where my Dapper service is running right it will run in",
    "start": "1521840",
    "end": "1528600"
  },
  {
    "text": "a Docker container it can have Dynamic configuration it might not run on the on the Local Host it might run on a in a",
    "start": "1528600",
    "end": "1535640"
  },
  {
    "text": "remote Docker uh demon so I need to programmatically tell my application that is where your Dapper is running the",
    "start": "1535640",
    "end": "1541960"
  },
  {
    "text": "same way I would do that for database saying like oh look application here's your database",
    "start": "1541960",
    "end": "1548799"
  },
  {
    "text": "so right perfect I do that I also create the mock of my uh of my kitchen service",
    "start": "1548799",
    "end": "1556000"
  },
  {
    "text": "because I don't want to run more than a single service in my application because I want to ensure that if something",
    "start": "1556000",
    "end": "1561760"
  },
  {
    "text": "breaks in my test it's only because of my actual application is at fault so I can fix it so I can run my application",
    "start": "1561760",
    "end": "1568760"
  },
  {
    "text": "here can I run this I think it runs it runs test containers will find",
    "start": "1568760",
    "end": "1574600"
  },
  {
    "text": "my Docker environment it will if necessary pull the containers it will start the containers so here we can see",
    "start": "1574600",
    "end": "1581159"
  },
  {
    "text": "that we are pulling the daap latest I'm using test containers Cloud so it got I closed the machine and it got a new I",
    "start": "1581159",
    "end": "1588279"
  },
  {
    "text": "isolated Docker VM in the cloud so it will pull the images for a second here but it will start them and then my",
    "start": "1588279",
    "end": "1595080"
  },
  {
    "text": "application will run normally uh and as an application developer I don't need to",
    "start": "1595080",
    "end": "1600679"
  },
  {
    "text": "know the details of dapper and the more of that anyone on my project I will",
    "start": "1600679",
    "end": "1605880"
  },
  {
    "text": "check it's all in the code the whole configuration is in the code so it will go in my version control and then everyone who will pull it will have the",
    "start": "1605880",
    "end": "1612640"
  },
  {
    "text": "same thing so to run the application in the environment they just need to run it they don't need to mess with",
    "start": "1612640",
    "end": "1617720"
  },
  {
    "text": "configuration can understand any details anyone can do this anyone can be an application developer",
    "start": "1617720",
    "end": "1623480"
  },
  {
    "text": "nowadays um which is a good thing right it's a learning curve is getting flattened right so this is how I do it",
    "start": "1623480",
    "end": "1630640"
  },
  {
    "text": "and I can do this the same for the tests I can have my tests run use the same",
    "start": "1630640",
    "end": "1636200"
  },
  {
    "text": "configuration so it has the same containers configuration and it can have high level integration test that will",
    "start": "1636200",
    "end": "1642520"
  },
  {
    "text": "exercise my application in a way that I I would use it in production and I would expect things and the test here is",
    "start": "1642520",
    "end": "1649279"
  },
  {
    "text": "rather simplistic but U well we are not testing the pizza application logic here right we are trying to figure out how",
    "start": "1649279",
    "end": "1655399"
  },
  {
    "text": "the environment is working you can see that I have my three containers there my mocking for the kitchen service my",
    "start": "1655399",
    "end": "1661240"
  },
  {
    "text": "Dapper and my sshd which exposing my host there and it just works just like",
    "start": "1661240",
    "end": "1666919"
  },
  {
    "text": "that amazing I think I can run this and we'll see the blue checkbox lovely check so",
    "start": "1666919",
    "end": "1674039"
  },
  {
    "text": "now we have this local experience that I as an application developer love because",
    "start": "1674039",
    "end": "1679360"
  },
  {
    "text": "this is what I would otherwise do manually as well right that I would do for other applications that are not",
    "start": "1679360",
    "end": "1685679"
  },
  {
    "text": "working with Cloud native technologies that don't depend on Dapper or kubernetes Services I'm just I'm a happy",
    "start": "1685679",
    "end": "1692440"
  },
  {
    "text": "bunny with this um so so what next",
    "start": "1692440",
    "end": "1697760"
  },
  {
    "text": "amazing I mean that was a great you know a great example oh that was your demo that was a great example of you know our",
    "start": "1697760",
    "end": "1702960"
  },
  {
    "text": "local developer experience again with Dapper and test containers uh kind of working together and being able to",
    "start": "1702960",
    "end": "1708080"
  },
  {
    "text": "install all those dependencies as a developer that's amazing for me um and",
    "start": "1708080",
    "end": "1713240"
  },
  {
    "text": "oh it actually works right the application is actually running so we local inev Loop check okay but you know",
    "start": "1713240",
    "end": "1720679"
  },
  {
    "text": "there is an eight in our devops even though it just got moved slightly there still is an eight and we have to make",
    "start": "1720679",
    "end": "1726200"
  },
  {
    "text": "these work harmoniously together right so I've kind of showed this application running in production Oleg has showed it",
    "start": "1726200",
    "end": "1731919"
  },
  {
    "text": "uh running locally we want to do a full endtoend you know push deploy test and see how this all kind of works together",
    "start": "1731919",
    "end": "1738600"
  },
  {
    "text": "yeah yeah so how how do we do that how do we um you know enable kind of this",
    "start": "1738600",
    "end": "1743640"
  },
  {
    "text": "this working together we need to kind of figure out this plan and this in this release step I think of this of this devop pipeline we need an introducing",
    "start": "1743640",
    "end": "1749760"
  },
  {
    "text": "change and we're going to be we're going to be responsible and when changing our things we're going to we're going to",
    "start": "1749760",
    "end": "1755240"
  },
  {
    "text": "we're not going to just throw it in production and just uh let other people deal with that but we're going to",
    "start": "1755240",
    "end": "1760799"
  },
  {
    "text": "release it properly behind a feature flag and this and for this we're going to use open feature and open feature is",
    "start": "1760799",
    "end": "1767200"
  },
  {
    "text": "a open source project that does uh standardization of feature Flags it allows you to use a standard API and",
    "start": "1767200",
    "end": "1772919"
  },
  {
    "text": "then uh the any sort of implementation of a flag provider so in this case we're",
    "start": "1772919",
    "end": "1778120"
  },
  {
    "text": "actually using flag D but it allows you to take advantage of really any different flag uh evaluation providers",
    "start": "1778120",
    "end": "1784080"
  },
  {
    "text": "in this Casa in you know in that I want to take advantage of yeah so uh for now we're going to try open feature and flag",
    "start": "1784080",
    "end": "1790640"
  },
  {
    "text": "D and we're going to we're to release production right so in my local experience I'm going to use it the same",
    "start": "1790640",
    "end": "1795919"
  },
  {
    "text": "I'm going to run flag D in my test containers uh environment in my in my Docker environment using test containers",
    "start": "1795919",
    "end": "1801159"
  },
  {
    "text": "and we're going to try to introduce a change and see how it works this is the most dynamic part of the demo so please",
    "start": "1801159",
    "end": "1807519"
  },
  {
    "text": "continue breathing don't be super stressed but we're going to do some coding here I added the open feature",
    "start": "1807519",
    "end": "1813440"
  },
  {
    "text": "already libraries to the thing and I will add a configuration for my open feature beans for my spring application",
    "start": "1813440",
    "end": "1820440"
  },
  {
    "text": "they get some configuration that I get from my properties uh and I enable the",
    "start": "1820440",
    "end": "1825559"
  },
  {
    "text": "open feature Bean that I connect to my flag the uh flag service provider and",
    "start": "1825559",
    "end": "1830880"
  },
  {
    "text": "then they create the open feature API client now in my application in my application at the",
    "start": "1830880",
    "end": "1837880"
  },
  {
    "text": "very top what I can do I can say like give me the client for the open feature uh and then I would have a very",
    "start": "1837880",
    "end": "1845120"
  },
  {
    "text": "simplistic sort of code that says um that says I I want to look at the flag",
    "start": "1845120",
    "end": "1851480"
  },
  {
    "text": "called V2 enabled and then pass it to to the to the property right yeah and here",
    "start": "1851480",
    "end": "1858039"
  },
  {
    "text": "we're going to check a value and essentially change a color because you know I want to test out I'm the production lady and I want to test out a",
    "start": "1858039",
    "end": "1863480"
  },
  {
    "text": "couple different things in production here but I don't want to put extra onus onto my Developers for having to push them through an in like an entirely new",
    "start": "1863480",
    "end": "1869919"
  },
  {
    "text": "cycle of development I want to test out maybe I want to do ab testing maybe I want to you know show this application",
    "start": "1869919",
    "end": "1875440"
  },
  {
    "text": "to different folks and see uh how they respond so right so so I get this feature Flack I'm going to inject my",
    "start": "1875440",
    "end": "1882480"
  },
  {
    "text": "open API client into my pizza application right and so this everything will compile will it work if I run it",
    "start": "1882480",
    "end": "1888840"
  },
  {
    "text": "locally who thinks it will work who thinks it will crash and not work it",
    "start": "1888840",
    "end": "1894480"
  },
  {
    "text": "will not work of course cuz there is no flag D provider it will be like where's my flag D I need my flag I can this work",
    "start": "1894480",
    "end": "1899880"
  },
  {
    "text": "we need our feature evalu our flag evaluation provider so so the same thing I do with old containers I can just just",
    "start": "1899880",
    "end": "1907639"
  },
  {
    "text": "get this this is the best part of development development by uncommenting code is the best it almost never",
    "start": "1907639",
    "end": "1913519"
  },
  {
    "text": "fails however in my container configuration I say I would like a new generic container for the flag d uh flag",
    "start": "1913519",
    "end": "1920720"
  },
  {
    "text": "d uh Docker image and then I expose the particular ports I override the commands",
    "start": "1920720",
    "end": "1925840"
  },
  {
    "text": "and I pass my configuration into the Container as a string and that will be my flag definition so here is V2 enabled",
    "start": "1925840",
    "end": "1934039"
  },
  {
    "text": "options true and false and currently this is true uh so when I run this let me run",
    "start": "1934039",
    "end": "1940840"
  },
  {
    "text": "this my application again um I think if I run this it will pull and run my flag",
    "start": "1940840",
    "end": "1946120"
  },
  {
    "text": "d as well on top of everything uh if we didn't uh forget any changes",
    "start": "1946120",
    "end": "1951519"
  },
  {
    "text": "and then uh I can see my application pull there it's pulling that flag D latest container I see right in there as",
    "start": "1951519",
    "end": "1957240"
  },
  {
    "text": "the dependency yeah oh yeah yeah yeah yeah it pulled the container it started the",
    "start": "1957240",
    "end": "1963080"
  },
  {
    "text": "container the container is being configured my spring application picks the configuration so when I go to my",
    "start": "1963080",
    "end": "1969840"
  },
  {
    "text": "pizza store you can see it's gloriously green wow so I will finish my my Loop",
    "start": "1969840",
    "end": "1976200"
  },
  {
    "text": "here with just building say a Docker image of my container with changes that",
    "start": "1976200",
    "end": "1981240"
  },
  {
    "text": "I will just push into the uh registry and then the Ops part of the team can",
    "start": "1981240",
    "end": "1987279"
  },
  {
    "text": "pick it up and deploy that into production awesome and then since we only have two",
    "start": "1987279",
    "end": "1992679"
  },
  {
    "text": "minutes I'm going to show this really quickly in production and so essentially what we have is as you can see what Oleg",
    "start": "1992679",
    "end": "1998679"
  },
  {
    "text": "did is we have you know our our flag D provider uh running locally we also have this deployed on kubernetes uh with a",
    "start": "1998679",
    "end": "2005440"
  },
  {
    "text": "with the open feature operator system so this allows us to you know provide our different Flags uh via crds um and we",
    "start": "2005440",
    "end": "2012240"
  },
  {
    "text": "have if I pop open my open feature configuration what I have is you'll notice it's the very same configuration",
    "start": "2012240",
    "end": "2018039"
  },
  {
    "text": "that Oleg rang locally but we have it uh within this feature flag uh crd that is specifically for um open feature and we",
    "start": "2018039",
    "end": "2026159"
  },
  {
    "text": "have this flag dource this is just telling us hey we're providing these flags from kubernetes in this case and these are our pizza Flags uh this is you",
    "start": "2026159",
    "end": "2033799"
  },
  {
    "text": "know built into our pizza store with a couple annotations so you know our pizza store service which is the one that we want to change uh is pulling from these",
    "start": "2033799",
    "end": "2041039"
  },
  {
    "text": "two uh crds and essentially it'll allow us to effectively make these changes live and see how they get updated so you",
    "start": "2041039",
    "end": "2047600"
  },
  {
    "text": "know this was this was false let's update this guy to true and see if we",
    "start": "2047600",
    "end": "2053000"
  },
  {
    "text": "can actually make this change color so I'm going to reply that guy all",
    "start": "2053000",
    "end": "2058679"
  },
  {
    "text": "right configured and then I'm going to head back over to that UI what do we think yellow or green yellow or",
    "start": "2058679",
    "end": "2066000"
  },
  {
    "text": "green green yay woohoo okay awesome and",
    "start": "2066119",
    "end": "2072878"
  },
  {
    "text": "that is kind of what we wanted to show the yeah so kind of just wrapping up",
    "start": "2072879",
    "end": "2079358"
  },
  {
    "text": "here what we did show kind of an end to end developer Loop uh we talked about some consistent apis both from the",
    "start": "2079359",
    "end": "2084800"
  },
  {
    "text": "developer perspective with Dapper as well as the uh apis that test containers gives you to develop with with your",
    "start": "2084800",
    "end": "2089960"
  },
  {
    "text": "local Dev experience uh you know simple inner and outer development loops and then you know making these changes with",
    "start": "2089960",
    "end": "2095679"
  },
  {
    "text": "uh open feature and feature flagging best practices in production yeah I think we we showed a simple but nice",
    "start": "2095679",
    "end": "2102839"
  },
  {
    "text": "iteration of the whole development Loop into production uh it we made sure that my application developer experience is",
    "start": "2102839",
    "end": "2109680"
  },
  {
    "text": "what I usually do and like and know how to work with uh and we save developer",
    "start": "2109680",
    "end": "2114920"
  },
  {
    "text": "time yeah hopefully uh and then it's all was enabled by the combination of the projects uh so you can build similar",
    "start": "2114920",
    "end": "2121599"
  },
  {
    "text": "things yourself and then there are a number of things that you can read online about this um and try the",
    "start": "2121599",
    "end": "2128440"
  },
  {
    "text": "application yourself yes try it out yourself we have this published online and then you know",
    "start": "2128440",
    "end": "2134320"
  },
  {
    "text": "if you had any other questions about the session uh we're just out of time right now but please come up ask us at the end",
    "start": "2134320",
    "end": "2139720"
  },
  {
    "text": "or you know come to our booths at the docker and dier booths uh this week thanks so much for coming thank you if",
    "start": "2139720",
    "end": "2146440"
  },
  {
    "text": "you ccon asks us to ask for feedback if you have great feedback please feel the",
    "start": "2146440",
    "end": "2152839"
  },
  {
    "text": "form by the QR code if you think we can improve something just come tell us personally",
    "start": "2152839",
    "end": "2159560"
  },
  {
    "text": "thank you",
    "start": "2159560",
    "end": "2162839"
  }
]