[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "um yeah my name is lavani and here with",
    "start": "480",
    "end": "2879"
  },
  {
    "text": "me is jonathan we work at transfer",
    "start": "2879",
    "end": "5520"
  },
  {
    "text": "today we're going to talk how we have",
    "start": "5520",
    "end": "6879"
  },
  {
    "text": "secured our kafka inspire",
    "start": "6879",
    "end": "8720"
  },
  {
    "text": "structure using stiffen so",
    "start": "8720",
    "end": "12000"
  },
  {
    "start": "12000",
    "end": "12000"
  },
  {
    "text": "first i will briefly describe what kafka",
    "start": "12000",
    "end": "15200"
  },
  {
    "text": "is",
    "start": "15200",
    "end": "16320"
  },
  {
    "text": "so kafka is essentially a stream",
    "start": "16320",
    "end": "18000"
  },
  {
    "text": "processing platform we use it the",
    "start": "18000",
    "end": "19600"
  },
  {
    "text": "transfers as our",
    "start": "19600",
    "end": "20960"
  },
  {
    "text": "kind of a backbone for event processing",
    "start": "20960",
    "end": "23519"
  },
  {
    "text": "and most of the i think",
    "start": "23519",
    "end": "25279"
  },
  {
    "text": "um cross-service communications happen",
    "start": "25279",
    "end": "27519"
  },
  {
    "text": "through kafka so it's kind of our",
    "start": "27519",
    "end": "29039"
  },
  {
    "text": "central",
    "start": "29039",
    "end": "30640"
  },
  {
    "text": "infrastructure that is very important",
    "start": "30640",
    "end": "32719"
  },
  {
    "text": "for transfers",
    "start": "32719",
    "end": "34480"
  },
  {
    "text": "so on the kafka side we have different",
    "start": "34480",
    "end": "37600"
  },
  {
    "text": "components and um",
    "start": "37600",
    "end": "39440"
  },
  {
    "text": "on the client side we have a producers",
    "start": "39440",
    "end": "41200"
  },
  {
    "text": "and consumers and on the kind of",
    "start": "41200",
    "end": "43280"
  },
  {
    "text": "management and the server side we have a",
    "start": "43280",
    "end": "44800"
  },
  {
    "text": "kafka broker",
    "start": "44800",
    "end": "46160"
  },
  {
    "text": "uh kaka broker is the one who is",
    "start": "46160",
    "end": "48320"
  },
  {
    "text": "responsible",
    "start": "48320",
    "end": "49440"
  },
  {
    "text": "to actually manage the clients as well",
    "start": "49440",
    "end": "52160"
  },
  {
    "text": "as store the data",
    "start": "52160",
    "end": "53440"
  },
  {
    "text": "on the disks uh so usually in the",
    "start": "53440",
    "end": "55680"
  },
  {
    "text": "production you have many kapka brokers",
    "start": "55680",
    "end": "57760"
  },
  {
    "text": "and",
    "start": "57760",
    "end": "58399"
  },
  {
    "text": "on the broker side we also have the",
    "start": "58399",
    "end": "60000"
  },
  {
    "text": "notion of a topic",
    "start": "60000",
    "end": "61600"
  },
  {
    "text": "and the topic is kind of a logical",
    "start": "61600",
    "end": "63600"
  },
  {
    "text": "abstraction",
    "start": "63600",
    "end": "64799"
  },
  {
    "text": "on top of the data that is stored on the",
    "start": "64799",
    "end": "68320"
  },
  {
    "text": "kafka brokers",
    "start": "68320",
    "end": "70240"
  },
  {
    "text": "topics are split into multiple",
    "start": "70240",
    "end": "72880"
  },
  {
    "text": "partitions",
    "start": "72880",
    "end": "73760"
  },
  {
    "text": "and those partitions can be on the",
    "start": "73760",
    "end": "76159"
  },
  {
    "text": "single broker or they be so they can be",
    "start": "76159",
    "end": "78960"
  },
  {
    "text": "uh they can be on multiple brokers uh",
    "start": "78960",
    "end": "82000"
  },
  {
    "text": "and you and one partition in this thing",
    "start": "82000",
    "end": "84560"
  },
  {
    "text": "and one part",
    "start": "84560",
    "end": "85759"
  },
  {
    "text": "one broker is a leader for a single",
    "start": "85759",
    "end": "87520"
  },
  {
    "text": "partition so usually",
    "start": "87520",
    "end": "88960"
  },
  {
    "text": "clients are talking to the leader in",
    "start": "88960",
    "end": "91119"
  },
  {
    "text": "order to like write the data to the",
    "start": "91119",
    "end": "93040"
  },
  {
    "text": "topic",
    "start": "93040",
    "end": "94320"
  },
  {
    "text": "so uh producers produce the data and",
    "start": "94320",
    "end": "96880"
  },
  {
    "text": "this is append on the log files",
    "start": "96880",
    "end": "98640"
  },
  {
    "text": "that have commands as data formats and",
    "start": "98640",
    "end": "101520"
  },
  {
    "text": "consumers in parallel",
    "start": "101520",
    "end": "103360"
  },
  {
    "text": "can consume the data from those from",
    "start": "103360",
    "end": "105119"
  },
  {
    "text": "those partitions",
    "start": "105119",
    "end": "107840"
  },
  {
    "text": "so i won't go into all the details",
    "start": "107840",
    "end": "111200"
  },
  {
    "start": "108000",
    "end": "108000"
  },
  {
    "text": "around the configuration of the brokers",
    "start": "111200",
    "end": "113280"
  },
  {
    "text": "but i will cover some important bits and",
    "start": "113280",
    "end": "115200"
  },
  {
    "text": "pieces that are",
    "start": "115200",
    "end": "116079"
  },
  {
    "text": "that is important for this talk so we",
    "start": "116079",
    "end": "118560"
  },
  {
    "text": "need to understand",
    "start": "118560",
    "end": "119600"
  },
  {
    "text": "before describing technical details how",
    "start": "119600",
    "end": "121840"
  },
  {
    "text": "we have done this",
    "start": "121840",
    "end": "122719"
  },
  {
    "text": "how this client broker connection works",
    "start": "122719",
    "end": "126799"
  },
  {
    "text": "so on the broker side we have a",
    "start": "126799",
    "end": "129280"
  },
  {
    "text": "configuration that is called listeners",
    "start": "129280",
    "end": "131520"
  },
  {
    "text": "uh and this is where the kafka broker",
    "start": "131520",
    "end": "134560"
  },
  {
    "text": "process",
    "start": "134560",
    "end": "135360"
  },
  {
    "text": "uh creates the server sockets so for",
    "start": "135360",
    "end": "137680"
  },
  {
    "text": "example in",
    "start": "137680",
    "end": "138879"
  },
  {
    "text": "this example in this slide we see that",
    "start": "138879",
    "end": "141360"
  },
  {
    "text": "we create",
    "start": "141360",
    "end": "142080"
  },
  {
    "text": "new listener called plain text internal",
    "start": "142080",
    "end": "144560"
  },
  {
    "text": "which binds to the port 1992",
    "start": "144560",
    "end": "147040"
  },
  {
    "text": "and we also have another listener which",
    "start": "147040",
    "end": "149200"
  },
  {
    "text": "is called ssl internal and it's violence",
    "start": "149200",
    "end": "151440"
  },
  {
    "text": "to the port 1993",
    "start": "151440",
    "end": "153840"
  },
  {
    "text": "on the other hand we have another",
    "start": "153840",
    "end": "155280"
  },
  {
    "text": "configuration which is called advertise",
    "start": "155280",
    "end": "157280"
  },
  {
    "text": "listeners and this",
    "start": "157280",
    "end": "158239"
  },
  {
    "text": "is the configuration that is used by the",
    "start": "158239",
    "end": "160720"
  },
  {
    "text": "clients in order to communicate to the",
    "start": "160720",
    "end": "162879"
  },
  {
    "text": "brokers",
    "start": "162879",
    "end": "164080"
  },
  {
    "text": "and this should be and this must be",
    "start": "164080",
    "end": "166239"
  },
  {
    "text": "unique",
    "start": "166239",
    "end": "167280"
  },
  {
    "text": "for each broker across the cluster",
    "start": "167280",
    "end": "170319"
  },
  {
    "text": "so for here we are using dns record for",
    "start": "170319",
    "end": "172879"
  },
  {
    "text": "example kafka zero dot internal in order",
    "start": "172879",
    "end": "174800"
  },
  {
    "text": "to uniquely",
    "start": "174800",
    "end": "175840"
  },
  {
    "text": "kind of reach to the broker and this is",
    "start": "175840",
    "end": "178879"
  },
  {
    "text": "what the clients will use in order to",
    "start": "178879",
    "end": "181120"
  },
  {
    "text": "communicate to the single broker",
    "start": "181120",
    "end": "183599"
  },
  {
    "text": "since uh clients need to talk to their",
    "start": "183599",
    "end": "185920"
  },
  {
    "text": "leaders they have to",
    "start": "185920",
    "end": "187360"
  },
  {
    "text": "kind of reach to their particular broker",
    "start": "187360",
    "end": "189840"
  },
  {
    "text": "uh we also have uh",
    "start": "189840",
    "end": "191360"
  },
  {
    "text": "listener security protocol map and this",
    "start": "191360",
    "end": "194400"
  },
  {
    "text": "we kind of define what's our security",
    "start": "194400",
    "end": "196239"
  },
  {
    "text": "protocols for the",
    "start": "196239",
    "end": "197680"
  },
  {
    "text": "particular listener uh here we are",
    "start": "197680",
    "end": "200159"
  },
  {
    "text": "saying that plaintext internal is a",
    "start": "200159",
    "end": "201840"
  },
  {
    "text": "plain text so no security and ssl",
    "start": "201840",
    "end": "204319"
  },
  {
    "text": "internal",
    "start": "204319",
    "end": "204959"
  },
  {
    "text": "is we expect ssl on that listener",
    "start": "204959",
    "end": "208239"
  },
  {
    "text": "on the client side things are a bit more",
    "start": "208239",
    "end": "210560"
  },
  {
    "text": "boring we just have",
    "start": "210560",
    "end": "212319"
  },
  {
    "text": "just bootstrap servers and this client",
    "start": "212319",
    "end": "214400"
  },
  {
    "text": "uses this bootstrap servers",
    "start": "214400",
    "end": "216640"
  },
  {
    "text": "in order to kind of get cluster state",
    "start": "216640",
    "end": "220879"
  },
  {
    "text": "so how it works all together on the one",
    "start": "220879",
    "end": "223840"
  },
  {
    "text": "side we have a broker",
    "start": "223840",
    "end": "225040"
  },
  {
    "text": "and then we have a client so first",
    "start": "225040",
    "end": "227920"
  },
  {
    "text": "client will use this bootstrap server's",
    "start": "227920",
    "end": "230000"
  },
  {
    "text": "configuration",
    "start": "230000",
    "end": "231440"
  },
  {
    "text": "and we'll ask the broker can you please",
    "start": "231440",
    "end": "233840"
  },
  {
    "text": "give me the cluster state",
    "start": "233840",
    "end": "236480"
  },
  {
    "text": "a broker on the other hand will return",
    "start": "236480",
    "end": "238400"
  },
  {
    "text": "the cluster state",
    "start": "238400",
    "end": "240239"
  },
  {
    "text": "and it will use advertise listener",
    "start": "240239",
    "end": "242879"
  },
  {
    "text": "configuration",
    "start": "242879",
    "end": "244319"
  },
  {
    "text": "for each broker to move to and it will",
    "start": "244319",
    "end": "247680"
  },
  {
    "text": "pass this configuration to the client",
    "start": "247680",
    "end": "250159"
  },
  {
    "text": "and then client will use this",
    "start": "250159",
    "end": "251840"
  },
  {
    "text": "configuration in order to identify the",
    "start": "251840",
    "end": "253920"
  },
  {
    "text": "leaders and how to reach the leaders of",
    "start": "253920",
    "end": "256639"
  },
  {
    "text": "the partitions so this is kind of a flow",
    "start": "256639",
    "end": "259280"
  },
  {
    "text": "how the broker client",
    "start": "259280",
    "end": "260720"
  },
  {
    "text": "communication works now we have",
    "start": "260720",
    "end": "265520"
  },
  {
    "start": "264000",
    "end": "264000"
  },
  {
    "text": "covered the like basics of the",
    "start": "265520",
    "end": "267520"
  },
  {
    "text": "connection now let's see how the mutual",
    "start": "267520",
    "end": "269759"
  },
  {
    "text": "tls can",
    "start": "269759",
    "end": "270479"
  },
  {
    "text": "work in a traditional manner uh for this",
    "start": "270479",
    "end": "272800"
  },
  {
    "text": "kind of setup",
    "start": "272800",
    "end": "274880"
  },
  {
    "text": "so for example we have uh on the other",
    "start": "274880",
    "end": "277360"
  },
  {
    "text": "hand on one hand we have a client we",
    "start": "277360",
    "end": "279440"
  },
  {
    "text": "we did some client key store that",
    "start": "279440",
    "end": "281440"
  },
  {
    "text": "imports client certificate",
    "start": "281440",
    "end": "283360"
  },
  {
    "text": "and then we have a broker with rocker",
    "start": "283360",
    "end": "286080"
  },
  {
    "text": "key store that imports broker",
    "start": "286080",
    "end": "287360"
  },
  {
    "text": "certificate",
    "start": "287360",
    "end": "288320"
  },
  {
    "text": "and they are signed by the same ca in",
    "start": "288320",
    "end": "290400"
  },
  {
    "text": "this example",
    "start": "290400",
    "end": "291919"
  },
  {
    "text": "so how this gonna how this mutual tls",
    "start": "291919",
    "end": "294000"
  },
  {
    "text": "would be established",
    "start": "294000",
    "end": "295520"
  },
  {
    "text": "first client will make a connection to",
    "start": "295520",
    "end": "297280"
  },
  {
    "text": "the broker uh then broker would",
    "start": "297280",
    "end": "299520"
  },
  {
    "text": "represent",
    "start": "299520",
    "end": "300160"
  },
  {
    "text": "a broker certificate to the client since",
    "start": "300160",
    "end": "302560"
  },
  {
    "text": "we are talking about mutual tls",
    "start": "302560",
    "end": "304560"
  },
  {
    "text": "client will try to verify the broker",
    "start": "304560",
    "end": "307039"
  },
  {
    "text": "against the ca",
    "start": "307039",
    "end": "308240"
  },
  {
    "text": "since they are signed by the same one",
    "start": "308240",
    "end": "310080"
  },
  {
    "text": "everything passes here so",
    "start": "310080",
    "end": "311520"
  },
  {
    "text": "we are all set then as a fourth step uh",
    "start": "311520",
    "end": "314960"
  },
  {
    "text": "client will present the client",
    "start": "314960",
    "end": "317199"
  },
  {
    "text": "certificate to the broker",
    "start": "317199",
    "end": "318720"
  },
  {
    "text": "and the broker will do the same one and",
    "start": "318720",
    "end": "320800"
  },
  {
    "text": "will verify the",
    "start": "320800",
    "end": "322479"
  },
  {
    "text": "client certificate engages against the",
    "start": "322479",
    "end": "324479"
  },
  {
    "text": "ca",
    "start": "324479",
    "end": "326000"
  },
  {
    "text": "and when everything is done as a final",
    "start": "326000",
    "end": "328160"
  },
  {
    "text": "step the connection is established so",
    "start": "328160",
    "end": "329759"
  },
  {
    "text": "this is kind of a",
    "start": "329759",
    "end": "331440"
  },
  {
    "text": "classical flow of how a mutual tls like",
    "start": "331440",
    "end": "334000"
  },
  {
    "text": "simplified view of how mutual telus can",
    "start": "334000",
    "end": "336160"
  },
  {
    "text": "be established uh",
    "start": "336160",
    "end": "338240"
  },
  {
    "text": "now this setup obviously has problems",
    "start": "338240",
    "end": "341280"
  },
  {
    "text": "the first one is that the long leaves",
    "start": "341280",
    "end": "342880"
  },
  {
    "text": "certificates are very hard to manage",
    "start": "342880",
    "end": "344880"
  },
  {
    "text": "where a transfer is we have more than",
    "start": "344880",
    "end": "346720"
  },
  {
    "text": "300 micro services and having the",
    "start": "346720",
    "end": "349120"
  },
  {
    "text": "kind of certificate management for each",
    "start": "349120",
    "end": "351039"
  },
  {
    "text": "one of them would be a nightmare to",
    "start": "351039",
    "end": "352639"
  },
  {
    "text": "manage for any platform team",
    "start": "352639",
    "end": "355520"
  },
  {
    "text": "then we have also diverse set of clients",
    "start": "355520",
    "end": "357680"
  },
  {
    "text": "not every client in every language",
    "start": "357680",
    "end": "359520"
  },
  {
    "text": "supports the tls altogether so",
    "start": "359520",
    "end": "361360"
  },
  {
    "text": "it might not be really possible to",
    "start": "361360",
    "end": "362960"
  },
  {
    "text": "implement something like this in",
    "start": "362960",
    "end": "364800"
  },
  {
    "text": "some languages uh and it's um",
    "start": "364800",
    "end": "367840"
  },
  {
    "text": "like if we are talking about migration",
    "start": "367840",
    "end": "369680"
  },
  {
    "text": "to this new",
    "start": "369680",
    "end": "371199"
  },
  {
    "text": "setup it would be quite hard to do uh if",
    "start": "371199",
    "end": "374319"
  },
  {
    "text": "we are if we have like that many",
    "start": "374319",
    "end": "376240"
  },
  {
    "text": "microservices you know infrastructure",
    "start": "376240",
    "end": "378000"
  },
  {
    "text": "because it would require",
    "start": "378000",
    "end": "379440"
  },
  {
    "text": "some of the code changes on the client",
    "start": "379440",
    "end": "381759"
  },
  {
    "text": "side",
    "start": "381759",
    "end": "383440"
  },
  {
    "text": "so this is where we have started looking",
    "start": "383440",
    "end": "385520"
  },
  {
    "text": "into you know",
    "start": "385520",
    "end": "386960"
  },
  {
    "text": "speaker with spire and see like how we",
    "start": "386960",
    "end": "390000"
  },
  {
    "text": "can utilize this technology in order to",
    "start": "390000",
    "end": "392319"
  },
  {
    "text": "automate some of the some of these",
    "start": "392319",
    "end": "394720"
  },
  {
    "text": "processes",
    "start": "394720",
    "end": "396960"
  },
  {
    "text": "so let me now describe how it works",
    "start": "396960",
    "end": "400960"
  },
  {
    "start": "397000",
    "end": "397000"
  },
  {
    "text": "so for the scenery you mentioned that on",
    "start": "400960",
    "end": "403280"
  },
  {
    "text": "the one side we have a micro service",
    "start": "403280",
    "end": "405600"
  },
  {
    "text": "that runs inside the kubernetes",
    "start": "405600",
    "end": "408319"
  },
  {
    "text": "and and this microservice talks to the",
    "start": "408319",
    "end": "411280"
  },
  {
    "text": "envoy",
    "start": "411280",
    "end": "412000"
  },
  {
    "text": "as and the envoy runs as a sidecar",
    "start": "412000",
    "end": "415039"
  },
  {
    "text": "and envoy talks to the spire agent over",
    "start": "415039",
    "end": "417120"
  },
  {
    "text": "sdc so this is kind of classical setup",
    "start": "417120",
    "end": "419599"
  },
  {
    "text": "and on the other hand we have a broker",
    "start": "419599",
    "end": "421680"
  },
  {
    "text": "and we need to make",
    "start": "421680",
    "end": "423280"
  },
  {
    "text": "this kind of connection between",
    "start": "423280",
    "end": "424639"
  },
  {
    "text": "microservice to the broker work over",
    "start": "424639",
    "end": "426960"
  },
  {
    "text": "invoice so over the proxy",
    "start": "426960",
    "end": "429520"
  },
  {
    "text": "so in order to do that we for the broker",
    "start": "429520",
    "end": "432319"
  },
  {
    "text": "side we have to add some additional",
    "start": "432319",
    "end": "434840"
  },
  {
    "text": "configurations",
    "start": "434840",
    "end": "436720"
  },
  {
    "text": "so for the listeners we can add that",
    "start": "436720",
    "end": "439759"
  },
  {
    "text": "we can define a new listener named envoy",
    "start": "439759",
    "end": "443280"
  },
  {
    "text": "and it will bind to the port 1994",
    "start": "443280",
    "end": "446560"
  },
  {
    "text": "and we can define listeners for ny which",
    "start": "446560",
    "end": "450639"
  },
  {
    "text": "will be localhost 91.01",
    "start": "450639",
    "end": "453840"
  },
  {
    "text": "now this is an important bit here",
    "start": "453840",
    "end": "456160"
  },
  {
    "text": "because before we have used the dns",
    "start": "456160",
    "end": "458560"
  },
  {
    "text": "record or",
    "start": "458560",
    "end": "459440"
  },
  {
    "text": "maybe ipo together to uniquely identify",
    "start": "459440",
    "end": "462080"
  },
  {
    "text": "the broker",
    "start": "462080",
    "end": "463039"
  },
  {
    "text": "but now since we just have a local host",
    "start": "463039",
    "end": "465520"
  },
  {
    "text": "since envoy runs like locally on the ssi",
    "start": "465520",
    "end": "467680"
  },
  {
    "text": "car next to the micro service",
    "start": "467680",
    "end": "469360"
  },
  {
    "text": "we need to use different core to",
    "start": "469360",
    "end": "471360"
  },
  {
    "text": "uniquely identify different brokers",
    "start": "471360",
    "end": "473599"
  },
  {
    "text": "so that's why this support needs to be",
    "start": "473599",
    "end": "476080"
  },
  {
    "text": "unique for each of the brokers",
    "start": "476080",
    "end": "478720"
  },
  {
    "text": "and we also have listener security",
    "start": "478720",
    "end": "480319"
  },
  {
    "text": "protocol map",
    "start": "480319",
    "end": "481840"
  },
  {
    "text": "and we are saying that envoy needs to be",
    "start": "481840",
    "end": "484080"
  },
  {
    "text": "over ssl",
    "start": "484080",
    "end": "486879"
  },
  {
    "text": "now on the my on the invoice site",
    "start": "487280",
    "end": "490800"
  },
  {
    "text": "we can have as simple as like static",
    "start": "490800",
    "end": "493039"
  },
  {
    "text": "android configs where we are mapping",
    "start": "493039",
    "end": "495360"
  },
  {
    "text": "uh that localhost 9101 needs to be",
    "start": "495360",
    "end": "497840"
  },
  {
    "text": "proxied to the kafka zero dot internal",
    "start": "497840",
    "end": "500000"
  },
  {
    "text": "1994",
    "start": "500000",
    "end": "501360"
  },
  {
    "text": "uh and localhost 9102 need to be",
    "start": "501360",
    "end": "504479"
  },
  {
    "text": "proxy to kafka one dot internal so this",
    "start": "504479",
    "end": "507440"
  },
  {
    "text": "is kind of a mapping",
    "start": "507440",
    "end": "508639"
  },
  {
    "text": "between the ports and the",
    "start": "508639",
    "end": "512240"
  },
  {
    "text": "actual kafka brokers that are running",
    "start": "512240",
    "end": "515039"
  },
  {
    "text": "inside the infrastructure",
    "start": "515039",
    "end": "517039"
  },
  {
    "text": "uh now this with this setup we have kind",
    "start": "517039",
    "end": "519839"
  },
  {
    "text": "of connection",
    "start": "519839",
    "end": "521200"
  },
  {
    "text": "uh figured out so connection between the",
    "start": "521200",
    "end": "523680"
  },
  {
    "text": "microservice and",
    "start": "523680",
    "end": "525360"
  },
  {
    "text": "kafka broker will work over and avoid",
    "start": "525360",
    "end": "527279"
  },
  {
    "text": "now we need to",
    "start": "527279",
    "end": "528640"
  },
  {
    "text": "uh teach kapka brokers and to understand",
    "start": "528640",
    "end": "531680"
  },
  {
    "text": "stiff svds",
    "start": "531680",
    "end": "534880"
  },
  {
    "text": "so for this we are using javascript",
    "start": "534880",
    "end": "537600"
  },
  {
    "text": "library which has a",
    "start": "537600",
    "end": "538800"
  },
  {
    "text": "which which makes a connection to the",
    "start": "538800",
    "end": "542800"
  },
  {
    "text": "spire server",
    "start": "542800",
    "end": "544000"
  },
  {
    "text": "uh using the agentsoc file that is",
    "start": "544000",
    "end": "546800"
  },
  {
    "text": "running",
    "start": "546800",
    "end": "547279"
  },
  {
    "text": "uh that is created by spire agent that",
    "start": "547279",
    "end": "549920"
  },
  {
    "text": "runs on that same host",
    "start": "549920",
    "end": "551680"
  },
  {
    "text": "uh and with that we have kind of",
    "start": "551680",
    "end": "553360"
  },
  {
    "text": "integration between the broker and",
    "start": "553360",
    "end": "555760"
  },
  {
    "text": "when the and the spire server done so it",
    "start": "555760",
    "end": "557680"
  },
  {
    "text": "kind of works out of the box",
    "start": "557680",
    "end": "559680"
  },
  {
    "text": "uh and we have to well we have to change",
    "start": "559680",
    "end": "562000"
  },
  {
    "text": "some configurations but nothing that's",
    "start": "562000",
    "end": "563680"
  },
  {
    "text": "serious",
    "start": "563680",
    "end": "564480"
  },
  {
    "text": "uh so we have to while by integrating",
    "start": "564480",
    "end": "566959"
  },
  {
    "text": "javascript library into the",
    "start": "566959",
    "end": "569600"
  },
  {
    "text": "kapka broker we'll automatically get the",
    "start": "569600",
    "end": "572399"
  },
  {
    "text": "spifi trust manager",
    "start": "572399",
    "end": "573680"
  },
  {
    "text": "and the key manager implementation so we",
    "start": "573680",
    "end": "576399"
  },
  {
    "text": "can",
    "start": "576399",
    "end": "576720"
  },
  {
    "text": "uh say to the kafka process that use",
    "start": "576720",
    "end": "580320"
  },
  {
    "text": "uh key manager algorithm and trust",
    "start": "580320",
    "end": "582320"
  },
  {
    "text": "manage algorithm uh",
    "start": "582320",
    "end": "583519"
  },
  {
    "text": "spf as well so it will use uh trust",
    "start": "583519",
    "end": "586560"
  },
  {
    "text": "manager and key managers",
    "start": "586560",
    "end": "588080"
  },
  {
    "text": "and we also tell kapka to make the",
    "start": "588080",
    "end": "590560"
  },
  {
    "text": "client ssl authentication as required so",
    "start": "590560",
    "end": "592720"
  },
  {
    "text": "we expect",
    "start": "592720",
    "end": "593279"
  },
  {
    "text": "identity on each of the uh on each of",
    "start": "593279",
    "end": "596640"
  },
  {
    "text": "the from each of the",
    "start": "596640",
    "end": "597680"
  },
  {
    "text": "client uh so",
    "start": "597680",
    "end": "600959"
  },
  {
    "text": "from the how it would work in practice",
    "start": "600959",
    "end": "603279"
  },
  {
    "text": "now that",
    "start": "603279",
    "end": "604240"
  },
  {
    "text": "since we have this integration ready",
    "start": "604240",
    "end": "607680"
  },
  {
    "text": "uh on the micro service side we'll have",
    "start": "607680",
    "end": "610640"
  },
  {
    "text": "the",
    "start": "610640",
    "end": "611040"
  },
  {
    "text": "it connected to bootstrap servers and it",
    "start": "611040",
    "end": "613839"
  },
  {
    "text": "will use localhost 9101 to make the",
    "start": "613839",
    "end": "616839"
  },
  {
    "text": "connection",
    "start": "616839",
    "end": "618000"
  },
  {
    "text": "so it will make the connection to local",
    "start": "618000",
    "end": "619920"
  },
  {
    "text": "envoy on as a plain text so",
    "start": "619920",
    "end": "622399"
  },
  {
    "text": "it doesn't really need to know or uh it",
    "start": "622399",
    "end": "625440"
  },
  {
    "text": "doesn't",
    "start": "625440",
    "end": "626160"
  },
  {
    "text": "expect to talk to broker over tls",
    "start": "626160",
    "end": "629200"
  },
  {
    "text": "so it just makes a plain text connection",
    "start": "629200",
    "end": "631760"
  },
  {
    "text": "to envoy on this port and",
    "start": "631760",
    "end": "633360"
  },
  {
    "text": "envoy will make a connection uh to the",
    "start": "633360",
    "end": "636399"
  },
  {
    "text": "kafka broker and it will upgrade the",
    "start": "636399",
    "end": "639040"
  },
  {
    "text": "connection to mtls because we have",
    "start": "639040",
    "end": "641360"
  },
  {
    "text": "spy regions running on both on both",
    "start": "641360",
    "end": "644000"
  },
  {
    "text": "places",
    "start": "644000",
    "end": "645200"
  },
  {
    "text": "and obviously aspire agents on this",
    "start": "645200",
    "end": "647760"
  },
  {
    "text": "micro service side and on the broker's",
    "start": "647760",
    "end": "649680"
  },
  {
    "text": "side they both",
    "start": "649680",
    "end": "650720"
  },
  {
    "text": "talk to the spire server and they get",
    "start": "650720",
    "end": "653200"
  },
  {
    "text": "this uh",
    "start": "653200",
    "end": "654640"
  },
  {
    "text": "certificate rotation like they will get",
    "start": "654640",
    "end": "656720"
  },
  {
    "text": "them uh",
    "start": "656720",
    "end": "658079"
  },
  {
    "text": "spire server will manage all the",
    "start": "658079",
    "end": "659519"
  },
  {
    "text": "rotations and we will get all this kind",
    "start": "659519",
    "end": "661519"
  },
  {
    "text": "of",
    "start": "661519",
    "end": "661760"
  },
  {
    "text": "nice automatic setup out of the box",
    "start": "661760",
    "end": "665200"
  },
  {
    "text": "now i will hand over to jonathan who",
    "start": "665200",
    "end": "667040"
  },
  {
    "text": "will talk more in details how",
    "start": "667040",
    "end": "669200"
  },
  {
    "text": "we run invoice transfers",
    "start": "669200",
    "end": "672240"
  },
  {
    "text": "uh thank you diwali uh so um",
    "start": "672240",
    "end": "675680"
  },
  {
    "text": "lavani mentioned uh envoy quite a lot",
    "start": "675680",
    "end": "678320"
  },
  {
    "start": "677000",
    "end": "677000"
  },
  {
    "text": "though why",
    "start": "678320",
    "end": "679360"
  },
  {
    "text": "why envoy and how are we using it uh",
    "start": "679360",
    "end": "681360"
  },
  {
    "text": "trunks wise well",
    "start": "681360",
    "end": "682640"
  },
  {
    "text": "we already have envoy in place uh we",
    "start": "682640",
    "end": "684560"
  },
  {
    "text": "have a full service mesh",
    "start": "684560",
    "end": "687040"
  },
  {
    "text": "set up already this is deployed across",
    "start": "687040",
    "end": "689839"
  },
  {
    "text": "um",
    "start": "689839",
    "end": "690480"
  },
  {
    "text": "our entire estate so across our",
    "start": "690480",
    "end": "693360"
  },
  {
    "text": "kubernetes",
    "start": "693360",
    "end": "694160"
  },
  {
    "text": "clusters uh it's present as a sidecar in",
    "start": "694160",
    "end": "696880"
  },
  {
    "text": "all of our",
    "start": "696880",
    "end": "697519"
  },
  {
    "text": "service pods it's deployed on ec2",
    "start": "697519",
    "end": "700560"
  },
  {
    "text": "instances where there are services",
    "start": "700560",
    "end": "701680"
  },
  {
    "text": "running on peric2 instances",
    "start": "701680",
    "end": "703600"
  },
  {
    "text": "it's deployed in various data centers",
    "start": "703600",
    "end": "705200"
  },
  {
    "text": "around the world where we're running",
    "start": "705200",
    "end": "706640"
  },
  {
    "text": "services",
    "start": "706640",
    "end": "707839"
  },
  {
    "text": "um data centers this is used for all",
    "start": "707839",
    "end": "710880"
  },
  {
    "text": "service to service calls",
    "start": "710880",
    "end": "712079"
  },
  {
    "text": "and those calls are already secured",
    "start": "712079",
    "end": "714639"
  },
  {
    "text": "using",
    "start": "714639",
    "end": "715440"
  },
  {
    "text": "svid's x509s if it's provided by a",
    "start": "715440",
    "end": "718800"
  },
  {
    "text": "spy agent via the nvsds protocol",
    "start": "718800",
    "end": "723360"
  },
  {
    "text": "this is driven by a homegrown control",
    "start": "723360",
    "end": "725440"
  },
  {
    "text": "plane",
    "start": "725440",
    "end": "727040"
  },
  {
    "text": "but as this is present everywhere across",
    "start": "727040",
    "end": "729680"
  },
  {
    "text": "our infrastructure already",
    "start": "729680",
    "end": "730880"
  },
  {
    "text": "the components are already in place to",
    "start": "730880",
    "end": "732639"
  },
  {
    "text": "just add kafka support",
    "start": "732639",
    "end": "734800"
  },
  {
    "text": "um to this next slide please",
    "start": "734800",
    "end": "738800"
  },
  {
    "start": "738000",
    "end": "738000"
  },
  {
    "text": "so how do we go about adding kafka spot",
    "start": "738800",
    "end": "740880"
  },
  {
    "text": "today as well said the kafka brokers are",
    "start": "740880",
    "end": "743200"
  },
  {
    "text": "static",
    "start": "743200",
    "end": "744079"
  },
  {
    "text": "um so we didn't even need to touch the",
    "start": "744079",
    "end": "746880"
  },
  {
    "text": "control plane",
    "start": "746880",
    "end": "748000"
  },
  {
    "text": "um uh envoy configs are templatized so",
    "start": "748000",
    "end": "750720"
  },
  {
    "text": "helm for",
    "start": "750720",
    "end": "751600"
  },
  {
    "text": "uh kubernetes ginger two for everything",
    "start": "751600",
    "end": "754480"
  },
  {
    "text": "else",
    "start": "754480",
    "end": "755200"
  },
  {
    "text": "um and so by having that static list of",
    "start": "755200",
    "end": "757600"
  },
  {
    "text": "kafka brokers for each of the clusters",
    "start": "757600",
    "end": "759760"
  },
  {
    "text": "we can just feed that into the",
    "start": "759760",
    "end": "761120"
  },
  {
    "text": "templating and produce",
    "start": "761120",
    "end": "762800"
  },
  {
    "text": "bootstrap configs which already know",
    "start": "762800",
    "end": "764720"
  },
  {
    "text": "about all the brokers",
    "start": "764720",
    "end": "766560"
  },
  {
    "text": "static configuration is not ideal um but",
    "start": "766560",
    "end": "769680"
  },
  {
    "text": "it was",
    "start": "769680",
    "end": "770480"
  },
  {
    "text": "an easy way to get started doing this",
    "start": "770480",
    "end": "772720"
  },
  {
    "text": "and get it into production",
    "start": "772720",
    "end": "774079"
  },
  {
    "text": "so avoid touching the control plane at",
    "start": "774079",
    "end": "775600"
  },
  {
    "text": "all next slide please",
    "start": "775600",
    "end": "778480"
  },
  {
    "text": "so what does the uh conflict do this",
    "start": "778480",
    "end": "780480"
  },
  {
    "text": "look like well",
    "start": "780480",
    "end": "781600"
  },
  {
    "text": "um we have a listener",
    "start": "781600",
    "end": "785279"
  },
  {
    "text": "configured on invoice for each broker",
    "start": "785279",
    "end": "788000"
  },
  {
    "text": "that we need to talk to",
    "start": "788000",
    "end": "789279"
  },
  {
    "text": "um that listener has a cluster",
    "start": "789279",
    "end": "792160"
  },
  {
    "text": "associated with it",
    "start": "792160",
    "end": "793360"
  },
  {
    "text": "for each listener each cluster has a",
    "start": "793360",
    "end": "795600"
  },
  {
    "text": "single endpoint",
    "start": "795600",
    "end": "796800"
  },
  {
    "text": "which will be the kafka broker that that",
    "start": "796800",
    "end": "798480"
  },
  {
    "text": "listeners intended for",
    "start": "798480",
    "end": "800720"
  },
  {
    "text": "the listener is configured with the",
    "start": "800720",
    "end": "803440"
  },
  {
    "text": "envoy tcp proxy",
    "start": "803440",
    "end": "805200"
  },
  {
    "text": "filter and the cluster is configured to",
    "start": "805200",
    "end": "808079"
  },
  {
    "text": "have a tls transport socket so",
    "start": "808079",
    "end": "809760"
  },
  {
    "text": "that then pulls certificate information",
    "start": "809760",
    "end": "812240"
  },
  {
    "text": "and",
    "start": "812240",
    "end": "812800"
  },
  {
    "text": "the trust bundle from aspire agent via",
    "start": "812800",
    "end": "815680"
  },
  {
    "text": "the envoy sds",
    "start": "815680",
    "end": "817200"
  },
  {
    "text": "api that the agent supports we've also",
    "start": "817200",
    "end": "820399"
  },
  {
    "text": "got the listeners configured with the",
    "start": "820399",
    "end": "822240"
  },
  {
    "text": "kafka filter this is completely optional",
    "start": "822240",
    "end": "825839"
  },
  {
    "text": "it's not essential at all",
    "start": "825839",
    "end": "829040"
  },
  {
    "text": "uh we it all it doesn't do anything for",
    "start": "829040",
    "end": "832000"
  },
  {
    "text": "rooting traffic",
    "start": "832000",
    "end": "832800"
  },
  {
    "text": "all it does is pass the messages they go",
    "start": "832800",
    "end": "834800"
  },
  {
    "text": "by and produce some very basic metrics",
    "start": "834800",
    "end": "836639"
  },
  {
    "text": "about messages",
    "start": "836639",
    "end": "837839"
  },
  {
    "text": "it's it's nice to have uh additional",
    "start": "837839",
    "end": "840240"
  },
  {
    "text": "metrics so that's where we have it",
    "start": "840240",
    "end": "841360"
  },
  {
    "text": "turned on",
    "start": "841360",
    "end": "842079"
  },
  {
    "text": "and with this configuration you now have",
    "start": "842079",
    "end": "844079"
  },
  {
    "text": "a listener per",
    "start": "844079",
    "end": "845279"
  },
  {
    "text": "um broker and so your bootstrap servers",
    "start": "845279",
    "end": "848240"
  },
  {
    "text": "on the client side would look something",
    "start": "848240",
    "end": "849360"
  },
  {
    "text": "like localhost 9101 localhost 9102 and",
    "start": "849360",
    "end": "852320"
  },
  {
    "text": "so on in this case",
    "start": "852320",
    "end": "854000"
  },
  {
    "text": "this is still not perfect because it",
    "start": "854000",
    "end": "856160"
  },
  {
    "text": "means that the",
    "start": "856160",
    "end": "857120"
  },
  {
    "text": "client still needs to be configured with",
    "start": "857120",
    "end": "858480"
  },
  {
    "text": "this list of ports um",
    "start": "858480",
    "end": "860399"
  },
  {
    "text": "and if you want to renumber brokers or",
    "start": "860399",
    "end": "862959"
  },
  {
    "text": "you want to remove brokers and things",
    "start": "862959",
    "end": "864240"
  },
  {
    "text": "you'd have to go around changing",
    "start": "864240",
    "end": "865120"
  },
  {
    "text": "configurations so we can make this",
    "start": "865120",
    "end": "866480"
  },
  {
    "text": "slightly better and make bootstrapping",
    "start": "866480",
    "end": "867760"
  },
  {
    "text": "even simpler",
    "start": "867760",
    "end": "869120"
  },
  {
    "text": "next slide please by",
    "start": "869120",
    "end": "873199"
  },
  {
    "text": "adding a another listener with a cluster",
    "start": "873199",
    "end": "877199"
  },
  {
    "text": "that has an end point for every single",
    "start": "877199",
    "end": "879040"
  },
  {
    "text": "broker",
    "start": "879040",
    "end": "880320"
  },
  {
    "text": "so you have this in this example um",
    "start": "880320",
    "end": "884079"
  },
  {
    "text": "a listener on 9100 if you connect that",
    "start": "884079",
    "end": "887440"
  },
  {
    "text": "it will connect you to",
    "start": "887440",
    "end": "888639"
  },
  {
    "text": "one of the brokers that it knows about",
    "start": "888639",
    "end": "890560"
  },
  {
    "text": "so any one of the brokers",
    "start": "890560",
    "end": "892000"
  },
  {
    "text": "and that's enough bootstrapping that",
    "start": "892000",
    "end": "893360"
  },
  {
    "text": "broker will return the",
    "start": "893360",
    "end": "895279"
  },
  {
    "text": "cluster metadata which will contain the",
    "start": "895279",
    "end": "898160"
  },
  {
    "text": "advertised listeners for the rest of the",
    "start": "898160",
    "end": "899440"
  },
  {
    "text": "cluster while and itself",
    "start": "899440",
    "end": "900800"
  },
  {
    "text": "so that will give the client all of the",
    "start": "900800",
    "end": "903440"
  },
  {
    "text": "individual ports that it needed to know",
    "start": "903440",
    "end": "905360"
  },
  {
    "text": "to connect to the individual brokers",
    "start": "905360",
    "end": "907120"
  },
  {
    "text": "this means the configuration is as",
    "start": "907120",
    "end": "908320"
  },
  {
    "text": "simple as having a single port",
    "start": "908320",
    "end": "910480"
  },
  {
    "text": "in the bootstrap servers for each client",
    "start": "910480",
    "end": "912399"
  },
  {
    "text": "and it's now completely oblivious to how",
    "start": "912399",
    "end": "914160"
  },
  {
    "text": "many brokers are really behind",
    "start": "914160",
    "end": "916320"
  },
  {
    "text": "each of these bootstrap ports um that's",
    "start": "916320",
    "end": "919120"
  },
  {
    "text": "right",
    "start": "919120",
    "end": "920639"
  },
  {
    "text": "so what problems are with this well the",
    "start": "920639",
    "end": "922880"
  },
  {
    "text": "static configuration",
    "start": "922880",
    "end": "924639"
  },
  {
    "text": "is far from ideal um people want to",
    "start": "924639",
    "end": "927600"
  },
  {
    "text": "deploy",
    "start": "927600",
    "end": "928079"
  },
  {
    "text": "kafka into kubernetes clusters for",
    "start": "928079",
    "end": "930800"
  },
  {
    "text": "example",
    "start": "930800",
    "end": "931600"
  },
  {
    "text": "and other dynamic environments um even",
    "start": "931600",
    "end": "934480"
  },
  {
    "text": "adding",
    "start": "934480",
    "end": "935279"
  },
  {
    "text": "new brokers at the moment is a pain you",
    "start": "935279",
    "end": "937360"
  },
  {
    "text": "have to",
    "start": "937360",
    "end": "938639"
  },
  {
    "text": "basically regenerate a large number of",
    "start": "938639",
    "end": "940000"
  },
  {
    "text": "invoice configs and redeploy them",
    "start": "940000",
    "end": "942720"
  },
  {
    "text": "um it's not as bad as having to change",
    "start": "942720",
    "end": "945440"
  },
  {
    "text": "the client configuration",
    "start": "945440",
    "end": "946800"
  },
  {
    "text": "uh for every single service but it's",
    "start": "946800",
    "end": "948959"
  },
  {
    "text": "still",
    "start": "948959",
    "end": "950160"
  },
  {
    "text": "not ideal um we'll simply move the",
    "start": "950160",
    "end": "953839"
  },
  {
    "text": "configuration into the control plane at",
    "start": "953839",
    "end": "955759"
  },
  {
    "text": "some point in the future when this",
    "start": "955759",
    "end": "956720"
  },
  {
    "text": "becomes a",
    "start": "956720",
    "end": "957600"
  },
  {
    "text": "significant problem for us it's not a",
    "start": "957600",
    "end": "959440"
  },
  {
    "text": "show stopper we just wanted to have the",
    "start": "959440",
    "end": "961680"
  },
  {
    "text": "simplest sort of path to getting this",
    "start": "961680",
    "end": "963120"
  },
  {
    "text": "into production that we we could and so",
    "start": "963120",
    "end": "964720"
  },
  {
    "text": "avoiding touch with control plane was",
    "start": "964720",
    "end": "966000"
  },
  {
    "text": "the best way to do that",
    "start": "966000",
    "end": "967759"
  },
  {
    "text": "in terms of overhead there were worries",
    "start": "967759",
    "end": "970000"
  },
  {
    "text": "that introducing",
    "start": "970000",
    "end": "970959"
  },
  {
    "text": "envoy into the mix would um",
    "start": "970959",
    "end": "974399"
  },
  {
    "text": "would have some high overhead",
    "start": "974399",
    "end": "977680"
  },
  {
    "text": "in reality we found that offloading the",
    "start": "977680",
    "end": "980320"
  },
  {
    "text": "tls",
    "start": "980320",
    "end": "980959"
  },
  {
    "text": "work to envoy has better performance",
    "start": "980959",
    "end": "983519"
  },
  {
    "text": "than using the java native",
    "start": "983519",
    "end": "985040"
  },
  {
    "text": "uh the java client uh using tls and that",
    "start": "985040",
    "end": "988320"
  },
  {
    "text": "directly",
    "start": "988320",
    "end": "989600"
  },
  {
    "text": "anyone who's dealt with the java tls",
    "start": "989600",
    "end": "991759"
  },
  {
    "text": "implementation knows that it's not known",
    "start": "991759",
    "end": "993120"
  },
  {
    "text": "for its performance so",
    "start": "993120",
    "end": "994639"
  },
  {
    "text": "probably with hindsight this shouldn't",
    "start": "994639",
    "end": "995759"
  },
  {
    "text": "have been a surprise um",
    "start": "995759",
    "end": "997839"
  },
  {
    "text": "we actually have lower latency and",
    "start": "997839",
    "end": "999920"
  },
  {
    "text": "higher throughput with",
    "start": "999920",
    "end": "1001199"
  },
  {
    "text": "uh running it via envoy uh for rather",
    "start": "1001199",
    "end": "1003759"
  },
  {
    "text": "java of course",
    "start": "1003759",
    "end": "1004959"
  },
  {
    "text": "we're a java shop primarily so this was",
    "start": "1004959",
    "end": "1006800"
  },
  {
    "text": "our main use case that's what",
    "start": "1006800",
    "end": "1008079"
  },
  {
    "text": "benchmarked most heavily",
    "start": "1008079",
    "end": "1010160"
  },
  {
    "text": "for non-java implementations we'd expect",
    "start": "1010160",
    "end": "1013360"
  },
  {
    "text": "their",
    "start": "1013360",
    "end": "1014480"
  },
  {
    "text": "own tls implementations to be",
    "start": "1014480",
    "end": "1016240"
  },
  {
    "text": "significantly better than the java one",
    "start": "1016240",
    "end": "1018720"
  },
  {
    "text": "but in benchmarks the overhead of",
    "start": "1018720",
    "end": "1022079"
  },
  {
    "text": "empty less via envoy compared to just",
    "start": "1022079",
    "end": "1024160"
  },
  {
    "text": "plain text straight to the broker",
    "start": "1024160",
    "end": "1026160"
  },
  {
    "text": "uh wasn't actually that high at all i",
    "start": "1026160",
    "end": "1028558"
  },
  {
    "text": "don't have any numbers unfortunately",
    "start": "1028559",
    "end": "1029839"
  },
  {
    "text": "um but um yeah we found that",
    "start": "1029839",
    "end": "1033199"
  },
  {
    "text": "insignificant enough for our use case",
    "start": "1033199",
    "end": "1034720"
  },
  {
    "text": "that we don't believe that there's a",
    "start": "1034720",
    "end": "1035760"
  },
  {
    "text": "problem with our languages either",
    "start": "1035760",
    "end": "1037839"
  },
  {
    "text": "next slide so what did we gain from",
    "start": "1037839",
    "end": "1040400"
  },
  {
    "text": "doing all of this",
    "start": "1040400",
    "end": "1041280"
  },
  {
    "text": "um well unified service identity across",
    "start": "1041280",
    "end": "1043839"
  },
  {
    "text": "our infrastructure obviously a big win",
    "start": "1043839",
    "end": "1045918"
  },
  {
    "text": "spiffy ids for everything um so",
    "start": "1045919",
    "end": "1049280"
  },
  {
    "text": "service calls are authenticated the same",
    "start": "1049280",
    "end": "1052080"
  },
  {
    "text": "as",
    "start": "1052080",
    "end": "1052320"
  },
  {
    "text": "vids as we use for connecting up to our",
    "start": "1052320",
    "end": "1054320"
  },
  {
    "text": "kafka clusters",
    "start": "1054320",
    "end": "1055440"
  },
  {
    "text": "which is brilliant introducing envoy",
    "start": "1055440",
    "end": "1058480"
  },
  {
    "text": "meant that we were able to do this",
    "start": "1058480",
    "end": "1059919"
  },
  {
    "text": "without having to do any code changes on",
    "start": "1059919",
    "end": "1061760"
  },
  {
    "text": "the client side",
    "start": "1061760",
    "end": "1062640"
  },
  {
    "text": "so we didn't have to introduce",
    "start": "1062640",
    "end": "1065200"
  },
  {
    "text": "javascript for example or equivalent to",
    "start": "1065200",
    "end": "1067039"
  },
  {
    "text": "other languages to our clients",
    "start": "1067039",
    "end": "1068880"
  },
  {
    "text": "we didn't have to add tls support for",
    "start": "1068880",
    "end": "1070640"
  },
  {
    "text": "the cafe client libraries that don't",
    "start": "1070640",
    "end": "1072080"
  },
  {
    "text": "have it",
    "start": "1072080",
    "end": "1072880"
  },
  {
    "text": "for a couple of languages and so",
    "start": "1072880",
    "end": "1076000"
  },
  {
    "text": "diverse clients not a problem either",
    "start": "1076000",
    "end": "1078320"
  },
  {
    "text": "because all the client libraries support",
    "start": "1078320",
    "end": "1080080"
  },
  {
    "text": "plain text out of the box you can just",
    "start": "1080080",
    "end": "1081919"
  },
  {
    "text": "speak plain text to envoy and it all",
    "start": "1081919",
    "end": "1083520"
  },
  {
    "text": "works",
    "start": "1083520",
    "end": "1084160"
  },
  {
    "text": "and of course the big win no longer",
    "start": "1084160",
    "end": "1086320"
  },
  {
    "text": "lives certificates to manage anymore",
    "start": "1086320",
    "end": "1087840"
  },
  {
    "text": "uh everything is s vids managed by spire",
    "start": "1087840",
    "end": "1090799"
  },
  {
    "text": "which",
    "start": "1090799",
    "end": "1091200"
  },
  {
    "text": "was brilliant so um",
    "start": "1091200",
    "end": "1094240"
  },
  {
    "text": "i've also included a couple of resources",
    "start": "1094240",
    "end": "1097360"
  },
  {
    "start": "1097000",
    "end": "1097000"
  },
  {
    "text": "um there's an example envoy config well",
    "start": "1097360",
    "end": "1099919"
  },
  {
    "text": "a template for generating example",
    "start": "1099919",
    "end": "1101360"
  },
  {
    "text": "invoice config",
    "start": "1101360",
    "end": "1102799"
  },
  {
    "text": "in that github repo another important",
    "start": "1102799",
    "end": "1105760"
  },
  {
    "text": "component",
    "start": "1105760",
    "end": "1106640"
  },
  {
    "text": "is the kafka spiffy principle uh library",
    "start": "1106640",
    "end": "1109360"
  },
  {
    "text": "we didn't",
    "start": "1109360",
    "end": "1110240"
  },
  {
    "text": "write this but this converts this reads",
    "start": "1110240",
    "end": "1113039"
  },
  {
    "text": "the spiffy id of an x509s vid in kafka",
    "start": "1113039",
    "end": "1116080"
  },
  {
    "text": "and converts it to a kafka principle so",
    "start": "1116080",
    "end": "1118080"
  },
  {
    "text": "you can then use it in the",
    "start": "1118080",
    "end": "1119440"
  },
  {
    "text": "kafka acls that is obviously an",
    "start": "1119440",
    "end": "1121520"
  },
  {
    "text": "important bit of this",
    "start": "1121520",
    "end": "1122559"
  },
  {
    "text": "all and that's basically how we've",
    "start": "1122559",
    "end": "1125440"
  },
  {
    "text": "secured",
    "start": "1125440",
    "end": "1126160"
  },
  {
    "text": "access to our kafka brokers using",
    "start": "1126160",
    "end": "1129200"
  },
  {
    "text": "spiffy transferwise any questions",
    "start": "1129200",
    "end": "1136160"
  },
  {
    "text": "there are a few questions from the chat",
    "start": "1136160",
    "end": "1139520"
  },
  {
    "text": "i don't know if you rather read those or",
    "start": "1139520",
    "end": "1142799"
  },
  {
    "text": "take them offline uh maybe we can",
    "start": "1142799",
    "end": "1145919"
  },
  {
    "text": "yeah i can take them offline that's",
    "start": "1145919",
    "end": "1147039"
  },
  {
    "text": "probably easier to uh spare some time",
    "start": "1147039",
    "end": "1151360"
  },
  {
    "text": "great well this is fascinating uh",
    "start": "1151360",
    "end": "1154559"
  },
  {
    "text": "spiffy with kafka is a very sought after",
    "start": "1154559",
    "end": "1157919"
  },
  {
    "text": "and desired integration",
    "start": "1157919",
    "end": "1159440"
  },
  {
    "text": "thanks for assembling the pieces and",
    "start": "1159440",
    "end": "1162000"
  },
  {
    "text": "lighting the path for others to",
    "start": "1162000",
    "end": "1164240"
  },
  {
    "text": "be able to refer to the configuration",
    "start": "1164240",
    "end": "1166400"
  },
  {
    "text": "about how you've gone about it",
    "start": "1166400",
    "end": "1168559"
  },
  {
    "text": "and also well the the insights you've",
    "start": "1168559",
    "end": "1171280"
  },
  {
    "text": "gained throughout the process",
    "start": "1171280",
    "end": "1175520"
  }
]