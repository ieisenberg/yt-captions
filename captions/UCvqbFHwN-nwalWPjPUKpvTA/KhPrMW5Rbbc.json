[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "all right good morning everybody my name",
    "start": "2040",
    "end": "5220"
  },
  {
    "text": "is Thomas craft i'm co-founder and CTO",
    "start": "5220",
    "end": "8280"
  },
  {
    "text": "of I surveillance but probably more",
    "start": "8280",
    "end": "10679"
  },
  {
    "text": "importantly one of the creators of",
    "start": "10679",
    "end": "12240"
  },
  {
    "text": "psyllium and currently the chair of the",
    "start": "12240",
    "end": "14580"
  },
  {
    "text": "evpf governing board or ebpf Foundation",
    "start": "14580",
    "end": "17699"
  },
  {
    "text": "governing board I'm trying to give an",
    "start": "17699",
    "end": "20100"
  },
  {
    "text": "introduction to psyllium to ebpf not",
    "start": "20100",
    "end": "23340"
  },
  {
    "text": "selling ebpf in five minutes let's see",
    "start": "23340",
    "end": "26400"
  },
  {
    "text": "what that gets us",
    "start": "26400",
    "end": "28140"
  },
  {
    "start": "27000",
    "end": "57000"
  },
  {
    "text": "first of all what is ebpf how many of",
    "start": "28140",
    "end": "30960"
  },
  {
    "text": "you",
    "start": "30960",
    "end": "31980"
  },
  {
    "text": "um this is the first ebpf day how many",
    "start": "31980",
    "end": "34739"
  },
  {
    "text": "of you have been to an ebpf day before",
    "start": "34739",
    "end": "37680"
  },
  {
    "text": "first ebpf day",
    "start": "37680",
    "end": "39780"
  },
  {
    "text": "all right quite a few excellent so you",
    "start": "39780",
    "end": "42239"
  },
  {
    "text": "may be wondering what is actually BPF",
    "start": "42239",
    "end": "44280"
  },
  {
    "text": "and this is the the closest accurate",
    "start": "44280",
    "end": "46739"
  },
  {
    "text": "definition I could come to ebpf is a",
    "start": "46739",
    "end": "49200"
  },
  {
    "text": "programming language and run time to",
    "start": "49200",
    "end": "52620"
  },
  {
    "text": "extend operating systems",
    "start": "52620",
    "end": "55140"
  },
  {
    "text": "that sounds very abstract",
    "start": "55140",
    "end": "57960"
  },
  {
    "start": "57000",
    "end": "115000"
  },
  {
    "text": "a more practical comparison is ebpf is",
    "start": "57960",
    "end": "62699"
  },
  {
    "text": "like JavaScript or Lua",
    "start": "62699",
    "end": "64920"
  },
  {
    "text": "but for kernel Developers",
    "start": "64920",
    "end": "67200"
  },
  {
    "text": "now maybe you're even more confused so",
    "start": "67200",
    "end": "69180"
  },
  {
    "text": "let's look at this",
    "start": "69180",
    "end": "71100"
  },
  {
    "text": "on the left we have JavaScript an",
    "start": "71100",
    "end": "73740"
  },
  {
    "text": "example of JavaScript how it's commonly",
    "start": "73740",
    "end": "75900"
  },
  {
    "text": "used right you use JavaScript to run",
    "start": "75900",
    "end": "77880"
  },
  {
    "text": "some code when some event happens for",
    "start": "77880",
    "end": "80580"
  },
  {
    "text": "example most common example when the",
    "start": "80580",
    "end": "82560"
  },
  {
    "text": "website user clicks on a button it and",
    "start": "82560",
    "end": "84420"
  },
  {
    "text": "submits a form",
    "start": "84420",
    "end": "85799"
  },
  {
    "text": "on the right side we have ebpf very very",
    "start": "85799",
    "end": "88920"
  },
  {
    "text": "similar but you run ebpf programs in the",
    "start": "88920",
    "end": "92520"
  },
  {
    "text": "kernel in the operating system when some",
    "start": "92520",
    "end": "94799"
  },
  {
    "text": "event happens for example when a system",
    "start": "94799",
    "end": "96659"
  },
  {
    "text": "call is being invoked when a network",
    "start": "96659",
    "end": "98100"
  },
  {
    "text": "packet is being processed when a file is",
    "start": "98100",
    "end": "100320"
  },
  {
    "text": "being accessed and so on so very",
    "start": "100320",
    "end": "102840"
  },
  {
    "text": "different layers operating system for",
    "start": "102840",
    "end": "104520"
  },
  {
    "text": "ebpf JavaScript lure higher up in the",
    "start": "104520",
    "end": "107159"
  },
  {
    "text": "stack but conceptually they're actually",
    "start": "107159",
    "end": "109079"
  },
  {
    "text": "very similar they're making systems",
    "start": "109079",
    "end": "111119"
  },
  {
    "text": "programmable",
    "start": "111119",
    "end": "114079"
  },
  {
    "start": "115000",
    "end": "190000"
  },
  {
    "text": "why ebpf that's the second question I",
    "start": "116360",
    "end": "119460"
  },
  {
    "text": "usually get",
    "start": "119460",
    "end": "121380"
  },
  {
    "text": "operating systems in particular Linux",
    "start": "121380",
    "end": "124140"
  },
  {
    "text": "has become incredibly hard to change it",
    "start": "124140",
    "end": "127619"
  },
  {
    "text": "takes weeks or months to even get a",
    "start": "127619",
    "end": "130259"
  },
  {
    "text": "change upstream and then years for",
    "start": "130259",
    "end": "132900"
  },
  {
    "text": "consumers for users to consume these",
    "start": "132900",
    "end": "135120"
  },
  {
    "text": "Linux kernel versions these new versions",
    "start": "135120",
    "end": "136860"
  },
  {
    "text": "so the Innovation cycle is very very",
    "start": "136860",
    "end": "140040"
  },
  {
    "text": "very long very similar to hardware",
    "start": "140040",
    "end": "143580"
  },
  {
    "text": "this leads to this problem that's",
    "start": "143580",
    "end": "145739"
  },
  {
    "text": "similar to what we have for CPUs the",
    "start": "145739",
    "end": "148379"
  },
  {
    "text": "operating system is essentially using",
    "start": "148379",
    "end": "151140"
  },
  {
    "text": "building blocks because it has to",
    "start": "151140",
    "end": "152760"
  },
  {
    "text": "predict use cases it cannot adjust adopt",
    "start": "152760",
    "end": "156300"
  },
  {
    "text": "to changing requirements all the time",
    "start": "156300",
    "end": "158099"
  },
  {
    "text": "that's why the kernel the Linux kernel",
    "start": "158099",
    "end": "160379"
  },
  {
    "text": "typically has system subsystems that you",
    "start": "160379",
    "end": "163140"
  },
  {
    "text": "as a user can configure you cannot",
    "start": "163140",
    "end": "165180"
  },
  {
    "text": "program them for CPUs we have solved",
    "start": "165180",
    "end": "168000"
  },
  {
    "text": "these problems with higher level",
    "start": "168000",
    "end": "169200"
  },
  {
    "text": "programming languages like Java go rust",
    "start": "169200",
    "end": "172200"
  },
  {
    "text": "and so on",
    "start": "172200",
    "end": "173720"
  },
  {
    "text": "edpf is the same concept applied to",
    "start": "173720",
    "end": "176640"
  },
  {
    "text": "operating system so it gives us",
    "start": "176640",
    "end": "178140"
  },
  {
    "text": "programmability and thus allows us to",
    "start": "178140",
    "end": "181200"
  },
  {
    "text": "continuously adopt to changing",
    "start": "181200",
    "end": "183420"
  },
  {
    "text": "requirements and thus innovate very very",
    "start": "183420",
    "end": "185640"
  },
  {
    "text": "quickly that's the biggest fundamental",
    "start": "185640",
    "end": "187680"
  },
  {
    "text": "reason why ebpf exists",
    "start": "187680",
    "end": "191480"
  },
  {
    "start": "190000",
    "end": "263000"
  },
  {
    "text": "great so we have programmability how is",
    "start": "191700",
    "end": "194640"
  },
  {
    "text": "this different to things like Lua or",
    "start": "194640",
    "end": "196860"
  },
  {
    "text": "webassembly because there's lots of",
    "start": "196860",
    "end": "198420"
  },
  {
    "text": "other languages",
    "start": "198420",
    "end": "199819"
  },
  {
    "text": "much much more widely known ones that",
    "start": "199819",
    "end": "202860"
  },
  {
    "text": "have been around for ages that give",
    "start": "202860",
    "end": "204480"
  },
  {
    "text": "programmability",
    "start": "204480",
    "end": "206220"
  },
  {
    "text": "why and how is ebpf different ebpf is",
    "start": "206220",
    "end": "210120"
  },
  {
    "text": "specifically designed to be embedded",
    "start": "210120",
    "end": "212459"
  },
  {
    "text": "into the operating system Linux and",
    "start": "212459",
    "end": "214860"
  },
  {
    "text": "windows it can interface with the Linux",
    "start": "214860",
    "end": "217560"
  },
  {
    "text": "kernel so it can call into kernel apis",
    "start": "217560",
    "end": "220040"
  },
  {
    "text": "and it is restricted to run safely in",
    "start": "220040",
    "end": "223560"
  },
  {
    "text": "the kernel context",
    "start": "223560",
    "end": "225000"
  },
  {
    "text": "but it is aimed for kernel developers",
    "start": "225000",
    "end": "227220"
  },
  {
    "text": "and thus traditionally very hard to",
    "start": "227220",
    "end": "230099"
  },
  {
    "text": "learn and use Lua webassembly on the",
    "start": "230099",
    "end": "232980"
  },
  {
    "text": "other hand are designed to be embedded",
    "start": "232980",
    "end": "234659"
  },
  {
    "text": "into arbitrary applications or system",
    "start": "234659",
    "end": "236700"
  },
  {
    "text": "their general purpose and their aimed",
    "start": "236700",
    "end": "238860"
  },
  {
    "text": "application Developers",
    "start": "238860",
    "end": "240900"
  },
  {
    "text": "much easier to learn but they cannot run",
    "start": "240900",
    "end": "244140"
  },
  {
    "text": "in the context of your of the operating",
    "start": "244140",
    "end": "246120"
  },
  {
    "text": "system so the single unique feature of",
    "start": "246120",
    "end": "248280"
  },
  {
    "text": "ebpf is that it is embedded into the",
    "start": "248280",
    "end": "250860"
  },
  {
    "text": "operating system that what makes our",
    "start": "250860",
    "end": "252959"
  },
  {
    "text": "ebpf unique we could for example have",
    "start": "252959",
    "end": "255840"
  },
  {
    "text": "chosen Lua as a runtime for the Lewis",
    "start": "255840",
    "end": "258419"
  },
  {
    "text": "kernel and give that a name that would",
    "start": "258419",
    "end": "260400"
  },
  {
    "text": "be similar to what ebpf is today",
    "start": "260400",
    "end": "263699"
  },
  {
    "start": "263000",
    "end": "342000"
  },
  {
    "text": "how does ebpf work there is a language",
    "start": "263699",
    "end": "266340"
  },
  {
    "text": "and there is a runtime",
    "start": "266340",
    "end": "268560"
  },
  {
    "text": "the language can be expressed in a",
    "start": "268560",
    "end": "270660"
  },
  {
    "text": "variety of different languages sudo C",
    "start": "270660",
    "end": "272940"
  },
  {
    "text": "code is the the most common one where we",
    "start": "272940",
    "end": "274860"
  },
  {
    "text": "use a compiler like llvm or clang to",
    "start": "274860",
    "end": "277020"
  },
  {
    "text": "compile that into bytecode but there's",
    "start": "277020",
    "end": "279060"
  },
  {
    "text": "several different language Frameworks IR",
    "start": "279060",
    "end": "281880"
  },
  {
    "text": "libpf BCC to express ebpf programs in",
    "start": "281880",
    "end": "285540"
  },
  {
    "text": "different higher language higher level",
    "start": "285540",
    "end": "287040"
  },
  {
    "text": "languages all of this eventually produce",
    "start": "287040",
    "end": "289979"
  },
  {
    "text": "so-called ebpf bytecode that is our",
    "start": "289979",
    "end": "292919"
  },
  {
    "text": "program",
    "start": "292919",
    "end": "293940"
  },
  {
    "text": "then we have a run time this is what's",
    "start": "293940",
    "end": "295919"
  },
  {
    "text": "embedded into the operating system the",
    "start": "295919",
    "end": "297660"
  },
  {
    "text": "runtime takes the bytecode verifies it",
    "start": "297660",
    "end": "300300"
  },
  {
    "text": "to make sure it is safe to run just in",
    "start": "300300",
    "end": "302820"
  },
  {
    "text": "time compiles it for efficiency and then",
    "start": "302820",
    "end": "304919"
  },
  {
    "text": "runs it at the requested hook points in",
    "start": "304919",
    "end": "307380"
  },
  {
    "text": "this example it is being run when system",
    "start": "307380",
    "end": "309479"
  },
  {
    "text": "calls are being invoked",
    "start": "309479",
    "end": "312960"
  },
  {
    "text": "so these three properties ebpf is secure",
    "start": "312960",
    "end": "315900"
  },
  {
    "text": "it has runtime verification it has a",
    "start": "315900",
    "end": "318419"
  },
  {
    "text": "Sandbox concept it has program signing",
    "start": "318419",
    "end": "321060"
  },
  {
    "text": "it is efficient because it is going",
    "start": "321060",
    "end": "322800"
  },
  {
    "text": "through a just in time compiler it is",
    "start": "322800",
    "end": "325080"
  },
  {
    "text": "embedded into the operating system and",
    "start": "325080",
    "end": "327360"
  },
  {
    "text": "it offers per CPU data structures and it",
    "start": "327360",
    "end": "330180"
  },
  {
    "text": "portable the bytecode is generic it gets",
    "start": "330180",
    "end": "333060"
  },
  {
    "text": "just in time compiled later on it has",
    "start": "333060",
    "end": "335100"
  },
  {
    "text": "data type Discovery BTF as well as a",
    "start": "335100",
    "end": "338520"
  },
  {
    "text": "stable API how to interface with the",
    "start": "338520",
    "end": "340560"
  },
  {
    "text": "operating system",
    "start": "340560",
    "end": "342840"
  },
  {
    "start": "342000",
    "end": "359000"
  },
  {
    "text": "who controls evpf evpf is controlled by",
    "start": "342840",
    "end": "346800"
  },
  {
    "text": "the ebpf foundation and the open source",
    "start": "346800",
    "end": "349620"
  },
  {
    "text": "communities around it if you are",
    "start": "349620",
    "end": "351900"
  },
  {
    "text": "interested in participating on the",
    "start": "351900",
    "end": "353220"
  },
  {
    "text": "governance side of ebpf foundation feel",
    "start": "353220",
    "end": "355320"
  },
  {
    "text": "free to go to ebpf.foundation",
    "start": "355320",
    "end": "359039"
  },
  {
    "start": "359000",
    "end": "473000"
  },
  {
    "text": "that's that's nice now we know about",
    "start": "360479",
    "end": "362400"
  },
  {
    "text": "ebpf is where is ebpf used today this",
    "start": "362400",
    "end": "364860"
  },
  {
    "text": "may actually be a surprise it's",
    "start": "364860",
    "end": "366479"
  },
  {
    "text": "incredibly widely used we could look at",
    "start": "366479",
    "end": "369120"
  },
  {
    "text": "the psyllium users file it's everywhere",
    "start": "369120",
    "end": "370740"
  },
  {
    "text": "but that's kind of boring lots of logos",
    "start": "370740",
    "end": "372720"
  },
  {
    "text": "let's look at some more extreme use",
    "start": "372720",
    "end": "375360"
  },
  {
    "text": "cases",
    "start": "375360",
    "end": "376440"
  },
  {
    "text": "Cloud native landscape we see a couple",
    "start": "376440",
    "end": "378479"
  },
  {
    "text": "of projects using evpf but let's dive",
    "start": "378479",
    "end": "380699"
  },
  {
    "text": "deeper and look at like heavy",
    "start": "380699",
    "end": "382259"
  },
  {
    "text": "applications of ebpf that you probably",
    "start": "382259",
    "end": "384180"
  },
  {
    "text": "use every day",
    "start": "384180",
    "end": "386039"
  },
  {
    "text": "facebook slash meta is using ebpr for",
    "start": "386039",
    "end": "388919"
  },
  {
    "text": "load balancing it's called project",
    "start": "388919",
    "end": "390060"
  },
  {
    "text": "katron it's been used in production from",
    "start": "390060",
    "end": "392699"
  },
  {
    "text": "for for several years all ebpf Facebook",
    "start": "392699",
    "end": "395819"
  },
  {
    "text": "is using this exclusively for all load",
    "start": "395819",
    "end": "398160"
  },
  {
    "text": "balancing needs we have all three big",
    "start": "398160",
    "end": "401520"
  },
  {
    "text": "cloud providers AWS Azure Google Cloud",
    "start": "401520",
    "end": "404039"
  },
  {
    "text": "using Solium in their managed kuberous",
    "start": "404039",
    "end": "406440"
  },
  {
    "text": "offerings many of you probably use a",
    "start": "406440",
    "end": "408300"
  },
  {
    "text": "managed kubernetes offering gke eks AKs",
    "start": "408300",
    "end": "410880"
  },
  {
    "text": "at some point they are using psyllium",
    "start": "410880",
    "end": "412919"
  },
  {
    "text": "and thus ebpf underneath",
    "start": "412919",
    "end": "415500"
  },
  {
    "text": "but even smartphones this is the evpf",
    "start": "415500",
    "end": "418020"
  },
  {
    "text": "page of the Android operating system",
    "start": "418020",
    "end": "420419"
  },
  {
    "text": "Android uses ebpf it has an ebpf loader",
    "start": "420419",
    "end": "423300"
  },
  {
    "text": "and it uses ebpf pro ebpf programs to do",
    "start": "423300",
    "end": "426479"
  },
  {
    "text": "traffic accounting it uses it to account",
    "start": "426479",
    "end": "428460"
  },
  {
    "text": "how much CPU memory each app uses and",
    "start": "428460",
    "end": "431039"
  },
  {
    "text": "can even do GPU memory accounting and so",
    "start": "431039",
    "end": "433500"
  },
  {
    "text": "on it's all done using eppf so when you",
    "start": "433500",
    "end": "436020"
  },
  {
    "text": "look at the traffic statistic of your",
    "start": "436020",
    "end": "438120"
  },
  {
    "text": "app how much traffic volume how much",
    "start": "438120",
    "end": "439860"
  },
  {
    "text": "Network volume it it consumed that was",
    "start": "439860",
    "end": "442319"
  },
  {
    "text": "counted using BPF",
    "start": "442319",
    "end": "444800"
  },
  {
    "text": "multi-cloud networking Enterprises there",
    "start": "444800",
    "end": "447000"
  },
  {
    "text": "was a fantastic presentation at ebpf",
    "start": "447000",
    "end": "449880"
  },
  {
    "text": "Summit a couple of weeks back where s p",
    "start": "449880",
    "end": "452160"
  },
  {
    "text": "Global presented how they're using ebpf",
    "start": "452160",
    "end": "454800"
  },
  {
    "text": "with sodium for a multi-cloud networking",
    "start": "454800",
    "end": "457139"
  },
  {
    "text": "layer to essentially redefine how they",
    "start": "457139",
    "end": "459479"
  },
  {
    "text": "think about networking the talk was",
    "start": "459479",
    "end": "461099"
  },
  {
    "text": "absolutely fantastic a road to invisible",
    "start": "461099",
    "end": "464340"
  },
  {
    "text": "Network smp's Global Network",
    "start": "464340",
    "end": "465900"
  },
  {
    "text": "transformation Journey you can go to",
    "start": "465900",
    "end": "467819"
  },
  {
    "text": "ebpf.io click on watch Summit recordings",
    "start": "467819",
    "end": "470400"
  },
  {
    "text": "and you will find a talk the talk",
    "start": "470400",
    "end": "472440"
  },
  {
    "text": "recording",
    "start": "472440",
    "end": "474120"
  },
  {
    "start": "473000",
    "end": "571000"
  },
  {
    "text": "but there is one more thing because the",
    "start": "474120",
    "end": "476639"
  },
  {
    "text": "biggest aspect of eppf where I think",
    "start": "476639",
    "end": "479160"
  },
  {
    "text": "we'll see a lot more Innovation going",
    "start": "479160",
    "end": "480960"
  },
  {
    "text": "forward is observability",
    "start": "480960",
    "end": "483180"
  },
  {
    "text": "so really happy to announce a absolutely",
    "start": "483180",
    "end": "486120"
  },
  {
    "text": "fantastic new uh partnership between",
    "start": "486120",
    "end": "488699"
  },
  {
    "text": "grafana and I surveillance grafana is",
    "start": "488699",
    "end": "492120"
  },
  {
    "text": "bringing their entire observability",
    "start": "492120",
    "end": "493440"
  },
  {
    "text": "knowledge and tools at Loki grafana",
    "start": "493440",
    "end": "496139"
  },
  {
    "text": "Tempo and so on and I surveillance is",
    "start": "496139",
    "end": "498720"
  },
  {
    "text": "bringing sodium tetragon Hubble for for",
    "start": "498720",
    "end": "501360"
  },
  {
    "text": "observability and all of our ebpf",
    "start": "501360",
    "end": "504120"
  },
  {
    "text": "knowledge and together we're building a",
    "start": "504120",
    "end": "506160"
  },
  {
    "text": "new set of tools that you can use for",
    "start": "506160",
    "end": "508860"
  },
  {
    "text": "observability",
    "start": "508860",
    "end": "510419"
  },
  {
    "text": "a couple of examples Network",
    "start": "510419",
    "end": "512520"
  },
  {
    "text": "observability where you we can now embed",
    "start": "512520",
    "end": "515039"
  },
  {
    "text": "grafana dashboards directly into",
    "start": "515039",
    "end": "517140"
  },
  {
    "text": "psyllium's Hubble UI for amazing Network",
    "start": "517140",
    "end": "519659"
  },
  {
    "text": "observability metrics for traffic volume",
    "start": "519659",
    "end": "522659"
  },
  {
    "text": "Network policy drops traffic volume and",
    "start": "522659",
    "end": "526140"
  },
  {
    "text": "so on",
    "start": "526140",
    "end": "527040"
  },
  {
    "text": "but there is more we can also do ebpf",
    "start": "527040",
    "end": "529260"
  },
  {
    "text": "based HTTP tracing and HTTP",
    "start": "529260",
    "end": "531300"
  },
  {
    "text": "observability and for example build",
    "start": "531300",
    "end": "533580"
  },
  {
    "text": "golden signal dashboards that we see on",
    "start": "533580",
    "end": "535500"
  },
  {
    "text": "the right side of the screen as well as",
    "start": "535500",
    "end": "537360"
  },
  {
    "text": "integration in the grafana tempo where",
    "start": "537360",
    "end": "539220"
  },
  {
    "text": "we can trace individual HTTP requests",
    "start": "539220",
    "end": "541380"
  },
  {
    "text": "all thanks to ebpf and those without",
    "start": "541380",
    "end": "544200"
  },
  {
    "text": "sidecars without proxies at all very",
    "start": "544200",
    "end": "546540"
  },
  {
    "text": "very fascinating and last but not least",
    "start": "546540",
    "end": "549000"
  },
  {
    "text": "because of because of tilium's tetragon",
    "start": "549000",
    "end": "551519"
  },
  {
    "text": "project we also have excellent",
    "start": "551519",
    "end": "553380"
  },
  {
    "text": "visibility into the security layer and",
    "start": "553380",
    "end": "555720"
  },
  {
    "text": "can for example display process ancestry",
    "start": "555720",
    "end": "559380"
  },
  {
    "text": "how how applications behave and what",
    "start": "559380",
    "end": "562080"
  },
  {
    "text": "commands they execute and visualize that",
    "start": "562080",
    "end": "564480"
  },
  {
    "text": "in uh in a grafana tool sets as well as",
    "start": "564480",
    "end": "567480"
  },
  {
    "text": "well as things like TLS handshake",
    "start": "567480",
    "end": "569459"
  },
  {
    "text": "monitoring",
    "start": "569459",
    "end": "572279"
  },
  {
    "start": "571000",
    "end": "596000"
  },
  {
    "text": "this was a five minute introduction to",
    "start": "572279",
    "end": "574380"
  },
  {
    "text": "to ebpf and um I tried to to use a",
    "start": "574380",
    "end": "577680"
  },
  {
    "text": "couple of real world examples as well",
    "start": "577680",
    "end": "579180"
  },
  {
    "text": "ebpf is already everywhere and we're",
    "start": "579180",
    "end": "581519"
  },
  {
    "text": "using it every day but there's lots of",
    "start": "581519",
    "end": "583740"
  },
  {
    "text": "more exciting things coming and I'm",
    "start": "583740",
    "end": "585240"
  },
  {
    "text": "looking forward to the to a whole day of",
    "start": "585240",
    "end": "587940"
  },
  {
    "text": "um presentations thanks a lot everybody",
    "start": "587940",
    "end": "591380"
  }
]