[
  {
    "text": "hello everyone how are we doing",
    "start": "320",
    "end": "6679"
  },
  {
    "text": "all right thank you for coming to building web assembly or like it's 2011",
    "start": "7440",
    "end": "13040"
  },
  {
    "text": "we're so happy to have you all here uh my name is David Justice and I am joined",
    "start": "13040",
    "end": "18160"
  },
  {
    "text": "here hi I'm Terrence uh so I am a uh",
    "start": "18160",
    "end": "24240"
  },
  {
    "text": "CNCF uh WAM working group co-chair uh and also a uh employee at Microsoft uh",
    "start": "24240",
    "end": "33040"
  },
  {
    "text": "Terrence who are you uh I work at Heroku i'm an architect over there and I got to",
    "start": "33040",
    "end": "39920"
  },
  {
    "text": "co-create build packs two times so that's been fun that's awesome i'm so happy to be on stage with you",
    "start": "39920",
    "end": "46239"
  },
  {
    "text": "yeah so uh kind of going through the agenda real quick in case folks get lost we're going to do a quick intro on Wom",
    "start": "46239",
    "end": "52800"
  },
  {
    "text": "the component model uh kind of a quick refresher take a tour through build packs for those who aren't familiar and",
    "start": "52800",
    "end": "58239"
  },
  {
    "text": "how that helps our problems here and then bring them together and then kind of look where we're going to head in the",
    "start": "58239",
    "end": "64198"
  },
  {
    "text": "future let's kick it off David awesome thank you so much Terrence all right how",
    "start": "64199",
    "end": "69360"
  },
  {
    "text": "many in here have built a web assembly module yeah how many in here have built a web",
    "start": "69360",
    "end": "75280"
  },
  {
    "text": "assembly component awesome how many people have fused two",
    "start": "75280",
    "end": "80400"
  },
  {
    "text": "components together oh my goodness there's more than I expected that's actually pretty amazing",
    "start": "80400",
    "end": "86400"
  },
  {
    "text": "okay so we're going to do a little bit of that today i'm going to give a little background first so this might be a little bit of a refresher for folks that",
    "start": "86400",
    "end": "93759"
  },
  {
    "text": "know it but hey let's jump into it okay cool so what is Web Assembly web",
    "start": "93759",
    "end": "98799"
  },
  {
    "text": "Assembly is a application binary format that provides us portability sandboxing",
    "start": "98799",
    "end": "104720"
  },
  {
    "text": "and efficiency and performance it's also really nice because it kind of allows us to do it from many different languages",
    "start": "104720",
    "end": "110799"
  },
  {
    "text": "so uh if we had Go JavaScript.NET net Java even we can take all those and",
    "start": "110799",
    "end": "118159"
  },
  {
    "text": "hit that intermediary binary lang uh format and then be able to execute it on the server on the edge uh like anywhere",
    "start": "118159",
    "end": "126880"
  },
  {
    "text": "uh in your browser uh this is really cool this is kind of the promise of uh run once uh uh write once run anywhere",
    "start": "126880",
    "end": "132959"
  },
  {
    "text": "but it's really low level so it's so low level that we need to",
    "start": "132959",
    "end": "140239"
  },
  {
    "text": "create some kind of a wrapper around it because that low-level interface is really just integers so we got pointers",
    "start": "140239",
    "end": "146239"
  },
  {
    "text": "we got pointers at the beginning of like a string and the length and that's that's pretty much how you represent all",
    "start": "146239",
    "end": "151760"
  },
  {
    "text": "high level types so we introduced this idea of this component model so you want to think of the component model kind of",
    "start": "151760",
    "end": "157280"
  },
  {
    "text": "like uh your proto files who out here likes to write the binary serialization for their proto endpoint or their gRPC",
    "start": "157280",
    "end": "163680"
  },
  {
    "text": "endpoints anybody come on isn't that fun it's not is it",
    "start": "163680",
    "end": "169599"
  },
  {
    "text": "not actually dangerous and terribly tedious to write a binary uh serialization format yeah it's horrible",
    "start": "169599",
    "end": "175840"
  },
  {
    "text": "um and to do that over and over again for every single endpoint it'd be awful so uh the idea is uh this this component",
    "start": "175840",
    "end": "182640"
  },
  {
    "text": "model provides us this outer wrapper around core W modules that handles this for us it's kind of like our proto",
    "start": "182640",
    "end": "189120"
  },
  {
    "text": "wrapper uh let's go next one this is actually what it looks like so this is",
    "start": "189120",
    "end": "194640"
  },
  {
    "text": "actually like the most readable version of a protoile I think I've ever seen it actually looks like a language that",
    "start": "194640",
    "end": "199760"
  },
  {
    "text": "you're describing interface in so this is called wit this is the web assembly interface types and this is the",
    "start": "199760",
    "end": "205360"
  },
  {
    "text": "equivalent of proto except for web assembly so we can describe highle structures we can describe uh records we",
    "start": "205360",
    "end": "212159"
  },
  {
    "text": "can describe resources we can describe functions we can describe worlds and in fact it's actually worlds like worlds is",
    "start": "212159",
    "end": "217680"
  },
  {
    "text": "a key term uh so we'll get dig into that a little bit but this is how we describe",
    "start": "217680",
    "end": "222720"
  },
  {
    "text": "uh how we put two components together and what interface they expect from each other it's really kind of",
    "start": "222720",
    "end": "228519"
  },
  {
    "text": "fun all right we would not be right in Britain without Mary Berry so if anybody",
    "start": "228519",
    "end": "238080"
  },
  {
    "text": "out there is a big fan of the Great British Baking Show I know I am um we're",
    "start": "238080",
    "end": "243120"
  },
  {
    "text": "gonna go make a layer cake today and if you look at it Mary Berry makes this stuff look super simple and our layer",
    "start": "243120",
    "end": "250080"
  },
  {
    "text": "cake is kind of look like the thing on the right hand side uh yeah uh your left my",
    "start": "250080",
    "end": "255239"
  },
  {
    "text": "right um so you can see in the center of it we have our JavaScript language uh",
    "start": "255239",
    "end": "260720"
  },
  {
    "text": "the code that we've written in JavaScript and below it we have this like little block called Starling Monkey",
    "start": "260720",
    "end": "266800"
  },
  {
    "text": "starling monkey is a derivation of uh uh spider monkey uh and gives us uh some",
    "start": "266800",
    "end": "272160"
  },
  {
    "text": "really nice runtime characteristics specifically for running really really low latency starts so this is really",
    "start": "272160",
    "end": "278160"
  },
  {
    "text": "nice if you were running like a function as a service kind of thing um and then we're going to wrap it with a wit",
    "start": "278160",
    "end": "283919"
  },
  {
    "text": "interface make it nice and then run it within a wy compatible WM",
    "start": "283919",
    "end": "289720"
  },
  {
    "text": "runtime we're gonna make that really awesome layered cake that Mary's showing and she looks so happy doing it i think",
    "start": "289720",
    "end": "295040"
  },
  {
    "text": "we're gonna be happy at the end too all right we're also gonna do it",
    "start": "295040",
    "end": "301440"
  },
  {
    "text": "with Go we're gonna marry Go and JavaScript together it's going to be like uh our our our trifle you ever see",
    "start": "301440",
    "end": "309039"
  },
  {
    "text": "make trifles it's like layer layer layer layer well it throws a lot of different flavors in there we're going to throw in",
    "start": "309039",
    "end": "314479"
  },
  {
    "text": "go and JavaScript this is how we would normally go about this this is like the",
    "start": "314479",
    "end": "319680"
  },
  {
    "text": "simple case you know you go generate go build and out pops application voila s",
    "start": "319680",
    "end": "327400"
  },
  {
    "text": "Magnafi now you don't get the same experience",
    "start": "327400",
    "end": "332560"
  },
  {
    "text": "with Web Assembly now what do you get this is a really complicated",
    "start": "332560",
    "end": "340080"
  },
  {
    "text": "recipe oh boy i don't even know what half these ingredients are let alone how to combine",
    "start": "341000",
    "end": "348800"
  },
  {
    "text": "them uh we start off with WKG in fact that's actually pronounced",
    "start": "348800",
    "end": "355240"
  },
  {
    "text": "wackage that is for fetching your wit definitions from an exterior source",
    "start": "355240",
    "end": "360400"
  },
  {
    "text": "actually an OCI registry u and then my go has turned into a tiny go which uh",
    "start": "360400",
    "end": "367440"
  },
  {
    "text": "tiny go is not quite go just like cgo is not go um node node kind of stayed the same npm",
    "start": "367440",
    "end": "374639"
  },
  {
    "text": "kind of stayed the same but we've started to add more tools to it like jco j is uh your JavaScript uh component",
    "start": "374639",
    "end": "381919"
  },
  {
    "text": "tooling uh it's got a bunch of different tools in there based on uh some standardized Rust tools and we'll use it",
    "start": "381919",
    "end": "388080"
  },
  {
    "text": "for a handful of things like actually making a component um and then afterwards we have this thing called",
    "start": "388080",
    "end": "395639"
  },
  {
    "text": "whack it is not whack it's actually pretty cool um it fuses components together based on uh interface",
    "start": "395639",
    "end": "403600"
  },
  {
    "text": "structures from the wit and then fuses them together to create a final component of them put",
    "start": "403600",
    "end": "410759"
  },
  {
    "text": "together so what are you thinking oh my goodness and and it would",
    "start": "410759",
    "end": "417520"
  },
  {
    "text": "probably turn out that sloppy too it did for the first five times for me so uh maybe you all do better hopefully after",
    "start": "417520",
    "end": "423360"
  },
  {
    "text": "this talk you'll do better uh so let's see how are we going to fix this terrence tell me how we can fix this so",
    "start": "423360",
    "end": "431280"
  },
  {
    "text": "I'm going to take us back to 2011 um and during this time uh we kind of rewind",
    "start": "431280",
    "end": "438880"
  },
  {
    "text": "time uh this is actually a time period when uh I was working at Herok at the time uh I think that makes me kind of",
    "start": "438880",
    "end": "444880"
  },
  {
    "text": "old there and so we were actually taking so Heroku was a Ruby only platform we're on this process of making this polygot",
    "start": "444880",
    "end": "451360"
  },
  {
    "text": "platform at the heart of that transformation was this concept uh called Bill Packs and what buildp packs",
    "start": "451360",
    "end": "456960"
  },
  {
    "text": "let us do is it allows us to extract all the language specific bits um from the build process and let Heroku be this",
    "start": "456960",
    "end": "463919"
  },
  {
    "text": "language agnostic platform right and so a build pack would automatically detect what kind of application you had was it",
    "start": "463919",
    "end": "470080"
  },
  {
    "text": "a Java Ruby node application um figure out what tools that you need to run uh",
    "start": "470080",
    "end": "475520"
  },
  {
    "text": "as well as kind of optimize your application for peak performance so you as the customer of this thing could kind",
    "start": "475520",
    "end": "481599"
  },
  {
    "text": "of just focus on building your application sounds great right and as part of that um we actually open source",
    "start": "481599",
    "end": "488240"
  },
  {
    "text": "build packs um during that time period and um you know there was adoption from",
    "start": "488240",
    "end": "493520"
  },
  {
    "text": "various companies and people in the space uh one of the kind of prominent players was pivotal um as they're",
    "start": "493520",
    "end": "498800"
  },
  {
    "text": "working on cloud foundry and uh they actually kind of uh were you know used",
    "start": "498800",
    "end": "504160"
  },
  {
    "text": "took our build packs and then as uh as fork they actually like made a separate API had a totally separate ecosystem and",
    "start": "504160",
    "end": "510319"
  },
  {
    "text": "so we were actually on these like diverging ecosystems and in 2018 we got together and created cloudnative build",
    "start": "510319",
    "end": "516640"
  },
  {
    "text": "packs so we wanted to do kind of two essential things we wanted to bring our ecosystems together because it kind of",
    "start": "516640",
    "end": "522000"
  },
  {
    "text": "sucked that they were separate and you couldn't have build packs that were necessarily compatible with both um and",
    "start": "522000",
    "end": "528000"
  },
  {
    "text": "there was this whole like Docker container thing that was happening at that time and so uh we also wanted to",
    "start": "528000",
    "end": "533839"
  },
  {
    "text": "instead of have a bunch of proprietary output and artifacts actually create um things that basically worked in that",
    "start": "533839",
    "end": "540399"
  },
  {
    "text": "ecosystem played around with it um and today we're a CNCF incubation project",
    "start": "540399",
    "end": "545839"
  },
  {
    "text": "and we actually just submitted our graduation application uh earlier this year so hoping that goes through but",
    "start": "545839",
    "end": "552399"
  },
  {
    "text": "we'll see how long that takes and so you know build packs we're now cloud native",
    "start": "552399",
    "end": "557760"
  },
  {
    "text": "build packs kind of what's different so it's still uh source codeentric focus on application and what you get out is",
    "start": "557760",
    "end": "564320"
  },
  {
    "text": "instead of this proprietary artifact you're going to get an OCI image you know things that you can use with Docker",
    "start": "564320",
    "end": "569680"
  },
  {
    "text": "things that you can put in NoCI registry right and uh what you get is this well structured application that has um",
    "start": "569680",
    "end": "576640"
  },
  {
    "text": "layers that map um logically to your application itself and the build packs themselves are these composable units of",
    "start": "576640",
    "end": "583519"
  },
  {
    "text": "that encapsulate a specific technology right and when I talk about technology I mean stuff like a Java Node.js GS uh um",
    "start": "583519",
    "end": "591920"
  },
  {
    "text": "you know like those kind of things or Ruby Python um things that you'd want to kind of standardize uh how things should",
    "start": "591920",
    "end": "597600"
  },
  {
    "text": "be built right and um the other kind of nice benefit is that they can be composed together um and used so they're",
    "start": "597600",
    "end": "605519"
  },
  {
    "text": "executed on a a particular build pack platform but you can have a bunch of build packs that are executed and",
    "start": "605519",
    "end": "611040"
  },
  {
    "text": "working together and so as the end result of that if you're an application developer",
    "start": "611040",
    "end": "617519"
  },
  {
    "text": "right um one of the things that you don't have to do with by using build packs is have to artisally cra hand",
    "start": "617519",
    "end": "623680"
  },
  {
    "text": "craft like that docker file where you're copying and pasting lines and trying to make this production thing work and fit",
    "start": "623680",
    "end": "628800"
  },
  {
    "text": "all the things you want right you can leverage these build packs and they'll put all the things that you need to have it run and have this image that you can",
    "start": "628800",
    "end": "635200"
  },
  {
    "text": "use uh for your application um with the build packs themselves uh they allow you",
    "start": "635200",
    "end": "640240"
  },
  {
    "text": "to standardize how those applications are built so inside of a company uh you can have Java built the same way across",
    "start": "640240",
    "end": "647279"
  },
  {
    "text": "your entire company so you don't have these individual docker files for every single application in your company right",
    "start": "647279",
    "end": "653519"
  },
  {
    "text": "that are mostly doing the same things but you get these kind of snowflakes throughout your company and this",
    "start": "653519",
    "end": "659040"
  },
  {
    "text": "essentially and I was mentioning that build packs composable right and so what that allows platform operators to do is",
    "start": "659040",
    "end": "664320"
  },
  {
    "text": "you can actually decrease number of base images that you need to run right so um you don't have it's very common right to",
    "start": "664320",
    "end": "670560"
  },
  {
    "text": "have like my base image like a real nine right it's like my real nine plus this specific version of java and then if I",
    "start": "670560",
    "end": "676800"
  },
  {
    "text": "want the next version java that's a totally different base image so that operation teams like running those two things and god forbid if I have a node",
    "start": "676800",
    "end": "683839"
  },
  {
    "text": "nojs image I have to run and then the combination of those things right the combinator tors become very high because",
    "start": "683839",
    "end": "689519"
  },
  {
    "text": "uh you have to maintain all these things through application developers can use them right and so with build packs you can essentially have a single rail line",
    "start": "689519",
    "end": "695279"
  },
  {
    "text": "at base image and then rely on build packs to essentially do that composition for you um getting you essentially all",
    "start": "695279",
    "end": "702160"
  },
  {
    "text": "that organizational efficiency that you want for that standardization and the easiest way to get started is to use our",
    "start": "702160",
    "end": "708160"
  },
  {
    "text": "local CLI platform called pack uh you install it through homebrew uh it's part of you know the standard we have Linux",
    "start": "708160",
    "end": "715279"
  },
  {
    "text": "packaging as well um through debs arch etc uh and you just get that installed and you run pack build and the name of",
    "start": "715279",
    "end": "721519"
  },
  {
    "text": "your image and so kind of digging in on what happens with a pack build uh so looking",
    "start": "721519",
    "end": "727760"
  },
  {
    "text": "at pack it's going to take two major inputs um besides what you want to call your image uh you're going to have the",
    "start": "727760",
    "end": "733440"
  },
  {
    "text": "application source code and we have this concept called the builder image and so the builder image is composed of a few things you're going to have those build",
    "start": "733440",
    "end": "739680"
  },
  {
    "text": "packs that you want to vendor in and potentially run and you're going to have what we call the life cycle so that's",
    "start": "739680",
    "end": "745360"
  },
  {
    "text": "maintained by the cloud build pack project and it's essentially the spec compliant thing that essentially runs a build pack through well the life cycle",
    "start": "745360",
    "end": "752079"
  },
  {
    "text": "of what a build pack should do and then it's going to sit on top of a build image and so this is going to be kind of that build environment that you're going",
    "start": "752079",
    "end": "758240"
  },
  {
    "text": "to run your build in and um there's also a reference to the run image because on",
    "start": "758240",
    "end": "763360"
  },
  {
    "text": "the kind of output of this side we're going to put all the layers that are constructed as part of that build pack on top of that run image and in our",
    "start": "763360",
    "end": "770160"
  },
  {
    "text": "example um that we're going to go through in the demo today we're using a buntu build image but our run image can",
    "start": "770160",
    "end": "776399"
  },
  {
    "text": "be a dist image right it doesn't have to be the same thing but it has to be a thing that you can actually build and",
    "start": "776399",
    "end": "781519"
  },
  {
    "text": "have actually execute in that environment right and so let's walk through what if a build through pack",
    "start": "781519",
    "end": "787680"
  },
  {
    "text": "would look like right and so uh in this example I'm just going to take a standard Node.js application uh we're",
    "start": "787680",
    "end": "794480"
  },
  {
    "text": "going to use Yarn in this case uh kind of at the top so the first thing that kicks off every single build pack build",
    "start": "794480",
    "end": "800000"
  },
  {
    "text": "is the detect phase so we need to figure out what build packs actually run right so you can include in your builder all these build packs but not all of them",
    "start": "800000",
    "end": "805920"
  },
  {
    "text": "have to run and in this case the first kind of grouping is that passes detection uh is going to be one that",
    "start": "805920",
    "end": "811680"
  },
  {
    "text": "actually gets executed in this case that's going to be we see that there's a package JSON there's yarn.lock you're",
    "start": "811680",
    "end": "816720"
  },
  {
    "text": "going to want to run kind of that NodeJS build pack and then a yarn build pack to kind of uh do that setup and",
    "start": "816720",
    "end": "822920"
  },
  {
    "text": "install and uh they get to create a build plan and so this allows build packs uh you know talking about",
    "start": "822920",
    "end": "828240"
  },
  {
    "text": "composition to actually communicate and talk to each other right and so they can have uh information around like what is",
    "start": "828240",
    "end": "834320"
  },
  {
    "text": "needed uh and things like that and those get used as part of the detect uh to create create this build pack plan uh",
    "start": "834320",
    "end": "840720"
  },
  {
    "text": "I'm going to skip through kind of the restore and analyze because that's not really used as part of the first build we're going to cut through to build",
    "start": "840720",
    "end": "846560"
  },
  {
    "text": "which is kind of the bulk and meat and potatoes of the build process right so this is where the build pack's going to actually like install your node runtime",
    "start": "846560",
    "end": "853920"
  },
  {
    "text": "run your yarn install kind of set up all the things to actually uh get a running application and they're going to get put",
    "start": "853920",
    "end": "860079"
  },
  {
    "text": "into specific directories uh one per layer um and then all that gets packaged",
    "start": "860079",
    "end": "865120"
  },
  {
    "text": "up in the export phase uh into an OCI image uh as well as any of the metadata specific to that layer uh so we can",
    "start": "865120",
    "end": "871760"
  },
  {
    "text": "decide if we actually need to upload that layer on a subsequent build and finally uh layers can be marked if they",
    "start": "871760",
    "end": "879279"
  },
  {
    "text": "should be cached or not so we can use them uh in the next build to decide uh you know I don't have to install my all",
    "start": "879279",
    "end": "884959"
  },
  {
    "text": "my dependencies again right um I can reuse layers um and I can even modify them uh between builds so this is kind",
    "start": "884959",
    "end": "891600"
  },
  {
    "text": "of what if we're to blow this out uh by the phases on the left or my left I guess your right and uh kind of the OCI",
    "start": "891600",
    "end": "898959"
  },
  {
    "text": "image and the cache image right so these are the things we're going to be uploading to the registry and you know I was mentioning how the layers are mapped",
    "start": "898959",
    "end": "905199"
  },
  {
    "text": "logically to your application and you can see in that OCI image right like we have a layer specifically to node modules and it's not just like some",
    "start": "905199",
    "end": "911519"
  },
  {
    "text": "random command that we ran in a docker file like the build pack author gets to really set like what goes in each",
    "start": "911519",
    "end": "917760"
  },
  {
    "text": "particular layer and if we go through a second build uh we're going to do detect um not going to talk much about it",
    "start": "917760",
    "end": "923839"
  },
  {
    "text": "because it's going to look the same as the first build uh so now we're going to actually get a restore so we're going to go through and restore all the cache",
    "start": "923839",
    "end": "930240"
  },
  {
    "text": "layers kind of that bottom image from before on what we need right so like everything we can use on the second",
    "start": "930240",
    "end": "936000"
  },
  {
    "text": "build if it's available we're going to restore it on disk so we can use it on this next build um and the next parts",
    "start": "936000",
    "end": "941199"
  },
  {
    "text": "we're going to run analyze so we need to know metadata about the specific layers to decide do I need to make any changes",
    "start": "941199",
    "end": "947199"
  },
  {
    "text": "do I need to actually upload it right like should I bust this cache um what can I do with that and so in this example we're going to be updating",
    "start": "947199",
    "end": "954000"
  },
  {
    "text": "updating the Node.js runtime and so in this particular case I need to know information about what the version of",
    "start": "954000",
    "end": "960000"
  },
  {
    "text": "Node is uh that was there before and what I'm doing with the new one right and so in this phase we're just pulling",
    "start": "960000",
    "end": "966240"
  },
  {
    "text": "that configuration from that previous build and then we're going to do the build we're going to go look at that thing install that new version of the",
    "start": "966240",
    "end": "972240"
  },
  {
    "text": "Node.js runtime uh it's a patch version so I don't need to update uh the node modules uh layer at all because it's API",
    "start": "972240",
    "end": "979040"
  },
  {
    "text": "compatible and so eventually we can export that after the build and we only",
    "start": "979040",
    "end": "984639"
  },
  {
    "text": "actually have to upload the specific layers that have changed so all the things that haven't changed like that new models directory your application",
    "start": "984639",
    "end": "990959"
  },
  {
    "text": "directory uh pieces that don't like we can keep those same export them update that uh all the metadata per the layers",
    "start": "990959",
    "end": "998240"
  },
  {
    "text": "and here we go right like we just up those update those specific things And uh finally we cache all that stuff",
    "start": "998240",
    "end": "1004480"
  },
  {
    "text": "together and uh for that next build so we can be equally as efficient and so in this case we're just uploading that one",
    "start": "1004480",
    "end": "1010320"
  },
  {
    "text": "node engine layer that we uploaded in the OCI image uh as uh to be there for",
    "start": "1010320",
    "end": "1017320"
  },
  {
    "text": "caching and now David's going to walk us through how we can apply kind of all",
    "start": "1017320",
    "end": "1022399"
  },
  {
    "text": "that stuff into Wom thanks so much Terrence and uh I got to say uh Heroku's",
    "start": "1022399",
    "end": "1029280"
  },
  {
    "text": "always been an inspiration for me as far as uh dev dev experience goes and I",
    "start": "1029280",
    "end": "1035199"
  },
  {
    "text": "think we have such a huge opportunity in the Wom space to offer a great dev",
    "start": "1035199",
    "end": "1042480"
  },
  {
    "text": "experience and we can start with the tools that we have available to us in the CNCF we have some great tools",
    "start": "1042480",
    "end": "1048799"
  },
  {
    "text": "available and we can help each other to be more successful so Mary is super excited about that",
    "start": "1048799",
    "end": "1057520"
  },
  {
    "text": "oneliner right there because we took all of that knowledge that Terrence just dropped on us and we applied it to web",
    "start": "1057520",
    "end": "1065000"
  },
  {
    "text": "assembly we went through and we built out those build packs there wom tools",
    "start": "1065000",
    "end": "1071360"
  },
  {
    "text": "goes and installs all those gnarly tools that you saw in that recipe uh WMT time",
    "start": "1071360",
    "end": "1077440"
  },
  {
    "text": "engine brings us that WMT time runtime that we need to run that uh web assembly component uh then we piggybacked on a",
    "start": "1077440",
    "end": "1085120"
  },
  {
    "text": "little bit of uh Heroku build pack love uh bringing in some Noode.js uh we also",
    "start": "1085120",
    "end": "1090640"
  },
  {
    "text": "tried that with Go we had a little bit of trouble so we uh backed that one out and just wrote a Go build pack which is",
    "start": "1090640",
    "end": "1097919"
  },
  {
    "text": "not any problem with uh the the Heroku build pack more just the nature of our project then we have the wack analyzer",
    "start": "1097919",
    "end": "1105520"
  },
  {
    "text": "and the wack analyzer uh goes through and takes a look at your project to understand if it's a monor repo filled",
    "start": "1105520",
    "end": "1112000"
  },
  {
    "text": "with multiple uh components uh the wom node.js uh understands how to uh deal",
    "start": "1112000",
    "end": "1120400"
  },
  {
    "text": "with a monor repo or monor repo with a node project a little bit further down the tree um and then same thing with",
    "start": "1120400",
    "end": "1127720"
  },
  {
    "text": "golang almost the same reason and then we have the whack composer the wack composer is kind of interesting so it",
    "start": "1127720",
    "end": "1133600"
  },
  {
    "text": "goes through the monor repo figures out like what projects are where and then informs later during the build phase",
    "start": "1133600",
    "end": "1139200"
  },
  {
    "text": "during uh during the build phase goes through and says all right cool I'm going to go find all the JS projects",
    "start": "1139200",
    "end": "1145280"
  },
  {
    "text": "build those collect the components from them do that same with go collect the components from them put them in a cache",
    "start": "1145280",
    "end": "1151440"
  },
  {
    "text": "layer and then we have the wom finalizer and it pull it's kind of the rug that",
    "start": "1151440",
    "end": "1156559"
  },
  {
    "text": "pulls all the room together right so uh the wom finalizer gives us uh a a clean",
    "start": "1156559",
    "end": "1162240"
  },
  {
    "text": "image at the again because all we actually need we don't need any source code normally what would happen in the",
    "start": "1162240",
    "end": "1169440"
  },
  {
    "text": "last step is that source code stays in the working directory we just take the web assembly components or maybe even",
    "start": "1169440",
    "end": "1176720"
  },
  {
    "text": "just that one component that we've composed together and that is what we keep in the final build so we end up",
    "start": "1176720",
    "end": "1183919"
  },
  {
    "text": "with a container image that contains WM time and your optimized final runtime",
    "start": "1183919",
    "end": "1191280"
  },
  {
    "text": "component and that leads us to Mary being very happy uh what does our component structure look like so uh this",
    "start": "1191280",
    "end": "1199360"
  },
  {
    "text": "is actually relatively simple right but I wanted to illustrate the ability to",
    "start": "1199360",
    "end": "1204799"
  },
  {
    "text": "use uh web assembly components to mimic what you would normally do across a",
    "start": "1204799",
    "end": "1210640"
  },
  {
    "text": "network boundary so normally in your web assembly uh your your micros service",
    "start": "1210640",
    "end": "1216039"
  },
  {
    "text": "infrastructure you're going to have a network boundary between your services right you're going to have your gRPC",
    "start": "1216039",
    "end": "1222320"
  },
  {
    "text": "endpoints you're going to have to you know write the code for those make sure they're insulated and they have to be able to talk together they have to be",
    "start": "1222320",
    "end": "1228159"
  },
  {
    "text": "able to address each other uh they have to be a load balance you got a lot of difficulties there so what if we could",
    "start": "1228159",
    "end": "1234480"
  },
  {
    "text": "take microservices smash them together so that's actually what we're doing here so we have a JavaScript front end that",
    "start": "1234480",
    "end": "1240720"
  },
  {
    "text": "expo exposes a few HTTP endpoints and then we have a Golang backend service",
    "start": "1240720",
    "end": "1246720"
  },
  {
    "text": "that talks to uh OpenAI and gives us some chat completion and then you know",
    "start": "1246720",
    "end": "1252159"
  },
  {
    "text": "does the really really stupid simple thing of adding numbers together all right so here are wit",
    "start": "1252159",
    "end": "1258080"
  },
  {
    "text": "worlds um you'll see example.service and example.server example.server is our",
    "start": "1258080",
    "end": "1263520"
  },
  {
    "text": "HTTP front end um the world exports a incoming HTTP handler but it imports",
    "start": "1263520",
    "end": "1272000"
  },
  {
    "text": "adder chat and the domain types that are described um on the other hand we have",
    "start": "1272000",
    "end": "1277600"
  },
  {
    "text": "our backend service example service and it includes uh WY CLI which is a",
    "start": "1277600",
    "end": "1284320"
  },
  {
    "text": "standardized interface for running CLI applications exports a CLI runtime uh or",
    "start": "1284320",
    "end": "1290080"
  },
  {
    "text": "CLI run interface which is a run command for the CLI uh those ignore those two",
    "start": "1290080",
    "end": "1295919"
  },
  {
    "text": "because they were actually really just used for debugging uh to allow me to take that component and rather than",
    "start": "1295919",
    "end": "1302080"
  },
  {
    "text": "actually compose it together with the JavaScript run it independently as a CLI application so I could test it",
    "start": "1302080",
    "end": "1308880"
  },
  {
    "text": "independently from the composition product uh finally you'll see the include of the domain service that means",
    "start": "1308880",
    "end": "1316400"
  },
  {
    "text": "I'm going to pull in all those things in that uh whit below and then whatever",
    "start": "1316400",
    "end": "1322320"
  },
  {
    "text": "that whip below defines for example world service which exports adder and",
    "start": "1322320",
    "end": "1327360"
  },
  {
    "text": "chat that means I'm going to then export those things i kind of inherit those um",
    "start": "1327360",
    "end": "1332720"
  },
  {
    "text": "and then I'm also going to import an outgoing HTTP handler because I'm going to interact with the open API library or",
    "start": "1332720",
    "end": "1338480"
  },
  {
    "text": "open API uh interface HTTP",
    "start": "1338480",
    "end": "1343520"
  },
  {
    "text": "interface all right so here is the demo",
    "start": "1344120",
    "end": "1350080"
  },
  {
    "text": "and uh this is actually an example of these build packs running on this mono",
    "start": "1350080",
    "end": "1356000"
  },
  {
    "text": "repo so",
    "start": "1356000",
    "end": "1361280"
  },
  {
    "text": "oh goodness gracious sorry oh oh gosh okay",
    "start": "1361280",
    "end": "1367760"
  },
  {
    "text": "here we go uh sorry technical difficulties folks",
    "start": "1367760",
    "end": "1372960"
  },
  {
    "text": "all right I think we're good now okay you'll see here's pack build wom compose the builder that we've built and the",
    "start": "1372960",
    "end": "1379600"
  },
  {
    "text": "path in the monor repo you'll get a link to the repo at the end you all can go and play with the code um and you'll see",
    "start": "1379600",
    "end": "1385520"
  },
  {
    "text": "that we kick this off and as Terrence was saying before it's going through the analyze and detecting",
    "start": "1385520",
    "end": "1391880"
  },
  {
    "text": "phases um I actually sped it up just a little bit um and this is actually the second build so it's it's run",
    "start": "1391880",
    "end": "1399880"
  },
  {
    "text": "restore you can see it's building uh the node running the WAC analyzer eventually",
    "start": "1399880",
    "end": "1405200"
  },
  {
    "text": "getting to the Go build",
    "start": "1405200",
    "end": "1409080"
  },
  {
    "text": "so while this was building we ran in ran into some technical difficulties that I am going to be delighted to share and",
    "start": "1415320",
    "end": "1422480"
  },
  {
    "text": "then also I'm going to expect a little bit out of you all uh because we're going to have some work to do as a",
    "start": "1422480",
    "end": "1427919"
  },
  {
    "text": "community and I'd love to get people excited about doing that oh my goodness we got an image okay fantastic now we're",
    "start": "1427919",
    "end": "1434159"
  },
  {
    "text": "going to run that we got our open API key in the environment and uh if I could type",
    "start": "1434159",
    "end": "1440400"
  },
  {
    "text": "faster and better it would be great but you didn't speed that part up no sadly",
    "start": "1440400",
    "end": "1445880"
  },
  {
    "text": "not um but it will be quick I promise uh so we're just going to say hello we have the hello endpoint silly simple um let's",
    "start": "1445880",
    "end": "1455679"
  },
  {
    "text": "add a couple numbers together uh you know honestly this these are like",
    "start": "1455679",
    "end": "1462720"
  },
  {
    "text": "the examples that you see in the web assembly community we need such better examples than just like add two numbers",
    "start": "1462720",
    "end": "1469520"
  },
  {
    "text": "together and you know uh give me Fibonacci uh so here we're actually",
    "start": "1469520",
    "end": "1476720"
  },
  {
    "text": "going to uh use the open API endpoint uh for chat completion and as you can see",
    "start": "1476720",
    "end": "1483120"
  },
  {
    "text": "that's the prompt it actually goes out to OpenAI makes a call translates that back through Go into JavaScript and you",
    "start": "1483120",
    "end": "1490000"
  },
  {
    "text": "get the capital of England is London um and there you can see the actual codebase um again that's out on GitHub",
    "start": "1490000",
    "end": "1496240"
  },
  {
    "text": "you're welcome to go take a look at it uh we have lots of work to do still on it",
    "start": "1496240",
    "end": "1501559"
  },
  {
    "text": "but we've come pretty far it's actually really",
    "start": "1501559",
    "end": "1506720"
  },
  {
    "text": "exciting oh no get back there we go",
    "start": "1508360",
    "end": "1513600"
  },
  {
    "text": "wait just forward yes Mary Berry is excited",
    "start": "1513600",
    "end": "1521640"
  },
  {
    "text": "too that was a little bit less That was a little antilimatic compared to Well you know slow typing that's how we got",
    "start": "1521640",
    "end": "1528480"
  },
  {
    "text": "there all right so what do we learn about this",
    "start": "1528480",
    "end": "1533520"
  },
  {
    "text": "uh we learned that you know build packs even though they're old and made",
    "start": "1533520",
    "end": "1539760"
  },
  {
    "text": "by you know wonderful people like this they are extremely valuable they are",
    "start": "1539760",
    "end": "1545679"
  },
  {
    "text": "viable and they can be applied to new ideas new technologies and they're",
    "start": "1545679",
    "end": "1551880"
  },
  {
    "text": "fantastic um what we did learn that wasn't so great",
    "start": "1551880",
    "end": "1557360"
  },
  {
    "text": "uh monor repos and structure for building web assembly uh components",
    "start": "1557360",
    "end": "1563120"
  },
  {
    "text": "based in uh you know multiple components in one repository possibly of different",
    "start": "1563120",
    "end": "1568480"
  },
  {
    "text": "languages we just don't have enough metadata to declaratively build these we need to be able to inform uh some higher",
    "start": "1568480",
    "end": "1576159"
  },
  {
    "text": "level builder all the data that we need to build that thing so for example the",
    "start": "1576159",
    "end": "1582320"
  },
  {
    "text": "the whack compose takes in names of the uh worlds that you want to build with uh",
    "start": "1582320",
    "end": "1588960"
  },
  {
    "text": "that that metadata just doesn't exist you have to put it in by hand there's no way to infer it based on the structure",
    "start": "1588960",
    "end": "1594400"
  },
  {
    "text": "of the repo however we could think about opinionated ways to structure repos to make this easy we don't have to have the",
    "start": "1594400",
    "end": "1601440"
  },
  {
    "text": "hard time um we output an OCI image well that includes the web",
    "start": "1601440",
    "end": "1607600"
  },
  {
    "text": "assembly runtime there are projects in the CNCF like runwazi uh which is a uh",
    "start": "1607600",
    "end": "1615600"
  },
  {
    "text": "way to embed provide a runtime class that containerd knows about in kubernetes that can run components so it",
    "start": "1615600",
    "end": "1623120"
  },
  {
    "text": "embeds wom time or another web assembly runtime so that you don't have to embed",
    "start": "1623120",
    "end": "1628240"
  },
  {
    "text": "the web assembly runtime into the image itself now those components that get",
    "start": "1628240",
    "end": "1633559"
  },
  {
    "text": "baked those don't come out as Web Assembly images or uh OCI images those",
    "start": "1633559",
    "end": "1639039"
  },
  {
    "text": "come out as OCI artifacts uh they aren't actually they're runnable artifacts",
    "start": "1639039",
    "end": "1645679"
  },
  {
    "text": "they're just not OCI images they they don't have all the stuff in there they're missing the runtime that's",
    "start": "1645679",
    "end": "1651279"
  },
  {
    "text": "actually really good because that runtime is about 50 megs that web assembly component included both the Go",
    "start": "1651279",
    "end": "1657039"
  },
  {
    "text": "runtime and the JavaScript runtime and was 14 megs now imagine if you built it",
    "start": "1657039",
    "end": "1663200"
  },
  {
    "text": "with like Rust or something that doesn't have to include the runtime you're talking about two megs two megs for your OCI artifact think about how how little",
    "start": "1663200",
    "end": "1670799"
  },
  {
    "text": "network bandwidth you have to use pulling those down you know that it's incredible it's it's a huge difference",
    "start": "1670799",
    "end": "1677080"
  },
  {
    "text": "um monor repos and build packs now the existing build packs that that I was",
    "start": "1677080",
    "end": "1683039"
  },
  {
    "text": "using and and there may be others that that do this better uh but mono repos were a little bit tough so maybe I",
    "start": "1683039",
    "end": "1690159"
  },
  {
    "text": "needed uh node well node has to see a package.json and a package.lock in the",
    "start": "1690159",
    "end": "1697760"
  },
  {
    "text": "the directory that it's run in and if it doesn't see that then it bails and it says \"Hey that's that's not a JavaScript",
    "start": "1697760",
    "end": "1703840"
  },
  {
    "text": "project.\" Well in fact I needed your tooling but it's somewhere further down the chain uh there might be things we",
    "start": "1703840",
    "end": "1710480"
  },
  {
    "text": "can do to help improve that experience uh maybe it's just different build packs maybe it's uh being able to rerun build",
    "start": "1710480",
    "end": "1716399"
  },
  {
    "text": "packs on slightly different ways um and then we have uh library support so we",
    "start": "1716399",
    "end": "1722159"
  },
  {
    "text": "have the opportunity to uh the OpenAI folks they were so excited about hearing",
    "start": "1722159",
    "end": "1727440"
  },
  {
    "text": "about using their library in WOM they wanted to go and implement that so they",
    "start": "1727440",
    "end": "1732799"
  },
  {
    "text": "put out a branch that worked for their library um building in Tiny Go which it didn't work in originally i had to write",
    "start": "1732799",
    "end": "1739840"
  },
  {
    "text": "all the code to go out and talk to HTTP okay that's fair well what if we wrapped",
    "start": "1739840",
    "end": "1744880"
  },
  {
    "text": "a component interface around that library it could be used by any language",
    "start": "1744880",
    "end": "1750159"
  },
  {
    "text": "anywhere that could run web assembly that means you don't have to write libraries in 10 different languages you",
    "start": "1750159",
    "end": "1756960"
  },
  {
    "text": "write it once you use it anywhere again that promise that we",
    "start": "1756960",
    "end": "1762679"
  },
  {
    "text": "heard okay so the future we have that opportunity to expand from just",
    "start": "1762679",
    "end": "1769360"
  },
  {
    "text": "JavaScript and Go and do it for all the languages and have a build pack experience for a oneliner that would be",
    "start": "1769360",
    "end": "1776399"
  },
  {
    "text": "absolutely awesome and I think it would help a lot of people oci artifacts we have an opportunity to take these uh",
    "start": "1776399",
    "end": "1783600"
  },
  {
    "text": "components put them in an OCI artifacts uh enhanced build packs to have that exporter and that's a just didn't have",
    "start": "1783600",
    "end": "1790399"
  },
  {
    "text": "the time for that yeah it's coming yeah um enhancing the model repo story for",
    "start": "1790399",
    "end": "1795840"
  },
  {
    "text": "both Wom and Built Backs and then uh let's imagine what it would be like if",
    "start": "1795840",
    "end": "1801840"
  },
  {
    "text": "we started to build that library support it starts with one and when you see that one and you",
    "start": "1801840",
    "end": "1808640"
  },
  {
    "text": "use that one it calls you to make a second it will start like wildfire it",
    "start": "1808640",
    "end": "1814880"
  },
  {
    "text": "will go around it will make folks so much more productive and you don't have to write",
    "start": "1814880",
    "end": "1821520"
  },
  {
    "text": "the library 10 times folks or x number of times whatever number of times your customers use those languages it can be",
    "start": "1821520",
    "end": "1828320"
  },
  {
    "text": "better and we can do it together as a community that's the point of why we're",
    "start": "1828320",
    "end": "1834639"
  },
  {
    "text": "here that's all we had thanks everyone uh you can check out the repo uh right",
    "start": "1836440",
    "end": "1841840"
  },
  {
    "text": "here that we've been working in for the last month or two and uh yeah I don't know if we have time for questions but",
    "start": "1841840",
    "end": "1847760"
  },
  {
    "text": "uh we'll be around sorry we were flying through those as fast as we could uh thank you all for being such a great",
    "start": "1847760",
    "end": "1853440"
  },
  {
    "text": "audience you all are awesome",
    "start": "1853440",
    "end": "1858039"
  }
]