[
  {
    "text": "um so Raj and I U met each other at the last cubec con and um we were both talking about the sort of Technologies",
    "start": "80",
    "end": "6359"
  },
  {
    "text": "we were interested in and we'd been working on um and we decided we a really good idea to sort of work out how we",
    "start": "6359",
    "end": "12599"
  },
  {
    "text": "could bring these two projects together so in the space of the last several months I guess we've been educating each other on these respective cncf projects",
    "start": "12599",
    "end": "20160"
  },
  {
    "text": "and um here we are today so thanks to the cncf thanks for coming uh hopefully we can sort of Enlighten you uh as to",
    "start": "20160",
    "end": "26080"
  },
  {
    "text": "what these projects are all about and potentially how you can combine them uh just brief about me um that's me yep um",
    "start": "26080",
    "end": "33160"
  },
  {
    "text": "I'm Matt Bates I'm a Founder at a company called cofide it's very early stage startup uh we're focused on work",
    "start": "33160",
    "end": "38960"
  },
  {
    "text": "Cloud identity uh so multicloud and hybrid Cloud uh and I've previously been",
    "start": "38960",
    "end": "44399"
  },
  {
    "text": "involved uh with a company called Jets sa and we worked on a project called SE manager so identity is something that's",
    "start": "44399",
    "end": "49680"
  },
  {
    "text": "very dis my heart and we've been doing for been doing for quite some time zaj hi uh can you hear",
    "start": "49680",
    "end": "56719"
  },
  {
    "text": "me can people hear me okay I might just hi I'm surj I work for Microsoft and uh",
    "start": "56719",
    "end": "63920"
  },
  {
    "text": "I'm working on the confidential containers uh Upstream project thanks we're going to remain",
    "start": "63920",
    "end": "70600"
  },
  {
    "text": "close to the mic so you can all hear us okay um okay so just to um introduce both of the projects we're going to look",
    "start": "70600",
    "end": "76640"
  },
  {
    "text": "at both in turn so hopefully this is a good opportunity to learn a bit more about the projects just a first a show",
    "start": "76640",
    "end": "82360"
  },
  {
    "text": "of hands there's bright lights so I might not see you all but um if you can just give us a show of hands for anyone",
    "start": "82360",
    "end": "87920"
  },
  {
    "text": "that's heard of spiffy and spire ah great okay that's that's good um and",
    "start": "87920",
    "end": "94360"
  },
  {
    "text": "in the second show of hands for those of you that have used oh are using but more to the point spiy Inspire in",
    "start": "94360",
    "end": "101399"
  },
  {
    "text": "production okay fewer hands um would love to spey at some point learn more",
    "start": "101399",
    "end": "107040"
  },
  {
    "text": "about it but for those of you who don't know this is great you're hopefully in the right place and for the purpose in the next 10 minutes uh we're going to",
    "start": "107040",
    "end": "112240"
  },
  {
    "text": "let you know a bit more about uh what what spiffy is so spiffy is Spire they are a CCF graduated project they've been",
    "start": "112240",
    "end": "119240"
  },
  {
    "text": "around a long time uh obviously a number of you are aware of the project um probably for various reasons but spiffy",
    "start": "119240",
    "end": "125560"
  },
  {
    "text": "itself uh is secure production identity framework for everyone so the purpose of this is It's a framework it's a set of",
    "start": "125560",
    "end": "132080"
  },
  {
    "text": "apis it's a set of interfaces all open uh for basically provisioning uh and",
    "start": "132080",
    "end": "137640"
  },
  {
    "text": "validating identity for software systems so if you're wanting to provide a consistent way of being able to identify",
    "start": "137640",
    "end": "144560"
  },
  {
    "text": "software this is a really good set of Standards um and these have been adopted uh throughout the sort of",
    "start": "144560",
    "end": "150360"
  },
  {
    "text": "CF ecosystem in various different projects um we've got various different aspects of this and I'll go through each",
    "start": "150360",
    "end": "155720"
  },
  {
    "text": "in turn just very briefly um so the spiffy IDE is a way of basically be able to identify um you know the service how",
    "start": "155720",
    "end": "162519"
  },
  {
    "text": "do you actually represent the service um in an identity so there's a way that in the Spy project that that um that that's",
    "start": "162519",
    "end": "169159"
  },
  {
    "text": "proposed um and that's actually used by various different projects so for instance if you look under the hood um",
    "start": "169159",
    "end": "174360"
  },
  {
    "text": "in IO uh you will see that you ISO uses uh the spiffy ID the s viid uh the",
    "start": "174360",
    "end": "180680"
  },
  {
    "text": "spiffy uh verifiable ID um is actually a sort of an identity document this is",
    "start": "180680",
    "end": "185920"
  },
  {
    "text": "like how you would actually represent this cryptographically uh and in spiffy and inspirers will see um you can",
    "start": "185920",
    "end": "192120"
  },
  {
    "text": "represent this as a like x509 certificate um or you can use a JWT token but this is really about like",
    "start": "192120",
    "end": "198319"
  },
  {
    "text": "actually putting it into a cryptographic form and then providing it um to a workload the way that you obtain the",
    "start": "198319",
    "end": "204840"
  },
  {
    "text": "identity um is via the workload API this is a way that workload",
    "start": "204840",
    "end": "210280"
  },
  {
    "text": "your applications your services um can obtain identity and interestingly it",
    "start": "210280",
    "end": "215760"
  },
  {
    "text": "does so in a way that's sort of authentication list it does not have to authenticate so the workload API is a",
    "start": "215760",
    "end": "222439"
  },
  {
    "text": "node local API we'll see this uh soon in the architecture but the way of doing this is like through a process of",
    "start": "222439",
    "end": "228519"
  },
  {
    "text": "attestation doesn't have to have some token provided beforehand it can actually provide some evidence about",
    "start": "228519",
    "end": "234280"
  },
  {
    "text": "itself um so the workload API runs on the agent on the Node we'll see this in a little while um with You' also got a",
    "start": "234280",
    "end": "240239"
  },
  {
    "text": "spiffy trust bundle this is a way about how you would represent the uh the public Keys effectively in the pki",
    "start": "240239",
    "end": "247120"
  },
  {
    "text": "hierarchy so when you want to basically be able to validate trust um that's the way that the the trust model gets",
    "start": "247120",
    "end": "252760"
  },
  {
    "text": "represented and we've also got this thing called spify Federation so if you wish to be able to Federate different",
    "start": "252760",
    "end": "258199"
  },
  {
    "text": "environments different trust domains together um there's a way for that uh trust to be the roots to be exchanged",
    "start": "258199",
    "end": "265400"
  },
  {
    "text": "and Trust to be established so really what we're going to look at now is there spire so Spire is the reference",
    "start": "265400",
    "end": "271280"
  },
  {
    "text": "implementation so spiffy the framework Spire the reference architecture and",
    "start": "271280",
    "end": "276840"
  },
  {
    "text": "Spire is used by a number of very large ngers um that contribute to the to the community so for instance Uber Tik Tok",
    "start": "276840",
    "end": "285000"
  },
  {
    "text": "just just a name a couple um use Spire in production and obviously some of you here in the audience to you too um so",
    "start": "285000",
    "end": "292240"
  },
  {
    "text": "really just kind of distilling this down and keeping things rather simple for the purposes of today's talk um effectively",
    "start": "292240",
    "end": "297720"
  },
  {
    "text": "we've got you know two components or three components I guess if you will and we've got the Spy server um this is",
    "start": "297720",
    "end": "302880"
  },
  {
    "text": "responsible basically for managing um and uh valid actually providing identity",
    "start": "302880",
    "end": "308840"
  },
  {
    "text": "uh pretty much and it's backed by a data store um so we need to basically register uh things up front so it's your",
    "start": "308840",
    "end": "316400"
  },
  {
    "text": "responsibility or perhaps through some automation to register your workload with Spire server and you do so using",
    "start": "316400",
    "end": "322759"
  },
  {
    "text": "sort of a set of registration entries so effectively you know attributes that describe um your workload and where",
    "start": "322759",
    "end": "329400"
  },
  {
    "text": "where you expect the workflow to be and how you expect the workflow to present itself so that all gets stored in in a",
    "start": "329400",
    "end": "335240"
  },
  {
    "text": "in a in a data store pretty much we' then got these agents that work on each of the nodes and the nodes can be you",
    "start": "335240",
    "end": "342840"
  },
  {
    "text": "know they can be running in kubernetes they can also be running outside of it and I think the the the everyone aspect",
    "start": "342840",
    "end": "348600"
  },
  {
    "text": "of this is important this spiffy is all about providing identity to all manner of different software systems whether",
    "start": "348600",
    "end": "353960"
  },
  {
    "text": "it's in Cloud um or on promise so this is your way of providing a very consistent way of doing this so so yeah",
    "start": "353960",
    "end": "360560"
  },
  {
    "text": "let's imagine this could also run you in B met as well as of course in a in a cluster now this agent is basically uh",
    "start": "360560",
    "end": "368360"
  },
  {
    "text": "responsible for running the this workload API U so implements that workload API specification and work",
    "start": "368360",
    "end": "375599"
  },
  {
    "text": "clades themselves talk to the agent this being a node local API and rather than",
    "start": "375599",
    "end": "380880"
  },
  {
    "text": "actually having to present some kind of token um they this is sort of an unauthenticated API it runs locally on",
    "start": "380880",
    "end": "388039"
  },
  {
    "text": "the host itself it actually provides uh kind of discovers information about the",
    "start": "388039",
    "end": "394840"
  },
  {
    "text": "process if you're running on Linux as an example what will happen here um is you know the agent will basically introspect",
    "start": "394840",
    "end": "401880"
  },
  {
    "text": "the the Linux kernel it'll discover information about the process um it'll find attributes and information it maybe",
    "start": "401880",
    "end": "408400"
  },
  {
    "text": "consult for instance the container runtime might speak to the cuer uh that's also running on that node uh and",
    "start": "408400",
    "end": "414400"
  },
  {
    "text": "it'll set of find a set of information that it will use and it will attest and that all of those attributes get",
    "start": "414400",
    "end": "419800"
  },
  {
    "text": "provided you know up through the API to the server and ultimately that gets compared to what was pre-registered the",
    "start": "419800",
    "end": "426599"
  },
  {
    "text": "idea being is you know you're validating whether this workload is valid and should be where it is um and whether it",
    "start": "426599",
    "end": "432720"
  },
  {
    "text": "should be granted identity that's pretty much the flow here the important thing is the agent is doing it for you it's",
    "start": "432720",
    "end": "438199"
  },
  {
    "text": "pretty transparent um and the workload itself does not have to do that whole dance around obtaining identity rotating",
    "start": "438199",
    "end": "444919"
  },
  {
    "text": "it um and and all of all of that kind of difficulty so that's pretty much how how",
    "start": "444919",
    "end": "450039"
  },
  {
    "text": "these things work it's probably also worth noting there is also a process of node attestation as well so it's not",
    "start": "450039",
    "end": "455560"
  },
  {
    "text": "just about the workload itself for testing itself but it's also about the node and so you may wish um to uh you",
    "start": "455560",
    "end": "462720"
  },
  {
    "text": "know validate for instance it's running on a valid yeah a cloud instance as an example maybe perhaps you might want to",
    "start": "462720",
    "end": "467960"
  },
  {
    "text": "go down to the level of the hardware maybe consult things like the TPM and there's a variety of different plugins",
    "start": "467960",
    "end": "473159"
  },
  {
    "text": "in the Spire project for enabling you to do this so you can just plug in uh to to the uh to the ecosystem uh pretty much",
    "start": "473159",
    "end": "480120"
  },
  {
    "text": "and use all of those different plugins so that's kind of really how things effectively look at at a high level um",
    "start": "480120",
    "end": "485800"
  },
  {
    "text": "in Spire why would you do this you're probably asking you're probably thinking okay you know I've set up all of this",
    "start": "485800",
    "end": "491560"
  },
  {
    "text": "infrastructure effectively what this enables you to provide um is a set of like cryptographic documents x509",
    "start": "491560",
    "end": "499400"
  },
  {
    "text": "certificates that you can then use in your services to establish something like a m TLS uh connection uh and",
    "start": "499400",
    "end": "505879"
  },
  {
    "text": "obviously this could be within a cluster this could be outside a cluster this could be yeah pretty heterogeneous",
    "start": "505879",
    "end": "511720"
  },
  {
    "text": "environments pretty much and so in this example here you've got an example you can actually see the esid and how the",
    "start": "511720",
    "end": "517880"
  },
  {
    "text": "spiffy ID uh is represented um so it encodes information about the service it",
    "start": "517880",
    "end": "523599"
  },
  {
    "text": "includes things like the Pod name the name space and again if you've used something likeo or some of the other",
    "start": "523599",
    "end": "528920"
  },
  {
    "text": "service measures you'll probably recognize um that sort of encoding of detail um in the spify ID um so",
    "start": "528920",
    "end": "536800"
  },
  {
    "text": "obviously we can sort use these certificates and this example actually show Envoy so if you wanted you might not want to do it yourself um you can if",
    "start": "536800",
    "end": "544040"
  },
  {
    "text": "you wish consult and use the workload API directly there a set of language bindings to do that um there's a set of",
    "start": "544040",
    "end": "550600"
  },
  {
    "text": "helper projects to make it easier where you can actually be provided it as a set of files that you can consume in your",
    "start": "550600",
    "end": "556920"
  },
  {
    "text": "application there's a CSI spiffy a CSI driver that you can use um or you can",
    "start": "556920",
    "end": "562240"
  },
  {
    "text": "use the envoy integration here as well so you can have the support of STDs and Envoy will do the magic of course of",
    "start": "562240",
    "end": "568680"
  },
  {
    "text": "providing you the mutual TS connection using those um those uh stiff CS so",
    "start": "568680",
    "end": "574320"
  },
  {
    "text": "really what we want to focus on is is the security of this so obviously you know going back to the architecture here",
    "start": "574320",
    "end": "579560"
  },
  {
    "text": "you can see we've got spy server it's responsible for managing identities it's responsible for issuing them uh and so",
    "start": "579560",
    "end": "586440"
  },
  {
    "text": "as part of that of course it has sensitive signing Keys um ultimately this is all backed by pki uh and so",
    "start": "586440",
    "end": "592800"
  },
  {
    "text": "that's SP server uh is clearly very sensitive and you you have to do everything you can can to protect it so",
    "start": "592800",
    "end": "599399"
  },
  {
    "text": "referring here to the solving the bottom Turtle book which I'd highly recommend you read it's it's a great read on",
    "start": "599399",
    "end": "606160"
  },
  {
    "text": "everything Biffy buyer and the motivations for the project and the various ways that you can use it um so",
    "start": "606160",
    "end": "612760"
  },
  {
    "text": "we're quoting here and there's some links that you can follow but really it's very important obviously to run something like spy server um in an",
    "start": "612760",
    "end": "619279"
  },
  {
    "text": "isolated kind of way that you don't really want this particularly to run um in a sort of multi-tenanted cluster",
    "start": "619279",
    "end": "625320"
  },
  {
    "text": "effectively in the threat model workloads are unrusted um and so therefore you do not want to have",
    "start": "625320",
    "end": "632079"
  },
  {
    "text": "workloads running in the same place as the Spire server which hopefully makes a lot of sense pretty obvious um so yeah",
    "start": "632079",
    "end": "638320"
  },
  {
    "text": "first really good practice is to make sure that you run spy server on an isolated node and that could well be you",
    "start": "638320",
    "end": "644120"
  },
  {
    "text": "know a separate node pool or indeed you might even want to run it on a server instance that runs outside the cluster",
    "start": "644120",
    "end": "649800"
  },
  {
    "text": "so that's certainly number one and you obviously there's some quotes here from uh the book can recommend you take a",
    "start": "649800",
    "end": "655560"
  },
  {
    "text": "sort of further read um so I said managing an issue identities um really",
    "start": "655560",
    "end": "660800"
  },
  {
    "text": "sensitive component but and obviously in the Spy server we've got really sensitive keys and all of these Des",
    "start": "660800",
    "end": "667600"
  },
  {
    "text": "signing operations take place in the Spire server so what we wanted to consider um when we were turning at the",
    "start": "667600",
    "end": "673880"
  },
  {
    "text": "last cucon is okay we've got this sensitive component how about we employ",
    "start": "673880",
    "end": "679040"
  },
  {
    "text": "um some further protection you we kind of think about things with defense and depth in mind and so effectively if you",
    "start": "679040",
    "end": "685639"
  },
  {
    "text": "think of the Spy Ser what it's doing um uh the fact is it you by default anyway has unencrypted memory so all of these",
    "start": "685639",
    "end": "691839"
  },
  {
    "text": "signing operations the keys themselves for the issuing authority um are in plain Tech so you know if someone had",
    "start": "691839",
    "end": "697639"
  },
  {
    "text": "access a bad actor had access to the node in which the Spy server is running they could strictly speaking get access",
    "start": "697639",
    "end": "703760"
  },
  {
    "text": "to that uh and um yeah really at that point of course it's game over you've compromised the entire trust domain and",
    "start": "703760",
    "end": "710040"
  },
  {
    "text": "they can start of minting certificates and impersonating Services um in that trust domain so what we wanted to",
    "start": "710040",
    "end": "716519"
  },
  {
    "text": "consider is like this this this attack Vector so that point I think it's probably a good time atage talk about",
    "start": "716519",
    "end": "722680"
  },
  {
    "text": "confidential compete all right uh thanks Matt for the",
    "start": "722680",
    "end": "731000"
  },
  {
    "text": "introduction of spire and Spire server and uh how like it's a single point of failure uh depending on how you how you",
    "start": "731000",
    "end": "738839"
  },
  {
    "text": "configure it so uh let's talk about what confidential compute is but we'll we'll take a sidebar on what the current state",
    "start": "738839",
    "end": "746320"
  },
  {
    "text": "of data protection today is right so when uh data stored on diss it's uh",
    "start": "746320",
    "end": "751560"
  },
  {
    "text": "encrypted it's when it's on network it's encrypted you have I mean solutions for",
    "start": "751560",
    "end": "756800"
  },
  {
    "text": "both of these problems but when but when you are processing it uh in in memory",
    "start": "756800",
    "end": "762560"
  },
  {
    "text": "the data when it's brought in memory it's it stays there un encrypted right so that's what confidential computer",
    "start": "762560",
    "end": "768839"
  },
  {
    "text": "tries to solve this this third aspect this third leg of data protection that's",
    "start": "768839",
    "end": "774000"
  },
  {
    "text": "what confidential containers or confidential compute brings in so it's like a Spire uh our spi's logo the stool",
    "start": "774000",
    "end": "782160"
  },
  {
    "text": "so you get like a third third leg there so what is confidential compute you it's",
    "start": "782160",
    "end": "788000"
  },
  {
    "text": "a processor technology backed by AMD uh Intel L uh it's it's it's it's within",
    "start": "788000",
    "end": "794560"
  },
  {
    "text": "the processor it creates a secure enclave and uh this Enclave could be a VM or a process the within the",
    "start": "794560",
    "end": "803199"
  },
  {
    "text": "Enclave or that enclaves memory is protected as an encrypted processor knows how to encrypt and decrypt that",
    "start": "803199",
    "end": "811000"
  },
  {
    "text": "memory and finally like it's that's the whole thing like memory protection So within the Enclave that application",
    "start": "811000",
    "end": "817360"
  },
  {
    "text": "doesn't care about it's all transparent within the Enclave it's it's all plantex",
    "start": "817360",
    "end": "822399"
  },
  {
    "text": "like regular application uh would work so why confidential compute right",
    "start": "822399",
    "end": "828399"
  },
  {
    "text": "so there are lot of like uh Rising security concerns around uh you know containerized applications then uh you",
    "start": "828399",
    "end": "835839"
  },
  {
    "text": "know you want comprehensive data protection like we talked about the third thing about memory protection and",
    "start": "835839",
    "end": "841839"
  },
  {
    "text": "adherence to privacy regulations like especially here uh in Europe where uh",
    "start": "841839",
    "end": "847079"
  },
  {
    "text": "the data protection uh laws are pretty stringent you would want your uh data in use to be uh protected or",
    "start": "847079",
    "end": "855160"
  },
  {
    "text": "encrypted so uh let's start with like talking about like the usual trusted computer based pH so in traditionally",
    "start": "855160",
    "end": "862000"
  },
  {
    "text": "you are trusting the hardware the buyas firmware the uh the host operating system the hypervisor and the guest",
    "start": "862000",
    "end": "869759"
  },
  {
    "text": "but with confidential compute you only trust the uh underlying hardware and everything in between you can stop",
    "start": "869759",
    "end": "876519"
  },
  {
    "text": "trusting so that's that's what confidential compute is giving you it's it's reducing your trusted compute base",
    "start": "876519",
    "end": "883160"
  },
  {
    "text": "so that way you have smaller attack surface and that's uh that's that's uh",
    "start": "883160",
    "end": "888880"
  },
  {
    "text": "that yeah that's what you get so what are the target audience right so first is like uh anybody",
    "start": "888880",
    "end": "895920"
  },
  {
    "text": "dealing with the pii data Healthcare businesses uh or like Financial",
    "start": "895920",
    "end": "901680"
  },
  {
    "text": "businesses governments Etc and uh yeah so anything that needs so basically you",
    "start": "901680",
    "end": "907759"
  },
  {
    "text": "can think of anybody who is running on untrusted infrastructure and they need higher security you don't know who is",
    "start": "907759",
    "end": "914839"
  },
  {
    "text": "who has access to the underlying host even if I mean even if somebody promises they won't do any illegal stuff but you",
    "start": "914839",
    "end": "921920"
  },
  {
    "text": "don't know these organizations are big right so uh yeah any uh any anybody with",
    "start": "921920",
    "end": "927160"
  },
  {
    "text": "sensitive data for that matter so uh let's see what confidential containers is right it's a it's a open",
    "start": "927160",
    "end": "934519"
  },
  {
    "text": "source uh cncf sandbox project uh the whole idea of confidential containers is",
    "start": "934519",
    "end": "940160"
  },
  {
    "text": "that this technology enabled by uh chip makers uh we want to bring it to",
    "start": "940160",
    "end": "946319"
  },
  {
    "text": "kubernetes like every P that you could that you want to process sensitive data",
    "start": "946319",
    "end": "951360"
  },
  {
    "text": "in should be backed by encrypted memory so let's take a look like how it",
    "start": "951360",
    "end": "957680"
  },
  {
    "text": "how it works in general so I think uh most of you are familiar with this uh",
    "start": "957680",
    "end": "962800"
  },
  {
    "text": "kubernetes uh diagram block diagram there is control plane on the left and then there are a bunch of nodes each",
    "start": "962800",
    "end": "969079"
  },
  {
    "text": "node has a cuet as a agent which is responsible for bringing up your uh",
    "start": "969079",
    "end": "974199"
  },
  {
    "text": "workloads so we'll we'll zoom into the node here so the typical interaction uh",
    "start": "974199",
    "end": "980199"
  },
  {
    "text": "that happens is cuet gets a request it passes to coner D and then it uses run",
    "start": "980199",
    "end": "985720"
  },
  {
    "text": "SE to start a pod this is this is the usual but with confidential containers",
    "start": "985720",
    "end": "991519"
  },
  {
    "text": "we use a runtime called as Kata who who has heard of Kata containers here oh a",
    "start": "991519",
    "end": "998399"
  },
  {
    "text": "lot of hats okay so a TW liner for Kata is that instead of using runy it uh",
    "start": "998399",
    "end": "1004680"
  },
  {
    "text": "kataa uses lightwe VMS to start start up ports so this is this is the same",
    "start": "1004680",
    "end": "1010399"
  },
  {
    "text": "interaction with Kata there's cubet containerd but instead of run it's cutter end time which knows how to talk",
    "start": "1010399",
    "end": "1016560"
  },
  {
    "text": "to the underlying virtualization technology it brings up the VM there is Cara agent",
    "start": "1016560",
    "end": "1022120"
  },
  {
    "text": "it's a PID one that's what is interacting with the external car and time and the Pod comes up and then",
    "start": "1022120",
    "end": "1028360"
  },
  {
    "text": "that's that's how you have it there but with Kata confidential uh containers uh",
    "start": "1028360",
    "end": "1033918"
  },
  {
    "text": "what you need is a hardware that can bring up which is which is capable of running confidential compute uh uh tees",
    "start": "1033919",
    "end": "1042640"
  },
  {
    "text": "so of okay oops hold on I think I messed",
    "start": "1042640",
    "end": "1051520"
  },
  {
    "text": "up okay anyways never mind so uh with t like what you get uh here is uh there is",
    "start": "1059280",
    "end": "1064960"
  },
  {
    "text": "there's cubet uh the same container D and then oh okay it's",
    "start": "1064960",
    "end": "1072519"
  },
  {
    "text": "switched okay",
    "start": "1073280",
    "end": "1080280"
  },
  {
    "text": "so what I'll do is I'll move this here and",
    "start": "1080280",
    "end": "1087880"
  },
  {
    "text": "yeah H okay that's what happened",
    "start": "1092240",
    "end": "1099120"
  },
  {
    "text": "okay okay we are learning here all right so uh it's it's cut a cc uh you have",
    "start": "1099120",
    "end": "1106320"
  },
  {
    "text": "this Hardware that can okay yeah it's it's working now so it's",
    "start": "1106320",
    "end": "1113120"
  },
  {
    "text": "it's cubet it's cutter and time uh same thing KVM virtual machine comes up uh C agent exists but there is another uh set",
    "start": "1113120",
    "end": "1121360"
  },
  {
    "text": "of components that you need which does attestation so remote attestation is a is a big part of uh using confidential",
    "start": "1121360",
    "end": "1129440"
  },
  {
    "text": "computer or confidential containers because you want to ensure that you are running on a confidential Hardware",
    "start": "1129440",
    "end": "1136039"
  },
  {
    "text": "because underlying Hardware provider can you know lie about it they can be like yeah this is a confidential VM but how",
    "start": "1136039",
    "end": "1142880"
  },
  {
    "text": "how are how can you be sure so that's where this attestation process comes in these components that are part of the",
    "start": "1142880",
    "end": "1149840"
  },
  {
    "text": "Kata VM they talk to the hardware create an Evidence send it to a external party",
    "start": "1149840",
    "end": "1156880"
  },
  {
    "text": "this part is or here we call it ring party it's it's it's your infrastructure",
    "start": "1156880",
    "end": "1162120"
  },
  {
    "text": "where you can do verification now this verification involves like uh you you",
    "start": "1162120",
    "end": "1167400"
  },
  {
    "text": "you see this evidence that you got is it really signed by AMD or Intel's Hardware",
    "start": "1167400",
    "end": "1173760"
  },
  {
    "text": "so once once that attestation passes it I mean that's the basic thing you do but you can also see like if it's the if the",
    "start": "1173760",
    "end": "1180640"
  },
  {
    "text": "kernel is correct the unitard is fine the kernel parameters are so you're ensuring that inside that",
    "start": "1180640",
    "end": "1186559"
  },
  {
    "text": "VM everything that you see is what you expected and if anything is anything is",
    "start": "1186559",
    "end": "1192840"
  },
  {
    "text": "different you just don't pass the attestation right now what happens after attestation is is is sucess sucessful is",
    "start": "1192840",
    "end": "1199200"
  },
  {
    "text": "up to you you can just be a acknowledgement or a negative acknowledgement or you can release a key",
    "start": "1199200",
    "end": "1205480"
  },
  {
    "text": "or a policy or whatever it is in this case what we're doing is we're releasing a key now this key is actually used to",
    "start": "1205480",
    "end": "1212320"
  },
  {
    "text": "encrypt an container image so we download this encrypted container image decrypted and a part is started so now",
    "start": "1212320",
    "end": "1220159"
  },
  {
    "text": "you can use this uh encrypted container image if you want to protect your IP if the or the application but if the",
    "start": "1220159",
    "end": "1226720"
  },
  {
    "text": "application is not so sensitive you can releasee something like uh a secret to",
    "start": "1226720",
    "end": "1233799"
  },
  {
    "text": "download something from other cloud or other sources or whatever it could be right so moving on so the Koko threat",
    "start": "1233799",
    "end": "1241000"
  },
  {
    "text": "model here is that it's uh it it promises two things confidentiality and integrity confidentiality because",
    "start": "1241000",
    "end": "1247880"
  },
  {
    "text": "anything outside the te cannot see what's inside and integrity because you have done this remote attestation you're",
    "start": "1247880",
    "end": "1253720"
  },
  {
    "text": "ensuring everything that you expected is is is as is",
    "start": "1253720",
    "end": "1259400"
  },
  {
    "text": "um and the other thing that we assume for from the confidential containers point of view is that anything outside",
    "start": "1259400",
    "end": "1266000"
  },
  {
    "text": "that pod even the worker node is untrusted the kubernetes control plane is untrusted everything outside that",
    "start": "1266000",
    "end": "1273799"
  },
  {
    "text": "thing inside the cluster is untrusted that's that's uh that's what we uh go",
    "start": "1273799",
    "end": "1279120"
  },
  {
    "text": "with so there is this basic demo here here I show like how you can start a pod",
    "start": "1279120",
    "end": "1285120"
  },
  {
    "text": "read read its memory and basically anything any secr that you have gotten you could see uh I won't go through this",
    "start": "1285120",
    "end": "1293000"
  },
  {
    "text": "demo here because uh yeah we don't have enough time but I have another demo that I'll show at the end but yeah go check",
    "start": "1293000",
    "end": "1299200"
  },
  {
    "text": "out this demo when you when you have time so uh yeah so let's let's talk",
    "start": "1299200",
    "end": "1304960"
  },
  {
    "text": "about how uh confidential continuous and Spire uh comes in I'll hand over to Matt",
    "start": "1304960",
    "end": "1310440"
  },
  {
    "text": "here thanks that was great to hear about the the Coco project so what we thought about is like how potentially you could",
    "start": "1310440",
    "end": "1316360"
  },
  {
    "text": "take these two projects and um yeah take take them best of both as as it were um and",
    "start": "1316360",
    "end": "1322000"
  },
  {
    "text": "so really with with the SP spy server in mind we're going to focus on primarily spy server um at this stage and there's",
    "start": "1322000",
    "end": "1329039"
  },
  {
    "text": "some scope for also potentially putting the Enclave um the agent s Into The Enclave how we're going to focus on the",
    "start": "1329039",
    "end": "1334400"
  },
  {
    "text": "server um is there is real interest in wanting to protect of course signing keys and there's a recent quote here",
    "start": "1334400",
    "end": "1340520"
  },
  {
    "text": "from somebody in Microsoft and this is you post breach and uh they're thinking about how to you obviously secure things",
    "start": "1340520",
    "end": "1346200"
  },
  {
    "text": "going forward um they've sort of noted that they want to be be a to put identity signing keys so obviously very sensitive um into both hsms and use",
    "start": "1346200",
    "end": "1353640"
  },
  {
    "text": "confidential Computing now it's sort of more you more sort of widely available um so with that kind of in mind um how",
    "start": "1353640",
    "end": "1359559"
  },
  {
    "text": "could Spire benefit from this so what we thought is okay yeah taking that defense in depth approach um and Coco providing",
    "start": "1359559",
    "end": "1366880"
  },
  {
    "text": "the means now to encrypt memory um could we take the two and sort of protect uh the data in use so as that signing",
    "start": "1366880",
    "end": "1374400"
  },
  {
    "text": "happens you can we protect against anyone hostile that may want to see that operation and obviously exrate the keys",
    "start": "1374400",
    "end": "1381919"
  },
  {
    "text": "um and so this this is really kind of what we sort of set up to do and I think we now do have a demo which we're going",
    "start": "1381919",
    "end": "1387840"
  },
  {
    "text": "to run it's not live but it's pre-recorded so we're going to take a look at SP server running in",
    "start": "1387840",
    "end": "1394360"
  },
  {
    "text": "Coco okay okay so this is the demo it's a it's a single node kuus",
    "start": "1395760",
    "end": "1402000"
  },
  {
    "text": "cluster um we uh we can see in the confidential containers uh this Nam space that the",
    "start": "1402000",
    "end": "1410240"
  },
  {
    "text": "confidential uh containers operator has installed a bunch of things and once the",
    "start": "1410240",
    "end": "1415360"
  },
  {
    "text": "operator uh is up and running it creates bunch of runtime classes that's the",
    "start": "1415360",
    "end": "1421120"
  },
  {
    "text": "that's the interface for other applications to use confidential containers uh so there's kataa K S&P uh",
    "start": "1421120",
    "end": "1428760"
  },
  {
    "text": "all of that now what we'll do is uh we go to the worker node and uh we can verify",
    "start": "1428760",
    "end": "1436480"
  },
  {
    "text": "this is really uh CVS NP enabled uh machine so this SV SNP is amd's uh amd's",
    "start": "1436480",
    "end": "1442840"
  },
  {
    "text": "confidential compute technology so uh we let's install Spire",
    "start": "1442840",
    "end": "1448520"
  },
  {
    "text": "with with Spire crds first and then the Spire",
    "start": "1448520",
    "end": "1453600"
  },
  {
    "text": "server this this is like without any modification like regular uh Spire uh thing although I mean have made some",
    "start": "1453760",
    "end": "1461080"
  },
  {
    "text": "modifications here like for persistence what I have done is uh chosen to use like empty D with uh memory as a back",
    "start": "1461080",
    "end": "1468159"
  },
  {
    "text": "end and like not you relying on the default and then uh there is data store",
    "start": "1468159",
    "end": "1474360"
  },
  {
    "text": "there is scl data store behind the scene and yeah the key manager is also uh in",
    "start": "1474360",
    "end": "1481159"
  },
  {
    "text": "memory so yeah let's uh let's see if the ports are up it's it's it's up and",
    "start": "1481159",
    "end": "1487200"
  },
  {
    "text": "running uh let's see there is there's no runtime class or anything information this is regular run C based uh thing we",
    "start": "1487200",
    "end": "1493720"
  },
  {
    "text": "can see from the uh from the logs that it's it's it's up and running",
    "start": "1493720",
    "end": "1499440"
  },
  {
    "text": "uh it has issued a bunch of",
    "start": "1499440",
    "end": "1503120"
  },
  {
    "text": "swis now yeah let's uh also register the",
    "start": "1505640",
    "end": "1512399"
  },
  {
    "text": "agent and also the client now the the this is from the",
    "start": "1512399",
    "end": "1519840"
  },
  {
    "text": "document like the regular quick start uh thing right if if you are aware of the Spire this this has nothing uh different",
    "start": "1519840",
    "end": "1526559"
  },
  {
    "text": "it's just the the the socket is uh socket is changed and we'll try to talk to the the local agent the client is",
    "start": "1526559",
    "end": "1534679"
  },
  {
    "text": "deployed and yeah is the same socket path and",
    "start": "1534679",
    "end": "1541000"
  },
  {
    "text": "everything and yeah uh s is issued now the this is regular thing that you would",
    "start": "1542799",
    "end": "1549480"
  },
  {
    "text": "you would show any anybody when you're showing Spire but let's look at this SP server here right like on the worker",
    "start": "1549480",
    "end": "1555360"
  },
  {
    "text": "node let's get the P ID uh what we'll do is we'll do a core dump of",
    "start": "1555360",
    "end": "1560919"
  },
  {
    "text": "this uh P ID and once we have this core file we can look at uh look at its ask",
    "start": "1560919",
    "end": "1567520"
  },
  {
    "text": "representation so we can search for stuff like x509 search",
    "start": "1567520",
    "end": "1573399"
  },
  {
    "text": "and and like uh private key for example and stuff like that so basically",
    "start": "1573399",
    "end": "1580440"
  },
  {
    "text": "this is just to show that like on a regular uh machine you can uh you can really see uh what's in memory and uh",
    "start": "1580440",
    "end": "1588320"
  },
  {
    "text": "yeah it's it's it's not that hard if somebody has access to the host yes uh they can do whatever now the same thing",
    "start": "1588320",
    "end": "1594720"
  },
  {
    "text": "we'll do again but this time around we'll use uh a runtime uh like the the",
    "start": "1594720",
    "end": "1600120"
  },
  {
    "text": "runtime class called kak S&P so the diff from the values file",
    "start": "1600120",
    "end": "1606919"
  },
  {
    "text": "like I can show you here uh the interesting part is this runtime",
    "start": "1606919",
    "end": "1612760"
  },
  {
    "text": "class that's the only thing that's that's changed now you can see the Spire",
    "start": "1612760",
    "end": "1619559"
  },
  {
    "text": "service deployed and this time it has runtime class name as as the value and it's yeah looking at the logs",
    "start": "1619559",
    "end": "1628080"
  },
  {
    "text": "it has started issuing SVS and everything so just ensuring it's working uh we do the uh registration of agent",
    "start": "1628080",
    "end": "1635200"
  },
  {
    "text": "and uh client same uh client file like nothing has changed",
    "start": "1635200",
    "end": "1642039"
  },
  {
    "text": "here and the client is deployed and we can see that the SVS are",
    "start": "1642039",
    "end": "1649000"
  },
  {
    "text": "issued now again uh this time around we go and find where the Spire server is but we are not looking for Spire server",
    "start": "1649000",
    "end": "1655360"
  },
  {
    "text": "we're looking for qmu because it's running in a VM uh we get the P ID for this uh",
    "start": "1655360",
    "end": "1664080"
  },
  {
    "text": "VM store it in the EnV War uh do code dump look for this uh look at this core",
    "start": "1666679",
    "end": "1675039"
  },
  {
    "text": "file uh there's no x509 there is no private key and and it's it's not like",
    "start": "1675039",
    "end": "1680559"
  },
  {
    "text": "the file is empty uh it has bunch of stuff it's just that it's not uh it's not",
    "start": "1680559",
    "end": "1686320"
  },
  {
    "text": "relevant so yeah uh that was the demo now moving on so like you you would",
    "start": "1686320",
    "end": "1693039"
  },
  {
    "text": "argue right like there are limitations to this demo like the DB uh coexist with the server or even the server is running",
    "start": "1693039",
    "end": "1698760"
  },
  {
    "text": "on kubernetes so that's the point of this whole talk right you can still you can run Spire uh with on on kubernetes but with",
    "start": "1698760",
    "end": "1707399"
  },
  {
    "text": "encrypted memory and like the DB coexist with the server so you could use highly available",
    "start": "1707399",
    "end": "1712760"
  },
  {
    "text": "database but then the database has to be uh like you could use a hosted service for this database but then is that",
    "start": "1712760",
    "end": "1719279"
  },
  {
    "text": "hosted service running on a confidential compute Hardware because depending on what kind of sensitivity that database",
    "start": "1719279",
    "end": "1725440"
  },
  {
    "text": "entries has uh is is also something to consider uh the other argument is that Keys could be stored in a KMS uh we can",
    "start": "1725440",
    "end": "1732679"
  },
  {
    "text": "use KMS and not use anything in memory but then what about the is credentials",
    "start": "1732679",
    "end": "1739080"
  },
  {
    "text": "like where are they coming from if somebody again can do the same thing do memory dump you don't even have to do do",
    "start": "1739080",
    "end": "1744919"
  },
  {
    "text": "memory dump if you have access to the host you can see at those secrets for those KMS um and then like is the KMS",
    "start": "1744919",
    "end": "1752360"
  },
  {
    "text": "backed by any hardware like HSM or confidential compute Hardware again like",
    "start": "1752360",
    "end": "1758519"
  },
  {
    "text": "you know what about the K kmss security so yeah uh there are this bunch of uh",
    "start": "1758519",
    "end": "1765159"
  },
  {
    "text": "things to uh think about and uh this this talk primarily focuses on the",
    "start": "1765159",
    "end": "1770399"
  },
  {
    "text": "server uh what about the agents right uh like do we need security for the agent but then we like don't assign so much",
    "start": "1770399",
    "end": "1777760"
  },
  {
    "text": "importance to agents security because the the blast radius is smaller so yeah",
    "start": "1777760",
    "end": "1784440"
  },
  {
    "text": "uh to to to further uh take this discussion forward I would uh invite",
    "start": "1784440",
    "end": "1789840"
  },
  {
    "text": "Matt thanks yeah it's great to see that demo um so a couple of um further",
    "start": "1789840",
    "end": "1795679"
  },
  {
    "text": "improvements I guess we realize that this um gave us the opportunity to do a whole lot more once we started exploring",
    "start": "1795679",
    "end": "1802039"
  },
  {
    "text": "the opportunity together so these are just some of the improvements we think um we could propose in the respective projects um so number one is really",
    "start": "1802039",
    "end": "1808679"
  },
  {
    "text": "adding plugin support So Inspire has a great um plug-in system um for a variety of things for instance for the data",
    "start": "1808679",
    "end": "1814880"
  },
  {
    "text": "store for the key managers and so one thing to add here would be potentially plugin support for something like Azure",
    "start": "1814880",
    "end": "1820600"
  },
  {
    "text": "SQL and and other uh vendor you of um you know provided databases that have",
    "start": "1820600",
    "end": "1826559"
  },
  {
    "text": "confidential Hardware um so would kind of get that give that guarantee um that the data store that backs buyer is also",
    "start": "1826559",
    "end": "1833120"
  },
  {
    "text": "protected as well because you know compromise of that could lead to workloads being compromised as well or",
    "start": "1833120",
    "end": "1839440"
  },
  {
    "text": "at least the trust domain being compromised um with Coco the uh confli could also come from a KBS so that's",
    "start": "1839440",
    "end": "1845320"
  },
  {
    "text": "that that key broker service if you remember from the from the diagram that sh I showed um so yeah obviously we can",
    "start": "1845320",
    "end": "1851120"
  },
  {
    "text": "make sure that we're also deriving it from a trusted uh source and that's gone through a process of attestation um",
    "start": "1851120",
    "end": "1857279"
  },
  {
    "text": "there is in the project is worth noting and we probably ought to include a link here we will add it to the slides in fact um there is actually u a bunch of",
    "start": "1857279",
    "end": "1864440"
  },
  {
    "text": "folks that have been working on a no DET tester uh for scvn SNP so that will effectively a test that the Spire agent",
    "start": "1864440",
    "end": "1871639"
  },
  {
    "text": "is running on confidential Compu Hardware um so that's something that is already in the project it's I think",
    "start": "1871639",
    "end": "1877519"
  },
  {
    "text": "experimental um so yeah we can provide a link to to that just so um you can find",
    "start": "1877519",
    "end": "1882760"
  },
  {
    "text": "it later um there is also scope we realized for a work clone tester here as well so you might remember in the talk I",
    "start": "1882760",
    "end": "1888360"
  },
  {
    "text": "was talking about workload attestation um you know introspecting the Linux kernel finding out information about the",
    "start": "1888360",
    "end": "1894799"
  },
  {
    "text": "process um you could also in this particular case you build a workload a tester uh and obviously there's a",
    "start": "1894799",
    "end": "1900840"
  },
  {
    "text": "there's a plugin system here so you could go and build a plugin that's external to Spire itself um that could do the process of like verifying that",
    "start": "1900840",
    "end": "1907440"
  },
  {
    "text": "the workload is running um within Coco so this this would be a particularly I think good component to go to go build I",
    "start": "1907440",
    "end": "1913960"
  },
  {
    "text": "think this is probably something we might go do um if anyone's interested let us know um and there's also remember if you",
    "start": "1913960",
    "end": "1919760"
  },
  {
    "text": "remember from the Spy architecture there's the server and the Agents um the agents themselves um also um have keys",
    "start": "1919760",
    "end": "1926080"
  },
  {
    "text": "they have keys for the workloads U the blast radius is more limited uh intentionally that's that's in the you",
    "start": "1926080",
    "end": "1931639"
  },
  {
    "text": "know the Spy threat model um so you it only manages uh the keys for the workloads that are running on the Node",
    "start": "1931639",
    "end": "1937960"
  },
  {
    "text": "itself um but yeah there's the opportunity I believe we believe to sort of think about running the agents within",
    "start": "1937960",
    "end": "1943240"
  },
  {
    "text": "the Enclave as well um so this would be probably a good opportunity to explore",
    "start": "1943240",
    "end": "1948399"
  },
  {
    "text": "this uh somewhat further as well so yeah this this is right great hopefully a good opportunity to go ahead and sort of see how these projects can further uh",
    "start": "1948399",
    "end": "1955200"
  },
  {
    "text": "help uh each other so I think we're probably running",
    "start": "1955200",
    "end": "1960279"
  },
  {
    "text": "long time so just to kind of um you some takeaways for you and we're obiously happy to take some questions um so",
    "start": "1960279",
    "end": "1966279"
  },
  {
    "text": "spiffy and Spire we learned about spiffy is the framework for providing identity uh to software systems Spire is the",
    "start": "1966279",
    "end": "1972559"
  },
  {
    "text": "reference implementation we learned a little bit about the Spire architecture um really the high level um the Spire",
    "start": "1972559",
    "end": "1979360"
  },
  {
    "text": "server the agents and the workloads and the need to protect the Spire server um",
    "start": "1979360",
    "end": "1984480"
  },
  {
    "text": "and yeah obviously that that the blast radius is you significant uh so it's important to protect it run it on its",
    "start": "1984480",
    "end": "1990720"
  },
  {
    "text": "own dedicated hardware and we've seen that you we can use coco in order to protect you know memory when in use um",
    "start": "1990720",
    "end": "1997320"
  },
  {
    "text": "so the signing keys and the signing key operations can be protected uh pretty much um there is an opportunity for S",
    "start": "1997320",
    "end": "2003200"
  },
  {
    "text": "some extra plugins um so yeah as I said data store plugins key store plug",
    "start": "2003200",
    "end": "2008960"
  },
  {
    "text": "um that use confidential Computing that's something we'd like to explore um and as I said there's further",
    "start": "2008960",
    "end": "2014720"
  },
  {
    "text": "opportunities for like more attestation you something like a per workload agent",
    "start": "2014720",
    "end": "2021039"
  },
  {
    "text": "is something that we believe um could be in scope um as well so these were two",
    "start": "2021039",
    "end": "2026799"
  },
  {
    "text": "open source projects cncf Projects please please get involved um this are the links here to the respective projects and some documentation we'll",
    "start": "2026799",
    "end": "2034200"
  },
  {
    "text": "make the slides available they've got lots of reference links um so yeah please find the slides and please let us",
    "start": "2034200",
    "end": "2041720"
  },
  {
    "text": "know your feedback so I think we may or may not have some time for questions but thank you very much for being",
    "start": "2041720",
    "end": "2047700"
  },
  {
    "text": "[Applause]",
    "start": "2047700",
    "end": "2055510"
  },
  {
    "text": "here feel free to ask or we're here um if you want to come and ask us more",
    "start": "2057399",
    "end": "2063839"
  },
  {
    "text": "directly yeah you can you can come to the mic and ask questions yeah",
    "start": "2064599",
    "end": "2069720"
  },
  {
    "text": "ha um we use enclaves as part of the managed offering um so we use Nitro",
    "start": "2070399",
    "end": "2075878"
  },
  {
    "text": "enclaves but I think the idea is the same right just make sure what you're running is what you intend to be running how do you deal with the problem of",
    "start": "2075879",
    "end": "2081919"
  },
  {
    "text": "making sure what you put in The Enclave is what you intended to put in the first place so the security of getting to the",
    "start": "2081919",
    "end": "2088320"
  },
  {
    "text": "point where you have an enclave at all so uh Nitro enclaves work I think a",
    "start": "2088320",
    "end": "2093720"
  },
  {
    "text": "bit differently where they ensure in software that the the admin doesn't have",
    "start": "2093720",
    "end": "2099960"
  },
  {
    "text": "access to the workload or VMS with uh with confidential compute",
    "start": "2099960",
    "end": "2105040"
  },
  {
    "text": "it's guaranteed with the with the by the CPU or Hardware so what happens is in",
    "start": "2105040",
    "end": "2111440"
  },
  {
    "text": "the attestation process the evidence that is generated it is signed by uh it",
    "start": "2111440",
    "end": "2118280"
  },
  {
    "text": "is signed by the underlying Hardware right like uh the CPU Pro uh AMD or Intel and then when you verify it on the",
    "start": "2118280",
    "end": "2125079"
  },
  {
    "text": "remote attestation on the other side you see like the uh the hashes for those",
    "start": "2125079",
    "end": "2130280"
  },
  {
    "text": "applications are those exactly what you wanted and if anything is changed you you see in the attestation report that",
    "start": "2130280",
    "end": "2136680"
  },
  {
    "text": "it has changed does that answer your question I was worried more about the",
    "start": "2136680",
    "end": "2142599"
  },
  {
    "text": "point where you get to for example you put Spire in The Enclave how do you know",
    "start": "2142599",
    "end": "2148800"
  },
  {
    "text": "Spire is what you put in The Enclave so you need to know the has in advance right yeah yeah",
    "start": "2148800",
    "end": "2155920"
  },
  {
    "text": "okay also one disclaimer I I suggested as SQL",
    "start": "2156640",
    "end": "2163800"
  },
  {
    "text": "because not because I work for Microsoft but because it's the only SQL Server out there I found which runs on a",
    "start": "2163800",
    "end": "2170319"
  },
  {
    "text": "confidential compute Hardware so we need more offerings hosted offerings if people wanted that are running in",
    "start": "2170319",
    "end": "2176760"
  },
  {
    "text": "confidential compute Hardware no questions I think we are out",
    "start": "2176760",
    "end": "2183359"
  },
  {
    "text": "of time anyway cool uh find us around here and uh thank you for attending have a good",
    "start": "2183359",
    "end": "2190640"
  },
  {
    "text": "one",
    "start": "2191000",
    "end": "2194000"
  }
]