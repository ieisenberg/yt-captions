[
  {
    "start": "0",
    "end": "74000"
  },
  {
    "text": "my name is nipah and i am founder of",
    "start": "799",
    "end": "2800"
  },
  {
    "text": "cloud",
    "start": "2800",
    "end": "4160"
  },
  {
    "text": "before starting cloud",
    "start": "4160",
    "end": "6160"
  },
  {
    "text": "around seven years back",
    "start": "6160",
    "end": "8800"
  },
  {
    "text": "i have worked over a decade in different",
    "start": "8800",
    "end": "10719"
  },
  {
    "text": "companies",
    "start": "10719",
    "end": "12320"
  },
  {
    "text": "but primarily with red hat though",
    "start": "12320",
    "end": "15839"
  },
  {
    "text": "i have experience as system",
    "start": "15839",
    "end": "17520"
  },
  {
    "text": "administration support engineering file",
    "start": "17520",
    "end": "19680"
  },
  {
    "text": "system kernel and perfect engineering",
    "start": "19680",
    "end": "24000"
  },
  {
    "text": "in 2015 i wrote a book on docker and",
    "start": "24560",
    "end": "27439"
  },
  {
    "text": "then published a course on edx for the",
    "start": "27439",
    "end": "30240"
  },
  {
    "text": "cncf on kubernetes which has been taken",
    "start": "30240",
    "end": "33440"
  },
  {
    "text": "by more than 200 thousands",
    "start": "33440",
    "end": "36559"
  },
  {
    "text": "users across the globe",
    "start": "36559",
    "end": "39120"
  },
  {
    "text": "at cloud",
    "start": "39120",
    "end": "40320"
  },
  {
    "text": "we provide trainings in the space of",
    "start": "40320",
    "end": "43040"
  },
  {
    "text": "cloud native and have many clients",
    "start": "43040",
    "end": "46640"
  },
  {
    "text": "now let's get back to our topic",
    "start": "46640",
    "end": "49360"
  },
  {
    "text": "eppf at a heart of it is the way to",
    "start": "49360",
    "end": "53440"
  },
  {
    "text": "program the kernel dynamically and get",
    "start": "53440",
    "end": "56239"
  },
  {
    "text": "insights from it",
    "start": "56239",
    "end": "58879"
  },
  {
    "text": "it is changing the game in the system",
    "start": "58879",
    "end": "61120"
  },
  {
    "text": "side the way",
    "start": "61120",
    "end": "62800"
  },
  {
    "text": "javascript has enabled us to bring",
    "start": "62800",
    "end": "65360"
  },
  {
    "text": "everything on the browser",
    "start": "65360",
    "end": "67200"
  },
  {
    "text": "and because of that many interesting use",
    "start": "67200",
    "end": "69600"
  },
  {
    "text": "cases are coming up for this",
    "start": "69600",
    "end": "73840"
  },
  {
    "start": "74000",
    "end": "162000"
  },
  {
    "text": "even the windows kernel is going to",
    "start": "74640",
    "end": "77280"
  },
  {
    "text": "support the ipvf in some time",
    "start": "77280",
    "end": "81119"
  },
  {
    "text": "let us now look at brief history about",
    "start": "81119",
    "end": "83520"
  },
  {
    "text": "ebbf",
    "start": "83520",
    "end": "85200"
  },
  {
    "text": "so before ebbf there was bpf which is",
    "start": "85200",
    "end": "89280"
  },
  {
    "text": "berkeley packet filter",
    "start": "89280",
    "end": "93040"
  },
  {
    "text": "as the name suggests it is used to",
    "start": "93040",
    "end": "95920"
  },
  {
    "text": "filter the network packets",
    "start": "95920",
    "end": "98159"
  },
  {
    "text": "in any os we have two primarily",
    "start": "98159",
    "end": "101680"
  },
  {
    "text": "things one is user space and the kernel",
    "start": "101680",
    "end": "104159"
  },
  {
    "text": "space",
    "start": "104159",
    "end": "105200"
  },
  {
    "text": "in the user space we have programs like",
    "start": "105200",
    "end": "107360"
  },
  {
    "text": "browser editors and so on while on the",
    "start": "107360",
    "end": "110240"
  },
  {
    "text": "kernel side we have programs using which",
    "start": "110240",
    "end": "112880"
  },
  {
    "text": "we can interact with the devices",
    "start": "112880",
    "end": "116159"
  },
  {
    "text": "like network card disk and so on",
    "start": "116159",
    "end": "119280"
  },
  {
    "text": "before bpf",
    "start": "119280",
    "end": "120960"
  },
  {
    "text": "where the network packets used to come",
    "start": "120960",
    "end": "122960"
  },
  {
    "text": "to our system we used to send them to",
    "start": "122960",
    "end": "125680"
  },
  {
    "text": "the user space for filtering which is",
    "start": "125680",
    "end": "128080"
  },
  {
    "text": "very expensive affair",
    "start": "128080",
    "end": "130479"
  },
  {
    "text": "but with bpf",
    "start": "130479",
    "end": "133280"
  },
  {
    "text": "we have enabled that functionality in",
    "start": "133280",
    "end": "135680"
  },
  {
    "text": "the kernel",
    "start": "135680",
    "end": "136800"
  },
  {
    "text": "by creating a virtual machine inside the",
    "start": "136800",
    "end": "139840"
  },
  {
    "text": "kernel itself",
    "start": "139840",
    "end": "141520"
  },
  {
    "text": "so when the packets come at the network",
    "start": "141520",
    "end": "144640"
  },
  {
    "text": "layer we could easily filter them out",
    "start": "144640",
    "end": "147760"
  },
  {
    "text": "and that made things very faster",
    "start": "147760",
    "end": "150480"
  },
  {
    "text": "and i believe you would have used the",
    "start": "150480",
    "end": "152800"
  },
  {
    "text": "software like tcp dump which use",
    "start": "152800",
    "end": "155599"
  },
  {
    "text": "this bpf",
    "start": "155599",
    "end": "157519"
  },
  {
    "text": "and",
    "start": "157519",
    "end": "158640"
  },
  {
    "text": "helped us debug the network issues",
    "start": "158640",
    "end": "163120"
  },
  {
    "start": "162000",
    "end": "249000"
  },
  {
    "text": "let us now look at epbf which is",
    "start": "163120",
    "end": "165680"
  },
  {
    "text": "extended berkeley packet filter",
    "start": "165680",
    "end": "169120"
  },
  {
    "text": "but it is not meant for just the network",
    "start": "169120",
    "end": "172480"
  },
  {
    "text": "anymore",
    "start": "172480",
    "end": "174879"
  },
  {
    "text": "though the name is a bit confusing but",
    "start": "174959",
    "end": "176959"
  },
  {
    "text": "that's how it is",
    "start": "176959",
    "end": "178560"
  },
  {
    "text": "with epbf",
    "start": "178560",
    "end": "180560"
  },
  {
    "text": "we have implemented journal event",
    "start": "180560",
    "end": "182720"
  },
  {
    "text": "processing and filtering mechanism",
    "start": "182720",
    "end": "186480"
  },
  {
    "text": "we have a global data store as well",
    "start": "186480",
    "end": "189519"
  },
  {
    "text": "which we call them as maps",
    "start": "189519",
    "end": "191599"
  },
  {
    "text": "to store the state between the events",
    "start": "191599",
    "end": "194239"
  },
  {
    "text": "and share it with the user space as well",
    "start": "194239",
    "end": "198920"
  },
  {
    "text": "the core of eppbf is lies",
    "start": "200080",
    "end": "202800"
  },
  {
    "text": "in",
    "start": "202800",
    "end": "204879"
  },
  {
    "text": "enhancing or extending the capabilities",
    "start": "204879",
    "end": "207040"
  },
  {
    "text": "of the linux kernel",
    "start": "207040",
    "end": "208640"
  },
  {
    "text": "without",
    "start": "208640",
    "end": "209840"
  },
  {
    "text": "changing the kernel code or loading a",
    "start": "209840",
    "end": "212799"
  },
  {
    "text": "module",
    "start": "212799",
    "end": "215200"
  },
  {
    "text": "and this makes things very similar so if",
    "start": "215200",
    "end": "218159"
  },
  {
    "text": "you have been part of the linux kernel",
    "start": "218159",
    "end": "220480"
  },
  {
    "text": "community you know that to bring up a",
    "start": "220480",
    "end": "223680"
  },
  {
    "text": "linux",
    "start": "223680",
    "end": "224799"
  },
  {
    "text": "feature in the kernel may take up two",
    "start": "224799",
    "end": "227599"
  },
  {
    "text": "years",
    "start": "227599",
    "end": "228560"
  },
  {
    "text": "which is just too much and by the time",
    "start": "228560",
    "end": "231599"
  },
  {
    "text": "the future has arrived we may have moved",
    "start": "231599",
    "end": "233760"
  },
  {
    "text": "on as well but by dynamically",
    "start": "233760",
    "end": "236159"
  },
  {
    "text": "programming the kernel with epbf it",
    "start": "236159",
    "end": "238480"
  },
  {
    "text": "changes",
    "start": "238480",
    "end": "239519"
  },
  {
    "text": "the game",
    "start": "239519",
    "end": "240959"
  },
  {
    "text": "significantly and we can now come up",
    "start": "240959",
    "end": "244239"
  },
  {
    "text": "with",
    "start": "244239",
    "end": "245360"
  },
  {
    "text": "n number of use cases for that and we",
    "start": "245360",
    "end": "247280"
  },
  {
    "text": "will look them in few minutes",
    "start": "247280",
    "end": "249200"
  },
  {
    "start": "249000",
    "end": "362000"
  },
  {
    "text": "we can attach eppbf to different",
    "start": "249200",
    "end": "251599"
  },
  {
    "text": "programs",
    "start": "251599",
    "end": "252799"
  },
  {
    "text": "like any linux kernel",
    "start": "252799",
    "end": "255519"
  },
  {
    "text": "uh anything in the network stack any",
    "start": "255519",
    "end": "257919"
  },
  {
    "text": "user space program and so on",
    "start": "257919",
    "end": "260239"
  },
  {
    "text": "so we can attach this program to any of",
    "start": "260239",
    "end": "262800"
  },
  {
    "text": "these events and whenever those events",
    "start": "262800",
    "end": "265120"
  },
  {
    "text": "happen we can perform something there",
    "start": "265120",
    "end": "268160"
  },
  {
    "text": "are many use cases for epbf now",
    "start": "268160",
    "end": "271600"
  },
  {
    "text": "now if you look at",
    "start": "271600",
    "end": "274080"
  },
  {
    "text": "in the cloud world we'll talk about",
    "start": "274080",
    "end": "276560"
  },
  {
    "text": "kubernetes which runs multiple",
    "start": "276560",
    "end": "278800"
  },
  {
    "text": "containers and these containers in most",
    "start": "278800",
    "end": "282000"
  },
  {
    "text": "cases are just programs",
    "start": "282000",
    "end": "284479"
  },
  {
    "text": "and if we can attach the epbf at the",
    "start": "284479",
    "end": "288080"
  },
  {
    "text": "color level we can actually look at",
    "start": "288080",
    "end": "290400"
  },
  {
    "text": "what's happening",
    "start": "290400",
    "end": "291759"
  },
  {
    "text": "in every container and so on",
    "start": "291759",
    "end": "294000"
  },
  {
    "text": "so rather than putting something at per",
    "start": "294000",
    "end": "296720"
  },
  {
    "text": "container level like a side car",
    "start": "296720",
    "end": "298880"
  },
  {
    "text": "we would filter them out or we can",
    "start": "298880",
    "end": "301120"
  },
  {
    "text": "inspect them at the kernel level",
    "start": "301120",
    "end": "303280"
  },
  {
    "text": "so things would become very simple",
    "start": "303280",
    "end": "306080"
  },
  {
    "text": "now there's one more use case in the",
    "start": "306080",
    "end": "307919"
  },
  {
    "text": "networking space as well",
    "start": "307919",
    "end": "310560"
  },
  {
    "text": "so if you look at in the kubernetes",
    "start": "310560",
    "end": "312400"
  },
  {
    "text": "ecosystem",
    "start": "312400",
    "end": "314000"
  },
  {
    "text": "we",
    "start": "314000",
    "end": "314720"
  },
  {
    "text": "communicate to the parts",
    "start": "314720",
    "end": "317520"
  },
  {
    "text": "throughout the commodities cluster",
    "start": "317520",
    "end": "320400"
  },
  {
    "text": "and generally we do it with the help of",
    "start": "320400",
    "end": "322720"
  },
  {
    "text": "q proxy so with q proxy we create these",
    "start": "322720",
    "end": "325919"
  },
  {
    "text": "firewall rules and that help us",
    "start": "325919",
    "end": "327520"
  },
  {
    "text": "communicate with different parts",
    "start": "327520",
    "end": "330479"
  },
  {
    "text": "if we have lot of parts then that can",
    "start": "330479",
    "end": "333919"
  },
  {
    "text": "be significantly slow",
    "start": "333919",
    "end": "336000"
  },
  {
    "text": "because of the way ip tables would work",
    "start": "336000",
    "end": "339039"
  },
  {
    "text": "but again if we have lot of parts",
    "start": "339039",
    "end": "341600"
  },
  {
    "text": "but on a similar case if we move to the",
    "start": "341600",
    "end": "344400"
  },
  {
    "text": "eppbf based",
    "start": "344400",
    "end": "346080"
  },
  {
    "text": "uh cni plugins like cilia",
    "start": "346080",
    "end": "348720"
  },
  {
    "text": "things are very fast because we are not",
    "start": "348720",
    "end": "352080"
  },
  {
    "text": "going anywhere in the ip tables route we",
    "start": "352080",
    "end": "354720"
  },
  {
    "text": "just",
    "start": "354720",
    "end": "355600"
  },
  {
    "text": "go from the color layer itself and that",
    "start": "355600",
    "end": "357919"
  },
  {
    "text": "makes things very fast",
    "start": "357919",
    "end": "360960"
  },
  {
    "text": "ebpf has been well tested for some of",
    "start": "362560",
    "end": "365520"
  },
  {
    "text": "the good balancing",
    "start": "365520",
    "end": "367919"
  },
  {
    "text": "projects like cat run from facebook",
    "start": "367919",
    "end": "371039"
  },
  {
    "text": "unimog from cloudflare",
    "start": "371039",
    "end": "373120"
  },
  {
    "text": "and there is an active word going on to",
    "start": "373120",
    "end": "374880"
  },
  {
    "text": "implement service mess",
    "start": "374880",
    "end": "376639"
  },
  {
    "text": "with eppdf",
    "start": "376639",
    "end": "378400"
  },
  {
    "text": "so",
    "start": "378400",
    "end": "379280"
  },
  {
    "text": "good times ahead",
    "start": "379280",
    "end": "382240"
  },
  {
    "text": "as with epbf we can look at everything",
    "start": "383759",
    "end": "386240"
  },
  {
    "text": "what is happening",
    "start": "386240",
    "end": "387759"
  },
  {
    "text": "inside our system there are very good",
    "start": "387759",
    "end": "390319"
  },
  {
    "text": "use cases for both security and",
    "start": "390319",
    "end": "392560"
  },
  {
    "text": "observability as well",
    "start": "392560",
    "end": "395120"
  },
  {
    "text": "in the security terms we can",
    "start": "395120",
    "end": "397520"
  },
  {
    "text": "have",
    "start": "397520",
    "end": "398319"
  },
  {
    "text": "the tooling built around networking and",
    "start": "398319",
    "end": "401280"
  },
  {
    "text": "the runtime security as well",
    "start": "401280",
    "end": "403680"
  },
  {
    "text": "fall code tracy and",
    "start": "403680",
    "end": "405919"
  },
  {
    "text": "the policies are some of the example of",
    "start": "405919",
    "end": "408800"
  },
  {
    "text": "security",
    "start": "408800",
    "end": "409919"
  },
  {
    "text": "uh",
    "start": "409919",
    "end": "410880"
  },
  {
    "text": "things there similarly for observability",
    "start": "410880",
    "end": "414080"
  },
  {
    "text": "uh we have different tools like pixi and",
    "start": "414080",
    "end": "416560"
  },
  {
    "text": "so on using which we can observe in the",
    "start": "416560",
    "end": "419759"
  },
  {
    "text": "system what's happening through and",
    "start": "419759",
    "end": "421360"
  },
  {
    "text": "throughout",
    "start": "421360",
    "end": "423840"
  },
  {
    "text": "before we jump into the architecture of",
    "start": "424240",
    "end": "426240"
  },
  {
    "text": "eppf let us look at some very basic",
    "start": "426240",
    "end": "429039"
  },
  {
    "text": "examples and see what all possible with",
    "start": "429039",
    "end": "432160"
  },
  {
    "text": "just single liners",
    "start": "432160",
    "end": "433919"
  },
  {
    "text": "you can also trigger the lab",
    "start": "433919",
    "end": "436400"
  },
  {
    "text": "and then perform the hands-on lab along",
    "start": "436400",
    "end": "438479"
  },
  {
    "text": "with me",
    "start": "438479",
    "end": "439680"
  },
  {
    "text": "so now here i'm going to first install a",
    "start": "439680",
    "end": "442639"
  },
  {
    "text": "tool called bpf trace which is a",
    "start": "442639",
    "end": "445360"
  },
  {
    "text": "high-level testing language for epbf",
    "start": "445360",
    "end": "448560"
  },
  {
    "text": "programs",
    "start": "448560",
    "end": "450880"
  },
  {
    "text": "so let's install that first",
    "start": "450880",
    "end": "454240"
  },
  {
    "text": "once",
    "start": "457199",
    "end": "458160"
  },
  {
    "text": "those will get installed we are going to",
    "start": "458160",
    "end": "460479"
  },
  {
    "text": "run a very simple program to trace all",
    "start": "460479",
    "end": "463120"
  },
  {
    "text": "the system calls and then we print them",
    "start": "463120",
    "end": "465680"
  },
  {
    "text": "by counts",
    "start": "465680",
    "end": "468240"
  },
  {
    "text": "so our bpf trace has been installed",
    "start": "468240",
    "end": "471599"
  },
  {
    "text": "let us now look at our first example in",
    "start": "471599",
    "end": "474000"
  },
  {
    "text": "which we are going to get system call",
    "start": "474000",
    "end": "476479"
  },
  {
    "text": "counts by the programs",
    "start": "476479",
    "end": "478479"
  },
  {
    "text": "so if i run this script it is going to",
    "start": "478479",
    "end": "480720"
  },
  {
    "text": "collect the system calls called by every",
    "start": "480720",
    "end": "484000"
  },
  {
    "text": "program now if i just press ctrl c",
    "start": "484000",
    "end": "486720"
  },
  {
    "text": "you can see that there have been few",
    "start": "486720",
    "end": "489039"
  },
  {
    "text": "programs which are running on system",
    "start": "489039",
    "end": "491039"
  },
  {
    "text": "and they have called different number",
    "start": "491039",
    "end": "493360"
  },
  {
    "text": "system calls like the node program has",
    "start": "493360",
    "end": "496000"
  },
  {
    "text": "called 41 system calls and so on",
    "start": "496000",
    "end": "500400"
  },
  {
    "text": "now with the next example we are going",
    "start": "500400",
    "end": "503360"
  },
  {
    "text": "to",
    "start": "503360",
    "end": "504240"
  },
  {
    "text": "list down all the best commands which",
    "start": "504240",
    "end": "506720"
  },
  {
    "text": "have run",
    "start": "506720",
    "end": "507759"
  },
  {
    "text": "throughout the system so i run this",
    "start": "507759",
    "end": "510160"
  },
  {
    "text": "particular program",
    "start": "510160",
    "end": "511759"
  },
  {
    "text": "and let's say if i open up a new",
    "start": "511759",
    "end": "513760"
  },
  {
    "text": "terminal and run few commands let's say",
    "start": "513760",
    "end": "515760"
  },
  {
    "text": "i run a few commands like this",
    "start": "515760",
    "end": "519279"
  },
  {
    "text": "now if i go back",
    "start": "519279",
    "end": "520880"
  },
  {
    "text": "i can see that these programs are",
    "start": "520880",
    "end": "524080"
  },
  {
    "text": "listed here so we have run the date and",
    "start": "524080",
    "end": "526399"
  },
  {
    "text": "the cal command and they are listed here",
    "start": "526399",
    "end": "528560"
  },
  {
    "text": "so again a very powerful example if you",
    "start": "528560",
    "end": "531760"
  },
  {
    "text": "want to kind of look at what commands",
    "start": "531760",
    "end": "533920"
  },
  {
    "text": "people are running across the system",
    "start": "533920",
    "end": "536800"
  },
  {
    "text": "let me do a ctrl c here",
    "start": "536800",
    "end": "540480"
  },
  {
    "text": "now in the next example we are going to",
    "start": "543279",
    "end": "545519"
  },
  {
    "text": "trace new processes via the exact calls",
    "start": "545519",
    "end": "548000"
  },
  {
    "text": "let me run this program here",
    "start": "548000",
    "end": "551120"
  },
  {
    "text": "so the program is now running",
    "start": "551120",
    "end": "553600"
  },
  {
    "text": "let us now go and",
    "start": "553600",
    "end": "555839"
  },
  {
    "text": "let's say do few more things here let's",
    "start": "555839",
    "end": "558080"
  },
  {
    "text": "say if we run date command",
    "start": "558080",
    "end": "560399"
  },
  {
    "text": "do a bash here and so on and let's go",
    "start": "560399",
    "end": "563120"
  },
  {
    "text": "back here and check",
    "start": "563120",
    "end": "564959"
  },
  {
    "text": "now we can see here um",
    "start": "564959",
    "end": "567120"
  },
  {
    "text": "what are the new processes we have",
    "start": "567120",
    "end": "569680"
  },
  {
    "text": "called here and these are being listed",
    "start": "569680",
    "end": "571920"
  },
  {
    "text": "here",
    "start": "571920",
    "end": "574920"
  },
  {
    "text": "now in the next program i want to trace",
    "start": "576080",
    "end": "578480"
  },
  {
    "text": "all the active tcp connections",
    "start": "578480",
    "end": "581519"
  },
  {
    "text": "so i'm just going to again just run a",
    "start": "581519",
    "end": "583200"
  },
  {
    "text": "very simple script",
    "start": "583200",
    "end": "586160"
  },
  {
    "text": "and this particular script is now",
    "start": "587519",
    "end": "588959"
  },
  {
    "text": "running let us now go and try to make",
    "start": "588959",
    "end": "592000"
  },
  {
    "text": "some connections so let's say if we",
    "start": "592000",
    "end": "595279"
  },
  {
    "text": "do a curl on cloud website",
    "start": "595279",
    "end": "600160"
  },
  {
    "text": "let me just add the minus l here",
    "start": "600320",
    "end": "604880"
  },
  {
    "text": "yeah something has come up",
    "start": "604880",
    "end": "606560"
  },
  {
    "text": "and if i kind of go back here you can",
    "start": "606560",
    "end": "608240"
  },
  {
    "text": "see here",
    "start": "608240",
    "end": "609120"
  },
  {
    "text": "now it is listing all the",
    "start": "609120",
    "end": "611279"
  },
  {
    "text": "tcp connections what we are making here",
    "start": "611279",
    "end": "616279"
  },
  {
    "start": "618000",
    "end": "782000"
  },
  {
    "text": "now on the screen we can see different",
    "start": "618959",
    "end": "621200"
  },
  {
    "text": "bpf trace types which you can attach at",
    "start": "621200",
    "end": "624320"
  },
  {
    "text": "different places in the system so as you",
    "start": "624320",
    "end": "626560"
  },
  {
    "text": "can see we can attach them with respect",
    "start": "626560",
    "end": "628800"
  },
  {
    "text": "to devices memory cpu user space",
    "start": "628800",
    "end": "632800"
  },
  {
    "text": "programs and so on",
    "start": "632800",
    "end": "634480"
  },
  {
    "text": "so we can actually",
    "start": "634480",
    "end": "636399"
  },
  {
    "text": "put",
    "start": "636399",
    "end": "638160"
  },
  {
    "text": "or have these scripts for each in",
    "start": "638160",
    "end": "640560"
  },
  {
    "text": "individual subsystem what we have here",
    "start": "640560",
    "end": "642800"
  },
  {
    "text": "and we can then see what's happening",
    "start": "642800",
    "end": "645279"
  },
  {
    "text": "exactly on our system at any point of",
    "start": "645279",
    "end": "647360"
  },
  {
    "text": "time",
    "start": "647360",
    "end": "649279"
  },
  {
    "text": "now we have seen the basic examples now",
    "start": "649279",
    "end": "651519"
  },
  {
    "text": "let's see how does ebpf actually works",
    "start": "651519",
    "end": "656720"
  },
  {
    "text": "so here is a high level diagram which",
    "start": "656800",
    "end": "659279"
  },
  {
    "text": "is going to explain you how things are",
    "start": "659279",
    "end": "661200"
  },
  {
    "text": "happening behind the scene",
    "start": "661200",
    "end": "664480"
  },
  {
    "text": "so we need to load our",
    "start": "664720",
    "end": "668560"
  },
  {
    "text": "ebbf programs by the bpf byte code which",
    "start": "668880",
    "end": "672720"
  },
  {
    "text": "we can write manually but of course",
    "start": "672720",
    "end": "674800"
  },
  {
    "text": "writing manually by codes it's just",
    "start": "674800",
    "end": "677200"
  },
  {
    "text": "going to be too much complicated and",
    "start": "677200",
    "end": "679360"
  },
  {
    "text": "that's why",
    "start": "679360",
    "end": "680320"
  },
  {
    "text": "we have different tool chain which have",
    "start": "680320",
    "end": "682959"
  },
  {
    "text": "been built using which we can easily",
    "start": "682959",
    "end": "685519"
  },
  {
    "text": "write these um ebbf programs so there",
    "start": "685519",
    "end": "689680"
  },
  {
    "text": "are different tool links we have see the",
    "start": "689680",
    "end": "691519"
  },
  {
    "text": "example of bpf trace already then there",
    "start": "691519",
    "end": "694320"
  },
  {
    "text": "is bpf compiler collection we call this",
    "start": "694320",
    "end": "696720"
  },
  {
    "text": "bcbc you can even write now the programs",
    "start": "696720",
    "end": "699839"
  },
  {
    "text": "in rust language and so on so once we",
    "start": "699839",
    "end": "702800"
  },
  {
    "text": "have kind of",
    "start": "702800",
    "end": "704000"
  },
  {
    "text": "have",
    "start": "704000",
    "end": "704880"
  },
  {
    "text": "generated the by byte code",
    "start": "704880",
    "end": "707360"
  },
  {
    "text": "so now",
    "start": "707360",
    "end": "708480"
  },
  {
    "text": "once we have the byte code either",
    "start": "708480",
    "end": "711120"
  },
  {
    "text": "by writing it manually or from any one",
    "start": "711120",
    "end": "713200"
  },
  {
    "text": "of these tools we can load that byte",
    "start": "713200",
    "end": "716000"
  },
  {
    "text": "code to our kernel with the bpf system",
    "start": "716000",
    "end": "719360"
  },
  {
    "text": "call",
    "start": "719360",
    "end": "720639"
  },
  {
    "text": "and first we hit the verifier",
    "start": "720639",
    "end": "724079"
  },
  {
    "text": "which would verify whether the code",
    "start": "724079",
    "end": "725920"
  },
  {
    "text": "which you are loading is",
    "start": "725920",
    "end": "728240"
  },
  {
    "text": "safe to run on the kernel or not if it",
    "start": "728240",
    "end": "730240"
  },
  {
    "text": "is not safe then verifier would fail it",
    "start": "730240",
    "end": "732639"
  },
  {
    "text": "and not run it post verification we are",
    "start": "732639",
    "end": "735279"
  },
  {
    "text": "going to use just in type compilation",
    "start": "735279",
    "end": "738160"
  },
  {
    "text": "step",
    "start": "738160",
    "end": "739040"
  },
  {
    "text": "to convert our instructions to the",
    "start": "739040",
    "end": "740959"
  },
  {
    "text": "respective architecture what we have",
    "start": "740959",
    "end": "743519"
  },
  {
    "text": "and once we have done that we are going",
    "start": "743519",
    "end": "745680"
  },
  {
    "text": "to attach",
    "start": "745680",
    "end": "748320"
  },
  {
    "text": "the program to different events what we",
    "start": "748399",
    "end": "750720"
  },
  {
    "text": "have",
    "start": "750720",
    "end": "751600"
  },
  {
    "text": "and those events as i said earlier can",
    "start": "751600",
    "end": "753680"
  },
  {
    "text": "be any kernel call can be any user space",
    "start": "753680",
    "end": "757120"
  },
  {
    "text": "programs any trace points or and many",
    "start": "757120",
    "end": "760560"
  },
  {
    "text": "more so once we have attached to any of",
    "start": "760560",
    "end": "763600"
  },
  {
    "text": "these events and if those events occur",
    "start": "763600",
    "end": "766000"
  },
  {
    "text": "we are going to do the data collection",
    "start": "766000",
    "end": "768880"
  },
  {
    "text": "and",
    "start": "768880",
    "end": "770160"
  },
  {
    "text": "the data collection we are going to do",
    "start": "770160",
    "end": "772000"
  },
  {
    "text": "with with the help of maps and using",
    "start": "772000",
    "end": "774720"
  },
  {
    "text": "this maps we are going to share those",
    "start": "774720",
    "end": "776639"
  },
  {
    "text": "stats in the user space which we can",
    "start": "776639",
    "end": "778480"
  },
  {
    "text": "visualize",
    "start": "778480",
    "end": "779600"
  },
  {
    "text": "or",
    "start": "779600",
    "end": "780320"
  },
  {
    "text": "see it in the text of whatever it is",
    "start": "780320",
    "end": "782720"
  },
  {
    "start": "782000",
    "end": "933000"
  },
  {
    "text": "now there are different kind of maps we",
    "start": "782720",
    "end": "784240"
  },
  {
    "text": "can create to collect the state of the",
    "start": "784240",
    "end": "787040"
  },
  {
    "text": "events and so on",
    "start": "787040",
    "end": "789920"
  },
  {
    "text": "now here is a very simple program which",
    "start": "792079",
    "end": "794560"
  },
  {
    "text": "we would write with bcc",
    "start": "794560",
    "end": "797279"
  },
  {
    "text": "and python",
    "start": "797279",
    "end": "798399"
  },
  {
    "text": "and",
    "start": "798399",
    "end": "799600"
  },
  {
    "text": "try to",
    "start": "799600",
    "end": "801200"
  },
  {
    "text": "uh",
    "start": "801200",
    "end": "802240"
  },
  {
    "text": "hook it with an event so whenever that",
    "start": "802240",
    "end": "804079"
  },
  {
    "text": "event happens we get some data out and",
    "start": "804079",
    "end": "806240"
  },
  {
    "text": "we'll see that",
    "start": "806240",
    "end": "807680"
  },
  {
    "text": "so again there are different front ends",
    "start": "807680",
    "end": "809120"
  },
  {
    "text": "as i have mentioned earlier so we are",
    "start": "809120",
    "end": "810800"
  },
  {
    "text": "going to",
    "start": "810800",
    "end": "811760"
  },
  {
    "text": "use the bcbc library with uh the python",
    "start": "811760",
    "end": "815519"
  },
  {
    "text": "program to run the particular example so",
    "start": "815519",
    "end": "818800"
  },
  {
    "text": "only we just added the front end now",
    "start": "818800",
    "end": "821120"
  },
  {
    "text": "so let's see how this is going to happen",
    "start": "821120",
    "end": "823519"
  },
  {
    "text": "so for that purpose we are going to",
    "start": "823519",
    "end": "825279"
  },
  {
    "text": "first load a few packages",
    "start": "825279",
    "end": "828959"
  },
  {
    "text": "to perform those steps so we'll just",
    "start": "828959",
    "end": "831839"
  },
  {
    "text": "load the bpfcc tools and the linux",
    "start": "831839",
    "end": "834880"
  },
  {
    "text": "headers package",
    "start": "834880",
    "end": "837120"
  },
  {
    "text": "once you have done that here we have the",
    "start": "837120",
    "end": "839360"
  },
  {
    "text": "python program",
    "start": "839360",
    "end": "840800"
  },
  {
    "text": "and as you can see with the python we",
    "start": "840800",
    "end": "842959"
  },
  {
    "text": "are first",
    "start": "842959",
    "end": "844160"
  },
  {
    "text": "importing",
    "start": "844160",
    "end": "845440"
  },
  {
    "text": "the respective",
    "start": "845440",
    "end": "846639"
  },
  {
    "text": "uh",
    "start": "846639",
    "end": "848000"
  },
  {
    "text": "module",
    "start": "848000",
    "end": "849040"
  },
  {
    "text": "and then we have this bpf program",
    "start": "849040",
    "end": "852079"
  },
  {
    "text": "which we just written in like in the c",
    "start": "852079",
    "end": "854000"
  },
  {
    "text": "language here",
    "start": "854000",
    "end": "855519"
  },
  {
    "text": "and we are going to load that particular",
    "start": "855519",
    "end": "858959"
  },
  {
    "text": "uh program with bpa func with bpf call",
    "start": "858959",
    "end": "862880"
  },
  {
    "text": "here",
    "start": "862880",
    "end": "863680"
  },
  {
    "text": "so if you look at in this particular",
    "start": "863680",
    "end": "865199"
  },
  {
    "text": "program we are simply saying that",
    "start": "865199",
    "end": "868000"
  },
  {
    "text": "whenever",
    "start": "868000",
    "end": "869040"
  },
  {
    "text": "this particular function is being called",
    "start": "869040",
    "end": "871680"
  },
  {
    "text": "run",
    "start": "871680",
    "end": "872639"
  },
  {
    "text": "uh the print hello",
    "start": "872639",
    "end": "875040"
  },
  {
    "text": "kts and clarity community",
    "start": "875040",
    "end": "877760"
  },
  {
    "text": "now what we are doing is we are loading",
    "start": "877760",
    "end": "879199"
  },
  {
    "text": "this particular",
    "start": "879199",
    "end": "880399"
  },
  {
    "text": "bpf program",
    "start": "880399",
    "end": "882160"
  },
  {
    "text": "and attaching it to the system called",
    "start": "882160",
    "end": "884880"
  },
  {
    "text": "clone so whenever we are going to fork",
    "start": "884880",
    "end": "887519"
  },
  {
    "text": "we are going to run this function and",
    "start": "887519",
    "end": "890480"
  },
  {
    "text": "print out the output um",
    "start": "890480",
    "end": "894160"
  },
  {
    "text": "uh like",
    "start": "894160",
    "end": "895760"
  },
  {
    "text": "hello kts and the clogged community so",
    "start": "895760",
    "end": "898399"
  },
  {
    "text": "let's try to run this particular program",
    "start": "898399",
    "end": "900560"
  },
  {
    "text": "now",
    "start": "900560",
    "end": "902800"
  },
  {
    "text": "so we are now running this program here",
    "start": "905839",
    "end": "907760"
  },
  {
    "text": "is all",
    "start": "907760",
    "end": "908800"
  },
  {
    "text": "there",
    "start": "908800",
    "end": "909680"
  },
  {
    "text": "now let's",
    "start": "909680",
    "end": "910639"
  },
  {
    "text": "go ahead and do some fork so just going",
    "start": "910639",
    "end": "913360"
  },
  {
    "text": "to kind of spin up few more terminals",
    "start": "913360",
    "end": "915279"
  },
  {
    "text": "here",
    "start": "915279",
    "end": "916320"
  },
  {
    "text": "maybe",
    "start": "916320",
    "end": "917440"
  },
  {
    "text": "right date some other commands here",
    "start": "917440",
    "end": "920880"
  },
  {
    "text": "and now as you can see here as we kind",
    "start": "920880",
    "end": "923040"
  },
  {
    "text": "of perform any of",
    "start": "923040",
    "end": "925680"
  },
  {
    "text": "the clone functionality by any means in",
    "start": "925680",
    "end": "927920"
  },
  {
    "text": "the system",
    "start": "927920",
    "end": "928880"
  },
  {
    "text": "we are getting this particular output on",
    "start": "928880",
    "end": "930720"
  },
  {
    "text": "our screen",
    "start": "930720",
    "end": "933279"
  },
  {
    "start": "933000",
    "end": "971000"
  },
  {
    "text": "so with apbf we are just bound by our",
    "start": "933519",
    "end": "936399"
  },
  {
    "text": "imaginations",
    "start": "936399",
    "end": "938320"
  },
  {
    "text": "with eppf we can program the color",
    "start": "938320",
    "end": "940800"
  },
  {
    "text": "dynamically",
    "start": "940800",
    "end": "942560"
  },
  {
    "text": "and to the end user or developer we're",
    "start": "942560",
    "end": "944880"
  },
  {
    "text": "just going to have an api call using",
    "start": "944880",
    "end": "946959"
  },
  {
    "text": "which they can program the kernel for",
    "start": "946959",
    "end": "949120"
  },
  {
    "text": "their own choice",
    "start": "949120",
    "end": "950720"
  },
  {
    "text": "and that just brings",
    "start": "950720",
    "end": "952320"
  },
  {
    "text": "enormous",
    "start": "952320",
    "end": "953680"
  },
  {
    "text": "flexibility to the developers",
    "start": "953680",
    "end": "955680"
  },
  {
    "text": "to",
    "start": "955680",
    "end": "956480"
  },
  {
    "text": "bring up many and many use cases so in",
    "start": "956480",
    "end": "959360"
  },
  {
    "text": "the government future we are going to",
    "start": "959360",
    "end": "960720"
  },
  {
    "text": "see lot of use cases coming up with this",
    "start": "960720",
    "end": "963360"
  },
  {
    "text": "technology",
    "start": "963360",
    "end": "964720"
  },
  {
    "text": "so i highly recommend you to keep an eye",
    "start": "964720",
    "end": "967279"
  },
  {
    "text": "on this technology and see what our use",
    "start": "967279",
    "end": "969279"
  },
  {
    "text": "cases are coming here",
    "start": "969279",
    "end": "970959"
  },
  {
    "text": "thank you",
    "start": "970959",
    "end": "973360"
  }
]