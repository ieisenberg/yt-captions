[
  {
    "start": "0",
    "end": "508000"
  },
  {
    "text": "and that's where you all come in we'd like to share our experiences with you our learnings so that we can make",
    "start": "5230",
    "end": "12040"
  },
  {
    "text": "kubernetes better together I'm Joe Betts I'm the lead engineer for sed at Google",
    "start": "12040",
    "end": "17380"
  },
  {
    "text": "I'm also a maintainer of the Exedy project and it contributed her to the",
    "start": "17380",
    "end": "23020"
  },
  {
    "text": "kubernetes project joining me today is when Jay Zhang who is also a contributor to both kubernetes and @cd will go over",
    "start": "23020",
    "end": "32439"
  },
  {
    "text": "a brief recap of the kubernetes control plane remind you of some of the components that are in it will then walk",
    "start": "32439",
    "end": "37630"
  },
  {
    "text": "through some general diagnostic strategies that you can use with the kubernetes control plane and then we'll",
    "start": "37630",
    "end": "43750"
  },
  {
    "text": "get to the heart of our talk where we'll go through real-world examples of an actual issues with kubernetes and we'll",
    "start": "43750",
    "end": "49000"
  },
  {
    "text": "pair each of those issues with a key concept from kubernetes that you can use to inform your diet Diagnostics work",
    "start": "49000",
    "end": "56280"
  },
  {
    "text": "will then close it up with some guidance on how you can keep your kubernetes healthy your clusters healthy",
    "start": "56280",
    "end": "62590"
  },
  {
    "text": "proactively so let's just briefly recap the control plane the kubernetes control",
    "start": "62590",
    "end": "68350"
  },
  {
    "text": "plane is inspired from the shape of a ship's helm kubernetes literally means helmsman and a home has a hub in the",
    "start": "68350",
    "end": "75610"
  },
  {
    "text": "center and spokes that go out in every direction from it the kubernetes control plane has a central component and then a",
    "start": "75610",
    "end": "82810"
  },
  {
    "text": "series of components that interact with it to do work that central component is called the cube API server and it",
    "start": "82810",
    "end": "89440"
  },
  {
    "text": "provides a restful interface that the other components communicate with to determine the state of the cluster apply",
    "start": "89440",
    "end": "96220"
  },
  {
    "text": "their business logic and then apply the changes they want to make to the cluster back to it",
    "start": "96220",
    "end": "101490"
  },
  {
    "text": "nestled beneath the API server is a distributed key-value store called that CD there's a lot I could say about this",
    "start": "101490",
    "end": "107770"
  },
  {
    "text": "but for now we'll just remember that this is the persistent storage system for the control plane let's go around",
    "start": "107770",
    "end": "115180"
  },
  {
    "text": "some of the spokes the first is the controller manager this is a bundle of controllers that run in a single process",
    "start": "115180",
    "end": "121530"
  },
  {
    "text": "some of those controllers you might be familiar with because they map directly to a concept in kubernetes for example",
    "start": "121530",
    "end": "127390"
  },
  {
    "text": "the service controller is responsible for the business logic of service resources and so you can kind of inform",
    "start": "127390",
    "end": "134169"
  },
  {
    "text": "your understanding of what it does based on that some of the controllers provide a function for example the garbage",
    "start": "134169",
    "end": "140500"
  },
  {
    "text": "collection controller is responsible for cleaning up resources that aren't needed by the system anymore based on policies",
    "start": "140500",
    "end": "148019"
  },
  {
    "text": "okay we also have the cloud controller manager this is responsible for integrating with the various cloud",
    "start": "148019",
    "end": "153430"
  },
  {
    "text": "providers that kubernetes supports it's the primary integration point for them",
    "start": "153430",
    "end": "159069"
  },
  {
    "text": "and it's the interface that hides the differences of the cloud providers from",
    "start": "159069",
    "end": "164560"
  },
  {
    "text": "kubernetes so you get a uniform experience of course kubernetes has a scheduler I like to think of the",
    "start": "164560",
    "end": "172239"
  },
  {
    "text": "scheduler at a very high level as being primarily responsible for mapping pods onto nodes it's the responsibility of",
    "start": "172239",
    "end": "177940"
  },
  {
    "text": "the other components to get the pods created so that the scheduler can then schedule them most kubernetes clusters",
    "start": "177940",
    "end": "186459"
  },
  {
    "text": "have some extensions installed maybe they're installed as part of the kubernetes distro you use with your",
    "start": "186459",
    "end": "193140"
  },
  {
    "text": "cloud provider maybe there's something you've installed custom on to your cluster I'd encourage you to take some",
    "start": "193140",
    "end": "199720"
  },
  {
    "text": "time to understand the extensions that exist on your cluster when you're diagnosing it that can be very helpful in a making sense of problems when they",
    "start": "199720",
    "end": "205959"
  },
  {
    "text": "occur just really briefly whenever I talk to people about kubernetes the",
    "start": "205959",
    "end": "211420"
  },
  {
    "text": "first thing I remind them is don't panic when you're diagnosing problems this is",
    "start": "211420",
    "end": "216430"
  },
  {
    "text": "important because first of all panicking doesn't help and also kubernetes design",
    "start": "216430",
    "end": "221829"
  },
  {
    "text": "so that the control plane is not a single point of failure all the nodes will continue to run the pods that have",
    "start": "221829",
    "end": "227709"
  },
  {
    "text": "been scheduled on them until the control plan recovers so you can continue to run your mission critical software while you",
    "start": "227709",
    "end": "234130"
  },
  {
    "text": "recover the control plane a common question I get when people ask me about how to diagnose control problems is is",
    "start": "234130",
    "end": "241209"
  },
  {
    "text": "there some kind of logic or mapping that I can apply to the various problems that I might encounter and the locations in",
    "start": "241209",
    "end": "249370"
  },
  {
    "text": "the system where that issue is happening and surprisingly sometimes the answer is",
    "start": "249370",
    "end": "254799"
  },
  {
    "text": "yes so for example in the kubernetes api server if you get a 500 series response",
    "start": "254799",
    "end": "260530"
  },
  {
    "text": "from that in HTTP that literally means the API server is telling you that it knows it has an internal server error",
    "start": "260530",
    "end": "267039"
  },
  {
    "text": "and it will give you a message telling you some more details and you can go directly to that opponents are inspecting it but in many",
    "start": "267039",
    "end": "273950"
  },
  {
    "text": "cases a single symptom can map to multiple causes and for these even if",
    "start": "273950",
    "end": "279350"
  },
  {
    "text": "you've seen the symptom before and remember what happened last time I encourage you to work stepwise through",
    "start": "279350",
    "end": "284419"
  },
  {
    "text": "the process because it could be a different issue this time this is the",
    "start": "284419",
    "end": "289730"
  },
  {
    "text": "template we'll use in the examples we're about to show we'll start with some symptoms and then we'll work our way all the way down to a root cause and then",
    "start": "289730",
    "end": "296419"
  },
  {
    "text": "we'll take it one step further and look at mitigations and things that you could do immediately to get your cluster working again so let's walk through some",
    "start": "296419",
    "end": "303710"
  },
  {
    "text": "examples we'll start with the first one our key concept here is that all component and interaction and kubernetes is observable and what that means is",
    "start": "303710",
    "end": "311300"
  },
  {
    "text": "that the coop API server the hub of that helm performs a business logic of its",
    "start": "311300",
    "end": "316940"
  },
  {
    "text": "own and the components that communicate with it everything from the master",
    "start": "316940",
    "end": "322010"
  },
  {
    "text": "components to the extensions to the nodes themselves and even you the user must interact only with the coop API",
    "start": "322010",
    "end": "328729"
  },
  {
    "text": "server and cannot directly communicate with each other as a result all communication between all those",
    "start": "328729",
    "end": "333889"
  },
  {
    "text": "components is going through this central point and you can inspect all of that interaction you can do that quite simply",
    "start": "333889",
    "end": "340430"
  },
  {
    "text": "just with the coop cuddle command-line tool for example if you use a kit you'll see a pod and if user describe you'll",
    "start": "340430",
    "end": "347539"
  },
  {
    "text": "see that same pod with more detail but it's important to know that describe doesn't show all the details of a pod it",
    "start": "347539",
    "end": "353960"
  },
  {
    "text": "shows the most essential information if you want everything you really need to drop down to outputting the resource in",
    "start": "353960",
    "end": "360650"
  },
  {
    "text": "either yamo or json and then you will get each and every field that exists in that resource sometimes the change will",
    "start": "360650",
    "end": "366440"
  },
  {
    "text": "only be visible here those commands will give you a snapshot of a resource at a",
    "start": "366440",
    "end": "373039"
  },
  {
    "text": "point in time but if you actually want to see what's changing over time sometimes you need to watch things there's a flag to do that and here we",
    "start": "373039",
    "end": "381229"
  },
  {
    "text": "see an example of where we're watching a single pod or all pods actually and one",
    "start": "381229",
    "end": "386510"
  },
  {
    "text": "of those pods has gone been created and then deleted afterwards and you see each and every state transition that goes",
    "start": "386510",
    "end": "392570"
  },
  {
    "text": "through in your terminal as it progresses if you needed to you could use that same command without put llamó",
    "start": "392570",
    "end": "399140"
  },
  {
    "text": "and you would literally get an entire copy of that resource every time a change anyway so this gives you extensive",
    "start": "399140",
    "end": "405749"
  },
  {
    "text": "details of what's happening let's use that to look at an actual problem here we've got a pod that has been stuck in a",
    "start": "405749",
    "end": "413849"
  },
  {
    "text": "terminating state pods in kubernetes should only be take a couple minutes or a couple seconds to terminate at most",
    "start": "413849",
    "end": "420029"
  },
  {
    "text": "but this one's been stuck in the state for over 35 minutes there's a couple ways that you could find the next thing",
    "start": "420029",
    "end": "425999"
  },
  {
    "text": "you could you could search the web and ask what are the common causes of pods getting stuck in terminating state and",
    "start": "425999",
    "end": "432449"
  },
  {
    "text": "you'll get a bunch of hits back and some of them will talk about finalized errs or you could just go directly and look at the resource and see that there's a",
    "start": "432449",
    "end": "438599"
  },
  {
    "text": "finalizar like the one shown here on it the next step might be to learn a little bit more",
    "start": "438599",
    "end": "444360"
  },
  {
    "text": "about what finalized errs do and what you'll learn is that controllers create finalized errs and then are responsible",
    "start": "444360",
    "end": "450150"
  },
  {
    "text": "for moving them when they're done with whatever work they needed to do and it's only after all the finalize is removed",
    "start": "450150",
    "end": "455189"
  },
  {
    "text": "that a pod is removed so that's clearly our problem we've got a pod that's not being removed because there's the finaliters are still on it so why is",
    "start": "455189",
    "end": "461909"
  },
  {
    "text": "there why is it our final Iser and what controller was responsible for it well if you dig a little further you might",
    "start": "461909",
    "end": "467099"
  },
  {
    "text": "find that the finalizar includes the name of the component so you can use that to do some searches ask your",
    "start": "467099",
    "end": "473520"
  },
  {
    "text": "colleagues and find that this is a third-party component that was installed in your cluster and there's also a known",
    "start": "473520",
    "end": "479159"
  },
  {
    "text": "issue with it where sometimes under certain conditions it doesn't remove its finalized errs and that's been fixed in or later release so you could then now",
    "start": "479159",
    "end": "486360"
  },
  {
    "text": "start to actually sort sort out the problem if you need an immediate fix you could literally edit the the yamo and",
    "start": "486360",
    "end": "494069"
  },
  {
    "text": "remove the finalizer but that's a little risky because now you're doing a hand edit maybe a production system so another alternative would be to upgrade",
    "start": "494069",
    "end": "500399"
  },
  {
    "text": "that controller to the version that says it fixes the problem and see if that cleans up the terminated pods let's look",
    "start": "500399",
    "end": "508620"
  },
  {
    "text": "at one more example this one is based on the concept that um all state is",
    "start": "508620",
    "end": "513690"
  },
  {
    "text": "persisted in that CD this is really useful to know because if your cluster becomes unresponsive to the point where",
    "start": "513690",
    "end": "519360"
  },
  {
    "text": "you can't interact with it through the API you can still go down and look at the data and see these stores a history",
    "start": "519360",
    "end": "527610"
  },
  {
    "text": "of data it doesn't just store the latest version of objects when you update them it keeps track of history it uses this",
    "start": "527610",
    "end": "533279"
  },
  {
    "text": "to provide a watch mechanism so that you can see changes over because of this you could imagine well",
    "start": "533279",
    "end": "540250"
  },
  {
    "text": "if we keep updating object the storage space will grow indefinitely over time so sed provides a way to compact that",
    "start": "540250",
    "end": "547090"
  },
  {
    "text": "old history away with kubernetes that's done from the coop api server using the flag shown here and by default to",
    "start": "547090",
    "end": "553930"
  },
  {
    "text": "compacts every five minutes so every five minutes everything older than five minutes is deleted which means right",
    "start": "553930",
    "end": "560560"
  },
  {
    "text": "before compaction occurs you can have up to 10 minutes of historical data you can",
    "start": "560560",
    "end": "566020"
  },
  {
    "text": "use that to do some back of the envelope calculations on how much space might be used where the revisions and the",
    "start": "566020",
    "end": "571810"
  },
  {
    "text": "compaction window are used for that last factor and this becomes important because that CD is designed to store",
    "start": "571810",
    "end": "577810"
  },
  {
    "text": "critical State for a cluster and most kubernetes clusters only need a couple hundred Meg's of that type of data at CD",
    "start": "577810",
    "end": "584950"
  },
  {
    "text": "by default limits you to four gigabytes you can change that setting but that's the default and if you hit it you'll",
    "start": "584950",
    "end": "589960"
  },
  {
    "text": "trigger an alarm and it will stop allowing rights so what's up look at an issue here we've got a cluster that's",
    "start": "589960",
    "end": "596290"
  },
  {
    "text": "become unresponsive and we look at the logs we see this at CD data space exceeded air some of you may have seen",
    "start": "596290",
    "end": "603640"
  },
  {
    "text": "this one before my favorite tool to do diagnosis is called augur it's a tool that we've written an open source it",
    "start": "603640",
    "end": "609550"
  },
  {
    "text": "allows you to take an sed data file even if the cluster isn't running and analyze it you can look at specific objects and",
    "start": "609550",
    "end": "615310"
  },
  {
    "text": "see them in yamo even if they were written in protobuf you connect you can examine the coal key space in aggregate",
    "start": "615310",
    "end": "621040"
  },
  {
    "text": "as well here I'm going to ask for three main fields I'm gonna ask for the total size of each object I'm including all",
    "start": "621040",
    "end": "628089"
  },
  {
    "text": "historical revisions I'm gonna ask for the current revision size I'm gonna ask for the number of revisions for that",
    "start": "628089",
    "end": "634870"
  },
  {
    "text": "object and then I'm gonna sort it by the biggest ones first and what I get back and I just show the sample here is about five thousand these",
    "start": "634870",
    "end": "641650"
  },
  {
    "text": "minion objects which are about fifteen kilobytes each well that space adds up especially considering you've got 120",
    "start": "641650",
    "end": "647920"
  },
  {
    "text": "revisions of each of them so you could do a back-of-the-envelope calculation sort out that well if all of them took",
    "start": "647920",
    "end": "654430"
  },
  {
    "text": "up that much space we'd be well over 8 gigabytes of storage space clearly we're not because we hit the 4 gigabyte limit",
    "start": "654430",
    "end": "660070"
  },
  {
    "text": "so what happened well in this case our cluster just been resized from about a thousand nodes to about five thousand",
    "start": "660070",
    "end": "666610"
  },
  {
    "text": "nodes and wide it was sizing up when it failed another question you might ask is well why is it being",
    "start": "666610",
    "end": "673170"
  },
  {
    "text": "updated 12 times a minute well if you do some research and this is a little advanced you might find that",
    "start": "673170",
    "end": "678330"
  },
  {
    "text": "all the nodes in kubernetes do a heartbeat update to the cake cube API server every 5 seconds and so that's",
    "start": "678330",
    "end": "683970"
  },
  {
    "text": "where those rights are coming from you can calculate all this together and sort",
    "start": "683970",
    "end": "689670"
  },
  {
    "text": "out what's going on the last remaining bit is why is each node object 15 kilobytes you might examine that by hand",
    "start": "689670",
    "end": "696510"
  },
  {
    "text": "and what you'll see is a large list of docker image names it takes up almost all the space and it's in every node and",
    "start": "696510",
    "end": "702000"
  },
  {
    "text": "it's the same list well this is a pre-loaded image list that you can put in kubernetes and it allows each node to",
    "start": "702000",
    "end": "709560"
  },
  {
    "text": "load docker images before pods are scheduled they need those nodes and that means that when those are when pods are",
    "start": "709560",
    "end": "716460"
  },
  {
    "text": "started it's very efficient but this is taking up a bunch of space there's three things you could do to resolve these",
    "start": "716460",
    "end": "721890"
  },
  {
    "text": "problems you could reduce the compaction interval that will cut your storage space in half because you'll be storing",
    "start": "721890",
    "end": "727200"
  },
  {
    "text": "half so much history you could increase the HDD storage size there's no reason it has to stay up for four gigs you",
    "start": "727200",
    "end": "732330"
  },
  {
    "text": "could go to eight or sixteen or you could reduce that preload image list and you'd be back to a reasonable size I",
    "start": "732330",
    "end": "739370"
  },
  {
    "start": "739000",
    "end": "773000"
  },
  {
    "text": "will hand it off to Windsor for the next examples Thank You Jo all right so the",
    "start": "739370",
    "end": "748380"
  },
  {
    "text": "next key concept that we're gonna introduce here is that all the components are containers in the master",
    "start": "748380",
    "end": "755040"
  },
  {
    "text": "kulit so we're gonna start by reviewing some basic kubernetes concept what is",
    "start": "755040",
    "end": "762030"
  },
  {
    "text": "kubernetes pod kubernetes pod is a group of containers which shares the same pots",
    "start": "762030",
    "end": "768330"
  },
  {
    "text": "back to make sure that all the like the container or containers on one pot all",
    "start": "768330",
    "end": "773520"
  },
  {
    "start": "773000",
    "end": "798000"
  },
  {
    "text": "function the same way and then we have this couplet which is agent on the node",
    "start": "773520",
    "end": "780210"
  },
  {
    "text": "that make sure all the containers are running properly so the coupe's but the",
    "start": "780210",
    "end": "785400"
  },
  {
    "text": "pots back is applied by this couplet in the format of Yama or JSON file and we",
    "start": "785400",
    "end": "793230"
  },
  {
    "text": "know that's the case for any of your workload node and guess what master VM",
    "start": "793230",
    "end": "799920"
  },
  {
    "start": "798000",
    "end": "831000"
  },
  {
    "text": "is nothing but another using this couplet to running around the",
    "start": "799920",
    "end": "806490"
  },
  {
    "text": "pot so it's like the inception movie right the Salman comes in Java you're",
    "start": "806490",
    "end": "811650"
  },
  {
    "text": "dreaming or dreaming your dream so the magic is really just played by this",
    "start": "811650",
    "end": "818090"
  },
  {
    "text": "different manifests four different components like if you are applying an",
    "start": "818090",
    "end": "824550"
  },
  {
    "text": "STI mole to a pot that pot is turning into an LCD and so on so forth that way",
    "start": "824550",
    "end": "832410"
  },
  {
    "start": "831000",
    "end": "848000"
  },
  {
    "text": "you turned vanilla vanilla note into a master note with all the different",
    "start": "832410",
    "end": "839120"
  },
  {
    "text": "components running on it and that master note is the control plane for your",
    "start": "839120",
    "end": "844290"
  },
  {
    "text": "coronet YZ cluster so things the master",
    "start": "844290",
    "end": "851310"
  },
  {
    "start": "848000",
    "end": "886000"
  },
  {
    "text": "components themselves are managed using pod it gets all the benefit out of it",
    "start": "851310",
    "end": "856710"
  },
  {
    "text": "for example the master couplet who use the liveness in readiness probe to check",
    "start": "856710",
    "end": "862500"
  },
  {
    "text": "the house nests of each component and if any of them is crashed or unresponsive",
    "start": "862500",
    "end": "868010"
  },
  {
    "text": "the master couplet can restart it so the the control plane is like any of your",
    "start": "868010",
    "end": "875460"
  },
  {
    "text": "workload node it's predictable repeatable and immutable and when it comes to it down to diagnosing a control",
    "start": "875460",
    "end": "882480"
  },
  {
    "text": "plane issue it's become very handy - and",
    "start": "882480",
    "end": "887990"
  },
  {
    "start": "886000",
    "end": "965000"
  },
  {
    "text": "now is that concept in mind before we get into any of the real-world issues I",
    "start": "888500",
    "end": "895080"
  },
  {
    "text": "want to give you a list of nice tools I can use for sanity check the first one",
    "start": "895080",
    "end": "901320"
  },
  {
    "text": "is coop kado get notes it's really just used to check if all expected notes are",
    "start": "901320",
    "end": "908010"
  },
  {
    "text": "present and in ready status and you can",
    "start": "908010",
    "end": "913200"
  },
  {
    "text": "see their master is just another node right from that point on you you'd",
    "start": "913200",
    "end": "918390"
  },
  {
    "text": "better have access to your master VM once you're on your master you can use",
    "start": "918390",
    "end": "924060"
  },
  {
    "text": "docker PS to check the process status of your docker containers which are the",
    "start": "924060",
    "end": "931020"
  },
  {
    "text": "master components and you can see we have a seat a scheduler API server controller",
    "start": "931020",
    "end": "937779"
  },
  {
    "text": "manager if some of them are not there your control planes probably in trouble and then we have this coop kado get",
    "start": "937779",
    "end": "945699"
  },
  {
    "text": "components that this is we have we can you can check the housey and metrics of any of the component part we're gonna",
    "start": "945699",
    "end": "953649"
  },
  {
    "text": "use some of them in our real-world issues so in this section I'm gonna cover three different examples of three",
    "start": "953649",
    "end": "960639"
  },
  {
    "text": "different control plan components for the first one let's try using this coop",
    "start": "960639",
    "end": "967930"
  },
  {
    "start": "965000",
    "end": "1010000"
  },
  {
    "text": "kado get component statuses and apparently among all the different",
    "start": "967930",
    "end": "973209"
  },
  {
    "text": "components controller manager is not happy and if you check the health easy",
    "start": "973209",
    "end": "980550"
  },
  {
    "text": "to the controller manager port it's gonna tell you as the same thing cannot",
    "start": "980550",
    "end": "985750"
  },
  {
    "text": "be connected and you know well we can actually check the controller manager",
    "start": "985750",
    "end": "990970"
  },
  {
    "text": "log if you don't already know that make sure each component have their own lock and turn out that the controller manager",
    "start": "990970",
    "end": "1002009"
  },
  {
    "text": "crashed because there is error starting this resource quota controller and you",
    "start": "1002009",
    "end": "1008579"
  },
  {
    "text": "keep reading there is something suspicious this blah blah thing might",
    "start": "1008579",
    "end": "1015689"
  },
  {
    "start": "1010000",
    "end": "1049000"
  },
  {
    "text": "have some issue is it you probably want to either remove this or fix whatever problem with it but in this case what",
    "start": "1015689",
    "end": "1023910"
  },
  {
    "text": "were similarly even more is that the controller manager should not fail this",
    "start": "1023910",
    "end": "1029970"
  },
  {
    "text": "easily with any transient error right no way that you could shoo function jump",
    "start": "1029970",
    "end": "1035788"
  },
  {
    "text": "instantly no they the our control plan the controller manager should have a better way to handle errors like this so",
    "start": "1035789",
    "end": "1043788"
  },
  {
    "text": "what we can do the easiest way would be to check online and see if there is any",
    "start": "1043789",
    "end": "1050850"
  },
  {
    "start": "1049000",
    "end": "1099000"
  },
  {
    "text": "known issues and giving that so many people are using kubernetes whatever",
    "start": "1050850",
    "end": "1055890"
  },
  {
    "text": "problem that you are facing is probably already discovered by somebody else or even fixed which is exactly what we see",
    "start": "1055890",
    "end": "1063419"
  },
  {
    "text": "here so there is a coronaries issues and there is fix on it",
    "start": "1063419",
    "end": "1070200"
  },
  {
    "text": "and once you get the root cause the solution is very easy the short term you",
    "start": "1070200",
    "end": "1077550"
  },
  {
    "text": "want to remove or fix this service on the node side and long term you do want to upgrade your control plane to",
    "start": "1077550",
    "end": "1084980"
  },
  {
    "text": "whatever version that have that fix now in this example you can see the scope",
    "start": "1084980",
    "end": "1091350"
  },
  {
    "text": "kado get components that is this is very powerful you can feel like you got the ultimate weapon to diagnose any control",
    "start": "1091350",
    "end": "1097950"
  },
  {
    "text": "playing issues today sometimes it's not working hmmm that's not good well what",
    "start": "1097950",
    "end": "1105990"
  },
  {
    "start": "1099000",
    "end": "1142000"
  },
  {
    "text": "does that mean if I remember correctly Joe just mentioned that everything is",
    "start": "1105990",
    "end": "1111480"
  },
  {
    "text": "talking to API server and guess who is Coco talking to API server so if your",
    "start": "1111480",
    "end": "1118470"
  },
  {
    "text": "coop kado is not working sometimes it means your API server is not working and a DAT is actually the default part of",
    "start": "1118470",
    "end": "1126929"
  },
  {
    "text": "the API server and we check the API server log what do we see it panicked",
    "start": "1126929",
    "end": "1134970"
  },
  {
    "text": "that's not good do we panic don't panic remember joe",
    "start": "1134970",
    "end": "1140100"
  },
  {
    "text": "said don't panic and we're software engineers we can resect race and turn",
    "start": "1140100",
    "end": "1145920"
  },
  {
    "start": "1142000",
    "end": "1159000"
  },
  {
    "text": "out there's something wrong with this aggregator controller open API some of",
    "start": "1145920",
    "end": "1151830"
  },
  {
    "text": "you might already know what that is somebody feel am I not I don't care it doesn't matter you can always check",
    "start": "1151830",
    "end": "1157860"
  },
  {
    "text": "online and apparently this is a no issue again and there is issue opened in coop",
    "start": "1157860",
    "end": "1166260"
  },
  {
    "text": "open API ripple there is fix with it and there is kubernetes fix that pick up",
    "start": "1166260",
    "end": "1173850"
  },
  {
    "text": "that fixing open API with this example if I remember correctly everything",
    "start": "1173850",
    "end": "1179400"
  },
  {
    "text": "happened like wheezing two three days and I did a little survey before this",
    "start": "1179400",
    "end": "1184920"
  },
  {
    "text": "before this speak I know there are a lot of contributors so I want to say that open source kubernetes communities rocks",
    "start": "1184920",
    "end": "1192710"
  },
  {
    "text": "run applause to all the contributors thank you thank you we did a good job",
    "start": "1192710",
    "end": "1198540"
  },
  {
    "text": "let's continue doing we still have to fix this issue and it's",
    "start": "1198540",
    "end": "1206809"
  },
  {
    "text": "easy just upgrade your control plane to the next version version that have this fix for the this two examples when you",
    "start": "1206809",
    "end": "1218570"
  },
  {
    "text": "do you you have a control plan is not working right for both example you have a broken components what if you well",
    "start": "1218570",
    "end": "1227240"
  },
  {
    "text": "from this to fix you can see that we tried really hard to make sure our control plane do not fail because of",
    "start": "1227240",
    "end": "1234559"
  },
  {
    "text": "transient error how about if we have a like funky control plane but everything",
    "start": "1234559",
    "end": "1241700"
  },
  {
    "text": "looks fine we do not have an unhealthy component we do not have a broken component how do we know something went",
    "start": "1241700",
    "end": "1248240"
  },
  {
    "text": "around which part went wrong this is when a good monitoring alerting system",
    "start": "1248240",
    "end": "1255080"
  },
  {
    "start": "1249000",
    "end": "1280000"
  },
  {
    "text": "is very necessary and remember joe said that HTTP 500 error is a very good",
    "start": "1255080",
    "end": "1260929"
  },
  {
    "text": "indicator there saying that ABI server is wrong in this case in our system we",
    "start": "1260929",
    "end": "1266330"
  },
  {
    "text": "have a monitor counting how many a 500 errors we got from the API server log",
    "start": "1266330",
    "end": "1271610"
  },
  {
    "text": "and if it's too many we gotta learn it now we can look at the",
    "start": "1271610",
    "end": "1277909"
  },
  {
    "text": "API server log and turn out it failed to",
    "start": "1277909",
    "end": "1284570"
  },
  {
    "start": "1280000",
    "end": "1298000"
  },
  {
    "text": "least this HPA under this version extensions fee 1 beta 1 hmm what do we",
    "start": "1284570",
    "end": "1293120"
  },
  {
    "text": "do next we got the keyword we can search online and in this case instead of finding the",
    "start": "1293120",
    "end": "1301460"
  },
  {
    "start": "1298000",
    "end": "1330000"
  },
  {
    "text": "exactly issue that we see we find why we had that issue turnout from one point",
    "start": "1301460",
    "end": "1308740"
  },
  {
    "text": "horizontal pod or the scalar is no longer supported under this version but",
    "start": "1308740",
    "end": "1314059"
  },
  {
    "text": "using a new version called all the scaling v1 and in this particular cluster it still have some old version",
    "start": "1314059",
    "end": "1321950"
  },
  {
    "text": "HPA and of course API server cannot recognize it anymore I cannot find it so",
    "start": "1321950",
    "end": "1331480"
  },
  {
    "text": "we didn't find the fix for that issue but still we don't need to panic",
    "start": "1332430",
    "end": "1337630"
  },
  {
    "text": "all we need to do is just be a little more creative here the safe approach would be to delete the existing old",
    "start": "1337630",
    "end": "1344140"
  },
  {
    "text": "version HPA right and create a new one with the correct version of course that",
    "start": "1344140",
    "end": "1350080"
  },
  {
    "text": "would come with some dumb time let me remind you guys again control plan",
    "start": "1350080",
    "end": "1355270"
  },
  {
    "text": "downtime does not mean cluster downtime your father's still running your application is fine",
    "start": "1355270",
    "end": "1361440"
  },
  {
    "text": "but if you really do not want a control plane with down time there is menu STD",
    "start": "1361440",
    "end": "1368530"
  },
  {
    "text": "surgery that you can do but keep in mind that messing up with the raw data is",
    "start": "1368530",
    "end": "1374620"
  },
  {
    "text": "always dangerous you better make sure what you're doing have a back-up plan",
    "start": "1374620",
    "end": "1381179"
  },
  {
    "text": "all right we talked about API server we talked about controller manager and you",
    "start": "1381240",
    "end": "1388660"
  },
  {
    "text": "Vanessa D I promised some of the guys here that we're going to talk about scheduler and here we are I'm actually",
    "start": "1388660",
    "end": "1394510"
  },
  {
    "text": "going to spend and so section talk about scheduler which is we should trust",
    "start": "1394510",
    "end": "1399730"
  },
  {
    "text": "scheduler if anything happens it's our scheduler is unhealthy instead of thinking that scheduler is wrong",
    "start": "1399730",
    "end": "1406800"
  },
  {
    "text": "actually look at the scheduler message and see if it can't give you the control the clue because our scheduler",
    "start": "1406800",
    "end": "1414550"
  },
  {
    "text": "engineering engineer did a really good job the scare is very robust so I want",
    "start": "1414550",
    "end": "1422260"
  },
  {
    "start": "1419000",
    "end": "1451000"
  },
  {
    "text": "to start with some very important scheduler concept that would help you",
    "start": "1422260",
    "end": "1427330"
  },
  {
    "text": "interpret scheduler issues the first one is note selector it provides a very simple way to",
    "start": "1427330",
    "end": "1434020"
  },
  {
    "text": "considering pods to notes with particular labels for example you can",
    "start": "1434020",
    "end": "1440140"
  },
  {
    "text": "say that you can ask the scheduler or say - please scheduler please schedule a",
    "start": "1440140",
    "end": "1446260"
  },
  {
    "text": "spot on note that have GPU right and then followed by that is in note",
    "start": "1446260",
    "end": "1453210"
  },
  {
    "start": "1451000",
    "end": "1509000"
  },
  {
    "text": "affinity and note Tings if no affinity is a property of pots that attract them",
    "start": "1453210",
    "end": "1458920"
  },
  {
    "text": "to certain node and tank is the opposite it can repair the note from a set of hot",
    "start": "1458920",
    "end": "1466330"
  },
  {
    "text": "remember that note that have GPU on it it can tell the scheduler only the pot",
    "start": "1466330",
    "end": "1471550"
  },
  {
    "text": "that need the GPU can be running on me so if you have some scheduler issue",
    "start": "1471550",
    "end": "1476800"
  },
  {
    "text": "those are the things that you want to check like if there's they're set properly and then there is possible",
    "start": "1476800",
    "end": "1485530"
  },
  {
    "text": "court down notes when a note is cordoned it's unschedulable it's definitely going",
    "start": "1485530",
    "end": "1491860"
  },
  {
    "text": "to impact your scheduling and then there are other things like notes for whatever",
    "start": "1491860",
    "end": "1497350"
  },
  {
    "text": "reason there are insufficient resources for example you want to schedule 5",
    "start": "1497350",
    "end": "1502480"
  },
  {
    "text": "million pods on three small notes that's not gonna work with all this concept",
    "start": "1502480",
    "end": "1509550"
  },
  {
    "text": "instead of talking about one real issue I want to give a summary of how to",
    "start": "1509550",
    "end": "1516400"
  },
  {
    "text": "interpret unschedulable so the symptom could varies from sanity check tells you",
    "start": "1516400",
    "end": "1524170"
  },
  {
    "text": "that scheduler it's not working to schedule or use up too much resource too",
    "start": "1524170",
    "end": "1529780"
  },
  {
    "text": "many painting mods or no paws get scheduled and then there are some analysis tools you can use for example",
    "start": "1529780",
    "end": "1537480"
  },
  {
    "text": "scheduler metrics there are a lot of useful informations in there I know they added a lot of new useful metrics lately",
    "start": "1537480",
    "end": "1546090"
  },
  {
    "text": "then you can also check the scheduling related events for specific parts at",
    "start": "1546090",
    "end": "1553630"
  },
  {
    "text": "York you care about and see if everything looks fine and then you can always check scheduler log as well and",
    "start": "1553630",
    "end": "1561910"
  },
  {
    "text": "the route costs could be from any of the things that we've just talked about and",
    "start": "1561910",
    "end": "1567840"
  },
  {
    "text": "last one this is a message that I want to delivered I just want to repeat it",
    "start": "1567840",
    "end": "1573370"
  },
  {
    "text": "again if the race scheduler reports your pot as unschedulable it's really right",
    "start": "1573370",
    "end": "1579430"
  },
  {
    "text": "and we'll try it's best to tell you why not the trick is to listen to it and use",
    "start": "1579430",
    "end": "1586030"
  },
  {
    "text": "that as a clue to find out why your control plan is acting funky and there",
    "start": "1586030",
    "end": "1591310"
  },
  {
    "text": "is a very good talk given by Marek hrabowski he saw a colleague",
    "start": "1591310",
    "end": "1596620"
  },
  {
    "text": "he is a real control plan expert he had the from last year's coupon on the",
    "start": "1596620",
    "end": "1604300"
  },
  {
    "text": "scheduling features you can check online and with all this nice tricks that Joe",
    "start": "1604300",
    "end": "1611620"
  },
  {
    "start": "1608000",
    "end": "1632000"
  },
  {
    "text": "and I just talked about let's go back to the very beginning but won't you sing",
    "start": "1611620",
    "end": "1617559"
  },
  {
    "text": "with me Ally to the talk why do we need to come to this top because we want to keep our control plane healthy right",
    "start": "1617559",
    "end": "1624940"
  },
  {
    "text": "what if we do not need to use any of the trick at all and we have a healthy control plane to run all the time so",
    "start": "1624940",
    "end": "1632770"
  },
  {
    "start": "1632000",
    "end": "1649000"
  },
  {
    "text": "what are the puzzle pieces that we could put together beforehand to have a healthy control plane running we won't",
    "start": "1632770",
    "end": "1640690"
  },
  {
    "text": "have time to talk about each in detail but at least give you some basic resource you can check after this",
    "start": "1640690",
    "end": "1649170"
  },
  {
    "text": "security is definitely play big part in this picture and you can check this talk",
    "start": "1649170",
    "end": "1656800"
  },
  {
    "text": "about kubernetes for enterprise security requirements it's given in the Google",
    "start": "1656800",
    "end": "1663640"
  },
  {
    "text": "cloud next conference and the next one as I mentioned in one of the example and",
    "start": "1663640",
    "end": "1670660"
  },
  {
    "text": "an accountable monitoring alerting system is very important there are a lot",
    "start": "1670660",
    "end": "1677530"
  },
  {
    "text": "of nice product outside that you can find one that fits your needs or you can",
    "start": "1677530",
    "end": "1682780"
  },
  {
    "text": "read this coronet it's official documentation and build your own",
    "start": "1682780",
    "end": "1688350"
  },
  {
    "start": "1688000",
    "end": "1726000"
  },
  {
    "text": "resource called some people talk about resource or coder before this talk so",
    "start": "1688350",
    "end": "1694510"
  },
  {
    "text": "there is a series of video video called kubernetes best practice one of it is to",
    "start": "1694510",
    "end": "1701830"
  },
  {
    "text": "teach you how to set resource requests and limits in corollaries and then for",
    "start": "1701830",
    "end": "1709059"
  },
  {
    "text": "scalability you do want to have a proper size of master and cluster or your notes",
    "start": "1709059",
    "end": "1716410"
  },
  {
    "text": "and in the kubernetes official documentation there are some",
    "start": "1716410",
    "end": "1722950"
  },
  {
    "text": "informations about that and then last but not least upgrading and",
    "start": "1722950",
    "end": "1729840"
  },
  {
    "start": "1726000",
    "end": "1771000"
  },
  {
    "text": "backup is important you hear me mention a couple of times in our talk upgrading upgrading and the good news is the best",
    "start": "1729840",
    "end": "1737399"
  },
  {
    "text": "resource is hearing this could come tomorrow at 11:30 our colleague Chow is",
    "start": "1737399",
    "end": "1744359"
  },
  {
    "text": "gonna give the talk here is everybody so",
    "start": "1744359",
    "end": "1750169"
  },
  {
    "text": "it's about it's purely about safely upgrading kubernetes cluster Chow is one",
    "start": "1750169",
    "end": "1756539"
  },
  {
    "text": "of the earliest developer in kubernetes is a pimpin lever we have a ping-pong table downstairs and I've seen the",
    "start": "1756539",
    "end": "1764729"
  },
  {
    "text": "slides very important format if I learned a lot I hope you will too and",
    "start": "1764729",
    "end": "1771679"
  },
  {
    "start": "1771000",
    "end": "1826000"
  },
  {
    "text": "that's the question time yes I have a",
    "start": "1771679",
    "end": "1777899"
  },
  {
    "text": "question we always find some problem by the condition and that you went on the",
    "start": "1777899",
    "end": "1784549"
  },
  {
    "text": "cabarrus object path sometimes some coral components errors hide in the lock",
    "start": "1784549",
    "end": "1793679"
  },
  {
    "text": "not in events or conditions so it's very hard to find the relationship between",
    "start": "1793679",
    "end": "1801539"
  },
  {
    "text": "the between the conditions and the component I think maybe we should define",
    "start": "1801539",
    "end": "1810989"
  },
  {
    "text": "a different kind of event such as cluster or component to attach the",
    "start": "1810989",
    "end": "1819080"
  },
  {
    "text": "errors in the coral component to the specific event what's your opinion about",
    "start": "1819080",
    "end": "1825570"
  },
  {
    "text": "this still processing but I think it's worth talking about I think one of the",
    "start": "1825570",
    "end": "1832019"
  },
  {
    "start": "1826000",
    "end": "1855000"
  },
  {
    "text": "reasons why we give presentations like this is because we want the shelf life of them to be short I would like this presentation become obsolete because we",
    "start": "1832019",
    "end": "1839159"
  },
  {
    "text": "make kubernetes better so yeah I'd love to talk about things like that I think",
    "start": "1839159",
    "end": "1844169"
  },
  {
    "text": "what you've mentioned sounds like a gap to me something we could improve other questions so I think you guys",
    "start": "1844169",
    "end": "1861860"
  },
  {
    "text": "might have a lot of experiences with maintaining an operation for a very large clusters and also very complex",
    "start": "1861860",
    "end": "1868700"
  },
  {
    "text": "system so what is the best practice when you have a very tricky problems and you",
    "start": "1868700",
    "end": "1873860"
  },
  {
    "text": "don't know where to look to look at maybe it's a network or its infrastructure or anything within the",
    "start": "1873860",
    "end": "1879560"
  },
  {
    "start": "1877000",
    "end": "1887000"
  },
  {
    "text": "class or so any best practice for that part including monitoring I would yeah I",
    "start": "1879560",
    "end": "1889070"
  },
  {
    "start": "1887000",
    "end": "1902000"
  },
  {
    "text": "think you already mentioned it there I think I think monitoring is your your first line of defense and you should use",
    "start": "1889070",
    "end": "1896390"
  },
  {
    "text": "that to try and guide you into diagnosing the issue as far as you can what one one piece of feedback I might",
    "start": "1896390",
    "end": "1904400"
  },
  {
    "start": "1902000",
    "end": "1908000"
  },
  {
    "text": "give to people is if you run into an issue where you end up spending a lot of time just fried trying to find that first breadcrumb spend some time",
    "start": "1904400",
    "end": "1911060"
  },
  {
    "start": "1908000",
    "end": "1932000"
  },
  {
    "text": "afterwards thinking about why that was what monitoring was missing what infrastructure was missing to trace",
    "start": "1911060",
    "end": "1917180"
  },
  {
    "text": "that problem basically do kind of a post-mortem on that issue and use that to improve your monitoring and your your",
    "start": "1917180",
    "end": "1923960"
  },
  {
    "text": "your first stage of identifying an issue and tracing it so that next time you're",
    "start": "1923960",
    "end": "1929330"
  },
  {
    "text": "in you're in better shape one thing I want to add is that you can see there",
    "start": "1929330",
    "end": "1935840"
  },
  {
    "start": "1932000",
    "end": "1956000"
  },
  {
    "text": "are so many different and enterprise using it and we people from STAR Labs",
    "start": "1935840",
    "end": "1940880"
  },
  {
    "text": "all the way to the big company like Google we even have internal use cases",
    "start": "1940880",
    "end": "1946310"
  },
  {
    "text": "for kubernetes so the use case are so different that it's really hard to find a standard to like how to use kubernetes",
    "start": "1946310",
    "end": "1953270"
  },
  {
    "text": "in a certain way but one thing that is",
    "start": "1953270",
    "end": "1958490"
  },
  {
    "text": "that you can definitely find other people who use it the same probably similar way as you are and if you post",
    "start": "1958490",
    "end": "1964490"
  },
  {
    "text": "questions on the kubernetes github or Stack Overflow you're probably going to",
    "start": "1964490",
    "end": "1970190"
  },
  {
    "text": "find some answers and during the issue discussion you're probably going to find the fix you can contribute to the",
    "start": "1970190",
    "end": "1976670"
  },
  {
    "text": "community thank you so my question is that the",
    "start": "1976670",
    "end": "1984040"
  },
  {
    "start": "1978000",
    "end": "2034000"
  },
  {
    "text": "most of issue so currently we have we have a hae control plane and a lot of",
    "start": "1984040",
    "end": "1989860"
  },
  {
    "text": "the nose is a city related so do we have any suggestions about how we can",
    "start": "1989860",
    "end": "1995380"
  },
  {
    "text": "organize SAT related issues I'm gonna give a talk about this at coop can't see",
    "start": "1995380",
    "end": "2002550"
  },
  {
    "text": "at all so watch the slides when we present those I think a lot about high availability at CD there are certain",
    "start": "2002550",
    "end": "2009750"
  },
  {
    "text": "minimum same versions that I've talked to the community about before and I'm",
    "start": "2009750",
    "end": "2015600"
  },
  {
    "text": "trying to think at the high level what I can tell you it's it's a detailed topic",
    "start": "2015600",
    "end": "2021030"
  },
  {
    "text": "maybe maybe we'll save that for the Seattle conference okay thank you",
    "start": "2021030",
    "end": "2033450"
  },
  {
    "text": "everyone",
    "start": "2033450",
    "end": "2035720"
  }
]