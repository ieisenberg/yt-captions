[
  {
    "text": "hi I'm vjit and with me I have Derek we",
    "start": "1079",
    "end": "5160"
  },
  {
    "text": "work on the open source um platform",
    "start": "5160",
    "end": "8040"
  },
  {
    "text": "called Numa flow that is um open sourced",
    "start": "8040",
    "end": "11040"
  },
  {
    "text": "by into it and this talk is about how we",
    "start": "11040",
    "end": "13360"
  },
  {
    "text": "simplify stream data processing at scale",
    "start": "13360",
    "end": "16240"
  },
  {
    "text": "at int using declarative kubernetes",
    "start": "16240",
    "end": "19400"
  },
  {
    "text": "native",
    "start": "19400",
    "end": "21439"
  },
  {
    "text": "Technologies the we'll start about",
    "start": "21439",
    "end": "23880"
  },
  {
    "text": "little bit about in it then stream",
    "start": "23880",
    "end": "25599"
  },
  {
    "text": "processing challenges what's Numa flow",
    "start": "25599",
    "end": "27880"
  },
  {
    "text": "and a demo to show how it all comes",
    "start": "27880",
    "end": "29640"
  },
  {
    "text": "together",
    "start": "29640",
    "end": "31400"
  },
  {
    "text": "this is IND Mission powering Prosperity",
    "start": "31400",
    "end": "33320"
  },
  {
    "text": "around the",
    "start": "33320",
    "end": "34480"
  },
  {
    "text": "world technology at indid a brief uh",
    "start": "34480",
    "end": "37719"
  },
  {
    "text": "scale we work at we have 100 million",
    "start": "37719",
    "end": "40280"
  },
  {
    "text": "customers we move billions of dollars in",
    "start": "40280",
    "end": "43440"
  },
  {
    "text": "customer reference trillions of invoices",
    "start": "43440",
    "end": "46160"
  },
  {
    "text": "processed and millions of users using",
    "start": "46160",
    "end": "49120"
  },
  {
    "text": "payroll it shows the scale at which we",
    "start": "49120",
    "end": "51320"
  },
  {
    "text": "operate and the technology that we have",
    "start": "51320",
    "end": "53800"
  },
  {
    "text": "and the technology that powers",
    "start": "53800",
    "end": "55719"
  },
  {
    "text": "this we are a native development",
    "start": "55719",
    "end": "58399"
  },
  {
    "text": "platform um we do millions of",
    "start": "58399",
    "end": "61399"
  },
  {
    "text": "predictions a day and so forth there's a",
    "start": "61399",
    "end": "63519"
  },
  {
    "text": "talk for um very specific to AI today at",
    "start": "63519",
    "end": "67159"
  },
  {
    "text": "3 345 um please attend if you want to",
    "start": "67159",
    "end": "71040"
  },
  {
    "text": "know more about how we do it we are big",
    "start": "71040",
    "end": "74040"
  },
  {
    "text": "in open source collaboration and we were",
    "start": "74040",
    "end": "76920"
  },
  {
    "text": "cncf end user Award winners in 202 19",
    "start": "76920",
    "end": "80240"
  },
  {
    "text": "and",
    "start": "80240",
    "end": "81240"
  },
  {
    "text": "2022 uh we have contributed a lot of",
    "start": "81240",
    "end": "83520"
  },
  {
    "text": "Open Source argu is the most popular one",
    "start": "83520",
    "end": "85680"
  },
  {
    "text": "among those and we will also talk about",
    "start": "85680",
    "end": "88240"
  },
  {
    "text": "neafl today",
    "start": "88240",
    "end": "90439"
  },
  {
    "text": "we are also part of end user Community",
    "start": "90439",
    "end": "92280"
  },
  {
    "text": "for open source Tech now I'll get to the",
    "start": "92280",
    "end": "96200"
  },
  {
    "text": "main talk that is stream",
    "start": "96200",
    "end": "99040"
  },
  {
    "text": "processing so what exactly stream",
    "start": "99040",
    "end": "101560"
  },
  {
    "text": "processing right so I'll go through a",
    "start": "101560",
    "end": "103520"
  },
  {
    "text": "very simplified architecture it all",
    "start": "103520",
    "end": "106240"
  },
  {
    "text": "starts with um reading data from a",
    "start": "106240",
    "end": "108799"
  },
  {
    "text": "source stream by itself means that is an",
    "start": "108799",
    "end": "111439"
  },
  {
    "text": "unbounded Source meaning it never ends",
    "start": "111439",
    "end": "114719"
  },
  {
    "text": "you keep reading Kafka Pulsa sqs it",
    "start": "114719",
    "end": "117079"
  },
  {
    "text": "doesn't matter and any protocol mqtt",
    "start": "117079",
    "end": "120280"
  },
  {
    "text": "right you read data from a source and",
    "start": "120280",
    "end": "122439"
  },
  {
    "text": "then you do some processing this",
    "start": "122439",
    "end": "124320"
  },
  {
    "text": "processing could be as complex as it can",
    "start": "124320",
    "end": "126640"
  },
  {
    "text": "be or simple as it can be and it say",
    "start": "126640",
    "end": "129160"
  },
  {
    "text": "multi-step processing for example you",
    "start": "129160",
    "end": "131039"
  },
  {
    "text": "are doing Simple transformations to very",
    "start": "131039",
    "end": "134280"
  },
  {
    "text": "complex machine learning",
    "start": "134280",
    "end": "136360"
  },
  {
    "text": "algorithms and then you send it to a",
    "start": "136360",
    "end": "138599"
  },
  {
    "text": "destination for example you might write",
    "start": "138599",
    "end": "140239"
  },
  {
    "text": "it back to elastic search some uh some",
    "start": "140239",
    "end": "142840"
  },
  {
    "text": "rdbms or again to Kafka for somebody",
    "start": "142840",
    "end": "145440"
  },
  {
    "text": "else to consume so this unit is what we",
    "start": "145440",
    "end": "148480"
  },
  {
    "text": "call it as a stream processing that's",
    "start": "148480",
    "end": "149920"
  },
  {
    "text": "starts with a source and a sync and",
    "start": "149920",
    "end": "151360"
  },
  {
    "text": "multi-step processing in",
    "start": "151360",
    "end": "153400"
  },
  {
    "text": "between let me just give you some real",
    "start": "153400",
    "end": "156080"
  },
  {
    "text": "world examples these are from both from",
    "start": "156080",
    "end": "158879"
  },
  {
    "text": "int and also from the community who are",
    "start": "158879",
    "end": "161200"
  },
  {
    "text": "who is using our project first is a",
    "start": "161200",
    "end": "164120"
  },
  {
    "text": "e-commerce realtime recommendation",
    "start": "164120",
    "end": "165640"
  },
  {
    "text": "system this is more about",
    "start": "165640",
    "end": "167640"
  },
  {
    "text": "personalization and sessionization when",
    "start": "167640",
    "end": "170040"
  },
  {
    "text": "you operate on a website uh you want to",
    "start": "170040",
    "end": "172959"
  },
  {
    "text": "give the right recommendations based on",
    "start": "172959",
    "end": "175440"
  },
  {
    "text": "what the user is searching for example",
    "start": "175440",
    "end": "176920"
  },
  {
    "text": "if you are into a clothing uh website",
    "start": "176920",
    "end": "180519"
  },
  {
    "text": "as you start searching about let's say",
    "start": "180519",
    "end": "182159"
  },
  {
    "text": "genes then the personalization changes",
    "start": "182159",
    "end": "184360"
  },
  {
    "text": "to tailor to what you need second is iot",
    "start": "184360",
    "end": "187959"
  },
  {
    "text": "data processing this is we have few",
    "start": "187959",
    "end": "189599"
  },
  {
    "text": "users use Numa flow on edge for digital",
    "start": "189599",
    "end": "193400"
  },
  {
    "text": "signal processing and radio signal",
    "start": "193400",
    "end": "195959"
  },
  {
    "text": "processing this shows that the solution",
    "start": "195959",
    "end": "198480"
  },
  {
    "text": "is very lightweight and can run on edge",
    "start": "198480",
    "end": "202200"
  },
  {
    "text": "systems realtime Antics is something",
    "start": "202200",
    "end": "204400"
  },
  {
    "text": "which we use as in a lot this is for",
    "start": "204400",
    "end": "207080"
  },
  {
    "text": "doing analytics or and",
    "start": "207080",
    "end": "210319"
  },
  {
    "text": "group Bas and things like that and also",
    "start": "210319",
    "end": "213159"
  },
  {
    "text": "fraud detection this is ml where you",
    "start": "213159",
    "end": "216239"
  },
  {
    "text": "either use uh traditional ml models or",
    "start": "216239",
    "end": "219840"
  },
  {
    "text": "little more complex ones to understand",
    "start": "219840",
    "end": "221640"
  },
  {
    "text": "whether the user Behavior or the intent",
    "start": "221640",
    "end": "223480"
  },
  {
    "text": "is fraudulent or",
    "start": "223480",
    "end": "225200"
  },
  {
    "text": "not the key point is that stream",
    "start": "225200",
    "end": "227480"
  },
  {
    "text": "processing is the backbone of modern",
    "start": "227480",
    "end": "231159"
  },
  {
    "text": "technology but unfortunately the way it",
    "start": "231159",
    "end": "233560"
  },
  {
    "text": "is there are a lot of challenges to get",
    "start": "233560",
    "end": "235480"
  },
  {
    "text": "this done first and foremost is usually",
    "start": "235480",
    "end": "238640"
  },
  {
    "text": "there's a and the conception to a decent",
    "start": "238640",
    "end": "242959"
  },
  {
    "text": "extent it is true that unless you are a",
    "start": "242959",
    "end": "244959"
  },
  {
    "text": "data engineer you cannot do stream",
    "start": "244959",
    "end": "247120"
  },
  {
    "text": "processing this is because most of the",
    "start": "247120",
    "end": "249040"
  },
  {
    "text": "Frameworks out there are very jvm",
    "start": "249040",
    "end": "252040"
  },
  {
    "text": "based second is complex",
    "start": "252040",
    "end": "254879"
  },
  {
    "text": "Integrations there's a difference",
    "start": "254879",
    "end": "256479"
  },
  {
    "text": "between running on kubernetes versus",
    "start": "256479",
    "end": "258160"
  },
  {
    "text": "natively on kubernetes um for example",
    "start": "258160",
    "end": "260919"
  },
  {
    "text": "you could deploy a fling on kubernetes",
    "start": "260919",
    "end": "262639"
  },
  {
    "text": "using a kubernetes operator but it does",
    "start": "262639",
    "end": "264199"
  },
  {
    "text": "not understand kubernetes as it is it",
    "start": "264199",
    "end": "265880"
  },
  {
    "text": "was built with a different resource",
    "start": "265880",
    "end": "267880"
  },
  {
    "text": "model and things like that which is very",
    "start": "267880",
    "end": "269400"
  },
  {
    "text": "different from",
    "start": "269400",
    "end": "271919"
  },
  {
    "text": "kubernetes and lastly scaling um",
    "start": "271919",
    "end": "275160"
  },
  {
    "text": "kubernetes by itself is more a",
    "start": "275160",
    "end": "277680"
  },
  {
    "text": "deployment of one entity at a model it",
    "start": "277680",
    "end": "279600"
  },
  {
    "text": "does not understand streaming as a",
    "start": "279600",
    "end": "281400"
  },
  {
    "text": "concept it cannot understand let's say",
    "start": "281400",
    "end": "283639"
  },
  {
    "text": "when you have connected entities like",
    "start": "283639",
    "end": "285160"
  },
  {
    "text": "Source processing and things you need to",
    "start": "285160",
    "end": "287360"
  },
  {
    "text": "scale these things differently by",
    "start": "287360",
    "end": "290360"
  },
  {
    "text": "understanding the entire semantics of",
    "start": "290360",
    "end": "291960"
  },
  {
    "text": "streaming not just a point in time",
    "start": "291960",
    "end": "295639"
  },
  {
    "text": "scaling so that's where uh Numa flow",
    "start": "295639",
    "end": "298039"
  },
  {
    "text": "comes into play the way we seen um num",
    "start": "298039",
    "end": "301840"
  },
  {
    "text": "proi is to an is more like seress for",
    "start": "301840",
    "end": "305160"
  },
  {
    "text": "stream processing that means that we",
    "start": "305160",
    "end": "306840"
  },
  {
    "text": "want to enable developers to use the",
    "start": "306840",
    "end": "308639"
  },
  {
    "text": "framework without worrying about a lot",
    "start": "308639",
    "end": "310840"
  },
  {
    "text": "about what's happening behind the scenes",
    "start": "310840",
    "end": "312800"
  },
  {
    "text": "to start with we started off with lagage",
    "start": "312800",
    "end": "314759"
  },
  {
    "text": "agnostic this means that stream",
    "start": "314759",
    "end": "317039"
  },
  {
    "text": "processing is for everyone it's not just",
    "start": "317039",
    "end": "318560"
  },
  {
    "text": "for data Engineers or for jvm users it",
    "start": "318560",
    "end": "320880"
  },
  {
    "text": "should be for goang python rust it",
    "start": "320880",
    "end": "323759"
  },
  {
    "text": "doesn't matter right it should be open",
    "start": "323759",
    "end": "325160"
  },
  {
    "text": "up for",
    "start": "325160",
    "end": "326560"
  },
  {
    "text": "everyone second is De decoupling s",
    "start": "326560",
    "end": "329720"
  },
  {
    "text": "process from SNS if you look into most",
    "start": "329720",
    "end": "331880"
  },
  {
    "text": "of the processing users are more",
    "start": "331880",
    "end": "333560"
  },
  {
    "text": "interested about the payload rather than",
    "start": "333560",
    "end": "335840"
  },
  {
    "text": "where they got the payload from nobody",
    "start": "335840",
    "end": "338199"
  },
  {
    "text": "says so good I got the data from Kafka",
    "start": "338199",
    "end": "340680"
  },
  {
    "text": "rather they are more interested in what",
    "start": "340680",
    "end": "342319"
  },
  {
    "text": "is inside the payload rather than",
    "start": "342319",
    "end": "344319"
  },
  {
    "text": "whether it came from Pulsar sqs SNS or",
    "start": "344319",
    "end": "347479"
  },
  {
    "text": "even from an HTTP point is is always the",
    "start": "347479",
    "end": "350800"
  },
  {
    "text": "logic is with processing or the business",
    "start": "350800",
    "end": "352600"
  },
  {
    "text": "logic is with the",
    "start": "352600",
    "end": "354160"
  },
  {
    "text": "data and lastly we wanted to do scalable",
    "start": "354160",
    "end": "357199"
  },
  {
    "text": "and abstracted infrastructure what did",
    "start": "357199",
    "end": "359680"
  },
  {
    "text": "means is we didn't want users to worry",
    "start": "359680",
    "end": "361520"
  },
  {
    "text": "about scaling it should Auto scale by",
    "start": "361520",
    "end": "363479"
  },
  {
    "text": "itself no matter how complex your uh",
    "start": "363479",
    "end": "366160"
  },
  {
    "text": "your graph of processing is it can",
    "start": "366160",
    "end": "368880"
  },
  {
    "text": "understand it should be able to do Q",
    "start": "368880",
    "end": "370080"
  },
  {
    "text": "depth analysis and it should be able to",
    "start": "370080",
    "end": "372680"
  },
  {
    "text": "have an infrastructure that is very",
    "start": "372680",
    "end": "374560"
  },
  {
    "text": "close to Fire and forget you have a",
    "start": "374560",
    "end": "376599"
  },
  {
    "text": "pipeline running because these are",
    "start": "376599",
    "end": "377680"
  },
  {
    "text": "unbounded systems that never finish so",
    "start": "377680",
    "end": "380759"
  },
  {
    "text": "you kick off a job let's say start a",
    "start": "380759",
    "end": "383080"
  },
  {
    "text": "numl pipeline there will be P migration",
    "start": "383080",
    "end": "385440"
  },
  {
    "text": "node migration things like that but your",
    "start": "385440",
    "end": "387400"
  },
  {
    "text": "processing should work no matter what",
    "start": "387400",
    "end": "391400"
  },
  {
    "text": "so just to give a quick intro on one",
    "start": "391400",
    "end": "393840"
  },
  {
    "text": "line intro nlow is a kubernetes native",
    "start": "393840",
    "end": "396319"
  },
  {
    "text": "open source language agnostic realtime",
    "start": "396319",
    "end": "399080"
  },
  {
    "text": "stream processing data",
    "start": "399080",
    "end": "401360"
  },
  {
    "text": "platform now I will hand it over to my",
    "start": "401360",
    "end": "403680"
  },
  {
    "text": "good friend and co- maintainer of newf",
    "start": "403680",
    "end": "405479"
  },
  {
    "text": "to show you a demo of how it",
    "start": "405479",
    "end": "409039"
  },
  {
    "text": "happens and thank you",
    "start": "409199",
    "end": "411840"
  },
  {
    "text": "V so uh we have talked about a lot I",
    "start": "411840",
    "end": "415680"
  },
  {
    "text": "think probably you're thinking hey this",
    "start": "415680",
    "end": "418160"
  },
  {
    "text": "thing sounds interesting",
    "start": "418160",
    "end": "420160"
  },
  {
    "text": "but can you show me how it works and now",
    "start": "420160",
    "end": "422960"
  },
  {
    "text": "it's the time so we're going to do a",
    "start": "422960",
    "end": "425039"
  },
  {
    "text": "live demo to Showcase how to use num to",
    "start": "425039",
    "end": "427000"
  },
  {
    "text": "do stream data processing right Everyone",
    "start": "427000",
    "end": "430000"
  },
  {
    "text": "likes demo",
    "start": "430000",
    "end": "431360"
  },
  {
    "text": "right yeah nothing beats a life",
    "start": "431360",
    "end": "434080"
  },
  {
    "text": "demo so let me say some context for this",
    "start": "434080",
    "end": "436800"
  },
  {
    "text": "demo assume we are running a e-commerce",
    "start": "436800",
    "end": "438840"
  },
  {
    "text": "platform we're selling a lot of",
    "start": "438840",
    "end": "440680"
  },
  {
    "text": "different products from different",
    "start": "440680",
    "end": "441759"
  },
  {
    "text": "categories could be like electronic",
    "start": "441759",
    "end": "443840"
  },
  {
    "text": "devices could be toys could be clothes",
    "start": "443840",
    "end": "446520"
  },
  {
    "text": "shoes and you have uh we have a lot of",
    "start": "446520",
    "end": "449120"
  },
  {
    "text": "orders coming from different clients",
    "start": "449120",
    "end": "450680"
  },
  {
    "text": "from web browser from cell phone apps",
    "start": "450680",
    "end": "453879"
  },
  {
    "text": "and we want to do some streaming",
    "start": "453879",
    "end": "456039"
  },
  {
    "text": "analytics for those streaming orders we",
    "start": "456039",
    "end": "458080"
  },
  {
    "text": "want to see products in which category",
    "start": "458080",
    "end": "460599"
  },
  {
    "text": "was the most popular in the past one",
    "start": "460599",
    "end": "462759"
  },
  {
    "text": "hour even one minute right we want to",
    "start": "462759",
    "end": "465199"
  },
  {
    "text": "see you know what's the revenue of this",
    "start": "465199",
    "end": "466879"
  },
  {
    "text": "category and how many sold items in",
    "start": "466879",
    "end": "469440"
  },
  {
    "text": "those",
    "start": "469440",
    "end": "470560"
  },
  {
    "text": "category so this is a very common use",
    "start": "470560",
    "end": "472879"
  },
  {
    "text": "case in in streaming analysis that by by",
    "start": "472879",
    "end": "476319"
  },
  {
    "text": "understand this kind of information you",
    "start": "476319",
    "end": "477800"
  },
  {
    "text": "will better help us to",
    "start": "477800",
    "end": "480280"
  },
  {
    "text": "to prepare or adjust the business",
    "start": "480280",
    "end": "482199"
  },
  {
    "text": "strategies right so to do this properly",
    "start": "482199",
    "end": "486120"
  },
  {
    "text": "you're going to end up with you know",
    "start": "486120",
    "end": "487280"
  },
  {
    "text": "having something like a c topic and then",
    "start": "487280",
    "end": "489360"
  },
  {
    "text": "have those streaming orders s to the C",
    "start": "489360",
    "end": "491520"
  },
  {
    "text": "topic and then have a you know",
    "start": "491520",
    "end": "492639"
  },
  {
    "text": "asynchronized data processing pipeline",
    "start": "492639",
    "end": "495120"
  },
  {
    "text": "do some map reduce operations and get",
    "start": "495120",
    "end": "497080"
  },
  {
    "text": "the result get the a result",
    "start": "497080",
    "end": "499759"
  },
  {
    "text": "right so here's my demo plan so I'm not",
    "start": "499759",
    "end": "503240"
  },
  {
    "text": "going to focus on the back end Ser I",
    "start": "503240",
    "end": "504599"
  },
  {
    "text": "mentioned in the previous diagram but",
    "start": "504599",
    "end": "506440"
  },
  {
    "text": "instead I'm going to have a a small",
    "start": "506440",
    "end": "507800"
  },
  {
    "text": "piece of code simulating the kind of",
    "start": "507800",
    "end": "509800"
  },
  {
    "text": "streaming orders right into a c topic",
    "start": "509800",
    "end": "512360"
  },
  {
    "text": "and then I'm going to create a numl",
    "start": "512360",
    "end": "514760"
  },
  {
    "text": "pipeline to ingest the data from the C",
    "start": "514760",
    "end": "517279"
  },
  {
    "text": "topic and then do some map reduce",
    "start": "517279",
    "end": "518800"
  },
  {
    "text": "operation and in then we're going to",
    "start": "518800",
    "end": "520680"
  },
  {
    "text": "verify if the reduced if the aggregate",
    "start": "520680",
    "end": "523240"
  },
  {
    "text": "information is something we we",
    "start": "523240",
    "end": "526959"
  },
  {
    "text": "expect quickly looking to uh the numl",
    "start": "527880",
    "end": "531760"
  },
  {
    "text": "pipeline topology so in nflow each data",
    "start": "531760",
    "end": "534600"
  },
  {
    "text": "proc step is called a Vertex we have",
    "start": "534600",
    "end": "537160"
  },
  {
    "text": "three different kind of verx in nlow one",
    "start": "537160",
    "end": "539000"
  },
  {
    "text": "is called",
    "start": "539000",
    "end": "539959"
  },
  {
    "text": "source and sync right that's easy to",
    "start": "539959",
    "end": "542600"
  },
  {
    "text": "understand Source used to inest data",
    "start": "542600",
    "end": "544120"
  },
  {
    "text": "from a data source sync is right to some",
    "start": "544120",
    "end": "546399"
  },
  {
    "text": "data data um data syns and there's",
    "start": "546399",
    "end": "549920"
  },
  {
    "text": "another one called a UDF which stands",
    "start": "549920",
    "end": "551560"
  },
  {
    "text": "for a user def function and for this",
    "start": "551560",
    "end": "554600"
  },
  {
    "text": "specific use case we're going to have a",
    "start": "554600",
    "end": "556240"
  },
  {
    "text": "you building Kafka Source vertex which",
    "start": "556240",
    "end": "559519"
  },
  {
    "text": "is used to Consumer data from the cka",
    "start": "559519",
    "end": "561600"
  },
  {
    "text": "and you don't need to write any code to",
    "start": "561600",
    "end": "563000"
  },
  {
    "text": "Consumer data you just use some",
    "start": "563000",
    "end": "564399"
  },
  {
    "text": "configuration say hey what's your ca",
    "start": "564399",
    "end": "566200"
  },
  {
    "text": "Brokers and what's your topic or",
    "start": "566200",
    "end": "567680"
  },
  {
    "text": "consumer group you'll get those those",
    "start": "567680",
    "end": "569680"
  },
  {
    "text": "data inest pipeline",
    "start": "569680",
    "end": "571519"
  },
  {
    "text": "automatically and then this will be",
    "start": "571519",
    "end": "573279"
  },
  {
    "text": "followed by U UD UDF vertex which we're",
    "start": "573279",
    "end": "576680"
  },
  {
    "text": "going to do it here for data enrichment",
    "start": "576680",
    "end": "579560"
  },
  {
    "text": "and some sort of you know map operation",
    "start": "579560",
    "end": "582839"
  },
  {
    "text": "and then we're going to do a reduce",
    "start": "582839",
    "end": "583920"
  },
  {
    "text": "operation to aggre data here we're going",
    "start": "583920",
    "end": "586200"
  },
  {
    "text": "Agate per category of the uh of the sold",
    "start": "586200",
    "end": "589760"
  },
  {
    "text": "uh product right and then in the end for",
    "start": "589760",
    "end": "593279"
  },
  {
    "text": "the aggregated data we're going to use a",
    "start": "593279",
    "end": "595880"
  },
  {
    "text": "another building sync a cka syn to write",
    "start": "595880",
    "end": "598800"
  },
  {
    "text": "another cka",
    "start": "598800",
    "end": "601320"
  },
  {
    "text": "topic and before going to the demo let's",
    "start": "601800",
    "end": "604959"
  },
  {
    "text": "also look into the data transformation",
    "start": "604959",
    "end": "606519"
  },
  {
    "text": "in this",
    "start": "606519",
    "end": "607480"
  },
  {
    "text": "pipeline so this is the this is the you",
    "start": "607480",
    "end": "610600"
  },
  {
    "text": "know original order information as I",
    "start": "610600",
    "end": "611920"
  },
  {
    "text": "mentioned earlier is you know something",
    "start": "611920",
    "end": "613760"
  },
  {
    "text": "we I you know randomly generated for the",
    "start": "613760",
    "end": "616760"
  },
  {
    "text": "the order so there's order ID and the",
    "start": "616760",
    "end": "619120"
  },
  {
    "text": "order time and there are a list of sold",
    "start": "619120",
    "end": "621640"
  },
  {
    "text": "items in this order and somehow there's",
    "start": "621640",
    "end": "623760"
  },
  {
    "text": "no you know there's no price there's no",
    "start": "623760",
    "end": "626000"
  },
  {
    "text": "produ product category information in",
    "start": "626000",
    "end": "628079"
  },
  {
    "text": "this order information",
    "start": "628079",
    "end": "630160"
  },
  {
    "text": "there's order there's only a prodct ID",
    "start": "630160",
    "end": "631920"
  },
  {
    "text": "over there so what we need to do in the",
    "start": "631920",
    "end": "634160"
  },
  {
    "text": "you map operation we're going to do a",
    "start": "634160",
    "end": "636079"
  },
  {
    "text": "data enrichment to add those missing",
    "start": "636079",
    "end": "637800"
  },
  {
    "text": "information like price like a category",
    "start": "637800",
    "end": "640720"
  },
  {
    "text": "ID and and",
    "start": "640720",
    "end": "642320"
  },
  {
    "text": "name and think about the original order",
    "start": "642320",
    "end": "644920"
  },
  {
    "text": "you actually can have one order",
    "start": "644920",
    "end": "646720"
  },
  {
    "text": "containing multiple um products and",
    "start": "646720",
    "end": "649120"
  },
  {
    "text": "those product could be from different",
    "start": "649120",
    "end": "650639"
  },
  {
    "text": "categories so in this case we want to do",
    "start": "650639",
    "end": "652800"
  },
  {
    "text": "aggregation on this category we need to",
    "start": "652800",
    "end": "655000"
  },
  {
    "text": "do a flat mapping map operation so which",
    "start": "655000",
    "end": "657399"
  },
  {
    "text": "means we're going to convert to one",
    "start": "657399",
    "end": "658600"
  },
  {
    "text": "order information into multiple and each",
    "start": "658600",
    "end": "660240"
  },
  {
    "text": "one represents one",
    "start": "660240",
    "end": "661920"
  },
  {
    "text": "category and then in the",
    "start": "661920",
    "end": "664120"
  },
  {
    "text": "end uh after reduce we're going to see",
    "start": "664120",
    "end": "666680"
  },
  {
    "text": "the aggregate information like this",
    "start": "666680",
    "end": "668079"
  },
  {
    "text": "we're going to see U you know window",
    "start": "668079",
    "end": "670360"
  },
  {
    "text": "start time window end time here we're",
    "start": "670360",
    "end": "672160"
  },
  {
    "text": "we're doing like a uh one minute window",
    "start": "672160",
    "end": "675279"
  },
  {
    "text": "so you're going to see like a start time",
    "start": "675279",
    "end": "676680"
  },
  {
    "text": "end time here and the category",
    "start": "676680",
    "end": "678040"
  },
  {
    "text": "information and also what is the sold",
    "start": "678040",
    "end": "679959"
  },
  {
    "text": "items number and what is revenue okay so",
    "start": "679959",
    "end": "682600"
  },
  {
    "text": "the data transformation for for uh the",
    "start": "682600",
    "end": "684760"
  },
  {
    "text": "demo I'm going to",
    "start": "684760",
    "end": "686000"
  },
  {
    "text": "do and now let's go to demo",
    "start": "686000",
    "end": "690720"
  },
  {
    "text": "uh for this demo I actually uh I'm doing",
    "start": "690880",
    "end": "693320"
  },
  {
    "text": "this demo in my local laptops I'm",
    "start": "693320",
    "end": "695320"
  },
  {
    "text": "running a K3 cluster on my laptop so I",
    "start": "695320",
    "end": "697680"
  },
  {
    "text": "already created I already created for",
    "start": "697680",
    "end": "699760"
  },
  {
    "text": "pipeline here for this demo just uh",
    "start": "699760",
    "end": "702680"
  },
  {
    "text": "before I came to the",
    "start": "702680",
    "end": "704360"
  },
  {
    "text": "stage is a I'm good enough okay",
    "start": "704360",
    "end": "709480"
  },
  {
    "text": "anyway maybe it's not easy to read so I",
    "start": "709480",
    "end": "712839"
  },
  {
    "text": "have a uh order order G application",
    "start": "712839",
    "end": "718639"
  },
  {
    "text": "which is the one I mentioned earlier",
    "start": "719720",
    "end": "721320"
  },
  {
    "text": "that uh you know I have a small piece of",
    "start": "721320",
    "end": "723040"
  },
  {
    "text": "code to simulate the order so you're",
    "start": "723040",
    "end": "724560"
  },
  {
    "text": "seeing the order information like this",
    "start": "724560",
    "end": "726079"
  },
  {
    "text": "is in you know in JSM format even though",
    "start": "726079",
    "end": "729680"
  },
  {
    "text": "uh num does not does not have a hard",
    "start": "729680",
    "end": "731959"
  },
  {
    "text": "requirement on the data format but for",
    "start": "731959",
    "end": "734480"
  },
  {
    "text": "this time I'm using J on okay it's easy",
    "start": "734480",
    "end": "736199"
  },
  {
    "text": "to do and now I'm going to uh show",
    "start": "736199",
    "end": "739959"
  },
  {
    "text": "everything in UI coming from out",
    "start": "739959",
    "end": "742639"
  },
  {
    "text": "nlow is something like this so I I",
    "start": "742639",
    "end": "747279"
  },
  {
    "text": "installed the the N pipeline in default",
    "start": "747279",
    "end": "749560"
  },
  {
    "text": "name space in my cluster oh",
    "start": "749560",
    "end": "753680"
  },
  {
    "text": "sorry so I click the default we're",
    "start": "753680",
    "end": "757199"
  },
  {
    "text": "seeing there's a pipeline named eem",
    "start": "757199",
    "end": "760079"
  },
  {
    "text": "order analysis",
    "start": "760079",
    "end": "763600"
  },
  {
    "text": "and you can actually do a lot of",
    "start": "763600",
    "end": "765760"
  },
  {
    "text": "different things with UI if you want to",
    "start": "765760",
    "end": "767480"
  },
  {
    "text": "you know pause a pipeline or delete",
    "start": "767480",
    "end": "768880"
  },
  {
    "text": "pipeline you can click some other",
    "start": "768880",
    "end": "770360"
  },
  {
    "text": "buttons here but if you want to create a",
    "start": "770360",
    "end": "771720"
  },
  {
    "text": "new pipeline what you can do is click",
    "start": "771720",
    "end": "773040"
  },
  {
    "text": "the button here and put the uh spec and",
    "start": "773040",
    "end": "775560"
  },
  {
    "text": "then do a submit so for this pre created",
    "start": "775560",
    "end": "778199"
  },
  {
    "text": "pipeline I just click the icon here",
    "start": "778199",
    "end": "780399"
  },
  {
    "text": "we're going to the pipeline",
    "start": "780399",
    "end": "782440"
  },
  {
    "text": "View and uh similar to the pipeline",
    "start": "782440",
    "end": "786040"
  },
  {
    "text": "topology I mentioned in the slides we",
    "start": "786040",
    "end": "787880"
  },
  {
    "text": "have a uh we have a in vertex if you",
    "start": "787880",
    "end": "791360"
  },
  {
    "text": "look at the spec here we're doing like",
    "start": "791360",
    "end": "793320"
  },
  {
    "text": "it's like C Topic in consumer group and",
    "start": "793320",
    "end": "796959"
  },
  {
    "text": "you're not seeing any image or anything",
    "start": "796959",
    "end": "799360"
  },
  {
    "text": "like that so it's like a building cic",
    "start": "799360",
    "end": "801120"
  },
  {
    "text": "topic can automatically get the data",
    "start": "801120",
    "end": "803399"
  },
  {
    "text": "from the Kafka service I install in my",
    "start": "803399",
    "end": "805720"
  },
  {
    "text": "cluster and it's followed by U map uh a",
    "start": "805720",
    "end": "809279"
  },
  {
    "text": "UDF here if you look at the spec you're",
    "start": "809279",
    "end": "811560"
  },
  {
    "text": "seeing we're running an image for it so",
    "start": "811560",
    "end": "813600"
  },
  {
    "text": "I'm going to talk about what's running",
    "start": "813600",
    "end": "814680"
  },
  {
    "text": "in this image later on and then uh",
    "start": "814680",
    "end": "817600"
  },
  {
    "text": "there's a reduced vertex and if you look",
    "start": "817600",
    "end": "820040"
  },
  {
    "text": "at the spec uh similarly there's an",
    "start": "820040",
    "end": "822240"
  },
  {
    "text": "image used for it and then uh there's a",
    "start": "822240",
    "end": "824720"
  },
  {
    "text": "group by and window so here we're using",
    "start": "824720",
    "end": "826959"
  },
  {
    "text": "a fixed one minut window for this",
    "start": "826959",
    "end": "830240"
  },
  {
    "text": "aggregation and then in the end um",
    "start": "830240",
    "end": "832920"
  },
  {
    "text": "instead of doing only one sync with",
    "start": "832920",
    "end": "837040"
  },
  {
    "text": "Kafka right into Kafka topic actually",
    "start": "837040",
    "end": "839519"
  },
  {
    "text": "created two other syns for this pipeline",
    "start": "839519",
    "end": "842759"
  },
  {
    "text": "one is a lock sync also it's a user",
    "start": "842759",
    "end": "845639"
  },
  {
    "text": "defin sorry it's the building sync that",
    "start": "845639",
    "end": "849480"
  },
  {
    "text": "we can um see the output in the system",
    "start": "849480",
    "end": "852320"
  },
  {
    "text": "LW for in better for easier",
    "start": "852320",
    "end": "855680"
  },
  {
    "text": "visualization actually I create another",
    "start": "855680",
    "end": "857440"
  },
  {
    "text": "one it's like a graph sync which means",
    "start": "857440",
    "end": "859560"
  },
  {
    "text": "I'm going to send the AA data to a graph",
    "start": "859560",
    "end": "861720"
  },
  {
    "text": "dashboard we're going to you know see",
    "start": "861720",
    "end": "863160"
  },
  {
    "text": "all this",
    "start": "863160",
    "end": "864120"
  },
  {
    "text": "information some fancy chart",
    "start": "864120",
    "end": "867199"
  },
  {
    "text": "okay so if you look at this pipeline uh",
    "start": "867199",
    "end": "870199"
  },
  {
    "text": "each box is the vertex one verx is",
    "start": "870199",
    "end": "872519"
  },
  {
    "text": "nothing but a set of parts so we Auto",
    "start": "872519",
    "end": "874720"
  },
  {
    "text": "each vertex you're seeing a number here",
    "start": "874720",
    "end": "876680"
  },
  {
    "text": "which is a PA number you know for this",
    "start": "876680",
    "end": "879040"
  },
  {
    "text": "demo is through is very low so we're",
    "start": "879040",
    "end": "881240"
  },
  {
    "text": "seeing like the through here 1 minute 5",
    "start": "881240",
    "end": "883839"
  },
  {
    "text": "minutes and 15 minutes average through",
    "start": "883839",
    "end": "886880"
  },
  {
    "text": "something like that you also can see",
    "start": "886880",
    "end": "888320"
  },
  {
    "text": "some back",
    "start": "888320",
    "end": "889360"
  },
  {
    "text": "pressure and backlog I mean and what is",
    "start": "889360",
    "end": "892880"
  },
  {
    "text": "the time a watermark for this data",
    "start": "892880",
    "end": "894600"
  },
  {
    "text": "processing so if you look into the flat",
    "start": "894600",
    "end": "897759"
  },
  {
    "text": "map uh",
    "start": "897759",
    "end": "899600"
  },
  {
    "text": "we actually uh I actually print out the",
    "start": "899600",
    "end": "902360"
  },
  {
    "text": "the flat map order information if you",
    "start": "902360",
    "end": "904040"
  },
  {
    "text": "look at the lck here um I think",
    "start": "904040",
    "end": "908639"
  },
  {
    "text": "it's R",
    "start": "908639",
    "end": "911880"
  },
  {
    "text": "order",
    "start": "911880",
    "end": "913519"
  },
  {
    "text": "yeah so it's a flam order information",
    "start": "913519",
    "end": "918759"
  },
  {
    "text": "uh what happened",
    "start": "924959",
    "end": "929160"
  },
  {
    "text": "somehow you know I I I miss I should say",
    "start": "938000",
    "end": "941440"
  },
  {
    "text": "nothing bits a life D successful last",
    "start": "941440",
    "end": "944920"
  },
  {
    "text": "name all right uh anyways let's look",
    "start": "944920",
    "end": "947720"
  },
  {
    "text": "into the log output",
    "start": "947720",
    "end": "951120"
  },
  {
    "text": "uh you we actually seeing the lock",
    "start": "951399",
    "end": "953759"
  },
  {
    "text": "output a information here if you look at",
    "start": "953759",
    "end": "956480"
  },
  {
    "text": "the you know there's a window start time",
    "start": "956480",
    "end": "957880"
  },
  {
    "text": "end time and uh if you look at the time",
    "start": "957880",
    "end": "961000"
  },
  {
    "text": "it's like 14 it's UDC time 1659 which is",
    "start": "961000",
    "end": "965480"
  },
  {
    "text": "one minute ago you're seeing you know",
    "start": "965480",
    "end": "967040"
  },
  {
    "text": "aggre information like this for each",
    "start": "967040",
    "end": "968720"
  },
  {
    "text": "different category there's a you know a",
    "start": "968720",
    "end": "970560"
  },
  {
    "text": "category name and uh sold items item",
    "start": "970560",
    "end": "975279"
  },
  {
    "text": "account and revenue things like",
    "start": "975279",
    "end": "977680"
  },
  {
    "text": "that um if we go to the grow final",
    "start": "977680",
    "end": "980959"
  },
  {
    "text": "dashboard you're seeing you know I",
    "start": "980959",
    "end": "983000"
  },
  {
    "text": "create two charts here so on the left",
    "start": "983000",
    "end": "984839"
  },
  {
    "text": "side is a s item U per category and on",
    "start": "984839",
    "end": "988279"
  },
  {
    "text": "the right side is the Revenue you're",
    "start": "988279",
    "end": "989480"
  },
  {
    "text": "seeing you very clearly different",
    "start": "989480",
    "end": "991839"
  },
  {
    "text": "category has different s items and",
    "start": "991839",
    "end": "993319"
  },
  {
    "text": "category over",
    "start": "993319",
    "end": "995920"
  },
  {
    "text": "there okay uh back to the",
    "start": "996120",
    "end": "1000800"
  },
  {
    "text": "slides",
    "start": "1002399",
    "end": "1005240"
  },
  {
    "text": "let's look at the pipeline spec n is Ku",
    "start": "1005240",
    "end": "1008959"
  },
  {
    "text": "native project so we're using crd to",
    "start": "1008959",
    "end": "1011040"
  },
  {
    "text": "represent uh the data proc in jobs so uh",
    "start": "1011040",
    "end": "1015040"
  },
  {
    "text": "we we use the CD name Pipeline and for",
    "start": "1015040",
    "end": "1017160"
  },
  {
    "text": "the pipeline spec there two major",
    "start": "1017160",
    "end": "1019360"
  },
  {
    "text": "sections one is called vertices which is",
    "start": "1019360",
    "end": "1021040"
  },
  {
    "text": "used to define uh the data processing",
    "start": "1021040",
    "end": "1023560"
  },
  {
    "text": "and steps here we have in which is",
    "start": "1023560",
    "end": "1025319"
  },
  {
    "text": "Source vertex and then there's a UDF two",
    "start": "1025319",
    "end": "1027918"
  },
  {
    "text": "udfs one is math one is reduced and",
    "start": "1027919",
    "end": "1029839"
  },
  {
    "text": "there's a uh sync and there two second",
    "start": "1029839",
    "end": "1033880"
  },
  {
    "text": "major section is called Edge which is",
    "start": "1033880",
    "end": "1036000"
  },
  {
    "text": "use Define the relationship between",
    "start": "1036000",
    "end": "1037600"
  },
  {
    "text": "those Edge between those",
    "start": "1037600",
    "end": "1040120"
  },
  {
    "text": "vertices and now if let's look into uh",
    "start": "1040120",
    "end": "1043000"
  },
  {
    "text": "what's running in those map images on",
    "start": "1043000",
    "end": "1045400"
  },
  {
    "text": "the right side is a map function here is",
    "start": "1045400",
    "end": "1047280"
  },
  {
    "text": "a could read read goem so if you look at",
    "start": "1047280",
    "end": "1051120"
  },
  {
    "text": "the function signature there's nothing",
    "start": "1051120",
    "end": "1053000"
  },
  {
    "text": "special there's only one thing like a",
    "start": "1053000",
    "end": "1054640"
  },
  {
    "text": "map and data and what we do in this math",
    "start": "1054640",
    "end": "1058400"
  },
  {
    "text": "function is like we convert the one",
    "start": "1058400",
    "end": "1060520"
  },
  {
    "text": "original order information to multiple",
    "start": "1060520",
    "end": "1062440"
  },
  {
    "text": "orders and do some data enrichment and",
    "start": "1062440",
    "end": "1065960"
  },
  {
    "text": "and there's one important thing here is",
    "start": "1065960",
    "end": "1067600"
  },
  {
    "text": "so when we return the uh flat message we",
    "start": "1067600",
    "end": "1070559"
  },
  {
    "text": "use a with keys which is a category ID",
    "start": "1070559",
    "end": "1072919"
  },
  {
    "text": "this one will be used for the the form",
    "start": "1072919",
    "end": "1075600"
  },
  {
    "text": "reduce",
    "start": "1075600",
    "end": "1076520"
  },
  {
    "text": "verx if you look at this function",
    "start": "1076520",
    "end": "1078440"
  },
  {
    "text": "there's nothing special it's like you",
    "start": "1078440",
    "end": "1079880"
  },
  {
    "text": "don't see any uh source and sync you're",
    "start": "1079880",
    "end": "1082480"
  },
  {
    "text": "not seeing any upstream verx or",
    "start": "1082480",
    "end": "1084039"
  },
  {
    "text": "Downstream verx so the pform will make",
    "start": "1084039",
    "end": "1086080"
  },
  {
    "text": "sure all the message sending into Source",
    "start": "1086080",
    "end": "1087840"
  },
  {
    "text": "or sending to oping verx will be sent to",
    "start": "1087840",
    "end": "1089919"
  },
  {
    "text": "your function and what you don't take",
    "start": "1089919",
    "end": "1092039"
  },
  {
    "text": "care we don't care",
    "start": "1092039",
    "end": "1093559"
  },
  {
    "text": "about a cka or you or you're going to S",
    "start": "1093559",
    "end": "1097080"
  },
  {
    "text": "send to another cka you only need to",
    "start": "1097080",
    "end": "1098640"
  },
  {
    "text": "handle the business logic here and look",
    "start": "1098640",
    "end": "1101559"
  },
  {
    "text": "look at the right side for the reduced",
    "start": "1101559",
    "end": "1103720"
  },
  {
    "text": "it's very similar there's you know",
    "start": "1103720",
    "end": "1105159"
  },
  {
    "text": "function signature slight different from",
    "start": "1105159",
    "end": "1107080"
  },
  {
    "text": "the map there's a you know reduced is a",
    "start": "1107080",
    "end": "1109240"
  },
  {
    "text": "channel so if you're using use a Java or",
    "start": "1109240",
    "end": "1113039"
  },
  {
    "text": "python you're going to see something",
    "start": "1113039",
    "end": "1114919"
  },
  {
    "text": "slight different you're going to see",
    "start": "1114919",
    "end": "1116120"
  },
  {
    "text": "list or iterator and what you need to do",
    "start": "1116120",
    "end": "1118840"
  },
  {
    "text": "here is some simple math you add up all",
    "start": "1118840",
    "end": "1121679"
  },
  {
    "text": "the items and all the uh amount which is",
    "start": "1121679",
    "end": "1124880"
  },
  {
    "text": "a revenue right and then in the end you",
    "start": "1124880",
    "end": "1127640"
  },
  {
    "text": "uh set set the result toj on screen",
    "start": "1127640",
    "end": "1131120"
  },
  {
    "text": "what's a window start time end time and",
    "start": "1131120",
    "end": "1132840"
  },
  {
    "text": "the category",
    "start": "1132840",
    "end": "1134200"
  },
  {
    "text": "information and you are not seeing any",
    "start": "1134200",
    "end": "1136400"
  },
  {
    "text": "you know um map operation or you know",
    "start": "1136400",
    "end": "1139520"
  },
  {
    "text": "map reduce mention in this reduce",
    "start": "1139520",
    "end": "1141120"
  },
  {
    "text": "function there's no source and sync and",
    "start": "1141120",
    "end": "1143559"
  },
  {
    "text": "this is a power of flow you can easily",
    "start": "1143559",
    "end": "1145480"
  },
  {
    "text": "switch your source and sync to different",
    "start": "1145480",
    "end": "1147480"
  },
  {
    "text": "type of you know if let's say you're not",
    "start": "1147480",
    "end": "1149080"
  },
  {
    "text": "using Kaa here using POS you can just e",
    "start": "1149080",
    "end": "1151520"
  },
  {
    "text": "switch the source you don't need to make",
    "start": "1151520",
    "end": "1153159"
  },
  {
    "text": "any change to your source",
    "start": "1153159",
    "end": "1156000"
  },
  {
    "text": "code all right I think that's all for",
    "start": "1156000",
    "end": "1158320"
  },
  {
    "text": "the demo and if you are interested in",
    "start": "1158320",
    "end": "1160240"
  },
  {
    "text": "demo here's a QR code if you want to run",
    "start": "1160240",
    "end": "1162600"
  },
  {
    "text": "it through by yourself in your own Comm",
    "start": "1162600",
    "end": "1165120"
  },
  {
    "text": "cluster can take a picture on this QR",
    "start": "1165120",
    "end": "1167200"
  },
  {
    "text": "code you'll take you like 5 10 5 to 10",
    "start": "1167200",
    "end": "1169600"
  },
  {
    "text": "minutes to uh run on your on L on kuet",
    "start": "1169600",
    "end": "1176720"
  },
  {
    "text": "cluster uh we just saw a demo which is",
    "start": "1176960",
    "end": "1179440"
  },
  {
    "text": "running in a line shape or tree shaped",
    "start": "1179440",
    "end": "1182039"
  },
  {
    "text": "pipeline actually can do way more way",
    "start": "1182039",
    "end": "1184360"
  },
  {
    "text": "more compliant than that so the first",
    "start": "1184360",
    "end": "1187039"
  },
  {
    "text": "picture she was you know running a NE",
    "start": "1187039",
    "end": "1189400"
  },
  {
    "text": "Pipeline with multiple source and",
    "start": "1189400",
    "end": "1191039"
  },
  {
    "text": "multiple syns so let's say you have a",
    "start": "1191039",
    "end": "1193280"
  },
  {
    "text": "you have data source coming from uh kka",
    "start": "1193280",
    "end": "1196600"
  },
  {
    "text": "and and HTTP you don't need to write to",
    "start": "1196600",
    "end": "1198720"
  },
  {
    "text": "different pipeline to do it you can",
    "start": "1198720",
    "end": "1200200"
  },
  {
    "text": "combine those two different sour into",
    "start": "1200200",
    "end": "1201679"
  },
  {
    "text": "one Pipeline",
    "start": "1201679",
    "end": "1203600"
  },
  {
    "text": "and and that's it right and this one you",
    "start": "1203600",
    "end": "1207280"
  },
  {
    "text": "case a a joining uh use case that uh you",
    "start": "1207280",
    "end": "1210799"
  },
  {
    "text": "can U join multiple Upstream vertices",
    "start": "1210799",
    "end": "1214440"
  },
  {
    "text": "into the same Downstream vertex and the",
    "start": "1214440",
    "end": "1217240"
  },
  {
    "text": "joining vertex could be a map joining or",
    "start": "1217240",
    "end": "1218919"
  },
  {
    "text": "a reduce",
    "start": "1218919",
    "end": "1221360"
  },
  {
    "text": "joining uh this one is even more",
    "start": "1221720",
    "end": "1223880"
  },
  {
    "text": "interesting we support cycling which",
    "start": "1223880",
    "end": "1225840"
  },
  {
    "text": "means you can send a message to someone",
    "start": "1225840",
    "end": "1227840"
  },
  {
    "text": "in front of you or even send to yourself",
    "start": "1227840",
    "end": "1231240"
  },
  {
    "text": "so this very useful when you want to do",
    "start": "1231240",
    "end": "1232679"
  },
  {
    "text": "some sort of reprocessing or",
    "start": "1232679",
    "end": "1234960"
  },
  {
    "text": "rewi we also have side input support and",
    "start": "1234960",
    "end": "1237440"
  },
  {
    "text": "side is a very important feature in",
    "start": "1237440",
    "end": "1238600"
  },
  {
    "text": "stream data processing that uh you can",
    "start": "1238600",
    "end": "1240720"
  },
  {
    "text": "broadcast or the change to your data",
    "start": "1240720",
    "end": "1242760"
  },
  {
    "text": "processing unit without interruption or",
    "start": "1242760",
    "end": "1246480"
  },
  {
    "text": "pipeline quickly summarize uh what is",
    "start": "1247760",
    "end": "1250600"
  },
  {
    "text": "nlow nflow is a stre data processing",
    "start": "1250600",
    "end": "1252760"
  },
  {
    "text": "native KU native platform that here C",
    "start": "1252760",
    "end": "1255520"
  },
  {
    "text": "native means it's not something not only",
    "start": "1255520",
    "end": "1257520"
  },
  {
    "text": "something running on kuet but also",
    "start": "1257520",
    "end": "1259200"
  },
  {
    "text": "leverage native feature to build the",
    "start": "1259200",
    "end": "1260880"
  },
  {
    "text": "platform it's very lightweight we",
    "start": "1260880",
    "end": "1262960"
  },
  {
    "text": "actually have many open source Community",
    "start": "1262960",
    "end": "1264960"
  },
  {
    "text": "user using in Edge tsis without any",
    "start": "1264960",
    "end": "1267400"
  },
  {
    "text": "internet",
    "start": "1267400",
    "end": "1269120"
  },
  {
    "text": "access it's a language Gnostic platform",
    "start": "1269120",
    "end": "1272159"
  },
  {
    "text": "uh we have four different language",
    "start": "1272159",
    "end": "1273440"
  },
  {
    "text": "support right now you can use this",
    "start": "1273440",
    "end": "1274760"
  },
  {
    "text": "language to write your own user defined",
    "start": "1274760",
    "end": "1276279"
  },
  {
    "text": "Source function uh us function or user",
    "start": "1276279",
    "end": "1278559"
  },
  {
    "text": "Sy python Goan rust and and",
    "start": "1278559",
    "end": "1282880"
  },
  {
    "text": "Java techn we support any different",
    "start": "1282880",
    "end": "1286880"
  },
  {
    "text": "language and we also have lot of",
    "start": "1286880",
    "end": "1288960"
  },
  {
    "text": "building Source instincts you don't do",
    "start": "1288960",
    "end": "1290440"
  },
  {
    "text": "right any code if you use those kind of",
    "start": "1290440",
    "end": "1292600"
  },
  {
    "text": "connectors to connect to a source",
    "start": "1292600",
    "end": "1294760"
  },
  {
    "text": "Instinct and we have Autos scaling",
    "start": "1294760",
    "end": "1296720"
  },
  {
    "text": "feature a of the box which means we",
    "start": "1296720",
    "end": "1299000"
  },
  {
    "text": "Autos scale u based each of verdicts",
    "start": "1299000",
    "end": "1301480"
  },
  {
    "text": "based on traffic and load if there's no",
    "start": "1301480",
    "end": "1304000"
  },
  {
    "text": "traffic we're going to Auto scale all",
    "start": "1304000",
    "end": "1305440"
  },
  {
    "text": "the way down to",
    "start": "1305440",
    "end": "1308039"
  },
  {
    "text": "zero and this is our open source",
    "start": "1308559",
    "end": "1311120"
  },
  {
    "text": "Community uh use case people are using",
    "start": "1311120",
    "end": "1314520"
  },
  {
    "text": "nlow to do anony detection uh do iot",
    "start": "1314520",
    "end": "1318279"
  },
  {
    "text": "data processing and and some of are",
    "start": "1318279",
    "end": "1320720"
  },
  {
    "text": "doing signal processing fra detection",
    "start": "1320720",
    "end": "1325840"
  },
  {
    "text": "Etc and I think that's all for our talk",
    "start": "1327000",
    "end": "1330480"
  },
  {
    "text": "if you are interested in nflow and",
    "start": "1330480",
    "end": "1332320"
  },
  {
    "text": "here's a QR code we'll take you to our",
    "start": "1332320",
    "end": "1334679"
  },
  {
    "text": "Po and we have slack Channel over there",
    "start": "1334679",
    "end": "1337159"
  },
  {
    "text": "if you want you have any question can",
    "start": "1337159",
    "end": "1339799"
  },
  {
    "text": "join the slack Channel and connect with",
    "start": "1339799",
    "end": "1341440"
  },
  {
    "text": "us thank",
    "start": "1341440",
    "end": "1344480"
  },
  {
    "text": "you and I think we're open for",
    "start": "1346480",
    "end": "1350520"
  },
  {
    "text": "[Music]",
    "start": "1354160",
    "end": "1357279"
  },
  {
    "text": "questions yeah sorry I",
    "start": "1373000",
    "end": "1375760"
  },
  {
    "text": "think it was successful demo just",
    "start": "1375760",
    "end": "1378159"
  },
  {
    "text": "because I click the wrong",
    "start": "1378159",
    "end": "1381080"
  },
  {
    "text": "container so if you look at this",
    "start": "1381080",
    "end": "1382880"
  },
  {
    "text": "container UDF here we are seeing those",
    "start": "1382880",
    "end": "1384840"
  },
  {
    "text": "flat map order information right",
    "start": "1384840",
    "end": "1388240"
  },
  {
    "text": "here yeah please go ahead yeah",
    "start": "1389240",
    "end": "1392559"
  },
  {
    "text": "successful demo yeah thank you um so in",
    "start": "1392559",
    "end": "1395720"
  },
  {
    "text": "a few words how would you compare um",
    "start": "1395720",
    "end": "1398760"
  },
  {
    "text": "Numa flow with something like aacha beam",
    "start": "1398760",
    "end": "1400679"
  },
  {
    "text": "running on top of a Apache Flink with an",
    "start": "1400679",
    "end": "1404159"
  },
  {
    "text": "operator the way you see is that apach",
    "start": "1404159",
    "end": "1407600"
  },
  {
    "text": "fling beam are very popular data",
    "start": "1407600",
    "end": "1410440"
  },
  {
    "text": "processing engines but nflow is a",
    "start": "1410440",
    "end": "1412400"
  },
  {
    "text": "general processing data processing",
    "start": "1412400",
    "end": "1413960"
  },
  {
    "text": "system we support the same data model",
    "start": "1413960",
    "end": "1416799"
  },
  {
    "text": "which includes the time series model",
    "start": "1416799",
    "end": "1419799"
  },
  {
    "text": "with uh sessionization and everything",
    "start": "1419799",
    "end": "1422640"
  },
  {
    "text": "but the main power is that you could",
    "start": "1422640",
    "end": "1424240"
  },
  {
    "text": "write it in any language and it is very",
    "start": "1424240",
    "end": "1426200"
  },
  {
    "text": "native to kubernetes for example in",
    "start": "1426200",
    "end": "1428000"
  },
  {
    "text": "Flink it's mostly you checko and roll",
    "start": "1428000",
    "end": "1430120"
  },
  {
    "text": "back this is all about moving data",
    "start": "1430120",
    "end": "1431640"
  },
  {
    "text": "forward and you could even replace these",
    "start": "1431640",
    "end": "1435279"
  },
  {
    "text": "vertices with for example it could be a",
    "start": "1435279",
    "end": "1437000"
  },
  {
    "text": "poly pipeline meaning you could have a",
    "start": "1437000",
    "end": "1439360"
  },
  {
    "text": "middle vertex written in Python and",
    "start": "1439360",
    "end": "1440919"
  },
  {
    "text": "that's how we do anomal detection at",
    "start": "1440919",
    "end": "1442360"
  },
  {
    "text": "into it so the core one vertex will be a",
    "start": "1442360",
    "end": "1444960"
  },
  {
    "text": "ml pipeline ml vtex which is deployed on",
    "start": "1444960",
    "end": "1447799"
  },
  {
    "text": "a GPU that can scale independently on",
    "start": "1447799",
    "end": "1450159"
  },
  {
    "text": "the whole system so this is more like um",
    "start": "1450159",
    "end": "1453440"
  },
  {
    "text": "this uses most of the Technologies of",
    "start": "1453440",
    "end": "1455200"
  },
  {
    "text": "kubernetes native to kubernetes so that",
    "start": "1455200",
    "end": "1457039"
  },
  {
    "text": "we are able to scale differently now if",
    "start": "1457039",
    "end": "1459080"
  },
  {
    "text": "you into pure data processing and if you",
    "start": "1459080",
    "end": "1461080"
  },
  {
    "text": "are running a Java like most of our data",
    "start": "1461080",
    "end": "1463480"
  },
  {
    "text": "Engineers who are using Java Flink",
    "start": "1463480",
    "end": "1465360"
  },
  {
    "text": "sounds fine but this is more about for",
    "start": "1465360",
    "end": "1468000"
  },
  {
    "text": "everyone streaming for everyone that",
    "start": "1468000",
    "end": "1469559"
  },
  {
    "text": "includes friend and developers",
    "start": "1469559",
    "end": "1471960"
  },
  {
    "text": "too thank",
    "start": "1471960",
    "end": "1475120"
  },
  {
    "text": "you one two oh yeah thank you for a",
    "start": "1484080",
    "end": "1487679"
  },
  {
    "text": "great demo uh I also work at a",
    "start": "1487679",
    "end": "1489840"
  },
  {
    "text": "e-commerce so I have the same problem of",
    "start": "1489840",
    "end": "1492000"
  },
  {
    "text": "just streaming data and then enriching",
    "start": "1492000",
    "end": "1495000"
  },
  {
    "text": "our data from source to a sync adding",
    "start": "1495000",
    "end": "1498080"
  },
  {
    "text": "like embeddings to orders and like",
    "start": "1498080",
    "end": "1500000"
  },
  {
    "text": "category and store items and such U so I",
    "start": "1500000",
    "end": "1503000"
  },
  {
    "text": "was wondering like how Numa flow is",
    "start": "1503000",
    "end": "1505559"
  },
  {
    "text": "different from airflow or Dexter cuz",
    "start": "1505559",
    "end": "1508600"
  },
  {
    "text": "like we in the process of selecting um",
    "start": "1508600",
    "end": "1512080"
  },
  {
    "text": "vendor so it's kind of curious air flow",
    "start": "1512080",
    "end": "1514159"
  },
  {
    "text": "is more similar to Argo workflow where",
    "start": "1514159",
    "end": "1516279"
  },
  {
    "text": "you have batch system right meaning you",
    "start": "1516279",
    "end": "1518000"
  },
  {
    "text": "start off with the work and then you",
    "start": "1518000",
    "end": "1519399"
  },
  {
    "text": "finish the work and you move to the next",
    "start": "1519399",
    "end": "1520880"
  },
  {
    "text": "Vortex this is streaming meaning you can",
    "start": "1520880",
    "end": "1523159"
  },
  {
    "text": "imagine that this processing systems are",
    "start": "1523159",
    "end": "1525200"
  },
  {
    "text": "never going to end right you you could",
    "start": "1525200",
    "end": "1527919"
  },
  {
    "text": "like streams are coming from Kafka and",
    "start": "1527919",
    "end": "1529840"
  },
  {
    "text": "you keep processing over and over and",
    "start": "1529840",
    "end": "1531520"
  },
  {
    "text": "over right so these are long running",
    "start": "1531520",
    "end": "1533080"
  },
  {
    "text": "systems that is being used in Numa flow",
    "start": "1533080",
    "end": "1535799"
  },
  {
    "text": "so users use Numa flow as airflow as a",
    "start": "1535799",
    "end": "1538520"
  },
  {
    "text": "replacement for airflow because we have",
    "start": "1538520",
    "end": "1540720"
  },
  {
    "text": "something called map streaming so for",
    "start": "1540720",
    "end": "1542600"
  },
  {
    "text": "every input you can stream out the",
    "start": "1542600",
    "end": "1544480"
  },
  {
    "text": "result early so there I believe there is",
    "start": "1544480",
    "end": "1547799"
  },
  {
    "text": "a um car vehicle user like I I couldn't",
    "start": "1547799",
    "end": "1552799"
  },
  {
    "text": "reference it because they're not in the",
    "start": "1552799",
    "end": "1554240"
  },
  {
    "text": "users. MD but they use it for map",
    "start": "1554240",
    "end": "1556240"
  },
  {
    "text": "processing so they download map and they",
    "start": "1556240",
    "end": "1559080"
  },
  {
    "text": "use numao like airflow so that they can",
    "start": "1559080",
    "end": "1562480"
  },
  {
    "text": "stream the result out the yeah the one",
    "start": "1562480",
    "end": "1565120"
  },
  {
    "text": "word difference will be one is stream",
    "start": "1565120",
    "end": "1566559"
  },
  {
    "text": "processing another is batch processing",
    "start": "1566559",
    "end": "1568440"
  },
  {
    "text": "Mak sense thanks yeah the major",
    "start": "1568440",
    "end": "1570880"
  },
  {
    "text": "difference is about you know airflow is",
    "start": "1570880",
    "end": "1572760"
  },
  {
    "text": "about uh batch processing we actually",
    "start": "1572760",
    "end": "1574520"
  },
  {
    "text": "came from ARG workflow community so a",
    "start": "1574520",
    "end": "1576679"
  },
  {
    "text": "lot of users in argle community asking",
    "start": "1576679",
    "end": "1579120"
  },
  {
    "text": "you know are you able to support",
    "start": "1579120",
    "end": "1581080"
  },
  {
    "text": "screaming uh in Argo workflow actually",
    "start": "1581080",
    "end": "1583480"
  },
  {
    "text": "that's not doable so that's why we have",
    "start": "1583480",
    "end": "1585440"
  },
  {
    "text": "this project",
    "start": "1585440",
    "end": "1588639"
  },
  {
    "text": "hi I have a bit of more technical",
    "start": "1589120",
    "end": "1591840"
  },
  {
    "text": "question uh do you have some system for",
    "start": "1591840",
    "end": "1597159"
  },
  {
    "text": "like persistence and data or it's on",
    "start": "1597159",
    "end": "1599760"
  },
  {
    "text": "completely on",
    "start": "1599760",
    "end": "1602480"
  },
  {
    "text": "PS we uh so every the data movement is",
    "start": "1602480",
    "end": "1606279"
  },
  {
    "text": "so at any point we don't lose or corrup",
    "start": "1606279",
    "end": "1608000"
  },
  {
    "text": "data so the what happens between data",
    "start": "1608000",
    "end": "1609919"
  },
  {
    "text": "movement is we move through a rough",
    "start": "1609919",
    "end": "1611399"
  },
  {
    "text": "protocol so that data is never lost that",
    "start": "1611399",
    "end": "1614080"
  },
  {
    "text": "is inherently managed by the",
    "start": "1614080",
    "end": "1616799"
  },
  {
    "text": "platform right so it's so so it leaves",
    "start": "1616799",
    "end": "1619679"
  },
  {
    "text": "on the platform when it's yeah that's",
    "start": "1619679",
    "end": "1622279"
  },
  {
    "text": "the responsibility of the platform to",
    "start": "1622279",
    "end": "1623640"
  },
  {
    "text": "make sure that no Lo data should ever be",
    "start": "1623640",
    "end": "1625520"
  },
  {
    "text": "corrupted or lost so we have something",
    "start": "1625520",
    "end": "1627840"
  },
  {
    "text": "called inter buffers uh running behind",
    "start": "1627840",
    "end": "1631279"
  },
  {
    "text": "the scene uh and then the data movement",
    "start": "1631279",
    "end": "1634000"
  },
  {
    "text": "from one Vex to another actually is",
    "start": "1634000",
    "end": "1635720"
  },
  {
    "text": "sitting in a rough based persistant",
    "start": "1635720",
    "end": "1637720"
  },
  {
    "text": "layer so we will make sure there's no",
    "start": "1637720",
    "end": "1639679"
  },
  {
    "text": "data",
    "start": "1639679",
    "end": "1641919"
  },
  {
    "text": "loss thank you hi so uh one question",
    "start": "1644320",
    "end": "1647600"
  },
  {
    "text": "from my side uh so if we have a Kafka",
    "start": "1647600",
    "end": "1650919"
  },
  {
    "text": "consumer and and a producer right so",
    "start": "1650919",
    "end": "1655200"
  },
  {
    "text": "does num fit in the between producer and",
    "start": "1655200",
    "end": "1658640"
  },
  {
    "text": "the consumer or it can go beyond you",
    "start": "1658640",
    "end": "1662640"
  },
  {
    "text": "know like a when it produces then",
    "start": "1662640",
    "end": "1664559"
  },
  {
    "text": "consume is it fit in between or is it",
    "start": "1664559",
    "end": "1667640"
  },
  {
    "text": "consumed to another Downstream",
    "start": "1667640",
    "end": "1669840"
  },
  {
    "text": "applications it is mostly consumed to so",
    "start": "1669840",
    "end": "1672279"
  },
  {
    "text": "you can imagine consume to produce and",
    "start": "1672279",
    "end": "1674159"
  },
  {
    "text": "again consume back so you you could",
    "start": "1674159",
    "end": "1676240"
  },
  {
    "text": "change it how chain it however you want",
    "start": "1676240",
    "end": "1678200"
  },
  {
    "text": "it can Feit either way that's correct",
    "start": "1678200",
    "end": "1680039"
  },
  {
    "text": "that's correct okay",
    "start": "1680039",
    "end": "1682879"
  },
  {
    "text": "thanks maybe one more",
    "start": "1684200",
    "end": "1687880"
  },
  {
    "text": "question thank",
    "start": "1689760",
    "end": "1692490"
  },
  {
    "text": "[Music]",
    "start": "1692490",
    "end": "1695539"
  },
  {
    "text": "you so what would be involved in writing",
    "start": "1696799",
    "end": "1700120"
  },
  {
    "text": "a custom sync it's as simple as writing",
    "start": "1700120",
    "end": "1703440"
  },
  {
    "text": "a custom map as simple as that um there",
    "start": "1703440",
    "end": "1707720"
  },
  {
    "text": "is no",
    "start": "1707720",
    "end": "1708679"
  },
  {
    "text": "nothing more complex than that you'll",
    "start": "1708679",
    "end": "1710320"
  },
  {
    "text": "get all the features but just by",
    "start": "1710320",
    "end": "1711840"
  },
  {
    "text": "implementing around five lines of code",
    "start": "1711840",
    "end": "1714679"
  },
  {
    "text": "yes um we have into it has a booth uh",
    "start": "1714679",
    "end": "1718080"
  },
  {
    "text": "for both for argoon and for the cube con",
    "start": "1718080",
    "end": "1721159"
  },
  {
    "text": "uh we will be there uh please come by",
    "start": "1721159",
    "end": "1723679"
  },
  {
    "text": "we'll see show you some real demos to",
    "start": "1723679",
    "end": "1725720"
  },
  {
    "text": "real pipelines running for both",
    "start": "1725720",
    "end": "1727799"
  },
  {
    "text": "streaming data processing and for ML so",
    "start": "1727799",
    "end": "1730760"
  },
  {
    "text": "this is a example coding go in to write",
    "start": "1730760",
    "end": "1732600"
  },
  {
    "text": "a customer sync what you need to do is",
    "start": "1732600",
    "end": "1734519"
  },
  {
    "text": "to have a function like this function",
    "start": "1734519",
    "end": "1736440"
  },
  {
    "text": "like this and you start a main function",
    "start": "1736440",
    "end": "1738559"
  },
  {
    "text": "that's it",
    "start": "1738559",
    "end": "1740880"
  }
]