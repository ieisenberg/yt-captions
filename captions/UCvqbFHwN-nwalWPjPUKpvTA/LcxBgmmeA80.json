[
  {
    "text": "okay thanks everyone for coming to this session before I start let me first",
    "start": "829",
    "end": "8460"
  },
  {
    "text": "introduce myself my name is Ben year I'm from Northeastern University and I'm",
    "start": "8460",
    "end": "14880"
  },
  {
    "text": "also one of the maintenance of dragonfly projects okay so today's topic is about",
    "start": "14880",
    "end": "21060"
  },
  {
    "text": "the decentralized distribution strategy injeong flag so today's agenda has four",
    "start": "21060",
    "end": "29340"
  },
  {
    "text": "parts the first part is Jennifer overview I will tell you about what is",
    "start": "29340",
    "end": "35190"
  },
  {
    "text": "dragonfly and Jennifer is history in the second part I will talk about",
    "start": "35190",
    "end": "40620"
  },
  {
    "text": "Jung flies architecture and how to jam fire components work together in the",
    "start": "40620",
    "end": "47190"
  },
  {
    "text": "third part I will introduce our design for the decentralized the mode of",
    "start": "47190",
    "end": "52469"
  },
  {
    "text": "dragonfly in the last part I will tell you something about our future work as a",
    "start": "52469",
    "end": "59309"
  },
  {
    "text": "roadmap okay let's get into the first part so first part is Jennifer overview",
    "start": "59309",
    "end": "67250"
  },
  {
    "text": "so what is drunk fly Jenna fly is a p2p based image and file distribution system",
    "start": "67250",
    "end": "74180"
  },
  {
    "text": "so someone might ask so why do we need dragonfly",
    "start": "74180",
    "end": "79560"
  },
  {
    "text": "I guess everyone here is using kubernetes so let's imagine that you",
    "start": "79560",
    "end": "86130"
  },
  {
    "text": "have a kubernetes cluster with more than 1,000 nodes so at that time you deploy a",
    "start": "86130",
    "end": "94200"
  },
  {
    "text": "game on set in your cluster so simultaneously more than 1,000 nodes are",
    "start": "94200",
    "end": "100200"
  },
  {
    "text": "trying to download the image from your image registry just like this diagram so",
    "start": "100200",
    "end": "107909"
  },
  {
    "text": "you can see that there is a network bottleneck in your image registry",
    "start": "107909",
    "end": "113399"
  },
  {
    "text": "because the load is very high in that image registry so the whole download",
    "start": "113399",
    "end": "119399"
  },
  {
    "text": "process will be very slow so how can we solve this problem what about using a",
    "start": "119399",
    "end": "127020"
  },
  {
    "text": "p2p based distribution solution that is",
    "start": "127020",
    "end": "132270"
  },
  {
    "text": "what Jennifer does so if one pier already download download",
    "start": "132270",
    "end": "137879"
  },
  {
    "text": "the image file then any other peers can just directly download from that cure so",
    "start": "137879",
    "end": "146010"
  },
  {
    "text": "Jenna fly is aimed to solve the bottleneck of file and the image distribution in large-scale data centers",
    "start": "146010",
    "end": "155810"
  },
  {
    "text": "to prove its performance we did a test between two image distribution solutions",
    "start": "156319",
    "end": "163920"
  },
  {
    "text": "as first is just using docker pool it's a native way the second way is using",
    "start": "163920",
    "end": "169799"
  },
  {
    "text": "Django flag so as you can see from this diagram as the concurrency becomes much",
    "start": "169799",
    "end": "179099"
  },
  {
    "text": "larger the load on the center image registry becomes much higher in the",
    "start": "179099",
    "end": "187049"
  },
  {
    "text": "native way so the average download time increases rapidly but if you are using",
    "start": "187049",
    "end": "195030"
  },
  {
    "text": "dragonfly you can see that the average download time is quite consistent so we",
    "start": "195030",
    "end": "205500"
  },
  {
    "text": "can conclude that in this scenario Django fireworks has a better",
    "start": "205500",
    "end": "210840"
  },
  {
    "text": "performance since the native way okay",
    "start": "210840",
    "end": "216959"
  },
  {
    "text": "next lat let me introduce about the dragonflies history so Jeong fly was",
    "start": "216959",
    "end": "223019"
  },
  {
    "text": "born in Alibaba in 2015 it was initially a file distribution system because as a",
    "start": "223019",
    "end": "230129"
  },
  {
    "text": "time container technologies not widely adopted in China two years later John",
    "start": "230129",
    "end": "237060"
  },
  {
    "text": "fly was open source and it became one of the fundamental infrastructures in",
    "start": "237060",
    "end": "243079"
  },
  {
    "text": "Alibaba and at a time it can distribute 3.4 petabytes data amongst one year",
    "start": "243079",
    "end": "252060"
  },
  {
    "text": "later general I joined the CN CF and it became one of the sandbox project and",
    "start": "252060",
    "end": "258049"
  },
  {
    "text": "more than 20 companies are using dragonfly in in their production",
    "start": "258049",
    "end": "263370"
  },
  {
    "text": "environment as for now actually Jung a fly is g8",
    "start": "263370",
    "end": "270040"
  },
  {
    "text": "this morning so and now it can integrate with Cuba native ecosystem better for",
    "start": "270040",
    "end": "278660"
  },
  {
    "text": "the future work we are planning to adapt to more cloud scenarios and we hope we",
    "start": "278660",
    "end": "285710"
  },
  {
    "text": "can enter CN CF incubation stage okay",
    "start": "285710",
    "end": "290870"
  },
  {
    "text": "these are our industry adoptions you can see companies from different areas are",
    "start": "290870",
    "end": "298490"
  },
  {
    "text": "using gen fly such as telecommunication ecommerce cloud service providers and so",
    "start": "298490",
    "end": "306050"
  },
  {
    "text": "on now let me talk about our integration",
    "start": "306050",
    "end": "314419"
  },
  {
    "text": "with other CN CF project as for container engine translight can natively",
    "start": "314419",
    "end": "319669"
  },
  {
    "text": "support support container d its configuration is very simple and i will",
    "start": "319669",
    "end": "325460"
  },
  {
    "text": "show you in the next few slides as for harbor harbor is a very famous",
    "start": "325460",
    "end": "332570"
  },
  {
    "text": "image registry and the jennifer supports preheat functionalities so the harbor",
    "start": "332570",
    "end": "339650"
  },
  {
    "text": "users can trick a can send HTTP request to join a fly and the jungle flight will",
    "start": "339650",
    "end": "347620"
  },
  {
    "text": "do some image of Perficient for later image distribution matrix is another",
    "start": "347620",
    "end": "355180"
  },
  {
    "text": "very important aspect gen flight supports Prometheus matrix so that users",
    "start": "355180",
    "end": "362599"
  },
  {
    "text": "can display the metrics in some dashboard tools like graph owner for",
    "start": "362599",
    "end": "368000"
  },
  {
    "text": "help we maintain a home try ripple in this address so you can have a try and",
    "start": "368000",
    "end": "375470"
  },
  {
    "text": "it can help you easily deploy Jennifer in kinetise cluster so this all about",
    "start": "375470",
    "end": "384440"
  },
  {
    "text": "the first part the next let's get into",
    "start": "384440",
    "end": "389470"
  },
  {
    "text": "dragonfly architecture so for file distribution jeong fly mainly needs two",
    "start": "389470",
    "end": "397479"
  },
  {
    "text": "components the first is John fly server because super node and another role is dragonfly",
    "start": "397479",
    "end": "404760"
  },
  {
    "text": "client which is if get so how do they work together does see when the client",
    "start": "404760",
    "end": "414960"
  },
  {
    "text": "starts it will register itself as a peer to super node server so when one peer",
    "start": "414960",
    "end": "422730"
  },
  {
    "text": "wants to download some file it will send a create task request to the super node",
    "start": "422730",
    "end": "429600"
  },
  {
    "text": "server so what is a task you can consider it as I want to download this",
    "start": "429600",
    "end": "436140"
  },
  {
    "text": "file so this is a task so after the supernal server receives this request it",
    "start": "436140",
    "end": "443160"
  },
  {
    "text": "will generate task ID and send the ID back to the client so next step give gap",
    "start": "443160",
    "end": "451320"
  },
  {
    "text": "client will can use this ID to track the pieces information of that file because",
    "start": "451320",
    "end": "458840"
  },
  {
    "text": "super node is the central server it maintains the whole status of this cluster so it such as peers information",
    "start": "458840",
    "end": "467010"
  },
  {
    "text": "and it also knows whether the request a file exists in the cluster or not so if",
    "start": "467010",
    "end": "475410"
  },
  {
    "text": "the file is is present in many different peers the super node server will do some",
    "start": "475410",
    "end": "482280"
  },
  {
    "text": "scheduling to choose the best appear so after the scheduling the client can",
    "start": "482280",
    "end": "489870"
  },
  {
    "text": "download that file from another peer so after has this process finalized the",
    "start": "489870",
    "end": "497790"
  },
  {
    "text": "client will send an update to the server so this step is just say I have already",
    "start": "497790",
    "end": "505140"
  },
  {
    "text": "download this file so later when other peers want to download the same file",
    "start": "505140",
    "end": "511020"
  },
  {
    "text": "they can directly download from me okay additionally there is kind of situations",
    "start": "511020",
    "end": "518820"
  },
  {
    "text": "that the requested file is not present in the current cluster so the super node",
    "start": "518820",
    "end": "527010"
  },
  {
    "text": "will act as a CDN nodes to download from the sauce the end",
    "start": "527010",
    "end": "533190"
  },
  {
    "text": "well directly Donald from the supernote server so that's basically how drunk I",
    "start": "533190",
    "end": "538800"
  },
  {
    "text": "work in the file distribution next let's",
    "start": "538800",
    "end": "544440"
  },
  {
    "text": "get much deeper in each component the first is super node is prior provides",
    "start": "544440",
    "end": "550199"
  },
  {
    "text": "many different API to interact with EF GATT client and it also do some",
    "start": "550199",
    "end": "557730"
  },
  {
    "text": "scheduling because as we already mentioned it as a super node maintains",
    "start": "557730",
    "end": "563639"
  },
  {
    "text": "the whole cluster status so based on these status it will do scheduling as",
    "start": "563639",
    "end": "570029"
  },
  {
    "text": "for seeding we said that super node will work as a CDN node to download from",
    "start": "570029",
    "end": "576089"
  },
  {
    "text": "sauce so this is just the initial seeding for matrix because super node",
    "start": "576089",
    "end": "583529"
  },
  {
    "text": "maintains many important information so we expose this information to from",
    "start": "583529",
    "end": "592199"
  },
  {
    "text": "easiest metrics and display them in graph on our dashboards next is DF get",
    "start": "592199",
    "end": "601610"
  },
  {
    "text": "gift cat is just a simple command-line tool its usage is quite similar to W get",
    "start": "601610",
    "end": "610319"
  },
  {
    "text": "or curve but it also provides many useful functionalities such as rate",
    "start": "610319",
    "end": "616290"
  },
  {
    "text": "limiting you can imagine that maybe you have run some network bandwidth",
    "start": "616290",
    "end": "624029"
  },
  {
    "text": "intensive applications so during the dragonfly download process you don't",
    "start": "624029",
    "end": "629730"
  },
  {
    "text": "want the DF get cost too much bandwidth so you at that time you can use this",
    "start": "629730",
    "end": "636899"
  },
  {
    "text": "regular meeting feature to reserve some bandwidth for your application",
    "start": "636899",
    "end": "643139"
  },
  {
    "text": "as for checksum it's obvious that we",
    "start": "643139",
    "end": "648329"
  },
  {
    "text": "don't want to download a broken file so this integrity check will ensure your",
    "start": "648329",
    "end": "654059"
  },
  {
    "text": "downloaded file is correct so these are",
    "start": "654059",
    "end": "659329"
  },
  {
    "text": "two components for file distribution",
    "start": "659329",
    "end": "664450"
  },
  {
    "text": "but what about image distribution so when you want to download image you just",
    "start": "664450",
    "end": "669970"
  },
  {
    "text": "use like docker poor but this process we",
    "start": "669970",
    "end": "676420"
  },
  {
    "text": "are not involved with China flash so how does Shanghai participates in this image",
    "start": "676420",
    "end": "682180"
  },
  {
    "text": "Donald process actually our solution is",
    "start": "682180",
    "end": "687430"
  },
  {
    "text": "quite simple we just start a proxy in",
    "start": "687430",
    "end": "693040"
  },
  {
    "text": "each host and we configure the registry mirrors to that proxy so that when your",
    "start": "693040",
    "end": "705220"
  },
  {
    "text": "container engine won't receive these download requests it will send the",
    "start": "705220",
    "end": "710860"
  },
  {
    "text": "tunnel image requests to your configure the registry mirror so that drug fly",
    "start": "710860",
    "end": "717310"
  },
  {
    "text": "will know what image you want to download so these are the two examples of configuring docker and continuity ok",
    "start": "717310",
    "end": "731220"
  },
  {
    "text": "this is the whole process about downloading one image with as we as I",
    "start": "731220",
    "end": "742390"
  },
  {
    "text": "mentioned earlier we start a proxy in each host and we call it a DFG mo you",
    "start": "742390",
    "end": "749380"
  },
  {
    "text": "can see from this diagram so the whole",
    "start": "749380",
    "end": "755110"
  },
  {
    "text": "step is that user use a talker command line to pull some kind of images and the",
    "start": "755110",
    "end": "761769"
  },
  {
    "text": "finalized image request will reach to the DfE mo then diff da mo will folk a",
    "start": "761769",
    "end": "770470"
  },
  {
    "text": "Gift Guide process and then Gift Guide process will try to connect to the",
    "start": "770470",
    "end": "777690"
  },
  {
    "text": "center server which is super node it will register itself and download from",
    "start": "777690",
    "end": "783819"
  },
  {
    "text": "this p2p network for the next few steps this is quite similar to file",
    "start": "783819",
    "end": "791670"
  },
  {
    "text": "distribution so I will skip this part",
    "start": "791670",
    "end": "798810"
  },
  {
    "text": "okay that's how drunk fly work in file",
    "start": "803500",
    "end": "809860"
  },
  {
    "text": "distribution and image distribution next",
    "start": "809860",
    "end": "816820"
  },
  {
    "text": "let's talk about our today's main topic the decentralize the mode of John's life",
    "start": "816820",
    "end": "823840"
  },
  {
    "text": "so someone might ask so what does it",
    "start": "823840",
    "end": "828880"
  },
  {
    "text": "mean so it's John four I already decentralized but actually it is not",
    "start": "828880",
    "end": "835900"
  },
  {
    "text": "fully decentralized because the give get",
    "start": "835900",
    "end": "842170"
  },
  {
    "text": "clients part is decentralized decentralized but we still need to maintain the super node server so some",
    "start": "842170",
    "end": "851980"
  },
  {
    "text": "of our users give give give us some feedback that it is not easy to maintain",
    "start": "851980",
    "end": "858610"
  },
  {
    "text": "the super node server it is quite heavy and the currently it's cons go easily",
    "start": "858610",
    "end": "865510"
  },
  {
    "text": "because we don't have a perfect perfect edge resolution for super nodes and also",
    "start": "865510",
    "end": "874270"
  },
  {
    "text": "as I have mentioned earlier super node will sometimes work as a CDN node to",
    "start": "874270",
    "end": "881170"
  },
  {
    "text": "fetch the files from source so it has a high relatively high demand it's",
    "start": "881170",
    "end": "888730"
  },
  {
    "text": "hardware such as disk i/o and network bandwidth so how can we solve this",
    "start": "888730",
    "end": "897430"
  },
  {
    "text": "problem can we just find a way to run",
    "start": "897430",
    "end": "903160"
  },
  {
    "text": "soup dragonfly without super node just like this diagram can we just use this",
    "start": "903160",
    "end": "909820"
  },
  {
    "text": "gift demo running in each node so how do",
    "start": "909820",
    "end": "915100"
  },
  {
    "text": "we manage to do this actually in order to solve this problem we should first",
    "start": "915100",
    "end": "921490"
  },
  {
    "text": "know what super node to us actually it's just a server which keeps cluster",
    "start": "921490",
    "end": "930760"
  },
  {
    "text": "information in its memory such as peers information file pieces information tasks",
    "start": "930760",
    "end": "936610"
  },
  {
    "text": "information and then it will do some scheduling based on these information so",
    "start": "936610",
    "end": "943570"
  },
  {
    "text": "what if we find a way to synchronize the peers status in the cluster then each",
    "start": "943570",
    "end": "951670"
  },
  {
    "text": "peer will know the whole cluster status then it can do the scheduling themselves",
    "start": "951670",
    "end": "959610"
  },
  {
    "text": "so how do we propagate the peer status",
    "start": "959610",
    "end": "965190"
  },
  {
    "text": "actually we found a great tool called surf surf was open source by hash cop",
    "start": "966300",
    "end": "975820"
  },
  {
    "text": "and is it is what I use in decentralized applications it uses gossip protocol to",
    "start": "975820",
    "end": "983740"
  },
  {
    "text": "communicate with each peers and it also has many great functionalities such as",
    "start": "983740",
    "end": "991029"
  },
  {
    "text": "membership management failure detection and recovery so when one peer fails and",
    "start": "991029",
    "end": "999880"
  },
  {
    "text": "then other peers can detect the failure quickly and try to recover that failed",
    "start": "999880",
    "end": "1005850"
  },
  {
    "text": "peer as for custom event propagation that's what we need because we want to",
    "start": "1005850",
    "end": "1013019"
  },
  {
    "text": "integrate with Jennifer Iwase surf so we just need to define some our own events",
    "start": "1013019",
    "end": "1020790"
  },
  {
    "text": "to propagate information we need such as file pieces information peers",
    "start": "1020790",
    "end": "1027630"
  },
  {
    "text": "information so that's basically our design for propagating these",
    "start": "1027630",
    "end": "1035699"
  },
  {
    "text": "informations in the cluster",
    "start": "1035699",
    "end": "1039350"
  },
  {
    "text": "so what other things should we do the first thing is defining a tracker",
    "start": "1041780",
    "end": "1047750"
  },
  {
    "text": "interface because in the traditional architecture we only have two main rules",
    "start": "1047750",
    "end": "1055660"
  },
  {
    "text": "the first is super node server another is thief gate client so these two",
    "start": "1055660",
    "end": "1062390"
  },
  {
    "text": "components talk only we as a super node API so in the decentralized mode we",
    "start": "1062390",
    "end": "1070670"
  },
  {
    "text": "don't have super node anymore so but we still want to keep the compatibility how",
    "start": "1070670",
    "end": "1076580"
  },
  {
    "text": "to achieve this so the easiest easiest solution is to define a common tracker",
    "start": "1076580",
    "end": "1082790"
  },
  {
    "text": "interface in the middle and we just need to implement this tracker interface in",
    "start": "1082790",
    "end": "1090440"
  },
  {
    "text": "the decentralized DF Guillermo so that we don't need to change too much code in",
    "start": "1090440",
    "end": "1096980"
  },
  {
    "text": "the client-side so that's our first",
    "start": "1096980",
    "end": "1102640"
  },
  {
    "text": "since you to do and next is about peer",
    "start": "1102640",
    "end": "1108380"
  },
  {
    "text": "discovery pure discovery is another very",
    "start": "1108380",
    "end": "1113630"
  },
  {
    "text": "important thing in in the p2p network because one peer wants to join the",
    "start": "1113630",
    "end": "1121160"
  },
  {
    "text": "concert it should first know the address of it of the other peers in the cluster",
    "start": "1121160",
    "end": "1126820"
  },
  {
    "text": "so how do we want to implement this feature because we want dragonfly to",
    "start": "1126820",
    "end": "1134390"
  },
  {
    "text": "adapt to many different scenarios so we want this feature to be pluggable so",
    "start": "1134390",
    "end": "1142940"
  },
  {
    "text": "here we list the three three kind of ways to do peer discovery the first is",
    "start": "1142940",
    "end": "1151310"
  },
  {
    "text": "using criminales api kubernetes has many resources and",
    "start": "1151310",
    "end": "1156410"
  },
  {
    "text": "the api so when the peers starts it can fetch this community's information right",
    "start": "1156410",
    "end": "1165200"
  },
  {
    "text": "API such as notes or endpoints so through this API they can connect to the",
    "start": "1165200",
    "end": "1174110"
  },
  {
    "text": "peers in the after the second way is using corneas",
    "start": "1174110",
    "end": "1180710"
  },
  {
    "text": "Cody s is used a lot in communities for",
    "start": "1180710",
    "end": "1185809"
  },
  {
    "text": "service discovery so if using this way we can find our",
    "start": "1185809",
    "end": "1193190"
  },
  {
    "text": "other peers just using domain name so",
    "start": "1193190",
    "end": "1198950"
  },
  {
    "text": "this is very easy and simple the next way is using surf agent serve is not",
    "start": "1198950",
    "end": "1207799"
  },
  {
    "text": "only library for doing gossip but it is",
    "start": "1207799",
    "end": "1214039"
  },
  {
    "text": "also a certain area server so you can run it so in this situation we can",
    "start": "1214039",
    "end": "1221950"
  },
  {
    "text": "initially start surf agent in our cluster to work as a dummy node so when",
    "start": "1221950",
    "end": "1228649"
  },
  {
    "text": "you want to start other peers in your cluster we can just directly connect to",
    "start": "1228649",
    "end": "1234289"
  },
  {
    "text": "that dummy node and join these p2p cluster so the next thing is about our",
    "start": "1234289",
    "end": "1246700"
  },
  {
    "text": "custom events for Django fight so what type of events should we define here we",
    "start": "1246700",
    "end": "1255919"
  },
  {
    "text": "define three type of events the first is about five events because trying to fly",
    "start": "1255919",
    "end": "1263419"
  },
  {
    "text": "itself is a file and image distribution system so we should propagate the file",
    "start": "1263419",
    "end": "1270169"
  },
  {
    "text": "pieces information among other appears so here we define three type of our",
    "start": "1270169",
    "end": "1278149"
  },
  {
    "text": "events first is download initialization event this is used to notify other peers",
    "start": "1278149",
    "end": "1284389"
  },
  {
    "text": "that I start downloading some file and",
    "start": "1284389",
    "end": "1289659"
  },
  {
    "text": "then later mix they can download from this pier the second type of our event",
    "start": "1289659",
    "end": "1296269"
  },
  {
    "text": "is download progress event because in Java we split the file downloading",
    "start": "1296269",
    "end": "1303110"
  },
  {
    "text": "process into several pieces so this is used to",
    "start": "1303110",
    "end": "1308850"
  },
  {
    "text": "that other peers know that how many pieces have you already downloaded and",
    "start": "1308850",
    "end": "1314850"
  },
  {
    "text": "whether the whole download process is is finished or not so when the process is",
    "start": "1314850",
    "end": "1322769"
  },
  {
    "text": "finished they can't download from up here the last event is file remove event",
    "start": "1322769",
    "end": "1328500"
  },
  {
    "text": "so mmm because the disk has maximum",
    "start": "1328500",
    "end": "1333720"
  },
  {
    "text": "capacity so sometimes you need to do like garbage collection or clean up your",
    "start": "1333720",
    "end": "1341279"
  },
  {
    "text": "disk space so when you delete these files you need to notify other peers as",
    "start": "1341279",
    "end": "1346559"
  },
  {
    "text": "well so that they can't download this file from up here and another two type",
    "start": "1346559",
    "end": "1356429"
  },
  {
    "text": "of event the first is lens event because when you download a file the peer needs",
    "start": "1356429",
    "end": "1364019"
  },
  {
    "text": "to calculate the file ends so when file lens is calculated by one",
    "start": "1364019",
    "end": "1370559"
  },
  {
    "text": "peer it can propagate this event to other peers so that other peers don't",
    "start": "1370559",
    "end": "1376320"
  },
  {
    "text": "need to calculate these file ends again another type of event is recovery event",
    "start": "1376320",
    "end": "1385070"
  },
  {
    "text": "because in a distributed system peers may have a possibility to be a crashed",
    "start": "1385070",
    "end": "1392519"
  },
  {
    "text": "so when it's crushed and recovered and needed to synchronize with other peers",
    "start": "1392519",
    "end": "1397889"
  },
  {
    "text": "to gather latest caster information so we enter restarts it can send this",
    "start": "1397889",
    "end": "1404899"
  },
  {
    "text": "recover event to other peers then other peers can send back the recover the",
    "start": "1404899",
    "end": "1412950"
  },
  {
    "text": "latest cost her information to that pure so this is our defined custom events so",
    "start": "1412950",
    "end": "1426379"
  },
  {
    "text": "this is the final design for our decentralized architecture actually this",
    "start": "1426379",
    "end": "1433440"
  },
  {
    "text": "is quite similar to the previous diagram but in this architecture we don't have",
    "start": "1433440",
    "end": "1441120"
  },
  {
    "text": "super node anymore we just only have each host running DFP",
    "start": "1441120",
    "end": "1448140"
  },
  {
    "text": "MO so when the FDA Minh starts it will try to connect to the in each node or",
    "start": "1448140",
    "end": "1455150"
  },
  {
    "text": "some other peer discovery mechanism it will send a registered request and then",
    "start": "1455150",
    "end": "1462800"
  },
  {
    "text": "you need no will send back the peers already in that cluster so after the",
    "start": "1462800",
    "end": "1470520"
  },
  {
    "text": "first two steps the peer will join into this gossip cluster then they can it can",
    "start": "1470520",
    "end": "1478200"
  },
  {
    "text": "synchronize with other peers such as",
    "start": "1478200",
    "end": "1483480"
  },
  {
    "text": "fire information and the peers information so in the first step where",
    "start": "1483480",
    "end": "1488970"
  },
  {
    "text": "it wants to download some kind of files it can do the scheduling itself because",
    "start": "1488970",
    "end": "1496460"
  },
  {
    "text": "it has enough information so it can know whether the requested file is present in",
    "start": "1496460",
    "end": "1505590"
  },
  {
    "text": "other peers or not if not it can directly download from the source or the",
    "start": "1505590",
    "end": "1511970"
  },
  {
    "text": "registry or the registry so if the files is present it can just directly download",
    "start": "1511970",
    "end": "1519750"
  },
  {
    "text": "from other peers okay that's basically",
    "start": "1519750",
    "end": "1525890"
  },
  {
    "text": "the third part is our decentralized version of drunk flight so this is the",
    "start": "1525890",
    "end": "1534900"
  },
  {
    "text": "last part the road map Jennifer wants to",
    "start": "1534900",
    "end": "1540929"
  },
  {
    "text": "have more features it's nice to have more more encryption method supporting",
    "start": "1540929",
    "end": "1549030"
  },
  {
    "text": "and more file transferring protocol and we also want to implement a front-end",
    "start": "1549030",
    "end": "1555990"
  },
  {
    "text": "dashboard for displaying the cluster status in Jung flag and we also want to",
    "start": "1555990",
    "end": "1563330"
  },
  {
    "text": "support more scenarios to do more performance optimization such as cloud",
    "start": "1563330",
    "end": "1570870"
  },
  {
    "text": "or Internet of Things scenarios besides we also want to support more",
    "start": "1570870",
    "end": "1578049"
  },
  {
    "text": "computing architectures like arm so as for ecosystem we want to integrate",
    "start": "1578049",
    "end": "1585399"
  },
  {
    "text": "with open tracing and it's better to make dragonfly more communities up",
    "start": "1585399",
    "end": "1591879"
  },
  {
    "text": "kubernetes native so we want to support operator as well so if you are",
    "start": "1591879",
    "end": "1598179"
  },
  {
    "text": "interested in our future work you can check out about the roadmap in our",
    "start": "1598179",
    "end": "1603999"
  },
  {
    "text": "github ok this is our logo and our",
    "start": "1603999",
    "end": "1612700"
  },
  {
    "text": "github repo so that's all about this",
    "start": "1612700",
    "end": "1618610"
  },
  {
    "text": "talk ok thanks for listening I think we still have maybe six minutes for Q&A",
    "start": "1618610",
    "end": "1628299"
  },
  {
    "text": "parts please swap because there is another",
    "start": "1628299",
    "end": "1634149"
  },
  {
    "text": "drone flying maintainer is here ok",
    "start": "1634149",
    "end": "1640710"
  },
  {
    "text": "I'm sorry so you mean which feature so dragonfly Oh Jeff like an supports",
    "start": "1659790",
    "end": "1667800"
  },
  {
    "text": "private registry in many may be several",
    "start": "1667800",
    "end": "1673330"
  },
  {
    "text": "months ago yeah it can already support it okay yeah you just need to configure",
    "start": "1673330",
    "end": "1678640"
  },
  {
    "text": "it in your gift game on configure file to load the certificate and keys so yeah",
    "start": "1678640",
    "end": "1684460"
  },
  {
    "text": "you can check out our github have you guys approached any of the major cloud",
    "start": "1684460",
    "end": "1690880"
  },
  {
    "text": "providers Google AWS see if they can support it on GAE was like I don't think I get the chance to you know set up the",
    "start": "1690880",
    "end": "1696820"
  },
  {
    "text": "registry mirror on the nodes right like this is like pretty awesome but I don't think I can use it in an environment",
    "start": "1696820",
    "end": "1702160"
  },
  {
    "text": "where where I don't get to manage all the config",
    "start": "1702160",
    "end": "1706200"
  },
  {
    "text": "yep",
    "start": "1713280",
    "end": "1716280"
  },
  {
    "text": "yeah because in this slide I only shows a way to configure the register mirrors",
    "start": "1724480",
    "end": "1731120"
  },
  {
    "text": "but in Jung fly we also supports the proxy process by using the environment",
    "start": "1731120",
    "end": "1738679"
  },
  {
    "text": "input variable you can check out our document we can configure the HTTP proxy",
    "start": "1738679",
    "end": "1747200"
  },
  {
    "text": "or HTTP proxy in the darker in docker or",
    "start": "1747200",
    "end": "1752480"
  },
  {
    "text": "container disk configuration file yeah it works yeah I think that's the like the key part that like in a managed",
    "start": "1752480",
    "end": "1758000"
  },
  {
    "text": "environment you don't get to configure those things yeah okay any other",
    "start": "1758000",
    "end": "1764809"
  },
  {
    "text": "questions probably related to the first",
    "start": "1764809",
    "end": "1772970"
  },
  {
    "text": "questions how about authorization so normally however hosts a bunch of images right",
    "start": "1772970",
    "end": "1779450"
  },
  {
    "text": "and user a can pull image a but user B cannot pull image be right so and in",
    "start": "1779450",
    "end": "1787850"
  },
  {
    "text": "kubernetes plain user normally set da couple secrets so does the secret",
    "start": "1787850",
    "end": "1795679"
  },
  {
    "text": "information can be handled dragonfly properly still I guess this question is",
    "start": "1795679",
    "end": "1804020"
  },
  {
    "text": "related to the integration with with harbor right yes or private docker",
    "start": "1804020",
    "end": "1810350"
  },
  {
    "text": "registry can have authorization feature right hmm actually currently trans I",
    "start": "1810350",
    "end": "1818110"
  },
  {
    "text": "don't have the support for community resources secrets as for integrating",
    "start": "1818110",
    "end": "1826070"
  },
  {
    "text": "with harbor actually Java already supports these preheat functionality but",
    "start": "1826070",
    "end": "1832370"
  },
  {
    "text": "in harbor side they are trying to provide an interface for other different",
    "start": "1832370",
    "end": "1840409"
  },
  {
    "text": "kind of PGP solutions such as kraken and maybe you have already heard about it so",
    "start": "1840409",
    "end": "1846429"
  },
  {
    "text": "for this integration in harbor UI there",
    "start": "1846429",
    "end": "1851960"
  },
  {
    "text": "will be a button so when the user of the user can trigger can click this button",
    "start": "1851960",
    "end": "1858020"
  },
  {
    "text": "and the trigger the image Pro fashion process in the drunk fly just send a",
    "start": "1858020",
    "end": "1866900"
  },
  {
    "text": "HTTP request so but for criminality secrets I think we currently we don't",
    "start": "1866900",
    "end": "1874460"
  },
  {
    "text": "have these support okay thank you",
    "start": "1874460",
    "end": "1878289"
  },
  {
    "text": "but actually I don't think dragonfly needs to know those secrets so when you put image it's actually from the docker",
    "start": "1882070",
    "end": "1890170"
  },
  {
    "text": "container deposit just the HTTP header when you pass it was proxy proxy just translated to send help to the British",
    "start": "1890170",
    "end": "1896680"
  },
  {
    "text": "by itself just no interception or I guess the probe just just works yeah",
    "start": "1896680",
    "end": "1908770"
  },
  {
    "text": "yeah so that the same when you convict like image post equates that's going to",
    "start": "1908770",
    "end": "1914500"
  },
  {
    "text": "be translate into a taco config right when call the doc API at the end doc",
    "start": "1914500",
    "end": "1919930"
  },
  {
    "text": "adjust and it sent the request with the header it doesn't matter whether is",
    "start": "1919930",
    "end": "1926740"
  },
  {
    "text": "private or public thanks so the decentralized super node is that or is",
    "start": "1926740",
    "end": "1935140"
  },
  {
    "text": "that a road map or is already G as as",
    "start": "1935140",
    "end": "1943120"
  },
  {
    "text": "ben jonson is during our design phase it's not into year I at least know in",
    "start": "1943120",
    "end": "1949840"
  },
  {
    "text": "today's version it's during our design phase but the most collaboration work is to you know I proposed this topic I'm",
    "start": "1949840",
    "end": "1959950"
  },
  {
    "text": "proposed at the center as the design doc and that accurate as the experiment in",
    "start": "1959950",
    "end": "1965770"
  },
  {
    "text": "urban environments we are using surf we are using the distribution without a",
    "start": "1965770",
    "end": "1971050"
  },
  {
    "text": "center as a node so we are walking together the more moving or internal",
    "start": "1971050",
    "end": "1976450"
  },
  {
    "text": "implementation to public so hopefully I guess should be so stay tuned have you",
    "start": "1976450",
    "end": "1984160"
  },
  {
    "text": "guys a benchmark surf like what's the same number of nodes to have in these clusters and also like when like in the",
    "start": "1984160",
    "end": "1992620"
  },
  {
    "text": "case where there's a high turn rate on the nodes let's say you're using like spot the interpreter VMs how would that play out the question is how about the",
    "start": "1992620",
    "end": "2001530"
  },
  {
    "text": "performance of surf we didn't do the test MP at surf level but we do the MP",
    "start": "2001530",
    "end": "2010560"
  },
  {
    "text": "at a higher level we really test the performance when you like I'll test case shows when you have 2000",
    "start": "2010560",
    "end": "2017570"
  },
  {
    "text": "notes all of them want to put the 1 point 5 gigabytes image which normally some Ubuntu image 1.5 I think the result",
    "start": "2017570",
    "end": "2027470"
  },
  {
    "text": "is good almost 5 minutes 90 percentile can download the image successfully but",
    "start": "2027470",
    "end": "2034160"
  },
  {
    "text": "the surf performance appear from the official document it says so when we",
    "start": "2034160",
    "end": "2040520"
  },
  {
    "text": "talk about super format we are talking about how long it can quickly converge the states so put the document there",
    "start": "2040520",
    "end": "2047300"
  },
  {
    "text": "saying even when you have 5 keynotes like maybe 1 1 percent of packet loss",
    "start": "2047300",
    "end": "2055340"
  },
  {
    "text": "you can still come over just a we seem like 3 or 4 seconds hi so in the p2p",
    "start": "2055340",
    "end": "2069560"
  },
  {
    "text": "world how do you prevent a bad actor or bad node from distributing files that",
    "start": "2069560",
    "end": "2076280"
  },
  {
    "text": "are not part of their not intended yes",
    "start": "2076280",
    "end": "2083138"
  },
  {
    "text": "so the question is about how to prevent malicious malicious a peer sure yeah in",
    "start": "2083830",
    "end": "2093679"
  },
  {
    "text": "the p2p network yep from distributing files that you know has been tampered",
    "start": "2093679",
    "end": "2099290"
  },
  {
    "text": "with essentially oh so so for this",
    "start": "2099290",
    "end": "2104810"
  },
  {
    "text": "question actually we have a integrated check because so I will talk about this",
    "start": "2104810",
    "end": "2112030"
  },
  {
    "text": "integration track because we do the integration based on the hash of the of",
    "start": "2112030",
    "end": "2119930"
  },
  {
    "text": "the file of the file URL and some other things because we can configure the so",
    "start": "2119930",
    "end": "2126740"
  },
  {
    "text": "md5 during the during the start of each client so in this p2p network so this is a file",
    "start": "2126740",
    "end": "2136730"
  },
  {
    "text": "from one URL so if they are quite they must have the same hash yeah so mmm I",
    "start": "2136730",
    "end": "2146420"
  },
  {
    "text": "don't that some malicious node can get the same md5 when it starts so if it don't",
    "start": "2146420",
    "end": "2156160"
  },
  {
    "text": "have same a secret md5 configuration so it can't pass the integrate chart",
    "start": "2156160",
    "end": "2165150"
  },
  {
    "text": "yeah so from yeah the point for dock image instead of its content addressable",
    "start": "2170380",
    "end": "2176230"
  },
  {
    "text": "so you're get a hash some the sha-256",
    "start": "2176230",
    "end": "2185550"
  },
  {
    "text": "what do you have like numbers only you know average image size that you guys are like you know transferring and stuff",
    "start": "2189120",
    "end": "2195820"
  },
  {
    "text": "like that and like times like in production environments like are people",
    "start": "2195820",
    "end": "2203470"
  },
  {
    "text": "using this because they just don't want to put you know or they don't want to put too much stress on the registry or because their images are like you know",
    "start": "2203470",
    "end": "2210340"
  },
  {
    "text": "to be can they rather just do this like peer-to-peer thing so I think the first",
    "start": "2210340",
    "end": "2219160"
  },
  {
    "text": "question is what does really protecting scale was the numbers right so first of",
    "start": "2219160",
    "end": "2228160"
  },
  {
    "text": "all the decentralized mode is not in public so what I'm going to share is a",
    "start": "2228160",
    "end": "2234240"
  },
  {
    "text": "specific numbers so we are running like",
    "start": "2234240",
    "end": "2241170"
  },
  {
    "text": "two thousand notes with five or ten proxy nodes that's that's a little cheap",
    "start": "2241170",
    "end": "2249790"
  },
  {
    "text": "proxy but the most use case is for big",
    "start": "2249790",
    "end": "2256030"
  },
  {
    "text": "images like because we are running a simulation assume it means you get you're not running the simplest you may",
    "start": "2256030",
    "end": "2263740"
  },
  {
    "text": "get like one point five gigabytes or 2.5 gigabytes or some maybe five gigabytes",
    "start": "2263740",
    "end": "2269590"
  },
  {
    "text": "and the the cross size is pretty large like five K knows I guess we have we",
    "start": "2269590",
    "end": "2276820"
  },
  {
    "text": "have one crossed with how to use case because the image is big and the cross size like more than 2,000 or 3,000",
    "start": "2276820",
    "end": "2284250"
  },
  {
    "text": "that's a skill what's the second question",
    "start": "2284250",
    "end": "2290880"
  },
  {
    "text": "yeah I think boss I think boss so you",
    "start": "2294620",
    "end": "2303180"
  },
  {
    "text": "want to reduce the load on the storage side you also want to improve the efficiency as well any more questions",
    "start": "2303180",
    "end": "2313590"
  },
  {
    "text": "any more questions I think we are running out of time thanks for joining",
    "start": "2313590",
    "end": "2319350"
  },
  {
    "text": "ok thanks for call me ok thank you very much",
    "start": "2319350",
    "end": "2324559"
  }
]