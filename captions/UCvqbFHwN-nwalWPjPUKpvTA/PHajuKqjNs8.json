[
  {
    "text": "hello everyone my name is jim makishi and thank you for listening to our",
    "start": "0",
    "end": "5759"
  },
  {
    "text": "session deliver your cloud native application with design pattern as code",
    "start": "5759",
    "end": "12240"
  },
  {
    "text": "so i was supposed to make a live spot to asks you some questions about how you",
    "start": "14799",
    "end": "20960"
  },
  {
    "text": "take care of infrastructure as a code but because this is a recording session",
    "start": "20960",
    "end": "26240"
  },
  {
    "text": "i will leave some questions here is your infrastructure infrastructure's code very organized",
    "start": "26240",
    "end": "31760"
  },
  {
    "text": "do you share your code to other team or does your team spend a little time on",
    "start": "31760",
    "end": "37600"
  },
  {
    "text": "infrastructure compared to application development our today's proposal",
    "start": "37600",
    "end": "43120"
  },
  {
    "text": "will solve some of these questions",
    "start": "43120",
    "end": "46960"
  },
  {
    "text": "the takeaway of this session is infrastructure as code must solve consistency and reusability",
    "start": "48480",
    "end": "56000"
  },
  {
    "text": "for infrastructure manifest and its delivery pipeline in other words infrastructure",
    "start": "56000",
    "end": "62079"
  },
  {
    "text": "configurations and its digital pipeline should be managed in a consistent manner",
    "start": "62079",
    "end": "68640"
  },
  {
    "text": "and our answer is design pattern as code which comes from our production",
    "start": "68640",
    "end": "75280"
  },
  {
    "text": "experience again my name is yuma kishi senior",
    "start": "75280",
    "end": "82400"
  },
  {
    "text": "architect at ntt communications and we also have rintaro sequino who's",
    "start": "82400",
    "end": "88479"
  },
  {
    "text": "site reliability engineer at ntt communications as well and he will take care of the demonstration later",
    "start": "88479",
    "end": "96240"
  },
  {
    "text": "so before describing design pattern as code let me introduce our company to give you",
    "start": "98560",
    "end": "103759"
  },
  {
    "text": "some context of our proposal entity communications is a global ict",
    "start": "103759",
    "end": "111119"
  },
  {
    "text": "service provider which has a global footprint to provide",
    "start": "111119",
    "end": "116799"
  },
  {
    "text": "end-to-end ict infrastructure service to customer",
    "start": "116799",
    "end": "122000"
  },
  {
    "text": "uh these are some examples our internal projects using the cloud native",
    "start": "124479",
    "end": "130000"
  },
  {
    "text": "solutions we are safety more to use software than before",
    "start": "130000",
    "end": "135280"
  },
  {
    "text": "to meet customer needs for example our operation team is has built and",
    "start": "135280",
    "end": "142239"
  },
  {
    "text": "cloud architecture to monitor network equipments also there is a sre team to manage",
    "start": "142239",
    "end": "148560"
  },
  {
    "text": "containerized application and its release pipeline and we are another sre team to support",
    "start": "148560",
    "end": "155040"
  },
  {
    "text": "enter and application development cycle",
    "start": "155040",
    "end": "159280"
  },
  {
    "text": "one of the software project rindtello and i have worked on is flexible interconnect project which",
    "start": "161440",
    "end": "168640"
  },
  {
    "text": "offers an api to let customers control private connectivity",
    "start": "168640",
    "end": "173840"
  },
  {
    "text": "between their data center cloud and even sas",
    "start": "173840",
    "end": "179200"
  },
  {
    "text": "behind this api we also use cloud native solutions and also we use",
    "start": "179200",
    "end": "185200"
  },
  {
    "text": "infrastructures called practices [Music] so the point was we have many projects",
    "start": "185200",
    "end": "193760"
  },
  {
    "text": "and we use infrastructures called at scale in terms of having multiple projects",
    "start": "193760",
    "end": "200239"
  },
  {
    "text": "but using infrastructure's code at scale we see some challenges",
    "start": "200239",
    "end": "206239"
  },
  {
    "text": "we try to codify everything about infrastructure following the best practice we wrote",
    "start": "208159",
    "end": "215280"
  },
  {
    "text": "many scripts we have a configuration managed by the kit and we expected",
    "start": "215280",
    "end": "222879"
  },
  {
    "text": "the benefits of reusability consistency and transparency but the reality",
    "start": "222879",
    "end": "230159"
  },
  {
    "text": "is chaos we see the more code-based growth the",
    "start": "230159",
    "end": "236480"
  },
  {
    "text": "more code got complicated and fragile",
    "start": "236480",
    "end": "241680"
  },
  {
    "text": "there are many project specific batch scripts baked into pipeline which makes it",
    "start": "241680",
    "end": "247680"
  },
  {
    "text": "harder to share parameter is also our pain point",
    "start": "247680",
    "end": "253360"
  },
  {
    "text": "and as a result we our code got tangled there are many",
    "start": "253360",
    "end": "259040"
  },
  {
    "text": "dependencies between different tools and we finally are scared to make any changes to a",
    "start": "259040",
    "end": "266840"
  },
  {
    "text": "pipeline so we don't see reusability and consistency anymore",
    "start": "266840",
    "end": "273199"
  },
  {
    "text": "did we lack discipline maybe yes but i believe it was not the only case",
    "start": "273199",
    "end": "282720"
  },
  {
    "text": "so what we wanted for infrastructure as code we wanted to write code",
    "start": "282720",
    "end": "289040"
  },
  {
    "text": "using software practice like making a module to share to others",
    "start": "289040",
    "end": "294880"
  },
  {
    "text": "we want one interface for every infrastructure provider and we want most importantly we want",
    "start": "294880",
    "end": "302400"
  },
  {
    "text": "pipeline based in into this architecture design so",
    "start": "302400",
    "end": "309039"
  },
  {
    "text": "we propose new way of infrastructure's code named design pattern as code",
    "start": "309039",
    "end": "317199"
  },
  {
    "text": "it is reusable and composable pattern of cloud native architecture",
    "start": "317199",
    "end": "322800"
  },
  {
    "text": "written in a powerful language for a software developer",
    "start": "322800",
    "end": "328000"
  },
  {
    "text": "so what is design pattern as code design pattern has code addresses",
    "start": "329360",
    "end": "334639"
  },
  {
    "text": "questions about cognitive architecture how to deliver a cloud-native application",
    "start": "334639",
    "end": "340560"
  },
  {
    "text": "and how to integrate cloud-native solutions design pattern declares all of the",
    "start": "340560",
    "end": "346160"
  },
  {
    "text": "infrastructure provider manifest and pipeline it is a small",
    "start": "346160",
    "end": "352560"
  },
  {
    "text": "portion of manifesting pipeline which is composable with other design",
    "start": "352560",
    "end": "358720"
  },
  {
    "text": "pattern specifically we use qland for design",
    "start": "358720",
    "end": "365280"
  },
  {
    "text": "pattern and it consists of infrastructure manifest and dvd pipeline as shown",
    "start": "365280",
    "end": "373199"
  },
  {
    "text": "for the resource declaration we allow enumerating all of the resource configurations for",
    "start": "373199",
    "end": "380160"
  },
  {
    "text": "infra pro infrastructure provider and we also have design pattern",
    "start": "380160",
    "end": "386400"
  },
  {
    "text": "declaring tasks to be executed in the pipeline",
    "start": "386400",
    "end": "391840"
  },
  {
    "text": "those tasks will get a symbol to a text on pipeline we chose tekton because it has a",
    "start": "392880",
    "end": "400160"
  },
  {
    "text": "declarative api and each task is isolated from others as shown in this figure",
    "start": "400160",
    "end": "408319"
  },
  {
    "text": "we compose design pattern tasks into pipe textile pipeline",
    "start": "408319",
    "end": "416000"
  },
  {
    "text": "again we use skewed and for design pattern as code using qlang we compose multiple design",
    "start": "418400",
    "end": "425440"
  },
  {
    "text": "patterns and generate infrastructure manifest",
    "start": "425440",
    "end": "430479"
  },
  {
    "text": "for example we generate kubernetes manifest tcp azure adws manifest in addition",
    "start": "430479",
    "end": "437039"
  },
  {
    "text": "we also compose the patterns to generate tecton pipeline",
    "start": "437039",
    "end": "442160"
  },
  {
    "text": "qlan is a powerful typed language focusing on declaring data",
    "start": "442160",
    "end": "447520"
  },
  {
    "text": "it's designed for scale and it gives us a consistent result",
    "start": "447520",
    "end": "453280"
  },
  {
    "text": "composing multiple patterns",
    "start": "453280",
    "end": "456800"
  },
  {
    "text": "so i just gave a basics of this in pattern as code so let me give you one example",
    "start": "458639",
    "end": "467919"
  },
  {
    "text": "assuming we have api server simple api support server running on gcp cloud",
    "start": "468080",
    "end": "475120"
  },
  {
    "text": "uh the resource configuration could be like this having ingress service deployment",
    "start": "475120",
    "end": "481199"
  },
  {
    "text": "kubernetes manifest cloud monitoring and cloud sql gcp resource",
    "start": "481199",
    "end": "487520"
  },
  {
    "text": "this resource configuration can be break into three patterns",
    "start": "487520",
    "end": "492800"
  },
  {
    "text": "base pattern api pattern and db pattern",
    "start": "492800",
    "end": "499039"
  },
  {
    "text": "let me show how we compose such patterns into a complete manifest",
    "start": "502000",
    "end": "507680"
  },
  {
    "text": "with base pattern we could have a bare minimum manifest of deployment",
    "start": "507680",
    "end": "512880"
  },
  {
    "text": "as shown here on adding api pattern we need to",
    "start": "512880",
    "end": "520240"
  },
  {
    "text": "add ingress and service resource and also we need to compose some",
    "start": "520240",
    "end": "526320"
  },
  {
    "text": "parameter parameters to deployment manifest to route traffic to the containers",
    "start": "526320",
    "end": "533120"
  },
  {
    "text": "for gcp resource we need some uptime check config to check the health of the api",
    "start": "533120",
    "end": "541120"
  },
  {
    "text": "on adding db pattern we obviously need cloud sql instance config and also",
    "start": "544800",
    "end": "551360"
  },
  {
    "text": "we want to compose cloud sql proxy as a sidecar",
    "start": "551360",
    "end": "557519"
  },
  {
    "text": "running sidecar proxy is a solution provided by google cloud documentation so this is",
    "start": "557760",
    "end": "566000"
  },
  {
    "text": "definitely a best practice a pattern to use cloud sql",
    "start": "566000",
    "end": "572080"
  },
  {
    "text": "this means users just need to subscribe the db pattern to start using cloud sql best practice",
    "start": "572080",
    "end": "580640"
  },
  {
    "text": "next i will show how we compose pipelines having base pattern we only have this",
    "start": "582720",
    "end": "589600"
  },
  {
    "text": "very basic pipeline building image and deployed to kubernetes",
    "start": "589600",
    "end": "597040"
  },
  {
    "text": "on the right side figure you can see tecton pipeline definition",
    "start": "597040",
    "end": "602560"
  },
  {
    "text": "i highlighted the task generate manifest where we compose multiple patterns to",
    "start": "602560",
    "end": "608959"
  },
  {
    "text": "generate manifest as described before",
    "start": "608959",
    "end": "618240"
  },
  {
    "text": "on adding api pattern we may want to add",
    "start": "618240",
    "end": "624640"
  },
  {
    "text": "a task to check api right after the deploy task",
    "start": "624640",
    "end": "632079"
  },
  {
    "text": "on adding dbdb pattern we may want to add backup db task",
    "start": "632079",
    "end": "637839"
  },
  {
    "text": "before the deploy task such tasks will get composed into the",
    "start": "637839",
    "end": "643519"
  },
  {
    "text": "original text on pipeline definition as shown in the right figure",
    "start": "643519",
    "end": "649279"
  },
  {
    "text": "so i have showed design patterns for both for manifest and pipeline separately",
    "start": "651839",
    "end": "659360"
  },
  {
    "text": "and the complete api pattern could be like this it would have manifest and pipeline",
    "start": "659360",
    "end": "667279"
  },
  {
    "text": "in the same context so this is an example of api pattern",
    "start": "667279",
    "end": "673200"
  },
  {
    "text": "implementation as mentioned we use qlank and in this definition we declare resource",
    "start": "673200",
    "end": "681279"
  },
  {
    "text": "configuration and task configuration design pattern",
    "start": "681279",
    "end": "686320"
  },
  {
    "text": "could have parameter such as domain name as shown and",
    "start": "686320",
    "end": "691920"
  },
  {
    "text": "in this example we use this domain name parameter for both uptime check config and check",
    "start": "691920",
    "end": "699120"
  },
  {
    "text": "api task this means on changing this parameter both",
    "start": "699120",
    "end": "704480"
  },
  {
    "text": "optim check config and the task check api would get updated automatically",
    "start": "704480",
    "end": "711680"
  },
  {
    "text": "this small example shows how design pattern as code help keeping consistency between",
    "start": "712639",
    "end": "718720"
  },
  {
    "text": "configuration and pipeline this is an approach of similar to software",
    "start": "718720",
    "end": "726160"
  },
  {
    "text": "development practice to make a small package to pack resource and task in a single",
    "start": "726160",
    "end": "733839"
  },
  {
    "text": "context",
    "start": "733839",
    "end": "736320"
  },
  {
    "text": "so finally it's demo time let me take handover this presentation to ring tarot",
    "start": "739360",
    "end": "745920"
  },
  {
    "text": "okay uh today we're gonna have a small demonstration to describe our design pattern as called",
    "start": "745920",
    "end": "753200"
  },
  {
    "text": "coral concept as jun described in the previous right when we launched new microservice we",
    "start": "753200",
    "end": "760720"
  },
  {
    "text": "have to consider not only the kubernetes manifest but also public cloud layer resources",
    "start": "760720",
    "end": "767839"
  },
  {
    "text": "monitoring functions or application delivery flow so in this demo session we will describe",
    "start": "767839",
    "end": "776000"
  },
  {
    "text": "how tech reads deploys an application with design pattern",
    "start": "776000",
    "end": "781440"
  },
  {
    "text": "okay okay this way i will show you two steps",
    "start": "781920",
    "end": "788959"
  },
  {
    "text": "demo first step just deploy an application and second step deploy application and",
    "start": "788959",
    "end": "795360"
  },
  {
    "text": "export api endpoint and create monitoring functions after this demo",
    "start": "795360",
    "end": "801360"
  },
  {
    "text": "session okay before that let me share my screen",
    "start": "801360",
    "end": "807360"
  },
  {
    "text": "this one i think",
    "start": "807680",
    "end": "810560"
  },
  {
    "text": "okay after them session the ap application is working with",
    "start": "812839",
    "end": "818560"
  },
  {
    "text": "this endpoints this is not working right now and also at the uptime checks",
    "start": "818560",
    "end": "825839"
  },
  {
    "text": "google uptime checks to this page okay go to the simple application",
    "start": "825839",
    "end": "834959"
  },
  {
    "text": "depository this is the application label then target application is simple flask",
    "start": "834959",
    "end": "842880"
  },
  {
    "text": "app this one this just responds hardware",
    "start": "842880",
    "end": "849680"
  },
  {
    "text": "for the user api request this one and also",
    "start": "849680",
    "end": "858000"
  },
  {
    "text": "i will show you update q file upload q file is this is kind of",
    "start": "858000",
    "end": "864000"
  },
  {
    "text": "manifest file to define which design proton you want to use",
    "start": "864000",
    "end": "869680"
  },
  {
    "text": "in this file you can declare application specific input parameters",
    "start": "869680",
    "end": "876399"
  },
  {
    "text": "like gcp project ids and gk clustered information called",
    "start": "876399",
    "end": "883120"
  },
  {
    "text": "application deployment and also most important",
    "start": "883120",
    "end": "889920"
  },
  {
    "text": "point is you can see",
    "start": "889920",
    "end": "894959"
  },
  {
    "text": "deployment uh uh kubernetes manifest specs",
    "start": "894959",
    "end": "902720"
  },
  {
    "text": "and also techno pipeline specs for container build and deploy",
    "start": "902720",
    "end": "909120"
  },
  {
    "text": "application tasks okay",
    "start": "909120",
    "end": "914160"
  },
  {
    "text": "anyway let's generate a text on pipeline using this design pattern",
    "start": "914160",
    "end": "922000"
  },
  {
    "text": "okay let me follow this lead me",
    "start": "922079",
    "end": "927600"
  },
  {
    "text": "copy and go to my screen",
    "start": "928000",
    "end": "933120"
  },
  {
    "text": "and anyway just run generate text on pipelines and apply it",
    "start": "935600",
    "end": "942720"
  },
  {
    "text": "and let me run first like some pipeline run okay okay then uh",
    "start": "943040",
    "end": "950800"
  },
  {
    "text": "let me show you a little bit this generate text on pipeline shell",
    "start": "950800",
    "end": "957199"
  },
  {
    "text": "okay uh this is a just simple shell script and document learning",
    "start": "959440",
    "end": "965680"
  },
  {
    "text": "container qrang offshore image and specify which uh resource type this type",
    "start": "965680",
    "end": "973519"
  },
  {
    "text": "this time specified tectum pipeline and specify application",
    "start": "973519",
    "end": "980480"
  },
  {
    "text": "divisions and design proton revision as well okay okay then uh",
    "start": "980480",
    "end": "990000"
  },
  {
    "text": "i i will show you uh okay script and uh let me go to the uh",
    "start": "990399",
    "end": "998240"
  },
  {
    "text": "tectum dashboard to show the uh what techno resources",
    "start": "998240",
    "end": "1005920"
  },
  {
    "text": "are applied okay i think you can see containability task",
    "start": "1005920",
    "end": "1014000"
  },
  {
    "text": "this task is optimized for our environment so developer can build containers with",
    "start": "1014000",
    "end": "1021440"
  },
  {
    "text": "uh tuned containability environment and actually we leverage the build kit",
    "start": "1021440",
    "end": "1028720"
  },
  {
    "text": "and using local cache like this and also",
    "start": "1028720",
    "end": "1038319"
  },
  {
    "text": "this one deploy kubernetes then i will show you the compile",
    "start": "1040640",
    "end": "1047839"
  },
  {
    "text": "step okay actually in this previous uh shell",
    "start": "1047839",
    "end": "1054400"
  },
  {
    "text": "command we generated uh text on pipeline resources however in pipeline uh compile tasks",
    "start": "1054400",
    "end": "1062000"
  },
  {
    "text": "generate kubernetes manifest of application based on design pattern",
    "start": "1062000",
    "end": "1068480"
  },
  {
    "text": "i will show you all this one i think this is actual uh text on task step",
    "start": "1068480",
    "end": "1076080"
  },
  {
    "text": "and specified upload the q file and output yaml file",
    "start": "1076080",
    "end": "1083039"
  },
  {
    "text": "after that generate fibonacci namespace and also deployment",
    "start": "1083039",
    "end": "1092880"
  },
  {
    "text": "this is very simple design uh for demo in actual design pattern you can add",
    "start": "1093360",
    "end": "1099520"
  },
  {
    "text": "liveness and readiness proof or adding uh ad animations or specified",
    "start": "1099520",
    "end": "1106000"
  },
  {
    "text": "correlations based on your application requirement okay",
    "start": "1106000",
    "end": "1111440"
  },
  {
    "text": "uh let's move to a second step demo",
    "start": "1111440",
    "end": "1117679"
  },
  {
    "text": "okay uh current manifest does not deploy ingress and service so we have to update",
    "start": "1118400",
    "end": "1124880"
  },
  {
    "text": "design product to expose api endpoint and add monitoring functions",
    "start": "1124880",
    "end": "1132160"
  },
  {
    "text": "okay let me show you what to do okay",
    "start": "1132160",
    "end": "1139919"
  },
  {
    "text": "let me uh change my our branch check out to testing",
    "start": "1139919",
    "end": "1148840"
  },
  {
    "text": "okay uh at first generate text on pipeline as same as",
    "start": "1148840",
    "end": "1155360"
  },
  {
    "text": "previous version and also run it at first",
    "start": "1155360",
    "end": "1165600"
  },
  {
    "text": "okay okay then uh pipeline just checked and",
    "start": "1165600",
    "end": "1172960"
  },
  {
    "text": "before i uh go to tecton dashboard let me show you a little bit what's the new",
    "start": "1172960",
    "end": "1178480"
  },
  {
    "text": "stuff okay this is a brief",
    "start": "1178480",
    "end": "1183840"
  },
  {
    "text": "you can see the import design new design pattern gcp api and added new input parameters",
    "start": "1183840",
    "end": "1192880"
  },
  {
    "text": "to specify the global ip name or domain name and also",
    "start": "1192880",
    "end": "1200000"
  },
  {
    "text": "this is just binding parameters and at last uh at its uptime check",
    "start": "1200320",
    "end": "1208000"
  },
  {
    "text": "config okay then uh",
    "start": "1208000",
    "end": "1213600"
  },
  {
    "text": "let's go to the tekton dashboard racking",
    "start": "1213600",
    "end": "1220080"
  },
  {
    "text": "this is running actually the build image part is totally same with previous one",
    "start": "1220080",
    "end": "1228000"
  },
  {
    "text": "and deploy fibonacci is now just start it",
    "start": "1228000",
    "end": "1236080"
  },
  {
    "text": "okay",
    "start": "1236880",
    "end": "1239280"
  },
  {
    "text": "working okay just comparing now",
    "start": "1242000",
    "end": "1249360"
  },
  {
    "text": "as you can see the uh compile part is totally same actually uh",
    "start": "1249360",
    "end": "1256000"
  },
  {
    "text": "revision version is has been updated then you can see generated",
    "start": "1256000",
    "end": "1263760"
  },
  {
    "text": "new furniture manifest [Music] okay you can see",
    "start": "1263760",
    "end": "1270960"
  },
  {
    "text": "new deployment uh new humanities manifests you can see the ingress part",
    "start": "1270960",
    "end": "1279360"
  },
  {
    "text": "and with the annotation kubernetes ingress and specified global static ib space",
    "start": "1279360",
    "end": "1285760"
  },
  {
    "text": "right specification and the also the service first you can see",
    "start": "1285760",
    "end": "1293120"
  },
  {
    "text": "service resources and other annotations that google cloud",
    "start": "1293120",
    "end": "1298559"
  },
  {
    "text": "network endpoint group so as you can see the",
    "start": "1298559",
    "end": "1305840"
  },
  {
    "text": "new design pattern generate these kind of updates and also",
    "start": "1306080",
    "end": "1312880"
  },
  {
    "text": "you can see check api task so this means the new design pattern",
    "start": "1312880",
    "end": "1320080"
  },
  {
    "text": "uh also update the text on task as well",
    "start": "1320080",
    "end": "1326400"
  },
  {
    "text": "and uh create uptime checks resources and check api",
    "start": "1326400",
    "end": "1332960"
  },
  {
    "text": "availability waiting the api works fine then",
    "start": "1332960",
    "end": "1340559"
  },
  {
    "text": "it looks the this pipeline works works fine then",
    "start": "1340559",
    "end": "1347120"
  },
  {
    "text": "let me check the uh application status okay hello world",
    "start": "1347120",
    "end": "1354559"
  },
  {
    "text": "uh this means the new design pattern is working fine and endpoint works fine",
    "start": "1354559",
    "end": "1364080"
  },
  {
    "text": "and also check the uptime checks let me",
    "start": "1364080",
    "end": "1369120"
  },
  {
    "text": "reload reloading",
    "start": "1372840",
    "end": "1378480"
  },
  {
    "text": "okay uh you can see cubicle demo app actually uh check status is",
    "start": "1380559",
    "end": "1388480"
  },
  {
    "text": "uh have run have not run yet but i think this uh takes",
    "start": "1388480",
    "end": "1395600"
  },
  {
    "text": "a few minutes i think maybe it will be fine okay",
    "start": "1395600",
    "end": "1402000"
  },
  {
    "text": "uh this is uh one with the design protein user scenario",
    "start": "1402000",
    "end": "1407520"
  },
  {
    "text": "i think uh that's all my uh that's all my demonstration as i shown uh at the api endpoint",
    "start": "1407520",
    "end": "1416559"
  },
  {
    "text": "and create uptime checks resources by just change design button okay uh",
    "start": "1416559",
    "end": "1423200"
  },
  {
    "text": "as you shown after it api endpoint is working fine",
    "start": "1423200",
    "end": "1430720"
  },
  {
    "text": "you can see her work and also the you can check the uptime checks",
    "start": "1430720",
    "end": "1438080"
  },
  {
    "text": "oh reload okay uh you can see cubicle on them up",
    "start": "1438159",
    "end": "1446159"
  },
  {
    "text": "then all stators is going okay uh that's all",
    "start": "1446159",
    "end": "1452320"
  },
  {
    "text": "from that's all my demonstration right so thank you for the wonderful demo rintaro",
    "start": "1452320",
    "end": "1458799"
  },
  {
    "text": "the point was that a user just subscribed the api design pattern",
    "start": "1458799",
    "end": "1464080"
  },
  {
    "text": "and then user can easily expose its applications api to customer this implies that design",
    "start": "1464080",
    "end": "1471600"
  },
  {
    "text": "pattern could be written from written by a different engineer like the one who is specialized in the",
    "start": "1471600",
    "end": "1477279"
  },
  {
    "text": "google cloud google cloud specification because they require some object",
    "start": "1477279",
    "end": "1482720"
  },
  {
    "text": "uptime check config and some other load balancer specifications and user just need can focus on the",
    "start": "1482720",
    "end": "1490000"
  },
  {
    "text": "flask application in this demo so this means that we can apply this",
    "start": "1490000",
    "end": "1496480"
  },
  {
    "text": "scenario into many other uh cases [Music] for example we can apply this into the",
    "start": "1496480",
    "end": "1504240"
  },
  {
    "text": "security scenario uh having a dedicated security team who can just focus on the design pattern for the",
    "start": "1504240",
    "end": "1510880"
  },
  {
    "text": "security and enforce the security policy like having a security check scanning a",
    "start": "1510880",
    "end": "1517760"
  },
  {
    "text": "container renewability check scanning and others",
    "start": "1517760",
    "end": "1523840"
  },
  {
    "text": "in addition we can also apply this design pattern to observability",
    "start": "1525360",
    "end": "1532559"
  },
  {
    "text": "we can have another team who can write a design pattern to establish a",
    "start": "1532559",
    "end": "1538960"
  },
  {
    "text": "monitoring use case have some agent to collect the metrics telemetries and send it to some back end for example",
    "start": "1538960",
    "end": "1546240"
  },
  {
    "text": "we may we can have some design pattern per we're turning back and like",
    "start": "1546240",
    "end": "1551279"
  },
  {
    "text": "datadog or maybe stackdriver cloudwatch and so on",
    "start": "1551279",
    "end": "1557170"
  },
  {
    "text": "[Music] and then and also uh we can use this design pattern to just",
    "start": "1557170",
    "end": "1563520"
  },
  {
    "text": "swap the platform we just need to prepare design pattern per platform and if you",
    "start": "1563520",
    "end": "1570960"
  },
  {
    "text": "want to just move your application you can just you just need to swap the pattern to",
    "start": "1570960",
    "end": "1576799"
  },
  {
    "text": "the other platform so i think the design pattern has many",
    "start": "1576799",
    "end": "1582080"
  },
  {
    "text": "potential and let me add more about design pattern as code",
    "start": "1582080",
    "end": "1588480"
  },
  {
    "text": "so design pattern as code is a new interface for maximizing product value stream it is to",
    "start": "1590400",
    "end": "1598400"
  },
  {
    "text": "write infrastructure as code with a software practice to scale",
    "start": "1598400",
    "end": "1604880"
  },
  {
    "text": "and also it includes pipeline to architecture design and design pattern is called the",
    "start": "1604880",
    "end": "1611279"
  },
  {
    "text": "developer reuse well architected patterns and reduce",
    "start": "1611279",
    "end": "1616400"
  },
  {
    "text": "infrastructure management cost as a result developer can focus on its application",
    "start": "1616400",
    "end": "1622880"
  },
  {
    "text": "business logic more before",
    "start": "1622880",
    "end": "1627840"
  },
  {
    "text": "well design pattern as code is one of the implementation of the idea of configuration as data",
    "start": "1629840",
    "end": "1636720"
  },
  {
    "text": "an approach to generate configuration in a pipeline but design patterns code is unique",
    "start": "1636720",
    "end": "1643919"
  },
  {
    "text": "because it covers pipeline as well",
    "start": "1643919",
    "end": "1648080"
  },
  {
    "text": "i must leave note that design patterns code doesn't solve every problems around infrastructure's",
    "start": "1651600",
    "end": "1658399"
  },
  {
    "text": "code design pattern is a new interface new tool link but it to use it in the production pro i we",
    "start": "1658399",
    "end": "1665919"
  },
  {
    "text": "believe that it requires another layer to do the state management",
    "start": "1665919",
    "end": "1672399"
  },
  {
    "text": "so we entity communications have built a new platform on top of design pattern",
    "start": "1677600",
    "end": "1683360"
  },
  {
    "text": "as code state management which i described in the previous slide is already built in this platform and we",
    "start": "1683360",
    "end": "1691600"
  },
  {
    "text": "also automate all of the operations around using design pattern as code",
    "start": "1691600",
    "end": "1696960"
  },
  {
    "text": "for example parameters handling so our as a results our platform let",
    "start": "1696960",
    "end": "1703760"
  },
  {
    "text": "developer easily subscribe patterns and truly focus on their application",
    "start": "1703760",
    "end": "1709200"
  },
  {
    "text": "development oh and i i need to mention that this",
    "start": "1709200",
    "end": "1716399"
  },
  {
    "text": "platform is only used for the internal project for now but if you guys are",
    "start": "1716399",
    "end": "1721679"
  },
  {
    "text": "interested in please reach out to us",
    "start": "1721679",
    "end": "1725840"
  },
  {
    "text": "at the end we propose design pattern as code it is reusable and composable pattern of",
    "start": "1727440",
    "end": "1734159"
  },
  {
    "text": "cloud native architecture design patterns code includes both manifest and pipeline",
    "start": "1734159",
    "end": "1740480"
  },
  {
    "text": "and solves consistency and reusability for those pipeline and manifest",
    "start": "1740480",
    "end": "1747600"
  },
  {
    "text": "thank you for listening our session and if you guys have any questions feel free to reach out to us at twitter",
    "start": "1750000",
    "end": "1757200"
  },
  {
    "text": "we are happy to have some discussion about infrastructure's code in general as well",
    "start": "1757200",
    "end": "1764320"
  },
  {
    "text": "thank you",
    "start": "1764720",
    "end": "1767840"
  },
  {
    "text": "okay so it's live q a session now uh thank you for",
    "start": "1771600",
    "end": "1777679"
  },
  {
    "text": "listening uh let me pick some of the questions we have here uh let me see",
    "start": "1777679",
    "end": "1786320"
  },
  {
    "text": "maybe this one i'll first publish the answer to public so that you guys know that all the users",
    "start": "1786880",
    "end": "1793679"
  },
  {
    "text": "know the question so the question is uh about the design",
    "start": "1793679",
    "end": "1800399"
  },
  {
    "text": "pattern as a code uh is it only for the kubernetes or maybe",
    "start": "1800399",
    "end": "1805440"
  },
  {
    "text": "or it can take care of the other infrastructure and the question the answer is i can",
    "start": "1805440",
    "end": "1812399"
  },
  {
    "text": "uh take care of the infrastructure like ccp as rinton showed in the demo",
    "start": "1812399",
    "end": "1819440"
  },
  {
    "text": "though the demo was there was a huge delay on the demo so uh but there's a",
    "start": "1819440",
    "end": "1826640"
  },
  {
    "text": "note that here that the our approach is currently only for uh",
    "start": "1826640",
    "end": "1832559"
  },
  {
    "text": "the cloud declarative api and as far as it has a decorative api it",
    "start": "1832559",
    "end": "1838320"
  },
  {
    "text": "should be able to take care of those infrastructure deployments by deploy design pattern as",
    "start": "1838320",
    "end": "1846320"
  },
  {
    "text": "code because we can just we just need to build the decorative api uh using the q",
    "start": "1846320",
    "end": "1853440"
  },
  {
    "text": "language and composite and then we can deploy so",
    "start": "1853440",
    "end": "1858960"
  },
  {
    "text": "uh yeah so the answer is we can take care of the other infrastructure and the gcp is the one use case we already",
    "start": "1858960",
    "end": "1865440"
  },
  {
    "text": "showed okay that was the one question",
    "start": "1865440",
    "end": "1871279"
  },
  {
    "text": "and let me pick another one and hand over to in tarou",
    "start": "1871279",
    "end": "1876320"
  },
  {
    "text": "okay okay uh let me pick number 12 question",
    "start": "1876840",
    "end": "1883360"
  },
  {
    "text": "the question is that did you consider consider argo over tectum yeah",
    "start": "1883360",
    "end": "1889679"
  },
  {
    "text": "uh actually i know the argo is great with this application",
    "start": "1889679",
    "end": "1895840"
  },
  {
    "text": "but at that at this moment the the answer is no because the",
    "start": "1895840",
    "end": "1902880"
  },
  {
    "text": "argument is the kind of the full design the application deployment",
    "start": "1902880",
    "end": "1908559"
  },
  {
    "text": "logic i mean the deployment logic is the i mean",
    "start": "1908559",
    "end": "1916559"
  },
  {
    "text": "kubernetes kubernetes side has deployment logic but our approach is that we are leveraged",
    "start": "1916559",
    "end": "1922480"
  },
  {
    "text": "tecton and we can define and we can customize our only our specific uh development",
    "start": "1922480",
    "end": "1930399"
  },
  {
    "text": "logic like taking baby backup or loading upgrade based on the application requirement",
    "start": "1930399",
    "end": "1937760"
  },
  {
    "text": "that's i think the difference very different point",
    "start": "1937760",
    "end": "1942639"
  },
  {
    "text": "okay okay thank you let me pick another one because we still have some",
    "start": "1944000",
    "end": "1949600"
  },
  {
    "text": "time here is another question i published to",
    "start": "1949600",
    "end": "1955200"
  },
  {
    "text": "public so the question is are the pipelines for deploying",
    "start": "1955200",
    "end": "1960840"
  },
  {
    "text": "and deploying infrared code or for deploying app itself and",
    "start": "1960840",
    "end": "1967039"
  },
  {
    "text": "this is a great question because the answer is both uh",
    "start": "1967039",
    "end": "1972480"
  },
  {
    "text": "our approach is to take care of both the generating the infrastructure's code from design pattern",
    "start": "1972480",
    "end": "1978640"
  },
  {
    "text": "and deploy it to the kubernetes it means deploying the application itself",
    "start": "1978640",
    "end": "1984399"
  },
  {
    "text": "and as i answered before in the previous question the design pattern as code can take care",
    "start": "1984399",
    "end": "1990960"
  },
  {
    "text": "of both kubernetes in the other infrastructure layer so",
    "start": "1990960",
    "end": "1996559"
  },
  {
    "text": "as a result our approach it will take care of generating the",
    "start": "1997440",
    "end": "2003120"
  },
  {
    "text": "infrastructure as code for both kubernetes and and the cloud infrastructure layer",
    "start": "2003120",
    "end": "2008880"
  },
  {
    "text": "and deploy the application on the cloud infrastructure and this is",
    "start": "2008880",
    "end": "2015519"
  },
  {
    "text": "can be so using the q language we generate the the collective api for both",
    "start": "2015519",
    "end": "2021360"
  },
  {
    "text": "deploying how to deploy the application how to configure the infrastructure",
    "start": "2021360",
    "end": "2027440"
  },
  {
    "text": "okay so that's the answer and rental would you like to go next",
    "start": "2028159",
    "end": "2035840"
  },
  {
    "text": "uh okay let me pick number 39 i think that's the last one",
    "start": "2036000",
    "end": "2044799"
  },
  {
    "text": "okay the question is does it support telehome project that's a very good question actually we",
    "start": "2044799",
    "end": "2051280"
  },
  {
    "text": "love telephone and we are actually still using telehome but uh actually in",
    "start": "2051280",
    "end": "2058878"
  },
  {
    "text": "our internal project uh we are using prumi the",
    "start": "2058879",
    "end": "2065118"
  },
  {
    "text": "promise i can i mean premier can use we use telehome provider",
    "start": "2065119",
    "end": "2073679"
  },
  {
    "text": "then the we the answer is we're still using uh telehome but",
    "start": "2073679",
    "end": "2080158"
  },
  {
    "text": "we want to migrate to prove me because it's more programmable interface",
    "start": "2080159",
    "end": "2086800"
  },
  {
    "text": "that has more programmable interface [Music]",
    "start": "2086800",
    "end": "2093599"
  },
  {
    "text": "okay okay hold on so i think it's time to finish this session and thank you for",
    "start": "2093599",
    "end": "2099680"
  },
  {
    "text": "joining the session and feel free to jump into the slack channel that we will",
    "start": "2099680",
    "end": "2104960"
  },
  {
    "text": "still online to answer the remaining questions thank you thank you bye",
    "start": "2104960",
    "end": "2115280"
  }
]