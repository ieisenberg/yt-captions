[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "thank you guys for coming my name is Frank Greco I am a cloud native engineer at Northwestern Mutual in Milwaukee",
    "start": "299",
    "end": "6509"
  },
  {
    "text": "Wisconsin if you haven't done so you can check out our booth we're not a vendor but we are showing off how we do",
    "start": "6509",
    "end": "11519"
  },
  {
    "text": "kubernetes at scale talk about Canali and maybe attract some talent along the way so Northwestern Mutual built a nice",
    "start": "11519",
    "end": "20609"
  },
  {
    "text": "tower opened earlier this year all right",
    "start": "20609",
    "end": "27900"
  },
  {
    "start": "27000",
    "end": "140000"
  },
  {
    "text": "I do I do 27th floor it's 32 so ITV gets the top",
    "start": "27900",
    "end": "33780"
  },
  {
    "text": "floors so I'm here to talk about Canali which is an open source API gateway",
    "start": "33780",
    "end": "39320"
  },
  {
    "text": "kubernetes native cloud native the plan is to blow through a bunch of slides do a demo and then leave plenty",
    "start": "39320",
    "end": "45690"
  },
  {
    "text": "of time for questions because I'm sure you guys will have plenty and so the",
    "start": "45690",
    "end": "51120"
  },
  {
    "text": "first thing I want to talk about is API is why API is why an api gateway etc brush up on some of the terms if you",
    "start": "51120",
    "end": "57390"
  },
  {
    "text": "haven't dealt with them a while or introduced them if you haven't so we'll start with a simple example so let's say",
    "start": "57390",
    "end": "63870"
  },
  {
    "text": "if a Google home and you want to talk to a nest what you'll do is you'll actually go through Google home will call the",
    "start": "63870",
    "end": "71820"
  },
  {
    "text": "nest services and then the nest services will talk to the nest for you but what's going to happen is it's going to go",
    "start": "71820",
    "end": "78270"
  },
  {
    "text": "through a little piece of software called an API gateway and that's going to make sure that you're not maybe",
    "start": "78270",
    "end": "84180"
  },
  {
    "text": "calling the API make sure you know it rate limits it maybe does some",
    "start": "84180",
    "end": "89460"
  },
  {
    "text": "transformation you get all these things that come with what's called API management so things like API API key",
    "start": "89460",
    "end": "96840"
  },
  {
    "text": "authorization and a JD Beatty authorization you know rate limiting transformation monitoring routing tracing etc and it's",
    "start": "96840",
    "end": "105360"
  },
  {
    "text": "this piece of software it's one piece of software it's a gateway and it's the entry point to all of your API s and",
    "start": "105360",
    "end": "111090"
  },
  {
    "text": "then traffic goes from the Gateway to your back-end services so some common",
    "start": "111090",
    "end": "116310"
  },
  {
    "text": "examples of those in the industry might be Apogee the azure API gateway mule soft Kong the AWS API gateway so if",
    "start": "116310",
    "end": "128099"
  },
  {
    "text": "pictures help you associate vendors to solutions think of these when think of an API gateway and this is what",
    "start": "128099",
    "end": "134769"
  },
  {
    "text": "Canalis helps to solve and we'll talk about it more in a little bit so that's what an API gateway is I'm so now I'm",
    "start": "134769",
    "end": "141129"
  },
  {
    "start": "140000",
    "end": "438000"
  },
  {
    "text": "gonna take you through a little bit of history on the API management at Northwestern Mutual and how we've",
    "start": "141129",
    "end": "146200"
  },
  {
    "text": "evolved from where we were two years ago on kubernetes 9 to where we are today with Canali in production so here we",
    "start": "146200",
    "end": "155889"
  },
  {
    "text": "have two VP C's this is a setup that we have for our Northwestern Mutual website so here we'll have a VP C on the left",
    "start": "155889",
    "end": "161829"
  },
  {
    "text": "and a VP C on the right and we'll peer them and we'll have our we'll have our",
    "start": "161829",
    "end": "167079"
  },
  {
    "text": "micro apps or the apps that are running our UI in one VPC and then we'll have our kubernetes cluster in another and so",
    "start": "167079",
    "end": "173980"
  },
  {
    "text": "here whatever our cluster and the way we started out is we gave every kubernetes service and ELB me expose it by a node",
    "start": "173980",
    "end": "179530"
  },
  {
    "text": "port and then this blob of squares represents the vendor that we were using",
    "start": "179530",
    "end": "185500"
  },
  {
    "text": "and all traffic from the left V PC would go through our API management solution",
    "start": "185500",
    "end": "191590"
  },
  {
    "text": "and it is outside of the context of kubernetes is a separate vendor and then traffic would get routed to the",
    "start": "191590",
    "end": "197859"
  },
  {
    "text": "appropriate ELB and then he'll be would route traffic to the service on prom",
    "start": "197859",
    "end": "203049"
  },
  {
    "text": "woes it got pricey over time as we scaled a number of services each service needed its own EOB and so we needed a",
    "start": "203049",
    "end": "208870"
  },
  {
    "text": "better way and so we did what's lots of people in the community did is we had an",
    "start": "208870",
    "end": "215379"
  },
  {
    "text": "ingress controller and then we threw one alb on top of it and then service would go from the API management vendor",
    "start": "215379",
    "end": "223359"
  },
  {
    "text": "solution through the EOB onto the ingress controller and then based on context route and some other some other",
    "start": "223359",
    "end": "230590"
  },
  {
    "text": "items traffic would get would land on whatever kubernetes service you wanted and so then you got rid of the price now",
    "start": "230590",
    "end": "237959"
  },
  {
    "text": "this may look calling all well and good but what it's not showing you is the mess that may or may not be like the",
    "start": "237959",
    "end": "244720"
  },
  {
    "text": "vendor solution so what happens is when you have a cloud native tech stack you want the tools that service your",
    "start": "244720",
    "end": "251680"
  },
  {
    "text": "application to be as cloud native as possible and so if you're using a vendor as an API gateway that's outside of the",
    "start": "251680",
    "end": "257799"
  },
  {
    "text": "context of kubernetes you lose a lot of insight that you can get from having something running inside of the context of kubernetes and then because it's",
    "start": "257799",
    "end": "264700"
  },
  {
    "text": "maybe not a cloud native lucien it's different and hard to automate you may need like two or three",
    "start": "264700",
    "end": "270140"
  },
  {
    "text": "different types of databases to store the information and it's hard to",
    "start": "270140",
    "end": "275870"
  },
  {
    "text": "integrate into your into your pipeline in your CI CD model because now you may",
    "start": "275870",
    "end": "281900"
  },
  {
    "text": "be forced to configure stuff through the UI when you want to do them as code and so there's a big mess of stuff and it",
    "start": "281900",
    "end": "288320"
  },
  {
    "text": "didn't really fit well with the cloud native approach that we wanted to take with our environments and so we thought",
    "start": "288320",
    "end": "296690"
  },
  {
    "text": "that we could create a an open source solution for this and if we were going",
    "start": "296690",
    "end": "302600"
  },
  {
    "text": "to create an open source solution to solve this problem we have some design goals and have very high-level design goals so when I had to be innovative so",
    "start": "302600",
    "end": "311000"
  },
  {
    "text": "we needed to be solving a we need to be solving a problem not only in the context of Northwestern Mutual but also",
    "start": "311000",
    "end": "318410"
  },
  {
    "text": "solve a problem in the context of larger open-source community so that we can contribute it back and that others could",
    "start": "318410",
    "end": "323690"
  },
  {
    "text": "benefit from it I need it to be lightweight so it needed to be just",
    "start": "323690",
    "end": "329590"
  },
  {
    "text": "minimal resources minimal you know amount of pods if it's in kubernetes running and just stupid simple to deploy",
    "start": "329590",
    "end": "336100"
  },
  {
    "text": "very easy barrier to entry performance centric so this probably goes without",
    "start": "336100",
    "end": "342140"
  },
  {
    "text": "saying it's middleware components so it needs to be very performant robust API",
    "start": "342140",
    "end": "347540"
  },
  {
    "text": "key management at the heart of any you know API management tool this is a big piece of it so we needed to have a",
    "start": "347540",
    "end": "353630"
  },
  {
    "text": "robust kubernetes native a way to handle it you did have an extensible plug-in framework so again you'll also see this",
    "start": "353630",
    "end": "360770"
  },
  {
    "text": "with API management vendor solutions it's maybe not a good idea to hard-code every single possible thing that you",
    "start": "360770",
    "end": "367910"
  },
  {
    "text": "might want to do into an API gateway but create a way where other people can add their own functionality so if they want",
    "start": "367910",
    "end": "374330"
  },
  {
    "text": "to do their own complex transformation for their business use case for example they can do so it need to be kubernetes",
    "start": "374330",
    "end": "381740"
  },
  {
    "text": "native so kubernetes is all about its metadata and when you have your Gateway",
    "start": "381740",
    "end": "388490"
  },
  {
    "text": "in the context of kubernetes you can do some pretty cool stuff with canary routing and also things so we'll look at",
    "start": "388490",
    "end": "396979"
  },
  {
    "text": "in a second but you know custom resource definitions you're able to create kubernetes native",
    "start": "396979",
    "end": "402199"
  },
  {
    "text": "specifications and you get things like storage for free divers tooling so the",
    "start": "402199",
    "end": "408199"
  },
  {
    "text": "gateway is just one piece of it but you can't have a full API management solution without tools for tracing analytics and monitoring automatic API",
    "start": "408199",
    "end": "416120"
  },
  {
    "text": "key generation etc so it needed to have this whole ecosystem of tooling around it and needed to be easy to automate and",
    "start": "416120",
    "end": "423080"
  },
  {
    "text": "this is one thing that we did not get with our vendor solution that we were using before and by easy to automate it",
    "start": "423080",
    "end": "428690"
  },
  {
    "text": "not just that it need to be easy to automate it needed to fall in line with the same patterns that we were using for",
    "start": "428690",
    "end": "433789"
  },
  {
    "text": "our existing cloud native automation so",
    "start": "433789",
    "end": "438880"
  },
  {
    "start": "438000",
    "end": "655000"
  },
  {
    "text": "that spawned Canali logos very new and",
    "start": "438880",
    "end": "443990"
  },
  {
    "text": "there's stickers at the sticker table in our booth so feel free to pick them up we have a lot of them so what is canale",
    "start": "443990",
    "end": "451070"
  },
  {
    "text": "Canali is a lightweight kubernetes native API gateway that together with",
    "start": "451070",
    "end": "456620"
  },
  {
    "text": "robust to network policies or together with network policies provide a robust open source solution to kubernetes",
    "start": "456620",
    "end": "462889"
  },
  {
    "text": "ingress API management and API security so I'll talk a little bit break this",
    "start": "462889",
    "end": "468260"
  },
  {
    "text": "down a little bit as we go through the next couple of slides but first I want to go back to the picture that we looked at before and look at how with Canali",
    "start": "468260",
    "end": "476360"
  },
  {
    "text": "this picture changed so basically traffic would all go",
    "start": "476360",
    "end": "481610"
  },
  {
    "text": "through the EOB and now we'd be running our API management solution which would also do",
    "start": "481610",
    "end": "487849"
  },
  {
    "text": "our ingress force and traffic would land on one of the pods and it would get",
    "start": "487849",
    "end": "494030"
  },
  {
    "text": "routed to the service so the complexity reduced tremendously resulting in a lot",
    "start": "494030",
    "end": "499490"
  },
  {
    "text": "less infrastructure needed and then yeah so so now now let's look at some of the",
    "start": "499490",
    "end": "509180"
  },
  {
    "text": "differences between a gateway and a service mesh so a lot of you have probably want to talks about a service",
    "start": "509180",
    "end": "515510"
  },
  {
    "text": "mash talks so SCO envoi link your D etc so we have Canali at the top and then we",
    "start": "515510",
    "end": "521390"
  },
  {
    "text": "have our three application pods on the bottom and this is what we want to",
    "start": "521390",
    "end": "526940"
  },
  {
    "text": "happen we want everything to go through Canali our API management layer and traffic to land on a pod problem is",
    "start": "526940",
    "end": "533300"
  },
  {
    "text": "that this is also passable by default and this is not desirable because service service on the left could talk",
    "start": "533300",
    "end": "540649"
  },
  {
    "text": "to service on the right and not get managed not get verified you know with",
    "start": "540649",
    "end": "546440"
  },
  {
    "text": "the API key etc but kubernetes provides a native construct for us to fix this Nats network policies so we control",
    "start": "546440",
    "end": "552440"
  },
  {
    "text": "these lines in here and say hey only traffic is allowed to come from Canali and so it'll make this um it'll it'll",
    "start": "552440",
    "end": "559220"
  },
  {
    "text": "make this this traffic not possible and so with this we're able to take we're",
    "start": "559220",
    "end": "564589"
  },
  {
    "text": "able to completely get around the service mesh and make our clusters a lot more lightweight and just have the",
    "start": "564589",
    "end": "570740"
  },
  {
    "text": "gateway model alright so I mentioned",
    "start": "570740",
    "end": "576649"
  },
  {
    "text": "Canali is lightweight and when you think of an API management solution rate limiting and quota come into their some",
    "start": "576649",
    "end": "583370"
  },
  {
    "text": "people think as quotas a subset of rate limiting but just take that and/or take that as a whoever you think about it but",
    "start": "583370",
    "end": "591230"
  },
  {
    "text": "we needed a lightweight way to basically enforce this across multiple pods so if",
    "start": "591230",
    "end": "598160"
  },
  {
    "text": "you're using a vendor as an API management solution or basically just like you know this monolith application",
    "start": "598160",
    "end": "604209"
  },
  {
    "text": "it can you know check its database get an information back then perhaps see the",
    "start": "604209",
    "end": "610010"
  },
  {
    "text": "requests but one thing Canali boasts is zero network overhead on any requests so",
    "start": "610010",
    "end": "615020"
  },
  {
    "text": "when you Dan incoming requests the only network traffic that happens is the actual proxy to the backend application and back",
    "start": "615020",
    "end": "621020"
  },
  {
    "text": "and so basically Canali implements a ventually consistent method to do base",
    "start": "621020",
    "end": "626360"
  },
  {
    "text": "to do rate limiting and so what will happen is we'll have an incoming request here on the right it'll hit one of the",
    "start": "626360",
    "end": "632870"
  },
  {
    "text": "Canali pods that pod will talk to at CD / g RPC and then via G RPC it will let",
    "start": "632870",
    "end": "639680"
  },
  {
    "text": "the other Canali pods know that has had a traffic point that it's able to update it sufficient in memory store and we",
    "start": "639680",
    "end": "645949"
  },
  {
    "text": "have eventually consistent rate limiting so this set CD is different than the",
    "start": "645949",
    "end": "651199"
  },
  {
    "text": "actual kubernetes at CD or at least that's the recommended approach so",
    "start": "651199",
    "end": "656300"
  },
  {
    "start": "655000",
    "end": "1044000"
  },
  {
    "text": "Canali is open source open source it's it's a very very new project it's like two months two months old we've gotten",
    "start": "656300",
    "end": "664250"
  },
  {
    "text": "some good traction on it so far and it will continue to grow but now",
    "start": "664250",
    "end": "670529"
  },
  {
    "text": "let's dive into how Canali works from like a user side of it and this gets into more of the custom resource",
    "start": "670529",
    "end": "676499"
  },
  {
    "text": "definition side canalis a couple weeks away from a two dado release and so the",
    "start": "676499",
    "end": "684479"
  },
  {
    "text": "specs will be two title specs that we'll be looking at so just to give a brief",
    "start": "684479",
    "end": "689519"
  },
  {
    "text": "about custom resource definitions not going to spend a lot of time on this but",
    "start": "689519",
    "end": "695459"
  },
  {
    "text": "as you probably know keynote mentioned it this morning but kubernetes is a very API driven application and there's three",
    "start": "695459",
    "end": "703679"
  },
  {
    "text": "parts to every API there's a group name a version name and a resource name and",
    "start": "703679",
    "end": "708779"
  },
  {
    "text": "so like if you look at the changelog you know things might be moving from one",
    "start": "708779",
    "end": "714329"
  },
  {
    "text": "version of the next a resource may be graduating to a different version or",
    "start": "714329",
    "end": "719459"
  },
  {
    "text": "they may be moved around to different groups I think one date did some of that and Canali does the same thing so Canali",
    "start": "719459",
    "end": "727739"
  },
  {
    "text": "has a group name canale Tadeo versions and then resource names and it",
    "start": "727739",
    "end": "733109"
  },
  {
    "text": "has four major resources which we'll look at but this is basically how it extends the extends the API so the major",
    "start": "733109",
    "end": "740489"
  },
  {
    "text": "spec is the API proxy spec and these three examples provide examples a lot of",
    "start": "740489",
    "end": "747359"
  },
  {
    "text": "functionality not all the functionality but the main thing to note is the different type of backends that you can",
    "start": "747359",
    "end": "753239"
  },
  {
    "text": "do so Canali allows you to proxy two services inside the cluster allows you",
    "start": "753239",
    "end": "760739"
  },
  {
    "text": "to practice services outside the cluster and allows you to proxy to mock targets which define mock responses that can be",
    "start": "760739",
    "end": "768509"
  },
  {
    "text": "returned and this is key for or the most interesting here's the middle one is the",
    "start": "768509",
    "end": "773519"
  },
  {
    "text": "external endpoint so it's a large organization will have a lot of our",
    "start": "773519",
    "end": "778769"
  },
  {
    "text": "services running inside of kubernetes but what about all the services that are running maybe on the legacy applications you're still going to need some api",
    "start": "778769",
    "end": "784619"
  },
  {
    "text": "gateway solution to do those right but with if you think about it you can still",
    "start": "784619",
    "end": "791069"
  },
  {
    "text": "proxy traffic to legacy applications but still have part of that as a cloud native so you can take your API",
    "start": "791069",
    "end": "796739"
  },
  {
    "text": "management piece and make that cloud native and it has a lot of benefits because you get things like storage for free you get",
    "start": "796739",
    "end": "804060"
  },
  {
    "text": "cloud native configuration or kubernetes native configuration you get a nice pipeline around permissions as code",
    "start": "804060",
    "end": "809519"
  },
  {
    "text": "which I look at it a second but that's something that that is cool and will be",
    "start": "809519",
    "end": "814589"
  },
  {
    "text": "new in - dado but the other thing you'll see here is and we'll talk about plugins",
    "start": "814589",
    "end": "819600"
  },
  {
    "text": "some more in a little bit but you'll notice a plug-in section and this says what plugins will get executed in every",
    "start": "819600",
    "end": "825059"
  },
  {
    "text": "response or on every request and one of the big things for us is we needed a way",
    "start": "825059",
    "end": "830939"
  },
  {
    "text": "to have version controlled plugins and that was something that was a foreign",
    "start": "830939",
    "end": "836579"
  },
  {
    "text": "concept to different products that we had looked at so here we're saying that we're going to use an API key plug-in on",
    "start": "836579",
    "end": "842639"
  },
  {
    "text": "every request we're gonna use this version of this plug-in and then we're gonna pass in some arbitrary",
    "start": "842639",
    "end": "847800"
  },
  {
    "text": "configuration to this plug-in that the plug-in will need to do it's logic and",
    "start": "847800",
    "end": "853160"
  },
  {
    "text": "it's a list of plugins you can create plugins you can add them to your proxy and it will run in a synchronous manner",
    "start": "853160",
    "end": "862129"
  },
  {
    "text": "so this is the API proxy spec we'll see a demo this in a little bit but next is",
    "start": "862129",
    "end": "867720"
  },
  {
    "text": "the API key bindings back so Canali files in our back like approach so we",
    "start": "867720",
    "end": "873750"
  },
  {
    "text": "have API keys which are abstract from which are abstract it from proxies and",
    "start": "873750",
    "end": "879059"
  },
  {
    "text": "then you have API proxies and then you need something that basically binds a set of keys to approximate the API proxy",
    "start": "879059",
    "end": "885899"
  },
  {
    "text": "spec does and it basically says here's a list of keys that have access to this binding and this example were giving",
    "start": "885899",
    "end": "892829"
  },
  {
    "text": "Bob's API key access we're saying that whoever uses this binding Bob's API key",
    "start": "892829",
    "end": "897899"
  },
  {
    "text": "is able to call this proxy 100 times a second and by default they have access to everything let them let them call",
    "start": "897899",
    "end": "904319"
  },
  {
    "text": "everything except if you come in on the slash balance sub path then we're only gonna give you permission to use the to",
    "start": "904319",
    "end": "912389"
  },
  {
    "text": "the get HTTP method this is just a simple example of how you can configure how you can configure permissions but",
    "start": "912389",
    "end": "919290"
  },
  {
    "text": "notice that it's completely abstract from the from the API proxy another",
    "start": "919290",
    "end": "926730"
  },
  {
    "text": "thing that we're doing in v2 here on the right with the API key spec is we needed a way to enforce or not enforce but",
    "start": "926730",
    "end": "932750"
  },
  {
    "text": "to allow for non-breaking API key rotation and so we follow we bump back",
    "start": "932750",
    "end": "938629"
  },
  {
    "text": "and forth a few ideas I github and ultimately we landed on this one but say",
    "start": "938629",
    "end": "944480"
  },
  {
    "text": "you have an active API keen you need to rotate that you'll basically create another version of a revision of that API key and make it active and then",
    "start": "944480",
    "end": "952100"
  },
  {
    "text": "you'll keep the old one active until teams are able to update their projects at which point you'll make it inactive",
    "start": "952100",
    "end": "958029"
  },
  {
    "text": "and then eventually removed from the spec but this allows non-breaking API",
    "start": "958029",
    "end": "963199"
  },
  {
    "text": "key rotation any API keys back then",
    "start": "963199",
    "end": "968420"
  },
  {
    "text": "there's a mock targets back which I'm not gonna spend a lot of time on but if you do use the mock target back-end option just way to configure a mock",
    "start": "968420",
    "end": "975800"
  },
  {
    "text": "response Canalis a go program so this",
    "start": "975800",
    "end": "982459"
  },
  {
    "text": "just shows how you can configure go if any of you are go developers it uses Cobra and viper so standard",
    "start": "982459",
    "end": "989870"
  },
  {
    "text": "configuration you can do off of that I'm so plugins so Canal uses the go pack or",
    "start": "989870",
    "end": "994939"
  },
  {
    "text": "the the go plugins package for plugins and the only requirement is that it",
    "start": "994939",
    "end": "1001149"
  },
  {
    "text": "implements the plug-in interface and you can do whatever you want within that with within these functions that will get called in the lifecycle request and",
    "start": "1001149",
    "end": "1008279"
  },
  {
    "text": "it will execute you conversion these so for example the API key plugin is stored",
    "start": "1008279",
    "end": "1013600"
  },
  {
    "text": "in the separate repository that is dynamically brought in when Canali starts and and the logic executes and",
    "start": "1013600",
    "end": "1021100"
  },
  {
    "text": "then will bring in the version that we want and so if someone else wanted to design their own plugin they would create a project implement the plug-in",
    "start": "1021100",
    "end": "1027668"
  },
  {
    "text": "interface they would change the configuration and then dynamically load that plug-in at runtime and then or yeah",
    "start": "1027669",
    "end": "1034240"
  },
  {
    "text": "every one time and then it would execute their logic so decoupled extensible",
    "start": "1034240",
    "end": "1039400"
  },
  {
    "text": "plug-in framework where they can do whatever they want there's a yeoman",
    "start": "1039400",
    "end": "1045038"
  },
  {
    "start": "1044000",
    "end": "1090000"
  },
  {
    "text": "template which which does some of it so tooling and we'll see more of this in the demo but the first tooling is you",
    "start": "1045039",
    "end": "1053110"
  },
  {
    "text": "need a way to automatically create API keys and so we do that with Canali cuddle which is a CLI tool for Canali",
    "start": "1053110",
    "end": "1060970"
  },
  {
    "text": "and we use this extensively at Northwestern Mutual and developers seem to like it seems to make their lives easier",
    "start": "1060970",
    "end": "1066680"
  },
  {
    "text": "but it's just a binary that we distribute and allows them to create API keys and then they're able to add it to the cluster and because API keys me",
    "start": "1066680",
    "end": "1074420"
  },
  {
    "text": "nothing until they're actually bound we're able to let developers create the API keys and then go to the service team and say hey here's my API key at its",
    "start": "1074420",
    "end": "1081650"
  },
  {
    "text": "here add it to your service and that models worked for us but it's also in permissions is code too and we'll see a",
    "start": "1081650",
    "end": "1090680"
  },
  {
    "start": "1090000",
    "end": "1496000"
  },
  {
    "text": "demo of this next we use graph Anna and in flexi b4 for analytics and monitoring",
    "start": "1090680",
    "end": "1096730"
  },
  {
    "text": "and we've found a completely configurable the default dashboard comes with like response time total requests",
    "start": "1096730",
    "end": "1102230"
  },
  {
    "text": "error rate stuff like that and then we use open tracing Jaeger comes out of the",
    "start": "1102230",
    "end": "1108080"
  },
  {
    "text": "box with it but the main part is open tracing so it works right out of the box with open tracing so it'll play nicely",
    "start": "1108080",
    "end": "1114020"
  },
  {
    "text": "in that in that life cycle and then it's Yeager's the default client for that all",
    "start": "1114020",
    "end": "1122720"
  },
  {
    "text": "right so let's do a demo that's how am i doing on time doing REO all right so I",
    "start": "1122720",
    "end": "1129650"
  },
  {
    "text": "have I've went to the Canali github page and I've executed the QuickStart steps",
    "start": "1129650",
    "end": "1135890"
  },
  {
    "text": "here so I've started mini coop I have so I've flown the project I've started mini coop",
    "start": "1135890",
    "end": "1141350"
  },
  {
    "text": "I've spun up Canali as well as Jaeger and influx and Griffin etc and I",
    "start": "1141350",
    "end": "1147950"
  },
  {
    "text": "basically have this just as just to make",
    "start": "1147950",
    "end": "1153320"
  },
  {
    "text": "sure it's working here I have all right",
    "start": "1153320",
    "end": "1160100"
  },
  {
    "text": "so I have a deployment that just is that big enough for everyone I have a",
    "start": "1160100",
    "end": "1165830"
  },
  {
    "text": "deployment just a simple service just returns just returns a simple message when you hit it and then I have an",
    "start": "1165830",
    "end": "1171920"
  },
  {
    "text": "extremely simple version of an API proxy now this is a V once back it's very similar some subtle differences but",
    "start": "1171920",
    "end": "1177530"
  },
  {
    "text": "basically I'm coming in on slash coop con and that basically with this",
    "start": "1177530",
    "end": "1182630"
  },
  {
    "text": "configuration the only thing it's doing is ingress for me so if I go here to my cluster and hopefully everything's still",
    "start": "1182630",
    "end": "1189500"
  },
  {
    "text": "running awesome for do coop cuddle apply I'm just going to apply this and then try to curl the service",
    "start": "1189500",
    "end": "1196679"
  },
  {
    "text": "I'll get a response I'm just using postal use for a future example but like",
    "start": "1196679",
    "end": "1203799"
  },
  {
    "text": "I have my ingress working so now let's go ahead and basically add some API key",
    "start": "1203799",
    "end": "1209559"
  },
  {
    "text": "management to this so I'm going to go and create an API key so I'm gonna use",
    "start": "1209559",
    "end": "1217900"
  },
  {
    "text": "Canali cuddle and I'm going to create an",
    "start": "1217900",
    "end": "1223179"
  },
  {
    "text": "API key I already have this command saved somewhere alright so when I create an API key i'm going to call it Frank's API",
    "start": "1223179",
    "end": "1229120"
  },
  {
    "text": "key when I give it the name I'm going to give it the location as a public key and I'm gonna save it to this file alright",
    "start": "1229120",
    "end": "1238840"
  },
  {
    "text": "so here's my API key that I'm gonna use the actual API key spec has been saved here so I can open this up in my editor",
    "start": "1238840",
    "end": "1246510"
  },
  {
    "text": "and there's the API key that it created for me I can go ahead and add this to the cluster",
    "start": "1246510",
    "end": "1254070"
  },
  {
    "text": "all right so now I've went ahead and added this API key to my cluster now I can go back to my specification and I",
    "start": "1259700",
    "end": "1265920"
  },
  {
    "text": "can basically say so now that I have my key I'm gonna go ahead and enable the",
    "start": "1265920",
    "end": "1271230"
  },
  {
    "text": "the API key plug-in on this proxy and I'm gonna create a binding which basically is gonna bind Frank's API key",
    "start": "1271230",
    "end": "1278270"
  },
  {
    "text": "to this proxy I'm by default I'm gonna let it call everything over the get method but if you come in on the Foo sub",
    "start": "1278270",
    "end": "1284730"
  },
  {
    "text": "path you can only you can only call it via the post method so basically it",
    "start": "1284730",
    "end": "1291480"
  },
  {
    "text": "works by finding the highest priority rule so if there's no that's if the",
    "start": "1291480",
    "end": "1297270"
  },
  {
    "text": "incoming request isn't overwritten by a sub path then it's gonna fall back to whatever the default rule is I'm gonna",
    "start": "1297270",
    "end": "1302610"
  },
  {
    "text": "go ahead and apply this",
    "start": "1302610",
    "end": "1305330"
  },
  {
    "text": "all right so that's applied now I'm going to go ahead and try to try to curl",
    "start": "1310299",
    "end": "1317519"
  },
  {
    "text": "this service and it's gonna say that API key is not found and requesting this is enforced by the actual by the API key",
    "start": "1319109",
    "end": "1326289"
  },
  {
    "text": "plug-in I'm going to go back to where I can figure the key which is right here and I'm going to add a header and we",
    "start": "1326289",
    "end": "1334749"
  },
  {
    "text": "call it API key then I set it equal to the value and then it's gonna give me my",
    "start": "1334749",
    "end": "1342629"
  },
  {
    "text": "my response now if I change this and",
    "start": "1342629",
    "end": "1347799"
  },
  {
    "text": "let's say so I was using the post method if I use this as the get method will see",
    "start": "1347799",
    "end": "1353379"
  },
  {
    "text": "that API key is an opera and why so if you see my subpath its flash coupons /qu confer bar now slash coupe con is the",
    "start": "1353379",
    "end": "1361899"
  },
  {
    "text": "incoming path but we're overriding the target to slash now here we're saying anything that starts with /foo we're",
    "start": "1361899",
    "end": "1368379"
  },
  {
    "text": "only gonna give post access to and the increment request matched this sub path so it knows that it only has access to",
    "start": "1368379",
    "end": "1374799"
  },
  {
    "text": "post and not get and so that's why that's why the traffic or the API key",
    "start": "1374799",
    "end": "1380679"
  },
  {
    "text": "was not authorized so now we're going to we're going to we're going to curl this",
    "start": "1380679",
    "end": "1389559"
  },
  {
    "text": "service a whole bunch of times and it doesn't matter if it's doesn't matter",
    "start": "1389559",
    "end": "1395079"
  },
  {
    "text": "for airs out I want to show well actually i want to show you a ger so maybe it does",
    "start": "1395079",
    "end": "1402389"
  },
  {
    "text": "API key equals this and then we'll set the method equal to post okay so I'll",
    "start": "1403510",
    "end": "1412240"
  },
  {
    "text": "have this go a couple times now as this is going we'll go over to Jaeger and just by default out of the box you'll",
    "start": "1412240",
    "end": "1417850"
  },
  {
    "text": "you'll get your tracing with it so if you went to any tracing talks",
    "start": "1417850",
    "end": "1423510"
  },
  {
    "text": "specifically your own Jaeger there great talks but here we see the overall span we see the actual plug-in on request",
    "start": "1423510",
    "end": "1430710"
  },
  {
    "text": "lifecycle hook happening and we see that Frank's API key is the API key being used because the backend service also",
    "start": "1430710",
    "end": "1437770"
  },
  {
    "text": "instruments open tracing we can see the extra requests hitting the back end which is this right here",
    "start": "1437770",
    "end": "1444760"
  },
  {
    "text": "etc so the talk this talk is not about open tracing but it does come with open tracing out of the box and if I look at",
    "start": "1444760",
    "end": "1449980"
  },
  {
    "text": "my metrics in graph Anna I can see some metrics start to come across total requests average proxy response time etc",
    "start": "1449980",
    "end": "1456810"
  },
  {
    "text": "response time percentiles so see it's a very brief demo so a future work so v2",
    "start": "1456810",
    "end": "1467620"
  },
  {
    "text": "at O is like one or two weeks away but everything's tracked by the normal the",
    "start": "1467620",
    "end": "1473560"
  },
  {
    "text": "normal open source flow everything is tracked by issues etc so give the demo",
    "start": "1473560",
    "end": "1481660"
  },
  {
    "text": "so there is a tutorial a tutorial that Canali oh this is where the",
    "start": "1481660",
    "end": "1487060"
  },
  {
    "text": "documentation lives now it'll probably be ported ported to something else in",
    "start": "1487060",
    "end": "1492490"
  },
  {
    "text": "the future but for right now this is where it lives all right so five minutes",
    "start": "1492490",
    "end": "1498940"
  },
  {
    "text": "left so I'm gonna ask the first question so what about Sto so earlier I hope I",
    "start": "1498940",
    "end": "1505210"
  },
  {
    "text": "kind of justified this a little bit but Canali is not a service smash it is an api gateway and so because it's not a",
    "start": "1505210",
    "end": "1512860"
  },
  {
    "text": "service mesh it does separate itself apart but then also it's not an API",
    "start": "1512860",
    "end": "1519880"
  },
  {
    "text": "management tool Canalis what are the only ones that I know of outside of Kong",
    "start": "1519880",
    "end": "1524890"
  },
  {
    "text": "that is actually an actual API management tool viseo does have plans in",
    "start": "1524890",
    "end": "1531220"
  },
  {
    "text": "the future to add API management to their product or to the project",
    "start": "1531220",
    "end": "1536720"
  },
  {
    "text": "and when that's done we will see what comes about it but I know it's more for",
    "start": "1536720",
    "end": "1542020"
  },
  {
    "text": "vendors to be able to hook in their specific API management to it to fall in",
    "start": "1542020",
    "end": "1547309"
  },
  {
    "text": "line with that life cycle so Canali is an api gateway now to service mesh it's a very lightweight one and everything is",
    "start": "1547309",
    "end": "1553940"
  },
  {
    "text": "fully included so you get the API key management you get the API proxy you get the binding everything is out of the box",
    "start": "1553940",
    "end": "1559789"
  },
  {
    "text": "you get storage for free because it's kubernetes because the customer resource definition and it when when you start to",
    "start": "1559789",
    "end": "1567169"
  },
  {
    "text": "think about SEO is versus what Canali is the differences are very different so so",
    "start": "1567169",
    "end": "1575120"
  },
  {
    "text": "yeah so adapt let me answer whatever questions you have and we'll start yes",
    "start": "1575120",
    "end": "1581860"
  },
  {
    "text": "I'm correct so it's so it's not a super smashed and lightweight meaning it's",
    "start": "1582520",
    "end": "1587990"
  },
  {
    "text": "it's just one pod it is the Canali pod and that's it yes",
    "start": "1587990",
    "end": "1595419"
  },
  {
    "text": "I'm so HTTP is the only protocol that it supports right now there's future work",
    "start": "1599270",
    "end": "1605520"
  },
  {
    "text": "to add other protocols but we just want to get it out the door and currently the only support station or HTTP um might",
    "start": "1605520",
    "end": "1614490"
  },
  {
    "text": "support HTTP two as well because I believe by default the native go HTTP",
    "start": "1614490",
    "end": "1620040"
  },
  {
    "text": "library supports HTTP - I don't I don't",
    "start": "1620040",
    "end": "1626610"
  },
  {
    "text": "believe so now we have it in the back",
    "start": "1626610",
    "end": "1631950"
  },
  {
    "text": "there support what oh so there is no",
    "start": "1631950",
    "end": "1638940"
  },
  {
    "text": "official JD Beauty plug-in yet there will be that one that comes but that's the thing with the extensible framework is the frameworks there and you can",
    "start": "1638940",
    "end": "1646290"
  },
  {
    "text": "build whatever you want so they're like the JD Beatty would be a plug-in that would that would live in its own repoed",
    "start": "1646290",
    "end": "1651810"
  },
  {
    "text": "that would be included in",
    "start": "1651810",
    "end": "1654830"
  },
  {
    "text": "so the beauty has the beauties with open tracing is you don't it doesn't matter",
    "start": "1664159",
    "end": "1669389"
  },
  {
    "text": "how many pieces are in the puzzle as long as you play nice and handle handle",
    "start": "1669389",
    "end": "1676259"
  },
  {
    "text": "the context as it comes in and then pass the context along when you're done with it whatever downstream may if someone",
    "start": "1676259",
    "end": "1684629"
  },
  {
    "text": "else wants to do something with it they can but Canali plays nice and that flow will it will accept and and use and then",
    "start": "1684629",
    "end": "1692129"
  },
  {
    "text": "it will also you know start if not or impasse along so yes so I say one pod",
    "start": "1692129",
    "end": "1704789"
  },
  {
    "text": "but it's one like deployment so it's it's one so in our deployment we run it as a",
    "start": "1704789",
    "end": "1709950"
  },
  {
    "text": "daemon set but you could run it as a deployment as well but it's it's like one like there's only one container yeah",
    "start": "1709950",
    "end": "1719720"
  },
  {
    "text": "correct correct but it's it's it's a it's a replicated pot in the back yep",
    "start": "1719720",
    "end": "1732080"
  },
  {
    "text": "correct so API so Canali at its best is an API management solution but API",
    "start": "1737180",
    "end": "1744660"
  },
  {
    "text": "management or the API gateway is also a proxy the thing that I didn't show is",
    "start": "1744660",
    "end": "1750630"
  },
  {
    "text": "Canali does do it does canary routing as well and dynamic back-end service",
    "start": "1750630",
    "end": "1755880"
  },
  {
    "text": "routing so you do get some of that as well but yeah yeah we so so we've been",
    "start": "1755880",
    "end": "1768180"
  },
  {
    "text": "running Canali in production for a few months now we I think there's been times",
    "start": "1768180",
    "end": "1773280"
  },
  {
    "text": "during our batch job we'll be running like 300 TPS and it's I don't I don't",
    "start": "1773280",
    "end": "1782010"
  },
  {
    "text": "know if we've hit it with a lot of low pass 300 TPS but it's it's been running in production at times that 300 TPS",
    "start": "1782010",
    "end": "1790700"
  },
  {
    "text": "so it's kubernetes native so when you're",
    "start": "1796450",
    "end": "1802549"
  },
  {
    "text": "inside of the context of kubernetes you could do very powerful things but then also by using custom resource definitions you get storage for free the",
    "start": "1802549",
    "end": "1810109"
  },
  {
    "text": "way you can figure it is kubernetes native everything about it is like it's like coop that that kubernetes native",
    "start": "1810109",
    "end": "1816679"
  },
  {
    "text": "cloud native of format and so like like with the AWS api gateway like that's",
    "start": "1816679",
    "end": "1824049"
  },
  {
    "text": "abstracted from kubernetes and so you lose the context but then you also have to worry about how that's managed behind",
    "start": "1824049",
    "end": "1829429"
  },
  {
    "text": "the scenes and then if it's and then like in a cloud native context to be portable you'd have to revisit your your solution",
    "start": "1829429",
    "end": "1838508"
  },
  {
    "text": "so so we're running v1 in production right now v2 will introduce the sed G",
    "start": "1842679",
    "end": "1848419"
  },
  {
    "text": "RPC and and so we don't have v2 in production yet but yes it will be",
    "start": "1848419",
    "end": "1853489"
  },
  {
    "text": "another one the reason why it's not recommended to use the same sed as kubernetes is because if you have access",
    "start": "1853489",
    "end": "1859039"
  },
  {
    "text": "to the sed that kubernetes uses you have root access to the cluster and so it's",
    "start": "1859039",
    "end": "1864200"
  },
  {
    "text": "it's always recommen even with other solutions that use extra separate entities like calico they recommend separate FTP",
    "start": "1864200",
    "end": "1871210"
  },
  {
    "text": "so there's so Canalis Greek for canal",
    "start": "1871210",
    "end": "1876440"
  },
  {
    "text": "and so like all of these projects o Canali open for kubernetes open-source projects I'll fall like the nautical",
    "start": "1876440",
    "end": "1882289"
  },
  {
    "text": "theme and they find a word and they turn into Greek so Canalis Greek for canal and it's kind of like that canal owns",
    "start": "1882289",
    "end": "1887570"
  },
  {
    "text": "the cluster but correct so there's",
    "start": "1887570",
    "end": "1893479"
  },
  {
    "text": "probably opportunity to also have them write and see and then pour them to go",
    "start": "1893479",
    "end": "1899330"
  },
  {
    "text": "and whatnot but yeah and the way that'll work is they'll be in v2 they'll be like",
    "start": "1899330",
    "end": "1905330"
  },
  {
    "text": "a requirements like diamo file or whatnot where you say like here's the plugin here's the version canal you use",
    "start": "1905330",
    "end": "1912019"
  },
  {
    "text": "like in an it container to load them in and start the Canali pod and you'll be good",
    "start": "1912019",
    "end": "1917559"
  },
  {
    "text": "yep to make the wet yeah so right now it",
    "start": "1919530",
    "end": "1929190"
  },
  {
    "text": "uses in flux out of the box but there's no reason why I couldn't use like Prometheus or something else right now",
    "start": "1929190",
    "end": "1935310"
  },
  {
    "text": "it's not pluggable but it yeah it it should be in the future in terms of yes",
    "start": "1935310",
    "end": "1953670"
  },
  {
    "text": "with CPUs so it out load we'll see each instance of a Canali pod to use",
    "start": "1953670",
    "end": "1958710"
  },
  {
    "text": "like half a CPU and probably like a gig",
    "start": "1958710",
    "end": "1964830"
  },
  {
    "text": "of memory it's 'men it gets tweaked as we find",
    "start": "1964830",
    "end": "1970440"
  },
  {
    "text": "different ways to improve on it but that's that's that's that's the v1 production numbers yes so um so Canali",
    "start": "1970440",
    "end": "1981840"
  },
  {
    "text": "does do SSL termination if I look I believe it was in the spec you were able",
    "start": "1981840",
    "end": "1987000"
  },
  {
    "text": "to specify an SSL object and it basically you give it the secret name and it's a type kubernetes that I owed",
    "start": "1987000",
    "end": "1992580"
  },
  {
    "text": "to slash TLS it enforces the certain the key and if see a dot served as present",
    "start": "1992580",
    "end": "1997710"
  },
  {
    "text": "it'll be bi-directional so so believe we're out of time thank you guys very much I can answer questions after",
    "start": "1997710",
    "end": "2003930"
  },
  {
    "text": "[Applause]",
    "start": "2003930",
    "end": "2008160"
  }
]