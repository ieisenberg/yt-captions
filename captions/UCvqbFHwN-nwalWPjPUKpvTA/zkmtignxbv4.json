[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "hi today i want to spend a little bit of",
    "start": "80",
    "end": "2000"
  },
  {
    "text": "time talking about databases and in",
    "start": "2000",
    "end": "3600"
  },
  {
    "text": "particular database schemas and how we",
    "start": "3600",
    "end": "5440"
  },
  {
    "text": "manage those in a kubernetes native",
    "start": "5440",
    "end": "7120"
  },
  {
    "text": "environment",
    "start": "7120",
    "end": "8240"
  },
  {
    "text": "before we get started i want to",
    "start": "8240",
    "end": "9200"
  },
  {
    "text": "introduce myself my name is mark",
    "start": "9200",
    "end": "10559"
  },
  {
    "text": "campbell i'm the cto and co-founder of a",
    "start": "10559",
    "end": "12400"
  },
  {
    "text": "company called replicated",
    "start": "12400",
    "end": "14000"
  },
  {
    "text": "and the goal of this talk is to really",
    "start": "14000",
    "end": "15759"
  },
  {
    "text": "present the idea of declarative schema",
    "start": "15759",
    "end": "17440"
  },
  {
    "text": "management as a kubernetes operator",
    "start": "17440",
    "end": "19439"
  },
  {
    "text": "and in particular the implementation",
    "start": "19439",
    "end": "20960"
  },
  {
    "text": "that we've open sourced in a project",
    "start": "20960",
    "end": "22320"
  },
  {
    "text": "we've been working on it replicated",
    "start": "22320",
    "end": "23519"
  },
  {
    "text": "called schema hero",
    "start": "23519",
    "end": "26240"
  },
  {
    "start": "25000",
    "end": "42000"
  },
  {
    "text": "to help explain how i'm thinking about",
    "start": "26240",
    "end": "28000"
  },
  {
    "text": "this problem i want to present a story",
    "start": "28000",
    "end": "29760"
  },
  {
    "text": "of two different developers",
    "start": "29760",
    "end": "31760"
  },
  {
    "text": "the first developer is a django",
    "start": "31760",
    "end": "33360"
  },
  {
    "text": "developer and she's writing and",
    "start": "33360",
    "end": "34559"
  },
  {
    "text": "deploying an app to heroku",
    "start": "34559",
    "end": "37280"
  },
  {
    "text": "the second developer is a java developer",
    "start": "37280",
    "end": "39280"
  },
  {
    "text": "writing and deploying an app to a",
    "start": "39280",
    "end": "40640"
  },
  {
    "text": "kubernetes cluster",
    "start": "40640",
    "end": "42960"
  },
  {
    "start": "42000",
    "end": "159000"
  },
  {
    "text": "i want to walk through a couple of",
    "start": "42960",
    "end": "44000"
  },
  {
    "text": "scenarios for the day-to-day of these",
    "start": "44000",
    "end": "46079"
  },
  {
    "text": "developers",
    "start": "46079",
    "end": "46879"
  },
  {
    "text": "the first scenario they both these",
    "start": "46879",
    "end": "48719"
  },
  {
    "text": "developers are adding a new feature that",
    "start": "48719",
    "end": "50079"
  },
  {
    "text": "requires a database schema change",
    "start": "50079",
    "end": "52879"
  },
  {
    "text": "our django developer she's just going to",
    "start": "52879",
    "end": "54480"
  },
  {
    "text": "edit her python file add a new class",
    "start": "54480",
    "end": "56480"
  },
  {
    "text": "save it and push it to heroku what",
    "start": "56480",
    "end": "58239"
  },
  {
    "text": "happens when she does that",
    "start": "58239",
    "end": "59600"
  },
  {
    "text": "is django is going to automatically",
    "start": "59600",
    "end": "62079"
  },
  {
    "text": "deploy the database migration",
    "start": "62079",
    "end": "63760"
  },
  {
    "text": "wait for that to complete and then start",
    "start": "63760",
    "end": "65198"
  },
  {
    "text": "the new version of the application",
    "start": "65199",
    "end": "67840"
  },
  {
    "text": "our java developer edits the source file",
    "start": "67840",
    "end": "70960"
  },
  {
    "text": "of the java class but he also needs to",
    "start": "70960",
    "end": "73520"
  },
  {
    "text": "make that database schema change",
    "start": "73520",
    "end": "75119"
  },
  {
    "text": "separately",
    "start": "75119",
    "end": "76400"
  },
  {
    "text": "he's using liquid base to manage those",
    "start": "76400",
    "end": "78080"
  },
  {
    "text": "schema migrations so he goes ahead and",
    "start": "78080",
    "end": "80159"
  },
  {
    "text": "creates a new migration this one's",
    "start": "80159",
    "end": "81439"
  },
  {
    "text": "number 913 because it's a relatively",
    "start": "81439",
    "end": "83759"
  },
  {
    "text": "mature project",
    "start": "83759",
    "end": "84960"
  },
  {
    "text": "he looks up remembers how to write the",
    "start": "84960",
    "end": "87600"
  },
  {
    "text": "sql statements for the ddl for how to",
    "start": "87600",
    "end": "90240"
  },
  {
    "text": "modify the schema um references stack",
    "start": "90240",
    "end": "93200"
  },
  {
    "text": "overflow probably",
    "start": "93200",
    "end": "94400"
  },
  {
    "text": "um and ends up creating this alter table",
    "start": "94400",
    "end": "96720"
  },
  {
    "text": "statement",
    "start": "96720",
    "end": "97439"
  },
  {
    "text": "which adds a new column with a default",
    "start": "97439",
    "end": "100000"
  },
  {
    "text": "and a foreign key that references the",
    "start": "100000",
    "end": "101840"
  },
  {
    "text": "other",
    "start": "101840",
    "end": "102159"
  },
  {
    "text": "the other table that's great so he's",
    "start": "102159",
    "end": "104479"
  },
  {
    "text": "using get ops because everything's",
    "start": "104479",
    "end": "105840"
  },
  {
    "text": "automated he commits that",
    "start": "105840",
    "end": "107280"
  },
  {
    "text": "into source control has a code review",
    "start": "107280",
    "end": "110079"
  },
  {
    "text": "and let's once it's merged let's flux",
    "start": "110079",
    "end": "112000"
  },
  {
    "text": "automatically deploy a custom kubernetes",
    "start": "112000",
    "end": "113840"
  },
  {
    "text": "job",
    "start": "113840",
    "end": "114960"
  },
  {
    "text": "and that runs performs the database",
    "start": "114960",
    "end": "116719"
  },
  {
    "text": "migration he monitors that and once it's",
    "start": "116719",
    "end": "118640"
  },
  {
    "text": "completed then he merges his code change",
    "start": "118640",
    "end": "120399"
  },
  {
    "text": "and let that deploy in order to use",
    "start": "120399",
    "end": "122240"
  },
  {
    "text": "the new schema so what's the difference",
    "start": "122240",
    "end": "124320"
  },
  {
    "text": "between these two scenarios",
    "start": "124320",
    "end": "126320"
  },
  {
    "text": "the django developer she doesn't need to",
    "start": "126320",
    "end": "127840"
  },
  {
    "text": "know that ddl statement to create the",
    "start": "127840",
    "end": "129599"
  },
  {
    "text": "foreign key",
    "start": "129599",
    "end": "130319"
  },
  {
    "text": "she just adds it in using her orm and he",
    "start": "130319",
    "end": "133200"
  },
  {
    "text": "our java developer had to know the sql",
    "start": "133200",
    "end": "135440"
  },
  {
    "text": "statement",
    "start": "135440",
    "end": "136000"
  },
  {
    "text": "in order to create that foreign key",
    "start": "136000",
    "end": "138239"
  },
  {
    "text": "another difference is that our django",
    "start": "138239",
    "end": "139599"
  },
  {
    "text": "developer just deploys everything in a",
    "start": "139599",
    "end": "141040"
  },
  {
    "text": "single atomic unit",
    "start": "141040",
    "end": "142560"
  },
  {
    "text": "as one commit and our java developer",
    "start": "142560",
    "end": "145440"
  },
  {
    "text": "deploying to kubernetes using liquid",
    "start": "145440",
    "end": "146959"
  },
  {
    "text": "base in a custom job has a brittle",
    "start": "146959",
    "end": "148640"
  },
  {
    "text": "multi-phased orchestrated deployment",
    "start": "148640",
    "end": "150400"
  },
  {
    "text": "he has to deploy that schema monitor it",
    "start": "150400",
    "end": "153840"
  },
  {
    "text": "and then deploy",
    "start": "153840",
    "end": "154800"
  },
  {
    "text": "his application logic his application",
    "start": "154800",
    "end": "157120"
  },
  {
    "text": "change separately",
    "start": "157120",
    "end": "159760"
  },
  {
    "start": "159000",
    "end": "263000"
  },
  {
    "text": "another scenario i want to walk through",
    "start": "159760",
    "end": "161200"
  },
  {
    "text": "is both of these projects they want to",
    "start": "161200",
    "end": "162800"
  },
  {
    "text": "create a new environment they want to",
    "start": "162800",
    "end": "164239"
  },
  {
    "text": "deploy their application into",
    "start": "164239",
    "end": "165920"
  },
  {
    "text": "a new cluster our django developer",
    "start": "165920",
    "end": "169760"
  },
  {
    "text": "creates the database tables",
    "start": "169760",
    "end": "171920"
  },
  {
    "text": "ah she just deploys it lets django",
    "start": "171920",
    "end": "173440"
  },
  {
    "text": "create all the tables and it's done",
    "start": "173440",
    "end": "175840"
  },
  {
    "text": "our java developer has 913 migrations to",
    "start": "175840",
    "end": "178480"
  },
  {
    "text": "run against this new empty postgres",
    "start": "178480",
    "end": "180560"
  },
  {
    "text": "server",
    "start": "180560",
    "end": "181040"
  },
  {
    "text": "but it's okay it's all automated he just",
    "start": "181040",
    "end": "183040"
  },
  {
    "text": "creates it deploys it flux",
    "start": "183040",
    "end": "184720"
  },
  {
    "text": "runs through 913 migrations and the end",
    "start": "184720",
    "end": "187120"
  },
  {
    "text": "result is going to be the same right",
    "start": "187120",
    "end": "189680"
  },
  {
    "text": "sort of in this scenario though in older",
    "start": "189680",
    "end": "192480"
  },
  {
    "text": "migration number 474 so a few months ago",
    "start": "192480",
    "end": "195440"
  },
  {
    "text": "depends on a postgres module that was",
    "start": "195440",
    "end": "197120"
  },
  {
    "text": "implemented for a search feature that",
    "start": "197120",
    "end": "198480"
  },
  {
    "text": "was later removed and rewritten",
    "start": "198480",
    "end": "200239"
  },
  {
    "text": "re-architected so we didn't need that in",
    "start": "200239",
    "end": "202000"
  },
  {
    "text": "the end",
    "start": "202000",
    "end": "202879"
  },
  {
    "text": "but the migrations fail they fail at",
    "start": "202879",
    "end": "204799"
  },
  {
    "text": "migration 474 for him because",
    "start": "204799",
    "end": "207599"
  },
  {
    "text": "he needs that module in order to allow",
    "start": "207599",
    "end": "210239"
  },
  {
    "text": "it to",
    "start": "210239",
    "end": "210640"
  },
  {
    "text": "install it even though it's going to",
    "start": "210640",
    "end": "212080"
  },
  {
    "text": "uninstall it 100 migrations later",
    "start": "212080",
    "end": "214720"
  },
  {
    "text": "there's a couple options he could do he",
    "start": "214720",
    "end": "216080"
  },
  {
    "text": "could rebase these migrations he could",
    "start": "216080",
    "end": "218080"
  },
  {
    "text": "delete that change cherry pick through",
    "start": "218080",
    "end": "220959"
  },
  {
    "text": "it",
    "start": "220959",
    "end": "221280"
  },
  {
    "text": "but this is a common problem that you",
    "start": "221280",
    "end": "222959"
  },
  {
    "text": "run into the differences between the two",
    "start": "222959",
    "end": "225280"
  },
  {
    "text": "here are django developer just deploys",
    "start": "225280",
    "end": "227280"
  },
  {
    "text": "the desired state of the database",
    "start": "227280",
    "end": "229200"
  },
  {
    "text": "she knows you know here's our code",
    "start": "229200",
    "end": "231040"
  },
  {
    "text": "here's the class lets the orm",
    "start": "231040",
    "end": "232720"
  },
  {
    "text": "automatically deploy what's needed",
    "start": "232720",
    "end": "234879"
  },
  {
    "text": "and our java developer he actually",
    "start": "234879",
    "end": "236400"
  },
  {
    "text": "deploys the history so he walks through",
    "start": "236400",
    "end": "238080"
  },
  {
    "text": "everything that converges to that",
    "start": "238080",
    "end": "239599"
  },
  {
    "text": "desired state",
    "start": "239599",
    "end": "241040"
  },
  {
    "text": "and another difference because of this",
    "start": "241040",
    "end": "242799"
  },
  {
    "text": "is that our django developer doesn't",
    "start": "242799",
    "end": "244319"
  },
  {
    "text": "need",
    "start": "244319",
    "end": "244799"
  },
  {
    "text": "to all of the old dependencies that we",
    "start": "244799",
    "end": "246799"
  },
  {
    "text": "ever needed and our java developer needs",
    "start": "246799",
    "end": "248959"
  },
  {
    "text": "everything that's ever been required",
    "start": "248959",
    "end": "250239"
  },
  {
    "text": "so if a migration required a certain",
    "start": "250239",
    "end": "252560"
  },
  {
    "text": "encoding or a module or",
    "start": "252560",
    "end": "254000"
  },
  {
    "text": "a certain expected a specific version of",
    "start": "254000",
    "end": "256320"
  },
  {
    "text": "the database engine",
    "start": "256320",
    "end": "257359"
  },
  {
    "text": "it's going to be needed in order to",
    "start": "257359",
    "end": "258959"
  },
  {
    "text": "successfully complete unless we go back",
    "start": "258959",
    "end": "260560"
  },
  {
    "text": "and rewrite that migration",
    "start": "260560",
    "end": "261919"
  },
  {
    "text": "later final scenario i want to walk",
    "start": "261919",
    "end": "265040"
  },
  {
    "text": "through",
    "start": "265040",
    "end": "265440"
  },
  {
    "text": "is auditing the schema so a question is",
    "start": "265440",
    "end": "267680"
  },
  {
    "text": "raised is there an index on this column",
    "start": "267680",
    "end": "269919"
  },
  {
    "text": "and so both of the developers want to",
    "start": "269919",
    "end": "271440"
  },
  {
    "text": "understand that",
    "start": "271440",
    "end": "273040"
  },
  {
    "text": "uh to answer that question and of course",
    "start": "273040",
    "end": "275280"
  },
  {
    "text": "we want to do this in a way without",
    "start": "275280",
    "end": "276720"
  },
  {
    "text": "direct access to that database",
    "start": "276720",
    "end": "279840"
  },
  {
    "text": "so our django developer just looks at",
    "start": "279840",
    "end": "281120"
  },
  {
    "text": "the python class looks to see if there's",
    "start": "281120",
    "end": "282880"
  },
  {
    "text": "an index defined in the attributes on",
    "start": "282880",
    "end": "284720"
  },
  {
    "text": "the class",
    "start": "284720",
    "end": "285680"
  },
  {
    "text": "great in our java developer everything",
    "start": "285680",
    "end": "288400"
  },
  {
    "text": "is in code also",
    "start": "288400",
    "end": "289440"
  },
  {
    "text": "so he just opens up his editor looks at",
    "start": "289440",
    "end": "291680"
  },
  {
    "text": "the migration files",
    "start": "291680",
    "end": "292800"
  },
  {
    "text": "does have to you know command shift f or",
    "start": "292800",
    "end": "294800"
  },
  {
    "text": "whatever and search through 913",
    "start": "294800",
    "end": "296320"
  },
  {
    "text": "migration files for the table name",
    "start": "296320",
    "end": "297919"
  },
  {
    "text": "read them reads them to see if that",
    "start": "297919",
    "end": "299680"
  },
  {
    "text": "index has ever been created",
    "start": "299680",
    "end": "301600"
  },
  {
    "text": "or dropped in like what order it is and",
    "start": "301600",
    "end": "303600"
  },
  {
    "text": "that way he can reconstruct the final",
    "start": "303600",
    "end": "305039"
  },
  {
    "text": "state of that table",
    "start": "305039",
    "end": "305919"
  },
  {
    "text": "to answer the question the differences",
    "start": "305919",
    "end": "308720"
  },
  {
    "text": "between here are that she just has a",
    "start": "308720",
    "end": "310800"
  },
  {
    "text": "single",
    "start": "310800",
    "end": "311280"
  },
  {
    "text": "place that has the desired state and he",
    "start": "311280",
    "end": "313759"
  },
  {
    "text": "doesn't again he has",
    "start": "313759",
    "end": "315280"
  },
  {
    "text": "all of the instructions that he can use",
    "start": "315280",
    "end": "317440"
  },
  {
    "text": "in his head to converge",
    "start": "317440",
    "end": "319280"
  },
  {
    "text": "on what that desired state is so this",
    "start": "319280",
    "end": "322240"
  },
  {
    "start": "321000",
    "end": "384000"
  },
  {
    "text": "raises the question what if there was an",
    "start": "322240",
    "end": "323759"
  },
  {
    "text": "orm",
    "start": "323759",
    "end": "324320"
  },
  {
    "text": "specifically designed for database",
    "start": "324320",
    "end": "325840"
  },
  {
    "text": "schemas",
    "start": "325840",
    "end": "327520"
  },
  {
    "text": "some platforms have this today right so",
    "start": "327520",
    "end": "330160"
  },
  {
    "text": "django as we just talked about has a",
    "start": "330160",
    "end": "331840"
  },
  {
    "text": "built-in rm that manages database",
    "start": "331840",
    "end": "333520"
  },
  {
    "text": "schemas",
    "start": "333520",
    "end": "334400"
  },
  {
    "text": "flask apps for python you can use sql",
    "start": "334400",
    "end": "336320"
  },
  {
    "text": "alchemy and other tools",
    "start": "336320",
    "end": "338080"
  },
  {
    "text": "java and spring have hibernate you can",
    "start": "338080",
    "end": "340560"
  },
  {
    "text": "use that for",
    "start": "340560",
    "end": "341440"
  },
  {
    "text": "schema management as an orm and node has",
    "start": "341440",
    "end": "345039"
  },
  {
    "text": "a few projects",
    "start": "345039",
    "end": "346080"
  },
  {
    "text": "they're a little bit fragmented in that",
    "start": "346080",
    "end": "347360"
  },
  {
    "text": "ecosystem you know most most",
    "start": "347360",
    "end": "349440"
  },
  {
    "text": "platforms do have some platform specific",
    "start": "349440",
    "end": "351919"
  },
  {
    "text": "functionality to manage",
    "start": "351919",
    "end": "353280"
  },
  {
    "text": "schema orms not all but they do",
    "start": "353280",
    "end": "356960"
  },
  {
    "text": "java being a popular language you know a",
    "start": "356960",
    "end": "359680"
  },
  {
    "text": "question was asked on stack overflow a",
    "start": "359680",
    "end": "361280"
  },
  {
    "text": "while ago",
    "start": "361280",
    "end": "362080"
  },
  {
    "text": "should i use hibernate to automatically",
    "start": "362080",
    "end": "363600"
  },
  {
    "text": "manage schema in production",
    "start": "363600",
    "end": "365759"
  },
  {
    "text": "and the highest answer back from 2016",
    "start": "365759",
    "end": "368479"
  },
  {
    "text": "said no",
    "start": "368479",
    "end": "369120"
  },
  {
    "text": "it's unsafe and the explanation is",
    "start": "369120",
    "end": "372160"
  },
  {
    "text": "pretty detailed and the interesting part",
    "start": "372160",
    "end": "373919"
  },
  {
    "text": "highlighted in red here it says",
    "start": "373919",
    "end": "375759"
  },
  {
    "text": "you actually do want the ddl to be",
    "start": "375759",
    "end": "377600"
  },
  {
    "text": "generated automatically",
    "start": "377600",
    "end": "378880"
  },
  {
    "text": "but you absolutely want that change to",
    "start": "378880",
    "end": "380400"
  },
  {
    "text": "be inspected by a human before you run",
    "start": "380400",
    "end": "382639"
  },
  {
    "text": "it in production",
    "start": "382639",
    "end": "385280"
  },
  {
    "start": "384000",
    "end": "425000"
  },
  {
    "text": "so i want to present a project we've",
    "start": "385280",
    "end": "386720"
  },
  {
    "text": "been working on called schema hero",
    "start": "386720",
    "end": "390240"
  },
  {
    "text": "schema hero is a language neutral",
    "start": "390319",
    "end": "392240"
  },
  {
    "text": "declarative state get ops friendly",
    "start": "392240",
    "end": "393919"
  },
  {
    "text": "kubernetes operator",
    "start": "393919",
    "end": "395840"
  },
  {
    "text": "database schema orm so that's a lot",
    "start": "395840",
    "end": "398319"
  },
  {
    "text": "that's a mouthful we're going to like",
    "start": "398319",
    "end": "399440"
  },
  {
    "text": "drill into it do a demo and kind of",
    "start": "399440",
    "end": "400960"
  },
  {
    "text": "explain it",
    "start": "400960",
    "end": "401600"
  },
  {
    "text": "so specifically what we're built is a",
    "start": "401600",
    "end": "403600"
  },
  {
    "text": "kubernetes operator to manage",
    "start": "403600",
    "end": "405120"
  },
  {
    "text": "database schemas in a language neutral",
    "start": "405120",
    "end": "408880"
  },
  {
    "text": "state or uh system so it doesn't matter",
    "start": "408880",
    "end": "411280"
  },
  {
    "text": "whether you're running python or rails",
    "start": "411280",
    "end": "412720"
  },
  {
    "text": "or node or go or rust or java or any",
    "start": "412720",
    "end": "414720"
  },
  {
    "text": "other language",
    "start": "414720",
    "end": "415599"
  },
  {
    "text": "and any other tooling it does like",
    "start": "415599",
    "end": "417120"
  },
  {
    "text": "schema hero is a tool",
    "start": "417120",
    "end": "418800"
  },
  {
    "text": "specifically meant to manage the",
    "start": "418800",
    "end": "420800"
  },
  {
    "text": "database schema and it does it through a",
    "start": "420800",
    "end": "422560"
  },
  {
    "text": "declarative state in a way that's git",
    "start": "422560",
    "end": "424160"
  },
  {
    "text": "ops friendly",
    "start": "424160",
    "end": "426800"
  },
  {
    "start": "425000",
    "end": "482000"
  },
  {
    "text": "how does scheme hero work it's pretty",
    "start": "426960",
    "end": "428720"
  },
  {
    "text": "simple it's a kubernetes operator",
    "start": "428720",
    "end": "430639"
  },
  {
    "text": "the first step is that you want to",
    "start": "430639",
    "end": "432400"
  },
  {
    "text": "deploy a kind database",
    "start": "432400",
    "end": "434639"
  },
  {
    "text": "so this is a kubernetes custom resource",
    "start": "434639",
    "end": "437199"
  },
  {
    "text": "schema hero",
    "start": "437199",
    "end": "438160"
  },
  {
    "text": "operator implements the reconcile loop",
    "start": "438160",
    "end": "440400"
  },
  {
    "text": "for it this kind database",
    "start": "440400",
    "end": "442240"
  },
  {
    "text": "it you give it a name and you deploy it",
    "start": "442240",
    "end": "444000"
  },
  {
    "text": "to a namespace but the key part here",
    "start": "444000",
    "end": "446720"
  },
  {
    "text": "is that this just contains the",
    "start": "446720",
    "end": "449280"
  },
  {
    "text": "connection information for the database",
    "start": "449280",
    "end": "451039"
  },
  {
    "text": "and a name",
    "start": "451039",
    "end": "451840"
  },
  {
    "text": "so in this example that's on the screen",
    "start": "451840",
    "end": "453280"
  },
  {
    "text": "right now this is a postgres database",
    "start": "453280",
    "end": "455360"
  },
  {
    "text": "and the custom resource is saying the",
    "start": "455360",
    "end": "457919"
  },
  {
    "text": "connection",
    "start": "457919",
    "end": "458720"
  },
  {
    "text": "url the connection uri to connect to",
    "start": "458720",
    "end": "461120"
  },
  {
    "text": "this postgres database",
    "start": "461120",
    "end": "462639"
  },
  {
    "text": "is in a secret name postgresql in a key",
    "start": "462639",
    "end": "464960"
  },
  {
    "text": "named uri",
    "start": "464960",
    "end": "466080"
  },
  {
    "text": "you can hard code you can put",
    "start": "466080",
    "end": "467599"
  },
  {
    "text": "credentials in here using secrets you",
    "start": "467599",
    "end": "469039"
  },
  {
    "text": "can put them right in here you can use",
    "start": "469039",
    "end": "470479"
  },
  {
    "text": "hashicorp vault or",
    "start": "470479",
    "end": "471599"
  },
  {
    "text": "aws parameter store there's various",
    "start": "471599",
    "end": "474240"
  },
  {
    "text": "methods that you can use but the",
    "start": "474240",
    "end": "475440"
  },
  {
    "text": "database object",
    "start": "475440",
    "end": "476400"
  },
  {
    "text": "just is a pointer to how to connect to",
    "start": "476400",
    "end": "478479"
  },
  {
    "text": "the database whether that database is in",
    "start": "478479",
    "end": "480240"
  },
  {
    "text": "the cluster or out of the cluster",
    "start": "480240",
    "end": "483039"
  },
  {
    "start": "482000",
    "end": "518000"
  },
  {
    "text": "next you want to deploy a kind table",
    "start": "483039",
    "end": "485440"
  },
  {
    "text": "chances are you probably want to deploy",
    "start": "485440",
    "end": "486639"
  },
  {
    "text": "more than one of these because most",
    "start": "486639",
    "end": "487919"
  },
  {
    "text": "databases have multiple tables",
    "start": "487919",
    "end": "489919"
  },
  {
    "text": "it looks something like this so this",
    "start": "489919",
    "end": "491520"
  },
  {
    "text": "kind table references the",
    "start": "491520",
    "end": "493120"
  },
  {
    "text": "the database object that we just",
    "start": "493120",
    "end": "494400"
  },
  {
    "text": "deployed and it defines what the schema",
    "start": "494400",
    "end": "496879"
  },
  {
    "text": "what the desired schema of this table is",
    "start": "496879",
    "end": "499199"
  },
  {
    "text": "on the example that's on the screen here",
    "start": "499199",
    "end": "501039"
  },
  {
    "text": "we have a couple of columns",
    "start": "501039",
    "end": "502479"
  },
  {
    "text": "code and name so this defines what the",
    "start": "502479",
    "end": "504479"
  },
  {
    "text": "columns are what the types of these",
    "start": "504479",
    "end": "506000"
  },
  {
    "text": "columns are any constraints on the",
    "start": "506000",
    "end": "507520"
  },
  {
    "text": "columns",
    "start": "507520",
    "end": "508319"
  },
  {
    "text": "and in addition you can define primary",
    "start": "508319",
    "end": "510960"
  },
  {
    "text": "key",
    "start": "510960",
    "end": "511919"
  },
  {
    "text": "indexes unique indexes foreign keys any",
    "start": "511919",
    "end": "514640"
  },
  {
    "text": "other",
    "start": "514640",
    "end": "515200"
  },
  {
    "text": "schema that's that you need on this",
    "start": "515200",
    "end": "517760"
  },
  {
    "text": "table",
    "start": "517760",
    "end": "519360"
  },
  {
    "start": "518000",
    "end": "592000"
  },
  {
    "text": "you deploy this kind table the next step",
    "start": "519360",
    "end": "521599"
  },
  {
    "text": "is just to view and approve",
    "start": "521599",
    "end": "522959"
  },
  {
    "text": "the migration so using the",
    "start": "522959",
    "end": "526080"
  },
  {
    "text": "schema hero cli which is distributed as",
    "start": "526080",
    "end": "528560"
  },
  {
    "text": "a coupe control",
    "start": "528560",
    "end": "529839"
  },
  {
    "text": "plug-in you can just view the migrations",
    "start": "529839",
    "end": "532000"
  },
  {
    "text": "and then describe a migration",
    "start": "532000",
    "end": "533600"
  },
  {
    "text": "so here we've deployed a migration and",
    "start": "533600",
    "end": "536560"
  },
  {
    "text": "when i run coupe control schema hero",
    "start": "536560",
    "end": "538240"
  },
  {
    "text": "describe migration you can see",
    "start": "538240",
    "end": "540000"
  },
  {
    "text": "that the output shows the generated ddl",
    "start": "540000",
    "end": "542240"
  },
  {
    "text": "statement and that's a create table",
    "start": "542240",
    "end": "544560"
  },
  {
    "text": "command and then it gives you a couple",
    "start": "544560",
    "end": "546320"
  },
  {
    "text": "of commands down towards the bottom to",
    "start": "546320",
    "end": "548000"
  },
  {
    "text": "be able to approve that migration",
    "start": "548000",
    "end": "549680"
  },
  {
    "text": "reject the migration or recalculate the",
    "start": "549680",
    "end": "551760"
  },
  {
    "text": "migration",
    "start": "551760",
    "end": "553440"
  },
  {
    "text": "approving the migration will actually",
    "start": "553440",
    "end": "554800"
  },
  {
    "text": "just run that ddl statement that's",
    "start": "554800",
    "end": "556560"
  },
  {
    "text": "presented on the screen",
    "start": "556560",
    "end": "557760"
  },
  {
    "text": "that schema hero calculated rejecting",
    "start": "557760",
    "end": "560560"
  },
  {
    "text": "the migration",
    "start": "560560",
    "end": "561360"
  },
  {
    "text": "will mark it as rejected not run it and",
    "start": "561360",
    "end": "563680"
  },
  {
    "text": "prevent it from being executed",
    "start": "563680",
    "end": "566080"
  },
  {
    "text": "and recalculating the migration tells",
    "start": "566080",
    "end": "568160"
  },
  {
    "text": "schema hero to go take the desired state",
    "start": "568160",
    "end": "570399"
  },
  {
    "text": "in in connect compare it to the actual",
    "start": "570399",
    "end": "574080"
  },
  {
    "text": "database schema that's running",
    "start": "574080",
    "end": "575680"
  },
  {
    "text": "and regenerate the correct create table",
    "start": "575680",
    "end": "578240"
  },
  {
    "text": "statement",
    "start": "578240",
    "end": "578880"
  },
  {
    "text": "that may be useful if the underlying",
    "start": "578880",
    "end": "580959"
  },
  {
    "text": "database schema has changed somebody",
    "start": "580959",
    "end": "582959"
  },
  {
    "text": "manually",
    "start": "582959",
    "end": "583760"
  },
  {
    "text": "altered it or another tool has has",
    "start": "583760",
    "end": "586080"
  },
  {
    "text": "edited the schema so schema hero will",
    "start": "586080",
    "end": "588080"
  },
  {
    "text": "then",
    "start": "588080",
    "end": "588480"
  },
  {
    "text": "regenerate the ddl statements that are",
    "start": "588480",
    "end": "590959"
  },
  {
    "text": "necessary",
    "start": "590959",
    "end": "593200"
  },
  {
    "start": "592000",
    "end": "1009000"
  },
  {
    "text": "to help demonstrate this i want to show",
    "start": "593200",
    "end": "594880"
  },
  {
    "text": "a little bit of a demo",
    "start": "594880",
    "end": "596480"
  },
  {
    "text": "on how schema hero works so here i have",
    "start": "596480",
    "end": "599440"
  },
  {
    "text": "a",
    "start": "599440",
    "end": "600160"
  },
  {
    "text": "kubernetes cluster set up it's an eks",
    "start": "600160",
    "end": "602240"
  },
  {
    "text": "cluster doesn't really matter",
    "start": "602240",
    "end": "604399"
  },
  {
    "text": "this is kubernetes 116 and i also have",
    "start": "604399",
    "end": "606560"
  },
  {
    "text": "an rds instance set up",
    "start": "606560",
    "end": "608480"
  },
  {
    "text": "and the rds instance is set up on the",
    "start": "608480",
    "end": "610640"
  },
  {
    "text": "same vpc but it's only on",
    "start": "610640",
    "end": "613200"
  },
  {
    "text": "connected into my private network",
    "start": "613200",
    "end": "616880"
  },
  {
    "text": "so we look here and this is like i",
    "start": "616880",
    "end": "618240"
  },
  {
    "text": "mentioned it's a kubernetes 116 cluster",
    "start": "618240",
    "end": "620320"
  },
  {
    "text": "running five nodes um",
    "start": "620320",
    "end": "624399"
  },
  {
    "text": "i'm going to now deploy schema hero and",
    "start": "624720",
    "end": "628320"
  },
  {
    "text": "deploy",
    "start": "628320",
    "end": "628959"
  },
  {
    "text": "um a database to it so to start with i",
    "start": "628959",
    "end": "632480"
  },
  {
    "text": "want to deploy a secret and the secret",
    "start": "632480",
    "end": "634240"
  },
  {
    "text": "contains a connection string and this",
    "start": "634240",
    "end": "635760"
  },
  {
    "text": "connection string",
    "start": "635760",
    "end": "636800"
  },
  {
    "text": "is base64 encoded but it's it's to this",
    "start": "636800",
    "end": "639120"
  },
  {
    "text": "test",
    "start": "639120",
    "end": "639920"
  },
  {
    "text": "database instance that we have on on rds",
    "start": "639920",
    "end": "643440"
  },
  {
    "text": "so if i apply that it may already be",
    "start": "643440",
    "end": "646320"
  },
  {
    "text": "applied",
    "start": "646320",
    "end": "648320"
  },
  {
    "text": "so that secret is there that's great and",
    "start": "648320",
    "end": "651279"
  },
  {
    "text": "so the next step i want to do is deploy",
    "start": "651279",
    "end": "652800"
  },
  {
    "text": "the schema hero operator",
    "start": "652800",
    "end": "654160"
  },
  {
    "text": "so i have cube control schema hero",
    "start": "654160",
    "end": "658240"
  },
  {
    "text": "already installed this is distributed as",
    "start": "658640",
    "end": "660240"
  },
  {
    "text": "a crew plug-in so you can do",
    "start": "660240",
    "end": "662079"
  },
  {
    "text": "control crew with a k um install schema",
    "start": "662079",
    "end": "665440"
  },
  {
    "text": "hero and that'll give you the client",
    "start": "665440",
    "end": "666959"
  },
  {
    "text": "side components for",
    "start": "666959",
    "end": "668240"
  },
  {
    "text": "to manage a schema hero operator running",
    "start": "668240",
    "end": "670640"
  },
  {
    "text": "in your production environment or any",
    "start": "670640",
    "end": "672079"
  },
  {
    "text": "environment",
    "start": "672079",
    "end": "672800"
  },
  {
    "text": "so i have schema hero 0101 installed",
    "start": "672800",
    "end": "674640"
  },
  {
    "text": "here so i can run",
    "start": "674640",
    "end": "675920"
  },
  {
    "text": "control schema hero install and that",
    "start": "675920",
    "end": "678640"
  },
  {
    "text": "installs the operator",
    "start": "678640",
    "end": "679920"
  },
  {
    "text": "the crds and the manager into the",
    "start": "679920",
    "end": "682320"
  },
  {
    "text": "cluster",
    "start": "682320",
    "end": "684640"
  },
  {
    "text": "now that that's installed we can take a",
    "start": "684640",
    "end": "686160"
  },
  {
    "text": "look back here i have a airline db file",
    "start": "686160",
    "end": "689200"
  },
  {
    "text": "so i want to you know the the scenario",
    "start": "689200",
    "end": "691760"
  },
  {
    "text": "that i want to present here is deploying",
    "start": "691760",
    "end": "693600"
  },
  {
    "text": "a small database that that is you know",
    "start": "693600",
    "end": "695600"
  },
  {
    "text": "could be used to manage",
    "start": "695600",
    "end": "696959"
  },
  {
    "text": "airports and airline reservations so",
    "start": "696959",
    "end": "699920"
  },
  {
    "text": "this",
    "start": "699920",
    "end": "700839"
  },
  {
    "text": "crd this custom resource is the",
    "start": "700839",
    "end": "703120"
  },
  {
    "text": "databases kind the database kind for",
    "start": "703120",
    "end": "704800"
  },
  {
    "text": "schema hero",
    "start": "704800",
    "end": "705680"
  },
  {
    "text": "and it references that secret that i",
    "start": "705680",
    "end": "707120"
  },
  {
    "text": "just deployed",
    "start": "707120",
    "end": "709200"
  },
  {
    "text": "so we're going to go ahead and deploy",
    "start": "709200",
    "end": "710320"
  },
  {
    "text": "that now if we apply that",
    "start": "710320",
    "end": "716880"
  },
  {
    "text": "now we have that database object",
    "start": "716880",
    "end": "718639"
  },
  {
    "text": "deployed",
    "start": "718639",
    "end": "720160"
  },
  {
    "text": "and we that hasn't done anything yet",
    "start": "720160",
    "end": "721839"
  },
  {
    "text": "except just point schema hero allow",
    "start": "721839",
    "end": "724079"
  },
  {
    "text": "schema hero to start managing this",
    "start": "724079",
    "end": "725360"
  },
  {
    "text": "database",
    "start": "725360",
    "end": "727519"
  },
  {
    "text": "the next step is i want to deploy a",
    "start": "727519",
    "end": "729200"
  },
  {
    "text": "single table so this table",
    "start": "729200",
    "end": "731600"
  },
  {
    "text": "is named airport and we reference it",
    "start": "731600",
    "end": "735040"
  },
  {
    "text": "that it's in the airline db",
    "start": "735040",
    "end": "736480"
  },
  {
    "text": "database and you can see here i'm",
    "start": "736480",
    "end": "738720"
  },
  {
    "text": "identifying two columns are",
    "start": "738720",
    "end": "740000"
  },
  {
    "text": "declaring two columns that i want the",
    "start": "740000",
    "end": "741680"
  },
  {
    "text": "code in the name so the airport code and",
    "start": "741680",
    "end": "743760"
  },
  {
    "text": "the name of the airport",
    "start": "743760",
    "end": "744880"
  },
  {
    "text": "and i'm saying that the primary key is",
    "start": "744880",
    "end": "746800"
  },
  {
    "text": "the code key",
    "start": "746800",
    "end": "748079"
  },
  {
    "text": "or the code column and that's an array i",
    "start": "748079",
    "end": "750160"
  },
  {
    "text": "can be multiple",
    "start": "750160",
    "end": "751600"
  },
  {
    "text": "columns if you have a composite primary",
    "start": "751600",
    "end": "753200"
  },
  {
    "text": "key but in this example this is a single",
    "start": "753200",
    "end": "755040"
  },
  {
    "text": "prime",
    "start": "755040",
    "end": "755440"
  },
  {
    "text": "a single column primary key so we're",
    "start": "755440",
    "end": "758480"
  },
  {
    "text": "going to go ahead now",
    "start": "758480",
    "end": "759600"
  },
  {
    "text": "and apply that",
    "start": "759600",
    "end": "762480"
  },
  {
    "text": "and now that that's applied i can run",
    "start": "766560",
    "end": "768560"
  },
  {
    "text": "coupe control schema hero",
    "start": "768560",
    "end": "770880"
  },
  {
    "text": "get migrations when i run this i can see",
    "start": "770880",
    "end": "774560"
  },
  {
    "text": "that",
    "start": "774560",
    "end": "774880"
  },
  {
    "text": "the airport table in the airline db was",
    "start": "774880",
    "end": "778160"
  },
  {
    "text": "planned six seconds ago and so planned",
    "start": "778160",
    "end": "780639"
  },
  {
    "text": "means that the",
    "start": "780639",
    "end": "781600"
  },
  {
    "text": "schema hero controller took that table",
    "start": "781600",
    "end": "784800"
  },
  {
    "text": "yaml",
    "start": "784800",
    "end": "785360"
  },
  {
    "text": "and compared it to what's actually",
    "start": "785360",
    "end": "787360"
  },
  {
    "text": "running in my rds instance",
    "start": "787360",
    "end": "789200"
  },
  {
    "text": "and generated all the necessary sql",
    "start": "789200",
    "end": "791760"
  },
  {
    "text": "statements the ddl statements that are",
    "start": "791760",
    "end": "793519"
  },
  {
    "text": "needed in order to",
    "start": "793519",
    "end": "795040"
  },
  {
    "text": "migrate the rds instance to the state",
    "start": "795040",
    "end": "798639"
  },
  {
    "text": "that i have in my yaml we can actually",
    "start": "798639",
    "end": "801200"
  },
  {
    "text": "take a look",
    "start": "801200",
    "end": "801839"
  },
  {
    "text": "at this migration",
    "start": "801839",
    "end": "805839"
  },
  {
    "text": "if we just describe that migration",
    "start": "805839",
    "end": "810160"
  },
  {
    "text": "when i do this you can see that the",
    "start": "810639",
    "end": "812399"
  },
  {
    "text": "migration name is what i just provided",
    "start": "812399",
    "end": "814399"
  },
  {
    "text": "and the generated ddl statement here",
    "start": "814399",
    "end": "817200"
  },
  {
    "text": "is what what schema hero",
    "start": "817200",
    "end": "820240"
  },
  {
    "text": "has calculated that it's needed to turn",
    "start": "820240",
    "end": "822320"
  },
  {
    "text": "that rds instance into the instance",
    "start": "822320",
    "end": "824079"
  },
  {
    "text": "into the desired state and it's it",
    "start": "824079",
    "end": "826240"
  },
  {
    "text": "didn't find that airport table because",
    "start": "826240",
    "end": "827519"
  },
  {
    "text": "this is a new database and so it just",
    "start": "827519",
    "end": "829199"
  },
  {
    "text": "generated a create table statement",
    "start": "829199",
    "end": "831120"
  },
  {
    "text": "it gives me a couple options i can",
    "start": "831120",
    "end": "832399"
  },
  {
    "text": "approve this i can",
    "start": "832399",
    "end": "834560"
  },
  {
    "text": "reject it or i can recalculate it if i",
    "start": "834560",
    "end": "836560"
  },
  {
    "text": "need to i'm going to go ahead and just",
    "start": "836560",
    "end": "838000"
  },
  {
    "text": "approve it",
    "start": "838000",
    "end": "839680"
  },
  {
    "text": "and now that i've approved it when i get",
    "start": "839680",
    "end": "841839"
  },
  {
    "text": "migrations again you can see that",
    "start": "841839",
    "end": "843680"
  },
  {
    "text": "it was planned a minute ago i approved",
    "start": "843680",
    "end": "845760"
  },
  {
    "text": "it four seconds ago and scheming hero",
    "start": "845760",
    "end": "847440"
  },
  {
    "text": "executed it four seconds ago",
    "start": "847440",
    "end": "849680"
  },
  {
    "text": "so i'm going to head over here to my",
    "start": "849680",
    "end": "853360"
  },
  {
    "text": "ui that i used to look at my postgres",
    "start": "853600",
    "end": "856480"
  },
  {
    "text": "cluster",
    "start": "856480",
    "end": "857199"
  },
  {
    "text": "postgres database and i'm going to",
    "start": "857199",
    "end": "858399"
  },
  {
    "text": "refresh the tables that i have and you",
    "start": "858399",
    "end": "860320"
  },
  {
    "text": "can see",
    "start": "860320",
    "end": "860720"
  },
  {
    "text": "now i have an airport table i didn't",
    "start": "860720",
    "end": "862320"
  },
  {
    "text": "have that before and it has these two",
    "start": "862320",
    "end": "864079"
  },
  {
    "text": "columns code and name which meet the",
    "start": "864079",
    "end": "866240"
  },
  {
    "text": "requirements and what i wrote in that",
    "start": "866240",
    "end": "868839"
  },
  {
    "text": "yaml",
    "start": "868839",
    "end": "870720"
  },
  {
    "text": "now i want to show what it's like to",
    "start": "870720",
    "end": "872240"
  },
  {
    "text": "edit this and so like let's say i want",
    "start": "872240",
    "end": "873600"
  },
  {
    "text": "to add a new",
    "start": "873600",
    "end": "874480"
  },
  {
    "text": "column into here and i want that column",
    "start": "874480",
    "end": "876720"
  },
  {
    "text": "to be named i don't know postal code",
    "start": "876720",
    "end": "880240"
  },
  {
    "text": "and that's going to be a type text",
    "start": "880240",
    "end": "883279"
  },
  {
    "text": "and let's add a constraint under this",
    "start": "883279",
    "end": "885199"
  },
  {
    "text": "column and that is not null",
    "start": "885199",
    "end": "888639"
  },
  {
    "text": "true so we're going to add a new column",
    "start": "888639",
    "end": "890639"
  },
  {
    "text": "postal code type text",
    "start": "890639",
    "end": "892079"
  },
  {
    "text": "not null and while we're at it let's say",
    "start": "892079",
    "end": "894320"
  },
  {
    "text": "that we don't want any duplicate names",
    "start": "894320",
    "end": "896160"
  },
  {
    "text": "inside our uh airport table",
    "start": "896160",
    "end": "899199"
  },
  {
    "text": "so i'm going to come into here and add",
    "start": "899199",
    "end": "901600"
  },
  {
    "text": "an index",
    "start": "901600",
    "end": "903839"
  },
  {
    "text": "and the index is going to be on the name",
    "start": "903839",
    "end": "907440"
  },
  {
    "text": "column and again it's an array because i",
    "start": "907440",
    "end": "909199"
  },
  {
    "text": "can have composite indexes that span",
    "start": "909199",
    "end": "911199"
  },
  {
    "text": "multiple",
    "start": "911199",
    "end": "912079"
  },
  {
    "text": "columns in this case i'm not doing that",
    "start": "912079",
    "end": "914959"
  },
  {
    "text": "i want that to be a unique",
    "start": "914959",
    "end": "916480"
  },
  {
    "text": "index and i could name the index if i",
    "start": "916480",
    "end": "919279"
  },
  {
    "text": "want to but i don't really have a strong",
    "start": "919279",
    "end": "920560"
  },
  {
    "text": "preference about the name so i'm going",
    "start": "920560",
    "end": "921519"
  },
  {
    "text": "to let schema hero go ahead and",
    "start": "921519",
    "end": "922720"
  },
  {
    "text": "calculate that",
    "start": "922720",
    "end": "926560"
  },
  {
    "text": "and now when i apply that migration",
    "start": "926560",
    "end": "929759"
  },
  {
    "text": "again",
    "start": "929759",
    "end": "930480"
  },
  {
    "text": "or that yaml again i have an error",
    "start": "930480",
    "end": "934079"
  },
  {
    "text": "because the key is actually named",
    "start": "934079",
    "end": "936639"
  },
  {
    "text": "indexes",
    "start": "936639",
    "end": "938959"
  },
  {
    "text": "so when i apply that yaml again it runs",
    "start": "938959",
    "end": "941839"
  },
  {
    "text": "that",
    "start": "941839",
    "end": "942880"
  },
  {
    "text": "and now when i look at let me come back",
    "start": "942880",
    "end": "945040"
  },
  {
    "text": "here and get migrations",
    "start": "945040",
    "end": "946399"
  },
  {
    "text": "you can see there's a second one a",
    "start": "946399",
    "end": "947920"
  },
  {
    "text": "second migration for the same table that",
    "start": "947920",
    "end": "949440"
  },
  {
    "text": "was planned six seconds ago",
    "start": "949440",
    "end": "951360"
  },
  {
    "text": "and if we run kube control schema hero",
    "start": "951360",
    "end": "955360"
  },
  {
    "text": "describe that migration",
    "start": "955360",
    "end": "958639"
  },
  {
    "text": "you can see that it's generated a couple",
    "start": "959839",
    "end": "962320"
  },
  {
    "text": "of new",
    "start": "962320",
    "end": "963279"
  },
  {
    "text": "c ddl statements it wants to alter the",
    "start": "963279",
    "end": "965680"
  },
  {
    "text": "airport table",
    "start": "965680",
    "end": "966720"
  },
  {
    "text": "adding the postal code column text not",
    "start": "966720",
    "end": "968720"
  },
  {
    "text": "no and then it wants to create a unique",
    "start": "968720",
    "end": "970800"
  },
  {
    "text": "index",
    "start": "970800",
    "end": "971279"
  },
  {
    "text": "named this on airport with that name",
    "start": "971279",
    "end": "974959"
  },
  {
    "text": "column and it gives me commands again to",
    "start": "974959",
    "end": "977040"
  },
  {
    "text": "approve or reject it",
    "start": "977040",
    "end": "978959"
  },
  {
    "text": "i'm going to go ahead and just approve",
    "start": "978959",
    "end": "980320"
  },
  {
    "text": "that for this demo so i approve it",
    "start": "980320",
    "end": "983360"
  },
  {
    "text": "and if i run get migrations again you",
    "start": "983360",
    "end": "986000"
  },
  {
    "text": "can see that again it was",
    "start": "986000",
    "end": "987279"
  },
  {
    "text": "approved four seconds ago executed three",
    "start": "987279",
    "end": "989040"
  },
  {
    "text": "seconds ago and when we come back",
    "start": "989040",
    "end": "991199"
  },
  {
    "text": "here into our ui and we refresh the",
    "start": "991199",
    "end": "994320"
  },
  {
    "text": "tables that we have",
    "start": "994320",
    "end": "995759"
  },
  {
    "text": "our airport table now has a postal code",
    "start": "995759",
    "end": "997519"
  },
  {
    "text": "column and it has a unique index on name",
    "start": "997519",
    "end": "1000320"
  },
  {
    "text": "um and um it's",
    "start": "1000320",
    "end": "1003519"
  },
  {
    "text": "like the the the state that i just",
    "start": "1003519",
    "end": "1005279"
  },
  {
    "text": "deployed is there",
    "start": "1005279",
    "end": "1008079"
  },
  {
    "text": "great so schema hero has a few options",
    "start": "1009600",
    "end": "1012720"
  },
  {
    "text": "that we just talked through",
    "start": "1012720",
    "end": "1014000"
  },
  {
    "text": "um you can get tables uh and this shows",
    "start": "1014000",
    "end": "1017519"
  },
  {
    "text": "you you can view all of the tables that",
    "start": "1017519",
    "end": "1019199"
  },
  {
    "text": "you have and you can view the",
    "start": "1019199",
    "end": "1020880"
  },
  {
    "text": "what the expected and the desired state",
    "start": "1020880",
    "end": "1022880"
  },
  {
    "text": "of these tables are",
    "start": "1022880",
    "end": "1024558"
  },
  {
    "text": "you can get migrations you can filter in",
    "start": "1024559",
    "end": "1026400"
  },
  {
    "text": "by database in case you're managing",
    "start": "1026400",
    "end": "1027760"
  },
  {
    "text": "multiple databases",
    "start": "1027760",
    "end": "1029120"
  },
  {
    "text": "and this shows you all of the different",
    "start": "1029120",
    "end": "1030558"
  },
  {
    "text": "migrations that you've run describing a",
    "start": "1030559",
    "end": "1032720"
  },
  {
    "text": "migration",
    "start": "1032720",
    "end": "1033918"
  },
  {
    "text": "you can see here you know an example of",
    "start": "1033919",
    "end": "1035438"
  },
  {
    "text": "a little bit more of a complex one that",
    "start": "1035439",
    "end": "1037360"
  },
  {
    "text": "that we have where it's this one table",
    "start": "1037360",
    "end": "1040959"
  },
  {
    "text": "has multiple alter table statements that",
    "start": "1040959",
    "end": "1043839"
  },
  {
    "text": "it wants to run because that was all",
    "start": "1043839",
    "end": "1045360"
  },
  {
    "text": "deployed",
    "start": "1045360",
    "end": "1045918"
  },
  {
    "text": "in one iteration one version of",
    "start": "1045919",
    "end": "1049039"
  },
  {
    "text": "that table resource",
    "start": "1049039",
    "end": "1052480"
  },
  {
    "start": "1051000",
    "end": "1105000"
  },
  {
    "text": "uh next i want to talk for a minute",
    "start": "1052480",
    "end": "1054080"
  },
  {
    "text": "about migrating to or converting to",
    "start": "1054080",
    "end": "1056880"
  },
  {
    "text": "schema hero so chances are you already",
    "start": "1056880",
    "end": "1058640"
  },
  {
    "text": "have a database running in production or",
    "start": "1058640",
    "end": "1060720"
  },
  {
    "text": "that you want you're thinking this might",
    "start": "1060720",
    "end": "1062080"
  },
  {
    "text": "be useful for um and you don't have to",
    "start": "1062080",
    "end": "1064000"
  },
  {
    "text": "this isn't only good for like new",
    "start": "1064000",
    "end": "1066160"
  },
  {
    "text": "databases we put some effort into how do",
    "start": "1066160",
    "end": "1067919"
  },
  {
    "text": "we",
    "start": "1067919",
    "end": "1068480"
  },
  {
    "text": "migrate an existing schema into schema",
    "start": "1068480",
    "end": "1070559"
  },
  {
    "text": "hero",
    "start": "1070559",
    "end": "1071919"
  },
  {
    "text": "so this coupe control schema hero",
    "start": "1071919",
    "end": "1073760"
  },
  {
    "text": "generate command takes a uri",
    "start": "1073760",
    "end": "1075840"
  },
  {
    "text": "to that database if you",
    "start": "1075840",
    "end": "1079120"
  },
  {
    "text": "pass that uri in the coupe control",
    "start": "1079120",
    "end": "1082880"
  },
  {
    "text": "schema hero plugin is going to connect",
    "start": "1082880",
    "end": "1085840"
  },
  {
    "text": "in",
    "start": "1085840",
    "end": "1086240"
  },
  {
    "text": "view the schema of all of those",
    "start": "1086240",
    "end": "1087679"
  },
  {
    "text": "different tables and write a yaml file",
    "start": "1087679",
    "end": "1089679"
  },
  {
    "text": "for each of those tables",
    "start": "1089679",
    "end": "1091039"
  },
  {
    "text": "so this is a really easy way to export",
    "start": "1091039",
    "end": "1092880"
  },
  {
    "text": "your schema from a running database",
    "start": "1092880",
    "end": "1095200"
  },
  {
    "text": "into all of the yaml files that are",
    "start": "1095200",
    "end": "1096799"
  },
  {
    "text": "necessary and then you could edit one of",
    "start": "1096799",
    "end": "1098320"
  },
  {
    "text": "these yaml files and apply it",
    "start": "1098320",
    "end": "1100320"
  },
  {
    "text": "and that would now you're managing that",
    "start": "1100320",
    "end": "1102400"
  },
  {
    "text": "schema through a declarative state of",
    "start": "1102400",
    "end": "1103760"
  },
  {
    "text": "scheming hero",
    "start": "1103760",
    "end": "1106400"
  },
  {
    "text": "take a step back and like reviewing what",
    "start": "1106880",
    "end": "1108400"
  },
  {
    "text": "does schema hero do what does it enable",
    "start": "1108400",
    "end": "1110320"
  },
  {
    "text": "that's unique",
    "start": "1110320",
    "end": "1111120"
  },
  {
    "text": "versus other ways imperative ways or",
    "start": "1111120",
    "end": "1113039"
  },
  {
    "text": "writing sql statements for database",
    "start": "1113039",
    "end": "1114640"
  },
  {
    "text": "migration",
    "start": "1114640",
    "end": "1115520"
  },
  {
    "text": "first it gives you a really easy way to",
    "start": "1115520",
    "end": "1117200"
  },
  {
    "text": "do get ops for database schemas whether",
    "start": "1117200",
    "end": "1119200"
  },
  {
    "text": "you're using argo",
    "start": "1119200",
    "end": "1120080"
  },
  {
    "text": "or flux or argoflux or any other get ops",
    "start": "1120080",
    "end": "1122640"
  },
  {
    "text": "tool to handle deployment",
    "start": "1122640",
    "end": "1124400"
  },
  {
    "text": "you could probably build this yourself",
    "start": "1124400",
    "end": "1126400"
  },
  {
    "text": "today by running custom kubernetes jobs",
    "start": "1126400",
    "end": "1128799"
  },
  {
    "text": "deploying these that run the ddl",
    "start": "1128799",
    "end": "1130720"
  },
  {
    "text": "statements we talked about that a little",
    "start": "1130720",
    "end": "1132080"
  },
  {
    "text": "earlier",
    "start": "1132080",
    "end": "1133280"
  },
  {
    "text": "but schema hero has this all built in",
    "start": "1133280",
    "end": "1134960"
  },
  {
    "text": "you can now just run coupe control apply",
    "start": "1134960",
    "end": "1137360"
  },
  {
    "text": "or let one of these tools",
    "start": "1137360",
    "end": "1138640"
  },
  {
    "text": "deploy the yaml and then you have a full",
    "start": "1138640",
    "end": "1141200"
  },
  {
    "text": "get ops pipeline in order to manage to",
    "start": "1141200",
    "end": "1142880"
  },
  {
    "text": "manage your database schemas",
    "start": "1142880",
    "end": "1145360"
  },
  {
    "text": "it enables policy enforcement for",
    "start": "1145360",
    "end": "1146799"
  },
  {
    "text": "database schemas using tools like open",
    "start": "1146799",
    "end": "1148640"
  },
  {
    "text": "policy agent",
    "start": "1148640",
    "end": "1149440"
  },
  {
    "text": "gatekeeper or conf test or anything like",
    "start": "1149440",
    "end": "1151600"
  },
  {
    "text": "this now that we have our database",
    "start": "1151600",
    "end": "1153679"
  },
  {
    "text": "schemas defined as a declarative",
    "start": "1153679",
    "end": "1155679"
  },
  {
    "text": "structured yaml file instead of",
    "start": "1155679",
    "end": "1157600"
  },
  {
    "text": "imperative",
    "start": "1157600",
    "end": "1158720"
  },
  {
    "text": "statements we can run policy against",
    "start": "1158720",
    "end": "1161600"
  },
  {
    "text": "those",
    "start": "1161600",
    "end": "1162320"
  },
  {
    "text": "apply policies allows us to do unique",
    "start": "1162320",
    "end": "1164480"
  },
  {
    "text": "things like",
    "start": "1164480",
    "end": "1165360"
  },
  {
    "text": "have requirements and enforce",
    "start": "1165360",
    "end": "1167919"
  },
  {
    "text": "requirements around",
    "start": "1167919",
    "end": "1169039"
  },
  {
    "text": "primary key existence on on tables",
    "start": "1169039",
    "end": "1171760"
  },
  {
    "text": "foreign keys",
    "start": "1171760",
    "end": "1173280"
  },
  {
    "text": "names types of different columns",
    "start": "1173280",
    "end": "1175760"
  },
  {
    "text": "anything that you want to be able to do",
    "start": "1175760",
    "end": "1176960"
  },
  {
    "text": "that you can",
    "start": "1176960",
    "end": "1177520"
  },
  {
    "text": "define in a rego file you can now",
    "start": "1177520",
    "end": "1180240"
  },
  {
    "text": "enforce against your database schema",
    "start": "1180240",
    "end": "1183440"
  },
  {
    "text": "you can have easy approval process the",
    "start": "1183440",
    "end": "1185919"
  },
  {
    "text": "demo i just showed and everything we've",
    "start": "1185919",
    "end": "1187360"
  },
  {
    "text": "talked through is kind of walk through",
    "start": "1187360",
    "end": "1188640"
  },
  {
    "text": "that",
    "start": "1188640",
    "end": "1189200"
  },
  {
    "text": "that two-step process where i deploy the",
    "start": "1189200",
    "end": "1191280"
  },
  {
    "text": "yaml file",
    "start": "1191280",
    "end": "1192480"
  },
  {
    "text": "allow scheming hero to plan the sql",
    "start": "1192480",
    "end": "1194720"
  },
  {
    "text": "statement and then i decide to approve",
    "start": "1194720",
    "end": "1196400"
  },
  {
    "text": "or reject it",
    "start": "1196400",
    "end": "1197360"
  },
  {
    "text": "that's really useful if you want to",
    "start": "1197360",
    "end": "1199919"
  },
  {
    "text": "monitor to see what's running",
    "start": "1199919",
    "end": "1201360"
  },
  {
    "text": "but if you have other environments dev",
    "start": "1201360",
    "end": "1203440"
  },
  {
    "text": "test environments or",
    "start": "1203440",
    "end": "1205200"
  },
  {
    "text": "you know different environments where",
    "start": "1205200",
    "end": "1206880"
  },
  {
    "text": "you don't need that level of control",
    "start": "1206880",
    "end": "1208559"
  },
  {
    "text": "you can actually have schema hero",
    "start": "1208559",
    "end": "1210080"
  },
  {
    "text": "automatically approve",
    "start": "1210080",
    "end": "1211679"
  },
  {
    "text": "the the migrations as soon as it",
    "start": "1211679",
    "end": "1213360"
  },
  {
    "text": "calculates them so that gives you a full",
    "start": "1213360",
    "end": "1215280"
  },
  {
    "text": "and and automated schema management that",
    "start": "1215280",
    "end": "1217600"
  },
  {
    "text": "does not",
    "start": "1217600",
    "end": "1218320"
  },
  {
    "text": "require anybody to look at the ddl",
    "start": "1218320",
    "end": "1220880"
  },
  {
    "text": "statements",
    "start": "1220880",
    "end": "1221919"
  },
  {
    "text": "really useful if you pair that with you",
    "start": "1221919",
    "end": "1223600"
  },
  {
    "text": "know policy",
    "start": "1223600",
    "end": "1225120"
  },
  {
    "text": "at code time so that you're you're",
    "start": "1225120",
    "end": "1227120"
  },
  {
    "text": "validating that only certain policies or",
    "start": "1227120",
    "end": "1229039"
  },
  {
    "text": "only certain migrations could be",
    "start": "1229039",
    "end": "1230400"
  },
  {
    "text": "generated",
    "start": "1230400",
    "end": "1232640"
  },
  {
    "text": "this removes the need to write ddl",
    "start": "1232640",
    "end": "1234840"
  },
  {
    "text": "specifically like it's not a replacement",
    "start": "1234840",
    "end": "1237039"
  },
  {
    "text": "for sql",
    "start": "1237039",
    "end": "1237679"
  },
  {
    "text": "your developers still have to write sql",
    "start": "1237679",
    "end": "1239200"
  },
  {
    "text": "or use an orm at the application layer",
    "start": "1239200",
    "end": "1241520"
  },
  {
    "text": "but the the syntax around creating",
    "start": "1241520",
    "end": "1245200"
  },
  {
    "text": "foreign keys or complex",
    "start": "1245200",
    "end": "1248240"
  },
  {
    "text": "alter table statements there's lots of",
    "start": "1248240",
    "end": "1249760"
  },
  {
    "text": "different ways that you could do this",
    "start": "1249760",
    "end": "1251520"
  },
  {
    "text": "that could lock a table or not lock an",
    "start": "1251520",
    "end": "1253280"
  },
  {
    "text": "entire table depending on how you write",
    "start": "1253280",
    "end": "1255280"
  },
  {
    "text": "these migrations",
    "start": "1255280",
    "end": "1256480"
  },
  {
    "text": "schema hero codifies all this up with",
    "start": "1256480",
    "end": "1258480"
  },
  {
    "text": "best practices so it's able to generate",
    "start": "1258480",
    "end": "1260880"
  },
  {
    "text": "like the most optimal ddl statements",
    "start": "1260880",
    "end": "1263039"
  },
  {
    "text": "possible or that it is able to do",
    "start": "1263039",
    "end": "1266320"
  },
  {
    "text": "it eliminates the need to write these",
    "start": "1266320",
    "end": "1267440"
  },
  {
    "text": "custom jobs right and this is an example",
    "start": "1267440",
    "end": "1269520"
  },
  {
    "text": "from a cluster that i've seen where you",
    "start": "1269520",
    "end": "1272640"
  },
  {
    "text": "know",
    "start": "1272640",
    "end": "1272880"
  },
  {
    "text": "it's actually using goose in this case",
    "start": "1272880",
    "end": "1275520"
  },
  {
    "text": "to run database migrations",
    "start": "1275520",
    "end": "1277120"
  },
  {
    "text": "if you're familiar with that tool um and",
    "start": "1277120",
    "end": "1279520"
  },
  {
    "text": "every database migration runs as a job",
    "start": "1279520",
    "end": "1281440"
  },
  {
    "text": "and then they sit there forever",
    "start": "1281440",
    "end": "1282640"
  },
  {
    "text": "hopefully",
    "start": "1282640",
    "end": "1283200"
  },
  {
    "text": "you're cleaning them up better than this",
    "start": "1283200",
    "end": "1284720"
  },
  {
    "text": "but you know it's not uncommon to be",
    "start": "1284720",
    "end": "1286640"
  },
  {
    "text": "using kubernetes jobs in order to manage",
    "start": "1286640",
    "end": "1288720"
  },
  {
    "text": "database",
    "start": "1288720",
    "end": "1289280"
  },
  {
    "text": "schemas right now and this eliminates",
    "start": "1289280",
    "end": "1290720"
  },
  {
    "text": "that need",
    "start": "1290720",
    "end": "1292559"
  },
  {
    "text": "schema hero currently supports you know",
    "start": "1292559",
    "end": "1294640"
  },
  {
    "text": "the some popular",
    "start": "1294640",
    "end": "1295919"
  },
  {
    "text": "commercial and open source databases",
    "start": "1295919",
    "end": "1297679"
  },
  {
    "text": "from postgres cockroachdb",
    "start": "1297679",
    "end": "1299600"
  },
  {
    "text": "and mysql cockroach is very similar",
    "start": "1299600",
    "end": "1302799"
  },
  {
    "text": "to postgres but it is a little bit",
    "start": "1302799",
    "end": "1305200"
  },
  {
    "text": "different",
    "start": "1305200",
    "end": "1305919"
  },
  {
    "text": "and the schema management can be a",
    "start": "1305919",
    "end": "1307840"
  },
  {
    "text": "little bit different at times",
    "start": "1307840",
    "end": "1310640"
  },
  {
    "text": "so schema hero creates some new options",
    "start": "1310640",
    "end": "1313280"
  },
  {
    "text": "that we didn't have before",
    "start": "1313280",
    "end": "1314799"
  },
  {
    "text": "one of them being to detect drift in",
    "start": "1314799",
    "end": "1316720"
  },
  {
    "text": "their databases so now that we have the",
    "start": "1316720",
    "end": "1318720"
  },
  {
    "text": "desired state of our databases deployed",
    "start": "1318720",
    "end": "1320799"
  },
  {
    "text": "into the kubernetes cluster",
    "start": "1320799",
    "end": "1322880"
  },
  {
    "text": "if something out of band has modified",
    "start": "1322880",
    "end": "1325360"
  },
  {
    "text": "the schema",
    "start": "1325360",
    "end": "1326720"
  },
  {
    "text": "schema hero will generate a migration to",
    "start": "1326720",
    "end": "1328480"
  },
  {
    "text": "bring it back into",
    "start": "1328480",
    "end": "1330000"
  },
  {
    "text": "where we want it to be it'll remove that",
    "start": "1330000",
    "end": "1331600"
  },
  {
    "text": "drift so it's it's really useful",
    "start": "1331600",
    "end": "1334480"
  },
  {
    "text": "to determine that to to use this as a",
    "start": "1334480",
    "end": "1336799"
  },
  {
    "text": "tool to automatically see if your your",
    "start": "1336799",
    "end": "1338480"
  },
  {
    "text": "databases",
    "start": "1338480",
    "end": "1339200"
  },
  {
    "text": "is not what you expect it to be if the",
    "start": "1339200",
    "end": "1341360"
  },
  {
    "text": "schema changes in any unexpected ways",
    "start": "1341360",
    "end": "1345039"
  },
  {
    "text": "you can also enforce and audit schemas",
    "start": "1345039",
    "end": "1347120"
  },
  {
    "text": "um using you know",
    "start": "1347120",
    "end": "1348720"
  },
  {
    "text": "tools external other cncf projects like",
    "start": "1348720",
    "end": "1350960"
  },
  {
    "text": "gatekeeper conf test and",
    "start": "1350960",
    "end": "1352480"
  },
  {
    "text": "other tools you know by for things like",
    "start": "1352480",
    "end": "1354400"
  },
  {
    "text": "i mentioned before column names",
    "start": "1354400",
    "end": "1356080"
  },
  {
    "text": "any kind of any kind of policy or best",
    "start": "1356080",
    "end": "1358320"
  },
  {
    "text": "practices that you want to implement you",
    "start": "1358320",
    "end": "1359760"
  },
  {
    "text": "can do this you can do it in",
    "start": "1359760",
    "end": "1361200"
  },
  {
    "text": "a git ops or in a you know commit check",
    "start": "1361200",
    "end": "1363520"
  },
  {
    "text": "now or in code review",
    "start": "1363520",
    "end": "1366159"
  },
  {
    "text": "you can easily test schema on updated",
    "start": "1366159",
    "end": "1368159"
  },
  {
    "text": "versions of database",
    "start": "1368159",
    "end": "1369440"
  },
  {
    "text": "engines so as an example here if you",
    "start": "1369440",
    "end": "1372480"
  },
  {
    "text": "were running my sequel 5.6",
    "start": "1372480",
    "end": "1374480"
  },
  {
    "text": "and now you're looking to upgrade to my",
    "start": "1374480",
    "end": "1376159"
  },
  {
    "text": "sequel 8 but there was a",
    "start": "1376159",
    "end": "1378320"
  },
  {
    "text": "some functionality that was deprecated",
    "start": "1378320",
    "end": "1380480"
  },
  {
    "text": "along the way and removed in 8.0 your",
    "start": "1380480",
    "end": "1382799"
  },
  {
    "text": "migrations are no longer going to work",
    "start": "1382799",
    "end": "1384400"
  },
  {
    "text": "because if you run that on a new",
    "start": "1384400",
    "end": "1386840"
  },
  {
    "text": "mysql8 database it's going to fail",
    "start": "1386840",
    "end": "1389840"
  },
  {
    "text": "because the the statement is no longer",
    "start": "1389840",
    "end": "1391360"
  },
  {
    "text": "compatible with the ddl that mysql8",
    "start": "1391360",
    "end": "1393440"
  },
  {
    "text": "supports",
    "start": "1393440",
    "end": "1394320"
  },
  {
    "text": "so think of this as like auto rebasing",
    "start": "1394320",
    "end": "1396080"
  },
  {
    "text": "these you could manually go back through",
    "start": "1396080",
    "end": "1397919"
  },
  {
    "text": "every time you want to change database",
    "start": "1397919",
    "end": "1399200"
  },
  {
    "text": "engines and recalculate all your",
    "start": "1399200",
    "end": "1400640"
  },
  {
    "text": "migrations for the new version",
    "start": "1400640",
    "end": "1402080"
  },
  {
    "text": "schema hero just does this automatically",
    "start": "1402080",
    "end": "1403520"
  },
  {
    "text": "by nature of what it does",
    "start": "1403520",
    "end": "1405280"
  },
  {
    "text": "and it's really easy to test the schema",
    "start": "1405280",
    "end": "1406720"
  },
  {
    "text": "on a cloud native version of the",
    "start": "1406720",
    "end": "1408159"
  },
  {
    "text": "database engine so if you're looking at",
    "start": "1408159",
    "end": "1409679"
  },
  {
    "text": "migrating from say postgres to",
    "start": "1409679",
    "end": "1411200"
  },
  {
    "text": "cockroachdb",
    "start": "1411200",
    "end": "1412400"
  },
  {
    "text": "but you're there's some slight",
    "start": "1412400",
    "end": "1414400"
  },
  {
    "text": "differences in the ddl statements and",
    "start": "1414400",
    "end": "1415919"
  },
  {
    "text": "support between the two engines",
    "start": "1415919",
    "end": "1417679"
  },
  {
    "text": "schema hero is a good use for this",
    "start": "1417679",
    "end": "1419360"
  },
  {
    "text": "because you can take that schema",
    "start": "1419360",
    "end": "1420799"
  },
  {
    "text": "run it against cockroachdb schema hero",
    "start": "1420799",
    "end": "1422960"
  },
  {
    "text": "understands how to calculate the",
    "start": "1422960",
    "end": "1424240"
  },
  {
    "text": "migration commands in the in the create",
    "start": "1424240",
    "end": "1426000"
  },
  {
    "text": "table and alter tables on cockroachdb",
    "start": "1426000",
    "end": "1427840"
  },
  {
    "text": "versus postgrads when there are little",
    "start": "1427840",
    "end": "1429200"
  },
  {
    "text": "differences between the two or",
    "start": "1429200",
    "end": "1430480"
  },
  {
    "text": "unsupported",
    "start": "1430480",
    "end": "1431520"
  },
  {
    "text": "changes and so it's really easy to not",
    "start": "1431520",
    "end": "1434640"
  },
  {
    "text": "think about that abstraction like let's",
    "start": "1434640",
    "end": "1436080"
  },
  {
    "text": "keep in here will be that abstraction so",
    "start": "1436080",
    "end": "1437440"
  },
  {
    "text": "you don't have to like understand those",
    "start": "1437440",
    "end": "1438799"
  },
  {
    "text": "differences of",
    "start": "1438799",
    "end": "1439600"
  },
  {
    "text": "of implementing the schema on each of",
    "start": "1439600",
    "end": "1442840"
  },
  {
    "text": "them",
    "start": "1442840",
    "end": "1444080"
  },
  {
    "text": "schema hero doesn't do everything though",
    "start": "1444080",
    "end": "1446080"
  },
  {
    "text": "it doesn't do database migration or data",
    "start": "1446080",
    "end": "1447919"
  },
  {
    "text": "migrations right now",
    "start": "1447919",
    "end": "1448960"
  },
  {
    "text": "in particular if you have business logic",
    "start": "1448960",
    "end": "1450720"
  },
  {
    "text": "you need to run around",
    "start": "1450720",
    "end": "1452240"
  },
  {
    "text": "you know creating modifying data",
    "start": "1452240",
    "end": "1454480"
  },
  {
    "text": "splitting columns doing something that",
    "start": "1454480",
    "end": "1456159"
  },
  {
    "text": "actually involves writing code",
    "start": "1456159",
    "end": "1458080"
  },
  {
    "text": "you know you're still today better using",
    "start": "1458080",
    "end": "1460000"
  },
  {
    "text": "something like goose or fly away",
    "start": "1460000",
    "end": "1461679"
  },
  {
    "text": "or you know another uh",
    "start": "1461679",
    "end": "1465200"
  },
  {
    "text": "migration tool that can handle that data",
    "start": "1465200",
    "end": "1467200"
  },
  {
    "text": "migration at least for that layer",
    "start": "1467200",
    "end": "1469039"
  },
  {
    "text": "we're super open to having this as part",
    "start": "1469039",
    "end": "1471039"
  },
  {
    "text": "of schema hero it's",
    "start": "1471039",
    "end": "1472159"
  },
  {
    "text": "not there today there's a github issue",
    "start": "1472159",
    "end": "1474159"
  },
  {
    "text": "where we're discussing",
    "start": "1474159",
    "end": "1475520"
  },
  {
    "text": "the the plan and like the design for how",
    "start": "1475520",
    "end": "1477600"
  },
  {
    "text": "we could do this",
    "start": "1477600",
    "end": "1478559"
  },
  {
    "text": "love to have some help there uh and it",
    "start": "1478559",
    "end": "1480480"
  },
  {
    "text": "does it's not an app skim hero is not an",
    "start": "1480480",
    "end": "1482320"
  },
  {
    "text": "application runtime orm",
    "start": "1482320",
    "end": "1484159"
  },
  {
    "text": "so if you are using an orm so that",
    "start": "1484159",
    "end": "1486640"
  },
  {
    "text": "developers don't have to write",
    "start": "1486640",
    "end": "1487840"
  },
  {
    "text": "select statements and update and delete",
    "start": "1487840",
    "end": "1489760"
  },
  {
    "text": "statements at runtime",
    "start": "1489760",
    "end": "1490960"
  },
  {
    "text": "that's great that's super compatible",
    "start": "1490960",
    "end": "1492559"
  },
  {
    "text": "with everything schema hero is doing",
    "start": "1492559",
    "end": "1494000"
  },
  {
    "text": "schema hero wants to really focus on",
    "start": "1494000",
    "end": "1495919"
  },
  {
    "text": "becoming the schema",
    "start": "1495919",
    "end": "1497520"
  },
  {
    "text": "orm so next we have some changes we want",
    "start": "1497520",
    "end": "1501279"
  },
  {
    "text": "to add in we want to continue",
    "start": "1501279",
    "end": "1502480"
  },
  {
    "text": "development of schema hero we're looking",
    "start": "1502480",
    "end": "1504159"
  },
  {
    "text": "to add in additional database engine",
    "start": "1504159",
    "end": "1505840"
  },
  {
    "text": "support so yugobite spanner tidbit",
    "start": "1505840",
    "end": "1508400"
  },
  {
    "text": "vitas anything like this basically any",
    "start": "1508400",
    "end": "1511440"
  },
  {
    "text": "relational",
    "start": "1511440",
    "end": "1512080"
  },
  {
    "text": "database we think that you know there's",
    "start": "1512080",
    "end": "1513840"
  },
  {
    "text": "a schema for it and schema hero would be",
    "start": "1513840",
    "end": "1515520"
  },
  {
    "text": "a great tool to manage that",
    "start": "1515520",
    "end": "1517200"
  },
  {
    "text": "we do plan to submit schema hero to the",
    "start": "1517200",
    "end": "1520159"
  },
  {
    "text": "cncf as a sandbox project",
    "start": "1520159",
    "end": "1522240"
  },
  {
    "text": "really soon um like i mentioned before",
    "start": "1522240",
    "end": "1524880"
  },
  {
    "text": "we're talking about adding data and",
    "start": "1524880",
    "end": "1526159"
  },
  {
    "text": "server migration capabilities into",
    "start": "1526159",
    "end": "1527919"
  },
  {
    "text": "schema hero so that it can do more than",
    "start": "1527919",
    "end": "1529679"
  },
  {
    "text": "just schema it can handle all migration",
    "start": "1529679",
    "end": "1533200"
  },
  {
    "text": "all deploy time migration type tasks",
    "start": "1533200",
    "end": "1536240"
  },
  {
    "text": "and we're looking for contributors and",
    "start": "1536240",
    "end": "1537600"
  },
  {
    "text": "users really in into the project so if",
    "start": "1537600",
    "end": "1539919"
  },
  {
    "text": "it's interesting you know we'd love to",
    "start": "1539919",
    "end": "1541520"
  },
  {
    "text": "have you try it out and give some",
    "start": "1541520",
    "end": "1542640"
  },
  {
    "text": "feedback and see you know where it fits",
    "start": "1542640",
    "end": "1544960"
  },
  {
    "text": "use cases and what changes we need",
    "start": "1544960",
    "end": "1546640"
  },
  {
    "text": "to add into the project to to make it",
    "start": "1546640",
    "end": "1548799"
  },
  {
    "text": "fit even more use cases",
    "start": "1548799",
    "end": "1552320"
  },
  {
    "text": "that's it thanks everyone",
    "start": "1552559",
    "end": "1557039"
  }
]