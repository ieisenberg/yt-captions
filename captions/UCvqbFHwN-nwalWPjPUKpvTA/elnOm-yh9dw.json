[
  {
    "text": "welcome everybody uh this is going to be",
    "start": "400",
    "end": "2399"
  },
  {
    "text": "federated services uh straightforward",
    "start": "2399",
    "end": "4759"
  },
  {
    "text": "multicluster um so if you were here for",
    "start": "4759",
    "end": "6879"
  },
  {
    "text": "the previous talk from uh William Rizzo",
    "start": "6879",
    "end": "9200"
  },
  {
    "text": "uh he talked a little bit about",
    "start": "9200",
    "end": "10880"
  },
  {
    "text": "federated services um this is going to",
    "start": "10880",
    "end": "12960"
  },
  {
    "text": "be a great continuation of that where",
    "start": "12960",
    "end": "14480"
  },
  {
    "text": "we're going to kind of go deeper into",
    "start": "14480",
    "end": "15920"
  },
  {
    "text": "what federated services are what",
    "start": "15920",
    "end": "17680"
  },
  {
    "text": "problems they're solving how do they",
    "start": "17680",
    "end": "19199"
  },
  {
    "text": "work um so uh I think that was a really",
    "start": "19199",
    "end": "22560"
  },
  {
    "text": "great lead in the abstract for this talk",
    "start": "22560",
    "end": "26000"
  },
  {
    "text": "said that we were going to do a deep",
    "start": "26000",
    "end": "27519"
  },
  {
    "text": "dive into federated services and a live",
    "start": "27519",
    "end": "29199"
  },
  {
    "text": "demo and all kinds of other stuff um",
    "start": "29199",
    "end": "31279"
  },
  {
    "text": "which was pretty ambitious for a",
    "start": "31279",
    "end": "34160"
  },
  {
    "text": "25minute talk so I think what we're",
    "start": "34160",
    "end": "35920"
  },
  {
    "text": "going to do is actually skip the live",
    "start": "35920",
    "end": "37280"
  },
  {
    "text": "demo um but there are lots of demos that",
    "start": "37280",
    "end": "39760"
  },
  {
    "text": "you can go take a look at online or you",
    "start": "39760",
    "end": "41520"
  },
  {
    "text": "can kind of find me anytime during the",
    "start": "41520",
    "end": "43120"
  },
  {
    "text": "conference i'll be here all week and uh",
    "start": "43120",
    "end": "45680"
  },
  {
    "text": "happy to chat more about federated",
    "start": "45680",
    "end": "48280"
  },
  {
    "text": "services or anything linky related uh so",
    "start": "48280",
    "end": "51680"
  },
  {
    "text": "my name is Alex Leong i am one of the",
    "start": "51680",
    "end": "54160"
  },
  {
    "text": "maintainers on linkerd i've been working",
    "start": "54160",
    "end": "56079"
  },
  {
    "text": "on linkerd since uh the beginning um so",
    "start": "56079",
    "end": "60640"
  },
  {
    "text": "uh and I was also uh one of the main",
    "start": "60640",
    "end": "62640"
  },
  {
    "text": "people involved in implementing",
    "start": "62640",
    "end": "64320"
  },
  {
    "text": "multicluster and multicluster services",
    "start": "64320",
    "end": "66000"
  },
  {
    "text": "in linkd uh so this is this is kind of",
    "start": "66000",
    "end": "68960"
  },
  {
    "text": "my",
    "start": "68960",
    "end": "71118"
  },
  {
    "text": "wheelhouse um you're here at linky day",
    "start": "71640",
    "end": "74799"
  },
  {
    "text": "so I assume I don't really have to tell",
    "start": "74799",
    "end": "76080"
  },
  {
    "text": "you what link is um but you know it's",
    "start": "76080",
    "end": "79520"
  },
  {
    "text": "been around for for eight years lots of",
    "start": "79520",
    "end": "81119"
  },
  {
    "text": "people use it many of whom are in this",
    "start": "81119",
    "end": "82720"
  },
  {
    "text": "room right now um and multicluster is a",
    "start": "82720",
    "end": "85920"
  },
  {
    "text": "big part of that so just out of my",
    "start": "85920",
    "end": "88159"
  },
  {
    "text": "curiosity can everyone show on on your",
    "start": "88159",
    "end": "91040"
  },
  {
    "text": "hands on your fingers how many clusters",
    "start": "91040",
    "end": "93680"
  },
  {
    "text": "how many Kubernetes clusters are in your",
    "start": "93680",
    "end": "96600"
  },
  {
    "text": "environment one two three",
    "start": "96600",
    "end": "101040"
  },
  {
    "text": "big range yeah how many how many people",
    "start": "101040",
    "end": "102640"
  },
  {
    "text": "don't have enough fingers to answer this",
    "start": "102640",
    "end": "104520"
  },
  {
    "text": "question yeah a lot of people okay so",
    "start": "104520",
    "end": "107360"
  },
  {
    "text": "this is this is extremely relevant",
    "start": "107360",
    "end": "110920"
  },
  {
    "text": "um so I'm going to talk about I'm first",
    "start": "110920",
    "end": "113680"
  },
  {
    "text": "I'm going to give a little bit of",
    "start": "113680",
    "end": "114720"
  },
  {
    "text": "background on how multicluster works in",
    "start": "114720",
    "end": "116960"
  },
  {
    "text": "linkertd um and kind of how it has",
    "start": "116960",
    "end": "119439"
  },
  {
    "text": "worked previously before the",
    "start": "119439",
    "end": "120719"
  },
  {
    "text": "introduction to federated services and",
    "start": "120719",
    "end": "123360"
  },
  {
    "text": "we're going to talk about some of the",
    "start": "123360",
    "end": "124479"
  },
  {
    "text": "problems that come up with that as you",
    "start": "124479",
    "end": "125840"
  },
  {
    "text": "start to scale up the number of clusters",
    "start": "125840",
    "end": "127360"
  },
  {
    "text": "from 1 2 3 to more fingers than you have",
    "start": "127360",
    "end": "130080"
  },
  {
    "text": "on your hands um and I want to talk",
    "start": "130080",
    "end": "133200"
  },
  {
    "text": "about how kind of people were solving",
    "start": "133200",
    "end": "134959"
  },
  {
    "text": "these problems previously using HTTP",
    "start": "134959",
    "end": "137200"
  },
  {
    "text": "route and some of the the shortcomings",
    "start": "137200",
    "end": "139520"
  },
  {
    "text": "that that that ran up into um and then",
    "start": "139520",
    "end": "142800"
  },
  {
    "text": "finally talk about how federated",
    "start": "142800",
    "end": "144400"
  },
  {
    "text": "services work and how they kind of",
    "start": "144400",
    "end": "146000"
  },
  {
    "text": "address some of these",
    "start": "146000",
    "end": "148200"
  },
  {
    "text": "issues okay so linkery multicluster um",
    "start": "148200",
    "end": "152480"
  },
  {
    "text": "so the the generally way we",
    "start": "152480",
    "end": "154720"
  },
  {
    "text": "conceptualize multicluster with linkerty",
    "start": "154720",
    "end": "156720"
  },
  {
    "text": "is that you have a bunch of different",
    "start": "156720",
    "end": "157760"
  },
  {
    "text": "clusters those are the uh blue boxes",
    "start": "157760",
    "end": "160080"
  },
  {
    "text": "there so in this example we've got four",
    "start": "160080",
    "end": "161840"
  },
  {
    "text": "clusters northeast south and west those",
    "start": "161840",
    "end": "163920"
  },
  {
    "text": "are Kubernetes clusters and in each of",
    "start": "163920",
    "end": "166720"
  },
  {
    "text": "those clusters you have some services",
    "start": "166720",
    "end": "168000"
  },
  {
    "text": "that are running so those are the yellow",
    "start": "168000",
    "end": "169440"
  },
  {
    "text": "boxes we've got a front-end service",
    "start": "169440",
    "end": "171440"
  },
  {
    "text": "running in the West cluster you've got a",
    "start": "171440",
    "end": "173440"
  },
  {
    "text": "backend service that's running in a",
    "start": "173440",
    "end": "175040"
  },
  {
    "text": "couple of those clusters you got a a",
    "start": "175040",
    "end": "176480"
  },
  {
    "text": "database that's running in a couple",
    "start": "176480",
    "end": "177840"
  },
  {
    "text": "clusters right and so this is kind of",
    "start": "177840",
    "end": "180160"
  },
  {
    "text": "the typical model where we have services",
    "start": "180160",
    "end": "182159"
  },
  {
    "text": "that are running potentially in multiple",
    "start": "182159",
    "end": "183800"
  },
  {
    "text": "clusters but it's not necessarily",
    "start": "183800",
    "end": "186080"
  },
  {
    "text": "uniform you've got kind of overlapping",
    "start": "186080",
    "end": "188239"
  },
  {
    "text": "sets of services in in different",
    "start": "188239",
    "end": "189680"
  },
  {
    "text": "clusters maybe certain clusters are have",
    "start": "189680",
    "end": "191760"
  },
  {
    "text": "certain purposes maybe some are for",
    "start": "191760",
    "end": "193519"
  },
  {
    "text": "redundancy you know there's probably",
    "start": "193519",
    "end": "195040"
  },
  {
    "text": "some kind of overlap there",
    "start": "195040",
    "end": "197680"
  },
  {
    "text": "um and what this is all to facilitate is",
    "start": "197680",
    "end": "201280"
  },
  {
    "text": "that these services are going to need to",
    "start": "201280",
    "end": "202720"
  },
  {
    "text": "talk to each other so this front-end",
    "start": "202720",
    "end": "205200"
  },
  {
    "text": "service probably needs to talk to the",
    "start": "205200",
    "end": "206400"
  },
  {
    "text": "backend service which may be running in",
    "start": "206400",
    "end": "207920"
  },
  {
    "text": "a different cluster the back end",
    "start": "207920",
    "end": "209440"
  },
  {
    "text": "probably needs to talk to a database",
    "start": "209440",
    "end": "210799"
  },
  {
    "text": "which may be running in the same cluster",
    "start": "210799",
    "end": "212239"
  },
  {
    "text": "maybe running in a different cluster you",
    "start": "212239",
    "end": "214239"
  },
  {
    "text": "have this kind of web of potential uh",
    "start": "214239",
    "end": "217200"
  },
  {
    "text": "multicluster connections from one",
    "start": "217200",
    "end": "218879"
  },
  {
    "text": "cluster to the next",
    "start": "218879",
    "end": "222599"
  },
  {
    "text": "and so we want uh to facilitate that",
    "start": "222640",
    "end": "225760"
  },
  {
    "text": "multicluster communication in a way",
    "start": "225760",
    "end": "228080"
  },
  {
    "text": "that's explicit secure observable and",
    "start": "228080",
    "end": "230319"
  },
  {
    "text": "reliable and when I say explicit here I",
    "start": "230319",
    "end": "232879"
  },
  {
    "text": "mean that you should have control over",
    "start": "232879",
    "end": "234560"
  },
  {
    "text": "where that traffic is going you don't",
    "start": "234560",
    "end": "236159"
  },
  {
    "text": "want traffic to cross that multicluster",
    "start": "236159",
    "end": "239000"
  },
  {
    "text": "boundary without you know without opting",
    "start": "239000",
    "end": "241519"
  },
  {
    "text": "into that you want to be in control of",
    "start": "241519",
    "end": "242959"
  },
  {
    "text": "where that traffic is going you don't",
    "start": "242959",
    "end": "244640"
  },
  {
    "text": "want your traffic to just kind of leave",
    "start": "244640",
    "end": "245920"
  },
  {
    "text": "the cluster without your knowledge or",
    "start": "245920",
    "end": "247280"
  },
  {
    "text": "say so and then of course you want all",
    "start": "247280",
    "end": "249599"
  },
  {
    "text": "of the properties that linkd normally",
    "start": "249599",
    "end": "251920"
  },
  {
    "text": "gives you for local traffic you want you",
    "start": "251920",
    "end": "254159"
  },
  {
    "text": "know observability you want to be able",
    "start": "254159",
    "end": "255680"
  },
  {
    "text": "to have metrics on your traffic you want",
    "start": "255680",
    "end": "257840"
  },
  {
    "text": "MTLS you want it to be secure you want",
    "start": "257840",
    "end": "260079"
  },
  {
    "text": "reliability features all the things that",
    "start": "260079",
    "end": "261600"
  },
  {
    "text": "link does normally in a local",
    "start": "261600",
    "end": "263680"
  },
  {
    "text": "environment or in a local cluster should",
    "start": "263680",
    "end": "265680"
  },
  {
    "text": "also apply to multicluster",
    "start": "265680",
    "end": "269600"
  },
  {
    "text": "traffic and so the way that linkd",
    "start": "269720",
    "end": "272240"
  },
  {
    "text": "accomplishes this um is that it creates",
    "start": "272240",
    "end": "274560"
  },
  {
    "text": "a bunch of what we call mirror services",
    "start": "274560",
    "end": "277199"
  },
  {
    "text": "so these are local Kubernetes services",
    "start": "277199",
    "end": "279520"
  },
  {
    "text": "that proxy to some kind of service in",
    "start": "279520",
    "end": "281840"
  },
  {
    "text": "another cluster so you can see here",
    "start": "281840",
    "end": "283919"
  },
  {
    "text": "we've got for example the backend north",
    "start": "283919",
    "end": "285919"
  },
  {
    "text": "and the backend south these are local",
    "start": "285919",
    "end": "288160"
  },
  {
    "text": "Kubernetes services in the local cluster",
    "start": "288160",
    "end": "290960"
  },
  {
    "text": "but when you send to them linkerd will",
    "start": "290960",
    "end": "293120"
  },
  {
    "text": "know to proxy that traffic to that",
    "start": "293120",
    "end": "295919"
  },
  {
    "text": "service in that remote",
    "start": "295919",
    "end": "298120"
  },
  {
    "text": "cluster and so this is very convenient",
    "start": "298120",
    "end": "300479"
  },
  {
    "text": "because these are just normal Kubernetes",
    "start": "300479",
    "end": "301919"
  },
  {
    "text": "services they have a cluster IP they",
    "start": "301919",
    "end": "303840"
  },
  {
    "text": "have cluster DNS you can talk to them",
    "start": "303840",
    "end": "305919"
  },
  {
    "text": "just the same way you would talk to any",
    "start": "305919",
    "end": "307280"
  },
  {
    "text": "other service and you know under the",
    "start": "307280",
    "end": "309680"
  },
  {
    "text": "hood that gets routed to to another",
    "start": "309680",
    "end": "312000"
  },
  {
    "text": "cluster and linker takes care of all of",
    "start": "312000",
    "end": "313919"
  },
  {
    "text": "that",
    "start": "313919",
    "end": "316000"
  },
  {
    "text": "um and so of course that multicluster",
    "start": "316000",
    "end": "317919"
  },
  {
    "text": "connection is secured there's a proxy on",
    "start": "317919",
    "end": "319440"
  },
  {
    "text": "both ends you get MTLS you get all the",
    "start": "319440",
    "end": "321600"
  },
  {
    "text": "linkery goodness for that uh",
    "start": "321600",
    "end": "323600"
  },
  {
    "text": "crosscluster connection",
    "start": "323600",
    "end": "327320"
  },
  {
    "text": "um and so because these are individual",
    "start": "328160",
    "end": "330320"
  },
  {
    "text": "services you have explicit control over",
    "start": "330320",
    "end": "332000"
  },
  {
    "text": "it if you want your traffic to go to",
    "start": "332000",
    "end": "333520"
  },
  {
    "text": "another cluster you have to send to that",
    "start": "333520",
    "end": "335440"
  },
  {
    "text": "mirror service uh and if you just send",
    "start": "335440",
    "end": "337600"
  },
  {
    "text": "to the local service it stays local um",
    "start": "337600",
    "end": "340000"
  },
  {
    "text": "and so you kind of as the client have",
    "start": "340000",
    "end": "341600"
  },
  {
    "text": "total control over where that traffic",
    "start": "341600",
    "end": "343240"
  },
  {
    "text": "goes um and again because that is a",
    "start": "343240",
    "end": "346560"
  },
  {
    "text": "linker connection uh with a proxy on",
    "start": "346560",
    "end": "348960"
  },
  {
    "text": "both sides you get all the linkery",
    "start": "348960",
    "end": "353039"
  },
  {
    "text": "benefits um so this is this is great and",
    "start": "353800",
    "end": "356560"
  },
  {
    "text": "this works really well when you have",
    "start": "356560",
    "end": "357919"
  },
  {
    "text": "four clusters or or or fewer but as you",
    "start": "357919",
    "end": "360960"
  },
  {
    "text": "add more and more clusters it starts to",
    "start": "360960",
    "end": "362720"
  },
  {
    "text": "get a little bit out of control uh",
    "start": "362720",
    "end": "366080"
  },
  {
    "text": "here's a picture where we have 12 kind",
    "start": "366080",
    "end": "368400"
  },
  {
    "text": "of clusters all running this backend",
    "start": "368400",
    "end": "370520"
  },
  {
    "text": "service and you can see on the left I",
    "start": "370520",
    "end": "373039"
  },
  {
    "text": "didn't even have room on the slide to",
    "start": "373039",
    "end": "374400"
  },
  {
    "text": "list all the mirror services that that",
    "start": "374400",
    "end": "375919"
  },
  {
    "text": "would create um and this is only with",
    "start": "375919",
    "end": "378560"
  },
  {
    "text": "one service you know obviously you're",
    "start": "378560",
    "end": "380800"
  },
  {
    "text": "going to have more than one service for",
    "start": "380800",
    "end": "382560"
  },
  {
    "text": "every single service in every single",
    "start": "382560",
    "end": "384080"
  },
  {
    "text": "cluster you're going to need a mirror",
    "start": "384080",
    "end": "385680"
  },
  {
    "text": "service and the number of combinations",
    "start": "385680",
    "end": "387120"
  },
  {
    "text": "just blows up and gets totally out of",
    "start": "387120",
    "end": "391759"
  },
  {
    "text": "hand uh and not only is it like kind of",
    "start": "392600",
    "end": "395759"
  },
  {
    "text": "crazy how many different backends mirror",
    "start": "395759",
    "end": "398800"
  },
  {
    "text": "services you have to create uh but it",
    "start": "398800",
    "end": "401199"
  },
  {
    "text": "also becomes unclear what the client",
    "start": "401199",
    "end": "402960"
  },
  {
    "text": "behavior should be you know we have this",
    "start": "402960",
    "end": "405280"
  },
  {
    "text": "property where you have to be explicit",
    "start": "405280",
    "end": "406960"
  },
  {
    "text": "about which service in which backend",
    "start": "406960",
    "end": "409360"
  },
  {
    "text": "cluster you're connecting to but what is",
    "start": "409360",
    "end": "412160"
  },
  {
    "text": "a client supposed to do right which one",
    "start": "412160",
    "end": "413840"
  },
  {
    "text": "should a client connect to uh does it",
    "start": "413840",
    "end": "416400"
  },
  {
    "text": "just pick one does it roundroin them",
    "start": "416400",
    "end": "418639"
  },
  {
    "text": "does it try to do some kind of load",
    "start": "418639",
    "end": "420240"
  },
  {
    "text": "balancing there's no clear behavior of",
    "start": "420240",
    "end": "422639"
  },
  {
    "text": "what a client should do there and",
    "start": "422639",
    "end": "425759"
  },
  {
    "text": "furthermore the client doesn't even",
    "start": "425759",
    "end": "426960"
  },
  {
    "text": "actually care right they just want to",
    "start": "426960",
    "end": "428720"
  },
  {
    "text": "connect to the backend service they",
    "start": "428720",
    "end": "430000"
  },
  {
    "text": "don't care that it's in this cluster or",
    "start": "430000",
    "end": "431759"
  },
  {
    "text": "that cluster or that cluster they would",
    "start": "431759",
    "end": "433840"
  },
  {
    "text": "rather just say \"Hey I want to talk to",
    "start": "433840",
    "end": "435840"
  },
  {
    "text": "the back end please Linkerty as the",
    "start": "435840",
    "end": "438240"
  },
  {
    "text": "infrastructure layer just just figure it",
    "start": "438240",
    "end": "440000"
  },
  {
    "text": "out just do something intelligent just",
    "start": "440000",
    "end": "441520"
  },
  {
    "text": "make sure my traffic goes where I want",
    "start": "441520",
    "end": "442880"
  },
  {
    "text": "it to i don't care which cluster it is",
    "start": "442880",
    "end": "446280"
  },
  {
    "text": "um so in other words they want to be",
    "start": "446280",
    "end": "448479"
  },
  {
    "text": "cluster agnostic and this is a term that",
    "start": "448479",
    "end": "450319"
  },
  {
    "text": "we we used a lot kind of during the",
    "start": "450319",
    "end": "452240"
  },
  {
    "text": "development of multicluster is that the",
    "start": "452240",
    "end": "454880"
  },
  {
    "text": "client should not have to care about",
    "start": "454880",
    "end": "457520"
  },
  {
    "text": "where those services are running it",
    "start": "457520",
    "end": "459520"
  },
  {
    "text": "should just get there one way or the",
    "start": "459520",
    "end": "462960"
  },
  {
    "text": "other uh so really what we want is we",
    "start": "463240",
    "end": "466000"
  },
  {
    "text": "don't want a service a mirror service",
    "start": "466000",
    "end": "468000"
  },
  {
    "text": "that says you know backend cluster X we",
    "start": "468000",
    "end": "470560"
  },
  {
    "text": "really want a service that's like",
    "start": "470560",
    "end": "472440"
  },
  {
    "text": "backend whatever like backend take my",
    "start": "472440",
    "end": "475199"
  },
  {
    "text": "traffic and get it to this service and",
    "start": "475199",
    "end": "477039"
  },
  {
    "text": "it may be running in any of these you",
    "start": "477039",
    "end": "478800"
  },
  {
    "text": "know clusters but but just handle",
    "start": "478800",
    "end": "482560"
  },
  {
    "text": "it and so uh the HTTP route resource",
    "start": "482840",
    "end": "486639"
  },
  {
    "text": "from the gateway API can kind of do this",
    "start": "486639",
    "end": "489840"
  },
  {
    "text": "for us a little",
    "start": "489840",
    "end": "492720"
  },
  {
    "text": "bit so this is an example of uh an HTTP",
    "start": "493479",
    "end": "497280"
  },
  {
    "text": "route resource this is the YAML for it",
    "start": "497280",
    "end": "499520"
  },
  {
    "text": "um if you look there's kind of two parts",
    "start": "499520",
    "end": "502240"
  },
  {
    "text": "that I want to draw your attention to at",
    "start": "502240",
    "end": "504479"
  },
  {
    "text": "the top we have the parent ref so this",
    "start": "504479",
    "end": "506639"
  },
  {
    "text": "is the service that the HTTP route",
    "start": "506639",
    "end": "508960"
  },
  {
    "text": "resource attaches to uh and so in this",
    "start": "508960",
    "end": "511919"
  },
  {
    "text": "case it might be attached to that",
    "start": "511919",
    "end": "513518"
  },
  {
    "text": "service called backend the service with",
    "start": "513519",
    "end": "515200"
  },
  {
    "text": "the name backend and then what this",
    "start": "515200",
    "end": "517518"
  },
  {
    "text": "means is that all traffic to that",
    "start": "517519",
    "end": "519680"
  },
  {
    "text": "service is going to get captured by this",
    "start": "519680",
    "end": "522080"
  },
  {
    "text": "route and potentially matched against it",
    "start": "522080",
    "end": "524560"
  },
  {
    "text": "so an HTTP HTTP route will typically",
    "start": "524560",
    "end": "527839"
  },
  {
    "text": "have a list of uh matching predicates",
    "start": "527839",
    "end": "530880"
  },
  {
    "text": "which say if it has this path or if it",
    "start": "530880",
    "end": "532720"
  },
  {
    "text": "has this header then it's going to match",
    "start": "532720",
    "end": "534800"
  },
  {
    "text": "this route in this case we don't have",
    "start": "534800",
    "end": "536720"
  },
  {
    "text": "any of those matching predicates so this",
    "start": "536720",
    "end": "538399"
  },
  {
    "text": "is just going to match everything so",
    "start": "538399",
    "end": "540240"
  },
  {
    "text": "what this is saying is that all traffic",
    "start": "540240",
    "end": "542560"
  },
  {
    "text": "to this service named backend should get",
    "start": "542560",
    "end": "544880"
  },
  {
    "text": "captured by this",
    "start": "544880",
    "end": "546440"
  },
  {
    "text": "route and then the second part here is a",
    "start": "546440",
    "end": "549120"
  },
  {
    "text": "list of backend references and so these",
    "start": "549120",
    "end": "551440"
  },
  {
    "text": "are the backend services that uh this",
    "start": "551440",
    "end": "554399"
  },
  {
    "text": "route will route",
    "start": "554399",
    "end": "556279"
  },
  {
    "text": "to and what we've listed here is we've",
    "start": "556279",
    "end": "558880"
  },
  {
    "text": "listed listed all of those mirror",
    "start": "558880",
    "end": "560480"
  },
  {
    "text": "services that we created so way",
    "start": "560480",
    "end": "563480"
  },
  {
    "text": "back here we have all those mirror",
    "start": "563480",
    "end": "566240"
  },
  {
    "text": "services that correspond to all those",
    "start": "566240",
    "end": "568160"
  },
  {
    "text": "different remote clusters we can",
    "start": "568160",
    "end": "570000"
  },
  {
    "text": "actually specify those mirror services",
    "start": "570000",
    "end": "572399"
  },
  {
    "text": "as the backend refs in our HTTP route",
    "start": "572399",
    "end": "575839"
  },
  {
    "text": "and so the net effect of this is that",
    "start": "575839",
    "end": "578320"
  },
  {
    "text": "anytime you send a request to the",
    "start": "578320",
    "end": "580160"
  },
  {
    "text": "service named backend which is that",
    "start": "580160",
    "end": "581600"
  },
  {
    "text": "parent service it's going to route it to",
    "start": "581600",
    "end": "584240"
  },
  {
    "text": "one of these backend mirror services",
    "start": "584240",
    "end": "587120"
  },
  {
    "text": "which is in turn going to route it to uh",
    "start": "587120",
    "end": "590000"
  },
  {
    "text": "that remote cluster so right so that",
    "start": "590000",
    "end": "592720"
  },
  {
    "text": "looks something like this you send",
    "start": "592720",
    "end": "594080"
  },
  {
    "text": "traffic to the service named backend the",
    "start": "594080",
    "end": "596720"
  },
  {
    "text": "HTTP route picks it up it picks one of",
    "start": "596720",
    "end": "599360"
  },
  {
    "text": "these backend uh ref mirror services and",
    "start": "599360",
    "end": "602880"
  },
  {
    "text": "and the traffic goes to",
    "start": "602880",
    "end": "606240"
  },
  {
    "text": "there so this is this is kind of what we",
    "start": "608200",
    "end": "610720"
  },
  {
    "text": "were looking for this lets the clients",
    "start": "610720",
    "end": "612240"
  },
  {
    "text": "be cluster agnostic because they can",
    "start": "612240",
    "end": "614480"
  },
  {
    "text": "just connect to that you know original",
    "start": "614480",
    "end": "616880"
  },
  {
    "text": "backend parent service and uh that",
    "start": "616880",
    "end": "621360"
  },
  {
    "text": "traffic will just go to some cluster you",
    "start": "621360",
    "end": "623360"
  },
  {
    "text": "know they don't have to care which one",
    "start": "623360",
    "end": "625839"
  },
  {
    "text": "um so this is cool but there are some",
    "start": "625839",
    "end": "628680"
  },
  {
    "text": "drawbacks uh so in the gateway API spec",
    "start": "628680",
    "end": "633360"
  },
  {
    "text": "the HTTP route uh is required to route",
    "start": "633360",
    "end": "637600"
  },
  {
    "text": "traffic by weights so if we look back at",
    "start": "637600",
    "end": "640959"
  },
  {
    "text": "this resource we've got this list of",
    "start": "640959",
    "end": "642720"
  },
  {
    "text": "backend refs each of these backend reps",
    "start": "642720",
    "end": "644560"
  },
  {
    "text": "can specify a weight and those weights",
    "start": "644560",
    "end": "646480"
  },
  {
    "text": "are one by default so that means that",
    "start": "646480",
    "end": "649040"
  },
  {
    "text": "all of these things uh by default have",
    "start": "649040",
    "end": "651839"
  },
  {
    "text": "equal weight so we're going to send an",
    "start": "651839",
    "end": "653680"
  },
  {
    "text": "equal proportion of the traffic to each",
    "start": "653680",
    "end": "656000"
  },
  {
    "text": "of these backend",
    "start": "656000",
    "end": "658519"
  },
  {
    "text": "refs and so if there's n different",
    "start": "658519",
    "end": "660480"
  },
  {
    "text": "backends they each get exactly 1/10enth",
    "start": "660480",
    "end": "662560"
  },
  {
    "text": "of the traffic you've got 10 backends",
    "start": "662560",
    "end": "664720"
  },
  {
    "text": "they'll each get 10% of the",
    "start": "664720",
    "end": "666760"
  },
  {
    "text": "traffic and this is this is kind of a",
    "start": "666760",
    "end": "669760"
  },
  {
    "text": "strict you know a strict waiting",
    "start": "669760",
    "end": "673600"
  },
  {
    "text": "uh strict distribution by",
    "start": "673600",
    "end": "676760"
  },
  {
    "text": "weight um and so what happens when one",
    "start": "676760",
    "end": "680399"
  },
  {
    "text": "of those backend clusters goes down i",
    "start": "680399",
    "end": "682160"
  },
  {
    "text": "think this is what William Rizzo was",
    "start": "682160",
    "end": "683839"
  },
  {
    "text": "referring to in his talk is that if you",
    "start": "683839",
    "end": "687040"
  },
  {
    "text": "have one of those backend clusters go",
    "start": "687040",
    "end": "689120"
  },
  {
    "text": "down well then one nenth of your",
    "start": "689120",
    "end": "691839"
  },
  {
    "text": "requests will be attempt will attempt to",
    "start": "691839",
    "end": "693839"
  },
  {
    "text": "route to that down cluster and they will",
    "start": "693839",
    "end": "695320"
  },
  {
    "text": "fail right so you've got 10 clusters one",
    "start": "695320",
    "end": "698079"
  },
  {
    "text": "of them goes down 10% of your requests",
    "start": "698079",
    "end": "700240"
  },
  {
    "text": "are now",
    "start": "700240",
    "end": "701959"
  },
  {
    "text": "failing or what happens if one of those",
    "start": "701959",
    "end": "704480"
  },
  {
    "text": "backend clusters is really slow if it's",
    "start": "704480",
    "end": "706399"
  },
  {
    "text": "overloaded or if it's",
    "start": "706399",
    "end": "708040"
  },
  {
    "text": "underprovisioned well then one of your",
    "start": "708040",
    "end": "710240"
  },
  {
    "text": "requests are going to be",
    "start": "710240",
    "end": "713040"
  },
  {
    "text": "Well what happens when one of those",
    "start": "713680",
    "end": "715920"
  },
  {
    "text": "backend clusters has high network costs",
    "start": "715920",
    "end": "718000"
  },
  {
    "text": "maybe it's geographically far",
    "start": "718000",
    "end": "719880"
  },
  {
    "text": "away then 1/10enth of your requests are",
    "start": "719880",
    "end": "722640"
  },
  {
    "text": "going to be",
    "start": "722640",
    "end": "724200"
  },
  {
    "text": "expensive and what happens if your",
    "start": "724200",
    "end": "727120"
  },
  {
    "text": "clusters are of varying sizes or",
    "start": "727120",
    "end": "730519"
  },
  {
    "text": "capacities uh what if you have some",
    "start": "730519",
    "end": "732639"
  },
  {
    "text": "clusters that are very large some that",
    "start": "732639",
    "end": "734079"
  },
  {
    "text": "are very small it doesn't matter we're",
    "start": "734079",
    "end": "735839"
  },
  {
    "text": "still going to send an equal portion of",
    "start": "735839",
    "end": "737200"
  },
  {
    "text": "traffic to all of them and so you can",
    "start": "737200",
    "end": "739279"
  },
  {
    "text": "get really inefficient uh utilization as",
    "start": "739279",
    "end": "741760"
  },
  {
    "text": "a",
    "start": "741760",
    "end": "743920"
  },
  {
    "text": "result so the HTTP route uh load",
    "start": "744040",
    "end": "747360"
  },
  {
    "text": "balancing where it's very rigid by",
    "start": "747360",
    "end": "749120"
  },
  {
    "text": "weight uh isn't ideal for this and you",
    "start": "749120",
    "end": "752240"
  },
  {
    "text": "can go in and you can specify different",
    "start": "752240",
    "end": "753760"
  },
  {
    "text": "weights in your HTTP route resource you",
    "start": "753760",
    "end": "755920"
  },
  {
    "text": "can configure this has weight 90 and",
    "start": "755920",
    "end": "757920"
  },
  {
    "text": "this has weight 10 or whatever but",
    "start": "757920",
    "end": "760000"
  },
  {
    "text": "whatever you specify in that route is",
    "start": "760000",
    "end": "761920"
  },
  {
    "text": "going to be very fixed uh and very rigid",
    "start": "761920",
    "end": "764880"
  },
  {
    "text": "right we're always going to follow that",
    "start": "764880",
    "end": "766560"
  },
  {
    "text": "regardless of what the traffic patterns",
    "start": "766560",
    "end": "768240"
  },
  {
    "text": "are regardless of what the capabilities",
    "start": "768240",
    "end": "771360"
  },
  {
    "text": "or capacities of those downstream",
    "start": "771360",
    "end": "773120"
  },
  {
    "text": "clusters are and so what we really want",
    "start": "773120",
    "end": "775920"
  },
  {
    "text": "is something that's more dynamic and",
    "start": "775920",
    "end": "778000"
  },
  {
    "text": "more resilient we want something that",
    "start": "778000",
    "end": "780480"
  },
  {
    "text": "can uh be resilient in the face of",
    "start": "780480",
    "end": "783360"
  },
  {
    "text": "failures if one of those clusters goes",
    "start": "783360",
    "end": "785279"
  },
  {
    "text": "down we want to do something intelligent",
    "start": "785279",
    "end": "787200"
  },
  {
    "text": "about that rather than just blindly",
    "start": "787200",
    "end": "788959"
  },
  {
    "text": "continuing to send traffic to it",
    "start": "788959",
    "end": "791440"
  },
  {
    "text": "we want to be able to avoid high latency",
    "start": "791440",
    "end": "793279"
  },
  {
    "text": "if one of those clusters is slow we want",
    "start": "793279",
    "end": "795839"
  },
  {
    "text": "to prefer the faster ones and we want",
    "start": "795839",
    "end": "799200"
  },
  {
    "text": "some way of like matching load to",
    "start": "799200",
    "end": "800720"
  },
  {
    "text": "capacity if one of those clusters has",
    "start": "800720",
    "end": "802480"
  },
  {
    "text": "the capacity to serve many more requests",
    "start": "802480",
    "end": "804320"
  },
  {
    "text": "than another well we should be sending",
    "start": "804320",
    "end": "806639"
  },
  {
    "text": "more traffic",
    "start": "806639",
    "end": "807800"
  },
  {
    "text": "there and if this sounds familiar at all",
    "start": "807800",
    "end": "810720"
  },
  {
    "text": "to any link users uh this is just EWMA",
    "start": "810720",
    "end": "816720"
  },
  {
    "text": "so linkerdy uses a load balancing",
    "start": "816720",
    "end": "818639"
  },
  {
    "text": "algorithm called EWMA exponentially",
    "start": "818639",
    "end": "821440"
  },
  {
    "text": "weighted moving average or sometimes",
    "start": "821440",
    "end": "823760"
  },
  {
    "text": "called",
    "start": "823760",
    "end": "824519"
  },
  {
    "text": "YUMA and it does all of those things it",
    "start": "824519",
    "end": "828200"
  },
  {
    "text": "automatically weights endpoints by their",
    "start": "828200",
    "end": "830560"
  },
  {
    "text": "latency so as it observes traffic as it",
    "start": "830560",
    "end": "833600"
  },
  {
    "text": "happens it notices how long that traffic",
    "start": "833600",
    "end": "836160"
  },
  {
    "text": "takes to return so it builds a model of",
    "start": "836160",
    "end": "838560"
  },
  {
    "text": "the latency of all the endpoints that",
    "start": "838560",
    "end": "840079"
  },
  {
    "text": "it's load balancing over and it sends",
    "start": "840079",
    "end": "842240"
  },
  {
    "text": "more traffic to the faster endpoints",
    "start": "842240",
    "end": "844160"
  },
  {
    "text": "less traffic to the slower endpoints and",
    "start": "844160",
    "end": "846639"
  },
  {
    "text": "it does that dynamically and kind of",
    "start": "846639",
    "end": "848160"
  },
  {
    "text": "updates that model as it observes more",
    "start": "848160",
    "end": "850360"
  },
  {
    "text": "traffic um and it also uses circuit",
    "start": "850360",
    "end": "852880"
  },
  {
    "text": "breakers to automatically avoid failures",
    "start": "852880",
    "end": "855360"
  },
  {
    "text": "if any of those endpoints has a failure",
    "start": "855360",
    "end": "857920"
  },
  {
    "text": "threshold that's too high it will kick",
    "start": "857920",
    "end": "860079"
  },
  {
    "text": "it out of the load balancer it'll stop",
    "start": "860079",
    "end": "861839"
  },
  {
    "text": "sending traffic there until it detects",
    "start": "861839",
    "end": "863920"
  },
  {
    "text": "that that endpoint is healthy again then",
    "start": "863920",
    "end": "865519"
  },
  {
    "text": "it'll bring it back and so kind of by",
    "start": "865519",
    "end": "869120"
  },
  {
    "text": "just automatically by the way that that",
    "start": "869120",
    "end": "870720"
  },
  {
    "text": "works it's going to match load to",
    "start": "870720",
    "end": "872360"
  },
  {
    "text": "capacity endpoints that are able to",
    "start": "872360",
    "end": "874480"
  },
  {
    "text": "serve more traffic are going to return",
    "start": "874480",
    "end": "875920"
  },
  {
    "text": "faster they're going to get a higher",
    "start": "875920",
    "end": "877120"
  },
  {
    "text": "proportion of traffic it's going to kind",
    "start": "877120",
    "end": "878800"
  },
  {
    "text": "of intelligently balance over that and",
    "start": "878800",
    "end": "880959"
  },
  {
    "text": "so that's how linkery works today that's",
    "start": "880959",
    "end": "883199"
  },
  {
    "text": "how linkery has always worked in fact uh",
    "start": "883199",
    "end": "885519"
  },
  {
    "text": "with respect to local load balancing",
    "start": "885519",
    "end": "889720"
  },
  {
    "text": "so what we really want is not HTTP route",
    "start": "890880",
    "end": "893440"
  },
  {
    "text": "where we have this very fixed very rigid",
    "start": "893440",
    "end": "896160"
  },
  {
    "text": "load balancing uh but we als what we",
    "start": "896160",
    "end": "899040"
  },
  {
    "text": "want is something where we can use EWMA",
    "start": "899040",
    "end": "901519"
  },
  {
    "text": "and we can use a load balancer to",
    "start": "901519",
    "end": "903440"
  },
  {
    "text": "balance over all of those endpoints",
    "start": "903440",
    "end": "905760"
  },
  {
    "text": "regardless of which cluster they're",
    "start": "905760",
    "end": "909120"
  },
  {
    "text": "in so this is something we've called",
    "start": "909720",
    "end": "912240"
  },
  {
    "text": "federated services um this relies",
    "start": "912240",
    "end": "914639"
  },
  {
    "text": "heavily on the concept of namespace",
    "start": "914639",
    "end": "916519"
  },
  {
    "text": "sameness which is this idea that if you",
    "start": "916519",
    "end": "918800"
  },
  {
    "text": "have two different services in two",
    "start": "918800",
    "end": "920560"
  },
  {
    "text": "different clusters in two but the",
    "start": "920560",
    "end": "922639"
  },
  {
    "text": "namespace is the same and the service",
    "start": "922639",
    "end": "924240"
  },
  {
    "text": "name is the same then we should treat",
    "start": "924240",
    "end": "926160"
  },
  {
    "text": "those services as being kind of two",
    "start": "926160",
    "end": "928240"
  },
  {
    "text": "copies of the same service in two",
    "start": "928240",
    "end": "929760"
  },
  {
    "text": "different clusters and with that idea in",
    "start": "929760",
    "end": "932399"
  },
  {
    "text": "mind we can kind of merge those services",
    "start": "932399",
    "end": "934240"
  },
  {
    "text": "together so if we have service X in one",
    "start": "934240",
    "end": "936720"
  },
  {
    "text": "cluster service X in the other cluster",
    "start": "936720",
    "end": "938880"
  },
  {
    "text": "we can say well why don't we just take",
    "start": "938880",
    "end": "940160"
  },
  {
    "text": "the endpoints from both of those",
    "start": "940160",
    "end": "941440"
  },
  {
    "text": "services and pull them together and",
    "start": "941440",
    "end": "943199"
  },
  {
    "text": "treat them as if they're one",
    "start": "943199",
    "end": "945560"
  },
  {
    "text": "service and so we do this and this is a",
    "start": "945560",
    "end": "948320"
  },
  {
    "text": "concept called federated services and if",
    "start": "948320",
    "end": "950639"
  },
  {
    "text": "you uh put a special label on those",
    "start": "950639",
    "end": "953040"
  },
  {
    "text": "services to to say hey this I would like",
    "start": "953040",
    "end": "955199"
  },
  {
    "text": "this service to be treated as a",
    "start": "955199",
    "end": "956800"
  },
  {
    "text": "federated service then it will join all",
    "start": "956800",
    "end": "959600"
  },
  {
    "text": "the other services with the same name uh",
    "start": "959600",
    "end": "961839"
  },
  {
    "text": "and create a service called whatever",
    "start": "961839",
    "end": "963680"
  },
  {
    "text": "that service is name dash",
    "start": "963680",
    "end": "967600"
  },
  {
    "text": "federated and so you know if you've got",
    "start": "967959",
    "end": "970160"
  },
  {
    "text": "the backend service here running in",
    "start": "970160",
    "end": "971839"
  },
  {
    "text": "multiple different clusters running in",
    "start": "971839",
    "end": "973680"
  },
  {
    "text": "the north cluster south cluster east",
    "start": "973680",
    "end": "975279"
  },
  {
    "text": "cluster well now we can have all of",
    "start": "975279",
    "end": "977199"
  },
  {
    "text": "those join a federated service called",
    "start": "977199",
    "end": "980680"
  },
  {
    "text": "backend-federated and that federated",
    "start": "980680",
    "end": "982560"
  },
  {
    "text": "service will have all of the endpoints",
    "start": "982560",
    "end": "984720"
  },
  {
    "text": "of all of the backend services in all of",
    "start": "984720",
    "end": "986880"
  },
  {
    "text": "the clusters that it that it exists in",
    "start": "986880",
    "end": "989360"
  },
  {
    "text": "and those will all be put into one load",
    "start": "989360",
    "end": "991040"
  },
  {
    "text": "balancer pool so that we can load",
    "start": "991040",
    "end": "992720"
  },
  {
    "text": "balance over that whole pool and we can",
    "start": "992720",
    "end": "995440"
  },
  {
    "text": "use all of Linkrid's intelligent load",
    "start": "995440",
    "end": "997920"
  },
  {
    "text": "balancing to do",
    "start": "997920",
    "end": "1000600"
  },
  {
    "text": "that so this is kind of it's very",
    "start": "1000600",
    "end": "1002959"
  },
  {
    "text": "similar to a mirror service right we had",
    "start": "1002959",
    "end": "1004720"
  },
  {
    "text": "those mirror services you know",
    "start": "1004720",
    "end": "1007079"
  },
  {
    "text": "backend-north um but now it's",
    "start": "1007079",
    "end": "1009959"
  },
  {
    "text": "backend-federated and uh instead of",
    "start": "1009959",
    "end": "1012320"
  },
  {
    "text": "specifying a single uh cluster that you",
    "start": "1012320",
    "end": "1014800"
  },
  {
    "text": "want to talk to you're load balancing",
    "start": "1014800",
    "end": "1016079"
  },
  {
    "text": "over all of them um so this is still has",
    "start": "1016079",
    "end": "1019440"
  },
  {
    "text": "kind of all the nice properties of",
    "start": "1019440",
    "end": "1020800"
  },
  {
    "text": "mirror services we still have a proxy on",
    "start": "1020800",
    "end": "1022959"
  },
  {
    "text": "both sides of that connection we still",
    "start": "1022959",
    "end": "1024720"
  },
  {
    "text": "have MTLS we still have metrics we still",
    "start": "1024720",
    "end": "1027120"
  },
  {
    "text": "have all of those resiliency features um",
    "start": "1027120",
    "end": "1030319"
  },
  {
    "text": "it's still optin so clients still need",
    "start": "1030319",
    "end": "1033120"
  },
  {
    "text": "to connect to this federated service to",
    "start": "1033120",
    "end": "1034798"
  },
  {
    "text": "talk to it they don't have their traffic",
    "start": "1034799",
    "end": "1036319"
  },
  {
    "text": "kind of just leave the cluster without",
    "start": "1036319",
    "end": "1038558"
  },
  {
    "text": "without their uh without their",
    "start": "1038559",
    "end": "1041000"
  },
  {
    "text": "knowledge uh but because all of those",
    "start": "1041000",
    "end": "1043438"
  },
  {
    "text": "endpoints are in one big load balancer",
    "start": "1043439",
    "end": "1045360"
  },
  {
    "text": "pool we get all of the properties of",
    "start": "1045360",
    "end": "1048319"
  },
  {
    "text": "Yuma so we get the fact that you know if",
    "start": "1048319",
    "end": "1051520"
  },
  {
    "text": "we've got 100 endpoints in one cluster",
    "start": "1051520",
    "end": "1054000"
  },
  {
    "text": "and 10 endpoints in another cluster well",
    "start": "1054000",
    "end": "1056080"
  },
  {
    "text": "those are all just going to be pulled",
    "start": "1056080",
    "end": "1057360"
  },
  {
    "text": "together into 110 endpoints and so",
    "start": "1057360",
    "end": "1059600"
  },
  {
    "text": "you'll kind of automatically match the",
    "start": "1059600",
    "end": "1062400"
  },
  {
    "text": "amount of load to the amount of capacity",
    "start": "1062400",
    "end": "1065360"
  },
  {
    "text": "um and so you get uh Yuma's uh dynamic",
    "start": "1065360",
    "end": "1069520"
  },
  {
    "text": "load balancing based on latencies and uh",
    "start": "1069520",
    "end": "1072880"
  },
  {
    "text": "and it's great the other really cool",
    "start": "1072880",
    "end": "1075520"
  },
  {
    "text": "thing about this is that it's much more",
    "start": "1075520",
    "end": "1076960"
  },
  {
    "text": "dynamic too in terms of clusters coming",
    "start": "1076960",
    "end": "1079200"
  },
  {
    "text": "up and clusters going down right so when",
    "start": "1079200",
    "end": "1081679"
  },
  {
    "text": "you have a cluster come up a cluster is",
    "start": "1081679",
    "end": "1083280"
  },
  {
    "text": "created for some reason and it joins the",
    "start": "1083280",
    "end": "1085760"
  },
  {
    "text": "federated service those endpoints are",
    "start": "1085760",
    "end": "1087919"
  },
  {
    "text": "just inserted into that load balancer",
    "start": "1087919",
    "end": "1089600"
  },
  {
    "text": "pool and they'll start getting used by",
    "start": "1089600",
    "end": "1091200"
  },
  {
    "text": "anyone who's talking to that federated",
    "start": "1091200",
    "end": "1092919"
  },
  {
    "text": "service and then at some time in the",
    "start": "1092919",
    "end": "1095039"
  },
  {
    "text": "future that cluster is goes away it's",
    "start": "1095039",
    "end": "1096880"
  },
  {
    "text": "deleted it's destroyed uh those",
    "start": "1096880",
    "end": "1099039"
  },
  {
    "text": "endpoints will be just removed from the",
    "start": "1099039",
    "end": "1100559"
  },
  {
    "text": "federated service and everyone talking",
    "start": "1100559",
    "end": "1102000"
  },
  {
    "text": "to that federated service will continue",
    "start": "1102000",
    "end": "1103360"
  },
  {
    "text": "to be able to use the endpoints that",
    "start": "1103360",
    "end": "1105200"
  },
  {
    "text": "still remain there so clusters can kind",
    "start": "1105200",
    "end": "1107200"
  },
  {
    "text": "of come up and come down and join and",
    "start": "1107200",
    "end": "1108640"
  },
  {
    "text": "leave federated services dynamically",
    "start": "1108640",
    "end": "1110480"
  },
  {
    "text": "there's no interruption to the client",
    "start": "1110480",
    "end": "1112000"
  },
  {
    "text": "they'll just use whatever's in",
    "start": "1112000",
    "end": "1115200"
  },
  {
    "text": "there uh so federated services are",
    "start": "1116440",
    "end": "1119520"
  },
  {
    "text": "relatively new they were added in uh",
    "start": "1119520",
    "end": "1123200"
  },
  {
    "text": "November of last",
    "start": "1123200",
    "end": "1125160"
  },
  {
    "text": "year uh and so there's still a lot of",
    "start": "1125160",
    "end": "1128880"
  },
  {
    "text": "work ongoing to kind of make the use of",
    "start": "1128880",
    "end": "1131440"
  },
  {
    "text": "federated services more ergonomic and uh",
    "start": "1131440",
    "end": "1134640"
  },
  {
    "text": "kind of easier operationally we've got a",
    "start": "1134640",
    "end": "1137039"
  },
  {
    "text": "lot of things that are in progress right",
    "start": "1137039",
    "end": "1138799"
  },
  {
    "text": "now that will be released in the next uh",
    "start": "1138799",
    "end": "1140960"
  },
  {
    "text": "version of linkerd which is coming uh",
    "start": "1140960",
    "end": "1143360"
  },
  {
    "text": "very soon that give you a little bit",
    "start": "1143360",
    "end": "1145280"
  },
  {
    "text": "more control over things like naming or",
    "start": "1145280",
    "end": "1147520"
  },
  {
    "text": "which you know labels and annotations",
    "start": "1147520",
    "end": "1149440"
  },
  {
    "text": "and ports get copied from where um",
    "start": "1149440",
    "end": "1153520"
  },
  {
    "text": "uh so there's definitely more",
    "start": "1153520",
    "end": "1155360"
  },
  {
    "text": "improvements on the way with federated",
    "start": "1155360",
    "end": "1157280"
  },
  {
    "text": "services uh and there will continue to",
    "start": "1157280",
    "end": "1159600"
  },
  {
    "text": "be as time goes on we continue to find",
    "start": "1159600",
    "end": "1161520"
  },
  {
    "text": "out how people are using these and what",
    "start": "1161520",
    "end": "1163600"
  },
  {
    "text": "we can do to make them uh easier and",
    "start": "1163600",
    "end": "1166000"
  },
  {
    "text": "more powerful to use um if you are",
    "start": "1166000",
    "end": "1169600"
  },
  {
    "text": "interested in learning more uh there's",
    "start": "1169600",
    "end": "1172080"
  },
  {
    "text": "some great docs online uh great blog",
    "start": "1172080",
    "end": "1174240"
  },
  {
    "text": "posts there are tutorials that you can",
    "start": "1174240",
    "end": "1176160"
  },
  {
    "text": "walk through that let you kind of spin",
    "start": "1176160",
    "end": "1177679"
  },
  {
    "text": "up multiple different clusters and join",
    "start": "1177679",
    "end": "1179600"
  },
  {
    "text": "them together in federated services um",
    "start": "1179600",
    "end": "1183600"
  },
  {
    "text": "you can also come on to the link slack",
    "start": "1183600",
    "end": "1185520"
  },
  {
    "text": "and we're happy to answer questions",
    "start": "1185520",
    "end": "1186880"
  },
  {
    "text": "there uh or you can find me anytime this",
    "start": "1186880",
    "end": "1190400"
  },
  {
    "text": "week i'll be hanging out at the buoyant",
    "start": "1190400",
    "end": "1192960"
  },
  {
    "text": "booth or at the linky booth uh on the",
    "start": "1192960",
    "end": "1196000"
  },
  {
    "text": "show floor so please come find me and",
    "start": "1196000",
    "end": "1197919"
  },
  {
    "text": "talk to me about federated services or",
    "start": "1197919",
    "end": "1199679"
  },
  {
    "text": "anything",
    "start": "1199679",
    "end": "1200440"
  },
  {
    "text": "linkerty and uh oh yeah and we also have",
    "start": "1200440",
    "end": "1204160"
  },
  {
    "text": "the uh service mesh academy so this is",
    "start": "1204160",
    "end": "1206480"
  },
  {
    "text": "some live uh hands-on training that we",
    "start": "1206480",
    "end": "1209360"
  },
  {
    "text": "offer uh this is monthly you can go to",
    "start": "1209360",
    "end": "1212000"
  },
  {
    "text": "buoyant.iosma io/sma or scan that QR",
    "start": "1212000",
    "end": "1214320"
  },
  {
    "text": "code and uh and get some some hands-on",
    "start": "1214320",
    "end": "1217919"
  },
  {
    "text": "training about federated services and",
    "start": "1217919",
    "end": "1219600"
  },
  {
    "text": "and many other",
    "start": "1219600",
    "end": "1220919"
  },
  {
    "text": "topics um and yeah thank",
    "start": "1220919",
    "end": "1225279"
  },
  {
    "text": "you time for questions",
    "start": "1230200",
    "end": "1234519"
  },
  {
    "text": "so um basically when you explain HTTP",
    "start": "1240159",
    "end": "1244080"
  },
  {
    "text": "route which can basically you know load",
    "start": "1244080",
    "end": "1246799"
  },
  {
    "text": "balance the services and it uses the",
    "start": "1246799",
    "end": "1249679"
  },
  {
    "text": "weight strategy to do that mhm",
    "start": "1249679",
    "end": "1252480"
  },
  {
    "text": "uh kind of similar strategy but I think",
    "start": "1252480",
    "end": "1254640"
  },
  {
    "text": "it's it's called uh the different term",
    "start": "1254640",
    "end": "1257360"
  },
  {
    "text": "you use right it's some moving average",
    "start": "1257360",
    "end": "1259840"
  },
  {
    "text": "uh that federated services use but there",
    "start": "1259840",
    "end": "1263200"
  },
  {
    "text": "is is there still possibilities that if",
    "start": "1263200",
    "end": "1265679"
  },
  {
    "text": "if the one service is down in the",
    "start": "1265679",
    "end": "1269080"
  },
  {
    "text": "cluster and there is a possibility that",
    "start": "1269080",
    "end": "1272000"
  },
  {
    "text": "still the request could be routed to",
    "start": "1272000",
    "end": "1273919"
  },
  {
    "text": "that and I mean like there is still",
    "start": "1273919",
    "end": "1276720"
  },
  {
    "text": "chance that we will have some failure",
    "start": "1276720",
    "end": "1278640"
  },
  {
    "text": "right yeah I mean I think it depends on",
    "start": "1278640",
    "end": "1281200"
  },
  {
    "text": "on the nuance of what you mean by down",
    "start": "1281200",
    "end": "1283200"
  },
  {
    "text": "right so if that cluster kind of goes",
    "start": "1283200",
    "end": "1285520"
  },
  {
    "text": "away completely those endpoints will be",
    "start": "1285520",
    "end": "1287440"
  },
  {
    "text": "removed from the load balancer and so",
    "start": "1287440",
    "end": "1289200"
  },
  {
    "text": "there's no chance to route to them if",
    "start": "1289200",
    "end": "1291120"
  },
  {
    "text": "those endpoints are up and you know",
    "start": "1291120",
    "end": "1292799"
  },
  {
    "text": "Kubernetes sees them as healthy but",
    "start": "1292799",
    "end": "1294240"
  },
  {
    "text": "they're returning errors you could still",
    "start": "1294240",
    "end": "1296159"
  },
  {
    "text": "route to them and still get an error but",
    "start": "1296159",
    "end": "1298320"
  },
  {
    "text": "if Kubernetes sees them as unhealthy uh",
    "start": "1298320",
    "end": "1300640"
  },
  {
    "text": "it'll remove them from the load balancer",
    "start": "1300640",
    "end": "1302240"
  },
  {
    "text": "pool",
    "start": "1302240",
    "end": "1303760"
  },
  {
    "text": "okay okay thank you",
    "start": "1303760",
    "end": "1308360"
  },
  {
    "text": "um so you mentioned earlier that uh you",
    "start": "1309919",
    "end": "1312720"
  },
  {
    "text": "would uh do weighted load balancing",
    "start": "1312720",
    "end": "1315440"
  },
  {
    "text": "across all the endpoints um and you also",
    "start": "1315440",
    "end": "1318159"
  },
  {
    "text": "mentioned that this was what in in in",
    "start": "1318159",
    "end": "1320559"
  },
  {
    "text": "linkerd enterprise 217 I think included",
    "start": "1320559",
    "end": "1323600"
  },
  {
    "text": "um so my question would be with the cost",
    "start": "1323600",
    "end": "1326480"
  },
  {
    "text": "aware load balancing feature of linkerd",
    "start": "1326480",
    "end": "1328559"
  },
  {
    "text": "enterprise is that also something you",
    "start": "1328559",
    "end": "1330400"
  },
  {
    "text": "can take into account to say okay I",
    "start": "1330400",
    "end": "1332400"
  },
  {
    "text": "would prefer that traffic to stay local",
    "start": "1332400",
    "end": "1334240"
  },
  {
    "text": "and then go to that cluster with low",
    "start": "1334240",
    "end": "1336320"
  },
  {
    "text": "network cost and so on yeah easy answer",
    "start": "1336320",
    "end": "1339120"
  },
  {
    "text": "is yes that's all kind of designed in",
    "start": "1339120",
    "end": "1340960"
  },
  {
    "text": "mind with with that okay thank you",
    "start": "1340960",
    "end": "1345120"
  },
  {
    "text": "yeah cool thank you",
    "start": "1348039",
    "end": "1352399"
  }
]