[
  {
    "text": "hello everyone my name is anurak",
    "start": "0",
    "end": "1520"
  },
  {
    "text": "sakshena i'm currently working as a",
    "start": "1520",
    "end": "3199"
  },
  {
    "text": "principal engineer in coreos networking",
    "start": "3199",
    "end": "5200"
  },
  {
    "text": "team at microsoft my co-presenter is",
    "start": "5200",
    "end": "8320"
  },
  {
    "text": "puna gadda hosur who is principal group",
    "start": "8320",
    "end": "10400"
  },
  {
    "text": "engineering manager in coreos networking",
    "start": "10400",
    "end": "12320"
  },
  {
    "text": "organization at microsoft",
    "start": "12320",
    "end": "14320"
  },
  {
    "text": "this talk is to demonstrate how linux",
    "start": "14320",
    "end": "16000"
  },
  {
    "text": "based avpf programs can be run using",
    "start": "16000",
    "end": "18000"
  },
  {
    "text": "evpl for windows",
    "start": "18000",
    "end": "20960"
  },
  {
    "text": "the agenda for this talk is we will go",
    "start": "20960",
    "end": "22800"
  },
  {
    "text": "over what are the goals for this",
    "start": "22800",
    "end": "23920"
  },
  {
    "text": "presentation we will then look at an",
    "start": "23920",
    "end": "25760"
  },
  {
    "text": "overview of cml for lb on linux we will",
    "start": "25760",
    "end": "28400"
  },
  {
    "text": "then have an overview of psyllium l4 lb",
    "start": "28400",
    "end": "30320"
  },
  {
    "text": "using ebp for windows we will then go",
    "start": "30320",
    "end": "32558"
  },
  {
    "text": "through the demo topologies and then see",
    "start": "32559",
    "end": "34239"
  },
  {
    "text": "a live demo of pseleum load balancer",
    "start": "34239",
    "end": "36079"
  },
  {
    "text": "running on windows",
    "start": "36079",
    "end": "38320"
  },
  {
    "text": "as many of you may know at microsoft we",
    "start": "38320",
    "end": "40160"
  },
  {
    "text": "are currently working on evp for windows",
    "start": "40160",
    "end": "42079"
  },
  {
    "text": "project which enables running evpf",
    "start": "42079",
    "end": "43920"
  },
  {
    "text": "programs on top of windows",
    "start": "43920",
    "end": "45920"
  },
  {
    "text": "a fundamental goal of this effort is to",
    "start": "45920",
    "end": "48079"
  },
  {
    "text": "meet the developers where they are and",
    "start": "48079",
    "end": "49520"
  },
  {
    "text": "because of this it is important to",
    "start": "49520",
    "end": "51120"
  },
  {
    "text": "ensure and demonstrate portability of",
    "start": "51120",
    "end": "53520"
  },
  {
    "text": "ebpf-based solutions which are in",
    "start": "53520",
    "end": "55039"
  },
  {
    "text": "production today from linux to windows",
    "start": "55039",
    "end": "57360"
  },
  {
    "text": "and to be able to achieve this with",
    "start": "57360",
    "end": "58879"
  },
  {
    "text": "minimum possible changes today to",
    "start": "58879",
    "end": "60960"
  },
  {
    "text": "demonstrate this we are using standalone",
    "start": "60960",
    "end": "63600"
  },
  {
    "text": "psyllium l4 load balancer solution",
    "start": "63600",
    "end": "65600"
  },
  {
    "text": "psyllium l4 lb solution uses an xtp hook",
    "start": "65600",
    "end": "68320"
  },
  {
    "text": "to implement load balancing and it",
    "start": "68320",
    "end": "70080"
  },
  {
    "text": "supports both source nat and dsr modes",
    "start": "70080",
    "end": "73840"
  },
  {
    "text": "to give a quick overview of linux based",
    "start": "73840",
    "end": "75759"
  },
  {
    "text": "serial alpha led solution it uses an xtp",
    "start": "75759",
    "end": "78159"
  },
  {
    "text": "hook with xtpx action to implement the",
    "start": "78159",
    "end": "80400"
  },
  {
    "text": "lb functionality xtptx is one of the",
    "start": "80400",
    "end": "82799"
  },
  {
    "text": "actions supported by xtp hook which",
    "start": "82799",
    "end": "84960"
  },
  {
    "text": "basically happens the packet out of the",
    "start": "84960",
    "end": "86720"
  },
  {
    "text": "neck on which it arrived the psyllium",
    "start": "86720",
    "end": "89200"
  },
  {
    "text": "xdb program also uses some helper",
    "start": "89200",
    "end": "91439"
  },
  {
    "text": "functions such as xtp adjust head adjust",
    "start": "91439",
    "end": "93600"
  },
  {
    "text": "tail it also uses map",
    "start": "93600",
    "end": "95840"
  },
  {
    "text": "lookup and update helper functions and",
    "start": "95840",
    "end": "97520"
  },
  {
    "text": "it uses tail calls apart from the evpf",
    "start": "97520",
    "end": "100320"
  },
  {
    "text": "program which implements the core lb",
    "start": "100320",
    "end": "102000"
  },
  {
    "text": "functionality psyllium solution also",
    "start": "102000",
    "end": "104000"
  },
  {
    "text": "consists of a user mode cli and an agent",
    "start": "104000",
    "end": "106399"
  },
  {
    "text": "which compiles loads and attaches the",
    "start": "106399",
    "end": "108479"
  },
  {
    "text": "ebpf program in linux this agent and cli",
    "start": "108479",
    "end": "111680"
  },
  {
    "text": "is also responsible for taking service",
    "start": "111680",
    "end": "113600"
  },
  {
    "text": "details as input and configuring the",
    "start": "113600",
    "end": "115200"
  },
  {
    "text": "required front-end backend details in",
    "start": "115200",
    "end": "117680"
  },
  {
    "text": "the evpf maps",
    "start": "117680",
    "end": "119360"
  },
  {
    "text": "for load balancing the traffic between",
    "start": "119360",
    "end": "120960"
  },
  {
    "text": "back end celium uses maglev hashing",
    "start": "120960",
    "end": "122880"
  },
  {
    "text": "algorithm maglev is a consistent hashing",
    "start": "122880",
    "end": "124719"
  },
  {
    "text": "algorithm which ensures that if one of",
    "start": "124719",
    "end": "126640"
  },
  {
    "text": "the lv nodes goes down the other lb",
    "start": "126640",
    "end": "128319"
  },
  {
    "text": "nodes will also choose the same backend",
    "start": "128319",
    "end": "130160"
  },
  {
    "text": "for that five double traffic",
    "start": "130160",
    "end": "132800"
  },
  {
    "text": "for demonstrating pselium l4 lb on",
    "start": "132800",
    "end": "134800"
  },
  {
    "text": "windows we have a psyllium agent and cli",
    "start": "134800",
    "end": "137280"
  },
  {
    "text": "inspired user mode demo agent written",
    "start": "137280",
    "end": "139360"
  },
  {
    "text": "this demo agent performs the same tasks",
    "start": "139360",
    "end": "141440"
  },
  {
    "text": "of compiling and installing the celium",
    "start": "141440",
    "end": "143520"
  },
  {
    "text": "http program taking an lb service",
    "start": "143520",
    "end": "146080"
  },
  {
    "text": "instance as input and configuring the",
    "start": "146080",
    "end": "147760"
  },
  {
    "text": "required evpf maps for load balancing to",
    "start": "147760",
    "end": "150160"
  },
  {
    "text": "work",
    "start": "150160",
    "end": "150959"
  },
  {
    "text": "the psyllium ebpf program used in",
    "start": "150959",
    "end": "152879"
  },
  {
    "text": "windows is almost identical to the",
    "start": "152879",
    "end": "154800"
  },
  {
    "text": "program used on linux 95 to 96 of the",
    "start": "154800",
    "end": "158000"
  },
  {
    "text": "code is common to both linux and windows",
    "start": "158000",
    "end": "160239"
  },
  {
    "text": "with a few changes like changing map",
    "start": "160239",
    "end": "162480"
  },
  {
    "text": "definitions on to match the ones on",
    "start": "162480",
    "end": "164319"
  },
  {
    "text": "windows removing call to fib lookup help",
    "start": "164319",
    "end": "166640"
  },
  {
    "text": "function and commenting out some",
    "start": "166640",
    "end": "168400"
  },
  {
    "text": "statistics and diagnostics functionality",
    "start": "168400",
    "end": "170720"
  },
  {
    "text": "also for the demo we have disabled some",
    "start": "170720",
    "end": "173040"
  },
  {
    "text": "optional functionalities like source",
    "start": "173040",
    "end": "174640"
  },
  {
    "text": "range check icmp errors",
    "start": "174640",
    "end": "178239"
  },
  {
    "text": "this slide shows the architecture for",
    "start": "179360",
    "end": "180879"
  },
  {
    "text": "psyllium l4 lv using evp for windows to",
    "start": "180879",
    "end": "183840"
  },
  {
    "text": "start with we have the ebp of a windows",
    "start": "183840",
    "end": "185840"
  },
  {
    "text": "framework already installed on the lb",
    "start": "185840",
    "end": "187440"
  },
  {
    "text": "node and evpf service execution context",
    "start": "187440",
    "end": "189840"
  },
  {
    "text": "and the netevp extension which",
    "start": "189840",
    "end": "191840"
  },
  {
    "text": "implements the xtp hook are already",
    "start": "191840",
    "end": "194239"
  },
  {
    "text": "running on the system now when a",
    "start": "194239",
    "end": "196239"
  },
  {
    "text": "psyllium agent is initialized",
    "start": "196239",
    "end": "199280"
  },
  {
    "text": "a mode is provided to it as input snap",
    "start": "199280",
    "end": "201440"
  },
  {
    "text": "or dsr this input is needed as the",
    "start": "201440",
    "end": "204159"
  },
  {
    "text": "xtp program needs to be compiled for a",
    "start": "204159",
    "end": "205920"
  },
  {
    "text": "specific mode the agent also gets the",
    "start": "205920",
    "end": "208799"
  },
  {
    "text": "interface name as an input once the",
    "start": "208799",
    "end": "210799"
  },
  {
    "text": "agent gets these as input it fetches the",
    "start": "210799",
    "end": "212799"
  },
  {
    "text": "interface properties then compiles the",
    "start": "212799",
    "end": "214720"
  },
  {
    "text": "evpf program using the interface",
    "start": "214720",
    "end": "216560"
  },
  {
    "text": "properties and the mode it was provided",
    "start": "216560",
    "end": "219200"
  },
  {
    "text": "and then verifies loads and attaches the",
    "start": "219200",
    "end": "221120"
  },
  {
    "text": "program to the xtp hook as part of",
    "start": "221120",
    "end": "223200"
  },
  {
    "text": "loading the program the required maps",
    "start": "223200",
    "end": "225200"
  },
  {
    "text": "are also created in the kernel now that",
    "start": "225200",
    "end": "227519"
  },
  {
    "text": "the xtp program is loaded and attached",
    "start": "227519",
    "end": "229680"
  },
  {
    "text": "the agent is now ready to take input for",
    "start": "229680",
    "end": "231840"
  },
  {
    "text": "any lb service instance",
    "start": "231840",
    "end": "234080"
  },
  {
    "text": "now when a service is configured the",
    "start": "234080",
    "end": "235760"
  },
  {
    "text": "agent gets a front-end and back-end",
    "start": "235760",
    "end": "237680"
  },
  {
    "text": "configuration front-end configuration",
    "start": "237680",
    "end": "239280"
  },
  {
    "text": "consists of the front-end ipn port and",
    "start": "239280",
    "end": "241200"
  },
  {
    "text": "back-end configuration consists of a",
    "start": "241200",
    "end": "242799"
  },
  {
    "text": "list of backend ips and ports",
    "start": "242799",
    "end": "244959"
  },
  {
    "text": "once the agent gets this information it",
    "start": "244959",
    "end": "246640"
  },
  {
    "text": "computes a maglev hash for the back-ends",
    "start": "246640",
    "end": "248640"
  },
  {
    "text": "in the service and updates it in the",
    "start": "248640",
    "end": "250080"
  },
  {
    "text": "maglev map it also updates the back-end",
    "start": "250080",
    "end": "252480"
  },
  {
    "text": "maps",
    "start": "252480",
    "end": "253599"
  },
  {
    "text": "service maps and the reverse net maps",
    "start": "253599",
    "end": "255840"
  },
  {
    "text": "now the control path is set up for the",
    "start": "255840",
    "end": "257359"
  },
  {
    "text": "load balancing",
    "start": "257359",
    "end": "259040"
  },
  {
    "text": "to work for the configured service",
    "start": "259040",
    "end": "261040"
  },
  {
    "text": "moving to the data path",
    "start": "261040",
    "end": "262560"
  },
  {
    "text": "so when an incoming packet arrives on",
    "start": "262560",
    "end": "264720"
  },
  {
    "text": "the neck the xtp extension invokes the",
    "start": "264720",
    "end": "267120"
  },
  {
    "text": "psyllium xdb program the http program",
    "start": "267120",
    "end": "269600"
  },
  {
    "text": "then inspects the incoming packet",
    "start": "269600",
    "end": "271040"
  },
  {
    "text": "consults the various maps which are",
    "start": "271040",
    "end": "273759"
  },
  {
    "text": "programmed by the user mode agent to",
    "start": "273759",
    "end": "275440"
  },
  {
    "text": "choose a backend node and then depending",
    "start": "275440",
    "end": "277199"
  },
  {
    "text": "on whether snap or dsr is configured",
    "start": "277199",
    "end": "279600"
  },
  {
    "text": "either so snaps the packet or does an ip",
    "start": "279600",
    "end": "282000"
  },
  {
    "text": "and ipn cap the packet is then returned",
    "start": "282000",
    "end": "283919"
  },
  {
    "text": "to the extension with xdp tx action",
    "start": "283919",
    "end": "286000"
  },
  {
    "text": "which means the packet is need to be",
    "start": "286000",
    "end": "288560"
  },
  {
    "text": "hairpin on the arriving nick",
    "start": "288560",
    "end": "292479"
  },
  {
    "text": "this slide shows the topology for the",
    "start": "293120",
    "end": "294720"
  },
  {
    "text": "demo setup for demo we are using five",
    "start": "294720",
    "end": "296639"
  },
  {
    "text": "vms one of the vms is the load balancer",
    "start": "296639",
    "end": "299440"
  },
  {
    "text": "vm it is a windows server and has celium",
    "start": "299440",
    "end": "301600"
  },
  {
    "text": "xtp program running on it the other four",
    "start": "301600",
    "end": "303600"
  },
  {
    "text": "machines are backend nodes two of the",
    "start": "303600",
    "end": "305600"
  },
  {
    "text": "backend nodes are windows vms and the",
    "start": "305600",
    "end": "307759"
  },
  {
    "text": "other two are open to linux vms all the",
    "start": "307759",
    "end": "309840"
  },
  {
    "text": "five vms are connected by an internal",
    "start": "309840",
    "end": "311919"
  },
  {
    "text": "switch",
    "start": "311919",
    "end": "312800"
  },
  {
    "text": "and are on the same network the ips that",
    "start": "312800",
    "end": "314880"
  },
  {
    "text": "we are using here are 211 for the lb",
    "start": "314880",
    "end": "317840"
  },
  {
    "text": "node and 2110 to 21.40 for the back end",
    "start": "317840",
    "end": "321600"
  },
  {
    "text": "nodes the whip used in this demo is 411",
    "start": "321600",
    "end": "324720"
  },
  {
    "text": "which is not in the same network as the",
    "start": "324720",
    "end": "326560"
  },
  {
    "text": "other error type is since this is an",
    "start": "326560",
    "end": "328800"
  },
  {
    "text": "internal switch the host will also be",
    "start": "328800",
    "end": "330560"
  },
  {
    "text": "connected to the same switch and will",
    "start": "330560",
    "end": "332320"
  },
  {
    "text": "act as a client for sending requests to",
    "start": "332320",
    "end": "334000"
  },
  {
    "text": "the lb node all the backend servers the",
    "start": "334000",
    "end": "336880"
  },
  {
    "text": "four packet servers are",
    "start": "336880",
    "end": "338720"
  },
  {
    "text": "running",
    "start": "338720",
    "end": "339600"
  },
  {
    "text": "a web server listening on port 80",
    "start": "339600",
    "end": "342400"
  },
  {
    "text": "so for snap scenario this is how the",
    "start": "342400",
    "end": "344160"
  },
  {
    "text": "packet flow looks like",
    "start": "344160",
    "end": "345680"
  },
  {
    "text": "uh the browser sends a request using its",
    "start": "345680",
    "end": "347759"
  },
  {
    "text": "source ip21100 some source port x",
    "start": "347759",
    "end": "351199"
  },
  {
    "text": "and sends the request to 41 1 source",
    "start": "351199",
    "end": "353280"
  },
  {
    "text": "port destination port 80 once the lb",
    "start": "353280",
    "end": "355759"
  },
  {
    "text": "node gets this packet it chooses one of",
    "start": "355759",
    "end": "357680"
  },
  {
    "text": "the backends to send the request to",
    "start": "357680",
    "end": "360240"
  },
  {
    "text": "and then",
    "start": "360240",
    "end": "361199"
  },
  {
    "text": "in case of a snap scenario it so snatch",
    "start": "361199",
    "end": "363199"
  },
  {
    "text": "the packet and forwards the request to",
    "start": "363199",
    "end": "365039"
  },
  {
    "text": "the chosen backend so the packet on the",
    "start": "365039",
    "end": "366880"
  },
  {
    "text": "wire looks like with source ip",
    "start": "366880",
    "end": "369600"
  },
  {
    "text": "211 which is the ip of the lb node once",
    "start": "369600",
    "end": "373280"
  },
  {
    "text": "the back end has processed the packet it",
    "start": "373280",
    "end": "375039"
  },
  {
    "text": "sends the response back to the lb node",
    "start": "375039",
    "end": "377600"
  },
  {
    "text": "and once the lb node receives the packet",
    "start": "377600",
    "end": "379280"
  },
  {
    "text": "it does reverse that of the packet and",
    "start": "379280",
    "end": "381440"
  },
  {
    "text": "sends the response back to the browser",
    "start": "381440",
    "end": "385360"
  },
  {
    "text": "this slide shows the topology for the",
    "start": "385680",
    "end": "387520"
  },
  {
    "text": "dsr which is almost similar to the one",
    "start": "387520",
    "end": "390240"
  },
  {
    "text": "in snap but with a few differences since",
    "start": "390240",
    "end": "392800"
  },
  {
    "text": "in dsr the packet is ipip and capped on",
    "start": "392800",
    "end": "395440"
  },
  {
    "text": "the lb node the backend node will",
    "start": "395440",
    "end": "397120"
  },
  {
    "text": "receive an ip and ip packet and it will",
    "start": "397120",
    "end": "398800"
  },
  {
    "text": "need to be decap so we need some evpf",
    "start": "398800",
    "end": "401039"
  },
  {
    "text": "program on backend to become those",
    "start": "401039",
    "end": "402960"
  },
  {
    "text": "packets so for this demo in windows",
    "start": "402960",
    "end": "405759"
  },
  {
    "text": "backend servers we are using an xtp ebpf",
    "start": "405759",
    "end": "408720"
  },
  {
    "text": "program which will decap those ipine ip",
    "start": "408720",
    "end": "410479"
  },
  {
    "text": "packets in case of the linux backend",
    "start": "410479",
    "end": "412319"
  },
  {
    "text": "servers we are using a tc-based evpf",
    "start": "412319",
    "end": "414639"
  },
  {
    "text": "program to tcap those packets",
    "start": "414639",
    "end": "416720"
  },
  {
    "text": "this is how the packet flow looks in",
    "start": "416720",
    "end": "418160"
  },
  {
    "text": "case of a dsr scenario as earlier the",
    "start": "418160",
    "end": "420720"
  },
  {
    "text": "browser sends a request packet to the lb",
    "start": "420720",
    "end": "422880"
  },
  {
    "text": "node using its source ip21100 and some",
    "start": "422880",
    "end": "425680"
  },
  {
    "text": "source port x destined to 4111 source",
    "start": "425680",
    "end": "428400"
  },
  {
    "text": "destination port 80. once the lb node",
    "start": "428400",
    "end": "430800"
  },
  {
    "text": "receives the packet it chooses one of",
    "start": "430800",
    "end": "432639"
  },
  {
    "text": "the backend nodes and then does an ipn",
    "start": "432639",
    "end": "434960"
  },
  {
    "text": "ip end cap and forwards the request to",
    "start": "434960",
    "end": "437520"
  },
  {
    "text": "the chosen backend so the packet on the",
    "start": "437520",
    "end": "439520"
  },
  {
    "text": "wire looks like having an outer ip",
    "start": "439520",
    "end": "441759"
  },
  {
    "text": "header with source ip2111 which is the",
    "start": "441759",
    "end": "444240"
  },
  {
    "text": "ip of the lv node and destination 21 140",
    "start": "444240",
    "end": "447039"
  },
  {
    "text": "which is the chosen backend the inner ip",
    "start": "447039",
    "end": "449360"
  },
  {
    "text": "header is the",
    "start": "449360",
    "end": "450720"
  },
  {
    "text": "original ip header which was sent from",
    "start": "450720",
    "end": "452960"
  },
  {
    "text": "the browser",
    "start": "452960",
    "end": "454479"
  },
  {
    "text": "once the backend node receives this",
    "start": "454479",
    "end": "456160"
  },
  {
    "text": "packet it will do an ipine ipd cap then",
    "start": "456160",
    "end": "459039"
  },
  {
    "text": "process the request once it has",
    "start": "459039",
    "end": "460479"
  },
  {
    "text": "processed the request it will directly",
    "start": "460479",
    "end": "462080"
  },
  {
    "text": "send the response back to the browser",
    "start": "462080",
    "end": "464080"
  },
  {
    "text": "without the packet going through the lv",
    "start": "464080",
    "end": "466080"
  },
  {
    "text": "node so this is how dsr",
    "start": "466080",
    "end": "468560"
  },
  {
    "text": "works in action",
    "start": "468560",
    "end": "470879"
  },
  {
    "text": "moving to the actual demo",
    "start": "470879",
    "end": "474000"
  },
  {
    "text": "what we see here on the right side is",
    "start": "476400",
    "end": "477919"
  },
  {
    "text": "the lb node where we will have the",
    "start": "477919",
    "end": "479599"
  },
  {
    "text": "cilium l4 load balancer solution running",
    "start": "479599",
    "end": "482160"
  },
  {
    "text": "uh currently it has the evpl for windows",
    "start": "482160",
    "end": "484240"
  },
  {
    "text": "framework already installed and running",
    "start": "484240",
    "end": "486080"
  },
  {
    "text": "what we see on the left side is a web",
    "start": "486080",
    "end": "487599"
  },
  {
    "text": "browser which is running on the host and",
    "start": "487599",
    "end": "489440"
  },
  {
    "text": "this will act as a client for sending a",
    "start": "489440",
    "end": "491280"
  },
  {
    "text": "request to the lb node so as a first",
    "start": "491280",
    "end": "494000"
  },
  {
    "text": "step i am going to",
    "start": "494000",
    "end": "495919"
  },
  {
    "text": "run the psyllium based agent and this",
    "start": "495919",
    "end": "497520"
  },
  {
    "text": "celium based agent is what i had",
    "start": "497520",
    "end": "498879"
  },
  {
    "text": "mentioned earlier this is inspired from",
    "start": "498879",
    "end": "500879"
  },
  {
    "text": "the psyllium cli and user mode daemon",
    "start": "500879",
    "end": "504080"
  },
  {
    "text": "we provide a mode which is snap right",
    "start": "504080",
    "end": "506639"
  },
  {
    "text": "now and the name of the interface to it",
    "start": "506639",
    "end": "508960"
  },
  {
    "text": "once this agent receives this",
    "start": "508960",
    "end": "510479"
  },
  {
    "text": "information it queries the interface",
    "start": "510479",
    "end": "512000"
  },
  {
    "text": "properties compiles the ebpf program",
    "start": "512000",
    "end": "514320"
  },
  {
    "text": "then runs the program to the verifier",
    "start": "514320",
    "end": "516240"
  },
  {
    "text": "once the program has been verified it",
    "start": "516240",
    "end": "518479"
  },
  {
    "text": "will load and attach the program to the",
    "start": "518479",
    "end": "520479"
  },
  {
    "text": "xdp hook once that is done it presents",
    "start": "520479",
    "end": "523518"
  },
  {
    "text": "us with a cli which we can now use to",
    "start": "523519",
    "end": "525680"
  },
  {
    "text": "configure an lb in service instance so",
    "start": "525680",
    "end": "528880"
  },
  {
    "text": "the next command that i'm going to run",
    "start": "528880",
    "end": "530160"
  },
  {
    "text": "is this service update command if we see",
    "start": "530160",
    "end": "532399"
  },
  {
    "text": "the details here",
    "start": "532399",
    "end": "533760"
  },
  {
    "text": "i am confirming",
    "start": "533760",
    "end": "535279"
  },
  {
    "text": "the front end information as 411 and",
    "start": "535279",
    "end": "538160"
  },
  {
    "text": "port 80 and in the back ends there is a",
    "start": "538160",
    "end": "540320"
  },
  {
    "text": "list of four back end nodes 40 21 110 to",
    "start": "540320",
    "end": "543600"
  },
  {
    "text": "21 and 40.",
    "start": "543600",
    "end": "546000"
  },
  {
    "text": "once i run this command the",
    "start": "546000",
    "end": "548480"
  },
  {
    "text": "pselium-based agent configures all the",
    "start": "548480",
    "end": "551120"
  },
  {
    "text": "required maps and now we can test the",
    "start": "551120",
    "end": "553920"
  },
  {
    "text": "load balancing",
    "start": "553920",
    "end": "555600"
  },
  {
    "text": "so if we move to the browser on the left",
    "start": "555600",
    "end": "557760"
  },
  {
    "text": "side and try to access this website",
    "start": "557760",
    "end": "560480"
  },
  {
    "text": "we can see which",
    "start": "560480",
    "end": "562640"
  },
  {
    "text": "if the load balancing is working or not",
    "start": "562640",
    "end": "564480"
  },
  {
    "text": "when i click this what we see here is we",
    "start": "564480",
    "end": "566800"
  },
  {
    "text": "are connected to one of the backend",
    "start": "566800",
    "end": "568640"
  },
  {
    "text": "nodes with",
    "start": "568640",
    "end": "569720"
  },
  {
    "text": "ip21130 which is a linux server one now",
    "start": "569720",
    "end": "572720"
  },
  {
    "text": "if i run a command",
    "start": "572720",
    "end": "576600"
  },
  {
    "text": "here",
    "start": "577600",
    "end": "579839"
  },
  {
    "text": "what we can see here is this is showing",
    "start": "583519",
    "end": "585040"
  },
  {
    "text": "me what are the active connections right",
    "start": "585040",
    "end": "586560"
  },
  {
    "text": "now one thing to note about this website",
    "start": "586560",
    "end": "588720"
  },
  {
    "text": "is that this is refreshing every three",
    "start": "588720",
    "end": "590560"
  },
  {
    "text": "seconds so it is displaying the date",
    "start": "590560",
    "end": "592720"
  },
  {
    "text": "time the backend server ip",
    "start": "592720",
    "end": "595920"
  },
  {
    "text": "the name and it is refreshing every",
    "start": "595920",
    "end": "597760"
  },
  {
    "text": "three seconds",
    "start": "597760",
    "end": "598959"
  },
  {
    "text": "so coming back to the dump state command",
    "start": "598959",
    "end": "601760"
  },
  {
    "text": "what we see here is the source ip is",
    "start": "601760",
    "end": "603800"
  },
  {
    "text": "2100",
    "start": "603800",
    "end": "605519"
  },
  {
    "text": "our destination is 411 which is the web",
    "start": "605519",
    "end": "607760"
  },
  {
    "text": "this is the source port being used by",
    "start": "607760",
    "end": "609440"
  },
  {
    "text": "the browser right now and the backend ip",
    "start": "609440",
    "end": "611760"
  },
  {
    "text": "so this shows what backend",
    "start": "611760",
    "end": "614399"
  },
  {
    "text": "this connection is landing on so which",
    "start": "614399",
    "end": "617519"
  },
  {
    "text": "is which matches with here and what we",
    "start": "617519",
    "end": "619440"
  },
  {
    "text": "see here is tx and rx bytes",
    "start": "619440",
    "end": "622160"
  },
  {
    "text": "since this webpage is refreshing every",
    "start": "622160",
    "end": "623760"
  },
  {
    "text": "three seconds if i run this command",
    "start": "623760",
    "end": "625279"
  },
  {
    "text": "again what we can see that the tx and rx",
    "start": "625279",
    "end": "627839"
  },
  {
    "text": "pipes are increasing compared to the",
    "start": "627839",
    "end": "629440"
  },
  {
    "text": "previous one",
    "start": "629440",
    "end": "632079"
  },
  {
    "text": "now if i try to do a force refresh of",
    "start": "632079",
    "end": "633839"
  },
  {
    "text": "this web browser it will force the",
    "start": "633839",
    "end": "635920"
  },
  {
    "text": "browser to use a different source port",
    "start": "635920",
    "end": "638160"
  },
  {
    "text": "and possibly will hit a different",
    "start": "638160",
    "end": "640480"
  },
  {
    "text": "backend server",
    "start": "640480",
    "end": "641839"
  },
  {
    "text": "so i did a force refresher and what we",
    "start": "641839",
    "end": "643760"
  },
  {
    "text": "see here is now we are connected to",
    "start": "643760",
    "end": "645120"
  },
  {
    "text": "linux server 2 which will back an ip 21",
    "start": "645120",
    "end": "647920"
  },
  {
    "text": "140. so if i run the service dump state",
    "start": "647920",
    "end": "650240"
  },
  {
    "text": "command again",
    "start": "650240",
    "end": "651600"
  },
  {
    "text": "what we can see here is now it is",
    "start": "651600",
    "end": "652880"
  },
  {
    "text": "showing me two connections one of them",
    "start": "652880",
    "end": "654480"
  },
  {
    "text": "is closing which is the previous one 21",
    "start": "654480",
    "end": "656399"
  },
  {
    "text": "130 which was the previous active now it",
    "start": "656399",
    "end": "658399"
  },
  {
    "text": "is in a closing state and now the new",
    "start": "658399",
    "end": "660720"
  },
  {
    "text": "active is 21 140.",
    "start": "660720",
    "end": "663440"
  },
  {
    "text": "if i run this command again what we can",
    "start": "663440",
    "end": "665680"
  },
  {
    "text": "see here is",
    "start": "665680",
    "end": "667440"
  },
  {
    "text": "that",
    "start": "667440",
    "end": "669519"
  },
  {
    "text": "the tx and rx bytes are also increasing",
    "start": "669519",
    "end": "672320"
  },
  {
    "text": "since this page is refreshing every",
    "start": "672320",
    "end": "674240"
  },
  {
    "text": "three seconds",
    "start": "674240",
    "end": "676240"
  },
  {
    "text": "now if i force refresh this web page a",
    "start": "676240",
    "end": "678399"
  },
  {
    "text": "couple of times to see if i'm able to",
    "start": "678399",
    "end": "680320"
  },
  {
    "text": "hit all the four backend notes so right",
    "start": "680320",
    "end": "683040"
  },
  {
    "text": "now i'm connected to linux server two",
    "start": "683040",
    "end": "685440"
  },
  {
    "text": "my force refresh this is linux server",
    "start": "685440",
    "end": "687360"
  },
  {
    "text": "one now windows server one",
    "start": "687360",
    "end": "690160"
  },
  {
    "text": "and windows server two so we have kind",
    "start": "690160",
    "end": "692000"
  },
  {
    "text": "of",
    "start": "692000",
    "end": "693279"
  },
  {
    "text": "hit all the four backends if i show the",
    "start": "693279",
    "end": "695600"
  },
  {
    "text": "dump state we see five connections here",
    "start": "695600",
    "end": "698560"
  },
  {
    "text": "one of them is active which is the",
    "start": "698560",
    "end": "700240"
  },
  {
    "text": "latest one 21 120 rest all are being",
    "start": "700240",
    "end": "703279"
  },
  {
    "text": "shown in the closing state",
    "start": "703279",
    "end": "705920"
  },
  {
    "text": "if we quickly move to netmon and try to",
    "start": "705920",
    "end": "707760"
  },
  {
    "text": "do a packet capture",
    "start": "707760",
    "end": "710720"
  },
  {
    "text": "it should be sufficient",
    "start": "714079",
    "end": "715760"
  },
  {
    "text": "so if you look at the first packet",
    "start": "715760",
    "end": "717920"
  },
  {
    "text": "it shows source ip is 21 100 and",
    "start": "717920",
    "end": "720320"
  },
  {
    "text": "destination is 411. so this is the",
    "start": "720320",
    "end": "722320"
  },
  {
    "text": "original request packet coming from the",
    "start": "722320",
    "end": "723920"
  },
  {
    "text": "web browser to the lb node",
    "start": "723920",
    "end": "725920"
  },
  {
    "text": "if we look at the second packet its",
    "start": "725920",
    "end": "727839"
  },
  {
    "text": "source ip has now become 2111 and the",
    "start": "727839",
    "end": "730720"
  },
  {
    "text": "destination is 21 120. so this is the",
    "start": "730720",
    "end": "734000"
  },
  {
    "text": "source netted packet from lb note to the",
    "start": "734000",
    "end": "736079"
  },
  {
    "text": "backend node with source ip2101 which is",
    "start": "736079",
    "end": "739120"
  },
  {
    "text": "the ip of the lb node and destination is",
    "start": "739120",
    "end": "741399"
  },
  {
    "text": "2120 which is the ip of the backend node",
    "start": "741399",
    "end": "744480"
  },
  {
    "text": "if we look at the third packet this is",
    "start": "744480",
    "end": "746399"
  },
  {
    "text": "the response packet coming back from the",
    "start": "746399",
    "end": "748560"
  },
  {
    "text": "backend node to the lb node",
    "start": "748560",
    "end": "750560"
  },
  {
    "text": "and if you look at the fourth packet",
    "start": "750560",
    "end": "752560"
  },
  {
    "text": "this is a reverse netted packet whose",
    "start": "752560",
    "end": "754320"
  },
  {
    "text": "source ip has now become 411 which is",
    "start": "754320",
    "end": "756560"
  },
  {
    "text": "the whip and the destination has become",
    "start": "756560",
    "end": "758320"
  },
  {
    "text": "21 100 which is the ip of the client",
    "start": "758320",
    "end": "762800"
  },
  {
    "text": "so what we saw right now was the dsr",
    "start": "764320",
    "end": "766959"
  },
  {
    "text": "mode now if we want we can change the",
    "start": "766959",
    "end": "770320"
  },
  {
    "text": "mode",
    "start": "770320",
    "end": "772399"
  },
  {
    "text": "to dsr",
    "start": "772399",
    "end": "775120"
  },
  {
    "text": "so this command updates the mode to dsr",
    "start": "777360",
    "end": "779839"
  },
  {
    "text": "what this command does is it recompils",
    "start": "779839",
    "end": "781600"
  },
  {
    "text": "the ebpf program for dsr mode then it",
    "start": "781600",
    "end": "784240"
  },
  {
    "text": "again runs the program through the",
    "start": "784240",
    "end": "785600"
  },
  {
    "text": "verifier reloads and reattaches the",
    "start": "785600",
    "end": "788399"
  },
  {
    "text": "program to xtp hook and then",
    "start": "788399",
    "end": "789839"
  },
  {
    "text": "reconfigures the service that we had",
    "start": "789839",
    "end": "791839"
  },
  {
    "text": "earlier configured",
    "start": "791839",
    "end": "793839"
  },
  {
    "text": "now if we stop this and try to refresh",
    "start": "793839",
    "end": "796240"
  },
  {
    "text": "this web page what we see is that we are",
    "start": "796240",
    "end": "799120"
  },
  {
    "text": "we have connected to",
    "start": "799120",
    "end": "801519"
  },
  {
    "text": "linux server one",
    "start": "801519",
    "end": "804000"
  },
  {
    "text": "so since",
    "start": "804000",
    "end": "805680"
  },
  {
    "text": "for the duration when we were switching",
    "start": "805680",
    "end": "807760"
  },
  {
    "text": "the mode from s9 to dsr this since this",
    "start": "807760",
    "end": "809600"
  },
  {
    "text": "web page was refreshing we are seeing",
    "start": "809600",
    "end": "811200"
  },
  {
    "text": "two closing connections here but they",
    "start": "811200",
    "end": "813440"
  },
  {
    "text": "should go away in some time but the",
    "start": "813440",
    "end": "815279"
  },
  {
    "text": "latest activism is 21 130 which is what",
    "start": "815279",
    "end": "818720"
  },
  {
    "text": "is showing here if i try to force",
    "start": "818720",
    "end": "820639"
  },
  {
    "text": "refresh this webpage one more time now",
    "start": "820639",
    "end": "822399"
  },
  {
    "text": "we are connected to windows server one",
    "start": "822399",
    "end": "824480"
  },
  {
    "text": "and if i try to",
    "start": "824480",
    "end": "826160"
  },
  {
    "text": "dump state again so now the previous",
    "start": "826160",
    "end": "829920"
  },
  {
    "text": "con active connection is now moved to",
    "start": "829920",
    "end": "831600"
  },
  {
    "text": "closing state and the new active is 21 1",
    "start": "831600",
    "end": "834079"
  },
  {
    "text": "10 which we can see here one thing to",
    "start": "834079",
    "end": "836320"
  },
  {
    "text": "note here is that in case of dsr the tx",
    "start": "836320",
    "end": "838880"
  },
  {
    "text": "and rx bytes are shown as zero this is",
    "start": "838880",
    "end": "841440"
  },
  {
    "text": "because in case of dsr the written",
    "start": "841440",
    "end": "844160"
  },
  {
    "text": "packets are never seen on the lv nodes",
    "start": "844160",
    "end": "846240"
  },
  {
    "text": "so the cilium xtp solution never tracks",
    "start": "846240",
    "end": "849920"
  },
  {
    "text": "the tx and rx",
    "start": "849920",
    "end": "851440"
  },
  {
    "text": "bytes when it's running in a dsr",
    "start": "851440",
    "end": "854839"
  },
  {
    "text": "mode if we try to now",
    "start": "854839",
    "end": "857680"
  },
  {
    "text": "refresh this web page a couple of time",
    "start": "857680",
    "end": "859920"
  },
  {
    "text": "force refresh it uh to see if we are",
    "start": "859920",
    "end": "861680"
  },
  {
    "text": "able to hit all the four backends so",
    "start": "861680",
    "end": "863519"
  },
  {
    "text": "right now we are connected to windows",
    "start": "863519",
    "end": "865199"
  },
  {
    "text": "server one now we",
    "start": "865199",
    "end": "866959"
  },
  {
    "text": "linux server one",
    "start": "866959",
    "end": "868560"
  },
  {
    "text": "windows server 2",
    "start": "868560",
    "end": "871360"
  },
  {
    "text": "and linux server 2. so we hit all the",
    "start": "871360",
    "end": "873440"
  },
  {
    "text": "four back ends if you see here there",
    "start": "873440",
    "end": "875279"
  },
  {
    "text": "would be many closing connections",
    "start": "875279",
    "end": "876639"
  },
  {
    "text": "because i because i force refreshed it",
    "start": "876639",
    "end": "878320"
  },
  {
    "text": "multiple times but there is only one",
    "start": "878320",
    "end": "880240"
  },
  {
    "text": "active connection which is the last one",
    "start": "880240",
    "end": "882399"
  },
  {
    "text": "to 21 140.",
    "start": "882399",
    "end": "884560"
  },
  {
    "text": "if we quickly move to",
    "start": "884560",
    "end": "887839"
  },
  {
    "text": "netmon and try to do a packet capture",
    "start": "888959",
    "end": "891199"
  },
  {
    "text": "one more time",
    "start": "891199",
    "end": "894000"
  },
  {
    "text": "and if you look at the first packet so",
    "start": "894720",
    "end": "897199"
  },
  {
    "text": "this is the packet coming from 21 100",
    "start": "897199",
    "end": "900800"
  },
  {
    "text": "destined to 40 1 1 which is the original",
    "start": "900800",
    "end": "903920"
  },
  {
    "text": "request packet coming from the browser",
    "start": "903920",
    "end": "905440"
  },
  {
    "text": "to the lb node if you look at the second",
    "start": "905440",
    "end": "907120"
  },
  {
    "text": "packet it's actually an ip ip packet",
    "start": "907120",
    "end": "911199"
  },
  {
    "text": "going from lv node to the backend node",
    "start": "911199",
    "end": "913680"
  },
  {
    "text": "so the outer ip header has source ip2111",
    "start": "913680",
    "end": "916560"
  },
  {
    "text": "which is the ip of the lb node and the",
    "start": "916560",
    "end": "919440"
  },
  {
    "text": "destination is 2140 which is the ip of",
    "start": "919440",
    "end": "921760"
  },
  {
    "text": "the",
    "start": "921760",
    "end": "922560"
  },
  {
    "text": "backend node if the inner ip header has",
    "start": "922560",
    "end": "925519"
  },
  {
    "text": "the original source and destination",
    "start": "925519",
    "end": "928399"
  },
  {
    "text": "if you look at the third packet it's",
    "start": "928399",
    "end": "930320"
  },
  {
    "text": "actually after three seconds",
    "start": "930320",
    "end": "932240"
  },
  {
    "text": "and it again contains the source ips",
    "start": "932240",
    "end": "934160"
  },
  {
    "text": "2100 so this is actually the second",
    "start": "934160",
    "end": "936560"
  },
  {
    "text": "request coming request packet coming",
    "start": "936560",
    "end": "938399"
  },
  {
    "text": "after three seconds",
    "start": "938399",
    "end": "940399"
  },
  {
    "text": "so we do not see any response packet",
    "start": "940399",
    "end": "943279"
  },
  {
    "text": "coming back to the lb node so this is",
    "start": "943279",
    "end": "946240"
  },
  {
    "text": "dsr",
    "start": "946240",
    "end": "947440"
  },
  {
    "text": "working in action here",
    "start": "947440",
    "end": "951480"
  },
  {
    "text": "so this is the end of the demo and the",
    "start": "964480",
    "end": "966320"
  },
  {
    "text": "presentation if you have any questions",
    "start": "966320",
    "end": "968079"
  },
  {
    "text": "please let us know and as we are working",
    "start": "968079",
    "end": "970560"
  },
  {
    "text": "on the evp of windows project we are",
    "start": "970560",
    "end": "972240"
  },
  {
    "text": "also currently hiring so if anyone is",
    "start": "972240",
    "end": "974639"
  },
  {
    "text": "interested interested please feel free",
    "start": "974639",
    "end": "976560"
  },
  {
    "text": "to reach out to us thank you",
    "start": "976560",
    "end": "981079"
  }
]