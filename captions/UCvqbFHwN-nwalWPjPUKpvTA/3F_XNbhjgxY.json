[
  {
    "text": "good afternoon and thank you for joining my name is Arvind I work with the ISO",
    "start": "60",
    "end": "6839"
  },
  {
    "text": "valent team is founding company behind the open-source project called helium",
    "start": "6839",
    "end": "12290"
  },
  {
    "text": "and we're going to talk about as I mentioned the powerful new technique in",
    "start": "12290",
    "end": "18210"
  },
  {
    "text": "linux kernel called BPF and how BPF can be brought to a kubernetes cluster near",
    "start": "18210",
    "end": "25140"
  },
  {
    "text": "you right so to speak and delivered networking and security for kubernetes",
    "start": "25140",
    "end": "30359"
  },
  {
    "text": "oh yeah so the agenda is roughly will give you a little bit of overview about",
    "start": "30359",
    "end": "36989"
  },
  {
    "text": "BPF then how Celia Muses BPF for kubernetes we'll try our hands and",
    "start": "36989",
    "end": "44100"
  },
  {
    "text": "struggle with the projection and things like that with the demo and font size and terminals and Q Khan and Q cutoff",
    "start": "44100",
    "end": "50730"
  },
  {
    "text": "and think like that so hopefully that will go well and then we'll take a look",
    "start": "50730",
    "end": "57420"
  },
  {
    "text": "at some of the cool stuff that we are doing which were also covered in a",
    "start": "57420",
    "end": "62850"
  },
  {
    "text": "couple of previous talks so well I'll just mention that briefly towards the end ok so I think in recent times there",
    "start": "62850",
    "end": "75869"
  },
  {
    "text": "have not that many aha moments in Linux kernel and I think safe to say that in",
    "start": "75869",
    "end": "82020"
  },
  {
    "text": "for more than a decade or so BPF is probably the most exciting kernel technology to come out it's a pretty",
    "start": "82020",
    "end": "89369"
  },
  {
    "text": "powerful technique and it is already impacting a wide range of areas in Linux",
    "start": "89369",
    "end": "97890"
  },
  {
    "text": "systems operations troubleshooting networking performance analysis DDoS",
    "start": "97890",
    "end": "104850"
  },
  {
    "text": "mitigation firewalls and things like that it's not seems like it has gone",
    "start": "104850",
    "end": "112259"
  },
  {
    "text": "into an auto mode or something let me go back so it has been in use in prod for",
    "start": "112259",
    "end": "120450"
  },
  {
    "text": "all of these companies at a large scale for a long time now for more than two",
    "start": "120450",
    "end": "125460"
  },
  {
    "text": "three years as far as we know and the the gist of this this technique is",
    "start": "125460",
    "end": "131190"
  },
  {
    "text": "actually it's very simple animation like a overly-complicated Linux kernel",
    "start": "131190",
    "end": "136480"
  },
  {
    "text": "module or something that you need to wrangle with install and it's a it's a built-in technology and if you have used",
    "start": "136480",
    "end": "142840"
  },
  {
    "text": "any of you have used TCP dump in the past this was the technique behind it",
    "start": "142840",
    "end": "148510"
  },
  {
    "text": "hence the wonderful name Berkeley packet filter at this point it's a big misnomer",
    "start": "148510",
    "end": "155349"
  },
  {
    "text": "because it's not just for packet filtering you can attach these small programs to many different types of",
    "start": "155349",
    "end": "161470"
  },
  {
    "text": "system calls and kernel events you can attach it to memory requests to file descriptors opening you can attach it to",
    "start": "161470",
    "end": "168010"
  },
  {
    "text": "observe things for performance you can attach it to do extra processing of packets denying them forwarding them and",
    "start": "168010",
    "end": "175629"
  },
  {
    "text": "things like that so it's essentially small programs byte code programs you",
    "start": "175629",
    "end": "181420"
  },
  {
    "text": "write them in C and Python like a upper level language it gets compiled into a bytecode before it is loaded and",
    "start": "181420",
    "end": "189250"
  },
  {
    "text": "executed in the kernel space it's verified so that there are no loops there is no incorrect memory access and",
    "start": "189250",
    "end": "196510"
  },
  {
    "text": "things like that so there is a just-in-time compiler and a verifier the",
    "start": "196510",
    "end": "201579"
  },
  {
    "text": "JIT makes it efficient so there is no interpretation going on it's not like each and every bytecode is getting interpreted it gets compiled into",
    "start": "201579",
    "end": "207760"
  },
  {
    "text": "underlying CPU architecture it's not a linux kernel module this is one of the",
    "start": "207760",
    "end": "214000"
  },
  {
    "text": "questions that we got very frequently is it's just a technique just like other",
    "start": "214000",
    "end": "219190"
  },
  {
    "text": "Linux techniques that are available in the Linux distribution and at this point",
    "start": "219190",
    "end": "224260"
  },
  {
    "text": "I think all major distributions have announced support for this I think the last was rl8 and they are working on",
    "start": "224260",
    "end": "230319"
  },
  {
    "text": "back porting it as well Oh point 218 AWS Linux pretty much all",
    "start": "230319",
    "end": "236019"
  },
  {
    "text": "the recent instances gke costs I mean you name it it as you say all major",
    "start": "236019",
    "end": "242319"
  },
  {
    "text": "distributions have support for this at this point and for those of you who just",
    "start": "242319",
    "end": "248049"
  },
  {
    "text": "came in BPF part is essentially just a small bytecode program that you can",
    "start": "248049",
    "end": "253449"
  },
  {
    "text": "attach to various system calls okay beyond that I don't know so it is pretty",
    "start": "253449",
    "end": "262210"
  },
  {
    "text": "powerful in in what you can do if you attach programs like if you think about it Linux does a lot of things from packet",
    "start": "262210",
    "end": "268199"
  },
  {
    "text": "processing handling files handling various devices and things like that it's not that much observability into",
    "start": "268199",
    "end": "273960"
  },
  {
    "text": "what it is doing right there's not that much room to change the behavior or to do extra processing unless you recompile",
    "start": "273960",
    "end": "281129"
  },
  {
    "text": "the kernel these are the couple of use cases that I pulled out because this is kind of",
    "start": "281129",
    "end": "286699"
  },
  {
    "text": "telling of where we want to go with kubernetes and BPF and things like that one of the popular use case is around",
    "start": "286699",
    "end": "294960"
  },
  {
    "text": "load balancing so when the packets come in you know the source and destination adults and let's say you just want to",
    "start": "294960",
    "end": "301529"
  },
  {
    "text": "forward it for TLS termination or further processing then you can do it very efficiently it doesn't have to go",
    "start": "301529",
    "end": "306599"
  },
  {
    "text": "up the Linux stack right packet comes in you can just forward it somewhere at the very early stage and that's what the xdp",
    "start": "306599",
    "end": "312900"
  },
  {
    "text": "part does so you can see that the kubernetes also has a lot of load",
    "start": "312900",
    "end": "317969"
  },
  {
    "text": "balancing going on right like cluster IP node port they all have the underpinnings of taking the packet forwarding it and it spraying it to some",
    "start": "317969",
    "end": "324449"
  },
  {
    "text": "other place so the load balancing is one obvious use case for taking BPF applying",
    "start": "324449",
    "end": "330449"
  },
  {
    "text": "to kubernetes another good area is around dropping the packets or filtering",
    "start": "330449",
    "end": "335940"
  },
  {
    "text": "the packets right you have some PCI sensitive pods and services and you don't want them going out to the",
    "start": "335940",
    "end": "342089"
  },
  {
    "text": "internet here you can just look at the destination header and drop them so very efficient firewalling can be built very",
    "start": "342089",
    "end": "347759"
  },
  {
    "text": "efficient load balancing can be built using VPS and that's the idea behind helium project to take this powerful",
    "start": "347759",
    "end": "354719"
  },
  {
    "text": "technique and help you run micro services at a large scale with higher churn much more efficiently then and",
    "start": "354719",
    "end": "363330"
  },
  {
    "text": "cerium is open source it's a project it was founded but slightly over two years ago and this is",
    "start": "363330",
    "end": "371639"
  },
  {
    "text": "a good artistic rendition of our ambitions we want to tear apart the",
    "start": "371639",
    "end": "377339"
  },
  {
    "text": "shackles of monolithic structure that are there in the Linux kernel iptables being sort of one of the representatives",
    "start": "377339",
    "end": "383629"
  },
  {
    "text": "so if you think of your micro-services as a rocket ship moving fast or like a fast moving ship these are kind of the",
    "start": "383629",
    "end": "390270"
  },
  {
    "text": "anchors pushing you down you should have seen the artwork sketch work that we",
    "start": "390270",
    "end": "395639"
  },
  {
    "text": "sent it to the designer and the guy really job with it explaining and capturing the",
    "start": "395639",
    "end": "402720"
  },
  {
    "text": "intention so that the so let's cover a little bit about what is what is needed",
    "start": "402720",
    "end": "409260"
  },
  {
    "text": "from a least privileged network security perspective that's a mouthful of a title",
    "start": "409260",
    "end": "415770"
  },
  {
    "text": "it's essentially just saying what parts can talk to which other parts and services internally externally with in",
    "start": "415770",
    "end": "421770"
  },
  {
    "text": "your data center across the data center and things like that just to illustrate the point let's say there's a bunch of",
    "start": "421770",
    "end": "427140"
  },
  {
    "text": "front-end ng and X and a pod there are some memcache services which are expediting the key lookup you can have",
    "start": "427140",
    "end": "434910"
  },
  {
    "text": "the front and pod insert things into this memcache but giving this front-end",
    "start": "434910",
    "end": "440760"
  },
  {
    "text": "access to something like get all is probably disastrous at this point we all",
    "start": "440760",
    "end": "446070"
  },
  {
    "text": "know that it's like a very expensive operation from memcache and causes widespread disruptions yeah but that",
    "start": "446070",
    "end": "452880"
  },
  {
    "text": "firewalling of what to allow and what not to allow is not an l3 l4 security",
    "start": "452880",
    "end": "460080"
  },
  {
    "text": "right it's more of an API aware security yes what front-end can talk to memcache",
    "start": "460080",
    "end": "465150"
  },
  {
    "text": "but what exactly should it be able to do it's becoming more and more important because we are taking this monolithic",
    "start": "465150",
    "end": "471720"
  },
  {
    "text": "applications which used to nicely talk using function calls we are replacing them with API calls so previous security",
    "start": "471720",
    "end": "479580"
  },
  {
    "text": "of nice function calls inside the operating system has gone into API",
    "start": "479580",
    "end": "485040"
  },
  {
    "text": "communications over the network so just doing an l3 l4 is insufficient you have",
    "start": "485040",
    "end": "491040"
  },
  {
    "text": "to go into enforcing API aware security and you can see the movement around this",
    "start": "491040",
    "end": "496560"
  },
  {
    "text": "in sto and MPLS and various other efforts making things API aware so",
    "start": "496560",
    "end": "503280"
  },
  {
    "text": "that's the part which is inside the cluster that's the sort of the east-west security it has to go from l3 l4 to API",
    "start": "503280",
    "end": "509340"
  },
  {
    "text": "of a level when the thing when things are going out the identity outside the cluster is little bit difficult to",
    "start": "509340",
    "end": "516089"
  },
  {
    "text": "establish but at least DNS aware security is something that we should all aspire to achieve right because DNS is a",
    "start": "516089",
    "end": "523200"
  },
  {
    "text": "good identity for all pretty much all external services so we'll talk about how we can enable DNS aware security",
    "start": "523200",
    "end": "531050"
  },
  {
    "text": "last but not least is the part around who are we securing what is the identity of this",
    "start": "531050",
    "end": "537930"
  },
  {
    "text": "part in the good old V M days you had a bunch of domain controllers and you knew they were domain controllers and they",
    "start": "537930",
    "end": "544770"
  },
  {
    "text": "had a nice IP and you could say well those are domain controller that's the identity of them right but now these",
    "start": "544770",
    "end": "550080"
  },
  {
    "text": "parts are like shapeshifters and if they are running with one IP in one host and",
    "start": "550080",
    "end": "555120"
  },
  {
    "text": "other IP in another hole they are alive for 15 seconds and dead after that or something like that so this is very hard",
    "start": "555120",
    "end": "560850"
  },
  {
    "text": "to establish identities for these ephemeral scale-out hide sharon environments at least one approach is to",
    "start": "560850",
    "end": "569460"
  },
  {
    "text": "take the meta data into account what labels are there or if you have crypto certificates into account to establish",
    "start": "569460",
    "end": "575250"
  },
  {
    "text": "the identity at least the three problem domains around the least privileged security yard is what I've tried to",
    "start": "575250",
    "end": "582570"
  },
  {
    "text": "capture there's the identity problem there's the enforcement problem and then there is the API aware security problem",
    "start": "582570",
    "end": "588950"
  },
  {
    "text": "the enforcement suffers with one other problem of churn these parts as they come and go they're",
    "start": "588950",
    "end": "594570"
  },
  {
    "text": "eyepieces they come and goes that that's where the monolithic structures like IP table start hurting and that's where the",
    "start": "594570",
    "end": "601530"
  },
  {
    "text": "efficiencies of things like BPF start coming in I promise you I will end the",
    "start": "601530",
    "end": "608700"
  },
  {
    "text": "slides very soon the cilium in a nutshell is essentially a software on",
    "start": "608700",
    "end": "615960"
  },
  {
    "text": "top of BPF it listens for the kubernetes network policies takes those network",
    "start": "615960",
    "end": "621930"
  },
  {
    "text": "policies and translates it into BPI programs for ingress and egress rules right so it runs has a daemon set on all",
    "start": "621930",
    "end": "628470"
  },
  {
    "text": "your worker nodes it's listening for network policy objects when the policies come in it takes it listens for them it",
    "start": "628470",
    "end": "634650"
  },
  {
    "text": "takes the policy input and just attaches BPF programs corresponding to that so",
    "start": "634650",
    "end": "640080"
  },
  {
    "text": "that's the pretty easy way of of understanding or see Liam does this is this white can deliver the all the power",
    "start": "640080",
    "end": "647070"
  },
  {
    "text": "of BPF for for yo kubernetes cluster em it follows the same standard kubernetes",
    "start": "647070",
    "end": "653070"
  },
  {
    "text": "network policy approach default deny the moment you enable a policy in a namespace whole bunch of things will go",
    "start": "653070",
    "end": "658830"
  },
  {
    "text": "into sort of default denied so applications will stop functioning we",
    "start": "658830",
    "end": "663870"
  },
  {
    "text": "will see some of that so that's that's one of the more harder parts how to iterate on the firewall",
    "start": "663870",
    "end": "670490"
  },
  {
    "text": "firewalls and securities and things like that and it has same constructs like endpoint",
    "start": "670490",
    "end": "676079"
  },
  {
    "text": "selector ingress/egress a white blue whitelist rules are all an hour of each",
    "start": "676079",
    "end": "681089"
  },
  {
    "text": "other okay so let's go struggle with the",
    "start": "681089",
    "end": "687630"
  },
  {
    "text": "terminal and hopefully the projections will be fine but this is what I wanted",
    "start": "687630",
    "end": "692670"
  },
  {
    "text": "to go over rather than putting amell's and trying to explain what each of them",
    "start": "692670",
    "end": "697680"
  },
  {
    "text": "are doing here let's just run them in the terminal in a smaller environment and see what's the impact and we will",
    "start": "697680",
    "end": "703949"
  },
  {
    "text": "try some of these policies right as I said if you have policy disabled it's a pretty bad security posture any part can",
    "start": "703949",
    "end": "710190"
  },
  {
    "text": "do anything within the cluster or outside the cluster a sort of a good",
    "start": "710190",
    "end": "715199"
  },
  {
    "text": "starting point you can start with something like default deny then nothing is happening right and that's one",
    "start": "715199",
    "end": "721170"
  },
  {
    "text": "posture but a decent one that we have learnt across many users is they just",
    "start": "721170",
    "end": "727079"
  },
  {
    "text": "allow within the namespace to begin with so all the services within the namespace are able to talk with each other but you",
    "start": "727079",
    "end": "735149"
  },
  {
    "text": "have to allow egress to cube DNS we'll see how you can do that securely as well then the other sensitive spot is around",
    "start": "735149",
    "end": "741690"
  },
  {
    "text": "the Kuban it is API server since the API server the back endpoints may or may not have any labels it becomes hard how to",
    "start": "741690",
    "end": "747660"
  },
  {
    "text": "establish the ciders for those API servers and things like that so there is a construct in cilium that can help with",
    "start": "747660",
    "end": "753300"
  },
  {
    "text": "that too but kubernetes api server as we learned from the recent the exploit and",
    "start": "753300",
    "end": "760829"
  },
  {
    "text": "CVE alert that it's a pretty sensitive means holds the keys to the entire",
    "start": "760829",
    "end": "766470"
  },
  {
    "text": "kingdom essentially so we need to secure the kubernetes api server for sure and then we will look into more granular",
    "start": "766470",
    "end": "772589"
  },
  {
    "text": "security this is where the API aware security comes in we'll see how you can restrict the the",
    "start": "772589",
    "end": "779010"
  },
  {
    "text": "behavior of certain services when they are accessing other services from at an APL area and then from an ingress",
    "start": "779010",
    "end": "786839"
  },
  {
    "text": "perspective there is an interesting challenge of whenever the traffic comes in into a pod into a service that is",
    "start": "786839",
    "end": "793529"
  },
  {
    "text": "exposed at node port you only see it coming from the host so there is an",
    "start": "793529",
    "end": "799050"
  },
  {
    "text": "interesting challenge around how to distinguish whether it's coming originally it's a traffic originally",
    "start": "799050",
    "end": "804210"
  },
  {
    "text": "from host or it is coming from outside and bounced by via the node port right and this is important because there's a",
    "start": "804210",
    "end": "812520"
  },
  {
    "text": "lot of health check kind of traffic from the cubelet which is running from host to your pod those should be allowed but",
    "start": "812520",
    "end": "818640"
  },
  {
    "text": "not necessarily every port should get a traffic from the node port right so I",
    "start": "818640",
    "end": "823920"
  },
  {
    "text": "all explain some of the part of how that how we handle that and then last this",
    "start": "823920",
    "end": "830940"
  },
  {
    "text": "was actually pretty a pretty recent feature that we added in see Liam it is",
    "start": "830940",
    "end": "835950"
  },
  {
    "text": "around controlling the DNS lookups as well as the egress ex is based on DNS or",
    "start": "835950",
    "end": "841080"
  },
  {
    "text": "wildcard patterns and things like that",
    "start": "841080",
    "end": "844580"
  },
  {
    "text": "so Before we jump into the terminal though just one double click on allow within namespace it is a pretty decent I",
    "start": "846650",
    "end": "854400"
  },
  {
    "text": "think what we have learned in practice from other customers is this is a good good starting point it protects lot of",
    "start": "854400",
    "end": "860280"
  },
  {
    "text": "this sensitive access points API server cubelet server metadata services if you are running on cloud any cross tenant",
    "start": "860280",
    "end": "867720"
  },
  {
    "text": "breaches if you have mapped your tenants to namespaces and unwanted ingress you here so it's a decent starting point",
    "start": "867720",
    "end": "874230"
  },
  {
    "text": "right so about my demo right around",
    "start": "874230",
    "end": "879390"
  },
  {
    "text": "10:45 a.m. this morning everything was working fine then then mini 2 blew up my",
    "start": "879390",
    "end": "885390"
  },
  {
    "text": "backup plan was coughs cluster but then the Wi-Fi here just any queue cuddle commands were just not going through so",
    "start": "885390",
    "end": "892380"
  },
  {
    "text": "if you see a little bit of paranoia in my face because of the torturous experience for the past one and a half",
    "start": "892380",
    "end": "898680"
  },
  {
    "text": "hours I downgraded to mini queue to",
    "start": "898680",
    "end": "903990"
  },
  {
    "text": "version o 28 or something and then it worked fine but 30 seems to be hanging in my computer at least so in this mini",
    "start": "903990",
    "end": "911790"
  },
  {
    "text": "queue cluster I have a monitoring namespace many of you guys would have the same monitoring names except",
    "start": "911790",
    "end": "917339"
  },
  {
    "text": "probably for the Empire dog we are big fans of Star Wars they were our early customer and inspiration so that Empire",
    "start": "917339",
    "end": "924390"
  },
  {
    "text": "dog is essentially a policy dog fooding pod we will see whether it can access",
    "start": "924390",
    "end": "929580"
  },
  {
    "text": "things and things like that as we apply the policies there other namespace aptly named Empire and",
    "start": "929580",
    "end": "937380"
  },
  {
    "text": "it has just one service called Death Star I borrowed it from Thomas's talk didn't want to create any new service in",
    "start": "937380",
    "end": "943769"
  },
  {
    "text": "an empire so let's see how we can restrict the flows between these services this this should represent at",
    "start": "943769",
    "end": "950250"
  },
  {
    "text": "least a couple of names faces in your clusters which you already have high jump to the recap let me escape out of",
    "start": "950250",
    "end": "958680"
  },
  {
    "text": "here it's the font okay on this one or",
    "start": "958680",
    "end": "967110"
  },
  {
    "text": "is it okay alright cool so as I said we",
    "start": "967110",
    "end": "972720"
  },
  {
    "text": "have a bunch of parts and services running here then the monitoring",
    "start": "972720",
    "end": "977910"
  },
  {
    "text": "namespace there is the graph on our Prometheus and these guys and see Liam is actually running is a demon set as I",
    "start": "977910",
    "end": "983040"
  },
  {
    "text": "had said it's running in the cube system namespace but you can choose any name space where you want to deploy see Liam and there's only one node here so pretty",
    "start": "983040",
    "end": "990450"
  },
  {
    "text": "small setup and if we look at the sensitive spots that I was talking about",
    "start": "990450",
    "end": "998690"
  },
  {
    "text": "the this Empire dog pod our dog fooding policy dog fooding pod actually if we",
    "start": "998810",
    "end": "1004940"
  },
  {
    "text": "try to go ahead and access the cube shuttle looks like there is no authentication on this and it can go",
    "start": "1004940",
    "end": "1011810"
  },
  {
    "text": "ahead and access all the parts that are running there now I'm not a very good hacker but you could craft some really",
    "start": "1011810",
    "end": "1017750"
  },
  {
    "text": "nifty commands and execute and get access to running pods and copy files",
    "start": "1017750",
    "end": "1023449"
  },
  {
    "text": "and things like that there's just no no no purpose of random",
    "start": "1023449",
    "end": "1029058"
  },
  {
    "text": "part having cubelet access right I do have the API access blocked so if you",
    "start": "1029059",
    "end": "1036589"
  },
  {
    "text": "look at this command which is actually",
    "start": "1036589",
    "end": "1042890"
  },
  {
    "text": "just doing the curl to go get that one I do have authorization there but this",
    "start": "1042890",
    "end": "1048110"
  },
  {
    "text": "authorization is actually also very weak it's just based off of the service account if I change the service account on that Empire dog to cluster admin I",
    "start": "1048110",
    "end": "1055120"
  },
  {
    "text": "pretty much sure it's going to reveal a bunch of secrets out of there okay but",
    "start": "1055120",
    "end": "1060799"
  },
  {
    "text": "the basic point is this was a random part that I created as testing it just has a bunch of access without any",
    "start": "1060799",
    "end": "1065990"
  },
  {
    "text": "particular rhyme yeah and it can not only do damage by accessing this sensitive services it can",
    "start": "1065990",
    "end": "1073160"
  },
  {
    "text": "also go across namespaces and and try to find services to exploit that are",
    "start": "1073160",
    "end": "1078290"
  },
  {
    "text": "exposed so this is our favorite inspired from Star Wars that you can actually go blow up the entire Death Star that's",
    "start": "1078290",
    "end": "1085460"
  },
  {
    "text": "what actually happened in the movie they had a sense that they were exhaust port open for HTTP put access okay so how do",
    "start": "1085460",
    "end": "1096020"
  },
  {
    "text": "we rectify this situation I mean it seems like a pretty it's a pretty happy situation from from the application",
    "start": "1096020",
    "end": "1102410"
  },
  {
    "text": "perspective you can see the graph anna is talking to prometheus prometheus is",
    "start": "1102410",
    "end": "1108080"
  },
  {
    "text": "pulling the helium matrix in this scale the drop count and end pointers is so silly immed expose a whole bunch of",
    "start": "1108080",
    "end": "1113360"
  },
  {
    "text": "Prometheus matrix from an app perspective it's a pretty happy situation the these are these things are",
    "start": "1113360",
    "end": "1119990"
  },
  {
    "text": "node port services they are happily accessible everywhere from the world from the security is not so good okay so",
    "start": "1119990",
    "end": "1127460"
  },
  {
    "text": "let's start with the within namespace as I had mentioned a surprisingly very",
    "start": "1127460",
    "end": "1133520"
  },
  {
    "text": "simple step can go along we had to protect the service one thing to",
    "start": "1133520",
    "end": "1139220"
  },
  {
    "text": "highlight here is you see all the labels are empty but every CNP is every network",
    "start": "1139220",
    "end": "1147380"
  },
  {
    "text": "policy is scoped to a namespace so when you push this policy which says all",
    "start": "1147380",
    "end": "1153110"
  },
  {
    "text": "endpoint selectors are allowing to go to all eagerness and immigrants destinations it's not all the ports",
    "start": "1153110",
    "end": "1159410"
  },
  {
    "text": "talking to everybody helium will insert a namespace labor because it's already scoped to a namespace so all parts within the",
    "start": "1159410",
    "end": "1166670"
  },
  {
    "text": "namespace can talk to each other that's what this policy will result in you don't have to put the namespace in each",
    "start": "1166670",
    "end": "1172130"
  },
  {
    "text": "and every where where you want to apply this okay so let's apply this and see how that",
    "start": "1172130",
    "end": "1181400"
  },
  {
    "text": "goes well that happens one other nifty",
    "start": "1181400",
    "end": "1191390"
  },
  {
    "text": "thing to launch over here would be to just see the repercussions of these policies whether they are functioning",
    "start": "1191390",
    "end": "1198130"
  },
  {
    "text": "sort of a TCP dump if you if you would for getting insights into",
    "start": "1198130",
    "end": "1203389"
  },
  {
    "text": "what is getting dropped and things like that yeah so let me long exact into the cerium pod and I will launch a tool called senior",
    "start": "1203389",
    "end": "1211370"
  },
  {
    "text": "monitor and I will restrict it to just",
    "start": "1211370",
    "end": "1217700"
  },
  {
    "text": "show us the drops okay it looks like already after we applied this within",
    "start": "1217700",
    "end": "1223370"
  },
  {
    "text": "namespace policies a whole bunch of things started becoming unhappy you'd probably get calls from your app",
    "start": "1223370",
    "end": "1228590"
  },
  {
    "text": "developer that hey I can't access my graph on and things like that the calls to not port 990 even the cause to UDP",
    "start": "1228590",
    "end": "1236419"
  },
  {
    "text": "are getting blocked okay so that's the first thing that we need to allow you",
    "start": "1236419",
    "end": "1241490"
  },
  {
    "text": "saw that there was no egress allowed in that within namespace rule but without",
    "start": "1241490",
    "end": "1247490"
  },
  {
    "text": "cube DNS X as nothing is gonna work so let's rectify that situation and the",
    "start": "1247490",
    "end": "1254360"
  },
  {
    "text": "cube DNS to allow cube DNS you can use the same identity and label based system you can use the label core cube DNS",
    "start": "1254360",
    "end": "1262929"
  },
  {
    "text": "allow specific access to port 53 so this is a good example of a combination of l3",
    "start": "1262929",
    "end": "1267980"
  },
  {
    "text": "and l4 it can't go to any other system on cubes in the cube system namespace",
    "start": "1267980",
    "end": "1273350"
  },
  {
    "text": "any other service there so it's a it's a good limited policy it still it's very",
    "start": "1273350",
    "end": "1279289"
  },
  {
    "text": "liberal in that it's allowing you to look up any service and anything that is running internally or externally and",
    "start": "1279289",
    "end": "1284960"
  },
  {
    "text": "towards the end I will cover how we can restrict even the lookups to specific",
    "start": "1284960",
    "end": "1290389"
  },
  {
    "text": "services using wildcards and things like that and enforce that us there okay so let's see if this helps the cause let me",
    "start": "1290389",
    "end": "1298759"
  },
  {
    "text": "stop this and grep for port 53 right there for UDP that should also 53 so a",
    "start": "1298759",
    "end": "1311840"
  },
  {
    "text": "bowl whole bunch of these going by maybe nobody is making any dns calls anymore",
    "start": "1311840",
    "end": "1318320"
  },
  {
    "text": "that's interesting okay so let's create this cube DNS minus M",
    "start": "1318320",
    "end": "1325999"
  },
  {
    "text": "monitoring namespace this should get get us the help that we need in order to",
    "start": "1325999",
    "end": "1332889"
  },
  {
    "text": "have egress a DNS lookup between the services and let's just quickly take a look at",
    "start": "1332889",
    "end": "1339440"
  },
  {
    "text": "what happened to all those sensitive points that we had oh it didn't create",
    "start": "1339440",
    "end": "1346490"
  },
  {
    "text": " I did pay attention thank you all",
    "start": "1346490",
    "end": "1354440"
  },
  {
    "text": "right thanks for that so this this particular vulnerability had nothing to",
    "start": "1354440",
    "end": "1360140"
  },
  {
    "text": "do with the DNS with the DNS looker it",
    "start": "1360140",
    "end": "1365270"
  },
  {
    "text": "is directly hitting the IP right but now this is getting blocked because there is",
    "start": "1365270",
    "end": "1370880"
  },
  {
    "text": "no ingress and egress allowed in this namespace so it's a good spot to start with and we can test the API is and and",
    "start": "1370880",
    "end": "1377120"
  },
  {
    "text": "the Deathstar explosion as well as it's just not going to be allowed I will just show you the test the cross namespace",
    "start": "1377120",
    "end": "1385070"
  },
  {
    "text": "one so that we make sure that the DNS lookup is working right see the it's not",
    "start": "1385070",
    "end": "1395690"
  },
  {
    "text": "resulting in a DNS lookup error it's just hanging for the curl to timeout so that's the example of a policy l3 denied",
    "start": "1395690",
    "end": "1403390"
  },
  {
    "text": "okay there's one other thing is since this is so noisy there is one other option in see Liam which will help",
    "start": "1403390",
    "end": "1410530"
  },
  {
    "text": "reduce it so we can actually look at what all endpoints it is managing so",
    "start": "1410530",
    "end": "1416030"
  },
  {
    "text": "here you can see that it is managing cube DNS it's managing graph fauna it's",
    "start": "1416030",
    "end": "1421130"
  },
  {
    "text": "managing all of these things and this is like the our Empire dog test pod we can",
    "start": "1421130",
    "end": "1427220"
  },
  {
    "text": "just restrict the calls to this particular endpoint and say hey just",
    "start": "1427220",
    "end": "1433309"
  },
  {
    "text": "show me all the drops related to this not this command the CDM monitor command",
    "start": "1433309",
    "end": "1441640"
  },
  {
    "text": "right so that way it will become less noisy and if I showed you one of these calls here it should give you its rizal",
    "start": "1441640",
    "end": "1450679"
  },
  {
    "text": "to the right back-end service is going to port 80 but it's getting policy denied right so this is like a very",
    "start": "1450679",
    "end": "1456770"
  },
  {
    "text": "simple starting point with we said okay allow within namespace we said okay just",
    "start": "1456770",
    "end": "1462740"
  },
  {
    "text": "allow egress to cube DNS but our developers are not very happy because we have taken of",
    "start": "1462740",
    "end": "1468020"
  },
  {
    "text": "all their access these things are not gonna load we have not allowed the nor port services ingress from the world",
    "start": "1468020",
    "end": "1474100"
  },
  {
    "text": "that's also pretty easy to fix so let's look at the allow from world so there's",
    "start": "1474100",
    "end": "1482720"
  },
  {
    "text": "the graph on a service again using the same label based identifier abre fauna you allow it the access from entities",
    "start": "1482720",
    "end": "1490790"
  },
  {
    "text": "called world now the notion of world is also a little bit challenging for see Liam all the endpoints outside of the",
    "start": "1490790",
    "end": "1497960"
  },
  {
    "text": "cluster are essentially classified as world or for if any reason it can't resolve an identity it just falls back",
    "start": "1497960",
    "end": "1503840"
  },
  {
    "text": "as a world as well okay but there's one interesting as I had mentioned earlier",
    "start": "1503840",
    "end": "1510080"
  },
  {
    "text": "there is a distinction when the traffic is coming from node port versus a traffic originating from the host if I",
    "start": "1510080",
    "end": "1517550"
  },
  {
    "text": "allow all from the world yeah all of those traffic will go through but by default all the traffic from host is",
    "start": "1517550",
    "end": "1524120"
  },
  {
    "text": "allowed so how do we distinguish right how do you differentiate what traffic is originating from the host like a health",
    "start": "1524120",
    "end": "1530210"
  },
  {
    "text": "check you can have readiness probes and things like that from cubelet going into the pod so what we do is when a traffic",
    "start": "1530210",
    "end": "1537020"
  },
  {
    "text": "is originating from any of the interfaces inside the helium's host we",
    "start": "1537020",
    "end": "1542420"
  },
  {
    "text": "put a small marker in it which will tell us that hey it is a traffic originating from the host using that we can",
    "start": "1542420",
    "end": "1548810"
  },
  {
    "text": "distinguish whether it is coming from the host or it is actually bouncing from an external from an outside node port",
    "start": "1548810",
    "end": "1555350"
  },
  {
    "text": "kind of a service that makes sense the Ravana actually has a HTTP readiness",
    "start": "1555350",
    "end": "1560570"
  },
  {
    "text": "probe and you can see that graph hana is not failing even though we don't have any ingress allowed so immigrants from",
    "start": "1560570",
    "end": "1566090"
  },
  {
    "text": "host is always allowed so let's create that policy of allow world and hopefully",
    "start": "1566090",
    "end": "1574940"
  },
  {
    "text": "the graph on a service will start loading after that and note that even",
    "start": "1574940",
    "end": "1580640"
  },
  {
    "text": "though the Prometheus service is a node port service I have not allowed access to it so that one is still blocked so",
    "start": "1580640",
    "end": "1588770"
  },
  {
    "text": "you even though you have specifications or a service definition you can still",
    "start": "1588770",
    "end": "1594200"
  },
  {
    "text": "enforce controls so this this prevents like accidentally if somebody puts Kafka as a node port instead of cluster IP and",
    "start": "1594200",
    "end": "1600830"
  },
  {
    "text": "all of a sudden exposed to the world which it has no business being accessible from outside",
    "start": "1600830",
    "end": "1606070"
  },
  {
    "text": "often doesn't have any are back or TLS or anything to it right so you can have",
    "start": "1606070",
    "end": "1611450"
  },
  {
    "text": "this safeguards in place which will prevent accidental Mis configuration",
    "start": "1611450",
    "end": "1617030"
  },
  {
    "text": "from exposing a whole bunch of services or unnecessarily to your internet all those fancy graphs went away by now you",
    "start": "1617030",
    "end": "1624260"
  },
  {
    "text": "know the reason because there is no egress allowed for Prometheus to escape anything right",
    "start": "1624260",
    "end": "1629690"
  },
  {
    "text": "we started with a very conservative spot we said like just within the namespace but Prometheus needs access to go and",
    "start": "1629690",
    "end": "1636650"
  },
  {
    "text": "scrape a whole bunch of other endpoints and Prometheus also needs access to the kubernetes api server to go scrape those",
    "start": "1636650",
    "end": "1644000"
  },
  {
    "text": "endpoints otherwise it won't know what is the what HTTP IP address it should go to so first",
    "start": "1644000",
    "end": "1649970"
  },
  {
    "text": "we need to give Prometheus the kubernetes api access so let's look at",
    "start": "1649970",
    "end": "1655040"
  },
  {
    "text": "the now API server is a little bit of a tricky situation because you may or may",
    "start": "1655040",
    "end": "1662929"
  },
  {
    "text": "not have labels for the for the backends for the API server it may be deployed as",
    "start": "1662929",
    "end": "1668870"
  },
  {
    "text": "a part it may be running as a process in the host but what we have here for those",
    "start": "1668870",
    "end": "1674179"
  },
  {
    "text": "kind of scenarios where the back-end can't be resolved reliably or you have a headless service kind of a scenario you",
    "start": "1674179",
    "end": "1680179"
  },
  {
    "text": "just have exposed a headless service inside kubernetes there is a construct which we have created it's essentially",
    "start": "1680179",
    "end": "1685970"
  },
  {
    "text": "two services construct this part here and you can specify the name of the",
    "start": "1685970",
    "end": "1691160"
  },
  {
    "text": "service and name space and see Liam will automatically start tracking what are the backends for this right so if I push",
    "start": "1691160",
    "end": "1698240"
  },
  {
    "text": "this policy it will allow Prometheus to have kubernetes api access that empire",
    "start": "1698240",
    "end": "1703370"
  },
  {
    "text": "dog guy still won't have any access to the api server yeah so let's do that so you don't have",
    "start": "1703370",
    "end": "1711170"
  },
  {
    "text": "to worry about creating a cider block or figuring out my API server when the API",
    "start": "1711170",
    "end": "1717380"
  },
  {
    "text": "server changes or scales out you don't have to worry about tracking all of those you just used the API specification and it's going to go ahead",
    "start": "1717380",
    "end": "1723620"
  },
  {
    "text": "and pull the pull the backend information from there okay and so once",
    "start": "1723620",
    "end": "1731809"
  },
  {
    "text": "we have given that access let's look at the how do we want to enable the matrix axis",
    "start": "1731809",
    "end": "1738220"
  },
  {
    "text": "now Prometheus is a good example of a service which only needs a restricted",
    "start": "1738220",
    "end": "1743800"
  },
  {
    "text": "access it has no point getting an access of a put or a post or a delete it just",
    "start": "1743800",
    "end": "1749500"
  },
  {
    "text": "simply does an HTTP GET and that's all it needs for a for a legitimate action ok so if let's say Prometheus pod gets",
    "start": "1749500",
    "end": "1757990"
  },
  {
    "text": "compromised and you don't have any API level security you have just given Prometheus access to all of your",
    "start": "1757990",
    "end": "1764790"
  },
  {
    "text": "endpoints potentially even port 80 endpoints that have / matrix exposed and",
    "start": "1764790",
    "end": "1770050"
  },
  {
    "text": "it if it gets compromised you have a whole bunch of post and deletes and random actions going on over there right",
    "start": "1770050",
    "end": "1775300"
  },
  {
    "text": "just piggybacking off of a really allow transaction so for that what you can do",
    "start": "1775300",
    "end": "1780400"
  },
  {
    "text": "is using cilium you can specify the labels you can specify the port that hey",
    "start": "1780400",
    "end": "1785770"
  },
  {
    "text": "the traffic can go to any port 1990 and scrap the matrix or any port 80 but you",
    "start": "1785770",
    "end": "1791380"
  },
  {
    "text": "can restrict it to just doing an HTTP GET nothing else you can't do put I can't do post delete none of that",
    "start": "1791380",
    "end": "1798100"
  },
  {
    "text": "and this actually leverages envoy so for in order for to parse the traffic and filter see Liam will see Liam has an",
    "start": "1798100",
    "end": "1804820"
  },
  {
    "text": "envoy built-in it will route the traffic using socket redirections and such and efficient key parse it out and block the",
    "start": "1804820",
    "end": "1811929"
  },
  {
    "text": "traffic yeah so let's find the helium",
    "start": "1811929",
    "end": "1818250"
  },
  {
    "text": "endpoint for Prometheus and put that in",
    "start": "1818250",
    "end": "1824190"
  },
  {
    "text": "put that over here so that we can monitor what is going on so this is the endpoint list for this so we say see",
    "start": "1824190",
    "end": "1830320"
  },
  {
    "text": "Liam monitor - - this guy you see it's",
    "start": "1830320",
    "end": "1837970"
  },
  {
    "text": "having a lot of drops right it's going to various places and it's not able to reach anything so let's first push the matrix dot llamó",
    "start": "1837970",
    "end": "1848490"
  },
  {
    "text": "this will start functioning and we can see the effect of that in the graph on our dashboard as well",
    "start": "1848490",
    "end": "1855750"
  },
  {
    "text": "so once i refresh this hopefully the matrix should start coming in and there you go the matrix starts coming in the",
    "start": "1861380",
    "end": "1867120"
  },
  {
    "text": "prometheus is just very chatty so it's kind of hard to parse what is going on over here that's why I created that Empire dog",
    "start": "1867120",
    "end": "1874080"
  },
  {
    "text": "howl is kind of hard to know what is getting dropped so now we have our application functioning back this is",
    "start": "1874080",
    "end": "1881790"
  },
  {
    "text": "much more secure than the previous is what we started about ten minutes ago everything is allowed to talk to",
    "start": "1881790",
    "end": "1887550"
  },
  {
    "text": "everything here and monitoring is a very good application to relate to but you have many different services which are",
    "start": "1887550",
    "end": "1893130"
  },
  {
    "text": "probably don't have any policies in place this way you can iterate one step",
    "start": "1893130",
    "end": "1900000"
  },
  {
    "text": "at a time and you can just allow the services that you want the key question that arise out well ow and that's at",
    "start": "1900000",
    "end": "1907830"
  },
  {
    "text": "least you see the the direction over there that see Liam exposes a socket a set of logs and and communication that",
    "start": "1907830",
    "end": "1914820"
  },
  {
    "text": "is going on that information can be used to build who should be allowed who is getting dropped and things like that",
    "start": "1914820",
    "end": "1920310"
  },
  {
    "text": "right one other policy that I wanted as I mentioned earlier was these are all",
    "start": "1920310",
    "end": "1926820"
  },
  {
    "text": "the policies that we applied already now the question of external egress access",
    "start": "1926820",
    "end": "1932400"
  },
  {
    "text": "so let's say our our customer the Star Wars Empire foundation team they want to",
    "start": "1932400",
    "end": "1938970"
  },
  {
    "text": "backup the matrix right so they want to put an agent inside from the the Prometheus and they want to take a copy",
    "start": "1938970",
    "end": "1944730"
  },
  {
    "text": "and put it in s3 or something now this kind of a backup service is very common",
    "start": "1944730",
    "end": "1950030"
  },
  {
    "text": "but again this backup service should only be able to go to s3 they should not be looking up at crypto mining comm or",
    "start": "1950030",
    "end": "1956970"
  },
  {
    "text": "something like that right so let's see how we can restrict the and this one I'm",
    "start": "1956970",
    "end": "1963750"
  },
  {
    "text": "going to make it a little bit bigger so again the test our dogfooding app over",
    "start": "1963750",
    "end": "1969780"
  },
  {
    "text": "here and the same label based identification for cube dns same port 53",
    "start": "1969780",
    "end": "1976020"
  },
  {
    "text": "axis but we have added one more condition here which says that you can",
    "start": "1976020",
    "end": "1981660"
  },
  {
    "text": "only do dns lookup for s3 and amazon AWS like star dot s3 dot any region inside",
    "start": "1981660",
    "end": "1989370"
  },
  {
    "text": "amazon AWS you can't even look up anything else you are a backup service you have no business looking up anything",
    "start": "1989370",
    "end": "1995159"
  },
  {
    "text": "else this is really tightening the knot to the net like it's just truly least",
    "start": "1995159",
    "end": "2000460"
  },
  {
    "text": "privileged for any of the parts and services that you can't do anything more than what you are required to do the",
    "start": "2000460",
    "end": "2006889"
  },
  {
    "text": "second part of it is okay fine you have done the DNS lookup where can you make the tcp/ip connections to and that's",
    "start": "2006889",
    "end": "2013759"
  },
  {
    "text": "this part which says like well those are the domains you can look up and those are the domains that you can connect to",
    "start": "2013759",
    "end": "2018830"
  },
  {
    "text": "so same pattern based fqdn rules which will control egress and you can combine",
    "start": "2018830",
    "end": "2024859"
  },
  {
    "text": "them with the four four three now one of the challenges with the external service ex is going over TLS is there is no good",
    "start": "2024859",
    "end": "2031969"
  },
  {
    "text": "way to do TLS visibility unless you two want to go try out trusted",
    "start": "2031969",
    "end": "2037489"
  },
  {
    "text": "man-in-the-middle models and that's some of the things that we are working with around ke TLS once that is there you can",
    "start": "2037489",
    "end": "2043249"
  },
  {
    "text": "even add sections what exactly can you do this service should just be able to put and that state it should not be able",
    "start": "2043249",
    "end": "2049970"
  },
  {
    "text": "to get all the buckets and things like that because you may have other buckets there so you can see the direction of where this is going right now it",
    "start": "2049970",
    "end": "2056960"
  },
  {
    "text": "controls access to external service on a port end and a DNS level once we have",
    "start": "2056960",
    "end": "2062000"
  },
  {
    "text": "the ke TLS and those things sorted out in the kernel and an enforcement then we",
    "start": "2062000",
    "end": "2067760"
  },
  {
    "text": "can you'll see the HTTP Clause over here as well then it will again very tight",
    "start": "2067760",
    "end": "2073190"
  },
  {
    "text": "security around this so let's see if this pattern based policy works this is",
    "start": "2073190",
    "end": "2079908"
  },
  {
    "text": "very new so I pulled in the nightly build from couple of days ago so let's",
    "start": "2079909",
    "end": "2086089"
  },
  {
    "text": "see if it cooperates right so and I'm going to go use the to access some of",
    "start": "2086089",
    "end": "2094490"
  },
  {
    "text": "our public assets that we have now it",
    "start": "2094490",
    "end": "2102710"
  },
  {
    "text": "should be allowed to go to this star dot s3 US west to region right because that",
    "start": "2102710",
    "end": "2107900"
  },
  {
    "text": "matches the pattern it's going to a particular bucket in a particular region and I I don't have any authentic oaken's",
    "start": "2107900",
    "end": "2114349"
  },
  {
    "text": "enabled so the l3 communication was allowed it failed at an access denied l7 level okay so the the pattern based",
    "start": "2114349",
    "end": "2121700"
  },
  {
    "text": "enforcement and things like that well as I say if it can go to google.com or Twilio dot-com or something like that",
    "start": "2121700",
    "end": "2129010"
  },
  {
    "text": "this should not even allow it to do a DNS lookup we should get a resolved host error or something like that right",
    "start": "2129010",
    "end": "2135250"
  },
  {
    "text": "because we didn't even allow it to do DNS lookups this prevents against IP",
    "start": "2135250",
    "end": "2140660"
  },
  {
    "text": "spoofing and DNS poisoning in those kind of attacks since we are using so much of DNS now it's only a matter of time that",
    "start": "2140660",
    "end": "2147950"
  },
  {
    "text": "they rear their head so just a quick recap this is all the policies that we",
    "start": "2147950",
    "end": "2156440"
  },
  {
    "text": "enforced we started with we started with",
    "start": "2156440",
    "end": "2163910"
  },
  {
    "text": "allowed within namespace then we talked about pattern based DNS API aware and why that is needed we used special",
    "start": "2163910",
    "end": "2172190"
  },
  {
    "text": "construct like to services to secure the kubernetes api access we used a special",
    "start": "2172190",
    "end": "2178070"
  },
  {
    "text": "construct reserved world to control ingress egress and then I described how we distinguish between the host in the",
    "start": "2178070",
    "end": "2184460"
  },
  {
    "text": "world traffic yeah there's a lot more API services that are very common so we",
    "start": "2184460",
    "end": "2189650"
  },
  {
    "text": "have added support for them more importantly we have created a extension framework for on voice so there is a",
    "start": "2189650",
    "end": "2195500"
  },
  {
    "text": "golang based extension framework you can write your own custom protocol or if you want to contribute to one of the popular",
    "start": "2195500",
    "end": "2201080"
  },
  {
    "text": "protocols that's also pretty easy you can use go go based on voyage tension to do that yeah the I've added this here if",
    "start": "2201080",
    "end": "2209420"
  },
  {
    "text": "somebody is browsing the slides later on this is the same policies that I showed over there and this is some of the newer",
    "start": "2209420",
    "end": "2217100"
  },
  {
    "text": "stuff that is coming in now securing one of the clusters is one thing but pretty",
    "start": "2217100",
    "end": "2222380"
  },
  {
    "text": "much every customer that we talked to now has many clusters for one reason or the other and there is often a need to",
    "start": "2222380",
    "end": "2229010"
  },
  {
    "text": "share the access across multiple clusters is use the same service identity across different clusters so",
    "start": "2229010",
    "end": "2235550"
  },
  {
    "text": "what we have done is created a notion of cluster mesh it's a very easy way to set up connectivity across multiple clusters",
    "start": "2235550",
    "end": "2242050"
  },
  {
    "text": "and the security identities also are across all the clusters so if you have",
    "start": "2242050",
    "end": "2247490"
  },
  {
    "text": "that Deathstar service running in one cluster and also in another cluster it will get the same security identity and",
    "start": "2247490",
    "end": "2254570"
  },
  {
    "text": "this is available I think it's already posted as a blog in our one dot preview more of the details are",
    "start": "2254570",
    "end": "2261290"
  },
  {
    "text": "available in Thomas's talk on how we actually do it by reading the HDD across each each of the cluster and",
    "start": "2261290",
    "end": "2266810"
  },
  {
    "text": "understanding the identities but on your part the effort is really around how do",
    "start": "2266810",
    "end": "2272030"
  },
  {
    "text": "you secure the connectivity across these clusters at a lower sort of l2 fabric of",
    "start": "2272030",
    "end": "2278660"
  },
  {
    "text": "do you need to create IPSec or VPN gateways and things like that once you have established that connectivity we",
    "start": "2278660",
    "end": "2284660"
  },
  {
    "text": "can take care of connecting all the community services and securing them and",
    "start": "2284660",
    "end": "2290320"
  },
  {
    "text": "this is personally my super favorite this is I am very excited about the",
    "start": "2290320",
    "end": "2296480"
  },
  {
    "text": "opportunity that KT LS will unlock a lot of the sophisticated compromise that we",
    "start": "2296480",
    "end": "2302750"
  },
  {
    "text": "see now are actually piggybacking off of an encrypted channel with authorize tokens and everything and the",
    "start": "2302750",
    "end": "2308780"
  },
  {
    "text": "fundamental problem there is just visibility you don't even know who this compromise is what they're doing just",
    "start": "2308780",
    "end": "2314360"
  },
  {
    "text": "they're going in the encrypted channel so K TLS is a really nifty concept the",
    "start": "2314360",
    "end": "2320510"
  },
  {
    "text": "asymmetric part of the exchange happens just like it it happens always right the",
    "start": "2320510",
    "end": "2326390"
  },
  {
    "text": "client and the server they will do the asymmetric key part the once the",
    "start": "2326390",
    "end": "2331520"
  },
  {
    "text": "handshake over there is done the symmetric key is offloaded to the kernel so then the kernel will do the encryption for you",
    "start": "2331520",
    "end": "2337550"
  },
  {
    "text": "you don't have to worry about doing that encryption in the app so what is the benefit of this between the user space",
    "start": "2337550",
    "end": "2343820"
  },
  {
    "text": "and the kernel the packet is unencrypted and that's where you can attach a BPA program and inspect the headers and",
    "start": "2343820",
    "end": "2349250"
  },
  {
    "text": "things like that or redirect it to a proxy so you can get visibility and enforcement in a TLS communication",
    "start": "2349250",
    "end": "2355010"
  },
  {
    "text": "before the symmetric encryption happens on the data payload right and the biggest benefit of this is no route see",
    "start": "2355010",
    "end": "2361640"
  },
  {
    "text": "a propagation none of that multi chain certificate headaches of where this where all do I need to propagate the",
    "start": "2361640",
    "end": "2367910"
  },
  {
    "text": "root CA yeah so this is personally my favorite new feature it's going to be a",
    "start": "2367910",
    "end": "2375050"
  },
  {
    "text": "little bit of a grind to get it out but it's definitely very powerful but in in a naturally you see that this is why I",
    "start": "2375050",
    "end": "2382100"
  },
  {
    "text": "started with BPF like the program's it allows you flexibility to attach this programs at various levels whether for",
    "start": "2382100",
    "end": "2388730"
  },
  {
    "text": "TLS visibility packet filtering firewall and things like that and see Liam is just making it easy for",
    "start": "2388730",
    "end": "2395390"
  },
  {
    "text": "you to tap into this power and and run it in the communities in your cluster",
    "start": "2395390",
    "end": "2400570"
  },
  {
    "text": "that's I survived that talk so that's pretty good",
    "start": "2400570",
    "end": "2405820"
  },
  {
    "text": "[Applause]",
    "start": "2405820",
    "end": "2408749"
  }
]