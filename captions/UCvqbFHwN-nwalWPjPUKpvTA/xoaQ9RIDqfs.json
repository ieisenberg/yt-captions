[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "all right welcome this is the Prometheus 2023 ecosystem update uh my name is Ben",
    "start": "120",
    "end": "5879"
  },
  {
    "text": "coochi I'm a principal engineer at Reddit and I'm also a member of the Prometheus developer team with me is Julian you want to give yourself a quick",
    "start": "5879",
    "end": "12000"
  },
  {
    "text": "intro yes so I am maintaining the prome server and uh my work is supporting Prometheus customer all day long so cool",
    "start": "12000",
    "end": "20000"
  },
  {
    "text": "so uh who's used Prometheus 1.0 oh wow a lot of 1.0 users that's",
    "start": "20000",
    "end": "26279"
  },
  {
    "text": "pretty cool um uh who's not using Prometheus yet cool nice well welcome uh",
    "start": "26279",
    "end": "36160"
  },
  {
    "text": "what is Prometheus Prometheus is a metric based monitoring system um and uh it's designed to pull data",
    "start": "36160",
    "end": "45039"
  },
  {
    "text": "from all of your servers and all of your software uh infrastructure uh",
    "start": "45039",
    "end": "50440"
  },
  {
    "text": "applications uh pretty much anything uh it provides a basic uh built-in web",
    "start": "50440",
    "end": "56480"
  },
  {
    "text": "server uh data storage and allows you to do uh uh extremely powerful data queries",
    "start": "56480",
    "end": "62160"
  },
  {
    "text": "with prom qo um and it can scale from anywhere from",
    "start": "62160",
    "end": "67680"
  },
  {
    "text": "uh sitting on a Raspberry Pi to uh Global uh",
    "start": "67680",
    "end": "73200"
  },
  {
    "start": "73000",
    "end": "166000"
  },
  {
    "text": "hyperscaling so uh Prometheus started in 201 uh2 back at SoundCloud where we had",
    "start": "73200",
    "end": "80040"
  },
  {
    "text": "uh already started experimenting with container platforms uh before kubernetes even existed and we had the problem of",
    "start": "80040",
    "end": "87799"
  },
  {
    "text": "we've got all these containers but we we can get data out of them with stany but stany doesn't actually let us know that",
    "start": "87799",
    "end": "93280"
  },
  {
    "text": "the containers are running so we needed a an active polling based monitoring platform and there really wasn't a good",
    "start": "93280",
    "end": "99600"
  },
  {
    "text": "polling uh polling system at the time so Prometheus was created to actively monitor the containers running in the",
    "start": "99600",
    "end": "105320"
  },
  {
    "text": "container cluster um and uh it's been fully open source the entire time",
    "start": "105320",
    "end": "114040"
  },
  {
    "text": "um uh I don't know why it says 2015 but Prometheus was created as as open source",
    "start": "114040",
    "end": "119920"
  },
  {
    "text": "since the beginning in 2012 uh and we joined the cncf and released uh 1.0 in",
    "start": "119920",
    "end": "126680"
  },
  {
    "text": "2016 uh Prometheus 20 uh 2.0 came out with a completely new tsdb in",
    "start": "126680",
    "end": "132920"
  },
  {
    "text": "2017 and uh we created we were a graduated project of the cncf in",
    "start": "132920",
    "end": "138720"
  },
  {
    "text": "2018 um uh we've got a cool documentary if you want to if you can scan that bar",
    "start": "138720",
    "end": "143920"
  },
  {
    "text": "code oh that's a little off the screen um",
    "start": "143920",
    "end": "150280"
  },
  {
    "text": "uh but yeah there's a Prometheus documentary up on YouTube it's pretty great um we have lots and lots of",
    "start": "150280",
    "end": "158239"
  },
  {
    "text": "maintainers lots of contributors uh and it's a a big and growing community of",
    "start": "158239",
    "end": "166159"
  },
  {
    "start": "166000",
    "end": "215000"
  },
  {
    "text": "people uh so we've been you want to talk about the",
    "start": "166159",
    "end": "171599"
  },
  {
    "text": "community yeah so first of all uh one month ago prome crossed 50k GitHub star",
    "start": "171599",
    "end": "177360"
  },
  {
    "text": "so that's was a really nice achievement for all the community and basically uh in the last year we",
    "start": "177360",
    "end": "183040"
  },
  {
    "text": "have expanded the promotive team so we have added a lot of new members across",
    "start": "183040",
    "end": "188519"
  },
  {
    "text": "the different uh client libraries that we have so like uh we have welcome the",
    "start": "188519",
    "end": "194640"
  },
  {
    "text": "new the will be maners we have now an official rust implementation rust client",
    "start": "194640",
    "end": "199879"
  },
  {
    "text": "Library so we are continuing to expanding the team and in the coming years we are also working more on the",
    "start": "199879",
    "end": "205599"
  },
  {
    "text": "governance of pruse to be able to really scale up the team and the decision making process inside of the pr",
    "start": "205599",
    "end": "212680"
  },
  {
    "text": "team so that's all the new members that we have welcoming the last year so uh",
    "start": "212680",
    "end": "218120"
  },
  {
    "start": "215000",
    "end": "413000"
  },
  {
    "text": "now we can go a little bit over more of the detail the Prometheus architecture uh so the the cool thing with Prometheus",
    "start": "218120",
    "end": "226439"
  },
  {
    "text": "is uh it can communicate with your targets it's an agentless monitoring system so every uh application can inst",
    "start": "226439",
    "end": "234200"
  },
  {
    "text": "be instrumented directly so you don't have to have a a middle agent to talk to",
    "start": "234200",
    "end": "239560"
  },
  {
    "text": "uh so Prometheus client libraries expose the metric data for those apps uh and",
    "start": "239560",
    "end": "245920"
  },
  {
    "text": "then it can also grab data from your systems and your other uh services and c",
    "start": "245920",
    "end": "251760"
  },
  {
    "text": "groups and other data you know your data stores and those have exporters uh so",
    "start": "251760",
    "end": "256880"
  },
  {
    "text": "that will convert uh internal systems uh data like stuff from the Linux kernel",
    "start": "256880",
    "end": "262520"
  },
  {
    "text": "all the data in slpr if you've got a mySQL database server it'll query make",
    "start": "262520",
    "end": "267720"
  },
  {
    "text": "MySQL queries into the internal information schemas and performance schemas and expose that as Prometheus",
    "start": "267720",
    "end": "273520"
  },
  {
    "text": "metrics and similar you can get the data from cgroups and all the underlying infrastructure uh all of that gets",
    "start": "273520",
    "end": "279720"
  },
  {
    "text": "collected into your Prometheus time Ser database so that you can get all of the data about all of the running systems in",
    "start": "279720",
    "end": "285400"
  },
  {
    "text": "a single uh view uh which allows you to make much smarter uh monitoring",
    "start": "285400",
    "end": "290919"
  },
  {
    "text": "decisions so you can look at say hey uh I'm getting a lot of requests per second",
    "start": "290919",
    "end": "296720"
  },
  {
    "text": "uh and I'm using a lot of CPU so why don't we normalize how much CPU per",
    "start": "296720",
    "end": "302120"
  },
  {
    "text": "request per second we're doing and decide if that's good or bad versus just looking at oh the CPU is really high",
    "start": "302120",
    "end": "308280"
  },
  {
    "text": "that doesn't really isn't uh isn't a super useful uh thing to alert on whereas if the uh request p uh the CPU",
    "start": "308280",
    "end": "316320"
  },
  {
    "text": "per request per second goes way up then you might want to have an alert that hey something has gotten less",
    "start": "316320",
    "end": "322000"
  },
  {
    "text": "efficient um uh Prometheus also has a concept of",
    "start": "322000",
    "end": "327199"
  },
  {
    "text": "called service Discovery instead of having to uh program your targets to",
    "start": "327199",
    "end": "333160"
  },
  {
    "text": "know where where they are and where the monitoring system is Prometheus can reach into your uh your inventory",
    "start": "333160",
    "end": "338960"
  },
  {
    "text": "databases whether it's kubernetes uh or Azure or gcp or AWS it can read all of",
    "start": "338960",
    "end": "346800"
  },
  {
    "text": "your uh Target lists dynamically and then collect all the data so you have a",
    "start": "346800",
    "end": "352520"
  },
  {
    "text": "positive source of truth of what should be installed and Prometheus knows to go and collect that data and provide you",
    "start": "352520",
    "end": "358759"
  },
  {
    "text": "the um the not just the metric data but also that the availability of your",
    "start": "358759",
    "end": "366120"
  },
  {
    "text": "targets uh then we uh when you're done when you've got all that data now you",
    "start": "366120",
    "end": "371160"
  },
  {
    "text": "want to visualize it so there's external uh uh display platforms like grafana and",
    "start": "371160",
    "end": "377360"
  },
  {
    "text": "the web UI and uh other automation like kada so if you have a kubernetes cluster",
    "start": "377360",
    "end": "382560"
  },
  {
    "text": "you can Auto use automatic scaling based on your Prometheus data uh and then of course",
    "start": "382560",
    "end": "389919"
  },
  {
    "text": "the Prometheus is not just a Time series database and metrics collection it's also designed to be a a full monitoring",
    "start": "389919",
    "end": "396800"
  },
  {
    "text": "platform and so you can write your expressive promql alert rules uh based",
    "start": "396800",
    "end": "402560"
  },
  {
    "text": "on your uh service level objectives or however you want to write your alerts and that will go out to the Prometheus",
    "start": "402560",
    "end": "408360"
  },
  {
    "text": "alert manager which will notify your uh your on call that you've got a problem so Prometheus is watching your",
    "start": "408360",
    "end": "415400"
  },
  {
    "start": "413000",
    "end": "476000"
  },
  {
    "text": "systems when you while you're sleeping uh so the data model you want to go through",
    "start": "415400",
    "end": "421879"
  },
  {
    "text": "that yes so basically uh pretus uh is made to store time series so each time",
    "start": "421879",
    "end": "428879"
  },
  {
    "text": "Ser has an identifier and then we also have a time and a value for uh those",
    "start": "428879",
    "end": "434720"
  },
  {
    "text": "identifiers and basically uh what what is really nice about the promus model is that uh the identifier is actually uh a",
    "start": "434720",
    "end": "443560"
  },
  {
    "text": "set of labels so the there is a metric name that tells you okay this is what this number is about but you also have",
    "start": "443560",
    "end": "450160"
  },
  {
    "text": "labels that can help you categorize okay this is coming from that part this is that HTTP error code and then you you",
    "start": "450160",
    "end": "457919"
  },
  {
    "text": "can um actually be really free to use thearchy that you want in your own data",
    "start": "457919",
    "end": "464120"
  },
  {
    "text": "model in your the one that will match your topology um and that data model is",
    "start": "464120",
    "end": "470159"
  },
  {
    "text": "built in into every part of pretus from the service Discovery to the query",
    "start": "470159",
    "end": "475759"
  },
  {
    "text": "language and one of the cool things with the uh the data model model of Prometheus is metric names are a great",
    "start": "475759",
    "end": "482400"
  },
  {
    "start": "476000",
    "end": "541000"
  },
  {
    "text": "identifier which allows you to se to associate a metric name with a piece of",
    "start": "482400",
    "end": "487479"
  },
  {
    "text": "source code and so it's really easy to know oh hey as a developer or even as",
    "start": "487479",
    "end": "492720"
  },
  {
    "text": "somebody who's maybe not familiar with a with a codebase you're coming in as an SRE and you're like what is this thing",
    "start": "492720",
    "end": "498159"
  },
  {
    "text": "well you can find that metric name for your service in your codebase and go oh",
    "start": "498159",
    "end": "504000"
  },
  {
    "text": "that in that metric is going because this line of code changed um and so now uh when you want",
    "start": "504000",
    "end": "511120"
  },
  {
    "text": "to get data out of Prometheus uh there is a very high power uh uh query language that allows you to do complex",
    "start": "511120",
    "end": "518360"
  },
  {
    "text": "Vector expressions and uh complex data analysis with a very simple language uh",
    "start": "518360",
    "end": "524279"
  },
  {
    "text": "and uh uh unlike an SQL language it's designed to deal with all of those",
    "start": "524279",
    "end": "530120"
  },
  {
    "text": "labels and all that label uh manipulation and matching uh and things so you don't have to do it it makes",
    "start": "530120",
    "end": "536600"
  },
  {
    "text": "joins of data much easier than with an SQL",
    "start": "536600",
    "end": "541720"
  },
  {
    "start": "541000",
    "end": "590000"
  },
  {
    "text": "language so this is an example of uh pretus query that just enables you to",
    "start": "544920",
    "end": "550800"
  },
  {
    "text": "easy query for um the the partition in",
    "start": "550800",
    "end": "556040"
  },
  {
    "text": "an infrastructure with more than 100 gab of capacity uh which are different than root so you can see that oh in a very",
    "start": "556040",
    "end": "562600"
  },
  {
    "text": "simple query you can express quite a complex question and this is going",
    "start": "562600",
    "end": "567720"
  },
  {
    "text": "across your complete infrastructure because we only care about the mo Point label in this case and then we can do a",
    "start": "567720",
    "end": "573640"
  },
  {
    "text": "quite easy numeric comparison based on that and then similarly you can uh take",
    "start": "573640",
    "end": "579680"
  },
  {
    "text": "those expressions and write alerts uh and so basically any any result of that threshold will allow you to create an",
    "start": "579680",
    "end": "586200"
  },
  {
    "text": "alert for some kind of problem like for example 500 errors coming from your",
    "start": "586200",
    "end": "591560"
  },
  {
    "start": "590000",
    "end": "634000"
  },
  {
    "text": "application and so uh there um there are a lot of things out there that don't speak Prometheus and so there's a huge",
    "start": "591560",
    "end": "598320"
  },
  {
    "text": "ecosystem of uh I think at least a thousand or two different uh bridges",
    "start": "598320",
    "end": "603880"
  },
  {
    "text": "that will Bridge from other systems into Prometheus and so that there's a huge uh",
    "start": "603880",
    "end": "609760"
  },
  {
    "text": "number of these out there uh both maintained by the Prometheus and the Prometheus Community as well as people",
    "start": "609760",
    "end": "614800"
  },
  {
    "text": "just writing a thing that says oh hey I've got my DSL router how do I get the",
    "start": "614800",
    "end": "620160"
  },
  {
    "text": "uh current DSL State out of my DSL router well there's a there's an exporter for that uh and so it's really",
    "start": "620160",
    "end": "626279"
  },
  {
    "text": "easy to get data into Prometheus from a variety of sources uh and the Prometheus client libraries",
    "start": "626279",
    "end": "632079"
  },
  {
    "text": "make it also easy to write your own so it's also important to know that to expose a metric in Primitives you just",
    "start": "632079",
    "end": "638160"
  },
  {
    "start": "634000",
    "end": "811000"
  },
  {
    "text": "need to be able to serve HTTP and just text over HTTP is enough to to to serve",
    "start": "638160",
    "end": "643920"
  },
  {
    "text": "metrix Su Primitives itself so what's new in 2023",
    "start": "643920",
    "end": "651279"
  },
  {
    "text": "um so yeah let's look at the new stuff uh in pretties that we have worked on",
    "start": "651279",
    "end": "657360"
  },
  {
    "text": "this year the first one is the native histogram so basically um for those who are not familiar with the concept of um",
    "start": "657360",
    "end": "664200"
  },
  {
    "text": "histograms U it's a way of measuring like um distribution of of data and",
    "start": "664200",
    "end": "671079"
  },
  {
    "text": "prome is used to have like an histogram being multiple time series which is uh",
    "start": "671079",
    "end": "676920"
  },
  {
    "text": "the S uh the first image here is like what we used to have to show the latency",
    "start": "676920",
    "end": "682279"
  },
  {
    "text": "of a service uh and you can see okay um you can see that when it's R like there",
    "start": "682279",
    "end": "688800"
  },
  {
    "text": "is a lot of requests going on so you can see at this at this stage there are a lot of uh requests that are below uh 5 m",
    "start": "688800",
    "end": "696200"
  },
  {
    "text": "5 milliseconds but what the classic histograms or we call them they are very",
    "start": "696200",
    "end": "701680"
  },
  {
    "text": "limited because each time theory has a lot of cost so we have worked on the new",
    "start": "701680",
    "end": "707120"
  },
  {
    "text": "native histogram system that enables you to get much more granularity so the data",
    "start": "707120",
    "end": "712600"
  },
  {
    "text": "that you see on both pictures uh it is the same data but it is using the classic histograms and the new histogram",
    "start": "712600",
    "end": "719399"
  },
  {
    "text": "so with the newams you can clearly see that actually like the the request are",
    "start": "719399",
    "end": "725200"
  },
  {
    "text": "yes they are below five five milliseconds but they actually between",
    "start": "725200",
    "end": "730519"
  },
  {
    "text": "um 125 milliseconds and uh and 9 millisecond so you get a much better",
    "start": "730519",
    "end": "737399"
  },
  {
    "text": "story reading of the story of what your services are actually doing thanks to that new approach and the nice thing is",
    "start": "737399",
    "end": "743600"
  },
  {
    "text": "because we made them native in Primitives it means that instead of being like a set of time series it is a",
    "start": "743600",
    "end": "749800"
  },
  {
    "text": "new object that we store in the time series database of point so it is very very efficient it en it en it enables us",
    "start": "749800",
    "end": "757560"
  },
  {
    "text": "to have many values and a redefine granularity in the histograms while",
    "start": "757560",
    "end": "762800"
  },
  {
    "text": "keeping the cost almost I think even lower than the classic histogram so you can you can get about 10 times the",
    "start": "762800",
    "end": "769360"
  },
  {
    "text": "resolution of uh your histogram buckets with uh the same cost in terms of memory",
    "start": "769360",
    "end": "775320"
  },
  {
    "text": "and CPU usage in the server so it's it is a huge huge Improvement in terms of uh if you've ever run into oh my",
    "start": "775320",
    "end": "782320"
  },
  {
    "text": "histogram buckets have too much cardinality I have to reduce the number of buckets well now you don't have to think about that anymore it's just",
    "start": "782320",
    "end": "790320"
  },
  {
    "text": "automatic so this is a bunch of tools if you want to catch up on the on the new native histograms uh they are also",
    "start": "790560",
    "end": "797519"
  },
  {
    "text": "available natively in the go uh client libraries and there also now GA in the",
    "start": "797519",
    "end": "804120"
  },
  {
    "text": "Java Cent Library yep and there's cool things you can do with that additional his",
    "start": "804120",
    "end": "810760"
  },
  {
    "start": "811000",
    "end": "892000"
  },
  {
    "text": "then uh so another thing that you have been working on a lot in prometer uh and",
    "start": "813639",
    "end": "818880"
  },
  {
    "text": "this is like the the technical details but the really the Highlight is that we continue to dig into the performance of",
    "start": "818880",
    "end": "825160"
  },
  {
    "text": "the promit uh server itself so what we have done for example in this last year",
    "start": "825160",
    "end": "830480"
  },
  {
    "text": "is what we call the string labels builds which means that we have taken a bunch",
    "start": "830480",
    "end": "836000"
  },
  {
    "text": "the label representation in the promus memory which which was like a third of the um memory conception of promus and",
    "start": "836000",
    "end": "842959"
  },
  {
    "text": "we turned that into a different data structure that enable us to have a lot of memory gain so uh if you have if you",
    "start": "842959",
    "end": "851880"
  },
  {
    "text": "are using pret from one or two years ago and you just upgrade now to the latest releases you will find a lot of",
    "start": "851880",
    "end": "858199"
  },
  {
    "text": "performance gains uh just by upgrading the server itself and we are continuing to working more and more on on those so",
    "start": "858199",
    "end": "865279"
  },
  {
    "text": "we are introducing string inter turning later on u in the coming that which will even further reduce the CPU and the",
    "start": "865279",
    "end": "873199"
  },
  {
    "text": "memory usage of yeah we we've basically uh over the last year have done a lot of",
    "start": "873199",
    "end": "878320"
  },
  {
    "text": "performance optim optimizations and if you went to Brian's talk yesterday or if or if you didn't go to Brian's talk",
    "start": "878320",
    "end": "883639"
  },
  {
    "text": "yesterday we've basically cut the amount of memory in Prometheus in half over the last couple years for the same uh for the same uh",
    "start": "883639",
    "end": "891759"
  },
  {
    "text": "performance or the same the same number of metrics so we are also adding features",
    "start": "891759",
    "end": "897519"
  },
  {
    "text": "to the uh the regular um promi um user",
    "start": "897519",
    "end": "903079"
  },
  {
    "text": "experience like we we have now in the alerting if you have alerts that are uh",
    "start": "903079",
    "end": "909600"
  },
  {
    "text": "crossing the threshold by a bit or you you see that they are flapping a bit we now have a new feature called ke firing",
    "start": "909600",
    "end": "915320"
  },
  {
    "text": "for which will help you reduce the flapping of your alerts uh and which will reduce the the noise with the",
    "start": "915320",
    "end": "922680"
  },
  {
    "text": "resolved Aller that you might get so those are kind um we are still working on the basic user EXP of prus to improve",
    "start": "922680",
    "end": "930000"
  },
  {
    "text": "it and to uh make it a lot easier for you to write your liting rules because before that you could do it by uh having",
    "start": "930000",
    "end": "937000"
  },
  {
    "text": "complex pru Expressions but we also try to keep PR simple and easy for the",
    "start": "937000",
    "end": "942639"
  },
  {
    "text": "people who are new to the community so we also bring some nice features like",
    "start": "942639",
    "end": "948240"
  },
  {
    "start": "947000",
    "end": "985000"
  },
  {
    "text": "that so next to that we are also we have also introduced a way to split your",
    "start": "948319",
    "end": "953440"
  },
  {
    "text": "pruse configuration first so we see that people were using pruse and traditionally we had one big prome tml",
    "start": "953440",
    "end": "959160"
  },
  {
    "text": "file and almost everything was in that file now you can actually decide to have multiple config maps and to just uh like",
    "start": "959160",
    "end": "966560"
  },
  {
    "text": "use cryp config files to like um split your configuration and this then also",
    "start": "966560",
    "end": "971680"
  },
  {
    "text": "help you to um to delegate part of your PR configuration to different teams if",
    "start": "971680",
    "end": "977120"
  },
  {
    "text": "you if you want to do that so it also helps with the relability of your configuration your PR",
    "start": "977120",
    "end": "984120"
  },
  {
    "start": "985000",
    "end": "1134000"
  },
  {
    "text": "configuration and what we also have added but this is very experimental uh we we have started working on open",
    "start": "986319",
    "end": "993199"
  },
  {
    "text": "Telemetry and we have added support for a native open telemetric receiver inside pret so if you have a TLP data which is",
    "start": "993199",
    "end": "1002079"
  },
  {
    "text": "already made so at the moment we don't do any transformation of that LLP data but we have added support for it so um",
    "start": "1002079",
    "end": "1009160"
  },
  {
    "text": "we are really the the story is that we are really experimenting with open Telemetry natively in pretry so we want",
    "start": "1009160",
    "end": "1015360"
  },
  {
    "text": "to have a really nice user experience for the open tet users with pret uh we are also working on Native",
    "start": "1015360",
    "end": "1023600"
  },
  {
    "text": "compatibility like supporting like unic code in the metrix name so you can have the same metric and label names that you",
    "start": "1023600",
    "end": "1031280"
  },
  {
    "text": "have in your OTP Matrix pretus Matrix your traces uh your logs and we are also",
    "start": "1031280",
    "end": "1037880"
  },
  {
    "text": "working on a new way to support the Target in metadata that open deometry provides us also again we are looking",
    "start": "1037880",
    "end": "1045038"
  },
  {
    "text": "for ways that we will integrate that into the promql system and in the complete prome ecosystem to get a really",
    "start": "1045039",
    "end": "1050320"
  },
  {
    "text": "nice us experience and besides just Prometheus itself we've also been doing a lot of good cool work in the exporters in the",
    "start": "1050320",
    "end": "1057679"
  },
  {
    "text": "community uh for example in the SNMP exporter one of the biggest complaints and problems was uh the authentication",
    "start": "1057679",
    "end": "1064520"
  },
  {
    "text": "portion of the SNMP connection was uh mixed with the actual walks and Metric translation and so we've split that up",
    "start": "1064520",
    "end": "1071000"
  },
  {
    "text": "and so now you can uh uh specify a list of walks and a specify a list of",
    "start": "1071000",
    "end": "1076760"
  },
  {
    "text": "authentications in addition you can also do uh um multiple scrapes uh multiple",
    "start": "1076760",
    "end": "1083159"
  },
  {
    "text": "walks uh in the same scrape and so now you can specify you can more compose uh",
    "start": "1083159",
    "end": "1090159"
  },
  {
    "text": "you can compose your SNMP configurations better so who who actually has to use",
    "start": "1090159",
    "end": "1095640"
  },
  {
    "text": "SNMP nice it's great um same thing with mySQL uh the MySQL exporter now supports",
    "start": "1095640",
    "end": "1102440"
  },
  {
    "text": "the multi-target mode so if you have MySQL databases hosted in a cloud platform as say a manage my SQL database",
    "start": "1102440",
    "end": "1109240"
  },
  {
    "text": "you can now Point your Prometheus to a my single MySQL exporter and it will talk to all the cloud",
    "start": "1109240",
    "end": "1115320"
  },
  {
    "text": "databases uh same thing in the Java uh We've also released a new uh Java client",
    "start": "1115320",
    "end": "1120360"
  },
  {
    "text": "with open Petry uh support uh and Native histograms uh the alert manager uh has a",
    "start": "1120360",
    "end": "1127640"
  },
  {
    "text": "bunch of new receivers so you can send your uh alerts to other services like MST teams and",
    "start": "1127640",
    "end": "1134799"
  },
  {
    "text": "Discord uh the windows exporter is now an official premere methus project uh so if you've got Windows machines uh the",
    "start": "1134880",
    "end": "1142000"
  },
  {
    "text": "windows exporter is great for that we have also uh and we are also now",
    "start": "1142000",
    "end": "1150320"
  },
  {
    "start": "1144000",
    "end": "1184000"
  },
  {
    "text": "uh taking the the book scrap again in prome so the book scrap in a weekly",
    "start": "1150320",
    "end": "1155600"
  },
  {
    "text": "meeting uh happening every Tuesday at 11 UTC so if you want to join us and work",
    "start": "1155600",
    "end": "1161600"
  },
  {
    "text": "with us on Prom that's a really nice place because that's where we review the pool request where we TR the different",
    "start": "1161600",
    "end": "1167799"
  },
  {
    "text": "issues so and every week we you have members and community members joining that uh online call and really like",
    "start": "1167799",
    "end": "1175760"
  },
  {
    "text": "that's how I actually learn a lot about what uh what I know with prom is really by joining those meetings and seeing the",
    "start": "1175760",
    "end": "1181320"
  },
  {
    "text": "trade-offs that we have to make in the project uh We've also been trying to",
    "start": "1181320",
    "end": "1187080"
  },
  {
    "start": "1184000",
    "end": "1194000"
  },
  {
    "text": "revive the Prometheus ecosystem call uh time zones are hard uh but uh join us in",
    "start": "1187080",
    "end": "1192679"
  },
  {
    "text": "the community um we've also uh adopted an anible",
    "start": "1192679",
    "end": "1198840"
  },
  {
    "start": "1194000",
    "end": "1208000"
  },
  {
    "text": "collection so if you have uh bare metal nodes and you want to use anible uh you can now use an official Prometheus",
    "start": "1198840",
    "end": "1205039"
  },
  {
    "text": "Community uh anible to deploy so that's a bunch of other things",
    "start": "1205039",
    "end": "1210919"
  },
  {
    "start": "1208000",
    "end": "1229000"
  },
  {
    "text": "that are coming now uh in the point ecosystem which I hope we will be able to be next year on stage and tell you",
    "start": "1210919",
    "end": "1217039"
  },
  {
    "text": "that we have uh done all of that so we are working on metadata on a new UI for",
    "start": "1217039",
    "end": "1222480"
  },
  {
    "text": "manager we are improving a lot the remote right the native remote R of communities and we are adding even more",
    "start": "1222480",
    "end": "1227520"
  },
  {
    "text": "LP and lastly next year we will also release Point 3.0 so the 2.0 was 7 years",
    "start": "1227520",
    "end": "1234840"
  },
  {
    "start": "1229000",
    "end": "1265000"
  },
  {
    "text": "ago and basically you can uh get PRI 2.0 with your configuration and upgrade",
    "start": "1234840",
    "end": "1240159"
  },
  {
    "text": "straight away to the 248 that's coming out uh these week and it should all work",
    "start": "1240159",
    "end": "1245720"
  },
  {
    "text": "like we have not make any breaking change for users uh but we want to fix some mistakes to improve a lot user",
    "start": "1245720",
    "end": "1252400"
  },
  {
    "text": "experience so we will release a 3.0 so if you have any feedback that you want to offer to the team if you we are",
    "start": "1252400",
    "end": "1258400"
  },
  {
    "text": "really listening to users uh and this is a good time for like some bigger",
    "start": "1258400",
    "end": "1264520"
  },
  {
    "text": "changes cool so questions come up to the",
    "start": "1264520",
    "end": "1269840"
  },
  {
    "start": "1265000",
    "end": "1299000"
  },
  {
    "text": "mic so there is a microphone on on that side on either and on oh there is there",
    "start": "1269840",
    "end": "1275000"
  },
  {
    "text": "no there's only one over here do we have a hand mic we can hand",
    "start": "1275000",
    "end": "1281840"
  },
  {
    "text": "out or do you have to go to the podium",
    "start": "1281840",
    "end": "1286840"
  },
  {
    "text": "cookie",
    "start": "1287039",
    "end": "1290039"
  },
  {
    "text": "anybody else want to queue up for questions yeah so and I guess if there's",
    "start": "1294799",
    "end": "1302360"
  },
  {
    "start": "1299000",
    "end": "1346000"
  },
  {
    "text": "not many questions I can ask so these are like minor pep peeve things I just want to get your thoughts and other people's thoughts um the config so in a",
    "start": "1302360",
    "end": "1310320"
  },
  {
    "text": "lot of cases we're running these as agent mode so know you got the strip down one these are kind hard to reach",
    "start": "1310320",
    "end": "1316480"
  },
  {
    "text": "clusters say and it works brilliant you know agent mode with like the bulk receiver works really well but we want",
    "start": "1316480",
    "end": "1322520"
  },
  {
    "text": "to push config map updates out you know we want to tweak changes sure and we can't reach those",
    "start": "1322520",
    "end": "1329320"
  },
  {
    "text": "Prometheus and there isn't a native reload the config if it's bad just go",
    "start": "1329320",
    "end": "1335159"
  },
  {
    "text": "back to the other one type scenario you've always got to use another product or weart it is that something you think",
    "start": "1335159",
    "end": "1341679"
  },
  {
    "text": "that's might get addressed in the future cuz I'm I'm sure it bugs a lot of people um that's an interesting idea so the for",
    "start": "1341679",
    "end": "1348520"
  },
  {
    "start": "1346000",
    "end": "1458000"
  },
  {
    "text": "example the Prometheus operator has a uh a config reloader sidecar and it's",
    "start": "1348520",
    "end": "1356000"
  },
  {
    "text": "mostly focused around kubernetes and so if you're running the Prometheus operator you already have this uh and",
    "start": "1356000",
    "end": "1362440"
  },
  {
    "text": "you'll a you'll get those those automatic remote reloads with the with the Prometheus operator but if you're not on",
    "start": "1362440",
    "end": "1368480"
  },
  {
    "text": "kubernetes uh yeah there's not really a universal side car for that cuz you know what what would be the option to you",
    "start": "1368480",
    "end": "1374919"
  },
  {
    "text": "know we'd have to think about like what data sources could we pull from would we pull blindly from an HTTP endpoint and",
    "start": "1374919",
    "end": "1382600"
  },
  {
    "text": "and download that and then reload that would be relatively easy but you know there's uh do we want to read from NFS",
    "start": "1382600",
    "end": "1389960"
  },
  {
    "text": "but you know there's lots of options there is a consensus to have uh automatic reload of the project",
    "start": "1389960",
    "end": "1395600"
  },
  {
    "text": "configuration but someone from the community has to write it oh okay so if you if you just touch the file on disc",
    "start": "1395600",
    "end": "1403039"
  },
  {
    "text": "there's uh uh there's a proposal but somebody needs to implement the uh the",
    "start": "1403039",
    "end": "1409039"
  },
  {
    "text": "notifies and that's it that's what I'm asking if we're using kubernetes without the operator and it's just that file's",
    "start": "1409039",
    "end": "1414120"
  },
  {
    "text": "changed and it and it doesn't bother looking all right we'll have a buches Paul request welcome so and then if you push then a config mag then you will be",
    "start": "1414120",
    "end": "1421080"
  },
  {
    "text": "able to just reload the config okay cool and now I've got one more quick question and everyone else can go and this is",
    "start": "1421080",
    "end": "1426120"
  },
  {
    "text": "really just a a thought and everyone else will probably hate it but sometimes some of your labels some of the labels",
    "start": "1426120",
    "end": "1431919"
  },
  {
    "text": "have a value in it and it would be really nice if in a query you could declare that that's a value and say sum",
    "start": "1431919",
    "end": "1437720"
  },
  {
    "text": "up these label values I know that would probably be a horrid thing to do but yeah I think is that something that gets",
    "start": "1437720",
    "end": "1443279"
  },
  {
    "text": "talked about CU that would be we we get we get that requests every few months",
    "start": "1443279",
    "end": "1449240"
  },
  {
    "text": "uh somebody we I don't think we've actually had any approved proposals for",
    "start": "1449240",
    "end": "1454320"
  },
  {
    "text": "doing that uh data manipulation at the label level okay cool cool I I I think every time we ask for use cases and well",
    "start": "1454320",
    "end": "1462440"
  },
  {
    "start": "1458000",
    "end": "1483000"
  },
  {
    "text": "I I think if we have a use case we understand what people want it will be easier for us to to accept that because",
    "start": "1462440",
    "end": "1468039"
  },
  {
    "text": "you know uh when you start toing with label values there is 100 ways to represent the float value so if you",
    "start": "1468039",
    "end": "1474520"
  },
  {
    "text": "could know what people you want to do then we could find the correct solution for you yeah excent excellent all right",
    "start": "1474520",
    "end": "1480039"
  },
  {
    "text": "thank you very much no problem we got plenty of time hey uh my question is more on the",
    "start": "1480039",
    "end": "1485480"
  },
  {
    "start": "1483000",
    "end": "1517000"
  },
  {
    "text": "evolution on the client side sure so we were using some Legacy tools for infrastructure matrics with then",
    "start": "1485480",
    "end": "1492440"
  },
  {
    "text": "replaced with Prometheus client side and now we have otal emerging for log traces and metrix so on the client side we",
    "start": "1492440",
    "end": "1498799"
  },
  {
    "text": "seems to be having like Prometheus on one side and we have the oel do you see Prometheus evolving more to be a server",
    "start": "1498799",
    "end": "1504720"
  },
  {
    "text": "side to store metrics in the long run with oal Library being replacing it as the standard one or I I'm I'm still I'm",
    "start": "1504720",
    "end": "1511600"
  },
  {
    "text": "just deployer right I just deployed hundreds and thousands of noes and just looking for the um personally I think",
    "start": "1511600",
    "end": "1518720"
  },
  {
    "text": "the otel metrics collector is an anti- pattern because it's it ruins the active",
    "start": "1518720",
    "end": "1524320"
  },
  {
    "text": "monitoring that Prometheus provides uh and and but there are lots of people",
    "start": "1524320",
    "end": "1530080"
  },
  {
    "text": "doing and For Better or Worse reimplementing Prometheus exporters in open Telemetry we we're we we support",
    "start": "1530080",
    "end": "1538200"
  },
  {
    "text": "both what what we are also seeing is some some client libraries like the Java client Library they they already support",
    "start": "1538200",
    "end": "1544960"
  },
  {
    "text": "LLP and we really want people to buy in into the pris libraries so that they know that if they need to switch tolp",
    "start": "1544960",
    "end": "1551559"
  },
  {
    "text": "they can also do it without implementing the application again so uh we we still see a lot of usage for the PR Cent",
    "start": "1551559",
    "end": "1558320"
  },
  {
    "text": "libraries and uh we are not we are not giving up on the promes client libraries at all in the in the future Years thank",
    "start": "1558320",
    "end": "1567519"
  },
  {
    "start": "1569000",
    "end": "1678000"
  },
  {
    "text": "you I recently spent some time implementing both a standard Prometheus client exporter as well as the open",
    "start": "1569080",
    "end": "1575399"
  },
  {
    "text": "Telemetry version of that exporter and I was curious and I think you might have touched on this in the last answer but",
    "start": "1575399",
    "end": "1581720"
  },
  {
    "text": "are there any particular things that you feel like otel does really well you're adding support for a number of things in",
    "start": "1581720",
    "end": "1586799"
  },
  {
    "text": "in the Prometheus time series space right not not the logging in the but are there any particular Concepts that they",
    "start": "1586799",
    "end": "1592840"
  },
  {
    "text": "do really well or you perhaps you disagree with and you think you do better or what would you recommend for",
    "start": "1592840",
    "end": "1598399"
  },
  {
    "text": "some of these cases and when to consider one or the other sure so one of I you",
    "start": "1598399",
    "end": "1604080"
  },
  {
    "text": "know one of the things a long time ago we looked you know I was we there's a project called metrics 2.0 and it had a",
    "start": "1604080",
    "end": "1610240"
  },
  {
    "text": "lot of cool ideas around more well-defined structure of metric data",
    "start": "1610240",
    "end": "1615559"
  },
  {
    "text": "including you know native support for making types and things uh and open t",
    "start": "1615559",
    "end": "1621520"
  },
  {
    "text": "Tre has a bunch of the same uh and it's it has this flexibility but it also makes it so much",
    "start": "1621520",
    "end": "1629440"
  },
  {
    "text": "more complicated and worse you end up with things in open Telemetry like your",
    "start": "1629440",
    "end": "1634480"
  },
  {
    "text": "label values are can be multiple different data types so in Prometheus we very strictly defined label values or",
    "start": "1634480",
    "end": "1642480"
  },
  {
    "text": "strings but open Telemetry doesn't have that restriction so you end up with two",
    "start": "1642480",
    "end": "1647720"
  },
  {
    "text": "much flexibility and uh I have this horrible prediction that developers are going to make this uh just as bad as",
    "start": "1647720",
    "end": "1655919"
  },
  {
    "text": "SNMP where you're going to have random values uh that are numbers and strings",
    "start": "1655919",
    "end": "1661720"
  },
  {
    "text": "or strings and numbers uh and your HTTP status code could be a float 64 and we",
    "start": "1661720",
    "end": "1668039"
  },
  {
    "text": "don't know and so it's it's going to be interesting to see how that that",
    "start": "1668039",
    "end": "1674559"
  },
  {
    "text": "develops thank you thanks for talk uh I'm Tom with Sony so",
    "start": "1674559",
    "end": "1681799"
  },
  {
    "start": "1678000",
    "end": "1708000"
  },
  {
    "text": "do you guys happen to have like a working group or community meeting for the use cases for the edge iot use cases",
    "start": "1681799",
    "end": "1689000"
  },
  {
    "text": "sorry say Edge iot like uh Edge devices Edge device is a really interesting",
    "start": "1689000",
    "end": "1695039"
  },
  {
    "text": "subject um I don't think we have a really big Community around that and I would love to see it um uh but nobody in",
    "start": "1695039",
    "end": "1702320"
  },
  {
    "text": "the Prometheus team has really taken up the the edge device iot mantle",
    "start": "1702320",
    "end": "1708279"
  },
  {
    "start": "1708000",
    "end": "1750000"
  },
  {
    "text": "now what we Al we have now is a prome agent which is a way that you can run prome on the edge without the time Ser",
    "start": "1708279",
    "end": "1714519"
  },
  {
    "text": "database so it is like you have the the the memory consumption of and you can",
    "start": "1714519",
    "end": "1721360"
  },
  {
    "text": "deploy it on a lot smaller devices and then it can push data to a central promes or MIM or CeX but that's still",
    "start": "1721360",
    "end": "1728679"
  },
  {
    "text": "still not as lightweight as say I'm a mosquito collector yeah okay thank you yeah no I'd love I'd love to see a uh an",
    "start": "1728679",
    "end": "1734799"
  },
  {
    "text": "official like uh iot like mqtt to Prometheus uh like ingestor",
    "start": "1734799",
    "end": "1742080"
  },
  {
    "text": "as part of the project but somebody somebody in the in the ecosystem needs to maintain that okay got it thank",
    "start": "1742080",
    "end": "1749480"
  },
  {
    "text": "you thanks for the talk so I know High cardinality Matrix is something that you",
    "start": "1749480",
    "end": "1755120"
  },
  {
    "text": "hear all the time and don't like to hear about it but are there any plans to make that improve that where you could have",
    "start": "1755120",
    "end": "1761600"
  },
  {
    "text": "maybe you know cardinality of a million labels is okay so yeah so the issue",
    "start": "1761600",
    "end": "1767960"
  },
  {
    "text": "nowadays that we see at this what I see with customers it's not really theity matrix it's really like the churn that",
    "start": "1767960",
    "end": "1773600"
  },
  {
    "text": "you can have in a Time series so if you have a lot of Time series that just least for like one two minutes and you have thousands of them then you have an",
    "start": "1773600",
    "end": "1779840"
  },
  {
    "text": "issue but we are optimizing a lot for the value labels and everything so I cality if you have like fixed time",
    "start": "1779840",
    "end": "1786279"
  },
  {
    "text": "series it's not an issue to have like multiple thousands of label values for",
    "start": "1786279",
    "end": "1791720"
  },
  {
    "text": "one label we see that a lot actually uh but really like um we are working on",
    "start": "1791720",
    "end": "1796960"
  },
  {
    "text": "that a lot and like what I talk about memory reduction and the fact that we will soon intern strings will also help",
    "start": "1796960",
    "end": "1803640"
  },
  {
    "text": "a lot with that so we are really working on that issue actively and uh it's it's",
    "start": "1803640",
    "end": "1809279"
  },
  {
    "text": "less of a problem now that it was one year ago and I expect that in one year it will even be even less of a problem",
    "start": "1809279",
    "end": "1814919"
  },
  {
    "text": "yeah no I I generally see you know people running Prometheus in single Prometheus instances with uh tens of",
    "start": "1814919",
    "end": "1821360"
  },
  {
    "start": "1815000",
    "end": "1856000"
  },
  {
    "text": "millions of series these days but Millions on a single label is not something a lot of people are are are",
    "start": "1821360",
    "end": "1828000"
  },
  {
    "text": "working on uh we have I there's been some discussions about uh having a uh a",
    "start": "1828000",
    "end": "1835600"
  },
  {
    "text": "different data model for storing very high cardinality mil you know single",
    "start": "1835600",
    "end": "1841480"
  },
  {
    "text": "single label million time series uh by completely rewriting the the a new tsdb",
    "start": "1841480",
    "end": "1847679"
  },
  {
    "text": "that would be based on something more like paret files but that's all just",
    "start": "1847679",
    "end": "1853919"
  },
  {
    "text": "theoretical ideas right now and one more question like do you hear reports of when you have high cardinality that",
    "start": "1853919",
    "end": "1860480"
  },
  {
    "start": "1856000",
    "end": "1874000"
  },
  {
    "text": "generates a lot of Time series then the scrape performance gets worse on the",
    "start": "1860480",
    "end": "1865639"
  },
  {
    "text": "client side or putting that together data together on the client side leads to Sor drop in performance for the thing",
    "start": "1865639",
    "end": "1873279"
  },
  {
    "text": "being scraped that usually depends on the client Library involved so for example the the node.js library had a",
    "start": "1873279",
    "end": "1880279"
  },
  {
    "start": "1874000",
    "end": "1902000"
  },
  {
    "text": "bunch of performance problems uh but Reddit and a few other uh organizations actually did a bunch of work to improve",
    "start": "1880279",
    "end": "1886679"
  },
  {
    "text": "the node as client library to be better perform uh to have significantly better performance with hundreds of thousands",
    "start": "1886679",
    "end": "1893159"
  },
  {
    "text": "of of metrics per scrape um but yeah it tends to be a problem based on the",
    "start": "1893159",
    "end": "1898639"
  },
  {
    "text": "language involved and not uh not Prometheus itself okay so your goal is to keep it at a an HTTP pull text based",
    "start": "1898639",
    "end": "1907279"
  },
  {
    "start": "1902000",
    "end": "1950000"
  },
  {
    "text": "model only not evolve into like do a streaming or something like that which is a much a bit easier on the client we",
    "start": "1907279",
    "end": "1913720"
  },
  {
    "text": "we we we pretty much want to stick to the the scrape model because because it's it provides a nice Atomic unit",
    "start": "1913720",
    "end": "1919880"
  },
  {
    "text": "because Prometheus itself is actually an acid compliant database and so we want to have this transactionality of a",
    "start": "1919880",
    "end": "1925919"
  },
  {
    "text": "transaction insert to avoid uh uh promql transaction issues because in a lot of",
    "start": "1925919",
    "end": "1933840"
  },
  {
    "text": "the very detailed uh uh SLO calculations you want to make sure that you're not",
    "start": "1933840",
    "end": "1940000"
  },
  {
    "text": "seeing uh partial scrapes in and partial data uh because that can make your slos",
    "start": "1940000",
    "end": "1945720"
  },
  {
    "text": "wrong great on thank you yep thank great talk by the way so as we",
    "start": "1945720",
    "end": "1953320"
  },
  {
    "start": "1950000",
    "end": "1976000"
  },
  {
    "text": "get to this point where a lot of companies are getting bigger and are starting to want to gather more metrics",
    "start": "1953320",
    "end": "1958480"
  },
  {
    "text": "sometimes people get a little overzealous with what they want to collect how or do you have any guides or",
    "start": "1958480",
    "end": "1964360"
  },
  {
    "text": "any resources that you would recommend to people on how a not to overdo it and",
    "start": "1964360",
    "end": "1969639"
  },
  {
    "text": "B maybe how to handle augmenting what you collect as you grow so as not to let",
    "start": "1969639",
    "end": "1975360"
  },
  {
    "text": "it become unbounded that that's a that's a long conversation um uh the Prometheus",
    "start": "1975360",
    "end": "1981200"
  },
  {
    "start": "1976000",
    "end": "2033000"
  },
  {
    "text": "docs have some good guidelines uh docs on things like Thanos and mimir uh also have some very good",
    "start": "1981200",
    "end": "1988200"
  },
  {
    "text": "guidelines on how to scale things um the for example if you're in kubernetes uh",
    "start": "1988200",
    "end": "1994360"
  },
  {
    "text": "the uh one of the patterns that I've been uh working on at at Reddit is we",
    "start": "1994360",
    "end": "2000399"
  },
  {
    "text": "actually have a controller that creates a Prometheus per name space to do name",
    "start": "2000399",
    "end": "2005760"
  },
  {
    "text": "uh uh team isolation so we have one kubernetes name space one application",
    "start": "2005760",
    "end": "2013880"
  },
  {
    "text": "one Prometheus and that way uh if a team causes some giant cardinality explosion",
    "start": "2013880",
    "end": "2020440"
  },
  {
    "text": "uh their explosion is limited to their Nam space and they only hurt themselves",
    "start": "2020440",
    "end": "2025679"
  },
  {
    "text": "uh and so that that's helped us a lot [Music]",
    "start": "2025679",
    "end": "2031959"
  },
  {
    "text": "um yeah um what you can also do is uh we have have the pr query log now that we",
    "start": "2032120",
    "end": "2038880"
  },
  {
    "start": "2033000",
    "end": "2067000"
  },
  {
    "text": "can enable so you can see actually which metrics are used and query it uh and if",
    "start": "2038880",
    "end": "2044080"
  },
  {
    "text": "you enable that for like a couple of a couple of days can then look okay we only use like 300 metrics so what are",
    "start": "2044080",
    "end": "2051158"
  },
  {
    "text": "what are what else are you uh exposing as metrics and you can start analyzing more precisely what you have cool thank",
    "start": "2051159",
    "end": "2059320"
  },
  {
    "text": "that's all the time we have thanks thank [Applause]",
    "start": "2059320",
    "end": "2065190"
  },
  {
    "text": "you",
    "start": "2065879",
    "end": "2068878"
  }
]