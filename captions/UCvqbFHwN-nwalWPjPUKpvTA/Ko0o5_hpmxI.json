[
  {
    "text": "why do we need to protect the model and the data of course we know that so what happens if the model gets",
    "start": "120",
    "end": "8240"
  },
  {
    "text": "stolen model can get stolen right so you're you lose the intellectual property that comes with the model uh",
    "start": "8240",
    "end": "15160"
  },
  {
    "text": "think of another story where the input that you interact with the model right",
    "start": "15160",
    "end": "20199"
  },
  {
    "text": "let's say you are we are talking about a health chatbot where you are kind of sending inputs which are confidential in",
    "start": "20199",
    "end": "27800"
  },
  {
    "text": "nature your health related queries that you are sending to the board to the chat B and then it Returns what if that data",
    "start": "27800",
    "end": "34000"
  },
  {
    "text": "gets lost which means there is a reputational damage to your because if",
    "start": "34000",
    "end": "39879"
  },
  {
    "text": "that data gets lost and also loss of users trust how the users will trust you if you cannot Safeguard the data right",
    "start": "39879",
    "end": "46719"
  },
  {
    "text": "and not not the least that of course your competitive Advantage is also lost so model protection and of course the",
    "start": "46719",
    "end": "52920"
  },
  {
    "text": "data protection is very important now the question is how do you protect the",
    "start": "52920",
    "end": "58519"
  },
  {
    "text": "model and data of course what we do today right currently we have various",
    "start": "58519",
    "end": "63920"
  },
  {
    "text": "ways so so if we consider security as a layered uh onion then what happens you",
    "start": "63920",
    "end": "71320"
  },
  {
    "text": "have API so we we are considering apis and the models and key thing is the model so you can encrypt the model at",
    "start": "71320",
    "end": "79720"
  },
  {
    "text": "rest and of course when when the data that of comes uh to the model it's all",
    "start": "79720",
    "end": "85560"
  },
  {
    "text": "encrypted in translit so you use encryption to protect the data that you already use you also have uh role based",
    "start": "85560",
    "end": "92280"
  },
  {
    "text": "access controls right to kind of protect it then you also have",
    "start": "92280",
    "end": "97799"
  },
  {
    "text": "uh API Security in place so these are the usual stuff you will have Network policies Fireballs right segmentations",
    "start": "97799",
    "end": "104560"
  },
  {
    "text": "and all and of course auditing and login now in this whole thing do you see",
    "start": "104560",
    "end": "109799"
  },
  {
    "text": "anything missing so this I I believe if if you are familiar in the sense of uh",
    "start": "109799",
    "end": "116360"
  },
  {
    "text": "in the infrastructure side and protecting these are common right these are table STS today without this anyway we won't run a real application in",
    "start": "116360",
    "end": "123000"
  },
  {
    "text": "production but do you see anything missing from this okay no sir this was just leading",
    "start": "123000",
    "end": "131120"
  },
  {
    "text": "question now what I will do is I will show you a small demo right which is uh",
    "start": "131120",
    "end": "138080"
  },
  {
    "text": "so this is basically a demo which we are running on a single note kubernetes cluster for ease of",
    "start": "138080",
    "end": "143720"
  },
  {
    "text": "use so for a moment uh let me just uh",
    "start": "143720",
    "end": "150640"
  },
  {
    "text": "okay so for a moment you wear the hat of an infrastructure admin who has access",
    "start": "150640",
    "end": "156319"
  },
  {
    "text": "to the kubernetes worker noes so I I would want you to imagine that you can access the kubernetes water node and",
    "start": "156319",
    "end": "162519"
  },
  {
    "text": "this is a very simple demo which what it does it just uh creates a simple pod which downloads a secret and keeps it in",
    "start": "162519",
    "end": "170120"
  },
  {
    "text": "the memory that's all it's a very simple uh program so let's uh get started as you see this is a single node kubernetes",
    "start": "170120",
    "end": "178040"
  },
  {
    "text": "cluster and it download loads the secret so this we run it as part of a pod right",
    "start": "178040",
    "end": "184239"
  },
  {
    "text": "so this is the Pod and you see the what it does it just do a curl get the secret",
    "start": "184239",
    "end": "190920"
  },
  {
    "text": "and U keeps it and then",
    "start": "190920",
    "end": "196879"
  },
  {
    "text": "slips so yes the Pod is running now since we are using the same node now",
    "start": "196879",
    "end": "202280"
  },
  {
    "text": "this is where uh you are an admin who has access to the node what I'm going to",
    "start": "202280",
    "end": "207440"
  },
  {
    "text": "do as an admin is search uh the process which is uh sleeping so we'll see",
    "start": "207440",
    "end": "216959"
  },
  {
    "text": "that so I got the p and once I get the P I will take a memory dump of this",
    "start": "230319",
    "end": "237239"
  },
  {
    "text": "process I took a memory dump now in interesting thing is I can grab for the secret in the memory D so the secret is",
    "start": "237239",
    "end": "244879"
  },
  {
    "text": "available right now for a moment assume this is your model right so this is your",
    "start": "244879",
    "end": "252079"
  },
  {
    "text": "model where you have spent your money to train the model on your custom data and",
    "start": "252079",
    "end": "257919"
  },
  {
    "text": "uh if there is a malicious privileged admin they have access to your model",
    "start": "257919",
    "end": "263320"
  },
  {
    "text": "weits imagine if this is your input data which is being used and get the input",
    "start": "263320",
    "end": "268440"
  },
  {
    "text": "data from a memory ter that's what so in spite of all the Securities that we have",
    "start": "268440",
    "end": "273639"
  },
  {
    "text": "there is still a attack Vector which can be exploited by the admins this is what",
    "start": "273639",
    "end": "280320"
  },
  {
    "text": "we are talking of now what's the solution for this right so the solution is confidential compute now what does",
    "start": "280320",
    "end": "287720"
  },
  {
    "text": "confidential compute brings in we'll take a look at",
    "start": "287720",
    "end": "292919"
  },
  {
    "text": "it okay so before we talk about what is confidential Computing let's take a step",
    "start": "293400",
    "end": "299479"
  },
  {
    "text": "back and look at what's the different stages of the data because here what we talking",
    "start": "299479",
    "end": "304639"
  },
  {
    "text": "about is all data even your model is a data right so what are the different stages that the data goes through so you",
    "start": "304639",
    "end": "311479"
  },
  {
    "text": "have data at rest of this right so you have data at rest then you have data in",
    "start": "311479",
    "end": "318440"
  },
  {
    "text": "transit and uh then you have data that is in use so hope it comes",
    "start": "319720",
    "end": "328639"
  },
  {
    "text": "along okay so maybe I'm too far that's why",
    "start": "328639",
    "end": "333759"
  },
  {
    "text": "it's not working so okay so what we are talking about here is the three stages",
    "start": "333759",
    "end": "340120"
  },
  {
    "text": "of the data data at rest data in transit data and use I think all of you are familiar with how to protect data at",
    "start": "340120",
    "end": "346199"
  },
  {
    "text": "rest it's encryption how do you protect data and Transit again encryption we have TLS encryption now the key thing is",
    "start": "346199",
    "end": "353199"
  },
  {
    "text": "how do you protect the data in use because now now kind of go back to the",
    "start": "353199",
    "end": "359160"
  },
  {
    "text": "previous example why the admin was able to see the kind of data because the data",
    "start": "359160",
    "end": "365639"
  },
  {
    "text": "that is in use which is in memory it's not protected it's in plain text that's why the admin was able to see now what",
    "start": "365639",
    "end": "372639"
  },
  {
    "text": "confidential Computing brings to the table is it brings encrypt memory encryption which means it brings",
    "start": "372639",
    "end": "378639"
  },
  {
    "text": "encryption for data in use and that's the beauty of confidential Computing that's what it brings to the table it",
    "start": "378639",
    "end": "384440"
  },
  {
    "text": "completes encryption for the all stages of the data life cycle right",
    "start": "384440",
    "end": "390479"
  },
  {
    "text": "now little bit detail on the confidential Computing it's a processor technology it",
    "start": "390479",
    "end": "397080"
  },
  {
    "text": "brings or it gives you a trusted execution environment right it say gives you a trusted I will talk about what",
    "start": "397080",
    "end": "403360"
  },
  {
    "text": "exactly is the trusted execution environment and then importantly is you",
    "start": "403360",
    "end": "408720"
  },
  {
    "text": "can verify remotely the authenticity and trustworthiness of this trust execution",
    "start": "408720",
    "end": "414160"
  },
  {
    "text": "environment and this trusted execution environment provides memory encryption runtime memory encryption to be clear",
    "start": "414160",
    "end": "421160"
  },
  {
    "text": "now simply put that at the heart of confidential compute is your trusted execution environment so whatever data",
    "start": "421160",
    "end": "429960"
  },
  {
    "text": "that you wants to protect if it is in inside the te memory it cannot be",
    "start": "429960",
    "end": "435840"
  },
  {
    "text": "accessed or it it the plain text cannot be accessed by any privileged entities that is outside of the te that's the",
    "start": "435840",
    "end": "442680"
  },
  {
    "text": "beauty of confidential Computing repeating again the data that needs to be protected so what but the the secret",
    "start": "442680",
    "end": "450000"
  },
  {
    "text": "that we saw if that secret is inside this te memory then no entities outside",
    "start": "450000",
    "end": "456840"
  },
  {
    "text": "can see the plan text that's what T brings in so the heart of confidential Computing is the trusted execution",
    "start": "456840",
    "end": "463360"
  },
  {
    "text": "environment and there are two types of",
    "start": "463360",
    "end": "468520"
  },
  {
    "text": "T's which is uh VM based T's so the t is a full VM and then there's another type",
    "start": "468520",
    "end": "476400"
  },
  {
    "text": "which is T is a process so this picture what I'm trying to do is to",
    "start": "476400",
    "end": "483080"
  },
  {
    "text": "see who which all entities has access to your data so the first one is your",
    "start": "483080",
    "end": "489720"
  },
  {
    "text": "general environment without confidential Computing right without confidential Computing if you see all the entities",
    "start": "489720",
    "end": "495599"
  },
  {
    "text": "your infrastructure admin of course CPU bios firmware posto cluster admin all",
    "start": "495599",
    "end": "500840"
  },
  {
    "text": "have access to the data and we saw in that demo anyone having access to the worker node takes a memory Dum get the",
    "start": "500840",
    "end": "507039"
  },
  {
    "text": "data now with confidential computing and VMT is who has access to the data CPU so",
    "start": "507039",
    "end": "512599"
  },
  {
    "text": "still you need to trust the CPU so CPU is still trusted but rest none of them",
    "start": "512599",
    "end": "518080"
  },
  {
    "text": "are trusted no none of the other entities in white like the OS the hypervisor the infrastructure admins",
    "start": "518080",
    "end": "523120"
  },
  {
    "text": "don't have access to the data basically the data which is in memory of the vmte",
    "start": "523120",
    "end": "529080"
  },
  {
    "text": "the other option or the other te type is the process based te type where it's much more granular it is at the process",
    "start": "529080",
    "end": "535760"
  },
  {
    "text": "level right so here we are not kind of going into the details of the pros and",
    "start": "535760",
    "end": "540800"
  },
  {
    "text": "cons of the two approaches right but just for you to understand what confidential Computing brings to the",
    "start": "540800",
    "end": "545920"
  },
  {
    "text": "table the key takeaways one you the data that you want to protect from privileged",
    "start": "545920",
    "end": "552200"
  },
  {
    "text": "entities if you are able to put that data inside the te you gain that protection so that's kind of the",
    "start": "552200",
    "end": "558920"
  },
  {
    "text": "takeaway right and and in the subsequent section our Focus will be predominantly",
    "start": "558920",
    "end": "564160"
  },
  {
    "text": "on the VM based T's one of the primary reasons for that is the VM based T's allows for LIF shift so you can get your",
    "start": "564160",
    "end": "570880"
  },
  {
    "text": "existing application run it inside a vmb te and you can reap the benefits of",
    "start": "570880",
    "end": "576440"
  },
  {
    "text": "confidential Compu all right so with this now so",
    "start": "576440",
    "end": "582399"
  },
  {
    "text": "what's the meage the one of the key things or one thought or how do you protect as I said as long as you can get",
    "start": "582399",
    "end": "589040"
  },
  {
    "text": "the data inside the te you are protected so then our problem statement becomes how can I run my workload inside the T",
    "start": "589040",
    "end": "596680"
  },
  {
    "text": "right so that's the whole point so if I'm running my AI application the inference in",
    "start": "596680",
    "end": "602120"
  },
  {
    "text": "kubernetes cluster my main priority to reap the benefit of data and use",
    "start": "602120",
    "end": "607440"
  },
  {
    "text": "protection is how do I get that workload inside or how do I get the kubernetes",
    "start": "607440",
    "end": "612920"
  },
  {
    "text": "workload inside the te now here we have like two approaches either you can run",
    "start": "612920",
    "end": "618640"
  },
  {
    "text": "the entire kubernetes worker node inside a te and and if you Google for it the",
    "start": "618640",
    "end": "623920"
  },
  {
    "text": "the it is most commonly known as confidential clusters right so you can",
    "start": "623920",
    "end": "628959"
  },
  {
    "text": "have you do have various Solutions around it various vendors are providing that the other approach is you just put",
    "start": "628959",
    "end": "636200"
  },
  {
    "text": "the kubernetes Pod inside the te and that's what we call as the confidential containers right so it's at the Pod",
    "start": "636200",
    "end": "644120"
  },
  {
    "text": "level and and and one key thing to remember in these two approaches is",
    "start": "644120",
    "end": "650120"
  },
  {
    "text": "about the trust model and to make it simple who has access to the data so",
    "start": "650120",
    "end": "655800"
  },
  {
    "text": "when we talk about your confidential cluster your kuber cluster admin can",
    "start": "655800",
    "end": "661440"
  },
  {
    "text": "still access the data so that kubernetes cluster admin is still trusted right in",
    "start": "661440",
    "end": "667000"
  },
  {
    "text": "confidential containers even the kubernetes cluster admin is untrusted so",
    "start": "667000",
    "end": "672160"
  },
  {
    "text": "the only trusted entity is the user who is deploying the part which means let's say if I am providing an AI model and",
    "start": "672160",
    "end": "680079"
  },
  {
    "text": "I'm actually exposing that as a chatbot I only me trust and I'm the only trusted",
    "start": "680079",
    "end": "686120"
  },
  {
    "text": "user no one else and this is enabled by the C ncf sandbox project confidential",
    "start": "686120",
    "end": "692440"
  },
  {
    "text": "containers so in the subsequent section so now this we just added it recently uh",
    "start": "692440",
    "end": "699519"
  },
  {
    "text": "based on the announcement that happened for the cloud native AI white paper so there also for additional trusted",
    "start": "699519",
    "end": "705519"
  },
  {
    "text": "security key is recommended right so and the whole thing is that if you want to",
    "start": "705519",
    "end": "710680"
  },
  {
    "text": "reap the benefit of memory encryption you need te and you need a way to deploy the workload inside a te so in the",
    "start": "710680",
    "end": "717760"
  },
  {
    "text": "subsequent section I hand it over to to surj who will take you through how we are enabling the confidential containers",
    "start": "717760",
    "end": "724279"
  },
  {
    "text": "and then of course how it is integrated with an inference runtime Cas Ser Cas Ser inference what",
    "start": "724279",
    "end": "731279"
  },
  {
    "text": "you thank you PR so uh let's talk about confidential",
    "start": "731279",
    "end": "736600"
  },
  {
    "text": "containers right um so before we go into like yeah how how how how it is set up",
    "start": "736600",
    "end": "742839"
  },
  {
    "text": "and everything let's quick quickly do a overview of kubernetes I I hope everybody understands this it's there is",
    "start": "742839",
    "end": "749199"
  },
  {
    "text": "control plan there are worker nodes worker nodes have cubet and everything right so what in this in this talk what",
    "start": "749199",
    "end": "755279"
  },
  {
    "text": "we'll do is zoom into the node worker node so imagine you have a regular uh",
    "start": "755279",
    "end": "762000"
  },
  {
    "text": "hardware and then it's running like there is a cubet of course uh the general interaction is cuet gets uh",
    "start": "762000",
    "end": "769120"
  },
  {
    "text": "request to start a pod which talks to container D which then talks to run c",
    "start": "769120",
    "end": "774720"
  },
  {
    "text": "and a pod is created that's that's I think everybody understands this this part so for confidential containers what",
    "start": "774720",
    "end": "783000"
  },
  {
    "text": "we use is something called as Kata containers as a runtime uh how many of",
    "start": "783000",
    "end": "788120"
  },
  {
    "text": "you have heard of karta containers okay so to to give a TW liner",
    "start": "788120",
    "end": "794680"
  },
  {
    "text": "uh information about what kataa does is so instead of runy which uses Linux",
    "start": "794680",
    "end": "800079"
  },
  {
    "text": "kernel based Technologies to start a container kataa creates a lightweight VM and starts containers inside that VM so",
    "start": "800079",
    "end": "807880"
  },
  {
    "text": "you need to have like a hardare Ware enabled uh virtualization enabled Hardware uh for worker notes so it's the",
    "start": "807880",
    "end": "814959"
  },
  {
    "text": "same again cuet gets a request which it passes to container D and then it talks",
    "start": "814959",
    "end": "820160"
  },
  {
    "text": "to cter R time so c r time is basically a replacement for run C here and cutar",
    "start": "820160",
    "end": "825760"
  },
  {
    "text": "and time is is is CRI enabled so it knows how to get requests from or",
    "start": "825760",
    "end": "831320"
  },
  {
    "text": "understand requests from continuity and then on the other side it knows how to talk to virtualization softwares like",
    "start": "831320",
    "end": "836600"
  },
  {
    "text": "KVM in this case with the same again virtual virtual but a virtual machine is created in this case virtual machine",
    "start": "836600",
    "end": "843279"
  },
  {
    "text": "boots up and the first process that starts in this virtual machine is called K agent and then carar and time and K",
    "start": "843279",
    "end": "850279"
  },
  {
    "text": "agent communicate on like how to how to start a real p and then the image pull",
    "start": "850279",
    "end": "855759"
  },
  {
    "text": "happens and the konet spot comes up so that's the general interaction right now",
    "start": "855759",
    "end": "861360"
  },
  {
    "text": "what confidential containers has done is they have extended the Carta project so",
    "start": "861360",
    "end": "866440"
  },
  {
    "text": "that it can start confidential VMS again so let's see Kata CC so this time we",
    "start": "866440",
    "end": "872040"
  },
  {
    "text": "need a hardware that has support for confidential compute like amds SCV SNP",
    "start": "872040",
    "end": "877680"
  },
  {
    "text": "orental stdx so again cuet container D cut R time KVM starts virtual virtual",
    "start": "877680",
    "end": "884519"
  },
  {
    "text": "machine Goods up there is kataa Agent but we also have something called as",
    "start": "884519",
    "end": "891199"
  },
  {
    "text": "confidential data Hub and attestation agent so like prip mentioned earlier right so attestation is a really",
    "start": "891199",
    "end": "897920"
  },
  {
    "text": "important part of this whole process because just starting a VM with encrypted memory like you could like you",
    "start": "897920",
    "end": "904279"
  },
  {
    "text": "could be fooled by the underlying infrastructure provider that's not what we want we want like to really ensure we",
    "start": "904279",
    "end": "910680"
  },
  {
    "text": "are I mean this is for really paranoid users who don't trust anything outside that that that VM that te that we are",
    "start": "910680",
    "end": "917600"
  },
  {
    "text": "talking about here so the attestation happens and this relying party is is something that you have on your your",
    "start": "917600",
    "end": "924040"
  },
  {
    "text": "side your secure side trusted side which knows how to read this evidence in verify oh this evidence was really",
    "start": "924040",
    "end": "930600"
  },
  {
    "text": "signed by the AMD Hardware or the Intel Hardware so this is how you ensure you are really in a safe environment and",
    "start": "930600",
    "end": "937440"
  },
  {
    "text": "that's after that what you do after you ensure you are in the safe environment is up to you you can release a key you",
    "start": "937440",
    "end": "943839"
  },
  {
    "text": "can release a secret you can just be okay this is a trusted thing and go ahead so in in this case we have we are",
    "start": "943839",
    "end": "951000"
  },
  {
    "text": "releasing a key we are releasing a key for an encrypted container image so uh the container image is pulled the keys",
    "start": "951000",
    "end": "958120"
  },
  {
    "text": "used to decrypt the container image and the port starts so in this way what we ensure that if attestation fails we are",
    "start": "958120",
    "end": "964800"
  },
  {
    "text": "not downloading anything even if it's downloaded for that matter it's since the image is encrypted uh you you're",
    "start": "964800",
    "end": "971480"
  },
  {
    "text": "fine because the key won't be released under until attestation passes so quickly let's look at the Coco",
    "start": "971480",
    "end": "977920"
  },
  {
    "text": "threat model or the confidential containers uh we call it Coco in short so it promisees confidentiality and uh",
    "start": "977920",
    "end": "985600"
  },
  {
    "text": "and integrity from the CIA Triad like from the traditional SE security uh uh when they try to assess anything uh they",
    "start": "985600",
    "end": "992720"
  },
  {
    "text": "look at the CIA Triad so confidentiality is guaranteed because images uh sorry uh memory is encrypted and uh Integrity is",
    "start": "992720",
    "end": "1000720"
  },
  {
    "text": "guaranteed because you're only pulling stuff after ensuring everything is fine like the you can you can test during",
    "start": "1000720",
    "end": "1006680"
  },
  {
    "text": "attestation you can test stuff like like this is the the kernel that I wanted this is the init Rd I wanted the kernel",
    "start": "1006680",
    "end": "1012279"
  },
  {
    "text": "parameters were right like you can ensure the whole world is whole world inside the tea is fine and then that",
    "start": "1012279",
    "end": "1019079"
  },
  {
    "text": "testation process and everything outside trusted like like I said everything",
    "start": "1019079",
    "end": "1024240"
  },
  {
    "text": "outside this VM this te is is untrusted the worker node is untrusted that's that's the uh Coco threat model uh that",
    "start": "1024240",
    "end": "1030880"
  },
  {
    "text": "we follow so uh like we saw before uh we saw a demo about uh un encrypted memory",
    "start": "1030880",
    "end": "1038038"
  },
  {
    "text": "let's let's see what the uh encrypted memory looks",
    "start": "1038039",
    "end": "1042919"
  },
  {
    "text": "like so again we have the same uh VM uh that that we saw earlier and uh this",
    "start": "1047840",
    "end": "1055760"
  },
  {
    "text": "since this is a single node cluster we are ensuring that it has this uh kernel model loaded the SCV SNP uh kernel",
    "start": "1055760",
    "end": "1065200"
  },
  {
    "text": "model and to get started with confidential containers we install uh the confidential containers operator the",
    "start": "1065200",
    "end": "1072520"
  },
  {
    "text": "operator uh exposes runtime classes so Kata also exposes runtime class that's",
    "start": "1072520",
    "end": "1078480"
  },
  {
    "text": "how you can boot up Kata pods or conf uh yeah and this is the same uh thing from",
    "start": "1078480",
    "end": "1085720"
  },
  {
    "text": "before the thing that we have changed here is the Kata qmu right so same thing",
    "start": "1085720",
    "end": "1092000"
  },
  {
    "text": "happens we are pulling in the we are getting the secret and then storing it in in an the Pod has started it's a",
    "start": "1092000",
    "end": "1099679"
  },
  {
    "text": "regular Kart it's not it's not confidential yet so it shows that the runtime class is there uh we have",
    "start": "1099679",
    "end": "1106320"
  },
  {
    "text": "downloaded the secret now it's sleeping",
    "start": "1106320",
    "end": "1110759"
  },
  {
    "text": "this time we did not uh GPH for sleep because uh we gri for qmu because uh it",
    "start": "1112880",
    "end": "1120360"
  },
  {
    "text": "the VM is running inside or the Pod is running inside this qmu VM we get the P ID",
    "start": "1120360",
    "end": "1126320"
  },
  {
    "text": "again uh and then do a core dump",
    "start": "1126320",
    "end": "1132480"
  },
  {
    "text": "again and then once we get that core file we look at the ask representation of the secret and yeah you can you can",
    "start": "1133360",
    "end": "1140440"
  },
  {
    "text": "see even with kav VM you can see uh yeah this thing",
    "start": "1140440",
    "end": "1146440"
  },
  {
    "text": "exist",
    "start": "1153400",
    "end": "1156400"
  },
  {
    "text": "yeah okay good sorry about that so uh yeah moving on so uh for this talk what",
    "start": "1166280",
    "end": "1172520"
  },
  {
    "text": "we have chosen is we have chosen this one uh model serving platform or inferencing platform on kubernetes",
    "start": "1172520",
    "end": "1177720"
  },
  {
    "text": "called queso and uh yeah let's let's let's do a quick primer of what queso is",
    "start": "1177720",
    "end": "1183919"
  },
  {
    "text": "so it's a it's an inferencing platform it can host various uh forms of models",
    "start": "1183919",
    "end": "1189120"
  },
  {
    "text": "uh whether you're trained using tensorflow or pytorch or uh all of these lists and uh yeah you you you can use",
    "start": "1189120",
    "end": "1196720"
  },
  {
    "text": "like regular CRS and crds and it has all the controllers and you get like a consistent uh you can run it across",
    "start": "1196720",
    "end": "1202240"
  },
  {
    "text": "various kubernetes uh deployments and it gets all the kubernetes benefits like ha",
    "start": "1202240",
    "end": "1207880"
  },
  {
    "text": "bin packing Auto scaling all of that and the attack vectors that uh Cas of uh Cas",
    "start": "1207880",
    "end": "1214799"
  },
  {
    "text": "of are like there could be a data or model poisoning somebody does privacy breach like they see what inputs and",
    "start": "1214799",
    "end": "1220400"
  },
  {
    "text": "outputs are uh that they steal the model itself or there is denial of service but",
    "start": "1220400",
    "end": "1226200"
  },
  {
    "text": "what we are focusing today is just model theft right so let's see how these two can can",
    "start": "1226200",
    "end": "1232440"
  },
  {
    "text": "work",
    "start": "1232440",
    "end": "1234840"
  },
  {
    "text": "together okay",
    "start": "1251280",
    "end": "1254480"
  },
  {
    "text": "so let me restart",
    "start": "1257000",
    "end": "1260600"
  },
  {
    "text": "yeah so uh this time again we are seeing that it's running in a confidential",
    "start": "1278559",
    "end": "1283799"
  },
  {
    "text": "container system like we have this operator uh deployed and uh",
    "start": "1283799",
    "end": "1290520"
  },
  {
    "text": "we deploy uh the cas of controller is also deployed already uh with a with",
    "start": "1290840",
    "end": "1296159"
  },
  {
    "text": "with a specific model uh we will deploy a specific model now we have runtime class",
    "start": "1296159",
    "end": "1302480"
  },
  {
    "text": "uh created so this time we are using kataa remote runtime class it's uh so C",
    "start": "1302480",
    "end": "1307720"
  },
  {
    "text": "in the karta confidential containers we support multiple uh ways of deploying stuff uh the the specific thing that we",
    "start": "1307720",
    "end": "1314559"
  },
  {
    "text": "are using here is called Kata remote where it creates a PR VM it's out of outside the scope of the stock but uh",
    "start": "1314559",
    "end": "1321400"
  },
  {
    "text": "understand it's confidential VM and in this uh example that you see",
    "start": "1321400",
    "end": "1326960"
  },
  {
    "text": "uh that we have we specify the kar remote and we have this storage URI so",
    "start": "1326960",
    "end": "1333440"
  },
  {
    "text": "for ker you can specify where to pull your model from in this case we are",
    "start": "1333440",
    "end": "1338600"
  },
  {
    "text": "using a container image to ship a model this is uh this new feature uh I think",
    "start": "1338600",
    "end": "1344000"
  },
  {
    "text": "uh Roland implemented it for the case of community it's called model car where",
    "start": "1344000",
    "end": "1349200"
  },
  {
    "text": "you use the model to ship your uh you use the container image to ship the model and the good thing about this",
    "start": "1349200",
    "end": "1355520"
  },
  {
    "text": "particular image is it's encrypted like we saw before uh it's a it's a let's",
    "start": "1355520",
    "end": "1361159"
  },
  {
    "text": "let's deploy this so while this deployment happen we'll look at take a closer look at what this image looks",
    "start": "1361159",
    "end": "1366240"
  },
  {
    "text": "like so we'll use scopio to do the inspection of this particular image",
    "start": "1366240",
    "end": "1373799"
  },
  {
    "text": "and yeah so scopio gives you like uh information about each layer and since",
    "start": "1377440",
    "end": "1383760"
  },
  {
    "text": "we have encrypted using the Coco encryption stack it it shows you that there is attestation agents",
    "start": "1383760",
    "end": "1390840"
  },
  {
    "text": "information and if we also look at like uh one of these layers uh we see it's",
    "start": "1390840",
    "end": "1397320"
  },
  {
    "text": "it's base 64 encoded and the base 64 encoding looks like this so this is where there is information about where",
    "start": "1397320",
    "end": "1403720"
  },
  {
    "text": "to get the key from so when it talks to the relying party that we saw on the on the on the right side before so it it",
    "start": "1403720",
    "end": "1410880"
  },
  {
    "text": "knows like this is where the key lives on the key broker service and once it gets the key it can decrypt the decrypt",
    "start": "1410880",
    "end": "1418799"
  },
  {
    "text": "the container image and if we if we go and pull this image today you you'll see",
    "start": "1418799",
    "end": "1423960"
  },
  {
    "text": "error something like invalid tar header because it's encrypted right even if you",
    "start": "1423960",
    "end": "1430200"
  },
  {
    "text": "use some other method of getting that image it's a encrypted blog so",
    "start": "1430200",
    "end": "1436559"
  },
  {
    "text": "yeah and the Ling party that we showed earlier on the right side currently we",
    "start": "1436840",
    "end": "1442120"
  },
  {
    "text": "have deployed it on the same cluster you should ideally be deploying it in some uh in production scenarios you would",
    "start": "1442120",
    "end": "1447320"
  },
  {
    "text": "deploy in a trusted setup here we are showing like okay this has like all uh like how the attestation happened here",
    "start": "1447320",
    "end": "1454159"
  },
  {
    "text": "and like how the keys were uh how the keys were queried and and",
    "start": "1454159",
    "end": "1459640"
  },
  {
    "text": "stuff like that so moving ahead we can see like uh",
    "start": "1459640",
    "end": "1465120"
  },
  {
    "text": "the port that we deployed like couple of minutes earlier it's deployed now and uh if we try to get information",
    "start": "1465120",
    "end": "1472720"
  },
  {
    "text": "about its runtime class it it is deployed in that particular VM so this is this is all Cas of uh way",
    "start": "1472720",
    "end": "1480240"
  },
  {
    "text": "of uh exporting like uh EnV Wars and everything this is from the cas of documentation there's nothing new this",
    "start": "1480240",
    "end": "1486679"
  },
  {
    "text": "is the input that we'll provide to the model and then yeah",
    "start": "1486679",
    "end": "1493080"
  },
  {
    "text": "so this is now we quering the model uh with the",
    "start": "1493080",
    "end": "1501840"
  },
  {
    "text": "with the input and in the end we get this prediction which is one one which is which is what we",
    "start": "1501840",
    "end": "1509360"
  },
  {
    "text": "expect so uh yeah moving on uh so Cas on confidential containers what we have",
    "start": "1509640",
    "end": "1515120"
  },
  {
    "text": "done is what or what we are doing is we are running those parts of the K of that",
    "start": "1515120",
    "end": "1521159"
  },
  {
    "text": "will expose the model or will host the model inside confidential containers that's why you see like only parts of it",
    "start": "1521159",
    "end": "1528279"
  },
  {
    "text": "you don't want to run everything in confidential containers if if it's not needed right or on the if we look at the",
    "start": "1528279",
    "end": "1533559"
  },
  {
    "text": "data plane we are running like the the predicted side of it so moving on like what what what",
    "start": "1533559",
    "end": "1540360"
  },
  {
    "text": "benefits uh do you see uh or what what benefits coko provides to queso right of of",
    "start": "1540360",
    "end": "1546600"
  },
  {
    "text": "course like memory encryption we have been harping on it for a while so uh that's that's the obvious one production",
    "start": "1546600",
    "end": "1552399"
  },
  {
    "text": "from the infrastructure providers uh where input output is also protected because it's going to uh encrypted uh",
    "start": "1552399",
    "end": "1559200"
  },
  {
    "text": "place and then yeah there are a bunch of other uh use cases as well like it's not",
    "start": "1559200",
    "end": "1565159"
  },
  {
    "text": "just ker here that we case was just one example that we picked but uh the other",
    "start": "1565159",
    "end": "1570320"
  },
  {
    "text": "ones could be like multiple parties coming together and trying to do computation on same thing same same uh",
    "start": "1570320",
    "end": "1576080"
  },
  {
    "text": "same data so that you're ensuring that no other part is not sealing the the the",
    "start": "1576080",
    "end": "1581320"
  },
  {
    "text": "the other Pary data so and Regulatory Compliance like right like in here in Europe especially where data protection",
    "start": "1581320",
    "end": "1587880"
  },
  {
    "text": "laws are pretty uh stringent uh this is becoming more and more into the law that you when you're processing some IP you",
    "start": "1587880",
    "end": "1594440"
  },
  {
    "text": "have to have it uh encrypted when it's being used and yeah I think we talked about",
    "start": "1594440",
    "end": "1600200"
  },
  {
    "text": "the pii data so further work uh around this would be uh using confidential gpus",
    "start": "1600200",
    "end": "1606480"
  },
  {
    "text": "like even even in training because if you are training on a lot of uh sensitive data you want the gpus to be",
    "start": "1606480",
    "end": "1613200"
  },
  {
    "text": "also confidential and today nvidia's the h100s or all the H series uh support",
    "start": "1613200",
    "end": "1619440"
  },
  {
    "text": "confidential uh memory so once this becomes available generally uh we could",
    "start": "1619440",
    "end": "1625960"
  },
  {
    "text": "we could start uh using that and then in the K of side uh we can uh we need",
    "start": "1625960",
    "end": "1631360"
  },
  {
    "text": "support for runtime class name uh so that we can uh yeah use the model uh model",
    "start": "1631360",
    "end": "1637760"
  },
  {
    "text": "M so uh what are the takeaways right so con so I I think like even if you forget",
    "start": "1637760",
    "end": "1643399"
  },
  {
    "text": "everything in from today's talk remember that confidential containers provides uh data protection when it's being",
    "start": "1643399",
    "end": "1650919"
  },
  {
    "text": "used uh Coco can help in every aspect wherever you think that when it's in",
    "start": "1650919",
    "end": "1656279"
  },
  {
    "text": "memory somebody can access it it's it's protected and then a model serving platforms from like ker or anything uh",
    "start": "1656279",
    "end": "1663919"
  },
  {
    "text": "can benefit from Coco and then not everything needs to run inside Coco you",
    "start": "1663919",
    "end": "1669559"
  },
  {
    "text": "decide where your data is getting exposed to the underlying Hardware or underlying Hardware owners uh that's",
    "start": "1669559",
    "end": "1676159"
  },
  {
    "text": "that's the only thing that should run in confidential so yeah uh this is confidential",
    "start": "1676159",
    "end": "1682240"
  },
  {
    "text": "containers project if you uh would like to get involved uh that's the QR code",
    "start": "1682240",
    "end": "1688399"
  },
  {
    "text": "there and uh I think we can take questions yeah we can take questions one key thing to noce what we are trying to",
    "start": "1688399",
    "end": "1695519"
  },
  {
    "text": "do as part of confidential continuers project is to make is is focus on usability as you saw in the demo all",
    "start": "1695519",
    "end": "1702640"
  },
  {
    "text": "that is needed once you have the infrastructure set up in place all that is needed to convert a regular p into a",
    "start": "1702640",
    "end": "1709000"
  },
  {
    "text": "confidential pod is to use the right runtime class which provides the",
    "start": "1709000",
    "end": "1714039"
  },
  {
    "text": "necessary infrastructure right to run that so that's kind of our goal um and",
    "start": "1714039",
    "end": "1720120"
  },
  {
    "text": "yeah I think you have other sessions also in the same yeah uh area I have one",
    "start": "1720120",
    "end": "1725240"
  },
  {
    "text": "more session in the in the evening but it's around Spire if you are interested uh please please come see there and uh",
    "start": "1725240",
    "end": "1732640"
  },
  {
    "text": "and yeah questions uh yeah you can shout out or",
    "start": "1732640",
    "end": "1737679"
  },
  {
    "text": "you can come to the mic uh in front",
    "start": "1737679",
    "end": "1741440"
  },
  {
    "text": "here",
    "start": "1747440",
    "end": "1750440"
  },
  {
    "text": "thank hello thank you for the presentation uh my question is about the",
    "start": "1752960",
    "end": "1759760"
  },
  {
    "text": "impact one the performances do you have any metrics um I can take that so sometime",
    "start": "1759760",
    "end": "1767480"
  },
  {
    "text": "back AMD released performance benchmarks for running a set of macro and micro",
    "start": "1767480",
    "end": "1773640"
  },
  {
    "text": "benchmarks on confidential instances versus regular instances so typically",
    "start": "1773640",
    "end": "1779799"
  },
  {
    "text": "for many of the micro benchmarks the performance hit was less than 4% so they",
    "start": "1779799",
    "end": "1786240"
  },
  {
    "text": "ran um even the jvm performance uh Benchmark they ran that was also monteo",
    "start": "1786240",
    "end": "1791840"
  },
  {
    "text": "simulation also was done it was less than 4% the spec core Benchmark which is the core CPU Benchmark that was 8% uh",
    "start": "1791840",
    "end": "1799399"
  },
  {
    "text": "performance de so that's a public documentation so if you look for uh AMD",
    "start": "1799399",
    "end": "1804880"
  },
  {
    "text": "s SNMP performance so you will get those uh",
    "start": "1804880",
    "end": "1810159"
  },
  {
    "text": "data my question was the same uh and is that documentation in the uh confidential container um",
    "start": "1811080",
    "end": "1818679"
  },
  {
    "text": "site the performance metrics that you just stated no I don't think so it is",
    "start": "1818679",
    "end": "1823840"
  },
  {
    "text": "there but that's a good suggestion maybe we can add that in the in the in the website as well that would be fantastic",
    "start": "1823840",
    "end": "1829200"
  },
  {
    "text": "thank you yeah thank you my question is quite a lot simpler um in terms of on",
    "start": "1829200",
    "end": "1835640"
  },
  {
    "text": "pram and in the cloud what are the requirements from an infrastructure because not all chips are born the same",
    "start": "1835640",
    "end": "1842600"
  },
  {
    "text": "so that was my question yeah uh that's also another thing so for see the core",
    "start": "1842600",
    "end": "1849480"
  },
  {
    "text": "Hardware requirement for me for confidential Computing is uh is having",
    "start": "1849480",
    "end": "1855760"
  },
  {
    "text": "CPUs uh which supports idential Computing so for example Intel TDX or",
    "start": "1855760",
    "end": "1861039"
  },
  {
    "text": "AMD uh SNMP Pi processor now Hardware requirement for onr is to have bare",
    "start": "1861039",
    "end": "1866679"
  },
  {
    "text": "metal uh systems which supports these processor types so that's the minimum",
    "start": "1866679",
    "end": "1872200"
  },
  {
    "text": "Hardware requirement for your onr you need bare metal servers with the right processor supporting this capability",
    "start": "1872200",
    "end": "1878919"
  },
  {
    "text": "could you do I can add to that like even the all the epic epic series from AMD",
    "start": "1878919",
    "end": "1884360"
  },
  {
    "text": "they have confidential uh compute uh capability there and since this is coming from Hardware it is enabled on",
    "start": "1884360",
    "end": "1891279"
  },
  {
    "text": "the Kernel uh the virtualization softwares so it's like right from the hardware Stack Up Until where we see",
    "start": "1891279",
    "end": "1898399"
  },
  {
    "text": "this application I just checked your website from the adopter side because I",
    "start": "1898399",
    "end": "1904200"
  },
  {
    "text": "was curious looks like Microsoft are doing it already in preview from what I've seen and apparently AWS also",
    "start": "1904200",
    "end": "1911320"
  },
  {
    "text": "support it but I'm just wondering do you need bare metal instances of ads",
    "start": "1911320",
    "end": "1917919"
  },
  {
    "text": "instances and Azure instances to use this or can you just use a normal",
    "start": "1917919",
    "end": "1924080"
  },
  {
    "text": "VM okay so when we are using confidential compute in public Cloud",
    "start": "1924080",
    "end": "1929600"
  },
  {
    "text": "today we can use the confidential VM instances okay right and the demo that",
    "start": "1929600",
    "end": "1935440"
  },
  {
    "text": "uh Surat showed with ker that actually used uh confidential VM VMS in Azure",
    "start": "1935440",
    "end": "1942880"
  },
  {
    "text": "right so we can do that and when you are doing bare metal or when you're doing on prame there we need bare okay one last",
    "start": "1942880",
    "end": "1950760"
  },
  {
    "text": "question can you use trusted zones in arm uh not yet no yeah all right that's",
    "start": "1950760",
    "end": "1956760"
  },
  {
    "text": "fine thank you right I think we are out of time if you have more questions you can we are",
    "start": "1956760",
    "end": "1962600"
  },
  {
    "text": "here so if you have more questions we'll be happy to take it thank you folks thanks for",
    "start": "1962600",
    "end": "1968519"
  },
  {
    "text": "attending",
    "start": "1968519",
    "end": "1971519"
  }
]