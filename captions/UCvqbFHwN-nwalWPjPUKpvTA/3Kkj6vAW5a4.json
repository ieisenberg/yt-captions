[
  {
    "text": "Sabby all right I'm so yellow here for gypsy and introduction I'm Eric Anderson",
    "start": "0",
    "end": "5730"
  },
  {
    "text": "and a giant coal he is here too but he's he's gonna reduce a little bit of much",
    "start": "5730",
    "end": "10889"
  },
  {
    "text": "she's talking so he'll be around for a QA and he might jump in if he really doesn't like something I say or",
    "start": "10889",
    "end": "16500"
  },
  {
    "text": "something like that but so a quick audience poll raise your hand if you",
    "start": "16500",
    "end": "24390"
  },
  {
    "text": "have some idea of what GRP is all right I raise your hand if you're planning to",
    "start": "24390",
    "end": "30510"
  },
  {
    "text": "use GOP see how about if you are using JIRA PC okay and then how many of you I",
    "start": "30510",
    "end": "38579"
  },
  {
    "text": "want to develop oh sorry sorry be a contributor to gr PC please yeah yes yes yes we were there so there are",
    "start": "38579",
    "end": "49350"
  },
  {
    "text": "some other talks during the day this slot these slides are on the schedule so",
    "start": "49350",
    "end": "54899"
  },
  {
    "text": "you can go and download them I'm not gonna spend too much time on the slide but there are some talks during the day like today like there's another one I'll",
    "start": "54899",
    "end": "61920"
  },
  {
    "text": "be doing later today so gypsy stands for gypsy remote procedure calls we've got",
    "start": "61920",
    "end": "69750"
  },
  {
    "text": "the nice recursive acronym going there we have fun with the G and that's like our code name for various releases and",
    "start": "69750",
    "end": "76350"
  },
  {
    "text": "stuff it's a high-performance standards-based open-source general-purpose feature-rich RPC",
    "start": "76350",
    "end": "82680"
  },
  {
    "text": "framework all those things we are part",
    "start": "82680",
    "end": "87689"
  },
  {
    "text": "of CN CF as an incubating project and it's pretty nice for making native cloud",
    "start": "87689",
    "end": "94170"
  },
  {
    "text": "apps and it's it's come came out of the the it's the next generation of what we",
    "start": "94170",
    "end": "100259"
  },
  {
    "text": "had a stubby inside of GRP sorry inside of Google which stubby had proven itself",
    "start": "100259",
    "end": "105890"
  },
  {
    "text": "very very strongly as being able to scale and basically satisfy all of our",
    "start": "105890",
    "end": "113130"
  },
  {
    "text": "needs at Google so it's still actively developed there's lots of PR still",
    "start": "113130",
    "end": "120420"
  },
  {
    "text": "coming in it is production ready please go and use it there's you know risk there and we're currently a version 1.25",
    "start": "120420",
    "end": "127439"
  },
  {
    "text": "we've got a six-week release cadence so the GRC itself can work with things",
    "start": "127439",
    "end": "134810"
  },
  {
    "text": "other than protocol buffers but I'm gonna emphasize protocol buffers just because that's what is typically used",
    "start": "134810",
    "end": "140780"
  },
  {
    "text": "and that's sort of the normal getting started process and stuff and the",
    "start": "140780",
    "end": "146120"
  },
  {
    "text": "ecosystem overall typically uses protocol buffers so protocol buffers the",
    "start": "146120",
    "end": "151160"
  },
  {
    "text": "general process is you make a proto file which has the IDL which is that's the",
    "start": "151160",
    "end": "157850"
  },
  {
    "text": "interface definition language it sort of defines the contract between a client and a server and that will have both the",
    "start": "157850",
    "end": "166490"
  },
  {
    "text": "messages that you all are going to send back and forth but also these services and our pcs that all be but then using",
    "start": "166490",
    "end": "173120"
  },
  {
    "text": "that proto file there are code generators for basically all your favorite languages that produce a nice",
    "start": "173120",
    "end": "180500"
  },
  {
    "text": "idiomatic stub and API in order to access yeah and to implement those those",
    "start": "180500",
    "end": "188870"
  },
  {
    "text": "services and use those messages and so for example it'll produce a server stub",
    "start": "188870",
    "end": "196880"
  },
  {
    "text": "that you'll extend and then implement your own business logic and then on client side it'll implement a client",
    "start": "196880",
    "end": "202580"
  },
  {
    "text": "stub where you just call a particular method after connecting so because some",
    "start": "202580",
    "end": "209630"
  },
  {
    "text": "many of y'all may not be granted there were lots of hands of people familiar with your pcs or so a lot of people",
    "start": "209630",
    "end": "216260"
  },
  {
    "text": "probably know G RPC or protocol buffers but it's a binary data representation",
    "start": "216260",
    "end": "221770"
  },
  {
    "text": "it's heavily intended to be or one of its strong features is the backward",
    "start": "221770",
    "end": "229760"
  },
  {
    "text": "compatibility story you can add to it and it's over time you can add more and",
    "start": "229760",
    "end": "235040"
  },
  {
    "text": "more things and it's going to be pretty compact on the wire as you do so and this has had code generators for many",
    "start": "235040",
    "end": "242060"
  },
  {
    "text": "languages for quite a while but there's now a lot more and it is nicely strongly-typed for all those people that",
    "start": "242060",
    "end": "247730"
  },
  {
    "text": "like that as opposed to just some maps and some lists and hope you know what's",
    "start": "247730",
    "end": "253070"
  },
  {
    "text": "inside of there it's not required for G RPC as I said but it's very very handy",
    "start": "253070",
    "end": "259100"
  },
  {
    "text": "so there there's sort of a nice mixing of the",
    "start": "259100",
    "end": "264130"
  },
  {
    "text": "the two projects so we'll all sort of go through an example this is the route",
    "start": "264130",
    "end": "269500"
  },
  {
    "text": "guide example which is sort of the second example in if you're looking at a repo that has the hello world and things",
    "start": "269500",
    "end": "275890"
  },
  {
    "text": "like that and so there's a couple different things that's a little small over there on the right but basically we're gonna need to",
    "start": "275890",
    "end": "282730"
  },
  {
    "text": "define some messages this is talking about like a geographical route where you're moving from point A to point B so",
    "start": "282730",
    "end": "290110"
  },
  {
    "text": "we'll need to talk about like points on a globe we're going to talk about features that are something of interest",
    "start": "290110",
    "end": "296440"
  },
  {
    "text": "at a certain point and then there's also notes that people can exchange back and",
    "start": "296440",
    "end": "302350"
  },
  {
    "text": "forth and then there's also going to be a two methods that were going to be talking about here which is a get",
    "start": "302350",
    "end": "307720"
  },
  {
    "text": "feature saying hey I'm at this place what's at this place and the route chat",
    "start": "307720",
    "end": "313300"
  },
  {
    "text": "where people can sort of send notes back and forth if you're geographically located near each other and so the first",
    "start": "313300",
    "end": "320740"
  },
  {
    "text": "thing you you will do is you go ahead and define and you start with your proto as I said and you go ahead and define",
    "start": "320740",
    "end": "326200"
  },
  {
    "text": "the messages you're working with so here we've got a point and it's got a",
    "start": "326200",
    "end": "331480"
  },
  {
    "text": "latitude and longitude and these messages are basically like structures very similar to that and then we've got",
    "start": "331480",
    "end": "339400"
  },
  {
    "text": "a feature which has inside a bit a nested point the nested point has is",
    "start": "339400",
    "end": "348730"
  },
  {
    "text": "sort of acts like a pointer where you can know whether or not it's set so it's and then we've got this route note which",
    "start": "348730",
    "end": "354730"
  },
  {
    "text": "also contains a point and it has some sort of arbitrary message that one user is wanting to send another so now we're",
    "start": "354730",
    "end": "362290"
  },
  {
    "text": "finally getting into G RPC so we've got some messages which we're wanting to communicate between a client and a",
    "start": "362290",
    "end": "367510"
  },
  {
    "text": "server and we're gonna define some services down here at the bottom so",
    "start": "367510",
    "end": "372670"
  },
  {
    "text": "every service is just a collection of RPC methods or RPC functions they are a",
    "start": "372670",
    "end": "381430"
  },
  {
    "text": "service itself is basically just a namespace where all these sorts of things go within and within this we went",
    "start": "381430",
    "end": "389470"
  },
  {
    "text": "ahead and if I'd into to our pcs RBC's in gypsy and in part about",
    "start": "389470",
    "end": "396300"
  },
  {
    "text": "have one exactly one request and exactly one response if you need multiple arguments or things like that you just",
    "start": "396300",
    "end": "402330"
  },
  {
    "text": "put those inside of a message and that allows you to add things in the future",
    "start": "402330",
    "end": "408720"
  },
  {
    "text": "it's not fun if you only have two arguments you need to add a third and you can't because that would break all",
    "start": "408720",
    "end": "413940"
  },
  {
    "text": "of your existing clients but then there's something a little bit",
    "start": "413940",
    "end": "420060"
  },
  {
    "text": "interesting over here gypsy does not just do this normal request response that's typical for our",
    "start": "420060",
    "end": "426780"
  },
  {
    "text": "pcs it also supports streaming and streaming is a series of ordered",
    "start": "426780",
    "end": "433460"
  },
  {
    "text": "messages one after the other and the client can do streaming the server can do streaming they can both do streaming",
    "start": "433460",
    "end": "439230"
  },
  {
    "text": "and so that's where we get a client streaming service streaming by die and by Die streaming is the most advanced it",
    "start": "439230",
    "end": "445650"
  },
  {
    "text": "basically lets you do whatever the heck you want at that point it's your own sort of TCP but based on messages and",
    "start": "445650",
    "end": "451770"
  },
  {
    "text": "you get some levels of routing some other things nicety you narrow RPC is by",
    "start": "451770",
    "end": "457050"
  },
  {
    "text": "far the most common that we would hope that that's most cases because it's much",
    "start": "457050",
    "end": "463560"
  },
  {
    "text": "simpler much faster to your head around and it doesn't require as much telling",
    "start": "463560",
    "end": "469830"
  },
  {
    "text": "people how to use it but whenever there's let's say you want to do a watch service where you were gonna do",
    "start": "469830",
    "end": "476190"
  },
  {
    "text": "notifications or something like that which we have in this route chat we can go ahead and do streaming and so this",
    "start": "476190",
    "end": "483180"
  },
  {
    "text": "streaming allows someone it's this little chat it can they can send a new",
    "start": "483180",
    "end": "488730"
  },
  {
    "text": "message whenever they want it's just an open stream so that it's the spy die streaming here and they can send a",
    "start": "488730",
    "end": "498150"
  },
  {
    "text": "message whenever they want and then whenever something happens they can receive a message whenever they want it so it's just an open channel that can do",
    "start": "498150",
    "end": "505920"
  },
  {
    "text": "whatever they need at that moment there's no waiting for another request to come in or needing to to create new",
    "start": "505920",
    "end": "513300"
  },
  {
    "text": "are PCs whenever the old ones finish for each and every single message so we",
    "start": "513300",
    "end": "520770"
  },
  {
    "text": "define it the proto it happens that that by itself does not do anything like we actually need code apparently to",
    "start": "520770",
    "end": "527190"
  },
  {
    "text": "implement to clients and servers this is still there we live in where we actually have to be",
    "start": "527190",
    "end": "532300"
  },
  {
    "text": "developers and so the code generators will take that proto and then give you something that's that's good nice and",
    "start": "532300",
    "end": "538420"
  },
  {
    "text": "usable so the messages get turned into idiomatic objects for the various",
    "start": "538420",
    "end": "543730"
  },
  {
    "text": "languages and then the service gets integrated into like an abstract class",
    "start": "543730",
    "end": "550420"
  },
  {
    "text": "if that's the language paradigm and then you get a client sort of we call them",
    "start": "550420",
    "end": "557110"
  },
  {
    "text": "client stubs you get a client B to be able to send those messages and receive the messages and so for example here's a",
    "start": "557110",
    "end": "564610"
  },
  {
    "text": "what a rough sort of view of what it would look like in C++ again these slides are on the schedule so the the",
    "start": "564610",
    "end": "573190"
  },
  {
    "text": "very top is the the stub that the client went end up using and it looks mostly",
    "start": "573190",
    "end": "579220"
  },
  {
    "text": "like a normal feature function call except you're gonna have this this larger request and larger response that",
    "start": "579220",
    "end": "585460"
  },
  {
    "text": "you're gonna be putting in there and then there's a way to go ahead and create a new stub to some destination",
    "start": "585460",
    "end": "591790"
  },
  {
    "text": "and then at the bottom here is the service server side of this dub",
    "start": "591790",
    "end": "596830"
  },
  {
    "text": "it's just got two methods here that you just override and implement yourself and",
    "start": "596830",
    "end": "601870"
  },
  {
    "text": "it receives the request and it can respond with the response and those are just data that you're just gonna fill up",
    "start": "601870",
    "end": "609790"
  },
  {
    "text": "and return whenever you're done and yes",
    "start": "609790",
    "end": "615340"
  },
  {
    "text": "so it was down here at the bottom and then up at the top was that the client what the client would use and so we",
    "start": "615340",
    "end": "623530"
  },
  {
    "text": "talked about there's quite a few features just RPC by itself it's been around for quite a while in some ways",
    "start": "623530",
    "end": "630220"
  },
  {
    "text": "not too interesting because we've had it for so long but jesse is and basically",
    "start": "630220",
    "end": "637870"
  },
  {
    "text": "all the languages that people tend to care about yes there's some ellipses",
    "start": "637870",
    "end": "643720"
  },
  {
    "text": "down here at the bottom as well if you're wanting a language and it's reasonably mainstream it's probably in",
    "start": "643720",
    "end": "650290"
  },
  {
    "text": "this list and so that's not a problem for you you can use a GRB service",
    "start": "650290",
    "end": "655630"
  },
  {
    "text": "wherever whatever the clients and servers sorry if you if the clients and",
    "start": "655630",
    "end": "660730"
  },
  {
    "text": "servers are mix-and-match which languages if you've got a very heterogeneous set",
    "start": "660730",
    "end": "666490"
  },
  {
    "text": "of clients you can make all that happen also it's working pretty well for the",
    "start": "666490",
    "end": "672459"
  },
  {
    "text": "various platforms if you're on mobile if you are on Windows or if you're on Linux if you're on Io te on some arm device",
    "start": "672459",
    "end": "680820"
  },
  {
    "text": "all of those will work well with GRP see the the strict service contracts is",
    "start": "680820",
    "end": "688870"
  },
  {
    "text": "talking about the proto the the sorry the docked proto which is that ideal and",
    "start": "688870",
    "end": "694029"
  },
  {
    "text": "the IDL is very very important and useful since that is the entire",
    "start": "694029",
    "end": "700600"
  },
  {
    "text": "definition of what your service is and what it does and so this I cannot sort",
    "start": "700600",
    "end": "707380"
  },
  {
    "text": "of understate the I cannot overstate truly how important this is for bringing",
    "start": "707380",
    "end": "714580"
  },
  {
    "text": "some sort of semblance to the wild world that is AP is but it provides you can do",
    "start": "714580",
    "end": "720760"
  },
  {
    "text": "semantic versioning with it because there's a package system you can do",
    "start": "720760",
    "end": "726250"
  },
  {
    "text": "things that are like stateless restful api is there are some options that you can annotate on our pcs and there's some",
    "start": "726250",
    "end": "732910"
  },
  {
    "text": "translators in the ecosystem which will give it a G RPC service generate rest",
    "start": "732910",
    "end": "740370"
  },
  {
    "text": "service and so that's a very nice thing for whenever some people aren't wanting",
    "start": "740370",
    "end": "746589"
  },
  {
    "text": "to do Geo PC on the client-side or you're gonna go to an ecosystem that",
    "start": "746589",
    "end": "751990"
  },
  {
    "text": "would prefer really rest and some of the credit stuff here is related to the rest",
    "start": "751990",
    "end": "759779"
  },
  {
    "text": "so er PC is a binary protocol protobuf was a binary protocol GFC realize",
    "start": "759779",
    "end": "765579"
  },
  {
    "text": "heavily on HTTP to it that allows us to to multiplex multiple our pcs all um on",
    "start": "765579",
    "end": "773589"
  },
  {
    "text": "connection which as TLS is more and more important that means just creating more",
    "start": "773589",
    "end": "779470"
  },
  {
    "text": "connections you know willy-nilly is more expensive and so that means you can do",
    "start": "779470",
    "end": "784870"
  },
  {
    "text": "more our pcs with with fewer resources but there's also some other benefits we get like header compression and things",
    "start": "784870",
    "end": "790600"
  },
  {
    "text": "like that which mean that we can actually transport our PCs more efficiently and so we have optimized the",
    "start": "790600",
    "end": "799430"
  },
  {
    "text": "the the libraries they are much faster",
    "start": "799430",
    "end": "804620"
  },
  {
    "text": "than most people tend to need them which is a pretty good place to be",
    "start": "804620",
    "end": "811209"
  },
  {
    "text": "so stubby at Google was very important because it was a central place where all",
    "start": "813920",
    "end": "819800"
  },
  {
    "text": "the things could go active all and jerp see that we needed this sort of place",
    "start": "819800",
    "end": "826220"
  },
  {
    "text": "with like we knew that GFC was going to be important to be able to inject it and",
    "start": "826220",
    "end": "831410"
  },
  {
    "text": "make it do the things you wanted it to do so there's plenty of extension points where you can do your own integrations",
    "start": "831410",
    "end": "838129"
  },
  {
    "text": "or where there's plenty of integrations in the community for the various services whether that's going to be some",
    "start": "838129",
    "end": "844040"
  },
  {
    "text": "sort of service discovery in order to find your your servers and do load balancing whether that's stats and",
    "start": "844040",
    "end": "851000"
  },
  {
    "text": "tracing or security or just doing something that's very very application",
    "start": "851000",
    "end": "856519"
  },
  {
    "text": "specific that is just you know you made that you know two years ago and y'all are still using it sort of idea also",
    "start": "856519",
    "end": "863180"
  },
  {
    "text": "because it's on top of each to be - it's gonna work with proxies the majority of eight there's plenty of HTTP - proxies",
    "start": "863180",
    "end": "870199"
  },
  {
    "text": "out there and many of them are heavily used so the generated code does allow us to",
    "start": "870199",
    "end": "878180"
  },
  {
    "text": "provide very nice ap is that are easy to use also the the installation story is",
    "start": "878180",
    "end": "885019"
  },
  {
    "text": "is very nice there are some binary components in many of the languages which can can slow down installation but",
    "start": "885019",
    "end": "894769"
  },
  {
    "text": "we've got binaries produced which makes it very easy to just sort of use the normal packaging tools to install things",
    "start": "894769",
    "end": "901360"
  },
  {
    "text": "and then there's also things like cancellation propagation which adds",
    "start": "901360",
    "end": "906589"
  },
  {
    "text": "you've got a big network of our pcs can help propagate information from one from",
    "start": "906589",
    "end": "912319"
  },
  {
    "text": "the one node to another to reduce reduce your load or to give up once something",
    "start": "912319",
    "end": "918980"
  },
  {
    "text": "once the client no longer cares or to give you an idea of how much time you have to do an operation you're like two",
    "start": "918980",
    "end": "924920"
  },
  {
    "text": "microseconds isn't enough time for to do this RPC yeah maybe that's not gonna work out too well so you're able",
    "start": "924920",
    "end": "933620"
  },
  {
    "text": "to know that before you get started I also talked already some about the streaming the streaming is an escape",
    "start": "933620",
    "end": "940130"
  },
  {
    "text": "hatch in some ways it's again something that we majority of our pcs don't need",
    "start": "940130",
    "end": "945589"
  },
  {
    "text": "or shouldn't use but in a given application it's likely that you're gonna need it at some point like you",
    "start": "945589",
    "end": "952130"
  },
  {
    "text": "know there's that one thing that you needed to do and so you don't have to ditch everything and then go find",
    "start": "952130",
    "end": "957589"
  },
  {
    "text": "another service another way to communicate or you know do something on",
    "start": "957589",
    "end": "962870"
  },
  {
    "text": "top of TCP yourself or anything like that you can ended up just continuing to use Jerry PC and you are able to use the",
    "start": "962870",
    "end": "970040"
  },
  {
    "text": "streaming streaming is very nice for the the notification systems and things like that",
    "start": "970040",
    "end": "975410"
  },
  {
    "text": "but with the buy die you can basically do whatever you need the the client streaming and service streaming are yes",
    "start": "975410",
    "end": "983120"
  },
  {
    "text": "especially server streaming that's a thing that lots of people like because of like the notifications that the server can just push sometimes the",
    "start": "983120",
    "end": "989990"
  },
  {
    "text": "client stream you can do the same thing if you've got to sort of reversed a role between the client and server and those",
    "start": "989990",
    "end": "998330"
  },
  {
    "text": "those aren't really all that complicated the buy die streaming is where you get into the most of the complexity and that",
    "start": "998330",
    "end": "1003940"
  },
  {
    "text": "buy die streaming is full duplex and so you can have basically whatever protocol you want there's not any of this you",
    "start": "1003940",
    "end": "1010450"
  },
  {
    "text": "have to send all the requests before you receive all the responses GFC is based",
    "start": "1010450",
    "end": "1016900"
  },
  {
    "text": "on HB 2 I mentioned that and that is an RFC as nice standard we are developed",
    "start": "1016900",
    "end": "1024910"
  },
  {
    "text": "GBCs develop on github and we've been in CN CF for two two and a half years there",
    "start": "1024910",
    "end": "1031510"
  },
  {
    "text": "is a an RFC like process for a design changes if you'd like to propose your own but there's also plenty of things",
    "start": "1031510",
    "end": "1038410"
  },
  {
    "text": "that are you can just commit to the repo for for small things and it's it's oh",
    "start": "1038410",
    "end": "1046600"
  },
  {
    "text": "this slide didn't get we didn't add the logos here but it is being used by many",
    "start": "1046600",
    "end": "1053679"
  },
  {
    "text": "companies in production the Gypsy i/o website does list off some of them we",
    "start": "1053679",
    "end": "1059910"
  },
  {
    "text": "are very concerned with backward compatibility and cross language",
    "start": "1059910",
    "end": "1065070"
  },
  {
    "text": "compatibility because you saw the list of languages that means that there's quite a big matrix of things to test and",
    "start": "1065070",
    "end": "1074100"
  },
  {
    "text": "we do have interrupt tests between old versions of those languages and across the various languages to make sure that",
    "start": "1074100",
    "end": "1080190"
  },
  {
    "text": "they do work and those those do fine things occasionally we're very happy to",
    "start": "1080190",
    "end": "1085590"
  },
  {
    "text": "have them there's also things like fuzz testing and things like that for for security so at this point that was sort",
    "start": "1085590",
    "end": "1096180"
  },
  {
    "text": "of the whirlwind tour I'd like to open it up some to Q&A of sort of specific",
    "start": "1096180",
    "end": "1103050"
  },
  {
    "text": "things that y'all are interested in I can go into more detail and give you on",
    "start": "1103050",
    "end": "1108390"
  },
  {
    "text": "intro so there's a mic here if y'all or maybe in the front half the room you can",
    "start": "1108390",
    "end": "1114870"
  },
  {
    "text": "probably just raise your hand and I can point at you and repeat the question so",
    "start": "1114870",
    "end": "1123710"
  },
  {
    "text": "the question is what is the recommendation for doing load balancing of GRDC so GRC itself comes with a few",
    "start": "1124460",
    "end": "1132240"
  },
  {
    "text": "basic strategies so pick first is the default that is sort of what people expect if you're used to let's say HDPE",
    "start": "1132240",
    "end": "1139700"
  },
  {
    "text": "it's just you there's a bunch of addresses you know come across the first one that works and use that for all of",
    "start": "1139700",
    "end": "1146190"
  },
  {
    "text": "your communication so that's common across the wide internet and it's relatively safe as in it's not going to",
    "start": "1146190",
    "end": "1152460"
  },
  {
    "text": "have a big explosion of connections so that's the default there is round-robin which is the the first I've got more of",
    "start": "1152460",
    "end": "1159660"
  },
  {
    "text": "the machines let's just make a connection to each of them so round-robin is very common it would be",
    "start": "1159660",
    "end": "1166680"
  },
  {
    "text": "very normal to plug in your service discovery mechanism which we call name resolvers if that's just DNS and that's",
    "start": "1166680",
    "end": "1174300"
  },
  {
    "text": "that's there but there's also plenty of integrations with the various service discovery mechanisms and they'll just",
    "start": "1174300",
    "end": "1179760"
  },
  {
    "text": "return multiple addresses and we will just connect to each and that's that's very very common there are some more",
    "start": "1179760",
    "end": "1187980"
  },
  {
    "text": "advanced strategies like there was gypsy Elbe which is",
    "start": "1187980",
    "end": "1193259"
  },
  {
    "text": "right now deprecated in the new things coming both and the new thing is is the",
    "start": "1193259",
    "end": "1199539"
  },
  {
    "text": "XDS load balancer both of those are meant to be look sideload load balancers where the client is told in sort of a",
    "start": "1199539",
    "end": "1209610"
  },
  {
    "text": "partially rich form of how it should connect what it should connect to and so",
    "start": "1209610",
    "end": "1215139"
  },
  {
    "text": "then this there's a centralized load balancer which then makes certain decisions about what the clients should",
    "start": "1215139",
    "end": "1220629"
  },
  {
    "text": "do so that allows doing things like sub setting where you've got 1,000 servers only connect to 10 or 100 of them doing",
    "start": "1220629",
    "end": "1227980"
  },
  {
    "text": "jihad geographically based decisions and things like that",
    "start": "1227980",
    "end": "1233129"
  },
  {
    "text": "and then the the many of the languages support a plug-in API where you could",
    "start": "1233129",
    "end": "1240580"
  },
  {
    "text": "write your own load balancer",
    "start": "1240580",
    "end": "1243960"
  },
  {
    "text": "so the question is is gypsy going to support other types of transports other than just HTTP - what sort of things do",
    "start": "1256530",
    "end": "1263700"
  },
  {
    "text": "you have in mind I see I see",
    "start": "1263700",
    "end": "1284310"
  },
  {
    "text": "suppose mentioned that that in sort of sidecar environments hb2 still has a lot",
    "start": "1284310",
    "end": "1290190"
  },
  {
    "text": "has some overheads whenever you're talking to side cars and there's mention things like UNIX domain sockets and",
    "start": "1290190",
    "end": "1296070"
  },
  {
    "text": "things like that many of the languages support UNIX domain sockets some of them you get to fiddle with it a little bit",
    "start": "1296070",
    "end": "1303390"
  },
  {
    "text": "for example Java has no native support for UNIX domain sockets because it's like cross-platform what what are UNIX domain sockets but",
    "start": "1303390",
    "end": "1310740"
  },
  {
    "text": "multiple languages have UNIX domain sockets so it would still be HCP - on",
    "start": "1310740",
    "end": "1316110"
  },
  {
    "text": "top of UNIX domain sockets and that tends to work well for people I think",
    "start": "1316110",
    "end": "1322230"
  },
  {
    "text": "other transports depending on how big of a difference it is so that was just sort",
    "start": "1322230",
    "end": "1328050"
  },
  {
    "text": "of a low-level transport difference those are pretty easy to add and are generally fine if it was something more",
    "start": "1328050",
    "end": "1335100"
  },
  {
    "text": "complex like choosing something other than each should be - that we would probably look at ETV - is very useful",
    "start": "1335100",
    "end": "1341280"
  },
  {
    "text": "because it provides a lot of benefit and it's all the languages support it so you",
    "start": "1341280",
    "end": "1348660"
  },
  {
    "text": "you can mix and match pretty easily there is not any public API for doing it",
    "start": "1348660",
    "end": "1355740"
  },
  {
    "text": "for inserting in your own transports the depending on the language there's more",
    "start": "1355740",
    "end": "1361380"
  },
  {
    "text": "or less of a transport API but it's tends to be internal because we want to change it over time and and the",
    "start": "1361380",
    "end": "1367200"
  },
  {
    "text": "performance of a transport can influence you like we want to change the API in order to eke out performance and we we",
    "start": "1367200",
    "end": "1374280"
  },
  {
    "text": "do that do that pretty commonly but if there's if there's specifics again UNIX doing sake in particular should already",
    "start": "1374280",
    "end": "1380520"
  },
  {
    "text": "be a mostly soft problem although depending slightly on which language but if there's specific like if someone",
    "start": "1380520",
    "end": "1387300"
  },
  {
    "text": "wanted quick let's just say no quick is very Miller has different advantages in that",
    "start": "1387300",
    "end": "1392520"
  },
  {
    "text": "and downfalls you know it's it's that that we would do what takes much more",
    "start": "1392520",
    "end": "1398520"
  },
  {
    "text": "serious thought decide whether we wanted to burden the ecosystem with that that",
    "start": "1398520",
    "end": "1404070"
  },
  {
    "text": "option because each option sort of adds a cost but yes there are there are ways to plug in additional transports and",
    "start": "1404070",
    "end": "1410730"
  },
  {
    "text": "some of that has been been done and for example like in Java the in process",
    "start": "1410730",
    "end": "1417150"
  },
  {
    "text": "transport is just implementing the transport API and it was able to completely wipe out not use HTTP 2 at",
    "start": "1417150",
    "end": "1424650"
  },
  {
    "text": "all and so there's some things there in processed transport I guess is the biggest one that we'd be interested in",
    "start": "1424650",
    "end": "1430310"
  },
  {
    "text": "making a little bit more real so our",
    "start": "1430310",
    "end": "1442200"
  },
  {
    "text": "socket was brought up we've we're a little bit familiar with it we've not given it I think serious thought if if",
    "start": "1442200",
    "end": "1450960"
  },
  {
    "text": "there's interest we could look into it did you want to say something ok can you",
    "start": "1450960",
    "end": "1458340"
  },
  {
    "text": "talk a little bit more about the interceptors and the reconnect logic sure so I think over here on the",
    "start": "1458340",
    "end": "1465360"
  },
  {
    "text": "features where is it oh those were different sites yeah so so interceptors",
    "start": "1465360",
    "end": "1473400"
  },
  {
    "text": "are pretty much in all languages they were added to Java first and they're they're made with Lorraine interceptors",
    "start": "1473400",
    "end": "1480750"
  },
  {
    "text": "the the idea is to allow you a place where you can insert in your own logic",
    "start": "1480750",
    "end": "1486180"
  },
  {
    "text": "whatever the heck you want it to be and so there are they're commonly known as like middleware and some layers or",
    "start": "1486180",
    "end": "1491790"
  },
  {
    "text": "filters there those are basically the same as interceptors the it tends to be",
    "start": "1491790",
    "end": "1500730"
  },
  {
    "text": "something that the purpose of interceptors is for times where you you",
    "start": "1500730",
    "end": "1506130"
  },
  {
    "text": "have some particular behavior and you want to do it across all your our pcs or many different types of our pcs so for",
    "start": "1506130",
    "end": "1512370"
  },
  {
    "text": "example off would be a common one although we've got other ways of doing off but if you want to do logging and",
    "start": "1512370",
    "end": "1520230"
  },
  {
    "text": "some people have implemented caching through interceptors and things like that that's that's a",
    "start": "1520230",
    "end": "1529530"
  },
  {
    "text": "high-level view is that can I is there something more specific I guess about interceptors I could answer okay",
    "start": "1529530",
    "end": "1537950"
  },
  {
    "text": "so so then the other thing is to reconnect logic so I it was on the",
    "start": "1537950",
    "end": "1543180"
  },
  {
    "text": "slides y'all could have seen that there that gypsy will automatically reconnect whenever you're using to your PC you you",
    "start": "1543180",
    "end": "1548940"
  },
  {
    "text": "make a channel which has some host name that you're gonna connect to and it's",
    "start": "1548940",
    "end": "1554550"
  },
  {
    "text": "gypsies job to manage connections however many of them are there are like if you're doing round-robin is gonna be",
    "start": "1554550",
    "end": "1560400"
  },
  {
    "text": "lots of them if it's stick first there will be few of them but it's gypsies job and at any point in time the server may",
    "start": "1560400",
    "end": "1568440"
  },
  {
    "text": "want to disconnect or the network goes down or you know things happen",
    "start": "1568440",
    "end": "1573750"
  },
  {
    "text": "ER PC but well just out of the box reconnect whenever whenever things get",
    "start": "1573750",
    "end": "1579690"
  },
  {
    "text": "better there is exponential back-off built in and so like because that's really really",
    "start": "1579690",
    "end": "1586740"
  },
  {
    "text": "important whenever things are getting disconnected you don't want to hammer the server then just hoping it's gonna",
    "start": "1586740",
    "end": "1592320"
  },
  {
    "text": "get better so there's exponential back-off to let things recover gracefully but commonly",
    "start": "1592320",
    "end": "1597690"
  },
  {
    "text": "that won't come into play commonly there's a disconnect and we reconnect and you go about your merry",
    "start": "1597690",
    "end": "1603090"
  },
  {
    "text": "way and you never saw it streams and our pcs are bound to a particular connection",
    "start": "1603090",
    "end": "1608910"
  },
  {
    "text": "so if that connection breaks the RPC will fail but any new our pcs would be",
    "start": "1608910",
    "end": "1614520"
  },
  {
    "text": "completely fine there's no course guaranteed correspondence between if you",
    "start": "1614520",
    "end": "1619680"
  },
  {
    "text": "do to our pcs that they'll go on the same connection or anything like that it's just handled by the the underlying",
    "start": "1619680",
    "end": "1626460"
  },
  {
    "text": "channel so again I had a question on",
    "start": "1626460",
    "end": "1633150"
  },
  {
    "text": "load balancing when we use G RPC so do we have a solution or can you suggest a",
    "start": "1633150",
    "end": "1640140"
  },
  {
    "text": "load balancer that could help me do continuous hashing I mean in order to do",
    "start": "1640140",
    "end": "1647010"
  },
  {
    "text": "continuous hashing I need to unpack the proto yes so there's there's a couple",
    "start": "1647010",
    "end": "1653160"
  },
  {
    "text": "different times that you're wanting to do routing or get a particular request to a",
    "start": "1653160",
    "end": "1659200"
  },
  {
    "text": "particular server because there's either",
    "start": "1659200",
    "end": "1664419"
  },
  {
    "text": "starting going on or things like that so the common pattern there is either a VNA interceptor or just in the application",
    "start": "1664419",
    "end": "1671229"
  },
  {
    "text": "code you put a particular key that's useful and you can have a couple keys or something like that but you put it but",
    "start": "1671229",
    "end": "1676809"
  },
  {
    "text": "take the key that's useful into the metadata and so GRC has in addition to their every request response all these",
    "start": "1676809",
    "end": "1683529"
  },
  {
    "text": "messages there's some metadata which is basically the HTTP headers and so",
    "start": "1683529",
    "end": "1688539"
  },
  {
    "text": "whenever if you let's say you're doing proxy based load balancing which some people are the proxy can then see that",
    "start": "1688539",
    "end": "1694359"
  },
  {
    "text": "information and make a routing decision based on it did if they want to do that that they can hash maybe that value and",
    "start": "1694359",
    "end": "1700479"
  },
  {
    "text": "then send it to particular back-end but the the client it's also possible for it",
    "start": "1700479",
    "end": "1705609"
  },
  {
    "text": "to do the dot hashing itself the did this is the sort of thing that would be",
    "start": "1705609",
    "end": "1711669"
  },
  {
    "text": "available eventually with the XDS load balancer because the XDS protocol allows",
    "start": "1711669",
    "end": "1716799"
  },
  {
    "text": "some of that information to be transmitted to tell the client what to do but it's also possible if you've",
    "start": "1716799",
    "end": "1724330"
  },
  {
    "text": "gonna have a custom scheme or things like that to write your own load balancing plugin that will that won't be",
    "start": "1724330",
    "end": "1729849"
  },
  {
    "text": "able to use that information sometimes people will just use an interceptor or something like that as well that look at",
    "start": "1729849",
    "end": "1736479"
  },
  {
    "text": "the value and then send it to one connection versus another we would generally prefer it to be within that",
    "start": "1736479",
    "end": "1742299"
  },
  {
    "text": "GRC channel because that's a that's easier for the clients to use thank you",
    "start": "1742299",
    "end": "1749849"
  },
  {
    "text": "thank you you talk about the performance trade-offs when you're trying to do like",
    "start": "1756170",
    "end": "1763910"
  },
  {
    "text": "streaming with some sort of message broker with like a sidecar proxy with native integration versus like a G RPC",
    "start": "1763910",
    "end": "1770550"
  },
  {
    "text": "bridge there was quite a bit in that question so so some trade-offs streaming",
    "start": "1770550",
    "end": "1787260"
  },
  {
    "text": "is technically a little bit faster than the the unary use request response we",
    "start": "1787260",
    "end": "1792990"
  },
  {
    "text": "tend not to I tend not to want to tell people that too much because then I think they'll go off the deep end and",
    "start": "1792990",
    "end": "1798000"
  },
  {
    "text": "try to use it everywhere because I gets them a little bit marginal performance improvement typically request response",
    "start": "1798000",
    "end": "1804060"
  },
  {
    "text": "is just so much easier to debug and understand what the system is doing staffs means something more but a lot of",
    "start": "1804060",
    "end": "1811890"
  },
  {
    "text": "high performance use cases benefit very strongly from streaming for example any",
    "start": "1811890",
    "end": "1818910"
  },
  {
    "text": "of this isn't even I would say high performance but if you're doing uploads and downloads streaming can be a huge",
    "start": "1818910",
    "end": "1824070"
  },
  {
    "text": "help there because you've got proper pipelining where you can send one thing and then the next and the next and it's",
    "start": "1824070",
    "end": "1829470"
  },
  {
    "text": "not gonna overburden the server you don't have to figure out what batch size you do how many concurrent RBC's or to",
    "start": "1829470",
    "end": "1834900"
  },
  {
    "text": "the same level of how many concurrent RPC as you do so streaming can be a huge huge win there that said it's gonna tend",
    "start": "1834900",
    "end": "1842340"
  },
  {
    "text": "to be a win for your application in some way as in your application will be able to be more efficient in just how it",
    "start": "1842340",
    "end": "1849210"
  },
  {
    "text": "communicates not as much for the wire level winds of encoding one way or",
    "start": "1849210",
    "end": "1855900"
  },
  {
    "text": "versus the other let's see you said a broker I mean a",
    "start": "1855900",
    "end": "1862140"
  },
  {
    "text": "broker has it's gonna be a proxy in some way so it's gonna I think it would have",
    "start": "1862140",
    "end": "1867840"
  },
  {
    "text": "the most obvious performance characteristics it's gonna have to parse",
    "start": "1867840",
    "end": "1873330"
  },
  {
    "text": "it and translate it I'm not sure like that that's just a straightforward",
    "start": "1873330",
    "end": "1878640"
  },
  {
    "text": "trade-off you get to figure out what other thing are you going to consider other than the broker",
    "start": "1878640",
    "end": "1883670"
  },
  {
    "text": "and whether you're getting enough bang for your buck for the broker I like brokers but you it's not good for every",
    "start": "1883670",
    "end": "1890390"
  },
  {
    "text": "situation yes first one here is their",
    "start": "1890390",
    "end": "1903200"
  },
  {
    "text": "postman like tool to view the requests in the response things like that so I'm",
    "start": "1903200",
    "end": "1908960"
  },
  {
    "text": "trying to think back it's been a little while since I looked at postman I'm trying to remember exactly where it fits in there are some tools to fire off your",
    "start": "1908960",
    "end": "1917990"
  },
  {
    "text": "own requests and see the responses but it was it did it do for live live on the",
    "start": "1917990",
    "end": "1925460"
  },
  {
    "text": "server and client okay it simulates the client okay okay so there are a couple",
    "start": "1925460",
    "end": "1932000"
  },
  {
    "text": "different command-line tools that will you can fire our pcs I'll just on the",
    "start": "1932000",
    "end": "1937700"
  },
  {
    "text": "command line giving it the request and then seeing the response many of them will also use the JSON converter or the",
    "start": "1937700",
    "end": "1944900"
  },
  {
    "text": "text conversion for pro dos so that you can actually see it as a human being",
    "start": "1944900",
    "end": "1951040"
  },
  {
    "text": "because otherwise it's gobbledygook binary so there's the GRC CLI which we",
    "start": "1951040",
    "end": "1958820"
  },
  {
    "text": "don't have a prebuilt binaries for but it works grps curled your curl there's two",
    "start": "1958820",
    "end": "1967160"
  },
  {
    "text": "of them one of them I found I really really liked I think it was the one without the",
    "start": "1967160",
    "end": "1972170"
  },
  {
    "text": "CC but it was an NGO and it was very",
    "start": "1972170",
    "end": "1977780"
  },
  {
    "text": "nice pre-built binaries and it also does have a JSON request and you get a JSON",
    "start": "1977780",
    "end": "1984140"
  },
  {
    "text": "response granted it's it's proto over the wire and it can do some of the load balancing things like that to you sort",
    "start": "1984140",
    "end": "1991010"
  },
  {
    "text": "of give it a name yeah what time is this is talk scheduled and nourish",
    "start": "1991010",
    "end": "2000460"
  },
  {
    "text": "okay all right well thank you everyone I will be around others will be around",
    "start": "2000460",
    "end": "2006720"
  }
]