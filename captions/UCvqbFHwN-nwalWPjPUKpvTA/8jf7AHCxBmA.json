[
  {
    "text": "hello everyone this is the talk on Federation in kubernetes I'm M and I",
    "start": "1680",
    "end": "6919"
  },
  {
    "text": "work for University of California San Diego this talk will have two parts in",
    "start": "6919",
    "end": "14360"
  },
  {
    "text": "part one I will describe our cluster kubernetes cluster how we use admiralty",
    "start": "14360",
    "end": "20720"
  },
  {
    "text": "how our project came to the current state it's in and in the second part uh",
    "start": "20720",
    "end": "27160"
  },
  {
    "text": "Adrian the creator of admiralty will describe how Admiral is working also we will have",
    "start": "27160",
    "end": "33800"
  },
  {
    "text": "the demo on how Admiral T",
    "start": "33800",
    "end": "37878"
  },
  {
    "text": "works so our project is called PRP Pacific research platform and it grew",
    "start": "39399",
    "end": "46239"
  },
  {
    "text": "from a project uh measuring Network performance so the initial problem was",
    "start": "46239",
    "end": "53160"
  },
  {
    "text": "that uh University of California San Diego had multiple campuses connected with was",
    "start": "53160",
    "end": "60280"
  },
  {
    "text": "called science DMZ a scientific network uh 10 to 100 gbits per second so pretty",
    "start": "60280",
    "end": "66920"
  },
  {
    "text": "fast and sometimes this uh some segments of the network doesn't perform the way",
    "start": "66920",
    "end": "72960"
  },
  {
    "text": "they're supposed to and PRP was measuring uh Network performance by sending test data between those",
    "start": "72960",
    "end": "79880"
  },
  {
    "text": "locations that was done manually and at some point uh there was just more nodes",
    "start": "79880",
    "end": "85600"
  },
  {
    "text": "that PRP could handle manually and there was an idea to deploy kubernetes on top",
    "start": "85600",
    "end": "92000"
  },
  {
    "text": "so that kubernetes would orchestrate those measurement um",
    "start": "92000",
    "end": "98560"
  },
  {
    "text": "software uh once we deployed kubernetes we realized that now we have a cluster",
    "start": "98560",
    "end": "103759"
  },
  {
    "text": "of nodes uh we just occasionally send data but mostly sit in idle and we",
    "start": "103759",
    "end": "110360"
  },
  {
    "text": "started providing uh those Hardware resources to scientists uh to just do their",
    "start": "110360",
    "end": "117280"
  },
  {
    "text": "computations and we saw exponential growth of our cluster because it was",
    "start": "117280",
    "end": "122320"
  },
  {
    "text": "really easy to on board our our system uh bring in the",
    "start": "122320",
    "end": "128800"
  },
  {
    "text": "container run it and get free access to the resources for scientific use we",
    "start": "128800",
    "end": "135720"
  },
  {
    "text": "called this cluster notivus uh at some point more projects",
    "start": "135720",
    "end": "141959"
  },
  {
    "text": "started donating Hardware to us uh we partnered with internet 2 open science",
    "start": "141959",
    "end": "148239"
  },
  {
    "text": "greed donated some notes uh more networks were coming to",
    "start": "148239",
    "end": "155640"
  },
  {
    "text": "us and this is how now it looks in us um so we have cic",
    "start": "155640",
    "end": "165120"
  },
  {
    "text": "Network in California providing us the uh internet access and there is a bunch",
    "start": "165120",
    "end": "172080"
  },
  {
    "text": "of uh Regional networks that also donate Hardware to our cluster so basically we",
    "start": "172080",
    "end": "177760"
  },
  {
    "text": "have National kubernetes this cluster aggregating a bunch of computing",
    "start": "177760",
    "end": "185040"
  },
  {
    "text": "resources at some point we started bringing in uh GPU noes uh storage",
    "start": "185040",
    "end": "191599"
  },
  {
    "text": "noes and so on so now our cluster is pretty big and at some point it started",
    "start": "191599",
    "end": "198599"
  },
  {
    "text": "growing internationally so in international scale um we have nodes in Europe in",
    "start": "198599",
    "end": "207040"
  },
  {
    "text": "Asian Pacific re uh region we have no in Singapore uh Korea Guam",
    "start": "207040",
    "end": "216239"
  },
  {
    "text": "Australia and if we're talking about nodes themselves those are called Fiona",
    "start": "219159",
    "end": "226239"
  },
  {
    "text": "nodes uh flash iio Network appliances so those nodes are optimized for fast",
    "start": "226239",
    "end": "233920"
  },
  {
    "text": "Network so they can actually leverage those uh speeds and some know can fit up",
    "start": "233920",
    "end": "240840"
  },
  {
    "text": "to eight uh gaming gpus and some nodes have a bunch of hard",
    "start": "240840",
    "end": "247239"
  },
  {
    "text": "dis which we use for storage for our SEF",
    "start": "247239",
    "end": "252480"
  },
  {
    "text": "cluster so when we talk about Federation Uh current state is that we",
    "start": "255320",
    "end": "263080"
  },
  {
    "text": "have our PRP notilus cluster uh National for us and some",
    "start": "263080",
    "end": "270120"
  },
  {
    "text": "International nodes um now it has 7,000 CPU cores more than 500 gpus 2.5",
    "start": "270120",
    "end": "279639"
  },
  {
    "text": "petabytes of of Self Storage additional to that we deployed a",
    "start": "279639",
    "end": "286199"
  },
  {
    "text": "couple of smaller clusters we have a development k3s arm cluster we have",
    "start": "286199",
    "end": "292080"
  },
  {
    "text": "development Windows kubernetes cluster uh a gonus GPU cluster that's for gaming",
    "start": "292080",
    "end": "299280"
  },
  {
    "text": "and 3D visualization and uh we spawn to AWS",
    "start": "299280",
    "end": "306759"
  },
  {
    "text": "Cloud so all those clusters are separate it's really hard to integrate all that",
    "start": "306759",
    "end": "313400"
  },
  {
    "text": "Hardware in one and we need uh",
    "start": "313400",
    "end": "319840"
  },
  {
    "text": "Federation to work with them also we partnered with several other smaller",
    "start": "319840",
    "end": "325440"
  },
  {
    "text": "clusters and there is a federation already established between the those locations so basically all clusters can",
    "start": "325440",
    "end": "333039"
  },
  {
    "text": "finally talk to each other but are controlled by different organizations and different",
    "start": "333039",
    "end": "339479"
  },
  {
    "text": "people uh that's the huge benefit of admiralty because all our other projects",
    "start": "339479",
    "end": "346039"
  },
  {
    "text": "are seeing Federation as one cluster controlling others it's not one level",
    "start": "346039",
    "end": "352240"
  },
  {
    "text": "Federation between them and uh what we're are looking forward to is when expense",
    "start": "352240",
    "end": "360280"
  },
  {
    "text": "uh supercomputer is deployed it's also going to have the kubernetes cluster as",
    "start": "360280",
    "end": "367000"
  },
  {
    "text": "a part of it and admiralty will be used to Federate expense with Nal and other",
    "start": "367000",
    "end": "373919"
  },
  {
    "text": "clusters and that will bring a theoretical uh expansion to",
    "start": "373919",
    "end": "381639"
  },
  {
    "text": "100,000 cores of course we will not get all of them but we that's a prettyy big",
    "start": "381639",
    "end": "388400"
  },
  {
    "text": "increase in uh what we Federate with so how can we use resources between",
    "start": "388400",
    "end": "396199"
  },
  {
    "text": "those clusters uh as I said uh most of these clusters belong to different",
    "start": "396199",
    "end": "402680"
  },
  {
    "text": "organizations who want to set their own rules so we cannot Federation cannot",
    "start": "402680",
    "end": "408560"
  },
  {
    "text": "dictate uh policies for running stuff in",
    "start": "408560",
    "end": "413800"
  },
  {
    "text": "different clusters and scientists who use those clusters usually have access",
    "start": "413800",
    "end": "419199"
  },
  {
    "text": "to only one or several name spaces they again don't control the whole cluster",
    "start": "419199",
    "end": "425479"
  },
  {
    "text": "and so Federation should uh allow working on name spaces level when people",
    "start": "425479",
    "end": "431800"
  },
  {
    "text": "don't have to BU the admin to Federate but they can establish federations between the piece of the cluster that",
    "start": "431800",
    "end": "439800"
  },
  {
    "text": "they control uh additional to those uh small",
    "start": "439800",
    "end": "446160"
  },
  {
    "text": "clusters uh which are on Prem as I said we Federate with clouds uh Amazon Microsoft",
    "start": "446160",
    "end": "454280"
  },
  {
    "text": "aure Google Cloud if we need some resources from those clusters if we have",
    "start": "454280",
    "end": "460160"
  },
  {
    "text": "some big workloads or we want specialized Hardware uh we can always Federate with",
    "start": "460160",
    "end": "466199"
  },
  {
    "text": "those by simply running U some temporary cluster in those and then establishing",
    "start": "466199",
    "end": "471520"
  },
  {
    "text": "the Federation so how do we use Federation",
    "start": "471520",
    "end": "477240"
  },
  {
    "text": "now uh gitlab CI is what we started with",
    "start": "477240",
    "end": "484080"
  },
  {
    "text": "it's super convenient to like when we need to build a container on some uh",
    "start": "484080",
    "end": "490599"
  },
  {
    "text": "specialized Hardware like arm or Windows uh instead of manually creating",
    "start": "490599",
    "end": "496720"
  },
  {
    "text": "a gitlab runner somewhere else or trying to join this node in our big cluster we",
    "start": "496720",
    "end": "502280"
  },
  {
    "text": "just Federate and that will be in the demo uh so now we fed it with Windows",
    "start": "502280",
    "end": "507720"
  },
  {
    "text": "and arm and our git lab by just tagging the job can build a container in some",
    "start": "507720",
    "end": "515000"
  },
  {
    "text": "other cluster and this container will be stored in gitlab registry uh network monitoring right now",
    "start": "515000",
    "end": "522640"
  },
  {
    "text": "we have a bunch of monitoring ports in our a large cluster but the goal is that",
    "start": "522640",
    "end": "529160"
  },
  {
    "text": "any other cluster that wants to have automated monitoring can just join our",
    "start": "529160",
    "end": "535399"
  },
  {
    "text": "Federation and get all the monitoring pods",
    "start": "535399",
    "end": "540839"
  },
  {
    "text": "uh jobs bursting if some cluster has some unused resources and another one is",
    "start": "541200",
    "end": "546600"
  },
  {
    "text": "overloaded it's always useful to just burst to another cluster and clusters",
    "start": "546600",
    "end": "552360"
  },
  {
    "text": "can share their Computing resources without actually reattaching no so",
    "start": "552360",
    "end": "558360"
  },
  {
    "text": "that's super convenient uh medical data use is a big one some data can is highly protected it",
    "start": "558360",
    "end": "567120"
  },
  {
    "text": "cannot leave some cluster but this data can be used for uh some computation and",
    "start": "567120",
    "end": "574600"
  },
  {
    "text": "then results of this computation can be shared uh when it's anonymized so",
    "start": "574600",
    "end": "581160"
  },
  {
    "text": "Federation again can let you spawn your uh Computing job in another",
    "start": "581160",
    "end": "588720"
  },
  {
    "text": "cluster uh get some product anonymize it get it back so this is super convenient",
    "start": "588720",
    "end": "595320"
  },
  {
    "text": "uh special devices Internet of Things some devices are really small and Tiny",
    "start": "595320",
    "end": "601320"
  },
  {
    "text": "and they can just join a big cluster and just monitor inputs will kill it so",
    "start": "601320",
    "end": "606959"
  },
  {
    "text": "again this is super useful to Federate and U some iot devices are again",
    "start": "606959",
    "end": "613160"
  },
  {
    "text": "controlled by some other people and Federation helps",
    "start": "613160",
    "end": "619320"
  },
  {
    "text": "establish those connections without getting or requiring access to the",
    "start": "619320",
    "end": "624839"
  },
  {
    "text": "specialized Hardware uh future of federation we are",
    "start": "624839",
    "end": "631920"
  },
  {
    "text": "now working on the project that will allow us to uh create on demand layer to",
    "start": "631920",
    "end": "639680"
  },
  {
    "text": "fast pass around the world so there is a that's a project with surfnet uh it's",
    "start": "639680",
    "end": "645880"
  },
  {
    "text": "called NSA autog goal and this project already",
    "start": "645880",
    "end": "651639"
  },
  {
    "text": "can create Layer Two connections and tear them down on request and what we",
    "start": "651639",
    "end": "659440"
  },
  {
    "text": "right now is a special crd and operator which will allow pods that spawn in some",
    "start": "659440",
    "end": "666560"
  },
  {
    "text": "remote location to create a path for example to storage in some other location and this path will exist while",
    "start": "666560",
    "end": "673440"
  },
  {
    "text": "the Pod is running and then this path will will disappear and Federation will",
    "start": "673440",
    "end": "680200"
  },
  {
    "text": "help us to run this across several kubernetes clusters so if some cluster",
    "start": "680200",
    "end": "686399"
  },
  {
    "text": "wants to talk to another cluster it just creates a layer to connection and that will be controlled",
    "start": "686399",
    "end": "693200"
  },
  {
    "text": "by standard kubernetes API so this is a really great project that we're working",
    "start": "693200",
    "end": "700920"
  },
  {
    "text": "on this is the demo on Federation in this demo I will show how",
    "start": "700959",
    "end": "706519"
  },
  {
    "text": "Federation Works in our production cluster I will not go through details of",
    "start": "706519",
    "end": "711920"
  },
  {
    "text": "establishing the connection it's all covered in documentation and this is supposed to be the short demo",
    "start": "711920",
    "end": "719720"
  },
  {
    "text": "so now we're looking at the nodes in our production cluster and we see that the first node has the role of cluster and",
    "start": "719720",
    "end": "728800"
  },
  {
    "text": "master this is virtual node created by Admiral T so basically this represents",
    "start": "728800",
    "end": "734600"
  },
  {
    "text": "the whole remote cluster and Federated pods will run in this node while the",
    "start": "734600",
    "end": "740839"
  },
  {
    "text": "actual node is below it in this demo I will show how our gitlab can spawn Parts",
    "start": "740839",
    "end": "748639"
  },
  {
    "text": "in other clusters and get results from them so here is the jobs um table of our",
    "start": "748639",
    "end": "758440"
  },
  {
    "text": "gitlab these jobs are building container and uh putting it in gitlab registry but",
    "start": "758440",
    "end": "766880"
  },
  {
    "text": "while uh most projects are just building uh containers in our regular clust",
    "start": "766880",
    "end": "772279"
  },
  {
    "text": "through this uh project is setting up this architecture RM 64 uh",
    "start": "772279",
    "end": "780639"
  },
  {
    "text": "on the jobs which make them go to special runner in",
    "start": "780639",
    "end": "787560"
  },
  {
    "text": "gitlab let's look at our gitlab Nam",
    "start": "789000",
    "end": "795320"
  },
  {
    "text": "space so in this namespace we will see that it's labeled with multicluster",
    "start": "795320",
    "end": "801399"
  },
  {
    "text": "Schuler enabled this will tell Admiral T to look at this namespace and wait for",
    "start": "801399",
    "end": "807800"
  },
  {
    "text": "parts that we mark as pated if we go in this name space we",
    "start": "807800",
    "end": "813160"
  },
  {
    "text": "will see several Runners uh running already on regular uh",
    "start": "813160",
    "end": "818320"
  },
  {
    "text": "nodes if you look at deployments there is already deployment that I created called gitl Runner",
    "start": "818320",
    "end": "826240"
  },
  {
    "text": "Federated we can look at it we will see that in template for",
    "start": "826240",
    "end": "834519"
  },
  {
    "text": "parts it has the multicluster Admiral ti/ elect",
    "start": "834519",
    "end": "839639"
  },
  {
    "text": "annotation so this again will tell admiralty that parts from this",
    "start": "839639",
    "end": "844800"
  },
  {
    "text": "deployment should be Federated so admiralty will decide where to send them",
    "start": "844800",
    "end": "851040"
  },
  {
    "text": "to Let's scale this deployment to",
    "start": "851199",
    "end": "857959"
  },
  {
    "text": "one and we will see that this new pod is scheduled to run on this virtual",
    "start": "859279",
    "end": "867360"
  },
  {
    "text": "node so if you look at all pods all of them",
    "start": "867360",
    "end": "873160"
  },
  {
    "text": "are in our cluster but this one pod is running somewhere",
    "start": "873160",
    "end": "880279"
  },
  {
    "text": "else uh we can look at our arm",
    "start": "881399",
    "end": "888480"
  },
  {
    "text": "cluster uh again this is gitlab namespace but this is now remote cluster",
    "start": "888800",
    "end": "893920"
  },
  {
    "text": "Federated with our large one and this is the node this part is",
    "start": "893920",
    "end": "899800"
  },
  {
    "text": "running on so we see that kit laab Runner actually started on remote node",
    "start": "899800",
    "end": "906320"
  },
  {
    "text": "and in our large cluster we only have the proxy for this",
    "start": "906320",
    "end": "912199"
  },
  {
    "text": "pod let's switch back to our main",
    "start": "912199",
    "end": "917639"
  },
  {
    "text": "quest so this Runner already registered automatically in gitlab and if we rerun",
    "start": "919839",
    "end": "926759"
  },
  {
    "text": "one of the jobs the runner will run it",
    "start": "926759",
    "end": "935240"
  },
  {
    "text": "remotely so if we get go again to remote cluster we'll see that",
    "start": "935600",
    "end": "943000"
  },
  {
    "text": "new uh job",
    "start": "943000",
    "end": "948040"
  },
  {
    "text": "started and it just finished this is pretty",
    "start": "950399",
    "end": "956560"
  },
  {
    "text": "quick and the result of this job went into the",
    "start": "956560",
    "end": "962120"
  },
  {
    "text": "local container registry in our gitlab so this completed",
    "start": "962120",
    "end": "968639"
  },
  {
    "text": "successfully uh this allows gitlab to run runners in Federated clusters",
    "start": "968639",
    "end": "975759"
  },
  {
    "text": "without manually setting them up and control them from one single",
    "start": "975759",
    "end": "982759"
  },
  {
    "text": "location hi my name is Adrien I'm the CEO of admiralty Admiral is the company behind the open source project of the",
    "start": "985880",
    "end": "992360"
  },
  {
    "text": "same name admiralty is what makes the decentralized Federation presented byri",
    "start": "992360",
    "end": "997759"
  },
  {
    "text": "possible it's a multiclass control plane that uses common kubernetes extension patterns this talk will'll focus on",
    "start": "997759",
    "end": "1004880"
  },
  {
    "text": "Virtual cuet and the schedular framework what is virtual cuet this is a",
    "start": "1004880",
    "end": "1010199"
  },
  {
    "text": "screenshot from virtual cuet website so like the kubernetes cuet that",
    "start": "1010199",
    "end": "1016279"
  },
  {
    "text": "runs on each node a virtual cuet instance presents itself as a virtual node but instead of running containers",
    "start": "1016279",
    "end": "1022920"
  },
  {
    "text": "on local VM it runs them on remote system and there are 11 known providers",
    "start": "1022920",
    "end": "1030038"
  },
  {
    "text": "to this state including admiralty in the case of admiralty virtual cuets represent remote",
    "start": "1030039",
    "end": "1037600"
  },
  {
    "text": "clusters to help us understand the concepts that I'll explain later let's consider this example use case where a",
    "start": "1037600",
    "end": "1043720"
  },
  {
    "text": "user submits jobs in their own cluster cluster a but containers running other",
    "start": "1043720",
    "end": "1049480"
  },
  {
    "text": "clusters B and C and so in cluster a there are virtual nodes that represent",
    "start": "1049480",
    "end": "1055280"
  },
  {
    "text": "the other clusters the pots created by the kubernetes job controller are mutated by admiralties admission",
    "start": "1055280",
    "end": "1062080"
  },
  {
    "text": "controller into what we call proxy pods we call them like that because they",
    "start": "1062080",
    "end": "1068400"
  },
  {
    "text": "represent other pods not because they're proxy in the networking sense Admiral's proxy podular schedules",
    "start": "1068400",
    "end": "1076640"
  },
  {
    "text": "those pods to the virtual nodes and creates candidate pods and the other",
    "start": "1076640",
    "end": "1084360"
  },
  {
    "text": "clusters some of those candidates become delegate pods that are bound to real",
    "start": "1084360",
    "end": "1090400"
  },
  {
    "text": "nodes those real nodes could actually be other virtual nodes you can imagine",
    "start": "1090400",
    "end": "1096240"
  },
  {
    "text": "several levels of inception Admiral to also includes a bunch of controllers to update pot",
    "start": "1096240",
    "end": "1103159"
  },
  {
    "text": "statuses make config Maps secrets and other dependencies follow Parts notice",
    "start": "1103159",
    "end": "1108640"
  },
  {
    "text": "that that cluster a needs to talk to clusters B and C and we'll see different ways to do that in a",
    "start": "1108640",
    "end": "1115320"
  },
  {
    "text": "minute let's go back to Virtual cuet and how admiralty implements it virtual cuet has four main",
    "start": "1115320",
    "end": "1124280"
  },
  {
    "text": "responsibilities the first responsibility is to register a node object admiralty creates virtual nodes",
    "start": "1124280",
    "end": "1131520"
  },
  {
    "text": "based on user created targets and cluster targets those are custom resource",
    "start": "1131520",
    "end": "1137559"
  },
  {
    "text": "definitions now basically uh give a name to a virtual node and refer to a secret",
    "start": "1137559",
    "end": "1144120"
  },
  {
    "text": "that will be used to talk to the corresponding Target cluster the second responsibility is",
    "start": "1144120",
    "end": "1151400"
  },
  {
    "text": "heartbeat kubernetes needs to know that a node is healthy at regular intervals",
    "start": "1151400",
    "end": "1157679"
  },
  {
    "text": "otherwise it'll evict the pods uh if the node is not responding so",
    "start": "1157679",
    "end": "1162880"
  },
  {
    "text": "the virtual cuet in admiralty um checks the health of the target clusters in",
    "start": "1162880",
    "end": "1168840"
  },
  {
    "text": "updates the condition of the no the third and maybe the most",
    "start": "1168840",
    "end": "1174200"
  },
  {
    "text": "important responsibility is to handle PA so to run the actual containers",
    "start": "1174200",
    "end": "1180159"
  },
  {
    "text": "somewhere and in admiralty this is most of the logic with multicluster",
    "start": "1180159",
    "end": "1185320"
  },
  {
    "text": "scheduling but status feedback cross cluster garbage collection and so",
    "start": "1185320",
    "end": "1190360"
  },
  {
    "text": "on and of course there are some uh other features like uh handling logs requests",
    "start": "1190360",
    "end": "1197799"
  },
  {
    "text": "and exact requests and in admiralties case it's very simple we just forward those requests to the targeted clusters",
    "start": "1197799",
    "end": "1204440"
  },
  {
    "text": "kubernetes API three last rows um require cou conf",
    "start": "1204440",
    "end": "1211360"
  },
  {
    "text": "figs to Coal the target",
    "start": "1211360",
    "end": "1215600"
  },
  {
    "text": "clusters so let's talk about that an admiralty clusters are connected in the control plane uh in one: one",
    "start": "1217120",
    "end": "1226080"
  },
  {
    "text": "relationships and we say that a source and a Target cluster are connected when controllers in the source cluster can",
    "start": "1226080",
    "end": "1232320"
  },
  {
    "text": "call the kubernetes API server of the target cluster for that we need three",
    "start": "1232320",
    "end": "1237880"
  },
  {
    "text": "ingredients routing authentication and authorization routing may require a VPN",
    "start": "1237880",
    "end": "1244880"
  },
  {
    "text": "or a tunnel if the Clusters on public or if they're in different",
    "start": "1244880",
    "end": "1251120"
  },
  {
    "text": "vpcs authorization the last one is uh is quite straightforward uh he",
    "start": "1251120",
    "end": "1257520"
  },
  {
    "text": "uses a resources in the Target cluster and that's very important to jetri and",
    "start": "1257520",
    "end": "1262600"
  },
  {
    "text": "uh his colleagues and partners they want cluster admins to be in control of who",
    "start": "1262600",
    "end": "1268240"
  },
  {
    "text": "can do what in their clusters and authentication can be done",
    "start": "1268240",
    "end": "1273720"
  },
  {
    "text": "uh using different methods the the nice thing about having",
    "start": "1273720",
    "end": "1281159"
  },
  {
    "text": "onetoone uh relationships or connection cluster connections is that you can uh",
    "start": "1281159",
    "end": "1286760"
  },
  {
    "text": "build any kind of topology cluster topology with those as long as it's a directed graph it's valid and so the",
    "start": "1286760",
    "end": "1294039"
  },
  {
    "text": "first one that comes to mind is probably a management cluster talking to many workload clusters or you can do Cloud",
    "start": "1294039",
    "end": "1299640"
  },
  {
    "text": "bursting where uh a cluster is its own uh Target in the case of the research",
    "start": "1299640",
    "end": "1305919"
  },
  {
    "text": "platform presented by drry we have a decentralized federation where you know any there's no uh no",
    "start": "1305919",
    "end": "1314880"
  },
  {
    "text": "leader so I would talk about cross-cluster authentication this could be a a talk um a full talk U just",
    "start": "1317360",
    "end": "1326240"
  },
  {
    "text": "by itself so uh I'll go very quickly uh the the the simplest way to",
    "start": "1326240",
    "end": "1332799"
  },
  {
    "text": "uh to achieve it is to take a service account token from Target cluster and",
    "start": "1332799",
    "end": "1338840"
  },
  {
    "text": "Export it and save it in the source cluster you you could do the same thing",
    "start": "1338840",
    "end": "1344080"
  },
  {
    "text": "with the certificates API instead of a token you would have certificate so problem with those two methods is that",
    "start": "1344080",
    "end": "1350760"
  },
  {
    "text": "you're using the target clusters as an identity provider and not the source",
    "start": "1350760",
    "end": "1356159"
  },
  {
    "text": "cluster so you need to um distribute and rotate the secrets",
    "start": "1356159",
    "end": "1362520"
  },
  {
    "text": "yourself with other methods you can use an identity provider available in the source cluster to get tokens or",
    "start": "1362520",
    "end": "1370240"
  },
  {
    "text": "certificates and present those to the Target cluster and that Target cluster has to",
    "start": "1370240",
    "end": "1377480"
  },
  {
    "text": "be able to recogn I them and so if you're in the cloud you can use um cloud",
    "start": "1377480",
    "end": "1384440"
  },
  {
    "text": "ident like a kubernetes service account in the in a source cluster can",
    "start": "1384440",
    "end": "1389919"
  },
  {
    "text": "impersonate uh like an AWS uh IM roll or Google cloud service account as your",
    "start": "1389919",
    "end": "1396760"
  },
  {
    "text": "search principle however you name workload identities or um machine",
    "start": "1396760",
    "end": "1402440"
  },
  {
    "text": "identities and and then use that to connect to the",
    "start": "1402440",
    "end": "1407559"
  },
  {
    "text": "Target cluster if you're in control of the master nodes and you can change the API server Flags",
    "start": "1407559",
    "end": "1414440"
  },
  {
    "text": "that's great because then you can use web H token authentication authentica proxy if uh you need a kind of a a",
    "start": "1414440",
    "end": "1423400"
  },
  {
    "text": "solution that uh uh a one-size fits-all is uh you can use an",
    "start": "1423400",
    "end": "1429520"
  },
  {
    "text": "impersonating proxy that uses scenties impersonation to uh authenticate and",
    "start": "1429520",
    "end": "1439120"
  },
  {
    "text": "uh you can check out the Cubo IDC proxy um project as a prime example and",
    "start": "1439120",
    "end": "1444679"
  },
  {
    "text": "admiralty Cloud uses the same PR the same",
    "start": "1444679",
    "end": "1449639"
  },
  {
    "text": "Concepts admiralty has two schedulers the proxy schedular and the candidate",
    "start": "1452559",
    "end": "1460000"
  },
  {
    "text": "schedular proxy schedular handles proxy on the source cluster side and the",
    "start": "1460000",
    "end": "1465240"
  },
  {
    "text": "candidate schedular handles the candidate pods created by the proxy",
    "start": "1465240",
    "end": "1471679"
  },
  {
    "text": "schul and they're both built upon the schedular",
    "start": "1471679",
    "end": "1477320"
  },
  {
    "text": "framework the schedule framework is is great it's a set of uh go language",
    "start": "1478399",
    "end": "1485399"
  },
  {
    "text": "interfaces uh that allows you to build your own Schuler while retaining all the features",
    "start": "1485399",
    "end": "1491760"
  },
  {
    "text": "of the standard ular and adding yours add various",
    "start": "1491760",
    "end": "1497600"
  },
  {
    "text": "extension points in the scheduling cycle and The Binding cycle and so the Dots",
    "start": "1497600",
    "end": "1503840"
  },
  {
    "text": "here Mark where our like admal two",
    "start": "1503840",
    "end": "1509120"
  },
  {
    "text": "schedulers extend the the Q grity",
    "start": "1509120",
    "end": "1515159"
  },
  {
    "text": "schul so you can for example add some filters like how to filter nodes or you",
    "start": "1515159",
    "end": "1522000"
  },
  {
    "text": "can wait before actually binding to a node and this is useful in admal multicluster scheduling",
    "start": "1522000",
    "end": "1530039"
  },
  {
    "text": "algorithm because the two clusters talk to each other um using annotations on",
    "start": "1530039",
    "end": "1537760"
  },
  {
    "text": "pot chapons let's uh let's let see how this works so in this uh sequence diagram I",
    "start": "1537760",
    "end": "1546760"
  },
  {
    "text": "have the source cluster on one side and various Target clusters on the other side that have the same",
    "start": "1546760",
    "end": "1553120"
  },
  {
    "text": "components with different uh timelines when a source spot is created",
    "start": "1553120",
    "end": "1558640"
  },
  {
    "text": "and annotated um to use admiralty as a multicluster it is mutated we need to uh make a few",
    "start": "1558640",
    "end": "1567480"
  },
  {
    "text": "changes to the Pod like a schedular name um change the scheduling constraints so",
    "start": "1567480",
    "end": "1573760"
  },
  {
    "text": "that the PO can tolerate the virtual node we save the original scheduling constraints for",
    "start": "1573760",
    "end": "1580720"
  },
  {
    "text": "later we had a finalizer for cross cluster garbage collection different things check the documentation for",
    "start": "1580720",
    "end": "1586559"
  },
  {
    "text": "details while the proxy part is being uh scheduled and the virtual nodes that it",
    "start": "1586559",
    "end": "1594679"
  },
  {
    "text": "tolerates are filtered pod chapons are created in the",
    "start": "1594679",
    "end": "1599919"
  },
  {
    "text": "Target clusters that correspond to those ritual nodes a pod chapon has two",
    "start": "1599919",
    "end": "1606080"
  },
  {
    "text": "purposes uh it is the vehicle of annotations um the both schedulers",
    "start": "1606080",
    "end": "1612000"
  },
  {
    "text": "annotated the part chapon to communicate if they annotated one or the other pod",
    "start": "1612000",
    "end": "1618840"
  },
  {
    "text": "instead that would invalidate the cash of the schul so it's best to use uh like",
    "start": "1618840",
    "end": "1624080"
  },
  {
    "text": "another component another object for that but also maybe mostly most important from a",
    "start": "1624080",
    "end": "1631520"
  },
  {
    "text": "feature perspective if the source to Target cluster connection is interrupted and",
    "start": "1631520",
    "end": "1639120"
  },
  {
    "text": "the a pod has been running for a while a candidate part has been sorry a delegate part has been running for a while but is",
    "start": "1639120",
    "end": "1647000"
  },
  {
    "text": "evicted because note that runs on a real node that it runs on is um being",
    "start": "1647000",
    "end": "1652679"
  },
  {
    "text": "cordoned for example or stop responding we need a way to recreate the",
    "start": "1652679",
    "end": "1658559"
  },
  {
    "text": "Pod and the so so we need a local controller and that's the pod shaon pod",
    "start": "1658559",
    "end": "1663880"
  },
  {
    "text": "shapon is just a pot template that creates a pot all right enough about po chapon so each pot chapon creates a pot",
    "start": "1663880",
    "end": "1671799"
  },
  {
    "text": "that looks exactly like the Pod chapon and uh it includes the the",
    "start": "1671799",
    "end": "1679399"
  },
  {
    "text": "scheduling constraints that were saved um in the in annotations on the proxy",
    "start": "1679399",
    "end": "1685519"
  },
  {
    "text": "pod so that we can ensure that the intention of the user to schedule on a",
    "start": "1685519",
    "end": "1692399"
  },
  {
    "text": "node that had GPU for example is met at the real node level in the Target",
    "start": "1692399",
    "end": "1700880"
  },
  {
    "text": "clusters and so for example here only two of the target clusters out of three",
    "start": "1700880",
    "end": "1706840"
  },
  {
    "text": "can find a node for for the candidates their respective candidates so they",
    "start": "1706840",
    "end": "1713720"
  },
  {
    "text": "annotate the uh the poda prom the proxy cular sees that selects one of the two",
    "start": "1713720",
    "end": "1720039"
  },
  {
    "text": "uh using some topology spread constraint or other um other proxy pod level",
    "start": "1720039",
    "end": "1727399"
  },
  {
    "text": "scaling constraints that you can add and when one is when the highest",
    "start": "1727399",
    "end": "1733720"
  },
  {
    "text": "scoring node is selected the part chop run in corresponding Target",
    "start": "1733720",
    "end": "1739080"
  },
  {
    "text": "cluster is annotated again this time to Signal the candidate schedular that it",
    "start": "1739080",
    "end": "1744799"
  },
  {
    "text": "is allowed to bind the candidate part that becomes a delegate",
    "start": "1744799",
    "end": "1753000"
  },
  {
    "text": "part the proxy scal sees that binds the finally binds the proxy pod and the",
    "start": "1753000",
    "end": "1760320"
  },
  {
    "text": "other candidate pods are deleted uh via the Pod chons and garbage collection",
    "start": "1760320",
    "end": "1768559"
  },
  {
    "text": "in summary it is possible to build a global kubernetes cluster you just need",
    "start": "1768720",
    "end": "1774159"
  },
  {
    "text": "super fast networks and some custombuilt notes but even then R Tre colleagues and",
    "start": "1774159",
    "end": "1781360"
  },
  {
    "text": "partners found reasons to use multiple clusters the Federation R notilus has",
    "start": "1781360",
    "end": "1786840"
  },
  {
    "text": "over 10,000 cores currently and will soon be expended by an order of magnitude with the addition of the",
    "start": "1786840",
    "end": "1792960"
  },
  {
    "text": "expans supercomputer Federation uses admiralty",
    "start": "1792960",
    "end": "1798080"
  },
  {
    "text": "which itself uses virtual cuet and the schedular framework if you're interested if you're",
    "start": "1798080",
    "end": "1804399"
  },
  {
    "text": "interested in joining the research platform around Nautilus um contact them",
    "start": "1804399",
    "end": "1809519"
  },
  {
    "text": "and if you want to build your own Federation check out admiralty thank you",
    "start": "1809519",
    "end": "1816600"
  }
]