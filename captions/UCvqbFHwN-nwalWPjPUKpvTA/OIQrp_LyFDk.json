[
  {
    "text": "hey everyone I'm Sam I'm a customer engineer and I also work as a GTA PM focusing on the deprecation of PSP and",
    "start": "2820",
    "end": "10559"
  },
  {
    "text": "also migrating away from PSP to PSA",
    "start": "10559",
    "end": "15440"
  },
  {
    "text": "so um hopefully this doesn't come as a surprise to anyone but uh pod security policy has been deprecated since 121 and",
    "start": "19320",
    "end": "27420"
  },
  {
    "text": "is gone as of 125 no longer in the kubernetes code tree I presume that's",
    "start": "27420",
    "end": "33360"
  },
  {
    "text": "why you're all here so rest in peace pod security policy",
    "start": "33360",
    "end": "39840"
  },
  {
    "text": "quick show of hands how many of you have had a chance to try out pod security admission",
    "start": "39840",
    "end": "47239"
  },
  {
    "text": "all right great that's more than I was expecting so for those who haven't um we're not going to go into too much",
    "start": "47700",
    "end": "54300"
  },
  {
    "text": "depth on pod security admission here but I just want to give a really quick overview so pod security admission is a admission",
    "start": "54300",
    "end": "61320"
  },
  {
    "text": "controller that's built into kubernetes and enabled by default on all clusters",
    "start": "61320",
    "end": "66420"
  },
  {
    "text": "as of 123 stable in 125 um briefly the way pod security",
    "start": "66420",
    "end": "73260"
  },
  {
    "text": "admission works is you choose one of three standards and those are applied on a per namespace level",
    "start": "73260",
    "end": "79860"
  },
  {
    "text": "now the standards are privileged which means anything goes this is kind of like not having it there there at all",
    "start": "79860",
    "end": "87140"
  },
  {
    "text": "Baseline which allows the uh the default pod level Fields but doesn't let you",
    "start": "87140",
    "end": "94140"
  },
  {
    "text": "escalate permission beyond that and then restricted adds on some additional requirements like running as non-root to",
    "start": "94140",
    "end": "101340"
  },
  {
    "text": "enforce hardening best practices um the standards are published on the",
    "start": "101340",
    "end": "106500"
  },
  {
    "text": "kubernetes website so um check that out if you want to know more detail about what all is enforced",
    "start": "106500",
    "end": "111960"
  },
  {
    "text": "in there and all links will be on the last slide as well so you don't have to try and capture them as we go",
    "start": "111960",
    "end": "118799"
  },
  {
    "text": "um so for the uh talk agenda in a moment I'll hand it over to Sam who's going to give a demo of kind of the fast path",
    "start": "118799",
    "end": "126780"
  },
  {
    "text": "migration and what that might look like and then we'll talk about some of the problems",
    "start": "126780",
    "end": "131819"
  },
  {
    "text": "that you can face doing the fast path some of the like challenges in that",
    "start": "131819",
    "end": "136980"
  },
  {
    "text": "approach and then we'll see another demo of how you can do a safer migration",
    "start": "136980",
    "end": "142940"
  },
  {
    "text": "going a little slower and taking into account some of those problems then we'll wrap up with extending Beyond Pod",
    "start": "142940",
    "end": "151500"
  },
  {
    "text": "security admission so when when you need more control than what's given to you with that",
    "start": "151500",
    "end": "156860"
  },
  {
    "text": "yeah so with that hand it over to Sam yeah all right you ready for a demo in",
    "start": "156860",
    "end": "162060"
  },
  {
    "text": "this demo we're going to show a quick and easy migration from PSP to PSA ignoring the fact that there's mutating",
    "start": "162060",
    "end": "169260"
  },
  {
    "text": "PSPs we will cover it after the demo we're going to cover what a mutating PSP",
    "start": "169260",
    "end": "174300"
  },
  {
    "text": "is and why you might have to take special care for that for now we're going to ignore that we're going to ignore that we're going to assume in",
    "start": "174300",
    "end": "180000"
  },
  {
    "text": "this environment there's no mutating PSPs active so",
    "start": "180000",
    "end": "186260"
  },
  {
    "text": "first let's verify that this cluster is using PSP it's active it's preventing",
    "start": "186680",
    "end": "192540"
  },
  {
    "text": "previous Parts which is the main use case for this demo so we're going to ignore the other rules of this PSP policy the main thing I want you to look",
    "start": "192540",
    "end": "200040"
  },
  {
    "text": "at is previous walls so this is you should prevent us from having any previous Parts in this in a",
    "start": "200040",
    "end": "206700"
  },
  {
    "text": "in this namespace now if you want to use PSP how do you how do you assign it you have to create",
    "start": "206700",
    "end": "212879"
  },
  {
    "text": "a cluster role where you say I will be able to use a pod security",
    "start": "212879",
    "end": "219420"
  },
  {
    "text": "policy made my my PSP which is the one that we just defined then you have to",
    "start": "219420",
    "end": "224700"
  },
  {
    "text": "create a cluster role binding or raw binding where you assign that role to a",
    "start": "224700",
    "end": "230640"
  },
  {
    "text": "specific uh for in this case we're assigning the role to the service accounts in the default namespace and",
    "start": "230640",
    "end": "238500"
  },
  {
    "text": "that's the ux for PSP it's I you guys love that is it is it very convenient create a PSP policy create a cluster",
    "start": "238500",
    "end": "245459"
  },
  {
    "text": "order then assign it for a role binding doesn't seem super convenient I will cover that we'll cover it in a moment so",
    "start": "245459",
    "end": "250920"
  },
  {
    "text": "that's how PSP Works let's let's make sure it's working as expected we're going to try deploy a",
    "start": "250920",
    "end": "256979"
  },
  {
    "text": "prettiest part of security context prayer is true so what we expect is that",
    "start": "256979",
    "end": "262079"
  },
  {
    "text": "this should not work it should prevent it should not be able to create a pot wait it did",
    "start": "262079",
    "end": "268500"
  },
  {
    "text": "it create a deployment successfully let's take a deeper look at where it actually really worked or not",
    "start": "268500",
    "end": "274560"
  },
  {
    "text": "we're going to describe the deployment and see if it actually created pods",
    "start": "274560",
    "end": "279660"
  },
  {
    "text": "looks like it it did not create desired replicas so it's",
    "start": "279660",
    "end": "285900"
  },
  {
    "text": "unexpected but is it really PSP doing that we still don't really know like why is it not creating these replicas we",
    "start": "285900",
    "end": "292380"
  },
  {
    "text": "don't really know where can we find the error message describe part describe deployment it's a bit hard to troubleshoot",
    "start": "292380",
    "end": "298440"
  },
  {
    "text": "let's take a look at the event locks maybe it's there and then in the event logs we see error",
    "start": "298440",
    "end": "304080"
  },
  {
    "text": "creating Parts nginx preps is forbidden because pod security policy is enabled",
    "start": "304080",
    "end": "309360"
  },
  {
    "text": "to admit the part it says players containers are not allowed so PSP is doing its job it was a",
    "start": "309360",
    "end": "315660"
  },
  {
    "text": "bit bit hard to figure out where it was PSP doing it but we figured out PSP is working as expected",
    "start": "315660",
    "end": "322020"
  },
  {
    "text": "um we're going to delete this PSP's work is expected now we're going to deploy a normal nginx application",
    "start": "322020",
    "end": "330240"
  },
  {
    "text": "that's not using a privilege security context previous this is a very standard",
    "start": "330240",
    "end": "335520"
  },
  {
    "text": "nginx deployment this should also in this case we hope that the replica count will be one and",
    "start": "335520",
    "end": "343139"
  },
  {
    "text": "that's what we'll show in a moment um see yeah we see that the this this time",
    "start": "343139",
    "end": "348900"
  },
  {
    "text": "the application deployed successfully because it's not a privileged spot so great everything workers expected but",
    "start": "348900",
    "end": "354539"
  },
  {
    "text": "now what we want to do we're using PSP there's an application running in production in the default namespace",
    "start": "354539",
    "end": "360300"
  },
  {
    "text": "now we want to be able to migrate from PSP to PSA the easy strategy is to just try the",
    "start": "360300",
    "end": "369240"
  },
  {
    "text": "different pod security standards in enforce mode in dry run mode so that's all we're going to try and do we're",
    "start": "369240",
    "end": "375180"
  },
  {
    "text": "going to start with the most secure and then we're going to see if we're going to see if the driver and mode shows any",
    "start": "375180",
    "end": "381780"
  },
  {
    "text": "warnings to see if the currently running pots could be admitted by the restricted",
    "start": "381780",
    "end": "387840"
  },
  {
    "text": "pod security standard so that's what we're doing here starting with restricted then we see",
    "start": "387840",
    "end": "393500"
  },
  {
    "text": "existing parts and namespace default violate the new security level restricted so that means that the",
    "start": "393500",
    "end": "400199"
  },
  {
    "text": "currently running pots could not be enforced by restricted restricted is too restrictive for our applications running",
    "start": "400199",
    "end": "406199"
  },
  {
    "text": "in the default namespace so next we had three we had three standards restricted Baseline and",
    "start": "406199",
    "end": "413699"
  },
  {
    "text": "privilege so next we're going to try Baseline which might be a better fit for our recurrently running application",
    "start": "413699",
    "end": "419580"
  },
  {
    "text": "we'll do the same thing we run it in driver and mode to see if it shows any warnings and this time there is no warning strong",
    "start": "419580",
    "end": "426120"
  },
  {
    "text": "which means that the currently running pulse could be admitted if I were to enforce the Baseline pod",
    "start": "426120",
    "end": "433139"
  },
  {
    "text": "security standard so next we're going to run almost the",
    "start": "433139",
    "end": "438780"
  },
  {
    "text": "same command but the only thing that's different is We're Not Gonna add dry run and",
    "start": "438780",
    "end": "445139"
  },
  {
    "text": "if you do this we have started enforcing the pulse security Center Baseline that's all we need we just add a label",
    "start": "445139",
    "end": "451979"
  },
  {
    "text": "before we had to create a PSP policy cluster role binding all we need to do right now is we add a label that's all",
    "start": "451979",
    "end": "458280"
  },
  {
    "text": "we need for PSA so that's a I think that's an improvement in the ux I think it feels more easy than having to to",
    "start": "458280",
    "end": "463800"
  },
  {
    "text": "create all these different resources um so next we enabled PSA but PSP is still active",
    "start": "463800",
    "end": "471960"
  },
  {
    "text": "in this namespace actually one more thing I want to do that we're also going to add there's",
    "start": "471960",
    "end": "477419"
  },
  {
    "text": "different control modes for PSA we set it in enforce mode at the same time we can also tell PSA to turn on warn mode",
    "start": "477419",
    "end": "484680"
  },
  {
    "text": "and at the moment I will show you what wormwood does but for now there's one",
    "start": "484680",
    "end": "490979"
  },
  {
    "text": "more thing we got to do we have PSP still active in this namespace we also have PSA active we should disable PSP in",
    "start": "490979",
    "end": "498000"
  },
  {
    "text": "this namespace as well and then our expectation is that the previous part should still be prevented from being",
    "start": "498000",
    "end": "504419"
  },
  {
    "text": "admitted because the Baseline profile does not allow private spots so",
    "start": "504419",
    "end": "510180"
  },
  {
    "text": "Tim came actually up with a pretty clever way is a way to disable PSP on a",
    "start": "510180",
    "end": "515399"
  },
  {
    "text": "per namespace Apple because in most cases PSP is enabled at a cluster but how can how can you only disabled for a",
    "start": "515399",
    "end": "520979"
  },
  {
    "text": "single namespace Tim came in every way you define your previous PSP that basically has no restrictions whatsoever",
    "start": "520979",
    "end": "527880"
  },
  {
    "text": "by defining this previous PSP and then assigning it only into namespace to the service that comes to the namespace we",
    "start": "527880",
    "end": "534120"
  },
  {
    "text": "can effectively disable PSP only for a single namespace and this is also great because it also",
    "start": "534120",
    "end": "541560"
  },
  {
    "text": "allows us to roll back let's say for some reason my PSP policy is still",
    "start": "541560",
    "end": "547260"
  },
  {
    "text": "required I need to quickly roll back this migration you can remove this various PSP from this namespace and then",
    "start": "547260",
    "end": "552899"
  },
  {
    "text": "you're back to your original PSP that was active in this namespace",
    "start": "552899",
    "end": "558839"
  },
  {
    "text": "so next the same flow as with PSP you have to create a cluster role to be able to",
    "start": "558839",
    "end": "565860"
  },
  {
    "text": "use this new previous PSP and then we create a role binding where we assign this previous PSP to all the service",
    "start": "565860",
    "end": "573540"
  },
  {
    "text": "accounts in the default namespace and after we do this PSP should no longer be active let's",
    "start": "573540",
    "end": "580500"
  },
  {
    "text": "verify it is it really no longer active so we're going to verify that by deploying the same nginx previous part",
    "start": "580500",
    "end": "588660"
  },
  {
    "text": "deployment as you can see this one has the previous true gun and I'm going to apply that",
    "start": "588660",
    "end": "595019"
  },
  {
    "text": "and this time you see directly a warning you remember in the previous example where I did it with PSP there was no",
    "start": "595019",
    "end": "601019"
  },
  {
    "text": "warning thrown it just had deployment created but that had no clue that something was blocking my pots from being created with PSA however if you if",
    "start": "601019",
    "end": "609060"
  },
  {
    "text": "you added that worn mode in addition to enforce mode you will get a warning",
    "start": "609060",
    "end": "614220"
  },
  {
    "text": "throne even when you create a deployment not just when you create a pot directly which is very helpful for user experience users are always there like",
    "start": "614220",
    "end": "620880"
  },
  {
    "text": "oh my deployment is working try with my web application what happened you just don't know you've got to start looking",
    "start": "620880",
    "end": "626700"
  },
  {
    "text": "at events like it's not a great user experience so this time the the warning is directly",
    "start": "626700",
    "end": "632580"
  },
  {
    "text": "thrown and if we go to the uh if you look at the warning you see that it must it would violate pod security Baseline",
    "start": "632580",
    "end": "639300"
  },
  {
    "text": "so this is not this is not a PSP error and if you look at the event log where we previously saw that PSP error message",
    "start": "639300",
    "end": "646519"
  },
  {
    "text": "this time we should be able to see a different error matches from from pod security instead of pod",
    "start": "646519",
    "end": "654060"
  },
  {
    "text": "security policy so let's take a look yeah here it says violate spot security Baseline and in",
    "start": "654060",
    "end": "660899"
  },
  {
    "text": "our previous error message with with PSP it's a pod security policy it's a subtile it's a small change but based on",
    "start": "660899",
    "end": "667320"
  },
  {
    "text": "the error message we know that PSA is active and PSP is no longer active in this mini space so this was the the fast",
    "start": "667320",
    "end": "674940"
  },
  {
    "text": "and I know it didn't seem super fast but this is the fast and easy migration where we ignore the effect of mutating",
    "start": "674940",
    "end": "680760"
  },
  {
    "text": "PSPs and Tim will cover more about what are the what are some of the gotchas of this approach and why this might not be",
    "start": "680760",
    "end": "687060"
  },
  {
    "text": "the right approach for everyone so back to YouTube to let me put it in in prison",
    "start": "687060",
    "end": "695300"
  },
  {
    "text": "all right thanks for that demo um so yeah the um there's a couple problems with this approach uh so the",
    "start": "697019",
    "end": "703380"
  },
  {
    "text": "first is what happens if you don't have any pods that are representative of a workload that needs to run so this could",
    "start": "703380",
    "end": "710399"
  },
  {
    "text": "be the case if you have maybe a controller that runs pods on demand something like a Cron job that only runs",
    "start": "710399",
    "end": "717779"
  },
  {
    "text": "periodically or maybe for uh you have some workload that's scaled down to zero",
    "start": "717779",
    "end": "722880"
  },
  {
    "text": "or just something that hasn't launched yet um so in this case uh pod security",
    "start": "722880",
    "end": "728279"
  },
  {
    "text": "admission gives you two tools Warren mode and audit mode um we already saw a demo of how warn",
    "start": "728279",
    "end": "734160"
  },
  {
    "text": "mode works um giving a warning and feedback back to the user directly audit mode is basically the same thing",
    "start": "734160",
    "end": "740940"
  },
  {
    "text": "but it's going to add an annotation into the audit logs so this can be useful if",
    "start": "740940",
    "end": "746100"
  },
  {
    "text": "you want to enable audit mode across all your namespaces let it soak for a while like a week or however much time you",
    "start": "746100",
    "end": "753300"
  },
  {
    "text": "have and then you can go back through your audit logs and see if there were workloads during that time that ran that",
    "start": "753300",
    "end": "760860"
  },
  {
    "text": "would have violated the policy that would have been blocked by by the enforcement",
    "start": "760860",
    "end": "769160"
  },
  {
    "text": "um so the second problem uh which uh Sam already alluded to is mutations so pod security policy can mutate pods it has a",
    "start": "769260",
    "end": "778740"
  },
  {
    "text": "bunch of different ways of defaulting various Fields so if something isn't set on the Pod directly uh pod security",
    "start": "778740",
    "end": "784800"
  },
  {
    "text": "policy will set it for you this could be a problem because what happens if one of those fields is",
    "start": "784800",
    "end": "790320"
  },
  {
    "text": "actually critical to the way the application is running then suddenly disabling pod security policy could lead",
    "start": "790320",
    "end": "796079"
  },
  {
    "text": "to a production outage so a quick quiz here's a bunch of fields",
    "start": "796079",
    "end": "801839"
  },
  {
    "text": "from the Pod security policy spec which of these are mutating",
    "start": "801839",
    "end": "807019"
  },
  {
    "text": "all right so if you said all of them you would be correct um not in all conditions but at each one",
    "start": "815220",
    "end": "821579"
  },
  {
    "text": "of these fields can mutate the pod and I recommend checking out this",
    "start": "821579",
    "end": "827940"
  },
  {
    "text": "resource on the kubernetes documentation page this has a full list of all of the fields in pod security policy which are",
    "start": "827940",
    "end": "835200"
  },
  {
    "text": "mutating which are just validating and it also has a mapping of how those uh translate into pod security admission",
    "start": "835200",
    "end": "844639"
  },
  {
    "text": "um so with that uh back to Sam yeah so Tim just explained that our",
    "start": "845100",
    "end": "851279"
  },
  {
    "text": "previous approach might not work if you have mutating PSPs and I will show you why exactly it might not work",
    "start": "851279",
    "end": "857639"
  },
  {
    "text": "the way you think it would work so let's let's get started with this one this is this is actually this is actually a fun",
    "start": "857639",
    "end": "862680"
  },
  {
    "text": "way this is actually a real application that we're going to show and um fun thing will happen with it so",
    "start": "862680",
    "end": "870540"
  },
  {
    "text": "same pod security policies in the previous demo but this time I want you to pay attention to these rows",
    "start": "870540",
    "end": "877680"
  },
  {
    "text": "now we just paid attention to Tim's quiz which of these are mutating",
    "start": "877680",
    "end": "885600"
  },
  {
    "text": "all right raise your hands if you think it's all of them raise your hands if you think it's only",
    "start": "885600",
    "end": "893399"
  },
  {
    "text": "that it is SC Linux it's SC Linux mutating is supplemental groups mutating",
    "start": "893399",
    "end": "901260"
  },
  {
    "text": "all right I see a few hands is run as user mutating in this case",
    "start": "901260",
    "end": "906920"
  },
  {
    "text": "you know you're stuff huh that's great that's great if is FS group mutating",
    "start": "907440",
    "end": "914480"
  },
  {
    "text": "great I some people didn't raise any hands but I don't know why that's because you think none of them are",
    "start": "914760",
    "end": "920040"
  },
  {
    "text": "mutating or just he didn't raise your hand which is which is a good reason too so in this case actually SC Linux and",
    "start": "920040",
    "end": "927360"
  },
  {
    "text": "supplementer groups are not mutating because it says run as any so it's not a",
    "start": "927360",
    "end": "932820"
  },
  {
    "text": "simple the field is mutating or not it depends on whether the rule under it",
    "start": "932820",
    "end": "939420"
  },
  {
    "text": "um has run as any or misran S the meser and S are well can be mutating actually",
    "start": "939420",
    "end": "944579"
  },
  {
    "text": "they don't have to be mutating it either but can be mutating these will never be mutating because it's run as any that's",
    "start": "944579",
    "end": "950339"
  },
  {
    "text": "why it's not that simple as you can see is my PSP muting my parts it's actually not a simple question to answer",
    "start": "950339",
    "end": "957420"
  },
  {
    "text": "um so let's get let's get further with this so we have the same deployment it's an nginx app it serves a",
    "start": "957420",
    "end": "964260"
  },
  {
    "text": "very simple index HTML we're going to deploy this",
    "start": "964260",
    "end": "969620"
  },
  {
    "text": "PSP is active I'm just ignoring that but we did the same thing we have the PSP policy cluster or World binding is also",
    "start": "969839",
    "end": "976920"
  },
  {
    "text": "active we have a simple config map that shows welcome to kubecon 2022 that's being",
    "start": "976920",
    "end": "983699"
  },
  {
    "text": "served by this application and I want you to take special attention to",
    "start": "983699",
    "end": "990180"
  },
  {
    "text": "only the own only the owner can read and write this index HTML",
    "start": "990180",
    "end": "996000"
  },
  {
    "text": "um and let's take a look at the so we had a deployments back",
    "start": "996000",
    "end": "1001399"
  },
  {
    "text": "that had a pots pack what it should be running right or we'll compare it to in a moment",
    "start": "1001399",
    "end": "1007339"
  },
  {
    "text": "what I'm going to show you right now is I'm going to show you the parts back of the currently running pod",
    "start": "1007339",
    "end": "1013579"
  },
  {
    "text": "and there are there are many more stuff in there that gets automatically populated but I want you to take a look",
    "start": "1013579",
    "end": "1019220"
  },
  {
    "text": "at stuff that that I didn't expect to be in there certainly my pot has a security context",
    "start": "1019220",
    "end": "1025819"
  },
  {
    "text": "run as user of 2005. it has the container spec in the Pod",
    "start": "1025819",
    "end": "1030918"
  },
  {
    "text": "spec has that and then the pulse pack as a security context for for FS group a thousand five now where where is this",
    "start": "1030919",
    "end": "1037339"
  },
  {
    "text": "coming from who did this who added this to my pod that's the mutating pspps so we see here",
    "start": "1037339",
    "end": "1043400"
  },
  {
    "text": "the um PSP policy we had is run as user Min",
    "start": "1043400",
    "end": "1049400"
  },
  {
    "text": "2005. so what PSP does it takes the first value if you didn't set it yourself from this PSP from the main",
    "start": "1049400",
    "end": "1055460"
  },
  {
    "text": "value and then asset to the part as a security card to the security context of the containers back and then for FS",
    "start": "1055460",
    "end": "1061760"
  },
  {
    "text": "Google does the same thing but it adds an asset to the security context of the parts back so this is mutating PSP it's",
    "start": "1061760",
    "end": "1068120"
  },
  {
    "text": "just adding fuse that I mean you look at this PSP policy literally expect that to happen I",
    "start": "1068120",
    "end": "1073700"
  },
  {
    "text": "some people might if you have done this before but if you've never done this I didn't expect this to happen the first",
    "start": "1073700",
    "end": "1079039"
  },
  {
    "text": "time I used PSP um so that's that's mutating PSP now let's take a look at",
    "start": "1079039",
    "end": "1085100"
  },
  {
    "text": "the application that's working fine right now with our PSP policy um",
    "start": "1085100",
    "end": "1091960"
  },
  {
    "text": "yes my port is working the application is running I did a sample port forward to the",
    "start": "1093860",
    "end": "1099679"
  },
  {
    "text": "service as basically exposing this nginx application I'm leaving it out so the",
    "start": "1099679",
    "end": "1104960"
  },
  {
    "text": "application is running fine now let's migrate to to pod security and Mission and then Force the Baseline",
    "start": "1104960",
    "end": "1111740"
  },
  {
    "text": "um pulse security standard just like we did before we already know that we need to to do Baseline so I'm not going to do",
    "start": "1111740",
    "end": "1116780"
  },
  {
    "text": "the Royal dry runs um we're going to do the same flow where we're going to disable PSP by applying",
    "start": "1116780",
    "end": "1122480"
  },
  {
    "text": "the previous PSP and um we create a cluster role for the",
    "start": "1122480",
    "end": "1130039"
  },
  {
    "text": "previous PSP then we create a raw binding to assign the previous PSP to the service accounts in default name",
    "start": "1130039",
    "end": "1135980"
  },
  {
    "text": "space and then after we do that we're like well we got a new version of our",
    "start": "1135980",
    "end": "1141320"
  },
  {
    "text": "application let's deploy that and see should be should not still work fine",
    "start": "1141320",
    "end": "1147200"
  },
  {
    "text": "right just we didn't change more we just moved to PS from PSP to PSA should be a",
    "start": "1147200",
    "end": "1152600"
  },
  {
    "text": "small change see it restarted and what it means it recreates the pop so the pot got",
    "start": "1152600",
    "end": "1158960"
  },
  {
    "text": "recreated we're going to do the same port forward to check our how our application is",
    "start": "1158960",
    "end": "1164059"
  },
  {
    "text": "doing and I should should be fine but no I get a 403 Forbidden",
    "start": "1164059",
    "end": "1173080"
  },
  {
    "text": "and Michael uses it if that happened right like you suddenly suddenly my application is not",
    "start": "1174440",
    "end": "1179660"
  },
  {
    "text": "behaving the way I expected to she's like well what happened right we did just we just did a move from PSP to",
    "start": "1179660",
    "end": "1185900"
  },
  {
    "text": "PSA why why is this happening to my application let's take a look at the currently",
    "start": "1185900",
    "end": "1191360"
  },
  {
    "text": "running pots back after we recreated the pot and and migrated from PSP to PSA",
    "start": "1191360",
    "end": "1199520"
  },
  {
    "text": "so we look at the the parts back now before there was a security context run",
    "start": "1199520",
    "end": "1204919"
  },
  {
    "text": "as user under the containers pack is gone now and the security contact center the Pod spec is no longer being said and",
    "start": "1204919",
    "end": "1211820"
  },
  {
    "text": "the reason is because we had a mutating PSP that was doing this for us but we moved off of PSP and now it's no longer",
    "start": "1211820",
    "end": "1217940"
  },
  {
    "text": "happening and the the way I coded specifically the nginx app is that only that user that that",
    "start": "1217940",
    "end": "1224900"
  },
  {
    "text": "2005 user ID has access to access it file so now we're getting a 403 Forbidden because the nginx uses running",
    "start": "1224900",
    "end": "1232039"
  },
  {
    "text": "no longer can read the NX HTML so this is a somewhat realistic scenario there",
    "start": "1232039",
    "end": "1238160"
  },
  {
    "text": "are other scenarios that you might encounter where the mutating PSP was adding views that your expert your",
    "start": "1238160",
    "end": "1243440"
  },
  {
    "text": "application expected so how do we fix it we've got to quickly fix this so instead of relying on PSP to",
    "start": "1243440",
    "end": "1251360"
  },
  {
    "text": "add these fields we can add them directly to our deployments back so instead of relying them to be added we",
    "start": "1251360",
    "end": "1256820"
  },
  {
    "text": "simply add these fields directly to the deployments pack itself to this this one is at the Pod spec level and this one is",
    "start": "1256820",
    "end": "1263780"
  },
  {
    "text": "at the container spec level and then we apply and hopefully that will get our",
    "start": "1263780",
    "end": "1270799"
  },
  {
    "text": "application back up and running",
    "start": "1270799",
    "end": "1274179"
  },
  {
    "text": "it worked yes we're we're back online um so",
    "start": "1279200",
    "end": "1285260"
  },
  {
    "text": "I think this demo the main the main goal of showing this demo is that mutating PSP is something you'd have to take",
    "start": "1285260",
    "end": "1291919"
  },
  {
    "text": "special care of like in some cases the mutating appears you might your application might depend on this",
    "start": "1291919",
    "end": "1297500"
  },
  {
    "text": "so yeah you have to account for it and",
    "start": "1297500",
    "end": "1302320"
  },
  {
    "text": "I should we showed in the beginning right like how do we how do you figure out whether my PSP is mutating my Pawns",
    "start": "1303080",
    "end": "1308600"
  },
  {
    "text": "are you going to go one by one look at all your individual pots packs and look at my deployments back and see is there",
    "start": "1308600",
    "end": "1314360"
  },
  {
    "text": "a difference in the security context it seems so I don't know I don't know if anyone",
    "start": "1314360",
    "end": "1319760"
  },
  {
    "text": "any human should not be responsible for doing this is my review so we didn't write a two for that uh PSV migrator",
    "start": "1319760",
    "end": "1327080"
  },
  {
    "text": "that makes it a lot easier to detect whether your pulse are being mutated by PSP it basically does the",
    "start": "1327080",
    "end": "1334039"
  },
  {
    "text": "thing for you it will check your it will check the owner reference of a pop it will then check the owner reference",
    "start": "1334039",
    "end": "1340700"
  },
  {
    "text": "Parts back with the actual running pot and see if there's a difference in the security context if there is since it's",
    "start": "1340700",
    "end": "1348380"
  },
  {
    "text": "highly likely it's being mutated by PSP so that's the approach we took with PS3 migrator it's the same deployment we're",
    "start": "1348380",
    "end": "1355340"
  },
  {
    "text": "using for this it's uh I'm quickly going to demonstrate how PSP migrator makes it",
    "start": "1355340",
    "end": "1360380"
  },
  {
    "text": "a lot easier to detect PSP and migrate off from PSP to PSA so we have the same deployment same HTML",
    "start": "1360380",
    "end": "1369039"
  },
  {
    "text": "web application that's serving and I just want to quickly demonstrate that we",
    "start": "1369039",
    "end": "1375080"
  },
  {
    "text": "have to still being mutated you see this is back",
    "start": "1375080",
    "end": "1381140"
  },
  {
    "text": "so I reverted everything back this this is a clean mutating PSP is muting in this deployment this part again",
    "start": "1381140",
    "end": "1388700"
  },
  {
    "text": "but this time we're going to use PSP migrator to detect the mutation and migrate from PSP to PSA",
    "start": "1388700",
    "end": "1396799"
  },
  {
    "text": "so we're going to install it it's a very simple COI to I would say it's still a",
    "start": "1396799",
    "end": "1402320"
  },
  {
    "text": "work in progress but it's ready for people to try so I encourage people to try it out early get some feedback and",
    "start": "1402320",
    "end": "1408260"
  },
  {
    "text": "then we can keep on improving it too we're gonna run a quick quick list of",
    "start": "1408260",
    "end": "1414200"
  },
  {
    "text": "all the parts that are mutating and it correctly detects that my that this part is mutated and it's mutated by my PSP",
    "start": "1414200",
    "end": "1422659"
  },
  {
    "text": "there's another comment where you can run mutating PSP my PSP and then it will list which fields are mutating and which",
    "start": "1422659",
    "end": "1429440"
  },
  {
    "text": "annotations are mutating and it correctly detects that run as user and Fs group are potentially mutating fusing",
    "start": "1429440",
    "end": "1435799"
  },
  {
    "text": "your PSP object I mean take a drink",
    "start": "1435799",
    "end": "1441520"
  },
  {
    "text": "talking too much",
    "start": "1441520",
    "end": "1444940"
  },
  {
    "text": "happens so the next thing we have we have an",
    "start": "1447200",
    "end": "1452600"
  },
  {
    "text": "interactive migrate comment of PSP migrated well go over all your namespaces and then",
    "start": "1452600",
    "end": "1459320"
  },
  {
    "text": "suggest what's the most secure pod security standard is",
    "start": "1459320",
    "end": "1464480"
  },
  {
    "text": "able to admit all the running Parts in your current name space in addition it has a safeguard where it",
    "start": "1464480",
    "end": "1470240"
  },
  {
    "text": "first checks if you're pots are being mutated if they're being mutated it will tell you first",
    "start": "1470240",
    "end": "1476179"
  },
  {
    "text": "please first fix your pots back so PSP is no longer mutating so let's take a",
    "start": "1476179",
    "end": "1481340"
  },
  {
    "text": "look at the output of the command we see that it's going to check if there are any posts being mutated and then it says",
    "start": "1481340",
    "end": "1487280"
  },
  {
    "text": "the table below shows the parts that are mutated by a PSP object run this command to give to get more",
    "start": "1487280",
    "end": "1494419"
  },
  {
    "text": "details of how your pod is being mutated and by what so let's run that",
    "start": "1494419",
    "end": "1502000"
  },
  {
    "text": "and then we can see that in output it will tell you that the security context is different the output",
    "start": "1502280",
    "end": "1508820"
  },
  {
    "text": "is still something that I'm working on it wasn't it wasn't super straightforward to to code up but it",
    "start": "1508820",
    "end": "1513860"
  },
  {
    "text": "also tells us the fs group is different than uh in 64 yet is straight from golang",
    "start": "1513860",
    "end": "1521559"
  },
  {
    "text": "and it also tells the the mutating fields so I now I know that I have to fix my deployment I'm going to quickly",
    "start": "1521559",
    "end": "1528080"
  },
  {
    "text": "fix that the same way we did it before we add those two fields to deployment",
    "start": "1528080",
    "end": "1533840"
  },
  {
    "text": "uh pot spec and then afterwards I run the migrate command again and my expectation is at",
    "start": "1533840",
    "end": "1540980"
  },
  {
    "text": "this time it should it's going to check for mutating PSP but this time it will allow us to continue with the actual",
    "start": "1540980",
    "end": "1546799"
  },
  {
    "text": "migration um so this time it checked if any pulse",
    "start": "1546799",
    "end": "1552679"
  },
  {
    "text": "are being mutated and it didn't find any and then it suggests using the Baseline the same thing that we found out by",
    "start": "1552679",
    "end": "1557960"
  },
  {
    "text": "doing a manual process is it suggests using Baseline and namespace default and if you press and force it",
    "start": "1557960",
    "end": "1564860"
  },
  {
    "text": "automatically apply the label for you on the main space and we can verify that quickly by running a get an Aces default",
    "start": "1564860",
    "end": "1572419"
  },
  {
    "text": "and get the yaml and that's how the PSP migrator allows you to have an easier",
    "start": "1572419",
    "end": "1579260"
  },
  {
    "text": "migration process than having to do all of this by yourself it also you can also use it kind of as a library there are a",
    "start": "1579260",
    "end": "1585440"
  },
  {
    "text": "few calls that you can import so you can script around um like is my pod mutating it's actually",
    "start": "1585440",
    "end": "1592460"
  },
  {
    "text": "not purely a COI to it you can also use it as a library cool I think those were the yeah those",
    "start": "1592460",
    "end": "1598940"
  },
  {
    "text": "were the demos um I mean next to you slides the slides",
    "start": "1598940",
    "end": "1604039"
  },
  {
    "text": "yeah",
    "start": "1604039",
    "end": "1606220"
  },
  {
    "text": "all right so uh so far we've been talking about migrating from pod security policy to pod security",
    "start": "1616520",
    "end": "1621679"
  },
  {
    "text": "admission um when we designed pod security admission our goal was really to have",
    "start": "1621679",
    "end": "1627380"
  },
  {
    "text": "super simple out of the box security for kubernetes and so we made some uh design",
    "start": "1627380",
    "end": "1635200"
  },
  {
    "text": "compromises to make to really chase that Simplicity and ease of use",
    "start": "1635200",
    "end": "1640820"
  },
  {
    "text": "um but there are some cases it wasn't designed to cover every possible use",
    "start": "1640820",
    "end": "1646400"
  },
  {
    "text": "case so some limitations of pod security admission um the first is that it's using",
    "start": "1646400",
    "end": "1651799"
  },
  {
    "text": "namespace labels to control it this makes it easy to apply it makes it easy",
    "start": "1651799",
    "end": "1656840"
  },
  {
    "text": "to search across your cluster which namespaces are using which profiles but it also means that if users have edit",
    "start": "1656840",
    "end": "1663860"
  },
  {
    "text": "access on the namespaces they can modify those labels and escalate permissions it",
    "start": "1663860",
    "end": "1670039"
  },
  {
    "text": "also means that if you're creating new namespaces you need to make sure that those get labeled as well probably the biggest limitation is the",
    "start": "1670039",
    "end": "1677480"
  },
  {
    "text": "lack of customization we'll take questions at the end um uh the lack of customization so you have",
    "start": "1677480",
    "end": "1686000"
  },
  {
    "text": "to choose one of these three profiles um privileged uh baseline or restricted",
    "start": "1686000",
    "end": "1691840"
  },
  {
    "text": "if you want to customize those you'll need to use one of the Alternatives that we'll talk about in a moment",
    "start": "1691840",
    "end": "1699320"
  },
  {
    "text": "we already covered the lack of mutation that's just not something that pod security admission takes care of",
    "start": "1699320",
    "end": "1705679"
  },
  {
    "text": "and then finally we strongly advise against trying to subdivide policy",
    "start": "1705679",
    "end": "1712520"
  },
  {
    "text": "within a namespace but if that's something that you really need to do then you'll need some tool other than",
    "start": "1712520",
    "end": "1717799"
  },
  {
    "text": "pod security admission so in the cases when pod security",
    "start": "1717799",
    "end": "1723080"
  },
  {
    "text": "admission isn't uh enough for your use case there's a whole ecosystem of third-party admission controllers the",
    "start": "1723080",
    "end": "1730159"
  },
  {
    "text": "two that I call out here are open policy agent which is um a really powerful uh policy engine",
    "start": "1730159",
    "end": "1738380"
  },
  {
    "text": "that lets you write uh policies in Rigo which is a kind of policy DSL",
    "start": "1738380",
    "end": "1745880"
  },
  {
    "text": "you can also use gatekeeper which is a framework built on top of oppa that adds",
    "start": "1745880",
    "end": "1751640"
  },
  {
    "text": "some kind of kubernetes native features it lets you template policies and apply",
    "start": "1751640",
    "end": "1757580"
  },
  {
    "text": "those through crds um caverno is another policy engine uh",
    "start": "1757580",
    "end": "1763159"
  },
  {
    "text": "that's designed um to be for kubernetes it's a little",
    "start": "1763159",
    "end": "1768200"
  },
  {
    "text": "less powerful than and flexible than Opa but uh it's also can be simpler to",
    "start": "1768200",
    "end": "1774020"
  },
  {
    "text": "understand the policies and to write the policies um because of that trade-off",
    "start": "1774020",
    "end": "1779059"
  },
  {
    "text": "I'm personally really excited about cell admission so cell is another policy DSL",
    "start": "1779059",
    "end": "1785600"
  },
  {
    "text": "and we're actually going to be building this into the API server starting with kubernetes 126.",
    "start": "1785600",
    "end": "1792140"
  },
  {
    "text": "um and so you'll be able to apply arbitrary policy through sell policies",
    "start": "1792140",
    "end": "1797299"
  },
  {
    "text": "without having to run a separate web hook um unfortunately the talk that's referenced here already happened earlier",
    "start": "1797299",
    "end": "1803659"
  },
  {
    "text": "today so if you didn't have a chance to catch that I definitely recommend checking out the recording when that's",
    "start": "1803659",
    "end": "1808760"
  },
  {
    "text": "out you can also read the cap directly that'll be hopefully going to Alpha in 126.",
    "start": "1808760",
    "end": "1815120"
  },
  {
    "text": "and finally if you especially if you're already familiar with the kubernetes client libraries",
    "start": "1815120",
    "end": "1821480"
  },
  {
    "text": "um it might be easier than you think to just write your own uh admission",
    "start": "1821480",
    "end": "1826700"
  },
  {
    "text": "controller if you're using client go I recommend using Cube Builder which can automate a",
    "start": "1826700",
    "end": "1833840"
  },
  {
    "text": "lot of the boilerplate associated with that or you can also check out the Pod security admission implementation it",
    "start": "1833840",
    "end": "1839899"
  },
  {
    "text": "actually ships with a web hook now if you're using one of these alternative solutions that doesn't mean",
    "start": "1839899",
    "end": "1847100"
  },
  {
    "text": "you can't use pod security admission it was actually designed to work really well with another solution at the same",
    "start": "1847100",
    "end": "1853580"
  },
  {
    "text": "time so it's super lightweight um doing it this way gets you some defense in depth in case your web hook",
    "start": "1853580",
    "end": "1859760"
  },
  {
    "text": "ever goes down or is accidentally deleted um",
    "start": "1859760",
    "end": "1865000"
  },
  {
    "text": "it can also minimize your custom functions so if you're relying on say the Baseline policy and just adding a",
    "start": "1865100",
    "end": "1871100"
  },
  {
    "text": "few additional constraints on top of that you don't necessarily need to re-implement the whole Baseline pod",
    "start": "1871100",
    "end": "1877580"
  },
  {
    "text": "security standard in your custom policy engine you just need those additional constraints on top of it",
    "start": "1877580",
    "end": "1883159"
  },
  {
    "text": "and then finally because pod security standards and pod security admission is developed by the kubernetes community",
    "start": "1883159",
    "end": "1888679"
  },
  {
    "text": "and built in there's sort of a guarantee that any new features that get added to",
    "start": "1888679",
    "end": "1894260"
  },
  {
    "text": "kubernetes are going to be constrained by pod security admission a recent",
    "start": "1894260",
    "end": "1899779"
  },
  {
    "text": "example of this was ephemeral containers um if you had policies that were checking fields on containers you might",
    "start": "1899779",
    "end": "1906919"
  },
  {
    "text": "have been checking the containers field and the init containers field but when ephemeral containers launched now",
    "start": "1906919",
    "end": "1913100"
  },
  {
    "text": "suddenly there's a third type of container that needs to have its policy checked",
    "start": "1913100",
    "end": "1918460"
  },
  {
    "text": "um and yeah so our recommendation is to apply the most secure pod security standard you can with pod security admission and then apply additional",
    "start": "1918919",
    "end": "1926299"
  },
  {
    "text": "constraints on top of that so in conclusion we recommend that you start early take it slow try and unblock",
    "start": "1926299",
    "end": "1934640"
  },
  {
    "text": "your 125 upgrade before you really need to get out to 125 we definitely",
    "start": "1934640",
    "end": "1941120"
  },
  {
    "text": "recommend an incremental approach so Sam demoed how you can use a privileged pod",
    "start": "1941120",
    "end": "1947240"
  },
  {
    "text": "security policy bound to an individual namespace to migrate one namespace at a time you don't need to do the whole",
    "start": "1947240",
    "end": "1953179"
  },
  {
    "text": "cluster at once um and remember to be aware of mutations and scaled zero workloads",
    "start": "1953179",
    "end": "1961340"
  },
  {
    "text": "so that thank you here's all the links that were referenced uh in the talk and a few other resources I'm happy to take",
    "start": "1961340",
    "end": "1968120"
  },
  {
    "text": "questions if there's time [Applause]",
    "start": "1968120",
    "end": "1978320"
  },
  {
    "text": "if I understood what I saw there was a clever warning that you've admitted when",
    "start": "1978320",
    "end": "1984020"
  },
  {
    "text": "you tried to create I think it was a deployment and it caught on to the fact that the plot spec template would lead",
    "start": "1984020",
    "end": "1990620"
  },
  {
    "text": "across problem did you have any ideas for how Custom Custom resources that say also could",
    "start": "1990620",
    "end": "1998299"
  },
  {
    "text": "create pods could tie into that kind of mechanism yeah so we talked about this",
    "start": "1998299",
    "end": "2003519"
  },
  {
    "text": "when we were um in case anyone didn't hear the question uh the question is um if you have a custom resource that's",
    "start": "2003519",
    "end": "2009820"
  },
  {
    "text": "controlling plaid deployments how can you have a similar warning or audit mechanism on that",
    "start": "2009820",
    "end": "2015820"
  },
  {
    "text": "um we talked about building something into pod security for this we didn't",
    "start": "2015820",
    "end": "2021059"
  },
  {
    "text": "ultimately decide to go that way but the Pod security admission is designed as a",
    "start": "2021059",
    "end": "2028179"
  },
  {
    "text": "library so if you take a look at the code there presumably if you have a crd that's doing this you also have a custom",
    "start": "2028179",
    "end": "2034179"
  },
  {
    "text": "controller that's monitoring those um and so it should be pretty easy to",
    "start": "2034179",
    "end": "2039700"
  },
  {
    "text": "extend that code if you want to add a custom type in like a web hook that's",
    "start": "2039700",
    "end": "2045940"
  },
  {
    "text": "working on that we probably have time for one question",
    "start": "2045940",
    "end": "2052138"
  },
  {
    "text": "hi are there plans to uh build in custom uh security levels into pod security",
    "start": "2060159",
    "end": "2067240"
  },
  {
    "text": "admission or is that just find another solution um there are no plans for that uh",
    "start": "2067240",
    "end": "2074260"
  },
  {
    "text": "well let me rephrase that I sell admission I think is really our our plan",
    "start": "2074260",
    "end": "2079419"
  },
  {
    "text": "for that um that lets you that will let you build custom security policies",
    "start": "2079419",
    "end": "2085060"
  },
  {
    "text": "um but also a lot more anything that you would do with admission uh control today aside from like maybe some stateful",
    "start": "2085060",
    "end": "2090820"
  },
  {
    "text": "things but we really think that will cover uh most of if not all of the use cases Beyond",
    "start": "2090820",
    "end": "2097420"
  },
  {
    "text": "um okay thanks all right that is the time we have thank",
    "start": "2097420",
    "end": "2103540"
  },
  {
    "text": "you for attending and please find the speakers after the session for more questions [Applause]",
    "start": "2103540",
    "end": "2111699"
  }
]