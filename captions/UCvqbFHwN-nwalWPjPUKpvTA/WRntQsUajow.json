[
  {
    "text": "all right thanks everyone for coming wow this is a good crowd and I don't an",
    "start": "30",
    "end": "8940"
  },
  {
    "text": "expert in cotton crowds but so the this is a hopefully like I think it's the",
    "start": "8940",
    "end": "14429"
  },
  {
    "text": "last presentation of the day so I hope you're not all asleep but we'll try to keep it a bit entertaining so this is a",
    "start": "14429",
    "end": "21990"
  },
  {
    "text": "intro to Jaeger which is a distributed tracing system and the agenda for the",
    "start": "21990",
    "end": "30660"
  },
  {
    "text": "talks will actually just before we start how many people are familiar with what distributed tracing is all right well I",
    "start": "30660",
    "end": "41809"
  },
  {
    "text": "didn't get the account exactly it sounds like about maybe 20% still didn't raise",
    "start": "41809",
    "end": "47100"
  },
  {
    "text": "hands which is good we'll have something to talk about and how many people have actually used distributed tracing system",
    "start": "47100",
    "end": "53910"
  },
  {
    "text": "a lot less okay so we will talk very briefly what distributed tracing is and",
    "start": "53910",
    "end": "60359"
  },
  {
    "text": "why we want to use it and then we'll do a demo of Jaeger and the sample application that we have to show case",
    "start": "60359",
    "end": "67110"
  },
  {
    "text": "the features that we have and like some old some new ones briefly talk about project status as an open source project",
    "start": "67110",
    "end": "73619"
  },
  {
    "text": "and since EF will try to do in new features there's a lot of them a lot of",
    "start": "73619",
    "end": "78689"
  },
  {
    "text": "slides to go through so we may skip some but I will cover a few of them at least and we'll talk also if we have time",
    "start": "78689",
    "end": "85080"
  },
  {
    "text": "about roadmap but we have another session tomorrow of the dip dive so that's if you're interested in that",
    "start": "85080",
    "end": "91520"
  },
  {
    "text": "might be a good thing to to attend tomorrow and so about us paavo over here",
    "start": "91520",
    "end": "98340"
  },
  {
    "text": "is from Red Hat and I'm from uber so we both maintain yourself Jaeger so let's",
    "start": "98340",
    "end": "105960"
  },
  {
    "text": "kick off so why tracing and and what it is so everyone probably knows by now that",
    "start": "105960",
    "end": "111350"
  },
  {
    "text": "like with companies moving to micro services a single a simple thing is loads in a home page for like something",
    "start": "111350",
    "end": "117390"
  },
  {
    "text": "like Facebook takes dozens if not hundreds of micro services actually participate in to choose one single",
    "start": "117390",
    "end": "124020"
  },
  {
    "text": "request right and so this is a dependency service dependency graph from",
    "start": "124020",
    "end": "129030"
  },
  {
    "text": "uber part of it some time ago it's not important what's here but",
    "start": "129030",
    "end": "134819"
  },
  {
    "text": "basically it's just like every every time I know what connects to another note for doing RPC we draw that line on",
    "start": "134819",
    "end": "140880"
  },
  {
    "text": "the graph right and so when you tap a button on over app something like this happens right and that happens like",
    "start": "140880",
    "end": "147989"
  },
  {
    "text": "billions times a day and so very complex system and if something breaks in that",
    "start": "147989",
    "end": "154140"
  },
  {
    "text": "system and you try and to pinpoint where it is it is very hard to pinpoint because if you are on call and you say",
    "start": "154140",
    "end": "161580"
  },
  {
    "text": "oh my writers can take a ride something wrong well the only thing you know it's probably just a very left note they're",
    "start": "161580",
    "end": "168060"
  },
  {
    "text": "saying this API endpoint is breaking and then you have 50 other services that may potentially be at fault for for doing",
    "start": "168060",
    "end": "174150"
  },
  {
    "text": "four of that and so like if you're trying to find who to page to to figure",
    "start": "174150",
    "end": "181080"
  },
  {
    "text": "out where the problem is it becomes really really complex in the complex microservices architecture and our",
    "start": "181080",
    "end": "188280"
  },
  {
    "text": "traditional ways of dealing with this problem was metrics and logs they don't scale anymore really I mean metrics you",
    "start": "188280",
    "end": "194519"
  },
  {
    "text": "can still have metrics from every note in the system and they all tell you that something is wrong with that note but",
    "start": "194519",
    "end": "199530"
  },
  {
    "text": "they will not explain what's wrong and why and especially if you are upstream",
    "start": "199530",
    "end": "204540"
  },
  {
    "text": "and something downstream is broken well this is like nothing that you get from the metrics and and logs I'm not gonna even talk about the holes and so what we",
    "start": "204540",
    "end": "213959"
  },
  {
    "text": "what we trying to do is really we tried by by delusion traditional more Internet tools to answer the problems with like",
    "start": "213959",
    "end": "220140"
  },
  {
    "text": "microservices we were trying to effectively diagnose a problem by looking at a data point from one thing",
    "start": "220140",
    "end": "226680"
  },
  {
    "text": "single thing on the on the whole complex call graph right it's like if you have an exception and it just gives you an",
    "start": "226680",
    "end": "233190"
  },
  {
    "text": "error message and no stack trace like how useful that is right and this is where we are today without distributed tracing and and the street racing is",
    "start": "233190",
    "end": "240299"
  },
  {
    "text": "really it's not the D like absolutely answer it's just a way of asking more questions and like refining your",
    "start": "240299",
    "end": "246900"
  },
  {
    "text": "hypothesis about what's actually wrong right and so because it gives you a lot more visibility into the system and for",
    "start": "246900",
    "end": "253049"
  },
  {
    "text": "people who don't know how distributed tracing works exactly okay",
    "start": "253049",
    "end": "258510"
  },
  {
    "text": "this was supposed to be animated but it's not anyway they so imagine you have an architecture and on the Left where",
    "start": "258510",
    "end": "264510"
  },
  {
    "text": "you call graph right so you have five services and like a request comes to series a and then spreads out into",
    "start": "264510",
    "end": "271240"
  },
  {
    "text": "moisturizes so the very basic idea of distributed tracing is that we assign a unique ID to that request and we keep",
    "start": "271240",
    "end": "277419"
  },
  {
    "text": "passing that unique ID with all the RPC calls right very simple not very simple to implement unfortunately but",
    "start": "277419",
    "end": "284110"
  },
  {
    "text": "consumption is very simple and then as we do that and we have some sort of trace trace instrumentation and",
    "start": "284110",
    "end": "289210"
  },
  {
    "text": "reservist we capture additional information like how much time it took me to respond how much time my server",
    "start": "289210",
    "end": "294460"
  },
  {
    "text": "responded what the name of operation was did they have an exception did they have an SQL query that I can log in as part",
    "start": "294460",
    "end": "300729"
  },
  {
    "text": "of that that individual trace point right and so by collecting all that information we kind of send it off band",
    "start": "300729",
    "end": "306700"
  },
  {
    "text": "out of the path of the hot hot path of the request but we can reconstruct the whole lifecycle of that individual",
    "start": "306700",
    "end": "313270"
  },
  {
    "text": "transaction with timing with like fine grained details with metadata about like this was this node this was another node",
    "start": "313270",
    "end": "319990"
  },
  {
    "text": "of another service we can also build the Gantt chart on the right side which is a time sequence diagram right so each each",
    "start": "319990",
    "end": "326080"
  },
  {
    "text": "segment is sort of like a span or an operation within the service and then as it calls into more downstream services",
    "start": "326080",
    "end": "332950"
  },
  {
    "text": "we can keep track of causality and parent-child relationships of those separations and we reconstruct the whole",
    "start": "332950",
    "end": "338620"
  },
  {
    "text": "path of the request through the architecture and what what Jaeger is Yager sort of an implementation of the",
    "start": "338620",
    "end": "345460"
  },
  {
    "text": "technique I used to call Jaeger as the distribute tracing system I now switch",
    "start": "345460",
    "end": "350919"
  },
  {
    "text": "to Colin at a platform because what we're really doing is it's not just a",
    "start": "350919",
    "end": "357220"
  },
  {
    "text": "trace collection back-end right and visualization so it's it has those components but really once we start at",
    "start": "357220",
    "end": "365650"
  },
  {
    "text": "least a tuber once we start gathering all this data we realized that remember that diagram that I showed from the",
    "start": "365650",
    "end": "371889"
  },
  {
    "text": "beginning with the transaction thing right that just part of the work it actually it's not the whole graph and so",
    "start": "371889",
    "end": "378280"
  },
  {
    "text": "when we try to look at this thing something like like that in an uber it",
    "start": "378280",
    "end": "386200"
  },
  {
    "text": "doesn't look like that right it doesn't look like this five five things on the screen it looks like fifty thousand",
    "start": "386200",
    "end": "391570"
  },
  {
    "text": "things on the screen and so you still can't look at it and so we realized that well we need to do data mining on this even even to understand what's going",
    "start": "391570",
    "end": "397700"
  },
  {
    "text": "the system and we will talk about some features that we've built for that and and that's why I call it a platform",
    "start": "397700",
    "end": "403670"
  },
  {
    "text": "because we really want not just collect the data and not just utilize one single transaction it's you can do that it's",
    "start": "403670",
    "end": "409580"
  },
  {
    "text": "valuable if your architecture is small enough it's gonna be very valuable but the architecture gets small like imagine",
    "start": "409580",
    "end": "415580"
  },
  {
    "text": "you do in service with functions you you can get like even easily to hundreds of those right and so the Colegrove become",
    "start": "415580",
    "end": "422000"
  },
  {
    "text": "very complex and that's why we also need the platform to do like more data analysis on this one because ultimately",
    "start": "422000",
    "end": "427880"
  },
  {
    "text": "tracing is just the data source and what we do what the date is there are lots of ways we you can use that and another",
    "start": "427880",
    "end": "436010"
  },
  {
    "text": "thing is when so jäger like on this",
    "start": "436010",
    "end": "442790"
  },
  {
    "text": "previous slide I had this in a bottom left instrumentation libraries right so in order to get all the trace in data we",
    "start": "442790",
    "end": "448580"
  },
  {
    "text": "need to instrument the code sometimes you can get it for free with like by attaching jar files or something but it",
    "start": "448580",
    "end": "454190"
  },
  {
    "text": "depends on the language and jäger provides instrumentation libraries which expose a certain API called open tracing",
    "start": "454190",
    "end": "460250"
  },
  {
    "text": "API to which you can talk and basically tell them to collect the data and then but you could also do other things you",
    "start": "460250",
    "end": "468560"
  },
  {
    "text": "maybe you call in some other service you know in the cloud which collects tracing rate in another way right or maybe",
    "start": "468560",
    "end": "475250"
  },
  {
    "text": "you're not using Jaeger client library but maybe you know consensus is going to be talked to more about what open census is it's another way of collecting",
    "start": "475250",
    "end": "481550"
  },
  {
    "text": "tracing data independently of what the tracing backend and using and so that all can work with Jaeger right so like",
    "start": "481550",
    "end": "487610"
  },
  {
    "text": "Jaeger is fairly flexible in terms of like which data we can accept and what propagation protocols we use on the wire",
    "start": "487610",
    "end": "493820"
  },
  {
    "text": "in the end and often sensors for example supports putting data into Jaeger",
    "start": "493820",
    "end": "499040"
  },
  {
    "text": "directly so once we get all the data in one place that's where the platform kicks in right that we can start",
    "start": "499040",
    "end": "504200"
  },
  {
    "text": "analyzing and bulk and actually draw conclusions about what our architecture is doing overall and briefly what I",
    "start": "504200",
    "end": "510350"
  },
  {
    "text": "mentioned open tracing API open tracing the API is just it's just an API right there's no implementation behind it it's",
    "start": "510350",
    "end": "515990"
  },
  {
    "text": "just a library that you put and you can start writing an instrumentation in your code because ultimately when you",
    "start": "515990",
    "end": "521960"
  },
  {
    "text": "instrument the code what you doing is you describe and what your code is doing right you're not saying oh I need to",
    "start": "521960",
    "end": "527270"
  },
  {
    "text": "record this in this particular format I need to pass some concert and why're you here like as a developer",
    "start": "527270",
    "end": "533190"
  },
  {
    "text": "of an application all I know is that I am starting the separation I finished it this is some metadata about the separation",
    "start": "533190",
    "end": "538350"
  },
  {
    "text": "this is like an error code I fix I received so I want to record that and that's what open tracing IP is just recording your description of the",
    "start": "538350",
    "end": "545790"
  },
  {
    "text": "distributed transaction and there are implementations of those consent data into multiple systems and in just a few",
    "start": "545790",
    "end": "553560"
  },
  {
    "text": "words about the acre so we started at uber in 15 2015 it was inspired by like",
    "start": "553560",
    "end": "560430"
  },
  {
    "text": "dapper and Zipkin we've actually started internally as part of like we're on zucchini UI as part of their system",
    "start": "560430",
    "end": "565770"
  },
  {
    "text": "originally but then we switch to build a new UI because we wanted to support open trace in data model all the way front to",
    "start": "565770",
    "end": "571800"
  },
  {
    "text": "back and then it became ciencia project last year and we're now applying to",
    "start": "571800",
    "end": "576930"
  },
  {
    "text": "gradiation so feel free to go and vote on that issue and as far as technology stack it may not be very interesting to",
    "start": "576930",
    "end": "583560"
  },
  {
    "text": "but like on side of a client libraries that's probably interesting we support a whole under languages already right so",
    "start": "583560",
    "end": "590210"
  },
  {
    "text": "that that's kind of important that it implies how much you can actually how many applications you can instrument",
    "start": "590210",
    "end": "596130"
  },
  {
    "text": "with it and on the right side we support various technologies for the backend and it's extensible and yeah the project is",
    "start": "596130",
    "end": "603030"
  },
  {
    "text": "very active we have seven full-time maintainer effectively from uber and Red",
    "start": "603030",
    "end": "608070"
  },
  {
    "text": "Hat and we have a lot of community members who are also helping like we have what 220 individual like",
    "start": "608070",
    "end": "616050"
  },
  {
    "text": "contributions or like unique people actually submit your request you across the eager repositories so now I'll stop",
    "start": "616050",
    "end": "622440"
  },
  {
    "text": "checking on a lot Pavel give you a demo can you hear me yeah so I will be moving",
    "start": "622440",
    "end": "630840"
  },
  {
    "text": "this Jagr hot road application it's part of the Jaeger upstream project so you can",
    "start": "630840",
    "end": "636450"
  },
  {
    "text": "use it you can use it at home and there's also very good blog post which",
    "start": "636450",
    "end": "642390"
  },
  {
    "text": "you wrote which basically walks you through all the Jaeger features which I",
    "start": "642390",
    "end": "647700"
  },
  {
    "text": "will be presenting so I will go to terminal lounge the whole turd",
    "start": "647700",
    "end": "653790"
  },
  {
    "text": "application as you can see starting a bunch of micro services so it's like",
    "start": "653790",
    "end": "659070"
  },
  {
    "text": "micro service based application but but actually it's a single binary single go binary",
    "start": "659070",
    "end": "664480"
  },
  {
    "text": "now for us is interesting this front-end so I'll just jump there and it's smoke",
    "start": "664480",
    "end": "671900"
  },
  {
    "text": "application it's like writes on demand these boxes represents the clients if",
    "start": "671900",
    "end": "677870"
  },
  {
    "text": "you click on it it will send a request to the backend but can we find the",
    "start": "677870",
    "end": "683830"
  },
  {
    "text": "driver and a car and it will dispatch the car to the to the front-end sorry",
    "start": "683830",
    "end": "690820"
  },
  {
    "text": "zoomy but it's also very important here is that we have a session ID and also we",
    "start": "690820",
    "end": "700370"
  },
  {
    "text": "are recording the duration which is basically the time spent from the you",
    "start": "700370",
    "end": "707090"
  },
  {
    "text": "are a perspective to calculate this this request so if I go back to the terminal you can see the hot rod is emitting a",
    "start": "707090",
    "end": "714320"
  },
  {
    "text": "lot of locks but so we can see like information like it's finding the driver",
    "start": "714320",
    "end": "719330"
  },
  {
    "text": "finding the customer there is some Redis time out and after all if this done is",
    "start": "719330",
    "end": "727010"
  },
  {
    "text": "dispatching the car for us right but it's very hard to understand like the order of the operations and actually",
    "start": "727010",
    "end": "733040"
  },
  {
    "text": "what is the data flow inside the application so this application is",
    "start": "733040",
    "end": "738320"
  },
  {
    "text": "already instrumented with open tracing and is sending data to Yaeger so I will",
    "start": "738320",
    "end": "743750"
  },
  {
    "text": "go to Yaeger UI this is the base the home screen so let's go to these",
    "start": "743750",
    "end": "750440"
  },
  {
    "text": "dependencies in the dependencies screen we can see all the services which are",
    "start": "750440",
    "end": "758890"
  },
  {
    "text": "which were involved in serving this transaction so we can see like the front-end called the customer the driver",
    "start": "758890",
    "end": "765740"
  },
  {
    "text": "and the road and we can also see the number of invocations we see there is some database MySQL Redis and we also",
    "start": "765740",
    "end": "774730"
  },
  {
    "text": "see the number of the requests what we don't see is the is the order of the",
    "start": "774730",
    "end": "780890"
  },
  {
    "text": "invocations right so we don't know that if the front-end call the customer first or the driver first to find out more",
    "start": "780890",
    "end": "789020"
  },
  {
    "text": "about that we have to go to the main screen and search for traces so all we",
    "start": "789020",
    "end": "795050"
  },
  {
    "text": "to do is to choose the the first service or the service we are interested in if",
    "start": "795050",
    "end": "802100"
  },
  {
    "text": "you hit the defined traces you will see all the traces we invoked only one request so we have only one trace and",
    "start": "802100",
    "end": "808540"
  },
  {
    "text": "there we can see like number of operations the number of errors and all",
    "start": "808540",
    "end": "813560"
  },
  {
    "text": "the micro services which are involved in this transaction so I'll just jump into",
    "start": "813560",
    "end": "819350"
  },
  {
    "text": "it and the screen presents a lot of information right so each line",
    "start": "819350",
    "end": "825740"
  },
  {
    "text": "represents an operation in a system or also called span the first one we call",
    "start": "825740",
    "end": "830839"
  },
  {
    "text": "it the root span and so we see the",
    "start": "830839",
    "end": "835899"
  },
  {
    "text": "service name then the operation name within that service and by looking at",
    "start": "835899",
    "end": "843320"
  },
  {
    "text": "this we can see the structure of the invocation so we see that a front-end called the customer service customer",
    "start": "843320",
    "end": "849230"
  },
  {
    "text": "called mysql' then the front-end called the driver service and driver called the",
    "start": "849230",
    "end": "854450"
  },
  {
    "text": "readies right we also see like what operation are what operations are",
    "start": "854450",
    "end": "859550"
  },
  {
    "text": "executed in parallel and also what operations are executed in serial so for example this Redis is very interesting",
    "start": "859550",
    "end": "866540"
  },
  {
    "text": "we can see that at one time we are doing only one request to Redis so maybe your",
    "start": "866540",
    "end": "874000"
  },
  {
    "text": "optimization we could optimize this the other interesting thing is here the",
    "start": "874000",
    "end": "879230"
  },
  {
    "text": "the front-end to to route calls we can see that it's done in parallel but but it's actually",
    "start": "879230",
    "end": "887510"
  },
  {
    "text": "bounded by by by some value in this case it's it seems like value free we can",
    "start": "887510",
    "end": "896990"
  },
  {
    "text": "also find out here is this exclamation point which tells us there is there was",
    "start": "896990",
    "end": "902959"
  },
  {
    "text": "some problem so if I click on it click",
    "start": "902959",
    "end": "908029"
  },
  {
    "text": "when I click on an operation or span we can see tags and logs techs are metadata",
    "start": "908029",
    "end": "915110"
  },
  {
    "text": "which are like globally scoped this span so applies to the whole span and locks",
    "start": "915110",
    "end": "922579"
  },
  {
    "text": "are very similar to the to the logs in terminal but these ones are really associated only with",
    "start": "922579",
    "end": "928499"
  },
  {
    "text": "this particular operation so if I go to locks I can see that that it was",
    "start": "928499",
    "end": "937289"
  },
  {
    "text": "actually already steamed out so if I go back to 200 and I invoke a lot of",
    "start": "937289",
    "end": "946529"
  },
  {
    "text": "requests and go back to terminal you can see all these standard locks are mixed",
    "start": "946529",
    "end": "953969"
  },
  {
    "text": "together so it's hard to understand like okay it was finding the road but for which requests right when I go to Jaeger",
    "start": "953969",
    "end": "962719"
  },
  {
    "text": "the other operator upon tracing feature is that we get so called like contextualized logging so we see blocks",
    "start": "962719",
    "end": "970229"
  },
  {
    "text": "only related to this operation so",
    "start": "970229",
    "end": "979739"
  },
  {
    "text": "overall if I look at this trace I can see that maybe like 40% of the time to",
    "start": "979739",
    "end": "985379"
  },
  {
    "text": "spend in my SQL and what is interesting in in hot rod if I invoke lot of these",
    "start": "985379",
    "end": "992609"
  },
  {
    "text": "requests I can see that the the total duration is increasing and actually what",
    "start": "992609",
    "end": "1001429"
  },
  {
    "text": "the ager allows me is to basically get this data which is some kind of like business identifier and look for it in",
    "start": "1001429",
    "end": "1009349"
  },
  {
    "text": "the agar so I can write something like driver equals the license plate and I",
    "start": "1009349",
    "end": "1017839"
  },
  {
    "text": "will find exactly this transaction if I click on it we can clearly see that the",
    "start": "1017839",
    "end": "1023929"
  },
  {
    "text": "problem is probably in the MySQL database because now it's it's taking maybe like 70 or 80 percent of the",
    "start": "1023929",
    "end": "1030139"
  },
  {
    "text": "request time so if I click on it we can",
    "start": "1030139",
    "end": "1035449"
  },
  {
    "text": "see there are also some locks and we see that the after one millisecond or before",
    "start": "1035449",
    "end": "1042558"
  },
  {
    "text": "one millisecond the actually the operation was waiting on acquiring",
    "start": "1042559",
    "end": "1048159"
  },
  {
    "text": "acquiring the lock right so and also the other interesting or the most",
    "start": "1048159",
    "end": "1054500"
  },
  {
    "text": "interesting thing is here is that we see the the request IDs which are also",
    "start": "1054500",
    "end": "1059929"
  },
  {
    "text": "waiting on acquiring this lock what you can do here is also like I did",
    "start": "1059929",
    "end": "1065600"
  },
  {
    "text": "with the license plate I can copy this identifier and find and investigate all of these transactions so maybe there is",
    "start": "1065600",
    "end": "1072830"
  },
  {
    "text": "an anomaly in one of these which is causing the problem and yeah so if I",
    "start": "1072830",
    "end": "1081650"
  },
  {
    "text": "look at the the customer API we just recorded here in the text as a HTTP URL",
    "start": "1081650",
    "end": "1088220"
  },
  {
    "text": "we don't see that we are passing any request ID to the to the customer and yet the customer service is able to to",
    "start": "1088220",
    "end": "1096380"
  },
  {
    "text": "know what is the request ID because is added to the logs right so you must you may ask like how is it possible and this",
    "start": "1096380",
    "end": "1102470"
  },
  {
    "text": "other open tracing feature is called baggage and baggage is like key value",
    "start": "1102470",
    "end": "1108790"
  },
  {
    "text": "it's like any key value which you can set on the span and is sent to all downstream services so very very",
    "start": "1108790",
    "end": "1117680"
  },
  {
    "text": "powerful feature so what I could do",
    "start": "1117680",
    "end": "1124040"
  },
  {
    "text": "right now I could go to the code to go to Mike go to customer service and have",
    "start": "1124040",
    "end": "1129530"
  },
  {
    "text": "a look at LOC and maybe optimize it so other thing I want to show you here is",
    "start": "1129530",
    "end": "1135950"
  },
  {
    "text": "the is this trace graph it's a new feature do we edit probably in the next ta gir version and it shows us the the",
    "start": "1135950",
    "end": "1144920"
  },
  {
    "text": "structure is an alternative view to the timeline diagram and it shows us these",
    "start": "1144920",
    "end": "1151880"
  },
  {
    "text": "boxes and this box is basically grouping the span with the same from the same",
    "start": "1151880",
    "end": "1158330"
  },
  {
    "text": "service and with the same operation name so this is from the front end and operation this patch it was the first",
    "start": "1158330",
    "end": "1164360"
  },
  {
    "text": "span so called route span and then it was calling also the front end but different operation right and also we",
    "start": "1164360",
    "end": "1172610"
  },
  {
    "text": "can see like like the total duration which is basically accumulating duration",
    "start": "1172610",
    "end": "1180530"
  },
  {
    "text": "of all of the spans with the same operation and from the same service right so this green help us to",
    "start": "1180530",
    "end": "1189050"
  },
  {
    "text": "understand traces with lot of spans and they're also this feature if you",
    "start": "1189050",
    "end": "1197690"
  },
  {
    "text": "click on it it will like highlight the let's say the slowest operations the",
    "start": "1197690",
    "end": "1208940"
  },
  {
    "text": "other new feature which was added recently is the it allows you to to",
    "start": "1208940",
    "end": "1216710"
  },
  {
    "text": "compare structure of two to trend to traces so you can choose two or more so",
    "start": "1216710",
    "end": "1231770"
  },
  {
    "text": "here we have a dos these two traces are very similar so we see only like minor",
    "start": "1231770",
    "end": "1239960"
  },
  {
    "text": "difference but what would be what shows us is the is the difference in structure",
    "start": "1239960",
    "end": "1247250"
  },
  {
    "text": "which means like if there are new spans or if there are less spans you know in a",
    "start": "1247250",
    "end": "1254360"
  },
  {
    "text": "beat race so in this example for example this destroys B contains one more span",
    "start": "1254360",
    "end": "1262700"
  },
  {
    "text": "from Redis",
    "start": "1262700",
    "end": "1265539"
  },
  {
    "text": "last thing I would like to show you is the is matrix integration Jaeger Jaeger",
    "start": "1274330",
    "end": "1280979"
  },
  {
    "text": "tracer which is running inside the monitored application can also emit metrics so for example from the customer",
    "start": "1280979",
    "end": "1290619"
  },
  {
    "text": "service we can see like the the metrics for the customer endpoint and those are",
    "start": "1290619",
    "end": "1297820"
  },
  {
    "text": "actually also split by by the status code and this is very useful because",
    "start": "1297820",
    "end": "1303719"
  },
  {
    "text": "with the Jaeger or with with this kind of metrics you get the same metrics",
    "start": "1303719",
    "end": "1310269"
  },
  {
    "text": "across different languages are across different frameworks",
    "start": "1310269",
    "end": "1315329"
  },
  {
    "text": "so you can see the matrix for the end points you can see also some like internal statistics like how many spans",
    "start": "1320960",
    "end": "1327350"
  },
  {
    "text": "were recorded and other other nice other",
    "start": "1327350",
    "end": "1335420"
  },
  {
    "text": "metrics is this one this is from the cast from the road service and the road",
    "start": "1335420",
    "end": "1341120"
  },
  {
    "text": "service is actually able to calculate the total time spent by sessionid right but if I go to if I investigate",
    "start": "1341120",
    "end": "1349970"
  },
  {
    "text": "the D Road service API we can see that",
    "start": "1349970",
    "end": "1358280"
  },
  {
    "text": "it doesn't know anything about direct the session ID right and it's also possible to to calculate the time spent",
    "start": "1358280",
    "end": "1365720"
  },
  {
    "text": "by my request ID so they're all services also using the D peg each feature so",
    "start": "1365720",
    "end": "1373700"
  },
  {
    "text": "it's getting the request ID from the baggage and it's calculating the time",
    "start": "1373700",
    "end": "1379250"
  },
  {
    "text": "spent by by session ID so we can see there are two sessions if I go to a road",
    "start": "1379250",
    "end": "1384710"
  },
  {
    "text": "hot rod and reload do some request you",
    "start": "1384710",
    "end": "1390170"
  },
  {
    "text": "will see there will be more yeah sorry",
    "start": "1390170",
    "end": "1397140"
  },
  {
    "text": "this is everything from the whole roots",
    "start": "1397140",
    "end": "1401090"
  },
  {
    "text": "this so just we don't have much time so",
    "start": "1406930",
    "end": "1412880"
  },
  {
    "text": "I will try to go quickly through some of these things as a summary what we just",
    "start": "1412880",
    "end": "1419690"
  },
  {
    "text": "saw is the features of essentially any distributed tracing not just Jaeger was some specific to Jaeger but the very",
    "start": "1419690",
    "end": "1425660"
  },
  {
    "text": "basic one is we can monitor transactions right in in the system and we could root cause problems like it could be",
    "start": "1425660",
    "end": "1431990"
  },
  {
    "text": "performance problems which could errors which is kind of like another side of performance in a way we can analyze and",
    "start": "1431990",
    "end": "1439940"
  },
  {
    "text": "optimize the service we didn't really go into that into details but like if you read the blog post that Powell mentioned",
    "start": "1439940",
    "end": "1445940"
  },
  {
    "text": "there is a way you can tweak parameters of the hot rod application itself so that it kind of fixes the issues that",
    "start": "1445940",
    "end": "1452360"
  },
  {
    "text": "were introduced intentionally into it like the lock contention if you fix that you see another property from use issue",
    "start": "1452360",
    "end": "1458000"
  },
  {
    "text": "and then you can fix that and you can the setter so the the like if you go through at workflows like all based on",
    "start": "1458000",
    "end": "1463370"
  },
  {
    "text": "tracing and is that you not actually even don't even know much about the application you just say oh I see from",
    "start": "1463370",
    "end": "1469160"
  },
  {
    "text": "the trace that this makes no sense because it's like takes in 15% of my time right and finally we saw the",
    "start": "1469160",
    "end": "1474800"
  },
  {
    "text": "service dependency graphs that we can build there are more advanced ways of doing service burns across which we hope",
    "start": "1474800",
    "end": "1479930"
  },
  {
    "text": "to bring into open source in next half year and finally the context propagation",
    "start": "1479930",
    "end": "1485420"
  },
  {
    "text": "the baggage feature that allows that you pass are just no metadata through local request which is extremely powerful you",
    "start": "1485420",
    "end": "1491180"
  },
  {
    "text": "can like do all kinds of things with it I'm not going to spend too much time on it right so quickly new features just",
    "start": "1491180",
    "end": "1497960"
  },
  {
    "text": "kind of quick shout out to look Perkins who worked on our new website we release",
    "start": "1497960",
    "end": "1503030"
  },
  {
    "text": "the new website and things like that that has the client feature matrix for example you can look at what foreign",
    "start": "1503030",
    "end": "1508760"
  },
  {
    "text": "language what features specifically are supports in the client you we've got the",
    "start": "1508760",
    "end": "1514040"
  },
  {
    "text": "distributions of either docker images or just binaries for three architectures so",
    "start": "1514040",
    "end": "1519350"
  },
  {
    "text": "there's a docker images there's a specific binaries that you can download from previous release as well and",
    "start": "1519350",
    "end": "1525320"
  },
  {
    "text": "finally the graph realizations that Powell just showed so there's like another example which is not from the",
    "start": "1525320",
    "end": "1532580"
  },
  {
    "text": "cartridge but from actual real production use case right so the this throws in more details car why this graphitization",
    "start": "1532580",
    "end": "1538450"
  },
  {
    "text": "super-powerful because you can see now that this trace gets way more complex right and in fact this is still very",
    "start": "1538450",
    "end": "1544510"
  },
  {
    "text": "very collapsed to you because we've like collapsed most of the spans which I'll kind of come in between two services",
    "start": "1544510",
    "end": "1550000"
  },
  {
    "text": "into one node the real trace is just huge it's impossible to do anything with it useful and so by collapsing it that",
    "start": "1550000",
    "end": "1557020"
  },
  {
    "text": "allows us to actually understand better the work the flow and the color coding is used to pinpoint the differences",
    "start": "1557020",
    "end": "1563620"
  },
  {
    "text": "between two traces or set of traces versus one trace right and that allows very quick sort of both for human brain",
    "start": "1563620",
    "end": "1571600"
  },
  {
    "text": "to to pinpoint where there is a potential problem like the specifically the color coding is could be placed in",
    "start": "1571600",
    "end": "1577840"
  },
  {
    "text": "various things this one is structural so and the green means the right span has all the right trace versus left trace",
    "start": "1577840",
    "end": "1585430"
  },
  {
    "text": "like the right trace has more spans within the given path right whereas the red means it's missing some spans and so",
    "start": "1585430",
    "end": "1590530"
  },
  {
    "text": "if we were for example let's say the left the left trace was like our normal operation and the right trace is",
    "start": "1590530",
    "end": "1597160"
  },
  {
    "text": "something that we just like didn't release or there's an outage right so from this view we see immediately the",
    "start": "1597160",
    "end": "1602230"
  },
  {
    "text": "somewhere in the middle the whole segment of the trace was not executed that normally would have been right",
    "start": "1602230",
    "end": "1607960"
  },
  {
    "text": "there red knows that this path didn't happen in the Indus in the new trace and so that's that points to a problem where",
    "start": "1607960",
    "end": "1614530"
  },
  {
    "text": "we can like drill down into notes and see where the errors and what happened another type of organization which isn't",
    "start": "1614530",
    "end": "1621010"
  },
  {
    "text": "yet on open source but we have a pull request for it is based on durations similar concept you can actually call a",
    "start": "1621010",
    "end": "1626470"
  },
  {
    "text": "code how much time differences between individual paths within the graph and so this is kind of I think we were actually",
    "start": "1626470",
    "end": "1633550"
  },
  {
    "text": "doubling down on this technique to burn internally because we think that this is basically given our complexity of",
    "start": "1633550",
    "end": "1639220"
  },
  {
    "text": "architecture and complexity of the spans that we get traces like this is the way",
    "start": "1639220",
    "end": "1644560"
  },
  {
    "text": "to to identify problems and root cause them and you can still read down into the actual trace if you want to but this",
    "start": "1644560",
    "end": "1650560"
  },
  {
    "text": "summer is much easier to consume for a person and and yeah this is basically the so the less information",
    "start": "1650560",
    "end": "1658990"
  },
  {
    "text": "structural condense representation of the same information and show the differences between those",
    "start": "1658990",
    "end": "1664480"
  },
  {
    "text": "aggregates now if you shut out to do like integrations that Jager project has",
    "start": "1664480",
    "end": "1671290"
  },
  {
    "text": "so there's a Jager operator for kubernetes so which makes it much easier to deploy Jager that in production a",
    "start": "1671290",
    "end": "1676960"
  },
  {
    "text": "scale I mentioned open census libraries they have built-in support for Jager so you can instrument with open census",
    "start": "1676960",
    "end": "1683320"
  },
  {
    "text": "Easter accounts with Jager included like if you run sto demo Jager comes by default as a back end envoy which is a",
    "start": "1683320",
    "end": "1692110"
  },
  {
    "text": "proxy like a network proxy used by Easter it's in C++ so Jager has a sip",
    "start": "1692110",
    "end": "1698860"
  },
  {
    "text": "last fall client so there is integration between those two you can actually run it with native Jager client which is that gives you a better way of managing",
    "start": "1698860",
    "end": "1704740"
  },
  {
    "text": "sampling strategies etc versus like a normal default way and finally there are external tools people starting to build",
    "start": "1704740",
    "end": "1711100"
  },
  {
    "text": "like eclipse trade compounds allows you to basically visualize Jager traces as",
    "start": "1711100",
    "end": "1716170"
  },
  {
    "text": "well this is more on the technical side but traditional elect mosquitoes so this",
    "start": "1716170",
    "end": "1722230"
  },
  {
    "text": "was like a younger architecture originally when we open sourced it the main thing here is that we have a Jager",
    "start": "1722230",
    "end": "1727720"
  },
  {
    "text": "agent inside the application it sends dated to the Jager eight sorry Jager client inside application sends data to",
    "start": "1727720",
    "end": "1733630"
  },
  {
    "text": "Jager agent running on the same host or pod that agent basically forwards that",
    "start": "1733630",
    "end": "1739060"
  },
  {
    "text": "data to Jager collectors in the push way and collector also in the push way just",
    "start": "1739060",
    "end": "1744100"
  },
  {
    "text": "write it to Cassandra as fast as you can or any other database right so this works for us originally but the push",
    "start": "1744100",
    "end": "1751300"
  },
  {
    "text": "nature would became kind of problematic like if your storage can't keep up because you suddenly get a sudden spike",
    "start": "1751300",
    "end": "1756640"
  },
  {
    "text": "of traffic then collector has nothing else but to drop the data right because there is no really push back mechanism",
    "start": "1756640",
    "end": "1763060"
  },
  {
    "text": "all the way to the client well we could build it but then the client will have to drop the data right so what we've changed it recently and we release it as",
    "start": "1763060",
    "end": "1769690"
  },
  {
    "text": "open source is that sort of like a Kafka based ingestion you can still do the original one it's still supported but at",
    "start": "1769690",
    "end": "1775780"
  },
  {
    "text": "least at uber internally we've deployed it so the collectors don't write to storage their right to Kafka and the",
    "start": "1775780",
    "end": "1780820"
  },
  {
    "text": "reason is because Kafka is away lot more elastic than any storage right because storage sorted like has to index data",
    "start": "1780820",
    "end": "1786520"
  },
  {
    "text": "with Kafka you just dump the binary blobs into it and so it's much faster and plus uber Kafka infrastructure at",
    "start": "1786520",
    "end": "1793510"
  },
  {
    "text": "least is like very well-established we have a whole team Brian Annette and so for us it was a good choice but another advantage of",
    "start": "1793510",
    "end": "1801360"
  },
  {
    "text": "Kafka is that once we have date in Kafka yeah we can store it into storage if we want to feel like this normal analysis",
    "start": "1801360",
    "end": "1807240"
  },
  {
    "text": "which is done with the cartridge but we can also run big data drops on them or like a blink or streaming jobs purchase",
    "start": "1807240",
    "end": "1813540"
  },
  {
    "text": "park and flink to the framework that could be used and that opens up the whole path for data",
    "start": "1813540",
    "end": "1818850"
  },
  {
    "text": "mining of these traces like in real time and that's why this is like the main reason why we switch to cuff really both",
    "start": "1818850",
    "end": "1824610"
  },
  {
    "text": "the forms were those important this is another kind of internal thing I probably skip it but like we we starting",
    "start": "1824610",
    "end": "1830850"
  },
  {
    "text": "to switch our internal communications in iaeger to protobuf ana and RPC and that allows us to actually do very stable",
    "start": "1830850",
    "end": "1837930"
  },
  {
    "text": "interfaces just defined by IDL because before like the json interface was kind of be spoken there's not well documented",
    "start": "1837930",
    "end": "1844230"
  },
  {
    "text": "so there's going to be improvements here and as far as like if people are familiar with Zipkin so there's the various ways that Jager is compatible",
    "start": "1844230",
    "end": "1850950"
  },
  {
    "text": "with zip units both on the client layer and on the back end so we can take Zipkin spans emitted by zip",
    "start": "1850950",
    "end": "1857700"
  },
  {
    "text": "instrumentation or you can even run one services submitted with the Egger now the solution instrumented with zip",
    "start": "1857700",
    "end": "1863010"
  },
  {
    "text": "inundate they can still talk to each other and pass the data properly and",
    "start": "1863010",
    "end": "1868260"
  },
  {
    "text": "that's I think who was the sea road map we there is no other sessions so there's",
    "start": "1868260",
    "end": "1876450"
  },
  {
    "text": "not much but they'll go so adaptive sampling I apologize we kind of promised it last year too so if the report",
    "start": "1876450",
    "end": "1882960"
  },
  {
    "text": "requests out we just need to review in London but adapt to sampling what it means is that",
    "start": "1882960",
    "end": "1889550"
  },
  {
    "text": "imagine you have an API service with ten and points there is a very high chance that not every endpoint has the same TPS",
    "start": "1889550",
    "end": "1896520"
  },
  {
    "text": "right so like one could be very high creepy as another one was like oh maybe admin page or something and so",
    "start": "1896520",
    "end": "1901820"
  },
  {
    "text": "traditionally many tracing systems have just one single probability of sampling for the whole service or you for the",
    "start": "1901820",
    "end": "1907800"
  },
  {
    "text": "whole system right and they just clearly doesn't work for multiple micro series and so one thing adapt is something that",
    "start": "1907800",
    "end": "1913110"
  },
  {
    "text": "allows you to control by endpoint so you can get like less data from high PPS",
    "start": "1913110",
    "end": "1918570"
  },
  {
    "text": "endpoint and more data from low key PSP endpoint percentage-wise so that you kind of see that otherwise you may not",
    "start": "1918570",
    "end": "1925110"
  },
  {
    "text": "even see in your traces from lockers loke PSN point but more importantly why it's called adaptive is because on the",
    "start": "1925110",
    "end": "1930850"
  },
  {
    "text": "backend there is constant calculation which said well what probabilities should I be using if I want to reach a",
    "start": "1930850",
    "end": "1936250"
  },
  {
    "text": "certain goal of like number of traces right and so right now what's an open source is you can configure those",
    "start": "1936250",
    "end": "1943000"
  },
  {
    "text": "probabilities statically in the collector via config file to various services and they get pushed automatically to the client libraries in",
    "start": "1943000",
    "end": "1950140"
  },
  {
    "text": "dynamically so you can update them dynamically as well on the backend but what's actually painted and pull",
    "start": "1950140",
    "end": "1955600"
  },
  {
    "text": "requests is the auto calculation that happens on the backend for those so that you can you don't even have to configure",
    "start": "1955600",
    "end": "1961360"
  },
  {
    "text": "it many you just basically say I want to see this much from this particular service and the backend will",
    "start": "1961360",
    "end": "1966700"
  },
  {
    "text": "automatically adjust itself and probabilities to how much you should sample the incoming traffic so data",
    "start": "1966700",
    "end": "1974830"
  },
  {
    "text": "pipeline as I mentioned this is like the one of the the kavkaza foundation but what we plan to open source is sort of",
    "start": "1974830",
    "end": "1979870"
  },
  {
    "text": "the actual tools using the Kafka stream of spans to do various kind of things like dependency diagrams more dependency",
    "start": "1979870",
    "end": "1987280"
  },
  {
    "text": "diagrams etcetera ladies histograms storage plugins that's more of an implementation detail but if you run in",
    "start": "1987280",
    "end": "1993700"
  },
  {
    "text": "the company if you don't wanna run Cassandra if you don't wanna run the elasticsearch you want some other back-end right well today with Yaeger",
    "start": "1993700",
    "end": "1999820"
  },
  {
    "text": "it's kind of possible but it's also not easier so we we plan to support the plug-in framework so that someone who",
    "start": "1999820",
    "end": "2006030"
  },
  {
    "text": "wants to really run Jaeger and DynamoDB they can implement that as a storage back-end and just plug it in dynamically",
    "start": "2006030",
    "end": "2012210"
  },
  {
    "text": "and and it's already pull requests in progress partial span is also interesting there",
    "start": "2012210",
    "end": "2018240"
  },
  {
    "text": "are some jobs or applications which kinda take a while to process a particular request right and the way",
    "start": "2018240",
    "end": "2023910"
  },
  {
    "text": "your clients are done today is that you are not going to omit tracing data until that request that you know the span is",
    "start": "2023910",
    "end": "2029220"
  },
  {
    "text": "completed right and that makes you kind of wait for long time and so the the partial spans support means that we",
    "start": "2029220",
    "end": "2035610"
  },
  {
    "text": "can't like flush the data in in in part which especially like if you imagine trace in some workflows which go through",
    "start": "2035610",
    "end": "2042150"
  },
  {
    "text": "Kafka that may take like a minute hours even and so like if you've never flushed the first span they kinda don't",
    "start": "2042150",
    "end": "2049050"
  },
  {
    "text": "even know what's going on with that trace right so we kind of want to be able to support that and that's all we",
    "start": "2049050",
    "end": "2054658"
  },
  {
    "text": "have like I said tomorrow there is going to be yeah deep-dive will go into more details",
    "start": "2054659",
    "end": "2063030"
  },
  {
    "text": "[Applause]",
    "start": "2063030",
    "end": "2067449"
  }
]