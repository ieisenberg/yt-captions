[
  {
    "text": "all right we're gonna go ahead and get started now thank you everybody who is joining us today welcome to today's the",
    "start": "9380",
    "end": "15750"
  },
  {
    "text": "MCF webinar kubernetes ingress simplified cluster management across any platform or environment I'm Kaitlin",
    "start": "15750",
    "end": "22769"
  },
  {
    "text": "Barnard marketing manager at calm and I'll be helping to moderate today's webinar I'd also like to welcome our",
    "start": "22769",
    "end": "28380"
  },
  {
    "text": "presenter today Harry banjee who's a senior cloud engineer at car so just to",
    "start": "28380",
    "end": "33899"
  },
  {
    "text": "cover a few housekeeping items before we get started during the webinar you're not able to speak as an attendee so",
    "start": "33899",
    "end": "39629"
  },
  {
    "text": "there is a Q&A box at the bottom of your screen as we go through the webinar please feel free to drop any questions that you have",
    "start": "39629",
    "end": "45600"
  },
  {
    "text": "in there and then we'll get to as many as we can at the end the webinar is also being recorded and will be available",
    "start": "45600",
    "end": "50700"
  },
  {
    "text": "online later along with the slides so with that I'll hand it over to Harry to kick off today's presentation Thank You",
    "start": "50700",
    "end": "58260"
  },
  {
    "text": "Caitlin hello everyone welcome to this webinar on simplifying ingres using Cuba",
    "start": "58260",
    "end": "65280"
  },
  {
    "text": "it is using conch so we are going to focus on Cuban it is English and how Cong can help you do an",
    "start": "65280",
    "end": "71430"
  },
  {
    "text": "acomplished ingress across communities cluster but also across other clusters",
    "start": "71430",
    "end": "76650"
  },
  {
    "text": "if you wish to so little about today's agenda we're just going to go a brief",
    "start": "76650",
    "end": "82830"
  },
  {
    "text": "overview of what ingress is for those people were not familiar with the terminology and how you want to how why",
    "start": "82830",
    "end": "91770"
  },
  {
    "text": "it came into existence and what can it allow you to do we'll go a little bit into Cong like how Cong came into",
    "start": "91770",
    "end": "98880"
  },
  {
    "text": "existence what Kong can do for you and how Kong can do ingress and a little bit more than embrace actually and then we",
    "start": "98880",
    "end": "105750"
  },
  {
    "text": "will just dive into a demo session which i think is a pretty comprehensive demo",
    "start": "105750",
    "end": "111420"
  },
  {
    "text": "which allows you to figure out not only just ingress but a lot of you know authentication and other stuffs that you",
    "start": "111420",
    "end": "118170"
  },
  {
    "text": "can do at the ingress layer in kubernetes all right so a little bit about myself as Kate inside I am an",
    "start": "118170",
    "end": "126240"
  },
  {
    "text": "engineer at Congo I open source enthusiastic maintain a couple of open source projects wrong with conch",
    "start": "126240",
    "end": "133510"
  },
  {
    "text": "I come from qmu KVM virtualization background for those people who are not familiar with that that's what powers",
    "start": "133510",
    "end": "140590"
  },
  {
    "text": "cloud computing environment so if all the VMS that you see running in any of your cloud providers underneath it you",
    "start": "140590",
    "end": "147340"
  },
  {
    "text": "have the linux k vm here and so i have moved up the stack and now a champ I'm",
    "start": "147340",
    "end": "153250"
  },
  {
    "text": "kind of championing Kuban it is at Kong and outside Israel so with that Cuban it",
    "start": "153250",
    "end": "160660"
  },
  {
    "text": "is ingress so you you almost be familiar with you know you can install services",
    "start": "160660",
    "end": "165850"
  },
  {
    "text": "into Cuba nowadays you can get them running beat your stateful pods or be it your stateless services you can get your",
    "start": "165850",
    "end": "172630"
  },
  {
    "text": "thoughts running you know persistence volume claims but once you have everything in there how do you see how",
    "start": "172630",
    "end": "182470"
  },
  {
    "text": "do you actually give people outside the people access to your services you know",
    "start": "182470",
    "end": "187780"
  },
  {
    "text": "how do you give services which are not running in Cuba noticed and running outside how do you get access to those",
    "start": "187780",
    "end": "194519"
  },
  {
    "text": "services and that's where kubernetes comes into picture sorry that's where",
    "start": "194519",
    "end": "199840"
  },
  {
    "text": "English content comes into play ingress is not something new even like 20 years",
    "start": "199840",
    "end": "204940"
  },
  {
    "text": "ago we had this concept of you know dmz like Demilitarized Zone subnets where you would run your you know the first",
    "start": "204940",
    "end": "211450"
  },
  {
    "text": "firewall the proxy and and that's where all the traffic that you get into your",
    "start": "211450",
    "end": "216940"
  },
  {
    "text": "network comes from there and that gets propagated into the entire cluster and",
    "start": "216940",
    "end": "222459"
  },
  {
    "text": "you know that's get forwarded to whatever services you are running so why why should you do that I don't think",
    "start": "222459",
    "end": "229480"
  },
  {
    "text": "that's needs a lot of convincing but we still go around see like you know one port of entry is something that you know",
    "start": "229480",
    "end": "234910"
  },
  {
    "text": "all your Ops guys will love you know if you want to firewall some traffic or you know if you are being ddosed or if you",
    "start": "234910",
    "end": "241329"
  },
  {
    "text": "are being any kind of security measures that you would like to take you would like to take that at that first layer",
    "start": "241329",
    "end": "246600"
  },
  {
    "text": "any kind of audits you'd like to do you would like to do it that one single point well you could ask well Harry you",
    "start": "246600",
    "end": "254859"
  },
  {
    "text": "can go and create a service of pipe load balancer and that's it like if you are",
    "start": "254859",
    "end": "260919"
  },
  {
    "text": "running in a cloud provider environment I will get a load balancer and I can send traffic for that API or web service or",
    "start": "260919",
    "end": "268160"
  },
  {
    "text": "whatever I am running and that solves my problem so why not do that and why do this entering this management so the",
    "start": "268160",
    "end": "276590"
  },
  {
    "text": "reason being like he said you know one point of entry and also a lot of traffic management and connection management",
    "start": "276590",
    "end": "282190"
  },
  {
    "text": "you'd want to terminate TCP as early as possible to speed up a little bit",
    "start": "282190",
    "end": "288410"
  },
  {
    "text": "whatever it may be to reduce the overhead of three-way handshake same",
    "start": "288410",
    "end": "293840"
  },
  {
    "text": "with TLS termination you might want to encrypt traffic different three internally inside your cluster so that",
    "start": "293840",
    "end": "300230"
  },
  {
    "text": "you know you have some more visibility into traffic when you're debugging or if you are solving the production issue and",
    "start": "300230",
    "end": "306560"
  },
  {
    "text": "that's where you know things like service mesh also come in you also want to do load balancing at that layer so if",
    "start": "306560",
    "end": "314060"
  },
  {
    "text": "you if you are rude balancing across the zones in to avoid failures when you know one of your Easy's go down you would",
    "start": "314060",
    "end": "321680"
  },
  {
    "text": "want to do that it's at that layer you would also want to do know canary deployments then you can probably do it",
    "start": "321680",
    "end": "328340"
  },
  {
    "text": "the ingress of the DMZ layer itself you could also move it further into the stack depending on how your operations",
    "start": "328340",
    "end": "334880"
  },
  {
    "text": "looks like but you usually people can do a lot more at the indus layer that's",
    "start": "334880",
    "end": "340190"
  },
  {
    "text": "what I'm here to champion so in respect has been around since about 2015 so it's",
    "start": "340190",
    "end": "347360"
  },
  {
    "text": "about the first commit was in 2015 so it's been around for four years but it still has been in v1 beta one what the",
    "start": "347360",
    "end": "355880"
  },
  {
    "text": "spec allows you to do is it define it lets you define routing principles its routing policies for your cluster so any",
    "start": "355880",
    "end": "363200"
  },
  {
    "text": "traffic that comes to your cuba net is clustered catch goes through that ingress layer and then the traffic any",
    "start": "363200",
    "end": "371570"
  },
  {
    "text": "request matches against a specific ingress rule and that gets sent or forwarded to your service that is",
    "start": "371570",
    "end": "378110"
  },
  {
    "text": "running inside your cluster it's pretty vendor neutral so you know we are using any kind of proxy it does not really",
    "start": "378110",
    "end": "384530"
  },
  {
    "text": "matter you can swap out proxies easily and that's what that's that's the main",
    "start": "384530",
    "end": "391390"
  },
  {
    "text": "reason liking us is getting so popular is it's pretty much vendor neutral it",
    "start": "391390",
    "end": "398270"
  },
  {
    "text": "has been stagnant for a pretty for a long time and now the community is again picked up it has it's",
    "start": "398270",
    "end": "405360"
  },
  {
    "text": "now going through a transition and it's going through to a v1 API very soon now",
    "start": "405360",
    "end": "411540"
  },
  {
    "text": "I think in Cuban it is 1.17 so let's look at the speck here right Rick so it",
    "start": "411540",
    "end": "417660"
  },
  {
    "text": "this is this is pretty standard Cuban it is manifest and on the on the left you",
    "start": "417660",
    "end": "425580"
  },
  {
    "text": "can see that this was this is currently until Cuban it is 1.15 this was under",
    "start": "425580",
    "end": "430950"
  },
  {
    "text": "the extensions now to be one meter one API group extensions API group has been",
    "start": "430950",
    "end": "436530"
  },
  {
    "text": "deprecated in is we are trying to remove that from Cuban interests so increase was is being put into ingress into the",
    "start": "436530",
    "end": "444030"
  },
  {
    "text": "networking API group and is is being g8",
    "start": "444030",
    "end": "449280"
  },
  {
    "text": "soon with some suffixes to get you'll also want to expand it a lot more since",
    "start": "449280",
    "end": "455700"
  },
  {
    "text": "it it's it's a very narrow spec an epi so let's let's look at the ingress spec",
    "start": "455700",
    "end": "462000"
  },
  {
    "text": "here so pretty standard Cuban it is spec we have the name let's say Finance API",
    "start": "462000",
    "end": "467100"
  },
  {
    "text": "is and then we have a rule here with a couple of paths here so what the rule says is any any request that comes with",
    "start": "467100",
    "end": "474870"
  },
  {
    "text": "example.com as the host the host name in the in an HTTP request will forward it",
    "start": "474870",
    "end": "482760"
  },
  {
    "text": "to do services based on the path that matches so if the if the request path",
    "start": "482760",
    "end": "488310"
  },
  {
    "text": "starts with slash bills will forward it to the bills service that we are running right and this will service will be",
    "start": "488310",
    "end": "495330"
  },
  {
    "text": "located in the same name namespace as the ingress rule so here we are not defining a namespace so this will go",
    "start": "495330",
    "end": "500880"
  },
  {
    "text": "into the default namespace you can create ingress rules in any namespace you wish but it should be the same in",
    "start": "500880",
    "end": "507510"
  },
  {
    "text": "space as your service we want to keep that namespace soft isolation inside",
    "start": "507510",
    "end": "513270"
  },
  {
    "text": "Cuba notice and then we have the slash orders path slash orders gets forwarded",
    "start": "513270",
    "end": "519870"
  },
  {
    "text": "to the orders service that is running inside Cuba notice that gets 402 on to the HTTP port",
    "start": "519870",
    "end": "529200"
  },
  {
    "text": "443 so this is this is not the complete spec but it's a pretty small example it shows",
    "start": "529200",
    "end": "536570"
  },
  {
    "text": "the power of it like you know you can specify you can you can be couple the service that you are running and how the",
    "start": "536570",
    "end": "542310"
  },
  {
    "text": "traffic actually needs to get it and folks are familiar with you know H a proxy or nginx or Apache could probably",
    "start": "542310",
    "end": "549900"
  },
  {
    "text": "start thinking about it okay how would I write my you know server blocks or location blocks and how would I go about",
    "start": "549900",
    "end": "555209"
  },
  {
    "text": "handling these so that sound like the main focus here is being vendor nutri",
    "start": "555209",
    "end": "561079"
  },
  {
    "text": "now an important point here to be noted is this ingress resource ships with",
    "start": "561079",
    "end": "567600"
  },
  {
    "text": "cuban artists but cuba notice if you create this ingress resource let's say you're running mini cube nothing would",
    "start": "567600",
    "end": "573780"
  },
  {
    "text": "actually happen these ingress resources if let you define",
    "start": "573780",
    "end": "579060"
  },
  {
    "text": "routing policies but since you need to install a controller which actually reads these policies and implements them",
    "start": "579060",
    "end": "586410"
  },
  {
    "text": "you know so these policies are read by you know you can there are popular ingress controllers",
    "start": "586410",
    "end": "593430"
  },
  {
    "text": "out there con being one of them they can they can read these policies and configure themselves to to route traffic",
    "start": "593430",
    "end": "599670"
  },
  {
    "text": "accordingly so that's where it comes in where you have this ingress API inside",
    "start": "599670",
    "end": "605490"
  },
  {
    "text": "kubernetes but it won't ship with an ingress controller if you're running gke chaos",
    "start": "605490",
    "end": "612630"
  },
  {
    "text": "or any of the managed offering they do come you know some some basic in various controllers so that's that's another",
    "start": "612630",
    "end": "620130"
  },
  {
    "text": "option that you have so this is where it comes saying okay we have this in here it's now how do we go about and actually",
    "start": "620130",
    "end": "625980"
  },
  {
    "text": "start using it because if you just create this ingress resource nothing is going to happen so that's where con",
    "start": "625980",
    "end": "631890"
  },
  {
    "text": "comes in the Kong is one of the popular images controllers that we that are out there and so I'm going to go a little",
    "start": "631890",
    "end": "639690"
  },
  {
    "text": "bit into like how what Kong is and why you should be using that for in this so Congress of currently very popular cloud",
    "start": "639690",
    "end": "647070"
  },
  {
    "text": "native API gateway although it's not an API gateway anymore it's going more",
    "start": "647070",
    "end": "652079"
  },
  {
    "text": "towards you know like how you can orchestrate micro services how you can you know even do service mesh with Kong",
    "start": "652079",
    "end": "657829"
  },
  {
    "text": "it was initially open sourced in 2015 by a company called misshape and then",
    "start": "657829",
    "end": "664300"
  },
  {
    "text": "it's an Apache to soar in a fairly liberal license minute one daughter was announced last year it's been running in",
    "start": "664300",
    "end": "671230"
  },
  {
    "text": "production for about about for us about three years now and last year the one daughter launch announced feature",
    "start": "671230",
    "end": "678340"
  },
  {
    "text": "completeness of the product the most important point here to note that I",
    "start": "678340",
    "end": "683380"
  },
  {
    "text": "would like to emphasize is platform agnostic City so this this presentation",
    "start": "683380",
    "end": "689770"
  },
  {
    "text": "is focusing on Cuban it is focus of Kong",
    "start": "689770",
    "end": "695070"
  },
  {
    "text": "but we do but anything that we do develop in our crew core product is never Cuban it is specific most of our",
    "start": "695070",
    "end": "702730"
  },
  {
    "text": "customers run you know in a hybrid environment any enterprises that we don't you know we are seeing a lot of",
    "start": "702730",
    "end": "708520"
  },
  {
    "text": "Cuban it is adoption but then you know you have their metal data centers still around",
    "start": "708520",
    "end": "713890"
  },
  {
    "text": "you have OpenStack still around you know it's not that everybody's just moved to you know public cloud or everybody's",
    "start": "713890",
    "end": "719860"
  },
  {
    "text": "just implementing kubernetes solutions in their shops people stay use other orchestrated orchestration solutions and",
    "start": "719860",
    "end": "726610"
  },
  {
    "text": "Kong works across them so Kong can be deployed in in all of these environment and Kong can work with service discovery",
    "start": "726610",
    "end": "733690"
  },
  {
    "text": "mechanisms of all these environment so that's where we want to be very very Cuban at is friendly and Cuban it is",
    "start": "733690",
    "end": "740290"
  },
  {
    "text": "integrations are extremely important to us but that's not the only platform that we would like to focus our efforts on",
    "start": "740290",
    "end": "747240"
  },
  {
    "text": "yeah so going into a little bit of details of you know what actually Kong",
    "start": "747240",
    "end": "753280"
  },
  {
    "text": "can do for me is so this is a rough overview of what Konkan completions",
    "start": "753280",
    "end": "758950"
  },
  {
    "text": "right so on the left side I have declined now this client can be anybody you need any user of an API right so it",
    "start": "758950",
    "end": "765970"
  },
  {
    "text": "can be you can have like a public API like Twitter or Google and your clients",
    "start": "765970",
    "end": "771940"
  },
  {
    "text": "could be accessing your API is over the Internet and you know coming through that route what you're trying can also",
    "start": "771940",
    "end": "777970"
  },
  {
    "text": "be you know your internal services like if you are running a micro services architecture in insider organization you",
    "start": "777970",
    "end": "785680"
  },
  {
    "text": "can have one service talk to another and that traffic can flow why a Kong instead on the right-hand side we have got a few",
    "start": "785680",
    "end": "793360"
  },
  {
    "text": "services and these are services of all kind so we see we have a G RPC service we have no",
    "start": "793360",
    "end": "801610"
  },
  {
    "text": "arrests simple JSON over HTTP and you know other other kind of restful services that you could be running JSON",
    "start": "801610",
    "end": "809710"
  },
  {
    "text": "over HTTP being the most popular one today and G RPC slowing eating that up and then we have the database traffic",
    "start": "809710",
    "end": "815980"
  },
  {
    "text": "you know so you could have you know you know Brady's protocols flowing through you could have my sequel you could also",
    "start": "815980",
    "end": "821860"
  },
  {
    "text": "have something much more like different l4 protocol something like you know Kafka flowing through as well",
    "start": "821860",
    "end": "827500"
  },
  {
    "text": "so you can flick proxy any traffic through Kong and then Kong can do a certain magic on top of those requests",
    "start": "827500",
    "end": "835300"
  },
  {
    "text": "right so as the request flows through Kong Kong can change the request or Kong",
    "start": "835300",
    "end": "840400"
  },
  {
    "text": "can implement certain policies that you wanted to do it so each of the boxes that I've drawn here are sort of plugins",
    "start": "840400",
    "end": "848620"
  },
  {
    "text": "in Kong Kong is an extensible architecture and it's like a plug-in based architecture so you can specify",
    "start": "848620",
    "end": "854530"
  },
  {
    "text": "you know any request that goes through my bills service which is JSON over HTTP",
    "start": "854530",
    "end": "859990"
  },
  {
    "text": "load balance set in this particular way you know I want to maybe do sticky",
    "start": "859990",
    "end": "865270"
  },
  {
    "text": "sessions with it and also I want some Prometheus metrics out of it well for my G RPC service I want some data dot",
    "start": "865270",
    "end": "871750"
  },
  {
    "text": "matrix out of it right and then maybe for the database traffic that I'm seeing you know if I have high latency I want",
    "start": "871750",
    "end": "877960"
  },
  {
    "text": "to do certain kind of logging for those slow queries right and all that you can little customized and Kong and get that",
    "start": "877960",
    "end": "884260"
  },
  {
    "text": "done a very popular feature meaning rate limiting you know like you don't want",
    "start": "884260",
    "end": "889390"
  },
  {
    "text": "people to be hitting your traffic so you could do all these in these services as",
    "start": "889390",
    "end": "894880"
  },
  {
    "text": "well the reason Kong is exists is we try to try things out so rather than asking",
    "start": "894880",
    "end": "899890"
  },
  {
    "text": "each and every application thing that you have for these features you can just",
    "start": "899890",
    "end": "905560"
  },
  {
    "text": "run Kong in front of them and the services are you know core business logic of that service is only inside the",
    "start": "905560",
    "end": "911680"
  },
  {
    "text": "service you are not implementing rate limiting in know 20 different ways you know and be so that also gives you a lot",
    "start": "911680",
    "end": "918190"
  },
  {
    "text": "of homogeneous you know nature of if you are if an external developer is reading",
    "start": "918190",
    "end": "923350"
  },
  {
    "text": "something they naturally know ok this is how your API works so Kong is built on",
    "start": "923350",
    "end": "930670"
  },
  {
    "text": "top of a very stack is what I would like to say so underneath it's in Jeanette's Ingenix",
    "start": "930670",
    "end": "937360"
  },
  {
    "text": "needs no introduction to this audience I hope it's been around for about a decade now Oh actually more than a decade",
    "start": "937360",
    "end": "943300"
  },
  {
    "text": "it's it powers a huge part of Internet on top of in genetics is a it's kind of",
    "start": "943300",
    "end": "950920"
  },
  {
    "text": "less popular than nginx but it's called it's called open touristy which extends in Gen X with Lua and logit and so",
    "start": "950920",
    "end": "959050"
  },
  {
    "text": "Luanda jitter like you know flu is very popular scripting languages that was then initially used only I think in its",
    "start": "959050",
    "end": "966279"
  },
  {
    "text": "it's more powerful powerful in the gaming community and you know embedded systems but it with low budget you can",
    "start": "966279",
    "end": "973029"
  },
  {
    "text": "get like you know a or C sealer near like hardware performance it compiles down to very fast bytecode and so that's",
    "start": "973029",
    "end": "982690"
  },
  {
    "text": "another open source product that originally came out of cloud flavor so",
    "start": "982690",
    "end": "987940"
  },
  {
    "text": "proud flare stack is entirely in you know C and Lua and that's being ins in excel you were and that's where it was born and now",
    "start": "987940",
    "end": "994930"
  },
  {
    "text": "it's it's being maintained and has a thriving community around it and by the way this is open dusty is what actually",
    "start": "994930",
    "end": "1001380"
  },
  {
    "text": "powers ingress engine X which was the first in engineer which was the first English controller that kubernetes",
    "start": "1001380",
    "end": "1006480"
  },
  {
    "text": "community developed so a open dusty is a sort of subset of engineering so if you",
    "start": "1006480",
    "end": "1011700"
  },
  {
    "text": "have any engine X configuration you can also provide that to understand it will work out of the box it has more features",
    "start": "1011700",
    "end": "1019500"
  },
  {
    "text": "and you know inside embedded inside which which make it pretty much dynamic",
    "start": "1019500",
    "end": "1024800"
  },
  {
    "text": "and then Kong is built on top of open dusty which when we're we make it you know really API driven and crowd native",
    "start": "1024800",
    "end": "1032308"
  },
  {
    "text": "proud native being maybe we wanted to not have you know like you don't have to",
    "start": "1032309",
    "end": "1037410"
  },
  {
    "text": "restart any processes you know if configurations change very often now as your Cuba notice so this is scale we",
    "start": "1037410",
    "end": "1043558"
  },
  {
    "text": "won't come to automatically handle traffic across those balanced load balance across the ocean and it's",
    "start": "1043559",
    "end": "1050670"
  },
  {
    "text": "completely API driven so you can script it to do a lot of things you know that are specific to your infrastructure but",
    "start": "1050670",
    "end": "1056490"
  },
  {
    "text": "we also ship the things which are you know like standardized you know",
    "start": "1056490",
    "end": "1062100"
  },
  {
    "text": "something like rate limiting if anybody wants to use it we ship with the standard plug in but then you can change it extend it as in ways you would like to",
    "start": "1062100",
    "end": "1068450"
  },
  {
    "text": "do it so how do we do ingress with Kong we have a Kong interest controller that",
    "start": "1068450",
    "end": "1074090"
  },
  {
    "text": "makes Kong super super nice and friendly with kubernetes so this is a very fairly simple architecture as you can see you",
    "start": "1074090",
    "end": "1081080"
  },
  {
    "text": "have the API server on the left here in the middle you have comm pods which run",
    "start": "1081080",
    "end": "1087230"
  },
  {
    "text": "two containers one container is calm which is the runtime which is the proxy that we use and we have a co-located",
    "start": "1087230",
    "end": "1093770"
  },
  {
    "text": "controller which talks book unit is API server I don't hand and saw back and everything reach these reads the ingress",
    "start": "1093770",
    "end": "1100940"
  },
  {
    "text": "resources that we created and configures kong accordingly and then that that gets proxy to your services you know and then",
    "start": "1100940",
    "end": "1107150"
  },
  {
    "text": "Kong can execute authentication and whatnot on these things so as I was",
    "start": "1107150",
    "end": "1113480"
  },
  {
    "text": "saying the the ingress spec is fairly narrow as you could see it's currently HTTP only you can route based on you",
    "start": "1113480",
    "end": "1121790"
  },
  {
    "text": "know host header you can draw based on you know the paths you have you can put",
    "start": "1121790",
    "end": "1127070"
  },
  {
    "text": "in some TLS settings as well but Kong Kong can do a lot more than that and we",
    "start": "1127070",
    "end": "1132350"
  },
  {
    "text": "want you to do that we want you to use Kong for all those things excuse me so",
    "start": "1132350",
    "end": "1140290"
  },
  {
    "text": "we we have a concept of plugins so we have a few different CR DS and we will",
    "start": "1140290",
    "end": "1145429"
  },
  {
    "text": "get this more into these into the demo what these allow you to do is you know extend the ingress API using you know",
    "start": "1145429",
    "end": "1153350"
  },
  {
    "text": "annotations and CR DS to do more things and extend the regular ingress these are",
    "start": "1153350",
    "end": "1159770"
  },
  {
    "text": "specific things as well so that's why the some of these can be incorporated into the ingress API and that's",
    "start": "1159770",
    "end": "1165919"
  },
  {
    "text": "something that we are trying to work with the community but some of these will always be you know outside the",
    "start": "1165919",
    "end": "1171770"
  },
  {
    "text": "English API so let's let's get into the demo and I should stop talking because",
    "start": "1171770",
    "end": "1177679"
  },
  {
    "text": "that's what people here are for so let's see can you guys see my screen Kaitlyn",
    "start": "1177679",
    "end": "1185210"
  },
  {
    "text": "can you see my screen yeah looks good awesome ok let's see so I'm running a",
    "start": "1185210",
    "end": "1192880"
  },
  {
    "text": "gke cluster right now just for the ease of the demo and",
    "start": "1192880",
    "end": "1198640"
  },
  {
    "text": "whatever I do is actually going to be accessible on the Internet nobody actually does all right so I'm going to",
    "start": "1198640",
    "end": "1208179"
  },
  {
    "text": "follow Ritchie a script so we have the English controller that we're it's a",
    "start": "1208179",
    "end": "1215169"
  },
  {
    "text": "simple Amal that we are going to install right now so Kong University wheelers is yeah man that we are installing oops",
    "start": "1215169",
    "end": "1224640"
  },
  {
    "text": "okay that's better so we are installing everything in a specific name space called Kong and we",
    "start": "1224640",
    "end": "1231429"
  },
  {
    "text": "install the custom resource definitions that I just showed you in the slide and we have some car back related resources",
    "start": "1231429",
    "end": "1239230"
  },
  {
    "text": "and a service account which which gives Kong the permission to talk to the API",
    "start": "1239230",
    "end": "1245679"
  },
  {
    "text": "server and then we have a deployment and a config map to configure calm all right",
    "start": "1245679",
    "end": "1251440"
  },
  {
    "text": "let's see so we can do this so we have",
    "start": "1251440",
    "end": "1256960"
  },
  {
    "text": "got the ingress control or up and running as you can see we have got two pods and both are ready to run we should",
    "start": "1256960",
    "end": "1263350"
  },
  {
    "text": "also have a service so we have the proxy",
    "start": "1263350",
    "end": "1268929"
  },
  {
    "text": "service which is a pipe load balancer right so you only have ideally you would",
    "start": "1268929",
    "end": "1273940"
  },
  {
    "text": "only have one load balancer service that is Kong and everything would flow through this right so you don't have to",
    "start": "1273940",
    "end": "1279850"
  },
  {
    "text": "pay for 15 load balancers if you are running 15 services inside Cuba notice so let's see all what we have installed",
    "start": "1279850",
    "end": "1289470"
  },
  {
    "text": "so oh everything so that includes a pod that includes a service deployment and replica set replica set belongs to this",
    "start": "1289470",
    "end": "1296139"
  },
  {
    "text": "deployment rate and replica set is what is powering a pod here we are running only one pod right now obviously you",
    "start": "1296139",
    "end": "1302500"
  },
  {
    "text": "don't do this in production run multiple instances for some redundancy to provide",
    "start": "1302500",
    "end": "1308559"
  },
  {
    "text": "some protection or against failure of you know a specific node let's see if",
    "start": "1308559",
    "end": "1315519"
  },
  {
    "text": "Google God first balancer for Kong",
    "start": "1315519",
    "end": "1321419"
  },
  {
    "text": "alright so we got an external IP here this should be routable on the Internet so what I'm going to do is I'm going to",
    "start": "1321419",
    "end": "1327309"
  },
  {
    "text": "go ahead and set this into an environment variable since I'm going to that throughout the demo so this up now",
    "start": "1327309",
    "end": "1339030"
  },
  {
    "text": "I'm going to send a simple request to this endpoint you can see here that you",
    "start": "1339030",
    "end": "1345510"
  },
  {
    "text": "know Congress pointed with a message saying no routes nor out matched with those values this is because we have not",
    "start": "1345510",
    "end": "1352200"
  },
  {
    "text": "created any ingress rule currently there's no resources Pancho Kong does",
    "start": "1352200",
    "end": "1358170"
  },
  {
    "text": "not know how to proxy any requests how to set how to forward it inside your kubernetes cluster so and you can see we",
    "start": "1358170",
    "end": "1365160"
  },
  {
    "text": "are running like the response is indeed coming from Kong so so that that gives you the hint so what we are going to do",
    "start": "1365160",
    "end": "1371250"
  },
  {
    "text": "next is going to install two services these are very simple fairly demo services what we have got here is HTTP",
    "start": "1371250",
    "end": "1379260"
  },
  {
    "text": "bin which is the same issue to be been dot or service you know which echoes request content and you can configure it",
    "start": "1379260",
    "end": "1385800"
  },
  {
    "text": "to do a few different it based on search requests it will send back a different response and then we have got an echo",
    "start": "1385800",
    "end": "1391200"
  },
  {
    "text": "service which responds back with some pod details and requests and response details all right so let's cube secure",
    "start": "1391200",
    "end": "1400890"
  },
  {
    "text": "get Forge will show okay I'm running four instances of the echo service",
    "start": "1400890",
    "end": "1406920"
  },
  {
    "text": "I've got HTTP bin external DNS or something that I'm using currently to to manage DNS of my cube and it is",
    "start": "1406920",
    "end": "1412830"
  },
  {
    "text": "clustered you can ignore that for this demo so let's go ahead and create an ingress rule here right so what we just",
    "start": "1412830",
    "end": "1419370"
  },
  {
    "text": "did here to kind is ingress if you see the API version is extensions because",
    "start": "1419370",
    "end": "1424380"
  },
  {
    "text": "this is a older communities cluster and we have got a couple of rules here the",
    "start": "1424380",
    "end": "1429480"
  },
  {
    "text": "first rule says there is no chill gets",
    "start": "1429480",
    "end": "1434510"
  },
  {
    "text": "described okay so that gives you a nice",
    "start": "1438200",
    "end": "1445110"
  },
  {
    "text": "pretty printed form where the first one is we haven't set any host header so that means any any request that comes",
    "start": "1445110",
    "end": "1451620"
  },
  {
    "text": "that starts with /foo gets forwarded to the echo service that we created and anything that comes to http Ben dot you",
    "start": "1451620",
    "end": "1458580"
  },
  {
    "text": "know for IDO comm gets forwarded to HTTP bin alright",
    "start": "1458580",
    "end": "1464880"
  },
  {
    "text": "so let's let's test this out so we sent the proxy IP so I'm going to send a",
    "start": "1464880",
    "end": "1470700"
  },
  {
    "text": "request to slash again /f nothing happens because there is no request",
    "start": "1470700",
    "end": "1477510"
  },
  {
    "text": "there's nothing that gets forwarded and then if we do /foo you can see that you",
    "start": "1477510",
    "end": "1483180"
  },
  {
    "text": "know you've got some information here so we look at some so the headers first so you can see we've got the actual server",
    "start": "1483180",
    "end": "1490650"
  },
  {
    "text": "which responded with to a request for a KO server and the request was proxy do i account so kong actually matched this",
    "start": "1490650",
    "end": "1498000"
  },
  {
    "text": "rule against our ingress rule that we created and forwarded it upstream and then we have you know which a copepod",
    "start": "1498000",
    "end": "1505140"
  },
  {
    "text": "actually responded since we have four convoluted balance by default it will do a round-robin load balancing but you",
    "start": "1505140",
    "end": "1511050"
  },
  {
    "text": "could configure it to do sticky sessions or hash-based based on you know source IP or some only cookie based as well if",
    "start": "1511050",
    "end": "1518490"
  },
  {
    "text": "you wanted and then we have some request information so if we do something like",
    "start": "1518490",
    "end": "1524330"
  },
  {
    "text": "let's say X poster we'll see that the method is now post right and if we slash four demos C and",
    "start": "1524330",
    "end": "1533820"
  },
  {
    "text": "CF we'll see the real path is /mo CN CF okay so that's like basic ingress that's",
    "start": "1533820",
    "end": "1540330"
  },
  {
    "text": "working here right now let's see so I'm going to see if we can do this so I'm",
    "start": "1540330",
    "end": "1547710"
  },
  {
    "text": "running I'm running some automation here to populate cloud fair DNS with the hi",
    "start": "1547710",
    "end": "1555030"
  },
  {
    "text": "cluster IP that we just got and okay so we can see that DNS propagation has",
    "start": "1555030",
    "end": "1560490"
  },
  {
    "text": "happened successfully so we had this rule of HTTP been dot you know 42 comm",
    "start": "1560490",
    "end": "1565650"
  },
  {
    "text": "goes to the HTTP bin service so if you are familiar with HTTP then you can do slash status 200 it will return back a",
    "start": "1565650",
    "end": "1573150"
  },
  {
    "text": "200 ok and you can see you know the request is being for our goodbye comp",
    "start": "1573150",
    "end": "1578360"
  },
  {
    "text": "let's ask for the headers and it will",
    "start": "1578360",
    "end": "1586380"
  },
  {
    "text": "send back the headers that we are sending right so far and we will see that the request actually focused goes",
    "start": "1586380",
    "end": "1593370"
  },
  {
    "text": "through Kong and these are all the request headers that are coming through so that you",
    "start": "1593370",
    "end": "1598500"
  },
  {
    "text": "see Kong here because these are all the request header well being sick on the responsible so this is all pretty pretty",
    "start": "1598500",
    "end": "1605640"
  },
  {
    "text": "much pretty basic right you you only have you got ingress you created in this rule you can proxy services now we are",
    "start": "1605640",
    "end": "1613500"
  },
  {
    "text": "going to get into Kong specifically parts here so I'm going to go ahead and create account plug-in resources so",
    "start": "1613500",
    "end": "1620970"
  },
  {
    "text": "let's go through this so what we are saying here is we're giving it a any name and then we have a config of the",
    "start": "1620970",
    "end": "1627840"
  },
  {
    "text": "plug-in so we are saying that for whenever this plug-in gets executed add a require add a header and add the",
    "start": "1627840",
    "end": "1634770"
  },
  {
    "text": "header demo or colon injected by comm right and the plug-in that we are using right now is the response transformer",
    "start": "1634770",
    "end": "1640380"
  },
  {
    "text": "because we want to transform responses we do not want to transfer requests you",
    "start": "1640380",
    "end": "1645480"
  },
  {
    "text": "can also use request transformer and they know before sends that request to your service Kong will inject this",
    "start": "1645480",
    "end": "1651990"
  },
  {
    "text": "header while right now when the response comes back to your service to Kong before sending the response back to the",
    "start": "1651990",
    "end": "1658260"
  },
  {
    "text": "client Kong will inject this header okay so let's we created the resource now",
    "start": "1658260",
    "end": "1665970"
  },
  {
    "text": "let's execute this plug-in so now let's execute the request and see the so I'm",
    "start": "1665970",
    "end": "1672180"
  },
  {
    "text": "just outputting the headers because we are not dealing with we don't care about the body for this part we don't see that",
    "start": "1672180",
    "end": "1678690"
  },
  {
    "text": "request the request actually has that header the reason being we created this plug-in but we didn't configure com2",
    "start": "1678690",
    "end": "1686970"
  },
  {
    "text": "when to actually join this plug-in like when do we do we want to execute this plug-in on every request or for some",
    "start": "1686970",
    "end": "1692730"
  },
  {
    "text": "request so for that what we'll do is we'll go ahead and annotate our ingress",
    "start": "1692730",
    "end": "1698970"
  },
  {
    "text": "rule so what we are going to do is we are going to add an annotation saying",
    "start": "1698970",
    "end": "1705150"
  },
  {
    "text": "that whenever the request is executed and it matches one of these ingress",
    "start": "1705150",
    "end": "1712200"
  },
  {
    "text": "rules that we created for HTTP pain and our echo service execute this plug-in as well right you",
    "start": "1712200",
    "end": "1717540"
  },
  {
    "text": "can hand you can specify some other plug-in as well here so it can run as many plugins as you want and then we",
    "start": "1717540",
    "end": "1724500"
  },
  {
    "text": "edit that now we go ahead and execute this request and we see that the demo",
    "start": "1724500",
    "end": "1730080"
  },
  {
    "text": "header is actually injected by and if we call let's say HTTP bin",
    "start": "1730080",
    "end": "1737070"
  },
  {
    "text": "because that is inside the same ingress rule you can see that it still is",
    "start": "1737070",
    "end": "1743249"
  },
  {
    "text": "injected by a common tree so so that that's how you this is the basic version will you know can inject header you can",
    "start": "1743249",
    "end": "1749729"
  },
  {
    "text": "also remove a header or you can replace a header with the content of some other request or you can append to a header",
    "start": "1749729",
    "end": "1755700"
  },
  {
    "text": "now you can have so you can do a lot of those things but I hope this this this gets the message that you know okay you",
    "start": "1755700",
    "end": "1762749"
  },
  {
    "text": "can do transformations on requests and responses as well next I will go through",
    "start": "1762749",
    "end": "1769379"
  },
  {
    "text": "an authentication plugin so we have got HTTP bin and if you are opening we should EP bin right now in your browser",
    "start": "1769379",
    "end": "1776729"
  },
  {
    "text": "so you'll see that anybody can access it I've only got one part of it running so even if enough of you are actually",
    "start": "1776729",
    "end": "1782219"
  },
  {
    "text": "hitting that you'll probably need ask me and I don't want to found that to happen right so what we will do is we will",
    "start": "1782219",
    "end": "1789539"
  },
  {
    "text": "enable the plug-in so this is another like you can have external or clock in",
    "start": "1789539",
    "end": "1794549"
  },
  {
    "text": "or you can have you know plugins that can do does the authentication for you so if we have the key earth plugin right",
    "start": "1794549",
    "end": "1800429"
  },
  {
    "text": "so every time you make a request we will ask for any PRI key if the API key is",
    "start": "1800429",
    "end": "1806519"
  },
  {
    "text": "not present then Kong will reject the ret request so we created this plug-in and now we will annotate the service",
    "start": "1806519",
    "end": "1813799"
  },
  {
    "text": "HTTP bin with this plug-in so you see the last time I annotated a name and",
    "start": "1813799",
    "end": "1819179"
  },
  {
    "text": "ingress resource well this time I am annotating a service the reason being no",
    "start": "1819179",
    "end": "1825329"
  },
  {
    "text": "matter which ingress role it the request comes from I want the service to be always authenticated right so any time",
    "start": "1825329",
    "end": "1832499"
  },
  {
    "text": "if we have defined HTTP bin dot you know 42 calm but if we also had HTTP dot you",
    "start": "1832499",
    "end": "1838679"
  },
  {
    "text": "know 42 dot-com both require and these are in separate ingress rules both will have authentication enabled so now I",
    "start": "1838679",
    "end": "1847259"
  },
  {
    "text": "enable that now let's send a request to",
    "start": "1847259",
    "end": "1852379"
  },
  {
    "text": "http bin and you see no API cough key",
    "start": "1852379",
    "end": "1857429"
  },
  {
    "text": "found in request the response comes from Kong and it's a is 401 unauthorized so",
    "start": "1857429",
    "end": "1863969"
  },
  {
    "text": "now nobody can actually add the service so if we want to get access",
    "start": "1863969",
    "end": "1869610"
  },
  {
    "text": "what the way we do it and you can also use YDC or LDAP or if you want you know if you want to authenticate against an",
    "start": "1869610",
    "end": "1876390"
  },
  {
    "text": "identity provider that you are running Rock all that is also possible so what I",
    "start": "1876390",
    "end": "1882270"
  },
  {
    "text": "am going to do here is I'm going to use two other custom resource definitions that we have so I'm going to create a",
    "start": "1882270",
    "end": "1888720"
  },
  {
    "text": "user named 'harry and I'm going to associate credential with that user so I",
    "start": "1888720",
    "end": "1894600"
  },
  {
    "text": "just created a consumer Harry and this is specific implementation and then I",
    "start": "1894600",
    "end": "1901620"
  },
  {
    "text": "associate that consumer Harry with an API key right so the type of the authen",
    "start": "1901620",
    "end": "1906900"
  },
  {
    "text": "credential is key odd and the key here being super secret so this is an API key you know if you are using any public API",
    "start": "1906900",
    "end": "1913050"
  },
  {
    "text": "is they usually have or three API key based authentication variable so now I'm",
    "start": "1913050",
    "end": "1920730"
  },
  {
    "text": "going to go ahead and make the request using this API key so you can see you",
    "start": "1920730",
    "end": "1926820"
  },
  {
    "text": "know we got the response back here so it responded back we get the headers back",
    "start": "1926820",
    "end": "1932490"
  },
  {
    "text": "here so let's fumble with the API key and we",
    "start": "1932490",
    "end": "1939360"
  },
  {
    "text": "will see that invalid authentication credential so Congress doing the authentication for us we are we did not",
    "start": "1939360",
    "end": "1945570"
  },
  {
    "text": "actually edit HTP pin at all we have not touched it HTTP pin at all now you have now let's",
    "start": "1945570",
    "end": "1954480"
  },
  {
    "text": "let's do another popular plug-in which is called rate limiting rate rate",
    "start": "1954480",
    "end": "1959580"
  },
  {
    "text": "limiting is an extremely popular use case for Kong and here we are doing something a little different so what",
    "start": "1959580",
    "end": "1965280"
  },
  {
    "text": "here we are doing here is we are adding a label called global and we are setting that to true what this means is this",
    "start": "1965280",
    "end": "1971280"
  },
  {
    "text": "this plug-in will always execute no matter where the request comes from right so even if we click any any",
    "start": "1971280",
    "end": "1978210"
  },
  {
    "text": "ingress rule it comes from or it will be matched and we'll allow five requests",
    "start": "1978210",
    "end": "1983670"
  },
  {
    "text": "per minute and we'll have a policy of local policy is something that you can dig deeper you can have radius to have",
    "start": "1983670",
    "end": "1990360"
  },
  {
    "text": "you know radius based rate limiting and those things so those are more like implementation details so we do this",
    "start": "1990360",
    "end": "1999050"
  },
  {
    "text": "let's try to send a request no API key",
    "start": "1999050",
    "end": "2004210"
  },
  {
    "text": "found obviously so we super secret key",
    "start": "2004210",
    "end": "2013169"
  },
  {
    "text": "so now we sent a request to HTTP bin and we can see kong injected rate limit",
    "start": "2014100",
    "end": "2021550"
  },
  {
    "text": "header right so you have also the other plugin that we had enabled before is",
    "start": "2021550",
    "end": "2026890"
  },
  {
    "text": "executing authentication is also going on and kong is also doing rate limiting",
    "start": "2026890",
    "end": "2032230"
  },
  {
    "text": "now so right so we are allowing five requests per minute and we can make four more requests right and if we execute",
    "start": "2032230",
    "end": "2040900"
  },
  {
    "text": "this thing so let's do even this one so if we send a request to the other",
    "start": "2040900",
    "end": "2049408"
  },
  {
    "text": "service we will see that you still get rate limited right so no matter which",
    "start": "2049409",
    "end": "2055780"
  },
  {
    "text": "service you are accessing you are being rate limited now here the rate limit was four again because the minute rolled",
    "start": "2055780",
    "end": "2061510"
  },
  {
    "text": "around so it's a minute Behe's root rate limiting so that's why it rolled around now if you keep on executing this",
    "start": "2061510",
    "end": "2068710"
  },
  {
    "text": "request a few times you can make one more request you can not make any request and now you get four too many",
    "start": "2068710",
    "end": "2075550"
  },
  {
    "text": "requests of 4:29 rate so you're being denied access to the service if you make",
    "start": "2075550",
    "end": "2081669"
  },
  {
    "text": "more than fire request so you can configure this again to be hourly per second or whatever rate you have and",
    "start": "2081669",
    "end": "2086919"
  },
  {
    "text": "then you know maybe you want authentication enabled for rate limits maybe not all that's also configurable",
    "start": "2086919",
    "end": "2093580"
  },
  {
    "text": "as well so that gives you a rate",
    "start": "2093580",
    "end": "2098650"
  },
  {
    "text": "limiting we've got authentication enabled as well so we have already secured of service you know so you're",
    "start": "2098650",
    "end": "2104230"
  },
  {
    "text": "only writing or API and Kong is doing the rest for us and this can be done you know obviously across multiple services",
    "start": "2104230",
    "end": "2110940"
  },
  {
    "text": "multiple namespaces and whatnot next what we are going to do is show of",
    "start": "2110940",
    "end": "2117790"
  },
  {
    "text": "another plug-in which is also pretty popular we recently open sourced this one is the",
    "start": "2117790",
    "end": "2122920"
  },
  {
    "text": "proxy cache so it's basically response caching and we will also enable this at",
    "start": "2122920",
    "end": "2128350"
  },
  {
    "text": "the global level so by global level you don't need to associate with a specific ingre specific service comm will execute that",
    "start": "2128350",
    "end": "2135099"
  },
  {
    "text": "for every request that flows through it right and if you want to enable it on for a specific ingress rule you can do",
    "start": "2135099",
    "end": "2140920"
  },
  {
    "text": "that as well so it's pretty flexible based on you know each team's requirement you can configure them and",
    "start": "2140920",
    "end": "2146109"
  },
  {
    "text": "have them configure it or maybe Rob's people to do it so let's go ahead and now try to access in point now we have",
    "start": "2146109",
    "end": "2157630"
  },
  {
    "text": "got a few things going on here so we have the rate limit of obviously that's going on we also have got X cache key",
    "start": "2157630",
    "end": "2165400"
  },
  {
    "text": "annex my bypass key cache status so here we see the cache status is bypass the",
    "start": "2165400",
    "end": "2171609"
  },
  {
    "text": "reason being by default Kong will not cache HTML that's coming from the",
    "start": "2171609",
    "end": "2177369"
  },
  {
    "text": "backend but if were to be I think only do application JSON that's also configurable obviously like what kind of",
    "start": "2177369",
    "end": "2183910"
  },
  {
    "text": "content types do you want to cache so let's do let's do headers so if we do",
    "start": "2183910",
    "end": "2191980"
  },
  {
    "text": "headers so we can pick the headers but we see that the cache status is Miss",
    "start": "2191980",
    "end": "2196990"
  },
  {
    "text": "here because it was the first request that'll be executed and we are caching things in memory right we can also cache",
    "start": "2196990",
    "end": "2203170"
  },
  {
    "text": "things in Redis and you know if you have multiple traffic multiple services going",
    "start": "2203170",
    "end": "2208299"
  },
  {
    "text": "through you can cache based on selectively as well so we see the caches",
    "start": "2208299",
    "end": "2213849"
  },
  {
    "text": "hit I think if I add another header here yeah so you see so in the last request",
    "start": "2213849",
    "end": "2222519"
  },
  {
    "text": "what what we did we got a cache hit right and then the next request that I",
    "start": "2222519",
    "end": "2227829"
  },
  {
    "text": "sent I actually changed the header rate I added a full bar header but that didn't appear in this response so if you",
    "start": "2227829",
    "end": "2234640"
  },
  {
    "text": "enable caching blindly this is a wrong response right the services Sydney is a response is being cast which should not",
    "start": "2234640",
    "end": "2240730"
  },
  {
    "text": "be cached so this is how I mean if there are n points that you would like to",
    "start": "2240730",
    "end": "2245920"
  },
  {
    "text": "cache you know which are sending back metadata so that come results to the cached info when your service is not",
    "start": "2245920",
    "end": "2251710"
  },
  {
    "text": "available you can do those magics easy yeah so that's what we are doing we are",
    "start": "2251710",
    "end": "2257619"
  },
  {
    "text": "caching we are rate limiting we are we have you know authentication enabled",
    "start": "2257619",
    "end": "2263049"
  },
  {
    "text": "here so that's all that I have for demo right now let's see there are a lot of other",
    "start": "2263049",
    "end": "2268930"
  },
  {
    "text": "features that exist and those are specific to Cuba notice as well so we",
    "start": "2268930",
    "end": "2274630"
  },
  {
    "text": "integrate heavily with uh no Prometheus we integrate with open tracing as well so you can use those to you know get",
    "start": "2274630",
    "end": "2281290"
  },
  {
    "text": "matrix you know every request this that flows into your cluster you you have a Cuban at its dashboard and you don't have to instrument your",
    "start": "2281290",
    "end": "2287710"
  },
  {
    "text": "services you know you don't have to implement Prometheus matrix for in each and every service that you need you can just get that out of Kong for you and",
    "start": "2287710",
    "end": "2294400"
  },
  {
    "text": "obviously we will have like more black box matrix meaning you know we'll have sir you know request latency is",
    "start": "2294400",
    "end": "2300579"
  },
  {
    "text": "bandwidth being consumed error rates you know based on HTTP requests or maybe TCP",
    "start": "2300579",
    "end": "2307690"
  },
  {
    "text": "timeouts or if you have G RPC then you have our PC error rates so con can do",
    "start": "2307690",
    "end": "2314079"
  },
  {
    "text": "all that we also integrate heavily with you know cert managed on an external DNS I am using external DNS right now so if",
    "start": "2314079",
    "end": "2320140"
  },
  {
    "text": "you create any DNS entry if I create an interest resource it actually automatically populates my DNS server",
    "start": "2320140",
    "end": "2326740"
  },
  {
    "text": "and then you know as you could see I created that HTTP pin rule and it automatically created an ad called for",
    "start": "2326740",
    "end": "2334690"
  },
  {
    "text": "it we also do a lot of you know route by header and HTTP method if you won't like you know more fine-grained routing we do",
    "start": "2334690",
    "end": "2341560"
  },
  {
    "text": "not we introduced something called Kong ingress which allows you to you know tweet load-balancing configurations",
    "start": "2341560",
    "end": "2347460"
  },
  {
    "text": "other you know health checking in circuit breakers are also possible so",
    "start": "2347460",
    "end": "2352720"
  },
  {
    "text": "that all can be done at Kong Kong itself and we have a very strong roadmap so",
    "start": "2352720",
    "end": "2359140"
  },
  {
    "text": "Kong currently actually can proxy GRP see it can proxy you know TCP TLS issue",
    "start": "2359140",
    "end": "2364470"
  },
  {
    "text": "as well so if you have like a custom protocol and you just want to do TLS termination SATCOM can do that for you",
    "start": "2364470",
    "end": "2371109"
  },
  {
    "text": "if you have a custom protocol you can do protocol parsing at Kong can do that G RPC routing is just recently landed with",
    "start": "2371109",
    "end": "2379270"
  },
  {
    "text": "1.3 so you can you know expose your G RPC service Viacom and Cong will do the",
    "start": "2379270",
    "end": "2385270"
  },
  {
    "text": "routing for you you can do transformation logging again again the whole set of plugins are available for PC as well we're coming up with a new",
    "start": "2385270",
    "end": "2392800"
  },
  {
    "text": "release next month and that's why we are getting compatible with East you as well so you can do you know mutual",
    "start": "2392800",
    "end": "2398710"
  },
  {
    "text": "authentication we internally in your cluster and Kong can be the ingress point so Congress responsible for not Saab traffic any",
    "start": "2398710",
    "end": "2406630"
  },
  {
    "text": "traffic that is in coming into your cluster any traffic that is flowing inside your cluster that can be handled",
    "start": "2406630",
    "end": "2412720"
  },
  {
    "text": "by a service mesh which can be East your link ready and Kong service mesh as well",
    "start": "2412720",
    "end": "2418600"
  },
  {
    "text": "upstream TLS or something coming up as well which will allow you to encrypt traffic and you know have mutual",
    "start": "2418600",
    "end": "2425560"
  },
  {
    "text": "authentication between Kong and service you are running inside Cuba notice which is a requirement by some of our users",
    "start": "2425560",
    "end": "2431650"
  },
  {
    "text": "and we have a few other admission web box and making it all the more easier to",
    "start": "2431650",
    "end": "2437770"
  },
  {
    "text": "use so that's that's the roadmap that we have for this year and that's it that's",
    "start": "2437770",
    "end": "2443350"
  },
  {
    "text": "all that I have for this presentation installation is pretty simple it's open",
    "start": "2443350",
    "end": "2448750"
  },
  {
    "text": "source feel free to try it out we've been getting a lot of feedback from the community and adoption so very happy",
    "start": "2448750",
    "end": "2455320"
  },
  {
    "text": "with that but if you would like just go to the github repository is the whole slew of dogs this week we have published",
    "start": "2455320",
    "end": "2462160"
  },
  {
    "text": "a lot of guides on how to do these things that I showed you in the demo so certainly do check that out and that's",
    "start": "2462160",
    "end": "2468940"
  },
  {
    "text": "it that's all that I thank you the data",
    "start": "2468940",
    "end": "2477369"
  },
  {
    "text": "maybe you can open the floor for questions back to you Caitlyn yeah we",
    "start": "2477369",
    "end": "2484540"
  },
  {
    "text": "have a lot of questions coming in so thank you Harry for a great presentation and if you have questions please drop them in the Q&A tab at the bottom of",
    "start": "2484540",
    "end": "2491050"
  },
  {
    "text": "your screen I will say that we do have a lot coming in so if we don't get to them in the next 15 minutes we do have a Kong",
    "start": "2491050",
    "end": "2497260"
  },
  {
    "text": "slack channel on the kubernetes slack so please join us there you want to dive deeper in debt and I also will just say",
    "start": "2497260",
    "end": "2505720"
  },
  {
    "text": "that we have a few events coming up later this year so we have clung summit coming up October 2nd and 3rd in San",
    "start": "2505720",
    "end": "2511869"
  },
  {
    "text": "Francisco we have ghost and great Kong specific workshop sessions as well as more sessions around cloud native",
    "start": "2511869",
    "end": "2519910"
  },
  {
    "text": "technologies in the community so there is a code here that we're offering the peer interested in joining us if you go",
    "start": "2519910",
    "end": "2527200"
  },
  {
    "text": "the next one",
    "start": "2527200",
    "end": "2529800"
  },
  {
    "text": "we will be a cube cotton cloud made of cotton San Diego this would be our just cute con today so we'll have a day zero",
    "start": "2533140",
    "end": "2540220"
  },
  {
    "text": "event there we will cover best service mesh content so the link to our Colo",
    "start": "2540220",
    "end": "2546190"
  },
  {
    "text": "isn't up yet but I will add that to the slides once it in and we'll also have a booth there so it's not by and say hi",
    "start": "2546190",
    "end": "2553500"
  },
  {
    "text": "these questions so going back to the demo I want to I'm gonna start here just make sure we clarified many points so",
    "start": "2553860",
    "end": "2560140"
  },
  {
    "text": "was there any Kong controller running a master node or how does it accept the yellow requests yeah that's a good",
    "start": "2560140",
    "end": "2567220"
  },
  {
    "text": "question so we do not have a controller actually running inside the master node",
    "start": "2567220",
    "end": "2572230"
  },
  {
    "text": "what happens is cube City and you get odd Kong what we have is we have two",
    "start": "2572230",
    "end": "2582550"
  },
  {
    "text": "pods running here so and we we we have a controller running inside one in the we",
    "start": "2582550",
    "end": "2588730"
  },
  {
    "text": "have one pod running with two containers and on all the containers is a controller so we do not need anything to in the master at all and the controller",
    "start": "2588730",
    "end": "2594760"
  },
  {
    "text": "will talk to the master node the API server and get those ingress yeah means those yeah means are stored inside yet",
    "start": "2594760",
    "end": "2599860"
  },
  {
    "text": "CD that's Cuban it is object store so you don't need to configure anything special inside your Cuban it is control",
    "start": "2599860",
    "end": "2606160"
  },
  {
    "text": "plane at all everything just works if you are by just installing this you",
    "start": "2606160",
    "end": "2611350"
  },
  {
    "text": "don't need any any configuration that you know cubes cubelets or Kong a cube a",
    "start": "2611350",
    "end": "2617380"
  },
  {
    "text": "DM or in the English you didn't you",
    "start": "2617380",
    "end": "2625870"
  },
  {
    "text": "native inverse with interest class hung how is that possible you didn't annotate",
    "start": "2625870",
    "end": "2631630"
  },
  {
    "text": "with ingress star yeah in which class yeah so by default if you don't annotate",
    "start": "2631630",
    "end": "2639040"
  },
  {
    "text": "an ingress class then any ingress controller will accept that that",
    "start": "2639040",
    "end": "2644080"
  },
  {
    "text": "ingress and you know configure it if you have let's say you know if you have GCE like GCP ingress running and you have",
    "start": "2644080",
    "end": "2650920"
  },
  {
    "text": "kong running and your another controller running then if you annotate it with conch only then that would be accepted",
    "start": "2650920",
    "end": "2656080"
  },
  {
    "text": "so by default if there is no annotation present we will accept that rule but if you want to you know segregate those",
    "start": "2656080",
    "end": "2662650"
  },
  {
    "text": "ingress rules for different controllers you can specify those classes or maybe you can run multi Kong ingress controls as well one for",
    "start": "2662650",
    "end": "2669430"
  },
  {
    "text": "internal traffic one for external traffic or you know for different business units if that's your use case and then annotate of those classes and",
    "start": "2669430",
    "end": "2676570"
  },
  {
    "text": "then you can segregate that so that's a good question if there is only one load",
    "start": "2676570",
    "end": "2684550"
  },
  {
    "text": "balancer how do you avoid a single point of failure uh-huh that's okay yeah so",
    "start": "2684550",
    "end": "2690750"
  },
  {
    "text": "the load balancer that we are using here in case of we're using gke so if you see",
    "start": "2690750",
    "end": "2697840"
  },
  {
    "text": "we have only one IP address right so if we go back to the demo get service comm",
    "start": "2697840",
    "end": "2705220"
  },
  {
    "text": "we see that there is only one IP address what is happening under the hood as",
    "start": "2705220",
    "end": "2710260"
  },
  {
    "text": "Google is provisioning a global load balancer which uses anycast so even",
    "start": "2710260",
    "end": "2715390"
  },
  {
    "text": "though there is only one external IP address this is actually being handled by a array of machines right so Google",
    "start": "2715390",
    "end": "2721810"
  },
  {
    "text": "so this is a managed load balancer by Google so and it comes with a promise of",
    "start": "2721810",
    "end": "2727090"
  },
  {
    "text": "you know if a single machine goes down it won't fail so that's why it's not a single point of failure and same with",
    "start": "2727090",
    "end": "2733030"
  },
  {
    "text": "com you should probably run multiple instances of Kong pods so and these pods are stateless so if even if one of those",
    "start": "2733030",
    "end": "2739630"
  },
  {
    "text": "dies you don't have a failure so if you're running into this inside let's",
    "start": "2739630",
    "end": "2745600"
  },
  {
    "text": "say Amazon's eks I think they call it e KS yeah Amazon's load balancer are usually are",
    "start": "2745600",
    "end": "2751600"
  },
  {
    "text": "provisioned with two IP addresses right so that's for a little bit of failover so you can and those IP addresses change",
    "start": "2751600",
    "end": "2758500"
  },
  {
    "text": "and you get installed a cname so in that case you have two of those so it really depends on specific implementations of",
    "start": "2758500",
    "end": "2766780"
  },
  {
    "text": "you know load balancer service so any load balance of service has different",
    "start": "2766780",
    "end": "2771850"
  },
  {
    "text": "implementation based on the cloud providers that you are using or if you are in bare metal you might not actually have those so yeah I hope that answers",
    "start": "2771850",
    "end": "2781360"
  },
  {
    "text": "that question is there a limit to how",
    "start": "2781360",
    "end": "2787150"
  },
  {
    "text": "many ingress resources a comm controller could manage that's a very good question",
    "start": "2787150",
    "end": "2793090"
  },
  {
    "text": "I've tested it fit about 500 resources and this was for",
    "start": "2793090",
    "end": "2800320"
  },
  {
    "text": "like a test inside know one of the liabilities that we're using that we are doing pagination and those things",
    "start": "2800320",
    "end": "2805860"
  },
  {
    "text": "correctly if you are using a lot lot of ingres resources that's not a problem",
    "start": "2805860",
    "end": "2811660"
  },
  {
    "text": "the Cong interested easily be able to handle those if you are using it's not",
    "start": "2811660",
    "end": "2817420"
  },
  {
    "text": "recommended that you use a lot of consumers and credentials but ingress",
    "start": "2817420",
    "end": "2822700"
  },
  {
    "text": "resources creating a lot of those and a lot of plugins should not be a problem if you go like let's say beyond thousand",
    "start": "2822700",
    "end": "2829000"
  },
  {
    "text": "increase resources you you'll have to tweak certain Kong settings so you'll have to cute a little bit of memory and",
    "start": "2829000",
    "end": "2835090"
  },
  {
    "text": "this is really depending on you know your traffic patterns so you tweak them as you go but by default I think it it's",
    "start": "2835090",
    "end": "2842260"
  },
  {
    "text": "there's no hard limit that we have imposed or that we have run into yet so",
    "start": "2842260",
    "end": "2847540"
  },
  {
    "text": "maybe if you find one please do report back work if there is more than one",
    "start": "2847540",
    "end": "2857200"
  },
  {
    "text": "ingress controller installed in kubernetes for example nginx and Kong yeah so that ties back against into the",
    "start": "2857200",
    "end": "2865750"
  },
  {
    "text": "same ingress tat class annotation discussion right so what you can do is",
    "start": "2865750",
    "end": "2871300"
  },
  {
    "text": "you can annotate the certain ingress rules will be advocated with the ingress class of in genetics and then sultan can",
    "start": "2871300",
    "end": "2878200"
  },
  {
    "text": "be annotated with ingress class of kong right and this class itself is also configurable as well so you'll annotate",
    "start": "2878200",
    "end": "2884320"
  },
  {
    "text": "these and then those like the ingress rules annotated with that particular ingress type only those will be",
    "start": "2884320",
    "end": "2890920"
  },
  {
    "text": "satisfied with by kong right so you definitely do not want it to happen that",
    "start": "2890920",
    "end": "2896790"
  },
  {
    "text": "you have to ingress controllers fighting for the same ingress right if you if we",
    "start": "2896790",
    "end": "2902560"
  },
  {
    "text": "see here cube CTL ok ingress we will see that the address of this is updated with",
    "start": "2902560",
    "end": "2908770"
  },
  {
    "text": "the address of the load balancer right so if you have to load two ingress controllers running and they constantly",
    "start": "2908770",
    "end": "2915430"
  },
  {
    "text": "keep on over changing your address and keep on fighting to satisfy those resources which might result into",
    "start": "2915430",
    "end": "2920890"
  },
  {
    "text": "conflict so with with increased or class annotations which is very widely adopted that's how you would handle multiple",
    "start": "2920890",
    "end": "2926920"
  },
  {
    "text": "interest controllers of the same kind or different kinds",
    "start": "2926920",
    "end": "2932430"
  },
  {
    "text": "and then we do have a request if you could maybe switch back to that slide with the links on it",
    "start": "2932840",
    "end": "2938760"
  },
  {
    "text": "sure [Music] we have a lot of questions here about",
    "start": "2938760",
    "end": "2944760"
  },
  {
    "text": "comparison to the nginx ingress controller why would you recommend the",
    "start": "2944760",
    "end": "2950790"
  },
  {
    "text": "nginx yeah so I mean I would really like obviously",
    "start": "2950790",
    "end": "2957420"
  },
  {
    "text": "I have my bias here but I would rather ask you to go to the nginx English controller documentation and then go to",
    "start": "2957420",
    "end": "2963210"
  },
  {
    "text": "kongstrup citrate so both of them are powered by the same underlying stock right engine X on top of openness T and",
    "start": "2963210",
    "end": "2968670"
  },
  {
    "text": "then you have Kong and engine X has directly open resti so the way a lot of libraries that are used even in the",
    "start": "2968670",
    "end": "2975450"
  },
  {
    "text": "engine X ingress are shared right both of me try to make engine X as dynamic as",
    "start": "2975450",
    "end": "2980610"
  },
  {
    "text": "possible with Kong what you get is a lot of other enhancements that don't come",
    "start": "2980610",
    "end": "2985620"
  },
  {
    "text": "with out of the box with the engine X ingress you have this plug-in architecture so you can do authentication you can do just caching",
    "start": "2985620",
    "end": "2992460"
  },
  {
    "text": "and these things and these are all customizable right so if certain plugin doesn't fit your need you can always",
    "start": "2992460",
    "end": "2998730"
  },
  {
    "text": "tweak those or if you have some you know a specific implementation that you want",
    "start": "2998730",
    "end": "3004490"
  },
  {
    "text": "to do inside you know new or you can write your own custom plugin we also have server let's plug in so you can",
    "start": "3004490",
    "end": "3009710"
  },
  {
    "text": "execute blob of Lua code inside comm so for every request that goes through your",
    "start": "3009710",
    "end": "3015290"
  },
  {
    "text": "building say P I and you want to do some special magic you you can write up just a small bit of Lua script put that",
    "start": "3015290",
    "end": "3022430"
  },
  {
    "text": "inside Kong and Kong will execute that so that plug-in that plug-in based architecture gives you a lot and then",
    "start": "3022430",
    "end": "3028760"
  },
  {
    "text": "comes to a lot of load balancing and TLS management right so you can do a lot of",
    "start": "3028760",
    "end": "3034340"
  },
  {
    "text": "things like you know upstream TLS downstream TLS mutual TLS if that need need it so those things are much much",
    "start": "3034340",
    "end": "3041990"
  },
  {
    "text": "much easier for you to run that also engine X ingress is something very very specific to kubernetes so if you are",
    "start": "3041990",
    "end": "3048380"
  },
  {
    "text": "adopting Kong into this controller and let's say your certain part of your organization does not run in Cuba notice",
    "start": "3048380",
    "end": "3054680"
  },
  {
    "text": "you can still they can still run Kong and you can have a lot of knowledge here a lot of transparency",
    "start": "3054680",
    "end": "3060590"
  },
  {
    "text": "another advantage if you were to phase out kubernetes in future you can just",
    "start": "3060590",
    "end": "3065750"
  },
  {
    "text": "there is a small command for dumping the ingress controller configuration you can just export that and import that in a",
    "start": "3065750",
    "end": "3072769"
  },
  {
    "text": "different environment and things would work so you won't have to again start from scratch rebuilding that environment",
    "start": "3072769",
    "end": "3078559"
  },
  {
    "text": "so these are the things which make it pretty ability extensible but also very",
    "start": "3078559",
    "end": "3084049"
  },
  {
    "text": "much compatible with other other orchestration platforms that you have a",
    "start": "3084049",
    "end": "3090529"
  },
  {
    "text": "lot of like the community around it the plug-in community is huge so that you",
    "start": "3090529",
    "end": "3096589"
  },
  {
    "text": "can take that advantage this variation",
    "start": "3096589",
    "end": "3108710"
  },
  {
    "text": "here so the idea would be to apply rate limiting on user tokens and that will share the same Kong consumer yeah yeah",
    "start": "3108710",
    "end": "3115849"
  },
  {
    "text": "so you can so if you I don't know if you saw it or not in the demo fever limiting actually by consumer so you can",
    "start": "3115849",
    "end": "3121759"
  },
  {
    "text": "definitely do that so you know based on authentication based on you know if you have a DC authentication you can you",
    "start": "3121759",
    "end": "3127640"
  },
  {
    "text": "know have that consumer created automatically in Kong if you're doing API key authentication for every consumer you can have a rate limit you",
    "start": "3127640",
    "end": "3133849"
  },
  {
    "text": "can also have a different rate limit for every consumer as well so you know maybe you have certain consumers are who are",
    "start": "3133849",
    "end": "3138950"
  },
  {
    "text": "paying you more you give them higher rate limit and who are paying you let's give them a lower limit or you can have",
    "start": "3138950",
    "end": "3144109"
  },
  {
    "text": "a uniform limit across all the consumers as well or you can have exceptions you know so for every four HTTP min service",
    "start": "3144109",
    "end": "3150710"
  },
  {
    "text": "I have X rate limit file for my Billings API have vile appropriate limits all",
    "start": "3150710",
    "end": "3156619"
  },
  {
    "text": "that is pretty configurable out-of-the-box can women even be applied",
    "start": "3156619",
    "end": "3167269"
  },
  {
    "text": "in an origin policy base for example by origin IPS for gin gee-gee own localized",
    "start": "3167269",
    "end": "3172339"
  },
  {
    "text": "I don't think that's possible I do okay so that might be possible with if you do",
    "start": "3172339",
    "end": "3179029"
  },
  {
    "text": "header based routing so you know based on the Ori origin hider you you change your request or response path or",
    "start": "3179029",
    "end": "3184730"
  },
  {
    "text": "patterns you can do that but this should be something very very easily possible with a small patch right you can easily",
    "start": "3184730",
    "end": "3191029"
  },
  {
    "text": "do that it's I'm not too sure if it's possible out-of-the-box but you might have to write like a small",
    "start": "3191029",
    "end": "3196519"
  },
  {
    "text": "newer snippet I do that",
    "start": "3196519",
    "end": "3199569"
  },
  {
    "text": "and then it's calm available as an operator so the good question so we are",
    "start": "3203470",
    "end": "3209630"
  },
  {
    "text": "trying to make kong easier and more and more easier to run there is a conch operator that is more like an alpha",
    "start": "3209630",
    "end": "3214820"
  },
  {
    "text": "stage operator and trying to put in some resources into that so definitely check that out the link there would be kong",
    "start": "3214820",
    "end": "3222410"
  },
  {
    "text": "slash kong operator on github so you can go to get about comm / kong slash Kong",
    "start": "3222410",
    "end": "3227900"
  },
  {
    "text": "operator you can check that out we have a help chart available as well so that that will to install that and we are",
    "start": "3227900",
    "end": "3235430"
  },
  {
    "text": "also planning to do not customized support as well customize is something",
    "start": "3235430",
    "end": "3240980"
  },
  {
    "text": "that is becoming pretty popular as well",
    "start": "3240980",
    "end": "3244450"
  },
  {
    "text": "plan to go that way in the future so the current demo that we ran is DB less actually so we are running it already be",
    "start": "3250450",
    "end": "3258260"
  },
  {
    "text": "less mode that means Kong is not backed by any database you can also install Kong with a database which is the more",
    "start": "3258260",
    "end": "3264610"
  },
  {
    "text": "popular and the more like DB less came out only I think earlier this year with",
    "start": "3264610",
    "end": "3271790"
  },
  {
    "text": "a database also you can manage that so you can have some custom configuration that you want to put manually inside the",
    "start": "3271790",
    "end": "3277790"
  },
  {
    "text": "database you can do that and rest of the configuration in manage my ingress controller very I would recommend you",
    "start": "3277790",
    "end": "3282950"
  },
  {
    "text": "put everything inside cuban it is manifests and that configures the database using the database has some",
    "start": "3282950",
    "end": "3288560"
  },
  {
    "text": "pros and cons and that those are discussed in the in the documentation so ask you to go thats a recommended",
    "start": "3288560",
    "end": "3301100"
  },
  {
    "text": "approach to use authentication plugins and selectively apply them to ingress routes so for example having one service",
    "start": "3301100",
    "end": "3309830"
  },
  {
    "text": "that has some unsecured and some end points and some secured end please yes",
    "start": "3309830",
    "end": "3315080"
  },
  {
    "text": "so you can do that so what you can do the there is you can create one ingress resource which by which applies a plug",
    "start": "3315080",
    "end": "3322520"
  },
  {
    "text": "which secures all the endpoint then you create another and then you know so you",
    "start": "3322520",
    "end": "3327650"
  },
  {
    "text": "annotate that with that authentication plug-in lets say very",
    "start": "3327650",
    "end": "3333000"
  },
  {
    "text": "example you want don't want slash health to be authenticated then you can create another ingress resource which is more",
    "start": "3333000",
    "end": "3338580"
  },
  {
    "text": "specific right so it's a slash service a requires authentication but then slash",
    "start": "3338580",
    "end": "3344490"
  },
  {
    "text": "service a slash health does not require authentication and then you can make it more granular or more general as well so",
    "start": "3344490",
    "end": "3351180"
  },
  {
    "text": "maybe slash service a slash public does not require authentication at all and so you can do that as well",
    "start": "3351180",
    "end": "3356840"
  },
  {
    "text": "that's skirt only possible pretty easily you just have to create another ingress resource you talk a little bit about the",
    "start": "3356840",
    "end": "3368970"
  },
  {
    "text": "difference between Kong and Enterprise Edition sure so yeah conga conga is the",
    "start": "3368970",
    "end": "3376710"
  },
  {
    "text": "open source product and Enterprise Edition is what we sell to our",
    "start": "3376710",
    "end": "3381810"
  },
  {
    "text": "enterprise customers both run on the same runtime so the runtime is not",
    "start": "3381810",
    "end": "3387570"
  },
  {
    "text": "different at all Kong Enterprise ships with more enterprise features so you know if you want you know a nicer UI to",
    "start": "3387570",
    "end": "3395070"
  },
  {
    "text": "manage Kong you want you know developer portal functionalities you want you know",
    "start": "3395070",
    "end": "3400860"
  },
  {
    "text": "arbok accesses inside the Kong a P is itself and that's where enterprise comes",
    "start": "3400860",
    "end": "3406590"
  },
  {
    "text": "in and then we are doing a lot of things around the you know machine learning and how we can help you further manager API",
    "start": "3406590",
    "end": "3414720"
  },
  {
    "text": "is better so since Kong has access to the traffic it can figure out okay what's going",
    "start": "3414720",
    "end": "3420450"
  },
  {
    "text": "wrong or what has recently changed so all those are enterprise features the",
    "start": "3420450",
    "end": "3425550"
  },
  {
    "text": "core routing always remains inside the open source version and the Kong enterprise actually just inherits that",
    "start": "3425550",
    "end": "3431940"
  },
  {
    "text": "and builds on top of it these enterprise features which if yeah that's that's",
    "start": "3431940",
    "end": "3439370"
  },
  {
    "text": "that's the basic gist I work a lot on the open source sites I am doing a really terrible job of explaining what",
    "start": "3439370",
    "end": "3444720"
  },
  {
    "text": "enterprises so yeah just to reinforce everything we've covered here is an open",
    "start": "3444720",
    "end": "3451230"
  },
  {
    "text": "source feature yes yes okay unfortunately part time I know we have",
    "start": "3451230",
    "end": "3457800"
  },
  {
    "text": "more questions that we didn't get to so we will take this offline and get you all answers to those if you want to chat",
    "start": "3457800",
    "end": "3463680"
  },
  {
    "text": "in the meantime again please join us ponds lack the kubernetes slack in the comm channel and thank you all for the great",
    "start": "3463680",
    "end": "3470190"
  },
  {
    "text": "questions and for joining us today again the recording and slides will be online later and we look forward to",
    "start": "3470190",
    "end": "3477150"
  },
  {
    "text": "seeing you at a future scenes webinar thanks everyone thank you have a good",
    "start": "3477150",
    "end": "3482490"
  },
  {
    "text": "good day",
    "start": "3482490",
    "end": "3485000"
  }
]