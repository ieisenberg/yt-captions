[
  {
    "text": "okay thank you for joining us welcome to today's cncf live webinar easy secure",
    "start": "2800",
    "end": "8400"
  },
  {
    "text": "kubernetes authentication with pinniped i'm libby schultz and i'll be monitoring your webinar today i'd like to introduce",
    "start": "8400",
    "end": "15599"
  },
  {
    "text": "our speakers matt moyer and margo crawford both software engineers at vmware",
    "start": "15599",
    "end": "20640"
  },
  {
    "text": "a few housekeeping items before we get started during the webinar you're not able to speak as an attendee but there",
    "start": "20640",
    "end": "26560"
  },
  {
    "text": "is a chat box on the right side of your screen for you to speak up and ask questions",
    "start": "26560",
    "end": "32320"
  },
  {
    "text": "feel free to drop them there and we'll get to as many as we can in addition please also join our cncf",
    "start": "32320",
    "end": "38480"
  },
  {
    "text": "public slack channel that i posted in the chat hashtag cncf-online-program",
    "start": "38480",
    "end": "44000"
  },
  {
    "text": "to continue your conversations later and address any questions we might not get to during the webinar",
    "start": "44000",
    "end": "50719"
  },
  {
    "text": "this is an official webinar of the cncf and as such is subject to the cncf code of conduct please do not add anything to",
    "start": "50719",
    "end": "57360"
  },
  {
    "text": "the chat or questions that would be in violation of that code of conduct and please be respectful of all of your",
    "start": "57360",
    "end": "62719"
  },
  {
    "text": "fellow participants and presenters please also note the recording and slides will be posted later today to the",
    "start": "62719",
    "end": "68880"
  },
  {
    "text": "online programs page at community.cn under online programs they are also",
    "start": "68880",
    "end": "75680"
  },
  {
    "text": "available via your registration link and the recording will also be available",
    "start": "75680",
    "end": "81200"
  },
  {
    "text": "on our online programs youtube playlist on the cncf channel with that i will",
    "start": "81200",
    "end": "87439"
  },
  {
    "text": "hand it over to matt and margo to kick off today's presentation thanks libby i'm going to share a",
    "start": "87439",
    "end": "94240"
  },
  {
    "text": "pre-recorded version of part of our presentation here and then we're going to have plenty of time for questions",
    "start": "94240",
    "end": "99520"
  },
  {
    "text": "afterwards while this is playing one of the benefits is that margo and i while we're presenting in the video",
    "start": "99520",
    "end": "105680"
  },
  {
    "text": "we'll also be answering questions in chat so feel free to drop questions as we go and we'll probably answer some in",
    "start": "105680",
    "end": "111360"
  },
  {
    "text": "line and save some for the end to answer in person",
    "start": "111360",
    "end": "116798"
  },
  {
    "text": "good morning good afternoon good evening my name is matt moyer i'm here to talk to you today about pinafed",
    "start": "125360",
    "end": "133440"
  },
  {
    "text": "i'm here with margo crawford we are engineers at vmware on the penniped team",
    "start": "133440",
    "end": "138640"
  },
  {
    "text": "and today we're going to talk about what the problem is with kubernetes authentication as it stands um what we",
    "start": "138640",
    "end": "145040"
  },
  {
    "text": "built in pinniped how it works how you can use it to enable smooth",
    "start": "145040",
    "end": "150879"
  },
  {
    "text": "authentication on your kubernetes clusters uh and then go into some time for questions",
    "start": "150879",
    "end": "157760"
  },
  {
    "text": "there's really two gaps in the kubernetes authentication user experience that we set out to solve with",
    "start": "157760",
    "end": "162879"
  },
  {
    "text": "pad the first is that even though kubernetes auth is very extensible and there's lots of options they're mostly",
    "start": "162879",
    "end": "168879"
  },
  {
    "text": "all configured with cli flags on the kubernetes api server this means that at best you'll have to restart the api",
    "start": "168879",
    "end": "175280"
  },
  {
    "text": "server anytime you want to change one of them and at worst it means that you won't even have access to those flags because they're managed by your cloud",
    "start": "175280",
    "end": "180720"
  },
  {
    "text": "provider the other gap is that even though kubernetes has all these options it sort",
    "start": "180720",
    "end": "186000"
  },
  {
    "text": "of doesn't come with any opinionated login flow it doesn't come with sort of an end-to-end way to",
    "start": "186000",
    "end": "191360"
  },
  {
    "text": "take an external identity provider and provide a way for users to log into a cluster sort of just gives you the tools",
    "start": "191360",
    "end": "196720"
  },
  {
    "text": "that you can use to build one of those by yourself so piniped takes the options that are existing kubernetes extends",
    "start": "196720",
    "end": "203599"
  },
  {
    "text": "them to have a dynamically reconfigurable and",
    "start": "203599",
    "end": "208640"
  },
  {
    "text": "end-to-end out-of-the-box login flow it's the batteries included for your kubernetes auth experience",
    "start": "208640",
    "end": "214720"
  },
  {
    "text": "so what is penitbed piniped is an open source project we've been building it for a bit over a year now",
    "start": "214720",
    "end": "220720"
  },
  {
    "text": "it enables dynamic configuration of kubernetes authentication this means that you can install it onto any",
    "start": "220720",
    "end": "226319"
  },
  {
    "text": "existing running kubernetes cluster then you can reconfigure it to add or remove different authenticators at runtime",
    "start": "226319",
    "end": "233439"
  },
  {
    "text": "and it provides a better login user experience for coop ctl so you have a coupe config that doesn't",
    "start": "233439",
    "end": "239599"
  },
  {
    "text": "have any hard-coded secrets you can easily add connect with open id and ldap identity providers",
    "start": "239599",
    "end": "246159"
  },
  {
    "text": "and you can have an experience that spans across multiple clusters so you can have a login once in the morning to",
    "start": "246159",
    "end": "252159"
  },
  {
    "text": "your let's say your oidc identity provider and then for the rest of that day you're you're logged in",
    "start": "252159",
    "end": "257280"
  },
  {
    "text": "transparently to all your kubernetes clusters even if you have 10 even if you have 100 or a thousand",
    "start": "257280",
    "end": "262400"
  },
  {
    "text": "everything just works throughout your day so piniped is a project but it works",
    "start": "262400",
    "end": "269120"
  },
  {
    "text": "with any kubernetes cluster we ship pinniped as a core component of some of our commercial products but it was",
    "start": "269120",
    "end": "275520"
  },
  {
    "text": "important for our use cases that it works with any existing kubernetes cluster that a customer has so even if",
    "start": "275520",
    "end": "281280"
  },
  {
    "text": "your cluster is running on google gke azure aks amazon eks or any other",
    "start": "281280",
    "end": "287280"
  },
  {
    "text": "commercial distribution of kubernetes pinpoint should work great as a cluster administrator once you've",
    "start": "287280",
    "end": "293040"
  },
  {
    "text": "installed piniped you'll have coop configs for your users that are super easy to use and all the pinniped",
    "start": "293040",
    "end": "298880"
  },
  {
    "text": "configuration happens via kubernetes native apis so if you have a declarative get ops deployment pipeline you can use",
    "start": "298880",
    "end": "305600"
  },
  {
    "text": "that to manage piniped as well when we built pinniped we envisioned a common deployment scenario something",
    "start": "305600",
    "end": "311360"
  },
  {
    "text": "like this so on the left you have an admin user that installs and operates in kubernetes clusters",
    "start": "311360",
    "end": "317360"
  },
  {
    "text": "they have access to and what we call an admin config that they got when they created each cluster this is typically a",
    "start": "317360",
    "end": "323919"
  },
  {
    "text": "super powerful coop config with some hard-coded secret key and it does not identify any individual user",
    "start": "323919",
    "end": "330560"
  },
  {
    "text": "usually it encodes the system colon masters group so that it even bypasses all our back on the cluster",
    "start": "330560",
    "end": "336240"
  },
  {
    "text": "it's dangerous to keep this around but it's usually necessary to bootstrap the rest of the system and as a failsafe",
    "start": "336240",
    "end": "343520"
  },
  {
    "text": "on the right you have regular users that just want to log into the cluster and deploy applications these might be",
    "start": "343520",
    "end": "348800"
  },
  {
    "text": "developers for example and in a typical organization we expect that even the admin users don't use",
    "start": "348800",
    "end": "354400"
  },
  {
    "text": "their admin level access on a daily basis just when they need to perform low level operations on the cluster",
    "start": "354400",
    "end": "360080"
  },
  {
    "text": "infrastructure so in pinniped the admin user is responsible for installing and",
    "start": "360080",
    "end": "365440"
  },
  {
    "text": "configuring peniped they can set up logins via their enterprise identity provider such as",
    "start": "365440",
    "end": "371039"
  },
  {
    "text": "active directory or something like octa and then they can generate a coupe config for regular users to use and",
    "start": "371039",
    "end": "376880"
  },
  {
    "text": "these piniped based coupe configs are somewhat special they don't contain any credentials for",
    "start": "376880",
    "end": "382400"
  },
  {
    "text": "accessing the cluster and they're not user specific instead they just describe how to connect to the cluster",
    "start": "382400",
    "end": "388880"
  },
  {
    "text": "all users can download and use the exact same config file but when they log in they'll have their",
    "start": "388880",
    "end": "394000"
  },
  {
    "text": "correct individual username and groups from the external identity provider and as an admin this means it's easy to",
    "start": "394000",
    "end": "400319"
  },
  {
    "text": "manage access to the cluster via kubernetes rbac role bindings",
    "start": "400319",
    "end": "405440"
  },
  {
    "text": "input has a few different components that can be deployed independent of each other first up we have the concierge this can",
    "start": "405440",
    "end": "411840"
  },
  {
    "text": "be deployed on any cluster it takes an oidc token and translates it into something that the kubernetes",
    "start": "411840",
    "end": "418000"
  },
  {
    "text": "cluster can process in one of two ways depending on your cluster architecture one is creating an x 509 certificate",
    "start": "418000",
    "end": "424880"
  },
  {
    "text": "that is signed and therefore trusted by the cluster the other is forwarding requests via an impersonation proxy on",
    "start": "424880",
    "end": "430639"
  },
  {
    "text": "behalf of the user next up we have the supervisor which is typically deployed",
    "start": "430639",
    "end": "436400"
  },
  {
    "text": "once on a very trusted cluster it's an oidc server that allows users to authenticate with an external oidc or",
    "start": "436400",
    "end": "443759"
  },
  {
    "text": "ldap provider and possibly other identity providers in the future and issues its own tokens based on user",
    "start": "443759",
    "end": "450639"
  },
  {
    "text": "information from the idp that can be used by the kubernetes clusters",
    "start": "450639",
    "end": "456080"
  },
  {
    "text": "uh the pinniped cli uh used to generate the cube config that can be used by users",
    "start": "456080",
    "end": "463599"
  },
  {
    "text": "and behind the scenes it's also working to make the login experience seamless when users try to keep cuddle commands",
    "start": "463599",
    "end": "470400"
  },
  {
    "text": "one thing we try to ensure with piniped is that tokens are not replayable that is if one cluster is compromised",
    "start": "470400",
    "end": "476240"
  },
  {
    "text": "for any reason that won't mean that users tokens can be stolen from that cluster and reused on any other cluster",
    "start": "476240",
    "end": "483680"
  },
  {
    "text": "that also uses pinped we do pass a token with user information to each cluster but we make them unique",
    "start": "483680",
    "end": "490720"
  },
  {
    "text": "tokens from each other by changing the audience via an rfc",
    "start": "490720",
    "end": "496840"
  },
  {
    "text": "8693 token exchange this happens behind the scenes without the user having to log into each kubernetes cluster",
    "start": "496840",
    "end": "503680"
  },
  {
    "text": "independently so users can still log in once per day to access all of their clusters while being secure",
    "start": "503680",
    "end": "510319"
  },
  {
    "text": "now we'll take a look at this architecture diagram for a pinniped deployment in this case one where the kubernetes control plane is accessible",
    "start": "510319",
    "end": "517440"
  },
  {
    "text": "this is usually the case for self-hosted clusters on the user's first cube cuddle command",
    "start": "517440",
    "end": "522880"
  },
  {
    "text": "the piniped login is triggered via the kubernetes exact plugin and the cli requests a federated login via the",
    "start": "522880",
    "end": "529360"
  },
  {
    "text": "supervisor the pinbed supervisor then prompts the user to log in to their external idp",
    "start": "529360",
    "end": "535680"
  },
  {
    "text": "and using the information from the token or attributes returned from the external idp login the supervisor mints an oadc",
    "start": "535680",
    "end": "542800"
  },
  {
    "text": "token to pass back to the cli the cli turns around and requests a new",
    "start": "542800",
    "end": "548480"
  },
  {
    "text": "second token from the supervisor with the same information but with a cluster-specific audience which the",
    "start": "548480",
    "end": "554800"
  },
  {
    "text": "supervisor means and passes back next the cli will create a credential",
    "start": "554800",
    "end": "560800"
  },
  {
    "text": "request to the pinped concierge's aggregated api using the token it just",
    "start": "560800",
    "end": "565920"
  },
  {
    "text": "received the concierge uses the cluster's signing key from the kubernetes control plane to",
    "start": "565920",
    "end": "572160"
  },
  {
    "text": "create a short-lived certificate for the cluster subsequent kubernetes api requests will",
    "start": "572160",
    "end": "578080"
  },
  {
    "text": "use the short-lived certificate refreshing it as needed next we'll take a look at how the",
    "start": "578080",
    "end": "583360"
  },
  {
    "text": "architecture changes when the kubernetes control plane is not accessible where we use an impersonation proxy this is the",
    "start": "583360",
    "end": "590080"
  },
  {
    "text": "case on many cloud providers kubernetes distributions like gke eks or aks",
    "start": "590080",
    "end": "596640"
  },
  {
    "text": "the first steps are the same as before the initial login happens to the supervisor which means cluster specific",
    "start": "596640",
    "end": "603120"
  },
  {
    "text": "tokens after login to the external idp the piniped cli will still create a",
    "start": "603120",
    "end": "609600"
  },
  {
    "text": "credential request to the pinniped concierge's aggregated api however",
    "start": "609600",
    "end": "615040"
  },
  {
    "text": "the concierge will instead of minting certs that are using the clusters signing key issue",
    "start": "615040",
    "end": "622240"
  },
  {
    "text": "search using its own keys that are not automatically trusted by the cluster requests will include this certificate",
    "start": "622240",
    "end": "629760"
  },
  {
    "text": "and be passed through the pinniped concierge impersonation proxy which uses the cert to construct impersonation",
    "start": "629760",
    "end": "636800"
  },
  {
    "text": "headers so it can pass along the request to the kubernetes api server on behalf",
    "start": "636800",
    "end": "642399"
  },
  {
    "text": "of the user all right now it's time for a demo of how to set up and use all the different",
    "start": "642399",
    "end": "648240"
  },
  {
    "text": "components of pinopen today we're going to be learning how to",
    "start": "648240",
    "end": "653519"
  },
  {
    "text": "set up piniped and as i go through this demo i'll be using lots of examples from our website at pinniped.dev if you ever",
    "start": "653519",
    "end": "660959"
  },
  {
    "text": "want to dive into any more details you can also of course find us on github at vyamora dash tonsu penopen",
    "start": "660959",
    "end": "669200"
  },
  {
    "text": "in the first part we're going to be installing the pinniped concierge on a cluster we'll start by installing some",
    "start": "669200",
    "end": "674480"
  },
  {
    "text": "local command line tools the kubernetes cli kind for making a local cluster",
    "start": "674480",
    "end": "679920"
  },
  {
    "text": "cap from the carville tool suite and the peniped cli we can install all of these quickly with",
    "start": "679920",
    "end": "685279"
  },
  {
    "text": "homebrew on mac os next we're going to use kind to create a locally running kubernetes cluster",
    "start": "685279",
    "end": "691279"
  },
  {
    "text": "we've asked kind to output the initial coupe config to a file called kind admin.yaml this is what we typically",
    "start": "691279",
    "end": "697279"
  },
  {
    "text": "call an admin config in pinniped it's the way that you bootstrap access into a cluster and a good fail safe to keep",
    "start": "697279",
    "end": "703279"
  },
  {
    "text": "around but it contains a hard-coded secret key credential so it can't easily be shared with your",
    "start": "703279",
    "end": "708720"
  },
  {
    "text": "teammates now that our cluster is online we can use cap to install the concierge",
    "start": "708720",
    "end": "715040"
  },
  {
    "text": "you can see that the concierge consists of a bunch of kubernetes resources now that it's up and running we can see",
    "start": "715040",
    "end": "720959"
  },
  {
    "text": "that there are some new pods in the pinniped concierge namespace and there are a number of new kubernetes",
    "start": "720959",
    "end": "726240"
  },
  {
    "text": "apis that we can use to configure and interact with concierge one of those is credential issuer which",
    "start": "726240",
    "end": "732320"
  },
  {
    "text": "lets us inspect the current status of the concierge on this cluster you won't normally need this information",
    "start": "732320",
    "end": "738160"
  },
  {
    "text": "but this is how the piniped command line knows how to connect to the concierge",
    "start": "738160",
    "end": "743720"
  },
  {
    "text": "now that the concierge is installed on our cluster we can configure it to use an openid connect provider for",
    "start": "747200",
    "end": "752320"
  },
  {
    "text": "authentication in this demo we've chosen gitlab because it's free and easy for anyone to get started with but you could also use octa",
    "start": "752320",
    "end": "759760"
  },
  {
    "text": "ping identity azure ad adfs or any other oidc provider",
    "start": "759760",
    "end": "765040"
  },
  {
    "text": "to start we'll need to go into gitlab and register a new oidc client which gitlab calls an application we'll give",
    "start": "765040",
    "end": "771040"
  },
  {
    "text": "our application a name unmark the confidential box because this is a public client set our redirect uri to",
    "start": "771040",
    "end": "776880"
  },
  {
    "text": "match the required settings for the pet cli and ask for the open id and email scopes",
    "start": "776880",
    "end": "785279"
  },
  {
    "text": "once that's created we'll have a client id which we can copy we configure the concierge for gitlab",
    "start": "785519",
    "end": "792480"
  },
  {
    "text": "using the jot authenticator custom resource we've already filled out the rest of this object but we need to set the audience to match the client id we",
    "start": "792480",
    "end": "799279"
  },
  {
    "text": "just generated",
    "start": "799279",
    "end": "801839"
  },
  {
    "text": "once we apply this object to our cluster we can use the git coop config command in the pinipezia li to generate a",
    "start": "805279",
    "end": "810800"
  },
  {
    "text": "piniped-based coupe config in this case we also need to set a few options because we're using git lab",
    "start": "810800",
    "end": "816000"
  },
  {
    "text": "directly with the cli if we take a look at our new coop config we can see that it does not contain any",
    "start": "816000",
    "end": "821680"
  },
  {
    "text": "secrets like the admin coop config had this file is safe to share with your teammates",
    "start": "821680",
    "end": "828360"
  },
  {
    "text": "if we run coop ctl using our coop config we get a browser popup to log in [Music]",
    "start": "828880",
    "end": "836529"
  },
  {
    "text": "but we forgot to add our back permissions let's take a look at what user name we are actually authenticating with we can do that with another piniped",
    "start": "839120",
    "end": "846160"
  },
  {
    "text": "sub command who am i which tells you everything about your current identity let's use that with our admin coop",
    "start": "846160",
    "end": "851680"
  },
  {
    "text": "config first where we can see that our username is kubernetes admin if we run it again with our new config",
    "start": "851680",
    "end": "858320"
  },
  {
    "text": "we can see my email address from gitlab let's add a cluster role binding to give",
    "start": "858320",
    "end": "863360"
  },
  {
    "text": "my new user full access to the cluster",
    "start": "863360",
    "end": "868040"
  },
  {
    "text": "and now we can see that the get pods command works like we wanted",
    "start": "872560",
    "end": "877680"
  },
  {
    "text": "one thing that you might have noticed is that when i ran that command a second time i didn't get a browser pop-up",
    "start": "878320",
    "end": "883360"
  },
  {
    "text": "that's because my temporary session credentials are saved in a local cache file we can take a look at that file and see",
    "start": "883360",
    "end": "889440"
  },
  {
    "text": "my gitlab id token and some other metadata and if we delete that directory and re-run kubectl then we get the",
    "start": "889440",
    "end": "895519"
  },
  {
    "text": "browser pop-up again like you might expect",
    "start": "895519",
    "end": "899839"
  },
  {
    "text": "next we're going to go through the exact same process on a second cluster this time we're going to choose a managed cluster running in google gke",
    "start": "904000",
    "end": "912160"
  },
  {
    "text": "first we'll grab the gke admin cube config we'll set that as our default coupe config for now by setting an",
    "start": "912160",
    "end": "918000"
  },
  {
    "text": "environment variable next we'll use exactly the same command we used before to install the concierge",
    "start": "918000",
    "end": "924800"
  },
  {
    "text": "using cap we'll see the installation happening just as before",
    "start": "924800",
    "end": "930240"
  },
  {
    "text": "if we take a close look at the credential issuer on this new gke cluster we can see that the concierge is operating on a different mode on this",
    "start": "934079",
    "end": "940399"
  },
  {
    "text": "cluster and isn't quite healthy yet that's because pinniped only supports this type of cluster via a special",
    "start": "940399",
    "end": "947199"
  },
  {
    "text": "impersonation proxy mode which takes a moment to initialize in order to safely use gitlab on this",
    "start": "947199",
    "end": "953360"
  },
  {
    "text": "second cluster i need to create a second oadc client in gitlab this is because i need the tokens i'm",
    "start": "953360",
    "end": "959360"
  },
  {
    "text": "passing to each cluster to have a unique audience claim so that they're not replayable between the clusters",
    "start": "959360",
    "end": "965360"
  },
  {
    "text": "if one of your clusters is compromised by an attacker you don't want them to be able to capture one of your tokens and",
    "start": "965360",
    "end": "970480"
  },
  {
    "text": "use it on a different cluster we'll go into gitlab and make a second client just like the one we made for the",
    "start": "970480",
    "end": "976079"
  },
  {
    "text": "kind cluster",
    "start": "976079",
    "end": "979320"
  },
  {
    "text": "we'll run a very similar git coop config command and now we have a gitlab based coupe config for our gke cluster",
    "start": "986000",
    "end": "994360"
  },
  {
    "text": "when we use the new coop config with coop ctl we get a browser pop-up just as before and we run into a similar",
    "start": "996560",
    "end": "1002240"
  },
  {
    "text": "permissions error we'll add my email as a cluster admin again on this cluster",
    "start": "1002240",
    "end": "1010320"
  },
  {
    "text": "now our command succeeds [Music] we set up the second cluster completely independently from the original kind",
    "start": "1010320",
    "end": "1016639"
  },
  {
    "text": "cluster if i clear my local session cache we can see that when i run coop ctl against the kind cluster i initially",
    "start": "1016639",
    "end": "1023120"
  },
  {
    "text": "need to log in with my browser and if i run that same command against the gke cluster i have to do the browser",
    "start": "1023120",
    "end": "1028798"
  },
  {
    "text": "login a second time you can imagine that if i had 10 or 100 clusters all this client setup and all these browser",
    "start": "1028799",
    "end": "1034798"
  },
  {
    "text": "logins might become arduous which is why we also made the pinniped supervisor",
    "start": "1034799",
    "end": "1040798"
  },
  {
    "text": "next we're going to set up the other major peniped component the supervisor we can install it using another cap",
    "start": "1041600",
    "end": "1047280"
  },
  {
    "text": "deploy command",
    "start": "1047280",
    "end": "1050600"
  },
  {
    "text": "now that it's installed we can see some new pods running in the penipet supervisor namespace and we can see that there are more new",
    "start": "1054400",
    "end": "1060640"
  },
  {
    "text": "kubernetes apis for configuring the supervisor i've done a bit of setup ahead of time",
    "start": "1060640",
    "end": "1065679"
  },
  {
    "text": "and registered a dns name demo.peniped.dev pointing at a static ip address on this cluster",
    "start": "1065679",
    "end": "1071840"
  },
  {
    "text": "i've also pre-provisioned a tls certificate from let's encrypt which we'll use to configure secure ingress",
    "start": "1071840",
    "end": "1077760"
  },
  {
    "text": "i have a load balancer service that routes inbound https traffic on our static ip address to the supervisor pod",
    "start": "1077760",
    "end": "1084000"
  },
  {
    "text": "endpoints we'll apply that service object to the cluster and wait for it to be ready",
    "start": "1084000",
    "end": "1090919"
  },
  {
    "text": "now we should expect that something is listening on that port but we still get a strange tls error",
    "start": "1094080",
    "end": "1100080"
  },
  {
    "text": "to configure the supervisor to listen on our new host we use the federation domain custom resource this tells the",
    "start": "1100080",
    "end": "1105919"
  },
  {
    "text": "supervisor to act as an oidc issuer at the given url we set demo.piniped.dev and reference a secret",
    "start": "1105919",
    "end": "1112720"
  },
  {
    "text": "called demo tls that will contain the tls certificate and private key we'll create that secret using the let's",
    "start": "1112720",
    "end": "1118799"
  },
  {
    "text": "encrypt certificate i provisioned earlier now we can see that we get an http not found error when we crawl",
    "start": "1118799",
    "end": "1125360"
  },
  {
    "text": "if we look instead at the oadc discovery url we can see that we have a valid odc issuer endpoint",
    "start": "1125360",
    "end": "1133039"
  },
  {
    "text": "we can also look at the status of our federation domain which shows that it's ready",
    "start": "1133679",
    "end": "1139360"
  },
  {
    "text": "next we'll configure the supervisor to authenticate users via gitlab first we'll need to register a new oidc",
    "start": "1139919",
    "end": "1146080"
  },
  {
    "text": "client this client is slightly different from the ones we generated before it's a confidential client and the",
    "start": "1146080",
    "end": "1152080"
  },
  {
    "text": "redirect uri is hosted under our new demo url this time our client has both a client",
    "start": "1152080",
    "end": "1157440"
  },
  {
    "text": "id and a client secret we configure our client in the supervisor using the oidc identity",
    "start": "1157440",
    "end": "1163919"
  },
  {
    "text": "provider custom resource you can see that this time i've configured the kubernetes username to",
    "start": "1163919",
    "end": "1169120"
  },
  {
    "text": "come from the gitlab nickname field rather than the email address once we apply that object to the cluster",
    "start": "1169120",
    "end": "1175280"
  },
  {
    "text": "we need to also create the reference client credential secret",
    "start": "1175280",
    "end": "1179840"
  },
  {
    "text": "[Music] now we can take a look at the status of our new object and see that it is loaded",
    "start": "1182390",
    "end": "1188880"
  },
  {
    "text": "and ready for logins",
    "start": "1188880",
    "end": "1192440"
  },
  {
    "text": "now that our supervisor is running let's reconfigure our two clusters from before to use it instead of using gitlab",
    "start": "1194320",
    "end": "1199679"
  },
  {
    "text": "directly we can delete the old jot authenticated resources we had on each cluster as well",
    "start": "1199679",
    "end": "1205039"
  },
  {
    "text": "as the cluster role bindings we had from before finally we can delete the first two",
    "start": "1205039",
    "end": "1210080"
  },
  {
    "text": "clients we created in gitlab making sure not to delete the newest one we made for the supervisor",
    "start": "1210080",
    "end": "1216880"
  },
  {
    "text": "we configure the clusters to authenticate via the supervisor using the jot authenticator custom resource",
    "start": "1219120",
    "end": "1224720"
  },
  {
    "text": "if we take a look at the configurations for our kind and gke clusters you'll notice they are very similar the only",
    "start": "1224720",
    "end": "1230400"
  },
  {
    "text": "difference is that each expects a distinct audience if you have a large fleet of clusters it's your responsibility to ensure that",
    "start": "1230400",
    "end": "1236720"
  },
  {
    "text": "they each have a unique name now that our new authenticator configurations are applied to the",
    "start": "1236720",
    "end": "1243039"
  },
  {
    "text": "clusters we can use the pinniped git coop config command to generate new supervisor based coop configs",
    "start": "1243039",
    "end": "1249120"
  },
  {
    "text": "notice this time we don't need to specify very many command line options",
    "start": "1249120",
    "end": "1254240"
  },
  {
    "text": "if i run the whoa command using one of our new coop configs you can see that i get a very similar browser-based login",
    "start": "1255039",
    "end": "1263559"
  },
  {
    "text": "my authenticated user is now based on my gitlab username and includes my gitlab group memberships",
    "start": "1266159",
    "end": "1273280"
  },
  {
    "text": "let's create a cluster role binding against my peniped testing group on each of our clusters",
    "start": "1274480",
    "end": "1280639"
  },
  {
    "text": "now i can easily access both of these clusters with a single browser popup",
    "start": "1281280",
    "end": "1286799"
  },
  {
    "text": "next we're going to show how logins work if you don't have a local web browser this can happen if you're trying to use coupe ctl from a remote linux machine",
    "start": "1288400",
    "end": "1295200"
  },
  {
    "text": "such as an ssh jump post here i'm connected to a linux host running a bare bones debian 11 install",
    "start": "1295200",
    "end": "1302720"
  },
  {
    "text": "i can download the pinniped cli and the kubernetes cli using curl and install them into the system path",
    "start": "1302799",
    "end": "1309600"
  },
  {
    "text": "i see that i have piniped 0.10 and coupe ctl 1.22 so we're ready to go",
    "start": "1309600",
    "end": "1316480"
  },
  {
    "text": "i'll just copy and paste the coop config we had from before into a file on the jump host",
    "start": "1316480",
    "end": "1322559"
  },
  {
    "text": "[Music] and when i use that cube config from within the jump post i get a manual",
    "start": "1323130",
    "end": "1329520"
  },
  {
    "text": "prompt to log in on a different machine you still need a browser to be involved at some point because odc identity",
    "start": "1329520",
    "end": "1335039"
  },
  {
    "text": "providers generally assume browser-based flow [Music]",
    "start": "1335039",
    "end": "1341840"
  },
  {
    "text": "when i open the login url on my host machine i now get prompted to copy and paste the authorization code into the",
    "start": "1341840",
    "end": "1347200"
  },
  {
    "text": "remote login prompt after that i'm authenticated just as before [Music]",
    "start": "1347200",
    "end": "1354469"
  },
  {
    "text": "finally we're going to learn how the supervisor supports ldap based authentication today our ldap server will be jumpcloud",
    "start": "1354480",
    "end": "1361120"
  },
  {
    "text": "where i've created a directory endpoint and some test users and groups first let's delete the gitlab",
    "start": "1361120",
    "end": "1366640"
  },
  {
    "text": "configuration we had from before [Music] instead we'll add an ldap identity",
    "start": "1366640",
    "end": "1372159"
  },
  {
    "text": "provider custom resource this resource describes how to connect and authenticate to the directory how to",
    "start": "1372159",
    "end": "1377840"
  },
  {
    "text": "search for users and groups and how to map their ldap attributes into kubernetes user and group names",
    "start": "1377840",
    "end": "1384480"
  },
  {
    "text": "i'll apply that object and we'll create the secret with our ldap bind credentials",
    "start": "1384480",
    "end": "1389840"
  },
  {
    "text": "just like other pinniped apis i can check the status of the new object to see that it's connected and ready",
    "start": "1390080",
    "end": "1396880"
  },
  {
    "text": "i'll run piniped git goop config again to get an ldap based kubeconfig",
    "start": "1396880",
    "end": "1402320"
  },
  {
    "text": "when i run coop ctl with that coop config i now get a username password prompt",
    "start": "1402320",
    "end": "1407919"
  },
  {
    "text": "we see a familiar permissions error so let's take a look at my current identity",
    "start": "1407919",
    "end": "1413200"
  },
  {
    "text": "we can see that i'm now authenticated as user penny in the group seals and mammals",
    "start": "1413440",
    "end": "1418640"
  },
  {
    "text": "let's give everyone in the skills group access to our cluster and now our command succeeds",
    "start": "1418640",
    "end": "1426320"
  },
  {
    "text": "pinniped is a community project if you're interested in getting involved in the project either as a user a",
    "start": "1428000",
    "end": "1433440"
  },
  {
    "text": "contributor or a future maintainer please reach out we hang out in the pinniped channel in",
    "start": "1433440",
    "end": "1438880"
  },
  {
    "text": "kubernetes slack we hold a public community call twice a month and we're on twitter at project pinniped we'd love",
    "start": "1438880",
    "end": "1445600"
  },
  {
    "text": "to hear your use cases your bug reports feature requests or any ideas you have for the project and of course you're",
    "start": "1445600",
    "end": "1451919"
  },
  {
    "text": "always welcome to file a github issue or start a discussion next i want to show you some of the work",
    "start": "1451919",
    "end": "1457039"
  },
  {
    "text": "we have planned for the project most of these are early stages of planning so if you have specific ideas about how you",
    "start": "1457039",
    "end": "1462240"
  },
  {
    "text": "think they should work or particular features that are important to you let us know this is our roadmap which you can also",
    "start": "1462240",
    "end": "1468080"
  },
  {
    "text": "find in github the first two items are well in progress and should land by the end of this month",
    "start": "1468080",
    "end": "1473279"
  },
  {
    "text": "the first is support for password-based logins to compatible oidc identity providers this is basically pass-through",
    "start": "1473279",
    "end": "1479200"
  },
  {
    "text": "support for the resource owner password credentials grant and it lets you for example use oadc based service accounts",
    "start": "1479200",
    "end": "1485440"
  },
  {
    "text": "for service to service authentication such as from a ccd system if your idp",
    "start": "1485440",
    "end": "1490799"
  },
  {
    "text": "supports that flow the next is specific support for microsoft active directory an active",
    "start": "1490799",
    "end": "1497039"
  },
  {
    "text": "directory already works with our generic ldap support but we've taken a shot at really streamlining the experience",
    "start": "1497039",
    "end": "1502720"
  },
  {
    "text": "because ad has a lot of consistent defaults we can give our apis much better defaults",
    "start": "1502720",
    "end": "1508080"
  },
  {
    "text": "and we can handle some of the ad specific edge cases better than in the generic ldap case",
    "start": "1508080",
    "end": "1513279"
  },
  {
    "text": "the next item on our list is support for multiple idps in the supervisor currently you're only allowed to have",
    "start": "1513279",
    "end": "1518799"
  },
  {
    "text": "exactly one identity provider configured which is somewhat limiting this is a bit of a table sticks feature",
    "start": "1518799",
    "end": "1524720"
  },
  {
    "text": "but i'm really happy with how we've designed it to fit into our apis next up we've got wider concierge",
    "start": "1524720",
    "end": "1530559"
  },
  {
    "text": "cluster support our goal has always been to support any kubernetes cluster but today we fall a bit short of that",
    "start": "1530559",
    "end": "1536640"
  },
  {
    "text": "we're planning to write some new concierge backend strategies so that we can support openshift clusters and we're",
    "start": "1536640",
    "end": "1542159"
  },
  {
    "text": "planning to add a new strategy that uses the short-lived certificate support that was just added in kubernetes 122 and",
    "start": "1542159",
    "end": "1548559"
  },
  {
    "text": "that should be a nice portable option for modern clusters moving forward next up we have what we've been calling",
    "start": "1548559",
    "end": "1554799"
  },
  {
    "text": "identity transforms which is probably the feature on the list that i'm most excited about currently when you connect to an odc or",
    "start": "1554799",
    "end": "1561440"
  },
  {
    "text": "ldap identity provider we basically just let you choose which attribute from the idp maps to the kubernetes username and",
    "start": "1561440",
    "end": "1568080"
  },
  {
    "text": "which attribute maps to the group names we'll still support that mode but we're planning to give you a ton of new",
    "start": "1568080",
    "end": "1573440"
  },
  {
    "text": "customization options by embedding a small scripting engine called starlark into the supervisor this will let you do",
    "start": "1573440",
    "end": "1579760"
  },
  {
    "text": "things like add prefixes to users or groups do custom filtering or even make coarse grained assertions",
    "start": "1579760",
    "end": "1586159"
  },
  {
    "text": "about which users or groups are allowed to use kubernetes next we have extended idp support",
    "start": "1586159",
    "end": "1593120"
  },
  {
    "text": "we already support any oidc or ldap provider but there are a couple of popular",
    "start": "1593120",
    "end": "1598159"
  },
  {
    "text": "providers that either don't work because they're not oidc or don't work perfectly because they use non-standard features",
    "start": "1598159",
    "end": "1604159"
  },
  {
    "text": "of oadc and two examples here are github and google github is not an oidc provider but it",
    "start": "1604159",
    "end": "1610240"
  },
  {
    "text": "has a similar oauth based authentication protocol and google works today but they have a custom groups api and some tricky",
    "start": "1610240",
    "end": "1617440"
  },
  {
    "text": "edge cases related to their hosted domain claim as you can see there are a bunch more",
    "start": "1617440",
    "end": "1623039"
  },
  {
    "text": "items after that we try to stay flexible and agile and how we prioritize features so once again if you have thoughts about",
    "start": "1623039",
    "end": "1629120"
  },
  {
    "text": "anything you see here or you think we're missing something that would make pennipet a perfect fit for your use case",
    "start": "1629120",
    "end": "1634320"
  },
  {
    "text": "let us know thank you all so much for attending uh i also want to thank my teammate margo for co-presenting and thanks to the rest of",
    "start": "1634320",
    "end": "1640880"
  },
  {
    "text": "the team for helping build this awesome tool next we're going to be around a bit for questions",
    "start": "1640880",
    "end": "1647679"
  },
  {
    "text": "hello everyone it's me in person again and margot as well um",
    "start": "1649919",
    "end": "1655679"
  },
  {
    "text": "i will answer questions from the chat um please keep dropping them and uh we'll",
    "start": "1655679",
    "end": "1660720"
  },
  {
    "text": "give some time to think think of questions um i answered one question about key cloak",
    "start": "1660720",
    "end": "1665840"
  },
  {
    "text": "already in the chat the answer there is we haven't tested directly with key cloak we do test",
    "start": "1665840",
    "end": "1672799"
  },
  {
    "text": "we have a really extensive ci cd system that we use to test benefit upstream and we test integrations against",
    "start": "1672799",
    "end": "1680559"
  },
  {
    "text": "dex and against octa as as two sort of standards compliant oadc providers",
    "start": "1680559",
    "end": "1686399"
  },
  {
    "text": "um we don't test we don't test key cloak but it is also an odc provider and as far as i know it follows the spec pretty",
    "start": "1686399",
    "end": "1692399"
  },
  {
    "text": "well so i think it should work just fine um if anybody's interested in sort of",
    "start": "1692399",
    "end": "1698000"
  },
  {
    "text": "getting more official support for that we'd be happy to to try and work on getting that into our test grid",
    "start": "1698000",
    "end": "1705840"
  },
  {
    "text": "the the sticking points the the sticking points with sort of more adventurous idps as as you sort of",
    "start": "1706399",
    "end": "1713919"
  },
  {
    "text": "get to maybe things that we haven't tested uh it tends to be that the basic login flow",
    "start": "1713919",
    "end": "1718960"
  },
  {
    "text": "works just fine but you may run into problems for example getting groups to flow incorrectly or even some of the",
    "start": "1718960",
    "end": "1725919"
  },
  {
    "text": "edge cases with groups like what happens if somebody's in 10 000 groups how do you handle that case",
    "start": "1725919",
    "end": "1732399"
  },
  {
    "text": "the next question in the chat is about comparing what we built to decks and there is certainly some overlap um",
    "start": "1732399",
    "end": "1739679"
  },
  {
    "text": "we're both sort of interacting with the same technology space here oidc",
    "start": "1739679",
    "end": "1746240"
  },
  {
    "text": "dex has a little bit larger goal and a little bit different goal so dex wants to be a generic oidc gateway that",
    "start": "1746880",
    "end": "1755360"
  },
  {
    "text": "connects together all kinds of different identity protocols including upstream oidc but",
    "start": "1755360",
    "end": "1762320"
  },
  {
    "text": "also upstream things like saml ldap and then downstream on the sort of the",
    "start": "1762320",
    "end": "1768080"
  },
  {
    "text": "client side it wants to close that as a generic odc platform and that's really cool we love dex we use",
    "start": "1768080",
    "end": "1774320"
  },
  {
    "text": "dex [Music] where dex is different from from pennopad is that",
    "start": "1774320",
    "end": "1782640"
  },
  {
    "text": "we have focused more on the kubernetes integration side so a couple of aspects of that",
    "start": "1782640",
    "end": "1788320"
  },
  {
    "text": "one is all of our configuration apis and our installation process is all meant to be",
    "start": "1788320",
    "end": "1794880"
  },
  {
    "text": "driven via kubernetes api so if you have again like a git ops pipeline or some",
    "start": "1794880",
    "end": "1800000"
  },
  {
    "text": "sort of declarative system that you're using to manage your kubernetes configuration",
    "start": "1800000",
    "end": "1805520"
  },
  {
    "text": "your pet config is just another set of yaml objects of kubernetes objects",
    "start": "1805520",
    "end": "1812640"
  },
  {
    "text": "and then as well you know we focused on the client side of the experience the cli",
    "start": "1812640",
    "end": "1818000"
  },
  {
    "text": "and kind of the login flow that you have locally and actually the integration with coop ctl and all of this and with",
    "start": "1818000",
    "end": "1823279"
  },
  {
    "text": "dex um you don't get that with dex itself um there's some",
    "start": "1823279",
    "end": "1828559"
  },
  {
    "text": "some tools that sort of surround decks and you can you can build a workflow that's similar to what we've built um",
    "start": "1828559",
    "end": "1833600"
  },
  {
    "text": "like one of those tools is gangway but again we focused on",
    "start": "1833600",
    "end": "1838720"
  },
  {
    "text": "trying to provide out of the box experience that just works and it is sort of opinionated it doesn't do",
    "start": "1838720",
    "end": "1844000"
  },
  {
    "text": "everything you might want it to do in every possible scenario i think dex is probably a more generic tool that you",
    "start": "1844000",
    "end": "1849520"
  },
  {
    "text": "can build all kinds of interesting things with pinaped is really focused on that",
    "start": "1849520",
    "end": "1855279"
  },
  {
    "text": "kubernetes integration",
    "start": "1855279",
    "end": "1858240"
  },
  {
    "text": "other questions",
    "start": "1862080",
    "end": "1865320"
  },
  {
    "text": "put another shout out there if anybody has questions that you don't think of now that you do think of later i just",
    "start": "1884080",
    "end": "1889360"
  },
  {
    "text": "dropped a link to the pinniped channel in the kubernetes community slack that's where the team hangs out and we're happy",
    "start": "1889360",
    "end": "1896640"
  },
  {
    "text": "to just just chat about anything two more questions",
    "start": "1896640",
    "end": "1902158"
  },
  {
    "text": "first question if the oidc provider is running in the same cluster can we have flexibility in the cr crd to",
    "start": "1902320",
    "end": "1908960"
  },
  {
    "text": "have non-https url support that's a good question this is one of those",
    "start": "1908960",
    "end": "1914480"
  },
  {
    "text": "things that we've taken somewhat of a hard line on right now is that we only support secure configurations",
    "start": "1914480",
    "end": "1921360"
  },
  {
    "text": "of things so that means https everywhere for ldap it means we",
    "start": "1921360",
    "end": "1926960"
  },
  {
    "text": "don't support any insecure ldap connection formats if you have a compelling use case i",
    "start": "1926960",
    "end": "1933279"
  },
  {
    "text": "think definitely file an issue or stop by in slack and we can chat about it",
    "start": "1933279",
    "end": "1938559"
  },
  {
    "text": "um you know it's hard in a local cluster scenario like that it might be totally reasonable to assume",
    "start": "1938559",
    "end": "1944799"
  },
  {
    "text": "that the ip network is secure and you don't need tls now it'll be okay we just wanted to",
    "start": "1944799",
    "end": "1950000"
  },
  {
    "text": "make sure that all the code we ship has safe defaults and is hard to misuse in a way that you",
    "start": "1950000",
    "end": "1955039"
  },
  {
    "text": "don't realize is is insecure next question would you use it in",
    "start": "1955039",
    "end": "1960880"
  },
  {
    "text": "production at this stage uh yes so we ship pinniped as a underlying component",
    "start": "1960880",
    "end": "1966960"
  },
  {
    "text": "in several commercial vmware products so it's not um it's not the star of the show you",
    "start": "1966960",
    "end": "1972640"
  },
  {
    "text": "probably would never notice that it's there but it's sort of behind the scenes powering uh features on our products so",
    "start": "1972640",
    "end": "1978399"
  },
  {
    "text": "tons of kubernetes grid time to mission control um it's there various pieces of it are",
    "start": "1978399",
    "end": "1984080"
  },
  {
    "text": "there and working so we we trusted enough to rely on that and i think it's ready for",
    "start": "1984080",
    "end": "1989679"
  },
  {
    "text": "ready for production use we're also very serious about quality of the software so we",
    "start": "1989679",
    "end": "1995039"
  },
  {
    "text": "have very good unit test coverage we have an excellent integration test suite and we have a like i said before a large",
    "start": "1995039",
    "end": "2001919"
  },
  {
    "text": "test grid of kubernetes versions different idps kind of running through all of our tests",
    "start": "2001919",
    "end": "2008960"
  },
  {
    "text": "on every every commit",
    "start": "2008960",
    "end": "2012320"
  },
  {
    "text": "okay um i think i got all the questions there uh yeah anwar mentions for the non-https",
    "start": "2016840",
    "end": "2025279"
  },
  {
    "text": "use case that it's got a service mesh that's providing uh encryption that makes sense",
    "start": "2025279",
    "end": "2033320"
  },
  {
    "text": "margo i didn't mean to steal the show from you too if you have any things to add",
    "start": "2041360",
    "end": "2047559"
  },
  {
    "text": "okay seems like a good that seems like a good natural stopping point uh marco and i",
    "start": "2072839",
    "end": "2078158"
  },
  {
    "text": "will be available in slack immediately following this and also in the future so thanks everyone awesome",
    "start": "2078159",
    "end": "2085200"
  },
  {
    "text": "thank you both so much for your presentation today thank you everyone for joining us",
    "start": "2085200",
    "end": "2090800"
  },
  {
    "text": "and um we will see you all on slack and this will be up later today so",
    "start": "2090800",
    "end": "2097520"
  },
  {
    "text": "thanks so much everybody we'll see you next time",
    "start": "2097520",
    "end": "2102359"
  }
]