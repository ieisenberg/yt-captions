[
  {
    "text": "hello welcome to using open policy agent to meet evolving policy requirements in this",
    "start": "399",
    "end": "6480"
  },
  {
    "text": "talk i'm going to cover how my team has been using open policy agent or opa for around the last year in order to",
    "start": "6480",
    "end": "13599"
  },
  {
    "text": "meet evolving requirements that we've faced as we've moved into new regulated environments",
    "start": "13599",
    "end": "18720"
  },
  {
    "text": "my name is jeremy rickard i'm a software engineer at vmware and my team has really been focused on",
    "start": "18720",
    "end": "24960"
  },
  {
    "text": "doing things in the kubernetes space for the last few years i'm also the kubernetes 120 release lead",
    "start": "24960",
    "end": "30960"
  },
  {
    "text": "and i've worked on a number of open source projects like virtual cubelet and service catalog for kubernetes",
    "start": "30960",
    "end": "36640"
  },
  {
    "text": "if you'd like to reach out to me after this talk feel free to ping me on twitter or the kubernetes slack where you can",
    "start": "36640",
    "end": "42480"
  },
  {
    "text": "find me as j-e-r-i-c-k-a-r i'm also happy to respond to emails",
    "start": "42480",
    "end": "48800"
  },
  {
    "text": "so what does my team at vmware do we're called the vmware developer platform and",
    "start": "48800",
    "end": "53920"
  },
  {
    "text": "we've got this long collection of words that describe what our team does but if i boil it down to a really simple",
    "start": "53920",
    "end": "59359"
  },
  {
    "text": "explanation our team provides managed kubernetes to vmware sas services along with",
    "start": "59359",
    "end": "65280"
  },
  {
    "text": "supporting infrastructure like maybe vault or",
    "start": "65280",
    "end": "70320"
  },
  {
    "text": "creation of resources in aws that might support what those teams are doing this project has",
    "start": "70320",
    "end": "76080"
  },
  {
    "text": "been around since mid-2018 kind of generally available for vmware sas teams",
    "start": "76080",
    "end": "82240"
  },
  {
    "text": "and the the genesis of this thing was really focused on deploying clusters for",
    "start": "82240",
    "end": "88320"
  },
  {
    "text": "multi-tenant use so we would deploy kind of shared clusters and these clusters would have multiple",
    "start": "88320",
    "end": "94079"
  },
  {
    "text": "tenants on them these were deployed into amazon so running in public clouds and",
    "start": "94079",
    "end": "99119"
  },
  {
    "text": "available to the sas teams to deploy their workloads since we are running multi-tenant clusters we kind of use name spaces as",
    "start": "99119",
    "end": "105520"
  },
  {
    "text": "the the level of isolation where we're enforcing that multi-tenancy and we use our back pretty extensively",
    "start": "105520",
    "end": "111040"
  },
  {
    "text": "in order to to make that happen so to really facilitate that we also have a data plane that we run in",
    "start": "111040",
    "end": "117439"
  },
  {
    "text": "something we call our management clusters so when a user is going to use vdp they use a cli that we've written",
    "start": "117439",
    "end": "124079"
  },
  {
    "text": "to maybe create namespaces or label namespaces do things like that then once they have the namespace created they're able to do pretty much",
    "start": "124079",
    "end": "130000"
  },
  {
    "text": "whatever they want inside of that namespace and it belongs to them they can define network policies uh things like that but we very quickly",
    "start": "130000",
    "end": "137840"
  },
  {
    "text": "came to see that that's not really sufficient for all the use cases",
    "start": "137840",
    "end": "143040"
  },
  {
    "text": "there were teams that needed to do more than just exist within one maybe two namespaces they needed the ability to",
    "start": "143040",
    "end": "148800"
  },
  {
    "text": "create more namespaces do other things on the cluster and doing that doesn't really fit into",
    "start": "148800",
    "end": "154080"
  },
  {
    "text": "that multi-tenant cluster kind of kind of model so we also have evolved to support non-shared clusters",
    "start": "154080",
    "end": "160560"
  },
  {
    "text": "we call these tenant cluster pretendants and in those cases they get much more",
    "start": "160560",
    "end": "167599"
  },
  {
    "text": "access to the cluster they can do things like create namespaces they they get nearly clustered admin access",
    "start": "167599",
    "end": "175040"
  },
  {
    "text": "instead of having to rely on our data plane to do a lot of that stuff but at the same time we have resources",
    "start": "175040",
    "end": "180560"
  },
  {
    "text": "that we deploy that are really responsible required for the cluster to operate successfully so we",
    "start": "180560",
    "end": "185680"
  },
  {
    "text": "come to this challenging point of tenants really having what amounts to cluster admin they can do a lot of",
    "start": "185680",
    "end": "190959"
  },
  {
    "text": "things that might impact the operation of our system but we also have resources that we want to protect and our back wasn't really",
    "start": "190959",
    "end": "197599"
  },
  {
    "text": "sufficient to handle all of those things maybe we need to validate that somebody can do something based off of their org",
    "start": "197599",
    "end": "203120"
  },
  {
    "text": "membership in an external system so thinking about how we might solve that problem we realized pretty quickly that webhooks",
    "start": "203120",
    "end": "209680"
  },
  {
    "text": "you know the mutating dynamic and mission control that's available in kubernetes would really solve this problem or give us a point",
    "start": "209680",
    "end": "216159"
  },
  {
    "text": "where we could write some extensions to make that happen if you're not familiar when you do",
    "start": "216159",
    "end": "221599"
  },
  {
    "text": "something like a cube ctl apply um the two the tooling the cli makes a call to the",
    "start": "221599",
    "end": "227120"
  },
  {
    "text": "kubernetes api it does some basic authentication checks to make sure you're authorized and authenticated to do what you're trying",
    "start": "227120",
    "end": "232879"
  },
  {
    "text": "to do and then it moves into the dynamic and mission control in that you can define mutating webhooks which might make",
    "start": "232879",
    "end": "239519"
  },
  {
    "text": "changes to the request coming in maybe inserting a sidecar pod or changing labels doing things like that",
    "start": "239519",
    "end": "246799"
  },
  {
    "text": "finally it moves on through the chain until it gets to the validating workbooks in there it makes decisions about",
    "start": "246799",
    "end": "252720"
  },
  {
    "text": "whether the the request should be allowed or not you know maybe it's checking parts of the",
    "start": "252720",
    "end": "258560"
  },
  {
    "text": "the request against other things in the system to make sure that that should be allowed or maybe it's",
    "start": "258560",
    "end": "263759"
  },
  {
    "text": "checking something against an external system so we ended up writing a web hooked to do some of this",
    "start": "263759",
    "end": "269440"
  },
  {
    "text": "and it was focused on protecting the resources that vdp manages in the clusters but allowing them to do most everything",
    "start": "269440",
    "end": "275759"
  },
  {
    "text": "else so when a request comes into a vdp managed namespace where we have deployed",
    "start": "275759",
    "end": "280800"
  },
  {
    "text": "things we can can analyze who's making the request and either allow it or not allow",
    "start": "280800",
    "end": "285840"
  },
  {
    "text": "it this uh really became a great just general extension point for us to add new",
    "start": "285840",
    "end": "291199"
  },
  {
    "text": "functionality that we couldn't directly express with uh with role based access control but as our scope started to grow you",
    "start": "291199",
    "end": "298240"
  },
  {
    "text": "know we onboarded more tenants we also started to pick up some additional",
    "start": "298240",
    "end": "303440"
  },
  {
    "text": "places where we needed to run we needed to you know follow our tenants to where they needed to be",
    "start": "303440",
    "end": "309759"
  },
  {
    "text": "and the first place they needed to be beyond our normal commercial aws regions was govcloud in the amazon",
    "start": "309759",
    "end": "316639"
  },
  {
    "text": "govcloud and our tenants wanted to start pursuing fedramp certifications starting with fedramp moderate moving",
    "start": "316639",
    "end": "323360"
  },
  {
    "text": "into fat ramp high so we recently just completed an effort to help the vmware cloud and aws team",
    "start": "323360",
    "end": "328800"
  },
  {
    "text": "secure a fedramp high certification and doing that meant that we needed to evaluate a lot of what we were doing",
    "start": "328800",
    "end": "334720"
  },
  {
    "text": "and you know look at the requirements for that certification process find the gaps in what we had deployed",
    "start": "334720",
    "end": "340880"
  },
  {
    "text": "already and start to evolve to fix those things shortly after we started to support a pci certification effort",
    "start": "340880",
    "end": "347120"
  },
  {
    "text": "for vmc again each one of these new environments brought new requirements",
    "start": "347120",
    "end": "352400"
  },
  {
    "text": "when you consider fedramp high there's over 400 different controls that you have to meet in order to get that certification",
    "start": "352400",
    "end": "359360"
  },
  {
    "text": "pci has a completely different set of requirements a lot of them are similar but there's also differences between",
    "start": "359360",
    "end": "365440"
  },
  {
    "text": "them you need to really review each one of these things against what you've deployed and how you're operating to make sure that you're",
    "start": "365440",
    "end": "371280"
  },
  {
    "text": "fitting into that those requirements does kubernetes directly meet all of",
    "start": "371280",
    "end": "376400"
  },
  {
    "text": "those things probably not and in our case we we didn't try to to justify each one of those things with",
    "start": "376400",
    "end": "382960"
  },
  {
    "text": "kubernetes one of the nice things about getting these certifications is that",
    "start": "382960",
    "end": "388240"
  },
  {
    "text": "they've realized that not every requirement that's written can be directly applied to every",
    "start": "388240",
    "end": "393919"
  },
  {
    "text": "business case or every computer system they've allowed for what they call",
    "start": "393919",
    "end": "399280"
  },
  {
    "text": "compensating controls and a compensating control can be applied to almost all pci",
    "start": "399280",
    "end": "404800"
  },
  {
    "text": "requirements and it it really says that if this requirement can't be directly applied",
    "start": "404800",
    "end": "410560"
  },
  {
    "text": "for technical reasons or business reasons that are documented you can go ahead and identify additional",
    "start": "410560",
    "end": "417520"
  },
  {
    "text": "problems that help mitigate the risk that those controls are meant to address",
    "start": "417520",
    "end": "422880"
  },
  {
    "text": "and for us that was a great way for us to take the kubernetes clusters and the other stuff that we've deployed",
    "start": "422880",
    "end": "428479"
  },
  {
    "text": "for our tenants and figure out how we can augment those things maybe with policies",
    "start": "428479",
    "end": "433680"
  },
  {
    "text": "or maybe some additional things we deploy that can help to really reduce those risks and as we",
    "start": "433680",
    "end": "440000"
  },
  {
    "text": "looked at each one of these things and considering that we have lots of different clusters you know we're playing uh in the",
    "start": "440000",
    "end": "446560"
  },
  {
    "text": "commercial regions us west 2 u.s east one um",
    "start": "446560",
    "end": "451599"
  },
  {
    "text": "various apac or europe regions when we look at those and compare them to the govcloud",
    "start": "451599",
    "end": "457759"
  },
  {
    "text": "deployments they're pretty different and the requirements for them are pretty different we do have a base set of security things",
    "start": "457759",
    "end": "464080"
  },
  {
    "text": "that we have to follow for vmware security obviously um any vmware service that's going to be deployed has to go through a set of",
    "start": "464080",
    "end": "471199"
  },
  {
    "text": "security validation and to make sure that it's going to meet our internal requirements but when",
    "start": "471199",
    "end": "476319"
  },
  {
    "text": "we move to the other environments there's more and more restrictive uh things put in place so we obviously",
    "start": "476319",
    "end": "481919"
  },
  {
    "text": "don't want to force all of these requirements onto the tenants that don't need them because",
    "start": "481919",
    "end": "487039"
  },
  {
    "text": "that would make their jobs harder we want to be an enabling feature for them help them",
    "start": "487039",
    "end": "492879"
  },
  {
    "text": "be successful that doesn't seem like it fit really well with our web hook model",
    "start": "492879",
    "end": "498319"
  },
  {
    "text": "because we would be adding you know different features that we would have to probably feature flag in different clusters keep track of all those",
    "start": "498319",
    "end": "504879"
  },
  {
    "text": "different things it's additional code we'd have to write and test every time we wanted to make one of",
    "start": "504879",
    "end": "510000"
  },
  {
    "text": "these new uh features available then it would have to go through our whole rollout process and uh",
    "start": "510000",
    "end": "515599"
  },
  {
    "text": "just be a little bit more complicated than we think would be great and we also thinking about this",
    "start": "515599",
    "end": "522399"
  },
  {
    "text": "problem we want to make sure our users don't hate us additionally some things we we really wanted with",
    "start": "522399",
    "end": "529519"
  },
  {
    "text": "you know this change these new things we wanted to apply was that we didn't really want to require new code for each one of these",
    "start": "529519",
    "end": "535600"
  },
  {
    "text": "things we didn't want to have to make changes to our existing webhook code it's written in go we build it into",
    "start": "535600",
    "end": "542560"
  },
  {
    "text": "a docker container we deploy it it rolls through our pipelines",
    "start": "542560",
    "end": "548080"
  },
  {
    "text": "it goes through a full upgrade process if we wanted to make individual changes to the to that",
    "start": "548080",
    "end": "553440"
  },
  {
    "text": "thing every time we had to identify one of these new policies that we needed to enforce that would get a little bit",
    "start": "553440",
    "end": "559200"
  },
  {
    "text": "complicated so we wanted to require something that didn't really require new code we also wanted to make it easy for the",
    "start": "559200",
    "end": "565120"
  },
  {
    "text": "team to learn so we wanted to to not require them to learn a brand new you know programming language from the",
    "start": "565120",
    "end": "570959"
  },
  {
    "text": "ground up um obviously there's probably going to be some domain specific language involved something that looks like",
    "start": "570959",
    "end": "578640"
  },
  {
    "text": "code but we didn't want to force you know everybody on the team is not a go developer to learn go in order to build",
    "start": "578640",
    "end": "584080"
  },
  {
    "text": "new policies like this and finally while we don't want to go through the process of doing a full upgrade every time",
    "start": "584080",
    "end": "590399"
  },
  {
    "text": "and rolling these things out and going through the whole process we do want to make these things testable so we can make sure that when we're",
    "start": "590399",
    "end": "596160"
  },
  {
    "text": "defining these new policies however they're going to be applied that we can test them before we roll them out",
    "start": "596160",
    "end": "601440"
  },
  {
    "text": "so we're not breaking things down the road so we looked at all of these requirements you know the fact that we want to have",
    "start": "601440",
    "end": "607279"
  },
  {
    "text": "this kind of applied on a cluster by cluster basis we wanted to make sure that we could",
    "start": "607279",
    "end": "613040"
  },
  {
    "text": "satisfy these wants we did a search across the cncf landscape and",
    "start": "613040",
    "end": "620000"
  },
  {
    "text": "we really identified something that we think would help us we thought would help us quite a bit but it turns out that was",
    "start": "620000",
    "end": "625760"
  },
  {
    "text": "opa open policy agent open policy agent is pretty extensible uh it provides",
    "start": "625760",
    "end": "630880"
  },
  {
    "text": "its own language for defining what policies look like and we'll look at that in just a second",
    "start": "630880",
    "end": "636000"
  },
  {
    "text": "and it turns out it integrates pretty well with kubernetes there's a project called gatekeeper that highly recommend you take a look at",
    "start": "636000",
    "end": "643440"
  },
  {
    "text": "we ended up not using gatekeeper for a few reasons that i'll get into as we go through the talk mostly because when we started this",
    "start": "643440",
    "end": "649040"
  },
  {
    "text": "journey it was pretty early days for gatekeeper and we ended up going with the cube management",
    "start": "649040",
    "end": "654880"
  },
  {
    "text": "approach which runs queue management and opa together like in a sidecar manner it",
    "start": "654880",
    "end": "660720"
  },
  {
    "text": "ends up looking something a little bit like this uh just like we wrote our own",
    "start": "660720",
    "end": "666640"
  },
  {
    "text": "web hook validating admission controller",
    "start": "666640",
    "end": "671760"
  },
  {
    "text": "this plugs in pretty much the same way so when you deploy opa and cube management together you can",
    "start": "671760",
    "end": "677360"
  },
  {
    "text": "register them as validating and mutating web hooks they plug into the api server just like any",
    "start": "677360",
    "end": "682720"
  },
  {
    "text": "other web hook would so when a user is making requests with cube ctl",
    "start": "682720",
    "end": "688240"
  },
  {
    "text": "cicd pipelines maybe are using the api directly maybe using cube ctl themselves or when controllers inside of the",
    "start": "688240",
    "end": "695200"
  },
  {
    "text": "cluster are making changes to objects and resources via the api server everything goes",
    "start": "695200",
    "end": "700560"
  },
  {
    "text": "through that normal admission process an admission request hits opa opa looks",
    "start": "700560",
    "end": "706160"
  },
  {
    "text": "at that request determines if any of the policies you've applied should should result in a deny or a",
    "start": "706160",
    "end": "712480"
  },
  {
    "text": "block and then it sends that response back and the api server handles that appropriately so let's look at a really simple example",
    "start": "712480",
    "end": "718800"
  },
  {
    "text": "of what a policy might look like here we want to deny any request that",
    "start": "718800",
    "end": "724079"
  },
  {
    "text": "comes in that's labeled with a certain value so you can see that this is really a declarative language",
    "start": "724079",
    "end": "731200"
  },
  {
    "text": "we're saying a series of facts or in this case really just one fact and then if that fact is true then we're",
    "start": "731200",
    "end": "738959"
  },
  {
    "text": "setting a variable value of this getting returned so we start this off with a deny block so the keyword deny",
    "start": "738959",
    "end": "745760"
  },
  {
    "text": "and then that is a message that's going to be returned and then the first line in this is",
    "start": "745760",
    "end": "751519"
  },
  {
    "text": "really the statement that we're checking the policy we're enforcing so in this case if the metadata",
    "start": "751519",
    "end": "758480"
  },
  {
    "text": "has a label called pants with the value of sweatpants then the message we're going to send",
    "start": "758480",
    "end": "764160"
  },
  {
    "text": "back is you can't sit with us if you notice in that line input.request.object",
    "start": "764160",
    "end": "770000"
  },
  {
    "text": "that's really coming from the kubernetes admission request if you look at the json that makes up a kubernetes admission request",
    "start": "770000",
    "end": "775760"
  },
  {
    "text": "it's got those pieces of it so it's really great in this policy you're able to say i want to look at the metadata of this",
    "start": "775760",
    "end": "781680"
  },
  {
    "text": "object that's coming in or maybe i want to look at the spec of this object that's coming in maybe i want to look at the",
    "start": "781680",
    "end": "787600"
  },
  {
    "text": "the verb is this a create or an update maybe i want to apply policies differently that way it's really flexible and gives you a lot",
    "start": "787600",
    "end": "794079"
  },
  {
    "text": "of power without having to go write you know new code it's still code obviously you're still writing some declarative statements",
    "start": "794079",
    "end": "800560"
  },
  {
    "text": "and you still have to end up putting those in the cluster somehow but it's it's a much simpler path forward to test",
    "start": "800560",
    "end": "807120"
  },
  {
    "text": "this opa provides a lot of tooling and you can actually take this stuff and put it into a opa",
    "start": "807120",
    "end": "813760"
  },
  {
    "text": "playground i have a link to that at the end of the presentation just to test these things without having to run anything locally on your machine",
    "start": "813760",
    "end": "819760"
  },
  {
    "text": "you can you can build out a sample test document and build out your sample policy and just and run",
    "start": "819760",
    "end": "825600"
  },
  {
    "text": "the validation in this playground and it's pretty cool so with all of that in mind let's talk about a few use cases that we",
    "start": "825600",
    "end": "832000"
  },
  {
    "text": "have solved with open policy agent in rego and for each one of these i'm going to go",
    "start": "832000",
    "end": "837279"
  },
  {
    "text": "through three examples i'm going to loosely tie this back to some control or some rule that we found in fedramp or pci",
    "start": "837279",
    "end": "844800"
  },
  {
    "text": "that we needed to apply to our system and the first of those is the use of external information",
    "start": "844800",
    "end": "850160"
  },
  {
    "text": "systems inside of this requirement there's a whole bunch of different rules and a lot of different individual control points but the one i'm going to",
    "start": "850160",
    "end": "856399"
  },
  {
    "text": "focus in on is information systems that are outside of the authorization boundary really qualify as those",
    "start": "856399",
    "end": "861519"
  },
  {
    "text": "external information systems so we deploy our in govcloud we deploy kubernetes into",
    "start": "861519",
    "end": "867199"
  },
  {
    "text": "those fedramp environments and we play a lot of other things in there we try to minimize our reliance on",
    "start": "867199",
    "end": "874320"
  },
  {
    "text": "external resources things that are outside of that authentication boundary and one of those things is a docker",
    "start": "874320",
    "end": "879519"
  },
  {
    "text": "registry so in production in our commercial environments we're using a hosted service from jfrog",
    "start": "879519",
    "end": "884720"
  },
  {
    "text": "that's not available to us to use directly as part of our fedramp offering so we needed to run our own registry in",
    "start": "884720",
    "end": "891760"
  },
  {
    "text": "boundary so inside of that govcloud environment we have our own docker registry that we're running",
    "start": "891760",
    "end": "896800"
  },
  {
    "text": "and we push all of our images to that so then when we want to deploy stuff into the cluster we need to",
    "start": "896800",
    "end": "902320"
  },
  {
    "text": "reference those images we also want to make sure that the cluster isn't running things that it's directly pulling from the internet there",
    "start": "902320",
    "end": "908320"
  },
  {
    "text": "is some connectivity or there was originally we've locked it down since then but originally you were able to pull things",
    "start": "908320",
    "end": "915360"
  },
  {
    "text": "from docker hub or pull things from our jfrog hosted solution so the first thing we looked at with opa",
    "start": "915360",
    "end": "921680"
  },
  {
    "text": "was how do we restrict the use of those other registries we really",
    "start": "921680",
    "end": "927360"
  },
  {
    "text": "block it down to just the one so we want to make sure that requests that are coming in only come from",
    "start": "927360",
    "end": "932720"
  },
  {
    "text": "that registry that we want them to come from so one of the first policies we built was a",
    "start": "932720",
    "end": "937839"
  },
  {
    "text": "pretty simple one that would look at the the image that's being used by containers so this policy really is cool and it",
    "start": "937839",
    "end": "944320"
  },
  {
    "text": "lets us restrict the any request that's coming in to only",
    "start": "944320",
    "end": "949519"
  },
  {
    "text": "those that come from certain repositories so in this case we start off again with that deny block",
    "start": "949519",
    "end": "955519"
  },
  {
    "text": "and the first thing we look at is does this kind uh the the the kind of this request",
    "start": "955519",
    "end": "962320"
  },
  {
    "text": "so just like um you know you deal with uh kinds of kubernetes we're checking that",
    "start": "962320",
    "end": "968000"
  },
  {
    "text": "here so an admission request will come with whatever type of object you're dealing with so we really only want to",
    "start": "968000",
    "end": "974079"
  },
  {
    "text": "apply this to pods and you know we could do this at different levels we could look at the deployments replica sets this was the simplest for",
    "start": "974079",
    "end": "980720"
  },
  {
    "text": "us to just look at when a pod is created is the container using something",
    "start": "980720",
    "end": "986800"
  },
  {
    "text": "using the registry that we expect it to use it's a pretty simplistic check so we iterate through all of the images",
    "start": "986800",
    "end": "993759"
  },
  {
    "text": "so obviously you can have multiple images in uh in a pod spec and we want to make sure",
    "start": "993759",
    "end": "1000639"
  },
  {
    "text": "that each one of those things is is uh is valid so we start off with the second line",
    "start": "1000639",
    "end": "1005759"
  },
  {
    "text": "or of the block some i so like just for every image that exists in this array",
    "start": "1005759",
    "end": "1010959"
  },
  {
    "text": "of input that requests that object.spec.containers let's grab that thing and validate it so then for each one of those images",
    "start": "1010959",
    "end": "1017680"
  },
  {
    "text": "we we basically just say does this image start with what our you know our gov repo is",
    "start": "1017680",
    "end": "1024240"
  },
  {
    "text": "i replace it here with vmware is awesome just for for notional purposes but you can see the you know we're making a",
    "start": "1024240",
    "end": "1029839"
  },
  {
    "text": "little bit more complex policy here by calling into that function when this evaluates true when the first",
    "start": "1029839",
    "end": "1036160"
  },
  {
    "text": "line is it's a pod and when this is not a govcloud image we're going to return the message pod's",
    "start": "1036160",
    "end": "1042798"
  },
  {
    "text": "container is not allowed to use the image from a non-approved repo in gov so what's that look like in practice",
    "start": "1042799",
    "end": "1047918"
  },
  {
    "text": "so using this deprecated functionality of creating a pod with cube ctl run we're still running fairly old clusters so i can still do",
    "start": "1047919",
    "end": "1054400"
  },
  {
    "text": "this i'm going to try to run an mq test client from my personal docker hub",
    "start": "1054400",
    "end": "1061679"
  },
  {
    "text": "account so i run that with cube ctl run that cr actually behind the scenes right",
    "start": "1061679",
    "end": "1068160"
  },
  {
    "text": "now in that version of kubernetes creates a deployment and that deployment that will then spin up pots i don't get",
    "start": "1068160",
    "end": "1073520"
  },
  {
    "text": "an error here though because my policy was really applied to just the pod so to kind of work around",
    "start": "1073520",
    "end": "1079760"
  },
  {
    "text": "that or to see how like what feedback you get let's take a look at the events we can run cube ctl get events and uh",
    "start": "1079760",
    "end": "1086640"
  },
  {
    "text": "filter that down to open policy agent um in the string and you can see that we can't actually create the pod and if i",
    "start": "1086640",
    "end": "1092400"
  },
  {
    "text": "did a cube ctl get pods here you would see that there were no pods created for this deployment",
    "start": "1092400",
    "end": "1097600"
  },
  {
    "text": "and it's specifically showing that error message that i created before so this was great and we were able to",
    "start": "1097600",
    "end": "1104720"
  },
  {
    "text": "lock all of the registries down make sure that we weren't deploying anything from you know the",
    "start": "1104720",
    "end": "1109760"
  },
  {
    "text": "non-controlled things that were inside of the boundary but now we have some fairly unhappy users",
    "start": "1109760",
    "end": "1116400"
  },
  {
    "text": "and our goal all along i mentioned this at the beginning was to make sure that the users didn't hate us we wanted to make sure that",
    "start": "1116400",
    "end": "1121840"
  },
  {
    "text": "things were as easy as possible for them and not every one of our tenants is",
    "start": "1121840",
    "end": "1126960"
  },
  {
    "text": "super versed in kubernetes they're using kubernetes they realize the benefits of deploying their stuff under the platform",
    "start": "1126960",
    "end": "1134960"
  },
  {
    "text": "they're along for the ride for govcloud but us adding this constraint makes it a",
    "start": "1134960",
    "end": "1140960"
  },
  {
    "text": "little bit more difficult for them they either have to go um maintain a separate set of values files if they're using helm",
    "start": "1140960",
    "end": "1147600"
  },
  {
    "text": "or some other tool that does a kind of templating and overlaying maybe their helm chart doesn't even allow them to really template that",
    "start": "1147600",
    "end": "1153520"
  },
  {
    "text": "because they've uh they've not done a super great job of templating that stuff out so there were changes that had to be",
    "start": "1153520",
    "end": "1159120"
  },
  {
    "text": "made there so we thought what can we do to help with that situation",
    "start": "1159120",
    "end": "1164799"
  },
  {
    "text": "and i mentioned this earlier but you can actually run opa as a mutating web hook in addition to a",
    "start": "1164799",
    "end": "1171200"
  },
  {
    "text": "validating web hook so what's the big difference there well when it runs as a validating web hook",
    "start": "1171200",
    "end": "1176480"
  },
  {
    "text": "we have those blocks and they started with deny and what happens there is when all of the",
    "start": "1176480",
    "end": "1182320"
  },
  {
    "text": "rules match for a deny the validating web hook functionality will say this request is not allowed",
    "start": "1182320",
    "end": "1187919"
  },
  {
    "text": "here's the error message but just like every other mutating web hook opa can also",
    "start": "1187919",
    "end": "1193039"
  },
  {
    "text": "update your resource and it does that by generating json patches the syntax gets a little bit more complicated and i'm not going to show",
    "start": "1193039",
    "end": "1199840"
  },
  {
    "text": "you the entire thing here but i'm going to show the pretty like the relevant parts so here we've defined",
    "start": "1199840",
    "end": "1205039"
  },
  {
    "text": "two variables uh vdp repo so it's going to map you know be whatever our upstream",
    "start": "1205039",
    "end": "1211280"
  },
  {
    "text": "public managed jfrog thing is and then also whatever our govcloud the host you know the host name",
    "start": "1211280",
    "end": "1217840"
  },
  {
    "text": "for our our glove cloud govcloud repo is and then instead of using the deny block we're going to define a patch",
    "start": "1217840",
    "end": "1225039"
  },
  {
    "text": "block which is going to return whatever json patch needs to be applied so in this case we have a couple of",
    "start": "1225039",
    "end": "1231280"
  },
  {
    "text": "extra things here i probably should have removed from the example but we first want to make sure is mutation allowed",
    "start": "1231280",
    "end": "1237280"
  },
  {
    "text": "so we want to to validate that the type of resource that we're going to mutate is something we want to mutate we have",
    "start": "1237280",
    "end": "1243600"
  },
  {
    "text": "some rules built around you know what namespace it's in or what labels it might have",
    "start": "1243600",
    "end": "1248880"
  },
  {
    "text": "on it specifically labels a brown disallowing mutation so we have",
    "start": "1248880",
    "end": "1254960"
  },
  {
    "text": "a label that we've put in place for some of our components we don't want to mutate like this because uh could lead to unexpected",
    "start": "1254960",
    "end": "1261200"
  },
  {
    "text": "consequences but we we essentially check to see if that exists or not and then move on and then just like the deny rule we're",
    "start": "1261200",
    "end": "1268159"
  },
  {
    "text": "going to iterate over all the containers and then we're going to check to see if",
    "start": "1268159",
    "end": "1273520"
  },
  {
    "text": "that container matches the upstream public repo and replace it with the downstream value",
    "start": "1273520",
    "end": "1280240"
  },
  {
    "text": "if any of that generated a new value then we're actually going to make the json patch here",
    "start": "1280240",
    "end": "1285760"
  },
  {
    "text": "so i've removed some of the bits about actually making the json patch and i'll link to the documentation at the end of the talk but what will",
    "start": "1285760",
    "end": "1292559"
  },
  {
    "text": "happen here is that when we make a request so maybe we're going to helm deploy",
    "start": "1292559",
    "end": "1298000"
  },
  {
    "text": "some deployment and it's going to reference our upstream jfrog repository this code will actually",
    "start": "1298000",
    "end": "1305120"
  },
  {
    "text": "get invoked it'll look at that request that's coming in and say oh hey you're using the upstream",
    "start": "1305120",
    "end": "1312080"
  },
  {
    "text": "version we can't use that in govcloud let me go ahead and mutate that for you so when this actually hits the api",
    "start": "1312080",
    "end": "1318080"
  },
  {
    "text": "server or sorry ftd it's going to actually get the gov repo instead of the upstream repo so it'll",
    "start": "1318080",
    "end": "1323360"
  },
  {
    "text": "try to pull that down and it'll work just like we would expect it to work but we've made it a little bit transparent to the to the end users",
    "start": "1323360",
    "end": "1330080"
  },
  {
    "text": "so that's the first use case that we had that we solved with opa",
    "start": "1330080",
    "end": "1336000"
  },
  {
    "text": "as we got further and further into the process one thing that kind of bit us was",
    "start": "1336720",
    "end": "1343280"
  },
  {
    "text": "this next requirement it's in pci but it's also in govcloud but i like the the wording here a little bit more",
    "start": "1343280",
    "end": "1349760"
  },
  {
    "text": "and this is pci requirement six develop and maintain secure systems and applications so there's a lot of a lot of things to",
    "start": "1349760",
    "end": "1355760"
  },
  {
    "text": "unpack in that terminology but specifically 6.1",
    "start": "1355760",
    "end": "1362000"
  },
  {
    "text": "underneath of this requirement is that you need to establish a process to basically scan for vulnerabilities",
    "start": "1362000",
    "end": "1367360"
  },
  {
    "text": "and when you identify these vulnerabilities you have to remediate things that are medium or higher",
    "start": "1367360",
    "end": "1372640"
  },
  {
    "text": "so you get different severity levels and these are based off of cvss scores and when you get these things you have",
    "start": "1372640",
    "end": "1379520"
  },
  {
    "text": "um depending on the certificate whatever certification you've achieved you have n number of days to fix them so",
    "start": "1379520",
    "end": "1385520"
  },
  {
    "text": "like in govcloud we have 30 days to fix things it's not a long time but it's also not a",
    "start": "1385520",
    "end": "1391919"
  },
  {
    "text": "short time but as we deploy a ton of stuff we found as we went through this initial",
    "start": "1391919",
    "end": "1398720"
  },
  {
    "text": "process we found a lot of containers that we were deploying that actually had a number of vulnerabilities so as i",
    "start": "1398720",
    "end": "1403919"
  },
  {
    "text": "mentioned these things are based off of cvss scores so in the pci case anything that's mod medium or higher",
    "start": "1403919",
    "end": "1410720"
  },
  {
    "text": "which is a cvs has score of four or more you actually have to remediate or you will fail your pci audit",
    "start": "1410720",
    "end": "1417039"
  },
  {
    "text": "and any re reinvestigation or you know subsequent audits you go through you have to demonstrate that",
    "start": "1417039",
    "end": "1423279"
  },
  {
    "text": "you've been doing these things and fixing these things and you can do this you can check this yourself there's a number of tools you",
    "start": "1423279",
    "end": "1430720"
  },
  {
    "text": "can use we happen to use twist lock but you can use an open source tool from aquasec",
    "start": "1430720",
    "end": "1436159"
  },
  {
    "text": "called trivi that'll do some pretty similar things",
    "start": "1436159",
    "end": "1440559"
  },
  {
    "text": "just a really quick example of what that might look like i scanned one of the images that we have deployed",
    "start": "1442240",
    "end": "1447360"
  },
  {
    "text": "in our commercial environment and you can see that it found a number of vulnerabilities two of them are critical three were high",
    "start": "1447360",
    "end": "1455200"
  },
  {
    "text": "uh four were medium and three were low so we definitely have to fix those",
    "start": "1455200",
    "end": "1461600"
  },
  {
    "text": "criticals those highs and for pci we need to fix those mediums what kind of things do you find inside of",
    "start": "1461600",
    "end": "1468080"
  },
  {
    "text": "that so these can be os level vulnerabilities you could say like the version you're running an ubuntu based",
    "start": "1468080",
    "end": "1474640"
  },
  {
    "text": "container and it's got uh glibc vulnerability inside of it that'll come up in these scanners and",
    "start": "1474640",
    "end": "1480640"
  },
  {
    "text": "that will get flagged by one of the auditors so may not really be a problem but",
    "start": "1480640",
    "end": "1486480"
  },
  {
    "text": "it's best to for us at least the least amount of effort is to fix the problem it could also be application level",
    "start": "1486480",
    "end": "1493039"
  },
  {
    "text": "things so in this case this is a java application and the problem here is actually the",
    "start": "1493039",
    "end": "1498320"
  },
  {
    "text": "version of log4j that it's using so how do we fix this process how do we how",
    "start": "1498320",
    "end": "1503360"
  },
  {
    "text": "do we you know the vdp team handle fixing these things how would anybody else really handle these things",
    "start": "1503360",
    "end": "1509039"
  },
  {
    "text": "well you generally need to build some new container to do this updating libraries may be applying os",
    "start": "1509039",
    "end": "1515039"
  },
  {
    "text": "updates inside of the container if you're using something like photon if you're a vmware",
    "start": "1515039",
    "end": "1520320"
  },
  {
    "text": "person or ubuntu or wn as the base images so we built a little process around that for ourselves and",
    "start": "1520320",
    "end": "1527360"
  },
  {
    "text": "that involves taking whatever the base image that we have so maybe it's some upstream component",
    "start": "1527360",
    "end": "1532400"
  },
  {
    "text": "that's based off of alpine or some upstream component that's based off of ubuntu we write a new docker file",
    "start": "1532400",
    "end": "1538480"
  },
  {
    "text": "we take the old one as the the from line so if you're building a docker file out first line is from whatever then we",
    "start": "1538480",
    "end": "1545200"
  },
  {
    "text": "run whatever the os appropriate updates are just to make sure that we apply those things and then we add in something we've built",
    "start": "1545200",
    "end": "1551039"
  },
  {
    "text": "we add in you know we make sure that we've rebuilt that with whatever the updated libraries are and voila",
    "start": "1551039",
    "end": "1556960"
  },
  {
    "text": "that results in a new tag hopefully without any vulnerabilities then we need to deploy that to the",
    "start": "1556960",
    "end": "1562320"
  },
  {
    "text": "cluster so we go and maybe we run a helm update or k app deploy whatever functionality",
    "start": "1562320",
    "end": "1569919"
  },
  {
    "text": "we're using but then we have to repeat this process whenever the vulnerabilities happen so",
    "start": "1569919",
    "end": "1575039"
  },
  {
    "text": "for us we scan this pretty pretty regularly um and we automated that by",
    "start": "1575039",
    "end": "1580400"
  },
  {
    "text": "building this you know these images pretty much every day so twice daily actually we run through",
    "start": "1580400",
    "end": "1585840"
  },
  {
    "text": "that process we build all of the images we've identified in our inventory file",
    "start": "1585840",
    "end": "1591520"
  },
  {
    "text": "which is of course the ammo file and we update those things to generate new tags then we update the inventory file",
    "start": "1591520",
    "end": "1597679"
  },
  {
    "text": "and then we somehow need to deploy that to the kubernetes cluster and we want to do this in a not really",
    "start": "1597679",
    "end": "1603039"
  },
  {
    "text": "manual way so we were able to pretty pretty easily automate the front half of that process where we would rebuild these containers",
    "start": "1603039",
    "end": "1609440"
  },
  {
    "text": "we've already written the docker files for them we have this the skeleton of the inventory how do we then take that and",
    "start": "1609440",
    "end": "1615520"
  },
  {
    "text": "deploy it so one of the cool things is that opa especially when you're using the cube",
    "start": "1615520",
    "end": "1621360"
  },
  {
    "text": "management sidecar is that you get access to other resources in kubernetes it acts just kind of like any other kubernetes",
    "start": "1621360",
    "end": "1627520"
  },
  {
    "text": "client would where it establishes a watch sees things from the api server so we put that into a config map in the",
    "start": "1627520",
    "end": "1634000"
  },
  {
    "text": "cluster it lists out the name of the image and then what version we want to run",
    "start": "1634000",
    "end": "1639600"
  },
  {
    "text": "and then the opa sidecar cube management sees that those things have changed and",
    "start": "1639600",
    "end": "1644799"
  },
  {
    "text": "makes them available as a data field to opa you can access it like this so next",
    "start": "1644799",
    "end": "1650640"
  },
  {
    "text": "we can write a pretty simple policy that looks at that inventory and compares that to what's deployed and",
    "start": "1650640",
    "end": "1658320"
  },
  {
    "text": "then mutates the tag so our we again start with a patch block we iterate through",
    "start": "1658320",
    "end": "1665039"
  },
  {
    "text": "all the images in the in this case the unit containers we do this for the containers and the regular containers",
    "start": "1665039",
    "end": "1670320"
  },
  {
    "text": "obviously we want to update both um call this update image version function which returns us back a",
    "start": "1670320",
    "end": "1677279"
  },
  {
    "text": "modified version of that reference and then we make a patch off of that and return it",
    "start": "1677279",
    "end": "1683039"
  },
  {
    "text": "as just part of the mutation process just like we did with the repos we're now updating the tag to match what",
    "start": "1683039",
    "end": "1689200"
  },
  {
    "text": "we have in our ci cd system so now our inventory file gets deployed",
    "start": "1689200",
    "end": "1695919"
  },
  {
    "text": "to kubernetes we play that as a config map that gets reloaded by opa and then we",
    "start": "1695919",
    "end": "1701600"
  },
  {
    "text": "run a small job that just labels touches the labels on all our deployments which then forces them to go through the emission process again",
    "start": "1701600",
    "end": "1708399"
  },
  {
    "text": "that forces the mutating web hook in this case opa to update all the tags and then start up",
    "start": "1708399",
    "end": "1713760"
  },
  {
    "text": "again with all those new um hopefully vulnerable vulnerability free images",
    "start": "1713760",
    "end": "1718960"
  },
  {
    "text": "so the last policy that we really wanted to enforce was running as non-root and running is non-root we're doing",
    "start": "1718960",
    "end": "1725600"
  },
  {
    "text": "mostly with pod security policies cloud security policy works pretty well and it's pretty easy for our tenants to",
    "start": "1725600",
    "end": "1731679"
  },
  {
    "text": "understand except when they don't pay attention to the notifications we send and don't",
    "start": "1731679",
    "end": "1737279"
  },
  {
    "text": "make changes to their their their uh 3ml so all of a sudden my pods won't start",
    "start": "1737279",
    "end": "1743840"
  },
  {
    "text": "what's going on well did you specify the context of the security context in yaml",
    "start": "1743840",
    "end": "1749679"
  },
  {
    "text": "oh you mean i have to update my chart again so again we bring mutation to bear here and in",
    "start": "1749679",
    "end": "1755840"
  },
  {
    "text": "this case we take um again checking to see if mutations allowed",
    "start": "1755840",
    "end": "1761360"
  },
  {
    "text": "we look to see if this the spec already has a security context defined and if it doesn't then we make another patch where",
    "start": "1761360",
    "end": "1768080"
  },
  {
    "text": "we actually um add in the run as user and fs group to make this thing run uh as non-root the great thing here is",
    "start": "1768080",
    "end": "1775679"
  },
  {
    "text": "though when the users are making these calls and they're deploying their stuff they can actually specify whatever security",
    "start": "1775679",
    "end": "1781760"
  },
  {
    "text": "context they want and we won't mutate it this is just a nice add-on for them when they don't have that done",
    "start": "1781760",
    "end": "1788000"
  },
  {
    "text": "so recapping what if we lo what have i uh what did we learn with vdp team learn",
    "start": "1788000",
    "end": "1793120"
  },
  {
    "text": "opa is really flexible validation can get you pretty far you can write a lot of deny rules to",
    "start": "1793120",
    "end": "1798720"
  },
  {
    "text": "lock your clusters down and do a lot of things but mutation can get you even further you can do a lot of things when you",
    "start": "1798720",
    "end": "1804240"
  },
  {
    "text": "combine these two things together rego is pretty pretty easy to learn um the declarative nature of it just makes",
    "start": "1804240",
    "end": "1810320"
  },
  {
    "text": "it pretty easy for people to pick up and we have found that it's pretty easy for all the team members to really learn it and start",
    "start": "1810320",
    "end": "1816559"
  },
  {
    "text": "writing new policies or fix problems we found in the policies and then with those in mind we were able",
    "start": "1816559",
    "end": "1822000"
  },
  {
    "text": "to balance our security needs pretty closely with our desire to make the user experience",
    "start": "1822000",
    "end": "1827760"
  },
  {
    "text": "as nice as possible in this security world that we're living in",
    "start": "1827760",
    "end": "1833278"
  },
  {
    "text": "but let's go back for a second and talk about the the mutation aspect of this i have mixed feelings about mutating web",
    "start": "1833840",
    "end": "1841200"
  },
  {
    "text": "hooks and if you read the documentation the kubernetes documentation there's actually some call outs to say",
    "start": "1841200",
    "end": "1846880"
  },
  {
    "text": "hey you should probably be aware of these things and maybe it's not the greatest case and one of them is that users don't",
    "start": "1846880",
    "end": "1852080"
  },
  {
    "text": "necessarily know what's happening they may be confused by like what this thing that i've created",
    "start": "1852080",
    "end": "1857840"
  },
  {
    "text": "uh doesn't look like what's in the cluster now what happened we actually had that problem with the",
    "start": "1857840",
    "end": "1862880"
  },
  {
    "text": "security context mutation as we were going through this process people weren't specifying",
    "start": "1862880",
    "end": "1868880"
  },
  {
    "text": "um security policies on their their uh their deployments and then actually tried to",
    "start": "1868880",
    "end": "1874559"
  },
  {
    "text": "run as root and gave us an exception request where we created cert security service accounts for them",
    "start": "1874559",
    "end": "1880159"
  },
  {
    "text": "um things like that but they didn't declare the security context because they were just you know depending on our automation or",
    "start": "1880159",
    "end": "1887519"
  },
  {
    "text": "our easy mode access for that so think about the things you want to do with mutation",
    "start": "1887519",
    "end": "1893039"
  },
  {
    "text": "um and and maybe use it judiciously and think about what impacts it may have downstream",
    "start": "1893039",
    "end": "1901440"
  },
  {
    "text": "so here's some great links if you want to kind of follow up on these if you want to read more about the fedramp high requirements or the pci",
    "start": "1901440",
    "end": "1909039"
  },
  {
    "text": "standards i've linked them both here um play.openpolicyagent.org is great to go experiment and mess around with policy",
    "start": "1909039",
    "end": "1916640"
  },
  {
    "text": "there's a great tutorial linked here as well and like how to validate ingress in the cluster",
    "start": "1916640",
    "end": "1921760"
  },
  {
    "text": "and then finally um one of the reasons we didn't use gatekeeper was it doesn't do mutation yet but there's an open issue here and maybe",
    "start": "1921760",
    "end": "1928320"
  },
  {
    "text": "by the time cubecom comes around this will be done uh i would totally advise you to follow this and",
    "start": "1928320",
    "end": "1934000"
  },
  {
    "text": "give gatekeeper a try if you're going to look at opa especially if you want to do just validating sort of things at the",
    "start": "1934000",
    "end": "1940159"
  },
  {
    "text": "moment so at that point i'll turn it over to questions if you have any questions i would love to answer them now",
    "start": "1940159",
    "end": "1945600"
  },
  {
    "text": "thank you so much",
    "start": "1945600",
    "end": "1948799"
  }
]