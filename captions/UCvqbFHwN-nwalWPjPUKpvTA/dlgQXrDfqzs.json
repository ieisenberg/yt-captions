[
  {
    "text": "I mean you guys are really really awesome because the room is full packed so and it's the last session so you are",
    "start": "9900",
    "end": "16740"
  },
  {
    "text": "really here to learn and I'm really happy about that uh so uh yeah let's",
    "start": "16740",
    "end": "22980"
  },
  {
    "text": "start with the session uh today we'll be talking about chaos engineering chaos mesh that's what",
    "start": "22980",
    "end": "29400"
  },
  {
    "text": "you're here for and I'll try my best to explain you uh what chaos engineering is by the way uh can you raise your hands",
    "start": "29400",
    "end": "35640"
  },
  {
    "text": "how many of you know about chaos engineering like what it is and how it is being used awesome almost everyone so",
    "start": "35640",
    "end": "43940"
  },
  {
    "text": "um so I my name is Saiyan Pathak and I'm working as director of technical evangelism at sibo I'm also a cncf",
    "start": "44399",
    "end": "50640"
  },
  {
    "text": "Ambassador and yeah you can find me on Twitter either it's I am Pathak and tweet anything about the session that",
    "start": "50640",
    "end": "56879"
  },
  {
    "text": "you learned or found interesting so the storyline for this session would",
    "start": "56879",
    "end": "62460"
  },
  {
    "text": "be um introduction like what chaos engineering is where it fits in and what",
    "start": "62460",
    "end": "67740"
  },
  {
    "text": "is what are the principles so these will be the general introduction um that applies to all the projects and",
    "start": "67740",
    "end": "74460"
  },
  {
    "text": "then we'll move to the project chaos mesh what chaos mesh is what are some of",
    "start": "74460",
    "end": "79680"
  },
  {
    "text": "the new features that the maintainers have been working on so I am not one of",
    "start": "79680",
    "end": "85500"
  },
  {
    "text": "the maintainers of chaos mesh I am more of the Community member of chaos mesh and the user so I'll be talking from",
    "start": "85500",
    "end": "92100"
  },
  {
    "text": "that perspective more and then we'll be looking at some of the demos um I think three demos uh in which I'll",
    "start": "92100",
    "end": "99960"
  },
  {
    "text": "showcase one interesting one which is the multi-cluster chaos that is a new",
    "start": "99960",
    "end": "105479"
  },
  {
    "text": "one that have been introduced",
    "start": "105479",
    "end": "108979"
  },
  {
    "text": "so the the systems are have been moving moved from linear systems to the complex",
    "start": "110640",
    "end": "118079"
  },
  {
    "text": "system so previously we used to have monolithic applications uh simple applications where even you know it",
    "start": "118079",
    "end": "125640"
  },
  {
    "text": "happens like a single person also knows the end-to-end how system works you can go to them and ask okay how this works",
    "start": "125640",
    "end": "131879"
  },
  {
    "text": "this is where it failed and this is where you'll be able to find a bug in that particular system over the period",
    "start": "131879",
    "end": "138300"
  },
  {
    "text": "of time the systems have matured enough it has become non-linear you have moved",
    "start": "138300",
    "end": "143879"
  },
  {
    "text": "to a distributed world where it is all micro Services microservices architecture if you know you have so",
    "start": "143879",
    "end": "150239"
  },
  {
    "text": "many um smaller chunk of your apis running as a separate micro Services inside",
    "start": "150239",
    "end": "156060"
  },
  {
    "text": "containers kubernetes and that is unpredictable Behavior you don't know",
    "start": "156060",
    "end": "161340"
  },
  {
    "text": "where exactly things go wrong like you have so many hundreds of micro Services one thing fails in your application that",
    "start": "161340",
    "end": "168360"
  },
  {
    "text": "it becomes very difficult to see where your application actually has failed so",
    "start": "168360",
    "end": "173459"
  },
  {
    "text": "that unpredictable Behavior have made uh the even the systems complex and we need",
    "start": "173459",
    "end": "179459"
  },
  {
    "text": "more enhanced tools to solve this complexity in terms of Chaos",
    "start": "179459",
    "end": "186599"
  },
  {
    "text": "um and it becomes like in the previous systems uh you like you can go to a single person and you can you know even",
    "start": "186599",
    "end": "192480"
  },
  {
    "text": "ask them like what is their end to end but now it's very difficult to prepare the complete mental model of which",
    "start": "192480",
    "end": "198599"
  },
  {
    "text": "microservices is talking to which microservices and you cannot ask a single person okay things are wrong how",
    "start": "198599",
    "end": "204180"
  },
  {
    "text": "do we fix it so you you need some other mechanism uh to tackle this problem",
    "start": "204180",
    "end": "210659"
  },
  {
    "text": "so same uh in different like traditional systems have slowly moved into Cloud native with Cloud native uh adoption we",
    "start": "210659",
    "end": "218580"
  },
  {
    "text": "have more kubernetes adoption because that's what that was the first project of cncf itself so with that you have",
    "start": "218580",
    "end": "224640"
  },
  {
    "text": "kubernetes adoption kubernetes itself is a very heavy piece of software that you are running it it's not small you have",
    "start": "224640",
    "end": "231420"
  },
  {
    "text": "you know control plane nodes you have components over there you have your worker nodes you have components over",
    "start": "231420",
    "end": "236640"
  },
  {
    "text": "there so kubernetes itself is having a lot of components that has to work",
    "start": "236640",
    "end": "242700"
  },
  {
    "text": "properly so that your application works properly so even the systems have matured and become complex though they",
    "start": "242700",
    "end": "249540"
  },
  {
    "text": "provide a lot of powerful features but they the the complexity has grown",
    "start": "249540",
    "end": "254879"
  },
  {
    "text": "then you have more micro services and more third-party tooling what do more third party touring means is even when",
    "start": "254879",
    "end": "261900"
  },
  {
    "text": "you install kubernetes on it's not just kubernetes on top of kubernetes you will be adding your observability layer",
    "start": "261900",
    "end": "268139"
  },
  {
    "text": "you'll be adding your security layer you'll be adding your service mesh layer so you keep on adding more and more softwares so you keep on adding more and",
    "start": "268139",
    "end": "275880"
  },
  {
    "text": "more complexity each layer that you add that particular piece of software had have to work perfectly fine in order for",
    "start": "275880",
    "end": "283139"
  },
  {
    "text": "your application to run perfectly fine in the end you are running your application on kubernetes these are just",
    "start": "283139",
    "end": "288300"
  },
  {
    "text": "the helper utilities that are making uh things able to run at scale at massive",
    "start": "288300",
    "end": "293940"
  },
  {
    "text": "production scale testing is hard so you have you know",
    "start": "293940",
    "end": "300800"
  },
  {
    "text": "productionized distribution application and you're trying to test it with uh something like jmeter so it's hard",
    "start": "300800",
    "end": "308040"
  },
  {
    "text": "um so that's what we we cannot do so we need some other mechanism and that's",
    "start": "308040",
    "end": "313080"
  },
  {
    "text": "where we enter chaos engineering",
    "start": "313080",
    "end": "317240"
  },
  {
    "text": "I don't know why I'm not using the clicker so chaos engineering is not something which is very new it is",
    "start": "318360",
    "end": "325860"
  },
  {
    "text": "something which have been in works I mean you must have heard of chaos monkey like Netflix originated 2010 so you can",
    "start": "325860",
    "end": "333600"
  },
  {
    "text": "imagine like it's more than you know 13 plus years that it's there so the",
    "start": "333600",
    "end": "339060"
  },
  {
    "text": "technology itself is not new it's been there it has been getting mature more",
    "start": "339060",
    "end": "344400"
  },
  {
    "text": "and more with respect to Cloud native like Cloud native chaos engineering was not there because Cloud native was not",
    "start": "344400",
    "end": "350759"
  },
  {
    "text": "there previously since the applications have matured the systems have matured so is the model",
    "start": "350759",
    "end": "358199"
  },
  {
    "text": "that have matured over the time and so are the tools that have matured over the time",
    "start": "358199",
    "end": "363840"
  },
  {
    "text": "so that's where the cloud native chaos engineering have come in but the chaos engineering philosophies is something",
    "start": "363840",
    "end": "369720"
  },
  {
    "text": "which which are there which people accept which people agree to like which we'll be talking about the chaos",
    "start": "369720",
    "end": "375660"
  },
  {
    "text": "engineering principles so by definition it means chaos engineering is the discipline of experimenting on a system",
    "start": "375660",
    "end": "381360"
  },
  {
    "text": "in order to build confidence in systems capability to withstand turbulent condition in production what it means",
    "start": "381360",
    "end": "387720"
  },
  {
    "text": "simply is we are injecting the failures into the system to understand how the",
    "start": "387720",
    "end": "393600"
  },
  {
    "text": "system will behave if any issue comes and catch that issue before it actually",
    "start": "393600",
    "end": "399180"
  },
  {
    "text": "happens in production it's similar to injecting a vaccine uh",
    "start": "399180",
    "end": "405660"
  },
  {
    "text": "into a person and making them immune to a particular disease so that is what we are trying to do with chaos in chaining",
    "start": "405660",
    "end": "411600"
  },
  {
    "text": "we are injecting that failure in that particular system and then we are seeing the behavior of that system if",
    "start": "411600",
    "end": "416940"
  },
  {
    "text": "everything works fine then it works fine if not then probably our system needs some modifications uh to tackle that",
    "start": "416940",
    "end": "423660"
  },
  {
    "text": "particular bug so that's that's in simple uh terms testing makes an assertion on the",
    "start": "423660",
    "end": "430680"
  },
  {
    "text": "property of the system that is based on existing knowledge and then validate that property so that is the regular",
    "start": "430680",
    "end": "437580"
  },
  {
    "text": "testing that is there but we are more interested in the experimentation where we Define the hypothesis which is proven",
    "start": "437580",
    "end": "444599"
  },
  {
    "text": "or disproven and as long as hypothesis is not disproven we you know confidence",
    "start": "444599",
    "end": "450840"
  },
  {
    "text": "grows in the hypothesis if it's disproven again we get to learn that something is wrong and we can build",
    "start": "450840",
    "end": "456419"
  },
  {
    "text": "something you know we can fix something and improve so chaos engineering principles so",
    "start": "456419",
    "end": "464520"
  },
  {
    "text": "principle of chaos engineering states that first what we do is uh there are series of steps so first we Define a",
    "start": "464520",
    "end": "471120"
  },
  {
    "text": "steady state like this is how our application should be behaving so that's the steady state of the application and",
    "start": "471120",
    "end": "477300"
  },
  {
    "text": "next we Define the hypothesis so hypothesis uh that steady state will",
    "start": "477300",
    "end": "482759"
  },
  {
    "text": "continue to be in the state now we are bringing this particular change that is there then we keep on adding some",
    "start": "482759",
    "end": "489180"
  },
  {
    "text": "production ready variables now what does that variables the variables are the",
    "start": "489180",
    "end": "494819"
  },
  {
    "text": "real world scenarios like um your application is there and you add",
    "start": "494819",
    "end": "499919"
  },
  {
    "text": "the latency to your net uh application your pods are there and let's say out of",
    "start": "499919",
    "end": "505319"
  },
  {
    "text": "three parts one pods goes down how your applications behave that um your nodes are there one of your node",
    "start": "505319",
    "end": "511020"
  },
  {
    "text": "goes down how your applications behave in that particular scenario so we keep injecting failures the real world",
    "start": "511020",
    "end": "517200"
  },
  {
    "text": "scenarios to understand uh how our hypothesis that we have done we can",
    "start": "517200",
    "end": "523919"
  },
  {
    "text": "disprove so we try to disprove the hypothesis by looking at the difference in the steady state",
    "start": "523919",
    "end": "529140"
  },
  {
    "text": "um and between the control group and the experimentation group so then this is the same and then we",
    "start": "529140",
    "end": "536220"
  },
  {
    "text": "vary with the real world events you can see turn off things slow things down send the invalid responses to the API",
    "start": "536220",
    "end": "542940"
  },
  {
    "text": "requests that are there um and then we have to run these experiments in production now the funny",
    "start": "542940",
    "end": "548519"
  },
  {
    "text": "part is one on one hand we are saying that we are bringing in chaos and we are turning",
    "start": "548519",
    "end": "555180"
  },
  {
    "text": "off things but turning off things isn't a good thing in production right so that is where you have to minimize the blast",
    "start": "555180",
    "end": "561180"
  },
  {
    "text": "radius which is very important and critical aspect when you are doing Chaos Engineering in production",
    "start": "561180",
    "end": "567000"
  },
  {
    "text": "because your application your customers are using your application you do not want them to be impacted by your piece",
    "start": "567000",
    "end": "574500"
  },
  {
    "text": "of software that is doing Chaos engineering and giving you uh and trying to find bugs which might not be there or",
    "start": "574500",
    "end": "581100"
  },
  {
    "text": "which might be there but that should not hamper any of the existing uh things that your customers are using so for",
    "start": "581100",
    "end": "588060"
  },
  {
    "text": "that you have to minimize the blast radius you can minimize the blast radius in various ways like you can you'll be",
    "start": "588060",
    "end": "593279"
  },
  {
    "text": "carefully selecting uh you know which but if if there is a pod goes down",
    "start": "593279",
    "end": "598440"
  },
  {
    "text": "scenario or pod uh failure pod kill kind of chaos that you want to inject on your kubernetes cluster so you will be",
    "start": "598440",
    "end": "605220"
  },
  {
    "text": "carefully selecting the node selector of particular node of particular application which particular node is",
    "start": "605220",
    "end": "611040"
  },
  {
    "text": "fine to run this particular chaos for this particular application so that is how you have to carefully minimize the",
    "start": "611040",
    "end": "616680"
  },
  {
    "text": "blast radius and you have to communicate more with the team so you have to make sure you have enough communication done",
    "start": "616680",
    "end": "623279"
  },
  {
    "text": "that this is what will be happening in this particular scenario or this particular application these are the",
    "start": "623279",
    "end": "628380"
  },
  {
    "text": "number of chaos that we'll be doing",
    "start": "628380",
    "end": "632180"
  },
  {
    "text": "and continuous yeah we have to keep doing it in a continuous manner like as soon as we let's say you bring in some",
    "start": "634380",
    "end": "641760"
  },
  {
    "text": "change or a new feature in your application so you have to redo all the chaos engineering experiments that you",
    "start": "641760",
    "end": "647640"
  },
  {
    "text": "have done with the new release of your applications because that is what cloud native is right you keep on adding new",
    "start": "647640",
    "end": "653640"
  },
  {
    "text": "and new features faster and faster so that is where you need to do it in a continuous way",
    "start": "653640",
    "end": "661040"
  },
  {
    "text": "uh introducing chaos mesh so chaos mesh is a tool for doing Chaos engineering on",
    "start": "661140",
    "end": "668399"
  },
  {
    "text": "kubernetes and it also has its own um what you call physical chaos",
    "start": "668399",
    "end": "675300"
  },
  {
    "text": "experiments that you can do on the physical notes and there are a lot of experiments that you will be able to do",
    "start": "675300",
    "end": "680880"
  },
  {
    "text": "on the kubernetes level so design for kubernetes you can see you can add a pod",
    "start": "680880",
    "end": "686040"
  },
  {
    "text": "kale you can increase the network latency system level chaos kernel level chaos it has deep Cloud Integrations",
    "start": "686040",
    "end": "693420"
  },
  {
    "text": "already with some of the cloud providers that directly do the cloud provider",
    "start": "693420",
    "end": "698640"
  },
  {
    "text": "specific type of chaos that you can inject and then it has a dashboard for",
    "start": "698640",
    "end": "703920"
  },
  {
    "text": "analytics uh that you can view you know this is how it went this is how the",
    "start": "703920",
    "end": "709260"
  },
  {
    "text": "chaos was done and it it's not on this particular screen but it has workflows so you can",
    "start": "709260",
    "end": "716100"
  },
  {
    "text": "actually create a chaos workflow so basically if you want to run chaos experiments in serial like one after the",
    "start": "716100",
    "end": "723060"
  },
  {
    "text": "other as a series of experiment you can do that if you want to run a few of the experiments or a two types of experiment",
    "start": "723060",
    "end": "730200"
  },
  {
    "text": "in parallel you can do that so that sort of workflow things also you can create",
    "start": "730200",
    "end": "737839"
  },
  {
    "text": "so how chaos mesh works this is the simple architecture so as a user first",
    "start": "739560",
    "end": "745380"
  },
  {
    "text": "you have to install chaos mesh so first you will be having a kubernetes cluster let's say you have Co kubernetes cluster",
    "start": "745380",
    "end": "751320"
  },
  {
    "text": "that you have created on CEO kubernetes cluster you'll be it can be any kubernetes cluster that's just an",
    "start": "751320",
    "end": "756839"
  },
  {
    "text": "example so on that cluster you'll be installing chaos mesh so chaos mesh can be installed via Helm so you'll be",
    "start": "756839",
    "end": "763019"
  },
  {
    "text": "installing a chaos mesh after that it will be installing controller manager it will be installing your chaos Daemon as",
    "start": "763019",
    "end": "770700"
  },
  {
    "text": "a demon set on all the nodes so what user will be doing is user will be creating a custom resource with a",
    "start": "770700",
    "end": "777420"
  },
  {
    "text": "specific chaos experiment type now when you install chaos mesh there are a lot of crds that gets installed as part of",
    "start": "777420",
    "end": "784800"
  },
  {
    "text": "it there is not a single crd there are multiple crds for each experiment there",
    "start": "784800",
    "end": "790260"
  },
  {
    "text": "is a separate crd so you will create let's for example you want to create a stress chaos so you will be creating a",
    "start": "790260",
    "end": "796980"
  },
  {
    "text": "stress chaos kind of kubernetes this object and then you will be specifying",
    "start": "796980",
    "end": "802320"
  },
  {
    "text": "your what type of stress CPU you want to introduce and on which particular",
    "start": "802320",
    "end": "807899"
  },
  {
    "text": "application you want to do that so user will do that and then kubernetes API server will inform um the controller",
    "start": "807899",
    "end": "816060"
  },
  {
    "text": "match chaos controller manager that there is this particular object and the controller manager will recognize that",
    "start": "816060",
    "end": "821940"
  },
  {
    "text": "this is my object and it will designate that to a chaos Daemon now it's the responsibility of the chaos Daemon to",
    "start": "821940",
    "end": "829139"
  },
  {
    "text": "actually perform the chaos and select on which particular node the chaos will be",
    "start": "829139",
    "end": "834180"
  },
  {
    "text": "done on which particular pod the chaos will be done by using whatever you have specified like the node selector and",
    "start": "834180",
    "end": "841200"
  },
  {
    "text": "stuff like that it will be deciding that this particular pod has to be killed off this particular node",
    "start": "841200",
    "end": "847980"
  },
  {
    "text": "and then um yeah it also gets the c groups namespaces and all those stuff uh",
    "start": "847980",
    "end": "853860"
  },
  {
    "text": "for that part so this is the responsibility of chaos demon and then the results goes back to the dashboard",
    "start": "853860",
    "end": "859740"
  },
  {
    "text": "and you will be able to see everything running over there",
    "start": "859740",
    "end": "863899"
  },
  {
    "text": "moving on what's new in chaos mesh so uh last time um chaos",
    "start": "870240",
    "end": "876440"
  },
  {
    "text": "mesh version 2.0 was there and 2.4 features were introduced so I'll be",
    "start": "876440",
    "end": "882779"
  },
  {
    "text": "telling what's new after 2.5 ah in 2.5 so already you had pod Network",
    "start": "882779",
    "end": "888839"
  },
  {
    "text": "jvm IO stress HTTP gcp DNS kernel uh AWS",
    "start": "888839",
    "end": "893880"
  },
  {
    "text": "which are the cloud provider specific chaos then the red ones Azure block and",
    "start": "893880",
    "end": "899160"
  },
  {
    "text": "physical machine chaos were introduced in 2.4 then in 2.5 you have multi-cluster chaos",
    "start": "899160",
    "end": "906660"
  },
  {
    "text": "experiments which is something new which we'll see in the demo as well basically what that means is you will be able to",
    "start": "906660",
    "end": "912420"
  },
  {
    "text": "install chaos mesh on one cluster you'll be able to connect a remote cluster",
    "start": "912420",
    "end": "917459"
  },
  {
    "text": "which is another particular cluster to that so let's say you have two cluster one cluster two so you will be able to",
    "start": "917459",
    "end": "923760"
  },
  {
    "text": "run and create chaos experiments on cluster one but those experiments will",
    "start": "923760",
    "end": "929519"
  },
  {
    "text": "actually be able to communicate to Cluster 2 and run your experiments on cluster 2. so that's a multi-cluster kind of chaos experiments that you will",
    "start": "929519",
    "end": "937079"
  },
  {
    "text": "be able to do HTTP chaos TLS support So HTTP chaos with TLS support is a way to",
    "start": "937079",
    "end": "943440"
  },
  {
    "text": "bypass the TLs using the self-signed search so that's a new addition to the",
    "start": "943440",
    "end": "949260"
  },
  {
    "text": "HTTP one and the workflow UI is the new workflow UI is enabled by default I'll actually",
    "start": "949260",
    "end": "955500"
  },
  {
    "text": "show you both the previous one and the new one how it looks like so when you install the newer version of chaos mesh",
    "start": "955500",
    "end": "961680"
  },
  {
    "text": "the 2.51 you'll get the new workflow out of the box",
    "start": "961680",
    "end": "967220"
  },
  {
    "text": "okay cool uh we will go through the demo now",
    "start": "968040",
    "end": "974060"
  },
  {
    "text": "[Music]",
    "start": "978340",
    "end": "981519"
  },
  {
    "text": "I hope this will work",
    "start": "990600",
    "end": "995120"
  },
  {
    "text": "okay so prayers to the demo God and we'll start",
    "start": "997139",
    "end": "1002620"
  },
  {
    "text": "so the nodes I have already prepared uh so this is uh civil kubernetes cluster based on Talos which is 1.25 this is the",
    "start": "1003440",
    "end": "1012440"
  },
  {
    "text": "first cluster and this is the",
    "start": "1012440",
    "end": "1016959"
  },
  {
    "text": "this is the second cluster chaos mesh 2. so chaos mesh 1 and Chaos mesh 2. uh the",
    "start": "1020000",
    "end": "1025520"
  },
  {
    "text": "controller on the first chaos based installation that was done was on the cluster one so we can see that as well",
    "start": "1025520",
    "end": "1034540"
  },
  {
    "text": "so you have your controller manager you have your chaos Daemon and you have a chaos dashboard",
    "start": "1037400",
    "end": "1043400"
  },
  {
    "text": "um one interesting thing or you can say you should be doing that is always add",
    "start": "1043400",
    "end": "1049280"
  },
  {
    "text": "https TLS for your applications so that is what I have done for",
    "start": "1049280",
    "end": "1055039"
  },
  {
    "text": "uh the chaos dashboard as well it's pretty simple uh you can use cert",
    "start": "1055039",
    "end": "1060320"
  },
  {
    "text": "manager and let's encrypt to add certificates to your application so you",
    "start": "1060320",
    "end": "1065480"
  },
  {
    "text": "just use cluster issuer certificate and also I have nginx Ingress controller",
    "start": "1065480",
    "end": "1071000"
  },
  {
    "text": "installed on this particular cluster and I have created and pointed uh this",
    "start": "1071000",
    "end": "1076460"
  },
  {
    "text": "particular domain which is the load balancer domain of uh the chaos dashboard to have the secret which we",
    "start": "1076460",
    "end": "1085280"
  },
  {
    "text": "created in the certificate so that's all that's in general how it works like whenever",
    "start": "1085280",
    "end": "1090860"
  },
  {
    "text": "you want to add a TLS support to your application this is how you do it so this is already done and we already have",
    "start": "1090860",
    "end": "1096380"
  },
  {
    "text": "chaos dashboard which is there so the tokens keep on expiring so what",
    "start": "1096380",
    "end": "1102440"
  },
  {
    "text": "we'll do is we will generate the token again and log out",
    "start": "1102440",
    "end": "1110559"
  },
  {
    "text": "so we specify the name of the token and the value that we have got I think",
    "start": "1139520",
    "end": "1146299"
  },
  {
    "text": "the expiry time is one hour so I was just trying back uh you one hour back so it might have expired already",
    "start": "1146299",
    "end": "1153799"
  },
  {
    "text": "so that's how uh the chaos dashboard looks like uh the chaos mesh dashboard looks like you you have your you could",
    "start": "1153799",
    "end": "1160160"
  },
  {
    "text": "quick start experiments and you can create workflows you can create experiments and stuff uh these are all",
    "start": "1160160",
    "end": "1167000"
  },
  {
    "text": "the crds that are installed in the cluster so we'll not be doing much via the UI we'll be doing much via the chaos",
    "start": "1167000",
    "end": "1176059"
  },
  {
    "text": "actually and the demos there were a few more slides",
    "start": "1176059",
    "end": "1181220"
  },
  {
    "text": "uh what what we want to do so in demo one basically I'll be introducing the uh pod Network latency so you have the",
    "start": "1181220",
    "end": "1189799"
  },
  {
    "text": "chaos mesh which is already installed in cluster one uh you have application which is already invest and uh there",
    "start": "1189799",
    "end": "1196039"
  },
  {
    "text": "will be a network chaos that I'll be creating and showing like how the network chaos is getting done so you can",
    "start": "1196039",
    "end": "1201080"
  },
  {
    "text": "see this particular custom resource Network chaos",
    "start": "1201080",
    "end": "1206660"
  },
  {
    "text": "so it is just adding a delay to the label selectors of app web show and it",
    "start": "1206660",
    "end": "1212360"
  },
  {
    "text": "is adding a 10 millisecond of latency to this particular application that's what simply it is doing so Cube CTL get pause",
    "start": "1212360",
    "end": "1218780"
  },
  {
    "text": "you can see the application is running what we'll do is we'll apply",
    "start": "1218780",
    "end": "1224539"
  },
  {
    "text": "Network chaos it's created we can actually do Cube CTL",
    "start": "1224539",
    "end": "1230059"
  },
  {
    "text": "get network chaos so that's the crd that's why I I am able",
    "start": "1230059",
    "end": "1235460"
  },
  {
    "text": "to get network chaos because the crd exists so now we will do a port",
    "start": "1235460",
    "end": "1243440"
  },
  {
    "text": "forward to the application web show and then we should be able to see",
    "start": "1243440",
    "end": "1252159"
  },
  {
    "text": "you can see here 10 milliseconds of latency that has been added so that's a",
    "start": "1255380",
    "end": "1260539"
  },
  {
    "text": "pretty normal experiment most commonly used experiment which is there",
    "start": "1260539",
    "end": "1266240"
  },
  {
    "text": "uh coming to remote cluster stuff which is there now that's an interesting one",
    "start": "1266240",
    "end": "1273340"
  },
  {
    "text": "so now uh multi-cluster chaos so in cluster one you have chaos mesh and um",
    "start": "1275480",
    "end": "1281120"
  },
  {
    "text": "which is already installed so user installed chaos mesh in cluster one now user creates a remote cluster resource",
    "start": "1281120",
    "end": "1288860"
  },
  {
    "text": "so you can see down uh the remote cluster resource is there where I have",
    "start": "1288860",
    "end": "1294980"
  },
  {
    "text": "defined the name of the cluster the name space where I want to install the chaos mesh components and the cube config file",
    "start": "1294980",
    "end": "1302419"
  },
  {
    "text": "before applying this yaml file you actually have to create a secret of your",
    "start": "1302419",
    "end": "1307520"
  },
  {
    "text": "cubeconfig file in cluster one so you have to do a cube CTL create a generic secret in the cluster one so that you",
    "start": "1307520",
    "end": "1314480"
  },
  {
    "text": "can give that particular name and value once you do that the kiosk mesh controller from cluster 1 will",
    "start": "1314480",
    "end": "1321020"
  },
  {
    "text": "automatically install the kiosk mesh components the demon set Etc on cluster 2 and then you will be",
    "start": "1321020",
    "end": "1328820"
  },
  {
    "text": "creating a actual chaos so if you look at the top right which is the spec remote cluster so we specify another",
    "start": "1328820",
    "end": "1335720"
  },
  {
    "text": "field which is a remote cluster and I want to do this particular chaos experiment",
    "start": "1335720",
    "end": "1341179"
  },
  {
    "text": "but this will not be applying in cluster 2. we'll be applying this in cluster 1 but the experiment will be running in",
    "start": "1341179",
    "end": "1347539"
  },
  {
    "text": "cluster 2. so that's how it is supposed to work",
    "start": "1347539",
    "end": "1355600"
  },
  {
    "text": "so remote cluster chaos so it is burning burn CPU the name of",
    "start": "1357679",
    "end": "1366080"
  },
  {
    "text": "the chaos the kind of the chaos is stress chaos and it is using the label selector application nginx which is",
    "start": "1366080",
    "end": "1372500"
  },
  {
    "text": "already running like Cube CTL create deploy nginx iPhone image index replica",
    "start": "1372500",
    "end": "1377900"
  },
  {
    "text": "three it is already running on cluster 2. that is why it will be able to select that and then add a stress to one",
    "start": "1377900",
    "end": "1385220"
  },
  {
    "text": "particular node from this so let's apply this",
    "start": "1385220",
    "end": "1393880"
  },
  {
    "text": "remote and now we'll go to Cluster 2 we'll do",
    "start": "1394580",
    "end": "1399860"
  },
  {
    "text": "Cube CTL get stress chaos and we can see that the burn CPU chaos",
    "start": "1399860",
    "end": "1406340"
  },
  {
    "text": "was created and has been running we can actually describe that",
    "start": "1406340",
    "end": "1413380"
  },
  {
    "text": "yep and it has 17 seconds ago uh it has successfully updated the records and stuff like that the",
    "start": "1414380",
    "end": "1422120"
  },
  {
    "text": "only part where you would be needing as of now you'd be needing to like if you",
    "start": "1422120",
    "end": "1427280"
  },
  {
    "text": "want to visualize the stuff using the dashboard you have to use chaos message cluster 2 dashboard itself like the",
    "start": "1427280",
    "end": "1434419"
  },
  {
    "text": "things are not right now visible in the cluster one um so yeah we I mean that's where the",
    "start": "1434419",
    "end": "1440720"
  },
  {
    "text": "community support would be like if if you need the observability from the connected clusters as well",
    "start": "1440720",
    "end": "1447500"
  },
  {
    "text": "um how do uh that should look like in the cluster one is something we can definitely talk with the maintainers and",
    "start": "1447500",
    "end": "1453860"
  },
  {
    "text": "see how things will progress in the future but as of now if you want to view you will be viewing it from the cluster 2's",
    "start": "1453860",
    "end": "1460220"
  },
  {
    "text": "dashboard which is there moving on to the third demo uh which is the port Network latency so this is uh",
    "start": "1460220",
    "end": "1468080"
  },
  {
    "text": "again the network chaos the same one that we did in the first one but we'll be creating a workflow uh for this",
    "start": "1468080",
    "end": "1474799"
  },
  {
    "text": "particular chaos I would have to access",
    "start": "1474799",
    "end": "1481820"
  },
  {
    "text": "this dashboard I don't know if this is also logged out yeah this is also logged out",
    "start": "1481820",
    "end": "1487580"
  },
  {
    "text": "so we need to create the token again",
    "start": "1487580",
    "end": "1491559"
  },
  {
    "text": "log out",
    "start": "1512360",
    "end": "1515500"
  },
  {
    "text": "okay so now we'll be going to the workflows and we'll be creating a new workflow this is the old workflow UI",
    "start": "1522919",
    "end": "1532640"
  },
  {
    "text": "which is there so you can select single serial parallel all this we can we can",
    "start": "1532640",
    "end": "1538159"
  },
  {
    "text": "select parallel we can give it a name cubecon deadline means how for how many",
    "start": "1538159",
    "end": "1544520"
  },
  {
    "text": "minutes this should run two minutes uh then we have to create a child task so we can load from previous experiment so",
    "start": "1544520",
    "end": "1550760"
  },
  {
    "text": "we recently ran burn CPU we'll just uh import that experiment and we'll submit",
    "start": "1550760",
    "end": "1556600"
  },
  {
    "text": "that and we'll create the child task two",
    "start": "1556600",
    "end": "1561799"
  },
  {
    "text": "again we'll import same burn CPU experiment and just submit that",
    "start": "1561799",
    "end": "1569620"
  },
  {
    "text": "and on the right hand side you'll be able to see the workflow custom resource that got generated actually you can save",
    "start": "1570559",
    "end": "1576799"
  },
  {
    "text": "this you can load the same custom resource workflow apply this workflow",
    "start": "1576799",
    "end": "1582500"
  },
  {
    "text": "without even coming to the UI you'll be able to do that so you can see that the templates that you have selected the",
    "start": "1582500",
    "end": "1588860"
  },
  {
    "text": "name the label selector and the stress that you want to do and you submit and you again have to give a name for the",
    "start": "1588860",
    "end": "1594740"
  },
  {
    "text": "workflow namespace is default and deadline is two",
    "start": "1594740",
    "end": "1599900"
  },
  {
    "text": "minutes so it is running it it will be running in the new",
    "start": "1599900",
    "end": "1605600"
  },
  {
    "text": "um what is that one yeah so this is the new workflow",
    "start": "1605600",
    "end": "1612919"
  },
  {
    "text": "um where you actually can visualize how things work you can add add and connect",
    "start": "1612919",
    "end": "1619640"
  },
  {
    "text": "the dots so you can automatically add like uh kernel chaos and give you know",
    "start": "1619640",
    "end": "1625039"
  },
  {
    "text": "give a sample name and provide all its field and submit it will be adding a kernel chaos so you can connect the dots",
    "start": "1625039",
    "end": "1631220"
  },
  {
    "text": "like one after the other after the other or you want to do it parallely how it does so it gives you much more good visualization and you can select all the",
    "start": "1631220",
    "end": "1639080"
  },
  {
    "text": "chaos from here like you want do a pod kill and you can also um directly upload the files you can import",
    "start": "1639080",
    "end": "1647299"
  },
  {
    "text": "a workflow over here so if you have a workflow like a custom resource saved you can pre-import that particular",
    "start": "1647299",
    "end": "1653179"
  },
  {
    "text": "workflow in this uh in in this particular new um UI and it should run",
    "start": "1653179",
    "end": "1659240"
  },
  {
    "text": "automatically so that's the workflow and you can see the previous kubecon",
    "start": "1659240",
    "end": "1664419"
  },
  {
    "text": "workflow got completed so that's the green bars which is there",
    "start": "1664419",
    "end": "1670760"
  },
  {
    "text": "and that got completed so you can see the events that happened",
    "start": "1670760",
    "end": "1676580"
  },
  {
    "text": "and you can also see in general uh the events which are there you can also schedule uh the experiments if you want",
    "start": "1676580",
    "end": "1684740"
  },
  {
    "text": "on like on a continuous man like you want uh weekly or daily a particular",
    "start": "1684740",
    "end": "1690440"
  },
  {
    "text": "type of experiment to be run on a particular time of a day then you can do that as well so",
    "start": "1690440",
    "end": "1698659"
  },
  {
    "text": "yeah good that all the demos worked so recommendations uh is that chaos",
    "start": "1698659",
    "end": "1705380"
  },
  {
    "text": "engineering is now not nascent because it is I think it is part of the",
    "start": "1705380",
    "end": "1711380"
  },
  {
    "text": "software software well-defined software architecture framework as well",
    "start": "1711380",
    "end": "1716840"
  },
  {
    "text": "sorry yeah so it is part of now the well-defined architecture framework like",
    "start": "1716840",
    "end": "1723400"
  },
  {
    "text": "your application is when you design and architect your application in a way you",
    "start": "1723400",
    "end": "1729140"
  },
  {
    "text": "have to have chaos engineering implemented and designed with your",
    "start": "1729140",
    "end": "1734179"
  },
  {
    "text": "architect that with your architecture that you're building for your application yes you have to learn some",
    "start": "1734179",
    "end": "1740419"
  },
  {
    "text": "basic concepts and stuff like that so may learn the theory there are a couple of books as well on chaos engineering so",
    "start": "1740419",
    "end": "1746539"
  },
  {
    "text": "make sure you check them out talk to the maintainers and practitioners because that is something is very important like",
    "start": "1746539",
    "end": "1752360"
  },
  {
    "text": "because maintainers will be able to tell you what are the exact use cases that they are seeing people are using in",
    "start": "1752360",
    "end": "1757880"
  },
  {
    "text": "production a lot and that can help you benefit in your applications as well uh chaos again communicate communication",
    "start": "1757880",
    "end": "1765740"
  },
  {
    "text": "is the key because you are running the chaos engineering is meant to run in production as well uh with the minimized",
    "start": "1765740",
    "end": "1774080"
  },
  {
    "text": "blast radius and that can only happen if you do proper communication so you have to properly communicate what you are",
    "start": "1774080",
    "end": "1781100"
  },
  {
    "text": "doing at which level of your application in production so that is really really very critical uh chaos engineering is",
    "start": "1781100",
    "end": "1787640"
  },
  {
    "text": "again expected to grow even more uh there are more and more tools which are coming in I think there are a few uh",
    "start": "1787640",
    "end": "1793460"
  },
  {
    "text": "companies booths as well which are there and in kubecon that are doing uh more",
    "start": "1793460",
    "end": "1798679"
  },
  {
    "text": "and more on chaos engineering manage chaos engineering introducing giving you a complete platform dashboards so those",
    "start": "1798679",
    "end": "1804799"
  },
  {
    "text": "will those are rising because this is the need and the challenges are here working towards continuous chaos yes",
    "start": "1804799",
    "end": "1811880"
  },
  {
    "text": "everybody wants you know your Argo CD in front of you get as a single source of Truth and then everything happening from",
    "start": "1811880",
    "end": "1818120"
  },
  {
    "text": "there so have that sort of mechanism in place where you have your C cicd",
    "start": "1818120",
    "end": "1823580"
  },
  {
    "text": "implemented and you create your custom resources push them to git and as soon as it is done your chaos experiments run",
    "start": "1823580",
    "end": "1830140"
  },
  {
    "text": "and then yes keep an eye on the new features for chaos mesh because it is getting better",
    "start": "1830140",
    "end": "1836179"
  },
  {
    "text": "day by day join some of the community groups which are there there's also a",
    "start": "1836179",
    "end": "1841360"
  },
  {
    "text": "cncf working group chaos engineering working group that is publishing a paper",
    "start": "1841360",
    "end": "1847039"
  },
  {
    "text": "on the chaos engineering best practices that not only chaos mesh but the other projects like litmus chaos and Chaos",
    "start": "1847039",
    "end": "1853820"
  },
  {
    "text": "mesh and other projects are coming in together to form the best practices kind of thing",
    "start": "1853820",
    "end": "1861278"
  },
  {
    "text": "getting involved uh I think it's it's pretty simple every project needs to grow and to grow they need contributors",
    "start": "1861500",
    "end": "1868820"
  },
  {
    "text": "and that's what we have been hearing in the whole cubecon that we we need contributors and same is with uh chaos",
    "start": "1868820",
    "end": "1875419"
  },
  {
    "text": "mesh just like any other open source project uh so and and you can do in in all Fields like uh you know Dogs new",
    "start": "1875419",
    "end": "1882440"
  },
  {
    "text": "experiments even feedback is pretty important like you know hey this particular feature is missing and if if",
    "start": "1882440",
    "end": "1888380"
  },
  {
    "text": "it if this is there then probably it will cater the this these many use cases so I think those level of feedback is",
    "start": "1888380",
    "end": "1894980"
  },
  {
    "text": "required um and then new features what all new features are expected from you what you",
    "start": "1894980",
    "end": "1901340"
  },
  {
    "text": "are using in chaos engineering and what you feel is missing is something that the maintainers needs to know so this is",
    "start": "1901340",
    "end": "1907340"
  },
  {
    "text": "something I've worked with the maintainers uh to come up with this slide so that you know I can put that",
    "start": "1907340",
    "end": "1912440"
  },
  {
    "text": "particular message uh to you folks uh because chaos engineering a chaos mesh",
    "start": "1912440",
    "end": "1917480"
  },
  {
    "text": "in particular is open to have new maintainers as well so basically if you start your journey right now as maybe",
    "start": "1917480",
    "end": "1924500"
  },
  {
    "text": "trying it out providing feedback then improving some of the stuff that you think that will help others as well",
    "start": "1924500",
    "end": "1931340"
  },
  {
    "text": "probably you'll end up being a maintainer of this project going forward and taking it to the next level and you",
    "start": "1931340",
    "end": "1937880"
  },
  {
    "text": "can see there's a working a chaos mesh Community monthly call which is there so you that happens",
    "start": "1937880",
    "end": "1945880"
  },
  {
    "text": "every month once and it is there in the project chaos mesh so the slack channel",
    "start": "1945880",
    "end": "1951440"
  },
  {
    "text": "is the cncf so if you have if you already are in the cncf slack Channel you can in the slack you can join this",
    "start": "1951440",
    "end": "1957980"
  },
  {
    "text": "particular slack Channel where all the development and the queries about chaos mesh will be answered",
    "start": "1957980",
    "end": "1966320"
  },
  {
    "text": "so yeah uh that's pretty much it that I had for this particular session thank you so much for uh coming in and",
    "start": "1966320",
    "end": "1973880"
  },
  {
    "text": "listening to chaos engineering I hope you got a gist of what uh chaos engineering is",
    "start": "1973880",
    "end": "1979940"
  },
  {
    "text": "um in in terms of conceptually we are injecting some failures to predict you",
    "start": "1979940",
    "end": "1985460"
  },
  {
    "text": "know something goes wrong in production before it actually goes wrong in production trying to mitigate that sort of behavior there are a lot of tools out",
    "start": "1985460",
    "end": "1992299"
  },
  {
    "text": "there to do that and today we discussed about chaos mesh because this session was the chaos mesh maintainer track some",
    "start": "1992299",
    "end": "1998539"
  },
  {
    "text": "of the new features the multi-cluster chaos mesh the TLs support is something that you can try out in 2.5 and they are",
    "start": "1998539",
    "end": "2005019"
  },
  {
    "text": "working on 2.6 and they need more contributors to keep this project going",
    "start": "2005019",
    "end": "2010840"
  },
  {
    "text": "this is actually a cncf incubating project so this is actually already at step level two then the only level which",
    "start": "2010840",
    "end": "2017320"
  },
  {
    "text": "is left is is graduated so I think once the community gives enough feedback and",
    "start": "2017320",
    "end": "2022899"
  },
  {
    "text": "we have the maintainers take it to the next level by a you know having more and",
    "start": "2022899",
    "end": "2028059"
  },
  {
    "text": "more production use cases people like you will be using it and yeah you might",
    "start": "2028059",
    "end": "2034059"
  },
  {
    "text": "end up being a maintainer like it has happened many times even in Linker D it has happened like you start and uh using",
    "start": "2034059",
    "end": "2040480"
  },
  {
    "text": "a project and you end up being a maintainer of the project so yeah I hope I gave the message from the",
    "start": "2040480",
    "end": "2047740"
  },
  {
    "text": "maintainers about the community and getting involved pretty clear and",
    "start": "2047740",
    "end": "2054299"
  },
  {
    "text": "[Applause] and I hope the last session was uh you know you you liked it and you'll go home",
    "start": "2058389",
    "end": "2064960"
  },
  {
    "text": "with uh some interesting stuff I'll put the source code and whatever stuff the",
    "start": "2064960",
    "end": "2071200"
  },
  {
    "text": "crds and all these things and even in the readme how I prepared this environment this cluster how you can",
    "start": "2071200",
    "end": "2077020"
  },
  {
    "text": "exactly replicate uh using Co kubernetes I'll be putting that in a GitHub",
    "start": "2077020",
    "end": "2082419"
  },
  {
    "text": "repository and I'll be updating the slides in the same um you know sched if you go to the",
    "start": "2082419",
    "end": "2088358"
  },
  {
    "text": "session you'll be able to get the slides I'll be updating the slides and the GitHub Link in the slides as well so that you can try it out uh try on CEO",
    "start": "2088359",
    "end": "2095378"
  },
  {
    "text": "kubernetes cluster and run your chaos experiments thank you so much",
    "start": "2095379",
    "end": "2101039"
  }
]