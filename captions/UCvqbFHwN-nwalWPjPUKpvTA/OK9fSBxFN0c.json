[
  {
    "start": "0",
    "end": "49000"
  },
  {
    "text": "hi everyone and welcome to this webinar",
    "start": "0",
    "end": "2460"
  },
  {
    "text": "by verb Force NCD in kubernetes during",
    "start": "2460",
    "end": "6240"
  },
  {
    "text": "the next half hour I will talk about",
    "start": "6240",
    "end": "8460"
  },
  {
    "text": "Verve the client tool for implementing",
    "start": "8460",
    "end": "11280"
  },
  {
    "text": "delivery of your application",
    "start": "11280",
    "end": "13559"
  },
  {
    "text": "I want to discuss some interesting curve",
    "start": "13559",
    "end": "15660"
  },
  {
    "text": "features and cicd challenges that verb",
    "start": "15660",
    "end": "18720"
  },
  {
    "text": "helps solve",
    "start": "18720",
    "end": "21500"
  },
  {
    "text": "my name is Alexei egerchev I work at",
    "start": "22920",
    "end": "25740"
  },
  {
    "text": "Beller a company that provides devops a",
    "start": "25740",
    "end": "28199"
  },
  {
    "text": "real service and within the company I",
    "start": "28199",
    "end": "31199"
  },
  {
    "text": "lead an R D team that focuses on the",
    "start": "31199",
    "end": "33420"
  },
  {
    "text": "delivery to kubernetes",
    "start": "33420",
    "end": "35219"
  },
  {
    "text": "Wicked for experience and best practices",
    "start": "35219",
    "end": "37680"
  },
  {
    "text": "in close collaboration with our devops",
    "start": "37680",
    "end": "40079"
  },
  {
    "text": "teams",
    "start": "40079",
    "end": "40920"
  },
  {
    "text": "Verve is a solution that we use to",
    "start": "40920",
    "end": "43680"
  },
  {
    "text": "implement delivery for our clients and",
    "start": "43680",
    "end": "46079"
  },
  {
    "text": "today I will talk about it",
    "start": "46079",
    "end": "49500"
  },
  {
    "text": "what verb is about",
    "start": "49500",
    "end": "52140"
  },
  {
    "text": "so first some numbers about verb",
    "start": "52140",
    "end": "55800"
  },
  {
    "text": "we have been developing and using growth",
    "start": "55800",
    "end": "57899"
  },
  {
    "text": "in production for seven years",
    "start": "57899",
    "end": "60180"
  },
  {
    "text": "and currently we have more than 5 000",
    "start": "60180",
    "end": "63359"
  },
  {
    "text": "active clients applications that use",
    "start": "63359",
    "end": "65338"
  },
  {
    "text": "verb",
    "start": "65339",
    "end": "66540"
  },
  {
    "text": "since December Verve has been a cncf's",
    "start": "66540",
    "end": "69720"
  },
  {
    "text": "Sandbox project and the last point",
    "start": "69720",
    "end": "72240"
  },
  {
    "text": "is about our growing community",
    "start": "72240",
    "end": "75720"
  },
  {
    "text": "what worth is",
    "start": "75720",
    "end": "77580"
  },
  {
    "text": "first of all Verve is a toolbox it's a",
    "start": "77580",
    "end": "81420"
  },
  {
    "text": "Cy tool that covers a wide range of",
    "start": "81420",
    "end": "83460"
  },
  {
    "text": "tasks related to The Container image",
    "start": "83460",
    "end": "85680"
  },
  {
    "text": "life cycle application deployment",
    "start": "85680",
    "end": "87860"
  },
  {
    "text": "testing and distribution",
    "start": "87860",
    "end": "91259"
  },
  {
    "text": "one of the key highlights of Verve is",
    "start": "91259",
    "end": "94320"
  },
  {
    "text": "its Advanced features for building and",
    "start": "94320",
    "end": "96659"
  },
  {
    "text": "deploying applications",
    "start": "96659",
    "end": "98460"
  },
  {
    "text": "to provide additional capabilities and",
    "start": "98460",
    "end": "100860"
  },
  {
    "text": "functionality Verve includes a building",
    "start": "100860",
    "end": "103500"
  },
  {
    "text": "Builder based on Builder and extended",
    "start": "103500",
    "end": "106500"
  },
  {
    "text": "help",
    "start": "106500",
    "end": "107700"
  },
  {
    "text": "and of course verb is a glue that brings",
    "start": "107700",
    "end": "111299"
  },
  {
    "text": "together different components of the",
    "start": "111299",
    "end": "113159"
  },
  {
    "text": "delivery process and simplifies work",
    "start": "113159",
    "end": "115740"
  },
  {
    "text": "with them",
    "start": "115740",
    "end": "116880"
  },
  {
    "text": "both automates numerous tasks Sterling",
    "start": "116880",
    "end": "120180"
  },
  {
    "text": "say CD workflow and facilitating",
    "start": "120180",
    "end": "122460"
  },
  {
    "text": "efficient management of these components",
    "start": "122460",
    "end": "126119"
  },
  {
    "text": "that's it",
    "start": "126119",
    "end": "128099"
  },
  {
    "text": "what worth is a single all in one two",
    "start": "128099",
    "end": "131640"
  },
  {
    "text": "Advanced features and glue for delivery",
    "start": "131640",
    "end": "135300"
  },
  {
    "text": "components",
    "start": "135300",
    "end": "136800"
  },
  {
    "text": "but what for",
    "start": "136800",
    "end": "138540"
  },
  {
    "text": "Verve provides building blocks for use",
    "start": "138540",
    "end": "141120"
  },
  {
    "text": "in your cicd by clients and implementing",
    "start": "141120",
    "end": "145620"
  },
  {
    "text": "consistent and efficient delivery to",
    "start": "145620",
    "end": "147900"
  },
  {
    "text": "kubernetes",
    "start": "147900",
    "end": "149280"
  },
  {
    "text": "let's look at how it's used there",
    "start": "149280",
    "end": "153060"
  },
  {
    "text": "of can be used not only for buildings",
    "start": "153060",
    "end": "155280"
  },
  {
    "text": "LCD but also for local and inclustive",
    "start": "155280",
    "end": "159540"
  },
  {
    "text": "development",
    "start": "159540",
    "end": "160680"
  },
  {
    "text": "in the context of cicd dwarf can be used",
    "start": "160680",
    "end": "163800"
  },
  {
    "text": "for building tagging and Publishing",
    "start": "163800",
    "end": "167280"
  },
  {
    "text": "images",
    "start": "167280",
    "end": "168360"
  },
  {
    "text": "running source code and application",
    "start": "168360",
    "end": "170580"
  },
  {
    "text": "testing in kubernetes",
    "start": "170580",
    "end": "172560"
  },
  {
    "text": "deploying temporary environments such as",
    "start": "172560",
    "end": "174780"
  },
  {
    "text": "review and death",
    "start": "174780",
    "end": "176340"
  },
  {
    "text": "deploying persistent environments",
    "start": "176340",
    "end": "178500"
  },
  {
    "text": "production-like and production",
    "start": "178500",
    "end": "181379"
  },
  {
    "text": "if we talk about isolated environments",
    "start": "181379",
    "end": "183900"
  },
  {
    "text": "in such a scenario verb can be used for",
    "start": "183900",
    "end": "186840"
  },
  {
    "text": "the application distribution at the last",
    "start": "186840",
    "end": "189360"
  },
  {
    "text": "step of the dev Pipeline and then",
    "start": "189360",
    "end": "191940"
  },
  {
    "text": "for for the application deployment in an",
    "start": "191940",
    "end": "195239"
  },
  {
    "text": "isolated environment",
    "start": "195239",
    "end": "197700"
  },
  {
    "text": "in addition to Verve there are other",
    "start": "197700",
    "end": "200159"
  },
  {
    "text": "solution in the last step",
    "start": "200159",
    "end": "203120"
  },
  {
    "text": "and flux",
    "start": "203120",
    "end": "205200"
  },
  {
    "text": "this highlights the possibility of",
    "start": "205200",
    "end": "207300"
  },
  {
    "text": "implementing hybrid approaches where the",
    "start": "207300",
    "end": "209760"
  },
  {
    "text": "user can benefit from both Solutions",
    "start": "209760",
    "end": "213720"
  },
  {
    "text": "a few words about project configuration",
    "start": "213720",
    "end": "216120"
  },
  {
    "text": "with golf Verve uses yaml configuration",
    "start": "216120",
    "end": "219780"
  },
  {
    "text": "to describe how your application should",
    "start": "219780",
    "end": "221940"
  },
  {
    "text": "be built and deployed a typical project",
    "start": "221940",
    "end": "224940"
  },
  {
    "text": "configuration includes several files",
    "start": "224940",
    "end": "227280"
  },
  {
    "text": "birth yaml one or several Docker files",
    "start": "227280",
    "end": "230879"
  },
  {
    "text": "and Helm chart",
    "start": "230879",
    "end": "232440"
  },
  {
    "text": "by default in dot help directory",
    "start": "232440",
    "end": "235379"
  },
  {
    "text": "this configuration is enough to",
    "start": "235379",
    "end": "237480"
  },
  {
    "text": "demonstrate growth in action and we will",
    "start": "237480",
    "end": "239940"
  },
  {
    "text": "come back to it later",
    "start": "239940",
    "end": "242580"
  },
  {
    "text": "the introduction is over and we can move",
    "start": "242580",
    "end": "245640"
  },
  {
    "text": "on to the central part of this webinar I",
    "start": "245640",
    "end": "248580"
  },
  {
    "text": "would like to talk about the Practical",
    "start": "248580",
    "end": "250080"
  },
  {
    "text": "crcp cases and highlight some of the",
    "start": "250080",
    "end": "253200"
  },
  {
    "text": "interesting work features and approaches",
    "start": "253200",
    "end": "256739"
  },
  {
    "start": "256000",
    "end": "593000"
  },
  {
    "text": "the first part",
    "start": "256739",
    "end": "258419"
  },
  {
    "text": "is about the container image life cycle",
    "start": "258419",
    "end": "262500"
  },
  {
    "text": "in this part I will discuss our approach",
    "start": "262500",
    "end": "265440"
  },
  {
    "text": "to caching management tagging promoting",
    "start": "265440",
    "end": "268500"
  },
  {
    "text": "and cleaning up all the container images",
    "start": "268500",
    "end": "273180"
  },
  {
    "text": "so let's start",
    "start": "273180",
    "end": "275220"
  },
  {
    "text": "and start from the beginning",
    "start": "275220",
    "end": "278040"
  },
  {
    "text": "let's recall how caching works when we",
    "start": "278040",
    "end": "280979"
  },
  {
    "text": "build images locally with docker",
    "start": "280979",
    "end": "283919"
  },
  {
    "text": "so",
    "start": "283919",
    "end": "285000"
  },
  {
    "text": "we have the following Docker file and",
    "start": "285000",
    "end": "288240"
  },
  {
    "text": "start the build",
    "start": "288240",
    "end": "290100"
  },
  {
    "text": "Docker builds container image layer by",
    "start": "290100",
    "end": "293220"
  },
  {
    "text": "layer running Docker file instructions",
    "start": "293220",
    "end": "295520"
  },
  {
    "text": "and as a result the build is successful",
    "start": "295520",
    "end": "299040"
  },
  {
    "text": "and we have a built image",
    "start": "299040",
    "end": "301620"
  },
  {
    "text": "when we rebuild everything will be taken",
    "start": "301620",
    "end": "304440"
  },
  {
    "text": "from the local cache",
    "start": "304440",
    "end": "307139"
  },
  {
    "text": "let's modify go mode and go some in the",
    "start": "307139",
    "end": "310139"
  },
  {
    "text": "project and build the image again",
    "start": "310139",
    "end": "313139"
  },
  {
    "text": "this leads to the build of all layers",
    "start": "313139",
    "end": "315360"
  },
  {
    "text": "from the corresponding one",
    "start": "315360",
    "end": "317280"
  },
  {
    "text": "and when we rebuild everything will be",
    "start": "317280",
    "end": "319860"
  },
  {
    "text": "taken from the cache",
    "start": "319860",
    "end": "321900"
  },
  {
    "text": "nothing special",
    "start": "321900",
    "end": "323520"
  },
  {
    "text": "because its basics",
    "start": "323520",
    "end": "325919"
  },
  {
    "text": "let's summarize properties that such",
    "start": "325919",
    "end": "328259"
  },
  {
    "text": "build has",
    "start": "328259",
    "end": "329699"
  },
  {
    "text": "layers are used between builds cool",
    "start": "329699",
    "end": "333199"
  },
  {
    "text": "layers are determined by the previous",
    "start": "333199",
    "end": "335400"
  },
  {
    "text": "layer Docker file extraction and used",
    "start": "335400",
    "end": "338400"
  },
  {
    "text": "files from the build context",
    "start": "338400",
    "end": "341520"
  },
  {
    "text": "layers are read only immutable and",
    "start": "341520",
    "end": "344639"
  },
  {
    "text": "Docker responsible for managing parallel",
    "start": "344639",
    "end": "346979"
  },
  {
    "text": "builds and cash on the host",
    "start": "346979",
    "end": "349320"
  },
  {
    "text": "this is a nice properties but",
    "start": "349320",
    "end": "352320"
  },
  {
    "text": "they only run per host and don't scale",
    "start": "352320",
    "end": "355259"
  },
  {
    "text": "to a group of runners in cicd",
    "start": "355259",
    "end": "358259"
  },
  {
    "text": "move on let's look at one more scenario",
    "start": "358259",
    "end": "361199"
  },
  {
    "text": "with Docker image publication",
    "start": "361199",
    "end": "363840"
  },
  {
    "text": "in Docker we have three comments to do",
    "start": "363840",
    "end": "366539"
  },
  {
    "text": "that build deck and push so build tag",
    "start": "366539",
    "end": "371520"
  },
  {
    "text": "and push here it is the image is",
    "start": "371520",
    "end": "375120"
  },
  {
    "text": "published to The Container registry",
    "start": "375120",
    "end": "378860"
  },
  {
    "text": "now we have enough context to see how",
    "start": "379020",
    "end": "382199"
  },
  {
    "text": "the same is done with girth",
    "start": "382199",
    "end": "385319"
  },
  {
    "text": "at the process",
    "start": "385319",
    "end": "387780"
  },
  {
    "text": "verb builds tags and pushes an image for",
    "start": "387780",
    "end": "391380"
  },
  {
    "text": "a layer into the Container registry done",
    "start": "391380",
    "end": "394919"
  },
  {
    "text": "and this is done the same way for each",
    "start": "394919",
    "end": "397259"
  },
  {
    "text": "layer",
    "start": "397259",
    "end": "399360"
  },
  {
    "text": "then we run the same build but on an",
    "start": "399360",
    "end": "402419"
  },
  {
    "text": "arbitrary cost as a result nothing",
    "start": "402419",
    "end": "405479"
  },
  {
    "text": "happens",
    "start": "405479",
    "end": "406979"
  },
  {
    "text": "because all the layers have already been",
    "start": "406979",
    "end": "409880"
  },
  {
    "text": "built and stored in the container",
    "start": "409880",
    "end": "412380"
  },
  {
    "text": "registry we don't push anything from the",
    "start": "412380",
    "end": "414960"
  },
  {
    "text": "host and pull from the registry nothing",
    "start": "414960",
    "end": "418139"
  },
  {
    "text": "at all",
    "start": "418139",
    "end": "420120"
  },
  {
    "text": "to sum up layers are used between all",
    "start": "420120",
    "end": "423360"
  },
  {
    "text": "builds layers are determined on the same",
    "start": "423360",
    "end": "426300"
  },
  {
    "text": "Principle as with Docker layers are also",
    "start": "426300",
    "end": "429600"
  },
  {
    "text": "immutable because Verve coordinates the",
    "start": "429600",
    "end": "433259"
  },
  {
    "text": "work of all builders",
    "start": "433259",
    "end": "436400"
  },
  {
    "text": "let's talk about the image usage what's",
    "start": "436440",
    "end": "439919"
  },
  {
    "text": "the synchronization process is and how",
    "start": "439919",
    "end": "442500"
  },
  {
    "text": "we can use images with verb",
    "start": "442500",
    "end": "445919"
  },
  {
    "text": "this improvisation is performed within",
    "start": "445919",
    "end": "448259"
  },
  {
    "text": "all verb comments that require images",
    "start": "448259",
    "end": "450660"
  },
  {
    "text": "during operation",
    "start": "450660",
    "end": "452580"
  },
  {
    "text": "after the synchronization the command",
    "start": "452580",
    "end": "454979"
  },
  {
    "text": "continues with the final image which",
    "start": "454979",
    "end": "457259"
  },
  {
    "text": "matches the content-based stack for the",
    "start": "457259",
    "end": "459180"
  },
  {
    "text": "last layer",
    "start": "459180",
    "end": "460319"
  },
  {
    "text": "let's look at some verb comments in",
    "start": "460319",
    "end": "462660"
  },
  {
    "text": "action",
    "start": "462660",
    "end": "464340"
  },
  {
    "text": "suppose we want to run some Source Code",
    "start": "464340",
    "end": "467340"
  },
  {
    "text": "test",
    "start": "467340",
    "end": "468180"
  },
  {
    "text": "for example a unit test",
    "start": "468180",
    "end": "471060"
  },
  {
    "text": "we add a Docker file for our image",
    "start": "471060",
    "end": "474780"
  },
  {
    "text": "Define it in a verb Yama",
    "start": "474780",
    "end": "477300"
  },
  {
    "text": "and then we run The Verve Cube around",
    "start": "477300",
    "end": "480060"
  },
  {
    "text": "comment",
    "start": "480060",
    "end": "482539"
  },
  {
    "text": "we use the image name from Verve yaml",
    "start": "482819",
    "end": "485460"
  },
  {
    "text": "and the command we want to run on the",
    "start": "485460",
    "end": "488039"
  },
  {
    "text": "image",
    "start": "488039",
    "end": "490020"
  },
  {
    "text": "as a result verb runs the command and",
    "start": "490020",
    "end": "493259"
  },
  {
    "text": "the appropriate image in kubernetes",
    "start": "493259",
    "end": "495660"
  },
  {
    "text": "let's consider another example",
    "start": "495660",
    "end": "499020"
  },
  {
    "text": "we want to deploy our application to",
    "start": "499020",
    "end": "501000"
  },
  {
    "text": "kubernetes",
    "start": "501000",
    "end": "502560"
  },
  {
    "text": "in addition to the previous",
    "start": "502560",
    "end": "503819"
  },
  {
    "text": "configuration a Helm chart is added",
    "start": "503819",
    "end": "508020"
  },
  {
    "text": "in templates instead of an image tag we",
    "start": "508020",
    "end": "511919"
  },
  {
    "text": "use a special Helm value which verb",
    "start": "511919",
    "end": "514500"
  },
  {
    "text": "passes at runtime",
    "start": "514500",
    "end": "516839"
  },
  {
    "text": "after calling the verb converge command",
    "start": "516839",
    "end": "519060"
  },
  {
    "text": "the application is deployed to the",
    "start": "519060",
    "end": "521700"
  },
  {
    "text": "kubernetes",
    "start": "521700",
    "end": "523020"
  },
  {
    "text": "this is how it works in both examples",
    "start": "523020",
    "end": "526200"
  },
  {
    "text": "the user doesn't work with text directly",
    "start": "526200",
    "end": "530360"
  },
  {
    "text": "thus we propose to pass release",
    "start": "530399",
    "end": "533160"
  },
  {
    "text": "artifacts through all steps and delivery",
    "start": "533160",
    "end": "535620"
  },
  {
    "text": "environments",
    "start": "535620",
    "end": "536940"
  },
  {
    "text": "in such a scenario the user does not",
    "start": "536940",
    "end": "539640"
  },
  {
    "text": "need to think about Daniel and in",
    "start": "539640",
    "end": "542160"
  },
  {
    "text": "general about what historian is a",
    "start": "542160",
    "end": "544080"
  },
  {
    "text": "container registry",
    "start": "544080",
    "end": "545339"
  },
  {
    "text": "but why shouldn't users think about it",
    "start": "545339",
    "end": "548880"
  },
  {
    "text": "because Verve can manage hook container",
    "start": "548880",
    "end": "551160"
  },
  {
    "text": "image life cycle here we briefly look at",
    "start": "551160",
    "end": "554580"
  },
  {
    "text": "our approach to cleaning up to continue",
    "start": "554580",
    "end": "556560"
  },
  {
    "text": "registry",
    "start": "556560",
    "end": "558120"
  },
  {
    "text": "birth offers its approach to Clinic",
    "start": "558120",
    "end": "561240"
  },
  {
    "text": "which takes into account images",
    "start": "561240",
    "end": "563279"
  },
  {
    "text": "currently in use in kubernetes",
    "start": "563279",
    "end": "566519"
  },
  {
    "text": "and once that are somehow related to",
    "start": "566519",
    "end": "569220"
  },
  {
    "text": "developers ongoing activities based on",
    "start": "569220",
    "end": "571500"
  },
  {
    "text": "git",
    "start": "571500",
    "end": "573000"
  },
  {
    "text": "when cleaning verse scans all used",
    "start": "573000",
    "end": "575580"
  },
  {
    "text": "images in kubernetes",
    "start": "575580",
    "end": "577860"
  },
  {
    "text": "and ignore them",
    "start": "577860",
    "end": "580700"
  },
  {
    "text": "knows what images were used on which",
    "start": "580700",
    "end": "583320"
  },
  {
    "text": "commits and ignore them according to the",
    "start": "583320",
    "end": "585899"
  },
  {
    "text": "user selected key policies",
    "start": "585899",
    "end": "588240"
  },
  {
    "text": "and remove the rest",
    "start": "588240",
    "end": "590880"
  },
  {
    "text": "just like that",
    "start": "590880",
    "end": "592920"
  },
  {
    "text": "with this I end the part about the",
    "start": "592920",
    "end": "595620"
  },
  {
    "start": "593000",
    "end": "969000"
  },
  {
    "text": "container image lifecycle",
    "start": "595620",
    "end": "597360"
  },
  {
    "text": "it was a small overview of the main",
    "start": "597360",
    "end": "599519"
  },
  {
    "text": "graph approaches",
    "start": "599519",
    "end": "601440"
  },
  {
    "text": "in the next part we will talk about the",
    "start": "601440",
    "end": "604140"
  },
  {
    "text": "application deployment tracking",
    "start": "604140",
    "end": "606660"
  },
  {
    "text": "in this part I will touch on such topics",
    "start": "606660",
    "end": "609480"
  },
  {
    "text": "as",
    "start": "609480",
    "end": "610440"
  },
  {
    "text": "how to wait for an application to be",
    "start": "610440",
    "end": "612420"
  },
  {
    "text": "ready during deployment",
    "start": "612420",
    "end": "614339"
  },
  {
    "text": "how to stop a failure deployment in a",
    "start": "614339",
    "end": "616680"
  },
  {
    "text": "timely manner",
    "start": "616680",
    "end": "618120"
  },
  {
    "text": "how to make the deployment process",
    "start": "618120",
    "end": "619980"
  },
  {
    "text": "transparent and verbose",
    "start": "619980",
    "end": "622980"
  },
  {
    "text": "and I would like to start this part by",
    "start": "622980",
    "end": "625320"
  },
  {
    "text": "looking at what help can do in this",
    "start": "625320",
    "end": "627300"
  },
  {
    "text": "context",
    "start": "627300",
    "end": "628200"
  },
  {
    "text": "but it is valid not only for help",
    "start": "628200",
    "end": "631800"
  },
  {
    "text": "start from the first example we have",
    "start": "631800",
    "end": "634620"
  },
  {
    "text": "Helm and we deploy our application to",
    "start": "634620",
    "end": "636959"
  },
  {
    "text": "kubernetes",
    "start": "636959",
    "end": "638279"
  },
  {
    "text": "let's run hello grade command",
    "start": "638279",
    "end": "641339"
  },
  {
    "text": "Helm Appliance manifest to kubernetes",
    "start": "641339",
    "end": "644700"
  },
  {
    "text": "and kubernetes applies manifests",
    "start": "644700",
    "end": "648360"
  },
  {
    "text": "and that tells Helms that manifests have",
    "start": "648360",
    "end": "651779"
  },
  {
    "text": "been applied successfully",
    "start": "651779",
    "end": "654600"
  },
  {
    "text": "after that the helm command complete",
    "start": "654600",
    "end": "657899"
  },
  {
    "text": "successfully",
    "start": "657899",
    "end": "659700"
  },
  {
    "text": "cool but we need more because we want to",
    "start": "659700",
    "end": "663540"
  },
  {
    "text": "know when the application is ready right",
    "start": "663540",
    "end": "667140"
  },
  {
    "text": "second example",
    "start": "667140",
    "end": "668700"
  },
  {
    "text": "account has a weight option that allows",
    "start": "668700",
    "end": "670920"
  },
  {
    "text": "us to wait until the application becomes",
    "start": "670920",
    "end": "672899"
  },
  {
    "text": "ready",
    "start": "672899",
    "end": "673740"
  },
  {
    "text": "after the manifests are applied Helm",
    "start": "673740",
    "end": "676500"
  },
  {
    "text": "start checking the radiance of the",
    "start": "676500",
    "end": "678180"
  },
  {
    "text": "application",
    "start": "678180",
    "end": "680459"
  },
  {
    "text": "and when the application is ready the",
    "start": "680459",
    "end": "682860"
  },
  {
    "text": "command to complete successfully",
    "start": "682860",
    "end": "685980"
  },
  {
    "text": "but Helm does not guarantee that the",
    "start": "685980",
    "end": "688500"
  },
  {
    "text": "application is ready",
    "start": "688500",
    "end": "690120"
  },
  {
    "text": "because it's based on the status of the",
    "start": "690120",
    "end": "693120"
  },
  {
    "text": "main resources in kubernetes",
    "start": "693120",
    "end": "696420"
  },
  {
    "text": "but to be honest for simple scenarios",
    "start": "696420",
    "end": "698760"
  },
  {
    "text": "help dragon is usually enough",
    "start": "698760",
    "end": "702360"
  },
  {
    "text": "certain example let's talk about timeout",
    "start": "702360",
    "end": "705480"
  },
  {
    "text": "here after applying the Manifest the",
    "start": "705480",
    "end": "708540"
  },
  {
    "text": "command will exit either if the",
    "start": "708540",
    "end": "710640"
  },
  {
    "text": "application is ready or the timeout has",
    "start": "710640",
    "end": "713339"
  },
  {
    "text": "expired",
    "start": "713339",
    "end": "714420"
  },
  {
    "text": "let's imagine the application failed",
    "start": "714420",
    "end": "718680"
  },
  {
    "text": "and we wait for the timeout",
    "start": "718680",
    "end": "721380"
  },
  {
    "text": "wait and wait and wait",
    "start": "721380",
    "end": "725100"
  },
  {
    "text": "the application failed a long time ago",
    "start": "725100",
    "end": "727860"
  },
  {
    "text": "but we have to wait for the timeout",
    "start": "727860",
    "end": "731399"
  },
  {
    "text": "a logical question here is what I'm out",
    "start": "731399",
    "end": "733860"
  },
  {
    "text": "to set for deployment",
    "start": "733860",
    "end": "735779"
  },
  {
    "text": "if you estimate it too low",
    "start": "735779",
    "end": "737880"
  },
  {
    "text": "the deployment May Fail too quickly even",
    "start": "737880",
    "end": "740459"
  },
  {
    "text": "before it has a chance to make progress",
    "start": "740459",
    "end": "743100"
  },
  {
    "text": "if you estimate it too high the",
    "start": "743100",
    "end": "745380"
  },
  {
    "text": "deployment will have to wait a long time",
    "start": "745380",
    "end": "747959"
  },
  {
    "text": "you have to design between two bad",
    "start": "747959",
    "end": "750420"
  },
  {
    "text": "options",
    "start": "750420",
    "end": "752839"
  },
  {
    "text": "and the last example again the same",
    "start": "753540",
    "end": "756420"
  },
  {
    "text": "steps and we wait wait we are waiting",
    "start": "756420",
    "end": "760740"
  },
  {
    "text": "and don't know what's happened with our",
    "start": "760740",
    "end": "763019"
  },
  {
    "text": "application",
    "start": "763019",
    "end": "764279"
  },
  {
    "text": "we have to go to the cluster and check",
    "start": "764279",
    "end": "766260"
  },
  {
    "text": "the status ourselves",
    "start": "766260",
    "end": "768420"
  },
  {
    "text": "Helm does not show any lock and we",
    "start": "768420",
    "end": "770940"
  },
  {
    "text": "should track it ourselves",
    "start": "770940",
    "end": "773459"
  },
  {
    "text": "let's look at what verb has to offer",
    "start": "773459",
    "end": "777920"
  },
  {
    "text": "so we run Helm and reverse",
    "start": "781519",
    "end": "784320"
  },
  {
    "text": "simultaneously and do the same task",
    "start": "784320",
    "end": "788120"
  },
  {
    "text": "as you can see we have any container",
    "start": "791160",
    "end": "793920"
  },
  {
    "text": "logs and application log",
    "start": "793920",
    "end": "796500"
  },
  {
    "text": "and also we have status progress for the",
    "start": "796500",
    "end": "800519"
  },
  {
    "text": "earliest resources and also you can see",
    "start": "800519",
    "end": "803040"
  },
  {
    "text": "the desired server state for each",
    "start": "803040",
    "end": "805079"
  },
  {
    "text": "resource in status",
    "start": "805079",
    "end": "807600"
  },
  {
    "text": "and when the application is ready verb",
    "start": "807600",
    "end": "810480"
  },
  {
    "text": "command complete successfully",
    "start": "810480",
    "end": "813860"
  },
  {
    "text": "and the same story with hell but without",
    "start": "815779",
    "end": "818880"
  },
  {
    "text": "any observability",
    "start": "818880",
    "end": "821600"
  },
  {
    "text": "so let's look at another example fail at",
    "start": "821600",
    "end": "825300"
  },
  {
    "text": "deployment",
    "start": "825300",
    "end": "827779"
  },
  {
    "text": "so we have an error",
    "start": "839120",
    "end": "841620"
  },
  {
    "text": "it's fresh look back off and Verve gives",
    "start": "841620",
    "end": "845339"
  },
  {
    "text": "the application one more chance",
    "start": "845339",
    "end": "848540"
  },
  {
    "text": "but the problem persists and verbs and",
    "start": "857459",
    "end": "860040"
  },
  {
    "text": "the failure deployment",
    "start": "860040",
    "end": "863060"
  },
  {
    "text": "the command is terminated we have all",
    "start": "863220",
    "end": "865980"
  },
  {
    "text": "kubernetes events that happen during the",
    "start": "865980",
    "end": "868139"
  },
  {
    "text": "deployment",
    "start": "868139",
    "end": "869220"
  },
  {
    "text": "and we have enough information to start",
    "start": "869220",
    "end": "871320"
  },
  {
    "text": "fixing the problem and we do that",
    "start": "871320",
    "end": "875060"
  },
  {
    "text": "we change columns",
    "start": "875060",
    "end": "878899"
  },
  {
    "text": "and then rendible again",
    "start": "883740",
    "end": "887300"
  },
  {
    "text": "Cool Fix It what's about hell Helen",
    "start": "892199",
    "end": "896339"
  },
  {
    "text": "waits for a timeout it's set to one",
    "start": "896339",
    "end": "898560"
  },
  {
    "text": "minute by default Health has a five",
    "start": "898560",
    "end": "900779"
  },
  {
    "text": "minute timeout",
    "start": "900779",
    "end": "902300"
  },
  {
    "text": "mm-hmm so the comment is terminated with",
    "start": "902300",
    "end": "906300"
  },
  {
    "text": "an error timed out waiting for the",
    "start": "906300",
    "end": "909360"
  },
  {
    "text": "condition",
    "start": "909360",
    "end": "910680"
  },
  {
    "text": "it doesn't help us and we start about",
    "start": "910680",
    "end": "913260"
  },
  {
    "text": "shooting in kubernetes ourselves",
    "start": "913260",
    "end": "916139"
  },
  {
    "text": "that's all that's a big difference",
    "start": "916139",
    "end": "918420"
  },
  {
    "text": "between hell and birth",
    "start": "918420",
    "end": "921839"
  },
  {
    "text": "so what have we done in the context of",
    "start": "921839",
    "end": "924779"
  },
  {
    "text": "the application deployment tracker",
    "start": "924779",
    "end": "927300"
  },
  {
    "text": "smart waiting for resources to become",
    "start": "927300",
    "end": "929639"
  },
  {
    "text": "ready verb has generic tracking for all",
    "start": "929639",
    "end": "932639"
  },
  {
    "text": "resources that is based on the",
    "start": "932639",
    "end": "934260"
  },
  {
    "text": "information about the resource available",
    "start": "934260",
    "end": "936060"
  },
  {
    "text": "in the cluster",
    "start": "936060",
    "end": "938040"
  },
  {
    "text": "instant termination or failed deployment",
    "start": "938040",
    "end": "940800"
  },
  {
    "text": "not only timeout verb does fail fast",
    "start": "940800",
    "end": "944639"
  },
  {
    "text": "based on events in the cluster",
    "start": "944639",
    "end": "947880"
  },
  {
    "text": "deployment progress logs system events",
    "start": "947880",
    "end": "951240"
  },
  {
    "text": "and application errors verb gives enough",
    "start": "951240",
    "end": "954180"
  },
  {
    "text": "information for troubleshooting and just",
    "start": "954180",
    "end": "956579"
  },
  {
    "text": "for observability",
    "start": "956579",
    "end": "959160"
  },
  {
    "text": "and the last Point configurable behavior",
    "start": "959160",
    "end": "962339"
  },
  {
    "text": "for each resource all of the above you",
    "start": "962339",
    "end": "965160"
  },
  {
    "text": "can configure for issue release resource",
    "start": "965160",
    "end": "969060"
  },
  {
    "start": "969000",
    "end": "976000"
  },
  {
    "text": "in this part I only talk about tracking",
    "start": "969060",
    "end": "972420"
  },
  {
    "text": "but the point where features are not",
    "start": "972420",
    "end": "975060"
  },
  {
    "text": "limited to this",
    "start": "975060",
    "end": "976980"
  },
  {
    "start": "976000",
    "end": "1055000"
  },
  {
    "text": "at the very end I would like to talk a",
    "start": "976980",
    "end": "979560"
  },
  {
    "text": "little about how we propose to",
    "start": "979560",
    "end": "981120"
  },
  {
    "text": "distribute service artifacts of the",
    "start": "981120",
    "end": "983880"
  },
  {
    "text": "application and deploy them in an",
    "start": "983880",
    "end": "986279"
  },
  {
    "text": "isolated environments",
    "start": "986279",
    "end": "988800"
  },
  {
    "text": "we suggest using bundles for the",
    "start": "988800",
    "end": "990959"
  },
  {
    "text": "application distribution",
    "start": "990959",
    "end": "992579"
  },
  {
    "text": "a bundle is a way to distribute a chart",
    "start": "992579",
    "end": "995459"
  },
  {
    "text": "and its related images as a single",
    "start": "995459",
    "end": "997980"
  },
  {
    "text": "entity",
    "start": "997980",
    "end": "998940"
  },
  {
    "text": "with a bundle you can pack the",
    "start": "998940",
    "end": "1001459"
  },
  {
    "text": "application state for future deployments",
    "start": "1001459",
    "end": "1003980"
  },
  {
    "text": "a bundle is a distribution format that",
    "start": "1003980",
    "end": "1007399"
  },
  {
    "text": "follows a specific structure for",
    "start": "1007399",
    "end": "1009139"
  },
  {
    "text": "organizing Health charts",
    "start": "1009139",
    "end": "1011180"
  },
  {
    "text": "essentially a published bundle is a just",
    "start": "1011180",
    "end": "1014420"
  },
  {
    "text": "chart stored in a RCI registry along",
    "start": "1014420",
    "end": "1018019"
  },
  {
    "text": "with its images",
    "start": "1018019",
    "end": "1020540"
  },
  {
    "text": "the published bundle can be copied from",
    "start": "1020540",
    "end": "1022880"
  },
  {
    "text": "one container registry to another",
    "start": "1022880",
    "end": "1025459"
  },
  {
    "text": "as well as unloaded and uploaded into",
    "start": "1025459",
    "end": "1028040"
  },
  {
    "text": "the Container registry",
    "start": "1028040",
    "end": "1029900"
  },
  {
    "text": "in this case the helm chart and",
    "start": "1029900",
    "end": "1032780"
  },
  {
    "text": "Associated images are packed into a dark",
    "start": "1032780",
    "end": "1035360"
  },
  {
    "text": "archive",
    "start": "1035360",
    "end": "1037339"
  },
  {
    "text": "the published bundle can be deployed",
    "start": "1037339",
    "end": "1039380"
  },
  {
    "text": "using verb hello",
    "start": "1039380",
    "end": "1042100"
  },
  {
    "text": "and other solutions that support working",
    "start": "1042100",
    "end": "1044959"
  },
  {
    "text": "with health charts from the ICI",
    "start": "1044959",
    "end": "1046819"
  },
  {
    "text": "Repository",
    "start": "1046819",
    "end": "1048319"
  },
  {
    "text": "with bundles you can reconcile the state",
    "start": "1048319",
    "end": "1051260"
  },
  {
    "text": "from the container registry to",
    "start": "1051260",
    "end": "1052700"
  },
  {
    "text": "kubernetes without git",
    "start": "1052700",
    "end": "1056360"
  },
  {
    "start": "1055000",
    "end": "1221000"
  },
  {
    "text": "the main part is over",
    "start": "1056360",
    "end": "1058700"
  },
  {
    "text": "lastly I would like to take a quick look",
    "start": "1058700",
    "end": "1061280"
  },
  {
    "text": "at the birth website",
    "start": "1061280",
    "end": "1064960"
  },
  {
    "text": "open your file",
    "start": "1065720",
    "end": "1068600"
  },
  {
    "text": "and go to the documentation section",
    "start": "1068600",
    "end": "1071780"
  },
  {
    "text": "the user immediately gets to the page",
    "start": "1071780",
    "end": "1074059"
  },
  {
    "text": "install and run",
    "start": "1074059",
    "end": "1076039"
  },
  {
    "text": "the user will find all the necessary",
    "start": "1076039",
    "end": "1078980"
  },
  {
    "text": "information to get started with locally",
    "start": "1078980",
    "end": "1081440"
  },
  {
    "text": "and in cicd",
    "start": "1081440",
    "end": "1085039"
  },
  {
    "text": "in the local development section you",
    "start": "1085039",
    "end": "1087919"
  },
  {
    "text": "will find step-by-step instructions to",
    "start": "1087919",
    "end": "1090200"
  },
  {
    "text": "set up your environment",
    "start": "1090200",
    "end": "1093220"
  },
  {
    "text": "and also start using drawer for",
    "start": "1093740",
    "end": "1096440"
  },
  {
    "text": "developing and testing application in",
    "start": "1096440",
    "end": "1099200"
  },
  {
    "text": "kubernetes",
    "start": "1099200",
    "end": "1100940"
  },
  {
    "text": "the CI CD section covers all the",
    "start": "1100940",
    "end": "1104059"
  },
  {
    "text": "instructions for configuring the cicd",
    "start": "1104059",
    "end": "1106220"
  },
  {
    "text": "process with verb and your cicd system",
    "start": "1106220",
    "end": "1110059"
  },
  {
    "text": "it includes all the necessary settings",
    "start": "1110059",
    "end": "1112100"
  },
  {
    "text": "both for the CI system and kubernetes",
    "start": "1112100",
    "end": "1117280"
  },
  {
    "text": "the documentation also provides a",
    "start": "1118100",
    "end": "1120860"
  },
  {
    "text": "complex example and a ready-to-use",
    "start": "1120860",
    "end": "1123080"
  },
  {
    "text": "workflow based on the best practices",
    "start": "1123080",
    "end": "1127360"
  },
  {
    "text": "the documentation offers a comprehensive",
    "start": "1128660",
    "end": "1131780"
  },
  {
    "text": "resource to explore and understand all",
    "start": "1131780",
    "end": "1134900"
  },
  {
    "text": "the capabilities of verb",
    "start": "1134900",
    "end": "1137660"
  },
  {
    "text": "starting with overview articles and",
    "start": "1137660",
    "end": "1140360"
  },
  {
    "text": "progressing through the Practical",
    "start": "1140360",
    "end": "1141740"
  },
  {
    "text": "sections user can gain a deep",
    "start": "1141740",
    "end": "1144380"
  },
  {
    "text": "understanding of first functional notice",
    "start": "1144380",
    "end": "1146720"
  },
  {
    "text": "and apply them effectively",
    "start": "1146720",
    "end": "1150640"
  },
  {
    "text": "as an example let's explore the",
    "start": "1150860",
    "end": "1153559"
  },
  {
    "text": "deployment aspect of ferv",
    "start": "1153559",
    "end": "1157299"
  },
  {
    "text": "let's start with an overview which will",
    "start": "1157700",
    "end": "1160760"
  },
  {
    "text": "introduce you to the main features of",
    "start": "1160760",
    "end": "1162799"
  },
  {
    "text": "deployment process",
    "start": "1162799",
    "end": "1164240"
  },
  {
    "text": "giving you a clear understanding of its",
    "start": "1164240",
    "end": "1167000"
  },
  {
    "text": "functionality and operation",
    "start": "1167000",
    "end": "1171280"
  },
  {
    "text": "following that we can delve into",
    "start": "1171679",
    "end": "1174140"
  },
  {
    "text": "specific areas such as trekking which we",
    "start": "1174140",
    "end": "1177380"
  },
  {
    "text": "discussed early",
    "start": "1177380",
    "end": "1180160"
  },
  {
    "text": "also we have cicd guide for Developers",
    "start": "1182539",
    "end": "1186620"
  },
  {
    "text": "but it will be useful to devops",
    "start": "1186620",
    "end": "1188780"
  },
  {
    "text": "Engineers too",
    "start": "1188780",
    "end": "1190400"
  },
  {
    "text": "in this guide you will find boss",
    "start": "1190400",
    "end": "1193179"
  },
  {
    "text": "practical step-by-step instruction and",
    "start": "1193179",
    "end": "1196220"
  },
  {
    "text": "the necessary Theory",
    "start": "1196220",
    "end": "1199299"
  },
  {
    "text": "it will guide you from basics",
    "start": "1199760",
    "end": "1203740"
  },
  {
    "text": "to more advanced scenarios",
    "start": "1204679",
    "end": "1208039"
  },
  {
    "text": "the guides also take into account the",
    "start": "1208039",
    "end": "1211160"
  },
  {
    "text": "specifics of different programming",
    "start": "1211160",
    "end": "1213140"
  },
  {
    "text": "languages and include examples of the",
    "start": "1213140",
    "end": "1216200"
  },
  {
    "text": "application source code and related",
    "start": "1216200",
    "end": "1218480"
  },
  {
    "text": "infrastructure",
    "start": "1218480",
    "end": "1221480"
  },
  {
    "start": "1221000",
    "end": "1238000"
  },
  {
    "text": "that's all I wanted to say today",
    "start": "1222200",
    "end": "1225440"
  },
  {
    "text": "if the program seem familiar to you try",
    "start": "1225440",
    "end": "1228260"
  },
  {
    "text": "verb create Docker files Helm charts and",
    "start": "1228260",
    "end": "1231380"
  },
  {
    "text": "let verb handle all the rest",
    "start": "1231380",
    "end": "1234020"
  },
  {
    "text": "it was an excellent webinar",
    "start": "1234020",
    "end": "1236780"
  },
  {
    "text": "and see you again",
    "start": "1236780",
    "end": "1239919"
  }
]