[
  {
    "text": "so thank you thank you everyone for attending I know it's Friday it's a bit late so really appreciate it I hope it's",
    "start": "280",
    "end": "6759"
  },
  {
    "text": "it will be an interesting talk and you learn something new so let's start the",
    "start": "6759",
    "end": "11920"
  },
  {
    "text": "talk is about implementing mtls in is multicluster environments using",
    "start": "11920",
    "end": "17400"
  },
  {
    "text": "Aspire my name is Samu boso I'm software engineer at solo Theo where I'm building",
    "start": "17400",
    "end": "23160"
  },
  {
    "text": "a multicluster service mes based on EO and",
    "start": "23160",
    "end": "28960"
  },
  {
    "text": "boy my name is edua I am customer success engineer in soloio working on",
    "start": "28960",
    "end": "35559"
  },
  {
    "text": "with open source Technologies IO enoy Spire so hope you like the",
    "start": "35559",
    "end": "40760"
  },
  {
    "text": "talk okay let's start from the beginning so what is mtls most of you probably",
    "start": "40760",
    "end": "46840"
  },
  {
    "text": "already know it but for those that don't know it let's start so most of you probably are familiar with TLS it's a",
    "start": "46840",
    "end": "53680"
  },
  {
    "text": "traditional protocol used by many websites to encrypt the traffic so in",
    "start": "53680",
    "end": "58719"
  },
  {
    "text": "TLS the client has to validate the server from the certificate in order to establish an encrypted",
    "start": "58719",
    "end": "65360"
  },
  {
    "text": "communication with mtls both the client and the server authenticate each other",
    "start": "65360",
    "end": "70840"
  },
  {
    "text": "so in this case also the server has to uh validate and authenticate the client",
    "start": "70840",
    "end": "76920"
  },
  {
    "text": "certificate in order to establish an INR communication this is more powerful because with mtls you can Define",
    "start": "76920",
    "end": "84400"
  },
  {
    "text": "policies and restrict the access to your server only to some specific clients",
    "start": "84400",
    "end": "90520"
  },
  {
    "text": "so in order to establish or uh yeah to use mtls you need to generate a client",
    "start": "90520",
    "end": "97280"
  },
  {
    "text": "certificate and a a certificate and a key for your client and for your server for both of them so this is simple if",
    "start": "97280",
    "end": "105399"
  },
  {
    "text": "you only have two apps a client and a server but in Enterprise environments",
    "start": "105399",
    "end": "110799"
  },
  {
    "text": "that you are probably more familiar with with kubernetes environments they are really dynamic they the pods are being",
    "start": "110799",
    "end": "117600"
  },
  {
    "text": "recreated uh very often so in order to handle the certificates it's you have to",
    "start": "117600",
    "end": "123520"
  },
  {
    "text": "use some some kind of tool because it's impossible to handle this mess just with",
    "start": "123520",
    "end": "128840"
  },
  {
    "text": "uh with manual actions so the technology that we are going to s that solves this",
    "start": "128840",
    "end": "134720"
  },
  {
    "text": "this problem is spify and Spire okay so let's review first what spify and later",
    "start": "134720",
    "end": "142000"
  },
  {
    "text": "we will review espire so spify stands for secure production identity framework",
    "start": "142000",
    "end": "148640"
  },
  {
    "text": "for everyone it's a an open source standard for securely identifying Software System in Dynamic environments",
    "start": "148640",
    "end": "155519"
  },
  {
    "text": "so basically a spif is just uh an standard okay it will it talks about how",
    "start": "155519",
    "end": "160959"
  },
  {
    "text": "to design your uh your system to be compliant with the spify so there are",
    "start": "160959",
    "end": "167319"
  },
  {
    "text": "several Concepts involved in sp sp architecture that I'm going to to go through the first one is the workload",
    "start": "167319",
    "end": "174159"
  },
  {
    "text": "API the workload API is in charge of generating a a document called sbid I'm",
    "start": "174159",
    "end": "181640"
  },
  {
    "text": "going to talk about a lot about SBS so sbid is a verifiable identity document H",
    "start": "181640",
    "end": "188239"
  },
  {
    "text": "it's a document that the workloads are going to use to establish the mtls communications because inside the sbid",
    "start": "188239",
    "end": "196040"
  },
  {
    "text": "we are going to put an SPF ID okay so the SP ID identifies an specific",
    "start": "196040",
    "end": "201480"
  },
  {
    "text": "workload within a trust domain all the workloads running for example in a cluster the cluster will be the trust",
    "start": "201480",
    "end": "207319"
  },
  {
    "text": "domain as as we will be as we will see later with edu because we are going to",
    "start": "207319",
    "end": "212480"
  },
  {
    "text": "have two different clusters so we will have two different trust domains and the SPD is just Yuri compliant okay it's you",
    "start": "212480",
    "end": "220319"
  },
  {
    "text": "have to put inside the SPD the trust domain and also the wordlock ID and the wordl ID depends a lot on your",
    "start": "220319",
    "end": "226439"
  },
  {
    "text": "environment configuration so the important thing thing here is the sbid so the sbid there",
    "start": "226439",
    "end": "233280"
  },
  {
    "text": "are two different formats of sbid we have the x509 certificate and the J token the X 59 certificate is prefer",
    "start": "233280",
    "end": "241599"
  },
  {
    "text": "over over yoke token so in the rest of the talk we are only going to speak about when we talk about sbds we are",
    "start": "241599",
    "end": "248480"
  },
  {
    "text": "going to talk about only x 9 certificates and it's a certificate",
    "start": "248480",
    "end": "253760"
  },
  {
    "text": "generated by the warlord API with the Spy ID inside of the SB ID and for",
    "start": "253760",
    "end": "259280"
  },
  {
    "text": "example as you can see there okay it's a normal certificate an x509 but in the",
    "start": "259280",
    "end": "264840"
  },
  {
    "text": "extensions in the subject alternative name we are putting this PP ID inside there okay so the word Lo API will",
    "start": "264840",
    "end": "272240"
  },
  {
    "text": "return the sbid the private key and the bundle of the ca of the trust domain to",
    "start": "272240",
    "end": "277919"
  },
  {
    "text": "the workload and the workload will use that information in order to H be validated by other workloads in the in",
    "start": "277919",
    "end": "284280"
  },
  {
    "text": "the trust domain and as the talk is about multicluster we have we are going",
    "start": "284280",
    "end": "289919"
  },
  {
    "text": "to have different trust domains and every trust domain has to trust the each",
    "start": "289919",
    "end": "295240"
  },
  {
    "text": "other the rest of the trust domains so uh spify uh declares the you have to",
    "start": "295240",
    "end": "301720"
  },
  {
    "text": "expose every wordlock API has to expose the trust bundle which is the public information of the certification",
    "start": "301720",
    "end": "308479"
  },
  {
    "text": "Authority that is issuing the certificates uh to the to the rest of the trust domains so uh in with the",
    "start": "308479",
    "end": "317120"
  },
  {
    "text": "trust bundle information you can Federate your trust domains into each other as we will review later in the in",
    "start": "317120",
    "end": "323800"
  },
  {
    "text": "the demo so this is spify and now Spire is just one implementation of spy okay",
    "start": "323800",
    "end": "330600"
  },
  {
    "text": "there are several others but here we are going to to review expires okay so in",
    "start": "330600",
    "end": "336880"
  },
  {
    "text": "Spire is more complex the architecture we now instead of having only the worklog API we now have an agent and a",
    "start": "336880",
    "end": "343880"
  },
  {
    "text": "server so the agent will generate the sbid for the workloads uh in a process",
    "start": "343880",
    "end": "350479"
  },
  {
    "text": "known workload attestation okay in order to do that we need we need first to",
    "start": "350479",
    "end": "355560"
  },
  {
    "text": "register the different wordl entries in the with the registration API that you have just in there into the server okay",
    "start": "355560",
    "end": "362840"
  },
  {
    "text": "and the server will store these identities into a database there are",
    "start": "362840",
    "end": "367960"
  },
  {
    "text": "different in aspired it supports several different storage packets okay with the",
    "start": "367960",
    "end": "373080"
  },
  {
    "text": "that store plugins that you can Define and the same with the certification Authority as the server has to generate",
    "start": "373080",
    "end": "380759"
  },
  {
    "text": "ER certificates for the different sbds uh we need to use an a CA plugin so it",
    "start": "380759",
    "end": "388319"
  },
  {
    "text": "you can use just an external certification Authority by default it will autogenerate a certification",
    "start": "388319",
    "end": "394800"
  },
  {
    "text": "Authority that will use to generate the certificates so that's the server and",
    "start": "394800",
    "end": "400680"
  },
  {
    "text": "now the agent in order to be able to trust the server and vice versa also the",
    "start": "400680",
    "end": "406599"
  },
  {
    "text": "server has to trust the agent the agent will be authenticated okay this process",
    "start": "406599",
    "end": "412000"
  },
  {
    "text": "is not attestation so we are going to see how this works okay these three parts the registration API the note",
    "start": "412000",
    "end": "418080"
  },
  {
    "text": "attestation and the warlo attestation in kubernetes so the first thing is how",
    "start": "418080",
    "end": "423800"
  },
  {
    "text": "we register our road loads with Spire in a kubernetes environment so in the Spire",
    "start": "423800",
    "end": "428840"
  },
  {
    "text": "server that's a poort running okay in the Spire system name space and inside the Spire system pot we have two",
    "start": "428840",
    "end": "435199"
  },
  {
    "text": "different containers we have the Spire server itself and the controller manager so this controller manager is uh",
    "start": "435199",
    "end": "442280"
  },
  {
    "text": "continuously watching Four poorts that match this specification in the cluster",
    "start": "442280",
    "end": "447639"
  },
  {
    "text": "SPID custom resource so we Define for example a pot selector so only the pots",
    "start": "447639",
    "end": "452919"
  },
  {
    "text": "with these labels can be registered in the Spire server database and the PID",
    "start": "452919",
    "end": "458720"
  },
  {
    "text": "that will be generated for that workloads will match the what we Define in the spyd template in this case it's",
    "start": "458720",
    "end": "465479"
  },
  {
    "text": "the trust domain the name space of the workload and the service account of the workload okay this is what we are going",
    "start": "465479",
    "end": "471840"
  },
  {
    "text": "to this format is we are using with with ISO uh later on so once the warlo a",
    "start": "471840",
    "end": "479800"
  },
  {
    "text": "register into the Spire server we need the agent to H grab or to get this ER",
    "start": "479800",
    "end": "488680"
  },
  {
    "text": "this the S SBS for for this workload so this is what is not that station okay",
    "start": "488680",
    "end": "494280"
  },
  {
    "text": "the Spire agent or the Spire server needs to trust the Spire agent and just",
    "start": "494280",
    "end": "499720"
  },
  {
    "text": "only trust the Spire agents to avoid others to impersonate the Spire agent and ER and return the sbds to to a",
    "start": "499720",
    "end": "508000"
  },
  {
    "text": "different agent okay so this SP agent will generate a CSR a certificate signing request and it will use the",
    "start": "508000",
    "end": "514760"
  },
  {
    "text": "service account token of the spare agent the spare agent is a demon set running on on kubernetes on every note there is",
    "start": "514760",
    "end": "521200"
  },
  {
    "text": "an expire agent running with a service account with that service account the Spire server so here we need a a TLS",
    "start": "521200",
    "end": "528839"
  },
  {
    "text": "communication okay because we are sending a confidential data the service account token to the SP server so this",
    "start": "528839",
    "end": "535440"
  },
  {
    "text": "communication H has to be secure and with that uh token the asire server will",
    "start": "535440",
    "end": "542200"
  },
  {
    "text": "go to the kubernetes API and with the token review API will grab the the",
    "start": "542200",
    "end": "547760"
  },
  {
    "text": "information the metadata for the agent and with that information it will register the agent into the Spire server",
    "start": "547760",
    "end": "554519"
  },
  {
    "text": "database it will generate also an spfd but in this case the format is pretty",
    "start": "554519",
    "end": "559839"
  },
  {
    "text": "much different because in this case the format is based on the pling that you are using to register the agent for",
    "start": "559839",
    "end": "566959"
  },
  {
    "text": "example in this in this case it's kubernetes projected service account because we are using just the the the",
    "start": "566959",
    "end": "573640"
  },
  {
    "text": "path of the service account token and the selectors are retrieve from the token review API and the selector are",
    "start": "573640",
    "end": "581360"
  },
  {
    "text": "used just to identify the agent inside the database so once we have this when",
    "start": "581360",
    "end": "587279"
  },
  {
    "text": "once we register the agent we are going to generate an SB ID for the agent that the agent will use to establish an mtls",
    "start": "587279",
    "end": "594120"
  },
  {
    "text": "communication with the server and now it's going to cast it's going to retrieve all the sbid is for the war",
    "start": "594120",
    "end": "600640"
  },
  {
    "text": "loads running on that note from the server and it they will be cast in the in the",
    "start": "600640",
    "end": "606440"
  },
  {
    "text": "agent and finally how now the war loads get that sbid from the from the Spire",
    "start": "606440",
    "end": "613680"
  },
  {
    "text": "engine okay so in this case the workload okay a workload is just running on that same note of where the Spire agent is",
    "start": "613680",
    "end": "620440"
  },
  {
    "text": "running and they are going to be to communicate with a unit socket so that",
    "start": "620440",
    "end": "625959"
  },
  {
    "text": "unit socket is going to be mounted by a different component the Spire CSI driver",
    "start": "625959",
    "end": "631440"
  },
  {
    "text": "the Spire CSI driver will Mount this uni socket into the Warlock and the Warlock",
    "start": "631440",
    "end": "637120"
  },
  {
    "text": "is going to use this uni socket to communicate with the Spy agent the Spy agent is exposing in this uni socket a",
    "start": "637120",
    "end": "643760"
  },
  {
    "text": "grpc API H and the workload is going to request at this this end point the spey",
    "start": "643760",
    "end": "650839"
  },
  {
    "text": "workload API the the SB ID so the agent is going to get the P ID from the",
    "start": "650839",
    "end": "657720"
  },
  {
    "text": "worklad the process ID because that information cannot be impersonated H the workload doesn't decide the PID you",
    "start": "657720",
    "end": "664440"
  },
  {
    "text": "cannot set the P ID when you are creating a workload so that's unique and",
    "start": "664440",
    "end": "669839"
  },
  {
    "text": "with the p ID it's going to get from the Kel from the from the c groups the container ID and the b u ID for that",
    "start": "669839",
    "end": "677480"
  },
  {
    "text": "workload and from the cuel API running in that node the cubel that is running",
    "start": "677480",
    "end": "682839"
  },
  {
    "text": "it's going to get the rest of the information the selectors that we are using to register the workload into the",
    "start": "682839",
    "end": "689480"
  },
  {
    "text": "Spire server and from the list of SBS available in the agent so with that",
    "start": "689480",
    "end": "694959"
  },
  {
    "text": "selector with that information it's going to get the sbid and it's going to return finally the sbid to the workload",
    "start": "694959",
    "end": "702160"
  },
  {
    "text": "that we'll use to establish mtls in in the trust domain so that's a bit of",
    "start": "702160",
    "end": "708240"
  },
  {
    "text": "theory about spy and spify how it works so now Ed is going to show you in action how all of these works and how to set up",
    "start": "708240",
    "end": "715440"
  },
  {
    "text": "a multicluster environment with all of this",
    "start": "715440",
    "end": "720720"
  },
  {
    "text": "thanks Samu so now yeah I am going to talk about how you can integrate SPID and E action in a real environment and",
    "start": "720720",
    "end": "727639"
  },
  {
    "text": "then I'm going to show a real time demo so first of all I'm going to make",
    "start": "727639",
    "end": "733639"
  },
  {
    "text": "like a high overal architecture of our demo which is composed of two kubernetes clusters e cluster one and EO cluster 2",
    "start": "733639",
    "end": "741680"
  },
  {
    "text": "and in each of them we will deploy one Spire server in order to get the domain of each cluster then we will deploy one",
    "start": "741680",
    "end": "748720"
  },
  {
    "text": "spire agent per cluster because this demo is only done with one kubernetes node so it's one Spire agent per node",
    "start": "748720",
    "end": "756360"
  },
  {
    "text": "also both Spire servers will be in communication between them because we will Federate the bandles from each them",
    "start": "756360",
    "end": "763279"
  },
  {
    "text": "so in order to uh know which applications are in each cluster and in order to be able to establish",
    "start": "763279",
    "end": "769720"
  },
  {
    "text": "communication between them we are going to create a mes thanks to ISO uh so we",
    "start": "769720",
    "end": "774920"
  },
  {
    "text": "will deploy EO in a multicluster architecture using the same Network so",
    "start": "774920",
    "end": "780160"
  },
  {
    "text": "every application will be deployed in network one and we will deploy then some apps as you can see here in the image so",
    "start": "780160",
    "end": "787480"
  },
  {
    "text": "we will have our East Ingress Gateway from which our users will access then",
    "start": "787480",
    "end": "792880"
  },
  {
    "text": "the users the users will be rooted to our front end application which is product page and from product page to",
    "start": "792880",
    "end": "798839"
  },
  {
    "text": "the back end applications so let's see the flow users come to the engress gway front endend and from front end they",
    "start": "798839",
    "end": "805639"
  },
  {
    "text": "will be to the back end also just for some observability for the demo purpose we have deployed also",
    "start": "805639",
    "end": "812440"
  },
  {
    "text": "promethus on each cluster in order to get the metrics uh from the traffic of the applications these metrics will be",
    "start": "812440",
    "end": "819120"
  },
  {
    "text": "Federated into tanos and we will show some observability using cell so first of all let me talk to you",
    "start": "819120",
    "end": "826000"
  },
  {
    "text": "about the is multicluster architecture in this case we are deploying both clusters in the same network and the way",
    "start": "826000",
    "end": "832240"
  },
  {
    "text": "that e up string has to discover the services deployed on the other cluster is by making request to the API server",
    "start": "832240",
    "end": "839720"
  },
  {
    "text": "this is why we will use this command which basically creates a secret in cluster one let's say which contains the",
    "start": "839720",
    "end": "846480"
  },
  {
    "text": "cube config so that e is able to communicate with the API server of",
    "start": "846480",
    "end": "851560"
  },
  {
    "text": "cluster one this way all the applications all the services in cluster one will be aware of which services are",
    "start": "851560",
    "end": "858519"
  },
  {
    "text": "running also in the second cluster so we can establish a communication between service a and service B so how how have",
    "start": "858519",
    "end": "867240"
  },
  {
    "text": "we set up this in EO so basically we are deploying a multicluster architecture we",
    "start": "867240",
    "end": "872279"
  },
  {
    "text": "Define here the name of our cluster both of them will have the same mes ID and",
    "start": "872279",
    "end": "878000"
  },
  {
    "text": "both of them will be running on the same network H also we have to specify the trust domain for each cluster and we",
    "start": "878000",
    "end": "884839"
  },
  {
    "text": "have to made also this modification trust domain alysis in order for the applications in cluster one to trust",
    "start": "884839",
    "end": "891839"
  },
  {
    "text": "also the applications from task domain cluster 2 so now now that we have is",
    "start": "891839",
    "end": "899040"
  },
  {
    "text": "multicluster let's go with Spire Federation so how does this work in kubernetes environment so we have asire",
    "start": "899040",
    "end": "905800"
  },
  {
    "text": "server from cluster one and from cluster 2 and we need each one to communicate with each other in order to fetch the",
    "start": "905800",
    "end": "911399"
  },
  {
    "text": "bandles from the other cluster so for that we will enable Federation and we",
    "start": "911399",
    "end": "917040"
  },
  {
    "text": "can establish the template of the SP template which consist on the trust domain the name space and the service",
    "start": "917040",
    "end": "923959"
  },
  {
    "text": "account of the application this can be modified but uh This was done for demo",
    "start": "923959",
    "end": "929759"
  },
  {
    "text": "this will Federate with e cluster 2 so here for each Federated domain we can",
    "start": "929759",
    "end": "935720"
  },
  {
    "text": "establish like some variables so the trust domain of the Federated cluster and the bandel endpoint URL this URL",
    "start": "935720",
    "end": "942399"
  },
  {
    "text": "will be pointing to the kubernetes service of spire server to in order to fet the bundle from it and have all the",
    "start": "942399",
    "end": "949440"
  },
  {
    "text": "identities available also from this cluster so now that we have e",
    "start": "949440",
    "end": "954639"
  },
  {
    "text": "multicluster and Spire Federation let's see how do both integrate",
    "start": "954639",
    "end": "959680"
  },
  {
    "text": "together so before explaining that I'm going to expl how to explain how do is to do it in order to get the",
    "start": "959680",
    "end": "965759"
  },
  {
    "text": "certificates for each workload and you need to know that each G in ISO contains",
    "start": "965759",
    "end": "971279"
  },
  {
    "text": "two containers one of them is the application container and the other one is the E proxy container e proxy",
    "start": "971279",
    "end": "977920"
  },
  {
    "text": "container is formed by two components which are EO agent and enoy what eagent",
    "start": "977920",
    "end": "984440"
  },
  {
    "text": "does is basically bootstrapping the proxy and provisioning identities to the workloads how does it do it it makes a certificate",
    "start": "984440",
    "end": "992079"
  },
  {
    "text": "signing request to e then e signs the certificate and is Agent andoy",
    "start": "992079",
    "end": "998560"
  },
  {
    "text": "communicate thanks to this secret Discovery service which is called SDS which is basically a Unix domain socket",
    "start": "998560",
    "end": "1005800"
  },
  {
    "text": "so aoy is able to talk with the SDS through SDS aoy API and it can get the",
    "start": "1005800",
    "end": "1013399"
  },
  {
    "text": "certificate and the keys which will be stored on enoy on memory so now that we know how does is",
    "start": "1013399",
    "end": "1021120"
  },
  {
    "text": "do it let's see how does asire and is do it together so instead of having the esto agent ER communicating with enoy",
    "start": "1021120",
    "end": "1029319"
  },
  {
    "text": "via SDS we will establish direct communication between the spayer agent and enoy using SDS how will we do it so",
    "start": "1029319",
    "end": "1037120"
  },
  {
    "text": "in the installation of EO we set some H web hooks so that every work clad from",
    "start": "1037120",
    "end": "1043558"
  },
  {
    "text": "is that will be deployed thanks to the CSI driver that is um in the not thanks",
    "start": "1043559",
    "end": "1049720"
  },
  {
    "text": "to Spire we will Mount this CSI on a own location in the worklad so the Spire",
    "start": "1049720",
    "end": "1055360"
  },
  {
    "text": "agent and enoy will be communicating via socket in the same note thanks to the server Discovery service so this is the",
    "start": "1055360",
    "end": "1063559"
  },
  {
    "text": "way that we will provision the certificates to enoy H so how does Spire do it time we",
    "start": "1063559",
    "end": "1070720"
  },
  {
    "text": "deploy a work lad in our cluster as some explained before we have the E controller manager which is in charge of",
    "start": "1070720",
    "end": "1077400"
  },
  {
    "text": "checking which work GLS or which identities which G loats are creating on our cluster and reconciling them so in",
    "start": "1077400",
    "end": "1084480"
  },
  {
    "text": "this case we are checking the logs so it's asire controller manager saw that this PO was deployed on our cluster and",
    "start": "1084480",
    "end": "1091760"
  },
  {
    "text": "it didn't have an ID entity so it creates an entry on the Spire server with PVD selectors and the domain which",
    "start": "1091760",
    "end": "1099440"
  },
  {
    "text": "is federates with uh then if we check on the other container the Spire server the entries",
    "start": "1099440",
    "end": "1106000"
  },
  {
    "text": "we can see that we create one entry for each ENT on our Spire server in this",
    "start": "1106000",
    "end": "1111159"
  },
  {
    "text": "case it's the ID entity also of our booking for product page application with the entd spad the same that we",
    "start": "1111159",
    "end": "1118919"
  },
  {
    "text": "defined before the parent ID which will be the asire agent also the SBS and this",
    "start": "1118919",
    "end": "1126400"
  },
  {
    "text": "is interesting because we are also able to Define some selectors in order to identify our workload in this case this",
    "start": "1126400",
    "end": "1132840"
  },
  {
    "text": "is the default installation so we only have the port uid which is the same that you can check in the jam",
    "start": "1132840",
    "end": "1139320"
  },
  {
    "text": "of the P running in kubernetes we can also customize this by adding more selectors to the identity of each",
    "start": "1139320",
    "end": "1146159"
  },
  {
    "text": "workload and also we have to say that this will Federate with EO cluster",
    "start": "1146159",
    "end": "1152280"
  },
  {
    "text": "too how does the configuration in inoy look so uh this means that enoy will",
    "start": "1152280",
    "end": "1158799"
  },
  {
    "text": "have h two sons to subject alternative names created for it certificate which",
    "start": "1158799",
    "end": "1164080"
  },
  {
    "text": "will match both domains for the same uh workload so for book looking for product",
    "start": "1164080",
    "end": "1169400"
  },
  {
    "text": "page we will have the certificates matching the spvd from EO cluster one and EO cluster 2 also if we check on",
    "start": "1169400",
    "end": "1177000"
  },
  {
    "text": "enoy the thrust domains it will thrust certificates from both bundles coming from the Spire",
    "start": "1177000",
    "end": "1183840"
  },
  {
    "text": "servers so now let's go with the demo uh first of all you have here the repo that",
    "start": "1183840",
    "end": "1189240"
  },
  {
    "text": "we use for this demo it is public and it's very easy to install with kind we have made make a make file so you can",
    "start": "1189240",
    "end": "1196760"
  },
  {
    "text": "easily deploy it on your on your",
    "start": "1196760",
    "end": "1201000"
  },
  {
    "text": "environment okay so I'm going to show you what do we have in each cluster we have two context so if we go to kind is",
    "start": "1205159",
    "end": "1211360"
  },
  {
    "text": "cluster one you can see that we have in booking for the front end application",
    "start": "1211360",
    "end": "1216720"
  },
  {
    "text": "and also the back end we have the East Ingress Gateway in E system the E the",
    "start": "1216720",
    "end": "1222080"
  },
  {
    "text": "conton plane and the observability components with are ke promethus and Thanos also in Spire you can see that we",
    "start": "1222080",
    "end": "1229240"
  },
  {
    "text": "have the Spire agent and the Spire server so let's go to E cluster",
    "start": "1229240",
    "end": "1235440"
  },
  {
    "text": "2 as you can see we have all the back end applications to which we will make the call from the front end we have also",
    "start": "1238000",
    "end": "1244320"
  },
  {
    "text": "promethus for observability the HD control plane the Spire agent and the Spire",
    "start": "1244320",
    "end": "1250840"
  },
  {
    "text": "server so let me make let me make this screen",
    "start": "1250840",
    "end": "1256640"
  },
  {
    "text": "bigger okay so apart from that we have added also more Security in order to",
    "start": "1256640",
    "end": "1262600"
  },
  {
    "text": "make the demo like more interesting for in the security aspect and is that we have added some J policies to the E",
    "start": "1262600",
    "end": "1268919"
  },
  {
    "text": "Gateway so we are only accepting JS that are signed by this certificate you can",
    "start": "1268919",
    "end": "1275120"
  },
  {
    "text": "see it also in the repo we are extracting the Y token from this URL so we are getting this y token and we have",
    "start": "1275120",
    "end": "1282000"
  },
  {
    "text": "also expose the Gateway using stps with a certificate so we will also need to",
    "start": "1282000",
    "end": "1287720"
  },
  {
    "text": "specify one certificate in order to go through our eting Gateway so basically",
    "start": "1287720",
    "end": "1292840"
  },
  {
    "text": "this will be our J token we have here the isser on the subject which is testing secure. esto. and we will only",
    "start": "1292840",
    "end": "1300520"
  },
  {
    "text": "allow Juds with this is and subject as you can see here H in the",
    "start": "1300520",
    "end": "1306640"
  },
  {
    "text": "request authentication we are specifying the certificate and here in the authorization policy we are specifying",
    "start": "1306640",
    "end": "1312120"
  },
  {
    "text": "the request principles so let's make the test if we make the test with the right",
    "start": "1312120",
    "end": "1317559"
  },
  {
    "text": "token it works if we try to make it with a fake token we get just easier not configured so it's like an extra step",
    "start": "1317559",
    "end": "1324000"
  },
  {
    "text": "for configuring the security of our Gateway also another thing that you can",
    "start": "1324000",
    "end": "1330000"
  },
  {
    "text": "do for security playing with the spids is adding some authorization policies in",
    "start": "1330000",
    "end": "1335600"
  },
  {
    "text": "this case for example we say that only booking for product page which is our",
    "start": "1335600",
    "end": "1340880"
  },
  {
    "text": "front end will be able to access our backin application reviews with this",
    "start": "1340880",
    "end": "1346039"
  },
  {
    "text": "method and with this path so any other application that tries to access this",
    "start": "1346039",
    "end": "1351159"
  },
  {
    "text": "reviews backend application will be denied so let's make the",
    "start": "1351159",
    "end": "1358080"
  },
  {
    "text": "test if we try to cool from the slip pod the review application we are not able",
    "start": "1358240",
    "end": "1363600"
  },
  {
    "text": "to make any request to this spot so this is another way to play with security and SPV ads now I'm going to let",
    "start": "1363600",
    "end": "1372639"
  },
  {
    "text": "um now I'm going to let a for Loop running here with every 2 seconds will make a request to our East Gateway",
    "start": "1374080",
    "end": "1381919"
  },
  {
    "text": "and also if we check the logs that they have here we are able to see what in the request is coming to to our to our AB",
    "start": "1381919",
    "end": "1393679"
  },
  {
    "text": "service so yeah so so it's here as you can see",
    "start": "1394559",
    "end": "1400799"
  },
  {
    "text": "uh this is the SP ID of our Upstream application so I'm making the request to book in for details with this SP SPD you",
    "start": "1400799",
    "end": "1408679"
  },
  {
    "text": "can see the H that we have for the data the certificate that it's been forwarded",
    "start": "1408679",
    "end": "1414200"
  },
  {
    "text": "with organization uh the UI and also the SPF ID from the application that made",
    "start": "1414200",
    "end": "1420400"
  },
  {
    "text": "the request if we check this into a graph we are using Kelly for this one we",
    "start": "1420400",
    "end": "1426279"
  },
  {
    "text": "are able to see all the flow of our communication so this box is for euster",
    "start": "1426279",
    "end": "1431360"
  },
  {
    "text": "one this one is for EO claster too and let's display also the",
    "start": "1431360",
    "end": "1436480"
  },
  {
    "text": "security we can see that all the the communication is encrypted if we click on any of them we see that mtls is",
    "start": "1436480",
    "end": "1443159"
  },
  {
    "text": "enabled and we can see also the SPD that is making the request and the one that is receiving it so the SPD that is",
    "start": "1443159",
    "end": "1449799"
  },
  {
    "text": "making the request in this case is booking for product page and the one that is receiving it is booking for",
    "start": "1449799",
    "end": "1456440"
  },
  {
    "text": "reviews so everything is encrypted and just to make a double check we get I",
    "start": "1456440",
    "end": "1462159"
  },
  {
    "text": "have a sniff pod running and we also got some data into wirar so this is the IP of the S not and",
    "start": "1462159",
    "end": "1469840"
  },
  {
    "text": "this is the IP of the F application this is the request this is the response and this is the AK of the request as you can",
    "start": "1469840",
    "end": "1477200"
  },
  {
    "text": "see everything is ciphered using mtls and if we check the transport layer security it's encrypted application",
    "start": "1477200",
    "end": "1485520"
  },
  {
    "text": "data so that was the demo different ways of securing your app your mes your",
    "start": "1485520",
    "end": "1491480"
  },
  {
    "text": "clusters using also pfds so we hope that you like it uh we we have here some",
    "start": "1491480",
    "end": "1500039"
  },
  {
    "text": "references that we used H for this talk in case that you want to to check it we",
    "start": "1500039",
    "end": "1506159"
  },
  {
    "text": "have also submitted these slides into the schedule of cucon and here we are",
    "start": "1506159",
    "end": "1511679"
  },
  {
    "text": "going to let also the QR code H just to leave us some feedback so we hope that",
    "start": "1511679",
    "end": "1516880"
  },
  {
    "text": "you enjoyed",
    "start": "1516880",
    "end": "1519600"
  },
  {
    "text": "it so any questions yes feel free to ask yes we have a mic yes in the",
    "start": "1525480",
    "end": "1532520"
  },
  {
    "text": "center great hello thank you for the presentation I want to know how uh",
    "start": "1532520",
    "end": "1540600"
  },
  {
    "text": "certificate rotation is managed when you have this uh multier setup is it managed",
    "start": "1540600",
    "end": "1546279"
  },
  {
    "text": "by spire and not by isue itself yeah in this case it's managed by spire and you",
    "start": "1546279",
    "end": "1551880"
  },
  {
    "text": "can configure just the rotation period so yeah you can rotate it every hour or",
    "start": "1551880",
    "end": "1557840"
  },
  {
    "text": "you prefer okay one more there oh yeah hello hi um",
    "start": "1557840",
    "end": "1564399"
  },
  {
    "text": "what would something change if you have chosen a different network architecture",
    "start": "1564399",
    "end": "1570960"
  },
  {
    "text": "than you chose because you have the same network two two clusters is in the same network uh if I have another not Network",
    "start": "1570960",
    "end": "1578080"
  },
  {
    "text": "something like that what what would change uh yeah so nothing would change",
    "start": "1578080",
    "end": "1583159"
  },
  {
    "text": "for Aire it would change for Io so H in know you are not able to access the API",
    "start": "1583159",
    "end": "1589799"
  },
  {
    "text": "server of the remote cluster because you don't have you are not talking in the same network but you would have to deploy an e Gateway in order to be able",
    "start": "1589799",
    "end": "1597640"
  },
  {
    "text": "to do that pass through and go through the services so it would change the architecture of is but not the one from",
    "start": "1597640",
    "end": "1602799"
  },
  {
    "text": "Spire you would have to deploy also the East West component but I mean so um the",
    "start": "1602799",
    "end": "1609640"
  },
  {
    "text": "the Spire will still be trusted even though you are uh communicating through",
    "start": "1609640",
    "end": "1614960"
  },
  {
    "text": "a different um Gateway right because you would now communicate throughout uh East",
    "start": "1614960",
    "end": "1621840"
  },
  {
    "text": "West Gateway not by not by inas anymore but that that that would work normally",
    "start": "1621840",
    "end": "1628279"
  },
  {
    "text": "yeah Spire will be also trusted because it's the Spire will Federate the bundle from the other cluster so as long as",
    "start": "1628279",
    "end": "1634600"
  },
  {
    "text": "both the SP server has both bundles the eastwest Gateway will do a pass through",
    "start": "1634600",
    "end": "1639679"
  },
  {
    "text": "so it will forward also the same certificate it's running pass through that that that's correct sorry in this",
    "start": "1639679",
    "end": "1645440"
  },
  {
    "text": "reference right here the is still doogs you have all the different multicluster configurations and yeah all of them are",
    "start": "1645440",
    "end": "1652919"
  },
  {
    "text": "supported thank you okay one more right there I can see one hand yeah um I was",
    "start": "1652919",
    "end": "1660399"
  },
  {
    "text": "just wondering in terms of like use cases the I guess benefits of having",
    "start": "1660399",
    "end": "1666760"
  },
  {
    "text": "like multiple trust domains over like a single trust domain with like one root of trust um like when do you see one",
    "start": "1666760",
    "end": "1674360"
  },
  {
    "text": "versus the other like what would you advise it's a very good question I I",
    "start": "1674360",
    "end": "1680240"
  },
  {
    "text": "think it depends on the company I mean on your business logic that's going to Define everything I don't know maybe",
    "start": "1680240",
    "end": "1687320"
  },
  {
    "text": "just one department is going to be one trust domain and the other it depends on",
    "start": "1687320",
    "end": "1692880"
  },
  {
    "text": "your on on your organization the different components and the relationships between these or these",
    "start": "1692880",
    "end": "1699399"
  },
  {
    "text": "departments I think it depends a lot on your business logic or business",
    "start": "1699399",
    "end": "1704919"
  },
  {
    "text": "domain thanks uh for talk how is under the is the the SP server is a spuff or",
    "start": "1705559",
    "end": "1714679"
  },
  {
    "text": "it is possible to have it availability on it is it what can you repeat the",
    "start": "1714679",
    "end": "1720399"
  },
  {
    "text": "question please it's a single of failure uh it supports in our case yes",
    "start": "1720399",
    "end": "1727760"
  },
  {
    "text": "because the it's a demo but it supports High availability uh configuration so",
    "start": "1727760",
    "end": "1733120"
  },
  {
    "text": "and actually you can deploy it outside of kubernetes in a different actually it's a",
    "start": "1733120",
    "end": "1738600"
  },
  {
    "text": "a very important it's a component that it has to be not very it has to be very secure",
    "start": "1738600",
    "end": "1745200"
  },
  {
    "text": "I mean you need so you can just deploy it outside of kubernetes in a virtual machines with hardening and just in high",
    "start": "1745200",
    "end": "1752960"
  },
  {
    "text": "availability the same with the database I mean in our case we are just using a SQL light inside the cority spot but in",
    "start": "1752960",
    "end": "1760600"
  },
  {
    "text": "production you are going to you want to use a post outside with all replication",
    "start": "1760600",
    "end": "1765760"
  },
  {
    "text": "and in a production way so yeah thanks a lot thank you cool um in your example",
    "start": "1765760",
    "end": "1772720"
  },
  {
    "text": "you showed that the two sto clusters are across um a single network uh like so",
    "start": "1772720",
    "end": "1780240"
  },
  {
    "text": "they're connected as part of the same um I'm guessing it's possible to do it across multiple networks and if so how",
    "start": "1780240",
    "end": "1787919"
  },
  {
    "text": "much complicated does it get uh yeah this is yeah also if if we",
    "start": "1787919",
    "end": "1794440"
  },
  {
    "text": "go here to this to this link you can can see all the possibilities it is possible",
    "start": "1794440",
    "end": "1800200"
  },
  {
    "text": "yeah it's like the similar question to the one before you need to deploy an is Gateway because you don't have direct",
    "start": "1800200",
    "end": "1806279"
  },
  {
    "text": "communication to the APA server so you must do a pass through through the Gateway it depends about complexity",
    "start": "1806279",
    "end": "1813279"
  },
  {
    "text": "depends on the number of clusters you have so uh if you have 10 clusters and",
    "start": "1813279",
    "end": "1819519"
  },
  {
    "text": "you want to do complex routin between one of them yeah then it it becomes a bit complicated just to manage the",
    "start": "1819519",
    "end": "1826120"
  },
  {
    "text": "objects but it easy to do for uh for just traffic but if you then want",
    "start": "1826120",
    "end": "1834200"
  },
  {
    "text": "to implement uh po policies like J policies uh Ro limiting then it depends",
    "start": "1834200",
    "end": "1841159"
  },
  {
    "text": "the on the number of clusters you have the more the more complex but definitely it is H possible and it I have seen it",
    "start": "1841159",
    "end": "1848519"
  },
  {
    "text": "in many places many customers have this yeah cool thanks and sorry for the duplicate question sorry could you just",
    "start": "1848519",
    "end": "1854799"
  },
  {
    "text": "put the GitHub link up one more time yes there it is that one",
    "start": "1854799",
    "end": "1860639"
  },
  {
    "text": "right yes thank you if there are any issues just open an issue okay and we will have we will try to address or just",
    "start": "1860639",
    "end": "1867880"
  },
  {
    "text": "solve your question so yeah any other questions you can also",
    "start": "1867880",
    "end": "1873360"
  },
  {
    "text": "ask offline okay or just in our social media so thank you everyone for attending have a good day bye thank",
    "start": "1873360",
    "end": "1882440"
  },
  {
    "text": "you",
    "start": "1883639",
    "end": "1886639"
  }
]