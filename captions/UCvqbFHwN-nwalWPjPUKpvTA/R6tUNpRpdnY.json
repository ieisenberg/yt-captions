[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "my name is Manish Mehra I am a security engineer at little-known company called",
    "start": "210",
    "end": "5310"
  },
  {
    "text": "Netflix and my projects I've been there for about four years and my projects involved secure bootstrapping PKI",
    "start": "5310",
    "end": "12990"
  },
  {
    "text": "secrets management authentication and authorization authorization is something you're going to talk today of",
    "start": "12990",
    "end": "18980"
  },
  {
    "text": "co-presenter turin hi everybody so my name is torn sandal I'm the tech lead of",
    "start": "18980",
    "end": "24330"
  },
  {
    "text": "the open policy agent project which we're going to talk about in this presentation I've also contributed to",
    "start": "24330",
    "end": "29880"
  },
  {
    "text": "kubernetes and ISTE oh I love golang and high quality software so take it away",
    "start": "29880",
    "end": "35910"
  },
  {
    "text": "ammunition all right let's get started so before we start talking about the",
    "start": "35910",
    "end": "42210"
  },
  {
    "start": "39000",
    "end": "39000"
  },
  {
    "text": "main topic here I want to just get some background definitions out of my way",
    "start": "42210",
    "end": "47930"
  },
  {
    "text": "using an example so let's say if I'm trying to send a request to my bank and",
    "start": "47930",
    "end": "54180"
  },
  {
    "text": "say transfer $1,000 from account X to account Y in this particular case the",
    "start": "54180",
    "end": "60690"
  },
  {
    "text": "bank is going to perform two steps one it is going to first verify the identity",
    "start": "60690",
    "end": "66119"
  },
  {
    "text": "of the requester that's me that that is what we call an authentication and then",
    "start": "66119",
    "end": "72000"
  },
  {
    "text": "verify that the requester this identity is authorized to perform the requested",
    "start": "72000",
    "end": "79159"
  },
  {
    "text": "operation that's authorization or Z now for some of you it may be really obvious",
    "start": "79159",
    "end": "84750"
  },
  {
    "text": "but I cannot tell you how many times I get into conversations where people confuse these two things and then the",
    "start": "84750",
    "end": "91229"
  },
  {
    "text": "conversation goes nowhere so hopefully I start off with this background",
    "start": "91229",
    "end": "96420"
  },
  {
    "text": "definitions so we're going to talk about bullet number two not one all right now",
    "start": "96420",
    "end": "103530"
  },
  {
    "text": "one more thing I would like to say is these two steps do not need to be tied",
    "start": "103530",
    "end": "109500"
  },
  {
    "text": "together they do not need to happen within one system they could be completely decoupled in fact I will go",
    "start": "109500",
    "end": "115350"
  },
  {
    "text": "one step further and say if you tie them together sooner or later you're gonna lose your flexibility if you have",
    "start": "115350",
    "end": "121490"
  },
  {
    "text": "interested in that statement you meet me afterwards I can go into deeper conversations there so some more",
    "start": "121490",
    "end": "129599"
  },
  {
    "start": "128000",
    "end": "128000"
  },
  {
    "text": "background about Netflix's architecture so this is a very very simplified high level view of Netflix's",
    "start": "129599",
    "end": "135840"
  },
  {
    "text": "architecture there are customers we have our bag back hand we are a cloud",
    "start": "135840",
    "end": "140970"
  },
  {
    "text": "provider partners and then of course the CD and that basically stores your movies",
    "start": "140970",
    "end": "146489"
  },
  {
    "text": "and shows that gets you the bytes as quick as possible to your TV now we are",
    "start": "146489",
    "end": "153540"
  },
  {
    "text": "going to focus on this big empty box today which is our back-end that runs",
    "start": "153540",
    "end": "160079"
  },
  {
    "text": "all our control plane what we have there is a CI CD pipeline container",
    "start": "160079",
    "end": "166049"
  },
  {
    "text": "orchestration system workflow management systems which are very similar to kubernetes if you in in many ways and I",
    "start": "166049",
    "end": "172739"
  },
  {
    "text": "think this morning you probably caught dance keynote she she's the director who",
    "start": "172739",
    "end": "178439"
  },
  {
    "text": "manages the team under spinnaker so these are these are all the systems that basically drive and launch all the",
    "start": "178439",
    "end": "186260"
  },
  {
    "text": "applications and workloads then we have these applications that are basically some sort of API gateway personalization",
    "start": "186260",
    "end": "193439"
  },
  {
    "text": "account management key management legal encoding of movies and all those things and then we also have some sort of bad",
    "start": "193439",
    "end": "200730"
  },
  {
    "text": "jobs or periodic on-demand tasks which are run in containers through our container management system called Titus",
    "start": "200730",
    "end": "206599"
  },
  {
    "text": "now we also have some internally hosted services like for storage or real-time",
    "start": "206599",
    "end": "213180"
  },
  {
    "text": "data streaming and then we of course have employees or contractors which who are responsible to to bring these",
    "start": "213180",
    "end": "221269"
  },
  {
    "text": "applications together and run them maintain them now this all looks simple",
    "start": "221269",
    "end": "227159"
  },
  {
    "text": "and not maybe not too different from your setup but then things get",
    "start": "227159",
    "end": "232769"
  },
  {
    "text": "challenging when this happens they want to talk to each other right of course",
    "start": "232769",
    "end": "239489"
  },
  {
    "text": "there are other interactions where applications go and talk to the cloud provider resources like you know storage",
    "start": "239489",
    "end": "246629"
  },
  {
    "text": "in case of AWS it will be s3 or database or queueing but we are going to today",
    "start": "246629",
    "end": "251760"
  },
  {
    "text": "focus only on that the interaction within within the control plane so all",
    "start": "251760",
    "end": "259620"
  },
  {
    "text": "these applications all these services are hosted by us and controlled by us now when they don't want to talk to each",
    "start": "259620",
    "end": "265919"
  },
  {
    "text": "other you want to make sure that they have an opportunity to decide who gets to talk to them at what level",
    "start": "265919",
    "end": "273260"
  },
  {
    "text": "so of course as I said we're not talking about authentication a lot of people say",
    "start": "273260",
    "end": "278640"
  },
  {
    "text": "when you have Network reach ability that's all we need you have network reach abilities that means somebody is authorized to talk to",
    "start": "278640",
    "end": "284160"
  },
  {
    "text": "you not really so first of all that's not authentication and authorization is",
    "start": "284160",
    "end": "290250"
  },
  {
    "text": "definitely not so what you want to do is you want to go much granular level not",
    "start": "290250",
    "end": "295440"
  },
  {
    "text": "just the network reach ability but for I'll give an example so what if one of",
    "start": "295440",
    "end": "300660"
  },
  {
    "text": "these services is a rest-based service then you want to control exactly who gets to cal call what rest endpoint",
    "start": "300660",
    "end": "307610"
  },
  {
    "text": "right so let's define this kind of problem like I just give an example of",
    "start": "307610",
    "end": "312960"
  },
  {
    "start": "310000",
    "end": "310000"
  },
  {
    "text": "rest but it doesn't mean anything because this is a very very diverse back-end where we have rest based services G RPC",
    "start": "312960",
    "end": "320760"
  },
  {
    "text": "based services there's some services that have their own custom binary protocol has nothing to do with any",
    "start": "320760",
    "end": "326130"
  },
  {
    "text": "standardization so how do you solve ODS e problem in a world like that where you have such a diverse set of services they",
    "start": "326130",
    "end": "333720"
  },
  {
    "text": "have random different protocols that they use the random different resources that they host and is being called by",
    "start": "333720",
    "end": "340380"
  },
  {
    "text": "people and services right so if once you do that and you try to solve that",
    "start": "340380",
    "end": "346320"
  },
  {
    "text": "problem you have to first define that problem and with this kind of diversity it feels very general so the only best",
    "start": "346320",
    "end": "354060"
  },
  {
    "text": "thing I could do with that kind of problem at hand was come up with this",
    "start": "354060",
    "end": "359360"
  },
  {
    "text": "definition we need a simple way to define and enforce rules that read",
    "start": "359360",
    "end": "366360"
  },
  {
    "text": "something like this identity I can or",
    "start": "366360",
    "end": "371460"
  },
  {
    "text": "cannot perform operation Oh on resource are for all combinations of i/o and are",
    "start": "371460",
    "end": "381450"
  },
  {
    "text": "in your ecosystem that sounds like boiling an ocean right however this",
    "start": "381450",
    "end": "388050"
  },
  {
    "text": "problem needs to be solved because if you have any subset of this i io and R",
    "start": "388050",
    "end": "393360"
  },
  {
    "text": "and then you have one solution for that you're gonna end up having nine solutions in your ecosystem and luscom",
    "start": "393360",
    "end": "399240"
  },
  {
    "text": "visibly and control completely so that was not an option we had to have one system that",
    "start": "399240",
    "end": "406960"
  },
  {
    "text": "would take if not 100% like majority of your combinations of IO and R that is",
    "start": "406960",
    "end": "414790"
  },
  {
    "text": "identities of operations and resources now just before you start building",
    "start": "414790",
    "end": "420760"
  },
  {
    "start": "418000",
    "end": "418000"
  },
  {
    "text": "something like this you have to have your guiding principles and requirements in place so we wanted to make sure that",
    "start": "420760",
    "end": "426460"
  },
  {
    "text": "we write down all these things before we actually propose something so first",
    "start": "426460",
    "end": "432580"
  },
  {
    "text": "thing first I don't know if you cut a dance keynote today but she did talk about like how company culture impacts",
    "start": "432580",
    "end": "439990"
  },
  {
    "text": "tech as in the the solutions you build and it sometimes goes the other way as well where whatever you build also",
    "start": "439990",
    "end": "445900"
  },
  {
    "text": "impacts the culture but in this particular case because this is an authorization system in a cloud native",
    "start": "445900",
    "end": "451780"
  },
  {
    "text": "environment where you want to make things self-serve because what we have",
    "start": "451780",
    "end": "457180"
  },
  {
    "text": "at culture like core of our culture is something called freedom and responsibility where all our engineers",
    "start": "457180",
    "end": "462670"
  },
  {
    "text": "all developers all teams are free to do whatever they want whatever it is the whatever is best for their own service",
    "start": "462670",
    "end": "470080"
  },
  {
    "text": "now in this environment when they have their ownership of their own service",
    "start": "470080",
    "end": "475330"
  },
  {
    "text": "they are also required to define who gets to talk to their service at what",
    "start": "475330",
    "end": "481180"
  },
  {
    "text": "level so if if a solution is not giving them that kind of freedom it's not going to",
    "start": "481180",
    "end": "486460"
  },
  {
    "text": "fly in a company like Netflix so first thing first we have to make sure that the solution works with the company's",
    "start": "486460",
    "end": "492430"
  },
  {
    "text": "culture second resource type as I mentioned we don't have one resource",
    "start": "492430",
    "end": "497560"
  },
  {
    "text": "type we don't have we don't want to just do a solution for rest services or JRPG",
    "start": "497560",
    "end": "503890"
  },
  {
    "text": "of services so remember I'm talking about random stuff here not even rest",
    "start": "503890",
    "end": "509050"
  },
  {
    "text": "and G RPC as in some sort of API cause I'm talking SSH access to so for example if you have a VM and you need a CH",
    "start": "509050",
    "end": "515680"
  },
  {
    "text": "access into a system SSH becomes your resource right so it's not just the API call is SSH - so identities a lot of",
    "start": "515680",
    "end": "526420"
  },
  {
    "text": "identity authorization system that you will see around there mostly are back and they are LDAP based or you know some sort of ad",
    "start": "526420",
    "end": "536889"
  },
  {
    "text": "based the the problem there is now you have to have accounts and mostly most of those systems are designed for users but",
    "start": "536889",
    "end": "544569"
  },
  {
    "text": "here you have incoming identities that can be users and users can also be like full-time employees contractors and then",
    "start": "544569",
    "end": "551290"
  },
  {
    "text": "you can have software which can be bad jobs which can be containers running",
    "start": "551290",
    "end": "557620"
  },
  {
    "text": "services or some of the VMs running services so all these collars need to be identified and supporting underlying",
    "start": "557620",
    "end": "565480"
  },
  {
    "text": "protocols so as I said it could be HTTP G RPC completely custom binary protocols implementation languages so freedom",
    "start": "565480",
    "end": "573009"
  },
  {
    "text": "responsibility again where people are free to use whatever language they",
    "start": "573009",
    "end": "579040"
  },
  {
    "text": "prefer I mean there could be religious war about this where you know Java Scala node till Ruby Python rust all right",
    "start": "579040",
    "end": "588910"
  },
  {
    "text": "latency I think this is one of the one of the one of the requirements that I",
    "start": "588910",
    "end": "595060"
  },
  {
    "text": "really had to think through and has actually big impact on the architecture we ended up coming with so think about a",
    "start": "595060",
    "end": "601750"
  },
  {
    "text": "Kafka cluster right which basically has a bunch of nodes and each node has",
    "start": "601750",
    "end": "606939"
  },
  {
    "text": "thousand requests per second now if you go back to your queueing theory a little",
    "start": "606939",
    "end": "612040"
  },
  {
    "text": "bit if your authorization decision on every request to put or get from a Kafka",
    "start": "612040",
    "end": "617709"
  },
  {
    "text": "topic takes more than one millisecond you are thrashing you're you you you went over your service rate right that",
    "start": "617709",
    "end": "624790"
  },
  {
    "text": "means your authorization decision has to be made in sub-millisecond otherwise you're not even serving right so in this",
    "start": "624790",
    "end": "631870"
  },
  {
    "text": "particular case can you even think about an authorization decision that requires a network roundtrip you cannot so some",
    "start": "631870",
    "end": "640480"
  },
  {
    "text": "of these things you had to be considered flexibility of rules I think this is where touring we'll talk more about but",
    "start": "640480",
    "end": "646750"
  },
  {
    "text": "once you have all these resources today you know your use cases today but that",
    "start": "646750",
    "end": "652120"
  },
  {
    "text": "doesn't mean you you know and you can predict everything that is going to come next week so if your rule engine or if",
    "start": "652120",
    "end": "658360"
  },
  {
    "text": "your the way you write your policies is is hard-coded and does I actually allow you to write it in a",
    "start": "658360",
    "end": "665660"
  },
  {
    "text": "way that it feels more like a language then you you can really restrict yourself in future so we wanted to make",
    "start": "665660",
    "end": "672380"
  },
  {
    "text": "sure that flexibility of rule is is there and the last one I call capture of intent what I mean by this is basically",
    "start": "672380",
    "end": "679700"
  },
  {
    "text": "when people are self served they tend to make mistake they're not malicious they",
    "start": "679700",
    "end": "685040"
  },
  {
    "text": "just didn't have their coffee right they think they did something but that's not exactly what they actually ended up",
    "start": "685040",
    "end": "691280"
  },
  {
    "text": "writing in policy so is there is there any way to basically make sure that we give them the freedom but not enough",
    "start": "691280",
    "end": "697610"
  },
  {
    "text": "rope to hang themselves so this is what we came up with where I think I would",
    "start": "697610",
    "end": "703850"
  },
  {
    "start": "699000",
    "end": "699000"
  },
  {
    "text": "say at this point we will go one by one but look at service a on the bottom left",
    "start": "703850",
    "end": "709550"
  },
  {
    "text": "and service B on the bottom right service a is a VM that is running is application code and you see a little",
    "start": "709550",
    "end": "715670"
  },
  {
    "text": "box called G agent and on the right you have a pod which has application code",
    "start": "715670",
    "end": "722540"
  },
  {
    "text": "and another container in the same part which is authorization agent so let's look at this architecture one by one",
    "start": "722540",
    "end": "728810"
  },
  {
    "text": "what happens so here you have policy portal where engineers or developer team",
    "start": "728810",
    "end": "734960"
  },
  {
    "text": "team members go and go write their own policies for their own services it's a UI based system and they're able to",
    "start": "734960",
    "end": "743090"
  },
  {
    "text": "create policies delete policies reorder the rules inside the policies and then",
    "start": "743090",
    "end": "748400"
  },
  {
    "text": "there are sometimes we have to give some override mechanisms to you know some critical teams like you know say cops",
    "start": "748400",
    "end": "755440"
  },
  {
    "text": "and for insects and and stuff like that and all the policies are version and",
    "start": "755440",
    "end": "760730"
  },
  {
    "text": "stored in the database now sometimes you have to write policies based on data",
    "start": "760730",
    "end": "766310"
  },
  {
    "text": "that is not necessarily in coming from your request its from external data now",
    "start": "766310",
    "end": "772130"
  },
  {
    "text": "for example let's say if you had a rest-based service and you say slash admin / anything is only accessible by",
    "start": "772130",
    "end": "779150"
  },
  {
    "text": "owner of this app now in that particular case you need to find out who the owner",
    "start": "779150",
    "end": "784940"
  },
  {
    "text": "of a given app is that mapping between app and app owner is coming from some",
    "start": "784940",
    "end": "790520"
  },
  {
    "text": "external source so in this case it could be application ownership database right",
    "start": "790520",
    "end": "795890"
  },
  {
    "text": "or another example is okay I had this application and this application is only meant to be used by",
    "start": "795890",
    "end": "801589"
  },
  {
    "text": "finance team okay who's in the finance team that information about user verse",
    "start": "801589",
    "end": "807200"
  },
  {
    "text": "and finance team needs to come from somewhere else probably employee management database so now you are",
    "start": "807200",
    "end": "812540"
  },
  {
    "text": "writing all these policies and you need facts source of truth for all this information and needs to come from",
    "start": "812540",
    "end": "818209"
  },
  {
    "text": "somewhere else so depending on in future how many different types of policies you write you may have fetch data from",
    "start": "818209",
    "end": "824390"
  },
  {
    "text": "multiple sources so we have a concept called aggregator whose job it is to basically fetch all this data from",
    "start": "824390",
    "end": "830870"
  },
  {
    "text": "different sources and keep it fresh then there's a concept of distributor which",
    "start": "830870",
    "end": "837200"
  },
  {
    "text": "basically pulls all the policies and related data from aggregator and keeps",
    "start": "837200",
    "end": "843140"
  },
  {
    "text": "it hot now the difference between aggregator and distributor is distributor is fairly scalable because",
    "start": "843140",
    "end": "849920"
  },
  {
    "text": "it keeps everything in memory you can slice and dice it and put it in different let's say cloud provider",
    "start": "849920",
    "end": "856040"
  },
  {
    "text": "account for security and stuff like that and then you have these distributors as",
    "start": "856040",
    "end": "861800"
  },
  {
    "text": "the name says starts distributing all these policies and relevant data to the authorization agents now what happens is",
    "start": "861800",
    "end": "868990"
  },
  {
    "text": "the authorization agents are able to then synchronously download all this",
    "start": "868990",
    "end": "874940"
  },
  {
    "text": "information and keep it hot so you see the red arrows right there are the what",
    "start": "874940",
    "end": "880010"
  },
  {
    "text": "I call hot path where the request comes in to the application it is going to the authorization agent and come back with",
    "start": "880010",
    "end": "886970"
  },
  {
    "text": "the answer now I mentioned something about the latency see here that we are",
    "start": "886970",
    "end": "892339"
  },
  {
    "text": "not making a network round-trip the authorization agent is sitting on there it's right there",
    "start": "892339",
    "end": "898490"
  },
  {
    "text": "in case of part it's still probably like right right next to each other so you're not spending a real network round term",
    "start": "898490",
    "end": "905110"
  },
  {
    "text": "now if you do mean little bit into the agent itself it has two parts like hot",
    "start": "905110",
    "end": "911180"
  },
  {
    "start": "907000",
    "end": "907000"
  },
  {
    "text": "path and the a synchronous part so hard part is the gray part where you the application is making a request for",
    "start": "911180",
    "end": "917180"
  },
  {
    "text": "authorization decision whatever request you received for whatever resource is going to pass that information to to the",
    "start": "917180",
    "end": "923329"
  },
  {
    "text": "Aged attitude to the policy engine you see here we are using open policy agents",
    "start": "923329",
    "end": "930290"
  },
  {
    "text": "engine Torian is going to talk more about it and then we have a slow path or a synchronous path which is the blue",
    "start": "930290",
    "end": "936320"
  },
  {
    "text": "path which is downloading all this information periodically from distributors now this is all like",
    "start": "936320",
    "end": "944300"
  },
  {
    "start": "943000",
    "end": "943000"
  },
  {
    "text": "architecture in T so let's take a one can concrete example in a familiar-looking setup alright so think",
    "start": "944300",
    "end": "950990"
  },
  {
    "text": "about a very very simple rest-based payroll system and it basically has only",
    "start": "950990",
    "end": "956149"
  },
  {
    "text": "two rest endpoints that it exposes one get salary second update salary right",
    "start": "956149",
    "end": "962779"
  },
  {
    "text": "now you want to write an authorization policy for this particular app this is what you want to write employees can",
    "start": "962779",
    "end": "969920"
  },
  {
    "text": "read their own salaries and then salaries of anybody who reports to them right so in this case let's say Bob",
    "start": "969920",
    "end": "975889"
  },
  {
    "text": "reports to Alice now when Bob reports to Alice Bob is able to get it his own salary but Alice is able to get her own",
    "start": "975889",
    "end": "982910"
  },
  {
    "text": "salary and then Bob salary - this is what you want to achieve then you want",
    "start": "982910",
    "end": "987949"
  },
  {
    "text": "to have report generator bad job some bad job kicks off every I don't know week a weekly basis and write some sort",
    "start": "987949",
    "end": "995000"
  },
  {
    "text": "of country some numbers you want to give that report generator app permission to read anybody's salary so you want",
    "start": "995000",
    "end": "1001870"
  },
  {
    "text": "something like this get charlie start and then you have let's say performance",
    "start": "1001870",
    "end": "1007810"
  },
  {
    "text": "review app that is you know I don't know kicks it yearly six monthly whatever",
    "start": "1007810",
    "end": "1013510"
  },
  {
    "text": "your company does and goes and updates that salary of course you don't want to give access to employees to to write and",
    "start": "1013510",
    "end": "1021279"
  },
  {
    "text": "post their own update salary so you say all right only that application has",
    "start": "1021279",
    "end": "1027298"
  },
  {
    "text": "access to the post API at this point I'm",
    "start": "1027299",
    "end": "1032319"
  },
  {
    "text": "going to have handed over to Turin who will explain how all this magic happens within OPA",
    "start": "1032319",
    "end": "1038760"
  },
  {
    "text": "okay thanks Manish okay so ministers gave a great overview of how Netflix is",
    "start": "1038760",
    "end": "1045069"
  },
  {
    "text": "solving authorization at scale across their stack and what I think really resonates for me and for a lot of us",
    "start": "1045069",
    "end": "1050320"
  },
  {
    "text": "here today is that is that so many organizations are trying to solve authorization and policy enforcement at",
    "start": "1050320",
    "end": "1055990"
  },
  {
    "text": "scale across all these different kinds of resource types and execution environments and languages and",
    "start": "1055990",
    "end": "1061310"
  },
  {
    "text": "providers and so on now what I also really like is this desire for a general purpose solution that solves for all of",
    "start": "1061310",
    "end": "1067910"
  },
  {
    "text": "these different combinations in a holistic way across the stack and so this is what we set out to do when we",
    "start": "1067910",
    "end": "1073070"
  },
  {
    "text": "created the open policy agent project so the open policy agent or OPA as we like",
    "start": "1073070",
    "end": "1078560"
  },
  {
    "start": "1076000",
    "end": "1076000"
  },
  {
    "text": "to call it is an open source general purpose policy engine what that means is that you can take OPA and you can apply",
    "start": "1078560",
    "end": "1085070"
  },
  {
    "text": "it to any system at any layer of the stack and what you get when you use OPA",
    "start": "1085070",
    "end": "1090380"
  },
  {
    "text": "is this purpose-built engine that you can use to offload policy decisions to so the idea or the way this would work",
    "start": "1090380",
    "end": "1096740"
  },
  {
    "text": "is that say you're building this this service that exposes an HTTP API well you would take that service and you",
    "start": "1096740",
    "end": "1102500"
  },
  {
    "text": "would integrate it with OPA to execute a query against OPA when it wants to enforce access controls over who can access or who can do what",
    "start": "1102500",
    "end": "1108770"
  },
  {
    "text": "via the API in that query you would supply a bunch of input like the method",
    "start": "1108770",
    "end": "1113780"
  },
  {
    "text": "and the path and the headers and maybe the body and so on and then open would take that input that query and it would",
    "start": "1113780",
    "end": "1119540"
  },
  {
    "text": "combine it with the policies and the data and so on and it would evaluate all of that to produce an answer like a",
    "start": "1119540",
    "end": "1125150"
  },
  {
    "text": "Lauer deny which we then send back your service so that it could be enforced now open itself is implemented in go and",
    "start": "1125150",
    "end": "1131930"
  },
  {
    "text": "it's designed to be as lightweight as possible so you can take it and you can run it as a sidecar next to your your",
    "start": "1131930",
    "end": "1138860"
  },
  {
    "text": "application or you can run it as a host level daemon or you can embed it directly into your application as a",
    "start": "1138860",
    "end": "1144380"
  },
  {
    "text": "library just like Netflix is doing now I said it's lightweight and the reason for",
    "start": "1144380",
    "end": "1149450"
  },
  {
    "text": "that is because basically all of the policies and data that OPA uses for evaluation are kept in memory so it",
    "start": "1149450",
    "end": "1154970"
  },
  {
    "text": "doesn't introduce any kind of runtime dependencies at deployment time so it doesn't depend on an external database or an external service or anything like",
    "start": "1154970",
    "end": "1160640"
  },
  {
    "text": "that everything's cached in memory now in addition to the the core evaluation",
    "start": "1160640",
    "end": "1166070"
  },
  {
    "text": "engine that OPA gives you OPA also provides a suite of tooling that you can use to develop your policies locally so",
    "start": "1166070",
    "end": "1172220"
  },
  {
    "text": "it gives you like an interactive shell to experiment with and debug policies it gives you a test framework to codify you",
    "start": "1172220",
    "end": "1178010"
  },
  {
    "text": "know unit tests over it over your policies and so on now the core thing that OPA gives you though is this is",
    "start": "1178010",
    "end": "1183800"
  },
  {
    "text": "this high-level declarative policy language and we call that language Rago and what Rago does is it gives you the",
    "start": "1183800",
    "end": "1189230"
  },
  {
    "text": "ability to write express policy as code and so what that looks like when you use",
    "start": "1189230",
    "end": "1194540"
  },
  {
    "text": "Rago you write a bunch of rules in this declarative language and they answer the rules exist to answer questions or make",
    "start": "1194540",
    "end": "1199970"
  },
  {
    "text": "decisions like you know can user X perform operation Y on resource Z so we",
    "start": "1199970",
    "end": "1206029"
  },
  {
    "text": "thought we would do is step through this example that minish set up and show how you would use OPA to enforce it so the",
    "start": "1206029",
    "end": "1212450"
  },
  {
    "start": "1207000",
    "end": "1207000"
  },
  {
    "text": "policy in English is fairly simple it says that you know employees are allowed to read their own salary and then any",
    "start": "1212450",
    "end": "1218570"
  },
  {
    "text": "button and then they can also read the salary of anybody who reports to them so let's look at how you would actually use",
    "start": "1218570",
    "end": "1223999"
  },
  {
    "text": "/ to enforce this so when you're using open to enforce policy what you're",
    "start": "1223999",
    "end": "1229789"
  },
  {
    "start": "1226000",
    "end": "1226000"
  },
  {
    "text": "mainly thinking about doing is writing rules they make decisions over some data and the language that OPA gives you to",
    "start": "1229789",
    "end": "1237019"
  },
  {
    "text": "do that is purpose-built for writing policy and reasoning over arbitrary data and the reason for that is because when",
    "start": "1237019",
    "end": "1242840"
  },
  {
    "text": "you're thinking about policy what you're thinking about is data and logic and so what you really want is a language that",
    "start": "1242840",
    "end": "1248600"
  },
  {
    "text": "lets you focus on exactly that and so that's what the language is purpose-built for and so what we're",
    "start": "1248600",
    "end": "1253970"
  },
  {
    "text": "going to do is create a rule called allow and that rule is going to allow requests if the employee is trying to",
    "start": "1253970",
    "end": "1259460"
  },
  {
    "text": "read their own salary now in order to make that decision of whether or not to allow that request or not we're going to",
    "start": "1259460",
    "end": "1264799"
  },
  {
    "text": "need some data to make the decision over and so the service is going to provide some input and you can see an example of",
    "start": "1264799",
    "end": "1269840"
  },
  {
    "text": "that on the on the Left so provides the the method and the path and then the authenticated user making the request",
    "start": "1269840",
    "end": "1275450"
  },
  {
    "text": "and then we're gonna have the rule use that data to make a decision so you can understand this rule or you can read it",
    "start": "1275450",
    "end": "1281899"
  },
  {
    "text": "as basically allow is true if the input method matches get and input dot path",
    "start": "1281899",
    "end": "1288739"
  },
  {
    "text": "matches get salary ID and input user matches ID now the interesting thing",
    "start": "1288739",
    "end": "1295399"
  },
  {
    "text": "about this example is that that ID value is actually a variable and so that variable is going to be bound when oppa",
    "start": "1295399",
    "end": "1301129"
  },
  {
    "text": "evaluates the rule to a single value across all of those expressions and so for example in the in the second",
    "start": "1301129",
    "end": "1306200"
  },
  {
    "text": "expression in the rule it's going to get bound to Bob in the path and then in the third expression that's going to act as",
    "start": "1306200",
    "end": "1311480"
  },
  {
    "text": "like an equality check so it's gonna see whether or not the input user matches Bob and in this case it would and so the",
    "start": "1311480",
    "end": "1316730"
  },
  {
    "text": "request would be allowed okay so now we're going to add another rule called",
    "start": "1316730",
    "end": "1322369"
  },
  {
    "start": "1320000",
    "end": "1320000"
  },
  {
    "text": "allow again to handle this second case where someone is requesting the salary of an employee who reports to them",
    "start": "1322369",
    "end": "1327640"
  },
  {
    "text": "and so this rules can have exactly the same structure we're going to match on the path and match on the method but",
    "start": "1327640",
    "end": "1332799"
  },
  {
    "text": "this time we need to do something a little bit different and so the input data to the policy engine would be exactly the same it's exactly the same",
    "start": "1332799",
    "end": "1338650"
  },
  {
    "text": "but we're gonna make use of additional data or context that's held in Opa and so in this case we see an example of the",
    "start": "1338650",
    "end": "1345250"
  },
  {
    "text": "data on the left and so we've got the management chain saying that Bob reports to Alice and Ken and Alice reports to Ken and then what we're going to do is",
    "start": "1345250",
    "end": "1351820"
  },
  {
    "text": "use that data or that context to decide whether or not to allow the request and so that's exactly what's happening in",
    "start": "1351820",
    "end": "1356860"
  },
  {
    "text": "the third and fourth expression in this rule so the third expression looks up the management chain for a given user",
    "start": "1356860",
    "end": "1363040"
  },
  {
    "text": "and then the fourth expression searches over that management chain to see if the input user is is a manager ok and so at",
    "start": "1363040",
    "end": "1370630"
  },
  {
    "text": "this point we've actually codified the entire policy using OPA but there are a couple other things that I want to point",
    "start": "1370630",
    "end": "1375940"
  },
  {
    "text": "out before I head back to Manish so the first thing is that in this case we have this logic that determines whether or",
    "start": "1375940",
    "end": "1381640"
  },
  {
    "text": "not one user is a manager of another and while it's relatively simple you may want to have this logic reused",
    "start": "1381640",
    "end": "1388090"
  },
  {
    "text": "throughout your policies and so you don't want to duplicate it you don't repeat yourself all the time and so what you want to go to do is share and reuse",
    "start": "1388090",
    "end": "1393370"
  },
  {
    "text": "that and so to do that OPA gives you the ability to compose policy and what that means is that you can basically take",
    "start": "1393370",
    "end": "1399100"
  },
  {
    "start": "1395000",
    "end": "1395000"
  },
  {
    "text": "logic and you can split it you can factor it into separate rules or separate functions and then you can call",
    "start": "1399100",
    "end": "1404410"
  },
  {
    "text": "those rules or functions from from other rules and functions and so in this case we're going to do just that we're going",
    "start": "1404410",
    "end": "1409750"
  },
  {
    "text": "to take the the check to for manager for managers and we're going to pull that out into a separate function that will",
    "start": "1409750",
    "end": "1415270"
  },
  {
    "text": "return true if a is a manager of B and then all you do is just update the original rule obviously so what I",
    "start": "1415270",
    "end": "1422230"
  },
  {
    "text": "haven't shown here though is that all of these these policies are actually contained in packages and so they're actually namespace just like you'd be",
    "start": "1422230",
    "end": "1427360"
  },
  {
    "text": "used to in a in a standard programming language like NGO or Python or whatever and so that ensures that these policies",
    "start": "1427360",
    "end": "1433720"
  },
  {
    "text": "are namespace correctly and that they don't run into collisions the second",
    "start": "1433720",
    "end": "1439240"
  },
  {
    "start": "1438000",
    "end": "1438000"
  },
  {
    "text": "thing I want to point out is that OPA is completely resource agnostic so it's not coupled to any domain specific model and",
    "start": "1439240",
    "end": "1445990"
  },
  {
    "text": "this is the main reason why we can say that its general purpose because regardless of whether or not you're writing policy over HTTP api's or Kafka",
    "start": "1445990",
    "end": "1454030"
  },
  {
    "text": "or SSH it's all just data to Opa Opa doesn't care matter it's all just data now obviously",
    "start": "1454030",
    "end": "1463680"
  },
  {
    "start": "1462000",
    "end": "1462000"
  },
  {
    "text": "if you're thinking about enforcing access control in HTTP API is or message brokers your performance is going to be",
    "start": "1463680",
    "end": "1469980"
  },
  {
    "text": "absolutely key and so this is something that we've designed for from the very beginning of the project and so for",
    "start": "1469980",
    "end": "1474990"
  },
  {
    "text": "example if you take OPA and you try to use it to enforce a role based access control policy where the",
    "start": "1474990",
    "end": "1480540"
  },
  {
    "text": "policy basically has to search for bindings that match the authenticated user and then find roles that match those bindings you see latencies of",
    "start": "1480540",
    "end": "1487500"
  },
  {
    "text": "around 10 to 20 microseconds in the worst case but the really cool thing here is that even as the data set grows",
    "start": "1487500",
    "end": "1495090"
  },
  {
    "text": "the latency remains relatively stable and so for example in the second row there the data set that the engine",
    "start": "1495090",
    "end": "1500550"
  },
  {
    "text": "actually has to search over is about six orders of magnitude larger than the first one so it scales very very nicely",
    "start": "1500550",
    "end": "1508460"
  },
  {
    "text": "okay and so while you can take open today and you can use it to enforce authorization policies in your services",
    "start": "1508460",
    "end": "1515700"
  },
  {
    "text": "you can also use it to enforce a variety of other kinds of policies throughout the stack so for example we have",
    "start": "1515700",
    "end": "1522030"
  },
  {
    "text": "integrations and we've shown how you can use it to enforce admission control policies workload placement policies",
    "start": "1522030",
    "end": "1527700"
  },
  {
    "text": "management policies rights elevation and more now to do that you don't have to",
    "start": "1527700",
    "end": "1533250"
  },
  {
    "text": "start from scratch because we've got a bunch of great tutorials on the website and we have a number of pre-built integrations that you can use out of the",
    "start": "1533250",
    "end": "1540390"
  },
  {
    "text": "box for projects like kubernetes and docker and sto and of course we've got many more coming so I just want to say",
    "start": "1540390",
    "end": "1548370"
  },
  {
    "text": "that you know we're very excited about the open policy agent project because it provides this reusable building block to the community to into the ecosystem and",
    "start": "1548370",
    "end": "1555960"
  },
  {
    "text": "it helps solve fundamental security problems like authorization across the stack because ultimately at the end of",
    "start": "1555960",
    "end": "1561690"
  },
  {
    "text": "the day we all need a way to control who can do what throughout our systems so before I head back to Manish I just like",
    "start": "1561690",
    "end": "1568770"
  },
  {
    "text": "to point out when everybody at the repo please check it out give us your stars and we also have a demo booth in the",
    "start": "1568770",
    "end": "1574440"
  },
  {
    "text": "vendor area so if you're interested this kind of thing and you want to see a demo please come on by and say hi ok back to",
    "start": "1574440",
    "end": "1580559"
  },
  {
    "text": "you all right thanks Tori so oppa is",
    "start": "1580559",
    "end": "1588330"
  },
  {
    "start": "1585000",
    "end": "1585000"
  },
  {
    "text": "amazing has a lot of flexibility and as you saw some of the policy snippets it's not",
    "start": "1588330",
    "end": "1595620"
  },
  {
    "text": "that hard from syntax perspective however we're talking about a company like Netflix which has hundreds of teams",
    "start": "1595620",
    "end": "1602100"
  },
  {
    "text": "here and then they remember go back to the original requirement of self-serve so I have to make this system self sir",
    "start": "1602100",
    "end": "1609570"
  },
  {
    "text": "so these teams are very competent and everything but sometimes they forget",
    "start": "1609570",
    "end": "1616350"
  },
  {
    "text": "their coffee so I really don't want them to write any complex looking code so",
    "start": "1616350",
    "end": "1622220"
  },
  {
    "text": "what we had to do was basically make sure that that their life is as easy as",
    "start": "1622220",
    "end": "1628830"
  },
  {
    "text": "possible when they're starting to write their policies so what we ended up doing where's take two steps so first step was",
    "start": "1628830",
    "end": "1635310"
  },
  {
    "text": "we we built a UI on top of this OPA language so the complexity of the",
    "start": "1635310",
    "end": "1641340"
  },
  {
    "text": "language is hidden from them so I'll give you an example here for the it's an",
    "start": "1641340",
    "end": "1647610"
  },
  {
    "text": "animated thing I don't know if it's very visible but this is the UI that does the",
    "start": "1647610",
    "end": "1653250"
  },
  {
    "text": "exact same thing as underneath it basically converts the UI action into",
    "start": "1653250",
    "end": "1658440"
  },
  {
    "text": "OPA policy so in this particular case all I'm doing is saying that this post endpoint is only accessible should be",
    "start": "1658440",
    "end": "1666900"
  },
  {
    "text": "only accessible by performance review application right and then that this is",
    "start": "1666900",
    "end": "1672660"
  },
  {
    "text": "this is what people this is what I call capturing intent their intent is to just",
    "start": "1672660",
    "end": "1677700"
  },
  {
    "text": "allow this particular application this hopefully very intuitive UI allows them to do that without making much mistakes",
    "start": "1677700",
    "end": "1684300"
  },
  {
    "text": "and then if I make a second example of the get salary endpoint it's slightly",
    "start": "1684300",
    "end": "1690870"
  },
  {
    "text": "more complex because has more than one rules has more than one rule because you",
    "start": "1690870",
    "end": "1696000"
  },
  {
    "text": "have employee then you have manager and then you have the report generator application so in this particular case",
    "start": "1696000",
    "end": "1701490"
  },
  {
    "text": "you have three rules and as you see the animation is trying to do very similar",
    "start": "1701490",
    "end": "1708090"
  },
  {
    "text": "stuff that OPA was showing is just that it's in UI format right fortunately in",
    "start": "1708090",
    "end": "1713580"
  },
  {
    "text": "this particular case all these three rules are not overlapping so order of those rules won't matter",
    "start": "1713580",
    "end": "1719520"
  },
  {
    "text": "however the the way we write policies is basically if you have ever had pleasure of configuring IP table",
    "start": "1719520",
    "end": "1725670"
  },
  {
    "text": "in the past you basically have all these specific rules at the top and the generic rooms at the bottom so you can",
    "start": "1725670",
    "end": "1732120"
  },
  {
    "text": "catch everything here so the way we have made this is the UI allows you to",
    "start": "1732120",
    "end": "1737480"
  },
  {
    "text": "arrange your rules the way you want and it will be executed in the order it was",
    "start": "1737480",
    "end": "1742820"
  },
  {
    "text": "listed so that that helps write policies",
    "start": "1742820",
    "end": "1748710"
  },
  {
    "text": "in a way that you know you intent will take all the questions so one more thing",
    "start": "1748710",
    "end": "1755190"
  },
  {
    "text": "we had to do was yes this is good and dandy but it still doesn't actually answer the question did you capture the",
    "start": "1755190",
    "end": "1762210"
  },
  {
    "text": "intent because the intent is only with the person who's actually making these rules so they know in plain English what",
    "start": "1762210",
    "end": "1769050"
  },
  {
    "text": "they wanna achieve but they don't actually know exactly what they did is going to perform what they think they",
    "start": "1769050",
    "end": "1774930"
  },
  {
    "text": "did right so the second step we took was basically we built in unit testing",
    "start": "1774930",
    "end": "1779970"
  },
  {
    "text": "mechanism in this UI so what we did and fortunately I don't have screen shot for that at this point but what we ended up",
    "start": "1779970",
    "end": "1786240"
  },
  {
    "text": "doing is we said okay you want to write this policy you finished writing the",
    "start": "1786240",
    "end": "1791340"
  },
  {
    "text": "policy and then you write a test for it as in whatever you think you did this",
    "start": "1791340",
    "end": "1797010"
  },
  {
    "text": "test should pass so you can have positive use positive unit S or negative unit test and then before you actually",
    "start": "1797010",
    "end": "1803760"
  },
  {
    "text": "save your policy and it gets pushed into product production it will run all the unit tests and only when this they pass",
    "start": "1803760",
    "end": "1811010"
  },
  {
    "text": "your policy will be updated in the production now what happens is policy is",
    "start": "1811010",
    "end": "1816480"
  },
  {
    "text": "written six months later somebody wants to go and add one rule to it and they completely forget all all the intents",
    "start": "1816480",
    "end": "1821700"
  },
  {
    "text": "that they had six months back so these unit tests will save their day because the unit tests are saved with the",
    "start": "1821700",
    "end": "1828180"
  },
  {
    "text": "version of that policy so all the as soon as you update the policy all these unit tests that you had thought about",
    "start": "1828180",
    "end": "1833820"
  },
  {
    "text": "they will run before they actually the policy is pushed into production so yeah we don't want to be a gate keeper as",
    "start": "1833820",
    "end": "1839760"
  },
  {
    "text": "Diane mentioned this morning but we do want to provide the guardrails and this built in.you unit test is basically the",
    "start": "1839760",
    "end": "1846690"
  },
  {
    "text": "guard will let me build on top of the UI so just to summarize everything here we",
    "start": "1846690",
    "end": "1852240"
  },
  {
    "start": "1850000",
    "end": "1850000"
  },
  {
    "text": "basically have this very diverse back-end which has all these services",
    "start": "1852240",
    "end": "1857430"
  },
  {
    "text": "that are reusing random different protocols and have all these different resources that they host",
    "start": "1857430",
    "end": "1863590"
  },
  {
    "text": "and they have clients that look like people and jobs and and and viens bad",
    "start": "1863590",
    "end": "1869110"
  },
  {
    "text": "jobs running in containers whatnot so we had to first solve your authentication problem which we did and then once we",
    "start": "1869110",
    "end": "1875800"
  },
  {
    "text": "had that we had to make sure that the the authorization system is flexible and extensible now latency was also a big",
    "start": "1875800",
    "end": "1882490"
  },
  {
    "text": "deal so we I think Tory showed some numbers from opus perspective and when",
    "start": "1882490",
    "end": "1888340"
  },
  {
    "text": "we did our own benchmark this was basic policies could easily be done in less",
    "start": "1888340",
    "end": "1894640"
  },
  {
    "text": "than 0.2 milliseconds so which works for Kafka if it was for Kafka for me it",
    "start": "1894640",
    "end": "1900010"
  },
  {
    "text": "probably works for all the other services at this point inside Netflix at",
    "start": "1900010",
    "end": "1905620"
  },
  {
    "text": "Netflix calcio dating coordinating updates is very hard so if you had like any kind of hard-coded rule mechanism",
    "start": "1905620",
    "end": "1912160"
  },
  {
    "text": "and not using language based evaluation engine you're going to have really hard",
    "start": "1912160",
    "end": "1917200"
  },
  {
    "text": "time overtime to push out any sort of updates once you have language based system it is very easy to support new",
    "start": "1917200",
    "end": "1924430"
  },
  {
    "text": "kind of use cases and then obviously for being culturally successful in a company",
    "start": "1924430",
    "end": "1930520"
  },
  {
    "text": "like Netflix your solution has to provide something that is goes well with",
    "start": "1930520",
    "end": "1935830"
  },
  {
    "text": "freedom and responsibility so having a self-serve system with a good UI and good guardrails will actually make this",
    "start": "1935830",
    "end": "1942700"
  },
  {
    "text": "project very interesting and successful so in closing I would say that something",
    "start": "1942700",
    "end": "1948820"
  },
  {
    "start": "1946000",
    "end": "1946000"
  },
  {
    "text": "that you wanna take away is authorization is the fundamental security problem it is not new to cloud",
    "start": "1948820",
    "end": "1954010"
  },
  {
    "text": "by the way it just cloud just makes it more interesting because the way it works and if you're not there yet if",
    "start": "1954010",
    "end": "1961030"
  },
  {
    "text": "you're not there solving this problem yet you're gonna be there soon all right you can't just wish this one away",
    "start": "1961030",
    "end": "1966850"
  },
  {
    "text": "because you know in the in our parents days you had network security that was",
    "start": "1966850",
    "end": "1973000"
  },
  {
    "text": "enough and definitely not enough in in cloud environment what I would say one",
    "start": "1973000",
    "end": "1979210"
  },
  {
    "text": "more time is that if you are going to tackle this problem try to see how you can have a comprehensive solution rather",
    "start": "1979210",
    "end": "1985720"
  },
  {
    "text": "than some hodgepodge of nine different authorization systems in your back end because the end of the day they don't talk to",
    "start": "1985720",
    "end": "1992300"
  },
  {
    "text": "each other you don't have a common place that you can go and have some visibility it's going to be really messy and then",
    "start": "1992300",
    "end": "1998990"
  },
  {
    "text": "you have open source projects like OPA that you can make use of in fact I came",
    "start": "1998990",
    "end": "2005050"
  },
  {
    "text": "to know about openly like earlier this year and this I I knew my requirements",
    "start": "2005050",
    "end": "2012100"
  },
  {
    "text": "but as soon as I saw that I could switch my requirement even if let's say a language is not Turing complete it",
    "start": "2012100",
    "end": "2017950"
  },
  {
    "text": "doesn't mean that it's not good enough it's still a language right so you you should use go around look for",
    "start": "2017950",
    "end": "2024400"
  },
  {
    "text": "open-source projects and make sure that if it fits your requirement you're you're able to get there faster and the",
    "start": "2024400",
    "end": "2031060"
  },
  {
    "text": "last one I would say is you don't have to build this alone like you this problem is not necessarily new so a lot",
    "start": "2031060",
    "end": "2037390"
  },
  {
    "text": "of people are thinking about it there's a very young community called Padme they had actually a session earlier today so",
    "start": "2037390",
    "end": "2043420"
  },
  {
    "text": "if you are interested maybe you should get involved in community so that you can solve with other people and you may",
    "start": "2043420",
    "end": "2048908"
  },
  {
    "text": "even end up learning something more about this problem and you may find some more use cases you may not have thought",
    "start": "2048909",
    "end": "2055120"
  },
  {
    "text": "about all right so thank you so much I think we can take couple of questions so",
    "start": "2055120",
    "end": "2068200"
  },
  {
    "start": "2061000",
    "end": "2061000"
  },
  {
    "text": "question is what is is it available for public use what part yes so the open",
    "start": "2068200",
    "end": "2075429"
  },
  {
    "text": "policy agent that's totally open source it's been open source since day one it's a party license you can check it out on",
    "start": "2075429",
    "end": "2081250"
  },
  {
    "text": "github the UI is so UI is purpose-built for Netflix at this point but I would",
    "start": "2081250",
    "end": "2088330"
  },
  {
    "text": "say UI is very very specific to your use to your environment as well so and I",
    "start": "2088330",
    "end": "2095620"
  },
  {
    "text": "don't think it's the biggest component of this whole project anyways so",
    "start": "2095620",
    "end": "2101130"
  },
  {
    "text": "how do I compare this project with HT initiative I will not try to compare",
    "start": "2104450",
    "end": "2111030"
  },
  {
    "text": "this because I don't know a lot about this initiative about authorization but I would say one more thing remember I",
    "start": "2111030",
    "end": "2118230"
  },
  {
    "text": "have to solve this problem for even SSH so I don't think each to others SSH",
    "start": "2118230",
    "end": "2124740"
  },
  {
    "text": "right and we can we can talk later but I",
    "start": "2124740",
    "end": "2134340"
  },
  {
    "text": "mean this project started about a year back and I had not about heard about it still back then but yeah we can talk",
    "start": "2134340",
    "end": "2139950"
  },
  {
    "text": "yeah so I should have mentioned that so",
    "start": "2139950",
    "end": "2149970"
  },
  {
    "text": "the question is does the distributor pick up only set of rules to send to an",
    "start": "2149970",
    "end": "2155190"
  },
  {
    "text": "agent so we from day one we designed this system in a way that not only it sends the very very specific rules and",
    "start": "2155190",
    "end": "2162330"
  },
  {
    "text": "only things that applicable to you but the updates are Delta updates it's not sending everything anything that just",
    "start": "2162330",
    "end": "2169410"
  },
  {
    "text": "change only those things are sent over the wire otherwise this will just become a mess you're right by the way we are",
    "start": "2169410",
    "end": "2174660"
  },
  {
    "text": "right here for next 10 minutes or so and then if you have more questions so feel free to come by thank you so much for",
    "start": "2174660",
    "end": "2180090"
  },
  {
    "text": "your time today I am I hope this was helpful",
    "start": "2180090",
    "end": "2184310"
  }
]