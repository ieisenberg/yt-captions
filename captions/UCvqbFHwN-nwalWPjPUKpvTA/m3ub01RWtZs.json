[
  {
    "text": "how to deploy your spring boots application in amazon managed kubernetes",
    "start": "1520",
    "end": "7440"
  },
  {
    "text": "service and that is by divine odzier so if you",
    "start": "7440",
    "end": "12719"
  },
  {
    "text": "have any questions regarding this while this section is going on you can type it right in the chat",
    "start": "12719",
    "end": "18480"
  },
  {
    "text": "and get is what the tutorial is done with",
    "start": "18480",
    "end": "24759"
  },
  {
    "text": "would be first you create this springboot's application then you dockerize",
    "start": "30880",
    "end": "36320"
  },
  {
    "text": "hello everyone my name is divine alazie i'm a developer advocate and technical writer and also an aws community builder",
    "start": "38480",
    "end": "44320"
  },
  {
    "text": "for containers so today you'll learn how to deploy your springboard application in amazon manage",
    "start": "44320",
    "end": "49920"
  },
  {
    "text": "kubernetes service also known as eks the steps you follow in this particular",
    "start": "49920",
    "end": "56559"
  },
  {
    "text": "session would be first you create this spring boots application then you dockerize this springboard application",
    "start": "56559",
    "end": "61760"
  },
  {
    "text": "after the colorizing springboard application in order to like understand uh how kubernetes work before we move on",
    "start": "61760",
    "end": "66960"
  },
  {
    "text": "to like to eks we'll deploy the display dockerized image on locally on mini cube",
    "start": "66960",
    "end": "72720"
  },
  {
    "text": "which is a onenote kubernetes cluster then in order to use the application on eks we push the dockerize image to",
    "start": "72720",
    "end": "79840"
  },
  {
    "text": "amazon elastic container registry then next we'll create a kubernetes",
    "start": "79840",
    "end": "85280"
  },
  {
    "text": "cluster on eks and after that we deploy the application from the elastic",
    "start": "85280",
    "end": "90960"
  },
  {
    "text": "container registry to the kubernetes cluster and finally we'll enable access to the",
    "start": "90960",
    "end": "97200"
  },
  {
    "text": "application via an external ip address eks will provide",
    "start": "97200",
    "end": "102560"
  },
  {
    "text": "before to properly like follow through you need to have docker installed on your machine an id for this i'll be",
    "start": "104079",
    "end": "110560"
  },
  {
    "text": "using the intellij idea ide and you need to have some understanding of kubernetes as we now go in depth to",
    "start": "110560",
    "end": "117439"
  },
  {
    "text": "some aspects of this um of this session now you need to have mini cube installed",
    "start": "117439",
    "end": "123280"
  },
  {
    "text": "on your machine i'll cover how you can install mini cube",
    "start": "123280",
    "end": "128319"
  },
  {
    "text": "in this slide you need to have an aws account then also create a user with admin access on ews iam aws you need to",
    "start": "128319",
    "end": "136080"
  },
  {
    "text": "also need to have aws cli installed on your machine and qctl in order to communicate to the kubernetes cluster",
    "start": "136080",
    "end": "141920"
  },
  {
    "text": "you create locally and also on amazon dks so before we start let's overview some",
    "start": "141920",
    "end": "147520"
  },
  {
    "text": "of the major tools we'll use in this session so first we use spring boot spring boot is a java",
    "start": "147520",
    "end": "153599"
  },
  {
    "text": "based uh framework for building spring power applications production grid applications and services is absolutely",
    "start": "153599",
    "end": "159200"
  },
  {
    "text": "unique for us and how you can do that is because springboard has abstracted somewhat",
    "start": "159200",
    "end": "164879"
  },
  {
    "text": "configuration that ideally you do with spring and also the open united approach",
    "start": "164879",
    "end": "170000"
  },
  {
    "text": "makes you do stuff in a specific way and it gives you production ready uh",
    "start": "170000",
    "end": "175360"
  },
  {
    "text": "features like metrics or checks external configuration and has an embedded tomcat server and",
    "start": "175360",
    "end": "181840"
  },
  {
    "text": "abstracts the need for xml configuration that normally you do in spring with spring boots flexible packaging",
    "start": "181840",
    "end": "188400"
  },
  {
    "text": "options packaging into java files wire files packaging application into a container image",
    "start": "188400",
    "end": "194480"
  },
  {
    "text": "you can deploy your application on several basically anywhere right can deploy on cloud platforms the",
    "start": "194480",
    "end": "200080"
  },
  {
    "text": "permissions blue machines and uh in this session as the title saves",
    "start": "200080",
    "end": "206640"
  },
  {
    "text": "will deploy your package into a container image and deploy on aws uh ecr",
    "start": "206640",
    "end": "212319"
  },
  {
    "text": "then aws eks amazon managed kubernetes service",
    "start": "212319",
    "end": "218159"
  },
  {
    "text": "uh the next mini cube uh basically in a production cluster there will be multiple what kind of master and",
    "start": "218159",
    "end": "223920"
  },
  {
    "text": "volcanoes right across several uh fitcom virtual machines and doing that require",
    "start": "223920",
    "end": "229040"
  },
  {
    "text": "a lot of signal uh a lot of system resources cpu resources storage resources which is not possible",
    "start": "229040",
    "end": "235040"
  },
  {
    "text": "when uh working with quantities on your local machine so many cube abstracts all that and gives you all the master node",
    "start": "235040",
    "end": "241439"
  },
  {
    "text": "processes on one single cluster so that's why i said earlier in onenote companies cluster on your machine on",
    "start": "241439",
    "end": "246959"
  },
  {
    "text": "your mac os your linux and your windows machine and focuses on helping application developers and new",
    "start": "246959",
    "end": "252000"
  },
  {
    "text": "kubernetes users application developers to trying out stuff locally before going to production and also onboarding new",
    "start": "252000",
    "end": "258239"
  },
  {
    "text": "users and to try out kubernetes initially so you can get mini cube um",
    "start": "258239",
    "end": "263280"
  },
  {
    "text": "from the docs if you don't have it on your machine already uh basically you can just google how to install mini cube and you'll be able to",
    "start": "263280",
    "end": "269440"
  },
  {
    "text": "get the link that i put in this slide and next the amazon elastic container registry just like docker hope",
    "start": "269440",
    "end": "275520"
  },
  {
    "text": "uh github container registry amazon ecru is a fully magical fully managed container registry that offers high",
    "start": "275520",
    "end": "281840"
  },
  {
    "text": "performance hosting so it offers all those features plus other features that docker hub and uh guitar guitar",
    "start": "281840",
    "end": "289120"
  },
  {
    "text": "continuation and other containers don't like limit table tags image tags we see how",
    "start": "289120",
    "end": "294560"
  },
  {
    "text": "to make an image tag immutable along the line in this session uh image scanning in order to see security for security",
    "start": "294560",
    "end": "301280"
  },
  {
    "text": "vulnerabilities and some other stuff that you would love to see get on a high level value and obviously it's integrating nicely",
    "start": "301280",
    "end": "307680"
  },
  {
    "text": "with other aws products or aws tools so the main",
    "start": "307680",
    "end": "314639"
  },
  {
    "text": "stuff we'll do in this session will be on amazon manage kubernetes service which is a managed company service that",
    "start": "314639",
    "end": "320000"
  },
  {
    "text": "abstracts all the effort required to create a kubernetes cluster you need to install",
    "start": "320000",
    "end": "325120"
  },
  {
    "text": "and now maintain your own kubernetes control plane and give you all the advantage of",
    "start": "325120",
    "end": "331120"
  },
  {
    "text": "using aws scalability reliability all the aws infrastructure and its integrations as i talked about earlier",
    "start": "331120",
    "end": "338479"
  },
  {
    "text": "i'm working with eks radar first of all provisionally costa irani case costa and it automatically deploys the kubernetes",
    "start": "338479",
    "end": "344639"
  },
  {
    "text": "master and ormata rada and who then will deploy work and worker",
    "start": "344639",
    "end": "349759"
  },
  {
    "text": "nodes and in order to communicate to the kubernetes cluster on eks we'll use",
    "start": "349759",
    "end": "354960"
  },
  {
    "text": "kubectl which we also use to communicate with the onenote cluster which will be created by minicube we'll use qctl then",
    "start": "354960",
    "end": "361520"
  },
  {
    "text": "we'll deploy our applications on eks it's demo time all the commands codes yama",
    "start": "361520",
    "end": "367039"
  },
  {
    "text": "configuration and some aws specific skip steps i will talk about along the line",
    "start": "367039",
    "end": "372560"
  },
  {
    "text": "you can find them on this public repository on github in order to let's say",
    "start": "372560",
    "end": "378720"
  },
  {
    "text": "cross check in case you're having issues while walking through this session so let's get started with the demo so",
    "start": "378720",
    "end": "384560"
  },
  {
    "text": "you create a springboard application so ideally you use create a springboard application",
    "start": "384560",
    "end": "389759"
  },
  {
    "text": "using the spring initializer the start.spring.io but for this uh session in this tutorial",
    "start": "389759",
    "end": "396080"
  },
  {
    "text": "i'm going to create it with intellij on the intellij idea ide so",
    "start": "396080",
    "end": "402000"
  },
  {
    "text": "click on new project then we'll name the project kcd africa we've got springboards",
    "start": "402000",
    "end": "409440"
  },
  {
    "text": "it's pretty good the application is going to be based on java version java 17",
    "start": "409440",
    "end": "415360"
  },
  {
    "text": "and next create the application we'll select the dependency to use which spring well",
    "start": "415360",
    "end": "421199"
  },
  {
    "text": "because i'm going to create a restful api",
    "start": "421199",
    "end": "425759"
  },
  {
    "text": "just wait for some time",
    "start": "431440",
    "end": "436840"
  },
  {
    "text": "once everything is checked and application has been initialized",
    "start": "440880",
    "end": "446479"
  },
  {
    "text": "we then create a new java class we're going to call it test controller",
    "start": "446479",
    "end": "454560"
  },
  {
    "text": "this would be a restful controller to test our application so we're going to annotate it to the right to control our",
    "start": "454639",
    "end": "460319"
  },
  {
    "text": "annotation i'm going to create just two end points one will be the index endpoints",
    "start": "460319",
    "end": "467039"
  },
  {
    "text": "then the other one will be just the name endpoint so let's get using the get",
    "start": "467039",
    "end": "472240"
  },
  {
    "text": "the get mapping rotation",
    "start": "472240",
    "end": "476199"
  },
  {
    "text": "then we'll return h1",
    "start": "494160",
    "end": "499759"
  },
  {
    "text": "the header which one header hello which is what's most programming demos views",
    "start": "499759",
    "end": "507520"
  },
  {
    "text": "and for the second endpoints to get",
    "start": "512959",
    "end": "518080"
  },
  {
    "text": "endpoints to name",
    "start": "518080",
    "end": "521599"
  },
  {
    "text": "the string method",
    "start": "524640",
    "end": "528040"
  },
  {
    "text": "so we just telling this to print out my name is",
    "start": "542800",
    "end": "548439"
  },
  {
    "text": "that's so to run this application we can to build",
    "start": "558880",
    "end": "564080"
  },
  {
    "text": "around this application we can just click this start button on the intelligent idea and intellij idea or",
    "start": "564080",
    "end": "570959"
  },
  {
    "text": "on the terminal using maybe wrapper or",
    "start": "570959",
    "end": "576560"
  },
  {
    "text": "just command mban install",
    "start": "576560",
    "end": "582800"
  },
  {
    "text": "and use the application then to run the application uh",
    "start": "586560",
    "end": "591600"
  },
  {
    "text": "we can use this command",
    "start": "591600",
    "end": "597040"
  },
  {
    "text": "run the java unit command this command gets the java file from this",
    "start": "597920",
    "end": "602959"
  },
  {
    "text": "java file qcd sprinkle the snapshot of the java file and",
    "start": "602959",
    "end": "608800"
  },
  {
    "text": "yeah i'll stream with applications today and put 8080 we can test that and check",
    "start": "611440",
    "end": "617360"
  },
  {
    "text": "if it works local support 8018 yeah we get a low road",
    "start": "617360",
    "end": "623519"
  },
  {
    "text": "name give my name so our springboard application works so next we'll",
    "start": "623519",
    "end": "628880"
  },
  {
    "text": "dockerize this springboard application",
    "start": "628880",
    "end": "633399"
  },
  {
    "text": "just dominate this control proceed let me use the terminal on",
    "start": "635920",
    "end": "644320"
  },
  {
    "text": "my machine",
    "start": "644320",
    "end": "647480"
  },
  {
    "text": "to dockerize the application first of all created a docker file so there are the other ways you can",
    "start": "653040",
    "end": "658640"
  },
  {
    "text": "localize the spring boot application you can use this uh you can use mid view wrapper i use the build image",
    "start": "658640",
    "end": "666000"
  },
  {
    "text": "plugin to build the application to build and uh view the image but here we create a",
    "start": "666000",
    "end": "671360"
  },
  {
    "text": "docker file so let's touch",
    "start": "671360",
    "end": "675240"
  },
  {
    "text": "and we can use the vi editor or let's just write the document",
    "start": "681680",
    "end": "686839"
  },
  {
    "text": "intellij so from the application as i said earlier uses uh",
    "start": "686839",
    "end": "692320"
  },
  {
    "text": "open jdk 17 so from the base image from where the screen boots the application image",
    "start": "692320",
    "end": "699279"
  },
  {
    "text": "will be built then copy i'm going to copy targets",
    "start": "699279",
    "end": "704959"
  },
  {
    "text": "then i'm going to copy the jar file into the container so here i'm just copying the",
    "start": "704959",
    "end": "710959"
  },
  {
    "text": "parts the file name to the file name then we're going to",
    "start": "710959",
    "end": "717519"
  },
  {
    "text": "arrive in the entry points so basically this is where our application starts",
    "start": "717519",
    "end": "723040"
  },
  {
    "text": "after when is run",
    "start": "723040",
    "end": "728360"
  },
  {
    "text": "let's see you're writing the same command we used here look at the command decent command we used here",
    "start": "732480",
    "end": "738320"
  },
  {
    "text": "going to write it in the docker file to run the application",
    "start": "738320",
    "end": "744279"
  },
  {
    "text": "and expose reports 8080",
    "start": "747600",
    "end": "753440"
  },
  {
    "text": "when that is done you can now view the image",
    "start": "753839",
    "end": "757760"
  },
  {
    "text": "just check that ls you can see the docker file you can also",
    "start": "770639",
    "end": "775680"
  },
  {
    "text": "see the file with pi editor by editing",
    "start": "775680",
    "end": "780959"
  },
  {
    "text": "okay one dps image on be using the vi editor when creating the",
    "start": "782000",
    "end": "788639"
  },
  {
    "text": "kubernetes deployment and basically from here we'll be using the video",
    "start": "788639",
    "end": "794800"
  },
  {
    "text": "so create and build the image local build good",
    "start": "794800",
    "end": "802160"
  },
  {
    "text": "now type the image kcd",
    "start": "803279",
    "end": "808279"
  },
  {
    "text": "corner",
    "start": "818560",
    "end": "821560"
  },
  {
    "text": "is",
    "start": "833279",
    "end": "836279"
  },
  {
    "text": "image will be built then you can check image",
    "start": "870320",
    "end": "874800"
  },
  {
    "text": "you can see springboot image then to test the image on so you can",
    "start": "875519",
    "end": "882079"
  },
  {
    "text": "run i'm going to tell",
    "start": "882079",
    "end": "887199"
  },
  {
    "text": "look at the ports we want our image to run and click it from the ports the image you exposed from the application",
    "start": "887519",
    "end": "894480"
  },
  {
    "text": "then the image name kcd",
    "start": "894480",
    "end": "899399"
  },
  {
    "text": "uh dockerized the apk autocad application is working the docker image works",
    "start": "925040",
    "end": "931120"
  },
  {
    "text": "then you can clear that process",
    "start": "931120",
    "end": "934560"
  },
  {
    "text": "next we'll deploy this particular image onto mini cube you know what i mean use",
    "start": "938959",
    "end": "945040"
  },
  {
    "text": "mini cube automation mini q is up and running so basically if you start",
    "start": "945040",
    "end": "951959"
  },
  {
    "text": "i'm using mini cube on mac or m1 upper silicone so",
    "start": "956320",
    "end": "962079"
  },
  {
    "text": "i don't think you get the same outputs on linux on windows",
    "start": "962079",
    "end": "969440"
  },
  {
    "text": "so for us to deploy that particular image right ideally we have to deploy the image onto a container registry so",
    "start": "969440",
    "end": "977839"
  },
  {
    "text": "maybe docker orb as you see in this demo we're going to be using amazon ecr both for this right instead",
    "start": "977839",
    "end": "984399"
  },
  {
    "text": "of before we go on to deploying to ecru and for us not to deploy to the hub we're going to create uh a locale",
    "start": "984399",
    "end": "991360"
  },
  {
    "text": "registry so a local repository where we will deploy our image so we can do that easily on docker continue with the",
    "start": "991360",
    "end": "998320"
  },
  {
    "text": "registry image so basically the command will go like docker run in detach mode",
    "start": "998320",
    "end": "1006759"
  },
  {
    "text": "which is 3d image",
    "start": "1023120",
    "end": "1026240"
  },
  {
    "text": "so as well as currently i don't have the registry 2 image locally it's going to find image and",
    "start": "1031760",
    "end": "1038240"
  },
  {
    "text": "projects it's going to take a few seconds depending on the internet",
    "start": "1038240",
    "end": "1043280"
  },
  {
    "text": "so yes i have the emails i can do docker ps to check that's currently running you can see",
    "start": "1043280",
    "end": "1048480"
  },
  {
    "text": "virtual image on ports 5000 so we then next right we have to point",
    "start": "1048480",
    "end": "1054160"
  },
  {
    "text": "the local registry to mini cube so we pointing localization to mini cube so when we deploy our application it will",
    "start": "1054160",
    "end": "1060320"
  },
  {
    "text": "be able to uh it will be able to find the application so we're going to use the this command",
    "start": "1060320",
    "end": "1068480"
  },
  {
    "text": "now after pointing mini cube to the local registry you calculate you then need to and to check if uh",
    "start": "1075520",
    "end": "1082690"
  },
  {
    "text": "[Music] to check if the points works you'll notice that",
    "start": "1082690",
    "end": "1088400"
  },
  {
    "text": "now you're seeing all the images in mini cube are no longer images on this particular session you showing images in",
    "start": "1088400",
    "end": "1094720"
  },
  {
    "text": "mini cube and not um images on your normal docker environment",
    "start": "1094720",
    "end": "1099919"
  },
  {
    "text": "so if you check here on the terminal of the springboard application images",
    "start": "1099919",
    "end": "1105200"
  },
  {
    "text": "you see different it's not the same as this right so because of this you need to rebuild the",
    "start": "1105200",
    "end": "1112559"
  },
  {
    "text": "image so you can do that with docker docker build targets",
    "start": "1112559",
    "end": "1118400"
  },
  {
    "text": "kcd springboard image t and view the image so i've already done that like you can see here",
    "start": "1118400",
    "end": "1124400"
  },
  {
    "text": "above so next you need to tag this image that you built you need to type this image that has been built",
    "start": "1124400",
    "end": "1131360"
  },
  {
    "text": "so points to be able to push the image to your localized registry you need to target",
    "start": "1131360",
    "end": "1136400"
  },
  {
    "text": "the okay to explain this better so when you want to push images to docker right to",
    "start": "1136400",
    "end": "1141760"
  },
  {
    "text": "the cargo brother you re you push images you target the images",
    "start": "1141760",
    "end": "1146880"
  },
  {
    "text": "let's say you use the image your targets tcd inputs",
    "start": "1146880",
    "end": "1152080"
  },
  {
    "text": "image you target with your username so this is my username of the account then the",
    "start": "1152080",
    "end": "1158559"
  },
  {
    "text": "repository you want to push the image to then it gets pushed with the latest tag or you give",
    "start": "1158559",
    "end": "1165360"
  },
  {
    "text": "a different tag so now but for this local registry using the",
    "start": "1165360",
    "end": "1171280"
  },
  {
    "text": "tag you know that we'll have to tag the registry with localhost",
    "start": "1171280",
    "end": "1177360"
  },
  {
    "text": "five thousand so if you remember uh registry is talking is on ports five thousand so this is where the registry",
    "start": "1177760",
    "end": "1184640"
  },
  {
    "text": "is um five thousand then the",
    "start": "1184640",
    "end": "1190160"
  },
  {
    "text": "tag of the registry so if you remember i said for docker for docker hub his username and",
    "start": "1190160",
    "end": "1196080"
  },
  {
    "text": "the username of your docker account local accounts then you repository name but",
    "start": "1196080",
    "end": "1202159"
  },
  {
    "text": "for this we'll give it the who uses the port's name localhost 5000 which is the",
    "start": "1202159",
    "end": "1207679"
  },
  {
    "text": "ports directory called the listing on then the repository name and which will give you the latest tag so the",
    "start": "1207679",
    "end": "1213600"
  },
  {
    "text": "repository name we use for this we can use the same reposition here we see in uh when we are using",
    "start": "1213600",
    "end": "1220480"
  },
  {
    "text": "amazon ecru you see how we do that using uh when we tag we see you see when we",
    "start": "1220480",
    "end": "1225600"
  },
  {
    "text": "tag the image with a copy with the repository uri so when we get to that",
    "start": "1225600",
    "end": "1232720"
  },
  {
    "text": "you better understand what i'm saying so type the image then the image has been tagged and you can view it with",
    "start": "1232720",
    "end": "1237919"
  },
  {
    "text": "docker images then you can see then we can now push",
    "start": "1237919",
    "end": "1244000"
  },
  {
    "text": "this particular image",
    "start": "1244000",
    "end": "1248679"
  },
  {
    "text": "push",
    "start": "1255840",
    "end": "1258840"
  },
  {
    "text": "when i run docker push with the image down i noticed that uh it refused to connect and this was",
    "start": "1267919",
    "end": "1274000"
  },
  {
    "text": "because if you notice i explained we point we pointed mini cube to",
    "start": "1274000",
    "end": "1279440"
  },
  {
    "text": "the local registry so it kind of deleted the image this didn't happen before so i",
    "start": "1279440",
    "end": "1285120"
  },
  {
    "text": "have to recreate the image and it's currently running so let's try to push it again",
    "start": "1285120",
    "end": "1291520"
  },
  {
    "text": "okay it's pushing now",
    "start": "1291520",
    "end": "1295440"
  },
  {
    "text": "okay now now the spring out spin boot application in the local registry",
    "start": "1299520",
    "end": "1305120"
  },
  {
    "text": "next we need to create a deployment the component is deployment so to do that we create a deployment",
    "start": "1305120",
    "end": "1312559"
  },
  {
    "text": "via the command line the terminal without having to create a",
    "start": "1312559",
    "end": "1318000"
  },
  {
    "text": "yam offer will use the driver on client flag which will create the entire yaml manifest",
    "start": "1318000",
    "end": "1324559"
  },
  {
    "text": "templates so let's see how to do that cuban ctrl",
    "start": "1324559",
    "end": "1329679"
  },
  {
    "text": "create deployments",
    "start": "1329679",
    "end": "1334000"
  },
  {
    "text": "and give the name kcd africa",
    "start": "1334960",
    "end": "1339120"
  },
  {
    "text": "demo then the image image will be",
    "start": "1340320",
    "end": "1346880"
  },
  {
    "text": "localhost",
    "start": "1346880",
    "end": "1349600"
  },
  {
    "text": "then the dryron frog flag room",
    "start": "1356240",
    "end": "1362080"
  },
  {
    "text": "okay",
    "start": "1362400",
    "end": "1364720"
  },
  {
    "text": "and all and name the file deployments that's yaml",
    "start": "1371120",
    "end": "1378720"
  },
  {
    "text": "so now we've created our deployment file we also want to put the",
    "start": "1381200",
    "end": "1386840"
  },
  {
    "text": "service in the same file so to do that echo",
    "start": "1386840",
    "end": "1392640"
  },
  {
    "text": "write the yaml configuration to divide the file into two",
    "start": "1395039",
    "end": "1402600"
  },
  {
    "text": "then create the service same way we created the deployments which is here",
    "start": "1414880",
    "end": "1420320"
  },
  {
    "text": "so drop copy command",
    "start": "1420320",
    "end": "1424120"
  },
  {
    "text": "change the name of the service to city africa",
    "start": "1435600",
    "end": "1441720"
  },
  {
    "text": "and we can we can check diploma file",
    "start": "1445760",
    "end": "1453600"
  },
  {
    "text": "yeah the service was created with target port 8080 and deployment was",
    "start": "1457279",
    "end": "1462559"
  },
  {
    "text": "created with the image of the image the docker image in our local registry",
    "start": "1462559",
    "end": "1469360"
  },
  {
    "text": "so now we can apply these deployments on to do that cub cto",
    "start": "1469360",
    "end": "1475440"
  },
  {
    "text": "apply complement",
    "start": "1475679",
    "end": "1482240"
  },
  {
    "text": "download",
    "start": "1482240",
    "end": "1485240"
  },
  {
    "text": "that you created you check did you premier was created successfully keep cto",
    "start": "1488080",
    "end": "1496000"
  },
  {
    "text": "get all so yeah it's going to be running",
    "start": "1498640",
    "end": "1504480"
  },
  {
    "text": "so to check if the application application is currently running this laptop is running now you can get the cd port qctl",
    "start": "1504480",
    "end": "1513720"
  },
  {
    "text": "you can see the port it's currently running so in order to test and see this application that's",
    "start": "1516159",
    "end": "1522000"
  },
  {
    "text": "connected to the application without the springbook application just deployed you have to expose",
    "start": "1522000",
    "end": "1527279"
  },
  {
    "text": "as we expose the port 8080 with service we cannot access it externally on let's",
    "start": "1527279",
    "end": "1532799"
  },
  {
    "text": "say we go to um browser and then",
    "start": "1532799",
    "end": "1537840"
  },
  {
    "text": "put 8080 you'll be able to access the application in order to access the application you",
    "start": "1537840",
    "end": "1544400"
  },
  {
    "text": "have to create an ssh thumbnail so customize the system using port forward but to do that",
    "start": "1544400",
    "end": "1551919"
  },
  {
    "text": "cube ctl",
    "start": "1551919",
    "end": "1555158"
  },
  {
    "text": "tube cto called forward",
    "start": "1557440",
    "end": "1561200"
  },
  {
    "text": "sbc service the name of our is casey africa demo",
    "start": "1566159",
    "end": "1573279"
  },
  {
    "text": "then the ports our services completely listening to you",
    "start": "1573279",
    "end": "1579120"
  },
  {
    "text": "and the ports want to listen to on our local machine then you",
    "start": "1579120",
    "end": "1585120"
  },
  {
    "text": "open the browser you're able to see the application has been successfully deployed on",
    "start": "1585120",
    "end": "1593039"
  },
  {
    "text": "on kubernetes and minitube next we will deploy the application we",
    "start": "1593520",
    "end": "1600640"
  },
  {
    "text": "push the image that we created to amazon elastic container registry which we'll",
    "start": "1600640",
    "end": "1606080"
  },
  {
    "text": "now use to deploy the application on amazon eks",
    "start": "1606080",
    "end": "1612559"
  },
  {
    "text": "before you can push your container image to amazon ecru you need to make sure",
    "start": "1612559",
    "end": "1618799"
  },
  {
    "text": "that you have aws cli installed on your terminal so if you run you write the command aws",
    "start": "1618799",
    "end": "1625600"
  },
  {
    "text": "cli if you don't get any response similar to this then you have to like install aws like that so we're not going",
    "start": "1625600",
    "end": "1633279"
  },
  {
    "text": "to install in this session because i already have it installed or you can just google and",
    "start": "1633279",
    "end": "1638640"
  },
  {
    "text": "you'll be able to get the information to store for a particular machine so after that i don't know if you recall i made",
    "start": "1638640",
    "end": "1644880"
  },
  {
    "text": "mention of how creating an iem user for this particular session which had",
    "start": "1644880",
    "end": "1650399"
  },
  {
    "text": "been accessed so instead of using your the root user of your aws account so you should have also done that then next",
    "start": "1650399",
    "end": "1657600"
  },
  {
    "text": "you need to authenticate and configure your cli so now that's configure.cll you do",
    "start": "1657600",
    "end": "1664320"
  },
  {
    "text": "aws configure configure your cli to the particular uh local",
    "start": "1664320",
    "end": "1670159"
  },
  {
    "text": "the iem account user account so aws configure and you'll be prompted with some outputs to",
    "start": "1670159",
    "end": "1677679"
  },
  {
    "text": "fill in your access key for that particular account and the secret access key access key id and security access",
    "start": "1677679",
    "end": "1683840"
  },
  {
    "text": "key so i've already done that in order to test that your configuration actually works",
    "start": "1683840",
    "end": "1690399"
  },
  {
    "text": "for me i will just it'll just configure lists so i will i can see that i'm already",
    "start": "1690399",
    "end": "1697120"
  },
  {
    "text": "configured the access key is the security and the region usb 1. so",
    "start": "1697120",
    "end": "1702399"
  },
  {
    "text": "after that in order to push to amazon ecr i need to first of all create",
    "start": "1702399",
    "end": "1707919"
  },
  {
    "text": "a repository so just like the registry you created right when you're",
    "start": "1707919",
    "end": "1713120"
  },
  {
    "text": "deploying to mini cube just like docker hub when you're deploying to docker hub you create a repository under your",
    "start": "1713120",
    "end": "1718720"
  },
  {
    "text": "account i need to create a repository on ecr so let's create a repository i'll",
    "start": "1718720",
    "end": "1724720"
  },
  {
    "text": "use this command so you have copy and pasted the command",
    "start": "1724720",
    "end": "1731039"
  },
  {
    "text": "so to explain commands so yes this is the aws cli and ecro encrypt repository and the flag's",
    "start": "1731039",
    "end": "1738720"
  },
  {
    "text": "repository name so this i copied this command so let me edit the repository name",
    "start": "1738720",
    "end": "1744640"
  },
  {
    "text": "kcd africa kcd africa got demo repository",
    "start": "1745200",
    "end": "1752480"
  },
  {
    "text": "then you remember when i talked about the relevant security there are security features that aws offers there's some",
    "start": "1752480",
    "end": "1758159"
  },
  {
    "text": "other controllers we don't offer like image type immutability so yeah we're telling um ecr to make the image tag",
    "start": "1758159",
    "end": "1765200"
  },
  {
    "text": "immutable so when we create the image on our repository and when we push the image to the repository particular uh",
    "start": "1765200",
    "end": "1771840"
  },
  {
    "text": "version of the image the tab in this latest it will be unchangeable now what imitable means it is a test whatever we",
    "start": "1771840",
    "end": "1777919"
  },
  {
    "text": "name it as we'll get to see that and also image scanning configurations scan and push so this now tells the cr",
    "start": "1777919",
    "end": "1785200"
  },
  {
    "text": "discount like i may mention about the security features of ecrs this",
    "start": "1785200",
    "end": "1791120"
  },
  {
    "text": "can be image for any security vulnerabilities so click enter to create the repository",
    "start": "1791120",
    "end": "1798399"
  },
  {
    "text": "you you should receive a json once you run the command",
    "start": "1798399",
    "end": "1804720"
  },
  {
    "text": "you should receive a json output of json objects like a response of",
    "start": "1804720",
    "end": "1810240"
  },
  {
    "text": "the repository id name we repository url and it is created so in order to check that this repository was actually",
    "start": "1810240",
    "end": "1816720"
  },
  {
    "text": "created you can just go to your aws accounts ecr accounts you log in so i already",
    "start": "1816720",
    "end": "1821919"
  },
  {
    "text": "have a demo repository so i refresh once i refresh i can see this is the",
    "start": "1821919",
    "end": "1828480"
  },
  {
    "text": "question africa demo repository has been created your repository uri then if you check in the repository",
    "start": "1828480",
    "end": "1835360"
  },
  {
    "text": "there is no image so next i'm going to push our image to this particular repository",
    "start": "1835360",
    "end": "1841840"
  },
  {
    "text": "before you can push the image to this particular repo to the repository",
    "start": "1841840",
    "end": "1847120"
  },
  {
    "text": "to this repository first of all need to log in to the repository so",
    "start": "1847120",
    "end": "1853200"
  },
  {
    "text": "we do that by okay first i'll copy the repository uri",
    "start": "1853200",
    "end": "1858480"
  },
  {
    "text": "okay and again get the temporary token and pass it",
    "start": "1859200",
    "end": "1864799"
  },
  {
    "text": "uh through the ecr api so log in without your",
    "start": "1864799",
    "end": "1871360"
  },
  {
    "text": "get a game password so get login password swap gets",
    "start": "1871360",
    "end": "1877200"
  },
  {
    "text": "creates crazy temperature region",
    "start": "1877200",
    "end": "1884240"
  },
  {
    "text": "one",
    "start": "1887200",
    "end": "1890200"
  },
  {
    "text": "and type joker login",
    "start": "1892320",
    "end": "1896880"
  },
  {
    "text": "you can't use username or just you use the name pws",
    "start": "1898399",
    "end": "1904960"
  },
  {
    "text": "so this command standard password standard in fields",
    "start": "1905679",
    "end": "1913120"
  },
  {
    "text": "this flag rather is what gets the the value of the password that's generated by the ecr api login password",
    "start": "1913120",
    "end": "1919840"
  },
  {
    "text": "to the particular region where your repository is then you now add the repository url that we",
    "start": "1919840",
    "end": "1926640"
  },
  {
    "text": "copied so yes then",
    "start": "1926640",
    "end": "1931559"
  },
  {
    "text": "you get the login succeeded then you're successfully logged into the kcd demo repository",
    "start": "1935600",
    "end": "1942720"
  },
  {
    "text": "africa this is the africa demo repository then next we need to tag this particular image the image that we",
    "start": "1942720",
    "end": "1949200"
  },
  {
    "text": "built if you remember the image that we built local images this is springboard demo image",
    "start": "1949200",
    "end": "1955679"
  },
  {
    "text": "springboard image you need to type the image with the username right the image name and tag so to do",
    "start": "1955679",
    "end": "1962880"
  },
  {
    "text": "that just like we tagged before pushing to the local registry so we'll first of all go docker tag",
    "start": "1962880",
    "end": "1970080"
  },
  {
    "text": "the repository name is just tag then",
    "start": "1970080",
    "end": "1976320"
  },
  {
    "text": "the you see how you arrived",
    "start": "1976320",
    "end": "1981760"
  },
  {
    "text": "so this image gets pushed and it's giving a tag of latest because we didn't specify",
    "start": "1987440",
    "end": "1993440"
  },
  {
    "text": "it's here so it gets started with type of letters we'll see that's so yeah after tagging between images",
    "start": "1993440",
    "end": "2002640"
  },
  {
    "text": "kcd africa demo repository then we type latest so now after tagging this reposition next we need to push",
    "start": "2003279",
    "end": "2010640"
  },
  {
    "text": "the after tagging the image we need to push the docker image to ecm so we've already logged in to",
    "start": "2010640",
    "end": "2016559"
  },
  {
    "text": "the repository position is here then to do that normal docker push",
    "start": "2016559",
    "end": "2022480"
  },
  {
    "text": "then we'll use this",
    "start": "2022480",
    "end": "2028320"
  },
  {
    "text": "to push the image repositioning so you can push it into the test tab you can push",
    "start": "2031360",
    "end": "2038000"
  },
  {
    "text": "using defaults latest tag preparing",
    "start": "2038000",
    "end": "2043120"
  },
  {
    "text": "some time",
    "start": "2043120",
    "end": "2046360"
  },
  {
    "text": "depending on how fast your internet is the mind is looking like it's pretty slow",
    "start": "2048159",
    "end": "2055960"
  },
  {
    "text": "so that really took some time is a good thing i'm recording this session yeah so",
    "start": "2064399",
    "end": "2070480"
  },
  {
    "text": "my image has been pushed we didn't report the tree getting the african-american position which i can check",
    "start": "2070480",
    "end": "2077200"
  },
  {
    "text": "now see the image and see all the details of the image next you then work with eks to deploy",
    "start": "2079679",
    "end": "2086720"
  },
  {
    "text": "your application to work with amazon eks that is to deploy the image uh we have",
    "start": "2086720",
    "end": "2092878"
  },
  {
    "text": "currently out of amazon ecru to a kubernetes course on ets we need the amazon equals cli tool so i currently",
    "start": "2092879",
    "end": "2100160"
  },
  {
    "text": "have the sale to install so let me show you that with the command eks cto",
    "start": "2100160",
    "end": "2105680"
  },
  {
    "text": "version so i can see the version of eks so an error for the question of details i have",
    "start": "2105680",
    "end": "2111680"
  },
  {
    "text": "in order for you to install that you can just google and to take you to the eks documentation so",
    "start": "2111680",
    "end": "2117040"
  },
  {
    "text": "as we have gotten in case now now we have the cli",
    "start": "2117040",
    "end": "2122800"
  },
  {
    "text": "we will now need to deploy credit cluster and then deploy our credit deployment and a service on",
    "start": "2122800",
    "end": "2129839"
  },
  {
    "text": "the cluster so before that when you've gotten the eks cli tool on your machine",
    "start": "2129839",
    "end": "2135200"
  },
  {
    "text": "you can now get on to deploying the image on creating a kubernetes cluster and deploying the image on venetis but",
    "start": "2135200",
    "end": "2141440"
  },
  {
    "text": "before that let's just overview creating kubernetes clusters on the case so an amazon ks cluster consists of two",
    "start": "2141440",
    "end": "2147119"
  },
  {
    "text": "primary components the control plane and work on those registered with the control plane so the workout missions which are part of the compatibility",
    "start": "2147119",
    "end": "2152400"
  },
  {
    "text": "because so this worker knows like i say earlier i remember the slides you deployed the",
    "start": "2152400",
    "end": "2158880"
  },
  {
    "text": "worker note yourself as eks provisions the master nodes for you it just deploys the",
    "start": "2158880",
    "end": "2164880"
  },
  {
    "text": "master nodes for you upon creation of the cluster so um",
    "start": "2164880",
    "end": "2170160"
  },
  {
    "text": "next before we can do that there are some other considerations that are let's say peculiar somewhat particular to",
    "start": "2170160",
    "end": "2175599"
  },
  {
    "text": "amazon uh eks so what you need to consider when using amazon equals so we have vp vapor",
    "start": "2175599",
    "end": "2181440"
  },
  {
    "text": "vector private cloud configuration security group consideration so to launch and configure an eks cluster you",
    "start": "2181440",
    "end": "2188480"
  },
  {
    "text": "need to specify subnets for vpc subnets which are practical subnets",
    "start": "2188480",
    "end": "2193680"
  },
  {
    "text": "required for the cluster to be hosted in and now right you can create a private subnet you can create a public cloud in",
    "start": "2193680",
    "end": "2199920"
  },
  {
    "text": "this particular section we will create the private subnet and um we could use the private subnet and yeah",
    "start": "2199920",
    "end": "2207040"
  },
  {
    "text": "this is to maintain high availability and we are required to put at least two availabilities from zones we'll see how",
    "start": "2207040",
    "end": "2212560"
  },
  {
    "text": "to do that also from security considerations when uh the worker nodes",
    "start": "2212560",
    "end": "2217920"
  },
  {
    "text": "are deployed right in order to configure like eks automatically configures communication between what",
    "start": "2217920",
    "end": "2223760"
  },
  {
    "text": "happens on the uh control plane and constructed in a way that uh communication uh like for privileged",
    "start": "2223760",
    "end": "2230720"
  },
  {
    "text": "ports ports right so in order to like access applications via an external api",
    "start": "2230720",
    "end": "2236320"
  },
  {
    "text": "that will be generated when we deploy the application and also other let's say other access let's say you",
    "start": "2236320",
    "end": "2241920"
  },
  {
    "text": "want to implement accessing their load balancing and implement dns and some other features you need to uh add an",
    "start": "2241920",
    "end": "2249440"
  },
  {
    "text": "additional inbound rule or outbound group depending on the specification you want to create so for this particular",
    "start": "2249440",
    "end": "2255680"
  },
  {
    "text": "session we're just going to when we are when we work on security group we're just going to create an inbound group for the particular ports for which we",
    "start": "2255680",
    "end": "2262400"
  },
  {
    "text": "listen to we'll be able to access our application um on the web so yeah let's get right to it",
    "start": "2262400",
    "end": "2269440"
  },
  {
    "text": "to create a cluster so we'll create um a yaml file so we're going to use it",
    "start": "2269440",
    "end": "2275440"
  },
  {
    "text": "like i said earlier would you use the gi editor from your own so via the thoughtfulness to create the ammo file",
    "start": "2275440",
    "end": "2280800"
  },
  {
    "text": "touch uh e recorder",
    "start": "2280800",
    "end": "2285838"
  },
  {
    "text": "then to edit poster that's vmware",
    "start": "2286480",
    "end": "2292320"
  },
  {
    "text": "okay then i've already written the poster configuration for my particular with my",
    "start": "2292320",
    "end": "2298720"
  },
  {
    "text": "particular subnets and to create the workout mode so let me copy that and paste it here",
    "start": "2298720",
    "end": "2304800"
  },
  {
    "text": "don't worry i'll explain this so",
    "start": "2304800",
    "end": "2309200"
  },
  {
    "text": "if you look from the beginning we see the api version the kind which is cluster configuration the name metadata",
    "start": "2309920",
    "end": "2315040"
  },
  {
    "text": "then the vpc the virtual private cloud subnet so i set it as private subnet so these are subnets",
    "start": "2315040",
    "end": "2320960"
  },
  {
    "text": "peculiar to my the iem user i created earlier the idea is i created and i've been using trout",
    "start": "2320960",
    "end": "2327040"
  },
  {
    "text": "in this um session and these these node groups here node groups here",
    "start": "2327040",
    "end": "2333200"
  },
  {
    "text": "amazon uh eks has a feature called node groups right a management script feature that automates the professional in a",
    "start": "2333200",
    "end": "2339359"
  },
  {
    "text": "life cycle of lifecycle management of nodes which will be on user ecq instances for each amazon",
    "start": "2339359",
    "end": "2346800"
  },
  {
    "text": "each eks kubernetes cluster so the node groups are being updated to you know to",
    "start": "2346800",
    "end": "2352000"
  },
  {
    "text": "be updated related version of kubernetes um so like basically you know when we talked about when i talked about uh",
    "start": "2352000",
    "end": "2357920"
  },
  {
    "text": "ets handling the deployments maintenance and some other stuff you do normally it's kind of like a self-managed company",
    "start": "2357920",
    "end": "2363680"
  },
  {
    "text": "this coaster so this now because managers load groups manages the nodes for you so",
    "start": "2363680",
    "end": "2369760"
  },
  {
    "text": "uh again we have worker nodes and they are of type three uh",
    "start": "2369760",
    "end": "2375520"
  },
  {
    "text": "the is that skype is type creation moto to okay before that let's see how to get the subnet how to get the subnet on your",
    "start": "2375520",
    "end": "2382079"
  },
  {
    "text": "aws account so here on your aws account you can just search vpc",
    "start": "2382079",
    "end": "2388320"
  },
  {
    "text": "or you can search subnets so you can see subnets top features",
    "start": "2388320",
    "end": "2394160"
  },
  {
    "text": "subnets you know you'll be able to see stop submit id that uh",
    "start": "2394839",
    "end": "2400560"
  },
  {
    "text": "submit id of your particular aws account and you see the sub iii they have their availability soon so i'm on a usb region",
    "start": "2400560",
    "end": "2408560"
  },
  {
    "text": "so yes it's one a one a one b just like you can see in the",
    "start": "2408560",
    "end": "2414240"
  },
  {
    "text": "configuration so yeah then that's that for the subnet so back to the node groups so the node",
    "start": "2414240",
    "end": "2420800"
  },
  {
    "text": "group of instant type t3 small and this is basically because so i'm looking at the amazon documentation right and this",
    "start": "2420800",
    "end": "2427760"
  },
  {
    "text": "this that client instance is basically is an affordable option to run code repositories and test environments so",
    "start": "2427760",
    "end": "2433520"
  },
  {
    "text": "these low cost versatile cpu performance instance right that's just for okay it's",
    "start": "2433520",
    "end": "2439200"
  },
  {
    "text": "not something you use when you want to build an application that has that received let's say thousands or",
    "start": "2439200",
    "end": "2445839"
  },
  {
    "text": "hundreds of thousands of like uh real-time users at a particular time so this is just a small instance for this",
    "start": "2445839",
    "end": "2452560"
  },
  {
    "text": "specific demo so yeah it does that and we have the group builders for building uh the",
    "start": "2452560",
    "end": "2459920"
  },
  {
    "text": "containers images and pulling and building the images so we can then save",
    "start": "2459920",
    "end": "2466640"
  },
  {
    "text": "this okay",
    "start": "2466640",
    "end": "2472640"
  },
  {
    "text": "so just to be sure that let's close okay",
    "start": "2472640",
    "end": "2478960"
  },
  {
    "text": "here then to create the cluster we use the ek cto",
    "start": "2478960",
    "end": "2485119"
  },
  {
    "text": "so which is the eks command line 2 cto create",
    "start": "2485119",
    "end": "2490560"
  },
  {
    "text": "cluster",
    "start": "2490560",
    "end": "2493560"
  },
  {
    "text": "so he's currently creating using dividend grades in the costa and particular region so this will take",
    "start": "2501440",
    "end": "2507040"
  },
  {
    "text": "some time so this will take some time to create and deploy the worker nodes",
    "start": "2507040",
    "end": "2512960"
  },
  {
    "text": "so i'll see you when it's done so that really took a while so we can see that",
    "start": "2512960",
    "end": "2518800"
  },
  {
    "text": "the cluster has been created in the quesadilla cluster located in the new small region and is ready and also",
    "start": "2518800",
    "end": "2526160"
  },
  {
    "text": "on the aws console eks you can see that the cluster is ready so if you click on it",
    "start": "2526160",
    "end": "2532000"
  },
  {
    "text": "see nothing there's no resource yet okay not okay there are resources",
    "start": "2532000",
    "end": "2537280"
  },
  {
    "text": "here the ideal kubernetes resources and um the nodes have been",
    "start": "2537280",
    "end": "2542960"
  },
  {
    "text": "deployed you can see them here nodes with the t3 installs",
    "start": "2542960",
    "end": "2549839"
  },
  {
    "text": "three small instance then also right so if you remember at this step",
    "start": "2549839",
    "end": "2555280"
  },
  {
    "text": "see when working with this figure now what can it because connected it is right so",
    "start": "2555280",
    "end": "2561920"
  },
  {
    "text": "we will skip that step because eks vks cli2 has already done that for",
    "start": "2561920",
    "end": "2567920"
  },
  {
    "text": "us so when you look through here you see saved cube config",
    "start": "2567920",
    "end": "2573760"
  },
  {
    "text": "tube config configuration as so it has said it in my quick configuration file so and all the resources have been",
    "start": "2573760",
    "end": "2580640"
  },
  {
    "text": "created so i'd only now if i use cube cto and let's say you run quick ctl",
    "start": "2580640",
    "end": "2587040"
  },
  {
    "text": "qtl get service as you see",
    "start": "2587040",
    "end": "2593640"
  },
  {
    "text": "clicking it well i would see the cluster ip right so this is the kubernetes display",
    "start": "2594400",
    "end": "2599680"
  },
  {
    "text": "for the service the default service in the kubernetes customer and eks so next uh can also run qctl to get like a wider",
    "start": "2599680",
    "end": "2607440"
  },
  {
    "text": "view of the board keep cto and get pods",
    "start": "2607440",
    "end": "2613760"
  },
  {
    "text": "power the same species in spaces",
    "start": "2614240",
    "end": "2620519"
  },
  {
    "text": "[Music] okay so we can see all the nodes and",
    "start": "2620910",
    "end": "2626960"
  },
  {
    "text": "keep system on all the defaults run all according to running so our cluster is fine then next we need to create uh the",
    "start": "2626960",
    "end": "2633119"
  },
  {
    "text": "deployment of the course advocated it's time for us to create the deployment to deploy our image so as we did for the",
    "start": "2633119",
    "end": "2639119"
  },
  {
    "text": "cluster yammer file i'll create a new file in case the comment i don't know why i'm always making mistakes spelling",
    "start": "2639119",
    "end": "2644400"
  },
  {
    "text": "of touch so because watch eks deployments",
    "start": "2644400",
    "end": "2651119"
  },
  {
    "text": "armor okay and open the file in vs editor which is",
    "start": "2651119",
    "end": "2657520"
  },
  {
    "text": "okay then [Music] to already written down the configuration the arm configuration i'll",
    "start": "2658160",
    "end": "2663839"
  },
  {
    "text": "just copy it and explain",
    "start": "2663839",
    "end": "2669280"
  },
  {
    "text": "so yeah of kind deployments you can deployment the api version so",
    "start": "2669280",
    "end": "2674960"
  },
  {
    "text": "the name cassidy africa demo deployment",
    "start": "2674960",
    "end": "2679359"
  },
  {
    "text": "especially the africa demo deployment um it requires two replicas sets right two",
    "start": "2680400",
    "end": "2685440"
  },
  {
    "text": "replicas so when we create this deployment when we apply this deployment you create supports and",
    "start": "2685440",
    "end": "2691359"
  },
  {
    "text": "the name and the container this name of the container and if you see here i get the placeholder for image",
    "start": "2691359",
    "end": "2698240"
  },
  {
    "text": "uri so you get the uri of this specific image you deployed on",
    "start": "2698240",
    "end": "2704240"
  },
  {
    "text": "the immediate specific image tag we deployed on eks so if you have like if you deployed",
    "start": "2704240",
    "end": "2711839"
  },
  {
    "text": "your version of your image right you can change the image stuff so let's get the pc our image urls but click on",
    "start": "2711839",
    "end": "2719599"
  },
  {
    "text": "this so we have the yeah you can see the image we can see",
    "start": "2719599",
    "end": "2724640"
  },
  {
    "text": "here copy image uri so image uri has been copied will come",
    "start": "2724640",
    "end": "2731560"
  },
  {
    "text": "so i'm using the vi editor here because it's i've been using video mostly because of what you use",
    "start": "2732880",
    "end": "2738880"
  },
  {
    "text": "as a devops engineer but you can use now know to create an editor file you can also use detected it depends on what you",
    "start": "2738880",
    "end": "2745040"
  },
  {
    "text": "like there you are so this is the url so this is our demo the demo uh repository on the ecro your",
    "start": "2745040",
    "end": "2753200"
  },
  {
    "text": "demo repository recorded and this is the image tag so it gets the latest image this particular image i",
    "start": "2753200",
    "end": "2760000"
  },
  {
    "text": "need to build the created deployment and this with this image",
    "start": "2760000",
    "end": "2765520"
  },
  {
    "text": "then i think it has been tapped then we'll save this file",
    "start": "2765520",
    "end": "2771520"
  },
  {
    "text": "okay and then look at the make sure that",
    "start": "2771520",
    "end": "2778000"
  },
  {
    "text": "it was saved it clears deployment dot yammer",
    "start": "2778000",
    "end": "2783280"
  },
  {
    "text": "so you can see and also i forgot to mention the port is listening to so the container part is listening you remember when we created the container we suppose",
    "start": "2783280",
    "end": "2789119"
  },
  {
    "text": "but 8080 um so to be listening to this 8080 so yeah",
    "start": "2789119",
    "end": "2795200"
  },
  {
    "text": "when the image is running it's running images in the container so yeah then you need to apply",
    "start": "2795200",
    "end": "2801280"
  },
  {
    "text": "this deployment so cto dto",
    "start": "2801280",
    "end": "2806480"
  },
  {
    "text": "apply killer deployment",
    "start": "2806480",
    "end": "2811599"
  },
  {
    "text": "deployments file",
    "start": "2812480",
    "end": "2817400"
  },
  {
    "text": "okay the deployment has been created successfully then we can check with cube ctl get deployments deployments",
    "start": "2822880",
    "end": "2831400"
  },
  {
    "text": "then next we need to expose our deployment to other members right other members in cluster with the node port",
    "start": "2838960",
    "end": "2844160"
  },
  {
    "text": "service so to create this service you keep ctl",
    "start": "2844160",
    "end": "2849200"
  },
  {
    "text": "okay we'll first create the file to touch making the mistake and touch again touch ics",
    "start": "2849200",
    "end": "2855520"
  },
  {
    "text": "service",
    "start": "2855520",
    "end": "2858520"
  },
  {
    "text": "i already have the configuration demo configuration",
    "start": "2871200",
    "end": "2877359"
  },
  {
    "text": "so",
    "start": "2877359",
    "end": "2879599"
  },
  {
    "text": "so what kind service the name uh the type this tablet is not third service manager communicates for all the",
    "start": "2883440",
    "end": "2889920"
  },
  {
    "text": "nodes communicated and we define the ports the node ports and for external traffic so we're opening this let's",
    "start": "2889920",
    "end": "2895440"
  },
  {
    "text": "report forward traffic and deposits three one four seven nine so when we get to accessing the api we are like we can",
    "start": "2895440",
    "end": "2904000"
  },
  {
    "text": "see in the step these steps assessing the application there and external api address we'll see how we'll",
    "start": "2904000",
    "end": "2910079"
  },
  {
    "text": "go take the security group in consideration they're going to go feature of eks and contribution to then create an inbound",
    "start": "2910079",
    "end": "2916319"
  },
  {
    "text": "rule not allow traffic so yeah then increasing this is the part of the service customer stuff to this port",
    "start": "2916319",
    "end": "2922480"
  },
  {
    "text": "then target port where the container is actually running so yeah then we need to let me save this",
    "start": "2922480",
    "end": "2930160"
  },
  {
    "text": "okay and to be clear that it was written",
    "start": "2930160",
    "end": "2936559"
  },
  {
    "text": "soon okay yeah then we apply",
    "start": "2936559",
    "end": "2941839"
  },
  {
    "text": "cto cube ctl apply",
    "start": "2941839",
    "end": "2948558"
  },
  {
    "text": "f pks dot yaml",
    "start": "2948640",
    "end": "2956119"
  },
  {
    "text": "let's hope that's everything works fine and let's get white view of the code you",
    "start": "2964000",
    "end": "2969280"
  },
  {
    "text": "here jetport or wide",
    "start": "2969280",
    "end": "2975920"
  },
  {
    "text": "so the pods are running then type nodes",
    "start": "2976079",
    "end": "2982760"
  },
  {
    "text": "so currently all nodes are ready and",
    "start": "2985520",
    "end": "2990640"
  },
  {
    "text": "now we can talk we can now we can external we can access our",
    "start": "2990640",
    "end": "2996960"
  },
  {
    "text": "application via one of these ip addresses this external ip addresses so to do that",
    "start": "2996960",
    "end": "3002079"
  },
  {
    "text": "connect the ip address down to that we need to create",
    "start": "3002079",
    "end": "3007359"
  },
  {
    "text": "a rule and inbound rule in the security group let's create an inbound rule in the security group so let's set security",
    "start": "3007359",
    "end": "3017200"
  },
  {
    "text": "pretty good so here we're looking for this security group that's specific oh we already have it here so i've already",
    "start": "3018400",
    "end": "3023920"
  },
  {
    "text": "created the security group so you need to look for the security group that enables communication between control",
    "start": "3023920",
    "end": "3030240"
  },
  {
    "text": "plane and worker nodes in group ng-1 workers so when you create that when you find that particular security",
    "start": "3030240",
    "end": "3037359"
  },
  {
    "text": "group you go and you create an inbound rule so i've already created an inbound route that is listening to the ports",
    "start": "3037359",
    "end": "3044079"
  },
  {
    "text": "301 uh the notepad 31479 for external traffic so it just has to show how to",
    "start": "3044079",
    "end": "3049920"
  },
  {
    "text": "create any boundary yes yeah so this is the",
    "start": "3049920",
    "end": "3054799"
  },
  {
    "text": "so now you can actually access your application from anywhere from any browser with the ip",
    "start": "3057440",
    "end": "3063040"
  },
  {
    "text": "address sorry about that the ipaddresser can access application let's copy this",
    "start": "3063040",
    "end": "3068960"
  },
  {
    "text": "ip address and the port",
    "start": "3068960",
    "end": "3074319"
  },
  {
    "text": "goes three one four seven nine so add it as a google search",
    "start": "3074319",
    "end": "3080000"
  },
  {
    "text": "but three one four seven nine",
    "start": "3080000",
    "end": "3085279"
  },
  {
    "text": "oh sorry arrow three one five three one four seven nine yeah yeah hello world then to test the name",
    "start": "3086640",
    "end": "3092160"
  },
  {
    "text": "endpoints my name is divine audacious so you",
    "start": "3092160",
    "end": "3097200"
  },
  {
    "text": "followed me on work through creating a springboard application on the queries in the springboot application deploying the application locally in onenote",
    "start": "3097200",
    "end": "3103520"
  },
  {
    "text": "cluster mini cube also we pushed the dockerized image of the application to amazon elastic container",
    "start": "3103520",
    "end": "3110079"
  },
  {
    "text": "registry created the kubernetes cluster on eks and deployed the application on the kubernetes cluster and finally using",
    "start": "3110079",
    "end": "3117040"
  },
  {
    "text": "the eks future we are able to access the application with an external ip address so",
    "start": "3117040",
    "end": "3124640"
  },
  {
    "text": "thank you for listening to this session and for following along you can follow me on twitter this is my art twitter",
    "start": "3124640",
    "end": "3130960"
  },
  {
    "text": "divine orders here i underscore dazzy and divine as is also my name on linkedin i hope you enjoyed this session",
    "start": "3130960",
    "end": "3138240"
  },
  {
    "text": "and this is this all this was recorded i don't know if you noticed so i'll be live in case you have any questions and",
    "start": "3138240",
    "end": "3144720"
  },
  {
    "text": "i'll be live to answer all your questions regarding this particular session thank you and i hope now you you know",
    "start": "3144720",
    "end": "3150240"
  },
  {
    "text": "how to deploy your springboard application in amazon managed communities service yeah you'll enjoy the rest of the qcd",
    "start": "3150240",
    "end": "3156480"
  },
  {
    "text": "africa 2022",
    "start": "3156480",
    "end": "3159880"
  },
  {
    "text": "wow that was a great um demo from divine and if we're looking through the chats",
    "start": "3167680",
    "end": "3174720"
  },
  {
    "text": "divine was right there to answer most of the questions but that was a really informative one right there",
    "start": "3174720",
    "end": "3183279"
  },
  {
    "text": "[Music] awesome um let's okay well wait for",
    "start": "3190510",
    "end": "3197359"
  },
  {
    "text": "let's wait for divine to join the backstage but i think he was uh the backstage before he dropped off so he",
    "start": "3197359",
    "end": "3204240"
  },
  {
    "text": "could answer uh some other questions",
    "start": "3204240",
    "end": "3209839"
  },
  {
    "text": "live",
    "start": "3211040",
    "end": "3213359"
  },
  {
    "text": "okay so let's we still have some time within uh the",
    "start": "3218400",
    "end": "3223440"
  },
  {
    "text": "vines slot so let's give him a few minutes while he joins",
    "start": "3223440",
    "end": "3229500"
  },
  {
    "text": "[Music] oh i think he's here so let's put him on can you guys hear me",
    "start": "3229500",
    "end": "3237440"
  },
  {
    "text": "yes we can hear you clearly welcome yeah no worries internet happens to",
    "start": "3237440",
    "end": "3243119"
  },
  {
    "text": "everyone it's like bro if it doesn't happen we have to do a special sacrifice to the gods for maintaining",
    "start": "3243119",
    "end": "3250559"
  },
  {
    "text": "yeah okay yeah welcome",
    "start": "3250559",
    "end": "3256960"
  },
  {
    "text": "so should i do i need to introduce myself yeah if you can give us more introductions or",
    "start": "3257119",
    "end": "3263680"
  },
  {
    "text": "any or any more context around the talk that you might not have uh you might have remembered after",
    "start": "3263680",
    "end": "3269920"
  },
  {
    "text": "after the conversations with people in chat okay so like something i figured out",
    "start": "3269920",
    "end": "3276160"
  },
  {
    "text": "right or notice right they were good to go so regarding uh the m1 chipset so",
    "start": "3276160",
    "end": "3282880"
  },
  {
    "text": "initially when i built the docker image and it was on the arom 64 architecture",
    "start": "3282880",
    "end": "3289839"
  },
  {
    "text": "when i pushed the image to ecro when i after creating applying the",
    "start": "3289839",
    "end": "3295440"
  },
  {
    "text": "deployment like i i still stopped for like five hours trying to resolve because the image was",
    "start": "3295440",
    "end": "3301280"
  },
  {
    "text": "not like building it was not running so like i noticed that like i didn't remember wow i'm using uh the m1 chipset",
    "start": "3301280",
    "end": "3308799"
  },
  {
    "text": "and my nodes are based on amg64 so i have to like uh set up a",
    "start": "3308799",
    "end": "3315090"
  },
  {
    "text": "[Music] vm with uh colima which is a container on time for lima linux on mac os and",
    "start": "3315090",
    "end": "3322079"
  },
  {
    "text": "then after i did that i had to then view the image on the vm",
    "start": "3322079",
    "end": "3328160"
  },
  {
    "text": "to be on amd 64 before pushing it to ecr and then so like it was just the m1 chip",
    "start": "3328160",
    "end": "3335280"
  },
  {
    "text": "has just been like making my life a lot harder as doing develop stuff so yeah i think",
    "start": "3335280",
    "end": "3340480"
  },
  {
    "text": "that's why being i kind of covered it but i had to like remove it in order to make",
    "start": "3340480",
    "end": "3345520"
  },
  {
    "text": "the uh talk a little bit to meet the time",
    "start": "3345520",
    "end": "3350559"
  },
  {
    "text": "slots here",
    "start": "3350559",
    "end": "3353200"
  },
  {
    "text": "awesome okay i think we have a couple of questions here",
    "start": "3356559",
    "end": "3362480"
  },
  {
    "text": "anita i can't find them can you",
    "start": "3362480",
    "end": "3367839"
  },
  {
    "text": "yeah isn't that the question um divine answered earlier oh okay yeah i think uh there are some",
    "start": "3374319",
    "end": "3380880"
  },
  {
    "text": "others okay i found them um yeah divine um can you explain more",
    "start": "3380880",
    "end": "3387359"
  },
  {
    "text": "about the local repository you created",
    "start": "3387359",
    "end": "3392480"
  },
  {
    "text": "okay sorry i was amazed okay so the local repository created is just like",
    "start": "3393040",
    "end": "3398319"
  },
  {
    "text": "it's not something you do in a production environment right it's just for testing purpose so it's just instead",
    "start": "3398319",
    "end": "3404319"
  },
  {
    "text": "of like the demo i had to focus on ecr amazon instead of pushing to",
    "start": "3404319",
    "end": "3409680"
  },
  {
    "text": "um docker hub so in order to just make things faster i use the repository",
    "start": "3409680",
    "end": "3414799"
  },
  {
    "text": "registry image the registry uh image the animation",
    "start": "3414799",
    "end": "3419839"
  },
  {
    "text": "uh doc and i use the image to create a local repository for that particular session",
    "start": "3419839",
    "end": "3426480"
  },
  {
    "text": "so any and and pushed the my docker image into the repository",
    "start": "3426480",
    "end": "3432799"
  },
  {
    "text": "in order to use it on minicube so yeah",
    "start": "3432799",
    "end": "3437440"
  },
  {
    "text": "that's awesome um [Music] okay we have a question in the chat here",
    "start": "3439599",
    "end": "3445760"
  },
  {
    "text": "it says why do you use okay",
    "start": "3445760",
    "end": "3450799"
  },
  {
    "text": "did you not use okay why did you not use kubernetes okay i think he asked the question and corrected it why did you",
    "start": "3450799",
    "end": "3458240"
  },
  {
    "text": "not use kubernetes yes",
    "start": "3458240",
    "end": "3461839"
  },
  {
    "text": "kind of confused i used kubernetes i created a kubernetes cluster so i don't know if i can see his",
    "start": "3463359",
    "end": "3470000"
  },
  {
    "text": "question okay it's in the youtube chat emmanuel uh schwall lally sorry if i didn't",
    "start": "3470000",
    "end": "3476880"
  },
  {
    "text": "pronounce your name correctly if you can act again or refresh the question",
    "start": "3476880",
    "end": "3483640"
  },
  {
    "text": "okay um i think we the other question we'll have is uh what of if",
    "start": "3488160",
    "end": "3494960"
  },
  {
    "text": "i built this image on an air arm architecture will it run on the eks cluster",
    "start": "3494960",
    "end": "3502119"
  },
  {
    "text": "so depending on how you provision you deploy your nodes right so",
    "start": "3502559",
    "end": "3508640"
  },
  {
    "text": "i don't know i kind of missed talked about that a bit earlier when i joined the course so you have to make sure that",
    "start": "3508640",
    "end": "3514960"
  },
  {
    "text": "your node runs on the same architecture as your image if not it won't",
    "start": "3514960",
    "end": "3520160"
  },
  {
    "text": "uh it won't be it will deploy right or it will run you get like a crash loop",
    "start": "3520160",
    "end": "3526160"
  },
  {
    "text": "backup status which will lead to an error it should just keep restarting we started the pods we keep restarting",
    "start": "3526160",
    "end": "3531280"
  },
  {
    "text": "we're starting with the crashes okay so you have to make sure your",
    "start": "3531280",
    "end": "3537040"
  },
  {
    "text": "cluster is the same your nodes are the same architecture with your images",
    "start": "3537040",
    "end": "3542559"
  },
  {
    "text": "oh okay awesome yeah i think that's all the questions we have um",
    "start": "3542559",
    "end": "3547600"
  },
  {
    "text": "[Music] audience if you have any more questions divine is here before",
    "start": "3547600",
    "end": "3553440"
  },
  {
    "text": "he leaves i think his accent why did you use um",
    "start": "3553440",
    "end": "3561200"
  },
  {
    "text": "mini cube [Music] okay so i use mini cube so kind of like",
    "start": "3561200",
    "end": "3567040"
  },
  {
    "text": "uh i started from scratch right between the application locally this spring boot application and",
    "start": "3567040",
    "end": "3573280"
  },
  {
    "text": "i use mini cube just kind of to show and explain like okay some people may be watching",
    "start": "3573280",
    "end": "3579280"
  },
  {
    "text": "the for the first time they're using kubernetes they don't have access to pcr",
    "start": "3579280",
    "end": "3585599"
  },
  {
    "text": "like to aws so i just like try it out and test out initially that's why i use a mini",
    "start": "3585599",
    "end": "3593280"
  },
  {
    "text": "cube",
    "start": "3593280",
    "end": "3596280"
  },
  {
    "text": "okay well emmanuel i hope that answers your question although emmanuel says he",
    "start": "3602480",
    "end": "3607839"
  },
  {
    "text": "understands you know because of lima okay yeah i think he's talking about the",
    "start": "3607839",
    "end": "3615280"
  },
  {
    "text": "arm [Music] issue the architecture issue",
    "start": "3615280",
    "end": "3622000"
  },
  {
    "text": "great",
    "start": "3622240",
    "end": "3625240"
  },
  {
    "text": "so if you have any other questions for divine you can still drop it in chat while he's here",
    "start": "3628079",
    "end": "3635799"
  },
  {
    "text": "okay i think we don't have any more questions thank you very much divine and",
    "start": "3650880",
    "end": "3658400"
  },
  {
    "text": "we look forward to seeing more of your contributions in the kcd ecosystem",
    "start": "3658400",
    "end": "3665520"
  },
  {
    "text": "thank you i look forward to contributing more okay awesome",
    "start": "3665520",
    "end": "3671440"
  },
  {
    "text": "mine",
    "start": "3671440",
    "end": "3674440"
  }
]