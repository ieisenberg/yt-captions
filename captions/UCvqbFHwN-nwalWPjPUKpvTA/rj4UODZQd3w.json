[
  {
    "text": "well my name is nicool gesi uh I'm here",
    "start": "560",
    "end": "3360"
  },
  {
    "text": "with my co-presenter Mario Matias uh",
    "start": "3360",
    "end": "6120"
  },
  {
    "text": "we're here to talk about instrumenting",
    "start": "6120",
    "end": "8719"
  },
  {
    "text": "um applications are written in various",
    "start": "8719",
    "end": "12519"
  },
  {
    "text": "dynamically managed run times rather",
    "start": "12519",
    "end": "15120"
  },
  {
    "text": "than statically compile binaries and",
    "start": "15120",
    "end": "17480"
  },
  {
    "text": "some of the challenges we've experienced",
    "start": "17480",
    "end": "19880"
  },
  {
    "text": "uh working with these programming",
    "start": "19880",
    "end": "22519"
  },
  {
    "text": "languages and applications um I'll do",
    "start": "22519",
    "end": "25720"
  },
  {
    "text": "the introduction sort of the little bit",
    "start": "25720",
    "end": "27480"
  },
  {
    "text": "first and then Mario Maus will continue",
    "start": "27480",
    "end": "29679"
  },
  {
    "text": "and then I'll come back after as so um",
    "start": "29679",
    "end": "33360"
  },
  {
    "text": "so this is going to be a really much a",
    "start": "33360",
    "end": "34960"
  },
  {
    "text": "low-l talk um uh maybe too deep for some",
    "start": "34960",
    "end": "38640"
  },
  {
    "text": "of the audience here apologize for that",
    "start": "38640",
    "end": "40320"
  },
  {
    "text": "in advance but it's kind of hard to make",
    "start": "40320",
    "end": "42440"
  },
  {
    "text": "a talk where it goes both high level and",
    "start": "42440",
    "end": "44239"
  },
  {
    "text": "low level so we'll talk about manage run",
    "start": "44239",
    "end": "47199"
  },
  {
    "text": "times the stuff they do garbage",
    "start": "47199",
    "end": "48399"
  },
  {
    "text": "Collections and we saw a lot of the",
    "start": "48399",
    "end": "50719"
  },
  {
    "text": "stuff actually mentioned before by Val",
    "start": "50719",
    "end": "53079"
  },
  {
    "text": "and data dog um going to talk about",
    "start": "53079",
    "end": "55480"
  },
  {
    "text": "threading models how they impact us and",
    "start": "55480",
    "end": "58440"
  },
  {
    "text": "um two different Technologies",
    "start": "58440",
    "end": "60680"
  },
  {
    "text": "so what stuff that we we've looked into",
    "start": "60680",
    "end": "63519"
  },
  {
    "text": "go how we actually instrument go",
    "start": "63519",
    "end": "65320"
  },
  {
    "text": "applications and some of the challenges",
    "start": "65320",
    "end": "66880"
  },
  {
    "text": "there and then switch over to what I",
    "start": "66880",
    "end": "69320"
  },
  {
    "text": "call death march from an I guess gaming",
    "start": "69320",
    "end": "72360"
  },
  {
    "text": "reference uh into Java so Mario take it",
    "start": "72360",
    "end": "78080"
  },
  {
    "text": "away okay thank you",
    "start": "78080",
    "end": "80320"
  },
  {
    "text": "Nia H to set the context of this talk uh",
    "start": "80320",
    "end": "85119"
  },
  {
    "text": "we are Auto instrumenting or we want to",
    "start": "85119",
    "end": "88600"
  },
  {
    "text": "Auto instrument applic ations using evf",
    "start": "88600",
    "end": "92479"
  },
  {
    "text": "so for a giv web",
    "start": "92479",
    "end": "95159"
  },
  {
    "text": "application we want to get metrics and",
    "start": "95159",
    "end": "99240"
  },
  {
    "text": "traces of the different service",
    "start": "99240",
    "end": "103000"
  },
  {
    "text": "Communications uh with zot touch how do",
    "start": "103000",
    "end": "106439"
  },
  {
    "text": "we do it we we have developed and",
    "start": "106439",
    "end": "109840"
  },
  {
    "text": "released a product Nam grafana",
    "start": "109840",
    "end": "112360"
  },
  {
    "text": "baa which uh is deployed in the same",
    "start": "112360",
    "end": "116439"
  },
  {
    "text": "host as your instrumented application",
    "start": "116439",
    "end": "119600"
  },
  {
    "text": "and using",
    "start": "119600",
    "end": "121360"
  },
  {
    "text": "evf it is able to uh hook into the",
    "start": "121360",
    "end": "125799"
  },
  {
    "text": "application",
    "start": "125799",
    "end": "126920"
  },
  {
    "text": "runtime and libraries as well as the",
    "start": "126920",
    "end": "129560"
  },
  {
    "text": "Linux kernel in order to get events and",
    "start": "129560",
    "end": "134080"
  },
  {
    "text": "extract information from those events",
    "start": "134080",
    "end": "136519"
  },
  {
    "text": "those events might be a service call for",
    "start": "136519",
    "end": "139959"
  },
  {
    "text": "example and send those metrics and",
    "start": "139959",
    "end": "142319"
  },
  {
    "text": "traces to grafana of course but if not",
    "start": "142319",
    "end": "145680"
  },
  {
    "text": "we provide standard promethus and open",
    "start": "145680",
    "end": "147959"
  },
  {
    "text": "Telemetry interfaces to to send it to",
    "start": "147959",
    "end": "150800"
  },
  {
    "text": "any other collector of your",
    "start": "150800",
    "end": "154120"
  },
  {
    "text": "preference the the way to instrument",
    "start": "154120",
    "end": "156760"
  },
  {
    "text": "vineries or the tools we have uh we can",
    "start": "156760",
    "end": "159519"
  },
  {
    "text": "instrument the the kernel code with K",
    "start": "159519",
    "end": "162360"
  },
  {
    "text": "probes but to instrument the user space",
    "start": "162360",
    "end": "165000"
  },
  {
    "text": "binaries we might use a u probes and",
    "start": "165000",
    "end": "168640"
  },
  {
    "text": "ured probes which are mechanisms",
    "start": "168640",
    "end": "170760"
  },
  {
    "text": "provided by the Linux kernel or user",
    "start": "170760",
    "end": "173519"
  },
  {
    "text": "statically defined uh Trace points with",
    "start": "173519",
    "end": "177800"
  },
  {
    "text": "u probes and Ed probes we we might we",
    "start": "177800",
    "end": "180840"
  },
  {
    "text": "know when a function starts and function",
    "start": "180840",
    "end": "185159"
  },
  {
    "text": "ends and then we can get these",
    "start": "185159",
    "end": "186760"
  },
  {
    "text": "parameters",
    "start": "186760",
    "end": "188280"
  },
  {
    "text": "information from baa currently we only",
    "start": "188280",
    "end": "191159"
  },
  {
    "text": "use uh U probes and ured probes as the",
    "start": "191159",
    "end": "195840"
  },
  {
    "text": "user thetically defined Trace points are",
    "start": "195840",
    "end": "198599"
  },
  {
    "text": "typically uncommon open jdk use them but",
    "start": "198599",
    "end": "203480"
  },
  {
    "text": "are not build by default so this is an",
    "start": "203480",
    "end": "207439"
  },
  {
    "text": "example of a youpro",
    "start": "207439",
    "end": "210560"
  },
  {
    "text": "of the code we need to attach into the",
    "start": "210560",
    "end": "212959"
  },
  {
    "text": "in into this example to a",
    "start": "212959",
    "end": "215879"
  },
  {
    "text": "library uh that in order to get when uh",
    "start": "215879",
    "end": "220840"
  },
  {
    "text": "a an a function starts and and ends this",
    "start": "220840",
    "end": "224760"
  },
  {
    "text": "this is only the skeleton this doesn't",
    "start": "224760",
    "end": "226480"
  },
  {
    "text": "do anything else but getting the",
    "start": "226480",
    "end": "229239"
  },
  {
    "text": "information we",
    "start": "229239",
    "end": "230959"
  },
  {
    "text": "need so since we need to know when a",
    "start": "230959",
    "end": "234400"
  },
  {
    "text": "function starts and ends we need to",
    "start": "234400",
    "end": "236360"
  },
  {
    "text": "attach a U pro and a u red probe",
    "start": "236360",
    "end": "240640"
  },
  {
    "text": "that will be executed the U probe will",
    "start": "240640",
    "end": "243000"
  },
  {
    "text": "give us some information like for",
    "start": "243000",
    "end": "245400"
  },
  {
    "text": "example the the buffer this is the LI",
    "start": "245400",
    "end": "247920"
  },
  {
    "text": "SSL 3 the SSL read information this way",
    "start": "247920",
    "end": "251120"
  },
  {
    "text": "we can know when when SSL data is been",
    "start": "251120",
    "end": "255280"
  },
  {
    "text": "is been read we can get the parameters",
    "start": "255280",
    "end": "257919"
  },
  {
    "text": "like for example the buffer or the size",
    "start": "257919",
    "end": "260720"
  },
  {
    "text": "and in the UR probe we might know or we",
    "start": "260720",
    "end": "263759"
  },
  {
    "text": "can know the return",
    "start": "263759",
    "end": "266080"
  },
  {
    "text": "code uh those events are executed",
    "start": "266080",
    "end": "270320"
  },
  {
    "text": "independently from from a program side",
    "start": "270320",
    "end": "272800"
  },
  {
    "text": "so those programs are stateless we",
    "start": "272800",
    "end": "275639"
  },
  {
    "text": "cannot store uh I mean in in in main",
    "start": "275639",
    "end": "278840"
  },
  {
    "text": "memory we need to store the data from",
    "start": "278840",
    "end": "281759"
  },
  {
    "text": "the invocation to the end needs to be",
    "start": "281759",
    "end": "283639"
  },
  {
    "text": "stored in BPF Maps which are",
    "start": "283639",
    "end": "287360"
  },
  {
    "text": "special uh data structures that run in",
    "start": "287360",
    "end": "290160"
  },
  {
    "text": "the",
    "start": "290160",
    "end": "291120"
  },
  {
    "text": "kernel and also we need to take into",
    "start": "291120",
    "end": "294720"
  },
  {
    "text": "account that even if the Red Pro is is",
    "start": "294720",
    "end": "298039"
  },
  {
    "text": "executed after the U prob",
    "start": "298039",
    "end": "300560"
  },
  {
    "text": "that doesn't mean that always after a u",
    "start": "300560",
    "end": "302680"
  },
  {
    "text": "probe is executed immediately after",
    "start": "302680",
    "end": "305320"
  },
  {
    "text": "comes a UR R probe because this s SL",
    "start": "305320",
    "end": "308039"
  },
  {
    "text": "read uh function might be invoked",
    "start": "308039",
    "end": "311000"
  },
  {
    "text": "multiple times in parallel from",
    "start": "311000",
    "end": "313360"
  },
  {
    "text": "different from different threads so when",
    "start": "313360",
    "end": "316800"
  },
  {
    "text": "we store the the data of the U probe and",
    "start": "316800",
    "end": "321080"
  },
  {
    "text": "we want uh later in the red probe to",
    "start": "321080",
    "end": "324039"
  },
  {
    "text": "know the information we need to relate",
    "start": "324039",
    "end": "326639"
  },
  {
    "text": "each call or each start with each end",
    "start": "326639",
    "end": "330360"
  },
  {
    "text": "for that case we we have a helper",
    "start": "330360",
    "end": "332720"
  },
  {
    "text": "function that gets the current P ID and",
    "start": "332720",
    "end": "336240"
  },
  {
    "text": "thread group ID this way we can relate",
    "start": "336240",
    "end": "339400"
  },
  {
    "text": "we can use this as a map",
    "start": "339400",
    "end": "341800"
  },
  {
    "text": "key in order to to know uh or or to",
    "start": "341800",
    "end": "346400"
  },
  {
    "text": "store the the",
    "start": "346400",
    "end": "348600"
  },
  {
    "text": "arguments when the U probe starts and to",
    "start": "348600",
    "end": "351560"
  },
  {
    "text": "retrieve them when the U probe ends that",
    "start": "351560",
    "end": "354520"
  },
  {
    "text": "way we can relate each invoc",
    "start": "354520",
    "end": "357600"
  },
  {
    "text": "invocation uh which each r",
    "start": "357600",
    "end": "361639"
  },
  {
    "text": "uh also we are assuming some information",
    "start": "363199",
    "end": "365880"
  },
  {
    "text": "we are doing some assumptions here it's",
    "start": "365880",
    "end": "367919"
  },
  {
    "text": "a Rel it's a relatively simple example",
    "start": "367919",
    "end": "370400"
  },
  {
    "text": "because livl is written in C it's an",
    "start": "370400",
    "end": "374720"
  },
  {
    "text": "it's written in an unmanaged",
    "start": "374720",
    "end": "376960"
  },
  {
    "text": "language in an unmanaged runtime so we",
    "start": "376960",
    "end": "380599"
  },
  {
    "text": "can do some assumptions like for example",
    "start": "380599",
    "end": "382680"
  },
  {
    "text": "the buffer we are reading the buffer",
    "start": "382680",
    "end": "385639"
  },
  {
    "text": "with SSL contents doesn't",
    "start": "385639",
    "end": "388120"
  },
  {
    "text": "change uh the the address of that buffer",
    "start": "388120",
    "end": "390960"
  },
  {
    "text": "the buffer might change but the address",
    "start": "390960",
    "end": "393080"
  },
  {
    "text": "of that buffer is the same when the",
    "start": "393080",
    "end": "394560"
  },
  {
    "text": "function starts and when the function",
    "start": "394560",
    "end": "397000"
  },
  {
    "text": "ends this is not always the case in in",
    "start": "397000",
    "end": "401080"
  },
  {
    "text": "in other languages from manager run",
    "start": "401080",
    "end": "406360"
  },
  {
    "text": "times um we we still need to to take",
    "start": "406440",
    "end": "412599"
  },
  {
    "text": "some",
    "start": "412599",
    "end": "414160"
  },
  {
    "text": "some to take uh to take some caution",
    "start": "414160",
    "end": "418080"
  },
  {
    "text": "because we are assuming here that ER",
    "start": "418080",
    "end": "422120"
  },
  {
    "text": "this this library is is will be",
    "start": "422120",
    "end": "425680"
  },
  {
    "text": "always will have always the same",
    "start": "425680",
    "end": "427720"
  },
  {
    "text": "structure but libraries have versions",
    "start": "427720",
    "end": "430599"
  },
  {
    "text": "apis might change especially private",
    "start": "430599",
    "end": "434840"
  },
  {
    "text": "apis",
    "start": "434840",
    "end": "436560"
  },
  {
    "text": "and",
    "start": "436560",
    "end": "438319"
  },
  {
    "text": "and that could mean that uh if a user",
    "start": "438319",
    "end": "441560"
  },
  {
    "text": "updates the library a library and it",
    "start": "441560",
    "end": "444599"
  },
  {
    "text": "there the it's API it can introduce some",
    "start": "444599",
    "end": "447759"
  },
  {
    "text": "changes in the code at the kernel side",
    "start": "447759",
    "end": "450919"
  },
  {
    "text": "there is",
    "start": "450919",
    "end": "451759"
  },
  {
    "text": "a mechanism Nam BTF and C compile on run",
    "start": "451759",
    "end": "457280"
  },
  {
    "text": "everywhere which allows that the code",
    "start": "457280",
    "end": "459599"
  },
  {
    "text": "written for the kernel keeps track of",
    "start": "459599",
    "end": "462400"
  },
  {
    "text": "the for example the different offsets uh",
    "start": "462400",
    "end": "466159"
  },
  {
    "text": "an Arguments for the different versions",
    "start": "466159",
    "end": "468759"
  },
  {
    "text": "of the kernel API but that doesn't exist",
    "start": "468759",
    "end": "471400"
  },
  {
    "text": "for you probes for example imagine we",
    "start": "471400",
    "end": "474159"
  },
  {
    "text": "have this FIP",
    "start": "474159",
    "end": "476440"
  },
  {
    "text": "13.1 and it has a struct and we want to",
    "start": "476440",
    "end": "479599"
  },
  {
    "text": "get information from this struct from",
    "start": "479599",
    "end": "482360"
  },
  {
    "text": "the evf side we don't we cannot see this",
    "start": "482360",
    "end": "485520"
  },
  {
    "text": "stru as a number of uh as a name of a",
    "start": "485520",
    "end": "489400"
  },
  {
    "text": "type and a field name but we need to see",
    "start": "489400",
    "end": "491680"
  },
  {
    "text": "this stru as a uh set of offsets if we",
    "start": "491680",
    "end": "495879"
  },
  {
    "text": "want to access for example the btes we",
    "start": "495879",
    "end": "500080"
  },
  {
    "text": "we know that for this fully version it",
    "start": "500080",
    "end": "502479"
  },
  {
    "text": "will be uh in the beginning of this flow",
    "start": "502479",
    "end": "505919"
  },
  {
    "text": "metric variable plus four Byes and",
    "start": "505919",
    "end": "510000"
  },
  {
    "text": "that's the way we need to to access the",
    "start": "510000",
    "end": "512320"
  },
  {
    "text": "information of the structs but what",
    "start": "512320",
    "end": "514640"
  },
  {
    "text": "happens if for our deployed code the",
    "start": "514640",
    "end": "518479"
  },
  {
    "text": "user updates to a new version and this",
    "start": "518479",
    "end": "521279"
  },
  {
    "text": "new",
    "start": "521279",
    "end": "522760"
  },
  {
    "text": "version ER adds for example a new field",
    "start": "522760",
    "end": "526080"
  },
  {
    "text": "in",
    "start": "526080",
    "end": "526880"
  },
  {
    "text": "between for ER if we were accessing the",
    "start": "526880",
    "end": "530720"
  },
  {
    "text": "error number er no um fi the and they",
    "start": "530720",
    "end": "536600"
  },
  {
    "text": "add a fla in in that place we will",
    "start": "536600",
    "end": "539880"
  },
  {
    "text": "immediately access part of the fla field",
    "start": "539880",
    "end": "542760"
  },
  {
    "text": "and the AR not will be in another in",
    "start": "542760",
    "end": "545120"
  },
  {
    "text": "another place so we need to take care",
    "start": "545120",
    "end": "547680"
  },
  {
    "text": "about that we can use the book",
    "start": "547680",
    "end": "551680"
  },
  {
    "text": "information so if you get the if you",
    "start": "551680",
    "end": "553920"
  },
  {
    "text": "have the debug information if you",
    "start": "553920",
    "end": "556320"
  },
  {
    "text": "executable you you can get all or or you",
    "start": "556320",
    "end": "559839"
  },
  {
    "text": "can get at R time those offsets but if",
    "start": "559839",
    "end": "562600"
  },
  {
    "text": "you many people strips the book",
    "start": "562600",
    "end": "564839"
  },
  {
    "text": "information just to reduce the size of",
    "start": "564839",
    "end": "568360"
  },
  {
    "text": "their of their of their binaries so in",
    "start": "568360",
    "end": "572680"
  },
  {
    "text": "that case we need to maintain a database",
    "start": "572680",
    "end": "576320"
  },
  {
    "text": "a local database with all the stroks of",
    "start": "576320",
    "end": "578680"
  },
  {
    "text": "all the fields we access for all the",
    "start": "578680",
    "end": "581360"
  },
  {
    "text": "different versions of the libraries we",
    "start": "581360",
    "end": "584920"
  },
  {
    "text": "we",
    "start": "584920",
    "end": "586160"
  },
  {
    "text": "access then",
    "start": "586160",
    "end": "588800"
  },
  {
    "text": "this relative",
    "start": "588800",
    "end": "590800"
  },
  {
    "text": "fragility gets increased when we go to",
    "start": "590800",
    "end": "593640"
  },
  {
    "text": "manage run times like go and and",
    "start": "593640",
    "end": "598000"
  },
  {
    "text": "Java uh because those manage run times",
    "start": "598000",
    "end": "602240"
  },
  {
    "text": "uh provide garbage collection that might",
    "start": "602240",
    "end": "604399"
  },
  {
    "text": "mean that an object might change its",
    "start": "604399",
    "end": "607560"
  },
  {
    "text": "location uh during the life of the of",
    "start": "607560",
    "end": "610640"
  },
  {
    "text": "the",
    "start": "610640",
    "end": "611519"
  },
  {
    "text": "program also we can get managed Stacks",
    "start": "611519",
    "end": "615000"
  },
  {
    "text": "we will see that later even uh manag",
    "start": "615000",
    "end": "618360"
  },
  {
    "text": "threats like virtual threats which are",
    "start": "618360",
    "end": "620200"
  },
  {
    "text": "not running at the operating system",
    "start": "620200",
    "end": "622320"
  },
  {
    "text": "level but run at the application Level",
    "start": "622320",
    "end": "624040"
  },
  {
    "text": "managed by the runtime so our evf code",
    "start": "624040",
    "end": "627560"
  },
  {
    "text": "needs to make use of that and other uh",
    "start": "627560",
    "end": "630640"
  },
  {
    "text": "also",
    "start": "630640",
    "end": "631640"
  },
  {
    "text": "other other aspects like linking or",
    "start": "631640",
    "end": "635079"
  },
  {
    "text": "calling conventions that can change not",
    "start": "635079",
    "end": "638040"
  },
  {
    "text": "only from one language to another but",
    "start": "638040",
    "end": "640920"
  },
  {
    "text": "from one compiler to another or from one",
    "start": "640920",
    "end": "643000"
  },
  {
    "text": "compilation mode to",
    "start": "643000",
    "end": "645200"
  },
  {
    "text": "another in for garbage collection in",
    "start": "645200",
    "end": "648639"
  },
  {
    "text": "Gold fortunately we don't have so many",
    "start": "648639",
    "end": "651920"
  },
  {
    "text": "problems at the moment because that this",
    "start": "651920",
    "end": "654920"
  },
  {
    "text": "garbage collection algorithm could",
    "start": "654920",
    "end": "657040"
  },
  {
    "text": "change in a in a future because H go",
    "start": "657040",
    "end": "661600"
  },
  {
    "text": "when passes the garbage collector",
    "start": "661600",
    "end": "664760"
  },
  {
    "text": "doesn't compact memory that means that",
    "start": "664760",
    "end": "668519"
  },
  {
    "text": "if your if your data is alive after a",
    "start": "668519",
    "end": "673680"
  },
  {
    "text": "garbage a garbage collection the data",
    "start": "673680",
    "end": "676320"
  },
  {
    "text": "will be in the same position so we can",
    "start": "676320",
    "end": "678880"
  },
  {
    "text": "be H we can know safely that our Point",
    "start": "678880",
    "end": "683279"
  },
  {
    "text": "pointers will be still",
    "start": "683279",
    "end": "687240"
  },
  {
    "text": "valid we have we have a",
    "start": "687399",
    "end": "689800"
  },
  {
    "text": "in go uh however uh we we had an issue",
    "start": "689800",
    "end": "694720"
  },
  {
    "text": "that uh when we were trying to",
    "start": "694720",
    "end": "696800"
  },
  {
    "text": "instrument go programs we had the issue",
    "start": "696800",
    "end": "699399"
  },
  {
    "text": "that H programs often failed and that's",
    "start": "699399",
    "end": "703560"
  },
  {
    "text": "because go use uh go use go routines",
    "start": "703560",
    "end": "708120"
  },
  {
    "text": "abstract the thread model into a higher",
    "start": "708120",
    "end": "710240"
  },
  {
    "text": "level go routines and go routines have",
    "start": "710240",
    "end": "712880"
  },
  {
    "text": "very small",
    "start": "712880",
    "end": "714480"
  },
  {
    "text": "Stacks uh it happens that when this",
    "start": "714480",
    "end": "717360"
  },
  {
    "text": "stack grows too much go just grows the",
    "start": "717360",
    "end": "720760"
  },
  {
    "text": "stack and might relocate it that means",
    "start": "720760",
    "end": "724600"
  },
  {
    "text": "that the the frame pointer the the the",
    "start": "724600",
    "end": "727560"
  },
  {
    "text": "the return code could change completely",
    "start": "727560",
    "end": "731440"
  },
  {
    "text": "the its location since you initially St",
    "start": "731440",
    "end": "735399"
  },
  {
    "text": "the stack at the beginning of a function",
    "start": "735399",
    "end": "737320"
  },
  {
    "text": "and you are trying to retrieve that",
    "start": "737320",
    "end": "738920"
  },
  {
    "text": "stack from a wrong location at the end",
    "start": "738920",
    "end": "741560"
  },
  {
    "text": "of of a function so what we do for that",
    "start": "741560",
    "end": "745480"
  },
  {
    "text": "is that instead of uh using you probes",
    "start": "745480",
    "end": "748760"
  },
  {
    "text": "we need to ur R probes we need to use U",
    "start": "748760",
    "end": "752519"
  },
  {
    "text": "probes",
    "start": "752519",
    "end": "753680"
  },
  {
    "text": "always this is to know when a function",
    "start": "753680",
    "end": "756800"
  },
  {
    "text": "ends we need to pass the vinary code of",
    "start": "756800",
    "end": "760399"
  },
  {
    "text": "a program look for return instructions",
    "start": "760399",
    "end": "764320"
  },
  {
    "text": "and then attach their you probes on each",
    "start": "764320",
    "end": "766360"
  },
  {
    "text": "read instruction that way we might know",
    "start": "766360",
    "end": "769600"
  },
  {
    "text": "when a function ends with without uh",
    "start": "769600",
    "end": "772920"
  },
  {
    "text": "letting our our program to crash that it",
    "start": "772920",
    "end": "776519"
  },
  {
    "text": "is what was happening uh before",
    "start": "776519",
    "end": "781120"
  },
  {
    "text": "also with managed threats there's uh go",
    "start": "781199",
    "end": "785600"
  },
  {
    "text": "go routines run on top of build",
    "start": "785600",
    "end": "788040"
  },
  {
    "text": "operating system threads but multiple go",
    "start": "788040",
    "end": "791160"
  },
  {
    "text": "routines runs on a smaller set of",
    "start": "791160",
    "end": "793959"
  },
  {
    "text": "threads so in order to correlate a",
    "start": "793959",
    "end": "796880"
  },
  {
    "text": "function start and a function end we",
    "start": "796880",
    "end": "799720"
  },
  {
    "text": "cannot know or we don't know uh we",
    "start": "799720",
    "end": "804320"
  },
  {
    "text": "cannot relate them by uh threat ID",
    "start": "804320",
    "end": "809920"
  },
  {
    "text": "uh fortunately we can know the current",
    "start": "809920",
    "end": "812959"
  },
  {
    "text": "go go routine which in go is always",
    "start": "812959",
    "end": "816079"
  },
  {
    "text": "defined in a in a in a standard register",
    "start": "816079",
    "end": "819240"
  },
  {
    "text": "so accessing that register we might use",
    "start": "819240",
    "end": "822760"
  },
  {
    "text": "the go routine pointer instead of the",
    "start": "822760",
    "end": "826639"
  },
  {
    "text": "instead of the thread ID this is valid",
    "start": "826639",
    "end": "829079"
  },
  {
    "text": "for go 117 in advance this is something",
    "start": "829079",
    "end": "832680"
  },
  {
    "text": "that might change in the future the same",
    "start": "832680",
    "end": "834800"
  },
  {
    "text": "way change from go 116 to from for in",
    "start": "834800",
    "end": "839759"
  },
  {
    "text": "117 from",
    "start": "839759",
    "end": "842560"
  },
  {
    "text": "116 uh also we need to be care with this",
    "start": "843360",
    "end": "846839"
  },
  {
    "text": "linkat and calling conventions for",
    "start": "846839",
    "end": "848959"
  },
  {
    "text": "example from go 116 to17 the function",
    "start": "848959",
    "end": "851519"
  },
  {
    "text": "calling conventions changes all the code",
    "start": "851519",
    "end": "854120"
  },
  {
    "text": "was broken so all the auto instrument at",
    "start": "854120",
    "end": "857240"
  },
  {
    "text": "the time needed to change and support uh",
    "start": "857240",
    "end": "861880"
  },
  {
    "text": "both also for the register calling",
    "start": "861880",
    "end": "865079"
  },
  {
    "text": "convention it's not the same as the",
    "start": "865079",
    "end": "867120"
  },
  {
    "text": "system V AI so it will differ in go than",
    "start": "867120",
    "end": "871399"
  },
  {
    "text": "from other uh languages and evf probes",
    "start": "871399",
    "end": "874959"
  },
  {
    "text": "are always are also sensible to Linker",
    "start": "874959",
    "end": "878000"
  },
  {
    "text": "options that you need to detect at run",
    "start": "878000",
    "end": "881160"
  },
  {
    "text": "time and and",
    "start": "881160",
    "end": "885440"
  },
  {
    "text": "support uh this is an example of of of",
    "start": "886279",
    "end": "889560"
  },
  {
    "text": "how we do this uh this this skeleton of",
    "start": "889560",
    "end": "893680"
  },
  {
    "text": "you probes in in go uh instead of",
    "start": "893680",
    "end": "896800"
  },
  {
    "text": "getting the thread ID you need to get",
    "start": "896800",
    "end": "899519"
  },
  {
    "text": "the the go routine address this is a Mac",
    "start": "899519",
    "end": "902240"
  },
  {
    "text": "this go routine pointer is a is a macro",
    "start": "902240",
    "end": "904839"
  },
  {
    "text": "we used to get this go routine address",
    "start": "904839",
    "end": "906399"
  },
  {
    "text": "and use it as key of the map and also so",
    "start": "906399",
    "end": "909880"
  },
  {
    "text": "the",
    "start": "909880",
    "end": "911399"
  },
  {
    "text": "the the arguments instead of being set",
    "start": "911399",
    "end": "914639"
  },
  {
    "text": "in as argument of the U probe you need",
    "start": "914639",
    "end": "916639"
  },
  {
    "text": "to know how is internally how is the",
    "start": "916639",
    "end": "918800"
  },
  {
    "text": "calling convention in order to get it",
    "start": "918800",
    "end": "921680"
  },
  {
    "text": "from uh well wellknown",
    "start": "921680",
    "end": "925000"
  },
  {
    "text": "registers and also instead of ured",
    "start": "925000",
    "end": "927279"
  },
  {
    "text": "probes for for example for this function",
    "start": "927279",
    "end": "929639"
  },
  {
    "text": "Ser Handler stream you need to set",
    "start": "929639",
    "end": "932000"
  },
  {
    "text": "another you probe this is done",
    "start": "932000",
    "end": "934440"
  },
  {
    "text": "dynamically inspecting the the binary",
    "start": "934440",
    "end": "938800"
  },
  {
    "text": "code uh there are some other Corner",
    "start": "938800",
    "end": "942560"
  },
  {
    "text": "cases that as we say that the heat",
    "start": "942560",
    "end": "945480"
  },
  {
    "text": "memory reference don't move but the",
    "start": "945480",
    "end": "947560"
  },
  {
    "text": "stacks might move so make sure your",
    "start": "947560",
    "end": "950240"
  },
  {
    "text": "pointers are always are valid uh",
    "start": "950240",
    "end": "955480"
  },
  {
    "text": "pointers to hip might we know that might",
    "start": "955480",
    "end": "958440"
  },
  {
    "text": "be a or are valid but for example",
    "start": "958440",
    "end": "960880"
  },
  {
    "text": "pointers to the stock might not be valid",
    "start": "960880",
    "end": "963759"
  },
  {
    "text": "during the whole life cycle of your",
    "start": "963759",
    "end": "965560"
  },
  {
    "text": "functions so you need to um you need to",
    "start": "965560",
    "end": "969959"
  },
  {
    "text": "take that into uh into consideration",
    "start": "969959",
    "end": "972600"
  },
  {
    "text": "always because also because go performs",
    "start": "972600",
    "end": "975440"
  },
  {
    "text": "Escape analysis so when when you think",
    "start": "975440",
    "end": "978079"
  },
  {
    "text": "even if you are allocating something in",
    "start": "978079",
    "end": "979959"
  },
  {
    "text": "the hip go in compiler internally might",
    "start": "979959",
    "end": "983319"
  },
  {
    "text": "know or might demonstrate that this is",
    "start": "983319",
    "end": "986800"
  },
  {
    "text": "not or this can be allocated SA in the",
    "start": "986800",
    "end": "989360"
  },
  {
    "text": "stack and then it will allocate that in",
    "start": "989360",
    "end": "991480"
  },
  {
    "text": "the stack so you cannot do so many so",
    "start": "991480",
    "end": "994920"
  },
  {
    "text": "many assumptions you need to inspect",
    "start": "994920",
    "end": "997199"
  },
  {
    "text": "your instrumentation Target in order to",
    "start": "997199",
    "end": "1000399"
  },
  {
    "text": "make sure your values are safe and now",
    "start": "1000399",
    "end": "1003600"
  },
  {
    "text": "niola will will go to that go was the",
    "start": "1003600",
    "end": "1006800"
  },
  {
    "text": "relatively simple case now the death",
    "start": "1006800",
    "end": "1009199"
  },
  {
    "text": "match is",
    "start": "1009199",
    "end": "1012399"
  },
  {
    "text": "Java so I want to say to the previous",
    "start": "1015160",
    "end": "1018279"
  },
  {
    "text": "implementation for go I want to see a",
    "start": "1018279",
    "end": "1020079"
  },
  {
    "text": "contrast what it is look like for Java",
    "start": "1020079",
    "end": "1022079"
  },
  {
    "text": "and how is Java different if we wanted",
    "start": "1022079",
    "end": "1023800"
  },
  {
    "text": "to go there and some of this applies to",
    "start": "1023800",
    "end": "1026520"
  },
  {
    "text": "net and other similar Technologies but",
    "start": "1026520",
    "end": "1029120"
  },
  {
    "text": "we'll stuck with Java so the first thing",
    "start": "1029120",
    "end": "1031360"
  },
  {
    "text": "about Java is that there's different",
    "start": "1031360",
    "end": "1033199"
  },
  {
    "text": "implementations and some of those",
    "start": "1033199",
    "end": "1035000"
  },
  {
    "text": "implementations are completely rewrites",
    "start": "1035000",
    "end": "1037438"
  },
  {
    "text": "and don't use the same technology so for",
    "start": "1037439",
    "end": "1040000"
  },
  {
    "text": "this purpose of the talk we'll stick",
    "start": "1040000",
    "end": "1041360"
  },
  {
    "text": "with open jdk which is the most commonly",
    "start": "1041360",
    "end": "1043360"
  },
  {
    "text": "used uh Java jvm um now the important",
    "start": "1043360",
    "end": "1047880"
  },
  {
    "text": "thing here is about garbage collection",
    "start": "1047880",
    "end": "1049559"
  },
  {
    "text": "we said we go references don't move in",
    "start": "1049559",
    "end": "1051799"
  },
  {
    "text": "Java they always move uh because all the",
    "start": "1051799",
    "end": "1054840"
  },
  {
    "text": "garbage collectors that Java have move",
    "start": "1054840",
    "end": "1057000"
  },
  {
    "text": "references around the copy and so on um",
    "start": "1057000",
    "end": "1060600"
  },
  {
    "text": "which means the stuff that we did before",
    "start": "1060600",
    "end": "1063400"
  },
  {
    "text": "where we kind of remember in a map a",
    "start": "1063400",
    "end": "1065200"
  },
  {
    "text": "certain reference to a pointer that",
    "start": "1065200",
    "end": "1066640"
  },
  {
    "text": "we're going to use later we can't do",
    "start": "1066640",
    "end": "1068520"
  },
  {
    "text": "that so uh to demonstrate a simple",
    "start": "1068520",
    "end": "1071799"
  },
  {
    "text": "picture that we had before even the",
    "start": "1071799",
    "end": "1073520"
  },
  {
    "text": "simplest garbage collector in ja will do",
    "start": "1073520",
    "end": "1075520"
  },
  {
    "text": "this additional Step at the end not",
    "start": "1075520",
    "end": "1077480"
  },
  {
    "text": "always but occasionally so so it will",
    "start": "1077480",
    "end": "1079200"
  },
  {
    "text": "compact the memory to reduce the",
    "start": "1079200",
    "end": "1081120"
  },
  {
    "text": "fragmentation of the Heap to speed up",
    "start": "1081120",
    "end": "1083360"
  },
  {
    "text": "the Heap allocations with an N life",
    "start": "1083360",
    "end": "1085080"
  },
  {
    "text": "cycle go have chosen not to do that",
    "start": "1085080",
    "end": "1087400"
  },
  {
    "text": "because according to their talk they W",
    "start": "1087400",
    "end": "1089400"
  },
  {
    "text": "micros uh stop the world latency so they",
    "start": "1089400",
    "end": "1092159"
  },
  {
    "text": "don't do that part",
    "start": "1092159",
    "end": "1094679"
  },
  {
    "text": "um now manage Stacks over here typically",
    "start": "1094679",
    "end": "1098360"
  },
  {
    "text": "they don't exist in Java like you get",
    "start": "1098360",
    "end": "1100400"
  },
  {
    "text": "this stack Max that you can change via",
    "start": "1100400",
    "end": "1103200"
  },
  {
    "text": "the command line uh but with",
    "start": "1103200",
    "end": "1105480"
  },
  {
    "text": "introduction of virtual threads they do",
    "start": "1105480",
    "end": "1107120"
  },
  {
    "text": "exact same thing as go routines so if",
    "start": "1107120",
    "end": "1110120"
  },
  {
    "text": "virtual threads become a thing in the",
    "start": "1110120",
    "end": "1112120"
  },
  {
    "text": "future and people use them more often",
    "start": "1112120",
    "end": "1114360"
  },
  {
    "text": "then we have the same problem as with",
    "start": "1114360",
    "end": "1116480"
  },
  {
    "text": "gines which means you red probes will",
    "start": "1116480",
    "end": "1118919"
  },
  {
    "text": "not",
    "start": "1118919",
    "end": "1119640"
  },
  {
    "text": "work um now fortunately this is a",
    "start": "1119640",
    "end": "1123559"
  },
  {
    "text": "dedicated thread register in the code",
    "start": "1123559",
    "end": "1125440"
  },
  {
    "text": "similar to go that we can use to make",
    "start": "1125440",
    "end": "1127360"
  },
  {
    "text": "keys but then the question is what can",
    "start": "1127360",
    "end": "1129760"
  },
  {
    "text": "we store with those keys uh similar to",
    "start": "1129760",
    "end": "1132320"
  },
  {
    "text": "go the linkage convention is not doesn't",
    "start": "1132320",
    "end": "1134480"
  },
  {
    "text": "match system five",
    "start": "1134480",
    "end": "1136919"
  },
  {
    "text": "API now we're going to talk about about",
    "start": "1136919",
    "end": "1139440"
  },
  {
    "text": "what we we thought about a solution so",
    "start": "1139440",
    "end": "1141880"
  },
  {
    "text": "how we could instrument applications or",
    "start": "1141880",
    "end": "1144720"
  },
  {
    "text": "use some level of instrumentation for",
    "start": "1144720",
    "end": "1147240"
  },
  {
    "text": "Java well we can use U probes only um",
    "start": "1147240",
    "end": "1151200"
  },
  {
    "text": "and then we can't remember references",
    "start": "1151200",
    "end": "1154520"
  },
  {
    "text": "because we have to assume that at some",
    "start": "1154520",
    "end": "1156480"
  },
  {
    "text": "point everything will move um if we need",
    "start": "1156480",
    "end": "1159200"
  },
  {
    "text": "to read data from the Heap that needs to",
    "start": "1159200",
    "end": "1161080"
  },
  {
    "text": "happen always on enter of the function",
    "start": "1161080",
    "end": "1163600"
  },
  {
    "text": "or if you're lucky then something gets",
    "start": "1163600",
    "end": "1166400"
  },
  {
    "text": "returned um at the end of the Return of",
    "start": "1166400",
    "end": "1169280"
  },
  {
    "text": "the function then you can safely read",
    "start": "1169280",
    "end": "1170919"
  },
  {
    "text": "that return value um and since the go",
    "start": "1170919",
    "end": "1176480"
  },
  {
    "text": "run actually the Java runtime will",
    "start": "1176480",
    "end": "1179159"
  },
  {
    "text": "recompile methods we need to maybe",
    "start": "1179159",
    "end": "1181559"
  },
  {
    "text": "instrument more than one method that we",
    "start": "1181559",
    "end": "1184080"
  },
  {
    "text": "like and uh of course just like can go",
    "start": "1184080",
    "end": "1187159"
  },
  {
    "text": "we can adapt our linkage so I mention",
    "start": "1187159",
    "end": "1190320"
  },
  {
    "text": "here is to U probes and but what can",
    "start": "1190320",
    "end": "1193520"
  },
  {
    "text": "actually be upres actually used for so",
    "start": "1193520",
    "end": "1197679"
  },
  {
    "text": "um we can only instrument the jit",
    "start": "1197679",
    "end": "1199480"
  },
  {
    "text": "compiled methods so Java jvm start",
    "start": "1199480",
    "end": "1202440"
  },
  {
    "text": "interpreting the code initially and then",
    "start": "1202440",
    "end": "1204960"
  },
  {
    "text": "later on they compile it with one",
    "start": "1204960",
    "end": "1206880"
  },
  {
    "text": "compiler in open JK case called C1 then",
    "start": "1206880",
    "end": "1209559"
  },
  {
    "text": "later on they compile it with another",
    "start": "1209559",
    "end": "1211520"
  },
  {
    "text": "compiler the same method called C2 and",
    "start": "1211520",
    "end": "1213760"
  },
  {
    "text": "the C2 can recompile multiple times so",
    "start": "1213760",
    "end": "1217799"
  },
  {
    "text": "they're extremely difficult to deal with",
    "start": "1217799",
    "end": "1220000"
  },
  {
    "text": "because which means we have to",
    "start": "1220000",
    "end": "1222880"
  },
  {
    "text": "somehow um when they're generated on the",
    "start": "1222880",
    "end": "1225640"
  },
  {
    "text": "Fly there's no binary to inspect and",
    "start": "1225640",
    "end": "1228320"
  },
  {
    "text": "this Min actually changes over time um",
    "start": "1228320",
    "end": "1232840"
  },
  {
    "text": "so the other kind of problem is that's",
    "start": "1232840",
    "end": "1235840"
  },
  {
    "text": "not the only problem the other problem",
    "start": "1235840",
    "end": "1237200"
  },
  {
    "text": "is that inlining is very much unstable",
    "start": "1237200",
    "end": "1239559"
  },
  {
    "text": "so if you run the program once you will",
    "start": "1239559",
    "end": "1242200"
  },
  {
    "text": "get one set of actual binary compiled",
    "start": "1242200",
    "end": "1245200"
  },
  {
    "text": "methods you run another time you may get",
    "start": "1245200",
    "end": "1247880"
  },
  {
    "text": "slightly different or completely",
    "start": "1247880",
    "end": "1249640"
  },
  {
    "text": "different set why because the jvm",
    "start": "1249640",
    "end": "1252440"
  },
  {
    "text": "actually uses a lot of runtime profiling",
    "start": "1252440",
    "end": "1254640"
  },
  {
    "text": "information to guide the inliner to",
    "start": "1254640",
    "end": "1256559"
  },
  {
    "text": "produce more optimal code so so because",
    "start": "1256559",
    "end": "1259400"
  },
  {
    "text": "of that you cannot be guaranteed that uh",
    "start": "1259400",
    "end": "1262919"
  },
  {
    "text": "there will be the same methods that you",
    "start": "1262919",
    "end": "1265480"
  },
  {
    "text": "saw last time which means if you're",
    "start": "1265480",
    "end": "1267280"
  },
  {
    "text": "targeting instrumentation of a specific",
    "start": "1267280",
    "end": "1269200"
  },
  {
    "text": "functionality of the application you may",
    "start": "1269200",
    "end": "1271520"
  },
  {
    "text": "need to instrument more than one method",
    "start": "1271520",
    "end": "1273240"
  },
  {
    "text": "because inlining may be different",
    "start": "1273240",
    "end": "1275240"
  },
  {
    "text": "between the state the stable state that",
    "start": "1275240",
    "end": "1277880"
  },
  {
    "text": "you expect to have",
    "start": "1277880",
    "end": "1280400"
  },
  {
    "text": "um so um the the other thing that's sort",
    "start": "1280400",
    "end": "1284600"
  },
  {
    "text": "of nasty about Java is that uh the jvm",
    "start": "1284600",
    "end": "1287720"
  },
  {
    "text": "itself does a lot of code patching so it",
    "start": "1287720",
    "end": "1291320"
  },
  {
    "text": "would make assumptions about uh the",
    "start": "1291320",
    "end": "1295120"
  },
  {
    "text": "method is compiling let's say you have",
    "start": "1295120",
    "end": "1297720"
  },
  {
    "text": "multiple classes extending the same",
    "start": "1297720",
    "end": "1300440"
  },
  {
    "text": "method same virtual method and at the",
    "start": "1300440",
    "end": "1302880"
  },
  {
    "text": "beginning when the jit compiler compiled",
    "start": "1302880",
    "end": "1304480"
  },
  {
    "text": "this method this there was only one",
    "start": "1304480",
    "end": "1306640"
  },
  {
    "text": "implementation of this but later on when",
    "start": "1306640",
    "end": "1309679"
  },
  {
    "text": "you're on the program some new class",
    "start": "1309679",
    "end": "1311279"
  },
  {
    "text": "gets loaded and this actual assumption",
    "start": "1311279",
    "end": "1313400"
  },
  {
    "text": "gets invalidated so the jvm runtime will",
    "start": "1313400",
    "end": "1315880"
  },
  {
    "text": "patch all the places where this sort of",
    "start": "1315880",
    "end": "1319240"
  },
  {
    "text": "assumption was being made which means",
    "start": "1319240",
    "end": "1321279"
  },
  {
    "text": "our approach of disassembling and",
    "start": "1321279",
    "end": "1324559"
  },
  {
    "text": "looking for return instructions may not",
    "start": "1324559",
    "end": "1326400"
  },
  {
    "text": "always work why because the patch code",
    "start": "1326400",
    "end": "1328720"
  },
  {
    "text": "may not actually disassemble really well",
    "start": "1328720",
    "end": "1331240"
  },
  {
    "text": "and then temporarily use any lose any",
    "start": "1331240",
    "end": "1334159"
  },
  {
    "text": "context for the disassemblers you may",
    "start": "1334159",
    "end": "1335919"
  },
  {
    "text": "get gibberish or garbage and not",
    "start": "1335919",
    "end": "1338200"
  },
  {
    "text": "actually find the right return",
    "start": "1338200",
    "end": "1339799"
  },
  {
    "text": "instruction so attaching or return of a",
    "start": "1339799",
    "end": "1342640"
  },
  {
    "text": "function can be dicey not always",
    "start": "1342640",
    "end": "1345320"
  },
  {
    "text": "compatible",
    "start": "1345320",
    "end": "1346880"
  },
  {
    "text": "so um so so the question is how do we",
    "start": "1346880",
    "end": "1349520"
  },
  {
    "text": "find these Java symbols um I'm going to",
    "start": "1349520",
    "end": "1352240"
  },
  {
    "text": "skip to the second point before I go to",
    "start": "1352240",
    "end": "1353960"
  },
  {
    "text": "the first one where the in the case of",
    "start": "1353960",
    "end": "1356240"
  },
  {
    "text": "grow VM native which is also popular",
    "start": "1356240",
    "end": "1358760"
  },
  {
    "text": "some spaces this is pretty simple uh",
    "start": "1358760",
    "end": "1361520"
  },
  {
    "text": "because there is a binary it's compiled",
    "start": "1361520",
    "end": "1364320"
  },
  {
    "text": "one way and it's always that same binary",
    "start": "1364320",
    "end": "1367159"
  },
  {
    "text": "so those are good now how do we compile",
    "start": "1367159",
    "end": "1371440"
  },
  {
    "text": "how do we catch the compiled methods",
    "start": "1371440",
    "end": "1373240"
  },
  {
    "text": "well there's two problems first is like",
    "start": "1373240",
    "end": "1376080"
  },
  {
    "text": "you can catch the compile methods as",
    "start": "1376080",
    "end": "1377840"
  },
  {
    "text": "they come",
    "start": "1377840",
    "end": "1379039"
  },
  {
    "text": "and one way to do it is to attach a u",
    "start": "1379039",
    "end": "1381559"
  },
  {
    "text": "Probe on uh register n method which is a",
    "start": "1381559",
    "end": "1384720"
  },
  {
    "text": "function in open jdk get called every",
    "start": "1384720",
    "end": "1386760"
  },
  {
    "text": "time the compiler wants to commit a new",
    "start": "1386760",
    "end": "1388480"
  },
  {
    "text": "method in uh the code cache so in this",
    "start": "1388480",
    "end": "1392440"
  },
  {
    "text": "case you can attach a u probe send that",
    "start": "1392440",
    "end": "1394880"
  },
  {
    "text": "event over to the user space of the ebpf",
    "start": "1394880",
    "end": "1397440"
  },
  {
    "text": "program and then drop the previous U",
    "start": "1397440",
    "end": "1401279"
  },
  {
    "text": "Probe on that method attach a new one to",
    "start": "1401279",
    "end": "1403600"
  },
  {
    "text": "the new address and keep doing that as",
    "start": "1403600",
    "end": "1406279"
  },
  {
    "text": "the methods get recompiled all the time",
    "start": "1406279",
    "end": "1409360"
  },
  {
    "text": "um there's one problem with that you",
    "start": "1409360",
    "end": "1411799"
  },
  {
    "text": "don't see all the methods so it depends",
    "start": "1411799",
    "end": "1414080"
  },
  {
    "text": "when you first started running your evf",
    "start": "1414080",
    "end": "1416919"
  },
  {
    "text": "program what about the stuff that was",
    "start": "1416919",
    "end": "1419640"
  },
  {
    "text": "compiled before you started monitoring",
    "start": "1419640",
    "end": "1422799"
  },
  {
    "text": "the calls to end method um so one one",
    "start": "1422799",
    "end": "1427400"
  },
  {
    "text": "possibility is that well maybe you can",
    "start": "1427400",
    "end": "1431080"
  },
  {
    "text": "dump the list of methods that existed",
    "start": "1431080",
    "end": "1433159"
  },
  {
    "text": "before you went through and there's",
    "start": "1433159",
    "end": "1434919"
  },
  {
    "text": "programs for that like the jvm provides",
    "start": "1434919",
    "end": "1437039"
  },
  {
    "text": "jcmd for fortunately when they made the",
    "start": "1437039",
    "end": "1440159"
  },
  {
    "text": "decision to disable Dynamic agent",
    "start": "1440159",
    "end": "1442919"
  },
  {
    "text": "loading they didn't disable some of this",
    "start": "1442919",
    "end": "1444840"
  },
  {
    "text": "interfaces so this is still possible to",
    "start": "1444840",
    "end": "1446760"
  },
  {
    "text": "do with jcmd you just can't load anymore",
    "start": "1446760",
    "end": "1449679"
  },
  {
    "text": "by default um agents uh but this method",
    "start": "1449679",
    "end": "1454679"
  },
  {
    "text": "list and garbage collection stuff you",
    "start": "1454679",
    "end": "1456960"
  },
  {
    "text": "can still do um and if you can control",
    "start": "1456960",
    "end": "1460159"
  },
  {
    "text": "the Java command line then actually",
    "start": "1460159",
    "end": "1461960"
  },
  {
    "text": "Things become lot simpler if your",
    "start": "1461960",
    "end": "1464360"
  },
  {
    "text": "application is running in a mode where",
    "start": "1464360",
    "end": "1466440"
  },
  {
    "text": "you actually also uh deploy the ebpf",
    "start": "1466440",
    "end": "1469520"
  },
  {
    "text": "program and run the Java program then we",
    "start": "1469520",
    "end": "1473120"
  },
  {
    "text": "stand a better chance there's command",
    "start": "1473120",
    "end": "1474679"
  },
  {
    "text": "line options in the jvm command line",
    "start": "1474679",
    "end": "1476480"
  },
  {
    "text": "that you can actually for one thing uh",
    "start": "1476480",
    "end": "1479760"
  },
  {
    "text": "get the list of compiled methods that",
    "start": "1479760",
    "end": "1481279"
  },
  {
    "text": "are already out there without attaching",
    "start": "1481279",
    "end": "1482919"
  },
  {
    "text": "an uh to the jvm um but you can also",
    "start": "1482919",
    "end": "1486840"
  },
  {
    "text": "maybe even control the inlining to say",
    "start": "1486840",
    "end": "1488960"
  },
  {
    "text": "maybe stabilize around this one methods",
    "start": "1488960",
    "end": "1491080"
  },
  {
    "text": "or couple of methods that were I'm",
    "start": "1491080",
    "end": "1492880"
  },
  {
    "text": "really interested in actually",
    "start": "1492880",
    "end": "1496080"
  },
  {
    "text": "instrumenting um so",
    "start": "1496080",
    "end": "1500320"
  },
  {
    "text": "that's about it about ja now a further",
    "start": "1500720",
    "end": "1503600"
  },
  {
    "text": "step than that we thought about is like",
    "start": "1503600",
    "end": "1506120"
  },
  {
    "text": "well there's some languages and run",
    "start": "1506120",
    "end": "1507679"
  },
  {
    "text": "times that are impossible so interpreted",
    "start": "1507679",
    "end": "1510960"
  },
  {
    "text": "they're just plor bite codes they run",
    "start": "1510960",
    "end": "1512880"
  },
  {
    "text": "inside with some interpretation engine",
    "start": "1512880",
    "end": "1516159"
  },
  {
    "text": "that is written in another programming",
    "start": "1516159",
    "end": "1517799"
  },
  {
    "text": "language or maybe the same programming",
    "start": "1517799",
    "end": "1519279"
  },
  {
    "text": "language but",
    "start": "1519279",
    "end": "1520360"
  },
  {
    "text": "nonetheless uh there's no symbols or",
    "start": "1520360",
    "end": "1524360"
  },
  {
    "text": "that you can particularly attach to so",
    "start": "1524360",
    "end": "1526720"
  },
  {
    "text": "example like python running in",
    "start": "1526720",
    "end": "1528320"
  },
  {
    "text": "interpreted mode um there's also",
    "start": "1528320",
    "end": "1531120"
  },
  {
    "text": "partially compiled methods Java does",
    "start": "1531120",
    "end": "1532880"
  },
  {
    "text": "this for example if you had a method",
    "start": "1532880",
    "end": "1535039"
  },
  {
    "text": "that you called once and it was an",
    "start": "1535039",
    "end": "1536679"
  },
  {
    "text": "endless loop uh what the jvm will do",
    "start": "1536679",
    "end": "1539240"
  },
  {
    "text": "there is actually will start",
    "start": "1539240",
    "end": "1540480"
  },
  {
    "text": "interpreting it then later on there's",
    "start": "1540480",
    "end": "1542559"
  },
  {
    "text": "code that will detect that this is",
    "start": "1542559",
    "end": "1543840"
  },
  {
    "text": "really hot method perhaps and the Java",
    "start": "1543840",
    "end": "1546520"
  },
  {
    "text": "will do on stack replacement replace the",
    "start": "1546520",
    "end": "1549000"
  },
  {
    "text": "remainder of the method until the point",
    "start": "1549000",
    "end": "1550960"
  },
  {
    "text": "where it was actually stuck in that",
    "start": "1550960",
    "end": "1553000"
  },
  {
    "text": "endless loop with a binary compiled J",
    "start": "1553000",
    "end": "1555760"
  },
  {
    "text": "method now you lost your ch chance to",
    "start": "1555760",
    "end": "1558840"
  },
  {
    "text": "actually uh instrument the beginning of",
    "start": "1558840",
    "end": "1561399"
  },
  {
    "text": "that particular function so um nothing",
    "start": "1561399",
    "end": "1564279"
  },
  {
    "text": "we can do there uh there's also Trace",
    "start": "1564279",
    "end": "1566760"
  },
  {
    "text": "compilers Trace compilers don't compile",
    "start": "1566760",
    "end": "1569320"
  },
  {
    "text": "based on method or function boundaries",
    "start": "1569320",
    "end": "1571320"
  },
  {
    "text": "they just compile whatever The",
    "start": "1571320",
    "end": "1573799"
  },
  {
    "text": "Interpreter tells them that it's hot",
    "start": "1573799",
    "end": "1575520"
  },
  {
    "text": "path and they see it as a stream of uh",
    "start": "1575520",
    "end": "1578320"
  },
  {
    "text": "some Intermediate Language bite code or",
    "start": "1578320",
    "end": "1580120"
  },
  {
    "text": "whatever it is and they turn it into uh",
    "start": "1580120",
    "end": "1582960"
  },
  {
    "text": "native",
    "start": "1582960",
    "end": "1583840"
  },
  {
    "text": "code uh fortunately for us like",
    "start": "1583840",
    "end": "1586320"
  },
  {
    "text": "depending on the runtime where",
    "start": "1586320",
    "end": "1588360"
  },
  {
    "text": "instrumenting there might be ways that",
    "start": "1588360",
    "end": "1590559"
  },
  {
    "text": "we can instrument some parts of those",
    "start": "1590559",
    "end": "1592240"
  },
  {
    "text": "manage run times like if they use a lot",
    "start": "1592240",
    "end": "1595080"
  },
  {
    "text": "of native calls like python does or",
    "start": "1595080",
    "end": "1597080"
  },
  {
    "text": "nodejs Ruby then maybe you can",
    "start": "1597080",
    "end": "1599520"
  },
  {
    "text": "instrument those parts but not The",
    "start": "1599520",
    "end": "1601559"
  },
  {
    "text": "Interpreter",
    "start": "1601559",
    "end": "1604000"
  },
  {
    "text": "sides so what we've implemented so far",
    "start": "1604000",
    "end": "1606440"
  },
  {
    "text": "in our project is that we've done the go",
    "start": "1606440",
    "end": "1608440"
  },
  {
    "text": "support uh that's released uh we care",
    "start": "1608440",
    "end": "1611640"
  },
  {
    "text": "mostly about open Telemetry",
    "start": "1611640",
    "end": "1613000"
  },
  {
    "text": "observability so uh we' sort of stayed",
    "start": "1613000",
    "end": "1615640"
  },
  {
    "text": "away from java.net and those guys",
    "start": "1615640",
    "end": "1617799"
  },
  {
    "text": "because we think that those agents",
    "start": "1617799",
    "end": "1619559"
  },
  {
    "text": "actually by open Telemetry uh are pretty",
    "start": "1619559",
    "end": "1623200"
  },
  {
    "text": "good so they do a lot of stuff that",
    "start": "1623200",
    "end": "1625840"
  },
  {
    "text": "customers take a use of uh our primary",
    "start": "1625840",
    "end": "1628799"
  },
  {
    "text": "interest in Java has been around native",
    "start": "1628799",
    "end": "1630960"
  },
  {
    "text": "binaries where you cannot dynamically",
    "start": "1630960",
    "end": "1632919"
  },
  {
    "text": "load agents and do auto instrumentation",
    "start": "1632919",
    "end": "1635559"
  },
  {
    "text": "and fortunately for us those actually do",
    "start": "1635559",
    "end": "1637559"
  },
  {
    "text": "come with symbols um that actually don't",
    "start": "1637559",
    "end": "1641200"
  },
  {
    "text": "change or recompile on the Fly um and",
    "start": "1641200",
    "end": "1644760"
  },
  {
    "text": "our um inan future work is that we'll",
    "start": "1644760",
    "end": "1647559"
  },
  {
    "text": "probably add more user level",
    "start": "1647559",
    "end": "1649039"
  },
  {
    "text": "instrumentation for other languages and",
    "start": "1649039",
    "end": "1650960"
  },
  {
    "text": "manage run times and overall I think",
    "start": "1650960",
    "end": "1654159"
  },
  {
    "text": "also one thing that people sort of Miss",
    "start": "1654159",
    "end": "1655679"
  },
  {
    "text": "is that ebpf is also great for um",
    "start": "1655679",
    "end": "1660159"
  },
  {
    "text": "getting uh information by the runtime",
    "start": "1660159",
    "end": "1662240"
  },
  {
    "text": "itself so attaching your probes to the",
    "start": "1662240",
    "end": "1664519"
  },
  {
    "text": "jvm runtime uh you can get a lot of",
    "start": "1664519",
    "end": "1667080"
  },
  {
    "text": "information like calculating GC times or",
    "start": "1667080",
    "end": "1669320"
  },
  {
    "text": "in the go case maybe even counting the",
    "start": "1669320",
    "end": "1671480"
  },
  {
    "text": "number of go routines or how much in",
    "start": "1671480",
    "end": "1674159"
  },
  {
    "text": "node.js the events are stuck on the",
    "start": "1674159",
    "end": "1676039"
  },
  {
    "text": "event Loop because those parts of the",
    "start": "1676039",
    "end": "1679159"
  },
  {
    "text": "manage run times do have symbols it's",
    "start": "1679159",
    "end": "1681480"
  },
  {
    "text": "actually easy to apply ebpf to get some",
    "start": "1681480",
    "end": "1683519"
  },
  {
    "text": "of",
    "start": "1683519",
    "end": "1685240"
  },
  {
    "text": "that so to summarize uh I think there's",
    "start": "1685240",
    "end": "1689320"
  },
  {
    "text": "some level of EBP instrumentation that",
    "start": "1689320",
    "end": "1691880"
  },
  {
    "text": "we can do for manage run times uh some",
    "start": "1691880",
    "end": "1694519"
  },
  {
    "text": "managed run times are much easier to",
    "start": "1694519",
    "end": "1696120"
  },
  {
    "text": "deal with than others um and and some",
    "start": "1696120",
    "end": "1699799"
  },
  {
    "text": "managed run times almost impossible to",
    "start": "1699799",
    "end": "1701799"
  },
  {
    "text": "do um I think that typical approaches",
    "start": "1701799",
    "end": "1704960"
  },
  {
    "text": "for static for dealing for ebpf",
    "start": "1704960",
    "end": "1707039"
  },
  {
    "text": "instrumentation of static",
    "start": "1707039",
    "end": "1710120"
  },
  {
    "text": "[Music]",
    "start": "1712990",
    "end": "1716059"
  },
  {
    "text": "[Music]",
    "start": "1721920",
    "end": "1725089"
  },
  {
    "text": "[Music]",
    "start": "1728260",
    "end": "1732559"
  },
  {
    "text": "thank you that's that's it you can find",
    "start": "1738120",
    "end": "1739919"
  },
  {
    "text": "us on there this",
    "start": "1739919",
    "end": "1743679"
  },
  {
    "text": "SL",
    "start": "1743919",
    "end": "1746919"
  }
]