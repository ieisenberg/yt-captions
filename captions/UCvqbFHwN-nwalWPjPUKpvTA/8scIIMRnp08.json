[
  {
    "text": "welcome everybody to This Cloud native Computing Foundation webinar uh which will be delivered by Oran I on just in",
    "start": "1920",
    "end": "9040"
  },
  {
    "text": "time a access for cuberes workloads anywhere with C manager anise a quick",
    "start": "9040",
    "end": "14160"
  },
  {
    "text": "bit of intro I'm a technical director at fify machine identities company and I",
    "start": "14160",
    "end": "20480"
  },
  {
    "text": "focus on workload identities and fify is a company behind C manager as the",
    "start": "20480",
    "end": "26000"
  },
  {
    "text": "creators of C manager and donated to the cncf in 2020 I'm here with Ori Ori can",
    "start": "26000",
    "end": "32558"
  },
  {
    "text": "you introduce yourself yeah thank you uh hi everyone um I'm the CTO at aoriz uh",
    "start": "32559",
    "end": "39760"
  },
  {
    "text": "we build open source software for declaratively managing workload IM IM on kubernetes uh these days I pretend to be",
    "start": "39760",
    "end": "46480"
  },
  {
    "text": "an extroverted CTO doing webinars and such but before that I was just an introverted platform",
    "start": "46480",
    "end": "53039"
  },
  {
    "text": "engineer so here we go thank you Ari yeah I'm like really looking forward to present this webinar together with you",
    "start": "53039",
    "end": "60120"
  },
  {
    "text": "um it's a mold title kind of thing but we're going to try to break this down in",
    "start": "60120",
    "end": "65400"
  },
  {
    "text": "Easy bite-size pieces so you can definitely understand this a bit on our agenda we're first going to talk a",
    "start": "65400",
    "end": "71080"
  },
  {
    "text": "little bit about ads and spiffy um we're then going to talk about Ser manager and the Ser manager CSI piy driver um",
    "start": "71080",
    "end": "78320"
  },
  {
    "text": "authorize you will see a real life demo and uh a small recap um first before",
    "start": "78320",
    "end": "84880"
  },
  {
    "text": "actually starting with all of the content I want to say a big thank you to uh Jose F Leen and Thomas Meadows uh two",
    "start": "84880",
    "end": "91600"
  },
  {
    "text": "former Fifi colleagues of mine who last year during cucon Europe in Amsterdam uh",
    "start": "91600",
    "end": "97880"
  },
  {
    "text": "did a talk onert manager K do spify solving multicloud workload identity using a defect to Stander tool really",
    "start": "97880",
    "end": "104640"
  },
  {
    "text": "great talk I really highly suggest to check this out maybe even before sometimes watching this webinar if",
    "start": "104640",
    "end": "110119"
  },
  {
    "text": "you're watching this in in a recording afterwards uh they will go really deep into like what Spy is and how everything",
    "start": "110119",
    "end": "116280"
  },
  {
    "text": "is being built up uh while we stay a bit more on the higher level as uh we want",
    "start": "116280",
    "end": "121640"
  },
  {
    "text": "to show some other bits and pieces besides the spify uh today and how like this can all work together with",
    "start": "121640",
    "end": "128360"
  },
  {
    "text": "authoriz uh so a small bit on uh our honorary guest of today it's Adas uh so",
    "start": "128360",
    "end": "136000"
  },
  {
    "text": "we are going to talk to AWS and we're going to use a service of AWS called I am rolles anywhere uh it's a really",
    "start": "136000",
    "end": "143360"
  },
  {
    "text": "great feature of ITW and unfortunately none of the other Cloud providers kind of have something quite similar um and",
    "start": "143360",
    "end": "150120"
  },
  {
    "text": "what it allows this feature is to authenticate to AWS with an x509 certificate that you have minted",
    "start": "150120",
    "end": "156280"
  },
  {
    "text": "yourself with your own tool um you mint your x509 certificate and through a CA",
    "start": "156280",
    "end": "162560"
  },
  {
    "text": "that you own you give OS the a public keys of that CA so that there's a trust",
    "start": "162560",
    "end": "169200"
  },
  {
    "text": "being established and then what you can do is you can exchange that x59 certificate for uh short lift access",
    "start": "169200",
    "end": "175840"
  },
  {
    "text": "credentials by using the create session um uh feature of IM roles anywhere and",
    "start": "175840",
    "end": "185120"
  },
  {
    "text": "it's a very easy feature and that's what we are going to heavily leverage for uh this",
    "start": "185120",
    "end": "190760"
  },
  {
    "text": "webinar a small bit of recap as well on spiffy um spiffy uh exists out of",
    "start": "190760",
    "end": "196440"
  },
  {
    "text": "multiple components but for uh the purpose of this talk we're going to focus first and foremost on spify",
    "start": "196440",
    "end": "202080"
  },
  {
    "text": "identities which exists out of three components or or three parts first of all you have the scheme of a spify",
    "start": "202080",
    "end": "208360"
  },
  {
    "text": "identity um in spify that's just spify do do slash the second part is uh the",
    "start": "208360",
    "end": "214840"
  },
  {
    "text": "trust domain and a trust domain is kind of how you can mark your uh thrust boundary how you can uniquely Mark uh",
    "start": "214840",
    "end": "221720"
  },
  {
    "text": "for example an environment so when you are an Enterprise you might have different thrust domains for for example",
    "start": "221720",
    "end": "227480"
  },
  {
    "text": "production developments and uh these kind of Mark your thrust boundaries spey",
    "start": "227480",
    "end": "234000"
  },
  {
    "text": "identities are being cryptographically uh signed in key materials uh the two common key",
    "start": "234000",
    "end": "239840"
  },
  {
    "text": "materials uh that spify identity can be uh minted is as an x509 certificate and",
    "start": "239840",
    "end": "246360"
  },
  {
    "text": "a JW token for the purpose of this talk we're only going to focus on uh d509",
    "start": "246360",
    "end": "251840"
  },
  {
    "text": "bits but know that like the official uh spfy framework also uh support uh chot",
    "start": "251840",
    "end": "257280"
  },
  {
    "text": "tokens and we're also a big part of that is also the attestation and validation",
    "start": "257280",
    "end": "262440"
  },
  {
    "text": "of workloads before you can mint a spify identity with an 509 certificate you",
    "start": "262440",
    "end": "267759"
  },
  {
    "text": "first want to uh validate that that workload is with sayi is and uh this can be done through multiple factors and and",
    "start": "267759",
    "end": "274120"
  },
  {
    "text": "later on this stock you will see for example how C measure can help with uh this",
    "start": "274120",
    "end": "279800"
  },
  {
    "text": "bits uh this is where C manager comes in C manager is kind of the defective",
    "start": "279800",
    "end": "285280"
  },
  {
    "text": "standard for uh certificate Management on uh kubernetes it's a really great tool to um manage the life cycle of x509",
    "start": "285280",
    "end": "293720"
  },
  {
    "text": "certificates within kubernetes clusters uh it's part of the cncf um it's",
    "start": "293720",
    "end": "299039"
  },
  {
    "text": "currently in an incubating status uh as it has been donated by vanify 2020 uh",
    "start": "299039",
    "end": "305320"
  },
  {
    "text": "but the C manager team is working towards uh graduation hopefully later this year uh it has currently more than",
    "start": "305320",
    "end": "312160"
  },
  {
    "text": "11,000 uh Stars uh on gitup and uh the main use case I think like that",
    "start": "312160",
    "end": "318000"
  },
  {
    "text": "everybody's aware of of C manager is using it for securing your uh Ingress uh resources or your gateway resources uh",
    "start": "318000",
    "end": "325840"
  },
  {
    "text": "where c c manager creates a certificate that 10 stores your TLS certificate in a",
    "start": "325840",
    "end": "331720"
  },
  {
    "text": "secret in a community secret that then can be used by your Ingress Gateway um uh to be able to secure your web traffic",
    "start": "331720",
    "end": "338880"
  },
  {
    "text": "uh let en cryp for example was one of the very first implementations of like uh C manager uh and it's still like I",
    "start": "338880",
    "end": "345600"
  },
  {
    "text": "think like the most popular used one at least I use it in my own home cluster so always start with deploying s manager",
    "start": "345600",
    "end": "353360"
  },
  {
    "text": "and let en Crypt yeah every FAS indeed yeah like it's been used I think nine or",
    "start": "353360",
    "end": "359039"
  },
  {
    "text": "of the 10 clusters that I see uh but there are a bunch of other use cases as",
    "start": "359039",
    "end": "364280"
  },
  {
    "text": "well of start manager besides the Ingress story uh first and foremost like it can do an integration with viso",
    "start": "364280",
    "end": "370720"
  },
  {
    "text": "service mesh and um some other service meshes as well uh to replace the built-in uh self-signed CA so uh this is",
    "start": "370720",
    "end": "379120"
  },
  {
    "text": "commonly done to improve the security by using external Casa and uh especially a lot of big Enterprises they have their",
    "start": "379120",
    "end": "385639"
  },
  {
    "text": "own scas that they want to use and and they don't want to use any self signed CA within their production environments",
    "start": "385639",
    "end": "392479"
  },
  {
    "text": "hence C manager can take care of this and it can replace that self signed CA",
    "start": "392479",
    "end": "397720"
  },
  {
    "text": "it also makes it's easier to set up multicluster when you set up multicluster you need to start copying like uh the thrust Roots uh between",
    "start": "397720",
    "end": "405280"
  },
  {
    "text": "different clusters this all goes away when you have like that common PPI that you can trust um another bit that start",
    "start": "405280",
    "end": "412160"
  },
  {
    "text": "manager also has is you can build your own mtls if you want so uh this either can be done by creating certificates uh",
    "start": "412160",
    "end": "419000"
  },
  {
    "text": "that then store it's in a community secret or by using the CSI drivers of C manager to be",
    "start": "419000",
    "end": "425879"
  },
  {
    "text": "able to give your workloads just in time certificates where you then can have like your own uh create your own mtls",
    "start": "425879",
    "end": "432759"
  },
  {
    "text": "for example common one that I have seen is lots of spring boot Java spring boot applications that load in Java thess",
    "start": "432759",
    "end": "440080"
  },
  {
    "text": "stores uh one of the other projects that s Meer also has is uh the trust manager",
    "start": "440080",
    "end": "446319"
  },
  {
    "text": "and the trust manager is a really great project to get uh C rot chains public",
    "start": "446319",
    "end": "451479"
  },
  {
    "text": "Keys uh from many different sources and then give these to your applications so",
    "start": "451479",
    "end": "458240"
  },
  {
    "text": "that they can uh trust those and this is especially great if you are needing to rely on uh uh thrust stores and and and",
    "start": "458240",
    "end": "466840"
  },
  {
    "text": "public and CA kind of thing that are not uh publicly being uh uh distributed like",
    "start": "466840",
    "end": "473000"
  },
  {
    "text": "for example indeed if you have your own p in your own company like this is a great way to um distribute that towards",
    "start": "473000",
    "end": "479639"
  },
  {
    "text": "all of your applications without needing to embed these necessarily inside your container images but you can then like",
    "start": "479639",
    "end": "485840"
  },
  {
    "text": "easily update them without needing to update your container images and the purpose of this talk as well today is uh",
    "start": "485840",
    "end": "493360"
  },
  {
    "text": "using spify for or issuing spify identities with C",
    "start": "493360",
    "end": "498800"
  },
  {
    "text": "manager and that that's where the C manager CSI driver spify if comes in",
    "start": "498800",
    "end": "505840"
  },
  {
    "text": "yeah uh it runs in uh so the way that CSI driver's P work and kind of like how",
    "start": "505840",
    "end": "511560"
  },
  {
    "text": "every CSI driver works first and foremost it uses the temp temp FS file",
    "start": "511560",
    "end": "516680"
  },
  {
    "text": "system on each note and with that like the private key material of the certificate that get generated never",
    "start": "516680",
    "end": "522839"
  },
  {
    "text": "leaves that note it's like in memory and it's only there during the life cycle of your kubernetes spt and and kubernetes",
    "start": "522839",
    "end": "529839"
  },
  {
    "text": "workload so from the moment that kubernetes spt is gone that key material is also gone because it was in memory",
    "start": "529839",
    "end": "535320"
  },
  {
    "text": "and it's never gone uh it uses the CSI token feature request EST uh CSI token",
    "start": "535320",
    "end": "540560"
  },
  {
    "text": "request feature of uh the CSI driver and uh what this allows you is to discover",
    "start": "540560",
    "end": "546079"
  },
  {
    "text": "the pot identity and it's going to then form the spify identity based on the",
    "start": "546079",
    "end": "551600"
  },
  {
    "text": "discovery of that b identity and embedding that in the x509 certificate signing request and a CSI token request",
    "start": "551600",
    "end": "558040"
  },
  {
    "text": "is also to impersonate the serice account so that like uh you cannot do privilege escalation and uh it has extra",
    "start": "558040",
    "end": "565079"
  },
  {
    "text": "security boundaries and this is especially relevant for CSI drivers like the sp1 but also like for example when",
    "start": "565079",
    "end": "571880"
  },
  {
    "text": "you use this for the CSI Secret store drivers for TCP at o like it uses the",
    "start": "571880",
    "end": "577000"
  },
  {
    "text": "same feature because that's extra security on it and then the start manag CSI driver P",
    "start": "577000",
    "end": "584079"
  },
  {
    "text": "comes with a second component which is the approver and uh this does some extra",
    "start": "584079",
    "end": "589560"
  },
  {
    "text": "checks besides validating the spify identity it's going to check if the accept acceptable key usages are being",
    "start": "589560",
    "end": "596040"
  },
  {
    "text": "set which is key encipherment uh this is signature client off and server off uh a",
    "start": "596040",
    "end": "603320"
  },
  {
    "text": "requested duration which matches the enforced duration so uh by default the spify identities are only going to be",
    "start": "603320",
    "end": "609880"
  },
  {
    "text": "one one hour old and it's automatically going to renew those uh that no sense or other identify",
    "start": "609880",
    "end": "617040"
  },
  {
    "text": "attributes you can only set a single uren and a uren needs to contain a spify",
    "start": "617040",
    "end": "623560"
  },
  {
    "text": "identity of the service account which created a Certificate request and you also have P ID trust",
    "start": "623560",
    "end": "630160"
  },
  {
    "text": "domain matching the one that was configured at startup so like at startup and you will see that later in the demo",
    "start": "630160",
    "end": "635320"
  },
  {
    "text": "we give a trust domain this is the CSI py driver like it's going to match that with uh uh and and then approve it and",
    "start": "635320",
    "end": "642639"
  },
  {
    "text": "then only then the certificate will get issued by our uh CA and now I'm going to take a hand off",
    "start": "642639",
    "end": "649519"
  },
  {
    "text": "to Ori who going to talk a bit about authoriz thank you um so I mentioned",
    "start": "649519",
    "end": "655279"
  },
  {
    "text": "earlier that otherized does declarative IM am uh for kubernetes workloads and",
    "start": "655279",
    "end": "660760"
  },
  {
    "text": "we're here to talk about how to do cross Cloud AWS IM access uh but before we",
    "start": "660760",
    "end": "665800"
  },
  {
    "text": "dive into that I'm going to do a quick walk through of the different aoriz components and roles in this so uh what",
    "start": "665800",
    "end": "673720"
  },
  {
    "text": "is aoriz aoriz achieves uh three things with its open source components the first one is credential provisioning",
    "start": "673720",
    "end": "680160"
  },
  {
    "text": "automation so to gain access workloads need to be identified and authenticated",
    "start": "680160",
    "end": "685440"
  },
  {
    "text": "on AWS this happens for an AWS role on kubernetes Network policies for labors",
    "start": "685440",
    "end": "690959"
  },
  {
    "text": "uh with databases for usernames and certificates and all of these different resources need life cycle",
    "start": "690959",
    "end": "697399"
  },
  {
    "text": "management which the authorized credentials operator handles um an open",
    "start": "697399",
    "end": "702880"
  },
  {
    "text": "source project you just you just label a pod and otherise will take care of keeping all the resources and",
    "start": "702880",
    "end": "708040"
  },
  {
    "text": "credentials necessary for authentication in sync um and then you have IM policy",
    "start": "708040",
    "end": "714519"
  },
  {
    "text": "automation um that means the creation and life cycle management of IM policy policies like those on AWS Microsoft",
    "start": "714519",
    "end": "721079"
  },
  {
    "text": "Azure and Google Cloud but also the kubernetes network policies themselves EO policies and even access to",
    "start": "721079",
    "end": "728320"
  },
  {
    "text": "databases this happens in an open source project for mod is called the intense operator a kubernetes operator that you",
    "start": "728320",
    "end": "735560"
  },
  {
    "text": "Deploy on your cluster and finally we have mapping actual access um so knowing",
    "start": "735560",
    "end": "741199"
  },
  {
    "text": "that you have the right policies in place for intentional access to succeed at deploy time can be difficult uh when",
    "start": "741199",
    "end": "747880"
  },
  {
    "text": "you have complicated per commissioning systems such as AWS IM or network policies where the existence of one",
    "start": "747880",
    "end": "754240"
  },
  {
    "text": "policy can affect how another policy behaves the aoriz network mapper AER",
    "start": "754240",
    "end": "760440"
  },
  {
    "text": "open source project uses existing traffic in your cluster to autogenerate the required declarations for access to",
    "start": "760440",
    "end": "766199"
  },
  {
    "text": "succeed allowing you to compare the declared access with the actual traffic",
    "start": "766199",
    "end": "772040"
  },
  {
    "text": "so let's see how we actually take all of that and put that uh and how that works",
    "start": "772040",
    "end": "778000"
  },
  {
    "text": "in in this specific case so um in order to achieve access to AWS",
    "start": "778000",
    "end": "784399"
  },
  {
    "text": "IM uh we're going to label a pod to tell the credentials operator that we wanted",
    "start": "784399",
    "end": "790040"
  },
  {
    "text": "to create an AWS role the credentials operator will then calculate what should be the pods spify identity um and create",
    "start": "790040",
    "end": "798399"
  },
  {
    "text": "an AWS IM role and IM roles anywere profile and then add a CSI volume to the",
    "start": "798399",
    "end": "805240"
  },
  {
    "text": "Pod referencing the pod's spey identity the profile and r um the uh CT manager CSI driver will",
    "start": "805240",
    "end": "813160"
  },
  {
    "text": "then pick that up and create appropriate x509 certificate and uh create the",
    "start": "813160",
    "end": "819560"
  },
  {
    "text": "temporary credentials that Matias mentioned earlier um which will be able to find",
    "start": "819560",
    "end": "824880"
  },
  {
    "text": "all of that inside the CSI volume so now we've got a pod and it has",
    "start": "824880",
    "end": "830880"
  },
  {
    "text": "a role and it has a profile and credentials and it's able to authenticate the next step is we need to",
    "start": "830880",
    "end": "837240"
  },
  {
    "text": "apply client intents client intents uh is is an authorized custom resource that",
    "start": "837240",
    "end": "842800"
  },
  {
    "text": "you apply to your cluster where each client workload declares uh which access it needs so once you apply it to your",
    "start": "842800",
    "end": "850399"
  },
  {
    "text": "cluster in the same name space as the Pod the resource tells the intents operator What access our pod needs on",
    "start": "850399",
    "end": "856440"
  },
  {
    "text": "AWS then the intents operator uses the client intents to create a matching AWS",
    "start": "856440",
    "end": "861519"
  },
  {
    "text": "IM policy and Associates it with the IM role the credentials operator created in",
    "start": "861519",
    "end": "866560"
  },
  {
    "text": "the previous step and then then once we did both those steps we have cross Cloud",
    "start": "866560",
    "end": "872720"
  },
  {
    "text": "access so I'll hand it back over to Matias for us to see a cool demo of all",
    "start": "872720",
    "end": "878199"
  },
  {
    "text": "of this in action cool thanks uh so for the purpose of this demo uh as like we",
    "start": "878199",
    "end": "884680"
  },
  {
    "text": "already know we're going to connect TOS I have uh set it up a cuberes",
    "start": "884680",
    "end": "889880"
  },
  {
    "text": "cluster in uh Google Cloud you can see this is a g ke cluster uh it runs a",
    "start": "889880",
    "end": "895600"
  },
  {
    "text": "version 129 of kubernetes uh and and to show why I'm not cheating uh I actually have opened",
    "start": "895600",
    "end": "901800"
  },
  {
    "text": "this up it's this cluster that you can see so there is nothing in AWS running",
    "start": "901800",
    "end": "907399"
  },
  {
    "text": "so we are going from Google Cloud to uh uh to AWS and and the first thing we",
    "start": "907399",
    "end": "913839"
  },
  {
    "text": "need to start with is we need to uh deploy C manager and uh this is what I'm going to do so this is a simple Helm",
    "start": "913839",
    "end": "921279"
  },
  {
    "text": "install uh that we're going to do of start manager and we are going to add one extra thing besides the normal",
    "start": "921279",
    "end": "927880"
  },
  {
    "text": "install of the and that is that we're going to disable the default certificate requests",
    "start": "927880",
    "end": "933120"
  },
  {
    "text": "approver of uh the C manager install so when you do a normal install of C manager by default all certificate",
    "start": "933120",
    "end": "940000"
  },
  {
    "text": "requests are getting approved automatically by C manager which is really great Behavior the thing is that",
    "start": "940000",
    "end": "945880"
  },
  {
    "text": "our CSI spy driver is going to do its own approval so we want we don't want to",
    "start": "945880",
    "end": "951079"
  },
  {
    "text": "have like two conflicting things approving Certificate request so we are disabling uh the C manager one uh C",
    "start": "951079",
    "end": "957480"
  },
  {
    "text": "manager also has some external Certificate request approval for if you have like for example a combination of multiple issuers later down the line uh",
    "start": "957480",
    "end": "965160"
  },
  {
    "text": "that you can use them together so that like for example the CSI driver only approves the CSI driver issuers and then",
    "start": "965160",
    "end": "971680"
  },
  {
    "text": "you might have like another Certificate request approver for for example like your Ingress uh certificates which might",
    "start": "971680",
    "end": "977079"
  },
  {
    "text": "come from another issuer uh the second part that we're going to do is we are going to deploy uh an issuer and we're",
    "start": "977079",
    "end": "984279"
  },
  {
    "text": "going to get a CA kind ofert so uh in this case we are going to use a self",
    "start": "984279",
    "end": "990319"
  },
  {
    "text": "sign issuer this means that it will self sign its Earth and and this is especially great like if you for demo",
    "start": "990319",
    "end": "996800"
  },
  {
    "text": "purposes uh if you want to have a CA you can see like we're going to create this CA here uh in this speet seta through um",
    "start": "996800",
    "end": "1006079"
  },
  {
    "text": "it's quite long lift uh normally it would be short lift and we can also see uh that we have set the common name to",
    "start": "1006079",
    "end": "1012519"
  },
  {
    "text": "spiffy doar manager .io which is also going to be our trust domain and we're going to get this signed by by the self",
    "start": "1012519",
    "end": "1019040"
  },
  {
    "text": "signed one and then later down the line we're going to create another cluster issu that will contain uh the secret of",
    "start": "1019040",
    "end": "1026038"
  },
  {
    "text": "that uh CA uh you can see this match with like the the secret name of the certificate that we're going to request",
    "start": "1026039",
    "end": "1032319"
  },
  {
    "text": "and uh that's then what we're going to use to issue uh spify identities later down the line so I'm now going to apply",
    "start": "1032319",
    "end": "1040880"
  },
  {
    "text": "this and uh because I have disabled the automatic approv of uh certificates I",
    "start": "1040880",
    "end": "1047640"
  },
  {
    "text": "now for for only this kind of CA I need to manually approve them uh luckily with",
    "start": "1047640",
    "end": "1052919"
  },
  {
    "text": "the uh cmct tool which is theer manager CTL tool I can approve this manually and",
    "start": "1052919",
    "end": "1059080"
  },
  {
    "text": "uh I'm going to do this now and what we're going to see now is",
    "start": "1059080",
    "end": "1064320"
  },
  {
    "text": "uh certificates all name spaces uh we have",
    "start": "1064320",
    "end": "1069440"
  },
  {
    "text": "our certificate ready and it's all up and running woo so that's the first part",
    "start": "1069440",
    "end": "1074640"
  },
  {
    "text": "on we have SE manag running we have a CA in our cluster now we can set up uh the CSI P driver and for this I have",
    "start": "1074640",
    "end": "1082520"
  },
  {
    "text": "prepared a small yaml file which will be our values of yam file that we have give to helm uh you can see our trust domain",
    "start": "1082520",
    "end": "1089960"
  },
  {
    "text": "is being set here we also uh refer to that issue that we have created earlier",
    "start": "1089960",
    "end": "1095039"
  },
  {
    "text": "and also for our approver bit we also need to um reference the same uh issue over there I also need to make a small",
    "start": "1095039",
    "end": "1101960"
  },
  {
    "text": "change in uh the images that we're using uh because like currently Theos features are not part of the Upstream uh manag a",
    "start": "1101960",
    "end": "1108880"
  },
  {
    "text": "CSI py store driver I need to uh reference this currently to uh a second",
    "start": "1108880",
    "end": "1113919"
  },
  {
    "text": "one I'm currently working on trying to see how we can get this into Upstream as well uh but like what this will do is uh",
    "start": "1113919",
    "end": "1121600"
  },
  {
    "text": "when um a pot comes up with the CSI driver py one it will automatically",
    "start": "1121600",
    "end": "1128200"
  },
  {
    "text": "exchange that x509 certificate that it gets just in time for Access tokens uh",
    "start": "1128200",
    "end": "1133919"
  },
  {
    "text": "that then can be used to authenticate TOS so that's the main difference it has like that creates session that I was",
    "start": "1133919",
    "end": "1139360"
  },
  {
    "text": "talking about earlier uh inside the CSI spy driver so you don't need any extra helpers like from the moment your pot is",
    "start": "1139360",
    "end": "1145799"
  },
  {
    "text": "there the credentials for a authentication are going to be there and they will also automatically be",
    "start": "1145799",
    "end": "1151240"
  },
  {
    "text": "refreshed by the CSI spy Spy driver which is really great so I'm going to",
    "start": "1151240",
    "end": "1160640"
  },
  {
    "text": "uh is it yes this one need to find a command uh so I'm going to do Helm",
    "start": "1160640",
    "end": "1167520"
  },
  {
    "text": "upgrade and do the spify uh driver install uh this is pulling it and what",
    "start": "1167520",
    "end": "1173000"
  },
  {
    "text": "we're going to see is that our uh spiffy driver is going to come up so we have",
    "start": "1173000",
    "end": "1178919"
  },
  {
    "text": "the approver one so that's going to be the one that's going to approve the Certificate request later down the line",
    "start": "1178919",
    "end": "1184039"
  },
  {
    "text": "and then you can see like we have three pots with the CSI driers piy this is because my cluster exists out of three",
    "start": "1184039",
    "end": "1189360"
  },
  {
    "text": "nodes and we need to have like one pot per node to be able to work as a demon set as I said like the CSI driver",
    "start": "1189360",
    "end": "1195720"
  },
  {
    "text": "handles everything in temp as and in memory so so that's why we need to have like that them set up and",
    "start": "1195720",
    "end": "1201760"
  },
  {
    "text": "running and then we're going to do the bit sorry yep so um we're about to deploy",
    "start": "1201760",
    "end": "1208880"
  },
  {
    "text": "aoriz and uh before we do that we need to do some setup on AWS so that aoriz",
    "start": "1208880",
    "end": "1214080"
  },
  {
    "text": "can go and do all the things that I described earlier create IM roles IM roles anywhere anywhere profiles um and",
    "start": "1214080",
    "end": "1222320"
  },
  {
    "text": "policies um another thing that the terraform uh template will do is it's",
    "start": "1222320",
    "end": "1227400"
  },
  {
    "text": "going to retrieve the public key of the the self signed CA uh we created before",
    "start": "1227400",
    "end": "1233000"
  },
  {
    "text": "and Define it as a trust anchor for IM roles anywhere as well as configure the IM",
    "start": "1233000",
    "end": "1238640"
  },
  {
    "text": "policies and roles for the authorized credentials and intents operator themselves which will be running on our",
    "start": "1238640",
    "end": "1244840"
  },
  {
    "text": "Google Cloud cluster um so go ahead and and deploy",
    "start": "1244840",
    "end": "1251200"
  },
  {
    "text": "it yeah and it's it's deployed and what we are going to be able to see is when I",
    "start": "1251200",
    "end": "1256640"
  },
  {
    "text": "do a refresh here uh we can see this is the authorized SE manager py so the thrust Anor is now in I am anywhere uh",
    "start": "1256640",
    "end": "1264159"
  },
  {
    "text": "we also have uh two profiles in here uh set it up uh and this references the",
    "start": "1264159",
    "end": "1270640"
  },
  {
    "text": "authoriz intents operator Ro that's then like has the IM in",
    "start": "1270640",
    "end": "1276480"
  },
  {
    "text": "there and uh it also has a trust relationship in there maybe you can talk a bit more about that",
    "start": "1276480",
    "end": "1283120"
  },
  {
    "text": "or yep so the the trust relationship we see here is actually as you can see it",
    "start": "1283120",
    "end": "1288720"
  },
  {
    "text": "has the spey uh URI for the intense operator so you can see it's the thrust",
    "start": "1288720",
    "end": "1294640"
  },
  {
    "text": "domain we set up earlier in the namespace authorized system which is where authoriz is going to be deployed on our Google Cloud cluster then the",
    "start": "1294640",
    "end": "1301559"
  },
  {
    "text": "service account the intense operator controller manager and below that in the AWS Source Arn you can see the uh Arn",
    "start": "1301559",
    "end": "1309159"
  },
  {
    "text": "for the um anywh the RS anywhere yeah and this",
    "start": "1309159",
    "end": "1316440"
  },
  {
    "text": "is going to enable the intense operator and the credentials operator to set up things for the rest of the pods on the",
    "start": "1316440",
    "end": "1323520"
  },
  {
    "text": "clust okay so now that we have all of that setup we're ready to go ahead and deploy aoriz and tell it um what are the",
    "start": "1323520",
    "end": "1331400"
  },
  {
    "text": "what are the r layer ends the profile layer ends and all of the different details uh that we need for this to work",
    "start": "1331400",
    "end": "1337480"
  },
  {
    "text": "so uh you need to pass some Flags here we seem to be in the WR directory",
    "start": "1337480",
    "end": "1344120"
  },
  {
    "text": "but while Matas is cing I'll tell you a bit about the flags so we need to turn on AWS we need to tell it which AWS",
    "start": "1344120",
    "end": "1352400"
  },
  {
    "text": "region to default to when it's creating roles and policies uh since we're not on AWS it can't autod detect",
    "start": "1352400",
    "end": "1359240"
  },
  {
    "text": "that then we need to give it the RN for the intents operator credentials operator and tell it that we're in rols",
    "start": "1359240",
    "end": "1366000"
  },
  {
    "text": "anywhere mode what the trust domain is what the trust anchor Arn is um and the",
    "start": "1366000",
    "end": "1371760"
  },
  {
    "text": "trust profile for both the intense operator and credentials operator which we all just created with terone",
    "start": "1371760",
    "end": "1379960"
  },
  {
    "text": "so next step is we're going to see the actual demo we've completed the setup um",
    "start": "1380640",
    "end": "1386120"
  },
  {
    "text": "and now we uh we are going to see a demo where we have a client and server who are communicating uh locally within that",
    "start": "1386120",
    "end": "1393279"
  },
  {
    "text": "cluster and the client is sending requests uh to a server and that server is trying to",
    "start": "1393279",
    "end": "1400919"
  },
  {
    "text": "submit files to S3 so before we uh we deploy the client and server uh maybe",
    "start": "1400919",
    "end": "1407159"
  },
  {
    "text": "let's look at S3 bucket and see that there are no files in it because it's a it's a magic trick before you do the",
    "start": "1407159",
    "end": "1412919"
  },
  {
    "text": "magic trick you got to show that the audience you know there's nothing in here it's completely empty uh and and",
    "start": "1412919",
    "end": "1420679"
  },
  {
    "text": "it's yeah like totally empty so that that's that's really great so like now we can start deploying it yep and now",
    "start": "1420679",
    "end": "1427880"
  },
  {
    "text": "we're gonna deploy the client and server now the client is periodically sending a request to the server asking it to",
    "start": "1427880",
    "end": "1433799"
  },
  {
    "text": "upload a file to S3 um and the server right now is actually going going to be failing to do that because it doesn't",
    "start": "1433799",
    "end": "1439840"
  },
  {
    "text": "have access to the S3 bucket and if we look at the logs for the server and we wait a bit",
    "start": "1439840",
    "end": "1445320"
  },
  {
    "text": "longer then we should start to see errors from",
    "start": "1445320",
    "end": "1450679"
  },
  {
    "text": "AWS we're waiting for the internet to vacuum the container out of dockerhub",
    "start": "1450679",
    "end": "1455760"
  },
  {
    "text": "but it's going to arrive probably the client is still loading elevator",
    "start": "1455760",
    "end": "1464000"
  },
  {
    "text": "music it I I noticed that it could have taken",
    "start": "1466799",
    "end": "1472000"
  },
  {
    "text": "some time authoriz tutorial let's see it's running",
    "start": "1472000",
    "end": "1478919"
  },
  {
    "text": "so theog again it's not a good demo if he doesn't have technical problem ah",
    "start": "1481799",
    "end": "1488080"
  },
  {
    "text": "there it is so so took a bit long longer than usual",
    "start": "1488080",
    "end": "1494399"
  },
  {
    "text": "uh but what you can see here in the in the error is that uh um server is failing to upload a file because it's",
    "start": "1494399",
    "end": "1501159"
  },
  {
    "text": "trying to do an S3 put object operation um and it's not able to retrieve",
    "start": "1501159",
    "end": "1507080"
  },
  {
    "text": "credentials or refresh credentials this is basically the AWS go SDK trying all",
    "start": "1507080",
    "end": "1512919"
  },
  {
    "text": "the different methods in it knows in order to get credentials and they're all failing because it's on Google Cloud how would it work so uh what we now need to",
    "start": "1512919",
    "end": "1521360"
  },
  {
    "text": "do is H we need to label our pod um before that we need to do something else",
    "start": "1521360",
    "end": "1527200"
  },
  {
    "text": "you're right you're right um for uh for the pcsi driver to",
    "start": "1527200",
    "end": "1533640"
  },
  {
    "text": "work we actually need to uh uh for our server give it the ability to create a",
    "start": "1533640",
    "end": "1539720"
  },
  {
    "text": "Certificate request which the pcsi driver will do on its behalf yeah and and and that has to do with the token",
    "start": "1539720",
    "end": "1546159"
  },
  {
    "text": "request functionality I was talking about earlier where the CSI driver is going to impersonate the service account",
    "start": "1546159",
    "end": "1552200"
  },
  {
    "text": "of uh it's subject in this case a server and it's then going to on behalf of the",
    "start": "1552200",
    "end": "1557799"
  },
  {
    "text": "server of of that subject is going to do a Certificate request to get like certificate issued so it needs to be",
    "start": "1557799",
    "end": "1563720"
  },
  {
    "text": "able to create a certificate object in communties of course yep if we don't do",
    "start": "1563720",
    "end": "1569480"
  },
  {
    "text": "this then the Pod will uh fail to start because the CSI driver will not be able to do the",
    "start": "1569480",
    "end": "1575600"
  },
  {
    "text": "certificate so we now have the arbach and U um now we're going to patch our pod uh",
    "start": "1575600",
    "end": "1582919"
  },
  {
    "text": "and we're going to do two things first we're going to do the AWS row label uh",
    "start": "1582919",
    "end": "1588080"
  },
  {
    "text": "for otherise to tell the credentials operator that hi I'm this pod please create an AWS role and all matching",
    "start": "1588080",
    "end": "1594399"
  },
  {
    "text": "resources for me and then the environment variable AWS region to tell the pod which region it should work in",
    "start": "1594399",
    "end": "1601840"
  },
  {
    "text": "um since it can tell because it's running on Google Cloud yeah and and so to show this is all going to work quite",
    "start": "1601840",
    "end": "1607399"
  },
  {
    "text": "needlessly the magic trick we were talking about earlier uh it will automatically create uh an IM IM roll",
    "start": "1607399",
    "end": "1613640"
  },
  {
    "text": "with that starts with OTR you can see currently this is completely empty in uh",
    "start": "1613640",
    "end": "1619000"
  },
  {
    "text": "my ads environment so uh and like when we do the patch of this one it will",
    "start": "1619000",
    "end": "1624799"
  },
  {
    "text": "automatically create this one so what's happening behind the",
    "start": "1624799",
    "end": "1631399"
  },
  {
    "text": "scenes we we're about to see the what happened to the part in a moment but we already can see the role",
    "start": "1631399",
    "end": "1638039"
  },
  {
    "text": "that was created here and it still doesn't have any policies but maybe show the trust",
    "start": "1638039",
    "end": "1644398"
  },
  {
    "text": "relationship yep and you can see that we have the principal from uh from before the",
    "start": "1646520",
    "end": "1652159"
  },
  {
    "text": "service account Nam Space aiz tutorial I am service account is server and the source Arn is the trust anle yeah it was",
    "start": "1652159",
    "end": "1659520"
  },
  {
    "text": "set up automatically just because we labeled that pod yeah and this is just by labeling inside kubernetes it's all",
    "start": "1659520",
    "end": "1666640"
  },
  {
    "text": "like happening through aoriz nothing through terraform or or anything else which is really neat until",
    "start": "1666640",
    "end": "1674039"
  },
  {
    "text": "now and then the last bit I guess yep so uh maybe before that let's look",
    "start": "1674760",
    "end": "1681440"
  },
  {
    "text": "at the pods declaration to see what the credentials operator did so can we uh describe the",
    "start": "1681440",
    "end": "1688440"
  },
  {
    "text": "Pod authorize tutorial I can't I sto being able to",
    "start": "1696760",
    "end": "1703120"
  },
  {
    "text": "type when I'm live screen sharing",
    "start": "1703120",
    "end": "1709440"
  },
  {
    "text": "okay so we see the sorry can you give me just one moment sorry about that of course during",
    "start": "1713840",
    "end": "1721760"
  },
  {
    "text": "the webinar is when uh somebody decides to renovate right outside the office and make tons of",
    "start": "1721760",
    "end": "1728240"
  },
  {
    "text": "noise that happens trying to to make it a bit quieter hopefully I succeeded okay",
    "start": "1728240",
    "end": "1734200"
  },
  {
    "text": "so we we've described the Pod um and what we can see is we have our label",
    "start": "1734200",
    "end": "1740360"
  },
  {
    "text": "and under annotations we can see that the credential operator annotated with the role that it created um and if we",
    "start": "1740360",
    "end": "1748440"
  },
  {
    "text": "scroll down to the volume mounts um we can see that it created a",
    "start": "1748440",
    "end": "1754720"
  },
  {
    "text": "spey volume with a CSI driver and in the volume attributes it placed the roll Arn",
    "start": "1754720",
    "end": "1760159"
  },
  {
    "text": "the trust anchor Arn and a trust profile the role and the trust profile were created especially for this pod or this",
    "start": "1760159",
    "end": "1766519"
  },
  {
    "text": "service account um and if this pods if all pods using the service account or the service",
    "start": "1766519",
    "end": "1772679"
  },
  {
    "text": "account itself is removed then the role will also be removed um so the",
    "start": "1772679",
    "end": "1777840"
  },
  {
    "text": "kubernetes the state of the kubernetes cluster and what's on AWS is kept in sync and everything is provision just in",
    "start": "1777840",
    "end": "1784480"
  },
  {
    "text": "time so now this pod has a role it's authenticated but it can't do anything",
    "start": "1784480",
    "end": "1790279"
  },
  {
    "text": "yet because it doesn't have any policies attached to its role so now we're going to apply the client intents crd resource",
    "start": "1790279",
    "end": "1798440"
  },
  {
    "text": "um what this is saying is that the service called server wants to call this S3 bucket under this pattern and it",
    "start": "1798440",
    "end": "1806320"
  },
  {
    "text": "wants the S3 put object uh action um once we apply this to the",
    "start": "1806320",
    "end": "1812480"
  },
  {
    "text": "cluster the intents operator is going to go and create an IM policy and attach it to the role let's see it in",
    "start": "1812480",
    "end": "1820200"
  },
  {
    "text": "action let's have a look over on AWS to see the magic Breck",
    "start": "1824679",
    "end": "1830559"
  },
  {
    "text": "materialize and we have a policy exactly what we asked for so to sum up what did",
    "start": "1831679",
    "end": "1839039"
  },
  {
    "text": "we have to do in order for all of this to happen label the Pod okay the client",
    "start": "1839039",
    "end": "1844919"
  },
  {
    "text": "intent now let's see if it actually works oh my God for those of you not",
    "start": "1844919",
    "end": "1850480"
  },
  {
    "text": "well versed in Json uh there's a field called status it says 200 which means we",
    "start": "1850480",
    "end": "1855880"
  },
  {
    "text": "are no longer getting errors um so if we check our S3 bucket now the magic trick should be",
    "start": "1855880",
    "end": "1863080"
  },
  {
    "text": "complete yep we have files Matias did you do that while I was away or was it",
    "start": "1864880",
    "end": "1871600"
  },
  {
    "text": "uh is the did the demo work yeah the demo worked the demo worked and like one of the nice things as well is like",
    "start": "1871600",
    "end": "1878200"
  },
  {
    "text": "authorized not only sets up like the the I am policy and uh the role for it it",
    "start": "1878200",
    "end": "1884480"
  },
  {
    "text": "also does like also automatically the IM anywhere policy which is a specific one",
    "start": "1884480",
    "end": "1889840"
  },
  {
    "text": "you can see here it has created this in the background which then refers to the role uh that we were showing earlier so",
    "start": "1889840",
    "end": "1895559"
  },
  {
    "text": "like everything is handled by authorizing the background so you can really declare your uh access to ads",
    "start": "1895559",
    "end": "1904960"
  },
  {
    "text": "resources through your kubernetes cluster and there is actually no need to manually to designate or need to do this",
    "start": "1904960",
    "end": "1912320"
  },
  {
    "text": "through um any other infrastructure as Cod tooling like it's all natively in KU",
    "start": "1912320",
    "end": "1917720"
  },
  {
    "text": "which is really nice and multicloud because this works from cool Cloud",
    "start": "1917720",
    "end": "1922880"
  },
  {
    "text": "natively yep and this really simplifies uh handling the the life cycle of all of",
    "start": "1922880",
    "end": "1928279"
  },
  {
    "text": "these resources because you don't need to think okay if I do a Helm roll back do I also need to roll back my terraform",
    "start": "1928279",
    "end": "1935159"
  },
  {
    "text": "no you just do your Helm roll back the resource goes to the previous state The Operators take care of sying AWS to that",
    "start": "1935159",
    "end": "1942639"
  },
  {
    "text": "and you always know your source of truth is kubernetes cool perfect that was a demo",
    "start": "1942639",
    "end": "1949200"
  },
  {
    "text": "time it all worked from the first try I'm so happy that the demo gots were with us today uh so a bit to for closing",
    "start": "1949200",
    "end": "1956519"
  },
  {
    "text": "of of this webinar uh first of all like both authorized and SE manager are uh two open source projects uh and we're",
    "start": "1956519",
    "end": "1963919"
  },
  {
    "text": "always looking for extra contributors uh towards uh both of these projects so the start measure project can be found on uh",
    "start": "1963919",
    "end": "1970880"
  },
  {
    "text": "its own C manager organization and um the main project is on C manager in there but we have a bunch of other",
    "start": "1970880",
    "end": "1977080"
  },
  {
    "text": "projects as I was talking about for a bunch of different functionality like uh coupling with viso uh having CSI drivers",
    "start": "1977080",
    "end": "1984600"
  },
  {
    "text": "the trust manager is in there so like uh yeah we have a quite great ecosystem already with like lots of contributor",
    "start": "1984600",
    "end": "1990480"
  },
  {
    "text": "from different companies but we always want to expend this and uh yeah like get feedback as well on C manager you can",
    "start": "1990480",
    "end": "1997600"
  },
  {
    "text": "also find us on the kubernetes slack uh we have a c manager channel in there where uh you can ping us uh maybe or you",
    "start": "1997600",
    "end": "2004559"
  },
  {
    "text": "can give a bit information on authoriz and how they can contribute there so otherise isn't yet as popular as SE",
    "start": "2004559",
    "end": "2011919"
  },
  {
    "text": "manager we're not yet deployed on 90% of clusters but we'll be there so uh you're more than welcome to",
    "start": "2011919",
    "end": "2019320"
  },
  {
    "text": "check out any of these repositories um they do most of the time it makes most sense to deploy them all in one go so",
    "start": "2019320",
    "end": "2026159"
  },
  {
    "text": "they come uh in one Helm chart that bundles them together um but they can also be used",
    "start": "2026159",
    "end": "2032559"
  },
  {
    "text": "Standalone um and uh we have a community slack that you wel come to pop on to and",
    "start": "2032559",
    "end": "2038760"
  },
  {
    "text": "ask questions ask like what's the the best uh issue to get started with if you're interested in contributing and",
    "start": "2038760",
    "end": "2045480"
  },
  {
    "text": "yeah come uh be an extroverted introverted platform engineer with me",
    "start": "2045480",
    "end": "2051560"
  },
  {
    "text": "yeah and automate your whole environment through C manager and authorized for",
    "start": "2051560",
    "end": "2057320"
  },
  {
    "text": "Access cool uh to to recap and and to uh like shortly recap what we have seen",
    "start": "2057320",
    "end": "2064040"
  },
  {
    "text": "today first of all C manager can do spify identity and it can me you a spify identity INX 509 certificate uh thanks",
    "start": "2064040",
    "end": "2072000"
  },
  {
    "text": "to the great coupling of the CSI driver spify which currently is not yet in Upstream but like it's open source",
    "start": "2072000",
    "end": "2077638"
  },
  {
    "text": "already uh you can use py identities to work with itos IM roles anywhere and",
    "start": "2077639",
    "end": "2084638"
  },
  {
    "text": "then the authorized bit sorry so once you have that authorized creates a matching AWS IM roles uh",
    "start": "2084639",
    "end": "2093079"
  },
  {
    "text": "profiles and policies and put it all together and work War clads can get access to AWS no matter where they run",
    "start": "2093079",
    "end": "2100280"
  },
  {
    "text": "on another cloud provider your grandmother's laptop um or bar metal as",
    "start": "2100280",
    "end": "2106400"
  },
  {
    "text": "long as the trans cuberes we are covered and it works and that's a really great thing like uh we showed this today from",
    "start": "2106400",
    "end": "2113560"
  },
  {
    "text": "a cool Cloud cluster but this could have been an Azure cluster or like indeed a bare metal cluster that you have set it",
    "start": "2113560",
    "end": "2119720"
  },
  {
    "text": "up yourself with cedan for example uh thank you for attending this",
    "start": "2119720",
    "end": "2124880"
  },
  {
    "text": "webinar uh it was a pleasure uh to present together with you AI um you can",
    "start": "2124880",
    "end": "2130160"
  },
  {
    "text": "we are always looking for new use cases and and new things to do also if you have questions uh feel please feel free",
    "start": "2130160",
    "end": "2137280"
  },
  {
    "text": "to reach out to us uh you can email me directly on the email address you see on the presentation but you can also reach",
    "start": "2137280",
    "end": "2143560"
  },
  {
    "text": "out to me uh on uh Twitter or what we now call x uh with my full name uh or on",
    "start": "2143560",
    "end": "2149480"
  },
  {
    "text": "LinkedIn as well or any other source you can probably find me on uh yeah or maybe",
    "start": "2149480",
    "end": "2155359"
  },
  {
    "text": "some closing thoughts for sure closing arguments it was a pleasure to to be",
    "start": "2155359",
    "end": "2160480"
  },
  {
    "text": "here with you mats it's actually my first webinar ever so it was awesome the demo worked a little bit of renovation",
    "start": "2160480",
    "end": "2167200"
  },
  {
    "text": "on the side but we handled it um and yeah feel free",
    "start": "2167200",
    "end": "2173280"
  },
  {
    "text": "to email me reach out to me on slack uh just ask for a favor I do those",
    "start": "2173280",
    "end": "2179400"
  },
  {
    "text": "too um and yeah try it out let us know what you think um we're really curious",
    "start": "2179400",
    "end": "2185880"
  },
  {
    "text": "to see how people use this yeah definitely uh thanks everyone for attending and uh yeah we're also going",
    "start": "2185880",
    "end": "2192480"
  },
  {
    "text": "to open source uh we're going to open up the instructions to fully replicate this demo by the way this will be on the",
    "start": "2192480",
    "end": "2199560"
  },
  {
    "text": "authorized uh uh kup uh organization where you can uh go check them out and",
    "start": "2199560",
    "end": "2205359"
  },
  {
    "text": "and run it yourself because all of this what we have showed today is fully open source it's use start manager and authorizing the open source component so",
    "start": "2205359",
    "end": "2211880"
  },
  {
    "text": "like you can fully replicate this in your own environment and even start using it",
    "start": "2211880",
    "end": "2217240"
  },
  {
    "text": "yep and it's gonna you you can even pretend you're running the webinar and just go through all the steps if you",
    "start": "2217240",
    "end": "2223119"
  },
  {
    "text": "want the full experience I'm just here to inject you more perfect thanks everyone uh have a",
    "start": "2223119",
    "end": "2230319"
  },
  {
    "text": "nice day for everybody uh listening to this webinar and I hope you learn something thank you very much thanks",
    "start": "2230319",
    "end": "2237760"
  },
  {
    "text": "everyone bye-bye",
    "start": "2237760",
    "end": "2241440"
  },
  {
    "text": "bye",
    "start": "2245400",
    "end": "2248400"
  }
]