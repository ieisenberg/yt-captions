[
  {
    "text": "hello everyone i'm kazush tomat and i work at cyborgs today",
    "start": "160",
    "end": "7520"
  },
  {
    "text": "i'm going to talk about a csi driver for kubernetes",
    "start": "7520",
    "end": "14240"
  },
  {
    "text": "a capacity air dynamic volume provisioning for lvm local storage",
    "start": "14240",
    "end": "22240"
  },
  {
    "text": "and my co-presenter is sato takeuchi and also an engineer at cyborgs",
    "start": "22720",
    "end": "30560"
  },
  {
    "text": "japanese cloud service provider of google play we are now reconstructing our",
    "start": "30560",
    "end": "38280"
  },
  {
    "text": "infrastructure into a kubernetes based cluster on the on-prep smith data center",
    "start": "38280",
    "end": "45920"
  },
  {
    "text": "including today's content about utilizing local storage",
    "start": "45920",
    "end": "53680"
  },
  {
    "text": "here is the agenda and first i'm going to talk about existing",
    "start": "55360",
    "end": "62160"
  },
  {
    "text": "ways to use local storage in kubernetes then i talk about the motivation",
    "start": "62160",
    "end": "70159"
  },
  {
    "text": "and challenges of dynamic provisioning after that i'll introduce our nobel",
    "start": "70159",
    "end": "77759"
  },
  {
    "text": "csi program named toppo lbn and give a demonstration",
    "start": "77759",
    "end": "86960"
  },
  {
    "text": "so why would we use local storage in general purchasing storage in",
    "start": "86960",
    "end": "94479"
  },
  {
    "text": "kubernetes relies on remote storage systems such as",
    "start": "94479",
    "end": "99520"
  },
  {
    "text": "safe it also includes storage services",
    "start": "99520",
    "end": "104640"
  },
  {
    "text": "provided by cloud service providers such as amazon ebs",
    "start": "104640",
    "end": "111759"
  },
  {
    "text": "however the benefits of using local storage still exist",
    "start": "111759",
    "end": "118240"
  },
  {
    "text": "which io performance and reasonable cost of course",
    "start": "118240",
    "end": "125280"
  },
  {
    "text": "using local storage in kubernetes has some disadvantages such as",
    "start": "125280",
    "end": "131760"
  },
  {
    "text": "topology limitation and redundancy problems but it is a reasonable choice",
    "start": "131760",
    "end": "139200"
  },
  {
    "text": "for io bound applications so if you have i o bound workloads such",
    "start": "139200",
    "end": "146640"
  },
  {
    "text": "as mysql aerostickset look and so on also have high performance work of",
    "start": "146640",
    "end": "153519"
  },
  {
    "text": "storage and maybe our presentation might be helpful content",
    "start": "153519",
    "end": "161120"
  },
  {
    "text": "first i'll show existing ways to use local storage in kubernetes",
    "start": "162720",
    "end": "169519"
  },
  {
    "text": "the most popular and simple way is host bus maybe which you",
    "start": "169519",
    "end": "176319"
  },
  {
    "text": "which you may already know",
    "start": "176319",
    "end": "179599"
  },
  {
    "text": "in host bus the kubernetes mount the host file system path to a path in",
    "start": "181360",
    "end": "188239"
  },
  {
    "text": "the pod however host path has was not designed to be used for stateful",
    "start": "188239",
    "end": "196840"
  },
  {
    "text": "applications they do not retain essential attributes such as capacity",
    "start": "196840",
    "end": "202959"
  },
  {
    "text": "and bound status and so on of course it also does not",
    "start": "202959",
    "end": "210000"
  },
  {
    "text": "does not support dynamic provisioning it's mainly used for applications that",
    "start": "210000",
    "end": "217840"
  },
  {
    "text": "have control privileges for the host os and or collect information about the",
    "start": "217840",
    "end": "224959"
  },
  {
    "text": "host anyway hostess should not be used",
    "start": "224959",
    "end": "230080"
  },
  {
    "text": "for maintenance application state or data",
    "start": "230080",
    "end": "235599"
  },
  {
    "text": "a practical method was presented at kubernetes 1.14",
    "start": "236720",
    "end": "242000"
  },
  {
    "text": "and that is local persistent volume this feature can have topology area pod",
    "start": "242000",
    "end": "249760"
  },
  {
    "text": "scheduling with participant once possible stand bones are created",
    "start": "249760",
    "end": "257199"
  },
  {
    "text": "manually in other words users must prepare partisan buoyance beforehand of course we can",
    "start": "257199",
    "end": "265600"
  },
  {
    "text": "utilize some automation tools however that is outside of the persistent",
    "start": "265600",
    "end": "273280"
  },
  {
    "text": "volume life cycle managed by kubernetes therefore it cannot be dynamic",
    "start": "273280",
    "end": "280840"
  },
  {
    "text": "provisioning without dynamic provisioning supported",
    "start": "280840",
    "end": "286560"
  },
  {
    "text": "by kubernetes a crossed admin is likely to meet a",
    "start": "286560",
    "end": "291680"
  },
  {
    "text": "challenge like this one developer says hey i want to run",
    "start": "291680",
    "end": "297759"
  },
  {
    "text": "an elastic search instance so please give me persistent volume but i cannot say how",
    "start": "297759",
    "end": "305039"
  },
  {
    "text": "it will consume disk space so 100 gigabytes for now please",
    "start": "305039",
    "end": "312479"
  },
  {
    "text": "another developer says please give me give me a persistent volume for my",
    "start": "312560",
    "end": "318960"
  },
  {
    "text": "circle but service growth rate cannot be predicted but lovely 500 gigabyte",
    "start": "318960",
    "end": "328400"
  },
  {
    "text": "another one says and the service has gone over so i release the volume",
    "start": "328400",
    "end": "336880"
  },
  {
    "text": "and in kubernetes and in the pot life cycle is very rapid",
    "start": "336880",
    "end": "343919"
  },
  {
    "text": "so life cycle of partisan volume is also quick therefore we can easily",
    "start": "343919",
    "end": "351360"
  },
  {
    "text": "imagine that the operation and management of persistent volumes must be collapsed in",
    "start": "351360",
    "end": "358560"
  },
  {
    "text": "terms of scalability so",
    "start": "358560",
    "end": "364080"
  },
  {
    "text": "we need automated management",
    "start": "364080",
    "end": "369280"
  },
  {
    "text": "in other words we need a dynamic provision for local storage",
    "start": "369280",
    "end": "377680"
  },
  {
    "text": "dynamic provisioning is defined in the kubernetes document and that is",
    "start": "377680",
    "end": "385039"
  },
  {
    "text": "the dynamic provisioning feature eliminates the need for cluster administrators",
    "start": "385039",
    "end": "391520"
  },
  {
    "text": "to provision storage instead it automatically automatically",
    "start": "391520",
    "end": "398000"
  },
  {
    "text": "provisions storage when it is requested by users it",
    "start": "398000",
    "end": "405039"
  },
  {
    "text": "provides authority scalability and accuracy for the operation and",
    "start": "405039",
    "end": "410880"
  },
  {
    "text": "management of storage",
    "start": "410880",
    "end": "414639"
  },
  {
    "text": "essential features are mechanisms for dynamic volume allocation and",
    "start": "416560",
    "end": "424080"
  },
  {
    "text": "resizing because we cannot determine physical volume sizes for",
    "start": "424080",
    "end": "430080"
  },
  {
    "text": "services beforehand to realize dynamic allocation we have",
    "start": "430080",
    "end": "437440"
  },
  {
    "text": "to determine where all required persistent environments can be located",
    "start": "437440",
    "end": "443840"
  },
  {
    "text": "and considering the future expansion of boring a node that has more free disk space",
    "start": "443840",
    "end": "451440"
  },
  {
    "text": "is preferable to others both of them require capacity available",
    "start": "451440",
    "end": "457919"
  },
  {
    "text": "scheduling so capacity awareness is key to dynamic provisioning",
    "start": "457919",
    "end": "466080"
  },
  {
    "text": "to achieve capacity aware volume scissoring we need to follow two steps",
    "start": "468479",
    "end": "476960"
  },
  {
    "text": "the first cons the first consists of gathering capacity metrics from nose",
    "start": "476960",
    "end": "484000"
  },
  {
    "text": "then the scheduler filters and scores the nose using capacity metrics and",
    "start": "484000",
    "end": "490720"
  },
  {
    "text": "the required volume size the process is depicted on this right",
    "start": "490720",
    "end": "498479"
  },
  {
    "text": "and first volume provisioner gathers capacity metrics",
    "start": "498479",
    "end": "504479"
  },
  {
    "text": "when spot controller requests port scheduling the controller should pass the requested",
    "start": "504479",
    "end": "512159"
  },
  {
    "text": "bearing size to the scheduler to determine where to locate the port",
    "start": "512159",
    "end": "517839"
  },
  {
    "text": "the scheduler filters and scores all nodes based on the capacity metrics and",
    "start": "517839",
    "end": "525120"
  },
  {
    "text": "the requested bond size after that partitioned bond controller will request",
    "start": "525120",
    "end": "533200"
  },
  {
    "text": "a buoyant from the provisioner",
    "start": "533200",
    "end": "537279"
  },
  {
    "text": "however the current kubernetes does not support capacity awareness",
    "start": "538880",
    "end": "546160"
  },
  {
    "text": "although the clip which proposed how to expose storage capacity to",
    "start": "546160",
    "end": "552480"
  },
  {
    "text": "kubernetes uh it was pro posted and merged",
    "start": "552480",
    "end": "557680"
  },
  {
    "text": "but important scattering with dual capacity is ongoing so",
    "start": "557680",
    "end": "565279"
  },
  {
    "text": "ahead of it we've implemented a capacity available",
    "start": "565279",
    "end": "571760"
  },
  {
    "text": "in provisioner for local storage namely toppo lvm",
    "start": "571760",
    "end": "578000"
  },
  {
    "text": "simply started we made it it as a csr program",
    "start": "578000",
    "end": "585760"
  },
  {
    "text": "toppo lvm of course has a capacity aware dynamic provisioning feature and it also",
    "start": "585760",
    "end": "593680"
  },
  {
    "text": "supports low block volume as purchasing volume which improves the performance of",
    "start": "593680",
    "end": "600320"
  },
  {
    "text": "applications they can use block devices directory",
    "start": "600320",
    "end": "606399"
  },
  {
    "text": "online resizing is also supported",
    "start": "606399",
    "end": "611680"
  },
  {
    "text": "let me show you the details of topple lvm here is a diagram of top for avm",
    "start": "612880",
    "end": "620560"
  },
  {
    "text": "in this figure the blue square box is a topo lvn components and the round cut",
    "start": "620560",
    "end": "628160"
  },
  {
    "text": "boxes indicates api resources skate and api means cube etc and",
    "start": "628160",
    "end": "635600"
  },
  {
    "text": "kube apa server respectively the external provisioner is the sidecar",
    "start": "635600",
    "end": "644240"
  },
  {
    "text": "container and that water is purchased and boring claims and calls the shea site drivers",
    "start": "644240",
    "end": "652399"
  },
  {
    "text": "apa to create and bind persistent volumes",
    "start": "652399",
    "end": "658399"
  },
  {
    "text": "let's check out the dynamic provisioning sequence by top rvm",
    "start": "658880",
    "end": "665279"
  },
  {
    "text": "first the top rvm node landing at each server each server",
    "start": "665279",
    "end": "672160"
  },
  {
    "text": "and it annotates its own server's storage capacity to the corresponding",
    "start": "672160",
    "end": "679120"
  },
  {
    "text": "node resources when a pawn with pbc is",
    "start": "679120",
    "end": "686839"
  },
  {
    "text": "created the curb etc will receive a scheduling request then pass it",
    "start": "686839",
    "end": "694480"
  },
  {
    "text": "to the topple airbnc and the topple rvm scheduler filters",
    "start": "694480",
    "end": "700640"
  },
  {
    "text": "and scores or knows based on the annotation of capacity",
    "start": "700640",
    "end": "706880"
  },
  {
    "text": "metrics once the location of",
    "start": "706880",
    "end": "712959"
  },
  {
    "text": "the port is determined the external provisioning calls the topple",
    "start": "712959",
    "end": "719279"
  },
  {
    "text": "avm controllers api with the topology key that is",
    "start": "719279",
    "end": "725200"
  },
  {
    "text": "a node name the topo avm controller creates a custom",
    "start": "725200",
    "end": "732959"
  },
  {
    "text": "resources resource named top logical volume with the node name",
    "start": "732959",
    "end": "739920"
  },
  {
    "text": "and the requested volume size each topo avm nodes each top of every",
    "start": "739920",
    "end": "748320"
  },
  {
    "text": "node watches this custom resource and if is for its own node and",
    "start": "748320",
    "end": "756959"
  },
  {
    "text": "the top of lvm node will create a value and update the status of the custom",
    "start": "756959",
    "end": "765040"
  },
  {
    "text": "resource the topolvm controller which",
    "start": "765040",
    "end": "771440"
  },
  {
    "text": "is watching the status of custom resource",
    "start": "771440",
    "end": "776639"
  },
  {
    "text": "when detecting this update the tuple vm controller returns the",
    "start": "776639",
    "end": "784160"
  },
  {
    "text": "volume information as the return value of the api call",
    "start": "784160",
    "end": "790560"
  },
  {
    "text": "therefore the external provisioner can create persistent volume with the volume",
    "start": "791600",
    "end": "798839"
  },
  {
    "text": "information okay i'll give an additional explanation",
    "start": "798839",
    "end": "806160"
  },
  {
    "text": "for the capacity area of volumes measuring as i mentioned and briefly each of",
    "start": "806160",
    "end": "813519"
  },
  {
    "text": "every node just as capacity of its own nodes no storage",
    "start": "813519",
    "end": "819839"
  },
  {
    "text": "and this metric is written to the node annotation and this way with a specific",
    "start": "819839",
    "end": "828320"
  },
  {
    "text": "annotation key topo everyone cyborgs.com capacity",
    "start": "828320",
    "end": "834879"
  },
  {
    "text": "and toppo avm has the admission mutating hook it's",
    "start": "836240",
    "end": "843600"
  },
  {
    "text": "for modifying port spec according to its requesting boring size like this",
    "start": "843600",
    "end": "850800"
  },
  {
    "text": "it ensures and that the topper lvm scheduler can get the requested bone size via the cuba surgery",
    "start": "850800",
    "end": "861440"
  },
  {
    "text": "the cube scheduler is implemented as an extension of curb scissors",
    "start": "862959",
    "end": "869519"
  },
  {
    "text": "which means the curb scheduler calls the web hook of topple avm serger",
    "start": "869519",
    "end": "876000"
  },
  {
    "text": "with pod manifest according to the previous mentioned information",
    "start": "876000",
    "end": "883360"
  },
  {
    "text": "and the topple even scheduler changes which node must be filtered and",
    "start": "883360",
    "end": "890480"
  },
  {
    "text": "can calculate scores of nodes to determine where to locate the port",
    "start": "890480",
    "end": "898720"
  },
  {
    "text": "the scoring expression is here that is the logarithm to base two",
    "start": "898720",
    "end": "906079"
  },
  {
    "text": "is very simple i'm also going to touch on the",
    "start": "906079",
    "end": "913320"
  },
  {
    "text": "limitations of toppo lvm although you can get some redundancies",
    "start": "913320",
    "end": "920880"
  },
  {
    "text": "using other techniques such as the white one but it does not provide any no",
    "start": "920880",
    "end": "927360"
  },
  {
    "text": "level redundancies because the volume uh just located on the local",
    "start": "927360",
    "end": "934079"
  },
  {
    "text": "disks so the volume is sufficed by topo lvm and should be",
    "start": "934079",
    "end": "941759"
  },
  {
    "text": "used by applications they can be redundant themselves for example dbms",
    "start": "941759",
    "end": "949759"
  },
  {
    "text": "databases and distributed storage systems such as massive and safe",
    "start": "949759",
    "end": "958399"
  },
  {
    "text": "okay next we'll give a demonstration of topo lvm",
    "start": "959279",
    "end": "965600"
  },
  {
    "text": "please subtle okay",
    "start": "965600",
    "end": "972639"
  },
  {
    "text": "okay i'll have some demos of tuple lvm i'll introduce following three features",
    "start": "974720",
    "end": "982959"
  },
  {
    "text": "that kazushito mentioned in this presentation here is the software and hardware",
    "start": "982959",
    "end": "989839"
  },
  {
    "text": "configuration in this demo there are two worker nodes",
    "start": "989839",
    "end": "994880"
  },
  {
    "text": "kind worker and kind of worker too kind worker has one volume group named",
    "start": "994880",
    "end": "1001839"
  },
  {
    "text": "my bg1 that has a 18 gigabyte free space",
    "start": "1001839",
    "end": "1007279"
  },
  {
    "text": "and kind worker 2 also have a 18 gigabyte free space volume group",
    "start": "1007279",
    "end": "1012560"
  },
  {
    "text": "my bg2 both mypg-1 and mybj2 are managed by toppo lvm",
    "start": "1012560",
    "end": "1021519"
  },
  {
    "text": "i'll use three terminals in this presentation",
    "start": "1022160",
    "end": "1027280"
  },
  {
    "text": "the first one is operation terminal to issue cubic control command",
    "start": "1027280",
    "end": "1035120"
  },
  {
    "text": "for example kobe control gate node shows three nodes the first one",
    "start": "1035120",
    "end": "1041360"
  },
  {
    "text": "is control plane and the second one and third one is worker nodes",
    "start": "1041360",
    "end": "1046400"
  },
  {
    "text": "kind worker and kind worker two and the second terminal is connected to",
    "start": "1046400",
    "end": "1052799"
  },
  {
    "text": "kind worker node so we can get the information on myvg1",
    "start": "1052799",
    "end": "1058480"
  },
  {
    "text": "from here mybj1's respace is under 18 gigabytes",
    "start": "1058480",
    "end": "1066000"
  },
  {
    "text": "and the last terminal is connected to kind worker 2 and we can get",
    "start": "1066000",
    "end": "1073520"
  },
  {
    "text": "my budgie tools information its free space is under 18 gigabytes",
    "start": "1073520",
    "end": "1081120"
  },
  {
    "text": "so uh since both mybg-1 and maybe g2 are managed by toppo",
    "start": "1081120",
    "end": "1088240"
  },
  {
    "text": "rbm we can get the free space of micro g1 and mybg2",
    "start": "1088240",
    "end": "1093520"
  },
  {
    "text": "from the cheese nodes node resource for the control gate",
    "start": "1093520",
    "end": "1100880"
  },
  {
    "text": "node kind worker or yaml okay",
    "start": "1100880",
    "end": "1110160"
  },
  {
    "text": "please see this annotation double lbm.cybos.com capacity",
    "start": "1110160",
    "end": "1118400"
  },
  {
    "text": "this annotation means free space of my bg1 so it's about 18 gigabytes",
    "start": "1118400",
    "end": "1127360"
  },
  {
    "text": "okay the next one is google kind worker 2 kind worker 2 also has",
    "start": "1127360",
    "end": "1134880"
  },
  {
    "text": "this annotation and the value is same as the micro g1 it's",
    "start": "1134880",
    "end": "1142480"
  },
  {
    "text": "corresponding to the maybe g2's free space and it's also under 18 gigabytes",
    "start": "1142480",
    "end": "1151200"
  },
  {
    "text": "okay so first demo is about dynamic volume",
    "start": "1151200",
    "end": "1158080"
  },
  {
    "text": "provisioning so let's schedule a port named engine x1",
    "start": "1158080",
    "end": "1164160"
  },
  {
    "text": "this port use uses a one gigabyte volume",
    "start": "1164160",
    "end": "1169600"
  },
  {
    "text": "yes but one okay more persistent volume claim turbo bbc1",
    "start": "1169600",
    "end": "1177760"
  },
  {
    "text": "requests one gigabyte from turbo lvm and the ngx one port",
    "start": "1177760",
    "end": "1184720"
  },
  {
    "text": "consumes tuple pvc one and is mounted in power www.html",
    "start": "1184720",
    "end": "1193120"
  },
  {
    "text": "please note that there is no assistant volume resource there are only positive volume",
    "start": "1193120",
    "end": "1200559"
  },
  {
    "text": "claim and port results and of course cover control get people show",
    "start": "1200559",
    "end": "1208320"
  },
  {
    "text": "nothing there there is no persistent volume in the default name space",
    "start": "1208320",
    "end": "1215679"
  },
  {
    "text": "okay so cubic control apply f one okay right so bright okay",
    "start": "1215679",
    "end": "1223760"
  },
  {
    "text": "so the expected expected result here is that uh processing volume is created",
    "start": "1223760",
    "end": "1230960"
  },
  {
    "text": "dynamically okay so let's confirm the",
    "start": "1230960",
    "end": "1236880"
  },
  {
    "text": "copy control get port okay nginx one is running",
    "start": "1236880",
    "end": "1243120"
  },
  {
    "text": "and uh controller get ppg okay toppo pvc one is created and",
    "start": "1243120",
    "end": "1249919"
  },
  {
    "text": "bound to bbc blah blah blah it's a persistent",
    "start": "1249919",
    "end": "1256320"
  },
  {
    "text": "volume created dynamically by toppo lvm okay",
    "start": "1256320",
    "end": "1262640"
  },
  {
    "text": "past and boiling so we found that the persistent volume is created",
    "start": "1262640",
    "end": "1270640"
  },
  {
    "text": "dynamically so we found a dynamic volume",
    "start": "1270640",
    "end": "1275679"
  },
  {
    "text": "provisioning in turbo lbn worked fine and as a side note we can",
    "start": "1275679",
    "end": "1284000"
  },
  {
    "text": "get this volume is correspond to the logical volume in my bg1",
    "start": "1284000",
    "end": "1291280"
  },
  {
    "text": "so first budget display shows the free space is decreased to",
    "start": "1291280",
    "end": "1301039"
  },
  {
    "text": "change from 18 gigabytes to 70 gigabytes and here we display show",
    "start": "1301039",
    "end": "1308880"
  },
  {
    "text": "okay this volume right this logical volume is corresponding to the position",
    "start": "1308880",
    "end": "1315679"
  },
  {
    "text": "volume on the positive volume claim new passive memory okay so of course",
    "start": "1315679",
    "end": "1322320"
  },
  {
    "text": "the kobe control get know the kind worker its",
    "start": "1322320",
    "end": "1328880"
  },
  {
    "text": "capacity is changed it's it was about 18 gigabytes now",
    "start": "1328880",
    "end": "1336320"
  },
  {
    "text": "it's it's about 17 gigabytes",
    "start": "1336320",
    "end": "1341440"
  },
  {
    "text": "okay so the next uh next demo is about",
    "start": "1341440",
    "end": "1348400"
  },
  {
    "text": "capacity our scheduling as a present preparation let's exhaust",
    "start": "1348400",
    "end": "1355520"
  },
  {
    "text": "a kind worker tools volume group now uh can you wake up to the volume",
    "start": "1355520",
    "end": "1361039"
  },
  {
    "text": "group my budgie 2 has 18 gigabyte free space to exhaust this volume let's schedule a",
    "start": "1361039",
    "end": "1369200"
  },
  {
    "text": "port named nginx 2 to kind worker 2. it uses a 17 gigabytes volume",
    "start": "1369200",
    "end": "1378880"
  },
  {
    "text": "press bottom two okay wbg2 it has",
    "start": "1379440",
    "end": "1385600"
  },
  {
    "text": "17 gigabytes consumed by engine x2 port and",
    "start": "1385600",
    "end": "1392159"
  },
  {
    "text": "this engine x2 port is bound to kind of work too okay let's upright",
    "start": "1392159",
    "end": "1399280"
  },
  {
    "text": "y f part two okay common control get part",
    "start": "1399280",
    "end": "1406720"
  },
  {
    "text": "it's under creating please wait for ry",
    "start": "1406720",
    "end": "1411919"
  },
  {
    "text": "so the uh the top of pbc2 and the corresponding",
    "start": "1413440",
    "end": "1421440"
  },
  {
    "text": "volume is under creating okay engine x2 is now running",
    "start": "1421440",
    "end": "1428400"
  },
  {
    "text": "control get people rpv okay 70 gigabytes",
    "start": "1428400",
    "end": "1435360"
  },
  {
    "text": "so the gate node kind worker",
    "start": "1438480",
    "end": "1445919"
  },
  {
    "text": "2 okay it's the mybg2's capacity",
    "start": "1445919",
    "end": "1453200"
  },
  {
    "text": "is now under 1 gigabytes of course we can find it from a kind",
    "start": "1453200",
    "end": "1459440"
  },
  {
    "text": "worker too okay my g my budget tools free space",
    "start": "1459440",
    "end": "1464720"
  },
  {
    "text": "is under one gigabyte",
    "start": "1464720",
    "end": "1470240"
  },
  {
    "text": "okay so now kind of welcome to the capacity is",
    "start": "1470840",
    "end": "1476880"
  },
  {
    "text": "under one gigabyte so pre right schedule many ports",
    "start": "1476880",
    "end": "1484559"
  },
  {
    "text": "in this case engine x345675 port",
    "start": "1484559",
    "end": "1490880"
  },
  {
    "text": "these ports all these ports use a one gigabyte volume uh please note that the kind worker",
    "start": "1490880",
    "end": "1498960"
  },
  {
    "text": "tools uh mybuji2 is has only",
    "start": "1498960",
    "end": "1504159"
  },
  {
    "text": "has only under uh one gigabyte free space",
    "start": "1504159",
    "end": "1510880"
  },
  {
    "text": "so uh it's it doesn't it doesn't have enough space to create",
    "start": "1510880",
    "end": "1518320"
  },
  {
    "text": "one gigabyte volume",
    "start": "1518320",
    "end": "1521600"
  },
  {
    "text": "sorry there is many parts okay double pbg3",
    "start": "1526840",
    "end": "1533840"
  },
  {
    "text": "is a request one gigabyte and consumed by ngx3 and",
    "start": "1533840",
    "end": "1541360"
  },
  {
    "text": "it's same as four five six seven",
    "start": "1541360",
    "end": "1548320"
  },
  {
    "text": "okay let's apply we control apply many parts okay",
    "start": "1548320",
    "end": "1556159"
  },
  {
    "text": "so the expected result here is all ports are scheduled to kind work",
    "start": "1556159",
    "end": "1562880"
  },
  {
    "text": "okay it's because engineering should uh know that my gp my bg2 doesn't have",
    "start": "1562880",
    "end": "1569520"
  },
  {
    "text": "enough space okay so copy control",
    "start": "1569520",
    "end": "1574960"
  },
  {
    "text": "get both",
    "start": "1574960",
    "end": "1577760"
  },
  {
    "text": "okay it's already running and the engine x3 to 7",
    "start": "1580559",
    "end": "1588080"
  },
  {
    "text": "all all these ports are learning and in learning in kind work",
    "start": "1588080",
    "end": "1595120"
  },
  {
    "text": "it means that these ports are not evenly spread in the",
    "start": "1595120",
    "end": "1601679"
  },
  {
    "text": "spirit of a kind worker and kind worker too it's because toppo lvm no",
    "start": "1601679",
    "end": "1609279"
  },
  {
    "text": "kind worker 2 doesn't have enough space okay so then toppo lvm",
    "start": "1609279",
    "end": "1618159"
  },
  {
    "text": "select a kind worker as a node to be scheduled",
    "start": "1618159",
    "end": "1626240"
  },
  {
    "text": "okay so we confirm all parts as scheduled to",
    "start": "1626240",
    "end": "1633360"
  },
  {
    "text": "kind work without topple oem",
    "start": "1633360",
    "end": "1638960"
  },
  {
    "text": "some ports will be scheduled to schedule to",
    "start": "1638960",
    "end": "1645679"
  },
  {
    "text": "kind of work out too but it failed to start because the",
    "start": "1645679",
    "end": "1652799"
  },
  {
    "text": "low carbohydrate local volume is cannot be created",
    "start": "1652799",
    "end": "1660000"
  },
  {
    "text": "okay so we confirmed that capacity area scheduling in turbo lvm",
    "start": "1660000",
    "end": "1667039"
  },
  {
    "text": "worked fine so the next and the last demo is about",
    "start": "1667039",
    "end": "1674000"
  },
  {
    "text": "online volume resizing so it's very simple just just expand engine",
    "start": "1674000",
    "end": "1681840"
  },
  {
    "text": "x1's volume to 2 gigabytes ngx ones volume is a tuple pvc one",
    "start": "1681840",
    "end": "1690240"
  },
  {
    "text": "top which you want is good control comma controller gate ppc",
    "start": "1690240",
    "end": "1697760"
  },
  {
    "text": "topo pvc one yes it has one gigabyte and",
    "start": "1697840",
    "end": "1705919"
  },
  {
    "text": "the corresponding file system is mounted in engine x1",
    "start": "1706240",
    "end": "1714080"
  },
  {
    "text": "df okay it's about www.html",
    "start": "1714080",
    "end": "1720080"
  },
  {
    "text": "html its size is about one gigabyte okay so",
    "start": "1720080",
    "end": "1728320"
  },
  {
    "text": "to expand uh people she it's very simple edit just edit",
    "start": "1728320",
    "end": "1735360"
  },
  {
    "text": "bbc double phone",
    "start": "1735360",
    "end": "1739840"
  },
  {
    "text": "the current requested volume size is one gigabyte so",
    "start": "1741120",
    "end": "1748399"
  },
  {
    "text": "what should i do is just change this value to two so okay so",
    "start": "1748399",
    "end": "1758000"
  },
  {
    "text": "the expanding uh job is kicked so google control get",
    "start": "1758000",
    "end": "1765120"
  },
  {
    "text": "pvc double bbc one yes not it's not changed yet uh it's",
    "start": "1765120",
    "end": "1773120"
  },
  {
    "text": "under expanding so uh more precise precisely uh the",
    "start": "1773120",
    "end": "1781120"
  },
  {
    "text": "the boring a logical volume corresponding to toppo pbc1 is now under expanding",
    "start": "1781120",
    "end": "1788320"
  },
  {
    "text": "and after that toppo lvm expands the file system",
    "start": "1788320",
    "end": "1795760"
  },
  {
    "text": "inside this biological board so is it done okay",
    "start": "1795760",
    "end": "1802640"
  },
  {
    "text": "it's changed to two gigabytes it's expanded so as a side note uh it's",
    "start": "1802640",
    "end": "1810880"
  },
  {
    "text": "event is get can be get from uh google control describe bbc",
    "start": "1810880",
    "end": "1818559"
  },
  {
    "text": "double phone okay so when i changed",
    "start": "1818559",
    "end": "1826559"
  },
  {
    "text": "i edited the bbc resource this event is kicked external expanded",
    "start": "1826559",
    "end": "1834399"
  },
  {
    "text": "and this means resizing volume and the resize file system",
    "start": "1834399",
    "end": "1844159"
  },
  {
    "text": "started to resize file system and while stem resize successful it's done",
    "start": "1844159",
    "end": "1851919"
  },
  {
    "text": "so let's see the this one is five stem inside",
    "start": "1851919",
    "end": "1858720"
  },
  {
    "text": "inside engine x1 df by www.html",
    "start": "1858720",
    "end": "1865679"
  },
  {
    "text": "it's expanded to two gigabytes okay",
    "start": "1865679",
    "end": "1871600"
  },
  {
    "text": "so expected result is tuple pvg one is result resized",
    "start": "1872320",
    "end": "1878159"
  },
  {
    "text": "okay the second one is the corresponding file system is resized also i checked so",
    "start": "1878159",
    "end": "1886720"
  },
  {
    "text": "we can find the online board resizing feature or topo lvm",
    "start": "1886720",
    "end": "1893840"
  },
  {
    "text": "worked fine so the demo is done",
    "start": "1893840",
    "end": "1900240"
  },
  {
    "text": "so here is the takeaways of the presentation lbm is a local storage dynamic",
    "start": "1900720",
    "end": "1908480"
  },
  {
    "text": "provisioner based on lvm and it enables capacity area port scheduling",
    "start": "1908480",
    "end": "1915679"
  },
  {
    "text": "based on local storage and we cyborgs continue to develop",
    "start": "1915679",
    "end": "1922240"
  },
  {
    "text": "toppo lvm and the tupperware m is not a toy program",
    "start": "1922240",
    "end": "1928799"
  },
  {
    "text": "our target toppo rvm's target is to use production use",
    "start": "1928799",
    "end": "1936960"
  },
  {
    "text": "so here is a community and links of toppo lvm please join us",
    "start": "1937279",
    "end": "1944559"
  },
  {
    "text": "thank you very much that's all",
    "start": "1944559",
    "end": "1949278"
  }
]