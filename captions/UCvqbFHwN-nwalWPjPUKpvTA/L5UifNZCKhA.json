[
  {
    "text": "welcome uh my our talk is called cni or service mesh comparing security policies",
    "start": "0",
    "end": "6779"
  },
  {
    "text": "across providers so there are a couple different ways you can enforce policy in your clusters and we're going to talk about how they fit together so some of",
    "start": "6779",
    "end": "13500"
  },
  {
    "text": "the ways they go sideways uh this is my colleague Christine who is",
    "start": "13500",
    "end": "18779"
  },
  {
    "text": "in developer relations at Google and this is Rob he's an instructor at",
    "start": "18779",
    "end": "24180"
  },
  {
    "text": "Super orbital so many of the talks that we're gonna talk about today they're",
    "start": "24180",
    "end": "29699"
  },
  {
    "text": "okay our slides there are a lot of them and we're going to be going fast so you know just go to the PDF afterwards so",
    "start": "29699",
    "end": "34920"
  },
  {
    "text": "don't try to take pictures really it will be a nightmare all right so a little bit about what",
    "start": "34920",
    "end": "40320"
  },
  {
    "text": "we're going to cover today so we're going to talk about what's a cni what's a service mesh go back to the basics",
    "start": "40320",
    "end": "45420"
  },
  {
    "text": "um what and where and how policy is enforced some security gotchas that you should probably be aware of mitigations",
    "start": "45420",
    "end": "52079"
  },
  {
    "text": "and how the field is evolving in the future and lastly what you can do about it all right so the concepts that we are",
    "start": "52079",
    "end": "58320"
  },
  {
    "text": "discussing today they broadly apply to a lot of service meshes and cnis in the cncf ecosystem but today we're going to",
    "start": "58320",
    "end": "65040"
  },
  {
    "text": "be talking about psyllium and istio because they're the big fish in the cncf pond they are in the top 10 cncf",
    "start": "65040",
    "end": "71520"
  },
  {
    "text": "projects by commits contributors comments issues",
    "start": "71520",
    "end": "77400"
  },
  {
    "text": "and both of them have announced large under changes that are going to drastically change the fundamental ways",
    "start": "77400",
    "end": "84840"
  },
  {
    "text": "that policy is enforced so before I tell you about these changes Rob's going to take you through some of the basics",
    "start": "84840",
    "end": "92100"
  },
  {
    "text": "all right a quick review apologies if this is very remedial for you but don't",
    "start": "92100",
    "end": "97740"
  },
  {
    "text": "worry like Christine said we're going to go fast so the kubernetes networking model requires that every pod can talk",
    "start": "97740",
    "end": "103200"
  },
  {
    "text": "to every other pod directly without Nat but pods cannot just talk to each other this needs to be handled by the cni cni",
    "start": "103200",
    "end": "110820"
  },
  {
    "text": "is the container network interface which is basically a thing that lets your container runtime delegate network",
    "start": "110820",
    "end": "116100"
  },
  {
    "text": "configuration to some other component what kind of changes could a cni perform",
    "start": "116100",
    "end": "122340"
  },
  {
    "text": "well in the context of a pod talking to another pod the most commonly requested changes are those that do the initial",
    "start": "122340",
    "end": "129300"
  },
  {
    "text": "sub setup of networking so we're not talking about implementing networking on their own CSI plugins don't do this they",
    "start": "129300",
    "end": "135959"
  },
  {
    "text": "stand on the shoulders of giants and just configure your kernel to do the networking for you now cni is just an interface you need a",
    "start": "135959",
    "end": "142860"
  },
  {
    "text": "plug-in to actually do the change uh a plug-in is just something that implements the interface",
    "start": "142860",
    "end": "149099"
  },
  {
    "text": "and it is what answers the request when the call comes in to make changes to the network configuration",
    "start": "149099",
    "end": "154920"
  },
  {
    "text": "so some examples one of the first ones was the bridge plug-in this was a reference implementation from the container networking GitHub work you can",
    "start": "154920",
    "end": "161340"
  },
  {
    "text": "go have a look at it just gets you a basic connectivity between pods using virtual and ethernet devices and a Linux",
    "start": "161340",
    "end": "167400"
  },
  {
    "text": "Bridge there's no support for Network policy whatsoever there's another popular plugin called Calico also does the virtual interface",
    "start": "167400",
    "end": "173940"
  },
  {
    "text": "thing it doesn't bother with the bridges but it does add support for Network policy and it does so with IP tables",
    "start": "173940",
    "end": "181200"
  },
  {
    "text": "we're going to use a lot of wizards in this so keep your eyes out for the Wizards uh another big plugin out there is weave",
    "start": "181200",
    "end": "188459"
  },
  {
    "text": "um it relies on the internal openv switch implementation for its data plane",
    "start": "188459",
    "end": "194159"
  },
  {
    "text": "and it also has Network policy support does this with IP tables and the big one psyllium as we know uses",
    "start": "194159",
    "end": "202220"
  },
  {
    "text": "evpf for uh its connectivity uses a technology called Express data path that",
    "start": "202220",
    "end": "207420"
  },
  {
    "text": "lets it short-circuit much of the network stat for a huge speed Improvement and that is also where it",
    "start": "207420",
    "end": "213659"
  },
  {
    "text": "does its Network policy implementation so Network policy is implemented by eppf programs in silly",
    "start": "213659",
    "end": "220500"
  },
  {
    "text": "so most of the popular cni plugins out there are going to set up connectivity between pods they are going to have some",
    "start": "220500",
    "end": "227340"
  },
  {
    "text": "kind of support for some kind of network policy and you can basically think of them as like a cloud native sdn",
    "start": "227340",
    "end": "235379"
  },
  {
    "text": "okay so that's cni side the stock service mesh uh you have Micro Services",
    "start": "235379",
    "end": "240659"
  },
  {
    "text": "good job uh you want to have some standard features across all of your microservices so let's say you want some",
    "start": "240659",
    "end": "247860"
  },
  {
    "text": "observability you go out you write some code and you want to export Prometheus metrics for example",
    "start": "247860",
    "end": "253560"
  },
  {
    "text": "now you want to add security so you go write some more code you have authorization you have authentication",
    "start": "253560",
    "end": "258660"
  },
  {
    "text": "you bake them into your client libraries you bake them into your service Frameworks you want reliability so now you go write",
    "start": "258660",
    "end": "265199"
  },
  {
    "text": "some more code you add Active Health checking you add automatic retries for failures you add backoffs to protect",
    "start": "265199",
    "end": "271380"
  },
  {
    "text": "yourself from the Thundering Hertz and then one day at stand up when nobody even asked somebody starts talking about",
    "start": "271380",
    "end": "278340"
  },
  {
    "text": "code duplication something something let's refactor everything out into a nice Standalone",
    "start": "278340",
    "end": "285300"
  },
  {
    "text": "client Library well everything is going well with this approach right up until the moment some",
    "start": "285300",
    "end": "291960"
  },
  {
    "text": "idiot wants to add a cool new language to your stack",
    "start": "291960",
    "end": "297000"
  },
  {
    "text": "or a weird one whatever I don't judge so then somebody has a bright idea let's",
    "start": "297000",
    "end": "302639"
  },
  {
    "text": "move the whole Library out of the process entirely and bake it into the infrastructure",
    "start": "302639",
    "end": "309419"
  },
  {
    "text": "that way you get all the features you want no matter what is in your disgusting Tech Sac you sicko",
    "start": "309419",
    "end": "316979"
  },
  {
    "text": "the most popular service meshes offer observability they'll set up identity encryption Access Control load balancing",
    "start": "316979",
    "end": "323699"
  },
  {
    "text": "a bunch of other cool features so for a concrete example of how this",
    "start": "323699",
    "end": "328979"
  },
  {
    "text": "works we'll use our same two pods who want to communicate with each other and all that common logic that we just",
    "start": "328979",
    "end": "334440"
  },
  {
    "text": "talked about lives inside a container in the Pod it's the sidecar proxy so when this POG wants to talk to this",
    "start": "334440",
    "end": "341100"
  },
  {
    "text": "other pod the mesh will have already used iptables to redirect transparently",
    "start": "341100",
    "end": "346800"
  },
  {
    "text": "all the traffic through the sidecar proxy so it can do all the things that we just talked about",
    "start": "346800",
    "end": "352380"
  },
  {
    "text": "now because service mesh is not a cni plug-in it has nothing to do with giving pods interfaces or configuring",
    "start": "352380",
    "end": "359039"
  },
  {
    "text": "connectivity it assumes you have already done that and it just uses whatever connectivity is already available",
    "start": "359039",
    "end": "366180"
  },
  {
    "text": "so if we recall the bridge plug-in example we try to mix that in a visualization with a service mesh it",
    "start": "366180",
    "end": "372240"
  },
  {
    "text": "would look a little more like this but this is a very busy diagram so for Simplicity from here on out the",
    "start": "372240",
    "end": "379199"
  },
  {
    "text": "rest of our diagrams are going to just assume that container networking and iptibles redirection are already",
    "start": "379199",
    "end": "384240"
  },
  {
    "text": "configured so we're going to show you a whole bunch more stuff so in this setup rcni could be using",
    "start": "384240",
    "end": "391620"
  },
  {
    "text": "ebpf to enforce Network policy or it could be using item tables to enforce Network policy but whatever it's using",
    "start": "391620",
    "end": "398880"
  },
  {
    "text": "the cni plug-in policy enforcement happens here in the kernel Well Service",
    "start": "398880",
    "end": "404280"
  },
  {
    "text": "mesh policy enforcement happens here at the Sidecar so this brings us to a place where we",
    "start": "404280",
    "end": "410280"
  },
  {
    "text": "now have two different policy enforcement points in the network where we have one wizard living in a",
    "start": "410280",
    "end": "417000"
  },
  {
    "text": "sidecar one wizard living in the kernel now I am compelled by cncf bylaw to",
    "start": "417000",
    "end": "422520"
  },
  {
    "text": "inform you that no large language models were harmed in the creation of this image",
    "start": "422520",
    "end": "428479"
  },
  {
    "text": "okay wizard number one the cni what can you actually enforce",
    "start": "429360",
    "end": "436199"
  },
  {
    "text": "now Calico psyllium other big cnis they often offer their own network policy but",
    "start": "436199",
    "end": "443580"
  },
  {
    "text": "better crds that have fancier stuff in them I'm going to talk about just the vanilla Network policy that comes with",
    "start": "443580",
    "end": "450240"
  },
  {
    "text": "all kubernetes just to keep things simple but basically you can apply policy to a broad range of",
    "start": "450240",
    "end": "456960"
  },
  {
    "text": "traffic types and then you can make a block or permit decision on that traffic",
    "start": "456960",
    "end": "463139"
  },
  {
    "text": "based on some of the characteristics of the traffic itself start with kind of things like don't allow things going to",
    "start": "463139",
    "end": "469500"
  },
  {
    "text": "the cider and so forth so we look at our basic setup",
    "start": "469500",
    "end": "474539"
  },
  {
    "text": "let's say the pot on the left isn't a namespace called front end and the pot on the right is the namespace in a name",
    "start": "474539",
    "end": "481440"
  },
  {
    "text": "space called API let's just say we have a network policy here that says that pods in the front",
    "start": "481440",
    "end": "487139"
  },
  {
    "text": "end namespace are permitted to connect to the pods in the API namespace",
    "start": "487139",
    "end": "492360"
  },
  {
    "text": "well iptables and ebpf don't know anything about kubernetes named basis",
    "start": "492360",
    "end": "498360"
  },
  {
    "text": "so instead what's happening is that the cni plugin has implemented uh something called a network policy controller and",
    "start": "498360",
    "end": "505979"
  },
  {
    "text": "that component is going to be querying the kubernetes API and keeping tabs on all the pods and all the namespaces so",
    "start": "505979",
    "end": "512219"
  },
  {
    "text": "that it can keep track of those IP addresses so once it has those IP addresses it's then going to be either updating",
    "start": "512219",
    "end": "518399"
  },
  {
    "text": "iptables rules or it's going to be updating an edpf map that will Implement that same logic",
    "start": "518399",
    "end": "524219"
  },
  {
    "text": "so if a connection comes out of this pod in the front-end namespace it can be checked against that table and dropped",
    "start": "524219",
    "end": "530279"
  },
  {
    "text": "or permitted accordingly so hopefully not too tricky",
    "start": "530279",
    "end": "535860"
  },
  {
    "text": "good news for you yeah you know Drive scenario because don't we all love to drive scenario when we're talking about",
    "start": "535860",
    "end": "541800"
  },
  {
    "text": "the way people get into your clusters so let's say an attacker has popped a shell in a vulnerable pod in some other",
    "start": "541800",
    "end": "549120"
  },
  {
    "text": "name space that does not have access to your API now we know that our cni plugin is",
    "start": "549120",
    "end": "555899"
  },
  {
    "text": "keeping tabs on pod IP addresses to update those iptables rules those ebpf Maps or whatever it's using",
    "start": "555899",
    "end": "562740"
  },
  {
    "text": "now let's say this pod is in a permitted namespace and it goes away for some reason",
    "start": "562740",
    "end": "568260"
  },
  {
    "text": "and then it will get recreated with the new IP address this kind of thing happens all the time that's why we run",
    "start": "568260",
    "end": "573300"
  },
  {
    "text": "kubernetes so now the clock starts if there is enough churn in the",
    "start": "573300",
    "end": "580260"
  },
  {
    "text": "compromised deployment this leaves a narrow window of opportunity for a connection from a compromised pod to",
    "start": "580260",
    "end": "587880"
  },
  {
    "text": "make it past the check before our Cloud native sdn catches up",
    "start": "587880",
    "end": "593160"
  },
  {
    "text": "and cuts the cord now this is not a new idea this type of race condition has been around as long",
    "start": "593160",
    "end": "599339"
  },
  {
    "text": "as software-defined networks have been around the only thing that's changed is that now it's in kubernetes and so we need to",
    "start": "599339",
    "end": "604980"
  },
  {
    "text": "consider this when we're thinking about our clusters if you want details there's a blog post here that will show you the specifics I",
    "start": "604980",
    "end": "611160"
  },
  {
    "text": "will talk about mitigation but not yet because I'm going to switch gears and compare to service mesh",
    "start": "611160",
    "end": "619920"
  },
  {
    "text": "so what can you enforce with service mesh wizard number two again you can",
    "start": "619920",
    "end": "625019"
  },
  {
    "text": "apply policy on a whole range of network traffic and you can conditionally block or",
    "start": "625019",
    "end": "631320"
  },
  {
    "text": "permit that traffic based on characteristics of the traffic itself but because service mesh lives at layer",
    "start": "631320",
    "end": "638100"
  },
  {
    "text": "seven the range of characteristics that you can use to make a block or permit decision is broader because it can",
    "start": "638100",
    "end": "644160"
  },
  {
    "text": "inspect the traffic look inside of the HTTP headers and so forth so you can say don't allow gets but you can allow posts",
    "start": "644160",
    "end": "649920"
  },
  {
    "text": "or something like that I'm going to focus on these two",
    "start": "649920",
    "end": "655140"
  },
  {
    "text": "conditions for the moment because the way these two conditions are implemented leads to an interesting situation",
    "start": "655140",
    "end": "661260"
  },
  {
    "text": "so how are the namespace or service account conditions uh enforced well we",
    "start": "661260",
    "end": "668279"
  },
  {
    "text": "look back at our diagram here we know service mesh enforcement happens at the side card",
    "start": "668279",
    "end": "673320"
  },
  {
    "text": "so we have the same scenario we've got a pod in the front end namespace we have a pod in the API namespace and we have a",
    "start": "673320",
    "end": "679440"
  },
  {
    "text": "policy which permits pods in the front end to talk to pods in the API namespace great",
    "start": "679440",
    "end": "685019"
  },
  {
    "text": "now just like iptables just like evpf sidecar proxies also know nothing about",
    "start": "685019",
    "end": "691140"
  },
  {
    "text": "kubernetes namespaces instead our service mesh is going to rely on mtls to enforce policy on Source",
    "start": "691140",
    "end": "701760"
  },
  {
    "text": "namespace or service account so when a sidecar knows it's going to",
    "start": "701760",
    "end": "706800"
  },
  {
    "text": "talk to another side car in the mesh it wraps the outbound Connection in neutral TLS regardless of what it is",
    "start": "706800",
    "end": "714720"
  },
  {
    "text": "and the namespace that the request is coming from is encoded in the signed",
    "start": "714720",
    "end": "721019"
  },
  {
    "text": "certificate that is used to establish that mtls connection so when the request arrives at the",
    "start": "721019",
    "end": "726839"
  },
  {
    "text": "destination side the receiving sidecar does not need to have a list of IP addresses in order to verify that the",
    "start": "726839",
    "end": "733260"
  },
  {
    "text": "request is coming from a permitted name space it just needs to look at the contents of the certificate and verify",
    "start": "733260",
    "end": "738959"
  },
  {
    "text": "that the signature was signed or the certificate was signed with the key that it trusts and then it will believe that",
    "start": "738959",
    "end": "745620"
  },
  {
    "text": "that connection came from where it said it came from so two key takeaways unlike cni land in the service mesh a",
    "start": "745620",
    "end": "753959"
  },
  {
    "text": "policy like this does not prevent TCP connections between pods",
    "start": "753959",
    "end": "760620"
  },
  {
    "text": "and anyone who can present this client certificate will be trusted as though",
    "start": "760620",
    "end": "766620"
  },
  {
    "text": "they're coming from a namespace and service account that are in the certificate regardless of where they actually come from",
    "start": "766620",
    "end": "774000"
  },
  {
    "text": "okay I see eyebrows being raised y'all see where I'm going with this that's",
    "start": "774000",
    "end": "779160"
  },
  {
    "text": "good the good news is those client certificates are well protected they all",
    "start": "779160",
    "end": "784800"
  },
  {
    "text": "live in memory in the sidecar proxy never get written anywhere even if somebody popped a shell in your",
    "start": "784800",
    "end": "789899"
  },
  {
    "text": "pod they have their work cut out for them to try to extract it from the process memory",
    "start": "789899",
    "end": "795000"
  },
  {
    "text": "so if we assume that that is safe great awarenly certificates come from",
    "start": "795000",
    "end": "800940"
  },
  {
    "text": "well all service meshes Implement a controller component and one of the controller components jobs is to Mint",
    "start": "800940",
    "end": "806940"
  },
  {
    "text": "new certificates so when a pod with a sidecar starts up it contacts that controller and says can",
    "start": "806940",
    "end": "813600"
  },
  {
    "text": "I please have a certificate and to identify itself to the controller it is going to offer up a kubernetes",
    "start": "813600",
    "end": "820860"
  },
  {
    "text": "service account token so this is how identity is bootstrapped in this environment",
    "start": "820860",
    "end": "826320"
  },
  {
    "text": "now that token is going to contain some claims and those claims are the service account and the namespace that the Pod",
    "start": "826320",
    "end": "832800"
  },
  {
    "text": "is running it and the controller is going to use those claims when it mints the certificate",
    "start": "832800",
    "end": "839220"
  },
  {
    "text": "good news everyone I have another contrived scenario for you let's say an attacker has popped a shell",
    "start": "839220",
    "end": "845820"
  },
  {
    "text": "in a vulnerable pod that does not have access to your API again if they can find a vulnerability in this",
    "start": "845820",
    "end": "853500"
  },
  {
    "text": "pod which gives them a way to steal the service count token from this Sidecar maybe through directory traversal",
    "start": "853500",
    "end": "860399"
  },
  {
    "text": "develop vulnerability maybe through server-side request forging maybe they just bat their eyelashes and say pretty",
    "start": "860399",
    "end": "867240"
  },
  {
    "text": "please however it's done they could then use that stolen token to",
    "start": "867240",
    "end": "872700"
  },
  {
    "text": "talk to the service mesh controller and request a client certificate and then use that client certificate to make a",
    "start": "872700",
    "end": "879300"
  },
  {
    "text": "fully encrypted and verified connection to the Pod that you thought was unreachable",
    "start": "879300",
    "end": "886740"
  },
  {
    "text": "there's a repo right here that shows how to do this you can check it out for step-by-step details",
    "start": "886740",
    "end": "892800"
  },
  {
    "text": "so there are two ways to deal with this problem solution number one is to follow the",
    "start": "892800",
    "end": "898740"
  },
  {
    "text": "Unix philosophy a tool should do one thing and do it well and you should be able to use your tools together",
    "start": "898740",
    "end": "905040"
  },
  {
    "text": "so right tool right job use your service mesh to enforce layer 7 policy at the",
    "start": "905040",
    "end": "910980"
  },
  {
    "text": "sidecar use your cni to enforce layer 4 policy in the kernel",
    "start": "910980",
    "end": "916740"
  },
  {
    "text": "and then if an attacker with a stolen client search",
    "start": "916740",
    "end": "922519"
  },
  {
    "text": "an attacker with a stolen client so it will be stopped by your cni plugin because they're coming from the wrong IP",
    "start": "922519",
    "end": "929339"
  },
  {
    "text": "address while an attacker with a stolen IP address will be blocked by the sidecar",
    "start": "929339",
    "end": "935459"
  },
  {
    "text": "proxy because they haven't got the right mtls client sir and",
    "start": "935459",
    "end": "941880"
  },
  {
    "text": "this is not a hot take this in fact is exactly what istio has recommended doing for years defense and depth is not a new",
    "start": "941880",
    "end": "949139"
  },
  {
    "text": "idea now that is one way to approach this problem but there is a more interesting",
    "start": "949139",
    "end": "954839"
  },
  {
    "text": "approach to problems like this and that is what Christine is going to tell you about all right so the second approach",
    "start": "954839",
    "end": "960899"
  },
  {
    "text": "is the evolution of the projects itself within the ecosystem so we're kind of going back full circle so we all know",
    "start": "960899",
    "end": "968100"
  },
  {
    "text": "that the cncf landscape is continually changing I blink my eyes and there's like another new project and I'm like oh",
    "start": "968100",
    "end": "973680"
  },
  {
    "text": "another one and you know what they're being supported by brilliant folks in the open source community so some of",
    "start": "973680",
    "end": "979980"
  },
  {
    "text": "these projects have decided to expand their capabilities to provide options for better use of projects so tying it",
    "start": "979980",
    "end": "987779"
  },
  {
    "text": "all back istio itself had a large announcement last year of introducing ambient mesh mode a new data plane mode",
    "start": "987779",
    "end": "994860"
  },
  {
    "text": "for separating the L7 and The L4 layers so what is ambient mesh there are more",
    "start": "994860",
    "end": "1001459"
  },
  {
    "text": "detailed talks around this this the specifics and there are blog posts online but a rough overview of the",
    "start": "1001459",
    "end": "1008180"
  },
  {
    "text": "security aspect of what we care about is that now we have a L4 secure overlay",
    "start": "1008180",
    "end": "1013459"
  },
  {
    "text": "layer to layer on mtls between your applications and they include Denial in",
    "start": "1013459",
    "end": "1019100"
  },
  {
    "text": "service to service connectivity authorization policies and this is done with the Zed tunnel pardon my thick",
    "start": "1019100",
    "end": "1025760"
  },
  {
    "text": "Canadian accent so what does this look like if we recall the sidecar model is sitting right next",
    "start": "1025760",
    "end": "1032360"
  },
  {
    "text": "to your application pod so literally two P's in a pod and then feedback from the community has shown that maybe this was",
    "start": "1032360",
    "end": "1038120"
  },
  {
    "text": "a bit intrusive in some scenarios and then some people just want to layer on mtls before trying out more service mesh",
    "start": "1038120",
    "end": "1044058"
  },
  {
    "text": "capabilities so instead of having to wait for a two out of two for your containers and your",
    "start": "1044059",
    "end": "1049280"
  },
  {
    "text": "pods to be ready or restarting your deployment to inject the side car you now have the Zed tunnel per node which",
    "start": "1049280",
    "end": "1056360"
  },
  {
    "text": "will intercept the traffic before it leaves or enters the node it layers on mtls to your cluster's traffic so you",
    "start": "1056360",
    "end": "1062780"
  },
  {
    "text": "know that it's encrypted and I do want to address that even though the slides here say iptables there are",
    "start": "1062780",
    "end": "1068600"
  },
  {
    "text": "investigations being done to use ebpf instead of Ip tables to redirect traffic",
    "start": "1068600",
    "end": "1073940"
  },
  {
    "text": "so you can see that pull request at the bottom there um and for example we have a cncf uh",
    "start": "1073940",
    "end": "1082100"
  },
  {
    "text": "sandbox project I think as of December called merbridge which implements evpf with istio and Linker d",
    "start": "1082100",
    "end": "1088520"
  },
  {
    "text": "and also if you want to have richer L7 authorization policies then you can do that at the L7 layer with the processing",
    "start": "1088520",
    "end": "1095960"
  },
  {
    "text": "layer which is done with the Waypoint proxy and is configurable with the Gateway API",
    "start": "1095960",
    "end": "1101840"
  },
  {
    "text": "so the Waypoint proxies are like regular regular pods that can be autoscaled like any other kubernetes deployment and",
    "start": "1101840",
    "end": "1108799"
  },
  {
    "text": "ambient mesh also uses h-bone HTTP based overlay Network environment say that",
    "start": "1108799",
    "end": "1114020"
  },
  {
    "text": "five times fast connection is established with mtls and it's based on the ID of the workloads that are",
    "start": "1114020",
    "end": "1119780"
  },
  {
    "text": "communicating with each other and there was a much more throat talk around this that was presented earlier",
    "start": "1119780",
    "end": "1126440"
  },
  {
    "text": "and surprisingly the cncf is so on top of it that they've already uploaded YouTube videos so please check that out",
    "start": "1126440",
    "end": "1131840"
  },
  {
    "text": "if you want more in-depth with security and on the flip side psyllium has also",
    "start": "1131840",
    "end": "1137419"
  },
  {
    "text": "announced selenium service mesh pushing upwards towards the L7 world so psyllium service mesh is a",
    "start": "1137419",
    "end": "1144080"
  },
  {
    "text": "sidecarless service mesh still leveraging evpf to bypass the network stack so it's really great for performance but if for some reason ebpf",
    "start": "1144080",
    "end": "1151820"
  },
  {
    "text": "can't handle the request that's coming in it will fall back to using the psyllium agent that is running as a",
    "start": "1151820",
    "end": "1158000"
  },
  {
    "text": "Daemon set on your node the psyllium agent is runs by default on the on runs",
    "start": "1158000",
    "end": "1163760"
  },
  {
    "text": "in Envoy proxy by default and will intercept the traffic on your behalf there are certain L7 traffic management",
    "start": "1163760",
    "end": "1169700"
  },
  {
    "text": "tasks that can't be handled within the kernel but again that goes beyond we only care about security here",
    "start": "1169700",
    "end": "1175039"
  },
  {
    "text": "so there is also a lot of work being done on the psyllium service mesh side of things one of them being the mtls",
    "start": "1175039",
    "end": "1180980"
  },
  {
    "text": "investigation I was talking to Nick yesterday who was saying that even though there is",
    "start": "1180980",
    "end": "1186559"
  },
  {
    "text": "um like I think they're still looking for some feedback so you know so some TLC and get into the discussion I've",
    "start": "1186559",
    "end": "1192320"
  },
  {
    "text": "linked the issue there so I want to be clear that there's still a lot of work being done for both",
    "start": "1192320",
    "end": "1198620"
  },
  {
    "text": "projects ambient mesh is still experimental in the design for mtls is open for feedback Kudos put to both",
    "start": "1198620",
    "end": "1205640"
  },
  {
    "text": "projects for being so receptive to the open source community and like actively looking for that feedback that's so",
    "start": "1205640",
    "end": "1210740"
  },
  {
    "text": "healthy and this brings us all to the L7 policy support istio has been saying to",
    "start": "1210740",
    "end": "1215960"
  },
  {
    "text": "you cni and L7 service meshes for a long time and psyllium has the ability to do",
    "start": "1215960",
    "end": "1221179"
  },
  {
    "text": "this and now you can see that they're kind of pushing up against each other but both projects are still involving so",
    "start": "1221179",
    "end": "1228020"
  },
  {
    "text": "rather the projects are on this path to converging with all that being said what",
    "start": "1228020",
    "end": "1234320"
  },
  {
    "text": "are some of the takeaways so now we're going to have a large array of options to choose from in the future",
    "start": "1234320",
    "end": "1240140"
  },
  {
    "text": "I'm not here to tell you what your engineering needs are or like what the future is going to hold for your teams",
    "start": "1240140",
    "end": "1246860"
  },
  {
    "text": "um you might still want a sidecar model for more isolation and it's still needed in some scenarios and then sometimes",
    "start": "1246860",
    "end": "1252799"
  },
  {
    "text": "you're going to want something more generic like a proxy per node I don't think the sidecar model will go away",
    "start": "1252799",
    "end": "1258080"
  },
  {
    "text": "instead companies will have to choose from themselves based on their needs and there is a link at the bottom by a talk",
    "start": "1258080",
    "end": "1264380"
  },
  {
    "text": "by Liz rice about the trade-offs of the sidecars versus sidecar list debate so",
    "start": "1264380",
    "end": "1269660"
  },
  {
    "text": "you know it's still a topic to be discussed and there's also something to note it's a complex costs for your",
    "start": "1269660",
    "end": "1276679"
  },
  {
    "text": "engineering teams you know those are people you know there's the engineering cost of onboarding of maintaining some",
    "start": "1276679",
    "end": "1283340"
  },
  {
    "text": "of the risk the maintenance and blast radius and again this all depends on your specific use case at your team's",
    "start": "1283340",
    "end": "1289400"
  },
  {
    "text": "use okay so let's take a small tangent to ebpf because we mentioned it on our",
    "start": "1289400",
    "end": "1295100"
  },
  {
    "text": "cfp and we're like oh we gotta talk about it so there are a few slides here so evpf if you're not familiar again",
    "start": "1295100",
    "end": "1301820"
  },
  {
    "text": "it's a program that runs in your kernel it's constrained for safety you know it has tight guard rails so you can't like",
    "start": "1301820",
    "end": "1307700"
  },
  {
    "text": "you know go off and just do anything that you want and it's checked by a verifier before it is uploaded to your",
    "start": "1307700",
    "end": "1313940"
  },
  {
    "text": "kennel so at the cni level you can see that it's a very beneficial tool it provides",
    "start": "1313940",
    "end": "1319760"
  },
  {
    "text": "L3 observability routing and network policy and there is a good talk that or",
    "start": "1319760",
    "end": "1325280"
  },
  {
    "text": "a good slideshow that goes more into detail I am by no means an evpf expert I",
    "start": "1325280",
    "end": "1330320"
  },
  {
    "text": "wish I was but you know I think that is some big brain energy beyond my scope of knowledge but the main benefit is mostly",
    "start": "1330320",
    "end": "1337159"
  },
  {
    "text": "around performance from what I've understand and the sarcastic tweet made me laugh a",
    "start": "1337159",
    "end": "1343460"
  },
  {
    "text": "little bit about the highlights of the excitement around ebpf last year I mean",
    "start": "1343460",
    "end": "1348559"
  },
  {
    "text": "it's no s-bomb but you know it's still pretty exciting um and it is a cool technology",
    "start": "1348559",
    "end": "1353960"
  },
  {
    "text": "but it's not a silver bullet and you oh don't you ever notice that there's actually numbers for a silver",
    "start": "1353960",
    "end": "1360320"
  },
  {
    "text": "bullet but every vendor wants to sell you a single pane of glass",
    "start": "1360320",
    "end": "1365419"
  },
  {
    "text": "so takeaways use defense in depth and know your tools there was a good talk yesterday again uploaded onto YouTube",
    "start": "1365419",
    "end": "1371600"
  },
  {
    "text": "ready and it has this diagram of the Cheese model which I love because I love cheese and you can see that you know",
    "start": "1371600",
    "end": "1377240"
  },
  {
    "text": "might as well have as much layers and you have as much safety padded on everywhere",
    "start": "1377240",
    "end": "1383360"
  },
  {
    "text": "so what can you do about it you know get involved given istio's",
    "start": "1383360",
    "end": "1389659"
  },
  {
    "text": "ambient mode is still experimental try it out give some feedback check out the psyllium mtls design",
    "start": "1389659",
    "end": "1396200"
  },
  {
    "text": "proposal and all the links are at the bottom there and I hope you're ready to get involved with all your favorite cncf",
    "start": "1396200",
    "end": "1402679"
  },
  {
    "text": "projects all of them right",
    "start": "1402679",
    "end": "1407440"
  },
  {
    "text": "so again show some telc and some support to these projects they need security enthusiasts like yourselves in the crowd",
    "start": "1408919",
    "end": "1415220"
  },
  {
    "text": "to make them stronger and more resilient in the future again my name is Christine and I and I'm",
    "start": "1415220",
    "end": "1421280"
  },
  {
    "text": "Rob and am a big fan of a python teacher named",
    "start": "1421280",
    "end": "1426919"
  },
  {
    "text": "Ray Hettinger who at the end of all of his talks pulls the Audience by asking",
    "start": "1426919",
    "end": "1432080"
  },
  {
    "text": "the question could I see by show of hands anyone who did not learn something",
    "start": "1432080",
    "end": "1437600"
  },
  {
    "text": "new today for everyone playing at home they're not",
    "start": "1437600",
    "end": "1443539"
  },
  {
    "text": "I am the only hand up excellent work that means you all pick the right room to be it",
    "start": "1443539",
    "end": "1451220"
  },
  {
    "text": "so at this point I will suggest that my company is super orbital offers kubernetes training we uh teach service",
    "start": "1451220",
    "end": "1457940"
  },
  {
    "text": "mesh we teach Advanced kubernetes controller development uh and we are",
    "start": "1457940",
    "end": "1463820"
  },
  {
    "text": "pretty chill about it so if you have Juniors on your team if you have folks",
    "start": "1463820",
    "end": "1468860"
  },
  {
    "text": "who need to get skilled up fast send them to me I trade Wizards thank you",
    "start": "1468860",
    "end": "1475600"
  },
  {
    "text": "[Applause]",
    "start": "1475600",
    "end": "1484100"
  },
  {
    "text": "leave feedback or not no peer pressure yeah it's fine we have a couple moments for questions if anyone has questions",
    "start": "1484100",
    "end": "1491380"
  },
  {
    "text": "um if there aren't questions I could show a demo of stealing an mtls client",
    "start": "1495500",
    "end": "1502159"
  },
  {
    "text": "certificate if you want to see that you guys want to see it happen yeah yeah",
    "start": "1502159",
    "end": "1508000"
  },
  {
    "text": "all right oh this will be tricky",
    "start": "1508000",
    "end": "1515799"
  },
  {
    "text": "um I got to switch back to mirroring",
    "start": "1515840",
    "end": "1521380"
  },
  {
    "text": "this was us uh goofing around doing a",
    "start": "1534679",
    "end": "1540278"
  },
  {
    "text": "okay so just quickly reset my environment so",
    "start": "1545059",
    "end": "1552140"
  },
  {
    "text": "this Coster has been running for a while I've been working on this test for a while I had long thought that this was possible but I had never actually",
    "start": "1552140",
    "end": "1559100"
  },
  {
    "text": "figured out a way to do it until just this last week so hopefully",
    "start": "1559100",
    "end": "1564860"
  },
  {
    "text": "the Wi-Fi Gods will be appeased and I will actually be able to get access to",
    "start": "1564860",
    "end": "1569960"
  },
  {
    "text": "my cluster it's not looking good",
    "start": "1569960",
    "end": "1575860"
  },
  {
    "text": "I cannot reach my cluster no that feels handshake oh there we go",
    "start": "1580520",
    "end": "1586940"
  },
  {
    "text": "okay great great it's just real slow everybody stop",
    "start": "1586940",
    "end": "1592220"
  },
  {
    "text": "tweeting [Music]",
    "start": "1592220",
    "end": "1596200"
  },
  {
    "text": "okay all right so here goes so uh what I have",
    "start": "1599240",
    "end": "1606440"
  },
  {
    "text": "are two namespaces I have a namespace called secure and a",
    "start": "1606440",
    "end": "1611900"
  },
  {
    "text": "namespace called attack in the secure namespace",
    "start": "1611900",
    "end": "1616299"
  },
  {
    "text": "I have a service and I have some pods",
    "start": "1618740",
    "end": "1624520"
  },
  {
    "text": "in this uh namespace the legit client pod is using a service account that is",
    "start": "1626179",
    "end": "1633200"
  },
  {
    "text": "allowed to talk to the victim service in the attack name space",
    "start": "1633200",
    "end": "1640120"
  },
  {
    "text": "there is a pod that does not even have a sidecar notice there are only one of one containers in this pod",
    "start": "1642799",
    "end": "1649039"
  },
  {
    "text": "so I'm going to run this exercise what's",
    "start": "1649039",
    "end": "1654260"
  },
  {
    "text": "happening is it is now generating a new RSA key pair and it is stealing the",
    "start": "1654260",
    "end": "1660440"
  },
  {
    "text": "service account token from the legit client pod uh just cool cuddle copied it out of",
    "start": "1660440",
    "end": "1665960"
  },
  {
    "text": "there I then verify that the key in the uh oh",
    "start": "1665960",
    "end": "1672500"
  },
  {
    "text": "sorry then I make a grpc call to istio D using the certificate signing request",
    "start": "1672500",
    "end": "1678620"
  },
  {
    "text": "that I just generated and using the stolen service count token from the legit client istiog returns an mtls client",
    "start": "1678620",
    "end": "1685279"
  },
  {
    "text": "certificate to me I then look inside the mcls client certificate to check that the key is the same as the one that I asked for it is uh I then copy the",
    "start": "1685279",
    "end": "1693260"
  },
  {
    "text": "private key in and the client certificate into the attack pod and the attack pod is now ready to spoof the",
    "start": "1693260",
    "end": "1700520"
  },
  {
    "text": "request so I'm going to exec into that pod",
    "start": "1700520",
    "end": "1705460"
  },
  {
    "text": "okay so from in here if I curl the victim service it is in his victim in",
    "start": "1707960",
    "end": "1713360"
  },
  {
    "text": "the namespace secure I expect to see connection reset by Pierre I am sending a clear text request",
    "start": "1713360",
    "end": "1718580"
  },
  {
    "text": "to a pod that is demanding mtls so it does just hangs up however here I have my client",
    "start": "1718580",
    "end": "1725419"
  },
  {
    "text": "certificate and my key so if I do a curl pass in the search",
    "start": "1725419",
    "end": "1732080"
  },
  {
    "text": "pass in the key",
    "start": "1732080",
    "end": "1735220"
  },
  {
    "text": "remind curl to use https despite the fact that I am actually",
    "start": "1737179",
    "end": "1743720"
  },
  {
    "text": "going to communicate on Port 80 and the service that's running inside of that victim pod is just an HTTP bin binary so",
    "start": "1743720",
    "end": "1752299"
  },
  {
    "text": "I'm going to hit the headers endpoint and what you see is a 200 response back from that pod that I should not be able",
    "start": "1752299",
    "end": "1758000"
  },
  {
    "text": "to talk to and what is happening here is the envoy sidecar by default when it",
    "start": "1758000",
    "end": "1764600"
  },
  {
    "text": "unpacks the mtls connection it examines the certificate gets the identity out and puts it into a response header so",
    "start": "1764600",
    "end": "1771679"
  },
  {
    "text": "that you as a service mesh user can verify who made the request that is this",
    "start": "1771679",
    "end": "1777440"
  },
  {
    "text": "this is the requester here and who received the request this is the identity of the receiver here so you can",
    "start": "1777440",
    "end": "1782720"
  },
  {
    "text": "see that even though this request came from a plug called attack in a namespace called deck it appears to be coming from",
    "start": "1782720",
    "end": "1788299"
  },
  {
    "text": "secure namespace using this legit client service account",
    "start": "1788299",
    "end": "1793520"
  },
  {
    "text": "it worked they're happy cool",
    "start": "1793520",
    "end": "1799100"
  },
  {
    "text": "thanks just one thing to point out yes",
    "start": "1799100",
    "end": "1805360"
  },
  {
    "text": "the reason this works yes pure strong",
    "start": "1805820",
    "end": "1811820"
  },
  {
    "text": "yeah one thing that stays slowly",
    "start": "1811820",
    "end": "1815860"
  },
  {
    "text": "yeah they already did",
    "start": "1821960",
    "end": "1828320"
  },
  {
    "text": "um so uh yeah so what's happened he's talking about is um you can use a the",
    "start": "1828320",
    "end": "1833779"
  },
  {
    "text": "service account um there's like a token API where you can ask for what's called a bounded token so the uh it's a JWT that has an",
    "start": "1833779",
    "end": "1842779"
  },
  {
    "text": "audience claim inside of there and what the audience claim means is you can say this token should only be received by",
    "start": "1842779",
    "end": "1848840"
  },
  {
    "text": "Services who are in the audience this token is only met for for example istio-d or this token is only meant to",
    "start": "1848840",
    "end": "1854360"
  },
  {
    "text": "be given to for example the kubernetes API so istiod actually does have bounded",
    "start": "1854360",
    "end": "1859940"
  },
  {
    "text": "service account tokens turned on by default and so the token that lives in the sidecar proxy is bounded to only be",
    "start": "1859940",
    "end": "1865940"
  },
  {
    "text": "allowed to talk to um Citadel is the component inside of sdod",
    "start": "1865940",
    "end": "1871220"
  },
  {
    "text": "that signs certificates however um I have stolen that too that token so",
    "start": "1871220",
    "end": "1877039"
  },
  {
    "text": "it doesn't matter that it's bounded oh okay",
    "start": "1877039",
    "end": "1883179"
  },
  {
    "text": "oh okay okay this is something I'm not aware of so how does that work",
    "start": "1883880",
    "end": "1888520"
  },
  {
    "text": "uh no so uh",
    "start": "1890720",
    "end": "1893980"
  },
  {
    "text": "the projected oh cool that's very cool so",
    "start": "1906140",
    "end": "1911840"
  },
  {
    "text": "yeah yeah I can just repeat that for people who are watching on YouTube later there's work being done to allow",
    "start": "1911840",
    "end": "1917120"
  },
  {
    "text": "projection of an mtls certificate into the uh pod so that it doesn't have to use a token in fact I think there's a",
    "start": "1917120",
    "end": "1922640"
  },
  {
    "text": "talk I saw that somebody had to talk about that today I think um yeah somebody didn't do a talk about that day okay so I I was busy working on",
    "start": "1922640",
    "end": "1929840"
  },
  {
    "text": "this talk so I didn't get to see it um but uh I do want to check that out and and to be clear you know the fact",
    "start": "1929840",
    "end": "1935600"
  },
  {
    "text": "that service account tokens are sensitive not a hot take you know everybody knows this I just think that this is a an abuse of a stolen service",
    "start": "1935600",
    "end": "1941779"
  },
  {
    "text": "account token that is not commonly done yeah I think you're underselling what you can do with the stolen service",
    "start": "1941779",
    "end": "1947899"
  },
  {
    "text": "counselor if I'm not mistaken you can also use it to connect the cube API uh oh yeah",
    "start": "1947899",
    "end": "1954519"
  },
  {
    "text": "that's a good point I actually I haven't looked with that oh no no actually because not this token because it's",
    "start": "1954799",
    "end": "1959840"
  },
  {
    "text": "bounded yeah yeah yes yeah that's right yeah that's very",
    "start": "1959840",
    "end": "1966980"
  },
  {
    "text": "cool thank you I have to get my hand down now I learned a new thing today cool thanks everybody",
    "start": "1966980",
    "end": "1973890"
  },
  {
    "text": "[Applause]",
    "start": "1973890",
    "end": "1977869"
  }
]