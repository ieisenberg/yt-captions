[
  {
    "text": "it's amazing to be here with all of you today let's get started so imagine this you have just",
    "start": "1240",
    "end": "8160"
  },
  {
    "text": "deployed your kubernetes cluster everything is running fine then suddenly the coordin sport start crashing and the",
    "start": "8160",
    "end": "15559"
  },
  {
    "text": "error log says permission denied first we thought it's a very simple issue straightforward one but as",
    "start": "15559",
    "end": "23320"
  },
  {
    "text": "we dug deeper the issue was not simple as we hoped we embarked on a debugging Journey",
    "start": "23320",
    "end": "30519"
  },
  {
    "text": "which took us from cord to some unexpected places over the next 30 minutes we'll share how we trace the",
    "start": "30519",
    "end": "36680"
  },
  {
    "text": "issue found out the root cause and hopefully you will walk away with some knowledge and extra debugging tips for",
    "start": "36680",
    "end": "44680"
  },
  {
    "text": "your own Journey myself humble",
    "start": "44680",
    "end": "49800"
  },
  {
    "text": "chaml I'm a principal software engineer and a tech lead for kubernetes distribution team at BMW by",
    "start": "49800",
    "end": "57359"
  },
  {
    "text": "broadcom I was lucky to contribute to kuet since 2016 and I'm a core maintainer I'm a",
    "start": "57359",
    "end": "64239"
  },
  {
    "text": "cncf Ambassador and organizer for kcds meetups all a book titled mastering G",
    "start": "64239",
    "end": "71680"
  },
  {
    "text": "virtualization and I'm a SE Ambassador over to you again myself Akil moan I'm a",
    "start": "71680",
    "end": "77640"
  },
  {
    "text": "maintainer of containerd and I also maintain a project called kubernetes publishing board and I work as a",
    "start": "77640",
    "end": "82920"
  },
  {
    "text": "software engineer BM by broadc yeah so after the cluster",
    "start": "82920",
    "end": "88479"
  },
  {
    "text": "deployment the coordin sport started to crash maybe the clbo is very common in",
    "start": "88479",
    "end": "93880"
  },
  {
    "text": "many setups if you see the cube CDL logs it",
    "start": "93880",
    "end": "99000"
  },
  {
    "text": "says listen and bind to Port 53 permission denied so ideally the port",
    "start": "99000",
    "end": "105360"
  },
  {
    "text": "should start and it should bind and listen to Port 53 to resolve the DNS",
    "start": "105360",
    "end": "110920"
  },
  {
    "text": "queries in a cluster as you can see in the last",
    "start": "110920",
    "end": "117079"
  },
  {
    "text": "snippet so little bit about the problem setup so we build kubernetes and core",
    "start": "117320",
    "end": "123200"
  },
  {
    "text": "components as as o distributions for our customers in flowers of ubu O and Photon",
    "start": "123200",
    "end": "131480"
  },
  {
    "text": "o now the this particular bundle had coinus version",
    "start": "131480",
    "end": "138840"
  },
  {
    "text": "1.1.1 and we have many clusters based on this ubu and Photon",
    "start": "138840",
    "end": "144680"
  },
  {
    "text": "oise but the issue was only seen in photon oise clusters and not in hundu",
    "start": "144680",
    "end": "150519"
  },
  {
    "text": "the the issue started to appear after the cordin was upgraded to this version",
    "start": "150519",
    "end": "156200"
  },
  {
    "text": "1.11.1 and to make it more complicated when the P was scheduled to worker node",
    "start": "156200",
    "end": "163040"
  },
  {
    "text": "it started to find an issue with this permission denied in some clusters but",
    "start": "163040",
    "end": "168200"
  },
  {
    "text": "in other clusters it was visible for both control plane and worker node there",
    "start": "168200",
    "end": "174239"
  },
  {
    "text": "were few Upstream cordus issues reported at this time when the users were trying to upgrade to version",
    "start": "174239",
    "end": "180760"
  },
  {
    "text": "1.1x but you know it was it was not much of help due to the reason that it was in",
    "start": "180760",
    "end": "185920"
  },
  {
    "text": "very early stage and we couldn't get any PO is over there now we found few workarounds that",
    "start": "185920",
    "end": "193159"
  },
  {
    "text": "said when you change the coordin core file configuration to buy to a port greater than 1024 everything works fine",
    "start": "193159",
    "end": "200720"
  },
  {
    "text": "the reason being as you know from 0 to 10224 are considered to be a privileged",
    "start": "200720",
    "end": "206560"
  },
  {
    "text": "port in the system anything above 1024 considered to be a unprivileged port so",
    "start": "206560",
    "end": "212319"
  },
  {
    "text": "a non-root user can actually bind to that now the second workaround was that if you start the coordinance port with",
    "start": "212319",
    "end": "220040"
  },
  {
    "text": "into 53 Port still it works but you you have to set some parameter unprivileged Port start value to zero in the system",
    "start": "220040",
    "end": "227200"
  },
  {
    "text": "we'll discuss this in detail later and the third workaround was you can start the coordin sport as a root user or a",
    "start": "227200",
    "end": "234680"
  },
  {
    "text": "privileged user things works as well but unfortunately the security implications",
    "start": "234680",
    "end": "239799"
  },
  {
    "text": "Rings we were not able to go with this workarounds now let's take a quick look",
    "start": "239799",
    "end": "246000"
  },
  {
    "text": "at what changed in coordinat version 1.1x as I said the issue started to appear after an upgrade so if you review",
    "start": "246000",
    "end": "253319"
  },
  {
    "text": "the changes in Upstream Docker file of cordin you can see that it started to run as a non-root user as you can see",
    "start": "253319",
    "end": "260680"
  },
  {
    "text": "the user instruction in the end of the docker file and it is still trying to buy to Port 53 now for a nonroot user to",
    "start": "260680",
    "end": "268960"
  },
  {
    "text": "buy to Port 53 you should have some capabilities set on the binary that's",
    "start": "268960",
    "end": "274360"
  },
  {
    "text": "what exactly the Run instruction in the docker file do with the set cap command",
    "start": "274360",
    "end": "279600"
  },
  {
    "text": "you can see the set cap capet M service fors binary set on the docker",
    "start": "279600",
    "end": "286880"
  },
  {
    "text": "file so these were the main changes happened in the Upstream codus version 1.1x and people started to face this",
    "start": "286880",
    "end": "293039"
  },
  {
    "text": "issue afterwards considering that the Linux capabilities and extended attributes",
    "start": "293039",
    "end": "300160"
  },
  {
    "text": "play a crucial role in this troubleshooting journey I want to take a moment to pause step back and cover some",
    "start": "300160",
    "end": "307639"
  },
  {
    "text": "of the fundamental concepts about Linux capabilities now Linux capabilities",
    "start": "307639",
    "end": "312680"
  },
  {
    "text": "operate on the principle of least privilege so instead of having a binary",
    "start": "312680",
    "end": "319080"
  },
  {
    "text": "selection of root or nonroot they allow a specific",
    "start": "319080",
    "end": "326560"
  },
  {
    "text": "or limited capability to set on a process in the system for example just",
    "start": "326560",
    "end": "332280"
  },
  {
    "text": "now we saw the cabinet bind service assigned to the cordus",
    "start": "332280",
    "end": "337720"
  },
  {
    "text": "binary now capabilities can be categorized into process capabilities and file capabilities now process",
    "start": "337720",
    "end": "343919"
  },
  {
    "text": "capabilities are set by the kernel and categorized into different capability sets like the inherited capability set",
    "start": "343919",
    "end": "351360"
  },
  {
    "text": "permitted effective bounding and ambient now at process execution time the",
    "start": "351360",
    "end": "357880"
  },
  {
    "text": "resulting effective capability comes in action for the",
    "start": "357880",
    "end": "363160"
  },
  {
    "text": "binary now if a process acquires cabinet bind service the effective capability set",
    "start": "363160",
    "end": "370240"
  },
  {
    "text": "should have a bit map similar to the one which I we can which you can see in the screen the 400 bit map this actually",
    "start": "370240",
    "end": "377360"
  },
  {
    "text": "derives back to cinet bind service but unfortunately in the setup this bit was",
    "start": "377360",
    "end": "383360"
  },
  {
    "text": "not set now after the process capabilities",
    "start": "383360",
    "end": "388720"
  },
  {
    "text": "we do have some other categorization for file capabilities file capabilities allow a privilege to be directly",
    "start": "388720",
    "end": "395319"
  },
  {
    "text": "assigned to a binary or executable this can be achieved with set cap set FDR commands like that now when",
    "start": "395319",
    "end": "403080"
  },
  {
    "text": "you set the capability information is St in the file attributes of a binary or an",
    "start": "403080",
    "end": "410280"
  },
  {
    "text": "executable which enables the binary or an executable to perform the specified",
    "start": "410280",
    "end": "415680"
  },
  {
    "text": "privilege operations in the system now on to the EXT attributes the extended",
    "start": "415680",
    "end": "421680"
  },
  {
    "text": "attributes helps you to store additional metadata about a file they are commonly",
    "start": "421680",
    "end": "427080"
  },
  {
    "text": "used by security modules like SX system utils like tar and few other U important",
    "start": "427080",
    "end": "434879"
  },
  {
    "text": "commands extent attributes are stored under different name spaces such as user",
    "start": "434879",
    "end": "441280"
  },
  {
    "text": "security trusted and system now as I mentioned earlier when you set a",
    "start": "441280",
    "end": "447360"
  },
  {
    "text": "capability using set cap command the capability value is stored under security name space and capability",
    "start": "447360",
    "end": "453960"
  },
  {
    "text": "attribute now it's important to note that the exted attribute to work the underlying file system has to support it",
    "start": "453960",
    "end": "461520"
  },
  {
    "text": "the file systems like ext4 but ref and all has support for",
    "start": "461520",
    "end": "466720"
  },
  {
    "text": "that now let's come back to kubernetes kubernetes in kubernetes you might have",
    "start": "466720",
    "end": "472759"
  },
  {
    "text": "noticed the capabilities can be configured or assigned from a port spec",
    "start": "472759",
    "end": "479039"
  },
  {
    "text": "this is pretty familiar for you you can actually set the capabilities through the port spec security",
    "start": "479039",
    "end": "484919"
  },
  {
    "text": "context as you can see in the snippet it drops all the capabilities but it add",
    "start": "484919",
    "end": "490520"
  },
  {
    "text": "capet Buy service now putting this together the xnet attributes L capabilities",
    "start": "490520",
    "end": "496720"
  },
  {
    "text": "kubernetes context when a non-root user execute a binary the effect capability",
    "start": "496720",
    "end": "502759"
  },
  {
    "text": "set is populated either through the ambient capabilities or file",
    "start": "502759",
    "end": "508240"
  },
  {
    "text": "capabilities but unfortunately the kubernetes lacks a support for ambient",
    "start": "508240",
    "end": "513959"
  },
  {
    "text": "capabilities when I say kubernetes it's a complete stack starting from APS server to C to The Container runtime it",
    "start": "513959",
    "end": "520719"
  },
  {
    "text": "lacks that support so the only way here is setting the file capabilities on the binary and that's a recommended approach",
    "start": "520719",
    "end": "528720"
  },
  {
    "text": "and this is what exactly the coordin board was trying to do with the Run instruction set cap command on the",
    "start": "528720",
    "end": "537040"
  },
  {
    "text": "binary now the real debugging journe starts I hope you are still with me with",
    "start": "537040",
    "end": "544279"
  },
  {
    "text": "all of this we decided to start from the build process so we do rebuild the",
    "start": "544279",
    "end": "550560"
  },
  {
    "text": "container images Downstream but we mimic the same process as Upstream does the multi-stage build setting the non-root",
    "start": "550560",
    "end": "557839"
  },
  {
    "text": "user setting the port setting the capability on it so the same process we follow in the downstream the first step",
    "start": "557839",
    "end": "565480"
  },
  {
    "text": "was to verify that the particular image when it goes through the process is it",
    "start": "565480",
    "end": "570519"
  },
  {
    "text": "really setting the capability now we were able to verify that the capability was set on the",
    "start": "570519",
    "end": "575760"
  },
  {
    "text": "coords binary by using the commands like get cap and mounting the image and",
    "start": "575760",
    "end": "581240"
  },
  {
    "text": "figuring out like whether the capability was at the build process time and it was fine now even though set cap has set it",
    "start": "581240",
    "end": "588839"
  },
  {
    "text": "properly in the build process we were concerned about like the",
    "start": "588839",
    "end": "594000"
  },
  {
    "text": "runtime has any issues with that for example maybe if there are some issues with incompatibility between in the",
    "start": "594000",
    "end": "600240"
  },
  {
    "text": "shared libraries or maybe due to the missing missing symol resolution or",
    "start": "600240",
    "end": "606360"
  },
  {
    "text": "system calls could fail or drop the capabilities so we were in doubt that and interestingly this led us to uncover",
    "start": "606360",
    "end": "613200"
  },
  {
    "text": "an issue with gipc that said the set cap required the minimum version of GPC to",
    "start": "613200",
    "end": "618480"
  },
  {
    "text": "be on 2.34 and in our Bild system it was just",
    "start": "618480",
    "end": "623959"
  },
  {
    "text": "2.31 version of GPC we were very happy and we thought like we found the issue",
    "start": "623959",
    "end": "629600"
  },
  {
    "text": "and we rebuil the image with required capabilities sorry required gpy version but still the problem",
    "start": "629600",
    "end": "638160"
  },
  {
    "text": "remained now considering the set cap as set in the build process gpy has you",
    "start": "638160",
    "end": "644800"
  },
  {
    "text": "know we have corrected the GPC version so the runtime issues has been taken care the other suspicion was that",
    "start": "644800",
    "end": "652320"
  },
  {
    "text": "something wrong with this particular image we should have something to blame for right yep so we are thinking like",
    "start": "652320",
    "end": "658800"
  },
  {
    "text": "something going wrong with the image and that particular image tag interestingly when we rebuild the image with a",
    "start": "658800",
    "end": "664320"
  },
  {
    "text": "different image tag and when we pull that image to the problematic cluster everything was working fine so we were",
    "start": "664320",
    "end": "672680"
  },
  {
    "text": "able to conclude that it is nothing wrong with the image we built rather it is something wrong with the runtime",
    "start": "672680",
    "end": "679720"
  },
  {
    "text": "setting of The O bundle now let's go to the worker node o",
    "start": "679720",
    "end": "686600"
  },
  {
    "text": "as I said this was only seen in photon o clusters and if you know the for o is an",
    "start": "686600",
    "end": "692560"
  },
  {
    "text": "open source o distribution heavily used by our customers and by the community",
    "start": "692560",
    "end": "698440"
  },
  {
    "text": "now on on the OS side the capabilities are managed by the kernel we were expecting something would be recorded in",
    "start": "698440",
    "end": "704680"
  },
  {
    "text": "the warlog messages or Canal ring buffer we could see some denials on top of it",
    "start": "704680",
    "end": "709800"
  },
  {
    "text": "but unfortunately we were not able to see any evidence of it and the second culprit was as everyone think SX Sox",
    "start": "709800",
    "end": "718240"
  },
  {
    "text": "also operate on security name space so we check the SX status in the system it",
    "start": "718240",
    "end": "725040"
  },
  {
    "text": "was in permissive mode that basically means it won't deny the operation it will just record it you can see those",
    "start": "725040",
    "end": "731440"
  },
  {
    "text": "kind of denials in the audit logs you can use a search or some commands to see",
    "start": "731440",
    "end": "737000"
  },
  {
    "text": "the ABC Vector C and see the denials and we were for for that and couldn't",
    "start": "737000",
    "end": "744680"
  },
  {
    "text": "find SL is actually causing the issue in the system but for the double confirmation we disabled a CX but still",
    "start": "744680",
    "end": "752959"
  },
  {
    "text": "the issue was present now the next thing was to check for cgroup name",
    "start": "752959",
    "end": "759680"
  },
  {
    "text": "spaces yep so in the photono scan it was defaulted to cgroup V2 but in our setup",
    "start": "759680",
    "end": "767279"
  },
  {
    "text": "through the boot config parameter we changed the cgroup setting to version one it's highly unlik unlikely that the",
    "start": "767279",
    "end": "775560"
  },
  {
    "text": "C group would cause some issues with the capabilities but still we checked and we couldn't figure it out any issues with",
    "start": "775560",
    "end": "781320"
  },
  {
    "text": "the c group now we also wanted to make sure that the container network name space is good and it can bind to a port",
    "start": "781320",
    "end": "789000"
  },
  {
    "text": "53 for that we pulled the netcat image in the system and it was able to get get",
    "start": "789000",
    "end": "797800"
  },
  {
    "text": "bu into Port 53 and listen to Port 53 so that worked perfectly",
    "start": "797800",
    "end": "803760"
  },
  {
    "text": "fine now the last thing to check we were actually about to trace the system calls",
    "start": "803760",
    "end": "809600"
  },
  {
    "text": "and see like what's actually happening in the system called stack using estr we",
    "start": "809600",
    "end": "815160"
  },
  {
    "text": "were able to figure it out the b system go was attempted in the system but the Kel returned EP",
    "start": "815160",
    "end": "823360"
  },
  {
    "text": "error at this stage we know that the bind system call was tried when when the",
    "start": "823720",
    "end": "829839"
  },
  {
    "text": "bind system call was tried this the capability was missing on it and which",
    "start": "829839",
    "end": "835199"
  },
  {
    "text": "caused the EPM permission to be denied in the system now now the suspicion turn towards container run",
    "start": "835199",
    "end": "844120"
  },
  {
    "text": "time so now on to the container runtime container D is the default",
    "start": "847880",
    "end": "853240"
  },
  {
    "text": "runtime that we use in our all our uh applic application bundles and like that",
    "start": "853240",
    "end": "858560"
  },
  {
    "text": "what that we ship to our customers and the directory in which the particular Cod DNS binary is present is maintained",
    "start": "858560",
    "end": "866399"
  },
  {
    "text": "by container D that is basically the w Li container directory and this is like how a typical",
    "start": "866399",
    "end": "874079"
  },
  {
    "text": "W Li the container data directory looks you have like separate uh further",
    "start": "874079",
    "end": "879279"
  },
  {
    "text": "directories for like the content images like the metadata and then you have like the overlay FS so the overlay FS is",
    "start": "879279",
    "end": "887440"
  },
  {
    "text": "basically a container snapshot so what a snapshot means is like when you download",
    "start": "887440",
    "end": "893959"
  },
  {
    "text": "a container image from a registry you may have seen like multiple layers getting downloaded so so what a snapshot",
    "start": "893959",
    "end": "900320"
  },
  {
    "text": "does is like it basically extracts each of this layer and then mounts them on",
    "start": "900320",
    "end": "906120"
  },
  {
    "text": "top of each of each one so you finally get a complete root first image which",
    "start": "906120",
    "end": "911160"
  },
  {
    "text": "can be used to run a container and in our case uh in this",
    "start": "911160",
    "end": "917320"
  },
  {
    "text": "snapshot file system actually the CNS binary was missing the capability that",
    "start": "917320",
    "end": "924399"
  },
  {
    "text": "means like whenever the image was extracted and we created the snapshot",
    "start": "924399",
    "end": "929880"
  },
  {
    "text": "the capability was like gone in some stages",
    "start": "929880",
    "end": "934639"
  },
  {
    "text": "somewhere so we first thought like uh it may be an issue with the tar Anar",
    "start": "935639",
    "end": "941040"
  },
  {
    "text": "operation that is being done because there was an old Upstream issue related to the antar uh used in container D not",
    "start": "941040",
    "end": "948279"
  },
  {
    "text": "able to find the uh properly extract the extended attributes but we later figured",
    "start": "948279",
    "end": "954040"
  },
  {
    "text": "out that it is like uh fix like a long time back and the version theity version that we were using like was the 1.6 LTS",
    "start": "954040",
    "end": "960920"
  },
  {
    "text": "version has actually this had this fix and it was like working",
    "start": "960920",
    "end": "965959"
  },
  {
    "text": "fine so what we did next was like we actually wanted to trace the cord path",
    "start": "965959",
    "end": "971279"
  },
  {
    "text": "of like the cctl container D and run C to see if this was actually a CA uh",
    "start": "971279",
    "end": "977399"
  },
  {
    "text": "actually the uh capability missing was happening somewhere in this C path but",
    "start": "977399",
    "end": "982560"
  },
  {
    "text": "that was also not the case one interesting thing was like uh in containerd 1.7 and in the main branch",
    "start": "982560",
    "end": "990160"
  },
  {
    "text": "we rebuilt it and when we deployed it was working fine so the reason was uh",
    "start": "990160",
    "end": "995800"
  },
  {
    "text": "from container D 1.7 onwards the unprivileged port is like by default starting at zero so from till 1.6 it is",
    "start": "995800",
    "end": "1003920"
  },
  {
    "text": "like set at one24 so without the root permission you cannot start it from 1.7 it's since it like at zero you can start",
    "start": "1003920",
    "end": "1010839"
  },
  {
    "text": "it like without root permission so that was also not a",
    "start": "1010839",
    "end": "1015959"
  },
  {
    "text": "case now we actually check the work flow of like excuse me yeah uh when container",
    "start": "1015959",
    "end": "1024520"
  },
  {
    "text": "works with like why the C and via the CTR if there is a difference so the",
    "start": "1024520",
    "end": "1030160"
  },
  {
    "text": "deployment was since actually it was via kubernetes we wanted to check if there is any Behavior difference when the",
    "start": "1030160",
    "end": "1036480"
  },
  {
    "text": "image extraction and creating the snapshot happens via the CRA API and",
    "start": "1036480",
    "end": "1041798"
  },
  {
    "text": "when we are directly importing the image in container D and then running it but that was also of new no use because we",
    "start": "1041799",
    "end": "1047760"
  },
  {
    "text": "figured out that both behaviors are actually same both of them call the same apas and then Works underneath in the",
    "start": "1047760",
    "end": "1054320"
  },
  {
    "text": "same exact Manner and another interesting issue was like when we pull the exact same image",
    "start": "1054320",
    "end": "1061520"
  },
  {
    "text": "to another name space the issue was not there so uh the images from like the",
    "start": "1061520",
    "end": "1069240"
  },
  {
    "text": "kubernetes or the CRI side are basically run in the ks or name space when we are running this issue uh when we are",
    "start": "1069240",
    "end": "1075640"
  },
  {
    "text": "running the coordin in manually in any other name space we are not able to hit the",
    "start": "1075640",
    "end": "1081880"
  },
  {
    "text": "issue so the conclusion from this is that the capability is missing in the",
    "start": "1081880",
    "end": "1087799"
  },
  {
    "text": "container file system and it got changed uh at some point between the container",
    "start": "1087799",
    "end": "1094280"
  },
  {
    "text": "image build process and it was like present in the uh container file system",
    "start": "1094280",
    "end": "1099720"
  },
  {
    "text": "so now our suspicion actually changed to the uh Photon image build",
    "start": "1099720",
    "end": "1106360"
  },
  {
    "text": "process so now let's take a look at at the machine image build process so in",
    "start": "1106360",
    "end": "1112120"
  },
  {
    "text": "our cases uh most of our customers are actually running in air gap environments for this particular reason we actually",
    "start": "1112120",
    "end": "1118720"
  },
  {
    "text": "have all our container images baked into the OS image itself so that like we don't need to contact any external",
    "start": "1118720",
    "end": "1124760"
  },
  {
    "text": "server or anything for like pulling the images we actually went to the went through the machine image build process",
    "start": "1124760",
    "end": "1130919"
  },
  {
    "text": "to see if there were any steps that actually touched the container images or",
    "start": "1130919",
    "end": "1136000"
  },
  {
    "text": "the container defile system and there were like a few steps in that process so",
    "start": "1136000",
    "end": "1141039"
  },
  {
    "text": "we were downloading the contain the core DNS image that we built uh it was saved",
    "start": "1141039",
    "end": "1147120"
  },
  {
    "text": "as like a tar file in an artifactory we were downloading it uh and un tarring it",
    "start": "1147120",
    "end": "1153320"
  },
  {
    "text": "editing the manifest.json file for like some adding some custom fields and then like creating uh taring it again and",
    "start": "1153320",
    "end": "1160799"
  },
  {
    "text": "then doing the CTR images import so this CTR images import actually uh Imports",
    "start": "1160799",
    "end": "1166280"
  },
  {
    "text": "the image and then loads it into the snapshot f file system so since the tar command was again used in this step and",
    "start": "1166280",
    "end": "1173120"
  },
  {
    "text": "previously we had seen an issue with container D tar long long time back we thought like maybe the tar used in this",
    "start": "1173120",
    "end": "1179919"
  },
  {
    "text": "process was like very old and that didn't have the extended attribute support but that was also bad luck the S",
    "start": "1179919",
    "end": "1187400"
  },
  {
    "text": "attribute supports were were there for the tar and like that was also not EOS",
    "start": "1187400",
    "end": "1193000"
  },
  {
    "text": "also further debugging through the machine image build process we found that like some SE Linux re relabeling or",
    "start": "1193000",
    "end": "1199799"
  },
  {
    "text": "hardening steps were happening uh that was also touching the container file system but like that that also didn't",
    "start": "1199799",
    "end": "1207520"
  },
  {
    "text": "change the capability that was present in the machine image build to make it sure that like there was no issue with",
    "start": "1207520",
    "end": "1214080"
  },
  {
    "text": "the machine image build process we manually booted the final image that was",
    "start": "1214080",
    "end": "1219440"
  },
  {
    "text": "built and found that in the snapshot file system the capability was present",
    "start": "1219440",
    "end": "1225240"
  },
  {
    "text": "on the CNS binary so from this our conclusion is that the machine image build process is",
    "start": "1225240",
    "end": "1231799"
  },
  {
    "text": "perfectly fine the problem is happening somewhere between the machine is booting",
    "start": "1231799",
    "end": "1237520"
  },
  {
    "text": "and uh between the build process so now let's go to the node",
    "start": "1237520",
    "end": "1243240"
  },
  {
    "text": "initialization step so for node initialization we are",
    "start": "1243240",
    "end": "1248559"
  },
  {
    "text": "using cluster API V provider for basically initializing the node so I",
    "start": "1248559",
    "end": "1253640"
  },
  {
    "text": "will go give a rough idea of how cluster API uh or capy cap uh boots our",
    "start": "1253640",
    "end": "1261000"
  },
  {
    "text": "node so initially we have a we give a the cluster admin or creates a machine",
    "start": "1261000",
    "end": "1266120"
  },
  {
    "text": "image that we built in the previous step with a cluster class and then the end",
    "start": "1266120",
    "end": "1271840"
  },
  {
    "text": "user basically creates a cluster object which is then reconciled to create a",
    "start": "1271840",
    "end": "1277360"
  },
  {
    "text": "machine deployment and from there it goes to machine set and then a machine",
    "start": "1277360",
    "end": "1283840"
  },
  {
    "text": "and a VP machine objects are created from here on Cape takes up and the Vere",
    "start": "1283840",
    "end": "1290000"
  },
  {
    "text": "machine is reconciled to create a virtual machine uh object which actually",
    "start": "1290000",
    "end": "1296320"
  },
  {
    "text": "has some Cloud unit config ET for like additional booting purposes and from cap",
    "start": "1296320",
    "end": "1302720"
  },
  {
    "text": "then the VM operator take takes in that's actually part of the vsphere which reconciles a virtual machine",
    "start": "1302720",
    "end": "1309919"
  },
  {
    "text": "custom resource and then creates the actual BM using the configuration on the",
    "start": "1309919",
    "end": "1316360"
  },
  {
    "text": "in in Vere so now the we figured out maybe the",
    "start": "1316360",
    "end": "1322480"
  },
  {
    "text": "issues like happening at boot time and cloud in it is a component in the boot",
    "start": "1322480",
    "end": "1327600"
  },
  {
    "text": "operation so now like our suspicion actually turned towards Cloud init so now let's see how Cloud init is",
    "start": "1327600",
    "end": "1336559"
  },
  {
    "text": "doing so again like the same steps that we did in like image machine image build we we were actually manually checking",
    "start": "1336559",
    "end": "1342640"
  },
  {
    "text": "through the complete cloud in steps to see if there were any areas or like any",
    "start": "1342640",
    "end": "1348240"
  },
  {
    "text": "steps in which the container file system was being touched so we found out about like there was uh certain areas of code",
    "start": "1348240",
    "end": "1355240"
  },
  {
    "text": "in which like we were moving the container snapshot file system to an external disk so this was done uh so",
    "start": "1355240",
    "end": "1362159"
  },
  {
    "text": "that like there will be cases where customers will be like downloading lot of container images and the dis getting",
    "start": "1362159",
    "end": "1368120"
  },
  {
    "text": "filled up so most of them used to have like an additional dis with just a",
    "start": "1368120",
    "end": "1373360"
  },
  {
    "text": "container data directory mounted in it so that like uh more more storage spaces",
    "start": "1373360",
    "end": "1379679"
  },
  {
    "text": "available for them to uh utilize so the what we found was a capability was",
    "start": "1379679",
    "end": "1387480"
  },
  {
    "text": "missing in this new Mount path on the new dis and since Mount operation is",
    "start": "1387480",
    "end": "1392600"
  },
  {
    "text": "being done here like our susp now turn towards",
    "start": "1392600",
    "end": "1397559"
  },
  {
    "text": "M yep so sometime back I was explaining that the for the extended attribute to work you should have support from the",
    "start": "1399559",
    "end": "1406720"
  },
  {
    "text": "file system underlying file system system so we have a separate Mount Point War liity has been mounted to/ sdb1 in",
    "start": "1406720",
    "end": "1414400"
  },
  {
    "text": "the system and the underlying file system is ext4 now we were checking is there any Mount Flags which has been",
    "start": "1414400",
    "end": "1420919"
  },
  {
    "text": "used in the ETC FS tab which actually caused the exted attribute to be lost",
    "start": "1420919",
    "end": "1426480"
  },
  {
    "text": "then we found that there is no extra Mount Flags has been used in the system",
    "start": "1426480",
    "end": "1431720"
  },
  {
    "text": "the underlying file system also has support for extended attribute by checking the T tun2",
    "start": "1431720",
    "end": "1439080"
  },
  {
    "text": "binary command with that we are sure that there is nothing wrong with the mount process",
    "start": "1439080",
    "end": "1446200"
  },
  {
    "text": "but what else could be missing the attributes I'll take it over so I think like we are almost there",
    "start": "1446200",
    "end": "1454200"
  },
  {
    "text": "so now looking back at the commands that are present in the uh cloud in section",
    "start": "1454200",
    "end": "1459840"
  },
  {
    "text": "we already checked the mount operation and found that that was not an issue now there are like two more sections that we",
    "start": "1459840",
    "end": "1466200"
  },
  {
    "text": "need to inspect the first one one is uh temper first because like we were first",
    "start": "1466200",
    "end": "1471919"
  },
  {
    "text": "creating a temporary directory and then copying it and the second section is where we actually move the container",
    "start": "1471919",
    "end": "1478960"
  },
  {
    "text": "data directory to the um external disk so when we checked temp first we found",
    "start": "1478960",
    "end": "1484679"
  },
  {
    "text": "that it had the S attribute support so now the final part only that we have to",
    "start": "1484679",
    "end": "1490039"
  },
  {
    "text": "remaining is like the MV command so I think we are almost there",
    "start": "1490039",
    "end": "1496440"
  },
  {
    "text": "and we found the culprit so to I will give a brief explanation of",
    "start": "1496440",
    "end": "1503159"
  },
  {
    "text": "like how the MV command works when we are on the same FS the move is basically",
    "start": "1503159",
    "end": "1509159"
  },
  {
    "text": "a rename CIS that that happens and when on like different file system a move",
    "start": "1509159",
    "end": "1514679"
  },
  {
    "text": "command is basically a copy plus delete so in our case it was a different file",
    "start": "1514679",
    "end": "1520159"
  },
  {
    "text": "system because like we were moving from one disk to the other Mount Point uh",
    "start": "1520159",
    "end": "1525440"
  },
  {
    "text": "like from the rout disc to the sdb1 and in our case so then we needed to",
    "start": "1525440",
    "end": "1531320"
  },
  {
    "text": "check if the CP command was like working properly and when we tried to copy a",
    "start": "1531320",
    "end": "1538320"
  },
  {
    "text": "sample file with a uh by preserving a s attribute we found that uh though CP had",
    "start": "1538320",
    "end": "1545320"
  },
  {
    "text": "the support for the flag actually it was erroring out when you are trying to copy the S",
    "start": "1545320",
    "end": "1551440"
  },
  {
    "text": "attributes so but when called from inside MV actually this error was silently ignored so therefore like even",
    "start": "1551440",
    "end": "1558840"
  },
  {
    "text": "if you do MV the file was getting copied but the the ex attributes were not",
    "start": "1558840",
    "end": "1564279"
  },
  {
    "text": "getting copied that means like our capabilities were just lost so now taking a quick look at the",
    "start": "1564279",
    "end": "1571880"
  },
  {
    "text": "solution uh it was like we needed to rebuild our core utils with additional s",
    "start": "1571880",
    "end": "1578039"
  },
  {
    "text": "attribute support and we had to change the spec file so that like the attribute",
    "start": "1578039",
    "end": "1583399"
  },
  {
    "text": "uh devel package also had to be added uh to build the S attribute support and this was like basically the solution",
    "start": "1583399",
    "end": "1588880"
  },
  {
    "text": "patch that we had to apply and that's it so like basically",
    "start": "1588880",
    "end": "1595200"
  },
  {
    "text": "something that I want to tell is like core utils and commands like MV and",
    "start": "1595200",
    "end": "1600880"
  },
  {
    "text": "CP are something that we take for granted and always expect to work but like in case of like issues like this",
    "start": "1600880",
    "end": "1607720"
  },
  {
    "text": "you may need to get deeper into it and like see like where exactly the issue is",
    "start": "1607720",
    "end": "1612799"
  },
  {
    "text": "happening so some things that actually uh if or a few questions that came",
    "start": "1612799",
    "end": "1618640"
  },
  {
    "text": "across that confused us along the way of debugging where why not it uh in ubu and",
    "start": "1618640",
    "end": "1624960"
  },
  {
    "text": "like only in phon the coreutils package that we were using in ubu was actually",
    "start": "1624960",
    "end": "1630000"
  },
  {
    "text": "built with s attribute support but in photon like something happened in between and and in the in the build",
    "start": "1630000",
    "end": "1636240"
  },
  {
    "text": "process we actually miss doing this flag another reason was like why the",
    "start": "1636240",
    "end": "1642080"
  },
  {
    "text": "control plane notes work and why not the worker notes were not working so you may have noticed that the move operation",
    "start": "1642080",
    "end": "1649200"
  },
  {
    "text": "only happens when you are coping from one dis to the another and the only our",
    "start": "1649200",
    "end": "1655279"
  },
  {
    "text": "worker notes had an additional dis because like the worker notes actually had a use case for like getting",
    "start": "1655279",
    "end": "1660840"
  },
  {
    "text": "additional data or additional uh data needed in the uh container defile system",
    "start": "1660840",
    "end": "1666880"
  },
  {
    "text": "so in control plane notes addition extra dis was not added and this issue never",
    "start": "1666880",
    "end": "1673080"
  },
  {
    "text": "surfaced and in some cases like the same image with a different tag worked in another CL so the explanation for that",
    "start": "1673080",
    "end": "1680039"
  },
  {
    "text": "was when you pull a new image kind in a different name space or with a different",
    "start": "1680039",
    "end": "1686640"
  },
  {
    "text": "tag actually container D pulls it and recreates the snapshot from the image",
    "start": "1686640",
    "end": "1691919"
  },
  {
    "text": "star so since our container image Star had the capability when container was",
    "start": "1691919",
    "end": "1697159"
  },
  {
    "text": "actually extracting it again and in the new snapshot the capability was present",
    "start": "1697159",
    "end": "1702480"
  },
  {
    "text": "so that was also explained and the another cause of confusion that like humble mentioned",
    "start": "1702480",
    "end": "1708960"
  },
  {
    "text": "earlier like there were some issues like in the Upstream like there permission denied issues were there uh but like",
    "start": "1708960",
    "end": "1715320"
  },
  {
    "text": "that was also in ubu so that actually the users have to figure out or let's catch up on how to do it that's it and",
    "start": "1715320",
    "end": "1722840"
  },
  {
    "text": "thank you thank you [Applause]",
    "start": "1722840",
    "end": "1728059"
  },
  {
    "text": "folks if you have any questions on our debugging Journey like can ask now",
    "start": "1729960",
    "end": "1736720"
  },
  {
    "text": "I believe is M by have we come across any such other scenario there so",
    "start": "1740720",
    "end": "1748120"
  },
  {
    "text": "many we are not even sure that this issue might happen there because they have not gone that",
    "start": "1753399",
    "end": "1760398"
  },
  {
    "text": "far just two weeks because it's like a ping pong game you blame someone and",
    "start": "1761080",
    "end": "1766279"
  },
  {
    "text": "push into their Court comes back so but we persisted and we were able to figure it",
    "start": "1766279",
    "end": "1772840"
  },
  {
    "text": "out yes because like we have a Docker registry where you store the images and",
    "start": "1776039",
    "end": "1781200"
  },
  {
    "text": "it's like kind of immutable but if you build or pull a new image the con file",
    "start": "1781200",
    "end": "1786960"
  },
  {
    "text": "system get populated with that and the set cap was not lost because the move operation was not there",
    "start": "1786960",
    "end": "1793600"
  },
  {
    "text": "Sol you change the tag what is the motivation to go down the",
    "start": "1793600",
    "end": "1798799"
  },
  {
    "text": "because customer we had to actually find the",
    "start": "1798799",
    "end": "1804159"
  },
  {
    "text": "root cause of why it was happening yeah we were just isolating the layers because this is like one Mark around okay we but we don't know like if the",
    "start": "1804159",
    "end": "1810039"
  },
  {
    "text": "next IM that we build will actually cause the issue or not yep thank you folks",
    "start": "1810039",
    "end": "1816640"
  }
]