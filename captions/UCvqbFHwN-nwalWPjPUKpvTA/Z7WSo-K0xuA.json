[
  {
    "text": "hello everyone um thank you for coming to our talk I guess uh my name's Tom I'm a Solutions",
    "start": "299",
    "end": "7020"
  },
  {
    "text": "engineer at jetstack um I've been working with kubernetes now which is kind of scary I guess like",
    "start": "7020",
    "end": "13019"
  },
  {
    "text": "three or four years yeah three years or so um I promise I don't still don't claim to be an expert but I work for a",
    "start": "13019",
    "end": "19560"
  },
  {
    "text": "consultancy called jetstack um so we at least try and help people doing kubernetes um fail a lot along the way but you know",
    "start": "19560",
    "end": "26039"
  },
  {
    "text": "that's all part of the process I'm joined here by my colleague Josh um yeah hi everyone I'm Josh",
    "start": "26039",
    "end": "32040"
  },
  {
    "text": "um I'm a software engineer diagram so I'm a project maintainer for site",
    "start": "32040",
    "end": "37079"
  },
  {
    "text": "manager I've been working on that project for quite a number of years and uh yeah more recently working a lot on",
    "start": "37079",
    "end": "42480"
  },
  {
    "text": "dapper but yeah today we're going to talk about seven manager yeah um so I",
    "start": "42480",
    "end": "47820"
  },
  {
    "text": "hope you're all here to hear the answer of the question cert manager can it do spiffy",
    "start": "47820",
    "end": "55800"
  },
  {
    "text": "um so without further Ado let's try and answer that question",
    "start": "55800",
    "end": "61440"
  },
  {
    "text": "do you want to do the slides because if I go to voice that then I've got the problem so",
    "start": "61440",
    "end": "67020"
  },
  {
    "text": "I am a cert manager user please put your hands up if you've used cert manager yeah there we go see it's one of those",
    "start": "67020",
    "end": "73619"
  },
  {
    "text": "tools where you know that like you're going to get a good response anyone that's heard of cert manager and wants to know a little bit more about it",
    "start": "73619",
    "end": "81240"
  },
  {
    "text": "if the answer is yeah if the answer is yes we've got a booth I believe it's at K9 like the dog easy to remember",
    "start": "81240",
    "end": "87780"
  },
  {
    "text": "um some of my colleagues at jetsack are here as well and they can help you along your way so",
    "start": "87780",
    "end": "93299"
  },
  {
    "text": "I'm a term manager user and my journey with cert manager started about three or four years ago I was in",
    "start": "93299",
    "end": "100439"
  },
  {
    "text": "my office um in in my my cubicle at VMware um it was a dark dreary evening and I",
    "start": "100439",
    "end": "106920"
  },
  {
    "text": "spent many hours trying to get my GK cluster to expose my sock shop service to the public internet so I could show",
    "start": "106920",
    "end": "113460"
  },
  {
    "text": "my parents even though they have absolutely no interest but there we go sorry mum and dad",
    "start": "113460",
    "end": "119040"
  },
  {
    "text": "um I came up with this message and of course like if you want to look professional to all your friends and",
    "start": "119040",
    "end": "124560"
  },
  {
    "text": "family this isn't exactly what you want off the face of it as I was still learning I didn't know why but it was",
    "start": "124560",
    "end": "130560"
  },
  {
    "text": "something to do with the certificate apparently I needed a certificate to get this message to go away what an absolute bother so as any good engineer does I",
    "start": "130560",
    "end": "137940"
  },
  {
    "text": "went back to Google and I asked Google how do I solve this problem on gke if you're on gke there's this",
    "start": "137940",
    "end": "144959"
  },
  {
    "text": "tool called Google managed SSL which directly integrates into kubernetes on",
    "start": "144959",
    "end": "150060"
  },
  {
    "text": "gke and has some custom crds to help you um vend and mint certificates into your",
    "start": "150060",
    "end": "156840"
  },
  {
    "text": "Ingress controllers to get that horrible NASA's nasty message to go away unfortunately I didn't have much success",
    "start": "156840",
    "end": "164700"
  },
  {
    "text": "um I spent many hours trying to get this to work and to no avail um yeah it was it was without without",
    "start": "164700",
    "end": "173040"
  },
  {
    "text": "um yeah without exaggeration an absolute nightmare so as any really good engineer does I stopped and go well how about",
    "start": "173040",
    "end": "178920"
  },
  {
    "text": "another Google then and I went ahead did another Google and I found a blog post",
    "start": "178920",
    "end": "184379"
  },
  {
    "text": "and it told me about the Contour Ingress controller which I was using at the time",
    "start": "184379",
    "end": "189420"
  },
  {
    "text": "as I was a VMware as a VMware project but it also told me about this thing called cert manager and it's run by",
    "start": "189420",
    "end": "195360"
  },
  {
    "text": "these people at jet stack it also had like three steps and it looked like it was gonna be like a five minute task and",
    "start": "195360",
    "end": "201239"
  },
  {
    "text": "I thought you know if this means it can work and I can just go home that's amazing lo and behold it worked",
    "start": "201239",
    "end": "207120"
  },
  {
    "text": "literally like magic all I needed to do was install the operator which is a",
    "start": "207120",
    "end": "212159"
  },
  {
    "text": "relatively easy task if you can use Cube CTL apply and I set it up set up a cluster issue with let's encrypt and I",
    "start": "212159",
    "end": "218580"
  },
  {
    "text": "was ready to go it literally worked like magic and I felt like a wizard of course though I'm not a wizard and I",
    "start": "218580",
    "end": "225599"
  },
  {
    "text": "wasn't the wizard in this case in this case the real Wizards and witches are the maintainers",
    "start": "225599",
    "end": "231180"
  },
  {
    "text": "um and creators of the cert manager project um along with a couple of others of course I was using kubernetes which",
    "start": "231180",
    "end": "236940"
  },
  {
    "text": "automated it all and made it so seamless and I also used the letting project they were the people that were issuing",
    "start": "236940",
    "end": "242760"
  },
  {
    "text": "me the certificates in the first place from their CA that they provide completely for free all of this is the",
    "start": "242760",
    "end": "247980"
  },
  {
    "text": "real magic um and I was just the you know lucky beneficiary of it all so fast forward on",
    "start": "247980",
    "end": "254700"
  },
  {
    "text": "my journey a little bit further I want to talk to you about authentication why do I want to talk about Authentication",
    "start": "254700",
    "end": "261000"
  },
  {
    "text": "what about it well the reason why and before I move on this is a lovely picture that I actually got created for",
    "start": "261000",
    "end": "267180"
  },
  {
    "text": "me with Darley if anyone's familiar with that I think I typed something in like um engineer freaking out as they lose",
    "start": "267180",
    "end": "273960"
  },
  {
    "text": "all their keys um yeah very reflective you'll see it a few a few more times it's sort of like my anthem for this talk",
    "start": "273960",
    "end": "280979"
  },
  {
    "text": "um so what about authentication well um I forward",
    "start": "280979",
    "end": "286800"
  },
  {
    "text": "through in my journey a little bit further I started dabbling with the home lab thing",
    "start": "286800",
    "end": "292259"
  },
  {
    "text": "um I had a kubernetes cluster running in my kitchen that definitely wasn't doing any sort of online privacy uh sorry",
    "start": "292259",
    "end": "298259"
  },
  {
    "text": "online piracy of any kind definitely not um I wanted it to connect to other",
    "start": "298259",
    "end": "303840"
  },
  {
    "text": "services I wanted to start using the public clouds and being all hip and cool and I asked the question again on Google",
    "start": "303840",
    "end": "310020"
  },
  {
    "text": "how do I do that well it said you need a service account and you also need a service account key so I thought well",
    "start": "310020",
    "end": "316080"
  },
  {
    "text": "there's a lovely UI to do that click click click no problems no questions asked I went to this UI it said that",
    "start": "316080",
    "end": "323460"
  },
  {
    "text": "there's some security risk I said well I've got nothing to hide I'm not doing any online piracy so anyone can access my stuff right so it's not a problem so",
    "start": "323460",
    "end": "330300"
  },
  {
    "text": "I went ahead and I created my key um and it came up with status active it",
    "start": "330300",
    "end": "335820"
  },
  {
    "text": "even downloaded it automatically to my laptop how could it be any easier",
    "start": "335820",
    "end": "340860"
  },
  {
    "text": "to make it even more easy there's this lovely key expiry date right here it told me that my key was available until",
    "start": "340860",
    "end": "347400"
  },
  {
    "text": "99.99 like I'm not even sure if the human race is going to be around in 99.99 and I",
    "start": "347400",
    "end": "353160"
  },
  {
    "text": "guess we'll I mean hopefully we'll never know um but what that definitely means is long past my my living life",
    "start": "353160",
    "end": "360600"
  },
  {
    "text": "um unless technology speeds up at an alarming rate it will be available for",
    "start": "360600",
    "end": "366000"
  },
  {
    "text": "people or me to use now though looking back I'm spending a bit of time doing security is terrifying",
    "start": "366000",
    "end": "372780"
  },
  {
    "text": "even worse than that at the time I thought well I've got a lovely GitHub repository why don't I just plop it in",
    "start": "372780",
    "end": "377880"
  },
  {
    "text": "there as well it's a private repository no one can see it it's fine totally fine so I did my git ad and lo and behold two",
    "start": "377880",
    "end": "384660"
  },
  {
    "text": "or three years later there's this lovely tool called GitHub autopilot and all of a sudden everyone's getting my um my my",
    "start": "384660",
    "end": "390720"
  },
  {
    "text": "uh service account key that has project wide privileges to do whatever they want and jobs are good obviously at the time",
    "start": "390720",
    "end": "397680"
  },
  {
    "text": "I couldn't have seen this um and I honestly didn't care and didn't understand the repercussions but this is a disaster",
    "start": "397680",
    "end": "403800"
  },
  {
    "text": "moving on a little bit further this is sort of at the point where I started to become a consultant I was working for a company now and like people expect me to",
    "start": "403800",
    "end": "410340"
  },
  {
    "text": "do things the right way and do it like you know securely um so I was working on Google Cloud's",
    "start": "410340",
    "end": "415919"
  },
  {
    "text": "gke for a customer again and I came across this lovely feature in gke called Google Cloud website identity",
    "start": "415919",
    "end": "423000"
  },
  {
    "text": "I configure some stuff in Google Cloud I am and I add an annotation all of a sudden I can just start firing",
    "start": "423000",
    "end": "429360"
  },
  {
    "text": "API requests from iPod to Google Cloud anywhere I want and it lets me do whatever I want provided that the uh",
    "start": "429360",
    "end": "435360"
  },
  {
    "text": "permissions of my linked service account in Google Cloud allows me to again it's",
    "start": "435360",
    "end": "441000"
  },
  {
    "text": "magic in this case though there's one main drawback to this of course I was running",
    "start": "441000",
    "end": "446039"
  },
  {
    "text": "in Google Cloud's gke and I was connecting to Google cloud services and while it's a very pretty colorful Garden",
    "start": "446039",
    "end": "452580"
  },
  {
    "text": "it is a Walled Garden I can't just start firing those API requests and setting up",
    "start": "452580",
    "end": "457860"
  },
  {
    "text": "workload identity seamlessly straightforward out the box on any kubernetes cluster or service running",
    "start": "457860",
    "end": "463740"
  },
  {
    "text": "all over the shop for that matter what if I'm in a different Cloud what if it's my Raspberry Pi at home it's not that",
    "start": "463740",
    "end": "469080"
  },
  {
    "text": "simple so at this point someone says oh yeah but you can use a password manager for",
    "start": "469080",
    "end": "474180"
  },
  {
    "text": "that sorry secret manager rather you've got some lovely tools like the Google manage one and the AWS Secrets manager",
    "start": "474180",
    "end": "480060"
  },
  {
    "text": "and hashicorp Vault that you'll all be familiar with and I know it's not it's not as simple as a question to ask but I",
    "start": "480060",
    "end": "486419"
  },
  {
    "text": "asked myself the question I started using it and it actually got quite complicated quite quickly where do I store the secret that lets me access the",
    "start": "486419",
    "end": "492900"
  },
  {
    "text": "secrets this was a question that I've been given answers to and for full disclosure there",
    "start": "492900",
    "end": "498120"
  },
  {
    "text": "are some really elegant Solutions in the hashicot vault tool that allow you to do this seamlessly in a TM secure way but",
    "start": "498120",
    "end": "505080"
  },
  {
    "text": "still it's a problem that I think in my journey the entire time hasn't quite made sense",
    "start": "505080",
    "end": "510259"
  },
  {
    "text": "and hopefully it I really hope it shouldn't involve more long-lived static",
    "start": "510259",
    "end": "515940"
  },
  {
    "text": "keys right well unfortunately in some cases if you do it wrong it actually",
    "start": "515940",
    "end": "521159"
  },
  {
    "text": "does totally scary so let's move on a little bit and",
    "start": "521159",
    "end": "526380"
  },
  {
    "text": "hopefully this is what you're all here for what if there was a world where all of this could be done seamlessly where",
    "start": "526380",
    "end": "532440"
  },
  {
    "text": "having to use secrets to authenticate was just a thing of the past well",
    "start": "532440",
    "end": "538200"
  },
  {
    "text": "hopefully it is that simple and so hopefully I'd like to introduce you to the secure production identity framework",
    "start": "538200",
    "end": "545100"
  },
  {
    "text": "for everyone it's for you it's for you it's for everyone",
    "start": "545100",
    "end": "550260"
  },
  {
    "text": "um obviously that's a horrible long name and the maintainers did us a massive favor and called it spiffy for short but",
    "start": "550260",
    "end": "556560"
  },
  {
    "text": "spiffy essentially is that promise it's a framework that an open source framework that defines a standard for",
    "start": "556560",
    "end": "562380"
  },
  {
    "text": "defining what a workload or a machine identity is so what does that actually look like in",
    "start": "562380",
    "end": "568320"
  },
  {
    "text": "practice well let's come back to my Raspberry Pi in my home in my kitchen and we have my kubernetes pod",
    "start": "568320",
    "end": "575640"
  },
  {
    "text": "what's this identity well it might have a DNS name and the cluster's internal DNS but it definitely doesn't serve as",
    "start": "575640",
    "end": "581820"
  },
  {
    "text": "anything as good as this right so it's kind of embarrassing that actually is me this is my currently active provisional",
    "start": "581820",
    "end": "588180"
  },
  {
    "text": "driver's license I know it looks absolutely nothing like me I was going for like a Justin Bieber look back in I",
    "start": "588180",
    "end": "593399"
  },
  {
    "text": "think it was like 20 2012 when this was taken um a long time has passed but you can see that if I want to go go to a",
    "start": "593399",
    "end": "600420"
  },
  {
    "text": "nightclub if I'm going on my first date and hopefully my date doesn't see the the ideas it's totally embarrassing",
    "start": "600420",
    "end": "605820"
  },
  {
    "text": "um I present this to the person and that is my identity what if we could have the same thing of course not like this this",
    "start": "605820",
    "end": "612360"
  },
  {
    "text": "is more like a jdbt where it's totally a secret and um if it gets leaked could be a problem",
    "start": "612360",
    "end": "618360"
  },
  {
    "text": "um which we'll come on to a bit later um but what if we had something like this for the kubernetes pod so what",
    "start": "618360",
    "end": "624060"
  },
  {
    "text": "would that look like well we have in this case like a document for the workload and you'll see at the bottom",
    "start": "624060",
    "end": "630180"
  },
  {
    "text": "there's this sort of string that says something spiffy um colon slash so what",
    "start": "630180",
    "end": "635820"
  },
  {
    "text": "is that spiffy colon slash well if you go forward a slide",
    "start": "635820",
    "end": "640860"
  },
  {
    "text": "um let's come back to my kubernetes pod so I have a document just on the top right hand side of the pod that's within",
    "start": "640860",
    "end": "646680"
  },
  {
    "text": "the Pod and that's called an svid that is a spiffy verifiable identity document",
    "start": "646680",
    "end": "652260"
  },
  {
    "text": "inside of that verifiable identity document this is the pods equivalent to my horrible provisional driver's license",
    "start": "652260",
    "end": "659519"
  },
  {
    "text": "um we have a spiffy ID a spiffy ID is a URI format which in case it contains",
    "start": "659519",
    "end": "665279"
  },
  {
    "text": "information about that workload it has information about the workload itself on the extension and where the",
    "start": "665279",
    "end": "672120"
  },
  {
    "text": "hosting is in the URI it has the trust domain so the trust domain is pretty much to the discretion of an",
    "start": "672120",
    "end": "678120"
  },
  {
    "text": "organization as to how they want to Define it but it is essentially a security boundary if you consider the",
    "start": "678120",
    "end": "683940"
  },
  {
    "text": "pods in a in a cluster or services in a set of infrastructure have a set of",
    "start": "683940",
    "end": "689220"
  },
  {
    "text": "public trust routes some trust bundles in the x509 world that they trust then a",
    "start": "689220",
    "end": "696540"
  },
  {
    "text": "trust domain is essentially a set of workloads that have the same definition of trust across across the the domain so",
    "start": "696540",
    "end": "705120"
  },
  {
    "text": "what did this look like in real life well in my kitchen for instance it might be tom.cluster",
    "start": "705120",
    "end": "711480"
  },
  {
    "text": "all my pods in the cluster have the same public trust bundles so therefore they're in the same trust domain and",
    "start": "711480",
    "end": "718440"
  },
  {
    "text": "they're within my tom.cluster organization um I've got my pod of course and I could",
    "start": "718440",
    "end": "724500"
  },
  {
    "text": "just say like the name of the Pod or the Pod identity but really I want to know who it is that's running it right in",
    "start": "724500",
    "end": "730860"
  },
  {
    "text": "this case of course my pod is being run by a service account so it probably makes sense to make the spiffy ID",
    "start": "730860",
    "end": "736740"
  },
  {
    "text": "reflect the server's account name that's running the Pod so that's really helpful",
    "start": "736740",
    "end": "741779"
  },
  {
    "text": "if I want to identify what it is if I'm not um the Pod itself also I might want some",
    "start": "741779",
    "end": "747180"
  },
  {
    "text": "extra information in the kubernetes world so I might also want the namespace that it's in in this case service",
    "start": "747180",
    "end": "752459"
  },
  {
    "text": "account pod01 is inside of the namespace default and it's running the pot brilliant",
    "start": "752459",
    "end": "758399"
  },
  {
    "text": "seems pretty pretty good so how does that actually work in real life how do I use that svid document my spiffy ID",
    "start": "758399",
    "end": "765240"
  },
  {
    "text": "embedded within this document well I've got my pod and that pod has a spiffy ID",
    "start": "765240",
    "end": "770459"
  },
  {
    "text": "and I'm talking to another pod it's at this time it's not in my Raspberry Pi in my kitchen it's actually on Josh's",
    "start": "770459",
    "end": "776279"
  },
  {
    "text": "cluster so Josh's cluster is a separate trust domain of josh.cluster and it is",
    "start": "776279",
    "end": "782700"
  },
  {
    "text": "service account pod02 in the default namespace of course for this all to work",
    "start": "782700",
    "end": "787920"
  },
  {
    "text": "um the part when it's communicating with the other pod needs to present its Biffy ID to prove its identity and it really",
    "start": "787920",
    "end": "793680"
  },
  {
    "text": "needs two things one I'm going to focus on here of course it needs some policy so there needs to be some policy on each",
    "start": "793680",
    "end": "799139"
  },
  {
    "text": "side on Tom's cluster that Tom's cluster should trust Josh's cluster and in the",
    "start": "799139",
    "end": "804540"
  },
  {
    "text": "case of Josh's cluster Josh's uh Josh's cluster should Trust Toms and therefore it can distinguish that the spiffy ID",
    "start": "804540",
    "end": "811200"
  },
  {
    "text": "should be trusted or not it also in the x509 case of course needs the public trust route certificate but we'll come",
    "start": "811200",
    "end": "817680"
  },
  {
    "text": "on to that in a minute so provided that the policy is um provided that the ID meets the policy that's been written and",
    "start": "817680",
    "end": "824760"
  },
  {
    "text": "the certificate itself or the ID can be verified cryptographically they can talk no problem",
    "start": "824760",
    "end": "830279"
  },
  {
    "text": "brilliant right what if we mix things up a little bit more so instead of my kubernetes pod I'm going to take that",
    "start": "830279",
    "end": "836519"
  },
  {
    "text": "away um and I'm going to switch that out with AWS and specifically Amazon S3 I've got",
    "start": "836519",
    "end": "843480"
  },
  {
    "text": "my kubernetes pod running in Google Cloud on gke and I want to communicate with Amazon S3",
    "start": "843480",
    "end": "849720"
  },
  {
    "text": "so how would that look well of course I could just do the Long Live",
    "start": "849720",
    "end": "855360"
  },
  {
    "text": "static key credential um please feel Brave and put your hand up if you've ever used a long-lived static key credential to talk to a",
    "start": "855360",
    "end": "861839"
  },
  {
    "text": "public cloud service and yeah see right like it's one of those things that we all do it and we",
    "start": "861839",
    "end": "866880"
  },
  {
    "text": "say we're not going to do it in production until that day comes when you've got 100 things to do and you're like I'll come back to it later",
    "start": "866880",
    "end": "873240"
  },
  {
    "text": "um so we could do this but of course we've been through this it's absolutely terrifying right so let's take that away",
    "start": "873240",
    "end": "878519"
  },
  {
    "text": "what if again we just have our spiffy ID that's inside or rested rather that's inside of our kubernetes pod and we use",
    "start": "878519",
    "end": "886320"
  },
  {
    "text": "that to communicate with AWS what do we need we need the same thing we just need to be able to configure AWS to say we",
    "start": "886320",
    "end": "893459"
  },
  {
    "text": "should trust that spiffy ID coming from Tom's Kitchen in his Raspberry Pi cluster to access S3 and maybe some",
    "start": "893459",
    "end": "900060"
  },
  {
    "text": "extra information like which S3 bucket it can communicate with and um also like what it can do with the SUV",
    "start": "900060",
    "end": "906420"
  },
  {
    "text": "bucket this all might think feel very theoretical but I promise you um you're going to be able to see",
    "start": "906420",
    "end": "911940"
  },
  {
    "text": "whether I'm lying to you or not I'm gonna have a full demo from Josh later that's going to do exactly that with AWS so hold tight I promise the theory will",
    "start": "911940",
    "end": "919500"
  },
  {
    "text": "end at some point so hopefully you're like this is awesome what do I do to get",
    "start": "919500",
    "end": "924540"
  },
  {
    "text": "set up and get started well the reference implementation of spiffy um the main tool to use here is",
    "start": "924540",
    "end": "931139"
  },
  {
    "text": "called spire and Spire is a fantastic tool it does everything that encompasses what spiffy is as a as a framework I",
    "start": "931139",
    "end": "938399"
  },
  {
    "text": "don't have the time to go through it in detail today we've given a good link to a talk from a previous kubecon that goes",
    "start": "938399",
    "end": "943920"
  },
  {
    "text": "through Aspire in detail but essentially some of the main advantages of spire that allows you to",
    "start": "943920",
    "end": "950459"
  },
  {
    "text": "issue svids in two document formats that is both JWT and x509 so depending",
    "start": "950459",
    "end": "958380"
  },
  {
    "text": "on what you're trying to communicate with you can use that different document type and hopefully you should be supported",
    "start": "958380",
    "end": "964680"
  },
  {
    "text": "second of all it can verify as foods of other workloads so if the Pod is configured to it can receive that as fit",
    "start": "964680",
    "end": "970260"
  },
  {
    "text": "and then go to Spire to get it verified it's fantastic",
    "start": "970260",
    "end": "975540"
  },
  {
    "text": "it also and this is probably the main advantage to Aspire in my opinion is it has an emerging ecosystem of plugins to",
    "start": "975540",
    "end": "981839"
  },
  {
    "text": "integrate with other tools and services of course spiffy is dependent on being able to talk and do everything spiffy",
    "start": "981839",
    "end": "987180"
  },
  {
    "text": "with everything if it if it doesn't it's going to become incredibly cumbersome and there's going to be limitations all over the place so this is a great",
    "start": "987180",
    "end": "993660"
  },
  {
    "text": "Advantage here but it's not all sunshine and rainbows of course um what are the main disadvantages well",
    "start": "993660",
    "end": "1000860"
  },
  {
    "text": "of course as I mentioned with the verification and some other stuff call Inspire actually needs changes to your",
    "start": "1000860",
    "end": "1005899"
  },
  {
    "text": "application also for Enterprises um especially in the x509 situation you",
    "start": "1005899",
    "end": "1011300"
  },
  {
    "text": "might have a private CA that you want to have to be vending out your um svids in an x509 format for example that is",
    "start": "1011300",
    "end": "1018800"
  },
  {
    "text": "another point of required integration with private pki and it's another tool that your pki team will have to manage",
    "start": "1018800",
    "end": "1026298"
  },
  {
    "text": "um and and sort of integrate with finally it's another stateful service so out of the box buyer comes with SQL Lite",
    "start": "1026299",
    "end": "1033199"
  },
  {
    "text": "of course in production situations you'd probably want to back that with a production ready database like MySQL or",
    "start": "1033199",
    "end": "1039199"
  },
  {
    "text": "postgres this of course is is more maintenance than anyone in this room that has had to manage stateful services has probably",
    "start": "1039199",
    "end": "1046400"
  },
  {
    "text": "experienced this pain um maybe if you're wanting to try out spiffy and get just get started this",
    "start": "1046400",
    "end": "1052940"
  },
  {
    "text": "might not be the right route for you so hold on a minute I've said a lot about x509 and spiffy",
    "start": "1052940",
    "end": "1058700"
  },
  {
    "text": "and that sort of brings me back to the start of the talk so cert manager exists right and you've all a lot of you put",
    "start": "1058700",
    "end": "1064880"
  },
  {
    "text": "your hands up and said that you're using it already so I sort of wandered to myself and others others within the team",
    "start": "1064880",
    "end": "1071120"
  },
  {
    "text": "why can't we just use cert manager for this um if you want to yeah is this the",
    "start": "1071120",
    "end": "1077179"
  },
  {
    "text": "moment I think this is the moment everyone I'm going to end my part the talk here I'm going to hand you over to one of our",
    "start": "1077179",
    "end": "1084080"
  },
  {
    "text": "core search manager maintainers Josh who's going to tell you whether this is possible or not do you want to go ahead",
    "start": "1084080",
    "end": "1090620"
  },
  {
    "text": "thank you Tom yeah go ahead um yeah so uh like Tom was saying um I think nearly",
    "start": "1090620",
    "end": "1095660"
  },
  {
    "text": "all of you put your hand up um uh when you said you had set manager already installed um so yeah some advantages of why we'd",
    "start": "1095660",
    "end": "1102500"
  },
  {
    "text": "want to use cert manager um uh yeah it's easy it's accessible it's probably already installed in in",
    "start": "1102500",
    "end": "1108500"
  },
  {
    "text": "your cluster um it provides um science certificates right so it provides those um documents in x509",
    "start": "1108500",
    "end": "1115580"
  },
  {
    "text": "format um and yeah makes rotating them um and automating it simple",
    "start": "1115580",
    "end": "1121160"
  },
  {
    "text": "um and yes supports a wide variety of certificates um so you know you're probably familiar",
    "start": "1121160",
    "end": "1126919"
  },
  {
    "text": "with the the kind of um Acme kind of flex encrypt use case you know we also have support for Vault or all of the",
    "start": "1126919",
    "end": "1133220"
  },
  {
    "text": "kind of public clouds and the rest of it um great so the next thing um to",
    "start": "1133220",
    "end": "1139039"
  },
  {
    "text": "introduce um so we want to get so you know who does um X5 online certificates but we're",
    "start": "1139039",
    "end": "1144799"
  },
  {
    "text": "talking about spiffy here and we want to kind of deliver certificates uh especially certificates um to pods that are kind of spiffy",
    "start": "1144799",
    "end": "1150440"
  },
  {
    "text": "compliant and actually attested by some kind of workload identity um that we can trust and kind of",
    "start": "1150440",
    "end": "1155480"
  },
  {
    "text": "actually use for for some kind of authentication so this is where CSI driver 50 comes in so",
    "start": "1155480",
    "end": "1162260"
  },
  {
    "text": "um the CSI in kubernetes you're not too familiar so CSI is the way that",
    "start": "1162260",
    "end": "1168020"
  },
  {
    "text": "um how um you know any kind of storage um Works in kubernetes so CSI is a set",
    "start": "1168020",
    "end": "1173120"
  },
  {
    "text": "of protocols and an interface um that is kind of used by the cubelet to talk to any kind of storage manager",
    "start": "1173120",
    "end": "1179419"
  },
  {
    "text": "so if you're really familiar with if you're if you've used kind of NFS or some kind of Cloud solution",
    "start": "1179419",
    "end": "1185480"
  },
  {
    "text": "um even using kind of Secrets and config Maps we're all kind of using the CSI driver interface so the CSI Java spiffy",
    "start": "1185480",
    "end": "1190700"
  },
  {
    "text": "essentially are writing a kind of cert manager kind of opinionated CSI driver",
    "start": "1190700",
    "end": "1196700"
  },
  {
    "text": "that we can kind of provide a volume kind of solution to kubernetes and then",
    "start": "1196700",
    "end": "1202100"
  },
  {
    "text": "what that means is practice is that you know I have a pod I say I want a certain manager volume on it and set man is",
    "start": "1202100",
    "end": "1207140"
  },
  {
    "text": "going to go ahead and sign a certificate and make that available for kind of mounting directly to the pod",
    "start": "1207140",
    "end": "1212360"
  },
  {
    "text": "and uh so there's a spiffy um kind of flavor of this specifically um will create",
    "start": "1212360",
    "end": "1218059"
  },
  {
    "text": "um you know spiffy compliance certificates based on the pods identity and we'll go into a bit later about how that works and of course it's going to",
    "start": "1218059",
    "end": "1223880"
  },
  {
    "text": "be kind of silently um yeah sign up the kind of transparently renewing that certificate in the background for that for that pod",
    "start": "1223880",
    "end": "1231919"
  },
  {
    "text": "um nice things about using the kind of CSI driver spiffy and the private key never leaves the node if you're familiar with sat managing new certificates",
    "start": "1231919",
    "end": "1238100"
  },
  {
    "text": "before obviously the the kind of difficult private geek gets stored to a secret that's accessible by the API server it's kind of yeah a new point",
    "start": "1238100",
    "end": "1244940"
  },
  {
    "text": "we're talking about kind of then kind of getting the kind of static credential kind of space um so",
    "start": "1244940",
    "end": "1250820"
  },
  {
    "text": "um yeah this is pretty pretty nice so it's the CSI driver will create a tempores mount so that leaves it in the",
    "start": "1250820",
    "end": "1256280"
  },
  {
    "text": "kind of PODS memory never leaves the node each pod has a unique private key and certificate there's no extra crds to",
    "start": "1256280",
    "end": "1262760"
  },
  {
    "text": "install with CSI driver spiffy um you've all kind of already got set manager installed this is just another deployment to run in your server in your",
    "start": "1262760",
    "end": "1269840"
  },
  {
    "text": "cluster and it's a kind of stateless service and lastly there's no extra databases so Tom was just kind of describing about",
    "start": "1269840",
    "end": "1276020"
  },
  {
    "text": "the pain points around you know right running you know stateful services and kubernetes and databases and whatnot",
    "start": "1276020",
    "end": "1282799"
  },
  {
    "text": "um we're using sat manager so we're relying on crds um and and we're you know using their",
    "start": "1282799",
    "end": "1288020"
  },
  {
    "text": "kind of API server as our state store so um yeah no extra databases needed",
    "start": "1288020",
    "end": "1293360"
  },
  {
    "text": "um so certain manager can only do X5 online right um but that's good and it's better than JWT",
    "start": "1293360",
    "end": "1298880"
  },
  {
    "text": "um x59 you know is inherently a kind of asymmetric cryptography you don't kind of share your private exponent",
    "start": "1298880",
    "end": "1305419"
  },
  {
    "text": "um jwt's um uh kind of a kind of a password essentially um so they're susceptible",
    "start": "1305419",
    "end": "1310940"
  },
  {
    "text": "things like replay attacks um so X5 online kind of gets around that problem um also with in the kind of spiffy case",
    "start": "1310940",
    "end": "1317960"
  },
  {
    "text": "the the kind of spiffy authentication authorization is happening a lot sooner in the TLs handshake um and that has some kind of security",
    "start": "1317960",
    "end": "1324140"
  },
  {
    "text": "benefits the bad thing of course if you kind of um kind of try to implement private PKA in",
    "start": "1324140",
    "end": "1330980"
  },
  {
    "text": "your organization or kind of at home or whatever um yeah trust distribution becomes a bit of a pain point well you do have a talk",
    "start": "1330980",
    "end": "1338240"
  },
  {
    "text": "um tomorrow uh kind of uh colleague Ashley um is going to be talking about trust",
    "start": "1338240",
    "end": "1343280"
  },
  {
    "text": "distribution and kubernetes so that'll be definitely a good one to look at um and yeah obviously it helps with this",
    "start": "1343280",
    "end": "1348919"
  },
  {
    "text": "problem uh going this throughout house so going on to the CSI driver spiffy I won't spend too long",
    "start": "1348919",
    "end": "1355340"
  },
  {
    "text": "um on the um kind of the kind of flow diagram of how it's working but the bottom install",
    "start": "1355340",
    "end": "1361159"
  },
  {
    "text": "part and bottom title right so if you're familiar with spiffy York on a Reddit and that kind of documentation anything like that um it's all based on some kind of",
    "start": "1361159",
    "end": "1367580"
  },
  {
    "text": "workload at a station so in order to give a workload an identity it needs to prove its identity",
    "start": "1367580",
    "end": "1373400"
  },
  {
    "text": "um so we're in the kubernetes world so what's our best entitled it's the kubernetes kind of platform itself",
    "start": "1373400",
    "end": "1380059"
  },
  {
    "text": "um so when using the CSI driver spiffy what's happening here is you know if we say you know our user here has submitted",
    "start": "1380059",
    "end": "1386360"
  },
  {
    "text": "a pod um and uh or a deployment or have you get committed to the API server API",
    "start": "1386360",
    "end": "1391760"
  },
  {
    "text": "server reconciles it kubernetes 101. um I guess it's scheduled to a cubelet",
    "start": "1391760",
    "end": "1397820"
  },
  {
    "text": "um and uh yeah the Pod gets scheduled um then the cubelet is going to then look at the kind of what volumes the Pod um",
    "start": "1397820",
    "end": "1403940"
  },
  {
    "text": "has um kind of specified you can say oh it needs the secret from here I'm going to grab that for me by server yada yada",
    "start": "1403940",
    "end": "1409880"
  },
  {
    "text": "oh I've got a cert manager one here I need to talk to the select managers here side driver so that now it's going to start talking to our service",
    "start": "1409880",
    "end": "1417440"
  },
  {
    "text": "what that service is then going to do um is yeah it receive that that CSI call",
    "start": "1417440",
    "end": "1422659"
  },
  {
    "text": "so it's called No published volume um in the spec and this is basically the cubelet saying to the to the CSI driver",
    "start": "1422659",
    "end": "1428539"
  },
  {
    "text": "that you know we need a volume for this pod um and also importantly it's going to send a copy of the pods service account",
    "start": "1428539",
    "end": "1435860"
  },
  {
    "text": "to the CSI driver spiffy will come out to that later but that's important to kind of do the after station",
    "start": "1435860",
    "end": "1441980"
  },
  {
    "text": "next the driver is going to create our certificate keeper so this is a kind of you know your standard kind of X500",
    "start": "1441980",
    "end": "1448640"
  },
  {
    "text": "certificate signing request it's also going to be inside that request it's going to be",
    "start": "1448640",
    "end": "1454220"
  },
  {
    "text": "um putting the Smithview ID into kind of a spiffy certificate right and importantly it's going to be setting",
    "start": "1454220",
    "end": "1459740"
  },
  {
    "text": "that spiffy ID to the service account of the Pod we know what the service account name is and what namespace based on the",
    "start": "1459740",
    "end": "1465080"
  },
  {
    "text": "call that we made from based on what the keyboard right",
    "start": "1465080",
    "end": "1471280"
  },
  {
    "text": "um next we the CSI driver then creates the actual different request resource",
    "start": "1471380",
    "end": "1476480"
  },
  {
    "text": "and that's the cert manager resource set manager then picks that up we then have another service called an",
    "start": "1476480",
    "end": "1482780"
  },
  {
    "text": "approver and this is the kind of attestation bit and the end result and what this approver is checking is that",
    "start": "1482780",
    "end": "1489320"
  },
  {
    "text": "we have a certainly just different requests created by the Pod because the",
    "start": "1489320",
    "end": "1494720"
  },
  {
    "text": "CSI driver is impersonated the Pod when it made the request and the approval will then check that the contents of the",
    "start": "1494720",
    "end": "1501260"
  },
  {
    "text": "request matches the requester as it were so it's just a kind of yeah it's a check to make sure that the contents of this",
    "start": "1501260",
    "end": "1507440"
  },
  {
    "text": "PPU ID kind of match what pod identity requested for it since our driver then we'll fetch the",
    "start": "1507440",
    "end": "1512780"
  },
  {
    "text": "science certificate once it's been signed by cert manager and then go ahead and make the the volume mounted in for the pods and then you know once the",
    "start": "1512780",
    "end": "1519380"
  },
  {
    "text": "containers start as long as I have the volume Mount then they'll be available uh yeah for the container to run and",
    "start": "1519380",
    "end": "1525620"
  },
  {
    "text": "this flow is obviously happening on Startup so the containers won't start until the volume is ready just like",
    "start": "1525620",
    "end": "1530659"
  },
  {
    "text": "however uh how other volumes behave in kubernetes but also the CSI driver will obviously renew this in the background",
    "start": "1530659",
    "end": "1536659"
  },
  {
    "text": "kind of transparently to the pod please stop with the slides show me the demo already",
    "start": "1536659",
    "end": "1542779"
  },
  {
    "text": "um so let me you still hear me yeah",
    "start": "1542779",
    "end": "1549500"
  },
  {
    "text": "um so we have actually created a um kind of flavor or kind of a we've",
    "start": "1549500",
    "end": "1556220"
  },
  {
    "text": "created Fork of the CSI driver spiffy um that we want to submit to upstream and basically what it is doing is we are",
    "start": "1556220",
    "end": "1564320"
  },
  {
    "text": "just before writing the certificate and key pair um we are going to authenticate to AWS",
    "start": "1564320",
    "end": "1569659"
  },
  {
    "text": "using that s fit document um and what's quite cool here is we're",
    "start": "1569659",
    "end": "1575539"
  },
  {
    "text": "using our kubernetes identity that could be running anywhere so in our case it's going to be running in a kind cluster on",
    "start": "1575539",
    "end": "1581539"
  },
  {
    "text": "my laptop right here but we're authenticating to AWS using that identity most important to like",
    "start": "1581539",
    "end": "1586700"
  },
  {
    "text": "understand here is that our spiffy ID our spiffy identity that could be running anywhere",
    "start": "1586700",
    "end": "1592220"
  },
  {
    "text": "um yeah I can authenticate to the service it means we have like a consistent identity plane across all of our infrastructure and that's where like",
    "start": "1592220",
    "end": "1598400"
  },
  {
    "text": "spiffy becomes really really powerful and you have this kind of consistency consistent kind of policy view regardless of where you're in like your",
    "start": "1598400",
    "end": "1605179"
  },
  {
    "text": "your infrastructure or your workloads are actually running um so yes I wanted to show you the kind",
    "start": "1605179",
    "end": "1610760"
  },
  {
    "text": "of AWS kind of portal first um just to kind of show very quickly like generally what I've got going on so",
    "start": "1610760",
    "end": "1618080"
  },
  {
    "text": "we've imported our certificate bundle that's what Tom was talking about before where the workload needs to or AWS needs",
    "start": "1618080",
    "end": "1623659"
  },
  {
    "text": "to kind of trust our workload when it connects to it um so yeah we just have to import that in there next up we have created a roll so I've",
    "start": "1623659",
    "end": "1631400"
  },
  {
    "text": "given it kind of like a generic kind of S3 bucket access um and importantly in the role",
    "start": "1631400",
    "end": "1637640"
  },
  {
    "text": "definition here in the kind of what AWS calls the trust relationship uh we point it to that CAA bundle I just showed you",
    "start": "1637640",
    "end": "1644659"
  },
  {
    "text": "um and we also importantly um doing a string match here on spiffy ID so like Tom was talking about before",
    "start": "1644659",
    "end": "1651140"
  },
  {
    "text": "I'm using the trust domain here serpmanager.cubecon 2023",
    "start": "1651140",
    "end": "1656419"
  },
  {
    "text": "um and I'm looking for spiffy like IDs that are in the namespace essay kind of format um so this is a kind of like",
    "start": "1656419",
    "end": "1663020"
  },
  {
    "text": "first pass to kind of assume a role and then I'm not super familiar with iron",
    "start": "1663020",
    "end": "1668299"
  },
  {
    "text": "I'm not like a whiz kid um I do uh so hopefully this so don't",
    "start": "1668299",
    "end": "1673460"
  },
  {
    "text": "copy this paste this basically because it might not be the best way to do things but it seems to be quite elegant for me",
    "start": "1673460",
    "end": "1679220"
  },
  {
    "text": "um I've got another what they call a trust profile um which will uh when authenticating",
    "start": "1679220",
    "end": "1685460"
  },
  {
    "text": "will go through this and the Aus has this thing called a session policy which is basically another filter that you can",
    "start": "1685460",
    "end": "1691880"
  },
  {
    "text": "put a when you assume a session something a session token um then it",
    "start": "1691880",
    "end": "1697580"
  },
  {
    "text": "will go through the session policy and the point of the session policy that I have here is that I'm I'm in a situation",
    "start": "1697580",
    "end": "1703880"
  },
  {
    "text": "where I have two Services running one of them needs to read write to an S3 bucket one of them just needs to read",
    "start": "1703880",
    "end": "1709400"
  },
  {
    "text": "so in this service a obviously given it uh get and put permissions the S3 bucket",
    "start": "1709400",
    "end": "1715220"
  },
  {
    "text": "to this S3 bucket qcon 2023 bidding open for that S3 bucket name",
    "start": "1715220",
    "end": "1721100"
  },
  {
    "text": "um uh so yes this is this kind of string match here this policy is saying that um all all spiffy IDs in the namespace app",
    "start": "1721100",
    "end": "1728779"
  },
  {
    "text": "a will basically be able to assume this role um and then on this side we've got app B",
    "start": "1728779",
    "end": "1735080"
  },
  {
    "text": "namespace and they'll be able to assume the role of just get object but they won't be able to put anything",
    "start": "1735080",
    "end": "1741740"
  },
  {
    "text": "um this is yeah it's kind of bit contrived but the idea is that we can have Services um that are you know that workflows that",
    "start": "1741740",
    "end": "1748400"
  },
  {
    "text": "are represented by their spiffer identity and we can write policy in a kind of um yeah in the same way",
    "start": "1748400",
    "end": "1754220"
  },
  {
    "text": "um it's an interesting note as we understand AWS are the only cloud provider that support x509",
    "start": "1754220",
    "end": "1759559"
  },
  {
    "text": "authentication um uh no other Cloud supports that and that's massive yeah so putting it in",
    "start": "1759559",
    "end": "1764779"
  },
  {
    "text": "short Google Cloud if you're listening to this can you please do this please thank you and Azure of course",
    "start": "1764779",
    "end": "1772940"
  },
  {
    "text": "um so yeah just to quickly show you um that um yeah it does work um is I'm in my service a here",
    "start": "1772940",
    "end": "1780500"
  },
  {
    "text": "so as you would expect hopefully this works um the Pod is running here the cert manager volume is mounted along",
    "start": "1780500",
    "end": "1787520"
  },
  {
    "text": "with the AWS credentials which are kind of silently getting requested in the background using that best vid um you",
    "start": "1787520",
    "end": "1794059"
  },
  {
    "text": "can see here in service a is allowed to copy from the bucket it's also allowed to paste to the bucket",
    "start": "1794059",
    "end": "1801700"
  },
  {
    "text": "for the internet come on yeah good right so I didn't error so that's like good",
    "start": "1803179",
    "end": "1809480"
  },
  {
    "text": "um and then we can see on the service b side we can also copy from the pod",
    "start": "1809480",
    "end": "1815620"
  },
  {
    "text": "God whoa this is cloud native okay and then we can if we try and write to the pod on",
    "start": "1817820",
    "end": "1825320"
  },
  {
    "text": "server speed",
    "start": "1825320",
    "end": "1827860"
  },
  {
    "text": "wow guys yes so uh we got an error message but that's correct right because if you looked at our policy that we just",
    "start": "1830360",
    "end": "1837200"
  },
  {
    "text": "defined before um we got uh we didn't allow the service B to to write to the plot right so it's",
    "start": "1837200",
    "end": "1843260"
  },
  {
    "text": "a good thing we're getting access tonight cool um so back to the slides",
    "start": "1843260",
    "end": "1850520"
  },
  {
    "text": "having said all this um yeah so CSI JavaScript might always be the best fit for you",
    "start": "1850520",
    "end": "1857840"
  },
  {
    "text": "um but Spire might so um as we were talking about before um Spire has full support for JWT sat",
    "start": "1857840",
    "end": "1865520"
  },
  {
    "text": "manager doesn't support that it enables workload attestation outside of the kubernetes context",
    "start": "1865520",
    "end": "1872059"
  },
  {
    "text": "um so you know if you're running in a VM or you're another some kind of other infrastructure context that might be not",
    "start": "1872059",
    "end": "1878659"
  },
  {
    "text": "be appropriate or you want some kind of more um some other attestation method maybe",
    "start": "1878659",
    "end": "1884120"
  },
  {
    "text": "you don't even trust your kubernetes platform then the cert manager CSI drivers if you might not be appropriate and Spire obviously implements the",
    "start": "1884120",
    "end": "1891260"
  },
  {
    "text": "workload apis that imaginative cert manager doesn't set manager just delivers the kind of s-fit documents to your to your workload",
    "start": "1891260",
    "end": "1898279"
  },
  {
    "text": "however um whatever you do with authentication uh use specific because spiffy is really",
    "start": "1898279",
    "end": "1903919"
  },
  {
    "text": "good and uh yeah it succeeds and I might add if you're",
    "start": "1903919",
    "end": "1909200"
  },
  {
    "text": "um yeah I might add if you're already using cert manager then CSI driver's Biffy is the perfect place to start yeah",
    "start": "1909200",
    "end": "1915559"
  },
  {
    "text": "great um so that's the end of the talk um there's a QR link to the GitHub where",
    "start": "1915559",
    "end": "1921559"
  },
  {
    "text": "the AWS Fork of the CSI driver spiffy can be found um so you can try running that yourself",
    "start": "1921559",
    "end": "1928340"
  },
  {
    "text": "um and we hope to kind of submit that for upstream or create some kind of official site manager and repository for",
    "start": "1928340",
    "end": "1933980"
  },
  {
    "text": "that um you can kind of find the work going on there and then as Tom was talking about before there's a QR code there to",
    "start": "1933980",
    "end": "1940279"
  },
  {
    "text": "learn more about spy that'll take you to a great talk from the Spy maintainers to talk about",
    "start": "1940279",
    "end": "1946279"
  },
  {
    "text": "um Aspire there so yeah uh but that's that's it thank you thank you very much for coming [Applause]",
    "start": "1946279",
    "end": "1954299"
  },
  {
    "text": "thank you I think there's like two minutes left for questions but",
    "start": "1958899",
    "end": "1965659"
  },
  {
    "text": "um yeah yeah sure um I'll bring over the mic actually it's probably the best way to do this",
    "start": "1965659",
    "end": "1973480"
  },
  {
    "text": "yeah thank you I was wondering if it's possible to use labels to identify for example some specific four pods with",
    "start": "1974120",
    "end": "1980960"
  },
  {
    "text": "yeah like a selector you know like for example in case of a postgres class",
    "start": "1980960",
    "end": "1986899"
  },
  {
    "text": "they've got a primary and the standby identified by labels it would be good to for example allow the standby to read",
    "start": "1986899",
    "end": "1994399"
  },
  {
    "text": "and the primary to write yeah yeah so I think um when it comes to",
    "start": "1994399",
    "end": "1999679"
  },
  {
    "text": "uh things like that yeah so like ideally like the whole system should be flexible",
    "start": "1999679",
    "end": "2005559"
  },
  {
    "text": "enough for you to describe those kind of scenarios and write policy to like allow that",
    "start": "2005559",
    "end": "2010960"
  },
  {
    "text": "um the CSI drivers for fee today is all based on the Pod service account and It's tricky to change that because",
    "start": "2010960",
    "end": "2017380"
  },
  {
    "text": "um that's kind of cryptographically adjustable by the driver and the API server and whatnot",
    "start": "2017380",
    "end": "2023559"
  },
  {
    "text": "um but yeah yeah we can chat about that later",
    "start": "2023559",
    "end": "2029220"
  },
  {
    "text": "are there any more questions I'll come here yeah so there is a way to integrate your",
    "start": "2029260",
    "end": "2036519"
  },
  {
    "text": "manager with external VM we Aspire server Xterra or I don't know if there is a some possible way to implement some",
    "start": "2036519",
    "end": "2045039"
  },
  {
    "text": "kind of moderate less between pod and VMS uh yeah so there is an integration with",
    "start": "2045039",
    "end": "2051940"
  },
  {
    "text": "spire and site manager today so Aspire can be used so certain manager can be used as a what they call a",
    "start": "2051940",
    "end": "2058358"
  },
  {
    "text": "certificate Authority provider I think it's the terminology they use um so there is kind of a link today you",
    "start": "2058359",
    "end": "2064898"
  },
  {
    "text": "could kind of um but the way that that works is Spire um is required to have the intermediate certificate inside Spire which is not",
    "start": "2064899",
    "end": "2072040"
  },
  {
    "text": "the case of sat manage that's where they're too different but um yeah sound magic just is not appropriate for VM",
    "start": "2072040",
    "end": "2077138"
  },
  {
    "text": "workloads it just needs to be in a kubernetes context for it to work",
    "start": "2077139",
    "end": "2083220"
  },
  {
    "text": "anymore for any more yeah sure um if you could just pass the mic along",
    "start": "2084580",
    "end": "2091859"
  },
  {
    "text": "do do you know do you envision something that it's interacting directly with the cloud provider for example in WX Asia or",
    "start": "2093399",
    "end": "2099940"
  },
  {
    "text": "Google because as a security Savvy I hope that no company is actually putting",
    "start": "2099940",
    "end": "2104980"
  },
  {
    "text": "the wild card into the into the identity because I can spawn whatever service I",
    "start": "2104980",
    "end": "2110680"
  },
  {
    "text": "want and get automatic access so do you envision that the dcsi will interact directly there to configure on demand",
    "start": "2110680",
    "end": "2118119"
  },
  {
    "text": "basically the the certificates yeah that could be a very interesting solution yeah yeah that might be appropriate for",
    "start": "2118119",
    "end": "2125320"
  },
  {
    "text": "you yeah yeah I mean yeah this is all and again um hopefully this whole system should be",
    "start": "2125320",
    "end": "2131440"
  },
  {
    "text": "flexible enough to you to kind of manage your risk profile appropriately and maybe yeah using wild cards and strings",
    "start": "2131440",
    "end": "2137260"
  },
  {
    "text": "like that it's probably not what you want to be doing in production and you probably want some kind of service to do some kind of pre-registration to you",
    "start": "2137260",
    "end": "2143320"
  },
  {
    "text": "know dynamically write your policies in some kind of same way that only makes sense yeah yeah I think um it's worth",
    "start": "2143320",
    "end": "2149020"
  },
  {
    "text": "noting as well when we were preparing the demo for this the the AWS functionality that we've put in here",
    "start": "2149020",
    "end": "2154240"
  },
  {
    "text": "um of course it's available on the GitHub repository it's all very new um but upon doing it I was thinking just",
    "start": "2154240",
    "end": "2159520"
  },
  {
    "text": "that like um adding that extra extra layer of configuration where um I can make that link and somehow",
    "start": "2159520",
    "end": "2166240"
  },
  {
    "text": "based on some some configuration written it will map to the AWS roles specifically",
    "start": "2166240",
    "end": "2171940"
  },
  {
    "text": "um but it's not something we've done yet it's something we'd be interested in doing I guess",
    "start": "2171940",
    "end": "2176640"
  },
  {
    "text": "yeah sorry I'll bring over the mic just so it's on record",
    "start": "2181180",
    "end": "2185700"
  },
  {
    "text": "I just want to say that some of the challenges that you might face is the permission required in order for for the",
    "start": "2186579",
    "end": "2191680"
  },
  {
    "text": "CSI in order to do that configuration because uh yeah I mean like company like ours we don't really trust a lot some of",
    "start": "2191680",
    "end": "2200079"
  },
  {
    "text": "the third party providers and so and so forth so we want to try to limit the range of permissions that they have on the IDP so the identity provider in this",
    "start": "2200079",
    "end": "2206740"
  },
  {
    "text": "case AWS or yeah or or Azure sort of control what they're capable of doing or",
    "start": "2206740",
    "end": "2211960"
  },
  {
    "text": "not because sometimes they really want to have a full control and that's not 3D",
    "start": "2211960",
    "end": "2217839"
  },
  {
    "text": "is something that we gig out for free so that's the problem",
    "start": "2217839",
    "end": "2222900"
  },
  {
    "text": "thank you um I'm conscious how are we doing for time do we have time for one more",
    "start": "2224800",
    "end": "2230079"
  },
  {
    "text": "question we're done we're done well thank you very much everyone and again the cert manager team thank you",
    "start": "2230079",
    "end": "2238320"
  }
]