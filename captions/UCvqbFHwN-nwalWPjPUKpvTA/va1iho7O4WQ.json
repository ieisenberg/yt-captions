[
  {
    "text": "hey friends uh stefan and i are here uh to talk about",
    "start": "1280",
    "end": "6960"
  },
  {
    "text": "flux becoming an incubating project and to give you a little bit of a view",
    "start": "6960",
    "end": "12080"
  },
  {
    "text": "of the road ahead super excited here to be joining stefan",
    "start": "12080",
    "end": "18640"
  },
  {
    "text": "hello everyone i'm pradhan i'm a developer experience engineer at weworks",
    "start": "19119",
    "end": "25599"
  },
  {
    "text": "and i'm a long time flagger and flux",
    "start": "25599",
    "end": "31439"
  },
  {
    "text": "maintainer and very happy to be here and speak about the future of flux and where",
    "start": "31439",
    "end": "37520"
  },
  {
    "text": "where we are going with it yeah me as well uh lee kapili",
    "start": "37520",
    "end": "43600"
  },
  {
    "text": "also on the developer experience team at weave uh stefan and i have been in the cloud native space for a while",
    "start": "43600",
    "end": "50160"
  },
  {
    "text": "uh if you contribute in the kubernetes community you may have noticed me over there i used to work on kubernetes quite a bit",
    "start": "50160",
    "end": "57680"
  },
  {
    "text": "and now we're doing cluster add-ons and interested in some other kinds of deployment",
    "start": "57680",
    "end": "64000"
  },
  {
    "text": "artifacts for flux um also really interested in security and multi-tenancy",
    "start": "64000",
    "end": "70240"
  },
  {
    "text": "i maintain a project called ignite uh which does micro vms in a docker-like way so both stefan and",
    "start": "70240",
    "end": "78080"
  },
  {
    "text": "i really like helping people which is why flux is a great project for us flux is super awesome and i'd like to",
    "start": "78080",
    "end": "85200"
  },
  {
    "text": "tell you a little bit more about why we think so it's one of the most mature technologies",
    "start": "85200",
    "end": "92960"
  },
  {
    "text": "right now that's developing in the cloud native space here you can see flux along with a bunch of other amazing projects and",
    "start": "92960",
    "end": "100560"
  },
  {
    "text": "flux alongside helm as reported by the cncf technology radar",
    "start": "100560",
    "end": "106240"
  },
  {
    "text": "last year mid-june they were saying hey these are some things that you should really be looking at adopting",
    "start": "106240",
    "end": "112320"
  },
  {
    "text": "into your production workflows and many users have uh chosen to be on that journey",
    "start": "112320",
    "end": "118640"
  },
  {
    "text": "with us in the project the flux community has done so much to really learn and pioneer",
    "start": "118640",
    "end": "127200"
  },
  {
    "text": "what it means to do get offs you can see we have a diverse set of users and users who",
    "start": "127200",
    "end": "135120"
  },
  {
    "text": "operate flux and do get offs at different scales different kind of formats and varieties",
    "start": "135120",
    "end": "143920"
  },
  {
    "text": "and so get ops we find is working for people whether they are managing their",
    "start": "143920",
    "end": "149840"
  },
  {
    "text": "own services or offering flux as part of their product um and as the flux project",
    "start": "149840",
    "end": "158080"
  },
  {
    "text": "has developed we've come to start to formalize a little bit about what a good",
    "start": "158080",
    "end": "163120"
  },
  {
    "text": "opinion for doing get-offs uh can be uh there's a couple of",
    "start": "163120",
    "end": "168480"
  },
  {
    "text": "principles that we like to help people get on the road to guiding towards good social and technical",
    "start": "168480",
    "end": "173840"
  },
  {
    "text": "solutions with git and declarative systems so if you can describe your",
    "start": "173840",
    "end": "179280"
  },
  {
    "text": "system declaratively this is a good prerequisite that you need to be able to meet um if you're working with systems that",
    "start": "179280",
    "end": "185040"
  },
  {
    "text": "have imperative apis thinking about how to do those things declaratively can help you on the road",
    "start": "185040",
    "end": "190560"
  },
  {
    "text": "to get ops then you put those declarations as configuration stored in source",
    "start": "190560",
    "end": "197680"
  },
  {
    "text": "so when you have source control systems like git or subversion uh or even things like google sheets",
    "start": "197680",
    "end": "203280"
  },
  {
    "text": "which can be a versioned and declarative store for information um then you are",
    "start": "203280",
    "end": "209599"
  },
  {
    "text": "getting to that second tenant and then using software agents that can then take",
    "start": "209599",
    "end": "215360"
  },
  {
    "text": "those machine readable configurations and reconcile them towards your",
    "start": "215360",
    "end": "220640"
  },
  {
    "text": "infrastructure your process or your policies so whatever you are trying to manage with git ops to either ensure correctness or alert",
    "start": "220640",
    "end": "227920"
  },
  {
    "text": "for adrift when it occurs uh is kind of that third point you you really do need some sort of constant",
    "start": "227920",
    "end": "235040"
  },
  {
    "text": "reconciliation here it's what we found the good recommendation not just something that's",
    "start": "235040",
    "end": "240239"
  },
  {
    "text": "only eventing although events can be a powerful part of the good ops platform and help you integrate with other",
    "start": "240239",
    "end": "246239"
  },
  {
    "text": "systems like ci so when you follow these principles you get some pretty clear benefits one is",
    "start": "246239",
    "end": "254319"
  },
  {
    "text": "this first point that maybe seems obvious but it's a little bit more nuanced in that way",
    "start": "254319",
    "end": "260239"
  },
  {
    "text": "why do we get collaboration on infrastructure we know that",
    "start": "260239",
    "end": "265280"
  },
  {
    "text": "devs no git some would even say that they loved it other people may not right but devs",
    "start": "265280",
    "end": "272240"
  },
  {
    "text": "all have adopted git and this means that you likely have a",
    "start": "272240",
    "end": "277840"
  },
  {
    "text": "solution for managing git already in your organization so regardless",
    "start": "277840",
    "end": "283120"
  },
  {
    "text": "of the complexity of your team you have some of that organizational complexity",
    "start": "283120",
    "end": "288800"
  },
  {
    "text": "coded into how you store and version your code so if you do that with your declarative",
    "start": "288800",
    "end": "295040"
  },
  {
    "text": "config as well you get the benefits of that existing platform which means that you get access control you have an auditable",
    "start": "295040",
    "end": "302000"
  },
  {
    "text": "history and on that historically controlled declaration of how you want",
    "start": "302000",
    "end": "309840"
  },
  {
    "text": "things to be configured you get drift correction and these clear boundaries of access between the actual",
    "start": "309840",
    "end": "316000"
  },
  {
    "text": "infrastructure and where your dev teams collaborate and so there's a security boundary here",
    "start": "316000",
    "end": "323520"
  },
  {
    "text": "and you get the benefits of how your organization already works and all of these concerns are actually",
    "start": "323520",
    "end": "331199"
  },
  {
    "text": "things that kubernetes is not really scoped to take full responsibility of",
    "start": "331199",
    "end": "337360"
  },
  {
    "text": "right there's no version control that's meant to be accessed by humans inside of the kubernetes api",
    "start": "337360",
    "end": "343600"
  },
  {
    "text": "and in the same way collaboration on comments and missing fields and things like that why things were done what order they",
    "start": "343600",
    "end": "349840"
  },
  {
    "text": "were done who was involved in making decisions that's not kubernetes responsibility",
    "start": "349840",
    "end": "355120"
  },
  {
    "text": "but it can be the responsibility of your git platform and that's how we get get offs",
    "start": "355120",
    "end": "361759"
  },
  {
    "text": "and so why is flux a good tool set and what's the scope of the project we talk about git ops well we talk about",
    "start": "361759",
    "end": "368639"
  },
  {
    "text": "flux helping you provide complete continuous delivery capabilities on top",
    "start": "368639",
    "end": "375440"
  },
  {
    "text": "of kubernetes specifically and then supporting kubernetes best practices by tying in the",
    "start": "375440",
    "end": "383199"
  },
  {
    "text": "best-in-class cloud-native tools that are emerging things like customize helm uh metrics with prometheus and so",
    "start": "383199",
    "end": "390160"
  },
  {
    "text": "on and we've broken up that architecture to be kubernetes native and to be very extensible uh open",
    "start": "390160",
    "end": "397600"
  },
  {
    "text": "community friendly and i mentioned uh that we have such",
    "start": "397600",
    "end": "403440"
  },
  {
    "text": "a large flux user base already and that points to really a multi-year journey",
    "start": "403440",
    "end": "409039"
  },
  {
    "text": "uh as we've come to learn and make git ups more mature we've also learned that we need to make",
    "start": "409039",
    "end": "415039"
  },
  {
    "text": "the software more mature and so for the past the better part of a year now",
    "start": "415039",
    "end": "420080"
  },
  {
    "text": "uh the maintenance team that has been involved with flux has grown and we're working on flux too the main",
    "start": "420080",
    "end": "428240"
  },
  {
    "text": "kind of difference uh that we want to point out is that flux1 was really built as a",
    "start": "428240",
    "end": "434639"
  },
  {
    "text": "targeted but monolithic piece of software that was responsible for syncing a single git",
    "start": "434639",
    "end": "440880"
  },
  {
    "text": "repository and also applying it to a local cluster",
    "start": "440880",
    "end": "445919"
  },
  {
    "text": "and then there was this image automation feature that people grew to really use and love so in flux 2",
    "start": "445919",
    "end": "453120"
  },
  {
    "text": "what we've done is we've really identified how to compose the different pieces of get ops in a more accurate way",
    "start": "453120",
    "end": "460400"
  },
  {
    "text": "so if you need to implement git ups to meet your particular organization's needs",
    "start": "460400",
    "end": "465840"
  },
  {
    "text": "we've split up the apis so that you can do exactly what you want and we've accomplished the",
    "start": "465840",
    "end": "471919"
  },
  {
    "text": "reconciliation of those get ops configurations or git ops related configurations i",
    "start": "471919",
    "end": "478400"
  },
  {
    "text": "should say how you actually assemble your platform with kubernetes native apis and microservices",
    "start": "478400",
    "end": "484560"
  },
  {
    "text": "rewritten from scratch so that it's possible now to sync multiple git repositories",
    "start": "484560",
    "end": "489680"
  },
  {
    "text": "apply them at different times you can get this really rich feature set you can apply them to local",
    "start": "489680",
    "end": "495199"
  },
  {
    "text": "clusters or remote clusters and much more and so the project structure has changed if you're interested",
    "start": "495199",
    "end": "500800"
  },
  {
    "text": "in getting involved and contributing or even just keeping a heartbeat on what issues and",
    "start": "500800",
    "end": "506319"
  },
  {
    "text": "bugs and releases look like then we now have multiple project repos that comprise of the several controllers",
    "start": "506319",
    "end": "512719"
  },
  {
    "text": "that now make up the flux to effort to move the project forward also stefan happens to be really the",
    "start": "512719",
    "end": "520560"
  },
  {
    "text": "original maintainer and creator of flagger and we're happy to just note that",
    "start": "520560",
    "end": "525839"
  },
  {
    "text": "flagger is also now part of the flux cd org so we have that repo",
    "start": "525839",
    "end": "531600"
  },
  {
    "text": "i want to talk about what makes flex 2 so awesome all right so flux one really great first",
    "start": "532480",
    "end": "540240"
  },
  {
    "text": "step and if you're using flux one uh i just want to help you understand",
    "start": "540240",
    "end": "546560"
  },
  {
    "text": "what is getting better and what you're getting out of flux too things that have traditionally been challenging we've really thought about",
    "start": "546560",
    "end": "552080"
  },
  {
    "text": "them uh and the project is moving in a super exciting direction uh flux gives you flexible tools to",
    "start": "552080",
    "end": "559279"
  },
  {
    "text": "implement get ups for your team's specific needs right so if you want to do declarative helm",
    "start": "559279",
    "end": "565440"
  },
  {
    "text": "then you can take those imperative like local laptop workflows where you're iterating on a cluster and modifying it",
    "start": "565440",
    "end": "571200"
  },
  {
    "text": "you can move that into some place where it's possible to collaborate with gitops",
    "start": "571200",
    "end": "576240"
  },
  {
    "text": "flux lets you do declarative helm if you want to represent each piece of your",
    "start": "576240",
    "end": "582160"
  },
  {
    "text": "infrastructure's configuration as separate bits separate packages components or folders",
    "start": "582160",
    "end": "588560"
  },
  {
    "text": "you can then configure health checks you can create dependent ordering",
    "start": "588560",
    "end": "594399"
  },
  {
    "text": "between those components through the use of a dag a directed a cyclical graph you can",
    "start": "594399",
    "end": "600080"
  },
  {
    "text": "create a dependency tree if you would like and that creates a super",
    "start": "600080",
    "end": "605600"
  },
  {
    "text": "awesome bootstrap story that we've also done extra work to help with external",
    "start": "605600",
    "end": "612399"
  },
  {
    "text": "platform creation like github and get lab and pocket et cetera so when you put all of these pieces",
    "start": "612399",
    "end": "620560"
  },
  {
    "text": "together it's you get a story where you can create a brand new cluster",
    "start": "620560",
    "end": "626640"
  },
  {
    "text": "point it to a declarative repository run a bootstrap and you never have to modify",
    "start": "626640",
    "end": "633200"
  },
  {
    "text": "it manually with any kind of imperative workflow something that needs to be deployed in a specific",
    "start": "633200",
    "end": "638800"
  },
  {
    "text": "order this is an amazing feature set and something that brings organizations a lot of success",
    "start": "638800",
    "end": "644720"
  },
  {
    "text": "and peace with regard to disaster recovery scaling out new deployments for new",
    "start": "644720",
    "end": "649760"
  },
  {
    "text": "customers or whatever it may be these are some of the immediate benefits that you get from doing git ops",
    "start": "649760",
    "end": "655760"
  },
  {
    "text": "in declarative way and flux can now do dependencies as part of that",
    "start": "655760",
    "end": "663040"
  },
  {
    "text": "flux can do very sophisticated actuations of continuous delivery so if you want",
    "start": "663279",
    "end": "671200"
  },
  {
    "text": "to say have your get artifacts or your helm artifacts your config be tagged or versioned in a",
    "start": "671200",
    "end": "678560"
  },
  {
    "text": "specific way you can ask flux to make sure to stay up to date with that tagging policy",
    "start": "678560",
    "end": "685040"
  },
  {
    "text": "if you want your get repo to only release config when you make a tag that is a semver patch bump",
    "start": "685040",
    "end": "691920"
  },
  {
    "text": "you can tell flux to do that the same thing is true if you are holding home",
    "start": "691920",
    "end": "698079"
  },
  {
    "text": "helm charts inside of a home repository and we also support storing your health charts directly in git with some caveats",
    "start": "698079",
    "end": "704880"
  },
  {
    "text": "and so lots of very powerful feature sets there for um automating the mechanisms that are",
    "start": "704880",
    "end": "712240"
  },
  {
    "text": "needed to do continuous delivery so that you have to do less stuff when you're actually just trying to release software",
    "start": "712240",
    "end": "718720"
  },
  {
    "text": "along with that we've got some forming apis and controller mechanisms for doing",
    "start": "718720",
    "end": "724480"
  },
  {
    "text": "image tag updates that compose really well with these tagging strategies and so lots of mechanisms available for",
    "start": "724480",
    "end": "731920"
  },
  {
    "text": "you in flux to do awesome get offs the way that you need to something that i'm particularly excited",
    "start": "731920",
    "end": "738560"
  },
  {
    "text": "about is our ability to compose multiple repositories folders branches",
    "start": "738560",
    "end": "743760"
  },
  {
    "text": "refs everything whatever you could imagine like oh i want to store my configuration in that place or",
    "start": "743760",
    "end": "749040"
  },
  {
    "text": "this way or in a bucket it's possible to do with flux this also gives",
    "start": "749040",
    "end": "755839"
  },
  {
    "text": "us really nice synergy with our multi-tenancy story so each one",
    "start": "755839",
    "end": "761920"
  },
  {
    "text": "of these pieces that you would want to reconcile to a cluster for a particular tagging policy or whatever you need",
    "start": "761920",
    "end": "767600"
  },
  {
    "text": "you can also then restrict it via our back their support for service accounts which also leads into our support for",
    "start": "767600",
    "end": "774959"
  },
  {
    "text": "coop configs it's possible to for any of the artifacts that you're synchronizing to your cluster",
    "start": "774959",
    "end": "780320"
  },
  {
    "text": "using flux apis also mention that you want it to be synced to a remote cluster which gives you the",
    "start": "780320",
    "end": "788079"
  },
  {
    "text": "ability to do central management fleets or central cluster multi-cluster management from a",
    "start": "788079",
    "end": "795200"
  },
  {
    "text": "specific management cluster um or all kinds of fun things so you could even use this in a",
    "start": "795200",
    "end": "802160"
  },
  {
    "text": "b2b relationship where you're offering a service right you could use a management cluster to remotely apply",
    "start": "802160",
    "end": "809920"
  },
  {
    "text": "um stuff from your githups control repo into a customer's cluster",
    "start": "809920",
    "end": "815120"
  },
  {
    "text": "lastly because we built everything with cloud native tools in mind and in a",
    "start": "815760",
    "end": "821279"
  },
  {
    "text": "kubernetes native way flux is way more observable than ever and so previously in flux one we would",
    "start": "821279",
    "end": "828560"
  },
  {
    "text": "frequently have issues where folks were struggling to read the log messages or understand why syncs were not occurring",
    "start": "828560",
    "end": "834320"
  },
  {
    "text": "um and because things have now been broken out into their individual pieces and they're represented declaratively in",
    "start": "834320",
    "end": "840160"
  },
  {
    "text": "your git repository subsequently in the kubernetes api you can tell if something is failing to",
    "start": "840160",
    "end": "846880"
  },
  {
    "text": "fetch on the git repository object you can tell if a validation is occurring a validation issue is",
    "start": "846880",
    "end": "852959"
  },
  {
    "text": "occurring with your configuration on the customization object if helm is failing to upgrade a",
    "start": "852959",
    "end": "858720"
  },
  {
    "text": "particular thing you can check the helm release object and so all of that status is exposed in case status",
    "start": "858720",
    "end": "867279"
  },
  {
    "text": "compliant custom resources and with events and prometheus metrics",
    "start": "867279",
    "end": "873760"
  },
  {
    "text": "that you can instrument on you'll see later in stuff on slide that we have an awesome dashboard for this",
    "start": "873760",
    "end": "879760"
  },
  {
    "text": "additionally our notification controller is super generic and very powerful just across the board flux is built in a",
    "start": "879760",
    "end": "887360"
  },
  {
    "text": "way it's factored so that the individual pieces you can control them and you can also extend them which is an",
    "start": "887360",
    "end": "894160"
  },
  {
    "text": "expectation that i think we should hold a high bar for in the cloud native ecosystem that flux gladly needs",
    "start": "894160",
    "end": "902320"
  },
  {
    "text": "probably the most important feature i think of flux is the strength of the community",
    "start": "902720",
    "end": "907920"
  },
  {
    "text": "i've tried so hard to emphasize and highlight that",
    "start": "907920",
    "end": "913040"
  },
  {
    "text": "where we are with get offs today is because the practitioners in the field",
    "start": "913040",
    "end": "919600"
  },
  {
    "text": "have taken a bet on the flux project taken a bet on the ideology of get ops and moved it",
    "start": "919600",
    "end": "925760"
  },
  {
    "text": "forward we've seen more of this maturity occurring as we've come to constrain and expand",
    "start": "925760",
    "end": "934240"
  },
  {
    "text": "github's the definition of what it is and to to really make it more mature with",
    "start": "934240",
    "end": "940800"
  },
  {
    "text": "things like get off stays uh if you even just look at the statistics with the project we're at",
    "start": "940800",
    "end": "947360"
  },
  {
    "text": "40 000 contributions and counting 26 000 of those have been since sandbox and so just from sandbox to",
    "start": "947360",
    "end": "955279"
  },
  {
    "text": "today which is incubation um lots of activity uh",
    "start": "955279",
    "end": "961000"
  },
  {
    "text": "1888 contributors is a pretty insane stat i shouldn't say anything but it's incredible",
    "start": "961000",
    "end": "967920"
  },
  {
    "text": "16 000 plus commits we have 14 maintainers now from five different companies and there",
    "start": "967920",
    "end": "974639"
  },
  {
    "text": "were six maintainers and three companies at sandbox type so really points to sustainable growth in",
    "start": "974639",
    "end": "980880"
  },
  {
    "text": "the leadership and maintenance of the project we are building something that is sustainable and a true community effort here 12 000",
    "start": "980880",
    "end": "988720"
  },
  {
    "text": "plus github stars uh definitely lots of growth there and it's just clear when you get involved with",
    "start": "988720",
    "end": "995360"
  },
  {
    "text": "community that we're building something super healthy uh people helping each other and lots of love as well as an excellent code of",
    "start": "995360",
    "end": "1002320"
  },
  {
    "text": "conduct so if you're looking to get started with flux say you're new here and you're just",
    "start": "1002320",
    "end": "1007680"
  },
  {
    "text": "learning about it um our website has a great path for you",
    "start": "1007680",
    "end": "1012880"
  },
  {
    "text": "so go ahead and check out our getting started guides also we've done our best to really",
    "start": "1012880",
    "end": "1018639"
  },
  {
    "text": "transparently show throughout the flux to development progress or process what these new features look",
    "start": "1018639",
    "end": "1025120"
  },
  {
    "text": "like how they're supposed to be used we've uh we have a call every other monday",
    "start": "1025120",
    "end": "1030319"
  },
  {
    "text": "that you can join um check out the meetup page and the recordings there get posted to a youtube",
    "start": "1030319",
    "end": "1036000"
  },
  {
    "text": "playlist where you can see very often me but also other flex community members",
    "start": "1036000",
    "end": "1043438"
  },
  {
    "text": "either fail through a demo or do something really fun and cool also uh just call out to victor",
    "start": "1043439",
    "end": "1050240"
  },
  {
    "text": "farsight who did a great dive into and demo of how flux 2 is working go ahead",
    "start": "1050240",
    "end": "1055280"
  },
  {
    "text": "and check out the youtube videos if you learn well in that format now",
    "start": "1055280",
    "end": "1060799"
  },
  {
    "text": "this would be incomplete if we didn't also talk about flux one",
    "start": "1060799",
    "end": "1066480"
  },
  {
    "text": "users and their road to maturing with flux as we move to v2 and so we've",
    "start": "1066480",
    "end": "1073520"
  },
  {
    "text": "got an excellent migration story that we're continuing to improve already tons of docks",
    "start": "1073520",
    "end": "1078720"
  },
  {
    "text": "that have every caveat that you can think of every consideration or change in behavior that we would like to",
    "start": "1078720",
    "end": "1085280"
  },
  {
    "text": "encourage as you move to flux v2 go ahead and check out the specific migration section in the sidebar of our",
    "start": "1085280",
    "end": "1091840"
  },
  {
    "text": "documentation site again you can get there by just going to flex cdio um or at these links below so",
    "start": "1091840",
    "end": "1100000"
  },
  {
    "text": "um flux2 community i i can't stress this enough i mean i'm so excited about what we're",
    "start": "1100000",
    "end": "1106640"
  },
  {
    "text": "doing with flux to produce flexible tooling that lets you do things the way that you need to",
    "start": "1106640",
    "end": "1112559"
  },
  {
    "text": "um to accomplish uh or to build the proper get ops approach for your org",
    "start": "1112559",
    "end": "1117760"
  },
  {
    "text": "which includes thinking about not just technical solutions but also social ones and uh flux two",
    "start": "1117760",
    "end": "1124880"
  },
  {
    "text": "is going in a really good direction so that's why we have steph on here today",
    "start": "1124880",
    "end": "1130000"
  },
  {
    "text": "is to really give you some context and a deep dive into how flux really works stefan take",
    "start": "1130000",
    "end": "1136960"
  },
  {
    "text": "it away thank you lee i'm going to try something different today",
    "start": "1136960",
    "end": "1142559"
  },
  {
    "text": "i'm going to talk about flux and flux features from",
    "start": "1142559",
    "end": "1149360"
  },
  {
    "text": "user perspective so we've um",
    "start": "1149360",
    "end": "1156640"
  },
  {
    "text": "we've split up the flux personas into three categories",
    "start": "1157360",
    "end": "1162640"
  },
  {
    "text": "we have cluster operators the nice people that are creating",
    "start": "1162640",
    "end": "1167840"
  },
  {
    "text": "clusters for us they are maintaining them they are doing provisioning upgrades and so on we have platform",
    "start": "1167840",
    "end": "1174720"
  },
  {
    "text": "engineers those that build continuous delivery pipelines they help the developer teams get",
    "start": "1174720",
    "end": "1182400"
  },
  {
    "text": "more velocity and they also do engineering work they can extend flux in uh",
    "start": "1182400",
    "end": "1189679"
  },
  {
    "text": "in ways that we haven't figured out yet or they can trim it down and use only",
    "start": "1189679",
    "end": "1196480"
  },
  {
    "text": "those components that they they need in their workflows and finally app developers of course",
    "start": "1196480",
    "end": "1205039"
  },
  {
    "text": "they rely on continuous delivery to get their code on production systems but it's not only",
    "start": "1205039",
    "end": "1211360"
  },
  {
    "text": "about production system is the journey of you know you commit something to your source code",
    "start": "1211360",
    "end": "1217440"
  },
  {
    "text": "how it goes through different stages ci cd environments promotions you know feedback of",
    "start": "1217440",
    "end": "1224400"
  },
  {
    "text": "what's going on with your app before it reaches its final uh state in a in a production",
    "start": "1224400",
    "end": "1230640"
  },
  {
    "text": "cluster so i'll i'll try to to explain flux from from these three uh perspectives",
    "start": "1230640",
    "end": "1238480"
  },
  {
    "text": "let's start with cluster operators so what",
    "start": "1238480",
    "end": "1245520"
  },
  {
    "text": "what the cluster operator have has to do it has to develop work on a cluster definition",
    "start": "1245520",
    "end": "1252480"
  },
  {
    "text": "first right it can be let's say nikkes cattle config where you set up your iron rolls your",
    "start": "1252480",
    "end": "1258720"
  },
  {
    "text": "vpcs your node groups and so on it can be a",
    "start": "1258720",
    "end": "1264080"
  },
  {
    "text": "terraform project where you use some cloud provider or you target your",
    "start": "1264080",
    "end": "1269679"
  },
  {
    "text": "on-prem clusters or even bare metal systems so that's that's",
    "start": "1269679",
    "end": "1276080"
  },
  {
    "text": "step one you figure out how how to define your cluster and how to create that cluster inside your infrastructure",
    "start": "1276080",
    "end": "1284480"
  },
  {
    "text": "step two is what you want to provide with within that cluster right the cluster",
    "start": "1284960",
    "end": "1291600"
  },
  {
    "text": "add-ons what cni you are going to use what ingress controller are you going to use a service mesh",
    "start": "1291600",
    "end": "1297919"
  },
  {
    "text": "and so on so there is a lot of you know",
    "start": "1297919",
    "end": "1303200"
  },
  {
    "text": "different there are so many differences between uh how clusters get composed you you",
    "start": "1303520",
    "end": "1310480"
  },
  {
    "text": "it's hard to find two clusters alike like everybody there are so many add-ons out there if you look at the kubernetes",
    "start": "1310480",
    "end": "1316320"
  },
  {
    "text": "cluster is always something new maybe run some add-on that you never heard about because there are so many",
    "start": "1316320",
    "end": "1322000"
  },
  {
    "text": "add-ons out there right and and third as a cluster operator you want to onboard",
    "start": "1322000",
    "end": "1328000"
  },
  {
    "text": "tenants now what is a tenant a tenant can be a dev team or a tenant can be a whole",
    "start": "1328000",
    "end": "1334559"
  },
  {
    "text": "organization if you provide this as a service to others and so on the idea of a tenant is when that you",
    "start": "1334559",
    "end": "1341280"
  },
  {
    "text": "have to you know isolate and put some boundaries around what the tenant can do",
    "start": "1341280",
    "end": "1347280"
  },
  {
    "text": "to your infrastructure can a tenant delete nodes can at an end you know wipe out your ingress",
    "start": "1347280",
    "end": "1352799"
  },
  {
    "text": "controllers and so on maybe not so you have to set some boundaries for for these",
    "start": "1352799",
    "end": "1358159"
  },
  {
    "text": "tenants and lastly you have to maintain these clusters you have to upgrade them",
    "start": "1358159",
    "end": "1364000"
  },
  {
    "text": "cvs kubernetes on a fast track even now is not that fast but it used to be",
    "start": "1364000",
    "end": "1371280"
  },
  {
    "text": "very fast so you have to keep up with with the latest version and not only of the cluster but also",
    "start": "1371280",
    "end": "1377679"
  },
  {
    "text": "of the add-ons and so on so how do you bring structure into this and",
    "start": "1377679",
    "end": "1383600"
  },
  {
    "text": "how you you make it traceable every change one way to do it is you store everything",
    "start": "1383600",
    "end": "1390559"
  },
  {
    "text": "in a single ripple and you call that your infrastructure or fleet management repo where you can put",
    "start": "1390559",
    "end": "1398240"
  },
  {
    "text": "together all these definitions um [Music]",
    "start": "1398240",
    "end": "1403760"
  },
  {
    "text": "be terraform be it some config that's one consideration but once you have the",
    "start": "1403760",
    "end": "1410559"
  },
  {
    "text": "the cluster up and running all the add-ons and all the tenants they can be they can subscribe to the",
    "start": "1410559",
    "end": "1416400"
  },
  {
    "text": "same github's principle as uh delivering apps the main difference between delivering",
    "start": "1416400",
    "end": "1423520"
  },
  {
    "text": "apps and delivering uh cluster add-ons is the fact that you don't control the ci system don't",
    "start": "1423520",
    "end": "1428880"
  },
  {
    "text": "control the build system of the cluster item you are a consumer of it",
    "start": "1428880",
    "end": "1434080"
  },
  {
    "text": "you are also in most times of consumer of the configuration of the add-on you may be",
    "start": "1434080",
    "end": "1441360"
  },
  {
    "text": "using some helm chart to install let's say an ingress controller you will not be developing",
    "start": "1441360",
    "end": "1447440"
  },
  {
    "text": "that from scratch you want to reuse what's already there and may and then make some small changes",
    "start": "1447440",
    "end": "1454159"
  },
  {
    "text": "to it so you'll be",
    "start": "1454159",
    "end": "1459600"
  },
  {
    "text": "changing things in your infrastructure git ripple then there is some continuous delivery system that applies",
    "start": "1459600",
    "end": "1466240"
  },
  {
    "text": "those changes to your fleet of clusters right that's",
    "start": "1466240",
    "end": "1471679"
  },
  {
    "text": "the gitobs principle i'm calling these different clusters environments you can have a dev",
    "start": "1471679",
    "end": "1477840"
  },
  {
    "text": "environment staging environment and so on so you'll have",
    "start": "1477840",
    "end": "1482880"
  },
  {
    "text": "we call them overlays like in customized overlays where you take an add-on and you do small modifications over it",
    "start": "1483360",
    "end": "1490480"
  },
  {
    "text": "depending on which environment it needs to uh end up on and so on for example maybe",
    "start": "1490480",
    "end": "1496640"
  },
  {
    "text": "you want to have a database with uh ephemeral storage for your for your dev cluster but on",
    "start": "1496640",
    "end": "1503520"
  },
  {
    "text": "your production cluster you want to change the how how the storage is managed and switch to i don't know pvc state for sets and so",
    "start": "1503520",
    "end": "1510720"
  },
  {
    "text": "on so there are challenges in making these",
    "start": "1510720",
    "end": "1515760"
  },
  {
    "text": "overlays and feed them into your into your environments now flux version 2 comes with",
    "start": "1515760",
    "end": "1525039"
  },
  {
    "text": "tooling so to help you bootstrap clusters and have a",
    "start": "1525039",
    "end": "1531520"
  },
  {
    "text": "consistent way of creating new clusters modifying them upgrading them and so on",
    "start": "1531520",
    "end": "1538080"
  },
  {
    "text": "so in terms of bootstrapping we offer two things one is the flex cli and the flux cli offers a bootstrap",
    "start": "1539279",
    "end": "1545919"
  },
  {
    "text": "command that works with github and gitlab for now we are also looking at",
    "start": "1545919",
    "end": "1551279"
  },
  {
    "text": "extending it to bitbucket and we are working as we speak on an ssh agent",
    "start": "1551279",
    "end": "1557919"
  },
  {
    "text": "implementation the idea is you tell flux hey i want to",
    "start": "1557919",
    "end": "1563919"
  },
  {
    "text": "create a repository on my git provider where i will like to store all the",
    "start": "1563919",
    "end": "1570320"
  },
  {
    "text": "infrastructure items for not only one cluster for my whole fleet of clusters",
    "start": "1570320",
    "end": "1575919"
  },
  {
    "text": "so you run this flux bootstrap command you give it your organization name your",
    "start": "1575919",
    "end": "1580960"
  },
  {
    "text": "toy story name and you you tell flux which um cluster to target right",
    "start": "1580960",
    "end": "1588320"
  },
  {
    "text": "uh flux will use the uh cattle cube config so whatever you have there in your uh",
    "start": "1588320",
    "end": "1595120"
  },
  {
    "text": "the default um the flux bootstrap will address that now maybe our git provider",
    "start": "1595120",
    "end": "1603120"
  },
  {
    "text": "implementations are not enough for you so that's why we also reused uh much of the flux bootstrap",
    "start": "1603120",
    "end": "1610320"
  },
  {
    "text": "code and created a flux platform provider so you can use our terraform provider",
    "start": "1610320",
    "end": "1618080"
  },
  {
    "text": "and target your own git hosts your own clusters and so on",
    "start": "1618080",
    "end": "1623600"
  },
  {
    "text": "so there are here are two ways of you know setting up flux on your cluster",
    "start": "1623600",
    "end": "1630000"
  },
  {
    "text": "configure deploy keys so that flux has access to your your repo",
    "start": "1630000",
    "end": "1635600"
  },
  {
    "text": "you can also specify teams access to that particular ripple and flux bootstrap is also",
    "start": "1635600",
    "end": "1643919"
  },
  {
    "text": "the way to upgrade flux on clusters it's either important you can run it",
    "start": "1643919",
    "end": "1649670"
  },
  {
    "text": "[Music] no matter how many times you want if something is new if you specify a new",
    "start": "1649670",
    "end": "1655520"
  },
  {
    "text": "version or you are using the embedded version in the flex client it will detect oh i need",
    "start": "1655520",
    "end": "1661440"
  },
  {
    "text": "now to upgrade and what it will do it will coming back to your git repo and flux will update itself so",
    "start": "1661440",
    "end": "1667600"
  },
  {
    "text": "flux version 2 is managing itself through git",
    "start": "1667600",
    "end": "1674799"
  },
  {
    "text": "let's see how this looks so you have the fleet repo there you store",
    "start": "1676000",
    "end": "1681919"
  },
  {
    "text": "all your definitions and an overlay for for each cluster",
    "start": "1681919",
    "end": "1687120"
  },
  {
    "text": "then all these flux controllers are running on each cluster and they will",
    "start": "1687120",
    "end": "1692799"
  },
  {
    "text": "pull changes from from the free triple any change to an infrastructure item or",
    "start": "1692799",
    "end": "1697919"
  },
  {
    "text": "let's say you add the tenant or you uh change the you know the access policy",
    "start": "1697919",
    "end": "1703360"
  },
  {
    "text": "of a particular uh app you change some airbag and so on uh flux will detect that change and will",
    "start": "1703360",
    "end": "1709279"
  },
  {
    "text": "apply it on one cluster or on many clusters depending on how you you want to do this master multi-cluster",
    "start": "1709279",
    "end": "1716960"
  },
  {
    "text": "management terms of cluster management version 2",
    "start": "1716960",
    "end": "1724480"
  },
  {
    "text": "comes with many features one important feature that we we've built into version 2 is dependency",
    "start": "1724480",
    "end": "1732080"
  },
  {
    "text": "management for infrastructure and apps and i will i will give you an example of what that means",
    "start": "1732080",
    "end": "1738080"
  },
  {
    "text": "let's say you have you want to install a controller that comes with its own",
    "start": "1738080",
    "end": "1745360"
  },
  {
    "text": "custom resource definition let's say you want to provision certificates from let's encrypt",
    "start": "1745360",
    "end": "1751600"
  },
  {
    "text": "dynamically for your apps the best way to do that is by using cert manager which is a",
    "start": "1751600",
    "end": "1758960"
  },
  {
    "text": "cncf project and the issue here is inside the same repo",
    "start": "1758960",
    "end": "1765440"
  },
  {
    "text": "you'll have the set manager definitions um maybe you refer to the upstream uh",
    "start": "1765440",
    "end": "1773200"
  },
  {
    "text": "helm chart for set manager and you want to install server manager from that chart maybe you",
    "start": "1773200",
    "end": "1779679"
  },
  {
    "text": "want to get the cell manager custom resource definitions from their uh github repository release page",
    "start": "1779679",
    "end": "1787120"
  },
  {
    "text": "flux allows you to combine things like plain yamls that come from urls with other yamas that come from git repos",
    "start": "1787120",
    "end": "1794399"
  },
  {
    "text": "and other configurations that come from helm repository so you can bundle them together and",
    "start": "1794399",
    "end": "1799440"
  },
  {
    "text": "create an a definition that",
    "start": "1799440",
    "end": "1804240"
  },
  {
    "text": "reconciles set manager on your cluster and keeps it up to date now let's say you want to create",
    "start": "1804640",
    "end": "1812080"
  },
  {
    "text": "now certificates using the cell manager custom resources if you apply the",
    "start": "1812080",
    "end": "1820000"
  },
  {
    "text": "certificate definition along with cert manager deployment at the same time",
    "start": "1820000",
    "end": "1826159"
  },
  {
    "text": "in flux version 2 they will fail and why they will fail because we've",
    "start": "1826159",
    "end": "1831679"
  },
  {
    "text": "enabled by default kubernetes api server side validation why we we did",
    "start": "1831679",
    "end": "1838000"
  },
  {
    "text": "that because we want to make sure that every commit that you do every change of your infrastructure",
    "start": "1838000",
    "end": "1844159"
  },
  {
    "text": "uh is applied as a transaction on your kubernetes cluster so if you change",
    "start": "1844159",
    "end": "1849279"
  },
  {
    "text": "let's say 10 manifests one change is not acceptable maybe you have something that",
    "start": "1849279",
    "end": "1855279"
  },
  {
    "text": "i don't know something like a gatekeeper will reject or maybe even the kubernetes api reject",
    "start": "1855279",
    "end": "1860960"
  },
  {
    "text": "there is a typo there instead of i don't know type load balancer you mistype stuff like that the kubernetes",
    "start": "1860960",
    "end": "1868960"
  },
  {
    "text": "api rejected so how can we compose our",
    "start": "1868960",
    "end": "1874240"
  },
  {
    "text": "infrastructure items in a way that works with kubernetes and also",
    "start": "1874240",
    "end": "1880960"
  },
  {
    "text": "it enforces validation we have these depends on field inside our custom",
    "start": "1880960",
    "end": "1888320"
  },
  {
    "text": "resources so you can say i want to have cert manager installed",
    "start": "1888320",
    "end": "1894640"
  },
  {
    "text": "then i'll also declare here health check which looks at cert manager deployment",
    "start": "1894640",
    "end": "1900320"
  },
  {
    "text": "and i'm saying hey i want to install set manager it's custom resource definitions i want",
    "start": "1900320",
    "end": "1906159"
  },
  {
    "text": "to make sure set manager is up and running and only then apply",
    "start": "1906159",
    "end": "1911760"
  },
  {
    "text": "the certificates manifests and this applies to many things not only",
    "start": "1911760",
    "end": "1917519"
  },
  {
    "text": "self manager maybe you want to enforce policies right at the cluster bootstrap",
    "start": "1917519",
    "end": "1923600"
  },
  {
    "text": "so maybe you want to say i want kiverno or opa gatekeeper to be the first thing",
    "start": "1923600",
    "end": "1930480"
  },
  {
    "text": "that gets deployed on my cluster and only then apply other configuration that i don't have",
    "start": "1930480",
    "end": "1935919"
  },
  {
    "text": "control over maybe those other configurations are coming from",
    "start": "1935919",
    "end": "1941039"
  },
  {
    "text": "repositories that are managed by your dev teams or by your clients and so on you want to",
    "start": "1941039",
    "end": "1947440"
  },
  {
    "text": "apply the policy right at bootstrap so this is how you you can do it by uh by building a",
    "start": "1947440",
    "end": "1954799"
  },
  {
    "text": "dependency graph out of your infrastructure and apps and you can",
    "start": "1954799",
    "end": "1960559"
  },
  {
    "text": "you can define dependencies between helm releases between plane ammos and other customizations",
    "start": "1960559",
    "end": "1966559"
  },
  {
    "text": "between customized overlays and so on um that depends on",
    "start": "1966559",
    "end": "1972320"
  },
  {
    "text": "graph takes into account all all the flux things so to say",
    "start": "1972320",
    "end": "1980480"
  },
  {
    "text": "other features that we've we've added in in version 2 is the possibility to impersonate",
    "start": "1980480",
    "end": "1988240"
  },
  {
    "text": "a kubernetes service accounts when you do a reconciliation so let's say you have a health chart",
    "start": "1988240",
    "end": "1995440"
  },
  {
    "text": "and you don't have control over what's in that hand chart but you know",
    "start": "1995440",
    "end": "2001840"
  },
  {
    "text": "for sure that that particular app shouldn't shouldn't create for example when when it gets installed",
    "start": "2001840",
    "end": "2008720"
  },
  {
    "text": "shouldn't create an ingress definition or it shouldn't create the cluster role binding it",
    "start": "2008720",
    "end": "2014880"
  },
  {
    "text": "shouldn't make itself cluster admin and so on how can you prevent that you can prevent",
    "start": "2014880",
    "end": "2021200"
  },
  {
    "text": "it by telling flux hey when you install this particular app",
    "start": "2021200",
    "end": "2026559"
  },
  {
    "text": "use this service account and for that service account you can set up restrictions",
    "start": "2026559",
    "end": "2033919"
  },
  {
    "text": "using a roll binding for example and you can say from this repository or from this hem",
    "start": "2033919",
    "end": "2040080"
  },
  {
    "text": "chart all the things that are applied on the cluster cannot modify anything else but objects inside that",
    "start": "2040080",
    "end": "2045760"
  },
  {
    "text": "particular namespace right so we have namespace encapsulation but it's not only about",
    "start": "2045760",
    "end": "2051280"
  },
  {
    "text": "uh namespaces uh one app can you know reflect itself inside the",
    "start": "2051280",
    "end": "2056800"
  },
  {
    "text": "cluster in multiple link spaces right maybe uh an app is composed of microservices and you have a database",
    "start": "2056800",
    "end": "2063280"
  },
  {
    "text": "namespace and a front-end namespace and so on what you can do is create a cluster role",
    "start": "2063280",
    "end": "2070000"
  },
  {
    "text": "binding for that particular service account and grant that service account access only to those namespaces",
    "start": "2070000",
    "end": "2075839"
  },
  {
    "text": "so it's it's not only about one app one namespace is about what that app",
    "start": "2075839",
    "end": "2083118"
  },
  {
    "text": "needs to do inside the cluster you'll allow it to do it but only that thing nothing more so",
    "start": "2083119",
    "end": "2090560"
  },
  {
    "text": "this is how i call it soft multi-tenancy that kubernetes offers through namespaces and",
    "start": "2090560",
    "end": "2096560"
  },
  {
    "text": "and arbut but that doesn't mean that you know is the right way for everybody",
    "start": "2096560",
    "end": "2103920"
  },
  {
    "text": "in in many cases you may want hard multi-tenancy where for each tenant",
    "start": "2103920",
    "end": "2109599"
  },
  {
    "text": "you dedicate a cluster or a set of clusters",
    "start": "2109599",
    "end": "2114640"
  },
  {
    "text": "and for that flux integrates with kubernetes cluster api",
    "start": "2115440",
    "end": "2122320"
  },
  {
    "text": "and what you can do is in your flip ripple you can place the cluster",
    "start": "2122320",
    "end": "2129280"
  },
  {
    "text": "definitions and you install flux on your management cluster",
    "start": "2129280",
    "end": "2135040"
  },
  {
    "text": "there on the management cluster it's running flux and it's also running your cluster api provider right when you add",
    "start": "2135040",
    "end": "2143040"
  },
  {
    "text": "for example a new cluster definition then you can tell flux to apply that",
    "start": "2143040",
    "end": "2148320"
  },
  {
    "text": "cluster definition wait for the cluster to be created and then you can tell like say on that",
    "start": "2148320",
    "end": "2154160"
  },
  {
    "text": "particular cluster please reconcile that particular repository which is",
    "start": "2154160",
    "end": "2159599"
  },
  {
    "text": "your tenant report story and this way you can isolate tenants at cluster level and have a higher",
    "start": "2159599",
    "end": "2165440"
  },
  {
    "text": "multi-tenancy approach to you know dealing with with tenants and so on",
    "start": "2165440",
    "end": "2173119"
  },
  {
    "text": "other things with we have in flux we have integrated with mozilla soaps",
    "start": "2173119",
    "end": "2180720"
  },
  {
    "text": "if you haven't heard of it is mozilla subs is a tool is a cli that lets you",
    "start": "2180720",
    "end": "2187119"
  },
  {
    "text": "encrypt fields inside that file so you can",
    "start": "2187119",
    "end": "2192400"
  },
  {
    "text": "safely place a kubernetes secret manifest in a public git repo and no one will be",
    "start": "2192400",
    "end": "2198400"
  },
  {
    "text": "able to see what's in there the manifest will be encrypted and only",
    "start": "2198400",
    "end": "2204240"
  },
  {
    "text": "flux or the cluster where flux runs only there is the private key",
    "start": "2204240",
    "end": "2209520"
  },
  {
    "text": "and you don't need to run a yet another controller flux does that by default you just tell flux say use this pgp key",
    "start": "2209520",
    "end": "2216960"
  },
  {
    "text": "to decrypt the secrets in my git ripple or connect to this cloud kms implementation",
    "start": "2216960",
    "end": "2222720"
  },
  {
    "text": "beat aws azure vault google kms and so on",
    "start": "2222720",
    "end": "2228079"
  },
  {
    "text": "sops integrates with so many backends even hash corp vault i think and",
    "start": "2228079",
    "end": "2234880"
  },
  {
    "text": "flux will use these mozilla stops as a library and can connect all these providers pull the",
    "start": "2234880",
    "end": "2242240"
  },
  {
    "text": "the private key from there decrypt the secret before it applies it on the cluster right so in this way you have secret",
    "start": "2242240",
    "end": "2249440"
  },
  {
    "text": "management out of the box with subs on the client side and flux",
    "start": "2249440",
    "end": "2255520"
  },
  {
    "text": "on the server side in in your clusters we also use you you can also use gpg to",
    "start": "2255520",
    "end": "2263599"
  },
  {
    "text": "authenticate um not authenticate to um you know",
    "start": "2263599",
    "end": "2271040"
  },
  {
    "text": "verify that the person that made the particular change in in the cl in the git repo is allowed",
    "start": "2271040",
    "end": "2277920"
  },
  {
    "text": "to do that um and and the way to uh um to enforce",
    "start": "2277920",
    "end": "2284480"
  },
  {
    "text": "this kind of authentic uh this kind of validation is by making your uh teams use",
    "start": "2284480",
    "end": "2291839"
  },
  {
    "text": "gpg to sign commits then you collect the the public keys from all",
    "start": "2291839",
    "end": "2297599"
  },
  {
    "text": "the team members that are approved to make a change let's say on your production cluster and you tell flux hey",
    "start": "2297599",
    "end": "2304000"
  },
  {
    "text": "only these people are allowed to make changes so let's say someone hacks your your",
    "start": "2304000",
    "end": "2312079"
  },
  {
    "text": "github account uh you to have access to the repository everything in there it can",
    "start": "2312079",
    "end": "2318400"
  },
  {
    "text": "change something and that something will be deployed on production but if that person doesn't also steal",
    "start": "2318400",
    "end": "2325920"
  },
  {
    "text": "your private key your i don't know ub key and so on then even if it commits",
    "start": "2325920",
    "end": "2331280"
  },
  {
    "text": "in your name because it has your github authentication that change will not be applied on the",
    "start": "2331280",
    "end": "2337520"
  },
  {
    "text": "cluster because flux will verify the signature uh it will not match or it will have no",
    "start": "2337520",
    "end": "2342640"
  },
  {
    "text": "signature to reject any change to the cluster from that moment on and what flux will do will",
    "start": "2342640",
    "end": "2348640"
  },
  {
    "text": "send an alert kubernetes event and you can configure um alerting through slack to other",
    "start": "2348640",
    "end": "2356820"
  },
  {
    "text": "[Music] messaging platforms and let you know hey",
    "start": "2356820",
    "end": "2362880"
  },
  {
    "text": "someone has used has commit something but is not in the uh proof list",
    "start": "2362880",
    "end": "2370000"
  },
  {
    "text": "so you can you know act on it and figure out what's going on but the",
    "start": "2370000",
    "end": "2376160"
  },
  {
    "text": "important part is that unauthorized changes will never be applied on the cluster if you use commit",
    "start": "2376160",
    "end": "2381520"
  },
  {
    "text": "signing [Music]",
    "start": "2381520",
    "end": "2386960"
  },
  {
    "text": "going next we already mentioned flux observability features",
    "start": "2386960",
    "end": "2394839"
  },
  {
    "text": "we expose now uh things uh as a custom resource in the custom",
    "start": "2394839",
    "end": "2401359"
  },
  {
    "text": "resource substatus resource so what what that means is that you can do cattle get cuddle",
    "start": "2401359",
    "end": "2408400"
  },
  {
    "text": "describe and see if something goes wrong when or when did",
    "start": "2408400",
    "end": "2413599"
  },
  {
    "text": "the flux last apply the commit what gitsha is is applied on the cluster and so on",
    "start": "2413599",
    "end": "2422720"
  },
  {
    "text": "we we also allow you to create health checks for workloads and also custom resources for example",
    "start": "2422720",
    "end": "2429280"
  },
  {
    "text": "you could create a check for uh i don't know um open fast",
    "start": "2429280",
    "end": "2434800"
  },
  {
    "text": "function or something like that that's not native kubernetes but if it has a ready",
    "start": "2434800",
    "end": "2440319"
  },
  {
    "text": "condition or or something that's uh compatible with k status we'll be able to look at it and",
    "start": "2440319",
    "end": "2446000"
  },
  {
    "text": "you know give you the end result and flux when you when you define a",
    "start": "2446000",
    "end": "2452240"
  },
  {
    "text": "health check what flux does is it waits for that health check to resolve",
    "start": "2452240",
    "end": "2458079"
  },
  {
    "text": "so if you push 10 commits and flux will apply the first one it will not apply any other changes to",
    "start": "2458079",
    "end": "2465440"
  },
  {
    "text": "the system unless the health check has a resolution either works or it fails right so this way you",
    "start": "2465440",
    "end": "2472480"
  },
  {
    "text": "can ensure yet again a transactional mode of how things are applied on the cluster",
    "start": "2472480",
    "end": "2478960"
  },
  {
    "text": "we also issue kubernetes events for everything that's happening so if you have a if you have a tool that",
    "start": "2478960",
    "end": "2487280"
  },
  {
    "text": "you know gets the kubernetes events and stores them in your elastic search and so on you can build your own",
    "start": "2487280",
    "end": "2492880"
  },
  {
    "text": "notification system only based on those events we also also the flux controllers are using uh",
    "start": "2492880",
    "end": "2500000"
  },
  {
    "text": "structured logging in json format so if you use a cloud for storing logs you will you can",
    "start": "2500000",
    "end": "2506960"
  },
  {
    "text": "automatically create automatically you can easily create items based on type error or filter by custom resources",
    "start": "2506960",
    "end": "2514960"
  },
  {
    "text": "and so on um we also ship graphana dashboards you have an example here where",
    "start": "2514960",
    "end": "2521920"
  },
  {
    "text": "everything does define in uh in flux uh exposes promiscuous metrics so you can",
    "start": "2521920",
    "end": "2528560"
  },
  {
    "text": "use let's say prometheus alert manager to build your alerting you have so many options now on how you want to you know look into",
    "start": "2528560",
    "end": "2536400"
  },
  {
    "text": "what flux is doing and i also want to mention uh the commit status update feature this",
    "start": "2536400",
    "end": "2543680"
  },
  {
    "text": "was uh implemented by philip one of the flux maintainers so",
    "start": "2543680",
    "end": "2550560"
  },
  {
    "text": "like ci if you if you go to i know github gitlab and so on you'll see that when a ci job",
    "start": "2550560",
    "end": "2557520"
  },
  {
    "text": "runs the result of that job is posted back on your commit in git and you can",
    "start": "2557520",
    "end": "2565680"
  },
  {
    "text": "see if that commit has been successfully built or it failed",
    "start": "2565680",
    "end": "2571359"
  },
  {
    "text": "now in the same way flux can reflect what's happening with your uh your changes inside the cluster if",
    "start": "2571359",
    "end": "2578000"
  },
  {
    "text": "you configure flux to write back to github commit status you",
    "start": "2578000",
    "end": "2583119"
  },
  {
    "text": "should create a token that allows fox only to do that",
    "start": "2583119",
    "end": "2588800"
  },
  {
    "text": "for example if a health check fails flux right back to your uh to your git on that commit and it",
    "start": "2588800",
    "end": "2594079"
  },
  {
    "text": "will tell you uh what um let's say what deployment is failing or",
    "start": "2594079",
    "end": "2599680"
  },
  {
    "text": "if the validation fails and so on so if you want instant feedback in your um you know git platform without",
    "start": "2599680",
    "end": "2606880"
  },
  {
    "text": "going to slack or discord or other platforms you can have that um status posted right there and it",
    "start": "2606880",
    "end": "2613839"
  },
  {
    "text": "works with also with asia devos bitbucket and we are working on on expanding this commit status feature",
    "start": "2613839",
    "end": "2621119"
  },
  {
    "text": "to other platforms",
    "start": "2621119",
    "end": "2624160"
  },
  {
    "text": "okay let's talk about platform engineers so",
    "start": "2627680",
    "end": "2634640"
  },
  {
    "text": "you're a platform engineer and you want to build something that you know flux doesn't do",
    "start": "2634640",
    "end": "2643760"
  },
  {
    "text": "you can you can use our toolkit so in order to develop flux version 2 we first built",
    "start": "2643760",
    "end": "2650160"
  },
  {
    "text": "um it's like an sdk if you think about it uh and we call it",
    "start": "2650160",
    "end": "2655520"
  },
  {
    "text": "the github store kit and github's toolkit is composed out of apis which are represented as kubernetes",
    "start": "2655520",
    "end": "2662000"
  },
  {
    "text": "custom resource definitions controllers and golang packages so all these things",
    "start": "2662000",
    "end": "2668400"
  },
  {
    "text": "together if you put them together you can build [Music] cd pipelines but maybe you don't want to",
    "start": "2668400",
    "end": "2675760"
  },
  {
    "text": "build continuous delivery things maybe you want to build continuous integration things",
    "start": "2675760",
    "end": "2681040"
  },
  {
    "text": "uh and maybe you want to use uh some components from from flux to",
    "start": "2681040",
    "end": "2686079"
  },
  {
    "text": "achieve that but flux will not build your source code or not do anything with it but you can use",
    "start": "2686079",
    "end": "2692640"
  },
  {
    "text": "the tokyo then build your own controllers and extend it in that way if that's what you are looking for",
    "start": "2692640",
    "end": "2701200"
  },
  {
    "text": "at the core of the github's toolkit is a controller and an api called source controller what",
    "start": "2701280",
    "end": "2707599"
  },
  {
    "text": "source controller does is it can pull",
    "start": "2707599",
    "end": "2713520"
  },
  {
    "text": "artifacts from external sources like git repos like s3 buckets menio",
    "start": "2713520",
    "end": "2720240"
  },
  {
    "text": "any kind of s3 compatible storage will work also helm repositories",
    "start": "2720240",
    "end": "2726960"
  },
  {
    "text": "and so on and you can build your own consumer that reacts to source changes",
    "start": "2726960",
    "end": "2734560"
  },
  {
    "text": "let's say you do a git commit source controller will pull that commit inside the cluster then",
    "start": "2734560",
    "end": "2739680"
  },
  {
    "text": "we'll let your consumer know hey there is a new version you want to do something with it and your consumer can take that new",
    "start": "2739680",
    "end": "2746400"
  },
  {
    "text": "version and act on it so based on this",
    "start": "2746400",
    "end": "2753599"
  },
  {
    "text": "workflow this is how we've built flux version 2 and we've we've developed specialized reconcilers",
    "start": "2753599",
    "end": "2760480"
  },
  {
    "text": "that are using the the source apis and the artifacts the source controller creates",
    "start": "2760480",
    "end": "2766240"
  },
  {
    "text": "and the specialized reconcilers are customized controller",
    "start": "2766240",
    "end": "2771440"
  },
  {
    "text": "something that knows how to apply customized overlay or even plain yamas from a repo or from an s3 bucket",
    "start": "2771440",
    "end": "2779680"
  },
  {
    "text": "we have a helm controller that is specialized for helm operations it knows how to",
    "start": "2779680",
    "end": "2785599"
  },
  {
    "text": "install a helm chart how to upgrade it how to run tests for it it knows how to",
    "start": "2785599",
    "end": "2792000"
  },
  {
    "text": "roll back that particular version if the test failed and so on and we also have controllers that",
    "start": "2792000",
    "end": "2800960"
  },
  {
    "text": "are built for uh automation like the image reflector controller and the image automation controller i'll talk",
    "start": "2800960",
    "end": "2807280"
  },
  {
    "text": "about that um in a bit if you want to get started with the with the github circuit and write",
    "start": "2807280",
    "end": "2813680"
  },
  {
    "text": "your own controller we have a guide published on our docs",
    "start": "2813680",
    "end": "2819520"
  },
  {
    "text": "where you can create a source watcher so it's a controller built with cube",
    "start": "2819520",
    "end": "2825440"
  },
  {
    "text": "builder and controller runtime that collaborates with source controller detects",
    "start": "2825440",
    "end": "2831920"
  },
  {
    "text": "that something has changed and pulls the artifact from source control and from there you can",
    "start": "2831920",
    "end": "2837040"
  },
  {
    "text": "take decisions on your own what you want to do with those changes",
    "start": "2837040",
    "end": "2842480"
  },
  {
    "text": "yeah so please check out uh source watcher if you if you are into you know building your",
    "start": "2842480",
    "end": "2848720"
  },
  {
    "text": "own uh pipelines okay we finally got to app uh developers",
    "start": "2848720",
    "end": "2856720"
  },
  {
    "text": "as as our use case so as an app developer if you want to do",
    "start": "2856720",
    "end": "2863359"
  },
  {
    "text": "if you want to deliver your app on some cluster you'll have to take several steps of course you make a",
    "start": "2863359",
    "end": "2870640"
  },
  {
    "text": "change to your source code you'll have to build that change into a container image",
    "start": "2870640",
    "end": "2876079"
  },
  {
    "text": "you'll be pushing that container image to a registry then you'll have to update your",
    "start": "2876079",
    "end": "2883440"
  },
  {
    "text": "deployment manifest with the image tag that you've just pushed then you'll do a cue catalog",
    "start": "2883440",
    "end": "2889680"
  },
  {
    "text": "of your deployment manifests on a particular cluster or several clusters right so",
    "start": "2889680",
    "end": "2896800"
  },
  {
    "text": "this is the journey from source code to to a cluster manually",
    "start": "2896800",
    "end": "2903760"
  },
  {
    "text": "with you know cli tools now if we add automation",
    "start": "2903760",
    "end": "2912079"
  },
  {
    "text": "to this workflow ci can uh can help you",
    "start": "2912079",
    "end": "2919760"
  },
  {
    "text": "get to an immutable artifact a container image that you push to your registry and",
    "start": "2919760",
    "end": "2925359"
  },
  {
    "text": "you never change and you can do that by using your git shot and the timestamp or",
    "start": "2925359",
    "end": "2931839"
  },
  {
    "text": "december or something that you is unique you have to tag your image with",
    "start": "2931839",
    "end": "2938000"
  },
  {
    "text": "something that is unique and the important part is you'll never override that image tag that's the only way to",
    "start": "2938000",
    "end": "2946240"
  },
  {
    "text": "have a consistent versioning of your of your system now the continuous delivery part will",
    "start": "2946240",
    "end": "2953280"
  },
  {
    "text": "deal with something change the deployment manifests okay i have to deploy on one",
    "start": "2953280",
    "end": "2958319"
  },
  {
    "text": "cluster many clusters depending on the environments now who does the update in the",
    "start": "2958319",
    "end": "2965440"
  },
  {
    "text": "deployment manifest itself you can have your ci system right to the",
    "start": "2965440",
    "end": "2972559"
  },
  {
    "text": "the git repo where the manifests are maybe the git repo is the same as the source code",
    "start": "2972559",
    "end": "2979279"
  },
  {
    "text": "but that means see i have to you know deal with yaml we have to do replace on that and so on",
    "start": "2979359",
    "end": "2987060"
  },
  {
    "text": "[Music] flux comes with its own automation solution for that",
    "start": "2987060",
    "end": "2992880"
  },
  {
    "text": "so instead of having to deal with replacing image tags and so on from ci",
    "start": "2992880",
    "end": "3000400"
  },
  {
    "text": "you will push the image to your container registry and from there flux will decide based on a policy that",
    "start": "3000400",
    "end": "3008400"
  },
  {
    "text": "you have defined if it should be updated or not and how that works",
    "start": "3008400",
    "end": "3014240"
  },
  {
    "text": "let's see so we have two controllers that are collaborating on on this",
    "start": "3014240",
    "end": "3020319"
  },
  {
    "text": "feature one controller is called image reflector controller and what this controller does it scans",
    "start": "3020319",
    "end": "3026319"
  },
  {
    "text": "container registries based on a policy that you have defined and based on a",
    "start": "3026319",
    "end": "3031839"
  },
  {
    "text": "image repository configuration where you for example specify",
    "start": "3031839",
    "end": "3037200"
  },
  {
    "text": "how the reflector should authenticate to connect to that uh repository and",
    "start": "3037200",
    "end": "3043040"
  },
  {
    "text": "inside the policy you specify which tags uh should be",
    "start": "3043040",
    "end": "3048240"
  },
  {
    "text": "taken into account and how flux should order them for example you could use symbol ranges",
    "start": "3048240",
    "end": "3055359"
  },
  {
    "text": "and determine the latest version based on assembler expression or you can use regex and",
    "start": "3055359",
    "end": "3063200"
  },
  {
    "text": "ordering by timestamps or using a numbering order let's say",
    "start": "3063200",
    "end": "3069440"
  },
  {
    "text": "you you have an incremental build id and you can add that to your tags and you can tell",
    "start": "3069440",
    "end": "3075599"
  },
  {
    "text": "flux to order them by by the bill id to determine what's the latest uh version that you want to define",
    "start": "3075599",
    "end": "3083680"
  },
  {
    "text": "and finally you configure flux to write back that change to the git repo",
    "start": "3083680",
    "end": "3088880"
  },
  {
    "text": "and that's the image automation controller what the image automation controller does is when um",
    "start": "3088880",
    "end": "3097280"
  },
  {
    "text": "the reflector detects a new tag it takes that tag it uses customized libraries",
    "start": "3097280",
    "end": "3105119"
  },
  {
    "text": "called kml a customized library called kml it clones your ripple",
    "start": "3105119",
    "end": "3112240"
  },
  {
    "text": "it finds where it needs to replace that particular tag it replace that that tag in your yaml",
    "start": "3112240",
    "end": "3119520"
  },
  {
    "text": "file then it commits the yaml file back to the ripple right when that happens source",
    "start": "3119520",
    "end": "3126000"
  },
  {
    "text": "controller will detect oh there is a new change in the um cluster configurable on your fleet",
    "start": "3126000",
    "end": "3133119"
  },
  {
    "text": "management report and it will do what it's supposed to do it will pull the change then",
    "start": "3133119",
    "end": "3138559"
  },
  {
    "text": "helm or customize control or whatever reconciler you have will apply that new",
    "start": "3138559",
    "end": "3144000"
  },
  {
    "text": "image on your cluster so how flux does",
    "start": "3144000",
    "end": "3150559"
  },
  {
    "text": "image automation is not by changing the cluster state directly is by always reflecting changes from",
    "start": "3150559",
    "end": "3157760"
  },
  {
    "text": "other systems inside your git repo and what that means is that you can see a commit made by flux you can",
    "start": "3157760",
    "end": "3166160"
  },
  {
    "text": "you know during an incident you can pause the image update automation you can roll back that commit you can go",
    "start": "3166160",
    "end": "3171839"
  },
  {
    "text": "there and disable maybe the automation for i don't know the weekend and so on maybe",
    "start": "3171839",
    "end": "3177520"
  },
  {
    "text": "you don't want you don't want to deploy on fridays right so you can you can disable only that uh",
    "start": "3177520",
    "end": "3183200"
  },
  {
    "text": "object which is the image update automation that doesn't mean your cluster state is not",
    "start": "3183200",
    "end": "3188400"
  },
  {
    "text": "correcting drift sense on what you are doing you are just pausing a certain",
    "start": "3188400",
    "end": "3194800"
  },
  {
    "text": "automation in your continuous delivery system and we've we've added uh futures",
    "start": "3194800",
    "end": "3203280"
  },
  {
    "text": "for you to feel comfortable during an incident to not fight flux so in in version one you had to scale",
    "start": "3203280",
    "end": "3210400"
  },
  {
    "text": "flux to zero because if you want to edit something then flux will override it and so on",
    "start": "3210400",
    "end": "3215760"
  },
  {
    "text": "um in version two we allow you to suspend for a",
    "start": "3215760",
    "end": "3221520"
  },
  {
    "text": "for a time interval a particular reconciliation so let's say you have uh you have an",
    "start": "3221520",
    "end": "3228480"
  },
  {
    "text": "incident for a particular app and that app comes from uh helm release instead of disabling everything you can",
    "start": "3228480",
    "end": "3235839"
  },
  {
    "text": "just say i want to suspend the reconciliation of that helm release from this moment on",
    "start": "3235839",
    "end": "3241200"
  },
  {
    "text": "doesn't matter what changes i don't want the hand release to be upgraded i want to go there use i don't know helm cli and",
    "start": "3241200",
    "end": "3248880"
  },
  {
    "text": "do my own thing to fix the issue then after you determine what needs to be fixed those changes",
    "start": "3248880",
    "end": "3256319"
  },
  {
    "text": "should end up in it as a fix right after you committed the",
    "start": "3256319",
    "end": "3261599"
  },
  {
    "text": "the fixing git then you can resume flux operations and flux will pull the",
    "start": "3261599",
    "end": "3267440"
  },
  {
    "text": "latest version maybe is the same stuff with what you already did on the cluster and nothing will change",
    "start": "3267440",
    "end": "3273040"
  },
  {
    "text": "but the idea is that now you have fine grain control of what's happening and when is happening",
    "start": "3273040",
    "end": "3279599"
  },
  {
    "text": "inside your cluster it's not the do it all thing like uh i'm reconciling",
    "start": "3279599",
    "end": "3284960"
  },
  {
    "text": "everything or nothing so that's those are some uh good steps we made in in in that",
    "start": "3284960",
    "end": "3292319"
  },
  {
    "text": "direction uh you want to mention something new here about",
    "start": "3292319",
    "end": "3298798"
  },
  {
    "text": "updates automation yeah this is uh this is a cool thing to",
    "start": "3299200",
    "end": "3305520"
  },
  {
    "text": "point out i oh can you you can't hear me no i can't yeah cool yeah this is a cool thing to",
    "start": "3305520",
    "end": "3312240"
  },
  {
    "text": "point out um is that image update automations because we've built flux in such a composable",
    "start": "3312240",
    "end": "3318880"
  },
  {
    "text": "way and there are these other powerful continuous delivery features it works really well alongside",
    "start": "3318880",
    "end": "3326960"
  },
  {
    "text": "two things one is the tagging policies that you can use with git repos and",
    "start": "3326960",
    "end": "3333520"
  },
  {
    "text": "helm releases is you can rely on flux to like you said reflect those",
    "start": "3333520",
    "end": "3340240"
  },
  {
    "text": "changes from an image registry you can get those changes into your repository",
    "start": "3340240",
    "end": "3346240"
  },
  {
    "text": "but that doesn't necessarily need to release at that point to every environment that",
    "start": "3346240",
    "end": "3351920"
  },
  {
    "text": "you have right and so because you can still keep manual control",
    "start": "3351920",
    "end": "3357520"
  },
  {
    "text": "uh or use other systems to decide when a stage tag gets applied to that commit",
    "start": "3357520",
    "end": "3364319"
  },
  {
    "text": "that flux made to your repo right or when the production tag gets promoted to that point in the repo",
    "start": "3364319",
    "end": "3370400"
  },
  {
    "text": "and i think that that's really cool the other point is that the way that we've done image updates",
    "start": "3370400",
    "end": "3378799"
  },
  {
    "text": "uh composes super well with more mature manifest workflows so",
    "start": "3378799",
    "end": "3384079"
  },
  {
    "text": "uh i'm really excited about how that comment annotation on any structured",
    "start": "3384079",
    "end": "3390240"
  },
  {
    "text": "file in the repo can function with manifest generation",
    "start": "3390240",
    "end": "3396400"
  },
  {
    "text": "style use cases like from flux1 where you can now get those image automation updates into",
    "start": "3396400",
    "end": "3403440"
  },
  {
    "text": "some config that then produces your manifests uh without being worried about it having",
    "start": "3403440",
    "end": "3409280"
  },
  {
    "text": "to be coupled to the specific type of deployment resource you have uh so just like way more flexible way of",
    "start": "3409280",
    "end": "3415040"
  },
  {
    "text": "designing it um right right composes super well yeah right good point we in in the past flux",
    "start": "3415040",
    "end": "3422400"
  },
  {
    "text": "version one was only capable of patching uh image tags inside uh the native",
    "start": "3422400",
    "end": "3428480"
  },
  {
    "text": "kubernetes uh workload definitions that means deployment stateful set demon set and cron job",
    "start": "3428480",
    "end": "3436400"
  },
  {
    "text": "but now in version 2 and because we use [Music]",
    "start": "3436400",
    "end": "3442240"
  },
  {
    "text": "the kml library we are able to patch any kind of kubernetes custom resource we don't have",
    "start": "3442240",
    "end": "3448240"
  },
  {
    "text": "to know about it if it's a custom resource if it subscribes to kubernetes api we",
    "start": "3448240",
    "end": "3454319"
  },
  {
    "text": "based on on the marker that you've had there we are able to patch it so for example we can now patch",
    "start": "3454319",
    "end": "3460880"
  },
  {
    "text": "um [Music] customization configuration we can patch",
    "start": "3460880",
    "end": "3467599"
  },
  {
    "text": "a hand release file we can patch on a text on task that you know builds builds your images",
    "start": "3467599",
    "end": "3474480"
  },
  {
    "text": "maybe you want to let's say you have a tecton task that builds with go right so and you",
    "start": "3474480",
    "end": "3481839"
  },
  {
    "text": "want to always build using the latest go patch version where cvs are shipped right so you want",
    "start": "3481839",
    "end": "3489440"
  },
  {
    "text": "to keep your api system up to date you can just use these two controllers and",
    "start": "3489440",
    "end": "3496000"
  },
  {
    "text": "you can uh you can update all your all your ci pipelines uh so they will be",
    "start": "3496000",
    "end": "3504160"
  },
  {
    "text": "using the the the latest uh yeah it doesn't even need to be",
    "start": "3504160",
    "end": "3509440"
  },
  {
    "text": "an object that lives in kubernetes that you update the image tag with it can be any yaml file that has",
    "start": "3509440",
    "end": "3516559"
  },
  {
    "text": "some kubernetes structure like the customization yaml that you mentioned and that opens the door for like",
    "start": "3516559",
    "end": "3523119"
  },
  {
    "text": "communicating your image updates to not just kubernetes right but systems that produce kubernetes",
    "start": "3523119",
    "end": "3529680"
  },
  {
    "text": "manifests or other things that would want to know about your image updates like a ci system that does security",
    "start": "3529680",
    "end": "3536880"
  },
  {
    "text": "vulnerability scanning you know lots of cool things you could do yeah and one one last thing about image",
    "start": "3536880",
    "end": "3543440"
  },
  {
    "text": "automation what we are currently working on is being able to push the change to a",
    "start": "3543440",
    "end": "3549440"
  },
  {
    "text": "different branch and how this works you say hey i want to use the image",
    "start": "3549440",
    "end": "3554640"
  },
  {
    "text": "automation but i don't want it to commit back to the same branch so it doesn't get deployed",
    "start": "3554640",
    "end": "3561200"
  },
  {
    "text": "automatically i want to commit it to a new branch then maybe i'm using a github action or a gitlab ci",
    "start": "3561200",
    "end": "3568000"
  },
  {
    "text": "helper that will open a pull request with all the changes that flux has determined that you need on",
    "start": "3568000",
    "end": "3573920"
  },
  {
    "text": "your cluster so someone from your sra team can review it merge it and only then those updates",
    "start": "3573920",
    "end": "3580960"
  },
  {
    "text": "will be applied on the cluster and um that's that that will be released in",
    "start": "3580960",
    "end": "3586000"
  },
  {
    "text": "the in the next uh in the next couple of weeks okay i'm running out of time i'm going to uh",
    "start": "3586000",
    "end": "3594160"
  },
  {
    "text": "escape real fast here so this is how flux version 2 looks like built on top",
    "start": "3594160",
    "end": "3600319"
  },
  {
    "text": "of the toolkit it's in a way it's a continuous loop here you push changes",
    "start": "3600319",
    "end": "3607440"
  },
  {
    "text": "manually ci pushes artifacts flux pushes patches and so on and",
    "start": "3607440",
    "end": "3612960"
  },
  {
    "text": "everything ends up as an event back to you as a notification and so on",
    "start": "3612960",
    "end": "3618240"
  },
  {
    "text": "and of course flux now can you know control more than one cluster and",
    "start": "3618240",
    "end": "3625280"
  },
  {
    "text": "reconcile it from more than one source",
    "start": "3625280",
    "end": "3629839"
  },
  {
    "text": "if you have questions if you have proposals if you want to talk to us we",
    "start": "3630640",
    "end": "3637280"
  },
  {
    "text": "are happy users of github discussions that's where all the api changes all the",
    "start": "3637280",
    "end": "3644079"
  },
  {
    "text": "proposals are going so of course you can reach us on the cncf slack but",
    "start": "3644079",
    "end": "3650319"
  },
  {
    "text": "for you know future requests and so on please use the discussion is",
    "start": "3650319",
    "end": "3656240"
  },
  {
    "text": "a great environment to debate on on new things and that was",
    "start": "3656240",
    "end": "3664240"
  },
  {
    "text": "it thank you very much my friends bye-bye check us out on flux",
    "start": "3664240",
    "end": "3676558"
  }
]