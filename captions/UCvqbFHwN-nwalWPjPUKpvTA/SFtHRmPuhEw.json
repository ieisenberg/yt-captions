[
  {
    "start": "0",
    "end": "65000"
  },
  {
    "text": "I can tell awesome okay welcome everyone this is",
    "start": "60",
    "end": "7560"
  },
  {
    "text": "the cig off intro and deep dive for cube con north america what is this 2019 yeah good so I I won't",
    "start": "7560",
    "end": "16289"
  },
  {
    "text": "let everyone know this is super informal if as a show of hands who here in the audience has intended a cig auth meeting",
    "start": "16289",
    "end": "23640"
  },
  {
    "text": "before okay so basically we have like a",
    "start": "23640",
    "end": "28980"
  },
  {
    "text": "little agenda and anyone can join at any time on zoom' and we just talk about stuff and like anyone has like anyone",
    "start": "28980",
    "end": "35160"
  },
  {
    "text": "can get right access to our agenda and all those things so in that same vein if you want to ask a question at any point",
    "start": "35160",
    "end": "41280"
  },
  {
    "text": "just say it raise your hand in any form we'll bring the mic over cool chairs yep",
    "start": "41280",
    "end": "59399"
  },
  {
    "text": "awesome so did someone ask something okay so there's a decent amount of us I",
    "start": "59399",
    "end": "67860"
  },
  {
    "start": "65000",
    "end": "100000"
  },
  {
    "text": "won't necessarily go over the name so my containment I have been introduced we",
    "start": "67860",
    "end": "72990"
  },
  {
    "text": "have a bunch of sub projects which sort of get managed by a set of different people not necessarily us that list of",
    "start": "72990",
    "end": "79890"
  },
  {
    "text": "reviewers is not complete by any means and you don't for example have to be a reviewer to review our code it's more of",
    "start": "79890",
    "end": "87180"
  },
  {
    "text": "just the set of people that are sort of guaranteed to get pinged by the bots if",
    "start": "87180",
    "end": "93329"
  },
  {
    "text": "you've ever tried to make a PR or the kubernetes repo about the bots just show up and harass you immediately so of",
    "start": "93329",
    "end": "101909"
  },
  {
    "start": "100000",
    "end": "114000"
  },
  {
    "text": "course you have to have an xkcd comic we're the one that you know try to stop",
    "start": "101909",
    "end": "107640"
  },
  {
    "text": "you from connecting and talking to all the things or at least not unless you have em TLS or something but so the",
    "start": "107640",
    "end": "115979"
  },
  {
    "text": "signal charter is effectively centered around protecting access to pronounced components authentication and",
    "start": "115979",
    "end": "123000"
  },
  {
    "text": "authorization being core tenants of that we do have some level of ownership of",
    "start": "123000",
    "end": "129509"
  },
  {
    "text": "things like auditing and some set of security policies we generally don't have ownership of things",
    "start": "129509",
    "end": "136110"
  },
  {
    "text": "like network policy though even granted some people consider that security as well so there's a list of sub projects",
    "start": "136110",
    "end": "143700"
  },
  {
    "text": "auditing both forms of auth certs Mike",
    "start": "143700",
    "end": "149430"
  },
  {
    "text": "loves certs so he can always talk to you about certs if you are familiar with the",
    "start": "149430",
    "end": "154620"
  },
  {
    "text": "kms API or the distinct rips in config in general encryption arrest is an important piece of that multi-tenancy is",
    "start": "154620",
    "end": "161880"
  },
  {
    "text": "still sort of in its relative infancy for kubernetes of the poll but we are making progress if you're familiar with",
    "start": "161880",
    "end": "168540"
  },
  {
    "text": "the node ID authorizer or the node admission plugins or restriction plugins those sort of encompass know it's",
    "start": "168540",
    "end": "175440"
  },
  {
    "text": "identity and isolation well we're going to be discussing some policy stuff later today and if you've ever used a pod you",
    "start": "175440",
    "end": "182040"
  },
  {
    "text": "have at some point use a service account whether you know it or not and also I think what is not on this list is",
    "start": "182040",
    "end": "189330"
  },
  {
    "text": "interesting we're not a sig security we handle suppose supposedly identity an",
    "start": "189330",
    "end": "198000"
  },
  {
    "text": "authorization but we sometimes I take on things like encryption at rest where there is another good fit but we don't",
    "start": "198000",
    "end": "203850"
  },
  {
    "text": "handle security for the for the project security is everybody's responsibility",
    "start": "203850",
    "end": "210360"
  },
  {
    "text": "so for node security that's something that Sigma I would handle we don't have",
    "start": "210360",
    "end": "215610"
  },
  {
    "text": "a general security I say kubernetes and in general like if there was a CVE like",
    "start": "215610",
    "end": "221670"
  },
  {
    "text": "we're not the mailing list that you email to like report the CVE that's product security CJ's right there",
    "start": "221670",
    "end": "228359"
  },
  {
    "text": "he says he loves product security you can just give it all to him and end him",
    "start": "228359",
    "end": "233540"
  },
  {
    "start": "233000",
    "end": "257000"
  },
  {
    "text": "I'm not saying this line it's all you ten say okay yeah this was",
    "start": "233600",
    "end": "241359"
  },
  {
    "text": "kind of supposed to be our theme fruit oh let me move but we still have a lot",
    "start": "241359",
    "end": "250359"
  },
  {
    "text": "more work to do so this is kind of our theme for 2022 2020 or so yes and so",
    "start": "250359",
    "end": "263229"
  },
  {
    "start": "257000",
    "end": "384000"
  },
  {
    "text": "what we mean by that really is pain down a lot of tech debt that we've kind of accumulated with a lot of features in",
    "start": "263229",
    "end": "270210"
  },
  {
    "text": "alpha beta and kind of legacy states so",
    "start": "270210",
    "end": "276150"
  },
  {
    "text": "the first thing we want to do is get things that are in alpha beta state to GA so here's a list of some of the",
    "start": "276150",
    "end": "284560"
  },
  {
    "text": "things we have right now certificate rotation for cubelet certificates Mike",
    "start": "284560",
    "end": "293620"
  },
  {
    "text": "you're gonna add this the certificates API in general yeah",
    "start": "293620",
    "end": "299039"
  },
  {
    "text": "tokens were actually if we have a lot of material on it later but these things",
    "start": "299039",
    "end": "304509"
  },
  {
    "text": "often get to beta and the people driving them sometimes disappear and we need to",
    "start": "304509",
    "end": "312720"
  },
  {
    "text": "so as a question who all in the audience was familiar with like feature states",
    "start": "312720",
    "end": "318039"
  },
  {
    "text": "like alpha beta and GA and sort of what they mean to the kubernetes project as a whole okay so most of you guys have a",
    "start": "318039",
    "end": "324880"
  },
  {
    "text": "decent idea but the important bit about beta is a lot of providers will enable the feature by default and has this",
    "start": "324880",
    "end": "332080"
  },
  {
    "text": "perverse incentive on developers to get a feature to beta and then ignore it yeah and we are somewhat guilty of that",
    "start": "332080",
    "end": "339009"
  },
  {
    "text": "we just got busy with various places but yeah so there's ongoing efforts from",
    "start": "339009",
    "end": "344590"
  },
  {
    "text": "siga architecture and other related groups to sort of make it harder to leave something indefinitely in beta if",
    "start": "344590",
    "end": "350469"
  },
  {
    "text": "only so that like production clusters must not rely on beta api's to be like functional and then we're gonna be",
    "start": "350469",
    "end": "359050"
  },
  {
    "text": "talking about pod security policy in a lot more detail later in this talk or",
    "start": "359050",
    "end": "364360"
  },
  {
    "text": "conversation and then dynamic auditing is a feature in an alpha",
    "start": "364360",
    "end": "369710"
  },
  {
    "text": "state that was added about a year ago and it has a rest a whole lot and so I expect we'll have some more",
    "start": "369710",
    "end": "375980"
  },
  {
    "text": "conversations around what the future of dynamic auditing is going to look like but it's an open question I would say",
    "start": "375980",
    "end": "384430"
  },
  {
    "start": "384000",
    "end": "443000"
  },
  {
    "text": "and then we also want to deprecate some things and delete some code a back did",
    "start": "384430",
    "end": "391550"
  },
  {
    "text": "we actually decide to deprecated a VAX during this refuses to let me defecate it I'll keep trying all right as a quick",
    "start": "391550",
    "end": "397310"
  },
  {
    "text": "thing does anybody in this audience use a back anybody yeah we should deprecated",
    "start": "397310",
    "end": "403280"
  },
  {
    "text": "any not know if they're using a back that's I guess a possibility see nobody",
    "start": "403280",
    "end": "409250"
  },
  {
    "text": "uses a thing let me deliver yeah there's a bunch of admission controllers that are not turned on by default and are",
    "start": "409250",
    "end": "417830"
  },
  {
    "text": "already marked as deprecated or maybe those ones aren't that we should be and",
    "start": "417830",
    "end": "423560"
  },
  {
    "text": "then there's some that are marked as deprecated and we want to delete them so a lot of cleanup we are still open to",
    "start": "423560",
    "end": "430280"
  },
  {
    "text": "new features but a big focus is going to be kind of stabilizing adding better",
    "start": "430280",
    "end": "437390"
  },
  {
    "text": "test coverage for these things also who",
    "start": "437390",
    "end": "445760"
  },
  {
    "start": "443000",
    "end": "458000"
  },
  {
    "text": "wants to talk about highlights Mike you did all those retroactive caps but not the middle one okay so along the lines",
    "start": "445760",
    "end": "453860"
  },
  {
    "text": "of that cleanup we added a bunch of",
    "start": "453860",
    "end": "459560"
  },
  {
    "start": "458000",
    "end": "814000"
  },
  {
    "text": "retroactive caps for some of those beta features so to give background for",
    "start": "459560",
    "end": "465440"
  },
  {
    "text": "example that first one that that API has existed since kubernetes 1:6 it's about",
    "start": "465440",
    "end": "472640"
  },
  {
    "text": "three years probably over three and a half years old now it's still a beta API",
    "start": "472640",
    "end": "478660"
  },
  {
    "text": "we don't we have a lot of things that we don't really like about the shape of it but it's beta and it is used extremely",
    "start": "478660",
    "end": "486440"
  },
  {
    "text": "broadly among kubernetes deployments and it's it's a pretty critical API in order",
    "start": "486440",
    "end": "492860"
  },
  {
    "text": "to make progress on this we created a kept for the",
    "start": "492860",
    "end": "499850"
  },
  {
    "text": "that describes the existing state since the I think the original PR was that",
    "start": "499850",
    "end": "506030"
  },
  {
    "text": "like PR 8000 or something this was a long before we had a formal",
    "start": "506030",
    "end": "511220"
  },
  {
    "text": "process for introducing these features so what we're gonna do with this cap is",
    "start": "511220",
    "end": "516950"
  },
  {
    "text": "we're gonna use it as a place to initially write down some user stories",
    "start": "516950",
    "end": "522260"
  },
  {
    "text": "which is not something that we had considered when we implemented this API so we want to really understand how we",
    "start": "522260",
    "end": "530810"
  },
  {
    "text": "want people to use it and then from there we can start to discuss graduation",
    "start": "530810",
    "end": "537290"
  },
  {
    "text": "requirements and basically a checklist of things that need to happen before we",
    "start": "537290",
    "end": "543460"
  },
  {
    "text": "marked the API is G a similar similar",
    "start": "543460",
    "end": "550420"
  },
  {
    "text": "story for bad service account tokens that was slightly predated that Carino's",
    "start": "550420",
    "end": "558170"
  },
  {
    "text": "enhancement proposals so David EADS did",
    "start": "558170",
    "end": "563270"
  },
  {
    "text": "a bunch of work on basically making every single certificate bundle that we",
    "start": "563270",
    "end": "570560"
  },
  {
    "text": "read from in kubernetes dynamically rotatable there's a really old issue",
    "start": "570560",
    "end": "577940"
  },
  {
    "text": "about how difficult it is to rotate the service count see a cert think it's like",
    "start": "577940",
    "end": "587570"
  },
  {
    "text": "Eric tunes like issue and the five thousands I think we've gone through basically all of the certificates now",
    "start": "587570",
    "end": "597200"
  },
  {
    "text": "that they're reloading except for I think there's one left to do and once we do that we'll have a lot better story",
    "start": "597200",
    "end": "603770"
  },
  {
    "text": "for automated rotation of certs and the cluster do you want to do the cubelet",
    "start": "603770",
    "end": "611990"
  },
  {
    "text": "one caucus on that yeah we've restricted",
    "start": "611990",
    "end": "620210"
  },
  {
    "text": "the labels that cubelet can add to itself this is sort of a like multi",
    "start": "620210",
    "end": "626510"
  },
  {
    "text": "release rollout process I think we 1:18 so we're also adding some more",
    "start": "626510",
    "end": "636710"
  },
  {
    "text": "restrictions on what the cubelet can do to run it as even more lease privilege because there's actually a lot of things",
    "start": "636710",
    "end": "642870"
  },
  {
    "text": "that cubelet can do a lot of ways it can escalate privilege if we're not careful but also it turns out that if you have",
    "start": "642870",
    "end": "651690"
  },
  {
    "text": "owned the node that you're in trouble in a lot of other ways we talked about this yeah I gave a talk on this earlier go",
    "start": "651690",
    "end": "659070"
  },
  {
    "text": "back and watch it if you haven't so we'll probably continue to build out",
    "start": "659070",
    "end": "665280"
  },
  {
    "text": "node restriction but it's not going to be a big focus area for us outside and",
    "start": "665280",
    "end": "671090"
  },
  {
    "text": "so if I are any of you familiar with the priority and fairness kept from API",
    "start": "671090",
    "end": "677430"
  },
  {
    "text": "machinery they're working on building",
    "start": "677430",
    "end": "682460"
  },
  {
    "text": "some support for API priority so that you can't have a disruptive controller",
    "start": "682460",
    "end": "689400"
  },
  {
    "text": "overwhelming the API and destabilizing the cluster that feature is going s the",
    "start": "689400",
    "end": "699500"
  },
  {
    "text": "fairness is keyed off of the identity of the caller so in order for that to be a",
    "start": "699500",
    "end": "708090"
  },
  {
    "text": "viable approach to implementing priority in fairness we actually have have to",
    "start": "708090",
    "end": "714240"
  },
  {
    "text": "make authentication a lot faster than it is today we've in the past probably three",
    "start": "714240",
    "end": "723570"
  },
  {
    "text": "releases there's been maybe six or seven major improvements so the performance of",
    "start": "723570",
    "end": "730230"
  },
  {
    "text": "authentication so we're gonna we have I think one more open to improve it",
    "start": "730230",
    "end": "735240"
  },
  {
    "text": "further but we want to make sure that we are able to meet the requirements of the",
    "start": "735240",
    "end": "740370"
  },
  {
    "text": "priority and fairness cap and then I was gonna say a bit of context on that cap",
    "start": "740370",
    "end": "746670"
  },
  {
    "text": "like if you in the current state of the world like we basically rely on clients",
    "start": "746670",
    "end": "751950"
  },
  {
    "text": "being nice and it turns out that it's not good thoughts protection yeah and finally I'd this is over an",
    "start": "751950",
    "end": "762960"
  },
  {
    "text": "Ouija aid admission webhooks this isn't necessarily a cigar feature although a",
    "start": "762960",
    "end": "768120"
  },
  {
    "text": "lot of people are using this as an extension points built expressive policy",
    "start": "768120",
    "end": "773390"
  },
  {
    "text": "engines are two hooking policy engines for example gate keeper and OPA and is",
    "start": "773390",
    "end": "783060"
  },
  {
    "text": "there anybody else using it yet there was someone else who had mentioned it starts like a key I can't run with the",
    "start": "783060",
    "end": "788670"
  },
  {
    "text": "name of their project but it's like yeah that like they they have their own thing",
    "start": "788670",
    "end": "794310"
  },
  {
    "text": "that's kind of like OPA there's a lot of projects using admission so to everyone",
    "start": "794310",
    "end": "806220"
  },
  {
    "text": "who said that you hadn't been to a cig off meeting before you should come to a",
    "start": "806220",
    "end": "811470"
  },
  {
    "text": "cig off meeting you can do so from anywhere with a laptop and internet the",
    "start": "811470",
    "end": "820920"
  },
  {
    "text": "cig off code can be a little gnarly to get started on sometimes it can be",
    "start": "820920",
    "end": "826350"
  },
  {
    "text": "pretty sensitive to subtle behaviors but",
    "start": "826350",
    "end": "831390"
  },
  {
    "text": "we try and tag issues with good first issue if you aren't super familiar with",
    "start": "831390",
    "end": "836520"
  },
  {
    "text": "the codebase that's a good place to get started or for more experienced contributors who want to help out the",
    "start": "836520",
    "end": "844110"
  },
  {
    "text": "Help Wanted labels are for that purpose if I could do a shameless plug my deep",
    "start": "844110",
    "end": "850950"
  },
  {
    "text": "dive embark Barcelona was a walkthrough of some of the code it I'm not gonna say",
    "start": "850950",
    "end": "857130"
  },
  {
    "text": "it's gonna make it that much easier but it'll probably make it a little bit easier I'd say it's kind of a general",
    "start": "857130",
    "end": "863960"
  },
  {
    "text": "piece of advice for getting involved we're always looking to improve our test",
    "start": "863960",
    "end": "869580"
  },
  {
    "text": "coverage and better document our features and for anybody who came late",
    "start": "869580",
    "end": "880400"
  },
  {
    "text": "we're up in two questions during the entire talk I think that concludes is that the last",
    "start": "880400",
    "end": "887579"
  },
  {
    "text": "slide for the intro this is how you can come to our meetings think the next one",
    "start": "887579",
    "end": "894990"
  },
  {
    "start": "891000",
    "end": "930000"
  },
  {
    "text": "and if you join the mailing list anyone can add that gives you right access to",
    "start": "894990",
    "end": "900540"
  },
  {
    "text": "our agenda document so if there's a topic that you'd like to discuss it's a goth you can just add it to the agenda",
    "start": "900540",
    "end": "907640"
  },
  {
    "text": "and assuming there's time we'll fit it in and discuss that any questions so far",
    "start": "907640",
    "end": "920180"
  },
  {
    "text": "yeah now the fun stuff begins let's do it okay so I'll start this topic by",
    "start": "922310",
    "end": "931740"
  },
  {
    "start": "930000",
    "end": "979000"
  },
  {
    "text": "asking a question who here in the audience knows what our back is and has used our back awesome I like you guys",
    "start": "931740",
    "end": "939779"
  },
  {
    "text": "keep doing this one more question who filled out the poll that we sent out a",
    "start": "939779",
    "end": "944820"
  },
  {
    "text": "task about what we should talk about today did anybody fill out the poll we got a lot of responses it was surprising",
    "start": "944820",
    "end": "952110"
  },
  {
    "text": "but then I guess nobody showed up said there was a group of people that are not here today that select these topics or",
    "start": "952110",
    "end": "958410"
  },
  {
    "text": "YouTube is oh that okay so who here",
    "start": "958410",
    "end": "965399"
  },
  {
    "text": "knows what pot security policy is okay who has like enjoyed using it you don't",
    "start": "965399",
    "end": "976380"
  },
  {
    "text": "have to answer that that's okay okay so it is a built in policy API it is sort",
    "start": "976380",
    "end": "985620"
  },
  {
    "start": "979000",
    "end": "1033000"
  },
  {
    "text": "of like our back for pods and instead of users it's distinct in the sense that",
    "start": "985620",
    "end": "993260"
  },
  {
    "text": "most of auth works on a very well understood set of bounded things and",
    "start": "993769",
    "end": "1000350"
  },
  {
    "text": "when I say auth in this case I mean what like our back can address so our back has no concept of like label based off",
    "start": "1000350",
    "end": "1006730"
  },
  {
    "text": "our back can't even do deny based off so the general question week or the",
    "start": "1006730",
    "end": "1013980"
  },
  {
    "text": "simplest question is can you run a pot as privileged as for example that's sort of what PSP exists to protect against",
    "start": "1013980",
    "end": "1020820"
  },
  {
    "text": "which is a administrator may want to make it so that you can't just run rude",
    "start": "1020820",
    "end": "1027680"
  },
  {
    "text": "privileged pods everywhere and sort of kind of defeat the point of having containers in the first place",
    "start": "1027680",
    "end": "1033770"
  },
  {
    "start": "1033000",
    "end": "1069000"
  },
  {
    "text": "so I already mentioned the route bit it does have some interesting aspects in",
    "start": "1033770",
    "end": "1039600"
  },
  {
    "text": "the sense that theoretically the person who is writing the code and the person who is managing the cluster are not the",
    "start": "1039600",
    "end": "1045839"
  },
  {
    "text": "same individual and in this case the cluster admin could try to enforce a set of set of best practices on the",
    "start": "1045840",
    "end": "1053100"
  },
  {
    "text": "workloads that are running and it may be that the developer who is writing the",
    "start": "1053100",
    "end": "1058110"
  },
  {
    "text": "web app or whatever does not have these security expertise to do that work and",
    "start": "1058110",
    "end": "1063270"
  },
  {
    "text": "the cluster admin or the IT operations folks can do it better so I don't know",
    "start": "1063270",
    "end": "1070950"
  },
  {
    "start": "1069000",
    "end": "1144000"
  },
  {
    "text": "when PSPs we've added do you guys remember the release number like okay so",
    "start": "1070950",
    "end": "1076920"
  },
  {
    "text": "a long time ago but so for the history of that like in the very first release",
    "start": "1076920",
    "end": "1084420"
  },
  {
    "text": "of OpenShift security context constraints were there and to give you some sense of it that is",
    "start": "1084420",
    "end": "1092280"
  },
  {
    "text": "before kubernetes 1.0 right so no one had ever run a production cluster right",
    "start": "1092280",
    "end": "1099030"
  },
  {
    "text": "so the same dream but that's not that's not true okay fine no one should have",
    "start": "1099030",
    "end": "1104340"
  },
  {
    "text": "run a production class that is that is true yeah",
    "start": "1104340",
    "end": "1109520"
  },
  {
    "text": "so what se sees we're trying to solve was not a well understood problem we can",
    "start": "1109520",
    "end": "1115710"
  },
  {
    "text": "gloss over if it's well understood right now or not but so PSPs were sort of",
    "start": "1115710",
    "end": "1121740"
  },
  {
    "text": "based off of that but they're significantly stripped down or altered in certain ways but both the translation",
    "start": "1121740",
    "end": "1132030"
  },
  {
    "text": "from openshift into upstream kubernetes and the fact that both were built without necessarily a fine understanding",
    "start": "1132030",
    "end": "1137640"
  },
  {
    "text": "of what problems we would encounter in this space sorta has led to like a weird shape to",
    "start": "1137640",
    "end": "1143049"
  },
  {
    "text": "everything on this so the first of all some of this basically gets everyone",
    "start": "1143049",
    "end": "1149379"
  },
  {
    "start": "1144000",
    "end": "1274000"
  },
  {
    "text": "please tell me you can't see that I'm good my wife is text messaging - sorry first",
    "start": "1149379",
    "end": "1157359"
  },
  {
    "text": "of all like generally speaking when people start using kubernetes they want to go run a pod because that's like the",
    "start": "1157359",
    "end": "1164049"
  },
  {
    "text": "first thing you do and I guess in an attempt to address that use case it was",
    "start": "1164049",
    "end": "1169899"
  },
  {
    "text": "sort of built out that if you're like cluster admin we'll obviously you can do",
    "start": "1169899",
    "end": "1175659"
  },
  {
    "text": "anything so PSP is allowed basically the user who",
    "start": "1175659",
    "end": "1180789"
  },
  {
    "text": "is making the request to authorise the pod or the service account that the pod",
    "start": "1180789",
    "end": "1187299"
  },
  {
    "text": "is running has to authorize the pod right and this sort of makes sense until",
    "start": "1187299",
    "end": "1194289"
  },
  {
    "text": "you realize that no one is actually supposed to directly run pods okay in any realistic scenario user deployment",
    "start": "1194289",
    "end": "1201429"
  },
  {
    "text": "which runs replica sets which runs pods so you get into this weird mode where",
    "start": "1201429",
    "end": "1207579"
  },
  {
    "text": "you yourself might have granted like you know you might have had the permission but then you try to run a deployment and",
    "start": "1207579",
    "end": "1213549"
  },
  {
    "text": "it fails because you didn't grant it to the service account or worse you have decided to grant the cluster admin to",
    "start": "1213549",
    "end": "1223239"
  },
  {
    "text": "all the controllers that run the main control plane and you don't realize that that has in fact caused it so that all",
    "start": "1223239",
    "end": "1230769"
  },
  {
    "text": "pods and your cluster can run privileged right there's another weird thing too in",
    "start": "1230769",
    "end": "1237129"
  },
  {
    "text": "that we use our vac to sort of or we use authentication authorization to do this",
    "start": "1237129",
    "end": "1243549"
  },
  {
    "text": "using the use like it's a virtual were effectively use you ask can you use this PSP",
    "start": "1243549",
    "end": "1250749"
  },
  {
    "text": "but you can bind that to like a namespace level with our back but if you bind like a privilege granting PSP in a",
    "start": "1250749",
    "end": "1257289"
  },
  {
    "text": "namespace there's nothing keeping it inside that namespace as a pot in the sense that you know you could hurt other",
    "start": "1257289",
    "end": "1264039"
  },
  {
    "text": "pods running on that node in some other namespace right so like you can think",
    "start": "1264039",
    "end": "1269649"
  },
  {
    "text": "you've bound it to someplace but you happened right so like it's completely unclear right another aspect is that",
    "start": "1269649",
    "end": "1278560"
  },
  {
    "start": "1274000",
    "end": "1386000"
  },
  {
    "text": "when you roll this out the you get to roll it out all at once this was never",
    "start": "1278560",
    "end": "1285010"
  },
  {
    "text": "an issue in openshift because there was no release where SCC's weren't enabled by default with some policy not to be",
    "start": "1285010",
    "end": "1292810"
  },
  {
    "text": "fair in the early days of that that caused a lot of pain for open shipped customers because they couldn't figure out how to run pods",
    "start": "1292810",
    "end": "1298660"
  },
  {
    "text": "it's very strange having an orchestration platform that can't orchestrate pods it was painful but",
    "start": "1298660",
    "end": "1309100"
  },
  {
    "text": "imagine you know you've been using a cluster for some amount of time and it's working fine you have workloads running and you're happy with it and now you",
    "start": "1309100",
    "end": "1315790"
  },
  {
    "text": "decide that and like security is important you know you actually have important things running on it and you want to turn this thing on right you",
    "start": "1315790",
    "end": "1322450"
  },
  {
    "text": "have to in one fell swoop audit every single workload understand all of their",
    "start": "1322450",
    "end": "1327550"
  },
  {
    "text": "requirements and create policies that sort of match all of them in one go right if you turn it on and you have no",
    "start": "1327550",
    "end": "1334690"
  },
  {
    "text": "policies all paws will get rejected and nothing will work anymore and unlike SELinux which you can you",
    "start": "1334690",
    "end": "1341980"
  },
  {
    "text": "know at least have in some kind of permissive permissive auditing mode PSP has no such functionality another little",
    "start": "1341980",
    "end": "1352060"
  },
  {
    "text": "bit is unlike sec PSP doesn't have a built in policy and in the sense of a",
    "start": "1352060",
    "end": "1359380"
  },
  {
    "text": "bootstrap policy and I think that was initially just there because we didn't know what anyone needed and it didn't",
    "start": "1359380",
    "end": "1365650"
  },
  {
    "text": "sort of make sense to just take the guess as we made an open shift and put them out into the world as canonical",
    "start": "1365650",
    "end": "1371560"
  },
  {
    "text": "things but unlike our back if you sort of see our back being used and like helm charts and other places they tend to",
    "start": "1371560",
    "end": "1378010"
  },
  {
    "text": "include like manifests like nice complete manifests of what can the workload do that sort of culture doesn't",
    "start": "1378010",
    "end": "1384100"
  },
  {
    "text": "exist for PSPs and sort of the the",
    "start": "1384100",
    "end": "1391290"
  },
  {
    "text": "byproduct of all of this sort of organic growth is basically it's just hard to",
    "start": "1391290",
    "end": "1396730"
  },
  {
    "text": "use right there's no like real well thought-out design of all the things I",
    "start": "1396730",
    "end": "1403030"
  },
  {
    "text": "think this one like with a lot of inserted effort could be fixed but it's it's sort of hard to justify at certain",
    "start": "1403030",
    "end": "1409389"
  },
  {
    "text": "points the composability bit is also interesting like if you think about our",
    "start": "1409389",
    "end": "1414519"
  },
  {
    "text": "back you know you can grant something to permissions and it can do either one of those actions then right you can't",
    "start": "1414519",
    "end": "1421600"
  },
  {
    "text": "assign a pod to policies and have it sort of have the union of those policies a single policy has to authorize the",
    "start": "1421600",
    "end": "1428590"
  },
  {
    "text": "entire pod and in the same in a similar way they if you have two policies that",
    "start": "1428590",
    "end": "1435370"
  },
  {
    "text": "do apply to a pod there's no good like way to prioritize it just goes alphabetically so if you have a pod that",
    "start": "1435370",
    "end": "1444249"
  },
  {
    "text": "could for example run with no permissions but privileged is in front",
    "start": "1444249",
    "end": "1449679"
  },
  {
    "text": "of restricted it'll run from list it's",
    "start": "1449679",
    "end": "1454749"
  },
  {
    "text": "great so if you have used PSPs before we",
    "start": "1454749",
    "end": "1460990"
  },
  {
    "start": "1455000",
    "end": "1921000"
  },
  {
    "text": "would love to sort of hear feedback we had someone from yes so one of the",
    "start": "1460990",
    "end": "1469899"
  },
  {
    "text": "problems we've seen with pod security policies is guess the lack of having a",
    "start": "1469899",
    "end": "1475119"
  },
  {
    "text": "pod security policy but also the lack of a lot of public charts having actual security context on the pod definitions",
    "start": "1475119",
    "end": "1482379"
  },
  {
    "text": "themselves so really we can't expect them to implement pod security policies when they haven't even put the security",
    "start": "1482379",
    "end": "1488889"
  },
  {
    "text": "context for their painters themselves do they run his route do they not run a screwed none of that other stuff is",
    "start": "1488889",
    "end": "1495220"
  },
  {
    "text": "populated ahead of time so even as like a community it's harder to say here's the pull request out of pod security",
    "start": "1495220",
    "end": "1500980"
  },
  {
    "text": "policy right and I think that's a byproduct of like when we've like when",
    "start": "1500980",
    "end": "1506619"
  },
  {
    "text": "our back went like v1 GA right like we didn't it didn't mean that somehow we",
    "start": "1506619",
    "end": "1512740"
  },
  {
    "text": "could immediately have it like as the only form of solution right but over time it has matured and the community",
    "start": "1512740",
    "end": "1519940"
  },
  {
    "text": "has decided that they liked it enough to include that in their manifest right I don't I don't think PSP ever got",
    "start": "1519940",
    "end": "1527590"
  },
  {
    "text": "anywhere near that level of like critical mass to cause sort of a pressure on like people who develop helm",
    "start": "1527590",
    "end": "1534129"
  },
  {
    "text": "charts to like actually worry about that my kid you have something yeah even so",
    "start": "1534129",
    "end": "1539320"
  },
  {
    "text": "our back is still not enabled by default but it is like de-facto to the point",
    "start": "1539320",
    "end": "1545049"
  },
  {
    "text": "where yeah people do you think about it and yeah yeah we should figure out how",
    "start": "1545049",
    "end": "1552429"
  },
  {
    "text": "to do something for PSP alright I don't know it's improv there's two questions in the back as you're walking there so",
    "start": "1552429",
    "end": "1560830"
  },
  {
    "text": "just to give you everyone in context right we had someone from Twitter come in on our one of our weekly meetings and",
    "start": "1560830",
    "end": "1568480"
  },
  {
    "text": "that was probably one of the first time we've had like concrete feedback from someone running like a lot of pods in",
    "start": "1568480",
    "end": "1574090"
  },
  {
    "text": "like big production clusters for how they use PSP and if you do that please tell us how you do it and what works and",
    "start": "1574090",
    "end": "1580690"
  },
  {
    "text": "what doesn't because like it's very hard for us to make like forward movement and this but like just looking inwardly",
    "start": "1580690",
    "end": "1587710"
  },
  {
    "text": "right like like Google VMware Red Hat like we're very big corporations with a very big IT budgets and we can basically",
    "start": "1587710",
    "end": "1593889"
  },
  {
    "text": "kind of do whatever but that doesn't necessarily scale to everyone else so we",
    "start": "1593889",
    "end": "1599799"
  },
  {
    "text": "do run PSPs in our clusters the general thing for cube system we have a",
    "start": "1599799",
    "end": "1605110"
  },
  {
    "text": "privileged one because you need it and for everything else for system",
    "start": "1605110",
    "end": "1611350"
  },
  {
    "text": "authenticated groups we have a restricted policy which is for every workload out there now I share the same",
    "start": "1611350",
    "end": "1617500"
  },
  {
    "text": "problem pain that he shared about like help charts not shipping PSPs with them",
    "start": "1617500",
    "end": "1624100"
  },
  {
    "text": "by default but then there is also another way of looking at it like not",
    "start": "1624100",
    "end": "1629260"
  },
  {
    "text": "everyone who is installing charts on the cluster has has permissions to install",
    "start": "1629260",
    "end": "1635169"
  },
  {
    "text": "PSP and you definitely need a cluster role to be created to use the PSP so",
    "start": "1635169",
    "end": "1641139"
  },
  {
    "text": "that's another problem we have here and since we allow it like we allow the",
    "start": "1641139",
    "end": "1648100"
  },
  {
    "text": "system authenticated like since it's called restricted and then sometimes we",
    "start": "1648100",
    "end": "1653980"
  },
  {
    "text": "create a PSP which is catered to that particular workload but then since this",
    "start": "1653980",
    "end": "1660100"
  },
  {
    "text": "since to PSPs are now applying to that particular workload this alphabetic color thing comes into picture and then",
    "start": "1660100",
    "end": "1667280"
  },
  {
    "text": "yeah it works very weird sometimes it picks up sometimes it doesn't because your API server is still reconciling",
    "start": "1667280",
    "end": "1674510"
  },
  {
    "text": "that it you have felt the PSP but meanwhile the pod has already is already",
    "start": "1674510",
    "end": "1680570"
  },
  {
    "text": "coming up it picks up the restricted one and not the one that is it was catered to so yeah there's always you have to",
    "start": "1680570",
    "end": "1687770"
  },
  {
    "text": "let go and check go back and check it whether it is it aspect up the PSP it was tailor-made or it has picked up the",
    "start": "1687770",
    "end": "1694070"
  },
  {
    "text": "restricted one so yeah you have these folders as well I I think one place",
    "start": "1694070",
    "end": "1700760"
  },
  {
    "text": "where we sometimes run into confusion around pod security policy is that the",
    "start": "1700760",
    "end": "1706760"
  },
  {
    "text": "distinction between pod security policy and pod security context and so pod",
    "start": "1706760",
    "end": "1713120"
  },
  {
    "text": "security context is saying what is this pod actually going to run with and pod",
    "start": "1713120",
    "end": "1718760"
  },
  {
    "text": "security policy is sort of if you think of it as who can create pods in that namespace what is the maximum privilege",
    "start": "1718760",
    "end": "1726140"
  },
  {
    "text": "that I'm willing to give them on those pods and so we can kind of think of that",
    "start": "1726140",
    "end": "1731270"
  },
  {
    "text": "as like pod security policy sort of defines the upper bound but the pod security context is what should actually",
    "start": "1731270",
    "end": "1738830"
  },
  {
    "text": "be saying what security the pod is running with and I think the the API",
    "start": "1738830",
    "end": "1745909"
  },
  {
    "text": "slide kind of touched on this there's a lot of there's some debate around",
    "start": "1745909",
    "end": "1751510"
  },
  {
    "text": "mutating pod security policies and whether mutation on these policies is",
    "start": "1751510",
    "end": "1757130"
  },
  {
    "text": "actually something that we should have at all yes sir I guess maybe just I do",
    "start": "1757130",
    "end": "1764030"
  },
  {
    "text": "have another question but I just want to say so do you think it'd be fair to say they you could think of like the pod",
    "start": "1764030",
    "end": "1769190"
  },
  {
    "text": "spec including the security context as like that's the key and then the PSP is like the lock that that yeah if the key",
    "start": "1769190",
    "end": "1775760"
  },
  {
    "text": "don't fit the lock then they won't they won't turn yeah metaphor works yeah okay",
    "start": "1775760",
    "end": "1781400"
  },
  {
    "text": "could also say like you could say that",
    "start": "1781400",
    "end": "1786970"
  },
  {
    "text": "the security context is the enforcement",
    "start": "1786970",
    "end": "1794030"
  },
  {
    "text": "point of the it's kind of like the security",
    "start": "1794030",
    "end": "1799340"
  },
  {
    "text": "context is actually the policy for the run time the actual running plod that's",
    "start": "1799340",
    "end": "1805850"
  },
  {
    "text": "like your data plane policy almost and then the pod security policy is all kind",
    "start": "1805850",
    "end": "1811249"
  },
  {
    "text": "of like a metabolic but that probably just is more confusing",
    "start": "1811249",
    "end": "1816590"
  },
  {
    "text": "that's might be de metaphor so yeah the question I had was about I've actually",
    "start": "1816590",
    "end": "1822049"
  },
  {
    "text": "you I used to work at a company where we did we use PSPs really heavily we actually ran a cluster that was a",
    "start": "1822049",
    "end": "1828909"
  },
  {
    "text": "completely untrusted workloads where people could schedule any docker container they like and run it and the",
    "start": "1828909",
    "end": "1834769"
  },
  {
    "text": "because of things that I had no control over those pods would had to run this privilege because they were running",
    "start": "1834769",
    "end": "1840110"
  },
  {
    "text": "darker and darker so as you can imagine it was pretty nightmarish from the",
    "start": "1840110",
    "end": "1845539"
  },
  {
    "text": "security context um so we tried to do everything we could around about you know obviously we tried pairs pieces like as well and so I was pretty",
    "start": "1845539",
    "end": "1851990"
  },
  {
    "text": "familiar with them and then I moved to a new job and in my new job I am releasing an ingress controller and we recently",
    "start": "1851990",
    "end": "1857450"
  },
  {
    "text": "had an issue where someone was like hey could you please include a PSP when thinking I'm like that actually sounds",
    "start": "1857450",
    "end": "1863029"
  },
  {
    "text": "like a pretty good idea until I started thinking about what happens when you know what happens if I supply this as",
    "start": "1863029",
    "end": "1869179"
  },
  {
    "text": "part of their default manifest and someone has PSPs like not enabled or someone has PSPs enabled and they've",
    "start": "1869179",
    "end": "1876350"
  },
  {
    "text": "configured what I like conflicting ones and then we override them as part of our default manifest like you know again it",
    "start": "1876350",
    "end": "1882529"
  },
  {
    "text": "comes back to the same issues but like that that might also be another reason why people aren't including this is because as soon as you go to try you end",
    "start": "1882529",
    "end": "1889730"
  },
  {
    "text": "up in this sort of thicket of really woolly questions about like what am I actually trying to achieve by doing this and is it actually going to increase",
    "start": "1889730",
    "end": "1895340"
  },
  {
    "text": "people's security or not so yeah I don't know I'm not really really a question",
    "start": "1895340",
    "end": "1900679"
  },
  {
    "text": "sorry but but um you know my question is more so like you know do you guys have any help that you could give me that",
    "start": "1900679",
    "end": "1906440"
  },
  {
    "text": "right like this is the is the actual question sorry no problem thank you I",
    "start": "1906440",
    "end": "1912110"
  },
  {
    "text": "think actually the next slide is sort of the help let's go to that let's do it",
    "start": "1912110",
    "end": "1917480"
  },
  {
    "text": "so and and I promised the second question we were asked was not like a",
    "start": "1917480",
    "end": "1922519"
  },
  {
    "start": "1921000",
    "end": "2412000"
  },
  {
    "text": "plant because it sounds almost exactly like what the slide is suggesting which is basically",
    "start": "1922519",
    "end": "1929120"
  },
  {
    "text": "that if you from what we gather from the conversation of the folks from Twitter and just in general of how we think",
    "start": "1929120",
    "end": "1935690"
  },
  {
    "text": "about most of these we could probably define three buckets for workloads on a",
    "start": "1935690",
    "end": "1942260"
  },
  {
    "text": "cluster and cover most of the common use cases so the obvious one is privileged right you just your route and do",
    "start": "1942260",
    "end": "1949010"
  },
  {
    "text": "whatever you want right and then there's the restricted state which is basically",
    "start": "1949010",
    "end": "1955010"
  },
  {
    "text": "what every like security person wants you to do which is you're not running his route you're not running in the",
    "start": "1955010",
    "end": "1960230"
  },
  {
    "text": "privileged container you've dropped all caps you only have a small select of",
    "start": "1960230",
    "end": "1967190"
  },
  {
    "text": "volumes that you can mount like no host pad no host network none of that all right at the default profile oh yeah",
    "start": "1967190",
    "end": "1973400"
  },
  {
    "text": "all the things right like your your IT admin is very happy because the worst you can do is destroy yourself and then",
    "start": "1973400",
    "end": "1982940"
  },
  {
    "text": "there's sort of default which is sort of more of its similar to restrictive but basically not necessarily like not as",
    "start": "1982940",
    "end": "1990559"
  },
  {
    "text": "tight and more based on where you said you would framed it as if you hit next",
    "start": "1990559",
    "end": "1996679"
  },
  {
    "text": "oh yeah so this is like the absolute bare minimum pod you could spell it has",
    "start": "1996679",
    "end": "2004809"
  },
  {
    "text": "the pod has a name it has one container the container has name and it has an image like this is the minimum you can",
    "start": "2004809",
    "end": "2010750"
  },
  {
    "text": "specify the goal of the default profile is that you can do this the default",
    "start": "2010750",
    "end": "2016330"
  },
  {
    "text": "profile will allow this pod if you try and escalate privileges above what this",
    "start": "2016330",
    "end": "2022540"
  },
  {
    "text": "pot is allowed to do then it will get denied and so ideally we just have the",
    "start": "2022540",
    "end": "2028240"
  },
  {
    "text": "privilege and restricted buckets but to actually kind of cover the majority use",
    "start": "2028240",
    "end": "2033490"
  },
  {
    "text": "cases this default one will help us there so this is sort of our hypothesis",
    "start": "2033490",
    "end": "2041230"
  },
  {
    "text": "we've got some evidence if the engineer from Twitter said they were doing",
    "start": "2041230",
    "end": "2047230"
  },
  {
    "text": "something similar I think someone shared some information that openshift two seem similar related it's interesting to see",
    "start": "2047230",
    "end": "2058330"
  },
  {
    "text": "that you know you have this relatively flexible policy but the reason that the Twitter folks",
    "start": "2058330",
    "end": "2064690"
  },
  {
    "text": "decided not to go crazy with it is they found the management of the policies to be too difficult so for them it was just",
    "start": "2064690",
    "end": "2071530"
  },
  {
    "text": "easier to have like a contract with the developers that they won't break the cluster than to try to come up with",
    "start": "2071530",
    "end": "2078100"
  },
  {
    "text": "bespoke policies but her workload and I think that's it's a very interesting point right it sort of tells us that we",
    "start": "2078100",
    "end": "2086080"
  },
  {
    "text": "don't necessarily have to support every little use case because most people can't even manage to manage the use cases that way and going back to your",
    "start": "2086080",
    "end": "2093429"
  },
  {
    "text": "question of what do we recommend for if you're deploying a thing how do you include a policy with it I would say",
    "start": "2093429",
    "end": "2101320"
  },
  {
    "text": "ideally you shouldn't have to because it should fall into one of these buckets",
    "start": "2101320",
    "end": "2107140"
  },
  {
    "text": "and we can say you know as the cluster administrator you found these buckets in the correct way we're not there today",
    "start": "2107140",
    "end": "2115810"
  },
  {
    "text": "and we'll be talking a little bit about the future of how we plan on fixing this but",
    "start": "2115810",
    "end": "2122880"
  },
  {
    "text": "I guess the the main value add that I was actually looking to add was to be",
    "start": "2126859",
    "end": "2131900"
  },
  {
    "text": "like you know for me to be able to use use the pod security policy as de facto documentation of the permissions that we",
    "start": "2131900",
    "end": "2139640"
  },
  {
    "text": "know like the you know least privileges that we are confident that the app will actually need and so to say you know",
    "start": "2139640",
    "end": "2147279"
  },
  {
    "text": "maybe if you're privileged if you're restricted thing doesn't look kind of",
    "start": "2147279",
    "end": "2152809"
  },
  {
    "text": "like this then it may not work like or something like that I don't know yeah so I think that gets back to that earlier",
    "start": "2152809",
    "end": "2158839"
  },
  {
    "text": "point of defining the security context",
    "start": "2158839",
    "end": "2163940"
  },
  {
    "text": "on the thing that you're deploying so that it's using least privileges and then it's sort of self dable documenting",
    "start": "2163940",
    "end": "2176739"
  },
  {
    "text": "yeah yeah and we've we've talked about we have a few ideas which maybe we'll go",
    "start": "2178180",
    "end": "2185660"
  },
  {
    "text": "into in a little bit around what to do with these three buckets one of the ideas is just to kind of publish this as",
    "start": "2185660",
    "end": "2192799"
  },
  {
    "text": "official kubernetes documentation that we think these are the buckets and these",
    "start": "2192799",
    "end": "2198259"
  },
  {
    "text": "are the permissions we think should go in each one and then if we had that then an app could publish as part of its",
    "start": "2198259",
    "end": "2205190"
  },
  {
    "text": "documentation we run in the restricted bucket or we run in the default bucket",
    "start": "2205190",
    "end": "2212349"
  },
  {
    "text": "that has a nice property in that it's we",
    "start": "2212349",
    "end": "2218449"
  },
  {
    "text": "tend to we have added stuff to security context over time for example like",
    "start": "2218449",
    "end": "2223699"
  },
  {
    "text": "windows containers new types of sandbox is new like new additions no new prigs",
    "start": "2223699",
    "end": "2229839"
  },
  {
    "text": "we need to be able to keep I guess each",
    "start": "2229839",
    "end": "2237170"
  },
  {
    "text": "of those buckets just like an ideal and adding more restrictions to a bucket",
    "start": "2237170",
    "end": "2243940"
  },
  {
    "text": "means that we could potentially break applications so but potentially by",
    "start": "2243940",
    "end": "2249319"
  },
  {
    "text": "moving this into documentation and having users carried it to their needs we could avoid that problem",
    "start": "2249319",
    "end": "2255890"
  },
  {
    "text": "yeah privilege should never change you can always do everything yeah restricted we expect to change over",
    "start": "2255890",
    "end": "2263820"
  },
  {
    "text": "time and so that would probably need to be versioned so this is the restricted profile as of this kubernetes version as",
    "start": "2263820",
    "end": "2270930"
  },
  {
    "text": "we add features that kind of further protect pods for example stacking Linux",
    "start": "2270930",
    "end": "2278910"
  },
  {
    "text": "security modules is coming so you can attach maybe someday you'll be able to attach an app Armour profile in your",
    "start": "2278910",
    "end": "2285240"
  },
  {
    "text": "container that layers on top of the default system app armor profiler layer",
    "start": "2285240",
    "end": "2292170"
  },
  {
    "text": "SELinux and the app armor together so that's an example of something that might come user namespaces is another",
    "start": "2292170",
    "end": "2298500"
  },
  {
    "text": "one and so as we roll those things out the best practices are going to change",
    "start": "2298500",
    "end": "2304220"
  },
  {
    "text": "and so we would want to be able to say like the next restricted version default",
    "start": "2304220",
    "end": "2310680"
  },
  {
    "text": "may or may not need to be versioned I",
    "start": "2310680",
    "end": "2316200"
  },
  {
    "text": "need to think about that a little harder any questions or comments or thoughts on",
    "start": "2316200",
    "end": "2323700"
  },
  {
    "text": "this",
    "start": "2323700",
    "end": "2325910"
  },
  {
    "text": "the only use case I can think of off the top of my head is the one where you would want to give access to the host",
    "start": "2329710",
    "end": "2335920"
  },
  {
    "text": "node file system that only is read-only for like virus scanning are other things",
    "start": "2335920",
    "end": "2341620"
  },
  {
    "text": "that check the compliance of those system but you don't want to give that particular pod access to modify those",
    "start": "2341620",
    "end": "2347860"
  },
  {
    "text": "files so storage there's now a local",
    "start": "2347860",
    "end": "2355360"
  },
  {
    "text": "persistent volume which is sort of the administrator defined host path volume",
    "start": "2355360",
    "end": "2363240"
  },
  {
    "text": "and so a privileged user can say I'm gonna define this local volume or this",
    "start": "2363240",
    "end": "2369130"
  },
  {
    "text": "local view of the file system and then make that available to less privileged",
    "start": "2369130",
    "end": "2376290"
  },
  {
    "text": "users through a persistent volume claim to use in a pod I don't know offhand if",
    "start": "2376290",
    "end": "2384730"
  },
  {
    "text": "you can say that this local volume is read-only but that might be an",
    "start": "2384730",
    "end": "2390730"
  },
  {
    "text": "interesting way to tackle that problem you yeah I guess you can do that in PSP",
    "start": "2390730",
    "end": "2396490"
  },
  {
    "text": "today throughly read-only host mounts yeah so we've sort of been discussing",
    "start": "2396490",
    "end": "2405910"
  },
  {
    "text": "this a little bit right so how do we how do we go from today to where we want to",
    "start": "2405910",
    "end": "2411130"
  },
  {
    "text": "be okay so sort of the obvious thing would be fix PSPs right it's not",
    "start": "2411130",
    "end": "2418240"
  },
  {
    "start": "2412000",
    "end": "2659000"
  },
  {
    "text": "necessarily clear what that means but you know it sort of has to have some vague concept of being on by default it",
    "start": "2418240",
    "end": "2426670"
  },
  {
    "text": "almost certainly done thus needs like an audit mode because that's probably the best it could be on as a default thing",
    "start": "2426670",
    "end": "2432820"
  },
  {
    "text": "right like I would be rejecting all of your pods but I'm not ooh there's still",
    "start": "2432820",
    "end": "2439870"
  },
  {
    "text": "other bits and pieces of it like as we've sort of talked about that kinda are still unclear right so we could also",
    "start": "2439870",
    "end": "2446680"
  },
  {
    "text": "decide that PSP isn't working and we need to build something else completely different right so we talked about sort",
    "start": "2446680",
    "end": "2453520"
  },
  {
    "text": "of like the three buckets okay we were framing it in the context of",
    "start": "2453520",
    "end": "2459610"
  },
  {
    "text": "like entry but I think that is one of bigger questions that we're trying to understand right which is does that have",
    "start": "2459610",
    "end": "2467490"
  },
  {
    "text": "to be the case right must there be a built-in mechanism for pot policy right",
    "start": "2467490",
    "end": "2474029"
  },
  {
    "text": "and I don't think necessarily like the sick can answer this question by itself because it's more about sort of like how",
    "start": "2474029",
    "end": "2481319"
  },
  {
    "text": "people imagine using the platform all right like I don't like I I as a user of",
    "start": "2481319",
    "end": "2486450"
  },
  {
    "text": "the platform would kind of be bothered if like our back was like not part of core cube just because I'm so used to",
    "start": "2486450",
    "end": "2492720"
  },
  {
    "text": "using it okay one of the suggestions to sort of take PSPs back to its roots was",
    "start": "2492720",
    "end": "2500309"
  },
  {
    "text": "to convert it into a web hook that was actually backed by sec s so like open",
    "start": "2500309",
    "end": "2506309"
  },
  {
    "text": "show security context constraints can still do basically everything that PS piece can do so if you guys are familiar",
    "start": "2506309",
    "end": "2512700"
  },
  {
    "text": "with the history of our back it started out in open shipped as authorization policy it was up streamed as the are",
    "start": "2512700",
    "end": "2519299"
  },
  {
    "text": "back api and then once we had gotten to the point that our back was sort of done",
    "start": "2519299",
    "end": "2525390"
  },
  {
    "text": "in open shift we built controllers to basically take the authorization policy",
    "start": "2525390",
    "end": "2531599"
  },
  {
    "text": "data alive converted into our back and keep them in sync and then a release later we flipped it and made our back",
    "start": "2531599",
    "end": "2537029"
  },
  {
    "text": "the source of truth instead of authorization policy we had a proof of",
    "start": "2537029",
    "end": "2542490"
  },
  {
    "text": "concept of this an open ship to do the same thing that would sort of make",
    "start": "2542490",
    "end": "2548970"
  },
  {
    "text": "things better because sec s have worked a little bit better than PSBs an open shift for a few years but i'm not sure",
    "start": "2548970",
    "end": "2555180"
  },
  {
    "text": "if that necessarily gets us to an end good state that we are happy with those",
    "start": "2555180",
    "end": "2560880"
  },
  {
    "text": "are just sort of suggestions and i think one of those sort of suggestions is to",
    "start": "2560880",
    "end": "2568170"
  },
  {
    "text": "use OPA so I'll let Tim talk about that yes this",
    "start": "2568170",
    "end": "2575279"
  },
  {
    "text": "is just to kind of frame this conversation this is one of the I would say it's one of the leading proposals",
    "start": "2575279",
    "end": "2581819"
  },
  {
    "text": "for the future of POD security policy would be to basically say we're going to",
    "start": "2581819",
    "end": "2588359"
  },
  {
    "text": "deprecated pod security policy and we're gonna build a really good migration path",
    "start": "2588359",
    "end": "2593700"
  },
  {
    "text": "to the gatekeeper project and sort of",
    "start": "2593700",
    "end": "2598980"
  },
  {
    "text": "encourage that as the de facto standard for limiting pod permissions and of",
    "start": "2598980",
    "end": "2608010"
  },
  {
    "text": "course you can run any admission policy font but this would be sort of the kind",
    "start": "2608010",
    "end": "2617790"
  },
  {
    "text": "of the standard direction that we point people in so that's just kind of to",
    "start": "2617790",
    "end": "2623190"
  },
  {
    "text": "frame this discussion now let's talk a bit more about what OPA and gatekeeper",
    "start": "2623190",
    "end": "2628590"
  },
  {
    "text": "are before we go into that can I have a show of hands who has heard of OPA or",
    "start": "2628590",
    "end": "2634200"
  },
  {
    "text": "open alright Lucy yes who has actually used OPA all right",
    "start": "2634200",
    "end": "2643730"
  },
  {
    "text": "and how about gates / who has heard of gatekeeper pretty good and who has used",
    "start": "2643730",
    "end": "2650970"
  },
  {
    "text": "gatekeeper nobody okay it's a new",
    "start": "2650970",
    "end": "2657030"
  },
  {
    "text": "project so so what is it so this is rego",
    "start": "2657030",
    "end": "2666380"
  },
  {
    "start": "2659000",
    "end": "2908000"
  },
  {
    "text": "this is I just pulled this out of one of the gatekeeper templates it's cut off at",
    "start": "2666380",
    "end": "2673950"
  },
  {
    "text": "the bottom because it didn't fit on the slide I don't actually actually expect you to read this but the point is",
    "start": "2673950",
    "end": "2680910"
  },
  {
    "text": "there's a lot of work to express a fairly simple policy that says a",
    "start": "2680910",
    "end": "2687510"
  },
  {
    "text": "container must run as a user you can probably do this in fewer lines of code",
    "start": "2687510",
    "end": "2693180"
  },
  {
    "text": "if you're just writing a straight-up OPA policy for this this is a bit more",
    "start": "2693180",
    "end": "2700130"
  },
  {
    "text": "generalized and flexible to fit into the gatekeeper framework but the point is that not everyone here knows Rigo",
    "start": "2700130",
    "end": "2707630"
  },
  {
    "text": "probably everyone here is comfortable using the Amalur json and so what",
    "start": "2707630",
    "end": "2713250"
  },
  {
    "text": "gatekeeper tries to do is let's simplify that for the people who don't need to worry about it and just template eyes",
    "start": "2713250",
    "end": "2721620"
  },
  {
    "text": "that code that you just saw and",
    "start": "2721620",
    "end": "2726860"
  },
  {
    "text": "so then the users of this policy can just provide the template parameters for",
    "start": "2726860",
    "end": "2733700"
  },
  {
    "text": "that policy and so the two key pieces of this constraint which is how gatekeeper",
    "start": "2733700",
    "end": "2740660"
  },
  {
    "text": "expresses the policy I constraint is a",
    "start": "2740660",
    "end": "2747130"
  },
  {
    "text": "type of policy I guess then this is an instance of the Kate's PSP allowed users",
    "start": "2747130",
    "end": "2755330"
  },
  {
    "text": "constraint and so this is saying that we want to apply this constraint to pods",
    "start": "2755330",
    "end": "2761510"
  },
  {
    "text": "you can also match on namespaces and labels and a bunch of other things and",
    "start": "2761510",
    "end": "2766850"
  },
  {
    "text": "then we also parameterize it so in this case we're saying we must run as root in",
    "start": "2766850",
    "end": "2772640"
  },
  {
    "text": "this user range so should look familiar if you're used to PS PS and one question",
    "start": "2772640",
    "end": "2778790"
  },
  {
    "text": "this raises is if you're already defining these things through CR DS and writing some code behind it like why not",
    "start": "2778790",
    "end": "2786470"
  },
  {
    "text": "just use CR DS and custom webhook admission controllers and that's good",
    "start": "2786470",
    "end": "2792080"
  },
  {
    "text": "question one answer is that it simplifies it so you don't need to write",
    "start": "2792080",
    "end": "2799430"
  },
  {
    "text": "as much boilerplate to add a new policy type in through gatekeeper you just need",
    "start": "2799430",
    "end": "2805640"
  },
  {
    "text": "to write some rego and put it in this constraint thing it's called a",
    "start": "2805640",
    "end": "2811130"
  },
  {
    "text": "constraint template definition yeah max",
    "start": "2811130",
    "end": "2816260"
  },
  {
    "text": "tells me yes the gatekeeper team is here by the way to tell me when I say something wrong yeah so that's that's",
    "start": "2816260",
    "end": "2826340"
  },
  {
    "text": "one reason you might use it but I think the much better reason why you would use this over custom admission is that if",
    "start": "2826340",
    "end": "2832370"
  },
  {
    "text": "you use custom admission controllers that is only valid in an API server so I",
    "start": "2832370",
    "end": "2840020"
  },
  {
    "text": "need to actually go and apply my manifest to an API server in there adding dry run or I think we have dry",
    "start": "2840020",
    "end": "2846860"
  },
  {
    "text": "run today so you can sort of see what would happen in the VI server but still",
    "start": "2846860",
    "end": "2852680"
  },
  {
    "text": "that doesn't necessarily fit into the context of a git ops workflow or",
    "start": "2852680",
    "end": "2858340"
  },
  {
    "text": "like a presubmit check or something like that whereas with gatekeeper you can actually",
    "start": "2858340",
    "end": "2865530"
  },
  {
    "text": "apply this at anywhere in your pipeline and so it doesn't need to be just when you're actually creating the object in",
    "start": "2865530",
    "end": "2873250"
  },
  {
    "text": "the API you can also apply it to your to your code in your CI CD flow or anywhere",
    "start": "2873250",
    "end": "2880450"
  },
  {
    "text": "else and actually if you kind of by similar logic you don't need to just use",
    "start": "2880450",
    "end": "2886480"
  },
  {
    "text": "this in the context of kubernetes you can then have consistent policy not only in kubernetes but also for your",
    "start": "2886480",
    "end": "2893550"
  },
  {
    "text": "declarative infrastructure and your even your data plane policies as well so kind",
    "start": "2893550",
    "end": "2900220"
  },
  {
    "text": "of unifying all of the policy in one way that can easily be audited and",
    "start": "2900220",
    "end": "2905740"
  },
  {
    "text": "understood together so now I've just shamelessly copied slides directly from",
    "start": "2905740",
    "end": "2912820"
  },
  {
    "text": "the gatekeeper team and you can see the nice little styling has changed to",
    "start": "2912820",
    "end": "2918580"
  },
  {
    "text": "reflect that so these are the current core features of gatekeeper we have",
    "start": "2918580",
    "end": "2925900"
  },
  {
    "text": "validating admission control context aware referential policies which i think",
    "start": "2925900",
    "end": "2932620"
  },
  {
    "text": "means that constraints can reference objects that you're not just applying",
    "start": "2932620",
    "end": "2939180"
  },
  {
    "text": "the constraint to so for instance you might want to say check if a namespace",
    "start": "2939180",
    "end": "2945970"
  },
  {
    "text": "has a lit up odd x' namespace has a label and you can't just do that if",
    "start": "2945970",
    "end": "2952210"
  },
  {
    "text": "you're only looking at the pot you have to also say well this pod use references",
    "start": "2952210",
    "end": "2957250"
  },
  {
    "text": "this namespace let me go look up that namespace and check the label on that namespace we already talked about",
    "start": "2957250",
    "end": "2964980"
  },
  {
    "text": "parameterization and templates and then we also have an audit mode so okay",
    "start": "2964980",
    "end": "2977620"
  },
  {
    "text": "someone from the gatekeeper team can laying on it next way you introduce",
    "start": "2977620",
    "end": "2984030"
  },
  {
    "text": "yourself hi yes my name is Mack Smith I'm one of the maintainer so that",
    "start": "2984030",
    "end": "2989760"
  },
  {
    "text": "gatekeeper project along with Rita I am Rita and yeah I think one of the uses",
    "start": "2989760",
    "end": "2998520"
  },
  {
    "text": "for audit that I heard from a question here someone was mentioning they had there is there's some almost like a race",
    "start": "2998520",
    "end": "3004790"
  },
  {
    "text": "condition with PSP where a pod got started but under what auspices did it",
    "start": "3004790",
    "end": "3011390"
  },
  {
    "text": "get approve right the old PSP the new PSP right and because not you know not",
    "start": "3011390",
    "end": "3016880"
  },
  {
    "text": "only as kubernetes like an eventually consistent kind of model but also your",
    "start": "3016880",
    "end": "3022609"
  },
  {
    "text": "policies change over time you run the risk of drift right like you suddenly",
    "start": "3022609",
    "end": "3028490"
  },
  {
    "text": "you add a new policy and something that is currently running should have been disallowed so audit is a great way to",
    "start": "3028490",
    "end": "3036250"
  },
  {
    "text": "detect that kind of situation it's also I would say one of the other benefits of",
    "start": "3036250",
    "end": "3044540"
  },
  {
    "text": "dry run is that when you have something pre-existing in the cluster that is",
    "start": "3044540",
    "end": "3050930"
  },
  {
    "text": "non-conforming dry run violations show up in this audit result process kind of",
    "start": "3050930",
    "end": "3056780"
  },
  {
    "text": "like as a its own category so you would know that you would be breaking",
    "start": "3056780",
    "end": "3063829"
  },
  {
    "text": "pre-existing things in the cluster when you start enforcing so it's more of a",
    "start": "3063829",
    "end": "3070660"
  },
  {
    "text": "safer switch flip Thanks",
    "start": "3070660",
    "end": "3076240"
  },
  {
    "text": "and so the latest update project we now have dry run so apply it to manifest",
    "start": "3077569",
    "end": "3089480"
  },
  {
    "text": "before they're actually applied names based selectors let you say I want to",
    "start": "3089480",
    "end": "3096650"
  },
  {
    "text": "apply this constraint to this set of namespaces there's a policy library the",
    "start": "3096650",
    "end": "3104450"
  },
  {
    "text": "eventual vision is to have a whole policy ecosystem where hopefully you never have to touch rego someone else",
    "start": "3104450",
    "end": "3111290"
  },
  {
    "text": "has already had the same problem that you're trying to solve and they've already written a constraint template for it and so you",
    "start": "3111290",
    "end": "3117620"
  },
  {
    "text": "can just you know maybe even as a Helmut art you install this this constraint",
    "start": "3117620",
    "end": "3123230"
  },
  {
    "text": "template and then parameters that you need and multi-source constraint",
    "start": "3123230",
    "end": "3130310"
  },
  {
    "text": "templates let you break out the rego source from the template I think so so",
    "start": "3130310",
    "end": "3144500"
  },
  {
    "text": "this is about sort of code reuse at the the Reagan level right so there's already a lot OPA has some regular",
    "start": "3144500",
    "end": "3151220"
  },
  {
    "text": "libraries for some common tasks as more people develop constraint templates we",
    "start": "3151220",
    "end": "3156350"
  },
  {
    "text": "expect that there will be more patterns that happen you know like assuming a value is some",
    "start": "3156350",
    "end": "3162950"
  },
  {
    "text": "default value if it doesn't exist that kind of thing so multi-source constraint templates",
    "start": "3162950",
    "end": "3168790"
  },
  {
    "text": "essentially you can have all of your regular brer ease embedded in the",
    "start": "3168790",
    "end": "3174380"
  },
  {
    "text": "constraint itself so that you could share code without copying and pasting",
    "start": "3174380",
    "end": "3179710"
  },
  {
    "text": "it's sort of like the first step toward a authorship tool chain and metrics",
    "start": "3179710",
    "end": "3190280"
  },
  {
    "text": "everyone likes metrics and so yeah so that's kind of like past present and now",
    "start": "3190280",
    "end": "3197240"
  },
  {
    "text": "we get future working on production izing the process our project what's the",
    "start": "3197240",
    "end": "3204860"
  },
  {
    "text": "current version beta okay yeah so yeah I",
    "start": "3204860",
    "end": "3210470"
  },
  {
    "text": "get that GA there's open proposals for",
    "start": "3210470",
    "end": "3217130"
  },
  {
    "text": "adding mutation so not just validation but being able to if we actually want to",
    "start": "3217130",
    "end": "3222440"
  },
  {
    "text": "get to feature parity with pod security policy which by the way I'm not",
    "start": "3222440",
    "end": "3228470"
  },
  {
    "text": "necessarily sure that that should be the like the goal but if we want to do get",
    "start": "3228470",
    "end": "3235280"
  },
  {
    "text": "to feature parity with pod security policy we need mutation there I don't",
    "start": "3235280",
    "end": "3242510"
  },
  {
    "text": "know what the next one means should just get you up here - yeah it's",
    "start": "3242510",
    "end": "3247730"
  },
  {
    "text": "a external data you know a common pattern that people are wondering is like I have an LDAP database right like",
    "start": "3247730",
    "end": "3255800"
  },
  {
    "text": "I want to verify that not only am i referencing a user like thing but it's",
    "start": "3255800",
    "end": "3261650"
  },
  {
    "text": "actually a user at my company right so when you have that kind of external system how can we write policies that",
    "start": "3261650",
    "end": "3270170"
  },
  {
    "text": "reference that but in a performant way right so maybe a caching mechanism I",
    "start": "3270170",
    "end": "3275210"
  },
  {
    "text": "don't know right and then yeah more more",
    "start": "3275210",
    "end": "3280310"
  },
  {
    "text": "production izing features and I want to make a comment on this last one so right",
    "start": "3280310",
    "end": "3288620"
  },
  {
    "text": "now a common way of matching or applying policy or constraints to specific",
    "start": "3288620",
    "end": "3295130"
  },
  {
    "text": "objects is by matching on labels whether those are labels on the resource itself or labels on the namespace that that",
    "start": "3295130",
    "end": "3303920"
  },
  {
    "text": "resource is running in and so an idea that I've kind of floated to a few people is maybe this is the one place",
    "start": "3303920",
    "end": "3312050"
  },
  {
    "text": "where it really makes sense to build policy into kubernetes is to have authorization on labels and then you can",
    "start": "3312050",
    "end": "3319580"
  },
  {
    "text": "use those authorized labels to control the authorization of all the policies",
    "start": "3319580",
    "end": "3325550"
  },
  {
    "text": "that apply based on those labels so that's an open question something yeah",
    "start": "3325550",
    "end": "3332990"
  },
  {
    "text": "discuss later so maybe before we move on",
    "start": "3332990",
    "end": "3339890"
  },
  {
    "text": "are there any questions on gatekeeper or",
    "start": "3339890",
    "end": "3344960"
  },
  {
    "text": "policy in general ESB exelon on the",
    "start": "3344960",
    "end": "3351340"
  },
  {
    "text": "authorization aspect you do have to remember that things like OPA that run as admission controllers cannot affect",
    "start": "3351340",
    "end": "3358060"
  },
  {
    "text": "non mutating things right so they can't affect get list and watch so auerbach",
    "start": "3358060",
    "end": "3364070"
  },
  {
    "text": "can address those cases to a certain degree but not in the same way as a",
    "start": "3364070",
    "end": "3369290"
  },
  {
    "text": "meeting and we're in dauther ization does not have access to the body in general yeah",
    "start": "3369290",
    "end": "3375170"
  },
  {
    "text": "most I in case this wasn't made clear",
    "start": "3375170",
    "end": "3380450"
  },
  {
    "text": "earlier sig auth doesn't own or even",
    "start": "3380450",
    "end": "3385550"
  },
  {
    "text": "work on the gatekeeper project or OPA so you might be wondering kind of like why",
    "start": "3385550",
    "end": "3391490"
  },
  {
    "text": "are we talking about this so much in sig auth and it's because we're exploring what the future of plod security",
    "start": "3391490",
    "end": "3398960"
  },
  {
    "text": "policies are and this is as I mentioned earlier kind of one of the leading contenders there's other projects out",
    "start": "3398960",
    "end": "3405740"
  },
  {
    "text": "there that are also we're also exploring and so we're kind of looking to get some",
    "start": "3405740",
    "end": "3413450"
  },
  {
    "text": "consensus in the community to help guide the future of the policies that we do",
    "start": "3413450",
    "end": "3419150"
  },
  {
    "text": "manage through sig off and figure out what the right way to work together as a larger project is any questions comments",
    "start": "3419150",
    "end": "3434109"
  },
  {
    "text": "could you could you specifically go under what would be needed for a mutation why the mutation would be",
    "start": "3440990",
    "end": "3446599"
  },
  {
    "text": "needed to reach future parity yeah so HOD security policy today has the",
    "start": "3446599",
    "end": "3454070"
  },
  {
    "text": "ability to set defaults on fields so you",
    "start": "3454070",
    "end": "3459710"
  },
  {
    "text": "can say if if no user is provided then",
    "start": "3459710",
    "end": "3464960"
  },
  {
    "text": "this pod should run as this user by default for instance there's two ways",
    "start": "3464960",
    "end": "3471410"
  },
  {
    "text": "you can use that today one is to say well you run with higher privileges but",
    "start": "3471410",
    "end": "3477710"
  },
  {
    "text": "I'm going to encourage you to run with these best practices privileges I think",
    "start": "3477710",
    "end": "3483650"
  },
  {
    "text": "the more compelling use case for mutation in pod security policy is if I",
    "start": "3483650",
    "end": "3490640"
  },
  {
    "text": "place a restriction that's not default not the pod default one on you so for",
    "start": "3490640",
    "end": "3495800"
  },
  {
    "text": "instance if I want to say you have to enable the docker default second profile",
    "start": "3495800",
    "end": "3500890"
  },
  {
    "text": "then all of your pods would break and you have to go and change every single pod template to say add in the docker",
    "start": "3500890",
    "end": "3509510"
  },
  {
    "text": "default second profile but with mutation",
    "start": "3509510",
    "end": "3514609"
  },
  {
    "text": "you can say you have to run with this and also I'm going to default it to that",
    "start": "3514609",
    "end": "3520280"
  },
  {
    "text": "so you don't have to worry about changing every pod something else and if",
    "start": "3520280",
    "end": "3526369"
  },
  {
    "text": "that wasn't okay then you get an error a even much more trivial a much more",
    "start": "3526369",
    "end": "3531470"
  },
  {
    "text": "simpler case is it's it's nice to know what PSP your pot is running at and it",
    "start": "3531470",
    "end": "3538330"
  },
  {
    "text": "is it does it annotate or label I can't remember but it mutates the pod to say you ran as this PSP right and that's",
    "start": "3538330",
    "end": "3546320"
  },
  {
    "text": "really nice just in the sense of if you look at all the admission controllers we",
    "start": "3546320",
    "end": "3551990"
  },
  {
    "text": "have today they don't necessarily record what they did and why they did it so just having some feedback to the user",
    "start": "3551990",
    "end": "3558530"
  },
  {
    "text": "like your pods failing because it's running is restricted and there's not gonna work or something along those",
    "start": "3558530",
    "end": "3564290"
  },
  {
    "text": "lines so is there any timeline for the",
    "start": "3564290",
    "end": "3570630"
  },
  {
    "text": "distortion of the PSP policy no so that's kind of what we're trying to",
    "start": "3570630",
    "end": "3576000"
  },
  {
    "text": "figure out here is what what is the next version look like is the next version just gatekeeper and deprecated what we",
    "start": "3576000",
    "end": "3583920"
  },
  {
    "text": "have today or do we try and fix cloud security policy do that was the slide we",
    "start": "3583920",
    "end": "3589410"
  },
  {
    "text": "had earlier of like what what is the passport we don't have the answer yet we",
    "start": "3589410",
    "end": "3596700"
  },
  {
    "text": "and because we don't have an answer we don't have a roadmap some people have",
    "start": "3596700",
    "end": "3602010"
  },
  {
    "text": "been concerned that we've said we're going to get rid of pod security policy one that's not a final decision and two",
    "start": "3602010",
    "end": "3608760"
  },
  {
    "text": "we won't get rid of pod security policy until we have a really strong alternative and a good migration path",
    "start": "3608760",
    "end": "3617370"
  },
  {
    "text": "and tooling to that policy and then even then it will still be a gradual",
    "start": "3617370",
    "end": "3622800"
  },
  {
    "text": "deprecation policy or process over I don't know probably around a year yeah",
    "start": "3622800",
    "end": "3628920"
  },
  {
    "text": "so I mean if we wanted to put like some numbers on it let's pretend and 1/18 the entire sig that nothing but this and we",
    "start": "3628920",
    "end": "3635730"
  },
  {
    "text": "somehow managed to do all of the work in one release that would mean we deprecate PSPs and 118 and then at a bare minimum",
    "start": "3635730",
    "end": "3642480"
  },
  {
    "text": "probably like 121 we removed them right so that is like it would be insanity",
    "start": "3642480",
    "end": "3647910"
  },
  {
    "text": "there's no way I would guess that we're gonna come we're gonna figure out this road map and figure out what the next",
    "start": "3647910",
    "end": "3653820"
  },
  {
    "text": "I'm sorry in 2020 and probably",
    "start": "3653820",
    "end": "3659040"
  },
  {
    "text": "deprecated and remove PSP by the end of 2020 one would be a guess any more",
    "start": "3659040",
    "end": "3670290"
  },
  {
    "text": "questions awesome so now we're gonna talk about",
    "start": "3670290",
    "end": "3675330"
  },
  {
    "text": "something entirely different this was another thing that pulled well",
    "start": "3675330",
    "end": "3683450"
  },
  {
    "text": "does anybody know what bound service again tokens are alright I've heard that word okay so does anybody know what a",
    "start": "3683450",
    "end": "3691200"
  },
  {
    "text": "service account is in kubernetes hopefully everybody so I service",
    "start": "3691200",
    "end": "3696840"
  },
  {
    "text": "accounts since before when Neto they have a",
    "start": "3696840",
    "end": "3703040"
  },
  {
    "text": "feature where we have a controller that generates token shoves that in a secret",
    "start": "3703040",
    "end": "3709620"
  },
  {
    "text": "along with the see a sort of the cluster usually but not always",
    "start": "3709620",
    "end": "3716010"
  },
  {
    "text": "and we just plumbed that down to every single pod in the client levers for no",
    "start": "3716010",
    "end": "3722610"
  },
  {
    "text": "in in the Clank levers for Clank go and",
    "start": "3722610",
    "end": "3728100"
  },
  {
    "text": "actually most others there's a zero config client functionality called in",
    "start": "3728100",
    "end": "3733170"
  },
  {
    "text": "cluster config I call that function you get a cube client you can talk to the cube API server as as a service account",
    "start": "3733170",
    "end": "3740940"
  },
  {
    "text": "at the pod is running as there's some",
    "start": "3740940",
    "end": "3748100"
  },
  {
    "text": "downsides to that old architecture the a",
    "start": "3748100",
    "end": "3755250"
  },
  {
    "text": "couple big things are this like those tokens are stored in sed they're there",
    "start": "3755250",
    "end": "3761880"
  },
  {
    "text": "they never expire they're extremely difficult to rotate because you basically have to delete a",
    "start": "3761880",
    "end": "3773400"
  },
  {
    "text": "delete the token secret make sure that the that the token controller",
    "start": "3773400",
    "end": "3779370"
  },
  {
    "text": "regenerates it to a rolling update of all your pods try to make sure that all these things line up I think there's",
    "start": "3779370",
    "end": "3784470"
  },
  {
    "text": "like in somewhere in the documentation site even documentation it's an issue somewhere there's an eight step process",
    "start": "3784470",
    "end": "3790350"
  },
  {
    "text": "on how to actually rotate service account that circuit surface got sign keys and a third thing is on this list",
    "start": "3790350",
    "end": "3800190"
  },
  {
    "text": "is there was no audience binding so we started we originally intended these",
    "start": "3800190",
    "end": "3805710"
  },
  {
    "text": "tokens to be used only against the Grenadiers api server that was the whole",
    "start": "3805710",
    "end": "3813750"
  },
  {
    "text": "reason for adding them we never documented that they were that they were",
    "start": "3813750",
    "end": "3819270"
  },
  {
    "text": "of any structure however they are shots so if you want if you wanted to you",
    "start": "3819270",
    "end": "3827940"
  },
  {
    "text": "could look into them and see what service kind it is da legit than yourself using the signing",
    "start": "3827940",
    "end": "3833350"
  },
  {
    "text": "key or the verification key of the surface counter issuer and that's what people did so they took that token and",
    "start": "3833350",
    "end": "3840340"
  },
  {
    "text": "they started handing it to voltar and other things to build to build cool",
    "start": "3840340",
    "end": "3845470"
  },
  {
    "text": "features however it's not particularly",
    "start": "3845470",
    "end": "3850840"
  },
  {
    "text": "good practice to be handing these broadly scoped tokens around so no",
    "start": "3850840",
    "end": "3857260"
  },
  {
    "text": "audience finding yeah it's like our",
    "start": "3857260",
    "end": "3865030"
  },
  {
    "text": "third bullet the performance thing is anyone here familiar with the concept of chunking as it applies to the kubernetes",
    "start": "3865030",
    "end": "3871390"
  },
  {
    "text": "api it is effectively you can do a list of some resource and you can ask for it",
    "start": "3871390",
    "end": "3879040"
  },
  {
    "text": "to be returned in some chunks instead of the entire list as once so clayton added",
    "start": "3879040",
    "end": "3886540"
  },
  {
    "text": "this feature because an open shift we had so many secrets from service accounts that if you did a list of all",
    "start": "3886540",
    "end": "3892120"
  },
  {
    "text": "secrets across the cluster you basically crashed density so when you get back like 5 gigabytes of secrets data you",
    "start": "3892120",
    "end": "3899230"
  },
  {
    "text": "realize it doesn't work and as a band age we said all right well chunk it so at least it works but in a future that",
    "start": "3899230",
    "end": "3907360"
  },
  {
    "text": "hopefully not too far we won't need to worry about that because we won't be storing them in density to begin with",
    "start": "3907360",
    "end": "3915270"
  },
  {
    "text": "yeah so I if in clusters with a very large number of namespaces and a very large number of",
    "start": "3915270",
    "end": "3921520"
  },
  {
    "text": "service counts that data that we store it in the ca cert and in the token",
    "start": "3921520",
    "end": "3927430"
  },
  {
    "text": "itself add up to be like gigabytes so",
    "start": "3927430",
    "end": "3933360"
  },
  {
    "text": "what did we do about it we created a new type of service count again we don't",
    "start": "3933360",
    "end": "3939370"
  },
  {
    "text": "really know what to call it some people call it the bound service account again I wanted to just call it a service count",
    "start": "3939370",
    "end": "3945490"
  },
  {
    "text": "again but we haven't migrated everything over yet the improvements we made are we",
    "start": "3945490",
    "end": "3954390"
  },
  {
    "text": "they it has its own volume projection type so it's not backed by a secret",
    "start": "3954390",
    "end": "3960040"
  },
  {
    "text": "which some people have rightfully criticized is as not being a very secret kubernetes",
    "start": "3960040",
    "end": "3968950"
  },
  {
    "text": "secrets there's a flexible verification of these tokens using the token review",
    "start": "3968950",
    "end": "3975789"
  },
  {
    "text": "API so like we mentioned earlier there's audience binding so you could get a",
    "start": "3975789",
    "end": "3981490"
  },
  {
    "text": "token where that's bound to the audience of the vault or the sto Citadel CA",
    "start": "3981490",
    "end": "3987250"
  },
  {
    "text": "component and when vaulter sto receives",
    "start": "3987250",
    "end": "3992349"
  },
  {
    "text": "that token they can issue a token review I specified what I didn't say identify us and get back an authenticated user",
    "start": "3992349",
    "end": "4000029"
  },
  {
    "text": "info there there's also I don't know if",
    "start": "4000029",
    "end": "4005730"
  },
  {
    "text": "we've actually added this to the cap yet but I think we are going to document that these are shots so if in some",
    "start": "4005730",
    "end": "4014339"
  },
  {
    "text": "situations the token review is not compatible with how these tokens need to be authenticated we're actually gonna",
    "start": "4014339",
    "end": "4021119"
  },
  {
    "text": "document that these are jots were we just merged a cap to expose issuer",
    "start": "4021119",
    "end": "4028559"
  },
  {
    "text": "discovery information about these tokens that allow non-interactive authentic non",
    "start": "4028559",
    "end": "4034950"
  },
  {
    "text": "interactive token validation again they're never stored in at CD and so one",
    "start": "4034950",
    "end": "4044250"
  },
  {
    "text": "thing that makes secrets not very secret is that they are world readable so we",
    "start": "4044250",
    "end": "4052559"
  },
  {
    "text": "fixed that which has caused a number of issues that I have a slide on later the",
    "start": "4052559",
    "end": "4061230"
  },
  {
    "text": "other thing is secrets were our support injection into environment variables and",
    "start": "4061230",
    "end": "4068009"
  },
  {
    "text": "if you that is not generally a very good idea because environment variables are",
    "start": "4068009",
    "end": "4075109"
  },
  {
    "text": "broadly readable by other processes on the same machine so we turned off that",
    "start": "4075109",
    "end": "4080579"
  },
  {
    "text": "feature so there's a chunk of like my new breaking changes that has made this",
    "start": "4080579",
    "end": "4087599"
  },
  {
    "text": "new awesome service account took in extremely difficult to roll out so we",
    "start": "4087599",
    "end": "4093059"
  },
  {
    "text": "have not we have a novel feature and if you turn it on your close probably breaks but we are trying to",
    "start": "4093059",
    "end": "4101008"
  },
  {
    "text": "figure out what's going to we're just going to take to roll this out",
    "start": "4101009",
    "end": "4106738"
  },
  {
    "text": "I think there's potentially features",
    "start": "4106739",
    "end": "4111778"
  },
  {
    "text": "that we could add to kubernetes such as volume ownership so instead of right now",
    "start": "4111779",
    "end": "4121380"
  },
  {
    "text": "all those all the projected files from projected volumes are owned by the root",
    "start": "4121380",
    "end": "4127980"
  },
  {
    "text": "user I think there's potentially a way that we could shown those to the user of the",
    "start": "4127980",
    "end": "4137659"
  },
  {
    "text": "of the container but that actually requires a substantial refactoring of",
    "start": "4137659",
    "end": "4143130"
  },
  {
    "text": "how about cubelets manage volumes because volumes are currently shared between all containers in a pod and",
    "start": "4143130",
    "end": "4151278"
  },
  {
    "text": "containers can sub can run as different users so that was one of the issues the",
    "start": "4151279",
    "end": "4158969"
  },
  {
    "text": "other issue is that all client libraries read the token once and never again and",
    "start": "4158969",
    "end": "4165119"
  },
  {
    "text": "these tokens now expire so we are currently we retrofitted client go and",
    "start": "4165119",
    "end": "4171659"
  },
  {
    "text": "what 112 I think to start reloading these tokens periodically and we have we",
    "start": "4171659",
    "end": "4180719"
  },
  {
    "text": "have filed a bunch of bugs against all the other client libraries and they are",
    "start": "4180719",
    "end": "4185818"
  },
  {
    "text": "slowly getting fixed but that that's also a great way that you could help out and so now I can't remember the exact",
    "start": "4185819",
    "end": "4195900"
  },
  {
    "text": "specifics of what Jordan said but we could much you could in theory have",
    "start": "4195900",
    "end": "4202320"
  },
  {
    "text": "metrics that are based on if you're if you have a service account token that is",
    "start": "4202320",
    "end": "4209730"
  },
  {
    "text": "one of these style that's being used for longer than an hour by a pod because",
    "start": "4209730",
    "end": "4214830"
  },
  {
    "text": "that innately tells you that that pod is not reloading tokens right so you could assign a lifetime to these tokens at a",
    "start": "4214830",
    "end": "4221909"
  },
  {
    "text": "significantly greater like you know you can make it 10 years or whatever so it's never going to expire during the pods lifetime but if you see that pod not",
    "start": "4221909",
    "end": "4228570"
  },
  {
    "text": "getting Auto refreshed or not the new Auto refresh token you know that pots not reloading it right so having",
    "start": "4228570",
    "end": "4234960"
  },
  {
    "text": "those types of metrics through our auth stack would make it much easier for you to migrate as a user of this feature",
    "start": "4234960",
    "end": "4241220"
  },
  {
    "text": "mm-hmm yeah and I think there is a",
    "start": "4241220",
    "end": "4249080"
  },
  {
    "text": "another approach which is to what what",
    "start": "4249080",
    "end": "4254790"
  },
  {
    "text": "is that oh okay so I I think that there's another approach to this there",
    "start": "4254790",
    "end": "4262050"
  },
  {
    "text": "are really great improvements that these tokens make but they're not useful if we",
    "start": "4262050",
    "end": "4268170"
  },
  {
    "text": "can't roll them out that it is put a potential solution that we can we",
    "start": "4268170",
    "end": "4274760"
  },
  {
    "text": "concede on some of the hard lines that we were trying to make take on these new",
    "start": "4274760",
    "end": "4281010"
  },
  {
    "text": "tokens so this is kind of a work in progress right now and we don't have",
    "start": "4281010",
    "end": "4289440"
  },
  {
    "text": "good answers yet question yeah it's",
    "start": "4289440",
    "end": "4294450"
  },
  {
    "text": "slightly like it's more about the the life cycle process for these than the tokens themselves",
    "start": "4294450",
    "end": "4300150"
  },
  {
    "text": "I think this like whispered distribution thing is really cool is are there",
    "start": "4300150",
    "end": "4306690"
  },
  {
    "text": "primitives that you're building for this that are useful for other types of Secrets yes I think a good example is",
    "start": "4306690",
    "end": "4320640"
  },
  {
    "text": "the project that RIA has been working on the day slabs secret oh sorry what",
    "start": "4320640",
    "end": "4328370"
  },
  {
    "text": "secret suicide driver so there I think",
    "start": "4328370",
    "end": "4334130"
  },
  {
    "text": "there's a really nifty integration we say it was something like that where as",
    "start": "4334130",
    "end": "4339630"
  },
  {
    "text": "a secret driver such as the one that certain manager uses or the day slabs",
    "start": "4339630",
    "end": "4346290"
  },
  {
    "text": "one could could use a service account token to gain access to a system like",
    "start": "4346290",
    "end": "4351960"
  },
  {
    "text": "vault so or request aid certificate from",
    "start": "4351960",
    "end": "4357090"
  },
  {
    "text": "the kubernetes certificates API so we want to build",
    "start": "4357090",
    "end": "4362880"
  },
  {
    "text": "use these tokens as a way of building integrations with systems that are",
    "start": "4362880",
    "end": "4368610"
  },
  {
    "text": "better at handling secrets and then kubernetes is yeah I think we want to be",
    "start": "4368610",
    "end": "4374790"
  },
  {
    "text": "careful not to reinvent Walt directly embedded inside of kubernetes we want to instead make the path of using vault",
    "start": "4374790",
    "end": "4382409"
  },
  {
    "text": "very clear and very sort of supported like I know like when you start with",
    "start": "4382409",
    "end": "4387449"
  },
  {
    "text": "vault it would like to use a service account token as like the foundation of it and it's like you know whether these long-lived hard to revoke tokens and",
    "start": "4387449",
    "end": "4395040"
  },
  {
    "text": "it's not what we want that's it there's a question behind you Michael I'm",
    "start": "4395040",
    "end": "4402090"
  },
  {
    "text": "curious about right now in our CI CD system we're connecting using the token",
    "start": "4402090",
    "end": "4408600"
  },
  {
    "text": "from a service account that scoped her back rolls and I'm wondering you know",
    "start": "4408600",
    "end": "4413909"
  },
  {
    "text": "with expiring token do you have any",
    "start": "4413909",
    "end": "4419820"
  },
  {
    "text": "ideas on how you would manage like a connection you know what we need to have",
    "start": "4419820",
    "end": "4426090"
  },
  {
    "text": "some kind of new client libraries that can do like renewal or something like that yes but it this is basically for",
    "start": "4426090",
    "end": "4438719"
  },
  {
    "text": "the CI CD system - well we're deploying turgut apps but if we need to examine",
    "start": "4438719",
    "end": "4444719"
  },
  {
    "text": "the behavior of in cluster resources like query to make sure that you know",
    "start": "4444719",
    "end": "4452010"
  },
  {
    "text": "everything spins up and we can hit it before we start running integration tests against the the new pods yeah so",
    "start": "4452010",
    "end": "4459900"
  },
  {
    "text": "right now that lifetime is requested as part of the pod spec there is a like a",
    "start": "4459900",
    "end": "4468300"
  },
  {
    "text": "soft max that can be set on the API server such that if you've a user",
    "start": "4468300",
    "end": "4473760"
  },
  {
    "text": "requests more than what an operator would allow that the tgl gets pushed",
    "start": "4473760",
    "end": "4480690"
  },
  {
    "text": "down you could conceivably set that up to be a year or something and kind of",
    "start": "4480690",
    "end": "4487409"
  },
  {
    "text": "maintain the old flows of create a service create a service account wait",
    "start": "4487409",
    "end": "4493860"
  },
  {
    "text": "for the spirit to be created download that secret your jenkins script on the Jenkins or",
    "start": "4493860",
    "end": "4501730"
  },
  {
    "text": "like just CI or whatever like is the CIA like the initial point actually running in a pod like like if it's running in a",
    "start": "4501730",
    "end": "4508960"
  },
  {
    "text": "pod to then and interact with external systems to run the CI system like it could just be rereading like on this the",
    "start": "4508960",
    "end": "4516250"
  },
  {
    "text": "ever changing token but but yeah I mean in this case it's like breezing as",
    "start": "4516250",
    "end": "4522130"
  },
  {
    "text": "you're DevOps and it has a service connection in that given project so as",
    "start": "4522130",
    "end": "4529030"
  },
  {
    "text": "part of the pipeline when it goes to a deploy or you know query using like cube",
    "start": "4529030",
    "end": "4536590"
  },
  {
    "text": "cube cuddle it uses the service connection which was based on a static",
    "start": "4536590",
    "end": "4543370"
  },
  {
    "text": "secret that was bound to that connection so I think long term we would rather",
    "start": "4543370",
    "end": "4550090"
  },
  {
    "text": "have you know some kind of trust established so you could renew those but",
    "start": "4550090",
    "end": "4555990"
  },
  {
    "text": "you know not not that we like having a static token right now but it seems like",
    "start": "4555990",
    "end": "4562510"
  },
  {
    "text": "there's some tooling that still needs to be built in order for it to be fully functional yeah we are very aware that",
    "start": "4562510",
    "end": "4569380"
  },
  {
    "text": "this is a pattern a lot of people have dependent depend on she had a lot in CI",
    "start": "4569380",
    "end": "4574570"
  },
  {
    "text": "see it in like the github configure CI",
    "start": "4574570",
    "end": "4580120"
  },
  {
    "text": "pipeline downloaded a service gunky you put it in the ammo and send it away so",
    "start": "4580120",
    "end": "4585300"
  },
  {
    "text": "we're still trying to figure that out question",
    "start": "4585300",
    "end": "4592560"
  },
  {
    "text": "so I worries see if we have two parts a and B running on the same node is it",
    "start": "4596390",
    "end": "4603500"
  },
  {
    "text": "possible for like pata a to somehow okay to the strobe a second token or poppy a",
    "start": "4603500",
    "end": "4613900"
  },
  {
    "text": "do you want this to happen or are you asking for an ASA video like okay yeah",
    "start": "4613900",
    "end": "4624440"
  },
  {
    "text": "so basically how it works is it's driven",
    "start": "4624440",
    "end": "4630470"
  },
  {
    "text": "by the cubelet it's fairly complicated but cubelet uses its own authority the",
    "start": "4630470",
    "end": "4637190"
  },
  {
    "text": "cubit user to request a token for a pod before the pod starts it only it pod can",
    "start": "4637190",
    "end": "4644960"
  },
  {
    "text": "only can gain access to tokens for the service account that it runs as the",
    "start": "4644960",
    "end": "4651130"
  },
  {
    "text": "token is that is handed back by the community's API is actually has a claim",
    "start": "4651130",
    "end": "4659170"
  },
  {
    "text": "that it is bound to that pod so it embeds the UID of the pod and that's the",
    "start": "4659170",
    "end": "4668120"
  },
  {
    "text": "you idea of the service account in bets at UID of the namespace and any deletion",
    "start": "4668120",
    "end": "4674150"
  },
  {
    "text": "of any of those objects in the communities API invalidates that token",
    "start": "4674150",
    "end": "4680240"
  },
  {
    "text": "so any token reviews would no longer succeed so it's like the action of",
    "start": "4680240",
    "end": "4686720"
  },
  {
    "text": "deleting the pod would revoke would revoke that tokens access because it is",
    "start": "4686720",
    "end": "4695270"
  },
  {
    "text": "driven by the cubelet it is as it has the same guarantees that of isolation",
    "start": "4695270",
    "end": "4704690"
  },
  {
    "text": "that most other things have yes like if there's a privileged pod running on the",
    "start": "4704690",
    "end": "4710600"
  },
  {
    "text": "same yeah they can just find wherever the token is on disk and read it but",
    "start": "4710600",
    "end": "4715630"
  },
  {
    "text": "ideally you don't have that yeah tim has a good talk on all that stuff but I don't know would you add",
    "start": "4715630",
    "end": "4725179"
  },
  {
    "text": "anything to that I may be the one thing",
    "start": "4725179",
    "end": "4730580"
  },
  {
    "text": "to add is if if you have a privileged",
    "start": "4730580",
    "end": "4736219"
  },
  {
    "text": "pod or any sort of attacker who's managed to escalate to running as root",
    "start": "4736219",
    "end": "4741860"
  },
  {
    "text": "on the node they have access to the union of all of the service accounts and",
    "start": "4741860",
    "end": "4748760"
  },
  {
    "text": "by extension all of the permissions of all of the service accounts running on the node so that's everything running in",
    "start": "4748760",
    "end": "4754790"
  },
  {
    "text": "the pod that's the cubelet I need daemon sets that you run that's all part of the",
    "start": "4754790",
    "end": "4761840"
  },
  {
    "text": "nodes set of permissions but like if you were running something like cert Manager",
    "start": "4761840",
    "end": "4768139"
  },
  {
    "text": "or anything that can list all secrets right you could list it if you got",
    "start": "4768139",
    "end": "4773179"
  },
  {
    "text": "access that you can list all secrets that allows you to list the secrets for all of the other service accounts in the",
    "start": "4773179",
    "end": "4778969"
  },
  {
    "text": "entire cluster and if any one of them is given cluster admin what you've won and",
    "start": "4778969",
    "end": "4784730"
  },
  {
    "text": "that's why we want to remove secrets from the tokens from that CD and so this",
    "start": "4784730",
    "end": "4791510"
  },
  {
    "text": "is fairly complicated there's this there's some setup process the cubelet",
    "start": "4791510",
    "end": "4799820"
  },
  {
    "text": "is also responsible for periodically reissuing that token or making sure that it's up to date however this is all",
    "start": "4799820",
    "end": "4806719"
  },
  {
    "text": "exposed via a volume projection which is just a volume type so really all you",
    "start": "4806719",
    "end": "4815179"
  },
  {
    "text": "have to think about is reading that token from disk and sending it to whoever once to know who you are I",
    "start": "4815179",
    "end": "4825489"
  },
  {
    "text": "yeah go ahead I was just wondering if the tokens on the server aren't stored",
    "start": "4828260",
    "end": "4835460"
  },
  {
    "text": "in that CD where are they gonna be stored on tempo fest right next to the",
    "start": "4835460",
    "end": "4841070"
  },
  {
    "text": "pod yeah so they're fully ephemeral they're signed or they're created on the",
    "start": "4841070",
    "end": "4847370"
  },
  {
    "text": "fly when you do a token request if you were to do it manually the cubelet is doing it on your behalf and based on the metadata contained",
    "start": "4847370",
    "end": "4856010"
  },
  {
    "text": "within them they can be bound to other objects like pods as live as we",
    "start": "4856010",
    "end": "4861590"
  },
  {
    "text": "mentioned and sort of revoking them can be broken the other objects so you don't",
    "start": "4861590",
    "end": "4867110"
  },
  {
    "text": "actually have to store them anymore and ideally they last for like an hour so you don't need to rock them at all so a",
    "start": "4867110",
    "end": "4872300"
  },
  {
    "text": "week that we create them in the API server and we forget about them and we can I",
    "start": "4872300",
    "end": "4877790"
  },
  {
    "text": "Rivera fie them by using the signature of the token so that each token has a",
    "start": "4877790",
    "end": "4883790"
  },
  {
    "text": "payload which says it's this pod it's a service count and then there's a signature associated with the token",
    "start": "4883790",
    "end": "4891050"
  },
  {
    "text": "issuers signing key so that Sankey is",
    "start": "4891050",
    "end": "4897230"
  },
  {
    "text": "not in SED yeah it's currently configured polling",
    "start": "4897230",
    "end": "4902960"
  },
  {
    "text": "configurable on the command line and it's just a file but there is a cap to allow it to and I you Mike was gonna",
    "start": "4902960",
    "end": "4910250"
  },
  {
    "text": "plug it to move it off of API server and put in something like cloud KMS or it WS",
    "start": "4910250",
    "end": "4916790"
  },
  {
    "text": "a mess is that a thing sorry maybe I missed this but is the is the idea that",
    "start": "4916790",
    "end": "4923750"
  },
  {
    "text": "the all the standard cube clients who like transparently handle the rotation",
    "start": "4923750",
    "end": "4928970"
  },
  {
    "text": "for you that is the hope so we are",
    "start": "4928970",
    "end": "4935690"
  },
  {
    "text": "retrofitting clients and it's just gonna take a while for all those updates happen that's the goal",
    "start": "4935690",
    "end": "4944530"
  },
  {
    "text": "you can tie your token not just so a pod that requests it from that flow but you can like request it to be bound to a",
    "start": "4948450",
    "end": "4954510"
  },
  {
    "text": "secret like a dummy secret for the off cluster CI case that way you still have",
    "start": "4954510",
    "end": "4960540"
  },
  {
    "text": "the revoke ability if you want to issue it for a super long lifetime and thank",
    "start": "4960540",
    "end": "4969180"
  },
  {
    "text": "you did you have a question oh okay everybody so we want to turn this on",
    "start": "4969180",
    "end": "4978540"
  },
  {
    "text": "everywhere there's a couple of problems API server needs a new flag client",
    "start": "4978540",
    "end": "4985320"
  },
  {
    "text": "libraries all need to be retrofitted pod security policies maybe again yeah and",
    "start": "4985320",
    "end": "4991380"
  },
  {
    "text": "they they're incompatible with the old secret version of service Kentuckians",
    "start": "4991380",
    "end": "4999150"
  },
  {
    "text": "and I guess pretty one eleven that's not really too big of an issue anymore",
    "start": "4999150",
    "end": "5004280"
  },
  {
    "text": "because we're not running those big version skews we don't support those big version skis but we are yeah we have",
    "start": "5004280",
    "end": "5013010"
  },
  {
    "text": "some stuff to work through before we turned on and as a question of trivia",
    "start": "5013010",
    "end": "5019100"
  },
  {
    "text": "can anyone tell me why the API server needs a new flag for this you know I",
    "start": "5019100",
    "end": "5026380"
  },
  {
    "text": "would see that you don't count why mo because traditionally these secret based",
    "start": "5026380",
    "end": "5033280"
  },
  {
    "text": "service accounts those were managed by the controller manager so the signing key was only needed on the controller",
    "start": "5033280",
    "end": "5038720"
  },
  {
    "text": "manager now that you have the token request API the signing key or a signing key has to be present with the API",
    "start": "5038720",
    "end": "5044330"
  },
  {
    "text": "server so there's another one yes sure oh yeah that thing so two new flags and",
    "start": "5044330",
    "end": "5052700"
  },
  {
    "text": "I think that if we can convince slit-like so your architecture that it's",
    "start": "5052700",
    "end": "5058880"
  },
  {
    "text": "okay to do this it would be really nice to get this covered under conformance",
    "start": "5058880",
    "end": "5063940"
  },
  {
    "text": "eventually but we gotta work through the problems first and get it to GA",
    "start": "5063940",
    "end": "5070540"
  },
  {
    "text": "so how its processed differ from current out of cluster authentication Indian",
    "start": "5073290",
    "end": "5081310"
  },
  {
    "text": "cluster that's using jato ETS or other kind of signed tokens specifically",
    "start": "5081310",
    "end": "5088600"
  },
  {
    "text": "kubernetes service Kentuckians is that what you're asking if your user",
    "start": "5088600",
    "end": "5095770"
  },
  {
    "text": "authenticating to the server and you have JWT set up you have a signer or not and a authorizer already would this just",
    "start": "5095770",
    "end": "5103420"
  },
  {
    "text": "be only for internal or would you be able to essentially have those be the same so you could have an external thing",
    "start": "5103420",
    "end": "5109449"
  },
  {
    "text": "signing both internal and external users currently the authentication plugins",
    "start": "5109449",
    "end": "5117790"
  },
  {
    "text": "stack so this one is specifically for in",
    "start": "5117790",
    "end": "5123310"
  },
  {
    "text": "cluster services we if we see a job that",
    "start": "5123310",
    "end": "5128380"
  },
  {
    "text": "has a different issuer like accounts.google.com we won't actually",
    "start": "5128380",
    "end": "5134110"
  },
  {
    "text": "enter this authorization authorization authentication plugin so we checked that issuer URL see that it's they sure galle",
    "start": "5134110",
    "end": "5142210"
  },
  {
    "text": "matches our token issuer and then enter that so I don't think that they are",
    "start": "5142210",
    "end": "5148320"
  },
  {
    "text": "would conflict but I would not recommend using this for more than just a just",
    "start": "5148320",
    "end": "5156070"
  },
  {
    "text": "service identity within the cluster although many people are so yeah I did",
    "start": "5156070",
    "end": "5166140"
  },
  {
    "text": "definitely it I definitely think about the security implications yeah and there",
    "start": "5166140",
    "end": "5178810"
  },
  {
    "text": "are things that are unsolved even with awesome tokens so there forwardable you",
    "start": "5178810",
    "end": "5185620"
  },
  {
    "text": "send them in a bearer ization header that means that they can be replayed this is mitigated by that audience field",
    "start": "5185620",
    "end": "5192880"
  },
  {
    "text": "that we added however if you have a",
    "start": "5192880",
    "end": "5197980"
  },
  {
    "text": "micro service architecture you may be talking to 10 or hundred different services and managing",
    "start": "5197980",
    "end": "5204360"
  },
  {
    "text": "all tokens with least audience scope is",
    "start": "5204360",
    "end": "5210300"
  },
  {
    "text": "a significant hassle it doesn't probably",
    "start": "5210300",
    "end": "5215970"
  },
  {
    "text": "won't scale the other thing is if you're sending tokens around you have to",
    "start": "5215970",
    "end": "5221690"
  },
  {
    "text": "authenticate the person who is receiving their token and community service Kentuckians do not solve server",
    "start": "5221690",
    "end": "5227850"
  },
  {
    "text": "authentication so while I see these",
    "start": "5227850",
    "end": "5234990"
  },
  {
    "text": "tokens as a great way to bootstrap higher-level identity systems such as",
    "start": "5234990",
    "end": "5242370"
  },
  {
    "text": "like the day slabs example and the as the secret driver example in the cert",
    "start": "5242370",
    "end": "5247830"
  },
  {
    "text": "manager example I think that the direction force server-to-server authentication is in mutual TLS so we",
    "start": "5247830",
    "end": "5256920"
  },
  {
    "text": "want to make sure we want to make sure that we can support provisioning of",
    "start": "5256920",
    "end": "5262950"
  },
  {
    "text": "higher-level identity systems I think that's where these tokens are valuable",
    "start": "5262950",
    "end": "5269600"
  },
  {
    "text": "so the last light yep any questions",
    "start": "5269690",
    "end": "5275870"
  },
  {
    "text": "please rate our session if you'll be other questions we have a question on the right and I think we are still got a",
    "start": "5277659",
    "end": "5284889"
  },
  {
    "text": "few minutes okay I forget exactly what was called but there was a Kemp about the API server verifying tokens not from",
    "start": "5284889",
    "end": "5293349"
  },
  {
    "text": "a file of public keys but through some other kind of API what's I just talked",
    "start": "5293349",
    "end": "5301540"
  },
  {
    "text": "to him about that and I told him that I don't believe this Mike I'll just say you planted him in the eye yeah are you",
    "start": "5301540",
    "end": "5307719"
  },
  {
    "text": "a plant you merged that in December and",
    "start": "5307719",
    "end": "5317380"
  },
  {
    "text": "have that be an alpha feature in plain tea yeah external serves took inciting",
    "start": "5317380",
    "end": "5325780"
  },
  {
    "text": "yeah so similar to the kms API a gr PC API that offloads the signing of tokens",
    "start": "5325780",
    "end": "5332530"
  },
  {
    "text": "to something else yeah and verification yeah okay and very",
    "start": "5332530",
    "end": "5337780"
  },
  {
    "text": "and verification view does it really matter if you have a public key yeah I",
    "start": "5337780",
    "end": "5343719"
  },
  {
    "text": "can't remember I don't think that we we just yeah wait it we reload as a key set",
    "start": "5343719",
    "end": "5355540"
  },
  {
    "text": "from from that currently in GRDC socket and dude verification inside and signing",
    "start": "5355540",
    "end": "5363969"
  },
  {
    "text": "externally any other questions",
    "start": "5363969",
    "end": "5371010"
  },
  {
    "text": "yeah I'm thinking about admission webhooks now it particularly it seems",
    "start": "5374279",
    "end": "5380679"
  },
  {
    "text": "like CR DS is like a lot of like there's conversion webhooks mutating validation",
    "start": "5380679",
    "end": "5386379"
  },
  {
    "text": "blah blah and they require their own server serves I'm wondering because it",
    "start": "5386379",
    "end": "5393639"
  },
  {
    "text": "seems like the expectation is most of these web hooks are running on the cluster",
    "start": "5393639",
    "end": "5399149"
  },
  {
    "text": "cool hey I'm wondering is there any way like maybe this could be streamlines",
    "start": "5402460",
    "end": "5408340"
  },
  {
    "text": "where a web web hook could be validated by the service account running it yeah I",
    "start": "5408340",
    "end": "5415900"
  },
  {
    "text": "have I think there's an issue about this too i setting up like i redid it api's",
    "start": "5415900",
    "end": "5423800"
  },
  {
    "text": "and web validating your mission web hooks is way too hard",
    "start": "5423800",
    "end": "5429770"
  },
  {
    "text": "we should hat we should be able to provision certificates for a server and",
    "start": "5429770",
    "end": "5434840"
  },
  {
    "text": "client tell us to pods is my opinion and I think it would streamline and make a",
    "start": "5434840",
    "end": "5442340"
  },
  {
    "text": "lot make admission web hook configurations portable to be able to say uses a clusters root CA don't embed",
    "start": "5442340",
    "end": "5451100"
  },
  {
    "text": "that giant per cluster assert in there",
    "start": "5451100",
    "end": "5456320"
  },
  {
    "text": "and automatically provision a serving certificate for a web hook we want to we",
    "start": "5456320",
    "end": "5465050"
  },
  {
    "text": "want to we need those features for core infrastructure and they're generally",
    "start": "5465050",
    "end": "5470210"
  },
  {
    "text": "just useful so I would really like to see progress on that in 2020 as we build",
    "start": "5470210",
    "end": "5477380"
  },
  {
    "text": "out users user stories for the certificates API I think that'll be one of them you want to re-implement Sto the",
    "start": "5477380",
    "end": "5487400"
  },
  {
    "text": "Corcoran anything yeah well have to figure out what the right well scope for",
    "start": "5487400",
    "end": "5492860"
  },
  {
    "text": "that yeah I think we want stuff that strengthens core kubernetes",
    "start": "5492860",
    "end": "5498650"
  },
  {
    "text": "infrastructure and then we want to build extension points and this it's like in this situation I think it's okay to",
    "start": "5498650",
    "end": "5505850"
  },
  {
    "text": "consume some of the I asked certificate provisioning I think we're out of time",
    "start": "5505850",
    "end": "5513440"
  },
  {
    "text": "but we will be around if anyone wants to keep chatting about anything thank you",
    "start": "5513440",
    "end": "5518480"
  },
  {
    "text": "everybody thank you guys",
    "start": "5518480",
    "end": "5521890"
  }
]