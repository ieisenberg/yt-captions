[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "hello everyone thank you for coming to",
    "start": "3520",
    "end": "5520"
  },
  {
    "text": "the stock my name is ryan horn i am a",
    "start": "5520",
    "end": "9200"
  },
  {
    "text": "senior architect",
    "start": "9200",
    "end": "11920"
  },
  {
    "text": "for",
    "start": "11920",
    "end": "13040"
  },
  {
    "text": "customer data infrastructure at twilio",
    "start": "13040",
    "end": "15519"
  },
  {
    "text": "but today i am here representing the sig",
    "start": "15519",
    "end": "18880"
  },
  {
    "text": "serverless cloud events working group to",
    "start": "18880",
    "end": "20560"
  },
  {
    "text": "talk about cloud events",
    "start": "20560",
    "end": "22480"
  },
  {
    "text": "which will include",
    "start": "22480",
    "end": "23840"
  },
  {
    "text": "an introduction to the project for those",
    "start": "23840",
    "end": "25599"
  },
  {
    "text": "who aren't familiar the current status",
    "start": "25599",
    "end": "28080"
  },
  {
    "text": "of the project and some new things were",
    "start": "28080",
    "end": "30880"
  },
  {
    "text": "working on as part of the group",
    "start": "30880",
    "end": "34320"
  },
  {
    "start": "33000",
    "end": "33000"
  },
  {
    "text": "so to explain cloud events",
    "start": "35040",
    "end": "36880"
  },
  {
    "text": "let's first look at a situation a lot of",
    "start": "36880",
    "end": "39680"
  },
  {
    "text": "event pipelines find themselves in",
    "start": "39680",
    "end": "43760"
  },
  {
    "text": "here's a hypothetical but realistic",
    "start": "43760",
    "end": "45600"
  },
  {
    "text": "pipeline through which an event is",
    "start": "45600",
    "end": "47280"
  },
  {
    "text": "produced by some system",
    "start": "47280",
    "end": "49440"
  },
  {
    "text": "and eventually consumed by some consumer",
    "start": "49440",
    "end": "52399"
  },
  {
    "text": "application",
    "start": "52399",
    "end": "54559"
  },
  {
    "text": "for an event to get to the consumers it",
    "start": "54559",
    "end": "56079"
  },
  {
    "text": "needs to go through a series of",
    "start": "56079",
    "end": "57920"
  },
  {
    "text": "intermediate hops that physically get",
    "start": "57920",
    "end": "60079"
  },
  {
    "text": "the event to the right place",
    "start": "60079",
    "end": "63358"
  },
  {
    "text": "in this picture you have an event",
    "start": "63760",
    "end": "65600"
  },
  {
    "text": "producer that sends to a queueing",
    "start": "65600",
    "end": "68080"
  },
  {
    "text": "mechanism to buffer the events",
    "start": "68080",
    "end": "70400"
  },
  {
    "text": "which goes through a mediator to route",
    "start": "70400",
    "end": "72799"
  },
  {
    "text": "the events to the appropriate channels",
    "start": "72799",
    "end": "74400"
  },
  {
    "text": "or topics over which they're consumed by",
    "start": "74400",
    "end": "77200"
  },
  {
    "text": "the consumer application",
    "start": "77200",
    "end": "80399"
  },
  {
    "text": "in a typical deployment these hops are",
    "start": "80880",
    "end": "83520"
  },
  {
    "text": "strung together without standard",
    "start": "83520",
    "end": "84960"
  },
  {
    "text": "interfaces and",
    "start": "84960",
    "end": "86799"
  },
  {
    "text": "without common message formats",
    "start": "86799",
    "end": "89200"
  },
  {
    "text": "they need to be specially coded against",
    "start": "89200",
    "end": "91040"
  },
  {
    "text": "every event structure and encoding they",
    "start": "91040",
    "end": "92640"
  },
  {
    "text": "know about which is problematic as it",
    "start": "92640",
    "end": "94960"
  },
  {
    "text": "introduces a coupling between them",
    "start": "94960",
    "end": "97040"
  },
  {
    "text": "in that if the event structure ever",
    "start": "97040",
    "end": "98479"
  },
  {
    "text": "changes the software spanning all of",
    "start": "98479",
    "end": "100479"
  },
  {
    "text": "these hops in the pipeline must be",
    "start": "100479",
    "end": "102720"
  },
  {
    "text": "carefully updated in a coordinated",
    "start": "102720",
    "end": "104560"
  },
  {
    "text": "manner to",
    "start": "104560",
    "end": "106079"
  },
  {
    "text": "avoid errors and data loss",
    "start": "106079",
    "end": "109040"
  },
  {
    "text": "additionally this mixes protocol",
    "start": "109040",
    "end": "110720"
  },
  {
    "text": "business logic",
    "start": "110720",
    "end": "112000"
  },
  {
    "text": "where the event contents which are",
    "start": "112000",
    "end": "114079"
  },
  {
    "text": "specific to an event type",
    "start": "114079",
    "end": "116079"
  },
  {
    "text": "are co-mingled with event mid data which",
    "start": "116079",
    "end": "119520"
  },
  {
    "text": "applies across all events",
    "start": "119520",
    "end": "122399"
  },
  {
    "text": "enforcing pieces that might just care",
    "start": "122399",
    "end": "124719"
  },
  {
    "text": "about the metadata to understand the",
    "start": "124719",
    "end": "126640"
  },
  {
    "text": "event contents as well",
    "start": "126640",
    "end": "130160"
  },
  {
    "text": "typically what a lot of that stuff in",
    "start": "132000",
    "end": "133440"
  },
  {
    "text": "the middle solves for is routing",
    "start": "133440",
    "end": "136319"
  },
  {
    "text": "a kind of necessary evil to get",
    "start": "136319",
    "end": "138080"
  },
  {
    "text": "important events from where they",
    "start": "138080",
    "end": "140000"
  },
  {
    "text": "originate to where their value is",
    "start": "140000",
    "end": "142959"
  },
  {
    "text": "actually realized in the consumer",
    "start": "142959",
    "end": "146400"
  },
  {
    "text": "and so a goal for cloud events is to",
    "start": "146400",
    "end": "149200"
  },
  {
    "text": "solve for that necessary evil",
    "start": "149200",
    "end": "151760"
  },
  {
    "text": "so your software",
    "start": "151760",
    "end": "153519"
  },
  {
    "text": "can",
    "start": "153519",
    "end": "154400"
  },
  {
    "text": "focus on the business value that lies in",
    "start": "154400",
    "end": "156959"
  },
  {
    "text": "the consumption of those events",
    "start": "156959",
    "end": "160720"
  },
  {
    "text": "so what does cloud events do about this",
    "start": "162319",
    "end": "166080"
  },
  {
    "text": "the core of the solution",
    "start": "166080",
    "end": "168400"
  },
  {
    "text": "the core of cloud events introduces an",
    "start": "168400",
    "end": "170239"
  },
  {
    "text": "envelope definition",
    "start": "170239",
    "end": "172080"
  },
  {
    "text": "which we'll go into shortly but",
    "start": "172080",
    "end": "174640"
  },
  {
    "text": "first an important point i want to make",
    "start": "174640",
    "end": "176080"
  },
  {
    "text": "up front is that we are",
    "start": "176080",
    "end": "178959"
  },
  {
    "text": "in cloud event separates the logical",
    "start": "178959",
    "end": "181360"
  },
  {
    "text": "model",
    "start": "181360",
    "end": "182239"
  },
  {
    "text": "for this from the protocol specific",
    "start": "182239",
    "end": "184720"
  },
  {
    "text": "representations of an event",
    "start": "184720",
    "end": "187760"
  },
  {
    "text": "the core spec focuses on this logical",
    "start": "187760",
    "end": "190239"
  },
  {
    "text": "data model for events first",
    "start": "190239",
    "end": "192319"
  },
  {
    "text": "with specs for the various protocols as",
    "start": "192319",
    "end": "195120"
  },
  {
    "text": "implementations or bindings as we call",
    "start": "195120",
    "end": "197280"
  },
  {
    "text": "them of that model",
    "start": "197280",
    "end": "200239"
  },
  {
    "text": "so why why have an envelope",
    "start": "201920",
    "end": "204640"
  },
  {
    "text": "again it's to standardize that",
    "start": "204640",
    "end": "206480"
  },
  {
    "text": "information that is common across events",
    "start": "206480",
    "end": "209200"
  },
  {
    "text": "and",
    "start": "209200",
    "end": "210080"
  },
  {
    "text": "to extract the routing and more general",
    "start": "210080",
    "end": "212000"
  },
  {
    "text": "concerns out of the application",
    "start": "212000",
    "end": "215120"
  },
  {
    "text": "if we don't and let's say the format",
    "start": "215120",
    "end": "217440"
  },
  {
    "text": "changes down the line",
    "start": "217440",
    "end": "219040"
  },
  {
    "text": "this becomes a potentially expensive",
    "start": "219040",
    "end": "220959"
  },
  {
    "text": "change to make across all of your",
    "start": "220959",
    "end": "222879"
  },
  {
    "text": "pipeline",
    "start": "222879",
    "end": "224840"
  },
  {
    "text": "infrastructure the focus on the logical",
    "start": "224840",
    "end": "227519"
  },
  {
    "text": "model also allows for an ecosystem",
    "start": "227519",
    "end": "230239"
  },
  {
    "text": "of tools and implementations to emerge",
    "start": "230239",
    "end": "232799"
  },
  {
    "text": "around the common format independent of",
    "start": "232799",
    "end": "234799"
  },
  {
    "text": "a specific tool",
    "start": "234799",
    "end": "237760"
  },
  {
    "text": "this is about making different tools",
    "start": "238080",
    "end": "239840"
  },
  {
    "text": "systems clouds vendors",
    "start": "239840",
    "end": "242319"
  },
  {
    "text": "products etc easier to use together",
    "start": "242319",
    "end": "245040"
  },
  {
    "text": "rather than trying to pick a winner",
    "start": "245040",
    "end": "248319"
  },
  {
    "start": "248000",
    "end": "248000"
  },
  {
    "text": "so what does this look like",
    "start": "249680",
    "end": "252159"
  },
  {
    "text": "we think of the occurrence of an event",
    "start": "252159",
    "end": "254640"
  },
  {
    "text": "as",
    "start": "254640",
    "end": "255439"
  },
  {
    "text": "capturing the specifics of what happened",
    "start": "255439",
    "end": "258479"
  },
  {
    "text": "and the envelope as something that wraps",
    "start": "258479",
    "end": "261040"
  },
  {
    "text": "that occurrence and contains general",
    "start": "261040",
    "end": "263759"
  },
  {
    "text": "metadata such as timestamps event types",
    "start": "263759",
    "end": "266960"
  },
  {
    "text": "unique ids schema references etc",
    "start": "266960",
    "end": "271680"
  },
  {
    "text": "this way the event can be routed and",
    "start": "271759",
    "end": "273199"
  },
  {
    "text": "handled appropriately and independently",
    "start": "273199",
    "end": "274880"
  },
  {
    "text": "without understanding the whole event",
    "start": "274880",
    "end": "277840"
  },
  {
    "text": "there are a variety of reasons that this",
    "start": "277840",
    "end": "280479"
  },
  {
    "text": "is important for example the contents of",
    "start": "280479",
    "end": "283040"
  },
  {
    "text": "the event might be applications specific",
    "start": "283040",
    "end": "285280"
  },
  {
    "text": "both syntactically and semantically in a",
    "start": "285280",
    "end": "288880"
  },
  {
    "text": "way that's unknown by the intermediaries",
    "start": "288880",
    "end": "292720"
  },
  {
    "text": "or you can imagine there might be",
    "start": "292720",
    "end": "294080"
  },
  {
    "text": "privacy concerns",
    "start": "294080",
    "end": "295759"
  },
  {
    "text": "to continue with a physical mail analogy",
    "start": "295759",
    "end": "299199"
  },
  {
    "text": "you might not want that person",
    "start": "299199",
    "end": "300560"
  },
  {
    "text": "delivering your mail or your neighbors",
    "start": "300560",
    "end": "303280"
  },
  {
    "text": "who are adjacent to you",
    "start": "303280",
    "end": "305199"
  },
  {
    "text": "to have access to the contents inside of",
    "start": "305199",
    "end": "307520"
  },
  {
    "text": "the envelope but there needs to be some",
    "start": "307520",
    "end": "309520"
  },
  {
    "text": "information visible on the outside to",
    "start": "309520",
    "end": "310960"
  },
  {
    "text": "get it to the right place",
    "start": "310960",
    "end": "313759"
  },
  {
    "text": "the standard way of structuring these",
    "start": "313759",
    "end": "315120"
  },
  {
    "text": "together is a cloud event",
    "start": "315120",
    "end": "318880"
  },
  {
    "text": "so how does this help with the coupling",
    "start": "318880",
    "end": "320560"
  },
  {
    "text": "challenges described earlier",
    "start": "320560",
    "end": "323600"
  },
  {
    "start": "323000",
    "end": "323000"
  },
  {
    "text": "in the world where we don't have",
    "start": "323600",
    "end": "325039"
  },
  {
    "text": "standardization on how the event is",
    "start": "325039",
    "end": "327280"
  },
  {
    "text": "structured and we don't separate event",
    "start": "327280",
    "end": "329360"
  },
  {
    "text": "content from metadata if we want to make",
    "start": "329360",
    "end": "331919"
  },
  {
    "text": "a change to the structure of the event",
    "start": "331919",
    "end": "333680"
  },
  {
    "text": "it's a complex and painful coordination",
    "start": "333680",
    "end": "335600"
  },
  {
    "text": "with a high chance of error",
    "start": "335600",
    "end": "337600"
  },
  {
    "text": "you might for example update the",
    "start": "337600",
    "end": "339120"
  },
  {
    "text": "consumer",
    "start": "339120",
    "end": "340320"
  },
  {
    "text": "but what if you forget to update",
    "start": "340320",
    "end": "341520"
  },
  {
    "text": "something in between such as the",
    "start": "341520",
    "end": "342960"
  },
  {
    "text": "mediator",
    "start": "342960",
    "end": "344000"
  },
  {
    "text": "or worse what if we don't even have",
    "start": "344000",
    "end": "345919"
  },
  {
    "text": "control over the event mediator such as",
    "start": "345919",
    "end": "348160"
  },
  {
    "text": "if an event needs to cross clouds",
    "start": "348160",
    "end": "350000"
  },
  {
    "text": "vendors products etc",
    "start": "350000",
    "end": "353840"
  },
  {
    "text": "by standardizing on a common metadata",
    "start": "354400",
    "end": "356400"
  },
  {
    "text": "format that shape can be commonly",
    "start": "356400",
    "end": "358400"
  },
  {
    "text": "understood and we can decouple these",
    "start": "358400",
    "end": "360319"
  },
  {
    "text": "components in terms of how they",
    "start": "360319",
    "end": "361680"
  },
  {
    "text": "interpret and process event metadata and",
    "start": "361680",
    "end": "363840"
  },
  {
    "text": "where they look to access the actual",
    "start": "363840",
    "end": "365440"
  },
  {
    "text": "contents",
    "start": "365440",
    "end": "367840"
  },
  {
    "text": "so this is a high-level view let's take",
    "start": "368080",
    "end": "369680"
  },
  {
    "text": "a look at where cloud events fits into",
    "start": "369680",
    "end": "371680"
  },
  {
    "text": "your code",
    "start": "371680",
    "end": "374080"
  },
  {
    "start": "373000",
    "end": "373000"
  },
  {
    "text": "before cloud events in your event",
    "start": "375039",
    "end": "376880"
  },
  {
    "text": "producer you had your business logic",
    "start": "376880",
    "end": "379840"
  },
  {
    "text": "and then you had your custom glue code",
    "start": "379840",
    "end": "381360"
  },
  {
    "text": "that mapped your application specific",
    "start": "381360",
    "end": "383039"
  },
  {
    "text": "representation of",
    "start": "383039",
    "end": "385039"
  },
  {
    "text": "what will go into an event that",
    "start": "385039",
    "end": "388639"
  },
  {
    "text": "to the protocol and delivery mechanism",
    "start": "388639",
    "end": "390960"
  },
  {
    "text": "that you're using to send it such as",
    "start": "390960",
    "end": "394000"
  },
  {
    "text": "amqp or kafka",
    "start": "394000",
    "end": "396000"
  },
  {
    "text": "and then the actual delivery mechanism",
    "start": "396000",
    "end": "397680"
  },
  {
    "text": "or service for sending the event itself",
    "start": "397680",
    "end": "399600"
  },
  {
    "text": "in the middle",
    "start": "399600",
    "end": "400720"
  },
  {
    "text": "and something similar to the producer on",
    "start": "400720",
    "end": "402800"
  },
  {
    "text": "the consuming side",
    "start": "402800",
    "end": "405680"
  },
  {
    "text": "cloud events picks up where your",
    "start": "406880",
    "end": "408479"
  },
  {
    "text": "business logic leaves off standardizing",
    "start": "408479",
    "end": "410800"
  },
  {
    "text": "and take care taking care of mapping",
    "start": "410800",
    "end": "413199"
  },
  {
    "text": "from your application specific",
    "start": "413199",
    "end": "414560"
  },
  {
    "text": "representation",
    "start": "414560",
    "end": "415840"
  },
  {
    "text": "to a common event format that is",
    "start": "415840",
    "end": "417599"
  },
  {
    "text": "expressed over a number of common",
    "start": "417599",
    "end": "419440"
  },
  {
    "text": "protocols with libraries that implement",
    "start": "419440",
    "end": "422160"
  },
  {
    "text": "the cloud event spec",
    "start": "422160",
    "end": "425120"
  },
  {
    "start": "425000",
    "end": "425000"
  },
  {
    "text": "in effect what does this enable",
    "start": "426720",
    "end": "429360"
  },
  {
    "text": "first this allows you to focus on your",
    "start": "429360",
    "end": "431520"
  },
  {
    "text": "business logic instead of your protocol",
    "start": "431520",
    "end": "434000"
  },
  {
    "text": "integration logic additionally because",
    "start": "434000",
    "end": "436800"
  },
  {
    "text": "cloudevents defines the format in a",
    "start": "436800",
    "end": "438560"
  },
  {
    "text": "protocol agnostic specification with",
    "start": "438560",
    "end": "440800"
  },
  {
    "text": "separate bindings that implement",
    "start": "440800",
    "end": "442319"
  },
  {
    "text": "specification for a particular protocol",
    "start": "442319",
    "end": "444960"
  },
  {
    "text": "you can switch protocols without",
    "start": "444960",
    "end": "446400"
  },
  {
    "text": "switching formats",
    "start": "446400",
    "end": "447919"
  },
  {
    "text": "so if for example you are going from",
    "start": "447919",
    "end": "450639"
  },
  {
    "text": "um you know one queueing technology to",
    "start": "450639",
    "end": "452800"
  },
  {
    "text": "another this should just mean swapping",
    "start": "452800",
    "end": "454880"
  },
  {
    "text": "out the library implementations for the",
    "start": "454880",
    "end": "456639"
  },
  {
    "text": "selected protocol",
    "start": "456639",
    "end": "459440"
  },
  {
    "start": "459000",
    "end": "459000"
  },
  {
    "text": "so enough of the diagrams what does a",
    "start": "460400",
    "end": "461919"
  },
  {
    "text": "cloud event actually look like we've got",
    "start": "461919",
    "end": "464879"
  },
  {
    "text": "two examples here",
    "start": "464879",
    "end": "466560"
  },
  {
    "text": "on the left you have",
    "start": "466560",
    "end": "469039"
  },
  {
    "text": "an example using json over http",
    "start": "469039",
    "end": "473759"
  },
  {
    "text": "to represent the cloud event you can see",
    "start": "473759",
    "end": "476080"
  },
  {
    "text": "at the root of the json object we have",
    "start": "476080",
    "end": "478080"
  },
  {
    "text": "the envelope metadata such as spec",
    "start": "478080",
    "end": "480479"
  },
  {
    "text": "version type",
    "start": "480479",
    "end": "482160"
  },
  {
    "text": "source id",
    "start": "482160",
    "end": "483680"
  },
  {
    "text": "data content type",
    "start": "483680",
    "end": "485680"
  },
  {
    "text": "which i'll come back to in a second",
    "start": "485680",
    "end": "488560"
  },
  {
    "text": "and then you have this data key which",
    "start": "488560",
    "end": "490960"
  },
  {
    "text": "includes the actual application specific",
    "start": "490960",
    "end": "493440"
  },
  {
    "text": "event contents",
    "start": "493440",
    "end": "496160"
  },
  {
    "text": "you might look at this and say it's just",
    "start": "496160",
    "end": "498080"
  },
  {
    "text": "a json object with some common structure",
    "start": "498080",
    "end": "500479"
  },
  {
    "text": "so what",
    "start": "500479",
    "end": "502720"
  },
  {
    "text": "but this",
    "start": "502720",
    "end": "504080"
  },
  {
    "text": "this example on the left is just one",
    "start": "504080",
    "end": "505520"
  },
  {
    "text": "encoding",
    "start": "505520",
    "end": "506479"
  },
  {
    "text": "in cloud events protocol implementations",
    "start": "506479",
    "end": "509039"
  },
  {
    "text": "can leverage whichever encoding is",
    "start": "509039",
    "end": "510639"
  },
  {
    "text": "appropriate but they largely fall into",
    "start": "510639",
    "end": "512479"
  },
  {
    "text": "two buckets which we call modes which",
    "start": "512479",
    "end": "514640"
  },
  {
    "text": "are either textual such as json as you",
    "start": "514640",
    "end": "516320"
  },
  {
    "text": "see on the left or binary mode which you",
    "start": "516320",
    "end": "518640"
  },
  {
    "text": "see on the right",
    "start": "518640",
    "end": "521120"
  },
  {
    "text": "both of these are the same event but",
    "start": "521120",
    "end": "522719"
  },
  {
    "text": "what's interesting with binary mode on",
    "start": "522719",
    "end": "524480"
  },
  {
    "text": "the right is it encloses the metadata",
    "start": "524480",
    "end": "526959"
  },
  {
    "text": "separately from the event contents",
    "start": "526959",
    "end": "529920"
  },
  {
    "text": "the event metadata is sent via",
    "start": "529920",
    "end": "532240"
  },
  {
    "text": "whichever mechanism your particular",
    "start": "532240",
    "end": "534080"
  },
  {
    "text": "selected protocol uses to enclose",
    "start": "534080",
    "end": "536080"
  },
  {
    "text": "message metadata so for http that should",
    "start": "536080",
    "end": "538560"
  },
  {
    "text": "be headers for kafka that's kafka",
    "start": "538560",
    "end": "540320"
  },
  {
    "text": "headers etc",
    "start": "540320",
    "end": "543200"
  },
  {
    "text": "and with the separation intermediaries",
    "start": "543200",
    "end": "545760"
  },
  {
    "text": "such as routers which need to just",
    "start": "545760",
    "end": "547920"
  },
  {
    "text": "understand the metadata or even",
    "start": "547920",
    "end": "550000"
  },
  {
    "text": "applications which might want to inspect",
    "start": "550000",
    "end": "552080"
  },
  {
    "text": "the metadata before attempting to parse",
    "start": "552080",
    "end": "554000"
  },
  {
    "text": "or understand the event can do so",
    "start": "554000",
    "end": "556080"
  },
  {
    "text": "without accessing or understanding the",
    "start": "556080",
    "end": "558560"
  },
  {
    "text": "event contents",
    "start": "558560",
    "end": "561959"
  },
  {
    "text": "separation is also interesting because",
    "start": "562320",
    "end": "564640"
  },
  {
    "text": "it makes it easy to start using adopting",
    "start": "564640",
    "end": "566880"
  },
  {
    "text": "cloud events through extension rather",
    "start": "566880",
    "end": "568800"
  },
  {
    "text": "than replacement of existing",
    "start": "568800",
    "end": "570320"
  },
  {
    "text": "implementations",
    "start": "570320",
    "end": "572080"
  },
  {
    "text": "for example let's say that you have a",
    "start": "572080",
    "end": "573760"
  },
  {
    "text": "microservice architecture that is",
    "start": "573760",
    "end": "575279"
  },
  {
    "text": "standardized on",
    "start": "575279",
    "end": "577279"
  },
  {
    "text": "json over http and rest as the",
    "start": "577279",
    "end": "579680"
  },
  {
    "text": "communication protocol",
    "start": "579680",
    "end": "582320"
  },
  {
    "text": "you can start leveraging cloud events",
    "start": "582320",
    "end": "583680"
  },
  {
    "text": "using the binary mode by extending your",
    "start": "583680",
    "end": "585519"
  },
  {
    "text": "protocol using http headers rather than",
    "start": "585519",
    "end": "588399"
  },
  {
    "text": "changing your services understanding of",
    "start": "588399",
    "end": "590320"
  },
  {
    "text": "http bodies etc which is pretty cool",
    "start": "590320",
    "end": "594399"
  },
  {
    "text": "i believe this slide is just",
    "start": "596399",
    "end": "598000"
  },
  {
    "text": "highlighting the metadata that is part",
    "start": "598000",
    "end": "599920"
  },
  {
    "text": "of the envelope portion of the cloud",
    "start": "599920",
    "end": "601200"
  },
  {
    "text": "event so i'm not going to spend too much",
    "start": "601200",
    "end": "602800"
  },
  {
    "text": "time on this",
    "start": "602800",
    "end": "605360"
  },
  {
    "text": "um so you might be wondering hey this",
    "start": "605360",
    "end": "607680"
  },
  {
    "text": "looks great but how do i get started",
    "start": "607680",
    "end": "610160"
  },
  {
    "text": "so the community has been hard at work",
    "start": "610160",
    "end": "611680"
  },
  {
    "text": "building out sdks for the various",
    "start": "611680",
    "end": "614640"
  },
  {
    "text": "protocol bindings in a number of",
    "start": "614640",
    "end": "616079"
  },
  {
    "text": "languages and platforms",
    "start": "616079",
    "end": "619040"
  },
  {
    "start": "619000",
    "end": "619000"
  },
  {
    "text": "and i believe this is an up-to-date list",
    "start": "619040",
    "end": "621200"
  },
  {
    "text": "of what we support today so",
    "start": "621200",
    "end": "623920"
  },
  {
    "text": "you can see the",
    "start": "623920",
    "end": "626000"
  },
  {
    "text": "sdk languages that we support and then",
    "start": "626000",
    "end": "628640"
  },
  {
    "text": "the protocols that we have bindings for",
    "start": "628640",
    "end": "631760"
  },
  {
    "text": "and this is an open source project so if",
    "start": "631760",
    "end": "633440"
  },
  {
    "text": "you don't see your favorite language or",
    "start": "633440",
    "end": "635920"
  },
  {
    "text": "protocol represented here",
    "start": "635920",
    "end": "638399"
  },
  {
    "text": "come and take a look and contribute",
    "start": "638399",
    "end": "641760"
  },
  {
    "text": "so that was an overview of what cloud",
    "start": "643519",
    "end": "645440"
  },
  {
    "text": "events is",
    "start": "645440",
    "end": "647040"
  },
  {
    "text": "what is the status of the product",
    "start": "647040",
    "end": "650320"
  },
  {
    "start": "650000",
    "end": "650000"
  },
  {
    "text": "so we're currently at 1.0 today",
    "start": "650959",
    "end": "653920"
  },
  {
    "text": "which we got to i believe a little over",
    "start": "653920",
    "end": "655839"
  },
  {
    "text": "two years ago and that was largely",
    "start": "655839",
    "end": "658000"
  },
  {
    "text": "focused on getting that",
    "start": "658000",
    "end": "660560"
  },
  {
    "text": "comment protocol and format defined and",
    "start": "660560",
    "end": "662880"
  },
  {
    "text": "usable",
    "start": "662880",
    "end": "664160"
  },
  {
    "text": "and we've had that",
    "start": "664160",
    "end": "665519"
  },
  {
    "text": "in a stable place",
    "start": "665519",
    "end": "667519"
  },
  {
    "text": "for a while now which you can go and use",
    "start": "667519",
    "end": "669839"
  },
  {
    "text": "right now in your software with the sdks",
    "start": "669839",
    "end": "672160"
  },
  {
    "text": "that i just mentioned",
    "start": "672160",
    "end": "674959"
  },
  {
    "text": "so what's next what other problems are",
    "start": "674959",
    "end": "677440"
  },
  {
    "text": "worth solving around this space",
    "start": "677440",
    "end": "680640"
  },
  {
    "text": "what other solutions does having a",
    "start": "680640",
    "end": "682560"
  },
  {
    "text": "standard event format make possible",
    "start": "682560",
    "end": "686399"
  },
  {
    "text": "the group over the last two years has",
    "start": "686399",
    "end": "688320"
  },
  {
    "text": "been discussing this and we've come up",
    "start": "688320",
    "end": "689839"
  },
  {
    "text": "with uh three new projects and specs",
    "start": "689839",
    "end": "692800"
  },
  {
    "text": "that are being worked on as we speak",
    "start": "692800",
    "end": "695279"
  },
  {
    "text": "and those are",
    "start": "695279",
    "end": "698160"
  },
  {
    "text": "what you see here we have discovery",
    "start": "698880",
    "end": "700959"
  },
  {
    "text": "subscriptions and",
    "start": "700959",
    "end": "703040"
  },
  {
    "text": "schema registration",
    "start": "703040",
    "end": "705440"
  },
  {
    "text": "and these are not all independent uh",
    "start": "705440",
    "end": "709040"
  },
  {
    "text": "specs",
    "start": "709040",
    "end": "710000"
  },
  {
    "text": "uh well the specs are independent but",
    "start": "710000",
    "end": "711600"
  },
  {
    "text": "they do work together",
    "start": "711600",
    "end": "713040"
  },
  {
    "text": "and together we believe that these will",
    "start": "713040",
    "end": "715200"
  },
  {
    "text": "ease the end to end",
    "start": "715200",
    "end": "716800"
  },
  {
    "text": "life cycle management of events how",
    "start": "716800",
    "end": "718480"
  },
  {
    "text": "they're discovered how they're received",
    "start": "718480",
    "end": "720079"
  },
  {
    "text": "and how they're used",
    "start": "720079",
    "end": "721760"
  },
  {
    "text": "so to go through each of them",
    "start": "721760",
    "end": "723200"
  },
  {
    "text": "individually discovery attempts to",
    "start": "723200",
    "end": "725680"
  },
  {
    "text": "answer the question of",
    "start": "725680",
    "end": "728800"
  },
  {
    "text": "oh okay we've got this great way to",
    "start": "728880",
    "end": "731360"
  },
  {
    "text": "integrate up inter-operate our invented",
    "start": "731360",
    "end": "733440"
  },
  {
    "text": "systems but",
    "start": "733440",
    "end": "734959"
  },
  {
    "text": "as a consumer how do i know what to",
    "start": "734959",
    "end": "737120"
  },
  {
    "text": "consume and how to consume it",
    "start": "737120",
    "end": "739200"
  },
  {
    "text": "and where do i go to consume it",
    "start": "739200",
    "end": "741360"
  },
  {
    "text": "how do i discover all the events emitted",
    "start": "741360",
    "end": "743760"
  },
  {
    "text": "by an application producer that i know",
    "start": "743760",
    "end": "745519"
  },
  {
    "text": "about and what is the shape of those",
    "start": "745519",
    "end": "747279"
  },
  {
    "text": "emitted events",
    "start": "747279",
    "end": "749600"
  },
  {
    "text": "the closest comparison here",
    "start": "749600",
    "end": "751680"
  },
  {
    "text": "is something like an open api document",
    "start": "751680",
    "end": "753680"
  },
  {
    "text": "with open api you can ask a service what",
    "start": "753680",
    "end": "755680"
  },
  {
    "text": "does your rest interface look like and",
    "start": "755680",
    "end": "757760"
  },
  {
    "text": "what does it return back",
    "start": "757760",
    "end": "759920"
  },
  {
    "text": "we don't really have this for vented",
    "start": "759920",
    "end": "761360"
  },
  {
    "text": "systems today and so we're working on a",
    "start": "761360",
    "end": "763360"
  },
  {
    "text": "discovery api to try and bring this to",
    "start": "763360",
    "end": "765200"
  },
  {
    "text": "life as part of cloud events",
    "start": "765200",
    "end": "768399"
  },
  {
    "text": "next if we take this a step further you",
    "start": "768880",
    "end": "770800"
  },
  {
    "text": "might ask the question",
    "start": "770800",
    "end": "772560"
  },
  {
    "text": "okay great i'm able to discover what",
    "start": "772560",
    "end": "774880"
  },
  {
    "text": "events are produced how does my",
    "start": "774880",
    "end": "776560"
  },
  {
    "text": "application actually receive them",
    "start": "776560",
    "end": "779040"
  },
  {
    "text": "how do i subscribe to them",
    "start": "779040",
    "end": "781600"
  },
  {
    "text": "for this we're also working on a",
    "start": "781600",
    "end": "783440"
  },
  {
    "text": "subscription api that provides this",
    "start": "783440",
    "end": "785200"
  },
  {
    "text": "mechanism along with some handy features",
    "start": "785200",
    "end": "787200"
  },
  {
    "text": "such as being able to filter on metadata",
    "start": "787200",
    "end": "789279"
  },
  {
    "text": "to receive only the events that are",
    "start": "789279",
    "end": "791279"
  },
  {
    "text": "relevant to your application",
    "start": "791279",
    "end": "794480"
  },
  {
    "text": "and finally you might ask the question",
    "start": "795600",
    "end": "797600"
  },
  {
    "text": "this is awesome i can discover what",
    "start": "797600",
    "end": "798959"
  },
  {
    "text": "events are produced and i can subscribe",
    "start": "798959",
    "end": "800720"
  },
  {
    "text": "to them but how does my application",
    "start": "800720",
    "end": "802399"
  },
  {
    "text": "consumer interpret the contents",
    "start": "802399",
    "end": "805040"
  },
  {
    "text": "of the events if the contents are",
    "start": "805040",
    "end": "806480"
  },
  {
    "text": "determined by the producer",
    "start": "806480",
    "end": "809279"
  },
  {
    "text": "how does the consumer know the shape of",
    "start": "809279",
    "end": "810880"
  },
  {
    "text": "the schema of those",
    "start": "810880",
    "end": "812839"
  },
  {
    "text": "contents for this we are working on a",
    "start": "812839",
    "end": "815839"
  },
  {
    "text": "schema registration api which allows a",
    "start": "815839",
    "end": "818240"
  },
  {
    "text": "producer to register and consumer",
    "start": "818240",
    "end": "821440"
  },
  {
    "text": "and consumers to access schemas that",
    "start": "821440",
    "end": "823199"
  },
  {
    "text": "were registered by producers",
    "start": "823199",
    "end": "825120"
  },
  {
    "text": "and those schema syntactically described",
    "start": "825120",
    "end": "826959"
  },
  {
    "text": "the shape of those events and their",
    "start": "826959",
    "end": "829120"
  },
  {
    "text": "contents via a steamer registry",
    "start": "829120",
    "end": "833440"
  },
  {
    "text": "so that's what we're trying to solve for",
    "start": "833760",
    "end": "835600"
  },
  {
    "text": "at a high level",
    "start": "835600",
    "end": "836880"
  },
  {
    "text": "what could this look like in practice",
    "start": "836880",
    "end": "840240"
  },
  {
    "start": "839000",
    "end": "839000"
  },
  {
    "text": "so first a consumer needs to know which",
    "start": "841120",
    "end": "843760"
  },
  {
    "text": "events are available for consumption",
    "start": "843760",
    "end": "847519"
  },
  {
    "text": "they discover this through the service",
    "start": "847519",
    "end": "849760"
  },
  {
    "text": "which produces those events which",
    "start": "849760",
    "end": "851680"
  },
  {
    "text": "exposes a discovery endpoint",
    "start": "851680",
    "end": "854880"
  },
  {
    "text": "this acts as a sort of catalog of",
    "start": "854880",
    "end": "857440"
  },
  {
    "text": "services or producers that can be",
    "start": "857440",
    "end": "859920"
  },
  {
    "text": "queried to find events of interest to",
    "start": "859920",
    "end": "861760"
  },
  {
    "text": "the application",
    "start": "861760",
    "end": "863199"
  },
  {
    "text": "in this example we fetch a particular",
    "start": "863199",
    "end": "865120"
  },
  {
    "text": "service which returns a service object",
    "start": "865120",
    "end": "867600"
  },
  {
    "text": "which is an example shown here",
    "start": "867600",
    "end": "871040"
  },
  {
    "start": "868000",
    "end": "868000"
  },
  {
    "text": "and it looks like this includes a bunch",
    "start": "871040",
    "end": "872320"
  },
  {
    "text": "of metadata importantly it includes an",
    "start": "872320",
    "end": "874800"
  },
  {
    "text": "array of events this producer emits and",
    "start": "874800",
    "end": "877600"
  },
  {
    "text": "information about the subscription",
    "start": "877600",
    "end": "879360"
  },
  {
    "text": "endpoint such as the url and supported",
    "start": "879360",
    "end": "882639"
  },
  {
    "text": "filtering dialects which i will go into",
    "start": "882639",
    "end": "885120"
  },
  {
    "text": "in a bit",
    "start": "885120",
    "end": "886880"
  },
  {
    "text": "so a subscription can be created by a",
    "start": "886880",
    "end": "888880"
  },
  {
    "text": "consumer or someone on their behalf",
    "start": "888880",
    "end": "892800"
  },
  {
    "text": "so once it knows how to describe the",
    "start": "893360",
    "end": "894959"
  },
  {
    "text": "consumer can create a subscription via",
    "start": "894959",
    "end": "896560"
  },
  {
    "text": "this subscription api",
    "start": "896560",
    "end": "898480"
  },
  {
    "text": "using the subscription url returned by",
    "start": "898480",
    "end": "900880"
  },
  {
    "text": "the discovery endpoint",
    "start": "900880",
    "end": "902560"
  },
  {
    "text": "and includes the events",
    "start": "902560",
    "end": "904880"
  },
  {
    "text": "the consumer selects to subscribe to in",
    "start": "904880",
    "end": "907199"
  },
  {
    "text": "the request",
    "start": "907199",
    "end": "909040"
  },
  {
    "text": "it also includes a sync address and",
    "start": "909040",
    "end": "911760"
  },
  {
    "text": "protocol",
    "start": "911760",
    "end": "913360"
  },
  {
    "text": "i don't think i've mentioned sync yet",
    "start": "913360",
    "end": "914720"
  },
  {
    "text": "but a sync is think of sync as a general",
    "start": "914720",
    "end": "917279"
  },
  {
    "text": "abstract notion of",
    "start": "917279",
    "end": "919199"
  },
  {
    "text": "um",
    "start": "919199",
    "end": "920800"
  },
  {
    "text": "or concept of the destination to which",
    "start": "920800",
    "end": "923440"
  },
  {
    "text": "the events selected by a subscription",
    "start": "923440",
    "end": "926639"
  },
  {
    "text": "are to be delivered using the specified",
    "start": "926639",
    "end": "929440"
  },
  {
    "text": "address and protocol",
    "start": "929440",
    "end": "932720"
  },
  {
    "text": "you'll note that in this diagram i've",
    "start": "933279",
    "end": "935199"
  },
  {
    "text": "separated the subscription api itself",
    "start": "935199",
    "end": "937519"
  },
  {
    "text": "from the event producer",
    "start": "937519",
    "end": "939839"
  },
  {
    "text": "specification as it exists today",
    "start": "939839",
    "end": "941519"
  },
  {
    "text": "provides for flexibility as to whether",
    "start": "941519",
    "end": "943680"
  },
  {
    "text": "these apis are part of the same service",
    "start": "943680",
    "end": "946000"
  },
  {
    "text": "whether they're separate etc",
    "start": "946000",
    "end": "948320"
  },
  {
    "text": "and",
    "start": "948320",
    "end": "949120"
  },
  {
    "text": "but in this example they are separate",
    "start": "949120",
    "end": "950880"
  },
  {
    "text": "and the subscription api manages the",
    "start": "950880",
    "end": "952800"
  },
  {
    "text": "subscription themselves and notifies the",
    "start": "952800",
    "end": "954560"
  },
  {
    "text": "producer of this which in turn might go",
    "start": "954560",
    "end": "957040"
  },
  {
    "text": "and configure the mechanism that handles",
    "start": "957040",
    "end": "959120"
  },
  {
    "text": "event routing and delivery via the",
    "start": "959120",
    "end": "961040"
  },
  {
    "text": "mediator",
    "start": "961040",
    "end": "963519"
  },
  {
    "text": "and so here's an example of",
    "start": "964639",
    "end": "966800"
  },
  {
    "text": "what the subscription object looks like",
    "start": "966800",
    "end": "968959"
  },
  {
    "text": "in this example we've configured a",
    "start": "968959",
    "end": "971360"
  },
  {
    "text": "prefix filter so if you remember two",
    "start": "971360",
    "end": "973120"
  },
  {
    "text": "slides back let me actually go back and",
    "start": "973120",
    "end": "974639"
  },
  {
    "text": "show this again um the service object",
    "start": "974639",
    "end": "977680"
  },
  {
    "text": "returned uh this field called",
    "start": "977680",
    "end": "980000"
  },
  {
    "text": "subscription dialects that lists basic",
    "start": "980000",
    "end": "982800"
  },
  {
    "text": "as the value there",
    "start": "982800",
    "end": "985360"
  },
  {
    "start": "985000",
    "end": "985000"
  },
  {
    "text": "and so the spec is is written in a way",
    "start": "985360",
    "end": "987519"
  },
  {
    "text": "where",
    "start": "987519",
    "end": "988880"
  },
  {
    "text": "uh different dialects can be uh",
    "start": "988880",
    "end": "992079"
  },
  {
    "text": "added and implemented depending",
    "start": "992079",
    "end": "994839"
  },
  {
    "text": "on what ways and uh",
    "start": "994839",
    "end": "998720"
  },
  {
    "text": "what kind of expressions um",
    "start": "998720",
    "end": "1001440"
  },
  {
    "text": "implant implementations want to support",
    "start": "1001440",
    "end": "1003440"
  },
  {
    "text": "in terms of how",
    "start": "1003440",
    "end": "1005360"
  },
  {
    "text": "subscribers can uh specify event filters",
    "start": "1005360",
    "end": "1009519"
  },
  {
    "text": "the core of the spec defines a basic",
    "start": "1009519",
    "end": "1011120"
  },
  {
    "text": "filter um which",
    "start": "1011120",
    "end": "1013519"
  },
  {
    "text": "defines a very finite subset of",
    "start": "1013519",
    "end": "1016320"
  },
  {
    "text": "filters",
    "start": "1016320",
    "end": "1017519"
  },
  {
    "text": "for",
    "start": "1017519",
    "end": "1018480"
  },
  {
    "text": "subscriptions",
    "start": "1018480",
    "end": "1021040"
  },
  {
    "text": "and so this example uses a basic filter",
    "start": "1021040",
    "end": "1023199"
  },
  {
    "text": "which is",
    "start": "1023199",
    "end": "1024640"
  },
  {
    "text": "in this case we're using a type prefix",
    "start": "1024640",
    "end": "1027038"
  },
  {
    "text": "filter where we are specifying",
    "start": "1027039",
    "end": "1029000"
  },
  {
    "text": "com.example. as the prefix and this",
    "start": "1029000",
    "end": "1031600"
  },
  {
    "text": "means that only event types with a",
    "start": "1031600",
    "end": "1033520"
  },
  {
    "text": "prefix of com.example. will be delivered",
    "start": "1033520",
    "end": "1036400"
  },
  {
    "text": "to the configured zinc",
    "start": "1036400",
    "end": "1039600"
  },
  {
    "text": "bringing back a modified version of the",
    "start": "1041199",
    "end": "1043120"
  },
  {
    "text": "diagram from before now that the",
    "start": "1043120",
    "end": "1044798"
  },
  {
    "text": "consumer has discovered the events it",
    "start": "1044799",
    "end": "1047120"
  },
  {
    "text": "wants to consume and has set up a",
    "start": "1047120",
    "end": "1049520"
  },
  {
    "text": "subscription",
    "start": "1049520",
    "end": "1050640"
  },
  {
    "text": "events will start playing as normal",
    "start": "1050640",
    "end": "1052000"
  },
  {
    "text": "according to the rules in that",
    "start": "1052000",
    "end": "1053200"
  },
  {
    "text": "subscription",
    "start": "1053200",
    "end": "1055520"
  },
  {
    "text": "to tie this all together let's lastly",
    "start": "1055520",
    "end": "1057200"
  },
  {
    "text": "look at how the schema api fits in",
    "start": "1057200",
    "end": "1061200"
  },
  {
    "text": "the events received at sync in this case",
    "start": "1061360",
    "end": "1064080"
  },
  {
    "text": "the event consumer we'll of course use",
    "start": "1064080",
    "end": "1066880"
  },
  {
    "text": "the cloud events format and the consumer",
    "start": "1066880",
    "end": "1069600"
  },
  {
    "text": "will",
    "start": "1069600",
    "end": "1070559"
  },
  {
    "text": "receive an event like the following",
    "start": "1070559",
    "end": "1074240"
  },
  {
    "text": "here we have a cloud event that includes",
    "start": "1074240",
    "end": "1075840"
  },
  {
    "text": "the data schema property which points to",
    "start": "1075840",
    "end": "1079440"
  },
  {
    "text": "the schema that the consumer can use to",
    "start": "1079440",
    "end": "1081919"
  },
  {
    "text": "understand and parse the enclosed cloud",
    "start": "1081919",
    "end": "1083840"
  },
  {
    "text": "event contents",
    "start": "1083840",
    "end": "1085679"
  },
  {
    "text": "in our case the url points to a schema",
    "start": "1085679",
    "end": "1088400"
  },
  {
    "text": "registry",
    "start": "1088400",
    "end": "1089520"
  },
  {
    "text": "which when called will return the json",
    "start": "1089520",
    "end": "1091679"
  },
  {
    "text": "schema for the enclosed event",
    "start": "1091679",
    "end": "1095840"
  },
  {
    "start": "1094000",
    "end": "1094000"
  },
  {
    "text": "and",
    "start": "1097360",
    "end": "1099120"
  },
  {
    "text": "uh you know following the the pattern of",
    "start": "1099120",
    "end": "1101280"
  },
  {
    "text": "being agnostic to implementations",
    "start": "1101280",
    "end": "1103919"
  },
  {
    "text": "uh schema registries and event producers",
    "start": "1103919",
    "end": "1106320"
  },
  {
    "text": "are free to choose whichever schema",
    "start": "1106320",
    "end": "1107840"
  },
  {
    "text": "format is appropriate for their use case",
    "start": "1107840",
    "end": "1109760"
  },
  {
    "text": "whether that's json schema available etc",
    "start": "1109760",
    "end": "1112000"
  },
  {
    "text": "so here you see",
    "start": "1112000",
    "end": "1113679"
  },
  {
    "text": "the event consumer reaching out to the",
    "start": "1113679",
    "end": "1115600"
  },
  {
    "text": "schema registry to fetch the schema so",
    "start": "1115600",
    "end": "1117280"
  },
  {
    "text": "that i can use that to understand what's",
    "start": "1117280",
    "end": "1119440"
  },
  {
    "text": "enclosed in the event that it just",
    "start": "1119440",
    "end": "1120720"
  },
  {
    "text": "received",
    "start": "1120720",
    "end": "1123720"
  },
  {
    "text": "and uh here's an example of what we",
    "start": "1123840",
    "end": "1125280"
  },
  {
    "text": "might get back from the schema registry",
    "start": "1125280",
    "end": "1126960"
  },
  {
    "text": "um",
    "start": "1126960",
    "end": "1127840"
  },
  {
    "text": "as i mentioned before we're in this",
    "start": "1127840",
    "end": "1129360"
  },
  {
    "text": "example we're using json schema",
    "start": "1129360",
    "end": "1131600"
  },
  {
    "text": "just like the envelope format there is a",
    "start": "1131600",
    "end": "1133840"
  },
  {
    "text": "separation of schema metadata and the",
    "start": "1133840",
    "end": "1136320"
  },
  {
    "text": "schema document itself",
    "start": "1136320",
    "end": "1138080"
  },
  {
    "text": "metadata such as the schema id",
    "start": "1138080",
    "end": "1140799"
  },
  {
    "text": "what kind of schema it is and the",
    "start": "1140799",
    "end": "1142720"
  },
  {
    "text": "description are returned as http headers",
    "start": "1142720",
    "end": "1144559"
  },
  {
    "text": "while the schema document itself is",
    "start": "1144559",
    "end": "1146559"
  },
  {
    "text": "returned in the http body",
    "start": "1146559",
    "end": "1151080"
  },
  {
    "text": "so that's what we have in progress right",
    "start": "1151919",
    "end": "1153679"
  },
  {
    "text": "now",
    "start": "1153679",
    "end": "1154640"
  },
  {
    "text": "what's beyond these initiatives uh well",
    "start": "1154640",
    "end": "1156720"
  },
  {
    "text": "this is largely tbd right now and this",
    "start": "1156720",
    "end": "1159200"
  },
  {
    "text": "is an area where we would love more",
    "start": "1159200",
    "end": "1161039"
  },
  {
    "text": "folks to come with ideas and come",
    "start": "1161039",
    "end": "1163280"
  },
  {
    "text": "collaborate with us",
    "start": "1163280",
    "end": "1164960"
  },
  {
    "text": "we do imagine that there's some work to",
    "start": "1164960",
    "end": "1166320"
  },
  {
    "text": "be done on the security side right now",
    "start": "1166320",
    "end": "1168559"
  },
  {
    "text": "that is left to solve out of band of",
    "start": "1168559",
    "end": "1170880"
  },
  {
    "text": "cloud events to either an application or",
    "start": "1170880",
    "end": "1173840"
  },
  {
    "text": "protocol level concern",
    "start": "1173840",
    "end": "1176160"
  },
  {
    "text": "you could also imagine domain or",
    "start": "1176160",
    "end": "1178000"
  },
  {
    "text": "technology specific standards that",
    "start": "1178000",
    "end": "1179520"
  },
  {
    "text": "aren't",
    "start": "1179520",
    "end": "1180480"
  },
  {
    "text": "wide enough for us to focus on thus far",
    "start": "1180480",
    "end": "1182799"
  },
  {
    "text": "such as standardizing the shape of",
    "start": "1182799",
    "end": "1184400"
  },
  {
    "text": "certain data that might be ubiquitous",
    "start": "1184400",
    "end": "1186400"
  },
  {
    "text": "across certain platforms",
    "start": "1186400",
    "end": "1189919"
  },
  {
    "text": "in general there's",
    "start": "1191200",
    "end": "1192559"
  },
  {
    "text": "a lot of opportunity here we think and a",
    "start": "1192559",
    "end": "1194799"
  },
  {
    "text": "lot of excitement around the project so",
    "start": "1194799",
    "end": "1196640"
  },
  {
    "text": "if you'd like to join we meet weekly we",
    "start": "1196640",
    "end": "1198880"
  },
  {
    "text": "have a website and a github repository",
    "start": "1198880",
    "end": "1201440"
  },
  {
    "text": "which is all listed here",
    "start": "1201440",
    "end": "1202960"
  },
  {
    "text": "where",
    "start": "1202960",
    "end": "1204320"
  },
  {
    "text": "all of the specs and sdks live",
    "start": "1204320",
    "end": "1207440"
  },
  {
    "text": "we welcome everyone and anyone who would",
    "start": "1207440",
    "end": "1209520"
  },
  {
    "text": "like to contribute in any way whether",
    "start": "1209520",
    "end": "1210880"
  },
  {
    "text": "you want to come help contribute code to",
    "start": "1210880",
    "end": "1212559"
  },
  {
    "text": "the sdks",
    "start": "1212559",
    "end": "1213840"
  },
  {
    "text": "whether you want to",
    "start": "1213840",
    "end": "1216000"
  },
  {
    "text": "brainstorm on some of the newer specs or",
    "start": "1216000",
    "end": "1217760"
  },
  {
    "text": "maybe you have an idea that you think",
    "start": "1217760",
    "end": "1219039"
  },
  {
    "text": "could make this overall ecosystem",
    "start": "1219039",
    "end": "1220720"
  },
  {
    "text": "stronger and want to contribute that",
    "start": "1220720",
    "end": "1223440"
  },
  {
    "text": "please come join us and work with us",
    "start": "1223440",
    "end": "1224559"
  },
  {
    "text": "we'd love to have you",
    "start": "1224559",
    "end": "1226720"
  },
  {
    "text": "we'd also love to have some examples and",
    "start": "1226720",
    "end": "1229120"
  },
  {
    "text": "use cases whether they're ideas",
    "start": "1229120",
    "end": "1231280"
  },
  {
    "text": "pocs or production applications this",
    "start": "1231280",
    "end": "1233919"
  },
  {
    "text": "really helps us see what's working",
    "start": "1233919",
    "end": "1235600"
  },
  {
    "text": "what's not and how we can make things",
    "start": "1235600",
    "end": "1237600"
  },
  {
    "text": "better",
    "start": "1237600",
    "end": "1239760"
  },
  {
    "text": "and that is it for the presentation i",
    "start": "1239760",
    "end": "1241919"
  },
  {
    "text": "hope you",
    "start": "1241919",
    "end": "1243039"
  },
  {
    "text": "come away with an understanding of where",
    "start": "1243039",
    "end": "1244880"
  },
  {
    "text": "cloud events is today and the direction",
    "start": "1244880",
    "end": "1246559"
  },
  {
    "text": "that we're heading in thank you all for",
    "start": "1246559",
    "end": "1247919"
  },
  {
    "text": "watching",
    "start": "1247919",
    "end": "1250799"
  }
]