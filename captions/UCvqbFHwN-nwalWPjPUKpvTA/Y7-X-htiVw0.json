[
  {
    "start": "0",
    "end": "23000"
  },
  {
    "text": "hi my name is alice de firth a ministery",
    "start": "80",
    "end": "2240"
  },
  {
    "text": "in berlin for commando",
    "start": "2240",
    "end": "3760"
  },
  {
    "text": "today we'll talk about deploying the",
    "start": "3760",
    "end": "5120"
  },
  {
    "text": "ingress engine x controller using helm",
    "start": "5120",
    "end": "7600"
  },
  {
    "text": "who are you well hopefully you're",
    "start": "7600",
    "end": "9440"
  },
  {
    "text": "figuring out how to deploy ingress",
    "start": "9440",
    "end": "10800"
  },
  {
    "text": "controllers on kubernetes or you already",
    "start": "10800",
    "end": "12559"
  },
  {
    "text": "have and want to see how other people",
    "start": "12559",
    "end": "13920"
  },
  {
    "text": "are doing it",
    "start": "13920",
    "end": "14960"
  },
  {
    "text": "just a heads up there's a lot of code in",
    "start": "14960",
    "end": "16480"
  },
  {
    "text": "this deck so if you're on a bad",
    "start": "16480",
    "end": "17760"
  },
  {
    "text": "connection and it's blurry you might",
    "start": "17760",
    "end": "19119"
  },
  {
    "text": "want to get slides from sked or github",
    "start": "19119",
    "end": "21199"
  },
  {
    "text": "and follow along so first what you want",
    "start": "21199",
    "end": "25439"
  },
  {
    "start": "23000",
    "end": "23000"
  },
  {
    "text": "traffic comes into a tcp load balancer",
    "start": "25439",
    "end": "27680"
  },
  {
    "text": "then goes to some highly available nginx",
    "start": "27680",
    "end": "29439"
  },
  {
    "text": "reverse proxies which terminate tls",
    "start": "29439",
    "end": "32000"
  },
  {
    "text": "then hits your back end okay i said",
    "start": "32000",
    "end": "34880"
  },
  {
    "text": "we're going to do it on the rails",
    "start": "34880",
    "end": "36239"
  },
  {
    "text": "if you pull up the docks for deploying",
    "start": "36239",
    "end": "37600"
  },
  {
    "text": "the controller you can just copy paste",
    "start": "37600",
    "end": "39200"
  },
  {
    "text": "these lines",
    "start": "39200",
    "end": "40160"
  },
  {
    "text": "helm install and then the name of your",
    "start": "40160",
    "end": "41840"
  },
  {
    "text": "release and then chart name",
    "start": "41840",
    "end": "43520"
  },
  {
    "text": "so this part is pretty easy",
    "start": "43520",
    "end": "46559"
  },
  {
    "text": "yeah anybody who started here knows it's",
    "start": "46559",
    "end": "48719"
  },
  {
    "text": "a bit more complicated than that",
    "start": "48719",
    "end": "50320"
  },
  {
    "text": "i guess that's why you're at my talk so",
    "start": "50320",
    "end": "51760"
  },
  {
    "text": "i hope i can help",
    "start": "51760",
    "end": "54320"
  },
  {
    "text": "our use case has lots of single tenant",
    "start": "54320",
    "end": "56000"
  },
  {
    "text": "back-ends with their own urls",
    "start": "56000",
    "end": "58079"
  },
  {
    "text": "some use grpc and some use http11",
    "start": "58079",
    "end": "61520"
  },
  {
    "text": "we have multiple kubernetes clusters in",
    "start": "61520",
    "end": "63280"
  },
  {
    "text": "multiple regions",
    "start": "63280",
    "end": "64559"
  },
  {
    "text": "the solution should allow layer 4",
    "start": "64559",
    "end": "66080"
  },
  {
    "text": "routing to a specific cluster like we",
    "start": "66080",
    "end": "68000"
  },
  {
    "text": "did in 1998",
    "start": "68000",
    "end": "69680"
  },
  {
    "text": "we also want to be cloud provider",
    "start": "69680",
    "end": "71280"
  },
  {
    "text": "agnostic frankly not many providers",
    "start": "71280",
    "end": "73520"
  },
  {
    "text": "support single let alone multi-region",
    "start": "73520",
    "end": "75439"
  },
  {
    "text": "grpc layer 7 load balancing anyway i",
    "start": "75439",
    "end": "77680"
  },
  {
    "text": "think there's only one you can buy",
    "start": "77680",
    "end": "79600"
  },
  {
    "text": "some similar use cases include customer",
    "start": "79600",
    "end": "81520"
  },
  {
    "text": "created cnames pointing to a unique url",
    "start": "81520",
    "end": "83600"
  },
  {
    "text": "hosted by you like many web hosting",
    "start": "83600",
    "end": "85360"
  },
  {
    "text": "providers",
    "start": "85360",
    "end": "86159"
  },
  {
    "text": "or pr based environments for ci cd or",
    "start": "86159",
    "end": "88960"
  },
  {
    "text": "perhaps kubernetes platform as a service",
    "start": "88960",
    "end": "90960"
  },
  {
    "text": "for your company so devs can deploy new",
    "start": "90960",
    "end": "93040"
  },
  {
    "text": "services autonomously back to the rails",
    "start": "93040",
    "end": "96880"
  },
  {
    "text": "obviously disclaimer i'm not endorsing",
    "start": "96880",
    "end": "98640"
  },
  {
    "text": "these on behalf of anyone just saying",
    "start": "98640",
    "end": "100159"
  },
  {
    "text": "they're in common use and to my",
    "start": "100159",
    "end": "101360"
  },
  {
    "text": "knowledge the most",
    "start": "101360",
    "end": "102240"
  },
  {
    "text": "widely used open source op solution",
    "start": "102240",
    "end": "105600"
  },
  {
    "text": "they also have maintained home charts",
    "start": "105600",
    "end": "107360"
  },
  {
    "text": "that's good for us shout out to all the",
    "start": "107360",
    "end": "108960"
  },
  {
    "text": "maintainers thank you a thousand times",
    "start": "108960",
    "end": "110560"
  },
  {
    "text": "over",
    "start": "110560",
    "end": "111680"
  },
  {
    "text": "external dns is a controller which",
    "start": "111680",
    "end": "113280"
  },
  {
    "text": "watches ingresses and makes",
    "start": "113280",
    "end": "115119"
  },
  {
    "text": "well external dns records cert manager",
    "start": "115119",
    "end": "118399"
  },
  {
    "text": "is a controller which watches its own",
    "start": "118399",
    "end": "119920"
  },
  {
    "text": "crds and creates tls certificates as",
    "start": "119920",
    "end": "122240"
  },
  {
    "text": "kubernetes secrets",
    "start": "122240",
    "end": "123439"
  },
  {
    "text": "these secrets can be referenced by",
    "start": "123439",
    "end": "124880"
  },
  {
    "text": "ingresses optionally it can also watch",
    "start": "124880",
    "end": "127119"
  },
  {
    "text": "ingresses and solve http01 acme",
    "start": "127119",
    "end": "129360"
  },
  {
    "text": "challenges which it puts in the already",
    "start": "129360",
    "end": "130959"
  },
  {
    "text": "referenced secret",
    "start": "130959",
    "end": "132640"
  },
  {
    "text": "prometheus operator is a controller",
    "start": "132640",
    "end": "134319"
  },
  {
    "text": "which watches its own crds",
    "start": "134319",
    "end": "135920"
  },
  {
    "text": "it deploys prometheus alert manager and",
    "start": "135920",
    "end": "138000"
  },
  {
    "text": "grafana as well as allowing you to store",
    "start": "138000",
    "end": "140080"
  },
  {
    "text": "dashboards and alerting roles in their",
    "start": "140080",
    "end": "141599"
  },
  {
    "text": "own config maps which the app developers",
    "start": "141599",
    "end": "143520"
  },
  {
    "text": "can own",
    "start": "143520",
    "end": "144879"
  },
  {
    "text": "os2 proxy is a separate service which",
    "start": "144879",
    "end": "146800"
  },
  {
    "text": "can authenticate the user optionally",
    "start": "146800",
    "end": "148560"
  },
  {
    "text": "requiring some scopes like a particular",
    "start": "148560",
    "end": "150239"
  },
  {
    "text": "email domain or github team membership",
    "start": "150239",
    "end": "152720"
  },
  {
    "text": "nginx can route incoming requests there",
    "start": "152720",
    "end": "154720"
  },
  {
    "text": "and only pass them onto your back",
    "start": "154720",
    "end": "156000"
  },
  {
    "text": "end if they're successful before you",
    "start": "156000",
    "end": "159120"
  },
  {
    "text": "dive in i think there are three main",
    "start": "159120",
    "end": "160480"
  },
  {
    "text": "pain points when you're working on this",
    "start": "160480",
    "end": "162160"
  },
  {
    "text": "firstly deploying everything and in",
    "start": "162160",
    "end": "164000"
  },
  {
    "text": "particular managing secrets",
    "start": "164000",
    "end": "165760"
  },
  {
    "text": "for example you might have multiple",
    "start": "165760",
    "end": "167040"
  },
  {
    "text": "clusters in multiple regions for",
    "start": "167040",
    "end": "168480"
  },
  {
    "text": "production but different urls and",
    "start": "168480",
    "end": "170080"
  },
  {
    "text": "credentials for test environments",
    "start": "170080",
    "end": "171920"
  },
  {
    "text": "keeping everything in sync and",
    "start": "171920",
    "end": "173120"
  },
  {
    "text": "continuously delivered without copy",
    "start": "173120",
    "end": "175200"
  },
  {
    "text": "pasting everything can be tough",
    "start": "175200",
    "end": "177120"
  },
  {
    "text": "the tooling is still stabilizing and i",
    "start": "177120",
    "end": "178959"
  },
  {
    "text": "don't think anyone is convinced that we",
    "start": "178959",
    "end": "180480"
  },
  {
    "text": "found",
    "start": "180480",
    "end": "180879"
  },
  {
    "text": "the way to template this stuff secondly",
    "start": "180879",
    "end": "184080"
  },
  {
    "text": "tracking upstream improvements although",
    "start": "184080",
    "end": "185920"
  },
  {
    "text": "the rate of change in this ecosystem is",
    "start": "185920",
    "end": "187599"
  },
  {
    "text": "much slower than it was a few years ago",
    "start": "187599",
    "end": "189680"
  },
  {
    "text": "it's still much higher than most",
    "start": "189680",
    "end": "190959"
  },
  {
    "text": "enterprise software of the past and you",
    "start": "190959",
    "end": "192879"
  },
  {
    "text": "begin to try by yourself if you're more",
    "start": "192879",
    "end": "194560"
  },
  {
    "text": "than about 12 months behind",
    "start": "194560",
    "end": "196800"
  },
  {
    "text": "cvas get patched and released very",
    "start": "196800",
    "end": "198480"
  },
  {
    "text": "quickly and one of the major benefits of",
    "start": "198480",
    "end": "200159"
  },
  {
    "text": "this stack is being able to quickly and",
    "start": "200159",
    "end": "201840"
  },
  {
    "text": "easily upgrade small chunks of your",
    "start": "201840",
    "end": "203360"
  },
  {
    "text": "infrastructure at a time",
    "start": "203360",
    "end": "205360"
  },
  {
    "text": "lastly every service we've talked about",
    "start": "205360",
    "end": "207120"
  },
  {
    "text": "comes up with a minimal feature set",
    "start": "207120",
    "end": "209200"
  },
  {
    "text": "in a production scenario you need to set",
    "start": "209200",
    "end": "211040"
  },
  {
    "text": "a lot of configuration",
    "start": "211040",
    "end": "212560"
  },
  {
    "text": "although more and more of the",
    "start": "212560",
    "end": "213599"
  },
  {
    "text": "recommended config can be found in the",
    "start": "213599",
    "end": "215120"
  },
  {
    "text": "chart repos you'll often be piecing",
    "start": "215120",
    "end": "216959"
  },
  {
    "text": "together bits from blog posts and github",
    "start": "216959",
    "end": "218799"
  },
  {
    "text": "issues",
    "start": "218799",
    "end": "220319"
  },
  {
    "text": "i want to spend most of our time on the",
    "start": "220319",
    "end": "221760"
  },
  {
    "text": "last one but first i'll explain how we",
    "start": "221760",
    "end": "223599"
  },
  {
    "text": "solved the first two which aren't unique",
    "start": "223599",
    "end": "225200"
  },
  {
    "text": "to this space at",
    "start": "225200",
    "end": "226000"
  },
  {
    "text": "all okay so the solution we came up with",
    "start": "226000",
    "end": "229120"
  },
  {
    "text": "for the first two points is pretty",
    "start": "229120",
    "end": "230400"
  },
  {
    "text": "straightforward",
    "start": "230400",
    "end": "231360"
  },
  {
    "text": "basically we use sops to encrypt all the",
    "start": "231360",
    "end": "233200"
  },
  {
    "text": "secrets and add them to customize",
    "start": "233200",
    "end": "234879"
  },
  {
    "text": "overlays",
    "start": "234879",
    "end": "235840"
  },
  {
    "text": "we call helm template on each chart with",
    "start": "235840",
    "end": "237760"
  },
  {
    "text": "our standard values",
    "start": "237760",
    "end": "239040"
  },
  {
    "text": "and add this output to a customized base",
    "start": "239040",
    "end": "241599"
  },
  {
    "text": "then we make overlays for different",
    "start": "241599",
    "end": "242959"
  },
  {
    "text": "clusters and environments to set things",
    "start": "242959",
    "end": "244560"
  },
  {
    "text": "like the domains and inject secrets like",
    "start": "244560",
    "end": "246400"
  },
  {
    "text": "dns provider access tokens",
    "start": "246400",
    "end": "248400"
  },
  {
    "text": "then we call customize build for each",
    "start": "248400",
    "end": "250080"
  },
  {
    "text": "cluster and pipe it to coupe cuddle",
    "start": "250080",
    "end": "251599"
  },
  {
    "text": "apply",
    "start": "251599",
    "end": "252239"
  },
  {
    "text": "it's pretty easy helm template coupe",
    "start": "252239",
    "end": "254400"
  },
  {
    "text": "cuddle apply",
    "start": "254400",
    "end": "256799"
  },
  {
    "text": "of course it's not easy that's why",
    "start": "256799",
    "end": "258479"
  },
  {
    "text": "you're here it's still a hundred times",
    "start": "258479",
    "end": "260160"
  },
  {
    "text": "easier than it was a few years ago",
    "start": "260160",
    "end": "261359"
  },
  {
    "text": "though",
    "start": "261359",
    "end": "263600"
  },
  {
    "text": "the hardest part is tweaking each",
    "start": "263680",
    "end": "265520"
  },
  {
    "text": "component for different clusters",
    "start": "265520",
    "end": "267440"
  },
  {
    "text": "the approach we take means that we have",
    "start": "267440",
    "end": "268800"
  },
  {
    "text": "plain kubernetes manifests one per",
    "start": "268800",
    "end": "270880"
  },
  {
    "text": "cluster",
    "start": "270880",
    "end": "271440"
  },
  {
    "text": "and git the main disadvantage is the",
    "start": "271440",
    "end": "273600"
  },
  {
    "text": "deployment pipelines or operators need",
    "start": "273600",
    "end": "275360"
  },
  {
    "text": "to",
    "start": "275360",
    "end": "275919"
  },
  {
    "text": "take care of things that home hooks",
    "start": "275919",
    "end": "277600"
  },
  {
    "text": "usually do like installing crds and",
    "start": "277600",
    "end": "279919"
  },
  {
    "text": "waiting for validating web hooks to come",
    "start": "279919",
    "end": "281600"
  },
  {
    "text": "on",
    "start": "281600",
    "end": "282479"
  },
  {
    "text": "this might be an issue for you if you",
    "start": "282479",
    "end": "283759"
  },
  {
    "text": "deploy a lot of clusters",
    "start": "283759",
    "end": "285520"
  },
  {
    "text": "in practice for us since it since it's",
    "start": "285520",
    "end": "287520"
  },
  {
    "text": "item potent the first bootstrap deploy",
    "start": "287520",
    "end": "289520"
  },
  {
    "text": "fails",
    "start": "289520",
    "end": "290320"
  },
  {
    "text": "then we re-run it and it works it plays",
    "start": "290320",
    "end": "293440"
  },
  {
    "text": "nicely with cd systems like argo and",
    "start": "293440",
    "end": "295199"
  },
  {
    "text": "spinnaker",
    "start": "295199",
    "end": "296000"
  },
  {
    "text": "and also allows an engineer to run",
    "start": "296000",
    "end": "297680"
  },
  {
    "text": "cube-cuddled diff",
    "start": "297680",
    "end": "299759"
  },
  {
    "text": "our app developers typically write",
    "start": "299759",
    "end": "301360"
  },
  {
    "text": "controllers or customize manifests and",
    "start": "301360",
    "end": "303280"
  },
  {
    "text": "non-home charts",
    "start": "303280",
    "end": "304479"
  },
  {
    "text": "so this keeps the pipeline similar",
    "start": "304479",
    "end": "306639"
  },
  {
    "text": "manifest diffs are valuable for seeing",
    "start": "306639",
    "end": "308479"
  },
  {
    "text": "what will actually change when you",
    "start": "308479",
    "end": "309759"
  },
  {
    "text": "update a home chart",
    "start": "309759",
    "end": "311520"
  },
  {
    "text": "you could get the same with multiple",
    "start": "311520",
    "end": "312880"
  },
  {
    "text": "helm values files",
    "start": "312880",
    "end": "314720"
  },
  {
    "text": "all stacked up and then calling helm dry",
    "start": "314720",
    "end": "316560"
  },
  {
    "text": "run but it's not visible in pr",
    "start": "316560",
    "end": "318800"
  },
  {
    "text": "ever by far the most valuable part when",
    "start": "318800",
    "end": "321039"
  },
  {
    "text": "we set out on this path was that we",
    "start": "321039",
    "end": "322720"
  },
  {
    "text": "didn't have to fork helm charts to",
    "start": "322720",
    "end": "324160"
  },
  {
    "text": "expose value",
    "start": "324160",
    "end": "326000"
  },
  {
    "text": "however at this point most charts",
    "start": "326000",
    "end": "327600"
  },
  {
    "text": "support options like extra args or extra",
    "start": "327600",
    "end": "329680"
  },
  {
    "text": "ends",
    "start": "329680",
    "end": "330080"
  },
  {
    "text": "so that might not be such an issue for",
    "start": "330080",
    "end": "331600"
  },
  {
    "text": "you if you feel like you've already",
    "start": "331600",
    "end": "333520"
  },
  {
    "text": "solved to playing charts where this",
    "start": "333520",
    "end": "334960"
  },
  {
    "text": "doesn't apply to you because you have",
    "start": "334960",
    "end": "336320"
  },
  {
    "text": "only one cluster",
    "start": "336320",
    "end": "337440"
  },
  {
    "text": "just let your eyes glaze over for five",
    "start": "337440",
    "end": "339360"
  },
  {
    "text": "minutes and we'll get back to the fun",
    "start": "339360",
    "end": "340639"
  },
  {
    "text": "bits",
    "start": "340639",
    "end": "342720"
  },
  {
    "start": "342000",
    "end": "342000"
  },
  {
    "text": "okay if we were live i could probably",
    "start": "342720",
    "end": "344720"
  },
  {
    "text": "see some people cringe that i've got",
    "start": "344720",
    "end": "346160"
  },
  {
    "text": "screenshots of code in my presentation",
    "start": "346160",
    "end": "348479"
  },
  {
    "text": "backstory is that at my first kubecon i",
    "start": "348479",
    "end": "350400"
  },
  {
    "text": "went and i heard about all these cool",
    "start": "350400",
    "end": "351919"
  },
  {
    "text": "things each piece of software could do",
    "start": "351919",
    "end": "353840"
  },
  {
    "text": "and then i spent the next year figuring",
    "start": "353840",
    "end": "355360"
  },
  {
    "text": "out how to do them so the format of this",
    "start": "355360",
    "end": "357600"
  },
  {
    "text": "presentation is basically me walking you",
    "start": "357600",
    "end": "359680"
  },
  {
    "text": "through our production code",
    "start": "359680",
    "end": "361039"
  },
  {
    "text": "and calling out line numbers and what",
    "start": "361039",
    "end": "362560"
  },
  {
    "text": "they do we're going to smash through",
    "start": "362560",
    "end": "364479"
  },
  {
    "text": "all five helm charts and the deployment",
    "start": "364479",
    "end": "366000"
  },
  {
    "text": "pipelines in 35 minutes so buckle up",
    "start": "366000",
    "end": "369520"
  },
  {
    "text": "so back to how we solve the deployment",
    "start": "369520",
    "end": "371199"
  },
  {
    "text": "and secrets problem and follow",
    "start": "371199",
    "end": "372720"
  },
  {
    "text": "up stream changes first part is a make",
    "start": "372720",
    "end": "375360"
  },
  {
    "text": "file for each chart",
    "start": "375360",
    "end": "376400"
  },
  {
    "text": "it looks a lot like what you do by hand",
    "start": "376400",
    "end": "378000"
  },
  {
    "text": "to install a helm chart except at line",
    "start": "378000",
    "end": "380000"
  },
  {
    "text": "22 we call helm template instead of helm",
    "start": "380000",
    "end": "382639"
  },
  {
    "text": "install which produces manifest on",
    "start": "382639",
    "end": "384400"
  },
  {
    "text": "standard out instead of installing them",
    "start": "384400",
    "end": "385840"
  },
  {
    "text": "in the cluster",
    "start": "385840",
    "end": "386880"
  },
  {
    "text": "and then at line 28 add them all to",
    "start": "386880",
    "end": "388800"
  },
  {
    "text": "generated customization.yaml",
    "start": "388800",
    "end": "391520"
  },
  {
    "text": "one thing is this is home help three",
    "start": "391520",
    "end": "393600"
  },
  {
    "text": "change their exhibit",
    "start": "393600",
    "end": "395759"
  },
  {
    "text": "we use basically the same make file for",
    "start": "395759",
    "end": "397520"
  },
  {
    "text": "all charts although line 30 changes a",
    "start": "397520",
    "end": "399360"
  },
  {
    "text": "bit if they have sub charts",
    "start": "399360",
    "end": "400960"
  },
  {
    "text": "don't stress if you think this is crazy",
    "start": "400960",
    "end": "402639"
  },
  {
    "text": "it's just context for the files we have",
    "start": "402639",
    "end": "404240"
  },
  {
    "text": "moving forward and should be adaptable",
    "start": "404240",
    "end": "405759"
  },
  {
    "text": "to whatever process you have",
    "start": "405759",
    "end": "407440"
  },
  {
    "text": "if you don't have one this is a pretty",
    "start": "407440",
    "end": "408880"
  },
  {
    "text": "complete solution that works for all of",
    "start": "408880",
    "end": "410400"
  },
  {
    "text": "these use cases",
    "start": "410400",
    "end": "412800"
  },
  {
    "text": "so here's the base customization.yaml on",
    "start": "412800",
    "end": "414960"
  },
  {
    "text": "the top left and you can see the",
    "start": "414960",
    "end": "416319"
  },
  {
    "text": "directory structure of the base on the",
    "start": "416319",
    "end": "417759"
  },
  {
    "text": "right",
    "start": "417759",
    "end": "418479"
  },
  {
    "text": "the entire entire chart is in generated",
    "start": "418479",
    "end": "420800"
  },
  {
    "text": "charts",
    "start": "420800",
    "end": "421520"
  },
  {
    "text": "so if you need to fork the chart you can",
    "start": "421520",
    "end": "423280"
  },
  {
    "text": "just commit your fork here",
    "start": "423280",
    "end": "425280"
  },
  {
    "text": "the base level customization here",
    "start": "425280",
    "end": "426880"
  },
  {
    "text": "contains a namespace and a reference to",
    "start": "426880",
    "end": "428720"
  },
  {
    "text": "the generated customization.yaml which",
    "start": "428720",
    "end": "430800"
  },
  {
    "text": "we made with make generate",
    "start": "430800",
    "end": "433280"
  },
  {
    "text": "it could contain any other resources",
    "start": "433280",
    "end": "435039"
  },
  {
    "text": "that aren't in the helm chart",
    "start": "435039",
    "end": "436319"
  },
  {
    "text": "but are all are the same on all clusters",
    "start": "436319",
    "end": "440800"
  },
  {
    "text": "now that we have this space we can",
    "start": "440800",
    "end": "442240"
  },
  {
    "text": "include it and customize overlays for",
    "start": "442240",
    "end": "443840"
  },
  {
    "text": "different clusters and environments",
    "start": "443840",
    "end": "445759"
  },
  {
    "text": "in the overlay we can layer customize",
    "start": "445759",
    "end": "447440"
  },
  {
    "text": "manifests on top of each other and patch",
    "start": "447440",
    "end": "449280"
  },
  {
    "text": "them in a variety",
    "start": "449280",
    "end": "450000"
  },
  {
    "text": "of ways or combine multiple resources",
    "start": "450000",
    "end": "453039"
  },
  {
    "text": "finally calling customize build on the",
    "start": "453039",
    "end": "454720"
  },
  {
    "text": "overlay creates the ammo that you can",
    "start": "454720",
    "end": "456240"
  },
  {
    "text": "pipe",
    "start": "456240",
    "end": "457440"
  },
  {
    "text": "to coupe cuddle apply on the right we've",
    "start": "457440",
    "end": "461039"
  },
  {
    "start": "460000",
    "end": "460000"
  },
  {
    "text": "got the directory structure of our",
    "start": "461039",
    "end": "462400"
  },
  {
    "text": "overlay",
    "start": "462400",
    "end": "462960"
  },
  {
    "text": "this is specific to one cluster so in",
    "start": "462960",
    "end": "465440"
  },
  {
    "text": "the resources section of our overlay",
    "start": "465440",
    "end": "467160"
  },
  {
    "text": "customization.yaml",
    "start": "467160",
    "end": "469120"
  },
  {
    "text": "we've got a reference to the base which",
    "start": "469120",
    "end": "470800"
  },
  {
    "text": "we just looked at and another",
    "start": "470800",
    "end": "472160"
  },
  {
    "text": "customization embedded here which",
    "start": "472160",
    "end": "473680"
  },
  {
    "text": "contains in this case the alert manager",
    "start": "473680",
    "end": "475520"
  },
  {
    "text": "secret which is 99",
    "start": "475520",
    "end": "477039"
  },
  {
    "text": "config for alert routing and one percent",
    "start": "477039",
    "end": "479039"
  },
  {
    "text": "top secret web hooks",
    "start": "479039",
    "end": "480879"
  },
  {
    "text": "this is the only secret to prometheus",
    "start": "480879",
    "end": "482479"
  },
  {
    "text": "operator needs and is also a nice segue",
    "start": "482479",
    "end": "484400"
  },
  {
    "text": "into how we handle secrets",
    "start": "484400",
    "end": "487599"
  },
  {
    "start": "487000",
    "end": "487000"
  },
  {
    "text": "okay so this is the alert manager secret",
    "start": "487759",
    "end": "489599"
  },
  {
    "text": "customization which is referenced by",
    "start": "489599",
    "end": "491199"
  },
  {
    "text": "that overlay notice hashing is off this",
    "start": "491199",
    "end": "493280"
  },
  {
    "text": "particular secret name is hard-coded by",
    "start": "493280",
    "end": "495039"
  },
  {
    "text": "the operator",
    "start": "495039",
    "end": "496000"
  },
  {
    "text": "however the operator watches its changes",
    "start": "496000",
    "end": "498080"
  },
  {
    "text": "so changes are picked up",
    "start": "498080",
    "end": "500960"
  },
  {
    "text": "generally you can reference the secrets",
    "start": "500960",
    "end": "502560"
  },
  {
    "text": "directly from the overlay and leave the",
    "start": "502560",
    "end": "504160"
  },
  {
    "text": "name suffix hash",
    "start": "504160",
    "end": "505199"
  },
  {
    "text": "option on which will make everything",
    "start": "505199",
    "end": "506800"
  },
  {
    "text": "that mounted the secret or config map",
    "start": "506800",
    "end": "508479"
  },
  {
    "text": "restart",
    "start": "508479",
    "end": "509599"
  },
  {
    "text": "customize supports adding secrets in a",
    "start": "509599",
    "end": "511360"
  },
  {
    "text": "number of different ways this particular",
    "start": "511360",
    "end": "513279"
  },
  {
    "text": "one is going to pick up everything in",
    "start": "513279",
    "end": "514640"
  },
  {
    "text": "the file as a complete kubernetes secret",
    "start": "514640",
    "end": "516640"
  },
  {
    "text": "and give it a long and",
    "start": "516640",
    "end": "517760"
  },
  {
    "text": "complicated name here you can see a",
    "start": "517760",
    "end": "521120"
  },
  {
    "text": "portion of the alert manager secret at",
    "start": "521120",
    "end": "522640"
  },
  {
    "text": "references",
    "start": "522640",
    "end": "523440"
  },
  {
    "text": "note that only the sensitive slack api",
    "start": "523440",
    "end": "525600"
  },
  {
    "text": "url on line three is encrypted",
    "start": "525600",
    "end": "528480"
  },
  {
    "text": "supports specifying a particular suffix",
    "start": "528480",
    "end": "530320"
  },
  {
    "text": "to encrypt one cool thing about this is",
    "start": "530320",
    "end": "532640"
  },
  {
    "text": "that although the manifest won't be",
    "start": "532640",
    "end": "533920"
  },
  {
    "text": "deployable",
    "start": "533920",
    "end": "534640"
  },
  {
    "text": "they are valid yaml even when the",
    "start": "534640",
    "end": "536080"
  },
  {
    "text": "secrets are encrypted that means",
    "start": "536080",
    "end": "537839"
  },
  {
    "text": "customize builds them just fine and you",
    "start": "537839",
    "end": "539600"
  },
  {
    "text": "can see the overall changes in pr's if",
    "start": "539600",
    "end": "541440"
  },
  {
    "text": "you commit the manifest for each cluster",
    "start": "541440",
    "end": "543120"
  },
  {
    "text": "without exposing any secrets",
    "start": "543120",
    "end": "546000"
  },
  {
    "text": "sops uses a dots.yaml file similar to",
    "start": "546000",
    "end": "548959"
  },
  {
    "text": "get ignore file to specify how you",
    "start": "548959",
    "end": "550800"
  },
  {
    "text": "encrypt and decrypt secrets",
    "start": "550800",
    "end": "552640"
  },
  {
    "text": "so the top file on line 4 and 6 uses two",
    "start": "552640",
    "end": "555120"
  },
  {
    "text": "different kms keys depending on the",
    "start": "555120",
    "end": "556640"
  },
  {
    "text": "encrypted file location",
    "start": "556640",
    "end": "558160"
  },
  {
    "text": "that's important if you want to control",
    "start": "558160",
    "end": "559600"
  },
  {
    "text": "access to the secrets for different",
    "start": "559600",
    "end": "560959"
  },
  {
    "text": "clusters",
    "start": "560959",
    "end": "562880"
  },
  {
    "text": "finally we have another make file to",
    "start": "562880",
    "end": "564480"
  },
  {
    "text": "decrypt all the secrets during",
    "start": "564480",
    "end": "565760"
  },
  {
    "text": "deployment just before we apply the",
    "start": "565760",
    "end": "567200"
  },
  {
    "text": "manifests to the clusters",
    "start": "567200",
    "end": "568959"
  },
  {
    "text": "this makefile is wrapped up into a",
    "start": "568959",
    "end": "570399"
  },
  {
    "text": "docker file",
    "start": "570399",
    "end": "572399"
  },
  {
    "text": "which i'm showing you here because i",
    "start": "572399",
    "end": "573839"
  },
  {
    "text": "hate hand waving vapor code in",
    "start": "573839",
    "end": "575600"
  },
  {
    "text": "presentations",
    "start": "575600",
    "end": "576720"
  },
  {
    "text": "slides are online and hopefully they'll",
    "start": "576720",
    "end": "578080"
  },
  {
    "text": "be in github",
    "start": "578080",
    "end": "580560"
  },
  {
    "start": "580000",
    "end": "580000"
  },
  {
    "text": "and then finally our deploy pipelines",
    "start": "580880",
    "end": "582560"
  },
  {
    "text": "just call sops decrypt with that docker",
    "start": "582560",
    "end": "584640"
  },
  {
    "text": "image",
    "start": "584640",
    "end": "585200"
  },
  {
    "text": "and then customize build pipe coupe",
    "start": "585200",
    "end": "586959"
  },
  {
    "text": "cuddle apply all of this looks pretty",
    "start": "586959",
    "end": "589040"
  },
  {
    "text": "much the same for all the chart-based",
    "start": "589040",
    "end": "590560"
  },
  {
    "text": "repositories",
    "start": "590560",
    "end": "593279"
  },
  {
    "text": "there are some alternatives for secret",
    "start": "593920",
    "end": "595440"
  },
  {
    "text": "management which has historically been",
    "start": "595440",
    "end": "597120"
  },
  {
    "text": "considered an insecure",
    "start": "597120",
    "end": "598399"
  },
  {
    "text": "part of kubernetes installations etcd is",
    "start": "598399",
    "end": "600800"
  },
  {
    "text": "much tighter than it used to be",
    "start": "600800",
    "end": "602079"
  },
  {
    "text": "supporting tls and encryption at rest by",
    "start": "602079",
    "end": "603920"
  },
  {
    "text": "default and if you're running single",
    "start": "603920",
    "end": "605279"
  },
  {
    "text": "tenant clusters it's up to you to decide",
    "start": "605279",
    "end": "606959"
  },
  {
    "text": "if these alternatives provide any real",
    "start": "606959",
    "end": "608560"
  },
  {
    "text": "benefit",
    "start": "608560",
    "end": "609600"
  },
  {
    "text": "the main leak vector for sups is in",
    "start": "609600",
    "end": "611519"
  },
  {
    "text": "deploy pipeline logs or inadvertent",
    "start": "611519",
    "end": "613600"
  },
  {
    "text": "commits of plain text",
    "start": "613600",
    "end": "615279"
  },
  {
    "text": "fault and sealed secrets both wait until",
    "start": "615279",
    "end": "617200"
  },
  {
    "text": "the secret is in the cluster to decrypt",
    "start": "617200",
    "end": "618959"
  },
  {
    "text": "it",
    "start": "618959",
    "end": "619360"
  },
  {
    "text": "and bolt doesn't put it in ncd at all",
    "start": "619360",
    "end": "621680"
  },
  {
    "text": "that can be pretty hard to inject into",
    "start": "621680",
    "end": "623200"
  },
  {
    "text": "some of the chart deployed stuff but",
    "start": "623200",
    "end": "624720"
  },
  {
    "text": "worst case you can decrypt it in your",
    "start": "624720",
    "end": "626079"
  },
  {
    "text": "pipeline",
    "start": "626079",
    "end": "627200"
  },
  {
    "text": "most cloud providers also have a secret",
    "start": "627200",
    "end": "628880"
  },
  {
    "text": "management solution now",
    "start": "628880",
    "end": "630240"
  },
  {
    "text": "so your mileage may vary okay",
    "start": "630240",
    "end": "633600"
  },
  {
    "start": "633000",
    "end": "633000"
  },
  {
    "text": "so to summarize we've solved all the",
    "start": "633600",
    "end": "635120"
  },
  {
    "text": "painful bits we generate",
    "start": "635120",
    "end": "636800"
  },
  {
    "text": "plain kubernetes manifest for each",
    "start": "636800",
    "end": "638320"
  },
  {
    "text": "target cluster which you're safe to",
    "start": "638320",
    "end": "639680"
  },
  {
    "text": "commit with helm template",
    "start": "639680",
    "end": "640800"
  },
  {
    "text": "subs and customize and we deploy them",
    "start": "640800",
    "end": "643040"
  },
  {
    "text": "with coop cuddle apply or",
    "start": "643040",
    "end": "644480"
  },
  {
    "text": "whatever magic goo you like to fetch up",
    "start": "644480",
    "end": "647519"
  },
  {
    "text": "stream changes we just run our make file",
    "start": "647519",
    "end": "649360"
  },
  {
    "text": "to pick up chart changes",
    "start": "649360",
    "end": "650640"
  },
  {
    "text": "and check the diffs of the manifests",
    "start": "650640",
    "end": "652240"
  },
  {
    "text": "either in git or with coop cuddle div",
    "start": "652240",
    "end": "654320"
  },
  {
    "text": "if you think this is ridiculous that's",
    "start": "654320",
    "end": "655839"
  },
  {
    "text": "okay when i wrote this tilde this helm",
    "start": "655839",
    "end": "657760"
  },
  {
    "text": "was cutting edge",
    "start": "657760",
    "end": "659040"
  },
  {
    "text": "it's just background but i hope it helps",
    "start": "659040",
    "end": "660640"
  },
  {
    "text": "some of you",
    "start": "660640",
    "end": "662720"
  },
  {
    "text": "now on to the fun bits using cloud",
    "start": "662720",
    "end": "664640"
  },
  {
    "start": "663000",
    "end": "663000"
  },
  {
    "text": "native software to do stuff that used to",
    "start": "664640",
    "end": "666480"
  },
  {
    "text": "be hard",
    "start": "666480",
    "end": "667120"
  },
  {
    "text": "expensive or both just by setting some",
    "start": "667120",
    "end": "669360"
  },
  {
    "text": "config options",
    "start": "669360",
    "end": "670560"
  },
  {
    "text": "how exciting is that some of your kids",
    "start": "670560",
    "end": "672399"
  },
  {
    "text": "probably never even bought an ssl",
    "start": "672399",
    "end": "674000"
  },
  {
    "text": "certificate lucky you this bit is going",
    "start": "674000",
    "end": "677600"
  },
  {
    "text": "to be a whirlwind of code",
    "start": "677600",
    "end": "678880"
  },
  {
    "text": "i'm not trying to impart any profound",
    "start": "678880",
    "end": "680480"
  },
  {
    "text": "wisdom to show you useful options and",
    "start": "680480",
    "end": "682320"
  },
  {
    "text": "how to set them",
    "start": "682320",
    "end": "683839"
  },
  {
    "text": "first external dns insert manager then a",
    "start": "683839",
    "end": "686880"
  },
  {
    "text": "basic prometheus operator",
    "start": "686880",
    "end": "688079"
  },
  {
    "text": "deployment and an os2 proxy to put in",
    "start": "688079",
    "end": "689920"
  },
  {
    "text": "front of it then finally the ingross",
    "start": "689920",
    "end": "691680"
  },
  {
    "text": "controller itself",
    "start": "691680",
    "end": "694399"
  },
  {
    "start": "694000",
    "end": "694000"
  },
  {
    "text": "first we need a quick overview of an",
    "start": "694399",
    "end": "696079"
  },
  {
    "text": "example ingress",
    "start": "696079",
    "end": "697680"
  },
  {
    "text": "this is a service we have called",
    "start": "697680",
    "end": "699040"
  },
  {
    "text": "accounts ingress v1 is a bit of a weird",
    "start": "699040",
    "end": "701600"
  },
  {
    "text": "resource",
    "start": "701600",
    "end": "702160"
  },
  {
    "text": "because there are so many",
    "start": "702160",
    "end": "703040"
  },
  {
    "text": "implementations of controllers so a lot",
    "start": "703040",
    "end": "704959"
  },
  {
    "text": "of stuff is happening in the annotations",
    "start": "704959",
    "end": "707040"
  },
  {
    "text": "controllers like ingress engine x",
    "start": "707040",
    "end": "708720"
  },
  {
    "text": "external dns insert manager will use a",
    "start": "708720",
    "end": "710720"
  },
  {
    "text": "combination of the annotations and spec",
    "start": "710720",
    "end": "712720"
  },
  {
    "text": "to decide what",
    "start": "712720",
    "end": "713920"
  },
  {
    "text": "if anything to do when they see an",
    "start": "713920",
    "end": "715600"
  },
  {
    "text": "ingress resource",
    "start": "715600",
    "end": "716959"
  },
  {
    "text": "there are three main sections here at",
    "start": "716959",
    "end": "718800"
  },
  {
    "text": "five the annotations including the",
    "start": "718800",
    "end": "721360"
  },
  {
    "text": "external dns directives",
    "start": "721360",
    "end": "722959"
  },
  {
    "text": "the class to ensure only one controller",
    "start": "722959",
    "end": "724800"
  },
  {
    "text": "tries to serve it forced https",
    "start": "724800",
    "end": "727680"
  },
  {
    "text": "and an example of rate limiting at 13",
    "start": "727680",
    "end": "730639"
  },
  {
    "text": "the routing to the back end inspect out",
    "start": "730639",
    "end": "732399"
  },
  {
    "text": "rules",
    "start": "732399",
    "end": "732880"
  },
  {
    "text": "and at 19 the tls configuration",
    "start": "732880",
    "end": "735040"
  },
  {
    "text": "inspect.tls",
    "start": "735040",
    "end": "736560"
  },
  {
    "text": "you might notice we're missing the",
    "start": "736560",
    "end": "737839"
  },
  {
    "text": "secret in the tls section",
    "start": "737839",
    "end": "739600"
  },
  {
    "text": "that's because we're using a wildcard as",
    "start": "739600",
    "end": "741360"
  },
  {
    "text": "the default cert more on that later but",
    "start": "741360",
    "end": "743440"
  },
  {
    "text": "for now let's jump right into line six",
    "start": "743440",
    "end": "745200"
  },
  {
    "text": "and seven",
    "start": "745200",
    "end": "746480"
  },
  {
    "text": "external dns is the first controller",
    "start": "746480",
    "end": "748160"
  },
  {
    "text": "we'll look at it's going to create some",
    "start": "748160",
    "end": "749839"
  },
  {
    "text": "dns records on cloudflare for us when it",
    "start": "749839",
    "end": "751920"
  },
  {
    "text": "sees this ingress",
    "start": "751920",
    "end": "754320"
  },
  {
    "text": "here you see it working it's created an",
    "start": "754320",
    "end": "756160"
  },
  {
    "text": "a record pointing to our load balancer",
    "start": "756160",
    "end": "758000"
  },
  {
    "text": "and a text that this particular external",
    "start": "758000",
    "end": "759920"
  },
  {
    "text": "dns owns it",
    "start": "759920",
    "end": "762079"
  },
  {
    "text": "if the ingress is deleted it will delete",
    "start": "762079",
    "end": "763920"
  },
  {
    "text": "both another copy of external dns won't",
    "start": "763920",
    "end": "766720"
  },
  {
    "text": "override it unless the txt record",
    "start": "766720",
    "end": "768720"
  },
  {
    "text": "matches what it's looking for",
    "start": "768720",
    "end": "770560"
  },
  {
    "text": "just a little side note that many",
    "start": "770560",
    "end": "771839"
  },
  {
    "text": "providers limit the total number of",
    "start": "771839",
    "end": "773360"
  },
  {
    "text": "records you have",
    "start": "773360",
    "end": "774160"
  },
  {
    "text": "cloudflare pro is about 2500 so don't go",
    "start": "774160",
    "end": "776880"
  },
  {
    "text": "crazy",
    "start": "776880",
    "end": "778800"
  },
  {
    "text": "okay so here are the home values we use",
    "start": "778800",
    "end": "780880"
  },
  {
    "start": "779000",
    "end": "779000"
  },
  {
    "text": "as a base for that external dns",
    "start": "780880",
    "end": "782880"
  },
  {
    "text": "targeting cloudflare firstly on line two",
    "start": "782880",
    "end": "785760"
  },
  {
    "text": "the default is to watch services as well",
    "start": "785760",
    "end": "787839"
  },
  {
    "text": "we limited to ingresses for reasons i",
    "start": "787839",
    "end": "791040"
  },
  {
    "text": "frankly don't remember on lines 11 and",
    "start": "791040",
    "end": "793920"
  },
  {
    "text": "14",
    "start": "793920",
    "end": "795200"
  },
  {
    "text": "we set the provider specific stuff and",
    "start": "795200",
    "end": "796959"
  },
  {
    "text": "we blank out the api key so it's not set",
    "start": "796959",
    "end": "799440"
  },
  {
    "text": "we'll set that later in a customized",
    "start": "799440",
    "end": "800959"
  },
  {
    "text": "patch",
    "start": "800959",
    "end": "802480"
  },
  {
    "text": "17 and 18 vlogging is cheap and you",
    "start": "802480",
    "end": "804880"
  },
  {
    "text": "really really want to know what's going",
    "start": "804880",
    "end": "806480"
  },
  {
    "text": "on if this screws up",
    "start": "806480",
    "end": "807760"
  },
  {
    "text": "so turn it up we use json logging",
    "start": "807760",
    "end": "810000"
  },
  {
    "text": "everywhere we can for easy searching and",
    "start": "810000",
    "end": "811680"
  },
  {
    "text": "metrics making",
    "start": "811680",
    "end": "813519"
  },
  {
    "text": "line 19 we set the policy to sync as",
    "start": "813519",
    "end": "815519"
  },
  {
    "text": "opposed to just upsert",
    "start": "815519",
    "end": "816959"
  },
  {
    "text": "this means we'll actually delete",
    "start": "816959",
    "end": "818240"
  },
  {
    "text": "unneeded records if we own them",
    "start": "818240",
    "end": "819760"
  },
  {
    "text": "according to the text record",
    "start": "819760",
    "end": "821519"
  },
  {
    "text": "we'll set that our owner under patch 2.",
    "start": "821519",
    "end": "823920"
  },
  {
    "text": "21 to 37 we set security stuff and",
    "start": "823920",
    "end": "826399"
  },
  {
    "text": "resources",
    "start": "826399",
    "end": "827600"
  },
  {
    "text": "38 we enable the metrics endpoint and",
    "start": "827600",
    "end": "829760"
  },
  {
    "text": "also deploy a service monitor custom",
    "start": "829760",
    "end": "831519"
  },
  {
    "text": "resource which will be picked up by the",
    "start": "831519",
    "end": "832959"
  },
  {
    "text": "prometheus operator",
    "start": "832959",
    "end": "834320"
  },
  {
    "text": "it's easy i think you'll agree it really",
    "start": "834320",
    "end": "837600"
  },
  {
    "text": "is easy this time no memes",
    "start": "837600",
    "end": "839920"
  },
  {
    "text": "this is an overlay patch for the",
    "start": "839920",
    "end": "841199"
  },
  {
    "text": "external dns deployment which we apply",
    "start": "841199",
    "end": "843199"
  },
  {
    "text": "with customized for a particular cluster",
    "start": "843199",
    "end": "845680"
  },
  {
    "text": "we're just overriding some environs",
    "start": "845680",
    "end": "847680"
  },
  {
    "text": "firstly at 12 we set the authentication",
    "start": "847680",
    "end": "849760"
  },
  {
    "text": "info",
    "start": "849760",
    "end": "850480"
  },
  {
    "text": "for cloudflare this is required but if",
    "start": "850480",
    "end": "852399"
  },
  {
    "text": "you're using cloud providers dns you can",
    "start": "852399",
    "end": "854160"
  },
  {
    "text": "also just let it pick up the default",
    "start": "854160",
    "end": "855600"
  },
  {
    "text": "credentials",
    "start": "855600",
    "end": "856800"
  },
  {
    "text": "for gk you need to grant the node the",
    "start": "856800",
    "end": "858639"
  },
  {
    "text": "scope to do that it's a similar process",
    "start": "858639",
    "end": "860560"
  },
  {
    "text": "for other providers",
    "start": "860560",
    "end": "861920"
  },
  {
    "text": "most dns providers are supported",
    "start": "861920",
    "end": "864560"
  },
  {
    "text": "secondly on line 23 we need to set an",
    "start": "864560",
    "end": "866800"
  },
  {
    "text": "owner id",
    "start": "866800",
    "end": "867519"
  },
  {
    "text": "this is a key which should be unique per",
    "start": "867519",
    "end": "869279"
  },
  {
    "text": "external dns installation and will be",
    "start": "869279",
    "end": "871279"
  },
  {
    "text": "used in that text record",
    "start": "871279",
    "end": "873360"
  },
  {
    "text": "at 25 we set a domain filter which",
    "start": "873360",
    "end": "875519"
  },
  {
    "text": "corresponds to the zones you have creds",
    "start": "875519",
    "end": "877120"
  },
  {
    "text": "for",
    "start": "877120",
    "end": "878079"
  },
  {
    "text": "multiple domains can be provided but and",
    "start": "878079",
    "end": "880320"
  },
  {
    "text": "this is a recurring theme domains are",
    "start": "880320",
    "end": "882079"
  },
  {
    "text": "probably a good system boundary and you",
    "start": "882079",
    "end": "883440"
  },
  {
    "text": "might want to consider your splits",
    "start": "883440",
    "end": "886079"
  },
  {
    "text": "we create the secret reference done",
    "start": "886079",
    "end": "887600"
  },
  {
    "text": "lines 14 and 19 pretty much the same way",
    "start": "887600",
    "end": "890079"
  },
  {
    "text": "we made the alert manager one and for",
    "start": "890079",
    "end": "892000"
  },
  {
    "text": "cloudflare it's used by slurp manager",
    "start": "892000",
    "end": "893920"
  },
  {
    "text": "too",
    "start": "893920",
    "end": "894240"
  },
  {
    "text": "so let's jump over there in our setup",
    "start": "894240",
    "end": "897600"
  },
  {
    "text": "cert manager's main job is to make sure",
    "start": "897600",
    "end": "899360"
  },
  {
    "text": "we have a valid tls certificate for each",
    "start": "899360",
    "end": "901279"
  },
  {
    "text": "ingress",
    "start": "901279",
    "end": "902079"
  },
  {
    "text": "just like the old kube lego you can",
    "start": "902079",
    "end": "903760"
  },
  {
    "text": "configure it to solve an http01 acme",
    "start": "903760",
    "end": "905839"
  },
  {
    "text": "challenge with let's encrypt for each",
    "start": "905839",
    "end": "907199"
  },
  {
    "text": "ingress and set a secret name",
    "start": "907199",
    "end": "909279"
  },
  {
    "text": "however you can just give nginx a wild",
    "start": "909279",
    "end": "911519"
  },
  {
    "text": "card for all your ingresses",
    "start": "911519",
    "end": "913279"
  },
  {
    "text": "even if you have multiple domains to",
    "start": "913279",
    "end": "914800"
  },
  {
    "text": "serve you can have a single certificate",
    "start": "914800",
    "end": "917600"
  },
  {
    "text": "assuming you solve all the challenges",
    "start": "917600",
    "end": "920560"
  },
  {
    "text": "note at line 8",
    "start": "920560",
    "end": "921680"
  },
  {
    "text": "we set the ingress class each controller",
    "start": "921680",
    "end": "923680"
  },
  {
    "text": "can be configured to watch a specific",
    "start": "923680",
    "end": "925360"
  },
  {
    "text": "class so you can run multiple ingress",
    "start": "925360",
    "end": "927360"
  },
  {
    "text": "engine x's or even mix and match with",
    "start": "927360",
    "end": "929120"
  },
  {
    "text": "other ingress controllers",
    "start": "929120",
    "end": "930959"
  },
  {
    "text": "back to that magical certificate",
    "start": "930959",
    "end": "934160"
  },
  {
    "start": "934000",
    "end": "934000"
  },
  {
    "text": "there are two custom resources which you",
    "start": "934160",
    "end": "935759"
  },
  {
    "text": "need to provide for cert manager to get",
    "start": "935759",
    "end": "937279"
  },
  {
    "text": "this working",
    "start": "937279",
    "end": "938399"
  },
  {
    "text": "firstly a cluster issuer on the left",
    "start": "938399",
    "end": "940240"
  },
  {
    "text": "tells it how to solve challenges",
    "start": "940240",
    "end": "942079"
  },
  {
    "text": "for wildcards we need to use dns01 and",
    "start": "942079",
    "end": "944720"
  },
  {
    "text": "we're using cloudflare with the same",
    "start": "944720",
    "end": "946079"
  },
  {
    "text": "credentials as external dns",
    "start": "946079",
    "end": "948240"
  },
  {
    "text": "everything here is required but also",
    "start": "948240",
    "end": "949920"
  },
  {
    "text": "pretty self-explanatory",
    "start": "949920",
    "end": "951680"
  },
  {
    "text": "on the right we have a request for a",
    "start": "951680",
    "end": "953360"
  },
  {
    "text": "specific certificate which will be saved",
    "start": "953360",
    "end": "955360"
  },
  {
    "text": "in the cert manager namespace is a",
    "start": "955360",
    "end": "956959"
  },
  {
    "text": "secret called wildcard tls",
    "start": "956959",
    "end": "959279"
  },
  {
    "text": "because wildcards are only good one",
    "start": "959279",
    "end": "960959"
  },
  {
    "text": "level deep you need to provide any",
    "start": "960959",
    "end": "962720"
  },
  {
    "text": "subdomains you want here",
    "start": "962720",
    "end": "965279"
  },
  {
    "text": "if you change the subdomains later",
    "start": "965279",
    "end": "967120"
  },
  {
    "text": "you'll get a scary expiry email for the",
    "start": "967120",
    "end": "968959"
  },
  {
    "text": "old certificate 90 days later",
    "start": "968959",
    "end": "970720"
  },
  {
    "text": "so set a calendar reminder to ignore",
    "start": "970720",
    "end": "972399"
  },
  {
    "text": "that email obviously search manager",
    "start": "972399",
    "end": "974720"
  },
  {
    "text": "needs to be installed before you can",
    "start": "974720",
    "end": "976160"
  },
  {
    "text": "create these custom resources",
    "start": "976160",
    "end": "977759"
  },
  {
    "text": "so let's dig in for cert manager",
    "start": "977759",
    "end": "981199"
  },
  {
    "start": "981000",
    "end": "981000"
  },
  {
    "text": "jetstack actually releases a manifest",
    "start": "981199",
    "end": "983279"
  },
  {
    "text": "created using helm template themselves",
    "start": "983279",
    "end": "985199"
  },
  {
    "text": "so we just pulled out",
    "start": "985199",
    "end": "986639"
  },
  {
    "text": "i think i had too much coffee when i",
    "start": "986639",
    "end": "988079"
  },
  {
    "text": "upgraded us from 0.10 and i wrote this",
    "start": "988079",
    "end": "990320"
  },
  {
    "text": "monstrosity",
    "start": "990320",
    "end": "991440"
  },
  {
    "text": "sorry just use the helm chart like all",
    "start": "991440",
    "end": "993680"
  },
  {
    "text": "the other things",
    "start": "993680",
    "end": "994480"
  },
  {
    "text": "or download the manifest as it says in",
    "start": "994480",
    "end": "996800"
  },
  {
    "text": "the comments hopefully customize 2167",
    "start": "996800",
    "end": "999440"
  },
  {
    "text": "which is now merged allows you to",
    "start": "999440",
    "end": "1000800"
  },
  {
    "text": "reference this and customize",
    "start": "1000800",
    "end": "1002639"
  },
  {
    "text": "so skip right over this over engineered",
    "start": "1002639",
    "end": "1004880"
  },
  {
    "text": "mess the point is that you need a",
    "start": "1004880",
    "end": "1006320"
  },
  {
    "text": "customized base containing the default",
    "start": "1006320",
    "end": "1008160"
  },
  {
    "text": "cert manager installation manifests",
    "start": "1008160",
    "end": "1010959"
  },
  {
    "text": "with the ability to pull https urls from",
    "start": "1010959",
    "end": "1013360"
  },
  {
    "text": "customize hopefully by the time you're",
    "start": "1013360",
    "end": "1014800"
  },
  {
    "text": "reading this",
    "start": "1014800",
    "end": "1015360"
  },
  {
    "text": "you can ignore the last sled and use a",
    "start": "1015360",
    "end": "1017360"
  },
  {
    "text": "simple base customization",
    "start": "1017360",
    "end": "1019440"
  },
  {
    "text": "anyway once we have the static manifests",
    "start": "1019440",
    "end": "1021360"
  },
  {
    "text": "somehow or another we attach them as",
    "start": "1021360",
    "end": "1023199"
  },
  {
    "text": "usual",
    "start": "1023199",
    "end": "1024720"
  },
  {
    "text": "except there is nothing to patch because",
    "start": "1024720",
    "end": "1026640"
  },
  {
    "text": "james is awesome and it's all just",
    "start": "1026640",
    "end": "1028160"
  },
  {
    "text": "custom resources",
    "start": "1028160",
    "end": "1029839"
  },
  {
    "text": "deploy the base manifests the cluster",
    "start": "1029839",
    "end": "1031839"
  },
  {
    "text": "issuer and the appropriate wildcard cert",
    "start": "1031839",
    "end": "1033918"
  },
  {
    "text": "which are the two crds we just showed",
    "start": "1033919",
    "end": "1036160"
  },
  {
    "text": "easy thanks james",
    "start": "1036160",
    "end": "1039360"
  },
  {
    "start": "1039000",
    "end": "1039000"
  },
  {
    "text": "os2 proxy is pretty straightforward way",
    "start": "1039360",
    "end": "1041760"
  },
  {
    "text": "to secure your",
    "start": "1041760",
    "end": "1042720"
  },
  {
    "text": "monitoring services which supports 13",
    "start": "1042720",
    "end": "1045360"
  },
  {
    "text": "specific auth providers",
    "start": "1045360",
    "end": "1046720"
  },
  {
    "text": "plus all oidc implementations like octa",
    "start": "1046720",
    "end": "1049520"
  },
  {
    "text": "and dex",
    "start": "1049520",
    "end": "1050880"
  },
  {
    "text": "we've set it up to make sure people are",
    "start": "1050880",
    "end": "1052480"
  },
  {
    "text": "in our github org",
    "start": "1052480",
    "end": "1054160"
  },
  {
    "text": "this is the grafana ingress showing how",
    "start": "1054160",
    "end": "1056320"
  },
  {
    "text": "the request is routed to the proxy first",
    "start": "1056320",
    "end": "1059039"
  },
  {
    "text": "note that we use best http host and",
    "start": "1059039",
    "end": "1061200"
  },
  {
    "text": "include two exos headers in the requests",
    "start": "1061200",
    "end": "1063200"
  },
  {
    "text": "we passed to grafana",
    "start": "1063200",
    "end": "1064799"
  },
  {
    "text": "this lets grafana create a user",
    "start": "1064799",
    "end": "1066320"
  },
  {
    "text": "internally if it doesn't already exist",
    "start": "1066320",
    "end": "1069039"
  },
  {
    "text": "the rest of this ingress looks like any",
    "start": "1069039",
    "end": "1071120"
  },
  {
    "text": "other alternative",
    "start": "1071120",
    "end": "1072640"
  },
  {
    "text": "is to use some sort of identity aware",
    "start": "1072640",
    "end": "1074480"
  },
  {
    "text": "proxy in front from a cloud provider or",
    "start": "1074480",
    "end": "1076480"
  },
  {
    "text": "a sas",
    "start": "1076480",
    "end": "1077600"
  },
  {
    "text": "there are plenty of people making money",
    "start": "1077600",
    "end": "1079120"
  },
  {
    "text": "deploying the next three slides",
    "start": "1079120",
    "end": "1082320"
  },
  {
    "text": "this is the helm values file for os2",
    "start": "1082320",
    "end": "1084320"
  },
  {
    "start": "1083000",
    "end": "1083000"
  },
  {
    "text": "proxy line two we ensure it doesn't try",
    "start": "1084320",
    "end": "1086559"
  },
  {
    "text": "to make its own secrets",
    "start": "1086559",
    "end": "1088240"
  },
  {
    "text": "four we're setting up the ingress",
    "start": "1088240",
    "end": "1089679"
  },
  {
    "text": "placeholders to patch later",
    "start": "1089679",
    "end": "1091679"
  },
  {
    "text": "12 we configure some logging and make",
    "start": "1091679",
    "end": "1093520"
  },
  {
    "text": "sure it actually passes the alt headers",
    "start": "1093520",
    "end": "1095280"
  },
  {
    "text": "we need to send through to grafano",
    "start": "1095280",
    "end": "1097440"
  },
  {
    "text": "17 is the provider specific config and",
    "start": "1097440",
    "end": "1100320"
  },
  {
    "text": "then continued on the right on 26 we've",
    "start": "1100320",
    "end": "1102559"
  },
  {
    "text": "got the resources and on 36 an example",
    "start": "1102559",
    "end": "1105039"
  },
  {
    "text": "of pod anti-affinity for two replicas",
    "start": "1105039",
    "end": "1107440"
  },
  {
    "text": "since this is an internal only service",
    "start": "1107440",
    "end": "1109120"
  },
  {
    "text": "for us it's a perfect candidate for",
    "start": "1109120",
    "end": "1110640"
  },
  {
    "text": "preemptable nodes",
    "start": "1110640",
    "end": "1113440"
  },
  {
    "text": "all we need to patch for os2 proxy are",
    "start": "1113760",
    "end": "1116000"
  },
  {
    "start": "1114000",
    "end": "1114000"
  },
  {
    "text": "the domain names",
    "start": "1116000",
    "end": "1116880"
  },
  {
    "text": "but if you wanted to patch replicas or",
    "start": "1116880",
    "end": "1118559"
  },
  {
    "text": "resources for a particular environment",
    "start": "1118559",
    "end": "1120240"
  },
  {
    "text": "you could do that here too",
    "start": "1120240",
    "end": "1122000"
  },
  {
    "text": "again these patches are applied by",
    "start": "1122000",
    "end": "1123520"
  },
  {
    "text": "customized per environment",
    "start": "1123520",
    "end": "1125120"
  },
  {
    "text": "or whatever helm template made",
    "start": "1125120",
    "end": "1128640"
  },
  {
    "text": "finally we have the secret for the os2",
    "start": "1131039",
    "end": "1133039"
  },
  {
    "text": "provider which we add with customize",
    "start": "1133039",
    "end": "1135200"
  },
  {
    "text": "here we're using the end file format for",
    "start": "1135200",
    "end": "1137200"
  },
  {
    "text": "customize to create the secret to access",
    "start": "1137200",
    "end": "1139200"
  },
  {
    "text": "our github oauth app",
    "start": "1139200",
    "end": "1140720"
  },
  {
    "text": "and again disabling the suffix hashing",
    "start": "1140720",
    "end": "1142480"
  },
  {
    "text": "which unfortunately means we'd have to",
    "start": "1142480",
    "end": "1143840"
  },
  {
    "text": "roll these pods if they don't fail",
    "start": "1143840",
    "end": "1145120"
  },
  {
    "text": "probes when we roll a secret",
    "start": "1145120",
    "end": "1147600"
  },
  {
    "text": "in the middle is the plain text and at",
    "start": "1147600",
    "end": "1149200"
  },
  {
    "text": "the bottom is what looks like",
    "start": "1149200",
    "end": "1150880"
  },
  {
    "text": "what it looks like committed that's it",
    "start": "1150880",
    "end": "1153039"
  },
  {
    "text": "for os2 proxy",
    "start": "1153039",
    "end": "1154480"
  },
  {
    "text": "you don't actually need one per cluster",
    "start": "1154480",
    "end": "1156320"
  },
  {
    "text": "you can send requests to an os2 proxy",
    "start": "1156320",
    "end": "1158240"
  },
  {
    "text": "located in a different cluster using its",
    "start": "1158240",
    "end": "1160080"
  },
  {
    "text": "dns name which external dns kindly",
    "start": "1160080",
    "end": "1162080"
  },
  {
    "text": "created for you",
    "start": "1162080",
    "end": "1163200"
  },
  {
    "text": "and the requests will be secured with",
    "start": "1163200",
    "end": "1164559"
  },
  {
    "text": "tls from your wild guard search",
    "start": "1164559",
    "end": "1166640"
  },
  {
    "text": "i'll show you that in the monitoring",
    "start": "1166640",
    "end": "1168000"
  },
  {
    "text": "section you can also catch the responses",
    "start": "1168000",
    "end": "1170400"
  },
  {
    "text": "if you like",
    "start": "1170400",
    "end": "1171039"
  },
  {
    "text": "using ingress annotations but i won't go",
    "start": "1171039",
    "end": "1172960"
  },
  {
    "text": "into that here",
    "start": "1172960",
    "end": "1175200"
  },
  {
    "text": "so on the prometheus operator frankly",
    "start": "1175200",
    "end": "1177760"
  },
  {
    "start": "1176000",
    "end": "1176000"
  },
  {
    "text": "this chart is amazing",
    "start": "1177760",
    "end": "1178880"
  },
  {
    "text": "not only does it deploy the operator it",
    "start": "1178880",
    "end": "1180960"
  },
  {
    "text": "also deploys alerts and dashboards for",
    "start": "1180960",
    "end": "1182880"
  },
  {
    "text": "common coupe components",
    "start": "1182880",
    "end": "1184640"
  },
  {
    "text": "one thing that is completely different",
    "start": "1184640",
    "end": "1186000"
  },
  {
    "text": "from a vanilla prometheus setup is that",
    "start": "1186000",
    "end": "1187919"
  },
  {
    "text": "you scrape services using a service",
    "start": "1187919",
    "end": "1189679"
  },
  {
    "text": "monitor crd",
    "start": "1189679",
    "end": "1190960"
  },
  {
    "text": "rather than an annotation on your",
    "start": "1190960",
    "end": "1192400"
  },
  {
    "text": "services the service monitor uses a",
    "start": "1192400",
    "end": "1194799"
  },
  {
    "text": "label selector",
    "start": "1194799",
    "end": "1195760"
  },
  {
    "text": "to pick services and then the operator",
    "start": "1195760",
    "end": "1197679"
  },
  {
    "text": "updates the promisius config",
    "start": "1197679",
    "end": "1199039"
  },
  {
    "text": "automatically",
    "start": "1199039",
    "end": "1200400"
  },
  {
    "text": "service monitors dashboards and alerting",
    "start": "1200400",
    "end": "1202320"
  },
  {
    "text": "rules can be deployed in any namespace",
    "start": "1202320",
    "end": "1204159"
  },
  {
    "text": "so your application developers can keep",
    "start": "1204159",
    "end": "1205679"
  },
  {
    "text": "them right next to the code",
    "start": "1205679",
    "end": "1207520"
  },
  {
    "text": "this diagram is oversimplified but if",
    "start": "1207520",
    "end": "1209360"
  },
  {
    "text": "you've never seen metric scraping before",
    "start": "1209360",
    "end": "1211120"
  },
  {
    "text": "hopefully it gets the basics across",
    "start": "1211120",
    "end": "1214480"
  },
  {
    "text": "what does prometheus have to do with",
    "start": "1214480",
    "end": "1216320"
  },
  {
    "text": "ingress nginx",
    "start": "1216320",
    "end": "1217840"
  },
  {
    "text": "well with a few lines of config you get",
    "start": "1217840",
    "end": "1220320"
  },
  {
    "text": "two amazing dashboards for the ingress",
    "start": "1220320",
    "end": "1222159"
  },
  {
    "text": "engine x repo",
    "start": "1222159",
    "end": "1223600"
  },
  {
    "text": "you've got nginx performance latency",
    "start": "1223600",
    "end": "1226000"
  },
  {
    "text": "throughput and error rates",
    "start": "1226000",
    "end": "1227360"
  },
  {
    "text": "and certificate validity and they can be",
    "start": "1227360",
    "end": "1230559"
  },
  {
    "text": "broken down by path",
    "start": "1230559",
    "end": "1231679"
  },
  {
    "text": "service and controller class there's a",
    "start": "1231679",
    "end": "1234320"
  },
  {
    "text": "fair bit to set up here and everyone is",
    "start": "1234320",
    "end": "1235919"
  },
  {
    "text": "going to have different use cases",
    "start": "1235919",
    "end": "1237360"
  },
  {
    "text": "i'm just going to cover the highlights",
    "start": "1237360",
    "end": "1238640"
  },
  {
    "text": "of our config and you can find more at",
    "start": "1238640",
    "end": "1240240"
  },
  {
    "text": "the github link in the corner",
    "start": "1240240",
    "end": "1241919"
  },
  {
    "text": "one caveat is this config is for version",
    "start": "1241919",
    "end": "1244080"
  },
  {
    "text": "6 of the chart and it's on 9 now so",
    "start": "1244080",
    "end": "1246159"
  },
  {
    "text": "apologies for that",
    "start": "1246159",
    "end": "1247280"
  },
  {
    "text": "there's no huge changes though i'll just",
    "start": "1247280",
    "end": "1249280"
  },
  {
    "text": "go through the home values",
    "start": "1249280",
    "end": "1250640"
  },
  {
    "text": "patches are applied the same way as",
    "start": "1250640",
    "end": "1252080"
  },
  {
    "text": "other systems",
    "start": "1252080",
    "end": "1254320"
  },
  {
    "start": "1254000",
    "end": "1254000"
  },
  {
    "text": "line one is a workaround to form force",
    "start": "1254320",
    "end": "1256400"
  },
  {
    "text": "helm to generate resources for older",
    "start": "1256400",
    "end": "1258400"
  },
  {
    "text": "cube versions in case the api has",
    "start": "1258400",
    "end": "1260159"
  },
  {
    "text": "changed",
    "start": "1260159",
    "end": "1260799"
  },
  {
    "text": "i'm not sure what we're working around",
    "start": "1260799",
    "end": "1262320"
  },
  {
    "text": "but there you go",
    "start": "1262320",
    "end": "1264000"
  },
  {
    "text": "on 4 we're setting json logging 5 and 6",
    "start": "1264000",
    "end": "1266960"
  },
  {
    "text": "retention time and size slightly lower",
    "start": "1266960",
    "end": "1269039"
  },
  {
    "text": "than our volume size and then resources",
    "start": "1269039",
    "end": "1271919"
  },
  {
    "text": "on 15 we're also running multiple",
    "start": "1271919",
    "end": "1274159"
  },
  {
    "text": "replicas with anti-affinity which is",
    "start": "1274159",
    "end": "1276159"
  },
  {
    "text": "especially easy to configure with this",
    "start": "1276159",
    "end": "1277679"
  },
  {
    "text": "chart",
    "start": "1277679",
    "end": "1278960"
  },
  {
    "text": "19 and 20 probably aren't needed anymore",
    "start": "1278960",
    "end": "1281039"
  },
  {
    "text": "but told the operator to look at crds",
    "start": "1281039",
    "end": "1282799"
  },
  {
    "text": "regardless of their labels",
    "start": "1282799",
    "end": "1284880"
  },
  {
    "text": "22 we give it a physical volume 31 we",
    "start": "1284880",
    "end": "1288320"
  },
  {
    "text": "configure session affinity so your",
    "start": "1288320",
    "end": "1289760"
  },
  {
    "text": "values don't change as you browse if a",
    "start": "1289760",
    "end": "1291440"
  },
  {
    "text": "replica has partial data",
    "start": "1291440",
    "end": "1293280"
  },
  {
    "text": "and finally on 33 we have the ingress",
    "start": "1293280",
    "end": "1295360"
  },
  {
    "text": "placeholder which we patch as shown",
    "start": "1295360",
    "end": "1296880"
  },
  {
    "text": "before",
    "start": "1296880",
    "end": "1299280"
  },
  {
    "text": "alert manager spec is here for",
    "start": "1299280",
    "end": "1300640"
  },
  {
    "text": "completeness this isn't the same file",
    "start": "1300640",
    "end": "1302960"
  },
  {
    "text": "not much going on besides configuring",
    "start": "1302960",
    "end": "1304960"
  },
  {
    "text": "the ingress logging in storage",
    "start": "1304960",
    "end": "1306960"
  },
  {
    "text": "most home charts have storage off by",
    "start": "1306960",
    "end": "1308640"
  },
  {
    "text": "default so they work for demos and ci",
    "start": "1308640",
    "end": "1310640"
  },
  {
    "text": "but you probably want persistence for",
    "start": "1310640",
    "end": "1312159"
  },
  {
    "text": "production",
    "start": "1312159",
    "end": "1313360"
  },
  {
    "text": "note at 54 we again tell it not to",
    "start": "1313360",
    "end": "1315600"
  },
  {
    "text": "create a secret",
    "start": "1315600",
    "end": "1316400"
  },
  {
    "text": "we showed the alert manager secret which",
    "start": "1316400",
    "end": "1318000"
  },
  {
    "text": "contains the routing rules earlier in",
    "start": "1318000",
    "end": "1319520"
  },
  {
    "text": "this presentation",
    "start": "1319520",
    "end": "1321760"
  },
  {
    "text": "grifano is tricky at line 74 we're",
    "start": "1321760",
    "end": "1324720"
  },
  {
    "text": "setting a bunch of m variables for all",
    "start": "1324720",
    "end": "1327200"
  },
  {
    "text": "these override the grafana ini file",
    "start": "1327200",
    "end": "1329120"
  },
  {
    "text": "which is a painted",
    "start": "1329120",
    "end": "1330240"
  },
  {
    "text": "template the end result is that anyone",
    "start": "1330240",
    "end": "1332799"
  },
  {
    "text": "coming in through",
    "start": "1332799",
    "end": "1333679"
  },
  {
    "text": "the ingress has an account and explore",
    "start": "1333679",
    "end": "1335679"
  },
  {
    "text": "access they can save dashboards but",
    "start": "1335679",
    "end": "1337840"
  },
  {
    "text": "these won't be synced",
    "start": "1337840",
    "end": "1339120"
  },
  {
    "text": "instead what we do is coupe port forward",
    "start": "1339120",
    "end": "1341120"
  },
  {
    "text": "to be an admin when we create dashboards",
    "start": "1341120",
    "end": "1343440"
  },
  {
    "text": "then export them to json through the",
    "start": "1343440",
    "end": "1345039"
  },
  {
    "text": "grafana ui and save them in git",
    "start": "1345039",
    "end": "1347280"
  },
  {
    "text": "it's a bit of a pain but it means the",
    "start": "1347280",
    "end": "1348880"
  },
  {
    "text": "dashboards are in git which makes them",
    "start": "1348880",
    "end": "1350559"
  },
  {
    "text": "easy to sync across stages",
    "start": "1350559",
    "end": "1352880"
  },
  {
    "text": "at 114 is the directive to the sidecar",
    "start": "1352880",
    "end": "1355280"
  },
  {
    "text": "to look in all namespaces for dashboards",
    "start": "1355280",
    "end": "1358320"
  },
  {
    "text": "finally on the right we make sure",
    "start": "1358320",
    "end": "1359760"
  },
  {
    "text": "operator logs are also json",
    "start": "1359760",
    "end": "1361679"
  },
  {
    "text": "back to dashboards the cleanest way to",
    "start": "1361679",
    "end": "1364799"
  },
  {
    "start": "1364000",
    "end": "1364000"
  },
  {
    "text": "fetch dashboards with the operator is by",
    "start": "1364799",
    "end": "1366480"
  },
  {
    "text": "url",
    "start": "1366480",
    "end": "1367120"
  },
  {
    "text": "this also keeps it in sync with upstream",
    "start": "1367120",
    "end": "1369280"
  },
  {
    "text": "of course you might want to fork it so",
    "start": "1369280",
    "end": "1370880"
  },
  {
    "text": "that it doesn't break suddenly",
    "start": "1370880",
    "end": "1372480"
  },
  {
    "text": "this is a not very well documented",
    "start": "1372480",
    "end": "1374400"
  },
  {
    "text": "feature of the sidecar but it's awesome",
    "start": "1374400",
    "end": "1376799"
  },
  {
    "text": "you can also embed the dashboard",
    "start": "1376799",
    "end": "1378240"
  },
  {
    "text": "completely as a config map",
    "start": "1378240",
    "end": "1380480"
  },
  {
    "text": "on line 7 you can see the label which",
    "start": "1380480",
    "end": "1382240"
  },
  {
    "text": "the operator uses to decide what config",
    "start": "1382240",
    "end": "1384240"
  },
  {
    "text": "maps to pick up and inject into grafana",
    "start": "1384240",
    "end": "1386799"
  },
  {
    "text": "similarly there's a crt for recording",
    "start": "1386799",
    "end": "1388640"
  },
  {
    "text": "rules and alerts",
    "start": "1388640",
    "end": "1390320"
  },
  {
    "text": "that's enough about monitoring on to",
    "start": "1390320",
    "end": "1393360"
  },
  {
    "text": "nginx",
    "start": "1393360",
    "end": "1394240"
  },
  {
    "start": "1394000",
    "end": "1394000"
  },
  {
    "text": "again we're a bit behind the latest",
    "start": "1394240",
    "end": "1395840"
  },
  {
    "text": "chart so some of the things we've worked",
    "start": "1395840",
    "end": "1397200"
  },
  {
    "text": "around might have been fixed upstream",
    "start": "1397200",
    "end": "1399440"
  },
  {
    "text": "here's the helm values for our grpc",
    "start": "1399440",
    "end": "1401200"
  },
  {
    "text": "handling controller and we'll go through",
    "start": "1401200",
    "end": "1402799"
  },
  {
    "text": "the highlights",
    "start": "1402799",
    "end": "1403840"
  },
  {
    "text": "you can find a fully annotated values",
    "start": "1403840",
    "end": "1405520"
  },
  {
    "text": "file in most of the home charts complete",
    "start": "1405520",
    "end": "1407280"
  },
  {
    "text": "with the default values",
    "start": "1407280",
    "end": "1408799"
  },
  {
    "text": "all of these just overlay on that one",
    "start": "1408799",
    "end": "1411440"
  },
  {
    "text": "line two to four we're configuring this",
    "start": "1411440",
    "end": "1413120"
  },
  {
    "text": "as a deployment rather than daemon set",
    "start": "1413120",
    "end": "1414880"
  },
  {
    "text": "because we'll make load balancers",
    "start": "1414880",
    "end": "1416240"
  },
  {
    "text": "instead of just publishing the node ips",
    "start": "1416240",
    "end": "1418080"
  },
  {
    "text": "to dns like in many tutorials",
    "start": "1418080",
    "end": "1420240"
  },
  {
    "text": "this controller will watch any ingress",
    "start": "1420240",
    "end": "1422000"
  },
  {
    "text": "with the class annotation of grpc",
    "start": "1422000",
    "end": "1424960"
  },
  {
    "text": "on 8 we publish the service which is",
    "start": "1424960",
    "end": "1427039"
  },
  {
    "text": "required for external dns to make a",
    "start": "1427039",
    "end": "1428799"
  },
  {
    "text": "records with the correct",
    "start": "1428799",
    "end": "1429840"
  },
  {
    "text": "ip 11 is the magic juice for wild card",
    "start": "1429840",
    "end": "1432720"
  },
  {
    "text": "certificates",
    "start": "1432720",
    "end": "1433679"
  },
  {
    "text": "this is the only way i'm aware of to",
    "start": "1433679",
    "end": "1435279"
  },
  {
    "text": "refer to a certificate in a different",
    "start": "1435279",
    "end": "1436880"
  },
  {
    "text": "name space",
    "start": "1436880",
    "end": "1437760"
  },
  {
    "text": "with this controller and this sets the",
    "start": "1437760",
    "end": "1439919"
  },
  {
    "text": "tls certificate for the default route",
    "start": "1439919",
    "end": "1441679"
  },
  {
    "text": "and any other ingresses that don't set a",
    "start": "1441679",
    "end": "1443360"
  },
  {
    "text": "secret name in the tls section",
    "start": "1443360",
    "end": "1445600"
  },
  {
    "text": "alternatives are to use something like",
    "start": "1445600",
    "end": "1446960"
  },
  {
    "text": "kubdy to sync the secrets across",
    "start": "1446960",
    "end": "1448640"
  },
  {
    "text": "namespaces",
    "start": "1448640",
    "end": "1449600"
  },
  {
    "text": "or use http01 acme certs if you do use",
    "start": "1449600",
    "end": "1452960"
  },
  {
    "text": "http01 beware of rate limits at let's",
    "start": "1452960",
    "end": "1455200"
  },
  {
    "text": "encrypt",
    "start": "1455200",
    "end": "1456240"
  },
  {
    "text": "of course you can also have every",
    "start": "1456240",
    "end": "1457760"
  },
  {
    "text": "application include their own",
    "start": "1457760",
    "end": "1458880"
  },
  {
    "text": "certificate crd",
    "start": "1458880",
    "end": "1460799"
  },
  {
    "text": "14 we change the status code returned if",
    "start": "1460799",
    "end": "1463200"
  },
  {
    "text": "the client is raid limited by default",
    "start": "1463200",
    "end": "1464960"
  },
  {
    "text": "it's 503",
    "start": "1464960",
    "end": "1466159"
  },
  {
    "text": "nobody likes alerts about pad clients 15",
    "start": "1466159",
    "end": "1469279"
  },
  {
    "text": "to 19 our stackdriver compatible json",
    "start": "1469279",
    "end": "1471520"
  },
  {
    "text": "access logs",
    "start": "1471520",
    "end": "1472559"
  },
  {
    "text": "i've linked the gist so you don't have",
    "start": "1472559",
    "end": "1473919"
  },
  {
    "text": "to dig through everything again this is",
    "start": "1473919",
    "end": "1476000"
  },
  {
    "text": "access logs there's no way i'm aware of",
    "start": "1476000",
    "end": "1478000"
  },
  {
    "text": "to get nginx error logs into json via",
    "start": "1478000",
    "end": "1480240"
  },
  {
    "text": "config",
    "start": "1480240",
    "end": "1481440"
  },
  {
    "text": "22 to 25 are global settings we use for",
    "start": "1481440",
    "end": "1483840"
  },
  {
    "text": "grpc",
    "start": "1483840",
    "end": "1484960"
  },
  {
    "text": "in particular the http 2 max request",
    "start": "1484960",
    "end": "1487279"
  },
  {
    "text": "setting is increased from 1000 which is",
    "start": "1487279",
    "end": "1489200"
  },
  {
    "text": "important for long lived",
    "start": "1489200",
    "end": "1490640"
  },
  {
    "text": "connections but may impact memory usage",
    "start": "1490640",
    "end": "1493679"
  },
  {
    "text": "26 uses the x forwarded four header for",
    "start": "1493679",
    "end": "1495919"
  },
  {
    "text": "rate limit and caching buckets",
    "start": "1495919",
    "end": "1497760"
  },
  {
    "text": "which is really important for http",
    "start": "1497760",
    "end": "1499600"
  },
  {
    "text": "traffic proxy through cloudflare",
    "start": "1499600",
    "end": "1501360"
  },
  {
    "text": "otherwise you'll write limited edge",
    "start": "1501360",
    "end": "1503279"
  },
  {
    "text": "see i saved you an incident",
    "start": "1503279",
    "end": "1506640"
  },
  {
    "text": "same file next on 27 we set up",
    "start": "1507279",
    "end": "1509600"
  },
  {
    "text": "anti-affinity",
    "start": "1509600",
    "end": "1510559"
  },
  {
    "text": "then on 44 memory and cpu and from 52",
    "start": "1510559",
    "end": "1514000"
  },
  {
    "text": "a horizontal pod autoscaler from three",
    "start": "1514000",
    "end": "1515919"
  },
  {
    "text": "to six replicas",
    "start": "1515919",
    "end": "1517520"
  },
  {
    "text": "moving right along finally at 64",
    "start": "1517520",
    "end": "1521200"
  },
  {
    "text": "we make sure this is exposed on a load",
    "start": "1521200",
    "end": "1522880"
  },
  {
    "text": "balancer and the client's ip is",
    "start": "1522880",
    "end": "1524400"
  },
  {
    "text": "preserved",
    "start": "1524400",
    "end": "1525600"
  },
  {
    "text": "and at 68 we enable metrics and deploy",
    "start": "1525600",
    "end": "1528080"
  },
  {
    "text": "the included service monitor for the",
    "start": "1528080",
    "end": "1529440"
  },
  {
    "text": "prometheus operator to pick up",
    "start": "1529440",
    "end": "1532879"
  },
  {
    "text": "we don't have any patches for nginx we",
    "start": "1532960",
    "end": "1534799"
  },
  {
    "start": "1534000",
    "end": "1534000"
  },
  {
    "text": "just run the production setup on all",
    "start": "1534799",
    "end": "1536240"
  },
  {
    "text": "clusters and rely on the autoscaler",
    "start": "1536240",
    "end": "1538240"
  },
  {
    "text": "however you could conceivably want to",
    "start": "1538240",
    "end": "1539840"
  },
  {
    "text": "patch the resource usage",
    "start": "1539840",
    "end": "1541360"
  },
  {
    "text": "or even change some controller global",
    "start": "1541360",
    "end": "1543039"
  },
  {
    "text": "settings in the config map",
    "start": "1543039",
    "end": "1544799"
  },
  {
    "text": "most configuration options can be set in",
    "start": "1544799",
    "end": "1547200"
  },
  {
    "text": "each individual ingress as an annotation",
    "start": "1547200",
    "end": "1549679"
  },
  {
    "text": "and the docs are pretty good about this",
    "start": "1549679",
    "end": "1551600"
  },
  {
    "text": "worst case you can even embed raw nginx",
    "start": "1551600",
    "end": "1553840"
  },
  {
    "text": "config as an annotation",
    "start": "1553840",
    "end": "1556799"
  },
  {
    "text": "i promise him don't know",
    "start": "1556799",
    "end": "1561039"
  },
  {
    "text": "now i promised some grpc specific stuff",
    "start": "1563360",
    "end": "1566320"
  },
  {
    "text": "this is one tweak which will return",
    "start": "1566320",
    "end": "1571039"
  },
  {
    "text": "okay sorry about that i had some",
    "start": "1571039",
    "end": "1572720"
  },
  {
    "text": "technical issues anyway",
    "start": "1572720",
    "end": "1574480"
  },
  {
    "text": "um yeah this is one tweak which will",
    "start": "1574480",
    "end": "1576799"
  },
  {
    "text": "return grpc native error codes for",
    "start": "1576799",
    "end": "1578960"
  },
  {
    "text": "grpc's",
    "start": "1578960",
    "end": "1580240"
  },
  {
    "text": "ingresses this is just a section of the",
    "start": "1580240",
    "end": "1582240"
  },
  {
    "text": "config which you could embed in your",
    "start": "1582240",
    "end": "1583760"
  },
  {
    "text": "controller by putting it in the",
    "start": "1583760",
    "end": "1584960"
  },
  {
    "text": "controller config map",
    "start": "1584960",
    "end": "1586640"
  },
  {
    "text": "i highly advise keeping your http 2",
    "start": "1586640",
    "end": "1588480"
  },
  {
    "text": "traffic separate from the http one",
    "start": "1588480",
    "end": "1590159"
  },
  {
    "text": "traffic by deploying a second ingress",
    "start": "1590159",
    "end": "1591760"
  },
  {
    "text": "controller",
    "start": "1591760",
    "end": "1592880"
  },
  {
    "text": "that also means an extra 30 bucks in",
    "start": "1592880",
    "end": "1594559"
  },
  {
    "text": "load balancers but it's worth it in",
    "start": "1594559",
    "end": "1596159"
  },
  {
    "text": "production i think",
    "start": "1596159",
    "end": "1597760"
  },
  {
    "text": "the downside of replacing the error",
    "start": "1597760",
    "end": "1599120"
  },
  {
    "text": "codes like this is that the monitoring",
    "start": "1599120",
    "end": "1600640"
  },
  {
    "text": "is going to break",
    "start": "1600640",
    "end": "1601520"
  },
  {
    "text": "because the http 2 spec is the http 1",
    "start": "1601520",
    "end": "1604240"
  },
  {
    "text": "status code is 200",
    "start": "1604240",
    "end": "1605919"
  },
  {
    "text": "actually i think the 204 here is",
    "start": "1605919",
    "end": "1607520"
  },
  {
    "text": "non-compliant anyway it's an option",
    "start": "1607520",
    "end": "1611200"
  },
  {
    "text": "some of you might be wondering why we",
    "start": "1611200",
    "end": "1612720"
  },
  {
    "text": "use nginx to proxy grpc at all",
    "start": "1612720",
    "end": "1615360"
  },
  {
    "text": "well it's mature fast and fairly stable",
    "start": "1615360",
    "end": "1618159"
  },
  {
    "text": "you're",
    "start": "1618159",
    "end": "1619039"
  },
  {
    "text": "unlikely to see a problem that you can't",
    "start": "1619039",
    "end": "1620640"
  },
  {
    "text": "search for and most operations engineers",
    "start": "1620640",
    "end": "1622880"
  },
  {
    "text": "have used it before",
    "start": "1622880",
    "end": "1624320"
  },
  {
    "text": "there's lots of samples and things like",
    "start": "1624320",
    "end": "1625919"
  },
  {
    "text": "adding an alt proxy or rate limiting are",
    "start": "1625919",
    "end": "1627840"
  },
  {
    "text": "well documented",
    "start": "1627840",
    "end": "1629440"
  },
  {
    "text": "for us making this choice in mid 2019 it",
    "start": "1629440",
    "end": "1631760"
  },
  {
    "text": "was a choice of running nginx for hp",
    "start": "1631760",
    "end": "1634000"
  },
  {
    "text": "and a second less mature controller or",
    "start": "1634000",
    "end": "1636640"
  },
  {
    "text": "getting",
    "start": "1636640",
    "end": "1637200"
  },
  {
    "text": "nginx to play nicely with grpc what we",
    "start": "1637200",
    "end": "1640240"
  },
  {
    "text": "have works pretty well for our use case",
    "start": "1640240",
    "end": "1642240"
  },
  {
    "text": "when we first started we tried to",
    "start": "1642240",
    "end": "1643919"
  },
  {
    "text": "integrate linker d2 to provide",
    "start": "1643919",
    "end": "1645679"
  },
  {
    "text": "the request level load balancing and",
    "start": "1645679",
    "end": "1647679"
  },
  {
    "text": "even more monitoring",
    "start": "1647679",
    "end": "1649919"
  },
  {
    "text": "but we ran into some nasty bugs as far",
    "start": "1649919",
    "end": "1652240"
  },
  {
    "text": "as i know those have all been fixed over",
    "start": "1652240",
    "end": "1654000"
  },
  {
    "text": "the last year so our next initiative on",
    "start": "1654000",
    "end": "1655760"
  },
  {
    "text": "this front is to reevaluate that",
    "start": "1655760",
    "end": "1657600"
  },
  {
    "text": "and also survey the state of the other",
    "start": "1657600",
    "end": "1659360"
  },
  {
    "text": "ingerson controllers",
    "start": "1659360",
    "end": "1661919"
  },
  {
    "text": "okay that's it for this presentation",
    "start": "1661919",
    "end": "1663840"
  },
  {
    "start": "1663000",
    "end": "1663000"
  },
  {
    "text": "quick recap we looked at how you can",
    "start": "1663840",
    "end": "1665679"
  },
  {
    "text": "deploy all of this to multiple clusters",
    "start": "1665679",
    "end": "1667440"
  },
  {
    "text": "with different values for each cluster",
    "start": "1667440",
    "end": "1669200"
  },
  {
    "text": "using a combination of helm and",
    "start": "1669200",
    "end": "1670480"
  },
  {
    "text": "customize and secure your secrets with",
    "start": "1670480",
    "end": "1672640"
  },
  {
    "text": "sops",
    "start": "1672640",
    "end": "1673679"
  },
  {
    "text": "we've now got automatic dns records",
    "start": "1673679",
    "end": "1675520"
  },
  {
    "text": "being created by external dns based on",
    "start": "1675520",
    "end": "1677440"
  },
  {
    "text": "ingress annotations",
    "start": "1677440",
    "end": "1679120"
  },
  {
    "text": "wildcard certificates from cert manager",
    "start": "1679120",
    "end": "1680960"
  },
  {
    "text": "accessible from all those namespaces",
    "start": "1680960",
    "end": "1683279"
  },
  {
    "text": "prometheus operators scraping our",
    "start": "1683279",
    "end": "1684880"
  },
  {
    "text": "ingress controllers and showing us",
    "start": "1684880",
    "end": "1686399"
  },
  {
    "text": "metrics in grafana for each individual",
    "start": "1686399",
    "end": "1688399"
  },
  {
    "text": "ingress",
    "start": "1688399",
    "end": "1689360"
  },
  {
    "text": "authentication in front of those metrics",
    "start": "1689360",
    "end": "1691039"
  },
  {
    "text": "with oauth and finally nginx with a",
    "start": "1691039",
    "end": "1693440"
  },
  {
    "text": "basic grpc setup and rate limits",
    "start": "1693440",
    "end": "1696000"
  },
  {
    "text": "i hope you've enjoyed the presentation",
    "start": "1696000",
    "end": "1697600"
  },
  {
    "text": "again slide should be on scad and github",
    "start": "1697600",
    "end": "1699840"
  },
  {
    "text": "along with some sample code please join",
    "start": "1699840",
    "end": "1701919"
  },
  {
    "text": "me in the chat for any questions",
    "start": "1701919",
    "end": "1703360"
  },
  {
    "text": "join me in the chat for any questions",
    "start": "1703360",
    "end": "1707840"
  }
]