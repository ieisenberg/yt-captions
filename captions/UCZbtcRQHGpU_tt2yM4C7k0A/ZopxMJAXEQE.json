[
  {
    "text": "[Music]",
    "start": "0",
    "end": "3050"
  },
  {
    "text": "i'll start with the go",
    "start": "6000",
    "end": "7040"
  },
  {
    "text": "related one because the other one was",
    "start": "7040",
    "end": "8880"
  },
  {
    "text": "not specifically co-related",
    "start": "8880",
    "end": "11280"
  },
  {
    "text": "and a lot of what we were excited to do",
    "start": "11280",
    "end": "15360"
  },
  {
    "text": "with the github cli so the next",
    "start": "15360",
    "end": "18080"
  },
  {
    "text": "iteration",
    "start": "18080",
    "end": "18880"
  },
  {
    "text": "after hub was we wanted to really try",
    "start": "18880",
    "end": "21840"
  },
  {
    "text": "out",
    "start": "21840",
    "end": "22720"
  },
  {
    "text": "how it feels using the graphql version",
    "start": "22720",
    "end": "25119"
  },
  {
    "text": "of the github api",
    "start": "25119",
    "end": "26240"
  },
  {
    "text": "which shipped in between so of course",
    "start": "26240",
    "end": "28000"
  },
  {
    "text": "hub originally has used",
    "start": "28000",
    "end": "30000"
  },
  {
    "text": "rest version and there was not enough",
    "start": "30000",
    "end": "31519"
  },
  {
    "text": "added value into migrating completely to",
    "start": "31519",
    "end": "33600"
  },
  {
    "text": "another",
    "start": "33600",
    "end": "34719"
  },
  {
    "text": "version of the the graphql api so we",
    "start": "34719",
    "end": "37280"
  },
  {
    "text": "only did that",
    "start": "37280",
    "end": "38239"
  },
  {
    "text": "experiment with github cli when we",
    "start": "38239",
    "end": "40640"
  },
  {
    "text": "eventually start working on it thinking",
    "start": "40640",
    "end": "42320"
  },
  {
    "text": "that there would be this massive",
    "start": "42320",
    "end": "44160"
  },
  {
    "text": "win over in this new api paradigm which",
    "start": "44160",
    "end": "47520"
  },
  {
    "text": "is",
    "start": "47520",
    "end": "47840"
  },
  {
    "text": "supposedly really more powerful and i",
    "start": "47840",
    "end": "50320"
  },
  {
    "text": "found",
    "start": "50320",
    "end": "50879"
  },
  {
    "text": "that the exact features of the go",
    "start": "50879",
    "end": "53440"
  },
  {
    "text": "language",
    "start": "53440",
    "end": "54480"
  },
  {
    "text": "static typing and compiling that is not",
    "start": "54480",
    "end": "57440"
  },
  {
    "text": "actually lend itself well to",
    "start": "57440",
    "end": "59840"
  },
  {
    "text": "being a good graphql client",
    "start": "59840",
    "end": "62879"
  },
  {
    "text": "and so while i'm talking about this just",
    "start": "62879",
    "end": "65198"
  },
  {
    "text": "keep in mind i'm mostly just talking",
    "start": "65199",
    "end": "66560"
  },
  {
    "text": "about an experience of writing",
    "start": "66560",
    "end": "68000"
  },
  {
    "text": "in go a graphql client so something that",
    "start": "68000",
    "end": "70240"
  },
  {
    "text": "makes and parse graphql requests",
    "start": "70240",
    "end": "72320"
  },
  {
    "text": "i have zero experience of making a",
    "start": "72320",
    "end": "73920"
  },
  {
    "text": "graphical server in go",
    "start": "73920",
    "end": "75759"
  },
  {
    "text": "which some of my colleagues other",
    "start": "75759",
    "end": "77600"
  },
  {
    "text": "colleagues in github have experience",
    "start": "77600",
    "end": "78880"
  },
  {
    "text": "with but i have not first had experience",
    "start": "78880",
    "end": "81280"
  },
  {
    "text": "so this is not about making a server",
    "start": "81280",
    "end": "82880"
  },
  {
    "text": "which i feel that there's",
    "start": "82880",
    "end": "84720"
  },
  {
    "text": "more solid tooling but when we look at",
    "start": "84720",
    "end": "87280"
  },
  {
    "text": "the offering of the different",
    "start": "87280",
    "end": "89200"
  },
  {
    "text": "graphql clients that are written in go",
    "start": "89200",
    "end": "90880"
  },
  {
    "text": "right now and mostly used as a defacto",
    "start": "90880",
    "end": "93200"
  },
  {
    "text": "standard when we look at the",
    "start": "93200",
    "end": "94560"
  },
  {
    "text": "largest smart prolific projects that",
    "start": "94560",
    "end": "96720"
  },
  {
    "text": "open source right now",
    "start": "96720",
    "end": "98240"
  },
  {
    "text": "if we look at how they make requests not",
    "start": "98240",
    "end": "100960"
  },
  {
    "text": "just to",
    "start": "100960",
    "end": "102079"
  },
  {
    "text": "github's graphql api but to any other",
    "start": "102079",
    "end": "105360"
  },
  {
    "text": "i feel that all of those libraries right",
    "start": "105360",
    "end": "107759"
  },
  {
    "text": "now i'm missing the mark",
    "start": "107759",
    "end": "109439"
  },
  {
    "text": "on what makes graphql really stand out",
    "start": "109439",
    "end": "113360"
  },
  {
    "text": "graphql is not a query language that",
    "start": "113360",
    "end": "115759"
  },
  {
    "text": "wanted to be used by having a",
    "start": "115759",
    "end": "117200"
  },
  {
    "text": "pre-generated query which is always the",
    "start": "117200",
    "end": "119600"
  },
  {
    "text": "same per",
    "start": "119600",
    "end": "120320"
  },
  {
    "text": "compiled version of an app and then",
    "start": "120320",
    "end": "123280"
  },
  {
    "text": "having different requests come in",
    "start": "123280",
    "end": "124799"
  },
  {
    "text": "separately because they were all",
    "start": "124799",
    "end": "126320"
  },
  {
    "text": "statically generated from maybe a schema",
    "start": "126320",
    "end": "128479"
  },
  {
    "text": "or something like that",
    "start": "128479",
    "end": "129759"
  },
  {
    "text": "graphql wanted to first of all allow",
    "start": "129759",
    "end": "132879"
  },
  {
    "text": "people to",
    "start": "132879",
    "end": "133599"
  },
  {
    "text": "bundle several queries at once or even",
    "start": "133599",
    "end": "136000"
  },
  {
    "text": "several mutations we can",
    "start": "136000",
    "end": "137760"
  },
  {
    "text": "i don't think it will allow bundling a",
    "start": "137760",
    "end": "139120"
  },
  {
    "text": "query and a mutation acting on the",
    "start": "139120",
    "end": "140879"
  },
  {
    "text": "results of this query i think that's",
    "start": "140879",
    "end": "142319"
  },
  {
    "text": "decidedly against its",
    "start": "142319",
    "end": "143760"
  },
  {
    "text": "design but it definitely can execute an",
    "start": "143760",
    "end": "147920"
  },
  {
    "text": "arbitrary number of queries at the same",
    "start": "147920",
    "end": "149360"
  },
  {
    "text": "time and also an arbitrary",
    "start": "149360",
    "end": "151200"
  },
  {
    "text": "a number of mutations so if i wanted to",
    "start": "151200",
    "end": "153440"
  },
  {
    "text": "change labels on 100",
    "start": "153440",
    "end": "155200"
  },
  {
    "text": "github issues in the same request",
    "start": "155200",
    "end": "157120"
  },
  {
    "text": "theoretically i can do that right",
    "start": "157120",
    "end": "159760"
  },
  {
    "text": "and i was really excitedly searching for",
    "start": "159760",
    "end": "162959"
  },
  {
    "text": "go tools that allow you to kind of batch",
    "start": "162959",
    "end": "166000"
  },
  {
    "text": "up a bunch of queries and then they all",
    "start": "166000",
    "end": "167680"
  },
  {
    "text": "execute kind of transparently over",
    "start": "167680",
    "end": "169680"
  },
  {
    "text": "graphql",
    "start": "169680",
    "end": "170640"
  },
  {
    "text": "and wasn't the thing that i was able to",
    "start": "170640",
    "end": "173520"
  },
  {
    "text": "[Music]",
    "start": "173520",
    "end": "176550"
  },
  {
    "text": "find",
    "start": "176760",
    "end": "179760"
  }
]