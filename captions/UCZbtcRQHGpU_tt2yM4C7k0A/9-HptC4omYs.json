[
  {
    "text": "there could be a world in the future where the database is everywhere and therefore the logic for the code that",
    "start": "40",
    "end": "7160"
  },
  {
    "text": "interacts with that database can also be everywhere but that's not where we're today uh we're not nowhere even close to",
    "start": "7160",
    "end": "13280"
  },
  {
    "text": "that today what's more realistic is that you have a certain database origin and",
    "start": "13280",
    "end": "18840"
  },
  {
    "text": "therefore you have a collocated API origin as well what we're starting to see is that you can move certain",
    "start": "18840",
    "end": "24960"
  },
  {
    "text": "functions to other locations or even to all the edges but that's more of a in",
    "start": "24960",
    "end": "30199"
  },
  {
    "text": "reality I would be surprised if it even happened in the next two to three years at scale I think what's more likely to",
    "start": "30199",
    "end": "36559"
  },
  {
    "text": "happen is again you're going to create an API in in your region that makes the most sense way or another everyone has",
    "start": "36559",
    "end": "42960"
  },
  {
    "text": "picked Virginia um and that's going to be your start and you're going to create an API around that but then what you're",
    "start": "42960",
    "end": "49199"
  },
  {
    "text": "going to distribute everywhere is your fronts and your settings generated pages and so on and by the way I love that too",
    "start": "49199",
    "end": "56079"
  },
  {
    "text": "because like I said I think the best outcome for consumer is that when they go to the content there's no API call at",
    "start": "56079",
    "end": "63600"
  },
  {
    "text": "all there's no server nothing just hey give me the copy of the content that I wanted right um so I'm pretty happy with",
    "start": "63600",
    "end": "69640"
  },
  {
    "text": "that world until a meteor hits Virginia and then we're all correct",
    "start": "69640",
    "end": "75080"
  },
  {
    "text": "correct BWI for change log is provided by fastly learn more at fastly.com we",
    "start": "75080",
    "end": "81280"
  },
  {
    "text": "move fast and fix things here at change log because of rollbar check them out at rar.com and we're hosted on Leno Cloud",
    "start": "81280",
    "end": "87920"
  },
  {
    "text": "servers at the lin.com / change log this episode is brought to you by",
    "start": "87920",
    "end": "94280"
  },
  {
    "text": "robar move fast and fix things resolve errs of minutes and deploy with confidence head to roar.com changelog",
    "start": "94280",
    "end": "102200"
  },
  {
    "text": "requested demo get started today it's loved by developers trusted by Enterprises and most of all we use it",
    "start": "102200",
    "end": "108880"
  },
  {
    "text": "here at change log move fast and fix things with rollar once again rar.com",
    "start": "108880",
    "end": "116030"
  },
  {
    "text": "[Music] changelog",
    "start": "116030",
    "end": "121840"
  },
  {
    "text": "[Music] welcome back everyone this is jamstack",
    "start": "124190",
    "end": "129840"
  },
  {
    "text": "party welcome to JS party your weekly celebration of JavaScript and the web",
    "start": "129840",
    "end": "135120"
  },
  {
    "text": "tune in next week for the return of our game show format we're joined by Scott tulinsky from syntax I host it Emma and",
    "start": "135120",
    "end": "142599"
  },
  {
    "text": "Nick compete and I'll tell you things get a little crazy one of us even manages to score negative infinity",
    "start": "142599",
    "end": "148519"
  },
  {
    "text": "points but that's next week here's ker marou take it away [Music]",
    "start": "148519",
    "end": "155639"
  },
  {
    "text": "Diva hello hello to a new episode of JS party today on the panel we have with us",
    "start": "162959",
    "end": "170360"
  },
  {
    "text": "Jared Santo hello Divia how are you good I'm really good and I'm tuning in from",
    "start": "170360",
    "end": "177040"
  },
  {
    "text": "Chicago and today for our guest we have Sho R from zit how's it going thanks for",
    "start": "177040",
    "end": "184760"
  },
  {
    "text": "having me very excited happy to have you yeah we're we're super psyched to speak to you because there's lots of things",
    "start": "184760",
    "end": "190760"
  },
  {
    "text": "that you're working on at zit and with next and we'd love to dig into a lot of that um I guess one of the things that",
    "start": "190760",
    "end": "196720"
  },
  {
    "text": "we can start with is just like what's new and what are you working on currently at zit or with next yeah",
    "start": "196720",
    "end": "203799"
  },
  {
    "text": "taming is great because we've been making a lot of announcements over the past few weeks primarily around",
    "start": "203799",
    "end": "210360"
  },
  {
    "text": "new capabilities in xjs one of them that I am personally really excited about and we've been",
    "start": "210360",
    "end": "216360"
  },
  {
    "text": "working on for a while is uh the Next Generation somewhat Pine intended static",
    "start": "216360",
    "end": "223280"
  },
  {
    "text": "side generation uh support so nextjs had um kind of a middle ground support for",
    "start": "223280",
    "end": "230280"
  },
  {
    "text": "producing static Pages uh in the past but it was kind of an All or Nothing system you could run next build and then",
    "start": "230280",
    "end": "236519"
  },
  {
    "text": "next export and then you would uh export a simplified version of your website",
    "start": "236519",
    "end": "242079"
  },
  {
    "text": "that was fully static and it required quite a bit of config and it had some tradeoffs and what's been super",
    "start": "242079",
    "end": "248720"
  },
  {
    "text": "interesting about nextjs is that it's become a hybrid framework where a lot of the flexibility that comes from using it",
    "start": "248720",
    "end": "255599"
  },
  {
    "text": "is because you can make decisions on a page per page basis so with the new uh",
    "start": "255599",
    "end": "261320"
  },
  {
    "text": "static side generation support uh we basically are giving people two methods one called get static props uh which is",
    "start": "261320",
    "end": "267639"
  },
  {
    "text": "an alternative to get initial props which which will be executed at build time and therefore producing static HTML",
    "start": "267639",
    "end": "273800"
  },
  {
    "text": "and then get static paths uh which kind of goes hand inand with a feature that we added a while back which was Dynamic",
    "start": "273800",
    "end": "280600"
  },
  {
    "text": "path segments so for those of you that are familiar with nextjs we've always had file system based routing where",
    "start": "280600",
    "end": "287199"
  },
  {
    "text": "inside the Pages directory you define your JS files and then they become URLs basically they become paths uh but then",
    "start": "287199",
    "end": "294000"
  },
  {
    "text": "we introduce Dynamic ones so you can use bracket notation to say for example",
    "start": "294000",
    "end": "299720"
  },
  {
    "text": "Pages SL blog SL bracket slug bracket.",
    "start": "299720",
    "end": "304800"
  },
  {
    "text": "JS and that's a dynamic one so in conjunction with get static props you get a new method called get static paths",
    "start": "304800",
    "end": "312479"
  },
  {
    "text": "that allows you to basically say to nextjs well there is a 100 block posts",
    "start": "312479",
    "end": "318319"
  },
  {
    "text": "that I need to generate or there's a 100 e-commerce items that I need to generate",
    "start": "318319",
    "end": "323360"
  },
  {
    "text": "and you're basically giving nextjs in this case the slug and then nextjs basically does all the rest and produces",
    "start": "323360",
    "end": "329800"
  },
  {
    "text": "a sight of the size that you want with regards to static size generation cool",
    "start": "329800",
    "end": "335039"
  },
  {
    "text": "so that would reduce like the build time overall specifically if you were like wanting to build pages on the Fly is",
    "start": "335039",
    "end": "340919"
  },
  {
    "text": "that kind of what so it's you can have the benefit of pre-rendering while also Ching so uh more specifically um you are",
    "start": "340919",
    "end": "349280"
  },
  {
    "text": "now able to say hey this pages are definitely H static they'll never go",
    "start": "349280",
    "end": "356800"
  },
  {
    "text": "through a server at all they'll never even use serverless functions they'll be purely static and I want to do this work",
    "start": "356800",
    "end": "364720"
  },
  {
    "text": "ahead of time so when I think about Statics side generation I think there's lots and lots of benefits but for the",
    "start": "364720",
    "end": "371280"
  },
  {
    "text": "developer one that's key is you kind of drisk your project at build time right",
    "start": "371280",
    "end": "377440"
  },
  {
    "text": "like if you're producing a 100 block posts and one of them you made a the",
    "start": "377440",
    "end": "382720"
  },
  {
    "text": "wrong assumption for example about the shape of the data that was being returned and the HTML fails to be",
    "start": "382720",
    "end": "389199"
  },
  {
    "text": "produced because JS throws for example then your entire project gets",
    "start": "389199",
    "end": "395000"
  },
  {
    "text": "blocked at the build Pipeline and it doesn't go out right so like there's this idea that by using static Z",
    "start": "395000",
    "end": "401840"
  },
  {
    "text": "generation you drisk so you drisk from errors which in sort of my mental model",
    "start": "401840",
    "end": "408560"
  },
  {
    "text": "that falls under availability right whether you're online or offline uh further in the availability",
    "start": "408560",
    "end": "415080"
  },
  {
    "text": "Spectrum the nice thing about uh setic side generation is that if you've built the them then they can't possibly go",
    "start": "415080",
    "end": "422720"
  },
  {
    "text": "offline unless things go like seriously wrong with the Internet but like",
    "start": "422720",
    "end": "427960"
  },
  {
    "text": "generally you know your database that generated those pages can go offline your blog uh CMS backend can go offline",
    "start": "427960",
    "end": "436319"
  },
  {
    "text": "whatever but your pages are still alive and then there's certainly a performance benefit uh which a helpful mental model",
    "start": "436319",
    "end": "443240"
  },
  {
    "text": "that I've been using recently is what you're doing at build time would have",
    "start": "443240",
    "end": "448800"
  },
  {
    "text": "happened eventually at runtime and it would have hit your users right so like I see it as timeline",
    "start": "448800",
    "end": "455759"
  },
  {
    "text": "displacement so what would have had happened later when you ship your website when SSR kicks in and like uh a",
    "start": "455759",
    "end": "464159"
  },
  {
    "text": "request is made to a database and whatever there's time being spent there",
    "start": "464159",
    "end": "469360"
  },
  {
    "text": "that in this case is happening at build time so by the time your visitors come",
    "start": "469360",
    "end": "474440"
  },
  {
    "text": "not only is your website uh more likely to be available it's also more",
    "start": "474440",
    "end": "479879"
  },
  {
    "text": "performance cool so does get static paths is definitely creating those Dynamic paths so it does cash as well so",
    "start": "479879",
    "end": "487280"
  },
  {
    "text": "it does do the dynamic page generation but it does utilize the cache as well right exactly so basically it just",
    "start": "487280",
    "end": "494159"
  },
  {
    "text": "outputs HTML right so like the important part here is that uh you might have hundreds of blog posts thousands of blog",
    "start": "494159",
    "end": "500879"
  },
  {
    "text": "posts millions of block posts so get static paths allows you the developer to decide which ones are the ones that I",
    "start": "500879",
    "end": "507360"
  },
  {
    "text": "want to generate at build time and I think something that sets nextjs apart",
    "start": "507360",
    "end": "512560"
  },
  {
    "text": "and perhaps we're the first to do this although you know we' have to do some peer review on this but I'm pretty",
    "start": "512560",
    "end": "519518"
  },
  {
    "text": "confident that we're the first to also let you grow that data set at runtime",
    "start": "519519",
    "end": "525600"
  },
  {
    "text": "meaning that one of the limitations that ostensibly athetic generation has always",
    "start": "525600",
    "end": "530880"
  },
  {
    "text": "had is well you can generate two million uh pages right you're basically going to",
    "start": "530880",
    "end": "538240"
  },
  {
    "text": "have to make two million database calls or headless CMS API calls at Bill time",
    "start": "538240",
    "end": "543880"
  },
  {
    "text": "even if you could you might not really want to because you enter this trade-off of like okay how for how long are we",
    "start": "543880",
    "end": "551000"
  },
  {
    "text": "blocking the release to get that kind of drisking and optimization that I",
    "start": "551000",
    "end": "556040"
  },
  {
    "text": "mentioned earlier right and most companies are not going to want to wait you know for two million pages to be all",
    "start": "556040",
    "end": "561800"
  },
  {
    "text": "the io and all the network IO and so on although that that might continue to grow in the future meaning that what we",
    "start": "561800",
    "end": "567480"
  },
  {
    "text": "consider okay today might continue to grow in the future as we become faster and faster at build time but the reality",
    "start": "567480",
    "end": "574079"
  },
  {
    "text": "is with the jamu model what we can do is we can generate for example a thousand",
    "start": "574079",
    "end": "579200"
  },
  {
    "text": "Pages our most popular ones and then we can defer the rest at run time so nextjs",
    "start": "579200",
    "end": "584680"
  },
  {
    "text": "allows you to do this because Gast static paths will say you know there's this thousand block post that I want to",
    "start": "584680",
    "end": "590760"
  },
  {
    "text": "generate but then it generates a optionally it generates a skeleton as",
    "start": "590760",
    "end": "595839"
  },
  {
    "text": "well so if there's a new block post later on you're not going to get a 404",
    "start": "595839",
    "end": "601519"
  },
  {
    "text": "you're not going to have to rebuild your entire website it kind of gives you this jamsu model out of the box of like hey",
    "start": "601519",
    "end": "607399"
  },
  {
    "text": "some of stuff is pre-rendered and some of stuff can be done fully dynamically later on cool I noticed I think",
    "start": "607399",
    "end": "613800"
  },
  {
    "text": "yesterday or some was it yesterday yeah I think it was yesterday that Tim opened a RFC for incremental site generation on",
    "start": "613800",
    "end": "621399"
  },
  {
    "text": "next is that similar to what you're talking about yeah so we designed this API for static side generation first of",
    "start": "621399",
    "end": "628160"
  },
  {
    "text": "all to give people this ergonomic benefit as I mentioned that they don't have to use next export anymore and they",
    "start": "628160",
    "end": "634920"
  },
  {
    "text": "can make these decisions in a very granular basis they can do it on a per page basis they can decide how many",
    "start": "634920",
    "end": "641079"
  },
  {
    "text": "quotequote Dynamic Pages they want to generate but also we designed this with this idea in mind that we",
    "start": "641079",
    "end": "647720"
  },
  {
    "text": "knew that everyone that has chosen nextjs is chosen it for its scalability",
    "start": "647720",
    "end": "653079"
  },
  {
    "text": "and we knew that we wanted to have this idea of incremental static side generation uh open and that's for",
    "start": "653079",
    "end": "660600"
  },
  {
    "text": "example why we introduced that idea of the fall back that you go to a page that",
    "start": "660600",
    "end": "666160"
  },
  {
    "text": "would be all together new and that it was not known at build time nextjs contemplates that case so yeah by using",
    "start": "666160",
    "end": "674079"
  },
  {
    "text": "g a static proc and g a static paths you're basically you know 99% of the way there and also getting the capabilities",
    "start": "674079",
    "end": "681480"
  },
  {
    "text": "of incremental static side generation right yeah I actually think that's a",
    "start": "681480",
    "end": "687360"
  },
  {
    "text": "really interesting approach just because like especially within the jamack model the a lot of the criticism tends to be",
    "start": "687360",
    "end": "693959"
  },
  {
    "text": "that it's really fast so and so but the moment your site increases in the number of pages like if you're talking about",
    "start": "693959",
    "end": "700440"
  },
  {
    "text": "thousands or a million Pages the build time automatically increases like exponentially so that whenever you make",
    "start": "700440",
    "end": "708000"
  },
  {
    "text": "one change or you're adding a new page the entire site needs to rebuild which you know can take anywhere from a couple",
    "start": "708000",
    "end": "714639"
  },
  {
    "text": "of minutes to hours and I think that's the general criticism that jam gets a lot just because people are like look I",
    "start": "714639",
    "end": "721680"
  },
  {
    "text": "mean I get the benefit users get the benefit overall of a faster site but the",
    "start": "721680",
    "end": "727000"
  },
  {
    "text": "you know you as the key stakeholder of like the people building the site have to incur the cost of having to wait for",
    "start": "727000",
    "end": "733399"
  },
  {
    "text": "the entire site to build an update and I think what's been great about jamack even prior to nextjs for example",
    "start": "733399",
    "end": "740279"
  },
  {
    "text": "addressing this problem is that you were still getting these very customer",
    "start": "740279",
    "end": "745440"
  },
  {
    "text": "friendly and enduser friendly benefits which is why I think it's uh gain so much popularity because I've talked to",
    "start": "745440",
    "end": "752440"
  },
  {
    "text": "people that have used very long build processes and at the end of the day they",
    "start": "752440",
    "end": "757959"
  },
  {
    "text": "were still happier relative to sometimes their website being down or being slow right but it is true that it's a false",
    "start": "757959",
    "end": "765000"
  },
  {
    "text": "ionomy I think jamsa can scale to you know manage millions of pages and I",
    "start": "765000",
    "end": "772120"
  },
  {
    "text": "think the right balance to strike here is that you can do uh some of the work at Bill time and then you can defer some",
    "start": "772120",
    "end": "779959"
  },
  {
    "text": "of the work at runtime so it hasn't been an All or Nothing kind of situation ever",
    "start": "779959",
    "end": "785519"
  },
  {
    "text": "but for example if you wanted to do this today by hand it would be a little bit difficult right like you would have to",
    "start": "785519",
    "end": "791600"
  },
  {
    "text": "use a static side generator then you would have to generate a skeleton for uh the page that",
    "start": "791600",
    "end": "799240"
  },
  {
    "text": "like let's say you're creating an e-commerce item right and like your your store has millions of products you would",
    "start": "799240",
    "end": "804279"
  },
  {
    "text": "have to have the page with no data and then you have to write the code path for for using the jamu to like render on the",
    "start": "804279",
    "end": "813880"
  },
  {
    "text": "client side right when that kind of fallback gets uh kicks in but then the",
    "start": "813880",
    "end": "819680"
  },
  {
    "text": "really cool thing that we are doing with nextjs is that if if one of those pages",
    "start": "819680",
    "end": "824920"
  },
  {
    "text": "gets produced kind of uh on demand it's almost like it had been added to the",
    "start": "824920",
    "end": "829959"
  },
  {
    "text": "build so we are able to reuse the work that was incurred in sort of capturing",
    "start": "829959",
    "end": "837000"
  },
  {
    "text": "that longer tail so imagine that you generate a th000 uh e-commerce products",
    "start": "837000",
    "end": "843480"
  },
  {
    "text": "then the Thousand And1 gets dynamically generated on demand so you receive a",
    "start": "843480",
    "end": "849120"
  },
  {
    "text": "skeleton it gets populated Etc but then also in in this case this is done by",
    "start": "849120",
    "end": "854360"
  },
  {
    "text": "theid CDN automatically but anyone that implements this nextjs capability gets it we can also back fill the cache so",
    "start": "854360",
    "end": "861839"
  },
  {
    "text": "the CDN gets a copy of that new product that we generated so basically you're",
    "start": "861839",
    "end": "867320"
  },
  {
    "text": "getting you know infinitely scalable jamstack and from the perspective of the developer the only two apis that they",
    "start": "867320",
    "end": "874440"
  },
  {
    "text": "need to implement are get aesthetic props and get aesthetic paths so I'm really happy with how ergonomic this",
    "start": "874440",
    "end": "880560"
  },
  {
    "text": "capability has ended up being yeah I actually really like that model of how",
    "start": "880560",
    "end": "885680"
  },
  {
    "text": "to optimize for both both the developer experience as well as the user experience yeah one of the things that I",
    "start": "885680",
    "end": "891680"
  },
  {
    "text": "heard specifically with this was uh an article I think it was on CSS tricks that was it Phil Phil Hawksworth wrote",
    "start": "891680",
    "end": "899320"
  },
  {
    "text": "just about the whole trying to do cuz I think generally people think of jamstack as pre-rendering everything and I think",
    "start": "899320",
    "end": "906120"
  },
  {
    "text": "that's where the criticism for build time comes into play but I like the approach of pre-rendering as much as",
    "start": "906120",
    "end": "912199"
  },
  {
    "text": "possible because that's where the benefit of the speed comes in and then almost having the I guess and the",
    "start": "912199",
    "end": "918160"
  },
  {
    "text": "risking by the way the one that I love yeah because we've gotten so many comments on our platform of developers",
    "start": "918160",
    "end": "924600"
  },
  {
    "text": "being happy that their build failed and like it's kind of gotter intuitive like maybe it was because you know like they",
    "start": "924600",
    "end": "931240"
  },
  {
    "text": "made a typo in the code or something happened to go wrong with the network at that exact time and they were like oh",
    "start": "931240",
    "end": "938480"
  },
  {
    "text": "wow this is so awesome in an alternative Universe my website would be down right now oh definitely yeah and it's just a",
    "start": "938480",
    "end": "944800"
  },
  {
    "text": "matter of like pre-render as much as possible and then in in the cases when you do update it having that as like the",
    "start": "944800",
    "end": "952480"
  },
  {
    "text": "ability to almost it's sort of like serverless rendering because it's on the fly or",
    "start": "952480",
    "end": "958319"
  },
  {
    "text": "essentially dynamically creating that and then like in the background without",
    "start": "958319",
    "end": "964000"
  },
  {
    "text": "the user seeing backfilling the cache and making sure that things are up to date and something that's really cool",
    "start": "964000",
    "end": "969720"
  },
  {
    "text": "that I think Phil does touch on that article is that we still are as fast as possible from The Edge every time you",
    "start": "969720",
    "end": "978279"
  },
  {
    "text": "hit one of these Pages because basically what we give you is the page as if it was an Spa right yeah we give you the",
    "start": "978279",
    "end": "985920"
  },
  {
    "text": "shape or the skeleton of the page that's missing so your customer is never held up",
    "start": "985920",
    "end": "993360"
  },
  {
    "text": "waiting for a page that doesn't load that doesn't feel immediately",
    "start": "993360",
    "end": "999319"
  },
  {
    "text": "responsive or even a page that could fail in a way that is not recoverable oh",
    "start": "999319",
    "end": "1004480"
  },
  {
    "text": "definitely so one thing I love about Jam is you know as long as you downloaded the HTML and the JS there's so much that",
    "start": "1004480",
    "end": "1011440"
  },
  {
    "text": "you can do to like make sure that that rendering is successful that traditional",
    "start": "1011440",
    "end": "1016800"
  },
  {
    "text": "server rendering has not been able to ACC right a great example is retrying API",
    "start": "1016800",
    "end": "1022120"
  },
  {
    "text": "calls falling back to service workers so this is kind of the beauty of of this",
    "start": "1022120",
    "end": "1027798"
  },
  {
    "text": "model is that you're not really trading off any of the benefits of jamack definitely yeah and I think one",
    "start": "1027799",
    "end": "1033558"
  },
  {
    "text": "thing worth noting which I think you mentioned a little bit is that generally whenever we talk about using Sous",
    "start": "1033559",
    "end": "1040240"
  },
  {
    "text": "functions there's always this you know General thing which is that you have in",
    "start": "1040240",
    "end": "1046438"
  },
  {
    "text": "a lot of cases when you have a on a CDN that's super close to the user so you don't have as much latency but the",
    "start": "1046439",
    "end": "1053280"
  },
  {
    "text": "moment you include a servus function that might not necessarily be at that specific Edge node in which you're",
    "start": "1053280",
    "end": "1058799"
  },
  {
    "text": "serving your site and so that can add lag time which I think often people",
    "start": "1058799",
    "end": "1063840"
  },
  {
    "text": "don't think about because they just assume everything is at the edge which is not necessarily the case totally but",
    "start": "1063840",
    "end": "1069880"
  },
  {
    "text": "I think what could make this a lot faster is if you have that logic live on the CDN like essentially The Edge logic",
    "start": "1069880",
    "end": "1077120"
  },
  {
    "text": "either as a cloud flare Edge worker what whatever that may be so that you have the speed of like the CDN plus the",
    "start": "1077120",
    "end": "1083200"
  },
  {
    "text": "ability to essentially pre- rent or serverless render as quickly as possible",
    "start": "1083200",
    "end": "1089159"
  },
  {
    "text": "tot totally yeah I think what cloud is doing is really cool we'll see how you know this Technologies end up integr",
    "start": "1089159",
    "end": "1095600"
  },
  {
    "text": "because I think these benefits have to come to the developer in a way that's",
    "start": "1095600",
    "end": "1100640"
  },
  {
    "text": "Supernatural I think what's what's been interesting about serverless is we really need to hold the bar of the",
    "start": "1100640",
    "end": "1106360"
  },
  {
    "text": "usability of all these tools for jams for Ser for functions with the same kind",
    "start": "1106360",
    "end": "1111400"
  },
  {
    "text": "of super easy adoption and development process that old school monolithic apps",
    "start": "1111400",
    "end": "1118720"
  },
  {
    "text": "had right so I think the instant that the developer has to start worrying about oh this should be in the worker",
    "start": "1118720",
    "end": "1125080"
  },
  {
    "text": "but this should be on the client this should in what Edge am I running things get really complicated so I really",
    "start": "1125080",
    "end": "1130960"
  },
  {
    "text": "really uh agree with with what you said I think you know we have to make it fast",
    "start": "1130960",
    "end": "1137320"
  },
  {
    "text": "but not let the devel ER fall for traps where like oh my code is not running in the right place and and and the database",
    "start": "1137320",
    "end": "1144360"
  },
  {
    "text": "is slow and therefore I'm I'm hurting my end user which again is why I love to pre-render as much as possible right",
    "start": "1144360",
    "end": "1150400"
  },
  {
    "text": "because like it kind of removes all that uncertainty yeah I think it's about making sure the mental model matches",
    "start": "1150400",
    "end": "1157080"
  },
  {
    "text": "because I think the moment you start and I think this again is another thing around Edge workers is that you're like",
    "start": "1157080",
    "end": "1162360"
  },
  {
    "text": "at what point do you pre-render at what point do things live as an edge worker and then with that how much should you",
    "start": "1162360",
    "end": "1168120"
  },
  {
    "text": "put in the edge how much should the edge do cuz it's also like a different model of thinking",
    "start": "1168120",
    "end": "1173280"
  },
  {
    "text": "about things you're writing your application in next or whatever tool you're using and then you're almost having to shift your mental model to",
    "start": "1173280",
    "end": "1179960"
  },
  {
    "text": "look at another piece of tool to another spectrum of JS correct like you have to think about okay this is the nextjs code",
    "start": "1179960",
    "end": "1186720"
  },
  {
    "text": "base but wait there's this other code base which is a worker code base right so like you have to be really clear or",
    "start": "1186720",
    "end": "1194400"
  },
  {
    "text": "make the abstraction work in in such a way that you don't realize that you know there is that kind of edge code running",
    "start": "1194400",
    "end": "1201600"
  },
  {
    "text": "but I'll add two more things that I think a lot about when I think about like uh loading Edge code one of them is",
    "start": "1201600",
    "end": "1208080"
  },
  {
    "text": "that loading code opens yourself back up to failure modes that are not as easy to",
    "start": "1208080",
    "end": "1215400"
  },
  {
    "text": "anticipate right yeah so the most obvious and kind of like theoretical one",
    "start": "1215400",
    "end": "1221120"
  },
  {
    "text": "is that a touring complete language like JS we cannot decide ahead of time if the",
    "start": "1221120",
    "end": "1227000"
  },
  {
    "text": "code is going to a or not so you might deploy an edge worker that results for a",
    "start": "1227000",
    "end": "1233280"
  },
  {
    "text": "certain subset of users into an deadlock for example yep yeah whereas with",
    "start": "1233280",
    "end": "1239440"
  },
  {
    "text": "pushing HTML to the edge we've kind of removed that entire uncertainty the",
    "start": "1239440",
    "end": "1244880"
  },
  {
    "text": "other one is the time complexity right what I love about static files at the",
    "start": "1244880",
    "end": "1250280"
  },
  {
    "text": "edge is you basically have you know constant time complexity M and with code",
    "start": "1250280",
    "end": "1257280"
  },
  {
    "text": "well Developers to think about all their data structures and allocating memory correctly and you know what happens to",
    "start": "1257280",
    "end": "1264280"
  },
  {
    "text": "time to first bite if I have arbitrary code running at the edge and finally",
    "start": "1264280",
    "end": "1269640"
  },
  {
    "text": "there is the other one of like hey what am I handling errors correctly am I retrying correctly so Edge code creates",
    "start": "1269640",
    "end": "1277640"
  },
  {
    "text": "complexity this is why for now we haven't really Incorporated that into into the model what we're saying is you",
    "start": "1277640",
    "end": "1284919"
  },
  {
    "text": "know nextjs will generate static pages and then later on can generate modor cytic pages and the edge Network",
    "start": "1284919",
    "end": "1293000"
  },
  {
    "text": "basically all only receives HTML JS and CSS but I do think that uh there is a",
    "start": "1293000",
    "end": "1299279"
  },
  {
    "text": "future where the developer can also run some you know like just in time logic at",
    "start": "1299279",
    "end": "1305480"
  },
  {
    "text": "the edge as [Music]",
    "start": "1305480",
    "end": "1317520"
  },
  {
    "text": "well this episode is brought to you by digital ocean digital Ocean's developer",
    "start": "1317520",
    "end": "1322760"
  },
  {
    "text": "cloud makes it simple to launch in the cloud and scale up as you grow they have an intuitive control panel predictable",
    "start": "1322760",
    "end": "1329240"
  },
  {
    "text": "pricing team accounts worldwide availability with a 99.99 uptime SLA and",
    "start": "1329240",
    "end": "1334840"
  },
  {
    "text": "24/7 365 worldclass support to back that up digital ocean makes it easy to deploy",
    "start": "1334840",
    "end": "1340679"
  },
  {
    "text": "scale store secure and monitor your Cloud environments head to do. change",
    "start": "1340679",
    "end": "1345919"
  },
  {
    "text": "law to get started with a $100 credit again do.",
    "start": "1345919",
    "end": "1351720"
  },
  {
    "text": "[Music]",
    "start": "1354400",
    "end": "1363729"
  },
  {
    "text": "changelog I'd love to zoom out a little bit and talk about industry Trend towards jamstack itself I made a joke",
    "start": "1365400",
    "end": "1372080"
  },
  {
    "text": "recently I think on change doog news as I was linking to another CSS trick article how you can almost rename it Jam",
    "start": "1372080",
    "end": "1378559"
  },
  {
    "text": "stack tricks at this point because so much of CSS tricks is about the jamstack and then I started to get introspective",
    "start": "1378559",
    "end": "1385080"
  },
  {
    "text": "and I was like wait a second we've done Gatsby and now Tom Preston Warner with redwood and now G Jero with with NEX and",
    "start": "1385080",
    "end": "1391799"
  },
  {
    "text": "it's like H maybe we need to be jamstack party instead of JS party because it's definitely a thing that's getting a lot",
    "start": "1391799",
    "end": "1398480"
  },
  {
    "text": "of air time and thought time amongst developers I'm curious from your perspective yeah and also add something",
    "start": "1398480",
    "end": "1405480"
  },
  {
    "text": "really interesting to that I do think that jamc is the way to make JS successful at scale I've sometimes told",
    "start": "1405480",
    "end": "1411840"
  },
  {
    "text": "my team internally that I personally always thought that no. JS was going to go further as an industry Trend like I",
    "start": "1411840",
    "end": "1418480"
  },
  {
    "text": "thought it was going to get much bigger I thought it was going to have much more Enterprise success but then I realized",
    "start": "1418480",
    "end": "1424480"
  },
  {
    "text": "like thinking really deeply about the way that you use node.js what constitutes a nodejs app and it's",
    "start": "1424480",
    "end": "1432159"
  },
  {
    "text": "understandable that it didn't get as big as we once hoped because I think the execution model for JA JavaScript as uh",
    "start": "1432159",
    "end": "1440760"
  },
  {
    "text": "running a monolithic server that has to be up and running continuously that has",
    "start": "1440760",
    "end": "1446400"
  },
  {
    "text": "to manage memory optimally that has to like be really optimal in terms of throughput and latency I don't think JS",
    "start": "1446400",
    "end": "1454000"
  },
  {
    "text": "is ass I mean it's great don't get me wrong but I actually think that jamc has picked up really the essence of where JS",
    "start": "1454000",
    "end": "1462080"
  },
  {
    "text": "belongs like truly the good parts of JS so much so that I think that jamack is",
    "start": "1462080",
    "end": "1468399"
  },
  {
    "text": "comp to other programming models that use native programming languages because if you think about jam and deploying",
    "start": "1468399",
    "end": "1474080"
  },
  {
    "text": "code to the edge for example what better language could exist that a scripting",
    "start": "1474080",
    "end": "1479360"
  },
  {
    "text": "language that compresses really well that's very tiny that can be minified",
    "start": "1479360",
    "end": "1485880"
  },
  {
    "text": "that can be iterated on very quickly that can interact very quickly with new",
    "start": "1485880",
    "end": "1491000"
  },
  {
    "text": "platform features and browsers and so on and it's all about being optimized for",
    "start": "1491000",
    "end": "1496360"
  },
  {
    "text": "being loaded safely securely and dynamically inside a browser sandbox",
    "start": "1496360",
    "end": "1501520"
  },
  {
    "text": "like that is where JS belongs where jamac has put it and then jamac has really also embraced serverless",
    "start": "1501520",
    "end": "1508360"
  },
  {
    "text": "functions right and that's also a place where JS is shining relative to this again monolithic node.js model like if",
    "start": "1508360",
    "end": "1516120"
  },
  {
    "text": "you look at like Enterprises that adopted js on the back end the reality is that many of them ended up moving to",
    "start": "1516120",
    "end": "1522080"
  },
  {
    "text": "go to Russ etc etc but I do think that the serverless function model also makes",
    "start": "1522080",
    "end": "1528600"
  },
  {
    "text": "no JS and JS shine again because it fixes a lot of the problems that JS has",
    "start": "1528600",
    "end": "1534039"
  },
  {
    "text": "with managing concurrency and scaling horizontally and throughput and if you",
    "start": "1534039",
    "end": "1541240"
  },
  {
    "text": "have a memory leak in some ways you know Ser functions also have your back so in terms of what you just said you know",
    "start": "1541240",
    "end": "1547600"
  },
  {
    "text": "like let's rename JS Party jam party I mean obviously you're not going to do it I love the name party but it does make",
    "start": "1547600",
    "end": "1553960"
  },
  {
    "text": "sense that you know this is what we should all be rooting for because it's gonna help make JS so successful for",
    "start": "1553960",
    "end": "1561520"
  },
  {
    "text": "just about everyone in the world so jamstack has a lot of Road bumps like things to get over",
    "start": "1561520",
    "end": "1569000"
  },
  {
    "text": "these are the things that we've been talking about in the first segment right like how do we do these things well especially like we the the problem of",
    "start": "1569000",
    "end": "1574919"
  },
  {
    "text": "incremental builds or not rebuilding the entire world and these developer experience at deploy time is one of the",
    "start": "1574919",
    "end": "1581679"
  },
  {
    "text": "big ones from your perspective what are the its virtues you mentioned some in the first one I'd love you just to",
    "start": "1581679",
    "end": "1587279"
  },
  {
    "text": "highlight like this is why jamstack is worth all the effort that we're going to because one of the things I say often is",
    "start": "1587279",
    "end": "1593440"
  },
  {
    "text": "it sounds like we're jumping through a lot of Hoops just to avoid some Sur side rendering and it we are that being said",
    "start": "1593440",
    "end": "1600360"
  },
  {
    "text": "I'm not against it it just seems like wow there's a lot of complexity to get around this other complexity which at",
    "start": "1600360",
    "end": "1605760"
  },
  {
    "text": "least was mentally straightforward of I take in a request and I do some stuff and then I respond with some HTML so why",
    "start": "1605760",
    "end": "1612600"
  },
  {
    "text": "is Jam sack worth all the effort so I would say number one is and why I agree",
    "start": "1612600",
    "end": "1617919"
  },
  {
    "text": "with you that it makes sense to go through any hurdle that it presents is that it's the most user Centric",
    "start": "1617919",
    "end": "1624279"
  },
  {
    "text": "technology that you can think of because it optimizes for your user your customer",
    "start": "1624279",
    "end": "1630919"
  },
  {
    "text": "your buyer getting the information that they want in the ideal case again pre-rendered and served directly from",
    "start": "1630919",
    "end": "1637559"
  },
  {
    "text": "the edge so never offline always fast always what they need it's also uh",
    "start": "1637559",
    "end": "1643000"
  },
  {
    "text": "embraced a very rigorous testing methodology so a lot of people are",
    "start": "1643000",
    "end": "1648399"
  },
  {
    "text": "building in the jamack ecosystem like Gatsby nextjs netlify 11t",
    "start": "1648399",
    "end": "1656080"
  },
  {
    "text": "they've all kind of embraced this performance first mindset right like you see it with uh we're always discussing",
    "start": "1656080",
    "end": "1663080"
  },
  {
    "text": "Lighthouse we're always discussing Edge we're always discussing CDN we're you know talking about how much JS we're",
    "start": "1663080",
    "end": "1669000"
  },
  {
    "text": "shipping and this is why I think again it's it's so healthy for ecosystem to go",
    "start": "1669000",
    "end": "1674159"
  },
  {
    "text": "in this direction because we I don't think in the days of SSR kind of the user of SSR that went Global I think of",
    "start": "1674159",
    "end": "1681080"
  },
  {
    "text": "Wordpress right M you would install it in Apachi you would set up a PHP and",
    "start": "1681080",
    "end": "1687080"
  },
  {
    "text": "then you have your WordPress SSR right WordPress never really had the",
    "start": "1687080",
    "end": "1692519"
  },
  {
    "text": "opportunity to optimize these two things availability was pretty bad you know",
    "start": "1692519",
    "end": "1697559"
  },
  {
    "text": "like the error connecting to mySQL database kind of uh H1 HTML kind of",
    "start": "1697559",
    "end": "1702840"
  },
  {
    "text": "became uh synonymous with warpers being stressed at scale in",
    "start": "1702840",
    "end": "1708640"
  },
  {
    "text": "slash do effect that became the Dig effect then it became The Hacker News effect totally and and number two got",
    "start": "1708640",
    "end": "1715919"
  },
  {
    "text": "slash dotted that was the old saying I don't know if you remember but uh WordPress had this helper method called",
    "start": "1715919",
    "end": "1722640"
  },
  {
    "text": "wpnq Script that would uh add JS libraries to your page and it was being",
    "start": "1722640",
    "end": "1730519"
  },
  {
    "text": "used basically like with no limit and if you kind of inspect any WordPress page",
    "start": "1730519",
    "end": "1737279"
  },
  {
    "text": "and again in my mind this is all caused by the trend away from other languages",
    "start": "1737279",
    "end": "1742679"
  },
  {
    "text": "and into JS it's just like the demand for JS increasing you know there were",
    "start": "1742679",
    "end": "1748200"
  },
  {
    "text": "unlimited uh JS files being loaded into a WordPress template coming from you",
    "start": "1748200",
    "end": "1753240"
  },
  {
    "text": "know dozens of different sources some from a CDN some from your own the caching headers Wen being correctly",
    "start": "1753240",
    "end": "1759519"
  },
  {
    "text": "configured there was no bundling whatsoever so each page inside workers",
    "start": "1759519",
    "end": "1765240"
  },
  {
    "text": "that you would go to you know load 10 20 30 from different origins of different",
    "start": "1765240",
    "end": "1771480"
  },
  {
    "text": "sitzes I would always inspect WordPress sites and find multiple copies of jQuery",
    "start": "1771480",
    "end": "1777159"
  },
  {
    "text": "that were being enced into the page from different plugins and themes yeah so jamstack is kind of like if you think",
    "start": "1777159",
    "end": "1784120"
  },
  {
    "text": "about it like we're we're saying well we've kind of know how to solve all the",
    "start": "1784120",
    "end": "1789559"
  },
  {
    "text": "problems of apis editing data in a CMS we can even",
    "start": "1789559",
    "end": "1794720"
  },
  {
    "text": "reuse WordPress as a headless CMS and jam is saying saying okay now let's focus on the user let's ship optimized",
    "start": "1794720",
    "end": "1802279"
  },
  {
    "text": "JS you know let's focus on that first content full paint metric let's focus on the time to interactive metric so really",
    "start": "1802279",
    "end": "1810799"
  },
  {
    "text": "I think it is the culmination of a process that has been going on for you know decades now of really understanding",
    "start": "1810799",
    "end": "1818720"
  },
  {
    "text": "the web what the web is best at understanding where pre-rendering makes",
    "start": "1818720",
    "end": "1824080"
  },
  {
    "text": "sense where you know Spa type architectures make sense and and the",
    "start": "1824080",
    "end": "1829919"
  },
  {
    "text": "community has now spent time building the infrastructure both for Edge and",
    "start": "1829919",
    "end": "1836480"
  },
  {
    "text": "framework to kind of give you this best practices in a box you know and that's",
    "start": "1836480",
    "end": "1841880"
  },
  {
    "text": "in a nutshell adopting gemet today is becoming as easy as you know executing",
    "start": "1841880",
    "end": "1848240"
  },
  {
    "text": "npx create next app that's the world we're going so I do think we're going to you know to your point there are some",
    "start": "1848240",
    "end": "1854840"
  },
  {
    "text": "challenges today uh in adopting jamack but you know this is why we're building all this robust Frameworks so that you",
    "start": "1854840",
    "end": "1861039"
  },
  {
    "text": "can get them all kind of without thinking too much about it yeah I really",
    "start": "1861039",
    "end": "1866120"
  },
  {
    "text": "like that that definition of it and I think Chris Cho also like has a talk where he talks about the I forget what",
    "start": "1866120",
    "end": "1873519"
  },
  {
    "text": "the exact title is but he just talks about the reign of the frontend developer just gaining so much more",
    "start": "1873519",
    "end": "1879919"
  },
  {
    "text": "control because the whole model of the jamstack focuses more on the browser so",
    "start": "1879919",
    "end": "1886039"
  },
  {
    "text": "like in the past whenever we did web development you had to split time between what the browser could do and",
    "start": "1886039",
    "end": "1891440"
  },
  {
    "text": "what the server could do because you're thinking about monolithic applications that would dynamically rendered from the",
    "start": "1891440",
    "end": "1897320"
  },
  {
    "text": "server and so there were different things and assumptions you had to make if you were dealing with the server or",
    "start": "1897320",
    "end": "1902559"
  },
  {
    "text": "dealing with the browser because if things were being run server side you don't have access to window you don't have access to like Dom or anything like",
    "start": "1902559",
    "end": "1909639"
  },
  {
    "text": "that um but I think within the jamstack model there's so much focus on just the",
    "start": "1909639",
    "end": "1915440"
  },
  {
    "text": "experience of the user that you don't even have to split between like what is possible from the server side what is",
    "start": "1915440",
    "end": "1922000"
  },
  {
    "text": "possible from the browser side or this client side because you're focusing so much on the client side but at the same time you're also trying really hard not",
    "start": "1922000",
    "end": "1929360"
  },
  {
    "text": "to because there's so much criticism these days particularly in performance around there's too much JavaScript",
    "start": "1929360",
    "end": "1935399"
  },
  {
    "text": "you're loading too much JavaScript and so the jam model kind of pushes to be like is there a way that you can build",
    "start": "1935399",
    "end": "1942720"
  },
  {
    "text": "websites where you're still using JavaScript but you're pre-rendering so you're not using a lot of JavaScript",
    "start": "1942720",
    "end": "1948480"
  },
  {
    "text": "you're using enough you just need and then if you need like extra functionality that's tacked on you would",
    "start": "1948480",
    "end": "1953960"
  },
  {
    "text": "just throw that in a subus function and invoke it when you need rather than loading it client side and having it run",
    "start": "1953960",
    "end": "1959679"
  },
  {
    "text": "constantly and blo and also I think what's been important too is making sure that if you do need a function or a",
    "start": "1959679",
    "end": "1967120"
  },
  {
    "text": "server it's not blocking that delivery of that first interaction with the",
    "start": "1967120",
    "end": "1972760"
  },
  {
    "text": "system so the idea that you know there's an uncertainty of of what happens and",
    "start": "1972760",
    "end": "1978880"
  },
  {
    "text": "how long does this code take to execute whether that happens you know up front",
    "start": "1978880",
    "end": "1985360"
  },
  {
    "text": "or whether it happens later I think makes a big difference so in the case of pre-rendering for example I get the full",
    "start": "1985360",
    "end": "1992120"
  },
  {
    "text": "content of what I'm interested in whether it's product or whether it's blog post marketing page whatever it is",
    "start": "1992120",
    "end": "1998639"
  },
  {
    "text": "and then I can like you said more code can be executed later but that code that gets executed",
    "start": "1998639",
    "end": "2006720"
  },
  {
    "text": "later is not blocking my first interaction with the core functionality of the page so you're really optimizing",
    "start": "2006720",
    "end": "2014279"
  },
  {
    "text": "for what the user is after and think of you know the idea of getting you know",
    "start": "2014279",
    "end": "2021000"
  },
  {
    "text": "the data that the user was searching for in a on a search engine and getting",
    "start": "2021000",
    "end": "2026120"
  },
  {
    "text": "basically like the performance of amp but without even necessarily needing to use amp and then having the full power",
    "start": "2026120",
    "end": "2033039"
  },
  {
    "text": "of Js On Top to do more stuff later on so it seems like on if you can consider a full stack application we used to have",
    "start": "2033039",
    "end": "2040679"
  },
  {
    "text": "a very straight up divide between front end and back end it seems like in terms of a fullstack developer what's",
    "start": "2040679",
    "end": "2046880"
  },
  {
    "text": "happening with jamstack and and modern JS practices is like the front end is kind of eating the back end so to speak",
    "start": "2046880",
    "end": "2053760"
  },
  {
    "text": "it's like it's moving that direction versus the other way I would agree especially advc of serverless functions",
    "start": "2053760",
    "end": "2059200"
  },
  {
    "text": "and stuff so like you're empowering front end developers to do",
    "start": "2059200",
    "end": "2064240"
  },
  {
    "text": "more and oh completely completely but it's not like there's no I mean you",
    "start": "2064240",
    "end": "2069760"
  },
  {
    "text": "still have the a in jamstack right you still have the API aspect and you still have to be able to construct an API to",
    "start": "2069760",
    "end": "2076520"
  },
  {
    "text": "interact with a back end like with a database or a data store of some kind and um I think one of the misconceptions",
    "start": "2076520",
    "end": "2082960"
  },
  {
    "text": "about jamstack is like the a is always somebody else's code you're going to be talking to some third party API and it",
    "start": "2082960",
    "end": "2088760"
  },
  {
    "text": "seems like that because a lot of the companies that are promoting jamstack not just the clouds so to speak like",
    "start": "2088760",
    "end": "2094079"
  },
  {
    "text": "Zite and NFI but a lot of the apis as a ser are like and we're part of your jamstack",
    "start": "2094079",
    "end": "2100240"
  },
  {
    "text": "because now here's your oth right here or here's your image processing like that's a third party API but I think in",
    "start": "2100240",
    "end": "2106000"
  },
  {
    "text": "lots of cases you're right in your own apis I do think that the truth is somewhere in the middle uh because for",
    "start": "2106000",
    "end": "2111880"
  },
  {
    "text": "example a lot of the functions that we write aside for our core systems are acting as glue sometimes between they're",
    "start": "2111880",
    "end": "2119440"
  },
  {
    "text": "not fully like us you know think of it as like writing assembly code versus writing a high level language we're not",
    "start": "2119440",
    "end": "2126960"
  },
  {
    "text": "necessarily always writing raw infrastructure inside those functions",
    "start": "2126960",
    "end": "2132280"
  },
  {
    "text": "where sometimes you know maybe invoking a bunch of API calls to stripe to",
    "start": "2132280",
    "end": "2137359"
  },
  {
    "text": "perform some sort of billing related task so the a arguably the heavy lifting",
    "start": "2137359",
    "end": "2143839"
  },
  {
    "text": "of the a is being done by stripe and we're simply you know adding some more",
    "start": "2143839",
    "end": "2149160"
  },
  {
    "text": "business Logic on top something that's really cool about functions I think doesn't get discussed",
    "start": "2149160",
    "end": "2154520"
  },
  {
    "text": "enough is that for example with with it functions we allow you to say what",
    "start": "2154520",
    "end": "2159920"
  },
  {
    "text": "region you want to deploy them to and we tell you well this region maps to this you know AWS region or uh it's Clos to",
    "start": "2159920",
    "end": "2167599"
  },
  {
    "text": "this Google Cloud region so say that your API provider in this case uh let's say it's a stripe right for your billing",
    "start": "2167599",
    "end": "2175079"
  },
  {
    "text": "charges customers whatever and uh they are in Us East uh",
    "start": "2175079",
    "end": "2180760"
  },
  {
    "text": "in the Virginia data center or around there if you deploy your function far away from strip if you're making lots of",
    "start": "2180760",
    "end": "2187880"
  },
  {
    "text": "API calls to strive to get a certain result you're going to see very bad latency like you're going to see your",
    "start": "2187880",
    "end": "2194440"
  },
  {
    "text": "function takes like multiple seconds to execute however if you deploy it right next to stripe it's basically like",
    "start": "2194440",
    "end": "2201560"
  },
  {
    "text": "functions are literally augmenting the stripe code base because you're literally deploying them to the same",
    "start": "2201560",
    "end": "2207480"
  },
  {
    "text": "Data Center and all of a sudden you go from like instead of a 90 millisecond roundt trip you go to like",
    "start": "2207480",
    "end": "2213720"
  },
  {
    "text": "submillisecond because it ends up being in the same data center as this strip computers are in AWS so I see functions",
    "start": "2213720",
    "end": "2221079"
  },
  {
    "text": "as this incredible almost like open plug-in ecosystem for the world I think",
    "start": "2221079",
    "end": "2226400"
  },
  {
    "text": "longer term we're going to be writing functions that do very little in terms of you know like I said that kind of",
    "start": "2226400",
    "end": "2233640"
  },
  {
    "text": "like low-level infrastructure stuff and it's more like you're just going to be invoking different API providers it's",
    "start": "2233640",
    "end": "2240400"
  },
  {
    "text": "happening a lot with databases right like a lot of databases are moving to providing hcp gateways for executing",
    "start": "2240400",
    "end": "2248119"
  },
  {
    "text": "their uh payload so it feels like when you're talking to like Aurora my SQL on AWS it feels like you're talking to just",
    "start": "2248119",
    "end": "2255640"
  },
  {
    "text": "yet another restful API only that it has more flexibility with regards to you know the queries that you send yeah I",
    "start": "2255640",
    "end": "2262640"
  },
  {
    "text": "think that's really interesting I would like to talk about one particular thing so you've talked in various places in",
    "start": "2262640",
    "end": "2269319"
  },
  {
    "text": "various conferences the concept of so serverless is really cool and really interesting specifically Edge functions",
    "start": "2269319",
    "end": "2276079"
  },
  {
    "text": "because it gives you the ability to offload logic that's otherwise suicide to something that runs a bit faster that",
    "start": "2276079",
    "end": "2283520"
  },
  {
    "text": "doesn't require you to pay for a server and the up time and all of that um but one of the downsides of using Edge",
    "start": "2283520",
    "end": "2289960"
  },
  {
    "text": "functions in serverless is that it's generally stateless so you don't have the concept of like a previous state and",
    "start": "2289960",
    "end": "2297680"
  },
  {
    "text": "I think you talked a little bit about this concept of stateful serverless where you I think you demoed like this",
    "start": "2297680",
    "end": "2303520"
  },
  {
    "text": "Pokemon game where you were showing like yeah that was really cool can you speak more to like the whole concept of how",
    "start": "2303520",
    "end": "2309920"
  },
  {
    "text": "stateful serverless works so the reality that uh of why I think you know you",
    "start": "2309920",
    "end": "2315599"
  },
  {
    "text": "we're going to see a lot of functions that call to other infrastructure is that functions today",
    "start": "2315599",
    "end": "2323839"
  },
  {
    "text": "are a little bit more limited than servers in terms of their ability to for",
    "start": "2323839",
    "end": "2329440"
  },
  {
    "text": "example preserve a cache in process right so let's say that you're a great",
    "start": "2329440",
    "end": "2335280"
  },
  {
    "text": "example is like Discord recently L wrote about how they maintain these very",
    "start": "2335280",
    "end": "2340880"
  },
  {
    "text": "highly optimized inmemory data structures to maintain the state of the",
    "start": "2340880",
    "end": "2346880"
  },
  {
    "text": "realtime state of a certain room of the",
    "start": "2346880",
    "end": "2352040"
  },
  {
    "text": "connection state of the people that are in chatting inside Discord and a lot of the optimizations that they're making",
    "start": "2352040",
    "end": "2359400"
  },
  {
    "text": "and a lot of what makes this super real time immersive uh experiences possible",
    "start": "2359400",
    "end": "2365920"
  },
  {
    "text": "is that they're basically not calling out to other systems like you're basically being taken into the right",
    "start": "2365920",
    "end": "2373800"
  },
  {
    "text": "inprocess cache that contains a lot of the information that uh you're interested in now if you think about",
    "start": "2373800",
    "end": "2381119"
  },
  {
    "text": "Lambda functions the misconception is that they're stateless in reality you",
    "start": "2381119",
    "end": "2386599"
  },
  {
    "text": "can maintain some memory that is shared by previous invocations and then",
    "start": "2386599",
    "end": "2393319"
  },
  {
    "text": "subsequent invocations the big limitation that they have is is that",
    "start": "2393319",
    "end": "2398560"
  },
  {
    "text": "that cache tier cannot really be relied upon that much because each discret",
    "start": "2398560",
    "end": "2405520"
  },
  {
    "text": "invocation will might start with no memory whatsoever when you start scaling up or down you're not going to have that",
    "start": "2405520",
    "end": "2412200"
  },
  {
    "text": "high cach hit ratio that you would otherwise have with a server now that",
    "start": "2412200",
    "end": "2417839"
  },
  {
    "text": "doesn't mean that you know the memory inside the function is not or or even the sltm directory doesn't exist no it's",
    "start": "2417839",
    "end": "2426440"
  },
  {
    "text": "there and you should use it what I demonstrated in that demo is that you could even write a fully stateful system",
    "start": "2426440",
    "end": "2434240"
  },
  {
    "text": "if you relied on for example reddis so what I did to make that uh Pokemon demo work is that I moved the state into",
    "start": "2434240",
    "end": "2441400"
  },
  {
    "text": "reddis and then I didn't care if a certain function had this cach hit",
    "start": "2441400",
    "end": "2447040"
  },
  {
    "text": "happening or not and if it was a cach hit because the same function keeps getting reused I would take advantage of",
    "start": "2447040",
    "end": "2453480"
  },
  {
    "text": "that so it's interesting to to consider that right because like when you're operating at a very very high scale or",
    "start": "2453480",
    "end": "2460440"
  },
  {
    "text": "you're doing a lot of things that are very very real time you do want to have some like shared memory between lots of",
    "start": "2460440",
    "end": "2468040"
  },
  {
    "text": "different requests now this is why I think that you know functions in combination with you know this novel",
    "start": "2468040",
    "end": "2475520"
  },
  {
    "text": "database systems like Dynamo and Cosmos DB and FAA are going to be really the",
    "start": "2475520",
    "end": "2481280"
  },
  {
    "text": "way that we can solve this you know durable functions problem of like I need",
    "start": "2481280",
    "end": "2487000"
  },
  {
    "text": "to not just do like you know a trivial transformation in my function I want to",
    "start": "2487000",
    "end": "2492440"
  },
  {
    "text": "you know do IO and keep State and scale correctly we're going to have to start",
    "start": "2492440",
    "end": "2497920"
  },
  {
    "text": "you know heading towards the databases that are appropriate for for those cases",
    "start": "2497920",
    "end": "2503000"
  },
  {
    "text": "yeah definitely I think that's one thing that like I was looking at aw step functions and just the ability for you",
    "start": "2503000",
    "end": "2508760"
  },
  {
    "text": "to do IO between functions cuz often times we talk about functions as in isolation like this function just does",
    "start": "2508760",
    "end": "2515480"
  },
  {
    "text": "one thing but sometimes you have functions that rely on other functions so it's just a sequence of events and so",
    "start": "2515480",
    "end": "2521880"
  },
  {
    "text": "how would you do that because I think generally whenever we hear people talk about serverless functions there isn't a",
    "start": "2521880",
    "end": "2528240"
  },
  {
    "text": "lot of talk about how you would chain functions together how they would pass from one to the next yeah yeah I I do",
    "start": "2528240",
    "end": "2535520"
  },
  {
    "text": "think we need the D ex of that today for most implementations of Serv functions",
    "start": "2535520",
    "end": "2540839"
  },
  {
    "text": "is not good enough it's doable right with like uh storing the state somewhere and then that function like kind of",
    "start": "2540839",
    "end": "2548359"
  },
  {
    "text": "responding to that state change and then but I do agree that I love the spirit of",
    "start": "2548359",
    "end": "2554920"
  },
  {
    "text": "making or functioning vocations very very shortlived so that you can scale",
    "start": "2554920",
    "end": "2560599"
  },
  {
    "text": "certain parts of the life cycle of what you're doing independently right like in",
    "start": "2560599",
    "end": "2566200"
  },
  {
    "text": "in a transformation pipeline you might have steps that require even different memory in CPU configurations right y the",
    "start": "2566200",
    "end": "2574520"
  },
  {
    "text": "crazy thing about functions is that like there super configurable and they're",
    "start": "2574520",
    "end": "2579640"
  },
  {
    "text": "super granular right so when you compare this to the old server full world the difference is kind of crazy",
    "start": "2579640",
    "end": "2586480"
  },
  {
    "text": "right like in a old Express server you had kind of like freefor all all the",
    "start": "2586480",
    "end": "2593000"
  },
  {
    "text": "endpoints share everything with everybody else CPU and memory is the same but it's shared by the entire",
    "start": "2593000",
    "end": "2599480"
  },
  {
    "text": "server the environment even like in terms of security like the M variables",
    "start": "2599480",
    "end": "2605079"
  },
  {
    "text": "are applied to the entire server with functions we can make all this granular now the question becomes you know are",
    "start": "2605079",
    "end": "2611200"
  },
  {
    "text": "you getting too ahead of the optimization game when you were writing just a prototype right yeah so this is",
    "start": "2611200",
    "end": "2618079"
  },
  {
    "text": "why in nextjs API functions we we did as much as we could to make it feel like",
    "start": "2618079",
    "end": "2623520"
  },
  {
    "text": "you're writing express almost even easier in some ways because you have the file system so you just create an API directory inside pages and then you put",
    "start": "2623520",
    "end": "2630000"
  },
  {
    "text": "your functions in there but we're conscious of this thing because there's a lot of power that comes with functions",
    "start": "2630000",
    "end": "2636079"
  },
  {
    "text": "but you don't want to over complicated either right definitely this is why some people keep saying oh you know like for",
    "start": "2636079",
    "end": "2642280"
  },
  {
    "text": "my a I'm still okay with Ru and rails and I'll use jamack for the front and I",
    "start": "2642280",
    "end": "2647640"
  },
  {
    "text": "I think uh that comes from perhaps you know the function World being still nent",
    "start": "2647640",
    "end": "2654119"
  },
  {
    "text": "in some ways yeah I think the other thing also that's worth mentioning is that with functions and I think this is",
    "start": "2654119",
    "end": "2660520"
  },
  {
    "text": "the case it's ubiquitous across every functions offering out there is that dependency management is a little bit",
    "start": "2660520",
    "end": "2667160"
  },
  {
    "text": "clunky at the moment just because of the way that you would serve a function you you would have to like ship the function",
    "start": "2667160",
    "end": "2673559"
  },
  {
    "text": "by zipping the entire thing and having an executable so that all the dependencies live with it and then you",
    "start": "2673559",
    "end": "2679280"
  },
  {
    "text": "have to make sure that that specific dependency is not like it has to live in the same place that your function lives",
    "start": "2679280",
    "end": "2684960"
  },
  {
    "text": "so it has access to it I think in a nutshell the reality that we're living in today is that functions run no. JS",
    "start": "2684960",
    "end": "2692960"
  },
  {
    "text": "right like that's run exactly yeah but the ecosystem is shared like we all use npm",
    "start": "2692960",
    "end": "2700040"
  },
  {
    "text": "but the ecosystem itself is targeting these environments that share the",
    "start": "2700040",
    "end": "2705400"
  },
  {
    "text": "runtime but are actually quite different right so there's almost this impedence",
    "start": "2705400",
    "end": "2710599"
  },
  {
    "text": "mismatch where developers you know come to using a function and then they expect",
    "start": "2710599",
    "end": "2717040"
  },
  {
    "text": "that everything that they're used to in the node.js world works out of the box",
    "start": "2717040",
    "end": "2722559"
  },
  {
    "text": "and that kind of like mismatch and sometimes being a cut right we've seen",
    "start": "2722559",
    "end": "2728520"
  },
  {
    "text": "this with u databases right like if you just want to use the PG client for for",
    "start": "2728520",
    "end": "2734640"
  },
  {
    "text": "posterus for node and the way that connection pulling works with poster SQL",
    "start": "2734640",
    "end": "2740400"
  },
  {
    "text": "servers and then you like kind of make use it with functions now you immediately almost immediately run up",
    "start": "2740400",
    "end": "2747079"
  },
  {
    "text": "against the wall of oh I opened too many connections to postas and the",
    "start": "2747079",
    "end": "2753319"
  },
  {
    "text": "connections were not gracefully closed so now and B my BAS basically I was promised my website would never go down",
    "start": "2753319",
    "end": "2759720"
  },
  {
    "text": "because of jam and serverless and now like three data quaries and like my",
    "start": "2759720",
    "end": "2764760"
  },
  {
    "text": "server is exacerbated yeah and by the way this impetus mismatch is exactly",
    "start": "2764760",
    "end": "2769800"
  },
  {
    "text": "what you were talking about with regards to that server versus client's rendering environment right like you would have to",
    "start": "2769800",
    "end": "2776839"
  },
  {
    "text": "use no to fetch for the server and then fetch for the client and they're",
    "start": "2776839",
    "end": "2782640"
  },
  {
    "text": "slightly different and then one Contex is window and the other one doesn't so",
    "start": "2782640",
    "end": "2788400"
  },
  {
    "text": "npm had to navigate that problem too I remember uh seldo started realizing by",
    "start": "2788400",
    "end": "2793720"
  },
  {
    "text": "looking at the data that browser JS was getting deployed a lot to npm and keep",
    "start": "2793720",
    "end": "2799599"
  },
  {
    "text": "in mind that to them to ISAC and Zelda like that was a surprising emergent",
    "start": "2799599",
    "end": "2805000"
  },
  {
    "text": "behavior from the community because npm was literally designed to be the node package manager I think maybe that's",
    "start": "2805000",
    "end": "2811160"
  },
  {
    "text": "what originated the joke of like you know all the different acronyms of npm like oh yeah nice people matter and like",
    "start": "2811160",
    "end": "2817960"
  },
  {
    "text": "yeah they rotate on the website but it's true right like JS is so this is not a great word right now with coron virus",
    "start": "2817960",
    "end": "2823839"
  },
  {
    "text": "but JS is so viral that npm has become kind of a repository of everything and",
    "start": "2823839",
    "end": "2829440"
  },
  {
    "text": "then the developer has to make the right decision for what package fits the environment that they're deploying to",
    "start": "2829440",
    "end": "2836200"
  },
  {
    "text": "definitely yeah and and that's why I'm really like excited to see the emergence",
    "start": "2836200",
    "end": "2842119"
  },
  {
    "text": "of like Dino and Es modules because it's completely Shifting the model away from",
    "start": "2842119",
    "end": "2847520"
  },
  {
    "text": "all of the problems we had with node and npm yeah for example if Doo focuses on",
    "start": "2847520",
    "end": "2852960"
  },
  {
    "text": "functions which I think they are from the Geto then we can have a higher degree of certainty that if I write Doo",
    "start": "2852960",
    "end": "2861240"
  },
  {
    "text": "functions then they will have thought about this problems early on and there is less of that kind of like bumping",
    "start": "2861240",
    "end": "2867880"
  },
  {
    "text": "against the wall [Music] [Applause] problem what up nerds I got some pretty",
    "start": "2867880",
    "end": "2874760"
  },
  {
    "text": "awesome news to share with you plural site is totally free for the entire month of April I'm not kidding seriously",
    "start": "2874760",
    "end": "2881720"
  },
  {
    "text": "head to pluralsight.com changelog and skill up while you stay at home for the entire month of April you'll get access",
    "start": "2881720",
    "end": "2887040"
  },
  {
    "text": "to over 7,000 courses from experts in software development security cloud and",
    "start": "2887040",
    "end": "2892359"
  },
  {
    "text": "data there's never been a better time to skill up head to pluralsight.com changelog again pluralsight.com",
    "start": "2892359",
    "end": "2900040"
  },
  {
    "text": "[Music]",
    "start": "2900740",
    "end": "2905760"
  },
  {
    "text": "changelog [Music]",
    "start": "2905760",
    "end": "2915280"
  },
  {
    "text": "so you two are deep in the Weeds on this stuff which is awesome to listen into and hear about the the ins and outs of",
    "start": "2915280",
    "end": "2921839"
  },
  {
    "text": "solving particular problems with jamstack with ssgs with all these things",
    "start": "2921839",
    "end": "2927559"
  },
  {
    "text": "serverless Lambda functions Etc and I feel like I'm a little bit on the outside looking in um trying to look at",
    "start": "2927559",
    "end": "2934359"
  },
  {
    "text": "the trend as a whole and going back to this this concept of of the technology adoption life cycle not sure if you guys",
    "start": "2934359",
    "end": "2940559"
  },
  {
    "text": "are aware of this but the idea of you have inators early adopters early majority late majority lagger it's like",
    "start": "2940559",
    "end": "2946200"
  },
  {
    "text": "this flow and on this particular new type of",
    "start": "2946200",
    "end": "2951280"
  },
  {
    "text": "web application all on the jamstack I'm just curious what you two think where we",
    "start": "2951280",
    "end": "2957160"
  },
  {
    "text": "are in that adoption life cycle like if it's still in the innovator phase or if it's mov beyond that and then what stands between where we are today and",
    "start": "2957160",
    "end": "2964640"
  },
  {
    "text": "some sort of mass adoption where like most developers are building jamstack style apps in their day-to-day use so",
    "start": "2964640",
    "end": "2973359"
  },
  {
    "text": "that's for either one of you to to kick off where are we and what's what's still",
    "start": "2973359",
    "end": "2978480"
  },
  {
    "text": "in the way before everybody can start doing this I think we're past the early Innovation phase clearly I think we've",
    "start": "2978480",
    "end": "2985480"
  },
  {
    "text": "seen lots of you know large websites large teams large companies use uh our",
    "start": "2985480",
    "end": "2992640"
  },
  {
    "text": "platform and nextjs to in the gam stack kind of",
    "start": "2992640",
    "end": "2997720"
  },
  {
    "text": "structure in production I think the recognition of hey this is definitely the solution",
    "start": "2997720",
    "end": "3006760"
  },
  {
    "text": "it's still not 100% that everybody says like oh I absolutely need to use gemset for absolutely everything that I create",
    "start": "3006760",
    "end": "3013160"
  },
  {
    "text": "especially as as you get deeper and deeper into uh companies that have been running their workloads in a different",
    "start": "3013160",
    "end": "3020280"
  },
  {
    "text": "way right and they're thinking about what the future is for them so what was interesting about nextjs is that",
    "start": "3020280",
    "end": "3027359"
  },
  {
    "text": "uh and it's still the case that it's a hybrid framework you can still opt into SSR for certain things and some",
    "start": "3027359",
    "end": "3033440"
  },
  {
    "text": "companies feel comfortable with adopting new technology in that Progressive Way",
    "start": "3033440",
    "end": "3039040"
  },
  {
    "text": "right perhaps the thing that they're after at that given time is react and",
    "start": "3039040",
    "end": "3045040"
  },
  {
    "text": "they feel more comfortable saying look I can maintain almost everything the way",
    "start": "3045040",
    "end": "3050119"
  },
  {
    "text": "it is today and then I get the benefit of react so I think this is why I'm a really big fan of like incremental adop",
    "start": "3050119",
    "end": "3056640"
  },
  {
    "text": "option of jamstack where like we tell customers like think of adopting it even",
    "start": "3056640",
    "end": "3062040"
  },
  {
    "text": "one page at a time and then you'll see the benefits for yourself and then you'll see the higher conversion I've",
    "start": "3062040",
    "end": "3068640"
  },
  {
    "text": "now seen customers tell me like look I can of went into this very interesting",
    "start": "3068640",
    "end": "3073920"
  },
  {
    "text": "in what you're saying very interesting in in the case studies that you're showing but when we actually rolled it out we saw an improvement on our",
    "start": "3073920",
    "end": "3081000"
  },
  {
    "text": "business metrics not just like you know Lighthouse forget all that like we've had so many customers is like look I'm",
    "start": "3081000",
    "end": "3087440"
  },
  {
    "text": "converting better um and that's what we want to hear you know that's what we uh",
    "start": "3087440",
    "end": "3092799"
  },
  {
    "text": "want to hear from like VPS of marketing that's what we want to hear from CTO want to hear from everyone that chooses",
    "start": "3092799",
    "end": "3097880"
  },
  {
    "text": "this technology like hey it's giving us better business results and then the the",
    "start": "3097880",
    "end": "3103040"
  },
  {
    "text": "other uh kind of side of that is the developer satisfaction right and I think",
    "start": "3103040",
    "end": "3109400"
  },
  {
    "text": "that's where sure there's some you know rough edges like uh sometimes as projects grow like for some people like",
    "start": "3109400",
    "end": "3115520"
  },
  {
    "text": "the build times get longer and whatever but for the most part as divio is saying",
    "start": "3115520",
    "end": "3121079"
  },
  {
    "text": "if for example now you're writing in one JS environment and you're not worrying about the Dual execution and you're not",
    "start": "3121079",
    "end": "3127760"
  },
  {
    "text": "worrying about servers and Dev uh workflow is simple and fast then on the",
    "start": "3127760",
    "end": "3135480"
  },
  {
    "text": "other side of that not only do you get like better business metrics but you get more developer satisfaction and what's",
    "start": "3135480",
    "end": "3141000"
  },
  {
    "text": "happening in terms of that curve that you were talking about is developers tend to gravitate to the tools that they",
    "start": "3141000",
    "end": "3147119"
  },
  {
    "text": "feel more most productive in and that give them the best results in terms of like shipping new features and iterating",
    "start": "3147119",
    "end": "3153400"
  },
  {
    "text": "and solving problems efficiently right and we're seeing tons of momentum there right like nextjs kind of gave people a",
    "start": "3153400",
    "end": "3160839"
  },
  {
    "text": "great DX for react applications and uh we see as you also",
    "start": "3160839",
    "end": "3166960"
  },
  {
    "text": "mentioned that front and teams are now more and more eating companies and being",
    "start": "3166960",
    "end": "3172720"
  },
  {
    "text": "the decision makers and I would say that we're past the innovation face because we've seen that it was front and teams",
    "start": "3172720",
    "end": "3179960"
  },
  {
    "text": "that took this technology into so many big names uh like when we talk to the",
    "start": "3179960",
    "end": "3185440"
  },
  {
    "text": "Hulu team it's like okay like how did this idea of using next start and it",
    "start": "3185440",
    "end": "3191200"
  },
  {
    "text": "typically starts with frontend developers and it typically starts with you know that desire to create more uh",
    "start": "3191200",
    "end": "3197000"
  },
  {
    "text": "interactive experiences and shipping faster so I think we've seen plenty of",
    "start": "3197000",
    "end": "3202559"
  },
  {
    "text": "results already and but I'm still super optimistic that relative to how young",
    "start": "3202559",
    "end": "3207720"
  },
  {
    "text": "this movement is MH there's so much upside and we're we're still really in",
    "start": "3207720",
    "end": "3214880"
  },
  {
    "text": "the early Innings but what's interesting is that we already have so much proof that this works well you know for very",
    "start": "3214880",
    "end": "3221160"
  },
  {
    "text": "very large sites and customers so we're in I think this is pretty unique to jamac itself because typically I was",
    "start": "3221160",
    "end": "3228760"
  },
  {
    "text": "part of the early days of node and node always had a lot of promise for like",
    "start": "3228760",
    "end": "3234119"
  },
  {
    "text": "being production ready and like it had that developer excitement but the production usage was always kind of more",
    "start": "3234119",
    "end": "3240440"
  },
  {
    "text": "like yeah you know like we made it work but it took this and that right and it",
    "start": "3240440",
    "end": "3246920"
  },
  {
    "text": "it seemed that there were a lot more obstacles now this time it fills the",
    "start": "3246920",
    "end": "3252480"
  },
  {
    "text": "opposite sometimes as you pointed out maybe the developer was more comfortable",
    "start": "3252480",
    "end": "3257640"
  },
  {
    "text": "with the Ruby and re's monolith right right but in reality the jamx solution",
    "start": "3257640",
    "end": "3263079"
  },
  {
    "text": "works way better in prod so it's a it's a very unique situation I love it yeah I",
    "start": "3263079",
    "end": "3268480"
  },
  {
    "text": "would say that uh that goes back to I think this directional shift of the front end eating the back end when node",
    "start": "3268480",
    "end": "3274680"
  },
  {
    "text": "first hit the the promise there's a promise of what it called isomorphic app so basically like you know writing your",
    "start": "3274680",
    "end": "3280359"
  },
  {
    "text": "code and running it on the front and the back end and that attracted some but there are plenty of us and myself",
    "start": "3280359",
    "end": "3287079"
  },
  {
    "text": "included that it's just like well I'm pretty happy with my backend technology the stuff that I build doesn't always",
    "start": "3287079",
    "end": "3292280"
  },
  {
    "text": "have to be quote unquote web scale and I'm fine with that but JavaScript in the front end has always been the lingua",
    "start": "3292280",
    "end": "3298640"
  },
  {
    "text": "Franca it's always been the thing that all totally all companies all developers anybody on the web is going to be using",
    "start": "3298640",
    "end": "3305160"
  },
  {
    "text": "despite their backends or regardless of their back ends and where jamstack is actually attacking the front end and",
    "start": "3305160",
    "end": "3310280"
  },
  {
    "text": "saying here is a better way of doing it's a better fit yeah yeah and so now you have a much bigger potential",
    "start": "3310280",
    "end": "3316000"
  },
  {
    "text": "audience because you didn't have to convince them to ditch their server side technology you're actually convincing",
    "start": "3316000",
    "end": "3321799"
  },
  {
    "text": "them to rebuild in a different way yeah and that's what I meant by the incremental option curve that I love is",
    "start": "3321799",
    "end": "3327599"
  },
  {
    "text": "I think the trend that now is in the place of like the laggards or whatever is Enterprises have been moving towards",
    "start": "3327599",
    "end": "3335400"
  },
  {
    "text": "decoupling their front and their backends right and some chose rest some are choosing graphql but that trend is",
    "start": "3335400",
    "end": "3343160"
  },
  {
    "text": "now mature that companies know that there's a big benefit to exporting their",
    "start": "3343160",
    "end": "3350480"
  },
  {
    "text": "systems as publicly consumable apis and even that movement in itself I think has",
    "start": "3350480",
    "end": "3356400"
  },
  {
    "text": "lot of upside still but let's say that that's a more mature Trend so now when you think about Jam which is a more",
    "start": "3356400",
    "end": "3363200"
  },
  {
    "text": "young uh Trend it's really fitting in so well with where the ecosystem already",
    "start": "3363200",
    "end": "3370720"
  },
  {
    "text": "was which is oh you probably already if you're a larger established player you",
    "start": "3370720",
    "end": "3376160"
  },
  {
    "text": "already had that API uh or you were in the process of creating it because you were I think this trend even also hops",
    "start": "3376160",
    "end": "3383680"
  },
  {
    "text": "onto the rise of mobile because mobile native needed graphql needed rest right",
    "start": "3383680",
    "end": "3391319"
  },
  {
    "text": "so now you come in and you create a frontend architecture right that matches",
    "start": "3391319",
    "end": "3397079"
  },
  {
    "text": "what you were already doing for for mobile so it's like it's so compatible with the other coexisting Trends and",
    "start": "3397079",
    "end": "3403400"
  },
  {
    "text": "that's what I think has been giving it this you know boost in adoption right",
    "start": "3403400",
    "end": "3409799"
  },
  {
    "text": "yeah this was similar thing that Tom prent Warner said a couple weeks back when we were talking about redwood I",
    "start": "3409799",
    "end": "3415440"
  },
  {
    "text": "think it was actually during a break but maybe it made it into the post show and I was talking about wouldn't it be better for developers in terms of mental",
    "start": "3415440",
    "end": "3422359"
  },
  {
    "text": "model if we could just take the straightforward unidirectional flow of a",
    "start": "3422359",
    "end": "3428240"
  },
  {
    "text": "server response you know I get a request I do some logic I output some HTML like",
    "start": "3428240",
    "end": "3434160"
  },
  {
    "text": "that's a very straightforward mental model for developers and one of the reasons why react was so successful is",
    "start": "3434160",
    "end": "3439920"
  },
  {
    "text": "because it took that single that unidirectional flow brought it to the front end I said what if we could just",
    "start": "3439920",
    "end": "3445319"
  },
  {
    "text": "take that and just distribute it to the edges and have my local database and like if I could just take my monolith",
    "start": "3445319",
    "end": "3452240"
  },
  {
    "text": "and make a thousand monoliths at different CDN around the world wouldn't that be better for developers if I could",
    "start": "3452240",
    "end": "3458280"
  },
  {
    "text": "still do my server side rendering and his response to that was that does not solve the multi-client problem which is",
    "start": "3458280",
    "end": "3463839"
  },
  {
    "text": "exactly what you're talking about and there's another problem with that by the way which is the latency problem that I was describing with the stripe example",
    "start": "3463839",
    "end": "3470319"
  },
  {
    "text": "which is with the exception of faa's Geor replication model which is built on",
    "start": "3470319",
    "end": "3477640"
  },
  {
    "text": "a novel replication and coordination system Called Calvin with the exception",
    "start": "3477640",
    "end": "3485440"
  },
  {
    "text": "of that and perhaps Google spanner databases are not mature enough yet to",
    "start": "3485440",
    "end": "3493960"
  },
  {
    "text": "coexist with your Ed right I was giving him a hypothetical world where this was",
    "start": "3493960",
    "end": "3499359"
  },
  {
    "text": "true so I wasn't assuming that's a super interesting hypothetical uh I think",
    "start": "3499359",
    "end": "3505119"
  },
  {
    "text": "we're nowhere near that world existing I think this is why I'm excited about f is",
    "start": "3505119",
    "end": "3512000"
  },
  {
    "text": "that I think considering how the world in some ways really had already been",
    "start": "3512000",
    "end": "3517119"
  },
  {
    "text": "quote unquote Sheltering in place right already with like regulations and",
    "start": "3517119",
    "end": "3522400"
  },
  {
    "text": "structor borders and and these are all like things that are not very exciting",
    "start": "3522400",
    "end": "3527520"
  },
  {
    "text": "especially when it comes to like you know we've had uh speakers get detained at the border and or sent home and like",
    "start": "3527520",
    "end": "3534880"
  },
  {
    "text": "it's it's a horrible Trend but reality is that as BAGI tweeted recently he saying like this Corona virus thing",
    "start": "3534880",
    "end": "3540680"
  },
  {
    "text": "might be accelerating trends that were already kind of there like for a lot of",
    "start": "3540680",
    "end": "3546200"
  },
  {
    "text": "us you know work from home and remote work in the St teams were like was a reality but for the vast majority of the world wasn't so now this is going to",
    "start": "3546200",
    "end": "3552880"
  },
  {
    "text": "accelerate it it's going to accelerate Zoom adoption it's going to accelerate deploy previews we've seen that even on",
    "start": "3552880",
    "end": "3558640"
  },
  {
    "text": "over the past two weeks like our numbers the number of builds and deploys to Z have just skyrocketed so all this Trends",
    "start": "3558640",
    "end": "3566359"
  },
  {
    "text": "are going to get accelerated and I think when it comes to databases databases having a sense of locality has been what",
    "start": "3566359",
    "end": "3573520"
  },
  {
    "text": "governments have always wanted the most OB obnoxious and extreme version of this",
    "start": "3573520",
    "end": "3578599"
  },
  {
    "text": "is how China wanted its own Shard quote unquote of iCloud that lives in China",
    "start": "3578599",
    "end": "3586680"
  },
  {
    "text": "and doesn't have encryption right so um there could be a world in the future",
    "start": "3586680",
    "end": "3593559"
  },
  {
    "text": "where the database is everywhere and therefore the logic for the code that",
    "start": "3593559",
    "end": "3599280"
  },
  {
    "text": "interacts with that database can also be everywhere but that's not where we're today uh we're not nowhere even close to",
    "start": "3599280",
    "end": "3605760"
  },
  {
    "text": "that so the most that you can have is like a distributed cach like what cord is trying with I think they call it KV",
    "start": "3605760",
    "end": "3612359"
  },
  {
    "text": "or something like that but uh today what's more realistic is that you have a",
    "start": "3612359",
    "end": "3617799"
  },
  {
    "text": "certain database origin and therefore you have a a collocated API origin as",
    "start": "3617799",
    "end": "3623440"
  },
  {
    "text": "well what we're starting to see is that you can move certain functions to other locations or even to all the edges but",
    "start": "3623440",
    "end": "3631160"
  },
  {
    "text": "that's more of a distant reality I think yeah uh I would be surprised if it even happened you know in the next two to",
    "start": "3631160",
    "end": "3638680"
  },
  {
    "text": "three years at scale I think what's more likely to happen is again you're going to create an API in in your region that",
    "start": "3638680",
    "end": "3646000"
  },
  {
    "text": "makes the most sense like one way or another everyone has picked Virginia right um and that's going to be your",
    "start": "3646000",
    "end": "3653240"
  },
  {
    "text": "start and you're going to create an API around that but then what you're going to distribute everywhere is your front",
    "start": "3653240",
    "end": "3659680"
  },
  {
    "text": "and your p and your static pages and your Statics generated pages and so on and by the way I love that too because",
    "start": "3659680",
    "end": "3666000"
  },
  {
    "text": "like I said I think the best outcome for uh consumers is that when they go to the",
    "start": "3666000",
    "end": "3672119"
  },
  {
    "text": "content there's no API call at all there's no servers nothing just hey give me the copy of the content that I wanted",
    "start": "3672119",
    "end": "3678200"
  },
  {
    "text": "right um so I'm pretty happy with that world until a meteor hits Virginia and then we're all correct correct yeah",
    "start": "3678200",
    "end": "3687160"
  },
  {
    "text": "during one of the old AWS downtimes years ago somebody made a joke like turns out the cloud is just some",
    "start": "3687160",
    "end": "3692200"
  },
  {
    "text": "building in Virginia because they brought down so many websites and it's still true today and if you think about",
    "start": "3692200",
    "end": "3697640"
  },
  {
    "text": "it right like the latency from Europe to Virginia is not bad at all right I",
    "start": "3697640",
    "end": "3703640"
  },
  {
    "text": "always I always say like uh you know pay attention to like the uh latency figures that every developer should know by a",
    "start": "3703640",
    "end": "3710520"
  },
  {
    "text": "famous googler and one of the ones he mentions is California to the Netherlands round trip is 150",
    "start": "3710520",
    "end": "3717440"
  },
  {
    "text": "milliseconds or so maybe even less but let's add some padding right so if you",
    "start": "3717440",
    "end": "3722599"
  },
  {
    "text": "think about like a critical market for you which is London London to Virginia",
    "start": "3722599",
    "end": "3728799"
  },
  {
    "text": "is actually pretty damn fast right and California to Virginia as well now I'm",
    "start": "3728799",
    "end": "3733960"
  },
  {
    "text": "not advocating for a suboptimal world because like then your customer in sou Paulo should probably have a database in",
    "start": "3733960",
    "end": "3740000"
  },
  {
    "text": "sou Pao like that's the reality but like again there is a lot of technology that needs to be created for that world to",
    "start": "3740000",
    "end": "3747079"
  },
  {
    "text": "exist if the political climate around you know the president of Brazil wanting",
    "start": "3747079",
    "end": "3752400"
  },
  {
    "text": "all the data in Brazil and the president of Russia W all the data in Russia continues maybe this that'll sort of",
    "start": "3752400",
    "end": "3759400"
  },
  {
    "text": "accelerate that uh that movement but the the counter movement that might exist in",
    "start": "3759400",
    "end": "3764480"
  },
  {
    "text": "those cases is like the emergence of local clouds right like the reality is that you know like Alibaba cloud is",
    "start": "3764480",
    "end": "3771279"
  },
  {
    "text": "probably you know going to dominate in China as well so and even in those cases like they're looking for solutions that",
    "start": "3771279",
    "end": "3778079"
  },
  {
    "text": "fit their local market so I think when it comes to like deciding where your API",
    "start": "3778079",
    "end": "3783400"
  },
  {
    "text": "origin is you have to kind of be thinking a lot about what business problems you have and with regards to",
    "start": "3783400",
    "end": "3790000"
  },
  {
    "text": "availability you also have to think about that you have to think about Disaster Recovery like you said for the meteorite case but increasingly managed",
    "start": "3790000",
    "end": "3797000"
  },
  {
    "text": "databases have already thought about this problems on your behalf so we use uh CMOS DB and our Disaster Recovery",
    "start": "3797000",
    "end": "3805119"
  },
  {
    "text": "contract with is if something hits a certain Coast we have in the worst case",
    "start": "3805119",
    "end": "3811279"
  },
  {
    "text": "scenario five minutes to fail over the API origin to the other coast so",
    "start": "3811279",
    "end": "3817520"
  },
  {
    "text": "everyone is always going to one API origin but then we also can flip the switch and go to another API origin yeah",
    "start": "3817520",
    "end": "3824400"
  },
  {
    "text": "that's I think key so um I think we're coming to the end of the session so I guess Jared do you have anything you",
    "start": "3824400",
    "end": "3831079"
  },
  {
    "text": "want to ask I scooped up a couple of questions from the chat and from Twitter that I can pitch but I don't have to ask",
    "start": "3831079",
    "end": "3837319"
  },
  {
    "text": "those Divia you take yeah I just wanted to ask I guess one last question which",
    "start": "3837319",
    "end": "3842640"
  },
  {
    "text": "is just that we talked a lot about I think we were moving closer to this particular question just we talked about",
    "start": "3842640",
    "end": "3848279"
  },
  {
    "text": "Edge functions and what's possible what the jam Stacks like now because it's been 5 years since I think it was",
    "start": "3848279",
    "end": "3853440"
  },
  {
    "text": "introduced but where do you see the future of the jamstack moving in like let's say the next five years I think",
    "start": "3853440",
    "end": "3860240"
  },
  {
    "text": "we're going to see Frameworks kind of give you the best practices and kind of the gems architecture out of the box",
    "start": "3860240",
    "end": "3868039"
  },
  {
    "text": "this is uh for us you know like I said next started as this SSR thing and then really it evolved in being a jamack",
    "start": "3868039",
    "end": "3874640"
  },
  {
    "text": "framework uh that gives you this best practices as the defaults right I think",
    "start": "3874640",
    "end": "3880160"
  },
  {
    "text": "I'm really excited about that Trend because it answers uh one of the things that came up which is like you know like",
    "start": "3880160",
    "end": "3885799"
  },
  {
    "text": "we can't create obstacles to the adoption of we can't create like lots of questions we can create like lots of um",
    "start": "3885799",
    "end": "3892799"
  },
  {
    "text": "do it yourself type things around how to you know successfully start with one",
    "start": "3892799",
    "end": "3898160"
  },
  {
    "text": "page and then add more and more and then have this become your primary architecture for your company uh I'm",
    "start": "3898160",
    "end": "3904760"
  },
  {
    "text": "really excited about that I'm really excited as well as around all the ideas of integrating with other systems so",
    "start": "3904760",
    "end": "3912240"
  },
  {
    "text": "we're seeing lots of interesting collaborations right now with all the Headless CMS providers with a new feature that we",
    "start": "3912240",
    "end": "3918839"
  },
  {
    "text": "introduc in nextjs or previews so whether you've chosen sanity or prism",
    "start": "3918839",
    "end": "3926400"
  },
  {
    "text": "or strappy this will have increasingly nicer and nicer integration stories into",
    "start": "3926400",
    "end": "3934480"
  },
  {
    "text": "the Frameworks so that it truly feels like uh again like going back to",
    "start": "3934480",
    "end": "3939799"
  },
  {
    "text": "Wordpress we were kind of you know saying oh it had problem a and problem B but when you think about the amazing",
    "start": "3939799",
    "end": "3946480"
  },
  {
    "text": "things that it gave the world one of them was this like it's all in a box",
    "start": "3946480",
    "end": "3951960"
  },
  {
    "text": "sort of experience you know like you had your themes you had your output you had",
    "start": "3951960",
    "end": "3957119"
  },
  {
    "text": "your front end but then you could go to the admin panel and then like everything was already there you weren't thinking",
    "start": "3957119",
    "end": "3963039"
  },
  {
    "text": "about like oh I'm gonna make a query to my headless CMS provider right like that's kindon of um odd if you really",
    "start": "3963039",
    "end": "3970440"
  },
  {
    "text": "think about on its own if you look at it objectively it's odd I always take the example of like imagine that you take",
    "start": "3970440",
    "end": "3976920"
  },
  {
    "text": "this Paradigm or or new standard to a non-technical person and 10 years ago",
    "start": "3976920",
    "end": "3983960"
  },
  {
    "text": "you showed them a demo of Wordpress and now uh 10 years later you show them a demo of um of your sort of jam stack",
    "start": "3983960",
    "end": "3993319"
  },
  {
    "text": "plus headless CMS thing and there's a lot of rough edges I think it's still like that kind of experience especially",
    "start": "3993319",
    "end": "4001119"
  },
  {
    "text": "for like kind of the editor part but I think jams now has the ability to lipf",
    "start": "4001119",
    "end": "4007039"
  },
  {
    "text": "frog those experiences so what we're going to see in the next even year or so I'm excited about like uh new",
    "start": "4007039",
    "end": "4013839"
  },
  {
    "text": "technologies like Tina where we're going to see that we're merging the Headless",
    "start": "4013839",
    "end": "4020359"
  },
  {
    "text": "CMS editing experience and Sanity is doing it as well as sanity studio and",
    "start": "4020359",
    "end": "4026000"
  },
  {
    "text": "we're collocating that with the front end experience so I always believe in Le frogs right like our our bar should not",
    "start": "4026000",
    "end": "4033279"
  },
  {
    "text": "be to be as good as WordPress was we have to be better too so yeah making a",
    "start": "4033279",
    "end": "4038440"
  },
  {
    "text": "website that has all this amazing performance and availability kind of",
    "start": "4038440",
    "end": "4043599"
  },
  {
    "text": "features but also feels like webflow you know like I think we're really close to",
    "start": "4043599",
    "end": "4049400"
  },
  {
    "text": "there if you want to check out a demo that we put early on that uses the nextjs preview technology is next-",
    "start": "4049400",
    "end": "4057440"
  },
  {
    "text": "preview. now.sh uh and what this is is basically a fully static page it's always served",
    "start": "4057440",
    "end": "4063480"
  },
  {
    "text": "from The Edge unless you are in preview mode if you're",
    "start": "4063480",
    "end": "4068559"
  },
  {
    "text": "in preview mode we render quote unquote WordPress style where we're always going",
    "start": "4068559",
    "end": "4074559"
  },
  {
    "text": "to the uh data source in quote unquote real time or synchronously so what it",
    "start": "4074559",
    "end": "4080440"
  },
  {
    "text": "ends up being is that it feels like you're editing the website in real time while you're in preview mode but then in",
    "start": "4080440",
    "end": "4088920"
  },
  {
    "text": "the future especially with Integrations with sanity and Tina and type .io we're",
    "start": "4088920",
    "end": "4095440"
  },
  {
    "text": "going to be able to say well now I want to make I want to commit this change and then it goes into the the uh production",
    "start": "4095440",
    "end": "4101960"
  },
  {
    "text": "Pipeline and again like the static Pages get generated and we end up with basically The Best of Both Worlds so in",
    "start": "4101960",
    "end": "4108440"
  },
  {
    "text": "a natural I'm really excited about again elevating the bar of user experience uh",
    "start": "4108440",
    "end": "4114278"
  },
  {
    "text": "developer experience because I think we've made a lot of progress with the infrastructure itself like I'm really",
    "start": "4114279",
    "end": "4120278"
  },
  {
    "text": "happy with how fast it pages are to load and the technology that we've created for uh incremental side side generation",
    "start": "4120279",
    "end": "4126238"
  },
  {
    "text": "so what we can do now is you know fill that Gap in terms of can we make this",
    "start": "4126239",
    "end": "4131758"
  },
  {
    "text": "really feel like no code even it's pretty cool stuff yeah I like",
    "start": "4131759",
    "end": "4137440"
  },
  {
    "text": "that you focused also just and you shined a light on the non-technical",
    "start": "4137440",
    "end": "4143238"
  },
  {
    "text": "audience because often when we talk about websites sure developers are building the website but we also have",
    "start": "4143239",
    "end": "4148838"
  },
  {
    "text": "non-technical contributors like content authors or marketing people totally who need to contribute and I think often",
    "start": "4148839",
    "end": "4156400"
  },
  {
    "text": "with jamstack it's like hey you can use a headless CMS but sometimes like or even uh technical people in retirement",
    "start": "4156400",
    "end": "4163480"
  },
  {
    "text": "right because I feel way I want to edit the copy or suggest a copy edit of our",
    "start": "4163480",
    "end": "4168960"
  },
  {
    "text": "marketing Pages sometimes and yeah like the in famous now jamstack spelling like",
    "start": "4168960",
    "end": "4174679"
  },
  {
    "text": "is it Jam stack lowercase upper you know like I'm I'm not coding anymore so now",
    "start": "4174679",
    "end": "4181520"
  },
  {
    "text": "I'm luckily on the other side where I don't want to go to GitHub I don't want to go to like boot up a Dev thing yeah",
    "start": "4181520",
    "end": "4188798"
  },
  {
    "text": "like I just want to like press an edit button and then being able to submit my",
    "start": "4188799",
    "end": "4194320"
  },
  {
    "text": "preview to my co-workers to be like hey what do you think like we could say this so yeah I totally agree with that I",
    "start": "4194320",
    "end": "4200400"
  },
  {
    "text": "think like you said like sites are meant to be accessible the web is meant to be",
    "start": "4200400",
    "end": "4207640"
  },
  {
    "text": "accessible to everyone you all have probably seen that there's so many memes on Reddit and elsewhere where people use",
    "start": "4207640",
    "end": "4214239"
  },
  {
    "text": "the dev tools to create fake content so like the dev tools have done a better",
    "start": "4214239",
    "end": "4219920"
  },
  {
    "text": "job yet so far at making this like uh technology available to everybody um",
    "start": "4219920",
    "end": "4227440"
  },
  {
    "text": "than the rest of the world so far so but now I literally and clearly see a path",
    "start": "4227440",
    "end": "4232920"
  },
  {
    "text": "forward I believe we're about to open source the preview example too so that everyone can plug it in into their",
    "start": "4232920",
    "end": "4238640"
  },
  {
    "text": "headless CMS of choice but now I kind of see how all this is fitting in Gatsby is also working on some initiatives around",
    "start": "4238640",
    "end": "4245640"
  },
  {
    "text": "this on making blocks drag and drop and and so it's it's a really exciting future for broadening access to to the",
    "start": "4245640",
    "end": "4253080"
  },
  {
    "text": "web yeah definitely cool and so with that there's like a very bright future ahead of the jam stack I'm very",
    "start": "4253080",
    "end": "4259159"
  },
  {
    "text": "optimistic myself and I almost Echo your sentiments around wanting to make sure",
    "start": "4259159",
    "end": "4264320"
  },
  {
    "text": "the editing experience is nice like I'm a developer but I still don't like writing in markdown which I think is a",
    "start": "4264320",
    "end": "4270360"
  },
  {
    "text": "fairly controversial opinion I thought we were friends and and by the way another thing",
    "start": "4270360",
    "end": "4276159"
  },
  {
    "text": "I was going to add in terms of our bright future is mobile web so yeah I",
    "start": "4276159",
    "end": "4282040"
  },
  {
    "text": "recently tweeted about uh a component that we signed for like switching teams on our dashboard and I've been really",
    "start": "4282040",
    "end": "4288600"
  },
  {
    "text": "excited about it because like if you put in the effort uh for the UI parts and",
    "start": "4288600",
    "end": "4293760"
  },
  {
    "text": "and and I think one of the goals of our chat today was going to be talked about like different browsers and and whatnot",
    "start": "4293760",
    "end": "4299480"
  },
  {
    "text": "but there was a lot of content to unpack but one thing I'll say about browsers is as a final note is that I think the",
    "start": "4299480",
    "end": "4305080"
  },
  {
    "text": "jamstack might have a really good chance making mobile web really really",
    "start": "4305080",
    "end": "4310480"
  },
  {
    "text": "competitive with Native and I think one of the things I'd love to like give to the community is the challenge of",
    "start": "4310480",
    "end": "4317280"
  },
  {
    "text": "thinking more about the interactions that feel native in terms of the web",
    "start": "4317280",
    "end": "4323960"
  },
  {
    "text": "there actually are possible so obviously there's always constraints and we all know that mobile Safari has all kinds of",
    "start": "4323960",
    "end": "4330440"
  },
  {
    "text": "weird limitations but if you create a component system and a UI system that",
    "start": "4330440",
    "end": "4336800"
  },
  {
    "text": "Embraces that environment you can do really cool things that make mobile web",
    "start": "4336800",
    "end": "4342560"
  },
  {
    "text": "super super competitive with Native so going back to how Gema kind of like mirrors the application architecture of",
    "start": "4342560",
    "end": "4350239"
  },
  {
    "text": "a native app in terms of like you know you putot up with some code or some shell and then you make API calls and so",
    "start": "4350239",
    "end": "4356840"
  },
  {
    "text": "on I really think that in the next five years we're going to see lots of progress in the mobile web ecosystem uh",
    "start": "4356840",
    "end": "4363760"
  },
  {
    "text": "we've been working together with the folks of ionic uh around ionic and next",
    "start": "4363760",
    "end": "4369719"
  },
  {
    "text": "Integrations and they have really cool ways of embedding your your apps in in Native shells so I'm really optimistic",
    "start": "4369719",
    "end": "4377679"
  },
  {
    "text": "that we're going to be creating jamack apps that really stand on their own in",
    "start": "4377679",
    "end": "4383159"
  },
  {
    "text": "comparison to Native apps both when they're distributed on demand from a web browser but also when they're wrapped in",
    "start": "4383159",
    "end": "4391080"
  },
  {
    "text": "in a shell like react native web views or U ionic views yeah cool well thank",
    "start": "4391080",
    "end": "4398719"
  },
  {
    "text": "you so much for being on the show we're really glad to have you this was really",
    "start": "4398719",
    "end": "4403800"
  },
  {
    "text": "interesting I think we talked about so much within the show there's so much to unpack So yeah thank you again for being",
    "start": "4403800",
    "end": "4410840"
  },
  {
    "text": "on the show thank you so much for having me yeah you're welcome back",
    "start": "4410840",
    "end": "4415678"
  },
  {
    "text": "anytime thank you for listening to JS party we know your time is precious so",
    "start": "4416400",
    "end": "4421560"
  },
  {
    "text": "we appreciate you spending it with us thanks again to gisho for joining us follow his work on Twitter he's rou G",
    "start": "4421560",
    "end": "4428120"
  },
  {
    "text": "that's r u HG if you want to hear how he got into programming and what got him to",
    "start": "4428120",
    "end": "4433960"
  },
  {
    "text": "start Ze in the first place we had him on the change log a few years back check it out that's episode number",
    "start": "4433960",
    "end": "4439199"
  },
  {
    "text": "213 I'll link it in the show notes for easy clicking this episode was hosted by Divia also known as short div on Twitter",
    "start": "4439199",
    "end": "4446480"
  },
  {
    "text": "I played wing and produced it we get our far and Fresh Beats from the beat freak break master cylinder and we're brought",
    "start": "4446480",
    "end": "4452239"
  },
  {
    "text": "to you by some amazing people at companies who get it special thanks to fley lenoe and robbar that's all for now",
    "start": "4452239",
    "end": "4459080"
  },
  {
    "text": "we'll talk to you next time",
    "start": "4459080",
    "end": "4467040"
  },
  {
    "text": "clap your hands everybody If You Got What It Takes cuz I'm Curtis blow and I",
    "start": "4467360",
    "end": "4472600"
  },
  {
    "text": "want you to know that these are the is it rude to do so slack etiquette I",
    "start": "4472600",
    "end": "4478520"
  },
  {
    "text": "almost never use at Channel I do you do use that channel W with uh when we",
    "start": "4478520",
    "end": "4483960"
  },
  {
    "text": "hosted back in lcom it helped us tremendously and people received it well it's like you know I think of it is like",
    "start": "4483960",
    "end": "4489600"
  },
  {
    "text": "you're getting a push notification for something that you signed up for um for the company we like we've quote unquote",
    "start": "4489600",
    "end": "4496320"
  },
  {
    "text": "banned it because it's it's can be a like people not realizing how much of an impact it has and things like that but",
    "start": "4496320",
    "end": "4502840"
  },
  {
    "text": "uh for conferences and meetups I've used it and people haven't gotten too mad",
    "start": "4502840",
    "end": "4508000"
  },
  {
    "text": "okay I'm want to use it because I usually use at here um rjs party chat",
    "start": "4508000",
    "end": "4513600"
  },
  {
    "text": "room has like you know 800 people chilling at here means you're live at your you're signed in what does that",
    "start": "4513600",
    "end": "4519480"
  },
  {
    "text": "here mean does it mean you're signed into slack in this team and you're also active on your computer is that what",
    "start": "4519480",
    "end": "4525120"
  },
  {
    "text": "here means I'm not sure I don't know nobody knows maybe I assumed it was whoever was like",
    "start": "4525120",
    "end": "4530719"
  },
  {
    "text": "I don't know if they made the change or something but I assume that at here at one point it was everyone in the channel",
    "start": "4530719",
    "end": "4536760"
  },
  {
    "text": "and then I don't know if they changed it so at here was whoever was active and in the channel that would make sense but I",
    "start": "4536760",
    "end": "4542679"
  },
  {
    "text": "don't know yeah active and in the channel which is probably like maybe like 5% of the people that are in the",
    "start": "4542679",
    "end": "4548679"
  },
  {
    "text": "channel yeah all right I'm going to give it a shot see see if anybody gets mad at me sorry if you're in the slack and",
    "start": "4548679",
    "end": "4554000"
  },
  {
    "text": "already listening you're going to oh 23 times see that's what scares me 787 people and 23 times zone are you",
    "start": "4554000",
    "end": "4560800"
  },
  {
    "text": "sure it's like it's tough it is tough yeah send it they should have at Channel with",
    "start": "4560800",
    "end": "4566800"
  },
  {
    "text": "reasonable TZ you know like yeah exactly downscaled Varian oh yeah that's true",
    "start": "4566800",
    "end": "4573679"
  },
  {
    "text": "it's like the lowkey at Channel cuz here doesn't work right here literally requires that they've been active and",
    "start": "4573679",
    "end": "4579960"
  },
  {
    "text": "and they active they already got the message so yeah right all right well I went for for it uh if you got that cool",
    "start": "4579960",
    "end": "4587159"
  },
  {
    "text": "and you're mad at us then uh I guess leave the JS party chat room and you won't get the next one this would be a a",
    "start": "4587159",
    "end": "4593920"
  },
  {
    "text": "cool slack integration to be honest because you could say like I said message everyone that is not currently",
    "start": "4593920",
    "end": "4600520"
  },
  {
    "text": "active that is in a reasonable time zone yeah that's true yeah and then you have",
    "start": "4600520",
    "end": "4605560"
  },
  {
    "text": "to have some sort of definition of reasonable maybe it's like you know like work hours business hours yeah yeah like",
    "start": "4605560",
    "end": "4612719"
  },
  {
    "text": "uh 8:00 a.m. to 8:00 p.m. or something even like you know not sleepy time basically all right well based on",
    "start": "4612719",
    "end": "4619480"
  },
  {
    "text": "whatever you set your hours to be I guess because you can do that slack oh you can yeah yeah you can set hours I",
    "start": "4619480",
    "end": "4626600"
  },
  {
    "text": "mean I do that for work just so that I don't get notifications past the so that's why also I feel confident",
    "start": "4626600",
    "end": "4633280"
  },
  {
    "text": "about at Channel too because yeah I think most people should have that setting I even think that it might be a default",
    "start": "4633280",
    "end": "4639239"
  },
  {
    "text": "now okay cool yeah",
    "start": "4639239",
    "end": "4645520"
  },
  {
    "text": "break it up and the guy in red say what I Bre",
    "start": "4645520",
    "end": "4651840"
  },
  {
    "text": "Bre",
    "start": "4653040",
    "end": "4656040"
  }
]