[
  {
    "text": "bandwidth for change log is provided by fastly learn more at fastly.com and",
    "start": "120",
    "end": "5920"
  },
  {
    "text": "we're hosted on Leno servers head to lin.com",
    "start": "5920",
    "end": "10920"
  },
  {
    "text": "changelog this episode is brought to you by lenoe our Cloud Server of choice",
    "start": "11599",
    "end": "16840"
  },
  {
    "text": "everything we do here at change log is hosted on Leno servers pick a plan pick a drro and pick a location and in",
    "start": "16840",
    "end": "23439"
  },
  {
    "text": "seconds deploy your virtual server dual worthy Hardware SSD cloud storage 40",
    "start": "23439",
    "end": "30039"
  },
  {
    "text": "gbit Network Intel E5 processors simple easy control panel nine data centers",
    "start": "30039",
    "end": "36399"
  },
  {
    "text": "three regions anywhere in the world they've got you covered head to low.com",
    "start": "36399",
    "end": "41440"
  },
  {
    "text": "changelog and get $20 in hosting [Music]",
    "start": "41440",
    "end": "50100"
  },
  {
    "text": "credit from change log media you're listening to the change log a podcast featuring the hackers leaders and",
    "start": "50520",
    "end": "57640"
  },
  {
    "text": "innovators of Open Source I I'm Adam stovak editor-in chief of change log on",
    "start": "57640",
    "end": "63640"
  },
  {
    "text": "this episode we talk with Yan shling about graphql an application layer career language from Facebook we talked",
    "start": "63640",
    "end": "69600"
  },
  {
    "text": "about what it is where it makes sense to use it its role in serverless architectures getting docs for free via",
    "start": "69600",
    "end": "75680"
  },
  {
    "text": "schemas and types and the community that's rallying around this new way to think about",
    "start": "75680",
    "end": "81230"
  },
  {
    "text": "[Music] apis all right we're back talking about",
    "start": "81230",
    "end": "88200"
  },
  {
    "text": "something very cool Jared something that we have not quite talked about on the show although when we talked to the",
    "start": "88200",
    "end": "93720"
  },
  {
    "text": "people from Facebook we kind of coordinated this call but it's been like forever and we're not even talking to",
    "start": "93720",
    "end": "99040"
  },
  {
    "text": "them yeah it's been a couple of years uh since Facebook announced graphql back in",
    "start": "99040",
    "end": "105040"
  },
  {
    "text": "2014 I believe in fact nope September 2015 if I just would have looked at the notes I would have got that the first",
    "start": "105040",
    "end": "111280"
  },
  {
    "text": "time but since then people have gotten quite excited about it and we are joined",
    "start": "111280",
    "end": "116680"
  },
  {
    "text": "today by a fellow who is so excited about it he even has a company graph cool Great Name by the way yannes",
    "start": "116680",
    "end": "124000"
  },
  {
    "text": "all about graphql and serverless and providing uh really hosting and options",
    "start": "124000",
    "end": "130200"
  },
  {
    "text": "for people who are using this uh technology so first of all johannas thanks so much for joining us yeah",
    "start": "130200",
    "end": "136360"
  },
  {
    "text": "thanks for having me so everybody's getting excited about graphql seems like for different reasons um others are",
    "start": "136360",
    "end": "142080"
  },
  {
    "text": "still uh skeptically standing on the sidelines but you as we just said are kind of all in on it so first of all",
    "start": "142080",
    "end": "149080"
  },
  {
    "text": "tell the audience what graphql is in your words and then tell us why you're so excited uh sure so uh graphql in",
    "start": "149080",
    "end": "158040"
  },
  {
    "text": "abstract words is a query language for your API what that really means is if you're a frontend developer you probably",
    "start": "158040",
    "end": "165200"
  },
  {
    "text": "used to using restful apis which is kind of like the the best practice of the",
    "start": "165200",
    "end": "170280"
  },
  {
    "text": "last last 10 years um and you can kind of think about graph L as a better",
    "start": "170280",
    "end": "175319"
  },
  {
    "text": "replacement for that in most cases so um as you're query a rest API you're usually getting back",
    "start": "175319",
    "end": "182640"
  },
  {
    "text": "Jason of a certain shape and you can think about graph as basically you s",
    "start": "182640",
    "end": "188799"
  },
  {
    "text": "you're sending a query to the server with just the shape of the Json but",
    "start": "188799",
    "end": "194280"
  },
  {
    "text": "without the values so kind of like a Json blob but just the keys without the values and the server fills in the",
    "start": "194280",
    "end": "201120"
  },
  {
    "text": "values for you um and if you can't take this concept you can directly tell the",
    "start": "201120",
    "end": "206599"
  },
  {
    "text": "server the shape of the data You're Expecting and you can do queries to get",
    "start": "206599",
    "end": "212799"
  },
  {
    "text": "data and you ask for what you want and you get predictable results um and you can even Traverse your entire data of",
    "start": "212799",
    "end": "220200"
  },
  {
    "text": "your back end in in a certain way um and you get a lot of flexibility you wouldn't be able to get with a common",
    "start": "220200",
    "end": "226840"
  },
  {
    "text": "rest API so that's maybe a a quick way to describe graph from a from a front",
    "start": "226840",
    "end": "233319"
  },
  {
    "text": "end perspective so the big wins are reduced number of calls to the API because you",
    "start": "233319",
    "end": "240120"
  },
  {
    "text": "don't have to make subsequent requests for related objects or records as well",
    "start": "240120",
    "end": "246480"
  },
  {
    "text": "as the flexibility to grab exactly what you need and nothing more so reduced",
    "start": "246480",
    "end": "252720"
  },
  {
    "text": "payload size exactly exactly flexibility and so therefore speed right exactly so",
    "start": "252720",
    "end": "259440"
  },
  {
    "text": "these two problems you uh you called out um are actually called data over fetching so imagine you have uh you're",
    "start": "259440",
    "end": "266680"
  },
  {
    "text": "starting out building building an app and you you have a rest API for that and the IOS app has quite a lot of different",
    "start": "266680",
    "end": "274080"
  },
  {
    "text": "requirements and you keep adding stuff to this end point you also start building an Android app which doesn't",
    "start": "274080",
    "end": "280400"
  },
  {
    "text": "have all of these data requirements and it um anyway gets all of the data constantly over the wire and fetch maybe",
    "start": "280400",
    "end": "287720"
  },
  {
    "text": "60 70% more data than it actually needs um so the other idea is to keep the rest",
    "start": "287720",
    "end": "293680"
  },
  {
    "text": "end points really Slim and so let's say you build like a like an Instagram and",
    "start": "293680",
    "end": "299560"
  },
  {
    "text": "you have uh your feed with all of the images but for every image you also want to get uh the the author object like",
    "start": "299560",
    "end": "306120"
  },
  {
    "text": "like the person and let's say you want to do that for 100 images what you would",
    "start": "306120",
    "end": "311280"
  },
  {
    "text": "end up doing is sending 101 requests one for the for the list of images and 100",
    "start": "311280",
    "end": "318720"
  },
  {
    "text": "for uh each person and this is like the the classical n plus1 CW problem and",
    "start": "318720",
    "end": "325039"
  },
  {
    "text": "both of these problems are are solved with grafl so going to the n plus1 query",
    "start": "325039",
    "end": "330600"
  },
  {
    "text": "problem um with rest interfaces with Json you know with like the Json API",
    "start": "330600",
    "end": "336000"
  },
  {
    "text": "spec and stuff like this there are solutions for this such as side loading Associated records um without having to",
    "start": "336000",
    "end": "342479"
  },
  {
    "text": "create multiple queries so I think that isn't that sufficient for many",
    "start": "342479",
    "end": "347720"
  },
  {
    "text": "people um yes but graph gives you a lot of nice other things on top and it does",
    "start": "347720",
    "end": "355120"
  },
  {
    "text": "that by at the same time being really really simple so the the the way graphql",
    "start": "355120",
    "end": "360319"
  },
  {
    "text": "actually works is that graphql gives you a type system as your discoverable",
    "start": "360319",
    "end": "365840"
  },
  {
    "text": "endpoint so for for Json API you would still have all of these all of these",
    "start": "365840",
    "end": "371440"
  },
  {
    "text": "endpoints uh with graph K on the other side uh you have this one end point",
    "start": "371440",
    "end": "376880"
  },
  {
    "text": "where you can write your your queries to and you just have a really simple and",
    "start": "376880",
    "end": "382280"
  },
  {
    "text": "concise syntax so um I think if you're if you're already heavily invested into",
    "start": "382280",
    "end": "388720"
  },
  {
    "text": "Chason API um then that's probably fine for for most of your use cases but graph is just",
    "start": "388720",
    "end": "395960"
  },
  {
    "text": "has a way lower entry barrier and uh provides a lot of great tooling which",
    "start": "395960",
    "end": "402160"
  },
  {
    "text": "all revolves around this this type system of the graphical language uh and",
    "start": "402160",
    "end": "407280"
  },
  {
    "text": "this allows for for tools such as um graphical or graphical playground uh",
    "start": "407280",
    "end": "413240"
  },
  {
    "text": "which gives you it's basically like a little IDE for writing graphical queries",
    "start": "413240",
    "end": "418560"
  },
  {
    "text": "uh which gives you autoc completion and um error detection if there is an an",
    "start": "418560",
    "end": "423840"
  },
  {
    "text": "error in your in your query and all of this tooling um just revolves around the",
    "start": "423840",
    "end": "429520"
  },
  {
    "text": "simple standard of graph K so he mentioned back that Facebook announced that they had actually been running",
    "start": "429520",
    "end": "435199"
  },
  {
    "text": "graphql internally for a couple of years before creating the open source well creating the specification as well as",
    "start": "435199",
    "end": "442479"
  },
  {
    "text": "open sourcing the reference implementation in JavaScript that was September 2015 uh about a year later get",
    "start": "442479",
    "end": "449560"
  },
  {
    "text": "announced that they're switching to graphql for the public API uh September 2016 I got a quick paragraph from the",
    "start": "449560",
    "end": "455960"
  },
  {
    "text": "GitHub announcement on the GitHub engineering blog that I think will give a real example of what you're talking",
    "start": "455960",
    "end": "461240"
  },
  {
    "text": "about Johannes with regards to uh the query problem the the too many API calls",
    "start": "461240",
    "end": "466680"
  },
  {
    "text": "so they said that the rest API is responsible for over 60% of GitHub requests made to their database tier",
    "start": "466680",
    "end": "474440"
  },
  {
    "text": "this is partly because by its nature hyper media navigation requires a client to repeatedly communicate with a server",
    "start": "474440",
    "end": "480560"
  },
  {
    "text": "so it can get all the information it needs our responses were bloated and filled with all sorts of starcore URL",
    "start": "480560",
    "end": "487720"
  },
  {
    "text": "hints and the Json responses to help people continue to navigate through the API to get what they needed despite all",
    "start": "487720",
    "end": "493840"
  },
  {
    "text": "the information we provided we heard from integrators that our rest API also wasn't very flexible it sometimes",
    "start": "493840",
    "end": "499159"
  },
  {
    "text": "required two or three separate calls to assemble a complete view of a resource it seemed like our responses",
    "start": "499159",
    "end": "504400"
  },
  {
    "text": "simultaneously sent too much data and didn't include data that consumers needed now earlier on I said if if you",
    "start": "504400",
    "end": "512159"
  },
  {
    "text": "can Sid load relationships you can get around some of the problems of the you too many API",
    "start": "512159",
    "end": "517719"
  },
  {
    "text": "calls but that requires you to have a very intimate understanding of the client that's accessing the API and when",
    "start": "517719",
    "end": "524880"
  },
  {
    "text": "you're building a general purpose API for many different clients like you said with regards to an Android client iOS",
    "start": "524880",
    "end": "530560"
  },
  {
    "text": "client so on um you just don't have that level of flexibility you have to be generic and so um in those cases rest",
    "start": "530560",
    "end": "539480"
  },
  {
    "text": "just wasn't a great fit anything to add there is that is that a a decent real world example of of",
    "start": "539480",
    "end": "545440"
  },
  {
    "text": "what you're talking about uh absolutely absolutely and I'm not sure whether that was the statement from uh this Monday or",
    "start": "545440",
    "end": "553079"
  },
  {
    "text": "from a year ago but I think this Monday actually like the the graph girl GitHub",
    "start": "553079",
    "end": "558240"
  },
  {
    "text": "API was officially released and it's no longer in in alpha or or developer",
    "start": "558240",
    "end": "563800"
  },
  {
    "text": "access this this post I'm reading here was was last year this was their announcement and I beta or you know that",
    "start": "563800",
    "end": "571000"
  },
  {
    "text": "they were basically going to make this switch but they hadn't they hadn't completed it yet right yeah um so I I've",
    "start": "571000",
    "end": "576320"
  },
  {
    "text": "spoken to to Brooks who um who works at GitHub and um we actually had him over",
    "start": "576320",
    "end": "582040"
  },
  {
    "text": "last weekend at Graal Europe a conference we were hosting uh about grafl and he was giving a talk about how",
    "start": "582040",
    "end": "589640"
  },
  {
    "text": "GitHub was moving to graph and gave a motivation around all of this and it was",
    "start": "589640",
    "end": "595040"
  },
  {
    "text": "really insightful and such a great fit for like like you said it provides so much flexibility this API and I think",
    "start": "595040",
    "end": "602240"
  },
  {
    "text": "it's a it's a great introduction for people who want to um dive a bit into graph and see like why why is this",
    "start": "602240",
    "end": "608720"
  },
  {
    "text": "actually useful and there they have a a brilliant example so with graphql you have a",
    "start": "608720",
    "end": "616120"
  },
  {
    "text": "schema that's exposed uh from the API side can you tell us about the schema and what it all includes right um so the",
    "start": "616120",
    "end": "624360"
  },
  {
    "text": "the schema you basically you have a server that exposes uh the schema",
    "start": "624360",
    "end": "629760"
  },
  {
    "text": "so the schema therefore represents a type system you have multiple ways to",
    "start": "629760",
    "end": "635040"
  },
  {
    "text": "provide that so usually you do that through a server so the server you could implement it uh on on your own was like",
    "start": "635040",
    "end": "642480"
  },
  {
    "text": "there there are multiple ways to to build a uh graph server in in any language you can uh use uh an Express",
    "start": "642480",
    "end": "650560"
  },
  {
    "text": "app in node uh you can build it in Python you can build it uh in Scala",
    "start": "650560",
    "end": "656079"
  },
  {
    "text": "there are also a couple of services out there which help you to set a graphical",
    "start": "656079",
    "end": "661360"
  },
  {
    "text": "back end and um yeah we we are for example uh providing one where the",
    "start": "661360",
    "end": "667000"
  },
  {
    "text": "process around turning your graph schema into an actual graph API is literally",
    "start": "667000",
    "end": "673480"
  },
  {
    "text": "you're specifying your graph schema in something that's called the",
    "start": "673480",
    "end": "678600"
  },
  {
    "text": "graph the schema definition language so if you're if you're heading over to graph go.org you actually see in the",
    "start": "678600",
    "end": "685959"
  },
  {
    "text": "header um where it says describe your data you're seeing a very concise syntax",
    "start": "685959",
    "end": "691680"
  },
  {
    "text": "of a part of your schema so you basically if you if you're familiar with",
    "start": "691680",
    "end": "697000"
  },
  {
    "text": "typed languages like Swift or typescript or something like that and you're writing out your your type definitions",
    "start": "697000",
    "end": "703600"
  },
  {
    "text": "that's basically uh what you can do for for graph girl as well and these type",
    "start": "703600",
    "end": "708760"
  },
  {
    "text": "definitions are the foundation for your graph girl schema what's really cool about that is",
    "start": "708760",
    "end": "714440"
  },
  {
    "text": "because you're defining the schema with the type definitions and everything that's supported",
    "start": "714440",
    "end": "719480"
  },
  {
    "text": "um you get basically free and up to-date docs all the time right because that's",
    "start": "719480",
    "end": "724519"
  },
  {
    "text": "basically what you're writing exactly and there there there's so much great tooling around that and the the type",
    "start": "724519",
    "end": "730560"
  },
  {
    "text": "definition is really the the foundation for that so um like that's probably one of the biggest aha moments for people",
    "start": "730560",
    "end": "737240"
  },
  {
    "text": "getting into graph is trying out this graph playground or this graph graphical",
    "start": "737240",
    "end": "743399"
  },
  {
    "text": "editor where you see all of this Auto completion and you can toggle automatic documentation for your API and you don't",
    "start": "743399",
    "end": "750320"
  },
  {
    "text": "need to maintain uh a Swagger documentation all of that so uh that's",
    "start": "750320",
    "end": "755399"
  },
  {
    "text": "really like a completely new level of what you would get out of swagger for",
    "start": "755399",
    "end": "761880"
  },
  {
    "text": "example what are the drawbacks because right now it sounds like you know unicorns and rainbows all over the place",
    "start": "761880",
    "end": "767800"
  },
  {
    "text": "there has to be with all Technologies there are trade-offs what are some of the drawbacks but uh I mean there uh this",
    "start": "767800",
    "end": "774440"
  },
  {
    "text": "this is a fairly big unicorn so uh one of one of the",
    "start": "774440",
    "end": "780839"
  },
  {
    "text": "um so I've actually like I think I can list the the drawbacks like I don't even",
    "start": "781120",
    "end": "789240"
  },
  {
    "text": "need one hand for that um so there are a couple of weird cases but these are",
    "start": "789240",
    "end": "795440"
  },
  {
    "text": "really exotic and don't really occur in in the real world um so the the biggest",
    "start": "795440",
    "end": "801120"
  },
  {
    "text": "push back we got from people is when they say hey my API is really really simple so it's just an endo that exposes",
    "start": "801120",
    "end": "808360"
  },
  {
    "text": "Maybe fields and there it's like I'm always expecting the same thing from",
    "start": "808360",
    "end": "813839"
  },
  {
    "text": "this API and it's not really complex and this is where we hear people saying um",
    "start": "813839",
    "end": "821440"
  },
  {
    "text": "it's it might be Overkill to use gra kill um and in these cases if they already have their rest API that's",
    "start": "821440",
    "end": "827279"
  },
  {
    "text": "probably fine but as soon as your application really starts to to grow and you have multiple like from a rest World",
    "start": "827279",
    "end": "834079"
  },
  {
    "text": "Resources this becomes uh more complicated graphical is really um like",
    "start": "834079",
    "end": "840360"
  },
  {
    "text": "it has almost zero overhead for you to um to to implement on the backend side",
    "start": "840360",
    "end": "846639"
  },
  {
    "text": "and there aren't really any any obvious uh downsides I mean of course you have",
    "start": "846639",
    "end": "852320"
  },
  {
    "text": "to like it's usually when you want to start something from scratch you're usually going with what you already know",
    "start": "852320",
    "end": "859759"
  },
  {
    "text": "and uh graph is not yet um as well established as the rest standard for",
    "start": "859759",
    "end": "866880"
  },
  {
    "text": "example but I think it's literally just a matter of time until people realize",
    "start": "866880",
    "end": "872120"
  },
  {
    "text": "it's actually simpler to build Graal apis compared to rest apis and definitely maintaining them and so on I",
    "start": "872120",
    "end": "878639"
  },
  {
    "text": "can speak a little bit to the learning curve because uh as we were telling yanas before the call neither Adam nor I",
    "start": "878639",
    "end": "884839"
  },
  {
    "text": "have used graphql in any sort of significant way um but I did go through learn graphql docomo notes which is a",
    "start": "884839",
    "end": "893199"
  },
  {
    "text": "very nice tutorial um and probably 30 45 minutes with that and I already felt",
    "start": "893199",
    "end": "898360"
  },
  {
    "text": "like oh okay I get it I'm I'm good here I could probably you know uh take this",
    "start": "898360",
    "end": "903880"
  },
  {
    "text": "and run with it now I wasn't trying to achieve anything uh real so that's the real test but at least the concepts and",
    "start": "903880",
    "end": "911880"
  },
  {
    "text": "the formatting if you're used to Json and JavaScript and fun you know things like that it's it is pretty easy to",
    "start": "911880",
    "end": "918920"
  },
  {
    "text": "conceptually wrap around your head from the client side yeah and and that's the",
    "start": "918920",
    "end": "924000"
  },
  {
    "text": "beauty of graph L it's so simple to to understand it fairly quickly",
    "start": "924000",
    "end": "929120"
  },
  {
    "text": "um but at the same time like now that we've using graph go for more than two years there are constantly new points",
    "start": "929120",
    "end": "935800"
  },
  {
    "text": "where we have like brilliant aha moments where the Simplicity of GRA enables",
    "start": "935800",
    "end": "941440"
  },
  {
    "text": "completely new Concepts so it's really well thought out and was very much worth",
    "start": "941440",
    "end": "947160"
  },
  {
    "text": "it to stay internally at Facebook for for five years until it's uh really",
    "start": "947160",
    "end": "952480"
  },
  {
    "text": "evolve to what it is today and uh really the the Simplicity um is what makes makes it so",
    "start": "952480",
    "end": "959279"
  },
  {
    "text": "easy to understand and it's so welld designed that it enables so many different scenarios one drawback that",
    "start": "959279",
    "end": "966759"
  },
  {
    "text": "I've heard and I can't validate this so I'm going to ask it to you is that because every API call is a unique",
    "start": "966759",
    "end": "975920"
  },
  {
    "text": "snowflake that it's darn near impossible to have an efficient caching strategy on the server side is that something that",
    "start": "975920",
    "end": "983360"
  },
  {
    "text": "You' run into or is that a non-issue that's a very good point so um",
    "start": "983360",
    "end": "988880"
  },
  {
    "text": "is definitely um a new paradigm how you expose your API and uh I mean that's the",
    "start": "988880",
    "end": "995519"
  },
  {
    "text": "entire idea of rest apis that you have like on a resource level that you can um",
    "start": "995519",
    "end": "1000600"
  },
  {
    "text": "do uh HTP caching and so on um so that is uh you cannot directly transfer that",
    "start": "1000600",
    "end": "1007680"
  },
  {
    "text": "concept uh to graph K so you need new uh new ways to cach and uh I agree that is",
    "start": "1007680",
    "end": "1014560"
  },
  {
    "text": "not as well as understood as rest apis for example currently are um but it this",
    "start": "1014560",
    "end": "1021040"
  },
  {
    "text": "allows for for new kind of Concepts so you can cach more on a data graph level",
    "start": "1021040",
    "end": "1027240"
  },
  {
    "text": "so there there's just a lot more still to be explored and that's definitely one one of the parts of how you build graph",
    "start": "1027240",
    "end": "1034319"
  },
  {
    "text": "servers where there's uh is a lot of movement currently I mean it's not",
    "start": "1034319",
    "end": "1039720"
  },
  {
    "text": "directly something that is just not possible it's just something where you have to wrap your mind around different",
    "start": "1039720",
    "end": "1045678"
  },
  {
    "text": "um that different I would think with less uh less queries less activity to the server you might actually be able to",
    "start": "1045679",
    "end": "1052960"
  },
  {
    "text": "save and maybe caching is less required because your server actually getting pinged a lot less exactly exactly and",
    "start": "1052960",
    "end": "1059840"
  },
  {
    "text": "you you can basically how you assemble the response of a graph C query is entirely up to you and you can cach it",
    "start": "1059840",
    "end": "1066559"
  },
  {
    "text": "in whatever way you want so usually the graph L queries you're getting are fairly fairly similar so you can do",
    "start": "1066559",
    "end": "1073559"
  },
  {
    "text": "quite a lot of efficient caching and if your U data structures and if if the",
    "start": "1073559",
    "end": "1078880"
  },
  {
    "text": "nature of your data allows for it then you can even cach the normal HTTP",
    "start": "1078880",
    "end": "1083960"
  },
  {
    "text": "requests which are coming in so that's maybe also worth mentioning that um graph is uh from the standard on its own",
    "start": "1083960",
    "end": "1092440"
  },
  {
    "text": "independent from the from the transport protocol being used so gra can be so",
    "start": "1092440",
    "end": "1098559"
  },
  {
    "text": "most commonly it is used by an HTTP uh transport but it's uh for example there",
    "start": "1098559",
    "end": "1104080"
  },
  {
    "text": "are also now newly the graphical subscriptions uh which are usually used",
    "start": "1104080",
    "end": "1109640"
  },
  {
    "text": "via um a web circuit connection but we we are aware of people who use uh graph",
    "start": "1109640",
    "end": "1116480"
  },
  {
    "text": "with binary transports and uh using a UDP stream for example so you can um",
    "start": "1116480",
    "end": "1123200"
  },
  {
    "text": "whatever transport protocol you're using you can also do a lot of uh clever",
    "start": "1123200",
    "end": "1128320"
  },
  {
    "text": "tricks there yeah that's definitely worth mentioning that where that sits in the networking stack is at the",
    "start": "1128320",
    "end": "1133679"
  },
  {
    "text": "application layer um so thinking about it in terms of rest you know rest",
    "start": "1133679",
    "end": "1139039"
  },
  {
    "text": "semantics use HTTP uh even verbs right get post put or",
    "start": "1139039",
    "end": "1145760"
  },
  {
    "text": "patch if you will and delete um when you're using",
    "start": "1145760",
    "end": "1151039"
  },
  {
    "text": "graphql with an HTTP underneath it are you just you just pick using gets getting post how does it actually does",
    "start": "1151039",
    "end": "1157280"
  },
  {
    "text": "it matter how you communicate at that layer um so it's mostly up to you but",
    "start": "1157280",
    "end": "1162840"
  },
  {
    "text": "the the best that is a definite best practice and that is usually that you send everything whilea post request um",
    "start": "1162840",
    "end": "1170000"
  },
  {
    "text": "and in this post request you're usually sending a Jason encoded payload and this Jason encoded payload at minimum Has a",
    "start": "1170000",
    "end": "1178400"
  },
  {
    "text": "Field called query where you're literally sending your graph query additionally there's also the concept of",
    "start": "1178400",
    "end": "1185559"
  },
  {
    "text": "variables where you can parameterize your query with with variables you can pass over um and yeah",
    "start": "1185559",
    "end": "1193520"
  },
  {
    "text": "that's basically what you're sending over and you just get Jason back so that that is kind of like the the best",
    "start": "1193520",
    "end": "1199000"
  },
  {
    "text": "practice being used in 99% of [Music]",
    "start": "1199000",
    "end": "1211400"
  },
  {
    "text": "cases coming up after the break we're going to talk about mutating data how you go about changing data with graphql",
    "start": "1211400",
    "end": "1217880"
  },
  {
    "text": "mutations authentication and permissions and the role of graph cool and how it's aiming to be your favorite serverless",
    "start": "1217880",
    "end": "1224840"
  },
  {
    "text": "graphql back end stick around [Music]",
    "start": "1224840",
    "end": "1237549"
  },
  {
    "text": "this episode is brought to you by hired hired matches outstanding people with the world's most Innovative companies at",
    "start": "1238120",
    "end": "1245600"
  },
  {
    "text": "hired your dream job is waiting to apply to you instead of endlessly applying to",
    "start": "1245600",
    "end": "1250799"
  },
  {
    "text": "companies hoping for the best hired puts you in control of when and how you connect with interesting opportunities",
    "start": "1250799",
    "end": "1257679"
  },
  {
    "text": "the best part is hired is completely free to you it won't cost you anything in fact they pay you to get hired head",
    "start": "1257679",
    "end": "1265240"
  },
  {
    "text": "to hire.com changelog don't Google it this URL is the only way to double the hiring bonus to $600 once again go to",
    "start": "1265240",
    "end": "1273320"
  },
  {
    "text": "hired.com SL change log and back to the [Music]",
    "start": "1273320",
    "end": "1287039"
  },
  {
    "text": "show johanes we talked about fetching data",
    "start": "1287039",
    "end": "1292480"
  },
  {
    "text": "the advantages there the Simplicity we haven't talked about um mutating data so why don't you give us the quick rundown",
    "start": "1292480",
    "end": "1298279"
  },
  {
    "text": "and we'll go from there exactly so um yeah that these are basically the two big concepts of GRA KL one is querying",
    "start": "1298279",
    "end": "1305039"
  },
  {
    "text": "data what we talked about uh in the first section so the the other big part",
    "start": "1305039",
    "end": "1310480"
  },
  {
    "text": "is how you actually write data how you update data um and that's called graph C",
    "start": "1310480",
    "end": "1315640"
  },
  {
    "text": "mutations so that's uh from a resp perspective that's kind of the equivalent of put post delete patch um",
    "start": "1315640",
    "end": "1323039"
  },
  {
    "text": "and yeah these sort of works so the idea of a of a graph mutation is basically a",
    "start": "1323039",
    "end": "1328880"
  },
  {
    "text": "graph schema exposes mutations you can kind of think about them as uh remote",
    "start": "1328880",
    "end": "1335039"
  },
  {
    "text": "function calls um so they expect some arguments so for example if you're",
    "start": "1335039",
    "end": "1340360"
  },
  {
    "text": "building this Instagram app and we want to create a new image we would need to",
    "start": "1340360",
    "end": "1346039"
  },
  {
    "text": "um provide like a a description for for the image and maybe the image URL so you",
    "start": "1346039",
    "end": "1351760"
  },
  {
    "text": "and all of these arguments are typed um so you need to provide them and you can also for every mutation it also exposes",
    "start": "1351760",
    "end": "1359679"
  },
  {
    "text": "a view into your graph so you can while running the mutation you can also already query back data so for example",
    "start": "1359679",
    "end": "1366960"
  },
  {
    "text": "as you're creating this new uh image you might want to get its ID back and um",
    "start": "1366960",
    "end": "1373559"
  },
  {
    "text": "some some other information so um a mutation is really a mutation plus a",
    "start": "1373559",
    "end": "1379440"
  },
  {
    "text": "query um and yeah this is basically the the concept of a mutation it's it's as",
    "start": "1379440",
    "end": "1384919"
  },
  {
    "text": "simple as as queries are and this is how you can Implement any sort of writing",
    "start": "1384919",
    "end": "1390880"
  },
  {
    "text": "operations so whatever mutates your your back end you would do through amutation",
    "start": "1390880",
    "end": "1396600"
  },
  {
    "text": "and once again because it's part of that schema it's all explorable it's all documented it's all very clear exactly",
    "start": "1396600",
    "end": "1403440"
  },
  {
    "text": "yeah what about if you want to mutate a host of things all at once um it's basically up to you how you design your",
    "start": "1403440",
    "end": "1410960"
  },
  {
    "text": "mutations so uh whatever fits your use case um you can um design mutations that",
    "start": "1410960",
    "end": "1417640"
  },
  {
    "text": "do that so for example if you have a more complicated piece of business logic",
    "start": "1417640",
    "end": "1422880"
  },
  {
    "text": "in your back end so for example if you're building a web shop and you have a checkout process that usually does",
    "start": "1422880",
    "end": "1428919"
  },
  {
    "text": "more than just one thing so you would create a mutation that does exactly that",
    "start": "1428919",
    "end": "1434559"
  },
  {
    "text": "and your implementation would take care of all of the implementation steps so it would maybe uh create an order object it",
    "start": "1434559",
    "end": "1442240"
  },
  {
    "text": "would maybe uh transform like a list of items into a representation that fits",
    "start": "1442240",
    "end": "1448000"
  },
  {
    "text": "your your web shop like order items and so on so it B it could basically do",
    "start": "1448000",
    "end": "1453520"
  },
  {
    "text": "whatever you you want your imitation to do and you expose it in a very minimal",
    "start": "1453520",
    "end": "1458880"
  },
  {
    "text": "way to the front end so what about permissions and",
    "start": "1458880",
    "end": "1464799"
  },
  {
    "text": "authorizations and stuff if you're having this you know kind of an ad hoc put your query together API but you want",
    "start": "1464799",
    "end": "1471720"
  },
  {
    "text": "to provide different access for different clients is that something that's built into graphql or is that",
    "start": "1471720",
    "end": "1478039"
  },
  {
    "text": "something you'd have to go out on your own and figure out how to get that done right uh really good question so um I",
    "start": "1478039",
    "end": "1485120"
  },
  {
    "text": "think we we should talk about both things uh the first is authentication um and going back to your",
    "start": "1485120",
    "end": "1492080"
  },
  {
    "text": "last question um neither of these concepts are directly built into graph girl but it's so flexible that you can",
    "start": "1492080",
    "end": "1498600"
  },
  {
    "text": "basically use whatever concept you you want to use you can use with gra um so",
    "start": "1498600",
    "end": "1505120"
  },
  {
    "text": "every authentication mechanism you would have for your rest API you can more or less directly translate uh to your graph",
    "start": "1505120",
    "end": "1512520"
  },
  {
    "text": "API so um best practice for authentication in in graph apis is that",
    "start": "1512520",
    "end": "1519840"
  },
  {
    "text": "you have some sort of mutation um that authenticates you as Anonymous user as a",
    "start": "1519840",
    "end": "1527720"
  },
  {
    "text": "authenticated user so maybe you you're sending back some some kind of session token and the session token you might",
    "start": "1527720",
    "end": "1534640"
  },
  {
    "text": "send back uh for every subsequent request through authorization header so",
    "start": "1534640",
    "end": "1540559"
  },
  {
    "text": "this is a really simple way to implement authentication uh for for gra L apis but",
    "start": "1540559",
    "end": "1546640"
  },
  {
    "text": "you can also like use HTTP basic o or however you want to go about that so",
    "start": "1546640",
    "end": "1552440"
  },
  {
    "text": "that's completely up to you um and authorization is basically the the same",
    "start": "1552440",
    "end": "1557880"
  },
  {
    "text": "story um it's up to the backend how you would Implement that um so but",
    "start": "1557880",
    "end": "1564279"
  },
  {
    "text": "additionally to rest API where you would usually just do authorization based on a",
    "start": "1564279",
    "end": "1569559"
  },
  {
    "text": "on a resource and endpoint level uh with scl you can go a step further and you",
    "start": "1569559",
    "end": "1575520"
  },
  {
    "text": "can um do field-based authorization rules so um for example if you want to",
    "start": "1575520",
    "end": "1583000"
  },
  {
    "text": "query a user maybe you are allowed to to see the user's name name but not the",
    "start": "1583000",
    "end": "1588520"
  },
  {
    "text": "email address and certainly not the hash password so and there you can basically",
    "start": "1588520",
    "end": "1593600"
  },
  {
    "text": "on a field level Implement authorization rules what you can see and what you cannot see um and yeah so this is",
    "start": "1593600",
    "end": "1601480"
  },
  {
    "text": "usually where it gets uh as far every backend really gets fairly tricky how",
    "start": "1601480",
    "end": "1606559"
  },
  {
    "text": "you implement um permission rules and this is something where we at graph cool",
    "start": "1606559",
    "end": "1611720"
  },
  {
    "text": "we're we're pretty excited about the the way we've found to expose a level of",
    "start": "1611720",
    "end": "1617200"
  },
  {
    "text": "abstraction for authorization rules with our permission system so this is one of the",
    "start": "1617200",
    "end": "1622320"
  },
  {
    "text": "the voids where graph cool or similar services are you're offering some solutions to these things which it's you",
    "start": "1622320",
    "end": "1629799"
  },
  {
    "text": "know there's six dozen ways to skin the cat right because like you said it's not in the specification so it's up to the",
    "start": "1629799",
    "end": "1636760"
  },
  {
    "text": "individual API or the individual implementation to figure out how to do it and so you guys are providing some of",
    "start": "1636760",
    "end": "1643039"
  },
  {
    "text": "that stuff out of the box for graph cool users is that right exactly so um and",
    "start": "1643039",
    "end": "1648799"
  },
  {
    "text": "that's actually one of the biggest steps how we see ourselves as a as a next step",
    "start": "1648799",
    "end": "1654679"
  },
  {
    "text": "in the evolution of of backend services so if you think about poers or Firebase",
    "start": "1654679",
    "end": "1660600"
  },
  {
    "text": "um you you have these concepts of ACL and and roles so that you can say like",
    "start": "1660600",
    "end": "1666880"
  },
  {
    "text": "um this user has the admin role and therefore this user is allowed to do X",
    "start": "1666880",
    "end": "1672360"
  },
  {
    "text": "but in in most real world applications that's way too minimal and that's",
    "start": "1672360",
    "end": "1677720"
  },
  {
    "text": "doesn't allow you to implement your real application so what we basically allow",
    "start": "1677720",
    "end": "1683799"
  },
  {
    "text": "you to do is um you can specify any kind of authorization rules based on the",
    "start": "1683799",
    "end": "1690080"
  },
  {
    "text": "graph structure of your data so in in our Instagram example uh imagine you",
    "start": "1690080",
    "end": "1696080"
  },
  {
    "text": "have a author of a of a post of an image and just this author is allowed to",
    "start": "1696080",
    "end": "1701760"
  },
  {
    "text": "change the description or the image URL of of this post or every person has a",
    "start": "1701760",
    "end": "1709120"
  },
  {
    "text": "lot of followers and uh maybe this following needs to be accepted and then",
    "start": "1709120",
    "end": "1715440"
  },
  {
    "text": "just accepted followers are allowed to view images and all of these permission",
    "start": "1715440",
    "end": "1720519"
  },
  {
    "text": "rules are based on the information which is embedded in the graph structure of",
    "start": "1720519",
    "end": "1727039"
  },
  {
    "text": "your data schema and we basically give people give developers a way to",
    "start": "1727039",
    "end": "1733080"
  },
  {
    "text": "implement these permission rules in the form of graph queries which represents",
    "start": "1733080",
    "end": "1739519"
  },
  {
    "text": "uh permission Rules by just specifying these conditions with the Simplicity of",
    "start": "1739519",
    "end": "1744799"
  },
  {
    "text": "graphical queries so that sounds fairly abstract and you would certainly need to",
    "start": "1744799",
    "end": "1750519"
  },
  {
    "text": "like see a few examples but this is a really simple concept which allows you",
    "start": "1750519",
    "end": "1756360"
  },
  {
    "text": "to to specify any sort of permission rules so you mentioned Firebase and pars",
    "start": "1756360",
    "end": "1762799"
  },
  {
    "text": "and graphql is kind of a new spin on that same type of a service and those",
    "start": "1762799",
    "end": "1769080"
  },
  {
    "text": "are both services that got Acquired and are in various states of distrib part pars of course famously shut down seem",
    "start": "1769080",
    "end": "1775880"
  },
  {
    "text": "like a very good a good job of going about the shutdown in terms of people having time and getting their data out",
    "start": "1775880",
    "end": "1781080"
  },
  {
    "text": "and all that kind of thing um Firebase I'm not sure the status of Firebase I think it's still exists as is right it",
    "start": "1781080",
    "end": "1788320"
  },
  {
    "text": "it does exist and it's actually Google is putting a lot of money into it okay so getting better perhaps but um you",
    "start": "1788320",
    "end": "1795000"
  },
  {
    "text": "know Google could change their mind and shut Firebase off so you know for those who are thinking oh graph cool sounds",
    "start": "1795000",
    "end": "1801919"
  },
  {
    "text": "cool um but what if it disappears tomorrow that's always my concern what do you say to to that type of a right",
    "start": "1801919",
    "end": "1809159"
  },
  {
    "text": "question right um so that's actually one of the the most common questions we getting from people evaluating our",
    "start": "1809159",
    "end": "1815200"
  },
  {
    "text": "service and it makes a lot of sense and i' I'd ask the same question if if I would see a service like that um so I",
    "start": "1815200",
    "end": "1823039"
  },
  {
    "text": "think um one thing that pars has done particularly well is that everything",
    "start": "1823039",
    "end": "1828960"
  },
  {
    "text": "went open source and you can now run your own power server so people are who",
    "start": "1828960",
    "end": "1835480"
  },
  {
    "text": "were running on pars before can still get somewhat the same level but of course that's that's not perfect so what",
    "start": "1835480",
    "end": "1843159"
  },
  {
    "text": "graph really allows you to do and not just graph but the entire concept of serverless is that the entire service",
    "start": "1843159",
    "end": "1850519"
  },
  {
    "text": "we're building is based on open source Technologies so Firebase pars all of",
    "start": "1850519",
    "end": "1856480"
  },
  {
    "text": "these um all of these Services were built on proprietary software whereas",
    "start": "1856480",
    "end": "1861919"
  },
  {
    "text": "our service is just built on open source technology like a graph API and we allow",
    "start": "1861919",
    "end": "1868720"
  },
  {
    "text": "you to export we like not just for shutting down but uh like when you're signing up and you decide I don't want",
    "start": "1868720",
    "end": "1874919"
  },
  {
    "text": "to use this anymore I want to build my own thing you can export the entire schema you can export all the data and",
    "start": "1874919",
    "end": "1880679"
  },
  {
    "text": "you can roll it on your own so um this openness of these Technologies allow you",
    "start": "1880679",
    "end": "1886679"
  },
  {
    "text": "to migrate away and this is really something really important for us we don't want to um promote the concept of",
    "start": "1886679",
    "end": "1893799"
  },
  {
    "text": "when the login um we rather want to think about the concept of maximizing",
    "start": "1893799",
    "end": "1899080"
  },
  {
    "text": "developer experience so I mean it's a similar concept to what the guys at Expo",
    "start": "1899080",
    "end": "1905159"
  },
  {
    "text": "are for example doing um so they just make it really easy to to use these Technologies with direct native and so",
    "start": "1905159",
    "end": "1911679"
  },
  {
    "text": "on it's all open source uh you could build it on your own but with using",
    "start": "1911679",
    "end": "1916799"
  },
  {
    "text": "something like that it just maximizes the what you can get out of it it gives",
    "start": "1916799",
    "end": "1922480"
  },
  {
    "text": "you a better level of abstraction and that is really what our mission is about so you like how pars went open",
    "start": "1922480",
    "end": "1929559"
  },
  {
    "text": "source after acquisition is that you saying graph cool would do the same thing if you guys found yourselves in a",
    "start": "1929559",
    "end": "1935519"
  },
  {
    "text": "similar situation right um so I think it took pars uh a bit to to Really uh get",
    "start": "1935519",
    "end": "1943799"
  },
  {
    "text": "there so uh it didn't for example it didn't open source most things on day",
    "start": "1943799",
    "end": "1948960"
  },
  {
    "text": "one so it like was a lot of push back back and forth around which parts are",
    "start": "1948960",
    "end": "1954399"
  },
  {
    "text": "being open sourced until really uh most Parts got open source so that that is",
    "start": "1954399",
    "end": "1960120"
  },
  {
    "text": "one part of it uh so we've taken the same concept and um this is something",
    "start": "1960120",
    "end": "1965960"
  },
  {
    "text": "what really resonates with people um so we have this policy what we call the the sunset policy uh which basically says",
    "start": "1965960",
    "end": "1973240"
  },
  {
    "text": "whenever something would happen to our servers uh everything everything would just be be open source people can host",
    "start": "1973240",
    "end": "1979799"
  },
  {
    "text": "it on their own I mean everything internally is built on on open Technologies with with stalker and so on",
    "start": "1979799",
    "end": "1986960"
  },
  {
    "text": "um so people could host it on their own um and yeah uh needless to say we're not",
    "start": "1986960",
    "end": "1993399"
  },
  {
    "text": "planning to to shut down at any uh anytime soon and yeah we also we said no",
    "start": "1993399",
    "end": "1999519"
  },
  {
    "text": "to to every uh acquisition offer we got so far what uh what parts of the service",
    "start": "1999519",
    "end": "2005720"
  },
  {
    "text": "is proprietary I mean if you're built on only open source there got to be some sort of glue there and that's the",
    "start": "2005720",
    "end": "2011279"
  },
  {
    "text": "proprietary part that's not open source is can you talk about that a bit right um I mean that directly translates to",
    "start": "2011279",
    "end": "2018679"
  },
  {
    "text": "the to the value we are providing and is actually um directly rooted in the cause",
    "start": "2018679",
    "end": "2024519"
  },
  {
    "text": "of why we we started to build graph coal so as you're building your own backends",
    "start": "2024519",
    "end": "2029880"
  },
  {
    "text": "especially rest back ends uh you find yourself a lot in the situation where you just basically you want your API and",
    "start": "2029880",
    "end": "2037720"
  },
  {
    "text": "the API usually either gives you data out of a database or it receives data",
    "start": "2037720",
    "end": "2043440"
  },
  {
    "text": "and stores it in the database in some way so you're just building this mapping between uh your API and a database and",
    "start": "2043440",
    "end": "2052118"
  },
  {
    "text": "this is where you put a lot of time in it needs to evolve it needs to like it's very error prone it's not particularly",
    "start": "2052119",
    "end": "2058878"
  },
  {
    "text": "exciting but there are a lot of mistakes being made in this process and this is",
    "start": "2058879",
    "end": "2064280"
  },
  {
    "text": "something we wanted to just solve this problem um and graph is a perfect",
    "start": "2064280",
    "end": "2070000"
  },
  {
    "text": "foundation for that so based on your graph schema you specifying um locally",
    "start": "2070000",
    "end": "2077200"
  },
  {
    "text": "or on on our our platform with a with a graph schema we generate a graph API for",
    "start": "2077200",
    "end": "2083320"
  },
  {
    "text": "you with a managed database in in the back so where the the proprietary part",
    "start": "2083320",
    "end": "2089760"
  },
  {
    "text": "is and pro prioritary it's like there is nothing really secret about it it's just",
    "start": "2089760",
    "end": "2095240"
  },
  {
    "text": "a lot of uh complex we are abstracting away um and this is the mapping between the automatically",
    "start": "2095240",
    "end": "2102880"
  },
  {
    "text": "generated graphical L API and uh a scalable database so maybe this will be more",
    "start": "2102880",
    "end": "2109720"
  },
  {
    "text": "controversial and you know I don't understand your business nearly as well as you do but why not just silence all",
    "start": "2109720",
    "end": "2116880"
  },
  {
    "text": "questions and just go completely 100% open source similar like discourse where",
    "start": "2116880",
    "end": "2122520"
  },
  {
    "text": "you know everything that they do you can do yourself but you know you can also",
    "start": "2122520",
    "end": "2127680"
  },
  {
    "text": "use them as the host and they'll do all of the hard things for you is that a consideration or is that too scary or it",
    "start": "2127680",
    "end": "2134640"
  },
  {
    "text": "it's definitely a consideration and we're looking into ways how we we could go down a path like that so uh one one",
    "start": "2134640",
    "end": "2143000"
  },
  {
    "text": "part of that is just that this system is far from trival so uh I mean we we",
    "start": "2143000",
    "end": "2149480"
  },
  {
    "text": "started out building the first few prototypes in node and it just grew quite quickly and we knew we had to",
    "start": "2149480",
    "end": "2155920"
  },
  {
    "text": "build it in a in a way that is scalable that will be maintainable going forward",
    "start": "2155920",
    "end": "2161880"
  },
  {
    "text": "um so for example half of our test base was basically uh just something that",
    "start": "2161880",
    "end": "2167800"
  },
  {
    "text": "could have been caught by a good type system so we uh really quickly we decided to rebuild everything in Scala",
    "start": "2167800",
    "end": "2174839"
  },
  {
    "text": "and now it's this um like a really huge code base with multiple microservices a",
    "start": "2174839",
    "end": "2180560"
  },
  {
    "text": "lot of infrastructure involved and that's um takes us quite a lot of time",
    "start": "2180560",
    "end": "2186040"
  },
  {
    "text": "to ramp up new Engineers um to to understand that internally and open",
    "start": "2186040",
    "end": "2191640"
  },
  {
    "text": "sourcing all of that would just slow us down quite significantly since we would need to have documentation around that",
    "start": "2191640",
    "end": "2198839"
  },
  {
    "text": "and people would rather be uh concerned about hey how can I get this to run on my own and we would just it would just",
    "start": "2198839",
    "end": "2206119"
  },
  {
    "text": "slow us down since every decision we would make uh internally how we are changing infrastructure and so on would",
    "start": "2206119",
    "end": "2212880"
  },
  {
    "text": "suddenly be a breaking change so uh we rather want to move really quickly on",
    "start": "2212880",
    "end": "2218040"
  },
  {
    "text": "that internally with we are managing our internal breaking change people will never uh know about and once we have",
    "start": "2218040",
    "end": "2226359"
  },
  {
    "text": "found a good way to orchestrate everything internally we want to take uh",
    "start": "2226359",
    "end": "2231800"
  },
  {
    "text": "one step at a time to to open source version of that let's paint the timeline",
    "start": "2231800",
    "end": "2237160"
  },
  {
    "text": "here I mean you as you mentioned in the first part Jared graphql was announced July 2015 so September uh well I'm",
    "start": "2237160",
    "end": "2246280"
  },
  {
    "text": "looking September okay so I was looking at the graph cool about page and kind of using their timeline oh and I'm trying",
    "start": "2246280",
    "end": "2252480"
  },
  {
    "text": "to paint back the picture of like gra being announced it seems like their first prototype I'm assuming graph",
    "start": "2252480",
    "end": "2258319"
  },
  {
    "text": "Cool's first prototype was in January 2016 and it seemed like you spent most of 2016 either creating and or getting",
    "start": "2258319",
    "end": "2265480"
  },
  {
    "text": "the necessary investment to be able to make a company and so now you're at a point where you can actually launch and",
    "start": "2265480",
    "end": "2272280"
  },
  {
    "text": "be used and grow as a company and it seems like maybe you're in this stage of",
    "start": "2272280",
    "end": "2277880"
  },
  {
    "text": "of like Innovation and then once the dust so to speak settles then you can",
    "start": "2277880",
    "end": "2283720"
  },
  {
    "text": "start to say well what can we extract from this to give back to the community is that a fair Assumption of where",
    "start": "2283720",
    "end": "2288800"
  },
  {
    "text": "you're at um to to a certain extent so it's quite remarkable um what is",
    "start": "2288800",
    "end": "2295359"
  },
  {
    "text": "actually needed to just uh provide a baseline to people in in terms of",
    "start": "2295359",
    "end": "2300440"
  },
  {
    "text": "infrastructure that they can um Implement any kind of uh use case they want so if you're uh basically giving",
    "start": "2300440",
    "end": "2308520"
  },
  {
    "text": "them a new way to build back ends um so we're not we're not trying to be like a new Firebase replacement where you where",
    "start": "2308520",
    "end": "2315960"
  },
  {
    "text": "we provide crash reports and and all of that but we rather want to provide people a new way to build backends and a",
    "start": "2315960",
    "end": "2323880"
  },
  {
    "text": "and a better abstraction for that and there is just a lot of a lot of groundwork needed um so around uh",
    "start": "2323880",
    "end": "2331599"
  },
  {
    "text": "authorization around authentication systems and also most importantly around how people can Implement their own",
    "start": "2331599",
    "end": "2338079"
  },
  {
    "text": "business logic how they how they can extend that and so on um so we're",
    "start": "2338079",
    "end": "2343119"
  },
  {
    "text": "working quite hard um and it's just uh it is a lot of work and I wouldn't say",
    "start": "2343119",
    "end": "2349480"
  },
  {
    "text": "we're entirely there yet where we can say all right all of that is perfect now let's see how we can uh open this up and",
    "start": "2349480",
    "end": "2356920"
  },
  {
    "text": "make it available for for everybody our goal at the moment is of seeing what are",
    "start": "2356920",
    "end": "2362599"
  },
  {
    "text": "the biggest problems our customers are facing and how can we make it easier them and once we've reached that point",
    "start": "2362599",
    "end": "2369520"
  },
  {
    "text": "it's just like next logical step yeah just thinking about you know the with",
    "start": "2369520",
    "end": "2374640"
  },
  {
    "text": "graphql the clients basically write their own queries and then with services like graph cool and AWS Lambda",
    "start": "2374640",
    "end": "2381680"
  },
  {
    "text": "serverless you don't have servers you know you don't have like what's next CoD",
    "start": "2381680",
    "end": "2387640"
  },
  {
    "text": "less like I don't have any code anymore where where where's the like I'm",
    "start": "2387640",
    "end": "2392720"
  },
  {
    "text": "thinking about this because you said business logic and it's like where the crap does the does my code go nowadays it's like I feel like I'm being",
    "start": "2392720",
    "end": "2398720"
  },
  {
    "text": "marginalized as an application developer or but it keeps getting pitched to me as if I'm becoming Superman but I feel like",
    "start": "2398720",
    "end": "2404640"
  },
  {
    "text": "maybe I'm my RO is reduced how do you what do you think that um I I I wouldn't say so for for us it's again comes down",
    "start": "2404640",
    "end": "2411119"
  },
  {
    "text": "to this concept of level of abstraction so when you're building a back end um I think you nobody really like is obsessed",
    "start": "2411119",
    "end": "2418200"
  },
  {
    "text": "with the part of how can I map the API perfectly to to the database and how can",
    "start": "2418200",
    "end": "2423760"
  },
  {
    "text": "I migrate my database in the in the the best possible way but what the drudgery",
    "start": "2423760",
    "end": "2429079"
  },
  {
    "text": "right that's the work that's the labor exactly exactly exactly and I mean we are having compilers we're having better",
    "start": "2429079",
    "end": "2435240"
  },
  {
    "text": "programming languages we're having Frameworks that this manual and repetitive work gets somewhat reduced to",
    "start": "2435240",
    "end": "2442440"
  },
  {
    "text": "minimum and then you can go to like user experience how how can you make uh make",
    "start": "2442440",
    "end": "2447760"
  },
  {
    "text": "this a great product how can you make processes great how can you uh Implement business logic like when somebody signs",
    "start": "2447760",
    "end": "2454680"
  },
  {
    "text": "up sending them a a sign up up email sending push notifications implementing authorization logic and all of that so",
    "start": "2454680",
    "end": "2461880"
  },
  {
    "text": "we just want to get people directly to that point where they can Implement business logic and this is where where",
    "start": "2461880",
    "end": "2468480"
  },
  {
    "text": "serverless functions come in so these are basically the small parts in your application where actually code is",
    "start": "2468480",
    "end": "2475359"
  },
  {
    "text": "required and uh I'm pretty sure that like even there the level of abstraction",
    "start": "2475359",
    "end": "2480800"
  },
  {
    "text": "gets um higher as well so uh like 20 years ago you wouldn't have a service",
    "start": "2480800",
    "end": "2486680"
  },
  {
    "text": "like mail gun or something like that to send an email now it's just a service you can use so there there's still a lot",
    "start": "2486680",
    "end": "2493400"
  },
  {
    "text": "of hard problems that can be uh made easier with uh with services but how you",
    "start": "2493400",
    "end": "2499079"
  },
  {
    "text": "tie all of that together this is this is really when it come when it comes to uh",
    "start": "2499079",
    "end": "2504560"
  },
  {
    "text": "to building an application so as you're playing with Lego you're uh you already",
    "start": "2504560",
    "end": "2509760"
  },
  {
    "text": "have the the Lego building blocks and that's that's the fun part of putting all of that together but you don't need",
    "start": "2509760",
    "end": "2516440"
  },
  {
    "text": "to manufacture the building blocks before and um and U going back to this",
    "start": "2516440",
    "end": "2522520"
  },
  {
    "text": "analogy of Lego building blocks and that um the great idea of bringing graph and",
    "start": "2522520",
    "end": "2528280"
  },
  {
    "text": "serus together is that Lego plocks snaap together and the Snapping is done",
    "start": "2528280",
    "end": "2535560"
  },
  {
    "text": "through the graphical type system so the graphical type system basically for for",
    "start": "2535560",
    "end": "2541480"
  },
  {
    "text": "every moving part where you pass on data the data is typed so for example as uh",
    "start": "2541480",
    "end": "2548160"
  },
  {
    "text": "data flows through a system and you want to hook in into a certain event and execute some code uh in in this case it",
    "start": "2548160",
    "end": "2555680"
  },
  {
    "text": "would be a function the function would be for if you implement it in a in a typed language as well such as",
    "start": "2555680",
    "end": "2561880"
  },
  {
    "text": "typescript for example or JavaScript with flow or Java you have um types as",
    "start": "2561880",
    "end": "2567960"
  },
  {
    "text": "well and you can map them uh one to one to each other so the graphic L type",
    "start": "2567960",
    "end": "2573559"
  },
  {
    "text": "system of your application Maps to your code and you get something like Global type safety so that's that's one of the",
    "start": "2573559",
    "end": "2580559"
  },
  {
    "text": "the divisions for us uh what we where we want to go to over the next",
    "start": "2580559",
    "end": "2586838"
  },
  {
    "text": "years after the break we talk about the difference between live queries and subscriptions we dig deeper into this",
    "start": "2587319",
    "end": "2594119"
  },
  {
    "text": "idea of a serverless graphql back end we talking about where Community is taking place the future of graphql and also",
    "start": "2594119",
    "end": "2601880"
  },
  {
    "text": "where it's going stay tuned",
    "start": "2601880",
    "end": "2608079"
  },
  {
    "text": "[Music]",
    "start": "2609900",
    "end": "2613429"
  },
  {
    "text": "this episode of the change log is brought to you by go CD an open source continuous delivery server from our",
    "start": "2620800",
    "end": "2626400"
  },
  {
    "text": "friends at thoughtworks go CD let you model complex workflows promote trusted artifacts see how your workflow really",
    "start": "2626400",
    "end": "2633160"
  },
  {
    "text": "works deploy any version anytime run and grock your tests compare builds take",
    "start": "2633160",
    "end": "2639000"
  },
  {
    "text": "advantage of plugins and so much more head to go.org changw to learn more and",
    "start": "2639000",
    "end": "2645640"
  },
  {
    "text": "tell them me sent you this episode of the change log is brought to you by Microsoft and Azure",
    "start": "2645640",
    "end": "2652200"
  },
  {
    "text": "open Dev conference the event is over but all the talks are streaming on",
    "start": "2652200",
    "end": "2657319"
  },
  {
    "text": "Demand right now at the azure.com openev this conference is focused on",
    "start": "2657319",
    "end": "2662839"
  },
  {
    "text": "showcasing open source Technologies in the cloud learn how you can build containerized microservices and improve",
    "start": "2662839",
    "end": "2669960"
  },
  {
    "text": "your open- Source devops pipeline hear from Community leaders like Gabe Monroy from Azure and deas Michelle narali from",
    "start": "2669960",
    "end": "2676880"
  },
  {
    "text": "kubernetes and Helm and Scott Johnston from Docker learn about app platforms containers devops and more all this is",
    "start": "2676880",
    "end": "2685079"
  },
  {
    "text": "provided at no cost once again head to azure.com openev and now back to the",
    "start": "2685079",
    "end": "2693920"
  },
  {
    "text": "show [Music]",
    "start": "2694960",
    "end": "2704720"
  },
  {
    "text": "we've kind of come to a point where it's like where where is graphic B going how can you work with it you know what",
    "start": "2704720",
    "end": "2710280"
  },
  {
    "text": "conferences are out there where where's the community meeting what kind of resources out there to get started and",
    "start": "2710280",
    "end": "2716119"
  },
  {
    "text": "you mentioned earlier in the show graph Europe uh I think you even mentioned in the off air there's a podcast that you",
    "start": "2716119",
    "end": "2722400"
  },
  {
    "text": "created where are things at for you right um so yeah uh today is May 24th",
    "start": "2722400",
    "end": "2729440"
  },
  {
    "text": "when we are recording this and um so last week we actually um had the first",
    "start": "2729440",
    "end": "2735280"
  },
  {
    "text": "graph conference in Europe called graph Europe um with the creators of of graph",
    "start": "2735280",
    "end": "2741280"
  },
  {
    "text": "like Lee Baron and and Dan chaffer we had the folks over from meter and Apollo",
    "start": "2741280",
    "end": "2747359"
  },
  {
    "text": "we had people over from GitHub and really the the entire Community from all",
    "start": "2747359",
    "end": "2753079"
  },
  {
    "text": "over the world um came together and and met and we had great talks about about",
    "start": "2753079",
    "end": "2758599"
  },
  {
    "text": "Graff so that was a great place to talk about the future of graur um besides",
    "start": "2758599",
    "end": "2764680"
  },
  {
    "text": "that there is a a newsletter about graph call called graph call weekly um we also",
    "start": "2764680",
    "end": "2771000"
  },
  {
    "text": "like you mentioned um recently started together um with Abby uh we started out",
    "start": "2771000",
    "end": "2778440"
  },
  {
    "text": "a new podcast called grafal radio which you can find on Graal radio.com uh where we also have all",
    "start": "2778440",
    "end": "2786079"
  },
  {
    "text": "sorts of people from the graphical Community um talking about different projects so for example the last episode",
    "start": "2786079",
    "end": "2793599"
  },
  {
    "text": "has been about um relay and Apollo which are both gra graph clients um and how",
    "start": "2793599",
    "end": "2801839"
  },
  {
    "text": "how that is kind of moving forward and um yeah so there there are quite a lot",
    "start": "2801839",
    "end": "2807440"
  },
  {
    "text": "of emerging um resources for and by the community so I think uh graphical weekly",
    "start": "2807440",
    "end": "2814839"
  },
  {
    "text": "is probably a good good place to to be to stay on top of that what uh you mentioned the the conference what uh",
    "start": "2814839",
    "end": "2822280"
  },
  {
    "text": "what would you say in your opinion was the the future since you mentioned like a lot of the future was talked about there give us some of the if we didn't",
    "start": "2822280",
    "end": "2829119"
  },
  {
    "text": "go what would be the The Hit List of notes you took right right right there there actually a lot of um notes being",
    "start": "2829119",
    "end": "2835720"
  },
  {
    "text": "published at the moment so you don't just have to take my word for it but um",
    "start": "2835720",
    "end": "2840920"
  },
  {
    "text": "we actually also sat down with uh the the creators of graph and we are now",
    "start": "2840920",
    "end": "2846359"
  },
  {
    "text": "also quite involved in um like different talking about different features for the",
    "start": "2846359",
    "end": "2851839"
  },
  {
    "text": "future of graph and how that is shaping so the the great thing about about gra",
    "start": "2851839",
    "end": "2857280"
  },
  {
    "text": "is really that it's an open standard um so it is an open specification you can",
    "start": "2857280",
    "end": "2863839"
  },
  {
    "text": "uh it has an RFC process you can go to GitHub you can propose a new RFC with a",
    "start": "2863839",
    "end": "2869960"
  },
  {
    "text": "certain feature you can hear other community members uh ideas and thoughts about this and and if you make a strong",
    "start": "2869960",
    "end": "2876760"
  },
  {
    "text": "case that might even like be merged into the graphical standard um so recent",
    "start": "2876760",
    "end": "2882400"
  },
  {
    "text": "developments um just last week as well was really um eventful week for Graal",
    "start": "2882400",
    "end": "2888720"
  },
  {
    "text": "just last week graph subscriptions got officially merged into",
    "start": "2888720",
    "end": "2894240"
  },
  {
    "text": "gravill so grafl subscriptions for those you of who don't know is um a way to",
    "start": "2894240",
    "end": "2901800"
  },
  {
    "text": "establish a real time connection to your graphical backand so usually that's why",
    "start": "2901800",
    "end": "2907599"
  },
  {
    "text": "websockets and you can subscribe to certain changes and the server will send",
    "start": "2907599",
    "end": "2913400"
  },
  {
    "text": "you events and the the the great thing about this is you can utilize the same",
    "start": "2913400",
    "end": "2919559"
  },
  {
    "text": "uh graphical query concept so you can for these events you can even also",
    "start": "2919559",
    "end": "2924880"
  },
  {
    "text": "Traverse the graph and query for certain pieces of information you're interested in so a common scenario might be if you",
    "start": "2924880",
    "end": "2932720"
  },
  {
    "text": "want to build a chat application you might want to to listen for new messages being created and for every message",
    "start": "2932720",
    "end": "2939520"
  },
  {
    "text": "you're interested in the text of it and also in the name of the author or something like that so graph",
    "start": "2939520",
    "end": "2945520"
  },
  {
    "text": "subscriptions got recently merged in um then this concept of graph I've",
    "start": "2945520",
    "end": "2950880"
  },
  {
    "text": "mentioned previously that is not yet officially uh part of the specification",
    "start": "2950880",
    "end": "2956720"
  },
  {
    "text": "but um will be merged in fairly soon um and yeah there are a lot of new other",
    "start": "2956720",
    "end": "2962920"
  },
  {
    "text": "exciting features which are um coming up and a lot of people talk about",
    "start": "2962920",
    "end": "2969119"
  },
  {
    "text": "them so for example a concept called life queries which is a alternative way",
    "start": "2969119",
    "end": "2974680"
  },
  {
    "text": "to go about real time queries in graph um so yeah there there a lot of really a",
    "start": "2974680",
    "end": "2982599"
  },
  {
    "text": "lot of exciting um ideas around graph kill you said life queries or live",
    "start": "2982599",
    "end": "2989119"
  },
  {
    "text": "live okay I thought I was like ask you can ask it questions about your life or something yeah that's be fun that's an",
    "start": "2989119",
    "end": "2995680"
  },
  {
    "text": "interesting thing though to to have so is live queries and subscriptions the",
    "start": "2995680",
    "end": "3001480"
  },
  {
    "text": "same thing uh really good question so they are not um but they both can be",
    "start": "3001480",
    "end": "3007400"
  },
  {
    "text": "used for similar ideas so R and the the interesting part about that is that um",
    "start": "3007400",
    "end": "3014720"
  },
  {
    "text": "based on Facebook's experience building uh Facebook and all these realtime aspects of their of their system of of",
    "start": "3014720",
    "end": "3022000"
  },
  {
    "text": "their platform so like comments that you see them popping up or that you see like the like counts increasing and so on so",
    "start": "3022000",
    "end": "3029559"
  },
  {
    "text": "they've really learned a lot about how you build real-time applications at scale and these two concepts of graph go",
    "start": "3029559",
    "end": "3037680"
  },
  {
    "text": "subscriptions and graph life queries um they are kind of the the result of like",
    "start": "3037680",
    "end": "3044240"
  },
  {
    "text": "hundreds of iterations so graphical subscriptions as I said are based on",
    "start": "3044240",
    "end": "3049559"
  },
  {
    "text": "events that a server sense and graphical live queries um are not fully specified",
    "start": "3049559",
    "end": "3055760"
  },
  {
    "text": "that they're rather um a broader idea um where there are a couple of prototypes",
    "start": "3055760",
    "end": "3061000"
  },
  {
    "text": "so the idea is that you would basically send a normal graphical query which you would send once for query and you",
    "start": "3061000",
    "end": "3068440"
  },
  {
    "text": "immediately get back the result for live queries you would send back you would also send um this this query and you get",
    "start": "3068440",
    "end": "3076640"
  },
  {
    "text": "back a response but you keep open you keep an open connection and if some parts of the query change you get just",
    "start": "3076640",
    "end": "3084000"
  },
  {
    "text": "like an incremental update for the things that have changed so um that is",
    "start": "3084000",
    "end": "3089640"
  },
  {
    "text": "just like an alternative concept to implement real-time applications in gra let's finish out on a conversation",
    "start": "3089640",
    "end": "3096119"
  },
  {
    "text": "around what seems to be honest your the thing that really excites you which is the the joining of",
    "start": "3096119",
    "end": "3103480"
  },
  {
    "text": "graphql with serverless backend and uh oh by the way if if you haven't heard it",
    "start": "3103480",
    "end": "3110400"
  },
  {
    "text": "yet we had a great conversation didn't we ad at oscon with pami about the serverless revolution so that one's",
    "start": "3110400",
    "end": "3116040"
  },
  {
    "text": "either in your feed somewhere or soon will be uh you can also just search change.com for server list if you want",
    "start": "3116040",
    "end": "3122640"
  },
  {
    "text": "to listen to that um but you guys have this new architecture announcement on",
    "start": "3122640",
    "end": "3128920"
  },
  {
    "text": "your blog introducing the serverless graphql backend architecture and it seems to be uh the result of some of",
    "start": "3128920",
    "end": "3134799"
  },
  {
    "text": "your work of joining these two concepts and it seems to be like exactly what you're the most excited about is this",
    "start": "3134799",
    "end": "3140760"
  },
  {
    "text": "thing so tell us about this architecture concept and what you're trying to get from the community",
    "start": "3140760",
    "end": "3146079"
  },
  {
    "text": "with regards to it right right so um this architecture is basically like you",
    "start": "3146079",
    "end": "3151200"
  },
  {
    "text": "said um merging these two new um these two new paradigms how you build apis",
    "start": "3151200",
    "end": "3157559"
  },
  {
    "text": "based on graph L and also what serverless infrastructure just enables",
    "start": "3157559",
    "end": "3163119"
  },
  {
    "text": "developers to build applications in a lot less friction like with r uses a lot",
    "start": "3163119",
    "end": "3169640"
  },
  {
    "text": "of friction and removes the the requirements of Hosting your own servers",
    "start": "3169640",
    "end": "3175319"
  },
  {
    "text": "and so on and bringing these two these two concepts together um we've proposed",
    "start": "3175319",
    "end": "3180640"
  },
  {
    "text": "a new architecture idea um where the graphical backend would basically be",
    "start": "3180640",
    "end": "3187480"
  },
  {
    "text": "automatically generated based on your your graphical schema um there is besides our the service we've built",
    "start": "3187480",
    "end": "3193880"
  },
  {
    "text": "there is also a lot of work in the in the community how you can well not fully",
    "start": "3193880",
    "end": "3198960"
  },
  {
    "text": "generate a production ready gra girl API but at least it already takes away a lot of the work for you so you can do things",
    "start": "3198960",
    "end": "3206559"
  },
  {
    "text": "like mocking based on your graph schema or uh bootstraps a graph server based on",
    "start": "3206559",
    "end": "3213000"
  },
  {
    "text": "your schema so that's really the first building block that you write out your your graphical API based on a",
    "start": "3213000",
    "end": "3220319"
  },
  {
    "text": "graphical and you would get a production ready graphical API you can use and the",
    "start": "3220319",
    "end": "3226119"
  },
  {
    "text": "second part is you then just focus on implementing the business logic and",
    "start": "3226119",
    "end": "3231319"
  },
  {
    "text": "implementing the business logic at a scalable way is possible through the infrastructure provided by by serverless",
    "start": "3231319",
    "end": "3238760"
  },
  {
    "text": "infrastructure so like serverless functions or um S3 uh these kind of",
    "start": "3238760",
    "end": "3245440"
  },
  {
    "text": "services where you don't have to worry about um how many service do I need to to spin up maybe just Google for",
    "start": "3245440",
    "end": "3252240"
  },
  {
    "text": "serverless graph backend architecture and so that that's a fairly new concept",
    "start": "3252240",
    "end": "3257720"
  },
  {
    "text": "and we our idea is basically um our our platform graph provides a developer",
    "start": "3257720",
    "end": "3263920"
  },
  {
    "text": "platform for building these backhands but it's also we also very much believe",
    "start": "3263920",
    "end": "3269400"
  },
  {
    "text": "that this will be a concept how other people build their backhands uh even if they Implement these these core Parts on",
    "start": "3269400",
    "end": "3276799"
  },
  {
    "text": "their own no need to Google it if you are listening in a podcast client just",
    "start": "3276799",
    "end": "3281880"
  },
  {
    "text": "click to the show notes it will be in there or if you're on our website well you're just staring at the link right there front of you got it right there",
    "start": "3281880",
    "end": "3288839"
  },
  {
    "text": "even better awesome johannas anything else uh you want to say before we close up um yeah I basically just want to",
    "start": "3288839",
    "end": "3295799"
  },
  {
    "text": "encourage everybody to just try out graph on your own if you're a developer",
    "start": "3295799",
    "end": "3301359"
  },
  {
    "text": "um see how easy it is to implement your own graph C backend if you're a frontend developer using react using View using",
    "start": "3301359",
    "end": "3309280"
  },
  {
    "text": "angular um I highly um encourage you to just try out graph KL um a really easy",
    "start": "3309280",
    "end": "3316160"
  },
  {
    "text": "way to to try out graph KL in your front end app is using a framework like um",
    "start": "3316160",
    "end": "3322760"
  },
  {
    "text": "Apollo which is a graph C client or relay which is a graph client and um",
    "start": "3322760",
    "end": "3328960"
  },
  {
    "text": "yeah there are two resources also created by us which is called learn Apollo and learn relay these are the",
    "start": "3328960",
    "end": "3335319"
  },
  {
    "text": "easiest way to get started with them um so I suppose that's also in the show notes yes for sure well thanks Johannes",
    "start": "3335319",
    "end": "3342319"
  },
  {
    "text": "it was uh awesome to having the show thanks for coming on definitely thanks for having me it was really great talking about uh gr G and",
    "start": "3342319",
    "end": "3349700"
  },
  {
    "text": "[Music] Serv all right thank you for tuning into the change log and also thanks to our",
    "start": "3349700",
    "end": "3356440"
  },
  {
    "text": "sponsors who make the show possible lenoe hired go CD and Microsoft with",
    "start": "3356440",
    "end": "3362240"
  },
  {
    "text": "their Azure open Dev conference also thanks to fastly our bandwidth partner head to fastly.com to learn more we host",
    "start": "3362240",
    "end": "3369200"
  },
  {
    "text": "everything we do on Leno servers check them out lin.com changelog you can find more episodes",
    "start": "3369200",
    "end": "3376359"
  },
  {
    "text": "like this at changel log.com or by subscribing wherever you get your podcasts thanks for",
    "start": "3376359",
    "end": "3383920"
  },
  {
    "text": "listening",
    "start": "3383920",
    "end": "3386920"
  },
  {
    "text": "that's",
    "start": "3397799",
    "end": "3400799"
  }
]