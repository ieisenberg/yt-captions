[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "[Music] let's do it it's go time welcome to go",
    "start": "7410",
    "end": "12799"
  },
  {
    "text": "time your source for wide ranging discussions from all around the go Community find us on the web at go time.",
    "start": "12799",
    "end": "20320"
  },
  {
    "text": "FM on the fediverse at gotime at Chang log. social and on X at gotime FM thanks",
    "start": "20320",
    "end": "26880"
  },
  {
    "text": "to our partners at fly.io the home of Chang log.com launch your app as close to your users",
    "start": "26880",
    "end": "32680"
  },
  {
    "text": "as possible find out how at fly.io okay here we [Music]",
    "start": "32680",
    "end": "41000"
  },
  {
    "text": "go well hello hello hello and welcome to this episode of go time today we are",
    "start": "43239",
    "end": "50879"
  },
  {
    "start": "44000",
    "end": "478000"
  },
  {
    "text": "going back well at least Ian and I we're going back to what it felt like to be a",
    "start": "50879",
    "end": "56280"
  },
  {
    "text": "new C developer cuz chances are we probably forgotten that feeling um yeah",
    "start": "56280",
    "end": "62359"
  },
  {
    "text": "and and we have a special guest coming on the show to talk about their experience of being a new gopher and uh",
    "start": "62359",
    "end": "69479"
  },
  {
    "text": "they they actually suggested uh an episode uh which you can do too listener you can suggest episodes and who knows",
    "start": "69479",
    "end": "76040"
  },
  {
    "text": "maybe we'll even invite you on a show and come talk about the stuff you're proposing U but yeah propose that we you",
    "start": "76040",
    "end": "81759"
  },
  {
    "text": "know sort of answer you know some questions that a new go developer would have and we thought you know what why",
    "start": "81759",
    "end": "87600"
  },
  {
    "text": "don't we bring him on the show and have him tell us uh uh what his experience has been and uh ask some questions so we",
    "start": "87600",
    "end": "95399"
  },
  {
    "text": "treating this as sort of an office hours style episode and hopefully we'll do more of those in the future but yeah",
    "start": "95399",
    "end": "102360"
  },
  {
    "text": "this is H we're very glad to have you on the show dwart Carmel hopefully I'm not butchering your name welcome to the show",
    "start": "102360",
    "end": "108360"
  },
  {
    "text": "no that's great good to have you good to have you and co-hosting with me as you might infer from previous comment is Ian",
    "start": "108360",
    "end": "114920"
  },
  {
    "text": "Lopshire hello Ian how are you I'm doing well good good you ready to to feel like a newbie again I mean I just felt like a",
    "start": "114920",
    "end": "121039"
  },
  {
    "text": "newbie like yesterday uh making s mistakes so yeah I I think I'm prepared okay all right all right so dwart why",
    "start": "121039",
    "end": "128560"
  },
  {
    "text": "why don't we start with a quick intro and uh give us a little bit of background and uh you know we'll get",
    "start": "128560",
    "end": "134040"
  },
  {
    "text": "into also how you got into go yeah sure so first of all thanks a lot guys for having me I think this is this the most",
    "start": "134040",
    "end": "140120"
  },
  {
    "text": "spoiled office hours that I've will ever have in my life so I'm honored yeah so thanks a lot for having me and and",
    "start": "140120",
    "end": "146760"
  },
  {
    "text": "really really nice meeting you so first of all um a quick and short background my name is Dart it's a weird non",
    "start": "146760",
    "end": "153480"
  },
  {
    "text": "International name I'm originally from Portugal from Lisbon but I've been based in Copenhagen Denmark for the past uh",
    "start": "153480",
    "end": "159720"
  },
  {
    "text": "seven almost eight years now so that's like north of Europe which is very different from Portugal for those who",
    "start": "159720",
    "end": "165480"
  },
  {
    "text": "don't know and my background is a little bit of a mixed bag I've I've worked uh a little bit like um my background is",
    "start": "165480",
    "end": "171159"
  },
  {
    "text": "masters in engineering I did like uh strategy products management I did a couple of a lot of different things and",
    "start": "171159",
    "end": "177480"
  },
  {
    "text": "then got more and more technical over the years and for the past I I also did some management consulting things like",
    "start": "177480",
    "end": "183040"
  },
  {
    "text": "that and it architecture and management and things like that but in the past three years I my my main goal is that I",
    "start": "183040",
    "end": "188879"
  },
  {
    "text": "basically help companies solve tough problems and that is normally related to more like the data science software",
    "start": "188879",
    "end": "194720"
  },
  {
    "text": "engineering side but I I like to think of myself as someone who can also put stuff in production you know like if if",
    "start": "194720",
    "end": "200080"
  },
  {
    "text": "you guys are familiar with the concept of Jupiter notebooks I like those but that's not normally what I what I put",
    "start": "200080",
    "end": "205159"
  },
  {
    "text": "into production so yeah so that's a little bit about my background cool cool and and how did you stumble on to go I",
    "start": "205159",
    "end": "211760"
  },
  {
    "text": "have this thing where I'm very curious about like new programming languages and new programming paradigms so my",
    "start": "211760",
    "end": "217519"
  },
  {
    "text": "background it's a lot like on the research machine learning side but I'm very passionate about putting these",
    "start": "217519",
    "end": "222959"
  },
  {
    "text": "things into production so I got more and more passionate over the years to the software engineering side and normally",
    "start": "222959",
    "end": "228760"
  },
  {
    "text": "the tool that I use I just go for Python and until a couple of years ago that's was just a no-brainer for me I just used",
    "start": "228760",
    "end": "234720"
  },
  {
    "text": "Python and wherever I could stick python including your browser that's what I would normally go with even if that's",
    "start": "234720",
    "end": "240560"
  },
  {
    "text": "really inappropriate and so in in the past couple of years I started uh hearing about these new programming",
    "start": "240560",
    "end": "245760"
  },
  {
    "text": "languages the first one of them was rust and I got into rust and I decided to do the Advent of code for those I think",
    "start": "245760",
    "end": "253040"
  },
  {
    "text": "most of us are familiar with Advent of code so I tried doing Advent of cod and rust that went okay like of course I I",
    "start": "253040",
    "end": "259400"
  },
  {
    "text": "didn't make it past like day 16 which was fine but I really really enjoyed the experience I felt like it was a very",
    "start": "259400",
    "end": "265800"
  },
  {
    "text": "different software experience than I was used to with python and I also decided",
    "start": "265800",
    "end": "270880"
  },
  {
    "text": "to build a website in Rust something that would basically uh transcribe one of my favorite Portuguese podcasts which",
    "start": "270880",
    "end": "277919"
  },
  {
    "text": "is like political commentary and what fascinated me be about rust is that the website never went down like never",
    "start": "277919",
    "end": "284600"
  },
  {
    "text": "crashed like it's still running I've deployed it once it transcribes all of",
    "start": "284600",
    "end": "290039"
  },
  {
    "text": "the the podcast and it has never gone down a single time and I'm like okay like I'm not that good of a programmer",
    "start": "290039",
    "end": "296600"
  },
  {
    "text": "so I'm sure there's like a component here that is based on the language and and so for the past couple of projects I",
    "start": "296600",
    "end": "304000"
  },
  {
    "text": "decided to that rust was really nice but there must be a good in between of being",
    "start": "304000",
    "end": "309560"
  },
  {
    "text": "really strict about how I write code right so not like of course being hard for me to develop something like the",
    "start": "309560",
    "end": "315520"
  },
  {
    "text": "time to Market to be a bit longer but also to be not that long and uh go I was",
    "start": "315520",
    "end": "321440"
  },
  {
    "text": "hearing that was a good Pro language that also in a way you guys probably know better than me sits good in the",
    "start": "321440",
    "end": "327600"
  },
  {
    "text": "Middle where it's like you won't take as long as writing something in Rust to get",
    "start": "327600",
    "end": "332680"
  },
  {
    "text": "something out there but it will be probably not as fast as python but it will be much more robust and solid quote",
    "start": "332680",
    "end": "339680"
  },
  {
    "text": "unquote than writing something right of course what I say about these programming languages has has a lot of",
    "start": "339680",
    "end": "344919"
  },
  {
    "text": "caveats right like you can be a great programmer and write something in JavaScript that is much more robust than something in Rust but I think the",
    "start": "344919",
    "end": "351360"
  },
  {
    "text": "language has kind of guide you and and so for the past couple of like side projects I've been going with go and",
    "start": "351360",
    "end": "357039"
  },
  {
    "text": "yeah and that's how I came about it basically that's how I thought about using it okay well let me just start by",
    "start": "357039",
    "end": "362199"
  },
  {
    "text": "saying that you know getting 16 days into Advent quow is is no small feat so you know definitely you know don't sell",
    "start": "362199",
    "end": "368680"
  },
  {
    "text": "yourself short there you know you know a lot of people I know they'll start they'll be like all gung-ho and excited and then you know like day five it's",
    "start": "368680",
    "end": "374360"
  },
  {
    "text": "like ah I give up especially in holiday season exactly especially during the holidays yeah this is it's as much to me",
    "start": "374360",
    "end": "380919"
  },
  {
    "text": "that has always been as much of a um a lesson in time management right as it is",
    "start": "380919",
    "end": "386039"
  },
  {
    "text": "about sort of getting through all the all the exercises but awesome well it's glad to have you in the go Community",
    "start": "386039",
    "end": "392240"
  },
  {
    "text": "welcome on behalf of the go Community uh if I may uh definitely we we enjoy having one new developer in the",
    "start": "392240",
    "end": "398800"
  },
  {
    "text": "community it's interesting sort of hearing you sort of describe what led you to try go right so you know all of",
    "start": "398800",
    "end": "404599"
  },
  {
    "text": "us we hear about different program languages all the time and we don't always necessarily sort of uh run towards them or gravitate towards them",
    "start": "404599",
    "end": "410919"
  },
  {
    "text": "for one reason or another the fact that you came to go looking for something perhaps not as I guess if you consider",
    "start": "410919",
    "end": "417520"
  },
  {
    "text": "you know the a spectrum where you have python where you can develop quickly and get things something out the door",
    "start": "417520",
    "end": "423199"
  },
  {
    "text": "quickly because it's what you you you know and have been using for a long time and then having Russ on the on the other",
    "start": "423199",
    "end": "429000"
  },
  {
    "text": "end of that right which is has all these sort of wonderful ways of ensuring that",
    "start": "429000",
    "end": "434120"
  },
  {
    "text": "you know the stuff you have in memories the stuff I you actually want to have in memory right where you have to be very strict about what you're doing and know",
    "start": "434120",
    "end": "439400"
  },
  {
    "text": "what you're doing right go kind of gives you that sweet spot in between right where you can get you a good performance",
    "start": "439400",
    "end": "444520"
  },
  {
    "text": "where you can get something out the door and you know if if you follow all the idioms right of the language you you",
    "start": "444520",
    "end": "449560"
  },
  {
    "text": "will get something that looks like you know production gr go code you know without having to sort of uh be a master",
    "start": "449560",
    "end": "455840"
  },
  {
    "text": "of the language right so I think this is why we're having this conversation because the is completely unknown to me",
    "start": "455840",
    "end": "461919"
  },
  {
    "text": "it's like it's like oh yeah but if you follow the idioms and I'm like yeah I'm pretty",
    "start": "461919",
    "end": "467080"
  },
  {
    "text": "sure I have not followed one of those I think and and that's okay that's okay we that's why we're going to get we're",
    "start": "467080",
    "end": "473039"
  },
  {
    "text": "going to get into it shortly [Music]",
    "start": "473039",
    "end": "478080"
  },
  {
    "start": "478000",
    "end": "636000"
  },
  {
    "text": "here what you're about to hear are real reactions from ped your duty users in response to seeing signals from fire",
    "start": "478080",
    "end": "484560"
  },
  {
    "text": "hydrant for the first time ped your duty I don't want to say they're evil but",
    "start": "484560",
    "end": "489639"
  },
  {
    "text": "they're an evil that we've had to maintain I know all of our engineering teams as well as myself are interested",
    "start": "489639",
    "end": "495840"
  },
  {
    "text": "in getting this moving the correct direction as right now just managing and",
    "start": "495840",
    "end": "500960"
  },
  {
    "text": "maintaining our user seats has become problematic that's that's that's really good actually this is this is a",
    "start": "500960",
    "end": "506560"
  },
  {
    "text": "consistent problem for us and teams is that covering this sorts of ad hoc time frames is is very difficult um you know",
    "start": "506560",
    "end": "513560"
  },
  {
    "text": "putting in like overrides and specific days and different new is is quite",
    "start": "513560",
    "end": "519200"
  },
  {
    "text": "honorous oh and you did the most important piece which is didn't tie them together because that's half the problem",
    "start": "519200",
    "end": "524839"
  },
  {
    "text": "with P Duty right is I get all these alerts and then I get an incident per",
    "start": "524839",
    "end": "530279"
  },
  {
    "text": "alert and generally speaking when goes sideways you get lots of alerts because lots of things are broken but",
    "start": "530279",
    "end": "537480"
  },
  {
    "text": "you only have one incident yeah I'm super impressed with that because being able to assign to different teams is an",
    "start": "537480",
    "end": "544200"
  },
  {
    "text": "issue for us because um like the one the one alert Fires for one team and then it seems like to have to bounce around and",
    "start": "544200",
    "end": "550440"
  },
  {
    "text": "it never does uh which then means that we have tons of communication issues because like people aren't updates no I",
    "start": "550440",
    "end": "557240"
  },
  {
    "text": "mean to to be open and honest uh when can we switch so you're probably tired of",
    "start": "557240",
    "end": "563880"
  },
  {
    "text": "alerting tools that feel more like a headache than a solution right well signals from fire hydrant is the alerting in on call tool designed for",
    "start": "563880",
    "end": "570480"
  },
  {
    "text": "humans not systems signals puts teams at the center giving you the ultimate",
    "start": "570480",
    "end": "575519"
  },
  {
    "text": "control over rules policies and schedules no need to configure your services or do wonky workarounds and",
    "start": "575519",
    "end": "582760"
  },
  {
    "text": "just data seamlessly from any source using web Hooks and watch as signals filters out the noise alerting you only",
    "start": "582760",
    "end": "589399"
  },
  {
    "text": "on what matters manage tasks like coverage request and on call notifications effortlessly within slack",
    "start": "589399",
    "end": "596120"
  },
  {
    "text": "you can even acknowledge alerts right there but here's the game Game Changer signals natively integrates with fire",
    "start": "596120",
    "end": "602240"
  },
  {
    "text": "hydrant full Incident Management Suite so as soon as you're alerted you can seamlessly kick off and manage your",
    "start": "602240",
    "end": "608600"
  },
  {
    "text": "entire incident inside a single platform learn more or switch today at fireh",
    "start": "608600",
    "end": "614440"
  },
  {
    "text": "hydrant dcoms signals again fir hydrant",
    "start": "614440",
    "end": "621040"
  },
  {
    "text": "[Music]",
    "start": "622600",
    "end": "636389"
  },
  {
    "start": "636000",
    "end": "924000"
  },
  {
    "text": "let's start with um I think one of the things you listed and some of the",
    "start": "636639",
    "end": "642040"
  },
  {
    "text": "questions that you had was uh the idea of uh dealing with a binary you like the idea of a binary so what what are you",
    "start": "642040",
    "end": "647680"
  },
  {
    "text": "sort of Dr supposing that um to yeah like that's something perhaps I should add also John is because of course I I",
    "start": "647680",
    "end": "653680"
  },
  {
    "text": "think about go as something that sits nicely between something like rust and something like python but I also really",
    "start": "653680",
    "end": "659639"
  },
  {
    "text": "always love the idea to have like a binary so rust always gave me that really uh feeling of like okay I can",
    "start": "659639",
    "end": "666320"
  },
  {
    "text": "just give you something and uh for those of you that like for some of you that have programmed python for a lot of",
    "start": "666320",
    "end": "672120"
  },
  {
    "text": "years know how frustrating it is that you all you have is a script all you have is to all you want is to give that",
    "start": "672120",
    "end": "678440"
  },
  {
    "text": "script to someone so that they run yeah but that that never happens and and so I really enjoy the side of the spectrum of",
    "start": "678440",
    "end": "684800"
  },
  {
    "text": "things where we can actually just have a binary and make things run I think that's really really nice and I also so",
    "start": "684800",
    "end": "690320"
  },
  {
    "text": "always heard these things about go being a a very simple language in a way that two people with varying levels of",
    "start": "690320",
    "end": "696639"
  },
  {
    "text": "experience might write a piece of code that is much more similar in go so that",
    "start": "696639",
    "end": "701760"
  },
  {
    "text": "it's it it's kind of a simple language it's a not plain but in a way that it it makes things obvious and it guides you",
    "start": "701760",
    "end": "708639"
  },
  {
    "text": "to do the right thing and that's also like something that appeal a lot to me because I I one of the things that I",
    "start": "708639",
    "end": "713839"
  },
  {
    "text": "hate is making things complicated where they don't have to be and so yeah like that's just a couple things that I",
    "start": "713839",
    "end": "718920"
  },
  {
    "text": "really enjoy about and go and and also like my way of learning these things is that I have some itch that I want to",
    "start": "718920",
    "end": "724839"
  },
  {
    "text": "scratch and I write it and go that's kind of how I go about it you're kind of",
    "start": "724839",
    "end": "730639"
  },
  {
    "text": "discovering like sort of naturally right organically the sort of the virtues of the language you know the literally like",
    "start": "730639",
    "end": "737160"
  },
  {
    "text": "part of the the the language's sort of aims one of it was to literally allow",
    "start": "737160",
    "end": "742800"
  },
  {
    "text": "for somebody who's new to go or a junior developer or somebody who is perhaps experienced but still new to the",
    "start": "742800",
    "end": "748519"
  },
  {
    "text": "language to basically write go- code that looks almost as good as a pro go",
    "start": "748519",
    "end": "754720"
  },
  {
    "text": "developer it's the first language that I personally come across that sort of really guides you towards that right",
    "start": "754720",
    "end": "760360"
  },
  {
    "text": "like you know the I've been amazed to see new go- code being created by new go",
    "start": "760360",
    "end": "765720"
  },
  {
    "text": "developers that is not too far off from what I would expect from an experienced go developer right and I think that's by",
    "start": "765720",
    "end": "771560"
  },
  {
    "text": "Design like the language kind of guides you right it kind of puts you on this path puts some guard rails around you",
    "start": "771560",
    "end": "777320"
  },
  {
    "text": "and your code ends up looking right very much like you know what a professional would write we haven't seen my code",
    "start": "777320",
    "end": "784199"
  },
  {
    "text": "John well let's start peeling back some lers yeah I think you'll have a couple",
    "start": "784199",
    "end": "790600"
  },
  {
    "text": "of heart attacks but sure I know maybe maybe we she bring you back uh to do uh to do our our roast our project roast",
    "start": "790600",
    "end": "796920"
  },
  {
    "text": "we've been thinking about an episode a kind of episode where we roast project so maybe we'll bring you back for those",
    "start": "796920",
    "end": "802880"
  },
  {
    "text": "I mean but you said something that is really really important that I always feel like is that whenever I I read python in like the profession profal",
    "start": "802880",
    "end": "809440"
  },
  {
    "text": "context I feel like I see these dialects of python where two different like python programmers will write python or",
    "start": "809440",
    "end": "816440"
  },
  {
    "text": "two different proes will python will look completely different for example now Everyone likes types so if you catch",
    "start": "816440",
    "end": "822560"
  },
  {
    "text": "a developer that loves types then you'll see type python which is very different from normal python so there's kind of",
    "start": "822560",
    "end": "828440"
  },
  {
    "text": "different lingos and I feel like that doesn't happen so much in Russ right and go yeah Ino sorry yeah",
    "start": "828440",
    "end": "835920"
  },
  {
    "text": "yeah oh yeah that's the thing when you do when you when you you know playing around with lots of languages sometimes you know you end up",
    "start": "835920",
    "end": "843320"
  },
  {
    "text": "sort of no lot I haven't gone into the functional Spectrum yet but yeah oh that's that's a worthwhile Endeavor as",
    "start": "843320",
    "end": "849279"
  },
  {
    "text": "well uh but yeah like we have a you have a list of questions here and I think I I'll let you guide the conversation as",
    "start": "849279",
    "end": "854480"
  },
  {
    "text": "to kind of uh what what do you want to tackle first okay so uh the first thing so some context I was I was writing a",
    "start": "854480",
    "end": "861360"
  },
  {
    "text": "couple of projects the first one was that I wanted to basically build my personal llm and I wanted to basically",
    "start": "861360",
    "end": "866800"
  },
  {
    "text": "access the telegram API and I want something that calls apis and then calls the telegram API and it's like a",
    "start": "866800",
    "end": "873560"
  },
  {
    "text": "personal chat bot if if you want it but it's it just needs to be a microservice that calls apis that's all it needs to",
    "start": "873560",
    "end": "879279"
  },
  {
    "text": "do it doesn't need to do much more than that and so uh when I started writing this project the first thing that I",
    "start": "879279",
    "end": "884680"
  },
  {
    "text": "noticed is that and even when I was looking at COD that there's this for every four lines two lines are if error",
    "start": "884680",
    "end": "892880"
  },
  {
    "text": "equals equals n then do something and I'm like okay great this might might be like something",
    "start": "892880",
    "end": "899959"
  },
  {
    "text": "specific to this project and I go to another project like I've actually worked with a company that had a go-",
    "start": "899959",
    "end": "905120"
  },
  {
    "text": "code base and I dwell in it and it also had this pattern I'm like uh I'm basically seeing this if air equals nil",
    "start": "905120",
    "end": "912320"
  },
  {
    "text": "everywhere in my code and I don't know what to do with it so is this normal Johnny tell me Well Ian why don't you",
    "start": "912320",
    "end": "919000"
  },
  {
    "text": "why don't you got to started cuz I have thoughts and opinions I think not only is it normal and it can be jarring at",
    "start": "919000",
    "end": "926120"
  },
  {
    "start": "924000",
    "end": "1101000"
  },
  {
    "text": "first because like you said it does occupy a lot of space but it's also kind of my favorite part",
    "start": "926120",
    "end": "931800"
  },
  {
    "text": "so it's hard to not like it I don't know but yes it's completely normal and expected and at least the if air equals",
    "start": "931800",
    "end": "938440"
  },
  {
    "text": "nil part uh what you do after that kind of changes but yeah you're I think you're always going to see that there's",
    "start": "938440",
    "end": "943880"
  },
  {
    "text": "been so many proposals to try to change that and all of them have gotten shot down and I like that they have all",
    "start": "943880",
    "end": "950120"
  },
  {
    "text": "gotten shot down I think like it's the personality of the goldang programming language thing for now yes but not not",
    "start": "950120",
    "end": "955920"
  },
  {
    "text": "because the creatives of the language wanted to be right it was it was U I think I can't",
    "start": "955920",
    "end": "962160"
  },
  {
    "text": "remember the name of the paper but there was a paper once upon a time that I that I read and I immediately sort of understood why the creators of the",
    "start": "962160",
    "end": "968440"
  },
  {
    "text": "language sort of chose to go that route the paper talked about sort of a explicit handling of of error values",
    "start": "968440",
    "end": "974440"
  },
  {
    "text": "right as opposed to sort of some some languages where you're going to see some exception handling right you can see a",
    "start": "974440",
    "end": "980680"
  },
  {
    "text": "try a catch finally or something like that right and then basically just bubbling up the error all the way up the stack right and hopefully something will",
    "start": "980680",
    "end": "987720"
  },
  {
    "text": "catch it and handle it and do something with it right so the go doesn't have exception handling right go go has error",
    "start": "987720",
    "end": "993639"
  },
  {
    "text": "handling and the error values right need to be treated sort of and handled sort of right then and there when they happen",
    "start": "993639",
    "end": "1000079"
  },
  {
    "text": "right there's no the traditional approach of the tri catch and finally and sort of these that style right of of",
    "start": "1000079",
    "end": "1006759"
  },
  {
    "text": "handling exceptions is not present right so when you see the typical sort of multivalue return where the last uh",
    "start": "1006759",
    "end": "1014120"
  },
  {
    "text": "values type right is you know satisfies the error interface right that's basically that's the idiom right within",
    "start": "1014120",
    "end": "1020319"
  },
  {
    "text": "the go Community uh basically indicates that okay you you're going to make some sort of function call and if something",
    "start": "1020319",
    "end": "1025640"
  },
  {
    "text": "goes wrong if there's a possibility of something going wrong within that function call expect that you know if",
    "start": "1025640",
    "end": "1030880"
  },
  {
    "text": "you say you know you're returning a two values right maybe the first value is what you really want should everything",
    "start": "1030880",
    "end": "1036760"
  },
  {
    "text": "go well and then the second one right is something that satisfies the error interface you should check to see if",
    "start": "1036760",
    "end": "1043079"
  },
  {
    "text": "something went wrong right and decide what you're going to do rather than there maybe in some cases maybe you want",
    "start": "1043079",
    "end": "1048558"
  },
  {
    "text": "to call a different function and maybe you want to retry right maybe you want to log something out or capture some",
    "start": "1048559",
    "end": "1054640"
  },
  {
    "text": "sort of metrics maybe maybe you you've got some open Telemetry tracing in there maybe you want to send a trace somewhere",
    "start": "1054640",
    "end": "1060919"
  },
  {
    "text": "however you want to handle that error right sort of the idiom is to sort of handle your error right then and there",
    "start": "1060919",
    "end": "1066600"
  },
  {
    "text": "as opposed to sort of you know allowing it to Bubble Up the stack and hopefully something handles it and so if is this",
    "start": "1066600",
    "end": "1072080"
  },
  {
    "text": "the concept of if if you're like deep deep into the code base you're like four functions in and you have one large",
    "start": "1072080",
    "end": "1077960"
  },
  {
    "text": "function that has uh perhaps four called other four functions and all of them",
    "start": "1077960",
    "end": "1083159"
  },
  {
    "text": "have a a value and the error is it something that you normally just return that error on that function and return",
    "start": "1083159",
    "end": "1089799"
  },
  {
    "text": "back or or is something where you you normally don't return back that error so",
    "start": "1089799",
    "end": "1095000"
  },
  {
    "text": "like my question is kind of do you actually raise a panic anytime or are you always returning that error back up",
    "start": "1095000",
    "end": "1100919"
  },
  {
    "text": "to stack well um careful with the rature we definitely don't want to there's no raising of anything and go um and",
    "start": "1100919",
    "end": "1108039"
  },
  {
    "start": "1101000",
    "end": "1324000"
  },
  {
    "text": "there's the and then and but even even then Panic right means something very specific for us so so um you don't want",
    "start": "1108039",
    "end": "1114880"
  },
  {
    "text": "to sort of use that word sort of when you mean an error right so depending on so to use your example depending on how",
    "start": "1114880",
    "end": "1121640"
  },
  {
    "text": "you want to handle your error right you could simply you know call a function maybe you're on a third of of four",
    "start": "1121640",
    "end": "1128280"
  },
  {
    "text": "functions right maybe the third one calls a fourth and if something goes wrong in the fourth and an error gets",
    "start": "1128280",
    "end": "1133679"
  },
  {
    "text": "returned and in third function you could decide to handle uh the error right then and there maybe you try calling again",
    "start": "1133679",
    "end": "1140200"
  },
  {
    "text": "maybe you do some other thing maybe if you want to log it out maybe you log it out and then call it a day or you you know more than likely you probably",
    "start": "1140200",
    "end": "1146520"
  },
  {
    "text": "return that error back to whatever called this particular function right what you typically want to avoid is sort",
    "start": "1146520",
    "end": "1152400"
  },
  {
    "text": "of maybe you have four functions deep and all they do is they all log out something right so in your log you know",
    "start": "1152400",
    "end": "1158320"
  },
  {
    "text": "files you end up having the same sort of error or you know similar errors or Sim",
    "start": "1158320",
    "end": "1163360"
  },
  {
    "text": "the root cause right sort of you know all over your your Logs with no additional value right yeah you could do",
    "start": "1163360",
    "end": "1170760"
  },
  {
    "text": "it that way you can have each function log something out just so you can see well which function sort of errored out",
    "start": "1170760",
    "end": "1176600"
  },
  {
    "text": "and made notice of it um but typically right you know you just want to allow maybe it's your top level function right",
    "start": "1176600",
    "end": "1183080"
  },
  {
    "text": "that it basically does the logging out or the tracing or whatever it is um I well personally the way I approach it",
    "start": "1183080",
    "end": "1189000"
  },
  {
    "text": "right and maybe Ian has a different approach personally the way I approach it is deeply nested function calls right",
    "start": "1189000",
    "end": "1194679"
  },
  {
    "text": "I don't log anything out I basic within my context that I'm passing down to those each of those functions I'm doing",
    "start": "1194679",
    "end": "1200600"
  },
  {
    "text": "open Telemetry tracing so I'm literally tracing right uh each function call and then I'm not logging anything out if",
    "start": "1200600",
    "end": "1206840"
  },
  {
    "text": "there's an error to be recorded I can add that to the span that I'm tracing that I'm adding to to my trace and then I allow basically the caller right to do",
    "start": "1206840",
    "end": "1214400"
  },
  {
    "text": "something with the error if they want to do something other than just you know make a note of it and in a trace somewhere right andow my top level",
    "start": "1214400",
    "end": "1221840"
  },
  {
    "text": "usually it's my main function somewhere or the main Handler of some kind I allow it to decide okay do I want to you know",
    "start": "1221840",
    "end": "1228440"
  },
  {
    "text": "I I've already done some tracing do I want to then send this particular error to an external bug tracker right or do I",
    "start": "1228440",
    "end": "1235120"
  },
  {
    "text": "want to Simply log it out if I want right but I'm localizing sort of uh Beyond just the traces I'm localizing",
    "start": "1235120",
    "end": "1242919"
  },
  {
    "text": "the logging of that error to just in just one place right or communicating that error to an external bug tracker to",
    "start": "1242919",
    "end": "1249000"
  },
  {
    "text": "just one place right but I that's because I know I have tracing throughout the application so I can rely on the",
    "start": "1249000",
    "end": "1254760"
  },
  {
    "text": "trace to provide me sort of the breadcrumbs without having to rely on my deeply nested functions to be emitting",
    "start": "1254760",
    "end": "1260799"
  },
  {
    "text": "log because that's effective what you're doing you're trying to say hey this function was running when this error occurred and you can go in your logs and",
    "start": "1260799",
    "end": "1266880"
  },
  {
    "text": "kind of see you know what was going on but traces give you the same benefit without you having to sort pepper your",
    "start": "1266880",
    "end": "1272200"
  },
  {
    "text": "log file with the same kind of error yeah do you have some a different approach I would I would agree with everything you said um I guess my main",
    "start": "1272200",
    "end": "1278760"
  },
  {
    "text": "philosophy is either handle it or add context and pass it up right so you'll see a lot of like format. ARF with a a w",
    "start": "1278760",
    "end": "1287480"
  },
  {
    "text": "for WAP and then they'll say like hey there's an issue with this user or right so you can add context all the way up so",
    "start": "1287480",
    "end": "1294159"
  },
  {
    "text": "even if you don't have tracing a lot of the time you can see exactly the path that that air took all the way back up",
    "start": "1294159",
    "end": "1299840"
  },
  {
    "text": "to where it's finally logged out or handled or okay I didn't know you could add stuff on top of errors that already",
    "start": "1299840",
    "end": "1305679"
  },
  {
    "text": "exist so you could basically add something uh how do you do that exactly there's quite a few ways but the one of",
    "start": "1305679",
    "end": "1311760"
  },
  {
    "text": "the more common ones you'll see is like um it's literally just like a format string where you pass the air as one",
    "start": "1311760",
    "end": "1319640"
  },
  {
    "text": "place and then you can add whatever content you want okay okay that's I think that's that's that's what I was",
    "start": "1319640",
    "end": "1324840"
  },
  {
    "start": "1324000",
    "end": "1586000"
  },
  {
    "text": "doing okay all right so you basically create an error yeah you also have to understand like an error I mentioned the",
    "start": "1324840",
    "end": "1330679"
  },
  {
    "text": "term interface earlier on very deliberately right so you can have you can create your own custom errors you",
    "start": "1330679",
    "end": "1336080"
  },
  {
    "text": "know it doesn't just have to be like a string you know value that you're just bubbling up you can have contextual sort",
    "start": "1336080",
    "end": "1342679"
  },
  {
    "text": "of a composite that represents as long as it satisfies the ER interface meaning that it has a method on there called",
    "start": "1342679",
    "end": "1348240"
  },
  {
    "text": "error that returns a string and that's all it needs right so you can create a custom you know struct right that",
    "start": "1348240",
    "end": "1355559"
  },
  {
    "text": "basically has fields that provide context maybe you're you know maybe this you might have an a custom error that um",
    "start": "1355559",
    "end": "1362520"
  },
  {
    "text": "tracks a particular endpoint value or a particular uh number of retries or",
    "start": "1362520",
    "end": "1367760"
  },
  {
    "text": "whatever it is right that way when you when you're passing this error value right back to the caller you can provide",
    "start": "1367760",
    "end": "1373840"
  },
  {
    "text": "additional context with Beyond just doing fmt airf and just embedding the",
    "start": "1373840",
    "end": "1379159"
  },
  {
    "text": "existing error you can use a customized error value that provides way more context than the simple um error value",
    "start": "1379159",
    "end": "1385679"
  },
  {
    "text": "yeah I think that's kind of the same concept we have uh in in other languages right where you can kind of like raise",
    "start": "1385679",
    "end": "1391240"
  },
  {
    "text": "different types of errors and you can have different and compose your own type of er of course Johnny when you say",
    "start": "1391240",
    "end": "1396520"
  },
  {
    "text": "interface my brain sometimes still says class but but sure I it doesn't make",
    "start": "1396520",
    "end": "1402919"
  },
  {
    "text": "sense I think uh for me it's also the component of like it looks like it's if not done right perhaps right Johnny if",
    "start": "1402919",
    "end": "1409919"
  },
  {
    "text": "not if you're not doing actually something with those errors it looks so repetitive to have those if eror equals n then return null whatever that it's",
    "start": "1409919",
    "end": "1417039"
  },
  {
    "text": "just like okay what is the point of this but perhaps our perhaps the point is that if you do it actually correctly and",
    "start": "1417039",
    "end": "1423200"
  },
  {
    "text": "and handle those errors then it actually looks like something not just empty if air nulls then return null right exactly",
    "start": "1423200",
    "end": "1429919"
  },
  {
    "text": "exactly yeah exactly okay that makes that makes sense to me that makes sense to me should we go on to the second one",
    "start": "1429919",
    "end": "1435120"
  },
  {
    "text": "yes all right so I mentioned that one of the things that I really like about go oh no maybe last one I have to ask this",
    "start": "1435120",
    "end": "1441159"
  },
  {
    "text": "so if you do the if a equals n do you do the if a in this line after or in line",
    "start": "1441159",
    "end": "1447600"
  },
  {
    "text": "because I've seen two variations where you do a statement do comma you know what I mean M yeah yeah yeah it's all",
    "start": "1447600",
    "end": "1454799"
  },
  {
    "text": "it's all about the the scope right so if I'm returning two values right if I can",
    "start": "1454799",
    "end": "1460799"
  },
  {
    "text": "if I'm trying to sort of limit the scope of those two values right to just my if block right okay basically I can do if",
    "start": "1460799",
    "end": "1468039"
  },
  {
    "text": "you know like some variable right for the value that I'm trying to capture comma error and then you know my colon",
    "start": "1468039",
    "end": "1473799"
  },
  {
    "text": "equal and then I call my function right yeah and then I can within that same if block I can then say if if error you",
    "start": "1473799",
    "end": "1480279"
  },
  {
    "text": "know not nil then do something with the variable that I captured right so it's",
    "start": "1480279",
    "end": "1485360"
  },
  {
    "text": "all about sort of the scoping right if you want to the basically whatever value",
    "start": "1485360",
    "end": "1490399"
  },
  {
    "text": "that gets returned if you want that to be available outside of the context of your if then you pred declare your",
    "start": "1490399",
    "end": "1495440"
  },
  {
    "text": "variable and then you can call the function and then basically you you're going to get back you can pred declare your your error variable you can pred",
    "start": "1495440",
    "end": "1501760"
  },
  {
    "text": "declare your your whatever value you want to capture and then the what gets returned from the call those things will",
    "start": "1501760",
    "end": "1507480"
  },
  {
    "text": "get assigned right to those preclarus and then you can do the if error nil",
    "start": "1507480",
    "end": "1512679"
  },
  {
    "text": "check on its own line but then what you can do if if you detect an error you can return early and then if you decide to",
    "start": "1512679",
    "end": "1518640"
  },
  {
    "text": "basically if the error check you know passes and there's no error then you now have that variable that you've C you precare it and now it's not available to",
    "start": "1518640",
    "end": "1525480"
  },
  {
    "text": "the rest of your whatever scope you're in right so to me it's all about the scoping of the return values that makes",
    "start": "1525480",
    "end": "1531960"
  },
  {
    "text": "lot sense okay okay thanks for clarifying my generalistic there is like do it in one line if you can right okay",
    "start": "1531960",
    "end": "1539080"
  },
  {
    "text": "there we go you can get away with it yeah if you can get away with it do it if not all right there we go okay",
    "start": "1539080",
    "end": "1544279"
  },
  {
    "text": "perfect awesome okay so enough about errors let me ask about the the second thing so one of the reasons I mentioned",
    "start": "1544279",
    "end": "1550919"
  },
  {
    "text": "that I really liked go is that I fact that I had a binary and that unlocked A full world of possibilities but whenever",
    "start": "1550919",
    "end": "1557760"
  },
  {
    "text": "I wanted to actually deploy the project I I was looking at some examples and",
    "start": "1557760",
    "end": "1562880"
  },
  {
    "text": "everyone was dockerizing these go projects and is EV the official Docker",
    "start": "1562880",
    "end": "1568159"
  },
  {
    "text": "images for going I've also actually seen this with similar type languages like rust for example where we we're still",
    "start": "1568159",
    "end": "1574520"
  },
  {
    "text": "dockerizing everything is so for me is like what is the final advantage of having a binary is it that we can do",
    "start": "1574520",
    "end": "1580440"
  },
  {
    "text": "like multi-stage builds that are smaller or are we actually leveraging the fact that we have a binary I mean the",
    "start": "1580440",
    "end": "1586960"
  },
  {
    "start": "1586000",
    "end": "1959000"
  },
  {
    "text": "multi-stage build with tiny images is really nice just clear um but we we",
    "start": "1586960",
    "end": "1592760"
  },
  {
    "text": "actually don't dockerize our production stuff uh we run it on bare metal and it's super easy to ship a binary from",
    "start": "1592760",
    "end": "1598799"
  },
  {
    "text": "like GitHub action straight to bare metal and it's it's still great so I I I think it just more depends on your",
    "start": "1598799",
    "end": "1604919"
  },
  {
    "text": "tooling versus so there's the tooling right there's the developer side of things when you were talking about that my mind quickly went to sort of the",
    "start": "1604919",
    "end": "1611360"
  },
  {
    "text": "operational side of things um there are some advantages you're going to have when you create an image right of of",
    "start": "1611360",
    "end": "1618279"
  },
  {
    "text": "your executable for certain deployment environments so if you wanted to sort of uh have orchestration tooling right you",
    "start": "1618279",
    "end": "1625120"
  },
  {
    "text": "know the kubernetes of the world the the Amazon sort of ecss the the far Gates and all these Services these are sort of",
    "start": "1625120",
    "end": "1631039"
  },
  {
    "text": "container orchestration Technologies and uh you can manage sort of uh",
    "start": "1631039",
    "end": "1636080"
  },
  {
    "text": "availability and having multiple instances running and you can manage resources allocated to those programs um",
    "start": "1636080",
    "end": "1642440"
  },
  {
    "text": "you can handle the networking uh between components you can there's a lot of benefits to using to dockerizing right",
    "start": "1642440",
    "end": "1649640"
  },
  {
    "text": "to having images that can be deployed with when you're using container orchestration Tooling in the case of Ian",
    "start": "1649640",
    "end": "1655279"
  },
  {
    "text": "perhaps they don't have those those requirements right so they can deploy the binary directly and and I'm curious",
    "start": "1655279",
    "end": "1660600"
  },
  {
    "text": "to hear how you manage your updates here maybe use like a package manager or something for the particular OS that's what I would probably uh um think to do",
    "start": "1660600",
    "end": "1667799"
  },
  {
    "text": "but uh yeah it's all to me it's all about sort of the operational sort of context for your program and whether",
    "start": "1667799",
    "end": "1674000"
  },
  {
    "text": "dockerizing making images of of of your program you know makes it easier to scale up or down and and things of that",
    "start": "1674000",
    "end": "1679440"
  },
  {
    "text": "nature yeah I mean if I think we were curious see you how you actually manage those binaries in the in in the machines",
    "start": "1679440",
    "end": "1686480"
  },
  {
    "text": "yeah so I mean we we use elastic beant stock through Amazon um okay which is just dead simple and easy uh so that's",
    "start": "1686480",
    "end": "1693880"
  },
  {
    "text": "why we use it and it can still do all the auto scaling stuff and all of that they just abstract that from you right",
    "start": "1693880",
    "end": "1699120"
  },
  {
    "text": "exactly it's fully managed exactly and yeah for our small team it works very",
    "start": "1699120",
    "end": "1704840"
  },
  {
    "text": "well would recommend a little bit weird but we we really haven't seen the need for like the big container orchestration",
    "start": "1704840",
    "end": "1710840"
  },
  {
    "text": "type stuff yeah and also guess when when Johnny you were saying that like if you have a standard in a very large team and",
    "start": "1710840",
    "end": "1716760"
  },
  {
    "text": "everyone's on Docker or if you're using like a kubernetes or an ECR or something that has Auto scaling and you want to",
    "start": "1716760",
    "end": "1722200"
  },
  {
    "text": "define the number of containers it's really easy if everyone's up to the standard but what is saying is that if",
    "start": "1722200",
    "end": "1727720"
  },
  {
    "text": "we're just one team and we don't have that Tooling in place yet and we're not using like a kubernetes or any like con",
    "start": "1727720",
    "end": "1734039"
  },
  {
    "text": "like specific orchestration or container orchestration tool then it just easy to go for the binary and I can also see",
    "start": "1734039",
    "end": "1739840"
  },
  {
    "text": "that perhaps when you're shipping all of these CIS in go the fact that you actually can ship a binary is really",
    "start": "1739840",
    "end": "1746360"
  },
  {
    "text": "really nice right because if you're packaging it for others then comes this whole other side that we're not talking",
    "start": "1746360",
    "end": "1751440"
  },
  {
    "text": "about of like actually shipping death tools and uh in that's like it's it's great to have a binary I guess yeah when",
    "start": "1751440",
    "end": "1757519"
  },
  {
    "text": "you were talking earlier about how do you share a python script I was my mind was immedately you know went to so like",
    "start": "1757519",
    "end": "1762919"
  },
  {
    "text": "some man I I've I have some battle scars from trying to share Ruby uh um scripts",
    "start": "1762919",
    "end": "1768519"
  },
  {
    "text": "back in the day with teammates and whatnot uh variations on which version they had or or little quirks in how you",
    "start": "1768519",
    "end": "1776600"
  },
  {
    "text": "know their gem package management was configured and weird issues right that",
    "start": "1776600",
    "end": "1782519"
  },
  {
    "text": "it just made it impractical to try and share tools right between each other and",
    "start": "1782519",
    "end": "1787679"
  },
  {
    "text": "you know then you try to basically solve the people problem aspect right and communicate hey this is the version of",
    "start": "1787679",
    "end": "1793760"
  },
  {
    "text": "the things that we're using you have to be on Ruby this you you can't be using non-standard VM there you can like you",
    "start": "1793760",
    "end": "1800760"
  },
  {
    "text": "have to end up basically creating all these sort of rules around sort of trying to standardize so that everybody's on the same thing but it's",
    "start": "1800760",
    "end": "1807080"
  },
  {
    "text": "way easier to just say hey my coworker here uses Windows let me just create a binary right let me just create an exe",
    "start": "1807080",
    "end": "1814200"
  },
  {
    "text": "for them right just build an an exe for them right oh my friend over there uses um this particular flavor of Linux okay",
    "start": "1814200",
    "end": "1821159"
  },
  {
    "text": "let me build something for you right I'm I'm on Darwin I'm on a Mac right you know let me build something for me and",
    "start": "1821159",
    "end": "1826880"
  },
  {
    "text": "and my other Mac using teammates right and the build process and go is man it",
    "start": "1826880",
    "end": "1832480"
  },
  {
    "text": "is I can't tell you how amazing it is right just by specifying a couple of environment variables just just",
    "start": "1832480",
    "end": "1837880"
  },
  {
    "text": "specifying which what operating system and what CPU architecture am I building for it takes care of the rest it's",
    "start": "1837880",
    "end": "1843760"
  },
  {
    "text": "magical right now something like that is incredible right if you come from you know build farms uh you know if you have",
    "start": "1843760",
    "end": "1850279"
  },
  {
    "text": "any experience with build farms or anything like that you will love the uh experience for building different",
    "start": "1850279",
    "end": "1856320"
  },
  {
    "text": "binaries different executables for platforms you know that's one of the strengths of of go yeah I mean for me",
    "start": "1856320",
    "end": "1861720"
  },
  {
    "text": "that was also obvious when you mentioned it Johnny like the building but also like the the tooling around the go",
    "start": "1861720",
    "end": "1868399"
  },
  {
    "text": "programming language also in terms of like the packaging of like I always think that in Python and I've been",
    "start": "1868399",
    "end": "1873519"
  },
  {
    "text": "working python for some years and we still feel like we're Reinventing packaging every every six months it's",
    "start": "1873519",
    "end": "1880000"
  },
  {
    "text": "just like the new you know JavaScript JavaScript Frameworks it's like the new the new framework the new python like",
    "start": "1880000",
    "end": "1886120"
  },
  {
    "text": "dependency management solution that that will take care of all the problems we have those every 3 to six months but uh",
    "start": "1886120",
    "end": "1892720"
  },
  {
    "text": "in go it feels like you you you have a great package managing solution and that also comes to kind of my uh next",
    "start": "1892720",
    "end": "1899279"
  },
  {
    "text": "question which is related to packages and I was really surprised when I started working everything in some of",
    "start": "1899279",
    "end": "1904519"
  },
  {
    "text": "these go Parts everything seemed so simple and so flexible but there's still something that I quite don't understand",
    "start": "1904519",
    "end": "1910679"
  },
  {
    "text": "is that I was so I was basically creating multiple packages inside of my repository in my go kind of app it had",
    "start": "1910679",
    "end": "1918240"
  },
  {
    "text": "multiple multiple packages almost and each of them kind of referenced the name of the my GitHub repo it was almost like",
    "start": "1918240",
    "end": "1925519"
  },
  {
    "text": "github.com SL myy GitHub username slash whatever that package was and it felt",
    "start": "1925519",
    "end": "1932080"
  },
  {
    "text": "like it's a little bit of like far west where I could do whatever I wanted but I",
    "start": "1932080",
    "end": "1937679"
  },
  {
    "text": "think this is kind of the opportunity to ask how do you guys see this relationship between packaging and how's",
    "start": "1937679",
    "end": "1944000"
  },
  {
    "text": "like I think there's some like Nam space Concepts also involved here but I would love to get some of your thoughts of how",
    "start": "1944000",
    "end": "1949519"
  },
  {
    "text": "does this work like why does my package have the same name as my GitHub repo I don't even know where to start",
    "start": "1949519",
    "end": "1955639"
  },
  {
    "text": "with that oh no oh no I mean I think the main thing was",
    "start": "1955639",
    "end": "1962039"
  },
  {
    "start": "1959000",
    "end": "2344000"
  },
  {
    "text": "when when go came out it didn't have a package manager right you had a single go path and you had to put everything in",
    "start": "1962039",
    "end": "1968159"
  },
  {
    "text": "that go path everything in there or or it couldn't find it right so there's there's a necessity to name space and",
    "start": "1968159",
    "end": "1973399"
  },
  {
    "text": "then the convenience of being like oh this is just the name is where it exists",
    "start": "1973399",
    "end": "1978880"
  },
  {
    "text": "so as I download code you know it's all in the right place um I guess I don't know beyond that if there's some history",
    "start": "1978880",
    "end": "1984919"
  },
  {
    "text": "there they well you know we're not going to we're not going to drag uh dwart through our our interesting you know",
    "start": "1984919",
    "end": "1991519"
  },
  {
    "text": "package management history in the go Community safe to say that the module system that we have now you know it's",
    "start": "1991519",
    "end": "1997480"
  },
  {
    "text": "not everyone's favorite but just like go U you know everybody pretty much you know loves it at this point only because",
    "start": "1997480",
    "end": "2004159"
  },
  {
    "text": "of the standardized nature of it well maybe love is is a strong but it's good enough it's good enough and it gives you",
    "start": "2004159",
    "end": "2011080"
  },
  {
    "text": "sort of a reproducibility and a lot of other benefits but the to your question having a github.com base domain name",
    "start": "2011080",
    "end": "2018679"
  },
  {
    "text": "with your you know GitHub handle and it's not just GitHub right it's gitlab it's bit buckets wherever right you whatever whatever your your um code",
    "start": "2018679",
    "end": "2025440"
  },
  {
    "text": "repository tool of choice is basically it makes it easy for the goget command right to know exactly where do I go and",
    "start": "2025440",
    "end": "2032399"
  },
  {
    "text": "grab this particular uh um package to pull it down and store it in a local",
    "start": "2032399",
    "end": "2037760"
  },
  {
    "text": "module cache right that way you know I don't have to keep pulling it down every time I do a build basically it just",
    "start": "2037760",
    "end": "2042919"
  },
  {
    "text": "makes and when you are looking at code literally just copy and paste this package path right into your browser and",
    "start": "2042919",
    "end": "2050398"
  },
  {
    "text": "the report you go right so it makes it easy there a so many benefits to having",
    "start": "2050399",
    "end": "2055480"
  },
  {
    "text": "the path right it provides name spacing There's No Going to there's not going to be any conflicts as to you know naming",
    "start": "2055480",
    "end": "2062079"
  },
  {
    "text": "conflict maybe you have two packages named Fu right if one's under a particular github.com SL username SL",
    "start": "2062079",
    "end": "2068679"
  },
  {
    "text": "food that's going to be very different right just by looking at you know it's going to be unique right because there's no two packages are going to have have",
    "start": "2068679",
    "end": "2074158"
  },
  {
    "text": "the same naming right and you don't have to jump through hoops to do any funky ilas sing or anything like that to know which one you're dealing with right so",
    "start": "2074159",
    "end": "2080398"
  },
  {
    "text": "there's a lot of benefits to doing it that way and one of the things I try to teach developers is from the get-go",
    "start": "2080399",
    "end": "2085878"
  },
  {
    "text": "right when you first install go if the install doesn't create it for you but on you should create it yourself is there's",
    "start": "2085879",
    "end": "2091760"
  },
  {
    "text": "going to be a go directory that gets created under your your root username sort of account right so if you're on a Linux machine or something like that",
    "start": "2091760",
    "end": "2097760"
  },
  {
    "text": "right under your under your home right there's going to be a go fold that gets created and this is where I typically tell folks like look when you download",
    "start": "2097760",
    "end": "2104880"
  },
  {
    "text": "any package that you do a goget right there's going to be a PKG folder that gets created under this go directory for",
    "start": "2104880",
    "end": "2110280"
  },
  {
    "text": "you and this is where all the module this is where the module cache lives this is where all anything that you download that gets that you don't vendor",
    "start": "2110280",
    "end": "2116240"
  },
  {
    "text": "and we can talk about vendoring if you'd like but anything you don't vendor is going to go into that particular module cache and then uh you know from there",
    "start": "2116240",
    "end": "2123280"
  },
  {
    "text": "you can create an SRC directory where you put your code so I you know create an SRC directory I have github.com subdirectory followed by my J borico",
    "start": "2123280",
    "end": "2131079"
  },
  {
    "text": "GitHub handle so I have this the hierarchy that allows me to basically say Okay anytime I'm I'm looking for",
    "start": "2131079",
    "end": "2137839"
  },
  {
    "text": "code right or anytime I need to check out code or for reposit whatever it is I need to bring it locally I just go into",
    "start": "2137839",
    "end": "2143359"
  },
  {
    "text": "my go SRC github.com whatever username SL project name so it simplifies",
    "start": "2143359",
    "end": "2149599"
  },
  {
    "text": "everything I know exactly where to go look for the particular source code for a project that I'm working with directly",
    "start": "2149599",
    "end": "2155839"
  },
  {
    "text": "and I know exactly where to go in a module cash to find the module code I'm looking for and even when I vendor my",
    "start": "2155839",
    "end": "2161520"
  },
  {
    "text": "dependencies in a particular project in my vendor directory there's a hierarchy in there there's a github.com followed",
    "start": "2161520",
    "end": "2167920"
  },
  {
    "text": "by username followed by whatever project that I'm that I'm relying on as a dependency so it just keeps that consistency across the board right and",
    "start": "2167920",
    "end": "2174200"
  },
  {
    "text": "when I use even I can use multiple versions of the same dependency right because the module system follows a Semitic versioning mechanism so you know",
    "start": "2174200",
    "end": "2182040"
  },
  {
    "text": "I know it it might feel a little odd it might feel a little weird at first but trust me we in the community have have",
    "start": "2182040",
    "end": "2188800"
  },
  {
    "text": "been burned not burned but we've gone through we've gone through some hardships right and we understand the",
    "start": "2188800",
    "end": "2195400"
  },
  {
    "text": "value of what we have now it's not perfect obviously nothing is but it works well enough that you know it",
    "start": "2195400",
    "end": "2200680"
  },
  {
    "text": "creates that predictability and that reproducibility for our builds you know I had seen it once before you know where",
    "start": "2200680",
    "end": "2207040"
  },
  {
    "text": "in um Vim actually uh so whenever I install a plugin the reference is always",
    "start": "2207040",
    "end": "2213119"
  },
  {
    "text": "someone's GitHub repo so whatever packages you install it's always going go back to the re but the what you",
    "start": "2213119",
    "end": "2219119"
  },
  {
    "text": "mentioned about consistency for me is really really clear especially in a go project where I actually know where",
    "start": "2219119",
    "end": "2224200"
  },
  {
    "text": "everything comes from just by you being able freely to put whatever you want",
    "start": "2224200",
    "end": "2229640"
  },
  {
    "text": "wherever in a way of like whatever packages you want to put inside of your good repo you're sort of free to do so",
    "start": "2229640",
    "end": "2236560"
  },
  {
    "text": "and and that's the problem that I saw in Python where I'm very constrained sometimes you have to put some things in",
    "start": "2236560",
    "end": "2241960"
  },
  {
    "text": "certain places and in their certain structure and I felt this freedom and simplicity that I think is really",
    "start": "2241960",
    "end": "2247560"
  },
  {
    "text": "characteristic of go that oh if you want to just create another folder and make a package out of it great do it no problem",
    "start": "2247560",
    "end": "2254280"
  },
  {
    "text": "and and that was really really cool actually good glad you like it yeah I do think how we do the package naming",
    "start": "2254280",
    "end": "2262040"
  },
  {
    "text": "really just fits well with like the go ethos of just like stupid simple keep it simple yeah like I I can't think of a",
    "start": "2262040",
    "end": "2268440"
  },
  {
    "text": "simpler way to do it than just where it exists yeah that's a really good point what else you got okay so we talked",
    "start": "2268440",
    "end": "2274960"
  },
  {
    "text": "about the packaging and how that's going to to GitHub repost and I also wanted to talk about structure and to give an",
    "start": "2274960",
    "end": "2282480"
  },
  {
    "text": "example I'm going to give an example of something one of these side projects that I've built was basically a a website that we can read news from",
    "start": "2282480",
    "end": "2290000"
  },
  {
    "text": "Denmark but in English and it's basically a um yeah I guess like a a very simple web app and and I started",
    "start": "2290000",
    "end": "2296560"
  },
  {
    "text": "thinking okay I have these types that I'm I'm starting to writing more more types I have something related to like",
    "start": "2296560",
    "end": "2302599"
  },
  {
    "text": "the parsing of websites or RSS fetching and then I have something related to maybe uh I don't know like serving the",
    "start": "2302599",
    "end": "2308720"
  },
  {
    "text": "web page or templating or whatever and I wanted to ask is there a way that you normally structure these things do you",
    "start": "2308720",
    "end": "2314760"
  },
  {
    "text": "do do you structure your go is there like I know probably there are five answers to this but is there sure",
    "start": "2314760",
    "end": "2320839"
  },
  {
    "text": "there's no consensus so maybe giving you a personal opinion I'm excited for Johnny's answer on this one um I still",
    "start": "2320839",
    "end": "2326640"
  },
  {
    "text": "struggle with this I I've still made mistakes that haunt me like you know a new thing I wrote last year is I'm like",
    "start": "2326640",
    "end": "2333040"
  },
  {
    "text": "oh that was that's wrong like I would not do that again so yeah I'm I'm also interested for your so it's just like",
    "start": "2333040",
    "end": "2339480"
  },
  {
    "text": "python is what you're saying well I mean I wouldn't go that far um here's um like",
    "start": "2339480",
    "end": "2344599"
  },
  {
    "start": "2344000",
    "end": "2634000"
  },
  {
    "text": "you I've come across many different approaches right and I think we even had we've had attempts right in the go",
    "start": "2344599",
    "end": "2350880"
  },
  {
    "text": "community at sort of a specifying sort of standard structure for go projects etc etc and even the go team themselves",
    "start": "2350880",
    "end": "2359520"
  },
  {
    "text": "right have sort of shied away from saying this is how you should structure your projects right it's at first I",
    "start": "2359520",
    "end": "2366079"
  },
  {
    "text": "thought it was not great that there was no standard approach and then the more I use go the more I realize okay I have",
    "start": "2366079",
    "end": "2372640"
  },
  {
    "text": "flexibility right I'd rather idioms right if you've ever heard sort of a um what's the term um convention over",
    "start": "2372640",
    "end": "2377839"
  },
  {
    "text": "configuration from my time in the rubyan rails world you know that's like a mantra I think we've carried that into",
    "start": "2377839",
    "end": "2385000"
  },
  {
    "text": "or I carry that sort of a mentality into my go projects but I will say that the at a very minimum once I know what kind",
    "start": "2385000",
    "end": "2391880"
  },
  {
    "text": "of project I'm building right I follow a couple different patterns if I'm building an executable ultimately the",
    "start": "2391880",
    "end": "2397400"
  },
  {
    "text": "Pro May produce executables but also itself be a package right the first thing I do the moment I create my repository I'm going to create a CMD",
    "start": "2397400",
    "end": "2404119"
  },
  {
    "text": "folder inside of that CMD folder I'm going to have another folder representing the name or names of",
    "start": "2404119",
    "end": "2410079"
  },
  {
    "text": "whatever executables I intend to build right so if I want to build two executables one named f one name bar in",
    "start": "2410079",
    "end": "2415960"
  },
  {
    "text": "my CMD folder I have a Fu folder and and then I also have a bar folder right and then in those folders I have a main that",
    "start": "2415960",
    "end": "2422240"
  },
  {
    "text": "go for each right so now I know this project you know the moment I I go into any Repository",
    "start": "2422240",
    "end": "2427839"
  },
  {
    "text": "right if I see a CMD folder at the root of that project I know this project is at least is going to build right one or",
    "start": "2427839",
    "end": "2434079"
  },
  {
    "text": "more executables right that project itself may also you know naturally will be a module and of itself right and I",
    "start": "2434079",
    "end": "2440880"
  },
  {
    "text": "know that there's going to be you know go files that are at the root of the of the project right are going to have a",
    "start": "2440880",
    "end": "2446400"
  },
  {
    "text": "package declaration and I know if this uh project can be imported in some way",
    "start": "2446400",
    "end": "2451560"
  },
  {
    "text": "somebody can do a goget you know github.com username SL whatever project is so that",
    "start": "2451560",
    "end": "2457319"
  },
  {
    "text": "means even if that project has some executables in there as long as there are things that can be used at the",
    "start": "2457319",
    "end": "2463119"
  },
  {
    "text": "package level right for as a library right within a project somebody can still go get that repository but they",
    "start": "2463119",
    "end": "2469520"
  },
  {
    "text": "can also do a go install to point to the executables right in the CMD folders right so you notice that that's the only",
    "start": "2469520",
    "end": "2477119"
  },
  {
    "text": "sort of set of folders that I start with I don't start I don't try to create you know a bunch of hierarchies I don't have",
    "start": "2477119",
    "end": "2483520"
  },
  {
    "text": "model folders I don't have you know a types folder folder yeah not that you can't have those right these things are",
    "start": "2483520",
    "end": "2491240"
  },
  {
    "text": "I find myself nine out of 10 times I find myself starting to introduce that",
    "start": "2491240",
    "end": "2496400"
  },
  {
    "text": "sort of hierarchy and that sort of division once the project is mature enough for me to know that okay you need",
    "start": "2496400",
    "end": "2503119"
  },
  {
    "text": "once I need it exactly I don't prematurely start to create a structure this is not like a framework where you initialize a framework you say create",
    "start": "2503119",
    "end": "2509359"
  },
  {
    "text": "this project and you know it spits out a bunch of different folders and files and everything else and it's I'm not using a framework right so I create these",
    "start": "2509359",
    "end": "2516400"
  },
  {
    "text": "hierarchies when I need them and I and I go out of my way to not create unnecessary hierarchy because the more",
    "start": "2516400",
    "end": "2521480"
  },
  {
    "text": "folders I create the more packages in I'm going to use the term subpackage but there's no such thing in go there's only",
    "start": "2521480",
    "end": "2527240"
  },
  {
    "text": "packages the the the more of those nested packages I create you know the higher the likelihood that I might have",
    "start": "2527240",
    "end": "2532560"
  },
  {
    "text": "some sort of ccal like import you know kind of going on there right if I need to have one package use something from",
    "start": "2532560",
    "end": "2538319"
  },
  {
    "text": "another package like it creates all this sort of extra stuff that I have to keep in my mind now right at most if I'm",
    "start": "2538319",
    "end": "2545119"
  },
  {
    "text": "building a server a web server for example I might have a handlers folder at the top level where I can keep my",
    "start": "2545119",
    "end": "2550720"
  },
  {
    "text": "handlers in there that way I know where all my handlers are and my handlers are probably going to share some code between each other right but that's",
    "start": "2550720",
    "end": "2556760"
  },
  {
    "text": "going to be relegated to the Handler's package only right and then everything else at the root has to do with think of",
    "start": "2556760",
    "end": "2562680"
  },
  {
    "text": "it as sort of Core Business logic Behavior right that exists at the root of my project and then I'm have a CMD",
    "start": "2562680",
    "end": "2568200"
  },
  {
    "text": "folder with those executable uh folders in there right that is 80% of all the projects that structure that approach is",
    "start": "2568200",
    "end": "2574680"
  },
  {
    "text": "Simplicity for those projects that's what they are again the bigger the project you know you don't want you don't want to go into a a go repository",
    "start": "2574680",
    "end": "2581760"
  },
  {
    "text": "and you're just scrolling down for days because all the files are in all in one at the root of the project I mean maybe",
    "start": "2581760",
    "end": "2587760"
  },
  {
    "text": "that's suitable right if that's truly the case everything exists at the top level package um but you know you don't",
    "start": "2587760",
    "end": "2593160"
  },
  {
    "text": "want to sort of necessarily from the getg goes try to create all these hierarchies and and folders and inside of folders inside of folders because",
    "start": "2593160",
    "end": "2599280"
  },
  {
    "text": "that's just going to create more a mess for you checking my web app repository no",
    "start": "2599280",
    "end": "2605000"
  },
  {
    "text": "hand no handlers folders all right okay but there is a CMD there is a CMD but with but but just",
    "start": "2605000",
    "end": "2613960"
  },
  {
    "text": "to clarify J I'm just curious when you mean folders these are also packages in",
    "start": "2613960",
    "end": "2619040"
  },
  {
    "text": "go right yeah you so think of it this way the folder hierarchy is more so for",
    "start": "2619040",
    "end": "2624079"
  },
  {
    "text": "you and I to communicate as developers than it is truly for go because at the end of the day the go tooling grabs all",
    "start": "2624079",
    "end": "2629599"
  },
  {
    "text": "of your files right and the only thing it cares about is a package decoration at the top of each file that's the only",
    "start": "2629599",
    "end": "2634680"
  },
  {
    "start": "2634000",
    "end": "2771000"
  },
  {
    "text": "thing it cares about it just it just gets out of the way it's what's beautiful about it I fell in love with with go is that what you said applies to",
    "start": "2634680",
    "end": "2641720"
  },
  {
    "text": "any language and any software pattern that exists it's like okay don't build a",
    "start": "2641720",
    "end": "2646760"
  },
  {
    "text": "necessary complexity when you don't need it I'll handle a structure when I need it but the fact that just go just gets",
    "start": "2646760",
    "end": "2652000"
  },
  {
    "text": "out of the way when I just need to build folders is pretty nice yeah indeed and I should also caveat that the reason why I",
    "start": "2652000",
    "end": "2658800"
  },
  {
    "text": "asked it was like Matt rers how I write HTTP services in go is like the thing",
    "start": "2658800",
    "end": "2664240"
  },
  {
    "text": "that also inspired to like okay there should be a good way of doing this ended up trying to implement some of the",
    "start": "2664240",
    "end": "2670079"
  },
  {
    "text": "patterns but ended up doing whatever I wanted I don't think this will ever be",
    "start": "2670079",
    "end": "2676119"
  },
  {
    "text": "like a solved problem because I do think go like forces you to actually think about how your architecture and your",
    "start": "2676119",
    "end": "2681319"
  },
  {
    "text": "your package is and you're just G to have to figure it out for every project and in a way that kind of isn't fun but",
    "start": "2681319",
    "end": "2688280"
  },
  {
    "text": "I think it makes it better at the end assuming you don't really mess it up you",
    "start": "2688280",
    "end": "2694119"
  },
  {
    "text": "you formed some scars over the years you remember that you you shouldn't create all of those necessary boiler plates",
    "start": "2694119",
    "end": "2699599"
  },
  {
    "text": "because you're not going to need it in the future yeah yeah I think it's horizontal to most software projects",
    "start": "2699599",
    "end": "2705200"
  },
  {
    "text": "okay what about um and you tell me when to stop Johnny I could I could stay here forever but I I was talking about",
    "start": "2705200",
    "end": "2712720"
  },
  {
    "text": "because I was developing this uh web application and there comes a time where I eventually need to handle some data",
    "start": "2712720",
    "end": "2718280"
  },
  {
    "text": "and store some data and that's where normally TI starts coming to my face and I start having the the realization that",
    "start": "2718280",
    "end": "2725440"
  },
  {
    "text": "I'm going to have to be handling things like databases which just complexity that I do not like to deal with in",
    "start": "2725440",
    "end": "2730800"
  },
  {
    "text": "general and so I know that go is kind of this stupid simple approach and you",
    "start": "2730800",
    "end": "2736640"
  },
  {
    "text": "mentioned it Ian it's like it gets out of the way and it's simple and it's obvious in most things and I felt when I",
    "start": "2736640",
    "end": "2743040"
  },
  {
    "text": "was like okay I'm going to start using some data I'm going to do some I don't know ins search statements in the exite",
    "start": "2743040",
    "end": "2748800"
  },
  {
    "text": "database whatever should I use an norm and I see a lot of these go examples where they're not actually using an RM",
    "start": "2748800",
    "end": "2756200"
  },
  {
    "text": "uh they're just writing the SQL code themselves and of course something else you can also do in Python but and I",
    "start": "2756200",
    "end": "2762119"
  },
  {
    "text": "asked myself is the go Simplicity going until the point where most ghost projects don't use an RM or like you",
    "start": "2762119",
    "end": "2769079"
  },
  {
    "text": "should normally use an RM this one's hard for me cuz I I see the benefits of",
    "start": "2769079",
    "end": "2774480"
  },
  {
    "start": "2771000",
    "end": "2819000"
  },
  {
    "text": "the omm the main monolith I work on uses an OM extensively and I hate it but but",
    "start": "2774480",
    "end": "2783319"
  },
  {
    "text": "poor omm I feel like anym you would hate it I I I will say it's like as far as",
    "start": "2783319",
    "end": "2788680"
  },
  {
    "text": "like developer velocity goes for 90% of the time it's way faster right but I",
    "start": "2788680",
    "end": "2794880"
  },
  {
    "text": "still don't know if that 10% Edge case makes up for it when you're digging through gorm code trying to figure out",
    "start": "2794880",
    "end": "2803000"
  },
  {
    "text": "why I'm duplic like inserting rows twice like that sort of thing I don't know I can't think of a good example but yeah",
    "start": "2803000",
    "end": "2809079"
  },
  {
    "text": "that 10% Edge case is the worst part and I don't know if it makes it worth it I don't know that was a rambling answer",
    "start": "2809079",
    "end": "2815839"
  },
  {
    "text": "John I got to add my two sents the the orms and Frameworks and all these things",
    "start": "2815839",
    "end": "2821359"
  },
  {
    "text": "right that that class of developer tools it's all about to of velocity right it's",
    "start": "2821359",
    "end": "2826720"
  },
  {
    "text": "all about how quickly can remove to get this out the door and I you know we don't have to reinvent patterns for data",
    "start": "2826720",
    "end": "2832800"
  },
  {
    "text": "access and everything else orm sort of helps alleviate that if everybody knows you know to use Ian's example if",
    "start": "2832800",
    "end": "2838599"
  },
  {
    "text": "everybody know on team knows gorm uh then we know you know what what gorm code looks like and we can into it",
    "start": "2838599",
    "end": "2844520"
  },
  {
    "text": "basically just by looking at a you know a line of code exactly what data we're looking for what the we conditions are",
    "start": "2844520",
    "end": "2850640"
  },
  {
    "text": "and you know etc etc right it's easy because everybody knows what the API looks like that said in for most in most",
    "start": "2850640",
    "end": "2858079"
  },
  {
    "text": "cases if you're just doing some crud work it's perfectly fine it's fine everybody knows how to use it we can get",
    "start": "2858079",
    "end": "2863280"
  },
  {
    "text": "moving quickly nobody has to spend time coming up with yet another way of doing the data access and some cases where you",
    "start": "2863280",
    "end": "2869760"
  },
  {
    "text": "need to tight control over performance or the kind of um the exactly the how",
    "start": "2869760",
    "end": "2876240"
  },
  {
    "text": "you want your query to query to run exactly what you want to join on all these kinds of things you know in the",
    "start": "2876240",
    "end": "2882160"
  },
  {
    "text": "case of relational databases you have the ability right to execute raw SQL",
    "start": "2882160",
    "end": "2887599"
  },
  {
    "text": "statements right using these orms um I think most of them if not all have the ability to to just you know run an exact",
    "start": "2887599",
    "end": "2894200"
  },
  {
    "text": "if you don't want any output back or run an um some sort of API call you can make to execute the raw SQL stram that you're",
    "start": "2894200",
    "end": "2900839"
  },
  {
    "text": "going to provide right so you have the sort of the benefit of both approaches right with these RMS and if you really",
    "start": "2900839",
    "end": "2907480"
  },
  {
    "text": "want to and if you want to execute your own query against sort of raw database connection well you can just basically",
    "start": "2907480",
    "end": "2912920"
  },
  {
    "text": "say hey give me the actual SQL connection and I'm going to execute my own my own stuff against there if you",
    "start": "2912920",
    "end": "2918079"
  },
  {
    "text": "want to see okay is it the urm adding you know extra stuff or is it just the SQL that we're sending that's you know",
    "start": "2918079",
    "end": "2923920"
  },
  {
    "text": "maybe taking too long to return or whatever the case may be right so orms are good for that particular use case",
    "start": "2923920",
    "end": "2930040"
  },
  {
    "text": "and the RMS will tend to sort of you know dynamically sort of based on the types you declare based on the struct",
    "start": "2930040",
    "end": "2936240"
  },
  {
    "text": "you declare instruct tags that you add to fields and whatnot they'll try to do best the best they can to infer a lot of",
    "start": "2936240",
    "end": "2942960"
  },
  {
    "text": "things for you and manage you know creating tables for you if you want them to you know do migrations and all kinds of crazy things but if in a case where",
    "start": "2942960",
    "end": "2949920"
  },
  {
    "text": "you don't want an RM to actively be in the path of every query you make or or",
    "start": "2949920",
    "end": "2955680"
  },
  {
    "text": "trying to infer you know columns and Things based on the types that you have in based on the fields that you have",
    "start": "2955680",
    "end": "2961000"
  },
  {
    "text": "instruct you can actually pre-generate things ahead of time right you can sort of uh you can use a um I think we met",
    "start": "2961000",
    "end": "2966720"
  },
  {
    "text": "mention gor sort of the on one end of the extreme on the other the extreme you have things like SQL C or even SQL X",
    "start": "2966720",
    "end": "2973440"
  },
  {
    "text": "right as packages within the go community that have that have been used extensively and a lot of folks have",
    "start": "2973440",
    "end": "2978599"
  },
  {
    "text": "preference for those as opposed to using an RM so these things are more lightweight approaches right to doing on",
    "start": "2978599",
    "end": "2984079"
  },
  {
    "text": "database access over a full-blown RM which might you know have a little bit more bloat than than you care for so you",
    "start": "2984079",
    "end": "2991000"
  },
  {
    "text": "know again as with all things it depends right but I think I found in my project I found a happy medium between using ORS",
    "start": "2991000",
    "end": "2998400"
  },
  {
    "text": "to move fast and then basically dropping down to writing we're all SQL oh by the way you should always learn SQL that's a",
    "start": "2998400",
    "end": "3005160"
  },
  {
    "text": "skill that you'll never going to regret regardless of language or framework or whatever you know 10 years from now",
    "start": "3005160",
    "end": "3010359"
  },
  {
    "text": "whatever you you're not going to regret learning SQL so learn SQL so and when I need to actually drop down to actually writing my own very sqls especially try",
    "start": "3010359",
    "end": "3017119"
  },
  {
    "text": "like trying to get things like window functions through an RM very incredibly hard incredibly hard right you know I",
    "start": "3017119",
    "end": "3023200"
  },
  {
    "text": "just drop down to Raw squel whenever I need to do things of that nature as a machine learning engineer I I I I've learned that through uh the software",
    "start": "3023200",
    "end": "3030119"
  },
  {
    "text": "developers need of or tendency to use RMS normally who's writing this squel it's it's more on this side because we",
    "start": "3030119",
    "end": "3036640"
  },
  {
    "text": "need to access the actual data so yeah I completely feel you but I also feel like it's perhaps I had this thought that it",
    "start": "3036640",
    "end": "3042760"
  },
  {
    "text": "was a very go specific thing where goang or the go Community tends to jump less",
    "start": "3042760",
    "end": "3050119"
  },
  {
    "text": "towards an Norm than most other communities that's what my feeling was",
    "start": "3050119",
    "end": "3055400"
  },
  {
    "text": "but I think also like you mentioned Johnny if like complexity increases right and you want that velocity and",
    "start": "3055400",
    "end": "3060720"
  },
  {
    "text": "you're working like at the bigger scale then you're probably going to want to use especially like for the migration use case I guess the the RM yeah some",
    "start": "3060720",
    "end": "3068319"
  },
  {
    "text": "RMS will will come with that built in um I've also I also know of especially",
    "start": "3068319",
    "end": "3073440"
  },
  {
    "text": "dedicated projects that do migration that's all they do right so again it depends on on your use case but you know",
    "start": "3073440",
    "end": "3079280"
  },
  {
    "text": "try different things and don't rush don't commit too early to any one to any one thing just the same same approach",
    "start": "3079280",
    "end": "3085160"
  },
  {
    "text": "with the packaging right how you your project right if you know you're going to use an RM to get off the ground quickly and you just do it because",
    "start": "3085160",
    "end": "3092000"
  },
  {
    "text": "that's what everybody on the team knows it's fine if you need to then specialize have specialized cases where you need to",
    "start": "3092000",
    "end": "3098440"
  },
  {
    "text": "do raw SQL you can you can do that too right awesome cool and uh and I also",
    "start": "3098440",
    "end": "3104799"
  },
  {
    "start": "3102000",
    "end": "3347000"
  },
  {
    "text": "regarding steel databases is there any specific thing between go and and SQL",
    "start": "3104799",
    "end": "3110559"
  },
  {
    "text": "light I've been seeing a lot of projects that like use SQL light as well and and",
    "start": "3110559",
    "end": "3116599"
  },
  {
    "text": "for this specific web app that I built I used something called light stream I I'm",
    "start": "3116599",
    "end": "3121960"
  },
  {
    "text": "not sure if you guys are familiar with it y yeah it backs up my sqlite database to an S bucket that's it's really nice",
    "start": "3121960",
    "end": "3130599"
  },
  {
    "text": "and yeah you're not you're not wrong yeah okay I mean sqlite sqlite is is you know and has always been sort of a one",
    "start": "3130599",
    "end": "3138240"
  },
  {
    "text": "one of the favorite sort of developer tools out there regardless of language right it's small fast you can go far",
    "start": "3138240",
    "end": "3144640"
  },
  {
    "text": "right with a sqlite some people even ship with a srel like database if they need to sort of package you know sort of",
    "start": "3144640",
    "end": "3149880"
  },
  {
    "text": "a database with their with their projects and whatnot it's just a great allaround project uh it's been around",
    "start": "3149880",
    "end": "3155280"
  },
  {
    "text": "for years it's just a great allaround project you know the go Community sort",
    "start": "3155280",
    "end": "3160359"
  },
  {
    "text": "of a liking squel light I think that's something that like predates go people just like sqlite and they just say hey I",
    "start": "3160359",
    "end": "3167480"
  },
  {
    "text": "can you know why not put the both things that I really like why not put them together and and use them right so that",
    "start": "3167480",
    "end": "3172520"
  },
  {
    "text": "I think that's what you're you're seeing that that the the love for both of those Technologies together kind of makes it you know like a pleasant workflow yeah",
    "start": "3172520",
    "end": "3178559"
  },
  {
    "text": "it's kind of the go back to the the Simplicity of things and yeah light stream was great experience for this",
    "start": "3178559",
    "end": "3184000"
  },
  {
    "text": "project no no problems at all I went with actually raw squl instead of ORS",
    "start": "3184000",
    "end": "3189359"
  },
  {
    "text": "and yeah I didn't really like the migration experience because I need to write it myself but I guess I'm the one",
    "start": "3189359",
    "end": "3194640"
  },
  {
    "text": "to blame there but awesome okay great great then I I think I I I have a little bit more clarity here that you guys are",
    "start": "3194640",
    "end": "3200880"
  },
  {
    "text": "not so extreme in the goldang side of things like I thought yeah we're a lot of things but Extreme is is not is not",
    "start": "3200880",
    "end": "3207119"
  },
  {
    "text": "doesn't tend to be one of the things that that we're scra to go developers yeah okay awesome and um so one of the",
    "start": "3207119",
    "end": "3213640"
  },
  {
    "text": "things that surprised me about to go when I was writing is that for this specific project there needed something",
    "start": "3213640",
    "end": "3219520"
  },
  {
    "text": "to happen so where I needed to basically look at five different Danish newspapers",
    "start": "3219520",
    "end": "3225000"
  },
  {
    "text": "get their RSS feed and then automatically throw them at a large language model to get the translation",
    "start": "3225000",
    "end": "3230240"
  },
  {
    "text": "for the contents of those those news basically and the and the translation for the title so I basically wanted to",
    "start": "3230240",
    "end": "3236520"
  },
  {
    "text": "do a barebones really simple website I can just read Danish news from a bunch of different sources related to where I",
    "start": "3236520",
    "end": "3242280"
  },
  {
    "text": "live because I don't do Danish yet because uh yeah exactly I'm very bad and",
    "start": "3242280",
    "end": "3247880"
  },
  {
    "text": "so one of the things that I need to do is that I actually need to request all of these RSS feeds and I need to actively run all of these translations",
    "start": "3247880",
    "end": "3255040"
  },
  {
    "text": "so call these all of these apis but I wanted to do it in a a fast way and when I think about python I was thinking okay",
    "start": "3255040",
    "end": "3261000"
  },
  {
    "text": "if now I have to throw this threadpool executor or I have to write a bunch of these boilerplate codes to do some",
    "start": "3261000",
    "end": "3267200"
  },
  {
    "text": "concurrency here and I I have to swim against whatever normal python is to try",
    "start": "3267200",
    "end": "3273559"
  },
  {
    "text": "to make this as efficient and concurrent as possible and then I was like how do I should I actually do concurrence in go",
    "start": "3273559",
    "end": "3280160"
  },
  {
    "text": "and there's this great website that I'm sure you guys know almost by heart which is this go by example uh website and it",
    "start": "3280160",
    "end": "3287559"
  },
  {
    "text": "showed me that you all we need to do normally is like go and then the name of the function and just runs it in the",
    "start": "3287559",
    "end": "3293680"
  },
  {
    "text": "background and I was like what what why don't we have a go keyword in Python",
    "start": "3293680",
    "end": "3299280"
  },
  {
    "text": "this is great uh and so I was really quickly in love with how I could",
    "start": "3299280",
    "end": "3304559"
  },
  {
    "text": "actually call all these apis and get these RSS feeds and call these translation services super fast and and",
    "start": "3304559",
    "end": "3310119"
  },
  {
    "text": "super concurrently without adding so much boiler plates to my code it seems what it is Perfectly Natural to go",
    "start": "3310119",
    "end": "3317000"
  },
  {
    "text": "because I think that's one of the reasons why it was designed as well and one of the questions I had is I started",
    "start": "3317000",
    "end": "3322200"
  },
  {
    "text": "noting that there's things like I started doing things like channels then I said that there's also like weight",
    "start": "3322200",
    "end": "3327599"
  },
  {
    "text": "groups there's a bunch of perhaps different ways of doing concurrency is",
    "start": "3327599",
    "end": "3333039"
  },
  {
    "text": "is there a a way that like for example let's just put a simple thing you need to call an API in parallel for five",
    "start": "3333039",
    "end": "3340520"
  },
  {
    "text": "different you want to call it the same time do you jump for channels do you use weight groups what do you go for",
    "start": "3340520",
    "end": "3346599"
  },
  {
    "text": "generally the approach is if you know how many G routines you're going to need",
    "start": "3346599",
    "end": "3352039"
  },
  {
    "start": "3347000",
    "end": "3472000"
  },
  {
    "text": "uh if you need to manage uh the the number of gtin and you know how many you're going to have for any given task",
    "start": "3352039",
    "end": "3358240"
  },
  {
    "text": "right a we group is usually a good a good starting point right so in in using your example if you know you're going to",
    "start": "3358240",
    "end": "3363920"
  },
  {
    "text": "you need to hit five different websites and um have five different workflows running right you call the website you",
    "start": "3363920",
    "end": "3369520"
  },
  {
    "text": "get some stuff you parse the RSS and you start feeding that into an llm right",
    "start": "3369520",
    "end": "3374640"
  },
  {
    "text": "each one of those things could be a separate uh grow routine U right a separate basically threat of execution because because these things don't",
    "start": "3374640",
    "end": "3381319"
  },
  {
    "text": "depend on each other one website doesn't depend on the next right so you can simply you know have those tasks happen their own gr routines in this case you",
    "start": "3381319",
    "end": "3387839"
  },
  {
    "text": "know you have five websites you could you know trigger five different go routines you just have to wait for them right hence the name weight group right",
    "start": "3387839",
    "end": "3394039"
  },
  {
    "text": "so you initialize your we group you say I'm I'm G to add a count of five right and then for each go routine you launch",
    "start": "3394039",
    "end": "3399880"
  },
  {
    "text": "right you're going to want to decrement right a counter and there's a there's a process for this when you're calling a done function on a done method on your",
    "start": "3399880",
    "end": "3406319"
  },
  {
    "text": "weight group from inside of the grow routin you launch and then every time a grow routin you know returns right it",
    "start": "3406319",
    "end": "3411480"
  },
  {
    "text": "decrements the the counter automatically right so whenever you know exactly how many gotin you're going to need to to launch a we group is usually a great",
    "start": "3411480",
    "end": "3417880"
  },
  {
    "text": "starting point channels are meant for communication between go routines right so if you need maybe in your main thread",
    "start": "3417880",
    "end": "3425440"
  },
  {
    "text": "uh your main G routine if you need some information right to be passed back and forth between your main G routine and",
    "start": "3425440",
    "end": "3430880"
  },
  {
    "text": "whatever other gr routines you've launched channels are great for that right you know they can have channels have directionality right if you you can",
    "start": "3430880",
    "end": "3437319"
  },
  {
    "text": "have S only um channels bidirectional channels right again it's really used",
    "start": "3437319",
    "end": "3442480"
  },
  {
    "text": "for communication purposes right and then there's other ways you can use channels that almost like a q kind of behavior but that might be a bit more um",
    "start": "3442480",
    "end": "3449039"
  },
  {
    "text": "than we want to get into right now but really the channel is all about the communication right and then obviously the you know go comes to things like",
    "start": "3449039",
    "end": "3455280"
  },
  {
    "text": "mutex and whatnot for doing Mutual exclusion and that same notion exists in other programming languages so I don't have to explain it here but yet it's",
    "start": "3455280",
    "end": "3462200"
  },
  {
    "text": "really I think for most people I usually say hey can weight groups help you accomplish this task if you know how",
    "start": "3462200",
    "end": "3468640"
  },
  {
    "text": "many how many things you need to do ahead of time right and I usually say start there the channels could do",
    "start": "3468640",
    "end": "3473760"
  },
  {
    "text": "exactly that like what you said about weight groups I could channels do exactly the same thing or no no um not",
    "start": "3473760",
    "end": "3480079"
  },
  {
    "text": "not exactly the same thing and not exactly in the same way uh you'd be adding some overhead if you want if you use channels so and for the example that",
    "start": "3480079",
    "end": "3486960"
  },
  {
    "text": "we we just walked through you'd be adding some overhead to do it via channels but it's it's doable you just",
    "start": "3486960",
    "end": "3492559"
  },
  {
    "text": "you just be adding a bit of overhead I would definitely mirror like kind of reach for channels last I know it's like",
    "start": "3492559",
    "end": "3499079"
  },
  {
    "text": "go flashy feature but I'll often grab for a mutex way before I grab for",
    "start": "3499079",
    "end": "3504720"
  },
  {
    "text": "channels I think it's easier to reason about and sure there are good reasons to use channels but almost always I'll",
    "start": "3504720",
    "end": "3511039"
  },
  {
    "text": "avoid it if I can I just also wanted to add there's a sync xync a group which is",
    "start": "3511039",
    "end": "3518280"
  },
  {
    "text": "very similar to a weight group but basically uh instead of directly",
    "start": "3518280",
    "end": "3523480"
  },
  {
    "text": "launching go routines you know you give it up a function that returns an error right and so then you can wait until",
    "start": "3523480",
    "end": "3531160"
  },
  {
    "text": "everything's done everything's returned nil or you see the first air and you can also when create this group you can give",
    "start": "3531160",
    "end": "3537160"
  },
  {
    "text": "it a context so that it cancels everything after the first air and I I I find myself reaching for that way even",
    "start": "3537160",
    "end": "3544720"
  },
  {
    "text": "more than weight group yeah that's a great that's a great package yeah maybe my single favorite go package so what's",
    "start": "3544720",
    "end": "3550319"
  },
  {
    "start": "3549000",
    "end": "3599000"
  },
  {
    "text": "the name of the package wait a second airor group e r r g r o u p yep it's in",
    "start": "3550319",
    "end": "3556280"
  },
  {
    "text": "the experimental sync package right the last thing I'll mention before we move on to unpopular opinions when you're",
    "start": "3556280",
    "end": "3562280"
  },
  {
    "text": "doing concurrent work and one thing I wanted to sort of um bring to your awareness Dart U when you mentioned it",
    "start": "3562280",
    "end": "3568280"
  },
  {
    "text": "go is all about concurrency right you can enable your code to run in parallel right but concurrency and parallelism not the same thing right you can have",
    "start": "3568280",
    "end": "3574960"
  },
  {
    "text": "concurrency on a single CPU right for example right but you know to enable parallelism right having different",
    "start": "3574960",
    "end": "3581400"
  },
  {
    "text": "things multiple things happening on at the same time you know you're going to need multiple cores for that and that's where the parallel comes in go allows",
    "start": "3581400",
    "end": "3587400"
  },
  {
    "text": "you to write code that can be made parallel but aboutt of the box it's all about concurrency right the other thing",
    "start": "3587400",
    "end": "3592760"
  },
  {
    "text": "when R concurrency is that you have to know which types right are threat safe right maps for example are not thread",
    "start": "3592760",
    "end": "3598520"
  },
  {
    "text": "safe right so you know whether you sort of a serialized access to those via a Channel or whether you use mutex like",
    "start": "3598520",
    "end": "3604240"
  },
  {
    "text": "Ian saying like you're going to want to protect that shared resource right um Maps same thing for slices they're not",
    "start": "3604240",
    "end": "3610280"
  },
  {
    "text": "thread safe right so uh or counters and things of that nature um if you need to like sort of increment a count and maybe",
    "start": "3610280",
    "end": "3616319"
  },
  {
    "text": "you want to increment a count from within a gr routine you don't want to use the regular uh um basic integer types for example you're going to want",
    "start": "3616319",
    "end": "3622400"
  },
  {
    "text": "to use an atomic version of that instead right or again use some sort of lock around whatever the resource you're",
    "start": "3622400",
    "end": "3628760"
  },
  {
    "text": "trying to access so that's the other thing I'll just throw in there just to whenever you use whenever you have concurrency or multi-threading in your",
    "start": "3628760",
    "end": "3635559"
  },
  {
    "text": "programs you want to protect shed resources I always forget about the atomic packages I need to remember those",
    "start": "3635559",
    "end": "3641200"
  },
  {
    "text": "more yeah I think I need to refactor this project to and like like I know you shouldn't",
    "start": "3641200",
    "end": "3648640"
  },
  {
    "text": "really add channels that's just overhead and I'm like here looking",
    "start": "3648640",
    "end": "3653880"
  },
  {
    "text": "channels make Channel for how many websites you want to scbe hey you know we've all we've all been",
    "start": "3653880",
    "end": "3659839"
  },
  {
    "text": "there like yeah I think we all we all it works great guys let me tell you it hasn't G Done Yet trust me like I did the same thing I",
    "start": "3659839",
    "end": "3667039"
  },
  {
    "text": "was like I was one of those people like oh channels everywhere when I first came to go I was like yo this is amazing and",
    "start": "3667039",
    "end": "3672440"
  },
  {
    "text": "then you realize oh man I'm I'm totally overdoing it and shooting myself okay so it was an honest question okay so yeah",
    "start": "3672440",
    "end": "3677680"
  },
  {
    "text": "yeah yeah you're good you're good you're good yeah you guys normally have one single way of doing things that's why I I thought yeah yeah we like to have we",
    "start": "3677680",
    "end": "3685000"
  },
  {
    "text": "like to have patterns right you know those idioms yeah yeah indeed indeed all right well let's switch it up to",
    "start": "3685000",
    "end": "3691200"
  },
  {
    "text": "unpopular opinions shall [Music]",
    "start": "3691200",
    "end": "3696819"
  },
  {
    "text": "we opion you what I actually think should probably [Music]",
    "start": "3697240",
    "end": "3704469"
  },
  {
    "text": "leave [Music]",
    "start": "3704920",
    "end": "3712659"
  },
  {
    "text": "opinion DW I know you came with one in a holster lay it on us yeah I think I",
    "start": "3713240",
    "end": "3718440"
  },
  {
    "text": "don't know if it's unpopular but for me the opinion is that there's no such thing as I don't have time for x uh",
    "start": "3718440",
    "end": "3726680"
  },
  {
    "text": "whatever X is and this I think is unpopular because I I hear it from people all the time and I also hear it",
    "start": "3726680",
    "end": "3733520"
  },
  {
    "text": "sometimes from myself when I'm like I want to do whatever and I say oh but I don't have time to do X or do y for",
    "start": "3733520",
    "end": "3739720"
  },
  {
    "text": "example I run maybe like every day like I don't know 80 kilm or 70 kilm some",
    "start": "3739720",
    "end": "3746079"
  },
  {
    "text": "times a week which is like 60 miles or something like that and a lot of people like say like oh I don't have time for",
    "start": "3746079",
    "end": "3752279"
  },
  {
    "text": "that or I have kids or I have other responsibilities but I Al always had the mentality that if you want to do",
    "start": "3752279",
    "end": "3758400"
  },
  {
    "text": "something bad enough you get time for it and I know that a lot of people are going to be like yeah yeah but you don't",
    "start": "3758400",
    "end": "3764440"
  },
  {
    "text": "have my life and look at all the things I have to do that you don't have to do sure but I think that a certain point if",
    "start": "3764440",
    "end": "3769880"
  },
  {
    "text": "you prioritize it enough you can actually do it and get time to it you make time for it you don't have have it",
    "start": "3769880",
    "end": "3776240"
  },
  {
    "text": "you you make it yeah I don't I don't disagree I think it's a most of the time it's a matter of prioritization and the",
    "start": "3776240",
    "end": "3782799"
  },
  {
    "text": "other sort of nuance I'll add to that is um if after you've done prioritization",
    "start": "3782799",
    "end": "3788960"
  },
  {
    "text": "right which is sort of the first step if after you've prioritized you still don't have enough time to get to everything",
    "start": "3788960",
    "end": "3794359"
  },
  {
    "text": "you want to get to that's a signal that you have too many things on your plate and that you need to give up some things",
    "start": "3794359",
    "end": "3801640"
  },
  {
    "text": "right you may have a desire to do all the things but there's still 24 hours in a day ideally you still need to sleep",
    "start": "3801640",
    "end": "3807559"
  },
  {
    "text": "eight of those and you know you still have to go to work like most of us you know eight plus hours a day right",
    "start": "3807559",
    "end": "3813559"
  },
  {
    "text": "whatever's left right if you don't have enough time to get to it right even after you having done your prioritization if you have if you still",
    "start": "3813559",
    "end": "3820359"
  },
  {
    "text": "can't get to everything that just means you have too much on your plate and I and I say that like you know as as sort",
    "start": "3820359",
    "end": "3826279"
  },
  {
    "text": "of living proof right in my household of that particular problem at the end of the day I'm like man it's so much I'd",
    "start": "3826279",
    "end": "3831520"
  },
  {
    "text": "like to get to and you know I go to bed sort of kicking myself man couldn't get to this man I couldn't get to that",
    "start": "3831520",
    "end": "3838039"
  },
  {
    "text": "that's that's this is sort of You Know The Universe telling me that hey you just simply have too many things on your",
    "start": "3838039",
    "end": "3843599"
  },
  {
    "text": "plate because like I'm one of those people who tracks my time like my calendar literally has a block for every",
    "start": "3843599",
    "end": "3849319"
  },
  {
    "text": "I know I can tell you you know four weeks ago what I was doing at this hour",
    "start": "3849319",
    "end": "3855039"
  },
  {
    "text": "right because it's on my calendar I track my time to that degree right I'm I'm I know I'm a little bit of anal about it but I want to know that at the",
    "start": "3855039",
    "end": "3861240"
  },
  {
    "text": "end of the day I maximized my time because time is the one thing I can't make more of off right but at the end of",
    "start": "3861240",
    "end": "3867559"
  },
  {
    "text": "the day I'm going to bed thinking oh man I couldn't get to this I couldn't get to that and if I do that enough times I'm",
    "start": "3867559",
    "end": "3872960"
  },
  {
    "text": "sort of defeating my own self I'm beating myself up because I couldn't get to everything that just means that I need to give up some things I just you",
    "start": "3872960",
    "end": "3879720"
  },
  {
    "text": "know I just don't really don't have the Cycles in my day for it so yeah I mean for me that's a great answer uh I think",
    "start": "3879720",
    "end": "3887200"
  },
  {
    "text": "we're also I'm a little bit OCD in the way I do things as well John so I could tell you what items I",
    "start": "3887200",
    "end": "3894240"
  },
  {
    "text": "got done in like two and a half weeks from like last year I can tell you so",
    "start": "3894240",
    "end": "3900799"
  },
  {
    "text": "but yeah I think that's the point that you said is that it's a prioritization exercise and you also need to be able to",
    "start": "3900799",
    "end": "3906599"
  },
  {
    "text": "drop things right but if you don't have time it's because you're not prioritizing the right things but",
    "start": "3906599",
    "end": "3911680"
  },
  {
    "text": "there's still a limit to the things that you can actually do and but don't you catch yourself sometimes saying like oh",
    "start": "3911680",
    "end": "3918000"
  },
  {
    "text": "I don't have time to do that of course of course it's it's a yeah of course it's it's a natural human you know thing",
    "start": "3918000",
    "end": "3924079"
  },
  {
    "text": "to do I think it's it's a it's a natural yeah I'm like man I don't have time to do anything exactly when I find myself",
    "start": "3924079",
    "end": "3931000"
  },
  {
    "text": "thinking that I try to change it to I'm not motivated to do X like exactly",
    "start": "3931000",
    "end": "3936799"
  },
  {
    "text": "interesting yeah yeah yeah exactly good stuff well I don't have an unpop Ian I'm",
    "start": "3936799",
    "end": "3942200"
  },
  {
    "text": "not sure if you do maybe I go back to the the channels vers mutexes I think in",
    "start": "3942200",
    "end": "3948240"
  },
  {
    "text": "almost every case mutex is probably the right tool for the job um not every case",
    "start": "3948240",
    "end": "3953720"
  },
  {
    "text": "I don't know maybe maybe skip this I don't % you're going back on it you're going",
    "start": "3953720",
    "end": "3959240"
  },
  {
    "text": "back on it you're going back on it okay well maybe maybe this will be my unpop I think you should be very careful with",
    "start": "3959240",
    "end": "3965039"
  },
  {
    "text": "your use of mutex especially if you have a sort of a high throughput sort of situation because mutex will you know",
    "start": "3965039",
    "end": "3971039"
  },
  {
    "text": "have a tendency to slow things down because once you lock a particular resource everything is paused nothing",
    "start": "3971039",
    "end": "3977440"
  },
  {
    "text": "else can access other than the go routine for which you you may you open up up the lock right so if you have sort",
    "start": "3977440",
    "end": "3982960"
  },
  {
    "text": "of a high through situation why whatever whatever amount of time a particular goutine spends you",
    "start": "3982960",
    "end": "3988960"
  },
  {
    "text": "know updating a particular shared value nothing else can work right so there may be more efficient ways of doing what",
    "start": "3988960",
    "end": "3996400"
  },
  {
    "text": "you're trying to do without a mutex again in some simple cases mutex to go to but you have to definitely consider",
    "start": "3996400",
    "end": "4003400"
  },
  {
    "text": "the cost of using the mutex right because nothing else everything the world stops right until the grin is done for that particular Shar resource I'm",
    "start": "4003400",
    "end": "4010240"
  },
  {
    "text": "just trying to Rack my brain for one of those High through situation where like even like a read write mutex when it",
    "start": "4010240",
    "end": "4015799"
  },
  {
    "text": "solve a lot of that I don't know right right yeah yeah it's yeah again it's one of those things where you have to look",
    "start": "4015799",
    "end": "4021000"
  },
  {
    "text": "at your use case and sort of make make a the appropriate decision okay so but there so it's even weight groups",
    "start": "4021000",
    "end": "4027640"
  },
  {
    "text": "channels and you even tend not to go with channels tend to go with mutexes I",
    "start": "4027640",
    "end": "4032839"
  },
  {
    "text": "mean when channels are the right thing I'll use a channel but I just don't think that's very often okay wa can you",
    "start": "4032839",
    "end": "4039640"
  },
  {
    "text": "just put some words into what because I'm realizing now that you in go you have five different ways of doing",
    "start": "4039640",
    "end": "4045799"
  },
  {
    "text": "concurrency I thought we had a simple way of doing everything but what is the can you tell me the I mean I I think",
    "start": "4045799",
    "end": "4051559"
  },
  {
    "text": "Johnny said it really well earlier when it's like when it's about communicating okay okay exchanging data between uh",
    "start": "4051559",
    "end": "4057839"
  },
  {
    "text": "some of these processes okay got I don't know it's also like one of those things where you just know it when you see it",
    "start": "4057839",
    "end": "4063200"
  },
  {
    "text": "like I I don't know I can't put words to well I you can't like a new you gonna tell a new gopher right you'll just know",
    "start": "4063200",
    "end": "4070279"
  },
  {
    "text": "when you see it I haven't converted yet but sure all right right yeah just all",
    "start": "4070279",
    "end": "4075920"
  },
  {
    "text": "you have to do Dart is to spend you know the next couple of years you know hacking way I'd go and then you'll know",
    "start": "4075920",
    "end": "4081039"
  },
  {
    "text": "it when you see it say in okay thanks in I know it's not helpful I got so much",
    "start": "4081039",
    "end": "4089640"
  },
  {
    "text": "guidance awesome this was this was great um thanks Dart for coming on the show and definitely for suggesting the",
    "start": "4089640",
    "end": "4095799"
  },
  {
    "text": "episode um dear listener if you two want to come on go time and talk go um",
    "start": "4095799",
    "end": "4101000"
  },
  {
    "text": "whether you have some a bone to pick with the language and you want you want some ears to hear you or you have some",
    "start": "4101000",
    "end": "4107238"
  },
  {
    "text": "questions along the lines of uh you know D set of questions today definitely reach out to us and we'd love to have",
    "start": "4107239",
    "end": "4113159"
  },
  {
    "text": "you thanks for having me guys all right let's wrap this up all right that's our show thanks for",
    "start": "4113159",
    "end": "4119920"
  },
  {
    "text": "hanging with us subscribe now if you haven't yet head to go time. FM for all",
    "start": "4119920",
    "end": "4125960"
  },
  {
    "text": "the ways or search for go time wherever you get your podcasts you'll find us if",
    "start": "4125960",
    "end": "4131640"
  },
  {
    "text": "you're a fan of go time and get value from the Pod share the show with your friends and and colleagues and if you",
    "start": "4131640",
    "end": "4136838"
  },
  {
    "text": "really dig it hook us up with a five-star review we appreciate it thanks once again to our partners at fly.io to",
    "start": "4136839",
    "end": "4144159"
  },
  {
    "text": "our beat freaking residence break master cylinder and to our friends at Sentry save 100 bucks off their team plan when",
    "start": "4144159",
    "end": "4150719"
  },
  {
    "text": "you use code change log during sign up that's all for now but we'll talk to you again next time on go",
    "start": "4150719",
    "end": "4157439"
  },
  {
    "text": "[Music]",
    "start": "4157439",
    "end": "4164359"
  },
  {
    "text": "time [Music]",
    "start": "4164359",
    "end": "4171159"
  },
  {
    "text": "k",
    "start": "4177199",
    "end": "4180199"
  }
]