[
  {
    "text": "in the past let's say you know you had a huge code base and it had no test in it upgrading your framework then is kind of",
    "start": "80",
    "end": "6040"
  },
  {
    "text": "a big deal right is because you don't really have that confidence because you ain't got any tests now obviously types don't replace tests but they do help you",
    "start": "6040",
    "end": "13240"
  },
  {
    "text": "still in discovering kind of those things that could break as framework authors having those types is Monumental",
    "start": "13240",
    "end": "20199"
  },
  {
    "text": "to Big projects well I don't want to be the guy that just keeps bringing it back to react but Nick started",
    "start": "20199",
    "end": "26199"
  },
  {
    "text": "it BWI for change log is provided by fastly learn more at fast.com we move",
    "start": "26199",
    "end": "32719"
  },
  {
    "text": "fast and fix things here at change law because of rbar check them out at rar.com and we're hosted on Leno Cloud",
    "start": "32719",
    "end": "39040"
  },
  {
    "text": "servers head to lin.com changelog this episode is brought to you",
    "start": "39040",
    "end": "45200"
  },
  {
    "text": "by robbar move fast and fix things resolve errors in minutes and deploy with confidence head to roar.com",
    "start": "45200",
    "end": "52320"
  },
  {
    "text": "changelog requested demo get started today it's loved by developers trusted by Enterprises and most of all we use",
    "start": "52320",
    "end": "60079"
  },
  {
    "text": "here at Chang log move fast and fix things with rollbar once again rar.com",
    "start": "60079",
    "end": "67160"
  },
  {
    "text": "[Music]",
    "start": "67160",
    "end": "70260"
  },
  {
    "text": "changelog Welcome Friends to JS party your weekly celebration of JavaScript",
    "start": "77040",
    "end": "82799"
  },
  {
    "text": "and the web we are fresh off our first live show with video that's right next",
    "start": "82799",
    "end": "88200"
  },
  {
    "text": "week's JS Danger episode was was streamed on Twitter and a few thousand of you joined in on the fun so we might",
    "start": "88200",
    "end": "94560"
  },
  {
    "text": "start doing video on the regular holler at us let us know if you're interested we are at JSP party FM on Twitter okay",
    "start": "94560",
    "end": "101079"
  },
  {
    "text": "let's do this Dojo time [Music] [Applause]",
    "start": "101079",
    "end": "108560"
  },
  {
    "text": "[Applause] y'all hello JS party welcome uh this",
    "start": "111780",
    "end": "118439"
  },
  {
    "text": "week we have a really exciting topic to talk about uh but first I want to introduce you to my co-panelist Jared",
    "start": "118439",
    "end": "124719"
  },
  {
    "text": "Jared what's up your boy hi Nick awesome how are you I'm good I'm good I'll say",
    "start": "124719",
    "end": "131000"
  },
  {
    "text": "Hoy Hoy and I want to welcome our special guest and that's Matt Gad Matt say hello yo how's it going I'm good how",
    "start": "131000",
    "end": "138400"
  },
  {
    "text": "are you yes it's not bad not bad awesome Nick I noticed you wearing your dojo",
    "start": "138400",
    "end": "143920"
  },
  {
    "text": "shirt today I am I'm wearing a vintage Dojo shirt to talk about Dojo I just want to point that out for the listener",
    "start": "143920",
    "end": "149319"
  },
  {
    "text": "sake that they can't see your shirt but I can and I appreciate it I bet Matt appreciates it too yeah I don't have one",
    "start": "149319",
    "end": "155800"
  },
  {
    "text": "of them so I'm a bit annoyed I need to get a new Dojo modern Dojo shirt with",
    "start": "155800",
    "end": "161400"
  },
  {
    "text": "the awesome dragon on it cuz do you not have one with the dragon on I do um it doesn't fit me anymore in a in the good",
    "start": "161400",
    "end": "167640"
  },
  {
    "text": "way so oh the other way yeah I've just got a Wardrobe full of",
    "start": "167640",
    "end": "173680"
  },
  {
    "text": "those t-shirts that don't fit me for the bad reasons so awesome well yeah we are talking",
    "start": "173680",
    "end": "180360"
  },
  {
    "text": "about dojo today and uh we actually did talk about Dojo uh on the show back way",
    "start": "180360",
    "end": "185799"
  },
  {
    "text": "way back in episode 25 uh so go listen to that if you want to listen to kind of the history of Dojo 1 to Dojo 2 uh and",
    "start": "185799",
    "end": "193920"
  },
  {
    "text": "the several years and the making of that uh but we're not going to focus on that years ago years yeah we're g to focus on",
    "start": "193920",
    "end": "200159"
  },
  {
    "text": "Modern dojo and this kind of specifically came out of a comment I made a couple of episodes ago where I",
    "start": "200159",
    "end": "206159"
  },
  {
    "text": "shouted out the release of Dojo 7 and mentioned that if you like re you like Dojo better and so I thought it'd be",
    "start": "206159",
    "end": "213760"
  },
  {
    "text": "perfect to bring Matt Gad on Project Lead on dojo to defend my comment and",
    "start": "213760",
    "end": "219040"
  },
  {
    "text": "let me throw him under the bus with that and Matt can you tell me why you like Dojo better come on why you like it bad",
    "start": "219040",
    "end": "227560"
  },
  {
    "text": "I should say I'm here for that I'm here for that clickbait so Nick said that and I thought I got to show up for that show",
    "start": "227560",
    "end": "234680"
  },
  {
    "text": "super super controversial comment but so I guess uh",
    "start": "234680",
    "end": "240439"
  },
  {
    "text": "to like step it back a bit and not make the Bold statement but um I guess um the",
    "start": "240439",
    "end": "246760"
  },
  {
    "text": "main thing that I I guess that we've focused on since like day one in modern Dojo is you know being typescript first",
    "start": "246760",
    "end": "253400"
  },
  {
    "text": "and being unashamedly typescript focused and um we've been a big uh supporter of",
    "start": "253400",
    "end": "259799"
  },
  {
    "text": "typescript since the super early days when there was a lot of rough edges um",
    "start": "259799",
    "end": "264880"
  },
  {
    "text": "we basically you know the framework basically entirely G geared towards a typ experience so I think that's really",
    "start": "264880",
    "end": "272440"
  },
  {
    "text": "important in terms of kind of like how you work with it how you know things",
    "start": "272440",
    "end": "280080"
  },
  {
    "text": "that we do because it's in typescript all kind of like dovetail together to kind of make it a kind of more out the",
    "start": "280080",
    "end": "286840"
  },
  {
    "text": "box experience than say you know writing some react in typescript and the associated libraries so yeah I guess",
    "start": "286840",
    "end": "294080"
  },
  {
    "text": "that's one of the key was the key goals of of Dojo as a framework yeah",
    "start": "294080",
    "end": "299280"
  },
  {
    "text": "definitely and I think that that's what I meant by that comment is is the the focus on um developer experience and",
    "start": "299280",
    "end": "305919"
  },
  {
    "text": "typescript does go big into that definitely not saying that react doesn't uh because react is also nice to work",
    "start": "305919",
    "end": "311320"
  },
  {
    "text": "with but kind of it's that plus the whole ecosystem that is all typed together very well uh that gives you",
    "start": "311320",
    "end": "317759"
  },
  {
    "text": "more than than just you know jsx and a component rapper and being able to go",
    "start": "317759",
    "end": "322960"
  },
  {
    "text": "from there so that's kind of where I was going with that comment like I've used it on a couple of projects as as you",
    "start": "322960",
    "end": "328680"
  },
  {
    "text": "know Matt and and uh I really enjoy it really enjoy the whole ecosystem of it",
    "start": "328680",
    "end": "333720"
  },
  {
    "text": "and seeing it change over the last couple of versions has been really cool",
    "start": "333720",
    "end": "339080"
  },
  {
    "text": "because it's just gotten so much easier to work with as new features and new versions have been released so why don't",
    "start": "339080",
    "end": "344960"
  },
  {
    "text": "we talk about that a little bit and kind of what's changed in Dojo since like Dojo 2 from Dojo 2 there's the concept",
    "start": "344960",
    "end": "351720"
  },
  {
    "text": "of components or widgets as we call them and they were class-based in Dojo 2 and",
    "start": "351720",
    "end": "357000"
  },
  {
    "text": "for a few versions after that why don't you tell the story about a little bit of what has changed yeah so it's kind of",
    "start": "357000",
    "end": "362479"
  },
  {
    "text": "interesting obviously with Dojo 2 being you know nearly two years old or",
    "start": "362479",
    "end": "368120"
  },
  {
    "text": "slightly older um a lot of the original work we did at the time was in super",
    "start": "368120",
    "end": "373400"
  },
  {
    "text": "early versions of typescript and we never really intended deliberately to go",
    "start": "373400",
    "end": "378880"
  },
  {
    "text": "with like class-based components we actually had a a composition system called compose and the you know the",
    "start": "378880",
    "end": "386520"
  },
  {
    "text": "whole idea behind that was you know to support composition in wigets a not inheritance which again was kind of a",
    "start": "386520",
    "end": "392919"
  },
  {
    "text": "concept in the original Dojo yeah but the big problems we had at the time inheritance yeah well they like to say",
    "start": "392919",
    "end": "400360"
  },
  {
    "text": "it wasn't but it kind of did look like it in original Dojo yeah so like composing in theory",
    "start": "400360",
    "end": "407160"
  },
  {
    "text": "and concept was a nice idea but at the time typescript was so limited in terms of you know what we could do in terms of",
    "start": "407160",
    "end": "414880"
  },
  {
    "text": "the types for the generics and the things that went with it is it was a really a ful experience um for the end",
    "start": "414880",
    "end": "421720"
  },
  {
    "text": "user so in the end we didn't really pursue that so when we went out you know the door the kind of the easiest way for",
    "start": "421720",
    "end": "428000"
  },
  {
    "text": "an inducer to approach these things was with classes and the typescript support for classes at that point was very good",
    "start": "428000",
    "end": "433960"
  },
  {
    "text": "and so you know that was always a thing in the back of the mind and this is kind of goes back to where I was saying we're",
    "start": "433960",
    "end": "439520"
  },
  {
    "text": "a typescript first framework is a lot of the apis you know when we're designing them we're thinking about how that works",
    "start": "439520",
    "end": "446000"
  },
  {
    "text": "with typescript and at the point in time you know with the kind of inference that we want wanted to get classes were really the best we could do and we had a",
    "start": "446000",
    "end": "453199"
  },
  {
    "text": "mixing approach with classes which was quite unique so you could still do that composition and but it was never our end",
    "start": "453199",
    "end": "459400"
  },
  {
    "text": "goal and I think you can see that through kind of the the lineage of you know where compose was and what Dojo the",
    "start": "459400",
    "end": "465879"
  },
  {
    "text": "original version was and so I think come around to Dojo 6 obviously we've",
    "start": "465879",
    "end": "471159"
  },
  {
    "text": "iterated quite a lot over that period of time from 2 to six we finally had kind of the capabilities to provide a system",
    "start": "471159",
    "end": "480000"
  },
  {
    "text": "based on functions that work class based that allowed us to a compose you know",
    "start": "480000",
    "end": "486120"
  },
  {
    "text": "behaviors that could also affect the types that came out as well and I think that's one of the key differentiators",
    "start": "486120",
    "end": "492599"
  },
  {
    "text": "between say dojo and more JS Frameworks that have typescript definitions as an",
    "start": "492599",
    "end": "498960"
  },
  {
    "text": "add-on is you know we have a concept in I don't want to get too in the weeds but",
    "start": "498960",
    "end": "504240"
  },
  {
    "text": "obviously we have kind of this uh composition mechanism called middleware and that can affect things like the",
    "start": "504240",
    "end": "510000"
  },
  {
    "text": "widget properties so you can design this self-contained behavior that will add",
    "start": "510000",
    "end": "515320"
  },
  {
    "text": "properties for you to the widget interface that you can then use in a component so the idea kind of behind it",
    "start": "515320",
    "end": "521719"
  },
  {
    "text": "being encapsulating the behavior and the types and and that was kind of the key thing",
    "start": "521719",
    "end": "527360"
  },
  {
    "text": "in Dojo 6 that we changed which is out at the moment yeah so with with middleware um",
    "start": "527360",
    "end": "533880"
  },
  {
    "text": "would you kind of equate that Loosely to hooks in react yeah I think it you know",
    "start": "533880",
    "end": "539480"
  },
  {
    "text": "a lot of the times it's easy to squint and go this is like for like behavior and in terms of like uh how they behave",
    "start": "539480",
    "end": "546000"
  },
  {
    "text": "they're very different in reacts you know and hooks have a an interesting mechanism in terms of how they implement",
    "start": "546000",
    "end": "552680"
  },
  {
    "text": "it but in terms of yeah in how you'd encapsulate Behavior very similar in terms of you know you might similar",
    "start": "552680",
    "end": "559440"
  },
  {
    "text": "behaviors you would Implement in hooks um but yeah very different in terms of implementation and some other usability",
    "start": "559440",
    "end": "566320"
  },
  {
    "text": "aspects yeah definitely I learned middleware first in dojo and then later",
    "start": "566320",
    "end": "572160"
  },
  {
    "text": "uh learned hooks with react and they were so strikingly similar that like the main Concepts behind hooks really just",
    "start": "572160",
    "end": "578880"
  },
  {
    "text": "clicked as soon as I started using them because because of middleware so that's why I was kind of going saying that they",
    "start": "578880",
    "end": "584600"
  },
  {
    "text": "were pretty similar yeah and I think yeah as a concept they're ultimately familiar anyone going the other way as",
    "start": "584600",
    "end": "590560"
  },
  {
    "text": "well from react to try and middleware and Dojo you know should get the idea behind that and so yeah no absolutely",
    "start": "590560",
    "end": "597600"
  },
  {
    "text": "I'm curious how you go from a version two in 2018 to a version 7 right now like that's a you guys like on full Full",
    "start": "597600",
    "end": "604800"
  },
  {
    "text": "Speed Ahead or what's going on that's a lot of ver yeah so it's interesting the interesting part of of this is if you go",
    "start": "604800",
    "end": "610279"
  },
  {
    "text": "back to Dojo toolkit and they basically went from over 16 years they went one",
    "start": "610279",
    "end": "617320"
  },
  {
    "text": "major version they never made it to two they were very keen on going with minor versions right one thing that we really",
    "start": "617320",
    "end": "623600"
  },
  {
    "text": "struggled with in the original Dojo toolkit days was getting people to upgrade which there was a kind of fear",
    "start": "623600",
    "end": "629000"
  },
  {
    "text": "of upgrading major versions because of the associated things with it and so one",
    "start": "629000",
    "end": "634519"
  },
  {
    "text": "thing in modern dojo we try and make that experience of upgrading you know",
    "start": "634519",
    "end": "639760"
  },
  {
    "text": "between versions as frictionless as possible so we can iterate quicker um",
    "start": "639760",
    "end": "645519"
  },
  {
    "text": "you know as as much as like what I was saying earlier is you know with typescript evolving it means we can do",
    "start": "645519",
    "end": "650760"
  },
  {
    "text": "more powerful things now obviously there's a breaking changes in a lot of cases just due to the way you know even",
    "start": "650760",
    "end": "655959"
  },
  {
    "text": "typescript is in terms of breaking changes so what we like to do is we like to you know iterate as much as we can on",
    "start": "655959",
    "end": "662279"
  },
  {
    "text": "major versions but also provide so we've got an upgrade um uh tool which",
    "start": "662279",
    "end": "667519"
  },
  {
    "text": "basically mostly gives you a friction free upgrade path upwards of versions um",
    "start": "667519",
    "end": "673760"
  },
  {
    "text": "so yeah it's a it's a really good question yeah I think that that like that's something that we can do today",
    "start": "673760",
    "end": "679200"
  },
  {
    "text": "that we really couldn't do back in the the dojo one days is we can we can release new versions that have some",
    "start": "679200",
    "end": "684720"
  },
  {
    "text": "breaking changes uh and this goes for every every framework out there but spefic specifically with with Dojo being",
    "start": "684720",
    "end": "690839"
  },
  {
    "text": "so strict with its type correctness that when we change things the types change",
    "start": "690839",
    "end": "696120"
  },
  {
    "text": "obviously if you're upgrading you can immediately see because of the compilation step where breaks might be",
    "start": "696120",
    "end": "702320"
  },
  {
    "text": "in your code and then with that upgrade Tool uh like you said that's using oh",
    "start": "702320",
    "end": "707800"
  },
  {
    "text": "I'm forgetting the name of the the term for it right now Cod mods Nick Cod mods",
    "start": "707800",
    "end": "712920"
  },
  {
    "text": "thank you yeah yeah you wrote Cod mods man come on",
    "start": "712920",
    "end": "718240"
  },
  {
    "text": "Nick the worst uh yeah uh code mods it's using Code mods to help you to rewrite",
    "start": "718240",
    "end": "723519"
  },
  {
    "text": "the code and it can do that in a very types Safe Way and it's using the the to",
    "start": "723519",
    "end": "728560"
  },
  {
    "text": "to walk that so it's it's correct in the changes that it makes which is really cool yeah and I think you make a real valid point about the you know the",
    "start": "728560",
    "end": "734600"
  },
  {
    "text": "typescript aspect again kind of gives you confidence that you're going to be aware of those changes if you do have to",
    "start": "734600",
    "end": "740320"
  },
  {
    "text": "make in the past let's say you know you had a huge code base and it had no test in it you know upgrading your framework",
    "start": "740320",
    "end": "746839"
  },
  {
    "text": "then is kind of a big deal right it's because you don't really have that confidence because you ain't got any tests now obviously types don't replace",
    "start": "746839",
    "end": "753880"
  },
  {
    "text": "tests but they do help you still in discovering kind of those things that could break it's very very you know for",
    "start": "753880",
    "end": "760440"
  },
  {
    "text": "as framework authors having those types you know is is Monumental to you know big projects so well I don't want to be",
    "start": "760440",
    "end": "768040"
  },
  {
    "text": "the guy that just keeps bringing it back to react but Nick started it so I'll just keep it it going is it an Apples to",
    "start": "768040",
    "end": "774199"
  },
  {
    "text": "Apples comparison in terms of at least surface area I mean react is a component like you have to like add a bunch of",
    "start": "774199",
    "end": "780560"
  },
  {
    "text": "things and and Stitch together to have like a framework but it's kind of a UI framework for those who aren't as",
    "start": "780560",
    "end": "786079"
  },
  {
    "text": "familiar with Dojo as you and Nick are is it a lot like react but does things differently does it offer things that",
    "start": "786079",
    "end": "791480"
  },
  {
    "text": "are wildly different what kind of things does it do so yeah I think that's a really good question as well is yeah",
    "start": "791480",
    "end": "797600"
  },
  {
    "text": "it's definitely not Apples to Apples in terms of um you know obviously re react absolutely focus on the you know it's a",
    "start": "797600",
    "end": "804480"
  },
  {
    "text": "view component authoring library and you know they spend a lot of time say you you know they've spent a huge amount of",
    "start": "804480",
    "end": "811000"
  },
  {
    "text": "time in terms of like the vom parts of it the reconciliation all the you know",
    "start": "811000",
    "end": "816720"
  },
  {
    "text": "the works on scheduling they've done an awful lot they're basically micro optimizing in that kind of space and",
    "start": "816720",
    "end": "822079"
  },
  {
    "text": "they don't really have a huge desire to expand out of it so that's kind of been taken by you know the ecosystem which",
    "start": "822079",
    "end": "828839"
  },
  {
    "text": "there is a huge ecosystem for and you know I think there's great power in having a diverse ecosystem with that but",
    "start": "828839",
    "end": "835360"
  },
  {
    "text": "there's also kind of that you know a kind of panic make of too much choice at",
    "start": "835360",
    "end": "841079"
  },
  {
    "text": "times when you're trying to get things done and so Dojo is kind of the absolute opposite Camp of that you know we kind",
    "start": "841079",
    "end": "846800"
  },
  {
    "text": "of for us the kind of comparisons that we prefer to be in would be kind of the Ember and angular space where you know",
    "start": "846800",
    "end": "853360"
  },
  {
    "text": "we're going to be very opinionated out of the box and to hopefully remove some of those decision-making things from you",
    "start": "853360",
    "end": "861720"
  },
  {
    "text": "which for some people you know might find very limiting um but for other people it's you know a friction that",
    "start": "861720",
    "end": "867480"
  },
  {
    "text": "they don't need and they just want to create things so you know we find a lot with Enterprise customers that you know",
    "start": "867480",
    "end": "873320"
  },
  {
    "text": "going through uh creating apps and you know hey like deciding what things to use based on licensing or what's",
    "start": "873320",
    "end": "880600"
  },
  {
    "text": "maintained or you know all those kind of things that people have to take into account When developing applications",
    "start": "880600",
    "end": "886759"
  },
  {
    "text": "basically the goal of of Dojo framework is to you know remove the entirety of them but obviously be opinionated about",
    "start": "886759",
    "end": "894160"
  },
  {
    "text": "it um so yeah we cover the build tooling the testing um how you style your",
    "start": "894160",
    "end": "900279"
  },
  {
    "text": "components how you theme components um you know absolutely everything um yeah",
    "start": "900279",
    "end": "906079"
  },
  {
    "text": "you name it they you know it's decision on that point but the main kind of takeaway is you know we're in a similar",
    "start": "906079",
    "end": "911680"
  },
  {
    "text": "space to angular but we kind of we understand that people I mean I personally prefer authoring kind of in",
    "start": "911680",
    "end": "918759"
  },
  {
    "text": "the in the more reactive function components like react over angular no",
    "start": "918759",
    "end": "924000"
  },
  {
    "text": "that's just an opinion but um so we kind of react like but as a you know as a",
    "start": "924000",
    "end": "930120"
  },
  {
    "text": "more framework encompassing um thing God that was a lot of",
    "start": "930120",
    "end": "935360"
  },
  {
    "text": "words definitely similar to angular in the surface area but closer to react in",
    "start": "935360",
    "end": "940880"
  },
  {
    "text": "the API surface area sounds like a nice Middle Ground yeah and I think to be honest with you I",
    "start": "940880",
    "end": "947079"
  },
  {
    "text": "feel like that react kind of in the last uh year there's a lot of people kind of pursuing that pursuing that space with",
    "start": "947079",
    "end": "952839"
  },
  {
    "text": "react as well is you know you've got things like nextjs um I think uh Ryan",
    "start": "952839",
    "end": "958079"
  },
  {
    "text": "Florence and Michael Jackson are are developing you know an application framework so I think a lot of places are",
    "start": "958079",
    "end": "963800"
  },
  {
    "text": "going that way where they understand that you know there just the Classic thing isn't it is like you could waste",
    "start": "963800",
    "end": "969880"
  },
  {
    "text": "months writing webpack configs you can write you know you could spend months trying to correctly figure out the best",
    "start": "969880",
    "end": "975880"
  },
  {
    "text": "way to test things um so yeah just removing some of that overhead is you know is a big deal similar to what the",
    "start": "975880",
    "end": "981800"
  },
  {
    "text": "Redwood folks are trying to do and saying you're going to use react and graphql and we're going to build an application framework around those",
    "start": "981800",
    "end": "987959"
  },
  {
    "text": "Technologies and fill in a lot of the stuff that if react were a and fullsack",
    "start": "987959",
    "end": "993399"
  },
  {
    "text": "is a lame way of saying it because it's all front end but if if it was a full app framework it would provide those things like Ember does like it sounds",
    "start": "993399",
    "end": "1000120"
  },
  {
    "text": "like dojo and angular do yeah so it it does cover a lot of things Beyond just",
    "start": "1000120",
    "end": "1006160"
  },
  {
    "text": "uh widget composition and it includes things like a a router uh a way to to",
    "start": "1006160",
    "end": "1012199"
  },
  {
    "text": "store and manage data so the there's a stores middleware and there's uh help me",
    "start": "1012199",
    "end": "1018480"
  },
  {
    "text": "out what other big pieces of framework are there code mods yeah code mods yeah",
    "start": "1018480",
    "end": "1024880"
  },
  {
    "text": "yeah I mean we got got an awful lot could to think of it obviously um we provide um you know CIS for upgrading",
    "start": "1024880",
    "end": "1032600"
  },
  {
    "text": "for testing for building widget libraries um for building obviously",
    "start": "1032600",
    "end": "1038640"
  },
  {
    "text": "applications obviously we have the bootstrapping for you to start making an app and in terms of the actual you know",
    "start": "1038640",
    "end": "1044678"
  },
  {
    "text": "framework level stuff yes we've got like a you know a state store we obviously uh",
    "start": "1044679",
    "end": "1050160"
  },
  {
    "text": "we have routing or routing as English people like to call it um we've got obviously",
    "start": "1050160",
    "end": "1055919"
  },
  {
    "text": "internationalization come on routing I always say you have a router and then you talk about rooting it doesn't make",
    "start": "1055919",
    "end": "1062039"
  },
  {
    "text": "any sense it would be a rer would not we call it a ro yeah oh you do at least",
    "start": "1062039",
    "end": "1067480"
  },
  {
    "text": "that's consistent all right I'm back yeah we're consistently wrong all right but yeah like um so a huge thing",
    "start": "1067480",
    "end": "1074440"
  },
  {
    "text": "again is it was massive in Dojo one is um you know Dojo one was kind of one of the first Frameworks that really pushed",
    "start": "1074440",
    "end": "1081640"
  },
  {
    "text": "internationalization out of the box for when you're writing apps because when you're writing big apps you know English",
    "start": "1081640",
    "end": "1087159"
  },
  {
    "text": "isn't the only language that exists in the world and it's a kind of you know shoehorning that in as kind of a second",
    "start": "1087159",
    "end": "1093440"
  },
  {
    "text": "thought um in in terms of supporting internationalization and localizations",
    "start": "1093440",
    "end": "1098640"
  },
  {
    "text": "very difficult so again in in modern Dojo that's a key concern so you know all of our widgets are internationalized",
    "start": "1098640",
    "end": "1105760"
  },
  {
    "text": "out the box provide it you know easy mechanisms to be able to localize um and",
    "start": "1105760",
    "end": "1110799"
  },
  {
    "text": "do translations Etc so yeah that's a huge part obviously our widgets again",
    "start": "1110799",
    "end": "1116200"
  },
  {
    "text": "you know were very in Dojo one we had a huge contributions from IBM to make um",
    "start": "1116200",
    "end": "1121760"
  },
  {
    "text": "all of the widgets accessible and provide a framework for creating accessible widgets and then obviously in",
    "start": "1121760",
    "end": "1127400"
  },
  {
    "text": "modern dojo we had a really good engineering Sarah Higley who went on to she's working at Microsoft and",
    "start": "1127400",
    "end": "1133559"
  },
  {
    "text": "accessibility stuff and she did a lot of work on in kind of conceptualizing the modern dojo widgets with you know being",
    "start": "1133559",
    "end": "1140480"
  },
  {
    "text": "properly accessible and so that's something we massively care about um yeah so there's just a lot of things um",
    "start": "1140480",
    "end": "1146799"
  },
  {
    "text": "you know we care a lot about interoperability as well with the web that was kind of a a really pain point",
    "start": "1146799",
    "end": "1152200"
  },
  {
    "text": "in Dojo one if anything is you know the ecosystem in JavaScript is massive there is still a lot of friction in terms of",
    "start": "1152200",
    "end": "1159520"
  },
  {
    "text": "hey can I use this thing from this library in another library and that we",
    "start": "1159520",
    "end": "1164880"
  },
  {
    "text": "never really solved in in Dojo one it's just not there but in in modern than Dojo you know we really care about being",
    "start": "1164880",
    "end": "1171600"
  },
  {
    "text": "able to create Dojo components but use them in any framework so we have a really good um custom element story for",
    "start": "1171600",
    "end": "1179679"
  },
  {
    "text": "that in terms of we have a build tool that will take your dojo widget and with no additional config or anything or any",
    "start": "1179679",
    "end": "1187559"
  },
  {
    "text": "code change we can spit out a custom element uh that you can use you know",
    "start": "1187559",
    "end": "1193039"
  },
  {
    "text": "just in plain HTML that has the correct properties um you can use children in it",
    "start": "1193039",
    "end": "1198360"
  },
  {
    "text": "you can use attributes events Etc just like you'd expect to use any other custom element so I think that's really",
    "start": "1198360",
    "end": "1204400"
  },
  {
    "text": "powerful because that's another thing that you know things like react even though it's a component authoring system",
    "start": "1204400",
    "end": "1210200"
  },
  {
    "text": "it doesn't provide you any way to kind of build those things out the box or ship them to use with you know the",
    "start": "1210200",
    "end": "1215679"
  },
  {
    "text": "libraries yeah that's the main story that I like uh and what led me to that comment is you have all of this out of",
    "start": "1215679",
    "end": "1221919"
  },
  {
    "text": "the box and then as you go to upgrade and get all these new awesome features which we'll we'll talk about in the next",
    "start": "1221919",
    "end": "1227039"
  },
  {
    "text": "segment um what's coming into 7 you can pretty confidently upgrade and using the",
    "start": "1227039",
    "end": "1232280"
  },
  {
    "text": "upgrade tool it it becomes pretty painless as well and all of the the features and and tools that you're going",
    "start": "1232280",
    "end": "1238480"
  },
  {
    "text": "to use that ship with Dojo obviously just get upgraded and and are usable in",
    "start": "1238480",
    "end": "1243600"
  },
  {
    "text": "the new version as [Music] [Applause] [Music] well linode is our Cloud Sero Choice",
    "start": "1243600",
    "end": "1251440"
  },
  {
    "text": "grab the nanode plan for just $5 a month just five bucks that gets you a gig of RAM a blazing fast 25 gig SSD and one",
    "start": "1251440",
    "end": "1259159"
  },
  {
    "text": "terab of transfer let's be honest you can go a long ways on that five bucks when you do need to scale up their",
    "start": "1259159",
    "end": "1265159"
  },
  {
    "text": "prices are predictable so you can put your calculator down you won't need it we've been running change.com on Leno",
    "start": "1265159",
    "end": "1270320"
  },
  {
    "text": "for years and we've always impressed by the reward winning support team check them out at lin.com",
    "start": "1270320",
    "end": "1276400"
  },
  {
    "text": "changelog once again that's lin.com",
    "start": "1276400",
    "end": "1281120"
  },
  {
    "text": "[Music] changelog so in the dojo news Dojo 7 is",
    "start": "1283340",
    "end": "1290799"
  },
  {
    "text": "either here or just around the corner I won't confidently say that it's here don't let make the same mistake twice",
    "start": "1290799",
    "end": "1297720"
  },
  {
    "text": "yeah but it is imminent in its release and Matt can you tell us uh some of the highlights of what to expect in Dojo 7",
    "start": "1297720",
    "end": "1306640"
  },
  {
    "text": "yeah I mean Dojo 7's absolutely huge so it has um Extended quite a long time",
    "start": "1306640",
    "end": "1312039"
  },
  {
    "text": "it's been maybe six or seven months since Dojo 6 um which is it's quite a long time for us in terms of our release",
    "start": "1312039",
    "end": "1318600"
  },
  {
    "text": "Cycles um but we deliberately did that cuz we changed quite a lot of the offering patterns in Dojo 6 like we said",
    "start": "1318600",
    "end": "1326279"
  },
  {
    "text": "um from where we started with Dojo 2 we felt like it was a good point for us to kind of revisit our widgets and what we",
    "start": "1326279",
    "end": "1333360"
  },
  {
    "text": "had um so our widget Library you know is a is a component library and you know",
    "start": "1333360",
    "end": "1339320"
  },
  {
    "text": "that's been around since the initial release so you know in that time we've discovered a lot of you know better",
    "start": "1339320",
    "end": "1344400"
  },
  {
    "text": "patterns or nicer ways to do stuff so we took an opportunity in Dojo 7 to set",
    "start": "1344400",
    "end": "1349480"
  },
  {
    "text": "ourselves some time to really you know try and make you know the widgets that we've got better out the box um more",
    "start": "1349480",
    "end": "1357880"
  },
  {
    "text": "consistent in terms of apis because it's quite difficult you know working on a huge uh like widget Library you know",
    "start": "1357880",
    "end": "1363640"
  },
  {
    "text": "that might span you know for to widgets to try and you know lots of people working on them to try and have you know",
    "start": "1363640",
    "end": "1369960"
  },
  {
    "text": "the standards there of you know the documentation and all the things kind of around it I think it's really easy to go",
    "start": "1369960",
    "end": "1375240"
  },
  {
    "text": "and write a component but to do all the things cons L with the right documentation kind of the right support",
    "start": "1375240",
    "end": "1382039"
  },
  {
    "text": "for things you know I'll get i'll get to some of the like new things we've had in a minute but you know to try and get the",
    "start": "1382039",
    "end": "1387120"
  },
  {
    "text": "consistency there was kind of a a huge thing for Dojo 7 and so we've really",
    "start": "1387120",
    "end": "1392279"
  },
  {
    "text": "improved the usability of our widgets we've got a more extensive set of",
    "start": "1392279",
    "end": "1397679"
  },
  {
    "text": "widgets and we've got some cool new features in widgets alone so we've always had a theming system for Dojo so",
    "start": "1397679",
    "end": "1403919"
  },
  {
    "text": "you can write your own themes for for these widgets but we only shipped with basically dojo's own theme so in Dojo 7",
    "start": "1403919",
    "end": "1412520"
  },
  {
    "text": "you know one of the huge things one of the biggest requests that we've had obviously is for material style",
    "start": "1412520",
    "end": "1417919"
  },
  {
    "text": "components and now a lot of people out there you know might go in and use a specific material component library with",
    "start": "1417919",
    "end": "1426120"
  },
  {
    "text": "our widget system the idea is that you you could style this as material you could style it as ant design You' style",
    "start": "1426120",
    "end": "1433279"
  },
  {
    "text": "it however you want so kind of this really proved how good our theming system was and how how extensible our",
    "start": "1433279",
    "end": "1439760"
  },
  {
    "text": "components were to allow us to create that so we discovered a lot doing that but at the end of it you know we've got",
    "start": "1439760",
    "end": "1446279"
  },
  {
    "text": "a set of widgets now that obviously you can use the dojo theme you can use the material theme for materiall looking",
    "start": "1446279",
    "end": "1452000"
  },
  {
    "text": "components and beyond that kind of we really improved the theming experience so in Doo 7 we've got this concept of uh",
    "start": "1452000",
    "end": "1459159"
  },
  {
    "text": "variance which allows you to you know Bas it's basically powered just by CSS variables but on top of the theme you",
    "start": "1459159",
    "end": "1465840"
  },
  {
    "text": "can then configure a variant for it so you know you could have a a dark we have you know we're shipping a dark version",
    "start": "1465840",
    "end": "1472120"
  },
  {
    "text": "of material and that is just a variant of the material theme you know you could ship uh you know a red version of the",
    "start": "1472120",
    "end": "1478080"
  },
  {
    "text": "material theme and so yeah it was a really good exercise for us to kind of you know build that out in Dojo 7 I",
    "start": "1478080",
    "end": "1484520"
  },
  {
    "text": "think that's going to be super powerful because you know customizing components look and feel is",
    "start": "1484520",
    "end": "1489960"
  },
  {
    "text": "extremely important you know for most users of apps to be honest so yeah being",
    "start": "1489960",
    "end": "1495000"
  },
  {
    "text": "able to brand and and configure those themes was one of the big things there is been a number of changes in Dojo",
    "start": "1495000",
    "end": "1501200"
  },
  {
    "text": "framework as well but really the headline thing is you know a more exhaustive set of widget components some",
    "start": "1501200",
    "end": "1507679"
  },
  {
    "text": "big consistency changes in the API to make them more useful and work out the box and we've also tried to really",
    "start": "1507679",
    "end": "1514000"
  },
  {
    "text": "improve the the documentation side because I think that's a a really important thing so in the past we were",
    "start": "1514000",
    "end": "1520640"
  },
  {
    "text": "kind of manually you know updating markdown to kind of document you know what the interfaces are how you could",
    "start": "1520640",
    "end": "1527799"
  },
  {
    "text": "theme Etc and but in Dojo 7 we've got this new tool which is called parade and",
    "start": "1527799",
    "end": "1534200"
  },
  {
    "text": "it's kind of like a story book if anyone's ever used that but it's basically a a development environment to",
    "start": "1534200",
    "end": "1540679"
  },
  {
    "text": "develop components in uh you can run the tests from wining there for instance uh",
    "start": "1540679",
    "end": "1545720"
  },
  {
    "text": "you can change the theme in there Etc but it also doubles as a generated documentation tool as well so you know",
    "start": "1545720",
    "end": "1552039"
  },
  {
    "text": "users can go and look at the examples they can look at the code they can uh",
    "start": "1552039",
    "end": "1557559"
  },
  {
    "text": "see the interfaces for the components and they can see like the themeable classes Etc so that's a huge thing and",
    "start": "1557559",
    "end": "1564240"
  },
  {
    "text": "not just for consuming components but writing components yourself it made it so much easier being able to run the",
    "start": "1564240",
    "end": "1571840"
  },
  {
    "text": "tests and and to see it update and to change the theme quickly oh it's it's such a joy to use now yeah and to be",
    "start": "1571840",
    "end": "1579120"
  },
  {
    "text": "honest with you again is I think that was one of the really good things that we we have approaching Dojo 7 is we've got out of that kind of habit of having",
    "start": "1579120",
    "end": "1585799"
  },
  {
    "text": "kind of our own tool chain to develop our widgets and use the tool chain that",
    "start": "1585799",
    "end": "1591240"
  },
  {
    "text": "anyone else would write a component for and make sure that we make that as you know as frictionless as possible and",
    "start": "1591240",
    "end": "1597960"
  },
  {
    "text": "before it was a lot more difficult you know if you make a change to a component you want to be able to see that",
    "start": "1597960",
    "end": "1603000"
  },
  {
    "text": "instantly you want to be able to see you know the the types that you're changing you want to see how you know how your",
    "start": "1603000",
    "end": "1609000"
  },
  {
    "text": "widget is themable and you want to be able to test it when you're writing the themes for it so yeah it has made a huge",
    "start": "1609000",
    "end": "1614760"
  },
  {
    "text": "difference to be honest yeah for sure and from my perspective uh helping with the widgets for Dojo 7 I don't think",
    "start": "1614760",
    "end": "1622240"
  },
  {
    "text": "that there's a widget that didn't get touched in this and that is mainly being converted from a class based widget to a",
    "start": "1622240",
    "end": "1628520"
  },
  {
    "text": "functional widget to take advantage of the new middleware and the consistent way of like handling you know State",
    "start": "1628520",
    "end": "1634480"
  },
  {
    "text": "variables and things like that but also I think another thing we did was all of the widgets were Rewritten to use uh TSX",
    "start": "1634480",
    "end": "1642399"
  },
  {
    "text": "instead of the hyperscript variant that we were using yeah absolutely and I think that's a concession we've kind of",
    "start": "1642399",
    "end": "1648720"
  },
  {
    "text": "made over time in the what's hyperscript so hyperscript is kind of um it's",
    "start": "1648720",
    "end": "1654200"
  },
  {
    "text": "basically just so TSX and jsx are obviously madeup XML like syntax that",
    "start": "1654200",
    "end": "1661200"
  },
  {
    "text": "gets compiled down to if you're using react uh reacts create element and basically that functional API was what",
    "start": "1661200",
    "end": "1669240"
  },
  {
    "text": "we used before instead of jsx and we supported JS TSX and jsx so the TSX was",
    "start": "1669240",
    "end": "1677000"
  },
  {
    "text": "always more de narrative and the hyperscript is basically a completely",
    "start": "1677000",
    "end": "1682039"
  },
  {
    "text": "programmatic API and and we supported both from day one but in our kind of reluctance to look too much like I think",
    "start": "1682039",
    "end": "1689159"
  },
  {
    "text": "there's a strong affiliation with jsx and TSX with react at the time obviously",
    "start": "1689159",
    "end": "1695840"
  },
  {
    "text": "we preferred showing the programmatic API and using it there's no functional difference in terms of you know what",
    "start": "1695840",
    "end": "1701279"
  },
  {
    "text": "actually happens under the hood but we've slowly over time realized that you know people you know one of the biggest",
    "start": "1701279",
    "end": "1706640"
  },
  {
    "text": "things about react actually wasn't react it's about people writing you know if",
    "start": "1706640",
    "end": "1712000"
  },
  {
    "text": "you look at it um HTML like things in a reactive way so we fully embraced TSX",
    "start": "1712000",
    "end": "1718919"
  },
  {
    "text": "now in documentation and the rest of it so yeah yeah I really like that too because uh not that I had anything",
    "start": "1718919",
    "end": "1725399"
  },
  {
    "text": "against hyperscript but it's it's easier uh because you don't have in Dojo at least there was two different",
    "start": "1725399",
    "end": "1730720"
  },
  {
    "text": "hyperscript functions to call whether you were creating Dom or creating another widget and uh it just kind of",
    "start": "1730720",
    "end": "1737480"
  },
  {
    "text": "Blends together now which is I mean it always did before but now the internal widgets all blend together and are easy",
    "start": "1737480",
    "end": "1744399"
  },
  {
    "text": "easy to write especially if you like that jsx TSX syntax what else has changed in uh Dojo 7 I'm trying to",
    "start": "1744399",
    "end": "1750919"
  },
  {
    "text": "remember myself he listed a lot of stuff out there I was thinking could there possibly be more yeah no we've done an",
    "start": "1750919",
    "end": "1757760"
  },
  {
    "text": "awful lot actually what hasn't changed yeah that's a good question shorter",
    "start": "1757760",
    "end": "1763240"
  },
  {
    "text": "list um like one thing that we have been trying to improve is um Dojo has support",
    "start": "1763240",
    "end": "1768600"
  },
  {
    "text": "for kind of um this mechanism called uh build time rendering which is allows you",
    "start": "1768600",
    "end": "1773960"
  },
  {
    "text": "to kind of have a flexible system for doing things at build time um so this is",
    "start": "1773960",
    "end": "1781919"
  },
  {
    "text": "quite you know this is kind of a hot space so it's been a hot space for a while with kind of Gatsby and the other",
    "start": "1781919",
    "end": "1787679"
  },
  {
    "text": "static site site generators um and build time renderings kind of Gojo's equivalent it's not completely focused",
    "start": "1787679",
    "end": "1794440"
  },
  {
    "text": "for static sight things but it can do it and so we've been improving the experience of that quite a lot so in the",
    "start": "1794440",
    "end": "1800519"
  },
  {
    "text": "past there was a lot of configuration in terms of saying I want to render these Pages for instance that you'd have to",
    "start": "1800519",
    "end": "1806760"
  },
  {
    "text": "configure and we've kind of tried to remove all of that to be kind of just",
    "start": "1806760",
    "end": "1812039"
  },
  {
    "text": "work out the box now so hopefully in Dojo 7 people you know will be able to",
    "start": "1812039",
    "end": "1817799"
  },
  {
    "text": "write static websites with you know zero config was the goal and yeah so that was",
    "start": "1817799",
    "end": "1823720"
  },
  {
    "text": "a big thing that we've changed as always you know we've been trying to improve uh the story in terms of uh how we ship",
    "start": "1823720",
    "end": "1831720"
  },
  {
    "text": "polyfills Etc to the browser um so Dojo uh has founded quite a lot in kind of",
    "start": "1831720",
    "end": "1838559"
  },
  {
    "text": "Enterprise apps so we still support i1 um in terms of the framework because we",
    "start": "1838559",
    "end": "1843600"
  },
  {
    "text": "get a lot of requests for it and hopefully that will eventually die out because I think is it October this year",
    "start": "1843600",
    "end": "1849840"
  },
  {
    "text": "is the official end of life that's right but them stubborn Enterprise customers",
    "start": "1849840",
    "end": "1854880"
  },
  {
    "text": "um but yeah so like you know we've been trying to obviously we don't want to",
    "start": "1854880",
    "end": "1860159"
  },
  {
    "text": "ship you know Legacy code to Modern browsers so you know there's a lot of",
    "start": "1860159",
    "end": "1865440"
  },
  {
    "text": "progress in this space you know differential loading and things like that um so in Dojo 7 we're a lot more",
    "start": "1865440",
    "end": "1871720"
  },
  {
    "text": "intelligent about how and when we'll load a polyfill so some of those are",
    "start": "1871720",
    "end": "1879039"
  },
  {
    "text": "decided on if you use that kind of thing in code so if you use an intersection Observer for instance um in your code",
    "start": "1879039",
    "end": "1885840"
  },
  {
    "text": "then we will include the capability for that polyfill to be loaded if you don't",
    "start": "1885840",
    "end": "1891039"
  },
  {
    "text": "use intersection observer in in your code then we won't even think about loading it and then on top of that when",
    "start": "1891039",
    "end": "1898039"
  },
  {
    "text": "you get to loading that in a browser we'll conditionally check whether you know you have that Co capability and load it so basically the end goal being",
    "start": "1898039",
    "end": "1905039"
  },
  {
    "text": "you never load more than what's required or what's used and so that's really",
    "start": "1905039",
    "end": "1910760"
  },
  {
    "text": "helped us kind of um keeping our bundle sizes down um and only loading absolutely what necessary and only",
    "start": "1910760",
    "end": "1917000"
  },
  {
    "text": "loading modern code because there's a big cost in shipping you know transpiled",
    "start": "1917000",
    "end": "1922200"
  },
  {
    "text": "es5 bundles you know the difference between shipping a legacy bundle and a modern bundle is huge so yeah that's one",
    "start": "1922200",
    "end": "1928919"
  },
  {
    "text": "of our key focuses all the time is on on keeping our bundle sizes down and doing",
    "start": "1928919",
    "end": "1934039"
  },
  {
    "text": "intelligent things to split code effectively sounds really great Matt when can we get",
    "start": "1934039",
    "end": "1941120"
  },
  {
    "text": "it that's a great question yeah I think um hopefully we're going to be released this week but I said that last week",
    "start": "1941120",
    "end": "1947120"
  },
  {
    "text": "what's in the way is just a Polish or what's still left to do we've had a few critical bugs in places again i1 always",
    "start": "1947120",
    "end": "1953279"
  },
  {
    "text": "throws up some surprises and you know because we're doing with the new theme variant system it's heavily reliant on",
    "start": "1953279",
    "end": "1958600"
  },
  {
    "text": "CSS variables and i1 doesn't support CSS",
    "start": "1958600",
    "end": "1963679"
  },
  {
    "text": "variables but we still wanted to have kind of the capability so in the past what we've done for CSS varibles Bulls",
    "start": "1963679",
    "end": "1970159"
  },
  {
    "text": "is basically we've computed those a a build time for legacy browsers so you",
    "start": "1970159",
    "end": "1976440"
  },
  {
    "text": "know if you're using a very CSS variable of red uh let's say the uh CSS variables",
    "start": "1976440",
    "end": "1982080"
  },
  {
    "text": "like a warning color at build time for IE we would have changed that to just be",
    "start": "1982080",
    "end": "1987679"
  },
  {
    "text": "hardcoded to red but with the new variant stuff the idea behind this is you know you should be able to switch",
    "start": "1987679",
    "end": "1993440"
  },
  {
    "text": "those things if you wanted to at runtime so we've had to do a lot of work on the IE front to kind of make that possible",
    "start": "1993440",
    "end": "2001200"
  },
  {
    "text": "which we have done with some hackery but that's taken us some extra time and obviously we've really ramped up the",
    "start": "2001200",
    "end": "2007360"
  },
  {
    "text": "amount of testing we've had to do around widgets and theming because we've haded you know the material theme Etc so there's been",
    "start": "2007360",
    "end": "2014519"
  },
  {
    "text": "quite a a large what I'd say is a quality assurance kind of period during",
    "start": "2014519",
    "end": "2019880"
  },
  {
    "text": "this one um and that's to be honest with you why we like doing more frequent releases in this this has been a much",
    "start": "2019880",
    "end": "2024960"
  },
  {
    "text": "longer release you know the longer it gets the more amount of things that we have to still you know it's there is a",
    "start": "2024960",
    "end": "2030039"
  },
  {
    "text": "big footprint across this framework we do try and do a lot of things so there is quite a lot of you know uh things",
    "start": "2030039",
    "end": "2036279"
  },
  {
    "text": "that we have you know obviously we've got tests and we've got a lot of apps that use stuff that we test stuff on so",
    "start": "2036279",
    "end": "2042120"
  },
  {
    "text": "but it you know it is a big thing to test so that that's really the hold up how do you manage the push and pole",
    "start": "2042120",
    "end": "2047799"
  },
  {
    "text": "between the desire to support ie11 and Enterprise customers with the desire to",
    "start": "2047799",
    "end": "2054960"
  },
  {
    "text": "push the framework forward and maintain a bundle size that's reasonable which",
    "start": "2054960",
    "end": "2061280"
  },
  {
    "text": "I'm sure is always a challenge that's a great that is honestly one of the most like difficult Parts is like going back",
    "start": "2061280",
    "end": "2067280"
  },
  {
    "text": "to before I think there's two kind of huge constraints that we have with this is one is typescript like I've mentioned",
    "start": "2067280",
    "end": "2073158"
  },
  {
    "text": "before is when we write apis you know we try and write apis that work well with",
    "start": "2073159",
    "end": "2078878"
  },
  {
    "text": "typescripts now that does mean that you do have some constraints there on the typescript side so quite a lot of the",
    "start": "2078879",
    "end": "2084520"
  },
  {
    "text": "time kind of really Loosely coupled stuff in typescripts causes you a problem because they you can't get that",
    "start": "2084520",
    "end": "2090200"
  },
  {
    "text": "type inference so we design a lot of our apis with typescripts in mind and a lot",
    "start": "2090200",
    "end": "2095320"
  },
  {
    "text": "of our apis kind of have them similar constraints by 11 now what we won't do is early on we did flip that kind of",
    "start": "2095320",
    "end": "2102520"
  },
  {
    "text": "constraint in that yes we we we you know out of the box I think when Dojo 2",
    "start": "2102520",
    "end": "2108400"
  },
  {
    "text": "released the kind of the Legacy bundle was the default way around if that makes sense is in like we would ship a legacy",
    "start": "2108400",
    "end": "2115079"
  },
  {
    "text": "bundle to cover that but over time you know we have to be Forward Thinking and modern and so there is a lot of design",
    "start": "2115079",
    "end": "2122000"
  },
  {
    "text": "that goes into that in terms of our apis like I say the the polyfill projects that were just completed for Dojo 7",
    "start": "2122000",
    "end": "2128000"
  },
  {
    "text": "there was a lot of thought there in terms of how we can shift Le code to the browser while still supporting i1 and I",
    "start": "2128000",
    "end": "2136040"
  },
  {
    "text": "think that is a it is a like what you said it is a push pull um you know at some point that still continues even in",
    "start": "2136040",
    "end": "2143720"
  },
  {
    "text": "modern browsers because of the way that you know everything's moving a lot quicker nowadays in terms of you know",
    "start": "2143720",
    "end": "2149880"
  },
  {
    "text": "people intending to ship things you know early and frequently like in in the browsers but there is still you know",
    "start": "2149880",
    "end": "2156560"
  },
  {
    "text": "when you look at Safari in terms of how quickly they ship things for example I think they only just",
    "start": "2156560",
    "end": "2163000"
  },
  {
    "text": "shipped resize observers in their last release or the released before so I think there is kind of obviously i1's",
    "start": "2163000",
    "end": "2170319"
  },
  {
    "text": "the absolute worst case scenario um but we still have to a lot of these systems we design work well in terms of modern",
    "start": "2170319",
    "end": "2177079"
  },
  {
    "text": "features that aren implemented in all browsers yet as well so for instance in the Safari scenario is we don't ever",
    "start": "2177079",
    "end": "2184880"
  },
  {
    "text": "want to put the resize observer in your bundle if you never use it but also we",
    "start": "2184880",
    "end": "2189920"
  },
  {
    "text": "don't want to put it in your bundle if you're in Chrome and you've got that implemented natively so a lot of it is",
    "start": "2189920",
    "end": "2197119"
  },
  {
    "text": "Def faring and lazily loading things that is genuinely one of the you know the key things that we do",
    "start": "2197119",
    "end": "2203079"
  },
  {
    "text": "so you mentioned designing apis around uh typescript and what it supports I'm curious does that complicate things as",
    "start": "2203079",
    "end": "2209960"
  },
  {
    "text": "you're looking to upgrade typescript uh because of like maybe workarounds or uh ways that you're reaching for the right",
    "start": "2209960",
    "end": "2216200"
  },
  {
    "text": "type of inference does it make it harder to support later versions of typescript I think we've been reasonably lucky cuz",
    "start": "2216200",
    "end": "2222599"
  },
  {
    "text": "quite a lot of times I think typescripts for unless you're using if you unless you're doing",
    "start": "2222599",
    "end": "2228160"
  },
  {
    "text": "something absolutely mad then generally because we develop the framework in",
    "start": "2228160",
    "end": "2234800"
  },
  {
    "text": "strict mode anyway um which is you know is a really good thing to do is generally we don't get a lot of",
    "start": "2234800",
    "end": "2241000"
  },
  {
    "text": "breakages which is useful and the most common scenario is is that we end up",
    "start": "2241000",
    "end": "2246200"
  },
  {
    "text": "with an API that we might want to change to be take better advantage of types that's generally the way we found it",
    "start": "2246200",
    "end": "2252480"
  },
  {
    "text": "like so you know kind of the support now you know types scrip better supports recursive types for instance and in the",
    "start": "2252480",
    "end": "2259200"
  },
  {
    "text": "past we would have expressed that in a different way to get around it so you know in some places we might have had",
    "start": "2259200",
    "end": "2264880"
  },
  {
    "text": "this insane type overload that's like there's one in stores that's like it's like 50 lines of overloads with generics",
    "start": "2264880",
    "end": "2272280"
  },
  {
    "text": "repeated and those things you know can be massively improved and I remember you know working on them them at the time",
    "start": "2272280",
    "end": "2278240"
  },
  {
    "text": "thinking this is horrific but for the most part it's just you know typescripts gets more powerful and actually that",
    "start": "2278240",
    "end": "2284880"
  },
  {
    "text": "makes those things a lot easier some things you know we can never change when we there is like a number of you know",
    "start": "2284880",
    "end": "2291240"
  },
  {
    "text": "API considerations that you know that typescripts can never know about because and it's like kind of what I got back to",
    "start": "2291240",
    "end": "2297359"
  },
  {
    "text": "before is if you Loosely comple something so much or you kind of go to this kind of system where you know",
    "start": "2297359",
    "end": "2303200"
  },
  {
    "text": "you're using strings or things like that it's really hard for you to get the inference out of things and and to be",
    "start": "2303200",
    "end": "2309319"
  },
  {
    "text": "honest with you I think that's one of the things I think people misconstrue about typescript is for us as Library",
    "start": "2309319",
    "end": "2315640"
  },
  {
    "text": "offers we write a lot of types right we use a lot of generics there's a lot of things there but for people as end users",
    "start": "2315640",
    "end": "2322119"
  },
  {
    "text": "is the end goal is you don't write types ever for you know you'll be typing maybe the params to your function in your land",
    "start": "2322119",
    "end": "2329079"
  },
  {
    "text": "but in terms of using the framework good Frameworks in typescripts rely on the inference so that's you know really the",
    "start": "2329079",
    "end": "2336359"
  },
  {
    "text": "key goal I promise you'll never have a 50 line generic in in client side or in in a userland dojo code yeah absolutely",
    "start": "2336359",
    "end": "2345560"
  },
  {
    "text": "taking a step back to you mentioned testing and kind of the thorough testing I did want to touch on testing in Dojo a",
    "start": "2345560",
    "end": "2352119"
  },
  {
    "text": "little bit because that's one of the the things I really like about writing Dojo 2 is writing tests for for Dojo",
    "start": "2352119",
    "end": "2358319"
  },
  {
    "text": "components it's really kind of a joy to to uh use and I haven't really played with the new stuff in Dojo 7 uh that's",
    "start": "2358319",
    "end": "2366200"
  },
  {
    "text": "coming I think there's new stuff at least with the the test harness but do you maybe want to describe the test harness and how we we approach that yeah",
    "start": "2366200",
    "end": "2373520"
  },
  {
    "text": "so I mean I think there is some wildly differing opinions on the web on how to",
    "start": "2373520",
    "end": "2380319"
  },
  {
    "text": "test things I just want to make sure we're as controversial as possible yeah yeah no I think you know I think if you",
    "start": "2380319",
    "end": "2387440"
  },
  {
    "text": "if you speak to some people um their what their opinions are on unit tests or",
    "start": "2387440",
    "end": "2392560"
  },
  {
    "text": "integration test there is a lot of blaring there between I think what people think a unit test is and isn't",
    "start": "2392560",
    "end": "2398319"
  },
  {
    "text": "nowadays and we could be super controversial about about the boundaries of a test anything like that but I like",
    "start": "2398319",
    "end": "2404200"
  },
  {
    "text": "to think of it of a way is all we care about is being able to test our expectations of components and",
    "start": "2404200",
    "end": "2410839"
  },
  {
    "text": "I don't care how we do it so the dojo test harness is an enzyme like shallow",
    "start": "2410839",
    "end": "2417760"
  },
  {
    "text": "renderer which is controversial and it does a lot of things differently to enzyme and I think it avoids a lot of",
    "start": "2417760",
    "end": "2424760"
  },
  {
    "text": "kind of the things that I think those kind of tests get a bad bad rep",
    "start": "2424760",
    "end": "2430119"
  },
  {
    "text": "for and I mean the key thing for us is we want you to be able to write tests that are",
    "start": "2430119",
    "end": "2435280"
  },
  {
    "text": "consistent that are easy to write and are not giving you kind of false",
    "start": "2435280",
    "end": "2440319"
  },
  {
    "text": "positives on what you're writing I think reactive components are kind of a tricky thing to test because at the end of the",
    "start": "2440319",
    "end": "2447040"
  },
  {
    "text": "day they're a render function and really the unit of that test is the entirety of",
    "start": "2447040",
    "end": "2452319"
  },
  {
    "text": "that widget because that's what gets returned and that's kind of really what a vom's about right is every time that",
    "start": "2452319",
    "end": "2458280"
  },
  {
    "text": "render function is called You're effectively returning the entirety of that widget so testing like little bits",
    "start": "2458280",
    "end": "2465560"
  },
  {
    "text": "of it isn't really the correct way to think about it so kind of what the test",
    "start": "2465560",
    "end": "2471960"
  },
  {
    "text": "render in Dojo 7 and in the previous versions this is just an enhanced",
    "start": "2471960",
    "end": "2477480"
  },
  {
    "text": "version of it and the thing that we've kind of the approach we've got is we want you to be able to write tests like",
    "start": "2477480",
    "end": "2484040"
  },
  {
    "text": "in a partial manner as in only test the things that you know you think are",
    "start": "2484040",
    "end": "2489280"
  },
  {
    "text": "changing but are set against the entirety of it so it's kind of rather",
    "start": "2489280",
    "end": "2495839"
  },
  {
    "text": "than just asserting partially against things it's asserting against the full thing but still modifying those things",
    "start": "2495839",
    "end": "2502359"
  },
  {
    "text": "in a partial way so yeah I mean I think we could go massively into depth into testing I think there's a load of",
    "start": "2502359",
    "end": "2508760"
  },
  {
    "text": "different opinions we do support multiple Styles I mean we do use intern as our testing tool in the CLI and that",
    "start": "2508760",
    "end": "2515079"
  },
  {
    "text": "allows you to write in browser tests for starters which I think people have forgotten about like you know everyone's",
    "start": "2515079",
    "end": "2521040"
  },
  {
    "text": "very used to jest and and other um test Runners that just don't work in the browser still to this day and I do think",
    "start": "2521040",
    "end": "2527599"
  },
  {
    "text": "like you can't be testing something in the environment it's going to run in and",
    "start": "2527599",
    "end": "2533240"
  },
  {
    "text": "yeah and obviously you know uh intern supports you know functional tests with selenium as well so I think you know",
    "start": "2533240",
    "end": "2539800"
  },
  {
    "text": "there's as always there's not one right way to write tests it's a good mixture of lowlevel and high level ones uh we do",
    "start": "2539800",
    "end": "2547200"
  },
  {
    "text": "provide you know a testing harness for the component level what we class as a unit test effectively but then obviously",
    "start": "2547200",
    "end": "2553640"
  },
  {
    "text": "that doesn't replace writing a good mixture of test was that the least controversial I",
    "start": "2553640",
    "end": "2558880"
  },
  {
    "text": "could be there yeah I'm so disappointed uh yeah spice it up come",
    "start": "2558880",
    "end": "2565559"
  },
  {
    "text": "on um but yeah that that test harness is is cool and uh definitely worth checking out it's all it also uh as you mentioned",
    "start": "2565839",
    "end": "2573040"
  },
  {
    "text": "the tests are written using intern uh but we've done do that use just as well",
    "start": "2573040",
    "end": "2578760"
  },
  {
    "text": "and the test harness works all the same in there so it's it's definitely versatile in that yeah the test harness",
    "start": "2578760",
    "end": "2585079"
  },
  {
    "text": "is agnostic to you know to test Runners and to be honest with you with Dojo framework you know people do have",
    "start": "2585079",
    "end": "2591040"
  },
  {
    "text": "opinions on testing tools and so bring your own if that's what you want to do that's yeah cool so yeah definitely uh",
    "start": "2591040",
    "end": "2597760"
  },
  {
    "text": "look for the release of Dojo 7 and there'll be an updated blog post on doo.",
    "start": "2597760",
    "end": "2604000"
  },
  {
    "text": "which if you're looking for an example of a build time render site with Dojo doo. is",
    "start": "2604000",
    "end": "2610210"
  },
  {
    "text": "[Music]",
    "start": "2610210",
    "end": "2617720"
  },
  {
    "text": "that JS Nation live is just around the corner attend the biggest JavaScript",
    "start": "2617720",
    "end": "2623960"
  },
  {
    "text": "conference in the cloud it's all happening June 18th and 19th and they're expecting more than 25,000 attendees",
    "start": "2623960",
    "end": "2630920"
  },
  {
    "text": "from all over the globe get your free tickets using the link in the show notes",
    "start": "2630920",
    "end": "2636000"
  },
  {
    "text": "you heard that right the tickets are absolutely free so you got nothing to lose head to the show notes grab a",
    "start": "2636000",
    "end": "2642079"
  },
  {
    "text": "ticket and we hope to see you",
    "start": "2642079",
    "end": "2645440"
  },
  {
    "text": "there so that's what's coming in Dojo 7 uh Matt what can we look forward to going into the future with Dojo 8 and",
    "start": "2651240",
    "end": "2657920"
  },
  {
    "text": "Beyond yeah so we've got a lot planned IND I think you know one of the key",
    "start": "2657920",
    "end": "2663440"
  },
  {
    "text": "things that we needed to get done was a a solid foundation of kind of those",
    "start": "2663440",
    "end": "2668599"
  },
  {
    "text": "types of leaf widgets like you know your buttons your dropdowns your menus your",
    "start": "2668599",
    "end": "2674520"
  },
  {
    "text": "dialogues but I think one of the key things where you know the web is going or a lot of developers are looking for",
    "start": "2674520",
    "end": "2680640"
  },
  {
    "text": "nowadays is kind of the those bigger components those layouts that kind of",
    "start": "2680640",
    "end": "2685800"
  },
  {
    "text": "allow you to quickly put together an application um and I think like if you look at like kind of like the CSS at",
    "start": "2685800",
    "end": "2693200"
  },
  {
    "text": "least in the CSS space that's a really really hot place at the moment moment if you look at Tailwind they're kind of you",
    "start": "2693200",
    "end": "2699480"
  },
  {
    "text": "Tailwinds a a CSS framework that you know allows you to rapidly build things",
    "start": "2699480",
    "end": "2705119"
  },
  {
    "text": "and but they're kind of focusing now on those kind of bigger components that are more layout like you know people want to",
    "start": "2705119",
    "end": "2711839"
  },
  {
    "text": "be able to go I've got this kind of app let's say a lot of apps you know in the end destructure to kind of very similar",
    "start": "2711839",
    "end": "2718559"
  },
  {
    "text": "things right is you've got that kind of news feed app like your Twitter's or even to some extent your Gmail you know",
    "start": "2718559",
    "end": "2724680"
  },
  {
    "text": "you think about those things and it's a list it's got a search box it's got a hamburger or a menu of some sort and",
    "start": "2724680",
    "end": "2731680"
  },
  {
    "text": "there's a lot of people out there who you know want to don't want to spend all the time creating those kind of layouts",
    "start": "2731680",
    "end": "2737359"
  },
  {
    "text": "so that's a real really big space I think for us to provide a lot of",
    "start": "2737359",
    "end": "2742960"
  },
  {
    "text": "functionality out the box and go hey you looking for a a news feed kind of layout",
    "start": "2742960",
    "end": "2748079"
  },
  {
    "text": "widget and not only give you kind of that CSS like Tailwind would but also",
    "start": "2748079",
    "end": "2754520"
  },
  {
    "text": "Stitch that together for you to actually make it work so I didn't really talk about IND Dojo 7 but we've got a huge",
    "start": "2754520",
    "end": "2761520"
  },
  {
    "text": "New Concept IND Dojo 7 that I near left out and and that is it's an abstraction on our a store system basically in terms",
    "start": "2761520",
    "end": "2768839"
  },
  {
    "text": "of dealing with what our concept's called is resources and those basically",
    "start": "2768839",
    "end": "2773920"
  },
  {
    "text": "are an easy way for you to plug in kind of data providers into widgets to have",
    "start": "2773920",
    "end": "2779240"
  },
  {
    "text": "them kind of work out the box and the grand goal with this is to kind of remove that boiler plate of your State",
    "start": "2779240",
    "end": "2785160"
  },
  {
    "text": "Management of you know Redux or whatever and and largely deal with that for you for the common scenario which is for a",
    "start": "2785160",
    "end": "2791800"
  },
  {
    "text": "lot of people it's you know making arrest request to fetch a list of things or calling out to graphql to do",
    "start": "2791800",
    "end": "2797800"
  },
  {
    "text": "something so we're kind of really focused on making that area more seamless and friction free and I think",
    "start": "2797800",
    "end": "2804400"
  },
  {
    "text": "we've started like implementing that in there's a very small version of that in Dojo 7 and we'll be massively expanding",
    "start": "2804400",
    "end": "2810960"
  },
  {
    "text": "that in Dojo a in the hope that you know you'll be able to drop kind of these app level widgets in the page your news feed",
    "start": "2810960",
    "end": "2818200"
  },
  {
    "text": "and be able to hook that up to a resource that you provide and basically have a working you know Twitter app that",
    "start": "2818200",
    "end": "2824720"
  },
  {
    "text": "you can search for instance or scroll down and have an infinite scrolling list off you know out the box with very",
    "start": "2824720",
    "end": "2830160"
  },
  {
    "text": "little wiring I think you find at a moment when you and I get frustrated with it you know I I have like I wear",
    "start": "2830160",
    "end": "2835240"
  },
  {
    "text": "two hats in the week right it's like oh in the week you know I'm working as a framework offer and you can get right into the weeds of that but then on a",
    "start": "2835240",
    "end": "2841079"
  },
  {
    "text": "weekend you know I'm trying to work on my pet project right and even as a person who you know writes dojo like I",
    "start": "2841079",
    "end": "2847440"
  },
  {
    "text": "don't want to do all that boiler play I just want to play around and get something going and I think we've got a",
    "start": "2847440",
    "end": "2853000"
  },
  {
    "text": "lot of people in that space and that's a real goal for for Doo is not just the",
    "start": "2853000",
    "end": "2858400"
  },
  {
    "text": "developer economics because I think people get caught up in that developer economics means yeah this is nice nice to write coding right but it's also",
    "start": "2858400",
    "end": "2865359"
  },
  {
    "text": "about just removing the friction of writing so much code and doing a lot of things for people and yes in some cases",
    "start": "2865359",
    "end": "2872760"
  },
  {
    "text": "that will be too contrived for them right you know that we might only fulfill you know 9 90% of use cases but",
    "start": "2872760",
    "end": "2878880"
  },
  {
    "text": "that you know that's the real idea is to give more power out the box with less code to write so that's a huge",
    "start": "2878880",
    "end": "2886160"
  },
  {
    "text": "initiative in in Dojo a that's really cool so you would write like one time",
    "start": "2886160",
    "end": "2891520"
  },
  {
    "text": "how to fetch data from somewhere and then theoretically that could plug into any component that needs that is that",
    "start": "2891520",
    "end": "2897920"
  },
  {
    "text": "yeah that's exactly it it's one thing that I think people have really strug good it within you know bigger applications whether it be in Dojo or",
    "start": "2897920",
    "end": "2903880"
  },
  {
    "text": "react is you know there's them classic things is there's like cash invalidation that no one knows when to do it no one",
    "start": "2903880",
    "end": "2909880"
  },
  {
    "text": "knows when to fetch something or when to evict that data out because it's stale",
    "start": "2909880",
    "end": "2915319"
  },
  {
    "text": "and you see it in every app it's really tough to work out in what life cycle that happens and so the idea behind uh",
    "start": "2915319",
    "end": "2922240"
  },
  {
    "text": "resources is inside a widget you deal with a resource like you would with",
    "start": "2922240",
    "end": "2927359"
  },
  {
    "text": "something locally so you don't worry about how it globally fits together but under the hood it's Global so you know",
    "start": "2927359",
    "end": "2933799"
  },
  {
    "text": "you can pass this concept of a resource around and we will manage and coordinate when those requests are made we won't",
    "start": "2933799",
    "end": "2940440"
  },
  {
    "text": "make duplicate requests we'll decide when those things are invalidated you know when you need to refetch data",
    "start": "2940440",
    "end": "2946000"
  },
  {
    "text": "because it's stale so the idea being you know we we make it very simple for you to write components and you don't worry",
    "start": "2946000",
    "end": "2952119"
  },
  {
    "text": "about global State and we'll deal with that the h under the hood so the yeah like exactly what you said is you know",
    "start": "2952119",
    "end": "2958040"
  },
  {
    "text": "you can pass this concept of uh a resource around and we'll do all the",
    "start": "2958040",
    "end": "2963079"
  },
  {
    "text": "rest of it for you all the wiring so yeah that's the end game isn't cash inv validation hard",
    "start": "2963079",
    "end": "2969559"
  },
  {
    "text": "because it's so contextual it seems like that would be something that you would actually want to push closer to the app developer not further away but maybe I",
    "start": "2969559",
    "end": "2976599"
  },
  {
    "text": "misheard what you're were saying yeah no so I think there's some really good so when we started with resources we took your like typical to do MVC so knowing",
    "start": "2976599",
    "end": "2985119"
  },
  {
    "text": "more about how you interact with a resource allows us to make good decisions right it's so you know if you",
    "start": "2985119",
    "end": "2991520"
  },
  {
    "text": "edit a TOD do and you click save then we know more than likely that we need to",
    "start": "2991520",
    "end": "2996839"
  },
  {
    "text": "fetch that list of to-dos so basically the idea behind this is by making it",
    "start": "2996839",
    "end": "3002160"
  },
  {
    "text": "more declarative on how you interact with resources we can make smarter",
    "start": "3002160",
    "end": "3007240"
  },
  {
    "text": "decisions for you um it's a great question though because obviously if you don't have that information then you",
    "start": "3007240",
    "end": "3012760"
  },
  {
    "text": "don't know when to do it right um and one thing that we kind of have at the moment that you see in a lot of Frameworks is if you've got local state",
    "start": "3012760",
    "end": "3019520"
  },
  {
    "text": "then your widget doesn't know about anything else outside of it so you know you might the common case is if you've",
    "start": "3019520",
    "end": "3024960"
  },
  {
    "text": "got a widget let's say you had two widgets on a page two components on a page and they're both going to fetch a",
    "start": "3024960",
    "end": "3031400"
  },
  {
    "text": "list of items at the moment they just make them to requests from it now that's fine you might you know it be cashed at",
    "start": "3031400",
    "end": "3037480"
  },
  {
    "text": "the HTTP level but you know we can take we can give you an authoring experience that seems like you're locally writing",
    "start": "3037480",
    "end": "3043760"
  },
  {
    "text": "it but then reconcile that in a global manner um so again is I think everyone's",
    "start": "3043760",
    "end": "3049480"
  },
  {
    "text": "got a lot of fatigue from kind of I mean I certainly have from the Redux style",
    "start": "3049480",
    "end": "3054599"
  },
  {
    "text": "stuff the the reduction Style State technique is very boilerplate regardless of what you use I think you know uh I",
    "start": "3054599",
    "end": "3062240"
  },
  {
    "text": "think some libraries like um moex and stuff like that have have made some good ergonomic gains on making this more like",
    "start": "3062240",
    "end": "3069000"
  },
  {
    "text": "that so I think moex has kind of similar goals in a way that you declare a lot of these kind of decorating patterns inside",
    "start": "3069000",
    "end": "3076200"
  },
  {
    "text": "your widget and it deals with kind of that reconciliation on the state level but they don't kind of get involved in",
    "start": "3076200",
    "end": "3082040"
  },
  {
    "text": "terms of the data fetching kind of part of it they're very separate like State Management",
    "start": "3082040",
    "end": "3087319"
  },
  {
    "text": "and data fetching are still quite separate in a lot of these libraries and so we're trying to bring all that together and so the first version of",
    "start": "3087319",
    "end": "3093960"
  },
  {
    "text": "that is in in the dojo 7 widgets so anything that's powered in in Dojo 7 uses this new uh primitive in resources",
    "start": "3093960",
    "end": "3101160"
  },
  {
    "text": "and it's only a a very early version of that in terms of it only does the the read part of it as in getting things",
    "start": "3101160",
    "end": "3107920"
  },
  {
    "text": "because our widgets are obviously mostly read focused so they don't deal with kind of like saving resources at the",
    "start": "3107920",
    "end": "3113319"
  },
  {
    "text": "moment but it's quite cool because like so it powers is like the uh combo box",
    "start": "3113319",
    "end": "3119599"
  },
  {
    "text": "the select widgets the we've got like a typ ahead and things like that they all use resources so uh the resources out",
    "start": "3119599",
    "end": "3126119"
  },
  {
    "text": "the box are built to support kind of uh pagination in these widgets so you know",
    "start": "3126119",
    "end": "3131400"
  },
  {
    "text": "infinitely scrolling things and managing the offsets queries Etc like that all",
    "start": "3131400",
    "end": "3136839"
  },
  {
    "text": "those things are kind of dealt with out the box so you know you can provide a resource that's got 3 million items you",
    "start": "3136839",
    "end": "3143559"
  },
  {
    "text": "know that works in tandem with like kind of um the virtual virtualization of rendering and the rest of it and that",
    "start": "3143559",
    "end": "3150760"
  },
  {
    "text": "all works out the box in in Dojo 7 while in our earlier ones kind of all that was left to the end user as in you know you",
    "start": "3150760",
    "end": "3158119"
  },
  {
    "text": "would have to provide the number of items to that select widget or that combo box and you're you were in charge",
    "start": "3158119",
    "end": "3165520"
  },
  {
    "text": "with efficiently loading 30,000 items so kind of that's a big change in in Dojo",
    "start": "3165520",
    "end": "3172359"
  },
  {
    "text": "7 sounds like a lot of stuff Matt you've been working on this all by yourself or do you a team of people to be honest",
    "start": "3172359",
    "end": "3177960"
  },
  {
    "text": "with you I didn't do anything so no honestly I mean so many people have contributed to Dojo 7 shout out to I",
    "start": "3177960",
    "end": "3185200"
  },
  {
    "text": "couldn't even name everyone there has been many many people that have contributed to it I think there's been a",
    "start": "3185200",
    "end": "3191040"
  },
  {
    "text": "long I think there the nice thing in seven is we had a lot of room to think about a lot of things up front in where",
    "start": "3191040",
    "end": "3197839"
  },
  {
    "text": "we wanted to go with the goals and I think at the end of it it looks like we've done a lot and we have done a lot",
    "start": "3197839",
    "end": "3205559"
  },
  {
    "text": "but I think the main thing is is we've not only done a lot but we've provided a lot more value with those things I think",
    "start": "3205559",
    "end": "3211359"
  },
  {
    "text": "a lot of the time people get caught up with kind of those micro things in a framework but for us it's about how big",
    "start": "3211359",
    "end": "3218440"
  },
  {
    "text": "a value you can give to that end user so then bigger features that give them more out of the box with less configuration",
    "start": "3218440",
    "end": "3225240"
  },
  {
    "text": "so people can write apps I mean that is really the end goal and that's it one",
    "start": "3225240",
    "end": "3231040"
  },
  {
    "text": "question I was going to ask is do you see Dojo becoming more opinionated about um like service side implementations",
    "start": "3231040",
    "end": "3237880"
  },
  {
    "text": "kind of maybe in the in the same vein as maybe Redwood yeah and I think we've we've",
    "start": "3237880",
    "end": "3243200"
  },
  {
    "text": "been chatting a lot about that recently and um you know redwood's really cool in",
    "start": "3243200",
    "end": "3248559"
  },
  {
    "text": "that I think that space is is a popular space I think you can see it like obviously with Zite or not Zite anymore",
    "start": "3248559",
    "end": "3255240"
  },
  {
    "text": "Vel or whatever they want to call themselves and with like next and stuff you know they're clearly trying to",
    "start": "3255240",
    "end": "3261720"
  },
  {
    "text": "bridge some of that full stack maybe I mean redwood's certainly doing that more than Nick in terms of that and I think",
    "start": "3261720",
    "end": "3268119"
  },
  {
    "text": "it's a really interesting domain and um you know as people who are I think there's a lot of value if you're writing",
    "start": "3268119",
    "end": "3275480"
  },
  {
    "text": "types scripts full stack because I think there's a super amount of value you can get from having strict contracts between",
    "start": "3275480",
    "end": "3282520"
  },
  {
    "text": "the back end and front end generated for you I think that's one of still one of the common things that if you're writing",
    "start": "3282520",
    "end": "3289839"
  },
  {
    "text": "apis if you're using different languages then that's complicated and I think the",
    "start": "3289839",
    "end": "3296480"
  },
  {
    "text": "scripts provides real value there in terms of how that stuff can be documented um I think typescript on the",
    "start": "3296480",
    "end": "3302440"
  },
  {
    "text": "back end is a really interesting space there's some really good you know where where I'm a big fan of um of nestjs um I",
    "start": "3302440",
    "end": "3310839"
  },
  {
    "text": "like typ RM is a really nice om in in typescript there's a load of interesting",
    "start": "3310839",
    "end": "3316480"
  },
  {
    "text": "libraries there I don't think as Dojo we'd like to reinvent the wheel on that entire I think as Jared just said he",
    "start": "3316480",
    "end": "3322960"
  },
  {
    "text": "like we already do a lot of things on the front end and so you know thinking",
    "start": "3322960",
    "end": "3328039"
  },
  {
    "text": "about those things on the on the back end would be a huge amount of work but we certainly I I definitely see a space",
    "start": "3328039",
    "end": "3335359"
  },
  {
    "text": "like maybe horizontal to Dojo of you know a kind of Stack that we'd recommend",
    "start": "3335359",
    "end": "3340520"
  },
  {
    "text": "for you to be to a full type script stack but whether we develop all of that",
    "start": "3340520",
    "end": "3346520"
  },
  {
    "text": "or just have a composition of libraries it's more likely to be a composition of liers but I think it's a super",
    "start": "3346520",
    "end": "3352079"
  },
  {
    "text": "interesting space again because I think you know more and more people you know want to write full stack apps without",
    "start": "3352079",
    "end": "3359160"
  },
  {
    "text": "changing languages and not having that overhead now that doesn't work for everyone you know if you're in a big",
    "start": "3359160",
    "end": "3364680"
  },
  {
    "text": "Enterprise you might be stuck with Java you might it is what it is but I do think it's a really interesting space I",
    "start": "3364680",
    "end": "3371000"
  },
  {
    "text": "think Redwood is is really cool genuinely I think um I think that's a really good Niche to be in I think for",
    "start": "3371000",
    "end": "3377559"
  },
  {
    "text": "now our our our key focus is going bigger on the front end in terms of",
    "start": "3377559",
    "end": "3382720"
  },
  {
    "text": "those application Level and then see where we get to yeah that's awesome I really like the the idea of kind of what",
    "start": "3382720",
    "end": "3389319"
  },
  {
    "text": "you said the the generated um contract between the client and server is is very",
    "start": "3389319",
    "end": "3395200"
  },
  {
    "text": "interesting um and something that that can be done with with typescript yeah and I think honestly",
    "start": "3395200",
    "end": "3401200"
  },
  {
    "text": "there's still a load of tooling like out there that you know I don't think everyone's quite appreciated yet how",
    "start": "3401200",
    "end": "3406839"
  },
  {
    "text": "powerful typescript can be for building your own tools um because you know for",
    "start": "3406839",
    "end": "3412559"
  },
  {
    "text": "us we we use the typescript as like like I said earlier to we'll generate custom",
    "start": "3412559",
    "end": "3417880"
  },
  {
    "text": "elements based on the properties interface that you write and that's the power again of having types to be able",
    "start": "3417880",
    "end": "3425079"
  },
  {
    "text": "to you know build things off uh like you know in we do a lot of things in code splitting where again we go down the As",
    "start": "3425079",
    "end": "3433000"
  },
  {
    "text": "and so we can you know generate automatically the code splits in code you don't have to like in Dojo you do",
    "start": "3433000",
    "end": "3439480"
  },
  {
    "text": "not have to change your code to change the configuration of how things are",
    "start": "3439480",
    "end": "3445480"
  },
  {
    "text": "split and that was kind of you know I think that's a a really pile thing that you know separating code from how things",
    "start": "3445480",
    "end": "3452920"
  },
  {
    "text": "are loaded and bundled is really smart and typescripts you know and and working",
    "start": "3452920",
    "end": "3458280"
  },
  {
    "text": "with ests allows us to do that and so more type information we can get the better idea we have about what we can do",
    "start": "3458280",
    "end": "3465839"
  },
  {
    "text": "smartly for you definitely so uh if folks want to get involved with Dojo",
    "start": "3465839",
    "end": "3471520"
  },
  {
    "text": "where would you point them at yeah it's a great question so a great place to start is on dojo IO which is the",
    "start": "3471520",
    "end": "3476559"
  },
  {
    "text": "official website it has quite a it was a large amount of time spent I think that",
    "start": "3476559",
    "end": "3481960"
  },
  {
    "text": "was around Dojo 6 uh re you know reworking the website and improving the",
    "start": "3481960",
    "end": "3487119"
  },
  {
    "text": "documentation um so you know it's a really good resource now for you know getting started with dojo and and",
    "start": "3487119",
    "end": "3493079"
  },
  {
    "text": "covering the breadth of of the framework uh obviously again we're on GitHub it's a dojo framework and that's where the",
    "start": "3493079",
    "end": "3500839"
  },
  {
    "text": "the entirety of the framework is and but also then we've got the repositories for Dojo widgets which is dojo / widgets and",
    "start": "3500839",
    "end": "3507440"
  },
  {
    "text": "generally you know a lot of the framework level conversations happen on GitHub on dojo framework H we also have",
    "start": "3507440",
    "end": "3513599"
  },
  {
    "text": "Discord Channel that's quite active so uh I think the link to Discord is on",
    "start": "3513599",
    "end": "3518960"
  },
  {
    "text": "dojo iio as well under the Community bit so yeah uh we'd love people to uh",
    "start": "3518960",
    "end": "3524319"
  },
  {
    "text": "contribute again is a lot of the things that I think are really value is getting feedback in terms of what people",
    "start": "3524319",
    "end": "3530720"
  },
  {
    "text": "struggle with in applications and even if you're not actively using Dojo that's something that you know we're really",
    "start": "3530720",
    "end": "3537480"
  },
  {
    "text": "interested in because you know that's kind of the things that we're out to solve um so yeah we definitely love to",
    "start": "3537480",
    "end": "3544319"
  },
  {
    "text": "hear people's ideas and yeah if they want to contribute to Dojo that we've got full contribution",
    "start": "3544319",
    "end": "3550119"
  },
  {
    "text": "guidelines on both the get up repos um it should be fairly straightforward to",
    "start": "3550119",
    "end": "3555200"
  },
  {
    "text": "to get going and like what I said earlier Nick is you know things like w in Dojo widgets with parade now it's",
    "start": "3555200",
    "end": "3561079"
  },
  {
    "text": "it's really easy to you know develop a feature raise a PO requests see it",
    "start": "3561079",
    "end": "3567160"
  },
  {
    "text": "deployed um run the test Etc so yeah hopefully our tooling there makes it",
    "start": "3567160",
    "end": "3572359"
  },
  {
    "text": "kind kind of accessible for for any who want who wants to jump in really",
    "start": "3572359",
    "end": "3577599"
  },
  {
    "text": "definitely you can also check out Tojo on code sandbox and immediately start playing with it yes that's a great point",
    "start": "3577599",
    "end": "3584039"
  },
  {
    "text": "and yeah Dojo uh code sandbox is absolutely brilliant for that you know the amount of times is you know when we get bugs and that um the you know",
    "start": "3584039",
    "end": "3591079"
  },
  {
    "text": "reproducing it in code sandbox makes it so easy so shout out to uh to I with Cod",
    "start": "3591079",
    "end": "3596599"
  },
  {
    "text": "unbox cuz you know that's really is like a revolutionary piece of technology in my opinion so M well thanks so much man",
    "start": "3596599",
    "end": "3603920"
  },
  {
    "text": "for joining us today to talk about dojo and I really look forward to Dojo 7 and Beyond coming out listeners let us know",
    "start": "3603920",
    "end": "3611480"
  },
  {
    "text": "what you think uh was my initial comment correct after checking it out do you think the dojo is better let us know on",
    "start": "3611480",
    "end": "3617799"
  },
  {
    "text": "Twitter at Jared Santo and uh we will see you next",
    "start": "3617799",
    "end": "3622960"
  },
  {
    "text": "week please don't add me instead comment on this episode at Chang log.com that",
    "start": "3624119",
    "end": "3630680"
  },
  {
    "text": "way Nick Matt and I will be notified hey that's three ATS for the price I won to do that pop open in your show notes tap",
    "start": "3630680",
    "end": "3637119"
  },
  {
    "text": "the discuss on change log news link and sound off big thanks to Matt Gad for joining us Nick n for hosting break",
    "start": "3637119",
    "end": "3643160"
  },
  {
    "text": "master cylinder for the beats and our awesome sponsors thanks to fastly Leno and",
    "start": "3643160",
    "end": "3648400"
  },
  {
    "text": "rollbar that's all for now JS danger next",
    "start": "3648400",
    "end": "3654480"
  },
  {
    "text": "week [Music]",
    "start": "3654920",
    "end": "3675849"
  },
  {
    "text": "and these are the breaks break it up break it up break it up you've now entered the break you're free to roam",
    "start": "3675920",
    "end": "3681920"
  },
  {
    "text": "about the Zoom by the way for those listening live",
    "start": "3681920",
    "end": "3687079"
  },
  {
    "text": "next week JS danger returns and uh we got brand new",
    "start": "3687079",
    "end": "3693359"
  },
  {
    "text": "sounds nice we have a new Js danger theme song don't get it wrong you might",
    "start": "3693359",
    "end": "3698520"
  },
  {
    "text": "get this sound oh or this that one's",
    "start": "3698520",
    "end": "3704599"
  },
  {
    "text": "painful and uh should be a blast we're doing it actually in Partnership SL conjunction with Half",
    "start": "3704599",
    "end": "3712559"
  },
  {
    "text": "Stack so we're recording the zoom video we're doing danger Half Stack Edition",
    "start": "3712559",
    "end": "3718640"
  },
  {
    "text": "with Suz Emma and diaa and I will be playing Alex trbe back and then uh we'll",
    "start": "3718640",
    "end": "3726160"
  },
  {
    "text": "ship the video over to them and they'll play it over the lunch hour so we'll be like I don't know it's weird saying you're",
    "start": "3726160",
    "end": "3731839"
  },
  {
    "text": "like speaking at the conf I don't know the whole record it and play it thing is just odd to me but I guess we'll be like",
    "start": "3731839",
    "end": "3738839"
  },
  {
    "text": "have a session where we can watch ourselves on the video so I'm kind of excited about that yeah that'll be",
    "start": "3738839",
    "end": "3744520"
  },
  {
    "text": "awesome one of advice to the panelists on there is uh make sure that you wager",
    "start": "3744520",
    "end": "3750750"
  },
  {
    "text": "[Laughter] properly yes you got to watch more",
    "start": "3750750",
    "end": "3756559"
  },
  {
    "text": "Jeopardy man yeah you got to guard that lead at the",
    "start": "3756559",
    "end": "3762319"
  },
  {
    "text": "end",
    "start": "3766039",
    "end": "3769039"
  }
]