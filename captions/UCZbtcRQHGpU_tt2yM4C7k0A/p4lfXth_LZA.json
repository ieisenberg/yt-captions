[
  {
    "text": "[Music] [Applause] this is JS party your weekly celebration",
    "start": "4500",
    "end": "11240"
  },
  {
    "text": "of JavaScript and the web the software world moves fast keep up the easy way",
    "start": "11240",
    "end": "16720"
  },
  {
    "text": "with changelog news the only software newsletter that's also a podcast sign up",
    "start": "16720",
    "end": "22080"
  },
  {
    "text": "today at [Music]",
    "start": "22080",
    "end": "28250"
  },
  {
    "text": "possible fly makes it easy learn how at fly.io okay it's party time",
    "start": "30160",
    "end": "36550"
  },
  {
    "text": "[Music]",
    "start": "36550",
    "end": "42719"
  },
  {
    "text": "y'all what's up friends and party people I'm talking to you today about our friends over at clerk the complete Suite",
    "start": "42719",
    "end": "50079"
  },
  {
    "text": "of embed eyes the fullon most comprehensive user management platform",
    "start": "50079",
    "end": "56039"
  },
  {
    "text": "if you're using react or next DS clerk is perfect for you edible uis flexible",
    "start": "56039",
    "end": "61960"
  },
  {
    "text": "apis and admin dashboards to authenticate and manage your users and",
    "start": "61960",
    "end": "67439"
  },
  {
    "text": "I'm here with clerk CEO Colin sedot Colin give me the backstory why does clerk exist when we started clerk we",
    "start": "67439",
    "end": "73520"
  },
  {
    "text": "were definitely frustrated that a lot of the authentication Solutions both services or open source kind of didn't",
    "start": "73520",
    "end": "80680"
  },
  {
    "text": "have a good UI built in and we would look at Google's sign-in experience and",
    "start": "80680",
    "end": "86320"
  },
  {
    "text": "Google's user profile and it just had this like degree of polish and professionalism to it it just",
    "start": "86320",
    "end": "92840"
  },
  {
    "text": "didn't come out of the box with everything else usually you start with just email password as the signin",
    "start": "92840",
    "end": "99920"
  },
  {
    "text": "options and then you kind of have to add in extra modules to get o on and you",
    "start": "99920",
    "end": "105159"
  },
  {
    "text": "know in the user profile having a a profile picture and setting up tofa",
    "start": "105159",
    "end": "111640"
  },
  {
    "text": "right it's like like all this extra work that you have to do and with clerk I think we really were inspired by stripe",
    "start": "111640",
    "end": "117200"
  },
  {
    "text": "checkout where here's a checkout and it's great right like and we had this",
    "start": "117200",
    "end": "122680"
  },
  {
    "text": "question of like why like why didn't that exist for off really and so for cler you drop in our components and it's",
    "start": "122680",
    "end": "129479"
  },
  {
    "text": "really just a complete like end to-end experience right out of the box with that high degree of Polish High degree",
    "start": "129479",
    "end": "135480"
  },
  {
    "text": "of professionalism that I think users have really come to expect these days okay so easy to drop in components",
    "start": "135480",
    "end": "142040"
  },
  {
    "text": "really beautiful UI by the way I love it very nice clerk must be the most welcomed easy button when it comes to",
    "start": "142040",
    "end": "148599"
  },
  {
    "text": "authentication good and all that right one of the most striking things you still to this day I",
    "start": "148599",
    "end": "154720"
  },
  {
    "text": "think clerk might be the only off solution that comes with a user profile screen and it's so insane to think about",
    "start": "154720",
    "end": "161440"
  },
  {
    "text": "because you need the user profile screen because that's where the user goes and they selfs serve to set up TFA and it",
    "start": "161440",
    "end": "166959"
  },
  {
    "text": "ties back into the signin and so it's like we had to do that to be able to offer that experience but it's so",
    "start": "166959",
    "end": "173280"
  },
  {
    "text": "bizarre to off depends so much on user profile yet most off Solutions don't include it and it's just this weird",
    "start": "173280",
    "end": "180040"
  },
  {
    "text": "bizarre thing that never made sense to us and so approaching it from first principles we have it out of the box",
    "start": "180040",
    "end": "186680"
  },
  {
    "text": "very cool so Pixel Perfect UI embedded in minutes react orgs this is the easy",
    "start": "186680",
    "end": "192879"
  },
  {
    "text": "button for you clerk is perfect for you it is a fullon comprehensive user",
    "start": "192879",
    "end": "198120"
  },
  {
    "text": "management platform with as I said beautiful UI best of all they have pricing that scales with you they have a",
    "start": "198120",
    "end": "205319"
  },
  {
    "text": "phenomenal free tier 10,000 monthly active user for free plus when you scale",
    "start": "205319",
    "end": "211560"
  },
  {
    "text": "to a paid plan they have first day free this means you won't be charged for users who sign up and never return so",
    "start": "211560",
    "end": "218640"
  },
  {
    "text": "that's phenomenal every feature you need now and as you scale get started at",
    "start": "218640",
    "end": "223879"
  },
  {
    "text": "clerk.com clerk.com once again clerk.com",
    "start": "223879",
    "end": "230220"
  },
  {
    "text": "[Music]",
    "start": "230220",
    "end": "233280"
  },
  {
    "text": "[Music]",
    "start": "239100",
    "end": "247860"
  },
  {
    "text": "[Applause] [Music] [Applause]",
    "start": "247860",
    "end": "252909"
  },
  {
    "text": "hello everyone welcome back uh you're listening to JavaScript party sorry I",
    "start": "255760",
    "end": "261239"
  },
  {
    "text": "meant JS party and we're here with a very exciting guest today um and with me",
    "start": "261239",
    "end": "267400"
  },
  {
    "text": "to welcome in our guest in this awesome topic is Nick hello Nick Hoy Hoy hi Mel how",
    "start": "267400",
    "end": "273919"
  },
  {
    "text": "are you today I am super super excited for this JavaScript party I know me too",
    "start": "273919",
    "end": "280639"
  },
  {
    "text": "it's it's going to be a special kind of party I think today because we have none other than I think the thought leader",
    "start": "280639",
    "end": "287320"
  },
  {
    "text": "influencer himself Ryan carniato hello welcome Ryan hi thanks for having me",
    "start": "287320",
    "end": "293320"
  },
  {
    "text": "today yeah we're excited and uh you're kind of a thought leader and influencer because you're the creator of solid and",
    "start": "293320",
    "end": "299199"
  },
  {
    "text": "we've seen aeration of kind of some of the apis and kind of functionalities and",
    "start": "299199",
    "end": "304280"
  },
  {
    "text": "like things that are in solid kind of really proliferating throughout the ecosystem um which is fantastic and so",
    "start": "304280",
    "end": "310840"
  },
  {
    "text": "we've invited you here today to kind of talk a little bit about solid but more so what I'd like to broadly dig into are",
    "start": "310840",
    "end": "317680"
  },
  {
    "text": "some of the principles within solid specifically kind of making a case for reactivity um I'd really love to dig",
    "start": "317680",
    "end": "324280"
  },
  {
    "text": "into that because we're seeing that kind of everywhere and we're seeing signals kind of pop up everywhere too",
    "start": "324280",
    "end": "330160"
  },
  {
    "text": "and so I'd love to talk about real world use cases pros and cons it's not just about perf right so what are some of the",
    "start": "330160",
    "end": "336120"
  },
  {
    "text": "other benefits so lots to discuss today but before we get into all of those topics why don't you introduce yourself",
    "start": "336120",
    "end": "342120"
  },
  {
    "text": "you've been on the show before we had you here in 2022 um so welcome back but for those who may not be familiar with",
    "start": "342120",
    "end": "347919"
  },
  {
    "text": "you tell us a little bit about yourself yeah um let's see here you already mentioned I created Sol ajs um but yeah",
    "start": "347919",
    "end": "355240"
  },
  {
    "text": "I've been working in web development for quite some time um since I I was a teenager making uh websites for my band",
    "start": "355240",
    "end": "362759"
  },
  {
    "text": "and I was kind of like a product engineer working at startups and then at some point in my spare time I decided to",
    "start": "362759",
    "end": "369080"
  },
  {
    "text": "make a JavaScript framework because Trends in JavaScript Frameworks kind of moved away from what I liked I as you",
    "start": "369080",
    "end": "374919"
  },
  {
    "text": "mentioned before reactivity has always been for me uh something that well not always I actually only really found out",
    "start": "374919",
    "end": "381840"
  },
  {
    "text": "about it in 2010 but once I've got that bug so to speak I just kept on pushing",
    "start": "381840",
    "end": "387759"
  },
  {
    "text": "with it and then around you know 2014 15 everything kind of changed and",
    "start": "387759",
    "end": "393479"
  },
  {
    "text": "people were not into reactive libraries anymore as much things like react had up proliferated sorry proliferated oh man",
    "start": "393479",
    "end": "401440"
  },
  {
    "text": "sorry things like reacted proliferated pler perferated I can barely say it it's a big word things",
    "start": "401440",
    "end": "408199"
  },
  {
    "text": "like react had proliferated and from there you know I I wanted to continue",
    "start": "408199",
    "end": "414479"
  },
  {
    "text": "doing what I like to do so I decided to try and modernize the approach to react",
    "start": "414479",
    "end": "419599"
  },
  {
    "text": "AC it and I wrote solid JS since then I realized because of how much you know",
    "start": "419599",
    "end": "425000"
  },
  {
    "text": "ecosystem had changed no one knew about these things very much anymore after you know only a few years so I spent a lot",
    "start": "425000",
    "end": "431639"
  },
  {
    "text": "of time educating and writing articles and uh over time streaming and teaching",
    "start": "431639",
    "end": "437120"
  },
  {
    "text": "became a big part of what I do so yeah I mean that's me um I'm the signals guy yeah you're the signals CEO more",
    "start": "437120",
    "end": "443879"
  },
  {
    "text": "specifically that's what we've heard that's the that's that's the name on the street anyway Ryan I'm curious based on",
    "start": "443879",
    "end": "449400"
  },
  {
    "text": "that that story you know react coming out seemed not to put words in your mouth but seemed kind of like a bummer",
    "start": "449400",
    "end": "455400"
  },
  {
    "text": "what were you using before that I was using a Knockout JS um which was chaotic",
    "start": "455400",
    "end": "462000"
  },
  {
    "text": "definitely but it had a lot of good things and when we got to that point you",
    "start": "462000",
    "end": "467560"
  },
  {
    "text": "know when performance benchmarks and people are talking about different paradigms came out I feel like there had",
    "start": "467560",
    "end": "473199"
  },
  {
    "text": "been a real shift and uh the popular Solutions didn't really work like",
    "start": "473199",
    "end": "478599"
  },
  {
    "text": "knockout and and certain things are getting discounted maybe prematurely you know it it's one of those tricky things",
    "start": "478599",
    "end": "484240"
  },
  {
    "text": "cuz the most popular Frameworks I guess around the time react came out would have been angular and then some like",
    "start": "484240",
    "end": "490879"
  },
  {
    "text": "maybe legy backbone type stuff and in the backbone Camp yeah and and there's things like Ember to which had",
    "start": "490879",
    "end": "496919"
  },
  {
    "text": "reactivity but like the types of things or assumptions that were made about",
    "start": "496919",
    "end": "502120"
  },
  {
    "text": "these systems some of them were very valid but some of them also didn't quite sit right with me you know I kept on",
    "start": "502120",
    "end": "508240"
  },
  {
    "text": "seeing these performance benchmarks and not only were the situations kind of",
    "start": "508240",
    "end": "513518"
  },
  {
    "text": "unrealistic to me where people were like just going like my framework's fast because I can dump my whole database",
    "start": "513519",
    "end": "519000"
  },
  {
    "text": "onto the page you know a million times a second like no one really wants to do",
    "start": "519000",
    "end": "524159"
  },
  {
    "text": "that you want to send less over the server wire right you want to do less updates if possible you don't want to",
    "start": "524159",
    "end": "529839"
  },
  {
    "text": "just like brute force it but that was kind of like the mentality you know what react is really good at taking something",
    "start": "529839",
    "end": "535720"
  },
  {
    "text": "that's really really inefficient and making it slightly more more efficient like basically react is really good at",
    "start": "535720",
    "end": "542839"
  },
  {
    "text": "putting like a a floor on how bad your performance can be but actually making things fast well that's another question",
    "start": "542839",
    "end": "550399"
  },
  {
    "text": "yeah and and let's dig into that because solid is so again like I really want to focus broadly on some of the principles",
    "start": "550399",
    "end": "556399"
  },
  {
    "text": "so I'd love to kind of like briefly set the Baseline for folks around solid uh and you know what is it how is it",
    "start": "556399",
    "end": "562760"
  },
  {
    "text": "different than tools like react right and I think for me what the one of the coolest things about solid is how fast",
    "start": "562760",
    "end": "568839"
  },
  {
    "text": "it is like it's like just like the only thing faster than solid right now in the quote unquote Market is they just using",
    "start": "568839",
    "end": "575600"
  },
  {
    "text": "vanilla JS right so extremely low overhead and it's vanilla JS doesn't have too much on solid either it's like",
    "start": "575600",
    "end": "582279"
  },
  {
    "text": "just a just a teeny bit just a teeny bit uh faster um but obviously like the",
    "start": "582279",
    "end": "587959"
  },
  {
    "text": "benefits of using a framework or a library like solid um actually framework or Library Ryan yeah I mean I I'm I'm",
    "start": "587959",
    "end": "595440"
  },
  {
    "text": "pretty fine with either I we're on the library side I guess philosophic kind of like react where Our intention wasn't to",
    "start": "595440",
    "end": "602160"
  },
  {
    "text": "provide everything for you it was to provide you know basic pieces that things could be built on top of so",
    "start": "602160",
    "end": "608920"
  },
  {
    "text": "either either either okay yeah we we need a merged word so please somebody internet make that happen like I yeah I",
    "start": "608920",
    "end": "614680"
  },
  {
    "text": "can't keep saying framework or Library it's quite a mouthful but anyways so so tools like solid are just you know you",
    "start": "614680",
    "end": "621320"
  },
  {
    "text": "you get a ton of other utilities right so so anyway so without further Ado please uh what is solid Ryan and how is",
    "start": "621320",
    "end": "628040"
  },
  {
    "text": "it how is it different than react I built solid under a kind of an",
    "start": "628040",
    "end": "633360"
  },
  {
    "text": "experimental idea I was like what if signals or the reactivity was the whole",
    "start": "633360",
    "end": "638399"
  },
  {
    "text": "framework what if it was every part of it like what if instead of you know",
    "start": "638399",
    "end": "643600"
  },
  {
    "text": "having like you know a separate renderer or like a separate diffing thing or we just took signals and see what we could",
    "start": "643600",
    "end": "650160"
  },
  {
    "text": "do with it because conceptually I start from very Villa JS kind of mentality I was like okay if I was to write this all",
    "start": "650160",
    "end": "657639"
  },
  {
    "text": "with vanilla JS how would it work well it would work very quickly but it would be a little bit verose and you know",
    "start": "657639",
    "end": "664000"
  },
  {
    "text": "there'd be a lot of duplication like repetition you want to kind of generalize stuff and I decided that what",
    "start": "664000",
    "end": "669279"
  },
  {
    "text": "I would do basically would just almost like jQuery just write some reactivity that would update the Dom where I needed",
    "start": "669279",
    "end": "675560"
  },
  {
    "text": "it to so I could just like be like when I update this value have this place in the Dom update seems simple enough but I",
    "start": "675560",
    "end": "681920"
  },
  {
    "text": "wanted to see if I could take that that kind of scale down or you know",
    "start": "681920",
    "end": "687000"
  },
  {
    "text": "simplicity so to speak and then also so like scill it up to be able to handle you know application needs of you know",
    "start": "687000",
    "end": "693800"
  },
  {
    "text": "modern web applications and this was primarily client side focused I cared about dashboards and you know things",
    "start": "693800",
    "end": "700800"
  },
  {
    "text": "with a lot of interactivity and as it turned out it was quite doable you know taking a",
    "start": "700800",
    "end": "706160"
  },
  {
    "text": "little influence from knockout taking um what we've learned in time about how to make more consistent uh reactivity from",
    "start": "706160",
    "end": "713200"
  },
  {
    "text": "things like mob X like I realized that we could just basically use um a",
    "start": "713200",
    "end": "719600"
  },
  {
    "text": "compiler for syntax and I didn't want to invent one of those a lot of people spend a lot of time on that and you know this whole story is about the language",
    "start": "719600",
    "end": "726480"
  },
  {
    "text": "and you know spelt is a perfect example of this where like a lot of care and concern has gone into the the Aesthetics",
    "start": "726480",
    "end": "733240"
  },
  {
    "text": "of how it is to build and what it feels like I just grabbed jsx basically the",
    "start": "733240",
    "end": "738399"
  },
  {
    "text": "first thing on the Shelf all the tooling works for you know typescript you know linting uh color you know prettier you",
    "start": "738399",
    "end": "744680"
  },
  {
    "text": "know all all the stuff and I was like can I just compile jsx to Dom elements in a way that I could put the reactivity",
    "start": "744680",
    "end": "750920"
  },
  {
    "text": "in and that's basically what it did I basically took kind of stock to ASX and",
    "start": "750920",
    "end": "757279"
  },
  {
    "text": "had it output what I would have ridden by hand if I was just you know kind of Jake wearing it and yeah I mean the",
    "start": "757279",
    "end": "765199"
  },
  {
    "text": "results were as you can imagine very quick because like writing vanilla code you know it's quick you know there's",
    "start": "765199",
    "end": "771240"
  },
  {
    "text": "there's not much else to it but the question is could it scale up to be able to handle all the scenarios that were",
    "start": "771240",
    "end": "777800"
  },
  {
    "text": "needed and that was something that had to be proven and I believe over time we",
    "start": "777800",
    "end": "783199"
  },
  {
    "text": "have I started working on solid back in 2016 and I open sourced in in 2018 and",
    "start": "783199",
    "end": "788839"
  },
  {
    "text": "by that time you know had the Dom in a pretty good place and we started winning at benchmarks so to speak but you know",
    "start": "788839",
    "end": "796360"
  },
  {
    "text": "they were a good starting point but it wasn't the ending for us because for me the reason I even started this was",
    "start": "796360",
    "end": "801880"
  },
  {
    "text": "because I liked the way I developed the knockout I liked data flows I liked you know the kind of spreadsheet mentality I",
    "start": "801880",
    "end": "807920"
  },
  {
    "text": "liked the idea that you know you know you kind of set and forget it you you create these rules you update your data and everything just propagates so that",
    "start": "807920",
    "end": "815480"
  },
  {
    "text": "that's kind of like the core of solid it was trying to be simple right it wasn't about like adoption it wasn't about who",
    "start": "815480",
    "end": "823440"
  },
  {
    "text": "could you know get in here there there's a bit of a learning curve because you have to learn about signals to begin with right but at the same time it gave",
    "start": "823440",
    "end": "831680"
  },
  {
    "text": "me complete control this is something that I liked I could always go right down to the metal and update the the Dom",
    "start": "831680",
    "end": "837399"
  },
  {
    "text": "directly because ins solid uh div jsx element is just an HTML div element it's",
    "start": "837399",
    "end": "843000"
  },
  {
    "text": "just a real Dom node you always have access and because it was constructed in this sort of way our components run once",
    "start": "843000",
    "end": "851000"
  },
  {
    "text": "because they're just function calls that just create some stuff that will update in the future so there's this very",
    "start": "851000",
    "end": "857920"
  },
  {
    "text": "simple thing in early days like we didn't really cons the components were really nothing now we do a little bit of",
    "start": "857920",
    "end": "864160"
  },
  {
    "text": "extra hint massaging of the reactivity um through our props but generally",
    "start": "864160",
    "end": "869399"
  },
  {
    "text": "speaking a bunch of these elements just kind of came together in a way that even I didn't understand at first but ended",
    "start": "869399",
    "end": "876240"
  },
  {
    "text": "up being able to not only emulate most things you would expect everything from Context concurrent rendering transitions",
    "start": "876240",
    "end": "883839"
  },
  {
    "text": "you know all the features you expect in the modern framework but even stuff beyond the web there's a lot of you know",
    "start": "883839",
    "end": "889199"
  },
  {
    "text": "you don't need a virtual Dom to do um Universal rendering we have mobile we",
    "start": "889199",
    "end": "894399"
  },
  {
    "text": "have desktop we have televisions we you know like there's tons of libraries Frameworks",
    "start": "894399",
    "end": "899720"
  },
  {
    "text": "I I say tons but there's at least three in each of these categories where you can choose to and use with solid purely",
    "start": "899720",
    "end": "906000"
  },
  {
    "text": "reactive and be able to you know render to a phone natively or render webgl you",
    "start": "906000",
    "end": "913759"
  },
  {
    "text": "know 3D scenes so like this ended up being a different model to basically",
    "start": "913759",
    "end": "921759"
  },
  {
    "text": "accomplish pretty much everything you could do um in Virtual Dom or like a react like library and it was just built",
    "start": "921759",
    "end": "930560"
  },
  {
    "text": "off this one building block basically that's cool and that building block is the like the fact that you don't do",
    "start": "930560",
    "end": "937079"
  },
  {
    "text": "dirty checking quote unquote like the the signals yeah the signals okay you're right this like scapular updates right",
    "start": "937079",
    "end": "943600"
  },
  {
    "text": "it's like you're not like looping through all the noes to see what's different you know like your create and update paths are separated out right",
    "start": "943600",
    "end": "951920"
  },
  {
    "text": "when you know how data flows through your app there's a lot of things you can gain from that and it's not to say that you don't need the diff you can always",
    "start": "951920",
    "end": "957880"
  },
  {
    "text": "mix and match these things right you can the most powerful control aspect here isn't just the way that you can kind of",
    "start": "957880",
    "end": "964399"
  },
  {
    "text": "roll down or scale up or whatever it's the fact that like the the granularity",
    "start": "964399",
    "end": "969759"
  },
  {
    "text": "of change is really up to you you control the containers right it's kind of like you could change the size of",
    "start": "969759",
    "end": "975000"
  },
  {
    "text": "your components in react well you can basically change even more granular if you want or wider the the size of what",
    "start": "975000",
    "end": "982399"
  },
  {
    "text": "updates with signals it's you get the ability to control that it's like a different dimension and while that that",
    "start": "982399",
    "end": "989160"
  },
  {
    "text": "seems maybe like a lot or complicated the most amazing thing you see and I",
    "start": "989160",
    "end": "994440"
  },
  {
    "text": "sometimes demo this is just how you start from a place of this where you're just kind of doing the jQuery thing and",
    "start": "994440",
    "end": "1000199"
  },
  {
    "text": "it it literally just morphs into something like react in fact most people that you talk to solid when they first see it they're like they might even",
    "start": "1000199",
    "end": "1006880"
  },
  {
    "text": "dismiss it because they're like oh so it's just react it like literally looks like react to such a degree that some",
    "start": "1006880",
    "end": "1013240"
  },
  {
    "text": "people even say oh yeah that's one of the reasons they choose solid because you can just move from solid to react and I'm like it's it's not necessarily",
    "start": "1013240",
    "end": "1020120"
  },
  {
    "text": "that simple there's actually a lot of different things going on here but the fact that you get that impression shows",
    "start": "1020120",
    "end": "1025798"
  },
  {
    "text": "how successful it is at um its abstraction and its ability to as I said",
    "start": "1025799",
    "end": "1031280"
  },
  {
    "text": "roll down and scale up that I think that that's like a big appeal of it is that it does look so much like that because",
    "start": "1031280",
    "end": "1037880"
  },
  {
    "text": "like honestly I don't care too much about like react specifically but I like",
    "start": "1037880",
    "end": "1043079"
  },
  {
    "text": "jsx I like setting up my components and thinking in terms of components like that and then and like the idea that",
    "start": "1043079",
    "end": "1051000"
  },
  {
    "text": "this function is going to run once I can't tell you how amazing that sounds right now just based on like debugging",
    "start": "1051000",
    "end": "1058679"
  },
  {
    "text": "that I've had to do recently I'm just like this is so bad yeah I mean that's one of the the trickiest pain points",
    "start": "1058679",
    "end": "1065000"
  },
  {
    "text": "that we hear and again this wasn't me trying to like make the anti- react I have a lot of respect for what react has",
    "start": "1065000",
    "end": "1070840"
  },
  {
    "text": "done it was just like it Sol it came at a time when people were getting to large scale react apps and really experienced",
    "start": "1070840",
    "end": "1077240"
  },
  {
    "text": "that pain of rendering and trying to figure figure out when to memo what and it was like just not a problem I",
    "start": "1077240",
    "end": "1083480"
  },
  {
    "text": "remember they they made a video that they're showing like how the the automated compiler would work um which",
    "start": "1083480",
    "end": "1090320"
  },
  {
    "text": "we'll probably talk about a bit later and I I looked at the example and they went through this whole talk explaining",
    "start": "1090320",
    "end": "1095600"
  },
  {
    "text": "like what you would do in react and what it would construct to and I think it was really brilliant to kind of show like the compile code and then get back to",
    "start": "1095600",
    "end": "1101200"
  },
  {
    "text": "the nice code and you be go like oh yeah you know this is great but then the cool part about that demo for me is I built",
    "start": "1101200",
    "end": "1107000"
  },
  {
    "text": "the same demo in solid the original version they started at the in the first like 2 minutes of the talk and it just worked the way it was supposed to like",
    "start": "1107000",
    "end": "1113559"
  },
  {
    "text": "the whole talk the whole compiler the whole thing just didn't happen there's no create memo or memo or everything it",
    "start": "1113559",
    "end": "1119280"
  },
  {
    "text": "just that was the way it worked and that's pretty powerful when you consider that in like we do Leverage The compiler",
    "start": "1119280",
    "end": "1126360"
  },
  {
    "text": "to use the jsx but it's a templating thing most of solid is actually a runtime Library that's why I don't actually consider solid that similar to",
    "start": "1126360",
    "end": "1134159"
  },
  {
    "text": "spelt are we use the compiler almost begrudgingly like to the point where we're like",
    "start": "1134159",
    "end": "1139640"
  },
  {
    "text": "if we need to compile it you know because you know it'll help the DX or the experience a bit we will but I don't",
    "start": "1139640",
    "end": "1145799"
  },
  {
    "text": "want to necessarily sell that I like keeping things transparent I like keeping things simple right in a sense",
    "start": "1145799",
    "end": "1151280"
  },
  {
    "text": "compiler is like another level of abstraction it makes things easier but magic it's yeah what happens under the",
    "start": "1151280",
    "end": "1156679"
  },
  {
    "text": "hood gets more involved and I find that the farther you get from the the bare",
    "start": "1156679",
    "end": "1162320"
  },
  {
    "text": "metal to the abstraction the more more jarring it is when you have to peek under the covers that's my personal",
    "start": "1162320",
    "end": "1168039"
  },
  {
    "text": "Theory actually why why people don't like use effect it's not because of all the other stuff it's like that's the",
    "start": "1168039",
    "end": "1173240"
  },
  {
    "text": "moment when you realize react doesn't work the way you think it [Music]",
    "start": "1173240",
    "end": "1191278"
  },
  {
    "text": "works what's up friends I want to share an awesome new announcement from our",
    "start": "1191559",
    "end": "1196600"
  },
  {
    "text": "friends over at Crab Nebula Crab Nebula is the official partner of t for the",
    "start": "1196600",
    "end": "1203159"
  },
  {
    "text": "uninitiated to is a toolkit that helps developers make applications for the",
    "start": "1203159",
    "end": "1208559"
  },
  {
    "text": "major desktop platforms using virtually any front-end framework in existence the",
    "start": "1208559",
    "end": "1213720"
  },
  {
    "text": "core is built rust and the CLI leverages no GS making to a genuinely polyglot",
    "start": "1213720",
    "end": "1219520"
  },
  {
    "text": "approach to creating and maintaining great apps so building applications with t has always been an incredibly joyful",
    "start": "1219520",
    "end": "1226799"
  },
  {
    "text": "experience however once the applications are built Distributing them and rolling out updates has always been cumbersome",
    "start": "1226799",
    "end": "1233360"
  },
  {
    "text": "this is why we are thrilled to be part of this announcement from our friends at Crab Nebula on their latest product Crab",
    "start": "1233360",
    "end": "1239400"
  },
  {
    "text": "Nebula Cloud the problem really is the cost of Distributing applications the security and the feedback and analytics",
    "start": "1239400",
    "end": "1246360"
  },
  {
    "text": "just think about cost alone to distribute new applications at scale it",
    "start": "1246360",
    "end": "1251400"
  },
  {
    "text": "can get very expensive when bundle sizes compound with a number of users which further compounds with frequency of",
    "start": "1251400",
    "end": "1257360"
  },
  {
    "text": "application updates always be shipping right a 500 Meg application distributed across 500 users with nightly updates",
    "start": "1257360",
    "end": "1265200"
  },
  {
    "text": "leads to a total of around 7.5 million megabytes that's 7.5 terabytes",
    "start": "1265200",
    "end": "1272080"
  },
  {
    "text": "transferred in a single month now based on popular Cloud pricing this could easily lead to a bill in the ballpark of",
    "start": "1272080",
    "end": "1278440"
  },
  {
    "text": "around $90,000 that's a lot of dollars more so Distributing updates requires complex",
    "start": "1278440",
    "end": "1284480"
  },
  {
    "text": "cryptography to ensure that an update is the original safe artifact for you to download install and execute and then",
    "start": "1284480",
    "end": "1290720"
  },
  {
    "text": "collecting meaningful analytics is more challenging with desktop applications compared to web-based Services impacting",
    "start": "1290720",
    "end": "1296760"
  },
  {
    "text": "the ability to make informed updates and improvements so at the heart of crab nibula cloud is a purpose-built CDN",
    "start": "1296760",
    "end": "1304559"
  },
  {
    "text": "ready for global scale ensuring seamless integration with any cicd Pipeline and first class support for GitHub actions",
    "start": "1304559",
    "end": "1311600"
  },
  {
    "text": "and security updates are a first class citizen leveraging the power of to",
    "start": "1311600",
    "end": "1316640"
  },
  {
    "text": "updator Crab Nebula Cloud provides an outof the-box update server that any application can call to check for signed",
    "start": "1316640",
    "end": "1323600"
  },
  {
    "text": "updates and if the update is available immediately download and apply it in an instant over the air and of course T is",
    "start": "1323600",
    "end": "1330720"
  },
  {
    "text": "open source and Crab Nebula is a company born out of Open Source and they're giving back to the open source Community",
    "start": "1330720",
    "end": "1337159"
  },
  {
    "text": "by giving steep discounts and subsidies to open source projects built with to to learn more get started and check out the",
    "start": "1337159",
    "end": "1343520"
  },
  {
    "text": "docs go to crab crab c a nebula",
    "start": "1343520",
    "end": "1352360"
  },
  {
    "text": "nebula dodev Cloud once again crab",
    "start": "1352360",
    "end": "1358600"
  },
  {
    "text": "[Music]",
    "start": "1361050",
    "end": "1378519"
  },
  {
    "text": "I don't want to say fell off the react bandwagon but this is when react started to feel really unintuitive for me like",
    "start": "1378840",
    "end": "1385240"
  },
  {
    "text": "you know the hooks just it never really worked in the way that I expected it to work and then there was all these rules",
    "start": "1385240",
    "end": "1391159"
  },
  {
    "text": "that you had to remember and so like looking at you know solid components it's like it just feels like react the",
    "start": "1391159",
    "end": "1397200"
  },
  {
    "text": "way I expect it to work you know like the the way I wished it worked actually um so it's that's also like lovely but",
    "start": "1397200",
    "end": "1404559"
  },
  {
    "text": "can we talk about the compiler a little bit because that's kind of a little bit of the secret sauce here so what you're saying this is more of a runtime library",
    "start": "1404559",
    "end": "1410880"
  },
  {
    "text": "and you use the compiler begrudgingly and so what is the compiler doing because I would expect the compiler to",
    "start": "1410880",
    "end": "1416120"
  },
  {
    "text": "be figuring out where all the signals are and like I don't know I'd be expected to like have some kind of a map",
    "start": "1416120",
    "end": "1422960"
  },
  {
    "text": "you know up front and then that's how you're able to do this like scapular updating but I I don't know you tell me",
    "start": "1422960",
    "end": "1428600"
  },
  {
    "text": "what is it doing okay yeah it's it's actually a lot simpler than that because",
    "start": "1428600",
    "end": "1434760"
  },
  {
    "text": "all our uh dependencies are Dynamic the compiler doesn't handle the reactivity at all so what it does is jsx has one",
    "start": "1434760",
    "end": "1444440"
  },
  {
    "text": "thing in it that makes the the standard transform not very helpful for us and that is it evaluates all the holes all",
    "start": "1444440",
    "end": "1451520"
  },
  {
    "text": "the Expressions eagerly and then passes them in and in a reactive Library you want to we use autot tracking so you",
    "start": "1451520",
    "end": "1458960"
  },
  {
    "text": "want to be able to access the values under some kind of reactive scope so at",
    "start": "1458960",
    "end": "1464880"
  },
  {
    "text": "a base the compiler had to go in and put a bunch of functions wrappers around each expression and we can be a little",
    "start": "1464880",
    "end": "1472000"
  },
  {
    "text": "smarter because we can tell like if you don't call a function or access um like a property on something in an expression",
    "start": "1472000",
    "end": "1479399"
  },
  {
    "text": "that it can't be reactive because and this is one of the biggest changes like a signal has to be called as a function whether it's like using a getter or",
    "start": "1479399",
    "end": "1485679"
  },
  {
    "text": "something it has to be called as a function so we can always just pass it straight through normal values but if we",
    "start": "1485679",
    "end": "1492600"
  },
  {
    "text": "see that it calls a function somewhere then we have to make sure to wrap that expression in a function that's mostly",
    "start": "1492600",
    "end": "1498960"
  },
  {
    "text": "what the compiler does so there just a bunch of function calls that happen basically when when there's a signal update or whatever so like you have this",
    "start": "1498960",
    "end": "1505440"
  },
  {
    "text": "chain of functions that's kind of that's really smart that's like that's like crazy smart it's like so simple but it's",
    "start": "1505440",
    "end": "1512520"
  },
  {
    "text": "like kind of crazy smart too like you know the other half is we do the same",
    "start": "1512520",
    "end": "1518960"
  },
  {
    "text": "thing that Lit does we look at the jsx as a template and then pull out the HTML",
    "start": "1518960",
    "end": "1524480"
  },
  {
    "text": "string so we can clone it so that we can create all the elements oh right right right and that's that happens with the",
    "start": "1524480",
    "end": "1530159"
  },
  {
    "text": "compiler right that's that's okay yeah but it could happen at runtime like lit does it at runtime the first time it",
    "start": "1530159",
    "end": "1535760"
  },
  {
    "text": "runs it it grabs it that difference is minimal but essentially yeah we use the",
    "start": "1535760",
    "end": "1541200"
  },
  {
    "text": "compiler so that we can do that so basically when you create uh real Dom nodes it's a matter of cloning the nodes",
    "start": "1541200",
    "end": "1549080"
  },
  {
    "text": "and then walking to the locations and basically taking those functions and",
    "start": "1549080",
    "end": "1555240"
  },
  {
    "text": "wrapping over the the element reference and a little bit technical but essentially you basically clone the",
    "start": "1555240",
    "end": "1560279"
  },
  {
    "text": "nodes collect the nodes and then basically pass them into effects that would update the Dom so there's a little",
    "start": "1560279",
    "end": "1567360"
  },
  {
    "text": "bit more to the compiler but like the nonnative element part like the the the",
    "start": "1567360",
    "end": "1572559"
  },
  {
    "text": "components well they're just basically function calls right just like normal jsx so you can you know move them around",
    "start": "1572559",
    "end": "1578720"
  },
  {
    "text": "or whatnot and we just have to make sure that we wrap the props and in functions",
    "start": "1578720",
    "end": "1584240"
  },
  {
    "text": "I me and it's worth calling out thanks for that excellent explanation by the way um it's worth calling out that Lit",
    "start": "1584240",
    "end": "1590080"
  },
  {
    "text": "doesn't use a compiler and like that's like a big that's like a very intentional trade-off that they've made",
    "start": "1590080",
    "end": "1596679"
  },
  {
    "text": "you know like they and that's kind of magical like it's so great to have this beautiful JavaScript you know this jsx",
    "start": "1596679",
    "end": "1603399"
  },
  {
    "text": "like thing that's not quite jsx it's using string templates and whatever else but and and just there's there's no",
    "start": "1603399",
    "end": "1608880"
  },
  {
    "text": "compiler involved with this like it's it's pretty it's pretty awesome so right and and that that's actually one of the",
    "start": "1608880",
    "end": "1614919"
  },
  {
    "text": "the things here like part of the design in terms of the the function things the",
    "start": "1614919",
    "end": "1620320"
  },
  {
    "text": "we actually support tag template literals we have a version that works like lit like so we don't we don't actually need the compiler but now",
    "start": "1620320",
    "end": "1627159"
  },
  {
    "text": "you're the one wrapping all the expressions and the functions I see I see that makes sense and personally I",
    "start": "1627159",
    "end": "1632559"
  },
  {
    "text": "find that very onerous which is I mean there are ways around it or you can like",
    "start": "1632559",
    "end": "1638480"
  },
  {
    "text": "design your apis in a way that kind of cater to it like using like class properties and stuff like and I know",
    "start": "1638480",
    "end": "1644440"
  },
  {
    "text": "lit's been putting uh like signal reactivity into their um stuff I think",
    "start": "1644440",
    "end": "1649679"
  },
  {
    "text": "it uses preact signals uh as of late but like this was one of the big ergonomic",
    "start": "1649679",
    "end": "1655360"
  },
  {
    "text": "gains that we got from using the compiler was that like it's why it looks like react because you can basically",
    "start": "1655360",
    "end": "1662080"
  },
  {
    "text": "just stick the expressions in in the template and they will track and you",
    "start": "1662080",
    "end": "1667279"
  },
  {
    "text": "know work properly and you can't do that without some kind of transform that",
    "start": "1667279",
    "end": "1673000"
  },
  {
    "text": "makes sure that you don't run the Expressions up front and so just kind of a couple more things on solid before we",
    "start": "1673000",
    "end": "1678559"
  },
  {
    "text": "move on to like some of the general principles um so looking at your API like it feels reacy as well like not",
    "start": "1678559",
    "end": "1685600"
  },
  {
    "text": "just you know not just in the shape of the components but the API itself the names of your functions like you have",
    "start": "1685600",
    "end": "1691200"
  },
  {
    "text": "create context use context you've got children you've got lazy you've got crate effect crate memo like all these",
    "start": "1691200",
    "end": "1698320"
  },
  {
    "text": "things uh that feel very reacy like so can you talk us a little bit through the some of your intentions there yeah um it",
    "start": "1698320",
    "end": "1705880"
  },
  {
    "text": "just made sense at the time one thing got to remember remember solid was out before react hooks so we didn't have the",
    "start": "1705880",
    "end": "1714320"
  },
  {
    "text": "Ed convention per se and we actually didn't have the topple Convention of returning the arrays with the two",
    "start": "1714320",
    "end": "1720640"
  },
  {
    "text": "arguments I actually grabbed that right from react but yeah I mean react for stuff like context um was you know",
    "start": "1720640",
    "end": "1726519"
  },
  {
    "text": "obviously an influence we had provider and uh you know like some way of using",
    "start": "1726519",
    "end": "1731760"
  },
  {
    "text": "the context but essentially we had our apis doing the fine grain thing looking",
    "start": "1731760",
    "end": "1738200"
  },
  {
    "text": "a lot like Hooks and then react hooks came out and I was like this is like",
    "start": "1738200",
    "end": "1743279"
  },
  {
    "text": "this it looks almost identical at that point I was like let's just like adopt a",
    "start": "1743279",
    "end": "1748880"
  },
  {
    "text": "similar convention the truth of the matter is the the returning the arrays like the tles was something that i' been",
    "start": "1748880",
    "end": "1755320"
  },
  {
    "text": "struggling with for a long time uh reactivity is often you know cited one of the previous things that people",
    "start": "1755320",
    "end": "1760919"
  },
  {
    "text": "always criticize was that like two-way binding and chaotic updates and I",
    "start": "1760919",
    "end": "1766120"
  },
  {
    "text": "believed a lot in reacts philosophy opes in terms of unidirectional flow you know",
    "start": "1766120",
    "end": "1771200"
  },
  {
    "text": "you know single binding like there's no two-way all that kind of stuff you know data down events up and I really wanted",
    "start": "1771200",
    "end": "1777880"
  },
  {
    "text": "the segregation but almost every signals API up to that point because you need to have a getter and a Setter generally",
    "start": "1777880",
    "end": "1785039"
  },
  {
    "text": "were on a single object or they're proxy or G like or literally an object with a",
    "start": "1785039",
    "end": "1790120"
  },
  {
    "text": "G and a set on it and I played with a bunch of apis trying to make it nicely",
    "start": "1790120",
    "end": "1795399"
  },
  {
    "text": "and then I saw Hooks and it separated them into so that people would name them which is great like when you destructure",
    "start": "1795399",
    "end": "1801960"
  },
  {
    "text": "the array and it made sure that the get and the set weren't on the same thing and I was like this is what I've been",
    "start": "1801960",
    "end": "1808519"
  },
  {
    "text": "looking for like I I've been playing around with these Primitives you know these signals that look a lot like hooks",
    "start": "1808519",
    "end": "1813600"
  },
  {
    "text": "for years and years before and it never occurred to me this pattern reactor",
    "start": "1813600",
    "end": "1819000"
  },
  {
    "text": "released hooks I think I spent more time jaw-dropping about the fact that they solved my API problem when I watched",
    "start": "1819000",
    "end": "1825399"
  },
  {
    "text": "Dan's original talk more than actually like the fact that reactor is getting hooked so I was like that's it this is",
    "start": "1825399",
    "end": "1831360"
  },
  {
    "text": "what I've been looking for so like within this is like still pre 1.0 for solid So within like a couple weeks I'd",
    "start": "1831360",
    "end": "1837919"
  },
  {
    "text": "updated all our apis to resemble more like react I chose not to use use because use to me suggested something",
    "start": "1837919",
    "end": "1843720"
  },
  {
    "text": "that was used like that would you know maybe do multiple times I chose create to signify that this only runs once you",
    "start": "1843720",
    "end": "1850720"
  },
  {
    "text": "know like a render function and yeah that that's how it went there it was just kind of funny because solid had",
    "start": "1850720",
    "end": "1856600"
  },
  {
    "text": "something that looked like hooks and jsx before react had hooked so there I",
    "start": "1856600",
    "end": "1861919"
  },
  {
    "text": "wasn't like trying to copy react initially in you know how we did it we",
    "start": "1861919",
    "end": "1867159"
  },
  {
    "text": "had function components like back then we acted class components so like we were very much like I didn't want",
    "start": "1867159",
    "end": "1874360"
  },
  {
    "text": "classes I wanted function components it had all the pieces I needed and then once I saw react I was like it was",
    "start": "1874360",
    "end": "1879440"
  },
  {
    "text": "really easy just to make those Finishing Touch apis to make them kind of look similar which obviously confused people",
    "start": "1879440",
    "end": "1885799"
  },
  {
    "text": "but I made those decisions not because again I wanted the copy react directly on API surface it was just so for late",
    "start": "1885799",
    "end": "1891960"
  },
  {
    "text": "because I knew that they were not compatible it was because I think react made the right decision there I think",
    "start": "1891960",
    "end": "1898080"
  },
  {
    "text": "enforcing the read write segregation I think the easy ability to name it these are all really good design details in",
    "start": "1898080",
    "end": "1903639"
  },
  {
    "text": "terms of the react hooks API and they only made the signals API stronger W so is it safe to say that like hooks was",
    "start": "1903639",
    "end": "1909720"
  },
  {
    "text": "influenced by signals the signals API a little bit I don't know but they they",
    "start": "1909720",
    "end": "1916000"
  },
  {
    "text": "released something where they talked about all their influences for uh react Hooks and there's a document there none",
    "start": "1916000",
    "end": "1923120"
  },
  {
    "text": "of the signal libraries that I'm familiar with showed up on that list I was suspect at the time because I feel",
    "start": "1923120",
    "end": "1928279"
  },
  {
    "text": "like how could you not notice all the similar libraries like solid wasn't the only one back then we've kind of got",
    "start": "1928279",
    "end": "1933880"
  },
  {
    "text": "popular over time but there's been you know knockout but then there's like KJS reactive felt one and two M like there",
    "start": "1933880",
    "end": "1942080"
  },
  {
    "text": "are a ton of Prior Arts here and somehow it just kind of slid by on reacts influence on hooks so I don't know I I",
    "start": "1942080",
    "end": "1949080"
  },
  {
    "text": "we have a long history I mean it could be like a TV commercial like you know sometimes like you don't know you're being subconsciously influenced but",
    "start": "1949080",
    "end": "1955440"
  },
  {
    "text": "you're suddenly craving Subways $5 Foot Longs like you know what I mean it's like you don't know but like you know it",
    "start": "1955440",
    "end": "1962080"
  },
  {
    "text": "could just it could just be a subconscious influence you know brought to you by Carl Jr I also think that you",
    "start": "1962080",
    "end": "1967720"
  },
  {
    "text": "have to I we didn't talk about much earlier but when react first came out",
    "start": "1967720",
    "end": "1972919"
  },
  {
    "text": "and they're talking about the power of their model like in terms of just render everything throw it all away it it was",
    "start": "1972919",
    "end": "1978320"
  },
  {
    "text": "very much in opposition of or opposed to",
    "start": "1978320",
    "end": "1983519"
  },
  {
    "text": "basically doing these kind of what they call kbo key value observable patterns like things you found in Ember or even",
    "start": "1983519",
    "end": "1990120"
  },
  {
    "text": "knockout to a degree where they were using these signal like things you're saying like instead of worrying about the data flow and cause and they had all",
    "start": "1990120",
    "end": "1995880"
  },
  {
    "text": "these pingpong issues you there's a classic story um you know about Facebook Messenger always showing notifications",
    "start": "1995880",
    "end": "2001840"
  },
  {
    "text": "or something they they were like no we just render it all and that was like the ground they were built on which is",
    "start": "2001840",
    "end": "2008200"
  },
  {
    "text": "largely why I don't think they generally never really nod to signals and why when",
    "start": "2008200",
    "end": "2013679"
  },
  {
    "text": "everyone's like when's reactor to get signals I don't expect that anytime soon",
    "start": "2013679",
    "end": "2019240"
  },
  {
    "text": "it's just kind of like almost like their philosophical grounding of like we are not a signals live but but they are but",
    "start": "2019240",
    "end": "2024600"
  },
  {
    "text": "they are getting a compiler and that's some big news right so they dropped U I don't know maybe an RFC or blog post I",
    "start": "2024600",
    "end": "2031760"
  },
  {
    "text": "don't know we're both on this and we'll link it in the show notes and it's something that it's on my agenda like I want to talk to the team about cuz it's",
    "start": "2031760",
    "end": "2038200"
  },
  {
    "text": "a huge shift for react but react is getting a compiler which means some of the clunkiness around Hooks and all this",
    "start": "2038200",
    "end": "2045120"
  },
  {
    "text": "other stuff it hopefully will just go away because they're able to like Leverage uh some better kind of um",
    "start": "2045120",
    "end": "2052398"
  },
  {
    "text": "analysis but like you know so that's that's something right Ryan like that's interesting it is definitely interesting",
    "start": "2052399",
    "end": "2058919"
  },
  {
    "text": "well it's a bigger shift and we will talk about signals in this podcast yes no we're going to get to it next next",
    "start": "2058919",
    "end": "2065358"
  },
  {
    "text": "next next topic no but to be fair um this shift is huge but for maybe reasons",
    "start": "2065359",
    "end": "2072878"
  },
  {
    "text": "in my opinion that people aren't seeing right off the bat because I do think it will make react a lot easier to use I",
    "start": "2072879",
    "end": "2080158"
  },
  {
    "text": "think you you might not have to worry about when to use memo as much and I",
    "start": "2080159",
    "end": "2085878"
  },
  {
    "text": "think the default performance characteristics will get a lot better especially for larger apps I don't think",
    "start": "2085879",
    "end": "2091960"
  },
  {
    "text": "it will have a huge impact on micro benchmarks but those don't actually are the things that like they don't matter",
    "start": "2091960",
    "end": "2097400"
  },
  {
    "text": "really but the average person who goes out and writes a react app I think it'll get a lot um easier to use which is Big Boon",
    "start": "2097400",
    "end": "2105079"
  },
  {
    "text": "this is some of the criticism they can of felt they were a big popular framework and when you had stuff like View and then later spell come and be",
    "start": "2105079",
    "end": "2111680"
  },
  {
    "text": "like look how much easier this could be you know there's a kind of tension there between you know new developers coming",
    "start": "2111680",
    "end": "2117920"
  },
  {
    "text": "in are we making things too hard for them or whatnot but the reason it's a big shift isn't for my opinion isn't",
    "start": "2117920",
    "end": "2124280"
  },
  {
    "text": "just because of you know the fact that like there's a compiler and makes things easier it's that react was the library",
    "start": "2124280",
    "end": "2132440"
  },
  {
    "text": "we hinted at this earlier they were the gist JavaScript thing right where you know we don't use you know we don't have",
    "start": "2132440",
    "end": "2139280"
  },
  {
    "text": "data Primitives I mean they then introduced hooks but but they you know like they were simple over easy right",
    "start": "2139280",
    "end": "2146560"
  },
  {
    "text": "like they gave you all the perimeters up front they weren't Progressive they didn't try and hide stuff for the compiler now they are and I think this",
    "start": "2146560",
    "end": "2155079"
  },
  {
    "text": "is a very fundamental shift in where we react actually sits in the whole scape",
    "start": "2155079",
    "end": "2160319"
  },
  {
    "text": "of the ecosystem because a lot of developers not all developers really",
    "start": "2160319",
    "end": "2165640"
  },
  {
    "text": "cared about react's transparency react actually for all its you know warts from being a hugely used framework massive",
    "start": "2165640",
    "end": "2173319"
  },
  {
    "text": "scale been around for over 10 years for all that a lot of developers like that",
    "start": "2173319",
    "end": "2178480"
  },
  {
    "text": "control understanding exactly how it worked having that ability to be like",
    "start": "2178480",
    "end": "2183599"
  },
  {
    "text": "yeah uh you know this is just some JavaScript running right jsx is just some function calls a very kind of",
    "start": "2183599",
    "end": "2189119"
  },
  {
    "text": "simple render it throw it away kind of mentality and react has been on a",
    "start": "2189119",
    "end": "2194680"
  },
  {
    "text": "trajectory away from it and the compiler almost ends or finishes that Arc where the react of now is not very much like",
    "start": "2194680",
    "end": "2203880"
  },
  {
    "text": "the reacted 10 years ago and ironically for me the reacted 10 years ago is what",
    "start": "2203880",
    "end": "2209720"
  },
  {
    "text": "solid aspires to be so like it's oh yeah I I'm so with you yes like yes yes yes",
    "start": "2209720",
    "end": "2216000"
  },
  {
    "text": "and like this I'm so excited for react because I think this like this compiler is going to just really simplify its API",
    "start": "2216000",
    "end": "2223520"
  },
  {
    "text": "again you know it's going to make it easy to use and I think easy to understand and like I think you know",
    "start": "2223520",
    "end": "2228760"
  },
  {
    "text": "it's just gotten big and comp well complex is a a loaded word but like I'll",
    "start": "2228760",
    "end": "2234520"
  },
  {
    "text": "use it complex uh you know chunky and like this just I think it I don't know",
    "start": "2234520",
    "end": "2240280"
  },
  {
    "text": "it just goes back to kind of bringing things back to simple I feel I don't know I'm I'm excited about this change",
    "start": "2240280",
    "end": "2245640"
  },
  {
    "text": "personally easy maybe easy easy easy I don't think the compiler actually makes anything simpler like that that's",
    "start": "2245640",
    "end": "2251720"
  },
  {
    "text": "actually the point I'm trying to drive yeah like like I'm confused on that I don't I haven't I've heard of the",
    "start": "2251720",
    "end": "2258000"
  },
  {
    "text": "compiler and I've heard of the examples of it like making it easier because you won't have to learn you don't have to",
    "start": "2258000",
    "end": "2263640"
  },
  {
    "text": "use memo or uh use call back or things like that but to me as far as my",
    "start": "2263640",
    "end": "2269119"
  },
  {
    "text": "knowledge goes that's where it ends like is it doing anything simpler than that like to to change fundamentally change",
    "start": "2269119",
    "end": "2275440"
  },
  {
    "text": "the way that I would interact with react well I mean it will change the because well I mean because you don't have to worry about that that does reduce the",
    "start": "2275440",
    "end": "2281760"
  },
  {
    "text": "API surface in a sense so then it is maybe easier in the sense you're not thinking about these things I was more",
    "start": "2281760",
    "end": "2288480"
  },
  {
    "text": "kind of just getting at that like there's always a trade-off when you opt into another level of abstraction you",
    "start": "2288480",
    "end": "2294680"
  },
  {
    "text": "know like solid is not the most hardcore on that side react is not the most hardcore on the other side or whatever",
    "start": "2294680",
    "end": "2300119"
  },
  {
    "text": "it's just there's the scale of things and finding the balance is really tricky and the one thing that is in my opinion",
    "start": "2300119",
    "end": "2307000"
  },
  {
    "text": "always true is you can always make something easier by adding another level of abstraction but making something simpler is really hard but it's not",
    "start": "2307000",
    "end": "2314200"
  },
  {
    "text": "going to do something like bring react closer to solid in terms of like this is",
    "start": "2314200",
    "end": "2319280"
  },
  {
    "text": "now a function that runs once and you're going to like fundamentally change the way you think about that no react is",
    "start": "2319280",
    "end": "2326599"
  },
  {
    "text": "still react they'll try and reduce the number of renders automatically for you some cases you might still have to",
    "start": "2326599",
    "end": "2332280"
  },
  {
    "text": "actually help it along a bit no abstraction is perfect but generally speaking that's that's why it's good for",
    "start": "2332280",
    "end": "2338280"
  },
  {
    "text": "react because react this is to their Vision right they they want to keep with that vision of render and you know",
    "start": "2338280",
    "end": "2346640"
  },
  {
    "text": "they're just doing it better now you know that's the idea they they're they're cleaning it up there's there's like a fundamentally there's there yeah",
    "start": "2346640",
    "end": "2352760"
  },
  {
    "text": "it's still the same life cycle it's just kind of more streamlined so this is like fascinating and hopefully everyone uh",
    "start": "2352760",
    "end": "2358920"
  },
  {
    "text": "we're going to have a chance to talk to the react team about this um this is like a huge uh shift and I'm very eager",
    "start": "2358920",
    "end": "2365240"
  },
  {
    "text": "to hear from them as well on like thoughts on this kind of getting back to",
    "start": "2365240",
    "end": "2370480"
  },
  {
    "text": "our like solid and reactivity principles um you know we've mentioned signals a",
    "start": "2370480",
    "end": "2375680"
  },
  {
    "text": "lot we had the angular team on a few maybe maybe a month few months ago I guess now uh talking about how they've",
    "start": "2375680",
    "end": "2382359"
  },
  {
    "text": "Incorporated it into their framework you've been called the CEO of signals signals is a huge principle here for",
    "start": "2382359",
    "end": "2388359"
  },
  {
    "text": "this you know in this reactivity World um so Ryan can you just break down like what are signals for folks who maybe",
    "start": "2388359",
    "end": "2395480"
  },
  {
    "text": "completely not familiar yeah it's funny we've gone this far without actually saying that um I know I know right I",
    "start": "2395480",
    "end": "2400920"
  },
  {
    "text": "know we we suck I'm sorry everyone I'll admit I have no idea what a signal is okay it looks interesting but I have no",
    "start": "2400920",
    "end": "2407200"
  },
  {
    "text": "idea what's actually happening it's always hard to come up with the one sentence line for people cuz whenever I",
    "start": "2407200",
    "end": "2412760"
  },
  {
    "text": "describe it people like oh so they're an event emitter right people are familiar with events but what signals actually",
    "start": "2412760",
    "end": "2420079"
  },
  {
    "text": "are is they are a directed data graph and it's because you don't just make one",
    "start": "2420079",
    "end": "2426920"
  },
  {
    "text": "signal you make multiple signals that listen to other signals and effects that run off that and you basically make a",
    "start": "2426920",
    "end": "2433560"
  },
  {
    "text": "graph not unlike your component graph that you have when you use you know a vdom library but this is about data",
    "start": "2433560",
    "end": "2439960"
  },
  {
    "text": "dependencies kind of like hooks even you know how you have the array in react and then you you know what that hook depends",
    "start": "2439960",
    "end": "2447920"
  },
  {
    "text": "on in the case of signals we use Auto tracking so you don't need that array and when you access values under a scope",
    "start": "2447920",
    "end": "2454680"
  },
  {
    "text": "it creates a dependency which means whenever any data under that scope updates that thing will run again and",
    "start": "2454680",
    "end": "2460839"
  },
  {
    "text": "the reason signals are interesting these days is because they come with guarantees they execute synchronously",
    "start": "2460839",
    "end": "2468560"
  },
  {
    "text": "they make sure that On Any Given change they only run once this offers a level of predictability which we might have",
    "start": "2468560",
    "end": "2474839"
  },
  {
    "text": "not happened before you you you don't have this problem with things bouncing around you don't have this problem with",
    "start": "2474839",
    "end": "2480359"
  },
  {
    "text": "like updating two things and then like part of it propagates and then part of it propagates again and it runs twice",
    "start": "2480359",
    "end": "2486920"
  },
  {
    "text": "like things are batched together they run in a reasonable order and you get a",
    "start": "2486920",
    "end": "2494480"
  },
  {
    "text": "system which is all concerned about how data propagates through your application and if you've heard of this before a lot",
    "start": "2494480",
    "end": "2501119"
  },
  {
    "text": "of State libraries even in react are kind of are signals libraries things like mobx you might have come across",
    "start": "2501119",
    "end": "2507200"
  },
  {
    "text": "this you know in the past um when you're managing State and react but the reason",
    "start": "2507200",
    "end": "2512880"
  },
  {
    "text": "that people are interested in it right now and it's largely from the influence of solid um and we'll see what we can",
    "start": "2512880",
    "end": "2518760"
  },
  {
    "text": "talk a bit about the further impact of it is the idea that basically you can",
    "start": "2518760",
    "end": "2524400"
  },
  {
    "text": "use this whole system to manage all the rendering in a very obviously performant",
    "start": "2524400",
    "end": "2529920"
  },
  {
    "text": "way but also a very understandable way it's easy to see compose not have to",
    "start": "2529920",
    "end": "2535440"
  },
  {
    "text": "worry about reenders Etc and this comes with a lot of benefits that are I think",
    "start": "2535440",
    "end": "2541160"
  },
  {
    "text": "perhaps more obvious to say framework authors at first but then once people start you know authoring with these",
    "start": "2541160",
    "end": "2547359"
  },
  {
    "text": "patterns they start you know being able to almost make sense of their apps",
    "start": "2547359",
    "end": "2552520"
  },
  {
    "text": "easier with this model yeah that makes sense of sense and it's uh thank you for that wonderful explanation I've never",
    "start": "2552520",
    "end": "2558520"
  },
  {
    "text": "really thought about it as a d directed data graph and I'm like yeah that makes so much sense actually so like we've",
    "start": "2558520",
    "end": "2565119"
  },
  {
    "text": "seen signals kind of it's I'm calling it like signals signals everywhere right like literally it's um they're just it's",
    "start": "2565119",
    "end": "2571720"
  },
  {
    "text": "just popping up everywhere even lit starting to there's like a uh like something in lit Labs they're they're working on",
    "start": "2571720",
    "end": "2577680"
  },
  {
    "text": "signals integration for lit seeing it in angular I mean we're see like so can you",
    "start": "2577680",
    "end": "2582880"
  },
  {
    "text": "talk about this polar foration but but also you know how solid made it like I",
    "start": "2582880",
    "end": "2588319"
  },
  {
    "text": "feel like just the solid being the spearhead for this is fascinating and to the point where now we're also seeing",
    "start": "2588319",
    "end": "2594720"
  },
  {
    "text": "there's a proposal on the web platform uh to add like signals as a new",
    "start": "2594720",
    "end": "2600319"
  },
  {
    "text": "primitive for JavaScript like that's huge you know and I know you were somewhat involved with in that effort or",
    "start": "2600319",
    "end": "2606240"
  },
  {
    "text": "there was a committee and I think Rob Eisenberg and Daniel Arenberg were the",
    "start": "2606240",
    "end": "2611280"
  },
  {
    "text": "are the champions for that and we'll link we'll link that in the show notes for anyone who wants to see it we'll hope to maybe do a show about it but but",
    "start": "2611280",
    "end": "2617640"
  },
  {
    "text": "anyway so Ryan talk talk to us about all this well yeah I mean this is one of those things where as I said I think it",
    "start": "2617640",
    "end": "2623559"
  },
  {
    "text": "caught the framework author's eyes before anyone else because I I was out there publishing solid doing good",
    "start": "2623559",
    "end": "2629000"
  },
  {
    "text": "benchmarks back in 2018 2019 I started like writing articles about it and getting it out",
    "start": "2629000",
    "end": "2635440"
  },
  {
    "text": "there and talking about just mechanic IAL things not just like basically how this approach to rendering had solved",
    "start": "2635440",
    "end": "2642359"
  },
  {
    "text": "the problems of the past and at a certain point I I mean I don't know the",
    "start": "2642359",
    "end": "2648160"
  },
  {
    "text": "exact Catalyst of it but other Frameworks started looking into this um",
    "start": "2648160",
    "end": "2655319"
  },
  {
    "text": "at first maybe just to differentiate themselves in react like preact was one of the early uh signals adopters out of",
    "start": "2655319",
    "end": "2661960"
  },
  {
    "text": "kind of like the more known Frameworks quick decided that they wanted the resumable resum ability to be even more",
    "start": "2661960",
    "end": "2668880"
  },
  {
    "text": "fine grained so they added it resum ability actually depends a lot on reactivity in general but they got",
    "start": "2668880",
    "end": "2675640"
  },
  {
    "text": "signals because they wanted to be able to like ship even less code and I I I I'm trying to think here but just like",
    "start": "2675640",
    "end": "2681800"
  },
  {
    "text": "the angular team we're looking for an update they I first started talking to them oh I'd say probably in 2020 and",
    "start": "2681800",
    "end": "2688599"
  },
  {
    "text": "they were like looking at the future of angular and seeing where they could go and they had Zone JS and this dirty checking approach and you know people",
    "start": "2688599",
    "end": "2696480"
  },
  {
    "text": "were using us stuff like uh zoness with like direct push of the rxjs but they're hitting all these weird timing bugs",
    "start": "2696480",
    "end": "2703880"
  },
  {
    "text": "because of like the maybe async nature of stuff like RS JX and they they really just wanted like a synchronization",
    "start": "2703880",
    "end": "2710200"
  },
  {
    "text": "system and that's what signals gave um and over the course of like I'd say six",
    "start": "2710200",
    "end": "2715760"
  },
  {
    "text": "months we just saw this huge proliferation uh view announced view",
    "start": "2715760",
    "end": "2721000"
  },
  {
    "text": "Vapor which is basically they already had signals for people who don't know um composition API and view is a signals",
    "start": "2721000",
    "end": "2726520"
  },
  {
    "text": "API that they released when did they release that like 2020 I want to say but they had reactivity before that but they",
    "start": "2726520",
    "end": "2732160"
  },
  {
    "text": "decided that they were going to actually make a mode that compiled like solid does so they could get the benefit from",
    "start": "2732160",
    "end": "2737800"
  },
  {
    "text": "the extra performance and spelt that was one that I wasn't necess expecting cuz",
    "start": "2737800",
    "end": "2743400"
  },
  {
    "text": "at the cost of making things you know a little less easy but definitely more",
    "start": "2743400",
    "end": "2748880"
  },
  {
    "text": "powerful they introduced ruins and spel 5 which is probably coming out pretty",
    "start": "2748880",
    "end": "2754040"
  },
  {
    "text": "imminently here which also compiles to basically the same is solid so between",
    "start": "2754040",
    "end": "2759280"
  },
  {
    "text": "View and spelt basically now outputting the same approach that solid's been",
    "start": "2759280",
    "end": "2764480"
  },
  {
    "text": "using for like the last you know six or seven years and between all the other",
    "start": "2764480",
    "end": "2769760"
  },
  {
    "text": "Frameworks picking up the signals for the DX reasons like just being able to you know have an easier to manage State",
    "start": "2769760",
    "end": "2776440"
  },
  {
    "text": "and you know make it more I guess predictable we've gotten to a point where almost every JavaScript framework",
    "start": "2776440",
    "end": "2783599"
  },
  {
    "text": "is using some sort of signals at if not core like first party level so yeah I",
    "start": "2783599",
    "end": "2790440"
  },
  {
    "text": "mean you mentioned lit um Integrations like honestly the list just goes on and on I feel like I'm missing people like",
    "start": "2790440",
    "end": "2797760"
  },
  {
    "text": "you just like name any framework and it'll be yes except for react pretty much at this point yeah well I would say",
    "start": "2797760",
    "end": "2803640"
  },
  {
    "text": "vanilla JS is getting it too right cuz like it's getting added to the platform you know um yeah so can we talk about",
    "start": "2803640",
    "end": "2810319"
  },
  {
    "text": "the platform so this is like to me this is just fascinating like to kind of actually have this like lowlevel",
    "start": "2810319",
    "end": "2815559"
  },
  {
    "text": "directive added to the platform like huge uh but also like awesome and",
    "start": "2815559",
    "end": "2821160"
  },
  {
    "text": "also like who's going to use this is this for Library authors is this for regular old Jane and Joe's like who's",
    "start": "2821160",
    "end": "2827559"
  },
  {
    "text": "who's this for yeah I mean this was a this was a tricky one and they did us",
    "start": "2827559",
    "end": "2833079"
  },
  {
    "text": "very smart thing um by getting the group together initially that they did um you have to understand that sometimes the",
    "start": "2833079",
    "end": "2840119"
  },
  {
    "text": "framework authors are not always well how should I put we're always maybe a",
    "start": "2840119",
    "end": "2845440"
  },
  {
    "text": "little bit suspicious of of web standards there's been a lot of efforts over the last 10 years or so to almost",
    "start": "2845440",
    "end": "2852400"
  },
  {
    "text": "build a framework into the browser with a lot of like the web component stuff and it's been kind of challenging",
    "start": "2852400",
    "end": "2858480"
  },
  {
    "text": "because these are very ambitious proposals that kind of in some ways you might say bypass the Frameworks but in",
    "start": "2858480",
    "end": "2864839"
  },
  {
    "text": "other ways don't cover the use cases so we knew with signals that we wanted to make sure that you know there was some",
    "start": "2864839",
    "end": "2870359"
  },
  {
    "text": "amount of agreement and having seen this proliferation already happen the framework authors are already all in",
    "start": "2870359",
    "end": "2876359"
  },
  {
    "text": "communication with each other I you know i' met with the guys at angular at various points and quick and whiz and",
    "start": "2876359",
    "end": "2882559"
  },
  {
    "text": "all them and we were already talking about could we use the same signals implementation so and and yeah Dominic",
    "start": "2882559",
    "end": "2890000"
  },
  {
    "text": "um and spelt we'd been talking as well and he was the one who is actually close with uh Daniel and the you know the tc39",
    "start": "2890000",
    "end": "2897720"
  },
  {
    "text": "thing so almost immediately this is Dominic denola right like or Dominic ganway um okay okay just clarifying the",
    "start": "2897720",
    "end": "2904559"
  },
  {
    "text": "original author of Inferno um yeah and now did a lot of heavy lifting for spelt",
    "start": "2904559",
    "end": "2909880"
  },
  {
    "text": "5 um in the ruins implementation so this group basically was that came together",
    "start": "2909880",
    "end": "2915640"
  },
  {
    "text": "to discuss this uh last fall was basically all the people I just listed",
    "start": "2915640",
    "end": "2920960"
  },
  {
    "text": "plus you know people from Ember Community people from uh view we had",
    "start": "2920960",
    "end": "2926200"
  },
  {
    "text": "preact like almost everybody was involved at some point in terms of just",
    "start": "2926200",
    "end": "2931440"
  },
  {
    "text": "like into on the framework side trying to figure out what to we could agree on and the interesting thing is the core",
    "start": "2931440",
    "end": "2938839"
  },
  {
    "text": "signals and uh computed values or um",
    "start": "2938839",
    "end": "2944160"
  },
  {
    "text": "piece we actually mostly agreed on the the part that we knew was going to be hard was the side effects and like",
    "start": "2944160",
    "end": "2951880"
  },
  {
    "text": "because every framework has different ways they want to update and schedule and we decided for our initial proposal",
    "start": "2951880",
    "end": "2957599"
  },
  {
    "text": "here just to not really include that have the ability to create your own systems to be able to do the effects but",
    "start": "2957599",
    "end": "2965400"
  },
  {
    "text": "basically just for the most part put out signals and computed values CU like I'm not saying",
    "start": "2965400",
    "end": "2971440"
  },
  {
    "text": "someone would do this but you could very easily um and there's actually a library called reactive Le out that does this",
    "start": "2971440",
    "end": "2978520"
  },
  {
    "text": "you could basically pull the data without using effects like with like a",
    "start": "2978520",
    "end": "2983760"
  },
  {
    "text": "set interval or or something and it's fully functional from a signals perspective because the key part of",
    "start": "2983760",
    "end": "2989680"
  },
  {
    "text": "signals is just having that data graph so as long as you know when things change and how to only do the work",
    "start": "2989680",
    "end": "2996119"
  },
  {
    "text": "that's needed you could basically ask for the values whenever you wanted that that's kind of",
    "start": "2996119",
    "end": "3001480"
  },
  {
    "text": "the I didn't talk about this before but one of the key differences between a lot of the signals implementations and like rxjs and other reactivity is it's",
    "start": "3001480",
    "end": "3008839"
  },
  {
    "text": "actually it's a push pull hybrid you you don't just notify people like events it's all about actually reading the",
    "start": "3008839",
    "end": "3016000"
  },
  {
    "text": "values so we actually completely agreed on that the challenge is this is",
    "start": "3016000",
    "end": "3021280"
  },
  {
    "text": "suggesting that we need rappers right off the bat you know because everyone's going to have their own effect approach",
    "start": "3021280",
    "end": "3026960"
  },
  {
    "text": "right every framework and in the case of the apis signals are kind of an interesting thing where while the",
    "start": "3026960",
    "end": "3033400"
  },
  {
    "text": "framework needs some extra data especially if it wants to do complicated things like walking the graph for",
    "start": "3033400",
    "end": "3038480"
  },
  {
    "text": "concurrency or you know different use cases hydration serialization resum ability I didn't even talk about impact",
    "start": "3038480",
    "end": "3045480"
  },
  {
    "text": "of signals in SSR whatever my point is like the end user usually doesn't have",
    "start": "3045480",
    "end": "3050520"
  },
  {
    "text": "to worry about any of that stuff so it's very difficult to have an API that we put out there even for the signals and",
    "start": "3050520",
    "end": "3056799"
  },
  {
    "text": "cell that like people are just going to pick up and use because it's going to just have extra stuff and be clunkier",
    "start": "3056799",
    "end": "3063119"
  },
  {
    "text": "and like there's different philos philosophies between different Frameworks like spelt doesn't want you to actually ever hold the signal they",
    "start": "3063119",
    "end": "3070000"
  },
  {
    "text": "use signals and ruins but you you never actually hold it so to speak it's like compiled away like solid actually",
    "start": "3070000",
    "end": "3077480"
  },
  {
    "text": "funnily enough has a similar philosophy in that everything's just a function so",
    "start": "3077480",
    "end": "3082559"
  },
  {
    "text": "again we don't want you to worry about all these details just call a function so the API surface on this proposal it's",
    "start": "3082559",
    "end": "3089520"
  },
  {
    "text": "very difficult for us to ever come to a point where it's just like yes this is what everyone should use and be in",
    "start": "3089520",
    "end": "3095480"
  },
  {
    "text": "dropable we're almost all expecting ourselves to wrap it and I think that's very interesting for something in the",
    "start": "3095480",
    "end": "3101640"
  },
  {
    "text": "standards because when you have you know other standards trying to say putting a",
    "start": "3101640",
    "end": "3107799"
  },
  {
    "text": "pre-made framework basically in the browser this is kind of at odds with it because people like well make an effect",
    "start": "3107799",
    "end": "3113920"
  },
  {
    "text": "make this just work with the Dom apis and it's like if you do that you're kind of assuming a lot and I think it's very",
    "start": "3113920",
    "end": "3122640"
  },
  {
    "text": "difficult for us to make those kind of assumptions for the future yeah no I I mean you just highlighted so many things",
    "start": "3122640",
    "end": "3128200"
  },
  {
    "text": "Ryan one being just kind of yeah like that there's still a lot of alignment that needs to happen and like how this",
    "start": "3128200",
    "end": "3134680"
  },
  {
    "text": "is supposed to work and it's worth noting this is just stage one uh so it's going to take a long time to kind of",
    "start": "3134680",
    "end": "3141280"
  },
  {
    "text": "move through all the stages and in order for that to happen effectively you know this is what the work of the Champions",
    "start": "3141280",
    "end": "3147240"
  },
  {
    "text": "you know this is what they do they'll be kind of working with folks like Ryan and other framework authors and um people",
    "start": "3147240",
    "end": "3152680"
  },
  {
    "text": "not just on the library author side but you know other people just you know software Engineers writing web apps",
    "start": "3152680",
    "end": "3159119"
  },
  {
    "text": "right they solicit feedback um you you can also give feedback um so anyway so we'll link this in the show notes and I",
    "start": "3159119",
    "end": "3164319"
  },
  {
    "text": "think once the proposal is further along we'll invite them to the show it's probably a little too early to have like",
    "start": "3164319",
    "end": "3169400"
  },
  {
    "text": "a productive conversation about this now but but thank you for walking us through that Ryan I I tend to go deep I'm I'm",
    "start": "3169400",
    "end": "3175040"
  },
  {
    "text": "sorry but yeah we are at stage one so this is a good place it's open people can talk about it which is really what",
    "start": "3175040",
    "end": "3181480"
  },
  {
    "text": "we want exactly exactly I I was going to ask I do have one question kind of around this like and please correct me",
    "start": "3181480",
    "end": "3187319"
  },
  {
    "text": "if I'm wrong because I might totally just not be thinking about this correctly but like the way that I see this right now is like you know 15 years",
    "start": "3187319",
    "end": "3193960"
  },
  {
    "text": "ago 10 15 years ago we had we had promises everywhere we had Bluebird promises we had the promises a spec we",
    "start": "3193960",
    "end": "3199920"
  },
  {
    "text": "had all of these different you know Dojo deferreds jQuery deferreds all of these different things uh and then we got",
    "start": "3199920",
    "end": "3206119"
  },
  {
    "text": "promis is as like a you know part of es6 or yeah es6 and like that led to like",
    "start": "3206119",
    "end": "3212960"
  },
  {
    "text": "having it as a A Primitive that was in the browser had or in the language led to things like asyn a weight and like",
    "start": "3212960",
    "end": "3219480"
  },
  {
    "text": "all of these side effect like ways are there things like that that we could possibly anticipate with signals",
    "start": "3219480",
    "end": "3225559"
  },
  {
    "text": "becoming a primitive in JavaScript yeah I mean that's that's the Hope here I mean there's one side on the syntax side",
    "start": "3225559",
    "end": "3232280"
  },
  {
    "text": "which you mentioned like async of weight which you know it'd be nice if we had ways to actually like natively handle",
    "start": "3232280",
    "end": "3239440"
  },
  {
    "text": "signals maybe not so bulkily like if there's some Syntax for it the other",
    "start": "3239440",
    "end": "3244640"
  },
  {
    "text": "side of it and this also promis is a great example of when you debug in the browser you can track through the asyn",
    "start": "3244640",
    "end": "3251960"
  },
  {
    "text": "weights now like you go on Chrome debugger and you set a breakpoint you can walk through the the then or the",
    "start": "3251960",
    "end": "3258079"
  },
  {
    "text": "await and actually see the context of how everything runs that kind of ability for debugging with signals would be a",
    "start": "3258079",
    "end": "3265559"
  },
  {
    "text": "GameChanger um that's one of the pieces I'm most excited about I don't care as much as if everybody's libraries",
    "start": "3265559",
    "end": "3272640"
  },
  {
    "text": "necessarily all work together cuz you know it's it's hard problem but if we can all be able to leverage the tools",
    "start": "3272640",
    "end": "3280079"
  },
  {
    "text": "built into the browser it would be such a win because if if there's one complaint you know about people with the",
    "start": "3280079",
    "end": "3285880"
  },
  {
    "text": "stuff traditionally it was like you know it's hard to know what's happening when stuff can execute like anywhere in the",
    "start": "3285880",
    "end": "3291559"
  },
  {
    "text": "tree but on the other hand with good developer Tooling in this area and we've already seen this certain degree sols",
    "start": "3291559",
    "end": "3297720"
  },
  {
    "text": "Dev tools this knowledge of the data graph is like a superpower you can go like oh I'm updating this and I can see",
    "start": "3297720",
    "end": "3303160"
  },
  {
    "text": "that it Updates this thing right over here and like that kind of ability to leverage this would be incredible I mean",
    "start": "3303160",
    "end": "3310839"
  },
  {
    "text": "once there's that kind of foundation for things like it's interesting cuz sometimes you know if you're popular",
    "start": "3310839",
    "end": "3316359"
  },
  {
    "text": "enough things will get implemented for you like when the tles came in react",
    "start": "3316359",
    "end": "3321480"
  },
  {
    "text": "hooks suddenly uh browser performance for destructuring tles was improved in",
    "start": "3321480",
    "end": "3326559"
  },
  {
    "text": "all the browsers you know and that's just from sheer power of popularity but getting the standards kind of takes that",
    "start": "3326559",
    "end": "3332200"
  },
  {
    "text": "whole new level like I'm I'm very excited for the future of signals here when people just understand that it's a",
    "start": "3332200",
    "end": "3337240"
  },
  {
    "text": "thing because there's so much more you can do with the tooling as I said when you know how data goes through your apps",
    "start": "3337240",
    "end": "3342599"
  },
  {
    "text": "like picture like the developer experience when you can actually go huh if I set this here what are all the",
    "start": "3342599",
    "end": "3348240"
  },
  {
    "text": "points in code that could be affected by this like we can know exactly what updates when you set some kind of value",
    "start": "3348240",
    "end": "3355680"
  },
  {
    "text": "like the tooling at every level has in yeah there's just so much we can do yeah",
    "start": "3355680",
    "end": "3361280"
  },
  {
    "text": "no that's like and this is I I was hoping we would get into some of these real world use cases cuz like there's",
    "start": "3361280",
    "end": "3366520"
  },
  {
    "text": "like a lot more to the there's like the surface things that I think everyone knows that you know this brings to the",
    "start": "3366520",
    "end": "3371559"
  },
  {
    "text": "table and then there's all this other stuff that like you know you wouldn't even think about like you know DB updates kind of like you know you update",
    "start": "3371559",
    "end": "3377359"
  },
  {
    "text": "a field in the database and it updates something in your UI automatically like that's the kind of like kind of clean",
    "start": "3377359",
    "end": "3382760"
  },
  {
    "text": "handshake that you can achieve between the you know the stack and like just stuff like that um but but before we get into that I want to just you you had",
    "start": "3382760",
    "end": "3389760"
  },
  {
    "text": "like you you made me very curious about something that you said so how do how does signals impact uh server side",
    "start": "3389760",
    "end": "3396319"
  },
  {
    "text": "rendering Ryan for well the the funny thing is and",
    "start": "3396319",
    "end": "3401920"
  },
  {
    "text": "I don't know if people know this I worked at eBay for a few years and this",
    "start": "3401920",
    "end": "3407000"
  },
  {
    "text": "was kind of the turning point for me and solid because it's when I you know finally kind of decided that you know to",
    "start": "3407000",
    "end": "3414200"
  },
  {
    "text": "kind of pick things up I was working on Marco which is their framework um at eBay they'd read my articles and the the",
    "start": "3414200",
    "end": "3420960"
  },
  {
    "text": "team there was like what Ryan is working on here will actually improve the performance of initial page load at eBay",
    "start": "3420960",
    "end": "3426839"
  },
  {
    "text": "like e-commerce like they it was less they didn't care as much about update performance they just wanted to make",
    "start": "3426839",
    "end": "3431960"
  },
  {
    "text": "sure that the pages could load as fast as possible and we could load the least amount of JavaScript and what was kind",
    "start": "3431960",
    "end": "3438559"
  },
  {
    "text": "of realized was if we knew the data dependency graph then we can know what",
    "start": "3438559",
    "end": "3444760"
  },
  {
    "text": "changes and what static and Marco is an example of one of those really heavy compiler Frameworks kind of similar to",
    "start": "3444760",
    "end": "3450839"
  },
  {
    "text": "spel like a lot of compilation going on and we're like if we can use signals or buil them into our language then we can",
    "start": "3450839",
    "end": "3458920"
  },
  {
    "text": "basically Tre shake out the static Parts think like islands like Astro but",
    "start": "3458920",
    "end": "3464559"
  },
  {
    "text": "automatic you don't have to set the islands server components another one you don't have to write the used client",
    "start": "3464559",
    "end": "3470319"
  },
  {
    "text": "we just shake out all the parts that don't need to be ever be updated again",
    "start": "3470319",
    "end": "3475760"
  },
  {
    "text": "and only minimally send the code um for the stuff that does and in a lot of ways",
    "start": "3475760",
    "end": "3482400"
  },
  {
    "text": "quick and resum ability also took a page from this book right initially for them",
    "start": "3482400",
    "end": "3488440"
  },
  {
    "text": "they just lazy loaded everything and they didn't know definitively if something would ever get to the browser",
    "start": "3488440",
    "end": "3493559"
  },
  {
    "text": "or not but because of people writing their code in a signal way like seeing",
    "start": "3493559",
    "end": "3499760"
  },
  {
    "text": "the data dependencies connecting the dots like this and because the execution again doesn't need things to render",
    "start": "3499760",
    "end": "3506400"
  },
  {
    "text": "doesn't needs it to rerun the stuff that doesn't rerun well it can run once on the server and not have to ever go to",
    "start": "3506400",
    "end": "3513280"
  },
  {
    "text": "the browser and you can tell that you know through static analysis and compilers so even though it's a",
    "start": "3513280",
    "end": "3520160"
  },
  {
    "text": "performance gain in terms of like updates uh you know it can actually be a",
    "start": "3520160",
    "end": "3525920"
  },
  {
    "text": "huge performance game for creation and initial page load it's like the trifacta",
    "start": "3525920",
    "end": "3531000"
  },
  {
    "text": "so to speak um that's wild and we've mentioned lazy loading and R Mobility a",
    "start": "3531000",
    "end": "3536280"
  },
  {
    "text": "bunch already so I hope we can kind of get into defining it in just a second so we've talked a lot about signals right",
    "start": "3536280",
    "end": "3541480"
  },
  {
    "text": "it's the kind of the core principle here behind what's enabling all this reactivity but it's not just about",
    "start": "3541480",
    "end": "3546839"
  },
  {
    "text": "performance right so there's this whole the create versus you're separating out the the creation path and update path",
    "start": "3546839",
    "end": "3553359"
  },
  {
    "text": "which you know comes with a bunch of other really cool um side effects right like for example rendering performance",
    "start": "3553359",
    "end": "3559440"
  },
  {
    "text": "goes up because your crate path is a lot more optimized similar to what you were just explaining your your complexity",
    "start": "3559440",
    "end": "3565640"
  },
  {
    "text": "scaling is you know like your your app doesn't get slower the more components you add right or the more JavaScript",
    "start": "3565640",
    "end": "3572079"
  },
  {
    "text": "you're shipping like it like you know it doesn't scale like linearly in that way and then you know the the hydration",
    "start": "3572079",
    "end": "3578000"
  },
  {
    "text": "stuff that you talked about right like the lazy loading and reability and then obviously these all these no no hook",
    "start": "3578000",
    "end": "3583440"
  },
  {
    "text": "these no crazy hook rules so there's a bunch of other kind of principles um so maybe we maybe we start with the resum",
    "start": "3583440",
    "end": "3588920"
  },
  {
    "text": "ability piece a little bit and like some of the benefits of reactivity being hydration and being able to have that",
    "start": "3588920",
    "end": "3595240"
  },
  {
    "text": "control yeah uh sure yeah I mean the big one for this one is that if you're not",
    "start": "3595240",
    "end": "3601200"
  },
  {
    "text": "going to run your code initially when the page loads that's a big performance gain like even if you load the",
    "start": "3601200",
    "end": "3607039"
  },
  {
    "text": "JavaScript not running it to block interactivity actually has a big impact",
    "start": "3607039",
    "end": "3612440"
  },
  {
    "text": "like it's not just about how fast the page shows up especially with people on slow connections it's about how fast",
    "start": "3612440",
    "end": "3618880"
  },
  {
    "text": "they can interact with it because often if you can interact with a page before it loads one of two things are going to",
    "start": "3618880",
    "end": "3625079"
  },
  {
    "text": "happen it's going going to either lose your clicks you know and you get kind of",
    "start": "3625079",
    "end": "3631280"
  },
  {
    "text": "frustrated and be like why isn't this not working or it's going to have Progressive enhancement which is",
    "start": "3631280",
    "end": "3637520"
  },
  {
    "text": "generally a good thing because it'll work but I always feel bad for the and this is something we thought a lot about",
    "start": "3637520",
    "end": "3642960"
  },
  {
    "text": "at eBay when we're talking about global e-commerce I always felt really bad for the people in that situation because it",
    "start": "3642960",
    "end": "3648799"
  },
  {
    "text": "it's one of those situ it's like there's it's a no win because even if you click on the button or the link and it works",
    "start": "3648799",
    "end": "3654760"
  },
  {
    "text": "now you're now going back and doing a full page reload um and waiting the",
    "start": "3654760",
    "end": "3660039"
  },
  {
    "text": "whole time again whereas like they don't know if they waited another half a second before clicking maybe the",
    "start": "3660039",
    "end": "3666559"
  },
  {
    "text": "JavaScript would have loaded and it would have done just a quick client side thing so like if you can just eliminate",
    "start": "3666559",
    "end": "3673160"
  },
  {
    "text": "that whole hydration side of it the experience it can be considerably better especially on low-end devices and slower",
    "start": "3673160",
    "end": "3679760"
  },
  {
    "text": "networks and in order to not run the code sorry getting back to the signals part you kind of have to know what to",
    "start": "3679760",
    "end": "3687720"
  },
  {
    "text": "wake up when there's an interaction you don't want to just defer hydration you don't want to just be like okay I'm not",
    "start": "3687720",
    "end": "3693559"
  },
  {
    "text": "going to do anything now but now when you click on it I'm just going to block everything and hydrate the whole app at that point that that won't do any good",
    "start": "3693559",
    "end": "3699400"
  },
  {
    "text": "you want to be able to be like oh I know I actually only need to run this small bit of code so signals became a big part",
    "start": "3699400",
    "end": "3706480"
  },
  {
    "text": "of this because both for the granular ability to wake things up without running it the first time and because",
    "start": "3706480",
    "end": "3713000"
  },
  {
    "text": "it's a data graph you just if you can serialize it if can send it across from the server to the client then you can",
    "start": "3713000",
    "end": "3719680"
  },
  {
    "text": "kind of just wake up in the same state you are in and since it's just you know putting data in the graph so to speak",
    "start": "3719680",
    "end": "3726200"
  },
  {
    "text": "just an easy way to to kind of serialize the internal state of the framework so in this way you know using quick as an",
    "start": "3726200",
    "end": "3733119"
  },
  {
    "text": "example you can interact with part of the page and then if you click a button",
    "start": "3733119",
    "end": "3738279"
  },
  {
    "text": "you know like add to cart it knows that it's going to be adding due to the the",
    "start": "3738279",
    "end": "3743680"
  },
  {
    "text": "reactivity it knows that at that point okay now is when I need to actually run the code to you know update the the",
    "start": "3743680",
    "end": "3749160"
  },
  {
    "text": "shopping cart count or whatever like so these kind of techniques this is why",
    "start": "3749160",
    "end": "3754240"
  },
  {
    "text": "also whiz from uh Google is very interested in it because some of these Frameworks were doing stuff like this",
    "start": "3754240",
    "end": "3759680"
  },
  {
    "text": "and signals is just like a built-in well potentially in the browser primitive to be able to just like configure this kind",
    "start": "3759680",
    "end": "3766599"
  },
  {
    "text": "of communication in a predictable way that's I mean that's like so powerful I can't even like I feel like we need like",
    "start": "3766599",
    "end": "3771920"
  },
  {
    "text": "a whole show just to kind of unpack this I don't know what do you think Nick like it's like it's pretty mindblowing right",
    "start": "3771920",
    "end": "3778680"
  },
  {
    "text": "yeah I mean there's just so much here I I mean honestly a lot of these things we're talking about are performance things but there's this impact that",
    "start": "3778680",
    "end": "3785440"
  },
  {
    "text": "people don't always see about performance and I I I want want people to understand this having good",
    "start": "3785440",
    "end": "3791559"
  },
  {
    "text": "performance alleviates pressure on you achieving the the ux you want right like",
    "start": "3791559",
    "end": "3797200"
  },
  {
    "text": "basically if the performance of what you're building is not good your developer experience is going to suffer",
    "start": "3797200",
    "end": "3802880"
  },
  {
    "text": "at some point maybe not initially because you you know just wrote it up but once you have to go in and actually fix the problem everything gets",
    "start": "3802880",
    "end": "3810160"
  },
  {
    "text": "considerably worse for you as a developer so what I'm getting at is like",
    "start": "3810160",
    "end": "3815480"
  },
  {
    "text": "if performance matters and you kind of treat that as a mindset then there's a whole bunch of stuff that you have to do",
    "start": "3815480",
    "end": "3822440"
  },
  {
    "text": "the that you might not be doing already in your framework right like for example",
    "start": "3822440",
    "end": "3827520"
  },
  {
    "text": "component boundaries matter and react in terms of what re runs and what updates whether you memorize them or not but",
    "start": "3827520",
    "end": "3832640"
  },
  {
    "text": "also just like where you break them apart if your framework isn't governed by how you lay out your",
    "start": "3832640",
    "end": "3839720"
  },
  {
    "text": "components and as I said most Frameworks any ones that do kind of like dirty checking or whatever they do matter like",
    "start": "3839720",
    "end": "3846720"
  },
  {
    "text": "the size of your components or where you break them apart or where you put the state like the these things matter you suddenly just don't have to worry about",
    "start": "3846720",
    "end": "3853200"
  },
  {
    "text": "it this is a huge DX lift even though it's performance that drove it suddenly",
    "start": "3853200",
    "end": "3859480"
  },
  {
    "text": "you're not worried about it at all you can arrange things the way you want to arrange them right so so like all of",
    "start": "3859480",
    "end": "3866720"
  },
  {
    "text": "these pieces here just and I guess this is why it's more might be obvious to the framework authors we spend so much time",
    "start": "3866720",
    "end": "3873359"
  },
  {
    "text": "trying to get people into the pit of success right we want people to be able to just write what they want to and then have it be performant and you know them",
    "start": "3873359",
    "end": "3880160"
  },
  {
    "text": "to be satisfied if we just get that performance essentially as a baseline we",
    "start": "3880160",
    "end": "3885799"
  },
  {
    "text": "have so much more room to like improve the developer experience",
    "start": "3885799",
    "end": "3892319"
  },
  {
    "text": "[Music]",
    "start": "3898520",
    "end": "3908399"
  },
  {
    "text": "[Music] what's up friends and party people I'm here with my good friend over at Speak",
    "start": "3910530",
    "end": "3916599"
  },
  {
    "text": "Easy founding engineer George haar Speak Easy is the complete platform for great",
    "start": "3916599",
    "end": "3922319"
  },
  {
    "text": "API developer experience they help you produce sdks terraform providers docs and more George take me on a journey",
    "start": "3922319",
    "end": "3929960"
  },
  {
    "text": "through this process help me understand exactly what it takes to generate an SDK",
    "start": "3929960",
    "end": "3935839"
  },
  {
    "text": "for an API at the Quality level required for good user experience good Dev experience the reality is the larger",
    "start": "3935839",
    "end": "3942760"
  },
  {
    "text": "your API becomes the more you want to support users that want to use your API",
    "start": "3942760",
    "end": "3949599"
  },
  {
    "text": "and to do that your instinct will be to ship a library a package and what we've",
    "start": "3949599",
    "end": "3955000"
  },
  {
    "text": "been calling an SDK there's a lot of effort involved in taking an API that lives in the world and creating a piece",
    "start": "3955000",
    "end": "3961960"
  },
  {
    "text": "of software that can talk to that API building sdks by hand is a significant investment and a lot of large companies",
    "start": "3961960",
    "end": "3969359"
  },
  {
    "text": "might pour a lot of money into that effort to to create something that's like approaches good developer",
    "start": "3969359",
    "end": "3976000"
  },
  {
    "text": "experience and then another group of a more growing group of companies will",
    "start": "3976000",
    "end": "3982240"
  },
  {
    "text": "rely on tooling like code generators and so they very interested in like once you",
    "start": "3982240",
    "end": "3987880"
  },
  {
    "text": "make the decision to use a code generator you're kind of forfeiting some of your own opinions and what you think",
    "start": "3987880",
    "end": "3993720"
  },
  {
    "text": "a good developer experience is because you're going to delegate that to a code generator to give you an SDK that's that",
    "start": "3993720",
    "end": "4000240"
  },
  {
    "text": "you think users will enjoy using so there's various open source tooling out there that can do a version of what you",
    "start": "4000240",
    "end": "4007160"
  },
  {
    "text": "do how much research have you all put into doing it at a quality level that is Enterprise Epi ready a lot of the",
    "start": "4007160",
    "end": "4014160"
  },
  {
    "text": "customers that we've spoken to who didn't have that experience so they went to to code generators they tried to",
    "start": "4014160",
    "end": "4020440"
  },
  {
    "text": "point them at their apis and tell them give me an SDK and the outcome wasn't great like it didn't support some of the",
    "start": "4020440",
    "end": "4026480"
  },
  {
    "text": "features in open API or the the code that it was generating was not idiomatic",
    "start": "4026480",
    "end": "4031880"
  },
  {
    "text": "typescript we didn't boldly think we're we're going to we're going to solve this better than everyone else the reality is",
    "start": "4031880",
    "end": "4038839"
  },
  {
    "text": "that that's where we came in we surveyed all the things that have happened in JavaScript over the last few years all",
    "start": "4038839",
    "end": "4044200"
  },
  {
    "text": "the incredible projects like Zod for example and the web platform apis that",
    "start": "4044200",
    "end": "4049400"
  },
  {
    "text": "are now like broadly supported like the fetch API the web streams API we kind of saw this and said there's a great",
    "start": "4049400",
    "end": "4055839"
  },
  {
    "text": "opportunity to mix all these together and create a the best experience you can get out of a code generator for users",
    "start": "4055839",
    "end": "4063680"
  },
  {
    "text": "okay so paint a picture what's a good Next Step what can people expect when they go to speaky api. Dev if you're",
    "start": "4063680",
    "end": "4070520"
  },
  {
    "text": "coming across Speak Easy today and you want to use it you will go through the onboarding flow and at some point you're",
    "start": "4070520",
    "end": "4076880"
  },
  {
    "text": "going to give us an open API document that's your description of your API and we're going to take that document and",
    "start": "4076880",
    "end": "4083640"
  },
  {
    "text": "turn it into an SDK of your choice you're going to get to pick which language is your first language that's",
    "start": "4083640",
    "end": "4088799"
  },
  {
    "text": "the one you get for free and at that point you can publish that package to",
    "start": "4088799",
    "end": "4094000"
  },
  {
    "text": "for the world to use that's going to be yours it's uh you get to license that however you want and then Carry On from",
    "start": "4094000",
    "end": "4100238"
  },
  {
    "text": "there the way you iterate now is you keep changing your AP open API document so as you develop your back end you're",
    "start": "4100239",
    "end": "4107120"
  },
  {
    "text": "going to produce alongside that the open API document with any updates over time and evolve that and as you're evolving",
    "start": "4107120",
    "end": "4113880"
  },
  {
    "text": "that we're generating the sdks and Publishing them for you um and that also includes Rich documentation that goes",
    "start": "4113880",
    "end": "4120400"
  },
  {
    "text": "with them so we're asking you to put a lot of effort just into describing your",
    "start": "4120400",
    "end": "4125560"
  },
  {
    "text": "API and we're going to do a lot of the heavy lifting that follows from that okay so as George mentioned go to speak",
    "start": "4125560",
    "end": "4132238"
  },
  {
    "text": "easyi dodev you get your first SD DK for free so cool once again Speak Easy API",
    "start": "4132239",
    "end": "4141040"
  },
  {
    "text": "[Music]",
    "start": "4141040",
    "end": "4144159"
  },
  {
    "text": "dodev so there's like you know in addition to everyone starting to kind of solely adopt signals there's also just",
    "start": "4153560",
    "end": "4160640"
  },
  {
    "text": "like this General convergence where like I you know you've seen the like Spider-Man or it's like everyone's like",
    "start": "4160640",
    "end": "4166758"
  },
  {
    "text": "pointing at each other like it really feels like everything is starting to sort of work the same and I'm wondering",
    "start": "4166759",
    "end": "4173120"
  },
  {
    "text": "like is there like a future where like it's going to be like what syntax do you like right because like ultimately like",
    "start": "4173120",
    "end": "4179238"
  },
  {
    "text": "these things all work the same I mean that would be nice with solid View and",
    "start": "4179239",
    "end": "4185640"
  },
  {
    "text": "re and spelt it might be that in like six months wow I I like in the like I",
    "start": "4185640",
    "end": "4193359"
  },
  {
    "text": "mean there's some different features that we have and obviously we're always evolving right solids spent like a lot",
    "start": "4193359",
    "end": "4200239"
  },
  {
    "text": "of time on signals we like the current version of solid is more or less existed since 2019 like that where you know V",
    "start": "4200239",
    "end": "4207280"
  },
  {
    "text": "Vue and spelt five are kind of coming into it this year but like at a base",
    "start": "4207280",
    "end": "4213600"
  },
  {
    "text": "level that is kind of what it it's going to feel like uh when you pick up few Vapor spelt ruins or solid you're going",
    "start": "4213600",
    "end": "4221040"
  },
  {
    "text": "to be like these are all basically the same thing so do you prefer dollar signs do you prefer you know dot",
    "start": "4221040",
    "end": "4229320"
  },
  {
    "text": "value do you prefer uh calling things as functions or whatever like that's kind",
    "start": "4229320",
    "end": "4234840"
  },
  {
    "text": "of the difference we're obviously going to continue to evolve this but it's interesting that sometimes when you have",
    "start": "4234840",
    "end": "4241000"
  },
  {
    "text": "this kind of innovation in this manner it actually causes things to just consolidate but despite all that opinion",
    "start": "4241000",
    "end": "4249199"
  },
  {
    "text": "and this is one of my biggest things I respect about rich heresy understands this way before I ever understood this",
    "start": "4249199",
    "end": "4255040"
  },
  {
    "text": "like things like these opinions or bike shedding or like how it aesthetically feels will always uh be different for",
    "start": "4255040",
    "end": "4262159"
  },
  {
    "text": "people enough that uh people will continue to choose based on like those",
    "start": "4262159",
    "end": "4268280"
  },
  {
    "text": "facets even if things start to converge like this that makes sense I makes it",
    "start": "4268280",
    "end": "4273320"
  },
  {
    "text": "makes perfect sense yeah I mean this is an exciting future uh I don't know Nick I'm I'm eager to hear about some like",
    "start": "4273320",
    "end": "4279400"
  },
  {
    "text": "real world use cases how about you Nick yeah I'm also just really excited about",
    "start": "4279400",
    "end": "4284480"
  },
  {
    "text": "yeah all of the the future you know good debugging the good it just seems like developer experience is just going to go",
    "start": "4284480",
    "end": "4291040"
  },
  {
    "text": "become so much easier and and better around all of the Frameworks so that's really exciting yeah um real world use",
    "start": "4291040",
    "end": "4297840"
  },
  {
    "text": "cases okay so when you say that you're yeah I mean we could talk about a couple types of examples here because like but",
    "start": "4297840",
    "end": "4304960"
  },
  {
    "text": "yeah what do you think well yeah yeah sorry so basically you know there it's not just perf right it's like you said that it's not just the performance um",
    "start": "4304960",
    "end": "4312159"
  },
  {
    "text": "improvements that we get to leverage right but there's a lot of other things that shake out like we talked a",
    "start": "4312159",
    "end": "4317199"
  },
  {
    "text": "little bit about the reability stuff um there's all these other benefits right like being able to like I've seen you",
    "start": "4317199",
    "end": "4324199"
  },
  {
    "text": "mentioned this before you mentioned that like you you have an IDE that like links to everywhere where you update set state",
    "start": "4324199",
    "end": "4330800"
  },
  {
    "text": "for example like being able to have that kind of traceability throughout your app is another kind of benefit for using",
    "start": "4330800",
    "end": "4337239"
  },
  {
    "text": "signals okay yeah I think I follow that one doesn't exist as of yet but it is",
    "start": "4337239",
    "end": "4342920"
  },
  {
    "text": "like I can see how it would be possible and actually it was the primagen who who was like basically talking about this he",
    "start": "4342920",
    "end": "4348920"
  },
  {
    "text": "he was like he was very excited about signals for a bit and he was like because someone had brought a signals",
    "start": "4348920",
    "end": "4354320"
  },
  {
    "text": "port to rust in a framework called leptos which is almost identical to solid but in Rust and so it was in his",
    "start": "4354320",
    "end": "4361639"
  },
  {
    "text": "language and in his place and he was he was like talking about the basically using stuff with like uh the in the ID",
    "start": "4361639",
    "end": "4368679"
  },
  {
    "text": "to be able to trace it I don't believe anyone's built that but like more common practical thing Library writers I work a",
    "start": "4368679",
    "end": "4374600"
  },
  {
    "text": "lot uh with Tanner Lindley who creates uh you know tanack react location or I guess",
    "start": "4374600",
    "end": "4380920"
  },
  {
    "text": "it's now called tanack router tanack query and uh numerous other libraries",
    "start": "4380920",
    "end": "4387159"
  },
  {
    "text": "and one of the interesting things for for him was trying to figure out how to",
    "start": "4387159",
    "end": "4393280"
  },
  {
    "text": "manage State and you're like why do you need to manage state right CU these are these like Universal libraries but even",
    "start": "4393280",
    "end": "4399159"
  },
  {
    "text": "if you're dealing with data fetching or whatnot he builds dashboards and large tables and things like very interactive",
    "start": "4399159",
    "end": "4405719"
  },
  {
    "text": "stuff and he builds tools so people can use it quite often when he was working with stuff for react for example and all",
    "start": "4405719",
    "end": "4412400"
  },
  {
    "text": "his libraries work with react he'd be in this interesting place where like he couldn't use react State Primitives",
    "start": "4412400",
    "end": "4418360"
  },
  {
    "text": "because and context because they weren't efficient enough right and this is a common case like things like Redux at",
    "start": "4418360",
    "end": "4424400"
  },
  {
    "text": "one point switched to using pure react context with set State and then they realize it's was too slow and they went back basically anytime you write any",
    "start": "4424400",
    "end": "4430880"
  },
  {
    "text": "kind of State library with uh react you have to basically make your own external State Management and then have that feed",
    "start": "4430880",
    "end": "4437239"
  },
  {
    "text": "back into reacts update cycle so like yeah this was kind of one of those those",
    "start": "4437239",
    "end": "4442400"
  },
  {
    "text": "kind of challenges because then react added concurrent mode and this meant",
    "start": "4442400",
    "end": "4447600"
  },
  {
    "text": "that now you know use external source and you you basically had to kind of jump through even more Hoops to try and",
    "start": "4447600",
    "end": "4453760"
  },
  {
    "text": "get it to play nice with on the react side and it got to I mean I've seen this",
    "start": "4453760",
    "end": "4459120"
  },
  {
    "text": "this is probably why a lot of the people who who seem to be the most critical of things like use effect are people who",
    "start": "4459120",
    "end": "4464159"
  },
  {
    "text": "write state management libraries for react U you know like xate 10 query you",
    "start": "4464159",
    "end": "4470239"
  },
  {
    "text": "know you see certain Trend here and it's because they're basically kind of pushed",
    "start": "4470239",
    "end": "4475560"
  },
  {
    "text": "into being like kind of like this outside second class Citizen and one of",
    "start": "4475560",
    "end": "4480960"
  },
  {
    "text": "the cool things you know on one side when you have a framework that manages state it means that like yes each",
    "start": "4480960",
    "end": "4488679"
  },
  {
    "text": "version of like that plugin for the different Frameworks are going to Pro need to use that framework state but but",
    "start": "4488679",
    "end": "4495520"
  },
  {
    "text": "because there's like a set way of doing it you just adopt it in and ironically",
    "start": "4495520",
    "end": "4501440"
  },
  {
    "text": "if it wasn't for react needing to work the other way and since it's the most popular tan stack Library Tanner could",
    "start": "4501440",
    "end": "4507080"
  },
  {
    "text": "have just like basically just pulled in solid's version for solid views version for views felt version for of the State",
    "start": "4507080",
    "end": "4513880"
  },
  {
    "text": "Management Primitives and just like not have to ship all this extra code with the library and this has been kind of",
    "start": "4513880",
    "end": "4520440"
  },
  {
    "text": "one of the like big challenges because when the state Primitives understand",
    "start": "4520440",
    "end": "4525679"
  },
  {
    "text": "concurrency when they understand the the pieces because they're built into the framework and they're completely um",
    "start": "4525679",
    "end": "4532320"
  },
  {
    "text": "exportable then you are giving those powers to the library authors like in",
    "start": "4532320",
    "end": "4537960"
  },
  {
    "text": "solid we have something called create resource which is uh basic acing primitive but when I say basic I mean it",
    "start": "4537960",
    "end": "4545320"
  },
  {
    "text": "handles data fetching it automatically serializes for SSR and automatically triggers suspense on the server and",
    "start": "4545320",
    "end": "4551960"
  },
  {
    "text": "client so it automatically does out of order streaming because the framework knows this all Tanner and group have to",
    "start": "4551960",
    "end": "4559719"
  },
  {
    "text": "do is just make react or sorry tanat query wrap that crate resource and then",
    "start": "4559719",
    "end": "4565679"
  },
  {
    "text": "suddenly it works in all of those functionalities suddenly you just take",
    "start": "4565679",
    "end": "4570960"
  },
  {
    "text": "solid query which is the tanq query version for solid and all everything",
    "start": "4570960",
    "end": "4576120"
  },
  {
    "text": "above works out of order streaming automatic data cialization you know like the the whole suspense the whole",
    "start": "4576120",
    "end": "4582480"
  },
  {
    "text": "transitions the whole thing just works and like like it's it's hard to kind of",
    "start": "4582480",
    "end": "4588719"
  },
  {
    "text": "just me saying it the impact of that but like when we added server functions like uh they were called server dollar sign",
    "start": "4588719",
    "end": "4595040"
  },
  {
    "text": "but now we use server like react do for syntax sometimes just easier to go along with them those just fall right in too",
    "start": "4595040",
    "end": "4601639"
  },
  {
    "text": "like all the pieces just compos in the third party because they're all built with knowledge that the other pieces",
    "start": "4601639",
    "end": "4608040"
  },
  {
    "text": "exist and that's sort of what I mean by primitive design and it's a it's a real case where solid query ended up being so",
    "start": "4608040",
    "end": "4614320"
  },
  {
    "text": "successful there that the tanack query Dev tools the ones that everyone installs the ones",
    "start": "4614320",
    "end": "4619880"
  },
  {
    "text": "for react SP view are now actually built in solid so yeah it was a good use case",
    "start": "4619880",
    "end": "4626000"
  },
  {
    "text": "for us yeah no and I mean I can see that kind of interoperability also being good for teams working on really large web",
    "start": "4626000",
    "end": "4631480"
  },
  {
    "text": "apps like that own different pieces of of a thing too you know just makes everything easier to integrate um super",
    "start": "4631480",
    "end": "4639159"
  },
  {
    "text": "cool so yeah I think we're going to Pivot to like talking about a less fun",
    "start": "4639159",
    "end": "4644199"
  },
  {
    "text": "topic before rap um so I'm I'm really curious to hear",
    "start": "4644199",
    "end": "4649400"
  },
  {
    "text": "about like what you see as like adoption barriers because with react having so",
    "start": "4649400",
    "end": "4654760"
  },
  {
    "text": "much momentum and first player I don't they weren't even the first player but like there's just so much adoption right",
    "start": "4654760",
    "end": "4661239"
  },
  {
    "text": "like and then there's also a corporation that's attached to it right which also you know similar to angular gives it",
    "start": "4661239",
    "end": "4666719"
  },
  {
    "text": "this like huge sway in terms of other Enterprises feeling quote unquote comfortable right like what do you see",
    "start": "4666719",
    "end": "4672280"
  },
  {
    "text": "as kind of an adoption barrier for libraries like like solid I mean yeah I how do you compete with with that you I",
    "start": "4672280",
    "end": "4679639"
  },
  {
    "text": "mean you don't I mean like when I first started out I wasn't worried about adoption so it was very easy for me um I",
    "start": "4679639",
    "end": "4686320"
  },
  {
    "text": "just built what I thought was the best possible thing I could build and then over time just kept on building it",
    "start": "4686320",
    "end": "4691600"
  },
  {
    "text": "better and better you know hopefully becoming more obvious to people but the truth of the matter is even if people",
    "start": "4691600",
    "end": "4699400"
  },
  {
    "text": "would want to so much of the ecosystem is already locked in you know even if you could picture perhaps that every",
    "start": "4699400",
    "end": "4705800"
  },
  {
    "text": "aspect that I'm telling you today improves on what you're used to in every possible way I know that won't be enough",
    "start": "4705800",
    "end": "4712360"
  },
  {
    "text": "so I mean this is one of those things that you know it's unfortunate you know",
    "start": "4712360",
    "end": "4718520"
  },
  {
    "text": "it's like a David and Goliath type thing we just continue doing what we've always",
    "start": "4718520",
    "end": "4724120"
  },
  {
    "text": "done which is to innovate and the more people who come on you know slowly",
    "start": "4724120",
    "end": "4729159"
  },
  {
    "text": "surely as long as they're enjoying what they're building and they're getting what they're they want out of it that makes me happy because as long as I get",
    "start": "4729159",
    "end": "4735880"
  },
  {
    "text": "to keep on doing this as long as I get to continue to push the boundaries right like it's not I I can't even like what",
    "start": "4735880",
    "end": "4743000"
  },
  {
    "text": "we've done as a community like the the way that solid has impacted the front end we I would say this changes signals",
    "start": "4743000",
    "end": "4750760"
  },
  {
    "text": "we haven't seen something so revolutionary since the virtual Dawn first showed up 10 years ago and this",
    "start": "4750760",
    "end": "4756320"
  },
  {
    "text": "wasn't coming out of meta or you know some large company this was completely",
    "start": "4756320",
    "end": "4761520"
  },
  {
    "text": "Grassroots and it went to on to changed the whole shape of the front end",
    "start": "4761520",
    "end": "4766679"
  },
  {
    "text": "ecosystem so we did that and even if you know big corporations you know will take",
    "start": "4766679",
    "end": "4773560"
  },
  {
    "text": "their time and be careful cuz they should that's just the kind of reality cuz for a while there I was thinking you",
    "start": "4773560",
    "end": "4779960"
  },
  {
    "text": "know there's always that checklist right and I I I worked in B2B for a while so I'm familiar with that on like the uh",
    "start": "4779960",
    "end": "4785639"
  },
  {
    "text": "Enterprise or I was an education side of where you know like there's like just this NeverEnding checklist basically",
    "start": "4785639",
    "end": "4791880"
  },
  {
    "text": "that keep the big players you know in that checklist never finishes right when when sa first came out it was like oh",
    "start": "4791880",
    "end": "4798600"
  },
  {
    "text": "we'll you know maybe when it's 1.0 or you know maybe when um it has this",
    "start": "4798600",
    "end": "4804120"
  },
  {
    "text": "feature or maybe when there's a meta framework or maybe when it can do mobile",
    "start": "4804120",
    "end": "4809360"
  },
  {
    "text": "or Universal rendering and the truth of the matter is we've checked all the boxes you know one after the another as",
    "start": "4809360",
    "end": "4815600"
  },
  {
    "text": "things have come on and people will be able to move to do new things exciting things when they can or they won't so",
    "start": "4815600",
    "end": "4823440"
  },
  {
    "text": "yeah I think the biggest thing for you know us in the community was like it's",
    "start": "4823440",
    "end": "4828719"
  },
  {
    "text": "never been about that it couldn't be like we we showed up way too late if we were going to like win people over on",
    "start": "4828719",
    "end": "4835639"
  },
  {
    "text": "popularity but if our ideas succeed well that's something yeah I know it's a huge",
    "start": "4835639",
    "end": "4840920"
  },
  {
    "text": "form of success and and and there's so much growth that's happening with solid like you're we don't have time to get",
    "start": "4840920",
    "end": "4846880"
  },
  {
    "text": "into it today and hopefully have you back in the future but solid start is a",
    "start": "4846880",
    "end": "4852040"
  },
  {
    "text": "meta framework that you all are really it's one .0 is going to be out soonish or like in the near future could you",
    "start": "4852040",
    "end": "4858960"
  },
  {
    "text": "just give folks just a quick preview on like what it is and what problems it's solving for sure yeah solid start you",
    "start": "4858960",
    "end": "4864440"
  },
  {
    "text": "know this is one of those things on that list everyone's like we need a meta framework been working on it for almost 3 years now I wasn't happy at it with it",
    "start": "4864440",
    "end": "4871000"
  },
  {
    "text": "on several iterations but we're finally getting there it's just one of those SSR Frameworks you know like spel kit um",
    "start": "4871000",
    "end": "4878040"
  },
  {
    "text": "like next n you know you name it there's tons of them but it's solid focused built with solid Primitives in mind we",
    "start": "4878040",
    "end": "4885159"
  },
  {
    "text": "really like our data loading keeps our granular story um we have really cool features like single flight mutations we",
    "start": "4885159",
    "end": "4891920"
  },
  {
    "text": "even are working on we we have experimental support currently for Islands there's a lot of you know",
    "start": "4891920",
    "end": "4897560"
  },
  {
    "text": "features so you could create the type of solid JS app you want but yeah I guess the truth matters it's for us continues",
    "start": "4897560",
    "end": "4904159"
  },
  {
    "text": "that philosophy of solid of based on Primitives it's less about you know the",
    "start": "4904159",
    "end": "4909560"
  },
  {
    "text": "polished product and it's more about just having the building blocks you need because you can build everything from",
    "start": "4909560",
    "end": "4914600"
  },
  {
    "text": "single page app Spa create react app kind of style um with no server all the",
    "start": "4914600",
    "end": "4919760"
  },
  {
    "text": "way to server rendering all with the exact same apis and you can incrementally add every feature as you",
    "start": "4919760",
    "end": "4925080"
  },
  {
    "text": "want and it actually doesn't ship with most of its own libraries it actually",
    "start": "4925080",
    "end": "4931120"
  },
  {
    "text": "just uses the existing libraries in the ecosystem it's it's actually solid router agnostic you could bring your own",
    "start": "4931120",
    "end": "4937280"
  },
  {
    "text": "router like it's it's a different type of meta framework that really focuses on",
    "start": "4937280",
    "end": "4942679"
  },
  {
    "text": "what's important to us with solid um so yeah I'm very excited and I'll be excited to talk about it more in the",
    "start": "4942679",
    "end": "4948440"
  },
  {
    "text": "future a meta framework without an opinionated router this is like revolutionary Ryan like you're setting",
    "start": "4948440",
    "end": "4954360"
  },
  {
    "text": "some new boundaries here this is like whoa you know and also it's not just server side rendering it handles like static site generation and client side",
    "start": "4954360",
    "end": "4960920"
  },
  {
    "text": "rendering as well right so it's like yeah that's cool yeah so hopefully we'll have a whole show on solid start in the",
    "start": "4960920",
    "end": "4966880"
  },
  {
    "text": "future um it's pretty cool I think Ryan is being very humble about it because it's like actually very very full",
    "start": "4966880",
    "end": "4973080"
  },
  {
    "text": "featured and so very uh cool for anyone who's thinking about adopting solid um",
    "start": "4973080",
    "end": "4979080"
  },
  {
    "text": "and or kind of leveling up their implementation of solid so anyway so we",
    "start": "4979080",
    "end": "4984400"
  },
  {
    "text": "covered a lot of ground today I feel like I have like 17 more things that I'd love to discuss but we're kind of",
    "start": "4984400",
    "end": "4990000"
  },
  {
    "text": "already out of time um so I don't know so Nick any any any final questions or",
    "start": "4990000",
    "end": "4995480"
  },
  {
    "text": "thoughts from you before we yeah I feel in a lot of ways the same as I did a few years ago when you were on Ryan like",
    "start": "4995480",
    "end": "5001239"
  },
  {
    "text": "there you're you're just uh blazing trails and setting like changing this environment",
    "start": "5001239",
    "end": "5007920"
  },
  {
    "text": "for for the better and I'm really excited about all of these Primitives coming or this primitive coming and the",
    "start": "5007920",
    "end": "5014560"
  },
  {
    "text": "the ecosystem built around it and uh just the the changes that are that are going to impact everyone I'm really",
    "start": "5014560",
    "end": "5020920"
  },
  {
    "text": "excited about it I'm glad to hear it I hope everyone can get involved with this it's it is really exciting yeah totally",
    "start": "5020920",
    "end": "5027040"
  },
  {
    "text": "and so Brian I'm G to ask you like a big philosophical question to end with which is because you know we haven't talked",
    "start": "5027040",
    "end": "5032440"
  },
  {
    "text": "enough today already um which is which is um what's one thing you want everyone",
    "start": "5032440",
    "end": "5038080"
  },
  {
    "text": "to like walk away from if you could like like talk to like every single person writing JavaScript on the planet and",
    "start": "5038080",
    "end": "5044440"
  },
  {
    "text": "imagine they all spoke English because they don't but you know so what would you want them to",
    "start": "5044440",
    "end": "5049960"
  },
  {
    "text": "know that is a big question um yeah just give me one second think about that one",
    "start": "5049960",
    "end": "5055400"
  },
  {
    "text": "it's okay we'll put the Jeopardy music on yeah okay I guess I'll go with this",
    "start": "5055400",
    "end": "5061400"
  },
  {
    "text": "one um I mean what what a comes down to in the end like the tools or you know",
    "start": "5061400",
    "end": "5068840"
  },
  {
    "text": "don't actually matter that much I think that the important part is that we can",
    "start": "5068840",
    "end": "5075760"
  },
  {
    "text": "successfully you know get our projects out to people so I want to make sure",
    "start": "5075760",
    "end": "5081880"
  },
  {
    "text": "that you know we can continue to progress that we can continue to learn um and expand on how we do that so",
    "start": "5081880",
    "end": "5089679"
  },
  {
    "text": "that's that's what I'm hoping we we can accomplish here more than anything so",
    "start": "5089679",
    "end": "5094840"
  },
  {
    "text": "yeah just if if there's something that you think is a good idea you know try it",
    "start": "5094840",
    "end": "5100199"
  },
  {
    "text": "you you never know that's all I did when I started I just built something because I wanted to and then it it became this",
    "start": "5100199",
    "end": "5106960"
  },
  {
    "text": "wow that's that's uh like that's a good mic drop R so good job good job talking",
    "start": "5106960",
    "end": "5113679"
  },
  {
    "text": "to all the JavaScript uh developers and um with that said I just want to say thank you so much for coming on the show",
    "start": "5113679",
    "end": "5120159"
  },
  {
    "text": "today thanks so much for educating us you really are like Paving a a very cool",
    "start": "5120159",
    "end": "5125239"
  },
  {
    "text": "path forward um for kind of I think the future and of JavaScript and the you",
    "start": "5125239",
    "end": "5131080"
  },
  {
    "text": "know impacting so many people's I think patterns and thought processes and you",
    "start": "5131080",
    "end": "5136119"
  },
  {
    "text": "know so it's just really very humbling um to listen to you and just uh you know to see the impact of your work and the",
    "start": "5136119",
    "end": "5142760"
  },
  {
    "text": "the work of the team that you um you know of the solid JS team so so thank you all so so much um where can folks",
    "start": "5142760",
    "end": "5149960"
  },
  {
    "text": "connect with you how can they like join your community and all the things yeah definitely uh Discord is the big one for",
    "start": "5149960",
    "end": "5157560"
  },
  {
    "text": "us uh Sol Discord is where we do most of our conversation obviously GitHub and GitHub discussions as well and can",
    "start": "5157560",
    "end": "5164239"
  },
  {
    "text": "follow me or solid on Twitter and it's if you really like nerding out on stuff",
    "start": "5164239",
    "end": "5170560"
  },
  {
    "text": "um I do stream almost every Friday about various topics I don't just talk about solid I talk about all stuff across the",
    "start": "5170560",
    "end": "5177440"
  },
  {
    "text": "web and web Technologies I have lots of guests on and we get really into the details um in the way that I would if",
    "start": "5177440",
    "end": "5184560"
  },
  {
    "text": "you could tell from the stream if it's any indicator um and we yeah so cool check it all out yeah no definitely so",
    "start": "5184560",
    "end": "5191440"
  },
  {
    "text": "we'll link to all those things um many thank yous again thank yous thank yous",
    "start": "5191440",
    "end": "5196560"
  },
  {
    "text": "for this Z or s i don't even anyways thank you Ryan and uh that's all for",
    "start": "5196560",
    "end": "5202719"
  },
  {
    "text": "this week everyone we'll catch you next week um we have a really fun show I'm not going to spoil actually jar will",
    "start": "5202719",
    "end": "5208560"
  },
  {
    "text": "probably spoil spoil the surprise for you all so I'll let him do it all right cheers everyone bye-bye",
    "start": "5208560",
    "end": "5215400"
  },
  {
    "text": "[Music]",
    "start": "5215400",
    "end": "5223949"
  },
  {
    "text": "we would love to get more awesome reviews for the Pod into Apple podcasts and Spotify so for a limited time only",
    "start": "5226560",
    "end": "5234239"
  },
  {
    "text": "you leave us a thoughtful five star review Send the evidence to JSP party",
    "start": "5234239",
    "end": "5241480"
  },
  {
    "text": "right to your door let's do this thanks once again to our partners at fly.io to",
    "start": "5244199",
    "end": "5250239"
  },
  {
    "text": "our beat freak in Residence brake master cylinder and to our friends at Sentry we",
    "start": "5250239",
    "end": "5255560"
  },
  {
    "text": "love Sentry and have been using it for years if and when it's time for you to check it out use code change log that",
    "start": "5255560",
    "end": "5262520"
  },
  {
    "text": "helps us because Sentry knows we're making an impact on their business and it helps you because they'll give you",
    "start": "5262520",
    "end": "5268840"
  },
  {
    "text": "100 bucks off the team plan once again use code change log all one word next up",
    "start": "5268840",
    "end": "5274199"
  },
  {
    "text": "on the Pod Brian laroo joins me to discuss enhan WM an effort to bring",
    "start": "5274199",
    "end": "5280280"
  },
  {
    "text": "serers side rendered web components to everyone that's all for now but come on",
    "start": "5280280",
    "end": "5285400"
  },
  {
    "text": "back and party with us again next week [Music]",
    "start": "5285400",
    "end": "5300590"
  }
]