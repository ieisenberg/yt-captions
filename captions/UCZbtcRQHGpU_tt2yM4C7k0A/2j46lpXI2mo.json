[
  {
    "text": "some of the things that I see in other languages where I'm like if I was to use go I might miss this is like I like the",
    "start": "80",
    "end": "5680"
  },
  {
    "text": "idea that like four is the only way to Loop but like I also love all of the FP functions for like iteration and map and",
    "start": "5680",
    "end": "12719"
  },
  {
    "text": "reduce and select and filter and for me those are very productive ways of pipelining data and I'm wondering maybe",
    "start": "12719",
    "end": "19680"
  },
  {
    "text": "those are available as like libraries or anything it seems like I would miss those things do you guys ever miss those",
    "start": "19680",
    "end": "26279"
  },
  {
    "text": "things I'm sure you're familiar with them in other languages I miss iteration like iterators all the time I find",
    "start": "26279",
    "end": "31439"
  },
  {
    "text": "myself building them a lot and that's one of the with generics I'm hoping that we do kind of settle on a reasonable",
    "start": "31439",
    "end": "36840"
  },
  {
    "text": "like iteration maybe not interfaced but yeah way of doing it but I do miss that okay I think I missed that too but I",
    "start": "36840",
    "end": "42840"
  },
  {
    "text": "think I've also just handrolled it enough times that I'm just like",
    "start": "42840",
    "end": "47800"
  },
  {
    "text": "nah this episode is brought to you by Source graph Source graph is universal",
    "start": "49920",
    "end": "55320"
  },
  {
    "text": "code search that let you move fast even in big code bases here's CTO and code co-founder bang luu explaining how",
    "start": "55320",
    "end": "61920"
  },
  {
    "text": "Source graph helps you to get into that ideal state of flow and coding the ideal state of software development is really",
    "start": "61920",
    "end": "69280"
  },
  {
    "text": "being in that state of flow it's that state where all the relevant context and information that you need to build",
    "start": "69280",
    "end": "75560"
  },
  {
    "text": "whatever feature or bug that you're focused on uh building or fixing at the moment that's all readily available now",
    "start": "75560",
    "end": "81320"
  },
  {
    "text": "the question is how do you get into that state where you know you don't know anything about the code necessarily that you're going to modify that's where",
    "start": "81320",
    "end": "87920"
  },
  {
    "text": "Source graph comes in and so what you do with Source graph is you you jump into Source graph it provides a single uh",
    "start": "87920",
    "end": "94360"
  },
  {
    "text": "cordal into that universal code you search for the string literal the pattern whatever it is you're looking",
    "start": "94360",
    "end": "99479"
  },
  {
    "text": "for you dive right into the the specific part of code that you want to understand and then you have all these code",
    "start": "99479",
    "end": "104560"
  },
  {
    "text": "navigation capabilities jump to definition find references that work across repository boundaries that work",
    "start": "104560",
    "end": "109840"
  },
  {
    "text": "without having to clone the code to your local machine and set up and mess around with editor config and and all that",
    "start": "109840",
    "end": "116240"
  },
  {
    "text": "everything is just designed to be seamless and to Aid in that task of you know Cod spunking or or Source diving",
    "start": "116240",
    "end": "121759"
  },
  {
    "text": "and once you've acquired that understanding then you can hop back in your editor dive right back into that flow state of hey all the information I",
    "start": "121759",
    "end": "128640"
  },
  {
    "text": "need is readily accessible let me just focus on writing the code that influence the feature or fixes the bug that I'm",
    "start": "128640",
    "end": "133959"
  },
  {
    "text": "working on all right learn more at source.com and also check out their bonly virtual series called Dev Tool",
    "start": "133959",
    "end": "140040"
  },
  {
    "text": "Time covering all things Dev tools at source.com slev Tool [Music]",
    "start": "140040",
    "end": "148760"
  },
  {
    "text": "Time",
    "start": "148760",
    "end": "151760"
  },
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "160760",
    "end": "167400"
  },
  {
    "text": "from around the go Community we record live on Tuesdays at 300 p.m. us Eastern Time subscribe at youtube.com/ changelog",
    "start": "167400",
    "end": "175680"
  },
  {
    "text": "so you don't miss it and don't forget to follow the show on Twitter at gotime FM special thanks to our partners at fastly",
    "start": "175680",
    "end": "181800"
  },
  {
    "text": "for shipping our shows super fast to wherever you listen check them out at fastly.com okay here we",
    "start": "181800",
    "end": "188840"
  },
  {
    "text": "[Music]",
    "start": "188840",
    "end": "193340"
  },
  {
    "text": "go hello and welcome to go time I'm Matt ryer and I've spent my entire life",
    "start": "194360",
    "end": "202599"
  },
  {
    "text": "working on my MidAmerican English accent for this very moment when I could imitate Jared Santo no I'm not Mar R",
    "start": "202599",
    "end": "210280"
  },
  {
    "text": "Matt is I don't know where but I am here I'm Jared your humble producer coming out from behind where does an audio",
    "start": "210280",
    "end": "217360"
  },
  {
    "text": "producer sit behind I don't know the soundboard maybe yes from behind your soundboard to ask some questions today",
    "start": "217360",
    "end": "223480"
  },
  {
    "text": "if you listen to our charm episode of the change log which we aired in the go",
    "start": "223480",
    "end": "228519"
  },
  {
    "text": "time feed because there was so much go talk on that episode you know that I've been go curious as of late but I have my",
    "start": "228519",
    "end": "235519"
  },
  {
    "text": "apprehensions I have my questions I haven't actually dug very far into go and I have questions so I thought I'd",
    "start": "235519",
    "end": "241439"
  },
  {
    "text": "bring a few friends together and ask all sorts of newbie Outsider shallow questions so joining me today is go Time",
    "start": "241439",
    "end": "250079"
  },
  {
    "text": "Regular Chris brand what's up Chris oh hey doing pretty well on for the second",
    "start": "250079",
    "end": "255360"
  },
  {
    "text": "time this year this this first quarter has like flown by so quickly it was like you're back baby you're back yeah can't",
    "start": "255360",
    "end": "261799"
  },
  {
    "text": "believe it's like March or I guess April by the time this episode comes out yeah q1 is come and gone and here we are Q2",
    "start": "261799",
    "end": "268560"
  },
  {
    "text": "but what else is going to happen right every day another queue goes by yeah",
    "start": "268560",
    "end": "273600"
  },
  {
    "text": "that sentence didn't even make sense let's introduce Ian Lopshire I'm doing my mes Matt ryer impersonation with the",
    "start": "273600",
    "end": "279160"
  },
  {
    "text": "non seers so that's every time I say something silly or dumb just assume it was a Matt ryer impression we have Ian",
    "start": "279160",
    "end": "286160"
  },
  {
    "text": "Lopshire a guest but a common guest welcome back to go time Ian yeah happy to be here and I'm kind of reeling right",
    "start": "286160",
    "end": "292600"
  },
  {
    "text": "now because I hadn't thought that Q2 was over yet but just looked that date and no you're right Q2 isn't over q1 is is",
    "start": "292600",
    "end": "299680"
  },
  {
    "text": "almost over oh yeah my bad q1 yeah but still the quter is almost over I confused him by saying every day A Q",
    "start": "299680",
    "end": "306000"
  },
  {
    "text": "goes by q85 yeah settle down Ian settle down you don't have to freak out that much q1",
    "start": "306000",
    "end": "311919"
  },
  {
    "text": "is almost over and that's uh that's scary but here we are but here we are",
    "start": "311919",
    "end": "317360"
  },
  {
    "text": "and it's go time so before we get into my questions I've also gathered a few questions from go time audience and",
    "start": "317360",
    "end": "324639"
  },
  {
    "text": "Twitter folks about what they're curious about the go programming language I want",
    "start": "324639",
    "end": "330039"
  },
  {
    "text": "from each of you maybe don't go deep don't tell us about your birth and stuff but like getting into go and kind of the",
    "start": "330039",
    "end": "336919"
  },
  {
    "text": "language that you came from or the ecosystem you came from when you got into go and maybe what were some of your",
    "start": "336919",
    "end": "342919"
  },
  {
    "text": "trepidations or things that you were curious about prior to being like a go",
    "start": "342919",
    "end": "348080"
  },
  {
    "text": "time a full-time gopher a go time gopher also but just wri and go on a regular basis Ian you are a guest let's start",
    "start": "348080",
    "end": "354120"
  },
  {
    "text": "with you tell us a little bit about your origin with go yeah so preo I was writing mostly PHP and JavaScript and uh",
    "start": "354120",
    "end": "361120"
  },
  {
    "text": "the company I actually worked for at the time kind of decided they wanted to go with more compiled languages so we had like a choice of C or go and my team",
    "start": "361120",
    "end": "370280"
  },
  {
    "text": "went with go and I think the first like kind of questions and issues I had when",
    "start": "370280",
    "end": "376039"
  },
  {
    "text": "I started was around one like how to structure things like where does",
    "start": "376039",
    "end": "381319"
  },
  {
    "text": "everything go in one file do I make a thousand packages kind of that bit and the second one was a a lot around like",
    "start": "381319",
    "end": "388560"
  },
  {
    "text": "Jason and DC realization the io readers like coming from JavaScript and stuff",
    "start": "388560",
    "end": "393759"
  },
  {
    "text": "that was very confusing for that first like couple weeks Cool Chris how about you I think you hit on a couple things",
    "start": "393759",
    "end": "399400"
  },
  {
    "text": "actually that are in my list so I'm right there with you Chris go ahead so interestingly when I started my career I",
    "start": "399400",
    "end": "404639"
  },
  {
    "text": "almost started it with go I kind of looked at it got really confused actually by the colon equal syntax and",
    "start": "404639",
    "end": "410880"
  },
  {
    "text": "ran away also in my list okay keep going so I I started with PHP and then uh",
    "start": "410880",
    "end": "416360"
  },
  {
    "text": "funny little thing about me and S Boyer we both lived lived in the juple community for a while and uh I went to a",
    "start": "416360",
    "end": "422720"
  },
  {
    "text": "Meetup where I met him once and we were talking and I was like there's something I don't like about PHP and he was like",
    "start": "422720",
    "end": "427960"
  },
  {
    "text": "complexity you should try go it's all about Simplicity and that is how I started off looking into go and then I",
    "start": "427960",
    "end": "435039"
  },
  {
    "text": "just kind of went from there and I actually convinced a company I was working at to let me build projects in go and I guess the first things that I",
    "start": "435039",
    "end": "442560"
  },
  {
    "text": "kind of ran into were like I was so excited about concurrency I started putting channels and good routines everywhere and quickly learned how",
    "start": "442560",
    "end": "449440"
  },
  {
    "text": "terrible of an idea that is but then kind of stuck with the language for that Simplicity yeah very cool so to give a",
    "start": "449440",
    "end": "456960"
  },
  {
    "text": "little bit of my background so I've started off in Pearl back in the early 2000s went from Pearl to Ruby also",
    "start": "456960",
    "end": "464319"
  },
  {
    "text": "learned a little bit of C but just enough to be dangerous I never actually worked daily in see did Ruby for many",
    "start": "464319",
    "end": "469639"
  },
  {
    "text": "years added JavaScript of course because I've been in web development most of my life from there started writing Elixir",
    "start": "469639",
    "end": "476639"
  },
  {
    "text": "I've read Elixir quite a bit over the last six seven years is probably my primary language plus JavaScript because",
    "start": "476639",
    "end": "483240"
  },
  {
    "text": "again web development and my experience with go has been two small programs back",
    "start": "483240",
    "end": "491240"
  },
  {
    "text": "when I did client work I had a client who needed one endpoint and they needed to be really fast and it was just like a",
    "start": "491240",
    "end": "497599"
  },
  {
    "text": "Json endpoint that took like a few arguments and spit out different responses I came over the exact thing",
    "start": "497599",
    "end": "502960"
  },
  {
    "text": "and go this like pre 1.0 go was very new and I always I like the new shiny stuff",
    "start": "502960",
    "end": "508560"
  },
  {
    "text": "so I gave it a go back then and wrote that end point in go and it was probably",
    "start": "508560",
    "end": "514640"
  },
  {
    "text": "like 80 to 100 lines of code worked great thought it was really cool and",
    "start": "514640",
    "end": "519919"
  },
  {
    "text": "never had another use case for a long time CU everything from there was like Ruby on Rails apps was like the primary thing I was doing so picked it up and",
    "start": "519919",
    "end": "526839"
  },
  {
    "text": "dropped it then and then recently you know the go panic game show and the",
    "start": "526839",
    "end": "535760"
  },
  {
    "text": "what's the other one called so on JS party we call it front-end Feud goph for say that's what we call it goph",
    "start": "535760",
    "end": "541760"
  },
  {
    "text": "for SE has that that in browser UI with the scores and the faces and all the",
    "start": "541760",
    "end": "547399"
  },
  {
    "text": "questions and these things and that was like static HTML for a while well eventually I wanted the same thing to",
    "start": "547399",
    "end": "553519"
  },
  {
    "text": "drive the JS party side and the go time side with different stuff anyways I wrote a little go web server that's",
    "start": "553519",
    "end": "560959"
  },
  {
    "text": "again probably around 100 lines and this was like last fall uh picked it up I had a pretty good time with that and so I've",
    "start": "560959",
    "end": "567839"
  },
  {
    "text": "written probably like 200 lines go I'm not completely Noob right like but almost",
    "start": "567839",
    "end": "573760"
  },
  {
    "text": "completely Noob but I'm very interested in it because I'm interested in building a change log command line for fun and",
    "start": "573760",
    "end": "579440"
  },
  {
    "text": "for interest and I think it's a great language for that reason for",
    "start": "579440",
    "end": "584560"
  },
  {
    "text": "Distributing of command line applications it seems like it's simple for that purpose with universal binaries",
    "start": "584560",
    "end": "591839"
  },
  {
    "text": "and deployment and stuff not having to have shared libraries everywhere so",
    "start": "591839",
    "end": "597399"
  },
  {
    "text": "that's why I'm curious about it also just producing go time for many years I",
    "start": "597399",
    "end": "602720"
  },
  {
    "text": "know a lot about it kind of at a very shallow level which makes it less",
    "start": "602720",
    "end": "607920"
  },
  {
    "text": "intimidating than other languages like you know rust for example which I know there's a lot of interest in that and a",
    "start": "607920",
    "end": "613760"
  },
  {
    "text": "lot of comparisons and a lot of kind of verticals that both languages play in so",
    "start": "613760",
    "end": "619720"
  },
  {
    "text": "it would be another Contender but I'm very interested in go that being said there's stuff in go or as a person who",
    "start": "619720",
    "end": "626240"
  },
  {
    "text": "hasn't really written much of it I'm just like I don't get it it or why a lot of the questions are why why does it",
    "start": "626240",
    "end": "632200"
  },
  {
    "text": "work this way and the first one is slices and arrays so arrays in most",
    "start": "632200",
    "end": "639160"
  },
  {
    "text": "other languages it's like there's an array or a list or something but go has",
    "start": "639160",
    "end": "644880"
  },
  {
    "text": "these two and it's like one is like a sub I don't even understand it that much it seems like everybody uses slices all",
    "start": "644880",
    "end": "650560"
  },
  {
    "text": "the time can you guys explain to me what's a slice what's an array why are they different and when should I use",
    "start": "650560",
    "end": "656120"
  },
  {
    "text": "each one sure so for the first question there what's a slice and what's an array",
    "start": "656120",
    "end": "661399"
  },
  {
    "text": "an array is a I guess fixed size group of data I guess you could say that I'm",
    "start": "661399",
    "end": "667600"
  },
  {
    "text": "trying to like say it without saying the word array here or the word slice here but it's uh like an an iterable is also",
    "start": "667600",
    "end": "673440"
  },
  {
    "text": "a bad word but it's kind of like just like a slab of memory that you can have that's a fixed size so you can have an",
    "start": "673440",
    "end": "678839"
  },
  {
    "text": "array of like five integers or an array of 10 strings but they are fixed size so",
    "start": "678839",
    "end": "685399"
  },
  {
    "text": "you can't add another string there so you can't make that array that's of size 10 and two an array of size 11",
    "start": "685399",
    "end": "691639"
  },
  {
    "text": "that's a different slab of memory that you would have to go get whereas slices are much like arrays and that you can",
    "start": "691639",
    "end": "697800"
  },
  {
    "text": "have these kind of enumerations of things in them but they are resizable so you can go from a a slice that is size",
    "start": "697800",
    "end": "705160"
  },
  {
    "text": "10 to a slice of size 11 by adding something to it so it's kind of like the base level of the difference between a",
    "start": "705160",
    "end": "711760"
  },
  {
    "text": "slice and an array you can also kind of think of it as like a slice is a like pointer to an array and the programming",
    "start": "711760",
    "end": "718360"
  },
  {
    "text": "language just just does all of the magic for you when you need to get a larger array kind of just giving it to you and",
    "start": "718360",
    "end": "724560"
  },
  {
    "text": "handling all of the copying of what was in the old array into the new array and all of that okay so arrays sound more",
    "start": "724560",
    "end": "731120"
  },
  {
    "text": "like what we used to do in C where it's like you alloc you you pre-allocate slots or memory for a fixed length and",
    "start": "731120",
    "end": "739040"
  },
  {
    "text": "if you want to go beyond that obviously you walk off the side of an array now you're overflow land and security",
    "start": "739040",
    "end": "744480"
  },
  {
    "text": "problems but you could then have a pointer to that there's things you can do in order to allocate new space and",
    "start": "744480",
    "end": "750320"
  },
  {
    "text": "copy things over whereas a slice I think I'm with you Ian do you want to amend or help anything Chris said I mean Chris",
    "start": "750320",
    "end": "757920"
  },
  {
    "text": "pretty much covered it but like the way I think about it is a slice is like what an array should be that's why it goes to",
    "start": "757920",
    "end": "764519"
  },
  {
    "text": "my next question is why are there two separate data structures or I guess concepts are they just Concepts or are",
    "start": "764519",
    "end": "769639"
  },
  {
    "text": "they data structures I don't know they're different data structures okay you never really see the underlying data",
    "start": "769639",
    "end": "775480"
  },
  {
    "text": "structures of a slice it's kind of opaque okay the fair enough there are different data structures why are there",
    "start": "775480",
    "end": "782360"
  },
  {
    "text": "two I mean goes about simplicity so like in JavaScript there's an array and that's what you got but in go there's",
    "start": "782360",
    "end": "789160"
  },
  {
    "text": "two sort of I would take a guess at this is probably uh language lore which",
    "start": "789160",
    "end": "794880"
  },
  {
    "text": "someone can probably answer from our community out there but I would say that they probably started with just arrays and then realized these aren't very",
    "start": "794880",
    "end": "801600"
  },
  {
    "text": "friendly to use but in the way that go is simple it has like tools that are",
    "start": "801600",
    "end": "806720"
  },
  {
    "text": "purpose built for one job when you need an array you really need an array you",
    "start": "806720",
    "end": "811839"
  },
  {
    "text": "really want that fix siiz things you want the property of that fix siiz thing so they couldn't just make an array into",
    "start": "811839",
    "end": "818279"
  },
  {
    "text": "a slice really I also assume that has something to do with typing in the language because when you have a slice",
    "start": "818279",
    "end": "825040"
  },
  {
    "text": "and like the way that you add things to a slice if you use this function called append and you kind of like put a slice",
    "start": "825040",
    "end": "830959"
  },
  {
    "text": "in and you get a slice back out but like the types of those slices need to match each other for that function to work and",
    "start": "830959",
    "end": "837880"
  },
  {
    "text": "I I imagine it would have been more complicated to do that with arrays because in go is in addition to like you",
    "start": "837880",
    "end": "844480"
  },
  {
    "text": "can't kind of resize an array arrays of different sizes are different types so",
    "start": "844480",
    "end": "849639"
  },
  {
    "text": "an array of five strings is a different type from an array of Six Strings is a different type when array you of seven",
    "start": "849639",
    "end": "855560"
  },
  {
    "text": "strings whereas a slice of strings is a slice of strings no matter how many what are no matter the capacity of that slice",
    "start": "855560",
    "end": "862959"
  },
  {
    "text": "what it actually is at the end of the day gotcha so just use slices pretty much unless you know better yeah for",
    "start": "862959",
    "end": "869120"
  },
  {
    "text": "beginners there's very few reasons why you would want to use an array array is definitely one of those like Advanced",
    "start": "869120",
    "end": "875839"
  },
  {
    "text": "user tools okay I think as a beginner you come to it from a different language",
    "start": "875839",
    "end": "880920"
  },
  {
    "text": "and you're like what I need here is an array and so because that's what it's called elsewhere and so then you go",
    "start": "880920",
    "end": "886079"
  },
  {
    "text": "searching for arrays and then you find something that seems more comple not complex but lower level perhaps than",
    "start": "886079",
    "end": "891720"
  },
  {
    "text": "what you're used to and so then you're like okay slices and then you start to wonder we probably should have named it",
    "start": "891720",
    "end": "896759"
  },
  {
    "text": "like array and static array so whereas an array would be equivalent to what a slice is now and a static array would be",
    "start": "896759",
    "end": "902360"
  },
  {
    "text": "what we have in an array now I think slice in general is just not in other",
    "start": "902360",
    "end": "907519"
  },
  {
    "text": "languages as a data structure and so it's somewhat unique to go yeah at least in my experience where I'm coming from",
    "start": "907519",
    "end": "914680"
  },
  {
    "text": "see how I hedge that quite a bit at the end thinking there's lots of languages out there Jared maybe it's common",
    "start": "914680",
    "end": "920360"
  },
  {
    "text": "elsewhere that I don't know okay let's stick with some syntax thing so the equal sign and the callon equals thing w",
    "start": "920360",
    "end": "928680"
  },
  {
    "text": "t f i don't know Ian let's let you go first on this one the quick assignment I think it exists so that you don't have",
    "start": "928680",
    "end": "934880"
  },
  {
    "text": "to define the type of a variable I mean quick assignment I can just say whatever this type I'm assigning to this is the",
    "start": "934880",
    "end": "941800"
  },
  {
    "text": "type of this variable otherwise you have to define a type so I think it just adds some some expression it really is is it",
    "start": "941800",
    "end": "949240"
  },
  {
    "text": "syntax sugar then I mean it's that's the colon equals is the quick assignment you want to add something to that Chris I",
    "start": "949240",
    "end": "955000"
  },
  {
    "text": "really just think it's for ease of writing so with the quick assignment you do not have to explicitly declare the type of the variable yeah and it also uh",
    "start": "955000",
    "end": "962800"
  },
  {
    "text": "it gives the language more of a feel of like a dynamically typed language as well because there are some specific",
    "start": "962800",
    "end": "970240"
  },
  {
    "text": "things in go that are kind of type ambiguous until you say what the type is",
    "start": "970240",
    "end": "976040"
  },
  {
    "text": "constant numbers are an example of this they're this special like number type and then like the language will",
    "start": "976040",
    "end": "981800"
  },
  {
    "text": "eventually figure out what that type is when you kind of get more specific with it so like by not declaring what the",
    "start": "981800",
    "end": "987959"
  },
  {
    "text": "type is up front you get a little bit more flexibility to kind of like decide what this thing is going to be at a",
    "start": "987959",
    "end": "993160"
  },
  {
    "text": "later date which you couldn't do if you had to kind of declare it right up front like you do with VAR and the regular",
    "start": "993160",
    "end": "998720"
  },
  {
    "text": "equal sign okay so coming from Dynamic languages mostly I would just want to use Quick assignment all the time",
    "start": "998720",
    "end": "1005000"
  },
  {
    "text": "because I would always want to defer that until later but I don't see it used all the time so there are times where",
    "start": "1005000",
    "end": "1010519"
  },
  {
    "text": "VAR or the equals the non-quick the slow assignment is just preferable maybe just",
    "start": "1010519",
    "end": "1015600"
  },
  {
    "text": "know right up front so you might as well declare it yeah yeah like you I might be",
    "start": "1015600",
    "end": "1020800"
  },
  {
    "text": "wrong about this but I don't think you can use uh the quick assignment outside of a a function so if you're just like",
    "start": "1020800",
    "end": "1027038"
  },
  {
    "text": "in the global space you have to use VAR I think I hit that and I wondered why and then also if you only have like if",
    "start": "1027039",
    "end": "1034600"
  },
  {
    "text": "you're trying to assign something to a property of a struct you can't use Quick",
    "start": "1034600",
    "end": "1039918"
  },
  {
    "text": "assignment even if you're doing multiple assignment you have to use regular equals there so you kind of have to declare the type you have to use VAR and",
    "start": "1039919",
    "end": "1047640"
  },
  {
    "text": "declare types for that I would also say that sometimes a lot of the time when I you like don't use Quick",
    "start": "1047640",
    "end": "1054039"
  },
  {
    "text": "assignment it's because I want the type there for documentation purposes so leaning more into the knowing the type",
    "start": "1054039",
    "end": "1060280"
  },
  {
    "text": "of this upfront makes it easier for people to read and understand like you know oh this is going to be this",
    "start": "1060280",
    "end": "1066200"
  },
  {
    "text": "specific thing instead of something more ambiguous I kind of think of it as creating the variable then assigning it",
    "start": "1066200",
    "end": "1073120"
  },
  {
    "text": "so like if you're inside like a new scope the quick assignment Will Shadow variables outside of that scope so it's",
    "start": "1073120",
    "end": "1078679"
  },
  {
    "text": "really like redefining the the variable and then assigning say that again in other words I think I with you but I",
    "start": "1078679",
    "end": "1084960"
  },
  {
    "text": "want I want you to say it in other words so say I have I'm writing a closure right where I have something coming in",
    "start": "1084960",
    "end": "1090960"
  },
  {
    "text": "right if I do quick assignment inside of that like the next scope it's going to",
    "start": "1090960",
    "end": "1096159"
  },
  {
    "text": "Shadow the variable that was a horrible example it's going to overwrite what was outside of the closure it's not going to overwrite it it's going to define a new",
    "start": "1096159",
    "end": "1103159"
  },
  {
    "text": "variable and inside of that scope you can only reference the new one the new",
    "start": "1103159",
    "end": "1108200"
  },
  {
    "text": "one oh that's not good I mean it's desirable sometimes but if you use the equal sign it's going to set the value",
    "start": "1108200",
    "end": "1114280"
  },
  {
    "text": "outside of this code okay when is shadowing desirable this might be tough because you might have to like have",
    "start": "1114280",
    "end": "1119640"
  },
  {
    "text": "pre-thought of an example but when would shadowing be desirable to me it sounds like just just a a assess pool for bugs",
    "start": "1119640",
    "end": "1126520"
  },
  {
    "text": "so this is kind of a a a weird case but inside of a for Loop okay sometimes you",
    "start": "1126520",
    "end": "1132000"
  },
  {
    "text": "do want to Shadow because the way the forward loops work is it'll it'll save",
    "start": "1132000",
    "end": "1137280"
  },
  {
    "text": "the the reference outside inside of the the loop so as the loop goes through you're going to your variable is going to change but if you do a quick",
    "start": "1137280",
    "end": "1143760"
  },
  {
    "text": "assignment inside of it you can save the like copy the value into the new scope okay do you know how to say that better",
    "start": "1143760",
    "end": "1149960"
  },
  {
    "text": "Chris I don't know how to say it without showing a picture I think I tracked it but yeah Chris go ahead yeah yeah it's",
    "start": "1149960",
    "end": "1155400"
  },
  {
    "text": "it's basically like you know if you have a good variable name and you want to reuse it but you don't want to affect",
    "start": "1155400",
    "end": "1161039"
  },
  {
    "text": "things outside of the loop or the function that you're using that's a good way of saying it so you're appealing to",
    "start": "1161039",
    "end": "1167039"
  },
  {
    "text": "my desire not to think of another name now you'll see I equals I a lot like I",
    "start": "1167039",
    "end": "1172720"
  },
  {
    "text": "see I equals cool equals yeah I gotcha this thing that I think a lot of new people run into when they first start",
    "start": "1172720",
    "end": "1178480"
  },
  {
    "text": "using go routines and Loops if when you kind of get into the loop you don't",
    "start": "1178480",
    "end": "1183919"
  },
  {
    "text": "reassign the variable to something that is more locally scoped to that and you try to use that inside the go routine",
    "start": "1183919",
    "end": "1190080"
  },
  {
    "text": "all of the go routines will basically see the last value of the loop instead",
    "start": "1190080",
    "end": "1195320"
  },
  {
    "text": "of like if you have like a loop that like has numbers one through 10 and you iterate through and start a bunch of go",
    "start": "1195320",
    "end": "1200799"
  },
  {
    "text": "routines all the go routines will see 10 as the value they're operating off of if you don't reassign inside of that gotcha",
    "start": "1200799",
    "end": "1207640"
  },
  {
    "text": "so there are like some uses around of that um this always Burns me when I'm doing unit testing because that's one of",
    "start": "1207640",
    "end": "1213640"
  },
  {
    "text": "the areas where I start like using go routines and closures and I'm like why isn't this working properly it's like oh",
    "start": "1213640",
    "end": "1219400"
  },
  {
    "text": "right I have to do this like T colon equals T sort of thing in order to like rcope or like redefine that variable",
    "start": "1219400",
    "end": "1226679"
  },
  {
    "text": "within that iteration Loop so it gets the routine properly there are other ways to handle that as well that are a",
    "start": "1226679",
    "end": "1231880"
  },
  {
    "text": "bit more explicit but that's definitely where I think it gets shadowing is used the most often to like make it so that",
    "start": "1231880",
    "end": "1237480"
  },
  {
    "text": "it's not a bug and actually something that's helpful for you yeah yeah yeah so it sounds like the implicit nature there",
    "start": "1237480",
    "end": "1243320"
  },
  {
    "text": "seems like almost not a go way of doing things but I understand it for simp for",
    "start": "1243320",
    "end": "1249919"
  },
  {
    "text": "I guess syntactic Simplicity but the implicit maybe it's an idiom that once you get into go you're just like",
    "start": "1249919",
    "end": "1256600"
  },
  {
    "text": "everybody knows oh this is a quick assignment and so this is like purposeful shadowing kind of a thing or",
    "start": "1256600",
    "end": "1262520"
  },
  {
    "text": "vice versa is the quick assignment the shadower or is the explicit assignment the shadower uh quick assignment is I",
    "start": "1262520",
    "end": "1269640"
  },
  {
    "text": "mean you can technically do shadowing with either but the quick assignment is where people usually get tripped up so",
    "start": "1269640",
    "end": "1275919"
  },
  {
    "text": "when you guys who are like seasoned Gophers see a quick assignment inside of a for Loop for instance or maybe with",
    "start": "1275919",
    "end": "1281840"
  },
  {
    "text": "closures or with go routines or you just immediately know what's going on there you're like oh I know because it's I and",
    "start": "1281840",
    "end": "1288200"
  },
  {
    "text": "ey or whatever why that's there yeah like there's sometimes where it's just like if I'm looking at some code and all",
    "start": "1288200",
    "end": "1294200"
  },
  {
    "text": "of a sudden I see like especially like in testing when it's t colon equals T I'll be like oh yeah that has to be",
    "start": "1294200",
    "end": "1299400"
  },
  {
    "text": "there or as I think other newer people will be like what's that doing I don't understand right right right so definely",
    "start": "1299400",
    "end": "1305360"
  },
  {
    "text": "when I see that but that doesn't make us immune from shadowing bugs like I've written my fair amount of shadowing bugs",
    "start": "1305360",
    "end": "1310720"
  },
  {
    "text": "where I've spent a lot of time decking being like why is this error nil and it's like oh because I went into this",
    "start": "1310720",
    "end": "1317200"
  },
  {
    "text": "different scope and I reassigned air so in the larger scope it's still nil yeah that's happened to me too many times",
    "start": "1317200",
    "end": "1324440"
  },
  {
    "text": "yeah I think especially in air and airor handling shadowing happens a lot and it's just part of the language really",
    "start": "1324440",
    "end": "1329919"
  },
  {
    "text": "like just part of the language fair enough so by the way we have people in the gotime FM chat sounding off a little",
    "start": "1329919",
    "end": "1337640"
  },
  {
    "text": "bit with some definitions and whatnot so that's cool Dylan Bor says array is fixed size list of items slice is a",
    "start": "1337640",
    "end": "1345039"
  },
  {
    "text": "pointer air quotes to some subset of an array so a nice simple explainer there",
    "start": "1345039",
    "end": "1350320"
  },
  {
    "text": "if yall are looking up definitions or helping us out with examples sometimes it's hard to think on your feet and we",
    "start": "1350320",
    "end": "1356080"
  },
  {
    "text": "can have them read off afterwards if you're not hanging out in the go time FM channel what is wrong we're all hanging",
    "start": "1356080",
    "end": "1361559"
  },
  {
    "text": "out in there live during the show you can participate and be part of the fun so hop into go time FM of the goer slack",
    "start": "1361559",
    "end": "1368840"
  },
  {
    "text": "during our shows okay let's go on to a bigger question these are kind of small",
    "start": "1368840",
    "end": "1375679"
  },
  {
    "text": "language things what's the state-ofthe-art on dependency management how do I use other people's code in the",
    "start": "1375679",
    "end": "1383279"
  },
  {
    "text": "idiomatic best way today um I I I know there's like a history here so I'm not ignorant to any of the history but I",
    "start": "1383279",
    "end": "1390120"
  },
  {
    "text": "just want to know like just starting today if I'm going to start writing go what's the way that I should do it I think if you're starting today 100%",
    "start": "1390120",
    "end": "1396799"
  },
  {
    "text": "Embrace modules and just use it it works well especially for new projects okay is",
    "start": "1396799",
    "end": "1402120"
  },
  {
    "text": "that what everyone's doing yeah modules is like the the way of I guess the future for for right now way of the",
    "start": "1402120",
    "end": "1408919"
  },
  {
    "text": "Future Okay so if you're like getting started with a brand new project I mean I use for all my new stuff I use modules",
    "start": "1408919",
    "end": "1414640"
  },
  {
    "text": "as well so yeah it's just like okay get some modules you can still the all of the commands are the same as they used",
    "start": "1414640",
    "end": "1421240"
  },
  {
    "text": "to be so you still use goget to get dependencies and all that sort of stuff right but yeah you know when you open up",
    "start": "1421240",
    "end": "1426480"
  },
  {
    "text": "a new folder run go mod and it with the name of the the project what you want to name your module or your project and",
    "start": "1426480",
    "end": "1433120"
  },
  {
    "text": "there you can start just doing go get whatever to go download some stuff and after the races okay well that was an",
    "start": "1433120",
    "end": "1440240"
  },
  {
    "text": "easy [Music]",
    "start": "1440240",
    "end": "1447640"
  },
  {
    "text": "one this episode is brought to you by our friends at Square millions of square",
    "start": "1447640",
    "end": "1453039"
  },
  {
    "text": "sellers use the square app Marketplace to discover and install apps they rely on daily to run their businesses and the",
    "start": "1453039",
    "end": "1459640"
  },
  {
    "text": "way you get your app there is by becoming a square app partner let me tell you how this works as a square app",
    "start": "1459640",
    "end": "1466600"
  },
  {
    "text": "partner you can offer and monetize your apps directly to square sellers in the app Marketplace to millions of sellers",
    "start": "1466600",
    "end": "1473919"
  },
  {
    "text": "you can Leverage The Square platform to build robust e-commerce websites smart payment Integrations and custom",
    "start": "1473919",
    "end": "1480120"
  },
  {
    "text": "solutions for millions of businesses and here's the best part you get to keep 100% of Revenue while you grow Square",
    "start": "1480120",
    "end": "1487840"
  },
  {
    "text": "collects a 0% cut from your sales for the first year or your first 100 square referred sellers that way you can focus",
    "start": "1487840",
    "end": "1494960"
  },
  {
    "text": "on building and growing your Square customer base and you get to set your own pricing models you also get a ton of",
    "start": "1494960",
    "end": "1501360"
  },
  {
    "text": "support from Square you get access to Square's technical team using slack you get insights into the performance of",
    "start": "1501360",
    "end": "1507240"
  },
  {
    "text": "your app on the app Marketplace and of course you get direct access to new product launches and all this begins at",
    "start": "1507240",
    "end": "1514240"
  },
  {
    "text": "changel log.com Square again changel log.com",
    "start": "1514240",
    "end": "1519310"
  },
  {
    "text": "[Music]",
    "start": "1519310",
    "end": "1525630"
  },
  {
    "text": "Square",
    "start": "1526679",
    "end": "1529679"
  },
  {
    "text": "so I've said idiomatic go a couple of times I know that's a a term that perhaps is falling in or out of favor",
    "start": "1533080",
    "end": "1539279"
  },
  {
    "text": "the term idiomatic I know I've heard either unpopular opinions or maybe just conversations about like let's not use",
    "start": "1539279",
    "end": "1544679"
  },
  {
    "text": "that term so whatever term you want to put in front of go that means like kind of Norm normative I don't know like the",
    "start": "1544679",
    "end": "1551679"
  },
  {
    "text": "way people write code aside from using the formatter which seems like obviously",
    "start": "1551679",
    "end": "1556720"
  },
  {
    "text": "would normalize a bunch of code into some sort of idiomatic fashion that everybody thinks is good what are some",
    "start": "1556720",
    "end": "1563840"
  },
  {
    "text": "examples of common go idioms or things that you should be doing that most",
    "start": "1563840",
    "end": "1569120"
  },
  {
    "text": "Gophers do I don't know if you guys have like a pep or something like they do in python or it's like is there the go way",
    "start": "1569120",
    "end": "1575279"
  },
  {
    "text": "or is it you don't need it so much CU there's kind of just one way I think with looping I kind of like the fact",
    "start": "1575279",
    "end": "1580520"
  },
  {
    "text": "that there's really just one way it's cool but sure there's other ways of doing things do you guys have some",
    "start": "1580520",
    "end": "1586440"
  },
  {
    "text": "examples of like this is kind of a go way of coding and this is I've heard",
    "start": "1586440",
    "end": "1591480"
  },
  {
    "text": "like writing Java in your go or writing Ruby in your go what are some things that are quote unquote idiomatic go I",
    "start": "1591480",
    "end": "1597720"
  },
  {
    "text": "think a a lot of like the way that we name things especially around capitalizations like one of the big big",
    "start": "1597720",
    "end": "1604679"
  },
  {
    "text": "big differences between go and other languages is how ID is capitalized so if you have something that's like an",
    "start": "1604679",
    "end": "1610159"
  },
  {
    "text": "identifier it's capital I capital D and that is like a very solid go idiom and I",
    "start": "1610159",
    "end": "1615440"
  },
  {
    "text": "think the linters might yell at you now for that if they don't I hope they do oh really but yeah like how you um kind of",
    "start": "1615440",
    "end": "1621000"
  },
  {
    "text": "capitalize initialisms and also like constants and go aren't supposed to be all caps and they're supposed to just",
    "start": "1621000",
    "end": "1627200"
  },
  {
    "text": "look like regular variables so I guess like the the idioms that always come to mind are for me are those sorts of",
    "start": "1627200",
    "end": "1632919"
  },
  {
    "text": "things about like how does go look from that kind of perspective obviously things also like we use camel case and",
    "start": "1632919",
    "end": "1639120"
  },
  {
    "text": "not snake case sure what about like globals do gophers like globals I think globals are discouraged I mean we do",
    "start": "1639120",
    "end": "1646159"
  },
  {
    "text": "have like the init function so they're supported I think they're discouraged in the community you're",
    "start": "1646159",
    "end": "1651840"
  },
  {
    "text": "discouraging me from using them here I would discourage you from using globals yes I mean of course there are times",
    "start": "1651840",
    "end": "1657200"
  },
  {
    "text": "when you want to use globals and it's it makes sense but yeah outside the main",
    "start": "1657200",
    "end": "1662519"
  },
  {
    "text": "package I would almost say don't use them yeah that's what I was going to say like you can use them in Main and you're",
    "start": "1662519",
    "end": "1668760"
  },
  {
    "text": "like all right but certainly if you have your own Library if you're like",
    "start": "1668760",
    "end": "1674120"
  },
  {
    "text": "providing a library you shouldn't use them and certainly not use them if they're public like there's some cases",
    "start": "1674120",
    "end": "1680279"
  },
  {
    "text": "for private globals but public globals just get you into all sorts of messes so",
    "start": "1680279",
    "end": "1686039"
  },
  {
    "text": "okay so one thing Matt ryer has told me a pattern that he observes is like his",
    "start": "1686039",
    "end": "1691240"
  },
  {
    "text": "main function doesn't do very much like it's basically like calling the rest of his program is that a Matt rism or is",
    "start": "1691240",
    "end": "1698039"
  },
  {
    "text": "that like a go for good idea I mean I wrote the programs I wrote main is basically the like everything's in there",
    "start": "1698039",
    "end": "1704039"
  },
  {
    "text": "except for like my structs and some functions are outside but they get called in there but like it's the gist of things cuz it's a very simple program",
    "start": "1704039",
    "end": "1709919"
  },
  {
    "text": "but is that something that is discouraged like maybe like skinny Mane is kind of like an idiom maybe I think",
    "start": "1709919",
    "end": "1715440"
  },
  {
    "text": "that is there's different forms of this you see in the community like sometimes you see like it's literally one line in",
    "start": "1715440",
    "end": "1720880"
  },
  {
    "text": "the main right and then the rest is in a different package but I think the idea of keeping most of like any kind of",
    "start": "1720880",
    "end": "1727799"
  },
  {
    "text": "business logic any of that out of main is pretty ubiquitous in the community I feel like it's maybe not an idiom I feel",
    "start": "1727799",
    "end": "1733640"
  },
  {
    "text": "like it's still somewhat contentious cuz I hate this pattern like I really don't like this PN at all here comes Chris now",
    "start": "1733640",
    "end": "1739279"
  },
  {
    "text": "with the honesty see how he eased into it he's like no I'm done easing I hate this pattern I get the intention of it",
    "start": "1739279",
    "end": "1744760"
  },
  {
    "text": "right we want to make everything testable but I feel like that I feel like that kind of ignores a lot of the",
    "start": "1744760",
    "end": "1750559"
  },
  {
    "text": "other other things that make it testable at the end of the day right like ripping all of the guts out of the main function so you can put in another function you",
    "start": "1750559",
    "end": "1756320"
  },
  {
    "text": "can run and go test it doesn't fix a problem with say environment variables which are could still be kind of",
    "start": "1756320",
    "end": "1761600"
  },
  {
    "text": "annoying or other globals that can sneak in at the end of the day so I understand like the intent of saying well we should",
    "start": "1761600",
    "end": "1767039"
  },
  {
    "text": "have this smaller main function that you can then go and like test more easily",
    "start": "1767039",
    "end": "1772760"
  },
  {
    "text": "but I think actually doing that misses the point a lot of the time like thises the thing that we're actually trying to",
    "start": "1772760",
    "end": "1777919"
  },
  {
    "text": "tell people which is like don't use globals write smaller functions write smaller pieces that compose together",
    "start": "1777919",
    "end": "1783039"
  },
  {
    "text": "better that you can test more easily and I also think it discourages people from kind of running the whole binary and",
    "start": "1783039",
    "end": "1789120"
  },
  {
    "text": "putting that under test and figuring out how to test the application as a whole maybe outside of the go testing Library",
    "start": "1789120",
    "end": "1795679"
  },
  {
    "text": "it's kind of like a a way of escaping around it and saying well I don't have to do this anymore because I can run all",
    "start": "1795679",
    "end": "1802440"
  },
  {
    "text": "of my um test functions on this like kind of pseudo main that I've",
    "start": "1802440",
    "end": "1807679"
  },
  {
    "text": "created in your response so like the practice that I I generally use is I do",
    "start": "1807679",
    "end": "1813519"
  },
  {
    "text": "end up with pretty big main files but all it does is set up dependencies like I understand what Chris is saying you",
    "start": "1813519",
    "end": "1818840"
  },
  {
    "text": "probably should be doing some testing outside of like as the application as a whole but I think just keeping the main",
    "start": "1818840",
    "end": "1825080"
  },
  {
    "text": "small probably does encourage better testable code even if it leaves",
    "start": "1825080",
    "end": "1830679"
  },
  {
    "text": "out some other pieces it's like we shouldn't not do it because it doesn't solve the complet the problem completely",
    "start": "1830679",
    "end": "1836200"
  },
  {
    "text": "like it gets us part of the way there right I'm G Counterpoint that for a second please do now we're having fun I",
    "start": "1836200",
    "end": "1842559"
  },
  {
    "text": "mean I see this argument all the time of like the it gets us a step in the right direction but I really do like a lot of the code bases I've seen that enact this",
    "start": "1842559",
    "end": "1849240"
  },
  {
    "text": "skinny main thing do really just forget about you know setting up proper configuration having configuration be",
    "start": "1849240",
    "end": "1855919"
  },
  {
    "text": "sane having the boot strapping code look good having a an actual application",
    "start": "1855919",
    "end": "1861039"
  },
  {
    "text": "kernel like these are the things that we actually want at the end of the day like we want the structure of how applications boot up to be really nice",
    "start": "1861039",
    "end": "1867880"
  },
  {
    "text": "but instead what I feel like we got is okay well now everybody just shoves all of the gross code they were putting in main into this other function that is",
    "start": "1867880",
    "end": "1875519"
  },
  {
    "text": "effectively the same thing except now you can return an error from it and skipping out on all that good stuff that we actually want so I feel like it's a",
    "start": "1875519",
    "end": "1881880"
  },
  {
    "text": "distraction and when you have to go back and actually sit there with that main function and perhaps not be able to test",
    "start": "1881880",
    "end": "1886919"
  },
  {
    "text": "it with just unit tests and have to test it in like a real way that forces you to have to do things in in a way that you",
    "start": "1886919",
    "end": "1893360"
  },
  {
    "text": "wouldn't otherwise it's one of those sneaky things that's like well this feels like progress but it's actually",
    "start": "1893360",
    "end": "1898720"
  },
  {
    "text": "progress leading you to like a dead end in the Maze so like unless we're going to try and scale the walls of the the",
    "start": "1898720",
    "end": "1904919"
  },
  {
    "text": "Labyrinth like we got to turn around and like figure out a different path forward love the analogy I'll give you that that",
    "start": "1904919",
    "end": "1910480"
  },
  {
    "text": "it does provide kind of a a way out and can let us not do things we should be",
    "start": "1910480",
    "end": "1915519"
  },
  {
    "text": "doing so I'll give you that one right some of it's like uh you know that old saying about laws like they keep the",
    "start": "1915519",
    "end": "1921799"
  },
  {
    "text": "honest people honest some of it's like these idioms or these patterns will keep the people who are going to do good",
    "start": "1921799",
    "end": "1927880"
  },
  {
    "text": "tests doing good tests but like the one who wasn't going to anyway whether they shove it all in M or put it into a",
    "start": "1927880",
    "end": "1934279"
  },
  {
    "text": "different function immediately it's not going to change who they are or the way they code you know it's like some of it's I can see that where it's like this",
    "start": "1934279",
    "end": "1941559"
  },
  {
    "text": "is a good pattern but it forces it helps you do this thing that the problem is we're not doing that thing anyways and",
    "start": "1941559",
    "end": "1948480"
  },
  {
    "text": "like it doesn't fix that particular problem I would actually say there too that's kind of what differentiates what I would consider an idiom and go from",
    "start": "1948480",
    "end": "1956039"
  },
  {
    "text": "just like a practice that people are trying to make or best practice I feel like most of the idioms really all of",
    "start": "1956039",
    "end": "1961760"
  },
  {
    "text": "the idioms we have are these deeply nuanced things that like sometimes we can give like a little quick like like",
    "start": "1961760",
    "end": "1967960"
  },
  {
    "text": "the go Proverbs which I think are great where it's like this little quick sentence but if you actually start pulling it apart it gets more and more",
    "start": "1967960",
    "end": "1974639"
  },
  {
    "text": "complex and there's just more and more uh pieces that you want to pull apart to get a good understanding of it and I",
    "start": "1974639",
    "end": "1980279"
  },
  {
    "text": "think that when you have things like just have a skinny man to make it more testable and it ends there it's like well where's the depth to that how do I",
    "start": "1980279",
    "end": "1987159"
  },
  {
    "text": "keep going how when I encounter something where this doesn't fit properly that the idiom still works like",
    "start": "1987159",
    "end": "1992440"
  },
  {
    "text": "it doesn't have that same amount of teeth to it or that depth to it um which I think a lot of the other idioms do",
    "start": "1992440",
    "end": "1998039"
  },
  {
    "text": "wind up having that depth to them so if I wanted to learn a bunch of go idioms would would you suggest reading go",
    "start": "1998039",
    "end": "2004399"
  },
  {
    "text": "Proverbs would that be the suggestion yeah yeah I think go Proverbs still apply I think some people think that",
    "start": "2004399",
    "end": "2010200"
  },
  {
    "text": "they're they're dated but I think that they are pretty good I think also like code review comments which is this thing",
    "start": "2010200",
    "end": "2015600"
  },
  {
    "text": "that's in the go GitHub Wiki is actually pretty good and as those are also pretty much like idioms is there's some idiom",
    "start": "2015600",
    "end": "2022720"
  },
  {
    "text": "sprinkle throughout there but I think those are two good sources for for idioms of the language nice the go",
    "start": "2022720",
    "end": "2028480"
  },
  {
    "text": "Proverbs were actually something that kind of Drew me into go like the first time I read all of those I was like oh wow these all make a lot of sense and",
    "start": "2028480",
    "end": "2034720"
  },
  {
    "text": "they I don't think they're dated they read resonated with you yeah definitely okay so there's a good litmus test",
    "start": "2034720",
    "end": "2041200"
  },
  {
    "text": "perhaps for the go curious if you're wondering if go would speak your language or it speak to you is go read",
    "start": "2041200",
    "end": "2047440"
  },
  {
    "text": "the go Proverbs and see if you agree or if they're saying things that you think Mak sense or maybe it's unpalatable for",
    "start": "2047440",
    "end": "2054800"
  },
  {
    "text": "you then maybe look elsewhere so that's good advice let's talk about web apps",
    "start": "2054800",
    "end": "2060118"
  },
  {
    "text": "this question actually came in from Twitter is go and the ecosystem in a place where it can compete with rails",
    "start": "2060119",
    "end": "2066000"
  },
  {
    "text": "laravel SL Jango for dynamic websites I don't think so okay honestly I mean",
    "start": "2066000",
    "end": "2073000"
  },
  {
    "text": "that's a style of development that I don't think go is like particularly suited for those big like monolithic",
    "start": "2073000",
    "end": "2078520"
  },
  {
    "text": "like serers side rendered apps I'm just not sure it makes sense in the frame of go what is it about the language or the",
    "start": "2078520",
    "end": "2085200"
  },
  {
    "text": "ecosystem that makes you say that is it the strong typing or the lack of the",
    "start": "2085200",
    "end": "2091480"
  },
  {
    "text": "fact they're dealing with about Dynamic user generated content or what is it I think it's a lot like the distrust of",
    "start": "2091480",
    "end": "2098480"
  },
  {
    "text": "magic if you think about like rails or something like that or wire what's is that the new rails like Dynamic front",
    "start": "2098480",
    "end": "2104760"
  },
  {
    "text": "inbit hot wire yeah hot wire all of that just does things and you have no idea",
    "start": "2104760",
    "end": "2110160"
  },
  {
    "text": "what it's doing I think that's not tolerated well in go in the go community so let me translate that and see if I'm",
    "start": "2110160",
    "end": "2117480"
  },
  {
    "text": "I'm picking up what you're saying here because Dynamic web apps that have a lot of user generated content or input",
    "start": "2117480",
    "end": "2124640"
  },
  {
    "text": "building those at scale I don't mean scale of like users but like breadth of",
    "start": "2124640",
    "end": "2129880"
  },
  {
    "text": "surface area lots of forms lots of pages lots of what have you is requires from a",
    "start": "2129880",
    "end": "2136560"
  },
  {
    "text": "framework perhaps a lot of either code generation or reflection based stuff to",
    "start": "2136560",
    "end": "2144480"
  },
  {
    "text": "make you not have to write a bunch of code yourself every time you wire up a form and go it's not against the code",
    "start": "2144480",
    "end": "2150960"
  },
  {
    "text": "gen at least it seems like but it's against the metaprogramming stuff that",
    "start": "2150960",
    "end": "2157480"
  },
  {
    "text": "rails and these other ones use in order to cut down on your scaffolding and your coding is that kind of what you're",
    "start": "2157480",
    "end": "2163560"
  },
  {
    "text": "saying or did I just say a bunch of stuff that you didn't say no that is what I'm saying okay as you say it back I'm not totally sure I agree with what",
    "start": "2163560",
    "end": "2169680"
  },
  {
    "text": "I'm saying that was kind of the purpose of the practice to see if we were I think",
    "start": "2169680",
    "end": "2176400"
  },
  {
    "text": "there is something in the go community that does dislike the idea of these big Frameworks these big things and I'm not",
    "start": "2176400",
    "end": "2183040"
  },
  {
    "text": "sure if it's reasonable like a one a full service framework yeah I'm not sure it's reason but it does exist okay I",
    "start": "2183040",
    "end": "2188480"
  },
  {
    "text": "don't think we can deny like the skepticism of that exists okay I feel like we're comparing uh app oranges a",
    "start": "2188480",
    "end": "2194280"
  },
  {
    "text": "little bit cuz it's like you know Ruby Jango these are not languages right the language ER is Ruby python whatever I",
    "start": "2194280",
    "end": "2200359"
  },
  {
    "text": "think go is a good language for building these things if you actually have the time and patience to like ramp up and",
    "start": "2200359",
    "end": "2207520"
  },
  {
    "text": "actually build it yourself right like I think if if you just want the experience of like what rails gives you and have this out of the box boom I can get Off",
    "start": "2207520",
    "end": "2214160"
  },
  {
    "text": "to the Races build my stuff and then I'm done I can move on then no go isn't going to be good for that but if you're",
    "start": "2214160",
    "end": "2219760"
  },
  {
    "text": "actually trying to either build something so you can actually understand how these things get put together or if you're like a bigger organization that",
    "start": "2219760",
    "end": "2226599"
  },
  {
    "text": "like has the engineering capacity to own something like this then I think it can actually be very good because I think",
    "start": "2226599",
    "end": "2233240"
  },
  {
    "text": "like you have the knowledge of how the thing works and you wind up having a lot less code that you depend on that you don't own at the end of the day so I",
    "start": "2233240",
    "end": "2240319"
  },
  {
    "text": "think like the main argument against using go for these types of things is like oh well the the getting started",
    "start": "2240319",
    "end": "2245760"
  },
  {
    "text": "period is much longer because you have to build more of the stuff yourself right and I think",
    "start": "2245760",
    "end": "2251440"
  },
  {
    "text": "that's kind of where I get like a little annoyed with that argument because I personally do not think that that's how we should look at software engineering",
    "start": "2251440",
    "end": "2257280"
  },
  {
    "text": "I'm very annoyed that we continually look at things as the how fast can you get going from the beginning and not how",
    "start": "2257280",
    "end": "2263000"
  },
  {
    "text": "do you actually build something you can maintain over the long run because that that's obviously what's more important not like I just built something today",
    "start": "2263000",
    "end": "2268640"
  },
  {
    "text": "but like oh three years four years down the road this thing is still something that we want to use we want to add to we can extend and all of that I agree with",
    "start": "2268640",
    "end": "2275640"
  },
  {
    "text": "you most of the time sometimes you do want to just build fast and and to test your business idea and not your Software",
    "start": "2275640",
    "end": "2281640"
  },
  {
    "text": "System right so to test an idea quickly that's why I think rails was so popular",
    "start": "2281640",
    "end": "2287680"
  },
  {
    "text": "in startup land was because it was like we don't even know if this business is going to be here in six months so why do I have to build an architecture system",
    "start": "2287680",
    "end": "2294960"
  },
  {
    "text": "that's going to last a decade if my business isn't going to last 6 months now the idea there I think is like once",
    "start": "2294960",
    "end": "2302240"
  },
  {
    "text": "you establish you know get your product Market fit or whatever the startup guys say then it's like okay let's",
    "start": "2302240",
    "end": "2307720"
  },
  {
    "text": "rearchitecturing",
    "start": "2307720",
    "end": "2310200"
  },
  {
    "text": "off and you're just trying to keep the servers up or whatever happens and that step you know prototypes are supposed to",
    "start": "2316280",
    "end": "2323760"
  },
  {
    "text": "be thrown away and we never do we just turn them into yeah businesses so I",
    "start": "2323760",
    "end": "2329119"
  },
  {
    "text": "definitely understand that what I'm trying to get at I I have never quite understood is the lack of a rails or a d",
    "start": "2329119",
    "end": "2335920"
  },
  {
    "text": "Jango coming out of the go Community because Gophers don't like that just speaking",
    "start": "2335920",
    "end": "2344000"
  },
  {
    "text": "very broadly or is it because go as a language isn't well suited for that and",
    "start": "2344000",
    "end": "2349680"
  },
  {
    "text": "I don't know the answer to that I think it's because there's not a there's not a need rails exists Jango exists sure PHP",
    "start": "2349680",
    "end": "2356319"
  },
  {
    "text": "uh like Drupal and Symphony and all of these things already exist and they have large communities and large support",
    "start": "2356319",
    "end": "2362280"
  },
  {
    "text": "around them so in order for something like that to exist inside of like we have to like invest a lot of community",
    "start": "2362280",
    "end": "2369480"
  },
  {
    "text": "energy and time into rebuilding all of that into gaining all of that to get a very small portion of a pie at the end",
    "start": "2369480",
    "end": "2376640"
  },
  {
    "text": "of the day and so I think that people that are very comfortable with those sorts of things want to do that and I",
    "start": "2376640",
    "end": "2382119"
  },
  {
    "text": "think go as a language really does attract people that want to do this kind of lower level or not different type of",
    "start": "2382119",
    "end": "2388760"
  },
  {
    "text": "work at the end of the day like when I think people that want to go explore go they're already on to the world of",
    "start": "2388760",
    "end": "2394960"
  },
  {
    "text": "single page web applications and apis and they don't want these kind of big monolith of stacks as much anymore so I",
    "start": "2394960",
    "end": "2401040"
  },
  {
    "text": "think it's like by nature of what go is really good at and by how crowded the",
    "start": "2401040",
    "end": "2406079"
  },
  {
    "text": "field actually is I think by the time you get to the point of thinking about using go you already have a different",
    "start": "2406079",
    "end": "2413520"
  },
  {
    "text": "problem that you're trying to solve than what you would solve with rails or with d Jango or with Drupal or with any of",
    "start": "2413520",
    "end": "2418680"
  },
  {
    "text": "these other things well said you anything to add no you were nodding along an agreement I think that covers",
    "start": "2418680",
    "end": "2425040"
  },
  {
    "text": "it like yeah the idea that those already exist like yeah why would why would we build another one for a 1% market share",
    "start": "2425040",
    "end": "2431079"
  },
  {
    "text": "yeah right maybe because you want a web app you love go but I guess in that case then you're going you're going to",
    "start": "2431079",
    "end": "2436440"
  },
  {
    "text": "handroll a bunch of stuff like Chris talked about and you're going to pick each Library out and you're going to build up a thing which you can do in",
    "start": "2436440",
    "end": "2441760"
  },
  {
    "text": "these other systems I mean Sinatra is a thing inside the Ruby land is very much has more of a go philosophy so it's not",
    "start": "2441760",
    "end": "2449160"
  },
  {
    "text": "like you can't one of the followup questions to that is does go do websites and it's like well of course you can do",
    "start": "2449160",
    "end": "2455400"
  },
  {
    "text": "websites right with go it's just you have to build all the parts of your website I mean there's templating",
    "start": "2455400",
    "end": "2461560"
  },
  {
    "text": "engines and stuff like that but and routers there's all sorts of things I think that's one of the things that actually makes go quite good I mean",
    "start": "2461560",
    "end": "2467240"
  },
  {
    "text": "given I did just say all of that I think that like if there was a reason for us to build something like a rails and go I",
    "start": "2467240",
    "end": "2474599"
  },
  {
    "text": "think it could be like incredibly interesting because we do have a lot of stuff built into the standard library that like gets you halfway there yeah",
    "start": "2474599",
    "end": "2480920"
  },
  {
    "text": "totally we have a database Library that's built in language we have a templating a good templating system that",
    "start": "2480920",
    "end": "2486720"
  },
  {
    "text": "actually properly escapes HTML and JavaScript and those sorts of things right in the built into the language",
    "start": "2486720",
    "end": "2492359"
  },
  {
    "text": "itself so I think the pieces are all there for it yeah but I just think like the the appetite there hasn't been",
    "start": "2492359",
    "end": "2498079"
  },
  {
    "text": "someone that yeah that that wants to go put the effort into building that sort of thing so Mike Dawson in the chat is",
    "start": "2498079",
    "end": "2504119"
  },
  {
    "text": "expanding on what Chris said he says you end up using one of the Frameworks and quickly run into issues and find it's actually as easy to write your own",
    "start": "2504119",
    "end": "2511319"
  },
  {
    "text": "versus learning a third party framework I think we've all been there especially the more magic that pours on yeah the",
    "start": "2511319",
    "end": "2518079"
  },
  {
    "text": "harder it is to understand what's going on under the hood I think this is why a lot of the early API Frameworks that",
    "start": "2518079",
    "end": "2524240"
  },
  {
    "text": "existed in go because that was something that was big for a while with martini and a bunch of these other ones they",
    "start": "2524240",
    "end": "2529359"
  },
  {
    "text": "died out for a large part and I think it's exactly because of that because you realize pretty quickly it's just like I",
    "start": "2529359",
    "end": "2534640"
  },
  {
    "text": "have 50,000 100,000 lines of dependency that I just do not need so I can just go write this myself well having a",
    "start": "2534640",
    "end": "2541240"
  },
  {
    "text": "batteries included stand library is a huge asset to any any language and ecosystem so well put all right getting",
    "start": "2541240",
    "end": "2548599"
  },
  {
    "text": "close on time let's ask I got a couple other questions here so look on the other side of the fence you know wander",
    "start": "2548599",
    "end": "2553720"
  },
  {
    "text": "lust do you guys have any wander lost and go do you have any features in other languages that you're jealous of so as",
    "start": "2553720",
    "end": "2560319"
  },
  {
    "text": "full-time gophers look over there and see what they're doing in Russ land or Elixir land or typescript land and think",
    "start": "2560319",
    "end": "2567720"
  },
  {
    "text": "oh I would I would want that but I don't have it through the years I've run into some things that like don't have great",
    "start": "2567720",
    "end": "2573000"
  },
  {
    "text": "support and go like uh I don't know if you ever worked with soap like XML try",
    "start": "2573000",
    "end": "2578240"
  },
  {
    "text": "not to yeah if you try to do that and go you're just gonna have a bad time and I would like to be able to like stay in",
    "start": "2578240",
    "end": "2583920"
  },
  {
    "text": "the language I like and build services that interact with those but right I won't I've tried it and I I'm just I",
    "start": "2583920",
    "end": "2590160"
  },
  {
    "text": "refuse we we'll use something else for soap communication you know okay what do you usually switch to C okay yeah so I",
    "start": "2590160",
    "end": "2597640"
  },
  {
    "text": "guess the XML support in general is not the best okay Chris you know what I think a lot of things that I want in go",
    "start": "2597640",
    "end": "2604040"
  },
  {
    "text": "are things that also don't exist in other languages you're a dreamer like I want better apis",
    "start": "2604040",
    "end": "2610200"
  },
  {
    "text": "like API building tools like I want to be able to build hypermedia apis much",
    "start": "2610200",
    "end": "2615480"
  },
  {
    "text": "more easily but like I don't think there are any languages that have particularly good tooling for that right now same",
    "start": "2615480",
    "end": "2621000"
  },
  {
    "text": "thing with like database access like I want better ways of interacting and manipulating data but once again I don't",
    "start": "2621000",
    "end": "2627440"
  },
  {
    "text": "think there are any languages that really do that well you want the ability to build your own dsls or or what do you",
    "start": "2627440",
    "end": "2633400"
  },
  {
    "text": "mean by like better like let's take the hyper Media One well let's take the database one cuz more people are probably familiar with databases like",
    "start": "2633400",
    "end": "2639040"
  },
  {
    "text": "when you say access the database better to me that's like I don't know what better looks like unless you tell me",
    "start": "2639040",
    "end": "2644200"
  },
  {
    "text": "draw draw me a picture there was this talk that one of the pre I think he was one of the previous goate team members",
    "start": "2644200",
    "end": "2649559"
  },
  {
    "text": "gave on like how great SQ light is and how like that's kind of the only database you need and I like that's the",
    "start": "2649559",
    "end": "2655040"
  },
  {
    "text": "the direction that I would like things to go like I want my data to like just be there but also be distributed and",
    "start": "2655040",
    "end": "2660640"
  },
  {
    "text": "also have I don't want to have to worry about how my data is stored on disk I just want to be able to access it",
    "start": "2660640",
    "end": "2666040"
  },
  {
    "text": "manipulate it how I want in my language I don't want to be writing lots of strings like I think like part of my",
    "start": "2666040",
    "end": "2671559"
  },
  {
    "text": "grae is with SQL as a whole that I just I don't like the model of that for interacting with data Okay and like",
    "start": "2671559",
    "end": "2678319"
  },
  {
    "text": "everything is built on top of it which is why I don't think any languages have good solutions to this so I'd like to",
    "start": "2678319",
    "end": "2684040"
  },
  {
    "text": "see something like that get better and I think like the way go is structured this is something we could do like we do have",
    "start": "2684040",
    "end": "2689319"
  },
  {
    "text": "this rather unique way of doing code generation where you generate code not at the time of the like you get it from",
    "start": "2689319",
    "end": "2696599"
  },
  {
    "text": "a get dependency but when you actually build it to deploy it I think that gives you some unique aspects of how you could",
    "start": "2696599",
    "end": "2702480"
  },
  {
    "text": "actually use code generation you you kind of generate things much earlier in the pipeline and the way that it all",
    "start": "2702480",
    "end": "2708119"
  },
  {
    "text": "works and go is like a bit closer to being able to do something like you know take something like a DSL or something",
    "start": "2708119",
    "end": "2714000"
  },
  {
    "text": "closer to a DSL and like pre-compile it in your application before it kind of gets sent out so I think there's like",
    "start": "2714000",
    "end": "2720240"
  },
  {
    "text": "interesting things around all of that but once again it's just like the Paradigm of how the industry works is like we all want our applications to be",
    "start": "2720240",
    "end": "2727559"
  },
  {
    "text": "stateless so we're all shipping data out we're like communicating with something else that holds all of the data at the",
    "start": "2727559",
    "end": "2732880"
  },
  {
    "text": "end of the day so it's like stuff like that that I like to see more of and have like see more interesting ways of doing",
    "start": "2732880",
    "end": "2738640"
  },
  {
    "text": "it but I don't know of any languages that are really or any mainstream languages that are like have those",
    "start": "2738640",
    "end": "2744000"
  },
  {
    "text": "features and of course I think package management is something that I would like to see be good and I don't think",
    "start": "2744000",
    "end": "2750280"
  },
  {
    "text": "any language has done it well as of yet I think people have done it like okay like I think even after after all the",
    "start": "2750280",
    "end": "2756160"
  },
  {
    "text": "dust of settles modules are like okay but then you hit those edge cases and it's like it's like going through hell",
    "start": "2756160",
    "end": "2762480"
  },
  {
    "text": "because it's just real rough yeah so I'd like to see that be better but once again don't know any other languages",
    "start": "2762480",
    "end": "2767720"
  },
  {
    "text": "that have that better yeah I've heard speak people speak highly of rust's crat system but I don't know what sets it",
    "start": "2767720",
    "end": "2773720"
  },
  {
    "text": "apart from others or anything about it so I don't know if that's just people speaking highly because that's what they do or if they've actually cracked some",
    "start": "2773720",
    "end": "2780640"
  },
  {
    "text": "sort of nut over there in the rust ecosystem that makes it particularly better than some of the other ones out",
    "start": "2780640",
    "end": "2786760"
  },
  {
    "text": "there okay so like some of the things that I see in other languages where I'm like if I was to use go I might miss",
    "start": "2786760",
    "end": "2792480"
  },
  {
    "text": "this is like I like the idea that like four is the only way to Loop but like I also love all of like the FP F you know",
    "start": "2792480",
    "end": "2800079"
  },
  {
    "text": "functions for like iteration and map and reduce and select and filter and for me",
    "start": "2800079",
    "end": "2806040"
  },
  {
    "text": "those are very productive ways of pipelining data and I'm wondering maybe",
    "start": "2806040",
    "end": "2811119"
  },
  {
    "text": "those are available as like libraries or anything but like the seems like I would",
    "start": "2811119",
    "end": "2816640"
  },
  {
    "text": "miss those things do you guys ever miss those things I'm sure you're familiar with them in other languages I miss",
    "start": "2816640",
    "end": "2822079"
  },
  {
    "text": "iteration like iterators all the time I find myself building them a lot and that's one of the with generics I'm",
    "start": "2822079",
    "end": "2827760"
  },
  {
    "text": "hoping that we do kind of settle on a reasonable like iteration maybe not interface but yeah way of doing it but I",
    "start": "2827760",
    "end": "2835200"
  },
  {
    "text": "do miss that okay I think I missed that too but I think I've also just handrolled it enough times that I'm just like nah I can just write it myself so",
    "start": "2835200",
    "end": "2842440"
  },
  {
    "text": "whatever do you have your own little utilities package that you carry around just like cod it up each time in N I",
    "start": "2842440",
    "end": "2847920"
  },
  {
    "text": "just Cod it up each time for what I need nice I don't know once you design a datab based driver that you have to do this have to design you spend a lot of",
    "start": "2847920",
    "end": "2853960"
  },
  {
    "text": "time thinking about how to design an iterator really well and then it just like sticks in your head forever gotcha",
    "start": "2853960",
    "end": "2859160"
  },
  {
    "text": "I did see a package recently that was trying to recreate javascript's low Dash",
    "start": "2859160",
    "end": "2865119"
  },
  {
    "text": "which is a lot of functional facilities for JavaScript with goes generics it like a very fresh project when generics",
    "start": "2865119",
    "end": "2871520"
  },
  {
    "text": "shipped so I don't know if it's any good or anything about it except for like I think people are going to start working on that particular problem last one and",
    "start": "2871520",
    "end": "2878720"
  },
  {
    "text": "then we'll get to we'll get to wrapping up here how long did it take you to get over if air not equal nil being all over",
    "start": "2878720",
    "end": "2885720"
  },
  {
    "text": "the place I never hated it yeah I don't think it's ever bothered me I like it never I like it you like it I hate TR",
    "start": "2885720",
    "end": "2893119"
  },
  {
    "text": "catch you always liked it I did like the first first time you saw it you're like this is it this makes sense okay I've",
    "start": "2893119",
    "end": "2899119"
  },
  {
    "text": "always hated try catch because it's just so disconnected from where your err happens you know you could catch",
    "start": "2899119",
    "end": "2904839"
  },
  {
    "text": "something 12 nested levels deep and just have no idea what's going on so like the",
    "start": "2904839",
    "end": "2910599"
  },
  {
    "text": "idea that you just have to handle erors right where they happen like I just immediately thought like oh yeah this is",
    "start": "2910599",
    "end": "2916319"
  },
  {
    "text": "how it should be done I think for me it's partly How I Learned go I spent like I didn't learn it trying to like",
    "start": "2916319",
    "end": "2922680"
  },
  {
    "text": "change some project from some other language into go I just like learned go to learn go so I absorbed a lot of like",
    "start": "2922680",
    "end": "2928319"
  },
  {
    "text": "Rob Pikes talks on things and just like the idea that no no no like errors aren't special they're just other values",
    "start": "2928319",
    "end": "2934880"
  },
  {
    "text": "they have like ically different meaning but they're not actually different from anything else fundamentally changed the",
    "start": "2934880",
    "end": "2939960"
  },
  {
    "text": "way that I structured my code and I started to see like a lot of if you keep writing if error does not equal nil a",
    "start": "2939960",
    "end": "2946559"
  },
  {
    "text": "lot you've done something terribly wrong in your application and you need to go back and and redesign that code because",
    "start": "2946559",
    "end": "2952000"
  },
  {
    "text": "that code is wrong and I think once I saw that and once I started kind of leaning into that as a signal that I",
    "start": "2952000",
    "end": "2958119"
  },
  {
    "text": "should be getting from it I wound up like rewriting code and having it wind up be a lot better so while like",
    "start": "2958119",
    "end": "2963920"
  },
  {
    "text": "sometimes it's annoying when you're like prototyping trying to get something done you just write it a bunch of times it's annoying I think it actually winds up",
    "start": "2963920",
    "end": "2969480"
  },
  {
    "text": "making my code much better so I don't find it to be I haven't found it to be",
    "start": "2969480",
    "end": "2974520"
  },
  {
    "text": "something that I don't like so mostly what I see is and like I said I've written like 200 lines ago so most of",
    "start": "2974520",
    "end": "2980960"
  },
  {
    "text": "it's what I've read okay which is probably still like in the less than a thousand lines and then like on uh the",
    "start": "2980960",
    "end": "2987440"
  },
  {
    "text": "Go website and stuff most of it's like if air not equal to nil return air is that what most people do most of the",
    "start": "2987440",
    "end": "2993160"
  },
  {
    "text": "time yeah most people are doing it wrong yeah I was going to say isn't that not actually handling anything aren you just passing it up that's what I don't get I",
    "start": "2993160",
    "end": "2999920"
  },
  {
    "text": "think that's where a lot of the confusion from a couple years back came from of like no you're actually supposed to like handle your errors you're",
    "start": "2999920",
    "end": "3005760"
  },
  {
    "text": "supposed to like think about what the problem is and and yeah if you're not doing anything it's like keeping the",
    "start": "3005760",
    "end": "3011040"
  },
  {
    "text": "honest people honest like you got to handle it right here it's like are you though I think like you're just like text expanding that same snippet I feel",
    "start": "3011040",
    "end": "3017480"
  },
  {
    "text": "like a lot of other people that don't like if error does not equal nil don't like it because every time they're writing if error does not equal nil",
    "start": "3017480",
    "end": "3023760"
  },
  {
    "text": "return error and like that's the only iteration of it that they see and it's like well that's incorrect so you're",
    "start": "3023760",
    "end": "3029599"
  },
  {
    "text": "using the thing wrong you're not really getting the feedback you should get from it so that's hopeful mostly that's what",
    "start": "3029599",
    "end": "3035040"
  },
  {
    "text": "I've seen I've always thought like this seems silly but that's not because it's just doing it wrong A lot of times you",
    "start": "3035040",
    "end": "3041079"
  },
  {
    "text": "do end up returning an air but like in those you should be adding context you should be checking certain air cases",
    "start": "3041079",
    "end": "3046599"
  },
  {
    "text": "that you can handle but a lot of times you do pass up the air for someone else to decide if they're broken or not cuz",
    "start": "3046599",
    "end": "3052359"
  },
  {
    "text": "that's what you'd do if it was like a runtime error right like it would just pass it itself up until mhm the runtime",
    "start": "3052359",
    "end": "3057520"
  },
  {
    "text": "explodes and I think too it's fine if you're doing that for like just one thing I think what people get frustrated",
    "start": "3057520",
    "end": "3062880"
  },
  {
    "text": "by is when you have like 100 lines of code and like 80 of them are just if air does night will no return air like you",
    "start": "3062880",
    "end": "3068960"
  },
  {
    "text": "have a high proportion of it but once again I think that's like got to go back and structure your code a little bit differently be a little bit more",
    "start": "3068960",
    "end": "3074680"
  },
  {
    "text": "creative in what you're doing and then you kind of reduce the number of that actual statement down to a",
    "start": "3074680",
    "end": "3081000"
  },
  {
    "text": "handful well said Okay so this has giving me new interest in that particular thing that has bothered me he",
    "start": "3081000",
    "end": "3087680"
  },
  {
    "text": "like you know what doesn't have to be that [Music]",
    "start": "3087680",
    "end": "3093829"
  },
  {
    "text": "way this episode is brought to you by our friends at reto reto is the low code",
    "start": "3095280",
    "end": "3101480"
  },
  {
    "text": "platform for developers to build internal tools some of the best teams out there trust retool brex coinbase",
    "start": "3101480",
    "end": "3109000"
  },
  {
    "text": "plaid door Dash legal genius Amazon all birds pelaton and so many more the deel",
    "start": "3109000",
    "end": "3115319"
  },
  {
    "text": "Vel opers at these teams trust retool as the platform to build their internal tools and that means you can too it's",
    "start": "3115319",
    "end": "3121839"
  },
  {
    "text": "free to try so head to ret.com changelog again retool",
    "start": "3121839",
    "end": "3127760"
  },
  {
    "text": "docomo and by signal wire signal wire offers apis sdks and Edge networks",
    "start": "3127760",
    "end": "3134440"
  },
  {
    "text": "around the world for building the realest Real Time video and video communication apps with less than 50",
    "start": "3134440",
    "end": "3140760"
  },
  {
    "text": "milliseconds of latency they use websockets to deliver 300% lower latency than API built on rest making it ideal",
    "start": "3140760",
    "end": "3148280"
  },
  {
    "text": "for apps where every millisecond and responsiveness makes a difference like apps that need instant natural language",
    "start": "3148280",
    "end": "3154960"
  },
  {
    "text": "understanding real-time Machine Vision or large scale video and audio conferencing here's what makes them",
    "start": "3154960",
    "end": "3160359"
  },
  {
    "text": "different they use MCU multi-point control unit that mixes all video and all audio feeds on the server side and",
    "start": "3160359",
    "end": "3168119"
  },
  {
    "text": "then distributes a single unified stream back to every participant that way every",
    "start": "3168119",
    "end": "3173440"
  },
  {
    "text": "participant in the apps you ship experience the same video and the same audio your apps have none of the awkward",
    "start": "3173440",
    "end": "3179440"
  },
  {
    "text": "audio effects obvious lag and jumpy video it's all smooth great ux creating",
    "start": "3179440",
    "end": "3185119"
  },
  {
    "text": "a more lifelike virtual experience without compromising audio or the video quality head to Signal wire.com videoen",
    "start": "3185119",
    "end": "3191440"
  },
  {
    "text": "go time to receive an extra 5,000 video minutes again go to Signal wire.com",
    "start": "3191440",
    "end": "3196839"
  },
  {
    "text": "videoo and remember to mention go [Music]",
    "start": "3196839",
    "end": "3203969"
  },
  {
    "text": "time",
    "start": "3204160",
    "end": "3207160"
  },
  {
    "text": "[Music] you I actually think should probably",
    "start": "3210140",
    "end": "3216760"
  },
  {
    "text": "[Music] leave well Ian you are our guest today",
    "start": "3222080",
    "end": "3228559"
  },
  {
    "text": "so if you have an unpopular opinion we would love for you to share it now I've been trying to think of one I really",
    "start": "3228559",
    "end": "3233799"
  },
  {
    "text": "have I'm drawing a blank okay unacceptable you shall say something no totally cool it's an",
    "start": "3233799",
    "end": "3240640"
  },
  {
    "text": "optional segment Chris you are not hosting today which means I defer to you do you have have you thought of one I",
    "start": "3240640",
    "end": "3246640"
  },
  {
    "text": "mean you shared a couple you got you got a little spicy there but what else you got oh there's so many spicy ones in my",
    "start": "3246640",
    "end": "3252520"
  },
  {
    "text": "brain like which do I choose from I mean my one from last week was so spicy though I I still like like destroy",
    "start": "3252520",
    "end": "3260119"
  },
  {
    "text": "I haven't heard it yet because we haven't produced that episode but I'm excited about it I know I'll go for one that's going to be",
    "start": "3260119",
    "end": "3266480"
  },
  {
    "text": "incendiary I think it's time for go to have a fork wow say more I feel like",
    "start": "3266480",
    "end": "3271799"
  },
  {
    "text": "it's time to go to have a fork because I feel like the community we're not all together right now and I think we're",
    "start": "3271799",
    "end": "3278359"
  },
  {
    "text": "pretending that we are like I I feel like we have especially with things like generics I feel like we've kind of like",
    "start": "3278359",
    "end": "3284079"
  },
  {
    "text": "fractured a little bit and we should have a recognition of that fracturing and then maybe more formal conversations",
    "start": "3284079",
    "end": "3290440"
  },
  {
    "text": "to like how do we come back together how do we come back as a whole because I feel like there are different large",
    "start": "3290440",
    "end": "3296440"
  },
  {
    "text": "factions of go right now and I feel like us all trying to operate together is not",
    "start": "3296440",
    "end": "3301520"
  },
  {
    "text": "winding up being entirely helpful like healthy for us as a as a community so maybe it's even just a forking of our",
    "start": "3301520",
    "end": "3306839"
  },
  {
    "text": "community I don't know if I have to Fork the actual language but I feel like there needs to be some sort of like separation of us for a little bit where",
    "start": "3306839",
    "end": "3314520"
  },
  {
    "text": "would the dividing line be would it be around generics or are there other things so I feel like there's kind of",
    "start": "3314520",
    "end": "3319640"
  },
  {
    "text": "the way that the language was when I first started learning it which I guess is like the Rob Pike era of the language",
    "start": "3319640",
    "end": "3326039"
  },
  {
    "text": "where it was like extremely practical of a language and I was very focused on being like a language for experience",
    "start": "3326039",
    "end": "3333280"
  },
  {
    "text": "software Engineers that it's still useful for those people who are newer and I think over the past few years the",
    "start": "3333280",
    "end": "3338680"
  },
  {
    "text": "language has pivoted to being one that is more focused on helping newer people be able to do things or people from",
    "start": "3338680",
    "end": "3345079"
  },
  {
    "text": "other languages feel more comfortable in the language and I feel like that has come a bit at the expense of people that",
    "start": "3345079",
    "end": "3350599"
  },
  {
    "text": "want to do that fresh new thing that want to do that I've spent a decade writing code and thought about it very very deeply and I want that very nuanced",
    "start": "3350599",
    "end": "3357720"
  },
  {
    "text": "and articulated way of doing development I and your",
    "start": "3357720",
    "end": "3362760"
  },
  {
    "text": "response stake your claim right now I do kind of agree with Chris here that it's changed a bit I don't know if I would",
    "start": "3363319",
    "end": "3369760"
  },
  {
    "text": "say it's changed and become worse for people that want to experience people",
    "start": "3369760",
    "end": "3374839"
  },
  {
    "text": "that want to write code a particular way but it does seem to be more almost academic instead of practical especially",
    "start": "3374839",
    "end": "3381079"
  },
  {
    "text": "like modules and maybe generics as well it feels more like a almost like a research project or like how could we do",
    "start": "3381079",
    "end": "3387960"
  },
  {
    "text": "this not should we do this so yeah I don't know if we need a fork but I do agree that there's been a change",
    "start": "3387960",
    "end": "3393760"
  },
  {
    "text": "somewhere like a shift in culture or something I feel like that's a good way of putting it like it does feel like",
    "start": "3393760",
    "end": "3399599"
  },
  {
    "text": "it's shifted from a practical to a more academic more research style thing and like I don't know if it has to be like",
    "start": "3399599",
    "end": "3405520"
  },
  {
    "text": "once again doesn't have to be like a a fork Fork like we have to have completely separate development teams",
    "start": "3405520",
    "end": "3410559"
  },
  {
    "text": "but I think that's like maybe it's like an extended conversation that we have and maybe there's like different like",
    "start": "3410559",
    "end": "3416520"
  },
  {
    "text": "different ways we come about deciding things so I think it has been it started off as very practical and it shifted to",
    "start": "3416520",
    "end": "3421720"
  },
  {
    "text": "now very academic and I feel like the language has lost a bit little bit of its Soul along the way there well while",
    "start": "3421720",
    "end": "3427160"
  },
  {
    "text": "we're here let's have a forked go name brainstorming session all right so I'm",
    "start": "3427160",
    "end": "3433000"
  },
  {
    "text": "thinking noo I'm thinking gone like G NE I'm thinking stop or uh Stay",
    "start": "3433000",
    "end": "3442359"
  },
  {
    "text": "Stay go to O go to no like geoo not all",
    "start": "3442359",
    "end": "3448160"
  },
  {
    "text": "right any other potential Fork names we're going to have to ideate this a bit I mean you have Aug a there you go",
    "start": "3448160",
    "end": "3454599"
  },
  {
    "text": "rearrange the letters you could steal the mask on and just call it gopher please don't call it gopher now you're",
    "start": "3454599",
    "end": "3460319"
  },
  {
    "text": "really yeah like the old networking protocol gopher we could call it horde because Gophers are hoarders so that",
    "start": "3460319",
    "end": "3466200"
  },
  {
    "text": "could be a fun name I'm glad you put a d at the end of that yes hoorde please",
    "start": "3466200",
    "end": "3473799"
  },
  {
    "text": "enunciate okay submit your go Fork names in the comments or on the Twitter Poll",
    "start": "3473799",
    "end": "3480839"
  },
  {
    "text": "for this particular unpopular opinion I'm thinking that one's going to be oh God someone said go Plus+ or go sharp no",
    "start": "3480839",
    "end": "3487400"
  },
  {
    "text": "go sharp no no no no no no no go sharp oh I'm like I'm sticking with that one yeah we got Yago like Yago maybe from",
    "start": "3487400",
    "end": "3495319"
  },
  {
    "text": "I'm assuming that's a lion king reference all right let me share my unpopular opinion here so on episode",
    "start": "3495319",
    "end": "3500400"
  },
  {
    "text": "number 192 Ashley Jeffs had what was in my opinion the most brilliant UNP of all",
    "start": "3500400",
    "end": "3506799"
  },
  {
    "text": "times his opinion was that people who vote in Twitter polls are losers did you",
    "start": "3506799",
    "end": "3512119"
  },
  {
    "text": "guys hear that one he said they should get out more nobody cares about their opinion and it doesn't matter now he",
    "start": "3512119",
    "end": "3519039"
  },
  {
    "text": "thought that he gained the system he thought he made a perfectly unpopular opinion because of course we take the",
    "start": "3519039",
    "end": "3525160"
  },
  {
    "text": "votes on Twitter and what are they going to vote but reality is Stranger Than Fiction 71% of Twitter pull takers",
    "start": "3525160",
    "end": "3532000"
  },
  {
    "text": "agreed that they were indeed losers So based on that empirical evidence I",
    "start": "3532000",
    "end": "3538520"
  },
  {
    "text": "can with confidence state that my unpopular opinion is that people who vote on Twitter polls are winners and",
    "start": "3538520",
    "end": "3544920"
  },
  {
    "text": "they should tweet more everybody cares about your opinion and it does",
    "start": "3544920",
    "end": "3550319"
  },
  {
    "text": "matter I feel like that one is going to be unpopular I think it might I think",
    "start": "3550319",
    "end": "3555640"
  },
  {
    "text": "people are just going to be in spite just voting that like yeah that's unpopular just to yeah oh time will tell",
    "start": "3555640",
    "end": "3562559"
  },
  {
    "text": "please follow go time FM on Twitter and vote your opinion do you think you're actually a winner or a loser we will",
    "start": "3562559",
    "end": "3570000"
  },
  {
    "text": "find out on Twitter that has been our show for this week I appreciate you all letting me crash the party and ask my",
    "start": "3570000",
    "end": "3576520"
  },
  {
    "text": "newbie SL Outsider questions hopefully there are other go curious folk who learned a thing or two and enjoyed this",
    "start": "3576520",
    "end": "3583680"
  },
  {
    "text": "conversation Ian thanks so much for joining us once again you're welcome back any time I'm glad to be here Chris",
    "start": "3583680",
    "end": "3590599"
  },
  {
    "text": "you're also here as Matt ryer would say but I'll say thank you for hanging out out and sharing your wisdom and your",
    "start": "3590599",
    "end": "3596200"
  },
  {
    "text": "spicy hot takes like go Fork I had never seen that one coming yeah but that's go",
    "start": "3596200",
    "end": "3601240"
  },
  {
    "text": "time for this week we'll talk to youall next",
    "start": "3601240",
    "end": "3605440"
  },
  {
    "text": "week here is a quick unpopped result Roundup for you Mark sandstrom said",
    "start": "3607520",
    "end": "3613000"
  },
  {
    "text": "manually grinding through work is an underrated engineering strategy turns out 96% of go time Twitter followers",
    "start": "3613000",
    "end": "3620079"
  },
  {
    "text": "agreed Ed Welch believes Windows is the best desktop OS that's popular 82% of",
    "start": "3620079",
    "end": "3625680"
  },
  {
    "text": "gophers disagree and finally mahalis tuos thinks C is the best programming language and no surprise here 83% of",
    "start": "3625680",
    "end": "3632559"
  },
  {
    "text": "people beg to differ follow gotime FM on Twitter for all the results and don't forget to subscribe if you haven't yet",
    "start": "3632559",
    "end": "3638400"
  },
  {
    "text": "Point your favorite web browser to go time. FM thanks again to fastly for CDN for us to break master cylinder for the",
    "start": "3638400",
    "end": "3644839"
  },
  {
    "text": "Farm Fresh Beats and to you for listening we appreciate you next week a listener request go code organization",
    "start": "3644839",
    "end": "3651920"
  },
  {
    "text": "best practices stay tuned that's what's coming up next time on go",
    "start": "3651920",
    "end": "3658440"
  },
  {
    "text": "[Music]",
    "start": "3659120",
    "end": "3664409"
  },
  {
    "text": "time",
    "start": "3673839",
    "end": "3676839"
  }
]