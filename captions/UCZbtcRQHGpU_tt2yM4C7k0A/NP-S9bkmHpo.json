[
  {
    "text": "this is one of those times where it really matters that this isn't an expensive thing because people are",
    "start": "120",
    "end": "6319"
  },
  {
    "text": "calling these methods all the time aren't they they use that client everywhere it's almost in every code path you definitely don't want to",
    "start": "6319",
    "end": "13240"
  },
  {
    "text": "consider if you use that or not you just want to use it and it doesn't have a significant penalty similar to when I",
    "start": "13240",
    "end": "20240"
  },
  {
    "text": "realize in a go binary profiling is kind of always on and you just have this endpoint if you just anonymously import",
    "start": "20240",
    "end": "27400"
  },
  {
    "text": "this package and stuff like that it was like weird isn't that expensive should I switch that off in my real production",
    "start": "27400",
    "end": "34040"
  },
  {
    "text": "binary but no it's all designed to be I don't know fraction of a percent of your Total Resource usage so you just leave",
    "start": "34040",
    "end": "39760"
  },
  {
    "text": "it on you don't ask questions and when you actually get in trouble it's there and it doesn't matter if it's developer",
    "start": "39760",
    "end": "45399"
  },
  {
    "text": "trouble or Ops trouble it's just there and that's so cool and so good to",
    "start": "45399",
    "end": "51440"
  },
  {
    "text": "[Music] have this episode is brought to you by our friends at Square millions of square",
    "start": "51890",
    "end": "58600"
  },
  {
    "text": "sellers use a square at Market place to discover and install apps they rely on daily to run their businesses and the",
    "start": "58600",
    "end": "65198"
  },
  {
    "text": "way you get your app there is by becoming a square app partner let me tell you how this works as a square app",
    "start": "65199",
    "end": "72159"
  },
  {
    "text": "partner you can offer and monetize your apps directly to square sellers in the app Marketplace to millions of sellers",
    "start": "72159",
    "end": "79479"
  },
  {
    "text": "you can Leverage The Square platform to build robust e-commerce websites smart payment Integrations and custom",
    "start": "79479",
    "end": "85720"
  },
  {
    "text": "solutions for millions of businesses and here's the best part you get to keep 100% of Revenue while you grow Square",
    "start": "85720",
    "end": "93439"
  },
  {
    "text": "collects a 0% cut from your sales for the first year or your first 100 square referred sellers that way you can focus",
    "start": "93439",
    "end": "100560"
  },
  {
    "text": "on building and growing your Square customer base and you get to set your own pricing models you also get a ton of",
    "start": "100560",
    "end": "106960"
  },
  {
    "text": "support from Square you get access to Square's technical team using slack you get insights into the performance of",
    "start": "106960",
    "end": "112840"
  },
  {
    "text": "your app on the app Marketplace and of course you get direct access to new product launches and all this begins at",
    "start": "112840",
    "end": "119880"
  },
  {
    "text": "changel log.com Square again Chang log.com",
    "start": "119880",
    "end": "125000"
  },
  {
    "text": "[Music]",
    "start": "125000",
    "end": "131020"
  },
  {
    "text": "Square let's do it it's go time welcome to go time your source for diverse",
    "start": "136680",
    "end": "143800"
  },
  {
    "text": "discussions from around the go Community we record live on Tuesdays at 300 p.m. us Eastern Time sub subscribe at",
    "start": "143800",
    "end": "151040"
  },
  {
    "text": "youtube.com/ changelog so you don't miss it and don't forget to follow the show on Twitter at gotime FM special thanks",
    "start": "151040",
    "end": "157360"
  },
  {
    "text": "to our partners at fastly for shipping our shows super fast to wherever you listen check them out at fastly.com okay",
    "start": "157360",
    "end": "164599"
  },
  {
    "text": "here we [Music]",
    "start": "164599",
    "end": "170240"
  },
  {
    "text": "go hello and welcome to go time I'm Matt Rya and today we're talking about",
    "start": "171519",
    "end": "178959"
  },
  {
    "text": "instrument ation and instrumenting your go- code specifically I'm joined today",
    "start": "178959",
    "end": "184680"
  },
  {
    "text": "by Johnny boso Hello Johnny hello there how's it going it's been a while yeah it's been a while yeah we haven't been",
    "start": "184680",
    "end": "191080"
  },
  {
    "text": "uh on a show together for a minute yeah how are you mate yeah not for a while well you don't just have to tolerate me",
    "start": "191080",
    "end": "197239"
  },
  {
    "text": "on your own Johnny don't worry we have some guests today to dig into this subject we've got bejon robenstein he's",
    "start": "197239",
    "end": "203799"
  },
  {
    "text": "here he an engineer at grafana labs and longtime Prometheus contributor hello bjor welcome to go time hello I'm glad",
    "start": "203799",
    "end": "211239"
  },
  {
    "text": "that I'm finally in this podcast of which I'm a great fan oh well we're great fans of yours as well and we're",
    "start": "211239",
    "end": "217239"
  },
  {
    "text": "also great fans of BK plotka who's also joining us hello BK Hello nice to be",
    "start": "217239",
    "end": "222799"
  },
  {
    "text": "here BK is a engineer at Red Hat maintainer of many open source projects in go you've probably seen his name",
    "start": "222799",
    "end": "229120"
  },
  {
    "text": "around GitHub here and there you yeah maintainer of Prometheus and Thanos and",
    "start": "229120",
    "end": "234599"
  },
  {
    "text": "you're authoring efficient go is that right BK that's correct hopefully published this year yeah that's exciting",
    "start": "234599",
    "end": "242280"
  },
  {
    "text": "how is it writing a book is it what you thought it was going to be definitely not definitely not lots of pros and cons",
    "start": "242280",
    "end": "248840"
  },
  {
    "text": "lots of learnings MH I think it's worth it but maybe once just once once a",
    "start": "248840",
    "end": "254760"
  },
  {
    "text": "lifetime just one book we'll do yeah that's how you feel now maybe you'll get the buzz get the yeah you get the bug",
    "start": "254760",
    "end": "261199"
  },
  {
    "text": "for it well we'll see okay so maybe we could just start at the beginning for people not familiar what is",
    "start": "261199",
    "end": "267280"
  },
  {
    "text": "instrumentation what's it useful for botch maybe you could kick us off right",
    "start": "267280",
    "end": "272320"
  },
  {
    "text": "so how I see the instrumentation is essentially it's about generating the",
    "start": "272320",
    "end": "278400"
  },
  {
    "text": "signals that will tell us later on how your application is behaving when you",
    "start": "278400",
    "end": "283440"
  },
  {
    "text": "don't have visible access to you know how it's running so maybe you are putting that on production in your Cloud",
    "start": "283440",
    "end": "290080"
  },
  {
    "text": "so maybe on your friend's machine just spinning up the process out of your Goan code that you created and you have to",
    "start": "290080",
    "end": "296919"
  },
  {
    "text": "have some kind of well those magic words monitoring or observability so ability",
    "start": "296919",
    "end": "302680"
  },
  {
    "text": "to really derive the the state of this application only from its observability",
    "start": "302680",
    "end": "308880"
  },
  {
    "text": "or monitoring signals so in order to generate those signals we need instrumentations so essentially we need",
    "start": "308880",
    "end": "315240"
  },
  {
    "text": "instruments that tells us you know what is happening remotely this is as simple",
    "start": "315240",
    "end": "320639"
  },
  {
    "text": "as that now of course this can go even more complex because you can have either",
    "start": "320639",
    "end": "327199"
  },
  {
    "text": "manual instrumentation so you are directly adding a code statement to your go",
    "start": "327199",
    "end": "332360"
  },
  {
    "text": "application to add a log line to add a metric to create a span tracing span or",
    "start": "332360",
    "end": "339120"
  },
  {
    "text": "maybe there is a go go on runtime logic that um creates profiling right and",
    "start": "339120",
    "end": "345560"
  },
  {
    "text": "probably we can discuss this uh you know all of this in this in this episode but uh there are also automatic",
    "start": "345560",
    "end": "351919"
  },
  {
    "text": "instrumentation mechanism where you can deduce the application State essentially",
    "start": "351919",
    "end": "357600"
  },
  {
    "text": "from let's say closed blob close box pattern where you can essentially ask U",
    "start": "357600",
    "end": "363840"
  },
  {
    "text": "operating system so essentially Kel this is what is very popular nowadays with this ebpf solutions that allows you to",
    "start": "363840",
    "end": "371400"
  },
  {
    "text": "you know really understand what process is doing without any manual statement right so essentially this is the the",
    "start": "371400",
    "end": "378440"
  },
  {
    "text": "categorization like manual instrumentation automatic all to derive some signals great and so what's this",
    "start": "378440",
    "end": "385720"
  },
  {
    "text": "useful for then so we we find out that like we can find out things going on",
    "start": "385720",
    "end": "390800"
  },
  {
    "text": "inside so what's like a specific example of something that you might want to instrument and then report on so feel",
    "start": "390800",
    "end": "398160"
  },
  {
    "text": "free be to chim in but there are plenty of things like and I think first and the",
    "start": "398160",
    "end": "404360"
  },
  {
    "text": "foremost is something that we can read in popular s book right so essentially",
    "start": "404360",
    "end": "410120"
  },
  {
    "text": "uh you know Google team who kind of created this s movement site reability engineering we can read there that",
    "start": "410120",
    "end": "416160"
  },
  {
    "text": "monitoring is like a key component in building any application you know in the",
    "start": "416160",
    "end": "421440"
  },
  {
    "text": "cloud and the reason for it is that you don't know if it's running if you don't",
    "start": "421440",
    "end": "426560"
  },
  {
    "text": "observe some signals so Health monitoring is kind of the first thing you do you want to ensure that it's",
    "start": "426560",
    "end": "433160"
  },
  {
    "text": "actually doing any work if you are not looking on it if you are not actively poking you know using its I don't know",
    "start": "433160",
    "end": "438919"
  },
  {
    "text": "HTP requests or or looking into you know its work items so health is the first",
    "start": "438919",
    "end": "444120"
  },
  {
    "text": "thing you want to check out probably and so that's like a real end point running on the server just returns like some",
    "start": "444120",
    "end": "451000"
  },
  {
    "text": "okay and so if you can reach that then you know the Ser is at least up that's the basic yeah that's the basic solution",
    "start": "451000",
    "end": "457599"
  },
  {
    "text": "that is not the best because if you're not looking then it might be down in those you know periods when you are not",
    "start": "457599",
    "end": "463919"
  },
  {
    "text": "poking it for 200 request right yeah so there are many many different methods of how you can possess this information",
    "start": "463919",
    "end": "470199"
  },
  {
    "text": "about healthiness I mean the what we got with the age of cloud or the age of distributed systems was also a notion of",
    "start": "470199",
    "end": "478000"
  },
  {
    "text": "that just being up or down down isn't it's not that easy anymore right your service consist of many microservices",
    "start": "478000",
    "end": "484960"
  },
  {
    "text": "and every microservice has many instances some of them are always down because once you have enough of them",
    "start": "484960",
    "end": "490639"
  },
  {
    "text": "they will never all be up so you get into this whole area of yeah I mean we",
    "start": "490639",
    "end": "495680"
  },
  {
    "text": "have to tolerate a bit of down and then you start to think that just probing for",
    "start": "495680",
    "end": "501960"
  },
  {
    "text": "up or down for this like binary result isn't enough anymore this is where you start to want perhaps some metrics about",
    "start": "501960",
    "end": "509759"
  },
  {
    "text": "your running tasks and that's where the instrumentation also I think gets into",
    "start": "509759",
    "end": "515880"
  },
  {
    "text": "the game right if you just run a probe to see if something up you arguably don't really need instrumentation you",
    "start": "515880",
    "end": "521240"
  },
  {
    "text": "just check out if your endpoint is up right and I mean this is what I call the founding myth of Prometheus I have to",
    "start": "521240",
    "end": "528560"
  },
  {
    "text": "talk about Prometheus of course I don't know if it's literally true I was joining the Prometheus team very early",
    "start": "528560",
    "end": "535600"
  },
  {
    "text": "in its history but not from the beginning right so I also got this just from stories so this is where like it's",
    "start": "535600",
    "end": "541600"
  },
  {
    "text": "all myth in the distance past but I mean sometimes you get nice stories from that right and the mythological version is",
    "start": "541600",
    "end": "548600"
  },
  {
    "text": "that the first idea for Prometheus was actually we need to instrument our code",
    "start": "548600",
    "end": "554440"
  },
  {
    "text": "for metrics and then the initial founder started to create an instrumentation",
    "start": "554440",
    "end": "560040"
  },
  {
    "text": "library and I like to believe it was the go Library they created first it might have been the Java library but let's",
    "start": "560040",
    "end": "565920"
  },
  {
    "text": "assume it was the go library because it's a go podcast and that even be true would you assume it was the Java one on",
    "start": "565920",
    "end": "571720"
  },
  {
    "text": "Java time I don't know I think I will never be on Java time if there is anything okay we'll see so this was the",
    "start": "571720",
    "end": "580200"
  },
  {
    "text": "initial spark of Inspirations there was an instrumentation Library where you could uh instrument for metrics and you",
    "start": "580200",
    "end": "586040"
  },
  {
    "text": "would expose a separate endpoint I think BK mentioned that shortly that you have",
    "start": "586040",
    "end": "591279"
  },
  {
    "text": "a separate endpoint where you not just collect is it up but you can collect the data from the inside of your running",
    "start": "591279",
    "end": "597920"
  },
  {
    "text": "binary and then the next question was okay how do we scrape this data and",
    "start": "597920",
    "end": "603000"
  },
  {
    "text": "where do we collect it how do we store it how do we read it how do we query it and this is where then the promethus",
    "start": "603000",
    "end": "608959"
  },
  {
    "text": "server got invented essentially but it all started with instrumentation and maybe with the go Library which still",
    "start": "608959",
    "end": "615760"
  },
  {
    "text": "exists and BK is the current maintainer of it and I'm the past maintainer of it",
    "start": "615760",
    "end": "621079"
  },
  {
    "text": "wow it's one of the most used go packages in the universe I think wow in",
    "start": "621079",
    "end": "626360"
  },
  {
    "text": "the in the universe wow I mean that's assuming go only exists on this planet we can't say for sure that or just in",
    "start": "626360",
    "end": "632680"
  },
  {
    "text": "this universe cuz there is a Multiverse from what the movies tell me yeah still not bad though if you're the best go",
    "start": "632680",
    "end": "638720"
  },
  {
    "text": "package in this particular Universe even if in this particular yeah yeah even if there's more stars in other universes",
    "start": "638720",
    "end": "644920"
  },
  {
    "text": "it's they go on Mars they must be go on Mars right yeah there must be by now yeah that's great and then there might",
    "start": "644920",
    "end": "651680"
  },
  {
    "text": "be Cent goink Prometheus CL goling might be on Ms as well who knows probably it's running in all the German like on the",
    "start": "651680",
    "end": "658360"
  },
  {
    "text": "rail St stations they they use it to monitor those did they so it's running everywhere around me it's pretty cool if",
    "start": "658360",
    "end": "665079"
  },
  {
    "text": "only you'd instrumented it and was reporting that somewhere so you could see where all the places it was running that'd be awesome actually I would like",
    "start": "665079",
    "end": "671720"
  },
  {
    "text": "that as a feature please cuz uh for yeah all packages we ought to have that so we can see how it's being used the",
    "start": "671720",
    "end": "677959"
  },
  {
    "text": "popularity of this library is actually for me it was a huge surprise and that's also I think an important topic about",
    "start": "677959",
    "end": "684000"
  },
  {
    "text": "instrumentation that back then like we're talking about the year 2012 it was very very uncommon for normal developers",
    "start": "684000",
    "end": "691480"
  },
  {
    "text": "to even think about instrumentation I mean if they really thought about it they would realize even putting a print",
    "start": "691480",
    "end": "697560"
  },
  {
    "text": "F statement for debugging into their code or a log line emitting a loog line that's already instrumentation",
    "start": "697560",
    "end": "703279"
  },
  {
    "text": "instrumenting code for like profiling is instrumentation luckily we get this for free and go so they kind of did",
    "start": "703279",
    "end": "710519"
  },
  {
    "text": "instrumentation but they would never think about instrumentation for monitoring this was completely an Ops",
    "start": "710519",
    "end": "716720"
  },
  {
    "text": "concern right and developers would never think about Ops concerns and teaching",
    "start": "716720",
    "end": "721959"
  },
  {
    "text": "them that they have to instument their code for things like monitoring was a big deal right I didn't expect that",
    "start": "721959",
    "end": "728000"
  },
  {
    "text": "would get traction so quickly but of course DeVos movement blah blah blah all those things so that might have helped",
    "start": "728000",
    "end": "734760"
  },
  {
    "text": "also developers might have pretty quickly realized that uh if you instrument your code for even more",
    "start": "734760",
    "end": "741120"
  },
  {
    "text": "things like metrics or tracing or profiles that it even helps during development that's also an important",
    "start": "741120",
    "end": "747720"
  },
  {
    "text": "thing that monitoring per se is is everywhere in the stack right it's not",
    "start": "747720",
    "end": "753440"
  },
  {
    "text": "just in the end when you add it as an afterthought and you need it to run your system different people have different",
    "start": "753440",
    "end": "760199"
  },
  {
    "text": "needs right so when we talk about sort of the operational sort of if you're if you're organization is large enough to",
    "start": "760199",
    "end": "766000"
  },
  {
    "text": "have a dedicated Ops Team or the people who care about the the the VMS right and",
    "start": "766000",
    "end": "771440"
  },
  {
    "text": "basically making sure that you know CPU is not spiking or there's enough memory or whatever it is like managing sort of",
    "start": "771440",
    "end": "777360"
  },
  {
    "text": "that if you will the lower level level set of concerns sort of at the at the infrastructure operational level and",
    "start": "777360",
    "end": "783880"
  },
  {
    "text": "then you you know as you sort of go up the stock if you will then you have a different set of concerns right you have",
    "start": "783880",
    "end": "789279"
  },
  {
    "text": "the developers that are instrumenting maybe to find out okay how you know let's say you wanted to sort of uh send",
    "start": "789279",
    "end": "794800"
  },
  {
    "text": "traces out right you want to okay what in this long running process I'm going to have a subspan right to tell me how",
    "start": "794800",
    "end": "800480"
  },
  {
    "text": "long this particular part of of the whole thing is taking and things like that so that gives you that sort of that debug ability right that understanding",
    "start": "800480",
    "end": "806959"
  },
  {
    "text": "of what your system is doing on any given sort of request kind of thing but then I think there's an even higher level to that where you know you",
    "start": "806959",
    "end": "813320"
  },
  {
    "text": "instrument things and you can tell right the whoever ask that okay the service is",
    "start": "813320",
    "end": "818399"
  },
  {
    "text": "up right I can hit on health endpoint of lot Readiness endpoint hopefully it's not just a pain to to get a TCP response",
    "start": "818399",
    "end": "825560"
  },
  {
    "text": "by maybe it's something you doing something meaningful that says okay the system is operational it's actually ready to process request successfully",
    "start": "825560",
    "end": "831440"
  },
  {
    "text": "kind of thing um but beyond that right you're G to have the can you answer is this thing doing what the business wants",
    "start": "831440",
    "end": "838120"
  },
  {
    "text": "out of it right so you're not just saying is this thing up right if your thing is up but it's you know maybe",
    "start": "838120",
    "end": "844079"
  },
  {
    "text": "you're faing process one on every 100 you know credit card transactions you know and you can't explain why right at",
    "start": "844079",
    "end": "851079"
  },
  {
    "text": "scale that's millions of dollars potentially right so there are some things that the business is going to care about right that instrumentation",
    "start": "851079",
    "end": "856959"
  },
  {
    "text": "can help you answer right but you have these all these different layers right of observability different parties are",
    "start": "856959",
    "end": "863279"
  },
  {
    "text": "going to be interested in different things right depending on depending who you ask i s people who use nag as as a a",
    "start": "863279",
    "end": "869639"
  },
  {
    "text": "tool for instrumentation well I'm not going to throw my developers into a nagio dashboard and say hey go answer me",
    "start": "869639",
    "end": "875279"
  },
  {
    "text": "some questions about you know the business kpis or something right but yeah I'm GNA use you know kind of different tools but I think the",
    "start": "875279",
    "end": "881560"
  },
  {
    "text": "observability really it's I think it's an all-encompassing term now which I think has gotten sort of diluted a",
    "start": "881560",
    "end": "887399"
  },
  {
    "text": "little bit um ever since we sort of we transitioned from calling things monitoring right to Now using sort of",
    "start": "887399",
    "end": "892639"
  },
  {
    "text": "the more uh um trendy term observability and I think that's going to mean different things to different people but",
    "start": "892639",
    "end": "898839"
  },
  {
    "text": "you know like instrumentation sort of remains I think at the end of the day whether it's automatic or sort of manual",
    "start": "898839",
    "end": "904880"
  },
  {
    "text": "that sort of remains for the developer specifically that sort of remains the the ultimate source of Truth Beyond",
    "start": "904880",
    "end": "910120"
  },
  {
    "text": "logging right yeah and I would like to kind of add something to your points both BJ and Johnny about instrumentation",
    "start": "910120",
    "end": "917360"
  },
  {
    "text": "I think it's very underestimated you know how much work it takes to really build a solid instrumentation library",
    "start": "917360",
    "end": "924480"
  },
  {
    "text": "because like um the amount of work you put be in this client goal line that you you were surprised is popular well it's",
    "start": "924480",
    "end": "930880"
  },
  {
    "text": "because it's so hard to produce one and especially when I joined kind of maintainership of this package or like",
    "start": "930880",
    "end": "936920"
  },
  {
    "text": "module really it is so much work in terms of you know making sure the code is efficient because suddenly so many",
    "start": "936920",
    "end": "943920"
  },
  {
    "text": "you know applications are just you know importing this package so modules so",
    "start": "943920",
    "end": "949079"
  },
  {
    "text": "suddenly you know the amount of dependencies really matters the amount of you know the efficiency of the code",
    "start": "949079",
    "end": "954680"
  },
  {
    "text": "matters the API scope scrip of this really really matters and I was just today trying to well what we did let's",
    "start": "954680",
    "end": "962480"
  },
  {
    "text": "be honest we made a little bit of mistake on the newest client go l so go go team member really help us to",
    "start": "962480",
    "end": "969000"
  },
  {
    "text": "implement you know essentially move to different runtime metrics for goang processor so in client go lank you are",
    "start": "969000",
    "end": "975920"
  },
  {
    "text": "able to essentially expose really in interesting information about your go lank process and around garbage",
    "start": "975920",
    "end": "982360"
  },
  {
    "text": "collection routine and uh memory and essentially Heap allocations like what",
    "start": "982360",
    "end": "988279"
  },
  {
    "text": "how many tiny objects and big objects you are kind of allocating like very low low level of information so we kind of",
    "start": "988279",
    "end": "994800"
  },
  {
    "text": "consume that and we we mer this contribution without clearly looking on maybe like how many metrics you are",
    "start": "994800",
    "end": "1001759"
  },
  {
    "text": "exposing and we suddenly expose maybe twice more metrics and suddenly we are impacting you know many goang services",
    "start": "1001759",
    "end": "1008399"
  },
  {
    "text": "because suddenly they are scraping you know twice more more metrics so the kind of thought amount of thoughts that have",
    "start": "1008399",
    "end": "1015480"
  },
  {
    "text": "to go through those instrumentation libraries is enormous it's not only metrics and it's even worse when you're",
    "start": "1015480",
    "end": "1021480"
  },
  {
    "text": "are talking about logging instrumentation and Trace instrumentation because it just even",
    "start": "1021480",
    "end": "1026558"
  },
  {
    "text": "more data that you are passing through you want to pay for this application compute power for doing you know a",
    "start": "1026559",
    "end": "1033678"
  },
  {
    "text": "normal work and not monitoring right and sometimes if you implement it wrongly if",
    "start": "1033679",
    "end": "1039558"
  },
  {
    "text": "you use those libraries wrongly if you make maybe wrong decisions you can pay much more for your observability than",
    "start": "1039559",
    "end": "1045199"
  },
  {
    "text": "for your real application that's a risk here right so it really matters doesn't it it's amazing actually to think of",
    "start": "1045199",
    "end": "1052200"
  },
  {
    "text": "that like I genuinely probably naively thought that that library was quite simple that it was just would had some",
    "start": "1052200",
    "end": "1059200"
  },
  {
    "text": "helpers that were collect buffering maybe and then sending off batches or",
    "start": "1059200",
    "end": "1064320"
  },
  {
    "text": "making them available or something but yeah now you mention like often I will tell people don't worry too much about",
    "start": "1064320",
    "end": "1071720"
  },
  {
    "text": "optimizing yet like get something built that works first and you can optimize it later when it becomes a problem if it",
    "start": "1071720",
    "end": "1078200"
  },
  {
    "text": "ever ever does this is one of those times where it really matters that this",
    "start": "1078200",
    "end": "1084240"
  },
  {
    "text": "isn't an expensive thing because yeah people are calling these methods all the time aren't they they use that client",
    "start": "1084240",
    "end": "1090400"
  },
  {
    "text": "everywhere it's almost in every code path you definitely don't want to think",
    "start": "1090400",
    "end": "1095520"
  },
  {
    "text": "you don't want to consider if you use that or not you just want to use it and it doesn't have a significant penalty",
    "start": "1095520",
    "end": "1101799"
  },
  {
    "text": "like similar to when I realize in a go binary like profiling is kind of always",
    "start": "1101799",
    "end": "1107320"
  },
  {
    "text": "on and you just have this endpoint if you just like anonymously import this package and stuff like that it was like",
    "start": "1107320",
    "end": "1114840"
  },
  {
    "text": "weird isn't that expensive should I switch that off in my real production binary but no it's like it's all",
    "start": "1114840",
    "end": "1120480"
  },
  {
    "text": "designed to be like I don't know fraction of a percent of your Total Resource us it so you just leave it on",
    "start": "1120480",
    "end": "1126039"
  },
  {
    "text": "you don't ask questions and when you actually get in trouble it's there and it doesn't matter if it's like developer",
    "start": "1126039",
    "end": "1131440"
  },
  {
    "text": "trouble or Ops trouble it's just there and that's so cool and so good to have",
    "start": "1131440",
    "end": "1136480"
  },
  {
    "text": "right but there are you know configurations variables for those um goang profiling that increases the",
    "start": "1136480",
    "end": "1142840"
  },
  {
    "text": "frequency of increases the sampling or frequency of CPU profiling that can Trash your application completely or you",
    "start": "1142840",
    "end": "1149840"
  },
  {
    "text": "can actually reduce it so there's lots of things you can control here and in the what you just described about right",
    "start": "1149840",
    "end": "1156440"
  },
  {
    "text": "with those new go runter metrics now we also need to consider if we make this user configurable because it's so many",
    "start": "1156440",
    "end": "1163320"
  },
  {
    "text": "metrics that if you don't need them it might be too expensive right so you of course there are Traders but the ideal",
    "start": "1163320",
    "end": "1170080"
  },
  {
    "text": "state in like some Utopia is you just have everything on and it cost you nothing and we try to get as close as",
    "start": "1170080",
    "end": "1176760"
  },
  {
    "text": "possible to",
    "start": "1176760",
    "end": "1179360"
  },
  {
    "text": "[Music]",
    "start": "1182850",
    "end": "1196000"
  },
  {
    "text": "that this episode is brought to you by chronosphere when it comes to True Cloud native monitoring metrics are the",
    "start": "1196000",
    "end": "1203000"
  },
  {
    "text": "backbone of your observability implementation teams need reliable scalable and efficient metrics so they",
    "start": "1203000",
    "end": "1209640"
  },
  {
    "text": "can know about issues well before their customers do companies born in the cloud native era often start with Prometheus",
    "start": "1209640",
    "end": "1215600"
  },
  {
    "text": "for monitoring which is obviously an amazing piece of software but they quickly push it to its limits and they",
    "start": "1215600",
    "end": "1221640"
  },
  {
    "text": "often out grow it they run into issues with solid data missing long-term storage and wasted engineering time",
    "start": "1221640",
    "end": "1227640"
  },
  {
    "text": "firefight the monitoring system versus delivering their application with confidence they described the system as",
    "start": "1227640",
    "end": "1233159"
  },
  {
    "text": "a house of cards where a single developers seemingly benign change can overload the whole monitoring system or",
    "start": "1233159",
    "end": "1239120"
  },
  {
    "text": "they say they're Flying Blind because they Pride themselves on making data driven decisions but losing visibility",
    "start": "1239120",
    "end": "1244880"
  },
  {
    "text": "means they lose this Competitive Edge Ryan's so-called VP of engineering at door Dash has this to say about",
    "start": "1244880",
    "end": "1250280"
  },
  {
    "text": "chronosphere quote the visibility and control the chronosphere platform gives us to manage our observability data and",
    "start": "1250280",
    "end": "1256640"
  },
  {
    "text": "costs are a game changer especially with our unprecedented growth end quote chronosphere is the",
    "start": "1256640",
    "end": "1262280"
  },
  {
    "text": "observability platform for clouding of teams operating at scale learn more and get a demo at chronosphere doio again",
    "start": "1262280",
    "end": "1268720"
  },
  {
    "text": "chronosphere [Music]",
    "start": "1268720",
    "end": "1280720"
  },
  {
    "text": "doio PK you mentioned earlier that you made a mistake in the client what was",
    "start": "1281640",
    "end": "1287159"
  },
  {
    "text": "that specifically you like let's talk about mistakes yes if you don't mind of",
    "start": "1287159",
    "end": "1292480"
  },
  {
    "text": "course of course that makes me feel better yeah so I think that the mistake is really around you know we didn't have",
    "start": "1292480",
    "end": "1299080"
  },
  {
    "text": "time you know to review exactly properly everything and that change was was pretty big and as maintainers of client",
    "start": "1299080",
    "end": "1305960"
  },
  {
    "text": "Library I think we just kind of get that from yourn hands so we're kind of pretty new and um essentially the usually it's",
    "start": "1305960",
    "end": "1313760"
  },
  {
    "text": "really about um memory runtime metrics that go like allows you to achieve so",
    "start": "1313760",
    "end": "1319159"
  },
  {
    "text": "usually what you did what you could do you could create this runtime. men stats",
    "start": "1319159",
    "end": "1324520"
  },
  {
    "text": "structure and you can create you can just C you know kind of uh program",
    "start": "1324520",
    "end": "1329559"
  },
  {
    "text": "runtime. read meats and provide the structure and that will fill you the structure with Statistics and this is",
    "start": "1329559",
    "end": "1336039"
  },
  {
    "text": "how we used to kind of get those metrics and give you kind of um very easy one",
    "start": "1336039",
    "end": "1342320"
  },
  {
    "text": "line statement that you provide in the beginning of your application that continuously expose this information",
    "start": "1342320",
    "end": "1348679"
  },
  {
    "text": "up to dat so prom materal can scrape it and have you know up toate Heap information you know how many",
    "start": "1348679",
    "end": "1354200"
  },
  {
    "text": "allocations you did on the Heap what's your GC latency and so on now what",
    "start": "1354200",
    "end": "1359440"
  },
  {
    "text": "happened in the go I think 1.7 was that runtime slmc package was introduced that",
    "start": "1359440",
    "end": "1366240"
  },
  {
    "text": "kind of give even more information about internal goal runtime and uh we wanted",
    "start": "1366240",
    "end": "1372159"
  },
  {
    "text": "to switch essentially to to this new format right so totally like go away",
    "start": "1372159",
    "end": "1377320"
  },
  {
    "text": "from this M stats logic however what's happening with especially metrics is",
    "start": "1377320",
    "end": "1382919"
  },
  {
    "text": "that we all care about cardinality we make sure the metric is stable because this is what allows us to aggregate over",
    "start": "1382919",
    "end": "1389320"
  },
  {
    "text": "time and and over over over different series and kind of compare to each other",
    "start": "1389320",
    "end": "1394360"
  },
  {
    "text": "like this is kind of the key concept behind metrics and also the cost of metric system really depends on",
    "start": "1394360",
    "end": "1400720"
  },
  {
    "text": "uniqueness of those Series right so yeah we just introduced a new unique Series",
    "start": "1400720",
    "end": "1406960"
  },
  {
    "text": "so new names and this is kind of what we could avoid what we could what we are",
    "start": "1406960",
    "end": "1412480"
  },
  {
    "text": "trying to kind of kind of fix right now is to add essentially some optionality right some configuration pieces so",
    "start": "1412480",
    "end": "1419159"
  },
  {
    "text": "especially because this library is so used so popular we need to make sure it by default doesn't increase your metric",
    "start": "1419159",
    "end": "1425240"
  },
  {
    "text": "count twice so this is generally kind of what we try to achieve so we know we have a a kind of community who wants to",
    "start": "1425240",
    "end": "1432880"
  },
  {
    "text": "have this new runtime amazing granular metrics so we kind of approve it and",
    "start": "1432880",
    "end": "1438159"
  },
  {
    "text": "merge it and then suddenly the rest of the world was like oh why I need to pay twice more I don't understand really so",
    "start": "1438159",
    "end": "1444960"
  },
  {
    "text": "this is the the really the tradeoffs we have to make in for such popular module it's kind of much more stressful and",
    "start": "1444960",
    "end": "1453120"
  },
  {
    "text": "kind of um much more work than if you if you could just break API you know on",
    "start": "1453120",
    "end": "1458480"
  },
  {
    "text": "every every release right yeah that is like big responsibility like not only because it took off and became popular",
    "start": "1458480",
    "end": "1465440"
  },
  {
    "text": "but also the nature of it the fact that it's found its way everywhere I mean it really is probably everywhere now so it",
    "start": "1465440",
    "end": "1472720"
  },
  {
    "text": "really does matter the decisions you take how do you balance that like is is it a tough balance do you argue do is",
    "start": "1472720",
    "end": "1480120"
  },
  {
    "text": "there a disagreement about what can get in and is are there some people that really paying attention to that cost",
    "start": "1480120",
    "end": "1486320"
  },
  {
    "text": "definitely yeah like we after emerging this feature we got like 20 or 12 let's say issues so and like very friendly",
    "start": "1486320",
    "end": "1493120"
  },
  {
    "text": "ones so so we were very very I mean it was amazing Community contributions to just you know report some problems so I",
    "start": "1493120",
    "end": "1501080"
  },
  {
    "text": "think it's that that's the pros and cons of like um such big mod such popular module is that you you get early",
    "start": "1501080",
    "end": "1507399"
  },
  {
    "text": "feedback but also you have to kind of make sure you're are not making mistakes a lot but generally speaking yeah um I",
    "start": "1507399",
    "end": "1514640"
  },
  {
    "text": "think there are basic rules when you're writing any Goan code especially that is consumed by by others like Library",
    "start": "1514640",
    "end": "1520960"
  },
  {
    "text": "modules and packages that saves your your life for example any new feature you should add under new API under new",
    "start": "1520960",
    "end": "1527919"
  },
  {
    "text": "methods you don't change you know the existing code whenever we want to change something we are having this uh incommon",
    "start": "1527919",
    "end": "1534600"
  },
  {
    "text": "SL deprecated kind of um you know special word that is actually handled by",
    "start": "1534600",
    "end": "1539919"
  },
  {
    "text": "the IDS like Goan and and and others um that automatically you know points you",
    "start": "1539919",
    "end": "1545279"
  },
  {
    "text": "that this code is you know well it's for compatibility reasons there but there is better solution somewhere else so there",
    "start": "1545279",
    "end": "1551360"
  },
  {
    "text": "are certain rules that you can you can go with but of course at some point you need to consider V2 or V3 fre or v00",
    "start": "1551360",
    "end": "1559039"
  },
  {
    "text": "that's a big chunk of work unfortunately nowadays with go yeah yeah I like that you got nice issues though at least like",
    "start": "1559039",
    "end": "1566080"
  },
  {
    "text": "someone's like you know thank you so much I love the recent PR but but I need to pay millions more yeah my kid didn't",
    "start": "1566080",
    "end": "1572200"
  },
  {
    "text": "need to go to college anyway probably smart enough didn't need it but that's nice that they're nice be",
    "start": "1572200",
    "end": "1578440"
  },
  {
    "text": "nice on GitHub everybody that's the lesson there yeah and this is why I sold the wishes because you were you were",
    "start": "1578440",
    "end": "1583679"
  },
  {
    "text": "nice to me yeah exactly there you go yeah even for feature that are really",
    "start": "1583679",
    "end": "1589080"
  },
  {
    "text": "like non-controversial it's if a package is used so frequently you are really",
    "start": "1589080",
    "end": "1594880"
  },
  {
    "text": "really really concerned about not breaking anyone and that sometimes is",
    "start": "1594880",
    "end": "1600320"
  },
  {
    "text": "weird right also when we added exemplars exemplars is also a huge thing right in",
    "start": "1600320",
    "end": "1605360"
  },
  {
    "text": "recently perhaps you can talk about that later but like for now it's just a feature a new feature that we didn't",
    "start": "1605360",
    "end": "1610919"
  },
  {
    "text": "think about before now we had to add new methods to an interface and stuff like",
    "start": "1610919",
    "end": "1616320"
  },
  {
    "text": "that but we didn't want to break and anyone so now you need interface upgrades like little go tricks they look",
    "start": "1616320",
    "end": "1622320"
  },
  {
    "text": "weird if you just look at them like in isolation but if you realize okay I couldn't break the users of the old",
    "start": "1622320",
    "end": "1628200"
  },
  {
    "text": "interface then it perhaps makes sense but you get this kind of craft in the library and I think we have been talking",
    "start": "1628200",
    "end": "1634799"
  },
  {
    "text": "about a legendary V2 for many years has never happened but they also like you",
    "start": "1634799",
    "end": "1640200"
  },
  {
    "text": "conserve weird coding patterns back then in 2012 2013 uh guess what we all thought",
    "start": "1640200",
    "end": "1648279"
  },
  {
    "text": "channels are the coolest thing right so we put channels in the function",
    "start": "1648279",
    "end": "1653440"
  },
  {
    "text": "signatures essentially used them as like concurrency safe iterators which no",
    "start": "1653440",
    "end": "1658720"
  },
  {
    "text": "that's not what they are supposed to be used for but they're still there because if you know just change and tell you",
    "start": "1658720",
    "end": "1664080"
  },
  {
    "text": "listen here this much cleaner signature for the function now please all the code in the world please change to that new",
    "start": "1664080",
    "end": "1670519"
  },
  {
    "text": "function it's pretty hard so we still have those channels there and if you think that's weird yes I agree",
    "start": "1670519",
    "end": "1678120"
  },
  {
    "text": "yeah the crft you mention is interesting because in go especially we pay a lot of attention to writing very easy to read",
    "start": "1678120",
    "end": "1685240"
  },
  {
    "text": "maintainable code and sometimes we'll sacrifice performance in the right place you know for readability and then",
    "start": "1685240",
    "end": "1692039"
  },
  {
    "text": "whenever you have to then optimize of course you're doing different things right you're you're doing more",
    "start": "1692039",
    "end": "1697519"
  },
  {
    "text": "complicated things or you finding little ways to save memory or avoid allocations those kinds of tricks and then you end",
    "start": "1697519",
    "end": "1704399"
  },
  {
    "text": "up with sort of mess and unusual bits and things you wouldn't be very proud of maybe but really like that's just the",
    "start": "1704399",
    "end": "1711760"
  },
  {
    "text": "reality kind of how it evolves and I think the stability in the API is worth",
    "start": "1711760",
    "end": "1717399"
  },
  {
    "text": "it and I'm sure the community thanks you for the attention paid at that level",
    "start": "1717399",
    "end": "1722440"
  },
  {
    "text": "because yeah if this was a package that was just breaking every all the time and you never knew what you'd end up with",
    "start": "1722440",
    "end": "1728919"
  },
  {
    "text": "all kinds of horrible things when like a dependency used a different version and things like this so I think I can speak",
    "start": "1728919",
    "end": "1735760"
  },
  {
    "text": "for everybody when I say thanks for that yeah lots of trade-offs there are there are there and I think what's also cool",
    "start": "1735760",
    "end": "1741559"
  },
  {
    "text": "about this is it's just one module these days it's so popular to create like",
    "start": "1741559",
    "end": "1746600"
  },
  {
    "text": "instrumentation libraries with like 10 modules because you want to be I don't know generic or have different versioning across it's really hard to",
    "start": "1746600",
    "end": "1753760"
  },
  {
    "text": "consume but I have actually question uh Yorn to you so you kind of started this",
    "start": "1753760",
    "end": "1759279"
  },
  {
    "text": "Library I presume have you been um designing the apis with optimization in",
    "start": "1759279",
    "end": "1765360"
  },
  {
    "text": "mind and you did benchmarking or you rather created API so it functionally works and",
    "start": "1765360",
    "end": "1770480"
  },
  {
    "text": "only then maybe after a couple of years you were maybe optimizing implementation I didn't start it right I took over from",
    "start": "1770480",
    "end": "1777120"
  },
  {
    "text": "the founders of the Prometheus project like Matt and Julius they started this and when I joined the team in 2013 I",
    "start": "1777120",
    "end": "1785080"
  },
  {
    "text": "think then I was like one of the tasks I took over was this instrumentation library and even back then like it",
    "start": "1785080",
    "end": "1791360"
  },
  {
    "text": "started essentially with the whole rewrite but I tried to keep like the spirit intact and yeah we thought a lot",
    "start": "1791360",
    "end": "1799279"
  },
  {
    "text": "about optimization because we knew like this is in every path if you instrument",
    "start": "1799279",
    "end": "1806840"
  },
  {
    "text": "your code but often we were wrong right and benchmarks micro benchmarks is a cool tool um my actually my first go",
    "start": "1806840",
    "end": "1813840"
  },
  {
    "text": "foron talk that was at the second go for con ever or third I don't know like back then I was really really excited it went",
    "start": "1813840",
    "end": "1821399"
  },
  {
    "text": "quite well this was essentially about how to increment a float in a concurrency Safe Way and still so that",
    "start": "1821399",
    "end": "1827840"
  },
  {
    "text": "it doesn't kill your performance it's a little lecture I mean this is perhaps why this talk went well because back",
    "start": "1827840",
    "end": "1833159"
  },
  {
    "text": "then we were all learning and it was little lecture how like micro benchmarks can help you and also cover those things",
    "start": "1833159",
    "end": "1839640"
  },
  {
    "text": "but yeah it's of course like all the stories about premature optimizations and everything it's interesting how also",
    "start": "1839640",
    "end": "1846519"
  },
  {
    "text": "later you realize when your programs get faster and they they want to increment this counter really often how that is",
    "start": "1846519",
    "end": "1853480"
  },
  {
    "text": "problematic then you have histograms where you want to increment buckets and then you realize they have to be",
    "start": "1853480",
    "end": "1860399"
  },
  {
    "text": "incremented all together because otherwise you can get inconsistent results if you collect your data it at",
    "start": "1860399",
    "end": "1866080"
  },
  {
    "text": "the wrong time and then this this created a whole um Talk from mine at Goofer con UK about like all this",
    "start": "1866080",
    "end": "1873960"
  },
  {
    "text": "concurrent programming how you can do a lock free Atomic increment of all those",
    "start": "1873960",
    "end": "1879120"
  },
  {
    "text": "buckets in the histogram and yeah it's kind of even from an academic point of view it's interesting but it all comes",
    "start": "1879120",
    "end": "1885399"
  },
  {
    "text": "with this warning just don't this for I mean please do this for fun but not in your production code but if you do it in",
    "start": "1885399",
    "end": "1891000"
  },
  {
    "text": "your production code it should be really well Justified is this really in a path where all this complexity is worth it",
    "start": "1891000",
    "end": "1897519"
  },
  {
    "text": "and all the risk You Take by doing this in the weird way like if you like you can just go into the histogram code in",
    "start": "1897519",
    "end": "1903919"
  },
  {
    "text": "Prometheus CLE goang it's really weird but it's also fun yeah so speaking for I",
    "start": "1903919",
    "end": "1910799"
  },
  {
    "text": "like to sort of put myself in the shoes of of a user right of these instr libraries not S A maintainer of them as",
    "start": "1910799",
    "end": "1917159"
  },
  {
    "text": "we've sort of been sort of the lens we've been using um for a little bit so if I wanted to sort of instrument my Cod",
    "start": "1917159",
    "end": "1923760"
  },
  {
    "text": "so we've already sort of um teased out right what what instrumentation means to different different tiers right um",
    "start": "1923760",
    "end": "1930480"
  },
  {
    "text": "within sort of all the people are concerned about sort of observability right so if I wanted to if I'm new to",
    "start": "1930480",
    "end": "1937120"
  },
  {
    "text": "observability right and I'm looking to sort of uh figure out okay what does it even mean to instrument my code like",
    "start": "1937120",
    "end": "1943840"
  },
  {
    "text": "what is it that I should be looking at right how do I how do I figure out whether I should be measuring request",
    "start": "1943840",
    "end": "1948880"
  },
  {
    "text": "per second versus latency like what how do I even approach this world right and obviously there are different lbr of",
    "start": "1948880",
    "end": "1955600"
  },
  {
    "text": "different things there's Prometheus you know I have to figure out where that fit fits in my stack there's open Telemetry",
    "start": "1955600",
    "end": "1961440"
  },
  {
    "text": "and then there's metrics and there's this and there's that like traces like how do I as a developer when do I use",
    "start": "1961440",
    "end": "1967440"
  },
  {
    "text": "what tool and for what I think there is a problem that uh who knows if you use",
    "start": "1967440",
    "end": "1972840"
  },
  {
    "text": "Prometheus for metrix collection perhaps you use something else and then you want to instrument not just for metrics but",
    "start": "1972840",
    "end": "1978159"
  },
  {
    "text": "for all the other things and of course you have a lot of choices to make and then there are a lot of efforts to unify",
    "start": "1978159",
    "end": "1984200"
  },
  {
    "text": "this like open tary is definitely a huge effort of like tying up all the Loose",
    "start": "1984200",
    "end": "1989240"
  },
  {
    "text": "Ends and it's really hard right so the first question in a practical context is",
    "start": "1989240",
    "end": "1996159"
  },
  {
    "text": "you should look at what your organization you're working in is doing and often they use some framework right",
    "start": "1996159",
    "end": "2002399"
  },
  {
    "text": "they use whatever let's start with a web rout or you have your favorite go web rout or whatever and then from there on",
    "start": "2002399",
    "end": "2009720"
  },
  {
    "text": "you can kind of inform that decision at SoundCloud we had a like the most",
    "start": "2009720",
    "end": "2015240"
  },
  {
    "text": "microservice at SoundCloud are running on the jvm and they had a this is also like somewhere in the public people talk",
    "start": "2015240",
    "end": "2022360"
  },
  {
    "text": "about it they had a kit for that right um I think it was called jvm kit where they had all the framework how to write",
    "start": "2022360",
    "end": "2029480"
  },
  {
    "text": "a micros service at SoundCloud and then they put instrumentation in there so just merely by using this framework",
    "start": "2029480",
    "end": "2035840"
  },
  {
    "text": "which you would use anyway you were instrumented for traces for metrics you got some logging some standardized",
    "start": "2035840",
    "end": "2042279"
  },
  {
    "text": "logging it's all in there when we we phrased this we we phrased this coin yeah now we coined the phrase that at",
    "start": "2042279",
    "end": "2048679"
  },
  {
    "text": "SoundCloud it was easier to get monitoring than to not get monitoring you couldn't avoid it right and that's",
    "start": "2048679",
    "end": "2056000"
  },
  {
    "text": "for many developers you're already in some framework may be literally like a software framework or the framework of",
    "start": "2056000",
    "end": "2062240"
  },
  {
    "text": "your organization and there might be something or if there's nothing you might just put the pieces in there and",
    "start": "2062240",
    "end": "2067919"
  },
  {
    "text": "you could look for the right thing I mean rarely you have like a green field approach if you do I mean that's also",
    "start": "2067919",
    "end": "2074000"
  },
  {
    "text": "fun of course you start your first go program and then you could just Link in",
    "start": "2074000",
    "end": "2079398"
  },
  {
    "text": "the Prometheus client goang it's like there's they're very minimalist uh",
    "start": "2079399",
    "end": "2084638"
  },
  {
    "text": "programs in the documentation where you can just link it in expose an HB endpoint and do nothing else and you",
    "start": "2084639",
    "end": "2090638"
  },
  {
    "text": "already get metrics for all the go runtime stuff for some process metrics",
    "start": "2090639",
    "end": "2095919"
  },
  {
    "text": "that's like more like an OS level stuff so you don't have to do anything to already get ton of useful metrics out of",
    "start": "2095919",
    "end": "2102720"
  },
  {
    "text": "your program and then you can go on you can like do really lowlevel metrics",
    "start": "2102720",
    "end": "2109160"
  },
  {
    "text": "instrumentation I I also have a talk about this somewhere in my portfolio we might link this but there's",
    "start": "2109160",
    "end": "2115680"
  },
  {
    "text": "also a set of middle Wares I don't know perhaps B you can talk about the middlewares we have because that's also",
    "start": "2115680",
    "end": "2121240"
  },
  {
    "text": "very nice go how go does http thing it plays very well with that yeah it's worth to mention you don't need to",
    "start": "2121240",
    "end": "2127760"
  },
  {
    "text": "reimplement every possible metric instrumentation so for example if your",
    "start": "2127760",
    "end": "2132920"
  },
  {
    "text": "application is doing HTTP requests which probably 90% of applications that you don't need to create a special you know",
    "start": "2132920",
    "end": "2140000"
  },
  {
    "text": "separate HTTP request and metric or or actually log line and Trace as well",
    "start": "2140000",
    "end": "2145520"
  },
  {
    "text": "there are libraries that abstract this for you and say uh you're using standard",
    "start": "2145520",
    "end": "2150599"
  },
  {
    "text": "HTP library to create a server you can just put a middleware which is essentially a wrapper over your HTTP",
    "start": "2150599",
    "end": "2157599"
  },
  {
    "text": "handlers that will instrument automatically with very consistent metric that are already someone fought",
    "start": "2157599",
    "end": "2164240"
  },
  {
    "text": "through those to make sense to make something reasonable and actually the another plus of it is that you are you",
    "start": "2164240",
    "end": "2171440"
  },
  {
    "text": "are getting a lots of observability for free so someone probably already built some grafana dashboards and maybe alerts",
    "start": "2171440",
    "end": "2178280"
  },
  {
    "text": "and maybe recording rules for for this information right so I think yo created",
    "start": "2178280",
    "end": "2183760"
  },
  {
    "text": "an HTTP prom HTTP package in from use client goldlink which already does that",
    "start": "2183760",
    "end": "2189960"
  },
  {
    "text": "and I maintaining JPC library because you know we are using JPC a lot it's very popular protocol and we have",
    "start": "2189960",
    "end": "2197079"
  },
  {
    "text": "literally the same middleware they are called interceptors but essentially they are like wrappers over grpc things that",
    "start": "2197079",
    "end": "2204480"
  },
  {
    "text": "adds metrics but also we add logging and tracing in this module we could",
    "start": "2204480",
    "end": "2210240"
  },
  {
    "text": "[Music] link",
    "start": "2211500",
    "end": "2218680"
  },
  {
    "text": "[Music] this episode is brought to you by our friends at fire hydrant fire hydrant is",
    "start": "2223510",
    "end": "2231200"
  },
  {
    "text": "the reliability platform for every developer incidents impact everyone not just sres fire hant gives teams the",
    "start": "2231200",
    "end": "2238000"
  },
  {
    "text": "tools to maintain service catalogues respond to incidents communicate through status pages and learn with",
    "start": "2238000",
    "end": "2243640"
  },
  {
    "text": "retrospectives what would normally be manual air prone pass across the entire spectrum of responding to an incident",
    "start": "2243640",
    "end": "2249680"
  },
  {
    "text": "this can all be automated in every way with fire hydrant fire hydrant gives you incident tooling to manage incidents of",
    "start": "2249680",
    "end": "2256680"
  },
  {
    "text": "any type with any severity with consistency you can declare and mitigate incidents all inside slack service",
    "start": "2256680",
    "end": "2263560"
  },
  {
    "text": "catalogs allow service owners to improve operational maturity and document all your deploys in your service catalog",
    "start": "2263560",
    "end": "2269720"
  },
  {
    "text": "incident analytics light extract meaningful insights about your reliability over any facet of your incident or the people who respond to",
    "start": "2269720",
    "end": "2276400"
  },
  {
    "text": "them and at the heart of it all incident runbooks they let you create custom automation rules to convert manual tasks",
    "start": "2276400",
    "end": "2282280"
  },
  {
    "text": "into automated reliable repeatable sequences that run when you want create slack channels J tickets Zoom Bridges",
    "start": "2282280",
    "end": "2290160"
  },
  {
    "text": "instantly after declaring an incident now your processes can be consistent and automatic try fire hydrant free for 14",
    "start": "2290160",
    "end": "2296760"
  },
  {
    "text": "days get access to every feature no credit card required get started at fireh hydrant doio again fireh hydrant",
    "start": "2296760",
    "end": "2303680"
  },
  {
    "text": "doio and our friends at flat F leading data onboarding platform for teams who",
    "start": "2303680",
    "end": "2308880"
  },
  {
    "text": "don't want to build yet another CSV uploader flat files powerful out of the block solution takes the data burden off",
    "start": "2308880",
    "end": "2314680"
  },
  {
    "text": "your shoulders freeing you to solve bigger business problems and build products people love get to usable data",
    "start": "2314680",
    "end": "2320240"
  },
  {
    "text": "faster so you can focus on what matters most for your business it's incredibly fastest setup write just a few lines of code and get up and running in hours not",
    "start": "2320240",
    "end": "2327280"
  },
  {
    "text": "days it is framework agnostic use the SDK to integrate flat file into any JavaScript application with support for",
    "start": "2327280",
    "end": "2333960"
  },
  {
    "text": "all major Frameworks learn more and get started today at flat file.com again flatfile",
    "start": "2333960",
    "end": "2340360"
  },
  {
    "text": "[Music]",
    "start": "2340360",
    "end": "2355050"
  },
  {
    "text": "[Music]",
    "start": "2360110",
    "end": "2364079"
  },
  {
    "text": "docomo a great job when I do this it's time for explain it",
    "start": "2365119",
    "end": "2371640"
  },
  {
    "text": "quickly so I'm going to challenge you BK to explain exemplars as quick as you can",
    "start": "2372960",
    "end": "2379720"
  },
  {
    "text": "exemplars we mentioned them earlier what are they okay quickest go I think the",
    "start": "2379720",
    "end": "2386720"
  },
  {
    "text": "easiest way to to mention this it is essentially an information that allows",
    "start": "2386720",
    "end": "2392040"
  },
  {
    "text": "you to show an example situation that",
    "start": "2392040",
    "end": "2397200"
  },
  {
    "text": "triggered some Metric increment or metric uh latency observation size",
    "start": "2397200",
    "end": "2403319"
  },
  {
    "text": "observation whatever you are measuring and you can essentially usually it's just a string some characters and some",
    "start": "2403319",
    "end": "2409680"
  },
  {
    "text": "timestamp and actually exact value of this example situation so usually we put there a trace ID to correlate with other",
    "start": "2409680",
    "end": "2417440"
  },
  {
    "text": "signals like tracing but we can put request ID for example to correlate with logging you can put anything but it's",
    "start": "2417440",
    "end": "2423720"
  },
  {
    "text": "pretty useful for recognizing um example Le situation that is represented by this",
    "start": "2423720",
    "end": "2429640"
  },
  {
    "text": "metric increase decrease observation cool congratulations that's very very well explained and pretty quick as well",
    "start": "2429640",
    "end": "2437079"
  },
  {
    "text": "which really gets into the spirit of things so thank you for that okay but you don't include an example in every",
    "start": "2437079",
    "end": "2443040"
  },
  {
    "text": "case right did you do this kind of randomly how do you decide when to emit an Exemplar y go for it I can see you",
    "start": "2443040",
    "end": "2450680"
  },
  {
    "text": "want to speak out do I I'm not even sure if I'm the most qualified person for that but anyway if",
    "start": "2450680",
    "end": "2457800"
  },
  {
    "text": "you use metrics to measure something that is essentially just a whole bunch of events like your HGB request then",
    "start": "2457800",
    "end": "2464640"
  },
  {
    "text": "metrics means you count them all together you kind of aggregate along certain dimensions and then you have",
    "start": "2464640",
    "end": "2471240"
  },
  {
    "text": "this like gigantic number of requests but you can't save them all so this is where Exemplar is coming from like it's",
    "start": "2471240",
    "end": "2477800"
  },
  {
    "text": "just an example so you pick one and then of course which one do you pick do you pick a one that represents a normal",
    "start": "2477800",
    "end": "2485079"
  },
  {
    "text": "request or do you pick one that's like an exceptional one probably you should do one of each or something but not too",
    "start": "2485079",
    "end": "2491160"
  },
  {
    "text": "many of the regular ones because they are boring you just want them for reference like that's actually a super interesting question and we have a",
    "start": "2491160",
    "end": "2497400"
  },
  {
    "text": "similar thing when you do like logging or tracing where you do try to collect every single event and you realize you",
    "start": "2497400",
    "end": "2503720"
  },
  {
    "text": "can't really do this so the naive thing is I just sample every thousandth",
    "start": "2503720",
    "end": "2509200"
  },
  {
    "text": "complicated word or uh then you realize no that's just getting me the regular ones but I want those rare ones that",
    "start": "2509200",
    "end": "2516000"
  },
  {
    "text": "have like a long latency or they failed for some reason so it's super interesting decision and I think this is",
    "start": "2516000",
    "end": "2521560"
  },
  {
    "text": "a hot topic of research right now right which examplar do I actually want to have the current like if you have a",
    "start": "2521560",
    "end": "2528119"
  },
  {
    "text": "normal Prometheus histogram and put examplar there they just put the last observation that fell into each buckets",
    "start": "2528119",
    "end": "2535079"
  },
  {
    "text": "which is I think it's a pretty good juristic because you get exactly like one exampler for every latency band",
    "start": "2535079",
    "end": "2540960"
  },
  {
    "text": "you're interested in which is a good start I think but I think this can be improved on and it will be interesting",
    "start": "2540960",
    "end": "2548319"
  },
  {
    "text": "what the future brings here and I think it's important to mention that uh exactly what you did say about sampling",
    "start": "2548319",
    "end": "2554480"
  },
  {
    "text": "like we have to make sure the example you put you put there so example Trace",
    "start": "2554480",
    "end": "2559599"
  },
  {
    "text": "ID it is the one that will be sampled and provided in your tracing back end",
    "start": "2559599",
    "end": "2565400"
  },
  {
    "text": "right so those system has to be at some point connected and I made some demo like it is very possible with client go",
    "start": "2565400",
    "end": "2571680"
  },
  {
    "text": "lank to just talk to your tracing library to tell what Trac ID you can put",
    "start": "2571680",
    "end": "2577800"
  },
  {
    "text": "as long as you know it's sampled but of course there is a problem if you have tail sampling and and other complex",
    "start": "2577800",
    "end": "2583800"
  },
  {
    "text": "scenarios so it's definitely not solved the problem yeah we had those discussions a lot like you should just",
    "start": "2583800",
    "end": "2589359"
  },
  {
    "text": "the tracing system should just sample those that Prometheus hasard exemplars",
    "start": "2589359",
    "end": "2594400"
  },
  {
    "text": "that's the one direction or the other is you somehow want to tell your your binary to pick the examplars according",
    "start": "2594400",
    "end": "2601359"
  },
  {
    "text": "to what your tracing system has sampled so it's a bit of yeah H and neck problem anyway if you are using client go link",
    "start": "2601359",
    "end": "2609160"
  },
  {
    "text": "and you are using tracing and you are not using exemplars you are missing out like it's very underestimated feature",
    "start": "2609160",
    "end": "2615160"
  },
  {
    "text": "please use it there you go when should you adjust your sampling like in the beginning are you just basically saying",
    "start": "2615160",
    "end": "2621119"
  },
  {
    "text": "okay I don't want any sampling I want everything right because I don't understand the system yet I want to see",
    "start": "2621119",
    "end": "2626680"
  },
  {
    "text": "I want to detect patterns or something like that and then maybe before production you pick you know something",
    "start": "2626680",
    "end": "2632160"
  },
  {
    "text": "that makes sense for the given the amount of volume and cost right because the more data you collect the more",
    "start": "2632160",
    "end": "2637599"
  },
  {
    "text": "expensive it gets so what decisions are you making about sampling and at what point in time btic you should be in a",
    "start": "2637599",
    "end": "2645359"
  },
  {
    "text": "better position to answer this sure so it's really tough situation because it's really around tracing instrumentation",
    "start": "2645359",
    "end": "2652480"
  },
  {
    "text": "and libraries usually sampling is not application driven it's really communicated all like done on on",
    "start": "2652480",
    "end": "2659240"
  },
  {
    "text": "collector level or agents and so there are different phases you can do that so um it has to be collaboration between",
    "start": "2659240",
    "end": "2666119"
  },
  {
    "text": "between every every of those signals what we what works for us is that you",
    "start": "2666119",
    "end": "2671760"
  },
  {
    "text": "know literally we use that on our production system is you have whatever sampling it suits you as long it's not",
    "start": "2671760",
    "end": "2679400"
  },
  {
    "text": "tail sampling so then it's very easy to essentially provide a proper Exemplar to",
    "start": "2679400",
    "end": "2685440"
  },
  {
    "text": "the proper metric as long as it's tail yeah this is kind of impossible can you define tail sampling yeah of course so",
    "start": "2685440",
    "end": "2692280"
  },
  {
    "text": "tail sampling is when you decide that you save do this slowly bch this isn't",
    "start": "2692280",
    "end": "2697680"
  },
  {
    "text": "part of the segment do it fast you can just take your time on this one so ta sampling is when you decide if you are",
    "start": "2697680",
    "end": "2703760"
  },
  {
    "text": "throwing a trace span or you are saving it in in your buend system after the",
    "start": "2703760",
    "end": "2710359"
  },
  {
    "text": "even the request happen because as we know traces are really bound to some request and it's very useful because you",
    "start": "2710359",
    "end": "2717040"
  },
  {
    "text": "you can often have a her ristic that will decide if you sample or not based on the result of this request if it was",
    "start": "2717040",
    "end": "2724240"
  },
  {
    "text": "slow or if it's failed then probably it's interesting to sample that if it's just a success it's boring",
    "start": "2724240",
    "end": "2730520"
  },
  {
    "text": "like who who wants to check successes right so characteristic along those lines are tail something yeah so this",
    "start": "2730520",
    "end": "2737680"
  },
  {
    "text": "actually the more I learn and hear about this the more complicated it seems",
    "start": "2737680",
    "end": "2742880"
  },
  {
    "text": "should everyone pay attention to this like now what point in a career like should a young engineer really start",
    "start": "2742880",
    "end": "2750319"
  },
  {
    "text": "paying attention to this because like you said Bon we used to we didn't really do it at all it was is kind of handled",
    "start": "2750319",
    "end": "2757480"
  },
  {
    "text": "usually by somebody else in some other way and Johnny you mentioned that you use monitoring to find out if the system",
    "start": "2757480",
    "end": "2764280"
  },
  {
    "text": "is doing what the business needs it to do so it's pretty important isn't it should this be a fundamental piece that",
    "start": "2764280",
    "end": "2770119"
  },
  {
    "text": "everyone gets to grips with in some small way at least I wrote this little piece in this 99 things 97 things sorry",
    "start": "2770119",
    "end": "2778200"
  },
  {
    "text": "every s should know about the third age of SRE and it kind of ends with that sentence where we are like really in the",
    "start": "2778200",
    "end": "2785400"
  },
  {
    "text": "third age of er if s is like taught at universities you just as if you're computer scientist student in your like",
    "start": "2785400",
    "end": "2793559"
  },
  {
    "text": "even before you get your Bachelor you should have a few courses about let's call it SRE I mean I don't know words",
    "start": "2793559",
    "end": "2799359"
  },
  {
    "text": "are hard right and those things would definitely include that you need to instrument everything and it's just",
    "start": "2799359",
    "end": "2805480"
  },
  {
    "text": "essential if you are like looking for your first job you might even check out",
    "start": "2805480",
    "end": "2811040"
  },
  {
    "text": "if that company you're working for is already doing this because if you're experienc with that that already you",
    "start": "2811040",
    "end": "2816520"
  },
  {
    "text": "could even evangelize this in an organization and it's great fun because it's so satisfying to see all the",
    "start": "2816520",
    "end": "2822480"
  },
  {
    "text": "progress you made by just introducing this right I mean that was the when back at SoundCloud when nobody knew if the",
    "start": "2822480",
    "end": "2828920"
  },
  {
    "text": "site is even up and then even the like simplest things you do that there are so much relief so that can also be quite",
    "start": "2828920",
    "end": "2836400"
  },
  {
    "text": "good but if you want to learn something in your first job and you want a role model organization to work for that",
    "start": "2836400",
    "end": "2843480"
  },
  {
    "text": "might be good topic to look at if they are doing proper monitoring oh good question for the interview there maybe",
    "start": "2843480",
    "end": "2849359"
  },
  {
    "text": "Johnny you're aren't you in SRE aren't you literally in SRE right now yeah and I just realized where I've come across",
    "start": "2849359",
    "end": "2856160"
  },
  {
    "text": "Beyond before we were both co-authors in the same book 97 things every sorry you should know that's how you met",
    "start": "2856160",
    "end": "2863440"
  },
  {
    "text": "okay yeah that's a nice way to meet I know right the other 95 should all get together with the other 95 and have a",
    "start": "2863440",
    "end": "2870079"
  },
  {
    "text": "big party the the weird thing is there are actually 98 things in the book and mine is 98 so perhaps I don't really",
    "start": "2870079",
    "end": "2877160"
  },
  {
    "text": "belong to it is one of them a section on off by one errors yeah yeah and the",
    "start": "2877160",
    "end": "2882760"
  },
  {
    "text": "funny thing is it's not one per author it's like there's like a there's fewer than 97 oh that'll save you effort auth",
    "start": "2882760",
    "end": "2889040"
  },
  {
    "text": "or 98 in this case yeah there some of us who wrote like two or three the flights oh yeah yeah that's funny oh it",
    "start": "2889040",
    "end": "2896359"
  },
  {
    "text": "sounds good well I recommend people get that book by the way I've I've read it and yeah I genuinely do recommend it",
    "start": "2896359",
    "end": "2902640"
  },
  {
    "text": "guess what it's that time it's time for unpopular [Music]",
    "start": "2902640",
    "end": "2909920"
  },
  {
    "text": "opinions unpop opinion you I actually think you should probably",
    "start": "2909920",
    "end": "2915080"
  },
  {
    "text": "[Music]",
    "start": "2915080",
    "end": "2922800"
  },
  {
    "text": "leave who has an unpopular opinion for us I have a very pressing unpopular",
    "start": "2922800",
    "end": "2929160"
  },
  {
    "text": "opinion it's because we already used that word that I don't like and I hope I",
    "start": "2929160",
    "end": "2934920"
  },
  {
    "text": "didn't use it that's the O word which is the word observability",
    "start": "2934920",
    "end": "2940119"
  },
  {
    "text": "right I mean my unpopular opinion is that I think this word if it ever had a",
    "start": "2940119",
    "end": "2945480"
  },
  {
    "text": "reason to be used in our profession here it has lost all meaning by now I can",
    "start": "2945480",
    "end": "2952839"
  },
  {
    "text": "very well understand why people came up with this word because I mean I already talked about like this paradigm shift",
    "start": "2952839",
    "end": "2959880"
  },
  {
    "text": "that people sensed when like this where developers thought monitoring is just an OBS concern and Ops people were",
    "start": "2959880",
    "end": "2966599"
  },
  {
    "text": "monitoring by just probing the HTP ports or something or pinging the server or",
    "start": "2966599",
    "end": "2971880"
  },
  {
    "text": "something like that and staring at dashboards and when people realized this is not uh enough and then you started to",
    "start": "2971880",
    "end": "2980040"
  },
  {
    "text": "realize there's so much more you need it for other things like just keeping your side up we didn't even talk about things",
    "start": "2980040",
    "end": "2987119"
  },
  {
    "text": "like capacity planning I mean we talked about business a bit right and then all those like different signals you have so",
    "start": "2987119",
    "end": "2993319"
  },
  {
    "text": "I totally understand that some people felt this urge we need a new word for that right but then I don't know like",
    "start": "2993319",
    "end": "2999680"
  },
  {
    "text": "observability arguably it's coming from control theory and it's I mean I think control theory is super relevant for",
    "start": "2999680",
    "end": "3006440"
  },
  {
    "text": "monitoring right but it's a rather specific Theory and like just taking a",
    "start": "3006440",
    "end": "3011680"
  },
  {
    "text": "single technical term from a theory and telling everyone this is not the new word I'm more a fan of instead of",
    "start": "3011680",
    "end": "3019240"
  },
  {
    "text": "overgeneralizing a very specific term just take the existing terms and",
    "start": "3019240",
    "end": "3025040"
  },
  {
    "text": "appreciate share it and acknowledge that we have all very different ideas what that term actually means and try to find",
    "start": "3025040",
    "end": "3031240"
  },
  {
    "text": "like a wider more common understanding of that term right now of course the",
    "start": "3031240",
    "end": "3036280"
  },
  {
    "text": "problem was also that then people used this word observability to essentially say so you just doing monitoring but I'm",
    "start": "3036280",
    "end": "3042640"
  },
  {
    "text": "doing observability or my my product my software project is an observability",
    "start": "3042640",
    "end": "3048760"
  },
  {
    "text": "project and yours is just a monitoring project um and then it became a bit of",
    "start": "3048760",
    "end": "3054200"
  },
  {
    "text": "like a word to fight over over what that means is then the marketing people will pick it up right and then someone came",
    "start": "3054200",
    "end": "3060720"
  },
  {
    "text": "up with the legendary three pillars of observability which sounds so great and I mean it was as a concept it really",
    "start": "3060720",
    "end": "3068440"
  },
  {
    "text": "conveyed some insight and some widening of ideas but of course everyone picked it up the marketing people picked it up",
    "start": "3068440",
    "end": "3075079"
  },
  {
    "text": "and then it was used so much that it became like then people had to discuss why three pillars of observability isn't",
    "start": "3075079",
    "end": "3081720"
  },
  {
    "text": "enough so you you run in circles you have the same thing and I don't know like of course I was brought up at",
    "start": "3081720",
    "end": "3087839"
  },
  {
    "text": "Google essentially where they just called in monitoring and they had tracing before people knew what it was",
    "start": "3087839",
    "end": "3094280"
  },
  {
    "text": "and all those things right and we just called it monitoring and it just worked fine right so for me it's like",
    "start": "3094280",
    "end": "3100599"
  },
  {
    "text": "observability is like if you want to use the term is something like an property of your system you want to have but for",
    "start": "3100599",
    "end": "3106880"
  },
  {
    "text": "me it's a subset of monitoring well most people think like monitoring is something that might be part of",
    "start": "3106880",
    "end": "3112920"
  },
  {
    "text": "observability observability or not even I don't know like what's his name I will",
    "start": "3112920",
    "end": "3118760"
  },
  {
    "text": "bling out on names no worries but I just realized that I was always saying that montoring is subset of observability and",
    "start": "3118760",
    "end": "3124839"
  },
  {
    "text": "now we are saying it's opposite I guess I was close yeah Cory Quinn Cory Quinn",
    "start": "3124839",
    "end": "3130760"
  },
  {
    "text": "said he always says on this podcast observability is the Hipster word for",
    "start": "3130760",
    "end": "3135920"
  },
  {
    "text": "monitoring and I kind of like that but I would say observability is the marketing",
    "start": "3135920",
    "end": "3140960"
  },
  {
    "text": "word for monitoring right and if Engineers call something a marketing work it's probably doesn't mean anything",
    "start": "3140960",
    "end": "3147920"
  },
  {
    "text": "good in a way right so I think if I use the word it might mean exactly what I",
    "start": "3147920",
    "end": "3153000"
  },
  {
    "text": "want or it might mean nothing and yeah I just stopped using the word I just use",
    "start": "3153000",
    "end": "3158599"
  },
  {
    "text": "monitoring and if you ever hear me use the word monitor I use it in the widest sense it's not just nagio probes and",
    "start": "3158599",
    "end": "3165799"
  },
  {
    "text": "it's not just metrics it's everything right do you use the word serverless I do use the word serverless but it yeah",
    "start": "3165799",
    "end": "3174079"
  },
  {
    "text": "and I just yesterday or was it was it today yeah know it was today like it's a long day we discussed how there are",
    "start": "3174079",
    "end": "3181680"
  },
  {
    "text": "seress application that are not really sess and then there are the true serverless application that nobody",
    "start": "3181680",
    "end": "3186920"
  },
  {
    "text": "really caters for because it's so rare that you have this pure use case but yeah I mean words are fluid right we",
    "start": "3186920",
    "end": "3193960"
  },
  {
    "text": "have to embrace that but it doesn't become better if you add more words to",
    "start": "3193960",
    "end": "3199040"
  },
  {
    "text": "the to the mix and then very aggressively push them well we'll be tweeting out that opinion to find out",
    "start": "3199040",
    "end": "3205319"
  },
  {
    "text": "once and for all if that is indeed unpopular or not BK have you got an",
    "start": "3205319",
    "end": "3210520"
  },
  {
    "text": "unpopular opinion oh yeah do we have a time for my unpopular opinions we do it",
    "start": "3210520",
    "end": "3216119"
  },
  {
    "text": "depends how long is it depends yeah let's see all right so quickly let's measure it so I was thinking a lot like",
    "start": "3216119",
    "end": "3222920"
  },
  {
    "text": "I have many unpopular opinions but some of it that I would truly want to I don't know Inspire others is that stay with me",
    "start": "3222920",
    "end": "3229960"
  },
  {
    "text": "on this it might sound childish and unprofessional for the start but I think go language is the best foundation and",
    "start": "3229960",
    "end": "3236200"
  },
  {
    "text": "platform to program every software in the world and I'm literally minut it from embedding system embedded system",
    "start": "3236200",
    "end": "3243119"
  },
  {
    "text": "robots browsers mobile devices I don't know machine learning configuration even",
    "start": "3243119",
    "end": "3248160"
  },
  {
    "text": "like infrastructure as a code and I mean it because I in my experience I was working with many programming languages",
    "start": "3248160",
    "end": "3254160"
  },
  {
    "text": "Pascal PHP C++ python I mean yeah many many even Niche ones like small talk prod and the reason why I stayed and I",
    "start": "3254160",
    "end": "3261880"
  },
  {
    "text": "kind of I have been working with go I don't know maybe seven eight years and I and I still love it is is I mean there",
    "start": "3261880",
    "end": "3268160"
  },
  {
    "text": "are many reasons already stated in Go Time so let's not repeat that but the point I want to make is that it's very",
    "start": "3268160",
    "end": "3274200"
  },
  {
    "text": "powerful to keep this go language as a foundation to to create more specialized",
    "start": "3274200",
    "end": "3279760"
  },
  {
    "text": "tooling right and you can have a lot of benefits by just sking you know this",
    "start": "3279760",
    "end": "3286079"
  },
  {
    "text": "Foundation to have to inherit simplicity relability patterns tooling like for",
    "start": "3286079",
    "end": "3291559"
  },
  {
    "text": "example IDE Integrations documentation building a completion like some of it is",
    "start": "3291559",
    "end": "3297480"
  },
  {
    "text": "that for example like um yeah Json language for configuration maybe it's good but I don't have hints when I kind",
    "start": "3297480",
    "end": "3304480"
  },
  {
    "text": "of point my Fields uh of this Json at Json nothing kind of hints me what the",
    "start": "3304480",
    "end": "3309920"
  },
  {
    "text": "structure actually implements and gol already have that right so why not reusing this and building on the on the",
    "start": "3309920",
    "end": "3316280"
  },
  {
    "text": "shoulders of giant and I really mean that and we have like um we use configuration in my past job to build",
    "start": "3316280",
    "end": "3324119"
  },
  {
    "text": "kind of configur for infrastructure in go and you know it wasn't perfect because there are some features of the",
    "start": "3324119",
    "end": "3330960"
  },
  {
    "text": "language that maybe are too much you have four Loops you have error checking and you have a little bit of boiler",
    "start": "3330960",
    "end": "3337000"
  },
  {
    "text": "plate but if you refine the language maybe specialize a little bit then it might just fit the use case just very",
    "start": "3337000",
    "end": "3343440"
  },
  {
    "text": "well while we are creating you know a totally new languages from scratch like Q or Json net if if Go is is so almost",
    "start": "3343440",
    "end": "3351200"
  },
  {
    "text": "perfect if little bit is needed to to to Perfection and maybe last example embedded systems I mentioned of course",
    "start": "3351200",
    "end": "3358280"
  },
  {
    "text": "garbage collection is is not very efficient here but there are already you know implementations of manual um you",
    "start": "3358280",
    "end": "3364520"
  },
  {
    "text": "know allocations I think dgraph created like a special allocator and there's even Vine which also kind of removed GC",
    "start": "3364520",
    "end": "3371559"
  },
  {
    "text": "but kept some of the features that go lank did so we might have maybe a version of go that has rust like memory",
    "start": "3371559",
    "end": "3379640"
  },
  {
    "text": "ownership and that would be amazing because we keep other features instead of kind of living with totally different",
    "start": "3379640",
    "end": "3386039"
  },
  {
    "text": "decisions that Ras Community made for other stuff that maybe I'm happy with right so that's my unpopular opinion",
    "start": "3386039",
    "end": "3391760"
  },
  {
    "text": "here wow I'll genuinely be interested to see if that is unpopular with our audience because maybe a lot of people",
    "start": "3391760",
    "end": "3397920"
  },
  {
    "text": "would agree with you I don't know the go fans should all agree right go but I disagree for one I think it's a truly",
    "start": "3397920",
    "end": "3405200"
  },
  {
    "text": "unpopular opinion because I disagree with it great pH enough okay I'm afraid that's",
    "start": "3405200",
    "end": "3411760"
  },
  {
    "text": "all the time we have for today but this is really flown and that's how you know know we've had a good conversation so",
    "start": "3411760",
    "end": "3416799"
  },
  {
    "text": "thank you so much for that we heard all about monitoring there and ability the",
    "start": "3416799",
    "end": "3423599"
  },
  {
    "text": "myth of Prometheus very interesting the origins there of that story and as well as exploring the exemplars and the good",
    "start": "3423599",
    "end": "3431720"
  },
  {
    "text": "kind of practices and things so I think it was honestly genuinely uh very helpful thank you so much to BK plot",
    "start": "3431720",
    "end": "3439240"
  },
  {
    "text": "care BK will you come back sometime on go time I would love to yeah we would love to have you beon robenstein also",
    "start": "3439240",
    "end": "3446520"
  },
  {
    "text": "will you come back yeah sure it's one of my favorite podcasts and if I'm in there myself even better is it it's boring for",
    "start": "3446520",
    "end": "3453559"
  },
  {
    "text": "me then but it's a great honor yeah if you remember everything you've said",
    "start": "3453559",
    "end": "3458599"
  },
  {
    "text": "that's boring so if you can try and forget it or just listen to it in a couple of years but yeah now if you",
    "start": "3458599",
    "end": "3464200"
  },
  {
    "text": "could just say that you'll be back that'd be great yeah I'll be back thank you I should say with the trator voice",
    "start": "3464200",
    "end": "3469839"
  },
  {
    "text": "yeah I'll be back yeah that that's just your normal voice isn't it beyon sometimes yeah and of course Johnny boso",
    "start": "3469839",
    "end": "3476240"
  },
  {
    "text": "thanks Johnny it's always good hanging out Beyond good luck with finding John Connor we'll see you next time on go",
    "start": "3476240",
    "end": "3483960"
  },
  {
    "text": "time if you want more Matt ryer more observability talk or simply more",
    "start": "3485200",
    "end": "3490359"
  },
  {
    "text": "podcasts produced by us at change log I have good news for you we partnered with our friends at grafana labs to help them",
    "start": "3490359",
    "end": "3497039"
  },
  {
    "text": "produce their very own pod it's called graff's Big Tent and it stars Matt Tom wilky and Matt tobac yes there's two",
    "start": "3497039",
    "end": "3505079"
  },
  {
    "text": "mats on the show very bad planning take a listen is it different than what came before it distinctly is observability as",
    "start": "3505079",
    "end": "3511920"
  },
  {
    "text": "a new term different than monitoring I think so because monitoring was almost always about time series about metrics",
    "start": "3511920",
    "end": "3517400"
  },
  {
    "text": "about numbers and observability is not necessarily about that I think monitoring is part of it but you still want to find out what's going on in your",
    "start": "3517400",
    "end": "3525280"
  },
  {
    "text": "system when you have a simple program it's easy as systems get bigger and they're used by more people and they're",
    "start": "3525280",
    "end": "3531520"
  },
  {
    "text": "more complicated it creates these new problems doesn't is it where we suddenly hidden a little bit sometimes from",
    "start": "3531520",
    "end": "3538039"
  },
  {
    "text": "what's really happening so observability has to be something around shedding some light on what's going on inside as well",
    "start": "3538039",
    "end": "3545680"
  },
  {
    "text": "subscribe to graff's big tent at Big tent. FM or wherever you get your",
    "start": "3545680",
    "end": "3551039"
  },
  {
    "text": "podcasts special thanks to our partners at fastly for CD ining for us to break master cylinder for keeping our beat",
    "start": "3551039",
    "end": "3557559"
  },
  {
    "text": "reserves topped up and to you for listening we appreciate you spending time with us on the next episode Natalie",
    "start": "3557559",
    "end": "3563680"
  },
  {
    "text": "and Matt are joined by by Matan ped a PhD candidate doing research on static Checkers he's put Go's Checker through",
    "start": "3563680",
    "end": "3570520"
  },
  {
    "text": "its paces and shares what he found that's something to look forward to next time on go",
    "start": "3570520",
    "end": "3578119"
  },
  {
    "text": "[Music]",
    "start": "3578130",
    "end": "3583659"
  },
  {
    "text": "[Music]",
    "start": "3585830",
    "end": "3589040"
  },
  {
    "text": "time h",
    "start": "3593640",
    "end": "3597480"
  }
]