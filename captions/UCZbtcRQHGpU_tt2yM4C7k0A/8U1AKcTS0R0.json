[
  {
    "text": "i feel really stupid because there's so many things to take note of",
    "start": "80",
    "end": "5759"
  },
  {
    "text": "that i take it like you basically take for granted when you write javascript",
    "start": "5759",
    "end": "10880"
  },
  {
    "text": "and then when you write rust you're like why doesn't this work and you're like oh because it's an unsigned int and like it overflows",
    "start": "10880",
    "end": "16160"
  },
  {
    "text": "in this particular case and you need to account for that yeah yeah",
    "start": "16160",
    "end": "22800"
  },
  {
    "text": "but it's been good i've enjoyed it only very briefly played around with rust and",
    "start": "22800",
    "end": "28000"
  },
  {
    "text": "feeling stupid definitely maps to my experience as well yeah it's like you could do it for",
    "start": "28000",
    "end": "33120"
  },
  {
    "text": "two months and just like still feel like you don't know what you're doing yeah it's tough i wrote",
    "start": "33120",
    "end": "40719"
  },
  {
    "text": "a um some rust code to parse a like a terraria world",
    "start": "40719",
    "end": "47600"
  },
  {
    "text": "file right and extract a image from it um and yeah it took",
    "start": "47600",
    "end": "54559"
  },
  {
    "text": "it took a while there's definitely a learning curve like rust is probably the like strictest",
    "start": "54559",
    "end": "60960"
  },
  {
    "text": "language i've ever used yeah very different than than using",
    "start": "60960",
    "end": "66960"
  },
  {
    "text": "javascript there's some really good things about",
    "start": "66960",
    "end": "73760"
  },
  {
    "text": "what it does like i i i like how it handles errors mm-hmm yes it looks like i mean",
    "start": "73760",
    "end": "81680"
  },
  {
    "text": "just for me mostly outside but it looks like possibly the best systems programming language we've developed",
    "start": "81680",
    "end": "88320"
  },
  {
    "text": "like the world has developed i would say that's true yeah and the error messages",
    "start": "88320",
    "end": "95439"
  },
  {
    "text": "honestly helped me so much like the compiler helped me in so many errors many times and they tell",
    "start": "95439",
    "end": "100640"
  },
  {
    "text": "you exactly what to do they're like this thing needs to be a beautiful reference maybe make it mutable",
    "start": "100640",
    "end": "106240"
  },
  {
    "text": "and i'm like cool the the thing that i don't i can't wrap my head around is",
    "start": "106240",
    "end": "111600"
  },
  {
    "text": "lifetimes oh well i i have not figured out lifetimes either and it's the way around it is i essentially",
    "start": "111600",
    "end": "118799"
  },
  {
    "text": "create a variable that copies a specific thing i need to use so i don't have to use lifetimes just because i still don't",
    "start": "118799",
    "end": "126159"
  },
  {
    "text": "understand lifetimes the syntax is really kind of",
    "start": "126159",
    "end": "132560"
  },
  {
    "text": "yeah i don't know the syntax is not helpful to me for for whatever reason yeah i",
    "start": "132560",
    "end": "138879"
  },
  {
    "text": "think um even like the rust book like reading that part is not easy because they're like oh if",
    "start": "138879",
    "end": "146720"
  },
  {
    "text": "you read the book you'll understand everything about russ and i'm like the book explains it but it's very",
    "start": "146720",
    "end": "152160"
  },
  {
    "text": "confusing it's not until you like actually implement it like 10 times that you",
    "start": "152160",
    "end": "157360"
  },
  {
    "text": "understand it",
    "start": "157360",
    "end": "160000"
  },
  {
    "text": "all right should we turn on recording and yeah in that direction let's see where's my",
    "start": "162879",
    "end": "168080"
  },
  {
    "text": "record hello hello okay that looks like it's doing all right i am recording the zoom",
    "start": "168080",
    "end": "174239"
  },
  {
    "text": "right now i haven't gone live on audio yet though um okay oh i need to start my recording",
    "start": "174239",
    "end": "181519"
  },
  {
    "text": "uh i'm not gonna have anything to say during the first segment probably um",
    "start": "181519",
    "end": "188319"
  },
  {
    "text": "just fyi kind of same i'm hoping to ask some some good questions to you yay",
    "start": "188319",
    "end": "196720"
  },
  {
    "text": "i i think um yeah we'll we we will have a bunch of things to",
    "start": "196720",
    "end": "202800"
  },
  {
    "text": "talk about there so i um was scanning through the links",
    "start": "202800",
    "end": "208480"
  },
  {
    "text": "that we were posting and then i realized one of them refers to an article i wrote and so i was like whoa that",
    "start": "208480",
    "end": "214000"
  },
  {
    "text": "it was i wrote it really what feels like a decade ago because it was before shelter in place",
    "start": "214000",
    "end": "220720"
  },
  {
    "text": "but um ah there was like a thing about uh the controversy of",
    "start": "220720",
    "end": "228720"
  },
  {
    "text": "the what was it of the functional api ah yes okay i still haven't read evan's",
    "start": "228720",
    "end": "236959"
  },
  {
    "text": "giant increment post um but that's linked up here",
    "start": "236959",
    "end": "245840"
  },
  {
    "text": "i think i sort of like without reading it he's talked about a lot of these things before so",
    "start": "245840",
    "end": "252159"
  },
  {
    "text": "yeah i was scanning it just now i mean some of the i think for the this",
    "start": "252159",
    "end": "257919"
  },
  {
    "text": "conversation just the high level outcomes",
    "start": "257919",
    "end": "261919"
  },
  {
    "text": "dropping the bundle size dropping the amount of cpu usage by 10x things like that like those seem",
    "start": "263040",
    "end": "268960"
  },
  {
    "text": "like pretty good things to highlight yeah yeah also i've been using view and",
    "start": "268960",
    "end": "274400"
  },
  {
    "text": "typescript for a project it's so painful view 2",
    "start": "274400",
    "end": "280400"
  },
  {
    "text": "view 2 yeah yeah v3 should be so much better for that i think the class based syntax is still",
    "start": "280400",
    "end": "286800"
  },
  {
    "text": "gonna be around though like because i asked evan about it i was like so if you write typescript view",
    "start": "286800",
    "end": "291840"
  },
  {
    "text": "will you still use classes and he's like yeah tech i mean you don't have to but if you want to write",
    "start": "291840",
    "end": "297280"
  },
  {
    "text": "strict typescript because you don't you can write regular view without making it explicitly typescript and it",
    "start": "297280",
    "end": "303759"
  },
  {
    "text": "checks it but if you were if you wanted to be more strict about typescript then you would use class-based syntax",
    "start": "303759",
    "end": "311680"
  },
  {
    "text": "which is weird i've been using class-based syntax and struggling especially with like imported",
    "start": "311680",
    "end": "319840"
  },
  {
    "text": "libraries i'm using like monaco the vs code editor and uh",
    "start": "319840",
    "end": "325600"
  },
  {
    "text": "i had to import the types because it didn't automatically know and yeah it's a pain",
    "start": "325600",
    "end": "333120"
  },
  {
    "text": "monico is fun i've played with that yeah it's really it's really nice because then you",
    "start": "333120",
    "end": "338639"
  },
  {
    "text": "don't have to like create an editor yourself you get all the niceties of it i'm um i'm just creating like a very",
    "start": "338639",
    "end": "345199"
  },
  {
    "text": "basic playground type of an editor using monaco um for some netify stuff and i don't know",
    "start": "345199",
    "end": "351759"
  },
  {
    "text": "if it's too busy like if i'm doing too much because monica does a lot",
    "start": "351759",
    "end": "356880"
  },
  {
    "text": "i'm like maybe if i just did a much simpler editor i might not need it but",
    "start": "356880",
    "end": "364160"
  },
  {
    "text": "i'm going to turn on the the live broadcast if everyone's cool with that yeah",
    "start": "364160",
    "end": "371199"
  },
  {
    "text": "go for it hello live listeners check check let's see if we have any",
    "start": "372639",
    "end": "380479"
  },
  {
    "text": "live listeners chime in in the party channel there it",
    "start": "380479",
    "end": "386319"
  },
  {
    "text": "is",
    "start": "392840",
    "end": "395840"
  },
  {
    "text": "so um do these segments look good",
    "start": "401440",
    "end": "406319"
  },
  {
    "text": "i think so is section two uh",
    "start": "406639",
    "end": "413520"
  },
  {
    "text": "any it's just anything today i learned yeah okay",
    "start": "413520",
    "end": "421199"
  },
  {
    "text": "cool you mean like does it have to be tech focused or not just like does it have to be",
    "start": "421360",
    "end": "427280"
  },
  {
    "text": "javascript focus oh yeah mine mine is kind of but",
    "start": "427280",
    "end": "432560"
  },
  {
    "text": "no it doesn't have to be i don't think the only things i've learned recently have been regarding minecraft",
    "start": "432560",
    "end": "439440"
  },
  {
    "text": "so nice i don't i don't have anything you should change can't you you should",
    "start": "439440",
    "end": "444560"
  },
  {
    "text": "share it can't you do scripting in minecraft",
    "start": "444560",
    "end": "449039"
  },
  {
    "text": "the the mods the mod scene for minecraft is out of control it's uh but it's all java so oh",
    "start": "450240",
    "end": "458479"
  },
  {
    "text": "i have no interest no interest they do have you can write one in in kotlin but um i",
    "start": "458479",
    "end": "464960"
  },
  {
    "text": "have no interest not either can you do it in any jvm language",
    "start": "464960",
    "end": "470160"
  },
  {
    "text": "uh theoretically i mean it's it runs in jvm so",
    "start": "470160",
    "end": "476800"
  },
  {
    "text": "you could probably create some sort of bridge for for any jvm language",
    "start": "476800",
    "end": "481919"
  },
  {
    "text": "i mean you could probably figure out how to how to use jython you know i was thinking i thought or jruby right i was gonna say",
    "start": "481919",
    "end": "488800"
  },
  {
    "text": "that there is uh there are like python apis for it i think or ways to write plugins in python",
    "start": "488800",
    "end": "496479"
  },
  {
    "text": "because what some of these languages particularly ruby bring me joy to work",
    "start": "496479",
    "end": "501680"
  },
  {
    "text": "in uh some of these languages being are very painful",
    "start": "501680",
    "end": "507840"
  },
  {
    "text": "yeah but ruby i don't know i was just talking to",
    "start": "510319",
    "end": "515760"
  },
  {
    "text": "co-workers about this like ruby's okay with you monkey patching everything everywhere i",
    "start": "515760",
    "end": "522959"
  },
  {
    "text": "just can't believe that that is yeah that people can be uh productive in an environment where",
    "start": "522959",
    "end": "530160"
  },
  {
    "text": "you have no idea what the environment is i mean",
    "start": "530160",
    "end": "535760"
  },
  {
    "text": "can't you do that in javascript oh yeah but it's heavily frowned upon and not not taught as like the way to go whereas",
    "start": "535760",
    "end": "542080"
  },
  {
    "text": "like when i was doing a rails app i couldn't tell where ruby ended and rails began and the the",
    "start": "542080",
    "end": "550480"
  },
  {
    "text": "the way that i got around that was i i shouldn't care because i'll never be out of this that that's sort of true",
    "start": "550480",
    "end": "557600"
  },
  {
    "text": "right so like the way i think of ruby is it is the best language out there for writing dsls",
    "start": "557600",
    "end": "563440"
  },
  {
    "text": "yeah so use it that way right create a dsl for your application approach so that i mean",
    "start": "563440",
    "end": "570240"
  },
  {
    "text": "thinking about modding minecraft right you could make a minecraft specific dsl based on ruby and it would probably be",
    "start": "570240",
    "end": "577839"
  },
  {
    "text": "phenomenal and rails is a dsl for building web apps",
    "start": "577839",
    "end": "582959"
  },
  {
    "text": "that's all it is yeah i i wasn't in that frame of mind",
    "start": "582959",
    "end": "588800"
  },
  {
    "text": "for sure",
    "start": "588800",
    "end": "591839"
  },
  {
    "text": "i didn't say it was my favorite language for building enterprise applications i said it was the one that brings me joy to play with",
    "start": "597040",
    "end": "602560"
  },
  {
    "text": "sure nick there was a what did you there was a tweet that you made i don't",
    "start": "602560",
    "end": "609360"
  },
  {
    "text": "know a week ago something about get get config i thought it was you",
    "start": "609360",
    "end": "617600"
  },
  {
    "text": "could that sounds like something i'd tweet about",
    "start": "617600",
    "end": "621279"
  },
  {
    "text": "i don't know i remember i was interested and it was some sort of",
    "start": "624000",
    "end": "631279"
  },
  {
    "text": "hack around to like uh get config stuff oh yeah yeah yeah",
    "start": "631279",
    "end": "638560"
  },
  {
    "text": "that could be in here today i learned yeah i was going to cop oh there you go yeah for sure",
    "start": "638640",
    "end": "647839"
  },
  {
    "text": "that is super i i love that i found that but it is so much like",
    "start": "651040",
    "end": "658079"
  },
  {
    "text": "it's a crazy hack i guess is the way have that tweet handy uh",
    "start": "658079",
    "end": "664160"
  },
  {
    "text": "almost i'm scrolling into my not very long time",
    "start": "664160",
    "end": "673920"
  },
  {
    "text": "all right and then let's maybe get rolling i don't have a time time limit but i do not have okay here it is okay this",
    "start": "673920",
    "end": "680560"
  },
  {
    "text": "was back in may",
    "start": "680560",
    "end": "683600"
  },
  {
    "text": "so i found it",
    "start": "686399",
    "end": "689839"
  },
  {
    "text": "okay yeah um we can get started then we'll just kind of jump right in to",
    "start": "696079",
    "end": "701920"
  },
  {
    "text": "talking about view okay um oh real quick can you hear this what",
    "start": "701920",
    "end": "711440"
  },
  {
    "text": "yes all right i will get started with the music then here we go",
    "start": "711440",
    "end": "731839"
  },
  {
    "text": "[Music] [Applause]",
    "start": "732420",
    "end": "741628"
  },
  {
    "text": "hello and welcome to another exciting js party i'm your host this week nick and i am",
    "start": "742560",
    "end": "748399"
  },
  {
    "text": "joined by three fantastic panelists first off k ball how's it going k ball hello welcome welcome",
    "start": "748399",
    "end": "756720"
  },
  {
    "text": "uh and uh also divya divya welcome hello hello and finally last but",
    "start": "756720",
    "end": "764240"
  },
  {
    "text": "definitely not least is chris or aka bone skull bones call how's it going",
    "start": "764240",
    "end": "769360"
  },
  {
    "text": "howdy we have an exciting show lined up for you today uh we are going to be talking first off",
    "start": "769360",
    "end": "776000"
  },
  {
    "text": "about the framework wars and specifically what is new in view what is coming down",
    "start": "776000",
    "end": "782000"
  },
  {
    "text": "the pipeline uh apparently soonish with view three uh and our resident",
    "start": "782000",
    "end": "787040"
  },
  {
    "text": "view expert divya is gonna walk us through that dippy do you wanna tell us some of the exciting things coming in view three yeah definitely",
    "start": "787040",
    "end": "793279"
  },
  {
    "text": "so we've talked a lot i think in previous episodes cable and i have gabbed on and on about v3 and",
    "start": "793279",
    "end": "800560"
  },
  {
    "text": "we've speculated many times as to when v3 will appear and come to the full",
    "start": "800560",
    "end": "807279"
  },
  {
    "text": "without much knowing without knowing exactly when that date is but um i think it was the beginning of",
    "start": "807279",
    "end": "814240"
  },
  {
    "text": "this month so july 1st avenue um opened an issue in the rfc's",
    "start": "814240",
    "end": "820000"
  },
  {
    "text": "uh repo for vue with the status update which is something that we've been waiting for for a really long",
    "start": "820000",
    "end": "825760"
  },
  {
    "text": "time because i think v3 was slated to be released at the end of 2019 and then they were",
    "start": "825760",
    "end": "831440"
  },
  {
    "text": "like beginning 2020. i think eventually it was around q2 so we are in",
    "start": "831440",
    "end": "836480"
  },
  {
    "text": "sort of q2 are we q2 yeah um and so there's finally an actual status",
    "start": "836480",
    "end": "842000"
  },
  {
    "text": "update it's not super clear as to the exact date that the release will happen",
    "start": "842000",
    "end": "847199"
  },
  {
    "text": "but there is like a long thread as to um that points to the targets that they have at the moment",
    "start": "847199",
    "end": "853440"
  },
  {
    "text": "which is actually the closest that they've ever gone to telling you a timeline um and so from that",
    "start": "853440",
    "end": "859360"
  },
  {
    "text": "particular dock which we'll copy in the in the notes it says that um",
    "start": "859360",
    "end": "865279"
  },
  {
    "text": "ie11 compatibility will be by july 2020 i would say end of july because",
    "start": "865279",
    "end": "870399"
  },
  {
    "text": "we're currently at the beginning of july we haven't heard anything yet so um july 2020 i think is is",
    "start": "870399",
    "end": "876720"
  },
  {
    "text": "ie11 compatibility as well as the migration guide which i think is going to be really important for people",
    "start": "876720",
    "end": "882240"
  },
  {
    "text": "to migrate their applications but in terms of using view three um i believe it's fairly production",
    "start": "882240",
    "end": "887440"
  },
  {
    "text": "ready at the moment and by production already i mean it's ready if you don't care about id11",
    "start": "887440",
    "end": "892880"
  },
  {
    "text": "um otherwise it's not production ready uh but it is ready to be used i think",
    "start": "892880",
    "end": "898720"
  },
  {
    "text": "they've compartmentalized various parts of u3 so you can use the composition api you can use view router in w3 form and",
    "start": "898720",
    "end": "906320"
  },
  {
    "text": "so on um and so you can pick and choose and use various parts of view 3 and um updated the updated",
    "start": "906320",
    "end": "913600"
  },
  {
    "text": "release without having to wait for a lot of these pieces if you don't care about that um so that's actually really exciting i",
    "start": "913600",
    "end": "920800"
  },
  {
    "text": "think the final release date when they're like everything will be cut and dry done is august according to this",
    "start": "920800",
    "end": "926800"
  },
  {
    "text": "document it says early august is when final release will happen when you can",
    "start": "926800",
    "end": "932240"
  },
  {
    "text": "sort of say it's actually fully ready uh but yeah actually that's super soon so",
    "start": "932240",
    "end": "937279"
  },
  {
    "text": "that's like you know in a month or two we'll have you three finally here let's fingers crossed that this deadline",
    "start": "937279",
    "end": "943680"
  },
  {
    "text": "does not extend further um but i would say that that's the most exciting thing i think and",
    "start": "943680",
    "end": "949920"
  },
  {
    "text": "alongside that way i think um you might have seen but avenue has also been talking a lot about various",
    "start": "949920",
    "end": "956480"
  },
  {
    "text": "experiments he's been doing with vue so vite is i think we've talked about it in a previous episode",
    "start": "956480",
    "end": "961680"
  },
  {
    "text": "was something that he just released one day uh which i assume was just like while",
    "start": "961680",
    "end": "967120"
  },
  {
    "text": "working on view three decided to do something else uh using like dog fooding",
    "start": "967120",
    "end": "972720"
  },
  {
    "text": "dog fooding essentially v3 and uh modern experimental standards like esm",
    "start": "972720",
    "end": "978320"
  },
  {
    "text": "and so on i think he uses snowpack so that that's also a really cool thing that came out of the",
    "start": "978320",
    "end": "984320"
  },
  {
    "text": "overall like development and dog fooding v3 so there's so much that's happening in that space i think",
    "start": "984320",
    "end": "990160"
  },
  {
    "text": "in the next two months you'll see a lot of like exciting developments and probably a bunch of blog posts and",
    "start": "990160",
    "end": "996399"
  },
  {
    "text": "comments and tweets very cool yeah august is uh depending on how you view time right now",
    "start": "996399",
    "end": "1002720"
  },
  {
    "text": "it's an eternity away or it's tomorrow exactly our time is",
    "start": "1002720",
    "end": "1007759"
  },
  {
    "text": "so bizarre right now well and thinking about it i know evan yu has at least one kid and i don't know how",
    "start": "1007759",
    "end": "1014320"
  },
  {
    "text": "many of the other folks working on the view three release also have kids but i feel like we can give them a little slack",
    "start": "1014320",
    "end": "1019839"
  },
  {
    "text": "on shipping late at least given mine and every other parent's experience over the last few months",
    "start": "1019839",
    "end": "1026400"
  },
  {
    "text": "shipping anything right now really feels like an accomplishment so yeah uh but just to kind of touch a little",
    "start": "1026400",
    "end": "1032720"
  },
  {
    "text": "bit on the history of view three uh because we've definitely talked about it before um and surprise surprise one of the",
    "start": "1032720",
    "end": "1040160"
  },
  {
    "text": "things that i specifically remember about it is that it's being rewritten in typescript i i don't know why that part would stick",
    "start": "1040160",
    "end": "1045600"
  },
  {
    "text": "in my head um but it did and uh i know also didn't it start off as kind of a",
    "start": "1045600",
    "end": "1052240"
  },
  {
    "text": "private repo that that just the core team was kind of working on in secret for a while to kind",
    "start": "1052240",
    "end": "1057280"
  },
  {
    "text": "of get their ideas flushed out and then uh obviously it's been opened up since then is that right yes so one thing that was",
    "start": "1057280",
    "end": "1064880"
  },
  {
    "text": "pretty interesting is the development process for view three happened right about at the same time as",
    "start": "1064880",
    "end": "1070559"
  },
  {
    "text": "the view team also started really using a uh an rfc process",
    "start": "1070559",
    "end": "1076080"
  },
  {
    "text": "request for comments process so they kept the core development experience",
    "start": "1076080",
    "end": "1082320"
  },
  {
    "text": "experiments early in view 3 as a private repo but they were broadcasting a lot of the proposals for",
    "start": "1082320",
    "end": "1090000"
  },
  {
    "text": "features in public and working out through those in public which to me was a really interesting balance",
    "start": "1090000",
    "end": "1096160"
  },
  {
    "text": "of let's not have the experience where we have something super raw and un ready and we get 20 million issues",
    "start": "1096160",
    "end": "1103039"
  },
  {
    "text": "and pull requests from people who don't understand what we're doing but let's also have this process be open",
    "start": "1103039",
    "end": "1108559"
  },
  {
    "text": "so folks can actually get their opinions in and it's not just happening in secret yeah i imagine that that's where the",
    "start": "1108559",
    "end": "1114880"
  },
  {
    "text": "prologue version of you died",
    "start": "1114880",
    "end": "1118799"
  },
  {
    "text": "potentially oh nick i've missed you i really like the rfc process because i",
    "start": "1121039",
    "end": "1128160"
  },
  {
    "text": "think it was also a really good way for the community to feel heard because for the longest time there was",
    "start": "1128160",
    "end": "1133520"
  },
  {
    "text": "this concept that vue had like avenue is the",
    "start": "1133520",
    "end": "1138640"
  },
  {
    "text": "the bdfl of view and he held the reigns and there was always speculation as to what",
    "start": "1138640",
    "end": "1144400"
  },
  {
    "text": "would happen if a boss hit evan or a dinosaur at him or something um and he no longer could be part of the",
    "start": "1144400",
    "end": "1150960"
  },
  {
    "text": "project and so the rfc was also in line with um making sure that the community had",
    "start": "1150960",
    "end": "1156320"
  },
  {
    "text": "there was transparency so people knew what was being worked on and i think it was also the beginning of um the core team",
    "start": "1156320",
    "end": "1164000"
  },
  {
    "text": "and various members of the core team taking more responsibility for core because a lot of them were part of",
    "start": "1164000",
    "end": "1170000"
  },
  {
    "text": "they owned various parts of the ecosystem like the router and the ux and so on but i think coal is a lot of it um evan's",
    "start": "1170000",
    "end": "1177120"
  },
  {
    "text": "responsibility and so i think with the release of an rfc process and more transparency the various members of",
    "start": "1177120",
    "end": "1184720"
  },
  {
    "text": "the core team started being more involved with core and i think evan wanted that as well and he's talked about wanting that and",
    "start": "1184720",
    "end": "1190320"
  },
  {
    "text": "making sure that everyone is part of that so that he could slowly you know seed responsibility to people",
    "start": "1190320",
    "end": "1196799"
  },
  {
    "text": "um and i think that's really cool because it also shows the the community aspect of vue because we",
    "start": "1196799",
    "end": "1203679"
  },
  {
    "text": "and we've talked about this before that the success of a framework has to do with the people who use it",
    "start": "1203679",
    "end": "1208720"
  },
  {
    "text": "as well and i think sometimes people forget that because they're like my framework uses x technology and it's",
    "start": "1208720",
    "end": "1213919"
  },
  {
    "text": "awesome and it doesn't matter who uses it it's just like this technology speaks for itself and people use it",
    "start": "1213919",
    "end": "1219440"
  },
  {
    "text": "because of how great it is but i think that is a misnomer and uh vue has",
    "start": "1219440",
    "end": "1225280"
  },
  {
    "text": "shown through its actions and through all these processes that they have in place that they care about the people who use it a",
    "start": "1225280",
    "end": "1230880"
  },
  {
    "text": "lot and they actually listen so the rfc process is not just like a shell where they're like oh let's",
    "start": "1230880",
    "end": "1236000"
  },
  {
    "text": "pretend we listen to people and then close the issue and never listen to them but i've actually seen um like evan",
    "start": "1236000",
    "end": "1243600"
  },
  {
    "text": "taking a lot of the rfcs into consideration and actually changing apis as a result so that's actually really",
    "start": "1243600",
    "end": "1248960"
  },
  {
    "text": "great um to see that yeah there was a pretty dramatic shift in how what became the composition",
    "start": "1248960",
    "end": "1256880"
  },
  {
    "text": "api shook out the composition api started out as the functional api proposal",
    "start": "1256880",
    "end": "1262559"
  },
  {
    "text": "which is the hooks inspired change to view that",
    "start": "1262559",
    "end": "1268000"
  },
  {
    "text": "i'm probably the most excited of anything in view three about that and some of the stuff that that enables but the first version of that got",
    "start": "1268080",
    "end": "1275440"
  },
  {
    "text": "a lot of blowback and it was super impressive to me to watch that process play out and what i mean that's",
    "start": "1275440",
    "end": "1283200"
  },
  {
    "text": "challenging community management how do you nudge people towards change while also",
    "start": "1283200",
    "end": "1288559"
  },
  {
    "text": "accepting legitimate criticisms and using that to make the final outcome better but i think evan and the",
    "start": "1288559",
    "end": "1294240"
  },
  {
    "text": "whole team there did a great job yeah it's always hard because um people",
    "start": "1294240",
    "end": "1300400"
  },
  {
    "text": "like i think everyone's a critic right and not a lot of people are doing the work and everyone's just quick to",
    "start": "1300400",
    "end": "1306320"
  },
  {
    "text": "criticize and so it's also easy to get really defensive and i've seen frameworks do that where the",
    "start": "1306320",
    "end": "1312000"
  },
  {
    "text": "moment someone raises an issue they get automatically defensive and they double down on a decision they've made",
    "start": "1312000",
    "end": "1317840"
  },
  {
    "text": "um and within view there was there was sort of this like criticism that came up in the beginning because",
    "start": "1317840",
    "end": "1323760"
  },
  {
    "text": "with the functional api in particular that was actually really controversial because when it was released they talked about",
    "start": "1323760",
    "end": "1329440"
  },
  {
    "text": "um and this was i think april or may of last year when they when they released the functional api",
    "start": "1329440",
    "end": "1335840"
  },
  {
    "text": "um rfc and it it alluded to the possibility of the functional api",
    "start": "1335840",
    "end": "1341840"
  },
  {
    "text": "being a new syntax and not being backward compatible so three would just move away from current view two syntax",
    "start": "1341840",
    "end": "1348240"
  },
  {
    "text": "and move into this territory and like not actually support vue two at all and i think people there",
    "start": "1348240",
    "end": "1354159"
  },
  {
    "text": "was a collective frustration by everyone and i think that was",
    "start": "1354159",
    "end": "1359760"
  },
  {
    "text": "a moment in in views history i think like the most controversial thing probably happened that that",
    "start": "1359760",
    "end": "1366400"
  },
  {
    "text": "in views history where they were like oh this is a mistake we've made and we need to figure out how to be better",
    "start": "1366400",
    "end": "1372559"
  },
  {
    "text": "and i think i've seen a lot of progress from that point on so that's actually like yeah if anything",
    "start": "1372559",
    "end": "1379200"
  },
  {
    "text": "it's made me want to use vue more because i'm like this is great well then contrast it to the angular",
    "start": "1379200",
    "end": "1385039"
  },
  {
    "text": "debacle of several years back that's what having the community engagement in the rfc",
    "start": "1385039",
    "end": "1390400"
  },
  {
    "text": "process gets you is you see how big of a debacle it's going to be before it's written in code and released",
    "start": "1390400",
    "end": "1396480"
  },
  {
    "text": "and you're able to head that off at the pass you're talking about like angular 2 4",
    "start": "1396480",
    "end": "1401600"
  },
  {
    "text": "that that whole area yeah so angular 1 to angular 2 there was no migration path there was no",
    "start": "1401600",
    "end": "1408000"
  },
  {
    "text": "anything it's still a confusion to this day there's disaster i mean it reminds me of the python 2 3 debacle as well right",
    "start": "1408000",
    "end": "1414960"
  },
  {
    "text": "like if you don't think about how you're going to migrate people off of these things or how you're going to",
    "start": "1414960",
    "end": "1421279"
  },
  {
    "text": "maintain backwards compatibility one or the other you got to pick one then you end up in this bifurcated world",
    "start": "1421279",
    "end": "1426799"
  },
  {
    "text": "where you're supporting both and it's a nightmare",
    "start": "1426799",
    "end": "1431840"
  },
  {
    "text": "yeah i think react does the same thing as well they have quite a transparent rfc process i don't know the",
    "start": "1431919",
    "end": "1437679"
  },
  {
    "text": "internals of the decision-making process as well because um they're a bit unique because a company",
    "start": "1437679",
    "end": "1443679"
  },
  {
    "text": "is tied to the framework it's not com completely community driven but i do see",
    "start": "1443679",
    "end": "1450159"
  },
  {
    "text": "um at least the intention is there with the rfc process but of course",
    "start": "1450159",
    "end": "1455200"
  },
  {
    "text": "slightly different because they they do have company goals too to meet as well there",
    "start": "1455200",
    "end": "1461760"
  },
  {
    "text": "so yeah that's awesome hearing that they're doing community management",
    "start": "1462880",
    "end": "1468400"
  },
  {
    "text": "really well that's something that is very easy to mess up and very hard to get right and it seems",
    "start": "1468400",
    "end": "1474720"
  },
  {
    "text": "like the rfc process is a really good way to not just take that community feedback",
    "start": "1474720",
    "end": "1480480"
  },
  {
    "text": "but also as you've pointed out they are learning from that and integrating community feedback into",
    "start": "1480480",
    "end": "1487520"
  },
  {
    "text": "creating a view that everyone wants to use which is really great um so on that what are some some of the",
    "start": "1487520",
    "end": "1493600"
  },
  {
    "text": "big changes between view two and view three um is there anything majorly drastic",
    "start": "1493600",
    "end": "1500640"
  },
  {
    "text": "well as a user you might be excited to hear you know drops inside average size from",
    "start": "1500640",
    "end": "1507120"
  },
  {
    "text": "what is it 20 or 30 kilobytes minified to 10 ish drops in cpu cpu usage",
    "start": "1507120",
    "end": "1514080"
  },
  {
    "text": "i heard an estimate that evan put out of it cuts it by a factor of 10. so your 10x",
    "start": "1514080",
    "end": "1520400"
  },
  {
    "text": "less cpu usage in normal use and",
    "start": "1520400",
    "end": "1525440"
  },
  {
    "text": "the probably the most exciting thing to me as somebody who loves to just like geek",
    "start": "1525440",
    "end": "1530559"
  },
  {
    "text": "out on stuff is that they're exposing the reactivity api through this composition api so that you",
    "start": "1530559",
    "end": "1536240"
  },
  {
    "text": "can not just use it within vue blessed constructs",
    "start": "1536240",
    "end": "1541360"
  },
  {
    "text": "but really build structures around it build your own compositions based on reactivity and",
    "start": "1541360",
    "end": "1549279"
  },
  {
    "text": "i think honestly the web world especially the front end world is moving to reactivity based approaches and",
    "start": "1549279",
    "end": "1555279"
  },
  {
    "text": "mental models and thinking across the board and i'm super excited to see that being exposed as a raw primitive and rather than",
    "start": "1555279",
    "end": "1561440"
  },
  {
    "text": "having it just something that magically happens as a part of the framework",
    "start": "1561440",
    "end": "1566480"
  },
  {
    "text": "yeah i think that one's a big one in terms of user land changes because a lot of it is",
    "start": "1566480",
    "end": "1572880"
  },
  {
    "text": "performance changes and the way they do tree shaking has changed the bundle size has changed um i think the the biggest differences",
    "start": "1572880",
    "end": "1580480"
  },
  {
    "text": "in terms of what users will notice from using a writing view is um",
    "start": "1580480",
    "end": "1585600"
  },
  {
    "text": "like first class type support um and then also as cable said the composition api is a really big one because",
    "start": "1585600",
    "end": "1592640"
  },
  {
    "text": "that's actually still divisive in the community you still um even though there was an rrfc process",
    "start": "1592640",
    "end": "1598400"
  },
  {
    "text": "and it was heavily talked about online on twitter on github and various other places um you still",
    "start": "1598400",
    "end": "1603840"
  },
  {
    "text": "hear people getting really like upset about it or really excited about it it's very divisive because of how",
    "start": "1603840",
    "end": "1610640"
  },
  {
    "text": "different it is with using um view 2 currently and that's mainly because it",
    "start": "1610640",
    "end": "1616159"
  },
  {
    "text": "as cable mentioned it's just like encapsulating the reactivity system of",
    "start": "1616159",
    "end": "1621440"
  },
  {
    "text": "view so you could just use like functions rather than view components",
    "start": "1621440",
    "end": "1626880"
  },
  {
    "text": "and so the view or the components are basically moved out or isolated from the",
    "start": "1626880",
    "end": "1634000"
  },
  {
    "text": "functionality which makes reusability a bit easier to some people it's a bit more",
    "start": "1634000",
    "end": "1639279"
  },
  {
    "text": "more complicated i would argue it's easier um but i've drank the kool-aid so",
    "start": "1639279",
    "end": "1646080"
  },
  {
    "text": "i'm all for that but yeah it's it's just really interesting and i think it'll be neat to see what kind of patterns emerge",
    "start": "1646080",
    "end": "1653440"
  },
  {
    "text": "from this because from my understanding with the composition api there isn't really like a proper pattern as to how to write it",
    "start": "1653440",
    "end": "1661279"
  },
  {
    "text": "um so for example the way i've been using the composition api is i create a functions folder in my source folder",
    "start": "1661279",
    "end": "1668080"
  },
  {
    "text": "and then i write the functions and and so it's very different because with regular patterns in view you if you have",
    "start": "1668080",
    "end": "1674960"
  },
  {
    "text": "components it's in a components folder and there's a sort of a",
    "start": "1674960",
    "end": "1680399"
  },
  {
    "text": "tried and true pattern for how you would use them across an application and i think with the composition api they have",
    "start": "1680399",
    "end": "1685600"
  },
  {
    "text": "yet to emerge patterns because people it's not widely adopted enough for that",
    "start": "1685600",
    "end": "1690640"
  },
  {
    "text": "so it'll be interesting to see what kinds of things emerge",
    "start": "1690640",
    "end": "1697520"
  },
  {
    "text": "yeah i feel like the hooks ecosystem around react took a solid six to nine months to",
    "start": "1697520",
    "end": "1704559"
  },
  {
    "text": "really develop into good patterns libraries",
    "start": "1704559",
    "end": "1710559"
  },
  {
    "text": "established best practices and all of that and i expect we'll see a similar thing once view three actually ships",
    "start": "1710559",
    "end": "1716399"
  },
  {
    "text": "yeah so are those composition functions uh do they kind of parallel hooks i don't actually know much about",
    "start": "1716399",
    "end": "1722840"
  },
  {
    "text": "vue they are hooks inspired but not hooks exactly equivalent sure i honestly",
    "start": "1722840",
    "end": "1731360"
  },
  {
    "text": "my impression of them is they feel more naturally continuous from the way that",
    "start": "1731360",
    "end": "1737200"
  },
  {
    "text": "vue felt before whereas hooks was a big mental shift in how react functioned",
    "start": "1737200",
    "end": "1744799"
  },
  {
    "text": "but that's a personal opinion i know there are folks who disagree and say no this is too big of a change this is",
    "start": "1744799",
    "end": "1751279"
  },
  {
    "text": "following on and it's really complicated",
    "start": "1751279",
    "end": "1755840"
  },
  {
    "text": "very cool well yeah that looks like something that is going to be very exciting to play around",
    "start": "1757760",
    "end": "1763360"
  },
  {
    "text": "with in just a few short years or tomorrow depending on how you're looking at it so we'll look forward to talking",
    "start": "1763360",
    "end": "1770159"
  },
  {
    "text": "more about v3 as it comes out all right we'll stop there for our first",
    "start": "1770159",
    "end": "1777520"
  },
  {
    "text": "break um is there anything else that you wanted to cover on view i think we covered a lot i i almost feel",
    "start": "1777520",
    "end": "1783919"
  },
  {
    "text": "like i talk about it so much i've covered all i think between cable and i we've",
    "start": "1783919",
    "end": "1789600"
  },
  {
    "text": "covered like most territories working in view honestly i'm doing i'm like all react",
    "start": "1789600",
    "end": "1796320"
  },
  {
    "text": "world in the front end now and there's stuff i like about it but i miss view",
    "start": "1796320",
    "end": "1801679"
  },
  {
    "text": "yeah i i am currently working on like an isolated project where i got to choose the stack it's",
    "start": "1802000",
    "end": "1808559"
  },
  {
    "text": "it's essentially just like a little playground that i'm working on for nullify and uh",
    "start": "1808559",
    "end": "1814159"
  },
  {
    "text": "yeah i got to pick the front-end framework they were like do whatever you want and i was like view and then i threw in typescript because i was like",
    "start": "1814159",
    "end": "1820559"
  },
  {
    "text": "why not i need a challenge something different uh still questioning if that was a good",
    "start": "1820559",
    "end": "1825919"
  },
  {
    "text": "decision go grab a snack real quick while we're on break sure okay",
    "start": "1825919",
    "end": "1833039"
  },
  {
    "text": "but it's really interesting i still find it neat or or fascinating how i'm understanding",
    "start": "1835039",
    "end": "1841679"
  },
  {
    "text": "typescript by learning other languages not by learning typescript because i've",
    "start": "1841679",
    "end": "1848080"
  },
  {
    "text": "read all the resources for typescript and i'm like it's still not mentally registering and then when i",
    "start": "1848080",
    "end": "1854399"
  },
  {
    "text": "when i was writing go and when i wrote rust i was like okay i think i understand typescript now",
    "start": "1854399",
    "end": "1861279"
  },
  {
    "text": "it's weird nice yeah i think it's just a mental model",
    "start": "1861279",
    "end": "1866960"
  },
  {
    "text": "shift like you think about javascript in such a way that when something changes it's hard to like shift",
    "start": "1866960",
    "end": "1873360"
  },
  {
    "text": "so you have to like go it's almost like learning a different language to like understand grammar of your language you speak there was a",
    "start": "1873360",
    "end": "1880720"
  },
  {
    "text": "book i read years ago i think it was called like seven languages in seven weeks and it was just like a a whirlwind tour",
    "start": "1880720",
    "end": "1888159"
  },
  {
    "text": "of seven different languages to help you understand like how they approach",
    "start": "1888159",
    "end": "1893279"
  },
  {
    "text": "solving the same problem yeah and then you can use that to come back to whatever language",
    "start": "1893279",
    "end": "1898480"
  },
  {
    "text": "you were learning or are learning and yeah yeah apply those rules so that's a really",
    "start": "1898480",
    "end": "1903519"
  },
  {
    "text": "cool way to to come out learning about a language",
    "start": "1903519",
    "end": "1908960"
  },
  {
    "text": "all right i'm good now all right are you in the office cable yeah so our",
    "start": "1909679",
    "end": "1916399"
  },
  {
    "text": "office we everybody's work from home but you can schedule time they'll they'll allow",
    "start": "1916399",
    "end": "1921760"
  },
  {
    "text": "one person in the office at a time no way yep and since my wife is",
    "start": "1921760",
    "end": "1926880"
  },
  {
    "text": "currently using my home office to do therapy um at this time uh i needed a place to",
    "start": "1926880",
    "end": "1933440"
  },
  {
    "text": "podcast and so i've been scheduling this last week and this week nice but one",
    "start": "1933440",
    "end": "1938799"
  },
  {
    "text": "bonus perk right now is there's still snacks in here they're a little stale but i got chocolate-covered pretzels and they are",
    "start": "1938799",
    "end": "1945039"
  },
  {
    "text": "amazing and delicious ah those are great so is this someone who like would they",
    "start": "1945039",
    "end": "1951039"
  },
  {
    "text": "come in and clean this plate the place after your use or what's the i don't",
    "start": "1951039",
    "end": "1956640"
  },
  {
    "text": "know exactly what the thing is there the big focus they have right now is not having multiple people in the office",
    "start": "1956640",
    "end": "1963519"
  },
  {
    "text": "at the same time okay i don't know how much space they're scheduling between or how exactly they're doing that",
    "start": "1963519",
    "end": "1969760"
  },
  {
    "text": "yeah but it is cool to have because i yeah it's convenient especially if you",
    "start": "1969760",
    "end": "1975200"
  },
  {
    "text": "don't have a conducive workspace to be able to like schedule time to go in when you're like i need dedicated time",
    "start": "1975200",
    "end": "1981679"
  },
  {
    "text": "to take a meeting or whatever that's pretty cool",
    "start": "1981679",
    "end": "1986480"
  },
  {
    "text": "and doing something really similar with my climbing gym i'm almost entirely able to work at home",
    "start": "1988640",
    "end": "1996320"
  },
  {
    "text": "in fact this has been the only thing where i wanted to have reliable internet and a",
    "start": "1996320",
    "end": "2002159"
  },
  {
    "text": "good um spot to set up a mic because like most of the time both my wife and i can",
    "start": "2002159",
    "end": "2007679"
  },
  {
    "text": "just co-work in the office when we have child care and then one of us is out when we don't but it's just when she has",
    "start": "2007679",
    "end": "2014000"
  },
  {
    "text": "therapy where it absolutely has to be private that i could choose a therapist part-time",
    "start": "2014000",
    "end": "2022000"
  },
  {
    "text": "so one of the things that i was really the most bummed about when the pandemic started and we couldn't go anywhere was i built",
    "start": "2023200",
    "end": "2030320"
  },
  {
    "text": "up over the last year a good gym routine and then all of a sudden oh that's not a safe place to go",
    "start": "2030320",
    "end": "2036080"
  },
  {
    "text": "uh but now i pretty much have a full gym in my garage so nice pretty happy with that you don't",
    "start": "2036080",
    "end": "2041840"
  },
  {
    "text": "ever need to go back to the gym",
    "start": "2041840",
    "end": "2045039"
  },
  {
    "text": "all right should we get started on segment two okay",
    "start": "2048320",
    "end": "2054878"
  },
  {
    "text": "and we are back now in this segment we're going to talk about things that we've learned i",
    "start": "2056000",
    "end": "2061280"
  },
  {
    "text": "won't say today i've learned because maybe i didn't learn that much by lunchtime today",
    "start": "2061280",
    "end": "2067358"
  },
  {
    "text": "but recently i have learned some cool things and i'm sure the other panelists",
    "start": "2067359",
    "end": "2072398"
  },
  {
    "text": "have as well so let's share some cool things that we've learned uh recently and to start us off kball do",
    "start": "2072399",
    "end": "2079919"
  },
  {
    "text": "you want to start sure so i have been doing a lot of work in react recently contrast to our view",
    "start": "2079919",
    "end": "2086878"
  },
  {
    "text": "episode early and learning about different pieces and things of it and i ran into a problem that i wasn't sure",
    "start": "2086879",
    "end": "2092960"
  },
  {
    "text": "how to solve and ended up learning something about contexts and how context works so for",
    "start": "2092960",
    "end": "2099200"
  },
  {
    "text": "those who aren't super familiar contexts are a way to avoid the prop drilling problem",
    "start": "2099200",
    "end": "2104320"
  },
  {
    "text": "where you have some data that is shared through many many layers of components and so",
    "start": "2104320",
    "end": "2110240"
  },
  {
    "text": "you can set up a context provider which essentially says here's some data",
    "start": "2110240",
    "end": "2115280"
  },
  {
    "text": "that i'm going to or and possibly some functions but here's some data that i'm going to make available and then any one of the children",
    "start": "2115280",
    "end": "2122960"
  },
  {
    "text": "below that context can access that data and i had a situation where",
    "start": "2122960",
    "end": "2128320"
  },
  {
    "text": "i was providing some functions and i wanted them to have different defaults at different layers of the hierarchy so",
    "start": "2128320",
    "end": "2134320"
  },
  {
    "text": "i for example wanted a report to be able to insert additional context",
    "start": "2134320",
    "end": "2140000"
  },
  {
    "text": "to provide a set of defaults for those functions and i was trying to figure out how do i do it do i pull that context and modify it or",
    "start": "2140000",
    "end": "2145839"
  },
  {
    "text": "things like that and what i learned is contexts are shadowable they have a",
    "start": "2145839",
    "end": "2150880"
  },
  {
    "text": "particular key for the provider that it is that you're going to do it and you can load that context in one location and then provide",
    "start": "2150880",
    "end": "2159440"
  },
  {
    "text": "a shadow of it that might be a changed version or a completely different implementation but that is tied into that same context",
    "start": "2159440",
    "end": "2166480"
  },
  {
    "text": "provider and everything that's a child of you will get that new version so i was able to have",
    "start": "2166480",
    "end": "2172240"
  },
  {
    "text": "in this case it was a translation service and i had a translation service with different defaults that i was just i would take the",
    "start": "2172240",
    "end": "2178560"
  },
  {
    "text": "original context i would get any information that it had i would add additional information and create a new",
    "start": "2178560",
    "end": "2185040"
  },
  {
    "text": "version of the translation service and provide it to my children and so that's what i learned is how do you combine and",
    "start": "2185040",
    "end": "2190320"
  },
  {
    "text": "override context you do it by taking advantage of this shadowing approach",
    "start": "2190320",
    "end": "2196078"
  },
  {
    "text": "that is awesome um is maybe i'm not following along fully",
    "start": "2198480",
    "end": "2204640"
  },
  {
    "text": "but does it make it easier harder to test with that",
    "start": "2204640",
    "end": "2209760"
  },
  {
    "text": "like being able to set those or does it not really change that",
    "start": "2209760",
    "end": "2215359"
  },
  {
    "text": "good question so i think",
    "start": "2215359",
    "end": "2220240"
  },
  {
    "text": "it depends a little bit on what layers you're testing in so what it does mean well actually anytime you have context",
    "start": "2222320",
    "end": "2228400"
  },
  {
    "text": "what it means is that the component that you're testing",
    "start": "2228400",
    "end": "2233839"
  },
  {
    "text": "is dependent not only on the props that are being passed in but the context that is being provided and so that's something that you have to take into",
    "start": "2233839",
    "end": "2240000"
  },
  {
    "text": "account in your testing and in this case now you have two different ways that that",
    "start": "2240000",
    "end": "2246320"
  },
  {
    "text": "context being provided could be set up so potentially you would have to take that into account in your testing",
    "start": "2246320",
    "end": "2252720"
  },
  {
    "text": "but i think you know it's still reasonably well decoupled right it's still like you have",
    "start": "2252720",
    "end": "2258400"
  },
  {
    "text": "to test each of these providers that you're creating and then you have to test that the underlying components can deal with the",
    "start": "2258400",
    "end": "2265280"
  },
  {
    "text": "types of things that are being provided but the api was still consistent so that the component testing in this case",
    "start": "2265280",
    "end": "2270400"
  },
  {
    "text": "didn't have to change you called the same functions you called them in the same way and in fact that's probably pretty",
    "start": "2270400",
    "end": "2275440"
  },
  {
    "text": "important as a principle you'd need to make the context that you're providing provide exactly the",
    "start": "2275440",
    "end": "2281119"
  },
  {
    "text": "same api that it had previously so component testing didn't change",
    "start": "2281119",
    "end": "2288400"
  },
  {
    "text": "and it was just essentially testing two different forms of the context provider",
    "start": "2288400",
    "end": "2299440"
  },
  {
    "text": "nice all right um vivia do you want to go next yeah i can",
    "start": "2299440",
    "end": "2305920"
  },
  {
    "text": "go next mine is not javascript because i haven't been writing as much javascript well i have been i've been writing view but",
    "start": "2305920",
    "end": "2312079"
  },
  {
    "text": "i uh know a lot about vue that it's it's hard to be today i learn i i guess i can yeah",
    "start": "2312079",
    "end": "2317920"
  },
  {
    "text": "whatever i'll talk about rust because that's something i've been writing um even though this is js party",
    "start": "2317920",
    "end": "2327280"
  },
  {
    "text": "um so i've been writing a lot of rust at work uh and it's been a very steep hill",
    "start": "2327280",
    "end": "2334560"
  },
  {
    "text": "uh which is not contrary to popular belief i think people know that already and one of the things that i had",
    "start": "2334560",
    "end": "2340480"
  },
  {
    "text": "to learn is this concept of um references and copy traits and",
    "start": "2340480",
    "end": "2348079"
  },
  {
    "text": "it's this essentially this idea of like when you're using a particular",
    "start": "2348079",
    "end": "2353599"
  },
  {
    "text": "thing like for instance if you have a like a parameter or variable elsewhere and you",
    "start": "2353599",
    "end": "2359119"
  },
  {
    "text": "want to use that particular variable um within rust essentially there's a",
    "start": "2359119",
    "end": "2364640"
  },
  {
    "text": "concept called lifetimes so if you use if a thing is used here",
    "start": "2364640",
    "end": "2370240"
  },
  {
    "text": "and then you want to use it again later um rust essentially kills it or removes it from memory because it's sort",
    "start": "2370240",
    "end": "2376560"
  },
  {
    "text": "of trying to be as memory safe as possible and i might be wrong in explaining this completely",
    "start": "2376560",
    "end": "2382400"
  },
  {
    "text": "which shows that this is very confusing for me myself as i understand this but um",
    "start": "2382400",
    "end": "2388720"
  },
  {
    "text": "you have to essentially get around it using lifetimes and i don't understand lifetimes for the life of me",
    "start": "2388720",
    "end": "2394240"
  },
  {
    "text": "um and so what i've been doing instead is sort of trying to understand how",
    "start": "2394240",
    "end": "2399599"
  },
  {
    "text": "references work by cheating by creating a variable so it's no longer",
    "start": "2399599",
    "end": "2405520"
  },
  {
    "text": "a reference it's just like a completely new thing um so it's been interesting just like sort of playing around with the various",
    "start": "2405520",
    "end": "2412240"
  },
  {
    "text": "ways of how memory is managed within rust because i think in javascript we don't think about that at all",
    "start": "2412240",
    "end": "2417359"
  },
  {
    "text": "uh yeah exactly it's just automatically garbage collected for you and everything",
    "start": "2417359",
    "end": "2423440"
  },
  {
    "text": "is done and so you don't think about it but when you think in a systems language",
    "start": "2423440",
    "end": "2429280"
  },
  {
    "text": "like rust where memory and safety is really important you have to start thinking about",
    "start": "2429280",
    "end": "2434720"
  },
  {
    "text": "how exactly things are being used um how references work how",
    "start": "2434720",
    "end": "2441359"
  },
  {
    "text": "like what can be copied or cloned if you wanted to use the thing elsewhere in your code and so on",
    "start": "2441359",
    "end": "2447599"
  },
  {
    "text": "so yeah this is not this is like a today i'm i'll i'm continuing to learn rather than i learned",
    "start": "2447599",
    "end": "2455760"
  },
  {
    "text": "so so are are you using the clone method and yeah yeah so that's also the interesting",
    "start": "2455760",
    "end": "2462319"
  },
  {
    "text": "thing i didn't realize and maybe this is very obvious i didn't realize that strings aren't",
    "start": "2462319",
    "end": "2469119"
  },
  {
    "text": "automatically copyable like you can't just copy a string you have to clone it",
    "start": "2469119",
    "end": "2474560"
  },
  {
    "text": "in order good question the the string from like if you do um",
    "start": "2474560",
    "end": "2482240"
  },
  {
    "text": "so not a reference string like an actual string capital s capital s string so if you do",
    "start": "2482240",
    "end": "2489359"
  },
  {
    "text": "capital s string colon colon from whatever the string is that's what i mean that string",
    "start": "2489359",
    "end": "2495119"
  },
  {
    "text": "that is not copyable it doesn't have a copy trait which is another thing that you have to learn in rust what a what is a trait",
    "start": "2495119",
    "end": "2502240"
  },
  {
    "text": "um and so just understanding how exactly to use things that seem really easy to",
    "start": "2502240",
    "end": "2510000"
  },
  {
    "text": "use within rust so it's been fun it's been a",
    "start": "2510000",
    "end": "2515119"
  },
  {
    "text": "fun rabbit hole to go down um as i implement a single api in points",
    "start": "2515119",
    "end": "2522079"
  },
  {
    "text": "it takes way longer than like doing it in node or something but more more i think",
    "start": "2522079",
    "end": "2529359"
  },
  {
    "text": "uh it's a very steep learning curve it's very difficult to learn but when you do figure it out it's very satisfying",
    "start": "2529359",
    "end": "2535200"
  },
  {
    "text": "so yeah oh yeah every time like it actually compiles and right it",
    "start": "2535200",
    "end": "2541920"
  },
  {
    "text": "feels awesome because you beat the borrow checker yeah you you win rust",
    "start": "2541920",
    "end": "2549839"
  },
  {
    "text": "because you actually got it to compile that sounds about the opposite of javascript where",
    "start": "2549839",
    "end": "2555119"
  },
  {
    "text": "you you figure it out you figure out how it works and then you just sit there asking yourself why",
    "start": "2555119",
    "end": "2561440"
  },
  {
    "text": "yeah and they say that once you beat the borough checker you're pretty confident it's actually gonna work which is kind of the opposite of javascript",
    "start": "2561599",
    "end": "2567350"
  },
  {
    "text": "[Laughter] fair that is fair although there is some",
    "start": "2567350",
    "end": "2573280"
  },
  {
    "text": "kinks with like um javascript with typescript because the compiler will yell at you for like lately i've i've been",
    "start": "2573280",
    "end": "2580079"
  },
  {
    "text": "frustrated with typescript because i was using um the monaco editor in one of my",
    "start": "2580079",
    "end": "2585839"
  },
  {
    "text": "components and i didn't have the types for it and so i just used any and then typescript that helped me they were like do not use the any and",
    "start": "2585839",
    "end": "2593680"
  },
  {
    "text": "even if i tried to turn it i i ended up turning it off in my ts config but i felt really bad",
    "start": "2593680",
    "end": "2598800"
  },
  {
    "text": "um because it felt like i wasn't really using typescript i was cheating my way",
    "start": "2598800",
    "end": "2603839"
  },
  {
    "text": "around so after fighting with rust when you come back to typescript is it like oh you're the like gentle abuser honestly",
    "start": "2603839",
    "end": "2610800"
  },
  {
    "text": "yes because the the thing with learning rust is it's so difficult you don't know what you're",
    "start": "2610800",
    "end": "2617040"
  },
  {
    "text": "doing and then you come to typescript and you're like oh okay this is easy like whatever um because you can also",
    "start": "2617040",
    "end": "2623520"
  },
  {
    "text": "like cheat your way around the the config and versus in rust there's no cheating you can't",
    "start": "2623520",
    "end": "2630640"
  },
  {
    "text": "in javascript you can be like just poke at it or like cover it up with the you know",
    "start": "2630640",
    "end": "2635839"
  },
  {
    "text": "and and forget it type ignore yeah",
    "start": "2635839",
    "end": "2640640"
  },
  {
    "text": "well i will set aside the strongly worded email that i'm writing to you now divya about any type",
    "start": "2641040",
    "end": "2649440"
  },
  {
    "text": "and i'll i'll tell you about something that i learned recently and i was working on some code",
    "start": "2649440",
    "end": "2655760"
  },
  {
    "text": "specifically some tests in typescript for a server side api and",
    "start": "2655760",
    "end": "2662720"
  },
  {
    "text": "i was using apollo client which is a way to make graphql calls basically",
    "start": "2662720",
    "end": "2668880"
  },
  {
    "text": "but i wanted to mock that out in my tests because i don't want to actually make graphql calls in these specific tests",
    "start": "2668880",
    "end": "2674800"
  },
  {
    "text": "that i was doing and i'm sure there's a way to do it but i was kind of going really fast and just using the just.mock",
    "start": "2674800",
    "end": "2682160"
  },
  {
    "text": "feature where i can give it you know apollo client and then provide it with a factory",
    "start": "2682160",
    "end": "2688160"
  },
  {
    "text": "function telling it what to actually return when i use anything inside of there specifically",
    "start": "2688160",
    "end": "2693200"
  },
  {
    "text": "the apollo client constructor and i swear every time i do this with with",
    "start": "2693200",
    "end": "2699359"
  },
  {
    "text": "just mocking i have to just kind of throw code at the wall and figure out what actually works because i can never",
    "start": "2699359",
    "end": "2706560"
  },
  {
    "text": "remember exactly how to mock like a constructor to have it return like",
    "start": "2706560",
    "end": "2712000"
  },
  {
    "text": "the the argument or the methods that i want to have mocked so i can check those and make sure that they're called and such so i spend a lot of time",
    "start": "2712000",
    "end": "2718720"
  },
  {
    "text": "doing that but anyway i got it working and the way that i got it working was by",
    "start": "2718720",
    "end": "2724880"
  },
  {
    "text": "in that factory function saying that anytime you i'm requesting apollo client here's a function to call and that",
    "start": "2724880",
    "end": "2731280"
  },
  {
    "text": "function returns an object that has my mox on it and so it was just using specifically",
    "start": "2731280",
    "end": "2736800"
  },
  {
    "text": "the function keyword i couldn't use arrow functions because you can't instantiate arrow functions you can't",
    "start": "2736800",
    "end": "2742640"
  },
  {
    "text": "call them with new and uh so i spent a little bit of time remembering",
    "start": "2742640",
    "end": "2749520"
  },
  {
    "text": "that or being kindly reminded of that by by the tool and then got it working and",
    "start": "2749520",
    "end": "2756319"
  },
  {
    "text": "go to commit everything and we have a pre-commit hook that runs and will run eslint dash dash",
    "start": "2756319",
    "end": "2762720"
  },
  {
    "text": "fix to fix any eslint problems and it decided that it didn't like my use of",
    "start": "2762720",
    "end": "2768000"
  },
  {
    "text": "function the function keyword in there so it rewrote that to be not an arrow function but the third",
    "start": "2768000",
    "end": "2774319"
  },
  {
    "text": "function syntax which is uh the shorthand when you have a function on an object where it's just the name",
    "start": "2774319",
    "end": "2779760"
  },
  {
    "text": "open parenthesis close parenthesis and then open curly bracket close curly bracket and your function's in there so",
    "start": "2779760",
    "end": "2784800"
  },
  {
    "text": "it's just removing the the function keyword or so it would seem but that one you also cannot instantiate",
    "start": "2784800",
    "end": "2791760"
  },
  {
    "text": "as new and i think that what was happening was because i wasn't actually using the this keyword in there",
    "start": "2791760",
    "end": "2797520"
  },
  {
    "text": "it eslint just assumed that it could rewrite that to be the shorthand syntax and everything would be okay i pushed it",
    "start": "2797520",
    "end": "2804319"
  },
  {
    "text": "up and of course see i caught that all my tests failed because it couldn't actually instantiate any of those",
    "start": "2804319",
    "end": "2810960"
  },
  {
    "text": "so i got very mad at eslint for for a couple of days but then i ended up rewriting that to",
    "start": "2810960",
    "end": "2817280"
  },
  {
    "text": "instead of using an actual function just use an anonymous class and have that as the the value that i",
    "start": "2817280",
    "end": "2824079"
  },
  {
    "text": "returned for apollo client instead but that's the thing i learned is",
    "start": "2824079",
    "end": "2829680"
  },
  {
    "text": "there are several ways to write functions in javascript and of course we know that the big",
    "start": "2829680",
    "end": "2836960"
  },
  {
    "text": "differences in the different syntaxes is how they handle the context or this keyword in there",
    "start": "2836960",
    "end": "2842559"
  },
  {
    "text": "but also the newer ones can't be instantiated with new and so that is something that i i",
    "start": "2842559",
    "end": "2850640"
  },
  {
    "text": "begrudgingly learned this week",
    "start": "2850640",
    "end": "2854799"
  },
  {
    "text": "is there a use case for calling new on a method of some classes",
    "start": "2856720",
    "end": "2863760"
  },
  {
    "text": "prototype [Music]",
    "start": "2863760",
    "end": "2868949"
  },
  {
    "text": "i couldn't i don't think so not that i can think of yeah",
    "start": "2869200",
    "end": "2874880"
  },
  {
    "text": "this is like very weird code right because it's i'm trying to mock out something in a test so it's not like production level code that would",
    "start": "2875599",
    "end": "2882800"
  },
  {
    "text": "actually be running anywhere except for in in tests and it's kind of a hack from the beginning",
    "start": "2882800",
    "end": "2889119"
  },
  {
    "text": "that's how i feel whenever i'm writing using just.mock but",
    "start": "2889119",
    "end": "2893760"
  },
  {
    "text": "cool uh so bones call what have you learned recently so the",
    "start": "2899599",
    "end": "2905760"
  },
  {
    "text": "thing that i wanted to say that i thought was neat and this actually is a thing that nick taught me",
    "start": "2905760",
    "end": "2913040"
  },
  {
    "text": "via a tweet on twitter.com and um i'm not sure how to speak",
    "start": "2913040",
    "end": "2920000"
  },
  {
    "text": "the the code here but essentially it's something in your git config and um",
    "start": "2920000",
    "end": "2926400"
  },
  {
    "text": "so a git config is kind of like i don't know it's kind of like an any file right it's kind of sort of tom tommel like",
    "start": "2926400",
    "end": "2934160"
  },
  {
    "text": "right um and so you have a a header which is in the um square brackets and that's include",
    "start": "2934160",
    "end": "2941520"
  },
  {
    "text": "and with the include thing you can give it paths to uh other git config files essentially",
    "start": "2941520",
    "end": "2948880"
  },
  {
    "text": "and so you can have your root git config in your home dirt and then in this",
    "start": "2948880",
    "end": "2954240"
  },
  {
    "text": "include section you can go and pull in other files right and",
    "start": "2954240",
    "end": "2959520"
  },
  {
    "text": "so um if you are like me and like nick apparently you have a dot",
    "start": "2959520",
    "end": "2965839"
  },
  {
    "text": "files your dot files are all in get and you",
    "start": "2965839",
    "end": "2971280"
  },
  {
    "text": "want or the idea is probably to be able to share them across different machines and use them in",
    "start": "2971280",
    "end": "2978319"
  },
  {
    "text": "different contexts and um so uh and there's certain things that",
    "start": "2978319",
    "end": "2984559"
  },
  {
    "text": "you don't want to commit to vcs like i don't know secrets",
    "start": "2984559",
    "end": "2989839"
  },
  {
    "text": "uh for for nico's email addresses and so um what you can do is you can tell get",
    "start": "2989839",
    "end": "2996400"
  },
  {
    "text": "hey include this get this other git config file and git is cool about it and it will not",
    "start": "2996400",
    "end": "3004319"
  },
  {
    "text": "complain apparently if you if that file doesn't exist and so if you're on say your work",
    "start": "3004319",
    "end": "3010400"
  },
  {
    "text": "computer you can have your dot files there and you can say hey um include this other work specific",
    "start": "3010400",
    "end": "3018400"
  },
  {
    "text": "git config right and then that git config you can define um um what is it like uh like a user an",
    "start": "3018400",
    "end": "3026960"
  },
  {
    "text": "email address uh you know a gpg key whatever you want to add in there",
    "start": "3026960",
    "end": "3032079"
  },
  {
    "text": "um and so yeah i thought that was neat also i think there's all right so um you can",
    "start": "3032079",
    "end": "3040240"
  },
  {
    "text": "um how does this work nick so okay so",
    "start": "3040240",
    "end": "3046480"
  },
  {
    "text": "uh how do you so if you have um a a repo say you're doing this on one",
    "start": "3048319",
    "end": "3055119"
  },
  {
    "text": "machine and you have a a working copy and that's free for your work right",
    "start": "3055119",
    "end": "3060559"
  },
  {
    "text": "how do you say okay everything in here uh is it is it like a per directory basis",
    "start": "3060559",
    "end": "3066720"
  },
  {
    "text": "or can you have like a parent directory and say okay everything under this parent directory needs to use this username and email",
    "start": "3066720",
    "end": "3074000"
  },
  {
    "text": "is that what you do yeah that's exactly it there's uh so you mentioned there's that include",
    "start": "3074000",
    "end": "3080000"
  },
  {
    "text": "the ability to include another file there's also a variation of that called include if and in there you can give it a couple of",
    "start": "3080000",
    "end": "3086480"
  },
  {
    "text": "different options but one of them is include if get dir and you give it a partial path",
    "start": "3086480",
    "end": "3092480"
  },
  {
    "text": "to where that git directory might exist and if whatever get directory you're in matches",
    "start": "3092480",
    "end": "3098880"
  },
  {
    "text": "that partial path in any way so like for mine i have like a work directory where all of the repos i've cloned are",
    "start": "3098880",
    "end": "3104720"
  },
  {
    "text": "in that work directory and it has you know a specific name so i can just say include if",
    "start": "3104720",
    "end": "3110240"
  },
  {
    "text": "getder is the path to that work directory and then anything in there will source",
    "start": "3110240",
    "end": "3115920"
  },
  {
    "text": "that other git config so that you can do other overrides in there that are very specific to like your work for example",
    "start": "3115920",
    "end": "3124800"
  },
  {
    "text": "right that's cool that's cool yeah and if you didn't care about like",
    "start": "3124800",
    "end": "3130000"
  },
  {
    "text": "putting your your username and email um in bcs i mean it seems like you could just use include if",
    "start": "3130000",
    "end": "3136960"
  },
  {
    "text": "in your main git config too if you didn't want this like extra uh file that wasn't under version",
    "start": "3136960",
    "end": "3143440"
  },
  {
    "text": "control yeah yeah anyway yeah where did you learn that nick um",
    "start": "3143440",
    "end": "3151680"
  },
  {
    "text": "splunking through the the get docs on on the internet uh yeah there's there's gold in there there's",
    "start": "3151680",
    "end": "3158480"
  },
  {
    "text": "like there are cool things that git does uh in config files that you probably",
    "start": "3158480",
    "end": "3163839"
  },
  {
    "text": "have no idea about and i find new things all the time yeah",
    "start": "3163839",
    "end": "3168880"
  },
  {
    "text": "the really cool part of that is that if those files don't exist git doesn't complain at you it just ignores them",
    "start": "3168880",
    "end": "3174319"
  },
  {
    "text": "quietly which is which is what it should do",
    "start": "3174319",
    "end": "3178880"
  },
  {
    "text": "well that's what i learned very cool all right we will be right back",
    "start": "3179520",
    "end": "3186960"
  },
  {
    "text": "and hopefully that will be cut that be right back part",
    "start": "3186960",
    "end": "3192720"
  },
  {
    "text": "um yeah so break cool that was good segment right around",
    "start": "3192720",
    "end": "3198800"
  },
  {
    "text": "the same length as the first one it's over i have i have six minutes okay let's change just",
    "start": "3198800",
    "end": "3206240"
  },
  {
    "text": "dive in yeah let's dive in and have chris go first yeah if you don't mind cool let's do it",
    "start": "3206240",
    "end": "3213599"
  },
  {
    "text": "all right we are back and in this segment we're going to give some shout outs or talk about",
    "start": "3214559",
    "end": "3220880"
  },
  {
    "text": "stories of the week very interesting things that are happening recently uh so a little bit different from",
    "start": "3220880",
    "end": "3226079"
  },
  {
    "text": "today i learned these are interesting things that we plan to learn or that have happened in the community in the news or just",
    "start": "3226079",
    "end": "3233920"
  },
  {
    "text": "shout outs to some really cool people or projects that we've seen so starting us off chris do you want to go",
    "start": "3233920",
    "end": "3239599"
  },
  {
    "text": "first yes i do um so i wanted to shout out to what i'm",
    "start": "3239599",
    "end": "3246079"
  },
  {
    "text": "one of the maintainers of mocha and he has been a maintainer for i don't",
    "start": "3246079",
    "end": "3252160"
  },
  {
    "text": "know several years now uh peter mueller um he is munter m-u-n-t-e-r on github",
    "start": "3252160",
    "end": "3259119"
  },
  {
    "text": "and so um what what peter did recently was he um",
    "start": "3259119",
    "end": "3266079"
  },
  {
    "text": "we uh basically tore out our build tool chain so um our our build tool chain has",
    "start": "3266079",
    "end": "3272640"
  },
  {
    "text": "been browserify for a very long time and um some mocha kind of has",
    "start": "3272640",
    "end": "3278960"
  },
  {
    "text": "has these two areas of the code base and they're",
    "start": "3278960",
    "end": "3284000"
  },
  {
    "text": "they're not split out as as as well as they should be but um we have one area which runs in node",
    "start": "3284000",
    "end": "3292319"
  },
  {
    "text": "and it only runs a node and in there since we support node 10 or newer we can use all",
    "start": "3292319",
    "end": "3299119"
  },
  {
    "text": "the cool syntax and then we have this other area which is okay this code gets shipped to",
    "start": "3299119",
    "end": "3304240"
  },
  {
    "text": "a browser and so in here we have to use",
    "start": "3304240",
    "end": "3310400"
  },
  {
    "text": "essentially code that runs in ie11 and we have historically not",
    "start": "3310400",
    "end": "3318160"
  },
  {
    "text": "run any transpilers or anything anyway this was just this is just terrible and and it's",
    "start": "3318160",
    "end": "3324079"
  },
  {
    "text": "it's like not fun um because we have an eslint file that has a um essentially this big list",
    "start": "3324079",
    "end": "3332400"
  },
  {
    "text": "of files that you can use modern syntax on and everything else you can't and so you",
    "start": "3332400",
    "end": "3340240"
  },
  {
    "text": "know you don't necessarily know as i said it's not it's not well divided or organized but you don't",
    "start": "3340240",
    "end": "3347119"
  },
  {
    "text": "necessarily know from any given file whether or not you can use i don't know the class keyword right so",
    "start": "3347119",
    "end": "3353359"
  },
  {
    "text": "uh what he did is he he pulled out browserify um and he moved us over to rollup and um",
    "start": "3353359",
    "end": "3361119"
  },
  {
    "text": "you know there's uh babel and um all sorts of other well not all sorts of",
    "start": "3361119",
    "end": "3366480"
  },
  {
    "text": "other things but those are the main ones right so we can now um use these uh",
    "start": "3366480",
    "end": "3373680"
  },
  {
    "text": "modern syntax across the entire moca code base which is a relief really it's uh you know",
    "start": "3373680",
    "end": "3381359"
  },
  {
    "text": "it it's just it's painful not to be able to use those things and",
    "start": "3381359",
    "end": "3386559"
  },
  {
    "text": "and so um i just wanted to thank you peter for your effort and getting that",
    "start": "3386559",
    "end": "3393599"
  },
  {
    "text": "landed it is awesome and thanks",
    "start": "3393599",
    "end": "3399200"
  },
  {
    "text": "cool thank you chris uh divia you want to go next yeah so my my shout outs are",
    "start": "3402960",
    "end": "3410240"
  },
  {
    "text": "a thematic so i've been i've been as i mentioned writing a lot",
    "start": "3410240",
    "end": "3415520"
  },
  {
    "text": "of typescript and rust and for me i've been what has been really useful is using the",
    "start": "3415520",
    "end": "3420960"
  },
  {
    "text": "the playgrounds for for either so typescript has the i think it's called play yeah it's a",
    "start": "3420960",
    "end": "3427280"
  },
  {
    "text": "playground type to a playground and then rust has a very similar one as well which allows you to just like write",
    "start": "3427280",
    "end": "3434319"
  },
  {
    "text": "some code and then compile it and it gives you like really good error messaging um as well as like examples i don't",
    "start": "3434319",
    "end": "3440880"
  },
  {
    "text": "think the rust one gives you examples but the typescript one does so if i don't know how to write something",
    "start": "3440880",
    "end": "3446559"
  },
  {
    "text": "let's say um there's a chance that the examples will show like for instance if i don't know how to write async",
    "start": "3446559",
    "end": "3452319"
  },
  {
    "text": "away in typescript there is an example for it that i can automatically load into the playground",
    "start": "3452319",
    "end": "3457359"
  },
  {
    "text": "and that has been phenomenal for me because um i don't have to look at the",
    "start": "3457359",
    "end": "3462400"
  },
  {
    "text": "documentation because i i actually really dislike typescript stocks i think they're very difficult to read",
    "start": "3462400",
    "end": "3467520"
  },
  {
    "text": "and i think in general whenever people document using the typescript docs it's very like it gives me a sense of what",
    "start": "3467520",
    "end": "3475119"
  },
  {
    "text": "types something takes but not how to use the thing which is really annoying and so um i think the",
    "start": "3475119",
    "end": "3481280"
  },
  {
    "text": "playground has been really useful in terms of ramping up really quickly when i need to get a question answered",
    "start": "3481280",
    "end": "3486960"
  },
  {
    "text": "so i don't have to read the docs i can just like automatically load an example or",
    "start": "3486960",
    "end": "3492480"
  },
  {
    "text": "try to figure out how to type it and then get typescript to yell at me within the playground itself so like one",
    "start": "3492480",
    "end": "3498720"
  },
  {
    "text": "i don't have to do that within my project itself i can just do this in this independent playground",
    "start": "3498720",
    "end": "3504160"
  },
  {
    "text": "and same for rust i can just do write some rust code in an independent playground without having to",
    "start": "3504160",
    "end": "3509760"
  },
  {
    "text": "set up a configuration environment or like run my entire rust project to see if one thing worked",
    "start": "3509760",
    "end": "3515920"
  },
  {
    "text": "and so i honestly there's a huge shout out to people who write playgrounds i i believe the rust one is written by",
    "start": "3515920",
    "end": "3523040"
  },
  {
    "text": "the integer 32 team um there's probably someone specifically",
    "start": "3523040",
    "end": "3528799"
  },
  {
    "text": "there that i'm forgetting but that is phenomenal and i think really useful for my learning with that",
    "start": "3528799",
    "end": "3534480"
  },
  {
    "text": "i have no idea who wrote the typestreet playground um but it's great and i actually like the",
    "start": "3534480",
    "end": "3540799"
  },
  {
    "text": "current version of the playground not the future version i think there's a v3 of it",
    "start": "3540799",
    "end": "3545839"
  },
  {
    "text": "i really dislike the v3 it's very unclear and confusing and i find the v2 one which is the",
    "start": "3545839",
    "end": "3553520"
  },
  {
    "text": "current version one way clearer personally but regardless the people who write playgrounds are great because",
    "start": "3553520",
    "end": "3560000"
  },
  {
    "text": "it's a really great way to get people to like get comfortable with it i think similar on that vein is like",
    "start": "3560000",
    "end": "3565440"
  },
  {
    "text": "when sass was first introduced there's like a tricess so you can write like sass functions and",
    "start": "3565440",
    "end": "3571359"
  },
  {
    "text": "variables and then get that to compile to css so it's a really quick way of like just prototyping without having to like read",
    "start": "3571359",
    "end": "3578240"
  },
  {
    "text": "docs so yeah that's my shout out that's really cool yeah i will agree",
    "start": "3578240",
    "end": "3585359"
  },
  {
    "text": "with you on on that um i've been mostly using the v2 playground uh but the one thing that i",
    "start": "3585359",
    "end": "3592559"
  },
  {
    "text": "really do like in v3 and it's an experimental feature is uh it will show you the ast of whatever",
    "start": "3592559",
    "end": "3597599"
  },
  {
    "text": "you type oh right that's true yeah that is nice yeah but yeah definitely some cool work",
    "start": "3597599",
    "end": "3604079"
  },
  {
    "text": "i also love that it's just so shareable with with these playgrounds like you can type some code and then yes that's true yes actually i forgot",
    "start": "3604079",
    "end": "3610960"
  },
  {
    "text": "that that's a very nice feature too because then i can easily just be like i'm struggling with this",
    "start": "3610960",
    "end": "3616480"
  },
  {
    "text": "and then someone can send me a typescript playground and show me how to write the thing so nice",
    "start": "3616480",
    "end": "3622559"
  },
  {
    "text": "cool um i will go next and the the cool thing that i wanted to shout",
    "start": "3623280",
    "end": "3628400"
  },
  {
    "text": "out is uh something that uh zach leatherman has been working on and it's called speedlife",
    "start": "3628400",
    "end": "3634400"
  },
  {
    "text": "um and it's a pretty cool way to continuously measure performance uh specifically of static",
    "start": "3634400",
    "end": "3640240"
  },
  {
    "text": "sites and it's got a full dashboard that that is running on netlify that shows",
    "start": "3640240",
    "end": "3647839"
  },
  {
    "text": "the performance over time of different static sites using 11d or next or next or",
    "start": "3647839",
    "end": "3657440"
  },
  {
    "text": "other tools like that and it'll show you every time it runs and how those have changed and has a graph that",
    "start": "3657440",
    "end": "3662720"
  },
  {
    "text": "shows exactly what's changed it'll give their lighthouse scores and you can break down",
    "start": "3662720",
    "end": "3668559"
  },
  {
    "text": "i believe you can break down into specific pages uh to to see how those are performing",
    "start": "3668559",
    "end": "3675359"
  },
  {
    "text": "which is really cool so yeah i'll throw a link to that in the show notes",
    "start": "3675359",
    "end": "3681040"
  },
  {
    "text": "and cable what do you got yeah so i have two different things that i want to shout out they're both pretty",
    "start": "3681040",
    "end": "3686559"
  },
  {
    "text": "small or stories that i saw that i thought were neat the first one is there was a new release of chrome dev",
    "start": "3686559",
    "end": "3693200"
  },
  {
    "text": "tools that adds support for editing or better support for editing styles created with the css object model",
    "start": "3693200",
    "end": "3700480"
  },
  {
    "text": "apis which essentially means any sort of css and js",
    "start": "3700480",
    "end": "3705839"
  },
  {
    "text": "framework that you're using most many of them are now using those object model and they were previously",
    "start": "3705839",
    "end": "3711040"
  },
  {
    "text": "uneditable in devtools which meant that one of the key tooling that you had for visibility into",
    "start": "3711040",
    "end": "3717280"
  },
  {
    "text": "and changing of your styles was not available in a css and js world and",
    "start": "3717280",
    "end": "3722640"
  },
  {
    "text": "i'm still not a huge fan of css and js for many use cases but i it is a critical tool for",
    "start": "3722640",
    "end": "3730319"
  },
  {
    "text": "some use cases particularly large teams and and distributed teams large products and it's also something that at least a",
    "start": "3730319",
    "end": "3737359"
  },
  {
    "text": "lot of the react world is moving towards so i think we've got to have good support for it and i'd just love to see that tooling",
    "start": "3737359",
    "end": "3743599"
  },
  {
    "text": "support coming along for it i am gradually using styled components in my stuff at work right now and even mostly",
    "start": "3743599",
    "end": "3750559"
  },
  {
    "text": "getting used to it but still not a fan anyway uh the other thing i want to shout out is",
    "start": "3750559",
    "end": "3756880"
  },
  {
    "text": "after in one of the breaks after we talked about vue and all this stuff looking i went and clicked in on a view newsletter on the",
    "start": "3756880",
    "end": "3763200"
  },
  {
    "text": "vjs news and i saw some stuff uh pr posted in the rfcs",
    "start": "3763200",
    "end": "3768240"
  },
  {
    "text": "by evan yu about single file component improvements and the thing i want to shout out about it that i think is really cool is",
    "start": "3768240",
    "end": "3774400"
  },
  {
    "text": "it's doing essentially a set of compile time sugar and changes for cleaning up how",
    "start": "3774400",
    "end": "3781200"
  },
  {
    "text": "you do things inspired by svelt and nice long time listeners will know that i'm",
    "start": "3781200",
    "end": "3787119"
  },
  {
    "text": "i'm a big proponent of moving more and more things in our front end ecosystem to",
    "start": "3787119",
    "end": "3792160"
  },
  {
    "text": "compile time and trying to pre-compile them that's to in my mind what jam stack is all about that's",
    "start": "3792160",
    "end": "3797200"
  },
  {
    "text": "what enables edge community computing it's a huge thing and i love to see",
    "start": "3797200",
    "end": "3802319"
  },
  {
    "text": "this kind of crop cross-pollination of innovation in that space happening between frameworks because",
    "start": "3802319",
    "end": "3807760"
  },
  {
    "text": "that's something that i think smelt has really pushed the bar on and made some dramatic",
    "start": "3807760",
    "end": "3812960"
  },
  {
    "text": "improvements and i i'm excited to see where it goes and as it goes into other frameworks becomes",
    "start": "3812960",
    "end": "3819760"
  },
  {
    "text": "viewified for view maybe react will pick up some interesting tips and how that innovation",
    "start": "3819760",
    "end": "3825200"
  },
  {
    "text": "continues to roll nice yeah very cool",
    "start": "3825200",
    "end": "3833599"
  },
  {
    "text": "all right well that is what we have for the party this week uh thank you so much to our panelists uh cabal divia",
    "start": "3833920",
    "end": "3841200"
  },
  {
    "text": "and chris and we will see you next week party on",
    "start": "3841200",
    "end": "3847119"
  },
  {
    "text": "immediately regretted saying party",
    "start": "3848480",
    "end": "3853838"
  },
  {
    "text": "all right i'm going to stop recording and actually yep i'm going to turn off the the",
    "start": "3855920",
    "end": "3862240"
  },
  {
    "text": "broadcast so thank you live listeners we'll see you next week and what episode are we on oh i meant to",
    "start": "3862240",
    "end": "3869839"
  },
  {
    "text": "go look that up",
    "start": "3869839",
    "end": "3873359"
  }
]