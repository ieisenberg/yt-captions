[
  {
    "text": "[Music] you are listening to shipit a podcast about operations infrastructure and",
    "start": "0",
    "end": "5120"
  },
  {
    "text": "declarative systems that converge continuously I'm your host Gard Lai and in this episode I had the pleasure of",
    "start": "5120",
    "end": "11599"
  },
  {
    "text": "talking with Vincent ambo the person behind nixer dodev tvl FYI and a former",
    "start": "11599",
    "end": "18520"
  },
  {
    "text": "Google engineer someone told me that nixer is a cool idea and that I should check it out the more I talk to Vincent",
    "start": "18520",
    "end": "24840"
  },
  {
    "text": "the more fascinated I became with NYX and NX OS I'm already running NYX on one of my Max and I'm experimenting with my",
    "start": "24840",
    "end": "31960"
  },
  {
    "text": "first nyos production instance while the tooling is impressive it's the principles behind it that Captivate my",
    "start": "31960",
    "end": "38600"
  },
  {
    "text": "imagination Vincent has a rather interesting take on the mon repository idea including one change one version",
    "start": "38600",
    "end": "45760"
  },
  {
    "text": "one deploy I was most curious to learn from Vincent how he runs fully declarative hosts that continuously",
    "start": "45760",
    "end": "52480"
  },
  {
    "text": "converge on systemwide configs which are versioned in git without any flux Argo",
    "start": "52480",
    "end": "57800"
  },
  {
    "text": "or kubernetes big thanks to our Partners fastly launch Darkly and Len out thank",
    "start": "57800",
    "end": "63280"
  },
  {
    "text": "you for the great band with fastly you can learn more at fastly.com ship new features with confidence by getting your",
    "start": "63280",
    "end": "69119"
  },
  {
    "text": "feature Flags powered by launchd dark.com and thank you lot for keeping our kubernetes fast and simple run your",
    "start": "69119",
    "end": "74880"
  },
  {
    "text": "setup as we do veno.com",
    "start": "74880",
    "end": "78880"
  },
  {
    "text": "Chang what's up shippers this episode is brought to you by our friends at shortcut have you ever really been happy",
    "start": "83640",
    "end": "90920"
  },
  {
    "text": "with your project management tool you know they're so hard to get right they really are so hard to get right most are",
    "start": "90920",
    "end": "96360"
  },
  {
    "text": "too simple for a growing engineering team to manage all they need to do and others are just too complex for anyone",
    "start": "96360",
    "end": "103079"
  },
  {
    "text": "and I mean anyone to ever want to use them they're just so painful shortcut formerly known as Clubhouse is different",
    "start": "103079",
    "end": "108520"
  },
  {
    "text": "though because it's worse I wait it's better I mean it's better shortcut is",
    "start": "108520",
    "end": "113560"
  },
  {
    "text": "project management built specifically for software teams and they're fast they're intuitive flexible powerful and",
    "start": "113560",
    "end": "120360"
  },
  {
    "text": "all the other positive adjectives you can apply to them let's look at some of the highlights team based workflows",
    "start": "120360",
    "end": "126439"
  },
  {
    "text": "individual teams can use shortcuts default workflows or you can customize them to match the way you work or gu",
    "start": "126439",
    "end": "132360"
  },
  {
    "text": "goals and road maps the work in these workflows automatically get tied into",
    "start": "132360",
    "end": "137440"
  },
  {
    "text": "larger company goals and it takes one click to move from a road map to A team's work to individual updates and",
    "start": "137440",
    "end": "143400"
  },
  {
    "text": "vice versa tight VCS Integrations whether you use GitHub git laab or bit",
    "start": "143400",
    "end": "148720"
  },
  {
    "text": "bucket shortcut TI directly to them so you can update progress from the command line keyboard friendly interface the",
    "start": "148720",
    "end": "155800"
  },
  {
    "text": "rest of shortcut is just as keyboard friendly with a power bar allowing you to do virtually anything without",
    "start": "155800",
    "end": "162480"
  },
  {
    "text": "touching your mouse throw that thing away iterations planning set weekly priorities and then let shortcut run the",
    "start": "162480",
    "end": "168239"
  },
  {
    "text": "schedule for you with accompanying burnd down charts and other reporting give it a try today at shortcut. comom shipit",
    "start": "168239",
    "end": "175000"
  },
  {
    "text": "again that shortcut. comom shipit [Music]",
    "start": "175000",
    "end": "184220"
  },
  {
    "text": "we are go to ship in 3 2 [Music]",
    "start": "184959",
    "end": "191610"
  },
  {
    "text": "[Music]",
    "start": "195660",
    "end": "201760"
  },
  {
    "text": "1 so when I was recording episode 31 with Tamar salale he told me that nixer",
    "start": "201760",
    "end": "207319"
  },
  {
    "text": "is cool never heard of it but then I checked out about enin theories tweet",
    "start": "207319",
    "end": "212920"
  },
  {
    "text": "about ni3 Dev and atop container images with packages from the Nyx package manager all I had to do was like do a",
    "start": "212920",
    "end": "220080"
  },
  {
    "text": "dock Docker run and I knew that I had to talk to the person behind it behind nix3",
    "start": "220080",
    "end": "225879"
  },
  {
    "text": "welcome Vincent hi everyone I'm Vincent so I can see that your name in this",
    "start": "225879",
    "end": "231319"
  },
  {
    "text": "recording is tasin did I pronounce that right yes so what's the story behind that tastan is the username I go by",
    "start": "231319",
    "end": "237560"
  },
  {
    "text": "online honestly I've been using it for I think about 15 years and the real",
    "start": "237560",
    "end": "242599"
  },
  {
    "text": "origins of it are kind of lost at this point my best theory at this point because I was a teenager at the time is it was related to uh the Warcraft games",
    "start": "242599",
    "end": "251040"
  },
  {
    "text": "because they have a race in the games called the trolls and the trolls have um a specific format of forming their names",
    "start": "251040",
    "end": "258199"
  },
  {
    "text": "and according to these rules you could get the name that I use as my username I don't actually play any of those games",
    "start": "258199",
    "end": "264280"
  },
  {
    "text": "but I think at some point I came up with the name and some context and it just kind of stuck it's short six letters and",
    "start": "264280",
    "end": "270080"
  },
  {
    "text": "usually available makes it useful okay everywhere like Twitter GitHub we don't have the issue of anyone having it okay",
    "start": "270080",
    "end": "277759"
  },
  {
    "text": "great I did have a situation once where a musician tried to use this name and we",
    "start": "277759",
    "end": "284560"
  },
  {
    "text": "had a bit of an interaction because they were trying to get into uh my Instagram account where I also have this username",
    "start": "284560",
    "end": "290240"
  },
  {
    "text": "that all got resolved nicely in the end so okay okay that's good to know okay so",
    "start": "290240",
    "end": "295680"
  },
  {
    "text": "uh unique but even then some people you know want that name I wish I had gotten Gard on Twitter when it was",
    "start": "295680",
    "end": "302960"
  },
  {
    "text": "still new I thought it will never catch on I did get it on GitHub because I like that I like the git idea so there you go",
    "start": "302960",
    "end": "309800"
  },
  {
    "text": "and Instagram again I was lucky I suppose yeah so when we were exchanging emails you were telling me that you in",
    "start": "309800",
    "end": "316160"
  },
  {
    "text": "between places did you manage to set up in the new place uh yes I've recently moved from well actually the the from is",
    "start": "316160",
    "end": "322880"
  },
  {
    "text": "kind of complicated but I've moved to Moscow I'm in the process of learning Russian uh it's a very interesting",
    "start": "322880",
    "end": "328520"
  },
  {
    "text": "language and I find learning new languages is kind of a stimulating thing to do and the best way to do it is to",
    "start": "328520",
    "end": "333919"
  },
  {
    "text": "actually immerse yourself at least for me so I I moved here recently um tried out a few different parts of the city",
    "start": "333919",
    "end": "340759"
  },
  {
    "text": "it's it's a mega City for those people that don't know it's got about 20 million inhabitants and it stretches something like 100 kilomet from one end",
    "start": "340759",
    "end": "347800"
  },
  {
    "text": "of the urban area to the other so it's takes a lot of time to get used to and yeah I've found a nice flat now decent",
    "start": "347800",
    "end": "355240"
  },
  {
    "text": "water pressure which is something that is often a problem in Flats I've previously had and starting to settle in",
    "start": "355240",
    "end": "361639"
  },
  {
    "text": "it's been a couple of months now and it's it's starting to feel like home I lived out of a suitcase for about a year",
    "start": "361639",
    "end": "368319"
  },
  {
    "text": "uh before that in different countries and while it's fun for a while to always be in new places and like meet different",
    "start": "368319",
    "end": "374840"
  },
  {
    "text": "people Etc there you reach a point eventually where you're like I'd just like to have a home where I can kind of",
    "start": "374840",
    "end": "381199"
  },
  {
    "text": "unpack the suitcase and like not worry about where I'm staying in 30 days it's nice to have that back with good water",
    "start": "381199",
    "end": "387479"
  },
  {
    "text": "pressure and a good internet connection right yes of course which it's only yours so speaking about internet",
    "start": "387479",
    "end": "393080"
  },
  {
    "text": "connections how is yours I'm in my office at the moment it's part of a co-working space and I don't actually",
    "start": "393080",
    "end": "399560"
  },
  {
    "text": "know what kind of connection this is I suspect it's just some sort of redundant fiber connection coming in here right",
    "start": "399560",
    "end": "405080"
  },
  {
    "text": "internet infrastructure in Moscow is very good like most buildings that I've been in just have fiber coming to the",
    "start": "405080",
    "end": "411680"
  },
  {
    "text": "home and works fine for me at some point I stopped doing stuff like measuring my",
    "start": "411680",
    "end": "416800"
  },
  {
    "text": "internet connection speed and latency and so on in the same way that I kind of stopped caring about like how fast my",
    "start": "416800",
    "end": "422319"
  },
  {
    "text": "CPU is and all of this stuff because it reached the threshold I'm like it's sufficient for my needs and I don't",
    "start": "422319",
    "end": "428560"
  },
  {
    "text": "really need to look at this anymore yeah okay that makes sense but just just in case I have two redundant additional",
    "start": "428560",
    "end": "435240"
  },
  {
    "text": "connections set up here so if the primary one fails we'll be able to continue right so the reason why this is",
    "start": "435240",
    "end": "441440"
  },
  {
    "text": "on my mind is because I was recording the intro for episode 35 today well which will ship this week and that's uh",
    "start": "441440",
    "end": "448039"
  },
  {
    "text": "the one about like multiple redundant internet connections and three weeks trying to sort sort mine out so that was",
    "start": "448039",
    "end": "455319"
  },
  {
    "text": "quite quite interesting so that's why it's on my mind I'm looking forward to that maybe I'll steal a couple of pages",
    "start": "455319",
    "end": "460360"
  },
  {
    "text": "from your book sure thing I'll be happy to share yeah as much as much as much as you want and as much as it's helpful so",
    "start": "460360",
    "end": "466840"
  },
  {
    "text": "tell me about nixer why did you create it it's interesting because I have to",
    "start": "466840",
    "end": "472120"
  },
  {
    "text": "figure out where to start with this story so back in the days when kubernetes was still a fairly new",
    "start": "472120",
    "end": "477319"
  },
  {
    "text": "project I was working at a startup in Sweden that was starting to eye the",
    "start": "477319",
    "end": "482479"
  },
  {
    "text": "kubernetes world a little bit for for various internal projects and deploying software there was not super production",
    "start": "482479",
    "end": "488759"
  },
  {
    "text": "critical but with the intention of finding a new and slightly more Modern Way of Hosting everything at the time I",
    "start": "488759",
    "end": "495360"
  },
  {
    "text": "got very interested in this concept of declarative infrastructure I jokingly said at some point that there's",
    "start": "495360",
    "end": "501159"
  },
  {
    "text": "something I call tastan law which is that any infrastructure process that's not controlled by a Reconciliation Loop",
    "start": "501159",
    "end": "508440"
  },
  {
    "text": "will eventually fail in some strange way and kubernetes is sort of the embodiment of this idea you have a bunch of small",
    "start": "508440",
    "end": "515080"
  },
  {
    "text": "processes the various controllers and you give these processes a bunch of desired State and then they go and they",
    "start": "515080",
    "end": "521640"
  },
  {
    "text": "reconcile everything continuously until it's in the shape that you want there's a term I learned for this at Google a",
    "start": "521640",
    "end": "528160"
  },
  {
    "text": "while back which is continuous intent based actuation and it sounds very fancy but I think it's it's a good expression",
    "start": "528160",
    "end": "534480"
  },
  {
    "text": "of this model so the interesting thing while I was kind of looking into how kues work and all of that is that you",
    "start": "534480",
    "end": "540800"
  },
  {
    "text": "very quickly run into a strange kind of Distinction which is that all of your",
    "start": "540800",
    "end": "546279"
  },
  {
    "text": "inside of kubernetes stuff is declarative but you deploying container images in there that are fully",
    "start": "546279",
    "end": "551480"
  },
  {
    "text": "imperative at least at the time there weren't very many alternatives to things like Docker files and the docker file is",
    "start": "551480",
    "end": "557720"
  },
  {
    "text": "essentially a list of sequentially executed steps so even even things like",
    "start": "557720",
    "end": "563120"
  },
  {
    "text": "um an N command which adds an environment variable essentially ends up being a sort of mutation that is applied",
    "start": "563120",
    "end": "569399"
  },
  {
    "text": "in order on the image that you're creating so this seemed kind of strange to me and I didn't do anything with it at the time this was maybe I don't know",
    "start": "569399",
    "end": "575760"
  },
  {
    "text": "20 2014 I would guess and I just kind of let this ruminate in the back of my head",
    "start": "575760",
    "end": "581600"
  },
  {
    "text": "for a couple of years then eventually I found out about NYX and I started",
    "start": "581600",
    "end": "588320"
  },
  {
    "text": "learning how to use it correctly how to build various bits of software with it essentially what you need to know about",
    "start": "588320",
    "end": "593480"
  },
  {
    "text": "it is that you build software declaratively you have a an underlying concept for how to take a bunch of sour",
    "start": "593480",
    "end": "599399"
  },
  {
    "text": "ources from various locations for example over the web or from a file system and then how to apply",
    "start": "599399",
    "end": "605399"
  },
  {
    "text": "transformation to them that yields a build output and eventually I got back to this original idea of what if",
    "start": "605399",
    "end": "613000"
  },
  {
    "text": "everything in kubernetes was declarative including the images and I had this idea that since it's possible to write your",
    "start": "613000",
    "end": "619079"
  },
  {
    "text": "own kubernetes controllers you could write a program that is using something like NYX or any other package manager",
    "start": "619079",
    "end": "625360"
  },
  {
    "text": "really that lets you specify a list of dependencies and you could create what's called a custom resource definition in",
    "start": "625360",
    "end": "632160"
  },
  {
    "text": "kubernetes it's essentially like a custom type that you can add to the API and perform a crud operations on and you",
    "start": "632160",
    "end": "638760"
  },
  {
    "text": "could in this type specify something like container image as the type and",
    "start": "638760",
    "end": "644120"
  },
  {
    "text": "content engine X htop git and a bunch of other programs that you need in this container image and you submit it to the",
    "start": "644120",
    "end": "650880"
  },
  {
    "text": "cluster and it would get built by your controller and be made available to all of the machines in that cluster I ended",
    "start": "650880",
    "end": "657279"
  },
  {
    "text": "up implementing this concept and while demoing it so people realize that there's actually quite a lot of overhead",
    "start": "657279",
    "end": "662839"
  },
  {
    "text": "to doing this because in a system where everything is kind of eventually consistent as is the case with this you",
    "start": "662839",
    "end": "668800"
  },
  {
    "text": "submit a resource and you don't really know exactly when this build is completed so while you're demoing it to",
    "start": "668800",
    "end": "673920"
  },
  {
    "text": "people you're running for example a c control watch command which shows you the current state of all of your",
    "start": "673920",
    "end": "679320"
  },
  {
    "text": "containers and you see image pull arrows while this image is still being built so it doesn't really make for a nice and",
    "start": "679320",
    "end": "684839"
  },
  {
    "text": "fancy demo so in the cont in the context of creating a demo for this I realized",
    "start": "684839",
    "end": "690959"
  },
  {
    "text": "that it might be interesting to just put these things into the URL that is the name of the image so the image names are",
    "start": "690959",
    "end": "697079"
  },
  {
    "text": "constructed of a sort of Base name which if you're familiar with Docker is omitted for the things that are from the",
    "start": "697079",
    "end": "702360"
  },
  {
    "text": "official Docker registry but it can also be any other kind of registry such as um Google's container registry that you get",
    "start": "702360",
    "end": "708320"
  },
  {
    "text": "with Google Cloud Etc and then slash and then the sort of path leading to your image inside of the registry colon and",
    "start": "708320",
    "end": "714880"
  },
  {
    "text": "the version or optional other kind of tag so I was thinking what if we use these paths to sort of denote which",
    "start": "714880",
    "end": "722800"
  },
  {
    "text": "packages should be in the image so if we want an image that has say engine X and git in it we could write name of the",
    "start": "722800",
    "end": "729800"
  },
  {
    "text": "registry sline x/g and then the registry would automatically yield an image that",
    "start": "729800",
    "end": "736680"
  },
  {
    "text": "contains these things so I went and implemented that and it got a lot more Wows from people than the previous sort",
    "start": "736680",
    "end": "742000"
  },
  {
    "text": "of yaml based dump this resource into into the kubernetes API server implementation and people quickly",
    "start": "742000",
    "end": "749199"
  },
  {
    "text": "brought me lots of ideas for what this could be used for for example if you are debugging an active uh incident inside",
    "start": "749199",
    "end": "755560"
  },
  {
    "text": "of a kubernetes cluster you might be interested in quickly running a container that has some debugging tools",
    "start": "755560",
    "end": "761120"
  },
  {
    "text": "that are not included in any of the images you already have so it's very useful to be able to layer this on very",
    "start": "761120",
    "end": "768120"
  },
  {
    "text": "easily onto an image in your cluster another another use case that often comes up is people running CI systems",
    "start": "768120",
    "end": "774600"
  },
  {
    "text": "and needing a base image that contains for example a set of compilers and other build tools that they need",
    "start": "774600",
    "end": "779839"
  },
  {
    "text": "and in that case it is also very useful to just make the definition of which things should be in the image that",
    "start": "779839",
    "end": "785440"
  },
  {
    "text": "you're building with a part of your build configuration so that's kind of how that came about okay that's really",
    "start": "785440",
    "end": "791720"
  },
  {
    "text": "interesting because when I first looked at nixer that's exactly the thing that I",
    "start": "791720",
    "end": "797000"
  },
  {
    "text": "started with I want curl and I want htop just two random tools random utilities",
    "start": "797000",
    "end": "802920"
  },
  {
    "text": "to combine them I didn't know about the versioning I was going to ask you if I can specify the version and apparently I",
    "start": "802920",
    "end": "808480"
  },
  {
    "text": "can in the past in the URL so that's really cool and I can see how this is really useful for like ad hoc tooling or",
    "start": "808480",
    "end": "814320"
  },
  {
    "text": "just in time tooling debugging purposes stuff like that for a CI system I would",
    "start": "814320",
    "end": "820000"
  },
  {
    "text": "use it for sure like for example if I want a specific version of the runtime right I would definitely pick that but",
    "start": "820000",
    "end": "826240"
  },
  {
    "text": "besides that for example for my application do you ever see someone for example pulling a specific version of an",
    "start": "826240",
    "end": "832240"
  },
  {
    "text": "application that they built and where would that application even be hosted how will that work yes absolutely in",
    "start": "832240",
    "end": "838000"
  },
  {
    "text": "fact this is kind of this was the original intended use case of nixer it's just that right now I don't think anyone",
    "start": "838000",
    "end": "845279"
  },
  {
    "text": "is actually using it that way um there's a couple of reasons for that so I think in order to explain this I have to go",
    "start": "845279",
    "end": "851320"
  },
  {
    "text": "into a little bit of detail on how some of this actually works under the hood and for that I have to start with NYX",
    "start": "851320",
    "end": "857360"
  },
  {
    "text": "sure let's go there yes so NYX if you read Hacker News and lobsters and all",
    "start": "857360",
    "end": "862600"
  },
  {
    "text": "those kinds of pages you've probably come across a bunch of Articles mentioning NX and if you've read any of",
    "start": "862600",
    "end": "868040"
  },
  {
    "text": "them you've probably also noticed that people seem to be sometimes almost talking about a variety of different",
    "start": "868040",
    "end": "873199"
  },
  {
    "text": "things the reason for that is that it actually is a set of different things which can be a bit confusing because",
    "start": "873199",
    "end": "878600"
  },
  {
    "text": "they're basically all named the same so I think I'm just going to lay out what those things are and then we can kind of",
    "start": "878600",
    "end": "883920"
  },
  {
    "text": "dive into where that overlaps with NYX orone is relevant so NYX is a programming language a purely functional",
    "start": "883920",
    "end": "890959"
  },
  {
    "text": "very simple programming language you can kind of think of it as Jason with types I'm stealing this from a friend of mine",
    "start": "890959",
    "end": "897639"
  },
  {
    "text": "Prof patch and it's so simple that it doesn't even really have named top level variables you can't even give names to",
    "start": "897639",
    "end": "903920"
  },
  {
    "text": "things it's just a data structure and then you can write some Transformations ins set of the data structure it feels",
    "start": "903920",
    "end": "909639"
  },
  {
    "text": "very natural to people who are used to languages like hll or llang so more on the functional side of things and it can",
    "start": "909639",
    "end": "915880"
  },
  {
    "text": "feel a little bit alien to people coming from other backgrounds which I think is one of the barriers to entry of the",
    "start": "915880",
    "end": "921040"
  },
  {
    "text": "language the second thing called NYX is the package manager itself so the",
    "start": "921040",
    "end": "926120"
  },
  {
    "text": "package manager implements a concept called derivation derivation is essentially a data structure that says",
    "start": "926120",
    "end": "932440"
  },
  {
    "text": "we have a transformation that we want to apply to some data usually this transformation is something like running",
    "start": "932440",
    "end": "938360"
  },
  {
    "text": "a compiler or running a some other tool that does file Transformations and these",
    "start": "938360",
    "end": "943720"
  },
  {
    "text": "derivations specify all of the inputs that they have fully pinned which means that we have full sh hases of everything",
    "start": "943720",
    "end": "950040"
  },
  {
    "text": "that gets into the derivation and then this information together can be used to create a hash so you take the hashes of",
    "start": "950040",
    "end": "957319"
  },
  {
    "text": "everything going into your derivation including sort of recursively if you think about other derivations I'll bring up an example in a second and the build",
    "start": "957319",
    "end": "964680"
  },
  {
    "text": "instructions and you hash them together and you get something that uniquely identifies this particular operation to",
    "start": "964680",
    "end": "970040"
  },
  {
    "text": "be executed an example of this is if you're building a program Fu and it depends on a Library Bar then you would",
    "start": "970040",
    "end": "976319"
  },
  {
    "text": "have a derivation for your library bar and that derivation would be passed into the derivation for your program Fu and",
    "start": "976319",
    "end": "983160"
  },
  {
    "text": "the hash of those together uh would yield the exact hash specifying how to build your program the interesting thing",
    "start": "983160",
    "end": "989920"
  },
  {
    "text": "is that if any of the sort of recursive inputs of your library change so for example you're exchanging the compiler",
    "start": "989920",
    "end": "996360"
  },
  {
    "text": "version or you're linking against a new version of op SSL then the hashes kind of change all the way down in this tree",
    "start": "996360",
    "end": "1002839"
  },
  {
    "text": "similar to a data structure called a Merkle tree if you're familiar with that okay how does this compare to a dag it",
    "start": "1002839",
    "end": "1008920"
  },
  {
    "text": "essentially is a dag that's exactly what I was thinking it sounds like a dag to me okay yeah so you have this graph of",
    "start": "1008920",
    "end": "1015519"
  },
  {
    "text": "some kind of root node that you're realizing which could be like an entire operating system or if you're thinking",
    "start": "1015519",
    "end": "1021079"
  },
  {
    "text": "even grander like the entire state of a data center or just a single package and then you have this tree that unfolds",
    "start": "1021079",
    "end": "1027199"
  },
  {
    "text": "below it that represents all of the various inputs that need to go into the tree an interesting thing about this is",
    "start": "1027199",
    "end": "1032678"
  },
  {
    "text": "that because all of the inputs and the exact transformation applied a hash together you get a property out of this",
    "start": "1032679",
    "end": "1039199"
  },
  {
    "text": "that is called repeatability it's not quite the same as rep reducibility we might want to talk about that a little",
    "start": "1039199",
    "end": "1045079"
  },
  {
    "text": "bit later but it essentially gives you the guarantee that you can rerun this exact computation in the exact state",
    "start": "1045079",
    "end": "1051919"
  },
  {
    "text": "that you expect NYX has to do a bunch of strange hacks to make some of this work",
    "start": "1051919",
    "end": "1057320"
  },
  {
    "text": "for example in set of a NYX build the time is always the 1 of January 1970 and",
    "start": "1057320",
    "end": "1062640"
  },
  {
    "text": "a bunch of things like this because you always in in build systems and other programs have some sort of impurity that",
    "start": "1062640",
    "end": "1068240"
  },
  {
    "text": "leaks in from the outside a lot of those need to be handled in some way but it's a very interesting guarantee to have",
    "start": "1068240",
    "end": "1074799"
  },
  {
    "text": "because the idea of repeatability is that things that are repeatable are equivalent if you do something twice",
    "start": "1074799",
    "end": "1080520"
  },
  {
    "text": "then the output should be vaguely equivalent and even if you have some sort of impurity like you're running a",
    "start": "1080520",
    "end": "1086799"
  },
  {
    "text": "C++ Linker on a machine with a lot of CPU cores and you end up linking the binary in a different order just because",
    "start": "1086799",
    "end": "1092280"
  },
  {
    "text": "of races in the CPU the output that comes out of it in the end is still an equivalent program to the one um that",
    "start": "1092280",
    "end": "1098000"
  },
  {
    "text": "the other machine built so it's a very strong guarantee in in many ways it's quite useful for operations isn't this",
    "start": "1098000",
    "end": "1104200"
  },
  {
    "text": "what many refer to as item potency it's similar to item potency you don't have a",
    "start": "1104200",
    "end": "1109360"
  },
  {
    "text": "guarantee that you get the exact same thing out at the end so there is there is another guarantee which the Nyx",
    "start": "1109360",
    "end": "1115360"
  },
  {
    "text": "Community sort of tangentially interested in but hasn't fully achieved called reproducibility and reproducibility",
    "start": "1115360",
    "end": "1121760"
  },
  {
    "text": "means that you build software twice and you get the exact same sort of bit forbit output on both ends the uh Debian",
    "start": "1121760",
    "end": "1129760"
  },
  {
    "text": "project the Debian Linux distribution they've done a lot of work to achieve this for a variety of popular packages",
    "start": "1129760",
    "end": "1135360"
  },
  {
    "text": "they have a whole reproducible builds Community around them that I think other distributions including NX are also",
    "start": "1135360",
    "end": "1140600"
  },
  {
    "text": "contributing to and this is often stuff like patching software build instructions to avoid putting the paths",
    "start": "1140600",
    "end": "1147480"
  },
  {
    "text": "to the source files into the binary and stuff like this because for example if you build some code in your home",
    "start": "1147480",
    "end": "1152720"
  },
  {
    "text": "directory it contains your username you build it somewhere else it contains somebody else's username and suddenly",
    "start": "1152720",
    "end": "1157880"
  },
  {
    "text": "your binaries are not equivalent anymore so there's a lot of that work but it's it's if you look at it purely from a",
    "start": "1157880",
    "end": "1163880"
  },
  {
    "text": "functional perspective like what does this thing do then equivalent outputs should be be mostly the same like if if",
    "start": "1163880",
    "end": "1170600"
  },
  {
    "text": "you're thinking about what you're deploying for example then unless you have some very strange kind of bug in",
    "start": "1170600",
    "end": "1175640"
  },
  {
    "text": "your system The Source path probably doesn't matter very much yeah so that's kind of the difference between",
    "start": "1175640",
    "end": "1181280"
  },
  {
    "text": "reproducibility and repeatability one cool thing I like that you mention Debian because I was talking to",
    "start": "1181280",
    "end": "1186640"
  },
  {
    "text": "Frederick branik from Polar signals Parker of Dev a couple of weeks maybe it's been months now and uh I didn't",
    "start": "1186640",
    "end": "1193400"
  },
  {
    "text": "know this trick but he showed me how when they built parka they pinned",
    "start": "1193400",
    "end": "1198760"
  },
  {
    "text": "sources for Debian to a specific sha and what that means is that everything is",
    "start": "1198760",
    "end": "1204360"
  },
  {
    "text": "reproducible so if anyone was to pin the sources to the same sha and they were to try and build parka they would get the",
    "start": "1204360",
    "end": "1211120"
  },
  {
    "text": "exact bit forbit output which I thought was really cool yes that is sort of the",
    "start": "1211120",
    "end": "1216360"
  },
  {
    "text": "um Holy Grail that you want in the end can you do that with NYX yes so this thing about pinning inputs is very",
    "start": "1216360",
    "end": "1223280"
  },
  {
    "text": "interesting to expand a little bit on this I have to bring in one more thing that's almost called NYX it's called NYX packages",
    "start": "1223280",
    "end": "1229240"
  },
  {
    "text": "and Nyx packages is a single GitHub repository that contains the definition",
    "start": "1229240",
    "end": "1234640"
  },
  {
    "text": "of all packages that are currently publicly buildable with NYX so it's sort of if you think of the Debian",
    "start": "1234640",
    "end": "1239799"
  },
  {
    "text": "distribution as a distribution that has some number of packages packaged for it",
    "start": "1239799",
    "end": "1244880"
  },
  {
    "text": "then NYX packages is kind of the equivalent for NYX it's a huge repository a sort of monor repo if you",
    "start": "1244880",
    "end": "1250159"
  },
  {
    "text": "will that contains all of these build instructions because for each of the package definitions in there the inputs",
    "start": "1250159",
    "end": "1256760"
  },
  {
    "text": "are what we call fully pinned you you have exact versions and git commit hashes and Sh hashes of all of the",
    "start": "1256760",
    "end": "1262280"
  },
  {
    "text": "sources that you're pulling in from all of the third party programs that you're building this means that the commit hash",
    "start": "1262280",
    "end": "1268240"
  },
  {
    "text": "of a single NYX packages commit fully pins basically the entire universe so this is a very very cool guarantee that",
    "start": "1268240",
    "end": "1274799"
  },
  {
    "text": "you can get with NX where you have to specify basically a single hash and then the entire build environment all of your",
    "start": "1274799",
    "end": "1280720"
  },
  {
    "text": "compilers all of your libraries all of the tools that you run everything is at a fixed version that you can kind of",
    "start": "1280720",
    "end": "1285880"
  },
  {
    "text": "advance automically and roll back of course which is quite nice M that's really",
    "start": "1285880",
    "end": "1291410"
  },
  {
    "text": "[Music]",
    "start": "1291410",
    "end": "1300320"
  },
  {
    "text": "cool this episode is brought to you by our friends at fire hydrant fire hydrant",
    "start": "1300320",
    "end": "1305919"
  },
  {
    "text": "is the reliability platform for every developer incidents impact everyone not just sres fire hydrant gives teams the",
    "start": "1305919",
    "end": "1312880"
  },
  {
    "text": "tools to maintain service catalogues respond to incidents communicate through status pages and learn with prospectives",
    "start": "1312880",
    "end": "1319520"
  },
  {
    "text": "what would normally be manual air prone tasks across the entire spectrum of responding to an incident this can all",
    "start": "1319520",
    "end": "1325200"
  },
  {
    "text": "be automated in every way with fire hydrant fire hydrant gives you incident tooling to manage incidents of any type",
    "start": "1325200",
    "end": "1332200"
  },
  {
    "text": "with any severity with consistency you can declare and mitigate incidents all inside slack service cataloges allow",
    "start": "1332200",
    "end": "1339159"
  },
  {
    "text": "service owners to improve operational maturity and document all your deploy in your service catalog incident analytics",
    "start": "1339159",
    "end": "1345480"
  },
  {
    "text": "like extract meaningful insights about your reliability over any any facet of your incident or the people who respond",
    "start": "1345480",
    "end": "1351159"
  },
  {
    "text": "to them and at the heart of it all incident run books they let you create custom automation rules to convert manual tasks into automated reliable",
    "start": "1351159",
    "end": "1359279"
  },
  {
    "text": "repeatable sequences that run when you want create slack channels J tickets Zoom Bridges instantly after declaring",
    "start": "1359279",
    "end": "1366240"
  },
  {
    "text": "an incident now your processes can be consistent and automatic try fire hydrant free for 14 days get access to",
    "start": "1366240",
    "end": "1372760"
  },
  {
    "text": "every feature no credit card required get started at fire hydrant .io again",
    "start": "1372760",
    "end": "1377840"
  },
  {
    "text": "fire hydrant [Music]",
    "start": "1377840",
    "end": "1387528"
  },
  {
    "text": ".io we were talking about pinning sources reproducible builds being able",
    "start": "1391159",
    "end": "1396840"
  },
  {
    "text": "to go back and rebuild exactly the same thing bit for bit I'm wondering how does",
    "start": "1396840",
    "end": "1402440"
  },
  {
    "text": "coign fit into this all right personally I haven't used it so I'm not familiar",
    "start": "1402440",
    "end": "1407640"
  },
  {
    "text": "with the exact mentation of it but my understanding is that it's sort of you're signing individual layers of",
    "start": "1407640",
    "end": "1413520"
  },
  {
    "text": "images is that correct or maybe you could expand so the idea is like in a nutshell you sign the Sha you don't have",
    "start": "1413520",
    "end": "1419600"
  },
  {
    "text": "to trust whoever signed the Sha you just need to have a signature that",
    "start": "1419600",
    "end": "1425200"
  },
  {
    "text": "corresponds to the Sha so that you know the Sha that you're consuming is the Sha that was built and was intended to be",
    "start": "1425200",
    "end": "1431159"
  },
  {
    "text": "consumed so you can basically verify that it comes from a source that actually doesn't matter the source as",
    "start": "1431159",
    "end": "1437559"
  },
  {
    "text": "long as the Sha is linked to a signature and that gives you confidence in what you're consuming",
    "start": "1437559",
    "end": "1444760"
  },
  {
    "text": "okay so in this case my understanding of cosine is that you're assigning the shes",
    "start": "1444760",
    "end": "1450039"
  },
  {
    "text": "of outputs so you're building something and then for example it produces a t ball which could be an image layer",
    "start": "1450039",
    "end": "1455760"
  },
  {
    "text": "instead of an oci image and you sign the hash of that tball correct in the Nyx",
    "start": "1455760",
    "end": "1461240"
  },
  {
    "text": "world we kind of do things exactly the other way around so what we are assigning is typically the hash of all",
    "start": "1461240",
    "end": "1466760"
  },
  {
    "text": "of the inputs this time back into the reproducibility discussion that we had a little bit earlier if you have build",
    "start": "1466760",
    "end": "1473840"
  },
  {
    "text": "instructions yielding a tarball with some arbitrary software there's a fairly large chance that the software is",
    "start": "1473840",
    "end": "1480279"
  },
  {
    "text": "actually not bit forbit reproducible this means that if you produce one tball of it and you produce its hash and sign",
    "start": "1480279",
    "end": "1487000"
  },
  {
    "text": "and distribute the tall and that signed hash it's quite likely that no one else is actually going to be able to recreate",
    "start": "1487000",
    "end": "1493399"
  },
  {
    "text": "that exact tball from scratch which means that suddenly you you have introduced if you think about it in",
    "start": "1493399",
    "end": "1499120"
  },
  {
    "text": "terms of immutable systems and stateful stateless systems you've introduced a bit of State into the universe where",
    "start": "1499120",
    "end": "1505039"
  },
  {
    "text": "there is now this one particular tall in addition to the sources and build instructions of the program that you",
    "start": "1505039",
    "end": "1510080"
  },
  {
    "text": "need to retain so one of the big ideas in NYX is that instead of instead of looking at what the hash of the output",
    "start": "1510080",
    "end": "1515960"
  },
  {
    "text": "is we look at the hashes of all of the inputs and then sign things over that so",
    "start": "1515960",
    "end": "1521399"
  },
  {
    "text": "we have concept of binary caches if you go to a binary cache you're essentially asking for the output for a given",
    "start": "1521399",
    "end": "1529000"
  },
  {
    "text": "derivation meaning I want to know if this cache contains built program for",
    "start": "1529000",
    "end": "1534039"
  },
  {
    "text": "these sources with these sort of compilation steps applied to it and then the binary cach will either tell you yes",
    "start": "1534039",
    "end": "1539919"
  },
  {
    "text": "or no and give you a tall back and we will have a signature that kind of represents this entire process so the",
    "start": "1539919",
    "end": "1545640"
  },
  {
    "text": "trust rout is sort of one layer of course you now have a problem which is",
    "start": "1545640",
    "end": "1550880"
  },
  {
    "text": "that you could theoretically have a malicious binary cache you could have for example University hosting a NYX",
    "start": "1550880",
    "end": "1557279"
  },
  {
    "text": "cache mirror and you might be trusting the key of that University and they are now Distributing a binary to you that is",
    "start": "1557279",
    "end": "1564440"
  },
  {
    "text": "actually malicious they've inserted some sort of code into it that you don't want to be running and they are just pretending that it was built from the",
    "start": "1564440",
    "end": "1570880"
  },
  {
    "text": "instructions that you gave them or that you asked for so in order to work around it there are some projects in the NX",
    "start": "1570880",
    "end": "1576640"
  },
  {
    "text": "Community the most interesting one in my opinion is something called trtic developed by Adam Herer and trtic is",
    "start": "1576640",
    "end": "1584679"
  },
  {
    "text": "sort of like a mini blockchain I'm using this word very hesitantly in this case",
    "start": "1584679",
    "end": "1589960"
  },
  {
    "text": "it's closer in fact to the implementation of certificate transparency logs where you have an",
    "start": "1589960",
    "end": "1595120"
  },
  {
    "text": "append only data structure published by somebody that records all of the derivation hashes that they built and",
    "start": "1595120",
    "end": "1601760"
  },
  {
    "text": "all of the output hashes that they got and the interesting thing if you have lots of different people running the",
    "start": "1601760",
    "end": "1606960"
  },
  {
    "text": "trustex thing over just the standard NYX packages package set is that you get a distributed log from multiple different",
    "start": "1606960",
    "end": "1613440"
  },
  {
    "text": "people where if the same hash occurs in multiple different logs for a package that we know is reproducible you know",
    "start": "1613440",
    "end": "1620279"
  },
  {
    "text": "that you can trust this output from any of them as long as you trust at least and according to your own criteria of",
    "start": "1620279",
    "end": "1626840"
  },
  {
    "text": "the people that perform these builds but it's it's sort of signing at a very different level I think than in cosign",
    "start": "1626840",
    "end": "1634480"
  },
  {
    "text": "so you have a source of inputs right you produce your output but that output",
    "start": "1634480",
    "end": "1639520"
  },
  {
    "text": "could be an input to something else so yes don't you end up signing the output",
    "start": "1639520",
    "end": "1645120"
  },
  {
    "text": "which is now an input to something else the thing that you're signing over still always includes the derivation hash",
    "start": "1645120",
    "end": "1650720"
  },
  {
    "text": "right so if you have a downstream derivation so a program that depends on a library for example then the hash of",
    "start": "1650720",
    "end": "1656840"
  },
  {
    "text": "the thing you're including will be included in the hash of the thing you're producing so you sort of always carry",
    "start": "1656840",
    "end": "1662360"
  },
  {
    "text": "this bit of information about what was this build from and how down with you in",
    "start": "1662360",
    "end": "1668039"
  },
  {
    "text": "the tree right there is an interesting idea I actually just had as we're talking about this in container images",
    "start": "1668039",
    "end": "1675000"
  },
  {
    "text": "in the in the oci image format the format that like registry speak when you're downloading a container image and",
    "start": "1675000",
    "end": "1680159"
  },
  {
    "text": "so on you can attach some metadata to each layer in an image right this is what's typically known as in in the",
    "start": "1680159",
    "end": "1686000"
  },
  {
    "text": "docker world as the docker version I think or Docker history feature you run Docker history on an image name and it",
    "start": "1686000",
    "end": "1691760"
  },
  {
    "text": "tells you sort of the docker file commands but this is just a plain string you can put any information in there so",
    "start": "1691760",
    "end": "1698200"
  },
  {
    "text": "an interesting thing to do would be to include the derivation hashes of each of the layers or like the contents of each",
    "start": "1698200",
    "end": "1704120"
  },
  {
    "text": "of the layers in this Manifest this data structure representing the image and then probably include it in the signing",
    "start": "1704120",
    "end": "1710320"
  },
  {
    "text": "process which now gives you an additional guarantee over what the contents are that could be fun to",
    "start": "1710320",
    "end": "1716080"
  },
  {
    "text": "implement in next interesting okay so talking about inputs and outputs and",
    "start": "1716080",
    "end": "1721960"
  },
  {
    "text": "versions it reminded me that Nix itself there's no tags or releases on the",
    "start": "1721960",
    "end": "1729279"
  },
  {
    "text": "GitHub repository of Nix why is this I found it very interesting why is this",
    "start": "1729279",
    "end": "1734880"
  },
  {
    "text": "that's probably an artifact of me working at Google at the time um so Google famously lives at head that's the",
    "start": "1734880",
    "end": "1743039"
  },
  {
    "text": "the phrase that is often used internally and then published projects like abile the C++ extended standard Library",
    "start": "1743039",
    "end": "1749159"
  },
  {
    "text": "created by Google and I've sort of just stopped thinking about the concept of",
    "start": "1749159",
    "end": "1754279"
  },
  {
    "text": "version numbers explicit version numbers for software because they always feel kind of arbitrary it's like you're the",
    "start": "1754279",
    "end": "1760000"
  },
  {
    "text": "author of some piece of software and at some point you decide this particular commit for some reason or another either",
    "start": "1760000",
    "end": "1766799"
  },
  {
    "text": "given by Intuition or some said schedule is a commit that I consider worthy of releasing to use this kind of slightly",
    "start": "1766799",
    "end": "1774000"
  },
  {
    "text": "strange phrasing and I don't really see what we get from that so the way it",
    "start": "1774000",
    "end": "1780000"
  },
  {
    "text": "works in some of the monor repo setups um especially Google that I'm familiar with is that each commit that you create",
    "start": "1780000",
    "end": "1787399"
  },
  {
    "text": "gets a revision number a revision number is slightly different from a git commit if you look at to get commits for",
    "start": "1787399",
    "end": "1793480"
  },
  {
    "text": "example then the the commits themselves don't tell you anything about the relation between the commits it's just like a random bunch of uh strings a",
    "start": "1793480",
    "end": "1801480"
  },
  {
    "text": "random bunch of characters and numbers and if you look at two git commit hes you don't know which one is older or",
    "start": "1801480",
    "end": "1807039"
  },
  {
    "text": "newer for example in revision numbers you have strictly monotonically increasing numbers which means that each",
    "start": "1807039",
    "end": "1814000"
  },
  {
    "text": "time a revision number is assigned it's exactly one larger than the last revision number and every change to the",
    "start": "1814000",
    "end": "1819640"
  },
  {
    "text": "repository happens completely linearly so what this lets you do is that you can",
    "start": "1819640",
    "end": "1824840"
  },
  {
    "text": "sort of assign watermarks you can say in re Vision 405 we broke this API if you depend on",
    "start": "1824840",
    "end": "1833200"
  },
  {
    "text": "this API make sure you are using something before 405 and otherwise use",
    "start": "1833200",
    "end": "1838320"
  },
  {
    "text": "something after 405 this is commonly done inside of Google where there's there's a particular term for how",
    "start": "1838320",
    "end": "1844200"
  },
  {
    "text": "rebasing or the equivalent of rebasing Works in their Version Control System where people will talk to each other",
    "start": "1844200",
    "end": "1849600"
  },
  {
    "text": "about fixes that have happened in libraries and other infrastructure that people are using but they just say hey",
    "start": "1849600",
    "end": "1855080"
  },
  {
    "text": "just rebase your work past this particular number and that's for the most part most of the versioning",
    "start": "1855080",
    "end": "1861799"
  },
  {
    "text": "structure that you need right there is of course for service releases some",
    "start": "1861799",
    "end": "1867120"
  },
  {
    "text": "interest in being able to like pinpoint exactly which version of a service you're running and also declare which one you want to be running rather than",
    "start": "1867120",
    "end": "1873480"
  },
  {
    "text": "saying I always want the latest one to run and inside of Google there's like",
    "start": "1873480",
    "end": "1878600"
  },
  {
    "text": "four billion different solutions to this problem some more or less standardized than others and yeah I I don't have a",
    "start": "1878600",
    "end": "1885240"
  },
  {
    "text": "good answer to that but there's some ideas we have in the tvl world for how that could look but basically to roll",
    "start": "1885240",
    "end": "1890799"
  },
  {
    "text": "back to your question it's just I don't really believe in explicitly named versions just use the latest one and",
    "start": "1890799",
    "end": "1897080"
  },
  {
    "text": "I'll tell you if if something breaks but how will it tell me if something breaks because that's that's like the whole",
    "start": "1897080",
    "end": "1902240"
  },
  {
    "text": "idea right when you look at the version and typically semantic versioning is",
    "start": "1902240",
    "end": "1907440"
  },
  {
    "text": "whether you know we like it or not it's the versioning scheme that you know most of the world uses kubernetes that's",
    "start": "1907440",
    "end": "1913639"
  },
  {
    "text": "because we mentioned that I'm not sure whether NYX uses that I think NYX is based I'm not sure which is my favorite",
    "start": "1913639",
    "end": "1920679"
  },
  {
    "text": "versioning scheme but anyways like going back to samver which kubernetes uses like 122",
    "start": "1920679",
    "end": "1925760"
  },
  {
    "text": "123 that version means something that version bump whether it's a minor or or a major or a patch regardless which",
    "start": "1925760",
    "end": "1932679"
  },
  {
    "text": "version bumps it mean something so it compresses a lot of this information in terms of should you expect something to",
    "start": "1932679",
    "end": "1940200"
  },
  {
    "text": "break or are there new features or is it just like a you know a bug fix and applied or security fixes and",
    "start": "1940200",
    "end": "1946039"
  },
  {
    "text": "everything's good so I think it's this hint that we would be missing if we",
    "start": "1946039",
    "end": "1952080"
  },
  {
    "text": "don't have versions and who has time to read all the change logs right when you are consuming tens of different software",
    "start": "1952080",
    "end": "1959240"
  },
  {
    "text": "in your in production yeah I think this is interestingly I think this might be a",
    "start": "1959240",
    "end": "1964639"
  },
  {
    "text": "cultural thing that we sort of in the development Community have to work on over time so change logs if you look at",
    "start": "1964639",
    "end": "1970919"
  },
  {
    "text": "them contain a lot of information it might not be directly relevant to you MH for example if you're looking at a",
    "start": "1970919",
    "end": "1976639"
  },
  {
    "text": "change lck of kubernetes kubernetes has a lot of moving Parts it has a lot of different groups working on it with",
    "start": "1976639",
    "end": "1982159"
  },
  {
    "text": "different interests and use cases a single kubernetes version change look will contain an enormous amount of",
    "start": "1982159",
    "end": "1988039"
  },
  {
    "text": "information about components that you don't use or will ever encounter but that are going to be relevant to somebody else so I think we might need",
    "start": "1988039",
    "end": "1996000"
  },
  {
    "text": "something like a concept of a break log instead of a change log where you explicitly only track the things that",
    "start": "1996000",
    "end": "2001679"
  },
  {
    "text": "are likely to break compatibility with previous releases and the reason I think this is a good idea is because if you're",
    "start": "2001679",
    "end": "2008240"
  },
  {
    "text": "doing it with for example semantic versioning you're leaving a lot of accounting up to uh to a user writing",
    "start": "2008240",
    "end": "2014720"
  },
  {
    "text": "writing the deciding which version to publish and writing the change L for that version to remember all of the",
    "start": "2014720",
    "end": "2020279"
  },
  {
    "text": "things that changed um that are actually breaking compatibility and I think it's probably happened to a lot of people",
    "start": "2020279",
    "end": "2026399"
  },
  {
    "text": "that something was released at a new seemingly innocent version that ended up breaking some part of their system",
    "start": "2026399",
    "end": "2032760"
  },
  {
    "text": "because they weren't aware that there was going to be all the authors of the software weren't aware that they made a change that was breaking I don't",
    "start": "2032760",
    "end": "2039039"
  },
  {
    "text": "remember the details but there was a change in the jvm one of the jvm implementations that changed the",
    "start": "2039039",
    "end": "2045240"
  },
  {
    "text": "internal representation of strings I believe yeah don't nail me down on what exactly the change was but the new",
    "start": "2045240",
    "end": "2051118"
  },
  {
    "text": "version had some slightly different performance characteristics but no user-facing changes in the API of the",
    "start": "2051119",
    "end": "2057000"
  },
  {
    "text": "string type and this led to a very strange performance impact on lots of production systems that were upgrading",
    "start": "2057000",
    "end": "2062760"
  },
  {
    "text": "the jvm so what we tried to do in the tvl world what I also do in in nixory is",
    "start": "2062760",
    "end": "2068599"
  },
  {
    "text": "that we follow specific commit message standards so if you look at the commit messages in these projects we try to",
    "start": "2068599",
    "end": "2075040"
  },
  {
    "text": "make it clear which ones of them are most likely to have an impact on end users and which ones are just shuffling",
    "start": "2075040",
    "end": "2081679"
  },
  {
    "text": "code around or like fixing typos and documentation and so on um so there should be some way of saying hey I'm",
    "start": "2081679",
    "end": "2087919"
  },
  {
    "text": "currently using this revision of this program I want to update to this revision show me all of the relevant",
    "start": "2087919",
    "end": "2093398"
  },
  {
    "text": "things that have changed since then for whatever your definition of relevant is there's no great generic solution to",
    "start": "2093399",
    "end": "2099480"
  },
  {
    "text": "this but it's it's a really interesting problem to start investigating for the future I think so you mentioned",
    "start": "2099480",
    "end": "2105200"
  },
  {
    "text": "something about revisions I think that is interesting because maybe that's the bit that you're thinking when you put",
    "start": "2105200",
    "end": "2110720"
  },
  {
    "text": "releases out just to double check this every single commit that you make it doesn't get a revision right it's not",
    "start": "2110720",
    "end": "2117119"
  },
  {
    "text": "every commit so in git the my preferred way of creating revision numbers is",
    "start": "2117119",
    "end": "2122280"
  },
  {
    "text": "actually kind of implicit so what you do is you count the number of commits in",
    "start": "2122280",
    "end": "2127320"
  },
  {
    "text": "your branch and use that as the revision number there is one complexity here",
    "start": "2127320",
    "end": "2132400"
  },
  {
    "text": "which is that if you are using merge based um development strategies you can end up with two different points in the",
    "start": "2132400",
    "end": "2138920"
  },
  {
    "text": "uh in the repository that have the same number of commits so at that case the number of commits is not actually unique",
    "start": "2138920",
    "end": "2144280"
  },
  {
    "text": "but git has a feature for this and its command for counting the number of commits which essentially lets you",
    "start": "2144280",
    "end": "2150280"
  },
  {
    "text": "Traverse only one side of a merge tree saying that for example you're always sticking to the left side of the merge",
    "start": "2150280",
    "end": "2156560"
  },
  {
    "text": "tree meaning that the merge commit itself is counted but the things included by that merge from somewhere",
    "start": "2156560",
    "end": "2162720"
  },
  {
    "text": "else are not and then you get unique monotonically increasing version numbers or revision numbers for G we have a",
    "start": "2162720",
    "end": "2169200"
  },
  {
    "text": "setup in the tbll repository where our CI system whenever a commit makes it to the head branch which is called Canon",
    "start": "2169200",
    "end": "2175720"
  },
  {
    "text": "for us a new revision number is created and pushed to git as a ref which means that you can run a git fetch command",
    "start": "2175720",
    "end": "2182079"
  },
  {
    "text": "locally and you get the the refs that exist in the remote and you have the same revision numbers locally but even",
    "start": "2182079",
    "end": "2188200"
  },
  {
    "text": "if you don't run this fetch command there's a oneline shell command that you can run locally that will use your CPU",
    "start": "2188200",
    "end": "2193560"
  },
  {
    "text": "for a couple of minutes while it's going through the git history and it will yield the exact same numbers as remotely so you're not really dependent on",
    "start": "2193560",
    "end": "2200040"
  },
  {
    "text": "keeping the state anywhere as long as the actual GI hatches are the same right for nixer specifically it's interesting",
    "start": "2200040",
    "end": "2205920"
  },
  {
    "text": "because most uses of it right now are on the publicly hosted nixory dodev website",
    "start": "2205920",
    "end": "2210960"
  },
  {
    "text": "at least if anybody is running a large private setup of it they haven't told me so I think that this is the case so they",
    "start": "2210960",
    "end": "2216240"
  },
  {
    "text": "should right this is a good good time to tell Vince yeah it's it's it's a good time to tell me if you are running this",
    "start": "2216240",
    "end": "2221280"
  },
  {
    "text": "in production on your own infrastructure if that was the case and I would probably take more care in at least",
    "start": "2221280",
    "end": "2226400"
  },
  {
    "text": "maybe creating something like this break log I was just talking about and noting more of what's changing there under the",
    "start": "2226400",
    "end": "2231560"
  },
  {
    "text": "hood but also on the other hand most changes in nixory aren't really breaking",
    "start": "2231560",
    "end": "2237960"
  },
  {
    "text": "it's like additional information being added to images or additional ways of running it being added but always with",
    "start": "2237960",
    "end": "2244760"
  },
  {
    "text": "the intention of keeping it compatible with previous configuration so if you add a new environment variable",
    "start": "2244760",
    "end": "2250520"
  },
  {
    "text": "for example because you're introducing a new backend for building as a randomly picked example then you should probably",
    "start": "2250520",
    "end": "2256960"
  },
  {
    "text": "default that environment variable to whatever the behavior was before so that somebody who isn't aware of this new",
    "start": "2256960",
    "end": "2262240"
  },
  {
    "text": "thing being added doesn't actually get affected by it in any way yeah this is fascinating I am missing so much I mean",
    "start": "2262240",
    "end": "2268960"
  },
  {
    "text": "I'm fascinated by your take on this it's something completely new I have heard other people do this but not to your",
    "start": "2268960",
    "end": "2275560"
  },
  {
    "text": "extent and I would love to see what looks in practice but I think this is where the podcasting format breaks down",
    "start": "2275560",
    "end": "2281480"
  },
  {
    "text": "and I have to literally see it and we need like go to go like video and screen share so maybe a follow-up stream who",
    "start": "2281480",
    "end": "2287839"
  },
  {
    "text": "knows I'll would be up for it but I'm really fascinated by this like literally how do you ship software how do you ship",
    "start": "2287839",
    "end": "2293200"
  },
  {
    "text": "nixory some of the finer details around NYX and how you think about this I think that's fascinating I was in a",
    "start": "2293200",
    "end": "2299680"
  },
  {
    "text": "conversation yesterday with a friend of mine who used to be one of the Architects at Spotify a company where I worked back in the back in the day long",
    "start": "2299680",
    "end": "2306520"
  },
  {
    "text": "time ago at this point and I randomly said that I think release schedule",
    "start": "2306520",
    "end": "2311599"
  },
  {
    "text": "should be unpredictable including to the people that are writing the software what I mean by this is that you should",
    "start": "2311599",
    "end": "2317040"
  },
  {
    "text": "always submit code to your repository with the notion in the back of your head that this might get released at any",
    "start": "2317040",
    "end": "2323480"
  },
  {
    "text": "moment in time and doing things like a change that is split up across two different review units but that changes",
    "start": "2323480",
    "end": "2329960"
  },
  {
    "text": "behavior in between in a way that it's breaking it's probably something you shouldn't do and a good way to enforce",
    "start": "2329960",
    "end": "2336200"
  },
  {
    "text": "this sort of thing and instill build the sort of mindset in people is to make things kind of a little bit unpredictable so do regular releases of",
    "start": "2336200",
    "end": "2342760"
  },
  {
    "text": "your services just as an example every n hours where N is a range from say 3 to 8",
    "start": "2342760",
    "end": "2348440"
  },
  {
    "text": "and you don't exactly know there's no such thing as a merge window or release window so that's like a release monkey",
    "start": "2348440",
    "end": "2353920"
  },
  {
    "text": "right yeah I like the phrasing a release monkey like from the chaos monkey a release monkey anytime you get to",
    "start": "2353920",
    "end": "2359319"
  },
  {
    "text": "release anytime that's great yeah okay I like that in tvl we have a single point",
    "start": "2359319",
    "end": "2365319"
  },
  {
    "text": "in the repository where we pin NYX pack the repository I talked about earlier that gives us all of the third party",
    "start": "2365319",
    "end": "2370839"
  },
  {
    "text": "dependencies and we have no automation for bumping this it basically happens",
    "start": "2370839",
    "end": "2375920"
  },
  {
    "text": "whenever somebody in the community feels like hey I want to bump NYX packages and this has the interesting effect because",
    "start": "2375920",
    "end": "2381640"
  },
  {
    "text": "it's the one single place where all external dependencies for all projects that we have come in that lots of stuff",
    "start": "2381640",
    "end": "2388400"
  },
  {
    "text": "randomly breaks for example we have a bunch of has school projects and Haso projects are very prone to breakage on",
    "start": "2388400",
    "end": "2394280"
  },
  {
    "text": "dependency updates and this sort of thing um especially if you try to not pin your depend uh your dependency",
    "start": "2394280",
    "end": "2399480"
  },
  {
    "text": "versions too much so we end up in a situation where people are fixing each other's software and eventually getting",
    "start": "2399480",
    "end": "2406880"
  },
  {
    "text": "so good at it that the friction of doing this over time has gone down to the point where most releases just go through kind of seamlessly at this point",
    "start": "2406880",
    "end": "2413800"
  },
  {
    "text": "when we bump third party dependencies so that's an interesting sort of side effect that we've had of not paying",
    "start": "2413800",
    "end": "2421240"
  },
  {
    "text": "particular attention to exactly which version numbers of things we're using there is I can't remember her name",
    "start": "2421240",
    "end": "2427000"
  },
  {
    "text": "there's a person from honeycomb.io if you're familiar with that it's like a monitoring there are Partners very",
    "start": "2427000",
    "end": "2433160"
  },
  {
    "text": "familiar who are you thinking charity yeah charity Majors yes charity Majors right so back when I used Twitter I used",
    "start": "2433160",
    "end": "2439960"
  },
  {
    "text": "to follow her and I found her takes on the whole release situation quite interesting because I think they overlap",
    "start": "2439960",
    "end": "2445880"
  },
  {
    "text": "to a large degree with what I'm thinking like reduce the friction of releases by just doing them a lot and like not",
    "start": "2445880",
    "end": "2452720"
  },
  {
    "text": "making them a special ceremony where somebody goes and signs the Blessed commit and then you print out a change",
    "start": "2452720",
    "end": "2458960"
  },
  {
    "text": "request and the CEO signs it Etc just just do it all of the time and it'll be a lot less painful it will be painful in",
    "start": "2458960",
    "end": "2465920"
  },
  {
    "text": "the beginning like I think we shouldn't we shouldn't dance around that it's definitely true but eventually you'll",
    "start": "2465920",
    "end": "2471200"
  },
  {
    "text": "figure out how to deal with it yeah for sure I'm a big fan to every every commit",
    "start": "2471200",
    "end": "2476680"
  },
  {
    "text": "going straight into production right no Gatekeepers nothing like that if all the tests pass if the build passes um if it",
    "start": "2476680",
    "end": "2482920"
  },
  {
    "text": "can boot in production can do the database migration all the things it needs to do it's out there every single",
    "start": "2482920",
    "end": "2490880"
  },
  {
    "text": "[Music]",
    "start": "2492330",
    "end": "2503979"
  },
  {
    "text": "commment what's up shippers Adam here and I want to tell you about one of our new partners for 2022 mongod DB the",
    "start": "2504040",
    "end": "2511680"
  },
  {
    "text": "makers of mongod DB Atlas the multicloud application data platform mugod DB Atlas",
    "start": "2511680",
    "end": "2518839"
  },
  {
    "text": "provides an integrated Suite of data services centered around a cloud database designed to accelerate and",
    "start": "2518839",
    "end": "2525680"
  },
  {
    "text": "simplify how you build with data ditch The Columns the rows once and for all",
    "start": "2525680",
    "end": "2531920"
  },
  {
    "text": "and switch to the database loved by millions of Developers for its intuitive document data model and query API that",
    "start": "2531920",
    "end": "2538920"
  },
  {
    "text": "maps to how you think and code when you're ready to launch Atlas automatically layers on production grade",
    "start": "2538920",
    "end": "2544599"
  },
  {
    "text": "resilience performance and security features so you can confidently scale your app from sandbox to customer facing",
    "start": "2544599",
    "end": "2551640"
  },
  {
    "text": "application as a truly multicloud database Atlas enables you to deploy",
    "start": "2551640",
    "end": "2556800"
  },
  {
    "text": "your data across multiple regions on AWS Azure and Google Cloud simultaneously",
    "start": "2556800",
    "end": "2562640"
  },
  {
    "text": "you heard that right you can distribute your data across multiple Cloud providers at the same time with a click",
    "start": "2562640",
    "end": "2568359"
  },
  {
    "text": "of a button all you got to do is try out this today for free they have a free forever tier so you can prove yourself",
    "start": "2568359",
    "end": "2574760"
  },
  {
    "text": "and your team the platform has everything anything you need head to mongod db.com Atlas again mongod db.com",
    "start": "2574760",
    "end": "2582680"
  },
  {
    "text": "Atlas And by our friends at getb the devops platform that empowers organizations is to maximize the overall",
    "start": "2582680",
    "end": "2589480"
  },
  {
    "text": "return on software development by delivering software faster more efficiently while strengthening security",
    "start": "2589480",
    "end": "2595359"
  },
  {
    "text": "and compliance gitlab helps teams to identify and address blockers immediately in a single tool they focus",
    "start": "2595359",
    "end": "2603000"
  },
  {
    "text": "on delivering value not maintaining Integrations and they automate security and compliance without compromising",
    "start": "2603000",
    "end": "2609559"
  },
  {
    "text": "speed or spend get started with their free tier no credit card required to prove yourself and the rest of your team",
    "start": "2609559",
    "end": "2615480"
  },
  {
    "text": "the platform has everything you need to make awesome software head to about. gitlab.com",
    "start": "2615480",
    "end": "2620680"
  },
  {
    "text": "Solutions devops platform or check the show notes for a link to get started again links are in the show",
    "start": "2620680",
    "end": "2628480"
  },
  {
    "text": "[Music]",
    "start": "2628480",
    "end": "2634649"
  },
  {
    "text": "notes something different about software that",
    "start": "2636040",
    "end": "2642559"
  },
  {
    "text": "has versions that goes out to users and people expect it to come at specific",
    "start": "2642559",
    "end": "2649000"
  },
  {
    "text": "intervals maybe right because you can't be always upgrading or when it does come it's very clear about what breaks and",
    "start": "2649000",
    "end": "2655520"
  },
  {
    "text": "what doesn't or if it anything breaks and we go back to your break log but still that expectation that you know",
    "start": "2655520",
    "end": "2661720"
  },
  {
    "text": "every week or every month there will be a new version and you can upgrade to it if you want there may be by the way intermediaries but if you ship every",
    "start": "2661720",
    "end": "2668520"
  },
  {
    "text": "single commit I think people would like users of your software would be like I can't upgrade every single time and then",
    "start": "2668520",
    "end": "2675680"
  },
  {
    "text": "how do you enforce upgrades right and backwards compatibility and stuff like that you need to have those break points",
    "start": "2675680",
    "end": "2681200"
  },
  {
    "text": "in your release cycle but uh I'm pretty sure we could talk about this for the rest of the podcast but we're not going",
    "start": "2681200",
    "end": "2686839"
  },
  {
    "text": "to probably we're going to switch focus and you mentioned tvl a couple of times and I thought that it means television",
    "start": "2686839",
    "end": "2694319"
  },
  {
    "text": "something but it doesn't what does it stand for for and how did you come up with a name so tvl stands for the virus",
    "start": "2694319",
    "end": "2701119"
  },
  {
    "text": "Lounge originally I think most of the people listening can probably guess which virus inspired this name so the",
    "start": "2701119",
    "end": "2708720"
  },
  {
    "text": "background of this name is that in the early days of the lockdowns a lot of people were kind of missing out on",
    "start": "2708720",
    "end": "2714800"
  },
  {
    "text": "social interaction and wanted to just kind of have the chats that we would previously Cally have in bars and and",
    "start": "2714800",
    "end": "2720760"
  },
  {
    "text": "such so at some point I got this idea of what if we just tweet out publicly a",
    "start": "2720760",
    "end": "2725839"
  },
  {
    "text": "link to a Google meet chat where people can join and just talk about stuff and I did this on my Twitter account at the",
    "start": "2725839",
    "end": "2732000"
  },
  {
    "text": "time and on the first day a single person joined and he said this great thing about like I think there's not",
    "start": "2732000",
    "end": "2737760"
  },
  {
    "text": "enough spontaneous socializing on the internet which kind of played into this whole idea and then on the second day it",
    "start": "2737760",
    "end": "2743720"
  },
  {
    "text": "was maybe five people and then eventually we ended up with like 60 and the thing became a completely persistent",
    "start": "2743720",
    "end": "2750000"
  },
  {
    "text": "video chat that was just always open with people from all kinds of time zones and uh with similar interests I were",
    "start": "2750000",
    "end": "2755319"
  },
  {
    "text": "just kind of hanging out it peaked at some point in terms of this kind of activity uh during 2020 of course and",
    "start": "2755319",
    "end": "2762000"
  },
  {
    "text": "after that things kind of gradually started slowing down again as people sort of started resuming their normal lives to the extent possible depending",
    "start": "2762000",
    "end": "2768880"
  },
  {
    "text": "on their location and the people that remained as part of the community which also has an ioc channel are mostly",
    "start": "2768880",
    "end": "2775280"
  },
  {
    "text": "people that have very strong shared interests so a lot of them are current or former googlers for example which brings in some people interested in",
    "start": "2775280",
    "end": "2782079"
  },
  {
    "text": "monor repos there's this joke that people leaving Google always trying to rebuild Google and I think to some degree probably probably falling prey to",
    "start": "2782079",
    "end": "2789200"
  },
  {
    "text": "this too and we stuck around and at some point somebody said on ioc hey let's make a monor repo and we just decided to",
    "start": "2789200",
    "end": "2796720"
  },
  {
    "text": "do it so we were like okay what what tooling can we use for this Nick seems like an obvious one filling a niche that I can talk about in a second and we want",
    "start": "2796720",
    "end": "2804319"
  },
  {
    "text": "to use something that works similar to Google's code review so that's Garrett which is the code review tool built for",
    "start": "2804319",
    "end": "2809720"
  },
  {
    "text": "Android and we need something that can do code search for us so we looking around we found something called Source",
    "start": "2809720",
    "end": "2814760"
  },
  {
    "text": "graph that does it and then we took all of these things kind of just stuck them together and started building tooling",
    "start": "2814760",
    "end": "2820400"
  },
  {
    "text": "around it and that's now the uh tvl project so we build monor repo tooling",
    "start": "2820400",
    "end": "2825520"
  },
  {
    "text": "and we have a monor repo which is mostly containing the tooling for itself but",
    "start": "2825520",
    "end": "2830559"
  },
  {
    "text": "it's gotten to the point where external people that have nothing to do with tvl have like contacted us and said hey this",
    "start": "2830559",
    "end": "2836359"
  },
  {
    "text": "looks very cool and we like the workflows that you've built and we'd like to start using this so I know of two companies right now using a lot of",
    "start": "2836359",
    "end": "2843079"
  },
  {
    "text": "our technology in their development stack and it's probably going to be more in the future because we're getting to a point where it's pretty smooth and nice",
    "start": "2843079",
    "end": "2850200"
  },
  {
    "text": "to use if I can like digress here slightly for a second sure I have some thoughts about developer tooling which I",
    "start": "2850200",
    "end": "2856119"
  },
  {
    "text": "think play into this a lot so when you when you have an idea for something that you want to implement there is a lot of",
    "start": "2856119",
    "end": "2861720"
  },
  {
    "text": "stuff that you need to do between having the idea and getting feedback on whether the idea is valuable right if you're",
    "start": "2861720",
    "end": "2867319"
  },
  {
    "text": "bootstrapping a completely new project and you're doing it in like the best practice ways that currently exist",
    "start": "2867319",
    "end": "2873119"
  },
  {
    "text": "you're probably going to be setting up G repositories and setting up a CI system and like fig figuring out what issue tracker to use and all of this kind of",
    "start": "2873119",
    "end": "2879000"
  },
  {
    "text": "stuff you could opt for just using GitHub but even then a lot of setup still needs to be done there and then",
    "start": "2879000",
    "end": "2884880"
  },
  {
    "text": "you need to figure out how to build your software you need to figure out how you how to test your software all of this",
    "start": "2884880",
    "end": "2889960"
  },
  {
    "text": "kind of stuff our vision for what we're doing with our repository is that the entire overhead of this gets reduced to",
    "start": "2889960",
    "end": "2896359"
  },
  {
    "text": "just making a folder somewhere and dumping some code into it and you immediately get all of this other stuff around and we're actually kind of at",
    "start": "2896359",
    "end": "2902400"
  },
  {
    "text": "that point already and the people in the community that use this the most have",
    "start": "2902400",
    "end": "2907559"
  },
  {
    "text": "sort of remarked on how this reduces the feedback loop that you have for getting your ideas out and checking whether or",
    "start": "2907559",
    "end": "2913640"
  },
  {
    "text": "not they're valid so you you feel a lot like um this kind of becomes an extension of your thinking and there's a",
    "start": "2913640",
    "end": "2920400"
  },
  {
    "text": "lot of overhead that goes away and then you're just working much faster the drawback of this is that if it becomes",
    "start": "2920400",
    "end": "2926720"
  },
  {
    "text": "very easy to start new things and experiment with them they just pile on as more of the things that you never",
    "start": "2926720",
    "end": "2931760"
  },
  {
    "text": "actually finish but not all ideas actually worth finishing either so maybe that's all right is exploding right here",
    "start": "2931760",
    "end": "2938160"
  },
  {
    "text": "because that's exactly how I think of software development I have an idea like will it work I don't know let's try it out and then you just go from there",
    "start": "2938160",
    "end": "2944920"
  },
  {
    "text": "right because it will it will it will shape it will shift and more people will add their own ideas on top of your idea",
    "start": "2944920",
    "end": "2950400"
  },
  {
    "text": "before you know it you end up with something so good yeah you would have never come up with on your own and it's",
    "start": "2950400",
    "end": "2956440"
  },
  {
    "text": "this shared Consciousness right like everybody working on it and contributing to it so yeah I would love to see how",
    "start": "2956440",
    "end": "2962760"
  },
  {
    "text": "this works in practice I mean never mind Nix and all the other cool stuff we talked about but this see sounds like",
    "start": "2962760",
    "end": "2967920"
  },
  {
    "text": "the essence of how you develop how you get your ideas out there which happens to be at the core of shipit so you know",
    "start": "2967920",
    "end": "2974440"
  },
  {
    "text": "will it work I don't know I am very happy to invite you and let you try it out and I mean our repository is",
    "start": "2974440",
    "end": "2980280"
  },
  {
    "text": "publicly available you can clone it but you will run into the problem that I briefly touched upon earlier when we",
    "start": "2980280",
    "end": "2986200"
  },
  {
    "text": "discussed NYX itself that there is a sort of learning curve to being able to use NYX proficiently and this is the one",
    "start": "2986200",
    "end": "2992839"
  },
  {
    "text": "thing that people kind of need to overcome to use the setup so do need to run NYX as your operating system to be",
    "start": "2992839",
    "end": "2998720"
  },
  {
    "text": "able to do this not as your operating system so you can install NYX on uh even",
    "start": "2998720",
    "end": "3004040"
  },
  {
    "text": "on a Mac okay I wouldn't guarantee that all of our software Builds on Max I think the majority of our users are",
    "start": "3004040",
    "end": "3010520"
  },
  {
    "text": "Linux people but you can install NYX on a variety of operating systems and actually we have some plans for making",
    "start": "3010520",
    "end": "3016000"
  },
  {
    "text": "it possible to even run it on systems like Windows in the future by decoupling a bunch of the the requirements that it",
    "start": "3016000",
    "end": "3021839"
  },
  {
    "text": "has from the core system and then you can just use it as a build system could you just pull down a container start",
    "start": "3021839",
    "end": "3027160"
  },
  {
    "text": "with that will that work we have a member of the tvl community who shows up",
    "start": "3027160",
    "end": "3032359"
  },
  {
    "text": "occasionally and he works for a company that I forgot the name of I think they're called I think the company that",
    "start": "3032359",
    "end": "3038680"
  },
  {
    "text": "he works for is called gitpod and they sort of built cloud-based um development environments and we've had some chats",
    "start": "3038680",
    "end": "3045040"
  },
  {
    "text": "with him before about whether or not it would be possible to have a sort of git pod for tvl setup which would actually",
    "start": "3045040",
    "end": "3051040"
  },
  {
    "text": "be the ideal way of doing this think you just you just go to a website and it's been sub a Dev environment running",
    "start": "3051040",
    "end": "3056640"
  },
  {
    "text": "somewhere else and then you can just start using it but we haven't done that right now so there isn't a single like",
    "start": "3056640",
    "end": "3062880"
  },
  {
    "text": "TurnKey solution to diving into the stack but it's definitely something to think about okay would I still be using",
    "start": "3062880",
    "end": "3069319"
  },
  {
    "text": "git and the tools that I know like I'm assuming like you will not take VI as my code editor I think that's like not even",
    "start": "3069319",
    "end": "3075280"
  },
  {
    "text": "an option on the table and I don't think anyone would do that like take whichever code editor you have but what about git",
    "start": "3075280",
    "end": "3081920"
  },
  {
    "text": "what about the other tool link I'm a big fan for example TIG the anchor interface to get anything end curses I'm up for it",
    "start": "3081920",
    "end": "3089000"
  },
  {
    "text": "htop uh K9 all that good stuff so how does that look like we do use git we",
    "start": "3089000",
    "end": "3094760"
  },
  {
    "text": "just have a git repository in Garrett the workflows for this are very different from what you might be used to",
    "start": "3094760",
    "end": "3100839"
  },
  {
    "text": "from the GitHub gitlab Etc World in short the main difference is that your",
    "start": "3100839",
    "end": "3105920"
  },
  {
    "text": "unit of review is always one commit so if you make one commit and you uploaded to Garrett that is something that you",
    "start": "3105920",
    "end": "3112200"
  },
  {
    "text": "give a reviewer that you send to a reviewer and then they make a decision on that or not it depends on the rules",
    "start": "3112200",
    "end": "3118319"
  },
  {
    "text": "that you've set up for your repository you're not ever bunching together a bunch of changes into something like a",
    "start": "3118319",
    "end": "3123760"
  },
  {
    "text": "pull request which I think often leads to um slightly unrelated things being accumulated at the same time yes and",
    "start": "3123760",
    "end": "3130559"
  },
  {
    "text": "also your reviews work sort of like a first in first out system so you upload",
    "start": "3130559",
    "end": "3136960"
  },
  {
    "text": "a bunch of commits and people can start reviewing these commits already as you are working at the tail end of your",
    "start": "3136960",
    "end": "3142920"
  },
  {
    "text": "chain of commits and then some things might be merged earlier or not the control over when to merge things is",
    "start": "3142920",
    "end": "3148400"
  },
  {
    "text": "actually an important topic but it's up to you and then you can you can avoid the issue of having for example multiple",
    "start": "3148400",
    "end": "3154319"
  },
  {
    "text": "pull requests that depend on each other and not having a really good way of representing that to potential reviewers",
    "start": "3154319",
    "end": "3159480"
  },
  {
    "text": "I think I learned in my time working on like medium to large siiz C++ systems at Google that it's very useful to have",
    "start": "3159480",
    "end": "3166520"
  },
  {
    "text": "things that are kind of still in progress already in the stage of being reviewed because like errors in thinking",
    "start": "3166520",
    "end": "3173720"
  },
  {
    "text": "and stuff like that gets caught much earlier that's actually one of the first things which I do when I when I open a",
    "start": "3173720",
    "end": "3179079"
  },
  {
    "text": "pull request I start with a really simple commit 10 15 lines doesn't matter how much it is because it's the thinking",
    "start": "3179079",
    "end": "3185000"
  },
  {
    "text": "that goes into it for you to produce those 15 lines you should have thought about you should have done like a bit of",
    "start": "3185000",
    "end": "3190680"
  },
  {
    "text": "research just understood a bit like lay of the land what is happening how will this combine with something else and you",
    "start": "3190680",
    "end": "3196359"
  },
  {
    "text": "say this is the the direction that I'm thinking of going towards what do you think team members do you think this is",
    "start": "3196359",
    "end": "3203079"
  },
  {
    "text": "good or not and the quicker they can tell me no this is a bad idea or have you thought about this that whatever the",
    "start": "3203079",
    "end": "3208319"
  },
  {
    "text": "quicker I can take the next step rather than me sitting on it for I don't know a couple of commits a couple of days hours",
    "start": "3208319",
    "end": "3214640"
  },
  {
    "text": "whatever that that may be so after your first hour half hour however long it takes you to get to that first step you",
    "start": "3214640",
    "end": "3220720"
  },
  {
    "text": "want to share that but that only opens a pull request in the GitHub World while in the world that you describe that",
    "start": "3220720",
    "end": "3226839"
  },
  {
    "text": "actually would be the pull request itself right the thing that would be reviewed I mean does it actually even start as a pull request I I haven't even",
    "start": "3226839",
    "end": "3233319"
  },
  {
    "text": "asked about that so the the concept of pull requests kind of doesn't exist in Garrett so a pull request if you look at",
    "start": "3233319",
    "end": "3239200"
  },
  {
    "text": "GitHub is usually that you have a branch and the branch contains some work and you want to merge that work or use some",
    "start": "3239200",
    "end": "3245319"
  },
  {
    "text": "other strategy for moving it over like rebasing into the head branch of the repository or really any other Branch",
    "start": "3245319",
    "end": "3251559"
  },
  {
    "text": "but you get the general idea and in Garrett you don't push branches for things that you're working on instead",
    "start": "3251559",
    "end": "3257839"
  },
  {
    "text": "Garrett uses the git protocol in a slightly magic way where instead of pushing to a branch you push to a",
    "start": "3257839",
    "end": "3263799"
  },
  {
    "text": "special G ref so you run a command that says something like G push head to refs",
    "start": "3263799",
    "end": "3269520"
  },
  {
    "text": "for master if your head branch is called Master for example and then this would",
    "start": "3269520",
    "end": "3274640"
  },
  {
    "text": "send the commit to Garrett Garrett has a way of uniquely identifying this commit and then if it's a new commit that it",
    "start": "3274640",
    "end": "3280720"
  },
  {
    "text": "hasn't seen before it will create a new review um give you a link back actually which you can send to people or click on",
    "start": "3280720",
    "end": "3287200"
  },
  {
    "text": "and send it to reviewers or if it's a commit that it has already seen it will create what's called a new patch set of",
    "start": "3287200",
    "end": "3293200"
  },
  {
    "text": "the the previous review that you started so a common workflow is something like you you start a change you make a first",
    "start": "3293200",
    "end": "3299079"
  },
  {
    "text": "version of a commit you push it a reviewer leaves a bunch of comments on your code and then you create a new",
    "start": "3299079",
    "end": "3304359"
  },
  {
    "text": "version of the commit push it again to the same ref Garrett Updates this as a new patch set and the reviewer reviews",
    "start": "3304359",
    "end": "3311280"
  },
  {
    "text": "again until it's fine depending on your exact review workflows of course but the interesting thing here is also that the",
    "start": "3311280",
    "end": "3318240"
  },
  {
    "text": "entire history of the development of that commit is retained by Garrett you can always go back and look at previous",
    "start": "3318240",
    "end": "3324240"
  },
  {
    "text": "patch sets there's a situation on GitHub I don't know the details of how it happens I don't use GitHub a lot where",
    "start": "3324240",
    "end": "3331359"
  },
  {
    "text": "you can click on a review comment and get a page that says couldn't find this file or something because it's committed",
    "start": "3331359",
    "end": "3337760"
  },
  {
    "text": "has been Force pushed away so like the history of that is no longer available and that is just something that Garrett kind of avoids this is very similar to",
    "start": "3337760",
    "end": "3344960"
  },
  {
    "text": "how things work inside of Google so people might know that Google has its own version control system but the",
    "start": "3344960",
    "end": "3350160"
  },
  {
    "text": "majority of people use it through something that looks kind of like Mercurial so if you're familiar with Mercurial then it's basically same",
    "start": "3350160",
    "end": "3356520"
  },
  {
    "text": "workflow but each commit that you make becomes its own unit of review so each one of those is assigned the revision",
    "start": "3356520",
    "end": "3363000"
  },
  {
    "text": "number and it's it's something that you send to a person means that you end up structuring uh the way you write these",
    "start": "3363000",
    "end": "3369119"
  },
  {
    "text": "commits much more thoughtfully than you would if it's just a bunch of commits that a review together mhm okay so is",
    "start": "3369119",
    "end": "3375720"
  },
  {
    "text": "this your master plan to change how the world develops software and make them",
    "start": "3375720",
    "end": "3380839"
  },
  {
    "text": "develop a bit more like Google have the monor repo have the like not pull requests in because you mentioned that",
    "start": "3380839",
    "end": "3387160"
  },
  {
    "text": "everyone that worked at Google tries to get you know others to work like Google",
    "start": "3387160",
    "end": "3392640"
  },
  {
    "text": "does things it's an interesting question so I think Google is doing a lot of things in a less than ideal way which is",
    "start": "3392640",
    "end": "3399160"
  },
  {
    "text": "understandable considering that it's it's pretty old for a tech company at this point and there's a lot of stuff",
    "start": "3399160",
    "end": "3404599"
  },
  {
    "text": "that has simply accumulated Legacy over the last decades and there's a lot of stuff that I think we can conceptually",
    "start": "3404599",
    "end": "3410000"
  },
  {
    "text": "improve upon but my intention is not there's no master plan of making everybody use the same stack because",
    "start": "3410000",
    "end": "3416799"
  },
  {
    "text": "there are different ways of working and it's really a cultural question of like what kind of culture do you want in your",
    "start": "3416799",
    "end": "3423359"
  },
  {
    "text": "company it's very related to the whole like Cathedral versus bizaar conversation and all this kind of stuff what way of working works best for your",
    "start": "3423359",
    "end": "3430319"
  },
  {
    "text": "team what way works for you best because obviously like something at Google worked well for you yeah and I think",
    "start": "3430319",
    "end": "3437240"
  },
  {
    "text": "you're trying to capture that and share that with the world that approach that worked well what does that look like so",
    "start": "3437240",
    "end": "3444000"
  },
  {
    "text": "I think the thing that is most attractive to me about the way that not just development but most things work at",
    "start": "3444000",
    "end": "3450039"
  },
  {
    "text": "Google is that there is a strong shared understanding of certain tooling so it's",
    "start": "3450039",
    "end": "3455359"
  },
  {
    "text": "it's almost culturally ingrained you join the company and then you are flooded with these two and three letter",
    "start": "3455359",
    "end": "3460520"
  },
  {
    "text": "acronyms that make absolutely no sense to you for the first couple of months and then after some period of time you",
    "start": "3460520",
    "end": "3466240"
  },
  {
    "text": "are flinging them around as well and they have cultural significance like people sees specific kind of Link three",
    "start": "3466240",
    "end": "3472880"
  },
  {
    "text": "letters and a number and they know exactly what kind of thing this is what kind of tool this leads them to and these are the",
    "start": "3472880",
    "end": "3478520"
  },
  {
    "text": "same across all of the teams in this enormous company so if you switch teams there's always some stuff you have to",
    "start": "3478520",
    "end": "3484760"
  },
  {
    "text": "learn in the new team that is specific to the new team but you don't have to learn an entirely new tool stack and if",
    "start": "3484760",
    "end": "3490119"
  },
  {
    "text": "you're just doing a brief bit of collaboration with another team for example if you're fixing a bug in some f",
    "start": "3490119",
    "end": "3495440"
  },
  {
    "text": "foundational library that you're using you don't need to figure out like where is that repository how do they build",
    "start": "3495440",
    "end": "3500839"
  },
  {
    "text": "their software how do they track their bugs Etc because it's completely consistent across the entire organization for me this works really",
    "start": "3500839",
    "end": "3507559"
  },
  {
    "text": "well because I think there is there is an advantage to the sort of homogeneous environment where a lot of concerns are",
    "start": "3507559",
    "end": "3514079"
  },
  {
    "text": "offloaded to group managing that particular concern and they don't need to be reinvented the argument against",
    "start": "3514079",
    "end": "3519640"
  },
  {
    "text": "this is obviously that some people say that for them the flexibility to pick",
    "start": "3519640",
    "end": "3524680"
  },
  {
    "text": "and shape their own Tooling in many areas lets them work more efficiently and I think this can be very true for",
    "start": "3524680",
    "end": "3530799"
  },
  {
    "text": "small teams sometimes that have very particular opinions about how a specific thing should work and and it's in St",
    "start": "3530799",
    "end": "3537240"
  },
  {
    "text": "contrast to Spotify where I used to work where the idea at the time was that all",
    "start": "3537240",
    "end": "3542280"
  },
  {
    "text": "teams should have complete autonomy so the idea was that each team should be like a startup within a startup and they",
    "start": "3542280",
    "end": "3548799"
  },
  {
    "text": "could pick their own Buck trackers and code review Systems or whatever they wanted and it's kind of the opposite",
    "start": "3548799",
    "end": "3554680"
  },
  {
    "text": "extreme of what Google is doing and for me the Google way of doing things worked better however I should note because I",
    "start": "3554680",
    "end": "3561839"
  },
  {
    "text": "don't want to come across as somebody who's just like blindly copying everything I saw there or something that's not the intention there are a lot",
    "start": "3561839",
    "end": "3568440"
  },
  {
    "text": "of things that could be done a lot better at the company um so for example you might be familiar with the build",
    "start": "3568440",
    "end": "3575160"
  },
  {
    "text": "system basil which is also in use internally oh yes MH one of the things that basil sometimes struggles a bit",
    "start": "3575160",
    "end": "3581520"
  },
  {
    "text": "with is that there isn't a foundational concept like the derivation in Nyx in terms of which everything else is",
    "start": "3581520",
    "end": "3587839"
  },
  {
    "text": "expressed that's not necessarily criticism of Basil but I find that building a mental model of a complex",
    "start": "3587839",
    "end": "3593760"
  },
  {
    "text": "system like that is much easier if there's like a single thing at its core that you can understand that is sort of",
    "start": "3593760",
    "end": "3599440"
  },
  {
    "text": "simple and flexible enough to compose into many of the different things that that like a more specialized thing with",
    "start": "3599440",
    "end": "3606039"
  },
  {
    "text": "different concepts could do okay I think NYX is currently not really reaching its",
    "start": "3606039",
    "end": "3611799"
  },
  {
    "text": "full potential it's being used for the Nyx package set and it's being used for NYX which is a Linux distribution built",
    "start": "3611799",
    "end": "3618640"
  },
  {
    "text": "on top of Nyx but for the most part packages built with it are wrapping",
    "start": "3618640",
    "end": "3623680"
  },
  {
    "text": "existing build systems so let's say You're Building A py package there's a python build system that is standardized",
    "start": "3623680",
    "end": "3629359"
  },
  {
    "text": "NYX will just call that python build system and give you its output what I think NYX could also be doing is going",
    "start": "3629359",
    "end": "3635520"
  },
  {
    "text": "to the same abstraction level as basil where you are actually writing the build definitions of your software in NYX",
    "start": "3635520",
    "end": "3642000"
  },
  {
    "text": "itself and then you get this interesting situation where you have a unified system that manages all of your external",
    "start": "3642000",
    "end": "3647799"
  },
  {
    "text": "things and the buildt instructions for your software itself and I think that's an interesting future that we could get",
    "start": "3647799",
    "end": "3653680"
  },
  {
    "text": "to at some point yeah I like the video of that I'm like this conversation if anything it just made me realize how",
    "start": "3653680",
    "end": "3660720"
  },
  {
    "text": "much I don't know about that world how many similarities there are with uh",
    "start": "3660720",
    "end": "3666319"
  },
  {
    "text": "Docker containers I can see a lot of like you know even like the whole like",
    "start": "3666319",
    "end": "3671520"
  },
  {
    "text": "nixer right how it was built and like the uh the whole boundaries the whole inputs and outputs I even saw this um",
    "start": "3671520",
    "end": "3680000"
  },
  {
    "text": "issue which was like a proposal what about bringing ni builds to buildkit this is Moby buildkit issue on 650 we",
    "start": "3680000",
    "end": "3687119"
  },
  {
    "text": "don't have time to talk about it but that was fascinating to read and I think there's so much to learn from that world",
    "start": "3687119",
    "end": "3692599"
  },
  {
    "text": "which is completely new to me so it's like wow this is amazing you know I just want to you know go and Discover it and",
    "start": "3692599",
    "end": "3698680"
  },
  {
    "text": "explore it and see what's good about it what could be improved so on so forth but as we prepare to wrap up what do you",
    "start": "3698680",
    "end": "3705000"
  },
  {
    "text": "think is the most important takeaway for the listeners that made it through to this point of our conversation what I",
    "start": "3705000",
    "end": "3711319"
  },
  {
    "text": "would say is that there is a set of technologies that you can learn",
    "start": "3711319",
    "end": "3716480"
  },
  {
    "text": "that kind of change the way that you think about stuff examples of this for me personally have been emex which",
    "start": "3716480",
    "end": "3723160"
  },
  {
    "text": "introduces you to the concept of kind of completely introspect malleable software",
    "start": "3723160",
    "end": "3728240"
  },
  {
    "text": "or erlang which introduces you to the actor model and the way that they build distributed systems which is still very",
    "start": "3728240",
    "end": "3733520"
  },
  {
    "text": "relevant even though it's quite old at this point and I think NYX and the concepts introduced by NYX fall into",
    "start": "3733520",
    "end": "3739680"
  },
  {
    "text": "this category it's one of those things that you look at and it seems extremely strange to you at first maybe even a bit",
    "start": "3739680",
    "end": "3745960"
  },
  {
    "text": "alien but once you get far enough up on the learning curve of this program it",
    "start": "3745960",
    "end": "3751920"
  },
  {
    "text": "starts teaching you a slightly different way of thinking that could be super useful in many of the other things that",
    "start": "3751920",
    "end": "3757279"
  },
  {
    "text": "you do even if you aren't using n directly so I think the one takeaway that I would give to people is try to if",
    "start": "3757279",
    "end": "3763880"
  },
  {
    "text": "you have the time at some point try to learn nck and this is not an easy ask",
    "start": "3763880",
    "end": "3769240"
  },
  {
    "text": "because it's a complicated system to learn and unfortunately we as the Nyx Community haven't really figured out how",
    "start": "3769240",
    "end": "3776079"
  },
  {
    "text": "to teach it to people very well but there are many many different resources many different approaches to teaching it",
    "start": "3776079",
    "end": "3781480"
  },
  {
    "text": "maybe something works for you I recommend checking it out okay so we'll make sure to leave some noes in the show",
    "start": "3781480",
    "end": "3787200"
  },
  {
    "text": "notes but with that thank you Vincent it's been a pleasure to have my mind opened to the Nyx world and Nix three",
    "start": "3787200",
    "end": "3794839"
  },
  {
    "text": "and uh it feels like I'm only just like finding out about those things which hav been around for quite some time so I'm",
    "start": "3794839",
    "end": "3800119"
  },
  {
    "text": "very excited about it thank you very much was fun thank you",
    "start": "3800119",
    "end": "3806480"
  },
  {
    "text": "thank you for tuning in another episode of ship it this is just one of our podcasts for developers go to change.com",
    "start": "3806480",
    "end": "3812880"
  },
  {
    "text": "for the rest you can join us by Chang love.com Community for free the only",
    "start": "3812880",
    "end": "3819359"
  },
  {
    "text": "cost is happiness credits if you choose to not interact with us there are no imposters in our slack everyone is",
    "start": "3819359",
    "end": "3825880"
  },
  {
    "text": "welcome huge thanks to our partners fle launch Darkly and Leno thank you break",
    "start": "3825880",
    "end": "3831079"
  },
  {
    "text": "mon cylinder for all our awesome needs that's it for this week see you next week",
    "start": "3831079",
    "end": "3836279"
  },
  {
    "text": "the last thing that I want to say is that I'm really excited about our next Kaiser episode 40 Jared has been hard at",
    "start": "3836279",
    "end": "3843240"
  },
  {
    "text": "work and made what I think is the most significant Improvement to change.com since we switched to Phoenix 6 years ago",
    "start": "3843240",
    "end": "3850839"
  },
  {
    "text": "pull request 400 is the [Music]",
    "start": "3850839",
    "end": "3861319"
  },
  {
    "text": "spoiler",
    "start": "3861319",
    "end": "3864319"
  }
]