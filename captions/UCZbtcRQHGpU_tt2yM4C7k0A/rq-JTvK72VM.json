[
  {
    "text": "bandwith for Chang log is provided by fastly learn more at fastly.com we move",
    "start": "80",
    "end": "6040"
  },
  {
    "text": "fast and fix things here at changelog because of rollbar check them out at rar.com and we're hosted on Leno servers",
    "start": "6040",
    "end": "12799"
  },
  {
    "text": "head to lin.com changelog this episode of the change log",
    "start": "12799",
    "end": "17840"
  },
  {
    "text": "is brought to you by hired one thing people hate doing is searching for a new job it's so painful to search through",
    "start": "17840",
    "end": "25000"
  },
  {
    "text": "open positions on every job board Under the Sun the process to find a new job",
    "start": "25000",
    "end": "30039"
  },
  {
    "text": "job is such a mess if only there was an easier way well I'm here to tell you",
    "start": "30039",
    "end": "35600"
  },
  {
    "text": "that there is our friends at hired have made it so companies send you offers with salary benefits and even Equity",
    "start": "35600",
    "end": "41520"
  },
  {
    "text": "upfront all you have to do is answer a few questions to Showcase who you are and what type of job you're looking for",
    "start": "41520",
    "end": "47640"
  },
  {
    "text": "they work with more than 6,000 companies from startups to large publicly traded",
    "start": "47640",
    "end": "52760"
  },
  {
    "text": "companies in 14 major Tech hubs in North America and Europe you get to see all of",
    "start": "52760",
    "end": "59199"
  },
  {
    "text": "your interview requests you can accept reject or make changes to their offer even before you talk with anyone and",
    "start": "59199",
    "end": "65400"
  },
  {
    "text": "here's the kicker it's totally free this isn't going to cost you a thing it's not like you have to go there and spend",
    "start": "65400",
    "end": "70479"
  },
  {
    "text": "money to get this opportunity and if you get a job through HED they're even going to give you a bonus it's normally $300",
    "start": "70479",
    "end": "76640"
  },
  {
    "text": "but since you're a listener of the change log they're going to give you $600 instead even if you're not looking",
    "start": "76640",
    "end": "82840"
  },
  {
    "text": "for a job you can refer a friend and hired will send you a check for",
    "start": "82840",
    "end": "88118"
  },
  {
    "text": "$1,337 they accept the job as you can see hired makes it way too easy get started at hired.com",
    "start": "88840",
    "end": "96700"
  },
  {
    "text": "[Music]",
    "start": "96700",
    "end": "99849"
  },
  {
    "text": "changelog hello everyone and welcome to another episode of the change log Jared goes solo on this one to talk with",
    "start": "104320",
    "end": "110200"
  },
  {
    "text": "Richard Feldman they chat about the growing Elm Community some pretty cool asset optimization features built into",
    "start": "110200",
    "end": "116000"
  },
  {
    "text": "Elm 0.19 nor Ring's first production runtime and the biggest blockers to",
    "start": "116000",
    "end": "121759"
  },
  {
    "text": "folks adopting [Music]",
    "start": "121759",
    "end": "127910"
  },
  {
    "text": "Elm so Richard it's been almost well just past two years since we first had",
    "start": "128520",
    "end": "133560"
  },
  {
    "text": "you and Evan on the show to tell us about Elm and now we're here to catch up hear what's new and uh learn some more",
    "start": "133560",
    "end": "139920"
  },
  {
    "text": "so first of all welcome back yeah great to be back so 2 years is a long time in Internet years I'm assuming Elm has",
    "start": "139920",
    "end": "146200"
  },
  {
    "text": "leaped forward uh it's still out there it's still popular people still talk about it I still see people retweeting",
    "start": "146200",
    "end": "153040"
  },
  {
    "text": "uh things that you're saying about Elm so before we get into the catchup why don't you give the elevator pitch what",
    "start": "153040",
    "end": "158080"
  },
  {
    "text": "Elm is and what you use it for yeah sure um so Elm is a programming language for building web apps uh it compiles to",
    "start": "158080",
    "end": "165159"
  },
  {
    "text": "JavaScript um people often consider it sort of an alternative to JavaScript Frameworks because in addition to being",
    "start": "165159",
    "end": "171599"
  },
  {
    "text": "a programming language it also comes with enough tools out the box to build an entire web app um so we don't really",
    "start": "171599",
    "end": "177800"
  },
  {
    "text": "have Frameworks in Elm it's sort of like the the language provides enough that you don't need a framework and so I work",
    "start": "177800",
    "end": "183799"
  },
  {
    "text": "at no red ink um we make tools for English teachers and basically uh our",
    "start": "183799",
    "end": "188840"
  },
  {
    "text": "entire front end just about I guess we have some Legacy react stuff from back in the day but um pretty much everything",
    "start": "188840",
    "end": "195720"
  },
  {
    "text": "is in Elm and it's about 250,000 lines of code uh our first commit was in 2015",
    "start": "195720",
    "end": "201599"
  },
  {
    "text": "so it's been somewhere between 3 and four years um we've been doing it in production basically everybody who works",
    "start": "201599",
    "end": "206640"
  },
  {
    "text": "on the front end writes Helm fulltime it's been really great um some of the stuff that's cool about Elm is uh one",
    "start": "206640",
    "end": "213239"
  },
  {
    "text": "it's it's really really reliable and easy to maintain um it has a really amazing like friendly helpful compiler",
    "start": "213239",
    "end": "220360"
  },
  {
    "text": "um with really nice error messages that kind of tell you about problems before they happen to end users and um as a",
    "start": "220360",
    "end": "226159"
  },
  {
    "text": "consequence of that I used to be able to say that we'd had zero runtime exceptions in the entire time we'd had",
    "start": "226159",
    "end": "232680"
  },
  {
    "text": "Elm deployed however unfortunately last year it happened we finally yeah so now",
    "start": "232680",
    "end": "240079"
  },
  {
    "text": "I have this graph that I like to show which is like CU we we have a logging system that tells us if anything crashes",
    "start": "240079",
    "end": "245799"
  },
  {
    "text": "and so now the chart is like 60,000 JavaScript runtime exceptions like from our JS code and then like it's it's not",
    "start": "245799",
    "end": "253760"
  },
  {
    "text": "zero but it's zero pixels on the graph because right uh so it is possible it",
    "start": "253760",
    "end": "259479"
  },
  {
    "text": "can it can technically happen what happened well it's it's actually a funny",
    "start": "259479",
    "end": "264520"
  },
  {
    "text": "segue into Elm 0.19 it's a thing that is no longer possible in Elm 19 so that okay the root cause there basically",
    "start": "264520",
    "end": "271520"
  },
  {
    "text": "there was a function called debug. crash and it really did what it says on the tit if you call it sounds like you call",
    "start": "271520",
    "end": "277600"
  },
  {
    "text": "that in production you know it's funny you should mention that CU yeah you shouldn't call that in",
    "start": "277600",
    "end": "283039"
  },
  {
    "text": "production um but we did and uh sure enough it got run and then it crashed um",
    "start": "283039",
    "end": "288240"
  },
  {
    "text": "so in Elm 19 there's actually uh when you run an optimized build there's a new compiler flag called Das Das optimize",
    "start": "288240",
    "end": "294759"
  },
  {
    "text": "which I'm sure we will get into because that's one of the sort of banner features of the release um when you run",
    "start": "294759",
    "end": "300080"
  },
  {
    "text": "that one of the things that it does is it's it it says hey uh you're still using some debug functions um take those",
    "start": "300080",
    "end": "306240"
  },
  {
    "text": "out before building for production so that would would have prevented us from having any runtime exceptions but",
    "start": "306240",
    "end": "312360"
  },
  {
    "text": "unfortunately that option didn't exist back then so we we blemished our our previously unblemished record",
    "start": "312360",
    "end": "319639"
  },
  {
    "text": "but you know it's funny because when I when I like you know we found out about it and I I tweeted about it um that got",
    "start": "319639",
    "end": "326680"
  },
  {
    "text": "like way more retweets and and likes than than my previous comments that hey",
    "start": "326680",
    "end": "331759"
  },
  {
    "text": "it's still been you know this many months or this many years without any runtime exceptions and I have this",
    "start": "331759",
    "end": "336880"
  },
  {
    "text": "theory that maybe it's more credible if you say it's been like you know a very small number instead of zero because",
    "start": "336880",
    "end": "345000"
  },
  {
    "text": "that's right I guess people kind of Wonder well maybe you just don't have your logging set up right um but we did",
    "start": "345000",
    "end": "350759"
  },
  {
    "text": "well like even Superman has his Kryptonite you know like zero is just it's almost unbelievable because it's",
    "start": "350759",
    "end": "357440"
  },
  {
    "text": "it's statistically like I mean but then you're still in a blip but you know it shows it shows that you know even even",
    "start": "357440",
    "end": "364280"
  },
  {
    "text": "Elm and no red ink are humans as well abely they're not perfect yeah no we we very much are not",
    "start": "364280",
    "end": "372080"
  },
  {
    "text": "well let's talk a little bit about uh the company so I I I mention no readed in often because there are a handful of",
    "start": "372080",
    "end": "379720"
  },
  {
    "text": "businesses who have done what you all have done in hiring Evan and allowing him to work on Elm and I like to just",
    "start": "379720",
    "end": "385919"
  },
  {
    "text": "promote that activity um another one that comes to mine is shop ify uh which",
    "start": "385919",
    "end": "390960"
  },
  {
    "text": "hires Sean Griffin to work full-time on Rails and I think they're hiring other such positions like um to fill out even",
    "start": "390960",
    "end": "397720"
  },
  {
    "text": "more of their infrastructure team docyard hired Chris McCord to work on Phoenix and it's like his job is to work",
    "start": "397720",
    "end": "403280"
  },
  {
    "text": "on Phoenix and that's something that they believe in investing in so uh just curious from the business end and from",
    "start": "403280",
    "end": "408520"
  },
  {
    "text": "your perspective like what it's been like having Evan working there um the push and the poll like has he been able",
    "start": "408520",
    "end": "414759"
  },
  {
    "text": "to dedicate most of his time on Elm proper or does he get pulled into the business things help us understand how",
    "start": "414759",
    "end": "421560"
  },
  {
    "text": "that's going so it's in Evans contract that he only works on Elm uh he's never so we hired him in January",
    "start": "421560",
    "end": "428840"
  },
  {
    "text": "2016 um and he's never done anything like directly for the product um so the",
    "start": "428840",
    "end": "434840"
  },
  {
    "text": "product is is basically it's a web application for for teachers to help teach their students English um and more",
    "start": "434840",
    "end": "441000"
  },
  {
    "text": "specifically writing um and uh Evan basically is is really just 100% open",
    "start": "441000",
    "end": "447000"
  },
  {
    "text": "source engineer he just works on Elm um and my my boss I full credit to him it",
    "start": "447000",
    "end": "452520"
  },
  {
    "text": "was his idea um to to to see if we could hire Evan um basically what he said was",
    "start": "452520",
    "end": "458599"
  },
  {
    "text": "you know to Evan hey the reason we want to hire you is that elm's been really great for us and we don't want to mess",
    "start": "458599",
    "end": "464919"
  },
  {
    "text": "with the formula we want you to keep doing what you're doing we just want to be kind of more plugged into it um so",
    "start": "464919",
    "end": "471919"
  },
  {
    "text": "yeah I mean uh he he basically has you know complete autonomy to take Elm in whatever Direction he thinks is best and",
    "start": "471919",
    "end": "478440"
  },
  {
    "text": "we trust his judgment because that's what's led us to embrace it in the first place so yeah I don't know I I guess",
    "start": "478440",
    "end": "484199"
  },
  {
    "text": "it's we're aware that that's not a common thing for a company R size so for context we have I think it's 26",
    "start": "484199",
    "end": "489879"
  },
  {
    "text": "Engineers now um this is probably a good time to mention that we're hiring so if you want to come work with me and Evan",
    "start": "489879",
    "end": "496599"
  },
  {
    "text": "uh on building stuff for teachers um we're super remote friendly uh I work remotely from Philadelphia Evan works",
    "start": "496599",
    "end": "503039"
  },
  {
    "text": "from Boston um the headquarters are in San Francisco but we we go anywhere from West Coast Pacific to central European",
    "start": "503039",
    "end": "509400"
  },
  {
    "text": "time as far as time zones go um so the 26 Engineers are are pretty widely distributed across that um and and the",
    "start": "509400",
    "end": "517279"
  },
  {
    "text": "overall company is I think at 67 I want to say something like that like between 65 70 people um and uh yeah so for a",
    "start": "517279",
    "end": "525800"
  },
  {
    "text": "company RS siiz to hire somebody to 100% work on open source stuff I I guess is pretty unusual um but like I said we",
    "start": "525800",
    "end": "532320"
  },
  {
    "text": "really wanted to sort of keep the good thing going and to you know not mess with the formula that has brought us so",
    "start": "532320",
    "end": "538560"
  },
  {
    "text": "many technical benefits yeah Elma has been much U praised for its technical benefits I'm curious about the community",
    "start": "538560",
    "end": "544920"
  },
  {
    "text": "so it's been two years since we've talked and we like to you know keep our thumb on the pulse of like you know which direction things are moving and",
    "start": "544920",
    "end": "551480"
  },
  {
    "text": "anytime you have a project or a piece of software which uh has technical prowess",
    "start": "551480",
    "end": "557720"
  },
  {
    "text": "you always wonder will it catch on will it have a a robust Community will there be people who adopt it and so like I",
    "start": "557720",
    "end": "564200"
  },
  {
    "text": "said we're we're here two years later and it's still going but curious from your perspective uh how much adoption",
    "start": "564200",
    "end": "569680"
  },
  {
    "text": "Elm has gained and how much the community has really built out around Evan and around your work yeah it's a",
    "start": "569680",
    "end": "575560"
  },
  {
    "text": "great question um so first of all I think uh the biggest change that we've seen in the past year um so we started",
    "start": "575560",
    "end": "582720"
  },
  {
    "text": "doing this state of elm survey and so comparing 2017 to 2018 um the biggest",
    "start": "582720",
    "end": "588880"
  },
  {
    "text": "change that we saw was actually more people using Elm on teams like at work",
    "start": "588880",
    "end": "594000"
  },
  {
    "text": "rather than as individuals as hobbyists um so in 2017 it was something like 18%",
    "start": "594000",
    "end": "600320"
  },
  {
    "text": "of survey respondents said that they were using Elm at work and 2018 it was",
    "start": "600320",
    "end": "606480"
  },
  {
    "text": "like 40% so more than double um which was really fantastic because one of the",
    "start": "606480",
    "end": "613200"
  },
  {
    "text": "you know concerns with a a project like Elm is it's like hey this is a new programming language obviously that's a",
    "start": "613200",
    "end": "618399"
  },
  {
    "text": "bigger you know barrier to a lot of teams trying to adopt it than it is to say we're a library or were a framework",
    "start": "618399",
    "end": "625200"
  },
  {
    "text": "um and so there was always that kind of question where it's like hey even if this is really great even if it has all these benefits is that going to be",
    "start": "625200",
    "end": "631279"
  },
  {
    "text": "something that teams are just unwilling to to give a real shot to um and it turns out that that the answer seems to",
    "start": "631279",
    "end": "637880"
  },
  {
    "text": "be actually they are willing to give it a shot and that's that's really changing um so as far as absolute growth numbers",
    "start": "637880",
    "end": "645240"
  },
  {
    "text": "uh we don't really have a great way to measure that in part because um around the time of gdpr we were like you know",
    "start": "645240",
    "end": "651760"
  },
  {
    "text": "we could do a bunch of stuff to make the website compliant with cookies and whatnot or we could just stop tracking visits and we just decided to stop",
    "start": "651760",
    "end": "658000"
  },
  {
    "text": "tracking visits so we don't really have even like a bell weather of you could you could have just blocked all of",
    "start": "658000",
    "end": "663800"
  },
  {
    "text": "Europe we've seen a few companies doing that as well no I mean elm's we El's really big in Europe the biggest L",
    "start": "663800",
    "end": "669760"
  },
  {
    "text": "Meetup I ever went to was in London it was like a 100 people and uh Oslo apparently is just like a hot bit of elm",
    "start": "669760",
    "end": "676800"
  },
  {
    "text": "activ Oso Norway um there's just like a bunch of there there are multiple Elm Consulting companies um there's a bunch",
    "start": "676800",
    "end": "682720"
  },
  {
    "text": "of companies using Elm you know to build their products uh so I think the idea of just like ah we'll just ignore Europe",
    "start": "682720",
    "end": "689200"
  },
  {
    "text": "but it would be a complete non-starter for us yeah it's interesting you find so much growth of elm inside of Enterprise",
    "start": "689200",
    "end": "696360"
  },
  {
    "text": "and inside of the workplace seems like small new Niche languages start off at",
    "start": "696360",
    "end": "702240"
  },
  {
    "text": "least uh many of that I'm thinking of in the hobbyist realm you know you D people",
    "start": "702240",
    "end": "707519"
  },
  {
    "text": "tinkering trying it out in their own time and then maybe it starts to get penetration as they see value or as they",
    "start": "707519",
    "end": "713200"
  },
  {
    "text": "sneak it into their organizations often what do you think is the the selling point for Elm that's getting so many",
    "start": "713200",
    "end": "719440"
  },
  {
    "text": "businesses to hop on is it that is it that example the the one runtime error I was going to say the zero runtime errors",
    "start": "719440",
    "end": "725639"
  },
  {
    "text": "the very few runtime errors is that is that what gets people to really dive in and try it on you know on work time so",
    "start": "725639",
    "end": "731639"
  },
  {
    "text": "that's that's a great question um I want to go back a step though and like just point out that I think you know Elm like",
    "start": "731639",
    "end": "737639"
  },
  {
    "text": "we we've gotten like definitely increasing adoption over time but I can't say elm's like a runaway smash success it's not like on the level of",
    "start": "737639",
    "end": "744880"
  },
  {
    "text": "like a react or an angular you know something like that that um I think Elm is like I like to say we've graduated",
    "start": "744880",
    "end": "751839"
  },
  {
    "text": "from obscure to Niche um where it's it's something that you know like uh a good",
    "start": "751839",
    "end": "757120"
  },
  {
    "text": "number of people have heard of but a much smaller number of people have actually tried um and an even smaller number of people are actually using it",
    "start": "757120",
    "end": "763560"
  },
  {
    "text": "professionally so um I think like you know that's been a really positive Improvement but I can't say that we're",
    "start": "763560",
    "end": "769600"
  },
  {
    "text": "there yet like Evan gave this talk a couple years ago called let's be mainstream I don't think I can say that",
    "start": "769600",
    "end": "775760"
  },
  {
    "text": "um Elm is mainstream yet in terms of ad option having said that Evan also gave a",
    "start": "775760",
    "end": "781000"
  },
  {
    "text": "pretty awesome talk about sort of like what are elm's goals like what does success look like and one of the things he talked about is actually getting back",
    "start": "781000",
    "end": "787720"
  },
  {
    "text": "to your point about Community the conclusion of the talk was basically let's try to make a really great Community where everybody wants to help",
    "start": "787720",
    "end": "794120"
  },
  {
    "text": "each other build awesome things and not worry so much about adoption or you know",
    "start": "794120",
    "end": "800279"
  },
  {
    "text": "Hacker News or stars on GitHub and just kind of let those things fall out of having a really happy successful",
    "start": "800279",
    "end": "806320"
  },
  {
    "text": "functioning Community where people are happy um so that's been kind of the the bigger Focus um for like there are",
    "start": "806320",
    "end": "813079"
  },
  {
    "text": "definitely some things we could do that could you know sacrifice elm's long-term goals um for the sake of like driving",
    "start": "813079",
    "end": "820480"
  },
  {
    "text": "adoption in the short term and we just kind of said no we don't want to do that um we'd rather just let it grow organically at whatever Pace that is um",
    "start": "820480",
    "end": "827920"
  },
  {
    "text": "and so far you know we've all been pretty happy with that outcome uh I I have to say it does benefit companies",
    "start": "827920",
    "end": "835000"
  },
  {
    "text": "who do adopt Elm for now because the result of that strategy has been intentionally or not which I don't think",
    "start": "835000",
    "end": "841680"
  },
  {
    "text": "it has been intentional since we haven't really talked about it on the core team um but uh it does mean that there's",
    "start": "841680",
    "end": "848000"
  },
  {
    "text": "actually a pretty substantial hiring benefit to companies that adopt it um so we have seen this and other companies",
    "start": "848000",
    "end": "854000"
  },
  {
    "text": "have seen this that basically there's just more Elm developers out there like people who want to use Elm at work than",
    "start": "854000",
    "end": "860199"
  },
  {
    "text": "there are companies who have Elm positions which means that it's actually paradoxically easier to hire highquality",
    "start": "860199",
    "end": "866800"
  },
  {
    "text": "Elm developers right now than it is to hire high quality JavaScript developers because although there are many more",
    "start": "866800",
    "end": "872759"
  },
  {
    "text": "JavaScript developers in the world than there are Elm developers there is an even bigger proportion of JavaScript job",
    "start": "872759",
    "end": "878240"
  },
  {
    "text": "openings that they are out there choosing from um so it's sort of like you you get to be a bigger fish in a",
    "start": "878240",
    "end": "883759"
  },
  {
    "text": "smaller Pond by being one of the few companies that's uh offering Elm jobs and that's been one of the biggest",
    "start": "883759",
    "end": "889959"
  },
  {
    "text": "benefits to us outside the technical realm um has just been hiring we like honestly the number one thing that we",
    "start": "889959",
    "end": "896839"
  },
  {
    "text": "get on our cover letters for like why the person applied like they all say the word Elm like it's a selling point for",
    "start": "896839",
    "end": "903040"
  },
  {
    "text": "basically everybody who who applies for any kind of front end or full stack position um to the point where we've",
    "start": "903040",
    "end": "909399"
  },
  {
    "text": "actually transitioned like when I joined the company which was almost five years ago now um we had a really tough time",
    "start": "909399",
    "end": "915720"
  },
  {
    "text": "hiring front-end Engineers uh we we were able to get backend and some full stack applicants but frontend was just the",
    "start": "915720",
    "end": "921600"
  },
  {
    "text": "well was totally dry until we started using Elm and now it's completely reversed where we now have uh much",
    "start": "921600",
    "end": "928839"
  },
  {
    "text": "harder time finding back-end people than front-end people because we just get so many applicants who are interested in using Elm we even get some backend",
    "start": "928839",
    "end": "935360"
  },
  {
    "text": "people who are interested in using Elm they're like hey you know I I'm a backend engineer but I'm actually kind of curious about this Elm thing and",
    "start": "935360",
    "end": "941319"
  },
  {
    "text": "that's what got me interested in your job position in the first place I'd like to kind of do a little bit of elm stuff even if I'm mainly on the back end it's",
    "start": "941319",
    "end": "947480"
  },
  {
    "text": "pretty cool that's interesting it makes me think of kind of on a different angle of the same idea not only is it easier",
    "start": "947480",
    "end": "953880"
  },
  {
    "text": "to hire because there's less Enterprises that are hiring in Elm but there's also Al somewhat of a relationship between a",
    "start": "953880",
    "end": "962519"
  },
  {
    "text": "programmer who will learn a new thing on their own and who's like diving into",
    "start": "962519",
    "end": "967560"
  },
  {
    "text": "these niches because they see the technical merits of a language and the quality of that programmer so it reminds",
    "start": "967560",
    "end": "972839"
  },
  {
    "text": "me of um actually a Paul Graham essay from all the way back in 2004 have you heard of this one the python Parx",
    "start": "972839",
    "end": "978680"
  },
  {
    "text": "Paradox yep yeah you got to put yourself in the time of 2004 but his point was",
    "start": "978680",
    "end": "984079"
  },
  {
    "text": "that uh python programmers well let me I just have it pulled up here let me read a little bit so he says in a recent talk",
    "start": "984079",
    "end": "989480"
  },
  {
    "text": "I said something that upset a lot of people that you could get smarter programmers to work on a python project",
    "start": "989480",
    "end": "994600"
  },
  {
    "text": "than you could to work on a Java project of course that would upset a lot of people right he said I didn't mean by",
    "start": "994600",
    "end": "1001519"
  },
  {
    "text": "this that Java programmers are dumb I meant that python programmers are smart it's a lot of work to learn a new",
    "start": "1001519",
    "end": "1007160"
  },
  {
    "text": "programming language and people don't Learn Python because it will get them a job they learn it because they genuinely like to program and aren't satisfied",
    "start": "1007160",
    "end": "1014120"
  },
  {
    "text": "with languages they already know and so that's that python Paradox that he's talking about you no longer applies to",
    "start": "1014120",
    "end": "1020759"
  },
  {
    "text": "python right cuz that's has gone mainstream you can definitely get a good job learning python but it does apply I",
    "start": "1020759",
    "end": "1026558"
  },
  {
    "text": "think to Niche languages and the kind of programmers that will go out there and teach themselves or dedicate hobby time",
    "start": "1026559",
    "end": "1032880"
  },
  {
    "text": "they're usually pretty good programmers so um kind of works both sides yeah I think it definitely correlates with a",
    "start": "1032880",
    "end": "1038640"
  },
  {
    "text": "passion for programming right I mean like this is something my my wife likes to say is you know she she'll point out",
    "start": "1038640",
    "end": "1045798"
  },
  {
    "text": "that your hobby is also your work like when I'm not working on mying stuff my",
    "start": "1045799",
    "end": "1052280"
  },
  {
    "text": "hobby is like doing more programming stuff and like running the Philadelphia L Meetup and what not right Fair yeah",
    "start": "1052280",
    "end": "1059799"
  },
  {
    "text": "and and I think uh you know that's I think it's important that our industry not have that as a requirement like that",
    "start": "1059799",
    "end": "1066120"
  },
  {
    "text": "people need to do the same thing in their free time that they do in their work time but of course it's it's inescapable that it's an advantage I",
    "start": "1066120",
    "end": "1072400"
  },
  {
    "text": "mean if you're spending more time engaging with your craft then you're just on average going to be better",
    "start": "1072400",
    "end": "1077720"
  },
  {
    "text": "otherwise that would be kind of a waste of time um and I mean as uh as much as I",
    "start": "1077720",
    "end": "1082960"
  },
  {
    "text": "don't want that to become a requirement I also appreciate the fact that companies benefit from that yeah it's",
    "start": "1082960",
    "end": "1088559"
  },
  {
    "text": "it's it's fortunate and yet unfortunate you know it's one of those things yeah as long as it doesn't become a requirement I think it's",
    "start": "1088559",
    "end": "1095050"
  },
  {
    "text": "[Music]",
    "start": "1095050",
    "end": "1103239"
  },
  {
    "text": "[Music] okay [Music] this episode is sponsored by our friends",
    "start": "1105310",
    "end": "1111840"
  },
  {
    "text": "at rollbar how important is it for you to catch errors before your users do what if you could resolve those errors",
    "start": "1111840",
    "end": "1117679"
  },
  {
    "text": "in minutes and then deploy with confidence that's exactly what robar enables for software teams one of the",
    "start": "1117679",
    "end": "1123039"
  },
  {
    "text": "most frustrating things we all deal with is errors most teams either a rely on their users to report errors or B use",
    "start": "1123039",
    "end": "1130320"
  },
  {
    "text": "log files and lists of Errors to debug problems that's such a waste of time instantly know what's broken and why",
    "start": "1130320",
    "end": "1136919"
  },
  {
    "text": "with rollbar reduce time wasted debugging and automatically capture errors alongside Rich diagnostic data to",
    "start": "1136919",
    "end": "1143720"
  },
  {
    "text": "help you defeat impactful errors you can integrate rollar into your existing workflow it integrates with your source",
    "start": "1143720",
    "end": "1149400"
  },
  {
    "text": "code repository and deployment system to give you deep insights into exactly what changes caused each error give rollbar a",
    "start": "1149400",
    "end": "1156280"
  },
  {
    "text": "try today at no cost to you no credit card is required our listeners get access to the bootstrap plan with a",
    "start": "1156280",
    "end": "1162320"
  },
  {
    "text": "100,000 events for free for 90 days to get started head to rar.com",
    "start": "1162320",
    "end": "1168280"
  },
  {
    "text": "change [Music]",
    "start": "1168280",
    "end": "1174349"
  },
  {
    "text": "lot so Richard as you said uh Elm is moving from obscure to Niche and uh its",
    "start": "1183600",
    "end": "1190000"
  },
  {
    "text": "impact has been I would say more than Niche and more than obscure because uh We've well documented on this show and",
    "start": "1190000",
    "end": "1195880"
  },
  {
    "text": "one of the things I love about the change log and why we try to stay as polyglot as we can even though that",
    "start": "1195880",
    "end": "1201600"
  },
  {
    "text": "means we dive into things that sometimes we just can't quite swim that deep is because uh the proliferation and the",
    "start": "1201600",
    "end": "1208559"
  },
  {
    "text": "moving of ideas across different camps and different languages and different communities is hugely valuable and I",
    "start": "1208559",
    "end": "1215480"
  },
  {
    "text": "think two years ago when you and Evan were on I asked Evan about the feeling he gets when uh some of his great ideas",
    "start": "1215480",
    "end": "1221559"
  },
  {
    "text": "and some of the things that Elm has really paved the way for thinking about the elm architecture thinking about the",
    "start": "1221559",
    "end": "1227840"
  },
  {
    "text": "just niceties of the compiler and these ideas have either been you know borrowed or from the great artists have been",
    "start": "1227840",
    "end": "1233440"
  },
  {
    "text": "stolen and taken to other languages other projects other Frameworks um really a neat thing that",
    "start": "1233440",
    "end": "1241120"
  },
  {
    "text": "has happened but that being said somebody who knows JavaScript today and doesn't know Elm it can benefit from a",
    "start": "1241120",
    "end": "1246919"
  },
  {
    "text": "lot of the stuff that Elm brought to the table but what are still some reasons in 2018 uh to give it a try even though a",
    "start": "1246919",
    "end": "1253720"
  },
  {
    "text": "lot of the great ideas have been you know moved around to other places yeah so it's it's funny that that you mention",
    "start": "1253720",
    "end": "1259400"
  },
  {
    "text": "that because um from my perspective I have a I've developed sort of a strange",
    "start": "1259400",
    "end": "1264880"
  },
  {
    "text": "relationship with the idea of um elm's ideas kind of proliferating in the world",
    "start": "1264880",
    "end": "1270200"
  },
  {
    "text": "so the the big one is the elm architecture which essentially is I think um Redux is is very similar to the",
    "start": "1270200",
    "end": "1276240"
  },
  {
    "text": "elm architecture in a lot of ways and uh and that's sort of like the biggest way to do application State Management uh in",
    "start": "1276240",
    "end": "1283480"
  },
  {
    "text": "the react ecosystem certainly and even in like angular and view there's sort of like ways can opt into that which some",
    "start": "1283480",
    "end": "1289360"
  },
  {
    "text": "people do um whereas an Elm it's sort of a foundational concept everything's built on top of that it's the only way",
    "start": "1289360",
    "end": "1295080"
  },
  {
    "text": "to manage App State and uh there's actually no other source of global State at all um and one of the things that's",
    "start": "1295080",
    "end": "1303080"
  },
  {
    "text": "interesting to me is that if I talk to a JavaScript developer um it's pretty common like who's never used Elm it's",
    "start": "1303080",
    "end": "1309320"
  },
  {
    "text": "pretty common that they will say uh yeah like the elm architecture seems really cool and I I appreciate you know some of",
    "start": "1309320",
    "end": "1315279"
  },
  {
    "text": "the the Simplicity that it brings um to organizing your App State and if I talk",
    "start": "1315279",
    "end": "1320320"
  },
  {
    "text": "to Elm developers like who have been doing Elm for even a couple of months nobody mentions that it's all other",
    "start": "1320320",
    "end": "1327240"
  },
  {
    "text": "stuff that's just sort of like the table stakes in Elm and and because it's this kind of uh foundational primitive I the",
    "start": "1327240",
    "end": "1333880"
  },
  {
    "text": "the stuff that people talk about are things like I really love the compiler error messages or I love how everything",
    "start": "1333880",
    "end": "1339760"
  },
  {
    "text": "in the ecosystem just works well together or now with Elm 0.19 two of the",
    "start": "1339760",
    "end": "1345720"
  },
  {
    "text": "things that people commonly mention are one my project builds so fast because",
    "start": "1345720",
    "end": "1350760"
  },
  {
    "text": "there was a big speed up in the compiler um Evan basically rewrote all of the",
    "start": "1350760",
    "end": "1355799"
  },
  {
    "text": "like he wrote rewrote the parser and then he rewrote the exhaustiveness Checker and the type Checker and basically by the time he was done pretty",
    "start": "1355799",
    "end": "1362760"
  },
  {
    "text": "much all the insights had been Rewritten um for Speed and uh the result is that somebody",
    "start": "1362760",
    "end": "1369440"
  },
  {
    "text": "posted um they had like a 50,000 just shy 50,000 line of code um Elm project",
    "start": "1369440",
    "end": "1375640"
  },
  {
    "text": "with something over a 100 files and and so forth and the entire thing from scratch building it plus all of its",
    "start": "1375640",
    "end": "1382799"
  },
  {
    "text": "dependencies like on a fresh git checkout um was like under two seconds",
    "start": "1382799",
    "end": "1388200"
  },
  {
    "text": "and that's like compiling it type-checking it uh spitting out the compiled JavaScript like everything",
    "start": "1388200",
    "end": "1394480"
  },
  {
    "text": "start to finish was under two and that's not even an incremental compile which of course they're much faster um so that's",
    "start": "1394480",
    "end": "1400480"
  },
  {
    "text": "like you know I think about like how many people's you know Babble which is Javascript to JavaScript uh builds you",
    "start": "1400480",
    "end": "1406960"
  },
  {
    "text": "know at that scale are running in under two seconds for a fresh build let alone for an incremental build and and that",
    "start": "1406960",
    "end": "1413279"
  },
  {
    "text": "sort of you know becomes a selling point um becomes something that people are excited about and so I think about it in",
    "start": "1413279",
    "end": "1420600"
  },
  {
    "text": "terms of two things um that are really exciting to me about El it's one is the",
    "start": "1420600",
    "end": "1425720"
  },
  {
    "text": "tools so that is like the compiler and and the the tooling around it like the the package manager um and the other one",
    "start": "1425720",
    "end": "1431400"
  },
  {
    "text": "is the ecosystem where basically everything is built in terms of elm and I don't really have to worry about",
    "start": "1431400",
    "end": "1438559"
  },
  {
    "text": "compatibility like I did in the JavaScript world I I I basically whenever I install a new package I kind",
    "start": "1438559",
    "end": "1444240"
  },
  {
    "text": "of expect it to just work immediately I'll say install it and then I expect to get the same experience I would get as",
    "start": "1444240",
    "end": "1449919"
  },
  {
    "text": "if I were just using a new core library that that's shipped with the language it's sort of that level of smoothness um",
    "start": "1449919",
    "end": "1457640"
  },
  {
    "text": "and you know I get well so asset size is I guess another uh another thing we should talk about because that's that's",
    "start": "1457640",
    "end": "1464080"
  },
  {
    "text": "maybe the biggest selling point of elm 0.19 um but it's relatively new so I",
    "start": "1464080",
    "end": "1469200"
  },
  {
    "text": "don't hear a lot of people talking about it yet well it was news to me just just announced the blog post which is linked",
    "start": "1469200",
    "end": "1474520"
  },
  {
    "text": "in our show notes August 21st so we're recording this October 10th a couple months back but this one didn't make the",
    "start": "1474520",
    "end": "1481799"
  },
  {
    "text": "headlines uh as much as some of the other things I've seen from the mm Community even though it's a pretty big",
    "start": "1481799",
    "end": "1486840"
  },
  {
    "text": "deal especially nowadays where we're trying so hard to get the time to First paint down to as small as possible for",
    "start": "1486840",
    "end": "1493720"
  },
  {
    "text": "our web apps so that they can reach as many people as fast as they can um Elm",
    "start": "1493720",
    "end": "1499440"
  },
  {
    "text": "0.19 has made huge strides with regard to bundle size give us the details Yeah",
    "start": "1499440",
    "end": "1505200"
  },
  {
    "text": "so basically um the the comparison point that we ended up using was the uh the real world app so this is um basically a",
    "start": "1505200",
    "end": "1513159"
  },
  {
    "text": "project that's sort of designed to be uh a bigger cousin to too MVC so the basic",
    "start": "1513159",
    "end": "1519480"
  },
  {
    "text": "idea is they have uh a really detailed specification for here's how to build this it's like a medium clone it's it's",
    "start": "1519480",
    "end": "1526159"
  },
  {
    "text": "called conduit it's basically you can uh sign in sign up uh post an article",
    "start": "1526159",
    "end": "1531760"
  },
  {
    "text": "view a feed of Articles favorite articles follow authors unfollow people you can edit some settings so pretty",
    "start": "1531760",
    "end": "1537520"
  },
  {
    "text": "typical web app type stuff and um they basically have a really detailed spec",
    "start": "1537520",
    "end": "1542840"
  },
  {
    "text": "and they provide all the styles for you and they have a spec for both the front end and the back end so if you want you",
    "start": "1542840",
    "end": "1548640"
  },
  {
    "text": "can try out hey what does it look like if I'm running this application on a react front end and a Django backend or",
    "start": "1548640",
    "end": "1556799"
  },
  {
    "text": "a angular front end or with a laravel back end um and all those different",
    "start": "1556799",
    "end": "1563039"
  },
  {
    "text": "combinations that's a great idea by the way I think I remember seeing that very useful to be able to swap those in and out and just see how how it reacts right",
    "start": "1563039",
    "end": "1570159"
  },
  {
    "text": "yeah and it's a really cool project just to be able to compare like if I'm trying to see hey how would this thing be done",
    "start": "1570159",
    "end": "1575840"
  },
  {
    "text": "in you know this particular technology I want to evaluate that technology just having a you sort of substantial code",
    "start": "1575840",
    "end": "1582600"
  },
  {
    "text": "base to to look at it to say okay so I see how this thing maps to that other familiar thing you know technology I",
    "start": "1582600",
    "end": "1588200"
  },
  {
    "text": "know um so uh so we have an Elm implementation of this and one of the things that's kind of cool about this is",
    "start": "1588200",
    "end": "1594600"
  },
  {
    "text": "that these are all projects where the goal is to show best practices not to like tune to benchmarks which is always",
    "start": "1594600",
    "end": "1601679"
  },
  {
    "text": "you know a concern with bik or benchmarks is that it's like well how much of this is like actually real world",
    "start": "1601679",
    "end": "1607360"
  },
  {
    "text": "versus you know uh something that's just been kind of like tuned to do the best numbers on the Benchmark possible and",
    "start": "1607360",
    "end": "1613360"
  },
  {
    "text": "pretty much all of these are like people just built the apps to to do a good job showing like how to do things right and",
    "start": "1613360",
    "end": "1620159"
  },
  {
    "text": "um so what we saw was basically the the sort of the punchline of the uh the blog",
    "start": "1620159",
    "end": "1626080"
  },
  {
    "text": "post is that um the like react Eman angular ones have anywhere between I think it's like a 105 something a little",
    "start": "1626080",
    "end": "1633120"
  },
  {
    "text": "bit over 100 kilobytes um of uh minified and gzipped assets for this whole application um which is usually like I",
    "start": "1633120",
    "end": "1640679"
  },
  {
    "text": "don't know couple dozen uh files and so you know a bunch of dependencies and and so forth so 100K is and and I think down",
    "start": "1640679",
    "end": "1648760"
  },
  {
    "text": "to like in the 70s depending on which of those more popular Frameworks you're using um whereas the L1 the entire",
    "start": "1648760",
    "end": "1656320"
  },
  {
    "text": "compiled asset size minifi gzi is 29k which is actually just smaller than",
    "start": "1656320",
    "end": "1663240"
  },
  {
    "text": "react by itself which was a really cool result because that basically means that if you're doing a react version of this",
    "start": "1663240",
    "end": "1669679"
  },
  {
    "text": "even with the most aggressive possible code splitting you still couldn't get it down to as small as the entire L map you",
    "start": "1669679",
    "end": "1676039"
  },
  {
    "text": "know with no code splitting which which was really surprising how much of that 29 kilobytes just if you could break it",
    "start": "1676039",
    "end": "1682159"
  },
  {
    "text": "out would be application code and how much of it would be you know framework or architecture code you know even",
    "start": "1682159",
    "end": "1689200"
  },
  {
    "text": "percentages uh that's so that's that's a good question and uh it kind of gets into why it's it's hard to measure so",
    "start": "1689200",
    "end": "1695880"
  },
  {
    "text": "the reason that Elm got this to be so small is basically that what 0.9",
    "start": "1695880",
    "end": "1702039"
  },
  {
    "text": "introduces is function level dead code elimination so the way that works is uh",
    "start": "1702039",
    "end": "1707679"
  },
  {
    "text": "so ordinarily you have your application you install some packages that you depend on and by default uh in the old",
    "start": "1707679",
    "end": "1714399"
  },
  {
    "text": "world you would just get absolutely everything that you installed with the package all the code in that package gets compiled into your bundle so then",
    "start": "1714399",
    "end": "1721559"
  },
  {
    "text": "you have module level deadcode elimination AKA tree shaking um which is kind of the the the Target in like the",
    "start": "1721559",
    "end": "1729080"
  },
  {
    "text": "JavaScript ecosystem is like hey if if everybody uses es6 modules then we can",
    "start": "1729080",
    "end": "1734799"
  },
  {
    "text": "get tree shaking um and that'll be great uh and so uh that's sort of one level of",
    "start": "1734799",
    "end": "1741519"
  },
  {
    "text": "dead code elimination where if you don't import a module then it gets excluded it gets stripped out of your compiled uh",
    "start": "1741519",
    "end": "1749000"
  },
  {
    "text": "asset bundle which is cool um but there's one more level than that which is function level dead code elimination",
    "start": "1749000",
    "end": "1755840"
  },
  {
    "text": "which is essentially saying I import this module this module exposes 100",
    "start": "1755840",
    "end": "1761000"
  },
  {
    "text": "functions let's say if I'm only actually calling three of those functions that's all I'm going to get in my compiled out",
    "start": "1761000",
    "end": "1767600"
  },
  {
    "text": "the other 97 just will get stripped out which means that basically it doesn't",
    "start": "1767600",
    "end": "1772799"
  },
  {
    "text": "really matter how your modules are organized anymore you can just put your functions wherever makes the most sense",
    "start": "1772799",
    "end": "1778760"
  },
  {
    "text": "organizationally and it also doesn't matter what you're importing like which modules you're importing it only matters",
    "start": "1778760",
    "end": "1783960"
  },
  {
    "text": "which functions you're actually calling those are the only ones that get used that's super cool so it does all the",
    "start": "1783960",
    "end": "1789399"
  },
  {
    "text": "transitive dependencies and stuff to figure out which functions those functions are calling and so on so you're not going to you're not going to",
    "start": "1789399",
    "end": "1794760"
  },
  {
    "text": "be missing a function at the end of the day exactly now this is really cool and it's it's one of the big reasons that um",
    "start": "1794760",
    "end": "1801240"
  },
  {
    "text": "Elm 0.19 was able to get such a small bundle size is that we you know however many dependencies we pull in doesn't",
    "start": "1801240",
    "end": "1806799"
  },
  {
    "text": "really matter how big they are all it matters is how big are the things we actually use um and the reason we're",
    "start": "1806799",
    "end": "1812120"
  },
  {
    "text": "able to do this is that Elm has its own totally separate package ecosystem from npm um so like we that that whole uh Spa",
    "start": "1812120",
    "end": "1820559"
  },
  {
    "text": "example doesn't actually use npm at all it's it's just only using LM packages",
    "start": "1820559",
    "end": "1826559"
  },
  {
    "text": "and so as a consequence of that um it means you get this systemwide dead code elimination which is you know really",
    "start": "1826559",
    "end": "1832760"
  },
  {
    "text": "great but it also means that it's kind of hard to measure like what percentage of you know this is X versus Y versus Z",
    "start": "1832760",
    "end": "1840279"
  },
  {
    "text": "because it's kind of like well what what even is elm's Baseline like how much of that and the answer is well it kind of",
    "start": "1840279",
    "end": "1846440"
  },
  {
    "text": "depends on how much of it you're using so um you know that that dead",
    "start": "1846440",
    "end": "1851640"
  },
  {
    "text": "elimination applies to sort of elm's standard libraries just as much as any package so it's it makes it pretty",
    "start": "1851640",
    "end": "1858080"
  },
  {
    "text": "tricky to measure um I guess what you could do is you could kind of like do surgery on the compiled JS and and kind",
    "start": "1858080",
    "end": "1864200"
  },
  {
    "text": "of like map things back and then like like sort of categorize all of them and say oh this came from here and this came from there but I don't think anybody's",
    "start": "1864200",
    "end": "1870639"
  },
  {
    "text": "everever tried to do that it sounds like a bunch of work yeah I was going to say one thing you could do from the other direction and say okay how much",
    "start": "1870639",
    "end": "1876240"
  },
  {
    "text": "application code do I have right how much application code have I written and assume that you're using all those",
    "start": "1876240",
    "end": "1881360"
  },
  {
    "text": "functions because why would you write app code for a demo that's unused I guess sure um and then say how is that",
    "start": "1881360",
    "end": "1887720"
  },
  {
    "text": "if I just if I just comp you know Minify it and or do whatever I maybe Elm can't",
    "start": "1887720",
    "end": "1892880"
  },
  {
    "text": "do that can't it can't just like boil this part of the world without boiling the entire thing especially with it's",
    "start": "1892880",
    "end": "1898320"
  },
  {
    "text": "checking and stuff right yeah I don't think there's a way to directly say like just compile this application code",
    "start": "1898320",
    "end": "1904159"
  },
  {
    "text": "without its dependencies because they all yeah CU it wouldn't compile exactly right it depends on those so I'm still",
    "start": "1904159",
    "end": "1910240"
  },
  {
    "text": "thinking I'm in the Minify world I still thinking just minifying all this down but it's actually compiling okay so and",
    "start": "1910240",
    "end": "1916320"
  },
  {
    "text": "and what's really cool about about that is that it's a benefit that actually gets bigger the bigger your code base is",
    "start": "1916320",
    "end": "1922440"
  },
  {
    "text": "like if you have you know an example that's like let's say 10 times the size of this application and you've got a",
    "start": "1922440",
    "end": "1927880"
  },
  {
    "text": "bunch more dependencies because I mean the the bigger your project is just naturally the more dependencies you're going to end up having as a general rule",
    "start": "1927880",
    "end": "1935360"
  },
  {
    "text": "um the more you benefit from this because each of those additional dependencies would otherwise represent all that code coming in but instead it's",
    "start": "1935360",
    "end": "1941960"
  },
  {
    "text": "like oh no we're we're just going to get uh what we actually use and the other cool thing is that um Elm shares",
    "start": "1941960",
    "end": "1947880"
  },
  {
    "text": "transitive dependencies so if I install two packages that let's say both of them depend on the I don't know uh the the",
    "start": "1947880",
    "end": "1955159"
  },
  {
    "text": "Json Library um it's going to find some version of the Json library that works with both of those packages and only",
    "start": "1955159",
    "end": "1962120"
  },
  {
    "text": "install that once so it can do the dead code elimination not only across your direct dependencies but also across your",
    "start": "1962120",
    "end": "1968080"
  },
  {
    "text": "indirect dependencies as well with just the one shared version between them so you really end up with kind of the",
    "start": "1968080",
    "end": "1974000"
  },
  {
    "text": "minimal set of uh dependencies you can get there's some other cool stuff that it does um like automatic record",
    "start": "1974000",
    "end": "1980000"
  },
  {
    "text": "renaming like field renaming um one kind of cool thing about that is uh it does",
    "start": "1980000",
    "end": "1985639"
  },
  {
    "text": "stuff where basically if you if you've got records which are kind of like JavaScript objects but simpler they don't have like prototypes or this or",
    "start": "1985639",
    "end": "1992200"
  },
  {
    "text": "anything like that and they're immutable um but basically you'll say like maybe you'll have a user record that's got",
    "start": "1992200",
    "end": "1998559"
  },
  {
    "text": "Fields like username email stuff like that um when you run El make with the",
    "start": "1998559",
    "end": "2004799"
  },
  {
    "text": "optimize flag uh what it'll do is it will actually compile those down to the smallest JavaScript field names it can",
    "start": "2004799",
    "end": "2011880"
  },
  {
    "text": "come up with so instead of username and email it'll compile them down to Like A and B um which is ordinarily not",
    "start": "2011880",
    "end": "2018559"
  },
  {
    "text": "something that's super safe for a minifier like uglify to do because you might be potentially relying on those",
    "start": "2018559",
    "end": "2025000"
  },
  {
    "text": "with like Dynamic field access using a string or variable um but in Elm we know",
    "start": "2025000",
    "end": "2030120"
  },
  {
    "text": "that that's not going to happen with these records because that's just not a feature in Elm you can't do that you can only access them with a DOT um so",
    "start": "2030120",
    "end": "2037519"
  },
  {
    "text": "because of that it's safe to rename them and one of the cool things which granted probably doesn't make a big difference in practice but which I think is really",
    "start": "2037519",
    "end": "2043919"
  },
  {
    "text": "cool um is that it actually goes through your whole program and counts usages",
    "start": "2043919",
    "end": "2049358"
  },
  {
    "text": "like how many times this field is used so that it can use all the single letter ones for the most used fields and then",
    "start": "2049359",
    "end": "2055720"
  },
  {
    "text": "when you run out of single letters then it can move into you know two letters or something like that which is just you",
    "start": "2055720",
    "end": "2061280"
  },
  {
    "text": "know like how much does that actually save in practice okay probably doesn't really matter um but it's it's a cool",
    "start": "2061280",
    "end": "2067440"
  },
  {
    "text": "example of like how much the compiler knows about your whole program we need to sit Evan down and tell him about the law of diminishing",
    "start": "2067440",
    "end": "2074960"
  },
  {
    "text": "returns I I honestly think that was one of those things where uh it was like he had to track it anyway and so he was",
    "start": "2074960",
    "end": "2081040"
  },
  {
    "text": "kind of like well how should I distribute these things yeah might as well just just count that's very cool function level dead code elimination",
    "start": "2081040",
    "end": "2087760"
  },
  {
    "text": "that's the first I've heard of that you know the next step is now line level dead code elimination so lay that",
    "start": "2087760",
    "end": "2093358"
  },
  {
    "text": "challenge out there line by line he can uh",
    "start": "2093359",
    "end": "2098680"
  },
  {
    "text": "speaking of diminishing returns I mean there are other potential optimizations out there like it it it could go even",
    "start": "2098680",
    "end": "2104400"
  },
  {
    "text": "further um by like eliminating branches of conditionals that can't possibly get run because of like you're using this",
    "start": "2104400",
    "end": "2111400"
  },
  {
    "text": "library but we know that like it's not possible for that Branch to get run however uh that's like another really",
    "start": "2111400",
    "end": "2117240"
  },
  {
    "text": "big project it's kind of a whole different level of Challenge and at this point it's like okay basically Evan put",
    "start": "2117240",
    "end": "2123079"
  },
  {
    "text": "something out there about the design for um code splitting because right now does not have like a first class code",
    "start": "2123079",
    "end": "2128880"
  },
  {
    "text": "splitting mechanism and and kind of the goal was well let's see how much the dead code elimination does for us and",
    "start": "2128880",
    "end": "2134320"
  },
  {
    "text": "then let's see if a that's something that there's actually demand for and B if there is demand let's see what",
    "start": "2134320",
    "end": "2139880"
  },
  {
    "text": "people's um you know code bases actually look like so that we can kind of design the feature that you know is going to",
    "start": "2139880",
    "end": "2145680"
  },
  {
    "text": "make sense for how their assets end up being in practice because this is kind of a whole new ball game we don't really know what it looks like to you know",
    "start": "2145680",
    "end": "2152560"
  },
  {
    "text": "maybe it turns out that actually if you try to code split along these module boundaries that you end up with actually more than",
    "start": "2152560",
    "end": "2159319"
  },
  {
    "text": "you would have before because you lose out on some of the code splitting benefits so we're going to have to see how those things look in practice before",
    "start": "2159319",
    "end": "2165720"
  },
  {
    "text": "thinking about you know even further uh investments into asset size so when you when you say code splitting you're",
    "start": "2165720",
    "end": "2171640"
  },
  {
    "text": "referring to instead of having a single bundle you'll have multiple bundles of smaller size that are kind of loaded",
    "start": "2171640",
    "end": "2177440"
  },
  {
    "text": "dynamically is that what you mean by code splitting yeah exactly sorry I I should probably Define my terms all",
    "start": "2177440",
    "end": "2182960"
  },
  {
    "text": "right yeah so code splitting and lazy loading the basic idea is uh let's say you've got a single page application so",
    "start": "2182960",
    "end": "2189119"
  },
  {
    "text": "you've got you know you're going to download one HTML file and then when the user transitions to different URLs",
    "start": "2189119",
    "end": "2195200"
  },
  {
    "text": "that's actually all going to happen on the client side you're not actually going to get a page refresh and and a flash of white on the screen um all",
    "start": "2195200",
    "end": "2201680"
  },
  {
    "text": "that's going to happen is that the the JavaScript code the compiled JavaScript code is going to go and do HTTP request",
    "start": "2201680",
    "end": "2208040"
  },
  {
    "text": "to the server saying hey give me the the data I need to render the next page and the idea behind code splitting is you're",
    "start": "2208040",
    "end": "2214520"
  },
  {
    "text": "not only going to say give me the data to to render the next page but also you're going to say give me the code to",
    "start": "2214520",
    "end": "2220119"
  },
  {
    "text": "R render the next page so that way you don't have to download let's say you've got you know you end up with like 50",
    "start": "2220119",
    "end": "2225319"
  },
  {
    "text": "pages on your um your web app you don't really want the end user to have to download all of that when they do the",
    "start": "2225319",
    "end": "2231440"
  },
  {
    "text": "first page load you'd rather have them download Just Enough compiled JavaScript to render that first page and then when",
    "start": "2231440",
    "end": "2237319"
  },
  {
    "text": "they transition to a different page um you can then say okay I'll on the Fly load the code for this new page and then",
    "start": "2237319",
    "end": "2243560"
  },
  {
    "text": "execute it so this is as applications get bigger this is something that people commonly um have demand for in the",
    "start": "2243560",
    "end": "2250000"
  },
  {
    "text": "JavaScript world that may very well turn out to be something that there's also demand for in the elm World um you know",
    "start": "2250000",
    "end": "2257520"
  },
  {
    "text": "just because why wouldn't there be um but we don't really know what the what the design constraints would be yet I",
    "start": "2257520",
    "end": "2263319"
  },
  {
    "text": "mean one of the things about performance optimization is that the bottlenecks are always where you least expect them um so",
    "start": "2263319",
    "end": "2269400"
  },
  {
    "text": "now that we have this sort of ecosystem wide function level dead code elimination what does that mean for code",
    "start": "2269400",
    "end": "2275000"
  },
  {
    "text": "splitting how does it impact it we don't really know cuz no one's really ever had it before right so now that 0.19 is out",
    "start": "2275000",
    "end": "2282599"
  },
  {
    "text": "there and you have this uh dead code elimination which sounds like be a",
    "start": "2282599",
    "end": "2287720"
  },
  {
    "text": "straightforward upgrade and then recompile would be you could you could at least test I mean have you guys tried",
    "start": "2287720",
    "end": "2293440"
  },
  {
    "text": "at no red ink and just seen your bundle size decrease from version to version or is it not that simple um it's not that",
    "start": "2293440",
    "end": "2299280"
  },
  {
    "text": "simple because we are still blocked on some of our dependencies not being updated yet um so we're very much you",
    "start": "2299280",
    "end": "2305319"
  },
  {
    "text": "don't have the goodness yet not quite yet and we're we're jealous of the companies that you know all of their dependencies have already been upgraded",
    "start": "2305319",
    "end": "2311680"
  },
  {
    "text": "and they're already you know gushing about it in Elm slack about how awesome it is you're like a you're like an",
    "start": "2311680",
    "end": "2317119"
  },
  {
    "text": "Android user on like three versions back on their OS well one version back but but you know um no I mean we're very",
    "start": "2317119",
    "end": "2323960"
  },
  {
    "text": "excited about it uh like it's it's something where we actually track you know what are our compiled like asset",
    "start": "2323960",
    "end": "2329599"
  },
  {
    "text": "sizes for each of our different routes and so we'll be able to do a pretty cool before and after I mean for us honestly",
    "start": "2329599",
    "end": "2334680"
  },
  {
    "text": "the the bigger benefit is the compile time because now you know we got a quarter million lines of elm code um you",
    "start": "2334680",
    "end": "2340040"
  },
  {
    "text": "multiply you know really fast compile time savings uh across a big enough code base that adds up to a lot of increased",
    "start": "2340040",
    "end": "2346280"
  },
  {
    "text": "developer productivity absolutely looking forward to that let's go back to the packages real quick so one of the reasons why this is possible this",
    "start": "2346280",
    "end": "2352839"
  },
  {
    "text": "function level dead code elimination like you said is because all of the packages are written in Elm on link.org",
    "start": "2352839",
    "end": "2360480"
  },
  {
    "text": "package manager um and so npm isn't even touched now one of I mean the gift and",
    "start": "2360480",
    "end": "2365960"
  },
  {
    "text": "the curse mpm is there's so much out there yeah right I mean every package",
    "start": "2365960",
    "end": "2371680"
  },
  {
    "text": "every piece of code in the universe is on npm somehow so so so when we talk about community and advantages um how",
    "start": "2371680",
    "end": "2378920"
  },
  {
    "text": "much is Elm at a disadvantage in terms of packages that developers need uh",
    "start": "2378920",
    "end": "2385280"
  },
  {
    "text": "versus npm like how I just think of that because of the limiting factor of you're you're waiting on some packages haven't",
    "start": "2385280",
    "end": "2391200"
  },
  {
    "text": "been updated yet and I wonder how big is the package ecosystem that's a good question um I don't know the exact",
    "start": "2391200",
    "end": "2397640"
  },
  {
    "text": "number of packages um but I know that npm being the biggest in the world is a lot bigger there's no doubt um so uh I I",
    "start": "2397640",
    "end": "2406359"
  },
  {
    "text": "see it in a couple different ways so one is Elm does have JavaScript interop so",
    "start": "2406359",
    "end": "2411560"
  },
  {
    "text": "if worse came to worst if I were starting a brand new project and I really needed to do you know some some there was some package on mpm that I was",
    "start": "2411560",
    "end": "2418000"
  },
  {
    "text": "like I can't live without this package um I wouldn't necessarily have to rewrite it in Elm I could probably just",
    "start": "2418000",
    "end": "2423960"
  },
  {
    "text": "do JavaScript interupt and and just get by with that um of course if I do that then you know that chunk of code doesn't",
    "start": "2423960",
    "end": "2430319"
  },
  {
    "text": "get me all of elm's guarantees all of its benefits the function level dead code elimination of course is not there",
    "start": "2430319",
    "end": "2436920"
  },
  {
    "text": "um right the only way to get that that I'm aware of in uh JavaScript is to do it with the uh Google closure compiler",
    "start": "2436920",
    "end": "2444319"
  },
  {
    "text": "um so that is like an uglify alternative um that has an advanced mode which as",
    "start": "2444319",
    "end": "2450359"
  },
  {
    "text": "long as your code abides by certain rules uh it can do function level dead code elimination",
    "start": "2450359",
    "end": "2456839"
  },
  {
    "text": "however uh in practice it seems like there isn't a lot of codebase there aren't a lot of code bases out there",
    "start": "2456839",
    "end": "2462240"
  },
  {
    "text": "that actually happen to abide by those rules such that they can use it as far as I know the only community that really",
    "start": "2462240",
    "end": "2468240"
  },
  {
    "text": "makes good use of that is the closure script Community because closure script was specifically designed to emit",
    "start": "2468240",
    "end": "2474000"
  },
  {
    "text": "JavaScript that could be used with closure compiler on advanced mode smart",
    "start": "2474000",
    "end": "2479200"
  },
  {
    "text": "yeah so uh basically I I think now closure script and now Elm are the only two communities that have the function",
    "start": "2479200",
    "end": "2485680"
  },
  {
    "text": "level dead code elimination although I think closure script tends to do more in terms of um wrapping JavaScript",
    "start": "2485680",
    "end": "2492440"
  },
  {
    "text": "libraries as opposed to sort of rebuilding them from scratch whereas definitely Elm leans a lot more towards",
    "start": "2492440",
    "end": "2499440"
  },
  {
    "text": "let's do it in Elm and then we get all the benefits so I think in practice we probably get on a percentage basis more",
    "start": "2499440",
    "end": "2505599"
  },
  {
    "text": "benefit from it uh but I think they're both capable of it so hypothetically the JavaScript ecosystem could get there but",
    "start": "2505599",
    "end": "2511680"
  },
  {
    "text": "it would require it would kind of be on an app bya basis it would require you to abide by specific constraints that a lot",
    "start": "2511680",
    "end": "2518560"
  },
  {
    "text": "of apps aren't doing out there in the wild yeah and I think a lot of this comes down to ergonomics um I have kind",
    "start": "2518560",
    "end": "2524079"
  },
  {
    "text": "of a whole series of thoughts I've been kind of flushing out about um just comparing how JavaScript has evolved",
    "start": "2524079",
    "end": "2530359"
  },
  {
    "text": "over the past I don't know 10 years um since 2008 when the it got fast enough",
    "start": "2530359",
    "end": "2535920"
  },
  {
    "text": "to build web apps in because of the the great browser performance Wars and I think in a lot of ways uh a lot of the",
    "start": "2535920",
    "end": "2543280"
  },
  {
    "text": "churn people have been seeing and complaining about with like oh my gosh there's there's so much stuff coming out all the time and things are changing so",
    "start": "2543280",
    "end": "2549760"
  },
  {
    "text": "fast really dates back to that that that performance war that that led to",
    "start": "2549760",
    "end": "2555319"
  },
  {
    "text": "JavaScript being really suitable to have uh Rich web apps that were they're really client side",
    "start": "2555319",
    "end": "2560840"
  },
  {
    "text": "[Music]",
    "start": "2560840",
    "end": "2571480"
  },
  {
    "text": "heavy this episode is brought to you by linode our Cloud serve of choice",
    "start": "2571480",
    "end": "2576680"
  },
  {
    "text": "it's so easy to get started at to lin.com changelog pick a plan pick a Dro",
    "start": "2576680",
    "end": "2582160"
  },
  {
    "text": "and pick a location and admin deploy your Lino Cloud Server they have dral worthy Hardware native SSD cloud storage",
    "start": "2582160",
    "end": "2589559"
  },
  {
    "text": "40 GB Network Intel E5 processor simple easy control panel",
    "start": "2589559",
    "end": "2596200"
  },
  {
    "text": "99.9% uptime guaranteed we never down 247 customer support 10 data centers",
    "start": "2596200",
    "end": "2602559"
  },
  {
    "text": "three regions anywhere in the world they got you covered had the Leno / changelog to get $20 in hosting credit that's 4",
    "start": "2602559",
    "end": "2609280"
  },
  {
    "text": "months free once again lin.com changelog this episode is brought to you",
    "start": "2609280",
    "end": "2615200"
  },
  {
    "text": "by Ray Gun who just launched their APM service it was built with the developer and devops in mind they're leading with",
    "start": "2615200",
    "end": "2621880"
  },
  {
    "text": "first class support for net apps also available as an Azure app service and have plans to supportet core followed by",
    "start": "2621880",
    "end": "2629319"
  },
  {
    "text": "Java and Ruby in the near future after doing a ton of competitive research between the current APM providers where",
    "start": "2629319",
    "end": "2635760"
  },
  {
    "text": "r gun APM excels is the level of detailer surfacing New Relic and app",
    "start": "2635760",
    "end": "2641160"
  },
  {
    "text": "Dynamics for example are more business oriented where ray gun has been built for developers and devops the level of",
    "start": "2641160",
    "end": "2648559"
  },
  {
    "text": "detail provided in the traces are amazing the flame charts are awesome and",
    "start": "2648559",
    "end": "2654040"
  },
  {
    "text": "allows you to actively solve problems and dramatically boost your team's efficiency when diagnosing problems Deep",
    "start": "2654040",
    "end": "2660480"
  },
  {
    "text": "dive into root cause with automatic links back to source for an unbeatable issue resolution work flow learn more",
    "start": "2660480",
    "end": "2667599"
  },
  {
    "text": "and get started at Ray gun.com APM once again Ray gun.com",
    "start": "2667599",
    "end": "2674400"
  },
  {
    "text": "[Music]",
    "start": "2674760",
    "end": "2677909"
  },
  {
    "text": "[Music]",
    "start": "2680730",
    "end": "2690200"
  },
  {
    "text": "APM one question I asked I do remember asking two years ago and you were teasing at and I wonder the state of it",
    "start": "2690200",
    "end": "2696359"
  },
  {
    "text": "cuz I haven't heard was Elm on the server did anything ever come of that or is it still just a a a spark or what's",
    "start": "2696359",
    "end": "2703680"
  },
  {
    "text": "the word a pipe dream Sparkle in your eye like what's the situation is that going to happen or did it happen no",
    "start": "2703680",
    "end": "2709240"
  },
  {
    "text": "that's a great question um it's not that it did happen it's more that I think we have a much better understanding of what",
    "start": "2709240",
    "end": "2715640"
  },
  {
    "text": "that looks like now um and basically so so we're as was the case two years ago and it's still the case now um Elm does",
    "start": "2715640",
    "end": "2722280"
  },
  {
    "text": "not have first class server side support and that's intentional uh we basically want to focus on the browser for now um",
    "start": "2722280",
    "end": "2729680"
  },
  {
    "text": "but we're sort of keeping an eye on the server so one of the perhaps surprising things um that has been kind of guiding",
    "start": "2729680",
    "end": "2736520"
  },
  {
    "text": "this design question of what should Elm on the server look like if anything um",
    "start": "2736520",
    "end": "2741680"
  },
  {
    "text": "is actually web assembly so one of the things we've been uh sort of surprised",
    "start": "2741680",
    "end": "2746800"
  },
  {
    "text": "by was um web assembly came out and and discovering that actually this is a thing that all the browser vendors were",
    "start": "2746800",
    "end": "2752400"
  },
  {
    "text": "on board with and were actually supporting um there became this question at some point of what does web assembly",
    "start": "2752400",
    "end": "2758280"
  },
  {
    "text": "mean for Elm and that kind of transitioned to discussions with some folks at Mozilla and you know asking",
    "start": "2758280",
    "end": "2764800"
  },
  {
    "text": "about what's the garbage collection story going to be like um and asking questions about what should elm's interop uh look like and where we ended",
    "start": "2764800",
    "end": "2773200"
  },
  {
    "text": "up was kind of discovering that actually it seems pretty feasible that Elm could someday compile just to web Assembly not",
    "start": "2773200",
    "end": "2781200"
  },
  {
    "text": "to JavaScript at all and actually that all of the existing JavaScript interop would still work and the reason that's",
    "start": "2781200",
    "end": "2788760"
  },
  {
    "text": "possible is that the way that elm's JavaScript interop works is essentially through message passing it's kind of",
    "start": "2788760",
    "end": "2794000"
  },
  {
    "text": "like a a pub sub like maybe event emitter system so you kind of your El map sort of broadcasts events out to",
    "start": "2794000",
    "end": "2800359"
  },
  {
    "text": "JavaScript and then listens for events coming in from JavaScript and since that's the whole model it's like that",
    "start": "2800359",
    "end": "2806599"
  },
  {
    "text": "and then also you can use some web component stuff if it's just view specific um neither here nor there but",
    "start": "2806599",
    "end": "2813599"
  },
  {
    "text": "either one of those interop methods works totally fine if Elm is compiling to web assembly instead of to JavaScript",
    "start": "2813599",
    "end": "2819680"
  },
  {
    "text": "it can still talk to JavaScript just as easily as it did before and nobody on the other side needs to know or care",
    "start": "2819680",
    "end": "2826160"
  },
  {
    "text": "that it's compiling the web assembly under the hood which could be even bigger for assets and also um even",
    "start": "2826160",
    "end": "2832079"
  },
  {
    "text": "bigger for performance not just because it gets to have lower overhead but also",
    "start": "2832079",
    "end": "2837359"
  },
  {
    "text": "because it opens the door to really exciting concurrency stuff so right now",
    "start": "2837359",
    "end": "2842440"
  },
  {
    "text": "um Elm is actually very much intentionally designed to be a lang that's potentially great at concurrency",
    "start": "2842440",
    "end": "2848599"
  },
  {
    "text": "but a lot of that potential is sort of uh goes to waste because JavaScript is single-threaded and web workers are",
    "start": "2848599",
    "end": "2856440"
  },
  {
    "text": "let's say not usually great for improving performance of typical web applications in practice even though in",
    "start": "2856440",
    "end": "2862240"
  },
  {
    "text": "theory they might be able to because of serialization overhead um but a lot of that could potentially change if Elm",
    "start": "2862240",
    "end": "2868440"
  },
  {
    "text": "compiled to web assembly now if Elm compiles to web assembly uh that kind of opens the door to Elm on the server",
    "start": "2868440",
    "end": "2875040"
  },
  {
    "text": "having sort of a a built-in way to sort of get off the ground in a way where um",
    "start": "2875040",
    "end": "2881240"
  },
  {
    "text": "or sorry in an environment where concurrency actually matters a lot more and you can have a lot more potential",
    "start": "2881240",
    "end": "2886800"
  },
  {
    "text": "benefits from it because on the client side concurrency is basically a you know a performance optimization um but on the",
    "start": "2886800",
    "end": "2893640"
  },
  {
    "text": "server it can be a pretty fundamental thing as far as throughput as far as um how much the server can handle you know",
    "start": "2893640",
    "end": "2899680"
  },
  {
    "text": "what kind of a load it's actually capable of processing um so the",
    "start": "2899680",
    "end": "2904760"
  },
  {
    "text": "potential seems to pretty high there and I don't know if that actually ends up the way that we",
    "start": "2904760",
    "end": "2909880"
  },
  {
    "text": "end up going with it um but it's it's been pretty fascinating to to sort of realize oh hey this actually seems like",
    "start": "2909880",
    "end": "2917040"
  },
  {
    "text": "not only a plausible path but actually a likely path at this point and we've actually started basically making design",
    "start": "2917040",
    "end": "2924160"
  },
  {
    "text": "considerations like anytime we talk about any kind of uh change that might impact the language or the the core",
    "start": "2924160",
    "end": "2930599"
  },
  {
    "text": "libraries one of the questions that always comes up is will this still be fine if we're compiling to we assembly",
    "start": "2930599",
    "end": "2936119"
  },
  {
    "text": "instead and it's basically become something of a design constraint H so let me make sure I'm understanding you",
    "start": "2936119",
    "end": "2942480"
  },
  {
    "text": "correctly are you saying that the work to make Elm compile to web assembly uh",
    "start": "2942480",
    "end": "2949760"
  },
  {
    "text": "is the kind of work that you would have to do to run it on the server and so you're the re architecting will help you or are you saying that you could",
    "start": "2949760",
    "end": "2955839"
  },
  {
    "text": "actually once you compile to web assembly then you just magically be able to run that compiled you know wasm thing",
    "start": "2955839",
    "end": "2962799"
  },
  {
    "text": "on the server yeah so um I guess I I kind of skipped a step um so okay thank",
    "start": "2962799",
    "end": "2968720"
  },
  {
    "text": "you yeah know I I uh I that was a total leap um so so basically uh Evan wrote",
    "start": "2968720",
    "end": "2975119"
  },
  {
    "text": "out like one of the FAQs you know is uh hey does does Elm run on the server and",
    "start": "2975119",
    "end": "2980960"
  },
  {
    "text": "of course I mean Elm compiles to JavaScript so literally if you wanted to you could compile Elm to JavaScript and",
    "start": "2980960",
    "end": "2986599"
  },
  {
    "text": "run that compile Javas on well more importantly it doesn't mean you're going to have a good time if you",
    "start": "2986599",
    "end": "2991799"
  },
  {
    "text": "do that um right which means you shouldn't do it well so so one of the uh",
    "start": "2991799",
    "end": "2997559"
  },
  {
    "text": "the big things that Evan points out is that basically you know compiling to a particular Target is about five% of the",
    "start": "2997559",
    "end": "3004040"
  },
  {
    "text": "work of of getting to a good experience um the ecosystem is is a huge deal and so you have all this enormous amounts of",
    "start": "3004040",
    "end": "3011599"
  },
  {
    "text": "design work and also implementation work to say what would a good elm experience on the server be like like Elm has",
    "start": "3011599",
    "end": "3018799"
  },
  {
    "text": "different design constraints than I don't think there's any other language that has all exactly the same design",
    "start": "3018799",
    "end": "3023839"
  },
  {
    "text": "constraints that Elm has um and so you know there's definitely design work to do to figure out what would a nice",
    "start": "3023839",
    "end": "3030240"
  },
  {
    "text": "experience look like and uh actually so uh reason ml just ran into this kind of",
    "start": "3030240",
    "end": "3035760"
  },
  {
    "text": "recently where um so reason ml is another programming language that compiles to JavaScript um although",
    "start": "3035760",
    "end": "3042799"
  },
  {
    "text": "technically it's a syntax on top of O camel so it doesn't have to compile to JavaScript although that's kind of uh",
    "start": "3042799",
    "end": "3048599"
  },
  {
    "text": "what it's what it's big pitch is because the syntax looks very javascrip anyway um a lot of people were saying well uh",
    "start": "3048599",
    "end": "3055240"
  },
  {
    "text": "if if I can compile reason ml to JavaScript and I can also run o camel on",
    "start": "3055240",
    "end": "3061440"
  },
  {
    "text": "my server um why not use reason ML on the server and what uh quickly turned",
    "start": "3061440",
    "end": "3067319"
  },
  {
    "text": "turned out to be the case is that unfortunately that's not enough to get a good experience right out the box there's still a huge amount of work to",
    "start": "3067319",
    "end": "3073599"
  },
  {
    "text": "do to basically build an ecosystem around that to answer questions like what should a web server look like what",
    "start": "3073599",
    "end": "3079760"
  },
  {
    "text": "should database access look like there's all these different things you know working with q's working with third party apis",
    "start": "3079760",
    "end": "3085960"
  },
  {
    "text": "um all these questions that sort of have to be addressed before you have you know something that's an adequate um",
    "start": "3085960",
    "end": "3091760"
  },
  {
    "text": "replacement from an ergonomics perspective for something like rails or Sinatra or Express or um any of the",
    "start": "3091760",
    "end": "3098280"
  },
  {
    "text": "other Alternatives that people commonly use um so what the the folks who ended up doing that in the early days were",
    "start": "3098280",
    "end": "3103920"
  },
  {
    "text": "basically doing on on reason is they ended up saying well okay we're going to write our business logic and reason and then we're actually just going to end up",
    "start": "3103920",
    "end": "3109440"
  },
  {
    "text": "compiling it to JavaScript and then doing a lot of interop to express just to end up basically using Express uh as",
    "start": "3109440",
    "end": "3116200"
  },
  {
    "text": "our as our application server um so you know I guess technically you could do the same thing in Elm if you wanted to",
    "start": "3116200",
    "end": "3122280"
  },
  {
    "text": "just use Elm for your business logic and then use a whole ton of interop to talk to you know Express um but that's not",
    "start": "3122280",
    "end": "3129040"
  },
  {
    "text": "really the sort of the elm experience that people are accustomed to people are are accustomed to things sort of just working and being reliable and um really",
    "start": "3129040",
    "end": "3136760"
  },
  {
    "text": "only having to use interop in in very exceptional cases not as like a you know bread and butter type thing so I think",
    "start": "3136760",
    "end": "3143640"
  },
  {
    "text": "um that's that's kind of where the the the big amount of work to do exists is like what's the design of a really nice",
    "start": "3143640",
    "end": "3150319"
  },
  {
    "text": "system and that's uh what what brings me back to web assembly is what are the design constraints of that system and if",
    "start": "3150319",
    "end": "3159680"
  },
  {
    "text": "one of the design constraints is we're running in this single-threaded albeit asynchronous environment like because",
    "start": "3159680",
    "end": "3164760"
  },
  {
    "text": "we're compiling tojs and running it on node that really constrains the API design space compared to if we're saying",
    "start": "3164760",
    "end": "3170880"
  },
  {
    "text": "yeah we just have complete control over concurrency we have first class you know thread that we can work with under the",
    "start": "3170880",
    "end": "3176440"
  },
  {
    "text": "hood um we can offer a nicer API uh at a foundational level on which that whole",
    "start": "3176440",
    "end": "3182440"
  },
  {
    "text": "ecosystem can be built if we're compiling to something that has a really nice notion of uh of threading and this",
    "start": "3182440",
    "end": "3188599"
  },
  {
    "text": "also gets into other questions like one of the things that that Evan discovered in his his research um is that uh so",
    "start": "3188599",
    "end": "3195599"
  },
  {
    "text": "Evan's a big admirer of airls um supervision tree model and sort of the",
    "start": "3195599",
    "end": "3200720"
  },
  {
    "text": "way that they handle fault tolerance and the way that they do servers um",
    "start": "3200720",
    "end": "3206079"
  },
  {
    "text": "which has a lot of really great benefits um and one of the things that kind of came out of this exploration is that it",
    "start": "3206079",
    "end": "3211960"
  },
  {
    "text": "seems like that those ideas um are absolutely at their most effective when",
    "start": "3211960",
    "end": "3217000"
  },
  {
    "text": "they are part of the foundational Primitives as opposed to uh when you try to opt into them using a a a third-party",
    "start": "3217000",
    "end": "3223760"
  },
  {
    "text": "package which happens in a lot of languages um so that's also sort of necessarily part of that initial design",
    "start": "3223760",
    "end": "3230680"
  },
  {
    "text": "and the way that erlang is able to to get really really high throughput and really great fault tolerance is because",
    "start": "3230680",
    "end": "3236440"
  },
  {
    "text": "it has really great concurrency Primitives and also supervision built in from day one so um philosophically I",
    "start": "3236440",
    "end": "3243720"
  },
  {
    "text": "think uh the phrase Evan used was you know I I built Elm because I wanted to",
    "start": "3243720",
    "end": "3249440"
  },
  {
    "text": "make something that had a credible claim of being the the best experience you could get for building front-end applications and for me as a user of",
    "start": "3249440",
    "end": "3256400"
  },
  {
    "text": "that I absolutely think he succeeded um but he basically said look if I'm going to do all the work to to bring it to the",
    "start": "3256400",
    "end": "3263359"
  },
  {
    "text": "server I would want that same go post I wouldn't want to just say it's like Elm but also on the server but rather saying",
    "start": "3263359",
    "end": "3270200"
  },
  {
    "text": "even if you don't use Elm on the front end this has a legitimate claim to being you know potentially if you're into the",
    "start": "3270200",
    "end": "3276119"
  },
  {
    "text": "types of things that that Elm does um this would be the best choice that you would possibly have out there for",
    "start": "3276119",
    "end": "3281839"
  },
  {
    "text": "servers and that's a much higher bar to clear and requires a lot that's a longer field goal to kick yeah well especially",
    "start": "3281839",
    "end": "3287079"
  },
  {
    "text": "because in the front end it's basically like you know who's your competition it's like JavaScript and typescript and",
    "start": "3287079",
    "end": "3292119"
  },
  {
    "text": "then like uh you know several Niche alternatives on the back in it's like python Ruby go Scala Java I mean the",
    "start": "3292119",
    "end": "3300000"
  },
  {
    "text": "list just goes on and on there's there's so many different Alternatives that have been around for longer than in some",
    "start": "3300000",
    "end": "3305680"
  },
  {
    "text": "cases longer than javascripts even existed um yeah and uh and and a lot of them you know have have a lot more sort",
    "start": "3305680",
    "end": "3313200"
  },
  {
    "text": "of uh claims to fame like like certainly air langang in terms of robustness or you know Java in terms of like sheer",
    "start": "3313200",
    "end": "3319440"
  },
  {
    "text": "scale of of some of those deployments um you know that that Elm really uh has a",
    "start": "3319440",
    "end": "3325319"
  },
  {
    "text": "long way to go before it can kind of say yeah you we're we're a serious contender in that space so you're on the front",
    "start": "3325319",
    "end": "3330880"
  },
  {
    "text": "line of elm community and adoption you go to the meetups the conference talks all this surely you hear a lot of people",
    "start": "3330880",
    "end": "3337039"
  },
  {
    "text": "that are trying Elm or have tried to switch or adopt and they go back to JavaScript for one reason or the other I",
    "start": "3337039",
    "end": "3343280"
  },
  {
    "text": "always think of myself with Sublime Text and vs code you know every month or two I try out vs code and there's always",
    "start": "3343280",
    "end": "3348920"
  },
  {
    "text": "just like one or two blockers I'm just like I'm going back to VI Sublime Text and so I just I don't do that so surely",
    "start": "3348920",
    "end": "3355559"
  },
  {
    "text": "you've heard some of those people where they say yeah this just isn't the way I like it or that's not up to Snuff or I",
    "start": "3355559",
    "end": "3360760"
  },
  {
    "text": "just can't get over this that or the other thing what are some things people have been saying of why they don't adopt",
    "start": "3360760",
    "end": "3366559"
  },
  {
    "text": "Elm that's a great question um so I can man I I I mean you're right I I am very",
    "start": "3366559",
    "end": "3371760"
  },
  {
    "text": "plugged into that and I can like rattle off a list um so I I would say they",
    "start": "3371760",
    "end": "3377039"
  },
  {
    "text": "break down into a couple of different categories um a common one is team buyin so there will be one person on the team",
    "start": "3377039",
    "end": "3383440"
  },
  {
    "text": "who's really excited about Elm and everybody else in the team is just kind of like we don't really care we don't want to learn a new language and it the",
    "start": "3383440",
    "end": "3390520"
  },
  {
    "text": "idea just kind of dies on the vine um that's sad when it happens but at the same time it's like you know teams got",
    "start": "3390520",
    "end": "3396559"
  },
  {
    "text": "to work together so you know I don't I don't think there's really much hope for success of adopting something if you know any technology if only one out of n",
    "start": "3396559",
    "end": "3403799"
  },
  {
    "text": "people um actually wants to use it um so that's certainly a barrier um another",
    "start": "3403799",
    "end": "3409559"
  },
  {
    "text": "one that comes to mind is uh basically um learning curve so Elm is a different",
    "start": "3409559",
    "end": "3414640"
  },
  {
    "text": "progr programming language that's just an innately higher learning curve than learning a library learning a framework",
    "start": "3414640",
    "end": "3420480"
  },
  {
    "text": "um I I I kind of think that's the progression like Library tends to have the lowest learning curve framework is more than that language is more than",
    "start": "3420480",
    "end": "3426839"
  },
  {
    "text": "that um especially because sometimes when you get into languages um people end up with roadblocks that uh are not",
    "start": "3426839",
    "end": "3434440"
  },
  {
    "text": "necessarily matters of it's it's too difficult to learn but rather that uh people are just uh not interested in",
    "start": "3434440",
    "end": "3440599"
  },
  {
    "text": "learning because there's like some aesthetic turnoff so Elm does have a different SYM in JavaScript quite a lot",
    "start": "3440599",
    "end": "3446599"
  },
  {
    "text": "of people say they like the syntax better but there are some people who say actually I don't like the syntax as much and this just bothers me too much I",
    "start": "3446599",
    "end": "3452960"
  },
  {
    "text": "can't get through the tutorial um so that happens that's another reason that that people don't end up using El um",
    "start": "3452960",
    "end": "3459720"
  },
  {
    "text": "from a perspective of uh actual like apis and libraries I think the number one thing that that people uh say I",
    "start": "3459720",
    "end": "3467960"
  },
  {
    "text": "don't know how many people uh walk away from Elm because of it but I have heard at least one person say that they were",
    "start": "3467960",
    "end": "3474200"
  },
  {
    "text": "they did sort of like a hack Day project um where they they they decided they were going to switch frontend Technologies and they tried Elm and they",
    "start": "3474200",
    "end": "3481440"
  },
  {
    "text": "tried vue.js and they tried react and they tried uh I forget what the other one was um but they ended up not going",
    "start": "3481440",
    "end": "3488440"
  },
  {
    "text": "with Elm because of this which is um Json decoders and so basically in order",
    "start": "3488440",
    "end": "3493640"
  },
  {
    "text": "for Elm to have the level of reliability that it does um it needs to not only say",
    "start": "3493640",
    "end": "3499480"
  },
  {
    "text": "like when you get some you know some data from the server it needs to not only say uh I've got this data now can",
    "start": "3499480",
    "end": "3504960"
  },
  {
    "text": "work with it it actually needs to sort of like validate and translate it into you know a format that makes sense for",
    "start": "3504960",
    "end": "3510240"
  },
  {
    "text": "Elm so if you think about it in the JavaScript world if I've got a JavaScript object uh and I try to access",
    "start": "3510240",
    "end": "3517119"
  },
  {
    "text": "a field on it and it's not there I get back undefined and that might very well lead to a runtime exception you know the",
    "start": "3517119",
    "end": "3522640"
  },
  {
    "text": "good oldfashioned undefined is not a function that type thing um but in Elm we don't really have that that's all",
    "start": "3522640",
    "end": "3528480"
  },
  {
    "text": "sort of uh checked by the compiler now when you get back data from the server in JavaScript you can sort of parse that",
    "start": "3528480",
    "end": "3535400"
  },
  {
    "text": "you know call json.parse and it'll just give you back a JavaScript object immediately or it'll throw an exception which you can wrap a try catch around um",
    "start": "3535400",
    "end": "3542799"
  },
  {
    "text": "but assuming it parses then you've got an object and now you're playing by the same rules as normal which is to say uh",
    "start": "3542799",
    "end": "3547839"
  },
  {
    "text": "not much in the way of rules and typescript basically does this the same way it just sort of says like trust me and you say okay I'm going to give up",
    "start": "3547839",
    "end": "3553960"
  },
  {
    "text": "type checking right at the border I'm not going to have the compilers help I'm just going to assume that this Json sort",
    "start": "3553960",
    "end": "3559160"
  },
  {
    "text": "of fit the shape that I expected and we'll just kind of go from there um whereas Elm is sort of more serious",
    "start": "3559160",
    "end": "3565640"
  },
  {
    "text": "about trying to maintain those guarantees as your program runs and because the compiler can't possibly",
    "start": "3565640",
    "end": "3571359"
  },
  {
    "text": "check what's coming out of your server because it's just a blob of data you know it doesn't it doesn't it's not it doesn't exist a compile time um there's",
    "start": "3571359",
    "end": "3578200"
  },
  {
    "text": "nothing to check uh instead it basically has this Library called for Json decoding that will simultaneously parse",
    "start": "3578200",
    "end": "3585480"
  },
  {
    "text": "the JavaScript but also sort of validate it against a schema um and say if that schema doesn't match what you know what",
    "start": "3585480",
    "end": "3591920"
  },
  {
    "text": "we expected then it will fail and you know you can you can do error handling but you kind of have to spe specify the",
    "start": "3591920",
    "end": "3597680"
  },
  {
    "text": "error handling up front um so it ends up resulting in a more reliable system but",
    "start": "3597680",
    "end": "3602799"
  },
  {
    "text": "it does mean that you actually have to write out a schema for all of your Json endpoints um whereas in JavaScript you",
    "start": "3602799",
    "end": "3609880"
  },
  {
    "text": "just don't you just say json.parse it's just like okay H good luck um elm's not",
    "start": "3609880",
    "end": "3615280"
  },
  {
    "text": "really into the whole like let's just pretend problems won't happen it's like no we're going to try and actually handle the problems and and you know do",
    "start": "3615280",
    "end": "3622359"
  },
  {
    "text": "our best to make sure that if there is a bug we know exactly where it happened and we can gracefully recover from it so",
    "start": "3622359",
    "end": "3628079"
  },
  {
    "text": "this annoys some people because they're used to not having to do that and now this is feels cumbersome exactly yeah",
    "start": "3628079",
    "end": "3634319"
  },
  {
    "text": "and I mean people say it's a bunch of boiler plate right it's it's it's stuff that I don't have to do in JavaScript and I do have to do in Elm um so uh one",
    "start": "3634319",
    "end": "3642680"
  },
  {
    "text": "so we're kind of like working on this and in in typical um like sort of elm",
    "start": "3642680",
    "end": "3648039"
  },
  {
    "text": "design sensibilities uh the goal is not so much to say well how can we make this",
    "start": "3648039",
    "end": "3653480"
  },
  {
    "text": "uh less of Bose the goal is actually to say well what's the best way to do this like what's",
    "start": "3653480",
    "end": "3659280"
  },
  {
    "text": "what's what's the end goal here like can can we find a system where not only does it improve that but actually um it we",
    "start": "3659280",
    "end": "3666520"
  },
  {
    "text": "find something that solves other problems which actually along the way solves that and uh that's actually been",
    "start": "3666520",
    "end": "3672880"
  },
  {
    "text": "something I've been doing a lot of research into recently um and the the short answer turns out to be that the",
    "start": "3672880",
    "end": "3679559"
  },
  {
    "text": "people who have the best experience with doing client server data interaction and",
    "start": "3679559",
    "end": "3684839"
  },
  {
    "text": "Elm tend to have a single source of Truth uh for like the schema so an",
    "start": "3684839",
    "end": "3690559"
  },
  {
    "text": "example of this would be like at Google they use protocol buffers for everything and without going into too much detail",
    "start": "3690559",
    "end": "3696559"
  },
  {
    "text": "the the the relevant part here is that they have one schema file that says here's what my data on the wire is going",
    "start": "3696559",
    "end": "3703039"
  },
  {
    "text": "to look like and then they have a tool that they run that generates both the client side code that's going to decode",
    "start": "3703039",
    "end": "3708680"
  },
  {
    "text": "that and then also the server side code that's going to encode that and vice versa if you're if you're sending data from client to server",
    "start": "3708680",
    "end": "3715000"
  },
  {
    "text": "so by having this single source of Truth between the client and the server in this schema file and then using Code",
    "start": "3715000",
    "end": "3720920"
  },
  {
    "text": "generation at build time to make sure that the two sides agree you can actually sort of make sure that um you",
    "start": "3720920",
    "end": "3727079"
  },
  {
    "text": "no longer have the problem of oh whoops I changed what my server is sending but I forgot to update my client side code",
    "start": "3727079",
    "end": "3732680"
  },
  {
    "text": "to receive it um if you change the one but not the other something in your build's going to break so that has like",
    "start": "3732680",
    "end": "3738760"
  },
  {
    "text": "a separate really nice benefit even beyond the you know hey it's it's a lot of boilerplate that I don't want to have",
    "start": "3738760",
    "end": "3744559"
  },
  {
    "text": "to deal with um but as a nice consequence of that it also addresses",
    "start": "3744559",
    "end": "3749680"
  },
  {
    "text": "that because now instead of having to Define it in multiple places you only toine it in one place you just say like",
    "start": "3749680",
    "end": "3755640"
  },
  {
    "text": "here's my schema file and then it's going to generate my code on the server it's going to generate my code on the client and so rather than having to sort",
    "start": "3755640",
    "end": "3761680"
  },
  {
    "text": "of like write out oh here's the shape of my stuff on the client then also here's the separate decoder you can just generate both of those at the same time",
    "start": "3761680",
    "end": "3768640"
  },
  {
    "text": "for free from this one schema file um and while you're at it also get better",
    "start": "3768640",
    "end": "3774000"
  },
  {
    "text": "reli ability because your build will break if the client and server get out of sync um so we've got something like",
    "start": "3774000",
    "end": "3780599"
  },
  {
    "text": "this it's not literally protocol buffers um but on on One internal service and so far the people who've been working on",
    "start": "3780599",
    "end": "3786720"
  },
  {
    "text": "that system are like yeah this is great this is like everything's better um and",
    "start": "3786720",
    "end": "3791799"
  },
  {
    "text": "so that seems likely to be the sort of like the the shape of uh of a solution",
    "start": "3791799",
    "end": "3798279"
  },
  {
    "text": "to that particular um thing that that that some people like turns some people off from the language um where it's sort",
    "start": "3798279",
    "end": "3805119"
  },
  {
    "text": "of like a a solution in to the direct pain Point while also making something",
    "start": "3805119",
    "end": "3810680"
  },
  {
    "text": "else even nicer so tell folks who are interested in learning Elm maybe they're JavaScript developers and they want to",
    "start": "3810680",
    "end": "3816640"
  },
  {
    "text": "check it out what's the happiest path to learning Elm yeah so um I mean the First Resource I recommend everybody is just",
    "start": "3816640",
    "end": "3823640"
  },
  {
    "text": "the official guide so if you go to Elm d.org Elm like the tree um then it's",
    "start": "3823640",
    "end": "3829520"
  },
  {
    "text": "it's got a a a nice walkthrough that just sort of gets you a start to finish um but it's it's pretty short so that's",
    "start": "3829520",
    "end": "3836440"
  },
  {
    "text": "uh you know kind of a pro and a con it'll get you up and running but it's not super in-depth um so I'm writing a",
    "start": "3836440",
    "end": "3842760"
  },
  {
    "text": "book Shameless plug element action uh which goes into a lot more depth um and",
    "start": "3842760",
    "end": "3847839"
  },
  {
    "text": "it's it's pretty much designed at people who know JavaScript uh at least to some extent it doesn't expect that you're a",
    "start": "3847839",
    "end": "3853520"
  },
  {
    "text": "JavaScript Master by any stretch uh but it uses JavaScript as sort of a comparison point so I think if you're coming from JavaScript that should be a",
    "start": "3853520",
    "end": "3860000"
  },
  {
    "text": "nice introduction um if you prefer the video thing I've also got a course on Masters which I recently updated for Elm",
    "start": "3860000",
    "end": "3866839"
  },
  {
    "text": "19 and uh I've got two courses on there one is intro to Elm which is basically a dayong course just gets you zero",
    "start": "3866839",
    "end": "3873599"
  },
  {
    "text": "knowledge of Elm at the beginning all the way up through building an application and kind of working on a a",
    "start": "3873599",
    "end": "3879520"
  },
  {
    "text": "larger Elm codebase that does single page application stuff and HTTP and all that um and then the advanced course as",
    "start": "3879520",
    "end": "3886839"
  },
  {
    "text": "for you know maybe come back in a couple of months if you've been digging the elm thing and get into some of the the",
    "start": "3886839",
    "end": "3892160"
  },
  {
    "text": "really cool advanced stuff very good good thanks Richard this has been a lot of fun thanks for coming on the show all",
    "start": "3892160",
    "end": "3897599"
  },
  {
    "text": "right thanks thanks for listening to this",
    "start": "3897599",
    "end": "3902880"
  },
  {
    "text": "episode of the change log assuming you're loving this show raid review I recommend it wherever you listen from it",
    "start": "3902880",
    "end": "3909200"
  },
  {
    "text": "helps us reach new awesome people if this is your first time listening to the Chang log you can find more episodes in",
    "start": "3909200",
    "end": "3915200"
  },
  {
    "text": "our other compelling shows at changel log.com podcasts the edit and mix was done by me",
    "start": "3915200",
    "end": "3921599"
  },
  {
    "text": "Tim Smith and the music as always is brought to you by the one and only break master cylinder thanks to our sponsors",
    "start": "3921599",
    "end": "3927400"
  },
  {
    "text": "hired rollbar lenoe and Ray Gun bandwidth is provided by fastly learn more about them at fastly.com we move",
    "start": "3927400",
    "end": "3934440"
  },
  {
    "text": "fast and fix things you're a change log because of rollbar check them out at rar.com and we're hosted on Len servers",
    "start": "3934440",
    "end": "3940720"
  },
  {
    "text": "head to lin.com changelog thanks for tuning in see you next [Music]",
    "start": "3940720",
    "end": "3953079"
  },
  {
    "text": "week a",
    "start": "3953079",
    "end": "3957760"
  }
]