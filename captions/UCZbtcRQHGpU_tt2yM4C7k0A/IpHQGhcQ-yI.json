[
  {
    "text": "let's do it it's go time welcome to go time your source for wide ranging",
    "start": "9080",
    "end": "15440"
  },
  {
    "text": "discussions from all around the go Community find us on the web at go time. FM on the fediverse at gotime at Chang",
    "start": "15440",
    "end": "23599"
  },
  {
    "text": "log. social and on X at gotime FM thanks to our partners at fly.io the home of",
    "start": "23599",
    "end": "29080"
  },
  {
    "text": "Chang log.com launch your app as close to your users as possible find out how at",
    "start": "29080",
    "end": "35600"
  },
  {
    "text": "fly.io okay here we",
    "start": "35600",
    "end": "39359"
  },
  {
    "text": "go what's up friends do you remember when chat GPT launched I do it felt like",
    "start": "41399",
    "end": "47039"
  },
  {
    "text": "the llm was this magical tool out of the box however the more you use it the more",
    "start": "47039",
    "end": "52480"
  },
  {
    "text": "you realize that's just not the case the technology is brilliant don't get me wrong but it's prone to issues like",
    "start": "52480",
    "end": "58600"
  },
  {
    "text": "hallucination on its so but there's hope there is still hope feed the llm",
    "start": "58600",
    "end": "63719"
  },
  {
    "text": "reliable current data ground it in the right data in context then and only then",
    "start": "63719",
    "end": "69000"
  },
  {
    "text": "can it make the right connections and give the right answers the team at neo4j",
    "start": "69000",
    "end": "74479"
  },
  {
    "text": "has been exploring how to get results by pairing llms with knowledge graphs and Vector search check out their podcast",
    "start": "74479",
    "end": "80840"
  },
  {
    "text": "episode about llms and knowledge graphs throughout 2023 at graph stuff. FM they",
    "start": "80840",
    "end": "87000"
  },
  {
    "text": "share tips on retrieval methods prompt engineering and so much more don't miss it find a link in our show notes yes",
    "start": "87000",
    "end": "94159"
  },
  {
    "text": "check it out graph stuff. FM episode",
    "start": "94159",
    "end": "99280"
  },
  {
    "text": "[Music]",
    "start": "99290",
    "end": "112430"
  },
  {
    "text": "23 welcome to go time I'm your host my name is Chris",
    "start": "114640",
    "end": "120560"
  },
  {
    "text": "uh and today we're going to be talking about some of the news some of the news surrounding go some fun collection of",
    "start": "120560",
    "end": "126680"
  },
  {
    "text": "Articles uh the last time we did this we got some really good feedback from you wonderful listeners and you seem to",
    "start": "126680",
    "end": "132080"
  },
  {
    "text": "enjoy that episode a lot um not sure if there will be as much laughing in this episode but uh we we can try we can see",
    "start": "132080",
    "end": "139720"
  },
  {
    "text": "joining me today as co-host is Ian how are you doing today Ian I'm doing well I",
    "start": "139720",
    "end": "145480"
  },
  {
    "text": "do think we might uh Miss some of Johnny's laughter but we we'll do the best we can yeah we'll still we'll still",
    "start": "145480",
    "end": "151560"
  },
  {
    "text": "try to keep it fun and uh and interesting and hilarious as best we can",
    "start": "151560",
    "end": "156760"
  },
  {
    "text": "so yeah first up from our our nice list of Articles here as an article titled go",
    "start": "156760",
    "end": "162840"
  },
  {
    "text": "evolves in the wrong direction and I guess the summary of this article is that the the author feels that go is",
    "start": "162840",
    "end": "171440"
  },
  {
    "text": "getting more complex and dislikes this added complexity and the most notable",
    "start": "171440",
    "end": "178319"
  },
  {
    "text": "thing that he points out or I guess a couple notable things he points out is the edition of generics in 118 and then",
    "start": "178319",
    "end": "183760"
  },
  {
    "text": "the upcoming edition of iterators In 123 so Ian what are your what are your",
    "start": "183760",
    "end": "189879"
  },
  {
    "text": "thoughts on this yeah I don't know um I guess I do know I think I kind of disagree I do think it's getting more",
    "start": "189879",
    "end": "196519"
  },
  {
    "text": "complicated I don't think that's something we can say isn't happening but generics I I think was a needed feature",
    "start": "196519",
    "end": "202959"
  },
  {
    "text": "and I think it's worth the added complexity especially since I think in a lot of everyday go you don't even notice",
    "start": "202959",
    "end": "208720"
  },
  {
    "text": "it and then the range over function iterators I'm kind of skeptical about this but I'm",
    "start": "208720",
    "end": "214319"
  },
  {
    "text": "also really excited I've played with it some and it is like the function signatures are hard and it kind of is",
    "start": "214319",
    "end": "221439"
  },
  {
    "text": "confusing but having a standard way to iterate is something that I've wanted and go forever so yeah I don't know what",
    "start": "221439",
    "end": "229000"
  },
  {
    "text": "do you think I mean generics it did add a lot of complexity to the language itself from like a specification",
    "start": "229000",
    "end": "235959"
  },
  {
    "text": "perspective yeah I haven't really seen them like abuse I haven't seen them make things worse in any way so I think it's",
    "start": "235959",
    "end": "242200"
  },
  {
    "text": "it's it's like a for the everyday go user I don't think it added much complexity I think it just added",
    "start": "242200",
    "end": "247599"
  },
  {
    "text": "complexity on like that if you want to implement go or if you want to maintain go and there's all sorts of very complex",
    "start": "247599",
    "end": "253840"
  },
  {
    "text": "things about that so I don't know if that complexity argument applies as much and I think there have been some useful",
    "start": "253840",
    "end": "259560"
  },
  {
    "text": "productivity gains for some things like I use the slices package like all the time now this it's just there I'm like",
    "start": "259560",
    "end": "264919"
  },
  {
    "text": "oh I can just do this instead of having to remember that wonky syntax that I'd always have to look up I can never quite",
    "start": "264919",
    "end": "270759"
  },
  {
    "text": "remember it unless I've been typing it a whole bunch lately so it's just nice to break out the slices pack and be like Oh",
    "start": "270759",
    "end": "275880"
  },
  {
    "text": "slices not this or slices not whatever especially slices. clone that is one that I always like was like this is",
    "start": "275880",
    "end": "282039"
  },
  {
    "text": "terrible I don't want to have to do this three lines of nonsense to get a clone slice so I think on that aspect I don't",
    "start": "282039",
    "end": "288280"
  },
  {
    "text": "really agree with with him that like generics have made the language considerably more",
    "start": "288280",
    "end": "293400"
  },
  {
    "text": "complex as far as iterators I'm not really sure how I feel about this because it's on the one hand I I really",
    "start": "293400",
    "end": "299199"
  },
  {
    "text": "like this idea I see his argument around not liking the potential",
    "start": "299199",
    "end": "307560"
  },
  {
    "text": "complexity that can come from looking at a line that says like four range and have it previously been like okay well",
    "start": "307560",
    "end": "313160"
  },
  {
    "text": "that's like a static thing that's not going to like block for a long period of",
    "start": "313160",
    "end": "318199"
  },
  {
    "text": "time trying to get the next iteration of something and now that could be a thing that happens because you might be making",
    "start": "318199",
    "end": "323400"
  },
  {
    "text": "a network request in there or something like that but I think that's just like a a thing we have to get used to over time",
    "start": "323400",
    "end": "330280"
  },
  {
    "text": "because it's then it's just it's more just like a regular for loop with a function in it except sometimes that function might be like a little hidden",
    "start": "330280",
    "end": "336600"
  },
  {
    "text": "but I do think like the tooling we have now will make it blatantly clear that this is a function this is an iterator",
    "start": "336600",
    "end": "343400"
  },
  {
    "text": "powered by a function and you got to dig into that somewhat to to see if there's something wrong to dig into that to see",
    "start": "343400",
    "end": "349639"
  },
  {
    "text": "you know what might be the issue at hand but having design things that have",
    "start": "349639",
    "end": "354720"
  },
  {
    "text": "iterators in them before I think this will be much better overall because I think that is a very",
    "start": "354720",
    "end": "360400"
  },
  {
    "text": "inconsistent pattern across not just the center library but across go packages in general of like oh do you have a next",
    "start": "360400",
    "end": "367039"
  },
  {
    "text": "function that just returns okay if there's something you can get next or",
    "start": "367039",
    "end": "372240"
  },
  {
    "text": "does it return like we have a thing that just returns like an object in an error or an object and Okay and like there's",
    "start": "372240",
    "end": "378520"
  },
  {
    "text": "just like so many different patterns and it's hard to know like which one you should use in a given circumstance and I",
    "start": "378520",
    "end": "385080"
  },
  {
    "text": "think this at least helps out with some of them where you just want to use the kind of like object okay pattern and",
    "start": "385080",
    "end": "391280"
  },
  {
    "text": "then probably have like a separate like error function and then you have that kind of standard sort of like what the database SQL package does where it's",
    "start": "391280",
    "end": "397960"
  },
  {
    "text": "like oh you do the check the error afterward if you get kicked out of a loop so I think it will be a useful",
    "start": "397960",
    "end": "405080"
  },
  {
    "text": "addition it adds a little bit of complexity yes but I don't feel like it adds such a tremendous amount of",
    "start": "405080",
    "end": "411160"
  },
  {
    "text": "complexity that it's going to be like difficult for new people to learn this I think it's going to be more difficult",
    "start": "411160",
    "end": "417199"
  },
  {
    "text": "for people that have been writing go for a long time to adjust to this yeah I think it might be a lot like generics",
    "start": "417199",
    "end": "422840"
  },
  {
    "text": "where you don't see it a lot in every day but when you're implementing libraries you're going to be using it",
    "start": "422840",
    "end": "428199"
  },
  {
    "text": "right so I think it could end up being like that yeah I do think like the push",
    "start": "428199",
    "end": "433319"
  },
  {
    "text": "pull semantics are a little wonky like I don't I don't I don't know how I feel",
    "start": "433319",
    "end": "439080"
  },
  {
    "text": "about them as far as like trying to implement it and trying to get all of that right we have to see I guess how it all shakes out I haven't looked at this",
    "start": "439080",
    "end": "445680"
  },
  {
    "text": "in a while either since it kind of first came onto the scene so I'm not sure how much it shifted from how it was before",
    "start": "445680",
    "end": "453560"
  },
  {
    "text": "but I mean in general I just I don't see how this like necessarily makes the language worse or makes it immeasurably",
    "start": "453560",
    "end": "461960"
  },
  {
    "text": "more complex compared to how things were before outside of that one instance of",
    "start": "461960",
    "end": "468000"
  },
  {
    "text": "now you look at a four range statement and it could do something arbitrary in there could cause side effects it could",
    "start": "468000",
    "end": "475039"
  },
  {
    "text": "like pause for a long time outside of that it's like I don't I don't know",
    "start": "475039",
    "end": "480199"
  },
  {
    "text": "there was just like kind of debugging argument that he was making that I was sort of following but I'm not really",
    "start": "480199",
    "end": "486879"
  },
  {
    "text": "sure how that's going to shake out in the actual implementation as far as like when you look at it if it's going to look I don't think it's going to look",
    "start": "486879",
    "end": "492879"
  },
  {
    "text": "this weird when you look at it the iterators but yeah I think that's also something that can be worked out in the",
    "start": "492879",
    "end": "498759"
  },
  {
    "text": "airor messaging and the stack traces right I know there's also an argument here that it implicitly transforms",
    "start": "498759",
    "end": "505000"
  },
  {
    "text": "returns continue breaks defers all of those and I understand that that does",
    "start": "505000",
    "end": "510520"
  },
  {
    "text": "add complexity in like when you're thinking but as far as writing code I think that makes it a lot more simple I",
    "start": "510520",
    "end": "515800"
  },
  {
    "text": "don't have to learn how to do these things outside of the actual keywords right like trying to continue inside a",
    "start": "515800",
    "end": "523680"
  },
  {
    "text": "not like a custom interat or now is kind of a nightmare yeah right and there's been so many times I'm like I would like",
    "start": "523680",
    "end": "529240"
  },
  {
    "text": "to continue here please so I I honestly do think it's going to be simpler overall just being able to use your",
    "start": "529240",
    "end": "536080"
  },
  {
    "text": "normal semantics and yeah keywords yeah cuz that's the like I was uh using the",
    "start": "536080",
    "end": "541160"
  },
  {
    "text": "gold Mark package the other day and has like this as walking thing and you have to like return special things to be like",
    "start": "541160",
    "end": "548880"
  },
  {
    "text": "oh continue or like exit or whatever and I was like this is this is kind of wonky I don't know if I like this as much and",
    "start": "548880",
    "end": "555079"
  },
  {
    "text": "then also like error handling sucked a whole lot and I think it's kind of",
    "start": "555079",
    "end": "560399"
  },
  {
    "text": "easier to apply your own error handling if you can just do a regular for Loop",
    "start": "560399",
    "end": "565720"
  },
  {
    "text": "here or four Range Loop because you can just have the captured error variable",
    "start": "565720",
    "end": "571839"
  },
  {
    "text": "that should still work is I think it should work don't see why it wouldn't work I know there's also the argument",
    "start": "571839",
    "end": "577920"
  },
  {
    "text": "that this is one more way to iterate right but I I think that argument kind of Falls flat because it's not like",
    "start": "577920",
    "end": "583560"
  },
  {
    "text": "there were standard ways to iterate before right so we're not introducing a new standard it's just we're agreeing on",
    "start": "583560",
    "end": "590120"
  },
  {
    "text": "a a pattern um yeah making an attempt to consolidate or at least give people a a",
    "start": "590120",
    "end": "596680"
  },
  {
    "text": "predefined path to go on and not just like what packages have you been using and deciding how you want to design your",
    "start": "596680",
    "end": "603560"
  },
  {
    "text": "iterator based on what packages you see now you have an actual like well this is how you can canonically do it in the",
    "start": "603560",
    "end": "608600"
  },
  {
    "text": "language and you can still go do it by Under the way if you wish but this is how the way people are probably going to",
    "start": "608600",
    "end": "614200"
  },
  {
    "text": "be most familiar with yeah so to sum it up I'm not sure it's going in the wrong",
    "start": "614200",
    "end": "620560"
  },
  {
    "text": "direction um yeah it's kind of a it's a it's a very bold and broad",
    "start": "620560",
    "end": "626680"
  },
  {
    "text": "statement to be like it's evolving in the wrong Direction I think it it's I think the only direction that languages",
    "start": "626680",
    "end": "633680"
  },
  {
    "text": "can evolve especially if you want backwards compatibility guarantees is to become more complex over time like I I",
    "start": "633680",
    "end": "640560"
  },
  {
    "text": "think through that complexity too you can gain Simplicity right so I think there's a weird argument in here about",
    "start": "640560",
    "end": "647320"
  },
  {
    "text": "like yes we have to keep all of these old iterator Styles but perhaps you know",
    "start": "647320",
    "end": "652839"
  },
  {
    "text": "not forever like we have ways of deprecating things even in the standard library now so it's like it gives us a",
    "start": "652839",
    "end": "659040"
  },
  {
    "text": "path toward all of the iterators eventually looking the same or being able to like convert one iterator to",
    "start": "659040",
    "end": "665000"
  },
  {
    "text": "like this style of iterator in the future with some like glue code or something so it seems like it feels like",
    "start": "665000",
    "end": "670680"
  },
  {
    "text": "it will have the eventual effect of making things more simple in the same way that generics had the effect of",
    "start": "670680",
    "end": "677360"
  },
  {
    "text": "making things more simple for example from the slices package right now you don't have to implement your own slices",
    "start": "677360",
    "end": "682440"
  },
  {
    "text": "package or Implement all these function all all of the time or you don't have to you know write those same lines of code",
    "start": "682440",
    "end": "688360"
  },
  {
    "text": "that are kind of confusing if you don't understand that pattern already I think most people you see the word slices.",
    "start": "688360",
    "end": "694160"
  },
  {
    "text": "clone you're like I bet this clone's a slice right it's very it's very straightforward what that means so I",
    "start": "694160",
    "end": "699480"
  },
  {
    "text": "think like yes on the I think on the small scale it might add complexity to",
    "start": "699480",
    "end": "704560"
  },
  {
    "text": "language but I think on the large scale it's making the language go in a good direction toward more of the the",
    "start": "704560",
    "end": "712000"
  },
  {
    "text": "Simplicity that we want CU yeah if you don't want to have any added complexity then you just can't add anything to the",
    "start": "712000",
    "end": "718399"
  },
  {
    "text": "language and that is also a bad thing for the language yeah I like that that",
    "start": "718399",
    "end": "723440"
  },
  {
    "text": "small scale versus big scale like it's making the ecosystem simpler not the",
    "start": "723440",
    "end": "728680"
  },
  {
    "text": "language simpler right and there is a kind of somewhat strange argument at the end here too where he talks about like",
    "start": "728680",
    "end": "735399"
  },
  {
    "text": "oh like we should have more simd instructions and things like that because go is losing in the performance",
    "start": "735399",
    "end": "741440"
  },
  {
    "text": "space to to rust and I mean we can talk about this with the next article but I I don't I don't really know if like go is",
    "start": "741440",
    "end": "749440"
  },
  {
    "text": "that great of a language for performance critical things it's not terrible for performance critical things but I don't",
    "start": "749440",
    "end": "756959"
  },
  {
    "text": "think that's like the Target that go is usually going for most of the time it's not like the when I think of go I don't",
    "start": "756959",
    "end": "763199"
  },
  {
    "text": "think of like oh I need like lowlevel raw performance I think like oh I I want a language that allows me to maintain",
    "start": "763199",
    "end": "769720"
  },
  {
    "text": "you know large code bases that do you know a whole bunch of different things and I want to be able to actually",
    "start": "769720",
    "end": "775519"
  },
  {
    "text": "maintain it with you know somewhat large team of people yeah I do think that's a good transition to the next article yeah",
    "start": "775519",
    "end": "782600"
  },
  {
    "text": "so this one isn't so much of an article as it is a post on Reddit and someone",
    "start": "782600",
    "end": "788040"
  },
  {
    "text": "asking and our goang uh what software shouldn't you write in go and I",
    "start": "788040",
    "end": "795360"
  },
  {
    "text": "interestingly I I feel like the people that commented like some of the top",
    "start": "795360",
    "end": "801320"
  },
  {
    "text": "comments I just I'm just like they're all oddly wrong like most of it is about like oh garbage collection is is a",
    "start": "801320",
    "end": "809360"
  },
  {
    "text": "barrier like one one of these comments liter says garbage question is a barrier for some hard real time",
    "start": "809360",
    "end": "814560"
  },
  {
    "text": "processes and there was an interesting other Reddit thread I found it was about",
    "start": "814560",
    "end": "821120"
  },
  {
    "text": "same sort of thing of like well why do we keep saying that go is bad at real",
    "start": "821120",
    "end": "826880"
  },
  {
    "text": "time and the argument and and people were uh people basically said like what",
    "start": "826880",
    "end": "832480"
  },
  {
    "text": "do you mean by real time like what type of real time constraints are you talking",
    "start": "832480",
    "end": "837959"
  },
  {
    "text": "about and some very insightful just like you know real time doesn't necessarily have to mean like as fast as possible it",
    "start": "837959",
    "end": "844440"
  },
  {
    "text": "could also just mean like at a fixed interval but also like you know we're not in the go certainly not in the preo",
    "start": "844440",
    "end": "851000"
  },
  {
    "text": "1.5 era or in the even 1.5 1.6 era where the garbage cushion pauses were you know",
    "start": "851000",
    "end": "857279"
  },
  {
    "text": "10 milliseconds out out of every 50 milliseconds now it's sub millisecond",
    "start": "857279",
    "end": "862680"
  },
  {
    "text": "Max garbage collection pauses I think it's like 100 micros seconds is where they've gotten it down to for the like",
    "start": "862680",
    "end": "869240"
  },
  {
    "text": "the the longest like worst casee garbage collection pause which for most real-time systems seems to like that",
    "start": "869240",
    "end": "876680"
  },
  {
    "text": "shouldn't that does not feel like it makes a large difference for most people as far as GC is concerned so I don't I",
    "start": "876680",
    "end": "883560"
  },
  {
    "text": "don't really buy that whole argument of it's bad at doing things that need to be",
    "start": "883560",
    "end": "889920"
  },
  {
    "text": "real time but uh what do you think I mean I get what they're saying right like I'm not going to write some EMB",
    "start": "889920",
    "end": "897279"
  },
  {
    "text": "embedded like firmware and go that needs to recalculate something at 100 Herz",
    "start": "897279",
    "end": "902920"
  },
  {
    "text": "right like that it just doesn't make sense anyways but yeah I think I think people are still kind of confused about",
    "start": "902920",
    "end": "908759"
  },
  {
    "text": "the stop the world GC stuff yeah I don't think people like that also goes to like my thing I always remember of like you",
    "start": "908759",
    "end": "915800"
  },
  {
    "text": "don't have a garbage collection problem you have a garbage problem like if if the garbage collector is getting in your",
    "start": "915800",
    "end": "922320"
  },
  {
    "text": "way it probably means that you have done something pretty awful with your memory",
    "start": "922320",
    "end": "927519"
  },
  {
    "text": "management and you need to go fix except your memory management like garbage collection does not mean you don't do",
    "start": "927519",
    "end": "932560"
  },
  {
    "text": "memory management it means you don't have to write as much of the the code to management is intricately but you still",
    "start": "932560",
    "end": "938560"
  },
  {
    "text": "have to do memory management yeah I also saw a lot of arguments on here you shouldn't write like goys with go and I",
    "start": "938560",
    "end": "945480"
  },
  {
    "text": "I think I would tend to agree with that like that's just not what I would reach for I think there are some like decent",
    "start": "945480",
    "end": "950519"
  },
  {
    "text": "libraries now but yeah I don't know yeah I think goys is especially when like the",
    "start": "950519",
    "end": "957079"
  },
  {
    "text": "native platform like languages and apis are like just so",
    "start": "957079",
    "end": "962319"
  },
  {
    "text": "strong I think it's kind of weird I guess it depends on like what you're trying to do if you're like trying to do like an open source project and you",
    "start": "962319",
    "end": "968560"
  },
  {
    "text": "don't want to write three at least different platforms worth of goys maybe",
    "start": "968560",
    "end": "973880"
  },
  {
    "text": "you can do it and go but there's also like other tooling that can do that for you things like react native or like",
    "start": "973880",
    "end": "981040"
  },
  {
    "text": "even just using web views to do most of what you want then writing in JavaScript and HTML and CSS so yeah I I would say",
    "start": "981040",
    "end": "988759"
  },
  {
    "text": "yeah goys goys are a little of a weird thing I probably would try and learn the languages of the platforms I want to use",
    "start": "988759",
    "end": "995839"
  },
  {
    "text": "over just like kindy of use go and shoehorn it for all the different types of uh platforms I might be using another",
    "start": "995839",
    "end": "1002600"
  },
  {
    "text": "interesting one here too was like the deeply nested Jason argument of like",
    "start": "1002600",
    "end": "1008480"
  },
  {
    "text": "trying to parse that out and I think that comes down to like we don't have a culture right now people implementing their own Jason decoders people usually",
    "start": "1008480",
    "end": "1016720"
  },
  {
    "text": "just want to throw a struct at the decoder and be like please place all of the things into this nicely thank you so",
    "start": "1016720",
    "end": "1023800"
  },
  {
    "text": "yeah I think without having better like custom Jason decoder building tools those deeply nested really just deeply",
    "start": "1023800",
    "end": "1029918"
  },
  {
    "text": "nested any type any type of like that you know configuration sty language whether that's yaml or Jason or maybe",
    "start": "1029919",
    "end": "1037120"
  },
  {
    "text": "even toml it gets pretty hairy and annoying when you're trying to you know",
    "start": "1037120",
    "end": "1042319"
  },
  {
    "text": "do some things and go if you don't haven't built up that custom encoder or decoder yeah I think I agree with that",
    "start": "1042319",
    "end": "1048558"
  },
  {
    "text": "on the same line of decoding encoding stuff it's not in the article but I would not use go to write anything that",
    "start": "1048559",
    "end": "1055039"
  },
  {
    "text": "interacts with like canonical XML saml anything like that um yeah I've gone",
    "start": "1055039",
    "end": "1061160"
  },
  {
    "text": "down that path and it is you end up like calling into a C library to make your",
    "start": "1061160",
    "end": "1066280"
  },
  {
    "text": "XML canonical and oh yeah yeah if you need to do canonicalization that's that's tough I think XML in general is",
    "start": "1066280",
    "end": "1072799"
  },
  {
    "text": "is fine like I worked in an xmpp server for a few years and like was it was was",
    "start": "1072799",
    "end": "1079080"
  },
  {
    "text": "not like go was not the the issue at hand that we had and or go parsing XML",
    "start": "1079080",
    "end": "1084760"
  },
  {
    "text": "it was pretty simple yeah I haven't had as much issue parsing XML with go as writing XML yeah go just doesn't handle",
    "start": "1084760",
    "end": "1091840"
  },
  {
    "text": "like names space as well it doesn't handle other XML features well yeah I feel like that's probably also part of",
    "start": "1091840",
    "end": "1097320"
  },
  {
    "text": "just like we haven't we don't really have good libraries for doing that so it's like good libraries if you're doing",
    "start": "1097320",
    "end": "1103320"
  },
  {
    "text": "that then it's kind of rough to do it I guess that's the same argument for like the deeply Nest adjacent or really like any of these encoding decoding things",
    "start": "1103320",
    "end": "1109960"
  },
  {
    "text": "it's like if we don't write tools that make it easier to do those things then it's just going to wind up being not",
    "start": "1109960",
    "end": "1117200"
  },
  {
    "text": "great yeah I don't know if you've had to use soap with go before I would say avoid it I mean I try to avoid soap as a",
    "start": "1117200",
    "end": "1125400"
  },
  {
    "text": "in general as a whole I don't sometimes you don't have a choice you don't have a choice [Music]",
    "start": "1125400",
    "end": "1130520"
  },
  {
    "text": "[Laughter] yeah it's true but yeah oh God so I",
    "start": "1130520",
    "end": "1136480"
  },
  {
    "text": "think my favorite comment on this whole thread though is Excel macro should not be written in go ah yes and then someone disagreed and",
    "start": "1136480",
    "end": "1143039"
  },
  {
    "text": "they're like I'd rather write it in go than Visual Basic I was like or VB like uh I okay yeah I mean true but no",
    "start": "1143039",
    "end": "1152840"
  },
  {
    "text": "sure I mean really no one should be writing Excel macros those things are dangerous but yeah I don't know the the",
    "start": "1152840",
    "end": "1160280"
  },
  {
    "text": "custom function and Google Sheets are real nice sometimes but that's just JavaScript I don't even know what Excel",
    "start": "1160280",
    "end": "1166159"
  },
  {
    "text": "macros are written in is it VBA only I think so I don't know I think you can",
    "start": "1166159",
    "end": "1171720"
  },
  {
    "text": "write in a whole bunch of different like Microsoft languages but it's just yeah I guess it's mostly VBA especially if you",
    "start": "1171720",
    "end": "1177840"
  },
  {
    "text": "want it to be crossplatform but if you only care about Windows I imagine you can write it in like C or something",
    "start": "1177840",
    "end": "1183120"
  },
  {
    "text": "maybe I have no idea I don't know how Excel macros work I don't write them I like spreadsheets I don't like",
    "start": "1183120",
    "end": "1189440"
  },
  {
    "text": "spreadsheets job title Excel macro engineer that could be a I mean well the",
    "start": "1189440",
    "end": "1194480"
  },
  {
    "text": "world runs on spreadsheets so I'm sure there's many of people who have many ACC",
    "start": "1194480",
    "end": "1199559"
  },
  {
    "text": "custom macros to make everything work yeah anything else in this uh this list",
    "start": "1199559",
    "end": "1206159"
  },
  {
    "text": "of uh responses oh someone said they write everything in",
    "start": "1206159",
    "end": "1212440"
  },
  {
    "text": "go oh God I'm actually like trying to answer this like is there a class of",
    "start": "1212720",
    "end": "1217799"
  },
  {
    "text": "software you should not write and go I don't think there is yeah I mean I don't I don't think there is I think I think",
    "start": "1217799",
    "end": "1224280"
  },
  {
    "text": "like there's software that might be slightly better to write in another language but and this is kind of like a",
    "start": "1224280",
    "end": "1230760"
  },
  {
    "text": "thing I've been thinking about a lot lately it's probably like another another podcast idea or another podcast",
    "start": "1230760",
    "end": "1237039"
  },
  {
    "text": "episode idea but we can also talk about if we have time where I've been reading a bunch of Leslie lamport's work mostly",
    "start": "1237039",
    "end": "1244360"
  },
  {
    "text": "because I haven't read the paxos paper in a long time the part-time Parliament and I was like I think looking for",
    "start": "1244360",
    "end": "1250760"
  },
  {
    "text": "something else that he had written and I came across like uh basically Leslie Lamport has this very long list of all",
    "start": "1250760",
    "end": "1257240"
  },
  {
    "text": "his written works it's I think cently 193 Works long so he's written a lot of stuff over his career and in the kind of",
    "start": "1257240",
    "end": "1264760"
  },
  {
    "text": "blurb he writes about paxos in the part-time par Parliament he's like oh this is this is a simple algorithm and",
    "start": "1264760",
    "end": "1272120"
  },
  {
    "text": "he doesn't really he's like I don't understand why people don't understand this algorithm so I sat down I read that paper and then after reading that paper",
    "start": "1272120",
    "end": "1278480"
  },
  {
    "text": "I was like oh this is kind of simple and so I went through and like got a whole bunch of his other papers I'm like I'm",
    "start": "1278480",
    "end": "1284159"
  },
  {
    "text": "going to read all of these and there's one of his papers where he's talking about teaching concurrency um and kind",
    "start": "1284159",
    "end": "1291000"
  },
  {
    "text": "of like his suggestions for how we should teach concurrency to students specifically computer science students",
    "start": "1291000",
    "end": "1296600"
  },
  {
    "text": "and computer engineering students and there's this really great line in that",
    "start": "1296600",
    "end": "1301799"
  },
  {
    "text": "paper and actually let me like pull it up so I can read it correctly and he's",
    "start": "1301799",
    "end": "1306960"
  },
  {
    "text": "talking about like computation here so he says how should we describe computations most computer scientists",
    "start": "1306960",
    "end": "1312000"
  },
  {
    "text": "would probably interpret this question to mean what language should we use which I think is kind of the question we're asking here of like I don't know",
    "start": "1312000",
    "end": "1319720"
  },
  {
    "text": "what things shouldn't you write and go what things shouldn't you use this language for and then he says imagine an",
    "start": "1319720",
    "end": "1325559"
  },
  {
    "text": "art historian answering how would you describe impressionist painting by saying in French which is just a",
    "start": "1325559",
    "end": "1332520"
  },
  {
    "text": "hilarious line and just it's one of those like deep and subtle cuts at us as",
    "start": "1332520",
    "end": "1337799"
  },
  {
    "text": "an industry because it's true it's like we talk about like oh you shouldn't use that language to build that thing it's",
    "start": "1337799",
    "end": "1344200"
  },
  {
    "text": "like saying you shouldn't write that novel in French because it's not a good like you should write all novels in English because English is a good",
    "start": "1344200",
    "end": "1349760"
  },
  {
    "text": "language for writing novels and it's like we should we should not be thinking about things in that way and kind of his",
    "start": "1349760",
    "end": "1356080"
  },
  {
    "text": "point is like we should be talking about this stuff in form of Concepts and I think that's you know true of this",
    "start": "1356080",
    "end": "1361960"
  },
  {
    "text": "discussion as well of like I don't think that there are things that you there",
    "start": "1361960",
    "end": "1368279"
  },
  {
    "text": "certainly aren't things you can't write and go if you can write them in any language right go go is a turning complete language which means it's",
    "start": "1368279",
    "end": "1374360"
  },
  {
    "text": "equivalent to all of the other languages there might be like missing apis you might have to like go do some ffi stuff",
    "start": "1374360",
    "end": "1379720"
  },
  {
    "text": "into C to like make it work or do other weird assembly stuff but there's not like a fundamental thing that you can't",
    "start": "1379720",
    "end": "1386799"
  },
  {
    "text": "do with that you can do with go and can't do with another language or you can do with another language and can't do and go so I think it's like more",
    "start": "1386799",
    "end": "1393600"
  },
  {
    "text": "about the the concepts that matter and can you express those Concepts well and go but also there's like the whole other",
    "start": "1393600",
    "end": "1400679"
  },
  {
    "text": "other argument as well of just like I don't know if you're doing a startup or something like that or creating a project you know is go your strongest",
    "start": "1400679",
    "end": "1407919"
  },
  {
    "text": "language that's probably the language you should write that thing in right so if you're like for example when you're",
    "start": "1407919",
    "end": "1413080"
  },
  {
    "text": "talking about earli about goys it's like okay if you need to build a whole bunch of goys and go as your strongest language perhaps it's just better to",
    "start": "1413080",
    "end": "1420000"
  },
  {
    "text": "make a slightly uglier gooey and learn something like fine so you can just",
    "start": "1420000",
    "end": "1426159"
  },
  {
    "text": "Implement a goey with that and then have the application you want and then move on instead of having to like learn a",
    "start": "1426159",
    "end": "1431240"
  },
  {
    "text": "whole new language just to build a goey right it's like oh gotta R Swift and CP",
    "start": "1431240",
    "end": "1437840"
  },
  {
    "text": "and I guess C++ for Linux I don't know what Linux goobies are made in but you",
    "start": "1437840",
    "end": "1443840"
  },
  {
    "text": "go learn three other languages to go Express this same concept seems kind of silly it's like yes go oh you you want",
    "start": "1443840",
    "end": "1450880"
  },
  {
    "text": "to like write this same story but you need to write it in like four different languages now like that feels a little",
    "start": "1450880",
    "end": "1457760"
  },
  {
    "text": "weird if you could just write it in the one it could still be accessible to everybody we're right back to the ask a",
    "start": "1457760",
    "end": "1464120"
  },
  {
    "text": "question in software engineering and the answer is it depends um yeah yeah yeah I mean I I guess the answer to this is",
    "start": "1464120",
    "end": "1470120"
  },
  {
    "text": "like what software shouldn't you write and go is is mostly just like I don't know just just write and go like if you",
    "start": "1470120",
    "end": "1477080"
  },
  {
    "text": "know go and goes to strong language WR and go like and if that doesn't work for some reason or other reason then I'll go",
    "start": "1477080",
    "end": "1482200"
  },
  {
    "text": "write in something else but I think it's yeah yeah I don't think there's any broad answers that that work for this",
    "start": "1482200",
    "end": "1490080"
  },
  {
    "text": "kind of there certainly no there's no broad answers that'll fit into like a a Reddit response that is reasonable to read right when people say like can't",
    "start": "1490080",
    "end": "1496640"
  },
  {
    "text": "build real-time systems in it it's like no like Nuance is required there like if",
    "start": "1496640",
    "end": "1502120"
  },
  {
    "text": "I'm writing like spark jobs I'm not going to write them in go though because it's python or Scala right like that's",
    "start": "1502120",
    "end": "1509120"
  },
  {
    "text": "the supported languages like I think there's an argument for tooling here right like don't shoehorn go into things",
    "start": "1509120",
    "end": "1515720"
  },
  {
    "text": "where there is no tooling yeah just because you want to I mean it also depends on your goal though right",
    "start": "1515720",
    "end": "1521559"
  },
  {
    "text": "because it's like if you have that argument then there will never be tooling for that thing in that space",
    "start": "1521559",
    "end": "1527559"
  },
  {
    "text": "right if no one does there's never going to it's not it's not going to be in that space right that creates like those",
    "start": "1527559",
    "end": "1533279"
  },
  {
    "text": "artificial barriers and I think like even even thinking in this way is indicative of I think of the problem",
    "start": "1533279",
    "end": "1539559"
  },
  {
    "text": "that like Leslie Lort was bringing up in that conversation which is like or in that paper which is like if we think in",
    "start": "1539559",
    "end": "1546919"
  },
  {
    "text": "the framing of like certain languages are good for certain things then we're not really thinking about the problem",
    "start": "1546919",
    "end": "1553520"
  },
  {
    "text": "itself right we're thinking about this other colored version of the problem of like okay this problem in go and then",
    "start": "1553520",
    "end": "1560960"
  },
  {
    "text": "it's like oh well now if we go to another language we have to solve that problem in a different way in that language which",
    "start": "1560960",
    "end": "1567039"
  },
  {
    "text": "is I don't know not not not the not the best of situations but that's like a",
    "start": "1567039",
    "end": "1572120"
  },
  {
    "text": "larger industry level thing we got to solve for yeah I I agree with you there",
    "start": "1572120",
    "end": "1577960"
  },
  {
    "text": "but I think there's some leeway on both sides like at the end of the day you got to make money you gotta get done stuff",
    "start": "1577960",
    "end": "1584039"
  },
  {
    "text": "done yeah you got to get stuff done I don't know yeah I guess it's once again like the big view versus the little view",
    "start": "1584039",
    "end": "1590520"
  },
  {
    "text": "from a individual person standpoint uh or a small company standpoint yeah there's probably some",
    "start": "1590520",
    "end": "1596919"
  },
  {
    "text": "things you shouldn't write and go and you got to make that trade off that's also like a different type of question",
    "start": "1596919",
    "end": "1603240"
  },
  {
    "text": "like is the difference you post a question to a company versus toward an individual I would say so yeah you're",
    "start": "1603240",
    "end": "1610000"
  },
  {
    "text": "right it's a yeah it depends it depends it depends H yeah that's Lord",
    "start": "1610000",
    "end": "1618720"
  },
  {
    "text": "the answer to all the questions it depends yeah you know there's a whole whole series over on uh on change log I",
    "start": "1618720",
    "end": "1626200"
  },
  {
    "text": "think it's a change long and Friends series it depends I did an episode it was fun there's many more episodes you",
    "start": "1626200",
    "end": "1632279"
  },
  {
    "text": "should I have not listened to that yet I'll have to check it out should all go listen they're good episodes they're fun all right do we have anything else to",
    "start": "1632279",
    "end": "1638600"
  },
  {
    "text": "say on what software shouldn't you write and go it's a Choose Your Own Adventure I do think that leads interestingly into",
    "start": "1638600",
    "end": "1645919"
  },
  {
    "text": "the make files written in go alternatives to make written and go um",
    "start": "1645919",
    "end": "1651120"
  },
  {
    "text": "should you write an alternative to make and go I think probably yes yeah yeah I",
    "start": "1651120",
    "end": "1656360"
  },
  {
    "text": "mean make also make is for a number of reasons pretty awful it's like standard",
    "start": "1656360",
    "end": "1662519"
  },
  {
    "text": "which is nice but like that whole only using like tabs thing and so many other",
    "start": "1662519",
    "end": "1669039"
  },
  {
    "text": "weird syntactical things about make and make files is just",
    "start": "1669039",
    "end": "1675880"
  },
  {
    "text": "exhausting and like I I you know for well established projects or I think ecosystems like see and you know that",
    "start": "1675880",
    "end": "1684120"
  },
  {
    "text": "that have this more baked into them it makes sense but for go it's always like make files always feel so awkward weird",
    "start": "1684120",
    "end": "1692279"
  },
  {
    "text": "in go so I think I've always like reach for some other alternative have you used",
    "start": "1692279",
    "end": "1698200"
  },
  {
    "text": "any of the Alternatives mentioned in the article I think I've used Mage a few times I don't think I've ever used task",
    "start": "1698200",
    "end": "1704799"
  },
  {
    "text": "file um also I hate yaml so I don't think I want to use task file yeah we use Mage pretty extensively",
    "start": "1704799",
    "end": "1710720"
  },
  {
    "text": "where I work and I think like the one of the great Parts about it is like I don't have to learn all the weird extrinsics",
    "start": "1710720",
    "end": "1719080"
  },
  {
    "text": "how do you say that oh extrinsics yeah of the AWS CLI for doing stuff like go",
    "start": "1719080",
    "end": "1725519"
  },
  {
    "text": "has a great AWS SDK right so we can do all of our like automated s like AWS",
    "start": "1725519",
    "end": "1731679"
  },
  {
    "text": "stuff in a mage file and it just works it's oh it's amazing I would definitely recommend that's nice yeah and just be",
    "start": "1731679",
    "end": "1738440"
  },
  {
    "text": "able to keep everything in go sound Str and yeah having the full power of like a",
    "start": "1738440",
    "end": "1744360"
  },
  {
    "text": "full actual turning complete language is is nice not having to do kind of as the",
    "start": "1744360",
    "end": "1749440"
  },
  {
    "text": "author points out all of this kind of bending over backwards to make stuff work with the shell and the weird",
    "start": "1749440",
    "end": "1755200"
  },
  {
    "text": "version of the shell that make has yeah being able to do real for Loops is real nice yeah not that the shell can't do",
    "start": "1755200",
    "end": "1762200"
  },
  {
    "text": "four Loops but it's I I mess it up every single time I try well real four loops and logging",
    "start": "1762200",
    "end": "1769000"
  },
  {
    "text": "and you know execution of parallel commands and a whole bunch of other stuff that's just like all this is like",
    "start": "1769000",
    "end": "1775000"
  },
  {
    "text": "easier to do Ino that it is to do in in other things so yeah I mean I'm fully on",
    "start": "1775000",
    "end": "1781279"
  },
  {
    "text": "board with things like Mage um once again I don't when it comes to task file I don't really see I I guess if you",
    "start": "1781279",
    "end": "1788200"
  },
  {
    "text": "don't want to learn make like the the syntax of make and you're happy with",
    "start": "1788200",
    "end": "1793799"
  },
  {
    "text": "yaml then it's good but I I just really do not like yaml there's just so many so",
    "start": "1793799",
    "end": "1799039"
  },
  {
    "text": "many Oddities of like I was writing yaml inside of markdown the other day and it was like I was getting some weird error",
    "start": "1799039",
    "end": "1805399"
  },
  {
    "text": "from it because oh because I was writing it and it was like converting my tabs to spaces spaces tabs I don't know which",
    "start": "1805399",
    "end": "1812039"
  },
  {
    "text": "but the ano parser didn't like the fact that it was not using the correct spacing type and it and it blew up with",
    "start": "1812039",
    "end": "1817320"
  },
  {
    "text": "some weird error and I was like this is this is obnoxious I don't like this T like Whit space important syntax",
    "start": "1817320",
    "end": "1825799"
  },
  {
    "text": "is not what I enjoy in life so I would probably just sit down and use make or",
    "start": "1825799",
    "end": "1831440"
  },
  {
    "text": "really just use Mage or something like that instead of task file but I'm sure plenty of people like this if we want to",
    "start": "1831440",
    "end": "1837440"
  },
  {
    "text": "dis toml or yaml some more I think one of my most frustrating days ever was because yaml was not considering",
    "start": "1837440",
    "end": "1845200"
  },
  {
    "text": "something a string I thought was a string where so you don't have to quote things right but every once in a while",
    "start": "1845200",
    "end": "1851120"
  },
  {
    "text": "that'll bite you so yeah yeah that's I it's like it's just a messy messy markup",
    "start": "1851120",
    "end": "1857679"
  },
  {
    "text": "length for sure I get why why it was created but you know there's a lot of things we",
    "start": "1857679",
    "end": "1863760"
  },
  {
    "text": "create that sometimes are bad ideas a lot of things in this industry we create are bad ideas",
    "start": "1863760",
    "end": "1869240"
  },
  {
    "text": "but but yeah no I think like Mage Mage is cool I think I I've used it a few times in the past if you haven't checked",
    "start": "1869240",
    "end": "1874840"
  },
  {
    "text": "it out you should definitely listener go check go check it out um I especially would recommend yeah especially like the",
    "start": "1874840",
    "end": "1880480"
  },
  {
    "text": "fact you can have like a directory of files so you can kind of like properly",
    "start": "1880480",
    "end": "1885639"
  },
  {
    "text": "manage the structure of it and have your own little like build system within your code base I think is helpful yeah we've",
    "start": "1885639",
    "end": "1891919"
  },
  {
    "text": "actually used Mage inside of GitHub actions too to help manage some of the like build and test scripts um and it",
    "start": "1891919",
    "end": "1900080"
  },
  {
    "text": "works really well yeah it's like it's like you're building your own little build system which if you're only rating go that's a it's a nice little thing to",
    "start": "1900080",
    "end": "1907480"
  },
  {
    "text": "have yeah yeah I don't know is there much else we want to say on uh good old Mage or good old what are these",
    "start": "1907480",
    "end": "1914519"
  },
  {
    "text": "alternatives to make files it's all I",
    "start": "1914519",
    "end": "1919840"
  },
  {
    "text": "yeah do recommend check it out if it works for you it works really well",
    "start": "1919919",
    "end": "1926519"
  },
  {
    "text": "yeah what's up friends I'm here with two new friends of mine from Speak Easy sarbach co-founder and CEO and George",
    "start": "1926519",
    "end": "1934480"
  },
  {
    "text": "Hadar founding engineer so for the uninitiated Speak Easy takes care of the entire SDK workflow to save you and your",
    "start": "1934480",
    "end": "1942120"
  },
  {
    "text": "team significant time delivering Enterprise grade sdks to your customers in minutes you can generate best inclass",
    "start": "1942120",
    "end": "1949960"
  },
  {
    "text": "sdks in typescript Python go Java C and",
    "start": "1949960",
    "end": "1955519"
  },
  {
    "text": "even PHP so sear what's your excitement level for apis and this API World we're",
    "start": "1955519",
    "end": "1962159"
  },
  {
    "text": "living in I'm super excited about apis I think we went to gen zero of the API",
    "start": "1962159",
    "end": "1969519"
  },
  {
    "text": "first Revolution and I think we're actually going to a second one now with the Tailwinds of the AI ecosystem kind",
    "start": "1969519",
    "end": "1974799"
  },
  {
    "text": "of causing that to be re invigorated so yeah super super pych to be working in this space right now I think it's",
    "start": "1974799",
    "end": "1980639"
  },
  {
    "text": "everyone's at a point that where everyone knows about rest apis and grass apis and GC API and now I think we're",
    "start": "1980639",
    "end": "1987240"
  },
  {
    "text": "actually getting into the second phase of that which is how do people ship create developer experience in addition",
    "start": "1987240",
    "end": "1993480"
  },
  {
    "text": "to the apis and how do we build like truly best-in-class apis that turn into they along of infrastructure right this",
    "start": "1993480",
    "end": "2000559"
  },
  {
    "text": "is kind of the the vision I think that stripe helped manifest for everyone in the finex bace which is the the an API",
    "start": "2000559",
    "end": "2007480"
  },
  {
    "text": "that really sets the bar for developer experience but also like it's something you can truly rely on right it's it's a",
    "start": "2007480",
    "end": "2013720"
  },
  {
    "text": "true youing stripe a dependency of your company you can feel confident doing that and I think that's that's a part of",
    "start": "2013720",
    "end": "2019960"
  },
  {
    "text": "API Dev that really excites me I agree that is exciting so George teams who leverage Speak Easy are those who have",
    "start": "2019960",
    "end": "2026639"
  },
  {
    "text": "leaned all the way in on documenting a solid open API spec and mostly want to",
    "start": "2026639",
    "end": "2033039"
  },
  {
    "text": "be hands off of their sdks is that right precisely so you're coming to us because",
    "start": "2033039",
    "end": "2038080"
  },
  {
    "text": "you want to be hands off from that process you want to put all of your effort into documenting your API and",
    "start": "2038080",
    "end": "2044600"
  },
  {
    "text": "then you're trusting and relying on great quality tooling to turn that into code and documentation which is what",
    "start": "2044600",
    "end": "2050839"
  },
  {
    "text": "we're doing for you you're not meant to change or edit the code because it will be regenerated the next time you change",
    "start": "2050839",
    "end": "2057520"
  },
  {
    "text": "your open API so you ultimately put it in our hands once you've committed the changes to your open API it's it's Off",
    "start": "2057520",
    "end": "2064118"
  },
  {
    "text": "to the Races and you get a new release of your SDK you get a pull request review you will you will have the",
    "start": "2064119",
    "end": "2069520"
  },
  {
    "text": "opportunity to look at the contents of the code but quite often you can let it h along creating sdks for you or new",
    "start": "2069520",
    "end": "2076440"
  },
  {
    "text": "releases of your SDK every every time you change your API very cool well the thing that got me with Speak Easy that",
    "start": "2076440",
    "end": "2082760"
  },
  {
    "text": "really helped me understand it was that as George said it is hands off you can just focus on documenting your API via",
    "start": "2082760",
    "end": "2089358"
  },
  {
    "text": "the open API spec and you still have pull requests you still have visibility and in fact they will even hop into pull",
    "start": "2089359",
    "end": "2096000"
  },
  {
    "text": "requests with you to triage any sort of anomalies or issues that come from the",
    "start": "2096000",
    "end": "2101280"
  },
  {
    "text": "SDK generation and improve the back end of Speak Easy to make future releases",
    "start": "2101280",
    "end": "2107560"
  },
  {
    "text": "better for you I think this is so cool for teams who want to just be hands off of their sdks and focus on their product",
    "start": "2107560",
    "end": "2114000"
  },
  {
    "text": "focus on the core documentation around the open API spec but still have all",
    "start": "2114000",
    "end": "2119560"
  },
  {
    "text": "that awesome visibility okay so the next step is to go to Speak Easy API dodev",
    "start": "2119560",
    "end": "2126400"
  },
  {
    "text": "you can start off with one free SDK that's so cool because you can go there right now and try it out completely free",
    "start": "2126400",
    "end": "2134119"
  },
  {
    "text": "one free SDK let them know the change log sent you let them know JS party sent",
    "start": "2134119",
    "end": "2139200"
  },
  {
    "text": "you once again Speak Easy API",
    "start": "2139200",
    "end": "2144078"
  },
  {
    "text": "dodev so the next article we have is uh titled the long overdue problem coming",
    "start": "2149079",
    "end": "2155839"
  },
  {
    "text": "for some people in go10 23 this is kind of like an in the weeds article it's",
    "start": "2155839",
    "end": "2162160"
  },
  {
    "text": "talking about a specific compiler directive called go link name that the",
    "start": "2162160",
    "end": "2169440"
  },
  {
    "text": "go team is starting to really lock down yeah should we explain what it does yeah yes I was about to explain what it does",
    "start": "2169440",
    "end": "2175800"
  },
  {
    "text": "so uh go link name effectively allows you to uh reference an object or a",
    "start": "2175800",
    "end": "2182319"
  },
  {
    "text": "symbol or something like that that you would usually not be allowed to access so so for example you can use it to",
    "start": "2182319",
    "end": "2189280"
  },
  {
    "text": "access a unexported you know variable or function in a in another package so if",
    "start": "2189280",
    "end": "2197520"
  },
  {
    "text": "you have some package that has some type or some you know function Fu that would only usually be able to be called from",
    "start": "2197520",
    "end": "2203240"
  },
  {
    "text": "within that package and you have another package you can use this go link name directive to be like actually I want to",
    "start": "2203240",
    "end": "2209720"
  },
  {
    "text": "be able to call Fu from inside my package which obviously it's necessary",
    "start": "2209720",
    "end": "2215200"
  },
  {
    "text": "for the go team and for go to have this for a number of reasons but it also is",
    "start": "2215200",
    "end": "2222119"
  },
  {
    "text": "you know kind of not great because it means that now all of your the things",
    "start": "2222119",
    "end": "2227319"
  },
  {
    "text": "you meant to be private are not really private anymore you just kind of reach in and grab them and take them out and",
    "start": "2227319",
    "end": "2233800"
  },
  {
    "text": "use them yeah couple notes on that you do have to import unsafe to use this right so you are the go team is telling",
    "start": "2233800",
    "end": "2240960"
  },
  {
    "text": "you like hey this is gonna break yeah um so the the changes that they're making is that you can no longer just go in and",
    "start": "2240960",
    "end": "2248480"
  },
  {
    "text": "grab something out of any package in the next version of go 123 only things that",
    "start": "2248480",
    "end": "2254560"
  },
  {
    "text": "are explicitly marked as you being allowed to do this will allow you to do",
    "start": "2254560",
    "end": "2259880"
  },
  {
    "text": "it which I just find to be kind of a funny thing because then this is just like another way of exporting things",
    "start": "2259880",
    "end": "2266480"
  },
  {
    "text": "because it's like yeah it is a little bit weird yeah it's like I I get I get why we're doing this kind of gymnastics",
    "start": "2266480",
    "end": "2272040"
  },
  {
    "text": "to make this happen but it's just kind of hilarious yeah you see it a lot in the stand library library pulling in",
    "start": "2272040",
    "end": "2280400"
  },
  {
    "text": "stuff from the runtime right like if they're going to lock this down I wonder why there isn't just a runtime package",
    "start": "2280400",
    "end": "2287720"
  },
  {
    "text": "that is used to pull those things in like there's probably a good reason but I don't know why yeah and I think this",
    "start": "2287720",
    "end": "2293800"
  },
  {
    "text": "directive also was probably intended to be used for something else and people found they could use it for this thing",
    "start": "2293800",
    "end": "2299520"
  },
  {
    "text": "and they like oh just know use it for this other thing was also interesting like the particular situation of why",
    "start": "2299520",
    "end": "2308040"
  },
  {
    "text": "the author kind of stumbled upon this was because of the quickgo package that needed to get the default Cipher Suites",
    "start": "2308040",
    "end": "2314920"
  },
  {
    "text": "for tls1.3 and uh in go there was explicit Choice made that those Cipher Suites are",
    "start": "2314920",
    "end": "2320880"
  },
  {
    "text": "not configurable but also because of you know does your Hardware support AES does",
    "start": "2320880",
    "end": "2326920"
  },
  {
    "text": "your client want to use AES and a whole bunch of other things it's not like a",
    "start": "2326920",
    "end": "2332960"
  },
  {
    "text": "the default Cipher Suites might not even be like an actual like stable thing thing that you can reference which is",
    "start": "2332960",
    "end": "2339839"
  },
  {
    "text": "it's like an interesting little Quirk of this Quirk is that you know the reason why it's not an exposed variables",
    "start": "2339839",
    "end": "2346160"
  },
  {
    "text": "because it's an extremely complex thing that like can't really be determined until runtime and still might shift at",
    "start": "2346160",
    "end": "2352240"
  },
  {
    "text": "runtime so it winds up being like this this kind of odd odd space and that's",
    "start": "2352240",
    "end": "2357280"
  },
  {
    "text": "why it's not an exported thing but yeah just a little bit of a weirdness this whole situation is just weird overall",
    "start": "2357280",
    "end": "2365200"
  },
  {
    "text": "but yeah it's like a a little thing that's going to start break random things I'm sure there's tons of just people that have used this as some",
    "start": "2365200",
    "end": "2371319"
  },
  {
    "text": "sort of pack to get around something and now stuff is just going to start breaking and people are gonna have to",
    "start": "2371319",
    "end": "2376400"
  },
  {
    "text": "figure out how to fix that yeah and the proposal to do this I think is really interesting because and it Rus Cox",
    "start": "2376400",
    "end": "2382760"
  },
  {
    "text": "literally says hey this is going to break stuff but it puts us on a good path forward so it's worth breaking",
    "start": "2382760",
    "end": "2388839"
  },
  {
    "text": "those things which I think I agree with yeah I mean once again you probably shouldn't be able to just reach into",
    "start": "2388839",
    "end": "2394359"
  },
  {
    "text": "other packages and Tinker with their unexported things like",
    "start": "2394359",
    "end": "2399720"
  },
  {
    "text": "that's that's not generally what we want to happen in the language yeah I don't I",
    "start": "2399720",
    "end": "2405680"
  },
  {
    "text": "don't know if I have uh have much else to say about this article you got anything else not really I just think",
    "start": "2405680",
    "end": "2412000"
  },
  {
    "text": "it's interesting that it exists and that it works outside the standard Library yeah I mean a lot of",
    "start": "2412000",
    "end": "2417640"
  },
  {
    "text": "these directives are like interesting little tidbits of like yeah it's like I",
    "start": "2417640",
    "end": "2422920"
  },
  {
    "text": "I like once again I see why these things are are necessary I think like go link name is also used a lot when you want to refer to",
    "start": "2422920",
    "end": "2431240"
  },
  {
    "text": "something in assembly so you have like a function that's implemented in assembly use this directive and then it goes and",
    "start": "2431240",
    "end": "2437319"
  },
  {
    "text": "grabs the assembly code and when the Linker is doing its thing it connects them together even though there's no Go",
    "start": "2437319",
    "end": "2444079"
  },
  {
    "text": "version of that assembly so I imagine that usage of it will be left alone but",
    "start": "2444079",
    "end": "2451839"
  },
  {
    "text": "yeah no it is it's it's interesting that this that this ever worked and that this",
    "start": "2451839",
    "end": "2457359"
  },
  {
    "text": "used to work I think an interesting thing also for this proposal to lock it down the 1.23 iterators introduced uh",
    "start": "2457359",
    "end": "2465720"
  },
  {
    "text": "co- routine functionality for iterators right so you don't have to call out to a separate go routine and and sync back up",
    "start": "2465720",
    "end": "2473160"
  },
  {
    "text": "um and they say this will not be able these new co- routine functionalities",
    "start": "2473160",
    "end": "2478440"
  },
  {
    "text": "will not be able to be link names link named now or ever so they've they've",
    "start": "2478440",
    "end": "2483800"
  },
  {
    "text": "shut that down with this change too so fast yeah like little little things that",
    "start": "2483800",
    "end": "2490079"
  },
  {
    "text": "probably affect a small very small percentage of the of the go Community as a whole but might have profound impacts",
    "start": "2490079",
    "end": "2496599"
  },
  {
    "text": "moving forward okay and I think the last last article we have in our list is",
    "start": "2496599",
    "end": "2502839"
  },
  {
    "text": "called uh go don't name packages common nouns which I don't I don't know if I",
    "start": "2502839",
    "end": "2509560"
  },
  {
    "text": "agree with this one this one's basically the author is saying like find a a",
    "start": "2509560",
    "end": "2514720"
  },
  {
    "text": "different name a longer name uh multiple noun name for things uh they give the uh",
    "start": "2514720",
    "end": "2521839"
  },
  {
    "text": "example of the time rate package uh which is in go.org X and they basically",
    "start": "2521839",
    "end": "2528920"
  },
  {
    "text": "argue like hey like rate is a really good variable name so it shouldn't be a",
    "start": "2528920",
    "end": "2534720"
  },
  {
    "text": "package name and you should call the package like rate limiter instead and I think and I think I don't agree with it",
    "start": "2534720",
    "end": "2541920"
  },
  {
    "text": "I think like just because something might be a good variable name doesn't",
    "start": "2541920",
    "end": "2547640"
  },
  {
    "text": "necessarily mean you shouldn't use it as a package name because at the end of the day packages are effectively variables",
    "start": "2547640",
    "end": "2554839"
  },
  {
    "text": "yeah I mean I agree with that but the number of times I've accidentally called",
    "start": "2554839",
    "end": "2560920"
  },
  {
    "text": "a variable URL with the URL package imported and been like wait why isn't this working yeah but like what else",
    "start": "2560920",
    "end": "2566920"
  },
  {
    "text": "would you call the URL package like I don't have an answer to that either but what do you call the URL that you're",
    "start": "2566920",
    "end": "2573200"
  },
  {
    "text": "building you right like yeah I guess you're right I don't know uh the the latter part of",
    "start": "2573200",
    "end": "2580680"
  },
  {
    "text": "the section he says in all of his internal packages he generally prefixes them with like a letter like with P in",
    "start": "2580680",
    "end": "2588280"
  },
  {
    "text": "this case for crunchy platform right I don't hate this I mean I hate the name",
    "start": "2588280",
    "end": "2593839"
  },
  {
    "text": "of these packages in general like I don't like naming a package server or DB",
    "start": "2593839",
    "end": "2603079"
  },
  {
    "text": "or client just feels lazy like it it feels like your your code base isn't",
    "start": "2603079",
    "end": "2609599"
  },
  {
    "text": "structured well if you don't have like a delineation for the name like I like what if I look at a package client then",
    "start": "2609599",
    "end": "2616440"
  },
  {
    "text": "what is this I guess if you're using the rest of the import path to say like what type of client this is that works but I",
    "start": "2616440",
    "end": "2624119"
  },
  {
    "text": "I guess it's just an outcrop too of me not liking having lots of small packages and would rather just have one big",
    "start": "2624119",
    "end": "2629440"
  },
  {
    "text": "package and have it like oh you have like the you know maybe it's the platform or the C platform package that",
    "start": "2629440",
    "end": "2636839"
  },
  {
    "text": "has a client in it instead of being like P clients I guess there's times when",
    "start": "2636839",
    "end": "2642480"
  },
  {
    "text": "this will crop up of like you you have to have a package with his name for some reason or another but I just think it's a bad bad pattern yeah like this shows",
    "start": "2642480",
    "end": "2649760"
  },
  {
    "text": "up for me like in air packages right like a lot of our services like have a",
    "start": "2649760",
    "end": "2655280"
  },
  {
    "text": "like an in erors package where we Define a bunch of our Standard air Behavior that's shared between different like",
    "start": "2655280",
    "end": "2662880"
  },
  {
    "text": "subservices and you don't want to call it airs cuzz then you have to if you're going to call it SS I think you have to",
    "start": "2662880",
    "end": "2668160"
  },
  {
    "text": "implement all of the General Air functions from airs right so yeah we end up calling it like in airs um I don't",
    "start": "2668160",
    "end": "2676200"
  },
  {
    "text": "know maybe that's just a foot gun I'm building right now that will come back to bite me but I think there's some",
    "start": "2676200",
    "end": "2683680"
  },
  {
    "text": "Merit to it yeah like I do think if you're going to have a package called",
    "start": "2683680",
    "end": "2689040"
  },
  {
    "text": "the same thing as like a commonly used like standard package you should at least Implement all of the like methods",
    "start": "2689040",
    "end": "2695880"
  },
  {
    "text": "and stuff inside that package yeah yeah it it does feel like this is just another out crup of like the naming",
    "start": "2695880",
    "end": "2701240"
  },
  {
    "text": "is hard problem in computer science like it's it's really challenging to name",
    "start": "2701240",
    "end": "2706480"
  },
  {
    "text": "things well I I guess in general saying like I think I think don't name things",
    "start": "2706480",
    "end": "2712400"
  },
  {
    "text": "with a noun is like too too blankety it's like too much of a wide perview I think it needs to be scoped down to to",
    "start": "2712400",
    "end": "2719520"
  },
  {
    "text": "something else what else I don't know but I like using nouns for packaging I mean if there was any any hard and fast",
    "start": "2719520",
    "end": "2727000"
  },
  {
    "text": "rules for naming it wouldn't be hard right like if we could create a rule set",
    "start": "2727000",
    "end": "2732760"
  },
  {
    "text": "that made naming easy I just don't think there is one yeah but I also I hate long",
    "start": "2732760",
    "end": "2738160"
  },
  {
    "text": "package names though oh yeah yeah so I would rather have it be short and maybe",
    "start": "2738160",
    "end": "2745559"
  },
  {
    "text": "not as obvious than have a package called like this is my",
    "start": "2745559",
    "end": "2752359"
  },
  {
    "text": "server yeah I I don't think it should but that's the thing of like why do you have a server package like why isn't it",
    "start": "2752359",
    "end": "2760319"
  },
  {
    "text": "just server is a type in another package it's like it's not like the HTTP server",
    "start": "2760319",
    "end": "2766440"
  },
  {
    "text": "package it's HTTP dos server and HTTP do client because it's the HTTP package so",
    "start": "2766440",
    "end": "2773280"
  },
  {
    "text": "I feel like that's the sort of that's why why I don't really like you know the suggestion of like we should call it rate limiter instead of you know the",
    "start": "2773280",
    "end": "2780119"
  },
  {
    "text": "rate package but then there's other rate things you could have in there besides a rate limiter so it's yeah I I guess it's",
    "start": "2780119",
    "end": "2787839"
  },
  {
    "text": "just not like if it's a very general type of noun that you would use perhaps",
    "start": "2787839",
    "end": "2793640"
  },
  {
    "text": "you need to come up with a more specific thing you want to call it or make up a name right take a name from another",
    "start": "2793640",
    "end": "2799280"
  },
  {
    "text": "language of what that thing is and then use that I've done that too many times in the past I will say what not to do is",
    "start": "2799280",
    "end": "2806520"
  },
  {
    "text": "just give it a random name that means nothing like we have a lot of like things where it's like cat dog you know",
    "start": "2806520",
    "end": "2813640"
  },
  {
    "text": "named after an old TV show yeah and you have no no idea what it does don't do",
    "start": "2813640",
    "end": "2819200"
  },
  {
    "text": "that yeah if if you want to go with like the the fun theme names yeah you got to really dig into the lore whatever it has",
    "start": "2819200",
    "end": "2826240"
  },
  {
    "text": "to all be related like yeah that's what you like like at a previous job we were",
    "start": "2826240",
    "end": "2831599"
  },
  {
    "text": "building something and for some reason we called it the Matrix so I used Matrix",
    "start": "2831599",
    "end": "2838400"
  },
  {
    "text": "characters for all of the different services but it fit with what those characters were in the franchise so it",
    "start": "2838400",
    "end": "2844200"
  },
  {
    "text": "like made sense compar it was a whole thing but like you got to you got to go all in if you want to use some sort of",
    "start": "2844200",
    "end": "2849800"
  },
  {
    "text": "reference like that in throughout your code yeah we had one called API card",
    "start": "2849800",
    "end": "2855319"
  },
  {
    "text": "like appic card like peard the Star Trek Captain and that one like worked because",
    "start": "2855319",
    "end": "2861359"
  },
  {
    "text": "it started with API oh yeah ape card yeah no that I mean that's I think",
    "start": "2861359",
    "end": "2867000"
  },
  {
    "text": "that's how like they kind of stumbled into go please is they had go LSP and they're like oh we can just rearrange",
    "start": "2867000",
    "end": "2874240"
  },
  {
    "text": "some of these letters so some sometimes stuff like that falls out yeah go pleas like clear what it does well I guess",
    "start": "2874240",
    "end": "2880160"
  },
  {
    "text": "kind of I guess I knew it as GOP before go please yeah but it's not like so it might be confusing yeah it has all the",
    "start": "2880160",
    "end": "2886240"
  },
  {
    "text": "right letters yeah but it's easy to like once you look at you're like oh that's what this is okay yeah I'm not I'm not",
    "start": "2886240",
    "end": "2892640"
  },
  {
    "text": "completely sold on the don't use common nouns for package names I don't it",
    "start": "2892640",
    "end": "2899079"
  },
  {
    "text": "doesn't have enough Nuance for me not it's not subtle enough for me but once",
    "start": "2899079",
    "end": "2904280"
  },
  {
    "text": "again if it works for you works in your code base if you like the letter pre fixing uh I'd say uh go for it as long",
    "start": "2904280",
    "end": "2909880"
  },
  {
    "text": "as like everybody on your team is on board with that as well yeah it's like any other pattern like don't just start",
    "start": "2909880",
    "end": "2916200"
  },
  {
    "text": "using it like if you're G to use it use it and document it and tell everyone to use it yeah do we have anything else to",
    "start": "2916200",
    "end": "2923640"
  },
  {
    "text": "say about not using package names that are common nouns not really how do you",
    "start": "2923640",
    "end": "2928720"
  },
  {
    "text": "feel about underscores in package names G no I don't I don't want I don't want to",
    "start": "2928720",
    "end": "2935400"
  },
  {
    "text": "be typing it underscore when I'm typing package that's just no what about underscores and file names that aren't",
    "start": "2935400",
    "end": "2940480"
  },
  {
    "text": "test that's fine you think that's fine yeah yeah so you won't be able to like read the file like I only have to type",
    "start": "2940480",
    "end": "2947200"
  },
  {
    "text": "the file like once and the file doesn't have like I'm not writing the file name in my code all the time can you even put an underscore in a package name I don't",
    "start": "2947200",
    "end": "2953720"
  },
  {
    "text": "even know yeah you can't put a hyphen but you can't put an underscore at least I'm reasonably sure you can put an",
    "start": "2953720",
    "end": "2961240"
  },
  {
    "text": "underscore but yeah I know I yeah you can't put a you can't put a hypen but you can't put an underscore",
    "start": "2961240",
    "end": "2967240"
  },
  {
    "text": "but yeah I like if your package name is getting too long I'm like there there's something wrong like yeah got to rethink",
    "start": "2967240",
    "end": "2973720"
  },
  {
    "text": "all of this so yeah once again you'll be typing that thing out all the time",
    "start": "2973720",
    "end": "2978960"
  },
  {
    "text": "typing underscores sucks I don't like typing underscores that's why I don't want in a package name once again it also means that your package name is",
    "start": "2978960",
    "end": "2984839"
  },
  {
    "text": "Long which means that your line length is going to get long so you're using Long Function names there too it's like",
    "start": "2984839",
    "end": "2990119"
  },
  {
    "text": "a yeah yeah I do I do think your your idea that if your package name is getting too long you're probably doing",
    "start": "2990119",
    "end": "2996200"
  },
  {
    "text": "something right and you should figure out what that is that you're doing wrong but yeah that's all I",
    "start": "2996200",
    "end": "3002790"
  },
  {
    "text": "[Music] got opion you I actually think should",
    "start": "3002790",
    "end": "3010040"
  },
  {
    "text": "probably leave un",
    "start": "3010040",
    "end": "3016330"
  },
  {
    "text": "[Music] opinion huzzah unpopular opinions all",
    "start": "3016330",
    "end": "3023400"
  },
  {
    "text": "right Ian what's your unpopular opinion can you go first I'm still thinking",
    "start": "3023400",
    "end": "3028640"
  },
  {
    "text": "got make this complicated okay um yes I I think I I think I do want to turn this",
    "start": "3030000",
    "end": "3035599"
  },
  {
    "text": "into uh an episode idea but I have so I",
    "start": "3035599",
    "end": "3041160"
  },
  {
    "text": "have finally I think figured out why I'm I don't want to say I don't like I think",
    "start": "3041160",
    "end": "3046440"
  },
  {
    "text": "it's better to phrase it as like I'm me on Rust like I figured out why I'm meh",
    "start": "3046440",
    "end": "3053400"
  },
  {
    "text": "on Rust and the reason I'm like kind of meh on Rust which is like not like a",
    "start": "3053400",
    "end": "3059240"
  },
  {
    "text": "strong dislike but like a a slight dislike of rust or like not not even a dislike of rust it's mostly a a",
    "start": "3059240",
    "end": "3065280"
  },
  {
    "text": "criticism of the way that rust is sold um is because of this other paper I was",
    "start": "3065280",
    "end": "3071000"
  },
  {
    "text": "reading by Leslie Lamport and let me just like once again pull up this quote",
    "start": "3071000",
    "end": "3077160"
  },
  {
    "text": "because it's I I I want to get it right because it's just once again a deep and subtle cut and I like it a lot okay and",
    "start": "3077160",
    "end": "3084839"
  },
  {
    "text": "in this paper it's a the paper titled if you want to read it computation and state machines and I'll just read this",
    "start": "3084839",
    "end": "3090440"
  },
  {
    "text": "this paragraph in the preface and then I'll talk about why this is the reason why I don't why me on Rust so he says",
    "start": "3090440",
    "end": "3098599"
  },
  {
    "text": "for quite a while I've been disturbed by the emphasis on language in computer science one result of that emphasis is",
    "start": "3098599",
    "end": "3105319"
  },
  {
    "text": "programmers who are C++ experts but can't write programs that do what they're supposed to the typical computer",
    "start": "3105319",
    "end": "3111119"
  },
  {
    "text": "science response is that programmers need to use the right programming specification or development language",
    "start": "3111119",
    "end": "3116359"
  },
  {
    "text": "and instead of or in addition to C++ the typical industrial response is",
    "start": "3116359",
    "end": "3121599"
  },
  {
    "text": "to provide the programmer with better debugging tools this is the this is the Crux of the Crux of it here so uh the",
    "start": "3121599",
    "end": "3129000"
  },
  {
    "text": "the typical industrial response is to provide the programmer with better debugging tools on the theory that we",
    "start": "3129000",
    "end": "3134640"
  },
  {
    "text": "can obtain good programs by putting a monkey at a keyboard and automatically finding the errors in its code and for",
    "start": "3134640",
    "end": "3141720"
  },
  {
    "text": "one I find that paragraph that last sentence to be hilarious but I think think that also like gets at why I've",
    "start": "3141720",
    "end": "3149480"
  },
  {
    "text": "kind of disliked this whole Aura of like type safety and memory safety and all of",
    "start": "3149480",
    "end": "3155000"
  },
  {
    "text": "these other type of safeties will like fix the problems that we have with our with our code and with our software and",
    "start": "3155000",
    "end": "3161079"
  },
  {
    "text": "with our programs it's like the it's a theory based in like I think a misunderstanding of where the problems",
    "start": "3161079",
    "end": "3168119"
  },
  {
    "text": "with modern-day software are and with where software development is and I",
    "start": "3168119",
    "end": "3173559"
  },
  {
    "text": "think that rust and the kind of E EOS around it not saying that the language",
    "start": "3173559",
    "end": "3179319"
  },
  {
    "text": "itself is not good and useful I think it is good and useful but I think that argument of like we need rust because C",
    "start": "3179319",
    "end": "3186839"
  },
  {
    "text": "is not safe enough so if we just had a memory safe version of C then our",
    "start": "3186839",
    "end": "3192480"
  },
  {
    "text": "problems would be fixed and I know there's there's Nuance like lots of people have much more nuan argument of that like it will solve some of those",
    "start": "3192480",
    "end": "3197880"
  },
  {
    "text": "memory safety problems and then there's other problems we have to solve as well but the big selling point seems to be",
    "start": "3197880",
    "end": "3203119"
  },
  {
    "text": "feels like it is the way to fix the problem with so much of our software is to add this memory safety thing to have",
    "start": "3203119",
    "end": "3209400"
  },
  {
    "text": "this this borrow Checker that exists in Rust and by having this we will solve some large class of problems and issues",
    "start": "3209400",
    "end": "3216440"
  },
  {
    "text": "that we have and I think what that does is it it masks that problem that Leslie Lamport points out of like well we're",
    "start": "3216440",
    "end": "3223440"
  },
  {
    "text": "not getting the programs right we're not writing the kind of we're not starting from the correct point and if you don't",
    "start": "3223440",
    "end": "3229000"
  },
  {
    "text": "start from the correct point then you're just trying to like iterate your way toward a good solution at the end of the",
    "start": "3229000",
    "end": "3235040"
  },
  {
    "text": "day which is like the kind of you know the whole monkey typing code thing is a I think a reference to the you know you",
    "start": "3235040",
    "end": "3241319"
  },
  {
    "text": "know if you give an infinite number of monkeys typewriters they'll eventually write Shakespeare and I think that",
    "start": "3241319",
    "end": "3247319"
  },
  {
    "text": "that's a lot of how we do treat software as was like well if you just keep banging at it eventually you'll shove",
    "start": "3247319",
    "end": "3253480"
  },
  {
    "text": "out the right thing and uh we can bang on things faster if we have these tools",
    "start": "3253480",
    "end": "3259000"
  },
  {
    "text": "that tell us when we're clearly wrong and I think what what we should be trying to do is teach software engineers",
    "start": "3259000",
    "end": "3266440"
  },
  {
    "text": "specifically and I think computer Engineers as a whole to actually think like I think that's the problem we have",
    "start": "3266440",
    "end": "3272079"
  },
  {
    "text": "no one wants to sit down and think deeply about the problems we're trying to solve and we lack some of the",
    "start": "3272079",
    "end": "3277480"
  },
  {
    "text": "training and the languages that we would likely use to do this thinking and then this documenting of things mostly like",
    "start": "3277480",
    "end": "3283680"
  },
  {
    "text": "math like you can represent a lot of what we want to represent with simple math and we kind of run to a language",
    "start": "3283680",
    "end": "3289599"
  },
  {
    "text": "instead which also hearkens back to that thing of like how would you describe impressionist painting like oh in French",
    "start": "3289599",
    "end": "3295599"
  },
  {
    "text": "right like we we run to programming languages to solve the problems when the problems actually have to deal with the",
    "start": "3295599",
    "end": "3301680"
  },
  {
    "text": "fact that we're just not writing correct software we're not writing correct programs and we we don't even have the",
    "start": "3301680",
    "end": "3307359"
  },
  {
    "text": "the frame of reference to know what correct would mean in that case either like we never sat down and said this is",
    "start": "3307359",
    "end": "3313960"
  },
  {
    "text": "what we're actually trying to do and so I think like when we when we try and run",
    "start": "3313960",
    "end": "3319799"
  },
  {
    "text": "away from languages like C which is what it feels like we're trying to do some of the time like people like no one should have right C no one should ever do this",
    "start": "3319799",
    "end": "3326160"
  },
  {
    "text": "it's like saying like you know English is a messed up language and there's a lot of weird Oddities with it so we",
    "start": "3326160",
    "end": "3331480"
  },
  {
    "text": "should be moving everybody to espiranto and nobody should write or speak in English anymore because English is so",
    "start": "3331480",
    "end": "3337680"
  },
  {
    "text": "bad and it's like that's a that's a silly argument right that's not it's not just impractical it's it's rather silly",
    "start": "3337680",
    "end": "3343599"
  },
  {
    "text": "because like the problems with English don't usually have to do with like the structural language itself it has to do with like the concepts like are we",
    "start": "3343599",
    "end": "3351039"
  },
  {
    "text": "talking about you know Concepts incorrectly in English and I think that's the thing with programming and with software",
    "start": "3351039",
    "end": "3356760"
  },
  {
    "text": "do we have the concepts right are we talking about the concepts right and it's like this is one of the reasons why",
    "start": "3356760",
    "end": "3362680"
  },
  {
    "text": "I like go is because if you do sit down and you do really think about what you're building and how you're building",
    "start": "3362680",
    "end": "3368079"
  },
  {
    "text": "it and then you you document that and you go through this regular process of developing it go is a really nice",
    "start": "3368079",
    "end": "3375039"
  },
  {
    "text": "language to just Express that simply and easily it's a language that just doesn't really get in your way and that when you",
    "start": "3375039",
    "end": "3381520"
  },
  {
    "text": "need some help there's some tooling there for you but you don't have to use the tooling",
    "start": "3381520",
    "end": "3386760"
  },
  {
    "text": "necessarily um and it also makes it easier to do it on a communal level it has all of those things right go",
    "start": "3386760",
    "end": "3393000"
  },
  {
    "text": "popularized go fumed which is not like a you know correcting somebody's code but it's making it easier for all of us to",
    "start": "3393000",
    "end": "3400280"
  },
  {
    "text": "read everybody else's code so we can work collaborate collaboratively together and so that we can see you know",
    "start": "3400280",
    "end": "3405799"
  },
  {
    "text": "the obvious mistakes here and there between like this is what you were supposed to do and this is what it's",
    "start": "3405799",
    "end": "3410960"
  },
  {
    "text": "actually doing so once again it's not that I don't think Russ should exist I think it's cool that Russ exists I think all of these features that it has are",
    "start": "3410960",
    "end": "3417240"
  },
  {
    "text": "very Nifty but I think that that selling point of it really just soured the",
    "start": "3417240",
    "end": "3422280"
  },
  {
    "text": "language for me because it's so much of that it will replace C or we have to rewrite everything in Rust because of",
    "start": "3422280",
    "end": "3429039"
  },
  {
    "text": "blah blah blah blah blah I think it's like much more advantageous for us as an industry to focus on how do we actually",
    "start": "3429039",
    "end": "3435799"
  },
  {
    "text": "get people to write software correctly and then also how do we bring down the cost of software which I think are are",
    "start": "3435799",
    "end": "3443240"
  },
  {
    "text": "two of the same thing because right now I think we do have you know too many software Engineers for this amount of",
    "start": "3443240",
    "end": "3449480"
  },
  {
    "text": "software that we're producing because for the most part a lot of us are just monkeys banging on keyboards being like",
    "start": "3449480",
    "end": "3455520"
  },
  {
    "text": "Oh yeah I'm trying to write this thing and oh the compiler got mad at me oh I guess I can't do it that way oh I can't and you just kind of inflate the number",
    "start": "3455520",
    "end": "3462319"
  },
  {
    "text": "of of people you have doing software and even though you're not really doing the thinking part of it I think this is also",
    "start": "3462319",
    "end": "3469640"
  },
  {
    "text": "what leads to people believing that you can replace software Engineers with AI",
    "start": "3469640",
    "end": "3474720"
  },
  {
    "text": "with kind of like a more advanced version of the current AO we have which makes sense if if you under if you",
    "start": "3474720",
    "end": "3480799"
  },
  {
    "text": "believe that the whole we're just monkeys banging on keyboards thing is a reality and like yes as long as we can",
    "start": "3480799",
    "end": "3487520"
  },
  {
    "text": "correct the output of the AI it will be a much faster monkey banging on the keyboard than a human could ever be but",
    "start": "3487520",
    "end": "3492960"
  },
  {
    "text": "if you recognize that like no we actually need to have more thoughts in there than just blindly typing blindly",
    "start": "3492960",
    "end": "3499480"
  },
  {
    "text": "smashing the keys then it's clear that AI is not going to be able to do those things because AI can't think but yeah",
    "start": "3499480",
    "end": "3505960"
  },
  {
    "text": "that's that's my very long-winded reasoning for why I'm kind of meh on Rust still think it's a cool language",
    "start": "3505960",
    "end": "3511680"
  },
  {
    "text": "but like the the the way that it's been propositioned I think is what just sours",
    "start": "3511680",
    "end": "3517880"
  },
  {
    "text": "me on it I think I agree with a lot of you said but I definitely have a bit of a different perspective on it like maybe",
    "start": "3517880",
    "end": "3524039"
  },
  {
    "text": "rust is saying that you know this borrow Checker this memory safety is going to save us all and it's what has to happen",
    "start": "3524039",
    "end": "3531039"
  },
  {
    "text": "but in my perspective like we're all human we're all going to we're all going to mess up and we're all going to design",
    "start": "3531039",
    "end": "3537400"
  },
  {
    "text": "things poorly or write poor code at some points and what what these memory safety",
    "start": "3537400",
    "end": "3542839"
  },
  {
    "text": "features and what Russ is trying to do is just minimize the impact of that mistake right like if I'm just writing C",
    "start": "3542839",
    "end": "3550240"
  },
  {
    "text": "and I let a an index overflow and read arbitrary memory like that has big",
    "start": "3550240",
    "end": "3556000"
  },
  {
    "text": "consequences but if I just can't do that you know I don't know I mean I guess",
    "start": "3556000",
    "end": "3561319"
  },
  {
    "text": "like there's there's kind of two sides to that too where it's like how much",
    "start": "3561319",
    "end": "3566720"
  },
  {
    "text": "like how many of those types of problems are the problems we're having I think it's relatively little that like the kind of memory like corruption problems",
    "start": "3566720",
    "end": "3573799"
  },
  {
    "text": "we have are like the big things I think a lot of the time even when there are memory corruption problems when there's like you know buffer overruns and that a",
    "start": "3573799",
    "end": "3580599"
  },
  {
    "text": "lot of that gets patched and the problem is that people don't update the version of the software they're using so they're",
    "start": "3580599",
    "end": "3586240"
  },
  {
    "text": "using some unpatched version that has to exploit on it which is part of the the larger thing but I also think there's we",
    "start": "3586240",
    "end": "3592039"
  },
  {
    "text": "like to think about things as if we have infinite resour resources and we can do",
    "start": "3592039",
    "end": "3597760"
  },
  {
    "text": "things infinitely fast but there there's a reality that we can't really be",
    "start": "3597760",
    "end": "3604599"
  },
  {
    "text": "spending all like huge amounts of Industry effort on developing these things but also be spending huge amounts",
    "start": "3604599",
    "end": "3611319"
  },
  {
    "text": "of Industry effort on really rethinking and uh redoing how we teach software",
    "start": "3611319",
    "end": "3617839"
  },
  {
    "text": "engineers and then retraining the entire industry right like we're not doing that right we're not we're not shifting",
    "start": "3617839",
    "end": "3625119"
  },
  {
    "text": "toward that type of thing where we actually push software Engineers to be deep thinkers because that is a very",
    "start": "3625119",
    "end": "3630720"
  },
  {
    "text": "hard very resource intensive problem like you know it takes a lot of energy to teach someone how to think critically",
    "start": "3630720",
    "end": "3637119"
  },
  {
    "text": "it's not a simple thing to do and we just aren't doing it because I think we",
    "start": "3637119",
    "end": "3642520"
  },
  {
    "text": "can get along well enough since we have these tools that make it so we can kind",
    "start": "3642520",
    "end": "3647760"
  },
  {
    "text": "of produce software at least somewhat decently because we have all these tools",
    "start": "3647760",
    "end": "3653520"
  },
  {
    "text": "and all these protections where it's like no like you have to see and we actually have to find a way to teach everybody to use see well that's not I",
    "start": "3653520",
    "end": "3661079"
  },
  {
    "text": "don't think that's an impossible thing to do right I don't think that's an impossibility that most software Engineers should be able to learn and",
    "start": "3661079",
    "end": "3666680"
  },
  {
    "text": "understand C I don't think it's I don't think it's an impossible thing that most people couldn't learn and understand C I",
    "start": "3666680",
    "end": "3672400"
  },
  {
    "text": "think that we of an industry have just given up on that being a possibility because we know we have these little",
    "start": "3672400",
    "end": "3678359"
  },
  {
    "text": "languages that are easier and because we think that we can solve the problem through things like oh we just add this",
    "start": "3678359",
    "end": "3683799"
  },
  {
    "text": "one more type of safety if we add type safety we had memory safety we had you know what have you that it will be we",
    "start": "3683799",
    "end": "3689880"
  },
  {
    "text": "will get to the point where everybody will be able to write software so I think it's the these things might",
    "start": "3689880",
    "end": "3695799"
  },
  {
    "text": "actually be a little bit at odds with each other but I definitely think like we won't fix this as an industry if we",
    "start": "3695799",
    "end": "3701359"
  },
  {
    "text": "keep diluting ourselves into thinking that like the solution to C is rust or the solution to the problems we have",
    "start": "3701359",
    "end": "3707280"
  },
  {
    "text": "with C is rust because we just won't we won't fix the problems at the end of the day I mean it it it hearkens back to",
    "start": "3707280",
    "end": "3713039"
  },
  {
    "text": "like a thing that I've also been thinking about a lot lately with like a few years ago we as an industry went",
    "start": "3713039",
    "end": "3719240"
  },
  {
    "text": "through this whole thing of saying like oh we need to get rid of these harmful quotequote harmful words onever code",
    "start": "3719240",
    "end": "3724960"
  },
  {
    "text": "basis so master and master enslave and Blacklist and wh list and all these things and there's a huge hubub and",
    "start": "3724960",
    "end": "3731279"
  },
  {
    "text": "people filed a bunch of PRS and we eliminated a bunch of these words and like you know get we we changed it it's",
    "start": "3731279",
    "end": "3737440"
  },
  {
    "text": "no longer Master as default it's main right we went through all of this effort to change all of these things in this in",
    "start": "3737440",
    "end": "3743200"
  },
  {
    "text": "this idea that like oh these words using these words are hard armful to you know people of color especially black people",
    "start": "3743200",
    "end": "3749079"
  },
  {
    "text": "and they shouldn't have to see them every day and all of this and I push back a lot and that at the time I was",
    "start": "3749079",
    "end": "3754839"
  },
  {
    "text": "like this is not this is not where we need to be spending our time and people said well we got to do something we should be doing some things and like we",
    "start": "3754839",
    "end": "3760000"
  },
  {
    "text": "can do this and we can do those other things and then you look at the same industry as as the same people and we're",
    "start": "3760000",
    "end": "3766559"
  },
  {
    "text": "just like you know fullon embracing AI right now and if you go look at the",
    "start": "3766559",
    "end": "3771880"
  },
  {
    "text": "underpinnings of how all of this data is cleaned how these things get trained there's a lot of like subjugation of",
    "start": "3771880",
    "end": "3779480"
  },
  {
    "text": "like especially people of color going on a lot of destroying of people's mental health and oppression and like where is",
    "start": "3779480",
    "end": "3786279"
  },
  {
    "text": "that energy from our industry to push back on those things right we said well we'll get rid of these things this is the first step toward fixing a larger",
    "start": "3786279",
    "end": "3792799"
  },
  {
    "text": "problem but then the follow-through isn't there I think that's the same thing that sort of happens in obviously",
    "start": "3792799",
    "end": "3798760"
  },
  {
    "text": "a different context for these other things we like oh we got to make software better so the way we make software better is by fixing the",
    "start": "3798760",
    "end": "3804680"
  },
  {
    "text": "languages but the languages aren't the problem it's the concepts and understanding that's the problem and that's where the rust isn't helping but",
    "start": "3804680",
    "end": "3811960"
  },
  {
    "text": "it's not just rust it's like any of these languages that are like we will by making this language better we will make",
    "start": "3811960",
    "end": "3817599"
  },
  {
    "text": "it so you can write better software and like that's addressing the wrong problem so I guess at the end of the day you're",
    "start": "3817599",
    "end": "3823559"
  },
  {
    "text": "saying it's not the languages that's the problem it's us that's the problem yeah the engineer once again I think rust is",
    "start": "3823559",
    "end": "3830079"
  },
  {
    "text": "a cool I think I would agree with that yeah and it's like I think rust is a cool language I think people should use rust I think we should have",
    "start": "3830079",
    "end": "3836240"
  },
  {
    "text": "memory safety and I think the Barrow cheer is a really cool thing and I think we should have type safety I think we should have all these tools that help us write software better but we shouldn't",
    "start": "3836240",
    "end": "3844359"
  },
  {
    "text": "forget that the primary problem with software today is not that we don't have memory safety like we've been able to",
    "start": "3844359",
    "end": "3851039"
  },
  {
    "text": "write many of systems with really good without having memory safety we've been able to write many of system without",
    "start": "3851039",
    "end": "3856680"
  },
  {
    "text": "having type safety right at the end of the day your computer also like you know assembly doesn't have any of these things that's what's running everything",
    "start": "3856680",
    "end": "3863160"
  },
  {
    "text": "right the the instructions at the end of the day don't have these protection on them so it's like not having these",
    "start": "3863160",
    "end": "3868799"
  },
  {
    "text": "things shouldn't preclude us from writing good software so we should focus on what are the things that will help us",
    "start": "3868799",
    "end": "3874079"
  },
  {
    "text": "write good software which I I think that this could be a part of it once we actually teach people how to think about",
    "start": "3874079",
    "end": "3879839"
  },
  {
    "text": "code and how to think about their programs so because I think if you actually do sit down and you spend time a lot of time thinking you wind up with",
    "start": "3879839",
    "end": "3885640"
  },
  {
    "text": "massively simpler solutions to problems and if you kind of aggregate those things together you wind up with",
    "start": "3885640",
    "end": "3892079"
  },
  {
    "text": "massively simpler larger code bases at the end of the day cuz if you don't the problem just snowballs like once you",
    "start": "3892079",
    "end": "3897520"
  },
  {
    "text": "already in a mess it's so much harder to get out of that mess yeah so we'll see",
    "start": "3897520",
    "end": "3902839"
  },
  {
    "text": "how unpopular that is I mean it'll probably be pretty popular with go people because they just said you know go is the is the ideal language for",
    "start": "3902839",
    "end": "3908520"
  },
  {
    "text": "writing good software well not ideal it's one of the good ones I would say like lisp is probably one of the more",
    "start": "3908520",
    "end": "3914000"
  },
  {
    "text": "you know ideal languages um for the translation at least from the view of computation if you want to do it",
    "start": "3914000",
    "end": "3920440"
  },
  {
    "text": "rigorously into actual code you can run I think I do have an unpopular opin okay",
    "start": "3920440",
    "end": "3925720"
  },
  {
    "text": "go for it and this is something I want to do an episode on I guess the premise",
    "start": "3925720",
    "end": "3930799"
  },
  {
    "text": "is learning go isn't easy I know we say that a lot like oh go is easy you can",
    "start": "3930799",
    "end": "3935880"
  },
  {
    "text": "you can get it down in an afternoon and I would go on to expand that learning any new language isn't easy and it's not",
    "start": "3935880",
    "end": "3943240"
  },
  {
    "text": "when we say learning a language I think a lot of people think learning the syntax of a language right like how to",
    "start": "3943240",
    "end": "3949160"
  },
  {
    "text": "do a for Loop how to assign a variable and I think that's the not even the tip of the iceberg it's just the pointy part",
    "start": "3949160",
    "end": "3955240"
  },
  {
    "text": "on Top and nothing else right learning a language is learning its paradigms learning like how its normal libraries",
    "start": "3955240",
    "end": "3961839"
  },
  {
    "text": "work it's learning how to write idiomatic code in that language and that's not like you're never going to",
    "start": "3961839",
    "end": "3968440"
  },
  {
    "text": "get that overnight like that's all going to come with experience so pretending that any language is easy to learn I",
    "start": "3968440",
    "end": "3974880"
  },
  {
    "text": "think does the whole Community a disservice right acting like you can jump into a language and immediately",
    "start": "3974880",
    "end": "3981000"
  },
  {
    "text": "write good code is is I don't think realistic at least it's not realistic for me",
    "start": "3981000",
    "end": "3986119"
  },
  {
    "text": "you just don't know enough to know if you're writing good code when you first jump in so learning any programing",
    "start": "3986119",
    "end": "3991279"
  },
  {
    "text": "language is not easy learning the syntax is easy the rest is hard yeah I think I",
    "start": "3991279",
    "end": "3996359"
  },
  {
    "text": "I agree with that because I think like the way I was just kind of Translating that in my mind was like if you think",
    "start": "3996359",
    "end": "4002240"
  },
  {
    "text": "about it in terms of like language as a whole it's like yeah you can you can learn like the syntax and the grammar of",
    "start": "4002240",
    "end": "4007400"
  },
  {
    "text": "like a particular natural language but also deeply embedded into language is the culture of the the community that",
    "start": "4007400",
    "end": "4015119"
  },
  {
    "text": "developed that language and it takes a lot of effort to learn that culture and",
    "start": "4015119",
    "end": "4020359"
  },
  {
    "text": "to understand that culture especially if that's a culture that is somewhat at odds or jux suppose with your own where",
    "start": "4020359",
    "end": "4026680"
  },
  {
    "text": "it's like okay like I think this is like the thing between like I have some friends who are like Eastern Europeans",
    "start": "4026680",
    "end": "4032000"
  },
  {
    "text": "and the way that they express things and the way that Americans tend to express things is like vastly different",
    "start": "4032000",
    "end": "4037240"
  },
  {
    "text": "especially when it comes to levels of excitement and I think that same sort of thing exists within programming languages where it's like yeah I know",
    "start": "4037240",
    "end": "4043039"
  },
  {
    "text": "the way that you express something and I mean go and Russ or good examples so the way you do something and go and the way you do something in Rust are going to be",
    "start": "4043039",
    "end": "4049720"
  },
  {
    "text": "very different because the cultures of those communities are very different so you might be able to learn syntax but",
    "start": "4049720",
    "end": "4055480"
  },
  {
    "text": "actually understanding all of that cultural stuff is is real tough I think that's the perfect analogy for it yeah",
    "start": "4055480",
    "end": "4062400"
  },
  {
    "text": "yeah I know so I think yeah it's uh I think our our unpopular opinions are",
    "start": "4062400",
    "end": "4067640"
  },
  {
    "text": "like somewhat somewhat tendentially related because it's like the tough part of of all of this is like figuring out",
    "start": "4067640",
    "end": "4074440"
  },
  {
    "text": "like how do you express you want to express in the language in the way it should be expressed in the language and",
    "start": "4074440",
    "end": "4080720"
  },
  {
    "text": "I think that's how you wind up with these these languages that get or or these Concepts that get siloed into a",
    "start": "4080720",
    "end": "4086720"
  },
  {
    "text": "particular language is because be like oh well that language is easy enough to learn like I think Python and data",
    "start": "4086720",
    "end": "4092760"
  },
  {
    "text": "science is a good example of this like oh python is easy enough to learn so you can do data science and data Engineering in it and that whole world just kind of",
    "start": "4092760",
    "end": "4099560"
  },
  {
    "text": "gets everything built for it but it's like do the people doing those things",
    "start": "4099560",
    "end": "4105278"
  },
  {
    "text": "understand conceptually what it is that they're doing and they're simply mapping those Concepts into that language or can",
    "start": "4105279",
    "end": "4111560"
  },
  {
    "text": "they only express those ideas in that language itself and they can't pull it out to another language I think that's a",
    "start": "4111560",
    "end": "4118120"
  },
  {
    "text": "that's an actual more concise way of saying my own unpopular opinion is like no we need to need to focus more on",
    "start": "4118120",
    "end": "4123838"
  },
  {
    "text": "having the conceptual understanding and mapping it into the language as opposed to having the language be our only",
    "start": "4123839",
    "end": "4129758"
  },
  {
    "text": "vehicle for for expressing that conceptual thing yeah it's almost like we're learning things the wrong in the",
    "start": "4129759",
    "end": "4135520"
  },
  {
    "text": "wrong direction like inside out yeah instead of outside in we're hyper focused on language which again was is",
    "start": "4135520",
    "end": "4141920"
  },
  {
    "text": "Leslie lamport's point like I haven't finished reading the computation and state machines paper but in that paper",
    "start": "4141920",
    "end": "4148880"
  },
  {
    "text": "he basically talks about here this interesting thing in the beginning of it where he talks about like oh imagine if",
    "start": "4148880",
    "end": "4156359"
  },
  {
    "text": "we didn't use equations in say physics so you have two different parts of",
    "start": "4156359",
    "end": "4162040"
  },
  {
    "text": "physics that had their own special notation that might not be obvious that like eal mc^2 is like the same thing in",
    "start": "4162040",
    "end": "4169798"
  },
  {
    "text": "these two in two different parts of physics right or you know for for anything right if you don't if you use",
    "start": "4169799",
    "end": "4175278"
  },
  {
    "text": "dissimilar syntax then it's not going to be easy to recognize similarities and",
    "start": "4175279",
    "end": "4180838"
  },
  {
    "text": "patterns between two different places or that you have the exact same thing in two different places and so his kind of",
    "start": "4180839",
    "end": "4187159"
  },
  {
    "text": "point there was like oh well you might you have equations and just because like you have two equations that say the same",
    "start": "4187159",
    "end": "4193480"
  },
  {
    "text": "thing doesn't mean they do the same thing inside of the you know branch of physics that you're you're operating",
    "start": "4193480",
    "end": "4198679"
  },
  {
    "text": "within in the same way like you can you know if you put this into natural language you can say the same English",
    "start": "4198679",
    "end": "4205239"
  },
  {
    "text": "phrase to two different communities of people and it could mean two vastly different things even though the words",
    "start": "4205239",
    "end": "4212159"
  },
  {
    "text": "are still equivalent but you have the ability to kind of like understand and translate those things because you have the similar base of words that you're",
    "start": "4212159",
    "end": "4219120"
  },
  {
    "text": "using on all of that yeah I have that issue talking to non-software people like a a regular software termal slip",
    "start": "4219120",
    "end": "4225560"
  },
  {
    "text": "into everyday language and they're like what are you talking about yeah that that's like that's the you know the",
    "start": "4225560",
    "end": "4231080"
  },
  {
    "text": "beginner to master like you know you've mastered something when you can explain it to someone that doesn't have any",
    "start": "4231080",
    "end": "4236120"
  },
  {
    "text": "context for what it is because like you understand what the concept of the thing is so you can better bring that over to",
    "start": "4236120",
    "end": "4242800"
  },
  {
    "text": "to what people want to understand so yeah I think I think these would be two two good episodes that to get some",
    "start": "4242800",
    "end": "4248960"
  },
  {
    "text": "people that will probably disagree with me get Johnny on get some uh who else would disagree with me oh maybe I can",
    "start": "4248960",
    "end": "4255000"
  },
  {
    "text": "get Sam to come back you can you can disagree with what I'm saying in another",
    "start": "4255000",
    "end": "4260239"
  },
  {
    "text": "you know got got to go to if I'm going to have this as an episode of like ah me and rust for all these reasons got to",
    "start": "4260239",
    "end": "4266239"
  },
  {
    "text": "have people that are going to disagree with me this is assuming that they're going to disagree with me they might agree with me and then it wouldn't be as",
    "start": "4266239",
    "end": "4271280"
  },
  {
    "text": "fun or it might be do you know Sam stance on Rust I I don't I think he's no",
    "start": "4271280",
    "end": "4276719"
  },
  {
    "text": "I won't speak for him I I think he's fine with it but I I don't know that'll be a good thing to learn right yeah yeah",
    "start": "4276719",
    "end": "4282280"
  },
  {
    "text": "I'm interested to know I'm still undecided on Rust so again I don't I'm",
    "start": "4282280",
    "end": "4287920"
  },
  {
    "text": "probably going to learn rust like I like me being Ma on Rust has little to do with like the language or its usefulness",
    "start": "4287920",
    "end": "4293880"
  },
  {
    "text": "or utility like understand in the current context it is it's it's a more macro thing right it's learn Concepts",
    "start": "4293880",
    "end": "4300920"
  },
  {
    "text": "people learn how to think that's the big thing we all need to learn how to think and and I hope I hope people don't think",
    "start": "4300920",
    "end": "4307760"
  },
  {
    "text": "it's an insult I'm not insulting us as an industry by saying that we don't think about things like thinking is very",
    "start": "4307760",
    "end": "4313760"
  },
  {
    "text": "difficult to do and it's a very difficult thing to learn how to do to think critically and intensively about",
    "start": "4313760",
    "end": "4319280"
  },
  {
    "text": "things like so it's not an insult to anybody to say like we're not thinking",
    "start": "4319280",
    "end": "4324600"
  },
  {
    "text": "it's just a thing that we should fix if we want to build better software it's like yeah you got to think it's hard",
    "start": "4324600",
    "end": "4330040"
  },
  {
    "text": "it's hard work we get paid a lot of money we can do the hard work but yeah that that the that feels like a good",
    "start": "4330040",
    "end": "4336600"
  },
  {
    "text": "place to wrap it up uh any last uh any last words Ian I think we've said it all",
    "start": "4336600",
    "end": "4343400"
  },
  {
    "text": "I think so thanks for joining me and uh thank you listeners for uh listening to this kind of all over the place episode",
    "start": "4343400",
    "end": "4350560"
  },
  {
    "text": "I hope hope you enjoyed it as much as the last one we did that is go time for this week thanks",
    "start": "4350560",
    "end": "4358080"
  },
  {
    "text": "for listening along subscribe now if you haven't already head to go time. FM for",
    "start": "4358080",
    "end": "4364199"
  },
  {
    "text": "all the ways or simply search for go time wherever you get your podcasts",
    "start": "4364199",
    "end": "4369320"
  },
  {
    "text": "you'll find us hey do you receive our change log newsletter each Monday if not",
    "start": "4369320",
    "end": "4374880"
  },
  {
    "text": "let's fix that bug one reader calls it so good he considers it a competitive",
    "start": "4374880",
    "end": "4380080"
  },
  {
    "text": "Advantage Sign up for 0 at changel log.com",
    "start": "4380080",
    "end": "4385239"
  },
  {
    "text": "newws thanks once again to our partners at fly.io to Our Mysterious beat freak",
    "start": "4385239",
    "end": "4390840"
  },
  {
    "text": "break master cylinder and to our friends at Sentry we love Sentry you might too use code change log when you're signing",
    "start": "4390840",
    "end": "4397600"
  },
  {
    "text": "up for a team plan and save 100 bucks why not right that is all for now but",
    "start": "4397600",
    "end": "4403440"
  },
  {
    "text": "we'll talk to you again next time on go time",
    "start": "4403440",
    "end": "4409080"
  },
  {
    "text": "[Music]",
    "start": "4420580",
    "end": "4423689"
  }
]