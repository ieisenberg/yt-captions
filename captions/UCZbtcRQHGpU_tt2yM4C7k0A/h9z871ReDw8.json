[
  {
    "text": "my brain says if I'm writing test first I'm not leveraging my time enough because I really don't know how it fits",
    "start": "80",
    "end": "6160"
  },
  {
    "text": "best until I try to fit it in I haven't run the code I'm just trying to make sure it fits in and checks all the boxes",
    "start": "6160",
    "end": "12240"
  },
  {
    "text": "I don't care about the implementation so much as again the behavior and the",
    "start": "12240",
    "end": "18119"
  },
  {
    "text": "[Music] feel this episode is brought to you by Source graph with the launch of their",
    "start": "19240",
    "end": "24880"
  },
  {
    "text": "code insights product teams can now track what really matters in their code base code insights and instantly",
    "start": "24880",
    "end": "30279"
  },
  {
    "text": "transforms your codebase into a quable database to create visual dashboards in seconds and I'm here with Joel kler the",
    "start": "30279",
    "end": "37200"
  },
  {
    "text": "product manager of code insights for Source graph Joel the way teams can use code insights seems to pretty much be",
    "start": "37200",
    "end": "43000"
  },
  {
    "text": "Limitless but a particular problem every engineering team has is tracking versions of languages or packages how",
    "start": "43000",
    "end": "49760"
  },
  {
    "text": "big of a deal is it actually to track versions for teams yeah it's a big deal for a couple of reasons the first is of",
    "start": "49760",
    "end": "55680"
  },
  {
    "text": "course just compatibility you don't want things to break when you're testing locally or to break on your CI system test systems you need to have some sort",
    "start": "55680",
    "end": "61920"
  },
  {
    "text": "of level of like version unification minimum version support and all of that needs to be you know compatible forward",
    "start": "61920",
    "end": "67479"
  },
  {
    "text": "but the other thing we learned was that for a lot of customers especially you know engineer organizations that are pretty established they have older",
    "start": "67479",
    "end": "73520"
  },
  {
    "text": "versions of things or even older versions of like SAS tools they don't use anymore that they haven't fully removed because they're like not sure if",
    "start": "73520",
    "end": "79360"
  },
  {
    "text": "it's still in use or they you know lost focus on that and they're spinning up old virtual machines that they're still paying for they're using you know old",
    "start": "79360",
    "end": "85479"
  },
  {
    "text": "SAS subscriptions they're afraid to cancel cuz they're not sure if anyone's actually using it and so getting off with those versions not just like saves",
    "start": "85479",
    "end": "91040"
  },
  {
    "text": "you the headaches and the risks and the vulnerabilities of being on old versions but also literally the money of you know",
    "start": "91040",
    "end": "96360"
  },
  {
    "text": "older systems running more slowly or the build times or you know virtual machines and SAS tools that you're no longer",
    "start": "96360",
    "end": "101759"
  },
  {
    "text": "using before you had this ability we talked to teams there basically three ways you could do this you could slack a",
    "start": "101759",
    "end": "106960"
  },
  {
    "text": "million people and ask for just like an update point in time you could have sort of one human in one spreadsheet where",
    "start": "106960",
    "end": "112680"
  },
  {
    "text": "like it's somebody's job every Friday or every two weeks they just like search all the code and find all the versions and write it down in a Google sheet or",
    "start": "112680",
    "end": "119479"
  },
  {
    "text": "there were a couple of companies that I came across with in-house systems that were sort of complicated you had to know you know maybe cotlin but you didn't",
    "start": "119479",
    "end": "126079"
  },
  {
    "text": "know cotlin but if you wanted to use this system you had to learn cotlin and you'd have to sort of build the whole world from scratch and run basically a",
    "start": "126079",
    "end": "131760"
  },
  {
    "text": "tool like this with a pretty steep learning curve and now for all three of those you can replace it with a single",
    "start": "131760",
    "end": "136840"
  },
  {
    "text": "line Source craft search which is basically just the name of the thing you're trying to track and the version string in the right format and then we",
    "start": "136840",
    "end": "142560"
  },
  {
    "text": "have templates that'll help you get started if you're not sure what that format is and then it'll automatically track all the different versions for you",
    "start": "142560",
    "end": "147879"
  },
  {
    "text": "both historically so even if you start using it today you can see your historical patterns and then of course going forward very cool thank you Joel",
    "start": "147879",
    "end": "153720"
  },
  {
    "text": "so right now there is a treasure Trove of insights just waiting for you living",
    "start": "153720",
    "end": "158959"
  },
  {
    "text": "inside your codebase right now teams are tracking migrations adoption",
    "start": "158959",
    "end": "164400"
  },
  {
    "text": "deprecations they're detecting and tracking versions of languages and packages they're removing or ensuring",
    "start": "164400",
    "end": "170159"
  },
  {
    "text": "the removal of security vulnerabilities they understand their code by team they can track their code smells and health",
    "start": "170159",
    "end": "176040"
  },
  {
    "text": "and they can visualize configurations and services and so much more with code insights a good next step is to go to",
    "start": "176040",
    "end": "183319"
  },
  {
    "text": "about. sourcegraph docomo insights see how other teams are",
    "start": "183319",
    "end": "188560"
  },
  {
    "text": "using this awesome feature again about. source.com",
    "start": "188560",
    "end": "193680"
  },
  {
    "text": "code-in insights this link is in the show [Music]",
    "start": "193680",
    "end": "205990"
  },
  {
    "text": "notes let's do it it's go time welcome to go",
    "start": "208680",
    "end": "217000"
  },
  {
    "text": "time your source for diverse discussions from all around the go Community change",
    "start": "217000",
    "end": "223040"
  },
  {
    "text": "log has joined the fediverse find our mdon instance at Chang log. and connect",
    "start": "223040",
    "end": "229360"
  },
  {
    "text": "with us at gotime at",
    "start": "229360",
    "end": "233080"
  },
  {
    "text": "and to our friends at fly.io deploy your app servers close to your users no Ops",
    "start": "240159",
    "end": "245239"
  },
  {
    "text": "required learn more at fly.io okay here we",
    "start": "245239",
    "end": "252040"
  },
  {
    "text": "go good time of the day wherever you all are and today we are here to talk about",
    "start": "252799",
    "end": "260120"
  },
  {
    "text": "tdd is it good is it bad what other alternatives are out there and I'm being",
    "start": "260120",
    "end": "266240"
  },
  {
    "text": "joined by my co-host Matt hi Matt how you doing yeah hello Natalie I'm all right thanks how are you good you are",
    "start": "266240",
    "end": "273400"
  },
  {
    "text": "very well centered in the Stream in the video part so great for that we'll all try to keep doing that throughout the",
    "start": "273400",
    "end": "279080"
  },
  {
    "text": "episode thank you I'll take that as a compliment I have had better compliments but I'll take it this is the compliment",
    "start": "279080",
    "end": "286080"
  },
  {
    "text": "right now yeah it's great that you're taking it thank you normally say like oh you look well",
    "start": "286080",
    "end": "291320"
  },
  {
    "text": "or how attractive you are but no you are centered in the screen it's a German",
    "start": "291320",
    "end": "296400"
  },
  {
    "text": "compliment Matt okay I can see you well well then",
    "start": "296400",
    "end": "301520"
  },
  {
    "text": "dka I can yeah Dunka and we are joined by two guests",
    "start": "301520",
    "end": "308120"
  },
  {
    "text": "today we have Chris James who wrote the book on a testing on with go learn go",
    "start": "308120",
    "end": "315199"
  },
  {
    "text": "with test specifically and you are now an engineering manager at Tope hi Chris hey how's it going good you have lots of",
    "start": "315199",
    "end": "321960"
  },
  {
    "text": "coffee in your background yeah I enjoy coffee and I've drunk a loads so I'm hyped",
    "start": "321960",
    "end": "327000"
  },
  {
    "text": "up and I'm fairly well such you are and that's great and we are joined by Bill",
    "start": "327000",
    "end": "333199"
  },
  {
    "text": "who is before anything else is also well centered bill it's awesome and Bill wears many hats",
    "start": "333199",
    "end": "341400"
  },
  {
    "text": "including the one with the many pins and you have the one so you are a trainer of go and recently blockchain you are",
    "start": "341400",
    "end": "347880"
  },
  {
    "text": "heading gbridge and you also in September you tweeted something that led to this episode how you doing bill I'm",
    "start": "347880",
    "end": "355039"
  },
  {
    "text": "doing great in Miami where it's nice and warm I just want to say that because I live in the",
    "start": "355039",
    "end": "360919"
  },
  {
    "text": "Caribbean it's been other than we've had torrential rain for two days but you know you got to pay your price a little",
    "start": "360919",
    "end": "367039"
  },
  {
    "text": "bit nice so the tweet that you tweeted in September and led a very long",
    "start": "367039",
    "end": "373160"
  },
  {
    "text": "conversation is about tdd and how you feel about that and I'll start with reading it so you're writing that you've",
    "start": "373160",
    "end": "380319"
  },
  {
    "text": "never kept it a secret that you're not a fan of tdd you believe in Prototype driven development",
    "start": "380319",
    "end": "387560"
  },
  {
    "text": "PDD with a focus on datadriven development datadriven design",
    "start": "387560",
    "end": "393680"
  },
  {
    "text": "DDD and you believe that General engineering Cycles should be prototype",
    "start": "393680",
    "end": "399680"
  },
  {
    "text": "solidify refactor test minimize reduce and simplify and in that order wow I",
    "start": "399680",
    "end": "406199"
  },
  {
    "text": "said all that one day huh you even wrote that wow it's on the Twitter blockchain",
    "start": "406199",
    "end": "411240"
  },
  {
    "text": "I must have been uh willing to get lambasted on Twitter because this stuff",
    "start": "411240",
    "end": "416639"
  },
  {
    "text": "is like a religion to some people so I get really nervous when when I talk about even in training I get nervous",
    "start": "416639",
    "end": "421800"
  },
  {
    "text": "when I have to talk about testing because some people are really just I don't know they've got these really",
    "start": "421800",
    "end": "429479"
  },
  {
    "text": "strong opinions and ideas about it and it can touch nerves so you have to walk walk this line gently let me say this",
    "start": "429479",
    "end": "437479"
  },
  {
    "text": "I've learned from working in go now for about a decade and even learning how how",
    "start": "437479",
    "end": "443759"
  },
  {
    "text": "the go team kind of develops I've seen them go after this sort of prototype driven approach",
    "start": "443759",
    "end": "450280"
  },
  {
    "text": "they start with a design document where they're really prototyping everything maybe it's on paper I know they're",
    "start": "450280",
    "end": "455319"
  },
  {
    "text": "trying it out on some code and then they get those ideas solidified to a point where everybody feels like because",
    "start": "455319",
    "end": "462280"
  },
  {
    "text": "everything goes an API design I try to tell my team this all the time you're writing packages all day everything is",
    "start": "462280",
    "end": "468639"
  },
  {
    "text": "an API if you don't put yourself in this sort of mindset you're not building",
    "start": "468639",
    "end": "474159"
  },
  {
    "text": "monolithic codebases anymore you're developing apis then the idea for me is",
    "start": "474159",
    "end": "479400"
  },
  {
    "text": "is is that I know at least for myself and with my teams it can take a couple of days before we feel like we have an",
    "start": "479400",
    "end": "486759"
  },
  {
    "text": "API that is checking every box in terms of what layer of code it exists in what",
    "start": "486759",
    "end": "492199"
  },
  {
    "text": "it can expose what it can't expose even just today I had one of my Engineers saying bill you can't put that API there",
    "start": "492199",
    "end": "499560"
  },
  {
    "text": "because that's app layer stuff and you put it in business layer stuff and I'm like oh yeah you're right so now I have",
    "start": "499560",
    "end": "505919"
  },
  {
    "text": "to move it and so if you're lucky it just takes two days to get an API design",
    "start": "505919",
    "end": "511000"
  },
  {
    "text": "where it checks every box and so for me at least when I think about test driven",
    "start": "511000",
    "end": "517120"
  },
  {
    "text": "development with the understanding that that means I got to write my test first like I don't even have an API yet that",
    "start": "517120",
    "end": "523200"
  },
  {
    "text": "everybody agrees on is designed the way it should be now the moment we feel that",
    "start": "523200",
    "end": "529640"
  },
  {
    "text": "the API is right like immediately I'm going to start writing some tests because I can't do go build and I can",
    "start": "529640",
    "end": "537040"
  },
  {
    "text": "start testing that API but for me it's like putting the cart ahead of the you know the horse now I know that there are",
    "start": "537040",
    "end": "543800"
  },
  {
    "text": "people who who are very successful at doing this I'm just not one of those people I just know the way I work so so",
    "start": "543800",
    "end": "551040"
  },
  {
    "text": "that tweet was more about the way that I work and the way my teams work and I feel like we get a lot of success with",
    "start": "551040",
    "end": "558240"
  },
  {
    "text": "that approach so how do you test the design how do you test that API design",
    "start": "558240",
    "end": "564959"
  },
  {
    "text": "is it literally on paper and you're just thinking about it I'm doing two things the first thing I'm trying to do is",
    "start": "564959",
    "end": "571480"
  },
  {
    "text": "figure out if this is in my business s like everything for me is layering so we've got we got three layers of code in",
    "start": "571480",
    "end": "578240"
  },
  {
    "text": "all of our projects got our application layer business layer and we have our foundation layer and these layers have",
    "start": "578240",
    "end": "583560"
  },
  {
    "text": "rules they have policies like in the foundation layer we're not allowed to log that's like our standard Library so",
    "start": "583560",
    "end": "589720"
  },
  {
    "text": "the moment a log is introduced it already immediately means you can't be here right so based on what layer you're",
    "start": "589720",
    "end": "596079"
  },
  {
    "text": "in we're already kind of thinking about what the API can do and what it can What policies it can set What policies it",
    "start": "596079",
    "end": "601399"
  },
  {
    "text": "can't set and so what we're really trying to do here is develop an API that",
    "start": "601399",
    "end": "606560"
  },
  {
    "text": "eventually either has if it's a foundation layer API it's going to be consumed by the business layer if it's a business layer API it's going to be",
    "start": "606560",
    "end": "612680"
  },
  {
    "text": "consumed by the app layer and so that's our user and so once we feel like we've got an API that's going to work for the",
    "start": "612680",
    "end": "618880"
  },
  {
    "text": "layer above right the consumer the user of the API then immediately what I do is",
    "start": "618880",
    "end": "624399"
  },
  {
    "text": "I can write a test and I use the underscore test in the package name see for me having to import the package in",
    "start": "624399",
    "end": "632079"
  },
  {
    "text": "the test already gives me that that feel for how the API is going to work yeah",
    "start": "632079",
    "end": "637800"
  },
  {
    "text": "and this is why I get crazy when somebody wants to use these assert packages for tests because it takes away",
    "start": "637800",
    "end": "644480"
  },
  {
    "text": "from the experience of using the API as a user like that's your first",
    "start": "644480",
    "end": "649519"
  },
  {
    "text": "opportunity to work with this API as a user I just don't want to walk away from",
    "start": "649519",
    "end": "654639"
  },
  {
    "text": "that I want to experience even the pain of saying error and a pain of it coming",
    "start": "654639",
    "end": "660079"
  },
  {
    "text": "out of a function because sometimes you might realize you know what this is painful are there better ways to do this",
    "start": "660079",
    "end": "666079"
  },
  {
    "text": "yeah but you are still using the API just because you then make assertions about it you're still using the API",
    "start": "666079",
    "end": "672760"
  },
  {
    "text": "aren't you for me I don't I don't have the visual connection to it because I'm not seeing the if there I'm not seeing",
    "start": "672760",
    "end": "679320"
  },
  {
    "text": "the fact that I might want to wrap the error inside the if or I can't wrap the error inside if and what is that going",
    "start": "679320",
    "end": "684560"
  },
  {
    "text": "to cause and there are things that you miss I think when you try to make the testing easier I've seen some really",
    "start": "684560",
    "end": "691440"
  },
  {
    "text": "nice testing Frameworks and they produce a lot of nice output and I get it but I feel like you're missing a part of",
    "start": "691440",
    "end": "698240"
  },
  {
    "text": "you're not using the API your user is not using the API that way so why is a test you know my big thing don't make",
    "start": "698240",
    "end": "704240"
  },
  {
    "text": "things easy to do make things easy to understand so if your user's not using it that way why are you using it that",
    "start": "704240",
    "end": "710120"
  },
  {
    "text": "way at a moment a critical moment in time where you're the first person actually being a user for that API that",
    "start": "710120",
    "end": "717079"
  },
  {
    "text": "you're you're designing yeah I think that is the benefit really of tdd the",
    "start": "717079",
    "end": "722959"
  },
  {
    "text": "one you just described is you get to be that first user by the way you know I made testify don't you you just talk",
    "start": "722959",
    "end": "730079"
  },
  {
    "text": "about these assert packages like oh you know but you know full well I made testify",
    "start": "730079",
    "end": "735560"
  },
  {
    "text": "mate well yeah so like the process you describe of that prototyping thing is",
    "start": "735560",
    "end": "741519"
  },
  {
    "text": "kind of how I do it as well it's just that I do it with the test there it",
    "start": "741519",
    "end": "746839"
  },
  {
    "text": "evolves a lot and changes and and I'm it's wrong like it's not it's not like I've written the test and got it right",
    "start": "746839",
    "end": "753760"
  },
  {
    "text": "the first time that is that kind of process still and I love the fact that the idea that you say putting the tests",
    "start": "753760",
    "end": "761560"
  },
  {
    "text": "in a package with underscore test in go you can do that even though normally we have for anyone that doesn't know",
    "start": "761560",
    "end": "768160"
  },
  {
    "text": "normally a folder all the go files inside a folder have to be the same package that's what makes a package but",
    "start": "768160",
    "end": "773800"
  },
  {
    "text": "you are allowed for test files to use a different package and then you import B",
    "start": "773800",
    "end": "779079"
  },
  {
    "text": "the other package and that like you say Bill I love that because you literally in your test code you're using the",
    "start": "779079",
    "end": "784120"
  },
  {
    "text": "package name as well so you catch things like jarring and yeah little like",
    "start": "784120",
    "end": "789199"
  },
  {
    "text": "usability things like that and stuttering and all the other little things that you wouldn't catch otherwise",
    "start": "789199",
    "end": "794959"
  },
  {
    "text": "yeah I'm not writing a single function that has the word test in it until I feel like that API and my team feels",
    "start": "794959",
    "end": "802120"
  },
  {
    "text": "like the API is where we want it I don't want to go back and redo test code",
    "start": "802120",
    "end": "807480"
  },
  {
    "text": "because I I didn't get the API right but how'd you know until you've used it well",
    "start": "807480",
    "end": "812880"
  },
  {
    "text": "look that's part of the code review process right we're looking at it I might even honestly begin to integrate",
    "start": "812880",
    "end": "818880"
  },
  {
    "text": "that into that upper layer I might start to integrate it into the app layer into the handlers that need to use it to",
    "start": "818880",
    "end": "825720"
  },
  {
    "text": "start to get that feel and the moment we all feel like it's right I'm going to immediately jump in and start writing",
    "start": "825720",
    "end": "832839"
  },
  {
    "text": "those unit tests because I think you need to have a set of unit tests just in case your integration tests start to",
    "start": "832839",
    "end": "838120"
  },
  {
    "text": "fail you want to localize yourself into testing that I just feel like if I do it any sooner I'm adding more work to my",
    "start": "838120",
    "end": "846240"
  },
  {
    "text": "workflow and I'd rather feel like the team feels like this is right and it",
    "start": "846240",
    "end": "851320"
  },
  {
    "text": "feels right in all the different layers and then the next thing is T yeah I",
    "start": "851320",
    "end": "856399"
  },
  {
    "text": "think what I find interesting about this is that what you described is not so different from the way I work or the way",
    "start": "856399",
    "end": "861639"
  },
  {
    "text": "my team works right and everyone on my team does tdd right because software development is never as straightforward",
    "start": "861639",
    "end": "867600"
  },
  {
    "text": "as you want it to be right it's it's a learning process right even for something that seems like a simple problem it's only when you start digging",
    "start": "867600",
    "end": "873680"
  },
  {
    "text": "in and you start realizing all the kind of weird contradictions and requirements and how a domain isn't quite as simple",
    "start": "873680",
    "end": "878880"
  },
  {
    "text": "as you hoped it would be so for me like an important thing about software development this kind of goes beyond tdd",
    "start": "878880",
    "end": "884519"
  },
  {
    "text": "is this importance of like high quality and frequent feedback loops right like we need to be able to hear about our",
    "start": "884519",
    "end": "891720"
  },
  {
    "text": "design we need to be able to hear about whether the behavior of our code is what we expect it to be and for me that's the",
    "start": "891720",
    "end": "897360"
  },
  {
    "text": "strength of tdd it's about about giving you that high quality piece of feedback",
    "start": "897360",
    "end": "902759"
  },
  {
    "text": "that your code does what it's supposed to do as you mentioned what test do is they also reflect your design back at",
    "start": "902759",
    "end": "908639"
  },
  {
    "text": "you as well so you can look at the design of your code you can see it behaves how you'd like and it's like a",
    "start": "908639",
    "end": "915120"
  },
  {
    "text": "Buon press way right it's like control F5 or or whatever the magic incantation is on on your IDE to like get that",
    "start": "915120",
    "end": "921440"
  },
  {
    "text": "feedback that yeah it works how I want it to work and I can read the test and see if I were a user of this package you",
    "start": "921440",
    "end": "928160"
  },
  {
    "text": "know this looks reasonable to me or more often than not the opposite is like why was this test so awkward to write and",
    "start": "928160",
    "end": "933839"
  },
  {
    "text": "why is it so difficult to read well that's not testing that's difficult here it's the design you've created",
    "start": "933839",
    "end": "940839"
  },
  {
    "text": "well-designed code is simple to test and the opposite is true as well like poorly design code that kind of has mixed",
    "start": "940839",
    "end": "946800"
  },
  {
    "text": "responsibilities and to many dependencies and everything else we like to talk about they're difficult to test as well so by stying by a test it kind",
    "start": "946800",
    "end": "953600"
  },
  {
    "text": "of centers you on a particular goal because I think another problem that I've encountered with people who don't",
    "start": "953600",
    "end": "959839"
  },
  {
    "text": "do I'm not saying this is true of everyone but like I've worked with a lot of like inexperienced developers and they think they",
    "start": "959839",
    "end": "966519"
  },
  {
    "text": "understand a problem and they start writing tons of code all over the place and I ask them what are you doing like",
    "start": "966519",
    "end": "971920"
  },
  {
    "text": "what problem are you solving and it's like they're solving like five problems at once and they're solving them all",
    "start": "971920",
    "end": "977040"
  },
  {
    "text": "poorly and I asked them how how many times have you executed this code and you know it'll be like one or two times",
    "start": "977040",
    "end": "983480"
  },
  {
    "text": "when they can be bothered to like wire it up into like you know main.go and then run the thing manually and to me",
    "start": "983480",
    "end": "990000"
  },
  {
    "text": "the strength of tdd is it just gives you a very simple repeatable process that gives you those feedback loops quickly",
    "start": "990000",
    "end": "996880"
  },
  {
    "text": "and with high quality that's kind of the way I see it but I think it's interesting that this kind of discussion",
    "start": "996880",
    "end": "1003120"
  },
  {
    "text": "you know is sort of framed as like I love TD or I hate TD and but really it's like actually we kind of have I mean",
    "start": "1003120",
    "end": "1009720"
  },
  {
    "text": "we're all software developers right and we all recognize that this is more difficult than people uh sort of give it credit for we need to be able to learn",
    "start": "1009720",
    "end": "1016160"
  },
  {
    "text": "quickly uh so I find it interesting that basically we have the same problems it's just different ways of attacking them I think",
    "start": "1016160",
    "end": "1022880"
  },
  {
    "text": "it comes down to the order of things like I'm not writing tests first like for me tdd is always and I could be",
    "start": "1022880",
    "end": "1029240"
  },
  {
    "text": "wrong but when I first heard about tdd it was always write tests first and that",
    "start": "1029240",
    "end": "1034600"
  },
  {
    "text": "order that I gave you Natalie I don't remember off the top of my head but you can read that order again that I that I",
    "start": "1034600",
    "end": "1039720"
  },
  {
    "text": "threw out on that tweet prototype solidify refactor test minimize reduce",
    "start": "1039720",
    "end": "1046480"
  },
  {
    "text": "and simplify all right so I have test forth there which is kind of what I said right we need a package that does this",
    "start": "1046480",
    "end": "1052760"
  },
  {
    "text": "let's design the API let's see how it feels do we feel like it checks every box good we like it now let's write the",
    "start": "1052760",
    "end": "1060160"
  },
  {
    "text": "test before we do a go build so we know that that API is behaving the way so",
    "start": "1060160",
    "end": "1065280"
  },
  {
    "text": "like I have it for right I'm not like saying don't test I just don't think it need I can't put it first I just tell",
    "start": "1065280",
    "end": "1071120"
  },
  {
    "text": "you that so maybe I'm wrong about what tdd is then right is it right tests first or is it just right tests at some",
    "start": "1071120",
    "end": "1077640"
  },
  {
    "text": "point I I think it's right test first Chris but I would add it's right test",
    "start": "1077640",
    "end": "1083520"
  },
  {
    "text": "first this interesting thing about TD is that there's a lot of unfortunately a lot of misrepresentations from what like",
    "start": "1083520",
    "end": "1089080"
  },
  {
    "text": "Ken Beck and Co right it's I think a lot of people seem to be under the impression that like you get given like",
    "start": "1089080",
    "end": "1094760"
  },
  {
    "text": "this project of like let's rewrite Twitter and okay I'm got to spend days writing tests and then I'll make them",
    "start": "1094760",
    "end": "1100240"
  },
  {
    "text": "all past that is not tdd tdd is about taking like your first small step",
    "start": "1100240",
    "end": "1105720"
  },
  {
    "text": "capturing it as one test and as that point you're just trying to make it work and you're kind of free to write",
    "start": "1105720",
    "end": "1112080"
  },
  {
    "text": "whatever garbage you want to an extent you're just trying to get the part The Test passing and your software working",
    "start": "1112080",
    "end": "1117559"
  },
  {
    "text": "how you want and then the other really important step that people will skip is the refactoring part where now you have",
    "start": "1117559",
    "end": "1123600"
  },
  {
    "text": "a test that proves your software whats how you want it to do you're now liberated to be creative and think about",
    "start": "1123600",
    "end": "1129120"
  },
  {
    "text": "design and reshape the code and and do your refactoring and you keep hammering that run test button so you never go",
    "start": "1129120",
    "end": "1135240"
  },
  {
    "text": "down a rabbit hole because quite often people talk about refactoring and a lot",
    "start": "1135240",
    "end": "1140600"
  },
  {
    "text": "of time they're spending hours doing refactoring and I'm sorry if you're spending hours doing refractor you're probably not actually doing refactoring",
    "start": "1140600",
    "end": "1146440"
  },
  {
    "text": "you're probably redesigning your code and there is a difference between those two activities so for me like that is a",
    "start": "1146440",
    "end": "1153159"
  },
  {
    "text": "really common misconception and that's why when people say things like I don't have time to write a test first and I'm",
    "start": "1153159",
    "end": "1158480"
  },
  {
    "text": "kind of like mate it takes like five minutes if that you know it shouldn't feel like a big blocker to you achieving",
    "start": "1158480",
    "end": "1165360"
  },
  {
    "text": "work the opposite in fact like once you get proficient at Ted and once to get proficient software design T speeds you",
    "start": "1165360",
    "end": "1170799"
  },
  {
    "text": "up it doesn't slow you down yeah it's mindblowing to me Chris mind-blowing I cannot I'm telling you right now the",
    "start": "1170799",
    "end": "1177200"
  },
  {
    "text": "thought of me writing a test first for an API that doesn't exist yet because I haven't really figured out what I needed",
    "start": "1177200",
    "end": "1182600"
  },
  {
    "text": "to do is mind-blowing but when you think about the design of that API Bill like",
    "start": "1182600",
    "end": "1188840"
  },
  {
    "text": "it's going to be used by somebody writing code they're going to be calling functions and using types in that",
    "start": "1188840",
    "end": "1194640"
  },
  {
    "text": "package and things that's the bit I don't get because for me for first of all I should say I have had the case",
    "start": "1194640",
    "end": "1200760"
  },
  {
    "text": "before where I've overdone it on the tests up front where I've just done too much I thought I knew the thing so well",
    "start": "1200760",
    "end": "1208679"
  },
  {
    "text": "that I just wrote I know exactly what the tests need to be and then I can just bang through and implement it and then",
    "start": "1208679",
    "end": "1213840"
  },
  {
    "text": "during the implementation which kind of like the prototyping phase really I learned things that then impacted the",
    "start": "1213840",
    "end": "1220679"
  },
  {
    "text": "design because for necessity and then my a lot of my tests were then useless so",
    "start": "1220679",
    "end": "1226520"
  },
  {
    "text": "Chris's point I think is quite good that you write a bit of a test first and then",
    "start": "1226520",
    "end": "1231600"
  },
  {
    "text": "you do a bit over here and you sort of do them at the same time but driven by",
    "start": "1231600",
    "end": "1236760"
  },
  {
    "text": "the the test means you automatically get better coverage because immediately like",
    "start": "1236760",
    "end": "1243000"
  },
  {
    "text": "well in my experience the test coverage is always high kind of automatically but",
    "start": "1243000",
    "end": "1248760"
  },
  {
    "text": "I think the principle you wouldn't want to ignore what's in the code and what the code is telling you and that's like",
    "start": "1248760",
    "end": "1254960"
  },
  {
    "text": "the prototyping bit I think is one of the key inputs you want for the design too so just recently I had to write an",
    "start": "1254960",
    "end": "1262320"
  },
  {
    "text": "API to access some service out there right there's authentication bits to it",
    "start": "1262320",
    "end": "1268360"
  },
  {
    "text": "there's HTTP calls I have to make there's data coming back I wrote 30",
    "start": "1268360",
    "end": "1273520"
  },
  {
    "text": "lines of code to start happy path right I put my programming hat on right find",
    "start": "1273520",
    "end": "1278880"
  },
  {
    "text": "the 30 lines of code that make at least parts of the API I know I need working like that's stage one right you got to",
    "start": "1278880",
    "end": "1284840"
  },
  {
    "text": "do the programming now when I once I see those 30 lines code and I see what I need as for config and I need what now I",
    "start": "1284840",
    "end": "1291159"
  },
  {
    "text": "know types I need to return and I have all this my next thing really is to design the API based on that programming",
    "start": "1291159",
    "end": "1298000"
  },
  {
    "text": "and then to share that API design with my team and maybe even see how it feels",
    "start": "1298000",
    "end": "1304440"
  },
  {
    "text": "again in that app layer and then write the test I cannot wrap my head around writing tests without really feeling",
    "start": "1304440",
    "end": "1311200"
  },
  {
    "text": "that it plugs in as a puzzle piece so I I think a useful thinking tool when I'm",
    "start": "1311200",
    "end": "1316320"
  },
  {
    "text": "coaching people with tdd is I I asked them to sort of ask themselves Pretend",
    "start": "1316320",
    "end": "1321360"
  },
  {
    "text": "This code already existed as an open source package like what would you want to see and it gets you to forget about",
    "start": "1321360",
    "end": "1327400"
  },
  {
    "text": "the implementation detail for moment like when you're designing packages in go the good ones are the ones where you",
    "start": "1327400",
    "end": "1332960"
  },
  {
    "text": "just sort of see a very useful API and you don't know and you don't care how it works underneath right like it shouldn't",
    "start": "1332960",
    "end": "1339039"
  },
  {
    "text": "matter to you I just you know I'm a user of this API this package you've taken care of all the messy work I just want a",
    "start": "1339039",
    "end": "1346080"
  },
  {
    "text": "nice beautiful API that I can use and that helps people make that first step because yeah I think when you're first",
    "start": "1346080",
    "end": "1351240"
  },
  {
    "text": "starting with tdd it does feel a bit unnatural you sort of have to make this weird First Step where you're just writing code for something that doesn't",
    "start": "1351240",
    "end": "1357360"
  },
  {
    "text": "exist and like your your vs coder intell it's all red because the code doesn't exist and it makes you feel",
    "start": "1357360",
    "end": "1362640"
  },
  {
    "text": "uncomfortable but what you need to be doing when you're in this mindset is have this positive attitude towards it",
    "start": "1362640",
    "end": "1367880"
  },
  {
    "text": "and go like what would be the best package design that I as a user could",
    "start": "1367880",
    "end": "1373200"
  },
  {
    "text": "put in front of myself and then encode that as a test and you immediately document to yourself you sort of say",
    "start": "1373200",
    "end": "1379080"
  },
  {
    "text": "okay so if I do this right I see exactly how to use this package then you dig into the messy details that make it pass",
    "start": "1379080",
    "end": "1385720"
  },
  {
    "text": "and things but I guess my point I'm trying to make is like well-designed packages hide that from you anyway so",
    "start": "1385720",
    "end": "1391360"
  },
  {
    "text": "you're not going to see that in the test you should just see a well-designed API in front of you in the test and that",
    "start": "1391360",
    "end": "1396400"
  },
  {
    "text": "thinking tool helps you write a good test in the first place because how many tests have we all seen where it's like",
    "start": "1396400",
    "end": "1401559"
  },
  {
    "text": "there's a load of messy implementation details and things it's really difficult to read and wor still difficult to",
    "start": "1401559",
    "end": "1407960"
  },
  {
    "text": "maintain cuz then when you change implementation detail you're suddenly like oh my goodness you know 10 tests",
    "start": "1407960",
    "end": "1413480"
  },
  {
    "text": "are now failing because I changed this one line of code right this is all terrible things but if you start with a",
    "start": "1413480",
    "end": "1419400"
  },
  {
    "text": "test first attitude and think of it in terms of the behavior you want rather than the implementation details you're",
    "start": "1419400",
    "end": "1424640"
  },
  {
    "text": "more likely to write a maintainable test Suite I quite like those errors that you get actually like when you write a test",
    "start": "1424640",
    "end": "1431679"
  },
  {
    "text": "that for something that just completely doesn't exist you get compiler errors but you get one error at a time and it's",
    "start": "1431679",
    "end": "1437880"
  },
  {
    "text": "almost like a to-do list it tells you what to do and then once you've got past all your compiler errors you then have a",
    "start": "1437880",
    "end": "1443640"
  },
  {
    "text": "failing test which is then telling you right now you have to fix this thing and the classic case of like if you take red",
    "start": "1443640",
    "end": "1450480"
  },
  {
    "text": "green testing this idea that you it's important to see a test fail first or",
    "start": "1450480",
    "end": "1455840"
  },
  {
    "text": "it's imp you know like if you write a test and it always passes and it's always passed how do you know you're",
    "start": "1455840",
    "end": "1461360"
  },
  {
    "text": "really saying anything about the service or anything so I really want to see it fail so I know it's saying something and",
    "start": "1461360",
    "end": "1469600"
  },
  {
    "text": "then I can make it you know it'll say oh this is now failed the expected output was 42 okay so I'm just going to return",
    "start": "1469600",
    "end": "1476200"
  },
  {
    "text": "42 from this method and this is an extreme case which then makes that test pass but then that highlights the test",
    "start": "1476200",
    "end": "1483039"
  },
  {
    "text": "isn't complete yet because I made just one assertion about it being 42 and just returning a four 42 is enough to make",
    "start": "1483039",
    "end": "1490799"
  },
  {
    "text": "that pass so I'll put a couple of other examples in there and then I can't cheat like that really so yeah quite like the",
    "start": "1490799",
    "end": "1498320"
  },
  {
    "text": "error list that you get guides you through it the majority of packages I",
    "start": "1498320",
    "end": "1504200"
  },
  {
    "text": "write are not single module packages that are going to be in somebody's vendor folder they are for these big",
    "start": "1504200",
    "end": "1511200"
  },
  {
    "text": "projects where we got four people working on this thing and now the app layer needs support for being able to",
    "start": "1511200",
    "end": "1518200"
  },
  {
    "text": "order things from the database and so now I've got to figure out this package",
    "start": "1518200",
    "end": "1523679"
  },
  {
    "text": "it's going to live parts of it might even live here parts of it might even have to be apple a because I can't put",
    "start": "1523679",
    "end": "1528919"
  },
  {
    "text": "that intelligence there and so I'm designing something not as a vendor package which might have an API where",
    "start": "1528919",
    "end": "1535440"
  },
  {
    "text": "maybe you can think tdd to start I'm thinking already I've got to integrate",
    "start": "1535440",
    "end": "1540559"
  },
  {
    "text": "this support in the right way based on our rules and I got to make sure that puzzle fits first and I'm telling you",
    "start": "1540559",
    "end": "1547480"
  },
  {
    "text": "that I have never on any project like this gotten the API right even the",
    "start": "1547480",
    "end": "1552559"
  },
  {
    "text": "fourth time there's always somebody who remembers something like Bill you can't bill your leak this bill you're doing",
    "start": "1552559",
    "end": "1558640"
  },
  {
    "text": "that and I'm like I teach this stuff and I'm still making these mistakes or I'm moving fast and one time I put something",
    "start": "1558640",
    "end": "1565799"
  },
  {
    "text": "in there and I wrote you're not gonna like this and everybody was like what and I said if you don't see it pavle",
    "start": "1565799",
    "end": "1572399"
  },
  {
    "text": "will and immediately when pava woke up this first thing was Bill you can't do that and I started laughing right I just",
    "start": "1572399",
    "end": "1579279"
  },
  {
    "text": "left it for him because I knew he was gonna say you can't do that and so for those packages the majority of the",
    "start": "1579279",
    "end": "1584919"
  },
  {
    "text": "packages I write I really need to be thinking about the design as relates to how it's integrated into this project",
    "start": "1584919",
    "end": "1591960"
  },
  {
    "text": "not as a vendor package so again my brain says if I'm writing test first I'm",
    "start": "1591960",
    "end": "1598880"
  },
  {
    "text": "not leveraging my time enough because I really don't know how it fits best until I try to fit it in I haven't run the",
    "start": "1598880",
    "end": "1604840"
  },
  {
    "text": "code I'm just trying to make sure it fits in and checks all the boxes and then immediately yes I'm gonna write I",
    "start": "1604840",
    "end": "1611799"
  },
  {
    "text": "don't care about the implementation so much as again the behavior and the feel but integrating into a big projects a",
    "start": "1611799",
    "end": "1618279"
  },
  {
    "text": "much different problem than the vendor say package that you're going to be [Music]",
    "start": "1618279",
    "end": "1626230"
  },
  {
    "text": "building this episode is brought to you by our friends at Square develop on the platform that sellers trust here's what",
    "start": "1635159",
    "end": "1641080"
  },
  {
    "text": "you can do with square you can Bridge more experiences you can build online mobile and in-person commerce",
    "start": "1641080",
    "end": "1646480"
  },
  {
    "text": "experiences that connect more customers and sellers you can build custom booking Solutions you can create and track",
    "start": "1646480",
    "end": "1652320"
  },
  {
    "text": "orders you can accept payments you can manage and curate inventory you can organize customers you can manage",
    "start": "1652320",
    "end": "1657840"
  },
  {
    "text": "employees you can extend Square gift cards to your app you can use afterpay",
    "start": "1657840",
    "end": "1662880"
  },
  {
    "text": "and all this is powered by the world class square apis and sdks that enable",
    "start": "1662880",
    "end": "1668200"
  },
  {
    "text": "you to build full featured business apps for yourself or millions of square sellers so much is available as a square",
    "start": "1668200",
    "end": "1674559"
  },
  {
    "text": "Solutions partner learn more and get started at change L the /s Square again Chang log.com",
    "start": "1674559",
    "end": "1681180"
  },
  {
    "text": "[Music]",
    "start": "1681180",
    "end": "1701919"
  },
  {
    "text": "Square Chris I have a question for you you said that it's important for you to separate their responsibilities and the",
    "start": "1701919",
    "end": "1709159"
  },
  {
    "text": "couple and make sure that each part is individual and that way it's simple and",
    "start": "1709159",
    "end": "1714559"
  },
  {
    "text": "you know that what when you asking what is this doing this is doing this this one thing what is this testing this is",
    "start": "1714559",
    "end": "1719600"
  },
  {
    "text": "testing this one thing so when you start writing tests for Something Completely",
    "start": "1719600",
    "end": "1725760"
  },
  {
    "text": "new do you go bottom up or top down so do you write the first test to be the",
    "start": "1725760",
    "end": "1732399"
  },
  {
    "text": "biggest functionality and then you add small tests or do you first uh write test for for the very small things and",
    "start": "1732399",
    "end": "1738640"
  },
  {
    "text": "then later on add the big test that kind of checks everything I tend to favor top",
    "start": "1738640",
    "end": "1743919"
  },
  {
    "text": "down development because it's the least risky way of working in my view I've seen a lot of kind of bottomup efforts",
    "start": "1743919",
    "end": "1750279"
  },
  {
    "text": "where people making these kind of like beautiful looking packages that have corresponding beautiful test Suites but",
    "start": "1750279",
    "end": "1757840"
  },
  {
    "text": "then when you try and integrate them together you realize this is just a mess and it doesn't actually do what you need to do right and again it's this it's",
    "start": "1757840",
    "end": "1763799"
  },
  {
    "text": "this idea of like high quality and relevant feedback right like yeah you unit set in this package and yeah it's",
    "start": "1763799",
    "end": "1769399"
  },
  {
    "text": "wonderful but like he hasn't done anything useful until it's wired up into main.go in effect right so I generally",
    "start": "1769399",
    "end": "1776039"
  },
  {
    "text": "prefer a top down approach and I would definitely plug um Steve Freeman and Nat",
    "start": "1776039",
    "end": "1781200"
  },
  {
    "text": "Price's book growing objectoriented software guide by tests and I know some people in the go Community are a bit",
    "start": "1781200",
    "end": "1786440"
  },
  {
    "text": "allergic to O but like and it's a Java book as well but I promise you it's a valuable book because it kind of talks",
    "start": "1786440",
    "end": "1792799"
  },
  {
    "text": "about this kind of approach of work of working from the top down starting with an acceptance test and what the",
    "start": "1792799",
    "end": "1798919"
  },
  {
    "text": "acceptance test does is exercise the system as if it was a black box so it doesn't matter what the package design",
    "start": "1798919",
    "end": "1805720"
  },
  {
    "text": "is it doesn't matter how it works underneath it just literally hits the system and go and checks does it do what",
    "start": "1805720",
    "end": "1810919"
  },
  {
    "text": "you needed to do starting with that it's like your North Star is an incredibly powerful way of working it's something",
    "start": "1810919",
    "end": "1816360"
  },
  {
    "text": "that my team really strongly Embraces because it forces you to think about what does our system actually have to do",
    "start": "1816360",
    "end": "1821840"
  },
  {
    "text": "like forget about design and stuff because us Engineers we love to talk about design and all this kind of business but you know our system has to",
    "start": "1821840",
    "end": "1829120"
  },
  {
    "text": "do something useful right it needs to it needs to do something that like makes money or helps people or whatever right",
    "start": "1829120",
    "end": "1834640"
  },
  {
    "text": "and ex test for as you think about what will this system do from the outside in",
    "start": "1834640",
    "end": "1839960"
  },
  {
    "text": "you then use that as a North star to guide your effort so you have your failing acceptance test and then you just start writing some code and again",
    "start": "1839960",
    "end": "1846640"
  },
  {
    "text": "like the kind of TV approach in itself at first you're just trying to make the test pass you're not worrying too much",
    "start": "1846640",
    "end": "1852279"
  },
  {
    "text": "about package design like honestly like when I do it most of the time I'm making it work all in main.go",
    "start": "1852279",
    "end": "1857320"
  },
  {
    "text": "just like get it working right let's just get the software doing something useful and then again once we have that",
    "start": "1857320",
    "end": "1863200"
  },
  {
    "text": "passing acceptance test which proves the system works on we need to do now I have the license to start putting things into",
    "start": "1863200",
    "end": "1868639"
  },
  {
    "text": "packages and things and then I might start testing some edge cases with unit tests that aren't so great of acceptance",
    "start": "1868639",
    "end": "1873760"
  },
  {
    "text": "tests and then the software grows from there hence the the book titled growing",
    "start": "1873760",
    "end": "1879279"
  },
  {
    "text": "object onited software it's this idea that like you don't just write software and it's done you grow it and in order to grow it again you need these high",
    "start": "1879279",
    "end": "1885720"
  },
  {
    "text": "quality feedback loops that keep coming at you quickly letting you know whether you're going on the right track or not",
    "start": "1885720",
    "end": "1890960"
  },
  {
    "text": "are your acceptance tests integration tests then essentially like end to end tests yeah the naming around all this",
    "start": "1890960",
    "end": "1897360"
  },
  {
    "text": "stuff is incredibly confusing for me an integration test is something that takes two units or two or more units and",
    "start": "1897360",
    "end": "1904120"
  },
  {
    "text": "checks they integrate and do something together for me an acceptance test is something that tests the system as a",
    "start": "1904120",
    "end": "1910600"
  },
  {
    "text": "blackbox so I don't know if you're making like a HTP API in effects you could do an accept test with curl",
    "start": "1910600",
    "end": "1916399"
  },
  {
    "text": "commands right that's the way you're looking at it you don't really know that it's even a go system at that point it's just some program that responds to http",
    "start": "1916399",
    "end": "1923480"
  },
  {
    "text": "that to me is an acceptance test or a blackbox test okay integration tests are more within a system okay for me yeah so",
    "start": "1923480",
    "end": "1930200"
  },
  {
    "text": "end to end test maybe we could call that yeah yeah so it's funny because that is how I do it and um so I have a a thing",
    "start": "1930200",
    "end": "1937440"
  },
  {
    "text": "that we're building and it has a front end and it has a back end with an API and the API is like when we run this",
    "start": "1937440",
    "end": "1945320"
  },
  {
    "text": "test Suite it literally spins up the database it spins up the whole thing and accesses it like the client is going",
    "start": "1945320",
    "end": "1952760"
  },
  {
    "text": "to like the front end is going to calling the the methods making the same calls we actually have a an API client",
    "start": "1952760",
    "end": "1959720"
  },
  {
    "text": "as well which it uses so we're also kind of testing that at the same time as well so this is like really getting as close",
    "start": "1959720",
    "end": "1966080"
  },
  {
    "text": "as I can to what the browser is going to do and then I'll be able to write then",
    "start": "1966080",
    "end": "1972039"
  },
  {
    "text": "in in quite a clear way like what I expect like I'm going to do one thing",
    "start": "1972039",
    "end": "1977919"
  },
  {
    "text": "and then I'm going to do a few of the bits you know it might be adding users to it it might be adding a task whatever",
    "start": "1977919",
    "end": "1983760"
  },
  {
    "text": "the flow is then I'm going to get it and make assertions about what that state should then look like and usually like",
    "start": "1983760",
    "end": "1991440"
  },
  {
    "text": "when I'm adding a new feature that's a very easy way for me to reason about",
    "start": "1991440",
    "end": "1997320"
  },
  {
    "text": "what the feature is that I'm adding and sort of takes away a lot of the ambiguity like if we've discussed it",
    "start": "1997320",
    "end": "2002679"
  },
  {
    "text": "lots of people will have a different idea of what that thing is and this lets you remove a lot of that ambiguity",
    "start": "2002679",
    "end": "2008720"
  },
  {
    "text": "you're saying well look I'm literally calling this API in this order it should result in this and if anyone doesn't",
    "start": "2008720",
    "end": "2014679"
  },
  {
    "text": "agree with that that's great to catch that nice and early and we can figure it out and then yeah you go about",
    "start": "2014679",
    "end": "2021159"
  },
  {
    "text": "implementing it making that test pass and you're sort of like because of that",
    "start": "2021159",
    "end": "2026960"
  },
  {
    "text": "approach you know I know that that new feature works as I expect whatever else",
    "start": "2026960",
    "end": "2033880"
  },
  {
    "text": "is going on and I can get actually sometimes we'll skip unit testing in some places because that's just such a",
    "start": "2033880",
    "end": "2041080"
  },
  {
    "text": "kind of reliable thing that I just have the confidence that works I'm always",
    "start": "2041080",
    "end": "2046360"
  },
  {
    "text": "worried about guessing I don't want to guess let me give you an example okay because you mentioned front end I have a",
    "start": "2046360",
    "end": "2053079"
  },
  {
    "text": "person that works for me he's a front end Dev we were working on something and I started doing a code review and it was",
    "start": "2053079",
    "end": "2058878"
  },
  {
    "text": "all JavaScript noes so I was really losing my mind and I finally looked at him and I said why are you doing that",
    "start": "2058879",
    "end": "2066000"
  },
  {
    "text": "like got to the point where I went and I built a terminal front end so I could",
    "start": "2066000",
    "end": "2071839"
  },
  {
    "text": "experience the API that I gave them and I realized so many things were missing",
    "start": "2071839",
    "end": "2077760"
  },
  {
    "text": "that I changed the API so I could write a front end and I went back to the front end person and I said I don't understand",
    "start": "2077760",
    "end": "2084839"
  },
  {
    "text": "one how you got this working and two why didn't you ask me for these changes and you know what they said it was the",
    "start": "2084839",
    "end": "2090398"
  },
  {
    "text": "saddest thing they said bill as a frontend Dev we just deal with what we",
    "start": "2090399",
    "end": "2095878"
  },
  {
    "text": "get and we just make it at work and I said this is a horrible way to live I go",
    "start": "2095879",
    "end": "2101839"
  },
  {
    "text": "you can't do that with me you have to tell me when something's missing and I got to the point with them now where if",
    "start": "2101839",
    "end": "2109040"
  },
  {
    "text": "we need a new screen I asked them to build it and I asked them to go into the goh side and write handlers that send",
    "start": "2109040",
    "end": "2116440"
  },
  {
    "text": "static data yeah great I said you tell me what you need and I will do my best to make that API work for you and then",
    "start": "2116440",
    "end": "2124040"
  },
  {
    "text": "I'll work from the business layer right first so I can feed that and then I'll",
    "start": "2124040",
    "end": "2129160"
  },
  {
    "text": "work at the say the data layer but it's so sad because a lot of the apis that I",
    "start": "2129160",
    "end": "2134880"
  },
  {
    "text": "had felt right to me but were not front-end consumer friendly and again I",
    "start": "2134880",
    "end": "2140839"
  },
  {
    "text": "don't want to guess so there's a situation where I could have written all those tests and done all that stuff and",
    "start": "2140839",
    "end": "2146160"
  },
  {
    "text": "realized that it was all wrong so just throw that out there yeah no but I think you just did tdd really you built the",
    "start": "2146160",
    "end": "2152560"
  },
  {
    "text": "terminal it's not tests as code but it it's like you are testing it like you",
    "start": "2152560",
    "end": "2158359"
  },
  {
    "text": "run the thing see if it works like and then make changes to it that way like",
    "start": "2158359",
    "end": "2163520"
  },
  {
    "text": "that feedback loop is what you needed from that process oh mocking out the handlers as a test driven thing I mean I",
    "start": "2163520",
    "end": "2170920"
  },
  {
    "text": "was asking the front end to do that so they could drive my design because I don't want them to be you know how",
    "start": "2170920",
    "end": "2177160"
  },
  {
    "text": "horrible it is when you have an API that's not even doing airor handling consistently the amount of extra code a",
    "start": "2177160",
    "end": "2182839"
  },
  {
    "text": "front end has to write because of that and I'm thinking about these things and I still wrote a because I'm not a",
    "start": "2182839",
    "end": "2189079"
  },
  {
    "text": "front-end Dev I still wrote a pretty poor API for web dev right frontend Dev",
    "start": "2189079",
    "end": "2195200"
  },
  {
    "text": "oh I felt horrible man I never want a friend telling you that ever again I felt horrible yeah I guess a big",
    "start": "2195200",
    "end": "2201680"
  },
  {
    "text": "difference here is that somebody else is testing for you I say this in class we write apis all day so you can either",
    "start": "2201680",
    "end": "2208440"
  },
  {
    "text": "make somebody's life amazing or miserable and we've all not wanted to go to work the next day because we had to",
    "start": "2208440",
    "end": "2214160"
  },
  {
    "text": "work with an API that was just dude I had a j sign API return XML on me",
    "start": "2214160",
    "end": "2219200"
  },
  {
    "text": "once and then I had to deal with that inside Json or just pure XML no pure XML",
    "start": "2219200",
    "end": "2226599"
  },
  {
    "text": "not inside Jason apparently they were fronting an XML service instead of rewriting it ah they were transcribing",
    "start": "2226599",
    "end": "2233040"
  },
  {
    "text": "XML and I found a call that bypassed the trans but you understand what I'm saying",
    "start": "2233040",
    "end": "2239599"
  },
  {
    "text": "like yeah consumer is everything yeah I call them the user and the user is everything and if you're not the user",
    "start": "2239599",
    "end": "2246400"
  },
  {
    "text": "then you're really guessing fair enough I never do it right yeah I think that's fair I think that totally makes sense",
    "start": "2246400",
    "end": "2252720"
  },
  {
    "text": "like it is I think tdd is about being obsessed with the user you become the user and to be honest it's possible in",
    "start": "2252720",
    "end": "2259599"
  },
  {
    "text": "the case I talk about it's possible for me from an just looking starting at the API it would be possible for me to build",
    "start": "2259599",
    "end": "2266720"
  },
  {
    "text": "a horrible API IE you know you make this call to get some data and you have to make lots of them if you want lots of",
    "start": "2266720",
    "end": "2272560"
  },
  {
    "text": "data and what the UI really wants to show as a summary things like that I think I don't know that you get that",
    "start": "2272560",
    "end": "2278280"
  },
  {
    "text": "solved for you by any sort of process but I wonder Bill if and I don't know the answer to this but I do wonder if",
    "start": "2278280",
    "end": "2284960"
  },
  {
    "text": "the approach changes what we end up with much or if we sort of end up in the same",
    "start": "2284960",
    "end": "2292160"
  },
  {
    "text": "place regardless of process because when you talk about things being like in your",
    "start": "2292160",
    "end": "2297640"
  },
  {
    "text": "big system where there's lots of moving pieces and you have to think a lot more you can't just jump straight into coding",
    "start": "2297640",
    "end": "2303560"
  },
  {
    "text": "bits I wonder if that would be different if you'd started with that process or if",
    "start": "2303560",
    "end": "2310200"
  },
  {
    "text": "you just end up still with the same thing and and the process is really just personal taste almost for the team it's",
    "start": "2310200",
    "end": "2316440"
  },
  {
    "text": "about for me trying to minimize the amount of guessing you're doing right and prototyping does that right the more",
    "start": "2316440",
    "end": "2324000"
  },
  {
    "text": "you can prototype and solidify something then the less guess you're going to",
    "start": "2324000",
    "end": "2330000"
  },
  {
    "text": "deliver yeah right so I'm curious Matt since you do a lot of front-end stuff if you're not the one working on the front",
    "start": "2330000",
    "end": "2335720"
  },
  {
    "text": "end is your front-end developer allowed to say that API isn't working for me",
    "start": "2335720",
    "end": "2340760"
  },
  {
    "text": "because this person was never allowed to say that yeah so that's that is interesting I love that idea one thing we did in a past place was we would",
    "start": "2340760",
    "end": "2348440"
  },
  {
    "text": "collaborate on that Json API and we'd have a Json file and we just serve that from the back end so the front end is",
    "start": "2348440",
    "end": "2355640"
  },
  {
    "text": "unblocked because they're getting at least the test data bit like how you said just have a go Handler that returns it kind of prefer that actually because",
    "start": "2355640",
    "end": "2361560"
  },
  {
    "text": "it's easier probably do that from now on and then you you're both working to a kind of point in the middle a bit like",
    "start": "2361560",
    "end": "2367680"
  },
  {
    "text": "when they built the channel tunnel between the UK and France they started digging from the French side they",
    "start": "2367680",
    "end": "2373319"
  },
  {
    "text": "started digging from the English side and they met in the middle so yes I think you're right the front end is",
    "start": "2373319",
    "end": "2380839"
  },
  {
    "text": "really kind of Paramount because that's where the actual end users are going to be touching something so I put more",
    "start": "2380839",
    "end": "2387200"
  },
  {
    "text": "importance in that so if a front end needs data in a particular way I think",
    "start": "2387200",
    "end": "2392240"
  },
  {
    "text": "that outweighs what else might be considered it yeah so I don't want to guess and you",
    "start": "2392240",
    "end": "2399520"
  },
  {
    "text": "are going to have some level of guessing it's impossible until you actually finish whatever that integration is",
    "start": "2399520",
    "end": "2405200"
  },
  {
    "text": "right but I want to minimize that and I just feel like personally that if I'm starting with writing tests again",
    "start": "2405200",
    "end": "2412680"
  },
  {
    "text": "because I'm not just writing a package that somebody's gonna vendor I use vendors you understand what I mean there",
    "start": "2412680",
    "end": "2418319"
  },
  {
    "text": "writing a package has to integrate in complex ways and so I just need to make sure those puzzle pieces come in and I",
    "start": "2418319",
    "end": "2425560"
  },
  {
    "text": "you know I have a person on my team that likes to start the business layer doesn't want to even look at like a data store is a complete abstraction to them",
    "start": "2425560",
    "end": "2433119"
  },
  {
    "text": "right right so they just want to completely start in the middle of the business layer and get a feel for those",
    "start": "2433119",
    "end": "2438880"
  },
  {
    "text": "apis first before we do anything like there's lots of ways to succeed here I think that's kind of going to end up",
    "start": "2438880",
    "end": "2444839"
  },
  {
    "text": "being where we land on this honestly but yeah so what we do with those Json files in the past place they would be the",
    "start": "2444839",
    "end": "2451240"
  },
  {
    "text": "tests for the backend API so it gets served to the front end for them to code against and it becomes the same file as",
    "start": "2451240",
    "end": "2458440"
  },
  {
    "text": "the test so we run call the API in the expected way and assert that the Json we",
    "start": "2458440",
    "end": "2463880"
  },
  {
    "text": "get back matches this Json and often as you're going it doesn't and it breaks",
    "start": "2463880",
    "end": "2469119"
  },
  {
    "text": "and that's a conversation point because you want to change that Json you're like okay so because I learned about this",
    "start": "2469119",
    "end": "2474960"
  },
  {
    "text": "thing it's not a Boolean in the end it's a string so is it okay can we make this change you know and you have to then",
    "start": "2474960",
    "end": "2481040"
  },
  {
    "text": "make the change and sort of negotiate a little bit but here's the cool part with letting my developers right handlers",
    "start": "2481040",
    "end": "2488160"
  },
  {
    "text": "because they they learned how to do that in like 15 minutes yeah right right they're designing at some level the",
    "start": "2488160",
    "end": "2494119"
  },
  {
    "text": "application Level models yeah I'm making them Define and I show them how to write a literal struct but they're also",
    "start": "2494119",
    "end": "2500760"
  },
  {
    "text": "defining the data model at the app layer it doesn't mean it's going to be the business layer model it's always good to",
    "start": "2500760",
    "end": "2507000"
  },
  {
    "text": "have that decoupled but they're also writing that model that data remember we talked about data driven development",
    "start": "2507000",
    "end": "2513079"
  },
  {
    "text": "right if you don't understand the data you don't understand the problem so the front end devs get too huge everybody",
    "start": "2513079",
    "end": "2518160"
  },
  {
    "text": "wins in fact the front end devs are always ahead of me i' never had that in my life I always had to be ahead of the front end devs now I'm constantly trying",
    "start": "2518160",
    "end": "2525480"
  },
  {
    "text": "to figure out what they're going to do because I'm now behind because they wrote the Handler they wrote the literal",
    "start": "2525480",
    "end": "2530680"
  },
  {
    "text": "struct they defined the data model they filled it in they know it works they can show it to me and now I'm scrambling to",
    "start": "2530680",
    "end": "2538200"
  },
  {
    "text": "make that come to life right and that's the contract yeah no I love that I mean",
    "start": "2538200",
    "end": "2543599"
  },
  {
    "text": "that is literally like how I like to work as well so I think I'm with you there do you ever while",
    "start": "2543599",
    "end": "2548920"
  },
  {
    "text": "you're implementing it do you then ever say oh hang on because of I've just learned something I can't give you it",
    "start": "2548920",
    "end": "2554720"
  },
  {
    "text": "like that it's going to have to be like this do you have that handshake or will you just take it like as law that what",
    "start": "2554720",
    "end": "2560359"
  },
  {
    "text": "they vest for is what they'll get I try to keep the application model exactly the way they want it and then at the",
    "start": "2560359",
    "end": "2567359"
  },
  {
    "text": "business layer we Define our own models that are going to work better for managing do it right but there are times",
    "start": "2567359",
    "end": "2574760"
  },
  {
    "text": "obviously where we're got to negotiate time is a great example time is a nightmare right how do you want to",
    "start": "2574760",
    "end": "2581000"
  },
  {
    "text": "deliver time down to Json right and sometimes we just pick a format an RFC",
    "start": "2581000",
    "end": "2586800"
  },
  {
    "text": "format sometimes we'll do some other things so if we were to negotiate anything with the front end after",
    "start": "2586800",
    "end": "2592480"
  },
  {
    "text": "looking at a at a data model they've put together probably time is always the the",
    "start": "2592480",
    "end": "2597920"
  },
  {
    "text": "sticking point bringing time back and forth I also want to answer your question Matt although it was for Bill",
    "start": "2597920",
    "end": "2604000"
  },
  {
    "text": "if this is the same goal or is this you end up in different places doing the two",
    "start": "2604000",
    "end": "2609280"
  },
  {
    "text": "different methods because recently I had a project where it was a very new and it was not tdd at all it was very much um",
    "start": "2609280",
    "end": "2616520"
  },
  {
    "text": "not with the front end but actually with two microservices and it was one team",
    "start": "2616520",
    "end": "2622200"
  },
  {
    "text": "telling the other team always or the person from micros service a telling to the person in microservice B please make",
    "start": "2622200",
    "end": "2627839"
  },
  {
    "text": "this change and it did like that so very similar interaction to what bill is describing with the front- end people",
    "start": "2627839",
    "end": "2632880"
  },
  {
    "text": "and I did work mostly in tdd I would say but this one was so different and I feel that this did lead to different",
    "start": "2632880",
    "end": "2639680"
  },
  {
    "text": "interactions and different result because of this that the person who",
    "start": "2639680",
    "end": "2644720"
  },
  {
    "text": "tests who does this test is not you you cannot guess that you have other people bringing other",
    "start": "2644720",
    "end": "2651160"
  },
  {
    "text": "expectations so I do think this is a different you don't end up in the same place yeah I think you might not end up",
    "start": "2651160",
    "end": "2657440"
  },
  {
    "text": "in the same place but also like that I quite like also having somebody else write the test and then like if you're",
    "start": "2657440",
    "end": "2664720"
  },
  {
    "text": "pairing it's quite nice to have one person will write a bit of a test and the other person then switches and does",
    "start": "2664720",
    "end": "2670559"
  },
  {
    "text": "the implementation that works quite nicely as a as a way to collaborate and evolve or grow as Chris said so I don't",
    "start": "2670559",
    "end": "2678520"
  },
  {
    "text": "know that that's like mutually exclusive really who writes the tests and honestly I feel like there's a big it depends I",
    "start": "2678520",
    "end": "2684920"
  },
  {
    "text": "feel like it depends needs its own little theme tune in Tech because yeah basically there's so much depends and I",
    "start": "2684920",
    "end": "2691880"
  },
  {
    "text": "feel like often whenever someone on Twitter or which whichever platform is",
    "start": "2691880",
    "end": "2697640"
  },
  {
    "text": "now uh still going well by the time this goes out on Thursday I feel like when",
    "start": "2697640",
    "end": "2703480"
  },
  {
    "text": "there's a strong opinion like this and there's big disagreement what we find out if you dig in deeper is we're",
    "start": "2703480",
    "end": "2709359"
  },
  {
    "text": "actually doing different things or the scenario is subtly different or sometimes dramatically different and we",
    "start": "2709359",
    "end": "2716359"
  },
  {
    "text": "need like a big stamp that's just says it depends like [Music]",
    "start": "2716359",
    "end": "2724250"
  },
  {
    "text": "that [Music]",
    "start": "2724880",
    "end": "2740319"
  },
  {
    "text": "hey friends this episode is brought to you by my friends and potentially your friends too at fire hydrant and I'm here",
    "start": "2740319",
    "end": "2747319"
  },
  {
    "text": "with Robert Ross founder and CEO of fire hydrant and Robert there are several",
    "start": "2747319",
    "end": "2752440"
  },
  {
    "text": "options out there for Incident Management but what is it that makes fire hydrant different the reason that",
    "start": "2752440",
    "end": "2758800"
  },
  {
    "text": "we think that fire hydrant is is on to something is cuz we're meeting companies really where they are we faced the same",
    "start": "2758800",
    "end": "2765680"
  },
  {
    "text": "problems that every company in the industry that is building and releasing software is also facing so where you",
    "start": "2765680",
    "end": "2772160"
  },
  {
    "text": "want people to be able to sign up for fire hydrant and immediately be able to kick off an incident using the best",
    "start": "2772160",
    "end": "2778440"
  },
  {
    "text": "practices that we've built and we've experienced and have gathered through the other amazing customers that use our",
    "start": "2778440",
    "end": "2784440"
  },
  {
    "text": "tool it really is a very quick time to value and we want people to have a long jump from where they are to where they",
    "start": "2784440",
    "end": "2791240"
  },
  {
    "text": "want to be in Incident Management I love it thank you Robert small teams up to 10",
    "start": "2791240",
    "end": "2796800"
  },
  {
    "text": "people can get started for free with all fire hydrant features included there's no credit card required to sign up they",
    "start": "2796800",
    "end": "2802400"
  },
  {
    "text": "are making it too easy to get started so check them out at fireh hydrant dcom again fireh hydrant",
    "start": "2802400",
    "end": "2811039"
  },
  {
    "text": "decom [Music]",
    "start": "2814800",
    "end": "2824690"
  },
  {
    "text": "so I want to answer to something Dylan's asking on slack and I really would love Chris's opinion on this too because I",
    "start": "2826920",
    "end": "2833319"
  },
  {
    "text": "have opinions on this Dylan's asking two things he's asking about tests must be",
    "start": "2833319",
    "end": "2838800"
  },
  {
    "text": "fast and spinning up a postest database in Docker let me just talk to that I do",
    "start": "2838800",
    "end": "2843839"
  },
  {
    "text": "that I feel like if you're mocking a datab you're not really knowing if your stuff works properly and post Crest spins up",
    "start": "2843839",
    "end": "2850680"
  },
  {
    "text": "so quickly I do it in circle CI those tests run easily within a couple of seconds so I have no issues personally",
    "start": "2850680",
    "end": "2858440"
  },
  {
    "text": "right now with how long a test necessarily takes as long as there's an expectation but the other thing is the",
    "start": "2858440",
    "end": "2863800"
  },
  {
    "text": "big one right where it's this idea that if your test hits a database it's not",
    "start": "2863800",
    "end": "2870160"
  },
  {
    "text": "allowed to be a unit so let me just tell you what I think a unit test is and then I'd love to get Chris's a",
    "start": "2870160",
    "end": "2876280"
  },
  {
    "text": "see what I love about go is it's already defined what a unit of code is right we don't build monolithic code bases a unit",
    "start": "2876280",
    "end": "2882720"
  },
  {
    "text": "test is a test that tests that package's API in and of itself right not any other",
    "start": "2882720",
    "end": "2888760"
  },
  {
    "text": "interactions of other packages just every interaction that that API has to make and if that API is talking to a",
    "start": "2888760",
    "end": "2895359"
  },
  {
    "text": "database then I don't know why personally I can't spin up a database and write a unit test that makes sure",
    "start": "2895359",
    "end": "2902520"
  },
  {
    "text": "that that api's queries and calls work like to me that's still a unit test it",
    "start": "2902520",
    "end": "2908440"
  },
  {
    "text": "just happens to be hitting a database to run that unit of code so Chris I'd love",
    "start": "2908440",
    "end": "2913520"
  },
  {
    "text": "to hear your opinion on that I wish I could bring in some controversy but I basically completely agree I think there's been a big misrepresentation in",
    "start": "2913520",
    "end": "2920200"
  },
  {
    "text": "Tech about what a unit test is like or like it could only be a particular function or whatever like I wouldn't",
    "start": "2920200",
    "end": "2925599"
  },
  {
    "text": "describe it as a unit test to me this is an integration test but that distinction isn't that important in the grand scheme",
    "start": "2925599",
    "end": "2931160"
  },
  {
    "text": "of things like You're testing your code integrates with postgress or whatever database right Yeah so basically I agree",
    "start": "2931160",
    "end": "2936839"
  },
  {
    "text": "and I do the same thing I will have some kind of package that you know is in charge of doing whatever I need to do",
    "start": "2936839",
    "end": "2942720"
  },
  {
    "text": "with postest and I'll write I haveen to use test containers most of the time to spin up a a postgress Docker and I run",
    "start": "2942720",
    "end": "2949000"
  },
  {
    "text": "my tests and yeah yeah right they're not as fast as you need test they take a few seconds but big deal you know still a wonderful feedback loop in the grand",
    "start": "2949000",
    "end": "2955240"
  },
  {
    "text": "scheme of things yes I'm afraid to say I basically completely agree I think mocking the database is really clunky",
    "start": "2955240",
    "end": "2963960"
  },
  {
    "text": "and difficult to do and you still don't really have particularly useful tests because you can prove that like your SQL",
    "start": "2963960",
    "end": "2969359"
  },
  {
    "text": "string equals select star from users but does that do what you need to do don't",
    "start": "2969359",
    "end": "2975640"
  },
  {
    "text": "know it just doesn't prove anything in my view so it's really like maybe we could talk about things that your tests",
    "start": "2975640",
    "end": "2982839"
  },
  {
    "text": "should give you I think the the feedback loop thing is very important by the way",
    "start": "2982839",
    "end": "2988559"
  },
  {
    "text": "you can just spin up a data base and keep it running as part of your Dev environment too and just clear it out every time rather than having to spin up",
    "start": "2988559",
    "end": "2994839"
  },
  {
    "text": "the container every time time but again that just little optimizations and things but yeah so that is a question",
    "start": "2994839",
    "end": "3001040"
  },
  {
    "text": "people should ask because it's there's a lot of language you know I don't know what people mean when they say an integration test honestly I don't know",
    "start": "3001040",
    "end": "3007359"
  },
  {
    "text": "what they mean I'd have to find out I'd have to ask them more questions so what do you get from your tests is it really",
    "start": "3007359",
    "end": "3014240"
  },
  {
    "text": "telling you what you want to know can you break something in your code somewhere and then you get a failing",
    "start": "3014240",
    "end": "3020799"
  },
  {
    "text": "test that points to that failure and so this speaks a little bit to that idea",
    "start": "3020799",
    "end": "3026040"
  },
  {
    "text": "really the reason I think unit was used as a word was ideally you just get one",
    "start": "3026040",
    "end": "3032200"
  },
  {
    "text": "test that fails if you break something because it tells you exactly what's broken you can't always do it and if you",
    "start": "3032200",
    "end": "3038599"
  },
  {
    "text": "have found like a function that's called all over the place for doing Orth or whatever it is and that breaks loads of",
    "start": "3038599",
    "end": "3045160"
  },
  {
    "text": "tests will fail but actually that's quite a good clue that there's something fundamental that's broken here so I like",
    "start": "3045160",
    "end": "3051160"
  },
  {
    "text": "that laser sharp focus on failing tests as well yeah I think the useful thing to",
    "start": "3051160",
    "end": "3057760"
  },
  {
    "text": "look at here is the test pyramid which describes um different kinds of tests in the shape of a pyramid funly enough so",
    "start": "3057760",
    "end": "3063920"
  },
  {
    "text": "at the top of a pyramid you have your endtoend tests or your acceptance tests and the idea is that you should only",
    "start": "3063920",
    "end": "3068960"
  },
  {
    "text": "have a few of those comparatively because whilst they're great and they give you a lot of confidence that your",
    "start": "3068960",
    "end": "3074079"
  },
  {
    "text": "system does what it's supposed to do they typically are slower than the test further down the period they're usually",
    "start": "3074079",
    "end": "3080720"
  },
  {
    "text": "more expensive to maintain and normally the quality of the feedback loop isn't as great right so you know you can write",
    "start": "3080720",
    "end": "3086680"
  },
  {
    "text": "an end test and it can go well it doesn't work typically doesn't tell you why it doesn't work and you you have to",
    "start": "3086680",
    "end": "3091920"
  },
  {
    "text": "dig into your system to try and understand why integration tests you're getting a few more of those they're",
    "start": "3091920",
    "end": "3097240"
  },
  {
    "text": "proving that two lumps of code whether it be two packages or a package and a postest database whether they work",
    "start": "3097240",
    "end": "3104280"
  },
  {
    "text": "together again they're fasten your endtoend tests they give you better quality feedback but again because",
    "start": "3104280",
    "end": "3109960"
  },
  {
    "text": "they're two different things which one's the problem here when it fails right you have to kind of dig into the the various",
    "start": "3109960",
    "end": "3115760"
  },
  {
    "text": "units to understand oh okay it was this bit of code that was a problem here and then finally you have unit tests which",
    "start": "3115760",
    "end": "3121480"
  },
  {
    "text": "what you describing Matt is that typically when they fail you get a very precise reason as to why they fail and",
    "start": "3121480",
    "end": "3127559"
  },
  {
    "text": "they also give you really fast feedback loops right these are the ones that really help you refactor right because you want to be able to do refactoring",
    "start": "3127559",
    "end": "3134359"
  },
  {
    "text": "frequently and small frequent refactoring that you want and that's what unit tests give you they give you this abilities are just refactor with",
    "start": "3134359",
    "end": "3140680"
  },
  {
    "text": "freedom and you should have loads of unit tests to a point you can get to a point where you have perhaps too many",
    "start": "3140680",
    "end": "3147319"
  },
  {
    "text": "tests that are kind of coupling themselves to stuff you don't need and I'm sure we've all been in projects",
    "start": "3147319",
    "end": "3152720"
  },
  {
    "text": "where there are tests that are impeding our ability to change the system like you get to a point where you're like I",
    "start": "3152720",
    "end": "3159240"
  },
  {
    "text": "want to do some refactoring but I know if I do this I'm gonna have a bunch of test failing right and that's definitely",
    "start": "3159240",
    "end": "3164400"
  },
  {
    "text": "not a situation you want to be in I have a question for everybody here NASA did a study and they said roughly every 20",
    "start": "3164400",
    "end": "3171040"
  },
  {
    "text": "lines of code you write there's a bug in your code whether you like it or not now this was off of their code basis that",
    "start": "3171040",
    "end": "3176720"
  },
  {
    "text": "are written in C so maybe we get some better numbers out of go who's this NASA",
    "start": "3176720",
    "end": "3181839"
  },
  {
    "text": "that's boring well theyve got that many bugs how did they get to the moon there we go",
    "start": "3181839",
    "end": "3186960"
  },
  {
    "text": "man whoa a lot of testing but here's the question I get asked this so I'm curious",
    "start": "3186960",
    "end": "3193000"
  },
  {
    "text": "everybody here at some point you have to be done you have to be done writing tests at some point so one what is your",
    "start": "3193000",
    "end": "3200559"
  },
  {
    "text": "definition of we're done writing tests and if that answer has to do with some sort of level of code coverage then what",
    "start": "3200559",
    "end": "3207480"
  },
  {
    "text": "is your code coverage number to say we're done we're moving on because you're not going to get to 100% it",
    "start": "3207480",
    "end": "3213079"
  },
  {
    "text": "doesn't mean anything so I'm curious about what your done answer is for when you're done writing tests for that",
    "start": "3213079",
    "end": "3218720"
  },
  {
    "text": "package and what if there's a number what the number is it's not easy to come a straightforward answer this and I",
    "start": "3218720",
    "end": "3224559"
  },
  {
    "text": "think I'd like to stress also again that whilst tdd does give you a test suite and does kind of naturally give you",
    "start": "3224559",
    "end": "3230640"
  },
  {
    "text": "coverage tdd is not primarily about verification it's a method for driving",
    "start": "3230640",
    "end": "3236960"
  },
  {
    "text": "out software right so just because you've done tdd doesn't mean your testing picture is over so I don't know",
    "start": "3236960",
    "end": "3243480"
  },
  {
    "text": "you might need to do some pen tests if you're writing something that needs to be particularly secure you probably need",
    "start": "3243480",
    "end": "3249599"
  },
  {
    "text": "to do performance tests you might just need to write other verification tests like um you know like fuzzing tests for instance so tdd and testing they're",
    "start": "3249599",
    "end": "3257400"
  },
  {
    "text": "clearly related but they're not quite the same thing and I think really it just comes down to",
    "start": "3257400",
    "end": "3262720"
  },
  {
    "text": "confidence in terms of software we want to be able to ship it as quickly and as reliably as possible right so if a bug",
    "start": "3262720",
    "end": "3268520"
  },
  {
    "text": "comes up I want to be able to like fix a bug and ship it as quickly as possible and most modern teams these days would",
    "start": "3268520",
    "end": "3274319"
  },
  {
    "text": "rely on tests to say to themselves yeah we're good to go we can release this to production right so if your test Suite",
    "start": "3274319",
    "end": "3280839"
  },
  {
    "text": "is in that state I would say you're done but as I said like running software isn't quite like that like normally it",
    "start": "3280839",
    "end": "3287000"
  },
  {
    "text": "has to grow and evolve over time as you learn from your users right you need to oh the users have told us it need to do",
    "start": "3287000",
    "end": "3292920"
  },
  {
    "text": "this okay well now we need to go back and change things that's fair but if you're managing a team of people and you",
    "start": "3292920",
    "end": "3298160"
  },
  {
    "text": "say to that person okay the packages at some point you say do we have enough test coverage right because if we don't",
    "start": "3298160",
    "end": "3304680"
  },
  {
    "text": "I don't want you moving on to the next thing so it's like anything in engineering how do we know we're done",
    "start": "3304680",
    "end": "3309839"
  },
  {
    "text": "with this so we can move on to the next thing in my experience I'm not interested in code coverage that much",
    "start": "3309839",
    "end": "3315480"
  },
  {
    "text": "because essentially the only promises I'm making are what the tests say and so",
    "start": "3315480",
    "end": "3321520"
  },
  {
    "text": "the tests you know what I mean if there's hidden logic if there's like hidden stuff that happens that's not in",
    "start": "3321520",
    "end": "3327280"
  },
  {
    "text": "the tests then it's unofficial essentially it's not part of the official API so that gives you a lot of",
    "start": "3327280",
    "end": "3335280"
  },
  {
    "text": "freedom because as long as your tests pass you can deploy it and honestly for",
    "start": "3335280",
    "end": "3340799"
  },
  {
    "text": "me that's the real value of testing is you want to have the confidence to be able to push to production and not be",
    "start": "3340799",
    "end": "3347880"
  },
  {
    "text": "worried and not be like oh we have let's keep an eye on it and make like I'm so confident with our Tech that if all the",
    "start": "3347880",
    "end": "3354480"
  },
  {
    "text": "tests are pass push that's the only promise we're making just from that layer's point of view okay but you still",
    "start": "3354480",
    "end": "3360520"
  },
  {
    "text": "didn't answer my question Matt how do you know that the tests are giving you that how do you know you're done how do",
    "start": "3360520",
    "end": "3366280"
  },
  {
    "text": "you know the tests are giving you that ability to sleep tonight we all agree and I've learned this too hard over the",
    "start": "3366280",
    "end": "3372920"
  },
  {
    "text": "last 10 years with working with people from Google everything has to be measurable you're not allowed to just",
    "start": "3372920",
    "end": "3378240"
  },
  {
    "text": "say because it feels right you know like you're not allowed to do that like things have to be measurable so how are",
    "start": "3378240",
    "end": "3384280"
  },
  {
    "text": "you measuring that that package is done just let's keep it down to a unit of code you've",
    "start": "3384280",
    "end": "3390200"
  },
  {
    "text": "assigned a package to somebody to write how do you know it's done so they can work on the next package I know testing",
    "start": "3390200",
    "end": "3396359"
  },
  {
    "text": "has to be a part of the done equation so how do you know you're done to move on",
    "start": "3396359",
    "end": "3402079"
  },
  {
    "text": "to the next thing well just if I've satisfied the user really that's the",
    "start": "3402079",
    "end": "3407160"
  },
  {
    "text": "thing and also I always I understand when people say we're never done in software so I understand that basically",
    "start": "3407160",
    "end": "3414000"
  },
  {
    "text": "it's fine it's this is good enough for now but it's not done we'll definitely evolve it and change it okay at some",
    "start": "3414000",
    "end": "3420799"
  },
  {
    "text": "point you're done it may not be complete okay fine how many times have you seen a module out there where the author said",
    "start": "3420799",
    "end": "3426760"
  },
  {
    "text": "I'm not working on this anymore I consider those done the PQ driver for",
    "start": "3426760",
    "end": "3431799"
  },
  {
    "text": "postgress I still use it everybody why are you using it because it's done and it's stable and why should I go to PGX",
    "start": "3431799",
    "end": "3438839"
  },
  {
    "text": "where they're still doing active development on it when this is done right like we get scared of done",
    "start": "3438839",
    "end": "3444480"
  },
  {
    "text": "sometimes and I don't know why it may not be complete but it's done you know Dave Cheney taught me that yeah well I",
    "start": "3444480",
    "end": "3451680"
  },
  {
    "text": "think I look at code coverage because I'm interested if there's any blocks that I've missed and I don't test every",
    "start": "3451680",
    "end": "3456799"
  },
  {
    "text": "error like if error return you know I don't test those I sort of trust myself",
    "start": "3456799",
    "end": "3462200"
  },
  {
    "text": "that I get those right and sometimes that bites me because there'll be some strange little thing where I've",
    "start": "3462200",
    "end": "3467799"
  },
  {
    "text": "shattered the error or something like this and there is a bug in there so I only test error things like that if it's",
    "start": "3467799",
    "end": "3474240"
  },
  {
    "text": "part of the API like it's returning a special error in a certain case and that's part of the API that I'll make sure that's covered in the test but it's",
    "start": "3474240",
    "end": "3480960"
  },
  {
    "text": "just if if the thing is uh if it's done",
    "start": "3480960",
    "end": "3488640"
  },
  {
    "text": "um done with a done right yeah Chris I mean I can only",
    "start": "3488640",
    "end": "3494839"
  },
  {
    "text": "describe what my team does right and and I Dre to bring up another T but bdd Behavior driven development right that's",
    "start": "3494839",
    "end": "3501000"
  },
  {
    "text": "another word people a thing that people throw around right the DD yeah like to",
    "start": "3501000",
    "end": "3506039"
  },
  {
    "text": "me um without going on too much about it it's about understanding your problem with like you know your stakeholders",
    "start": "3506039",
    "end": "3512319"
  },
  {
    "text": "like the customers or like your business people like whoever right so when my team pick up a ticket what we try to do",
    "start": "3512319",
    "end": "3517640"
  },
  {
    "text": "is understand these requirements and we we try to express them in these kind of BD terms like given something when",
    "start": "3517640",
    "end": "3523280"
  },
  {
    "text": "something happens then this happens right and we discuss it as a team we try and understand okay this is the problem we're trying to solve right and then we",
    "start": "3523280",
    "end": "3530039"
  },
  {
    "text": "basically tell ourselves like in order to do this ticket we need to have tests for each of these scenarios but we also",
    "start": "3530039",
    "end": "3535559"
  },
  {
    "text": "acknowledge that like something will fall through the cracks of course it will like no one can write perfect software it's just not possible right",
    "start": "3535559",
    "end": "3542920"
  },
  {
    "text": "but we have enough confidence we think we discussed it enough and we're going to put it live and then of course you know something goes wrong okay we",
    "start": "3542920",
    "end": "3549760"
  },
  {
    "text": "recover from it and I think a far more interesting question to me in terms of software devel is not so much like how",
    "start": "3549760",
    "end": "3555440"
  },
  {
    "text": "many bugs can you prevent but how quickly can you recover from them like mean time to recovery to me is a way",
    "start": "3555440",
    "end": "3560559"
  },
  {
    "text": "more interesting question to me and again this this idea of like having a very effective test Suite is such a key",
    "start": "3560559",
    "end": "3567000"
  },
  {
    "text": "component of that right like I've heard of companies that have test Suites that take days to run so if you've got a bug",
    "start": "3567000",
    "end": "3574720"
  },
  {
    "text": "what do you do well what they do is they circumvent the process they skip the test because they need to fix the bug",
    "start": "3574720",
    "end": "3580200"
  },
  {
    "text": "and then that causes more bugs and it just gets worse and worse and worse and when you read like the state of Deo reports and things it just constantly",
    "start": "3580200",
    "end": "3587119"
  },
  {
    "text": "talks about this stuff about how important it is to you to recover quickly and to me like an effective test weite is like the center stage of of",
    "start": "3587119",
    "end": "3594520"
  },
  {
    "text": "that that particular problem for us I see that as a little bit of an MVP in the sense that you do the like the basic",
    "start": "3594520",
    "end": "3601880"
  },
  {
    "text": "thing you need in order to run with that and then you can always add to that so and what is included in that mvp is what",
    "start": "3601880",
    "end": "3609280"
  },
  {
    "text": "sort of you can say what is in the API in the sense of what you communicate what you commit to has to be tested the",
    "start": "3609280",
    "end": "3616440"
  },
  {
    "text": "expected behavior and at least catching the unexpected Behavior so even if it's",
    "start": "3616440",
    "end": "3622680"
  },
  {
    "text": "as basing as if not expected Behavior then and then this is like the very",
    "start": "3622680",
    "end": "3628599"
  },
  {
    "text": "minimum that you need to call this done and you can improve on that for example by breaking down the scenarios of not",
    "start": "3628599",
    "end": "3634599"
  },
  {
    "text": "expected a b c and so on yeah I really like that idea actually of anticipating",
    "start": "3634599",
    "end": "3641000"
  },
  {
    "text": "how it might be misused and catching that sometimes that really is helpful and that's really the only time I'll",
    "start": "3641000",
    "end": "3647400"
  },
  {
    "text": "write panics is if it's going to panic anyway but I want to add a bit more context or I want to just explain what",
    "start": "3647400",
    "end": "3654319"
  },
  {
    "text": "you what's happened in a more specific way so I do quite like that too sort of",
    "start": "3654319",
    "end": "3659359"
  },
  {
    "text": "defensive and try in the test some error cases and make sure that it doesn't do the thing you know because you passed in",
    "start": "3659359",
    "end": "3666480"
  },
  {
    "text": "I had a Thing Once where for whatever reason it was a username and password check and if they were both blank it was",
    "start": "3666480",
    "end": "3672960"
  },
  {
    "text": "just true it just work it would just return true so if you just didn't pass in anything and you know that's like not",
    "start": "3672960",
    "end": "3679440"
  },
  {
    "text": "great it's not the most secure software I've ever written it's actually one of the best ERS I've gotten for done to",
    "start": "3679440",
    "end": "3687039"
  },
  {
    "text": "knock it against the that list we're all just the last two days I've had to go through J tickets for a client because",
    "start": "3687039",
    "end": "3693599"
  },
  {
    "text": "they were like is all this stuff in there I'm like I don't know and I had to rip all the jur tickets out in a spreadsheet sorry and now my brain is",
    "start": "3693599",
    "end": "3700799"
  },
  {
    "text": "just like that it's I can't use jir directly I have to move it I have to see 30,000 feet of of feature functionality",
    "start": "3700799",
    "end": "3707520"
  },
  {
    "text": "and need just see it at a high level but for me I love that idea that it's done when I check those boxes off because all",
    "start": "3707520",
    "end": "3714760"
  },
  {
    "text": "that feature functionalities at least in there that's good now Chris said something that triggered something else",
    "start": "3714760",
    "end": "3721279"
  },
  {
    "text": "in my head and it's this idea of deploy first sort of development where you from",
    "start": "3721279",
    "end": "3729720"
  },
  {
    "text": "day one you get enough of a little thing working where you start deploying it",
    "start": "3729720",
    "end": "3735799"
  },
  {
    "text": "because if you're not deploying it day one you're not able to deal with bugs that are going to be only fixable at the",
    "start": "3735799",
    "end": "3742559"
  },
  {
    "text": "deployment level right or in the system you're deploying to too many people want to turn a debugger on which they can do",
    "start": "3742559",
    "end": "3748240"
  },
  {
    "text": "at their desk but they can't do in that system that they've deployed to and so",
    "start": "3748240",
    "end": "3753440"
  },
  {
    "text": "it's that same idea because like you can't have a test running for a full day you also got to already start learning",
    "start": "3753440",
    "end": "3758640"
  },
  {
    "text": "how to deal with that bug that's in the system out there that you've deployed so this I try to teach this too this idea",
    "start": "3758640",
    "end": "3764279"
  },
  {
    "text": "of deployment first sort of development where we get one little service going and we deploy it right away I love that",
    "start": "3764279",
    "end": "3771599"
  },
  {
    "text": "I think anything you can do from the beginning beginning any constraints you can put in like that really like I this",
    "start": "3771599",
    "end": "3778559"
  },
  {
    "text": "deploys automatically we have the tests have to always be passing before you can get them into main like those kinds of",
    "start": "3778559",
    "end": "3784640"
  },
  {
    "text": "rules I find them to be just great it's easy to do because you spread the pain out you're doing it you know as you go",
    "start": "3784640",
    "end": "3791319"
  },
  {
    "text": "along rather than waiting until the end and suddenly you have this Mammoth task",
    "start": "3791319",
    "end": "3796559"
  },
  {
    "text": "so yeah I think that applies to anything and be close to production as you can and things and and in my case with the",
    "start": "3796559",
    "end": "3803440"
  },
  {
    "text": "with the test Suite talked about by the way I can actually Point those tests to production and run the same test Suite",
    "start": "3803440",
    "end": "3810760"
  },
  {
    "text": "in production and that's a great nice little check after a post deploy it runs the same tests again and because it's",
    "start": "3810760",
    "end": "3817400"
  },
  {
    "text": "hitting real apis it's the same thing or very very similar so yeah I love that I",
    "start": "3817400",
    "end": "3822920"
  },
  {
    "text": "love that do it early and get your constraints in start with the constraints very hard to retrofit that's",
    "start": "3822920",
    "end": "3830160"
  },
  {
    "text": "why I do tdd as well that's also kind of the essence of the ITV right yeah",
    "start": "3830160",
    "end": "3837640"
  },
  {
    "text": "continuous yeah I'd like to say that like definitely making it so that those acceptance test can be run in production",
    "start": "3837640",
    "end": "3843160"
  },
  {
    "text": "is such an enabler for that kind of agility because you know just because those tests run locally or even in like",
    "start": "3843160",
    "end": "3849640"
  },
  {
    "text": "the staging environment you know the whole kind of Dev prod parity thing is a best like a white light when you go to",
    "start": "3849640",
    "end": "3855599"
  },
  {
    "text": "prod there's cdns involved there's other configuration involved which can break your software right but if you can run",
    "start": "3855599",
    "end": "3861720"
  },
  {
    "text": "these tests in production you suddenly have way more confidence in your ability to change the software and honestly like",
    "start": "3861720",
    "end": "3867920"
  },
  {
    "text": "one of the biggest challenges we have as Engineers is managing the cost of change because as we say like yeah for some",
    "start": "3867920",
    "end": "3874680"
  },
  {
    "text": "things there maybe is a state where the software is done but most software it always needs evolving and changing at",
    "start": "3874680",
    "end": "3880680"
  },
  {
    "text": "least for like a few years so the cost of change is so important and yeah trying to retrofit this stuff even a few",
    "start": "3880680",
    "end": "3888319"
  },
  {
    "text": "months later become so much more expensive and painful to do it's unreal like if you're starting a project today",
    "start": "3888319",
    "end": "3895480"
  },
  {
    "text": "like think about this stuff up front and make sure you you fit it in at first because otherwise you're just s yourself",
    "start": "3895480",
    "end": "3901119"
  },
  {
    "text": "up for pain yeah agree and one of the nice thing is and this happened I had an error a bug in production I wrote a test",
    "start": "3901119",
    "end": "3908319"
  },
  {
    "text": "to prove it ran the test Su against production and proved the bug and then I",
    "start": "3908319",
    "end": "3914279"
  },
  {
    "text": "was able to fix it locally and you know ran it locally too and saw the same behavior so that's first of all that's",
    "start": "3914279",
    "end": "3919960"
  },
  {
    "text": "quite important and then fixed it how confident was I that that was going to fix it like very confident I do a deploy",
    "start": "3919960",
    "end": "3928359"
  },
  {
    "text": "I'm like yeah the fix is going in now and I'm sure it's going to fix it it didn't but that's not the",
    "start": "3928359",
    "end": "3934760"
  },
  {
    "text": "point I'm curious about I've never thought about running tests in production so I think it's a brilliant",
    "start": "3934760",
    "end": "3940599"
  },
  {
    "text": "idea but my brain gets stuck on two things if the tests are doing some form",
    "start": "3940599",
    "end": "3945839"
  },
  {
    "text": "of database manipulation how do you not put that bad data in and if it's making",
    "start": "3945839",
    "end": "3952039"
  },
  {
    "text": "API calls how do you make sure that's not changing any state Andor cost that",
    "start": "3952039",
    "end": "3958520"
  },
  {
    "text": "might be involved I'm really curious about those two things well it does change the state because my later bits",
    "start": "3958520",
    "end": "3964160"
  },
  {
    "text": "of the test will be asking for that state to verify that it's correct I do it by I'll have either a usually it's",
    "start": "3964160",
    "end": "3970440"
  },
  {
    "text": "multi-tenant I that's another thing I tend to build everything kind of multi-tenant as well from the beginning",
    "start": "3970440",
    "end": "3976920"
  },
  {
    "text": "so it just ATT tenant that is a test account almost oh and then test users",
    "start": "3976920",
    "end": "3983000"
  },
  {
    "text": "and stuff some people like you shouldn't ever change your system to enable your tests are you comfortable having like",
    "start": "3983000",
    "end": "3990799"
  },
  {
    "text": "special little secrets that unlock things for testing I think you should avoid that as much as possible and you",
    "start": "3990799",
    "end": "3997119"
  },
  {
    "text": "should try and test as a user would as real user because if you start putting those kind of back doors in you run the",
    "start": "3997119",
    "end": "4004119"
  },
  {
    "text": "risk of making these tests that are green but actually it doesn't work for real users right I think for me it's a really interesting topic in itself is",
    "start": "4004119",
    "end": "4010000"
  },
  {
    "text": "just this having your architecture enable you to do this kind of test automation in production because again",
    "start": "4010000",
    "end": "4015440"
  },
  {
    "text": "like for me I remember being first exposed to this kind of thing I don't know like six years or so I was working on this project and I just cannot",
    "start": "4015440",
    "end": "4022599"
  },
  {
    "text": "describe how liberating it was compared to other projects I've worked on where we did like the big release day was the",
    "start": "4022599",
    "end": "4028839"
  },
  {
    "text": "most chill time of my life like we just sat there because we'd already run the test in production like hundreds if not",
    "start": "4028839",
    "end": "4034279"
  },
  {
    "text": "thousands of times before but we just hidden it all behind a feature flag and then we just turned the feat flag on",
    "start": "4034279",
    "end": "4040520"
  },
  {
    "text": "yeah it's fine all we really did was just stare at data dog all day just to Pat ourselves on the back because we",
    "start": "4040520",
    "end": "4046079"
  },
  {
    "text": "were so confident because we've run these tests in prod and these tests were like a user other observability",
    "start": "4046079",
    "end": "4051960"
  },
  {
    "text": "platforms are available sorry and then came time for all the loading tests and",
    "start": "4051960",
    "end": "4057200"
  },
  {
    "text": "so on and the chaos and started breaking things so I have a question for you",
    "start": "4057200",
    "end": "4062690"
  },
  {
    "text": "[Music] all you I actually think should probably",
    "start": "4062690",
    "end": "4070400"
  },
  {
    "text": "[Music] leave popular",
    "start": "4070400",
    "end": "4076220"
  },
  {
    "text": "[Music] opin so my question is how do you like",
    "start": "4076220",
    "end": "4082559"
  },
  {
    "text": "Matt's song no what is your unpopular opinion well this whole episode's been",
    "start": "4082559",
    "end": "4089240"
  },
  {
    "text": "bills I think Bill was slowly convincing you all is it popular Bill my opinion",
    "start": "4089240",
    "end": "4094520"
  },
  {
    "text": "yeah no I might lose have my Twitter followers after this one well you might anyway mate but I might anyway so I'm",
    "start": "4094520",
    "end": "4100838"
  },
  {
    "text": "starting yeah it's slowly happening so my unpopular opinion is you heard about",
    "start": "4100839",
    "end": "4107838"
  },
  {
    "text": "the whole FTX crash right and everything that's now falling behind it so my",
    "start": "4107839",
    "end": "4115278"
  },
  {
    "text": "opinion here is that the FTX crash shouldn't be associated with the blockchain technology directly it wasn't",
    "start": "4115279",
    "end": "4121758"
  },
  {
    "text": "the blockchain technology that caused that it was people that caused it and",
    "start": "4121759",
    "end": "4126960"
  },
  {
    "text": "again I'm not a crypto fan so I think all these people should go to jail 10 times over but I am a fan of the",
    "start": "4126960",
    "end": "4133960"
  },
  {
    "text": "technology that's being built and just the new math that's been built over the last five years in the crypto space and",
    "start": "4133960",
    "end": "4140920"
  },
  {
    "text": "I don't want to see that go away and so my opinion here is that people shouldn't be attaching what's happening with",
    "start": "4140920",
    "end": "4147798"
  },
  {
    "text": "people in like crypto with blockchain technology because one really has nothing to do with the other I am",
    "start": "4147799",
    "end": "4154640"
  },
  {
    "text": "interested in seeing how that goes here he goes everybody Qui that is a interesting one I'll be",
    "start": "4154640",
    "end": "4161318"
  },
  {
    "text": "very interested to see the results when they get pulled out onever platform survives hey you know if you're going to",
    "start": "4161319",
    "end": "4166679"
  },
  {
    "text": "do this do it right although it will be a new interesting bias given that more and more people are just not on Twitter",
    "start": "4166679",
    "end": "4172719"
  },
  {
    "text": "so the people that leave are the ones that more agree with you or less well I've moved to Tech hub. social I'm",
    "start": "4172719",
    "end": "4179560"
  },
  {
    "text": "actually moderating that instance so if people are looking to jump and they're looking for an instance that's being",
    "start": "4179560",
    "end": "4186120"
  },
  {
    "text": "moderated in the same way gbridge would moderate anything Tech hub. socials a",
    "start": "4186120",
    "end": "4191719"
  },
  {
    "text": "great place to check it out we'll add that in the show notes Chris do you have an unpopular opinion I don't know I I",
    "start": "4191719",
    "end": "4198719"
  },
  {
    "text": "completely forgot about a segment um and I feel Under Pressure that's unpopular mate",
    "start": "4198719",
    "end": "4204199"
  },
  {
    "text": "football's coming home there you go football's coming home it's like the wrong audience but I don't care football",
    "start": "4204199",
    "end": "4210600"
  },
  {
    "text": "is coming home is that the one with the green floor yeah and the ball and they kicking",
    "start": "4210600",
    "end": "4215760"
  },
  {
    "text": "it around yeah yeah I've seen it that one the round ball or the one with the yes is that an egg not the egg not the",
    "start": "4215760",
    "end": "4222000"
  },
  {
    "text": "egg ball not the egg that is that an egg and they've got CU they're not very careful with it if that's like a like an egg do you know what I mean they proper",
    "start": "4222000",
    "end": "4228520"
  },
  {
    "text": "just kick it they throw it around all sorts it's a spiky one jumping on it it's very strong egg isn't it Matt I",
    "start": "4228520",
    "end": "4234480"
  },
  {
    "text": "heard you have an unpopular opinion oh I did I did have an unpopular opinion actually I thought of one and I thought",
    "start": "4234480",
    "end": "4242199"
  },
  {
    "text": "I must write that down and then I distinctly remember not writing it down thinking it's so good I'll definitely",
    "start": "4242199",
    "end": "4248400"
  },
  {
    "text": "remember it but then I thought just building up for the next episode I see where this is going it's a sorry you",
    "start": "4248400",
    "end": "4255080"
  },
  {
    "text": "know but then I thought I should write it down but then I still didn't um I can't remember well next episode",
    "start": "4255080",
    "end": "4263080"
  },
  {
    "text": "tune in for Matt's unpopular opinion thank you Matt for joining thank you Christ and Bill for sharing your",
    "start": "4263080",
    "end": "4268880"
  },
  {
    "text": "thoughts it was very interesting thanks everyone who tuned in to listen and was Super Active on our slack that's super",
    "start": "4268880",
    "end": "4275560"
  },
  {
    "text": "fun that's uh it is very interesting and looks like this is a Hot Topic so we probably will meet again to talk about",
    "start": "4275560",
    "end": "4282400"
  },
  {
    "text": "this good rest of your day everyone bye",
    "start": "4282400",
    "end": "4288198"
  },
  {
    "text": "cheers that is our show for this week thanks for listening did you know we've",
    "start": "4290600",
    "end": "4295840"
  },
  {
    "text": "added a super brief Monday news Edition to the change log to complement our awesome long form interviews that we",
    "start": "4295840",
    "end": "4302639"
  },
  {
    "text": "publish each Friday give it a listen if you haven't yet the software world moves fast keep up with changelog news check",
    "start": "4302639",
    "end": "4310800"
  },
  {
    "text": "it out at changelog FM thanks thanks once again to our partners fastly and fly.io for helping make go time possible",
    "start": "4310800",
    "end": "4318239"
  },
  {
    "text": "to the mysterious Brak master cylinder for keeping our beat Supply on swole and to you for being part of the go time",
    "start": "4318239",
    "end": "4324080"
  },
  {
    "text": "Community connect with us at go time at changel log. next time on go time",
    "start": "4324080",
    "end": "4329840"
  },
  {
    "text": "security researcher Ivan kakowski is back again for our third edition of hacking with go so stay tuned we'll have",
    "start": "4329840",
    "end": "4337040"
  },
  {
    "text": "that episode ready for you next",
    "start": "4337040",
    "end": "4340679"
  },
  {
    "text": "week",
    "start": "4342480",
    "end": "4345480"
  },
  {
    "text": "hang on",
    "start": "4350639",
    "end": "4354199"
  }
]