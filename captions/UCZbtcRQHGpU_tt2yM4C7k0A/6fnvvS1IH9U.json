[
  {
    "text": "you said come armed with an unpopular opinion there's mine we don't need generics in go generics make go harder",
    "start": "40",
    "end": "5879"
  },
  {
    "text": "to read and they're going to decrease my quality of life as a go programmer so",
    "start": "5879",
    "end": "11480"
  },
  {
    "text": "there's my unpopular opinion tweet that up put put it on Twitter that's my UNP",
    "start": "11480",
    "end": "16600"
  },
  {
    "text": "generics will decrease my quality of life bandwith for change log is provided",
    "start": "16600",
    "end": "23599"
  },
  {
    "text": "by fastly learn more at fastly.com our feature flags are power by launch Darkly",
    "start": "23599",
    "end": "29320"
  },
  {
    "text": "check them out at launchd dark.com and we're hosted on Lino Cloud servers get $100 in hosting credit at lin.com",
    "start": "29320",
    "end": "37360"
  },
  {
    "text": "changelog what's up Gophers our friends over gravitational made a big transition at the end of 2020 to Rebrand as",
    "start": "37360",
    "end": "44840"
  },
  {
    "text": "teleport and shared a new product announcement to showcase the direction they're taking teleport is operating",
    "start": "44840",
    "end": "50199"
  },
  {
    "text": "from a vision of being able to run and access software anywhere in a secure and compliant manner something they call",
    "start": "50199",
    "end": "56879"
  },
  {
    "text": "environment free Computing with teleport engineering team teames can quickly access any resource anywhere using a",
    "start": "56879",
    "end": "63359"
  },
  {
    "text": "unified access plane that consolidates access controls and auditing across all",
    "start": "63359",
    "end": "68520"
  },
  {
    "text": "environments infrastructure applications as well as data teleport server access",
    "start": "68520",
    "end": "73799"
  },
  {
    "text": "let you Sate securely into Linux servers and smart devices with a complete audit Trail teleport ku's access let you",
    "start": "73799",
    "end": "80880"
  },
  {
    "text": "access kuber's cluster securely with complete visibility to access and behavior and finally teleport",
    "start": "80880",
    "end": "86920"
  },
  {
    "text": "application access let you access web apps running behind knack and firewalls with security and compliance try",
    "start": "86920",
    "end": "92680"
  },
  {
    "text": "teleport today in the cloud self-hosted or open source head to goport.com to",
    "start": "92680",
    "end": "97880"
  },
  {
    "text": "learn more get started again goport.com",
    "start": "97880",
    "end": "103118"
  },
  {
    "text": "[Music]",
    "start": "105380",
    "end": "110909"
  },
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "121280",
    "end": "127880"
  },
  {
    "text": "from around the go Community we record the show Live on YouTube join us every",
    "start": "127880",
    "end": "133040"
  },
  {
    "text": "Tuesday at 300 p.m. us Eastern Time subscribe at youtube.com/ changelog to",
    "start": "133040",
    "end": "139080"
  },
  {
    "text": "be notified and chat along with us in the go time FM channel of go for slack okay let's do this here we",
    "start": "139080",
    "end": "148640"
  },
  {
    "text": "go",
    "start": "148760",
    "end": "151760"
  },
  {
    "text": "hello and welcome to go time I'm Matt Rya today we're talking about code",
    "start": "156000",
    "end": "162319"
  },
  {
    "text": "generation hit it Brian repetitive code just makes me",
    "start": "162319",
    "end": "168200"
  },
  {
    "text": "sick so code generation always",
    "start": "169040",
    "end": "173840"
  },
  {
    "text": "clicked write the code that wres the [Music] code as long as you're not using no",
    "start": "174280",
    "end": "182599"
  },
  {
    "text": "talking about C [Music] generation this is the part where I",
    "start": "182599",
    "end": "188400"
  },
  {
    "text": "smashed the guitar brilliant smash it I've done that I did that at goer con oh",
    "start": "188400",
    "end": "194200"
  },
  {
    "text": "yeah well that was awesome so thank you so much to Brian there now let me do",
    "start": "194200",
    "end": "200519"
  },
  {
    "text": "proper introductions so you heard him already very early go adopter co-author",
    "start": "200519",
    "end": "206400"
  },
  {
    "text": "of go in action and co-creator of go foran and actually one of the original",
    "start": "206400",
    "end": "212920"
  },
  {
    "text": "cast of go time it's only Brian Kelson hello Brian it's only me I'm OG go time",
    "start": "212920",
    "end": "221120"
  },
  {
    "text": "yeah yes welcome back thanks it's a little bit surreal being here yeah it",
    "start": "221120",
    "end": "226720"
  },
  {
    "text": "has been so far all this guitar playing and you don't mention that he's in the Gopher band oh course a founding member",
    "start": "226720",
    "end": "234120"
  },
  {
    "text": "of the gophercon band how did that come about well you know we were thinking",
    "start": "234120",
    "end": "239280"
  },
  {
    "text": "about ways to entertain people at the first day after party and um I I thought",
    "start": "239280",
    "end": "247120"
  },
  {
    "text": "it might be a fun idea to get like a karaoke backup band so that we could we",
    "start": "247120",
    "end": "253000"
  },
  {
    "text": "could just have like one or two Gophers at a time singing or playing an instrument while the band backed us and",
    "start": "253000",
    "end": "259519"
  },
  {
    "text": "it um very very rapidly devolved into us being a whole band and we hired some",
    "start": "259519",
    "end": "266680"
  },
  {
    "text": "professional musicians to step in if we just didn't have enough people for a particular",
    "start": "266680",
    "end": "272080"
  },
  {
    "text": "song and it was great fun and of course in San Diego the Gopher band played on",
    "start": "272080",
    "end": "277800"
  },
  {
    "text": "uh like a carrier aircraft that was pretty awesome that's quite a gig yeah",
    "start": "277800",
    "end": "283960"
  },
  {
    "text": "although I would have to say that's probably the tamest year for crowd participation that people were busy",
    "start": "283960",
    "end": "289759"
  },
  {
    "text": "looking at airplanes and not so busy thrashing with us it's a little sad well",
    "start": "289759",
    "end": "295600"
  },
  {
    "text": "feel like it's going to be hard to like or it would have been hard to claim that as a business trip when they look at it and they're like you were clearly a rock",
    "start": "295600",
    "end": "302000"
  },
  {
    "text": "concert stage aircraft carrier that's not business you can't offset that with your",
    "start": "302000",
    "end": "307440"
  },
  {
    "text": "taxs well I should also introdu we're not we're not here alone you've heard His Voice already John Calhoun's also",
    "start": "307440",
    "end": "312960"
  },
  {
    "text": "here hello John hey Matt welcome back mate how are you I am doing well good",
    "start": "312960",
    "end": "319400"
  },
  {
    "text": "good good quality chat as usual John we're also joined uh by Chris Brando hello Chris hi Matt how are you I'm very",
    "start": "319400",
    "end": "327520"
  },
  {
    "text": "good thank you welcome back what's what been going on you know just life enjoying",
    "start": "327520",
    "end": "333840"
  },
  {
    "text": "February heard that said heard that phrase before but well that's great I'm",
    "start": "333840",
    "end": "339360"
  },
  {
    "text": "really excited about this episode because we're talking about a subject that I'm I'm really interested in um and",
    "start": "339360",
    "end": "345800"
  },
  {
    "text": "that is as we heard from our excellent opening song code",
    "start": "345800",
    "end": "352160"
  },
  {
    "text": "generation so for anyone that doesn't know what code generation is who wants to take a stab at explaining what do we",
    "start": "352160",
    "end": "358800"
  },
  {
    "text": "mean by code generation aren't we all generating code all the time code",
    "start": "358800",
    "end": "363919"
  },
  {
    "text": "generation is writing code that writes the code isn't that a bit dangerous Brian",
    "start": "363919",
    "end": "369400"
  },
  {
    "text": "like sort of getting into Terminator territory well it's a little bit like Barry Mano writing the songs that make",
    "start": "369400",
    "end": "375440"
  },
  {
    "text": "the whole world sing I I write the songs I write the songs yeah so a program that",
    "start": "375440",
    "end": "384280"
  },
  {
    "text": "writes programs so why wouldn't we just write the programs what what's the advant of doing it that in that strange",
    "start": "384280",
    "end": "391360"
  },
  {
    "text": "way I like to imagine this all started when somebody had a manager who like gave them raises based on how many lines",
    "start": "391360",
    "end": "397240"
  },
  {
    "text": "of code they wrote they like I'll write some code that'll write some code and then I'll get a big raise oh clever um I",
    "start": "397240",
    "end": "404120"
  },
  {
    "text": "did actually once get lines at school and they let me do them on the computer so I just copy and pasted and printed",
    "start": "404120",
    "end": "409759"
  },
  {
    "text": "out the lines and they accepted it because I don't think they knew how copy and paste worked nice yeah so maybe it",
    "start": "409759",
    "end": "417599"
  },
  {
    "text": "was something like that then when you say you got lines does that mean you were you were forced to to write out a",
    "start": "417599",
    "end": "423520"
  },
  {
    "text": "sentence yeah manually over like the Bart Simpson on this on the board yeah sorry that's what we call it we'd get",
    "start": "423520",
    "end": "429160"
  },
  {
    "text": "lines you have to just repeat something some lesson lot where I grew up getting lines meant uh mirrors and razor blades",
    "start": "429160",
    "end": "436479"
  },
  {
    "text": "and I just I don't want to confuse people okay yeah well I'm not as rock and roll as you Brian obviously",
    "start": "436479",
    "end": "443919"
  },
  {
    "text": "um um okay so programs then that write programs what's some good use cases for",
    "start": "443919",
    "end": "449840"
  },
  {
    "text": "that what sort of problem does that solve for us so my favorite is when you have a pattern that you want to apply to",
    "start": "449840",
    "end": "457400"
  },
  {
    "text": "a problem set and you you need to do that over and over um you know you need to treat a particular resource a certain",
    "start": "457400",
    "end": "464360"
  },
  {
    "text": "way and it's going to be the same for all the resources um there isn't exactly",
    "start": "464360",
    "end": "469560"
  },
  {
    "text": "a generic way to do it but it's such a cookie cutter approach that you can write something you can write some",
    "start": "469560",
    "end": "476280"
  },
  {
    "text": "metadata and then use that metadata to interest respect you know the problem domain and then generate",
    "start": "476280",
    "end": "483280"
  },
  {
    "text": "code yeah I've used it before I had um a data structure and obviously go doesn't",
    "start": "483280",
    "end": "488919"
  },
  {
    "text": "yet have generics but um I had a data structure that I wanted to support multiple types and I made I wrote a",
    "start": "488919",
    "end": "496319"
  },
  {
    "text": "little program where I could just give it the array of types that I wanted to support and it would generate the code",
    "start": "496319",
    "end": "502879"
  },
  {
    "text": "for each type so I got strong types uh but you know I didn't have to write out every version of it go generate is the",
    "start": "502879",
    "end": "510680"
  },
  {
    "text": "only generics we need in go oh boy we're already starting that you said come",
    "start": "510680",
    "end": "515719"
  },
  {
    "text": "armed with an unpopular opinion there's mine we don't need generics in go generics make go harder to read and they",
    "start": "515719",
    "end": "523719"
  },
  {
    "text": "are going to decrease my quality of life as a go programmer okay there's my unpopular opinion okay we do tweet that",
    "start": "523719",
    "end": "531080"
  },
  {
    "text": "up put put it on Twitter that's my un generics will decrease my quality of life yeah this is sort of Rockstar um",
    "start": "531080",
    "end": "540519"
  },
  {
    "text": "I'm struggling to deal with the Rockstar we've got we've got a dedicated segment for unpopular opinion I do things the",
    "start": "540519",
    "end": "545800"
  },
  {
    "text": "way I want to do things I'm old G go go time well we're here to",
    "start": "545800",
    "end": "552240"
  },
  {
    "text": "learn okay great uh so okay interesting so do you prefer code gen then to",
    "start": "552240",
    "end": "558240"
  },
  {
    "text": "generics very much so yeah I love code generation I think it's a a great way to solve many problems not every problem",
    "start": "558240",
    "end": "566079"
  },
  {
    "text": "can be solved with code generation but a lot of times you find yourself in a position where you have to do a similar",
    "start": "566079",
    "end": "571880"
  },
  {
    "text": "set of things for a similar set of resources and code generation is a great",
    "start": "571880",
    "end": "577240"
  },
  {
    "text": "way to make sure that that problem is solved consistently without getting into the generic stuff for me I code generation",
    "start": "577240",
    "end": "584720"
  },
  {
    "text": "probably first popped up when I was looking at things like apis where people connect with different programming languages and Swagger is probably one",
    "start": "584720",
    "end": "591279"
  },
  {
    "text": "that everybody's heard of at this point and probably like the ideal use case for code generation is you have this API",
    "start": "591279",
    "end": "597360"
  },
  {
    "text": "that you communicate with Json and HT GP and nobody wants to go write a library",
    "start": "597360",
    "end": "602440"
  },
  {
    "text": "you know like if you're a company and your whole company's written in Ruby or something like that you don't want to have to go write libraryies so other",
    "start": "602440",
    "end": "607640"
  },
  {
    "text": "people can connect to your API in every language Under the Sun that you probably don't know much about so code generation",
    "start": "607640",
    "end": "613279"
  },
  {
    "text": "is like an awesome tool for that type of use case too protuff uses code I think in general like serialization like if",
    "start": "613279",
    "end": "620519"
  },
  {
    "text": "you want it to go fast that's a really good use case for code gen cuz like you can do it with reflection and I don't",
    "start": "620519",
    "end": "626760"
  },
  {
    "text": "think generics is really going to replace any of that but if it's like a core part of what you're doing is",
    "start": "626760",
    "end": "633040"
  },
  {
    "text": "serialization and deserialization then having code gen can make it far easier and far more",
    "start": "633040",
    "end": "638279"
  },
  {
    "text": "maintainable um to to kind of write and and maintain that code so that like you",
    "start": "638279",
    "end": "644040"
  },
  {
    "text": "can have a struct with proper typed fields in there and they can be set directly because you sort of know in The",
    "start": "644040",
    "end": "650279"
  },
  {
    "text": "Meta sphere you know what those fields are you don't have to do reflection and and and other types of magic to wire",
    "start": "650279",
    "end": "657800"
  },
  {
    "text": "that up that kind of thing yeah yeah so like in a in a marshall Json or UNM Marshall Json instead of like throwing",
    "start": "657800",
    "end": "663399"
  },
  {
    "text": "it into the encoding Json libraries like hey go use a bunch of reflection and figure what all the fields are and then",
    "start": "663399",
    "end": "669000"
  },
  {
    "text": "translate into names you can just generate the direct code that will generate the Json for you and that is",
    "start": "669000",
    "end": "674800"
  },
  {
    "text": "much much faster than the reflection um code but also you know specialized use case most of the time the cost of",
    "start": "674800",
    "end": "681480"
  },
  {
    "text": "reflection there is not the bottleneck of your application yeah I find one problem that",
    "start": "681480",
    "end": "689160"
  },
  {
    "text": "we have with code Generation Um is that the code that gets generated tends to be quite ugly and",
    "start": "689160",
    "end": "696760"
  },
  {
    "text": "difficult to read it's kind of like it's it's almost like you either have nice",
    "start": "696760",
    "end": "702360"
  },
  {
    "text": "templates that you can read and and maintain and manage or you have nice output I feel like there's a tradeoff",
    "start": "702360",
    "end": "709120"
  },
  {
    "text": "between the two has anyone found that I don't think there has to be though it",
    "start": "709120",
    "end": "714440"
  },
  {
    "text": "used to be worse like are have you used it recently Chris cu like there was one",
    "start": "714440",
    "end": "720120"
  },
  {
    "text": "point in time where it was really hard to remove Whit space and I think all the templating libraries and go have added",
    "start": "720120",
    "end": "725800"
  },
  {
    "text": "like sort of directives to make that possible now but I know there was a time where Matt was completely right that",
    "start": "725800",
    "end": "731480"
  },
  {
    "text": "that doing that sort of thing was really hard to do because whites space essentially just caused issues yeah and",
    "start": "731480",
    "end": "737199"
  },
  {
    "text": "and step two was you step one generate code step two run go format yeah yeah",
    "start": "737199",
    "end": "742760"
  },
  {
    "text": "yeah if you're generating go code absolutely if you're generating go code but there is a package out there by a",
    "start": "742760",
    "end": "749360"
  },
  {
    "text": "gentleman named Dave on GitHub github.com dve and the package is called",
    "start": "749360",
    "end": "754440"
  },
  {
    "text": "DST decorated syntax tree and it is truly the most elegant solution I've",
    "start": "754440",
    "end": "760720"
  },
  {
    "text": "ever found for generating beautiful code brilliant yeah because this is a",
    "start": "760720",
    "end": "766920"
  },
  {
    "text": "gap I think in the standard Library there are packages in the standard library and they keep they've added new",
    "start": "766920",
    "end": "772040"
  },
  {
    "text": "ones too to make it easier but they're so difficult to use because I guess they're the tools that the go build tool",
    "start": "772040",
    "end": "778800"
  },
  {
    "text": "tools use and so they they kind of all powerful um but they seem really low",
    "start": "778800",
    "end": "784160"
  },
  {
    "text": "level and quite difficult to get your head around like you have to do value value and you know it's it's kind of",
    "start": "784160",
    "end": "789560"
  },
  {
    "text": "like reflection isn't it don't don't love that so much reflection is the easiest thing to do as a go programmer",
    "start": "789560",
    "end": "796079"
  },
  {
    "text": "it's it's fraught with Peril yes and we avoid it where we can I",
    "start": "796079",
    "end": "802519"
  },
  {
    "text": "think the the big thing that the DST package also brings is proper uh attachment of comments to",
    "start": "802519",
    "end": "809560"
  },
  {
    "text": "items in the syntax you think that's like the biggest failing of the as package within the standard library is",
    "start": "809560",
    "end": "814920"
  },
  {
    "text": "that you just lose all of your comments and they kind of just dangle all over the place yes that is a a problem does the",
    "start": "814920",
    "end": "822480"
  },
  {
    "text": "DST thing package does that actually maintain comments Brian do you know yeah",
    "start": "822480",
    "end": "828040"
  },
  {
    "text": "it does that's that was the the biggest selling point that Chris was mentioning is that",
    "start": "828040",
    "end": "833800"
  },
  {
    "text": "it it will keep your comments and put them back in the right place even after after it's parted the syntax tree yeah",
    "start": "833800",
    "end": "840959"
  },
  {
    "text": "so that's great well so that's like for using go code as the source data which you don't always have to do in code",
    "start": "840959",
    "end": "847880"
  },
  {
    "text": "generation I suppose and also like the templates um go templates you can use",
    "start": "847880",
    "end": "854240"
  },
  {
    "text": "those so just for anyone that hasn't done this yet really code generation is anything that outputs some code um but",
    "start": "854240",
    "end": "861120"
  },
  {
    "text": "but more specifically if you've got you you use like go templates the text one usually um a common mistake is to use",
    "start": "861120",
    "end": "868320"
  },
  {
    "text": "the h HTML template and then you end up with kind of HTML formatting happening in your code which you don't want",
    "start": "868320",
    "end": "874360"
  },
  {
    "text": "probably so you'll take some Source data from somewhere uh which could be go code",
    "start": "874360",
    "end": "879920"
  },
  {
    "text": "and then you mix that with a template and then and then you can generate go",
    "start": "879920",
    "end": "885079"
  },
  {
    "text": "code that's that's one way to do it other and but it doesn't have to be go code that you generate you can generate",
    "start": "885079",
    "end": "890120"
  },
  {
    "text": "all kinds of things generate SQL statements based on a go structure right",
    "start": "890120",
    "end": "897440"
  },
  {
    "text": "you can generate anything and in fact I gave a talk at abstractions the first abstraction",
    "start": "897440",
    "end": "902759"
  },
  {
    "text": "conference in Pittsburgh in 2016 or 17 called generate all the",
    "start": "902759",
    "end": "908600"
  },
  {
    "text": "things you remember the meme with the guy you know the really awkward looking Tech guy with the yellow and all the",
    "start": "908600",
    "end": "914920"
  },
  {
    "text": "things that was me generating all the things awward part too you know I it",
    "start": "914920",
    "end": "921160"
  },
  {
    "text": "probably is I'll I'll dig up a YouTube link for it and see if it's if there's a link for it uh yeah we'll put that in",
    "start": "921160",
    "end": "927519"
  },
  {
    "text": "our show notes but that talk was specifically about my intense love my",
    "start": "927519",
    "end": "933920"
  },
  {
    "text": "burning passion for having a DSL as a source of Truth for your systems and",
    "start": "933920",
    "end": "943000"
  },
  {
    "text": "generating the code from that source of Truth so if you if you want to know information about a type you look at the",
    "start": "943000",
    "end": "949759"
  },
  {
    "text": "DSL if you wanted to handle that type with rubic code you generate Ruby code to use it or you generate C or go or",
    "start": "949759",
    "end": "957399"
  },
  {
    "text": "database code or whatever but that DSL is is a system of record for all of the",
    "start": "957399",
    "end": "963160"
  },
  {
    "text": "information in your Enterprise so I have a question for you",
    "start": "963160",
    "end": "969440"
  },
  {
    "text": "um we've talked about this several times on the show where in languages like Ruby or any Dynamic language you can",
    "start": "969440",
    "end": "975199"
  },
  {
    "text": "dynamically catch like if a method's missing and then you can add code do you consider that code generation as well or",
    "start": "975199",
    "end": "981639"
  },
  {
    "text": "does it have to be something where in go you actually have to spit out some go code that can be compiled because that's",
    "start": "981639",
    "end": "986759"
  },
  {
    "text": "how go works so do you differentiate between the two or do you kind of consider the two similar well I would",
    "start": "986759",
    "end": "992720"
  },
  {
    "text": "say code generation you're writing new code and in Ruby using something like",
    "start": "992720",
    "end": "998279"
  },
  {
    "text": "method missing that's more metaprogramming although they're really close cousins I don't think they're",
    "start": "998279",
    "end": "1004920"
  },
  {
    "text": "exactly the same but they're similar if we have time at the end of the show remind me to tell you about how",
    "start": "1004920",
    "end": "1012040"
  },
  {
    "text": "method missing uh cost the state of Georgia several million",
    "start": "1012040",
    "end": "1017480"
  },
  {
    "text": "dollars yes that's definitely going",
    "start": "1017480",
    "end": "1022959"
  },
  {
    "text": "in I do have to say when it comes to to code generating specifically when you're trying to generate go code I feel like",
    "start": "1023000",
    "end": "1030400"
  },
  {
    "text": "the the text template package is actually kind of bad for that and it's better to write actual go code and then",
    "start": "1030400",
    "end": "1036038"
  },
  {
    "text": "use the tools we were talking about to parse it and then kind of manipulate it that way and stamp it out um because",
    "start": "1036039",
    "end": "1041880"
  },
  {
    "text": "then when you're actually writing the templates you're writing real go cod so you get syntax highlighting you get uh",
    "start": "1041880",
    "end": "1047520"
  },
  {
    "text": "you know formatting that really nice you get compile errors and all of that nice stuff whereas when you're just working",
    "start": "1047520",
    "end": "1053520"
  },
  {
    "text": "with text templates it's just like you know a little bit wonky so how how do you do loops and",
    "start": "1053520",
    "end": "1059760"
  },
  {
    "text": "things in that then if you're going to iterate through a set of data how do you do that in the go code four",
    "start": "1059760",
    "end": "1067600"
  },
  {
    "text": "range okay I mean we're since it's just like the templates too right you're just like taking the the templatized code you",
    "start": "1067600",
    "end": "1074000"
  },
  {
    "text": "usually have to wrap it in a function or something but you're just like pulling out the guts of a function and then your IDL or whatever will specify and you'll",
    "start": "1074000",
    "end": "1080840"
  },
  {
    "text": "have the the glue code that'll be like okay now you need to like stamp this thing out within this function you know",
    "start": "1080840",
    "end": "1086080"
  },
  {
    "text": "multiple times or within this you know domain multiple times right it does look a little bit different than what",
    "start": "1086080",
    "end": "1092120"
  },
  {
    "text": "templates look like since you don't have that kind of inbuilt looping and and variable assignment um but I think that",
    "start": "1092120",
    "end": "1098720"
  },
  {
    "text": "can also help make it a little bit cleaner because then you're kind of separating things out a bit more and your templates can just be like this is",
    "start": "1098720",
    "end": "1105520"
  },
  {
    "text": "the Prototype of what I want the code to look like m yeah yeah that's great that same person Dave who wrote DST also",
    "start": "1105520",
    "end": "1112799"
  },
  {
    "text": "built an application called Jennifer and Jennifer Builds on top of",
    "start": "1112799",
    "end": "1118159"
  },
  {
    "text": "DST to help you generate code and it's Jennifer because you know what what a",
    "start": "1118159",
    "end": "1124240"
  },
  {
    "text": "programming application without a great punny name and Jennifer is my personal favorite tool for generating code",
    "start": "1124240",
    "end": "1131039"
  },
  {
    "text": "because it it builds on top of that DST uh and it lets you write functions based",
    "start": "1131039",
    "end": "1137240"
  },
  {
    "text": "on theocc currence and Order of syntax in",
    "start": "1137240",
    "end": "1142679"
  },
  {
    "text": "your So you you're parsing your syntax tree and you find this particular node",
    "start": "1142679",
    "end": "1148640"
  },
  {
    "text": "you can write a function that generates code based on the state of your current",
    "start": "1148640",
    "end": "1154320"
  },
  {
    "text": "tree and it's it's really really nice that is cool the cleanest generator I've",
    "start": "1154320",
    "end": "1159840"
  },
  {
    "text": "ever seen so how does that look when you're writing the code is it are you",
    "start": "1159840",
    "end": "1165039"
  },
  {
    "text": "literally you have types like functions and and there's like some kind of yeah of DSL Builder pattern type API",
    "start": "1165039",
    "end": "1171559"
  },
  {
    "text": "something yeah yeah it's it's it's really just um types and functions so you've got your AST and you you do some",
    "start": "1171559",
    "end": "1178400"
  },
  {
    "text": "sort of walk there's there's always a walking function where you walk the A and you build up State and as soon as",
    "start": "1178400",
    "end": "1184720"
  },
  {
    "text": "you hit some sort of desired State you know you've got the right number of nodes in your tree then you trigger a",
    "start": "1184720",
    "end": "1191600"
  },
  {
    "text": "function that generates code because you have enough you have enough state but those functions are things like you know",
    "start": "1191600",
    "end": "1199120"
  },
  {
    "text": "as. create function right and each of those also",
    "start": "1199120",
    "end": "1204320"
  },
  {
    "text": "takes a function as it's U as one of the parameters so you have these nested",
    "start": "1204320",
    "end": "1210760"
  },
  {
    "text": "functions and it's very powerful Paradigm but it can be hard to follow you know the first couple times you do",
    "start": "1210760",
    "end": "1217080"
  },
  {
    "text": "it you kind of tilt your head sideways and what the hell yeah so takes a bit of",
    "start": "1217080",
    "end": "1223320"
  },
  {
    "text": "getting used to but it kind of any any of this metaprogramming is a bit like that it's a bit like in ception where",
    "start": "1223320",
    "end": "1228640"
  },
  {
    "text": "you've gone into someone else's dream isn't it a bit yeah a little bit a",
    "start": "1228640",
    "end": "1234000"
  },
  {
    "text": "little bit yeah a little bit I feel like the reflection package is a lot like that too where like the first few times",
    "start": "1234000",
    "end": "1239320"
  },
  {
    "text": "you use it especially when you're trying to do something clever like calling a function and you're just kind of like",
    "start": "1239320",
    "end": "1244600"
  },
  {
    "text": "what's going on I'm very confused about what I'm supposed to be doing here you're trying to call a function on a",
    "start": "1244600",
    "end": "1249880"
  },
  {
    "text": "pointer type of a struct or an interface have fun and it's like oh I",
    "start": "1249880",
    "end": "1256760"
  },
  {
    "text": "have these values but I have to turn them into to like reflect values and and how do I do that and yeah it it it's",
    "start": "1256760",
    "end": "1262679"
  },
  {
    "text": "confusing at first but I also feel like it's like once you understand the reflect package there's a certain class",
    "start": "1262679",
    "end": "1269120"
  },
  {
    "text": "of code that you can just write it becomes so much easier I found there's like tests that I've written where I",
    "start": "1269120",
    "end": "1274880"
  },
  {
    "text": "would have had to have like hundreds of lines of more code to express them but since I know how to use a reflection",
    "start": "1274880",
    "end": "1280240"
  },
  {
    "text": "package I just sat down and wrote them out and it was like 30 lines of code and now I can like run basically any type of",
    "start": "1280240",
    "end": "1287480"
  },
  {
    "text": "function that I want want and and assert values and all of this stuff yeah the problem is you don't know it's wrong",
    "start": "1287480",
    "end": "1293120"
  },
  {
    "text": "until you run it because of course you know it's it's abstract isn't it so it's not like you get the compiler to help",
    "start": "1293120",
    "end": "1299720"
  },
  {
    "text": "you check the things you're doing make sense there's a lot more runtime in reflection um but you know if you're",
    "start": "1299720",
    "end": "1306400"
  },
  {
    "text": "like I like test I like writing tests it's not so much of a problem you like writing tests I love it actually",
    "start": "1306400",
    "end": "1313880"
  },
  {
    "text": "sometimes only that's all I do sounds pretty boring if for I'll fail",
    "start": "1313880",
    "end": "1320039"
  },
  {
    "text": "good point I would definitely say that my experience with generation is kind of similar to my experience with reflection",
    "start": "1320200",
    "end": "1325799"
  },
  {
    "text": "as well in the sense that Matt you were saying you don't know what Reflections wrong until you run it but I honestly felt like with generation I I was almost",
    "start": "1325799",
    "end": "1332120"
  },
  {
    "text": "in a similar boat where I had to actually run it with like what knowing what I wanted as the output to see if it",
    "start": "1332120",
    "end": "1338679"
  },
  {
    "text": "did it and sometimes it was just cuz I didn't understand something was happening yeah but once you get it it's",
    "start": "1338679",
    "end": "1344400"
  },
  {
    "text": "easier it just took a little bit to you actually made sure you grasped everything correctly years ago I wrote a package with a",
    "start": "1344400",
    "end": "1350279"
  },
  {
    "text": "friend of mine called Jenny and is not to be confused with Mark bat's package Jenny from go Buffalo where he he he",
    "start": "1350279",
    "end": "1357159"
  },
  {
    "text": "just as far as I can tell just stole the name from me um but luckily for him I'm",
    "start": "1357159",
    "end": "1362279"
  },
  {
    "text": "not very litigious but we'll see if he keeps texting me to the things he texts me well maybe that'll change um anyway",
    "start": "1362279",
    "end": "1369880"
  },
  {
    "text": "this package did what Chris you were you were describing where you have there was a special type so it was real go code",
    "start": "1369880",
    "end": "1377360"
  },
  {
    "text": "and it was just like an interface type but it had a special name and and then",
    "start": "1377360",
    "end": "1382760"
  },
  {
    "text": "it would the the tool would process that and then you were able to replace that type with other types so it's kind of",
    "start": "1382760",
    "end": "1388720"
  },
  {
    "text": "like generics very lightweight generics it's it's still used by people but I",
    "start": "1388720",
    "end": "1394440"
  },
  {
    "text": "don't know I mean but that's that's kind of a nice way to do that because then like you say the real code the the",
    "start": "1394440",
    "end": "1400559"
  },
  {
    "text": "source code the template is real code so anything you can do to help yourself in",
    "start": "1400559",
    "end": "1406720"
  },
  {
    "text": "that way and and like gofm is a is a great one if you're generating go code",
    "start": "1406720",
    "end": "1411880"
  },
  {
    "text": "although I suppose if you're using that Dave Jennifer package um it probably",
    "start": "1411880",
    "end": "1417360"
  },
  {
    "text": "formats it for you doesn't it it does yeah it outputs code in in the right format yeah that's BR some people put",
    "start": "1417360",
    "end": "1426480"
  },
  {
    "text": "code generation as part of their continuous integration build I prefer it",
    "start": "1426480",
    "end": "1431919"
  },
  {
    "text": "to be a developer time exercise how does everybody feel about that can of worms",
    "start": "1431919",
    "end": "1438960"
  },
  {
    "text": "is open are there any good cases for putting it in the in the CI because I",
    "start": "1438960",
    "end": "1446200"
  },
  {
    "text": "feel like you'd want to you want to run the tools to generate and then run your",
    "start": "1446200",
    "end": "1451320"
  },
  {
    "text": "tests and then you push it don't you what's the use case for having the continuous integration generating code",
    "start": "1451320",
    "end": "1458360"
  },
  {
    "text": "Salt and Pepper Push It yes come on now you guys aren't that",
    "start": "1458360",
    "end": "1464440"
  },
  {
    "text": "young so I would say that the biggest case again developer side code generation checking",
    "start": "1464440",
    "end": "1471159"
  },
  {
    "text": "in generated code is the fact that you don't have any control over the tool used to generate the code if you're",
    "start": "1471159",
    "end": "1477679"
  },
  {
    "text": "using version 1.2 of the code generation but you're expecting 1.4 then nobody will know that until",
    "start": "1477679",
    "end": "1485320"
  },
  {
    "text": "some point later on and using your CI environment to create a known good code",
    "start": "1485320",
    "end": "1491480"
  },
  {
    "text": "generation would be the antidote to that problem yeah interesting I don't know",
    "start": "1491480",
    "end": "1497159"
  },
  {
    "text": "you could easily play either side of that fence yeah actually I've been playing around with code spaces on",
    "start": "1497159",
    "end": "1503120"
  },
  {
    "text": "GitHub and that's essentially like gives you vs code virtual environment and you",
    "start": "1503120",
    "end": "1509799"
  },
  {
    "text": "can just by specifying a Docker file you can actually like install all dependencies and things like that so",
    "start": "1509799",
    "end": "1516039"
  },
  {
    "text": "that's a really interesting idea to have these controlled Dev environments it would would address that particular",
    "start": "1516039",
    "end": "1522120"
  },
  {
    "text": "problem but what about go generate because go generate is a command that you have to run",
    "start": "1522120",
    "end": "1528200"
  },
  {
    "text": "like like you have to run that explicitly don't you the go builds doesn't run any go generates maybe we",
    "start": "1528200",
    "end": "1533640"
  },
  {
    "text": "should just take a minute to explain what go generate is for anyone unfamiliar we should take a minute for",
    "start": "1533640",
    "end": "1539120"
  },
  {
    "text": "that so go generate is a another magic comment yet another magic comment can we",
    "start": "1539120",
    "end": "1546799"
  },
  {
    "text": "put that in in Magic emphasis yet another magic comment in go code that does on the screen non-programmatic that",
    "start": "1546799",
    "end": "1555399"
  },
  {
    "text": "um that specifies a command to be run when um when a file is triggered by code",
    "start": "1555399",
    "end": "1563520"
  },
  {
    "text": "generate so you type code generate from the command line and any go code that has the go generate comment will run the",
    "start": "1563520",
    "end": "1571039"
  },
  {
    "text": "command after the go generate comment and that command doesn't have to be related to",
    "start": "1571039",
    "end": "1576279"
  },
  {
    "text": "go it quite literally can be any shell command for your computer so you could say go generate Spotify open playlist",
    "start": "1576279",
    "end": "1585000"
  },
  {
    "text": "and every time you run code it will open Spotify and play Guns and Roses so go",
    "start": "1585000",
    "end": "1590399"
  },
  {
    "text": "generate is literally just a trigger to cause a thing to",
    "start": "1590399",
    "end": "1596200"
  },
  {
    "text": "happen yes by the way everyone's going to be doing that now aren't they yeah they'll probably play that",
    "start": "1596200",
    "end": "1602960"
  },
  {
    "text": "that song we'll play your song probably from the opening of the show talking",
    "start": "1602960",
    "end": "1608399"
  },
  {
    "text": "about C generation I'd love that to pop out must be because every time I'm doing that every time you're building yeah could",
    "start": "1608399",
    "end": "1615360"
  },
  {
    "text": "you do like a whole album and we could have one for failed test and sure sure do the whole set you've got the Sweet",
    "start": "1615360",
    "end": "1621520"
  },
  {
    "text": "Child Of Mind covered so I'm not sure if there's enough room for the two of us in this industry I bow to your Superior",
    "start": "1621520",
    "end": "1629120"
  },
  {
    "text": "capabilities oh no no no no okay so are there any common gutches are something",
    "start": "1629120",
    "end": "1635000"
  },
  {
    "text": "that we should look out for when it comes to generating code absolutely",
    "start": "1635000",
    "end": "1640679"
  },
  {
    "text": "tests uh 100% required if you're going to generate code then you need to have",
    "start": "1640679",
    "end": "1647080"
  },
  {
    "text": "known inputs and expected outputs and test against those as a unit test and",
    "start": "1647080",
    "end": "1653320"
  },
  {
    "text": "then as an integration type test a broader test uh test that the code that",
    "start": "1653320",
    "end": "1658559"
  },
  {
    "text": "you generate does what you expect it to do as well and would you say not to generate the test code I actually love",
    "start": "1658559",
    "end": "1666399"
  },
  {
    "text": "generating test code right so the question is the test code that you",
    "start": "1666399",
    "end": "1671640"
  },
  {
    "text": "generate actually test your code you know who watches the custodians I don't",
    "start": "1671640",
    "end": "1677159"
  },
  {
    "text": "remember the Latin key custodian I don't know who watches the watch watching the Watchers yeah so to make sure I'm",
    "start": "1677159",
    "end": "1683480"
  },
  {
    "text": "getting this right you're saying that you enjoy generating both the code that's going to do whatever you need to do plus generating tests for that code I",
    "start": "1683480",
    "end": "1691840"
  },
  {
    "text": "just want to make sure we're on the same page that's correct okay that's something I've always sort of it's not",
    "start": "1691840",
    "end": "1697600"
  },
  {
    "text": "that I've been against it it's just I've always I guess veered away from it cuz",
    "start": "1697600",
    "end": "1702679"
  },
  {
    "text": "it it kind of I don't know it almost felt like I I wasn't actually",
    "start": "1702679",
    "end": "1708799"
  },
  {
    "text": "how do I put this don't worry about offending Brian I'm not trying to offend it it felt almost like those",
    "start": "1708799",
    "end": "1716760"
  },
  {
    "text": "tests never actually failed or told me anything useful at the time I was doing it so I kind of just stopped doing it at",
    "start": "1716760",
    "end": "1721799"
  },
  {
    "text": "the time bonus of code generation because you generate code that works",
    "start": "1721799",
    "end": "1727000"
  },
  {
    "text": "because you've extracted it out of a pattern that already works it's not like you start generating bad code and then",
    "start": "1727000",
    "end": "1733039"
  },
  {
    "text": "you catch it by writing a good test I always start I shouldn't say you because I don't know what you do but I always",
    "start": "1733039",
    "end": "1738880"
  },
  {
    "text": "start with a pattern that I know that works and then I abstract that into code generation and once you have that then",
    "start": "1738880",
    "end": "1746399"
  },
  {
    "text": "you can write your tests against it and you can generate them yeah I feel like those meta tests the ones you were",
    "start": "1746399",
    "end": "1752480"
  },
  {
    "text": "talking about either testing the source thing the first the the original thing or those integration tests I feel like",
    "start": "1752480",
    "end": "1759320"
  },
  {
    "text": "they're extremely useful yeah I mean it's very satisfying when you start",
    "start": "1759320",
    "end": "1765360"
  },
  {
    "text": "doing code generation and you see working with just one one bit of data",
    "start": "1765360",
    "end": "1770559"
  },
  {
    "text": "one input and then you just add all the data and suddenly you just see all this code being generated it really is very",
    "start": "1770559",
    "end": "1777399"
  },
  {
    "text": "satisfying whether it should be or not uh don't you find oh very much very much",
    "start": "1777399",
    "end": "1782720"
  },
  {
    "text": "so my moment of eye openening this what do you call that my my aha moment for",
    "start": "1782720",
    "end": "1788960"
  },
  {
    "text": "code generation was when I stumbled across Goa in I 2016 or 2015 I don't",
    "start": "1788960",
    "end": "1795440"
  },
  {
    "text": "remember and Goa is is interesting because most dsls that you find in the",
    "start": "1795440",
    "end": "1801200"
  },
  {
    "text": "programming world aren't written in go go is not an easy language to use to write a DSL you can use go structs as",
    "start": "1801200",
    "end": "1809039"
  },
  {
    "text": "the source of your code generation but actual go code functions not pretty you",
    "start": "1809039",
    "end": "1814200"
  },
  {
    "text": "know Ruby python beautiful languages for writing dsls but Raphael who wrote Goa",
    "start": "1814200",
    "end": "1820720"
  },
  {
    "text": "found a way to build dsls that was elegant and when I saw that I me medely",
    "start": "1820720",
    "end": "1828320"
  },
  {
    "text": "demanded in my open source friendly sort of way that he take the template engine",
    "start": "1828320",
    "end": "1833519"
  },
  {
    "text": "the the DSL engine and make it generic so that it wasn't just GOA that you could uh write dsls for and he said pull",
    "start": "1833519",
    "end": "1842880"
  },
  {
    "text": "requests speak baby so that that was the first thing I did I I took the DSL engine and made it generic so that you",
    "start": "1842880",
    "end": "1849200"
  },
  {
    "text": "can create any DSL with the DSL engine for Goa and that was it I mean I was so",
    "start": "1849200",
    "end": "1855559"
  },
  {
    "text": "sold at that point because you're writing what looks like a DSL you're",
    "start": "1855559",
    "end": "1861080"
  },
  {
    "text": "describing your system and that builds a tree a syntax tree that then executes",
    "start": "1861080",
    "end": "1868840"
  },
  {
    "text": "code that writes code for you and that code can be anything I mean you can go from the gamut of writing SQL IDL files",
    "start": "1868840",
    "end": "1877600"
  },
  {
    "text": "all the way across the Spectrum to writing kubernetes deployment manifests",
    "start": "1877600",
    "end": "1883159"
  },
  {
    "text": "with the same DSL that's brilliant yeah wouldn't you do that if you could I think that's",
    "start": "1883159",
    "end": "1889639"
  },
  {
    "text": "probably the big appeal for any code generation like Matt you've mentioned Auto before and you use that to generate",
    "start": "1889639",
    "end": "1896039"
  },
  {
    "text": "both go side code and JavaScript code to connect to it and just having that idea of the developer only has to do",
    "start": "1896039",
    "end": "1901919"
  },
  {
    "text": "something once is is very appealing I suspect that's also why like when we look at code generation there are",
    "start": "1901919",
    "end": "1909080"
  },
  {
    "text": "several tools out there for generating basically models to connect to a database and I think that's appealing to",
    "start": "1909080",
    "end": "1915159"
  },
  {
    "text": "a lot of people because they think I don't want to write all this code that connects to the database and I know people have mixed you feelings about you",
    "start": "1915159",
    "end": "1921639"
  },
  {
    "text": "know using something like that versus not but it is by far one of the more common use cases I see and I think it's",
    "start": "1921639",
    "end": "1928279"
  },
  {
    "text": "because people like are just attracted to that idea of I only have to Define this stuff once and then all the other",
    "start": "1928279",
    "end": "1933360"
  },
  {
    "text": "code forts generated John opens the OM can of worms",
    "start": "1933360",
    "end": "1938399"
  },
  {
    "text": "early in the show today I mean it had to come up at some point and the orms generally take two",
    "start": "1938399",
    "end": "1945279"
  },
  {
    "text": "approaches when they're generating code of either the Go's the source of Truth or the sequel is the source of Truth and",
    "start": "1945279",
    "end": "1951360"
  },
  {
    "text": "I think that's probably one of the bigger I guess can of worms to get into",
    "start": "1951360",
    "end": "1957000"
  },
  {
    "text": "as to which one's right and and which one's going to cause you more problems down the road what's the answer",
    "start": "1957000",
    "end": "1963399"
  },
  {
    "text": "then personally I guess it just depends I've found more luck with things like like I",
    "start": "1963399",
    "end": "1970720"
  },
  {
    "text": "think sequel boiler is one that takes the SQL and generates the go code and I I found more luck with that typee of",
    "start": "1970720",
    "end": "1976080"
  },
  {
    "text": "approach most of the time but there are definitely cases where the opposite is easier for instance if",
    "start": "1976080",
    "end": "1981720"
  },
  {
    "text": "you're Tak taking somebody who's new to developing web applications and they've gotten some go down at that point it's",
    "start": "1981720",
    "end": "1988519"
  },
  {
    "text": "probably easier to use one that takes the go and generates whatever it needs for the database side because they already get what the go is but it really",
    "start": "1988519",
    "end": "1994840"
  },
  {
    "text": "just depends on you know the team and what you're doing in that sense I've definitely seen cases where if you have",
    "start": "1994840",
    "end": "2000679"
  },
  {
    "text": "the go stuff defining what the database is and then some migrations or changes can be kind of tricky to",
    "start": "2000679",
    "end": "2007519"
  },
  {
    "text": "I guess Express correctly for some people or it's easy to have some weird bugs like that where the go code changes and the sequel doesn't necessarily",
    "start": "2007519",
    "end": "2013720"
  },
  {
    "text": "change the way you need it to to reflect that MH but I don't know I don't want to get into the OM can of worms I have",
    "start": "2013720",
    "end": "2019960"
  },
  {
    "text": "mixed feelings about them they're definitely a tool that I've found use for but most people seem to hate them in",
    "start": "2019960",
    "end": "2025880"
  },
  {
    "text": "the go Community for whatever reason yeah know there's no shortage of opinions in the go Community which is",
    "start": "2025880",
    "end": "2031360"
  },
  {
    "text": "it's really strange you know most communities don't have any opinions but the go Community is full of them",
    "start": "2031360",
    "end": "2037720"
  },
  {
    "text": "yes and we're all so cordial to each other [Music]",
    "start": "2037720",
    "end": "2053098"
  },
  {
    "text": "too this episode is brought to you by launch darkley feature management for the modern Enterprise power",
    "start": "2053560",
    "end": "2060240"
  },
  {
    "text": "experimentation in production here's how it works launch Darkly enables development and operation teams to",
    "start": "2060240",
    "end": "2066398"
  },
  {
    "text": "deploy code at any time even if a feature isn't ready to be released to users wrapping code with feature Flags",
    "start": "2066399",
    "end": "2072638"
  },
  {
    "text": "gives you the safety to test new features and infrastructure in your production environments without",
    "start": "2072639",
    "end": "2077800"
  },
  {
    "text": "impacting the wrong end users when you're ready to release more Wy simply update the feature flag and the changes",
    "start": "2077800",
    "end": "2084320"
  },
  {
    "text": "are made instantaneously by the real-time streaming architecture eliminate risk deliver value get started",
    "start": "2084320",
    "end": "2090079"
  },
  {
    "text": "for free today at launchdarkly dcom again launchd dark.com [Music]",
    "start": "2090079",
    "end": "2104909"
  },
  {
    "text": "there's another interesting use case I've seen for this uh anesto gimenez did",
    "start": "2112760",
    "end": "2117960"
  },
  {
    "text": "it in testify so there's two packages in testify for um assertions there's the",
    "start": "2117960",
    "end": "2123560"
  },
  {
    "text": "assert package and then there's the require package and the only difference is one will fail immediately and the",
    "start": "2123560",
    "end": "2129760"
  },
  {
    "text": "other will let you carry on and sort of collect failures up and present them all in one go and a lot of people prefer",
    "start": "2129760",
    "end": "2137480"
  },
  {
    "text": "tests when they fail to just fail at the first thing and then you can just address that and then work in that way",
    "start": "2137480",
    "end": "2143400"
  },
  {
    "text": "so that require package is generated from the assert package so it kind of",
    "start": "2143400",
    "end": "2148680"
  },
  {
    "text": "guarantees that the the two apis are the same or similar enough or you know the",
    "start": "2148680",
    "end": "2154560"
  },
  {
    "text": "same in the same way different in the same way way I'll think of what the correct way to phrase that is later and",
    "start": "2154560",
    "end": "2160599"
  },
  {
    "text": "we'll edit it in but I thought that's quite a clever orthogonal yeah thanks",
    "start": "2160599",
    "end": "2165880"
  },
  {
    "text": "thank you I didn't do a computer science so I don't know what I'm talking about yes that one it's a nice use case",
    "start": "2165880",
    "end": "2174200"
  },
  {
    "text": "because in that sense you want to carry over the knowledge from one of those packages to the other and use them",
    "start": "2174200",
    "end": "2180440"
  },
  {
    "text": "interchangeably so I thought that was quite a clever way to do that do you think about that yeah fine yeah BR can't",
    "start": "2180440",
    "end": "2187440"
  },
  {
    "text": "be witness I mean it sounds like a good use case brilliant thanks Chris we appreciate your opinion",
    "start": "2187440",
    "end": "2193599"
  },
  {
    "text": "great one of the interesting things for me about code generation is that I feel like you see a lot of like Matt's",
    "start": "2193880",
    "end": "2200040"
  },
  {
    "text": "defining a case where he had one code and like one set of code and basically it sounds like he didn't want to have to write it twice which makes sense and The",
    "start": "2200040",
    "end": "2206839"
  },
  {
    "text": "Simple Solution is just well I'll just generate the second version and now another approach to that would be to take the code and sort of abstract it",
    "start": "2206839",
    "end": "2212720"
  },
  {
    "text": "away so that you have one thing that can be used in both cases but at the same time that requires some work so it's",
    "start": "2212720",
    "end": "2219319"
  },
  {
    "text": "it's interesting how people use it to solve different problems that it's not like it's the only solution but it's definitely a solution to the problem",
    "start": "2219319",
    "end": "2226000"
  },
  {
    "text": "yeah yeah I feel like code generation is one of those things like SQL normalization you know you've got n levels of normalization in SQL you know",
    "start": "2226000",
    "end": "2233319"
  },
  {
    "text": "third normal fourth normal fifth normal form code generation is kind of the same way you know the the level one of code",
    "start": "2233319",
    "end": "2239119"
  },
  {
    "text": "generation is taking this template and plugging in a variable here or there and spitting out some code you know level",
    "start": "2239119",
    "end": "2245960"
  },
  {
    "text": "two is is you know maybe throwing some if loops and and some statements in there when you get all the way up to",
    "start": "2245960",
    "end": "2251079"
  },
  {
    "text": "level five you're introspecting the whole system determining the needs of the the many versus the needs of the few",
    "start": "2251079",
    "end": "2258200"
  },
  {
    "text": "and generating only the code that needs to be generated and you know that's that's a different level of code",
    "start": "2258200",
    "end": "2265280"
  },
  {
    "text": "generation you know you're a different plane have you ever seen code that generates code that generates code like",
    "start": "2265280",
    "end": "2272119"
  },
  {
    "text": "that like that sort of I've I've written Ain slesinger and I wrote code that generates code that generates code wow",
    "start": "2272119",
    "end": "2278480"
  },
  {
    "text": "and it was a lot of fun wow is that easy is it difficult to",
    "start": "2278480",
    "end": "2285160"
  },
  {
    "text": "follow it just takes a lot of uh iteration and patience I wouldn't say it's hard",
    "start": "2285160",
    "end": "2291000"
  },
  {
    "text": "because it's no harder than writing any other code it just it takes a lot of",
    "start": "2291000",
    "end": "2296040"
  },
  {
    "text": "time to build up small layers of success so that you can have bigger layers of",
    "start": "2296040",
    "end": "2302520"
  },
  {
    "text": "success yeah lots of like mental gymnastics in that too to figure out like which layer you're sitting at as",
    "start": "2302520",
    "end": "2308359"
  },
  {
    "text": "you're like generating you're like okay wait am I am I doing this correctly am I am I in the right spot am I thinking",
    "start": "2308359",
    "end": "2313640"
  },
  {
    "text": "about this in the right mind frame like I think that is one of the big challenges of generating code is not the",
    "start": "2313640",
    "end": "2320720"
  },
  {
    "text": "like actually writing the code gen itself but just wrapping your mind about what you're trying to do because it is",
    "start": "2320720",
    "end": "2327000"
  },
  {
    "text": "so much more abstract than just like writing out code by hand which is also what makes the reflect package like also",
    "start": "2327000",
    "end": "2334079"
  },
  {
    "text": "very complicated to use because you're not you know using the same utilities and handles that you're used to using",
    "start": "2334079",
    "end": "2340200"
  },
  {
    "text": "when you're writing go code yeah and that was the the big um the big PLL from for me from Goa because I was I was",
    "start": "2340200",
    "end": "2347440"
  },
  {
    "text": "writing a DSL about my expectations of what I wanted when I was done I want a",
    "start": "2347440",
    "end": "2352760"
  },
  {
    "text": "web service that listens on Port 880 that exposes this API with this resource",
    "start": "2352760",
    "end": "2359280"
  },
  {
    "text": "that has these methods and it returns these fields and it expects this authentication you know there's there's",
    "start": "2359280",
    "end": "2365640"
  },
  {
    "text": "nothing in that about how I'm going to do that there's there's nothing that says I'm GNA use gokit I'm gonna use",
    "start": "2365640",
    "end": "2373240"
  },
  {
    "text": "this middleware here you know I'm just writing my expectation and then the code",
    "start": "2373240",
    "end": "2379000"
  },
  {
    "text": "generator does some stuff and hopefully the code generator meets my expectation but if it doesn't I can change the code",
    "start": "2379000",
    "end": "2384520"
  },
  {
    "text": "that's generated until it does and that's that was the power of expressing what I want it's it's like test driven",
    "start": "2384520",
    "end": "2390440"
  },
  {
    "text": "development when you think about it you you've written your desired outcome first and",
    "start": "2390440",
    "end": "2397200"
  },
  {
    "text": "then you just keep writing code until it's green I think that like idls and dsls are like a kind of unexplored space",
    "start": "2397200",
    "end": "2405760"
  },
  {
    "text": "I think not just in go but like across the industry where there's not a lot of like emphasis and effort put into like",
    "start": "2405760",
    "end": "2411400"
  },
  {
    "text": "designing good like Standalone idls but I think that's also crucial to uh using",
    "start": "2411400",
    "end": "2417240"
  },
  {
    "text": "Code Generation Well because I know in the past when I've tried to like uh write some code generation I usually",
    "start": "2417240",
    "end": "2422720"
  },
  {
    "text": "start with like oh I'd like to just use go and then like decorate a struct with a bunch of stuff I've always wound up at",
    "start": "2422720",
    "end": "2428359"
  },
  {
    "text": "just like I should just write a custom IDL or DSL in like some serialization",
    "start": "2428359",
    "end": "2434440"
  },
  {
    "text": "format and then just use that as a s source of truth because now I'm like getting all of this stuff mixed in of",
    "start": "2434440",
    "end": "2441839"
  },
  {
    "text": "like okay well I have to like parse this package now that has and look for this special go type and then introspect it",
    "start": "2441839",
    "end": "2447800"
  },
  {
    "text": "and then generate code based off it's like just read in an IDL file and then use that to generate everything but I",
    "start": "2447800",
    "end": "2453240"
  },
  {
    "text": "feel like when you get into that realm you're getting into like the okay now I either have to like pick up a",
    "start": "2453240",
    "end": "2458680"
  },
  {
    "text": "serialization format that exists like yaml or Jason or I have to like go write a parser which is like getting in even",
    "start": "2458680",
    "end": "2466359"
  },
  {
    "text": "deeper if you want to have like a truly like customized IDL that you can use the question is how deep do you need to go I",
    "start": "2466359",
    "end": "2472920"
  },
  {
    "text": "mean do you have to write a parure do you have to write your own IDL you know if there's if there's one small problem",
    "start": "2472920",
    "end": "2478920"
  },
  {
    "text": "and you just need this little bit of metadata then throwing a struck tag on a a struct and go and then inspecting that",
    "start": "2478920",
    "end": "2485520"
  },
  {
    "text": "that's the solution even though it's the cheapest and easiest way to do it I mean absolutely I think there's definitely",
    "start": "2485520",
    "end": "2491680"
  },
  {
    "text": "levels to this right where it's like if you're doing something like if you're making like say the what's it called Stringer which just like you know takes",
    "start": "2491680",
    "end": "2498760"
  },
  {
    "text": "a number of enumerated things and then makes the string output for them if it's like a un or whatever um I think for",
    "start": "2498760",
    "end": "2505319"
  },
  {
    "text": "that it's like you know it's relatively simple and straightforward and you don't need like an IDL but I think when you start to get into like the really bigger",
    "start": "2505319",
    "end": "2513720"
  },
  {
    "text": "uh code generation systems I think it it is kind of good to shift away from",
    "start": "2513720",
    "end": "2518839"
  },
  {
    "text": "trying to like shove everything into go and I think there's a point where you start really feeling that friction I",
    "start": "2518839",
    "end": "2524160"
  },
  {
    "text": "when you're like I don't think that this is quite right and I think that's the point at which you should like make the jump I don't think you should really start with designing your own IDL or DSL",
    "start": "2524160",
    "end": "2532560"
  },
  {
    "text": "or serialization format I think those are things that take a lot of time and expertise to do and you don't want to be",
    "start": "2532560",
    "end": "2538480"
  },
  {
    "text": "like learning that while you're also trying to figure out how to do code Generation Well I think you have to like take your steps but I think it's a very",
    "start": "2538480",
    "end": "2544920"
  },
  {
    "text": "important thing to recognize that some point if you're doing a lot of heavy code generation what you started with is",
    "start": "2544920",
    "end": "2551000"
  },
  {
    "text": "likely you're going to outgrow it and you're going to need to do something different and just be prepared for that",
    "start": "2551000",
    "end": "2557319"
  },
  {
    "text": "yeah it's one of the most fun things and rewarding things I've ever done as a programmer so I would absolutely",
    "start": "2557319",
    "end": "2563240"
  },
  {
    "text": "recommend start as small and simple as you want to even if it's just a tiny little template that you're using to",
    "start": "2563240",
    "end": "2570319"
  },
  {
    "text": "generate other code and just grow with it it's fun I feel like both",
    "start": "2570319",
    "end": "2576640"
  },
  {
    "text": "metaprogramming and code generation to me always felt like I was cheating or like pushing the limits of what I was",
    "start": "2576640",
    "end": "2582400"
  },
  {
    "text": "supposed to be doing like it never felt like I was it's almost like I had to be secret about what I was doing because",
    "start": "2582400",
    "end": "2587960"
  },
  {
    "text": "it's like if other people see this this crap on pulling they're going to be like what is this guy doing really it felt naughty it it felt kind of naughty in",
    "start": "2587960",
    "end": "2594920"
  },
  {
    "text": "some cases cuz you're doing these things that are like well beyond just writing you know your traditional code of like",
    "start": "2594920",
    "end": "2600720"
  },
  {
    "text": "oh I can see exactly what it does when you're generating code it's it's this weird I don't know just it felt kind of",
    "start": "2600720",
    "end": "2607079"
  },
  {
    "text": "naughty for some reason but it was also just really cool seeing like how you could push the language or you know the limits of what you could actually",
    "start": "2607079",
    "end": "2612480"
  },
  {
    "text": "achieve and trying to ask yourself well can I do this and sometimes at least for me I wasn't that productive some days",
    "start": "2612480",
    "end": "2619440"
  },
  {
    "text": "because I would go down some rabbit hole just to see if I could do something not because I needed to but because I was",
    "start": "2619440",
    "end": "2624640"
  },
  {
    "text": "like can I do this yeah but that's all right I think you're a good boy for doing that to be",
    "start": "2624640",
    "end": "2630040"
  },
  {
    "text": "honest I think that's actually like a like something we need to do more of really it's like so I think like the",
    "start": "2630040",
    "end": "2636240"
  },
  {
    "text": "only way that you can really acquire these skills is by going through and like actually practicing them and actually like using these libraries and",
    "start": "2636240",
    "end": "2643800"
  },
  {
    "text": "packages and if every time that we have like a small problem where you're like okay I could solve this with reflection or I could solve this with code",
    "start": "2643800",
    "end": "2649599"
  },
  {
    "text": "generation but I could just write these 150 lines of Code by hand and it'll solve this problem now if you always",
    "start": "2649599",
    "end": "2656000"
  },
  {
    "text": "choose to write The Code by hand then you'll never have the skills to actually use these packages so when you come into",
    "start": "2656000",
    "end": "2661760"
  },
  {
    "text": "a big problem where you do need these heavier tools you're just kind of stuck or you're lost or you're just going to",
    "start": "2661760",
    "end": "2668559"
  },
  {
    "text": "take up an exorbitant amount of time like going through and not using these tools I know that I at multiple times in",
    "start": "2668559",
    "end": "2675440"
  },
  {
    "text": "my career have like been able to lean on my ability to use the reflect package",
    "start": "2675440",
    "end": "2680480"
  },
  {
    "text": "and go to like save myself tremendous amounts of time and tremendous amounts of stress but that's only because I sat",
    "start": "2680480",
    "end": "2686760"
  },
  {
    "text": "down and actually pushed myself to like use the reflect package even there could",
    "start": "2686760",
    "end": "2692640"
  },
  {
    "text": "have been like better Solutions or it wasn't going to give us huge gains uh and I think that's something we as",
    "start": "2692640",
    "end": "2699000"
  },
  {
    "text": "software Engineers need to get a bit better at is not trying to always optimize for right now so I feel like we",
    "start": "2699000",
    "end": "2705040"
  },
  {
    "text": "do a lot of that and I feel like that's usually the argument against this type of exploration is like oh well you could",
    "start": "2705040",
    "end": "2710920"
  },
  {
    "text": "have saved 4 hours if you just hadn't done that thing or we could have saved some time if you just hadn't gone",
    "start": "2710920",
    "end": "2717040"
  },
  {
    "text": "through and done that exploration and I think that also kind of pulls us back into this Frame of overly focusing on",
    "start": "2717040",
    "end": "2724200"
  },
  {
    "text": "code like I think what you said John there about like it feels like you're cheating is I think like it adds a lot",
    "start": "2724200",
    "end": "2730400"
  },
  {
    "text": "of color to how we as as Engineers approach what we do right we focus a lot",
    "start": "2730400",
    "end": "2735839"
  },
  {
    "text": "on the code we focus a lot on the the actual work output there but I think",
    "start": "2735839",
    "end": "2741160"
  },
  {
    "text": "software is about so much more than code right we have to like write design docs and specifications and all of these",
    "start": "2741160",
    "end": "2746839"
  },
  {
    "text": "other things and I think the the more that we start to pull ourselves away from that intense focus on code the",
    "start": "2746839",
    "end": "2753960"
  },
  {
    "text": "easier it'll become not to only do these code generation reflection based things but also to like get to the more",
    "start": "2753960",
    "end": "2759440"
  },
  {
    "text": "Promised Land of like writing more comprehensive design docs that can solve bugs and solve problems before we even",
    "start": "2759440",
    "end": "2765599"
  },
  {
    "text": "you know know that they before we even written code and we have some maintenance nightmare to deal with I",
    "start": "2765599",
    "end": "2771040"
  },
  {
    "text": "like to look at it this way I am so lazy that I'll spend three weeks writing a code generation system so I don't have",
    "start": "2771040",
    "end": "2777559"
  },
  {
    "text": "to spend two days writing repetitive code yeah yeah I think that's a fair",
    "start": "2777559",
    "end": "2783559"
  },
  {
    "text": "point it's funny like these kind of idea of doing experiments and stuff you know",
    "start": "2783559",
    "end": "2788880"
  },
  {
    "text": "if you're in an environment where you're constantly late like the projects are constantly late usually because people",
    "start": "2788880",
    "end": "2796040"
  },
  {
    "text": "in the past or including yourself sometimes have estimated it and you're just wrong because it's really difficult",
    "start": "2796040",
    "end": "2801640"
  },
  {
    "text": "to estimate accurately and so for no good reason really you're just late and then there's no room for those kinds of",
    "start": "2801640",
    "end": "2808480"
  },
  {
    "text": "experiments and things so I think it's it also falls to managers and tech leads",
    "start": "2808480",
    "end": "2813640"
  },
  {
    "text": "and people to make sure that there's space in teams for people to do those kinds of experiments because you know",
    "start": "2813640",
    "end": "2819960"
  },
  {
    "text": "one definition I read of creativity is making connections that weren't there before and the more kind of fuel you can",
    "start": "2819960",
    "end": "2829520"
  },
  {
    "text": "give that process the the more opportunity for creativity there is so it's something I believe in a lot",
    "start": "2829520",
    "end": "2836160"
  },
  {
    "text": "unfortunately it's quite rare I speak to people I've been quite lucky um but I've speak to people where you know they're",
    "start": "2836160",
    "end": "2842520"
  },
  {
    "text": "just always late everything's needs to be done quickly no time to do an experiment to see if there if the",
    "start": "2842520",
    "end": "2848559"
  },
  {
    "text": "reflect package is going to be interesting and also if if it then isn't the way you end up doing it some people",
    "start": "2848559",
    "end": "2855680"
  },
  {
    "text": "see that as then a failed experiment which it's not um and in science really",
    "start": "2855680",
    "end": "2861119"
  },
  {
    "text": "you only really learn from things when they go wrong when they fail well you",
    "start": "2861119",
    "end": "2866880"
  },
  {
    "text": "learn a lot from them if they do we have a tweet uh just come in not just come in",
    "start": "2866880",
    "end": "2873280"
  },
  {
    "text": "I'm just trying to make this feel more live where did add the drama Matt thank you yeah breaking news breaking news",
    "start": "2873280",
    "end": "2880160"
  },
  {
    "text": "this just in from uh someone whose username is very apt it's gen 20 uh",
    "start": "2880160",
    "end": "2885520"
  },
  {
    "text": "James nent says to commit or not to commit more of a discussion Point",
    "start": "2885520",
    "end": "2891359"
  },
  {
    "text": "probably the first half of that was more Shakespearean than the second half but what do we think do you commit your",
    "start": "2891359",
    "end": "2898839"
  },
  {
    "text": "generated code or not well this is it's this discussion we started with right do",
    "start": "2898839",
    "end": "2903960"
  },
  {
    "text": "you do it at the developers desk or did you CI I feel like a lot of this just depends on the workflow you're working",
    "start": "2903960",
    "end": "2909359"
  },
  {
    "text": "with because like I can give you an example I use Tailwind all the time and it generates a massive CSS file of all",
    "start": "2909359",
    "end": "2915559"
  },
  {
    "text": "this stuff and committing that big thing doesn't really make sense half the time",
    "start": "2915559",
    "end": "2920760"
  },
  {
    "text": "because anybody who's running the app locally like if I have a react app the tool chain is set up to automatically",
    "start": "2920760",
    "end": "2925800"
  },
  {
    "text": "generate that anytime the file changes so at that point committing that just doesn't make a lot of sense now",
    "start": "2925800",
    "end": "2931599"
  },
  {
    "text": "eventually if you're deploying you have to commit whatever the you know cleaned up version is that you're shipping with but for the development side I would say",
    "start": "2931599",
    "end": "2938520"
  },
  {
    "text": "there's no reason in the world to commit that but on the other hand like if you're generating I don't know it's",
    "start": "2938520",
    "end": "2944799"
  },
  {
    "text": "almost like if you have a library like you were saying uh testify and they generate code well they pretty clearly",
    "start": "2944799",
    "end": "2950319"
  },
  {
    "text": "have to commit that like somebody has to commit that at some point now where when it gets committed is kind of up in the",
    "start": "2950319",
    "end": "2956599"
  },
  {
    "text": "air I guess whether it's your CI tool or developer but it it definitely depends on your flow of you know how things get",
    "start": "2956599",
    "end": "2962680"
  },
  {
    "text": "generated yeah you need it locally so you will always generate it locally right probably because otherwise you've",
    "start": "2962680",
    "end": "2969520"
  },
  {
    "text": "know way I mean that would that's like committing that's like fire and forget if you didn't need it why are you",
    "start": "2969520",
    "end": "2975119"
  },
  {
    "text": "generating it at all okay so so yeah you do need it",
    "start": "2975119",
    "end": "2980520"
  },
  {
    "text": "locally and then yeah then then tool chains that's a good the Tailwind is actually a interesting point there uh",
    "start": "2980520",
    "end": "2986599"
  },
  {
    "text": "because yeah I feel like there's this line between like is what you're",
    "start": "2986599",
    "end": "2993000"
  },
  {
    "text": "Distributing code or is what you're Distributing like a running application so I think if it's like a running",
    "start": "2993000",
    "end": "2998280"
  },
  {
    "text": "application as John just kind of mentioned I think in a lot of ways it makes sense to do the generation at the",
    "start": "2998280",
    "end": "3003720"
  },
  {
    "text": "point where you know you're actually going to be running the thing but I think if you're like a library maintainer uh it's much better to commit",
    "start": "3003720",
    "end": "3011079"
  },
  {
    "text": "the code so I think you know the and that I think that's one of the things behind go generate and why it runs the way it is because it's like that the",
    "start": "3011079",
    "end": "3017920"
  },
  {
    "text": "person who gets your code might not have the generation tools or the version of the tools that you're using to actually",
    "start": "3017920",
    "end": "3023559"
  },
  {
    "text": "be able to successfully generate the code so it makes Library usage a lot harder if the person using the library",
    "start": "3023559",
    "end": "3030480"
  },
  {
    "text": "has to do this this code gen now yeah yeah and you want people to be able to check out the code and run it and build",
    "start": "3030480",
    "end": "3036440"
  },
  {
    "text": "it don't you you don't want those extra steps yeah so and if you don't have",
    "start": "3036440",
    "end": "3041839"
  },
  {
    "text": "developers checking in the code what you end up with is Basel right you you have to boil the",
    "start": "3041839",
    "end": "3048440"
  },
  {
    "text": "entire ocean every time you want to build an a tiny app yeah and that's what basil is yeah it's an ocean boiler",
    "start": "3048440",
    "end": "3056160"
  },
  {
    "text": "yeah that's why I see codee generation as a Dev time exercise for that reason",
    "start": "3056160",
    "end": "3061839"
  },
  {
    "text": "and",
    "start": "3061839",
    "end": "3064040"
  },
  {
    "text": "others what's up Gophers are you trying to take your infrastructure further faster of course you are on March 3rd",
    "start": "3072920",
    "end": "3078880"
  },
  {
    "text": "join equinix medal for their first technical user conference called proximity proximity is a fall of the",
    "start": "3078880",
    "end": "3084200"
  },
  {
    "text": "Sunday of live streamed technical demonstration showcasing equinix Metals partners and their ecosystem visit",
    "start": "3084200",
    "end": "3090280"
  },
  {
    "text": "metal.in x.com proximity to view the schedule for this event and get closer to your digital Advantage again metal.in",
    "start": "3090280",
    "end": "3097319"
  },
  {
    "text": "x.com",
    "start": "3097319",
    "end": "3100319"
  },
  {
    "text": "[Music]",
    "start": "3104390",
    "end": "3107519"
  },
  {
    "text": "proximity this just in I have another one from a",
    "start": "3114359",
    "end": "3121200"
  },
  {
    "text": "website called Twitter and uh this is from Tobias and",
    "start": "3121200",
    "end": "3126920"
  },
  {
    "text": "Tobias asks how would you generate code split into multiple files or directory",
    "start": "3126920",
    "end": "3132680"
  },
  {
    "text": "to get you started for new projects or parts of projects so has anybody seen uh",
    "start": "3132680",
    "end": "3138160"
  },
  {
    "text": "code generation for like bootstrapping projects a bit like how rails used to",
    "start": "3138160",
    "end": "3144680"
  },
  {
    "text": "have that rail generate commands so one of my first foras into Cod generation",
    "start": "3144680",
    "end": "3149839"
  },
  {
    "text": "was a tool called gen kit that generated a gokit",
    "start": "3149839",
    "end": "3154920"
  },
  {
    "text": "microservice directory structure for you right and it was it was like um first",
    "start": "3154920",
    "end": "3162559"
  },
  {
    "text": "level code generation with ugly templates and you know struck tags and",
    "start": "3162559",
    "end": "3168680"
  },
  {
    "text": "and it worked really well you could generate all of the boiler plate that you needed for a gokit microservice and",
    "start": "3168680",
    "end": "3177160"
  },
  {
    "text": "that included many directories and many types and you know it was very inelegant",
    "start": "3177160",
    "end": "3183680"
  },
  {
    "text": "but it was also very efficient it took me a half a day to write it and it",
    "start": "3183680",
    "end": "3189200"
  },
  {
    "text": "worked really well yeah so what can you ask for the opposite end of that spectrum is Goa which you know the DSL",
    "start": "3189200",
    "end": "3196160"
  },
  {
    "text": "doesn't take long to master at all and it will write code across dozens of directories if that's what you want the",
    "start": "3196160",
    "end": "3203280"
  },
  {
    "text": "the background behind it is you there's a lot of code behind that yeah I feel",
    "start": "3203280",
    "end": "3208559"
  },
  {
    "text": "like this question is like sneakily asking us how we would design a framework Buffalo because like Buffalo",
    "start": "3208559",
    "end": "3215319"
  },
  {
    "text": "or something because it does kind of sound like like you know how would you structure it that basically comes down",
    "start": "3215319",
    "end": "3220440"
  },
  {
    "text": "to what what would your framework look like at that point and like if you're interested in examples of that Buffalo",
    "start": "3220440",
    "end": "3225559"
  },
  {
    "text": "is a good one to go check out of the it generates everything and then you know there's much smaller tools like gql gen",
    "start": "3225559",
    "end": "3232520"
  },
  {
    "text": "I think is one that just generates the graphql components and then you're still expected to connect everything to that",
    "start": "3232520",
    "end": "3237799"
  },
  {
    "text": "so there's completely different takes on that that you can look at and I think it kind of just comes down to what you need",
    "start": "3237799",
    "end": "3243640"
  },
  {
    "text": "for your project CU there's definitely cases where Buffalo is a great fit and there's definitely cases where it",
    "start": "3243640",
    "end": "3249640"
  },
  {
    "text": "probably wouldn't be my first tool to go to well Buffalo is a good example of",
    "start": "3249640",
    "end": "3255559"
  },
  {
    "text": "solving a problem and then abstracting that solution out into a more generic",
    "start": "3255559",
    "end": "3261319"
  },
  {
    "text": "toolkit and and that's really where code generation shines for me is once you've got that problem solved uh generate the",
    "start": "3261319",
    "end": "3268640"
  },
  {
    "text": "code to solve it over and over yeah that's an interesting point that you've made a couple of times Brian I think it",
    "start": "3268640",
    "end": "3273760"
  },
  {
    "text": "is something that that is worth people considering because even if you know you're going to use code generation to",
    "start": "3273760",
    "end": "3280319"
  },
  {
    "text": "solve a particular problem you still ought to solve that problem yourself first a bit like when you have a sense",
    "start": "3280319",
    "end": "3287640"
  },
  {
    "text": "that there's a CO abstraction just waiting to be discovered it's worth solving the problem really solving it",
    "start": "3287640",
    "end": "3294839"
  },
  {
    "text": "for yourself first and then having a look to see and in fact sometimes doing it a few times actually um I think",
    "start": "3294839",
    "end": "3302040"
  },
  {
    "text": "that's quite a nice Point Chris what have you done actual code generation yourself and what what sort of use cases",
    "start": "3302040",
    "end": "3308440"
  },
  {
    "text": "did you use them for do you remember yeah yeah I think like the last big thing I did code generation on was when",
    "start": "3308440",
    "end": "3313960"
  },
  {
    "text": "I was working on the the MB go driver and the kind of uh wire protocol level",
    "start": "3313960",
    "end": "3320720"
  },
  {
    "text": "was like very kind of normal and regular and I was like I keep writing the same code over and over and over again this",
    "start": "3320720",
    "end": "3327000"
  },
  {
    "text": "is really annoying it's like slightly different things for like oh like this command is slightly different than the",
    "start": "3327000",
    "end": "3332280"
  },
  {
    "text": "other one so I just wind up uh starting off with like just writing the strs and then generating all of the methods that",
    "start": "3332280",
    "end": "3338280"
  },
  {
    "text": "I needed off of them and then I actually wrote an IDL format and I was like okay now we just have these IDL files and we",
    "start": "3338280",
    "end": "3344480"
  },
  {
    "text": "generate all of the implementation based off that um so it's like one of the things I've used code generation for in",
    "start": "3344480",
    "end": "3350559"
  },
  {
    "text": "the past um but I've used it for a lot of things that are like similar to that where it's like I could write and",
    "start": "3350559",
    "end": "3356559"
  },
  {
    "text": "maintain all this code by hand but it's very tricky and everything is very regular and it's going to be really",
    "start": "3356559",
    "end": "3362319"
  },
  {
    "text": "difficult to find bugs if I try to maintain this by hand so it'll be like small typos here and there will like",
    "start": "3362319",
    "end": "3369240"
  },
  {
    "text": "completely break but if it's not uh in the case of the go driver it's not a used command often then it might only",
    "start": "3369240",
    "end": "3376599"
  },
  {
    "text": "break like when it's out in production already because we don't have a good way of testing that already because of other",
    "start": "3376599",
    "end": "3382079"
  },
  {
    "text": "things M so I think like that's how I've used code generation a lot in the past I",
    "start": "3382079",
    "end": "3387200"
  },
  {
    "text": "think to kind of respond to this tweet too I have a kind of split way that I",
    "start": "3387200",
    "end": "3392520"
  },
  {
    "text": "feel about this like I think that uh these types of tools that generate",
    "start": "3392520",
    "end": "3397599"
  },
  {
    "text": "scaffolding and whatnot are good and useful but I also very much dislike that",
    "start": "3397599",
    "end": "3404400"
  },
  {
    "text": "we use things that are so General and generic that we need all of this boiler plate in the first place like I feel",
    "start": "3404400",
    "end": "3411440"
  },
  {
    "text": "like it's somewhat of a failing of design here cuz I I feel like I've run into these same sorts of situations",
    "start": "3411440",
    "end": "3417319"
  },
  {
    "text": "before when I'm trying to design something I'm like oh there's a lot of boiler plate and each time that I've done that I've just sat down and spent",
    "start": "3417319",
    "end": "3424880"
  },
  {
    "text": "probably considerable amount of time figuring out why I'm writing so much boiler plate and usually at the end I",
    "start": "3424880",
    "end": "3431079"
  },
  {
    "text": "figured out like oh my my design didn't quite fit properly and I feel that's",
    "start": "3431079",
    "end": "3436200"
  },
  {
    "text": "what a lot of Frameworks wind up doing is that they they try to be so generic to Encompass so many things that you",
    "start": "3436200",
    "end": "3442760"
  },
  {
    "text": "need all of this boiler plate to to just get the thing that you could have written with your lines of code if you",
    "start": "3442760",
    "end": "3448240"
  },
  {
    "text": "just wrote the more specific code like I think configuration library is a really good example of this I've written",
    "start": "3448240",
    "end": "3453760"
  },
  {
    "text": "multiple configuration parsing libraries that wind up being less code than if IID",
    "start": "3453760",
    "end": "3459799"
  },
  {
    "text": "used uh which is it Viper yeah Viper oh don't get me started on viper",
    "start": "3459799",
    "end": "3465799"
  },
  {
    "text": "Chris Viper used to be the cutest little tiny configuration thing and now it's",
    "start": "3465799",
    "end": "3472640"
  },
  {
    "text": "the biggest monster and I'm responsible for a good amount of that sprawl because I added the remote configuration so you",
    "start": "3472640",
    "end": "3479359"
  },
  {
    "text": "could pull configuration from console and ETD I added that to Viper and it",
    "start": "3479359",
    "end": "3484520"
  },
  {
    "text": "turned Viper's binary from you know this big into you know ginormous and it's a",
    "start": "3484520",
    "end": "3490839"
  },
  {
    "text": "big ugly mess of cod I did it I did that well welcome to therapy thank you",
    "start": "3490839",
    "end": "3497760"
  },
  {
    "text": "for attending who taught you how to smoke weed like that you did",
    "start": "3497760",
    "end": "3503720"
  },
  {
    "text": "Dad okay um but I do think that like for where we are right now um having these",
    "start": "3503720",
    "end": "3510839"
  },
  {
    "text": "code generation tools does make it easier people that like okay well I have to use this framework because of other",
    "start": "3510839",
    "end": "3515920"
  },
  {
    "text": "reasons let's at least make that their life a bit easier but I do worry about like the kind of let's just generate all",
    "start": "3515920",
    "end": "3522200"
  },
  {
    "text": "of our structures because then it's like I go and open an application and there's like a a little bit of a nice thing",
    "start": "3522200",
    "end": "3527520"
  },
  {
    "text": "about when you open like a well structured go project where you're like I I can see where all the things go I",
    "start": "3527520",
    "end": "3532839"
  },
  {
    "text": "understand I can see what this application is doing but if you start having all of this hierarchy and structure it becomes like oh like I can",
    "start": "3532839",
    "end": "3540119"
  },
  {
    "text": "tell this is a rails project I have no idea what it does but I can tell it's a rails or a buffalo project or whatever project I can tell that it's this thing",
    "start": "3540119",
    "end": "3546599"
  },
  {
    "text": "but I got to go do a whole bunch of extra investigation to figure out like what it actually does yeah that's a good",
    "start": "3546599",
    "end": "3553520"
  },
  {
    "text": "point there's no opportunity for storytelling is there if all the structures look the same cuz that's the",
    "start": "3553520",
    "end": "3559440"
  },
  {
    "text": "thing when you have package structure good package structure tells you a story at a glance doesn't it that's a great",
    "start": "3559440",
    "end": "3565599"
  },
  {
    "text": "Point Chris amen yes I don't want to throw a particular static website",
    "start": "3565599",
    "end": "3571520"
  },
  {
    "text": "generator under the bus so I'm not gonna mention Hugo by name okay very good of you however I had this idea I wanted to",
    "start": "3571520",
    "end": "3579400"
  },
  {
    "text": "play with go16 yesterday it was yesterday and I have a a a Hugo blog because Hugo really",
    "start": "3579400",
    "end": "3587799"
  },
  {
    "text": "truly is a fantastic way to build blogs you know it's wonderful way to turn markdown into HTML it's opinionated and",
    "start": "3587799",
    "end": "3595280"
  },
  {
    "text": "it's fast and and it's wonderful but I thought to myself I'm going to I'm going to use the embed",
    "start": "3595280",
    "end": "3602160"
  },
  {
    "text": "package in go 116 and I'm going to use something like Jin or Echo you know some",
    "start": "3602160",
    "end": "3607720"
  },
  {
    "text": "some quick little router framework for web apps and I'll just go steal the code",
    "start": "3607720",
    "end": "3613280"
  },
  {
    "text": "from um Hugo or go import the code from Hugo that parses my markdown and use the",
    "start": "3613280",
    "end": "3621079"
  },
  {
    "text": "same templates that I already have I'll embed that into the go binary and I'll ship a web server version of Hugo it's",
    "start": "3621079",
    "end": "3628119"
  },
  {
    "text": "all embedded into the same thing I dug into the packages of Hugo's code and I",
    "start": "3628119",
    "end": "3635480"
  },
  {
    "text": "spent almost an hour and a half just finding the one thing that triggers the",
    "start": "3635480",
    "end": "3641960"
  },
  {
    "text": "functions to execute templates right thousands of",
    "start": "3641960",
    "end": "3648400"
  },
  {
    "text": "packages thousands maybe Millions children",
    "start": "3648400",
    "end": "3653520"
  },
  {
    "text": "died yes I do feel like that's the thing that happens though when you start to get",
    "start": "3653520",
    "end": "3658839"
  },
  {
    "text": "like bigger and bigger libraries is that all of a sudden finding really simple",
    "start": "3658839",
    "end": "3664039"
  },
  {
    "text": "and straightforward things becomes like an archaeology experiment like I remember like digging around in this is",
    "start": "3664039",
    "end": "3670280"
  },
  {
    "text": "probably like the example of examples but kubernetes I was like how does this thing work and I was like okay I guess",
    "start": "3670280",
    "end": "3677119"
  },
  {
    "text": "I'm just never going to know because like the sprawl of packages that you",
    "start": "3677119",
    "end": "3682559"
  },
  {
    "text": "that you can wind up with is just like insane so I feel like it's like code generation good but also like maybe",
    "start": "3682559",
    "end": "3689720"
  },
  {
    "text": "maybe we should make sure that when we are Cod generating that we're also like being good you know citizens and being",
    "start": "3689720",
    "end": "3695240"
  },
  {
    "text": "good you know helpers and maintainers and making sure that new people can kind of get in and start to understand how",
    "start": "3695240",
    "end": "3700480"
  },
  {
    "text": "things are structured yeah that's definitely true another thing happens in open source as well is when projects get",
    "start": "3700480",
    "end": "3706440"
  },
  {
    "text": "popular suddenly everyone wants to contribute to them which is great but",
    "start": "3706440",
    "end": "3711480"
  },
  {
    "text": "that's then what you see happening it did happen to hug go I I must I must agree Brian um because it started off it",
    "start": "3711480",
    "end": "3719440"
  },
  {
    "text": "was kind of tiny and it couldn't do that much and that was sort of really easy to use and it is just a trade-off the more",
    "start": "3719440",
    "end": "3726400"
  },
  {
    "text": "features a thing has the harder it is to use and it's sort of by almost its",
    "start": "3726400",
    "end": "3731520"
  },
  {
    "text": "nature unless there're just uh more capabilities within a certain direction",
    "start": "3731520",
    "end": "3736720"
  },
  {
    "text": "like just adding more say storage uh providers that it can support the idea",
    "start": "3736720",
    "end": "3742000"
  },
  {
    "text": "is still the same of storage providers so that's quite nice way to scale out a project it's when things start to do",
    "start": "3742000",
    "end": "3749160"
  },
  {
    "text": "more and more things and you know Ben Johnson um he's he recently has his",
    "start": "3749160",
    "end": "3755119"
  },
  {
    "text": "project and he said no PRS no contributions please it's an open source",
    "start": "3755119",
    "end": "3760279"
  },
  {
    "text": "project you can use it I think he lets you open issues to report bugs but he doesn't want code contributions because",
    "start": "3760279",
    "end": "3767559"
  },
  {
    "text": "it's a hard problem to solve it really is yeah I really respect that it",
    "start": "3767559",
    "end": "3772720"
  },
  {
    "text": "probably took a lot more courage than we're willing to admit to come out and say I don't want your PRS yeah but Ben",
    "start": "3772720",
    "end": "3782480"
  },
  {
    "text": "is a really smart guy and and he he went through this with both DB and I think that that learning experience taught him",
    "start": "3782480",
    "end": "3788960"
  },
  {
    "text": "quite a bit about how to manage that open source so you're welcome to the source code it's",
    "start": "3788960",
    "end": "3795160"
  },
  {
    "text": "open but you're gonna have to Fork it if you want to change it I I feel like that should perhaps start being the way that",
    "start": "3795160",
    "end": "3802520"
  },
  {
    "text": "we interact with open Source more like I feel like you know as we just mentioned with like Hugo like how many of those",
    "start": "3802520",
    "end": "3809000"
  },
  {
    "text": "things did we actually need in there how many of those things do people actually use do most people actually use and",
    "start": "3809000",
    "end": "3815319"
  },
  {
    "text": "would it been would it have been better if we kept Hugo simpler and just made it more extendable or made it easier for",
    "start": "3815319",
    "end": "3822200"
  },
  {
    "text": "people to like Fork it and add the things that they needed to add so I think you know my experience as a as an",
    "start": "3822200",
    "end": "3827599"
  },
  {
    "text": "open source library maintainer is that there is just a lot of driveby PRS and you put a lot of effort in and you have",
    "start": "3827599",
    "end": "3833839"
  },
  {
    "text": "to put put a lot of energy into like explaining to people like hey this is why like we really wish we could add",
    "start": "3833839",
    "end": "3839119"
  },
  {
    "text": "this future but we we can't or hey we can add this future but we have to do it in a different way uh I I read Ben's",
    "start": "3839119",
    "end": "3844720"
  },
  {
    "text": "article about like why light stream is you know open source but close to contributions and it really resonated",
    "start": "3844720",
    "end": "3851720"
  },
  {
    "text": "with me because it's like it does take a huge amount of emotional and just",
    "start": "3851720",
    "end": "3857240"
  },
  {
    "text": "emotional energy and time to take contributions and I think a lot of the time it just doesn't doesn't wind up",
    "start": "3857240",
    "end": "3864319"
  },
  {
    "text": "being that kind of it doesn't doesn't wind up paying off uh for for the maintainer and sometimes for the",
    "start": "3864319",
    "end": "3871559"
  },
  {
    "text": "community as a hall yeah yeah I like that phrase the driveby PRS I think that's kind of really really cool I",
    "start": "3871559",
    "end": "3879039"
  },
  {
    "text": "don't know how I don't know I don't get driveby he not even meant to be texting um we mentioned earlier the",
    "start": "3879039",
    "end": "3886799"
  },
  {
    "text": "goed um new feature from in go16 next week Mark Bates himself",
    "start": "3886799",
    "end": "3894720"
  },
  {
    "text": "will be joining us to discuss that very topic the mark bites yeah that's the",
    "start": "3894720",
    "end": "3901279"
  },
  {
    "text": "only one we could get unfortunately I did try and find alternative ones that were nicer but unfortunately couldn't",
    "start": "3901279",
    "end": "3906520"
  },
  {
    "text": "find any so it has to be that one yeah sorry I think that go and bed is actually uh something that I've been",
    "start": "3906520",
    "end": "3912520"
  },
  {
    "text": "wanting to have for a while when it comes to code generation so I think when you I've had tools where like distribute",
    "start": "3912520",
    "end": "3918240"
  },
  {
    "text": "them to people like internally within our organization and one of the challenges is always like how do I get",
    "start": "3918240",
    "end": "3923880"
  },
  {
    "text": "the templates where the templates are go code or like text template like into the binary that I'm shipping to people and I",
    "start": "3923880",
    "end": "3931000"
  },
  {
    "text": "like that now it's like part of the language it's a language feature that enables you to do this because I've",
    "start": "3931000",
    "end": "3936319"
  },
  {
    "text": "definitely had some spend a lot of time with people just being like explaining like okay this is how you compile this tool so that you can use it and I I",
    "start": "3936319",
    "end": "3943760"
  },
  {
    "text": "think that you know having go in bed there will just make it so much easier you don't have to do anything special to make it work yes and if you want to",
    "start": "3943760",
    "end": "3950720"
  },
  {
    "text": "learn more about going bed tune in next week that's my radio uh professional",
    "start": "3950720",
    "end": "3956839"
  },
  {
    "text": "radio bit so we got to let Brian finish his uh therapy session by going into his",
    "start": "3956839",
    "end": "3962079"
  },
  {
    "text": "unpopular opinion yeah I think it's time it's time for unpopular",
    "start": "3962079",
    "end": "3967520"
  },
  {
    "text": "[Music]",
    "start": "3967520",
    "end": "3972799"
  },
  {
    "text": "opinions I actually think should probably [Music]",
    "start": "3972799",
    "end": "3978369"
  },
  {
    "text": "leave opinion",
    "start": "3978799",
    "end": "3986000"
  },
  {
    "text": "okay well we hear we did hear your unpopular opinion earlier Brian um do you want to elaborate on it or do you",
    "start": "3986160",
    "end": "3991559"
  },
  {
    "text": "have any others that was well over an hour ago I don't even remember what it was uh you",
    "start": "3991559",
    "end": "3998160"
  },
  {
    "text": "don't want go generics oh yes generics I I really don't want go generics I I feel",
    "start": "3998160",
    "end": "4003760"
  },
  {
    "text": "like go is a wonderful language without them and and one of the the core",
    "start": "4003760",
    "end": "4008839"
  },
  {
    "text": "features of go is that it's easily readable Go is is optimized for",
    "start": "4008839",
    "end": "4014400"
  },
  {
    "text": "readability adding generics reduces that readability significantly for me really",
    "start": "4014400",
    "end": "4021079"
  },
  {
    "text": "somebody on Twitter replied to me uh I won't say that person's name but they",
    "start": "4021079",
    "end": "4026240"
  },
  {
    "text": "said WTF has no go programmer ever worked with generics before you are",
    "start": "4026240",
    "end": "4031279"
  },
  {
    "text": "behaving like kids somebody said that somebody said that I'll send you that you might get on",
    "start": "4031279",
    "end": "4037039"
  },
  {
    "text": "with that person Brian maybe I mean I like jics don't get me wrong I just don't like them and go I love in Rust",
    "start": "4037039",
    "end": "4044680"
  },
  {
    "text": "they're perfect they work really well but I don't write rust code to be readable and I don't have the same level",
    "start": "4044680",
    "end": "4051000"
  },
  {
    "text": "of productivity and rust that I do in go because I can read my go code really quickly and figure out what's going on",
    "start": "4051000",
    "end": "4056559"
  },
  {
    "text": "yeah yeah I feel like I have a very like rough still developing analogy that I've",
    "start": "4056559",
    "end": "4062440"
  },
  {
    "text": "been kind of shopping around with my friends about why I find like the some of us want like the the desire to have",
    "start": "4062440",
    "end": "4068960"
  },
  {
    "text": "generics so much a bit ridiculous and it goes a little bit like this where it's like okay well you you know it's it's",
    "start": "4068960",
    "end": "4074440"
  },
  {
    "text": "kind of like saying that you know you can't write a good story in German",
    "start": "4074440",
    "end": "4080079"
  },
  {
    "text": "because German has gendered words and multiple versions of the' and English",
    "start": "4080079",
    "end": "4085640"
  },
  {
    "text": "has like this generic the' that we have and no genders for most of our words so",
    "start": "4085640",
    "end": "4091119"
  },
  {
    "text": "it makes English a better language for storytelling because of that and that sounds you know pretty inherently",
    "start": "4091119",
    "end": "4097278"
  },
  {
    "text": "ridiculous because you know your your story as a whole has much to do with so many other things that aren't related to",
    "start": "4097279",
    "end": "4104480"
  },
  {
    "text": "like the nice syntax of the the language that you're that you're using for it and I think that's like a a lot of the case",
    "start": "4104480",
    "end": "4111400"
  },
  {
    "text": "with go where it's like we are a successful or this is a successful language and we've gotten this far",
    "start": "4111400",
    "end": "4118758"
  },
  {
    "text": "without generics and that's not on its face a good reason to not have generics but it also kind of tells you that like",
    "start": "4118759",
    "end": "4125440"
  },
  {
    "text": "maybe at the end of the day these these won't be the the things that we need or the the the kind of golden feature that",
    "start": "4125440",
    "end": "4132238"
  },
  {
    "text": "we really need to have to make the link anguage even better but I also definitely agree with Brian on the kind",
    "start": "4132239",
    "end": "4139040"
  },
  {
    "text": "of cost of generics which I feel like is not I feel like among experienced go",
    "start": "4139040",
    "end": "4144880"
  },
  {
    "text": "Engineers that's talked about a lot but it's not talked about a lot at large where it's like and a lot of my code",
    "start": "4144880",
    "end": "4150278"
  },
  {
    "text": "reviews and I think Mitchell Hashimoto tweeted out about this of like now he has a standard thing he's going to have to put in his code reviews where he's",
    "start": "4150279",
    "end": "4156199"
  },
  {
    "text": "like does this really need to have generics and I think a lot of us are going to spend a lot of time looking at code that has generics in it and have to",
    "start": "4156199",
    "end": "4163040"
  },
  {
    "text": "go and explain to people like well do you really need to have generics here there's probably a better way to do it",
    "start": "4163040",
    "end": "4168600"
  },
  {
    "text": "there's probably a cleaner way to do it we don't really need to have this and having like lots of back and forth",
    "start": "4168600",
    "end": "4173640"
  },
  {
    "text": "conversations about generics now that it's going to be in the language and I",
    "start": "4173640",
    "end": "4179758"
  },
  {
    "text": "don't really know what like how much of a benefit it's going to add outside of the like okay we've written some",
    "start": "4179759",
    "end": "4184798"
  },
  {
    "text": "container libraries that we now have to use great now we have this for generics uh but where else is it like really",
    "start": "4184799",
    "end": "4192199"
  },
  {
    "text": "necessary and was causing a lot of pain and I just don't think I think in the first like 5 years of us having generics",
    "start": "4192199",
    "end": "4198040"
  },
  {
    "text": "is going to be a big net negative on the language ecosystem and and go Engineers yeah I think I I did a talk in",
    "start": "4198040",
    "end": "4206920"
  },
  {
    "text": "at Gotham go called things in go I never use and it was kind of the same idea of even like things we already have and",
    "start": "4206920",
    "end": "4214960"
  },
  {
    "text": "this idea that a smaller language footprint is better uh so there's things that that I just happen probably never",
    "start": "4214960",
    "end": "4221080"
  },
  {
    "text": "to use very often um and I think I think it's going to come down to that a little bit you know we do have to be careful we",
    "start": "4221080",
    "end": "4228800"
  },
  {
    "text": "have to educate because it's really people that come from other languages I think straight away are going to solve",
    "start": "4228800",
    "end": "4235040"
  },
  {
    "text": "problems maybe with generics immediately and we're going to have to there will be an education I think to make sure that",
    "start": "4235040",
    "end": "4242440"
  },
  {
    "text": "we're using it in the right way but it's the same with code generation I mean you could abuse you can abuse that too and",
    "start": "4242440",
    "end": "4249120"
  },
  {
    "text": "you know we we do I I think it's exactly like code generation and refle reflection and all these other things",
    "start": "4249120",
    "end": "4254880"
  },
  {
    "text": "where it's like I think channels goes in this too it's like we don't need to use them most of the time but when we do",
    "start": "4254880",
    "end": "4261000"
  },
  {
    "text": "need to use them they are very useful to have but it's difficult to figure out",
    "start": "4261000",
    "end": "4266400"
  },
  {
    "text": "when and why you should be using these things and it takes a lot of time and experience and while you're building",
    "start": "4266400",
    "end": "4271640"
  },
  {
    "text": "that time and experience there's a cost that you have to pay for having those things in the language yeah and it feels",
    "start": "4271640",
    "end": "4277840"
  },
  {
    "text": "like we've just like we're adding another one like another big one that's like okay now we're just going to have to you know teach a lot of people about",
    "start": "4277840",
    "end": "4285480"
  },
  {
    "text": "like you know and figure out as a community like how do we wind up writing go cod that still feels like the go code",
    "start": "4285480",
    "end": "4291800"
  },
  {
    "text": "that we've had in the past um with this new feature and I think that's just going to take a lot of time and a lot of",
    "start": "4291800",
    "end": "4297000"
  },
  {
    "text": "effort and it's going to cause a lot of stressful things for people what was the big Mozilla data processing Library uh",
    "start": "4297000",
    "end": "4305320"
  },
  {
    "text": "really early on it was it was one of the first big learnings that gophercon brought for me specifically was um that",
    "start": "4305320",
    "end": "4313880"
  },
  {
    "text": "you know channels aren't the answer to everything and I wish I could remember the name of the library but there was a big big data processing Library written",
    "start": "4313880",
    "end": "4321440"
  },
  {
    "text": "in go and they use channels everywhere and it just it didn't scale once once",
    "start": "4321440",
    "end": "4328440"
  },
  {
    "text": "they hit a certain threshold channels aren't the answer yeah it's I mean I'm guilty of",
    "start": "4328440",
    "end": "4334239"
  },
  {
    "text": "this when when I learned about channels I loved it and because I saw some",
    "start": "4334239",
    "end": "4339560"
  },
  {
    "text": "example cases where it was used brilliantly and then I overused it and it wasn't that it didn't scale in my",
    "start": "4339560",
    "end": "4345480"
  },
  {
    "text": "case it was that uh it was hard to follow what was happening and then I started just using a mutex and I tell",
    "start": "4345480",
    "end": "4352600"
  },
  {
    "text": "you what just saying lock and unlock is very clear if if that's really all you",
    "start": "4352600",
    "end": "4358080"
  },
  {
    "text": "need It's Kind of Perfect yeah and I even you know I was when defer used to be slow I would even just defer the",
    "start": "4358080",
    "end": "4364600"
  },
  {
    "text": "unlock sometimes um so it wasn't really about performance for me um you know it",
    "start": "4364600",
    "end": "4369719"
  },
  {
    "text": "was about the readability but yeah sometimes just a a mutex is a very very",
    "start": "4369719",
    "end": "4376159"
  },
  {
    "text": "powerful yeah I guess I have mixed feelings about this because on one hand it kind of sounds like part of the",
    "start": "4376159",
    "end": "4382840"
  },
  {
    "text": "argument is we don't want to spend this effort on education like educating people why they shouldn't be using",
    "start": "4382840",
    "end": "4388159"
  },
  {
    "text": "generics and the same could technically be said of channels like there are definitely a lot of cases where new go developers need educated on why channels",
    "start": "4388159",
    "end": "4395320"
  },
  {
    "text": "aren't something you just throw in every bit of your code and I definitely agree that that's there's going to be a cost",
    "start": "4395320",
    "end": "4400679"
  },
  {
    "text": "and there's going to be opportunities for either somebody to make res like you know books or whatever that help educate",
    "start": "4400679",
    "end": "4407159"
  },
  {
    "text": "people around when generics are actually a good fit versus okay you think you need generics here but here's actually",
    "start": "4407159",
    "end": "4412880"
  },
  {
    "text": "other ways to solve this problem and I think once that sort of hopefully comes",
    "start": "4412880",
    "end": "4418440"
  },
  {
    "text": "into place you know there are some good Solutions or Poss or not Solutions but good resources out there to show people",
    "start": "4418440",
    "end": "4426159"
  },
  {
    "text": "how to avoid generics then I think they're going to kind of fade off into",
    "start": "4426159",
    "end": "4431520"
  },
  {
    "text": "like something you rarely have to to mess with but they're there when you really need them and I don't know like I",
    "start": "4431520",
    "end": "4438600"
  },
  {
    "text": "get the concerns I guess I just don't feel like their reason alone I guess to",
    "start": "4438600",
    "end": "4445199"
  },
  {
    "text": "to not add generics to the language oh interesting I do have uh",
    "start": "4445199",
    "end": "4450600"
  },
  {
    "text": "it's not like a counter but I guess just like a like another perspective on this as well cuz I think it's like there's",
    "start": "4450600",
    "end": "4457320"
  },
  {
    "text": "it's never kind of just like oh it's either we do this thing or we don't do this thing there's always like we do",
    "start": "4457320",
    "end": "4463080"
  },
  {
    "text": "this thing and we're not doing a bunch of other things and I think that's more of the problem for me is that we have",
    "start": "4463080",
    "end": "4468679"
  },
  {
    "text": "spent a huge amount of time as a community working on generics and",
    "start": "4468679",
    "end": "4474560"
  },
  {
    "text": "obviously like we can't force people to work on things so it's not exactly like uh we should be working on something",
    "start": "4474560",
    "end": "4479719"
  },
  {
    "text": "else but I think we as as a go Community I think also we as an industry need to kind of do what I was saying earlier of",
    "start": "4479719",
    "end": "4485719"
  },
  {
    "text": "like start moving away from this Obsession of language features and obsession with like oh well this",
    "start": "4485719",
    "end": "4492560"
  },
  {
    "text": "language doesn't have this feature so it's not going to be good for writing software in and start moving up into",
    "start": "4492560",
    "end": "4498040"
  },
  {
    "text": "those higher levels of like actually writing better software and using higher level paradigms that aren't necessarily",
    "start": "4498040",
    "end": "4504480"
  },
  {
    "text": "dependent on the language itself and I feel like go has historically been",
    "start": "4504480",
    "end": "4509560"
  },
  {
    "text": "pretty good at that because it is so uh doesn't have a lot of features it doesn't and the and the kind of extra",
    "start": "4509560",
    "end": "4516520"
  },
  {
    "text": "features we do have in go routines and channels as we've been discussing like we don't use them a lot they're kind of",
    "start": "4516520",
    "end": "4521560"
  },
  {
    "text": "for special you know okay know I need to use this here I think that that has done",
    "start": "4521560",
    "end": "4526679"
  },
  {
    "text": "um perhaps by accident is push people to focus more on the software itself and the thing that we're trying to build and",
    "start": "4526679",
    "end": "4533920"
  },
  {
    "text": "I think that my worry of us you know it's not really about generics I think at the end of the day it's just this",
    "start": "4533920",
    "end": "4539639"
  },
  {
    "text": "like more focus on like oh well we'll just like add things to the code add things to the the language and that will",
    "start": "4539639",
    "end": "4546080"
  },
  {
    "text": "fix our larger problems when it's like no no we have we have to get back to the",
    "start": "4546080",
    "end": "4551159"
  },
  {
    "text": "like how do we actually build applications so they don't like fall over how do we build applications so they're readable and maintainable how do",
    "start": "4551159",
    "end": "4557960"
  },
  {
    "text": "we build applications so we can quickly onboard new people so we can get more resources onto projects when it's",
    "start": "4557960",
    "end": "4563320"
  },
  {
    "text": "necessary and I think those higher level meta things are constantly being left out of the conversation and we're not",
    "start": "4563320",
    "end": "4569239"
  },
  {
    "text": "discussing them in enough depth and I think generics is one of those things that just sucks more air out of that",
    "start": "4569239",
    "end": "4577280"
  },
  {
    "text": "space yeah I think that's a great point I wish we had more time to discuss",
    "start": "4577280",
    "end": "4582400"
  },
  {
    "text": "generics in more detail and we probably will on a future episode of go time you",
    "start": "4582400",
    "end": "4588360"
  },
  {
    "text": "know don't invite me no we need the we need all the perspectives Brian if you leave go",
    "start": "4588360",
    "end": "4593560"
  },
  {
    "text": "because of generics I've got one message for you mate you'll be back yeah bye bye",
    "start": "4593560",
    "end": "4600400"
  },
  {
    "text": "Felicia you say the price of genetics is not a price",
    "start": "4600400",
    "end": "4606719"
  },
  {
    "text": "that you willing to pay you",
    "start": "4606719",
    "end": "4611840"
  },
  {
    "text": "cry over over the T from C++ go at a f",
    "start": "4611840",
    "end": "4618239"
  },
  {
    "text": "yourself why so sad remember we made an arrangement of",
    "start": "4618239",
    "end": "4625719"
  },
  {
    "text": "Simplicity now you're making me mad remember despite ghost strange",
    "start": "4625719",
    "end": "4633840"
  },
  {
    "text": "syntax you're a fan you'll be back soon you'll see you",
    "start": "4633840",
    "end": "4643080"
  },
  {
    "text": "you return for the concurrency you'll be back time will",
    "start": "4643080",
    "end": "4649960"
  },
  {
    "text": "tell because interfaces work so well death speeds rise bug counts fall next",
    "start": "4649960",
    "end": "4659159"
  },
  {
    "text": "to Java programs go look small and when push comes to shove we",
    "start": "4659159",
    "end": "4667600"
  },
  {
    "text": "will finally add generics to remind you of our love go go go go go go go go go",
    "start": "4667600",
    "end": "4676560"
  },
  {
    "text": "go go go go go go go go go go go go go",
    "start": "4676560",
    "end": "4683760"
  },
  {
    "text": "go go go go go go go go go go go you say",
    "start": "4683760",
    "end": "4689040"
  },
  {
    "text": "the speck is draining and you can't go",
    "start": "4689040",
    "end": "4694360"
  },
  {
    "text": "on you be that one complaining on get",
    "start": "4695120",
    "end": "4700270"
  },
  {
    "text": "[Music] hurt and now don't change the",
    "start": "4700270",
    "end": "4707600"
  },
  {
    "text": "subject generics is my favorite subject a very specific",
    "start": "4707600",
    "end": "4715840"
  },
  {
    "text": "subject an objectively uncontestable subject you'll have them",
    "start": "4715840",
    "end": "4722440"
  },
  {
    "text": "forever and ever and ever and never and",
    "start": "4722440",
    "end": "4731679"
  },
  {
    "text": "ever you you'll be",
    "start": "4731679",
    "end": "4736840"
  },
  {
    "text": "back can I have like a little tiny uh unpopular opinion I can just drop and",
    "start": "4736840",
    "end": "4742320"
  },
  {
    "text": "run um so my unpopular opinion is that uh estimating how long things are going",
    "start": "4742320",
    "end": "4748320"
  },
  {
    "text": "to take is not actually that difficult we are just so ridiculously bad at it",
    "start": "4748320",
    "end": "4754199"
  },
  {
    "text": "that it seems impossible okay what's the difference really between those two things we if we're all terrible at it",
    "start": "4754199",
    "end": "4760800"
  },
  {
    "text": "why don't we just stop lying to ourselves stuff I think the the the former is something we can fix right if",
    "start": "4760800",
    "end": "4767760"
  },
  {
    "text": "if it was if it really was true that you can't estimate things that it's like this impossible task we can't get right",
    "start": "4767760",
    "end": "4773360"
  },
  {
    "text": "then we're kind of stuck right then you can't ever really fix that we're just kind of stuck with like I don't know",
    "start": "4773360",
    "end": "4778520"
  },
  {
    "text": "software will get done when it gets done but if it's that we haven't developed the skills necessary to be able to",
    "start": "4778520",
    "end": "4784520"
  },
  {
    "text": "estimate well that's something we can work on that's something we can fix and I think there's writing out there and",
    "start": "4784520",
    "end": "4790000"
  },
  {
    "text": "there's re and there's things out there especially in other Industries that can help us understand like why is it that",
    "start": "4790000",
    "end": "4796400"
  },
  {
    "text": "we are so bad at estimating how long things are going to take in software like one of the things I always kind of",
    "start": "4796400",
    "end": "4802320"
  },
  {
    "text": "talk with my friends about is how like I don't know when's the last time that you factored in people's vacation schedules into your Sprint planning uh or like",
    "start": "4802320",
    "end": "4809480"
  },
  {
    "text": "your quarter planning like how many times have you actually like pulled in a vacation schedule and had that be part",
    "start": "4809480",
    "end": "4815280"
  },
  {
    "text": "of the way that you calculate things and not just been like a background thing yeah well never mind those things which",
    "start": "4815280",
    "end": "4821520"
  },
  {
    "text": "you could factor in what about all the stuff like that you learn as you start that's the trouble for me is as you",
    "start": "4821520",
    "end": "4828360"
  },
  {
    "text": "start and get underway on something you unravel so much stuff and so you can you",
    "start": "4828360",
    "end": "4835639"
  },
  {
    "text": "can get good estimations but you you sort of have to do quite a lot of work up front to get them and then why don't",
    "start": "4835639",
    "end": "4841920"
  },
  {
    "text": "we just focus on doing the work and you know I'm not against like deadlines I actually really like quite aggressive",
    "start": "4841920",
    "end": "4849080"
  },
  {
    "text": "deadlines because it really forces you to prioritize but it's not about like",
    "start": "4849080",
    "end": "4854199"
  },
  {
    "text": "crumming all that scope crumming everything into that short time period you allow the scope to be flexible you",
    "start": "4854199",
    "end": "4860520"
  },
  {
    "text": "pick the most important and sometimes that's the hardest bit is people they want everything of course by the release",
    "start": "4860520",
    "end": "4867679"
  },
  {
    "text": "date but if you can't have that because of I don't know the laws of physics then what would you prefer to",
    "start": "4867679",
    "end": "4875360"
  },
  {
    "text": "have first and that even as a question is a very difficult one and sometimes the the worst managers I've ever worked",
    "start": "4875360",
    "end": "4881760"
  },
  {
    "text": "with will say no it's all top priority it's all top priority like because I'm saying well let's let's try and order",
    "start": "4881760",
    "end": "4888000"
  },
  {
    "text": "this you know no we all we need it all it's as simple as that it's I feel like our our industry is like veered very",
    "start": "4888000",
    "end": "4894800"
  },
  {
    "text": "much into the like being scared of up doing doing anything up front we're always just like no no no we got to like",
    "start": "4894800",
    "end": "4901000"
  },
  {
    "text": "just get into it just get into the work and I think we've very much underestimated the actual cost of doing",
    "start": "4901000",
    "end": "4906960"
  },
  {
    "text": "that of like surpris now we have all of this code that we have to maintain and if we got this design wrong then were",
    "start": "4906960",
    "end": "4913199"
  },
  {
    "text": "stuck with this code I've worked on so many Legacy code bases that are like if you'd spent an extra three weeks just",
    "start": "4913199",
    "end": "4918639"
  },
  {
    "text": "thinking this through we would have had a much cleaner design and a much better thing and I feel like software projects",
    "start": "4918639",
    "end": "4924480"
  },
  {
    "text": "constantly run over by months and months and months that like spending an extra two or three weeks upfront to like sit",
    "start": "4924480",
    "end": "4931239"
  },
  {
    "text": "down and really start figuring out and estimating and figuring out all the risks of what you're trying to build is",
    "start": "4931239",
    "end": "4936679"
  },
  {
    "text": "well worth it but we kind of we don't make that decision because that's like the bad thing that's like waterfall if we start doing that PCS don't value",
    "start": "4936679",
    "end": "4944480"
  },
  {
    "text": "planning they value shipping and crushing",
    "start": "4944480",
    "end": "4949840"
  },
  {
    "text": "it I yeah that definitely seems like part",
    "start": "4950120",
    "end": "4956199"
  },
  {
    "text": "of the issue is like the shortsightedness I think in general it's like I don't know I've sat down with people before and I'm like is there ever",
    "start": "4956199",
    "end": "4962639"
  },
  {
    "text": "really a software like people always just like oh well this thing we can do it in two weeks we can do it a month we we'll build this service in two weeks",
    "start": "4962639",
    "end": "4968679"
  },
  {
    "text": "we'll build this this new feature in a month and I'm like when has it ever actually wound up taking only 2 weeks or",
    "start": "4968679",
    "end": "4975320"
  },
  {
    "text": "only a month like never it always like drags on and on and on and on and on and then it's like 6 months down the road",
    "start": "4975320",
    "end": "4981159"
  },
  {
    "text": "and I'm like well we could have actually planned a proper project and been done with a good thing good service a good",
    "start": "4981159",
    "end": "4988159"
  },
  {
    "text": "feature at the end of those six months but instead now we're going to drag it in for another four months and then",
    "start": "4988159",
    "end": "4993360"
  },
  {
    "text": "we'll have like half of what we really wanted to have at the end so I feel like it that the the aversion to planning",
    "start": "4993360",
    "end": "5000600"
  },
  {
    "text": "very rarely works out in our favor in the long run preach it yeah I mean there",
    "start": "5000600",
    "end": "5005760"
  },
  {
    "text": "are for sure uh it's one of those it depends isn't it I think if you can the",
    "start": "5005760",
    "end": "5011840"
  },
  {
    "text": "thing is like quick prototypes and things like that are great for this because they feed into that process",
    "start": "5011840",
    "end": "5017800"
  },
  {
    "text": "because you're right of course you would you would uh if you can do the design if you can think ahead a bit um I mean",
    "start": "5017800",
    "end": "5024960"
  },
  {
    "text": "that's really what our intelligence is meant to before then we should do that",
    "start": "5024960",
    "end": "5030280"
  },
  {
    "text": "um it's just I mean I think I think it's when it depends as well who's doing that",
    "start": "5030280",
    "end": "5036400"
  },
  {
    "text": "design and and the fact that you need to have that mechanical sympathy with the",
    "start": "5036400",
    "end": "5042360"
  },
  {
    "text": "system as it is as it is today and the changes you're going to make um because",
    "start": "5042360",
    "end": "5048199"
  },
  {
    "text": "without that it's it's too it's just too difficult so I just think you know it's it is difficult it's very hard but",
    "start": "5048199",
    "end": "5054520"
  },
  {
    "text": "there's definitely cases where a bit of design a bit of thinking ahead would have just saved a lot of time it's just",
    "start": "5054520",
    "end": "5061400"
  },
  {
    "text": "very difficult to know those instances I guess that's where experience comes in great one I guess the way I would put it",
    "start": "5061400",
    "end": "5068040"
  },
  {
    "text": "was with the limitations and like the current way a lot of management works",
    "start": "5068040",
    "end": "5074280"
  },
  {
    "text": "it's almost impossible to estimate projects but if your Management's willing to work with you to be like I",
    "start": "5074280",
    "end": "5080560"
  },
  {
    "text": "need a week to figure this thing out like to do a prototype and to figure some stuff out in design and then we can sit down and come up with a good",
    "start": "5080560",
    "end": "5086080"
  },
  {
    "text": "estimate from that point and if you have like a team that's like it's not necessarily I guess what I'm saying is",
    "start": "5086080",
    "end": "5091119"
  },
  {
    "text": "it's not just learning how to estimate part of it is having like a management team that's willing to let you figure",
    "start": "5091119",
    "end": "5096239"
  },
  {
    "text": "out what you need to figure out and let you actually learn the skills you need to learn to estimate accurately and in a",
    "start": "5096239",
    "end": "5102639"
  },
  {
    "text": "lot of places they just they aren't willing to do that so you're expected to estimate a project without doing any",
    "start": "5102639",
    "end": "5109040"
  },
  {
    "text": "prototyping and if you come back and give a realistic number sometimes they're like no that's too long you need a close like it needs to be less than",
    "start": "5109040",
    "end": "5115040"
  },
  {
    "text": "that and it's like well you're you're expected at that point to just give them a less number even though it's not accurate well I always say well what",
    "start": "5115040",
    "end": "5122080"
  },
  {
    "text": "what going to take out and when they say nothing you know you do have a problem I",
    "start": "5122080",
    "end": "5127520"
  },
  {
    "text": "I do think too that like um this is it's not just like we can't solve this on our own it has to be like larger both",
    "start": "5127520",
    "end": "5135239"
  },
  {
    "text": "industry and like you know the the other aspects of the organizations we're in all have to change to get away from this",
    "start": "5135239",
    "end": "5141639"
  },
  {
    "text": "mindset that like oh we can just like pump out this feature without actually",
    "start": "5141639",
    "end": "5147040"
  },
  {
    "text": "having to do the the stuff around you know all this like design and I think at the end of the day it comes down to like",
    "start": "5147040",
    "end": "5152880"
  },
  {
    "text": "risk assessment like we have to sit down and actually assess all of the risk and like that really is like not just like",
    "start": "5152880",
    "end": "5158880"
  },
  {
    "text": "the things that could go wrong but like all of the designs all the you know the kind of prototyping that we have to do",
    "start": "5158880",
    "end": "5165080"
  },
  {
    "text": "we have to we have to sit down and really put all of that at the Forefront like in at the beginning of what we're",
    "start": "5165080",
    "end": "5170760"
  },
  {
    "text": "doing and continually do it throughout but as you said like we we have to include Management in that we have to",
    "start": "5170760",
    "end": "5176760"
  },
  {
    "text": "include both product management and like people management like this has to be something that we all do together",
    "start": "5176760",
    "end": "5183400"
  },
  {
    "text": "understanding that if we start doing this the software we build not only will likely get delivered faster but it will",
    "start": "5183400",
    "end": "5189239"
  },
  {
    "text": "be of higher quality so I think that's the other thing that happens is like if we don't do this estimation it we won't",
    "start": "5189239",
    "end": "5196679"
  },
  {
    "text": "succeed most of the time which I think is the case right now we aren't succeeding most of the time we're failing most of the time like the",
    "start": "5196679",
    "end": "5203040"
  },
  {
    "text": "software is so broken that we're all just used to like working our lives around it we just refresh the page turn",
    "start": "5203040",
    "end": "5209199"
  },
  {
    "text": "it off and turn it on again like this is just how we do do things being like Ah that's that's fine but it's like it's",
    "start": "5209199",
    "end": "5215679"
  },
  {
    "text": "rooted at this this problem where it's just like we don't actually know what we're doing when we go to do it and we",
    "start": "5215679",
    "end": "5222080"
  },
  {
    "text": "just kind of wing it and like in most other industries that like just doesn't fly and just doesn't work like imagine",
    "start": "5222080",
    "end": "5229600"
  },
  {
    "text": "if you're building buildings you're like we're just going to wing it we don't need we don't need to sit down and come with the blueprints and estimations of",
    "start": "5229600",
    "end": "5234840"
  },
  {
    "text": "the resources this building will use we'll just drop it on the land and hook it up to the public utilities and hope",
    "start": "5234840",
    "end": "5240000"
  },
  {
    "text": "that everything works well but that's quite honestly what we tend to do a lot of the time we'd have some great",
    "start": "5240000",
    "end": "5245840"
  },
  {
    "text": "buildings though if we did let people do that some a lot of them would fail but the ones that worked imagine them yeah there' be a yeah Angelica Hill another",
    "start": "5245840",
    "end": "5253639"
  },
  {
    "text": "go time panelist is actually a manager herself so we are going to do a future episode where we dig into this and I",
    "start": "5253639",
    "end": "5260760"
  },
  {
    "text": "want to call the episode managers do we need them we'll find out we'll find out we'll",
    "start": "5260760",
    "end": "5268080"
  },
  {
    "text": "solve that one we we are well over time this has been a great convers ation but I need to do some host duties now um and",
    "start": "5268080",
    "end": "5277080"
  },
  {
    "text": "basically get rid of you all but thank you so much Brian maybe you could play us out after I do this final thing play",
    "start": "5277080",
    "end": "5284600"
  },
  {
    "text": "what do you want to hear oh whatever anything you've got bate whenever you invite managers on for that show can you",
    "start": "5284600",
    "end": "5289800"
  },
  {
    "text": "make sure you tell them the title The Working title no um okay thank you so much for",
    "start": "5289800",
    "end": "5297239"
  },
  {
    "text": "everyone paying attention today it's been an excellent episode uh Chris br",
    "start": "5297239",
    "end": "5302320"
  },
  {
    "text": "John Calhoun always a pleasure and of course Brian Kettle said what would we do without you thank you very much sir",
    "start": "5302320",
    "end": "5308639"
  },
  {
    "text": "so how long am I going to be blacklisted from being on go time after this episode",
    "start": "5308639",
    "end": "5314040"
  },
  {
    "text": "it depends how good this performance is [Music]",
    "start": "5314040",
    "end": "5322109"
  },
  {
    "text": "[Music]",
    "start": "5324890",
    "end": "5331000"
  },
  {
    "text": "now [Music]",
    "start": "5331000",
    "end": "5341100"
  },
  {
    "text": "[Music]",
    "start": "5344830",
    "end": "5349210"
  },
  {
    "text": "hoay you can support our work and help ensure that go time continues into the",
    "start": "5350080",
    "end": "5355560"
  },
  {
    "text": "future with a change log Plus+ membership ditch the ads get closer to the metal and directly contribute to all",
    "start": "5355560",
    "end": "5362159"
  },
  {
    "text": "changelog podcasts at Chang log.com plusplus once again that's Chang log.com",
    "start": "5362159",
    "end": "5368440"
  },
  {
    "text": "plusplus check it out this episode was hosted by Matt ryer produced by Jared",
    "start": "5368440",
    "end": "5374440"
  },
  {
    "text": "Santo with music by breakmaster cylinder go time is brought to you by our awesome",
    "start": "5374440",
    "end": "5379679"
  },
  {
    "text": "sponsors special thanks to fastly launch darkley and Leno next time on go time a",
    "start": "5379679",
    "end": "5386040"
  },
  {
    "text": "listener request Carl Johnson and Wayne Ashley Barry join Matt and Mark to talk",
    "start": "5386040",
    "end": "5392400"
  },
  {
    "text": "about go and bed stay tuned for that one it'll be ready for your ear holes next",
    "start": "5392400",
    "end": "5398560"
  },
  {
    "text": "[Music]",
    "start": "5398560",
    "end": "5409250"
  },
  {
    "text": "week [Music]",
    "start": "5420840",
    "end": "5425520"
  },
  {
    "text": "this is now the Afterparty so this is great stuff I",
    "start": "5429639",
    "end": "5435880"
  },
  {
    "text": "gotta go to the bathroom man it is time that's going in that's",
    "start": "5435880",
    "end": "5441080"
  },
  {
    "text": "going in that has to go in that's a great ending just we we'll cut the song",
    "start": "5441080",
    "end": "5447280"
  },
  {
    "text": "and then we'll just play that clip I got to go to the bathroom man I got to go",
    "start": "5447280",
    "end": "5453440"
  },
  {
    "text": "bathroom we're done brilliant",
    "start": "5453440",
    "end": "5460040"
  }
]