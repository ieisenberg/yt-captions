[
  {
    "text": "[Music] this is JS party your weekly celebration",
    "start": "4460",
    "end": "9599"
  },
  {
    "text": "of JavaScript and the web check us out on the web at JSP party. FM there you'll",
    "start": "9599",
    "end": "15719"
  },
  {
    "text": "find our recommended episodes listener favorites and a request form so you can let us know what you want to hear about",
    "start": "15719",
    "end": "22279"
  },
  {
    "text": "on the pod that's a great idea I'm glad I had it thanks to our partners for helping us bring you worldclass",
    "start": "22279",
    "end": "28160"
  },
  {
    "text": "developer pods each and every week f.com fly.io and typ sense.org okay hey",
    "start": "28160",
    "end": "36800"
  },
  {
    "text": "it's party time [Music]",
    "start": "36800",
    "end": "42559"
  },
  {
    "text": "y'all what's up friends I'm here with one of our good friends faras abuka DJ",
    "start": "42559",
    "end": "48039"
  },
  {
    "text": "faras is the founder and CEO of socket you can find them at socket. deev secure",
    "start": "48039",
    "end": "54239"
  },
  {
    "text": "your supply chain ship with confidence but for Ross I have a question for you what's the problem what's the SEC",
    "start": "54239",
    "end": "60199"
  },
  {
    "text": "concerns do developers face when consuming open source dependencies what does socket do to solve these problems",
    "start": "60199",
    "end": "65880"
  },
  {
    "text": "so the problem that socket solves is when a developer is choosing a package there's so much potential um information",
    "start": "65880",
    "end": "71960"
  },
  {
    "text": "they could look at right I mean at the end of the day they're trying to get a job done right there's a feature they want to implement they want to solve a",
    "start": "71960",
    "end": "77880"
  },
  {
    "text": "problem so they go and find a package that looks like it might be a promising solution maybe they check to see that it has an open source license that it has",
    "start": "77880",
    "end": "84520"
  },
  {
    "text": "good docs maybe they check the number of downloads or GitHub stars but most developers don't really go beyond on",
    "start": "84520",
    "end": "90200"
  },
  {
    "text": "that and if you think about what it means to use a good package to find a to use a good open source dependency we",
    "start": "90200",
    "end": "96640"
  },
  {
    "text": "care about a lot of other things too right we care about um who is the maintainer is this thing wellmaintained from a security perspective we care",
    "start": "96640",
    "end": "103399"
  },
  {
    "text": "about does this thing have known vulnerabilities does it do weird things maybe it takes your environment variables and it sends them off to the",
    "start": "103399",
    "end": "109759"
  },
  {
    "text": "network uh you know meaning it's going to take your your API Keys your tokens like that would be bad uh the",
    "start": "109759",
    "end": "115600"
  },
  {
    "text": "unfortunate thing is that today most developers who are choosing packages and and going about their day they're not looking for that type of stuff it's not",
    "start": "115600",
    "end": "122079"
  },
  {
    "text": "really reasonable to expect a developer to go and open up every single one of their dependencies and read every line",
    "start": "122079",
    "end": "128000"
  },
  {
    "text": "of code not to mention that the average npm package has 79 additional dependencies that it brings in so you're",
    "start": "128000",
    "end": "134599"
  },
  {
    "text": "talking about just you know thousands and thousands of lines of code and so we do that work for the developer so we go",
    "start": "134599",
    "end": "140560"
  },
  {
    "text": "out and we we fully analyze every piece of their dependencies you know every one of those lines of code and we look for",
    "start": "140560",
    "end": "146200"
  },
  {
    "text": "strange things we look for those risks that they're not going to have time to look for so we'll find you know we",
    "start": "146200",
    "end": "151280"
  },
  {
    "text": "detect all kinds of attacks and and kinds of malware and uh vulnerabilities in those dependencies and we bring them",
    "start": "151280",
    "end": "157280"
  },
  {
    "text": "to the developer and help them when they're at that moment of choosing a package okay that's good so what's the install process what's the getting",
    "start": "157280",
    "end": "163519"
  },
  {
    "text": "started socket's super easy to get started with so uh we're you know our whole team is made up of developers and",
    "start": "163519",
    "end": "168920"
  },
  {
    "text": "uh so it's super developer friendly we got tired of using security tools that send a ton of alerts and we're hard to",
    "start": "168920",
    "end": "174760"
  },
  {
    "text": "configure and and and just kind of noisy and so we built socket to fix all those problems so we have all the typical",
    "start": "174760",
    "end": "180400"
  },
  {
    "text": "Integrations you'd expect a CLI a GitHub app an API all that good stuff but most of our users use socket through the",
    "start": "180400",
    "end": "187280"
  },
  {
    "text": "GitHub app and it's a really fast install a couple clicks you get it going and it monitors all your poll requests",
    "start": "187280",
    "end": "194120"
  },
  {
    "text": "and you can get an accurate and kind of indepth analysis of all your dependencies really high signal to noise",
    "start": "194120",
    "end": "199280"
  },
  {
    "text": "you know it doesn't just cover vulnerabilities it's actually about the full picture of dependency risk and",
    "start": "199280",
    "end": "204840"
  },
  {
    "text": "quality right so we we we help you make better decisions about dependencies that you're using directly in the poll",
    "start": "204840",
    "end": "210360"
  },
  {
    "text": "request workflow directly directly where you're spending your time as a developer you know whether you're managing a small project or a large application with",
    "start": "210360",
    "end": "216480"
  },
  {
    "text": "thousands of dependencies socket has you covered and it's pretty simple to use it's it's really not a complicated tool",
    "start": "216480",
    "end": "222480"
  },
  {
    "text": "very cool the next step is to go to socket. Dev install the GitHub app or",
    "start": "222480",
    "end": "227720"
  },
  {
    "text": "book a demo either works for us again socket dodev that's",
    "start": "227720",
    "end": "234840"
  },
  {
    "text": "s.dev",
    "start": "238720",
    "end": "241720"
  },
  {
    "text": "[Music]",
    "start": "244220",
    "end": "252970"
  },
  {
    "text": "[Applause] [Music] [Applause]",
    "start": "252970",
    "end": "260959"
  },
  {
    "text": "hello everybody hello hello this is so exciting it's the last show that we are",
    "start": "260959",
    "end": "266840"
  },
  {
    "text": "well it's not the last show we're recording this year but it's the last show we we're releasing this year so",
    "start": "266840",
    "end": "272199"
  },
  {
    "text": "this is like it just feels like we're ending this year on such a good note with such an incredible guest and and",
    "start": "272199",
    "end": "277720"
  },
  {
    "text": "and more incredible topic the topic that's in the name of the show we're going to be talking about all the things",
    "start": "277720",
    "end": "283280"
  },
  {
    "text": "that are new with JavaScript uh and we'll introduce our guests in just a minute I want to First welcome Nick one",
    "start": "283280",
    "end": "289240"
  },
  {
    "text": "of my my co-hosts for the day how are you Nick Hoy Hoy ml how's it going it's going well it's going well I had a bit",
    "start": "289240",
    "end": "295320"
  },
  {
    "text": "of a bit of a morning today a little bit of a a scare uh friend of mine was",
    "start": "295320",
    "end": "300560"
  },
  {
    "text": "driving in the snow and lost control of their car and kind of was helping with the aftermath of that whole situation so",
    "start": "300560",
    "end": "306919"
  },
  {
    "text": "just a reminder don't take anything for granted everyone life is short you know so yeah anyways so Chris welcome to you",
    "start": "306919",
    "end": "313800"
  },
  {
    "text": "as well hi thanks for welcoming me yeah you're welcom to be welcomed uh our",
    "start": "313800",
    "end": "320039"
  },
  {
    "text": "special guest for today is none other than Daniel arenburg also affectionately",
    "start": "320039",
    "end": "325479"
  },
  {
    "text": "known on the internet as little Dan welcome Dan hello hello thanks for having me here yay yeah we're we're",
    "start": "325479",
    "end": "332120"
  },
  {
    "text": "thrilled we're so thrilled um so for folks who might not be familiar with um Dan he's works at Bloomberg but I think",
    "start": "332120",
    "end": "339080"
  },
  {
    "text": "for me what resonates when I hear little Dan is like I pretty much associate him onetoone with ecmascript and standards",
    "start": "339080",
    "end": "346080"
  },
  {
    "text": "work he's been really really involved with tc39 and has helped push forward a",
    "start": "346080",
    "end": "351520"
  },
  {
    "text": "lot of really incredible specs in Java Script both as a champion as an author um and also just um a community Layon I",
    "start": "351520",
    "end": "358759"
  },
  {
    "text": "think he does a lot of really great communication to the community about new specs as well so so Dan I don't want to",
    "start": "358759",
    "end": "364639"
  },
  {
    "text": "butcher your intro so please why don't you tell our audience a little bit about yourself oh that that was a great intro",
    "start": "364639",
    "end": "369680"
  },
  {
    "text": "so yeah I'm Daniel arber little Dan I got involved in JavaScript when I was",
    "start": "369680",
    "end": "376280"
  },
  {
    "text": "working at at Google and I did an internal transfer to the V8 team where I",
    "start": "376280",
    "end": "381319"
  },
  {
    "text": "got to to implement some of es6 including some features that were about",
    "start": "381319",
    "end": "386440"
  },
  {
    "text": "arrays maybe some that were not as good like simple species and helped out with asyn A8 and then I",
    "start": "386440",
    "end": "394479"
  },
  {
    "text": "jump shipped to a company called ealia which is a consultancy that was also working on this project of implementing",
    "start": "394479",
    "end": "400800"
  },
  {
    "text": "es6 and Beyond so we worked on things like big in private fields and methods",
    "start": "400800",
    "end": "406800"
  },
  {
    "text": "and JavaScript and now I'm working at Bloomberg uh Bloomberg was sponsoring much of my work that I was doing at",
    "start": "406800",
    "end": "412840"
  },
  {
    "text": "ealia and I'm working on further proposals that I'm excited to talk about later today as well as improving the way",
    "start": "412840",
    "end": "420720"
  },
  {
    "text": "that we use JavaScript in our internal systems Frameworks we have 8,000 plus",
    "start": "420720",
    "end": "426280"
  },
  {
    "text": "Engineers here at Bloomberg and all UI development is done with JavaScript typescript basically so we have our own",
    "start": "426280",
    "end": "434560"
  },
  {
    "text": "ways of doing it that that have been working out well but can always be more yeah that's really great that sounds",
    "start": "434560",
    "end": "440759"
  },
  {
    "text": "amazing um it's such a I just I also just generally love Bloomberg and Bloomberg Engineers uh they're some of",
    "start": "440759",
    "end": "445960"
  },
  {
    "text": "my favorite people in the community and you work on a really cool project you know the terminal and like the",
    "start": "445960",
    "end": "451120"
  },
  {
    "text": "engineering behind that is just mind-blowing and I hope one day that we will be able to do a show on that in the future but today we're here to talk",
    "start": "451120",
    "end": "457720"
  },
  {
    "text": "about JavaScript yeah that would be cool right I it's it's it is a very cool engineering like feat like what is the",
    "start": "457720",
    "end": "464080"
  },
  {
    "text": "terminal it's like four instances of webkit wrapped around with a bunch of other custom C++ and JavaScript it's",
    "start": "464080",
    "end": "469360"
  },
  {
    "text": "crazy yeah my cooworker Rob Palmer and I have been talking about making a blog post about all this and uh it's just",
    "start": "469360",
    "end": "476240"
  },
  {
    "text": "just a lot of work that we haven't done yet well Rob Rob Palmer is has been invited he has had an open invitation to",
    "start": "476240",
    "end": "481960"
  },
  {
    "text": "this show and I know you're listening Rob so I just want to say let's talk about the Bloomberg terminal on JS party",
    "start": "481960",
    "end": "488680"
  },
  {
    "text": "okay um but today again we're going back to JavaScript right so um there would be no Bloomberg terminal without JavaScript",
    "start": "488680",
    "end": "494759"
  },
  {
    "text": "right Dan is that fair to say uh at this point at this point no I mean you know",
    "start": "494759",
    "end": "500479"
  },
  {
    "text": "wrong in in the in the 9s the Bloomberg terminal didn't use JavaScript but it's been it's been a pretty core element",
    "start": "500479",
    "end": "506639"
  },
  {
    "text": "since the early 2000s wow that's amazing and yeah I I I can see how that was the case um but yeah so so getting back to",
    "start": "506639",
    "end": "512719"
  },
  {
    "text": "JavaScript what what I'm excited to dig into today folks is you know just I you know that we have many new listeners we",
    "start": "512719",
    "end": "519159"
  },
  {
    "text": "some of you are very familiar with the standards process and how JavaScript gets made some of you are not so I kind",
    "start": "519159",
    "end": "524720"
  },
  {
    "text": "of want to do a little bit of baselining for everyone you know what is what is the tc39 what is ecmascript this this",
    "start": "524720",
    "end": "530560"
  },
  {
    "text": "ecmascript thing that we keep mentioning and talking about interchangeably with JavaScript and then we'll talk about the",
    "start": "530560",
    "end": "536279"
  },
  {
    "text": "staging process so what are the kind of steps and Milestones that a proposal has to go through in order for it to",
    "start": "536279",
    "end": "541680"
  },
  {
    "text": "actually make it into a JavaScript engine and and be shipped in the wild um and uh after that I hope to get into all",
    "start": "541680",
    "end": "549279"
  },
  {
    "text": "the fun new specs that have landed recently as well as some things that are interesting in stage two and three and",
    "start": "549279",
    "end": "556160"
  },
  {
    "text": "one and lastly we'll hopefully talk a bit broadly about open source sustainability so we have a very packed",
    "start": "556160",
    "end": "562399"
  },
  {
    "text": "show today Dan are you ready did you bring like your your dancing shoes or",
    "start": "562399",
    "end": "567519"
  },
  {
    "text": "you know uh equivalent of that wearing some some shoes that I got from Walmart",
    "start": "567519",
    "end": "573680"
  },
  {
    "text": "after one time I was in a a kayak and it tipped over and my shoes were kind of destroyed so got some $20 shoes",
    "start": "573680",
    "end": "580760"
  },
  {
    "text": "from to the fancy office uh all right so let's start with a tc39 what is it yeah",
    "start": "580760",
    "end": "587480"
  },
  {
    "text": "and yeah so you might have heard of ecmascript as like a synonym for",
    "start": "587480",
    "end": "592560"
  },
  {
    "text": "JavaScript that's partly because JavaScript is like a trademark that",
    "start": "592560",
    "end": "597880"
  },
  {
    "text": "Oracle kind of has some intellectual property related to because of java and also to recognize the fact that",
    "start": "597880",
    "end": "605839"
  },
  {
    "text": "JavaScript is standardized in ecma ecma used to stand for the European computer",
    "start": "605839",
    "end": "612000"
  },
  {
    "text": "manufacturing association now it's like KFC do doesn't stand for anything it's",
    "start": "612000",
    "end": "617240"
  },
  {
    "text": "not not not even fried anymore and yeah I'm actually currently vice president of",
    "start": "617240",
    "end": "622640"
  },
  {
    "text": "ecma that doesn't mean very much I'm like vice president of the board so I'm helping bring in new projects like",
    "start": "622640",
    "end": "628680"
  },
  {
    "text": "Cyclone d X is now being standardized in ecma and trying to bring in Winter CG",
    "start": "628680",
    "end": "633880"
  },
  {
    "text": "which we can talk about later so within Emma tc39 was the 39th technical",
    "start": "633880",
    "end": "639440"
  },
  {
    "text": "committee to be created that's the name and it's about standardizing JavaScript",
    "start": "639440",
    "end": "644480"
  },
  {
    "text": "so you know years ago before I got involved in in this process I kind of thought oh it would be really cool to",
    "start": "644480",
    "end": "651160"
  },
  {
    "text": "work on JavaScript but it just seems like these things are already kind of",
    "start": "651160",
    "end": "656440"
  },
  {
    "text": "fixed or would be very impossible to change would have to be in some I don't",
    "start": "656440",
    "end": "661720"
  },
  {
    "text": "even know what kind of powerful position to do it but instead we aim to have this",
    "start": "661720",
    "end": "666880"
  },
  {
    "text": "open process where anyone can join the committee people can participate from outside the committee and make",
    "start": "666880",
    "end": "673200"
  },
  {
    "text": "contributions to the language and propose changes and work together with the open source community on developing",
    "start": "673200",
    "end": "679680"
  },
  {
    "text": "those changes so because it's you know in the in the old day we would have like",
    "start": "679680",
    "end": "685399"
  },
  {
    "text": "a waterfall model we would say okay here's the goals for es6 let's work on them for five years and then publish es6",
    "start": "685399",
    "end": "691839"
  },
  {
    "text": "after es6 we decided no that's this is too much we have to go more incrementally more you know just like",
    "start": "691839",
    "end": "698519"
  },
  {
    "text": "with developing software used to be a Windows 95 Windows 98 and now we're on",
    "start": "698519",
    "end": "703800"
  },
  {
    "text": "these sort of rolling releases so instead we developed the proposals through this four-stage process actually",
    "start": "703800",
    "end": "711200"
  },
  {
    "text": "five stag now so at stage one we have an idea that we're all discussing that means that someone has brought it to",
    "start": "711200",
    "end": "717440"
  },
  {
    "text": "committee it's on the table and we haven't yet agreed whether we should do anything about it at stage two there's a",
    "start": "717440",
    "end": "725160"
  },
  {
    "text": "concrete first draft so there's a there's a concrete specification showing what the language feature would do and",
    "start": "725160",
    "end": "731800"
  },
  {
    "text": "the committee kind of agrees that it should move forward we kind of hope that it can eventually be part of javascripts",
    "start": "731800",
    "end": "738320"
  },
  {
    "text": "collectively at stage 2.7 this the new stage uh We've basically finished with",
    "start": "738320",
    "end": "745079"
  },
  {
    "text": "the design as much as we can do kind of in theory based on community outreach",
    "start": "745079",
    "end": "751240"
  },
  {
    "text": "and based on thinking things through carefully as a committee and discussions with implementers too right because the",
    "start": "751240",
    "end": "757000"
  },
  {
    "text": "folks that are like working on this stuff you know for various browsers are also part of tc39 and and they weigh in",
    "start": "757000",
    "end": "762800"
  },
  {
    "text": "on implementation well they weigh in on the specification as well that's right so some parts of the implementation",
    "start": "762800",
    "end": "769120"
  },
  {
    "text": "discussion happens before stage 2.7 like does this seem like a design that would",
    "start": "769120",
    "end": "774560"
  },
  {
    "text": "be implementable but then to get to stage three after that we have to write tests performance tests so this is test",
    "start": "774560",
    "end": "782279"
  },
  {
    "text": "262 test 262 is a test of the full JavaScript language includes all the corner cases or at least we hope it",
    "start": "782279",
    "end": "788600"
  },
  {
    "text": "includes all the corner cases and it's a it's an open source project that's used by all the JavaScript engines and you",
    "start": "788600",
    "end": "794760"
  },
  {
    "text": "know the SML because you you wrote some of the tests so thank you for your contributions there my pleasure and for",
    "start": "794760",
    "end": "800800"
  },
  {
    "text": "stage three then we have both the the initial design including the community",
    "start": "800800",
    "end": "806959"
  },
  {
    "text": "implementers you know thinking through logical implications and then after stage three we're saying to implementers",
    "start": "806959",
    "end": "813360"
  },
  {
    "text": "if you haven't already started implementing this well now it's it's somewhat stable you have your tests so",
    "start": "813360",
    "end": "819399"
  },
  {
    "text": "you might want to think about implementing it because the committee can only move forward once we have some",
    "start": "819399",
    "end": "825120"
  },
  {
    "text": "experience seeing if it works out in actual JavaScript engines sometimes engines try out a prototype",
    "start": "825120",
    "end": "831440"
  },
  {
    "text": "implementation beforehand and that can build some some important information then at stage four we have multiple",
    "start": "831440",
    "end": "838440"
  },
  {
    "text": "engines implementing and shipping the future and it makes sense to put it in the JavaScript standard so that point we",
    "start": "838440",
    "end": "845759"
  },
  {
    "text": "merge the pr you know the egma 262 is just a normal GitHub repo it has a CI",
    "start": "845759",
    "end": "851240"
  },
  {
    "text": "that you know builds some markdown document into some HTML document and that's the specification technically",
    "start": "851240",
    "end": "857880"
  },
  {
    "text": "it's like an editor's draft and every year we have a cut of it we have a version like ecma sorry ecmascript",
    "start": "857880",
    "end": "865440"
  },
  {
    "text": "2023 or ES 2015 which was the same as",
    "start": "865440",
    "end": "870480"
  },
  {
    "text": "es6 and that is what gets standardized formally but I think if you just look at",
    "start": "870480",
    "end": "877279"
  },
  {
    "text": "the current specification that includes all the stage four features that you can get to at tc39 esman 262 then that's",
    "start": "877279",
    "end": "887120"
  },
  {
    "text": "what I think of this the JavaScript standard it's the editor's draft technically but it's really the standard",
    "start": "887120",
    "end": "892639"
  },
  {
    "text": "yeah and it's this book Believe It or Not folks ecma is still like a a legal entity that exists in Geneva where all",
    "start": "892639",
    "end": "899759"
  },
  {
    "text": "the things in the world apparently whenever people have to talk to each other and work globally things seem to be headquartered in Geneva it's like",
    "start": "899759",
    "end": "905959"
  },
  {
    "text": "it's like the neutral safe zone of the world but anyways this book gets printed out there's like a an actual like one of",
    "start": "905959",
    "end": "912000"
  },
  {
    "text": "my former colleagues like sent me pictures of this like she went into this room in Geneva where all of the actual",
    "start": "912000",
    "end": "918880"
  },
  {
    "text": "like JavaScript gets printed out and it's like it looks like you know it's like this big thick bound paper and you",
    "start": "918880",
    "end": "925759"
  },
  {
    "text": "know there it is like it's like in its physical form it's quite interesting how that happens because it's an actual standard that like it's an international",
    "start": "925759",
    "end": "932560"
  },
  {
    "text": "standard uh manufacturers use it like all these different people rely on JavaScript to do very serious and",
    "start": "932560",
    "end": "938040"
  },
  {
    "text": "important things so you know yeah back in the day you could write a letter to Emma and ask them to just send you a",
    "start": "938040",
    "end": "945240"
  },
  {
    "text": "hard copy of a standard why' they stop doing that well you know there's printing",
    "start": "945240",
    "end": "952360"
  },
  {
    "text": "costs and then there's just yeah I you know I think if",
    "start": "952360",
    "end": "957759"
  },
  {
    "text": "if somebody really wanted a copy of a standard something could be worked out that the hard copies are still produced",
    "start": "957759",
    "end": "962959"
  },
  {
    "text": "they're archived in the Swiss national library right right right and that's part of what makes it a real standard in",
    "start": "962959",
    "end": "969519"
  },
  {
    "text": "some sense yeah no absolutely um for sure and just a couple really important points that you made there Daniel first",
    "start": "969519",
    "end": "975199"
  },
  {
    "text": "of all like amazing job summarizing that thank you so much for the the wonderful explanation of this like super dense",
    "start": "975199",
    "end": "981160"
  },
  {
    "text": "topic I just want to clarify one thing you said once something is kind of in stage forward the pr gets merged it's",
    "start": "981160",
    "end": "987360"
  },
  {
    "text": "not the test 262 PR it's the you're talking about the actual draft PR to edit the spec right that there's a repo",
    "start": "987360",
    "end": "993639"
  },
  {
    "text": "and yeah because I think you said the test 262 repo so I think you just missed that up oh thanks yeah the test 262 PR",
    "start": "993639",
    "end": "1001160"
  },
  {
    "text": "can actually be merged after the proposal is at stage three because even",
    "start": "1001160",
    "end": "1007240"
  },
  {
    "text": "though it's not in the full standard it's really useful for engines if they have access to those tests in the same",
    "start": "1007240",
    "end": "1013920"
  },
  {
    "text": "test 262 thing so you know in reality no engine gets % on that Suite partly",
    "start": "1013920",
    "end": "1020800"
  },
  {
    "text": "because there's new things being merged but partly because there's there are certain edge cases that we still working",
    "start": "1020800",
    "end": "1026280"
  },
  {
    "text": "out and need to fix in the spec interesting oh it's interesting that you said that that we have to fix them in",
    "start": "1026280",
    "end": "1031600"
  },
  {
    "text": "the spec I thought that it was like oh you know the way we wrote this code makes you know doing for example like",
    "start": "1031600",
    "end": "1037160"
  },
  {
    "text": "tail call optimization remember that was like Safari never implemented that or or JSC never oh Safari was the only one to",
    "start": "1037160",
    "end": "1044240"
  },
  {
    "text": "implement it but that was oh sorry I had that reversed I apologize call optimization a it's tricky topic I was",
    "start": "1044240",
    "end": "1049960"
  },
  {
    "text": "involved when I was in the va8 team on coming up with our position which was",
    "start": "1049960",
    "end": "1055280"
  },
  {
    "text": "very subtle I don't know if it maybe it was too subtle but if we had automatic tail call optimization then we would",
    "start": "1055280",
    "end": "1061600"
  },
  {
    "text": "drop some stack frames when you look at the eror stack and that we were worried",
    "start": "1061600",
    "end": "1067640"
  },
  {
    "text": "that it would make it hard to debug interesting yeah I had that revers it was it was one only one browser had",
    "start": "1067640",
    "end": "1073520"
  },
  {
    "text": "implemented it and then it was just like the other ones like said no you know for reasons for reasons there were technical",
    "start": "1073520",
    "end": "1079320"
  },
  {
    "text": "reasons like you just said well we said you know it should be a specific syntax",
    "start": "1079320",
    "end": "1084720"
  },
  {
    "text": "that you invoke on purpose when you want to do a tail call that's optimized that makes sense supposed to it being",
    "start": "1084720",
    "end": "1089840"
  },
  {
    "text": "implicit yeah and I would agree with that especially cuz like you never know what you're breaking right too like with",
    "start": "1089840",
    "end": "1094919"
  },
  {
    "text": "like the depth of the web so yeah I again really great summary and you know just one thing I want to highlight for",
    "start": "1094919",
    "end": "1100440"
  },
  {
    "text": "folks like you know the tc39 has really been like kicking butt super hard with the since like ecma script 2015/ es6",
    "start": "1100440",
    "end": "1108480"
  },
  {
    "text": "came out we had this like big you know we had that big leap and ever since then like Daniel said like like all the other",
    "start": "1108480",
    "end": "1114400"
  },
  {
    "text": "kind of subsequent releases of the specification have just they've been less eventful and I think better for the",
    "start": "1114400",
    "end": "1120000"
  },
  {
    "text": "community actually as a result of that like it's es 2023 just like landed quietly you know this past June or",
    "start": "1120000",
    "end": "1126280"
  },
  {
    "text": "whatever and I you know it's just yeah there's new things but it's not like this big hoopla all the time so I mean",
    "start": "1126280",
    "end": "1132120"
  },
  {
    "text": "it's nice to see that you all are kind of doing things sustainably but I think for me what makes the tc39 uniquely work",
    "start": "1132120",
    "end": "1138840"
  },
  {
    "text": "well is that you have this perfect mixx of implementers right so the people that are writing the C++ code like in the",
    "start": "1138840",
    "end": "1144880"
  },
  {
    "text": "engines and then you have language experts like people who are like researchers phds or just you know really",
    "start": "1144880",
    "end": "1151799"
  },
  {
    "text": "like true masters of language design right polyglots and then you have on the",
    "start": "1151799",
    "end": "1157240"
  },
  {
    "text": "third part of this triangle then you have like web developers you have people that are like building things at companies you have people things",
    "start": "1157240",
    "end": "1163679"
  },
  {
    "text": "building things for you know different consumers you know uh Library authors application Developers and you really",
    "start": "1163679",
    "end": "1169559"
  },
  {
    "text": "need that kind of like Trifecta of skills I think in order to kind of get it right and so by the time a spec",
    "start": "1169559",
    "end": "1174919"
  },
  {
    "text": "really lands like especially even even when it gets to this 2.7 stage I think like it's very well thought out and I",
    "start": "1174919",
    "end": "1181360"
  },
  {
    "text": "think for me the interesting part as somebody who's written tests for the language tests really really helped uh",
    "start": "1181360",
    "end": "1187640"
  },
  {
    "text": "implementers like imagine like imagine having the ability to kind of tdd your specification right so like I'm an",
    "start": "1187640",
    "end": "1193840"
  },
  {
    "text": "engineer on JavaScript core I'm implementing top level O8 me being able to have tests along the way while I'm",
    "start": "1193840",
    "end": "1200600"
  },
  {
    "text": "implementing to see like what I'm doing right or wrong like it greatly speeds up my process as as a browser developer",
    "start": "1200600",
    "end": "1206559"
  },
  {
    "text": "engineer but on the flip side of that for folks who are writing these tests they're actually like the fir like I",
    "start": "1206559",
    "end": "1212400"
  },
  {
    "text": "remember like I was writing tests for atomics for example like it was like the I was like one of the first people on",
    "start": "1212400",
    "end": "1217559"
  },
  {
    "text": "the planet like hitting different edge cases with like how do I do this in atomics how do I do that and you know",
    "start": "1217559",
    "end": "1223400"
  },
  {
    "text": "what kind of a harness do I need and how do I need to set this file up in order to make things work and it's really",
    "start": "1223400",
    "end": "1228799"
  },
  {
    "text": "interesting like being that early because you also get a chance to potentially give feedback to the people",
    "start": "1228799",
    "end": "1234120"
  },
  {
    "text": "who wrote this spec and say like this is difficult this isn't working right so it's actually this really nice chance to",
    "start": "1234120",
    "end": "1240120"
  },
  {
    "text": "also further like polish up the spec yeah like when you found that bug in my big in propos yes yes I remember yeah",
    "start": "1240120",
    "end": "1247400"
  },
  {
    "text": "yeah yeah yeah was it was like the bass was wrong and I it wasn't just me like it was Valerie and I were looking at it",
    "start": "1247400",
    "end": "1253200"
  },
  {
    "text": "and like basically the Bas that you had printed it was like N64 versus like I don't know like the",
    "start": "1253200",
    "end": "1259320"
  },
  {
    "text": "numbers were wrong and if we implemented it that way no computer would have been able to do it like cuz it was just too",
    "start": "1259320",
    "end": "1266320"
  },
  {
    "text": "like it was too big of an in you know what I mean but yeah we find bugs in the specs when we're writing tests too so",
    "start": "1266320",
    "end": "1272960"
  },
  {
    "text": "it's just I don't know tests are awesome and just writing tests for JavaScript is super meta like you're using JavaScript",
    "start": "1272960",
    "end": "1279200"
  },
  {
    "text": "to test JavaScript like it's fantastic and even things like modules like testing modules was also like unique cuz",
    "start": "1279200",
    "end": "1285600"
  },
  {
    "text": "then we had to we had to set up like this whole like harness for like do you test modules using JavaScript like it's",
    "start": "1285600",
    "end": "1291760"
  },
  {
    "text": "it's so you know but anyways fun engineering challenge and it was an honor to work on that stuff for a while",
    "start": "1291760",
    "end": "1297360"
  },
  {
    "text": "so and it's an open source project that you can contribute to correct uh there's all these issues for like missing tests",
    "start": "1297360",
    "end": "1304039"
  },
  {
    "text": "on the repo and there's a number of maintainers of that who are happy to help you figure out how to write tests",
    "start": "1304039",
    "end": "1311360"
  },
  {
    "text": "so if you're interested just I don't know go to the repository it's at github.com",
    "start": "1311360",
    "end": "1316640"
  },
  {
    "text": "tc39 t262 yeah we'll link it in the show notes great project and even if you just want to look at tests to better",
    "start": "1316640",
    "end": "1323240"
  },
  {
    "text": "understand how does map work how does map ruce work like you can learn about specifications even just through Reading",
    "start": "1323240",
    "end": "1329320"
  },
  {
    "text": "tests which is like my favorite way also to like learn new language features but anyways we're going to get off this nerdy topic because we have more nerdy",
    "start": "1329320",
    "end": "1335480"
  },
  {
    "text": "topics to cover which is what's new right so let's start with stage four and",
    "start": "1335480",
    "end": "1340880"
  },
  {
    "text": "kind of work our way down and there's two many new things for us to cover in one show so I kind of gave Daniel like",
    "start": "1340880",
    "end": "1346760"
  },
  {
    "text": "free reign to like come up with the things that he was most excited to talk about and so we're going to we're going to focus on those well I kind of wanted",
    "start": "1346760",
    "end": "1353760"
  },
  {
    "text": "to ask you all like are there any language features you're excited about in JavaScript whether they're being",
    "start": "1353760",
    "end": "1359080"
  },
  {
    "text": "considered by tc39 or not Nick you're nodding what are you what are you thinking about if I let AEL answer I bet",
    "start": "1359080",
    "end": "1365880"
  },
  {
    "text": "she could answer it pretty quickly right I yeah but but I can answer but you go you go the question was at you Nick",
    "start": "1365880",
    "end": "1373159"
  },
  {
    "text": "don't don't redirect I know I know I just I like it better when I'm not the one who brings up Types on this",
    "start": "1373159",
    "end": "1380200"
  },
  {
    "text": "ohes the type prop yeah I'm very excited about the type annotations proposal",
    "start": "1380200",
    "end": "1386600"
  },
  {
    "text": "actually I am too for what it's worth Nick because that means maybe we can stop saying typescript and we can just go back to saying JavaScript you know",
    "start": "1386600",
    "end": "1393000"
  },
  {
    "text": "like I'm I'm like well it's still typescript is it really is it Daniel I don't know well when people have like",
    "start": "1393000",
    "end": "1399840"
  },
  {
    "text": "their JavaScript with types in js. comments I don't know that still seems",
    "start": "1399840",
    "end": "1405120"
  },
  {
    "text": "like typescript but everybody says no it's suddenly not typescript because it's an annotation I mean it's a comment",
    "start": "1405120",
    "end": "1411799"
  },
  {
    "text": "yeah the thing that doesn't it doesn't matter because the most interesting part of typescript is the language server so",
    "start": "1411799",
    "end": "1418120"
  },
  {
    "text": "you'll get that no matter what yeah yeah so type annotations is a stage one proposal that adds syntax to JavaScript",
    "start": "1418120",
    "end": "1426279"
  },
  {
    "text": "where you can put types it's to solve this problem where you know right now you have to choose between either",
    "start": "1426279",
    "end": "1431880"
  },
  {
    "text": "writing types script in case in which case you have to use TSC to strip out the types before running the code or use",
    "start": "1431880",
    "end": "1439360"
  },
  {
    "text": "JS do comments in which case the types are really ugly and then you're missing a bunch of features so it only handles",
    "start": "1439360",
    "end": "1445840"
  },
  {
    "text": "parts of your code and instead the idea is what if we put types in JavaScript",
    "start": "1445840",
    "end": "1452760"
  },
  {
    "text": "but there's a problem type checking is really complicated and also typescript",
    "start": "1452760",
    "end": "1458360"
  },
  {
    "text": "keeps evolving its type checking pretty pretty rapidly in a way that's good it keeps getting better what one might say",
    "start": "1458360",
    "end": "1464679"
  },
  {
    "text": "a breaking release every release you know yeah yeah yeah that's not something",
    "start": "1464679",
    "end": "1470240"
  },
  {
    "text": "we could do in JavaScript we try to be compatible We call we say web compatible we try to not break the web with each",
    "start": "1470240",
    "end": "1476799"
  },
  {
    "text": "release maybe there could be something that's technically a little incompatible but it's not going to break too many",
    "start": "1476799",
    "end": "1483960"
  },
  {
    "text": "websites that's kind of the Criterion and that that's the interesting thing I think with that proposal is kind of",
    "start": "1483960",
    "end": "1489520"
  },
  {
    "text": "where it will go and how it might evolve to handle that to be like the stable",
    "start": "1489520",
    "end": "1494559"
  },
  {
    "text": "JavaScript that we're used to plus like without constraining too much the",
    "start": "1494559",
    "end": "1499840"
  },
  {
    "text": "Ingenuity that typescript might bring to Future releases yeah so the idea is you",
    "start": "1499840",
    "end": "1507200"
  },
  {
    "text": "know because the types don't do anything at runtime you know we we don't actually want it to be that when you load your",
    "start": "1507200",
    "end": "1512760"
  },
  {
    "text": "website the first thing it does is this expensive type check calculation yeah those type checks should happen at build",
    "start": "1512760",
    "end": "1518039"
  },
  {
    "text": "time or they should they happen in your language server and then and then what would it even do it would just like pop",
    "start": "1518039",
    "end": "1523760"
  },
  {
    "text": "up an error message like it's that's not how we do things on the web no it would have Duke pop up",
    "start": "1523760",
    "end": "1529080"
  },
  {
    "text": "like Duke the the Java mascot guy I don't know I'm losing the thread here",
    "start": "1529080",
    "end": "1535399"
  },
  {
    "text": "you mean that little carrot is named Duke I think so the little white guy I can't I thought his name was Duke yeah",
    "start": "1535399",
    "end": "1541600"
  },
  {
    "text": "this is my signal to change the subject so hey y'all we can come back to this topic because it's a stage one thing but",
    "start": "1541600",
    "end": "1546679"
  },
  {
    "text": "yeah I definitely am personally excited about that the other thing I'm excited about is something Michael Rogers is also excited about to the point where he",
    "start": "1546679",
    "end": "1553520"
  },
  {
    "text": "specifically came and asked me to ask you little Dan where are his immutable",
    "start": "1553520",
    "end": "1558960"
  },
  {
    "text": "types yeah he wants uh record tupal like so that's that's the proposal that I'm",
    "start": "1558960",
    "end": "1564000"
  },
  {
    "text": "also very excited about propos you know bringing tupal into JavaScript like that would be amazing yeah Michael Rogers",
    "start": "1564000",
    "end": "1570919"
  },
  {
    "text": "could he's been at dc39 meetings before it would be great to have him back I remember he brought this big box of like",
    "start": "1570919",
    "end": "1577000"
  },
  {
    "text": "very fancy croissants or Oh I thought you were going to say something else for some weird",
    "start": "1577000",
    "end": "1583279"
  },
  {
    "text": "reason dude yeah and he brought B Tre to share to the meeting which is very nice oh nice",
    "start": "1583480",
    "end": "1589120"
  },
  {
    "text": "but yeah records and tles are stage two proposal they let you have immutable",
    "start": "1589120",
    "end": "1594279"
  },
  {
    "text": "data types the idea we had at first was that these would be Primitives so they would be like numbers or strings you can",
    "start": "1594279",
    "end": "1602720"
  },
  {
    "text": "compare them with triple equals they compare by value but we got some feedback from web browsers from",
    "start": "1602720",
    "end": "1609399"
  },
  {
    "text": "JavaScript engines that this would be really complicated to implement and in particular developers seem to assume",
    "start": "1609399",
    "end": "1616559"
  },
  {
    "text": "that they could do comparisons and that they would run in constant time if it's with triple equals but that's really",
    "start": "1616559",
    "end": "1623640"
  },
  {
    "text": "hard or maybe impossible to implement reliably why I wonder well even with",
    "start": "1623640",
    "end": "1628960"
  },
  {
    "text": "strings the comparison is sometimes kind of cached and sometimes linear and it's",
    "start": "1628960",
    "end": "1636080"
  },
  {
    "text": "already a big pain point for developers where they have to kind of figure out how the strings are being optimized to",
    "start": "1636080",
    "end": "1643200"
  },
  {
    "text": "decide how to use them so anyway we have a we have a rough plan the rough plan with records tles is that they would",
    "start": "1643200",
    "end": "1650440"
  },
  {
    "text": "just be objects instead of being Primitives so we would have immutable data types they would be like a special",
    "start": "1650440",
    "end": "1656760"
  },
  {
    "text": "Frozen array special Frozen object and it just wouldn't work to use triple you",
    "start": "1656760",
    "end": "1663519"
  },
  {
    "text": "would have to use some like other equals method interesting and that should be a lot easier for engines to implement",
    "start": "1663519",
    "end": "1669640"
  },
  {
    "text": "while still getting a lot of the meeting a lot of the goals so for example what are we losing with that though what what",
    "start": "1669640",
    "end": "1675080"
  },
  {
    "text": "what are we like one thing that we wouldn't be losing is the ability to use them as keys in maps and sets or at",
    "start": "1675080",
    "end": "1682519"
  },
  {
    "text": "least we would have a version of maps and sets that compare those by value so that's that's one of the big things that",
    "start": "1682519",
    "end": "1687679"
  },
  {
    "text": "people want records and doubles for so that you can have a kind of compound key",
    "start": "1687679",
    "end": "1692799"
  },
  {
    "text": "that was such a political diplomatic answer though like this is like how I know you've been doing standards work for a long time I asked you for the",
    "start": "1692799",
    "end": "1699720"
  },
  {
    "text": "glass half empty and you gave me the glass half full I guess I was just twisting around your words because",
    "start": "1699720",
    "end": "1705200"
  },
  {
    "text": "because I wanted to say that positive point yeah of course of course that makes sense thank you U sorry give me",
    "start": "1705200",
    "end": "1712480"
  },
  {
    "text": "give me the real answer though so you know we'll miss out the trip on the triple equals what will happen is that",
    "start": "1712480",
    "end": "1719640"
  },
  {
    "text": "okay each record in Tuple will be its own object previously it was going to be",
    "start": "1719640",
    "end": "1724880"
  },
  {
    "text": "possible for an engine to uh do this operation called interning or hash",
    "start": "1724880",
    "end": "1730840"
  },
  {
    "text": "consing which is basically whenever you allocate a new record or Tuple it could check is there already a record or tle",
    "start": "1730840",
    "end": "1737640"
  },
  {
    "text": "with this contents if so just return the existing one and that's a pretty cool",
    "start": "1737640",
    "end": "1743760"
  },
  {
    "text": "optimization kind of but really with modern generational garbage collectors the cheap allocations are the ones that",
    "start": "1743760",
    "end": "1750320"
  },
  {
    "text": "are only in the nursery the ones that are shortlived the expensive ones are the ones that are long lived oh Nursery",
    "start": "1750320",
    "end": "1756360"
  },
  {
    "text": "is this I'm learning terms I'm learning new oh sorry this is no this is fascinating so garbage collection it's",
    "start": "1756360",
    "end": "1762880"
  },
  {
    "text": "about how you know in JavaScript you just have objects and then when you stop",
    "start": "1762880",
    "end": "1768120"
  },
  {
    "text": "using them they go away that's because you have a garbage collector that goes around and cleans them up but the",
    "start": "1768120",
    "end": "1773720"
  },
  {
    "text": "garbage collector has its own cost so the strategy that all browser JavaScript",
    "start": "1773720",
    "end": "1779720"
  },
  {
    "text": "engines use these days is called generational garbage collection where they have what they call a nursery so",
    "start": "1779720",
    "end": "1786159"
  },
  {
    "text": "when you allocate a new object it goes in the nursery and then you do collections just on the nursery because",
    "start": "1786159",
    "end": "1793279"
  },
  {
    "text": "it's about what What's called the generational hypothesis that most objects Die Young when they're in the",
    "start": "1793279",
    "end": "1799200"
  },
  {
    "text": "nursery kind of GM terms W this is so this is so um just I didn't realize it",
    "start": "1799200",
    "end": "1804840"
  },
  {
    "text": "was so dark this is actually what people call it I don't know I know I know this is fascinating please keep going just",
    "start": "1804840",
    "end": "1811519"
  },
  {
    "text": "ignore our faces and laugh is that how life works yeah it is Absolut I mean I would say life like 700,000 years ago",
    "start": "1811519",
    "end": "1818519"
  },
  {
    "text": "worked that way like our infant mortality rates have definitely been on the decline for a long time as a human",
    "start": "1818519",
    "end": "1824760"
  },
  {
    "text": "species yeah well let's hope that doesn't happen with your JavaScript program because the thing is when the",
    "start": "1824760",
    "end": "1830559"
  },
  {
    "text": "nursery gets cleaned up the nursery is way smaller than the old generation so",
    "start": "1830559",
    "end": "1836360"
  },
  {
    "text": "you really want the collections to happen just within the nursery if you fill up the old generation then you have to do a full GC which takes more time so",
    "start": "1836360",
    "end": "1843559"
  },
  {
    "text": "anyway all this means that interning is not something that you always want to do",
    "start": "1843559",
    "end": "1848640"
  },
  {
    "text": "you want to do it sometimes when something's really going to get reused or really going to get compared and",
    "start": "1848640",
    "end": "1853720"
  },
  {
    "text": "interning is interning is the optimization where you reuse the",
    "start": "1853720",
    "end": "1859279"
  },
  {
    "text": "allocation okay so if anyone ever told you hey you should really use like a",
    "start": "1859279",
    "end": "1864600"
  },
  {
    "text": "free pool and reuse objects to make your program faster that might be true but a",
    "start": "1864600",
    "end": "1870799"
  },
  {
    "text": "lot of the time it's not true because this generational garbage collection yeah and thank you for reminding me why",
    "start": "1870799",
    "end": "1875880"
  },
  {
    "text": "I enjoy working with highle languages it's because of this yeah that's the whole point you don't have to think",
    "start": "1875880",
    "end": "1881600"
  },
  {
    "text": "about like I don't want to think about it I got bigger problems and like I got 99 problems in garbage collection 81 you",
    "start": "1881600",
    "end": "1887440"
  },
  {
    "text": "know what I mean like I can tell you that much I mean it is and it isn't you know what I mean it's the meta problem",
    "start": "1887440",
    "end": "1893080"
  },
  {
    "text": "like right but it's like not the not the day-to-day problem but yeah Chris you've been making faces this whole time and",
    "start": "1893080",
    "end": "1898360"
  },
  {
    "text": "I'm like super curious to like click into that so you have anything to share are you calling on me like my teacher",
    "start": "1898360",
    "end": "1905399"
  },
  {
    "text": "like yeah give me a feature oh no no not give me you're in the nurser Chris no I mean I want give",
    "start": "1905399",
    "end": "1912159"
  },
  {
    "text": "me a feature request okay Chris anything to share no",
    "start": "1912159",
    "end": "1919279"
  },
  {
    "text": "I can do it that way I can I can say it in that voice if you'd like all right no so the thing so what I'm I'm excited",
    "start": "1919279",
    "end": "1925360"
  },
  {
    "text": "about is like more helper methods on maps and sets because every time I want",
    "start": "1925360",
    "end": "1933679"
  },
  {
    "text": "I got a map oh I want to filter all this well now I have to change it back to an array and do the filter or just you know",
    "start": "1933679",
    "end": "1940399"
  },
  {
    "text": "stuff like that yeah I would love those those helper methods because I i' use them all the time and I was really happy",
    "start": "1940399",
    "end": "1946440"
  },
  {
    "text": "about group by until I used it and it didn't do what I thought it should do oh",
    "start": "1946440",
    "end": "1951880"
  },
  {
    "text": "that's that's good feedback for Dan can you tell us what is group ey and then what did you expected to do I kind of would have wanted the feedback earlier",
    "start": "1951880",
    "end": "1959480"
  },
  {
    "text": "uh damn it yeah so wait let's talk about the map and set one and then talk about",
    "start": "1959480",
    "end": "1964880"
  },
  {
    "text": "group I so I have good news and bad news new methods are coming to sets for Union",
    "start": "1964880",
    "end": "1970000"
  },
  {
    "text": "and intersection and they're not coming to Maps the idea was that the this is a",
    "start": "1970000",
    "end": "1976720"
  },
  {
    "text": "stage three proposal set methods and it's focused around things like Union and intersection for things like",
    "start": "1976720",
    "end": "1983720"
  },
  {
    "text": "filtering you could do that uh both for maps and sets you can get the iterator",
    "start": "1983720",
    "end": "1990159"
  },
  {
    "text": "by doing Dot values or do entries uh or just the symbol iterator and then you",
    "start": "1990159",
    "end": "1996159"
  },
  {
    "text": "can use the iterator helpers proposal at stage three you can do do filter on any iterator actually there's a new",
    "start": "1996159",
    "end": "2002240"
  },
  {
    "text": "convenience method iterator do from you can put that on the map and then do filter on the result you could do map it",
    "start": "2002240",
    "end": "2009240"
  },
  {
    "text": "is this sync iterator helpers sync iterator helpers yeah it's at stage three there was a web compatibility",
    "start": "2009240",
    "end": "2015639"
  },
  {
    "text": "issue that forced it to be a little bit delayed iterator helper should let you filter over a maper set and if you want",
    "start": "2015639",
    "end": "2023360"
  },
  {
    "text": "to Union or intersection sets then set methods do that we had huge debates over",
    "start": "2023360",
    "end": "2029840"
  },
  {
    "text": "these there are so many details to work out and a lot of this is about kind of what are the conventions that we're",
    "start": "2029840",
    "end": "2035880"
  },
  {
    "text": "going to use going forward when we add things to the JavaScript standard Library so you know these are moderately",
    "start": "2035880",
    "end": "2042440"
  },
  {
    "text": "big additions but I hope that they'll pave the way for even more things that",
    "start": "2042440",
    "end": "2047880"
  },
  {
    "text": "you don't have to use an npm package for something as simple as filtering over an",
    "start": "2047880",
    "end": "2053760"
  },
  {
    "text": "iterator or you know Union in two sets or group by well what was wrong with",
    "start": "2053760",
    "end": "2060079"
  },
  {
    "text": "Group by by the way how didn't not do what you wanted I don't remember H well",
    "start": "2060079",
    "end": "2065878"
  },
  {
    "text": "yeah that that's not helpful Chris object. Group by and map. groupby",
    "start": "2065879",
    "end": "2071480"
  },
  {
    "text": "depending on whether you want it to be like strings as object keys or keys in a map yeah you know and Daniel actually",
    "start": "2071480",
    "end": "2077878"
  },
  {
    "text": "this is a good time to ask this question which is like you know you know I know there's a lot of implementers on the um",
    "start": "2077879",
    "end": "2085240"
  },
  {
    "text": "on the committee but do you ever kind of just for fresh eyes right because you",
    "start": "2085240",
    "end": "2090679"
  },
  {
    "text": "there is obviously bias amongst everyone in the committee like you know throw things at folks like Chris or other",
    "start": "2090679",
    "end": "2096919"
  },
  {
    "text": "people just to kind of say like does this work and make sense like for you right I'm just curious we try I mean",
    "start": "2096919",
    "end": "2104480"
  },
  {
    "text": "everything's open on on GitHub for people to comment and people who maintain proposals or championing",
    "start": "2104480",
    "end": "2111240"
  },
  {
    "text": "proposals definitely read those comments and respond to them may maybe sometimes it takes them a while but General people",
    "start": "2111240",
    "end": "2117560"
  },
  {
    "text": "take that seriously also a lot of us go to to conferences to speak about",
    "start": "2117560",
    "end": "2123280"
  },
  {
    "text": "proposals or just to learn from different developers I I just came back from from well I saw you at noon for you",
    "start": "2123280",
    "end": "2130599"
  },
  {
    "text": "that was great Ireland that was so fun and I was talking about one of the proposals decent context and that's a",
    "start": "2130599",
    "end": "2137440"
  },
  {
    "text": "good way to learn from developers but yeah this this kind of podcast is good also generally we're we're trying to get",
    "start": "2137440",
    "end": "2143960"
  },
  {
    "text": "the feedback before a certain point before stage 2.7 or stage three because",
    "start": "2143960",
    "end": "2150480"
  },
  {
    "text": "after a certain point in time we just have to kind of make decisions and move forward right right so that always makes",
    "start": "2150480",
    "end": "2156839"
  },
  {
    "text": "it hard when when it's not clear when the point is that you should give feedback before and so I'm always trying",
    "start": "2156839",
    "end": "2164599"
  },
  {
    "text": "to do Outreach to encourage people to to give feedback earlier in the process we've also had some specific Outreach",
    "start": "2164599",
    "end": "2171000"
  },
  {
    "text": "mechanisms like I created a couple calls to talk to tools authors and also",
    "start": "2171000",
    "end": "2177760"
  },
  {
    "text": "framework authors and some JavaScript Educators if you're interested in getting involved in those please write",
    "start": "2177760",
    "end": "2184800"
  },
  {
    "text": "me through any means of communication you could you could see on my GitHub page few few ways that you could contact",
    "start": "2184800",
    "end": "2191200"
  },
  {
    "text": "me but yeah we'd always like more participation in those things I retracked my displeasure with group buy",
    "start": "2191200",
    "end": "2197839"
  },
  {
    "text": "I think it was user error okay that's good because I love group buy for what",
    "start": "2197839",
    "end": "2202880"
  },
  {
    "text": "it's worth I'm like it it does exactly what I wanted to do and have I have wish we had that I when I was writing more",
    "start": "2202880",
    "end": "2208920"
  },
  {
    "text": "code I wish I had that you know what I'm saying I in fact just had to write a rapper because node still doesn't have it well that's weird because node just",
    "start": "2208920",
    "end": "2215680"
  },
  {
    "text": "it's the engine I mean node doesn't do like yeah yeah but it it just came out it's oh it's just came it's probably",
    "start": "2215680",
    "end": "2221520"
  },
  {
    "text": "going to be until node 22 yeah you'll have to wait until then to to get it yeah until it's in V8 like you know and",
    "start": "2221520",
    "end": "2228880"
  },
  {
    "text": "and node pulls in the latest version of V8 yeah I don't know if it's going to make it into node 20 well no it's",
    "start": "2228880",
    "end": "2234280"
  },
  {
    "text": "already shipped No No's on 21 right exactly so I don't think it's going to be a node 20 yeah yeah yeah so y'all um",
    "start": "2234280",
    "end": "2241119"
  },
  {
    "text": "really appreciate that and if you're listening everyone basically well what I hear when Daniel says feedback early and",
    "start": "2241119",
    "end": "2246640"
  },
  {
    "text": "and whatnot is like hey if you're going to be paying attention to the tc39 repos great like if you're going to watch",
    "start": "2246640",
    "end": "2251880"
  },
  {
    "text": "anything watch like those are good repos to watch if you're really interested in seeing what's new with the language specifically the proposals repo but you",
    "start": "2251880",
    "end": "2259400"
  },
  {
    "text": "know anything that's listed in stage one and two like those are really an active discussion and so if you have feedback",
    "start": "2259400",
    "end": "2265319"
  },
  {
    "text": "or if you want to jump in like they work in the open in intentionally because they want engagement and feedback from",
    "start": "2265319",
    "end": "2271040"
  },
  {
    "text": "the community so please like go check it out we'll put all these links in the notes but you want to go to the tc39",
    "start": "2271040",
    "end": "2277040"
  },
  {
    "text": "proposal repo and yeah look at look at like early stage proposals and and feel free to chime in yeah I want to",
    "start": "2277040",
    "end": "2282359"
  },
  {
    "text": "especially encourage people to look at stage two proposals because those are the ones that are under the most strong",
    "start": "2282359",
    "end": "2288440"
  },
  {
    "text": "active development that are kind of the furthest along and most Concrete where we would really like to work out all the",
    "start": "2288440",
    "end": "2294839"
  },
  {
    "text": "details yeah and thanks for sharing that so back to my list because I want to go 4 32 1 we kind of jumped all over the",
    "start": "2294839",
    "end": "2302720"
  },
  {
    "text": "place so stage four promise. with resolvers so let's",
    "start": "2302720",
    "end": "2308440"
  },
  {
    "text": "talk about that what is that and Dan like we want you to like explain everything to us like we're five okay",
    "start": "2308440",
    "end": "2314359"
  },
  {
    "text": "and actually I realized we we're talking about tupal and I don't even know if everybody who's listening knows what a tupal is so we'll we'll if you're",
    "start": "2314359",
    "end": "2320319"
  },
  {
    "text": "listening we'll go back to that we'll come back to that topic just hang tight okay but for now promise. with resolvers",
    "start": "2320319",
    "end": "2327240"
  },
  {
    "text": "kesos so promise. with resolvers is it's something that my co-worker Peter cleta",
    "start": "2327240",
    "end": "2332599"
  },
  {
    "text": "in in Bloomberg did it was actually his first project in dc39 so this is a",
    "start": "2332599",
    "end": "2338560"
  },
  {
    "text": "little function that makes it easier to construct promises did you say Jason",
    "start": "2338560",
    "end": "2344240"
  },
  {
    "text": "Peter cletcher okay okay got it sorry oh yeah there's also a Jason Williams in my team Who's involved in a lot of spec",
    "start": "2344240",
    "end": "2350800"
  },
  {
    "text": "things as well I got to meet them um at a performance now actually this summer",
    "start": "2350800",
    "end": "2356319"
  },
  {
    "text": "or not this summer this fall yeah which was another amazing conference that I went to yeah he was there there's a lot of lot of cool stuff coming out of web",
    "start": "2356319",
    "end": "2363000"
  },
  {
    "text": "perf working group I wonder if you might want to talk about that sometime on this show yeah for sure we have I'm telling",
    "start": "2363000",
    "end": "2368680"
  },
  {
    "text": "you man I'm booking shows into like March right now like it's kind of ridiculous so we might have to start",
    "start": "2368680",
    "end": "2374960"
  },
  {
    "text": "publishing two episodes a week to get through everything next year so we'll see we'll see anyways um so for for",
    "start": "2374960",
    "end": "2382359"
  },
  {
    "text": "promise. with resolvers right now the promise Constructor when you do new promise you have to pass it a function",
    "start": "2382359",
    "end": "2388640"
  },
  {
    "text": "and then that function is passed to other functions for resolve and reject",
    "start": "2388640",
    "end": "2393720"
  },
  {
    "text": "and then you're supposed to launch the stuff within the function you're passing it's called a revealing Constructor and",
    "start": "2393720",
    "end": "2400319"
  },
  {
    "text": "then the whole thing returns a promise I think the idea behind this was that it would encourage people to use promises",
    "start": "2400319",
    "end": "2406720"
  },
  {
    "text": "the right way or something in particular if you throw an exception within the the",
    "start": "2406720",
    "end": "2412520"
  },
  {
    "text": "function within that call back that you're passing to the promise Constructor then it'll get caught and",
    "start": "2412520",
    "end": "2417680"
  },
  {
    "text": "the thing will be rejected rather than you know throwing an exception because you're not supposed to when you have a",
    "start": "2417680",
    "end": "2423240"
  },
  {
    "text": "function that returns a promise it's supposed to always return a promise if it has to throw to return a rejection",
    "start": "2423240",
    "end": "2429319"
  },
  {
    "text": "anyway that was lost on I would say 99.9% of people the the rationale for",
    "start": "2429319",
    "end": "2436560"
  },
  {
    "text": "that unfortunately and instead it just just seems like extra work you have to",
    "start": "2436560",
    "end": "2442440"
  },
  {
    "text": "save off the resolve and reject functions that you could call them later and this new form promised out with",
    "start": "2442440",
    "end": "2450040"
  },
  {
    "text": "resolvers is just a simple function that you call it doesn't take any arguments it returns you an object with three",
    "start": "2450040",
    "end": "2456119"
  },
  {
    "text": "named properties the problem the resolve function and the reject function and it's just just saves you like an extra",
    "start": "2456119",
    "end": "2464520"
  },
  {
    "text": "five lines of code then everyone has to keep writing over and over and over again right right right no absolutely",
    "start": "2464520",
    "end": "2469760"
  },
  {
    "text": "it's so simple like it it's it's kind of like du right like why didn't we do this from the beginning but I think for me we",
    "start": "2469760",
    "end": "2476400"
  },
  {
    "text": "didn't do this from the beginning because we didn't have like we had promised before we had the ability to like destructure in this way and like",
    "start": "2476400",
    "end": "2483200"
  },
  {
    "text": "const and like all these things kind of landed at different times destruction did come out in es6 and Promises came",
    "start": "2483200",
    "end": "2488480"
  },
  {
    "text": "out in es6 but but but because they were came out at the same time I feel like that's not conducive to the to one thing",
    "start": "2488480",
    "end": "2494480"
  },
  {
    "text": "relying on the other right no I think it had more to do with people at the time",
    "start": "2494480",
    "end": "2499560"
  },
  {
    "text": "felt very strongly about this property that you shouldn't be using the resolve and reject function for very much and",
    "start": "2499560",
    "end": "2506640"
  },
  {
    "text": "that this would kind of hide them away and now we've all realized well the these things just aren't going away oh",
    "start": "2506640",
    "end": "2513040"
  },
  {
    "text": "yeah no they're super important that was one of the big things that I I had when actual promises came to the language uh",
    "start": "2513040",
    "end": "2520280"
  },
  {
    "text": "because it didn't have things like this and so it was kind of you know I had to do this extra five lines or whatever",
    "start": "2520280",
    "end": "2525880"
  },
  {
    "text": "whereas I'm I'm from the old world where dojo defs exist and they were awesome and did basically the same thing yeah we",
    "start": "2525880",
    "end": "2532800"
  },
  {
    "text": "were debating calling this thing promised not deferred oh yeah but really that only made sense to people like who",
    "start": "2532800",
    "end": "2539079"
  },
  {
    "text": "are around back then it only makes sense from a historical perspective actually when I was on the V8 team I removed",
    "start": "2539079",
    "end": "2546480"
  },
  {
    "text": "promise. deferred from v8's promise implementation because that was one of the that was one of the extra outer",
    "start": "2546480",
    "end": "2553160"
  },
  {
    "text": "speec things that V8 had and the goal was to to not do that kind of thing oh",
    "start": "2553160",
    "end": "2558440"
  },
  {
    "text": "yeah that's interesting yeah I didn't even know I didn't even know that kind of stuff happened in modern times like",
    "start": "2558440",
    "end": "2564079"
  },
  {
    "text": "post browser Wars where like there were things that are nonspec adherent that",
    "start": "2564079",
    "end": "2569280"
  },
  {
    "text": "are kind of sugared on like that's surprising to hear well it's it's because there were these active debates",
    "start": "2569280",
    "end": "2575599"
  },
  {
    "text": "in tc39 different people actually different Google employees working at the same company had different points of",
    "start": "2575599",
    "end": "2582119"
  },
  {
    "text": "view and just sort of went with it post es6 we're being a lot more organized",
    "start": "2582119",
    "end": "2587559"
  },
  {
    "text": "about that of course that makes sense Chris you had something to to say yeah so I mean it came out in 2015 so is it",
    "start": "2587559",
    "end": "2596000"
  },
  {
    "text": "2023 still yeah anyway MH however many years that is I can't I can't count them",
    "start": "2596000",
    "end": "2602960"
  },
  {
    "text": "in my head right now however many years later I still I still feel naughty if I",
    "start": "2602960",
    "end": "2609040"
  },
  {
    "text": "save those resolve and reject functions me too and I always feel like I'm doing",
    "start": "2609040",
    "end": "2614400"
  },
  {
    "text": "something wrong because we like I guess somewhere along the way we learned that you shouldn't do that and I don't know",
    "start": "2614400",
    "end": "2621480"
  },
  {
    "text": "where that came from well I mean there should be some other API that returns a",
    "start": "2621480",
    "end": "2626800"
  },
  {
    "text": "promise and then you should just do then but the the cas is where you need to save it off where it's legitimate to do",
    "start": "2626800",
    "end": "2633319"
  },
  {
    "text": "so is when you have a an API that has a back or or an event or something like",
    "start": "2633319",
    "end": "2639640"
  },
  {
    "text": "that you shouldn't really be using the resolve and reject functions when you're just dealing with a bunch of other",
    "start": "2639640",
    "end": "2646359"
  },
  {
    "text": "promises but yeah I think that message was was marketed a lot probably the new generation of programmers hasn't even",
    "start": "2646359",
    "end": "2652480"
  },
  {
    "text": "heard it and it didn't it didn't fully make sense because nobody fully followed through on making promise-based apis for",
    "start": "2652480",
    "end": "2659440"
  },
  {
    "text": "everything and we have the node FS promise apis we have on the web new apis",
    "start": "2659440",
    "end": "2666440"
  },
  {
    "text": "are made with prom but in general nobody went back and made promise-based apis for all the old things right I think we",
    "start": "2666440",
    "end": "2672800"
  },
  {
    "text": "probably should do that like with set time out at least oh my god Set timeout as a promise would be game changing",
    "start": "2672800",
    "end": "2679200"
  },
  {
    "text": "there's always a one it would make you feel so much it would make you yeah it would always make you feel so much less dirty about using it like you know just",
    "start": "2679200",
    "end": "2685200"
  },
  {
    "text": "a little less like not too much you know I set never feel good about using I never feel good about set time mus I I",
    "start": "2685200",
    "end": "2691880"
  },
  {
    "text": "just because there's it just for me there's some indeterminism that I feel like I'm trying to smooth over whenever",
    "start": "2691880",
    "end": "2699400"
  },
  {
    "text": "I use it quite frankly well like I you know yeah I'm bringing order to the",
    "start": "2699400",
    "end": "2704480"
  },
  {
    "text": "indeterminism but like I I don't like it does that make sense yeah yeah you don't",
    "start": "2704480",
    "end": "2710000"
  },
  {
    "text": "want to use H time out to like avoid a a race condition or something you got it",
    "start": "2710000",
    "end": "2715480"
  },
  {
    "text": "you got it but that's that's usually when I'm doing it you know when I don't have time to fix the real problem just",
    "start": "2715480",
    "end": "2721079"
  },
  {
    "text": "got to Band-Aid it over you know but you know hey man that's called shipping to production like that's life okay so we",
    "start": "2721079",
    "end": "2727280"
  },
  {
    "text": "talked about promise. resolvers that's stage four so that is coming to a browser near you okay yeah so there's a lot of stage",
    "start": "2727280",
    "end": "2734839"
  },
  {
    "text": "four proposals and generally in es 2023 we have a bunch of standard Library",
    "start": "2734839",
    "end": "2740160"
  },
  {
    "text": "proposals so we have a bunch of new methods that are being added to the existing JavaScript classes that just",
    "start": "2740160",
    "end": "2746520"
  },
  {
    "text": "make them work a little bit better we have a bunch of these in stage three as well I mentioned set methods and",
    "start": "2746520",
    "end": "2752599"
  },
  {
    "text": "iterator helpers uh also in stage three is the temporal proposal so temporal",
    "start": "2752599",
    "end": "2758680"
  },
  {
    "text": "yeah hold on I I I want to stick with stage four so I don't want to I don't think we have time to go through all of them though oh we don't oh no I wanted",
    "start": "2758680",
    "end": "2765200"
  },
  {
    "text": "to talk about array grouping because I do I I do think array grouping and error cause are interesting okay uh and",
    "start": "2765200",
    "end": "2770280"
  },
  {
    "text": "there's also a theme there's also a theme there right which is like maybe we're kind of like we we're improving",
    "start": "2770280",
    "end": "2775839"
  },
  {
    "text": "our standard Library within JavaScript sort of right like so array grouping real quick so regrouping this is you",
    "start": "2775839",
    "end": "2782800"
  },
  {
    "text": "know kind of like the low Dash group group by Method or is it called group I can't remember oh yeah low Dash is",
    "start": "2782800",
    "end": "2788720"
  },
  {
    "text": "underscore Group by if I'm not mistaken like I think it was oh yeah so yeah we",
    "start": "2788720",
    "end": "2794160"
  },
  {
    "text": "made those as methods on object and map so at first we thought okay array instances will just have a group by",
    "start": "2794160",
    "end": "2800359"
  },
  {
    "text": "Method you'll have an array you'll do do group or do group by or something like that and then it'll give you you know",
    "start": "2800359",
    "end": "2808319"
  },
  {
    "text": "the output of the low Dash method and we wanted two versions one version that outputs an object like low Dash does and",
    "start": "2808319",
    "end": "2813839"
  },
  {
    "text": "one version that outputs a map in case you don't have string keys in case you're comparing something else",
    "start": "2813839",
    "end": "2819680"
  },
  {
    "text": "so the problem was we kept having trouble coming up with a name it's really hard to add names to methods on",
    "start": "2819680",
    "end": "2828000"
  },
  {
    "text": "array because lots of stuff like type checks it's not just because it exist",
    "start": "2828000",
    "end": "2833040"
  },
  {
    "text": "already sometimes people add extra methods to arrays or sometimes you mean prototype pollution yeah prototype",
    "start": "2833040",
    "end": "2838920"
  },
  {
    "text": "pollution or sometimes they're not even doing that there's a way to do it safely yeah kind of sometimes people check",
    "start": "2838920",
    "end": "2846000"
  },
  {
    "text": "whether something has like a DOT group property to say oh yeah if it has a DOT group property then it's an instance of",
    "start": "2846000",
    "end": "2851640"
  },
  {
    "text": "my class otherwise it's an array so then if you add. group to arrays suddenly",
    "start": "2851640",
    "end": "2857240"
  },
  {
    "text": "everything messes up and that actually happened in this case so we decided yeah",
    "start": "2857240",
    "end": "2862280"
  },
  {
    "text": "we're not going to add more methods to erase this just too bad too terrible because what happened was browsers",
    "start": "2862280",
    "end": "2867319"
  },
  {
    "text": "actually implemented it they shipped it and then they found it breaks lots of websites so it's just object and map",
    "start": "2867319",
    "end": "2874240"
  },
  {
    "text": "even though the proposal is called array grouping so why why did the proposal name not change uh well it's still",
    "start": "2874240",
    "end": "2879760"
  },
  {
    "text": "groups arrays well not groups all iterables so it's kind of more General oh iterables okay I see that makes sense",
    "start": "2879760",
    "end": "2886359"
  },
  {
    "text": "I mean because it used to be an array method and now it's a now because it's an argument it's just going to accept",
    "start": "2886359",
    "end": "2891599"
  },
  {
    "text": "any iterable yeah that makes sense and then the low Dash Group by which does the pretty much the exact same thing so",
    "start": "2891599",
    "end": "2897119"
  },
  {
    "text": "now this is part of the language yay but it has 850,000 downloads a week and so I",
    "start": "2897119",
    "end": "2903720"
  },
  {
    "text": "this is where I wish like we npm had like this memo feature where it's like by the way this package can now be",
    "start": "2903720",
    "end": "2909520"
  },
  {
    "text": "deleted like it' be cool if we had this broadcast you know honestly like low Dash being deleted is is kind of a long",
    "start": "2909520",
    "end": "2916440"
  },
  {
    "text": "way off no no no well no this package this package specifically like this you know hopefully you're downloading just",
    "start": "2916440",
    "end": "2921640"
  },
  {
    "text": "that one package and not all of low Dash you can use npm deprecate to mention it",
    "start": "2921640",
    "end": "2926839"
  },
  {
    "text": "on that one package whoever is yeah but I meant like as a community I wish we had like you know just like a weekly",
    "start": "2926839",
    "end": "2933880"
  },
  {
    "text": "Community broadcast like you know just like every body you know yeah yeah that",
    "start": "2933880",
    "end": "2938960"
  },
  {
    "text": "that kind of would be nice in some ways the good thing about JavaScript maintaining compatibility is that you",
    "start": "2938960",
    "end": "2945559"
  },
  {
    "text": "can keep using low Dash and we're not going to break it correct and you just have another option that's kind of",
    "start": "2945559",
    "end": "2951040"
  },
  {
    "text": "easier it's kind of made a little bit better right uh but it's just an option but this is not like in Python 3 means",
    "start": "2951040",
    "end": "2958799"
  },
  {
    "text": "you have to do this big upgrade process I mean maybe esm is brings that but at",
    "start": "2958799",
    "end": "2965599"
  },
  {
    "text": "least Group by doesn't doesn't come with that yeah I know that makes sense all right so moving on I just because I I",
    "start": "2965599",
    "end": "2971000"
  },
  {
    "text": "know we have a lot to cover um error cause yeah error cause is when you call",
    "start": "2971000",
    "end": "2978839"
  },
  {
    "text": "the error Constructor you can pass an extra cause so this happens for example",
    "start": "2978839",
    "end": "2984400"
  },
  {
    "text": "if you have a function that calls some other function then that inner function throws an exception and then the outer",
    "start": "2984400",
    "end": "2991520"
  },
  {
    "text": "function catches it and it wants to explain sort of at a higher level what's going on but also you want to point to",
    "start": "2991520",
    "end": "2998559"
  },
  {
    "text": "the inner thing so that you can see more details about what's going on so error cause lets you bring those both together",
    "start": "2998559",
    "end": "3005520"
  },
  {
    "text": "just based on the standard error Constructor so you can use the dot cause property to figure this out what's like",
    "start": "3005520",
    "end": "3011559"
  },
  {
    "text": "the the semantic difference between that and an aggregate error that contains one error uh well aggregate errors they're",
    "start": "3011559",
    "end": "3019119"
  },
  {
    "text": "like all on the same level and error cause is like you have one that's like",
    "start": "3019119",
    "end": "3024440"
  },
  {
    "text": "the main error and the other one is the cause oh okay I'm using aggregate error",
    "start": "3024440",
    "end": "3030960"
  },
  {
    "text": "wrong ah thank you well whatever works yeah no that this is pretty cool and I I",
    "start": "3030960",
    "end": "3038079"
  },
  {
    "text": "love this because I think for me Air Management and like just the absorbability kind of the semantics",
    "start": "3038079",
    "end": "3044280"
  },
  {
    "text": "around that like just gets so much nicer with this and it's just easy to kind of abstract into a nice little helper and",
    "start": "3044280",
    "end": "3051000"
  },
  {
    "text": "just like standardizes throughout your whole code base and then all of a sudden like you just it's just it's nice so",
    "start": "3051000",
    "end": "3056839"
  },
  {
    "text": "just props to whoever pushed this like I think it's I think it's really great so",
    "start": "3056839",
    "end": "3061880"
  },
  {
    "text": "thank you and it's now stage four so yay very exciting so we can move on to stage three but you have something more to say",
    "start": "3061880",
    "end": "3068480"
  },
  {
    "text": "on this Dani all the stage four proposals when January comes then they get rolled into the new JavaScript",
    "start": "3068480",
    "end": "3074880"
  },
  {
    "text": "standard after then things that happened during the year of 2023 don't actually",
    "start": "3074880",
    "end": "3080000"
  },
  {
    "text": "make it into es 2023 okay so this is'll be officially part of 24 oh sorry yes",
    "start": "3080000",
    "end": "3085799"
  },
  {
    "text": "this is all ES 24 so exciting that's a big",
    "start": "3085799",
    "end": "3092280"
  },
  {
    "text": "deal what up nerds Jared here if you listened to our react Jam episode at the",
    "start": "3103319",
    "end": "3109079"
  },
  {
    "text": "end of October you already know that I judged their fall competition and had a great time doing it so many cool games",
    "start": "3109079",
    "end": "3115760"
  },
  {
    "text": "rock paper shoot was my favorite a modern take on two Classics rock paper scissors meets pong if you missed the",
    "start": "3115760",
    "end": "3122960"
  },
  {
    "text": "fall competition no worries because the winter react Jam is taking place December 26th through January 7th and",
    "start": "3122960",
    "end": "3130119"
  },
  {
    "text": "yes I will be judging once again so get involved it's a ton of fun and there's cash prizes too learn more at react",
    "start": "3130119",
    "end": "3138440"
  },
  {
    "text": "jam.com once again that's react jam.com let's do",
    "start": "3138440",
    "end": "3145000"
  },
  {
    "text": "this all right so moving on to stage three so",
    "start": "3145520",
    "end": "3151880"
  },
  {
    "text": "now we're getting into kind of like stuff that's either like very close to officially shipping or still in",
    "start": "3151880",
    "end": "3157760"
  },
  {
    "text": "discussion like stage two and one so let's talk about decorators cuz this has just been like when this thing",
    "start": "3157760",
    "end": "3163280"
  },
  {
    "text": "officially gets to stage 4 I think there's going to be like a worldwide JavaScript party like led by Pitbull you",
    "start": "3163280",
    "end": "3169319"
  },
  {
    "text": "know Mr 305 like honestly because what ecma standard is Pitbull",
    "start": "3169319",
    "end": "3175440"
  },
  {
    "text": "305 who is Pitbull I I'm missing these um you're I mean if you're if I have to",
    "start": "3175440",
    "end": "3182440"
  },
  {
    "text": "tell you who is Pitbull yeah the rest of this podcast is basically going to have to be dedicated to it so I'll leave that",
    "start": "3182440",
    "end": "3188040"
  },
  {
    "text": "for an offline discussion the next time I see you in person okay but um point being is I think everyone is going to",
    "start": "3188040",
    "end": "3194280"
  },
  {
    "text": "celebrate because this this baby has been in the can for a long time so so",
    "start": "3194280",
    "end": "3200000"
  },
  {
    "text": "what's going on yeah decator started all the way back in 2014 based on Ron buckton and Yehuda cats working together",
    "start": "3200000",
    "end": "3207240"
  },
  {
    "text": "on an initial thing that got implemented in typ scripts and Babel with some minor differences but then based on feedback",
    "start": "3207240",
    "end": "3214720"
  },
  {
    "text": "it evolved over the years in committee pretty slowly there was a lot of opposition from engines initially",
    "start": "3214720",
    "end": "3221319"
  },
  {
    "text": "because initial versions were kind of too dynamic they were going to be too hard to optimize and actually Michael",
    "start": "3221319",
    "end": "3229040"
  },
  {
    "text": "westr of of mobex he he benchmarked the the final signals and found that they",
    "start": "3229040",
    "end": "3234559"
  },
  {
    "text": "were 30% faster than the than the original signals so we did actually achieve some performance Improvement in",
    "start": "3234559",
    "end": "3240799"
  },
  {
    "text": "practice anyway they went through a lot of changes over the years eventually Yuda dropped out and then I was working",
    "start": "3240799",
    "end": "3247160"
  },
  {
    "text": "on that proposal also with with Ron and then uh I dropped out and Christen hula",
    "start": "3247160",
    "end": "3254520"
  },
  {
    "text": "Garrett got involved working with Ron who has an amazing amount of of",
    "start": "3254520",
    "end": "3259799"
  },
  {
    "text": "constancy but this was all together with a broader group of people including Nicolo rialo and others who have these",
    "start": "3259799",
    "end": "3266880"
  },
  {
    "text": "regular calls so we went through all these different iterations of what decorators should be and eventually",
    "start": "3266880",
    "end": "3273559"
  },
  {
    "text": "settled on something that works both from an expressiveness standpoint in terms of letting decorators Express",
    "start": "3273559",
    "end": "3280640"
  },
  {
    "text": "things that we hope they would Express for me personally I really wanted it to be that you could decorate a private",
    "start": "3280640",
    "end": "3287319"
  },
  {
    "text": "field or method and have that work which didn't work in the original version and for for implementers make sure that it",
    "start": "3287319",
    "end": "3293839"
  },
  {
    "text": "was kind of consistent enough to be implemented fast and working with framework authors we ensured that it met",
    "start": "3293839",
    "end": "3300599"
  },
  {
    "text": "the various different needs that that Frameworks had one of the things that we fixed up at the last minute was for a",
    "start": "3300599",
    "end": "3307240"
  },
  {
    "text": "while we were going to make it so that the if you have an exported class you have a class decorator then the export",
    "start": "3307240",
    "end": "3314319"
  },
  {
    "text": "initially came before well initially like in typescript and the first version of Babel first you had The Decorator and",
    "start": "3314319",
    "end": "3320920"
  },
  {
    "text": "then you had the export keyword and then it got switched actually initially by accident but but then some people on the",
    "start": "3320920",
    "end": "3327440"
  },
  {
    "text": "committee really liked it the order so you would put export and then The Decorator and finally we decided at the",
    "start": "3327440",
    "end": "3334520"
  },
  {
    "text": "11th Hour that you should be able to use either order because people were people were pretty worried about the difficulty",
    "start": "3334520",
    "end": "3341559"
  },
  {
    "text": "upgrading from one version to the other it's going to require a lot of changes in documentation and such maybe it",
    "start": "3341559",
    "end": "3348880"
  },
  {
    "text": "wasn't a big problem but it was It was kind of nice that we were able to take the the feedback from The Decorator",
    "start": "3348880",
    "end": "3355079"
  },
  {
    "text": "community and and make sure that the proposal you know listen to it anyway now it's at stage three it's implemented",
    "start": "3355079",
    "end": "3361480"
  },
  {
    "text": "in typescript there's some implementations in progress in engines but I think they're somewhat early so I",
    "start": "3361480",
    "end": "3368799"
  },
  {
    "text": "wouldn't expect that that's going to be usable directly in your browser tomorrow",
    "start": "3368799",
    "end": "3374319"
  },
  {
    "text": "but in the next couple years probably but it's in the works yeah in the next couple of years wow even the",
    "start": "3374319",
    "end": "3379640"
  },
  {
    "text": "implementation that's amazing so it's it's it's taking a while uh I understand",
    "start": "3379640",
    "end": "3384960"
  },
  {
    "text": "why I mean I I think implementers were the loudest to contest the like why this",
    "start": "3384960",
    "end": "3390200"
  },
  {
    "text": "was going to be really hard to do right if I remember correctly like the first go around the thing is they always gave",
    "start": "3390200",
    "end": "3395240"
  },
  {
    "text": "objective reasons for what was hard about it you know you can't just stand up and give say ah and say I I don't",
    "start": "3395240",
    "end": "3402520"
  },
  {
    "text": "want to you have to give reasons for what you're doing you're not my real dad yeah got it okay so that's that's",
    "start": "3402520",
    "end": "3411280"
  },
  {
    "text": "what helps us keep working and keep being able to make decisions that we really share where able to really even",
    "start": "3411280",
    "end": "3417640"
  },
  {
    "text": "though we're coming from different points of view able to to work these things out right no that's that's really",
    "start": "3417640",
    "end": "3423720"
  },
  {
    "text": "cool so decorator stage three coming soonish big on is but the shape of The",
    "start": "3423720",
    "end": "3430280"
  },
  {
    "text": "Proposal like in terms of the actual API how it works all of that stuff is like pretty like that that's stable right",
    "start": "3430280",
    "end": "3437160"
  },
  {
    "text": "Daniel so people if people want to start learning how it's going to work and can folks use it through through Babel now I",
    "start": "3437160",
    "end": "3443400"
  },
  {
    "text": "guess that's the other question yeah you can use it through Babel through types R and the typescript version is like the",
    "start": "3443400",
    "end": "3448440"
  },
  {
    "text": "updated like it's the spec compliant version it's not the like The Runaway Train version from years ago well they",
    "start": "3448440",
    "end": "3454480"
  },
  {
    "text": "still have both I mean typescript you could still use the experimental decorators flag to get the old",
    "start": "3454480",
    "end": "3460280"
  },
  {
    "text": "decorators Behavior at least I think that's how you invoke it there was a thing where decorators metadata kind of",
    "start": "3460280",
    "end": "3467119"
  },
  {
    "text": "core piece of decorators was at stage two for some point when main decorators were at stage three but now it's all at",
    "start": "3467119",
    "end": "3473400"
  },
  {
    "text": "stage three together okay interesting so maybe maybe it'll all be implemented in a year but from a standards timeline",
    "start": "3473400",
    "end": "3480000"
  },
  {
    "text": "like a year or two means yeah you're on track this is good it's happening I got used to these really long timelines of",
    "start": "3480000",
    "end": "3486400"
  },
  {
    "text": "course of course absolutely yeah I'm I'm just being factious about like two years being a long time but in standards world",
    "start": "3486400",
    "end": "3491559"
  },
  {
    "text": "that's like the a blink of an eye okay so we don't have a ton of time to talk about all the other amazing things so I",
    "start": "3491559",
    "end": "3496799"
  },
  {
    "text": "want to just pick out like two or three more things and then we've got other things to discuss so temporal I think we",
    "start": "3496799",
    "end": "3502079"
  },
  {
    "text": "should talk about this because this is like the thing that we've also been waiting on for a while uh and it's",
    "start": "3502079",
    "end": "3507920"
  },
  {
    "text": "parked in stage three it has been for at least 2 years now I think I don't know yeah I mean I remember temporal is it",
    "start": "3507920",
    "end": "3514559"
  },
  {
    "text": "it's been at stage three for a while but I think it's really getting to this turning point where it's done and going",
    "start": "3514559",
    "end": "3519599"
  },
  {
    "text": "to start shipping soon so temporal is a new date time library in JavaScript you",
    "start": "3519599",
    "end": "3525599"
  },
  {
    "text": "already have JavaScript dates but those are really broken in some core ways for example you have methods on the same",
    "start": "3525599",
    "end": "3532559"
  },
  {
    "text": "date that work in terms of UTC and the local time zone but the local time zone isn't even part of the date if you move",
    "start": "3532559",
    "end": "3540240"
  },
  {
    "text": "your phone from one time zone to another and you have the web page open then it",
    "start": "3540240",
    "end": "3545720"
  },
  {
    "text": "will make the local time zone methods return things based on your new time zone that you joined later and all the",
    "start": "3545720",
    "end": "3552400"
  },
  {
    "text": "browsers have these these fancy code paths that invalidate caches and such when you change time zones to implement",
    "start": "3552400",
    "end": "3559000"
  },
  {
    "text": "this and I don't know it's useful in some ways but it's also weird like why",
    "start": "3559000",
    "end": "3564680"
  },
  {
    "text": "not have two types one type for an absolute UTC time and one type for a",
    "start": "3564680",
    "end": "3570480"
  },
  {
    "text": "local time that has a time zone so that's what temporal does it splits out date time types based on what pieces of",
    "start": "3570480",
    "end": "3577000"
  },
  {
    "text": "data that you have for example if you have just a time and you don't have a day then you just use the class for",
    "start": "3577000",
    "end": "3583880"
  },
  {
    "text": "times so temporal has a number of different types it has good integration with internationalization so you can use",
    "start": "3583880",
    "end": "3591440"
  },
  {
    "text": "in date time format together with all these different temporal types",
    "start": "3591440",
    "end": "3596599"
  },
  {
    "text": "there's a type for durations and a way to format those and you can do calculations on them so you could say",
    "start": "3596599",
    "end": "3601799"
  },
  {
    "text": "what's the time one hour from now but it's not like date where you're you know doing set hour hour plus one it actually",
    "start": "3601799",
    "end": "3609400"
  },
  {
    "text": "implements the calculations correctly and it does so with no mutation so it's",
    "start": "3609400",
    "end": "3614440"
  },
  {
    "text": "it's like luxon in that the date time that it's representing doesn't change it's kind of immutable when you do a",
    "start": "3614440",
    "end": "3620920"
  },
  {
    "text": "calculation you get a new one so you can go to the temporal documentation page at",
    "start": "3620920",
    "end": "3627440"
  },
  {
    "text": "tc39 proposal temporals and there's a cookbook with lots of examples and there's a full",
    "start": "3627440",
    "end": "3634760"
  },
  {
    "text": "polyfill and I'm really really excited for this to get out there is the polyfill like safe to use cuz like the",
    "start": "3634760",
    "end": "3641680"
  },
  {
    "text": "last time I was on a team evaluating this because we really didn't want to pull in moment for this new project but",
    "start": "3641680",
    "end": "3648240"
  },
  {
    "text": "of course like everyone and their mama is stuck with moment and everyone is counting down the day where they can",
    "start": "3648240",
    "end": "3653760"
  },
  {
    "text": "delete moment and just start using temporal because obviously it's a huge package that takes up a lot of bites and",
    "start": "3653760",
    "end": "3661400"
  },
  {
    "text": "so I'm just wondering this polyfill like is it stable enough for folks to start considering integrating it because if",
    "start": "3661400",
    "end": "3667440"
  },
  {
    "text": "you're working on a Greenfield project and you know you've you've got low traction on the on the usage right now",
    "start": "3667440",
    "end": "3672839"
  },
  {
    "text": "and I would be willing to take the chance on the polyfill if it was decent well unfortunately the team maintaining",
    "start": "3672839",
    "end": "3680280"
  },
  {
    "text": "the polyfill has been really focused on the needs for it in a kind of specification context to just be",
    "start": "3680280",
    "end": "3686960"
  },
  {
    "text": "completely correct rather than being totally production ready and ultimately",
    "start": "3686960",
    "end": "3692559"
  },
  {
    "text": "yeah maybe we would have to ship the time zone database anyway if we wanted to well unless we could be like luxon",
    "start": "3692559",
    "end": "3697760"
  },
  {
    "text": "and use the indle datetime format for that anyway there's a lot of messy decisions that you have to make when",
    "start": "3697760",
    "end": "3704720"
  },
  {
    "text": "making a datetime library really production ready and we know how to do that engineering work kind of generally",
    "start": "3704720",
    "end": "3711400"
  },
  {
    "text": "but it just hasn't been done but this is an opportunity for you know",
    "start": "3711400",
    "end": "3717000"
  },
  {
    "text": "contributions the polyfill that was written by The Proposal authors is there it's it's open source I you know we'll",
    "start": "3717000",
    "end": "3722799"
  },
  {
    "text": "have a link to it in the show comments and people there would love to have",
    "start": "3722799",
    "end": "3728480"
  },
  {
    "text": "contributors work on productionizing it and are happy to Mentor folks to do so nice yeah you you learn a ton and get to",
    "start": "3728480",
    "end": "3735160"
  },
  {
    "text": "help everyone else along the way um yeah thank you so much thanks you so much for that context and yeah I I'm so",
    "start": "3735160",
    "end": "3743520"
  },
  {
    "text": "personally tied to this specific proposal because I'm really close friends with some of the moment JS",
    "start": "3743520",
    "end": "3749599"
  },
  {
    "text": "Engineers that did the right thing and deprecated moment and did the right thing and took moment and put together",
    "start": "3749599",
    "end": "3756279"
  },
  {
    "text": "this proposal for temporal like they're the ones that actually helped drive this so for me this is just like another",
    "start": "3756279",
    "end": "3761520"
  },
  {
    "text": "really great story of how Innovation um from web developers you know helped kind",
    "start": "3761520",
    "end": "3766960"
  },
  {
    "text": "of shift the web you know uh forward and it's a really nice circular story where",
    "start": "3766960",
    "end": "3772240"
  },
  {
    "text": "we get to see like the It Come kind of Full Circle and and be part of the web platform and then we're going to have a",
    "start": "3772240",
    "end": "3777559"
  },
  {
    "text": "show on this so we're just waiting for it to like officially hit one browser and like move into Stage 4 but we're",
    "start": "3777559",
    "end": "3784359"
  },
  {
    "text": "going to have a big celebration about this with the momentjs team and the folks who champion this and so it's",
    "start": "3784359",
    "end": "3791000"
  },
  {
    "text": "going to be like an epic Mega show but we're just obviously we're waiting on on it to land cuz we don't want to get",
    "start": "3791000",
    "end": "3796640"
  },
  {
    "text": "excited and tell everyone to start using it and then they're just like wait what oh be really cool if we had the",
    "start": "3796640",
    "end": "3802160"
  },
  {
    "text": "production grade polyfill ready by then too yeah that would be nice that would be very nice because then all you're",
    "start": "3802160",
    "end": "3807599"
  },
  {
    "text": "doing is deleting the polyfill code but then but the rest of your code stays the same it's like the best kind of",
    "start": "3807599",
    "end": "3813599"
  },
  {
    "text": "situation so temporal just reached this Milestone where there was one part of The Proposal that led the proposal",
    "start": "3813599",
    "end": "3820200"
  },
  {
    "text": "Champions to go to ietf to standardize a new extension on you know ISO 8601 the",
    "start": "3820200",
    "end": "3828359"
  },
  {
    "text": "the date format because they wanted to represent time zones and calendars inside of that because temporal can",
    "start": "3828359",
    "end": "3834680"
  },
  {
    "text": "represent those things and was important to you know be able to serialize and deserialize those so they actually got",
    "start": "3834680",
    "end": "3840640"
  },
  {
    "text": "it added in in IDF we didn't bother with ISO yet but ITF has released a I would",
    "start": "3840640",
    "end": "3848920"
  },
  {
    "text": "get it wrong if I said what the actual stage of the ITF process was obviously the goal is to to publish a request for",
    "start": "3848920",
    "end": "3855760"
  },
  {
    "text": "comments but then you have several requests for comment before that and I",
    "start": "3855760",
    "end": "3861079"
  },
  {
    "text": "don't know it got to a good stage where we think it's standard enough it's finished enough for browsers to to ship",
    "start": "3861079",
    "end": "3867960"
  },
  {
    "text": "yeah no that's that's really cool so we have like we're talking about stage three right now and I'm going to kind of switch gears to go into stage two",
    "start": "3867960",
    "end": "3874839"
  },
  {
    "text": "there's like over 20 proposals in stage two oh yeah that's huge um we're not going to obviously have time to talk",
    "start": "3874839",
    "end": "3880079"
  },
  {
    "text": "about all of them we'll link to the proposals Doc in the show notes and we'll specifically link to the ones that",
    "start": "3880079",
    "end": "3885559"
  },
  {
    "text": "we've talked about here so that you don't have to click twice but for now I think the one that I'm the most excited",
    "start": "3885559",
    "end": "3891640"
  },
  {
    "text": "about is records and tbal we talked about this a little bit earlier but can we just explain it to people like",
    "start": "3891640",
    "end": "3896680"
  },
  {
    "text": "they're five because we didn't really quite set the context for like what the hell are records and tuples we just",
    "start": "3896680",
    "end": "3901760"
  },
  {
    "text": "started talking about it so honestly I would prefer to talk more about records",
    "start": "3901760",
    "end": "3906920"
  },
  {
    "text": "and tupal once there's been more work documenting and publicizing the that's",
    "start": "3906920",
    "end": "3912559"
  },
  {
    "text": "totally fair the revised version right now it's just going to be confusing I can give a brief answer to that question",
    "start": "3912559",
    "end": "3917640"
  },
  {
    "text": "but I don't want to spend too much time on the topic that sounds like that sounds like f yeah records and tupal the",
    "start": "3917640",
    "end": "3923200"
  },
  {
    "text": "point of them is to be immutable vers of objects in arrays and that can be really",
    "start": "3923200",
    "end": "3929039"
  },
  {
    "text": "useful because if you have you know your state in Redux or something or anything",
    "start": "3929039",
    "end": "3934640"
  },
  {
    "text": "that you're passing to use memo I guess Redux is considered p a or something but you know we still like it in Bloomberg I",
    "start": "3934640",
    "end": "3940960"
  },
  {
    "text": "don't know oh no Redux is great and Redux is not dead at all it's just taken",
    "start": "3940960",
    "end": "3946119"
  },
  {
    "text": "like a new life in I think Redux toolkit and which is the way I would use Redux if I was using it today anytime you have",
    "start": "3946119",
    "end": "3952839"
  },
  {
    "text": "your state like you don't need Redux to maintain your state but but it's a it's a good way to do so but anytime you have",
    "start": "3952839",
    "end": "3957960"
  },
  {
    "text": "your state centralized you have this object or array that has a bunch of other objects or arrays inside of it and",
    "start": "3957960",
    "end": "3964880"
  },
  {
    "text": "then you're going to change it maybe with a bunch of you know object and array spread patterns and the important",
    "start": "3964880",
    "end": "3971119"
  },
  {
    "text": "thing is you don't want to mutate it if you mutate it then you kind of lose the",
    "start": "3971119",
    "end": "3976640"
  },
  {
    "text": "game because it could make other things that are using like use memo or something it could make them get the",
    "start": "3976640",
    "end": "3983279"
  },
  {
    "text": "wrong answer because it won't do these comparisons properly so react might",
    "start": "3983279",
    "end": "3988599"
  },
  {
    "text": "forget that it has to render something if you do mutation instead of returning",
    "start": "3988599",
    "end": "3994000"
  },
  {
    "text": "a new object so the important thing is to use immutable objects or you know",
    "start": "3994000",
    "end": "3999559"
  },
  {
    "text": "there was a time when everyone was using immutable JS but now everyone just uses normal arrays and and objects which is",
    "start": "3999559",
    "end": "4007599"
  },
  {
    "text": "which is fine the thing is if you use normal arrays in objects you can just mutate them and fall into this trap",
    "start": "4007599",
    "end": "4015599"
  },
  {
    "text": "people end up having to copy their state like every frame every re render they",
    "start": "4015599",
    "end": "4021240"
  },
  {
    "text": "copy this object graph just to avoid the risk that they're going to mutate part",
    "start": "4021240",
    "end": "4026760"
  },
  {
    "text": "of it and that ends up causing a lot you know copying itself takes time the",
    "start": "4026760",
    "end": "4031880"
  },
  {
    "text": "rerender so that triggers takes time sometimes you know there are million ways to wrun all this stuff so records",
    "start": "4031880",
    "end": "4038279"
  },
  {
    "text": "and tles gives you this built in immutable object and array system that also has this built-in deep comparison",
    "start": "4038279",
    "end": "4045559"
  },
  {
    "text": "that can be used to see if something changed okay so we're just gonna I'm going to quickly shift this over into",
    "start": "4045559",
    "end": "4051160"
  },
  {
    "text": "module expressions and declarations can we that's also another stage two proposal that I'm very excited about",
    "start": "4051160",
    "end": "4056640"
  },
  {
    "text": "could you just very briefly tell us about that and then we want to talk about Asing context yeah so module",
    "start": "4056640",
    "end": "4062680"
  },
  {
    "text": "declarations and expressions are about having inline modules inside of other JavaScript so yes modules right now you",
    "start": "4062680",
    "end": "4071680"
  },
  {
    "text": "have one file that contains one module but that doesn't fully work for a number",
    "start": "4071680",
    "end": "4077000"
  },
  {
    "text": "of reasons sometimes you want to start up a worker with code that you have in",
    "start": "4077000",
    "end": "4082799"
  },
  {
    "text": "one file it can be kind of difficult bundler wise to package another file and",
    "start": "4082799",
    "end": "4088319"
  },
  {
    "text": "and refer to it I mean bundlers have worked this out but it ends up being kind of a configuration mess some",
    "start": "4088319",
    "end": "4093520"
  },
  {
    "text": "sometimes it's nice if you can have everything in one piece of code so modle Expressions let you have one of these",
    "start": "4093520",
    "end": "4099278"
  },
  {
    "text": "modules just in line in your JavaScript and then you could refer to it and pass it to a worker or import it export it",
    "start": "4099279",
    "end": "4107000"
  },
  {
    "text": "and read it from another file yeah but then if you want to export it and read it from another file you might want to",
    "start": "4107000",
    "end": "4113000"
  },
  {
    "text": "use module declarations so thing about if you have a module expression you can only really dynamically import it you",
    "start": "4113000",
    "end": "4120080"
  },
  {
    "text": "can't use the static import statement because not there in the name space and mulle declarations what it does is it it",
    "start": "4120080",
    "end": "4127400"
  },
  {
    "text": "makes a statically known namespace that has these different",
    "start": "4127400",
    "end": "4132480"
  },
  {
    "text": "locally defined modules so all you do if the code looks really intuitive it's just module and then the name and then a",
    "start": "4132480",
    "end": "4139520"
  },
  {
    "text": "curly bracket and contents of the module closing curly bracket there is a little problem that that kind of conflicts with",
    "start": "4139520",
    "end": "4146159"
  },
  {
    "text": "typescripts kind of old deprecated module construct it's just a synonym for",
    "start": "4146159",
    "end": "4151400"
  },
  {
    "text": "Nam space you mean the one that they created when they went off the script with javascripts like as in like it was",
    "start": "4151400",
    "end": "4157440"
  },
  {
    "text": "typescript and not JavaScript you was atript in 2012 2013 that that made",
    "start": "4157440",
    "end": "4162679"
  },
  {
    "text": "perfect sense there was like nothing for them to align to there was yeah but I I guess I have so little",
    "start": "4162679",
    "end": "4167880"
  },
  {
    "text": "sympathy for that honestly but I think it's just because I'm like a little I'm still a little upset that parts of",
    "start": "4167880",
    "end": "4173120"
  },
  {
    "text": "typescript are not standard JavaScript like I'm very crispy about that personally speaking I mean what I",
    "start": "4173120",
    "end": "4178560"
  },
  {
    "text": "thought that that was to prevent Google from forking typescript to create atscript and it was a compromise to get",
    "start": "4178560",
    "end": "4185960"
  },
  {
    "text": "typescript to keep going yeah because they wanted atscript for angular yeah they they needed a lot of features and",
    "start": "4185960",
    "end": "4191960"
  },
  {
    "text": "but modules I don't know exactly where modules got introduced in all this but modules are good they're a thing now the",
    "start": "4191960",
    "end": "4199800"
  },
  {
    "text": "typescript module keyword is just a kind of synonym for namespace there is a real problem that needs to be solved before",
    "start": "4199800",
    "end": "4205679"
  },
  {
    "text": "we would do something like module module declarations which is that there's a lot of types inde definitely typed even ones",
    "start": "4205679",
    "end": "4211800"
  },
  {
    "text": "that are generated that use the mle keyword and they have to be switched to namespace before we could even consider",
    "start": "4211800",
    "end": "4217719"
  },
  {
    "text": "this but then people probably have private code that does the same thing so I'm kind of sympathetic at the same time",
    "start": "4217719",
    "end": "4224360"
  },
  {
    "text": "it's good that now typescript has has finally actively started deprecating the mulle keyword fantastic good choice team",
    "start": "4224360",
    "end": "4232880"
  },
  {
    "text": "good one yeah and to be clear I was wrong I was I was thinking of decorators still for some reason oh yeah yeah yeah",
    "start": "4232880",
    "end": "4239679"
  },
  {
    "text": "yeah the angular team really wanted decorators yeah yeah and I understand why I mean they they're decorators is a",
    "start": "4239679",
    "end": "4245719"
  },
  {
    "text": "huge part of like working with angular code so so anyway so great great description and great summary and so the",
    "start": "4245719",
    "end": "4252719"
  },
  {
    "text": "the the net benefit I think modle declarations will let bundlers you still",
    "start": "4252719",
    "end": "4258120"
  },
  {
    "text": "need bundlers and bundlers will still do more than like concatenate modules because they Implement all kinds of",
    "start": "4258120",
    "end": "4263400"
  },
  {
    "text": "optimizations like module inlining but it allows for a simple kind of bundler",
    "start": "4263400",
    "end": "4269120"
  },
  {
    "text": "that just outputs modle declarations instead of implementing its own loader",
    "start": "4269120",
    "end": "4275239"
  },
  {
    "text": "so right now every time you use a bundler it has no way of using native",
    "start": "4275239",
    "end": "4280320"
  },
  {
    "text": "JavaScript modules maybe it can wrap everything in Native esm but it can't use esm internally because there's no",
    "start": "4280320",
    "end": "4287239"
  },
  {
    "text": "way that's efficient to have that include multiple different modules that",
    "start": "4287239",
    "end": "4294000"
  },
  {
    "text": "are that are importing each other so it ends up having to implement a CJs or AMD loader which is just I don't know it's",
    "start": "4294000",
    "end": "4301440"
  },
  {
    "text": "just kind of sad like I was hoping that we would get native JavaScript modules maybe that's a maybe that's too too",
    "start": "4301440",
    "end": "4307840"
  },
  {
    "text": "ideological or something but something I was hoping for I'm I'm a little confused as to why I don't think I followed like",
    "start": "4307840",
    "end": "4315440"
  },
  {
    "text": "why can't it use esm oh you can if you want to take a bunch of JavaScript modules and put them in one file without",
    "start": "4315440",
    "end": "4322480"
  },
  {
    "text": "module declarations sure you can do that but you have to do that with the bundler",
    "start": "4322480",
    "end": "4327719"
  },
  {
    "text": "implementing its own internal notion of modules it will do the esm to CJs",
    "start": "4327719",
    "end": "4333040"
  },
  {
    "text": "transform internally to make it work but but let's say I'm not using a bundler and I'm just using vanilla JS like what",
    "start": "4333040",
    "end": "4339639"
  },
  {
    "text": "then ah yeah so if you just use vanilla JS you can use module declarations to",
    "start": "4339639",
    "end": "4345639"
  },
  {
    "text": "put a bunch of things together efficiently kind of building your own little bundler yeah I mean I think you're making a little case for",
    "start": "4345639",
    "end": "4351760"
  },
  {
    "text": "something but like that's its own show and like fascinated the fascinating so",
    "start": "4351760",
    "end": "4357280"
  },
  {
    "text": "so we can move on to our last spec that we can dig into and then I'm really excited to talk about this new thing called winter CG with you so so tell us",
    "start": "4357280",
    "end": "4364760"
  },
  {
    "text": "about what is async context which is also another stage two proposal and why is it important Asing context gives you",
    "start": "4364760",
    "end": "4371239"
  },
  {
    "text": "the ability to share information across an asynchronous data flow so what do I",
    "start": "4371239",
    "end": "4377840"
  },
  {
    "text": "mean by that I mean if you have some data Maybe you store it in a variable and then you you await it well if it's a",
    "start": "4377840",
    "end": "4385040"
  },
  {
    "text": "local variable you can read it before after the await but if it's a global variable you kind of want to save and",
    "start": "4385040",
    "end": "4390920"
  },
  {
    "text": "restore that Global variable so one one concrete example is with distributed tracing with open dmetry you want to",
    "start": "4390920",
    "end": "4398080"
  },
  {
    "text": "remember kind of which span ID you're using kind of like your request header",
    "start": "4398080",
    "end": "4403880"
  },
  {
    "text": "yeah you want to be able to send it in your request header but you also want to include it in your log messages so that",
    "start": "4403880",
    "end": "4409280"
  },
  {
    "text": "then you can recover a distributed Trace so this ban ID your request ID sorry is",
    "start": "4409280",
    "end": "4414760"
  },
  {
    "text": "what I meant not request header kind of like your a request ID being able to kind of um pass that along all the",
    "start": "4414760",
    "end": "4420440"
  },
  {
    "text": "handshakes right exactly that's what the spity is for so you want to hold it in a",
    "start": "4420440",
    "end": "4425920"
  },
  {
    "text": "global variable but if you do async of weight then it doesn't get restored on the await because some other thread",
    "start": "4425920",
    "end": "4432239"
  },
  {
    "text": "might come in and need it for something else so so this was raised as a really important issue within winter CG winter",
    "start": "4432239",
    "end": "4439239"
  },
  {
    "text": "CG is this new group that is working on standardizing JavaScript for all web",
    "start": "4439239",
    "end": "4446719"
  },
  {
    "text": "intercompatibility",
    "start": "4446719",
    "end": "4449320"
  },
  {
    "text": "that is slow it's unstable and it's not available in browsers and unstable in the sense that",
    "start": "4465239",
    "end": "4472800"
  },
  {
    "text": "V8 has it now but it's just a V8 specific thing it's not a standard thing so it could go away in the future via",
    "start": "4472800",
    "end": "4479159"
  },
  {
    "text": "their deprecation process if they if they decide so the solution is to make a",
    "start": "4479159",
    "end": "4484840"
  },
  {
    "text": "new thing Asing context which is specifically for storing these variables that have this property where they work",
    "start": "4484840",
    "end": "4490840"
  },
  {
    "text": "in cxs across a weight and such and this was an effort that was jointly done",
    "start": "4490840",
    "end": "4497600"
  },
  {
    "text": "between tc39 and window CG we're in window CG we have the different server",
    "start": "4497600",
    "end": "4503120"
  },
  {
    "text": "run times gathered so that we could discuss the needs together and then in tc39 we developed the actual standard",
    "start": "4503120",
    "end": "4510080"
  },
  {
    "text": "based off of it so Windows CG doesn't directly publish its own standards but",
    "start": "4510080",
    "end": "4515960"
  },
  {
    "text": "it's a place to discover and to develop descriptions of shared needs between uh",
    "start": "4515960",
    "end": "4522560"
  },
  {
    "text": "different server environments so then we could figure out how that should affect standards part of Windows CG is defining",
    "start": "4522560",
    "end": "4530120"
  },
  {
    "text": "a minimum common API a common environment for all things so you might call this like window CG compliant",
    "start": "4530120",
    "end": "4537080"
  },
  {
    "text": "actually some people might already be claiming to be window CG compliant but we have not defined what this means yet",
    "start": "4537080",
    "end": "4542960"
  },
  {
    "text": "so it's a little little early actually we're we're working on opening up a new",
    "start": "4542960",
    "end": "4548360"
  },
  {
    "text": "TC in ecma maybe it'll be tc55 or you could call it winter TC and that would be where we could",
    "start": "4548360",
    "end": "4555280"
  },
  {
    "text": "publish standards related to Winter CG this is so much because I'm like still",
    "start": "4555280",
    "end": "4560360"
  },
  {
    "text": "like kind of jaw drop on the floor around acing context and how awesome it is but I also like can't wait I'm like",
    "start": "4560360",
    "end": "4567360"
  },
  {
    "text": "so eager to like I'm foaming at the mouth to like dig into winter CG and and what I want to understand is why was",
    "start": "4567360",
    "end": "4573400"
  },
  {
    "text": "this something that couldn't just be in the tc39 like as in what was it just like this group of people isn't",
    "start": "4573400",
    "end": "4580159"
  },
  {
    "text": "technically part of emman there's so many questions so I don't know where we start like well one thing that I like",
    "start": "4580159",
    "end": "4585800"
  },
  {
    "text": "about L CG is so it's a w3c community group that's what CG stands for and that",
    "start": "4585800",
    "end": "4592400"
  },
  {
    "text": "means that anybody can join it's completely open you just have to sign on to the intellectual property policy and",
    "start": "4592400",
    "end": "4599239"
  },
  {
    "text": "that's a really good quality for this kind of group because it it makes sure that we don't exclude anybody who would",
    "start": "4599239",
    "end": "4604880"
  },
  {
    "text": "be an important stakeholder also the initial thing from win CG this minimum common API it's a set of web apis so",
    "start": "4604880",
    "end": "4613080"
  },
  {
    "text": "it's a set of things like we say yeah set timeout should be available in all these environments and fetch should be",
    "start": "4613080",
    "end": "4619719"
  },
  {
    "text": "available but maybe a different version of fetch okay so let's set the environments what are these environments",
    "start": "4619719",
    "end": "4624880"
  },
  {
    "text": "right so and let's maybe set the groundwork first around let's so tc39 typically targeting JavaScript run times",
    "start": "4624880",
    "end": "4632440"
  },
  {
    "text": "JavaScript engines right like things typically that run in a browser or node context um so Shakra core V8 JavaScript",
    "start": "4632440",
    "end": "4640320"
  },
  {
    "text": "core um spider monkey right what else yeah yeah TC 9 is for the JavaScript",
    "start": "4640320",
    "end": "4646360"
  },
  {
    "text": "engines themselves so like all those things you listed and then winter EG is for things that go on top of that like",
    "start": "4646360",
    "end": "4653520"
  },
  {
    "text": "no Dino bun Cloud flare workers blomberg has its own Kinds of Kinds of these oh",
    "start": "4653520",
    "end": "4660679"
  },
  {
    "text": "yeah uh which we're also we're also integrating node a lot right so these server environments like like Dino and",
    "start": "4660679",
    "end": "4667360"
  },
  {
    "text": "like cloudflare workers ultimately they're they're all aiming to be pretty web compatible and this is this is also",
    "start": "4667360",
    "end": "4674440"
  },
  {
    "text": "the case with with with node and Bun really they have a lot of the same goals in mind and it doesn't make sense to I",
    "start": "4674440",
    "end": "4680520"
  },
  {
    "text": "mean it it will be useful for programmers if they can be as compatible with each other as possible so then code can be portable absolutely we don't want",
    "start": "4680520",
    "end": "4687000"
  },
  {
    "text": "lock in we want standards right and you're bringing so this is kind of an effort if I'm if I'm understanding this correctly is is an effort to bring",
    "start": "4687000",
    "end": "4693520"
  },
  {
    "text": "standardization to these kind of like higher level JavaScript server run times",
    "start": "4693520",
    "end": "4699280"
  },
  {
    "text": "is that right yeah yeah exactly so the goal is not to say and would bun technically be part of something like",
    "start": "4699280",
    "end": "4705480"
  },
  {
    "text": "this in the future or at present oh yeah yeah we really hope that bun will join win CG uh we're definitely like watching",
    "start": "4705480",
    "end": "4712120"
  },
  {
    "text": "what they're doing and hoping that we can all align okay so can you give us some examples of things that you are",
    "start": "4712120",
    "end": "4717679"
  },
  {
    "text": "actively trying to standardize so obviously this async context thing came out of that which is cool but like",
    "start": "4717679",
    "end": "4724120"
  },
  {
    "text": "what's an example of like where something is working one way in Cloud flare workers and another way you know",
    "start": "4724120",
    "end": "4729320"
  },
  {
    "text": "and another way node one that people are working really hard on is fetch making sure that you have fetch like in the",
    "start": "4729320",
    "end": "4735560"
  },
  {
    "text": "browser available in servers and these environments all have their kind of",
    "start": "4735560",
    "end": "4741239"
  },
  {
    "text": "fetch but sometimes they're a little bit different from each other there are a lot of cases where the fetch standard",
    "start": "4741239",
    "end": "4748280"
  },
  {
    "text": "for web browsers just doesn't make sense in servers for example when it says you",
    "start": "4748280",
    "end": "4754840"
  },
  {
    "text": "need the right cores headers to make a cross origin request if you're a server you're already kind of privileged enough",
    "start": "4754840",
    "end": "4760880"
  },
  {
    "text": "to request to whatever website you want so doesn't make sense tends to require cor headers on Cross origin things or",
    "start": "4760880",
    "end": "4768679"
  },
  {
    "text": "enforce the same origin policy in general so there's work ongoing to specify exactly how fed should work on",
    "start": "4768679",
    "end": "4775120"
  },
  {
    "text": "server environments wow and so where would that standard get published is my question like well you know it depends",
    "start": "4775120",
    "end": "4781600"
  },
  {
    "text": "different things in window CG Go in different places we kind of hope that fetch we can ultimately Upstream this",
    "start": "4781600",
    "end": "4788080"
  },
  {
    "text": "within the what wig fetch standard but is that like a scope creep for what wig",
    "start": "4788080",
    "end": "4794040"
  },
  {
    "text": "folks because they're not often thinking about the server right like they're just like we need these these damn browsers",
    "start": "4794040",
    "end": "4800080"
  },
  {
    "text": "to talk to each other and talk the same way you know what I mean and so like adding This Server runtime context",
    "start": "4800080",
    "end": "4805320"
  },
  {
    "text": "actually is a bit of a scope creep for whatwg in terms of like things that they specify yeah in some sense but in",
    "start": "4805320",
    "end": "4812199"
  },
  {
    "text": "another sense it's something that some whatwg contributors have expressed",
    "start": "4812199",
    "end": "4817440"
  },
  {
    "text": "openness to so we'll just have to see you know plan a is getting Upstream in what wig and plan B is is you know we",
    "start": "4817440",
    "end": "4825600"
  },
  {
    "text": "publish a fork other parts won't go in in what wi for example the common",
    "start": "4825600",
    "end": "4831080"
  },
  {
    "text": "minimum API just the listing of all the apis that are supposed to be supported",
    "start": "4831080",
    "end": "4836600"
  },
  {
    "text": "that will have to go you know someplace else it's not a web standard it's not on the web and so yeah so we're trying to",
    "start": "4836600",
    "end": "4843560"
  },
  {
    "text": "establish an ecma technical committee to publish that okay so this is like beyond",
    "start": "4843560",
    "end": "4848719"
  },
  {
    "text": "beyond beyond fantastic like amazing work you all seriously and as a community we get to benefit from this",
    "start": "4848719",
    "end": "4855400"
  },
  {
    "text": "level of standardization because exactly how what you said means like we don't have to there's no lock in you know if I",
    "start": "4855400",
    "end": "4861760"
  },
  {
    "text": "want to move my code lift and shift it like I lift and shift without using a bunch of proprietary apis like granted",
    "start": "4861760",
    "end": "4868280"
  },
  {
    "text": "we've seen with Deno like there's already language level tools right like that they've put in with this KV store",
    "start": "4868280",
    "end": "4874600"
  },
  {
    "text": "and that being something that you use when you're using a paid service like there's it's never going to be 100%",
    "start": "4874600",
    "end": "4880719"
  },
  {
    "text": "interoperable but having at least a subset that is and specified like that",
    "start": "4880719",
    "end": "4886080"
  },
  {
    "text": "is very exciting and I just want to say yay I also want to give you some free advice Daniel which is like you're doing",
    "start": "4886080",
    "end": "4892880"
  },
  {
    "text": "something new and you know I think trying to kind of work within the constraints that like the existing",
    "start": "4892880",
    "end": "4898840"
  },
  {
    "text": "landscape it doesn't have a clear space for something like winter CG from a",
    "start": "4898840",
    "end": "4903920"
  },
  {
    "text": "standard perspective and so I wouldn't be afraid of just kind of like having a whole new committee within ecma like",
    "start": "4903920",
    "end": "4911159"
  },
  {
    "text": "that just feels like the right thing to do and also I really think published",
    "start": "4911159",
    "end": "4916480"
  },
  {
    "text": "specified standard docs need to come out of this work as well and I think those need to be independent like I don't",
    "start": "4916480",
    "end": "4922440"
  },
  {
    "text": "think they need to be part of wat wig or like ecma like I think like they can be they can be referenced and linked in both of those spaces but they do it just",
    "start": "4922440",
    "end": "4929040"
  },
  {
    "text": "this feels like a standalone thing to be honest I mean yeah some things are standal load and some things are are not",
    "start": "4929040",
    "end": "4934400"
  },
  {
    "text": "because some things are sometimes we've been adding extra apis to web browsers",
    "start": "4934400",
    "end": "4940000"
  },
  {
    "text": "to make them work better kind of in all places and one of those was this tiny",
    "start": "4940000",
    "end": "4946840"
  },
  {
    "text": "Library function called response. Json that makes it easier to construct a response from like if you're writing a",
    "start": "4946840",
    "end": "4954280"
  },
  {
    "text": "service worker but it's also useful in you know the cloud flare workers API for for web servers so we're we're really",
    "start": "4954280",
    "end": "4961560"
  },
  {
    "text": "we're really interested in both sides both doing some of our own thing and in",
    "start": "4961560",
    "end": "4967320"
  },
  {
    "text": "aligning so one other place where we're thinking about doing our own thing is in socket apis like TCP raw TC P socket",
    "start": "4967320",
    "end": "4975960"
  },
  {
    "text": "that is not safe to give to websites maybe it could be given to like a super",
    "start": "4975960",
    "end": "4981120"
  },
  {
    "text": "duper pwa with extra permissions that's something that there's some early discussion about in the w3c but honestly",
    "start": "4981120",
    "end": "4988520"
  },
  {
    "text": "they've been talking about that for for a long time so depending on how those",
    "start": "4988520",
    "end": "4993600"
  },
  {
    "text": "discussions go we might try to work with them or we might Define our own you know",
    "start": "4993600",
    "end": "4999400"
  },
  {
    "text": "winter CG library that would be like a built-in module so that's still that's new ground then that would be developed",
    "start": "4999400",
    "end": "5005280"
  },
  {
    "text": "in Windows CG so the technical development happens all in the open in that CG and then standardized in",
    "start": "5005280",
    "end": "5013000"
  },
  {
    "text": "tc55 so right right now the ball is in my court to get tc55 started because window CG agreed on it in principle that",
    "start": "5013000",
    "end": "5020520"
  },
  {
    "text": "we're going to try to work with XA but we have to define the scope and statement of goals for the that might be",
    "start": "5020520",
    "end": "5026800"
  },
  {
    "text": "a committee I'm interested in joining by the way like oh yeah please yeah especially if I end up at the place that",
    "start": "5026800",
    "end": "5033639"
  },
  {
    "text": "I think I'm going to end up working I'm like in the middle of interviewing right now well I'm I'm flirting with companies",
    "start": "5033639",
    "end": "5039400"
  },
  {
    "text": "right now I shouldn't say I'm interviewing I will start interviewing in the new year and uh if I end up where",
    "start": "5039400",
    "end": "5044560"
  },
  {
    "text": "I'm going to end up or if I end up where I'd like to end up you know then it would be especially poent for me to join",
    "start": "5044560",
    "end": "5051280"
  },
  {
    "text": "this but yeah very cool yeah so is uh something like defining what a what a a",
    "start": "5051280",
    "end": "5056360"
  },
  {
    "text": "package manifest looks like is that part of winter CG scope oh yeah there's there's definitely interest in Winter CG",
    "start": "5056360",
    "end": "5063840"
  },
  {
    "text": "and investing tigating package Json or other kinds of package benefits we have a bunch of work streams and we made a",
    "start": "5063840",
    "end": "5071440"
  },
  {
    "text": "this was I think an initiative from Ethan Arrowwood made a work stream for looking into package Json but I'm not",
    "start": "5071440",
    "end": "5078000"
  },
  {
    "text": "sure what happened once that was started definitely nodes package Json is",
    "start": "5078000",
    "end": "5083080"
  },
  {
    "text": "something that a lot of different things Implement parts of seems important okay",
    "start": "5083080",
    "end": "5088760"
  },
  {
    "text": "so that's super cool so what's going on with tg4 and Source Maps this is something I keep hearing about um can",
    "start": "5088760",
    "end": "5094840"
  },
  {
    "text": "you shed some light on on this are you all trying to standardize Source Maps or something like yeah so Source maps are",
    "start": "5094840",
    "end": "5101840"
  },
  {
    "text": "mapping of JavaScript Source when you have a minifier or a bundler then it's going to do this transformation on",
    "start": "5101840",
    "end": "5108320"
  },
  {
    "text": "Source where you have JavaScript in and JavaScript out but the out hopefully is more efficient but then when you're debugging you kind of need to know what",
    "start": "5108320",
    "end": "5116239"
  },
  {
    "text": "the original was even though the engine's been writing this bundler output so you need a mapping that you",
    "start": "5116239",
    "end": "5122040"
  },
  {
    "text": "can go from the minified code from the out output back to the input the full code and Source maps have been this",
    "start": "5122040",
    "end": "5128440"
  },
  {
    "text": "mechanism to solve that problem and they came out more than 10 years ago but the standard for Source Maps was a bit",
    "start": "5128440",
    "end": "5135080"
  },
  {
    "text": "informal it was just a description in a Google doc it was kind of ambiguous and different people",
    "start": "5135080",
    "end": "5141080"
  },
  {
    "text": "implemented it in different ways oh wow I did not know that just a little bit just around the edges and yeah this",
    "start": "5141080",
    "end": "5147880"
  },
  {
    "text": "totally gets on gets on people's nerves if they're ever developing either browser Dev tools or build tools",
    "start": "5147880",
    "end": "5155080"
  },
  {
    "text": "you run into this problem really quickly where it's just not clear how to do things correctly and you just get an",
    "start": "5155080",
    "end": "5161719"
  },
  {
    "text": "endless stream of bugs due to the interaction of all these different systems so yeah we really wanted to fix",
    "start": "5161719",
    "end": "5168560"
  },
  {
    "text": "this in Bloomberg because we have a lot of developers debugging via Source Maps actually we have our own feature that we",
    "start": "5168560",
    "end": "5174840"
  },
  {
    "text": "added to Source Maps locally called pasta Source Maps which improves some of the information yeah it's pretty",
    "start": "5174840",
    "end": "5182280"
  },
  {
    "text": "accurate sack Trace analysis oh fancy nice acronym and so we wanted",
    "start": "5182280",
    "end": "5188760"
  },
  {
    "text": "that information to be part of the standard but we also wanted to in addition to making sure that the",
    "start": "5188760",
    "end": "5194280"
  },
  {
    "text": "standard was unambiguous we wanted to make a process where more things could happen so in the end the group is",
    "start": "5194280",
    "end": "5201320"
  },
  {
    "text": "working together on both this sort of correctness track which is fixing up the",
    "start": "5201320",
    "end": "5206679"
  },
  {
    "text": "specification so that it could be real standard that we could publish and on the features track we're thinking about",
    "start": "5206679",
    "end": "5213239"
  },
  {
    "text": "things like standardizing the metadata for pasta Source Maps Google made this ignore list feature that that we all",
    "start": "5213239",
    "end": "5219760"
  },
  {
    "text": "kind of like and want to put in the standard and so so the standard who's going to implement the standard and",
    "start": "5219760",
    "end": "5225159"
  },
  {
    "text": "where is it going to get published and and who what's the committee responsible for standardizing it is this is this a",
    "start": "5225159",
    "end": "5231000"
  },
  {
    "text": "winter CG thing or is this something else oh it's it's it's a task group of TC3 okay so that's a tg4 so it's like",
    "start": "5231000",
    "end": "5238920"
  },
  {
    "text": "tc39 can any any EC can Sprout its own like mini subcommitte whatever it feels",
    "start": "5238920",
    "end": "5245199"
  },
  {
    "text": "like and that's what we did with tg4 and those also get incrementally numbered like tg4 task group four so there's only",
    "start": "5245199",
    "end": "5253400"
  },
  {
    "text": "been three other task groups before this or do you guys start at index zero TG Z",
    "start": "5253400",
    "end": "5258760"
  },
  {
    "text": "tg1 is the is the main TC that okay okay and then",
    "start": "5258760",
    "end": "5264840"
  },
  {
    "text": "tg2 is well the reason there was some reason that it was started that way because it became a royaltyfree task",
    "start": "5264840",
    "end": "5272199"
  },
  {
    "text": "group I'm just surprised that y'all don't start at zero I mean I would fully have expected you all to start counting",
    "start": "5272199",
    "end": "5277280"
  },
  {
    "text": "at zero like real programmers you know that's my biggest disappointment document numbers they go by their own",
    "start": "5277280",
    "end": "5283480"
  },
  {
    "text": "rules so tg2 is for internationalization for EO 42 tg3 is for security and tg4 is",
    "start": "5283480",
    "end": "5292480"
  },
  {
    "text": "now for Source BS what about that other TC T like the secure runtime I think it",
    "start": "5292480",
    "end": "5297760"
  },
  {
    "text": "was TC 53 or something like that oh TC 53 that's that's defining a bunch of built-in modules for embedded system",
    "start": "5297760",
    "end": "5304159"
  },
  {
    "text": "systems right right right is that still active cuz I I was there when that committee started like uh at Boku I",
    "start": "5304159",
    "end": "5309920"
  },
  {
    "text": "remember like R Rick Waldren yeah they just had a meeting in California nice yeah I think Rick and Jory were like",
    "start": "5309920",
    "end": "5316719"
  },
  {
    "text": "sponsoring that and making that happen and I was like so excited to see stuff get specified for like embeddable you",
    "start": "5316719",
    "end": "5323239"
  },
  {
    "text": "know code and hey like there's a different level of security and different level of considerations that you need to take when you know thinking",
    "start": "5323239",
    "end": "5330239"
  },
  {
    "text": "about running code and firmware so it's very very cool so congratulations on",
    "start": "5330239",
    "end": "5335280"
  },
  {
    "text": "winter CG being a thing it sounds like there's a need and I'm happy to see that that need is being funneled positively",
    "start": "5335280",
    "end": "5342560"
  },
  {
    "text": "through collaboration and standards you know across the board we'll put a link into the show notes for folks who want",
    "start": "5342560",
    "end": "5347880"
  },
  {
    "text": "to join again it's an open committee so if you got opinions they got eyes and ears they can they can give you feedback",
    "start": "5347880",
    "end": "5355480"
  },
  {
    "text": "or or you can chime in make sure to put that comment earlier when we were talking about wi CG",
    "start": "5355480",
    "end": "5361880"
  },
  {
    "text": "yes hey Jared here in Poe I tried to move that comment earlier but it was",
    "start": "5361880",
    "end": "5367119"
  },
  {
    "text": "just too hard to fit in you can just like do it in your brain right yeah you can do it",
    "start": "5367119",
    "end": "5372760"
  },
  {
    "text": "thanks I kind of want to end this podcast talking about open source sustainability you know and just taking",
    "start": "5372760",
    "end": "5378679"
  },
  {
    "text": "a step back and looking at like all these people that are contributing to standards work in various capacities",
    "start": "5378679",
    "end": "5384000"
  },
  {
    "text": "many of them work at browser companies Andor companies with pretty big stakeholders of the web right like Intel",
    "start": "5384000",
    "end": "5390520"
  },
  {
    "text": "and Samsung and Sony and you know companies that really rely on the web to",
    "start": "5390520",
    "end": "5395920"
  },
  {
    "text": "be healthy and functional for their products to work well for users right so",
    "start": "5395920",
    "end": "5400960"
  },
  {
    "text": "those folks but then there's folks like you know from Boku and igalia that are you know kind of independent Consultants",
    "start": "5400960",
    "end": "5407360"
  },
  {
    "text": "you know being paid by various companies to work on different initiatives right because of their expertise on the",
    "start": "5407360",
    "end": "5412480"
  },
  {
    "text": "platform and so like where are we with just general open source sustainability",
    "start": "5412480",
    "end": "5417600"
  },
  {
    "text": "and more importantly like making it easy for people who don't work at these big companies to be part of the conversation when like shaping the web yeah well not",
    "start": "5417600",
    "end": "5425600"
  },
  {
    "text": "everybody who works on this stuff does work for companies some people are doing it in their free time or as part of",
    "start": "5425600",
    "end": "5431320"
  },
  {
    "text": "these open Collective funded efforts the way that the way that Babble has so one of the things in tc39 was to make sure",
    "start": "5431320",
    "end": "5438560"
  },
  {
    "text": "we had a strong invited expert program to make sure that people who aren't working for particular legal entities",
    "start": "5438560",
    "end": "5444760"
  },
  {
    "text": "can participate when they're playing a core ecosystem role but it's always better if developers can get paid I",
    "start": "5444760",
    "end": "5451560"
  },
  {
    "text": "think I shouldn't say always it's great to have code projects that people are doing in their in their free time but",
    "start": "5451560",
    "end": "5457639"
  },
  {
    "text": "then when they become really critical ecosystem dependencies when they become really important projects I think it's",
    "start": "5457639",
    "end": "5463719"
  },
  {
    "text": "better to have people paid to to work on them so then there's a question where does the money come from sometimes it",
    "start": "5463719",
    "end": "5470280"
  },
  {
    "text": "can be a person allocated part of their time within their day job to do things",
    "start": "5470280",
    "end": "5475920"
  },
  {
    "text": "which is good at Bloomberg we found it to be effective to work with other",
    "start": "5475920",
    "end": "5481520"
  },
  {
    "text": "Consultants so they can be full-time on on the project so we paid ealia as well",
    "start": "5481520",
    "end": "5487199"
  },
  {
    "text": "as other consultancies this is important because we can really get things done this way you know every year we have a",
    "start": "5487199",
    "end": "5493840"
  },
  {
    "text": "contract with particular expectations I think this is like an understated thing for open source sustainability that can",
    "start": "5493840",
    "end": "5499880"
  },
  {
    "text": "be done everybody's working on setting up open collectives which are which are great when they can be done that's a",
    "start": "5499880",
    "end": "5505639"
  },
  {
    "text": "great way to get funding collected from multiple places but to make that add up",
    "start": "5505639",
    "end": "5511320"
  },
  {
    "text": "to a single developer salary is really hard takes a lot of effort to just",
    "start": "5511320",
    "end": "5516960"
  },
  {
    "text": "collect all the different groups to make donations it takes a lot of visibility and some efforts are really important to",
    "start": "5516960",
    "end": "5522920"
  },
  {
    "text": "get done that aren't so visible So within companies if the company has",
    "start": "5522920",
    "end": "5528239"
  },
  {
    "text": "resources for it then they can pay these consultancies such as ealia to get some",
    "start": "5528239",
    "end": "5533320"
  },
  {
    "text": "work done on these projects and that's what we found to be pretty effective in Bloomberg so we've been sponsoring nodejs we've been sponsoring chromium",
    "start": "5533320",
    "end": "5541239"
  },
  {
    "text": "all through this sort of consultancy model in addition to we have a program of donating $10,000 per month to",
    "start": "5541239",
    "end": "5548800"
  },
  {
    "text": "different open source projects one project per month and that's awesome so",
    "start": "5548800",
    "end": "5554520"
  },
  {
    "text": "12 projects a year how do you all come up with that list of 12 is it your dependencies or well there's so many",
    "start": "5554520",
    "end": "5561639"
  },
  {
    "text": "dependencies so we it's not like we can just go through them in alphabetical order we to figure out what's the most important projects so this is a program",
    "start": "5561639",
    "end": "5568440"
  },
  {
    "text": "that Alysa Wright uh who runs our ASO in Bloomberg ASO is like a like like open",
    "start": "5568440",
    "end": "5574239"
  },
  {
    "text": "source office yeah our open source program office so Alyssa Wright uh was like a co-founder of Open Source",
    "start": "5574239",
    "end": "5580440"
  },
  {
    "text": "Collective and now is at Bloomberg and so she she created this program in partnership with Bloomberg",
    "start": "5580440",
    "end": "5586960"
  },
  {
    "text": "philanthropies where we do polls every month or every quarter I can't remember",
    "start": "5586960",
    "end": "5592719"
  },
  {
    "text": "anyway we do internal polls of which projects people think are important there's like a nomination process and",
    "start": "5592719",
    "end": "5598920"
  },
  {
    "text": "then we you know kind of filter out the ones that don't make sense and then we do a poll among the engineers at",
    "start": "5598920",
    "end": "5604400"
  },
  {
    "text": "Bloomberg who are interested about which projects should be donated to so if you want to vote uh I don't know Bloomberg's",
    "start": "5604400",
    "end": "5611239"
  },
  {
    "text": "hiring you can go on to our thas page yeah yeah join Bloomberg yeah very indirect way of doing that but yes that",
    "start": "5611239",
    "end": "5617800"
  },
  {
    "text": "is certainly an Avenue that's fantastic Dan like I this is a topic I'm really passionate about personally because you",
    "start": "5617800",
    "end": "5623760"
  },
  {
    "text": "know it's I I have so many friends in this community that like work on really critical infrastructure and really",
    "start": "5623760",
    "end": "5629239"
  },
  {
    "text": "critical software and really critical dependencies libraries whatever else and yeah they defin don't get the monetary",
    "start": "5629239",
    "end": "5635920"
  },
  {
    "text": "support as well as I would say just yeah even having contributors and maintainers you know and so for me like I'm",
    "start": "5635920",
    "end": "5641480"
  },
  {
    "text": "interested in kind of putting an open letter out to the world some point next year around like hey there's here's",
    "start": "5641480",
    "end": "5648080"
  },
  {
    "text": "three ways you can get involved like you can just give straight up cash monthly or annually for whatever amount you can",
    "start": "5648080",
    "end": "5655119"
  },
  {
    "text": "you can afford you know and I think there's a really good formula that sentries come up with for how they kind",
    "start": "5655119",
    "end": "5660560"
  },
  {
    "text": "of come up with how much they can donate and to who and whatever else but there's just give money the other is like give",
    "start": "5660560",
    "end": "5667320"
  },
  {
    "text": "time you know have some of your engineers contribute to your dependencies and or just in general open",
    "start": "5667320",
    "end": "5673920"
  },
  {
    "text": "source projects that are good for the ecosystem like across the board I don't even think there should be boundaries like you know like if it's open source",
    "start": "5673920",
    "end": "5679440"
  },
  {
    "text": "and free and it's important like it's worth uh contributing engineering time you know so that's an indirect way and",
    "start": "5679440",
    "end": "5686440"
  },
  {
    "text": "then like the third is kind of like a combination of like give money and also like hire people to work on this stuff",
    "start": "5686440",
    "end": "5692440"
  },
  {
    "text": "fulltime right like you can do both like you can just have someone on payroll whose job it is to be a node node",
    "start": "5692440",
    "end": "5697840"
  },
  {
    "text": "contributor and then the kind of return to you is that you now have this in inhouse expertise that your team can",
    "start": "5697840",
    "end": "5704400"
  },
  {
    "text": "leverage and so forth and so forth and so there's so many ways that companies can contribute but I think without",
    "start": "5704400",
    "end": "5710800"
  },
  {
    "text": "having that framework and understanding of how you know like it's I think it's just not top of mind for most people",
    "start": "5710800",
    "end": "5717480"
  },
  {
    "text": "because they're just trying to ship things to their customers you know so we just have to kind of make space for this and do advocacy work as the community",
    "start": "5717480",
    "end": "5724880"
  },
  {
    "text": "but like this is not impossible like this can happen you know yeah and I would say conversely if you're an open",
    "start": "5724880",
    "end": "5731199"
  },
  {
    "text": "source maintainer or developer and want to make this a paid full-time job I",
    "start": "5731199",
    "end": "5737440"
  },
  {
    "text": "would encourage you to consider looking for clients to sponsor specific pieces of of the work involved and this can be",
    "start": "5737440",
    "end": "5744400"
  },
  {
    "text": "either through making your own you know being your own independent contractor or there are many different consultancies",
    "start": "5744400",
    "end": "5750760"
  },
  {
    "text": "set up that specialize in different areas of open source for work you just look around a little bit though that's",
    "start": "5750760",
    "end": "5756840"
  },
  {
    "text": "what I did when I was working at aalia I didn't want to sit up my own like find my own clients and and set up a business",
    "start": "5756840",
    "end": "5763800"
  },
  {
    "text": "in an LLC and like all that jazz yeah yeah there there are lots of different specialized consultancies for for",
    "start": "5763800",
    "end": "5770560"
  },
  {
    "text": "different piece of Open Source so I recommend that that model I thought it was for what it's worth I I never got to",
    "start": "5770560",
    "end": "5775679"
  },
  {
    "text": "say share this with you so I'll share it on air to with you and thousands of listeners which is like I really loved",
    "start": "5775679",
    "end": "5781600"
  },
  {
    "text": "when you did that I loved your stint and your time Galia like I just I thought it was so cool because you were like you",
    "start": "5781600",
    "end": "5788080"
  },
  {
    "text": "had like I don't want to say golden handcuffs but you know you had a plushy job at Google for many years be on the",
    "start": "5788080",
    "end": "5793920"
  },
  {
    "text": "V8 team and then you kind of just went and did the like Indie open source",
    "start": "5793920",
    "end": "5798960"
  },
  {
    "text": "hacker thing for a while through ealia and got to kind of work in this Unshackled way and obviously you weren't",
    "start": "5798960",
    "end": "5805440"
  },
  {
    "text": "just a developer there I think you did you had some leadership roles which was fantastic but I just I I appreciated",
    "start": "5805440",
    "end": "5811080"
  },
  {
    "text": "seeing that move like it's not move that we get to see we see a lot of the opposite where people like you know companies like Google and Microsoft",
    "start": "5811080",
    "end": "5817360"
  },
  {
    "text": "poach Engineers from places like ealia and Boku or whatever and so it was just",
    "start": "5817360",
    "end": "5822800"
  },
  {
    "text": "it made me happy to see that Dan I just want to say you're just an awesome human being in general and I just I'm I'm happy we're lucky to have you dude",
    "start": "5822800",
    "end": "5829119"
  },
  {
    "text": "you're like your gold you know so yeah and eali is a Cooperative so I would got",
    "start": "5829119",
    "end": "5835159"
  },
  {
    "text": "a leadership position in the sense that I became a a partner of ealia like an equal co-owner of the company which is",
    "start": "5835159",
    "end": "5841360"
  },
  {
    "text": "what I think when I was there it was a little for half the company was was Partners so awes there's a lot of",
    "start": "5841360",
    "end": "5846440"
  },
  {
    "text": "emphasis on equality there which is something that I that I liked it's a pretty cool company yeah we should do a show on igalia at some point so that'll",
    "start": "5846440",
    "end": "5853880"
  },
  {
    "text": "put that in the queue as well like going into now we now have enough show topics I think to get us through to like June",
    "start": "5853880",
    "end": "5860599"
  },
  {
    "text": "next year so we'll see we'll see we'll see how much we can get through but no Dan thank you so much for such an",
    "start": "5860599",
    "end": "5867239"
  },
  {
    "text": "insightful and delightful discussion I mean obviously it's very clear that both JavaScript and CSS are moving towards",
    "start": "5867239",
    "end": "5873920"
  },
  {
    "text": "you know really good semantics in the core language without tooling and it's just really great to see all the little",
    "start": "5873920",
    "end": "5879800"
  },
  {
    "text": "gaps in the spec kind of fill in with these good ideas and um it's just humbling to watch this process also kind",
    "start": "5879800",
    "end": "5886560"
  },
  {
    "text": "of come together uh you know just as a consumer of these specs now that I'm not like super involved with the standards",
    "start": "5886560",
    "end": "5892800"
  },
  {
    "text": "process anymore so just want to say thank you for everything that you do my my friend and not just to you but thank",
    "start": "5892800",
    "end": "5899639"
  },
  {
    "text": "you to everyone involved in shaping the web as we know it it's the best thing we've ever made everyone the web is the",
    "start": "5899639",
    "end": "5906440"
  },
  {
    "text": "greatest thing it is the greatest thing Humanity has ever made like I will argue that with I think so hands down hands",
    "start": "5906440",
    "end": "5913560"
  },
  {
    "text": "down so it is our Collective knowledge base it is how we communicate and collaborate and build and create and",
    "start": "5913560",
    "end": "5919960"
  },
  {
    "text": "share but if you had to choose between the web and like bread which one would you choose I",
    "start": "5919960",
    "end": "5926320"
  },
  {
    "text": "mean honestly I think with the modern web I think chat gbt could help me figure out how to sustain myself with",
    "start": "5926320",
    "end": "5933440"
  },
  {
    "text": "without bread so you know I probably still choose the web I don't know I",
    "start": "5933440",
    "end": "5939599"
  },
  {
    "text": "would choose the bread over the web that's okay well I think we we we we see",
    "start": "5939599",
    "end": "5945760"
  },
  {
    "text": "who the true die hards are today anyways all right kids so with",
    "start": "5945760",
    "end": "5951440"
  },
  {
    "text": "that we'll end it it's been a really long discussion um there'll be lots of Great Links in the show notes thank you",
    "start": "5951440",
    "end": "5956960"
  },
  {
    "text": "all so much for your time another one in the can last show of",
    "start": "5956960",
    "end": "5962360"
  },
  {
    "text": "2023 holy moly what a Year y'all thank you for listening we love you all we'll",
    "start": "5962360",
    "end": "5967920"
  },
  {
    "text": "be back with a really fun New Year's show so please tune in for that and we have a really really really exciting",
    "start": "5967920",
    "end": "5974440"
  },
  {
    "text": "year planned ahead like y'all are going to love all the shows so thank you all we love you cheers bye",
    "start": "5974440",
    "end": "5983360"
  },
  {
    "text": "bye this is our final JS party episode of 2023 but don't worry we'll be back to",
    "start": "5987239",
    "end": "5994400"
  },
  {
    "text": "ring in 2024 on our annual New Year's party the first week in January thanks",
    "start": "5994400",
    "end": "6000000"
  },
  {
    "text": "to each and every one of you for listening along this year and hey if you have some downtime right now take a",
    "start": "6000000",
    "end": "6006040"
  },
  {
    "text": "moment hop over to Apple podcasts or Spotify and hit us up with five stars",
    "start": "6006040",
    "end": "6013080"
  },
  {
    "text": "maybe you write a nice review while you're at it we appreciate that JS part is edited by Jason bin produced by me",
    "start": "6013080",
    "end": "6020119"
  },
  {
    "text": "Jared Santo with break master cylinder on Beats if you dig the Beats search for",
    "start": "6020119",
    "end": "6025360"
  },
  {
    "text": "change log beats in your music app of choice for even more beats like these on behalf of Nick Amel Chris kall and the",
    "start": "6025360",
    "end": "6032920"
  },
  {
    "text": "entire JS party family have a great time with friends and family this December and we'll party together again next",
    "start": "6032920",
    "end": "6041060"
  },
  {
    "text": "[Music]",
    "start": "6041060",
    "end": "6048719"
  },
  {
    "text": "year",
    "start": "6048719",
    "end": "6051719"
  }
]