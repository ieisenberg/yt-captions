[
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "9120",
    "end": "15879"
  },
  {
    "text": "from all around the go Community good news everyone our new weekly podcast",
    "start": "15879",
    "end": "21680"
  },
  {
    "text": "plus email newsletter covers all the developer news that's worth your attention we keep it brief entertaining",
    "start": "21680",
    "end": "27240"
  },
  {
    "text": "and always on point I'd love for you to check it out at changel log.com newws",
    "start": "27240",
    "end": "32398"
  },
  {
    "text": "seriously do it thanks to our partners at fastly for Shipp and go time all around the world to wherever you listen",
    "start": "32399",
    "end": "38559"
  },
  {
    "text": "and to fly.io host to your app close to your users no Ops required okay here we",
    "start": "38559",
    "end": "45530"
  },
  {
    "text": "[Music]",
    "start": "45530",
    "end": "48770"
  },
  {
    "text": "[Music]",
    "start": "51510",
    "end": "56879"
  },
  {
    "text": "go hello everyone and welcome to go time today I am joined by three guests and",
    "start": "56879",
    "end": "62120"
  },
  {
    "text": "Chris our first guest is Jonathan Norris who is the co-founder and CTO of Dev",
    "start": "62120",
    "end": "67159"
  },
  {
    "text": "cycle he's built multiple developer facing products and he has experience in designing and building large scalable",
    "start": "67159",
    "end": "73759"
  },
  {
    "text": "systems Jonathan how are you doing hey I'm doing great and glad to be here and really excited to talk about yeah",
    "start": "73759",
    "end": "79640"
  },
  {
    "text": "everything we're working on and a little bit of web assembly and go happy to have you our next guest is Adam Wooten he's",
    "start": "79640",
    "end": "86640"
  },
  {
    "text": "the Chief Architect at Dev cycle and he's responsible for structure performance and system scalability Adam",
    "start": "86640",
    "end": "92399"
  },
  {
    "text": "how are you doing I'm good excited for the chat today happy to have you and third we have Brad Van vute who has",
    "start": "92399",
    "end": "99320"
  },
  {
    "text": "joined us in the past to talk about battlesnake which is a company he founded battlesnake has been acquired by",
    "start": "99320",
    "end": "104439"
  },
  {
    "text": "Dev cycle I believe that was earlier this year and he's now the head of strategy and growth at Dev cycle Brad",
    "start": "104439",
    "end": "109600"
  },
  {
    "text": "how are you good good how you doing John good it's uh feels like it's been a while since you've been on yeah it's",
    "start": "109600",
    "end": "115119"
  },
  {
    "text": "it's been a little bit I don't think it actually has been that long but yeah but it just feels like it always always happy to show up and then Chris is also",
    "start": "115119",
    "end": "121479"
  },
  {
    "text": "joining us Chris how are you I'm doing well glad to be back on some episodes I was gone for a bit there so yeah I don't",
    "start": "121479",
    "end": "127680"
  },
  {
    "text": "think I've hosted with you in a while yeah it's been probably like a year or so it it it somehow it feels like I was",
    "start": "127680",
    "end": "134319"
  },
  {
    "text": "just randomly on episodes with the same two people all the time and I don't know how that happened but okay so today",
    "start": "134319",
    "end": "140440"
  },
  {
    "text": "we're talking about web assembly and basically the general idea is I want to",
    "start": "140440",
    "end": "145640"
  },
  {
    "text": "sort of start by talking about what web assembly is why people should care about it and then we can talk a little bit",
    "start": "145640",
    "end": "151000"
  },
  {
    "text": "more about your experience Jonathan Adam and Brad using it at Dev cycle and how you've used it to build different things",
    "start": "151000",
    "end": "156800"
  },
  {
    "text": "and you know where you find Value in it so I suppose at a high level what is web",
    "start": "156800",
    "end": "162280"
  },
  {
    "text": "assembly and like why should people care about it yeah I can I can start off there web assembly is basically a memory",
    "start": "162280",
    "end": "169680"
  },
  {
    "text": "safe sandboxed execution environment that was originally built for bringing",
    "start": "169680",
    "end": "174840"
  },
  {
    "text": "sort of lower level native like code to the web and so obviously it's branded as",
    "start": "174840",
    "end": "181440"
  },
  {
    "text": "web assembly right and really web assembly has evolved into much more of a like crossplatform way of executing code",
    "start": "181440",
    "end": "189599"
  },
  {
    "text": "at a near native speed across multiple different environments so everything from the web to at the edge with",
    "start": "189599",
    "end": "197080"
  },
  {
    "text": "serverless environments to in your servers across multiple different language types and they're really",
    "start": "197080",
    "end": "203159"
  },
  {
    "text": "designed to create small binaries that could be started up really quickly and can be executed at really sort of near",
    "start": "203159",
    "end": "210599"
  },
  {
    "text": "native speed with a really tight sort of security and sandbox environment around them um is is kind of kind of the the",
    "start": "210599",
    "end": "217840"
  },
  {
    "text": "gist of what what web assembly is all right awesome so I guess where do you",
    "start": "217840",
    "end": "223319"
  },
  {
    "text": "guys want to start with this do you want to start by talking about you know where people might start using web assembly or",
    "start": "223319",
    "end": "228360"
  },
  {
    "text": "do you want to start talking about you know like what historically has been done in instead of something like web assembly yeah we can we can we can get",
    "start": "228360",
    "end": "235319"
  },
  {
    "text": "into yeah either of those so let probably start with some of the the the common use cases for web assembly right",
    "start": "235319",
    "end": "240879"
  },
  {
    "text": "and so I think some of the the most common ones uh for web assembly have really been bringing functionality to a",
    "start": "240879",
    "end": "248040"
  },
  {
    "text": "web browser that maybe didn't exist natively right and so you think of something like figma so figma for those",
    "start": "248040",
    "end": "253560"
  },
  {
    "text": "who don't know it's a design tool that allows you to basically do your full design workflow in a browser-based",
    "start": "253560",
    "end": "259880"
  },
  {
    "text": "environment and that is primarily powered through a bunch of web assembly libraries behind the scenes if you want",
    "start": "259880",
    "end": "266160"
  },
  {
    "text": "to do like deep data analysis or or think run things like you might run in in python or R and like and sort of data",
    "start": "266160",
    "end": "273039"
  },
  {
    "text": "analysis tool chains there's lots of that type of stuff you can do with web assembly within the browsers and then also games so like a lot of I think",
    "start": "273039",
    "end": "280280"
  },
  {
    "text": "every a bunch of people have seen on Hacker News like you can run Doom in your browser or things like that like old school games all of those are",
    "start": "280280",
    "end": "286479"
  },
  {
    "text": "basically just people compiling C or C++ code bases into web assembly and loading it into your browser runtime and letting",
    "start": "286479",
    "end": "293120"
  },
  {
    "text": "you sort of Run games in your browser and um but really I think where the energy behind web assembly is coming is",
    "start": "293120",
    "end": "299880"
  },
  {
    "text": "creating that portable crossplatform binary that can be executed either in the browser but in a lot of cases now in",
    "start": "299880",
    "end": "307199"
  },
  {
    "text": "the server side are at the edge so Edge Computing is really starting to pick up around web assembly because you can",
    "start": "307199",
    "end": "314039"
  },
  {
    "text": "start up a web assembly run time in in Nan seconds maybe milliseconds in most cases depending how how big your binary",
    "start": "314039",
    "end": "320680"
  },
  {
    "text": "is and really scale your Edge Computing really really fast up and down and so there's lots of momentum behind using",
    "start": "320680",
    "end": "327400"
  },
  {
    "text": "web assembly at the edge and and we're also we're using at the edge we're also using it uh for sdks across a bunch of",
    "start": "327400",
    "end": "332960"
  },
  {
    "text": "different server side languages so I'm assuming this the fact that you can run this at the edge and do these other",
    "start": "332960",
    "end": "338199"
  },
  {
    "text": "things are the reason why like when you talk about figma and some of these tools theoretically I assume they could be",
    "start": "338199",
    "end": "343680"
  },
  {
    "text": "built with JavaScript I don't know how performant they'd be but you know theoretically you should be able to build pretty much any software of",
    "start": "343680",
    "end": "349840"
  },
  {
    "text": "JavaScript so would that be the reasoning there that you know it's it's not just the fact that you know",
    "start": "349840",
    "end": "354880"
  },
  {
    "text": "JavaScript could have done it it's the fact that you could also you deploy this on the edge and do all that extra stuff stuff sorry I feel like I I botched that",
    "start": "354880",
    "end": "361680"
  },
  {
    "text": "a bit in explaining it so I guess what I'm trying to get at is what what do you think the main motivation is that cause",
    "start": "361680",
    "end": "367680"
  },
  {
    "text": "people to switch from like trying to rewrite all these libraries in JavaScript to web assembly and I think",
    "start": "367680",
    "end": "373080"
  },
  {
    "text": "what you were saying is is all the edge Computing and stuff is the main factor there is that accurate well I think",
    "start": "373080",
    "end": "378160"
  },
  {
    "text": "there's also like a performance aspect to it as well like as you as you were mentioning like figma could have been written in JavaScript but like really it",
    "start": "378160",
    "end": "384400"
  },
  {
    "text": "actually couldn't have been because like you just would never be able to write something as complicated as fig with",
    "start": "384400",
    "end": "389880"
  },
  {
    "text": "like as many sort of like lowlevel computations that have to go on in just like plain JavaScript like it just",
    "start": "389880",
    "end": "395720"
  },
  {
    "text": "wouldn't be fast enough like web assembly kind of gives you like an environment to execute your code and that's like sort of like closer to the",
    "start": "395720",
    "end": "402240"
  },
  {
    "text": "actual Hardware so it's like it's it's easier to write performant applications and for things like figma you're dealing",
    "start": "402240",
    "end": "407400"
  },
  {
    "text": "with like huge amounts of like data being moved around and shuffled and like transformed and that sort of thing um",
    "start": "407400",
    "end": "413800"
  },
  {
    "text": "and those kinds of operations like you just can't write them efficiently in JavaScript you need some sort of like compiled layer to do that that so I",
    "start": "413800",
    "end": "420120"
  },
  {
    "text": "think that's like another big benefit of it so the amazing thing about JavaScript is that JavaScript can actually be",
    "start": "420120",
    "end": "425720"
  },
  {
    "text": "really fast um because V8 is like this magic piece of software like you haven't looked at the internals of like how V8",
    "start": "425720",
    "end": "432240"
  },
  {
    "text": "works and how it optimizes JavaScript code it really is like a pretty magic piece of software that I'm sure hundreds",
    "start": "432240",
    "end": "438360"
  },
  {
    "text": "of millions of like developer hours have gone into making this amazing amazing thing and so V8 can get your JavaScript",
    "start": "438360",
    "end": "445639"
  },
  {
    "text": "really really fast like very close to Native but it because it's a compiler it takes time to get there right like so",
    "start": "445639",
    "end": "452120"
  },
  {
    "text": "the first execution of your JavaScript code will be kind of slow and then as the jit compiler and V8 and spider",
    "start": "452120",
    "end": "458879"
  },
  {
    "text": "monkey and all these other uh engines sort of kick in and compile your your JavaScript code into lower and lower",
    "start": "458879",
    "end": "464240"
  },
  {
    "text": "lower levels your code gets faster and faster but with web assembly you can basically compile down to that sort of",
    "start": "464240",
    "end": "470039"
  },
  {
    "text": "near native speed like running the same code and go or or or C or rust or C++ or",
    "start": "470039",
    "end": "476759"
  },
  {
    "text": "something like that you can get a similar performance level right out of the box by sort of compiling your target",
    "start": "476759",
    "end": "482159"
  },
  {
    "text": "to to web assembly and executing that in the browser environment okay so this is",
    "start": "482159",
    "end": "488000"
  },
  {
    "text": "go time obviously so it stands the reason that a lot of our listeners want to use go with web assembly if they're",
    "start": "488000",
    "end": "493240"
  },
  {
    "text": "listening so I guess to get started how how would somebody you know get started using web assembly with go yeah so",
    "start": "493240",
    "end": "500039"
  },
  {
    "text": "there's there's two ways so you can either compile your existing go code to web assembly and so there's a couple",
    "start": "500039",
    "end": "506000"
  },
  {
    "text": "projects out there around that and and you can actually create portable code out of your go code so if you actually",
    "start": "506000",
    "end": "512320"
  },
  {
    "text": "want to like say take this go Library you have and execute it at this The Edge",
    "start": "512320",
    "end": "517399"
  },
  {
    "text": "or or execute in a web environment or even a a mobile environment because web assembly can be run in Mobile you can",
    "start": "517399",
    "end": "523159"
  },
  {
    "text": "take that go code and package it into a web assembly binary it's a pretty simple thing to do it's a compiler Target you",
    "start": "523159",
    "end": "528800"
  },
  {
    "text": "can you can Google it the one advice I have there is that the standard sort of compilation creates pretty large",
    "start": "528800",
    "end": "534959"
  },
  {
    "text": "binaries like multi megabyte binaries which don't sound that big but actually in the web assembly world you want to",
    "start": "534959",
    "end": "541120"
  },
  {
    "text": "get down to like I don't know single digit kilobyte binaries so that they can download really quickly and execute and",
    "start": "541120",
    "end": "546800"
  },
  {
    "text": "and load it into the runtime really quickly so the main advice I have for anyone looking to do that is to use tiny",
    "start": "546800",
    "end": "552279"
  },
  {
    "text": "go as sort of the the layer it reduces the the binary size a lot on your output and obviously obviously restricts what",
    "start": "552279",
    "end": "559600"
  },
  {
    "text": "you can use within go but my advice there for anyone looking to do that is to use tiny go and then if you're",
    "start": "559600",
    "end": "565040"
  },
  {
    "text": "looking to take web assembly code that you've maybe written in a another language and execute it within go the",
    "start": "565040",
    "end": "572079"
  },
  {
    "text": "wasam time uh run times are what we what we highly recommend they're the main",
    "start": "572079",
    "end": "577760"
  },
  {
    "text": "supported sort of run times by the bik code Alliance which is the the open source Alliance behind web assembly and",
    "start": "577760",
    "end": "583959"
  },
  {
    "text": "are well supported and well battled tested at this point and and those are sort of the run times that we're trying",
    "start": "583959",
    "end": "589839"
  },
  {
    "text": "to use ourselves in all of our sdks across all of our different languages so when it comes time to actually write the",
    "start": "589839",
    "end": "595240"
  },
  {
    "text": "code like this is it going to I'm trying to think of an example like there's there's a couple libraries out there",
    "start": "595240",
    "end": "601760"
  },
  {
    "text": "that allow you to write go code that like basically generates react or something like that and in a lot of those you end up having to write very",
    "start": "601760",
    "end": "608680"
  },
  {
    "text": "specific code it's not it doesn't really feel like go code it feels like you're writing like go merged with react or",
    "start": "608680",
    "end": "613720"
  },
  {
    "text": "something like that so when you're doing web assembly do you have to like drastically think about how you're thinking about go code or does it really",
    "start": "613720",
    "end": "619640"
  },
  {
    "text": "feel like you're writing go code yeah I think that's where we can get into the challenges of web assembly so you really",
    "start": "619640",
    "end": "624680"
  },
  {
    "text": "have to Define your interface and I think I think that's the biggest challenge of like working with web assembly right now is you really have to",
    "start": "624680",
    "end": "631000"
  },
  {
    "text": "understand sort of the interface between your your native code and your web assembly code to build sort of those",
    "start": "631000",
    "end": "638440"
  },
  {
    "text": "those features well and I know Adam could probably jump into this a bit but that's where we faced the biggest",
    "start": "638440",
    "end": "644200"
  },
  {
    "text": "challenges if you want to get performance web assembly code it's really great at at doing CPU Cycles it's",
    "start": "644200",
    "end": "650519"
  },
  {
    "text": "not so great at sort of managing memory and and transferring data in in and out of between your native code and the web",
    "start": "650519",
    "end": "656720"
  },
  {
    "text": "assembly code so that's where you really have to be be careful and and and think about sort of how much data you're",
    "start": "656720",
    "end": "662519"
  },
  {
    "text": "passing into your web assembly runtimes and and how much data you're you're sort of fetching out of it and and how you",
    "start": "662519",
    "end": "668600"
  },
  {
    "text": "optimize that path yeah like I guess just to jump in here like one one issue that we really ran into was that it's",
    "start": "668600",
    "end": "674040"
  },
  {
    "text": "not really possible to exchange sort of like complex data structures in memory between like some native layer like go",
    "start": "674040",
    "end": "680279"
  },
  {
    "text": "and like a web assembly layer and really you basically have to think about like how can I pass my data in a way that can",
    "start": "680279",
    "end": "685360"
  },
  {
    "text": "be like serialized and deserialized as efficiently as possible because you can't do something like take uh like an",
    "start": "685360",
    "end": "691440"
  },
  {
    "text": "instance of a of a class or something and then just like use it directly in your wassom side but what you can do is",
    "start": "691440",
    "end": "697480"
  },
  {
    "text": "figure out how to like turn that class into some like representation in memory that you know how to read on the web",
    "start": "697480",
    "end": "702920"
  },
  {
    "text": "assembly side so there isn't sort of like a direct one to one of like this object becomes this object in web assembly but instead there's kind of",
    "start": "702920",
    "end": "709880"
  },
  {
    "text": "like yeah turn this into like like for example in our case we ended up using Proto buff as like a as like a serializer but there's other um examples",
    "start": "709880",
    "end": "716240"
  },
  {
    "text": "of how to do that like I think Google has like a frame buffer type of Library we originally were using Json but it was",
    "start": "716240",
    "end": "721360"
  },
  {
    "text": "a lot slower obviously than than protuff um so there's different strategies that people use to just kind of like efficiently Shuffle data back and forth",
    "start": "721360",
    "end": "728360"
  },
  {
    "text": "when they're executing their Wasa modules and it's really optimized like if you're just dealing with like binary data so like there's a lot of examples",
    "start": "728360",
    "end": "734519"
  },
  {
    "text": "of like using web assembly for like video encoding or audio filtering or",
    "start": "734519",
    "end": "739920"
  },
  {
    "text": "like I wouldn't be surprised if like the tool we're using today what Riverside is using some web assembly modules behind",
    "start": "739920",
    "end": "745040"
  },
  {
    "text": "the scene to like to do a lot of the the audio filtering and and and video encoding and types of things in the",
    "start": "745040",
    "end": "751519"
  },
  {
    "text": "browser level so where you're just dealing with sort of like structured binary data that is easily pass between",
    "start": "751519",
    "end": "758000"
  },
  {
    "text": "two systems between sort of like the JavaScript side or the go side and the web assembly side so in those use cases",
    "start": "758000",
    "end": "763040"
  },
  {
    "text": "there's a lot of like image processing um web assembly binaries out there that'll let you sort of do image",
    "start": "763040",
    "end": "768720"
  },
  {
    "text": "analysis or image sort of like filtering and things like that um within your browser and do it much faster than you",
    "start": "768720",
    "end": "773959"
  },
  {
    "text": "could do it within JavaScript by just looking at sort of the binary um data and passing that buffer between your",
    "start": "773959",
    "end": "779800"
  },
  {
    "text": "different environments so when Brad reached out to me um asking about talking about web assembly he said that",
    "start": "779800",
    "end": "784920"
  },
  {
    "text": "you guys had some pretty interesting use cases for web assembly at Dev cycle so can you share a little bit about what",
    "start": "784920",
    "end": "791000"
  },
  {
    "text": "you guys are building that required the use of web assembly or maybe not required but benefited from it yeah",
    "start": "791000",
    "end": "797639"
  },
  {
    "text": "happy to do so so Dev cycle we're we're building a a feature management tool so we're building a feature flagging tool",
    "start": "797639",
    "end": "803480"
  },
  {
    "text": "that needs to work across many sdks and many different environments right and",
    "start": "803480",
    "end": "809079"
  },
  {
    "text": "you can imagine for a feature flagging tool like we want to be able to support",
    "start": "809079",
    "end": "814199"
  },
  {
    "text": "as many different customers that come to us and want to use our software and and to do that with a small team either",
    "start": "814199",
    "end": "819680"
  },
  {
    "text": "requires you creating lots of custom sdks for all the different languages Under the Sun or you can figure out a",
    "start": "819680",
    "end": "827279"
  },
  {
    "text": "way to use the same codebase across multiple environments and that's that's really where we came to web assembly and",
    "start": "827279",
    "end": "832519"
  },
  {
    "text": "we've been playing around with it for a couple years with our previous products and really took the dive with Dev cycle",
    "start": "832519",
    "end": "838360"
  },
  {
    "text": "to say okay we're going to create one common web assembly sort of codebase that has all of our Core Business logic",
    "start": "838360",
    "end": "844680"
  },
  {
    "text": "all of our logic about how we decide which user should be bucketed into which",
    "start": "844680",
    "end": "850199"
  },
  {
    "text": "feature flag and and decide sort of the rollouts and all the sort of important business decisions that we need this Co",
    "start": "850199",
    "end": "856560"
  },
  {
    "text": "piece of code to be super battle hardened to have every test we can think of uh being run against it frequently",
    "start": "856560",
    "end": "863079"
  },
  {
    "text": "and be as solid as possible and so by using web assembly allowed us to create a really battle heartened library that",
    "start": "863079",
    "end": "869839"
  },
  {
    "text": "we could then share across everywhere we need it so we're using that web assembly library in our workers that are are",
    "start": "869839",
    "end": "875920"
  },
  {
    "text": "running our scalable apis that run within Cloud Flare's Edge worker environment and then we're using that",
    "start": "875920",
    "end": "882160"
  },
  {
    "text": "same web assembly code in all of our server side sdks so everything from go to Java to node.js to we're also using C",
    "start": "882160",
    "end": "891120"
  },
  {
    "text": "I think Python and and a couple others are coming soon and so all the major sort of serers side languages that we",
    "start": "891120",
    "end": "897839"
  },
  {
    "text": "need to support as a feature flagging platform we can now be really confident that we can build those sdks quickly and",
    "start": "897839",
    "end": "904800"
  },
  {
    "text": "we can ensure that they all work as we expect because we're using basically the same core code across all those sdks and",
    "start": "904800",
    "end": "912519"
  },
  {
    "text": "across our apis so it just it's brought in a ton of business value for us and and really reduced the amount of code",
    "start": "912519",
    "end": "918839"
  },
  {
    "text": "that we've had to write basically I'm I'm curious when when the decision was being made it was before my time at Dev",
    "start": "918839",
    "end": "925800"
  },
  {
    "text": "cycle but when the decision was being made to go with wasm like what what was the community like what how what was the",
    "start": "925800",
    "end": "931160"
  },
  {
    "text": "maturity of wasm in general and like we you know we hadn't quite seen like figma is a really good example a company",
    "start": "931160",
    "end": "937800"
  },
  {
    "text": "that's using wasm at at incredible scale right um to great benefit but wasm is like web assembly is still pretty new",
    "start": "937800",
    "end": "944639"
  },
  {
    "text": "and it's still kind of figuring itself out and it's still kind of figuring out the place in the ecosystem so what was the community like when you were",
    "start": "944639",
    "end": "951199"
  },
  {
    "text": "deciding when you know when Dev cycle was deciding to opt into it so hard had had to do much up in there sure yeah I",
    "start": "951199",
    "end": "957839"
  },
  {
    "text": "mean like I think one thing that's been kind of interesting is that we've sort of felt like we've been a bit on like the bleeding edge of of using this stuff",
    "start": "957839",
    "end": "963600"
  },
  {
    "text": "the entire time that we've been like trying to employ it in our sdks and I would say that like when we first started using it I mean there's there's",
    "start": "963600",
    "end": "969519"
  },
  {
    "text": "a pretty decently sized Community around it but a lot of the like specific tooling that we were using was like I",
    "start": "969519",
    "end": "975040"
  },
  {
    "text": "would say fairly kind of like fresh and so it's kind of been interesting because uh We've sort of been able to like watch",
    "start": "975040",
    "end": "980160"
  },
  {
    "text": "it grow with our usage of it like one of the main sort of uh tools that we use is",
    "start": "980160",
    "end": "985519"
  },
  {
    "text": "assembly script and so that's like a language that basically looks sort of like typescript or like the typed",
    "start": "985519",
    "end": "991000"
  },
  {
    "text": "version of JavaScript typescript but it compiles to basically like a web assembly module and that language was",
    "start": "991000",
    "end": "997759"
  },
  {
    "text": "like pretty new when we started using it like I think it had only been out for like maybe less than a year and sort of like as we've been using it we've seen",
    "start": "997759",
    "end": "1003880"
  },
  {
    "text": "it like vastly improved we've seen the like the community grow like quite a lot and we've been like pretty active in",
    "start": "1003880",
    "end": "1009720"
  },
  {
    "text": "their Discord they have like a really good community in there people that like answer your questions if you have issues with it but yeah so it's been it's been",
    "start": "1009720",
    "end": "1016199"
  },
  {
    "text": "really interesting to kind of like sort of like see the the excitement and the like momentum growing behind behind",
    "start": "1016199",
    "end": "1021240"
  },
  {
    "text": "using this ecosystem and I would say like the ecosystem for people using web assembly in the browsers has gotten",
    "start": "1021240",
    "end": "1027918"
  },
  {
    "text": "pretty mature like I think browser support for web assembly has been in place for for a long time now I don't",
    "start": "1027919",
    "end": "1034079"
  },
  {
    "text": "know exactly number of years off off the top of my head but it's many years and web assembly actually I think I was",
    "start": "1034079",
    "end": "1039480"
  },
  {
    "text": "talking to some of the folks behind web assembly last week at coupon in in Amsterdam and I think it it was started",
    "start": "1039480",
    "end": "1045880"
  },
  {
    "text": "around 12 years ago or 10 years ago like it's been around a lot longer than most people think but it was really",
    "start": "1045880",
    "end": "1051000"
  },
  {
    "text": "originally about bringing your sort of like more lower level code bases like your C++ code bases your go your your",
    "start": "1051000",
    "end": "1058400"
  },
  {
    "text": "your rust code bases into being able to execute them in a browser environment but really sort of where the community",
    "start": "1058400",
    "end": "1064320"
  },
  {
    "text": "is going is expanding beyond that which is brings her the the power of this very secure small runtime to other places",
    "start": "1064320",
    "end": "1071720"
  },
  {
    "text": "like your server side use cases your your Edge run times things like that and that's really sort of where the the",
    "start": "1071720",
    "end": "1077440"
  },
  {
    "text": "community has started to grow and there's a bunch of new startups that I got to talk to last week who are really",
    "start": "1077440",
    "end": "1082960"
  },
  {
    "text": "trying to basically like replace Docker containers in a lot of ways with with",
    "start": "1082960",
    "end": "1088039"
  },
  {
    "text": "web assembly run times for for things like kubernetes and at the edge so it's a really exciting space and the",
    "start": "1088039",
    "end": "1093240"
  },
  {
    "text": "community is is growing and and accelerating really quickly here yeah I found it very interesting how uh like",
    "start": "1093240",
    "end": "1100080"
  },
  {
    "text": "you said the the original goal of this was to you know let's bring some Unreal Engine I think was one of the things",
    "start": "1100080",
    "end": "1105919"
  },
  {
    "text": "that they compiled via inscription and had it running in the browser I was like this is awesome that was even before we",
    "start": "1105919",
    "end": "1111480"
  },
  {
    "text": "had assembly uh web assembly and how like the whole goal of that was like okay let's move it into the browser and",
    "start": "1111480",
    "end": "1117799"
  },
  {
    "text": "no one kind of thought of at the time I don't think I don't think anybody really thought of it that like wow the browser",
    "start": "1117799",
    "end": "1123679"
  },
  {
    "text": "is actually this incredibly sandboxed environment and we have not really thought about that because like you know",
    "start": "1123679",
    "end": "1129480"
  },
  {
    "text": "a lot of back end Engineers don't pay a whole lot of attention to front end so it's just like oh yeah the browser just kind of works but it's incredibly robust",
    "start": "1129480",
    "end": "1135720"
  },
  {
    "text": "when it comes to sandboxing and web assembly had to do that as well so that's one of the things I always found",
    "start": "1135720",
    "end": "1140880"
  },
  {
    "text": "incredible about web assembly is it's like oh yeah we've been trying to do all the sandboxing on the server side and",
    "start": "1140880",
    "end": "1146000"
  },
  {
    "text": "it's just been we've tried it winds up being pretty messy outside of virtual machines so I I found that whole Arc and",
    "start": "1146000",
    "end": "1153159"
  },
  {
    "text": "that whole story kind of incredible and of itself you mentioned using assembly script I'm just curious like what's been",
    "start": "1153159",
    "end": "1160320"
  },
  {
    "text": "the experience actually writing code like writing you know web assembly and",
    "start": "1160320",
    "end": "1165360"
  },
  {
    "text": "assembly script cuz I've heard it can be a bit rough cuz it's a bit like typescript but there's a lot of parts of",
    "start": "1165360",
    "end": "1170679"
  },
  {
    "text": "it that aren't and I know that web assembly also like you basically get nothing like there's it's just here's a",
    "start": "1170679",
    "end": "1176640"
  },
  {
    "text": "box you can run some code in it but don't expect it to be like an actual computer yeah I mean I would say like um",
    "start": "1176640",
    "end": "1182520"
  },
  {
    "text": "from our experience like there's definitely a lot of pitfalls with using it and I think it's it's maybe a bit deceptive when you first start learning",
    "start": "1182520",
    "end": "1189320"
  },
  {
    "text": "it how similar it can look to typescript because under the hood it really doesn't work like typescript at all obviously",
    "start": "1189320",
    "end": "1195799"
  },
  {
    "text": "and so you really have to kind of like like especially when you you have like when you're sensitive to Performance or when you're sensitive to things like",
    "start": "1195799",
    "end": "1201159"
  },
  {
    "text": "that like you really have to start like looking at like the actual output that it's giving you and trying to figure out like what your code is ultimately doing",
    "start": "1201159",
    "end": "1207919"
  },
  {
    "text": "inside of the like the WM environment because you can very easily write like extremely inefficient code that would",
    "start": "1207919",
    "end": "1214799"
  },
  {
    "text": "not seem inefficient if you were just running in a JavaScript environment and I think Jonathan mentioned earlier like the V8 like jit compiler is like really",
    "start": "1214799",
    "end": "1221559"
  },
  {
    "text": "good at sort of like once it executes some code path that might not be efficient the first time it like really",
    "start": "1221559",
    "end": "1226919"
  },
  {
    "text": "quickly optimizes it so that the next time it runs it can be a lot faster none of that is the case in the assembly",
    "start": "1226919",
    "end": "1233559"
  },
  {
    "text": "script world so if you write code that like might not have seemed slow in",
    "start": "1233559",
    "end": "1238760"
  },
  {
    "text": "typescript it will end up being slow in assembly script and we also found like the further we got into it the more we",
    "start": "1238760",
    "end": "1243880"
  },
  {
    "text": "sort of had to understand the underlying like memory structure of like how it allocates memory for the various different kinds of like standard objects",
    "start": "1243880",
    "end": "1249760"
  },
  {
    "text": "that you can use um like we had to kind of figure out like how to Strings work like how do class instantiations work like where does the garbage collector",
    "start": "1249760",
    "end": "1255480"
  },
  {
    "text": "kick in like um there's kind of like a lot of factors invol evolved which we we got into more and more as we were trying",
    "start": "1255480",
    "end": "1260520"
  },
  {
    "text": "to to optimize performance so it was it was really easy to get something going that like worked and passed all of our",
    "start": "1260520",
    "end": "1266919"
  },
  {
    "text": "unit tests but once we sort of started to like profile it and Benchmark it that's when we started to realize like",
    "start": "1266919",
    "end": "1272279"
  },
  {
    "text": "oh a lot of the assumptions we've made about like how we can write this are actually like not true and we need to",
    "start": "1272279",
    "end": "1278400"
  },
  {
    "text": "start sort of like rethinking some of it to to make it performant yeah for context like we were coming from a",
    "start": "1278400",
    "end": "1283840"
  },
  {
    "text": "typescript code base that basically wanted to make work in web assembly right and so it was kind of the Natural",
    "start": "1283840",
    "end": "1289720"
  },
  {
    "text": "Choice right and so basically we took that typescript code base and we basically had to go in and basically",
    "start": "1289720",
    "end": "1295080"
  },
  {
    "text": "change all the higher level types to lower level primitive types right and then we had to remove things like you",
    "start": "1295080",
    "end": "1301360"
  },
  {
    "text": "can't do closures or things like that in assembly scripts so we had to refactor a bunch of the code back down to like",
    "start": "1301360",
    "end": "1306799"
  },
  {
    "text": "lower level Primitives sort of going back in time a little bit to simpler times and and we were able to get like",
    "start": "1306799",
    "end": "1312840"
  },
  {
    "text": "convert our fairly large codebase to assembly script in under a week and getting it passing all of our tests and",
    "start": "1312840",
    "end": "1318159"
  },
  {
    "text": "and functional and and and so it really like it I think it made a big impression on us on how quickly we were able to get",
    "start": "1318159",
    "end": "1324360"
  },
  {
    "text": "something going but yeah as we get into uh the project we've been working on lately which has been optimizing our our",
    "start": "1324360",
    "end": "1331320"
  },
  {
    "text": "go SDK to sort of the nanc level there's definitely like yeah a lot of roadblocks that we we ran into along the way um",
    "start": "1331320",
    "end": "1337960"
  },
  {
    "text": "with with the assembly script side of that yeah I was hoping we could we could dig into that a little bit further I",
    "start": "1337960",
    "end": "1343039"
  },
  {
    "text": "think Dev Cycle's use case is sort of unique in this space and that and and Jonathan you're you're you're saying you",
    "start": "1343039",
    "end": "1350159"
  },
  {
    "text": "know you're kind of scoping this a bit like we're we're talking about ultr low like nanc level latency we're talking",
    "start": "1350159",
    "end": "1356120"
  },
  {
    "text": "about Edge Computing we're talking about running things in the browser as close to the user as possible and so I think the dev cycle use case is far beyond",
    "start": "1356120",
    "end": "1363679"
  },
  {
    "text": "just you know the the cross compilation the the shared binaries sort of benefits",
    "start": "1363679",
    "end": "1368960"
  },
  {
    "text": "of web assembly and really what we're talking about is like super micro optimizations and and very large scale",
    "start": "1368960",
    "end": "1375600"
  },
  {
    "text": "performance right if you look at sort of how how Dev cycle infrastructure operates so I'm I'm hoping you know if",
    "start": "1375600",
    "end": "1381840"
  },
  {
    "text": "we can dig into sort of the you know let's get into the the gritty sort of technical details of like what was it",
    "start": "1381840",
    "end": "1388520"
  },
  {
    "text": "like how did you go from sort of web assembly code that ran to like how do we",
    "start": "1388520",
    "end": "1393600"
  },
  {
    "text": "make it run really really fast specifically in in a go run time right yeah I'll provide some context to the",
    "start": "1393600",
    "end": "1400159"
  },
  {
    "text": "optimization problem then Adam can dive into some of the details there but basically we were we were basically",
    "start": "1400159",
    "end": "1405760"
  },
  {
    "text": "challenged by a new customer who is running a global CDN Network and that Global CDN is built upon a go codebase",
    "start": "1405760",
    "end": "1412799"
  },
  {
    "text": "and we're like okay this is a real challenge for us like we we have to take this challenge to optimize our web",
    "start": "1412799",
    "end": "1418279"
  },
  {
    "text": "assembly code as much as possible so we can make as little impact to the performance of their CDN code run and go",
    "start": "1418279",
    "end": "1425640"
  },
  {
    "text": "and evaluating say tens to hundreds of flags at any any given time that yeah so",
    "start": "1425640",
    "end": "1430840"
  },
  {
    "text": "that was sort of the challenge put in front of us and we kind of naively said okay let's take it on and let's dig into",
    "start": "1430840",
    "end": "1435960"
  },
  {
    "text": "every single little detail Within in the web assembly code and and start looking at sort of like everything we can do to",
    "start": "1435960",
    "end": "1441840"
  },
  {
    "text": "sort of optimize the performance of it and yeah there's definitely some interesting interesting things we found along the way I don't know Adam if you",
    "start": "1441840",
    "end": "1447960"
  },
  {
    "text": "want to start with like where we where we started from because we we didn't start from a good place but we got to got to somewhere pretty good by the end",
    "start": "1447960",
    "end": "1454159"
  },
  {
    "text": "yeah I mean as I kind of alluded to earlier like our goal originally with this was just to get something working at feature parody with our original",
    "start": "1454159",
    "end": "1460760"
  },
  {
    "text": "typescript code so we weren't really super concerned with actually how performant it was and it was only once we started to dig into the performance",
    "start": "1460760",
    "end": "1466880"
  },
  {
    "text": "metrics that we realized like how far we needed to go from there so our initial performance uh metrics we basically we",
    "start": "1466880",
    "end": "1473159"
  },
  {
    "text": "are measuring in terms of evaluations of a user against a variable so the dev cycle SDK you're basically asking it for",
    "start": "1473159",
    "end": "1480279"
  },
  {
    "text": "what is the value of this variable given this user data that's sort of the idea of a feature flagging platform it's like given this user what value of this",
    "start": "1480279",
    "end": "1486840"
  },
  {
    "text": "variable do they get and in our case each one of those evaluations in the very first version of this code was over",
    "start": "1486840",
    "end": "1493760"
  },
  {
    "text": "like a couple of milliseconds which is really really slow like we're talking about like a CDN here that's like",
    "start": "1493760",
    "end": "1500039"
  },
  {
    "text": "they're targeting like 10 to 15 milliseconds in total for like their entire request Handler which might",
    "start": "1500039",
    "end": "1506039"
  },
  {
    "text": "evaluate like 10 or 100 Dev cycle variables where each one of them would be taking two to three milliseconds in",
    "start": "1506039",
    "end": "1511200"
  },
  {
    "text": "the original code uh so obviously that was like an untenable like uh performance level so a lot of the work",
    "start": "1511200",
    "end": "1517840"
  },
  {
    "text": "the initial work that we did was essentially um just to like reduce the amount of data that was being passed over that module boundary so we talked",
    "start": "1517840",
    "end": "1524320"
  },
  {
    "text": "about this earlier how it's not possible to just like directly share like Rich objects between your host and your wasum",
    "start": "1524320",
    "end": "1531159"
  },
  {
    "text": "code so we had all these requirements to like pass like a structured set of user data and a structured set of like",
    "start": "1531159",
    "end": "1536679"
  },
  {
    "text": "configuration data that was received from the server and then tell wassom to basically give us the answer of like what is this variable value supposed to",
    "start": "1536679",
    "end": "1542880"
  },
  {
    "text": "be so a lot of a lot of the initial work was kind of like okay how can we like cut down to like the bare minimum of",
    "start": "1542880",
    "end": "1548279"
  },
  {
    "text": "like the data that we actually need to pass across that boundary and it turned out we were passing a lot of data that was not necessary for that particular",
    "start": "1548279",
    "end": "1554960"
  },
  {
    "text": "operation so once we cut that down that got us like much more into the ballpark where it was literally like 2",
    "start": "1554960",
    "end": "1560480"
  },
  {
    "text": "milliseconds to like 70 microc which was like a huge Improvement to start with",
    "start": "1560480",
    "end": "1565760"
  },
  {
    "text": "but 70 micros was still too like way too slow because to sort of set like a um I",
    "start": "1565760",
    "end": "1571640"
  },
  {
    "text": "guess like a ground truth here like we have we benchmarked some of our competitors sdks and like their",
    "start": "1571640",
    "end": "1577159"
  },
  {
    "text": "execution times were down in like the Thousand to like 10,000 nond per op range where whereas ours was up in like",
    "start": "1577159",
    "end": "1583320"
  },
  {
    "text": "the 70,000 70,000 nanc 70 micros so yeah a lot of what we ended up doing um was",
    "start": "1583320",
    "end": "1589480"
  },
  {
    "text": "kind of like avoiding like allocating new memory and sort of like sharing the",
    "start": "1589480",
    "end": "1594840"
  },
  {
    "text": "memory between the host and the Wasa module more efficiently so it turned out that like especially an assembly script",
    "start": "1594840",
    "end": "1601600"
  },
  {
    "text": "like asking it to allocate new memory can be really slow because assembly script tries to give you this like sort",
    "start": "1601600",
    "end": "1607520"
  },
  {
    "text": "of easy to ouse garbage collector where it'll just make sure that things are being cleaned up properly but it's like",
    "start": "1607520",
    "end": "1613279"
  },
  {
    "text": "a fairly naive algorithm that they use and so it ends up adding a lot of time every time you need to like allocate new",
    "start": "1613279",
    "end": "1619640"
  },
  {
    "text": "new memory for things so one of the major optimizations we did was basically to say like okay let's sort of like",
    "start": "1619640",
    "end": "1625360"
  },
  {
    "text": "create a buffer in memory that is like the scratch space to like write any data that we need to pass across the boundary",
    "start": "1625360",
    "end": "1631640"
  },
  {
    "text": "to rather than what we were doing before which was like allocating that entire buffer every single time and basically",
    "start": "1631640",
    "end": "1638440"
  },
  {
    "text": "saying like here's your new buffer I'm going to write the data into this buffer now you should read from this buffer and this is your data that you need to deal",
    "start": "1638440",
    "end": "1643919"
  },
  {
    "text": "with so instead we said here is this like static buffer of a fixed l and we're just going to like write into",
    "start": "1643919",
    "end": "1649720"
  },
  {
    "text": "some portion of it and then tell you like where to read from and so it's already allocated it's already fast all",
    "start": "1649720",
    "end": "1655880"
  },
  {
    "text": "you need to do is just like read the bites to get your information so yeah that was that was like the majority of",
    "start": "1655880",
    "end": "1662440"
  },
  {
    "text": "the work that we were doing was kind of things around that I can keep going but I you want to ask any questions well I'm",
    "start": "1662440",
    "end": "1669000"
  },
  {
    "text": "I'm curious from like from the go perspective like I I think the numbers are obviously impressive and interesting",
    "start": "1669000",
    "end": "1674640"
  },
  {
    "text": "how are you measuring these things right cuz you're measuring it from a go runtime point of view you're not meas",
    "start": "1674640",
    "end": "1680159"
  },
  {
    "text": "you know you're not measuring it as a as a web assembly project what what tools are you using out of the gate to to even",
    "start": "1680159",
    "end": "1685919"
  },
  {
    "text": "arrive at at these measurements yeah so we actually had a lot of different tools we ended up using for different reasons",
    "start": "1685919",
    "end": "1691480"
  },
  {
    "text": "so these numbers that I'm sort of rattling off here um were all based on just running a go bench test where it",
    "start": "1691480",
    "end": "1697880"
  },
  {
    "text": "was essentially just like evaluating a variable as fast as possible in like a single thread and just saying like Okay like how quick is this operation and at",
    "start": "1697880",
    "end": "1704360"
  },
  {
    "text": "the end it would just spit out you know like time per op so that sort of like where we getting our initial numbers from we realized as we got further into",
    "start": "1704360",
    "end": "1711760"
  },
  {
    "text": "it that there was sort of like more factors involved like especially when you start to deal with multi-threading",
    "start": "1711760",
    "end": "1716960"
  },
  {
    "text": "which is obviously important for like a go web server like you can't have like just like the single threaded thing",
    "start": "1716960",
    "end": "1722360"
  },
  {
    "text": "sitting here being like the bottleneck for all of your stuff so that sort of like changed the nature of how we needed to measure things but outside of sort of",
    "start": "1722360",
    "end": "1729039"
  },
  {
    "text": "like just measuring the times for op we were also sort of digging into like how long are the actual calls inside of",
    "start": "1729039",
    "end": "1736279"
  },
  {
    "text": "wasum taking and like what is slow inside of those calls and that's not something that was easy to measure on",
    "start": "1736279",
    "end": "1742440"
  },
  {
    "text": "the Go Side CU we were using things like P and basically like spitting out like a CPU profile and going to look at it and",
    "start": "1742440",
    "end": "1749039"
  },
  {
    "text": "like as far as like go is concerned everything that happens past the web assembly module boundary is just like a",
    "start": "1749039",
    "end": "1754640"
  },
  {
    "text": "black box so we just had this giant box on our P Prof output that was like 20 30 micros seconds and it's like well what's",
    "start": "1754640",
    "end": "1761000"
  },
  {
    "text": "going on in there like how are we supposed to find that out so it turned out that node like nodejs has um sort of",
    "start": "1761000",
    "end": "1768399"
  },
  {
    "text": "like really good native support for web assembly which includes actually outputting CPU profiling like",
    "start": "1768399",
    "end": "1774039"
  },
  {
    "text": "information for the actual web assembly calls that are being made down to like the actual like executions that are",
    "start": "1774039",
    "end": "1779360"
  },
  {
    "text": "happening so we were able to basically take the same module we were testing on go stick it into our like node SDK and",
    "start": "1779360",
    "end": "1787000"
  },
  {
    "text": "start running some benchmarking there collecting CPU profiles from that so like the Chrome browser has like",
    "start": "1787000",
    "end": "1793200"
  },
  {
    "text": "basically a debugging tool that you can just attach directly to a node process so we just kind of capturing CPU",
    "start": "1793200",
    "end": "1799080"
  },
  {
    "text": "profiles from the same sort of test that we were doing on the go side and once we were doing that we could now start to",
    "start": "1799080",
    "end": "1804720"
  },
  {
    "text": "see like okay here is like the particular call inside of the web assembly code that's slow or like here's where we need to like focus our time to",
    "start": "1804720",
    "end": "1811399"
  },
  {
    "text": "like to do some optimization work and I think we were able to save like another like 20 or 30 micros seconds of time",
    "start": "1811399",
    "end": "1817559"
  },
  {
    "text": "just from like doing that basically like just kind of looking for like where are we like inefficiently allocating stuff",
    "start": "1817559",
    "end": "1822919"
  },
  {
    "text": "where are we like maybe duplicating some calls that we didn't need to be duplicating like um where could we sort",
    "start": "1822919",
    "end": "1828919"
  },
  {
    "text": "of like transform the the configuration we're getting from the server before we need to use it so that it's like in a",
    "start": "1828919",
    "end": "1835000"
  },
  {
    "text": "more efficient form for the code to iterate over a lot of there's a lot of uh a lot of sort of like Revelations",
    "start": "1835000",
    "end": "1840559"
  },
  {
    "text": "that came from that so that was that was an interesting investigation as well and then we also were getting into a bit of",
    "start": "1840559",
    "end": "1846080"
  },
  {
    "text": "like memory um size issues as well where it's like sort of like how many how much memory is it allocating other memory",
    "start": "1846080",
    "end": "1851720"
  },
  {
    "text": "leaks that sort of thing and so for that we found some tooling that actually will like plug into the assembly script",
    "start": "1851720",
    "end": "1857000"
  },
  {
    "text": "compon ER and can give you a like really detailed output of like what is on the Heap right now and what's been allocated",
    "start": "1857000",
    "end": "1863880"
  },
  {
    "text": "and we were able to sort of like do the standard like comparing of two Heap dumps to sort of say like oh like",
    "start": "1863880",
    "end": "1869360"
  },
  {
    "text": "there's maybe like a leak happening here or like this is like allocating like way too much memory and we could kind of",
    "start": "1869360",
    "end": "1874440"
  },
  {
    "text": "start dig into some of that as well so it was actually like a pretty pretty good experience overall to sort of be",
    "start": "1874440",
    "end": "1879880"
  },
  {
    "text": "like um be able to use all those tools to to dig into some of this stuff so when you said you were um you said you",
    "start": "1879880",
    "end": "1886279"
  },
  {
    "text": "using node to sort of dig into the web assembly side and to you know actually Trace what was taking you know a while",
    "start": "1886279",
    "end": "1892799"
  },
  {
    "text": "do you see that as something that eventually like web assembly itself will have tooling around that so that you don't have to sort of jump from language",
    "start": "1892799",
    "end": "1899039"
  },
  {
    "text": "to language to test that or is that something that would have been hard to do without something calling the web assembly directly yeah I think it's just",
    "start": "1899039",
    "end": "1905159"
  },
  {
    "text": "that like the V8 runtime for web assembly is the most mature runtime",
    "start": "1905159",
    "end": "1910799"
  },
  {
    "text": "right so they have those development tools built built up and I'm sure that",
    "start": "1910799",
    "end": "1915919"
  },
  {
    "text": "the the wasam time by code Alliance team are definitely working on similar types",
    "start": "1915919",
    "end": "1921039"
  },
  {
    "text": "of outputs for for all the different run times that they support but but yeah the common recommendation is yeah if you",
    "start": "1921039",
    "end": "1926840"
  },
  {
    "text": "really want to get that lowlevel optimization plugging it into uh some type of browser engine that has LOM",
    "start": "1926840",
    "end": "1932519"
  },
  {
    "text": "support is the best way to get that low-level sort of profiling information and obviously node being that it just",
    "start": "1932519",
    "end": "1937919"
  },
  {
    "text": "runs on V8 is probably the easiest way from like a server side use case to uh to get that data when you guys were like",
    "start": "1937919",
    "end": "1944399"
  },
  {
    "text": "actually doing all these optimizations did you find that a lot of other companies were doing similar things because you said that like when you",
    "start": "1944399",
    "end": "1949919"
  },
  {
    "text": "started it was pretty like web assembly wasn't adopted by a lot of people so were you kind of like in the dark",
    "start": "1949919",
    "end": "1955880"
  },
  {
    "text": "figuring this out on your own or were there other people you could talk with and exchange ideas with I guess we haven't really we haven't really come",
    "start": "1955880",
    "end": "1962639"
  },
  {
    "text": "across anybody that's trying to do what we're doing which is like using a web assembly module to just create like a",
    "start": "1962639",
    "end": "1968600"
  },
  {
    "text": "reusable block of code in like SDK and also on a server and also like everywhere else I'm sure there are",
    "start": "1968600",
    "end": "1974399"
  },
  {
    "text": "people that are doing it I'm not aware of them but I'm sure they're out there if you're listening give us a ring but",
    "start": "1974399",
    "end": "1980360"
  },
  {
    "text": "uh yeah I think like I I mentioned this earlier but like the assembly script Community was was really helpful to us",
    "start": "1980360",
    "end": "1986440"
  },
  {
    "text": "like they have a Discord we joined the creators of the of the language are in there pretty much every day they've",
    "start": "1986440",
    "end": "1992159"
  },
  {
    "text": "jumped in on some of our questions so it it's definitely pointed Us in the right direction and we pretty much wouldn't have been able to get where we are",
    "start": "1992159",
    "end": "1997760"
  },
  {
    "text": "without like without their help so we're really like appreciative of that but yeah there was there was kind of a lot",
    "start": "1997760",
    "end": "2003320"
  },
  {
    "text": "of you know like fumbling around in the dark just like trying things trying to like figure out what was going on on but I would say yeah we're in a much better",
    "start": "2003320",
    "end": "2009240"
  },
  {
    "text": "place now than we were when we started like we we I think we understand how this stuff works a lot more than when we",
    "start": "2009240",
    "end": "2014919"
  },
  {
    "text": "first went down this path so yeah I would also say that most most teams who are trying to do sort of high performant",
    "start": "2014919",
    "end": "2021080"
  },
  {
    "text": "web assembly code bases are are likely starting with a lower like a lower level language like C++ or rust or something",
    "start": "2021080",
    "end": "2028120"
  },
  {
    "text": "like that as they're their target compiling to to web assembly so if you're starting a brand new fresh",
    "start": "2028120",
    "end": "2033159"
  },
  {
    "text": "project and not coming with an existing sort of typescript code base like we were I would definitely recommend sort",
    "start": "2033159",
    "end": "2038320"
  },
  {
    "text": "of starting with one of those probably two languages that are sort of the I",
    "start": "2038320",
    "end": "2043760"
  },
  {
    "text": "would say there's a much larger Community around rust and C++ of compiling to web assembly than there is",
    "start": "2043760",
    "end": "2049599"
  },
  {
    "text": "trying to compile typescript code to to web assembly so that would be my advice and and you can also go down the route",
    "start": "2049599",
    "end": "2055398"
  },
  {
    "text": "of using go from people I've talked to the go to web assembly conversion",
    "start": "2055399",
    "end": "2060599"
  },
  {
    "text": "doesn't seem as efficient as rust and C++ um it's probably at a similar efficiency level of where the assembly",
    "start": "2060599",
    "end": "2067079"
  },
  {
    "text": "script code is so you're not going to get as purely optimized code as you would with C++ or R Us but I'm sure",
    "start": "2067079",
    "end": "2072520"
  },
  {
    "text": "there's lots of go folks out there who are probably listen to this and shaking their fist and be like no I'm working on that optimization so I'm sure it's going",
    "start": "2072520",
    "end": "2079158"
  },
  {
    "text": "to get better better over time so but yeah it definitely start with like a lower level language for you're trying",
    "start": "2079159",
    "end": "2084520"
  },
  {
    "text": "to do something very latency sensitive and I think over time we're definitely looking to to move to something that",
    "start": "2084520",
    "end": "2090760"
  },
  {
    "text": "starts off at at a lower level and can be optimized more directly than than our assembly script code is so I think I",
    "start": "2090760",
    "end": "2096560"
  },
  {
    "text": "think we will sort of migrate to to something like that over over the coming months or years just to make sure I",
    "start": "2096560",
    "end": "2102400"
  },
  {
    "text": "understood correctly I believe you said that web assembly is has like a garbage collector and that you guys were not",
    "start": "2102400",
    "end": "2108040"
  },
  {
    "text": "using it because it was just slow with what you were doing and you needed like to have that scratch space is that what contributed to like the memory leaks and",
    "start": "2108040",
    "end": "2114200"
  },
  {
    "text": "that sort of stuff then yeah there's a couple things there so web assembly itself at the moment doesn't have a",
    "start": "2114200",
    "end": "2121160"
  },
  {
    "text": "garbage collector as far as I know although I think there's like a proposal that they're working on to sort of like",
    "start": "2121160",
    "end": "2126200"
  },
  {
    "text": "standardize like how a garbage collector should work but at the moment like it's basically up to whatever you're using to",
    "start": "2126200",
    "end": "2132359"
  },
  {
    "text": "like you know output to web assembly to figure it out so in this case like the garbage collector was actually implemented by the assembly script like",
    "start": "2132359",
    "end": "2139720"
  },
  {
    "text": "compiler and essentially like the their implementation turned out to be the",
    "start": "2139720",
    "end": "2145200"
  },
  {
    "text": "majority of the slowness once we had like trimmed away like everything else we could we could do we sort of got down",
    "start": "2145200",
    "end": "2150680"
  },
  {
    "text": "to like okay now we're basically just trying to like reduce the number of memory allocations because every call to like allocate new memory was like like",
    "start": "2150680",
    "end": "2156960"
  },
  {
    "text": "sort of showing up on our profiles being like okay that's that's pretty slow there's also some interesting like work",
    "start": "2156960",
    "end": "2162319"
  },
  {
    "text": "we were doing there to kind of like tweak the there's like a couple of variables you can tweak in the in the garbage collector algorithm to try and",
    "start": "2162319",
    "end": "2167880"
  },
  {
    "text": "um sort of like improve like how often does it run like how long does it interrupt for um and and try to like Smooth out the the lines a little bit",
    "start": "2167880",
    "end": "2174640"
  },
  {
    "text": "because we were also measuring you know like p50 execution time compared to P99 execution time we were seeing like huge",
    "start": "2174640",
    "end": "2180119"
  },
  {
    "text": "discrepancies there which turned out to be like a garbage collection issue where basically like anytime the garbage collector decided to interrupt it would",
    "start": "2180119",
    "end": "2186160"
  },
  {
    "text": "like triple or quadruple the like execution time of that specific call and we needed to kind of like bring those",
    "start": "2186160",
    "end": "2192280"
  },
  {
    "text": "those numbers closer together so we we were sort of playing around with the garbage collection numbers to try and figure out if we could like if we could",
    "start": "2192280",
    "end": "2198280"
  },
  {
    "text": "tighten that band a little bit in the case of the memory leak thing so the one instance of that happening that was",
    "start": "2198280",
    "end": "2204560"
  },
  {
    "text": "actually kind of interesting was sort of what caused us to go down that route of using that tool I mentioned earlier",
    "start": "2204560",
    "end": "2209760"
  },
  {
    "text": "which like analyzes it's like a plugin for assembly script that like analyzes the um the Heap and tells you like",
    "start": "2209760",
    "end": "2215040"
  },
  {
    "text": "what's been allocated and we were trying try to basically use that output to figure out like what's leaking but what",
    "start": "2215040",
    "end": "2220359"
  },
  {
    "text": "was really interesting is when we used that we weren't seeing any new allocations like or any like major",
    "start": "2220359",
    "end": "2226680"
  },
  {
    "text": "growth happening in the actual like addressable heat memory space but what we were seeing was the overall so like",
    "start": "2226680",
    "end": "2234079"
  },
  {
    "text": "the way that the web assembly works like in wome time and probably everywhere else is that there's like a certain fixed amount of like linear memory that",
    "start": "2234079",
    "end": "2240640"
  },
  {
    "text": "it gets allocated for execution and when it starts to run out of that linear memory it will grow the amount of memory",
    "start": "2240640",
    "end": "2247920"
  },
  {
    "text": "that it's like allowed to use I think that might actually be implemented by assembly script but it basically it like doubles the amount of of memory and so",
    "start": "2247920",
    "end": "2255000"
  },
  {
    "text": "what we were seeing was like this this like linear memory size was growing and it kept getting bigger and bigger the",
    "start": "2255000",
    "end": "2261040"
  },
  {
    "text": "longer we ran it for but meanwhile the Heap was like well I don't have any like any new stuff going on like I don't and",
    "start": "2261040",
    "end": "2267440"
  },
  {
    "text": "so we we we had to figure out sort of like where is this memory growth coming from like why does it think it needs to grow its linear memory when its actual",
    "start": "2267440",
    "end": "2274680"
  },
  {
    "text": "like Heap size is is still really small and it turned out that it was like a bug in like one of the libraries we were",
    "start": "2274680",
    "end": "2280800"
  },
  {
    "text": "using and this kind of gets back to like the fact that we're like a bit on the bleeding edge here where we're like using libraries that are like really",
    "start": "2280800",
    "end": "2287040"
  },
  {
    "text": "really new some of which are like not super production hardened and in this case like this library was using this",
    "start": "2287040",
    "end": "2292960"
  },
  {
    "text": "concept in in assembly script called like an unmanaged class which basically like skips all of the garbage collection",
    "start": "2292960",
    "end": "2298319"
  },
  {
    "text": "stuff and expects that you're going to like keep track of its references but the library wasn't actually keeping",
    "start": "2298319",
    "end": "2303599"
  },
  {
    "text": "track of the references to those classes so it wasn't showing up in the heat because the garbage collector had no",
    "start": "2303599",
    "end": "2309160"
  },
  {
    "text": "idea that it existed the library also forgot about it so it was basically just like filling up a whole bunch of memory",
    "start": "2309160",
    "end": "2315680"
  },
  {
    "text": "space with like instances of this unmanaged class that which is never getting cleaned up and so that was kind of like an interesting investigation",
    "start": "2315680",
    "end": "2321760"
  },
  {
    "text": "because we basically like and yeah ended up zeroing in on this Library being like okay so because they're allocating this",
    "start": "2321760",
    "end": "2327079"
  },
  {
    "text": "unmanaged class like it's not going to show up in any of our tooling and so we ended up sort of like collaborating with",
    "start": "2327079",
    "end": "2332440"
  },
  {
    "text": "the author to get that fixed and the problem went away yeah for for some background there",
    "start": "2332440",
    "end": "2337760"
  },
  {
    "text": "on on garbage collection in web assembl is it's currently the responsibility of like the runtime within web assembly to",
    "start": "2337760",
    "end": "2344480"
  },
  {
    "text": "manage its own garbage and and so for example assembly script has its own garbage collector you said and and if",
    "start": "2344480",
    "end": "2351240"
  },
  {
    "text": "you're using go for example compiling to web assembly it would sort of bundle in a garbage collector there um there is a",
    "start": "2351240",
    "end": "2356680"
  },
  {
    "text": "really exciting proposal that we're engaged in that would actually expose the garbage collection to the host",
    "start": "2356680",
    "end": "2362000"
  },
  {
    "text": "runtime so for example if you're running La of time in the future within go the go native garbage collector could manage",
    "start": "2362000",
    "end": "2369400"
  },
  {
    "text": "all the the pointers and and and references for all the the allocations made within the web assembly or for",
    "start": "2369400",
    "end": "2374560"
  },
  {
    "text": "example if you're running in the web or in node the V8 sort of garbage collector could manage all those references for",
    "start": "2374560",
    "end": "2380280"
  },
  {
    "text": "you which would be way more efficient than trying to bundle in like a garbage collector into web assembly like we have",
    "start": "2380280",
    "end": "2386079"
  },
  {
    "text": "to do right now so um that's one of the many proposals that we're keeping a close eye on and and and are probably",
    "start": "2386079",
    "end": "2391880"
  },
  {
    "text": "going to be early adopters of I assume that means if somebody's coming from like C C++ over to and converting to web",
    "start": "2391880",
    "end": "2397960"
  },
  {
    "text": "assembly or compiling to it at that point that's it's going to be the same as normal C++ where they're managing all",
    "start": "2397960",
    "end": "2403160"
  },
  {
    "text": "that on their own so is that one of the reasons why like you see C++ being a little bit more bleeding edge as far as",
    "start": "2403160",
    "end": "2408520"
  },
  {
    "text": "like web assembly performance yeah yeah for sure yeah if you're managing your own memory then you can definitely not",
    "start": "2408520",
    "end": "2414160"
  },
  {
    "text": "pay the garbage collection tax and get a much more performance uh web assembly code base for sure but then you have to",
    "start": "2414160",
    "end": "2420520"
  },
  {
    "text": "manage it all sort of along a similar line I wanted to ask about the the concurrency models difference right like",
    "start": "2420520",
    "end": "2427240"
  },
  {
    "text": "a a big reason for adopting go on server side in general is for um concurrency",
    "start": "2427240",
    "end": "2432640"
  },
  {
    "text": "and multithreading support and go routine environments and and that sort of thing but obviously there's trade-offs when you're going into like a",
    "start": "2432640",
    "end": "2438359"
  },
  {
    "text": "web assembly built core how did you approach that and and what do you think",
    "start": "2438359",
    "end": "2443599"
  },
  {
    "text": "needs to happen for that to be performant going forward yeah I mean like basically the the current state of",
    "start": "2443599",
    "end": "2449640"
  },
  {
    "text": "web assembly is that the and my my knowledge might be out of date here but like there's there's there's also a proposal for multi-threading support",
    "start": "2449640",
    "end": "2456119"
  },
  {
    "text": "that hasn't quite landed yet and for that reason assembly script doesn't support any form of multi-threading",
    "start": "2456119",
    "end": "2461640"
  },
  {
    "text": "either so what that means is basically like for us to safely call our web assembly module we essentially had to",
    "start": "2461640",
    "end": "2467200"
  },
  {
    "text": "like put a mutex or any any call to it to make sure that like we weren't sort of like corrupting the memory state by",
    "start": "2467200",
    "end": "2472839"
  },
  {
    "text": "having like multiple uh grow routines accessing at the same time problem with that is that it obviously creates this",
    "start": "2472839",
    "end": "2479079"
  },
  {
    "text": "sort of like single bottleneck for any web server that's trying to serve you know like thousands of requests",
    "start": "2479079",
    "end": "2485319"
  },
  {
    "text": "concurrently and it's dealing with like this little web assembly module that like every time it's asking for a",
    "start": "2485319",
    "end": "2491000"
  },
  {
    "text": "variable value the web assembly module is like sorry hold on yeah I doing something else from somebody else so we",
    "start": "2491000",
    "end": "2497440"
  },
  {
    "text": "ended up solving this in the SDK by basically creating like multiple instances of the web assembly module and",
    "start": "2497440",
    "end": "2503440"
  },
  {
    "text": "then just kind of like shuffling between them so whenever like proper multi threading support lands we're definitely",
    "start": "2503440",
    "end": "2508800"
  },
  {
    "text": "going to like integrate that into the SDK but sort of in lie of that we sort of ended up on this solution where we",
    "start": "2508800",
    "end": "2515119"
  },
  {
    "text": "have I guess it's called like an object pool where you can basically borrow an instance of the web assembly module and",
    "start": "2515119",
    "end": "2521000"
  },
  {
    "text": "then uh do some work with it and then return it to the pool and so the SDK lets you configure the like number of uh",
    "start": "2521000",
    "end": "2527280"
  },
  {
    "text": "those objects that you have by default it's basically like the number of like like Max go procs and you essentially",
    "start": "2527280",
    "end": "2533079"
  },
  {
    "text": "like every time the SDK is asked to get a variable value it's just borrowing one of these web assembly modules from this",
    "start": "2533079",
    "end": "2538440"
  },
  {
    "text": "pool doing its thing and then returning it back to the pool so that was sort of like our work end for that and it",
    "start": "2538440",
    "end": "2544200"
  },
  {
    "text": "basically unlocked better concurrent performance performance there were a couple challenges there as well with like the web assembly sort of needing to",
    "start": "2544200",
    "end": "2550359"
  },
  {
    "text": "be kept up to date with like the latest configuration from the server and we had to kind of make sure that like across",
    "start": "2550359",
    "end": "2555520"
  },
  {
    "text": "that whole pool every instance of the web assembly had the latest configuration that had just come in so",
    "start": "2555520",
    "end": "2561960"
  },
  {
    "text": "we had to sort of like set up this system of like taking some of these objects like out of rotation so that we",
    "start": "2561960",
    "end": "2567040"
  },
  {
    "text": "could like kind of update their configuration behind the scenes and then return them B basically back to like active duty once the configuration was",
    "start": "2567040",
    "end": "2573040"
  },
  {
    "text": "up to date so there was a little bit of like interesting kind of like juggling going on there but but the solution",
    "start": "2573040",
    "end": "2578119"
  },
  {
    "text": "seems to work fairly well is that something you had to actually set up and manage in every SDK individually so like",
    "start": "2578119",
    "end": "2584040"
  },
  {
    "text": "if you're writing a go SDK you'd have to set that up there and if you're writing like a rust SDK you'd have to set that up there yeah basically uh it would it",
    "start": "2584040",
    "end": "2591359"
  },
  {
    "text": "would end up being language dependent so I guess the downside of this is that like with the original goal of web",
    "start": "2591359",
    "end": "2597440"
  },
  {
    "text": "assembly kind of making it really easy to write all of our sdks across all of our different platforms like as we got further and further down the performance",
    "start": "2597440",
    "end": "2604040"
  },
  {
    "text": "path we started to realize that there's like more and more sort of like platform specific code we had to write to get it",
    "start": "2604040",
    "end": "2610119"
  },
  {
    "text": "to perform the way we wanted it to so another example of that is the the protuff serialization that I mentioned",
    "start": "2610119",
    "end": "2616400"
  },
  {
    "text": "earlier so to pass data back and forth across the web assembly boundary in a performant way we switched from Json to",
    "start": "2616400",
    "end": "2623079"
  },
  {
    "text": "protuff and in order to do like the protuff serialization we would then like we basically needed to implement Like A",
    "start": "2623079",
    "end": "2629000"
  },
  {
    "text": "protuff serializer and D sterilizer or use like an off an off- the-shelf library in every SDK that was going to",
    "start": "2629000",
    "end": "2636599"
  },
  {
    "text": "use protuff so we did keep around like some of the old interfaces so the the",
    "start": "2636599",
    "end": "2641760"
  },
  {
    "text": "Wasa module still can use Json and it doesn't need to have multi- threading support depending on the platform like",
    "start": "2641760",
    "end": "2648000"
  },
  {
    "text": "obviously in Python like everything is single threaded anyway so it's like on python you don't need to really like worry about building multi-threading",
    "start": "2648000",
    "end": "2654079"
  },
  {
    "text": "support and also like in some platforms like the performance is already kind of like good enough whereas in go we we're",
    "start": "2654079",
    "end": "2660520"
  },
  {
    "text": "thinking like it it has like higher performance requirements basically so I think that's the important point is that",
    "start": "2660520",
    "end": "2665680"
  },
  {
    "text": "like for like 99% of use cases the single threaded performance of the the",
    "start": "2665680",
    "end": "2670960"
  },
  {
    "text": "the wum code has gotten so good like how How Far We've optimize it that like a mutex lock around it like doesn't affect",
    "start": "2670960",
    "end": "2676920"
  },
  {
    "text": "performance in a very paralyzed environment at all but for this specific use case where we're we're dealing with",
    "start": "2676920",
    "end": "2682079"
  },
  {
    "text": "an extremely high load CDN server that's running this go SDK in",
    "start": "2682079",
    "end": "2687599"
  },
  {
    "text": "that specific scenario with such high request count in that scenario we we definitely needed this optimization and",
    "start": "2687599",
    "end": "2693160"
  },
  {
    "text": "it helped bring down our our p50 and P99 time by a lot once we implemented it but for like 99% of use cases the like",
    "start": "2693160",
    "end": "2700280"
  },
  {
    "text": "single threaded performance of the the web assembly code is so good now that like you don't really notice a difference for most most",
    "start": "2700280",
    "end": "2708200"
  },
  {
    "text": "sdks Hello friends this is Jared here to tell you about change log Plus+ over the",
    "start": "2708400",
    "end": "2715160"
  },
  {
    "text": "years many of our most DieHard listeners have asked us for ways they can support",
    "start": "2715160",
    "end": "2720440"
  },
  {
    "text": "our work here at Chang log we didn't have an answer for them for a long time but finally we created Chang log Plus+ a",
    "start": "2720440",
    "end": "2728680"
  },
  {
    "text": "membership you can join to directly support our work as a thank you we save",
    "start": "2728680",
    "end": "2733960"
  },
  {
    "text": "you some time with an adree feed sprinkle in bonuses like extended episodes and give you first access to",
    "start": "2733960",
    "end": "2741520"
  },
  {
    "text": "the new stuff we dream up learn all about it at Chang log.com plusus plus",
    "start": "2741520",
    "end": "2747240"
  },
  {
    "text": "you'll also find the link in your chapter data and show notes once again that's changel log.com",
    "start": "2747240",
    "end": "2753319"
  },
  {
    "text": "pluspl check it out we'd love to have you with with",
    "start": "2753319",
    "end": "2758040"
  },
  {
    "text": "[Music]",
    "start": "2759520",
    "end": "2768839"
  },
  {
    "text": "us I actually think you should probably",
    "start": "2768839",
    "end": "2773119"
  },
  {
    "text": "leave opinion okay it's time for our unpopular",
    "start": "2774839",
    "end": "2782319"
  },
  {
    "text": "opinions it does not have to be Tech related just something you think is going to be an unpopular opinion we will",
    "start": "2782319",
    "end": "2788119"
  },
  {
    "text": "then set it up as a Twitter poll and let our audience decide if they think it's actually unpopular or not so what",
    "start": "2788119",
    "end": "2793839"
  },
  {
    "text": "anybody like to start first yeah I'll go for it um my unpopular opinion is that",
    "start": "2793839",
    "end": "2799680"
  },
  {
    "text": "uh web assembly run times will replace container based run times by 2030 the",
    "start": "2799680",
    "end": "2804880"
  },
  {
    "text": "advantages of web assembly with its tight security model it's very fast boot",
    "start": "2804880",
    "end": "2810280"
  },
  {
    "text": "up time scalability at the edge with much smaller Footprints it's portability across environments will really drive a",
    "start": "2810280",
    "end": "2817960"
  },
  {
    "text": "shift away from container-based runtimes um for things like kubernetes and Edge Edge workloads by 2030 and there's a ton",
    "start": "2817960",
    "end": "2825720"
  },
  {
    "text": "of ton of energy around U making this happen within the the web assembly Community what do you what do you think",
    "start": "2825720",
    "end": "2831359"
  },
  {
    "text": "is the largest barrier to getting there now it's a good question yeah I would say likely language like like language",
    "start": "2831359",
    "end": "2837960"
  },
  {
    "text": "support profiling and tooling I think like I think as we've talked about today a lot like getting to a point where you",
    "start": "2837960",
    "end": "2843319"
  },
  {
    "text": "can optimize and and profile the web assembly a lot a lot easier I think is a big thing and standardization so there's",
    "start": "2843319",
    "end": "2849640"
  },
  {
    "text": "a lot of really exciting changes to web assembly that are coming along I think we've talked about a couple of them",
    "start": "2849640",
    "end": "2855599"
  },
  {
    "text": "already around multi-threading support and garbage native garbage collection support one of the the the big changes",
    "start": "2855599",
    "end": "2863040"
  },
  {
    "text": "that are coming to web assembly is called the component model which is a way to standardize the communication",
    "start": "2863040",
    "end": "2868559"
  },
  {
    "text": "across multiple web assembly components and they can talk to each other and really sort of like make your code a lot",
    "start": "2868559",
    "end": "2874599"
  },
  {
    "text": "more componentized and in smaller chunks and so that's a big effort that the community is working on to drive towards",
    "start": "2874599",
    "end": "2881319"
  },
  {
    "text": "sort of replacing containers larger containers in these sort of kubernetes and and Edge workloads so yeah so I",
    "start": "2881319",
    "end": "2887319"
  },
  {
    "text": "think those are the big things that if the web assembly Community can get sort of those big changes that are coming the component model multi-threading um",
    "start": "2887319",
    "end": "2894680"
  },
  {
    "text": "garbage collection support and many other things down then I think we'll be on that path and we'll see some big",
    "start": "2894680",
    "end": "2900480"
  },
  {
    "text": "companies um start up around around this space in in the coming years and I think",
    "start": "2900480",
    "end": "2905960"
  },
  {
    "text": "it's it's funny cuz like Jonathan like we've talked about this a lot and I think my my unpopular opinion would be the opposite of that cuz I don't I don't",
    "start": "2905960",
    "end": "2913280"
  },
  {
    "text": "know maybe more on time frame like sure maybe possibly but I think the lift required is so large do you think that",
    "start": "2913280",
    "end": "2920359"
  },
  {
    "text": "something like assembly script is is crucial for that right as sort of like this core sort of native entry point I",
    "start": "2920359",
    "end": "2928599"
  },
  {
    "text": "think a a more approachable higher level language um is important as an entry",
    "start": "2928599",
    "end": "2935119"
  },
  {
    "text": "point I I think that's one of the the challenges with web assembly right now is that the best environments are lower",
    "start": "2935119",
    "end": "2940640"
  },
  {
    "text": "level environments like things like using rust or C++ right and so there's actually a good amount of momentum",
    "start": "2940640",
    "end": "2946960"
  },
  {
    "text": "around running JavaScript or typescript in web assembly but by bundling in",
    "start": "2946960",
    "end": "2953079"
  },
  {
    "text": "spider monkey which is firefox's Javascript engine into your web assembly runtime and they've been able to get",
    "start": "2953079",
    "end": "2959359"
  },
  {
    "text": "that working in a couple megabytes so you basically have the full sort of spider monkey runtime running Within web",
    "start": "2959359",
    "end": "2965760"
  },
  {
    "text": "assembly running your JavaScript or types like compiled typescript code um in that um and that's kind of one of",
    "start": "2965760",
    "end": "2971280"
  },
  {
    "text": "their for a lot of these these wasm cloud or wasam Edge companies one of the the big entry points that they're",
    "start": "2971280",
    "end": "2977200"
  },
  {
    "text": "they're talking about but yeah I would say getting a higher level language that executes really efficiently in wasam is",
    "start": "2977200",
    "end": "2983160"
  },
  {
    "text": "is probably is probably one of the biggest barriers to that from the other side of things I'm wondering as well",
    "start": "2983160",
    "end": "2988720"
  },
  {
    "text": "like do you see well I guess I should say there's a lot of pressure from the other side I would say as well of like",
    "start": "2988720",
    "end": "2994880"
  },
  {
    "text": "VMS and hypervisors becoming like super fast like with firecracker and all of",
    "start": "2994880",
    "end": "2999960"
  },
  {
    "text": "that do you see like maybe a merging of those Technologies so you can get the security benefits of virtual machines in",
    "start": "2999960",
    "end": "3006920"
  },
  {
    "text": "like the speed and all the other benefits of WM yeah like don't get me wrong those VMS have gotten very good",
    "start": "3006920",
    "end": "3014359"
  },
  {
    "text": "over over many years and we've been relying them for for a lot of our our highs scale systems but yeah I think",
    "start": "3014359",
    "end": "3019960"
  },
  {
    "text": "there's just like an order of magnitude difference between the size of containers like yeah you can optimize",
    "start": "3019960",
    "end": "3025760"
  },
  {
    "text": "your your size of your containers to be pretty small like tens of megabytes size right but web assembly is at its core",
    "start": "3025760",
    "end": "3031640"
  },
  {
    "text": "designed to be more portable than that where it's you're talking about tens of kilobytes instead of tens of megabytes",
    "start": "3031640",
    "end": "3036920"
  },
  {
    "text": "and and and the boot up times can be measured in in sort of micros seconds instead of milliseconds or tens of",
    "start": "3036920",
    "end": "3043160"
  },
  {
    "text": "milliseconds for or even seconds for containers right and so there's just like an order of magnitude change there",
    "start": "3043160",
    "end": "3048839"
  },
  {
    "text": "by using web assembly that I think it's going to be really hard for a lot of containerized systems to match like you",
    "start": "3048839",
    "end": "3054200"
  },
  {
    "text": "can think about a a big big platform running at the edge at scale where say for us like for our use case like we",
    "start": "3054200",
    "end": "3061440"
  },
  {
    "text": "have a lot of sdks that hit our Edge apis and we have certain customers that say our big mobile mobile apps right and",
    "start": "3061440",
    "end": "3068520"
  },
  {
    "text": "they they may get they may send out a push notification and get hundreds of thousands of people or even millions of",
    "start": "3068520",
    "end": "3074079"
  },
  {
    "text": "people who all open their app at like exactly the same time when that like sports score or that big news event",
    "start": "3074079",
    "end": "3079799"
  },
  {
    "text": "lands on their phone they're opening their app at exactly the same time and we see massive delusions of traffic like",
    "start": "3079799",
    "end": "3085440"
  },
  {
    "text": "literally 100 times our steady state traffic hit our Edge end points in those points in time and because we're using",
    "start": "3085440",
    "end": "3092520"
  },
  {
    "text": "these Edge platforms they're able to spin up like thousands of of run times",
    "start": "3092520",
    "end": "3098079"
  },
  {
    "text": "of of wasam and Edge run times in milliseconds to serve that traffic and and trying to do that with VMS um is",
    "start": "3098079",
    "end": "3105440"
  },
  {
    "text": "possible but it's there's a lot more latency in that that tool chain so that's why I think like the the power of",
    "start": "3105440",
    "end": "3110920"
  },
  {
    "text": "not only like the really tight security model but like the boot up times the the the small size of the Wasa modules",
    "start": "3110920",
    "end": "3117359"
  },
  {
    "text": "really can power that and for certain use cases make a lot of sense like I'm not going to say we're going to replace",
    "start": "3117359",
    "end": "3122480"
  },
  {
    "text": "every use case like it's clearly not right um but for certain like high performance latency sensitive use cases",
    "start": "3122480",
    "end": "3128160"
  },
  {
    "text": "like trying to deliver feature Flags globally to mobile apps and web apps",
    "start": "3128160",
    "end": "3133400"
  },
  {
    "text": "around the world like that is our use case and it's like definitely very applicable to this problem so that would",
    "start": "3133400",
    "end": "3138920"
  },
  {
    "text": "definitely mean that in that case the way I would put it is I feel like the current setup with like Docker containers or whatever else that are a",
    "start": "3138920",
    "end": "3145079"
  },
  {
    "text": "little bit slower but they work for probably 90% of use cases maybe not I'm",
    "start": "3145079",
    "end": "3151200"
  },
  {
    "text": "just throwing that as a random number out but they work for some big chunk of use cases mhm and the web assembly",
    "start": "3151200",
    "end": "3156240"
  },
  {
    "text": "version that you're you know you're saying would replace it essentially the speed benefits and all those things there's going to be a huge chunk of",
    "start": "3156240",
    "end": "3161880"
  },
  {
    "text": "people who wouldn't actually care as much about that necessarily so I I'm assuming for that to happen it would",
    "start": "3161880",
    "end": "3167799"
  },
  {
    "text": "have to become just as easy to use the wasm replacement for Docker like is that's the only at least in my mind",
    "start": "3167799",
    "end": "3173480"
  },
  {
    "text": "that's the only way I would see that working is if it became just as easy and I don't know do you think it's just as easy now oh it's definitely not just as",
    "start": "3173480",
    "end": "3179119"
  },
  {
    "text": "easy yet I think there's definitely a lot of developer tooling work to go to to make it easy like we've been using",
    "start": "3179119",
    "end": "3184359"
  },
  {
    "text": "cloudflare workers and there's lots of other people like that for Edge run times that make it super easy to to",
    "start": "3184359",
    "end": "3189640"
  },
  {
    "text": "deploy Edge run times that make that pretty easy but I think the the real benefits come from like the security",
    "start": "3189640",
    "end": "3196400"
  },
  {
    "text": "benefits so like a web assembly module is way tighter in in controlling sort of",
    "start": "3196400",
    "end": "3202000"
  },
  {
    "text": "what it has access to through the wasi interface than than a VM is right and so for very security conscious companies I",
    "start": "3202000",
    "end": "3208839"
  },
  {
    "text": "could see it having a lot of value there for certain like Mission critical modules of their of their application",
    "start": "3208839",
    "end": "3215119"
  },
  {
    "text": "and then there's a lot of cost benefits like one of the reasons why it's a lot cheaper to run your Edge workloads in",
    "start": "3215119",
    "end": "3222160"
  },
  {
    "text": "cloudflare workers or fastly or netlify like any of those those Edge run times",
    "start": "3222160",
    "end": "3227280"
  },
  {
    "text": "versus something like AWS Lambda is because the boot up and Boot and and shut down times and the sizes of the",
    "start": "3227280",
    "end": "3233240"
  },
  {
    "text": "binaries that they they have to manage is are way smaller right like those Edge run times can start up your your code in",
    "start": "3233240",
    "end": "3240559"
  },
  {
    "text": "in milliseconds if not faster where like lambdas and other things like that are more containerized at the edge take a",
    "start": "3240559",
    "end": "3247599"
  },
  {
    "text": "lot longer to to to spin up they have a lot higher memory Footprints things like that and so the the cost differences",
    "start": "3247599",
    "end": "3253839"
  },
  {
    "text": "there can be huge like we've saw a huge cost savings ourselves by like moving to these Edge run times to run these",
    "start": "3253839",
    "end": "3260240"
  },
  {
    "text": "workloads at scale like we we obviously not only do we build sdks but we run really high scale sort of apis um at the",
    "start": "3260240",
    "end": "3267040"
  },
  {
    "text": "edge and and there's huge cost advantages to um having really small portable fast run times that can that",
    "start": "3267040",
    "end": "3274400"
  },
  {
    "text": "can execute all around the world makes sense all right Adam and Brad or Chris",
    "start": "3274400",
    "end": "3280000"
  },
  {
    "text": "do either of you or any of you have an unpopular opinion you'd like to share sounds like no",
    "start": "3280000",
    "end": "3286640"
  },
  {
    "text": "everybody's Everybody's scared to bring an opinion I mean I could come up with an Ain I mean I there's yeah I could",
    "start": "3286640",
    "end": "3292760"
  },
  {
    "text": "unleash a bunch but I don't I don't know there's value going down that road I mean that's what the segment",
    "start": "3292760",
    "end": "3298960"
  },
  {
    "text": "is for let uh say something spicy I mean we've had some that I'm actually curious",
    "start": "3298960",
    "end": "3305000"
  },
  {
    "text": "I need to go check the uh if they put it on Twitter yet the one we had not long ago was when Matt and I were talking",
    "start": "3305000",
    "end": "3310680"
  },
  {
    "text": "with I think it was Matthew Bole who wrote domain driven design with go L he his his unpopular opinion was that you",
    "start": "3310680",
    "end": "3316400"
  },
  {
    "text": "should be able to bring your laptop into the movie theater and use it while you're watching a movie and I'm I'm",
    "start": "3316400",
    "end": "3322839"
  },
  {
    "text": "still pretty convinced that that one's going to be one of more unpopular opinions I I've I have lots of stories",
    "start": "3322839",
    "end": "3328760"
  },
  {
    "text": "of bring my laptop into a movie theater because I was on call and then every time I go into a movie I get an on call",
    "start": "3328760",
    "end": "3334960"
  },
  {
    "text": "call that happened to me like three times in a row in the early days of our first company so so you might agree with",
    "start": "3334960",
    "end": "3340520"
  },
  {
    "text": "them just so you don't have to leave the movie theater I definitely agree with them yeah I I agree that I should be allowed to but I don't know that anyone",
    "start": "3340520",
    "end": "3346880"
  },
  {
    "text": "else should be allowed to necessarily well luckily you're uh you don't get called as much during movies now that",
    "start": "3346880",
    "end": "3352400"
  },
  {
    "text": "we've switched to Edge workers so that is true that is true all right if if",
    "start": "3352400",
    "end": "3357920"
  },
  {
    "text": "nobody else wants to share any I can uh play the outro and then we can end the episode so that go with everybody I mean",
    "start": "3357920",
    "end": "3364400"
  },
  {
    "text": "I could come up with an unpopular opinion like let me let me see I mean it's up to you Chris see see Adam I feel",
    "start": "3364400",
    "end": "3369760"
  },
  {
    "text": "like you have lots of unpopular opinions too yeah okay I mean one of them is that I think kubernetes is way overused in",
    "start": "3369760",
    "end": "3376920"
  },
  {
    "text": "the tech industry I think that there's a lot of people that don't need kubernetes",
    "start": "3376920",
    "end": "3382319"
  },
  {
    "text": "that are using it and could do something like a lot simpler to just like get their service deployed like we're using",
    "start": "3382319",
    "end": "3389039"
  },
  {
    "text": "kubernetes and I think that we shouldn't be using kubernetes in retrospect like so that might be an unpopular opinion",
    "start": "3389039",
    "end": "3395400"
  },
  {
    "text": "although I've sort of seen some like some chatter online of some some other people starting to realize that as well",
    "start": "3395400",
    "end": "3401640"
  },
  {
    "text": "I feel like that's a it's like a split either you're someone that's been burned by this so it's a very popular opinion",
    "start": "3401640",
    "end": "3409079"
  },
  {
    "text": "or you're still in love with kubernetes so it's a very unpopular opinion it's kind of like using like third party",
    "start": "3409079",
    "end": "3414880"
  },
  {
    "text": "libraries or Frameworks in like a language like go there's some people that are absolutely adamant against it and then there's other people who are",
    "start": "3414880",
    "end": "3420799"
  },
  {
    "text": "like yeah it's worked pretty well for me so I'm fine with it yeah I was I was at coupon last week in in Amsterdam and",
    "start": "3420799",
    "end": "3425960"
  },
  {
    "text": "like yeah say there's a lot of energy in the Enterprise for like large large Enterprise companies that have hundreds",
    "start": "3425960",
    "end": "3432280"
  },
  {
    "text": "of services microservices that are running on kubernetes and yeah it makes a lot of sense for those and there's a",
    "start": "3432280",
    "end": "3437480"
  },
  {
    "text": "lot of tooling built around it but if you're a smaller company and you're maybe a lot of your workloads are at the",
    "start": "3437480",
    "end": "3443520"
  },
  {
    "text": "edge or in SDK is like us and you only have a handful of services who need to run um it's probably Overkill and is",
    "start": "3443520",
    "end": "3450839"
  },
  {
    "text": "more likely to cause downtime than uh then improve your your team's productivity um and I think that's",
    "start": "3450839",
    "end": "3457039"
  },
  {
    "text": "that's what we've experienced so far yeah everything is great until the first time you have to go diving into like the coup system names space to figure out",
    "start": "3457039",
    "end": "3463480"
  },
  {
    "text": "like which which of the internal pods is having a problem what's gone wrong with the cluster I mean I could definitely",
    "start": "3463480",
    "end": "3470640"
  },
  {
    "text": "agree with the sentiment that it's probably better to teach people that there are other approaches due to deploying and like making sure that",
    "start": "3470640",
    "end": "3476520"
  },
  {
    "text": "they're aware of that and they don't feel like kubernetes is the like that's where we all end up being anyway because",
    "start": "3476520",
    "end": "3481880"
  },
  {
    "text": "I've definitely seen enough I've seen enough small projects where they're just getting started where essentially they",
    "start": "3481880",
    "end": "3487039"
  },
  {
    "text": "have kubernetes running before they have 10 users or something and you're like I don't know that that was required yeah like I think I think there's uh not not",
    "start": "3487039",
    "end": "3494440"
  },
  {
    "text": "too much knowledge about sort of like the simpler ways to get your code running on a server you don't always",
    "start": "3494440",
    "end": "3500119"
  },
  {
    "text": "need to build an entire like orchestration system to to get something running bring back Heroku I loved Heroku",
    "start": "3500119",
    "end": "3507119"
  },
  {
    "text": "man Heroku was awesome I use it at so many hackathons Heroku was it was awesome until like I I felt like it was",
    "start": "3507119",
    "end": "3514599"
  },
  {
    "text": "awesome until you like had to actually scale up and your bills just Skyrocket oh yeah but it's again it's like",
    "start": "3514599",
    "end": "3519799"
  },
  {
    "text": "something to just get going right it's like I have some code and I just need it I just need it to be running like I just need some end point that people can hit",
    "start": "3519799",
    "end": "3525960"
  },
  {
    "text": "like it was it was awesome for that which is why I used it at hackathons it's the great the best way to just get your code deployed I feel like when when",
    "start": "3525960",
    "end": "3532520"
  },
  {
    "text": "Heroku was popular no one was saying that it was is cool and good and now that now that it's kind of it's on the",
    "start": "3532520",
    "end": "3539920"
  },
  {
    "text": "brink and everyone has all this Nostalgia for it like remember the good old Heroku days no nobody nobody backed",
    "start": "3539920",
    "end": "3546200"
  },
  {
    "text": "it when it was new it was yeah thanks for making me feel old Brad come on like I have mixed feelings there because if",
    "start": "3546200",
    "end": "3553119"
  },
  {
    "text": "it was like a hackathon project I used it all the time but as soon as it became like a paid Pro like a something I needed to scale up a little bit I",
    "start": "3553119",
    "end": "3559119"
  },
  {
    "text": "immediately was like I need to move my stuff over somewhere else that's cheaper or in the case of like like a lot of",
    "start": "3559119",
    "end": "3565880"
  },
  {
    "text": "startup incubators and things like that you would end up getting credits for Heroku and I I don't remember what they were but they were insanely high amounts",
    "start": "3565880",
    "end": "3571640"
  },
  {
    "text": "of credits like $100,000 in Heroku credits or something so like in those cases you just didn't care because",
    "start": "3571640",
    "end": "3577039"
  },
  {
    "text": "you're like I'm not going to it's going to be really hard to burn $100,000 in like the one year time limit you have for it so you're just like I just don't",
    "start": "3577039",
    "end": "3583119"
  },
  {
    "text": "care right now but as far as like an actual paid business model it it'd be hard for me to be like yeah I really",
    "start": "3583119",
    "end": "3589599"
  },
  {
    "text": "missed paying $40 a month for some app that served 10 people or or 1,00 bucks a",
    "start": "3589599",
    "end": "3595520"
  },
  {
    "text": "month for a database that was uh actually worked redundant yeah that's",
    "start": "3595520",
    "end": "3600960"
  },
  {
    "text": "why I love usage based billing for like all these Edge um run times and and",
    "start": "3600960",
    "end": "3607200"
  },
  {
    "text": "things like that it's just like just pay for what you actually use that's that's the way to go I think yeah wasn't our",
    "start": "3607200",
    "end": "3612720"
  },
  {
    "text": "bill like $10 one time for like an entire like months of traffic oh for certain things yeah for certain like um",
    "start": "3612720",
    "end": "3619400"
  },
  {
    "text": "services not obviously not our main our main not for like the main platform yeah but I mean this like for like T of",
    "start": "3619400",
    "end": "3624839"
  },
  {
    "text": "millions of requests it was like 10 bucks or something like that yeah you can get you can get a lot of free requests out of some of these Services",
    "start": "3624839",
    "end": "3631319"
  },
  {
    "text": "these days all right Chris did you have something you wanted to share yes yes I have a slightly I guess it's like",
    "start": "3631319",
    "end": "3638400"
  },
  {
    "text": "slightly spicy but I think that all of this AI stuff that we're doing right now",
    "start": "3638400",
    "end": "3644160"
  },
  {
    "text": "all of this cat GPT and co-pilot and mid journey and all of that is like last",
    "start": "3644160",
    "end": "3651640"
  },
  {
    "text": "year's nfts and like 3D printers from a while ago and from Segways from forever ago where it's not like it's going to go",
    "start": "3651640",
    "end": "3658880"
  },
  {
    "text": "away completely but it's going to move into much more Niche markets and it's",
    "start": "3658880",
    "end": "3664079"
  },
  {
    "text": "not going to do the things that everybody is screaming that it's going to do like 3D printers are a great",
    "start": "3664079",
    "end": "3669200"
  },
  {
    "text": "example 3D printers are wonderful they're they're amazing people use them all over the place but like a decade ago",
    "start": "3669200",
    "end": "3674640"
  },
  {
    "text": "people are like every single College kid's going to have one of these in their dorm room and they're going to be three printing every single thing that",
    "start": "3674640",
    "end": "3679799"
  },
  {
    "text": "they need and it was just like No And like last year we were all doing with nft and it was like nfts are going to",
    "start": "3679799",
    "end": "3686319"
  },
  {
    "text": "revolutionize how every single thing works and it's like no so I think AI is",
    "start": "3686319",
    "end": "3691760"
  },
  {
    "text": "in that same hype train you know movement at the moment and uh I mean I",
    "start": "3691760",
    "end": "3697880"
  },
  {
    "text": "personally be very happy when it kind of moves on and we can get to like the place where we're using that AI in very",
    "start": "3697880",
    "end": "3703200"
  },
  {
    "text": "useful places but yeah I think that you know everybody that's like we're we're so much closer to artificial general",
    "start": "3703200",
    "end": "3709920"
  },
  {
    "text": "intelligence and all this other stuff cuz we have these large language models it's just like no it's going to it's going to die down I would say 6 months",
    "start": "3709920",
    "end": "3717079"
  },
  {
    "text": "but that feels a little aggressive are you implying that that VC Twitter doesn't doesn't know what they're",
    "start": "3717079",
    "end": "3722839"
  },
  {
    "text": "talking about [Laughter] yes I said it was spicy it's pretty",
    "start": "3722839",
    "end": "3730480"
  },
  {
    "text": "spicy um I would agree with you that though at the higher level that like the term AI I think is is a bit misleading",
    "start": "3730480",
    "end": "3737880"
  },
  {
    "text": "like I think I don't think we're getting I don't think these llms are are artificial fully intelligent yet right",
    "start": "3737880",
    "end": "3743760"
  },
  {
    "text": "um but they're extremely valuable like the difference between the AI hype cycle now and the nft gri that happened a year",
    "start": "3743760",
    "end": "3751240"
  },
  {
    "text": "ago is very different is that there's actual like real world like value that you can get out of like chat GPT I don't",
    "start": "3751240",
    "end": "3757559"
  },
  {
    "text": "know like us internally I think Adam can talk probably for another hour about how we've been using chat gbt internally to",
    "start": "3757559",
    "end": "3763920"
  },
  {
    "text": "help us accelerate a lot of a lot of stuff but like for us as a developer like for me personally like I've never",
    "start": "3763920",
    "end": "3770079"
  },
  {
    "text": "been the best bash programmer or SQL programmer but now I can like type into chat GPT and be like like hey write me a",
    "start": "3770079",
    "end": "3775119"
  },
  {
    "text": "SQL query that does this here's the table schema figure it out and it just goes and does it and it's like accurate",
    "start": "3775119",
    "end": "3780640"
  },
  {
    "text": "most of the time and then if it gets it wrong you just paste the error code into chat GPT and then it like rewrites the",
    "start": "3780640",
    "end": "3786079"
  },
  {
    "text": "SQL query based off the error code and like fixes itself it's like that is just like truly I I I found it TR truly",
    "start": "3786079",
    "end": "3793240"
  },
  {
    "text": "really accelerated my the pace of my development uh over the last couple months yeah I I feel like cuz I think",
    "start": "3793240",
    "end": "3799319"
  },
  {
    "text": "the nft point's a good one too cuz it's like the idea of having this kind of distributed Ledger that you can use to",
    "start": "3799319",
    "end": "3805880"
  },
  {
    "text": "kind of Mark the progress of items over time and kind of you know kind of track",
    "start": "3805880",
    "end": "3812079"
  },
  {
    "text": "the chain of custody of things it's like super interesting but also like supern you know for a lot of us in software",
    "start": "3812079",
    "end": "3817520"
  },
  {
    "text": "engineering like not a huge thing we care about right now um but I think there are markets like you know white or",
    "start": "3817520",
    "end": "3822680"
  },
  {
    "text": "or a wine or art collection or things like that where it would be super interesting I think chat GPD one of the applicable places is you know things",
    "start": "3822680",
    "end": "3829920"
  },
  {
    "text": "like software engineering where when it's wrong we are well aware that it's wrong",
    "start": "3829920",
    "end": "3834960"
  },
  {
    "text": "um so I think there's a lot of there's a lot of things right now where people are even like the words they're using kind of irk me a bit which is kind of where",
    "start": "3834960",
    "end": "3841760"
  },
  {
    "text": "this whole like unpopular opinion comes from where people are like oh like the large language models they're",
    "start": "3841760",
    "end": "3846960"
  },
  {
    "text": "hallucinating and I'm like it's not hallucinating it's just producing statistically accurate results that are",
    "start": "3846960",
    "end": "3853640"
  },
  {
    "text": "wrong so it's like the the prediction engine got it wrong just like when Auto crack gets it wrong like it got it wrong",
    "start": "3853640",
    "end": "3859480"
  },
  {
    "text": "it didn't do anything different than it's doing before but it and people are just inter in it differ so I think it's",
    "start": "3859480",
    "end": "3866440"
  },
  {
    "text": "like in places where we know what the correct answer is or know at least what the correct answer should look like and",
    "start": "3866440",
    "end": "3871799"
  },
  {
    "text": "can tell like okay that's not right I think it's fine to use but in areas where we don't know that it can be very",
    "start": "3871799",
    "end": "3877200"
  },
  {
    "text": "dangerous I think it was similar to self-driving like the all the hype around self-driving cars we haven't",
    "start": "3877200",
    "end": "3883440"
  },
  {
    "text": "gotten that close yet to like a full self-driving car that can like I live in Toronto that can drive in the winter",
    "start": "3883440",
    "end": "3889720"
  },
  {
    "text": "when there's snow Banks and stuff like that like we're nowhere near that but we have gotten to the point where like",
    "start": "3889720",
    "end": "3894960"
  },
  {
    "text": "every car you buy now has like really good even like a cheap Toyota has like really good like Lan keep Lane centering",
    "start": "3894960",
    "end": "3902720"
  },
  {
    "text": "that works like amazingly on the highways when when it's like nice out right and so like that's kind of like",
    "start": "3902720",
    "end": "3908520"
  },
  {
    "text": "how I think about it it's like we may not get to like the fear like the the pure like self-driving cars for like",
    "start": "3908520",
    "end": "3914680"
  },
  {
    "text": "another I don't know 20 50 years but there are like incremental improvements that we're seeing like now and today and",
    "start": "3914680",
    "end": "3920760"
  },
  {
    "text": "I think with AI we're seeing we're seeing similar similar improvements there but but see you just agreed with",
    "start": "3920760",
    "end": "3926559"
  },
  {
    "text": "me I did yeah I kind of did I mean I think the problem is it depends on how you view it like if you're expecting AI",
    "start": "3926559",
    "end": "3932520"
  },
  {
    "text": "to become like perfectly 100% accurate all the time and to like do all this stuff perfectly I think anybody who's",
    "start": "3932520",
    "end": "3938000"
  },
  {
    "text": "thinking that is going to be disappointed because I I think that's going to be really really hard to do same with like self-driving cars but I",
    "start": "3938000",
    "end": "3944319"
  },
  {
    "text": "think there is a use case for something that gets like 90% of it right and like there's certain cases where it's very",
    "start": "3944319",
    "end": "3950480"
  },
  {
    "text": "good at it like self-driving cars are an example of if I had a car that literally just could drive the highway like nothing fancy in the city nothing else",
    "start": "3950480",
    "end": "3957079"
  },
  {
    "text": "just long Highway stretches that would be like a miles and miles of improvement compared to what I'm currently at so",
    "start": "3957079",
    "end": "3963520"
  },
  {
    "text": "like we're pretty close to that yeah so like it doesn't have to be perfect it can skip all these other edge cases as",
    "start": "3963520",
    "end": "3968599"
  },
  {
    "text": "long as it does like a couple core ones exceptionally well and I think we can work towards those ones but I think the",
    "start": "3968599",
    "end": "3974480"
  },
  {
    "text": "problem is people get that idea in their head of like we're building towards the perfect drive everywhere like",
    "start": "3974480",
    "end": "3979720"
  },
  {
    "text": "self-driving technology or if it's AI they want AI That's 100% accurate you know doesn't do anything wrong ever and",
    "start": "3979720",
    "end": "3986440"
  },
  {
    "text": "I think that's people who are expecting that are going to be disappointed but I I will say that I I feel like the one",
    "start": "3986440",
    "end": "3993200"
  },
  {
    "text": "thing I've liked about the a like the chat GPT and everything is I feel like it's helped a lot of non-technical",
    "start": "3993200",
    "end": "3998279"
  },
  {
    "text": "people see how much more they could use computers to like solve menial tasks in their lives that like developers we all",
    "start": "3998279",
    "end": "4004440"
  },
  {
    "text": "knew this could like like oh yeah that's easy to do and there's even things that I see people doing with chat GPT that",
    "start": "4004440",
    "end": "4009520"
  },
  {
    "text": "I'm like you could have done that before chat GPT pretty easily but they just didn't know how to do it so like now they're like able to leverage that which",
    "start": "4009520",
    "end": "4016200"
  },
  {
    "text": "is nice I I'm even thinking like like clippy inside of Microsoft docs if that",
    "start": "4016200",
    "end": "4021520"
  },
  {
    "text": "was released now I feel like it would never go away versus like when it did release basically is being released now",
    "start": "4021520",
    "end": "4028359"
  },
  {
    "text": "like Microsoft is like is essentially trying to like reintegrate something like clippy into the office suite right",
    "start": "4028359",
    "end": "4034319"
  },
  {
    "text": "like they're adding like a chat interface I mean I'd love it if it was actually clippy there um I'm sure somebody will make like an add-on",
    "start": "4034319",
    "end": "4039920"
  },
  {
    "text": "that'll just change the icon but uh yeah I mean it's kind I think it's kind of like the last 10% problem that people",
    "start": "4039920",
    "end": "4046599"
  },
  {
    "text": "always talk about and like the difference between self-driving cars and AI is that like with self-driving cars like you had the example earlier of like",
    "start": "4046599",
    "end": "4053079"
  },
  {
    "text": "the perfect Lane keeping on the highway like that's really useful and like it's useful today but the problem is that",
    "start": "4053079",
    "end": "4058200"
  },
  {
    "text": "like for driving fully on like city streets like you're still going to need to pay attention and so like anything",
    "start": "4058200",
    "end": "4064160"
  },
  {
    "text": "additional past like the perfect Lane following on the highway isn't like that useful until it's perfect because even",
    "start": "4064160",
    "end": "4069720"
  },
  {
    "text": "if it can mostly Drive in the city that doesn't really like help anybody cuz you still need to have your hand on the wheel you still need to be paying",
    "start": "4069720",
    "end": "4075240"
  },
  {
    "text": "attention so it doesn't like reduce or help the driver in any way right it's just kind of like a neat toy whereas",
    "start": "4075240",
    "end": "4081440"
  },
  {
    "text": "with with AI like even with 90% of the way there you can do a lot of things",
    "start": "4081440",
    "end": "4086839"
  },
  {
    "text": "already with it that are really really useful and I think at this point it's more just like a ux problem like like I",
    "start": "4086839",
    "end": "4092119"
  },
  {
    "text": "love kind of just like scrolling through Twitter and seeing all of the really like interesting and novel like ideas that people come up with and like how to",
    "start": "4092119",
    "end": "4098159"
  },
  {
    "text": "use this stuff and like most people like it wouldn't even cross their mind to try that but that's not necessarily a",
    "start": "4098159",
    "end": "4104159"
  },
  {
    "text": "problem because you know in like 5 years like most of our software will probably use something under the hood to like add",
    "start": "4104159",
    "end": "4110440"
  },
  {
    "text": "a lot of that functionality people are like sort of using chat GPT for now it'll just have a way better interface",
    "start": "4110440",
    "end": "4115679"
  },
  {
    "text": "you won't have to like explain to it sort of like what it's supposed to do it'll just kind of like be able to do it",
    "start": "4115679",
    "end": "4120920"
  },
  {
    "text": "so I think that part of it is really exciting just kind of seeing like how how it can be kind of like weaved into like existing software in like a really",
    "start": "4120920",
    "end": "4127600"
  },
  {
    "text": "seemless way yeah I I've had this argument for a while that like these large language models are sort of like",
    "start": "4127600",
    "end": "4133798"
  },
  {
    "text": "like fancy compilers and that if you don't know what they're doing they look a lot like magic um and they are like",
    "start": "4133799",
    "end": "4141040"
  },
  {
    "text": "inmen I mean compilers also are to some degree they are magic like the things you put in and then the stuff you get out you're like I I don't know how that",
    "start": "4141040",
    "end": "4147758"
  },
  {
    "text": "happened but when you think about in the simple like the pieces that are used to make it it's like oh well this actually",
    "start": "4147759",
    "end": "4153199"
  },
  {
    "text": "like I could comprehend this this isn't like some sort of thing that's beyond comprehension but when you start to",
    "start": "4153199",
    "end": "4158920"
  },
  {
    "text": "scale it up people get it's like a confusing it can get very confusing cuz humans are bad at big numbers it's like",
    "start": "4158920",
    "end": "4165000"
  },
  {
    "text": "that classical thing of the difference between a billion dollars and a million dollars is a billion dollars and when you say that people are like that",
    "start": "4165000",
    "end": "4171920"
  },
  {
    "text": "doesn't sound right but if you said the difference between $1,000 and $1 is $1,000 people would be like well yeah of",
    "start": "4171920",
    "end": "4177199"
  },
  {
    "text": "course so I think it's like when you get to those large numbers of things whether it's like a large number of compilation",
    "start": "4177199",
    "end": "4183238"
  },
  {
    "text": "instructions in a compiler or a large number of Weights in a large language model it starts to get like interesting",
    "start": "4183239",
    "end": "4189440"
  },
  {
    "text": "in what it can do and how you can apply it but once again I think it's like",
    "start": "4189440",
    "end": "4194520"
  },
  {
    "text": "that's not necessarily who I was like I I feel like those are still like movements into the niche kind of areas",
    "start": "4194520",
    "end": "4199679"
  },
  {
    "text": "of like oh these are these cool interesting things we can do with this technology um maybe even at a spicier",
    "start": "4199679",
    "end": "4205400"
  },
  {
    "text": "take would be for both self-driving and AGI we will never actually achieve those",
    "start": "4205400",
    "end": "4210920"
  },
  {
    "text": "things but it's still good to continue going on because all of the byproducts are very useful things for human life",
    "start": "4210920",
    "end": "4216880"
  },
  {
    "text": "and augmenting human life I think a lot of people say we can't achieve self-driving without AGI so if we can't",
    "start": "4216880",
    "end": "4222440"
  },
  {
    "text": "achieve AGI can't acheve self-driving either I mean there's a whole bunch of reasons why we might never achieve self-",
    "start": "4222440",
    "end": "4227480"
  },
  {
    "text": "drive like I don't know maybe we won't have cars in the future maybe we'll get really really good at public transportation and just have a need to",
    "start": "4227480",
    "end": "4233880"
  },
  {
    "text": "drive oh don't get me started about public transportation I go on another hour rant about that Toronto just",
    "start": "4233880",
    "end": "4239440"
  },
  {
    "text": "started building their third Subway in downtown after like 50 years I I live in like Rural America so",
    "start": "4239440",
    "end": "4247679"
  },
  {
    "text": "like the idea of public transportation is non-existent here it's I think there's like literally the town I live",
    "start": "4247679",
    "end": "4252880"
  },
  {
    "text": "in has I think two two taxi cars and they're like they're not always running you have to like call and schedule stuff",
    "start": "4252880",
    "end": "4258560"
  },
  {
    "text": "with them it's not like you wave down a taxi lift an Uber don't exist where I am o you know it's there's like glimpses of",
    "start": "4258560",
    "end": "4266239"
  },
  {
    "text": "possib like I watched this really cool video about Switzerland's train system where it's just like oh yeah there's this like random ski lift and coffee",
    "start": "4266239",
    "end": "4272280"
  },
  {
    "text": "shop that uh I think there's a hiking trail it's like oh he gets train service every 30 minutes all day long they're",
    "start": "4272280",
    "end": "4277440"
  },
  {
    "text": "like oh it's possible to do rural trains that function okay but yeah for for",
    "start": "4277440",
    "end": "4284120"
  },
  {
    "text": "Americans I think especially it's very hard for people that live in rural or Suburban places to imagine highquality",
    "start": "4284120",
    "end": "4290960"
  },
  {
    "text": "public transit I think sometimes it's almost like they need to experience the benefits to really see them like there",
    "start": "4290960",
    "end": "4297719"
  },
  {
    "text": "was I forget which cities there I think it was like Tennessee and some other City they were talking about putting a train that would like get you from one",
    "start": "4297719",
    "end": "4303560"
  },
  {
    "text": "of the other in a couple hours and I'd heard people on a podcast talking about it and they were like you know what's the point in that and I'm like yeah it",
    "start": "4303560",
    "end": "4309880"
  },
  {
    "text": "doesn't seem very useful until all of a sudden you can just zip over to that other City and you find yourself doing it way more often than you would have",
    "start": "4309880",
    "end": "4315960"
  },
  {
    "text": "otherwise because it's so easily available whereas like when it's you you have to hop up in a car and drive 8",
    "start": "4315960",
    "end": "4321760"
  },
  {
    "text": "hours or you have to fly and that's going to take you know everything that's involved with flying you're not going to do those things all the time but a train",
    "start": "4321760",
    "end": "4327280"
  },
  {
    "text": "is super easy most of the time yeah I remember it like blew my mind when I was visiting London and I realized that I",
    "start": "4327280",
    "end": "4332320"
  },
  {
    "text": "could take a train to Paris in like 2 hours and I was like wait I I like this trip I was going to visit London but I",
    "start": "4332320",
    "end": "4338440"
  },
  {
    "text": "can also just go to Paris and just like off I'm training to get there like that's crazy h all right um I think that's it",
    "start": "4338440",
    "end": "4345880"
  },
  {
    "text": "I'm going to play us out and then I will stop the recording thank you guys for joining Jonathan Adam Brad thank you",
    "start": "4345880",
    "end": "4351239"
  },
  {
    "text": "guys for joining and Chris thank you for helping me host of course thanks for having us thanks for having [Music]",
    "start": "4351239",
    "end": "4363400"
  },
  {
    "text": "us one cool thing about our new Chang log newsletter is that we don't proxy",
    "start": "4363400",
    "end": "4368760"
  },
  {
    "text": "links like almost everyone else does that's awesome because a there's no tracking and B you can hover on a link",
    "start": "4368760",
    "end": "4376560"
  },
  {
    "text": "to see where you're headed before clicking I do that all the time if you appreciate direct links as much as I do",
    "start": "4376560",
    "end": "4382960"
  },
  {
    "text": "pop in your email address at Chang log.com newws because the software world moves fast and we'll help you keep up",
    "start": "4382960",
    "end": "4390199"
  },
  {
    "text": "the easy way special thanks once again to our partners fastly and fly for",
    "start": "4390199",
    "end": "4395280"
  },
  {
    "text": "helping us bring you awesome pods each and every week and of course thank you break master cylinder these beats are",
    "start": "4395280",
    "end": "4401199"
  },
  {
    "text": "banging next time on go time Chris Angelica and Ian are joined by Andy",
    "start": "4401199",
    "end": "4406239"
  },
  {
    "text": "Walker to spitball a new style of conference they're calling hallway comp",
    "start": "4406239",
    "end": "4411920"
  },
  {
    "text": "stay tuned right here we'll have it ready for you next [Music]",
    "start": "4411920",
    "end": "4428770"
  },
  {
    "text": "week",
    "start": "4432360",
    "end": "4435360"
  },
  {
    "text": "anger",
    "start": "4439960",
    "end": "4442960"
  }
]