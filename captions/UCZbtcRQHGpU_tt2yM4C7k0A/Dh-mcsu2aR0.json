[
  {
    "text": "ah the dog days of summer everyone's taking time off chilling out maxing",
    "start": "400",
    "end": "7040"
  },
  {
    "text": "relaxing all cool maybe shooting some bball outside of their school so today",
    "start": "7040",
    "end": "13160"
  },
  {
    "text": "we are rebroadcasting a classic episode of go time all about tooling we took you",
    "start": "13160",
    "end": "18960"
  },
  {
    "text": "to the Future a few episodes ago now we're headed back in time to 2019 this",
    "start": "18960",
    "end": "25119"
  },
  {
    "text": "was originally episode 90 and it aired almost 3 years ago to the today it was a",
    "start": "25119",
    "end": "31119"
  },
  {
    "text": "simpler time then generics hadn't landed Co nope social distancing was only",
    "start": "31119",
    "end": "37640"
  },
  {
    "text": "something nerds knew about this is the way we didn't even have an unpopular",
    "start": "37640",
    "end": "43120"
  },
  {
    "text": "opinions segment back then so some of this conversation will be quaint considering all that's changed in the",
    "start": "43120",
    "end": "49320"
  },
  {
    "text": "world since then but most of it is still highly relevant we think you'll enjoy it",
    "start": "49320",
    "end": "54399"
  },
  {
    "text": "and we'll be back with some freshen next week when Natalie and Ian welcome R Steinberg to discuss o o and",
    "start": "54399",
    "end": "62700"
  },
  {
    "text": "[Music] go this episode is brought to you by our",
    "start": "62700",
    "end": "69000"
  },
  {
    "text": "friends at source craft they recently launched a new feature called code insights now you can track what really",
    "start": "69000",
    "end": "74200"
  },
  {
    "text": "matters to you and your team in your codebase transform your code into a quable database to create customizable",
    "start": "74200",
    "end": "79479"
  },
  {
    "text": "visual dashboards in seconds here's how engineering teams are using Code ins sites they can track migrations adoption",
    "start": "79479",
    "end": "86799"
  },
  {
    "text": "and deprecation across the code base they can detect and track versions of languages or packages they can ensure",
    "start": "86799",
    "end": "93000"
  },
  {
    "text": "the removal of security vulnerabilities like log 4J can understand code by team track code smells and health and",
    "start": "93000",
    "end": "100119"
  },
  {
    "text": "visualize configurations and services here's what the engineering manager at presy has to say about this new feature",
    "start": "100119",
    "end": "105799"
  },
  {
    "text": "quote as we've grown so has a need to better track and communicate our progress and our goals across the",
    "start": "105799",
    "end": "111759"
  },
  {
    "text": "engineering team and the broader company with code insights our data and migration tracking is accurate across",
    "start": "111759",
    "end": "117880"
  },
  {
    "text": "our entire code base and our engineering and our managers can shift out of manual spreadsheets and spend more time working",
    "start": "117880",
    "end": "125200"
  },
  {
    "text": "on code end quote the next step is to see how other teams are using this awesome feature head to about.",
    "start": "125200",
    "end": "132360"
  },
  {
    "text": "source.com code-in sites this link will be in the show notes again about. source.com",
    "start": "132360",
    "end": "141280"
  },
  {
    "text": "code-in [Music]",
    "start": "141280",
    "end": "148760"
  },
  {
    "text": "insights",
    "start": "148760",
    "end": "151760"
  },
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "157640",
    "end": "164480"
  },
  {
    "text": "from around the go Community we take requests just like all the best wedding DJs head to go time. fm/ request to let",
    "start": "164480",
    "end": "173599"
  },
  {
    "text": "us know what you want to hear about on the Pod special thanks to fastly for ensuring go time reaches your ears super",
    "start": "173599",
    "end": "180840"
  },
  {
    "text": "fast wherever you listen check them out at fastly.com okay here we",
    "start": "180840",
    "end": "186420"
  },
  {
    "text": "[Music] go hello and welcome to go time I'm Matt",
    "start": "186420",
    "end": "194920"
  },
  {
    "text": "ryer on today's episode we're talking about tooling all those great tools that",
    "start": "194920",
    "end": "200319"
  },
  {
    "text": "help us be successful help us do our job and we use them go tools all the time uh",
    "start": "200319",
    "end": "206640"
  },
  {
    "text": "every day we use them for building for running code for testing uh we use them",
    "start": "206640",
    "end": "211680"
  },
  {
    "text": "for formatting our code for linting and vetting and many many many more things",
    "start": "211680",
    "end": "218239"
  },
  {
    "text": "too and I think this show will be useful to anybody new to go that wants to get a",
    "start": "218239",
    "end": "223720"
  },
  {
    "text": "sense of the tooling around that that we all use um and I'm sure there will also",
    "start": "223720",
    "end": "230000"
  },
  {
    "text": "be some uh golden nuggets for the seasoned Gophers also and I'm so",
    "start": "230000",
    "end": "235920"
  },
  {
    "text": "confident because of who's joining me I'm joined today by in no particular",
    "start": "235920",
    "end": "241959"
  },
  {
    "text": "order Jana dogen hello Jana hello hey welcome back to go time how have you",
    "start": "241959",
    "end": "249079"
  },
  {
    "text": "been yeah it's been a while I've been traveling I guess yeah yeah yeah you went to where did you go I was in Marve",
    "start": "249079",
    "end": "256759"
  },
  {
    "text": "Spain right like the last time we talked like I was just going for like a",
    "start": "256759",
    "end": "262320"
  },
  {
    "text": "conference and then I never came back to the show I'm so sorry that's all right I can understand",
    "start": "262320",
    "end": "268240"
  },
  {
    "text": "if you're you're off and travels to exotic places for work it's a tough life",
    "start": "268240",
    "end": "275759"
  },
  {
    "text": "such yeah and you you told me earlier that everything you do at work is completely confidential do you want to",
    "start": "275759",
    "end": "281960"
  },
  {
    "text": "just break all the rules and tell us anyway or well kind of like I mean I'm actually about to switch to a new job",
    "start": "281960",
    "end": "288280"
  },
  {
    "text": "like I mean not a new job but sort of like a new role um and currently I'm still exploring what I'm doing uh what",
    "start": "288280",
    "end": "295600"
  },
  {
    "text": "I'm supposed to do and um it's confidential not because it's supposed to of be super confidential but I am not",
    "start": "295600",
    "end": "302199"
  },
  {
    "text": "sure about like what I will be focusing on so I think I will need like a week or",
    "start": "302199",
    "end": "307400"
  },
  {
    "text": "something that's EXC just don't get it personal it's not about you it's just you know I'm still exploring yeah no",
    "start": "307400",
    "end": "314639"
  },
  {
    "text": "absolutely um I do obviously I do take it very personally but I'll pretend that I don't um well also uh joining us on",
    "start": "314639",
    "end": "322280"
  },
  {
    "text": "today's show it's only Johnny Boro Hello Johnny hello there and speaking of new",
    "start": "322280",
    "end": "328039"
  },
  {
    "text": "gigs you you've just started yours haven't you or yeah recently yeah recently it's been uh it's been a couple",
    "start": "328039",
    "end": "334319"
  },
  {
    "text": "weeks uh still on boarding as they say um but uh yeah still still exciting still um looking forward to contributing",
    "start": "334319",
    "end": "341639"
  },
  {
    "text": "and learning um you know new new gigs are always U exciting that way right there's that honeymoon period where",
    "start": "341639",
    "end": "347880"
  },
  {
    "text": "everything is new and you're learning and you're learning about systems and people and all that good stuff and then",
    "start": "347880",
    "end": "354080"
  },
  {
    "text": "then at some point I'm sure I'm going to cross that threshold I'm like ah what is going on I need to start fixing things",
    "start": "354080",
    "end": "359600"
  },
  {
    "text": "but so far everything is going well oh good I'm glad to hear it yes it is exciting it's scary and exciting all at",
    "start": "359600",
    "end": "366280"
  },
  {
    "text": "the same time new jobs um but yeah no I wish you all the best well if you don't",
    "start": "366280",
    "end": "371319"
  },
  {
    "text": "mind we'll keep asking you about it on the show because I'm very interested like I think it's useful for other people as well to hear about um things",
    "start": "371319",
    "end": "378479"
  },
  {
    "text": "that we get up to in our professional lives so if you don't mind I'll keep bugging you about about that sure",
    "start": "378479",
    "end": "385120"
  },
  {
    "text": "thing uh so yeah we're going to Let's jump straight in we're going to be talking about go tools today and I asked",
    "start": "385120",
    "end": "392039"
  },
  {
    "text": "on Twitter earlier uh which of the go tools are people's favorites and which ones do they like the most um mine I'll",
    "start": "392039",
    "end": "400000"
  },
  {
    "text": "just kick off mine probably has to be G fum or G fmt or go format however you",
    "start": "400000",
    "end": "407400"
  },
  {
    "text": "say it um you see it for those that don't know it formats all the go code so",
    "start": "407400",
    "end": "413280"
  },
  {
    "text": "it looks the same um and all the rules are uh baked into the tools so you don't",
    "start": "413280",
    "end": "419800"
  },
  {
    "text": "get to choose tabs versus spaces you don't get to choose where the braces go",
    "start": "419800",
    "end": "425120"
  },
  {
    "text": "you don't really get to choose a great deal about the the actual format of your code which again I think to some people",
    "start": "425120",
    "end": "432599"
  },
  {
    "text": "when they're used to having tools that allow them to configure all this they feel like that's",
    "start": "432599",
    "end": "437960"
  },
  {
    "text": "a deficiency in go but it turns out to be one of Go's superpowers in my opinion because what happens is all go code",
    "start": "437960",
    "end": "445199"
  },
  {
    "text": "starts to look the same and starts to look familiar and I've done it where I've been to a project and found that",
    "start": "445199",
    "end": "453560"
  },
  {
    "text": "the code just looks like I wrote it and I definitely didn't and I think that that's awesome if you think about PLL",
    "start": "453560",
    "end": "460440"
  },
  {
    "text": "requests you know with with with Whit space sometimes PLL requests in having loads of Whit space makes it really",
    "start": "460440",
    "end": "467039"
  },
  {
    "text": "difficult to really see what the Crux of the change is well with gof fum you we",
    "start": "467039",
    "end": "472319"
  },
  {
    "text": "don't have that problem because it's all formatted nicely um anyone else do you uh do you",
    "start": "472319",
    "end": "477879"
  },
  {
    "text": "how do you feel about gof fumed how do you pronounce it by the way let's just get that one out of the way gof right",
    "start": "477879",
    "end": "484639"
  },
  {
    "text": "okay good I mean that's yeah that's what I know yeah that's what I was told it's",
    "start": "484639",
    "end": "491000"
  },
  {
    "text": "it's always awkward when uh when uh like like I'm teaching or something and and I say the fum package for example which is",
    "start": "491000",
    "end": "497280"
  },
  {
    "text": "you know it's people kind of look at me sideways I'm like yeah I know I know just Just go with it right because if",
    "start": "497280",
    "end": "503520"
  },
  {
    "text": "you if if you say instead if you say fmt or or format God forbid like you know golfers are going to look at you a",
    "start": "503520",
    "end": "509440"
  },
  {
    "text": "little weird Just Go With It yeah it takes a while for people to I think part it initially and then they learn it and",
    "start": "509440",
    "end": "516518"
  },
  {
    "text": "like they take it and like they don't question it so I'm trying to you know keep it consistent by saying go f yeah",
    "start": "516519",
    "end": "523240"
  },
  {
    "text": "same I mean I I I agree like I wouldn't have done that I don't think naturally",
    "start": "523240",
    "end": "528720"
  },
  {
    "text": "but I heard about it and yeah I'm I do it for consistency too um it's funny",
    "start": "528720",
    "end": "534480"
  },
  {
    "text": "because like sometimes people will say goang because when we when we use Google and when we search or when we use",
    "start": "534480",
    "end": "540920"
  },
  {
    "text": "hashtags we tend to write goang but we never say goang so it's a little Pro tip",
    "start": "540920",
    "end": "547360"
  },
  {
    "text": "for any uh anyone that's new to the go Community when you're talking about the language just call it go don't say",
    "start": "547360",
    "end": "554480"
  },
  {
    "text": "goang same with fum yeah the the so with",
    "start": "554480",
    "end": "560120"
  },
  {
    "text": "regards to the the the fumed um well not F go f I should say um the I the reason",
    "start": "560120",
    "end": "568560"
  },
  {
    "text": "well let me me let me step back for a little bit when I first came across go I was taking a back honestly cuz cuz I",
    "start": "568560",
    "end": "574959"
  },
  {
    "text": "wasn't used to basically tooling sort of formatting my code to look in like a",
    "start": "574959",
    "end": "581920"
  },
  {
    "text": "standardized sort of any sort of way right so you know I come from programming languages where everybody",
    "start": "581920",
    "end": "587160"
  },
  {
    "text": "has their little pet peeves and little quirks about you know I like my braces you know you know to be lined up",
    "start": "587160",
    "end": "592920"
  },
  {
    "text": "together right and oh and another person be like I like my braces you me so to end at the at the Declaration and and",
    "start": "592920",
    "end": "599399"
  },
  {
    "text": "for the for the closing bracket or brace to be at the end whatever and so it's",
    "start": "599399",
    "end": "604440"
  },
  {
    "text": "like people would have sort of these these back and forths around sort of styling you know what what's more",
    "start": "604440",
    "end": "609839"
  },
  {
    "text": "readable versus what's not as readable and obviously it was all sort of subjective right everybody has their own",
    "start": "609839",
    "end": "615079"
  },
  {
    "text": "preference their own quirks and what they're used to what they're not used to so but gofam sort of threw all of that out at the window um when I first came",
    "start": "615079",
    "end": "622240"
  },
  {
    "text": "across it and and I I'll be honest I mean for the first month or so I was like I I don't like everything about",
    "start": "622240",
    "end": "629560"
  },
  {
    "text": "what it does you know it it I'm happy with like 90% of it but I don't like everything about it but then over as",
    "start": "629560",
    "end": "636240"
  },
  {
    "text": "time went on I really began to love the tool and what it does because the the",
    "start": "636240",
    "end": "642639"
  },
  {
    "text": "beauty of it I think you touched on that is that every basically go code started looking like I expected it to right so",
    "start": "642639",
    "end": "649399"
  },
  {
    "text": "basically that that cognitive load like that that aspect of looking at code and reviewing code that just went out the",
    "start": "649399",
    "end": "654959"
  },
  {
    "text": "window I didn't have to worry about okay is this is this person's code going to look differently formatted than this other one basically I could just focus",
    "start": "654959",
    "end": "661160"
  },
  {
    "text": "on the actual coding what it was doing as opposed to you know sort of trying to figure out Parts in my head okay this",
    "start": "661160",
    "end": "666800"
  },
  {
    "text": "person quirks are that way and that person quirks are that way kind of thing so it was valuable in that way yeah",
    "start": "666800",
    "end": "671959"
  },
  {
    "text": "there's actually something from Robert gismer that he used to say he's the person who is maintaining and gofund and like all the rules and so on he says",
    "start": "671959",
    "end": "678720"
  },
  {
    "text": "that he doesn't agree with like all the styling um you know I mean he doesn't necessarily agree with gof funds but",
    "start": "678720",
    "end": "685320"
  },
  {
    "text": "it's really good that like somebody's some tool is enforced it so there's no",
    "start": "685320",
    "end": "690399"
  },
  {
    "text": "question um I I mean I work for a very large company and I witnessed uh it took",
    "start": "690399",
    "end": "697160"
  },
  {
    "text": "like four years to um just tweak one little side guideline change on the Java",
    "start": "697160",
    "end": "704200"
  },
  {
    "text": "style guideline and can you imagine like you know there's all these like hundreds of people with like strong opinions",
    "start": "704200",
    "end": "710519"
  },
  {
    "text": "about Style just like wasting four years debating on minor style issues I like",
    "start": "710519",
    "end": "715800"
  },
  {
    "text": "the fact that it this like go from there's like this canonical place and there's no debate uh there's like one",
    "start": "715800",
    "end": "722600"
  },
  {
    "text": "source of truth type of thing and everybody has to agree with it even if",
    "start": "722600",
    "end": "728079"
  },
  {
    "text": "you know the formatting is not always what you would desire yeah do you think",
    "start": "728079",
    "end": "733680"
  },
  {
    "text": "they would be able to retrospectively fit that into the tool chain say that there wasn't gof originally and it just",
    "start": "733680",
    "end": "741199"
  },
  {
    "text": "came out now do you think the the community and everyone would rally around it in the same way or do you",
    "start": "741199",
    "end": "747360"
  },
  {
    "text": "think there's something to be said for the fact that this was there from the very beginning I think it's necessary that",
    "start": "747360",
    "end": "753639"
  },
  {
    "text": "like initially you create some like you know initial culture around you know just relying on a tool because I think",
    "start": "753639",
    "end": "760560"
  },
  {
    "text": "it creates like enough PE you know it creates this community with enough people supporting the idea and",
    "start": "760560",
    "end": "766519"
  },
  {
    "text": "understanding why it's valuable if you try to like inject this type of tools at a later time the community is already",
    "start": "766519",
    "end": "772560"
  },
  {
    "text": "fragmented and there's a lot of excuses to you know prefer a personal style because you already for examp example",
    "start": "772560",
    "end": "779279"
  },
  {
    "text": "invested in one particular style all across a company and like there's no way to you know just kind of like fix things",
    "start": "779279",
    "end": "785880"
  },
  {
    "text": "at a later time so it's really good that they you know came up with a tool initially at least that's my opinion",
    "start": "785880",
    "end": "792480"
  },
  {
    "text": "yeah I agree with you I mean there's a few examples where the foresight or the Insight from the team in the in the",
    "start": "792480",
    "end": "800040"
  },
  {
    "text": "original design I think we we really benefit from some of those decisions and",
    "start": "800040",
    "end": "805279"
  },
  {
    "text": "we'll talk about more of them as well I think the fact that that another one of the tools go test that was there as well",
    "start": "805279",
    "end": "811199"
  },
  {
    "text": "from the very beginning so testing as a concept was part of it was a first class",
    "start": "811199",
    "end": "816800"
  },
  {
    "text": "concern in go and that was of course makes sense because we we at the time it",
    "start": "816800",
    "end": "822560"
  },
  {
    "text": "was being designed you know that was kind of what how we were building software now we were writing tests a lot",
    "start": "822560",
    "end": "828920"
  },
  {
    "text": "it was an important part of of software engineering um but the fact that they",
    "start": "828920",
    "end": "834759"
  },
  {
    "text": "that they make these decisions I think early just sets a precedent and and yeah",
    "start": "834759",
    "end": "841120"
  },
  {
    "text": "from there we we I think it pays dividends every day yeah I think go is doing a good job in terms of like you",
    "start": "841120",
    "end": "847079"
  },
  {
    "text": "know identifying 80% of what is essential in software engineering and I",
    "start": "847079",
    "end": "852120"
  },
  {
    "text": "think you know tooling is kind of also representing those priorities yeah so extend so Thinking Beyond gofun then if",
    "start": "852120",
    "end": "860279"
  },
  {
    "text": "we look at goint and also go vet um does anyone want to have a stab at describing",
    "start": "860279",
    "end": "866639"
  },
  {
    "text": "the difference between those two or describing what they actually do cool",
    "start": "866639",
    "end": "873880"
  },
  {
    "text": "well yeah so so go lint goint is I I I",
    "start": "873880",
    "end": "879079"
  },
  {
    "text": "like it um it essentially looks at your code and does some static analysis and",
    "start": "879079",
    "end": "885440"
  },
  {
    "text": "can catch common mistakes and kind of give you warnings about them and usually",
    "start": "885440",
    "end": "891079"
  },
  {
    "text": "sometimes they're not mistakes but they're just uh there's best practices",
    "start": "891079",
    "end": "896240"
  },
  {
    "text": "and and um and you can run the lint tools on your code and see if it's got",
    "start": "896240",
    "end": "901680"
  },
  {
    "text": "any recommendations for things that you might change so one example is if you if you have something in a package that's",
    "start": "901680",
    "end": "908199"
  },
  {
    "text": "exported if it starts with a capital letter then you you should have a comment on that really that's the sort",
    "start": "908199",
    "end": "914480"
  },
  {
    "text": "of accepted practice now the the go speec doesn't say that so it of course",
    "start": "914480",
    "end": "919759"
  },
  {
    "text": "nothing you know it's not a compile error if you don't have a comment there but go lint tool will catch it and say",
    "start": "919759",
    "end": "925519"
  },
  {
    "text": "you know for for maximum kind of quality for the best quality you should consider",
    "start": "925519",
    "end": "930759"
  },
  {
    "text": "a putting a comment here and and there are a few rules around how we write comments as well where we repeat the",
    "start": "930759",
    "end": "936000"
  },
  {
    "text": "name as the first word in the comment and so there's a few little things like that that are encoded in the in the",
    "start": "936000",
    "end": "942759"
  },
  {
    "text": "linter right yeah uh there's you know initial actually like we need to mention",
    "start": "942759",
    "end": "947959"
  },
  {
    "text": "first I think there's a difference between vet and lint uh vet is you know reporting more of like suspicious stuff",
    "start": "947959",
    "end": "954480"
  },
  {
    "text": "and um you know like some patterns that might be just you know um might be just I mean",
    "start": "954480",
    "end": "964079"
  },
  {
    "text": "a misuse of the um of an API that it may actually you know just kind of like",
    "start": "964079",
    "end": "970279"
  },
  {
    "text": "corrupt some memory or whatever um like think about like the typical example of printf if uh you know you pass the wrong",
    "start": "970279",
    "end": "978079"
  },
  {
    "text": "type of arguments vet is going to um complain about it um so both lint is",
    "start": "978079",
    "end": "984560"
  },
  {
    "text": "more about like I think style errors more of like um if you don't for example",
    "start": "984560",
    "end": "990000"
  },
  {
    "text": "go do a public API it's going to complain about that type of uh problems",
    "start": "990000",
    "end": "995800"
  },
  {
    "text": "so that became a part of the test but like not I think all the things that is reported as a part of red uh is genuine",
    "start": "995800",
    "end": "1004240"
  },
  {
    "text": "um so can like there could be like false positives as far as I know and it also",
    "start": "1004240",
    "end": "1009480"
  },
  {
    "text": "applies to lint as well so these are not like a part of the compiler because you",
    "start": "1009480",
    "end": "1015279"
  },
  {
    "text": "know they there's like some uh um reports that is not accurate or",
    "start": "1015279",
    "end": "1022000"
  },
  {
    "text": "something uh but it's just generally like you know you need to follow they generally generate like",
    "start": "1022000",
    "end": "1028959"
  },
  {
    "text": "genuine enough reports and they're really useful yeah you're right when it when it catches if you use like print F",
    "start": "1028959",
    "end": "1036360"
  },
  {
    "text": "or wrap F if you use one of those F methods and then you don't put the correct number of verbs or whatever the",
    "start": "1036360",
    "end": "1043720"
  },
  {
    "text": "arguments in Catching things like that is extremely useful because it's quite hard at a glance to just see those kinds",
    "start": "1043720",
    "end": "1050760"
  },
  {
    "text": "of mistakes uh so yeah I I I I think people should switch on those tools for",
    "start": "1050760",
    "end": "1056679"
  },
  {
    "text": "their code base at least run them for their code base and see what kinds of things it is actually saying because you",
    "start": "1056679",
    "end": "1063120"
  },
  {
    "text": "might find you agree with them the comment one's a good example I mean it it's quite dogmatic it just says okay",
    "start": "1063120",
    "end": "1070280"
  },
  {
    "text": "it's exported so it needs a comment now if you're if that method is something",
    "start": "1070280",
    "end": "1076080"
  },
  {
    "text": "like or if it's a function that says new thing then it's obvious that's making a",
    "start": "1076080",
    "end": "1081600"
  },
  {
    "text": "new thing and your comment's probably going to say new thing makes a new thing so we have a little bit of redundancy",
    "start": "1081600",
    "end": "1088880"
  },
  {
    "text": "but I think generally speaking if you do follow the the lint tools and and then I",
    "start": "1088880",
    "end": "1094600"
  },
  {
    "text": "find that you know the code again it starts to look more familiar and you get all the other benefits of of go fed one",
    "start": "1094600",
    "end": "1102520"
  },
  {
    "text": "of the things that I typically do and which is probably the reason why um um",
    "start": "1102520",
    "end": "1109120"
  },
  {
    "text": "for me like off the top of my head sort of differentiating between the lenting and the V vetting was was sort of I was",
    "start": "1109120",
    "end": "1115880"
  },
  {
    "text": "like H I guess I've never really thought about the difference that much because they're part of my tool chain so like on",
    "start": "1115880",
    "end": "1121919"
  },
  {
    "text": "my day-to-day I I use vs code uh and and and B as as sort of my my editors of",
    "start": "1121919",
    "end": "1127679"
  },
  {
    "text": "choice um and basically they have the plugins you know and and the extension",
    "start": "1127679",
    "end": "1132720"
  },
  {
    "text": "sort of you know built in that's put in my workflow so every time I you know hit save right these tools are are are",
    "start": "1132720",
    "end": "1137919"
  },
  {
    "text": "running right they they and and I'm getting different um basically uh",
    "start": "1137919",
    "end": "1143320"
  },
  {
    "text": "markers at different different spots from different tools right so there's another popular open Corpus source",
    "start": "1143320",
    "end": "1148520"
  },
  {
    "text": "project out there and I think it's called goal ler um which includes a bunch of those kinds of tools as well",
    "start": "1148520",
    "end": "1153960"
  },
  {
    "text": "you can configure you turn some off and others on and whatnot but these tools together they give you sort of a set of",
    "start": "1153960",
    "end": "1161440"
  },
  {
    "text": "outputs that you can basically go through and and figure out oh yeah I I missed you know I used the wrong verb here I'm supposed to use a integer I'm",
    "start": "1161440",
    "end": "1167919"
  },
  {
    "text": "using string instead right the things that the the lter and and and and fet would sort of find for you and and if",
    "start": "1167919",
    "end": "1174840"
  },
  {
    "text": "you rent them sort of individually but because they're part of my tool train that basically I just look at my my my",
    "start": "1174840",
    "end": "1180880"
  },
  {
    "text": "the view at the bottom of my editor and and get a list of things that I go and fix so I've sort of almost basically I",
    "start": "1180880",
    "end": "1186440"
  },
  {
    "text": "don't care I should say which tools give me what unless I really need to work",
    "start": "1186440",
    "end": "1192320"
  },
  {
    "text": "with a specific tool but I kind of you know it's part of my workflow it's just part of my editor and every time I hit save form my gets done um go Imports",
    "start": "1192320",
    "end": "1200120"
  },
  {
    "text": "says this thing whatever whatever refs in my code that is not imported it it brings that in automatically um all",
    "start": "1200120",
    "end": "1206000"
  },
  {
    "text": "these things sort of happen you know the tooling kind of makes it easy to sort of um just focus on writing the code and",
    "start": "1206000",
    "end": "1211440"
  },
  {
    "text": "not worry so much about you know having to run individual tools one at a time kind of thing yeah it's a good uh point",
    "start": "1211440",
    "end": "1217200"
  },
  {
    "text": "that actually making it a part of you know the editing experience is really useful like Especial vet is reporting a",
    "start": "1217200",
    "end": "1223360"
  },
  {
    "text": "lot of like you know useful stuffff like hey this is unreachable or you know you're passing the wrong um you know",
    "start": "1223360",
    "end": "1229679"
  },
  {
    "text": "you're passing for example un Marshall and non pointer and like stuff like that",
    "start": "1229679",
    "end": "1235440"
  },
  {
    "text": "like it's so hard sometimes by just when you're typing and when you're just like",
    "start": "1235440",
    "end": "1241000"
  },
  {
    "text": "coding but like tool is really helping you to do the right thing as you are you know programming yeah I and I extend",
    "start": "1241000",
    "end": "1247120"
  },
  {
    "text": "that to running tests as well I tend to write unit tests which run very quickly and then you can run those every time",
    "start": "1247120",
    "end": "1254480"
  },
  {
    "text": "you save the package usually depend you know once they if they get if they start getting too slow then of course you have",
    "start": "1254480",
    "end": "1261200"
  },
  {
    "text": "to have a different strategy but certainly in the beginning if it's unit tests that just run very quickly and the",
    "start": "1261200",
    "end": "1266840"
  },
  {
    "text": "the build timing go is still phenomenal we always kind of forget about it um",
    "start": "1266840",
    "end": "1272039"
  },
  {
    "text": "until you have to go and build a different code base then you then you appreciate it again but and Johnny by",
    "start": "1272039",
    "end": "1278960"
  },
  {
    "text": "the way yeah the metalin now apparently is called goang CI hyphen lint so if you want to install that into vs code it's",
    "start": "1278960",
    "end": "1286559"
  },
  {
    "text": "goang CI hyphen lint that's the new interesting name of that yeah but but you're right it's a meta",
    "start": "1286559",
    "end": "1293120"
  },
  {
    "text": "linter it runs a range of other linters and kind of gives you gives you that one",
    "start": "1293120",
    "end": "1298159"
  },
  {
    "text": "view of it and they integrate brilliantly into the idees as well so that's the other thing like you say you",
    "start": "1298159",
    "end": "1303240"
  },
  {
    "text": "can run it on Save but even if you don't you can you can still usually integrate it into the IDE in some way that just",
    "start": "1303240",
    "end": "1309720"
  },
  {
    "text": "makes it uh part of your routine because you know anytime you can get that live",
    "start": "1309720",
    "end": "1316000"
  },
  {
    "text": "feedback from the code that that's valuable you know because usually as",
    "start": "1316000",
    "end": "1321360"
  },
  {
    "text": "you're working you learn too and that's a great way to learn things as as you're",
    "start": "1321360",
    "end": "1326600"
  },
  {
    "text": "as you're writing code and to see a linta saying oh you know this is unreachable now or that thing's over",
    "start": "1326600",
    "end": "1332760"
  },
  {
    "text": "there now um you know and if it's tests too then then oh these tests are broken",
    "start": "1332760",
    "end": "1338400"
  },
  {
    "text": "over here that you didn't expect um and you just get that feedback from the code which is so useful when when you're",
    "start": "1338400",
    "end": "1344600"
  },
  {
    "text": "working and you shouldn't have to wait until basically say you know the you know if if you have um CI continuous",
    "start": "1344600",
    "end": "1351640"
  },
  {
    "text": "integration you should um you shouldn't have to wait until the code reaches um you know that remote server where where",
    "start": "1351640",
    "end": "1357960"
  },
  {
    "text": "all these tools are run for you to get that feedback it's much easier much faster right like you're saying that feedback loop is much tighter when when",
    "start": "1357960",
    "end": "1365080"
  },
  {
    "text": "it's part of your tooling so there are some things you can do locally right to make sure your code is is is fumed it make sure it's it's it's vetted it's",
    "start": "1365080",
    "end": "1371840"
  },
  {
    "text": "lended and all that and all that good stuff and then when it when it goes up for review for PR you know Circle you",
    "start": "1371840",
    "end": "1377320"
  },
  {
    "text": "know whatever whatever C2 using Travis Circle whatever um there's dozens of them these days so you can sort of you",
    "start": "1377320",
    "end": "1383120"
  },
  {
    "text": "know they give it they give it a blessing and then now people can just focus on what does the code do right they don't have to tell hey you forgot",
    "start": "1383120",
    "end": "1389520"
  },
  {
    "text": "to you know um run G or something that right should you take advantage of these tools locally they're very good tools so",
    "start": "1389520",
    "end": "1395880"
  },
  {
    "text": "I I I wholeheartedly encourage folks to to make them part of your development workflow yeah one of the I think uh best",
    "start": "1395880",
    "end": "1401960"
  },
  {
    "text": "parts is like they are really fast also you know it's a part of the editing experience because they are fast um and",
    "start": "1401960",
    "end": "1410039"
  },
  {
    "text": "you know it's just I i' I'm coming from like background where you know I use a",
    "start": "1410039",
    "end": "1416279"
  },
  {
    "text": "lot of java tools um and it's you know not like as I think smooth experience we",
    "start": "1416279",
    "end": "1421919"
  },
  {
    "text": "used to have like similar static tools but it was not as smooth as all these go tools so uh nobody is making it optional",
    "start": "1421919",
    "end": "1428640"
  },
  {
    "text": "because it doesn't really you know make the editing experience more challenging because they are fast and they're",
    "start": "1428640",
    "end": "1436880"
  },
  {
    "text": "useful [Music]",
    "start": "1436880",
    "end": "1442779"
  },
  {
    "text": "this episode is brought to you by square millions of businesses depend on Square Partners to build custom Solutions using",
    "start": "1447000",
    "end": "1453840"
  },
  {
    "text": "Square products and apis when you become a square Solutions partner you get to leverage the entire Square platform to",
    "start": "1453840",
    "end": "1459799"
  },
  {
    "text": "build robust e-commerce websites smart payment Integrations and custom solutions for square sellers you don't",
    "start": "1459799",
    "end": "1466039"
  },
  {
    "text": "just get access to sdks and apis they get access to the exact sdks and the",
    "start": "1466039",
    "end": "1471640"
  },
  {
    "text": "exact apis that square uses to build the square platform and all their applications this is a partnership that",
    "start": "1471640",
    "end": "1478480"
  },
  {
    "text": "helps you grow square has partner managers that help you develop your strategy close deals and gain customers",
    "start": "1478480",
    "end": "1483960"
  },
  {
    "text": "there are literally millions of square sellers who need custom Solutions so they can innovate for their customers",
    "start": "1483960",
    "end": "1489520"
  },
  {
    "text": "and build their businesses they get incentives and profit sharing you can earn a 25% status Revenue share seller",
    "start": "1489520",
    "end": "1495799"
  },
  {
    "text": "referrals product bounties and more you get Alpha access to apis and new products you get product marketing Tech",
    "start": "1495799",
    "end": "1501559"
  },
  {
    "text": "and sales support and you're also able to get square certified and get training on all things Square so you can deliver",
    "start": "1501559",
    "end": "1506799"
  },
  {
    "text": "for square sellers the next step is to head to Chang law.com square and click become a Solutions partner again Chang",
    "start": "1506799",
    "end": "1513440"
  },
  {
    "text": "law.com",
    "start": "1513440",
    "end": "1515799"
  },
  {
    "text": "[Music]",
    "start": "1518740",
    "end": "1525120"
  },
  {
    "text": "Square we mentioned go test that's another tool that we use a lot um anyone",
    "start": "1525120",
    "end": "1530640"
  },
  {
    "text": "that's not used it if you write test codes in your go programs and you do that usually by naming the file with",
    "start": "1530640",
    "end": "1537440"
  },
  {
    "text": "undor test. go at the end and then you run go test it will look through all",
    "start": "1537440",
    "end": "1543240"
  },
  {
    "text": "those test files and it would actually run all the test code for you and that's really how you know you can if you do",
    "start": "1543240",
    "end": "1549720"
  },
  {
    "text": "tdd you know that your code is is fulfilling its promises it's doing what you said it was going to do um there's",
    "start": "1549720",
    "end": "1557200"
  },
  {
    "text": "there's also another little feature in the test tool which I think gets overlooked a little bit and it's the the",
    "start": "1557200",
    "end": "1562960"
  },
  {
    "text": "RAS detector um so when when you're writing concurrent code it's possible",
    "start": "1562960",
    "end": "1569480"
  },
  {
    "text": "for you to uh break the rules and and sort of try and read and write from the",
    "start": "1569480",
    "end": "1574679"
  },
  {
    "text": "same data at the same time and if you try and do something like that that's illegal and it will crash the program",
    "start": "1574679",
    "end": "1581760"
  },
  {
    "text": "but of course it's very difficult to see that sometimes when you if you've",
    "start": "1581760",
    "end": "1587000"
  },
  {
    "text": "written the current code and certainly difficult to write tests for it because",
    "start": "1587000",
    "end": "1592080"
  },
  {
    "text": "sometimes it might just not happen just because of the way that things get scheduled um but there is a a race flag",
    "start": "1592080",
    "end": "1598720"
  },
  {
    "text": "which you can pass into go test which will it's a bit slower but it does some",
    "start": "1598720",
    "end": "1603840"
  },
  {
    "text": "additional checks and you can catch those um potential",
    "start": "1603840",
    "end": "1609600"
  },
  {
    "text": "Deadlocks early which is which is kind of cool yeah and it's um the the tooling",
    "start": "1609600",
    "end": "1616039"
  },
  {
    "text": "is also a part of you know the the standard tooling it's not just a test but it's a really good addition that",
    "start": "1616039",
    "end": "1622399"
  },
  {
    "text": "like TN you know detector is also a part of the test because we all have this",
    "start": "1622399",
    "end": "1628120"
  },
  {
    "text": "workflow of not merging things if the tests are not passing so you would you know ideally want to enable the race",
    "start": "1628120",
    "end": "1635279"
  },
  {
    "text": "detector as a part of your CI um and it's amazing but uh there's like one",
    "start": "1635279",
    "end": "1640399"
  },
  {
    "text": "thing I think we should mention that your tests should cover concrete cases uh concrete cases so uh the you know the",
    "start": "1640399",
    "end": "1647600"
  },
  {
    "text": "detector can detect them if you don't represent those like concrete you know situations the detector won't be able to",
    "start": "1647600",
    "end": "1654200"
  },
  {
    "text": "detect them but it's amazing because it's um it's just like so on point um",
    "start": "1654200",
    "end": "1659360"
  },
  {
    "text": "and it's easy and it's a part of the standard tools so you don't have to like you know figure out like all this",
    "start": "1659360",
    "end": "1665120"
  },
  {
    "text": "additional extra tools or whatever in order to get the benefit yeah now it's worth saying that the the race detector",
    "start": "1665120",
    "end": "1672240"
  },
  {
    "text": "will if if it reports that there's a violation then it that is a violation",
    "start": "1672240",
    "end": "1677799"
  },
  {
    "text": "but it doesn't necessarily catch everything isn't that true yeah yeah okay so but still I mean",
    "start": "1677799",
    "end": "1685360"
  },
  {
    "text": "you know it's still to be honest I've I've never seen a a race condition get",
    "start": "1685360",
    "end": "1692240"
  },
  {
    "text": "through after testing it with with because you are actually good in terms",
    "start": "1692240",
    "end": "1697799"
  },
  {
    "text": "of like you care about your tests so you represent all the cases for I've seen a",
    "start": "1697799",
    "end": "1703000"
  },
  {
    "text": "lot of times people are just like you know not creating those like uh situations where concurrency is a",
    "start": "1703000",
    "end": "1709919"
  },
  {
    "text": "problem uh they have this all these like super micro tests um so they don't",
    "start": "1709919",
    "end": "1715000"
  },
  {
    "text": "really you know capture it and I think it's really important to tell that like your test should represent those cases",
    "start": "1715000",
    "end": "1720720"
  },
  {
    "text": "so the race detector can detect them hm yeah okay that's that's a really good point well with tdd you tend to get good",
    "start": "1720720",
    "end": "1729200"
  },
  {
    "text": "coverage um even though I don't covering by the way uh code coverage is also",
    "start": "1729200",
    "end": "1734640"
  },
  {
    "text": "another part of the tooling that we just get for free which is is awesome uh but yeah I I",
    "start": "1734640",
    "end": "1741200"
  },
  {
    "text": "never try and shoot for 100% code coverage or anything but naturally it's quite high with tdd and I suppose",
    "start": "1741200",
    "end": "1748039"
  },
  {
    "text": "naturally you'll also cover a lot of those cases that you talked about as well um I like G run as well G run is",
    "start": "1748039",
    "end": "1756360"
  },
  {
    "text": "like a we don't tend to have much magic in go but G run is probably the magic",
    "start": "1756360",
    "end": "1763039"
  },
  {
    "text": "Tool uh because it actually secretly does a build and then execute you know does a few steps behind the scenes but",
    "start": "1763039",
    "end": "1770279"
  },
  {
    "text": "it's great if you're just learning to code or you just want to write a little script quickly and just execute a",
    "start": "1770279",
    "end": "1777480"
  },
  {
    "text": "program you can use go run and you pass in the name of the file or files and um",
    "start": "1777480",
    "end": "1784519"
  },
  {
    "text": "and it just runs it I mean it builds it to a temporary directory and I think it gets deleted afterwards although I'm not sure um but yeah I think that also is",
    "start": "1784519",
    "end": "1793200"
  },
  {
    "text": "it's such a nice thing to be able to just quickly see results and see",
    "start": "1793200",
    "end": "1798399"
  },
  {
    "text": "feedback from what you're doing and G run is another example of that yeah I think uh people use go run for their",
    "start": "1798399",
    "end": "1805320"
  },
  {
    "text": "like first hello world program um it sometimes becomes like complicated so then they you know have this habit of",
    "start": "1805320",
    "end": "1811960"
  },
  {
    "text": "like using Goan uh gun I think before goet was a little bit more difficult to",
    "start": "1811960",
    "end": "1817120"
  },
  {
    "text": "rely on because it was some sort of like you know it was able to work outside of goad so um the behavior of go build and",
    "start": "1817120",
    "end": "1824799"
  },
  {
    "text": "go run was not quite the same so you know it's just kind of like people have been advocating to always rely on go",
    "start": "1824799",
    "end": "1832480"
  },
  {
    "text": "build or install rather than go run but I think like it's just really nice for a hell world or if you have a script type",
    "start": "1832480",
    "end": "1839200"
  },
  {
    "text": "of thing that you just go around um it's really useful right the the go run I",
    "start": "1839200",
    "end": "1844600"
  },
  {
    "text": "think yeah like you were right um Matt when when you're saying basically it from my understanding is that this it",
    "start": "1844600",
    "end": "1850000"
  },
  {
    "text": "does the same thing as as go build it's just the difference being that okay once the program is run it just discards that",
    "start": "1850000",
    "end": "1855639"
  },
  {
    "text": "temporary artifact um at least that's that's that's the high level of what I think it does um one thing is worth",
    "start": "1855639",
    "end": "1862320"
  },
  {
    "text": "mentioning is also you can run it with I believe it is run you can run with a dash race as well um that way you know",
    "start": "1862320",
    "end": "1868240"
  },
  {
    "text": "if there's any sort of race conditions in the code it'll actually um when if when the program fails if it panics um",
    "start": "1868240",
    "end": "1874799"
  },
  {
    "text": "then you'll actually get some information around where that sort of a race condition occurred as well H I",
    "start": "1874799",
    "end": "1881880"
  },
  {
    "text": "didn't know that that's brilliant yeah I think race is race is supported in um like test",
    "start": "1881880",
    "end": "1888399"
  },
  {
    "text": "build um run like General all across the Tools H but you but it adds overhead",
    "start": "1888399",
    "end": "1896720"
  },
  {
    "text": "doesn't it to and slows down your program and things it's not something you would just always switch on yeah",
    "start": "1896720",
    "end": "1902120"
  },
  {
    "text": "that's why I think it's useful to just you know make it uh a non optional thing for tests um but you know apart from",
    "start": "1902120",
    "end": "1908760"
  },
  {
    "text": "that like you don't want to have the race detector always on yeah I've I've",
    "start": "1908760",
    "end": "1914440"
  },
  {
    "text": "had mixed results depending on the size of the code C base obviously um the but",
    "start": "1914440",
    "end": "1919960"
  },
  {
    "text": "these days I work on a lot of some small um Cod bases I work a lot with microservices that kind of thing so",
    "start": "1919960",
    "end": "1925240"
  },
  {
    "text": "these these Cod bases tend to be somewhat small relatively speaking um so I I by default whenever I my the default",
    "start": "1925240",
    "end": "1931840"
  },
  {
    "text": "make Command right for I use make so when the default when IUN run make the default is basically to just run it with",
    "start": "1931840",
    "end": "1937000"
  },
  {
    "text": "the dash race flag run the test with Das race flag um I I haven't noticed um",
    "start": "1937000",
    "end": "1942080"
  },
  {
    "text": "significant slowdown in that but again you obviously your m is going to vary depending on the size of your project and how many p going on there was a",
    "start": "1942080",
    "end": "1948519"
  },
  {
    "text": "benchmark about this in like um I think it was kind of like memory usage is again like five times you know larger if",
    "start": "1948519",
    "end": "1957039"
  },
  {
    "text": "you um have to like race detector on and I think execution time wise like again",
    "start": "1957039",
    "end": "1962760"
  },
  {
    "text": "like there was like some reports but it's really dependent on the use case as you say so it's kind of like adding some",
    "start": "1962760",
    "end": "1968440"
  },
  {
    "text": "overhead which could be I think um 2 to 20x or something if I can you know",
    "start": "1968440",
    "end": "1974679"
  },
  {
    "text": "remember the numbers correctly uh there's a really good blog post actually or an article on the uh golang.org about",
    "start": "1974679",
    "end": "1982519"
  },
  {
    "text": "the race detector and uh there must be like some numbers over there yeah cool okay well so I was",
    "start": "1982519",
    "end": "1989480"
  },
  {
    "text": "thinking as well about um go get go gets another one of the tools which I think",
    "start": "1989480",
    "end": "1995919"
  },
  {
    "text": "you know obviously things have changed a lot especially in the module space um",
    "start": "1995919",
    "end": "2001960"
  },
  {
    "text": "but I've got to say when I was first using go to just be able to install packages by saying go get and then the",
    "start": "2001960",
    "end": "2008960"
  },
  {
    "text": "package name and then for that package name also to be the import path and to",
    "start": "2008960",
    "end": "2014120"
  },
  {
    "text": "be the URL of where that package lives um I found that to be such an elegant",
    "start": "2014120",
    "end": "2020600"
  },
  {
    "text": "thing that it was very easy to to install things I mean this is when we",
    "start": "2020600",
    "end": "2026120"
  },
  {
    "text": "had this is in a gopath world where everything just gets put into one place um but go getet just really made that",
    "start": "2026120",
    "end": "2032679"
  },
  {
    "text": "very uh very easy um how do you feel about go get versus the new module tools",
    "start": "2032679",
    "end": "2039919"
  },
  {
    "text": "cuz they the working with modules is is a little bit more complicated so um I'll I'll I'll punt",
    "start": "2039919",
    "end": "2047799"
  },
  {
    "text": "the modules um to to jbd and let her tackle that but I can tell you that for the when using go like especially when",
    "start": "2047799",
    "end": "2055358"
  },
  {
    "text": "I'm teaching like being able to say look like we're gonna we're going to import this package before we can actually import this package and use it in our",
    "start": "2055359",
    "end": "2061560"
  },
  {
    "text": "code you know we need to go get it right so you know I'd literally say okay go get and then basically i' find the name",
    "start": "2061560",
    "end": "2067240"
  },
  {
    "text": "of the package of fully qualify path basically you know with github.com whatever um or whatever the wherever the",
    "start": "2067240",
    "end": "2072560"
  },
  {
    "text": "public repositor repository is um and then you know and then basically I'd get this Blank Stare from the students they",
    "start": "2072560",
    "end": "2078720"
  },
  {
    "text": "be like okay what just happened you know and then it I it dawned on me that okay",
    "start": "2078720",
    "end": "2083839"
  },
  {
    "text": "if I literally copied right that path go into the browser and paste it into your",
    "start": "2083839",
    "end": "2089520"
  },
  {
    "text": "url bar and navigate to that repository immediately they were like oh okay I see",
    "start": "2089520",
    "end": "2096158"
  },
  {
    "text": "I see what this is right you are literally pulling this code that lives at this very path right you putting on",
    "start": "2096159",
    "end": "2102720"
  },
  {
    "text": "the command line you are pulling it down now I can actually see and read that code you know in my browser and see what",
    "start": "2102720",
    "end": "2109960"
  },
  {
    "text": "it is I'm actually pulling down right so the whole thing about you know U pulling down the package you know it goes in your go path none of that stuff makes",
    "start": "2109960",
    "end": "2116640"
  },
  {
    "text": "sense right for them but the moment they I can actually go into a browser and put that very path in it it sort of clicked",
    "start": "2116640",
    "end": "2124119"
  },
  {
    "text": "right they now they understood the value of get and it didn't quite you know it didn't matter really much where um it",
    "start": "2124119",
    "end": "2132480"
  },
  {
    "text": "was being put in the go path it just the fact that they they knew how to get it they knew how to go where to go and see",
    "start": "2132480",
    "end": "2137640"
  },
  {
    "text": "whatever was being pulled was was almost magical for them funny because it's no magic and",
    "start": "2137640",
    "end": "2144119"
  },
  {
    "text": "it's almost the the fact that it's so obvious I that's the URL go and look at it you you know what a URL is um I think",
    "start": "2144119",
    "end": "2151720"
  },
  {
    "text": "that that's great and that you you the little story you just told then makes tot I mean when when I use if I use some",
    "start": "2151720",
    "end": "2160280"
  },
  {
    "text": "npm stuff for a project I install a few things and I look in that node modules",
    "start": "2160280",
    "end": "2166200"
  },
  {
    "text": "folder there's 16 million folders in there um and yeah and I don't know where",
    "start": "2166200",
    "end": "2173720"
  },
  {
    "text": "they've come from um it's kind of hidden it's it is Magic whereas it's just you",
    "start": "2173720",
    "end": "2179760"
  },
  {
    "text": "know that thing of being very simple and clear even if you sacrifice some features for that um I was think is has",
    "start": "2179760",
    "end": "2188359"
  },
  {
    "text": "has such a positive kind of dividend that it keeps paying again and again",
    "start": "2188359",
    "end": "2195040"
  },
  {
    "text": "later I think we need to make an episode on go mod uh but I think go I agree that",
    "start": "2195040",
    "end": "2200400"
  },
  {
    "text": "like goget is a really good you know initial experience and uh one thing I like about is if uh if you're go getting",
    "start": "2200400",
    "end": "2207040"
  },
  {
    "text": "a main package it you know installs it puts in your go uh goad being directory",
    "start": "2207040",
    "end": "2215079"
  },
  {
    "text": "yeah so um it's just like a good way way to you know distribute tools as well uh before I think go I was just publishing",
    "start": "2215079",
    "end": "2222240"
  },
  {
    "text": "binaries and like making sure that like I have the you know the right version all across the version still is a",
    "start": "2222240",
    "end": "2228040"
  },
  {
    "text": "problem with goget but like I I think it's a it's an okay sacrifice yeah okay I'm going to what",
    "start": "2228040",
    "end": "2236160"
  },
  {
    "text": "I'm going to do is just keep moving on to different go tools cuz I've I've I'm",
    "start": "2236160",
    "end": "2242240"
  },
  {
    "text": "already learning things about these as well um and the other one the other one",
    "start": "2242240",
    "end": "2247839"
  },
  {
    "text": "with go build um which I love is the fact that we can do cross compilation",
    "start": "2247839",
    "end": "2253680"
  },
  {
    "text": "now this this has been around from I think the beginning um essentially for",
    "start": "2253680",
    "end": "2259319"
  },
  {
    "text": "those that don't know you can choose the the target architecture the target machine to build your go Code 4 that's",
    "start": "2259319",
    "end": "2267280"
  },
  {
    "text": "very useful if you're using Docker cuz you can do like on a Mac you can do the build for Docker and then you've got the",
    "start": "2267280",
    "end": "2273920"
  },
  {
    "text": "doc you've got the binary the Linux binary uh that you can then put into the docker image or you can of course put",
    "start": "2273920",
    "end": "2280760"
  },
  {
    "text": "the code into Docker and build it in there uh in that environment but do you how how's your experience with cross",
    "start": "2280760",
    "end": "2287599"
  },
  {
    "text": "compilation so far I think it was magic like when I first saw um you know there were typing go go actually it's",
    "start": "2287599",
    "end": "2295240"
  },
  {
    "text": "pronounced Goose um and windows and go build and like you get a Windows sper it",
    "start": "2295240",
    "end": "2301079"
  },
  {
    "text": "was like Wow right like um I it was fascinating and I usually generate",
    "start": "2301079",
    "end": "2307079"
  },
  {
    "text": "binaries for Linux so it was like I kept you know working on my Mac without any worry or anything it was so awesome yeah",
    "start": "2307079",
    "end": "2315040"
  },
  {
    "text": "have you used it Johnny absolutely um one of my uh first uh one of my first jobs using go full-time my",
    "start": "2315040",
    "end": "2321520"
  },
  {
    "text": "responsibility was the basically to to have a a sort of multi multiplatform um build process um so",
    "start": "2321520",
    "end": "2329400"
  },
  {
    "text": "basically I relied on loing Gorge quite a bit um and for those of you who don't",
    "start": "2329400",
    "end": "2335200"
  },
  {
    "text": "know what gorge is busy the that's the companion to to Goose g a r c um for Co",
    "start": "2335200",
    "end": "2342640"
  },
  {
    "text": "architecture um yeah so using goose and Gorge for sort of a bread and butter um",
    "start": "2342640",
    "end": "2347680"
  },
  {
    "text": "to having that work done and basically being able to push out binaries for all kinds of different platforms and I mean",
    "start": "2347680",
    "end": "2352880"
  },
  {
    "text": "there are a ton of them that you know go support out of the box um for arm processors and and I mean there's",
    "start": "2352880",
    "end": "2359520"
  },
  {
    "text": "there's a there's a the combination a sheer combination you can have um I've lost I've lost track of of of basically",
    "start": "2359520",
    "end": "2365920"
  },
  {
    "text": "how all the different variations you can push out but it it's it's really was a God in I mean there's no way I would",
    "start": "2365920",
    "end": "2371640"
  },
  {
    "text": "have be able to to sort get that job done without without these things being in there uh I think it's also awesome",
    "start": "2371640",
    "end": "2377359"
  },
  {
    "text": "that like I was doing a lot of development uh for arm and you know for a Rasberry pip for example uh the",
    "start": "2377359",
    "end": "2384119"
  },
  {
    "text": "processor on a you know typical Rasberry pie is just going to be not comparable",
    "start": "2384119",
    "end": "2389480"
  },
  {
    "text": "to my laptop so I would just you know build things on my laptop because it's going to be faster and then then I will",
    "start": "2389480",
    "end": "2395880"
  },
  {
    "text": "push it to the the Rasberry P because it's just so much easier to do cross compilation and uh it's just like maybe",
    "start": "2395880",
    "end": "2402280"
  },
  {
    "text": "like 10 times faster or something wow and so how does it actually",
    "start": "2402280",
    "end": "2408280"
  },
  {
    "text": "work because obviously the compiler is doing a few steps and then ultimately it then creates a binary that's made up of",
    "start": "2408280",
    "end": "2416400"
  },
  {
    "text": "um from the machine code is is it just that the machine code is generated differently depending on the",
    "start": "2416400",
    "end": "2421880"
  },
  {
    "text": "architecture yeah you know like I mean they know what to generate for each architecture so they just basically take",
    "start": "2421880",
    "end": "2428359"
  },
  {
    "text": "the input and they know what to map it and then they generate uh the output",
    "start": "2428359",
    "end": "2433400"
  },
  {
    "text": "based on the you know operating system in architecture mhm",
    "start": "2433400",
    "end": "2438480"
  },
  {
    "text": "and that must have been possible because of the way that they built the tool",
    "start": "2438480",
    "end": "2443680"
  },
  {
    "text": "system do you think it was deliberate that they wanted to be able to build to any Target architecture or do you feel",
    "start": "2443680",
    "end": "2449720"
  },
  {
    "text": "like they just realized they could after because they' just built it and designed it in a simple way",
    "start": "2449720",
    "end": "2456839"
  },
  {
    "text": "I don't think you you stumble on something like this um by accident I think I mean if I had to guess I'd say",
    "start": "2456839",
    "end": "2463000"
  },
  {
    "text": "this was by Design um is considering that the the creators of of the language",
    "start": "2463000",
    "end": "2469480"
  },
  {
    "text": "basically they had they had um basically they were building for for Google right so I imagine that at some point they",
    "start": "2469480",
    "end": "2476560"
  },
  {
    "text": "need to be able to run um binaries on different platforms with different CPU architectures and you know 32bit 64bit",
    "start": "2476560",
    "end": "2484160"
  },
  {
    "text": "and all that and all that good stuff so iag this must have been sort of a part of the the plan part of the design this",
    "start": "2484160",
    "end": "2490599"
  },
  {
    "text": "this seems way too complicated and way too powerful of feature to have just",
    "start": "2490599",
    "end": "2495720"
  },
  {
    "text": "come across um to have fallen out of the bill system there's also like we uh I think",
    "start": "2495720",
    "end": "2502119"
  },
  {
    "text": "simplifi the process but there's this intermediate assembly so uh the compiler",
    "start": "2502119",
    "end": "2507440"
  },
  {
    "text": "first translates everything to that intermediate assembly and from that point on uh the they are being compiled",
    "start": "2507440",
    "end": "2512920"
  },
  {
    "text": "to the you know the architecture specific um machine code uh instructions",
    "start": "2512920",
    "end": "2518240"
  },
  {
    "text": "sorry so um it's it's actually like you know the internals of compilers is like this like twostep thing and this is like",
    "start": "2518240",
    "end": "2525680"
  },
  {
    "text": "a really typical way the compilers work they're just you know taking it",
    "start": "2525680",
    "end": "2531000"
  },
  {
    "text": "converting everything into an Intermediate Language and then from that Intermediate Language you can just basically Target whatever architecture",
    "start": "2531000",
    "end": "2538319"
  },
  {
    "text": "you want to Target and of course you can have build tags as well does anyone want to",
    "start": "2538319",
    "end": "2544800"
  },
  {
    "text": "describe build tags yeah build tags are uh this providing conditional",
    "start": "2544800",
    "end": "2551000"
  },
  {
    "text": "compilation and you can create different rules for example you can have constraints to say only use this file",
    "start": "2551000",
    "end": "2559200"
  },
  {
    "text": "for Linux build or you can say I just want only arm builds to have this file",
    "start": "2559200",
    "end": "2565319"
  },
  {
    "text": "included in the build uh you can there are many different rules provided by the",
    "start": "2565319",
    "end": "2570359"
  },
  {
    "text": "tool chain uh Go version is one of them arbitrary custom build tags is one of of",
    "start": "2570359",
    "end": "2576400"
  },
  {
    "text": "them so it kind of gives you this like you know possibility to switch to different implementations depending on",
    "start": "2576400",
    "end": "2582800"
  },
  {
    "text": "the Go version uh depending on the you know the operating system or architecture or some custom build tags",
    "start": "2582800",
    "end": "2590960"
  },
  {
    "text": "yeah I've used those successfully when it comes to testing sometimes if there are long running tests or if there are",
    "start": "2590960",
    "end": "2597400"
  },
  {
    "text": "integration tests that require a different dependency to be running or something I use a build tag in our test",
    "start": "2597400",
    "end": "2603640"
  },
  {
    "text": "files and that's quite an easy way to choose a set of things to run um and",
    "start": "2603640",
    "end": "2608880"
  },
  {
    "text": "it's just a special comment that goes at the top of the file isn't it yeah it's just like I think it it must be on um I",
    "start": "2608880",
    "end": "2615480"
  },
  {
    "text": "mean it's on the top of the file um there's a particular place but that's it um and it's really readable I think my",
    "start": "2615480",
    "end": "2622119"
  },
  {
    "text": "only complaint about this rules about the build constraints is like it's just really hard to sometimes just you know",
    "start": "2622119",
    "end": "2628240"
  },
  {
    "text": "have like multiple rules represented it becomes really hard to parse like if you",
    "start": "2628240",
    "end": "2633359"
  },
  {
    "text": "want to have like more complex rules like hey just include this file on Linux",
    "start": "2633359",
    "end": "2638800"
  },
  {
    "text": "um you know Darvin and blah blah but not on this particular thing on top of that",
    "start": "2638800",
    "end": "2644480"
  },
  {
    "text": "like not for this custom build tag like I think writing those expressing those uh complicated more complex type of",
    "start": "2644480",
    "end": "2651160"
  },
  {
    "text": "constraints is a little bit hard but otherwise I think it's just pretty straightforward and I use build tags all",
    "start": "2651160",
    "end": "2656559"
  },
  {
    "text": "the [Music]",
    "start": "2656559",
    "end": "2664409"
  },
  {
    "text": "time this episode is brought to you by our friends at retool retool helps teams",
    "start": "2665000",
    "end": "2672280"
  },
  {
    "text": "focus on product development and customer value not building and maintaining internal tools it's a low",
    "start": "2672280",
    "end": "2679000"
  },
  {
    "text": "code platform built specifically for developers no more UI libraries no more hacking together data sources and no",
    "start": "2679000",
    "end": "2685599"
  },
  {
    "text": "more worrying about access controls start shipping internal apps to move your business forward in minutes with",
    "start": "2685599",
    "end": "2691720"
  },
  {
    "text": "basically zero uptime reliability or maintenance burden on your team some of the best teams out there trust retool",
    "start": "2691720",
    "end": "2698119"
  },
  {
    "text": "brex coinbase plaid door Dash legal genius Amazon all birds pelaton and so",
    "start": "2698119",
    "end": "2704760"
  },
  {
    "text": "many more the developers at these teams trust retool as their platform to build their internal tools and that means you",
    "start": "2704760",
    "end": "2711359"
  },
  {
    "text": "can too it's free to try so head to ret.com changelog again ret.com",
    "start": "2711359",
    "end": "2717970"
  },
  {
    "text": "[Music]",
    "start": "2717970",
    "end": "2724280"
  },
  {
    "text": "changelog",
    "start": "2724880",
    "end": "2727880"
  },
  {
    "text": "[Music] okay well I want to also mention a",
    "start": "2729920",
    "end": "2736920"
  },
  {
    "text": "couple of tools from uh the community as well um because remember you know we are",
    "start": "2736920",
    "end": "2743400"
  },
  {
    "text": "we are writing we are using go tools all the time but we can write tools as well",
    "start": "2743400",
    "end": "2748440"
  },
  {
    "text": "and some people have contributed like I think go Imports was a brad Fitz Patrick",
    "start": "2748440",
    "end": "2754040"
  },
  {
    "text": "project that was his own kind of um idea that he just did on his own and it",
    "start": "2754040",
    "end": "2759400"
  },
  {
    "text": "essentially wraps gof fumed so you get all the formatting but it also resolves Imports for you um and you can do these",
    "start": "2759400",
    "end": "2766720"
  },
  {
    "text": "things too with your own tools um and some of the tooling as well doesn't have to be go tooling running on our machine",
    "start": "2766720",
    "end": "2774400"
  },
  {
    "text": "Matt halt has a great Json to go service if you Google Json to go um you",
    "start": "2774400",
    "end": "2781440"
  },
  {
    "text": "basically paste in a Jason blob and then it generates the go structures for that Jason blob extremely useful especially",
    "start": "2781440",
    "end": "2789000"
  },
  {
    "text": "if you're going to consume an API and you need all of the data and you don't just you just don't want to sit and type",
    "start": "2789000",
    "end": "2794319"
  },
  {
    "text": "out all the field names so that's a very useful one and that's a hosted website so you can you can go to that um any",
    "start": "2794319",
    "end": "2802400"
  },
  {
    "text": "other community uh are there any other community tools that we like I",
    "start": "2802400",
    "end": "2809760"
  },
  {
    "text": "personally like um the go report card um",
    "start": "2809760",
    "end": "2815960"
  },
  {
    "text": "website which which well I guess it's less of a local tool but something I can",
    "start": "2815960",
    "end": "2821520"
  },
  {
    "text": "basically evaluate sort of how close to the idioms right of the go Community",
    "start": "2821520",
    "end": "2827359"
  },
  {
    "text": "your your your code is is is um being kept at um I think it might even",
    "start": "2827359",
    "end": "2832440"
  },
  {
    "text": "incorporate some of the tools we've mentioned before they'll enter the the V vetting and um it includes some other",
    "start": "2832440",
    "end": "2838079"
  },
  {
    "text": "things like cyclomatic complexity analysis and has a bunch of other um nice um sort of um basic ads in there as",
    "start": "2838079",
    "end": "2846480"
  },
  {
    "text": "well and it sort of based on these things it gives your repository a grade right um I think on scale of a through F",
    "start": "2846480",
    "end": "2853079"
  },
  {
    "text": "or something like that um so I find that you know useful so especially when I'm evaluating um a repository a package",
    "start": "2853079",
    "end": "2860520"
  },
  {
    "text": "third party package to to to determine whether I'm going to use it or not um if it has a score I will look at that if",
    "start": "2860520",
    "end": "2868000"
  },
  {
    "text": "it's if it's anything other than a then I'm going to take a closer look right I'm going to be a little bit more",
    "start": "2868000",
    "end": "2873599"
  },
  {
    "text": "hesitant with sort of bringing it in because I'm like okay well well what what best practices what idioms are you",
    "start": "2873599",
    "end": "2878720"
  },
  {
    "text": "not following right so I'll take a look at that and you know sometimes you know I may just you know sort of um um see",
    "start": "2878720",
    "end": "2885640"
  },
  {
    "text": "what's happening and maybe replicate locally without having to bring the package if I don't like the score so to speak so it's kind of a it's it's a nice",
    "start": "2885640",
    "end": "2893319"
  },
  {
    "text": "it's sort of a another data point right so to speak to help you sort of evaluate um the the the quality I should say of",
    "start": "2893319",
    "end": "2900960"
  },
  {
    "text": "of a repository but yeah it's it's one of the things I like to see as well the same for God do",
    "start": "2900960",
    "end": "2906240"
  },
  {
    "text": "uh godoc is a tool you can run locally but we have also the god do.org hosted",
    "start": "2906240",
    "end": "2911960"
  },
  {
    "text": "service which lets us view documentation for any open source project um and so",
    "start": "2911960",
    "end": "2918119"
  },
  {
    "text": "yeah I think that's that's also nice it's a nice way to provide that capability because it makes sense you",
    "start": "2918119",
    "end": "2924000"
  },
  {
    "text": "want to share just a link and the nice thing is for God do it's just God do.org",
    "start": "2924000",
    "end": "2929880"
  },
  {
    "text": "slash I think maybe PKG SL then the import path so again you're still still",
    "start": "2929880",
    "end": "2935839"
  },
  {
    "text": "referring to that import path and we see it I personally use a lot of tools from",
    "start": "2935839",
    "end": "2941200"
  },
  {
    "text": "um Dominic HOV like he has this um go tools repo uh static check tool which",
    "start": "2941200",
    "end": "2949240"
  },
  {
    "text": "you know contains a lot of like you know style check um a lot of like um linting",
    "start": "2949240",
    "end": "2956480"
  },
  {
    "text": "type of like you know features that a goint doesn't support and um it's you",
    "start": "2956480",
    "end": "2962119"
  },
  {
    "text": "know there are some cases sometimes like there's a controversial Style topic uh it's not possible to you know merge it",
    "start": "2962119",
    "end": "2968000"
  },
  {
    "text": "into the official tool so people would just go and like you know put it in uh the goetic tool um so it's it's a really",
    "start": "2968000",
    "end": "2975839"
  },
  {
    "text": "useful to you know tool to take a look um in terms of I think static tools like that I just rely",
    "start": "2975839",
    "end": "2982280"
  },
  {
    "text": "on um you know static check more than goand yeah and uh fattier aren um he",
    "start": "2982280",
    "end": "2992559"
  },
  {
    "text": "made a service um which I think is called Fix IM me which is it's a kind of",
    "start": "2992559",
    "end": "2998760"
  },
  {
    "text": "a it's a it's a GitHub integration as I understand it and it analyzes it does a",
    "start": "2998760",
    "end": "3004359"
  },
  {
    "text": "bit like the go report card but it actually creates you know PRS with",
    "start": "3004359",
    "end": "3010079"
  },
  {
    "text": "changes in it so it actually does the fit is sort of proactive like you've got another member on your team that's cares",
    "start": "3010079",
    "end": "3015799"
  },
  {
    "text": "only you know like the pedant who just cares about all the style rules and all",
    "start": "3015799",
    "end": "3021680"
  },
  {
    "text": "that and um and that's a project I think it's worth checking out it's it's fix me",
    "start": "3021680",
    "end": "3027880"
  },
  {
    "text": "it's spelled fix m i e um so have a look for that one too that's a similar kind",
    "start": "3027880",
    "end": "3033960"
  },
  {
    "text": "of idea to the go report card but tightly more tightly integrated into GitHub has anyone here written any of",
    "start": "3033960",
    "end": "3040880"
  },
  {
    "text": "the any kind of tooling static analysis or otherwise I only wrote some tools to",
    "start": "3040880",
    "end": "3046280"
  },
  {
    "text": "generate some stuff like from an interface um well these are also some static tools like uh one common cases",
    "start": "3046280",
    "end": "3053000"
  },
  {
    "text": "generating implementations of interface and there's like a lot of boiler plate",
    "start": "3053000",
    "end": "3058680"
  },
  {
    "text": "so I wrote a tool that kind of like you know takes the interface and creates the you know the concrete implementation and",
    "start": "3058680",
    "end": "3064920"
  },
  {
    "text": "then you just go and like you know feel the implementation F the methods uh and",
    "start": "3064920",
    "end": "3070799"
  },
  {
    "text": "do you did you use the as stuff and the paer and things to build them yeah I",
    "start": "3070799",
    "end": "3076680"
  },
  {
    "text": "used the uh what whatever was in the standard Library it was not that hard uh it was not that like I mean goodlooking",
    "start": "3076680",
    "end": "3082920"
  },
  {
    "text": "either but like it was possible to you know get done in like 100 lines or",
    "start": "3082920",
    "end": "3088040"
  },
  {
    "text": "something yeah yeah so okay cool well I think we should also spend sometime talking about some of the",
    "start": "3088040",
    "end": "3095359"
  },
  {
    "text": "Performance Tools as well um that that we just get for free there are some great Talks on YouTube it's quite a it's",
    "start": "3095359",
    "end": "3103000"
  },
  {
    "text": "quite an interesting subject and it's talked about quite a lot in from different angles um but perhaps Yana you",
    "start": "3103000",
    "end": "3110160"
  },
  {
    "text": "could tell us a little bit about did I see you do a talk about the Performance",
    "start": "3110160",
    "end": "3115880"
  },
  {
    "text": "Tools it might be possible because like I worked on uh you know some of the dynamic tools uh when I was working on",
    "start": "3115880",
    "end": "3122160"
  },
  {
    "text": "go so it was part of my know full-time job um and I generally have been you",
    "start": "3122160",
    "end": "3127799"
  },
  {
    "text": "know working in this area for a while so it's possible that you I've seen me giv a talk but I can't remember because I'm",
    "start": "3127799",
    "end": "3133720"
  },
  {
    "text": "giving too many talks nowadays I thought it was all confidential what you work on it's not",
    "start": "3133720",
    "end": "3140400"
  },
  {
    "text": "uh so the confidential stuff is different oh what's that none of my Performance Tools it's more about like",
    "start": "3140400",
    "end": "3146599"
  },
  {
    "text": "Computing you know products and right we we'll figure out in a couple of",
    "start": "3146599",
    "end": "3153599"
  },
  {
    "text": "weeks I'm just trying to yeah I'm just trying to be like a one of those journalists hard-hitting journalists",
    "start": "3153599",
    "end": "3158720"
  },
  {
    "text": "that tries to get out the information that you don't want to say are too polite you just say I'm not",
    "start": "3158720",
    "end": "3164079"
  },
  {
    "text": "going to talk about it and I go oh okay bye well the problem is I really don't",
    "start": "3164079",
    "end": "3169160"
  },
  {
    "text": "know like I know generally what I'm going to be working on but I don't know the specifics and I'm a really precise",
    "start": "3169160",
    "end": "3175280"
  },
  {
    "text": "size person I think yeah I don't want to like give any Impressions that I'm going to work on something that like I'm not",
    "start": "3175280",
    "end": "3182040"
  },
  {
    "text": "going to because people will be out toide yeah it's absolutely fair enough",
    "start": "3182040",
    "end": "3187920"
  },
  {
    "text": "yes so y could you tell us a bit about the some of these tools though and what they're for for anyone that doesn't know",
    "start": "3187920",
    "end": "3194240"
  },
  {
    "text": "about them yeah I think generally speaking I think let's go beyond the Performance Tools uh there are a lot of",
    "start": "3194240",
    "end": "3199880"
  },
  {
    "text": "like Dynamic Tools in go and they are a part of the standard tooling uh some of them are related to Performance some of",
    "start": "3199880",
    "end": "3206400"
  },
  {
    "text": "them are more related to like debugging type of stuff um the typical you know",
    "start": "3206400",
    "end": "3211839"
  },
  {
    "text": "let's we we can talk about for example perform performance uh initially and um",
    "start": "3211839",
    "end": "3219280"
  },
  {
    "text": "the goal came around when it first came around it came around with some of the",
    "start": "3219280",
    "end": "3225319"
  },
  {
    "text": "dynamic tools because uh we went to the SRE team and SRE team is at Google is",
    "start": "3225319",
    "end": "3230440"
  },
  {
    "text": "just really specific about what they want to put in production so they want to have like you know enough visibility",
    "start": "3230440",
    "end": "3236079"
  },
  {
    "text": "into things um and one of some of these were related to you know performance uh",
    "start": "3236079",
    "end": "3241240"
  },
  {
    "text": "they want to be able to you know get the profiles they want to get like some runtime traces because they specifically",
    "start": "3241240",
    "end": "3247400"
  },
  {
    "text": "want to be able to understand when there's something going wrong and like they want to be able to pinpoint to this",
    "start": "3247400",
    "end": "3253920"
  },
  {
    "text": "um so ppro um support was baked into you know go since the Early times because of",
    "start": "3253920",
    "end": "3260920"
  },
  {
    "text": "that requirement for example it provides you some profiles you can Ed or custom",
    "start": "3260920",
    "end": "3266200"
  },
  {
    "text": "profiles which is a useful topic um but you know it provides the CPU profile memory profile you know go routines and",
    "start": "3266200",
    "end": "3273880"
  },
  {
    "text": "thread profile and uh M contention profile and um it was really crucial you",
    "start": "3273880",
    "end": "3280680"
  },
  {
    "text": "know to have a language mature enough to put in production because um that's",
    "start": "3280680",
    "end": "3287040"
  },
  {
    "text": "basically most of people think that like performance is about development time but it's also important in production",
    "start": "3287040",
    "end": "3293720"
  },
  {
    "text": "time uh on top of of like people of support uh there is like you know good benchmarking support baked into go test",
    "start": "3293720",
    "end": "3301760"
  },
  {
    "text": "so benchmarking is a first class Sten in go which is not really you know quite",
    "start": "3301760",
    "end": "3307000"
  },
  {
    "text": "the same situation in other languages and I think it kind of creates this culture where uh you care about you know",
    "start": "3307000",
    "end": "3314160"
  },
  {
    "text": "benchmarking stuff right like I don't know what is your opinion on this but I've seen you know lots of different",
    "start": "3314160",
    "end": "3320920"
  },
  {
    "text": "communities have different opinions about benchmarking just because of you know the tool or you know it's really",
    "start": "3320920",
    "end": "3326799"
  },
  {
    "text": "easy to write benchmarks or not what do you think about it well I've seen it used perfectly and I've also seen it",
    "start": "3326799",
    "end": "3333039"
  },
  {
    "text": "used incorrectly um I've seen an example where the Benchmark just because of",
    "start": "3333039",
    "end": "3338839"
  },
  {
    "text": "slight issue with the Way It Was Written um it was reporting the",
    "start": "3338839",
    "end": "3344640"
  },
  {
    "text": "completely incorrect results so yes I think one but if it's used in the right way cuz like you know if it's if you",
    "start": "3344640",
    "end": "3353400"
  },
  {
    "text": "depends on what you're testing I suppose if you're going to be testing something and you're making HTTP requests for",
    "start": "3353400",
    "end": "3359119"
  },
  {
    "text": "example there's so much variation anyway in HTTP you're not really going to be getting any meaningful information but",
    "start": "3359119",
    "end": "3365559"
  },
  {
    "text": "if you're if you've got two little algorithms and you want to know which one's better at certain tasks and stuff",
    "start": "3365559",
    "end": "3371839"
  },
  {
    "text": "then yeah it's it's it's great and I I agree with you Yan I love the fact that it's baked straight into the language um",
    "start": "3371839",
    "end": "3379319"
  },
  {
    "text": "and you just have to write a function that starts with you know Funk Benchmark",
    "start": "3379319",
    "end": "3384640"
  },
  {
    "text": "name Tak in the special variable and as long as you get the for Loop inside it in the",
    "start": "3384640",
    "end": "3390880"
  },
  {
    "text": "right place and also think about set up and tear down work and where that's happening then yeah it's a great way to",
    "start": "3390880",
    "end": "3398520"
  },
  {
    "text": "really just find out which is better because sometimes it be really",
    "start": "3398520",
    "end": "3403680"
  },
  {
    "text": "surprising in fact I think it would make a great talk if someone out there wants to do it or presentation of like here's",
    "start": "3403680",
    "end": "3412200"
  },
  {
    "text": "here's some code which one's the fastest and have people kind of guess and",
    "start": "3412200",
    "end": "3418000"
  },
  {
    "text": "sometimes I find it the results to be very surprising yeah I think Benchmark in general is a discipline that you know",
    "start": "3418000",
    "end": "3424240"
  },
  {
    "text": "takes a lot of time to kind of like learn and what are you know the other factors that actually improve you know",
    "start": "3424240",
    "end": "3430599"
  },
  {
    "text": "you know impacts the performance so I agree with you that like I've seen a lot of like wrong benchmarks and people are",
    "start": "3430599",
    "end": "3437079"
  },
  {
    "text": "like super strong opiated that it's actually an optimization but it's actually like like one specific thing",
    "start": "3437079",
    "end": "3443280"
  },
  {
    "text": "that improves the performance like for one specific case or something and I think you need to have a really good",
    "start": "3443280",
    "end": "3450200"
  },
  {
    "text": "understanding of the runtime and everything around the language in order to write good benchmarks as well as like",
    "start": "3450200",
    "end": "3456359"
  },
  {
    "text": "interpret the results correctly so it's it's a really tough game that's true would you say that if",
    "start": "3456359",
    "end": "3464480"
  },
  {
    "text": "so when it comes to benchmarking and and performance optimization like I try very",
    "start": "3464480",
    "end": "3470160"
  },
  {
    "text": "very hard not to sort of jump to that sort of right away you know I'll try to solve a problem first and then and then",
    "start": "3470160",
    "end": "3477880"
  },
  {
    "text": "try to optimize right so basically preventing premature optimization and these tools make it because they're part of the stand center tool chain they make",
    "start": "3477880",
    "end": "3484240"
  },
  {
    "text": "it very easy to just you know start using them like right then and there basically start start leveraging them right away um and there there was a time",
    "start": "3484240",
    "end": "3491720"
  },
  {
    "text": "maybe we still in that time where you know it seems like there was a new sort of HTTP like mxer router coming out",
    "start": "3491720",
    "end": "3498400"
  },
  {
    "text": "every you every couple of weeks and they were all like oh Benchmark compared to this these other things you know this",
    "start": "3498400",
    "end": "3504520"
  },
  {
    "text": "one is zero allocation and is you know 05% faster than the other one so it was",
    "start": "3504520",
    "end": "3510720"
  },
  {
    "text": "I was I kind of found it silly a little bit um because of all that sort of going on and and I was like okay we're kind of",
    "start": "3510720",
    "end": "3517400"
  },
  {
    "text": "missing the point here a little bit um but yeah I mean it's it's having that tool I think it's great you know and",
    "start": "3517400",
    "end": "3524640"
  },
  {
    "text": "like you I don't think I don't think I've seen that basically that kind of capability sort of built in you know",
    "start": "3524640",
    "end": "3529720"
  },
  {
    "text": "part of part of the language from from from the start so the I I tend to sort of be very I'm very careful with that",
    "start": "3529720",
    "end": "3537160"
  },
  {
    "text": "because it's too easy to to have to create a culture within an engineering team of of okay before I can even ship",
    "start": "3537160",
    "end": "3544799"
  },
  {
    "text": "this thing I have to make sure it's like super optimized and and all we're putting kind of the cart before the",
    "start": "3544799",
    "end": "3551039"
  },
  {
    "text": "horse a little bit there it's too easy to do that so I tend to be I tend to shy away from that stuff um you know I sort",
    "start": "3551039",
    "end": "3557839"
  },
  {
    "text": "of bring it in when I need to I completely agree I think um you know optimizations in development time is",
    "start": "3557839",
    "end": "3563599"
  },
  {
    "text": "kind of like fabric problems like I mean you realize what needs to be optimized in production",
    "start": "3563599",
    "end": "3569960"
  },
  {
    "text": "right like um for example what we do is um continuous profiling which is we keep",
    "start": "3569960",
    "end": "3576640"
  },
  {
    "text": "collecting some profiles from the you know the production binaries and we sort",
    "start": "3576640",
    "end": "3581880"
  },
  {
    "text": "of like have an understanding of like you know within this project what are some of the hot calls and what is like",
    "start": "3581880",
    "end": "3588039"
  },
  {
    "text": "some of the you know stuff that is in the critical pad like and what critical pads are like more often being called",
    "start": "3588039",
    "end": "3594400"
  },
  {
    "text": "and like like you know what happens if I just optimize this function or like what is the you know actual cost of this",
    "start": "3594400",
    "end": "3600799"
  },
  {
    "text": "particular function in the you know the the if you think about the whole system",
    "start": "3600799",
    "end": "3606920"
  },
  {
    "text": "and you know depending on the usage and whatever so I think it just really makes more sense to start thinking about these",
    "start": "3606920",
    "end": "3614119"
  },
  {
    "text": "cases in production and like by looking at the data you just go back to the development environment and like try to",
    "start": "3614119",
    "end": "3620920"
  },
  {
    "text": "optimize those things and you know keep using this tools uh one of the nice things about go profiling actual prpr is",
    "start": "3620920",
    "end": "3627640"
  },
  {
    "text": "like it's a really low overhead type of profiling thing and uh you can enable it in production so you can you know just",
    "start": "3627640",
    "end": "3634559"
  },
  {
    "text": "keep you know getting uh profiles from production without impacting the",
    "start": "3634559",
    "end": "3639799"
  },
  {
    "text": "critical paths so crazily but there's a overhead uh but you know there's some strategies if you have multiple replicas",
    "start": "3639799",
    "end": "3646640"
  },
  {
    "text": "of a web server for example you can enable production maybe for like um 1",
    "start": "3646640",
    "end": "3652280"
  },
  {
    "text": "minute or 5 minutes uh on one replica and it's just like sort of like you know",
    "start": "3652280",
    "end": "3659000"
  },
  {
    "text": "depending on how much latency you will you know experience it's sometimes doable and that's what we do it that's",
    "start": "3659000",
    "end": "3666160"
  },
  {
    "text": "how you know what we do and um just try to optimize based on the usage and you",
    "start": "3666160",
    "end": "3671480"
  },
  {
    "text": "know what is the critical usage and like what are some of the hot paths like identifying those hot paths is also very",
    "start": "3671480",
    "end": "3676720"
  },
  {
    "text": "important before jumping into any you know optimizations right having a problem before you solve it yeah yeah so",
    "start": "3676720",
    "end": "3684559"
  },
  {
    "text": "Y when you say you do continuous profiling do when when you deploy services do you have p p already enabled",
    "start": "3684559",
    "end": "3691400"
  },
  {
    "text": "in there and you just switch it on or yeah think about like this um so all the",
    "start": "3691400",
    "end": "3697200"
  },
  {
    "text": "you know the powerform pr tools uh PR is can be tweakable like it it's dynamically turn you can turn it on",
    "start": "3697200",
    "end": "3704000"
  },
  {
    "text": "dynamically and you can turn it off so what we do is basically turn it on for like several minutes uh collect the data",
    "start": "3704000",
    "end": "3711680"
  },
  {
    "text": "just get the data and you know just par it sore it and then we aggregate all",
    "start": "3711680",
    "end": "3716760"
  },
  {
    "text": "that data and we have just like you know daily weekly whatever reports and you can take a look at like oh this service",
    "start": "3716760",
    "end": "3724160"
  },
  {
    "text": "particularly this Handler is often used and all these like particular functions",
    "start": "3724160",
    "end": "3730000"
  },
  {
    "text": "are you know is accounting for the like most CPU",
    "start": "3730000",
    "end": "3735440"
  },
  {
    "text": "time or memory whatever and you can just go and like dig and like you know optimize those particular places um I I",
    "start": "3735440",
    "end": "3743599"
  },
  {
    "text": "wish that go had like some tools around maybe supporting this type of like more",
    "start": "3743599",
    "end": "3748960"
  },
  {
    "text": "continuous integration uh sorry continuous profiling uh features um you",
    "start": "3748960",
    "end": "3754720"
  },
  {
    "text": "know it's possible to write a tool kind of agregates you know multiple people files",
    "start": "3754720",
    "end": "3760079"
  },
  {
    "text": "maybe it could be possible to write like a library that automatically you know just turns it once a while reports to",
    "start": "3760079",
    "end": "3768480"
  },
  {
    "text": "some like Central service and then you know turns it off and so on um I think",
    "start": "3768480",
    "end": "3773880"
  },
  {
    "text": "there's like some some some some we can do much better in this field it's just kind of like up to the user right now to",
    "start": "3773880",
    "end": "3781240"
  },
  {
    "text": "plan and you know design and just you know do this type of things but like",
    "start": "3781240",
    "end": "3786960"
  },
  {
    "text": "that's basically what we do I I gave some I I wrote uh on this topic um for a",
    "start": "3786960",
    "end": "3793599"
  },
  {
    "text": "while and um it's just really like some companies are aware of these",
    "start": "3793599",
    "end": "3798920"
  },
  {
    "text": "methodologies and some companies are not and like it's just it would be so nice if Community was you know producing more",
    "start": "3798920",
    "end": "3806160"
  },
  {
    "text": "best practices as well as more tooling around us well there we go there's the call gone out anyone who's looking for a",
    "start": "3806160",
    "end": "3814720"
  },
  {
    "text": "new open source project or something to hack on what a great problem um could you build something that samples running",
    "start": "3814720",
    "end": "3823319"
  },
  {
    "text": "go code and you know periodically at some schedule and uh collects the",
    "start": "3823319",
    "end": "3829039"
  },
  {
    "text": "results up um would be extremely useful and really fun probably as well yeah",
    "start": "3829039",
    "end": "3834359"
  },
  {
    "text": "it's like a lot of fun ones once you start to see like for example a large company you know aggregating all the",
    "start": "3834359",
    "end": "3840279"
  },
  {
    "text": "profiling data so you can see like oh the companies you know the for example you can actually improve your bill on",
    "start": "3840279",
    "end": "3846760"
  },
  {
    "text": "your cloud provider uh you can say that like lot of the calls are actually like dependent on this one function um and",
    "start": "3846760",
    "end": "3853640"
  },
  {
    "text": "you know if you optimize it we can actually cut the billing like by 10% or something right like it's actually",
    "start": "3853640",
    "end": "3859720"
  },
  {
    "text": "pretty useful once you start to do this systematically everywhere hm well I love",
    "start": "3859720",
    "end": "3865240"
  },
  {
    "text": "I love the message of when wait till you've got something running and then look at optimizing it I think in some",
    "start": "3865240",
    "end": "3871640"
  },
  {
    "text": "cases you can shortcut it but generally speaking Yeah that advice is uh sound",
    "start": "3871640",
    "end": "3877559"
  },
  {
    "text": "and the idea of being able to profile running production systems and to",
    "start": "3877559",
    "end": "3884160"
  },
  {
    "text": "understand them better I think is is um a great goal to have and what a great",
    "start": "3884160",
    "end": "3890079"
  },
  {
    "text": "use of the the tools that we that we have as part of of our",
    "start": "3890079",
    "end": "3896400"
  },
  {
    "text": "ecosystem well on that bombshell I mean I think that's it I think we've uh we've reached the end of the hour and so the",
    "start": "3896400",
    "end": "3904279"
  },
  {
    "text": "end of this episode thank you very much Johnny and Jana it's been awesome H have",
    "start": "3904279",
    "end": "3910880"
  },
  {
    "text": "you liked it I can talk about this topic for hours and I think you know this was awesome but we should keep you know",
    "start": "3910880",
    "end": "3917160"
  },
  {
    "text": "talking about tools I think yeah absolutely well there's lots there's lots more to discuss and um I I might",
    "start": "3917160",
    "end": "3923720"
  },
  {
    "text": "even see if we can bring in some people from the community that have um built",
    "start": "3923720",
    "end": "3928839"
  },
  {
    "text": "some of the tools that we're using today one one other little uh bit of info that",
    "start": "3928839",
    "end": "3934680"
  },
  {
    "text": "I think is quite interesting the only actual contribution I personally made to",
    "start": "3934680",
    "end": "3940480"
  },
  {
    "text": "the go project was to remove something from go lint so one time go lint got a",
    "start": "3940480",
    "end": "3947160"
  },
  {
    "text": "bit easier uh to satisfy thanks to me you're welcome yay uh yeah I I I delete code I",
    "start": "3947160",
    "end": "3956160"
  },
  {
    "text": "delete code I mean I love it well yeah that's it thank you so much um we'll see",
    "start": "3956160",
    "end": "3961760"
  },
  {
    "text": "you next time on go",
    "start": "3961760",
    "end": "3965520"
  },
  {
    "text": "time thanks for listening to this classic episode of go time subscribe now",
    "start": "3970640",
    "end": "3976160"
  },
  {
    "text": "if you're new head to go time. FM for all the ways and longtime listeners do",
    "start": "3976160",
    "end": "3981720"
  },
  {
    "text": "us a solid by sharing the show with your friends that's the best way people find us in fact I will cut you a deal email a",
    "start": "3981720",
    "end": "3989640"
  },
  {
    "text": "personal recommendation to three friends and bccg gotime at changel log.com I'll",
    "start": "3989640",
    "end": "3995640"
  },
  {
    "text": "send you a free pack of changelog stickers that's a win-win win with win-win win we all win thanks again to",
    "start": "3995640",
    "end": "4001520"
  },
  {
    "text": "our partners at fastly for having our CDN covered to BMC for these banging beats and to you for listening we",
    "start": "4001520",
    "end": "4008599"
  },
  {
    "text": "appreciate you next week we welcome R Steinberg to the show she joins Natalie",
    "start": "4008599",
    "end": "4013760"
  },
  {
    "text": "and Ian to discuss objectoriented programming and go that's what you can",
    "start": "4013760",
    "end": "4019039"
  },
  {
    "text": "look forward to next time on go",
    "start": "4019039",
    "end": "4023279"
  },
  {
    "text": "[Music] time",
    "start": "4029980",
    "end": "4036079"
  }
]