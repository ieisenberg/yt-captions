[
  {
    "text": "you don't have to have two cases to",
    "start": "2120",
    "end": "5970"
  },
  {
    "text": "generalize behavior to an interface or",
    "start": "5970",
    "end": "8670"
  },
  {
    "text": "take an interface or to use an interface",
    "start": "8670",
    "end": "11250"
  },
  {
    "text": "this far as I see it and this is coming",
    "start": "11250",
    "end": "16949"
  },
  {
    "text": "from my experience before ago and I",
    "start": "16949",
    "end": "20609"
  },
  {
    "text": "think it works very well with go as well",
    "start": "20609",
    "end": "24029"
  },
  {
    "text": "interfaces are a good way to implicitly",
    "start": "24029",
    "end": "26490"
  },
  {
    "text": "document what kind of behavior you",
    "start": "26490",
    "end": "28920"
  },
  {
    "text": "anticipate from the type that you're",
    "start": "28920",
    "end": "30599"
  },
  {
    "text": "taking in and and what kind you don't",
    "start": "30599",
    "end": "32398"
  },
  {
    "text": "write it creates a small subset of",
    "start": "32399",
    "end": "34559"
  },
  {
    "text": "things that the type should be able to",
    "start": "34559",
    "end": "37649"
  },
  {
    "text": "support and the first thing that you",
    "start": "37649",
    "end": "39270"
  },
  {
    "text": "even see when you look at the function",
    "start": "39270",
    "end": "41010"
  },
  {
    "text": "signature is the function signature and",
    "start": "41010",
    "end": "43500"
  },
  {
    "text": "the first thing is the area that you see",
    "start": "43500",
    "end": "44969"
  },
  {
    "text": "is the types if you have that",
    "start": "44969",
    "end": "48110"
  },
  {
    "text": "documentation can be a little bit more",
    "start": "48110",
    "end": "50430"
  },
  {
    "text": "loose",
    "start": "50430",
    "end": "52140"
  },
  {
    "text": "the behavior of the concrete type can",
    "start": "52140",
    "end": "54629"
  },
  {
    "text": "change but your function is the couple",
    "start": "54629",
    "end": "57809"
  },
  {
    "text": "for generations to come and any",
    "start": "57809",
    "end": "60239"
  },
  {
    "text": "maintainer will understand what they're",
    "start": "60239",
    "end": "62429"
  },
  {
    "text": "supposed to be doing with this code and",
    "start": "62429",
    "end": "64439"
  },
  {
    "text": "what this code is supposed to be able to",
    "start": "64439",
    "end": "66479"
  },
  {
    "text": "do and what especially what it cannot or",
    "start": "66479",
    "end": "69240"
  },
  {
    "text": "shouldn't be doing or you didn't",
    "start": "69240",
    "end": "71549"
  },
  {
    "text": "anticipate that it should be doing yeah",
    "start": "71549",
    "end": "73500"
  },
  {
    "text": "and there is another pointer because",
    "start": "73500",
    "end": "75330"
  },
  {
    "text": "ingo when using an interface we are",
    "start": "75330",
    "end": "78570"
  },
  {
    "text": "causing an allocation to the heat",
    "start": "78570",
    "end": "82490"
  }
]