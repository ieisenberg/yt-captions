[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "let's do it it's go time welcome to go time your source for wide ranging",
    "start": "9080",
    "end": "15360"
  },
  {
    "text": "discussions from all around the go Community find us on the web at go time. FM on the fediverse at gotime at Chang",
    "start": "15360",
    "end": "23560"
  },
  {
    "text": "log. social and on X at gotime FM thanks to our partners at fly.io the home of",
    "start": "23560",
    "end": "29039"
  },
  {
    "text": "Chang log.com launch your app as close to your users as possible find out how at",
    "start": "29039",
    "end": "35520"
  },
  {
    "text": "fly.io okay here we [Music]",
    "start": "35520",
    "end": "41000"
  },
  {
    "text": "go hello listener welcome to another episode of go",
    "start": "43120",
    "end": "50440"
  },
  {
    "start": "44000",
    "end": "224000"
  },
  {
    "text": "time yeah you got you guys like the dramatic and dramatic pauses in between",
    "start": "52680",
    "end": "58280"
  },
  {
    "text": "this is now a true crime podcast True Crime podcast yes and joining me as as a",
    "start": "58280",
    "end": "64000"
  },
  {
    "text": "suspects or I know co-hosts I mean depending on how you look at it is uh Ian lbar Ian how are you I'm doing great",
    "start": "64000",
    "end": "71200"
  },
  {
    "text": "good good to hear it and also returning after a Hiatus well I guess not not so much of a",
    "start": "71200",
    "end": "78320"
  },
  {
    "text": "hius now because you know you did do the the the live episode from goeran you",
    "start": "78320",
    "end": "84640"
  },
  {
    "text": "right Matt Matt ryer welcome true hello yeah I did do that that it was fun that",
    "start": "84640",
    "end": "91000"
  },
  {
    "text": "was oh you were there Johnny yeah yeah I was there I was there on it having having my delicious alternative to",
    "start": "91000",
    "end": "98399"
  },
  {
    "text": "brushing my teeth good old coffee delicious deliciousness",
    "start": "98399",
    "end": "104320"
  },
  {
    "text": "deliciousness no but a lot of people I said that joke and I said coffee is a delicious alternative to brushing your",
    "start": "104320",
    "end": "110200"
  },
  {
    "text": "teeth I've had messages people telling me no you do still need to brush your teeth so please yeah just pass that on",
    "start": "110200",
    "end": "117560"
  },
  {
    "text": "if anyone asks you do still need to brush your teeth yes those things are not mutually exclusive yeah and also everyone you can",
    "start": "117560",
    "end": "125159"
  },
  {
    "text": "stop messaging me about that now if you like that's fine so fine oh man that's",
    "start": "125159",
    "end": "130840"
  },
  {
    "text": "funny that's funny yeah you you shouldn't have uh you shouldn't have made that joke now people are going to chase you down so yeah what is not a",
    "start": "130840",
    "end": "138280"
  },
  {
    "text": "joke is uh this article um you keep writing and rewriting and updating and",
    "start": "138280",
    "end": "143480"
  },
  {
    "text": "refreshing every every couple of years about writing HTTP Services um now and",
    "start": "143480",
    "end": "149440"
  },
  {
    "text": "it's 13th year um and what was it second or third refresh is that it yeah I think it's the",
    "start": "149440",
    "end": "157040"
  },
  {
    "text": "second refresh there was an early version and then I did a refresh of that",
    "start": "157040",
    "end": "162760"
  },
  {
    "text": "and I just basically it's the same thing I just update the title with the different number of years of past it's",
    "start": "162760",
    "end": "168560"
  },
  {
    "text": "the gift that keeps on giving yeah just yeah keep uh when was the first one oh I",
    "start": "168560",
    "end": "173959"
  },
  {
    "text": "don't the first one I encountered was eight years uh was there one before that that's I think that was the first May",
    "start": "173959",
    "end": "179319"
  },
  {
    "text": "there may have been seven years and then eight years was the one that was there for a long time because it didn't really",
    "start": "179319",
    "end": "184440"
  },
  {
    "text": "change much and then I felt like enough had evolved that it was time to do a do",
    "start": "184440",
    "end": "191360"
  },
  {
    "text": "a refresh and yeah give it a new new life I suppose a bit MH mhm so the",
    "start": "191360",
    "end": "200280"
  },
  {
    "text": "obviously the link to the new one um which actually contains the links to the",
    "start": "200280",
    "end": "205400"
  },
  {
    "text": "old one right um will be in the show notes but yeah Ian and I were thinking you know we kind of go through and call",
    "start": "205400",
    "end": "211480"
  },
  {
    "text": "out the interesting bits um so what were the sort of the major changes right with",
    "start": "211480",
    "end": "217879"
  },
  {
    "text": "this with this refresh uh what what was sort of different when why did you change your the approach one thing that",
    "start": "217879",
    "end": "225080"
  },
  {
    "start": "224000",
    "end": "338000"
  },
  {
    "text": "changed was preferring HTTP I used to prefer HTTP Handler Funk so I would use",
    "start": "225080",
    "end": "231400"
  },
  {
    "text": "that type everywhere and then at the points at which you needed to interface with HTTP Handler you just you can right",
    "start": "231400",
    "end": "239040"
  },
  {
    "text": "because it does Implement that but then if you're taking sometime so sometimes it made bits easier to write but",
    "start": "239040",
    "end": "245760"
  },
  {
    "text": "actually made it whenever you had to interact with third party languages or third party libraries you would then had",
    "start": "245760",
    "end": "251720"
  },
  {
    "text": "to do extra dubbings in places and it just would kind of looked quite ugly so",
    "start": "251720",
    "end": "257639"
  },
  {
    "text": "I think I just just decided I'll just go to http Handler because that's the",
    "start": "257639",
    "end": "263600"
  },
  {
    "text": "simple type Tom Wilkey also who's the CTO at grafana also said said that same",
    "start": "263600",
    "end": "269160"
  },
  {
    "text": "thing to me a long time ago actually I met him in an airport uh we we were both on our way to a conference in Lviv",
    "start": "269160",
    "end": "275240"
  },
  {
    "text": "actually in Ukraine and we'd missed a connection and then there was just like",
    "start": "275240",
    "end": "281039"
  },
  {
    "text": "a person talking behind me in the queue about go you know and I I can't resist",
    "start": "281039",
    "end": "287440"
  },
  {
    "text": "that I can't just let that happen if they say something I don't agree with so I spun around and then that's where I",
    "start": "287440",
    "end": "293160"
  },
  {
    "text": "met him that's actually where I met him and that's that led to now I work at grafana Labs so I don't know I don't",
    "start": "293160",
    "end": "298800"
  },
  {
    "text": "know how many people you're meeting in airports but get out get to your local airport I say you never know what's",
    "start": "298800",
    "end": "305320"
  },
  {
    "text": "going to happen find yourself a job you go to your local airport to find a job you know that's that's that's how",
    "start": "305320",
    "end": "311560"
  },
  {
    "text": "I'm connecting those dots okay okay you do have to miss a connection I think",
    "start": "311560",
    "end": "317320"
  },
  {
    "text": "right right and and but do you think you have to be headed to Ukraine for that to also align things for you question I've",
    "start": "317320",
    "end": "324639"
  },
  {
    "text": "haven't I've only done it that way so that works for me I suggest you do exactly the same",
    "start": "324639",
    "end": "330240"
  },
  {
    "text": "yeah don't don't change anything might not be worth it right now yeah true right",
    "start": "330240",
    "end": "335840"
  },
  {
    "text": "right indeed so away from Handler Funk and embracing the good old HTP Handler",
    "start": "335840",
    "end": "343880"
  },
  {
    "start": "338000",
    "end": "490000"
  },
  {
    "text": "interface and obviously you added some some additional opinions to the testing stuff and we'll get to that but yeah",
    "start": "343880",
    "end": "349440"
  },
  {
    "text": "like I was looking through through the examples that you had on the blog post",
    "start": "349440",
    "end": "354520"
  },
  {
    "text": "this uh new server Constructor and all these these arguments yeah so the I",
    "start": "354520",
    "end": "360600"
  },
  {
    "text": "think let's if we deviate slightly from the HTTP Services um sort of",
    "start": "360600",
    "end": "366080"
  },
  {
    "text": "conversation and talk about sort of how many arguments right should function signatures have and support like the",
    "start": "366080",
    "end": "372520"
  },
  {
    "text": "reason I'm calling this out is is because I I've been a part of many language communities where there's is an",
    "start": "372520",
    "end": "377880"
  },
  {
    "text": "optimal right number that you should have and if you go beyond then you get a",
    "start": "377880",
    "end": "382919"
  },
  {
    "text": "side eye from a from your fellow developer kind of thing right right so this yeah this comes from I used to have",
    "start": "382919",
    "end": "389880"
  },
  {
    "text": "a server struct that would have all the dependencies in there and then the methods would hang off though that that",
    "start": "389880",
    "end": "396240"
  },
  {
    "text": "server type and that meant you could just put dependencies like the logger or",
    "start": "396240",
    "end": "401599"
  },
  {
    "text": "a database connection thing you could just put those into the struct and then they're available to all of your",
    "start": "401599",
    "end": "407960"
  },
  {
    "text": "handlers so that was kind of a nice convenience but actually what I found over time was when you come to actually",
    "start": "407960",
    "end": "414720"
  },
  {
    "text": "test write a test for it one of the nice things about a list of arguments is it's very clear what this thing needs and",
    "start": "414720",
    "end": "421919"
  },
  {
    "text": "even if you know in your test you know it's not going to it's not going to be used you can still you can explicitly",
    "start": "421919",
    "end": "427120"
  },
  {
    "text": "Mark that with a nil you pass a nil in usually or something so when I would do",
    "start": "427120",
    "end": "432240"
  },
  {
    "text": "that and sometimes it would still fail and it would fail because it was using a dependency that I didn't remember",
    "start": "432240",
    "end": "437520"
  },
  {
    "text": "because it was in the server struct and there was no nothing to prompt me to do that so I had to live through the panic",
    "start": "437520",
    "end": "443400"
  },
  {
    "text": "and that was all really it's not the end of the world like a lot of a lot of this whole blog post is kind of personal",
    "start": "443400",
    "end": "449560"
  },
  {
    "text": "taste and things that that work for me but but this led to then you have a",
    "start": "449560",
    "end": "454680"
  },
  {
    "text": "server Constructor that takes in loads of arguments sometimes because it's all your dependencies are going in there",
    "start": "454680",
    "end": "459840"
  },
  {
    "text": "your logger some config you might have some database stores you might have loads of various Services you know if",
    "start": "459840",
    "end": "466639"
  },
  {
    "text": "you're sending email you might have an email sender service kind of thing or a comment service and depending on how you",
    "start": "466639",
    "end": "474280"
  },
  {
    "text": "structure it you can end up with these long argument lists and yeah so that's the question is do you like long",
    "start": "474280",
    "end": "481599"
  },
  {
    "text": "argument lists is there a limit where you think this is silly I'm going to put it in a struct do you just always go for",
    "start": "481599",
    "end": "487000"
  },
  {
    "text": "a struct wherever you can immediately and just be done with it I'm done in a few different ways the and I think I",
    "start": "487000",
    "end": "494720"
  },
  {
    "text": "will sort of tilt one way or the other depending on sort of how explicit I want",
    "start": "494720",
    "end": "500639"
  },
  {
    "text": "to be or not be with things I can be nil or the things that have defaults sort of",
    "start": "500639",
    "end": "505960"
  },
  {
    "text": "within within a struct right so like my person preference in this particular",
    "start": "505960",
    "end": "511599"
  },
  {
    "text": "case would not be to have a new server with all these things I can pass in and sort of passing in nil when I don't need",
    "start": "511599",
    "end": "518599"
  },
  {
    "text": "something I might perhaps in this particular case I might perhaps choose the sort of functional options pattern",
    "start": "518599",
    "end": "525920"
  },
  {
    "text": "basically you know TP and for those who are not familiar it's typically you'll invoke um your your pseudo Constructor",
    "start": "525920",
    "end": "532880"
  },
  {
    "text": "if you will and then you can have a sort of a you know with some wi options right you know with a router with a moer with",
    "start": "532880",
    "end": "540240"
  },
  {
    "text": "a store with a whatever it is and then pretty much internally whatever the",
    "start": "540240",
    "end": "545440"
  },
  {
    "text": "defaults are for the things you don't specify right they can kick in sort of",
    "start": "545440",
    "end": "550480"
  },
  {
    "text": "automatically and you're just specifying a WID sort of option for the things that",
    "start": "550480",
    "end": "555640"
  },
  {
    "text": "you do want to override so I tend to prefer that approach as opposed to having long argument lists where I'm",
    "start": "555640",
    "end": "562399"
  },
  {
    "text": "sending nil for the things I don't need yeah so that that is nice cuz you you you you aren't you aren't in that world",
    "start": "562399",
    "end": "568480"
  },
  {
    "text": "you don't mention the things that you're not concerned with so you're you have good sensible defaults and then use",
    "start": "568480",
    "end": "574399"
  },
  {
    "text": "those options to uh yeah to set the specifics that you care about yeah I don't mind that at all either I know",
    "start": "574399",
    "end": "581760"
  },
  {
    "text": "I've heard a lot of people push back against these sorts of you know there's a bit of a discovery issue with it you",
    "start": "581760",
    "end": "587120"
  },
  {
    "text": "can't easily just see a list of all the possible options that you can set or pass in a struct at least gives you that",
    "start": "587120",
    "end": "594040"
  },
  {
    "text": "but yeah so I think yeah it's kind of trade-offs and taste I think I feel like but I think a lot of this blog post might come down to that and I might be",
    "start": "594040",
    "end": "600920"
  },
  {
    "text": "able to convince you with some good arguments but if you if you've got a good reason to not do this I think I do",
    "start": "600920",
    "end": "607480"
  },
  {
    "text": "say this in the blog if you've got a good reason not to do it then you've got a good reason like that's it that's what",
    "start": "607480",
    "end": "612600"
  },
  {
    "text": "you should do because I sometimes get people sometimes will stick very rigidly",
    "start": "612600",
    "end": "617959"
  },
  {
    "text": "to what I've written and when they're then battling something and it doesn't",
    "start": "617959",
    "end": "623519"
  },
  {
    "text": "quite fit it then they they'll sometimes reach out and there's just a much easier",
    "start": "623519",
    "end": "628880"
  },
  {
    "text": "that usually there's just a much simpler way they could have done this and they were kind of bending over backwards to",
    "start": "628880",
    "end": "634040"
  },
  {
    "text": "follow the advice but you know that's just all part of I think learning and you know using the this kind of these",
    "start": "634040",
    "end": "640720"
  },
  {
    "text": "sorts of blog posts properly which is not really to take them literally but to get ideas from them and apply them in",
    "start": "640720",
    "end": "646360"
  },
  {
    "text": "your case where it makes sense with this long list have you",
    "start": "646360",
    "end": "652880"
  },
  {
    "start": "650000",
    "end": "756000"
  },
  {
    "text": "what's like the ma Max you've encountered and were you okay with it like you know like if we if we ran this",
    "start": "652880",
    "end": "659040"
  },
  {
    "text": "way you know we run like a a a pretty big uh monolith and there would be 50 50",
    "start": "659040",
    "end": "665440"
  },
  {
    "text": "things in this right and that's just not doable 50 I've not seen I think honestly",
    "start": "665440",
    "end": "672200"
  },
  {
    "text": "15 to 20 and I was okay with it but I should say I tend to format it",
    "start": "672200",
    "end": "677720"
  },
  {
    "text": "differently as well so it's not like Contin like gofm also doesn't mind this",
    "start": "677720",
    "end": "682920"
  },
  {
    "text": "but you can basically just put each argument on a new line so it's just like a list like a a bit like when you do a",
    "start": "682920",
    "end": "689880"
  },
  {
    "text": "variable list and you or even a struct when you're declaring lots of things you you kind of have a an indented list of",
    "start": "689880",
    "end": "696320"
  },
  {
    "text": "items so and in that in that way it's not that different from using a struct it's just that you are forced to provide",
    "start": "696320",
    "end": "703480"
  },
  {
    "text": "you're forced at that point to provide an answer and you know when you come to changing things and you're getting the",
    "start": "703480",
    "end": "709720"
  },
  {
    "text": "compiler giving you warning errors it won't build because this signature is wrong that there's obviously that's very",
    "start": "709720",
    "end": "716399"
  },
  {
    "text": "brutal but that is really how you find all the places and as soon as you fixed",
    "start": "716399",
    "end": "721519"
  },
  {
    "text": "all that everything kind of works assuming you've got all your dependencies of different types you know so you can't end up with mixing the",
    "start": "721519",
    "end": "728079"
  },
  {
    "text": "order up or something which would be an absolute nightmare you know assuming not assuming that they' all your own type",
    "start": "728079",
    "end": "734440"
  },
  {
    "text": "that that is really nice you get that help so if you're I tend to work in an environment where things iterate a lot",
    "start": "734440",
    "end": "741720"
  },
  {
    "text": "and change a lot so I kind of optimize for changing things and then anything that helps me guard against mistakes is",
    "start": "741720",
    "end": "748560"
  },
  {
    "text": "why I'm so big on testing honestly like that that becomes more important I sort of optimized for that not always but",
    "start": "748560",
    "end": "755600"
  },
  {
    "text": "mostly are you still doing the detective thing is that still happening Johnny",
    "start": "755600",
    "end": "760839"
  },
  {
    "start": "756000",
    "end": "871000"
  },
  {
    "text": "like like exhibit a that was and now and then Ian really you should be bad",
    "start": "760839",
    "end": "767120"
  },
  {
    "text": "cop if you can Ian has been Ian I don't know if I could be bad cop on this I",
    "start": "767120",
    "end": "772399"
  },
  {
    "text": "don't know um no you can you you I I tend to agree with most of most of what you have in in these articles so you'll",
    "start": "772399",
    "end": "779360"
  },
  {
    "text": "be good cup then then I yeah I will I will deliberately go out of my way to be",
    "start": "779360",
    "end": "784560"
  },
  {
    "text": "nitpicky and be like why did you use the varable a",
    "start": "784560",
    "end": "790360"
  },
  {
    "text": "here yeah okay it's good cop and pedantic the new TV show coming soon",
    "start": "790880",
    "end": "798600"
  },
  {
    "text": "coming soon coming soon change log TV two detectives two detectives this is",
    "start": "798600",
    "end": "804600"
  },
  {
    "text": "yeah this is a good idea one one protein bar",
    "start": "804600",
    "end": "809480"
  },
  {
    "text": "before the show we were talking we were kind of uh we were talking about um Ian's um protein intake which I respect",
    "start": "810160",
    "end": "816639"
  },
  {
    "text": "because you know you gotta you got to get your protein you know I think Ian's trying to pack on some muscle so he's",
    "start": "816639",
    "end": "821839"
  },
  {
    "text": "eating his proteins um regularly gotta get those gains yeah got to get got you can't you can't leave those gains you",
    "start": "821839",
    "end": "828240"
  },
  {
    "text": "have a protein bar for for breakfast do you though I yeah every day every day every day yeah starts off it's like",
    "start": "828240",
    "end": "834160"
  },
  {
    "text": "living on the space International Space Station you get up and Float to your for",
    "start": "834160",
    "end": "839279"
  },
  {
    "text": "and you get you're pack it you're you're I also have freeze dried food for almost every day for lunch so it really is like",
    "start": "839279",
    "end": "845920"
  },
  {
    "text": "I'm living in the space station you living the space dream wow wow blank twice if you've been",
    "start": "845920",
    "end": "852560"
  },
  {
    "text": "kidnapped I don't know if people are getting now he's got to try not to Blink so you're not worried Johnny now his",
    "start": "852560",
    "end": "858720"
  },
  {
    "text": "eyes are bleeding his eyes are crying yeah because like I don't know",
    "start": "858720",
    "end": "865279"
  },
  {
    "text": "why you deliberately put yourself through such a such an eating um um",
    "start": "865279",
    "end": "870440"
  },
  {
    "text": "condition but hey I see it is cheap and easy I like the easy it's better that",
    "start": "870440",
    "end": "875480"
  },
  {
    "start": "871000",
    "end": "1010000"
  },
  {
    "text": "than not eat at all otherwise I'll just forget about lunch I thought Johnny thought that like people were K being",
    "start": "875480",
    "end": "881440"
  },
  {
    "text": "kidnapped and sent to the International Space [Music] Station it's like no one wants to go so",
    "start": "881440",
    "end": "888720"
  },
  {
    "text": "we have to know we're just kidnapping people yeah we're just sending them up there no one can hear you scream can you",
    "start": "888720",
    "end": "893800"
  },
  {
    "text": "no one can hear you scream yeah out in space yeah yeah I hear voice doesn't carry yeah anyway is vuum speaking of",
    "start": "893800",
    "end": "901120"
  },
  {
    "text": "what Carri so you have a routes. go which I'm looking at it and you have this add routes you know function where",
    "start": "901120",
    "end": "908160"
  },
  {
    "text": "you're passing in you know your mxer and your logger and any other sort of things you may need and that's where you sort",
    "start": "908160",
    "end": "914920"
  },
  {
    "text": "of do all the mapping for the routes yes which does make sense yeah well there's",
    "start": "914920",
    "end": "920920"
  },
  {
    "text": "something nice about having one place that Maps your entire API surface in go",
    "start": "920920",
    "end": "926839"
  },
  {
    "text": "we tend to group things up by responsibility and I used to do that where I would have the roots for say the",
    "start": "926839",
    "end": "932360"
  },
  {
    "text": "comments thing were in the comment service like it did its own rooting you pass the mser in or whatever and it",
    "start": "932360",
    "end": "937680"
  },
  {
    "text": "would wire itself up that felt very satisfying but usually anytime there's",
    "start": "937680",
    "end": "943160"
  },
  {
    "text": "um an issue or an incident or bug report usually comes with a URL if it's an API",
    "start": "943160",
    "end": "948240"
  },
  {
    "text": "especially this these kinds of apis so it really I found myself actually",
    "start": "948240",
    "end": "953720"
  },
  {
    "text": "starting with the URL that's how I would you know if I jumped into a project I haven't been in for a while that's how I",
    "start": "953720",
    "end": "959560"
  },
  {
    "text": "would go and figure out where to look so I started to have yeah put every all the",
    "start": "959560",
    "end": "964600"
  },
  {
    "text": "roots into one place I also got this there's a few other Frameworks that just do this just naturally the way they work",
    "start": "964600",
    "end": "972440"
  },
  {
    "text": "and it is just nice that you can see your entire API surface it also helps you kind of you're not looking at the",
    "start": "972440",
    "end": "978360"
  },
  {
    "text": "API surface in fragments you're looking at the whole thing as one so you get to",
    "start": "978360",
    "end": "983920"
  },
  {
    "text": "think about how do these things play together you know sometimes you might say comments here um and it's not",
    "start": "983920",
    "end": "989639"
  },
  {
    "text": "pluralized elsewhere or it's called messages in another route or something like this and that kind of toil when",
    "start": "989639",
    "end": "996720"
  },
  {
    "text": "you're trying to consume an API is is kind of horrible so partly this is putting yourself in the place of where",
    "start": "996720",
    "end": "1003399"
  },
  {
    "text": "the user is going to be which is they're going to see this API surface as one of the first things they might see yeah",
    "start": "1003399",
    "end": "1010160"
  },
  {
    "start": "1010000",
    "end": "1130000"
  },
  {
    "text": "this is something we do and I I think it is the single greatest thing you can do for code navigation because you it's",
    "start": "1010160",
    "end": "1015959"
  },
  {
    "text": "basically an index of everything so even even when I have a bug report and I'm looking for a certain functionality I",
    "start": "1015959",
    "end": "1021480"
  },
  {
    "text": "end up in this routes file and I can immediately find what I'm looking for um yeah see can't be the bad cop cu no",
    "start": "1021480",
    "end": "1028959"
  },
  {
    "text": "that's great cop that's really great cop for me this that makes me feel like I'm",
    "start": "1028959",
    "end": "1034120"
  },
  {
    "text": "going to get away with it and and we you might not you might not we even have we have a large number of routes right we have a pretty big API surface and even",
    "start": "1034120",
    "end": "1041360"
  },
  {
    "text": "even probably up in the hundreds of routes at this point and even on at that",
    "start": "1041360",
    "end": "1047438"
  },
  {
    "text": "scale of routes like in our big monolith it it's still great it doesn't get confusing like it's easy to break it",
    "start": "1047439",
    "end": "1054000"
  },
  {
    "text": "into blocks of hey this is this service this is this I would definitely recommend to take this advice good Ian",
    "start": "1054000",
    "end": "1061480"
  },
  {
    "text": "do you also do your middleware bits here as well or is that elsewhere we do that",
    "start": "1061480",
    "end": "1066880"
  },
  {
    "text": "in in this yeah yeah because that's also quite handy for similar reason it's like immediately being able to see the",
    "start": "1066880",
    "end": "1073440"
  },
  {
    "text": "dependencies and the trail of that you know there are Frameworks that do impend dependency injection and things where",
    "start": "1073440",
    "end": "1080880"
  },
  {
    "text": "they've given you some kind of configuration or you can ask for a particular type of a thing and whatever",
    "start": "1080880",
    "end": "1086039"
  },
  {
    "text": "and honestly if you're trying to work in that way you you really don't get as",
    "start": "1086039",
    "end": "1091360"
  },
  {
    "text": "much help back from the compiler whereas in this it's just go code you're just",
    "start": "1091360",
    "end": "1096679"
  },
  {
    "text": "calling functions and you know you get so much extra free stuff from the tool",
    "start": "1096679",
    "end": "1102960"
  },
  {
    "text": "chain from everything just because of that because it's such a common thing to do so yeah I like to call all the",
    "start": "1102960",
    "end": "1109640"
  },
  {
    "text": "middleware functions in there sometimes it gets a bit like there's bits of code you have in there as well that are doing",
    "start": "1109640",
    "end": "1115480"
  },
  {
    "text": "something also quite nice to just have that spelled out explicitly rather than",
    "start": "1115480",
    "end": "1120679"
  },
  {
    "text": "sort of try and hide it somewhere if it's you know if it's relevant uh so",
    "start": "1120679",
    "end": "1125760"
  },
  {
    "text": "yeah Johnny do you do this kind of thing do you like to have how do you do Roots I do like to group them together um and",
    "start": "1125760",
    "end": "1132240"
  },
  {
    "start": "1130000",
    "end": "1198000"
  },
  {
    "text": "for all the reasons the two of you have mentioned one thing that that I've started thinking about is uh I'm not I'm",
    "start": "1132240",
    "end": "1139480"
  },
  {
    "text": "a big fan of using a standard library for most things and even even when I had to sort of you know jump through a couple of Hoops here and and there to",
    "start": "1139480",
    "end": "1145280"
  },
  {
    "text": "sort of uh have specific in small applications to have you know to um sort of do my own URL parsing to extract you",
    "start": "1145280",
    "end": "1151440"
  },
  {
    "text": "know variables and values something like that right I'd opt for using a stand Library even if I had to jump through those Hoops as opposed to using a",
    "start": "1151440",
    "end": "1158600"
  },
  {
    "text": "framework like the popular ones you know the cheese or a gin or whatever is popular these days obviously with the",
    "start": "1158600",
    "end": "1165360"
  },
  {
    "text": "introduction of of sort of the more robust routing Library enhancements right to the HTP package from uh I think",
    "start": "1165360",
    "end": "1172080"
  },
  {
    "text": "122 or is it 121 the now I'm pretty happy about that I'm pretty stoked right I can still stick to the standard",
    "start": "1172080",
    "end": "1178200"
  },
  {
    "text": "Library without having those uh to bring in those additional Frameworks but the those additional Frameworks did sort of",
    "start": "1178200",
    "end": "1183480"
  },
  {
    "text": "do the right thing so to speak by allowing you to sort of uh you know Define all your routes in one place you",
    "start": "1183480",
    "end": "1188960"
  },
  {
    "text": "know set up all your all your middleware in one place they sort of encourage you in that direction because it it does it does make sense they have all the",
    "start": "1188960",
    "end": "1194559"
  },
  {
    "text": "routing and all the middleware logic grouped together like this it doesn't make sense I just pulled up our our",
    "start": "1194559",
    "end": "1199840"
  },
  {
    "start": "1198000",
    "end": "1319000"
  },
  {
    "text": "routes file and it is 526 lines long and",
    "start": "1199840",
    "end": "1204960"
  },
  {
    "text": "it's still perfectly organized and easy to use so you sound so proud yeah but I get it it's good I",
    "start": "1204960",
    "end": "1212760"
  },
  {
    "text": "don't want to say proud I mean that's a lot of API surface I would like not to have that large of an API surface but",
    "start": "1212760",
    "end": "1219760"
  },
  {
    "text": "you know things gather crft over time things happen yes and you wanted to monolith you love a monolith don't you",
    "start": "1219760",
    "end": "1226320"
  },
  {
    "text": "Ian I do love a monolith yep yep yep I do actually the the Johnny",
    "start": "1226320",
    "end": "1233120"
  },
  {
    "text": "the changes you mention in the new HTTP routing stuff which essentially allows you to put path variables in and then",
    "start": "1233120",
    "end": "1239840"
  },
  {
    "text": "you can get those pull those variables out which is really what everyone was using Gorilla MX and the others for",
    "start": "1239840",
    "end": "1244880"
  },
  {
    "text": "right anyway to be honest when they got into like sub roots and things like this you can do you can create like a route",
    "start": "1244880",
    "end": "1250919"
  },
  {
    "text": "and then create a sub root and you know it's like too powerful too abstract we",
    "start": "1250919",
    "end": "1256400"
  },
  {
    "text": "don't really need that what we need is a list of what look like URL paths because that's",
    "start": "1256400",
    "end": "1261640"
  },
  {
    "text": "what that's how we think about things but I think those changes will make me go back because I used to use gorilla Ms",
    "start": "1261640",
    "end": "1268039"
  },
  {
    "text": "just by default I'll go back to just standard library now because of that yeah I think a lot of folks will um yeah",
    "start": "1268039",
    "end": "1275200"
  },
  {
    "text": "for writing your own Middle where you don't need some other library to help you do that it's pretty straightforward to do that with you know good old",
    "start": "1275200",
    "end": "1281880"
  },
  {
    "text": "Handler interface and everything else so there's no there's really no no real reason at least for me for the kind of",
    "start": "1281880",
    "end": "1287760"
  },
  {
    "text": "applications I built there's really no reason to to depend on a a framework at this point for the thing I mean and you",
    "start": "1287760",
    "end": "1293320"
  },
  {
    "text": "had you know additional things like you know session management or you know like",
    "start": "1293320",
    "end": "1298360"
  },
  {
    "text": "some sort of abstraction for cookie setting or whatever these things and and again nice you know I'm not sort of",
    "start": "1298360",
    "end": "1304679"
  },
  {
    "text": "bashing any of those Frameworks uh they did provide you know sort of a nice on-ramp I'd say if you are used to other",
    "start": "1304679",
    "end": "1311159"
  },
  {
    "text": "Frameworks from other languages um but I don't know to me it's always been sort",
    "start": "1311159",
    "end": "1316200"
  },
  {
    "text": "of keep it simple don't bring dependencies you don't need yes but the the cookie one's a good call",
    "start": "1316200",
    "end": "1321640"
  },
  {
    "start": "1319000",
    "end": "1424000"
  },
  {
    "text": "out because I think the standard Library the way you deal with cookies was I found that really quite weird it's a",
    "start": "1321640",
    "end": "1328320"
  },
  {
    "text": "little rough yeah I it's just a very low level so it's you learn a lot about how cookies really work and what they actually are so you know what you're",
    "start": "1328320",
    "end": "1334320"
  },
  {
    "text": "accepting all the time when you go on EU websites but you right you know I got a",
    "start": "1334320",
    "end": "1341200"
  },
  {
    "text": "got I got stuck in the advanced settings of one of them the other day couldn't close couldn't figure out to close it",
    "start": "1341200",
    "end": "1346600"
  },
  {
    "text": "just left the website yeah just I'd literally rather be hacked it's meant to be there to protect us and stop",
    "start": "1346600",
    "end": "1353120"
  },
  {
    "text": "us being tracked you know what I mean but it's not having that effect if I'm tweeting where I am and how angry I am",
    "start": "1353120",
    "end": "1359360"
  },
  {
    "text": "you know what I mean that's more information than they would have got is there not like a browser level API that",
    "start": "1359360",
    "end": "1365640"
  },
  {
    "text": "you can they could build that said like I accept all I decline all that is no they literally they what they what they",
    "start": "1365640",
    "end": "1372200"
  },
  {
    "text": "thought was going to happen is they're going to stop tracking people now like this put the end of and it's like oh you",
    "start": "1372200",
    "end": "1378080"
  },
  {
    "text": "have to have annoying thing that ruins your your experience of your website and all the businesses are like yep we'll",
    "start": "1378080",
    "end": "1384240"
  },
  {
    "text": "have a awful experience please so yeah it didn't have that effect at all",
    "start": "1384240",
    "end": "1389320"
  },
  {
    "text": "they're still tracking everyone um just and you have to answer every time if you reject it if you say no then it's fair",
    "start": "1389320",
    "end": "1396760"
  },
  {
    "text": "enough it asks you again I suppose because you told that you're not allowed to remember because you came back you",
    "start": "1396760",
    "end": "1402159"
  },
  {
    "text": "came back I came back but yeah just go just a browser setting exactly oh some",
    "start": "1402159",
    "end": "1409000"
  },
  {
    "text": "yeah oh it's oh my God mind you they also then gave us USBC on all iPhones",
    "start": "1409000",
    "end": "1417320"
  },
  {
    "text": "and all phones and they gave that to the world can can be all bad right yeah it's",
    "start": "1417320",
    "end": "1422840"
  },
  {
    "text": "not all bad is it yeah now if I could just figure out which USBC cable works for what device that would be great oh",
    "start": "1422840",
    "end": "1430760"
  },
  {
    "start": "1424000",
    "end": "1578000"
  },
  {
    "text": "you're joking they don't all work for every device no definitely not well how",
    "start": "1430760",
    "end": "1435799"
  },
  {
    "text": "how's that help is it USBC is it Thunderbolt is it oh yeah can this one charge at what Watts right exactly",
    "start": "1435799",
    "end": "1441720"
  },
  {
    "text": "there's like it's a whole it's man I I think I read something like a link off of Twitter or something or X um um that",
    "start": "1441720",
    "end": "1448480"
  },
  {
    "text": "sort of talked about all the different variations in the in the protocol and and and it was it was maddening it was",
    "start": "1448480",
    "end": "1455600"
  },
  {
    "text": "mad like how is a general consumer supposed to know all of this it was maddening this microphone I'm using is",
    "start": "1455600",
    "end": "1461360"
  },
  {
    "text": "USBC and if I plug it in with a cheap cable it sounds like like",
    "start": "1461360",
    "end": "1466840"
  },
  {
    "text": "this it's that enough through but yeah exactly that's weird what so the just",
    "start": "1466840",
    "end": "1472960"
  },
  {
    "text": "the tube's not big enough for your voice to go in it I mean I think just regular USB should have worked for this so I",
    "start": "1472960",
    "end": "1478760"
  },
  {
    "text": "have no idea no it's a protein it's a protein you're eating Ian it's it's it's coming through the CES it's gling up",
    "start": "1478760",
    "end": "1486520"
  },
  {
    "text": "pipes it's made your voice too beefy Johnny you can't you can't really",
    "start": "1486520",
    "end": "1494000"
  },
  {
    "text": "troll him about this cuz I saw you in real life in Berlin for go on EU and",
    "start": "1494000",
    "end": "1499960"
  },
  {
    "text": "you're stacked mate definitely you're a protein huh I mean I I didn't say Ian",
    "start": "1499960",
    "end": "1506200"
  },
  {
    "text": "was the only one eating is proteins I mean yeah at no point did I say that I eat my proteins too it's all right Ian",
    "start": "1506200",
    "end": "1513600"
  },
  {
    "text": "is that all you have to do just eat protein cuz I can do that just eat Protein that's all you got to do eat",
    "start": "1513600",
    "end": "1520000"
  },
  {
    "text": "protein e protein and sit on the couch sit on the couch done and record a show every once in a while yeah and you do",
    "start": "1520000",
    "end": "1526360"
  },
  {
    "text": "that dance isn't there like a famous dance that you do the protein shake I've heard of that but I don't know is is it",
    "start": "1526360",
    "end": "1533000"
  },
  {
    "text": "like the bartender is it yeah it's got to be yeah yeah I didn't know that I didn't know that yeah Ian you just",
    "start": "1533000",
    "end": "1538679"
  },
  {
    "text": "demonstrated the protein shake yeah the bartender yeah yeah that that's amazing that's",
    "start": "1538679",
    "end": "1544360"
  },
  {
    "text": "amazing I'm gonna use that next time I go dancing which will be never but oh",
    "start": "1544360",
    "end": "1551000"
  },
  {
    "text": "anyways let let's talk about let's talk about this run method you you really like to have in your code Matt so your",
    "start": "1551000",
    "end": "1557520"
  },
  {
    "text": "main love it right has it's just your obviously your main function but you don't have much else in there other than",
    "start": "1557520",
    "end": "1564000"
  },
  {
    "text": "this call to run and this run takes a contact and it takes an IO riter and",
    "start": "1564000",
    "end": "1569240"
  },
  {
    "text": "some arguments a list of arguments like what what what are you thinking like you used to have these things in inside of",
    "start": "1569240",
    "end": "1575000"
  },
  {
    "text": "main all like proper like what made you split them yes so the the bit the main",
    "start": "1575000",
    "end": "1580640"
  },
  {
    "start": "1578000",
    "end": "1901000"
  },
  {
    "text": "motivation here comes from uh being able to return an error because really like",
    "start": "1580640",
    "end": "1586799"
  },
  {
    "text": "the pattern of like there's this idea of self-similarity all over like if the code is the same everywhere it's it's",
    "start": "1586799",
    "end": "1593480"
  },
  {
    "text": "kind of in some ways it's easier to deal with like if sometimes in main you can't return an error so your error handling",
    "start": "1593480",
    "end": "1599880"
  },
  {
    "text": "code ends up can end up being three or four lines actually if you do if you've got instrumentation in there as well and",
    "start": "1599880",
    "end": "1606200"
  },
  {
    "text": "you know wrapping and other things and so if you're in main doing lots of you know normally you are setting up",
    "start": "1606200",
    "end": "1612480"
  },
  {
    "text": "connecting to a database checking some other services available doing whatever you're doing you can error and so you",
    "start": "1612480",
    "end": "1618840"
  },
  {
    "text": "end up I ended up having main that just has the same error handling code for very similar repeated a lot and you know",
    "start": "1618840",
    "end": "1626760"
  },
  {
    "text": "people complain about having to write if error doesn't equal nil like that that really makes people angry still um it's",
    "start": "1626760",
    "end": "1633640"
  },
  {
    "text": "one of the top things that makes everyone angry yeah it's like I don't want to have to check if that error is nil for some reason you just want to",
    "start": "1633640",
    "end": "1640000"
  },
  {
    "text": "ignore it I don't know what they want I think it's the biggest complaint they're like can you just make this automatic",
    "start": "1640000",
    "end": "1645240"
  },
  {
    "text": "because I'm doing it all the time which I understand and and that was kind of my I I had four or five lines of this stuff",
    "start": "1645240",
    "end": "1651120"
  },
  {
    "text": "m not including the braces if you add the braces on it's more I mean yeah one",
    "start": "1651120",
    "end": "1656320"
  },
  {
    "text": "more yeah so call out to a run function and then I found oh actually in test",
    "start": "1656320",
    "end": "1662120"
  },
  {
    "text": "code I can just call that run function and as long as I only as long as I don't use anything from the environment that's",
    "start": "1662120",
    "end": "1669039"
  },
  {
    "text": "not passed in as an argument actually that is a self-contained little that's like the program running in a",
    "start": "1669039",
    "end": "1675360"
  },
  {
    "text": "self-contained way and then now now was cooking with gas because you know I",
    "start": "1675360",
    "end": "1680640"
  },
  {
    "text": "could uh actually write tests that ran parallel but were essentially running",
    "start": "1680640",
    "end": "1686720"
  },
  {
    "text": "the program multiple times without actually doing that and then so kind of got sold on that the point is you taking",
    "start": "1686720",
    "end": "1692880"
  },
  {
    "text": "the arguments you're taking an eye or writer if you're going to write to standard out you take in the args even",
    "start": "1692880",
    "end": "1698080"
  },
  {
    "text": "if you're doing flag paing and stuff you do all that inside run so that you can in your test code you can call your",
    "start": "1698080",
    "end": "1704279"
  },
  {
    "text": "program with different flags just by passing in different arguments you get of course type safety you know the",
    "start": "1704279",
    "end": "1710519"
  },
  {
    "text": "compiler will check to make sure you're passing things so when you add a dependency say now we're going to write to well are we're going to read from",
    "start": "1710519",
    "end": "1716840"
  },
  {
    "text": "standard in now or uh we're going to write to standard error for some particular case you update the signature",
    "start": "1716840",
    "end": "1723760"
  },
  {
    "text": "and then you you're faced with a load of Errors which is a good thing it tells you all the places you need to now go and add something in whether you're",
    "start": "1723760",
    "end": "1731039"
  },
  {
    "text": "going to nil it out or provide a thing you know and if you've got but but like",
    "start": "1731039",
    "end": "1736360"
  },
  {
    "text": "the btes buffer is a really cool type because just like an in-memory buffer but it supports IO reader and IO",
    "start": "1736360",
    "end": "1743519"
  },
  {
    "text": "writer so you can pass a buffer in as like the the standard out and then in",
    "start": "1743519",
    "end": "1749679"
  },
  {
    "text": "your test code you can assert you can get the string of what was written and assert that certain things are there so",
    "start": "1749679",
    "end": "1755320"
  },
  {
    "text": "you can write test code that is even checking things in the environment to make sure that that's as expected and",
    "start": "1755320",
    "end": "1760919"
  },
  {
    "text": "you could imagine for in some cases that that's not important if it's a web server what you print out usually is",
    "start": "1760919",
    "end": "1767840"
  },
  {
    "text": "just for humans to read but if you've got a program that is you know if it's pausing Jason and writing lines of Jason",
    "start": "1767840",
    "end": "1773399"
  },
  {
    "text": "out or something like that this makes a lot of sense yeah I was kind of against this when I first read it I mean we do",
    "start": "1773399",
    "end": "1780600"
  },
  {
    "text": "all of our kind of configuration in the main file right so we end up with these very large Mains that like kind of I",
    "start": "1780600",
    "end": "1787200"
  },
  {
    "text": "don't know string everything together that we need but what changed my mind was this this G environment function",
    "start": "1787200",
    "end": "1794320"
  },
  {
    "text": "right that you pass into to run and I was like oh that would make a lot of my testing so much nicer like the idea of",
    "start": "1794320",
    "end": "1802640"
  },
  {
    "text": "passing what will be used for configuration into this run I really like yeah that's a good point so that in",
    "start": "1802640",
    "end": "1810039"
  },
  {
    "text": "talking about one of the types so you may be that there's a concrete type you're passing in like like the OS getm",
    "start": "1810039",
    "end": "1817039"
  },
  {
    "text": "is a function but you can have a function type since we have structural typing duck typing and go you can just",
    "start": "1817039",
    "end": "1823919"
  },
  {
    "text": "decide your own type so make a new type and that one's going to fit it that allows you to then mock it or provide a",
    "start": "1823919",
    "end": "1829480"
  },
  {
    "text": "different function so if you are reading environment variables through os. getm",
    "start": "1829480",
    "end": "1834960"
  },
  {
    "text": "you instead use your the pin get M function and in test code you can just",
    "start": "1834960",
    "end": "1840559"
  },
  {
    "text": "have a switch in there to say ah if they're asking for this return this value if they're asking for this one or if it's if if it's not one of these we",
    "start": "1840559",
    "end": "1847080"
  },
  {
    "text": "could we could even error there it shouldn't be asking for something from the environment that's not expected so",
    "start": "1847080",
    "end": "1853480"
  },
  {
    "text": "yeah I I like that one as well there is they did add something into testing code",
    "start": "1853480",
    "end": "1859000"
  },
  {
    "text": "for this you know there is like T do setm yeah I've been using that that",
    "start": "1859000",
    "end": "1864840"
  },
  {
    "text": "that's been in there forever I've been using that forever yes but you can't run them in parallel I think it is actually",
    "start": "1864840",
    "end": "1869880"
  },
  {
    "text": "setting environment so it's it's not the set you don't get the parallel thing whereas with this trick you can run them",
    "start": "1869880",
    "end": "1876039"
  },
  {
    "text": "in parallel because it's just functions it's not even actually dealing with the environment we use this trick the same",
    "start": "1876039",
    "end": "1882120"
  },
  {
    "text": "with time. now a lot where you can just have a function that returns a specific date so you're not depending on the",
    "start": "1882120",
    "end": "1888519"
  },
  {
    "text": "actual time yeah so you can make your tests deterministic and sometimes that's really important Roberto clais want",
    "start": "1888519",
    "end": "1895880"
  },
  {
    "text": "because I did the same thing with uh random numbers as well if you've got a random number generator okay so I do I",
    "start": "1895880",
    "end": "1902760"
  },
  {
    "start": "1901000",
    "end": "2187000"
  },
  {
    "text": "do like that get M function you can sort of determine what depending on the",
    "start": "1902760",
    "end": "1908120"
  },
  {
    "text": "context you know how you want that to be handled I do like that my my current",
    "start": "1908120",
    "end": "1913519"
  },
  {
    "text": "configuration sort of approach that I've kind of used consistently across projects this should just have a a a",
    "start": "1913519",
    "end": "1919480"
  },
  {
    "text": "config sort of struct with some struct tags on there that specify what is the",
    "start": "1919480",
    "end": "1925279"
  },
  {
    "text": "expected name from the environment like I always assume that I'm going to be fetching things from the environment",
    "start": "1925279",
    "end": "1931039"
  },
  {
    "text": "right it's like os. getm style and then I use uh there's at least one or two different popular libraries I think one",
    "start": "1931039",
    "end": "1937639"
  },
  {
    "text": "I use is called MV de code or something but you know if anybody just searches for M de code on pk. go.d they'll",
    "start": "1937639",
    "end": "1943720"
  },
  {
    "text": "they'll they'll find at least one package that does that does this but basically just initialize my my config",
    "start": "1943720",
    "end": "1950000"
  },
  {
    "text": "struct and all based on the struct tags all the appropriate values from the",
    "start": "1950000",
    "end": "1955159"
  },
  {
    "text": "environment are sort of red in so I get a config basically struct that is fully populated and you can have you know sort",
    "start": "1955159",
    "end": "1962120"
  },
  {
    "text": "of validation checks and you can have default and you can have you know basically you know you can have an error out if it can't find the environment",
    "start": "1962120",
    "end": "1968399"
  },
  {
    "text": "variable or whatnot so you know basically I use that if I need to pass that to my run function right in this",
    "start": "1968399",
    "end": "1974960"
  },
  {
    "text": "case that that would be the approach I I take as opposed to opposed to having a specific get M function and the same",
    "start": "1974960",
    "end": "1980760"
  },
  {
    "text": "thing to like for my tests I'm initializing sort of a you know a config um strug specific to to my test if if it",
    "start": "1980760",
    "end": "1989360"
  },
  {
    "text": "doesn't need to be specific to a particular test I put it in test main if it needs to be overwritten on a",
    "start": "1989360",
    "end": "1995279"
  },
  {
    "text": "particular specific test I initialize one there so I I have I'm able to control a lot of things about my",
    "start": "1995279",
    "end": "2001880"
  },
  {
    "text": "environment not just one environment variable but all like the entire configuration set right for that",
    "start": "2001880",
    "end": "2007360"
  },
  {
    "text": "particular run of whatever I'm testing yeah so a similar kind of idea really and yeah passing things in making it",
    "start": "2007360",
    "end": "2014519"
  },
  {
    "text": "deterministic as I was saying Roberto clais told me because I used to do it with Rand random numbers same thing so",
    "start": "2014519",
    "end": "2020760"
  },
  {
    "text": "you just have a function that's going to return a random number in production you use the real crypto random thing in your",
    "start": "2020760",
    "end": "2026279"
  },
  {
    "text": "test code you put pass a new function and you can just you know return the deterministic numbers and Roberto made",
    "start": "2026279",
    "end": "2032080"
  },
  {
    "text": "the point well if in production your code is is dealing with random stuff maybe in in your test code it should be",
    "start": "2032080",
    "end": "2038360"
  },
  {
    "text": "as well and then I started experimenting with using real actual real random numbers which you can sometimes do and",
    "start": "2038360",
    "end": "2045559"
  },
  {
    "text": "depends on the case again as usual So Graceful shutdown I remember maybe this",
    "start": "2045559",
    "end": "2050878"
  },
  {
    "text": "is an artifact of having been around having seen the evolution of these things you know um throughout the years",
    "start": "2050879",
    "end": "2057320"
  },
  {
    "text": "but graceful shutdown used to be when when finally the HTP Library allowed for",
    "start": "2057320",
    "end": "2062720"
  },
  {
    "text": "you to have graceful shutdown that wasn't always the case from day one right when when it finally allowed for that that was a pretty big deal back in",
    "start": "2062720",
    "end": "2069000"
  },
  {
    "text": "the day yeah yeah I remember that too cuz there were you'd have to sort of do it yourself there were a couple of",
    "start": "2069000",
    "end": "2074240"
  },
  {
    "text": "packages as well right yeah a friend of mine Tyler wrote one of those packages that was popular",
    "start": "2074240",
    "end": "2080118"
  },
  {
    "text": "um and then yeah they added it I think so we mentioned earlier in that run",
    "start": "2080119",
    "end": "2085240"
  },
  {
    "text": "function you pass a context in normally in Main and this isn't really I don't know if this is covered in the blog post",
    "start": "2085240",
    "end": "2092560"
  },
  {
    "text": "but I I usually use the notify signal which is actually you can get a cont",
    "start": "2092560",
    "end": "2097680"
  },
  {
    "text": "text to cancel when a certain interrupt signal has come in so in main I'll usually do that and then that context",
    "start": "2097680",
    "end": "2105960"
  },
  {
    "text": "then is cancelable by control C or whatever which is what you want that doesn't end the program now because",
    "start": "2105960",
    "end": "2112359"
  },
  {
    "text": "you've trapped the signal this is in the blog post by the way it's in the funk main only calls run section so you",
    "start": "2112359",
    "end": "2119400"
  },
  {
    "text": "essentially can cancel that context in your test code so normally I would I would create a context with a cancel",
    "start": "2119400",
    "end": "2125599"
  },
  {
    "text": "defer the cancel so I know that when the test code exits it cancels that context and everything can get shut down so if",
    "start": "2125599",
    "end": "2133119"
  },
  {
    "text": "you've got if you spin up go routines and you do extra things this this is",
    "start": "2133119",
    "end": "2138200"
  },
  {
    "text": "like a main context that runs through your whole program it's not a per request context which is what context is",
    "start": "2138200",
    "end": "2145400"
  },
  {
    "text": "really meant for so some people saw it as an anti- pattern in the beginning it's not a per request thing but it's",
    "start": "2145400",
    "end": "2153040"
  },
  {
    "text": "kind of if you treat the program run like a request in a way it is if you treat it like run a program and get a",
    "start": "2153040",
    "end": "2159079"
  },
  {
    "text": "response from it you know then this kind of is that but but in a way it works",
    "start": "2159079",
    "end": "2164480"
  },
  {
    "text": "anyway so you pass this context all the way through if you're spinning up go routines check that main context all the",
    "start": "2164480",
    "end": "2170359"
  },
  {
    "text": "time uh so you can cancel it and then you make also new contexts off this one",
    "start": "2170359",
    "end": "2176119"
  },
  {
    "text": "so that if this gets canceled they'll Cascade down and they'll all get canceled and that's really a nice way to",
    "start": "2176119",
    "end": "2181400"
  },
  {
    "text": "just kind of gracefully shut down really anything and sort of programmatically doing it using the context right the",
    "start": "2181400",
    "end": "2188119"
  },
  {
    "start": "2187000",
    "end": "2430000"
  },
  {
    "text": "yeah I remember the having to write a lot of signal trapping code and everything else but I think you've",
    "start": "2188119",
    "end": "2193640"
  },
  {
    "text": "you've taken a slightly different approach by using W group for for for this let me see the the part I'm",
    "start": "2193640",
    "end": "2201880"
  },
  {
    "text": "thinking about oh it's in the new server bit at the top right so yeah you",
    "start": "2201880",
    "end": "2206920"
  },
  {
    "text": "initialize HP server you launch a go routine yeah with the listen and serve and then now you have a we group with",
    "start": "2206920",
    "end": "2214760"
  },
  {
    "text": "listening for that context done before you can shut down yeah this is after after we have if we",
    "start": "2214760",
    "end": "2221079"
  },
  {
    "text": "have like a a proper shut like a shutdown method that you call on the server then you kind of want to you",
    "start": "2221079",
    "end": "2227640"
  },
  {
    "text": "don't just want to cancel the context and then everything's done you kind of",
    "start": "2227640",
    "end": "2232880"
  },
  {
    "text": "want to wait for the things to be shut down you don't want to just interrupt things you want to that's why it's graceful shut down you're waiting for",
    "start": "2232880",
    "end": "2239280"
  },
  {
    "text": "things to finish including like inflight request that's the cool thing about this you got a request that's come in you've",
    "start": "2239280",
    "end": "2245480"
  },
  {
    "text": "interrupted normally that would just kill that that request it would crash I don't know what would happen not good",
    "start": "2245480",
    "end": "2252240"
  },
  {
    "text": "things now you you if you if you do the interrupt it'll finish what it was doing",
    "start": "2252240",
    "end": "2257880"
  },
  {
    "text": "with that request it won't accept new requests because contact's been canceled and I think the HTP servers smart enough",
    "start": "2257880",
    "end": "2264079"
  },
  {
    "text": "to deal with that and it'll finish anything in flight and then you need a way to know that that thing's finished",
    "start": "2264079",
    "end": "2269960"
  },
  {
    "text": "and I think it's the shutdown returns so that's the signal but so the way to do",
    "start": "2269960",
    "end": "2275079"
  },
  {
    "text": "that in a sort of concurrent way is wrap it in a go routine and have a one way to do it is have a wait group and then just",
    "start": "2275079",
    "end": "2281200"
  },
  {
    "text": "wait for that one thing to be done and you know that the server's not running anymore it also lets you pass in a",
    "start": "2281200",
    "end": "2289160"
  },
  {
    "text": "shutdown context with a different timeout so you can say right I'm going to give you 10 seconds to to basically",
    "start": "2289160",
    "end": "2295680"
  },
  {
    "text": "shut down yeah and then if that doesn't happen that context gets canceled and it'll Force the return and then we say",
    "start": "2295680",
    "end": "2302119"
  },
  {
    "text": "we're done regardless so you're not going to wait and let it you know imagine a request just hanging forever",
    "start": "2302119",
    "end": "2308119"
  },
  {
    "text": "assuming that none of your requests that you're still processing at the time of",
    "start": "2308119",
    "end": "2313920"
  },
  {
    "text": "shutdown take more than 10 seconds right you have the sort of this maximum right",
    "start": "2313920",
    "end": "2318960"
  },
  {
    "text": "sort of amount of time you're willing to wait would there be a situation where",
    "start": "2318960",
    "end": "2324839"
  },
  {
    "text": "maybe the the whatever that last request is that's being processed is really important and maybe it takes 15 seconds",
    "start": "2324839",
    "end": "2332880"
  },
  {
    "text": "where normally it would take five but it takes 15 and it's a really important request it doesn't I just get dropped on",
    "start": "2332880",
    "end": "2338400"
  },
  {
    "text": "the floor then yeah I guess you just made that decision and it's really how long are you prepared to wait for things",
    "start": "2338400",
    "end": "2344280"
  },
  {
    "text": "to shut down you'll pay this price possibly assuming things are hanging if it's healthy everything just shuts down",
    "start": "2344280",
    "end": "2350640"
  },
  {
    "text": "immediately but if there is an issue you might you might well pay that price and imagine in test code if you were paying",
    "start": "2350640",
    "end": "2356400"
  },
  {
    "text": "that price every time I don't think you'd be happy with that but you probably won't so yeah it's just how long are you prepared to wait there's",
    "start": "2356400",
    "end": "2362960"
  },
  {
    "text": "another thing I did once that worked quite well which was you trap the signal and the would cancel the context and",
    "start": "2362960",
    "end": "2368960"
  },
  {
    "text": "then you would uh have a new one waiting for another signal and if you get the second signal then you actually just do",
    "start": "2368960",
    "end": "2374599"
  },
  {
    "text": "an OS exit so because that's quite nice behavior sometimes like almost like a force quit yeah that worked too I don't",
    "start": "2374599",
    "end": "2381640"
  },
  {
    "text": "I don't know if I did that with the signal Notifier if I did that manually I can't remember but it's not in the blog post that it's just a little bit of",
    "start": "2381640",
    "end": "2387400"
  },
  {
    "text": "bonus material you get because you've listened to this yeah and what what else is striking you about about this you",
    "start": "2387400",
    "end": "2393160"
  },
  {
    "text": "know I've seen I'm seeing encoding decoding one place with all which all makes sense to me validation that makes",
    "start": "2393160",
    "end": "2398839"
  },
  {
    "text": "sense to me again I think there are Frameworks that some people prefer the validation bit in this is just a nice",
    "start": "2398839",
    "end": "2404960"
  },
  {
    "text": "simple go interface and you could you know it just implements a method called valid and in the encoding uh in the",
    "start": "2404960",
    "end": "2413400"
  },
  {
    "text": "decoding and in encoding actually before you encode you can just check to make sure it's valid and if there are",
    "start": "2413400",
    "end": "2419359"
  },
  {
    "text": "problems you can deal with it so it's nice again because it's just go code but maybe you've used other things that you",
    "start": "2419359",
    "end": "2426200"
  },
  {
    "text": "prefer uh there are a lot of validator libraries I've seen yeah we do something",
    "start": "2426200",
    "end": "2431240"
  },
  {
    "start": "2430000",
    "end": "2589000"
  },
  {
    "text": "similar with this validator interface but ours returns an air and after seeing yours I'm like I kind of like this map",
    "start": "2431240",
    "end": "2438079"
  },
  {
    "text": "string uh more than one thing could go wrong yeah and I mean we have like an air type that's literally like multiple",
    "start": "2438079",
    "end": "2444040"
  },
  {
    "text": "errors for multiple fields and this seems just so much easier I might wait you have a single eror struck that has",
    "start": "2444040",
    "end": "2450920"
  },
  {
    "text": "all kinds of different errors possible within it yeah like a multiair type thing yeah you can say hey this field",
    "start": "2450920",
    "end": "2457680"
  },
  {
    "text": "had basically it's a map to a string which is the field name to another air I see right yeah I used to do it like that",
    "start": "2457680",
    "end": "2464200"
  },
  {
    "text": "as well and it was just the dealing with it just the unpacking it you just had to know what that error type was or you you",
    "start": "2464200",
    "end": "2471560"
  },
  {
    "text": "know usually have helper methods and this really comes from trying to be minimalist honestly if I can get away",
    "start": "2471560",
    "end": "2478040"
  },
  {
    "text": "with just providing one like one interface you know that's better than an",
    "start": "2478040",
    "end": "2483119"
  },
  {
    "text": "interface and a couple of helper methods you know none of it's the end of the world it's just a sort of a tend towards",
    "start": "2483119",
    "end": "2491280"
  },
  {
    "text": "minimalism and yeah I I think returning the problems just a map string string",
    "start": "2491280",
    "end": "2496400"
  },
  {
    "text": "it's also nice it's a sort of user experience thing um it's nice to tell the user which field has gone wrong in",
    "start": "2496400",
    "end": "2503040"
  },
  {
    "text": "the UI often they can line it up in visually so that the error actually appears next to the field things like",
    "start": "2503040",
    "end": "2509560"
  },
  {
    "text": "that which you can do in other ways but again you know map string string is immediately Json encodable where errors",
    "start": "2509560",
    "end": "2516560"
  },
  {
    "text": "again it's more work there so if you needed to handle sort of localization",
    "start": "2516560",
    "end": "2522000"
  },
  {
    "text": "you just return some sort of keyword that they can then swap for some whatever the appropriate language text",
    "start": "2522000",
    "end": "2527960"
  },
  {
    "text": "it should be or something it's good point yeah I've seen it where it returns",
    "start": "2527960",
    "end": "2533000"
  },
  {
    "text": "English but then there's a map where the English key is so the actual statement",
    "start": "2533000",
    "end": "2539240"
  },
  {
    "text": "itself is the key for the lookup for the other yeah but then then you change something and you get you know you're in",
    "start": "2539240",
    "end": "2545760"
  },
  {
    "text": "trouble though you're had a period and it's broken right right exactly exactly but then the test code would like would",
    "start": "2545760",
    "end": "2553559"
  },
  {
    "text": "help you cat yeah cuz in that yeah but um I thought I'd probably prefer a key",
    "start": "2553559",
    "end": "2559520"
  },
  {
    "text": "because or or even something with its own type just to make that really explicit that's what this is yeah yeah",
    "start": "2559520",
    "end": "2565200"
  },
  {
    "text": "yeah yeah localization work is is is actually not not trivial of in the",
    "start": "2565200",
    "end": "2570720"
  },
  {
    "text": "receiving in of that task it's not yeah but you speak three three or four languages imagine having to deal with",
    "start": "2570720",
    "end": "2576440"
  },
  {
    "text": "localization and you only speak one language it's a rub it's a kick in the face it's a slap in the face it's a slap",
    "start": "2576440",
    "end": "2584720"
  },
  {
    "text": "in the face isn't it yeah a little bit yes yeah yeah so the blog post doesn't",
    "start": "2584720",
    "end": "2590520"
  },
  {
    "start": "2589000",
    "end": "2868000"
  },
  {
    "text": "go into it but do you have like a standard way you're handling errors and translating to status codes and error",
    "start": "2590520",
    "end": "2598400"
  },
  {
    "text": "messages that sort of thing I've done a few I've solved this a few different ways and none of them particularly stood",
    "start": "2598400",
    "end": "2604440"
  },
  {
    "text": "out as worth like getting into the PO post it's just sort of slightly painful",
    "start": "2604440",
    "end": "2609520"
  },
  {
    "text": "each time but in a way I think that that that could be quite comforting for people you know have you have you done",
    "start": "2609520",
    "end": "2615119"
  },
  {
    "text": "it that's why I ask because it's painful every time like I've tried probably three or four different ways at this",
    "start": "2615119",
    "end": "2620160"
  },
  {
    "text": "point and yeah none of them are standout right which is your favorite way that's a great question right now we use just",
    "start": "2620160",
    "end": "2626720"
  },
  {
    "text": "like an air code interface that our airs Implement that return a specific code and then each endpoint has its own",
    "start": "2626720",
    "end": "2632480"
  },
  {
    "text": "switching on that to determine statuses and because we run into the issue like you know like you know we got nil back",
    "start": "2632480",
    "end": "2638839"
  },
  {
    "text": "from the database for this object that's a internal server error on this endpoint",
    "start": "2638839",
    "end": "2644400"
  },
  {
    "text": "but that's a bad request on this endpoint right so we've got to the point where like basically each endpoint",
    "start": "2644400",
    "end": "2650119"
  },
  {
    "text": "declares its own like known errors that map to a status and a specific error message and return unknown for the rest",
    "start": "2650119",
    "end": "2657119"
  },
  {
    "text": "yeah I've done things before where I have a special type I also changed it to a wrapping thing when the when the",
    "start": "2657119",
    "end": "2663480"
  },
  {
    "text": "wrapping all that kicked off uh wrapping your errors which you can do you could you can have",
    "start": "2663480",
    "end": "2669040"
  },
  {
    "text": "a type you can just have a function that says like uh basically basically add this status code to this struct to this",
    "start": "2669040",
    "end": "2676160"
  },
  {
    "text": "error so you and then you wrap the error and pass it in that's okay but you end",
    "start": "2676160",
    "end": "2681400"
  },
  {
    "text": "up with HTTP stuff in lots of different places sometimes so I do try and solve",
    "start": "2681400",
    "end": "2687559"
  },
  {
    "text": "that only in the Handler itself because that's the HTTP bit um so that's where I",
    "start": "2687559",
    "end": "2693880"
  },
  {
    "text": "would do it if you want yeah I don't like the idea that I've got some service",
    "start": "2693880",
    "end": "2698920"
  },
  {
    "text": "that's nothing to do with HTTP it's just its own thing and it returns an error at one point and then there's like a 500 or",
    "start": "2698920",
    "end": "2704680"
  },
  {
    "text": "an HTP status bad request there feels like the wrong place for it I just",
    "start": "2704680",
    "end": "2710119"
  },
  {
    "text": "wouldn't expect that to be there so I feel like it'd be hard to find later you mentioned that that's actually how we do",
    "start": "2710119",
    "end": "2716119"
  },
  {
    "text": "it so uh the htb handlers themselves just wrap a like a generic bad request",
    "start": "2716119",
    "end": "2721559"
  },
  {
    "text": "err that it knows it's a 400 but yeah having HP related things and other pieces of code does feel icky yeah you",
    "start": "2721559",
    "end": "2729119"
  },
  {
    "text": "just wouldn't expect to find it there I think it it honestly does depend imagine",
    "start": "2729119",
    "end": "2734240"
  },
  {
    "text": "if your service is explicitly dealing with HTTP stuff or you know what I mean like if the concepts are in your service",
    "start": "2734240",
    "end": "2741680"
  },
  {
    "text": "maybe you actually take the HTTP request in because you're doing something in the service then it's it's or then it is",
    "start": "2741680",
    "end": "2748119"
  },
  {
    "text": "kind of polluted already or it it is just naturally dealing with that that",
    "start": "2748119",
    "end": "2753800"
  },
  {
    "text": "domain and so maybe then it's okay but yeah if not because again imagine",
    "start": "2753800",
    "end": "2760160"
  },
  {
    "text": "imagine a non-http world where you you want to reuse that functionality and you probably will um even if you're doing",
    "start": "2760160",
    "end": "2767839"
  },
  {
    "text": "things internally like you know I was the the other principle that and I I realize underpins a lot of stuff is it",
    "start": "2767839",
    "end": "2775280"
  },
  {
    "text": "kind of prototyping and experimentation and anything that makes things easier to kind of compose and hack around with and",
    "start": "2775280",
    "end": "2782200"
  },
  {
    "text": "try things with that's always a win because you get so much innovation comes",
    "start": "2782200",
    "end": "2787319"
  },
  {
    "text": "from that play and that's how I innovate is by playing around so I enable that I",
    "start": "2787319",
    "end": "2792960"
  },
  {
    "text": "realize that's not how everybody does it but if you're trying something and it's hard to try it that toil I mean that's",
    "start": "2792960",
    "end": "2800480"
  },
  {
    "text": "just going to get in the way you know so I always think what's going to be easier later what's going to give me more",
    "start": "2800480",
    "end": "2806079"
  },
  {
    "text": "options later and then I'll choose that let's talk testing and testability let's",
    "start": "2806079",
    "end": "2812920"
  },
  {
    "text": "talk testing one of one of the sort of the decisions I remember making ear on and when working with um HTP services",
    "start": "2812920",
    "end": "2820359"
  },
  {
    "text": "and go was to to not bother testing sort of the routing or the what the Handler",
    "start": "2820359",
    "end": "2827960"
  },
  {
    "text": "does for for its work rather than rather I would test the behavior that those things are relying on and then expect",
    "start": "2827960",
    "end": "2836400"
  },
  {
    "text": "that if I can make the behavior pass right then the job of the Handler is to",
    "start": "2836400",
    "end": "2843599"
  },
  {
    "text": "facilitate me getting to that particular behavior and getting the results that I'm looking for but not really checking",
    "start": "2843599",
    "end": "2849599"
  },
  {
    "text": "or testing that routing works because to me I'm like that that's testing the wrong thing I don't I don't need to test",
    "start": "2849599",
    "end": "2856000"
  },
  {
    "text": "routers because I know they're tested if I'm using whether it's a library or some other thing like testing at the right",
    "start": "2856000",
    "end": "2861280"
  },
  {
    "text": "level I guess is is what I'm trying to get at like what what is your approach or has it changed um with this refresh",
    "start": "2861280",
    "end": "2868640"
  },
  {
    "start": "2868000",
    "end": "3076000"
  },
  {
    "text": "my Approach has changed over the over the years because I love tdd and",
    "start": "2868640",
    "end": "2873680"
  },
  {
    "text": "honestly I do tdd still so I literally will write tests first now sometimes",
    "start": "2873680",
    "end": "2878920"
  },
  {
    "text": "I'll prototype things without any tests but if I'm writing something serious I do it because it helps me do it I'm it's",
    "start": "2878920",
    "end": "2885359"
  },
  {
    "text": "like how I do it now it's not and I'm faster doing it like that so it's not it's not like a trade-off that I'm have",
    "start": "2885359",
    "end": "2891079"
  },
  {
    "text": "to consider it's just I'm better off if I do it so that let that being really",
    "start": "2891079",
    "end": "2897520"
  },
  {
    "text": "strict on that leads you to to over test frankly like in the beginning you just over test things and by over test I mean",
    "start": "2897520",
    "end": "2904640"
  },
  {
    "text": "either you're describing too much about how it's doing the thing like you said Johnny not just what's it doing like",
    "start": "2904640",
    "end": "2910480"
  },
  {
    "text": "what's the behavior but how is it actually doing it and being too much in that business then when you want to",
    "start": "2910480",
    "end": "2916680"
  },
  {
    "text": "change how it's doing something all your tests suddenly need to change and then the toil though is just like extra work",
    "start": "2916680",
    "end": "2924240"
  },
  {
    "text": "uh and I don't know that you get the benefit I don't know that the benefit's worth it sometimes you can also over",
    "start": "2924240",
    "end": "2930640"
  },
  {
    "text": "test yeah well you the end up with that way it's very brittle you can also over test where you really any changes you",
    "start": "2930640",
    "end": "2937319"
  },
  {
    "text": "make or if you're adding things the toil to then actually match the patterns that",
    "start": "2937319",
    "end": "2942640"
  },
  {
    "text": "that are established becomes so great that you're doing a lot of work for the sake of it really and you don't even",
    "start": "2942640",
    "end": "2948680"
  },
  {
    "text": "you're not getting the value for it or you repeat the same thing in lots of different places in slightly different",
    "start": "2948680",
    "end": "2954079"
  },
  {
    "text": "ways if you've got like an integration like an endtoend test that you say you're going to create a user that's",
    "start": "2954079",
    "end": "2959720"
  },
  {
    "text": "going to then create a blog post you know you might have test data that's posting to an API and then check in",
    "start": "2959720",
    "end": "2966440"
  },
  {
    "text": "theog post and then in the unit test at that layer you're doing the same thing you you have a user you're calling a",
    "start": "2966440",
    "end": "2971839"
  },
  {
    "text": "thing you probably stub a database and you know so I used to be very strict about testing layers properly like that",
    "start": "2971839",
    "end": "2979160"
  },
  {
    "text": "and then I settled on uh treating this came really from something Dave Cheney said which is that the unit in a way in",
    "start": "2979160",
    "end": "2986119"
  },
  {
    "text": "go is the package like think about what the unit is when you're unit testing and",
    "start": "2986119",
    "end": "2991240"
  },
  {
    "text": "I was thinking the unit sometimes in these well you could say that the whole service is is a unit like a service is a",
    "start": "2991240",
    "end": "2998480"
  },
  {
    "text": "unit it can look at it like that and so you essentially have end to endend tests that are they do test the routing they",
    "start": "2998480",
    "end": "3004280"
  },
  {
    "text": "actually test everything because you're literally running a real instance and with go this is achievable because the",
    "start": "3004280",
    "end": "3010240"
  },
  {
    "text": "compile time so quick so and this is how we do it on at least one of the teams in grafana and grafana Labs you have yeah",
    "start": "3010240",
    "end": "3018480"
  },
  {
    "text": "you we I just write end to end tests I'm hitting usually it's an API level I'm hitting an API I'm going to create I'm",
    "start": "3018480",
    "end": "3026440"
  },
  {
    "text": "just usually speaking in the same language that the user expect the user to speak whether that's the browser or someone",
    "start": "3026440",
    "end": "3033200"
  },
  {
    "text": "actually consuming the API and yeah this is about yeah trying to be similar to what they're already",
    "start": "3033200",
    "end": "3039400"
  },
  {
    "text": "going to do so literally you are you you you have to solve or in some way normally I'll deliver a client for the",
    "start": "3039400",
    "end": "3045680"
  },
  {
    "text": "API as well and I'll tend to use that in the tests so you're testing the client at the same time it really is end to",
    "start": "3045680",
    "end": "3051480"
  },
  {
    "text": "endend you spin up real database you know it's testing to make sure that the migrations in the database work work",
    "start": "3051480",
    "end": "3057200"
  },
  {
    "text": "everything has to work for these tests to pass and that's also the criticism of them because unit tests more traditional",
    "start": "3057200",
    "end": "3064000"
  },
  {
    "text": "unit tests give you laser pointer to one something's broken and that's really helpful you know if something breaks in",
    "start": "3064000",
    "end": "3070680"
  },
  {
    "text": "the O all of your integration tests are going to break but they all break saying something's up with off so it's still",
    "start": "3070680",
    "end": "3076480"
  },
  {
    "start": "3076000",
    "end": "3254000"
  },
  {
    "text": "quite clear but I I I don't I don't think I'm tra I don't think I trade off or rather that tradeoff is is so sort of",
    "start": "3076480",
    "end": "3084280"
  },
  {
    "text": "small to me that it doesn't really feel like trade-off right if I can test basically you know end to end like if Au",
    "start": "3084280",
    "end": "3091799"
  },
  {
    "text": "is broken whether it's this particular test or that particular test I'm going",
    "start": "3091799",
    "end": "3097040"
  },
  {
    "text": "to get the signal so yeah I may not have a unit test specifically for that",
    "start": "3097040",
    "end": "3102200"
  },
  {
    "text": "specific branch in the authentication process but if I if I have enough coverage in my test something is going",
    "start": "3102200",
    "end": "3109880"
  },
  {
    "text": "to is going to tell me that oh something is wrong and it's consistently showing up oh it's it's off it's off I mean it",
    "start": "3109880",
    "end": "3115200"
  },
  {
    "text": "doesn't take me long to figure out I I know where the problem is right so to me that tradeoff doesn't seem like",
    "start": "3115200",
    "end": "3120640"
  },
  {
    "text": "it's a it's that big of a deal yeah that's a fair point that's my experience too it's just the argument against these",
    "start": "3120640",
    "end": "3126680"
  },
  {
    "text": "sorts of tests or one of the arguments is is that you don't get so much laser focus but yeah and and and I also run",
    "start": "3126680",
    "end": "3133880"
  },
  {
    "text": "the whole test Suite all the time like every time I make changes I just have the tests just run again because if if",
    "start": "3133880",
    "end": "3139920"
  },
  {
    "text": "they if they run quickly you can really do that but you know if I have like if there's a bit of business logic that is",
    "start": "3139920",
    "end": "3145319"
  },
  {
    "text": "a bit hairy or a bit complicated then absolutely I would have a unit test for that but what I wouldn't unit test is",
    "start": "3145319",
    "end": "3152040"
  },
  {
    "text": "the Handler that is decoding some Json calling another function getting the",
    "start": "3152040",
    "end": "3157240"
  },
  {
    "text": "response encoding the response like that thing I like the endtoend test to just cover that if anything's wrong in that",
    "start": "3157240",
    "end": "3163559"
  },
  {
    "text": "it'll it'll fail and that's great sometimes also if you if you test it as a unit you passing in like you might",
    "start": "3163559",
    "end": "3171240"
  },
  {
    "text": "pass in you might have a different object that you're passing in or you might just use a string to build some Json or something",
    "start": "3171240",
    "end": "3177760"
  },
  {
    "text": "that's that's kind of less real in some ways it could be less real because that",
    "start": "3177760",
    "end": "3182799"
  },
  {
    "text": "request body isn't being like if it's created from a client or something that you control or that you you know you",
    "start": "3182799",
    "end": "3189319"
  },
  {
    "text": "it's official that's just a more realistic test so there's a few other examples I can't think of any but there",
    "start": "3189319",
    "end": "3195119"
  },
  {
    "text": "are a few examples where you get a false sense of security from the unit test because the unit tests pass but it",
    "start": "3195119",
    "end": "3200400"
  },
  {
    "text": "doesn't work in production because rootings off or something else that you just would never think of is off and so",
    "start": "3200400",
    "end": "3207920"
  },
  {
    "text": "you end up having those end to end tests anyway so why not only have them but",
    "start": "3207920",
    "end": "3214119"
  },
  {
    "text": "this does depend for sure yeah I I I see a good argument with for the IND in test",
    "start": "3214119",
    "end": "3219160"
  },
  {
    "text": "too like otherwise you're if you're depending on middleware you're depending on path variables like that kind of",
    "start": "3219160",
    "end": "3224599"
  },
  {
    "text": "thing yeah middleware is the other one that's a good point like you can just call the method directly if it's a",
    "start": "3224599",
    "end": "3230680"
  },
  {
    "text": "Handler which is really good sometimes honestly but you are skipping all the middleware bits which you know that",
    "start": "3230680",
    "end": "3237000"
  },
  {
    "text": "might be what you want but imagine if that middleware is doing something that's significant like you know it it",
    "start": "3237000",
    "end": "3243839"
  },
  {
    "text": "does a call out to find out the org ID and injects the org header that has to",
    "start": "3243839",
    "end": "3249000"
  },
  {
    "text": "work for your whole thing to work in production and you could easily have tests that just don't catch that yeah we",
    "start": "3249000",
    "end": "3255079"
  },
  {
    "start": "3254000",
    "end": "3458000"
  },
  {
    "text": "do authentication in our middleware as well so it's a good spot to catch",
    "start": "3255079",
    "end": "3261400"
  },
  {
    "text": "security issues much of these practices you've sort of enrolled into to a",
    "start": "3261400",
    "end": "3266680"
  },
  {
    "text": "separate um go package uh I remember when you made that public auto do you still use Auto is auto still part of",
    "start": "3266680",
    "end": "3273880"
  },
  {
    "text": "your workflow yeah it is actually so this is a dead simple idea and it's a",
    "start": "3273880",
    "end": "3279760"
  },
  {
    "text": "bit like grpc but GPC is extremely powerful there's loads of tools to learn there's",
    "start": "3279760",
    "end": "3287040"
  },
  {
    "text": "new languages to learn Proto Buffs uh companies like buff are helping with that and honestly I think they I think",
    "start": "3287040",
    "end": "3293520"
  },
  {
    "text": "it's really promising like the future of that but Oto was the idea was you you",
    "start": "3293520",
    "end": "3299440"
  },
  {
    "text": "describe your service just using a go interface so you're taking a request object a response object is what you",
    "start": "3299440",
    "end": "3305520"
  },
  {
    "text": "return and it's and it's just methods in an interface and that's how you describe your service so you know nice that it's",
    "start": "3305520",
    "end": "3312079"
  },
  {
    "text": "written and go and then there's a paa which understands that turns that into",
    "start": "3312079",
    "end": "3317799"
  },
  {
    "text": "new structs the the kind of meta that describe got service you've got have this many methods each method has uh",
    "start": "3317799",
    "end": "3325839"
  },
  {
    "text": "input an output object the object is described like this it has these fields these types so it's just like you have",
    "start": "3325839",
    "end": "3332960"
  },
  {
    "text": "the uses the as thing that package in its own right is useful it's the paa which is a separate package you can just",
    "start": "3332960",
    "end": "3339200"
  },
  {
    "text": "use that to read go interfaces it's actually dead useful for loads of different use cases and then it uses",
    "start": "3339200",
    "end": "3344960"
  },
  {
    "text": "code generation with some templates to basically turn those service definitions",
    "start": "3344960",
    "end": "3350359"
  },
  {
    "text": "into everything you need to actually have those Services all the gobbins all the plumbing everything is white up for",
    "start": "3350359",
    "end": "3356920"
  },
  {
    "text": "you and you end up with just having to implement the interface and that's your",
    "start": "3356920",
    "end": "3362039"
  },
  {
    "text": "service implementation so that was and it follows you know what the thing it",
    "start": "3362039",
    "end": "3367200"
  },
  {
    "text": "generates the HTTP side of it all follows all these practices yeah that",
    "start": "3367200",
    "end": "3372400"
  },
  {
    "text": "gets used people use that because if you don't need more than that if if your case is quite simple it's probably the",
    "start": "3372400",
    "end": "3378319"
  },
  {
    "text": "simplest way to just do that and any code gen is like a massive multiplier in",
    "start": "3378319",
    "end": "3384960"
  },
  {
    "text": "productivity you know you can we have template the the the repo already has templates for go client go server",
    "start": "3384960",
    "end": "3393039"
  },
  {
    "text": "typescript client python I think may have rust even so yeah you can just",
    "start": "3393039",
    "end": "3398440"
  },
  {
    "text": "generate the clients you need it's kind of like oh and there's also one for the open API spec so you can generate yeah",
    "start": "3398440",
    "end": "3406400"
  },
  {
    "text": "the open API spec from your go interfaces and then you can generate all",
    "start": "3406400",
    "end": "3411640"
  },
  {
    "text": "the things you can get from Swagger or you can generate your use more templates to gener generate docks that look nice",
    "start": "3411640",
    "end": "3418280"
  },
  {
    "text": "unlike Swagger docks which are bit of a red flag honestly if I see a website it's got that",
    "start": "3418280",
    "end": "3426760"
  },
  {
    "text": "Swagger just the default formatting on it nice nice Ian are you still here did",
    "start": "3426760",
    "end": "3432480"
  },
  {
    "text": "you go get another protein bar or something yeah it looks Jack oh yeah protein break protein",
    "start": "3432480",
    "end": "3437520"
  },
  {
    "text": "break got to get that [Laughter]",
    "start": "3437520",
    "end": "3442880"
  },
  {
    "text": "creatine oh man anything else you want to call out y before we transition to unpops not really I want to check out",
    "start": "3442880",
    "end": "3449039"
  },
  {
    "text": "this Auto I had not seen it before um I love the idea of just generating like the boiler plate code that you can get",
    "start": "3449039",
    "end": "3456079"
  },
  {
    "text": "wrong all right all right well let's do it to [Music]",
    "start": "3456079",
    "end": "3464880"
  },
  {
    "start": "3458000",
    "end": "3480000"
  },
  {
    "text": "it I actually think should probably",
    "start": "3464880",
    "end": "3469200"
  },
  {
    "text": "leave opinion [Music]",
    "start": "3470920",
    "end": "3478590"
  },
  {
    "start": "3480000",
    "end": "3599000"
  },
  {
    "text": "all right who's got an unpop I've got one please I think this might be might",
    "start": "3480039",
    "end": "3487039"
  },
  {
    "text": "be unpopular we say like don't bring patterns from other languages into to go",
    "start": "3487039",
    "end": "3492680"
  },
  {
    "text": "learn how to write go and I think that is great advice but my unpopular opinion is sometimes it's okay to bring patterns",
    "start": "3492680",
    "end": "3500079"
  },
  {
    "text": "from other languages if they're appropriate and you know why not the",
    "start": "3500079",
    "end": "3506720"
  },
  {
    "text": "reverse is also true and I've lived this because I used to do a lot of JavaScript typescript code the JavaScript and",
    "start": "3506720",
    "end": "3512880"
  },
  {
    "text": "typescript I write today now because of go is minimalist very simple doesn't use",
    "start": "3512880",
    "end": "3518960"
  },
  {
    "text": "a lot of the Lang fancy language features you know if it's if it's going to be a function it says function says",
    "start": "3518960",
    "end": "3524400"
  },
  {
    "text": "the word function call me oldfashioned but it reads like kind of like go code",
    "start": "3524400",
    "end": "3529680"
  },
  {
    "text": "it just turns out to be very easy to deal with for the same reasons that simple go code is easier than fancy",
    "start": "3529680",
    "end": "3537000"
  },
  {
    "text": "amazing oh you put a semic cool on here and then that means this is blue instead",
    "start": "3537000",
    "end": "3542039"
  },
  {
    "text": "but if it's got an eight near it you better you better hope the moon's in the right orbit because you're in you I mean",
    "start": "3542039",
    "end": "3548880"
  },
  {
    "text": "it's like all this magic mystical language features they are amazing they feel good to use them but yeah just",
    "start": "3548880",
    "end": "3556839"
  },
  {
    "text": "rather not have them perhaps yeah perhaps piggyback of my own popular opinion or to pick it back off of yours",
    "start": "3556839",
    "end": "3563559"
  },
  {
    "text": "I think we we as missing the progr in community we we will'll create those",
    "start": "3563559",
    "end": "3568880"
  },
  {
    "text": "fancy you know languages and and and fancy ways of doing things within those",
    "start": "3568880",
    "end": "3574480"
  },
  {
    "text": "languages and we'll even ba bash other languages for not having the fancy ways",
    "start": "3574480",
    "end": "3579640"
  },
  {
    "text": "that we now do things you know because of some other language or whatever we're doing all of this in a way optimizing",
    "start": "3579640",
    "end": "3586039"
  },
  {
    "text": "for the writing of code when most of the time we're just reading the code yeah",
    "start": "3586039",
    "end": "3591160"
  },
  {
    "text": "it's it's kind like counterintuitive right like we're talking so much about oh I can't can't do I can't be as",
    "start": "3591160",
    "end": "3597280"
  },
  {
    "text": "expressive as I want to be with this language and then you just write it once and then you have to maintain the darn",
    "start": "3597280",
    "end": "3603480"
  },
  {
    "text": "thing like forever and then yeah yeah that's so true we're silly that's",
    "start": "3603480",
    "end": "3609359"
  },
  {
    "text": "because we yeah that's because I think it's just more of a conscious act that we're writing so it has more importance",
    "start": "3609359",
    "end": "3615480"
  },
  {
    "text": "it's also where we put a lot of more focus and reading is a lot easier but you're right reading is what we do way",
    "start": "3615480",
    "end": "3622599"
  },
  {
    "text": "more than writing any any code like gen any code it's going to be I think I",
    "start": "3622599",
    "end": "3628559"
  },
  {
    "text": "think I'd go on record as just saying that any any code is going to be read more than it's going to be written so optimized for reading what's",
    "start": "3628559",
    "end": "3636520"
  },
  {
    "text": "easiest to read what's what's the simplest what's the most boring it just pays dividends you know say it like it",
    "start": "3636520",
    "end": "3643400"
  },
  {
    "text": "it's just a taste it's just like a personal taste thing this actually impacts productivity at some point I",
    "start": "3643400",
    "end": "3649480"
  },
  {
    "text": "mean it it's like we're proper serious like people should really think about this when they when they write code any",
    "start": "3649480",
    "end": "3656440"
  },
  {
    "text": "code I've ever written where I felt real smart while I was writing it when I read it I've never felt more stupid so yeah",
    "start": "3656440",
    "end": "3662799"
  },
  {
    "text": "it's it's the same side it's the opposite side of the same coin right yeah right Ian you got something for me",
    "start": "3662799",
    "end": "3669839"
  },
  {
    "text": "I really don't man like you okay unpopular opinion Ian doesn't bring",
    "start": "3669839",
    "end": "3676160"
  },
  {
    "text": "enough unpopular opinions to the show that's true like I have opinions they're",
    "start": "3676160",
    "end": "3681559"
  },
  {
    "text": "just going to be popular he like I'm just that kind of guy you",
    "start": "3681559",
    "end": "3687200"
  },
  {
    "text": "know I do think I hold the most unpopular opinion ever said on this show though oh but by the by the starts it",
    "start": "3687200",
    "end": "3694400"
  },
  {
    "text": "wasn't about me I think it was a long time ago no if it was about me I'm going I think I said something along the lines",
    "start": "3694400",
    "end": "3699480"
  },
  {
    "text": "of promises could still be like a promise type pattern could still be useful and go oh I maintain that I'm I'm",
    "start": "3699480",
    "end": "3705079"
  },
  {
    "text": "with you actually I've I'm actually with you on that one I don't hate it there's there certain times where I just want to",
    "start": "3705079",
    "end": "3710880"
  },
  {
    "text": "wait for something to be ready and then use it from then on and yeah I mean that will still be",
    "start": "3710880",
    "end": "3716799"
  },
  {
    "text": "unpopular I guarantee yeah the error handling gets funky in it a little bit",
    "start": "3716799",
    "end": "3722359"
  },
  {
    "text": "or can can't it but to be honest like if you if you build an API where you've got",
    "start": "3722359",
    "end": "3727720"
  },
  {
    "text": "work that's going to happen asynchronously and then yeah you're going to come back later that is a",
    "start": "3727720",
    "end": "3733640"
  },
  {
    "text": "promise API you probably when you make the request you get a response which and",
    "start": "3733640",
    "end": "3738680"
  },
  {
    "text": "then you can periodically check to see you know like so you have that anyway",
    "start": "3738680",
    "end": "3744520"
  },
  {
    "text": "like as a as a pattern so in that world if that was your design it would make sense potentially in some",
    "start": "3744520",
    "end": "3750319"
  },
  {
    "text": "way to model it like that inside I don't know it's not often I want to reach for",
    "start": "3750319",
    "end": "3755599"
  },
  {
    "text": "that but every once in a while well isn't isn't it because every once in a so all right so let me let me let me not",
    "start": "3755599",
    "end": "3763680"
  },
  {
    "text": "bash your unpopular opinion let me counter it with my own right I would",
    "start": "3763680",
    "end": "3769520"
  },
  {
    "text": "argue that the parts of the language right if you're not using right the",
    "start": "3769520",
    "end": "3774640"
  },
  {
    "text": "parts of a language enough or rather a pattern enough if it if it's not useful",
    "start": "3774640",
    "end": "3780760"
  },
  {
    "text": "right on a regular basis then that in itself tells you something that is a",
    "start": "3780760",
    "end": "3786359"
  },
  {
    "text": "signal right it just means that most of the time yagy I don't reach for sync. cond every day but every once in a while",
    "start": "3786359",
    "end": "3793799"
  },
  {
    "text": "I really want to use it right but is the cost is the cost of you bringing in that",
    "start": "3793799",
    "end": "3799640"
  },
  {
    "text": "seldom used you know right approach right is the cost of you I mean I use",
    "start": "3799640",
    "end": "3805520"
  },
  {
    "text": "con all the time so I might I don't share that particular uh opinion but if the cost of you bringing in some some",
    "start": "3805520",
    "end": "3811680"
  },
  {
    "text": "particular way of doing something right and and having to remember and every time now now you're reading that code",
    "start": "3811680",
    "end": "3817079"
  },
  {
    "text": "and having to remember um okay well what is this doing again uh you have to think about it because it's not something you",
    "start": "3817079",
    "end": "3823160"
  },
  {
    "text": "see often it's not common practice it's something different from everything else in the codebase right like there there's",
    "start": "3823160",
    "end": "3830240"
  },
  {
    "text": "a cost to that too right if you're talking about productivity cost right of course but if if the goo it's like",
    "start": "3830240",
    "end": "3836000"
  },
  {
    "text": "idiomatic enough like where you're you're waiting via a channel and a select and all of that like I think it's",
    "start": "3836000",
    "end": "3842079"
  },
  {
    "text": "pretty easy to recognize what's happening yeah you if you if you do you want to be able to say like V something",
    "start": "3842079",
    "end": "3849200"
  },
  {
    "text": "equals go some function call and then it'll but what's the point it might as well just do it synchronously no what I",
    "start": "3849200",
    "end": "3855559"
  },
  {
    "text": "want is what what I actually I don't know I've I've developed this as time G on and what I actually want is like a a",
    "start": "3855559",
    "end": "3861400"
  },
  {
    "text": "latch so something that is open to start and then it closes once and remains",
    "start": "3861400",
    "end": "3867160"
  },
  {
    "text": "closed forever yeah right I I don't know that you this could be a standard Library thing like that thing you know",
    "start": "3867160",
    "end": "3874079"
  },
  {
    "text": "the sink can't hard to say you you you say you use that every day Johnny did",
    "start": "3874079",
    "end": "3880319"
  },
  {
    "text": "day no is it every day I'm using Sy no no I I I I",
    "start": "3880319",
    "end": "3888640"
  },
  {
    "text": "thought you meant uh con the const oh sorry I thought the syn cond isn't there",
    "start": "3888640",
    "end": "3893839"
  },
  {
    "text": "not syn con s yeah yeah very rarely do I use that you can't hang on we we can't",
    "start": "3893839",
    "end": "3900160"
  },
  {
    "text": "broadcast this in the UK with that that's not broadcastable in the UK that's got the yeah that sentence you",
    "start": "3900160",
    "end": "3906760"
  },
  {
    "text": "just said Johnny has will mean we have to put the little explicit box on the podcast episode the little e really in",
    "start": "3906760",
    "end": "3914359"
  },
  {
    "text": "the UK I think yeah just because of what or or con yeah just be careful mate",
    "start": "3914359",
    "end": "3920079"
  },
  {
    "text": "is just all I say walking a line they walking a thing line a very",
    "start": "3920079",
    "end": "3926960"
  },
  {
    "text": "thin line okay all right well you know if for my for my UK listeners it is an",
    "start": "3926960",
    "end": "3932039"
  },
  {
    "text": "honest mistake it is it is a language thing I guess um you know American",
    "start": "3932039",
    "end": "3938680"
  },
  {
    "text": "English um and whatnot but uh yeah it's yeah yeah let's let's move on from that",
    "start": "3938680",
    "end": "3944200"
  },
  {
    "text": "shall we let's move on sink cond sink cond yeah by the way I'm yeah",
    "start": "3944200",
    "end": "3951000"
  },
  {
    "text": "I was convinced by Johnny immediately it I don't think it should be a language feature I was imagining a type that you",
    "start": "3951000",
    "end": "3956279"
  },
  {
    "text": "can have in you could return oh yeah I I don't think it belongs as a language feature yeah okay but as a type it's",
    "start": "3956279",
    "end": "3962440"
  },
  {
    "text": "nice there you go that's what there you go then that's what we mean I don't think that's going to be so unpopular Ian why don't you as a personal mission",
    "start": "3962440",
    "end": "3969520"
  },
  {
    "text": "why don't you get that added to the standard Library remember it's just open source anyone can contribute why don't",
    "start": "3969520",
    "end": "3975960"
  },
  {
    "text": "we have a Sy promise I mean I'll give it a go bet I bet I don't want it to be",
    "start": "3975960",
    "end": "3981279"
  },
  {
    "text": "called that either no what do you want to call it Ian I I like I like the label latch",
    "start": "3981279",
    "end": "3987359"
  },
  {
    "text": "latch yeah that sounds very go where it's something that oh we need something we need something sexier than that I",
    "start": "3987359",
    "end": "3992720"
  },
  {
    "text": "like your suggestion Johnny Ian you can't just name a lang name a feature after",
    "start": "3992720",
    "end": "3998079"
  },
  {
    "text": "yourself although quite good idea SN J",
    "start": "3998079",
    "end": "4003799"
  },
  {
    "text": "Johnny let's let's put an Ian right here sprinkle a mat there no but we could have a sync. obligation couldn't we or a",
    "start": "4003799",
    "end": "4011319"
  },
  {
    "text": "uh a SN guarantee oig obligation yeah sink commitment could do that sick",
    "start": "4011319",
    "end": "4017400"
  },
  {
    "text": "commitment and you can just say I'm afraid of uh synchronized commitments what about a",
    "start": "4017400",
    "end": "4024240"
  },
  {
    "text": "pledge SN pledge I pled I kind of like that I'm not going to lie pledge a pledge there",
    "start": "4024240",
    "end": "4031240"
  },
  {
    "text": "we go I just want a piece of memory that's not ready yet and will become ready yeah and you can check it you can",
    "start": "4031240",
    "end": "4036920"
  },
  {
    "text": "block on a channel until it's ready come on this typew writes itself it doesn't someone's going to have to write it",
    "start": "4036920",
    "end": "4044240"
  },
  {
    "text": "in I have an implementation of it do you is it in a repo I mean not a repo is it",
    "start": "4044240",
    "end": "4049720"
  },
  {
    "text": "in like a public I think I have it as a repo do you pledge to submit this har",
    "start": "4049720",
    "end": "4056160"
  },
  {
    "text": "har it's good you just periodically check Johnny with him and see if he's",
    "start": "4056160",
    "end": "4062119"
  },
  {
    "text": "finished oh wait block on the channel get Block yeah are you looking for that",
    "start": "4062119",
    "end": "4067559"
  },
  {
    "text": "repo Ian I'm I'm trying to find it we'll put it in the show notes for those who",
    "start": "4067559",
    "end": "4072880"
  },
  {
    "text": "want to see it I don't I don't I don't want to see Ian's um",
    "start": "4072880",
    "end": "4079200"
  },
  {
    "text": "[Music] pledge that's another thing you could do is just pledge that discard like it can",
    "start": "4079200",
    "end": "4085520"
  },
  {
    "text": "finish or not I don't care you just clean up all the apparatus for checking",
    "start": "4085520",
    "end": "4091720"
  },
  {
    "text": "I don't know is it really a pledge if you can discard it uh it's a good point",
    "start": "4091720",
    "end": "4097199"
  },
  {
    "text": "well you can fail a promise yeah it's a pledge yeah what a promise it's a promise you can still break a promise you can still break a promise yeah yeah",
    "start": "4097199",
    "end": "4104520"
  },
  {
    "text": "that's why it's good cuz can fail uhhuh that's why you have to catch if someone that's why the mo the the JavaScript",
    "start": "4104520",
    "end": "4111480"
  },
  {
    "text": "thing works so well if someone breaks a promise you have to catch it and then deal with it what it breaks down at that",
    "start": "4111480",
    "end": "4118560"
  },
  {
    "text": "point doesn't it it's like I'm going to give you a promise okay good and when this is done yeah then you can say then",
    "start": "4118560",
    "end": "4124520"
  },
  {
    "text": "something else right yeah well this was fun wasn't it didn't sounded fun the way",
    "start": "4124520",
    "end": "4130238"
  },
  {
    "text": "you asked that Johnny sound you been having fun",
    "start": "4130239",
    "end": "4136159"
  },
  {
    "text": "no I was I was trying I was trying my did you catch my sort of linguistic um I",
    "start": "4136159",
    "end": "4141520"
  },
  {
    "text": "catch it in it tidbit there yeah you caught the in it you caught the in it I'm trying to incorporate that into my",
    "start": "4141520",
    "end": "4147920"
  },
  {
    "text": "into my sort of everyday sort of vernacular yeah and and see if anybody notices yeah to be honest initially I",
    "start": "4147920",
    "end": "4154000"
  },
  {
    "text": "didn't notice because to me that's just talking it's the rest of the stuff you",
    "start": "4154000",
    "end": "4160199"
  },
  {
    "text": "say that sounds weird that's I was like ah that just felt normal no it's every other word",
    "start": "4160199",
    "end": "4166838"
  },
  {
    "text": "that I've got a problem with it's every other word all right all right fine fine fine",
    "start": "4166839",
    "end": "4173960"
  },
  {
    "text": "before you have more problems with my with my words oh no that's not a good look for me is",
    "start": "4173960",
    "end": "4180600"
  },
  {
    "text": "it he's ended the episode oh no I'm",
    "start": "4180600",
    "end": "4186880"
  },
  {
    "text": "ruined I'm done for that's in on a on Matt's bad",
    "start": "4186880",
    "end": "4192480"
  },
  {
    "text": "note that is go time for this week thanks for listening along subscribe now",
    "start": "4193320",
    "end": "4199159"
  },
  {
    "text": "if you haven't already head to go time. FM for all the ways or simply search for",
    "start": "4199159",
    "end": "4205000"
  },
  {
    "text": "go time wherever you get your podcasts you'll find us hey do you receive our",
    "start": "4205000",
    "end": "4210360"
  },
  {
    "text": "change log newsletter each Monday if not let's fix that bug one reader calls it",
    "start": "4210360",
    "end": "4215560"
  },
  {
    "text": "so good he considers it a competitive Advantage Sign up for $0 at Chang",
    "start": "4215560",
    "end": "4221800"
  },
  {
    "text": "log.com newws thanks once again to to our partners at fly.io to Our Mysterious",
    "start": "4221800",
    "end": "4228480"
  },
  {
    "text": "beat freak break master cylinder and to our friends at Sentry we love Sentry you might too use code change log when",
    "start": "4228480",
    "end": "4235440"
  },
  {
    "text": "you're signing up for a team plan and save 100 bucks why not right that is all",
    "start": "4235440",
    "end": "4240800"
  },
  {
    "text": "for now but we'll talk to you again next time on go time",
    "start": "4240800",
    "end": "4247400"
  },
  {
    "text": "[Music]",
    "start": "4250690",
    "end": "4253820"
  },
  {
    "text": "k",
    "start": "4259320",
    "end": "4262320"
  }
]