[
  {
    "text": "yeah have you seen",
    "start": "2720",
    "end": "3760"
  },
  {
    "text": "uh property-based testing as well this",
    "start": "3760",
    "end": "6480"
  },
  {
    "text": "is a",
    "start": "6480",
    "end": "7120"
  },
  {
    "text": "another kind of uh style yeah",
    "start": "7120",
    "end": "10400"
  },
  {
    "text": "it's um almost like fuzzing for your",
    "start": "10400",
    "end": "13280"
  },
  {
    "text": "functions",
    "start": "13280",
    "end": "14080"
  },
  {
    "text": "where you specify not what values to",
    "start": "14080",
    "end": "17119"
  },
  {
    "text": "test with",
    "start": "17119",
    "end": "17840"
  },
  {
    "text": "but what types of values your function",
    "start": "17840",
    "end": "20880"
  },
  {
    "text": "takes as input",
    "start": "20880",
    "end": "22480"
  },
  {
    "text": "and obviously also what",
    "start": "22480",
    "end": "25680"
  },
  {
    "text": "kind of output you expect and then",
    "start": "25680",
    "end": "28880"
  },
  {
    "text": "the property-based testing framework of",
    "start": "28880",
    "end": "31359"
  },
  {
    "text": "which one example is",
    "start": "31359",
    "end": "32640"
  },
  {
    "text": "copter will then just generate uh",
    "start": "32640",
    "end": "36320"
  },
  {
    "text": "you know whether it's random or in some",
    "start": "36320",
    "end": "38160"
  },
  {
    "text": "specific sequence will generate",
    "start": "38160",
    "end": "40160"
  },
  {
    "text": "plenty of values to then test your",
    "start": "40160",
    "end": "41760"
  },
  {
    "text": "function and try and find edge cases for",
    "start": "41760",
    "end": "43680"
  },
  {
    "text": "you",
    "start": "43680",
    "end": "44000"
  },
  {
    "text": "that do not conform to the specification",
    "start": "44000",
    "end": "46960"
  },
  {
    "text": "that's",
    "start": "46960",
    "end": "47360"
  },
  {
    "text": "really cool isn't it yeah the first",
    "start": "47360",
    "end": "49520"
  },
  {
    "text": "exposure i had to that was with",
    "start": "49520",
    "end": "50879"
  },
  {
    "text": "hypothesis",
    "start": "50879",
    "end": "51680"
  },
  {
    "text": "in python and it was pretty awesome i",
    "start": "51680",
    "end": "54399"
  },
  {
    "text": "mean",
    "start": "54399",
    "end": "55039"
  },
  {
    "text": "an obvious problem there is you now have",
    "start": "55039",
    "end": "57280"
  },
  {
    "text": "especially if your functions are a bit",
    "start": "57280",
    "end": "58719"
  },
  {
    "text": "more complex",
    "start": "58719",
    "end": "60320"
  },
  {
    "text": "that it can take a while for tests to",
    "start": "60320",
    "end": "62640"
  },
  {
    "text": "run",
    "start": "62640",
    "end": "64080"
  },
  {
    "text": "because you're now running the same",
    "start": "64080",
    "end": "65360"
  },
  {
    "text": "function 10 000 times rather than",
    "start": "65360",
    "end": "67760"
  },
  {
    "text": "once or five times but you know for",
    "start": "67760",
    "end": "70960"
  },
  {
    "text": "pure functions where you know where your",
    "start": "70960",
    "end": "73600"
  },
  {
    "text": "code doesn't have side effects",
    "start": "73600",
    "end": "75759"
  },
  {
    "text": "yeah it's very good at finding edge",
    "start": "75759",
    "end": "78400"
  },
  {
    "text": "cases and",
    "start": "78400",
    "end": "79840"
  },
  {
    "text": "and little behaviors that you didn't",
    "start": "79840",
    "end": "84159"
  },
  {
    "text": "anticipate",
    "start": "84840",
    "end": "87840"
  },
  {
    "text": "you",
    "start": "88720",
    "end": "90799"
  }
]