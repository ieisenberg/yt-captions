[
  {
    "text": "hey I'm uh Chris Anderson I'm a big change log listener and so are you I work on couch TB and this is the couch",
    "start": "120",
    "end": "6480"
  },
  {
    "text": "TB theme song bum",
    "start": "6480",
    "end": "12400"
  },
  {
    "text": "couchy couchy couy",
    "start": "12400",
    "end": "18050"
  },
  {
    "text": "[Music]",
    "start": "18050",
    "end": "28960"
  },
  {
    "text": "relax P me welcome to the change log episode",
    "start": "28960",
    "end": "36480"
  },
  {
    "text": "0.18 I'm Adam stovak and I am W Netherland this is the Chang log we cover what's fresh and new in the world",
    "start": "36480",
    "end": "42399"
  },
  {
    "text": "of Open Source if you found us on iTunes we're also on the web at the Chang log.com for a real time view of Open",
    "start": "42399",
    "end": "48719"
  },
  {
    "text": "Source check out tail. thee changelog.txt",
    "start": "48719",
    "end": "54640"
  },
  {
    "text": "repos some feature repos from our blog as well as all of the audio podcasts",
    "start": "54640",
    "end": "59920"
  },
  {
    "text": "from this year Diddy if you're on Twitter follow us at Chang Log Show not the Chang log and I am Adam stack and I",
    "start": "59920",
    "end": "67799"
  },
  {
    "text": "am penguin p n g w y NN whiskey Yankee November November cool episode this week",
    "start": "67799",
    "end": "74320"
  },
  {
    "text": "so much fun participating in the nosql Big Data Smackdown brought to you by",
    "start": "74320",
    "end": "79600"
  },
  {
    "text": "infochimps and Rackspace at South by Southwest let's give a hand to uh J Chris first for that awesome couch TB",
    "start": "79600",
    "end": "86200"
  },
  {
    "text": "theme song yeah that was pretty wild and you like the dance even better yeah there was a there was a dancing company",
    "start": "86200",
    "end": "92720"
  },
  {
    "text": "with that it's a sh that uh did we get it on video I don't think we did it's like half running man half uh wedding",
    "start": "92720",
    "end": "99479"
  },
  {
    "text": "chicken song yeah it was some odity I don't know had some tiger in there too somewhere bouncing all around such a fun",
    "start": "99479",
    "end": "105600"
  },
  {
    "text": "time at the the smackdown you know the lineup for the smackdown we uh got together and debated the merits of each",
    "start": "105600",
    "end": "111640"
  },
  {
    "text": "of these higher-end uh no sequel data stores Stu Hood from Cassandra Jan",
    "start": "111640",
    "end": "117880"
  },
  {
    "text": "Leonard from couch DB myself uh representing mongod DB as the best Fanboy that that I could be and Vern",
    "start": "117880",
    "end": "124680"
  },
  {
    "text": "wles from Amazon the CTO of Amazon which I found out later who he was after he",
    "start": "124680",
    "end": "129920"
  },
  {
    "text": "joined us from the peanut gallery about what five minutes in it was about five minutes in and he came in and uh started",
    "start": "129920",
    "end": "135920"
  },
  {
    "text": "putting the smackdown on you guys he did clearly the alpha geek in the room we did get video of the event",
    "start": "135920",
    "end": "142440"
  },
  {
    "text": "hopefully we can do something fun with that and post it later yeah uh well we would have done this with the with the",
    "start": "142440",
    "end": "148080"
  },
  {
    "text": "video in mind cuz that was actually the int wants to post a video of it but uh",
    "start": "148080",
    "end": "153200"
  },
  {
    "text": "man had some troubles getting that video exported in the right way and I hate video it's hard to do it when you're",
    "start": "153200",
    "end": "159040"
  },
  {
    "text": "onsite at a conference anyway we uh just got back from South by Southwest uh within the last 48 hours or so trying to",
    "start": "159040",
    "end": "165840"
  },
  {
    "text": "catch our breath from a fun conference what a fun conference down in Austin yeah it was an awesome conference been a lot of good people uh geez we met Tony",
    "start": "165840",
    "end": "172599"
  },
  {
    "text": "Shay passing by we met uh guy kosaki we met up with uh with technoi AKA Rick",
    "start": "172599",
    "end": "179840"
  },
  {
    "text": "Olen and uh met up with a lot of people it's a lot of fun couple of guys flagging us down say Hey listen to the",
    "start": "179840",
    "end": "185000"
  },
  {
    "text": "change log so that made us feel good we have at least dozen listeners out there so gave us some shirts we did kind of",
    "start": "185000",
    "end": "191799"
  },
  {
    "text": "bum that we won't get to JS comp this year it looks like so write your Congressman voice your outrage that we",
    "start": "191799",
    "end": "197400"
  },
  {
    "text": "won't cover the uh the coolest JavaScript conference this year yeah sudden turn of events leaves us an alert",
    "start": "197400",
    "end": "203560"
  },
  {
    "text": "not being able to make it there no uh no solution in sight yet but I'm I'm",
    "start": "203560",
    "end": "209159"
  },
  {
    "text": "hopeful we've got a busy docket this year chirp and and Texas JS and perhaps",
    "start": "209159",
    "end": "215360"
  },
  {
    "text": "rails comp we'll see a full docket already hoping to get out to oscan in",
    "start": "215360",
    "end": "220920"
  },
  {
    "text": "July at oscan and let them know that the change log needs to needs to represent",
    "start": "220920",
    "end": "226000"
  },
  {
    "text": "the conference that's right yeah sometimes the the crowd can help us I suppose right speaking of crowd you know",
    "start": "226000",
    "end": "231840"
  },
  {
    "text": "uh the crowd uh is fully involved in the smackdown as you'll hear in the interview as is a kind of a rogue bird",
    "start": "231840",
    "end": "238640"
  },
  {
    "text": "that was sitting right by the mic microphone the whole time I did hear that bird well it's a fun episode should",
    "start": "238640",
    "end": "243959"
  },
  {
    "text": "we get to it yeah one [Music]",
    "start": "243959",
    "end": "252209"
  },
  {
    "text": "time questions that you have immediately um hopefully they'll be uh relevant but",
    "start": "253239",
    "end": "258560"
  },
  {
    "text": "you know anything anything you're Cur about curious is about so right now we",
    "start": "258560",
    "end": "264040"
  },
  {
    "text": "have uh Cassandra mongodb and couch Tob represented everyone's claiming that",
    "start": "264040",
    "end": "269400"
  },
  {
    "text": "they no SQL um nobody really knows what the exact definition of no SQL is um it",
    "start": "269400",
    "end": "275039"
  },
  {
    "text": "means many different things it means data models it means replication uh it",
    "start": "275039",
    "end": "280400"
  },
  {
    "text": "means what else scaling um so first up let's talk a little bit about the data",
    "start": "280400",
    "end": "288039"
  },
  {
    "text": "model so Cassandra has a really interesting data model that allows massively wide rows and do I mean we're",
    "start": "288039",
    "end": "296400"
  },
  {
    "text": "all document stores right um so what do you guys think about huge",
    "start": "296400",
    "end": "303000"
  },
  {
    "text": "documents def fine huge huge like as large as a machine can fit they're",
    "start": "303000",
    "end": "308320"
  },
  {
    "text": "awesome y i I guess the definition of a document",
    "start": "308320",
    "end": "314080"
  },
  {
    "text": "differs than in in Cassandra and couch TB I don't know that much about CRA but couch TB can handle big documents but we",
    "start": "314080",
    "end": "319800"
  },
  {
    "text": "tend to think of them as small items small entities that you handle individually I believe Mongo's got a 4",
    "start": "319800",
    "end": "327360"
  },
  {
    "text": "gig per document Ru limit if I'm not 4 gig four Meg no 4 gig mongodb sorry",
    "start": "327360",
    "end": "334240"
  },
  {
    "text": "mongodb right right four backs okay and uh so everyone is everyone all these",
    "start": "334240",
    "end": "341360"
  },
  {
    "text": "other competitors use Json and kind of are untyped um I don't like that I don't",
    "start": "341360",
    "end": "347759"
  },
  {
    "text": "like that they're untyped I mean because you can do massively interesting things if you have type data I it might be",
    "start": "347759",
    "end": "353039"
  },
  {
    "text": "sorted so you can slice little pieces out of it um that's something that cassander provides so if you have a",
    "start": "353039",
    "end": "358680"
  },
  {
    "text": "document and um it allows it to grow large because you might you might want to get just a little piece of your document out [ __ ] actually uses the",
    "start": "358680",
    "end": "366360"
  },
  {
    "text": "bson spec so it is pseudotyped at the file system level so it's got um uh it's",
    "start": "366360",
    "end": "372199"
  },
  {
    "text": "not just strings in the database you have ins you have other database types and you can even store files and the in",
    "start": "372199",
    "end": "378280"
  },
  {
    "text": "the file system G FS yeah coach us this Json uh it does have a bunch of um data",
    "start": "378280",
    "end": "384520"
  },
  {
    "text": "types the nice thing about Json is it's a subset of all of all the programming language that we're using the lowest",
    "start": "384520",
    "end": "390080"
  },
  {
    "text": "common denominator that everybody can serialize objects into and exchange so I can have a Java object and serialize",
    "start": "390080",
    "end": "395319"
  },
  {
    "text": "into Json loaded up in Python and can work with it without having like thousands and thousands of lines of code",
    "start": "395319",
    "end": "400639"
  },
  {
    "text": "who does some object translation between some arcade format and something else so Jason's really really good for data",
    "start": "400639",
    "end": "406240"
  },
  {
    "text": "interchange but it's slow what oh so he says it's slow so Bobby poo from the",
    "start": "406240",
    "end": "413000"
  },
  {
    "text": "python Community wrote a wrote a Json compiler uh Json um module for python",
    "start": "413000",
    "end": "418080"
  },
  {
    "text": "which is actually faster than the the uh the protocol buffers Google claims are so fast so shut",
    "start": "418080",
    "end": "424720"
  },
  {
    "text": "up all right so I believe we disagree on typed that's fine with",
    "start": "427039",
    "end": "433360"
  },
  {
    "text": "me I want to add to the type uh the web is not really typed and people who are",
    "start": "433360",
    "end": "438479"
  },
  {
    "text": "using the web are usually not I hope most of them are not computer scientists like s to all the computer scientists",
    "start": "438479",
    "end": "443840"
  },
  {
    "text": "and me but you should it's great that you use the web but the web is something that enables everybody to share data or",
    "start": "443840",
    "end": "449599"
  },
  {
    "text": "to express themselves in some way and having them to teach about data types is really just like it's just an Arcane",
    "start": "449599",
    "end": "456840"
  },
  {
    "text": "artifact of of programming they shouldn't think about how do I store arrays and objects and stuff they should just stuff whatever they have into a",
    "start": "456840",
    "end": "463199"
  },
  {
    "text": "database and should not think about it so I would hope that the people that are developing web applications are computer",
    "start": "463199",
    "end": "469560"
  },
  {
    "text": "scientists but maybe not I don't know there should be so there was an argument yesterday I heard I guess that the the",
    "start": "469560",
    "end": "476360"
  },
  {
    "text": "iPhone app store has about over 100,000 applications on it and when geoc CS was shut was shut down it had over 100,000",
    "start": "476360",
    "end": "483120"
  },
  {
    "text": "websites on it so it's a different magnitude of scale if you have if you let everybody um participate in in the",
    "start": "483120",
    "end": "490319"
  },
  {
    "text": "open web so um you definitely do want to have everybody who has an interest in doing web stuff doing web stuff and not",
    "start": "490319",
    "end": "497039"
  },
  {
    "text": "restricted to the like getting it right Computer Sciences type because I'm really bored of all the stuff we come up",
    "start": "497039",
    "end": "502360"
  },
  {
    "text": "with and the amateurs really have no clue what everything is about do the real cool and interesting",
    "start": "502360",
    "end": "508240"
  },
  {
    "text": "applications that's a lot of crap awesome yeah let me explain why you know",
    "start": "508240",
    "end": "513640"
  },
  {
    "text": "so so how many programming languages do you know that are completely un time except for",
    "start": "513640",
    "end": "519959"
  },
  {
    "text": "Pearl yeah so everybody does developing applications actually has types and suddenly you go to the database and all",
    "start": "520760",
    "end": "527040"
  },
  {
    "text": "your types disappear yeah no it's not that's not true Jason defines types you",
    "start": "527040",
    "end": "532080"
  },
  {
    "text": "can do that but you don't have to worry about as as much as if you're like you don't have to go up front and Define okay this I I will need I will need an",
    "start": "532080",
    "end": "538920"
  },
  {
    "text": "array of integers to like to store whatever list I'm having you don't have to think about that that much it's",
    "start": "538920",
    "end": "544320"
  },
  {
    "text": "easier for a program to do it naturally and for a nonprogram even more yeah but you force everybody to rewrite all their",
    "start": "544320",
    "end": "549680"
  },
  {
    "text": "programs with these things in mind so no well that's a lot of work there seem to be quite a few programs out there you",
    "start": "549680",
    "end": "555880"
  },
  {
    "text": "know doc this exists yeah and all these other things so so what about this compatibility stuff why do you guys",
    "start": "555880",
    "end": "562120"
  },
  {
    "text": "Force you know everybody to rewrite all their applications I'm just playing devil's advocate here no absolutely well",
    "start": "562120",
    "end": "569360"
  },
  {
    "text": "also Hadoop Hadoop is completely unstructured U by deot right so you throw anything in it and then you",
    "start": "569360",
    "end": "574519"
  },
  {
    "text": "process it you can do something similar with couchdb so I don't know why I'm defending cou to be but want to point",
    "start": "574519",
    "end": "580360"
  },
  {
    "text": "that out type doesn't always win but agnostic well no so so there's a lot of",
    "start": "580360",
    "end": "587040"
  },
  {
    "text": "I think for for many these things going it's not actually about timee it also when you look at consistency models and",
    "start": "587040",
    "end": "592120"
  },
  {
    "text": "things like that where traditional database applications you know are used to a very different model so you either",
    "start": "592120",
    "end": "598720"
  },
  {
    "text": "have to re your applications fixing according to the new model whether it's type or whether it's a consistency model",
    "start": "598720",
    "end": "605720"
  },
  {
    "text": "or or you know other other things around it um suddenly you force everybody to",
    "start": "605720",
    "end": "611040"
  },
  {
    "text": "rethink now that may be a good thing yeah but it definitely hurts ad option",
    "start": "611040",
    "end": "616959"
  },
  {
    "text": "yeah so let's talk about consistency really quickly um let's talk about the different models Cassandra has kind of a",
    "start": "616959",
    "end": "622800"
  },
  {
    "text": "peer to-peer model that comes from uh wner wner brainchild um Dynamo uh where",
    "start": "622800",
    "end": "629279"
  },
  {
    "text": "any node can can accept a right and then if enough nodes have accepted the right then the right succeeds otherwise it",
    "start": "629279",
    "end": "634760"
  },
  {
    "text": "doesn't and at read time you you resolve all that I I don't know about I don't know how I feel about uh the couch to be",
    "start": "634760",
    "end": "640600"
  },
  {
    "text": "in [ __ ] models I mean [ __ ] [ __ ] hasn't actually figured that part out right I mean that's right there's a",
    "start": "640600",
    "end": "646120"
  },
  {
    "text": "two-c delay before you actually committ to the database is that what you're talking about uh no so I I believe",
    "start": "646120",
    "end": "651720"
  },
  {
    "text": "Mongo's still Master Slave type replication sure sure I must admit core",
    "start": "651720",
    "end": "657240"
  },
  {
    "text": "committers to these projects I'm just a Microsoft I mean Microsoft [ __ ] Fanboy used to be Microsoft Fanboy but uh the m",
    "start": "657240",
    "end": "664360"
  },
  {
    "text": "word um def find a little bit what you're talking about see if I can defend it just as a as an end",
    "start": "664360",
    "end": "670320"
  },
  {
    "text": "user uh so if you have a data center in Washington and you have another data center in California you can do a write",
    "start": "670320",
    "end": "677959"
  },
  {
    "text": "in one of those data centers and even if the other data center is down depending on your tunables you can still succeed",
    "start": "677959",
    "end": "683720"
  },
  {
    "text": "that right because no no one of those nodes is actually responsible at a given a time like it's it's not there's no one",
    "start": "683720",
    "end": "690600"
  },
  {
    "text": "dedicated to a particular key right and in this case Advantage Cassandra but you know I would argue in most applications",
    "start": "690600",
    "end": "697000"
  },
  {
    "text": "that's not me it's not it's not actually actually",
    "start": "697000",
    "end": "704040"
  },
  {
    "text": "the whole consistency model the eventual cons model doesn't come from the fact that this is something that you want at",
    "start": "704040",
    "end": "709920"
  },
  {
    "text": "the application Level it is basically abstractions from the implementation leaking up yeah the fact that there's",
    "start": "709920",
    "end": "716760"
  },
  {
    "text": "two reasons for application either you do it for for uh gaining full tolerance or you do it for uh getting higher level",
    "start": "716760",
    "end": "724680"
  },
  {
    "text": "of concurrency so you can get better re or right report or whatever yeah for those two reasons you have to replicate",
    "start": "724680",
    "end": "731279"
  },
  {
    "text": "if you have to replicate you have to make a decision do I right to all replicas and guaranteed to all",
    "start": "731279",
    "end": "736639"
  },
  {
    "text": "guaranteed to right to all Webb repc account such that my reads are always consistent that might not be a well",
    "start": "736639",
    "end": "742320"
  },
  {
    "text": "performed issue because you know at rights you know it's you you you get a huge cost and especially if you cannot",
    "start": "742320",
    "end": "748040"
  },
  {
    "text": "cat a quum you know you may have to fail your rights and there's a number of applications where that may not be truthful where that may not be useful",
    "start": "748040",
    "end": "754959"
  },
  {
    "text": "for it so these are things that are actually leaking off from the implementation through the through the",
    "start": "754959",
    "end": "762079"
  },
  {
    "text": "uh through the apis if everybody could get a choice everybody would want strong consistency yeah it is just that with",
    "start": "762079",
    "end": "768240"
  },
  {
    "text": "strong consistency means that you have to take a lot of other trade-offs the main one being not being able to get M",
    "start": "768240",
    "end": "774160"
  },
  {
    "text": "for food and the other one is being that there's a number of failure scenarios in which you will be dead and order so are",
    "start": "774160",
    "end": "779720"
  },
  {
    "text": "you saying that Dynamo wasn't user friendly no absolutely not no no",
    "start": "779720",
    "end": "784760"
  },
  {
    "text": "actually so um uh so there's a there's a there's a range of things I think so dynamos is",
    "start": "784760",
    "end": "791480"
  },
  {
    "text": "sort of the one of the systems that predates a number of these um and where we made consistency model was explicit",
    "start": "791480",
    "end": "799040"
  },
  {
    "text": "it's not that we were the first ones to offer an eventually consistent system I think I think most relational databases",
    "start": "799040",
    "end": "806000"
  },
  {
    "text": "give you eventual consistency you just don't know it mainly because if you use application in a traditional relational",
    "start": "806000",
    "end": "811399"
  },
  {
    "text": "database like one of the commercial ones there's a delay when the logs are being shipped and if you read from the from uh",
    "start": "811399",
    "end": "817440"
  },
  {
    "text": "from the slave you do not get the consistency yeah there there's always a window but but okay so why why wasn't",
    "start": "817440",
    "end": "823519"
  },
  {
    "text": "Dynamo consist user friendly not only for the consistency level but also for example because we didn't we you had to",
    "start": "823519",
    "end": "830320"
  },
  {
    "text": "have the key if you came to the database there's no way to do a list to figure out what are my keys you know so you",
    "start": "830320",
    "end": "837000"
  },
  {
    "text": "have to have a key you have to the key normally comes from somewhere else for example through a customer database when we developed so when we developed the",
    "start": "837000",
    "end": "844320"
  },
  {
    "text": "first when we developed Dynamo it was to support shopping carts that was one of the use cases so that meant you went to",
    "start": "844320",
    "end": "850000"
  },
  {
    "text": "the database you went to the storage system and you already had a key yeah um",
    "start": "850000",
    "end": "855440"
  },
  {
    "text": "and and that's why for example S3 is a user friendly storage key value storage",
    "start": "855440",
    "end": "860600"
  },
  {
    "text": "system but Dino actually isn't that much with S three you can do a list you can",
    "start": "860600",
    "end": "865759"
  },
  {
    "text": "get a do a prefix list on what are my keys and then find things out that stuff for example that's not in the in",
    "start": "865759",
    "end": "872839"
  },
  {
    "text": "um what's the name of that one isn't S3 buil on Dynamo what isn't",
    "start": "872839",
    "end": "880920"
  },
  {
    "text": "S3 buil on Dynamo",
    "start": "880920",
    "end": "886360"
  },
  {
    "text": "no uh",
    "start": "891240",
    "end": "894399"
  },
  {
    "text": "oh waiting for",
    "start": "896880",
    "end": "900680"
  },
  {
    "text": "you w expect to get started with s were you you get stuck over here and you're raing so the answer is no because if you",
    "start": "907160",
    "end": "913880"
  },
  {
    "text": "will be an engineer you develop you would know that if you have to do a list operator on top of this that's a",
    "start": "913880",
    "end": "920639"
  },
  {
    "text": "completely different internal architecture so is Dynamo used and Dynamo principles used throughout all of",
    "start": "920639",
    "end": "925920"
  },
  {
    "text": "these systems in Amazon where you have to get enormous scale yeah where the system in itself as we",
    "start": "925920",
    "end": "931680"
  },
  {
    "text": "described it was mainly built for the shopping cart first but all of these things consist of modules that are being Reus through the whole company it's more",
    "start": "931680",
    "end": "938279"
  },
  {
    "text": "the principles that matter than the the actual implementation so I would say",
    "start": "938279",
    "end": "943480"
  },
  {
    "text": "that Cassandra is actually a little bit more user friendly in that case because we yeah okay we're not using uh we're",
    "start": "943480",
    "end": "949199"
  },
  {
    "text": "not using um hashing in order to determine where a key lives uh so you can actually do those list operations",
    "start": "949199",
    "end": "955600"
  },
  {
    "text": "you can you can basically treat it like you would big table from Google and uh get a list of all of your keys um I",
    "start": "955600",
    "end": "962319"
  },
  {
    "text": "imagine you can do that with the competitors but Cassandra's implementation is better so I like that you guys all focus",
    "start": "962319",
    "end": "969399"
  },
  {
    "text": "on the big data problem on the massive scale on all the website that have these problems which are like",
    "start": "969399",
    "end": "974600"
  },
  {
    "text": "seven um catb is more like the personal database something that you can you can",
    "start": "974600",
    "end": "980519"
  },
  {
    "text": "use for whatever you want to do it doesn't force you to to think in these these big um to have these big thoughts",
    "start": "980519",
    "end": "988839"
  },
  {
    "text": "but if you start out small catch allows you to grow gradually with whatever whatever usage pattern you have so we I",
    "start": "988839",
    "end": "995880"
  },
  {
    "text": "I think we're these guys are building Ferraris and drag Stars so we are building a h 100 Accord of databases",
    "start": "995880",
    "end": "1000920"
  },
  {
    "text": "that everybody can use but can get along with for a long long time absolutely absolutely and and you know there's a",
    "start": "1000920",
    "end": "1006279"
  },
  {
    "text": "reason that couch rhymes with ouch um you know anybody that Ed [ __ ] coming",
    "start": "1006279",
    "end": "1011399"
  },
  {
    "text": "from couch DB uh it's just night and day as far as the ease of use and getting set up getting the server involved uh",
    "start": "1011399",
    "end": "1017680"
  },
  {
    "text": "installed uh funing rappers for your language of choice and suddenly you know I don't have to know what I'm going to",
    "start": "1017680",
    "end": "1024038"
  },
  {
    "text": "ask for up front it reminds me of the sign called episode when Kramer's doing the movie phone and he says why don't",
    "start": "1024039",
    "end": "1029880"
  },
  {
    "text": "you just tell me the movie you want to watch right it's the same thing with with your views up front you have to materialize these up front but with",
    "start": "1029880",
    "end": "1035640"
  },
  {
    "text": "[ __ ] you know I can just so you're saying the you have indexes magically appear with no performance well indexes",
    "start": "1035640",
    "end": "1040839"
  },
  {
    "text": "are one thing right but views are something totally different right so when when I said an index yeah it takes effect for that index to kick in right",
    "start": "1040839",
    "end": "1046798"
  },
  {
    "text": "it takes time for right nobody can right but I can get around it if I have a a low uh you know uh Edge case where I",
    "start": "1046799",
    "end": "1053240"
  },
  {
    "text": "need to do a query with with couch I have to know what that view is you can have that H yeah but realistically",
    "start": "1053240",
    "end": "1059640"
  },
  {
    "text": "anything beyond you know dynamic and and couch just in my own experience just haven't been you know like all in one oh",
    "start": "1059640",
    "end": "1066200"
  },
  {
    "text": "you should try new vers okay maybe I need to",
    "start": "1066200",
    "end": "1070400"
  },
  {
    "text": "upgrade so so let me tell you why all of these guys suck yeah yes because you",
    "start": "1071480",
    "end": "1077679"
  },
  {
    "text": "should not run your own database yeah that time is passed these guys force you",
    "start": "1077679",
    "end": "1083240"
  },
  {
    "text": "to run your own database to manage replication to go dive deep into that",
    "start": "1083240",
    "end": "1088440"
  },
  {
    "text": "you shoot all this Stu to be a service how can you you know how do the cloud is",
    "start": "1088440",
    "end": "1094600"
  },
  {
    "text": "awesome but what do you do if your DSL provider craps out what do you do when your the 3G is now what if you're on AT&T and you have no more coverage how",
    "start": "1094600",
    "end": "1101320"
  },
  {
    "text": "do you reach the cloud you're dead in the water with a really great Cloud that you have that nobody can reach you go to",
    "start": "1101320",
    "end": "1107559"
  },
  {
    "text": "a bar and you have a few beers you come back and you exactly and your customers and your customers will leave you left",
    "start": "1107559",
    "end": "1113679"
  },
  {
    "text": "and right if you're offline well you know given that we've been doing this for a while I think our customers um I'm",
    "start": "1113679",
    "end": "1118919"
  },
  {
    "text": "kind of have an idea what customers do in this this particular Cas exactly but but again you're one of you're one of the seven sides who no no no no no but",
    "start": "1118919",
    "end": "1125600"
  },
  {
    "text": "what was more like if you aggregate all these customers that we have for the fs3 simple DB you know EBS and all the other",
    "start": "1125600",
    "end": "1131640"
  },
  {
    "text": "services you should no longer I mean these gu you are wasting your time you know and I love it you know this stuff I",
    "start": "1131640",
    "end": "1138080"
  },
  {
    "text": "really love this data stuff and these databases I would build 10 more dynes",
    "start": "1138080",
    "end": "1143960"
  },
  {
    "text": "because it is really really cool but you not solving your customers problems because you you're forcing them to do a",
    "start": "1143960",
    "end": "1149720"
  },
  {
    "text": "lot of operational skills I agree with you wholeheartedly awesome hey you shouldn't you should people who use",
    "start": "1149720",
    "end": "1156840"
  },
  {
    "text": "people who use databases shouldn't use we want to use stuff they shouldn't think about the database is something they would use part of the thing we're",
    "start": "1156840",
    "end": "1163440"
  },
  {
    "text": "doing is abstracting the database away to build very very cool applications and getting couch into all the appointments",
    "start": "1163440",
    "end": "1169559"
  },
  {
    "text": "you could think of that when you want to build something it's already there and can just use it you don't have to think",
    "start": "1169559",
    "end": "1174600"
  },
  {
    "text": "about it like my mom should be able to run a cash server without knowing that she runs a cash server that's the thing we're trying to do we should not run a",
    "start": "1174600",
    "end": "1181200"
  },
  {
    "text": "database that's nothing you would ever want to do remember guys if you guys have any questions just throw up a hand I mean I'm sure you have comments shut",
    "start": "1181200",
    "end": "1187919"
  },
  {
    "text": "real quick but there also so the comments on the seven biggest sites like don't you guys want to be the next",
    "start": "1187919",
    "end": "1194640"
  },
  {
    "text": "biggest site or you want to be the number one site so why would you build actually I would like to really argue",
    "start": "1194640",
    "end": "1200919"
  },
  {
    "text": "against the seven biggest SS if I look at the amount of dat and I mean everybody here because we all think",
    "start": "1200919",
    "end": "1206280"
  },
  {
    "text": "about big big data right that's why we're here and and how many of you work not for the biggest seven sites I think",
    "start": "1206280",
    "end": "1213559"
  },
  {
    "text": "most of you don't you yeah yeah so there's tons of data out there everybody",
    "start": "1213559",
    "end": "1218919"
  },
  {
    "text": "has his big data with the the time where small data sets were normal I mean PAB everybody has PAB data sets and that's",
    "start": "1218919",
    "end": "1225320"
  },
  {
    "text": "only the start of it it's also a control thing if if Amazon if Google if Apple if all these people own all your data",
    "start": "1225320",
    "end": "1231640"
  },
  {
    "text": "Facebook for example they own all your data they own all the URLs the web wasn't meant to be a couple big silos",
    "start": "1231640",
    "end": "1237799"
  },
  {
    "text": "people should be on control in control of their own data they should be able to use their own data as they fit they should be able to put it under the URLs",
    "start": "1237799",
    "end": "1244159"
  },
  {
    "text": "they control instead of being under the the the the whatever these guys are doing to screw them over it's a it's a",
    "start": "1244159",
    "end": "1251240"
  },
  {
    "text": "big privacy issue it's another oh it definitely is there's a bunch of privacy",
    "start": "1251240",
    "end": "1256559"
  },
  {
    "text": "laws in Germany that I cannot use S3 to store us yes you can oh you can't yes",
    "start": "1256559",
    "end": "1262320"
  },
  {
    "text": "you can okay stop stop let me the September one law in Germany the new",
    "start": "1262320",
    "end": "1267880"
  },
  {
    "text": "Privacy Law has yes has has the definition of a data processor where or",
    "start": "1267880",
    "end": "1273120"
  },
  {
    "text": "not yes or no you can use that and so with S3 you can use it as a data processor um um I'm thinking about a",
    "start": "1273120",
    "end": "1280640"
  },
  {
    "text": "very specific policy where in Germany if I'm asking somebody to delete all my data he needs to be able on my to prove",
    "start": "1280640",
    "end": "1287400"
  },
  {
    "text": "that everything is deleted if it's somewhere in the cloud stored somewhere in SV on some data center that the US uh",
    "start": "1287400",
    "end": "1293520"
  },
  {
    "text": "government has access to at any time no that's not true as you know and at least Amazon also don't know whether it's for",
    "start": "1293520",
    "end": "1298880"
  },
  {
    "text": "the other go we comply with safe Harware rules which means that if you follow the data protection uh Direction the",
    "start": "1298880",
    "end": "1305320"
  },
  {
    "text": "directorate of the EU yeah we follow safe har rules there's an explicit number of lists of things that you have",
    "start": "1305320",
    "end": "1311279"
  },
  {
    "text": "to do when uh when the government comes to you and asks for access to this data which is to notify you to give you the",
    "start": "1311279",
    "end": "1317640"
  },
  {
    "text": "ability to retrieve your data or to remove your data before other ones get access there's very explicit rules",
    "start": "1317640",
    "end": "1323200"
  },
  {
    "text": "around this Warner the rest of us the rest of us agree against you in the sense that we're open source so anyone",
    "start": "1323200",
    "end": "1328760"
  },
  {
    "text": "can anyone can host our application right so but they still have to host it yeah we'd love to use you for your",
    "start": "1328760",
    "end": "1334400"
  },
  {
    "text": "virtual private server but no no I'm more than happy that you guys wi Cassandra and [ __ ] and others on Amazon",
    "start": "1334400",
    "end": "1340480"
  },
  {
    "text": "e too which you can do with VBS and tons of people do these kind of things yet you're wasting your time because that's",
    "start": "1340480",
    "end": "1345640"
  },
  {
    "text": "not what you should be doing you should be building better value for customers and it is by not focusing on your",
    "start": "1345640",
    "end": "1351480"
  },
  {
    "text": "database that's that's what we're doing with the local databas is we're giving like take Sal Salesforce as an example",
    "start": "1351480",
    "end": "1357880"
  },
  {
    "text": "everybody who's using Salesforce making a lot of money if Salesforce goes down an entire industry is unable to use",
    "start": "1357880",
    "end": "1362960"
  },
  {
    "text": "stuff if you have an offline version of Salesforce that would for example use how often did Salesforce go down oh it",
    "start": "1362960",
    "end": "1368799"
  },
  {
    "text": "does happen and sales sorry sorry sorry Salesforce doesn't even have to go down for that you you need to have a",
    "start": "1368799",
    "end": "1374480"
  },
  {
    "text": "connection to Salesforce and again if if your your cable Pro Prov CPS out who's who's the happy Comcast customer",
    "start": "1374480",
    "end": "1382679"
  },
  {
    "text": "exactly so so are you are you arguing that Amazon should allow you to download the entire Amazon database and then shop",
    "start": "1382679",
    "end": "1389919"
  },
  {
    "text": "locally uh it should allow users and buy things locally yes",
    "start": "1389919",
    "end": "1396000"
  },
  {
    "text": "yes can I hack it on the plane I guess that's a question when you fight back from South Southwest can I hack the",
    "start": "1396000",
    "end": "1401080"
  },
  {
    "text": "application exactly but another question so you know you know we go back to the seven biggest Sid things for a moment",
    "start": "1401080",
    "end": "1407080"
  },
  {
    "text": "you know I hear no often and you the popular blog post couple weeks ago talking about how MySQL",
    "start": "1407080",
    "end": "1413880"
  },
  {
    "text": "can scale and the nosql lie and all of this stuff but you know we're kind of like in what we were with webo a few years ago where we have this term out",
    "start": "1413880",
    "end": "1419960"
  },
  {
    "text": "here that we haven't really defined how many people think no SQL means big and scaling right how many people how many",
    "start": "1419960",
    "end": "1427360"
  },
  {
    "text": "people think non-relational scheal all right a few more hands and I think that's a distinction that we've",
    "start": "1427360",
    "end": "1433600"
  },
  {
    "text": "got to put some sort of definition to this term no SQL so that we can when we have SmackDown sounds like this we can",
    "start": "1433600",
    "end": "1438720"
  },
  {
    "text": "agree what we're arguing about all right I think no SC is about choice of data storage which ver says we're wasting our",
    "start": "1438720",
    "end": "1445000"
  },
  {
    "text": "time on but but if if I'm if I'm building an application that needs very fast logging I'm looking at mamash at",
    "start": "1445000",
    "end": "1450760"
  },
  {
    "text": "Rus and mongodb if I need something that has offline peer-to-peer replication I'm looking at coach TV if I'm using looking",
    "start": "1450760",
    "end": "1456400"
  },
  {
    "text": "at something that needs to be hosted and I shouldn't shouldn't think about it I look at S3 and the other stuff Amazon other people are doing if I have",
    "start": "1456400",
    "end": "1462960"
  },
  {
    "text": "hundreds and thousands of service that I need to keep busy I look at had or Cassandra I would like to point out that this is a big data",
    "start": "1462960",
    "end": "1469240"
  },
  {
    "text": "Meetup uh and simple DB I think has a 10 GB limit uh per domain per domain well",
    "start": "1469240",
    "end": "1475559"
  },
  {
    "text": "okay so basically what you have to do is you have to do your own um partitioning I'm not saying not saying",
    "start": "1475559",
    "end": "1482799"
  },
  {
    "text": "do your own partitioning okay so so let me um so when I think about no she call",
    "start": "1482799",
    "end": "1488520"
  },
  {
    "text": "and given that we have some history in this or what I think before came before SQL was that um long for a very long",
    "start": "1488520",
    "end": "1495760"
  },
  {
    "text": "time the database or any dat data storage and whether it was a database or whether it was your storage the default",
    "start": "1495760",
    "end": "1501840"
  },
  {
    "text": "op the default application to use there the default service use that was a relational database of course there was",
    "start": "1501840",
    "end": "1508120"
  },
  {
    "text": "nothing else maybe you can have some bdb but I mean those are basically the only two choices now what drove us to start",
    "start": "1508120",
    "end": "1514919"
  },
  {
    "text": "building different types of databases is because if you if you look closer at how",
    "start": "1514919",
    "end": "1520120"
  },
  {
    "text": "your processing is and you can decompose processing into different steps you see",
    "start": "1520120",
    "end": "1525279"
  },
  {
    "text": "that for most of those different steps you have different data storage requirements and that for each of those",
    "start": "1525279",
    "end": "1532120"
  },
  {
    "text": "different requirements you can find a very dedicated solution that is capable of being very fast very reliable while",
    "start": "1532120",
    "end": "1539760"
  },
  {
    "text": "doing the generic thing throwing all requirements into one big bucket you end up with something actually technology",
    "start": "1539760",
    "end": "1546360"
  },
  {
    "text": "that has been developed in the 80s where we expect to have 21st century scaling",
    "start": "1546360",
    "end": "1551919"
  },
  {
    "text": "and and performance out of that's impossible yeah and so that was the thing that drives it and if I look at the things that Amazon off offers it's",
    "start": "1551919",
    "end": "1558440"
  },
  {
    "text": "not necessarily that I think that simple Tob is the one and only table solution no it is it's a bucket of tools that you",
    "start": "1558440",
    "end": "1565640"
  },
  {
    "text": "get these days you have S3 you have simple DB you have maybe you want to run your own you want some R caching but the",
    "start": "1565640",
    "end": "1571440"
  },
  {
    "text": "most important is that we now have a whole range of solutions where people can pick from so you said impossible I",
    "start": "1571440",
    "end": "1577720"
  },
  {
    "text": "wouldn't say impossible I said I would say just not discovered yet I mean you can't you for relational well there are",
    "start": "1577720",
    "end": "1584000"
  },
  {
    "text": "ways to implement things that are somewhat relational on top of these but not without breaking the model yeah so",
    "start": "1584000",
    "end": "1590080"
  },
  {
    "text": "for example if you want to do uh Implement everything like inner transactions like uh uh multi- level",
    "start": "1590080",
    "end": "1596320"
  },
  {
    "text": "views and all of these kind of things without breaking without breaking existing application you cannot so this",
    "start": "1596320",
    "end": "1602360"
  },
  {
    "text": "know if we could have built an absolutely infinite scalable relational database and kept all of the running",
    "start": "1602360",
    "end": "1609320"
  },
  {
    "text": "programs intact we would have done it right absolutely and we cap theorem I sure everyone has heard of it cap",
    "start": "1609320",
    "end": "1614799"
  },
  {
    "text": "theorem we all agree I don't think any of us have transactions so I mean we'll just we'll skip right over that right um",
    "start": "1614799",
    "end": "1621039"
  },
  {
    "text": "well except ah so now simple DB has transactions no uh Atomic GS in puts",
    "start": "1621039",
    "end": "1627559"
  },
  {
    "text": "isn't it no no no no you have you have conditional uh putal okay which which are actually in the line with eventual",
    "start": "1627559",
    "end": "1635000"
  },
  {
    "text": "consistency yeah here you actually if you cannot figure out the consistency model you ask this the system to do this",
    "start": "1635000",
    "end": "1641600"
  },
  {
    "text": "for you yeah and remember under the covers simple DB is still an eventual consistent system is just that there's a",
    "start": "1641600",
    "end": "1648399"
  },
  {
    "text": "number of operations on top of that we have a different failure model that that you can use both let's talk data size",
    "start": "1648399",
    "end": "1655240"
  },
  {
    "text": "real briefly um I'd just like to point out that we have users of Cassandra that are storing multiple terabytes of data",
    "start": "1655240",
    "end": "1661200"
  },
  {
    "text": "per node so how many how do you guys respond to that how many users are doing that we",
    "start": "1661200",
    "end": "1666840"
  },
  {
    "text": "have uh at least three or four Twitter and dig and um Reddit are probably all using multiple well no gigabytes",
    "start": "1666840",
    "end": "1675480"
  },
  {
    "text": "Facebook we've got a couple of these IO and the BBC one of the biggest ones that that do multi- terab sizes maybe not on",
    "start": "1675480",
    "end": "1681640"
  },
  {
    "text": "a single box K definitely supports that but like the these guys haven't run into the they are one of the seven biggest so",
    "start": "1681640",
    "end": "1687919"
  },
  {
    "text": "they they're not there yet so how many of those sides started on a system at that",
    "start": "1687919",
    "end": "1693360"
  },
  {
    "text": "scale and would we have them today if they had if they had if they had seen the future they probably would have",
    "start": "1693360",
    "end": "1698720"
  },
  {
    "text": "started on Cassandra ohic I don't know you know this this we",
    "start": "1698720",
    "end": "1703960"
  },
  {
    "text": "like to believe that that's only the big sites that have big data but about anybody that builds a Facebook game",
    "start": "1703960",
    "end": "1710320"
  },
  {
    "text": "these days yeah that means that you can go go from Z to 25 million users in a month yeah start start and so imagine",
    "start": "1710320",
    "end": "1719080"
  },
  {
    "text": "all the logging you need to do all the objects you need to keep around all these things you need to do running into piser Data is something that you do very",
    "start": "1719080",
    "end": "1725840"
  },
  {
    "text": "very very quickly these These Days yeah um you run a marketing campaign on the web a marketing campaign is no longer",
    "start": "1725840",
    "end": "1731799"
  },
  {
    "text": "just a website it's a website it's video it's user contributed content schal gaming it is integration into social",
    "start": "1731799",
    "end": "1738840"
  },
  {
    "text": "networks all of these things that's a Moder marketing campaign all the data that those things generate you're",
    "start": "1738840",
    "end": "1744720"
  },
  {
    "text": "talking about terabytes of data quickly that's a good point so let's talk about some of the the use cases of the",
    "start": "1744720",
    "end": "1751399"
  },
  {
    "text": "scenarios that you would uh need in and most applications that do just just that thing can you and Cassandra are couch",
    "start": "1751399",
    "end": "1758519"
  },
  {
    "text": "and I don't know the answer to this update documents partially do I have to get the",
    "start": "1758519",
    "end": "1763760"
  },
  {
    "text": "whole document before I can updated positional updates and and okay are",
    "start": "1763760",
    "end": "1768880"
  },
  {
    "text": "those new no it's been in a full while okay okay and yeah Cassandra can I mean we can have very very large row so",
    "start": "1768880",
    "end": "1775240"
  },
  {
    "text": "obviously you're not pushing the whole row at once um people can just insert more things people build indexes within a single Row for the rest of their data",
    "start": "1775240",
    "end": "1782200"
  },
  {
    "text": "what sort of operators are built in to do that for you automatically to do things like uh incrementing a value",
    "start": "1782200",
    "end": "1788039"
  },
  {
    "text": "adding something to an array updating a key and a hash let me call you Bob for a second you write a JavaScript function",
    "start": "1788039",
    "end": "1793919"
  },
  {
    "text": "for that yeah I mean I can drop down and do that in in [ __ ] too but I mean there's",
    "start": "1793919",
    "end": "1799080"
  },
  {
    "text": "there's convenience is what I'm I'm pointing out we we we have a very small set of standard library to put these functions but we're like users have not",
    "start": "1799080",
    "end": "1806360"
  },
  {
    "text": "asked for that a lot a whole lot so well it is expandable of course but we don't have a lot of that yet okay so so let me",
    "start": "1806360",
    "end": "1812080"
  },
  {
    "text": "ask you guys another question so you're open source yeah um so if you put out a",
    "start": "1812080",
    "end": "1817480"
  },
  {
    "text": "new release you know do your customers have to take your database down no no so",
    "start": "1817480",
    "end": "1823880"
  },
  {
    "text": "explain how you do it well so what you expect so we Cas has",
    "start": "1823880",
    "end": "1828960"
  },
  {
    "text": "a very robust file format and everything since the last three versions used the same file format so you don't have to do any upgrad so the show we can deal with",
    "start": "1828960",
    "end": "1834799"
  },
  {
    "text": "the with the same thing that you you're actually doing so catb has a very robust file system uh file system storage model",
    "start": "1834799",
    "end": "1841200"
  },
  {
    "text": "that has been sta for a couple of versions so whenever you upgrade you never have to change anything without your U with your existing setup on top",
    "start": "1841200",
    "end": "1847799"
  },
  {
    "text": "of that catb is built in in llang who's a fan of erlang here woohoo umling has",
    "start": "1847799",
    "end": "1854039"
  },
  {
    "text": "the capacity oh has the has as a feature that allows you to upgrade a version at",
    "start": "1854039",
    "end": "1859519"
  },
  {
    "text": "runtime so it can run two versions at the same time while serving a database without having to take it down so it has",
    "start": "1859519",
    "end": "1864840"
  },
  {
    "text": "live upgrades fill in so Cassandra uh I mean we're changing",
    "start": "1864840",
    "end": "1871399"
  },
  {
    "text": "the file format soon you will have to restart the cluster I mean saying that you'll never have to uh change the file",
    "start": "1871399",
    "end": "1877519"
  },
  {
    "text": "format is kind of you know so so what happens then if you have 10,000 noes rning you can do a rolling restart yeah",
    "start": "1877519",
    "end": "1884760"
  },
  {
    "text": "that's the plan and how long how long does this rolling we start take just from a practical point of VI we've done",
    "start": "1884760",
    "end": "1890480"
  },
  {
    "text": "these things a few times but I mean what else do operations folks have to do I mean it's fun no I'm kidding uh honestly",
    "start": "1890480",
    "end": "1897559"
  },
  {
    "text": "so this is one more case why you should not be worried about this stuff you know use this storage as a service man this",
    "start": "1897559",
    "end": "1902639"
  },
  {
    "text": "is just this is oldfashioned this is so 1990s I disagree so with",
    "start": "1902639",
    "end": "1909279"
  },
  {
    "text": "Cassandra with Cassandra you can uh you can run a single node incredibly easy you can get a second node started",
    "start": "1909279",
    "end": "1914799"
  },
  {
    "text": "incredibly easy they can be anywhere that their data center you know uh locality aware um uh well we have 45",
    "start": "1914799",
    "end": "1922360"
  },
  {
    "text": "node installs all I mean Twitter is running on 45 nodes and but yeah know",
    "start": "1922360",
    "end": "1927880"
  },
  {
    "text": "Facebook had 150 it's easy enough to grow your cluster that I think it may be",
    "start": "1927880",
    "end": "1933000"
  },
  {
    "text": "more difficult to use ec2 than it is to to manage your cassander cluster I'd",
    "start": "1933000",
    "end": "1938120"
  },
  {
    "text": "like to tag I'd like to tag in J Chris from the C project who's got a few same",
    "start": "1938120",
    "end": "1944760"
  },
  {
    "text": "sorry about that I'm breaking the rules but I just wanted to bring the debate up a notch so all this they've been talking",
    "start": "1944760",
    "end": "1949960"
  },
  {
    "text": "about as far as I'm concerned this is geek stuff I'm not I don't care I'm a developer I WR or Lang but you shouldn't",
    "start": "1949960",
    "end": "1955360"
  },
  {
    "text": "have to worry about any of this your database is yours it lives at the edge it's your data replication means any",
    "start": "1955360",
    "end": "1962039"
  },
  {
    "text": "copy of the data you can move it around you can build workflows on top of replication none of these guys they're",
    "start": "1962039",
    "end": "1967480"
  },
  {
    "text": "they're all zigging we're zagging so I I would really i' would like to see some people talking about the use case I want",
    "start": "1967480",
    "end": "1973080"
  },
  {
    "text": "to share photos with Grandma and I don't want to ask Mark Zuckerberg for any favor",
    "start": "1973080",
    "end": "1979039"
  },
  {
    "text": "stuff it in S3 because then you get URLs that are just completely addressable from the web you don't need any",
    "start": "1979240",
    "end": "1984840"
  },
  {
    "text": "intermediary servers you know key value just repap addressable stuff that's the way to go does Grandma know how to use",
    "start": "1984840",
    "end": "1991399"
  },
  {
    "text": "Curl I mean I don't know I assume you're going to develop an",
    "start": "1991399",
    "end": "1997039"
  },
  {
    "text": "app for her but uh next up so in terms of",
    "start": "1997039",
    "end": "2002720"
  },
  {
    "text": "performance I I I I don't even know if we need to talk about it cuz I think Cassandra has you guys",
    "start": "2002720",
    "end": "2007840"
  },
  {
    "text": "to uh so C doesn't doesn't um optimize for",
    "start": "2007840",
    "end": "2015000"
  },
  {
    "text": "single query performance so everything might just be fast enough not as fast as it can get but by the properties that",
    "start": "2015000",
    "end": "2021240"
  },
  {
    "text": "earning systems come with it can handle thousands and 10, maybe 100,00 concurrent connections and have have a",
    "start": "2021240",
    "end": "2027159"
  },
  {
    "text": "constant stream um of of performance out of whatever you hotway supports without falling",
    "start": "2027159",
    "end": "2034360"
  },
  {
    "text": "over I would argue M goes fast enough I mean you don't have a concurrency",
    "start": "2034360",
    "end": "2040639"
  },
  {
    "text": "story what if the Thousand users hit you at the same time you're dead in the water again there's cashing they're",
    "start": "2040639",
    "end": "2046039"
  },
  {
    "text": "written in C I mean that's a good right aren't they fast enough it doesn't schedule",
    "start": "2046039",
    "end": "2052040"
  },
  {
    "text": "currently so how easy is it to also quickly hook up a CDN to your",
    "start": "2052040",
    "end": "2057398"
  },
  {
    "text": "store can you just with one flip of the bit suddenly have you know cashing all over the world",
    "start": "2057399",
    "end": "2063919"
  },
  {
    "text": "and so what is it that's English home 25 files in transaction per seconds we got",
    "start": "2064760",
    "end": "2070878"
  },
  {
    "text": "your points Mo on so Cassandra candra can do 25,000 request per second per",
    "start": "2070879",
    "end": "2078440"
  },
  {
    "text": "node do we have more audience questions before that all right talk about transactions when are do you need",
    "start": "2078839",
    "end": "2085960"
  },
  {
    "text": "transactions banks have relational databas because they have transactions bank so you're going to have entities",
    "start": "2085960",
    "end": "2092398"
  },
  {
    "text": "that need transaction that's always be Rel databases yeah I'll repeat the question he's asking about transactions",
    "start": "2092399",
    "end": "2098200"
  },
  {
    "text": "do you do people need transactions raise your hands okay so that's your answer okay so",
    "start": "2098200",
    "end": "2105839"
  },
  {
    "text": "wait wait first of all transactions have nothing to do with relational databases the fact that the fact that they were",
    "start": "2105839",
    "end": "2111400"
  },
  {
    "text": "offered by the same particular tool that's a different thing transactions is just that you get a number of guarantees",
    "start": "2111400",
    "end": "2117880"
  },
  {
    "text": "asset guarantees about the update of your data that's all has nothing to do with relational database also no SQL is",
    "start": "2117880",
    "end": "2123400"
  },
  {
    "text": "about using the right tool for the job exactly so there are engines for",
    "start": "2123400",
    "end": "2128440"
  },
  {
    "text": "building transactions zookeeper is one of them it's open source as well that's how you should do your transactions and that's how a lot of people",
    "start": "2128440",
    "end": "2134560"
  },
  {
    "text": "do uh so let's talk a a little about ecosystems um Cassandra I mean I'm going",
    "start": "2134560",
    "end": "2140520"
  },
  {
    "text": "to name drop Cassandra has a few good installs Umi Twitter cloud cloud kick",
    "start": "2140520",
    "end": "2147079"
  },
  {
    "text": "alphabetically Cloud kick is at the top uh but yes also Twitter Facebook what do",
    "start": "2147079",
    "end": "2153440"
  },
  {
    "text": "you guys got I got the BBC I got canonical um it's not as big as you can",
    "start": "2153440",
    "end": "2158599"
  },
  {
    "text": "get but we probably have a little a few more installs than you guys have it's been aing on to the list under discuss",
    "start": "2158599",
    "end": "2164440"
  },
  {
    "text": "is out there Source Forge move to tood DV of course tail. theangel log.com is",
    "start": "2164440",
    "end": "2169960"
  },
  {
    "text": "how you keep up with open source software was L for I someone someone",
    "start": "2169960",
    "end": "2176880"
  },
  {
    "text": "made a remark someone tweeted a remark saying that I when van down tell to go to the bar that was a",
    "start": "2176880",
    "end": "2184119"
  },
  {
    "text": "joke before someone thinks that that an official company statement I think just with any other",
    "start": "2184520",
    "end": "2191800"
  },
  {
    "text": "database or whatever you know you protect yourself at multiple different levels you use caching you be intelligent about where you store your",
    "start": "2191800",
    "end": "2197800"
  },
  {
    "text": "data um you know SV also gives you multiple zones and availability zones where you can actually store your data",
    "start": "2197800",
    "end": "2203839"
  },
  {
    "text": "there's many many techniques that you can can can use to protect yourself from uh from these kind of failures just",
    "start": "2203839",
    "end": "2211440"
  },
  {
    "text": "that's the um that's the real outage of giv otheres funnier",
    "start": "2211440",
    "end": "2217930"
  },
  {
    "text": "[Applause] so how about the wide area replication I mean people people are geographically",
    "start": "2217930",
    "end": "2223920"
  },
  {
    "text": "distributed um Cassandra supports white area replication it's kind of native uh",
    "start": "2223920",
    "end": "2229440"
  },
  {
    "text": "how do people accomplish that with you with your stores or CB has um master",
    "start": "2229440",
    "end": "2235280"
  },
  {
    "text": "master or multimaster replication building which has been built for G geographical distribution and mind so we",
    "start": "2235280",
    "end": "2241040"
  },
  {
    "text": "just have that I believe currently [ __ ] is Master Slave I believe master master is coming yeah but it it never works",
    "start": "2241040",
    "end": "2247880"
  },
  {
    "text": "with your data model uh multiple regions where each of",
    "start": "2247880",
    "end": "2253280"
  },
  {
    "text": "the regions is guaranteed to store the data independently store your data in the EU it's guaranteed to only stay in",
    "start": "2253280",
    "end": "2259359"
  },
  {
    "text": "the EU not only not even metadata about the about the data will ever leave the EU um so you get you get geographical",
    "start": "2259359",
    "end": "2267880"
  },
  {
    "text": "replication for free these go go disappears of the earth which actually appears to be happening at the moment um",
    "start": "2267880",
    "end": "2274880"
  },
  {
    "text": "you know you'll still have the other side and you still have Asia and think of that as well yeah so a big table",
    "start": "2274880",
    "end": "2280480"
  },
  {
    "text": "recently um had an outage I guess it was app engine and I love Google because they're very very open about what went",
    "start": "2280480",
    "end": "2286079"
  },
  {
    "text": "down Amazon is too but uh so what went down was that their master and slave replication basically got out of syn",
    "start": "2286079",
    "end": "2292680"
  },
  {
    "text": "between data centers so I don't know if uh I don't know how I how I feel about Master Slave replication can we can we",
    "start": "2292680",
    "end": "2299480"
  },
  {
    "text": "break that is [ __ ] planning to break that good",
    "start": "2299480",
    "end": "2304800"
  },
  {
    "text": "question good good good question yeah you can break it it's not that hard to",
    "start": "2305160",
    "end": "2310240"
  },
  {
    "text": "to break it but on I mean there's advantages on all sides you know as always the cap f is not that it forces",
    "start": "2310240",
    "end": "2315920"
  },
  {
    "text": "us to use a particular consistency model you get to make the tradeoffs I think you know Cassandra as well as Dynamo",
    "start": "2315920",
    "end": "2321800"
  },
  {
    "text": "before that one of the exercises in Dynamo was really to make sure that we would give in the hands of the",
    "start": "2321800",
    "end": "2327200"
  },
  {
    "text": "developers the choice to go for do you want to be really highly available or",
    "start": "2327200",
    "end": "2333040"
  },
  {
    "text": "are you willing to sacrifice some of your consistency model there and there's no which he can can can use there um",
    "start": "2333040",
    "end": "2339800"
  },
  {
    "text": "plus I think actually but the biggest innovation in all of this was something called sloppy Corum the fact that you",
    "start": "2339800",
    "end": "2346160"
  },
  {
    "text": "could take rights even if your Corum is down and you could always always write to the system here you have a customer",
    "start": "2346160",
    "end": "2352560"
  },
  {
    "text": "that wants to put something in his shopping cart you're going to tell them no the storage system fail timed out no",
    "start": "2352560",
    "end": "2358640"
  },
  {
    "text": "it just always works and I don't actually have a response to that I guess that's possible",
    "start": "2358640",
    "end": "2363760"
  },
  {
    "text": "in couch Tob but only because no actually knows whether it's responsible",
    "start": "2363760",
    "end": "2368800"
  },
  {
    "text": "for something but uh I think we a question I think the one question you really need to answer with mostel is why",
    "start": "2368800",
    "end": "2375400"
  },
  {
    "text": "do I want to do this instead of staying with my SQL and buying a bigger machine I can buy a 10 tbte Ram 5004 machine",
    "start": "2375400",
    "end": "2384000"
  },
  {
    "text": "that will run my singl or Oracle or whatever just fine why do I want a no sequ so the question was why not just",
    "start": "2384000",
    "end": "2390440"
  },
  {
    "text": "scale up why scale out um I would say that the question uh the answer when it comes to Oracle is price that that's",
    "start": "2390440",
    "end": "2396880"
  },
  {
    "text": "very very clear we're all open source um and when it comes to mySQL eventually",
    "start": "2396880",
    "end": "2402160"
  },
  {
    "text": "that that machine goes down um and you have some sloppy situation where you have to either use patches to my SQL to",
    "start": "2402160",
    "end": "2408520"
  },
  {
    "text": "not lose your data or you have to implement something else you have your Ops Team implement drvd or something you",
    "start": "2408520",
    "end": "2414160"
  },
  {
    "text": "know this back to the the Big Data versus the schemes questions and I think if you're if you're comparing something",
    "start": "2414160",
    "end": "2419560"
  },
  {
    "text": "like [ __ ] to my SQL I think it's a more fair comparison because it's a you",
    "start": "2419560",
    "end": "2424880"
  },
  {
    "text": "mentioned highly available I would mention highly productive right so a lot of applications now let's face it a lot",
    "start": "2424880",
    "end": "2431720"
  },
  {
    "text": "of the the data that you use you're not creating in house you're consuming apis from other places and a lot of that is",
    "start": "2431720",
    "end": "2437839"
  },
  {
    "text": "coming from Json it's coming from other hashes that are up in the sky right using something like my SQL then you",
    "start": "2437839",
    "end": "2443480"
  },
  {
    "text": "have to model that schema and stash those using a no SQL store you can just stash the",
    "start": "2443480",
    "end": "2448920"
  },
  {
    "text": "hash so uh in answer to that question when I see somebody writing uh writing a",
    "start": "2448920",
    "end": "2455520"
  },
  {
    "text": "ruby app or a Java app or anything with a middle tier application layer I look at that as a huge waste of time with",
    "start": "2455520",
    "end": "2462960"
  },
  {
    "text": "with couch apps it's just a browser and the couch TV right you got a jQuery guy and you got somebody who knows how to",
    "start": "2462960",
    "end": "2468880"
  },
  {
    "text": "keep the server from dying that's all it takes and you know bner on that same case he's got htttp I agree with that",
    "start": "2468880",
    "end": "2475119"
  },
  {
    "text": "just having an htttp based database means that you don't need all that crap in the middle well I I was actually",
    "start": "2475119",
    "end": "2481800"
  },
  {
    "text": "arguing that youd have to have a range of things to be able to pick them and one of them is an to be accessible but",
    "start": "2481800",
    "end": "2487119"
  },
  {
    "text": "coming back to your question actually um I think there's a number of use cases and especially where it goes about is",
    "start": "2487119",
    "end": "2493079"
  },
  {
    "text": "about existing software where you still may want to run your relational database yeah when we when we built the first",
    "start": "2493079",
    "end": "2499400"
  },
  {
    "text": "services at Amazon storage Services we did not offer a relational storage service why not because you thought that",
    "start": "2499400",
    "end": "2506160"
  },
  {
    "text": "you know that would send the wrong signal because you really want to build scal apps you don't do that however there's a ton of ton of applications if",
    "start": "2506160",
    "end": "2513160"
  },
  {
    "text": "you use Ruby and you use active records you know or any standard om kind of tool",
    "start": "2513160",
    "end": "2519040"
  },
  {
    "text": "you know they don't want to talk to my seel and so here you have a whole range of developers they just want to focus on",
    "start": "2519040",
    "end": "2525240"
  },
  {
    "text": "writing Ruby they don't want to run databases or whatever and they don't care about what the backand is and that's your argument about very small",
    "start": "2525240",
    "end": "2531680"
  },
  {
    "text": "databases very small data sets they don't care as soon as you have to scale as soon as reliability becomes an issue",
    "start": "2531680",
    "end": "2537680"
  },
  {
    "text": "all of these kind of things then it turns out a relational databases have their limitations at points that you",
    "start": "2537680",
    "end": "2543559"
  },
  {
    "text": "know will hurt you you bring up an excellent point about active record I don't want to [ __ ] about it it's really",
    "start": "2543559",
    "end": "2549000"
  },
  {
    "text": "really cool for what it does but it is a thing of Simplicity cdb is built with Simplicity in mind and the the thing",
    "start": "2549000",
    "end": "2555920"
  },
  {
    "text": "that we have to we have in the store here is that active record the last time alog had around 25,000 lines of Ruby",
    "start": "2555920",
    "end": "2561400"
  },
  {
    "text": "code and I know this is this is apples and whatever bungalows in a comparison CB comes at around 15,000 lines of code",
    "start": "2561400",
    "end": "2568319"
  },
  {
    "text": "so our ENT entire database is smaller than the that the rapper you're using to solve your programming issues so we we",
    "start": "2568319",
    "end": "2574480"
  },
  {
    "text": "compressed the stack by using pure couch apps without OMS without all the middleware crap that you could like find",
    "start": "2574480",
    "end": "2580240"
  },
  {
    "text": "bugs in that takes a long time to use like it's just boring and a slow and I don't know it just it's plain sucks I'm",
    "start": "2580240",
    "end": "2587040"
  },
  {
    "text": "sorry you know I I uh I welcome this Renaissance we've got for JavaScript and all these new nosql databases that",
    "start": "2587040",
    "end": "2593040"
  },
  {
    "text": "embracing this language of the past um but but the problem of of of couch is",
    "start": "2593040",
    "end": "2598319"
  },
  {
    "text": "the fact that you have to do everything in Google Mozilla about language of the P I'm a JavaScript Fanboy it listen to",
    "start": "2598319",
    "end": "2604160"
  },
  {
    "text": "change log we mention OJs on every episode but the problem with with couch is you have to drop down to uh to map",
    "start": "2604160",
    "end": "2611119"
  },
  {
    "text": "produce and JavaScript to do anything anything of consequence you have to drop down to JavaScript and you know I'm",
    "start": "2611119",
    "end": "2616680"
  },
  {
    "text": "familiar with JavaScript I love JavaScript but I know a lot of the folks that I work with feel like you have to have Hazmat gloves to to touch",
    "start": "2616680",
    "end": "2622640"
  },
  {
    "text": "JavaScript yeah that's cool but they like the Cs majors of everybody people who tinkle with the web designers who",
    "start": "2622640",
    "end": "2628000"
  },
  {
    "text": "just started to use jQuery they're comfortable with that they can use C you're going to get a web designer on a couch database yes oh okay this I got to",
    "start": "2628000",
    "end": "2634720"
  },
  {
    "text": "see have a lot and his name is Bob but so guys we have to start wrapping up uh",
    "start": "2634720",
    "end": "2641319"
  },
  {
    "text": "is it a quick one yeah it's about data modeling lot lot of people who do relational databases always think about",
    "start": "2641319",
    "end": "2646920"
  },
  {
    "text": "they data modeling I just have the impression when you talk about these nosql databases that you just set data modeling that's you don't think about",
    "start": "2646920",
    "end": "2653240"
  },
  {
    "text": "how you mod so so the question was about data models and um there are names for what we do uh in a relational database",
    "start": "2653240",
    "end": "2660359"
  },
  {
    "text": "you typically want to normalize and a non-relational database you want to denormalize and it's really just that",
    "start": "2660359",
    "end": "2665720"
  },
  {
    "text": "simple so you duplicate but that's fine is what we say um so in in closing statements uh",
    "start": "2665720",
    "end": "2673520"
  },
  {
    "text": "let's just talk about what you would use if you couldn't use your own product so you would Implement some you're",
    "start": "2673520",
    "end": "2678880"
  },
  {
    "text": "implementing something it's going to be a perfect fit for couchdb but your manager says no you can't use couchdb so",
    "start": "2678880",
    "end": "2685559"
  },
  {
    "text": "what's your next choice I I think I'd probably use preser which is actually written in JavaScript",
    "start": "2685559",
    "end": "2693000"
  },
  {
    "text": "so there you go cool so because it's written in JavaScript",
    "start": "2693000",
    "end": "2700040"
  },
  {
    "text": "and all the other languages are boring but does it scale so matter so if",
    "start": "2700040",
    "end": "2707000"
  },
  {
    "text": "I couldn't use Cassandra I'd have to say h react's really interesting but the kind of close source project they have",
    "start": "2707000",
    "end": "2712720"
  },
  {
    "text": "going on uh and Voldemort Voldemort's interesting too but they don't have um ordered keys and I love ordered keys but",
    "start": "2712720",
    "end": "2719480"
  },
  {
    "text": "uh yeah so maybe react maybe [Music]",
    "start": "2719480",
    "end": "2724880"
  },
  {
    "text": "couch I couldn't use Mago perhaps couch but it depends on the the the scenario we need to do Dynamic queries or",
    "start": "2724880",
    "end": "2731000"
  },
  {
    "text": "something like that that was just a pain point for a lot of several apps that we went through I would like to uh probably",
    "start": "2731000",
    "end": "2736440"
  },
  {
    "text": "check out redis or some of the other U you know uh systems that probably should have been up here and let me just say",
    "start": "2736440",
    "end": "2742160"
  },
  {
    "text": "that I hope I didn't deter anybody from using mongod DB I'm just a fanboy like I said I wish somebody from tenen could",
    "start": "2742160",
    "end": "2747839"
  },
  {
    "text": "have been here to adequately represent the the database it's a cool database actually I think the one",
    "start": "2747839",
    "end": "2753240"
  },
  {
    "text": "database that also left out which I think has is very different from from these one is NE 4 4J yeah I think that",
    "start": "2753240",
    "end": "2760960"
  },
  {
    "text": "if you look at if you look at you know databases that build things for a very specific domain where you have graphs uh",
    "start": "2760960",
    "end": "2768400"
  },
  {
    "text": "where where actually all your data is structured as graphs take any social network or you know anything with",
    "start": "2768400",
    "end": "2774040"
  },
  {
    "text": "multile relationship and multile connections neg is absolutely rocks in",
    "start": "2774040",
    "end": "2779640"
  },
  {
    "text": "that sense and I think you know they deserve however you know partitioning that is a pretty hard thing to do",
    "start": "2779640",
    "end": "2786559"
  },
  {
    "text": "it's a computer science problem but it's not no no so hey why don't we build one yeah yeah exactly",
    "start": "2786559",
    "end": "2793839"
  },
  {
    "text": "so I don't know I'll go to a bar for a few hours I come back and then people will say I can use as all right so we're",
    "start": "2793839",
    "end": "2800760"
  },
  {
    "text": "cooling down any other questions guys if not guys let's all say thank you",
    "start": "2800760",
    "end": "2806680"
  },
  {
    "text": "the nonrelational database [Applause]",
    "start": "2806680",
    "end": "2813139"
  },
  {
    "text": "Smackdown thank you for listening to this edition of the Chang log Point your browser to tail. theang",
    "start": "2813680",
    "end": "2821240"
  },
  {
    "text": "log.com to find out what's going on right now in open source also be sure to head to",
    "start": "2821240",
    "end": "2827559"
  },
  {
    "text": "github.com exlore to catch up on trending and feature repos as well as the latest episodes of the change",
    "start": "2827559",
    "end": "2836440"
  },
  {
    "text": "[Music] log as if the fashion",
    "start": "2837850",
    "end": "2843640"
  },
  {
    "text": "shown was my [Music]",
    "start": "2843640",
    "end": "2852159"
  },
  {
    "text": "[Music] all bring it back bring it",
    "start": "2854420",
    "end": "2862520"
  },
  {
    "text": "[Music]",
    "start": "2865060",
    "end": "2871979"
  },
  {
    "text": "back",
    "start": "2872040",
    "end": "2875040"
  }
]