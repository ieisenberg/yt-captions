[
  {
    "text": "I've got a common mistake and go working with Matt Ry I was going to save that for the",
    "start": "40",
    "end": "5879"
  },
  {
    "text": "unpopular opinions but I think it's a popular one so so far only David Hernandez seems to be able to stick",
    "start": "5879",
    "end": "11480"
  },
  {
    "text": "around and hang in there multiple times too don't use his name in vain I don't I love David you know he deserves all that",
    "start": "11480",
    "end": "18439"
  },
  {
    "text": "he gets for putting up with you I love that I've never had banter happening and insults concurrently for both Johnny and",
    "start": "18439",
    "end": "25119"
  },
  {
    "text": "Mark at the same speaking of speaking ofren here's another one",
    "start": "25119",
    "end": "31720"
  },
  {
    "text": "big thanks to our partners Leno fastly and launch Darkly we love Leno they keep it fast and simple check them out at",
    "start": "31720",
    "end": "37360"
  },
  {
    "text": "lin.com changelog our bandwidth is provided by fastly learn more at fastly.com and get your feature Flags",
    "start": "37360",
    "end": "44239"
  },
  {
    "text": "Power by launch Darkly get a demo at launchd dark.com this episode is brought to you by our",
    "start": "44239",
    "end": "50320"
  },
  {
    "text": "friends at cockroach La the makers of cockroach DB the most highly evolved",
    "start": "50320",
    "end": "55480"
  },
  {
    "text": "database on the planet with cockroach DB you can scale fast survive viive anything and Thrive everywhere it's open",
    "start": "55480",
    "end": "63199"
  },
  {
    "text": "source postgress wire compatible and kubernetes friendly which means you can launch and run it anywhere for those who",
    "start": "63199",
    "end": "69680"
  },
  {
    "text": "need more you can build and scale fast with cockro Cloud which is cockro DB hosted as a service it's the simplest",
    "start": "69680",
    "end": "75799"
  },
  {
    "text": "way to deploy cockro DB and is available instantly on AWS and Google cloud with",
    "start": "75799",
    "end": "80960"
  },
  {
    "text": "cockro Cloud a team of worldclass sres maintains and manages your database infrastructure so you can focus Less on",
    "start": "80960",
    "end": "87560"
  },
  {
    "text": "Ops and more on code get started for free with a 30-day free trial or try the new forever free tier that's super",
    "start": "87560",
    "end": "93439"
  },
  {
    "text": "generous head to cockroach labs.com changelog to learn more again cockroach labs.com",
    "start": "93439",
    "end": "100360"
  },
  {
    "text": "[Music]",
    "start": "101050",
    "end": "104190"
  },
  {
    "text": "changelog let's do it it's go time welcome to go time your source for",
    "start": "110560",
    "end": "117079"
  },
  {
    "text": "diverse discussions from around the go Community thank thanks to our friends at Manning we are giving away a free ebook",
    "start": "117079",
    "end": "123000"
  },
  {
    "text": "copy of 100 go mistakes and how to avoid them stay tuned Until the End Matt will",
    "start": "123000",
    "end": "128360"
  },
  {
    "text": "tell you how you can win it should be pretty easy but you do have to pay close attention to what Mark says on this",
    "start": "128360",
    "end": "133959"
  },
  {
    "text": "episode which may be a sacrifice you're not willing to make all right let's get on with it here we",
    "start": "133959",
    "end": "141879"
  },
  {
    "text": "go hello and welcome to go time I'm at Ria and today we're talking about how to",
    "start": "145239",
    "end": "152840"
  },
  {
    "text": "make mistakes in go why would you want to make mistakes well I'm glad you asked",
    "start": "152840",
    "end": "158840"
  },
  {
    "text": "tell us then I will if you don't interrupt cuz I'm I'll get on with it right so we all make mistakes and they",
    "start": "158840",
    "end": "166560"
  },
  {
    "text": "can be a great way to learn so that's why we're doing this episode we're going to hear about some common mistakes that",
    "start": "166560",
    "end": "173159"
  },
  {
    "text": "are made and or if you're a brilliant programmer and you want to make more mistakes you know so that you fit in",
    "start": "173159",
    "end": "179400"
  },
  {
    "text": "better MH this is the episode for you we're joined by the author of Manning",
    "start": "179400",
    "end": "184920"
  },
  {
    "text": "books 100 go mistakes and how to avoid them T hello Tia welcome hey guys thanks",
    "start": "184920",
    "end": "190760"
  },
  {
    "text": "a lot for inviting me I'm a big fan of the podcast oh nice then you can stay",
    "start": "190760",
    "end": "197159"
  },
  {
    "text": "we're also joined by regular co-host Johnny Boro isn't it Hello Johnny yes it",
    "start": "197159",
    "end": "203239"
  },
  {
    "text": "is isn't it hello hello well this all Show's turning",
    "start": "203239",
    "end": "210319"
  },
  {
    "text": "into a mistake can we start over no we can't it's live it's recorded live uh",
    "start": "210319",
    "end": "216360"
  },
  {
    "text": "that other voice you heard and this may be my mistake but we've invited Mark Bates back hello Mark welcome hello I",
    "start": "216360",
    "end": "224120"
  },
  {
    "text": "don't think you can talk about making mistakes and go without me being presidents yeah president or president",
    "start": "224120",
    "end": "229599"
  },
  {
    "text": "either one mes yeah maybe both I'm good at I'm really good at it yeah exactly",
    "start": "229599",
    "end": "234879"
  },
  {
    "text": "and uh and that's really really good at it matter of fact 99 of TV's examples are from my",
    "start": "234879",
    "end": "241159"
  },
  {
    "text": "repos which is kind of nice I feel very proud of material great well let's dig",
    "start": "241159",
    "end": "246840"
  },
  {
    "text": "in Tia maybe you could just kind of tell us about yourself first you're an engineer at beats right yeah indeed a",
    "start": "246840",
    "end": "252640"
  },
  {
    "text": "software engineer in a company called beat you can visit it on",
    "start": "252640",
    "end": "257720"
  },
  {
    "text": "the.co we are in the ride hailing domain and by the way just the the small part",
    "start": "257720",
    "end": "264880"
  },
  {
    "text": "at the beginning we are recruiting people and we are doing a lot of go a lot of cool stuff so if you want to take",
    "start": "264880",
    "end": "271479"
  },
  {
    "text": "a look at it please do brilliant okay yeah no feel free to if you want to plug",
    "start": "271479",
    "end": "276520"
  },
  {
    "text": "something and use the use the platform to plug something feel free don't have to ask in advance no problem bid",
    "start": "276520",
    "end": "283520"
  },
  {
    "text": "bar changed it name now Johnny come on I want to also do a quick shout out to",
    "start": "283520",
    "end": "289160"
  },
  {
    "text": "Lagos Gophers which is a go community in Nigeria we're doing a regular section shout ATS where we shout at because",
    "start": "289160",
    "end": "297160"
  },
  {
    "text": "that's what Johnny said last week do we just yell at them that seems awfully rude hey Legos nice",
    "start": "297160",
    "end": "305080"
  },
  {
    "text": "one n so if you're in the area yeah in Nigeria then you know head over to it",
    "start": "305080",
    "end": "313039"
  },
  {
    "text": "okay great right so mistakes let's see TAA I asked you to pick some of your",
    "start": "313039",
    "end": "319160"
  },
  {
    "text": "favorite mistakes that we could then talk about so um maybe you could pick we",
    "start": "319160",
    "end": "325479"
  },
  {
    "text": "can go through the first one and tell us what what was the first mistake you picked the first I picked was related to",
    "start": "325479",
    "end": "331160"
  },
  {
    "text": "Neil receivers because I believe it's a very common one many of us have already",
    "start": "331160",
    "end": "337520"
  },
  {
    "text": "experienced it and if you don't at least I I hope that it will prevent you from",
    "start": "337520",
    "end": "342759"
  },
  {
    "text": "doing it right mhm it's a mistake that I have already seen on a project I was",
    "start": "342759",
    "end": "350120"
  },
  {
    "text": "working on and basically it was uh something related to yeah returning a NE",
    "start": "350120",
    "end": "357520"
  },
  {
    "text": "receiver so let's take here as an example I have a concrete example where we can say I am going to implement a",
    "start": "357520",
    "end": "364120"
  },
  {
    "text": "validate function for for example right that validates a I don't know an HTTP",
    "start": "364120",
    "end": "369319"
  },
  {
    "text": "request or something like this okay and we don't want to return only the first",
    "start": "369319",
    "end": "374720"
  },
  {
    "text": "error we met right we would like for example to convey that the validation",
    "start": "374720",
    "end": "380000"
  },
  {
    "text": "error like convey multiple errors right so there are different School of",
    "start": "380000",
    "end": "385440"
  },
  {
    "text": "thoughts here and one of them being for example to either return a slice of errors or just return a custom error",
    "start": "385440",
    "end": "391720"
  },
  {
    "text": "type right and here we will take the example of returning a custom error type",
    "start": "391720",
    "end": "397120"
  },
  {
    "text": "so we can create for example a custom stct called multi let's say that can",
    "start": "397120",
    "end": "403080"
  },
  {
    "text": "contain some different fields and everything and more importantly at some point it contains a slice of Errors",
    "start": "403080",
    "end": "409599"
  },
  {
    "text": "right that we want to kind of mutate throughout the errors so we take this",
    "start": "409599",
    "end": "415240"
  },
  {
    "text": "multi-or struct we make it implementing the error interface and it's a pointer",
    "start": "415240",
    "end": "421479"
  },
  {
    "text": "receiver because the slice needs to be mutated so in our validate function what",
    "start": "421479",
    "end": "427639"
  },
  {
    "text": "one guy could do in that case is to say first I'm going to create a variable called result okay it's going to be a",
    "start": "427639",
    "end": "434720"
  },
  {
    "text": "pointer to multier so I write VAR result Star multier right and by default result",
    "start": "434720",
    "end": "442280"
  },
  {
    "text": "is going to be assign to nil as the zero value of a pointer is nil right yeah so",
    "start": "442280",
    "end": "448319"
  },
  {
    "text": "let's say that we implement the wall function we do the sanity checks and if there is an error we mutate result to",
    "start": "448319",
    "end": "455160"
  },
  {
    "text": "happen a new error and eventually in the end of the function we say I am going to",
    "start": "455160",
    "end": "460440"
  },
  {
    "text": "return the result variable right so in the end result can be either nil if we",
    "start": "460440",
    "end": "466919"
  },
  {
    "text": "face no errors or it can be a pointer referencing a multier instance right so",
    "start": "466919",
    "end": "472840"
  },
  {
    "text": "let's now say that we implement the consumer side we called our validation function and we check whether the error",
    "start": "472840",
    "end": "478479"
  },
  {
    "text": "is near or not right and here surprise the error is never nil actually even",
    "start": "478479",
    "end": "486280"
  },
  {
    "text": "when we faced no errors the error itself that we return is never",
    "start": "486280",
    "end": "492319"
  },
  {
    "text": "nil so what happened in that case we have said that eventually we were",
    "start": "492319",
    "end": "497520"
  },
  {
    "text": "returning the resol variable right so if there is no error actually what we are going to return is a Neil receiver not a",
    "start": "497520",
    "end": "506840"
  },
  {
    "text": "Neil value directly and as the return type was an interface because we return",
    "start": "506840",
    "end": "512880"
  },
  {
    "text": "an error interface right we didn't return a Neil value here we return an interface implemented by a Neil receiver",
    "start": "512880",
    "end": "521159"
  },
  {
    "text": "which is actually different from Neil and that's why on the check on the consumer is never Neil and just for",
    "start": "521159",
    "end": "527360"
  },
  {
    "text": "information why do we have this it's because in go a Neil receiver is allowed",
    "start": "527360",
    "end": "535200"
  },
  {
    "text": "which might be sound a bit odd at first but it's actually allowed and the reason is because a method Ino it's just some",
    "start": "535200",
    "end": "544040"
  },
  {
    "text": "kind of syntactic sugar just like if the receiver was actually the first argument",
    "start": "544040",
    "end": "549399"
  },
  {
    "text": "of a function and it's actually allowed to pass Neil Arguments for for for pointers right so a nil receiver is",
    "start": "549399",
    "end": "556560"
  },
  {
    "text": "completely allowed and if we want to fix it in that very case instead of possibly",
    "start": "556560",
    "end": "562519"
  },
  {
    "text": "returning a Neil receiver we should return a Neil value directly So",
    "start": "562519",
    "end": "568120"
  },
  {
    "text": "eventually in the end we could do if result equals to nil return nil instead",
    "start": "568120",
    "end": "573560"
  },
  {
    "text": "of returning result right and it's actually the same on the uh consumer",
    "start": "573560",
    "end": "579160"
  },
  {
    "text": "side I mean on the other side if a function accepts an interface and we pass to it a NE receiver not a Neil",
    "start": "579160",
    "end": "586000"
  },
  {
    "text": "value the variable assigned to this interface won't be Neil so just as a",
    "start": "586000",
    "end": "591240"
  },
  {
    "text": "small conclusion here when a function accepts or return an interface and that we pass or return a Neil receiver",
    "start": "591240",
    "end": "599720"
  },
  {
    "text": "the variable assigned to this interface will never be Neil and in general",
    "start": "599720",
    "end": "605240"
  },
  {
    "text": "actually having a Neil receiver is probably something we never want in go and it means a probable bug so it should",
    "start": "605240",
    "end": "611800"
  },
  {
    "text": "be avoided oh yeah so that's such an interesting one how common is this",
    "start": "611800",
    "end": "617920"
  },
  {
    "text": "because first of all if that happened to you you'd be very surprised I think by",
    "start": "617920",
    "end": "623600"
  },
  {
    "text": "that Johnny is has have you ever run into this issue perhaps it's my Approach General approach I tend not to have",
    "start": "623600",
    "end": "631040"
  },
  {
    "text": "custom error types that basically themselves contain sort of a multiple errors kind of like the example Tia has",
    "start": "631040",
    "end": "636680"
  },
  {
    "text": "Illustrated I tend to prefer a slice of Errors over a custom type containing",
    "start": "636680",
    "end": "641920"
  },
  {
    "text": "multiple errors right so I haven't run across this particular issue as laid out but I can see I can absolutely see",
    "start": "641920",
    "end": "648519"
  },
  {
    "text": "myself easily stepping on that land mine um as explained cuz it would be a natural thing I wouldn't be thinking oh",
    "start": "648519",
    "end": "654639"
  },
  {
    "text": "nil value versus a nil you know that's supposed to point to another type that",
    "start": "654639",
    "end": "659839"
  },
  {
    "text": "just happens to be a nil right so I'm not sort of slicing it that thinly I guess yeah I've written code that",
    "start": "659839",
    "end": "665720"
  },
  {
    "text": "allowed for methods to be called on the nil version of something and it was just a kind of usually it's a noop or some",
    "start": "665720",
    "end": "671839"
  },
  {
    "text": "default Behavior but is that too magic do you think these days for go Mark yeah",
    "start": "671839",
    "end": "677880"
  },
  {
    "text": "yeah I think so yeah I think that's definitely way too magic I agree with Johnny I'm well aware of this problem",
    "start": "677880",
    "end": "683839"
  },
  {
    "text": "you know we talk about it U when we're teaching at gopher guides but it's not something like Johnny think the way I",
    "start": "683839",
    "end": "689760"
  },
  {
    "text": "write my code I've never hit this particular era and I almost never use custom a types when I do I use a slice",
    "start": "689760",
    "end": "696200"
  },
  {
    "text": "of Errors like Johnny kind of talked about I don't know I kind of write my code so I never hit that Frances did a",
    "start": "696200",
    "end": "702399"
  },
  {
    "text": "really good I think it was a gophercon talk about when nil isn't",
    "start": "702399",
    "end": "707519"
  },
  {
    "text": "nil on this very same subject so it does come up and it's a really good talk",
    "start": "707519",
    "end": "712920"
  },
  {
    "text": "obviously it does happen all the time to people and it's a super easy very easy",
    "start": "712920",
    "end": "720040"
  },
  {
    "text": "way to like find a bug in your code that will take you a three four hours easy to",
    "start": "720040",
    "end": "726519"
  },
  {
    "text": "track down so I'm curious what is the antidote what is the advice that you present in in your book TV is it to",
    "start": "726519",
    "end": "732920"
  },
  {
    "text": "avoid these kinds of situations or is there a pattern or an approach to where you can still use That explicit",
    "start": "732920",
    "end": "741279"
  },
  {
    "text": "nil where you well in that specific case of course the solution would be to",
    "start": "741279",
    "end": "746399"
  },
  {
    "text": "return Neil instead of of a pointer receiver but in general I mean okay we discussed about returning an error and",
    "start": "746399",
    "end": "754000"
  },
  {
    "text": "say okay perhaps I'm not going to create a custom error type here but we may still have the case where we return an",
    "start": "754000",
    "end": "760160"
  },
  {
    "text": "interface I mean in general okay in go we tend to say we shouldn't return interface right we tend to take rather",
    "start": "760160",
    "end": "767720"
  },
  {
    "text": "the approach to say I'm going to accept abstraction so accept interfaces and",
    "start": "767720",
    "end": "773440"
  },
  {
    "text": "rather return concrete types right kind of be liberal with what we accept and we",
    "start": "773440",
    "end": "779360"
  },
  {
    "text": "don't want to force our function to force abstractions right but I believe that it's not a hard rule because",
    "start": "779360",
    "end": "786880"
  },
  {
    "text": "sometimes even you can see from the standard Library directly some functions returning directly a n. reader or io.",
    "start": "786880",
    "end": "795440"
  },
  {
    "text": "writer directly instead of a type itself of a stru right so I believe that we may",
    "start": "795440",
    "end": "801399"
  },
  {
    "text": "still face the case where we have at some point to return an interface and yeah in that case we still have it to",
    "start": "801399",
    "end": "808079"
  },
  {
    "text": "bear in mind that yeah NE is isn't exactly the same thing as a NE receiver",
    "start": "808079",
    "end": "813639"
  },
  {
    "text": "so it's still something I believe that we can face yeah and why do you think this happened is this just something that",
    "start": "813639",
    "end": "820399"
  },
  {
    "text": "emerged do you think this was a known thing when they were designing the language well I believe it happened",
    "start": "820399",
    "end": "827000"
  },
  {
    "text": "again because it's in method in go are particular anal there are just some",
    "start": "827000",
    "end": "832560"
  },
  {
    "text": "syntactic sugar as I said yeah but I have I don't have more insights on on",
    "start": "832560",
    "end": "838160"
  },
  {
    "text": "this yeah I don't think it it wasn't a concrete decision to allow or to have it",
    "start": "838160",
    "end": "843560"
  },
  {
    "text": "do that it was just more a matter of it fell out of the type system that way",
    "start": "843560",
    "end": "849720"
  },
  {
    "text": "consequence yeah from my understanding of the issue is just that it wasn't it was something they obviously would have",
    "start": "849720",
    "end": "855519"
  },
  {
    "text": "loved to have avoided because it is a bug obviously that hits people in a weird bug but it",
    "start": "855519",
    "end": "861240"
  },
  {
    "text": "was just more it fell out of the type system and it wasn't necessarily designed into it yeah I never thought",
    "start": "861240",
    "end": "866880"
  },
  {
    "text": "I'd say this Mark but you you should be a little bit louder move a little closer to the mic please I should be a little",
    "start": "866880",
    "end": "873480"
  },
  {
    "text": "Lou I don't know why you don't think I'm loud just the what I'm hearing mhm well",
    "start": "873480",
    "end": "880639"
  },
  {
    "text": "maybe turn yourself up you think okay don't think that solves the problem I think that makes it worse here here we",
    "start": "880639",
    "end": "888000"
  },
  {
    "text": "go here we go I've I've got a common I've got a common mistake and go working with Ma and that's from the president I was",
    "start": "888000",
    "end": "895360"
  },
  {
    "text": "going to save that for the unpopular opinions but I think it's a popular one so so far only David Hernandez seems to be",
    "start": "895360",
    "end": "901800"
  },
  {
    "text": "able to stick around and hang multiple times too don't use his name in vain multiple times I don't I love David go",
    "start": "901800",
    "end": "909519"
  },
  {
    "text": "you know he deserves all that he gets for putting up with you I love that I've never had um banter happening and",
    "start": "909519",
    "end": "916120"
  },
  {
    "text": "insults concurrently for both Johnny and Mark at the same time speaking of speaking ofren here's another one um Tia",
    "start": "916120",
    "end": "924600"
  },
  {
    "text": "you you talk about concurrency like we feel like you know go is a bit famous for concurrency it's got some great",
    "start": "924600",
    "end": "931440"
  },
  {
    "text": "Primitives that makes that so much easier to do than previous languages should you always strive to",
    "start": "931440",
    "end": "939720"
  },
  {
    "text": "use that to make things concurrent do you think that's a nice transition yeah thanks for that I've been",
    "start": "939720",
    "end": "946880"
  },
  {
    "text": "professional I don't think I understand the question currency always faster yeah",
    "start": "946880",
    "end": "952480"
  },
  {
    "text": "that's the question that's the question no next question it's not a quiz show BS",
    "start": "952480",
    "end": "960360"
  },
  {
    "text": "well it's a okay fine continue on with your line of questioning you I mean it was a yes or no question is it faster no",
    "start": "960360",
    "end": "967959"
  },
  {
    "text": "it's not always a common mistake that people make that people think concurrency is always faster too did you",
    "start": "967959",
    "end": "974440"
  },
  {
    "text": "SC T you have to speak before Bates gets in otherwise I keep seeing the set up I'm",
    "start": "974440",
    "end": "980480"
  },
  {
    "text": "like why you even have on the showa drump in jump in jump okay",
    "start": "980480",
    "end": "985959"
  },
  {
    "text": "well okay cool yes so I believe definitely it's the case so yeah I",
    "start": "985959",
    "end": "991800"
  },
  {
    "text": "believe that a common misconception from yeah junior or even midlevel developer",
    "start": "991800",
    "end": "998440"
  },
  {
    "text": "is to believe that a concurrent solution should always be faster than a sequential one because well if we",
    "start": "998440",
    "end": "1006440"
  },
  {
    "text": "Implement a concurrent solution that leverages multiple C CPU cores it should",
    "start": "1006440",
    "end": "1013120"
  },
  {
    "text": "obviously be faster than sequential implementation right yeah that's a a false",
    "start": "1013120",
    "end": "1019240"
  },
  {
    "text": "affir wrong no and I believe actually that it's even more of a belief in go thanks",
    "start": "1019240",
    "end": "1027160"
  },
  {
    "text": "to goroutine as you have said M because goroutine compared to threads are are great they are more lightweight they are",
    "start": "1027160",
    "end": "1033678"
  },
  {
    "text": "faster to spin up they are faster to context switch and so on so there shouldn't be like any real reason for",
    "start": "1033679",
    "end": "1039720"
  },
  {
    "text": "concurrent application to be slower than sequential application I took here as a a concrete example actually I took as an",
    "start": "1039720",
    "end": "1047240"
  },
  {
    "text": "example uh the merge sort algorithm and just as a quick reminder about what the",
    "start": "1047240",
    "end": "1053960"
  },
  {
    "text": "merge sort algorithm is if we take for example the uh recur C implementation we",
    "start": "1053960",
    "end": "1060440"
  },
  {
    "text": "basically get a list of elements as an input and we will break down repeatedly",
    "start": "1060440",
    "end": "1067960"
  },
  {
    "text": "each sublist into two sublists into two Hales right we are going to do it",
    "start": "1067960",
    "end": "1073400"
  },
  {
    "text": "repeatedly and once we reach subl list of a single element we got up again and",
    "start": "1073400",
    "end": "1079159"
  },
  {
    "text": "we merge the two sublist in a s manner so for example a quick example if we have two and one for example we are",
    "start": "1079159",
    "end": "1085400"
  },
  {
    "text": "going to split it into two Hales two on one side one on the other side and as",
    "start": "1085400",
    "end": "1090760"
  },
  {
    "text": "each subl list contains a single element meaning it's already sorted then we are going to merge it in a sorted manner so",
    "start": "1090760",
    "end": "1097600"
  },
  {
    "text": "we will have one and two so in the nutshell the merge sort algorithm we just we get a slice as an input we check",
    "start": "1097600",
    "end": "1104120"
  },
  {
    "text": "the length of the slice if it's bigger than one we compute the middle we apply merge sort on the first half merge sort",
    "start": "1104120",
    "end": "1111840"
  },
  {
    "text": "on the second half and then we merge right and so the structure for example",
    "start": "1111840",
    "end": "1117320"
  },
  {
    "text": "of this algorithm seems like a perfect fit for congruency because we could say",
    "start": "1117320",
    "end": "1124240"
  },
  {
    "text": "every time I can handle each half into a specific goutin so the first half in one",
    "start": "1124240",
    "end": "1132679"
  },
  {
    "text": "gtin the second in another gtin and say I will introduce some form of synch",
    "start": "1132679",
    "end": "1138400"
  },
  {
    "text": "chronization at some point to wait for both coroutines right so if we implement",
    "start": "1138400",
    "end": "1144320"
  },
  {
    "text": "this parallel version of the algorithm I run it on my local computer with a",
    "start": "1144320",
    "end": "1150080"
  },
  {
    "text": "certain number of elements and actually this parallel version is about 10 times",
    "start": "1150080",
    "end": "1155840"
  },
  {
    "text": "slower than the sequential version right and despite the fact that the parallel",
    "start": "1155840",
    "end": "1163200"
  },
  {
    "text": "version leverages multiple cores right so it's more than 10 times slower",
    "start": "1163200",
    "end": "1168799"
  },
  {
    "text": "and what is the reason for for that if we think a bit about it so as we say the",
    "start": "1168799",
    "end": "1174520"
  },
  {
    "text": "algorithm is about to repeatedly split lists into two sub lists right so at some point we will have 1,24 elements",
    "start": "1174520",
    "end": "1182200"
  },
  {
    "text": "then 5 512 then 256 and so on until we reach 8 four two and one elements right",
    "start": "1182200",
    "end": "1190240"
  },
  {
    "text": "and now let's try to imagine in your opinion like what's the fastest between",
    "start": "1190240",
    "end": "1195320"
  },
  {
    "text": "spinning up two goutine that will both merge two elements and wait for them or",
    "start": "1195320",
    "end": "1201600"
  },
  {
    "text": "in the current goutine merge two element then will merge two other elements and",
    "start": "1201600",
    "end": "1207799"
  },
  {
    "text": "of course it's going to be the latter here right because it's going to be faster to do it in the current",
    "start": "1207799",
    "end": "1213360"
  },
  {
    "text": "goutin and if we think about it actually in the merge s algorithm the deeper we",
    "start": "1213360",
    "end": "1219760"
  },
  {
    "text": "go the less efficient it will be to spin up a goroutine and sure goroutines are",
    "start": "1219760",
    "end": "1226880"
  },
  {
    "text": "fast but spin a new go routine it has a cost because we have to wait for its",
    "start": "1226880",
    "end": "1232880"
  },
  {
    "text": "creation we have to wait for the internal goed to execute it we have also",
    "start": "1232880",
    "end": "1238240"
  },
  {
    "text": "the fact that concurrency introduces some form of synchronization because of",
    "start": "1238240",
    "end": "1243640"
  },
  {
    "text": "mutex or channels or whatever so everything it has a cost right and here",
    "start": "1243640",
    "end": "1249760"
  },
  {
    "text": "the solution one possible solution for this algorithm here the goal is not of course to design the most optimal",
    "start": "1249760",
    "end": "1256520"
  },
  {
    "text": "solution for the mer algorithm but discuss about the potential solution it could be to say I will Define a",
    "start": "1256520",
    "end": "1264039"
  },
  {
    "text": "threshold and I will apply the parallel algorithm that we just described but if",
    "start": "1264039",
    "end": "1271000"
  },
  {
    "text": "the number of elements is below a certain threshold it's simply not worth",
    "start": "1271000",
    "end": "1277120"
  },
  {
    "text": "spinning up new go routines so instead I am going to execute sequentially and this threshold so okay",
    "start": "1277120",
    "end": "1284679"
  },
  {
    "text": "may depend on the machine and everything so on my side it was about two 48 elements and if I run this new hybrid",
    "start": "1284679",
    "end": "1292799"
  },
  {
    "text": "version let's say of the parallel algorithm it's about 40% faster this",
    "start": "1292799",
    "end": "1298039"
  },
  {
    "text": "time compared to the sequential implementation yeah and one very last thing to say uh I have done the same",
    "start": "1298039",
    "end": "1305520"
  },
  {
    "text": "test in Java actually where we don't have the principle of Co routines right we just have threads here right and the",
    "start": "1305520",
    "end": "1313039"
  },
  {
    "text": "threshold actually was higher it was a bit it was around four times big bigger",
    "start": "1313039",
    "end": "1318400"
  },
  {
    "text": "if I recall correctly compared to gtin so it's kind of interesting because",
    "start": "1318400",
    "end": "1323440"
  },
  {
    "text": "somehow it shows that gines are actually somehow more efficient than threads for",
    "start": "1323440",
    "end": "1329720"
  },
  {
    "text": "concurent workloads because they are for example faster to spin up but as we",
    "start": "1329720",
    "end": "1335039"
  },
  {
    "text": "Illustrated with the mer s algorithm it's not magic nonetheless congruency isn't always",
    "start": "1335039",
    "end": "1342919"
  },
  {
    "text": "[Music] faster",
    "start": "1343640",
    "end": "1349960"
  },
  {
    "text": "this episode is brought to you by Source graph Source graph is universal code service that let you move fast even in",
    "start": "1353880",
    "end": "1360400"
  },
  {
    "text": "big code bases here's CTO and co-founder bangl explaining how Source graph helps",
    "start": "1360400",
    "end": "1365679"
  },
  {
    "text": "you to get into that ideal state of flow and coding the ideal state of software development is really being in that",
    "start": "1365679",
    "end": "1373080"
  },
  {
    "text": "state of flow it's that state where all the relevant context and information that you need to build whatever feature",
    "start": "1373080",
    "end": "1379320"
  },
  {
    "text": "or bug that you're focused on uh building or fixing at the moment that's all readily available now the question",
    "start": "1379320",
    "end": "1384720"
  },
  {
    "text": "is how do you get into that state where you know you don't know anything about the code necessarily that you're going to modify that's where Source graph",
    "start": "1384720",
    "end": "1391760"
  },
  {
    "text": "comes in and so what you do with Source graph is you you jump into Source graph it provides a single uh portal into that",
    "start": "1391760",
    "end": "1398279"
  },
  {
    "text": "Universe of code you search for the string literal the pattern whatever is you're looking for you dive right into",
    "start": "1398279",
    "end": "1403640"
  },
  {
    "text": "the the specific part of code that you want to understand and then you have all these code navigation capabilities jump",
    "start": "1403640",
    "end": "1408720"
  },
  {
    "text": "to definition find references that work across repository boundaries that work without having to clone the code to your",
    "start": "1408720",
    "end": "1415120"
  },
  {
    "text": "local machine and set up and mess around with editor config and all that everything is just designed to be",
    "start": "1415120",
    "end": "1420279"
  },
  {
    "text": "seamless and to Aid in that task of you know code spelunking or or Source diving and once you've acquired that",
    "start": "1420279",
    "end": "1426080"
  },
  {
    "text": "understanding then you can hop back in your editor dive right back into that flow state of hey all the information I",
    "start": "1426080",
    "end": "1431600"
  },
  {
    "text": "need is rarily accessible let me just focus on writing the code that influence the feature or fixes the bug that I'm",
    "start": "1431600",
    "end": "1436919"
  },
  {
    "text": "working on all right I learn more at source.com and also check out their bonly virtual series called Dev Tool",
    "start": "1436919",
    "end": "1443039"
  },
  {
    "text": "Time covering all things Dev tools at sourc gra.com deev Tool [Music]",
    "start": "1443039",
    "end": "1454900"
  },
  {
    "text": "Time so a couple of things there one is like when you're sharing data when",
    "start": "1460080",
    "end": "1465320"
  },
  {
    "text": "you're working on the same data you have to be safe concurrently so you have to",
    "start": "1465320",
    "end": "1470880"
  },
  {
    "text": "then lock usually and things are going to be waiting so that's always something to consider and then I guess Johnny you",
    "start": "1470880",
    "end": "1477919"
  },
  {
    "text": "Benchmark things don't you that's how you find out these little yeah exactly",
    "start": "1477919",
    "end": "1483320"
  },
  {
    "text": "that was going to be sort of my my you know again in the same Spirit of my previous question like how do you find",
    "start": "1483320",
    "end": "1488919"
  },
  {
    "text": "out right what the right sort of threshold is Right other than maybe benchmarking you know doing some profiling work and figuring out okay",
    "start": "1488919",
    "end": "1496000"
  },
  {
    "text": "where is the diminishing return where is that point yeah yeah that's it it's",
    "start": "1496000",
    "end": "1501200"
  },
  {
    "text": "interesting you know we're talking about currency and we talk about what you know how sometimes concurrency is not faster",
    "start": "1501200",
    "end": "1507799"
  },
  {
    "text": "you know and this whole kind of idea one of the biggest things I've noticed with newbies and anybody coming to go really",
    "start": "1507799",
    "end": "1514720"
  },
  {
    "text": "from any language is this like let's make everything concurrent because we",
    "start": "1514720",
    "end": "1521279"
  },
  {
    "text": "can you know and you're demonstrating very empirically hey if you do that in the wrong places you're actually going",
    "start": "1521279",
    "end": "1527399"
  },
  {
    "text": "to but I see it a lot not even from the numbers perspective just from the",
    "start": "1527399",
    "end": "1532440"
  },
  {
    "text": "architecture and the complexity that I see a lot of people introduce into their apps when they just have no need for it",
    "start": "1532440",
    "end": "1539679"
  },
  {
    "text": "and one of those is channels you know they build in a lot of Channel usage early on because they think they should",
    "start": "1539679",
    "end": "1546159"
  },
  {
    "text": "and then you're like oh actually you only use channels like in these three occasions you know like so concurrency",
    "start": "1546159",
    "end": "1553440"
  },
  {
    "text": "and go it what drove us all to go originally I think I know certainly drove Johnny and I being rubious before",
    "start": "1553440",
    "end": "1560360"
  },
  {
    "text": "this right it drove us here drove everybody else here but then to sit there and",
    "start": "1560360",
    "end": "1565600"
  },
  {
    "text": "say hang on just because we've got concurrency doesn't mean you should always use it that's a different thing",
    "start": "1565600",
    "end": "1573159"
  },
  {
    "text": "altogether yeah I think that's a good point I was going to say also that the complexity thing that applies actually",
    "start": "1573159",
    "end": "1579080"
  },
  {
    "text": "across the board to any of these little cool features particularly if it is like you're doing it for optimizations you're",
    "start": "1579080",
    "end": "1585279"
  },
  {
    "text": "doing it for performance reasons in most cases you're going to make your code more complicated and therefore less",
    "start": "1585279",
    "end": "1592080"
  },
  {
    "text": "maintainable so you just have to weigh that cost you know maybe it's worth it in your case yeah and maybe it's",
    "start": "1592080",
    "end": "1599480"
  },
  {
    "text": "not I often find when I'm building apps I start serially and then you know cuz I",
    "start": "1599480",
    "end": "1606039"
  },
  {
    "text": "start in the morning Cal and then yeah no the too many dad jokes okay I'll",
    "start": "1606039",
    "end": "1612520"
  },
  {
    "text": "skip that one anyway that one didn't work that one's out of the repertoire J",
    "start": "1612520",
    "end": "1619600"
  },
  {
    "text": "there's that too I start you know very serially like I'm just going to start my program and I'm going to call my methods",
    "start": "1620399",
    "end": "1626320"
  },
  {
    "text": "and my functions as need be and I'm going to find as I'm working and as I'm",
    "start": "1626320",
    "end": "1631399"
  },
  {
    "text": "using this app that I'm struggling all of a sudden here or there I go in I",
    "start": "1631399",
    "end": "1637080"
  },
  {
    "text": "Benchmark or I profile and I say oh you know what this bit of code here would",
    "start": "1637080",
    "end": "1642159"
  },
  {
    "text": "really benefit from being concurrent you know but not the whole thing just this section where",
    "start": "1642159",
    "end": "1649880"
  },
  {
    "text": "there's a lot of process a lot of stuff happening and we can get a big win there but I only do that once I know that I'm",
    "start": "1649880",
    "end": "1657399"
  },
  {
    "text": "getting that from the testing and the benchmarking I think that's great advice",
    "start": "1657399",
    "end": "1663120"
  },
  {
    "text": "Chris James from the go for slack Channel go time FM and by the way long",
    "start": "1663120",
    "end": "1668840"
  },
  {
    "text": "time listener first time caller and by the way please join in the chat that's",
    "start": "1668840",
    "end": "1674720"
  },
  {
    "text": "where we hang out Chris has a question for the Lads with a zed Chris says one",
    "start": "1674720",
    "end": "1679880"
  },
  {
    "text": "of the strengths often touted about go is that because it's very simple it's more difficult to make mistakes compared",
    "start": "1679880",
    "end": "1686279"
  },
  {
    "text": "to other general purpose languages but as we are learning there's at least a hundred mistakes you can make if not",
    "start": "1686279",
    "end": "1692080"
  },
  {
    "text": "more does the panel have any ideas on changes to the language that could or should be made to reduce developer",
    "start": "1692080",
    "end": "1700000"
  },
  {
    "text": "mistakes and kind of shadowing Springs to mind for me on this one I feel like if shadowing the uh def itely the magic",
    "start": "1700000",
    "end": "1708640"
  },
  {
    "text": "okay is another one so those for those of you who kind of know what I'm talking about you know you kind of get the map",
    "start": "1708640",
    "end": "1715480"
  },
  {
    "text": "you know map returns this random okay you Boolean second variable if you ask",
    "start": "1715480",
    "end": "1720720"
  },
  {
    "text": "for it or if you're doing a type assertion right if you ask for the",
    "start": "1720720",
    "end": "1726000"
  },
  {
    "text": "second random option value that's there that's the you know these things I don't even think they're documented you just kind of know that they're there and none",
    "start": "1726000",
    "end": "1732919"
  },
  {
    "text": "of us mere mortals can add them the go team can add them in like weird places like why isn't type assertion and that's",
    "start": "1732919",
    "end": "1739200"
  },
  {
    "text": "one of my big ones why does that not force you check if it's okay or not to check the okay because the the",
    "start": "1739200",
    "end": "1745559"
  },
  {
    "text": "alternative is a panic right like and I see that all the time I see type",
    "start": "1745559",
    "end": "1750600"
  },
  {
    "text": "assertions constantly in the code without that okay check and just panics",
    "start": "1750600",
    "end": "1756399"
  },
  {
    "text": "waiting to happen and if I want to panic I can Panic even with the okay but I",
    "start": "1756399",
    "end": "1762799"
  },
  {
    "text": "also think Panic shouldn't exist but that's another language change I think",
    "start": "1762799",
    "end": "1767840"
  },
  {
    "text": "that could solve a lot and do you think that I mean that generics is going to be a nice use case for that instead of",
    "start": "1767840",
    "end": "1774600"
  },
  {
    "text": "having to cast every time that you you will have to handle generic set of data",
    "start": "1774600",
    "end": "1779679"
  },
  {
    "text": "or something like this in some cases generics but the thing is it's if if",
    "start": "1779679",
    "end": "1785399"
  },
  {
    "text": "you're dealing with data that comes in from Json or something often that's when you know because sometimes you have",
    "start": "1785399",
    "end": "1790880"
  },
  {
    "text": "generic data so you don't have structs to demarshal it into you have maps of string interface and then if there's an",
    "start": "1790880",
    "end": "1797880"
  },
  {
    "text": "object inside an object that becomes a map string interface too so you sort of in that case you have to rely on that so",
    "start": "1797880",
    "end": "1805279"
  },
  {
    "text": "in a way in some cases probably not but I don't know what were you going to say Mark do you like generics uh so well",
    "start": "1805279",
    "end": "1812600"
  },
  {
    "text": "what I was going to say is I grew up my first job I was writing Java and we didn't have generics then I went to Ruby",
    "start": "1812600",
    "end": "1820360"
  },
  {
    "text": "and we didn't have generics then I no nothing how old are you no carry",
    "start": "1820360",
    "end": "1825600"
  },
  {
    "text": "on I'm old I'm old my first job out of college was yeah any I actually was",
    "start": "1825600",
    "end": "1831120"
  },
  {
    "text": "doing ASP so I kind of lied I skipped thep classic",
    "start": "1831120",
    "end": "1837080"
  },
  {
    "text": "as was classic full of banter in the comments it was it was as classic as",
    "start": "1837080",
    "end": "1843519"
  },
  {
    "text": "varable Nam oh he had a blast absolutely good times now I can't even",
    "start": "1843519",
    "end": "1849799"
  },
  {
    "text": "remember what I was talking about oh program generics thank you um and I've never and I so I've never worked in a",
    "start": "1849799",
    "end": "1856200"
  },
  {
    "text": "language that has had generics to date kind of built in as we know as the term",
    "start": "1856200",
    "end": "1861639"
  },
  {
    "text": "generics is known throughout the community I have as of yet run into one area in",
    "start": "1861639",
    "end": "1868080"
  },
  {
    "text": "particular where I'm like ah generics would have been perfect there I've been coding for over 20s something years",
    "start": "1868080",
    "end": "1876120"
  },
  {
    "text": "professionally so I think I like the idea of what generics can possibly do for the language I'm also afraid of",
    "start": "1876120",
    "end": "1884000"
  },
  {
    "text": "everything they can do to the language yeah okay well we're going to find out",
    "start": "1884000",
    "end": "1890360"
  },
  {
    "text": "though we'll find out together and don't worry if you're scared by generics go time is your friend well cuz I can see",
    "start": "1890360",
    "end": "1897279"
  },
  {
    "text": "performance problems right cuz I you know we're just talking about people coming to go and abusing concurrency and",
    "start": "1897279",
    "end": "1904559"
  },
  {
    "text": "let's be honest that's what we were talking about we were being very nice about a calling a mistake but we right",
    "start": "1904559",
    "end": "1910440"
  },
  {
    "text": "it's abusing the technology right and we all did it when we first came new people come and they do it and that's the",
    "start": "1910440",
    "end": "1916399"
  },
  {
    "text": "mistake CU we keep AB it right but I see that mistake to again with generics and",
    "start": "1916399",
    "end": "1921840"
  },
  {
    "text": "I can see everybody rushing to implement everything in generics and I can see",
    "start": "1921840",
    "end": "1927880"
  },
  {
    "text": "programs crawling to a halt because everything's super slow or and like tools that are you know parsing things",
    "start": "1927880",
    "end": "1935240"
  },
  {
    "text": "and working you know in all these different ways and go are now going to be not supported or working incorrectly",
    "start": "1935240",
    "end": "1941559"
  },
  {
    "text": "because of generics or they need to be able I just see a lot of potential okay",
    "start": "1941559",
    "end": "1947120"
  },
  {
    "text": "you know mistakes coming down the if we're going to keep using that term mistakes coming down the pipe here yeah",
    "start": "1947120",
    "end": "1953559"
  },
  {
    "text": "I take a more optimistic view uh my goodness no I mean I do see the same",
    "start": "1953559",
    "end": "1960519"
  },
  {
    "text": "danger Marx's I guess I'm choosing to look beyond what happens after the initial you know Spike and all sort of",
    "start": "1960519",
    "end": "1968120"
  },
  {
    "text": "the the abuse yeah but that's going to be the first couple years and those those couple years are going to stick",
    "start": "1968120",
    "end": "1973840"
  },
  {
    "text": "with us for five or 10 years yeah I mean optimistic Johnny still feeling",
    "start": "1973840",
    "end": "1978880"
  },
  {
    "text": "optimistic no I I'm no no no no I'm I'm climate change Johnny I",
    "start": "1978880",
    "end": "1985919"
  },
  {
    "text": "mean look the way things are going we won't be around maybe to see the change after the spike that's a good point I",
    "start": "1985919",
    "end": "1991840"
  },
  {
    "text": "shouldn't worry about generics cuz climate change is going to take care of everything I'm still worrying about",
    "start": "1991840",
    "end": "1997159"
  },
  {
    "text": "modules I don't have time to worry about generics wasn't there an episode on that last time yeah yeah I think we hit that",
    "start": "1997159",
    "end": "2003760"
  },
  {
    "text": "right yeah they don't let me on those episodes anymore Johnny are there other kind of common mistakes that you've seen",
    "start": "2003760",
    "end": "2011000"
  },
  {
    "text": "well I can give you one from personal experience which actually dovet Tales quite nicely with the very thing we were",
    "start": "2011000",
    "end": "2017480"
  },
  {
    "text": "just talking about with the sort of the abuse of concurrency right so when I first came to go and you know my previous language before that was a ruby",
    "start": "2017480",
    "end": "2024200"
  },
  {
    "text": "and basically I was like oh this is so easy to do concurrent stuff right so I started sprinkling on everything right",
    "start": "2024200",
    "end": "2030000"
  },
  {
    "text": "you know and I was oh channels how do I use you didn't have you you don't need to for for those who don't know you don't have to use channels to use go",
    "start": "2030000",
    "end": "2036120"
  },
  {
    "text": "concurrency right they're a communication medium right synchronization medium right so you can",
    "start": "2036120",
    "end": "2041159"
  },
  {
    "text": "have simpler mechanisms like a we group or you know things like that so you don't have to use in all fairness I",
    "start": "2041159",
    "end": "2047519"
  },
  {
    "text": "don't mean to interrupt Johnny but I'm going to cool go right ahead early in the days of concurrency we only had",
    "start": "2047519",
    "end": "2054358"
  },
  {
    "text": "channels we didn't have a lot of the other Primitives for controlling things like weight groups air groups those came",
    "start": "2054359",
    "end": "2060960"
  },
  {
    "text": "after yeah context package context and stuff like that so all of the early documentation all those early blog posts",
    "start": "2060960",
    "end": "2068440"
  },
  {
    "text": "and videos everybody's like you got to use channels to start and stop go routines and keep them in sync and",
    "start": "2068440",
    "end": "2074200"
  },
  {
    "text": "protect mutex or whatever anyway go on yeah you like that that's that's his",
    "start": "2074200",
    "end": "2080158"
  },
  {
    "text": "grumpy old man voice my normal voice is my grumpy old man voice that was my Grumpier Old Man",
    "start": "2080159",
    "end": "2087240"
  },
  {
    "text": "voice as he as he climbs in age everybody um that's what I'm going to sound like",
    "start": "2087240",
    "end": "2092839"
  },
  {
    "text": "in 5 years right right no but the personal experience is one where basically you know I was actually uh in",
    "start": "2092839",
    "end": "2097960"
  },
  {
    "text": "charge of building this sort of a batch sort of job thing where I'm I'm communicating with some remote uh",
    "start": "2097960",
    "end": "2103880"
  },
  {
    "text": "endpoint and making multiple API requests and for some reason there was no batch sort of you know API endpoint",
    "start": "2103880",
    "end": "2109800"
  },
  {
    "text": "to hit to give you a bunch of stuff you kind of had to make you know singular request if you will so I'm like Yay Goin",
    "start": "2109800",
    "end": "2115520"
  },
  {
    "text": "are great for that right so I basically you know I do testing not always test driven development but I always test my",
    "start": "2115520",
    "end": "2120920"
  },
  {
    "text": "code there's a difference we'll get into that later but you know but you know I write my marks you know I have my stubs locally and everything else you know I'm",
    "start": "2120920",
    "end": "2127200"
  },
  {
    "text": "sort of Faking the API response and you know I'm throwing goes at it everything's going perfectly right",
    "start": "2127200",
    "end": "2132280"
  },
  {
    "text": "everything just works right and then I put the thing into uh production and then all of a sudden right those",
    "start": "2132280",
    "end": "2138520"
  },
  {
    "text": "hundreds of go routines perhaps even thousands of goes that I was launching to hit my U during testing this marck",
    "start": "2138520",
    "end": "2143880"
  },
  {
    "text": "endpoint now is actually really a real thing you know I start seeing a bunch of 429s in HTTP status code in my in my",
    "start": "2143880",
    "end": "2150240"
  },
  {
    "text": "logs like like what's going on what's going on right for those who don't know HTP status code 429 means basically you're making too many requests the",
    "start": "2150240",
    "end": "2156319"
  },
  {
    "text": "server on the other side is saying noas I'm not going to bother responding to you cuz you're simply abusing this API",
    "start": "2156319",
    "end": "2163040"
  },
  {
    "text": "basically oh your code was too good well perhaps not sensibly written",
    "start": "2163040",
    "end": "2168960"
  },
  {
    "text": "right again so what you do put a sleep in before each one random sleep yeah",
    "start": "2168960",
    "end": "2174960"
  },
  {
    "text": "just that fixes it doesn't it do that Sol the problem fix it yeah it was one of those things where I'm like yes",
    "start": "2174960",
    "end": "2180280"
  },
  {
    "text": "perhaps you know too much concurrency right will bite you right so you know you have to factor in and which is",
    "start": "2180280",
    "end": "2187200"
  },
  {
    "text": "something I also teach when I'm talking about go concurrency you have to factor in the constraints of your system like go is not going to be your bottleneck",
    "start": "2187200",
    "end": "2193240"
  },
  {
    "text": "the language is not going to be you know the thing that makes your stuff doesn't you know go slow like your databases are",
    "start": "2193240",
    "end": "2199359"
  },
  {
    "text": "going to be you know bottlenecks you know the network is going to be your bottleneck right the third party endpoint you have to talk to right over",
    "start": "2199359",
    "end": "2204839"
  },
  {
    "text": "the wire that's going to be your bottleneck right not the language so factoring the constraints that you have to work with what problem are you",
    "start": "2204839",
    "end": "2210960"
  },
  {
    "text": "solving what are the constraints that exist within that problem domain the language itself like you know that's not",
    "start": "2210960",
    "end": "2216119"
  },
  {
    "text": "your problem that's you know we teach the same thing at go for guides you know and that's one",
    "start": "2216119",
    "end": "2221599"
  },
  {
    "text": "of the nice things about go right is for 98 or even higher percent of us the",
    "start": "2221599",
    "end": "2229359"
  },
  {
    "text": "language has our back in terms of performance and just making sure we're not shooting ourselves too badly in the",
    "start": "2229359",
    "end": "2236560"
  },
  {
    "text": "foot you know and it is it's the database it's the network it's the file",
    "start": "2236560",
    "end": "2241839"
  },
  {
    "text": "system right those are the things they're going to make your app just craw C cra cra crawl it's not going to be",
    "start": "2241839",
    "end": "2249000"
  },
  {
    "text": "that little bit of business logic you have in validating a struct to make sure that there's an email address in a first",
    "start": "2249000",
    "end": "2255599"
  },
  {
    "text": "day like those like all that sort of stuff it's the network calls it's your database which is just a network call",
    "start": "2255599",
    "end": "2261520"
  },
  {
    "text": "unto itself that's all a database is or you're calling the file system if it's",
    "start": "2261520",
    "end": "2266839"
  },
  {
    "text": "which is just as even worse than the network half the time right so yeah it's those are all real issues that I think",
    "start": "2266839",
    "end": "2273680"
  },
  {
    "text": "people just kind of get in their heads and they the language they need to fix it in the language and not kind of look",
    "start": "2273680",
    "end": "2279880"
  },
  {
    "text": "at what they're programming and what they're coding and say okay let me focus on that and find those performance",
    "start": "2279880",
    "end": "2286400"
  },
  {
    "text": "issues later when they become that problem this is I think the second time we've come back to that kind of con yeah",
    "start": "2286400",
    "end": "2293680"
  },
  {
    "text": "it's an important one it comes up a lot it's worth bearing in mind as you're underway as you're writing code is worth",
    "start": "2293680",
    "end": "2300040"
  },
  {
    "text": "bearing in mind yeah so TAA there's also another one about time after this is",
    "start": "2300040",
    "end": "2305440"
  },
  {
    "text": "from the book time after you can possibly have a memory leak y so well",
    "start": "2305440",
    "end": "2312440"
  },
  {
    "text": "not really memory leak per se but yeah having a peak of resource consumption in some specific cases let's say so just as",
    "start": "2312440",
    "end": "2320040"
  },
  {
    "text": "a reminder time. after that accept as an inputed time do duration right and it",
    "start": "2320040",
    "end": "2326319"
  },
  {
    "text": "returns a Channel of time do time right and it waits for the duration to elapse",
    "start": "2326319",
    "end": "2332200"
  },
  {
    "text": "and then sends the current time on the return Channel and most of the the time it's also used in concurrent application",
    "start": "2332200",
    "end": "2339280"
  },
  {
    "text": "let's say because of the handy Channel otherwise if we just want to wait some time in the current go routine we can",
    "start": "2339280",
    "end": "2345480"
  },
  {
    "text": "just use time. sleep right so let's say that let let's imagine we want to implement a kind of smart consumer I",
    "start": "2345480",
    "end": "2353520"
  },
  {
    "text": "don't know how to call it that will keep receiving messages from a channel right",
    "start": "2353520",
    "end": "2360400"
  },
  {
    "text": "but let's say if we don't receive any messages for let's say one hour we also",
    "start": "2360400",
    "end": "2366920"
  },
  {
    "text": "want to log a message right to log an alert for for example or something like this yeah and one way we could implement",
    "start": "2366920",
    "end": "2375720"
  },
  {
    "text": "it is using time. after in this case and we could say I will have a for loop with",
    "start": "2375720",
    "end": "2381599"
  },
  {
    "text": "a select inside and two cases and in the first case I'm going to receive messages",
    "start": "2381599",
    "end": "2387680"
  },
  {
    "text": "from the channel and then call a function do do whatever with this the message we have received right and in",
    "start": "2387680",
    "end": "2393839"
  },
  {
    "text": "the second case we are going to re receive on the channel That is returned",
    "start": "2393839",
    "end": "2399440"
  },
  {
    "text": "by time. after to loog the alert I haven't received a message in since one",
    "start": "2399440",
    "end": "2404480"
  },
  {
    "text": "hour right so in that case let's say we just deploy our application we keep receiving messages that's great but we",
    "start": "2404480",
    "end": "2411319"
  },
  {
    "text": "notice that it consume more and more memory and seem it seems to steadily increase actually so what's the reason",
    "start": "2411319",
    "end": "2418480"
  },
  {
    "text": "actually for that we have to know that in every iteration go will actually",
    "start": "2418480",
    "end": "2425640"
  },
  {
    "text": "evaluate time. after and it will create a new channel and we may actually expect",
    "start": "2425640",
    "end": "2432359"
  },
  {
    "text": "this channel to be closed in every iteration but it's not the case actually",
    "start": "2432359",
    "end": "2437480"
  },
  {
    "text": "the resources that are created by time.a including the channel itself they will",
    "start": "2437480",
    "end": "2443240"
  },
  {
    "text": "be released once the timeout expires right so in the worst case scenario",
    "start": "2443240",
    "end": "2448599"
  },
  {
    "text": "where we keep receiving a high volume of messages we will keep looping we will",
    "start": "2448599",
    "end": "2453720"
  },
  {
    "text": "repeatedly call time. after in each duration and it would keep creating",
    "start": "2453720",
    "end": "2458800"
  },
  {
    "text": "resources until the duration in our case 1 hour uh yeah elapses basically yeah",
    "start": "2458800",
    "end": "2465599"
  },
  {
    "text": "now I have definitely made this mistake um doing exactly hang I'll I'll be right",
    "start": "2465599",
    "end": "2471240"
  },
  {
    "text": "I'll be right back I got to go fix something yeah yeah yeah I mean and so the answer must",
    "start": "2471240",
    "end": "2477359"
  },
  {
    "text": "be to create the channel outside what's the answer how do you",
    "start": "2477359",
    "end": "2482680"
  },
  {
    "text": "avoid that there are different solutions one them could be to say I can use",
    "start": "2482680",
    "end": "2488240"
  },
  {
    "text": "context. with timeout but it's not perfect nonetheless because it would mean that in every iteration I have to",
    "start": "2488240",
    "end": "2494280"
  },
  {
    "text": "call. context. with timeout and it's going to create a channel it's not lightweight here the most appropriate",
    "start": "2494280",
    "end": "2500280"
  },
  {
    "text": "solution could be to use within the time package the timer structure yeah the",
    "start": "2500280",
    "end": "2506119"
  },
  {
    "text": "timer structure basically we can create it with timer. new Tim where we pass a",
    "start": "2506119",
    "end": "2511359"
  },
  {
    "text": "Time duration and internally it has a channel field that we can access timer.",
    "start": "2511359",
    "end": "2517280"
  },
  {
    "text": "C and it has also a reset method and the reset method that's going to reset",
    "start": "2517280",
    "end": "2524200"
  },
  {
    "text": "basically the duration so what we could do in our case we could say Okay during the well before to to to Loop I'm going",
    "start": "2524200",
    "end": "2531079"
  },
  {
    "text": "to create this timer in the second case I'm going to listen on the timer. C",
    "start": "2531079",
    "end": "2536400"
  },
  {
    "text": "field which is the channel right in every and then in every Loop iteration",
    "start": "2536400",
    "end": "2542000"
  },
  {
    "text": "I'm going to call time. reset to reset the duration and here it will just reuse",
    "start": "2542000",
    "end": "2549520"
  },
  {
    "text": "the same channel basically so it won't have to create a new channel so yep that's probably the most appropriate",
    "start": "2549520",
    "end": "2555920"
  },
  {
    "text": "solution here so is it possible to use time after in a safe way then or should we just avoid it all together I believe",
    "start": "2555920",
    "end": "2563720"
  },
  {
    "text": "if we are in the context of a function that keeps being called well be it in a",
    "start": "2563720",
    "end": "2571960"
  },
  {
    "text": "loop for example or we can have also the the case in an HTTP Handler right",
    "start": "2571960",
    "end": "2577280"
  },
  {
    "text": "because in an HTTP Handler if we call time. after and that we keep calling this HTTP Handler we may have the same",
    "start": "2577280",
    "end": "2584160"
  },
  {
    "text": "case right so my recommendation here is probably to not use time do after when we are in a context of a function being",
    "start": "2584160",
    "end": "2592200"
  },
  {
    "text": "called repeatedly right yeah that's a good one nice yeah that is a good one",
    "start": "2592200",
    "end": "2598000"
  },
  {
    "text": "very good one [Applause]",
    "start": "2598000",
    "end": "2603040"
  },
  {
    "text": "[Music] yeah this episode is brought to you by our",
    "start": "2603040",
    "end": "2609000"
  },
  {
    "text": "friends at gitlab gitlab is inviting you to attend gitlab commit 2021 their",
    "start": "2609000",
    "end": "2614280"
  },
  {
    "text": "upcoming user Community event August 3rd and 4th it's free it's virtual and",
    "start": "2614280",
    "end": "2619880"
  },
  {
    "text": "everyone can attend learn more about modern devops and how it transforms companies of all sizes and pushes teams",
    "start": "2619880",
    "end": "2625839"
  },
  {
    "text": "to drive Innovation to market during this two-day conference attendees across all time zones will learn how they can",
    "start": "2625839",
    "end": "2631520"
  },
  {
    "text": "instill modern devops practices at their organizations through in-depth trainings and workshops hear firsthand stories",
    "start": "2631520",
    "end": "2637880"
  },
  {
    "text": "from some of the most well-known companies and gain insight into Cutting Edge cicd and security technologies that",
    "start": "2637880",
    "end": "2644720"
  },
  {
    "text": "bring companies to the next level get ready to innovate together during this free event designed to help you to commit to better devops register and",
    "start": "2644720",
    "end": "2651880"
  },
  {
    "text": "learn more at gitlab commit virtual 2021.com once again that's gitlab commit",
    "start": "2651880",
    "end": "2658079"
  },
  {
    "text": "virtual 2021.com or check for links in the show",
    "start": "2658079",
    "end": "2663760"
  },
  {
    "text": "notes [Music]",
    "start": "2665000",
    "end": "2670280"
  },
  {
    "text": "bites you were talking earlier about another common gotcha yes I was to do",
    "start": "2681040",
    "end": "2687440"
  },
  {
    "text": "with the API footprint that you export",
    "start": "2687440",
    "end": "2693119"
  },
  {
    "text": "oh and and by talking about that earlier you mean in the private message I sent you this morning completely offline and",
    "start": "2693119",
    "end": "2701119"
  },
  {
    "text": "out of context of this call you weren't talking about it earlier on this podcast it's just a mistake it's part of the",
    "start": "2701119",
    "end": "2706720"
  },
  {
    "text": "theme of the show I'm going to be making lots of mistakes I love it it yeah",
    "start": "2706720",
    "end": "2714039"
  },
  {
    "text": "so so yeah well you know Matt obviously asked us all to submit kind of common mistakes that we see a lot telling them",
    "start": "2716400",
    "end": "2723040"
  },
  {
    "text": "how we do one of the ones just do the thing don't tell them we've done it well it's a mate it's not that big a",
    "start": "2723040",
    "end": "2731440"
  },
  {
    "text": "deal I know you know the sausage is being made that's the problem though is I want them to think this show is way",
    "start": "2731440",
    "end": "2738079"
  },
  {
    "text": "more sophisticated than just me texting you while you're having your cereal well that would be his mistake",
    "start": "2738079",
    "end": "2743599"
  },
  {
    "text": "now wouldn't it well exactly anyway one of the things I see",
    "start": "2743599",
    "end": "2750119"
  },
  {
    "text": "new developers to go do a lot is basically export everything",
    "start": "2750119",
    "end": "2756800"
  },
  {
    "text": "H everything starts with a capital letter and that's it like their entire",
    "start": "2756800",
    "end": "2762319"
  },
  {
    "text": "package all of their types every field in their type every method on their types everything is public and of course",
    "start": "2762319",
    "end": "2769240"
  },
  {
    "text": "when you do that you can't take that back now you like that's it it's out there as soon as people start hooking",
    "start": "2769240",
    "end": "2775440"
  },
  {
    "text": "into it and I feel you know I mean modules have made this",
    "start": "2775440",
    "end": "2781359"
  },
  {
    "text": "problem little more complicated in some areas but it's one of the big issues I",
    "start": "2781359",
    "end": "2787079"
  },
  {
    "text": "see where you know where people should be starting with everything unexported and only pushing up those pieces that",
    "start": "2787079",
    "end": "2794280"
  },
  {
    "text": "they need I think it's a lot to do with just people misunderstanding the way go",
    "start": "2794280",
    "end": "2800440"
  },
  {
    "text": "does exporting and unexp porting because it's different than every other language",
    "start": "2800440",
    "end": "2806240"
  },
  {
    "text": "I've used this whole idea of capitalization to infer whether it's",
    "start": "2806240",
    "end": "2811599"
  },
  {
    "text": "public or private I love it now that like once I got it I'm like oh that's brilliant cuz I can look at anything in",
    "start": "2811599",
    "end": "2817280"
  },
  {
    "text": "my system and immediately know whether it's visible or not right I'm not",
    "start": "2817280",
    "end": "2822440"
  },
  {
    "text": "scrolling up to look for a private or protected method above it but at the same point I think new people come to",
    "start": "2822440",
    "end": "2827520"
  },
  {
    "text": "the language and they see things that are uppercased or whatever and they think I'll just uppercase everything",
    "start": "2827520",
    "end": "2832800"
  },
  {
    "text": "because it's a proper word it's the user struct so therefore you must be capital",
    "start": "2832800",
    "end": "2838200"
  },
  {
    "text": "u so would you say that people should just by default use lowercase letters everywhere until you then need to export",
    "start": "2838200",
    "end": "2845960"
  },
  {
    "text": "for some reason yeah I mean you'd have to sell me on why you would want to do it the other",
    "start": "2845960",
    "end": "2851960"
  },
  {
    "text": "way around you know I mean there are definitely types when I start I open up a package and I go this type has to be",
    "start": "2851960",
    "end": "2858480"
  },
  {
    "text": "because you're thinking about the use of that package the actual API because I know what the use of this package is",
    "start": "2858480",
    "end": "2864280"
  },
  {
    "text": "right but you know so I'll say okay my user type I need to export because I need other people to use it but the",
    "start": "2864280",
    "end": "2870000"
  },
  {
    "text": "fields may or may not be fully exported right like you know or the methods might",
    "start": "2870000",
    "end": "2875079"
  },
  {
    "text": "all start as unexported methods until I need one to be promoted I needed to use",
    "start": "2875079",
    "end": "2881200"
  },
  {
    "text": "it outside the package and again it's like well do I need that method or do I need something similar to that method",
    "start": "2881200",
    "end": "2887880"
  },
  {
    "text": "that might be better well-coded X Y and Z or somewhere else right so you know what you just made me think of it wasn't",
    "start": "2887880",
    "end": "2894200"
  },
  {
    "text": "a deliberate Choice I'm glad this is coming out of your mind and not mine",
    "start": "2894200",
    "end": "2900200"
  },
  {
    "text": "on yeah not I think about it wasn't a deliberate Choice it was more of a I don't maybe I'm sort of ad ing some of",
    "start": "2900280",
    "end": "2906240"
  },
  {
    "text": "Mark's grumpy old you know dude sort of persona but I was like my interfaces",
    "start": "2906240",
    "end": "2911400"
  },
  {
    "text": "right inside of my packages I don't export those at all because I don't want the consumer of that package to have a",
    "start": "2911400",
    "end": "2917559"
  },
  {
    "text": "dependency on my own abstractions my own interfaces right so it's almost like I say well if you want to create",
    "start": "2917559",
    "end": "2924440"
  },
  {
    "text": "abstractions or whatever it is you create your own interface create a local interface to you right for whatever I'm going to you know hand over to you but I",
    "start": "2924440",
    "end": "2930400"
  },
  {
    "text": "don't export I don't tend to rather expose my interfaces for my packages it",
    "start": "2930400",
    "end": "2935839"
  },
  {
    "text": "wasn't deliberate it it just kind of happened oh amazing I do expose a decent amount of interfaces but I also write a",
    "start": "2935839",
    "end": "2944440"
  },
  {
    "text": "lot of local unexported interfaces inside of another function or method",
    "start": "2944440",
    "end": "2951160"
  },
  {
    "text": "sometimes all right in line yeah yeah just in line because I want to check does it have this method on it and if so",
    "start": "2951160",
    "end": "2957000"
  },
  {
    "text": "I want to call it you know and I don't need some big interface somewhere else I can just do it right there in line and",
    "start": "2957000",
    "end": "2963000"
  },
  {
    "text": "that's one of the nice things about go is that you can do that sort of thing but that's an advanced feature Johnny",
    "start": "2963000",
    "end": "2968480"
  },
  {
    "text": "that's a feature that when I don't know about you when I teach I you know I teach a lot of intro to go at at goer",
    "start": "2968480",
    "end": "2975599"
  },
  {
    "text": "guides and interfaces is one of those things that people really struggle with",
    "start": "2975599",
    "end": "2981640"
  },
  {
    "text": "coming to go and it it surprises me because they're on the surface",
    "start": "2981640",
    "end": "2986920"
  },
  {
    "text": "relatively easy like there's not a lot to them it's a collection of methods you",
    "start": "2986920",
    "end": "2992480"
  },
  {
    "text": "either Implement those methods or you don't right but people really struggle with that they struggle with the",
    "start": "2992480",
    "end": "2997720"
  },
  {
    "text": "implicit versus explicit Declaration of an interface I'm not impling you know",
    "start": "2997720",
    "end": "3003640"
  },
  {
    "text": "this isn't my Foo imple of this interface right and then they certainly",
    "start": "3003640",
    "end": "3008839"
  },
  {
    "text": "don't realize that you can create in line unexported types and interfaces",
    "start": "3008839",
    "end": "3016559"
  },
  {
    "text": "like inside of a method to make your life even that much more easy right there right yeah one downside to that",
    "start": "3016559",
    "end": "3022599"
  },
  {
    "text": "technique is you can hide things inside the function it's not always obvious that you know you have to use docs or",
    "start": "3022599",
    "end": "3029160"
  },
  {
    "text": "something to say if it implements this interface then it'll have this different Behavior so it is quite an advanced case",
    "start": "3029160",
    "end": "3035799"
  },
  {
    "text": "I think it it's very much so is I use it mostly in an exception case where I've",
    "start": "3035799",
    "end": "3041640"
  },
  {
    "text": "got an error or something and I'm trying I want to try to see if I can inspect a bit more information out of this thing",
    "start": "3041640",
    "end": "3048799"
  },
  {
    "text": "if I can otherwise if I'm letting people know that I'm supporting these methods",
    "start": "3048799",
    "end": "3054680"
  },
  {
    "text": "via interface then I'll expose those interfaces more for the sake of hanging",
    "start": "3054680",
    "end": "3059880"
  },
  {
    "text": "documentation on them that you know just saying like hey this method is going to take these five",
    "start": "3059880",
    "end": "3065520"
  },
  {
    "text": "interfaces so it's a documentation Thing versus a required to be passed in well",
    "start": "3065520",
    "end": "3072160"
  },
  {
    "text": "it's that time again Tia hold this base Johnny you're on the drums Bates pick up the guitar it's time for unpopular",
    "start": "3072160",
    "end": "3080250"
  },
  {
    "text": "[Music] opinions opion you want I actually think",
    "start": "3080250",
    "end": "3087240"
  },
  {
    "text": "should probably [Music]",
    "start": "3087240",
    "end": "3095520"
  },
  {
    "text": "leave who's got a meaty po unpopular opinion said it wrong I do I'll fire the",
    "start": "3095520",
    "end": "3102319"
  },
  {
    "text": "first Salvo okay okay that came out of nowhere you",
    "start": "3102319",
    "end": "3108359"
  },
  {
    "text": "look surprised yeah I was surprised yeah I don't often have unpopular opinions M I know cuz you're nice that's what we",
    "start": "3108359",
    "end": "3114680"
  },
  {
    "text": "were saying earlier Mark privately and attack that's what we were saying earlier yes we were saying what a nice",
    "start": "3114680",
    "end": "3121559"
  },
  {
    "text": "guy Johnny was yeah yeah that's don't you think Mark Bates looks like he's don't think Mark Bates looks like he's",
    "start": "3121559",
    "end": "3127760"
  },
  {
    "text": "just got back from being Shipwrecked I made fire I've been stuck on that island for so long thinking",
    "start": "3127760",
    "end": "3135960"
  },
  {
    "text": "about generics and stewing away I'm like Curly from loss somehow I gain weight being stranded on a desert island I'm",
    "start": "3135960",
    "end": "3142640"
  },
  {
    "text": "not quite sure how that happened you look great though M really my beard only jealous that's your that's your unpopular opinion we'll ask that that I",
    "start": "3142640",
    "end": "3150559"
  },
  {
    "text": "look good cuz that is definitely an unpopular opinion in would make a good guess who character from that game Guess",
    "start": "3150559",
    "end": "3156880"
  },
  {
    "text": "Who like way more interesting yeah fair enough can I opine",
    "start": "3156880",
    "end": "3162359"
  },
  {
    "text": "now please yeah go for it please help us I have to break this up all right uh",
    "start": "3162359",
    "end": "3169200"
  },
  {
    "text": "yeah and for those who don't know this is actually what happens in real life too yeah yeah it's h know from I'd be getting a piggy",
    "start": "3169200",
    "end": "3176000"
  },
  {
    "text": "back off baits by now uh-huh that's true and there's usually a lot more food involved yeah and alcohol yeah sadly",
    "start": "3176000",
    "end": "3182520"
  },
  {
    "text": "anyways the the yeah so my you guys all right still waiting on you I'm trying",
    "start": "3182520",
    "end": "3188200"
  },
  {
    "text": "I'm trying to get it out y'all keep making me laugh all right so here here it is here",
    "start": "3188200",
    "end": "3194240"
  },
  {
    "text": "it is I think everybody coming to go should make as many mistakes as possible",
    "start": "3194240",
    "end": "3199480"
  },
  {
    "text": "cuz that's how you learn that's how you learn I don't think that's an unpopular well I've never heard that I'm going to",
    "start": "3199480",
    "end": "3204559"
  },
  {
    "text": "disagree with what cuz I think the adage of making mistakes is like people know that you're",
    "start": "3204559",
    "end": "3210119"
  },
  {
    "text": "supposed to learn from your mistakes and mistakes are good so I like don't go and purposefully make mistakes I don't know",
    "start": "3210119",
    "end": "3215920"
  },
  {
    "text": "how You' even do that cuz they're not mistakes then you're just breaking your code like Johnny said I should make my",
    "start": "3215920",
    "end": "3222280"
  },
  {
    "text": "code terrible I should introduce as many bugs as possible if I'm going to become a",
    "start": "3222280",
    "end": "3227799"
  },
  {
    "text": "better go developer that's not I think what Johnny was trying to say hope cuz",
    "start": "3227799",
    "end": "3233200"
  },
  {
    "text": "that really would be an unpopular opinion Johnny says do a terrible job at work and you'll become a better go",
    "start": "3233200",
    "end": "3239839"
  },
  {
    "text": "developer bre all the things no no no no so here's here's some Nuance so here's some new ones so I",
    "start": "3239839",
    "end": "3246000"
  },
  {
    "text": "don't know about y'all but when I'm learning something like you know maybe on the job or you know if I know that",
    "start": "3246000",
    "end": "3251119"
  },
  {
    "text": "some point somebody's going to look at whatever it is I'm that I'm trying to do like I go into this sort of learning paralysis where I just keep learning and",
    "start": "3251119",
    "end": "3258200"
  },
  {
    "text": "learning and learning and reading and reading and watching and watching just consuming everything I possibly can so that the first piece of code I write has",
    "start": "3258200",
    "end": "3264839"
  },
  {
    "text": "to be perfect right because I'm so sort of sensitive to the criticism right over",
    "start": "3264839",
    "end": "3270640"
  },
  {
    "text": "time I've sort of learned to sort of uh feel less of that sort of I guess pain or feeling of inadequacy and whatnot but",
    "start": "3270640",
    "end": "3277200"
  },
  {
    "text": "like I will spend a ton of time just becoming an expert at something without like actual practical knowledge that",
    "start": "3277200",
    "end": "3282640"
  },
  {
    "text": "actually does make you an expert so don't be in a learning paralysis sort of mode right like put stuff out there make",
    "start": "3282640",
    "end": "3289280"
  },
  {
    "text": "mistakes talk about it right it's okay and this is the internet you will find a jerk that says hey you know this stuff",
    "start": "3289280",
    "end": "3294760"
  },
  {
    "text": "is C crap that's fine brush it off right most people are not like that right so",
    "start": "3294760",
    "end": "3299839"
  },
  {
    "text": "don't be paralyzed right just make mistakes in public learn in public that's okay and that also extends like",
    "start": "3299839",
    "end": "3306000"
  },
  {
    "text": "we should be forgiving as well when we see people making mistakes like when you give that feedback do that in a way",
    "start": "3306000",
    "end": "3312040"
  },
  {
    "text": "don't be that jerk yeah yeah don't be that jerk do it yeah we all do it Johnny I think you and I have very different",
    "start": "3312040",
    "end": "3317799"
  },
  {
    "text": "coding Styles cuz well you know you said like I want to learn something new and what I'll do is I'll go and I'll find",
    "start": "3317799",
    "end": "3324680"
  },
  {
    "text": "something says like this is how you get up and started to hello world and that's",
    "start": "3324680",
    "end": "3329760"
  },
  {
    "text": "usually where I drop off and I just start coding and just like start hacking",
    "start": "3329760",
    "end": "3335359"
  },
  {
    "text": "and like throwing things in like well that didn't work what the hell and like so I personally that's the way I code",
    "start": "3335359",
    "end": "3342680"
  },
  {
    "text": "when I'm learning something new anyway like you know if it's a brand new tool a package a library some concept I've",
    "start": "3342680",
    "end": "3348400"
  },
  {
    "text": "never done before I just write code I I can't just read and read and read I got",
    "start": "3348400",
    "end": "3354240"
  },
  {
    "text": "to just bang it out until I get to a point where I go oh that worked that worked yay now how do I make that clean",
    "start": "3354240",
    "end": "3361720"
  },
  {
    "text": "and good and do what I actually want it to do not just I got it to make a",
    "start": "3361720",
    "end": "3368280"
  },
  {
    "text": "connection and return hi to me you know like great now let's take this Andy try yeah you can't really you learn so much",
    "start": "3368280",
    "end": "3375000"
  },
  {
    "text": "by building the real thing and this also speaks to like software engineering generally we want to design it all up",
    "start": "3375000",
    "end": "3381280"
  },
  {
    "text": "front sometimes we want to know exactly what it's going to be so we can do good estimates and things you learn so much",
    "start": "3381280",
    "end": "3388119"
  },
  {
    "text": "by doing it so get on and do it you'll just make so much more ground and making",
    "start": "3388119",
    "end": "3393720"
  },
  {
    "text": "mistakes in that sense is great because that really is how you find out what the",
    "start": "3393720",
    "end": "3398760"
  },
  {
    "text": "real thing to do is sometimes it's impossible to know upfront isn't it yeah I'd say nine out of 10 times I run tests",
    "start": "3398760",
    "end": "3405680"
  },
  {
    "text": "they fail yeah and I'm okay with that most of the time there are times that I'm like why the hell are you feeling",
    "start": "3405680",
    "end": "3411000"
  },
  {
    "text": "but other time most of the times it's like yeah okay still not there yet I just got to keep that didn't work what",
    "start": "3411000",
    "end": "3417920"
  },
  {
    "text": "can I try now to get this test to pass like we just keep making those mistakes so you find it and that's yeah",
    "start": "3417920",
    "end": "3423880"
  },
  {
    "text": "absolutely well speaking of mistakes T's book 100 mistakes is are you saying that that",
    "start": "3423880",
    "end": "3431640"
  },
  {
    "text": "is his book is a mistake goodness we treat our guests better than you're doing a terrible job I think it's a",
    "start": "3431640",
    "end": "3438319"
  },
  {
    "text": "wonderful book despite what you say don't don't believe what he says yeah TAA man Matt's great",
    "start": "3438319",
    "end": "3445319"
  },
  {
    "text": "jealous is not a mistake rude jealous his his blueprints book hasn't sold well",
    "start": "3445319",
    "end": "3451599"
  },
  {
    "text": "in years course it has it's absolutely full of mistakes he's just he's just yeah that's why it hasn't sold well on",
    "start": "3451599",
    "end": "3458000"
  },
  {
    "text": "your mate you can find out for yourself by buying my book and also getting a",
    "start": "3458000",
    "end": "3463280"
  },
  {
    "text": "we've got but Bas let's try this Bas you can go to my Toren site and just download his book",
    "start": "3463280",
    "end": "3469280"
  },
  {
    "text": "for that's how we treat friends we just put their stuff I'll put the link I'll put the link up on Twitter after to the",
    "start": "3469280",
    "end": "3475079"
  },
  {
    "text": "Shelf good thank you for putting it there so nobody will see it event um the",
    "start": "3475079",
    "end": "3481079"
  },
  {
    "text": "uh baits pick a number between 34 and 36 oh I hate the way this works 42 no a",
    "start": "3481079",
    "end": "3487400"
  },
  {
    "text": "number between 34 and 36 I'm not I was told there wouldn't be maths not really",
    "start": "3487400",
    "end": "3493119"
  },
  {
    "text": "maths is it 34 and 36 there's only one option mate yeah 35 okay 35% we're going",
    "start": "3493119",
    "end": "3500160"
  },
  {
    "text": "to give a 35% discount to anybody that wants to buy book using the secret code",
    "start": "3500160",
    "end": "3509200"
  },
  {
    "text": "pod gotime 21 that's pod goo",
    "start": "3509200",
    "end": "3514839"
  },
  {
    "text": "t21 and we're also going to be giving a free copy away as well T this is very",
    "start": "3514839",
    "end": "3520640"
  },
  {
    "text": "nice of you to do this so if you can tell me what title did Mark Bates give",
    "start": "3520640",
    "end": "3526280"
  },
  {
    "text": "himself by mistake earlier in this episode it's the something of mistakes",
    "start": "3526280",
    "end": "3531760"
  },
  {
    "text": "he gave himself this this very grandiose title as we come to expect from Mr",
    "start": "3531760",
    "end": "3536960"
  },
  {
    "text": "baates if you can tweet what that is we'll pick one over the next week tweet at gotime FM the answer to that and",
    "start": "3536960",
    "end": "3545480"
  },
  {
    "text": "we'll send you a secret code and you can get a a full ebook of 100 go mistakes",
    "start": "3545480",
    "end": "3551559"
  },
  {
    "text": "and how to avoid them that's good isn't it I like that it",
    "start": "3551559",
    "end": "3556680"
  },
  {
    "text": "is I like that it's cool I'd read that book you're going to try and win aren't you I mate I I mate I'm not quite sure",
    "start": "3556680",
    "end": "3564160"
  },
  {
    "text": "what I called myself actually I think but I just didn't think you'd say that on the air so I'm surprised well we'll",
    "start": "3564160",
    "end": "3570400"
  },
  {
    "text": "see hopefully it has to make it I'm only saying it so it makes it into the podcast episode now I've made it part of the format and that's how you do it it's",
    "start": "3570400",
    "end": "3577839"
  },
  {
    "text": "got to be it's got to be T thank you so much for joining us absolute pleasure to",
    "start": "3577839",
    "end": "3584440"
  },
  {
    "text": "have you here and learn about mistakes and uh good luck with your book we we look forward to reading it Johnny Boro",
    "start": "3584440",
    "end": "3590760"
  },
  {
    "text": "always a pleasure and Mark Bates was also here goodbye thank you thank you",
    "start": "3590760",
    "end": "3598440"
  },
  {
    "text": "so we have a bundle of awesome podcasts for you at changel log.com that includes",
    "start": "3599839",
    "end": "3605720"
  },
  {
    "text": "our brand new show ship it with Gard lazoo a podcast about getting your best",
    "start": "3605720",
    "end": "3611000"
  },
  {
    "text": "ideas into the world and seeing what happens it's about the code the Ops the infra and the people that make it happen",
    "start": "3611000",
    "end": "3618000"
  },
  {
    "text": "yes we focus on the people because everything else is an implementation detail subscribe now at",
    "start": "3618000",
    "end": "3624720"
  },
  {
    "text": "ship it or simply search for ship it in your favorite podcast app you'll find it and of course the Galaxy brain move is",
    "start": "3624720",
    "end": "3630839"
  },
  {
    "text": "to subscribe to our Master feed it's all changelog podcasts including go time and shipet in one place search changelog",
    "start": "3630839",
    "end": "3637920"
  },
  {
    "text": "Master feed or head to Chang log.com And subscribe today go time is produced by",
    "start": "3637920",
    "end": "3643400"
  },
  {
    "text": "Jared Santo with music by breakmaster cylinder we're brought to you by fastly launch darkley and Len Noe that is our",
    "start": "3643400",
    "end": "3650319"
  },
  {
    "text": "show for today but we'll talk to you again next week",
    "start": "3650319",
    "end": "3656520"
  },
  {
    "text": "[Music]",
    "start": "3659940",
    "end": "3663389"
  },
  {
    "text": "um okay brilliant stuff thank you again I mean this is it we've done the podcast",
    "start": "3668119",
    "end": "3673640"
  },
  {
    "text": "editors will turn that into something that sounds really professional okay right they'll just cut out all the parts",
    "start": "3673640",
    "end": "3678760"
  },
  {
    "text": "Mar Matt was speaking that's usually how doing you nearly said Mark as well I love that no I said I said I said Mark",
    "start": "3678760",
    "end": "3685839"
  },
  {
    "text": "and mat yeah oh yeah so it's just going to be 45 minutes or two VI speaking yeah",
    "start": "3685839",
    "end": "3691280"
  },
  {
    "text": "and that's it that's probably what people want anyway that's honestly that's probably a much better podcast",
    "start": "3691280",
    "end": "3696480"
  },
  {
    "text": "than what we just did yeah it's you just next time TAA you just do it we'll just",
    "start": "3696480",
    "end": "3701640"
  },
  {
    "text": "more like the uh audio audio book version of your book you could just read it with your accent that's the thing",
    "start": "3701640",
    "end": "3707680"
  },
  {
    "text": "people people love accents we're delivering you know Matt and I could do the audio reading of your book",
    "start": "3707680",
    "end": "3715319"
  },
  {
    "text": "say no TAA say no say no say no and we we do it for you know a reasonable rate",
    "start": "3715319",
    "end": "3720520"
  },
  {
    "text": "well one of us would take the the the narrative and one of us would take the code you said yeah can you so one would",
    "start": "3720520",
    "end": "3726720"
  },
  {
    "text": "be the voice of the code like you ever heard Matt do a the F path walk um rap",
    "start": "3726720",
    "end": "3733599"
  },
  {
    "text": "yeah that was my idea Mister okay um yeah but that that would",
    "start": "3733599",
    "end": "3739599"
  },
  {
    "text": "you read the code in like a Steven Hawking voice cuz it's kind of fixed width font well who says I'm reading the",
    "start": "3739599",
    "end": "3745559"
  },
  {
    "text": "code why can't you I want to do the narrative okay yeah you've got the sort of bouncy kind of voice you got to keep",
    "start": "3745559",
    "end": "3752480"
  },
  {
    "text": "the people interested you know I'll be just like reading out the code in a boring way yeah while having some te",
    "start": "3752480",
    "end": "3760440"
  },
  {
    "text": "exactly see TAA we got it all sorted out you just send us a copy of the book we'll get it to you in the mail by",
    "start": "3760440",
    "end": "3765640"
  },
  {
    "text": "Tuesday oh today's Tuesday and a day today we'll do it by end of day today we're that good yeah uh one take without",
    "start": "3765640",
    "end": "3772480"
  },
  {
    "text": "having read the book we'll just write down mistakes were made that would be a mistake many many mistakes were",
    "start": "3772480",
    "end": "3780000"
  },
  {
    "text": "made",
    "start": "3780000",
    "end": "3783000"
  }
]