[
  {
    "text": "[Music] this is JS party your weekly celebration",
    "start": "4500",
    "end": "9760"
  },
  {
    "text": "of JavaScript and the web good news everyone we just dropped dance party our",
    "start": "9760",
    "end": "16240"
  },
  {
    "text": "third fulllength album on Chang log beats buy it on band camp or stream it",
    "start": "16240",
    "end": "21600"
  },
  {
    "text": "on Spotify Apple music and the rest Link in the show notes enjoy the drop thank",
    "start": "21600",
    "end": "28279"
  },
  {
    "text": "you to our partners at fly .io launch your app close to your users find out",
    "start": "28279",
    "end": "33520"
  },
  {
    "text": "how at fly.io okay hey it is party time [Music]",
    "start": "33520",
    "end": "42719"
  },
  {
    "text": "y'all what's up friends this episode of GS party is brought to you by our",
    "start": "42719",
    "end": "48039"
  },
  {
    "text": "friends over at versel and I'm here with Lee Robinson VP a product Lee I know you",
    "start": "48039",
    "end": "53440"
  },
  {
    "text": "know the tagline for verel develop preview ship which has been perfect but now there's more after the ship process",
    "start": "53440",
    "end": "59960"
  },
  {
    "text": "you have to worry about security observability and other parts of just running an application and production",
    "start": "59960",
    "end": "66920"
  },
  {
    "text": "what's the story there what's beyond shipping for forell yeah you know when I'm building my side projects or when",
    "start": "66920",
    "end": "72600"
  },
  {
    "text": "I'm building my personal site it often looks like develop preview ship you know I try out some new features I try out a",
    "start": "72600",
    "end": "78240"
  },
  {
    "text": "new framework I'm just hacking around with something on the weekends everything looks good great I ship it",
    "start": "78240",
    "end": "83560"
  },
  {
    "text": "I'm done but as we talked to more customers as we've grown as a company as we've added new products there's a lot",
    "start": "83560",
    "end": "88920"
  },
  {
    "text": "more to the product port folio of forell nowadays to help pass that experience so when you're building larger more complex",
    "start": "88920",
    "end": "95680"
  },
  {
    "text": "products and when you're working with larger teams you want to have more features more functionality so tangibly",
    "start": "95680",
    "end": "101439"
  },
  {
    "text": "what that means is features like our forcell firewall product to help you be safe and to have that layer of security",
    "start": "101439",
    "end": "107520"
  },
  {
    "text": "features like our logging and observability tools so you can understand and observe your application in production understand if there's",
    "start": "107520",
    "end": "114320"
  },
  {
    "text": "errors understand if things are running smoothly and get alerted on those and also then really expansion of our",
    "start": "114320",
    "end": "120600"
  },
  {
    "text": "integration Suite as well too because you might already be using a tool like a data dog or you might already be using a",
    "start": "120600",
    "end": "127360"
  },
  {
    "text": "tool at the end of this software development life cycle that you want to integrate with to continue to scale and",
    "start": "127360",
    "end": "133120"
  },
  {
    "text": "secure and observe your application and we try to fit into to those as well too so we've kind of continued to bolster",
    "start": "133120",
    "end": "140319"
  },
  {
    "text": "and improve the last mile of delivery uh that sounds amazing so who's using the",
    "start": "140319",
    "end": "145480"
  },
  {
    "text": "versel platform like that can you share some names yeah I'm I'm thrilled that we have some amazing customers like Under",
    "start": "145480",
    "end": "151840"
  },
  {
    "text": "Armour Nintendo Washington Post zapier who use verceles R running Cloud to not",
    "start": "151840",
    "end": "158000"
  },
  {
    "text": "only help scale their infrastructure scale their business and their product but then also enable their team of many",
    "start": "158000",
    "end": "164040"
  },
  {
    "text": "developers to be able to iterate on their products really quickly and take their ideas and build the next great",
    "start": "164040",
    "end": "170280"
  },
  {
    "text": "thing very cool with zero configuration for over 35 Frameworks versus sales",
    "start": "170280",
    "end": "175560"
  },
  {
    "text": "front and cloud makes it easy for any team to deploy their apps today you can get started with a 14-day free trial of",
    "start": "175560",
    "end": "181400"
  },
  {
    "text": "versel pro or get a customized Enterprise demo from their team visit",
    "start": "181400",
    "end": "187280"
  },
  {
    "text": "velcom changelog pod to get started that's V",
    "start": "187280",
    "end": "192879"
  },
  {
    "text": "c.com changelog",
    "start": "192879",
    "end": "196480"
  },
  {
    "text": "[Music]",
    "start": "199190",
    "end": "202289"
  },
  {
    "text": "pod [Applause] [Music] [Applause]",
    "start": "208760",
    "end": "219080"
  },
  {
    "text": "hello JS party listeners uh welcome to yet another week with us um we're",
    "start": "219080",
    "end": "224360"
  },
  {
    "text": "excited very excited about today's show and today's guests um we're going to be talking about react server components",
    "start": "224360",
    "end": "231159"
  },
  {
    "text": "and kind of deconstructing them with Dan abramov who's here to kind of help us",
    "start": "231159",
    "end": "236640"
  },
  {
    "text": "bust some myths set some truths do deep Dives set some facts I've already been",
    "start": "236640",
    "end": "242959"
  },
  {
    "text": "fact checked like seven times uh just in preparation for this show Dan's already set the record straight so I'm like",
    "start": "242959",
    "end": "249439"
  },
  {
    "text": "excited to continue to be fact checked with us to kind of Ride Along with us for this ride today is Eric Clemens my",
    "start": "249439",
    "end": "255920"
  },
  {
    "text": "friend who I invited to essentially play the zealous role right because I I think",
    "start": "255920",
    "end": "261040"
  },
  {
    "text": "I've been outside of this react Community for a little bit now and you know I'm I'm coming at this from the",
    "start": "261040",
    "end": "266720"
  },
  {
    "text": "skeptic's perspective and Eric is like very deep within and he's a zealous and",
    "start": "266720",
    "end": "272000"
  },
  {
    "text": "he's like a lover of all the things and he's been playing around with RC's and he loves them and so I'm really excited",
    "start": "272000",
    "end": "277880"
  },
  {
    "text": "to kind of have his voice on the show and then of course you have Dan who's been you know part of the core team for",
    "start": "277880",
    "end": "284000"
  },
  {
    "text": "many years and generally been educating the community um for many years around best practices and and how to use react",
    "start": "284000",
    "end": "290880"
  },
  {
    "text": "and all of that jazz so I'm super excited about today's discussion uh so with that said let's get started with",
    "start": "290880",
    "end": "297039"
  },
  {
    "text": "introductions so welcome Dan uh can you tell us a little bit about yourself even though I feel like you don't really need",
    "start": "297039",
    "end": "303080"
  },
  {
    "text": "an introduction yeah first thank you so much for inviting me I'm super happy to be here so I I started using react in",
    "start": "303080",
    "end": "311039"
  },
  {
    "text": "2014 I think and after that I joined the react team in 2015 and I've been on the react team for",
    "start": "311039",
    "end": "318560"
  },
  {
    "text": "about 8 years I think I'm currently on kind of a break because so I joined Blue",
    "start": "318560",
    "end": "323600"
  },
  {
    "text": "Sky which is a you know a company that uses react and react native so I'm actually learning react native and like",
    "start": "323600",
    "end": "330160"
  },
  {
    "text": "learning how to use it and I'm really kind of in the product development mindset as a user of react now so I",
    "start": "330160",
    "end": "337039"
  },
  {
    "text": "haven't actually been very involved with the team and I kind of speak in personal capacity on the show so yeah Dan you",
    "start": "337039",
    "end": "343919"
  },
  {
    "text": "know it feels like the react core team is a little bit like Hotel California you know where you can never quite leave because I know you're not officially",
    "start": "343919",
    "end": "350400"
  },
  {
    "text": "part of it but based on the internet you would never know you would never know right cuz you're you're talking about it",
    "start": "350400",
    "end": "355639"
  },
  {
    "text": "and you're just like you're you're in all the things I feel like it's actually the other way around because like officially I'm still on the team but",
    "start": "355639",
    "end": "362039"
  },
  {
    "text": "actually like I haven't showed up to meetings for a while just because like I'm I'm too like overloaded trying to",
    "start": "362039",
    "end": "367160"
  },
  {
    "text": "learn reactnative so I I do want to get back to it so I'm I'm a bit of a sabatical I guess so you're talking",
    "start": "367160",
    "end": "373639"
  },
  {
    "text": "about react native I want to know when is Blue Sky GNA have a web client it does yeah so there there is a uh B sky.",
    "start": "373639",
    "end": "381319"
  },
  {
    "text": "app I think that's I I may be wrong but I think that's the in the current year we have like three different domains",
    "start": "381319",
    "end": "387080"
  },
  {
    "text": "okay I keep forgetting which one is which okay I have to check out the web client uh that's great and so Eric again",
    "start": "387080",
    "end": "394759"
  },
  {
    "text": "welcome back to the show um can you give our listeners a little bit I mean you know besides you're a mega DX nerd tell",
    "start": "394759",
    "end": "400800"
  },
  {
    "text": "us a little bit about yourself yeah yeah thanks for having me of course but it's interesting it's like I've been in the",
    "start": "400800",
    "end": "406319"
  },
  {
    "text": "web space for such a long time you know people are kind of like touting their tenure in web but what I think is really",
    "start": "406319",
    "end": "412960"
  },
  {
    "text": "interesting is just like the evolution that's continually happening and one of which was like whenever react dropped I",
    "start": "412960",
    "end": "419120"
  },
  {
    "text": "think it like the 0.12 days the company I was at we were focused on just building kind of like web forms and as",
    "start": "419120",
    "end": "426360"
  },
  {
    "text": "long as we got the job done they didn't really care like how we buildt things so we got to kind of you know cut ourselves",
    "start": "426360",
    "end": "431960"
  },
  {
    "text": "on the bleeding edge a little bit but the thing was like rect really was a hero from the very beginning going from",
    "start": "431960",
    "end": "437759"
  },
  {
    "text": "like an angular app and phb apps like we went to serers side react back in the day probably a little too soon and had",
    "start": "437759",
    "end": "444440"
  },
  {
    "text": "to figure out like async data fetching and uh serializing data and stuff but",
    "start": "444440",
    "end": "449720"
  },
  {
    "text": "the result of it was millions of dollars of actual like conversions that happened",
    "start": "449720",
    "end": "455639"
  },
  {
    "text": "as a result of like faster rendering response times uh Progressive enhancement basically was what we kind",
    "start": "455639",
    "end": "461560"
  },
  {
    "text": "of like shot for there and so like react was a thing that kind of made it successful for I think six years of just",
    "start": "461560",
    "end": "468240"
  },
  {
    "text": "continually to build off of and so I wouldn't be here if it weren't for react actually I'd say yeah and you have some",
    "start": "468240",
    "end": "475440"
  },
  {
    "text": "pretty popular libraries too one of them being um click to component which I really love and I feel like most more",
    "start": "475440",
    "end": "481960"
  },
  {
    "text": "people need to know about that and use it but um it's a component that like do you want to tell people about it yeah I",
    "start": "481960",
    "end": "487800"
  },
  {
    "text": "mean everything's born out of a DX need right and I wish I could just be funded full-time to take all the paper cuts",
    "start": "487800",
    "end": "493840"
  },
  {
    "text": "that developers deal with and like make them all 10x Engineers but yeah the long and short of it is that most of the time",
    "start": "493840",
    "end": "499639"
  },
  {
    "text": "when you're doing web development you you see what's on the page you say that's either right or that's not right and you just need to kind of go to the",
    "start": "499639",
    "end": "505199"
  },
  {
    "text": "source code and going through like the dev tools won't get you straight to the source code uh but click to component is",
    "start": "505199",
    "end": "510319"
  },
  {
    "text": "a wrapper there's a Chrome extension that I think has actually like surpassed it uh in terms of functionality and",
    "start": "510319",
    "end": "515440"
  },
  {
    "text": "multi framework support uh I don't have the name for it offand but I think it's you know probably like the way to go for",
    "start": "515440",
    "end": "521440"
  },
  {
    "text": "uh individuals who just want to look at the page go straight to the source fix it and have like a faster feedback loop but that's actually like the long and",
    "start": "521440",
    "end": "527640"
  },
  {
    "text": "short of it is that like being able to focus on the like what you're trying to do and get all of the Annoying friction",
    "start": "527640",
    "end": "535640"
  },
  {
    "text": "and steps out of the way in between you and just getting your job done and actually I think rsc's like play into",
    "start": "535640",
    "end": "541440"
  },
  {
    "text": "that narrative pretty well that's awesome and excited to dig in so before we dig into rsc's I kind of want to do a",
    "start": "541440",
    "end": "547079"
  },
  {
    "text": "couple things like one I want us to tell like I want to hear from both of you on like what is your react love story",
    "start": "547079",
    "end": "553120"
  },
  {
    "text": "because you know the three of us didn't found it right so like in theory we saw it and we were like ooh right so so",
    "start": "553120",
    "end": "560680"
  },
  {
    "text": "what's your react love story and and then I want to get into kind of the evolution of react that will kind of take us into like RS season where we are",
    "start": "560680",
    "end": "567760"
  },
  {
    "text": "today I'll kind of start first with my react Love Story um so for me you know I think I came into react from the angular",
    "start": "567760",
    "end": "574560"
  },
  {
    "text": "1X world and backbone and KJS and knock out like so many different things jQuery",
    "start": "574560",
    "end": "580440"
  },
  {
    "text": "right like a whole schoras Board of things including like rails PHP a lot of",
    "start": "580440",
    "end": "586480"
  },
  {
    "text": "things and I think for me you know what just clicked was that you know it just like it just made sense like looking at",
    "start": "586480",
    "end": "592760"
  },
  {
    "text": "a react component and the way things were structured the fact that everything was just JavaScript for me was the big",
    "start": "592760",
    "end": "598240"
  },
  {
    "text": "like aha right because I didn't have to learn any additional syntax like if I wanted to Loop or map or do whatever",
    "start": "598240",
    "end": "605079"
  },
  {
    "text": "like it was just JavaScript um you know sure there was a couple of things you haded to learn learn around like what of",
    "start": "605079",
    "end": "610480"
  },
  {
    "text": "the syntax around jsx right but for the most part everything just felt very intuitive and I think for me it was just",
    "start": "610480",
    "end": "617000"
  },
  {
    "text": "you know like starting to kind of become um a lead at that point like it it it was just seeing the accelerator like see",
    "start": "617000",
    "end": "624560"
  },
  {
    "text": "seeing how much of an accelerator it was for teams uh quickly creating um components being able to kind of compose",
    "start": "624560",
    "end": "630959"
  },
  {
    "text": "them easily being able to kind of organize their code in a better way it was just kind of like it went from you",
    "start": "630959",
    "end": "637519"
  },
  {
    "text": "you were able to kind of go from Zero to Hero very quickly and I think that was that was really exciting of course it",
    "start": "637519",
    "end": "642880"
  },
  {
    "text": "came along with some pretty big shifts around like you had to use a compiler for the first time you know in the",
    "start": "642880",
    "end": "648279"
  },
  {
    "text": "JavaScript world and you know and you're getting things from npm and you know that was like that was new right but for",
    "start": "648279",
    "end": "655440"
  },
  {
    "text": "the most part huge accelerator and I think you know was a huge fan of reactor I think for me where react started to",
    "start": "655440",
    "end": "661560"
  },
  {
    "text": "kind of where I be shifted into a skeptic was specifically around you know when I started to see Frameworks like",
    "start": "661560",
    "end": "667440"
  },
  {
    "text": "preact come along and you know have very similar API with lower bundle size and",
    "start": "667440",
    "end": "672839"
  },
  {
    "text": "better performance and I was like you know what I would really like more of a focus on performance um the other kind",
    "start": "672839",
    "end": "678079"
  },
  {
    "text": "of skeptic like my skepticism kind of grew with you know how the suspense and",
    "start": "678079",
    "end": "683399"
  },
  {
    "text": "concurrency and uh some of the other kind of shifts in the API where I was like you know what I really want to just",
    "start": "683399",
    "end": "688519"
  },
  {
    "text": "focus more on per performance like let's just fix that problem uh and then I kind of moved into different spaces and",
    "start": "688519",
    "end": "693839"
  },
  {
    "text": "that's just kind of where I dropped off but for the most part like that's that's my love story with react and I think it",
    "start": "693839",
    "end": "699120"
  },
  {
    "text": "obviously really shifted the ecosystem forward as well in terms of design so so Dan and Eric eager to hear from you both",
    "start": "699120",
    "end": "706760"
  },
  {
    "text": "I think it's it's actually interesting you mentioned that you're interested in performance but then the things that",
    "start": "706760",
    "end": "712160"
  },
  {
    "text": "kind of shifted your attention were like these are features for performance so",
    "start": "712160",
    "end": "717480"
  },
  {
    "text": "there is an interesting irony there it is ironic I think it was just that the API it was it wasn't just uh it was",
    "start": "717480",
    "end": "723480"
  },
  {
    "text": "around the same time that I know suspense was kind of there to kind of improve perf to some degree but the point is like the API around hooks I",
    "start": "723480",
    "end": "730959"
  },
  {
    "text": "think the design also really bothered me specifically like I thought that like it just wasn't intuitive it like it just it",
    "start": "730959",
    "end": "737720"
  },
  {
    "text": "just kind of like everything in react was intuitive until like hooks came along for me like this is my personal",
    "start": "737720",
    "end": "743320"
  },
  {
    "text": "opinion I think that's kind of where like for me like the seed of skepticism was like planted and like it just it",
    "start": "743320",
    "end": "748440"
  },
  {
    "text": "just never fully gone away so but yeah but I'm I'm I'm hopeful like again like I'm I'm here to hopefully change my my",
    "start": "748440",
    "end": "756120"
  },
  {
    "text": "opinion on things so let's you know I'm I'm I'm coming to this conversation with an open mind right so back to you sure",
    "start": "756120",
    "end": "763160"
  },
  {
    "text": "yeah so for me I think the first time I looked at the react I thought that that just looks silly but then I I wasn't I",
    "start": "763160",
    "end": "770120"
  },
  {
    "text": "was pretty new to web development at the time so before that I was doing mostly desktop development uh with",
    "start": "770120",
    "end": "777600"
  },
  {
    "text": "c.net and a little bit of mobile with iOS and also C using what's now called",
    "start": "777600",
    "end": "784240"
  },
  {
    "text": "zarine I don't know if that's the thing anymore but that's what I was using and then uh we started using angular 1.x uh",
    "start": "784240",
    "end": "791720"
  },
  {
    "text": "for a little bit build some uis with it and it's some point you know react came",
    "start": "791720",
    "end": "797160"
  },
  {
    "text": "out I kind of dismissed it originally I didn't get it and then my colleague uh",
    "start": "797160",
    "end": "803000"
  },
  {
    "text": "like a few months later my colleague sent the link to react again he was like no like you know check it out like there",
    "start": "803000",
    "end": "809160"
  },
  {
    "text": "there is something to this and so I tried to like at the time I was actually",
    "start": "809160",
    "end": "814959"
  },
  {
    "text": "um so I was working on an app uh where you could post different kind of like multimedia posts with like images",
    "start": "814959",
    "end": "821360"
  },
  {
    "text": "galleries uh text and a bunch of stuff and uh I was at the time working on the",
    "start": "821360",
    "end": "826800"
  },
  {
    "text": "like button so I needed to add you know like a like button you can press like it shows uh you liked this or you and like",
    "start": "826800",
    "end": "835399"
  },
  {
    "text": "Andrew you like this or like you and like three people like this so it has to",
    "start": "835399",
    "end": "840680"
  },
  {
    "text": "like show different things depending on you know what the data is and then like when you press it it can kind of push it",
    "start": "840680",
    "end": "846920"
  },
  {
    "text": "over into like one of these different states and I tried at the time people",
    "start": "846920",
    "end": "852160"
  },
  {
    "text": "were using backbone and you know like you you had to write your initial template for you know the the initial",
    "start": "852160",
    "end": "858360"
  },
  {
    "text": "data but then you had to listen to events so like did I press the button and then change you know the template",
    "start": "858360",
    "end": "864480"
  },
  {
    "text": "dynamically to the final State and then with react just like the the first time I tried it I realized oh I can just",
    "start": "864480",
    "end": "871079"
  },
  {
    "text": "write an if statement so like if nobody like this then return this if one person like this return this and react handles",
    "start": "871079",
    "end": "879519"
  },
  {
    "text": "the transitions between the states so I can I can just describe the user interface as a function of uh of state",
    "start": "879519",
    "end": "886680"
  },
  {
    "text": "or like kind of like as a frame in a movie and there's only the current frame you never think about time and so this",
    "start": "886680",
    "end": "893440"
  },
  {
    "text": "was this was my first react component just a like button and then we started",
    "start": "893440",
    "end": "898519"
  },
  {
    "text": "uh try trying it in a few more places and it kind of just ate our app from",
    "start": "898519",
    "end": "903759"
  },
  {
    "text": "inside out because you know it started like somewhere deep and then it we gradually started using more and more",
    "start": "903759",
    "end": "909560"
  },
  {
    "text": "react as we kind of climb higher and even though like I think like that was before you know people were complaining",
    "start": "909560",
    "end": "915920"
  },
  {
    "text": "about JavaScript fatigue and like all that stuff like we were excited cuz you know everything used to be so bad like",
    "start": "915920",
    "end": "923440"
  },
  {
    "text": "it was just very hard to build Dynamic uis and we were rewriting our product in",
    "start": "923440",
    "end": "928600"
  },
  {
    "text": "react at the same time as shipping features and actually we were faster while doing the rewriting just because",
    "start": "928600",
    "end": "935160"
  },
  {
    "text": "react enabled us to uh make everything so Dynamic so that's kind of how I think that that that was that that moment for",
    "start": "935160",
    "end": "941480"
  },
  {
    "text": "me you knew what you're doing mentioning JavaScript critique there Dan I I see was like re attacking Eric yeah Eric",
    "start": "941480",
    "end": "947440"
  },
  {
    "text": "Eric had a famous viral blog post from back in the day titled exactly that yeah",
    "start": "947440",
    "end": "952560"
  },
  {
    "text": "that was such an interesting thing because I I think that that blog post actually kind of got us talking a little",
    "start": "952560",
    "end": "958319"
  },
  {
    "text": "more 10 one because that was you know right before the create react app",
    "start": "958319",
    "end": "964079"
  },
  {
    "text": "abstractions and like those days Babel preset AMV wasn't a thing so and that",
    "start": "964079",
    "end": "969199"
  },
  {
    "text": "that did strike a cord with I think like the react Community but I don't I don't",
    "start": "969199",
    "end": "974319"
  },
  {
    "text": "think actually because of react I think it was because of everything else around react in retrospect but my it's so funny",
    "start": "974319",
    "end": "981319"
  },
  {
    "text": "we have such interesting like in similar love stories like we we kind of got into it around the same time like on the",
    "start": "981319",
    "end": "987680"
  },
  {
    "text": "ground floor uh and I think like that's a bit of our honeymoon period where like a lot of people who got in there early",
    "start": "987680",
    "end": "993759"
  },
  {
    "text": "they see react today and that's not the react that like they fell enough with like 10 years ago it seems you know that",
    "start": "993759",
    "end": "999399"
  },
  {
    "text": "they they got comfortable that's me yeah it's like it it was it was successful it got the job done but like it's not like",
    "start": "999399",
    "end": "1005120"
  },
  {
    "text": "how you do react anymore it's like you've changed but I I haven't but yeah it was an incremental thing for us too",
    "start": "1005120",
    "end": "1011880"
  },
  {
    "text": "like we had a PHP based business the page response times were like around 800",
    "start": "1011880",
    "end": "1018120"
  },
  {
    "text": "milliseconds or something like that and whenever we had the issue of just complex form logic and we want to make",
    "start": "1018120",
    "end": "1024199"
  },
  {
    "text": "sure that when we submit forms and validate data that the logic and PHP backend was the same as a front end that",
    "start": "1024199",
    "end": "1029520"
  },
  {
    "text": "we're trying to improve for good experience and so like if only we could use JavaScript everywhere and once we",
    "start": "1029520",
    "end": "1035000"
  },
  {
    "text": "did that the response times went to like 200 milliseconds and that was like our first attempt at useing react and",
    "start": "1035000",
    "end": "1041120"
  },
  {
    "text": "already got that much better and in an e-commerce you improve like you know response times and conversions go up and",
    "start": "1041120",
    "end": "1047480"
  },
  {
    "text": "then we got it down to like to 40 Mill seconds and the business was just like whatever you're doing step on the gas",
    "start": "1047480",
    "end": "1053720"
  },
  {
    "text": "keep it up and so like we just went headstrong into everything else around",
    "start": "1053720",
    "end": "1059200"
  },
  {
    "text": "react the whole JavaScript ecosystem like we got deep into webpack 2 at the time released we got async bundles to",
    "start": "1059200",
    "end": "1066240"
  },
  {
    "text": "improve like uh in code splitting to improve performance even more and then looking outwards because of react",
    "start": "1066240",
    "end": "1072400"
  },
  {
    "text": "success it made us look at other things like well what else could we do that this community is doing and led us to",
    "start": "1072400",
    "end": "1079360"
  },
  {
    "text": "continuous deployment and we're deploying dozens of times a day for a business that was deploying you know once a week or once every two weeks and",
    "start": "1079360",
    "end": "1086799"
  },
  {
    "text": "you know had a multi-hour deployment process and so like I would say like react was kind of like that that first",
    "start": "1086799",
    "end": "1092360"
  },
  {
    "text": "hit of the JavaScript drug that got us successful gave us at high and then and",
    "start": "1092360",
    "end": "1098520"
  },
  {
    "text": "then we kept going with everything else in the ecosystem and we had no idea you know people talk about like a new",
    "start": "1098520",
    "end": "1103840"
  },
  {
    "text": "framework every day but there's a new solution so often that's solving some",
    "start": "1103840",
    "end": "1109200"
  },
  {
    "text": "problem unique to maybe your case or but not you know some that don't apply to",
    "start": "1109200",
    "end": "1114360"
  },
  {
    "text": "you and you get to just have a buffet of stuff that's potentially going to make your business better and we were able to",
    "start": "1114360",
    "end": "1121559"
  },
  {
    "text": "ride that way for years until like I left the business like six years or something later after the the initial",
    "start": "1121559",
    "end": "1128159"
  },
  {
    "text": "adoption so yeah I mean I I I think I'm doing python today you know Dan you're",
    "start": "1128159",
    "end": "1133840"
  },
  {
    "text": "talking about like learning react native and like I've had to Learn Python thank you Chad GPT and co-pilot for teaching",
    "start": "1133840",
    "end": "1139039"
  },
  {
    "text": "me python syntax but it makes me miss you know the velocity I had of being",
    "start": "1139039",
    "end": "1144080"
  },
  {
    "text": "able to have endtoend JavaScript react in that locality of behavior yeah so",
    "start": "1144080",
    "end": "1149960"
  },
  {
    "text": "well said Eric um and yeah like I you know this is like a pretty good segue into kind of you know the evolution of",
    "start": "1149960",
    "end": "1156600"
  },
  {
    "text": "react because you know you mentioned that person from 10 years ago that was using react like maybe coming into it today would be like this feels very",
    "start": "1156600",
    "end": "1162960"
  },
  {
    "text": "different right and I think I started at 123 like that's kind of when I when we",
    "start": "1162960",
    "end": "1168480"
  },
  {
    "text": "kind of kind of started using react in production and you know we had a very Innovative leader on the engineering",
    "start": "1168480",
    "end": "1174480"
  },
  {
    "text": "side who was like very bullish on good Tech and wasn't afraid of kind of being on the bleeding edge and like you know",
    "start": "1174480",
    "end": "1180799"
  },
  {
    "text": "even though that was very early like they were totally willing to kind of go all in on react uh and so Dan can you",
    "start": "1180799",
    "end": "1187120"
  },
  {
    "text": "talk us through kind of react from 10 years ago to like where we are today right going from these components that",
    "start": "1187120",
    "end": "1194080"
  },
  {
    "text": "were often used on the client right like specifically like they weren't always as Pas but like for the most part kind of",
    "start": "1194080",
    "end": "1201280"
  },
  {
    "text": "going into kind of the serers side rendered Revolution you know kind of fueled by I think Frameworks like nextjs",
    "start": "1201280",
    "end": "1208760"
  },
  {
    "text": "and then you know to kind of where we are today ushering in you know this kind of data uh fetching as a first class",
    "start": "1208760",
    "end": "1214919"
  },
  {
    "text": "world with react server components so I can't yeah let me try to kind of recap",
    "start": "1214919",
    "end": "1220960"
  },
  {
    "text": "the so we're talking now about uh kind of paradigms of where we run the code",
    "start": "1220960",
    "end": "1226280"
  },
  {
    "text": "right so not so much like the syntax but more just how we use Computing resources and",
    "start": "1226280",
    "end": "1232720"
  },
  {
    "text": "one way I like to think about it is like in in in general in app development but",
    "start": "1232720",
    "end": "1237880"
  },
  {
    "text": "specifically in web development like in web development you always have to think about at least two computers right so",
    "start": "1237880",
    "end": "1244360"
  },
  {
    "text": "there's the computer you know the device that the user has so it could be their phone or it could be like a desktop",
    "start": "1244360",
    "end": "1250440"
  },
  {
    "text": "device you know it's like their probably using the browser to open your app and",
    "start": "1250440",
    "end": "1255799"
  },
  {
    "text": "then of course there has to be some other computer that actually sends the information to the user right so there",
    "start": "1255799",
    "end": "1262200"
  },
  {
    "text": "has to be some kind of a server you know that either sends HTML or JavaScript or",
    "start": "1262200",
    "end": "1267640"
  },
  {
    "text": "both or some Json and so the question is just like how do we use the resources of",
    "start": "1267640",
    "end": "1272840"
  },
  {
    "text": "those of course there could be you know another computer earlier that maybe does the build or you know when you deploy",
    "start": "1272840",
    "end": "1279440"
  },
  {
    "text": "like somehow the code has to get from the developers machine to that server so",
    "start": "1279440",
    "end": "1284520"
  },
  {
    "text": "there's also some kind of a step of deployment and so the question is like how do we split you know the resources",
    "start": "1284520",
    "end": "1290559"
  },
  {
    "text": "between these different computers and what do we actually make them do and so at the time when we just started using",
    "start": "1290559",
    "end": "1297360"
  },
  {
    "text": "react I mean there were already different paradigms of how to split these resources so one very popular",
    "start": "1297360",
    "end": "1303520"
  },
  {
    "text": "Paradigm was kind of traditional server rendering uh unrelated like when I say",
    "start": "1303520",
    "end": "1308840"
  },
  {
    "text": "server rendering I mean like PHP or rails where you mostly write your your",
    "start": "1308840",
    "end": "1315200"
  },
  {
    "text": "UI logic as uh HTML is templates which you know you have some kind of uh",
    "start": "1315200",
    "end": "1321400"
  },
  {
    "text": "control uh flow things like you have like Loops conditions you have some kind of includes maybe so you can put one",
    "start": "1321400",
    "end": "1328760"
  },
  {
    "text": "template into another template and that is happening completely on the server side so you're able to directly access",
    "start": "1328760",
    "end": "1335799"
  },
  {
    "text": "any resources that are on the server so for example you can read from the database you can read from the file",
    "start": "1335799",
    "end": "1341799"
  },
  {
    "text": "system of course you can also you know build a bunch of services and just talk",
    "start": "1341799",
    "end": "1346919"
  },
  {
    "text": "to them by http be on your server so that is something you can always do but you're also not forced to do that if you",
    "start": "1346919",
    "end": "1354039"
  },
  {
    "text": "know if it doesn't make sense for some task and so that that was kind of the Paradigm but then within this Paradigm",
    "start": "1354039",
    "end": "1360080"
  },
  {
    "text": "it's pretty hard to build like very Dynamic very instantly responsive user interfaces because if your UI logic is",
    "start": "1360080",
    "end": "1367679"
  },
  {
    "text": "completely on the server then you have to talk to the server to get you know any kind of uh visual update and for",
    "start": "1367679",
    "end": "1375039"
  },
  {
    "text": "some cases it's fine but you know in like something like drag and drop and actions or gestures or you know just",
    "start": "1375039",
    "end": "1381520"
  },
  {
    "text": "like typing into an input and immediately like for example like filtering a list without go into the",
    "start": "1381520",
    "end": "1387039"
  },
  {
    "text": "server uh stuff like this like you can't really express it uh in in this Paradigm very nicely and then that is where you",
    "start": "1387039",
    "end": "1394679"
  },
  {
    "text": "know we started shifting more work to the client where maybe you'd have some jQuery plugins that enhance the HTML you",
    "start": "1394679",
    "end": "1402840"
  },
  {
    "text": "return from your server templates but that uh you know that let you add some",
    "start": "1402840",
    "end": "1408080"
  },
  {
    "text": "instant interactivity where you know that the screen can update without the network round trip and so I think that",
    "start": "1408080",
    "end": "1416000"
  },
  {
    "text": "that was kind of like you know you could already kind of go extreme in either direction like already at the time right",
    "start": "1416000",
    "end": "1422000"
  },
  {
    "text": "because like you could have everything that's like Ser rendered with something like PHP and maybe like a few jQuery",
    "start": "1422000",
    "end": "1427440"
  },
  {
    "text": "plugins to just like enhance it in a few places but there were also this approach of single page apps was starting to gain",
    "start": "1427440",
    "end": "1433799"
  },
  {
    "text": "interraction where you actually wouldn't send any HTML at all and and instead you",
    "start": "1433799",
    "end": "1439159"
  },
  {
    "text": "would only send JavaScript and then the JavaScript would be kind of creating that you know initial HTML and and",
    "start": "1439159",
    "end": "1446080"
  },
  {
    "text": "managing that the Dom notes completely on the client and so the benefit of that",
    "start": "1446080",
    "end": "1451120"
  },
  {
    "text": "Paradigm is that you have the guarantee that you can always make an interaction",
    "start": "1451120",
    "end": "1456640"
  },
  {
    "text": "instant so you have this guarantee that you know you're not going to get locked out of being able to like show immediate",
    "start": "1456640",
    "end": "1462760"
  },
  {
    "text": "feedback because all the code is on the client and so all the code that's necessary to produce the UI is already",
    "start": "1462760",
    "end": "1468840"
  },
  {
    "text": "available but then the downside of that is of course you have to download a lot more code kind of UPF front you don't",
    "start": "1468840",
    "end": "1474919"
  },
  {
    "text": "show anything to the user while the code is loading so it's kind of bad for performance and it also complicates the",
    "start": "1474919",
    "end": "1481640"
  },
  {
    "text": "mental model quite a bit because now you've had to move all the routing to the client you have to have some kind of",
    "start": "1481640",
    "end": "1487399"
  },
  {
    "text": "cach in for any data like you have to think about kind of State Management like how long does this data live in",
    "start": "1487399",
    "end": "1493880"
  },
  {
    "text": "which case does it invalidate like when is it okay to throw away so it's kind of like painful like in a different way but",
    "start": "1493880",
    "end": "1500600"
  },
  {
    "text": "when react came out like these were kind of two popular paradigms and so react was used in both ways so for example at",
    "start": "1500600",
    "end": "1507720"
  },
  {
    "text": "Facebook react was used more kind of in this like jQuery scenario where with initially use react for example like in",
    "start": "1507720",
    "end": "1514640"
  },
  {
    "text": "the facebook.com web app react was used only uh like in the comments section of",
    "start": "1514640",
    "end": "1519919"
  },
  {
    "text": "each post so the entire page was server rendered with PHP but the comment section was actually uh rendered with",
    "start": "1519919",
    "end": "1526279"
  },
  {
    "text": "react and react kind of took over you you know so that this particular piece can be instantly interactive whereas in",
    "start": "1526279",
    "end": "1532120"
  },
  {
    "text": "the community I think uh some people adopted react like that whereas like other people already had single page",
    "start": "1532120",
    "end": "1538360"
  },
  {
    "text": "apps with something like backbone or angular and so they already had all their code on the client and so they",
    "start": "1538360",
    "end": "1543960"
  },
  {
    "text": "started kind of replacing not like initially replacing just small parts of it uh with react but gradually because",
    "start": "1543960",
    "end": "1551080"
  },
  {
    "text": "there is no you know it's not a server based Paradigm you can kind of go all the way up and replace it with a react",
    "start": "1551080",
    "end": "1557919"
  },
  {
    "text": "like completely and so I think in 2015 or so react router got fairly popular so",
    "start": "1557919",
    "end": "1564320"
  },
  {
    "text": "that that was I think like first kind of major like popular solution for routing fully on the client without you know",
    "start": "1564320",
    "end": "1572039"
  },
  {
    "text": "going to the server to decide what what the rout should should show fully client side Paradigm and especially with you",
    "start": "1572039",
    "end": "1579520"
  },
  {
    "text": "know when creat R up came out it kind of solidified this as you know this seems to be cuz like if if everyone is running",
    "start": "1579520",
    "end": "1587039"
  },
  {
    "text": "like all the server Solutions very different so you can't really like release any tool chain that like",
    "start": "1587039",
    "end": "1592279"
  },
  {
    "text": "addresses them all cuz it has to be custom anyway whereas if you're moving everything to the client like that's",
    "start": "1592279",
    "end": "1598720"
  },
  {
    "text": "easier to kind of agree on that here's like the Baseline of how this features could work and so great act up kind of",
    "start": "1598720",
    "end": "1604600"
  },
  {
    "text": "made this approach even more popular because it became easier to start with you just you know you run it and you you",
    "start": "1604600",
    "end": "1610279"
  },
  {
    "text": "get yourself an SBA I think you just answered a long question that I had Dan which is you know why when react was",
    "start": "1610279",
    "end": "1616399"
  },
  {
    "text": "first released into the public like not not necessarily internally why wasn't there a router you know and I think it's",
    "start": "1616399",
    "end": "1623200"
  },
  {
    "text": "it's obviously because Facebook wasn't using it that way right they were using it to kind of you know um hydrate or",
    "start": "1623200",
    "end": "1629320"
  },
  {
    "text": "like um supercharge parts of their web app right but like essentially that's not how they were using it yeah yeah",
    "start": "1629320",
    "end": "1634640"
  },
  {
    "text": "absolutely so so that is yeah that is a part of the reasons like Facebook Facebook generally doesn't release",
    "start": "1634640",
    "end": "1640520"
  },
  {
    "text": "something that they're not themselves using and Creator act app was an exception to that because Creator act",
    "start": "1640520",
    "end": "1646600"
  },
  {
    "text": "app was not used at Facebook at all but there was so much like frustration in",
    "start": "1646600",
    "end": "1652360"
  },
  {
    "text": "the community about you know we have this like five different tools that need to talk to each other and they're very",
    "start": "1652360",
    "end": "1658000"
  },
  {
    "text": "like kind of finicky to configure and the idea with great react app was like",
    "start": "1658000",
    "end": "1663120"
  },
  {
    "text": "it was it actually came out of uh like we were supposed to write a documentation page about setting up",
    "start": "1663120",
    "end": "1669120"
  },
  {
    "text": "react and it was just like it was embarrassing to write because it was like set up these like five different",
    "start": "1669120",
    "end": "1674440"
  },
  {
    "text": "tools and then like make this tool like talk to this it was very confusing and also like why it didn't make sense that",
    "start": "1674440",
    "end": "1681640"
  },
  {
    "text": "like everybody has to every time each of these tools updates like everybody has to look for updated instructions so",
    "start": "1681640",
    "end": "1687760"
  },
  {
    "text": "we're like okay let's just make a thing that that kind of hides them behind",
    "start": "1687760",
    "end": "1693080"
  },
  {
    "text": "something that's like behind an abstraction level like the abstraction level kind of went up yeah and so that's",
    "start": "1693080",
    "end": "1699159"
  },
  {
    "text": "how Spas with react kind of became the norm I think but we already know like",
    "start": "1699159",
    "end": "1705399"
  },
  {
    "text": "there are at least two or three problems there like in this Paradigm so one",
    "start": "1705399",
    "end": "1710519"
  },
  {
    "text": "problem is that we don't send any HTML on the initial load and that's just I",
    "start": "1710519",
    "end": "1716320"
  },
  {
    "text": "think like when you don't know how to do it or like when there is no nice way to do it that's maintainable like I could",
    "start": "1716320",
    "end": "1724480"
  },
  {
    "text": "kind of see it or understand it but I think like it we figured out how to do",
    "start": "1724480",
    "end": "1730320"
  },
  {
    "text": "it like we figured out good ways to do it that doesn't require you to write your code two times and for for example",
    "start": "1730320",
    "end": "1737760"
  },
  {
    "text": "with something like jQuery you know if you have like a jQuery combo box or like",
    "start": "1737760",
    "end": "1742880"
  },
  {
    "text": "a drop down or something you can't really produce HTML from it because the whole Paradigm of jQuery is you operate",
    "start": "1742880",
    "end": "1750880"
  },
  {
    "text": "on the domum nodes so any UI logic is expressed as you take a d note you like",
    "start": "1750880",
    "end": "1755919"
  },
  {
    "text": "change its attributes and so on so you can't really extract you know what is the initial render like what what is the",
    "start": "1755919",
    "end": "1763399"
  },
  {
    "text": "initial version of this UI you can't like run some JQ code and and figure that out on the server but the thing",
    "start": "1763399",
    "end": "1770080"
  },
  {
    "text": "that like was interesting about react was that because it's a function of State you could call that function with",
    "start": "1770080",
    "end": "1776600"
  },
  {
    "text": "the initial State you get a tree and then you can turn that tree into HTML",
    "start": "1776600",
    "end": "1782039"
  },
  {
    "text": "and so we had this like client side app you know like it's it's like conceptually client side it's written",
    "start": "1782039",
    "end": "1788360"
  },
  {
    "text": "for the client but we figured out that actually you can run the client side app on the server once per request produce",
    "start": "1788360",
    "end": "1797120"
  },
  {
    "text": "HTML from it and then send the actual client side program you know to the client so that",
    "start": "1797120",
    "end": "1803240"
  },
  {
    "text": "it can boot up on top of that HTML and so that was the what's usually called SSR in in like uh in the react Paradigm",
    "start": "1803240",
    "end": "1811240"
  },
  {
    "text": "it's just this ability to generate an initial kind of pre-rendered snapshot of",
    "start": "1811240",
    "end": "1816320"
  },
  {
    "text": "the client side app client tree but on the server so that's why it's called like serers side rendering but it's",
    "start": "1816320",
    "end": "1821840"
  },
  {
    "text": "really client rendering like pre-rendering the client on the server",
    "start": "1821840",
    "end": "1827200"
  },
  {
    "text": "and there there's like another variation of that that like next became like one of the popular kind of ways to like one",
    "start": "1827200",
    "end": "1835240"
  },
  {
    "text": "of the first Frameworks to do SSR in react although uh again like the ability",
    "start": "1835240",
    "end": "1840399"
  },
  {
    "text": "to do SSR is provided by react itself right it's just react Doms server renter",
    "start": "1840399",
    "end": "1845919"
  },
  {
    "text": "to string that was like the initial API and then next JS was kind of like create react app but that that was designed",
    "start": "1845919",
    "end": "1853799"
  },
  {
    "text": "around this idea that actually we already know how to pre-render the client Tre on the server but we might as",
    "start": "1853799",
    "end": "1860840"
  },
  {
    "text": "well do that and then you have this the other Innovation it had was file system",
    "start": "1860840",
    "end": "1866279"
  },
  {
    "text": "based routing so the idea was well in traditional PHP app if you go to you",
    "start": "1866279",
    "end": "1872960"
  },
  {
    "text": "know Pages SL about you only you know it has some script tags right like your about.php or whatever it it sends some",
    "start": "1872960",
    "end": "1880360"
  },
  {
    "text": "script tags to the browser so you send different script like you have the ability to send different client code",
    "start": "1880360",
    "end": "1886960"
  },
  {
    "text": "depending on what page page you're on and so in that sense the spa Paradigm is",
    "start": "1886960",
    "end": "1892000"
  },
  {
    "text": "a regression because now we send the code for all possible Pages even though",
    "start": "1892000",
    "end": "1897080"
  },
  {
    "text": "the user has actually requested a specific one so that's not really efficient and so the other thing that",
    "start": "1897080",
    "end": "1902799"
  },
  {
    "text": "nextjs did from the beginning was that unlike create react app where everything is sent as a single bundle or like you",
    "start": "1902799",
    "end": "1909639"
  },
  {
    "text": "use bundle split in but you can only do this like once the code has downloaded in xjs there was like the components you",
    "start": "1909639",
    "end": "1916480"
  },
  {
    "text": "used from the page would get sent a script text you know in script text for",
    "start": "1916480",
    "end": "1922200"
  },
  {
    "text": "from those pages so code splitting was built in I was going to ask a question that I think you've like somewhat",
    "start": "1922200",
    "end": "1927760"
  },
  {
    "text": "answered so like the whole SSR like remember like that function render to string right so ultimately like it",
    "start": "1927760",
    "end": "1933399"
  },
  {
    "text": "wasn't the most performant and I'm curious like yeah was Facebook using",
    "start": "1933399",
    "end": "1939120"
  },
  {
    "text": "that internally right because like I you know and if it was then like why wasn't the performance like more of a focus you",
    "start": "1939120",
    "end": "1946240"
  },
  {
    "text": "know in subsequent releases just kind of like getting that down yeah so I think there's like a misconception in general",
    "start": "1946240",
    "end": "1952720"
  },
  {
    "text": "when people talk about react performance because they a lot of this comes from kind of marketing you know like JS",
    "start": "1952720",
    "end": "1960120"
  },
  {
    "text": "Frameworks uh like benchmarks or something like this that runs uh like a tight loop with like one component level",
    "start": "1960120",
    "end": "1967960"
  },
  {
    "text": "or like three component levels and that shows you the it's kind of like looking",
    "start": "1967960",
    "end": "1973480"
  },
  {
    "text": "at the microscope at like one tiny part of what actually executes whereas like",
    "start": "1973480",
    "end": "1978679"
  },
  {
    "text": "in any real app most of the time is spent in executing the users code like",
    "start": "1978679",
    "end": "1983760"
  },
  {
    "text": "the code that you write your components and so the problem with render the string like you're absolutely right that",
    "start": "1983760",
    "end": "1991200"
  },
  {
    "text": "there were performance issues with it but I think there is like a misconception that maybe this performance ises are just because like",
    "start": "1991200",
    "end": "1997240"
  },
  {
    "text": "react was slow so let's just make react faster that's not really how it works because it's just a while loop like it",
    "start": "1997240",
    "end": "2003159"
  },
  {
    "text": "doesn't it doesn't really do much you know it's it's like a while loop that calls your components and concatenates",
    "start": "2003159",
    "end": "2008760"
  },
  {
    "text": "them into a string so there isn't really much to optimize there uh the the thing you could optimize is it's actually",
    "start": "2008760",
    "end": "2015600"
  },
  {
    "text": "inefficient to well it's like about how do you sequence different things that",
    "start": "2015600",
    "end": "2021120"
  },
  {
    "text": "the app needs to do so as an example like if you want your initial HTML to",
    "start": "2021120",
    "end": "2026440"
  },
  {
    "text": "contain some data there's a question of like when do you kick off uh you know these data fetches so like do they",
    "start": "2026440",
    "end": "2033000"
  },
  {
    "text": "happen during rendering somehow or do they happen ahead of time and typically",
    "start": "2033000",
    "end": "2038399"
  },
  {
    "text": "because in react there was no support for asynchronous components or like",
    "start": "2038399",
    "end": "2043639"
  },
  {
    "text": "there were no buil-in asynchronous Primitives you always had to do this if you wanted these data fetch you know",
    "start": "2043639",
    "end": "2050118"
  },
  {
    "text": "results to be in the initial HTML you had to do them ahead of time so you had to do like a weight you know fetch or",
    "start": "2050119",
    "end": "2056839"
  },
  {
    "text": "whatever and then render your tree which means you're not really using the Computing resources of the machine",
    "start": "2056839",
    "end": "2062398"
  },
  {
    "text": "because you could have started doing something but you're waiting for all the",
    "start": "2062399",
    "end": "2068158"
  },
  {
    "text": "data to be available before you started so it's a sequencing problem and that is why like Facebook couldn't use even as",
    "start": "2068159",
    "end": "2074599"
  },
  {
    "text": "Facebook started the opin so Facebook started rewriting their main app fully in react in",
    "start": "2074599",
    "end": "2081158"
  },
  {
    "text": "2017 maybe I'm I'm not sure 2018 like around that time and because render to",
    "start": "2081159",
    "end": "2088599"
  },
  {
    "text": "string was synchronous like that was just a non starter because for Facebook it's just the fact that you know a page",
    "start": "2088599",
    "end": "2095240"
  },
  {
    "text": "is composed of many different things some of the things are going to be slower than others and we can't wait for",
    "start": "2095240",
    "end": "2102200"
  },
  {
    "text": "everything to be ready before we you know emit all the HTML what we want to",
    "start": "2102200",
    "end": "2107280"
  },
  {
    "text": "do is to stream it so we want to start rendering the components then if some of them are not ready we want to send some",
    "start": "2107280",
    "end": "2114800"
  },
  {
    "text": "kind of load in placeholders or just hold the stream for a little bit and then when they're ready we kind of",
    "start": "2114800",
    "end": "2120520"
  },
  {
    "text": "continue and we we just emit more and more things in the Stream and so you know answering your question of like why",
    "start": "2120520",
    "end": "2126440"
  },
  {
    "text": "react didn't focus on that like react actually did Focus exactly on this and",
    "start": "2126440",
    "end": "2131599"
  },
  {
    "text": "uh but from this other perspective so not from the perspective of like trying to make react faster because you just",
    "start": "2131599",
    "end": "2136960"
  },
  {
    "text": "run into limitations of you know there's only so much you can do with the while loop but from the perspective of like",
    "start": "2136960",
    "end": "2143160"
  },
  {
    "text": "how do we schedule the code written by the users you know of react so that we",
    "start": "2143160",
    "end": "2148839"
  },
  {
    "text": "can stream as much as possible before we you know until we're blocked on some on some data that we just can't render",
    "start": "2148839",
    "end": "2154720"
  },
  {
    "text": "something because we're waiting and then we emit some kind of Place holders and so this is the suspense API where you",
    "start": "2154720",
    "end": "2160800"
  },
  {
    "text": "can say like I want to send this like Shimmer or glimmer or like a loading State and then react will automatically",
    "start": "2160800",
    "end": "2167319"
  },
  {
    "text": "send the rest later and so that that was stream in server rendering that's something that uh react 18 came out with",
    "start": "2167319",
    "end": "2174079"
  },
  {
    "text": "and that Facebook had that was like without that Facebook could not have even moved to you know use and react on",
    "start": "2174079",
    "end": "2180720"
  },
  {
    "text": "the entire page so this is really interesting to hear because it it just I mean it kind of takes me back you know",
    "start": "2180720",
    "end": "2187920"
  },
  {
    "text": "trigger some Nostalgia but also it's just like you know the data I'm going to use like those numbers so before PHP",
    "start": "2187920",
    "end": "2194319"
  },
  {
    "text": "application 800 milliseconds react application 200 milliseconds and then finally we landed around like 40",
    "start": "2194319",
    "end": "2201000"
  },
  {
    "text": "milliseconds that was a win could it be sub millisecond today yeah probably but",
    "start": "2201000",
    "end": "2206119"
  },
  {
    "text": "but at the time uh so it's a all the same data fetching existed so react was",
    "start": "2206119",
    "end": "2213240"
  },
  {
    "text": "just the implementation detail of how were we going to make you know I think that that UI as a function of state has",
    "start": "2213240",
    "end": "2219680"
  },
  {
    "text": "done so much like heavy lifting in terms of like selling react and also like you know composing components and writing",
    "start": "2219680",
    "end": "2226640"
  },
  {
    "text": "you know markdown with the vent handlers and everything kind of like together it just it clicked versus the progressive",
    "start": "2226640",
    "end": "2231680"
  },
  {
    "text": "enhancement days of jQuery like you mentioned you know where you're primarily mutating Dom nodes and you don't even know what it you know even",
    "start": "2231680",
    "end": "2237599"
  },
  {
    "text": "supposed to look like out of state 20 of 400 so whenever we got to 200",
    "start": "2237599",
    "end": "2242720"
  },
  {
    "text": "milliseconds the first actually I think open source Library I wrote was called like react resolver and it was using",
    "start": "2242720",
    "end": "2248400"
  },
  {
    "text": "decorators at the time which are experimental and that you know I'm actually had to remove from some old code at my job actually we had Legacy",
    "start": "2248400",
    "end": "2255480"
  },
  {
    "text": "decorator still in the code and like whoops got got to NX that but anyway it it effectively just wrapped components",
    "start": "2255480",
    "end": "2262079"
  },
  {
    "text": "with you know hey fetch this API and then you can keep rendering and that's what got us to 200 milliseconds we were",
    "start": "2262079",
    "end": "2268680"
  },
  {
    "text": "rendering the full tree synchronously whenever we hit basically that react resolver decorator it's like okay fetch",
    "start": "2268680",
    "end": "2276119"
  },
  {
    "text": "the data you know just going to be water falling but we'll we'll paralyze anything at the same time and then we're",
    "start": "2276119",
    "end": "2281440"
  },
  {
    "text": "going to render the tree until we hit it again so like it was very inefficient but it was still four times faster than",
    "start": "2281440",
    "end": "2286800"
  },
  {
    "text": "whenever we try to do it like with PHP and render the templates and everything finally we actually said well hang on do",
    "start": "2286800",
    "end": "2292599"
  },
  {
    "text": "we need to fetch all this data right here and we took out some of the server side rendering and we ended up rendering",
    "start": "2292599",
    "end": "2299079"
  },
  {
    "text": "just basically the initial shell with like a suspense like spinner you know loader in the middle of the page and",
    "start": "2299079",
    "end": "2305480"
  },
  {
    "text": "then the rest of it we fetched on the CLI and that's where the server was spinning 40 milliseconds but in terms of the user",
    "start": "2305480",
    "end": "2311560"
  },
  {
    "text": "experience it felt faster because now it was five times faster to actually see the code you know in front you know on",
    "start": "2311560",
    "end": "2318359"
  },
  {
    "text": "your screen and so whenever I see react today it feels like all of the wild west",
    "start": "2318359",
    "end": "2324560"
  },
  {
    "text": "paradigms and like you know hacks that I had to put together to get the experience I want of really taking all",
    "start": "2324560",
    "end": "2330839"
  },
  {
    "text": "of the data needs that never went away but I was just kind of moving on from the right to the left and then like you",
    "start": "2330839",
    "end": "2336359"
  },
  {
    "text": "know threading them through different parts of the UI to yield the best ux it just seems that like kind of over time",
    "start": "2336359",
    "end": "2342400"
  },
  {
    "text": "with the introduction of suspense that now it's like okay now there's there's first class Primitives for me to use to",
    "start": "2342400",
    "end": "2348880"
  },
  {
    "text": "get the behavior that I had to hack around myself for so I I would you say like that's kind of accurate like these",
    "start": "2348880",
    "end": "2355079"
  },
  {
    "text": "like what react is the react today compared to the react 10 years ago is to",
    "start": "2355079",
    "end": "2360480"
  },
  {
    "text": "me honing in on web problems you the data fetching was always kind of there",
    "start": "2360480",
    "end": "2365560"
  },
  {
    "text": "the the latency across networks and you know Network boundaries and API calls",
    "start": "2365560",
    "end": "2370760"
  },
  {
    "text": "was always there you know talking to the database was always there caching was always there where do you cach and how do you invalidate that stuff was always",
    "start": "2370760",
    "end": "2377359"
  },
  {
    "text": "there what I see for react in the most recent like RSC discourse is we have 10",
    "start": "2377359",
    "end": "2383760"
  },
  {
    "text": "years of learning of people building you know going from counter examples which I",
    "start": "2383760",
    "end": "2389160"
  },
  {
    "text": "I personally don't find very helpful for illustrating you know the value of like Frameworks anymore so I wish button counters disappeared unless it's party",
    "start": "2389160",
    "end": "2395960"
  },
  {
    "text": "kit showing a demo that's still fine the party kit demos you know with like server side or like socket RSC was",
    "start": "2395960",
    "end": "2402280"
  },
  {
    "text": "pretty cool but it just seems that like react is able to say like we can better serve this need with these better you",
    "start": "2402280",
    "end": "2409119"
  },
  {
    "text": "know abstractions or or paradigms or whatever and also it's like it went from",
    "start": "2409119",
    "end": "2414240"
  },
  {
    "text": "oh react doesn't have a router react isn't you bring your own router that sort of thing as part of that learning",
    "start": "2414240",
    "end": "2420000"
  },
  {
    "text": "exercise and and building more and more ambitious applications on react it seems that it became necessary for react to",
    "start": "2420000",
    "end": "2426520"
  },
  {
    "text": "say well we got to work with bundler integration because you have to bundle an app today if you did a single page",
    "start": "2426520",
    "end": "2431960"
  },
  {
    "text": "app yeah made your your react code base integrated everything was like",
    "start": "2431960",
    "end": "2437839"
  },
  {
    "text": "collocated together it was all component driven it was instant from the UI but it also ended up yielding like terrible Dev",
    "start": "2437839",
    "end": "2444280"
  },
  {
    "text": "experiences too and terrible user experiences because you started shipping you know 10 megabyte bundles as well so",
    "start": "2444280",
    "end": "2449599"
  },
  {
    "text": "I see like the pendulum moving back and forth and as a result like new abstractions just had to arise as part",
    "start": "2449599",
    "end": "2455319"
  },
  {
    "text": "of like that learning yeah uh I think so you you jumped a little bit ahead to",
    "start": "2455319",
    "end": "2460800"
  },
  {
    "text": "like server components which we you know we we do have to get to this topic at some point we actually hold on Dan",
    "start": "2460800",
    "end": "2467960"
  },
  {
    "text": "before we before we like respond to that I did want to kind of ask about the like uncanny valley right like the the",
    "start": "2467960",
    "end": "2474119"
  },
  {
    "text": "problem where you know we send over this kind of serialized HTML that's like you",
    "start": "2474119",
    "end": "2479200"
  },
  {
    "text": "know it looks interactable but it's really there's still JavaScript that needs to be parsed um you know before",
    "start": "2479200",
    "end": "2484800"
  },
  {
    "text": "that page is interactable and so like that was also like another issue that was like became a thing with serers side",
    "start": "2484800",
    "end": "2491480"
  },
  {
    "text": "rendered uh like a lot of serers side rendered applications this wasn't specifically just a react problem right",
    "start": "2491480",
    "end": "2497359"
  },
  {
    "text": "and so I'm just curious also if you could kind of shed some light there and and how RSC like potentially helps that",
    "start": "2497359",
    "end": "2504680"
  },
  {
    "text": "yeah so we I do want to like get to RC's just a little bit later because this is more like of a kind of history of I I",
    "start": "2504680",
    "end": "2512040"
  },
  {
    "text": "like er framing of like we've learned for 10 years and we actually took a step",
    "start": "2512040",
    "end": "2517079"
  },
  {
    "text": "back back and I think this is this is the point that's like maybe not coming across is that rsc's are kind of taking",
    "start": "2517079",
    "end": "2522839"
  },
  {
    "text": "a step back from everything we've seen for the past 20 years and then kind of rethinking it like how could it work how",
    "start": "2522839",
    "end": "2530119"
  },
  {
    "text": "do we apply all these lessons while having a component model and so I I I do",
    "start": "2530119",
    "end": "2536040"
  },
  {
    "text": "want like so far it kind of feels like we're keep stacking up like more and more you know complicated things to",
    "start": "2536040",
    "end": "2542079"
  },
  {
    "text": "address issues but I you know I do feel like rsc's are also like a step back in",
    "start": "2542079",
    "end": "2547280"
  },
  {
    "text": "like okay how do we make it simple again but before we get to that so answering your specific question about like you're",
    "start": "2547280",
    "end": "2554160"
  },
  {
    "text": "absolutely right there's this problem of okay if we do have a lot of JavaScript to send and we you know we send HTML but",
    "start": "2554160",
    "end": "2561280"
  },
  {
    "text": "then it looks like you know there's a button you click it nothing happens so this is something that was also a",
    "start": "2561280",
    "end": "2566480"
  },
  {
    "text": "problem for facebook.com and this is like we kind of had a pretty long period of rethinking",
    "start": "2566480",
    "end": "2573599"
  },
  {
    "text": "SSR and how SSR and this process of uh you know sending a pre-rendered app",
    "start": "2573599",
    "end": "2581079"
  },
  {
    "text": "and then sending the code for the app and then having the code to the app kind of attached to that HTML so this is a",
    "start": "2581079",
    "end": "2586960"
  },
  {
    "text": "process that we changed how it works in react and the the key Innovation there",
    "start": "2586960",
    "end": "2592440"
  },
  {
    "text": "was also inspired by our old school PHP setup so uh there's this thing called",
    "start": "2592440",
    "end": "2598359"
  },
  {
    "text": "big pipe which is like a technology of Facebook used you know from 2010 or or so like it I think it was described in",
    "start": "2598359",
    "end": "2605920"
  },
  {
    "text": "some blog post it's this idea of instead of sending all of the code at once and",
    "start": "2605920",
    "end": "2611599"
  },
  {
    "text": "even like all HTML at once you kind of send it in chunks because in HTML",
    "start": "2611599",
    "end": "2617200"
  },
  {
    "text": "traditionally even if you stream it so like even if you send it as it becomes available streaming in HTML is depth",
    "start": "2617200",
    "end": "2624079"
  },
  {
    "text": "first so you kind of have to stream each child after you know you kind of have Dr",
    "start": "2624079",
    "end": "2630400"
  },
  {
    "text": "to drill down into the tree as you're sending it but then if you have this problem where like for example maybe you",
    "start": "2630400",
    "end": "2635960"
  },
  {
    "text": "have like you Ser a profile and you have you know the profile feed you have the",
    "start": "2635960",
    "end": "2641960"
  },
  {
    "text": "about section you have the photos section you have like events section or something like this and let's say like",
    "start": "2641960",
    "end": "2647680"
  },
  {
    "text": "the photos section it's is a little slow so in the traditional HTML model if it's",
    "start": "2647680",
    "end": "2652800"
  },
  {
    "text": "slow you're like stuck on the server trying to send the HTML for it and like you don't have the data yet you can't",
    "start": "2652800",
    "end": "2659079"
  },
  {
    "text": "really skip over it like you're you're already in the HTML like you're you're kind of stuck there and then this idea",
    "start": "2659079",
    "end": "2665599"
  },
  {
    "text": "that like Facebook uh used in its PHP setup was to have an abstraction that lets you break down the page into",
    "start": "2665599",
    "end": "2672359"
  },
  {
    "text": "independent sections that were called pagels and each Pagel could have its own",
    "start": "2672359",
    "end": "2677599"
  },
  {
    "text": "uh like data dependencies CSS dependencies JavaScript dependencies and",
    "start": "2677599",
    "end": "2684079"
  },
  {
    "text": "the idea was to send it kind of bread first so you kind of get the Chrome of",
    "start": "2684079",
    "end": "2689319"
  },
  {
    "text": "the page with with this with this shimmers for pagelets then like each pagelet can kind of re you know stream",
    "start": "2689319",
    "end": "2694960"
  },
  {
    "text": "in later and it sends a little bit of glue code to just put it in the right place in the thumb and so it kind of",
    "start": "2694960",
    "end": "2700760"
  },
  {
    "text": "keeps revealing like with nested like a train schedule you know like more data arrived let's let's reveal a bit more",
    "start": "2700760",
    "end": "2707520"
  },
  {
    "text": "more like CSS arrived we're ready to reveal this piece and so this is something we integrated with react and",
    "start": "2707520",
    "end": "2713599"
  },
  {
    "text": "this is this is what suspense is I mean suspense in general is just an API that lets just say this part of the tree if",
    "start": "2713599",
    "end": "2720720"
  },
  {
    "text": "it's not ready show a glimmer or like show a placeholder or like show like a spinner or whatever you specify so it's",
    "start": "2720720",
    "end": "2727520"
  },
  {
    "text": "it's a very kind of designery concept it's like it's how designers think about loading States like they don't think",
    "start": "2727520",
    "end": "2733200"
  },
  {
    "text": "about promises or other fion they just think about here's a part of the screen if it's not ready show this fullback",
    "start": "2733200",
    "end": "2740200"
  },
  {
    "text": "here's like the fullback I designed and it's such a powerful concept because if it's declarative it means you can build",
    "start": "2740200",
    "end": "2745960"
  },
  {
    "text": "technology that understands what to do if something's not ready and so like one",
    "start": "2745960",
    "end": "2751280"
  },
  {
    "text": "thing you can use it for is is this kind of streaming where if on the server you encounter that like if pie is not ready",
    "start": "2751280",
    "end": "2757760"
  },
  {
    "text": "you just you send the fullback and then you kind of load you know you send the rest of it later so this is this kind of",
    "start": "2757760",
    "end": "2765000"
  },
  {
    "text": "how react solves this problem with like previously in traditional kind of service side rendering Solutions you had",
    "start": "2765000",
    "end": "2771040"
  },
  {
    "text": "to download all JavaScript just for it to start kind of hydrating by hydrating",
    "start": "2771040",
    "end": "2776880"
  },
  {
    "text": "I mean this process of attaching the event handlers and becoming interactive and so it kind of became like it had to",
    "start": "2776880",
    "end": "2782839"
  },
  {
    "text": "become interactive in a single pass when all the code and all the data and all",
    "start": "2782839",
    "end": "2788040"
  },
  {
    "text": "HTML has already been downloaded but with suspense and you know you don't need to do anything special for it it's",
    "start": "2788040",
    "end": "2794119"
  },
  {
    "text": "just you know it's just how it works if you specify these suspense placeholders around pieces of content that are maybe",
    "start": "2794119",
    "end": "2800960"
  },
  {
    "text": "slower react actually hydrates it in chunks as well so it's able to kind of",
    "start": "2800960",
    "end": "2806000"
  },
  {
    "text": "hydrate the first pass where all the things like outside uh you know photos and about and the feed become",
    "start": "2806000",
    "end": "2812440"
  },
  {
    "text": "interactive then like as it gets a bit as a bit more code is downloaded like now has the code for the feet composer",
    "start": "2812440",
    "end": "2819880"
  },
  {
    "text": "so maybe you can like like posts and all of this of course happens like you know within like something like 10 seconds so",
    "start": "2819880",
    "end": "2825920"
  },
  {
    "text": "it's it's not about you know something super long running but it's just like chunked up so that it's able to do that",
    "start": "2825920",
    "end": "2832480"
  },
  {
    "text": "in in small parts yeah that makes perfect sense um I I also feel like that's kind of a little bit of like the",
    "start": "2832480",
    "end": "2838280"
  },
  {
    "text": "Astro Islands uh like Paradigm as well like you know where breaking things up",
    "start": "2838280",
    "end": "2843480"
  },
  {
    "text": "into smaller chunks allows for kind of faster processing and you know and better kind of prioritization of like",
    "start": "2843480",
    "end": "2849280"
  },
  {
    "text": "what should load first etc etc and you know just browsers are pretty fast parsing JavaScript in general these days",
    "start": "2849280",
    "end": "2855880"
  },
  {
    "text": "but you know by chunking you're able to kind of like Get shorten that",
    "start": "2855880",
    "end": "2861680"
  },
  {
    "text": "[Music]",
    "start": "2861680",
    "end": "2875839"
  },
  {
    "text": "time",
    "start": "2875839",
    "end": "2878839"
  },
  {
    "text": "[Music] what's up friends I'm here with Conrad",
    "start": "2881350",
    "end": "2887680"
  },
  {
    "text": "hoffmire from Power sync power sync is the syn layer that enables an offline first architecture to make your",
    "start": "2887680",
    "end": "2893960"
  },
  {
    "text": "application real time and reactive Conrad why is offline first local first",
    "start": "2893960",
    "end": "2899920"
  },
  {
    "text": "a big deal right now for developers we're really excited about local first as a movement and we think it's going to",
    "start": "2899920",
    "end": "2905520"
  },
  {
    "text": "become the default architect picture for a very large number of apps that are going to be built going forward just",
    "start": "2905520",
    "end": "2910800"
  },
  {
    "text": "because it has really big benefits for both developers and end users so taking a step back just looking at what local",
    "start": "2910800",
    "end": "2916680"
  },
  {
    "text": "first is so it's an architecture where your app code Works directly with the client side in beta database which then",
    "start": "2916680",
    "end": "2923119"
  },
  {
    "text": "automatically syncs with a backend database in the background that's compared to Cloud first apps where they",
    "start": "2923119",
    "end": "2928200"
  },
  {
    "text": "mostly use a cloud data store via apis that has some really big benefits for",
    "start": "2928200",
    "end": "2933599"
  },
  {
    "text": "developers and end users having a local database and syncing with the cloud in the background the biggest benefit for",
    "start": "2933599",
    "end": "2939760"
  },
  {
    "text": "end users is that everything in the app feels instant because the app is working with a local database and you don't have",
    "start": "2939760",
    "end": "2945480"
  },
  {
    "text": "to do round trips to the cloud there's no loading Spinners everything can just load instantly it also means that the",
    "start": "2945480",
    "end": "2951160"
  },
  {
    "text": "apps can be always available for the most part regardless of connection so even if the user goes offline the app is",
    "start": "2951160",
    "end": "2956920"
  },
  {
    "text": "always available so like you said you know if you have a momentary lapse in connectivity if you're driving through a tunnel or if you're on the subway or if",
    "start": "2956920",
    "end": "2962400"
  },
  {
    "text": "you're out in a rural area you don't have latency and the app can just keep on working and loading data out of the local database so this move to an",
    "start": "2962400",
    "end": "2969359"
  },
  {
    "text": "offline first architecture what are the biggest benefits for developers the biggest benefit for developers is that",
    "start": "2969359",
    "end": "2975760"
  },
  {
    "text": "it really simplifies State Management so State Management is a headache for most apps developers typically work with some",
    "start": "2975760",
    "end": "2981920"
  },
  {
    "text": "kind of State Management library or framework there's a lot of kind of finicky aspects to it but with local",
    "start": "2981920",
    "end": "2987319"
  },
  {
    "text": "first the global state is simply stored in the local database like a sqi",
    "start": "2987319",
    "end": "2992480"
  },
  {
    "text": "database and that really simplifies the app code it keeps your logic really simple and functional because your UI",
    "start": "2992480",
    "end": "2998839"
  },
  {
    "text": "basically just reflects the content of the database so it just makes everything a lot simpler and then there's other benefits for developers too since you're",
    "start": "2998839",
    "end": "3005720"
  },
  {
    "text": "working with data and logic locally your back end becomes simpler you have to do less API development on the back end you",
    "start": "3005720",
    "end": "3011799"
  },
  {
    "text": "can shift a lot of stuff to the front end a lot of working with the data manipulating the data and and logic uh and they also reduce your backend",
    "start": "3011799",
    "end": "3018920"
  },
  {
    "text": "compute load and compute cost and your dependency on the backend in general so it kind of takes the backend API off the",
    "start": "3018920",
    "end": "3025880"
  },
  {
    "text": "critical path for the user using the application I like it very cool what what's your goal with power sync our",
    "start": "3025880",
    "end": "3032280"
  },
  {
    "text": "goal with power sync is to be framework agnostic and eventually even back in database agnostic but we already support",
    "start": "3032280",
    "end": "3037640"
  },
  {
    "text": "flutter react native JavaScript for web apps Scotland SDK is right around the",
    "start": "3037640",
    "end": "3042680"
  },
  {
    "text": "corner our web SDK plays well with any JavaScript framework including njs yeah",
    "start": "3042680",
    "end": "3047960"
  },
  {
    "text": "the goal is to be framework agnostic and we will also be becoming increasingly backend database agnostic so supporting",
    "start": "3047960",
    "end": "3053920"
  },
  {
    "text": "additional backend databases not just postgress but also Microsoft SQL server my SQL Etc but there's a ton of",
    "start": "3053920",
    "end": "3059200"
  },
  {
    "text": "applications that can communicate with the cloud asynchronously where you can primarily work with a local database and",
    "start": "3059200",
    "end": "3065720"
  },
  {
    "text": "therefore we think for the majority of apps local first will become sort of the default architecture okay the next step",
    "start": "3065720",
    "end": "3072200"
  },
  {
    "text": "is to head to powers sync.com changw to learn more take your application offline first for free with",
    "start": "3072200",
    "end": "3079280"
  },
  {
    "text": "powersync using their free tier no credit card required again Powers sync.com",
    "start": "3079280",
    "end": "3085559"
  },
  {
    "text": "changelog [Music] so all of this like fun around server",
    "start": "3085559",
    "end": "3092559"
  },
  {
    "text": "side rendering okay we have suspense and so where do we get to this like RSC how",
    "start": "3092559",
    "end": "3097760"
  },
  {
    "text": "do react server components kind of come into uh fruition right like what problem are they I mean I think we've kind of",
    "start": "3097760",
    "end": "3104480"
  },
  {
    "text": "maybe even set the problem up pretty clearly but I'd love to hear in your words like what problem are we solving",
    "start": "3104480",
    "end": "3110359"
  },
  {
    "text": "by bringing this kind of data fetching as kind of first class as a react primitive yeah so this is an inter",
    "start": "3110359",
    "end": "3117440"
  },
  {
    "text": "question because like I think we have this background of like here are things we've learned over the 10 years for",
    "start": "3117440",
    "end": "3123559"
  },
  {
    "text": "example like one thing is like you want to be able to start doing the mat of work without waiting for like everything",
    "start": "3123559",
    "end": "3129920"
  },
  {
    "text": "to finish like every previous stage to finish so you want things to be kind of like chunky you want to be able to like",
    "start": "3129920",
    "end": "3136839"
  },
  {
    "text": "send a part of the code and have like the rest load later and so on without wait in so you have this all these",
    "start": "3136839",
    "end": "3142480"
  },
  {
    "text": "constraints of like what a good solution should look like another thing we learned this client server waterfalls",
    "start": "3142480",
    "end": "3148440"
  },
  {
    "text": "are bad so you never really want the solution that forces you like you go to the server you get something back you",
    "start": "3148440",
    "end": "3155119"
  },
  {
    "text": "start rendering it you're like oh I need to go to the server again you know like use effect Fetch and use effect you're",
    "start": "3155119",
    "end": "3161520"
  },
  {
    "text": "like go to the server again get something you continue rendering and it's like oh we need to go to the server",
    "start": "3161520",
    "end": "3167839"
  },
  {
    "text": "again it's just you know it doesn't it's it's not efficient but it's it's how a lot of kind of single page apps end up",
    "start": "3167839",
    "end": "3174720"
  },
  {
    "text": "working so we have all these conru trains on what a good decision should look like but actually I like to think",
    "start": "3174720",
    "end": "3180400"
  },
  {
    "text": "about react Ser components as you know not some kind of optimization or you",
    "start": "3180400",
    "end": "3185680"
  },
  {
    "text": "know not not just some kind of like way to make things faster I kind of like to think about it as combining you know two",
    "start": "3185680",
    "end": "3192960"
  },
  {
    "text": "mental models that have been pretty successful in the past like one is the traditional kind of request response",
    "start": "3192960",
    "end": "3199400"
  },
  {
    "text": "mental model that we liked in PHP or rails where you know you're in the",
    "start": "3199400",
    "end": "3205280"
  },
  {
    "text": "programming environment that has the data so you can easily kind of query it you can you can access it directly and",
    "start": "3205280",
    "end": "3212000"
  },
  {
    "text": "then the other Paradigm is traditional react Paradigm where uh you're on the client so you can instantly respond to",
    "start": "3212000",
    "end": "3218839"
  },
  {
    "text": "interactions and so react server components kind of tries to answer the question what if you tied these two",
    "start": "3218839",
    "end": "3225200"
  },
  {
    "text": "paradigms kind of together and you could create components that span both of",
    "start": "3225200",
    "end": "3231319"
  },
  {
    "text": "these worlds and as a concrete example you know it doesn't even necessarily require a server that runs JavaScript",
    "start": "3231319",
    "end": "3238680"
  },
  {
    "text": "because you know another another kind of thing we learned over those 10 years is if you have some code that's able to",
    "start": "3238680",
    "end": "3244760"
  },
  {
    "text": "serve a request he can also runs that code during the build in some cases so",
    "start": "3244760",
    "end": "3250520"
  },
  {
    "text": "that's that's how static generators like you know Gatsby or jackl in the Ruby",
    "start": "3250520",
    "end": "3256359"
  },
  {
    "text": "ecosystem work is that you can have a server but you you have a tool that calls the server during the build with",
    "start": "3256359",
    "end": "3263520"
  },
  {
    "text": "predefined file folders or slugs like for a block and then you have the the final product and then you can only you",
    "start": "3263520",
    "end": "3270799"
  },
  {
    "text": "know it's enough to have a static server that just serves those files so you don't actually need to run a server and",
    "start": "3270799",
    "end": "3276000"
  },
  {
    "text": "so react server components are kind of similar in that you know you could run a server with them but you could also run",
    "start": "3276000",
    "end": "3281680"
  },
  {
    "text": "them during the build if you're building something like a Blog where you know ahead of time like what kind of routes",
    "start": "3281680",
    "end": "3287000"
  },
  {
    "text": "you have and you just kind of pre-render them but I think the main thing that that's like important there is for",
    "start": "3287000",
    "end": "3293280"
  },
  {
    "text": "example if I'm if I'm making a Blog with react right like let's say I want to",
    "start": "3293280",
    "end": "3298319"
  },
  {
    "text": "display a searchable list of my blog posts and let's say for example that I",
    "start": "3298319",
    "end": "3303960"
  },
  {
    "text": "don't actually have like too many blog posts so I don't need to have like run a server that like executes the search I",
    "start": "3303960",
    "end": "3310480"
  },
  {
    "text": "really want it to be like a local thing where like I have a text box I start typing into it and it filters uh the",
    "start": "3310480",
    "end": "3317680"
  },
  {
    "text": "kind of like an spba right like I just start typing and I already have the data it just shows the filtered posts so the",
    "start": "3317680",
    "end": "3325160"
  },
  {
    "text": "thing is in react I really want to be able to take things on the screen and",
    "start": "3325160",
    "end": "3330680"
  },
  {
    "text": "make them into components so just like a designer thinks about the user interface like the designer doesn't think about",
    "start": "3330680",
    "end": "3337319"
  },
  {
    "text": "server or client or like any of that jazz or like the designer doesn't care where the data is coming from they just",
    "start": "3337319",
    "end": "3343799"
  },
  {
    "text": "say like here's an article here's a like a comment box or here's like a searchable list but the problem is that",
    "start": "3343799",
    "end": "3351839"
  },
  {
    "text": "in traditional react a searchable list that I described is kind of an impossible ible component because it",
    "start": "3351839",
    "end": "3357960"
  },
  {
    "text": "depends on data from two different computers because it it depends on the current state of the input so it depends",
    "start": "3357960",
    "end": "3364960"
  },
  {
    "text": "on like what what you've typed and like I as an author I just can't know that you know I can't know this ahead of time",
    "start": "3364960",
    "end": "3371000"
  },
  {
    "text": "this is a computation on your machine but then it also depends on the list of blog posts which is something that your",
    "start": "3371000",
    "end": "3377960"
  },
  {
    "text": "computer can't know because that data is is mine like I have to pass it to you somehow and so if you had a if you had",
    "start": "3377960",
    "end": "3385440"
  },
  {
    "text": "to write a component like this in traditional client side react it would have to accept all blog posts as props",
    "start": "3385440",
    "end": "3392520"
  },
  {
    "text": "so it would not be self-contained because it would need that data to be coming from somewhere so it's not really",
    "start": "3392520",
    "end": "3399200"
  },
  {
    "text": "I can't really have like a block you know searchable block list component and like put it into two places because I",
    "start": "3399200",
    "end": "3405839"
  },
  {
    "text": "would have to somehow plump the data into it and so with server components the idea is that well what if you know",
    "start": "3405839",
    "end": "3413480"
  },
  {
    "text": "the data could be coming from a parent compon component that just ran ahead of time on my computer so the component",
    "start": "3413480",
    "end": "3421240"
  },
  {
    "text": "execution kind of becomes split where I can have like a component that runs on my computer that reads you know the list",
    "start": "3421240",
    "end": "3427839"
  },
  {
    "text": "of blog posts and it renders the component that will later run on your computer that does the actual filtering",
    "start": "3427839",
    "end": "3435280"
  },
  {
    "text": "and it's just a shift in mental model from when you like where is the data coming from because in traditional",
    "start": "3435280",
    "end": "3441720"
  },
  {
    "text": "client side SP spas and this model you kind of think of the data comes somewhere from from the side you kind of",
    "start": "3441720",
    "end": "3447559"
  },
  {
    "text": "think of like I write I write a component it does some kind of a fetch you know and and like the data is it",
    "start": "3447559",
    "end": "3453720"
  },
  {
    "text": "like weights for something but with server components the mental model is kind of like well the data is just",
    "start": "3453720",
    "end": "3459079"
  },
  {
    "text": "coming from a parent component that already ran like on the server or during the build so it's like the data always",
    "start": "3459079",
    "end": "3467200"
  },
  {
    "text": "comes from above yeah so I think this is where I get a little confused and so you're saying that like the data comes",
    "start": "3467200",
    "end": "3473280"
  },
  {
    "text": "from a parent component that calculates it ahead of time but like how do you how do you calculate it ahead of time I I",
    "start": "3473280",
    "end": "3479119"
  },
  {
    "text": "mean you know if it's dependent on input that you get from a user I think that's a little yeah so you can imagine for",
    "start": "3479119",
    "end": "3485039"
  },
  {
    "text": "example if I'm talking about like searchable blog post component right what I do is I split it in two so there",
    "start": "3485039",
    "end": "3492319"
  },
  {
    "text": "is kind of like a boundary between them in react server components is it's",
    "start": "3492319",
    "end": "3497359"
  },
  {
    "text": "called use client directive but you can kind of think of it as being similar as a script tag so there's the stuff inside",
    "start": "3497359",
    "end": "3504839"
  },
  {
    "text": "the script tab you know that's the component that will run on your computer and then there's stuff outside of it",
    "start": "3504839",
    "end": "3510440"
  },
  {
    "text": "that's like the stuff that runs ahead of time so maybe like one way to think of it is like you can imagine if this is",
    "start": "3510440",
    "end": "3516599"
  },
  {
    "text": "PHP and jQuery instead of you know react on both sides then you have the PHP side",
    "start": "3516599",
    "end": "3522280"
  },
  {
    "text": "that you know does like enumerates the the folders in my block and then you",
    "start": "3522280",
    "end": "3527960"
  },
  {
    "text": "know it would render a script tag with my jQuery code and pass some data to it",
    "start": "3527960",
    "end": "3533240"
  },
  {
    "text": "so this is kind of similar except you don't think in script tags at all it's just you you kind of like write a",
    "start": "3533240",
    "end": "3538559"
  },
  {
    "text": "component that does uh await fs. read deer to read the files uh on you know on",
    "start": "3538559",
    "end": "3544760"
  },
  {
    "text": "the server or during the Bel and then you just say return your other component",
    "start": "3544760",
    "end": "3550000"
  },
  {
    "text": "that is able to do the filtering and has US state in it and you just pass block posts equals blog posts to that",
    "start": "3550000",
    "end": "3556760"
  },
  {
    "text": "component and then in the child component you just have all the blog post as props so you can filter them and",
    "start": "3556760",
    "end": "3563079"
  },
  {
    "text": "you can use State there so you kind of like think about it in in isolation here",
    "start": "3563079",
    "end": "3568480"
  },
  {
    "text": "is like the first pass and here is the second pass yeah I'm not sure if this like is too abstract but yeah no no I",
    "start": "3568480",
    "end": "3575440"
  },
  {
    "text": "that's definitely not too abstract and I think it's sying it a little bit more but yeah go ahead Eric and we can kind of come back so you know being on like",
    "start": "3575440",
    "end": "3582480"
  },
  {
    "text": "the you know this react uh Journey for so long it's that was the synchronous",
    "start": "3582480",
    "end": "3588319"
  },
  {
    "text": "nature of react was the thing that I kind of thought that like initially it I understood it you know whenever you have",
    "start": "3588319",
    "end": "3594280"
  },
  {
    "text": "you know in my mind it was like okay if you a function of State then you probably want this thing to you know be",
    "start": "3594280",
    "end": "3599880"
  },
  {
    "text": "straight in straight out sort of deal you know introducing promises you as we learned from like the state Le team you",
    "start": "3599880",
    "end": "3605200"
  },
  {
    "text": "know it's like okay now you have like this whole complex State machine that you're going to deal with like with a States and everything but whenever I saw",
    "start": "3605200",
    "end": "3611039"
  },
  {
    "text": "an async component within a wait for like data fetching it clicked for me",
    "start": "3611039",
    "end": "3616079"
  },
  {
    "text": "because that's always how I expected it to kind of work and it just took you",
    "start": "3616079",
    "end": "3621200"
  },
  {
    "text": "know basically years of like workarounds and basically rapper components to effectively accomplish like what I was",
    "start": "3621200",
    "end": "3626680"
  },
  {
    "text": "already trying to accomplish you know like within my code you I mentioned react like resolver before but then like",
    "start": "3626680",
    "end": "3631839"
  },
  {
    "text": "what kind of ended up happening is like we'd have a use effect doing a Fetch and that component effectively turned into",
    "start": "3631839",
    "end": "3637920"
  },
  {
    "text": "like the spinner loader component on the server whenever we rendered and spat it out and then like it finally actually",
    "start": "3637920",
    "end": "3643480"
  },
  {
    "text": "did the fetch on the client uh so like to me seeing like async was the async",
    "start": "3643480",
    "end": "3649000"
  },
  {
    "text": "component usage was that something that you know that started working because of rsc's or is it something that that you",
    "start": "3649000",
    "end": "3655760"
  },
  {
    "text": "know became supported because of suspense like what what architecture allowed there to be an asynchronous",
    "start": "3655760",
    "end": "3661520"
  },
  {
    "text": "component because it still requires because of the async nature does there need to be a suspense boundary above",
    "start": "3661520",
    "end": "3666920"
  },
  {
    "text": "anything that's you know an async component with an a weight on the inside yeah so we currently only I mean in the",
    "start": "3666920",
    "end": "3672839"
  },
  {
    "text": "future we might support some version of uh acing components on the client too",
    "start": "3672839",
    "end": "3677920"
  },
  {
    "text": "but currently it's only supported yeah in the in server components and I think",
    "start": "3677920",
    "end": "3683640"
  },
  {
    "text": "like a big reason for that is avoiding performance uh food guns because again",
    "start": "3683640",
    "end": "3689799"
  },
  {
    "text": "the like what you expect on the client in general is that you inspect uh instant interactions right so you expect",
    "start": "3689799",
    "end": "3696480"
  },
  {
    "text": "that when you change some State we're immediately able to respond with some kind of you know some kind of feedback",
    "start": "3696480",
    "end": "3702799"
  },
  {
    "text": "to the user and so if you could put arbitrary like acing components into the",
    "start": "3702799",
    "end": "3708119"
  },
  {
    "text": "tree then we don't we can't really show a new consistent tree until they have",
    "start": "3708119",
    "end": "3714119"
  },
  {
    "text": "executed so that might these delays and so the way server you know the server",
    "start": "3714119",
    "end": "3719520"
  },
  {
    "text": "components Paradigm solves this problem is that all the acing stuff actually",
    "start": "3719520",
    "end": "3724720"
  },
  {
    "text": "happens ahead of time like on the server or during the build so you never have",
    "start": "3724720",
    "end": "3729960"
  },
  {
    "text": "this issue where you change some State and then it gets stuck because it's like it's waiting for something on the client",
    "start": "3729960",
    "end": "3737640"
  },
  {
    "text": "like the it's more like a request response model where all the server components output is already precomputed",
    "start": "3737640",
    "end": "3744240"
  },
  {
    "text": "by the time you know you get the page like from your kind of client perspective they don't even exist like",
    "start": "3744240",
    "end": "3749960"
  },
  {
    "text": "you only kind of see uh the props that they gave you so you just you just have props from somewhere you don't really",
    "start": "3749960",
    "end": "3756279"
  },
  {
    "text": "kind of know where they're coming from and then if you do a navigation like that's where we do a refetch and on",
    "start": "3756279",
    "end": "3761640"
  },
  {
    "text": "navigation we can uh you know load the output of server components again for like the next page or for like a refresh",
    "start": "3761640",
    "end": "3769480"
  },
  {
    "text": "of the data but again all the acing stuff kind of executes on the server and then when you get it on the client it",
    "start": "3769480",
    "end": "3775599"
  },
  {
    "text": "kind of feels synchronous so you can you know you just read them from props you don't really like think about like",
    "start": "3775599",
    "end": "3780880"
  },
  {
    "text": "waiting for something got it yeah because on the server you don't have that consistency problem you know it's",
    "start": "3780880",
    "end": "3786440"
  },
  {
    "text": "it's really only a single state that ever gets rendered and that state comes from I guess instead of like a function",
    "start": "3786440",
    "end": "3792240"
  },
  {
    "text": "of State equals like the UI is it like a function of the request maybe a way of thinking about it",
    "start": "3792240",
    "end": "3798359"
  },
  {
    "text": "on the server yeah it's yeah it's kind of like a function of URL and I mean you can also think of it like it's function",
    "start": "3798359",
    "end": "3804279"
  },
  {
    "text": "of data in the sense just like you kind of read State on the client like sure it's coming from react",
    "start": "3804279",
    "end": "3810440"
  },
  {
    "text": "but kind of conceptually just like read something that's uh you know some memory on your computer that state whereas like",
    "start": "3810440",
    "end": "3817799"
  },
  {
    "text": "some memory on the server that's kind of data it's probably like something from the database or something from a file",
    "start": "3817799",
    "end": "3823119"
  },
  {
    "text": "read or even you know result of like fetching from microservices but they don't have to be exposed to the client",
    "start": "3823119",
    "end": "3830000"
  },
  {
    "text": "computer so it's just like UI is a function of data and it's it's kind of like UI is a function of both it's just",
    "start": "3830000",
    "end": "3836119"
  },
  {
    "text": "executed in two stages like first all the all the stuff that depends on the data executes on the server that output",
    "start": "3836119",
    "end": "3843319"
  },
  {
    "text": "gets sent to the client and that's your normal react tree that works as usual got it yeah and and that's for me that's",
    "start": "3843319",
    "end": "3850079"
  },
  {
    "text": "what where it clicks Dan like so essentially there's a remote call that's",
    "start": "3850079",
    "end": "3855240"
  },
  {
    "text": "executed from the client that's like go prefetch go pre-calculate these things",
    "start": "3855240",
    "end": "3860279"
  },
  {
    "text": "right like go go render out this part of the tree and then you know based on these inputs and then send that back and",
    "start": "3860279",
    "end": "3867319"
  },
  {
    "text": "that computation is done in the server and so I think that's the piece that I needed to hear because you know you",
    "start": "3867319",
    "end": "3872799"
  },
  {
    "text": "mentioned like the stuff happens ahead of time but it's really when you say ahead of time it's really ahead of time of the page like fully rendering right",
    "start": "3872799",
    "end": "3878960"
  },
  {
    "text": "like I I mean like yeah it's just when you're like in The Client First mentality you kind of think of the",
    "start": "3878960",
    "end": "3885039"
  },
  {
    "text": "client code as the beginning of the world it's kind of like this is where my program starts so you kind of like think",
    "start": "3885039",
    "end": "3891559"
  },
  {
    "text": "oh like if I need data I need to like call for it but the thing is like this client program was already sent by",
    "start": "3891559",
    "end": "3898200"
  },
  {
    "text": "another computer server yeah yeah so that that all the data stuff could have just happened there and be inlined into",
    "start": "3898200",
    "end": "3905480"
  },
  {
    "text": "the stuff that's get sent to you and that's how traditional kind of server side rendering worked is like if jQuery",
    "start": "3905480",
    "end": "3911359"
  },
  {
    "text": "plugins needed some data PHP could put that data into the page right and so it kind of extends this idea that another",
    "start": "3911359",
    "end": "3918480"
  },
  {
    "text": "way to think about it is it's it's kind of like sending jsx over the wire almost except of course for first load you also",
    "start": "3918480",
    "end": "3925160"
  },
  {
    "text": "want to send HTML but it's kind of like if you had one API endpoint and the only",
    "start": "3925160",
    "end": "3930440"
  },
  {
    "text": "thing that API endpoint could do is return like give me a jsx for the next page and that's what it kind of responds",
    "start": "3930440",
    "end": "3937480"
  },
  {
    "text": "with yeah and and that's like really smart because it's you're we're able to kind of do more with less you know like",
    "start": "3937480",
    "end": "3943520"
  },
  {
    "text": "and we're able to do do more earlier and leverage leverage this like hidden server right like that we don't really",
    "start": "3943520",
    "end": "3950240"
  },
  {
    "text": "think about a bit more efficiently definitely that and also it lets you think in components so it kind of breaks",
    "start": "3950240",
    "end": "3957520"
  },
  {
    "text": "down this you know like I have because usually you think of these as like two",
    "start": "3957520",
    "end": "3962839"
  },
  {
    "text": "processes that are completely unrelated like prepare all the data prepare like",
    "start": "3962839",
    "end": "3967880"
  },
  {
    "text": "you know deal with some state but like in this like filterable list example you",
    "start": "3967880",
    "end": "3973160"
  },
  {
    "text": "know it's like specific data and specific State I needed to render a UI and so I can kind of compose these",
    "start": "3973160",
    "end": "3980079"
  },
  {
    "text": "components together and now I can have this filterable list component that I can just like render in different Parts",
    "start": "3980079",
    "end": "3986359"
  },
  {
    "text": "you know on different pages if needed uh with different props like you know I can I just use it as a react component but",
    "start": "3986359",
    "end": "3993119"
  },
  {
    "text": "it it's able to kind of access both the data you know from the server and the",
    "start": "3993119",
    "end": "3998680"
  },
  {
    "text": "client part is able to access the the state and and and that kind of stuff so it's about full stack components that",
    "start": "3998680",
    "end": "4005119"
  },
  {
    "text": "are composable you you you said something I thought was actually interesting is said like paraphrase like",
    "start": "4005119",
    "end": "4010400"
  },
  {
    "text": "to the effect of you know when we see a component you know we see like a client component as like the start of it or",
    "start": "4010400",
    "end": "4016279"
  },
  {
    "text": "start of the world or whatever and rsc's I think clicked for me because you know",
    "start": "4016279",
    "end": "4021359"
  },
  {
    "text": "it was always starting on the server you know static generation to me was like an optimization of like well okay well I'll",
    "start": "4021359",
    "end": "4028079"
  },
  {
    "text": "just perform that first request on the server and cach it and write it out so like it always kind of clicked I think a",
    "start": "4028079",
    "end": "4034400"
  },
  {
    "text": "lot of react developers came in at the single page app time and yeah where it",
    "start": "4034400",
    "end": "4039559"
  },
  {
    "text": "was all I mean I'm I'm working on an app today that's like I think the codebase goes back six plus years with like r",
    "start": "4039559",
    "end": "4045599"
  },
  {
    "text": "router 3 and so whenever we see that do you think that that client first sort of",
    "start": "4045599",
    "end": "4053480"
  },
  {
    "text": "experience history or mentality is a reason why there was like a knee-jerk reaction to you know a wait DB SQL call",
    "start": "4053480",
    "end": "4060960"
  },
  {
    "text": "or something like why are you doing a SQL call in my code I can't remember how long ago this happened but like the fact",
    "start": "4060960",
    "end": "4066079"
  },
  {
    "text": "that a react component could access the database within the component seemed to like spark some fud do you think it was",
    "start": "4066079",
    "end": "4072960"
  },
  {
    "text": "that kind of like Client First mentality that allow that sort of mentality to take place yeah I mean I think it's",
    "start": "4072960",
    "end": "4078880"
  },
  {
    "text": "definitely I mean part of it is like sure like us an SQL Insider component on a conference slide like yeah you're",
    "start": "4078880",
    "end": "4086319"
  },
  {
    "text": "going to you know you're going to make some people mad that's just you know it is kind of a tooll move a little bit but",
    "start": "4086319",
    "end": "4091480"
  },
  {
    "text": "it got the point across right right but I think like sometimes it it feels like maybe it gets the wrong point across",
    "start": "4091480",
    "end": "4097719"
  },
  {
    "text": "because people have an expectation when they see react code that it executes on",
    "start": "4097719",
    "end": "4102960"
  },
  {
    "text": "the client and so if you see react code during like a SQL query you kind of think of like is it calling SQL from a",
    "start": "4102960",
    "end": "4109000"
  },
  {
    "text": "client a lot of people for example like one of the misconceptions about RSC is that people think that it mixes client",
    "start": "4109000",
    "end": "4115440"
  },
  {
    "text": "side and server side code in the same file so that actually never happens that's like something we don't allow",
    "start": "4115440",
    "end": "4121798"
  },
  {
    "text": "specifically because it's very hard to understand uh like that's something that current Solutions do sometimes like next",
    "start": "4121799",
    "end": "4127838"
  },
  {
    "text": "Pages router mixes server and client code in the same file remix mixes server and client code the current version of",
    "start": "4127839",
    "end": "4134719"
  },
  {
    "text": "remix does that uh but like in the future you know with like eventual uh hopefully like adop an",
    "start": "4134719",
    "end": "4140960"
  },
  {
    "text": "RSC would like to move where we never do that so like in the model we never mix",
    "start": "4140960",
    "end": "4146640"
  },
  {
    "text": "server and client code in the same file but I think yeah the njar reaction is partially just because when you see",
    "start": "4146640",
    "end": "4152798"
  },
  {
    "text": "something shaped like a react component you think that it's something that has to execute on the client but I think",
    "start": "4152799",
    "end": "4158920"
  },
  {
    "text": "it's kind of like uh you know like in in The Matrix movie uh where like Neo",
    "start": "4158920",
    "end": "4164159"
  },
  {
    "text": "realizes actually like the world is not real it's created from another world I think that's kind of like a similar you",
    "start": "4164159",
    "end": "4170120"
  },
  {
    "text": "know if you're like client Centric like you write a component but like what do you think sent this component to the",
    "start": "4170120",
    "end": "4176440"
  },
  {
    "text": "browser like there was a piece of code that did that where whether it's like a static file server or like an actual",
    "start": "4176440",
    "end": "4183318"
  },
  {
    "text": "server that like emitted the script tag like there was some code that's responsible for your component getting",
    "start": "4183319",
    "end": "4188880"
  },
  {
    "text": "there so what if you had full control over that code and what if you had a component model for that code AS as well",
    "start": "4188880",
    "end": "4195719"
  },
  {
    "text": "so that you could write components that kind of span Both Worlds and that are able to you know pass data and then you",
    "start": "4195719",
    "end": "4202520"
  },
  {
    "text": "can reuse them yeah so Dan like what's really interesting like for me about better digesting this this kind of",
    "start": "4202520",
    "end": "4208960"
  },
  {
    "text": "Paradigm is like there's this shift away from like you know what we would traditionally do to like make a request",
    "start": "4208960",
    "end": "4215679"
  },
  {
    "text": "to go get some Json and then like you know take that and like rehydrate our apps right and you see this also with uh",
    "start": "4215679",
    "end": "4221600"
  },
  {
    "text": "HTM X right with where they do this transclusion right they kind of skip that that whole Json serialization steps",
    "start": "4221600",
    "end": "4229080"
  },
  {
    "text": "uh you know so but it this very much feels like that but like with reacts uh",
    "start": "4229080",
    "end": "4234679"
  },
  {
    "text": "Primitives right so like how do we now just like skip a whole bunch of steps and just make data fetching first class",
    "start": "4234679",
    "end": "4240920"
  },
  {
    "text": "build it into like the component and like give you a way to do that in a more",
    "start": "4240920",
    "end": "4246080"
  },
  {
    "text": "efficient way like that that that's kind of what's clicking for me yeah yeah I think philosophically it's kind of funny",
    "start": "4246080",
    "end": "4252000"
  },
  {
    "text": "that HDMX is you know HDMX is it's like what htx had a component model right",
    "start": "4252000",
    "end": "4258000"
  },
  {
    "text": "like htx doesn't really have a component model because on the server you're expected to write templates that emit",
    "start": "4258000",
    "end": "4264480"
  },
  {
    "text": "htx stuff and then like htx has like a bunch of attributes that kind of specify some client side Behavior so what if",
    "start": "4264480",
    "end": "4271560"
  },
  {
    "text": "like you took you know htx attributes they're kind of like angular 1.x directives so like what if we just turn",
    "start": "4271560",
    "end": "4279040"
  },
  {
    "text": "that into react components and that would be the client side and then what if we took the templates that theit the",
    "start": "4279040",
    "end": "4284880"
  },
  {
    "text": "HTM and what if we turn that into react components and that would be server components and so now you have kind of",
    "start": "4284880",
    "end": "4291320"
  },
  {
    "text": "react on both sides and it always like the mental model is just it executes in two stages the server stuff executes",
    "start": "4291320",
    "end": "4298679"
  },
  {
    "text": "first that produces the jsx that gets sent to the client and that's where State updates happen and so State",
    "start": "4298679",
    "end": "4304360"
  },
  {
    "text": "updates can always be like instant because this is the part of the code that only depends on State and then the",
    "start": "4304360",
    "end": "4311520"
  },
  {
    "text": "components that also depend on data that is the stuff where you know you do like a router refetch or server action or",
    "start": "4311520",
    "end": "4319159"
  },
  {
    "text": "like you do like one of those things that are kind of triggering you know a refresh and then that sends you know",
    "start": "4319159",
    "end": "4326639"
  },
  {
    "text": "that re-executes the components on the server that that are necessary that sends jsx and because it's not sending",
    "start": "4326639",
    "end": "4333159"
  },
  {
    "text": "HTML you know it can be turned into into HTML that's what we do for first render",
    "start": "4333159",
    "end": "4338440"
  },
  {
    "text": "but for kind of next navigations we actually don't we just send the tree itself and so this for example enable",
    "start": "4338440",
    "end": "4345440"
  },
  {
    "text": "you to have animations between these trees or it's kind of like just receiving new props like you're like",
    "start": "4345440",
    "end": "4351520"
  },
  {
    "text": "well I guess like I got new props I can you know react reenders it without destroying the Dom so it's just a way to",
    "start": "4351520",
    "end": "4359120"
  },
  {
    "text": "get props from the server okay so if we're looking at like the network right so if I have the network tab open like",
    "start": "4359120",
    "end": "4365520"
  },
  {
    "text": "what what am I seeing here using using rsc's this is very interesting I think I",
    "start": "4365520",
    "end": "4370880"
  },
  {
    "text": "think it's like it's fascinating how how it works so I'll first talk about the case of navigations after the first load",
    "start": "4370880",
    "end": "4378560"
  },
  {
    "text": "because first load is special because for first load we have to send HTML as well so that kind of like you know it",
    "start": "4378560",
    "end": "4384440"
  },
  {
    "text": "has this like a program inside a program like we want to have the snapshot that the browser can display immediately",
    "start": "4384440",
    "end": "4390159"
  },
  {
    "text": "because of course the browser doesn't understand like react's custom format but then for navigations we don't need",
    "start": "4390159",
    "end": "4395560"
  },
  {
    "text": "HTML because we don't want to replace you know inner HTML and like lose all state so we actually just send the react",
    "start": "4395560",
    "end": "4401840"
  },
  {
    "text": "tree so conceptually you can think of it as like what you're going to see is kind of like a GX tree but in a different",
    "start": "4401840",
    "end": "4408960"
  },
  {
    "text": "format so one way to think about it is so if you if you take a tag right like a",
    "start": "4408960",
    "end": "4415040"
  },
  {
    "text": "diff you can write it in as HTML so you can write it you know angle brackets diff or you can write it as Json so you",
    "start": "4415040",
    "end": "4422600"
  },
  {
    "text": "could say like type column string div like it has to be a string right like we",
    "start": "4422600",
    "end": "4427719"
  },
  {
    "text": "need to tell what what kind of what kind of element it is and then if it has some attributes like we could say like type",
    "start": "4427719",
    "end": "4433560"
  },
  {
    "text": "div props like class name something right so that's that's like ajacent object and so you can think of a react",
    "start": "4433560",
    "end": "4440400"
  },
  {
    "text": "component tree uh or like actually like as a D Tree like you could think of it",
    "start": "4440400",
    "end": "4445520"
  },
  {
    "text": "as sending it as as this like turning it into Json right so you could say like type diff props children a something and",
    "start": "4445520",
    "end": "4453840"
  },
  {
    "text": "that would be like an inchor tag so you can kind of think of HTML as being expressible in like Json format then the",
    "start": "4453840",
    "end": "4460120"
  },
  {
    "text": "next thing is sometimes you know you also want interactivity and like clients",
    "start": "4460120",
    "end": "4465159"
  },
  {
    "text": "it code so you need to spec you need the client to know uh where to get that code",
    "start": "4465159",
    "end": "4470239"
  },
  {
    "text": "right kind of like in HTML this is solved with a script tag so in HTML you just have like a script tag with some",
    "start": "4470239",
    "end": "4476040"
  },
  {
    "text": "file name and then the browser will download it and like in our format it's kind of embedded into the tags so you",
    "start": "4476040",
    "end": "4483280"
  },
  {
    "text": "could have you know type div which is a built-in one or you could have like type",
    "start": "4483280",
    "end": "4488800"
  },
  {
    "text": "counter except wait like counter like it's not enough to send a string right because the browser doesn't know what",
    "start": "4488800",
    "end": "4494600"
  },
  {
    "text": "the counter is so really we send an object that says Source you know the URL",
    "start": "4494600",
    "end": "4499880"
  },
  {
    "text": "to the script so it's the same as script Source it's it's kind of like where to download that code from and the module",
    "start": "4499880",
    "end": "4506840"
  },
  {
    "text": "ID so like counter is maybe module number 20 in uh main.js or like chunks",
    "start": "4506840",
    "end": "4514159"
  },
  {
    "text": "something. JS and so this just tells react oh here's how I download this code for the counter uh and this is why like",
    "start": "4514159",
    "end": "4521199"
  },
  {
    "text": "react server component needs a bundler integration because we need a way to ask ask hey bundler go fetch the chunk and",
    "start": "4521199",
    "end": "4528320"
  },
  {
    "text": "give us the counter component from it and and so then react can use it so you really kind of see this tree that's you",
    "start": "4528320",
    "end": "4535520"
  },
  {
    "text": "know kind of like HTML tree but it's in Json and it has built-in elements like",
    "start": "4535520",
    "end": "4540960"
  },
  {
    "text": "strings and it has kind of references we call it a client reference which is really just an object that says here's",
    "start": "4540960",
    "end": "4547880"
  },
  {
    "text": "where to download the code for this component here's which chunk it's in and then the last part that's kind of",
    "start": "4547880",
    "end": "4553920"
  },
  {
    "text": "important is we don't send it as Json you know kind of as a normal depth first",
    "start": "4553920",
    "end": "4559360"
  },
  {
    "text": "Json object because that has the same problem I described earlier of like you have to you know drill down so instead",
    "start": "4559360",
    "end": "4566000"
  },
  {
    "text": "of it's kind of like Jason with holes where sometimes you just have like a hole that says like hole number zero",
    "start": "4566000",
    "end": "4572320"
  },
  {
    "text": "like hole number one and then the protocol actually sends them line by line so there's like here's the hole",
    "start": "4572320",
    "end": "4578120"
  },
  {
    "text": "number zero here's the whole number one and so this lets us like progressively show that tree and then the parts that",
    "start": "4578120",
    "end": "4584360"
  },
  {
    "text": "are not ready the suspense boundaries you can have your own suspense boundaries that show fullbacks and so",
    "start": "4584360",
    "end": "4589679"
  },
  {
    "text": "this let us stream even if some data fetches are slow this lets Ascend as much of the tree as possible as early as",
    "start": "4589679",
    "end": "4595400"
  },
  {
    "text": "possible and keep kind of streaming in the rest wow so we basically solved the problem that meta had or Facebook had",
    "start": "4595400",
    "end": "4602719"
  },
  {
    "text": "right facebook.com had many years ago yeah this is fascinating and so you know this is a good time to kind of ask about",
    "start": "4602719",
    "end": "4608760"
  },
  {
    "text": "the bundler topic because I think one of the things I I keep reading about is that oh well this you know react server",
    "start": "4608760",
    "end": "4616239"
  },
  {
    "text": "components allow you to send up like less JavaScript to the client right like which I think is like fantastic um and",
    "start": "4616239",
    "end": "4622639"
  },
  {
    "text": "because we're doing some some of that compute off the user's machine right so so we can kind of keep the JavaScript",
    "start": "4622639",
    "end": "4628600"
  },
  {
    "text": "that's needed for that off the user's machine right like duh um can you talk about some of that a little bit that's",
    "start": "4628600",
    "end": "4634639"
  },
  {
    "text": "like such a fantastic side benefit like I don't know if that was like the intended goal but like if or if that was",
    "start": "4634639",
    "end": "4640440"
  },
  {
    "text": "just like a happy side effect but like I'm here for it either way um so yeah I",
    "start": "4640440",
    "end": "4647000"
  },
  {
    "text": "think I think that's you know there's like a theme Here is like I think like a react early on it's built on a very",
    "start": "4647000",
    "end": "4652679"
  },
  {
    "text": "simple idea right like UI is a function of state and here it's kind of like react is a like UI is like a function of",
    "start": "4652679",
    "end": "4660520"
  },
  {
    "text": "data and state that's partially applied over the network and know that that's like a super computer sciency way to say",
    "start": "4660520",
    "end": "4667080"
  },
  {
    "text": "it but like it's just like a program that executes in two steps and the you know the intermediate result of the",
    "start": "4667080",
    "end": "4672800"
  },
  {
    "text": "first step is being sent and because conceptually this is a very simple idea and you know you could think of like PHP",
    "start": "4672800",
    "end": "4679560"
  },
  {
    "text": "plus jury app as also it's a program for two computers but these two parts can't really like talk to each other in some",
    "start": "4679560",
    "end": "4686480"
  },
  {
    "text": "well specified way and we say no there is a way to talk to them one of them passes props to the other one that is",
    "start": "4686480",
    "end": "4693120"
  },
  {
    "text": "how they communicate and so I think like you do get a lot of happy accidents from",
    "start": "4693120",
    "end": "4699159"
  },
  {
    "text": "this model just by kind of the way it works like you said yes like it lets you send less code to the client because a",
    "start": "4699159",
    "end": "4705760"
  },
  {
    "text": "bunch of logic could just you could run it ahead of time and this is maybe where like a comparison to something like",
    "start": "4705760",
    "end": "4711600"
  },
  {
    "text": "Astro is very appropriate where if you think of like Astro templates they kind",
    "start": "4711600",
    "end": "4716880"
  },
  {
    "text": "of serve the same role as server components like they execute ahead of time uh so you can you know like on my",
    "start": "4716880",
    "end": "4723520"
  },
  {
    "text": "blog I have this funny feature where I show the color of my blog posts it's",
    "start": "4723520",
    "end": "4729440"
  },
  {
    "text": "kind of like a gradient so like from older to you know from newer to older",
    "start": "4729440",
    "end": "4734840"
  },
  {
    "text": "but the gradient is adjusted by how recently I posted so you can see here are the recent posts cuz they're like in",
    "start": "4734840",
    "end": "4741520"
  },
  {
    "text": "the brightest color and then the Old Post are like kind of to Clos it to the end of the spectrum and so I use I use a",
    "start": "4741520",
    "end": "4747719"
  },
  {
    "text": "library that has that does color interpolation uh for that but because I",
    "start": "4747719",
    "end": "4753239"
  },
  {
    "text": "do this while generating the post I just do it on the server and I pass the interpolated colors as props to my",
    "start": "4753239",
    "end": "4760560"
  },
  {
    "text": "components so I don't need to actually yeah but then if I wanted to you know",
    "start": "4760560",
    "end": "4765600"
  },
  {
    "text": "like I could just move one line into the client component and now this Library would be on the client and now it it",
    "start": "4765600",
    "end": "4771639"
  },
  {
    "text": "would be able to respond to interact like if this was like an interactive Color Picker then it would make sense to",
    "start": "4771639",
    "end": "4777080"
  },
  {
    "text": "run it on the client it's kind of dis ability to like shift things back and forth that is really interesting and the",
    "start": "4777080",
    "end": "4783560"
  },
  {
    "text": "other thing that I think is maybe less well known but is actually also pretty valuable is not only we can send you",
    "start": "4783560",
    "end": "4791120"
  },
  {
    "text": "know some code now we don't need to send to the client at all because it just you know runs ahead of time or like on the",
    "start": "4791120",
    "end": "4796520"
  },
  {
    "text": "server but also for the code that we do have to send to the client we don't have",
    "start": "4796520",
    "end": "4801880"
  },
  {
    "text": "like one giant bundle that's like always the same and we don't even need to like",
    "start": "4801880",
    "end": "4807679"
  },
  {
    "text": "I mentioned earlier like nextjs router uh kind of did displayed by the route so like you send the code that's used by a",
    "start": "4807679",
    "end": "4814679"
  },
  {
    "text": "route but with server components a bundler is able you know this is kind of",
    "start": "4814679",
    "end": "4819800"
  },
  {
    "text": "more theoretical like current generation bundlers don't take advantage of this variable but in principle you only need",
    "start": "4819800",
    "end": "4826159"
  },
  {
    "text": "to really send the code uh that's actually used you know that's necessary for the current request or like for a",
    "start": "4826159",
    "end": "4833560"
  },
  {
    "text": "current page because this is another thing that like at Facebook was very important that if you send the code for",
    "start": "4833560",
    "end": "4839840"
  },
  {
    "text": "the feed you don't want to send like the client code for all possible story types",
    "start": "4839840",
    "end": "4845360"
  },
  {
    "text": "because there's like maybe like a hundred of them or if you're doing like a markdown you know if you're doing like",
    "start": "4845360",
    "end": "4851159"
  },
  {
    "text": "a Blog with uh client side examples in different Pages you don't want to send",
    "start": "4851159",
    "end": "4856440"
  },
  {
    "text": "like all of the client code whenever you visit the blog like you actually want to send the code that's used by the current",
    "start": "4856440",
    "end": "4863159"
  },
  {
    "text": "page and so because we execute server components execute on the server and they return client components and then",
    "start": "4863159",
    "end": "4871840"
  },
  {
    "text": "you know the script tags are only sent for the chunks that are actually used by the output so that's like kind of like",
    "start": "4871840",
    "end": "4878280"
  },
  {
    "text": "automatic like code split in that's and you don't even like need to write you know like Dynamic Imports or anything",
    "start": "4878280",
    "end": "4884159"
  },
  {
    "text": "it's just it kind of falls out of the Paradigm oh okay wow that's that is so cool what a really cool side effect yeah",
    "start": "4884159",
    "end": "4890440"
  },
  {
    "text": "it makes sense like because a react server component could also have client",
    "start": "4890440",
    "end": "4895719"
  },
  {
    "text": "components nested within it and like we don't really need to even process we don't need that chunk until we get you",
    "start": "4895719",
    "end": "4901840"
  },
  {
    "text": "know until we at the step of of the interaction right so that's awesome and",
    "start": "4901840",
    "end": "4907120"
  },
  {
    "text": "so I mean like obviously this is this is going to be a silly question now because I think we've really beat this topic to",
    "start": "4907120",
    "end": "4912560"
  },
  {
    "text": "death right but you do not need a quote unquote server to use react server components right like this is like a",
    "start": "4912560",
    "end": "4918080"
  },
  {
    "text": "pretty big Mis misconception and this is because we're able to use the server that's you used to kind of literally",
    "start": "4918080",
    "end": "4923920"
  },
  {
    "text": "serve your app right so so I I think there's there's kind of like different ways to look at it you",
    "start": "4923920",
    "end": "4930719"
  },
  {
    "text": "know there's like using react server components through the full where you like take full advantage of the Paradigm",
    "start": "4930719",
    "end": "4936920"
  },
  {
    "text": "and in this case it does make sense you know some things are just easier to do when you actually run a server that can",
    "start": "4936920",
    "end": "4942719"
  },
  {
    "text": "run some JavaScript code but there's kind of like you can take away different things from the Paradigm because really",
    "start": "4942719",
    "end": "4950480"
  },
  {
    "text": "like I think I think maybe the biggest misconception I think is people think of react server components as like somehow",
    "start": "4950480",
    "end": "4956360"
  },
  {
    "text": "Chang in react or like it's like a because you get dropped into a different world by default so like you kind of you",
    "start": "4956360",
    "end": "4963280"
  },
  {
    "text": "know when you write like an RSC app you get dropped into the server world first which is kind of like an astro template",
    "start": "4963280",
    "end": "4970560"
  },
  {
    "text": "but it looks like your familiar client world and you're like why can't I use it event handler here like I expect to",
    "start": "4970560",
    "end": "4977000"
  },
  {
    "text": "write the counter component that can do it and like it forces you to actually like you need to step into the client",
    "start": "4977000",
    "end": "4982679"
  },
  {
    "text": "world to do that stuff but when you start on the server like you can do like file system reads or database and stuff",
    "start": "4982679",
    "end": "4990080"
  },
  {
    "text": "like this but again it's kind of like RSC is an extension of the react programming model so it's kind of like",
    "start": "4990080",
    "end": "4996800"
  },
  {
    "text": "it's not like a replacement it's just here's the client react that we knew and here is like a compliment to it here is",
    "start": "4996800",
    "end": "5004199"
  },
  {
    "text": "like the other side that you can add and you choose how much of that side you want to add and you also choose at which",
    "start": "5004199",
    "end": "5011400"
  },
  {
    "text": "point it runs because if it runs you know if you want to have a completely static file server like with Spas then",
    "start": "5011400",
    "end": "5019159"
  },
  {
    "text": "of course you can't run any JavaScript code at request time but he could run some at the build time and so this is",
    "start": "5019159",
    "end": "5025520"
  },
  {
    "text": "this is kind of generalizing what static side generators have been doing except with react Paradigm so you know this is",
    "start": "5025520",
    "end": "5031840"
  },
  {
    "text": "what lets me write a blog that does FS that read and then I specify generate",
    "start": "5031840",
    "end": "5037080"
  },
  {
    "text": "you know the server component output for this list of pages cuz these are like",
    "start": "5037080",
    "end": "5042840"
  },
  {
    "text": "pages on my blog and then I get like the build product is a bunch of JS a bunch of CSS and a bunch of HTML files and",
    "start": "5042840",
    "end": "5051360"
  },
  {
    "text": "just a bunch of this pre-computed like Jony things that you know the client can",
    "start": "5051360",
    "end": "5056639"
  },
  {
    "text": "download on navigation so that it doesn't blow away the state of the page it's it's kind of like like Json",
    "start": "5056639",
    "end": "5062560"
  },
  {
    "text": "essentially right but it's represents reactor so there's something you can totally do but then you know if you want",
    "start": "5062560",
    "end": "5068760"
  },
  {
    "text": "to take advant and like you can kind of think of every Spa is almost like it's kind of like a valid RSC app with a",
    "start": "5068760",
    "end": "5075920"
  },
  {
    "text": "single server component that just returns you know the the existing app so",
    "start": "5075920",
    "end": "5081040"
  },
  {
    "text": "it kind of like falls into the model as well of course there's like nuances about routing like you can't really take",
    "start": "5081040",
    "end": "5086960"
  },
  {
    "text": "advantage of it without the router being on the server site cuz you don't know what page is being requested to clarify",
    "start": "5086960",
    "end": "5093040"
  },
  {
    "text": "you said there needs to be there like a bundler integration is required to kind of make all this magic happen and work",
    "start": "5093040",
    "end": "5098960"
  },
  {
    "text": "right so like what what bundlers are supporting This and like today and then what's what's on the road map yeah sure",
    "start": "5098960",
    "end": "5106080"
  },
  {
    "text": "so I think this is also not exactly true it's like more again for it to be used",
    "start": "5106080",
    "end": "5112199"
  },
  {
    "text": "you know to get like all the kind of benefits is designed like in principle like in theory you know uh you could",
    "start": "5112199",
    "end": "5119080"
  },
  {
    "text": "have like an integration that puts all the client code into a single file and",
    "start": "5119080",
    "end": "5124520"
  },
  {
    "text": "then like then the bundler integration could be very simple because then you know it would just concatenate all all",
    "start": "5124520",
    "end": "5130320"
  },
  {
    "text": "all client side code but that's not really efficient the reason we need the bundler integration is because we've",
    "start": "5130320",
    "end": "5136040"
  },
  {
    "text": "introduced this concept of directives so there's used client and used server they don't actually Mark client and server",
    "start": "5136040",
    "end": "5143320"
  },
  {
    "text": "components this is one of the pieces where like the naming is introducing misconceptions they kind of Mark the",
    "start": "5143320",
    "end": "5149719"
  },
  {
    "text": "doors between the worlds so use client kind of marks it's kind of like script tag it's like the rest of the imports",
    "start": "5149719",
    "end": "5157760"
  },
  {
    "text": "from this point uh you know any code imported from this file is going to get into a bundle so use client is kind of",
    "start": "5157760",
    "end": "5164360"
  },
  {
    "text": "like an entry point like here's where the script tag starts and then anything imported from that is going to be in the",
    "start": "5164360",
    "end": "5170560"
  },
  {
    "text": "you know in the script tag and then use server is not for components it's kind of like a door into the server it's if",
    "start": "5170560",
    "end": "5178520"
  },
  {
    "text": "you actually run a JavaScript server it's it's only useful in that case it's not useful for static generation but",
    "start": "5178520",
    "end": "5184040"
  },
  {
    "text": "it's where you mark an endpoint so your server is kind of like here's server",
    "start": "5184040",
    "end": "5189239"
  },
  {
    "text": "code that's callable from the client and so if you use something like trpc that is pretty popular these days it's a very",
    "start": "5189239",
    "end": "5195920"
  },
  {
    "text": "similar idea it's just instead of writing fetch post on the client and then like request on post here I'm going",
    "start": "5195920",
    "end": "5204239"
  },
  {
    "text": "to run this function you just import the function and if it has this directive it means react will give you like an async",
    "start": "5204239",
    "end": "5210800"
  },
  {
    "text": "a thing you can await but it will actually post to the that endo and it's",
    "start": "5210800",
    "end": "5216000"
  },
  {
    "text": "just a way to call functions so this this is like the kind of features where you do the same things you could do like",
    "start": "5216000",
    "end": "5221920"
  },
  {
    "text": "with PHP and jQuery right like you can uh send the script tag with a bunch of stuff and then later you can like call",
    "start": "5221920",
    "end": "5228239"
  },
  {
    "text": "arrest like HTTP post but really these two things are represented as Imports so",
    "start": "5228239",
    "end": "5234320"
  },
  {
    "text": "it's kind of like your PHP it's like if your PHP site could import a jQuery component and render it and then if your",
    "start": "5234320",
    "end": "5241280"
  },
  {
    "text": "jQuery component could import a PHP endpoint and like you know post to it so",
    "start": "5241280",
    "end": "5247719"
  },
  {
    "text": "this kind of Integrations require a bundler so the question I I have about like the so the Bund integration makes",
    "start": "5247719",
    "end": "5253199"
  },
  {
    "text": "sense right and these new um you know use server use client directives you",
    "start": "5253199",
    "end": "5258280"
  },
  {
    "text": "know I like how you kind of put is like you know you can see use client and think of it as like a script tag you know it's kind of like a you know just a",
    "start": "5258280",
    "end": "5264600"
  },
  {
    "text": "point where things where the bundler will split off when I was migrating from the Pages directory of nextjs to the app",
    "start": "5264600",
    "end": "5271480"
  },
  {
    "text": "directory one of the very first errors that kind of pops up is like oh you're using like react to Ed state that should",
    "start": "5271480",
    "end": "5277199"
  },
  {
    "text": "be a client component at this directive so why is the used State you know the",
    "start": "5277199",
    "end": "5282239"
  },
  {
    "text": "react client side kind of primitive is not sufficient of a heuristic to go off of because it seems that like early on",
    "start": "5282239",
    "end": "5289159"
  },
  {
    "text": "when people were moving to the app directory they basically just search their codebase everywhere they had to use State import or use effect they",
    "start": "5289159",
    "end": "5296119"
  },
  {
    "text": "would put use client at the top but that's not right either is it yeah I mean you can do it this way it's just",
    "start": "5296119",
    "end": "5302040"
  },
  {
    "text": "kind of a painful way to migrate I think they they now have it in the docs that the recommended way to migrate is you",
    "start": "5302040",
    "end": "5309199"
  },
  {
    "text": "just take your entire you know Pages directory you know in in the Pages directory the way it was structured is",
    "start": "5309199",
    "end": "5315639"
  },
  {
    "text": "you had this like get serice side props or get static props so this is like the part of the file that executes on the",
    "start": "5315639",
    "end": "5321560"
  },
  {
    "text": "server only and then you have this like page component in the same file so you were previously you were mixing server",
    "start": "5321560",
    "end": "5327520"
  },
  {
    "text": "and client Goin the same file and so in the app directory kind of the",
    "start": "5327520",
    "end": "5332719"
  },
  {
    "text": "recommended migration is that you take this page component you move it to another file so that that is kind of",
    "start": "5332719",
    "end": "5338560"
  },
  {
    "text": "your the start of your existing tree you put use client at the top of just that",
    "start": "5338560",
    "end": "5344000"
  },
  {
    "text": "file you don't need to add it to any other files you just put it into your kind of entry point and then your get",
    "start": "5344000",
    "end": "5350280"
  },
  {
    "text": "server side props that is what now becomes a server component so server components are really kind of like like",
    "start": "5350280",
    "end": "5357040"
  },
  {
    "text": "in nextjs they serve the same function as get serers side props in the old",
    "start": "5357040",
    "end": "5362280"
  },
  {
    "text": "nextjs as like asro templates it's just like this part that executes first and",
    "start": "5362280",
    "end": "5367880"
  },
  {
    "text": "so you you really need use client only in client components that are imported",
    "start": "5367880",
    "end": "5373800"
  },
  {
    "text": "from a server component it's like the place where things turn into Json it's",
    "start": "5373800",
    "end": "5379040"
  },
  {
    "text": "like where if you pass props down they will become you know jent get passed over the network and then they will be",
    "start": "5379040",
    "end": "5385800"
  },
  {
    "text": "revived so I think that that is kind of like how to think about migration is that you don't I think people think of",
    "start": "5385800",
    "end": "5392600"
  },
  {
    "text": "it as a per file kind of intuitively they think oh I need to open all files and put use client on the ones that are",
    "start": "5392600",
    "end": "5399440"
  },
  {
    "text": "client but really it's more like you have the entry point into your import",
    "start": "5399440",
    "end": "5404719"
  },
  {
    "text": "tree so you have your like page component or something like this you put use client on top of that and that's",
    "start": "5404719",
    "end": "5410280"
  },
  {
    "text": "actually enough and then maybe later you kind of pull some things out of it uh",
    "start": "5410280",
    "end": "5415440"
  },
  {
    "text": "you know like maybe you have some data Fetch and deep down that they're like oh actually I'll just do the fetch above in",
    "start": "5415440",
    "end": "5421719"
  },
  {
    "text": "the server component and I'll pass the result as a prop and so you kind of gradually can pull some things out of it",
    "start": "5421719",
    "end": "5428520"
  },
  {
    "text": "out of the kind of client part to the top but you don't need to like add the directives everywhere is there a reason",
    "start": "5428520",
    "end": "5434639"
  },
  {
    "text": "why being tightly integrated with the bundler is there not an opportunity for bundlers to kind of like skip the",
    "start": "5434639",
    "end": "5439800"
  },
  {
    "text": "directive part I mean with the exception of the use server from the client but like you the you you render on the server and the very first time you hit",
    "start": "5439800",
    "end": "5447159"
  },
  {
    "text": "an interactive client component which we know to have like use date or use effect like isn't that isn't that the",
    "start": "5447159",
    "end": "5453440"
  },
  {
    "text": "equivalent of you going in and saying use clients so like is is there like an opportunity to basically have engineers",
    "start": "5453440",
    "end": "5459840"
  },
  {
    "text": "and react you know authors like do less work and had to think about I guess like the Paradigm less and just and the",
    "start": "5459840",
    "end": "5466560"
  },
  {
    "text": "biggest shift is just going from client Centric to just like you know starting on the server and the the interactivity",
    "start": "5466560",
    "end": "5472560"
  },
  {
    "text": "is already built into react and the bundler just needs to be a little smarter yeah no this is a great question",
    "start": "5472560",
    "end": "5478040"
  },
  {
    "text": "and it kind of gets some of these like kind of philosophical uh issues where you know there there are things we've",
    "start": "5478040",
    "end": "5484679"
  },
  {
    "text": "learned and one of those things is that actually being intentional about where the boundary is is valuable because like",
    "start": "5484679",
    "end": "5491600"
  },
  {
    "text": "we there were attempts to do like something that spans Both Worlds like esp.net",
    "start": "5491600",
    "end": "5497520"
  },
  {
    "text": "webforms uh me early meteor and you know there were like attempts to try to treat",
    "start": "5497520",
    "end": "5503040"
  },
  {
    "text": "servering client as this thing that's like there is really no boundary but",
    "start": "5503040",
    "end": "5508920"
  },
  {
    "text": "it's not really the right abstraction because the boundary exists it's the network boundary",
    "start": "5508920",
    "end": "5514440"
  },
  {
    "text": "and so you want to know at which point what exactly are you sending and where is the point where you know I passed",
    "start": "5514440",
    "end": "5521679"
  },
  {
    "text": "some props down but actually they get turned into Jason and later they'll get turned back from Jason and I want to be",
    "start": "5521679",
    "end": "5528000"
  },
  {
    "text": "intentional where that happens both because that's you know you need to be aware of like sometimes maybe you're",
    "start": "5528000",
    "end": "5534880"
  },
  {
    "text": "sending like a huge object and if you just did this like a couple of layers of",
    "start": "5534880",
    "end": "5539960"
  },
  {
    "text": "hierarchy above you could just send just a little bit of information instead of like letting it explode into into this",
    "start": "5539960",
    "end": "5546080"
  },
  {
    "text": "object so it's kind of like you know in Astro again like there's a separation between Astro templates and client",
    "start": "5546080",
    "end": "5553159"
  },
  {
    "text": "islands and that is a good separation because it lets you decide like which world do I want to put things in and in",
    "start": "5553159",
    "end": "5560080"
  },
  {
    "text": "principle what you know I think what you're were asking for is like well could the bundler decide if there's like",
    "start": "5560080",
    "end": "5566280"
  },
  {
    "text": "you state in this component then like automatically insert his client there but then the problem is like not all",
    "start": "5566280",
    "end": "5572639"
  },
  {
    "text": "components actually deal feel well with their props being sent over the network so you kind of want to be intentional",
    "start": "5572639",
    "end": "5579440"
  },
  {
    "text": "like here is where I make the cut but you also want to to be able to move that boundary very easily so in this case",
    "start": "5579440",
    "end": "5585800"
  },
  {
    "text": "it's like you just copy and paste it and move it to another file so it does take a bit of learning to like you know it it",
    "start": "5585800",
    "end": "5592480"
  },
  {
    "text": "requires building like a little skill that is comparable to the skill you have to learn if you're write in like a PHP",
    "start": "5592480",
    "end": "5599239"
  },
  {
    "text": "plus jQuery app or Astro plus react app like the skill is always there it's about where to make the cut except you",
    "start": "5599239",
    "end": "5606719"
  },
  {
    "text": "can reuse code between both sides now because they compose because it's a single programming parad that's just",
    "start": "5606719",
    "end": "5612600"
  },
  {
    "text": "such an excellent point because that being able to move the boundary you know it's it's not so much that something",
    "start": "5612600",
    "end": "5618520"
  },
  {
    "text": "like has state in it is that you can even float it a little bit higher too so you're in control over where that script",
    "start": "5618520",
    "end": "5624920"
  },
  {
    "text": "tag kind of happens and I think that you know react has always done a good job of like thinking of Escape hatches you know",
    "start": "5624920",
    "end": "5631639"
  },
  {
    "text": "as part of just you know out of the box like you know not everything's going to work you know as a react component so we",
    "start": "5631639",
    "end": "5637400"
  },
  {
    "text": "need to be able to escape out to like the rest of the world and be like a good citizen so knowing that some things some",
    "start": "5637400",
    "end": "5644360"
  },
  {
    "text": "props aren't going to be serializable or whatever and being able to basically not get stuck to where you can't even adopt",
    "start": "5644360",
    "end": "5650040"
  },
  {
    "text": "it you know but you can just move that boundary that's that's really helpful to understand so that distinction between",
    "start": "5650040",
    "end": "5656239"
  },
  {
    "text": "the two of it you know it almost reminds me of like the webpack two days of like doing an async import and that becoming",
    "start": "5656239",
    "end": "5662600"
  },
  {
    "text": "a Cod split boundary that is actually how it's so we had a kind of and actually going back toal's question",
    "start": "5662600",
    "end": "5668400"
  },
  {
    "text": "because I haven't answered it but there was a question about like what is the state of support for bundlers and kind",
    "start": "5668400",
    "end": "5675840"
  },
  {
    "text": "of circling back to that is it's actually very hard to retrofit this into",
    "start": "5675840",
    "end": "5680920"
  },
  {
    "text": "existing bundlers because again it's like a conceptual shift of a bundler spanning kind of two applications except",
    "start": "5680920",
    "end": "5688880"
  },
  {
    "text": "that they can reuse code between them but it's two separate module graphs like in the for example if you're like in PHP",
    "start": "5688880",
    "end": "5695119"
  },
  {
    "text": "world you can't really expect to like access you know modules from the jery world like they're separated by this",
    "start": "5695119",
    "end": "5702080"
  },
  {
    "text": "when you're inside the Matrix you don't have access to like you know the food from I don't know if you watch the movie",
    "start": "5702080",
    "end": "5709600"
  },
  {
    "text": "it's it's like two separate worlds you can bring stuff from the outer world into the inner one but you know you",
    "start": "5709600",
    "end": "5714679"
  },
  {
    "text": "can't like you need to be diligent about how to cross it and so the first thing we released you know in 2020 we when we",
    "start": "5714679",
    "end": "5721719"
  },
  {
    "text": "released the first kind of specific for the uh react with with RFC which has",
    "start": "5721719",
    "end": "5728040"
  },
  {
    "text": "changed since then so we did a few revisions in response to the first framework that adopted was hydrogen uh",
    "start": "5728040",
    "end": "5734000"
  },
  {
    "text": "Shopify hydrogen and it was actually like it ran into a lot of problems that like some of them were known some of",
    "start": "5734000",
    "end": "5740159"
  },
  {
    "text": "them we just didn't have a solution yet and so they ended up abandoning it but they it's it's actually their feedback",
    "start": "5740159",
    "end": "5746280"
  },
  {
    "text": "that led to the directives because before that it was file name extensions but uh we together with our first kind",
    "start": "5746280",
    "end": "5753400"
  },
  {
    "text": "of uh spec we also wrote a toy version of a plugin for webpack it's very slow",
    "start": "5753400",
    "end": "5759400"
  },
  {
    "text": "so like it's not you know production usable because again it's it's very hard to kind of retrofit it into a bundler",
    "start": "5759400",
    "end": "5765560"
  },
  {
    "text": "that was not designed for thinking of like serving client as two separate programs that have doors into each other",
    "start": "5765560",
    "end": "5773119"
  },
  {
    "text": "that that is really like the new paradigm here is just you have two separate programs but they have these",
    "start": "5773119",
    "end": "5778360"
  },
  {
    "text": "doors and like one kind of door is like render a tag with props and the other kind of door is like colon async uh post",
    "start": "5778360",
    "end": "5786239"
  },
  {
    "text": "call back so they were not designed for this but we did write like a super kind",
    "start": "5786239",
    "end": "5791679"
  },
  {
    "text": "of simplified version of the weback plugin and it actually internally used the same mechanism that weback uses for",
    "start": "5791679",
    "end": "5798719"
  },
  {
    "text": "dynamic Imports because what we need is just like we need to create these chunks",
    "start": "5798719",
    "end": "5803960"
  },
  {
    "text": "for you know like each uh use client we discover is like a potential split entry",
    "start": "5803960",
    "end": "5809119"
  },
  {
    "text": "point so we yeah we just needed to create those those files and it's like a level you know it's like ideally if",
    "start": "5809119",
    "end": "5816960"
  },
  {
    "text": "there's demand for this Paradigm and if if people really see its benefits you know we're kind of like skating like RSC",
    "start": "5816960",
    "end": "5823639"
  },
  {
    "text": "is very ambitious and that it requires on features and bunders that don't exist and the idea is like we can kind of try",
    "start": "5823639",
    "end": "5830000"
  },
  {
    "text": "to pill them with like plugins which is like what NEX is trying to do but it's super convoluted but this is also why",
    "start": "5830000",
    "end": "5836280"
  },
  {
    "text": "they're like verell is invested into turbopack so turbopack is designed for this like ability to have this like",
    "start": "5836280",
    "end": "5842800"
  },
  {
    "text": "split world that talk to each other and you know parcel is also designed for",
    "start": "5842800",
    "end": "5849040"
  },
  {
    "text": "like this being extend like having dis ability to have a combined graph from like two different isolated worlds so I",
    "start": "5849040",
    "end": "5856679"
  },
  {
    "text": "think like as this Paradigm becomes more commonplace the hope is that the next like maybe it's the person listening to",
    "start": "5856679",
    "end": "5862560"
  },
  {
    "text": "this podcast like the next generation of bundler developers will treat it as a first class feature and like I don't",
    "start": "5862560",
    "end": "5868280"
  },
  {
    "text": "know maybe like in 10 years it'll be a standard like Dynamic import became a standard that's kind of like where with",
    "start": "5868280",
    "end": "5873599"
  },
  {
    "text": "like to uh I think get to eventually but for now it's this like you know like webpack introduced require. ensure",
    "start": "5873599",
    "end": "5880599"
  },
  {
    "text": "before Dynamic import it's kind of like similar well yeah I mean this so I was going to ask about linting because like",
    "start": "5880599",
    "end": "5886599"
  },
  {
    "text": "I I'm very curious to kind of get your thoughts on like if custom linting rules are going to help kind of wrangle that",
    "start": "5886599",
    "end": "5893480"
  },
  {
    "text": "like use client use server kind of all the directives right like and and kind of enforce best best practices there but",
    "start": "5893480",
    "end": "5900199"
  },
  {
    "text": "I feel like now I have a more interesting question which is around the bundler so I don't know can",
    "start": "5900199",
    "end": "5906440"
  },
  {
    "text": "you maybe quickly answer my Linton question then we can move on okay yeah so for the Linton we actually we want to",
    "start": "5906440",
    "end": "5912119"
  },
  {
    "text": "fail at build as early as possible so it's not it's not even just like Linton we actually like if you import we use",
    "start": "5912119",
    "end": "5919000"
  },
  {
    "text": "this thing called import conditions which lets you run like specify that you running code in like a different",
    "start": "5919000",
    "end": "5924679"
  },
  {
    "text": "environment so react when the import react in the server world in the server",
    "start": "5924679",
    "end": "5930960"
  },
  {
    "text": "RSC environment you state doesn't exist it's not an it's it's not even just like it refuses to work it's like",
    "start": "5930960",
    "end": "5937599"
  },
  {
    "text": "conceptually it's not even an export react doesn't export you state in in this environment so it's it's similar to",
    "start": "5937599",
    "end": "5944080"
  },
  {
    "text": "like how you can't invert jQuery in PHP World it just doesn't make sense we want to fail earlyer so this is like the",
    "start": "5944080",
    "end": "5949920"
  },
  {
    "text": "level of kind of protection we have now is we just like force you to add this",
    "start": "5949920",
    "end": "5955119"
  },
  {
    "text": "direct like you can't forget about them cuz we kind of force you to add them but one thing that's missing is like type",
    "start": "5955119",
    "end": "5960719"
  },
  {
    "text": "enforcement so one thing we want to do is if you mark a component like component file with Ed client we want",
    "start": "5960719",
    "end": "5967760"
  },
  {
    "text": "typescript to enforce that all its props must be serializable so it shouldn't be able to like accept functions and you",
    "start": "5967760",
    "end": "5974960"
  },
  {
    "text": "know things you couldn't pass from the server but you can pass a server reference you know like a server action",
    "start": "5974960",
    "end": "5981080"
  },
  {
    "text": "because it's not really a function it's like a you know it's actually an object just specifying how to call it uh so I",
    "start": "5981080",
    "end": "5986760"
  },
  {
    "text": "think like types enforcement will actually I think it will help explain the Paradigm because when you see a type",
    "start": "5986760",
    "end": "5992040"
  },
  {
    "text": "error you're like oh I see what's going on here like this things have to be like I'm crossing the network boundary that's",
    "start": "5992040",
    "end": "5998040"
  },
  {
    "text": "why it's saying that there there's like a mistake like listening to you talk about what role the bundler plays and",
    "start": "5998040",
    "end": "6004679"
  },
  {
    "text": "how it's like a completely different Paradigm from the way we've been bundling today because there's kind of",
    "start": "6004679",
    "end": "6009760"
  },
  {
    "text": "two resolution graphs and and whatnot it it kind of like it's making more and",
    "start": "6009760",
    "end": "6014920"
  },
  {
    "text": "more sense to me why you know next was really the first on the scene with kind of like being able to support this right",
    "start": "6014920",
    "end": "6021719"
  },
  {
    "text": "they have the infrastructure they have the engineering power they have the all the things right they've got all all the",
    "start": "6021719",
    "end": "6027880"
  },
  {
    "text": "all the pieces in place but at the same time like was it kind of somewhat of an unfair advantage that like they got",
    "start": "6027880",
    "end": "6033159"
  },
  {
    "text": "their first like I I don't know I'm just curious to hear your thoughts yeah so so next was not the first integration the first integration was Shopify hydrogen",
    "start": "6033159",
    "end": "6040800"
  },
  {
    "text": "uh next was experimenting with with server components for a while but it didn't really it didn't really you know",
    "start": "6040800",
    "end": "6046639"
  },
  {
    "text": "move to what we've seen like in the next 13 release until like maybe a year after",
    "start": "6046639",
    "end": "6052000"
  },
  {
    "text": "when Sebastian has so when Sebastian left Sebastian is the person who led",
    "start": "6052000",
    "end": "6057360"
  },
  {
    "text": "most of the design of modern react so he came up with hooks and with much of the",
    "start": "6057360",
    "end": "6063000"
  },
  {
    "text": "design for Server components as well and so this started in I think if I'm not mistaken 2017 with an internal post uh",
    "start": "6063000",
    "end": "6071520"
  },
  {
    "text": "that is maybe has a spicy title uh what comes after graphql uh not in the sense of you know",
    "start": "6071520",
    "end": "6077840"
  },
  {
    "text": "we're not like actually like you know Facebook is using graph pretty heavily obviously doesn't want to actually like",
    "start": "6077840",
    "end": "6082960"
  },
  {
    "text": "replace it but it's just this idea of like if we have to write these clients that like download all the data download",
    "start": "6082960",
    "end": "6089320"
  },
  {
    "text": "all the code and then apply the code to the data you might as well like do some of that work on the server and that's",
    "start": "6089320",
    "end": "6095840"
  },
  {
    "text": "how like at Facebook that was a pretty kind of normal thing because previously Facebook kind of started as a server",
    "start": "6095840",
    "end": "6101880"
  },
  {
    "text": "rendered app with a server component Paradigm called xhp so it didn't really use like MVC like rails it was more like",
    "start": "6101880",
    "end": "6109199"
  },
  {
    "text": "react components except they executed on the server and so it was kind of like that was like one of the ideas like",
    "start": "6109199",
    "end": "6114960"
  },
  {
    "text": "graphql xhp n xjs would get server side props like all these ideas kind of",
    "start": "6114960",
    "end": "6121000"
  },
  {
    "text": "combin together yeah so the problem was like we wanted to deploy server components at Facebook and kind of start",
    "start": "6121000",
    "end": "6127560"
  },
  {
    "text": "which is also you know they're hard to incrementally adopt because you kind of like have to adopt it from the top",
    "start": "6127560",
    "end": "6132800"
  },
  {
    "text": "instead of from the bottom so like with server components if you have an existing app then the kind of the",
    "start": "6132800",
    "end": "6138639"
  },
  {
    "text": "pathway at adoption is not that you like rewrite small parts of that app and server comp components it's more like",
    "start": "6138639",
    "end": "6144360"
  },
  {
    "text": "you wrap your entire app and you put the server components layer before them",
    "start": "6144360",
    "end": "6149480"
  },
  {
    "text": "which maybe just like renders your app so it doesn't do anything but then you can like start moving things a little",
    "start": "6149480",
    "end": "6154760"
  },
  {
    "text": "bit into that world like from the client Centric world and so at Facebook this was not unfortunately possible due to",
    "start": "6154760",
    "end": "6161880"
  },
  {
    "text": "technical limitations of how our PHP and JavaScript like you know we we running",
    "start": "6161880",
    "end": "6167280"
  },
  {
    "text": "like a custom JavaScript engine it was not V8 the way it was communicating with phps like very different from how it's",
    "start": "6167280",
    "end": "6174119"
  },
  {
    "text": "usually set up at at like most companies in open source and so we were kind of faced with this choice of we know how to",
    "start": "6174119",
    "end": "6181280"
  },
  {
    "text": "make this work like we have a solution for a bunch of issues that you know we've had for a long time we think we",
    "start": "6181280",
    "end": "6187199"
  },
  {
    "text": "have something novel we think we have something that's like combines you know the best side of kind of client server",
    "start": "6187199",
    "end": "6193400"
  },
  {
    "text": "paradigms like BP Plus jQuery or like Astro plus react or like it has like",
    "start": "6193400",
    "end": "6198920"
  },
  {
    "text": "it's kind of it has this like all characteristics you know like things we've learned learned over the 10 years",
    "start": "6198920",
    "end": "6204239"
  },
  {
    "text": "of like you know streaming and like sending less code but also just full stack components this ability to write",
    "start": "6204239",
    "end": "6211080"
  },
  {
    "text": "components that are encapsulated and span Both Worlds so we have this thing and we just you know we can't keep",
    "start": "6211080",
    "end": "6216599"
  },
  {
    "text": "developing it cuz like meta is like Facebook was kind of stuck because of the custom bundler custom JavaScript",
    "start": "6216599",
    "end": "6223080"
  },
  {
    "text": "engine custom setup between the server and you know and it was already very optimized so it was it was kind of like",
    "start": "6223080",
    "end": "6229239"
  },
  {
    "text": "in the local Maxima and then the team that I'm not like assigning blame or",
    "start": "6229239",
    "end": "6234520"
  },
  {
    "text": "anything but it's just like we needed help from the team that maintained the custom you know all this bunding",
    "start": "6234520",
    "end": "6240520"
  },
  {
    "text": "infrastructure with Facebook and that team was actually busy because they were all put on the like end to end",
    "start": "6240520",
    "end": "6246679"
  },
  {
    "text": "encryption project for Messenger and there was no nobody who could you know",
    "start": "6246679",
    "end": "6251719"
  },
  {
    "text": "drive this kind of big you know technical redesign of like how all that data fion fashion works and so the",
    "start": "6251719",
    "end": "6259360"
  },
  {
    "text": "choice was like do we sit on this technology for several more years just because MAA is stuck or do we go",
    "start": "6259360",
    "end": "6265520"
  },
  {
    "text": "somewhere else to complete it and so we didn't want to sit on it and so uh sebas",
    "start": "6265520",
    "end": "6271719"
  },
  {
    "text": "left meta and uh the question was like where can he complete the vision like",
    "start": "6271719",
    "end": "6277520"
  },
  {
    "text": "and you know they ask there is pretty big it's like develop a new generation",
    "start": "6277520",
    "end": "6283400"
  },
  {
    "text": "bundler bet on this completely unproven technology and YOLO so the thing that",
    "start": "6283400",
    "end": "6290760"
  },
  {
    "text": "you know with versel it's versell has kind of invested into just TR you know",
    "start": "6290760",
    "end": "6296320"
  },
  {
    "text": "trus in Sebastian's Direction so when Sebastian came to the nextjs team",
    "start": "6296320",
    "end": "6301480"
  },
  {
    "text": "basically like on the first week he was like we're going to rewrite everything because you know we need to throw like",
    "start": "6301480",
    "end": "6307159"
  },
  {
    "text": "these abstractions don't quite work anymore and like we need a new bundler we need like all of these things need to",
    "start": "6307159",
    "end": "6312800"
  },
  {
    "text": "be new and so that is like a very big bet to make for a very successful",
    "start": "6312800",
    "end": "6318119"
  },
  {
    "text": "product like next was and you know next is paying the reputational cost and like verell is being the reputational cost",
    "start": "6318119",
    "end": "6324760"
  },
  {
    "text": "for yeah let's just try this completely new thing that's like unproven and let's prove it out kind of in the fires of",
    "start": "6324760",
    "end": "6332199"
  },
  {
    "text": "shipping to production and that's usually the process that you know if you're like consuming react from outside",
    "start": "6332199",
    "end": "6338760"
  },
  {
    "text": "that's the kind of process that happened at at Facebook so like you know when react was developed like you didn't see",
    "start": "6338760",
    "end": "6345239"
  },
  {
    "text": "that process because uh you know it like by the time it was open source it was already pretty solid so you didn't see",
    "start": "6345239",
    "end": "6351880"
  },
  {
    "text": "like you know the earli react but this is kind of like seeing that process play out in the wild and yeah I think the the",
    "start": "6351880",
    "end": "6358440"
  },
  {
    "text": "biggest thing is just Rell was able to you know allocate a bunch of you know",
    "start": "6358440",
    "end": "6363599"
  },
  {
    "text": "many full-time Engineers to work it's like 10 maybe 10 people to work on this",
    "start": "6363599",
    "end": "6368960"
  },
  {
    "text": "fulltime for several years for something that's not proven because they believe in Sebastian's Vision essentially and I",
    "start": "6368960",
    "end": "6377159"
  },
  {
    "text": "think that's and like it you know like parts of it are still kind of rough but",
    "start": "6377159",
    "end": "6382480"
  },
  {
    "text": "I think it's getting into a place where it's actually getting really usable and proving itself out yeah that makes sense",
    "start": "6382480",
    "end": "6388119"
  },
  {
    "text": "he said it really well too he said you know for history revisionist I went to versell and change nextjs I didn't",
    "start": "6388119",
    "end": "6394280"
  },
  {
    "text": "change react the react stuff was already there pretty much and so I think that's like really interesting so with with",
    "start": "6394280",
    "end": "6401760"
  },
  {
    "text": "nextjs being not not so much you know the the first one or like early adopter but you know helping to like refine and",
    "start": "6401760",
    "end": "6408000"
  },
  {
    "text": "dog food it and you know and actually put the resources behind it to make it a reality is this going to be a",
    "start": "6408000",
    "end": "6413639"
  },
  {
    "text": "competitive you know first mover Advantage for nextjs that or will like remix or they having to play catchup",
    "start": "6413639",
    "end": "6420280"
  },
  {
    "text": "well other bunders like well basically is this is a very much a react thing but has to have that buy in is this going to",
    "start": "6420280",
    "end": "6426920"
  },
  {
    "text": "kind of create like a bit of a a moat around nextjs because of their their investment in it that others might not",
    "start": "6426920",
    "end": "6433040"
  },
  {
    "text": "be able to imediately catch up to yeah I mean I think realistically that is the case currently I think not for technical",
    "start": "6433040",
    "end": "6440239"
  },
  {
    "text": "reasons so you know it's it's kind of unfortunate in the sense that technically like the work is layered",
    "start": "6440239",
    "end": "6448040"
  },
  {
    "text": "very carefully so that you know all the parts that are not nextjs specific they're in react so there's like every",
    "start": "6448040",
    "end": "6454679"
  },
  {
    "text": "feature is developed in a way like even things that people think are somehow associated with nextjs overell like",
    "start": "6454679",
    "end": "6461040"
  },
  {
    "text": "they're they're kind of layered in a way that wherever there is leverage by putting it into react so that like other",
    "start": "6461040",
    "end": "6467560"
  },
  {
    "text": "Frameworks can build around the same Concepts or uh you can make you know you can put a component on npm that would",
    "start": "6467560",
    "end": "6474480"
  },
  {
    "text": "work in any framework that adopts RSC like that that is kind of the goal of this you know why why RSC why not just",
    "start": "6474480",
    "end": "6481040"
  },
  {
    "text": "call it nextjs well because like we want we don't think there's you know these concepts are actually specific to a",
    "start": "6481040",
    "end": "6487239"
  },
  {
    "text": "framework it's just the concept of splitting the file between the two worlds or like not the file but like",
    "start": "6487239",
    "end": "6493119"
  },
  {
    "text": "splitting the you know the modules between the two worlds and I think realistically currently it's just the",
    "start": "6493119",
    "end": "6499840"
  },
  {
    "text": "team barely has time to document all the user fa and stuff so documenting all the",
    "start": "6499840",
    "end": "6505360"
  },
  {
    "text": "you know like like what is the like for example like for the wire format we don't document it because we provide the",
    "start": "6505360",
    "end": "6511480"
  },
  {
    "text": "reader and the writer for this format they're in the react repo they're not in xjs repo so like in principle anyone can",
    "start": "6511480",
    "end": "6517960"
  },
  {
    "text": "use them but you just have to you know you have to know like which folder they're in and like what the API is and",
    "start": "6517960",
    "end": "6523520"
  },
  {
    "text": "you can look at the tests like the tests are also there but we don't just nobody has infinite time when like things are",
    "start": "6523520",
    "end": "6530080"
  },
  {
    "text": "on fire and right now everything is on fire because people are starting to use it and they run into all the bugs they",
    "start": "6530080",
    "end": "6536520"
  },
  {
    "text": "run into all the missing features and you know the top priority for the team is obviously just to make sure that this",
    "start": "6536520",
    "end": "6542159"
  },
  {
    "text": "Paradigm survives which means just like making it usable for end users but I",
    "start": "6542159",
    "end": "6547360"
  },
  {
    "text": "think is it's like things kind of we have you know yes like framework authors are kind of poking at at playing with it",
    "start": "6547360",
    "end": "6554520"
  },
  {
    "text": "now that there's some kind of knowledge uh that you know we have a group like we've had a group for a while internal",
    "start": "6554520",
    "end": "6560800"
  },
  {
    "text": "for framework authors where they can just ask questions and like we try to reply as as fast as possible but I think",
    "start": "6560800",
    "end": "6567480"
  },
  {
    "text": "really the thing that will take it to you know the next level where you know people don't feel like there is some",
    "start": "6567480",
    "end": "6573639"
  },
  {
    "text": "kind of like unfair Advantage is just there needs to be a bundler that supports this so that it's easier you",
    "start": "6573639",
    "end": "6580159"
  },
  {
    "text": "know you take the bundler you take the react parts of this thing and you just you know you go wild with it and until",
    "start": "6580159",
    "end": "6587199"
  },
  {
    "text": "that exists it's just like it's much harder to experiment because you have to either write AB the plug yourself which",
    "start": "6587199",
    "end": "6593360"
  },
  {
    "text": "requires a lot of specialist knowledge I don't even know how to do it so it's yeah currently it's kind of you can only",
    "start": "6593360",
    "end": "6599560"
  },
  {
    "text": "do this if you're willing to like invest months into understanding how how to make the bunding work but then you know",
    "start": "6599560",
    "end": "6606599"
  },
  {
    "text": "with parcel adding support that's like close to built-in or like a plugin that's like really kind of fits into the",
    "start": "6606599",
    "end": "6613440"
  },
  {
    "text": "architecture with turbopack hopefully getting stable and hopefully being",
    "start": "6613440",
    "end": "6618599"
  },
  {
    "text": "usable outside next year I really hope they make it like usable AS stand Alone by but keep the support for directives I",
    "start": "6618599",
    "end": "6625840"
  },
  {
    "text": "think these things will help it kind of propel more into mainstream because then people will be able to play with it and",
    "start": "6625840",
    "end": "6631520"
  },
  {
    "text": "if you can just like you know just like fire up a note server and just like call this function and see you know see the",
    "start": "6631520",
    "end": "6637480"
  },
  {
    "text": "output I think that's where people feel like oh I understand how this works I understand where the boundaries are so I",
    "start": "6637480",
    "end": "6643360"
  },
  {
    "text": "don't feel like this is specific the next CH but I think realistically it's true that just you know there is some",
    "start": "6643360",
    "end": "6650400"
  },
  {
    "text": "you know proximity to if if you take the burden of trying things out first then",
    "start": "6650400",
    "end": "6655760"
  },
  {
    "text": "you also like reap the benefits of uh kind of you do have a solution first",
    "start": "6655760",
    "end": "6661480"
  },
  {
    "text": "yeah I mean I I think first of all just want to say thank you so much for this incredible backstory in history uh Dan",
    "start": "6661480",
    "end": "6667400"
  },
  {
    "text": "because I think you know it I think at least for me anyway I empathize with kind of versel taking the heat right and",
    "start": "6667400",
    "end": "6673840"
  },
  {
    "text": "like you said like they're taking the reputational cost and GMO has been someone who's like always made big bets",
    "start": "6673840",
    "end": "6679599"
  },
  {
    "text": "on the web right like and he's obviously someone who cares deep about the web and so I'm like wow like respect for like",
    "start": "6679599",
    "end": "6687599"
  },
  {
    "text": "investing in this like and taking this big big bet on RSC and like putting literal like cash money behind it you",
    "start": "6687599",
    "end": "6694400"
  },
  {
    "text": "know so I mean I can also see like I can see you know there is a of course a",
    "start": "6694400",
    "end": "6699679"
  },
  {
    "text": "commercial angle in the sense of course of course and I think it's sometimes maybe misunderstood as like I think the",
    "start": "6699679",
    "end": "6705679"
  },
  {
    "text": "angle there is kind of similar to the Apple angle of like vertical integration",
    "start": "6705679",
    "end": "6711800"
  },
  {
    "text": "but it's it's also different because it's like all open source so it's kind of like I think the idea is what if you",
    "start": "6711800",
    "end": "6719079"
  },
  {
    "text": "designed the architecture with kind of deployment model in mind and that is",
    "start": "6719079",
    "end": "6725320"
  },
  {
    "text": "something that you know at a place like Facebook that's obviously how it's going to be you know like you have a whole",
    "start": "6725320",
    "end": "6730760"
  },
  {
    "text": "team of infra Engineers you know they will think about like how do we distribute work between like our data",
    "start": "6730760",
    "end": "6737239"
  },
  {
    "text": "centers and our you know how do we cache things at which layers do we cach things and so so on and then like smaller",
    "start": "6737239",
    "end": "6744079"
  },
  {
    "text": "companies can't really like afford to think about this and like Sebastian is like is like an architecturally minded",
    "start": "6744079",
    "end": "6750639"
  },
  {
    "text": "person like cares both about you know how do we design it in a way that it",
    "start": "6750639",
    "end": "6756719"
  },
  {
    "text": "doesn't run into the walls that we've seen over these 20 years we know like PHP without cash and will run into a",
    "start": "6756719",
    "end": "6763599"
  },
  {
    "text": "wall like you know client side only will run into a wall graph kill only will run",
    "start": "6763599",
    "end": "6768880"
  },
  {
    "text": "into a wall so it's kind of like designed like how you design the Paradigm so that it can be like",
    "start": "6768880",
    "end": "6775440"
  },
  {
    "text": "distributed in a good way and then versell is kind of like we're looking for a paradigm that can be distributed",
    "start": "6775440",
    "end": "6781880"
  },
  {
    "text": "this way because we're actually a solution for you know Distributing computation so this kind of fits",
    "start": "6781880",
    "end": "6787360"
  },
  {
    "text": "perfectly so I think like that that is kind of the interest in in like they want a paradigm that's able to full take",
    "start": "6787360",
    "end": "6793520"
  },
  {
    "text": "full advantage of their of like the infrastructure they're building so it makes sense like that they want something that's that's like designed in",
    "start": "6793520",
    "end": "6800320"
  },
  {
    "text": "mind yeah of course I mean it's also just like from an open source sustainability perspective like open",
    "start": "6800320",
    "end": "6806880"
  },
  {
    "text": "source is sustainable when you align it to business incentives quite frankly like uh just real talk you know so just",
    "start": "6806880",
    "end": "6814679"
  },
  {
    "text": "no hate there at all you know I there's just so much that we didn't have a chance to get into y'all we've been",
    "start": "6814679",
    "end": "6820119"
  },
  {
    "text": "talking for like forever I'm going to like wrap with just a couple questions so the name react server components",
    "start": "6820119",
    "end": "6827000"
  },
  {
    "text": "because this is we talked a little bit about the community fud right and some of the misconceptions and and whatnot",
    "start": "6827000",
    "end": "6832159"
  },
  {
    "text": "but like you know do you feel like if you could do it all over again would you pick with like with you Dan abof like",
    "start": "6832159",
    "end": "6838040"
  },
  {
    "text": "right like you don't speak on behalf of everyone on the team but would you danov call it something other than react",
    "start": "6838040",
    "end": "6844199"
  },
  {
    "text": "server components given the the the amount of confusion that this has ensued in the community I didn't see a better",
    "start": "6844199",
    "end": "6850480"
  },
  {
    "text": "term I still haven't seen a better term I think it's it's one of those cases like in react where we you know maybe it",
    "start": "6850480",
    "end": "6857800"
  },
  {
    "text": "is a bit arrogant but we kind of redefine what the term means",
    "start": "6857800",
    "end": "6864320"
  },
  {
    "text": "because you know like with rendering like maybe it's unfortunate but like we needed a word and like in react",
    "start": "6864320",
    "end": "6870679"
  },
  {
    "text": "rendering means just Computing you know the UI not like painting it to the screen but uh it's just something we now",
    "start": "6870679",
    "end": "6878679"
  },
  {
    "text": "people kind of use that word in the react sense and I think it's just one of those cases where we're I think we're",
    "start": "6878679",
    "end": "6885800"
  },
  {
    "text": "staying true to the conceptual meaning of server and client because it's two programs one program sends the other",
    "start": "6885800",
    "end": "6893960"
  },
  {
    "text": "program to like potentially another machine there is potentially like a",
    "start": "6893960",
    "end": "6899000"
  },
  {
    "text": "distance between them so the the boundary has to be you know serializable and yeah kind of one",
    "start": "6899000",
    "end": "6905280"
  },
  {
    "text": "program serves the other program but it's just you know it doesn't map exactly to the physical concept of like",
    "start": "6905280",
    "end": "6912400"
  },
  {
    "text": "server and client because well like a server can be like a client to another server and so on like it it's like we",
    "start": "6912400",
    "end": "6918199"
  },
  {
    "text": "just have to be you know like if I were to reintroduce this concept that maybe kind of talk about what we mean by the",
    "start": "6918199",
    "end": "6925000"
  },
  {
    "text": "server and the client it's just like you know the server is the part that runs",
    "start": "6925000",
    "end": "6930360"
  },
  {
    "text": "first and that returns you know the client part that runs second and they",
    "start": "6930360",
    "end": "6935679"
  },
  {
    "text": "can run but as we talked earlier right like even like 2016 like people already figured out you",
    "start": "6935679",
    "end": "6943520"
  },
  {
    "text": "could take the client program run it on a nodejs server and to produce initial HTML so like we've already put the",
    "start": "6943520",
    "end": "6950480"
  },
  {
    "text": "client on the server before and then with something like Gatsby like there was like an Insight oh actually",
    "start": "6950480",
    "end": "6955719"
  },
  {
    "text": "you can run the server itself ahead of time during the build if you know all the requests you want to hit so we also",
    "start": "6955719",
    "end": "6963040"
  },
  {
    "text": "put the server into the build or like at deployment so this concepts are already kind of M it and in the from the point",
    "start": "6963040",
    "end": "6970719"
  },
  {
    "text": "of react components it makes sense this component kind of serves this this other component so to speak so I think the",
    "start": "6970719",
    "end": "6977360"
  },
  {
    "text": "name is still right we just have to explain what we mean by the name yeah yeah no that's great I'm proud of you",
    "start": "6977360",
    "end": "6982719"
  },
  {
    "text": "for sticking with your guns Dan that's fantastic we could have just started a whole new rumor on the show you know",
    "start": "6982719",
    "end": "6987800"
  },
  {
    "text": "maybe I just don't have a I just don't have the imagination like maybe I'm just I I doubt it I doubt it um and so so D",
    "start": "6987800",
    "end": "6994840"
  },
  {
    "text": "if people are like all right well you know as you you know this better than I do you know the circle of people who use",
    "start": "6994840",
    "end": "7000079"
  },
  {
    "text": "react is much larger than the people who use nextjs right there's tons of people who use next but like the the react",
    "start": "7000079",
    "end": "7006960"
  },
  {
    "text": "Community is is bigger than the than the next community and so and so you know for folks who are like oh I mean where",
    "start": "7006960",
    "end": "7013320"
  },
  {
    "text": "can I get started where am I looking like what are official docks that I can be using and leveraging right like like",
    "start": "7013320",
    "end": "7019480"
  },
  {
    "text": "the roll out on this has been very unusual like compared to some of the other releases that we've seen from the",
    "start": "7019480",
    "end": "7024800"
  },
  {
    "text": "react team right and so and of course there's been big shifts in the in the team itself right so this is like now we",
    "start": "7024800",
    "end": "7030880"
  },
  {
    "text": "have people from outside of meta that are part of core you know and I feel like as a result of that like there's",
    "start": "7030880",
    "end": "7036320"
  },
  {
    "text": "more work in the certain parts of the sausage are being done in the open or",
    "start": "7036320",
    "end": "7041520"
  },
  {
    "text": "being done in different places you know so I I'm curious like how do folks like",
    "start": "7041520",
    "end": "7047280"
  },
  {
    "text": "actually get started on this at this point and like and then also like is there anything that we could have done",
    "start": "7047280",
    "end": "7053400"
  },
  {
    "text": "or you would have done differently with the roll out of this feature just given the the fud and confusion that folks",
    "start": "7053400",
    "end": "7059360"
  },
  {
    "text": "seem to have yeah I think like in terms of getting started I you know realistically I just think next",
    "start": "7059360",
    "end": "7065760"
  },
  {
    "text": "currently is the most complete kind of implementation of the vision so if you",
    "start": "7065760",
    "end": "7071960"
  },
  {
    "text": "want want to get like an idea of how it was kind of designed to work uh at least like by the person who originally",
    "start": "7071960",
    "end": "7079320"
  },
  {
    "text": "designed it I think that is like a good way to look at it again it's still pretty rough just in terms of you know",
    "start": "7079320",
    "end": "7085840"
  },
  {
    "text": "like the developer server is maybe not fast enough so there are like many paper cuts but I think that is the place to",
    "start": "7085840",
    "end": "7092239"
  },
  {
    "text": "kind of get the initial impression do you think it's production ready right now as of today February 2024 production",
    "start": "7092239",
    "end": "7100199"
  },
  {
    "text": "ready is like a very subjective concept I think like Facebook used react in production way before most people would",
    "start": "7100199",
    "end": "7106679"
  },
  {
    "text": "call it production ready there's definitely pretty large companies using you know nextjs app router in production",
    "start": "7106679",
    "end": "7112719"
  },
  {
    "text": "right now and you know both like hobbyist and big companies but it does",
    "start": "7112719",
    "end": "7118320"
  },
  {
    "text": "have I think like especially like there are some features that are less baked that are like currently being you know",
    "start": "7118320",
    "end": "7124040"
  },
  {
    "text": "fixed but like parallel routes intercepting routes there were like a lot of bugs related to those that are",
    "start": "7124040",
    "end": "7129599"
  },
  {
    "text": "being fixed right now so I think like in year it I expect it to be a lot more",
    "start": "7129599",
    "end": "7135280"
  },
  {
    "text": "kind of buck free and you know like just doing the right thing I think currently it feels a little bit like a little",
    "start": "7135280",
    "end": "7142079"
  },
  {
    "text": "shaky in some places and maybe like slower than you would like for just developer like the death server is a bit",
    "start": "7142079",
    "end": "7148280"
  },
  {
    "text": "slower so that's something I expect to see with chbo Pac fixed so I think it's",
    "start": "7148280",
    "end": "7154199"
  },
  {
    "text": "it's ready for production in the sense of you can start building with it it's not going to change under you like in",
    "start": "7154199",
    "end": "7159880"
  },
  {
    "text": "some significant way like the concepts are stable but I think like if you I guess like I think maybe actually the biggest part is",
    "start": "7159880",
    "end": "7166239"
  },
  {
    "text": "just because the conceptual model is new there aren't really a lot of resources to kind of explain how to think in it or",
    "start": "7166239",
    "end": "7173800"
  },
  {
    "text": "there aren't really like best practices that you know you can just it's it's kind of like react in early days like if",
    "start": "7173800",
    "end": "7179760"
  },
  {
    "text": "you would use react in 2014 then I think yes you can totally use app outter if",
    "start": "7179760",
    "end": "7184800"
  },
  {
    "text": "react in 2014 seemed to you know kind of Raw to you and you would rather like",
    "start": "7184800",
    "end": "7190719"
  },
  {
    "text": "wait to 2016 than I think this is similar like maybe you can wait a little bit and and then give it a try when it's",
    "start": "7190719",
    "end": "7197360"
  },
  {
    "text": "when there's more resources and more people kind of understand how to use it and it's easier to find like answers",
    "start": "7197360",
    "end": "7204280"
  },
  {
    "text": "that are correct yeah that makes sense that makes sense and so in terms of like man your own risk for app not not it's",
    "start": "7204280",
    "end": "7210679"
  },
  {
    "text": "not even risk it's like your own appetite for being on the bleeding edge and like your team's capacity to kind of",
    "start": "7210679",
    "end": "7217199"
  },
  {
    "text": "do a lot more learning through maybe reading source code and like",
    "start": "7217199",
    "end": "7222400"
  },
  {
    "text": "experimentation and I think like not necessarily A source code but I think it's just you know like we've talked",
    "start": "7222400",
    "end": "7228280"
  },
  {
    "text": "about things like use client or use server that are like very misunderstood and it's just like until there's like a",
    "start": "7228280",
    "end": "7235199"
  },
  {
    "text": "couple of really good blog posts the same way is like react was pretty misunderstood in 2014 and then like",
    "start": "7235199",
    "end": "7241679"
  },
  {
    "text": "there were some talks there were some blog posts there were podcasts like this one right and and like eventually",
    "start": "7241679",
    "end": "7247480"
  },
  {
    "text": "there's like enough kind of knowledge between people in the ecosystem that they can help each other I think that's",
    "start": "7247480",
    "end": "7254159"
  },
  {
    "text": "that's where it needs to get yeah no that that makes sense all right and my last question this doesn't even have to",
    "start": "7254159",
    "end": "7259400"
  },
  {
    "text": "do with react server components um if you could M wave a magic wand for like",
    "start": "7259400",
    "end": "7265400"
  },
  {
    "text": "one thing that you want to be on the web right whether it's a feature or even in",
    "start": "7265400",
    "end": "7270960"
  },
  {
    "text": "a library like what's one thing that you wish was on the web that isn't there today yeah I mean I'm I'm pretty selfish",
    "start": "7270960",
    "end": "7277719"
  },
  {
    "text": "right like I'm I like I like react so I'm I'm interested in like react getting better but I'd really love like a deep",
    "start": "7277719",
    "end": "7286040"
  },
  {
    "text": "first class support for animations because this is something you can already do with like libraries like",
    "start": "7286040",
    "end": "7291159"
  },
  {
    "text": "frame motion so it kind of feels like well it's you know you can use it it's already there but like similar to how",
    "start": "7291159",
    "end": "7297599"
  },
  {
    "text": "you know server components and kind of resolved a bunch of like it lets people compose you know the biggest yeah the",
    "start": "7297599",
    "end": "7304320"
  },
  {
    "text": "biggest thing with react is always we want to let people compose things we want people to take different parts",
    "start": "7304320",
    "end": "7310639"
  },
  {
    "text": "written by different people can I connect them together and have the result still make sense whether you know",
    "start": "7310639",
    "end": "7316920"
  },
  {
    "text": "like server component can extend it between like client and servers so you can have these like Lego blocks that are",
    "start": "7316920",
    "end": "7322800"
  },
  {
    "text": "uh spanning Both Worlds but you can still treat them as components and compose them and for animations like",
    "start": "7322800",
    "end": "7328800"
  },
  {
    "text": "this is something like I'd also like to see where maybe the person writing the compo currently like with frame motion",
    "start": "7328800",
    "end": "7335760"
  },
  {
    "text": "and animation approaches in other most other libraries as well usually like you have to the person wrri the component",
    "start": "7335760",
    "end": "7342719"
  },
  {
    "text": "has to be aware that it's animatable so you kind of have to like Express the",
    "start": "7342719",
    "end": "7347760"
  },
  {
    "text": "animation at the leaves whereas from kind of reacts point of view like but like people to be able to like write",
    "start": "7347760",
    "end": "7354360"
  },
  {
    "text": "components and then you should be able to like animate them from above and going of say like I'm just changing this",
    "start": "7354360",
    "end": "7360159"
  },
  {
    "text": "state from you know like Gallery index one to Gallery index 3 and I I also want",
    "start": "7360159",
    "end": "7365920"
  },
  {
    "text": "to kind of show like these like Gallery item you know the actual like Carousel items created by somebody else like I",
    "start": "7365920",
    "end": "7371480"
  },
  {
    "text": "want to specify where the current item is placed and then somehow you know you'd have like an API I think like view",
    "start": "7371480",
    "end": "7378239"
  },
  {
    "text": "view transitions API is like a step in the right direction I was just going to bring that up I was like I feel like that's like like the baby you know",
    "start": "7378239",
    "end": "7385040"
  },
  {
    "text": "that's kind of getting us there but yeah so yeah so we want to we want that but we want to integrate it with the",
    "start": "7385040",
    "end": "7390960"
  },
  {
    "text": "component model so that it it's also very composable and you can you know put",
    "start": "7390960",
    "end": "7396119"
  },
  {
    "text": "things together written by different people and like animate them in a way that's you know doesn't break because",
    "start": "7396119",
    "end": "7401960"
  },
  {
    "text": "you keep doing that and keep kind of expanding like there are many like small nuances of like what if you have many",
    "start": "7401960",
    "end": "7407719"
  },
  {
    "text": "multiple animations at the same time that can like one of them wait for the other or should they happen like",
    "start": "7407719",
    "end": "7413480"
  },
  {
    "text": "together what if like the State updates in the middle of the animation like should we kind of hold that state upd",
    "start": "7413480",
    "end": "7419520"
  },
  {
    "text": "back until it finishes so that there all these like small things that are not really composable if you think about",
    "start": "7419520",
    "end": "7425679"
  },
  {
    "text": "them in isolation but something like react could actually orchestrate it and so I I'd love to see that maybe in a",
    "start": "7425679",
    "end": "7432239"
  },
  {
    "text": "couple of years that is so cool and also today I learned Dan abov is like an animation dor um did",
    "start": "7432239",
    "end": "7439599"
  },
  {
    "text": "like yeah clearly clearly uh very passionate about animations um well Dan",
    "start": "7439599",
    "end": "7445599"
  },
  {
    "text": "again it was an amazing this was just such a like mindblowing likely deep and",
    "start": "7445599",
    "end": "7451599"
  },
  {
    "text": "dense and educational podcast discussion so really want to thank you and Eric for joining us today for folks who are",
    "start": "7451599",
    "end": "7458320"
  },
  {
    "text": "listening uh it's probably going to take a few listens to kind of get all the gems that Dan and Eric were sharing but",
    "start": "7458320",
    "end": "7464079"
  },
  {
    "text": "worth a few listens if you you've stuck with this this long thank",
    "start": "7464079",
    "end": "7469440"
  },
  {
    "text": "you and um and yeah so just you know as as hopefully this part of the ecosystem",
    "start": "7469440",
    "end": "7474719"
  },
  {
    "text": "continues to mature we hope to be able to kind of have more discussions on on this and kind of you know continue",
    "start": "7474719",
    "end": "7480800"
  },
  {
    "text": "talking about it on the show and in the meantime we'll put links to a bunch of stuff that Dan has shared with us to",
    "start": "7480800",
    "end": "7487559"
  },
  {
    "text": "kind of so you can take a look at some really good blog posts and some good write ups on on this topic and yeah and",
    "start": "7487559",
    "end": "7494040"
  },
  {
    "text": "let's use feel free to use the discussions area on our website for any questions or comments and yeah thank you",
    "start": "7494040",
    "end": "7500199"
  },
  {
    "text": "so much again Dan it's been a pleasure yeah thank you so much for hosting and for inviting me and also I apologize if",
    "start": "7500199",
    "end": "7507880"
  },
  {
    "text": "I I I know that some explanations were kind of longwinded and I also don't know which of them really work so I think I",
    "start": "7507880",
    "end": "7514480"
  },
  {
    "text": "would like appreciate if uh the listeners or the readers you know if you if you carried something away from this",
    "start": "7514480",
    "end": "7521760"
  },
  {
    "text": "like write about it you know write about it in your own language because I feel like the underlying concepts are kind of",
    "start": "7521760",
    "end": "7528599"
  },
  {
    "text": "at the fundamental level they're as simple but then there are a lot of like historical baggage and kind of how they",
    "start": "7528599",
    "end": "7534880"
  },
  {
    "text": "combine together that is more difficult and so I'd appreciate if people could help distill them down like in a better",
    "start": "7534880",
    "end": "7541079"
  },
  {
    "text": "way than than I could do here yeah no that's like such a great call out um all",
    "start": "7541079",
    "end": "7546960"
  },
  {
    "text": "right Dan so once again another one in the bucket this week and hope to C catch you all next week where we'll be talking",
    "start": "7546960",
    "end": "7553880"
  },
  {
    "text": "about something delightful as well I'm sure all right everyone cheers",
    "start": "7553880",
    "end": "7560760"
  },
  {
    "text": "bye-bye all right that is JS party for this week thanks for hanging with us",
    "start": "7573480",
    "end": "7578960"
  },
  {
    "text": "subscribe now if you haven't yet head to to JSP party. FM for all the ways and",
    "start": "7578960",
    "end": "7585079"
  },
  {
    "text": "don't forget to check out our fresh Chang log beats the new Dance Party",
    "start": "7585079",
    "end": "7590119"
  },
  {
    "text": "album is on Spotify Apple music and the rest there's a link in the show notes",
    "start": "7590119",
    "end": "7595440"
  },
  {
    "text": "for you thanks once again to our partners at fly.io to our beat freaking residence break master cylinder and to",
    "start": "7595440",
    "end": "7602880"
  },
  {
    "text": "you for listening we appreciate you spending time with us each week next up on the Pod we're talking angular again",
    "start": "7602880",
    "end": "7609920"
  },
  {
    "text": "this time with a focus on the future keep your podcast app tuned right here we'll have that episode ready for your",
    "start": "7609920",
    "end": "7616440"
  },
  {
    "text": "ear holes next [Music]",
    "start": "7616440",
    "end": "7628040"
  },
  {
    "text": "week",
    "start": "7628040",
    "end": "7631040"
  }
]