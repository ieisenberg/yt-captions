[
  {
    "text": "welcome to shipit a podcast about Ops infrastructure and answering your",
    "start": "560",
    "end": "5799"
  },
  {
    "text": "questions this episode was requested by Tyler Smith who feels that he may not",
    "start": "5799",
    "end": "11160"
  },
  {
    "text": "need kubernetes just yet Tyler has a few questions about Docker and Docker swarm",
    "start": "11160",
    "end": "16720"
  },
  {
    "text": "so Andrea lizardi former Docker swarm lead joins us today to answer them we",
    "start": "16720",
    "end": "22439"
  },
  {
    "text": "talk about the doer swarm Beginnings some of the challenges that it faced and what Andrea's recommendation is for",
    "start": "22439",
    "end": "28679"
  },
  {
    "text": "Tyler's Journey with do swarm after dedicating 4 years of his professional career to doer swarm Andrea is the best",
    "start": "28679",
    "end": "36000"
  },
  {
    "text": "person that I know to talk about the subject and guess what the same thing",
    "start": "36000",
    "end": "41039"
  },
  {
    "text": "happened now as it did at cucon 2015 Sam pointed to Andrea it will all make sense",
    "start": "41039",
    "end": "47160"
  },
  {
    "text": "in the first 5 minutes this one is going to be fun huge thanks to fast Le for shipping her episodes super fast all",
    "start": "47160",
    "end": "54120"
  },
  {
    "text": "around the world check them out at fastly.com",
    "start": "54120",
    "end": "58879"
  },
  {
    "text": "hey friends this episode is brought to you by net Foundry the creator of open ZD open ZD is the only open source way",
    "start": "61680",
    "end": "68880"
  },
  {
    "text": "to embed zero trust networking into your app this gives you unprecedented control",
    "start": "68880",
    "end": "74159"
  },
  {
    "text": "and security give your app superpowers using an open ZD SDK and a few lines of",
    "start": "74159",
    "end": "79200"
  },
  {
    "text": "code or use their tunnelers to spin up zero trust networking in minutes across any cloud or device never face the",
    "start": "79200",
    "end": "85920"
  },
  {
    "text": "horrors of vpns DNS inbound ports or complex firewall rules no networking",
    "start": "85920",
    "end": "91600"
  },
  {
    "text": "engineering skills are needed open ZD is trusted by developers at Microsoft Oracle ramco and more and if you don't",
    "start": "91600",
    "end": "98200"
  },
  {
    "text": "want to host your own open zti use the net Foundry SAS which includes free forever tiers from the 10 end points so",
    "start": "98200",
    "end": "104680"
  },
  {
    "text": "you can test things out for yourself at the netfoundry to learn more and get started again",
    "start": "104680",
    "end": "110920"
  },
  {
    "text": "netfoundry doio [Music]",
    "start": "110920",
    "end": "118239"
  },
  {
    "text": "changelog we are go to ship in 3 2 [Music]",
    "start": "118520",
    "end": "126170"
  },
  {
    "text": "[Music]",
    "start": "130190",
    "end": "136280"
  },
  {
    "text": "1 a month or so ago I was asking my dagger team who is a good person to to",
    "start": "136280",
    "end": "142400"
  },
  {
    "text": "talk doer swarm with and Sam he turned around and he pointed to the person that",
    "start": "142400",
    "end": "148200"
  },
  {
    "text": "was sitting sitting next to him and said Andrea was the lead engineer on Docker",
    "start": "148200",
    "end": "153519"
  },
  {
    "text": "swarm so maybe talk to him welcome Andrea to ship it thank you thank you",
    "start": "153519",
    "end": "158920"
  },
  {
    "text": "happy to be here so um before this episode I did like a bit of research and",
    "start": "158920",
    "end": "164319"
  },
  {
    "text": "um I found so many good presentations recorded ones slides about doer swarm so",
    "start": "164319",
    "end": "170920"
  },
  {
    "text": "you did an excellent job promoting it I have to say this was 2015 2016 a lot of",
    "start": "170920",
    "end": "177040"
  },
  {
    "text": "good stuff yeah 15 16 177 also yeah it was a couple of years for sure why are",
    "start": "177040",
    "end": "182760"
  },
  {
    "text": "we talking about Docker swarm that is a great question that I'm sure many of our listeners are thinking Tyler Smith one",
    "start": "182760",
    "end": "189599"
  },
  {
    "text": "of our listeners was asking about let's have a episode about Docker swarm which",
    "start": "189599",
    "end": "195920"
  },
  {
    "text": "prompted me to ask around and see who would be the best person to talk Dr swarm with so Tyler wrote I is Dr",
    "start": "195920",
    "end": "202720"
  },
  {
    "text": "compose in development and production on a single machine Tyler I hope it's not",
    "start": "202720",
    "end": "208120"
  },
  {
    "text": "the same machine if you learned anything please tell me it's not the same machine",
    "start": "208120",
    "end": "214280"
  },
  {
    "text": "while I'd like to explore scaling my apps I feel like I might not need kubernetes yet I would also like to keep",
    "start": "214280",
    "end": "221319"
  },
  {
    "text": "leveraging my Docker knowledge and he has the following questions before we cover the questions I am so curious to",
    "start": "221319",
    "end": "228599"
  },
  {
    "text": "find out from Andrea about the docker swarm Story how it started let's start there how did the docker swarm start the",
    "start": "228599",
    "end": "235760"
  },
  {
    "text": "idea the concept the implementation what did that look like yeah I'd be happy to talk about that it's it's actually a",
    "start": "235760",
    "end": "241920"
  },
  {
    "text": "very long story so I have to go back a few years so it all started with do",
    "start": "241920",
    "end": "247560"
  },
  {
    "text": "Cloud which was you know the company behind Docker at the time M so like we",
    "start": "247560",
    "end": "252720"
  },
  {
    "text": "have to go back to 2011 actually and at the time if you wanted to deploy an",
    "start": "252720",
    "end": "259040"
  },
  {
    "text": "application you had two choices so either you manage your own machines like",
    "start": "259040",
    "end": "264560"
  },
  {
    "text": "provision a cluster either on bare metal or with ec2 and kind of like figure out",
    "start": "264560",
    "end": "270280"
  },
  {
    "text": "a way to provision your services manually or like using salt or anible or",
    "start": "270280",
    "end": "276160"
  },
  {
    "text": "if you're lucky enough to use rubian rails and pasis then your answer was Heroku but there was nothing between",
    "start": "276160",
    "end": "282160"
  },
  {
    "text": "like if you were if you happen to be using like Jango and my SQL then you were out of lock yeah you had to",
    "start": "282160",
    "end": "288680"
  },
  {
    "text": "provision like your own cluster and so that was the the the premise behind do Cloud was that it was like Heroku but it",
    "start": "288680",
    "end": "296280"
  },
  {
    "text": "was any language with any database and turns out that it's pretty hard to do",
    "start": "296280",
    "end": "302280"
  },
  {
    "text": "because you know now you have to handle a bunch of different languages on every machine with different you know versions",
    "start": "302280",
    "end": "309080"
  },
  {
    "text": "per language and that's not something simple to do also at the time it was impossible on ec2 to run VMS because you",
    "start": "309080",
    "end": "316320"
  },
  {
    "text": "were already in a VM so that's where containers came in and we discovered you",
    "start": "316320",
    "end": "321560"
  },
  {
    "text": "know c groups and N spaces and we kind of like started to create like our own container around time internally and",
    "start": "321560",
    "end": "328120"
  },
  {
    "text": "that's basically the ancestor of docker but there was no tooling around that so we had to build our own like container",
    "start": "328120",
    "end": "334840"
  },
  {
    "text": "Builder which eventually became Docker build we had to build our own registry",
    "start": "334840",
    "end": "339960"
  },
  {
    "text": "we had to build our own load balancer because load balancer were meant for machine to machine but not machine to",
    "start": "339960",
    "end": "346720"
  },
  {
    "text": "container so it's actually Sam Alba that created like a something called hiachi",
    "start": "346720",
    "end": "352720"
  },
  {
    "text": "like the Apache for hipsters that was like a a load B an HTP load balancer for",
    "start": "352720",
    "end": "358960"
  },
  {
    "text": "containers and and finally we had to put those containers into machines and so we",
    "start": "358960",
    "end": "364560"
  },
  {
    "text": "created like a container reator internally and so we had this entire stack with basically what you know",
    "start": "364560",
    "end": "371240"
  },
  {
    "text": "eventually became Docker the registry Docker Hub Docker build and Docker swarm",
    "start": "371240",
    "end": "376360"
  },
  {
    "text": "so we had all this platform back in 2011 and a few years go by and then Heroku",
    "start": "376360",
    "end": "382840"
  },
  {
    "text": "now has build packs to you know build like any language and so they they were",
    "start": "382840",
    "end": "388000"
  },
  {
    "text": "getting like a lot of attention from community and we thought like that was pretty cool like why don't we open source the core of what we have starting",
    "start": "388000",
    "end": "395440"
  },
  {
    "text": "by the container runtime and so that's where Docker came to be in 2013 and so",
    "start": "395440",
    "end": "401120"
  },
  {
    "text": "that's kind of the the long history behind that and so in 2013 we open source Docker and about a year after in",
    "start": "401120",
    "end": "409120"
  },
  {
    "text": "2014 we reached you know 1.0 that was announced at the first dockon and you",
    "start": "409120",
    "end": "415759"
  },
  {
    "text": "know people started to you know have questions like how do I do this or that and for instance some of the question",
    "start": "415759",
    "end": "421919"
  },
  {
    "text": "were were like okay now I have a container but I need to you know run my entire application and people were",
    "start": "421919",
    "end": "427960"
  },
  {
    "text": "starting to do some hacks around that like you know shove an entire init system like systemd inside the container",
    "start": "427960",
    "end": "433319"
  },
  {
    "text": "to run multiple processes and we were trying to push like a new approach of just running a single service per",
    "start": "433319",
    "end": "441080"
  },
  {
    "text": "container and so basically having multiple containers like microservices and then the question else like how do I",
    "start": "441080",
    "end": "447800"
  },
  {
    "text": "you know I can doctor one one container but how do I do that with multiple containers and so that year we released",
    "start": "447800",
    "end": "453759"
  },
  {
    "text": "a Docker compose to you know be able to to describe the app and then the the",
    "start": "453759",
    "end": "458919"
  },
  {
    "text": "following question was like okay now I've composed but like I'm running this on my laptop had to run this on a",
    "start": "458919",
    "end": "464400"
  },
  {
    "text": "different machine and the I don't think at the time there was any terraform or at least it was not popular enough so we",
    "start": "464400",
    "end": "470000"
  },
  {
    "text": "released Docker machine like so now you have composed you have a machine and you can deploy your containers to like one",
    "start": "470000",
    "end": "477000"
  },
  {
    "text": "machine but now you know if you start three machines like how do you manage that and that's where Docker form came",
    "start": "477000",
    "end": "482919"
  },
  {
    "text": "to be and we were not talking about orchestration back then it was much simpler than that it was like we have",
    "start": "482919",
    "end": "489240"
  },
  {
    "text": "this very popular Docker API that works with one machine how do we make this API",
    "start": "489240",
    "end": "494599"
  },
  {
    "text": "multiple machine and so doer war was this very simple API multiplexer that",
    "start": "494599",
    "end": "501199"
  },
  {
    "text": "was completely stateless you could join like a couple machines together it would just you know boot up scan the state and",
    "start": "501199",
    "end": "508720"
  },
  {
    "text": "give you the same you know Docker PS API and C entire cluster with the machines and Docker run would just pick one",
    "start": "508720",
    "end": "514200"
  },
  {
    "text": "machine Docker restart and all of that basically just made it multimachine and so that's pretty much the the how Docker",
    "start": "514200",
    "end": "522399"
  },
  {
    "text": "form came to be okay so it was this multiplexer okay so hang on first of all",
    "start": "522399",
    "end": "528240"
  },
  {
    "text": "Sam was a hipster I still can't get over that no way I can't imagine",
    "start": "528240",
    "end": "535839"
  },
  {
    "text": "Sam yeah it was a lot bancer for hipsters right okay I see okay I have to",
    "start": "535839",
    "end": "541279"
  },
  {
    "text": "ask you where you got the inspiration from maybe we very quickly say hey Sam can you join this and like answer this",
    "start": "541279",
    "end": "547600"
  },
  {
    "text": "question but no no no I'm going to ask it offline that maybe if someone's curious we can share the answer by",
    "start": "547600",
    "end": "553399"
  },
  {
    "text": "Twitter or something similar we're very not very good at at naming stuff yeah I thought Solomon was the",
    "start": "553399",
    "end": "560040"
  },
  {
    "text": "Hipster no no no no no he was obviously very very popular",
    "start": "560040",
    "end": "566600"
  },
  {
    "text": "and he was very excited about Docker and that's actually how I how I got into Docker you know like that that",
    "start": "566600",
    "end": "571760"
  },
  {
    "text": "excitement and that like the story that you can take it from a really simple",
    "start": "571760",
    "end": "577120"
  },
  {
    "text": "like from your local machine and you can go into production and you have something very similar in production",
    "start": "577120",
    "end": "582200"
  },
  {
    "text": "it's the same familiar API I really like that but you're right there was like so how do I scale this from one machine to",
    "start": "582200",
    "end": "587720"
  },
  {
    "text": "multiple machines and when I had to do that say okay well it kind of makes sense it's nice I can join them but what",
    "start": "587720",
    "end": "594079"
  },
  {
    "text": "happens afterwards how do I do upgrades how do I handle my stateful stuff like my database my poster SQL what happens",
    "start": "594079",
    "end": "601600"
  },
  {
    "text": "with the volume like will it move around what about the whole plugins where for example I want to stream those logs to a",
    "start": "601600",
    "end": "608160"
  },
  {
    "text": "log aggregator and metrics and then you has to have all the questions like start coming out of that so I'm wondering",
    "start": "608160",
    "end": "613760"
  },
  {
    "text": "Andrea how did you go from this Docker swarm which was just a multiplexer to a",
    "start": "613760",
    "end": "619240"
  },
  {
    "text": "system which needs to handle distributed config which needs to handle networking",
    "start": "619240",
    "end": "625120"
  },
  {
    "text": "across multiple hosts and rebalancing things and volumes moving basically all the things that kubernetes",
    "start": "625120",
    "end": "631680"
  },
  {
    "text": "does how did you go from that simple multiplexer to something more what did that Journey look like so we started",
    "start": "631680",
    "end": "637920"
  },
  {
    "text": "with the multiplexer which released in 2015 and then you know the community",
    "start": "637920",
    "end": "643680"
  },
  {
    "text": "came back with question well basically everything you said like uh okay now I have two containers running but how do",
    "start": "643680",
    "end": "649320"
  },
  {
    "text": "they talk to each other and you know how do I attach storage and Swarm at the time like we built it with the same",
    "start": "649320",
    "end": "656440"
  },
  {
    "text": "Principle as Docker like it must be you know good DX simple to install simple to",
    "start": "656440",
    "end": "662519"
  },
  {
    "text": "to use and swarm basically followed that by being you know stateless and using",
    "start": "662519",
    "end": "668839"
  },
  {
    "text": "the same Docker Pi but realized that the docker pii which was designed for single",
    "start": "668839",
    "end": "674079"
  },
  {
    "text": "machine didn't cut it anymore like we needed something and that's where swarm",
    "start": "674079",
    "end": "679920"
  },
  {
    "text": "mode so the the internal component swarm kit came came to play the idea was two",
    "start": "679920",
    "end": "685160"
  },
  {
    "text": "fold one we're going to have a dedicated API for multiple machines so that's the docker service API that contain you know",
    "start": "685160",
    "end": "692839"
  },
  {
    "text": "more hooks for multim machines like what's the replication strategy how many instances you want you want to pin this",
    "start": "692839",
    "end": "699560"
  },
  {
    "text": "container to a specific machine and so on and so forth and then also having State finally like you cannot do you",
    "start": "699560",
    "end": "706440"
  },
  {
    "text": "know complex cluster management without state but what made it hard is that we",
    "start": "706440",
    "end": "711639"
  },
  {
    "text": "didn't want to have to you know set up you know an ND cluster like a three machine n CD cluster to manage like one",
    "start": "711639",
    "end": "718720"
  },
  {
    "text": "production machine so so that was really the tricky part and so that that's where most of the engineering went was like we",
    "start": "718720",
    "end": "726000"
  },
  {
    "text": "started to basically have a raft implementation so we took like at CDs",
    "start": "726000",
    "end": "731480"
  },
  {
    "text": "core raft implementation and bundled that into swarm kit so that nodes could just you know talk to each other and",
    "start": "731480",
    "end": "737800"
  },
  {
    "text": "reach consensus and then we created this uh Docker service API on top and in",
    "start": "737800",
    "end": "742920"
  },
  {
    "text": "addition to that we pushed also other parts of Docker you know to become modular so we had docker networking",
    "start": "742920",
    "end": "749600"
  },
  {
    "text": "modules darker volume you know modules and kind of like started to have multimachine built into that so that",
    "start": "749600",
    "end": "755800"
  },
  {
    "text": "happened you know I think swarm was stable in 2015 and probably like a few",
    "start": "755800",
    "end": "763000"
  },
  {
    "text": "months later like end of 2015 we started to work like on this new mode which we",
    "start": "763000",
    "end": "768600"
  },
  {
    "text": "announced I think it was darker Con in 2016 so around June so it took class seven or eight months to to come to that",
    "start": "768600",
    "end": "775199"
  },
  {
    "text": "yeah and so yeah that's that's how we went from a simple multiplexer to a full fledge orchestrator at the same time you",
    "start": "775199",
    "end": "781199"
  },
  {
    "text": "know there was kubernetes that was available but it was kind of you know",
    "start": "781199",
    "end": "786480"
  },
  {
    "text": "hard to you know set up and manage and use you know there's the the the very",
    "start": "786480",
    "end": "791920"
  },
  {
    "text": "famous documentation by Kelsey like kubernetes the hard way but at the time at the time it was actually you know",
    "start": "791920",
    "end": "797720"
  },
  {
    "text": "kubernetes the only way because there was no manage service there was nothing so you had to jump to many Hoops to get",
    "start": "797720",
    "end": "804880"
  },
  {
    "text": "a kubernetes cluster up and running and wanted to provide you know something simpler not the only way of doing it but",
    "start": "804880",
    "end": "811920"
  },
  {
    "text": "from what we're hearing from the community we just wanted something you know for small size clusters we didn't",
    "start": "811920",
    "end": "818199"
  },
  {
    "text": "want to manage 10,000 machines most applications at the time were like pretty simple because Docker was not",
    "start": "818199",
    "end": "824320"
  },
  {
    "text": "really great at multi tendency like on a single machine like you could not have multiple customers fighting for the same",
    "start": "824320",
    "end": "830480"
  },
  {
    "text": "CPU because isolation was not great so people are using managing you know a many small cluster rather than like a",
    "start": "830480",
    "end": "837480"
  },
  {
    "text": "you know H machines cluster and so at that time the strategy made sense so you mentioned Kelsey hiow and I'm very glad",
    "start": "837480",
    "end": "843800"
  },
  {
    "text": "that you did not only we had him recently and he mentioned kubernetes the hard way how famous it became and you",
    "start": "843800",
    "end": "850240"
  },
  {
    "text": "know how many people drew inspiration from it but he's also the same person that introduced you and Sam At cubec Con",
    "start": "850240",
    "end": "857120"
  },
  {
    "text": "North America 2015 when you talked about Docker swarm and kubernetes that was the title of the talk Docker swarm and kues",
    "start": "857120",
    "end": "863720"
  },
  {
    "text": "and what Kelsey said is is the first talk where he knows that the boss made some else present not someone else the",
    "start": "863720",
    "end": "871279"
  },
  {
    "text": "boss made someone present at the conference because Sam was presenting with you and the time he he was your boss now I'm wondering if the same thing",
    "start": "871279",
    "end": "878320"
  },
  {
    "text": "happened now because I asked who knows oer swarm and Sam went Andrea does so he basically volunteered you for ship it oh",
    "start": "878320",
    "end": "886199"
  },
  {
    "text": "damn it Sam you done it again so uh one thing that you mentioned at that conference in the talk was how",
    "start": "886199",
    "end": "893680"
  },
  {
    "text": "Docker swarm 1.0 how you benchmarked it to a th000 nodes and how he could run 30,000 containers what was that like to",
    "start": "893680",
    "end": "901199"
  },
  {
    "text": "Benchmark that to realize the scale that it could reach because I'm pretty sure at the time kubernetes was not able to",
    "start": "901199",
    "end": "906519"
  },
  {
    "text": "run 1,000 notes in 2015 yeah yeah yeah for sure that was actually like a very",
    "start": "906519",
    "end": "911680"
  },
  {
    "text": "interesting talk as I said like the goal again was to make you know running on",
    "start": "911680",
    "end": "916920"
  },
  {
    "text": "multiple machines easy and so we had you know Swarm at a built-in orchestrator",
    "start": "916920",
    "end": "922839"
  },
  {
    "text": "but the goal was not to push orchestrator like everywhere like we actually had support for were Dockers",
    "start": "922839",
    "end": "929759"
  },
  {
    "text": "swarm backed by mzas and the reason we were at that the first like Cube conon",
    "start": "929759",
    "end": "934839"
  },
  {
    "text": "was to announce that Docker swarm supported like running containers on kubernetes like we just wanted to have",
    "start": "934839",
    "end": "940680"
  },
  {
    "text": "you know the docker pii simple enough but if you wanted to run like a kubernetes cluster or a mesos cluster so",
    "start": "940680",
    "end": "946240"
  },
  {
    "text": "be it like you could you know Point swarm to your kubernetes cluster and just you know do a Docker run and it",
    "start": "946240",
    "end": "953160"
  },
  {
    "text": "worked so the built-in orchestrator that was just for you know if you didn't have",
    "start": "953160",
    "end": "958480"
  },
  {
    "text": "you know neither kubernetes nor mazes well we had a simple one baked in that was the goal turns out the built-in one",
    "start": "958480",
    "end": "965199"
  },
  {
    "text": "was so simple because like again like stateless just a multiplexer that when",
    "start": "965199",
    "end": "970519"
  },
  {
    "text": "we Tred to you know we're wondering like what's the scale people were saying oh it's it's so simple like will we handle",
    "start": "970519",
    "end": "976000"
  },
  {
    "text": "like 10 machines 20 machines so we just fired up a thousand nodes cluster and we're running commands against it just",
    "start": "976000",
    "end": "982600"
  },
  {
    "text": "to you know see how it would go and it it didn't break at all so that was not the intended purpose I think internal uh",
    "start": "982600",
    "end": "989959"
  },
  {
    "text": "automation we're regularly pushing it I think to 20 machines that was like the the target we didn't think like at the",
    "start": "989959",
    "end": "997040"
  },
  {
    "text": "time anyone would you know run it above 20 because again like multi-tenancy was",
    "start": "997040",
    "end": "1002199"
  },
  {
    "text": "not great so many clusters for one company rather than a gigantic cluster also it was you know in 2015 is so",
    "start": "1002199",
    "end": "1011120"
  },
  {
    "text": "people are just migrating to Containers like they didn't have their entire infrastructure on containers maybe they",
    "start": "1011120",
    "end": "1016279"
  },
  {
    "text": "had most of the machines were managed man ually and then maybe they started to have like one cluster on the side just",
    "start": "1016279",
    "end": "1023519"
  },
  {
    "text": "for containers and it was like more or less per team or preservice I guess the",
    "start": "1023519",
    "end": "1029199"
  },
  {
    "text": "1,000 machines happen it was a happy incident but not by Design yeah that makes sense I mean even now to be honest",
    "start": "1029199",
    "end": "1036038"
  },
  {
    "text": "what people recommend is run small kubernetes clusters don't run big ones it's an anti- pattern you'll start",
    "start": "1036039",
    "end": "1042160"
  },
  {
    "text": "hitting various issues around DNS around networking around scheduling you know if",
    "start": "1042160",
    "end": "1047678"
  },
  {
    "text": "you're run too large containers so this is a known thing even today and it's not recommended yeah not like weird things",
    "start": "1047679",
    "end": "1054400"
  },
  {
    "text": "happen in large clusters you know is what people are saying the ones that tried and failed and beside the the the",
    "start": "1054400",
    "end": "1060919"
  },
  {
    "text": "technical challenges there's also like simple challenges like cost management like because uh most of the building is",
    "start": "1060919",
    "end": "1067039"
  },
  {
    "text": "per machine if you start to mix everything together you don't even know like hey how much like this Production",
    "start": "1067039",
    "end": "1072320"
  },
  {
    "text": "service is costing us now I think there's there's tooling that can you know take a deep dive inside kubernetes",
    "start": "1072320",
    "end": "1078000"
  },
  {
    "text": "to figure out like cost per service but at the time like you were built by machine so if your entire company was",
    "start": "1078000",
    "end": "1085000"
  },
  {
    "text": "running a single cluster you would have like one invoice and then good luck figuring out like why the cost was",
    "start": "1085000",
    "end": "1090919"
  },
  {
    "text": "increasing yeah that's a good [Music]",
    "start": "1090919",
    "end": "1102770"
  },
  {
    "text": "one this episode is brought to you by our friends at Sentry build better software fast",
    "start": "1103200",
    "end": "1109360"
  },
  {
    "text": "diagnose fix and optimize the performance of your code over 1 million",
    "start": "1109360",
    "end": "1114520"
  },
  {
    "text": "developers and 68,000 organizations already used Sentry that number includes",
    "start": "1114520",
    "end": "1120159"
  },
  {
    "text": "us here's the absolute easiest way to try Sentry right now you don't have to do anything just go to try. centry DD",
    "start": "1120159",
    "end": "1128000"
  },
  {
    "text": "demo.com that is an open sandbox with data that refreshes every time you refresh or every 10 minutes something",
    "start": "1128000",
    "end": "1134880"
  },
  {
    "text": "like that but long story short that's the easiest way to try Sentry right now no installation no whatsoever that",
    "start": "1134880",
    "end": "1142000"
  },
  {
    "text": "dashboard is the exact dashboard we see every time we log in Sentry and of course our listeners get a deal they get",
    "start": "1142000",
    "end": "1148640"
  },
  {
    "text": "the team plan for free for 3 months all you got to do is go to sentry.io and use the code change log when you sign up",
    "start": "1148640",
    "end": "1155200"
  },
  {
    "text": "again sentry.io and use the code change [Music]",
    "start": "1155200",
    "end": "1167258"
  },
  {
    "text": "log so I'm going to switch to one of Tyler's",
    "start": "1167720",
    "end": "1174000"
  },
  {
    "text": "questions and one of the first questions that he asks is what are the differences between doer swarm and do swarm okay I",
    "start": "1174000",
    "end": "1182400"
  },
  {
    "text": "think we briefly touched on that before but the transition from the two was like from going from a stateless multiplexer",
    "start": "1182400",
    "end": "1190960"
  },
  {
    "text": "to an actually full flight orchestrator so I think maybe it's a naming fail like",
    "start": "1190960",
    "end": "1196520"
  },
  {
    "text": "it's so similar like there's only the extra word like mode but they have nothing to do like one was a you know a",
    "start": "1196520",
    "end": "1203080"
  },
  {
    "text": "multiplexer that would run as a separate container whereas War mode was this you know stateful thing built into Docker",
    "start": "1203080",
    "end": "1211600"
  },
  {
    "text": "that you know had a a a new API like the services API and even though it was big",
    "start": "1211600",
    "end": "1217400"
  },
  {
    "text": "in it was off by default like it wouldn't like that was another goal like if you don't use form you just install",
    "start": "1217400",
    "end": "1223480"
  },
  {
    "text": "like swarm mode sorry if you just install Docker the memory footprint is the same but then just type you know",
    "start": "1223480",
    "end": "1229400"
  },
  {
    "text": "Dockers form in it and then it would just put up the the the internal process so yeah same name entirely different",
    "start": "1229400",
    "end": "1236760"
  },
  {
    "text": "project okay so Docker swarm mode is when you run Docker swarm in it yeah",
    "start": "1236760",
    "end": "1242400"
  },
  {
    "text": "that turns on the Swarm mode which boots up the internal like swarm kit so we had you know this naming scheme with like",
    "start": "1242400",
    "end": "1249120"
  },
  {
    "text": "build kit swarm kit VPN kit and all the kits and those are basically things that",
    "start": "1249120",
    "end": "1254880"
  },
  {
    "text": "run inside Docker like build kit that powers Docker build and then kid the power is like Docker swarm in it so how",
    "start": "1254880",
    "end": "1261480"
  },
  {
    "text": "do you go from Docker swarm mode Docker engine or do Docker demon which runs in",
    "start": "1261480",
    "end": "1266600"
  },
  {
    "text": "swarm mode how do you go from that to Docker swarm is it just a matter of joining multiple Docker swarm hosts is",
    "start": "1266600",
    "end": "1273679"
  },
  {
    "text": "that it yeah that's exactly it you pick one machine you do Docker swarm in it and then on any other machine you do",
    "start": "1273679",
    "end": "1279679"
  },
  {
    "text": "Docker swarm join and then the address of that machine and they start to form a cluster and form reach a consensus join",
    "start": "1279679",
    "end": "1288039"
  },
  {
    "text": "like the the raft consensus and Shar Network information and start",
    "start": "1288039",
    "end": "1293480"
  },
  {
    "text": "replicating stuff so that was the the goal like it's a one command and you have a cluster and that's what you want",
    "start": "1293480",
    "end": "1300039"
  },
  {
    "text": "to be very careful uh when it comes to consensus when it comes to the number of notes that you have so always have an",
    "start": "1300039",
    "end": "1306039"
  },
  {
    "text": "uneven number of nodes I'm wondering how does Docker swarm like pairs like two",
    "start": "1306039",
    "end": "1311520"
  },
  {
    "text": "for example two nodes how would they reach consensus if they couldn't talk like who would win which side would win",
    "start": "1311520",
    "end": "1317559"
  },
  {
    "text": "brain scenario that's what I'm thinking yeah yeah we we put like a lot of engineering to make it easy maybe too",
    "start": "1317559",
    "end": "1323120"
  },
  {
    "text": "easy because then you know Engineers are like okay this is easy but like how does it work because I want to know and the",
    "start": "1323120",
    "end": "1330080"
  },
  {
    "text": "way it works behind is that it tries to pick like same default so when you in it",
    "start": "1330080",
    "end": "1335440"
  },
  {
    "text": "you run like in a single leader mechanism like you have a single rra node when you join another node that one",
    "start": "1335440",
    "end": "1342799"
  },
  {
    "text": "is also it's just a uh it's not part of raft it's just a node set to run",
    "start": "1342799",
    "end": "1348240"
  },
  {
    "text": "container ERS MH when the third join then they form like a raft cluster",
    "start": "1348240",
    "end": "1353559"
  },
  {
    "text": "interesting okay and when the fourth and on like there's no more than three raft",
    "start": "1353559",
    "end": "1359120"
  },
  {
    "text": "basically members because there that's too much you could actually change in config like between three five or seven",
    "start": "1359120",
    "end": "1365480"
  },
  {
    "text": "above seven it doesn't make sense it's too slow and there's too many like uh edge cases but internally like you could",
    "start": "1365480",
    "end": "1372400"
  },
  {
    "text": "configure a number but default it was three the first three machines to join part of raft the other ones could just run containers and that's it interesting",
    "start": "1372400",
    "end": "1379320"
  },
  {
    "text": "okay and would the raft members move around so let's imagine you have five containers but you have only three",
    "start": "1379320",
    "end": "1386279"
  },
  {
    "text": "members part of the raft cluster let's imagine that one node the one which runs one member dies would the raft",
    "start": "1386279",
    "end": "1394840"
  },
  {
    "text": "membership move around to one of the running nodes which is just running containers is is that how it would work",
    "start": "1394840",
    "end": "1400080"
  },
  {
    "text": "yeah actually there were a couple commands to manag there was Docker swarm promote and Docker swarm demote so swarm",
    "start": "1400080",
    "end": "1407159"
  },
  {
    "text": "would pick like three machines to be to decide what to do you know with with raft the first three to join but then",
    "start": "1407159",
    "end": "1414440"
  },
  {
    "text": "we're not shifting consensus around because that's a risky operation like to shift consensus around you either have",
    "start": "1414440",
    "end": "1420679"
  },
  {
    "text": "to currently have consensus like you cannot if the there's a net split",
    "start": "1420679",
    "end": "1426480"
  },
  {
    "text": "there's one machine on the side and two on the other you don't know like did the other two die or did the net spit and so",
    "start": "1426480",
    "end": "1433679"
  },
  {
    "text": "we didn't want to change raft topology dynamically because that's very dangerous but we Prov proved tools for",
    "start": "1433679",
    "end": "1440000"
  },
  {
    "text": "the operator basically to change membership status between the nodes with",
    "start": "1440000",
    "end": "1445080"
  },
  {
    "text": "like promote and demote so you would do like a Docker node list you would see",
    "start": "1445080",
    "end": "1450640"
  },
  {
    "text": "all the nodes you would see like which ones are part of raft and which one is",
    "start": "1450640",
    "end": "1456039"
  },
  {
    "text": "currently like the the leader node and then you could you know promote some other nodes or demote others and they",
    "start": "1456039",
    "end": "1462559"
  },
  {
    "text": "would just figure it out dynamically this brings back so many memories from",
    "start": "1462559",
    "end": "1467760"
  },
  {
    "text": "years of the discussion on the rabbit DQ team about Quorum qes and how should raft be implemented and what semantics",
    "start": "1467760",
    "end": "1473640"
  },
  {
    "text": "it should have and which parts of raft are safe and when you throw in the the",
    "start": "1473640",
    "end": "1479240"
  },
  {
    "text": "real world operational aspect no it's getting overloaded Network splits all",
    "start": "1479240",
    "end": "1484679"
  },
  {
    "text": "sorts like not notes getting upgraded what do you do then there's so many hairy situations and what you just",
    "start": "1484679",
    "end": "1491120"
  },
  {
    "text": "mentioned just brought all of that back you don't know what the right solution is and users would say end users would",
    "start": "1491120",
    "end": "1497159"
  },
  {
    "text": "tell us but why don't you fix this well we can't I say no no of course like you're lazy no no like you're not doing",
    "start": "1497159",
    "end": "1504480"
  },
  {
    "text": "your job like properly enough no actually it's really hard you know and then by the time you like started talking now it's it's just a bunch of",
    "start": "1504480",
    "end": "1510640"
  },
  {
    "text": "excuses so yeah those were some very tricky conversations uh along that history I think we can have time for one",
    "start": "1510640",
    "end": "1516960"
  },
  {
    "text": "more question from Tyler and before we we go back to um a slightly different",
    "start": "1516960",
    "end": "1522520"
  },
  {
    "text": "topic when might it make sense to use Docker with swarm mode in production",
    "start": "1522520",
    "end": "1527720"
  },
  {
    "text": "that's one of the other things that Tyler was wondering what would you say Andrea good question I think it's very",
    "start": "1527720",
    "end": "1534240"
  },
  {
    "text": "different today from what it was back then I think my my answer today would be",
    "start": "1534240",
    "end": "1540080"
  },
  {
    "text": "like you know if we're asking me like where would it make sense to use my SQL versus P I would just say just use RDS",
    "start": "1540080",
    "end": "1547120"
  },
  {
    "text": "you know just use a manage service I think swarm today is still one of the",
    "start": "1547120",
    "end": "1552960"
  },
  {
    "text": "easiest way to manage your own cluster if you want orchestration in containers",
    "start": "1552960",
    "end": "1558360"
  },
  {
    "text": "like it's uh it's simple enough to to set up and and operate although I think you know managing your own cluster you",
    "start": "1558360",
    "end": "1565600"
  },
  {
    "text": "know there's use cases behind that but by default I would just encourage everyone to use like a managed service",
    "start": "1565600",
    "end": "1571760"
  },
  {
    "text": "could be like a managed kubernetes cluster or even like a managed proprietary service like uh Amazon like",
    "start": "1571760",
    "end": "1577039"
  },
  {
    "text": "AWS ECS or anything basically where someone else you know gets paged when",
    "start": "1577039",
    "end": "1583360"
  },
  {
    "text": "the the management plane breaks and when the raft consensus algorithm breaks or it needs help that's basically what",
    "start": "1583360",
    "end": "1589039"
  },
  {
    "text": "you're saying it's hard enough yeah to have someone to worry about that which is what happens by default with",
    "start": "1589039",
    "end": "1594559"
  },
  {
    "text": "kubernetes right you don't even know there is such a thing because I mean the management plane just have an API to it",
    "start": "1594559",
    "end": "1600520"
  },
  {
    "text": "and that's it you're not concerned with the operation of the management plane so that's what you're saying okay yeah",
    "start": "1600520",
    "end": "1605960"
  },
  {
    "text": "unless it's it's part of your core business I don't think you should be fiddling with you know rra consensus at",
    "start": "1605960",
    "end": "1611880"
  },
  {
    "text": "2: a.m. you know okay so do you know if a managed Docker swarm service exists",
    "start": "1611880",
    "end": "1619279"
  },
  {
    "text": "today so there were a few incarnations of that I think at some point uh AWS had",
    "start": "1619279",
    "end": "1626240"
  },
  {
    "text": "a swarm compatible service so I think they supported like with a specialized",
    "start": "1626240",
    "end": "1633399"
  },
  {
    "text": "CLI they could parse like a compos file and Docker swarm supported to run like a",
    "start": "1633399",
    "end": "1640600"
  },
  {
    "text": "a compos file as a manifest file so AWS there was this special CLI which would",
    "start": "1640600",
    "end": "1646600"
  },
  {
    "text": "take a swarm comp ible file and convert it to I think it was ECS or maybe",
    "start": "1646600",
    "end": "1652240"
  },
  {
    "text": "something else so you could in a sense like use a manage swarm even though the implementation was not swarm but API",
    "start": "1652240",
    "end": "1658960"
  },
  {
    "text": "compatible see I don't know if that's still around but it used to be around we used to discuss with the U AWS team you",
    "start": "1658960",
    "end": "1666679"
  },
  {
    "text": "know things that would not work you know on that particular service would you know try and make the API compatible as",
    "start": "1666679",
    "end": "1673760"
  },
  {
    "text": "much as we could to make it like semi- managed I guess yeah that makes sense",
    "start": "1673760",
    "end": "1680120"
  },
  {
    "text": "[Music]",
    "start": "1681270",
    "end": "1692929"
  },
  {
    "text": "this episode is brought to you by our friends at fire hydrant fire hydrant is the reliability platform for every",
    "start": "1694080",
    "end": "1700399"
  },
  {
    "text": "developer incidents impact everyone not just sres fire hydrant gives teams the",
    "start": "1700399",
    "end": "1705640"
  },
  {
    "text": "tools to maintain service catalogues respond to incidents communicate through status pages and learn with",
    "start": "1705640",
    "end": "1711279"
  },
  {
    "text": "retrospectives what would normally be manual air prone tasks across the entire spectrum of responding to an incident",
    "start": "1711279",
    "end": "1717320"
  },
  {
    "text": "this can all be automated in every way with fire hydrant fire hydrant gives you incident tooling to manage incidents of",
    "start": "1717320",
    "end": "1724360"
  },
  {
    "text": "any type with any severity with consistency you can declare and mitigate incidents all inside slack service",
    "start": "1724360",
    "end": "1731200"
  },
  {
    "text": "cataloges allow service owners to improve operational maturity and document all your deploys in your service catalog incident and L light",
    "start": "1731200",
    "end": "1738519"
  },
  {
    "text": "extract meaningful insights about your reliability over any facet of your incident or the people who respond to",
    "start": "1738519",
    "end": "1744080"
  },
  {
    "text": "them and at the heart of it all incident run books they let you create custom automation rules to convert manual tasks",
    "start": "1744080",
    "end": "1749960"
  },
  {
    "text": "into automated reliable repeatable sequences that run when you want create slack channels jur tickets Zoom Bridges",
    "start": "1749960",
    "end": "1757799"
  },
  {
    "text": "instantly after declaring an incident now your processes can be consistent and automatic try fire hydrant free for 14",
    "start": "1757799",
    "end": "1764440"
  },
  {
    "text": "days get access to every feature no credit card required get start started at fireh hydrant doio again fir hydrant",
    "start": "1764440",
    "end": "1771399"
  },
  {
    "text": "doio and by our friends at rol rol is the low code platform for developers to",
    "start": "1771399",
    "end": "1777320"
  },
  {
    "text": "build internal tools some of the best teams out there trust retool brex coinbase plaid door Dash legal genius",
    "start": "1777320",
    "end": "1786080"
  },
  {
    "text": "Amazon all birds pelaton and so many more the developers at these teams trust retool as the platform to build their",
    "start": "1786080",
    "end": "1793039"
  },
  {
    "text": "internal tools and that means you can too it's free to try so head to ret.com / changelog again ret.com",
    "start": "1793039",
    "end": "1802720"
  },
  {
    "text": "[Music]",
    "start": "1802990",
    "end": "1813000"
  },
  {
    "text": "changelog so I remember in 2018 when we were thinking of migrating or I was",
    "start": "1813000",
    "end": "1820480"
  },
  {
    "text": "thinking about migrating from a Docker that we used to install with anible on a",
    "start": "1820480",
    "end": "1825919"
  },
  {
    "text": "bon 2 and then converted into Docker swarm and I think we only had one at the",
    "start": "1825919",
    "end": "1831240"
  },
  {
    "text": "time we converted to Docker swarm to be able to use the API and whatnot or maybe",
    "start": "1831240",
    "end": "1836559"
  },
  {
    "text": "I'm misremembering this part we weren't using Docker swarm but anyways we were",
    "start": "1836559",
    "end": "1841720"
  },
  {
    "text": "basically managing our own Docker instance in production and that was not fun and in 2018 I thought you know what",
    "start": "1841720",
    "end": "1848080"
  },
  {
    "text": "how about we pick an operating system that has Docker pre-installed and it manages all this and upgrades and Docker",
    "start": "1848080",
    "end": "1853880"
  },
  {
    "text": "upgrades and all that so that's when we picked coros it came with docker it had a lot of the mounts were read",
    "start": "1853880",
    "end": "1861519"
  },
  {
    "text": "only that was great the upgrades were very nice and that you could like self upgrade itself and and we like that",
    "start": "1861519",
    "end": "1867919"
  },
  {
    "text": "there a couple of quirks there but I was really excited about going to Docker swarm and that was 20 2018 it must have",
    "start": "1867919",
    "end": "1875519"
  },
  {
    "text": "been 2018 because at the end of 2018 like for 2019 we went from Docker swarm",
    "start": "1875519",
    "end": "1881559"
  },
  {
    "text": "to kubernetes and that's something that Tyler is asking should he just go to kubernetes and or should he use swarm",
    "start": "1881559",
    "end": "1889480"
  },
  {
    "text": "having used both I liked like a lot of things that you mentioned first of all",
    "start": "1889480",
    "end": "1894519"
  },
  {
    "text": "it's a managed service so kubernetes these days just get it as a managed service and you don't have to worry",
    "start": "1894519",
    "end": "1900559"
  },
  {
    "text": "about like the little intricacies around you know the control plane the worker",
    "start": "1900559",
    "end": "1905799"
  },
  {
    "text": "nodes all that stuff so having a managed control plane is such an important thing",
    "start": "1905799",
    "end": "1911360"
  },
  {
    "text": "that was the first thing the second thing was around the ecosystem so we the reason why we went to kubernetes from",
    "start": "1911360",
    "end": "1916840"
  },
  {
    "text": "Docker swarm end of 2018 beginning of 2019 was because we could all of a",
    "start": "1916840",
    "end": "1923279"
  },
  {
    "text": "sudden install these things on kubernetes and not have to worry about packages so the valley line moved up we",
    "start": "1923279",
    "end": "1931760"
  },
  {
    "text": "could get a Prometheus for example and we didn't have to worry how it comes from how it gets wired all those things",
    "start": "1931760",
    "end": "1937480"
  },
  {
    "text": "it was much much easier there was something like external DNS which was very nice so part of that we stopped",
    "start": "1937480",
    "end": "1945440"
  },
  {
    "text": "using terraform we went to kubernetes of course skelsey told me that's a bad idea like don't do that you know like you",
    "start": "1945440",
    "end": "1951120"
  },
  {
    "text": "want a control cluster and then you want your workload cluster rather than mixing the two concerns which which is what we",
    "start": "1951120",
    "end": "1957279"
  },
  {
    "text": "did and we still do today so there's some food for thought for me and things to improve for sure but the migration",
    "start": "1957279",
    "end": "1963240"
  },
  {
    "text": "was fairly simple I have to say and it felt like it's a step in the right direction so I'm wondering where do you",
    "start": "1963240",
    "end": "1969760"
  },
  {
    "text": "sit when it comes to this Andrea would you use Docker swarm for production if",
    "start": "1969760",
    "end": "1974960"
  },
  {
    "text": "it was managed would that be enough for you to pick doer swarm SW is it just like that managed part or would you go",
    "start": "1974960",
    "end": "1980279"
  },
  {
    "text": "to kubernetes what would you pick and why yeah I think it really depends on the use case I've been using for",
    "start": "1980279",
    "end": "1986639"
  },
  {
    "text": "instance like uh myself in the past I've been using uh ECS to kind of get a manag",
    "start": "1986639",
    "end": "1992000"
  },
  {
    "text": "service without a little bit easier to use as a user but really depends on what",
    "start": "1992000",
    "end": "1997399"
  },
  {
    "text": "I'm trying to do and if I if I value you know porting from one cloud provider to",
    "start": "1997399",
    "end": "2004120"
  },
  {
    "text": "to another for instance I think I would probably consider it consider swarm if I",
    "start": "2004120",
    "end": "2009360"
  },
  {
    "text": "was running like a a nonrem cluster or you know a cluster a provision manually",
    "start": "2009360",
    "end": "2016799"
  },
  {
    "text": "with machines but I wouldn't do that like I think unless you know I have some weird requirements about the machines or",
    "start": "2016799",
    "end": "2023039"
  },
  {
    "text": "like it needs to be in a cage a control or something like that but I think by default you know for regular you know",
    "start": "2023039",
    "end": "2029559"
  },
  {
    "text": "web application I would just use a manage service whether it's kubernetes CCS or or something else okay okay I",
    "start": "2029559",
    "end": "2036399"
  },
  {
    "text": "think one of the main main reasons is about ecosystem and you know if I run",
    "start": "2036399",
    "end": "2042720"
  },
  {
    "text": "into problems I want to be able to Google the problems and you know hit you know some see some people that run into",
    "start": "2042720",
    "end": "2049118"
  },
  {
    "text": "the same problems as me and so on and so forth so yeah so this makes me wonder",
    "start": "2049119",
    "end": "2054878"
  },
  {
    "text": "what why do you think kubernetes became so popular over the years because at one",
    "start": "2054879",
    "end": "2060040"
  },
  {
    "text": "point Docker swarm was so much more advanced in kubernetes right and at one point as you mentioned you could run",
    "start": "2060040",
    "end": "2066800"
  },
  {
    "text": "containers in kubernetes via Docker swarm so in the way the integration was you know the other way around you know",
    "start": "2066800",
    "end": "2072720"
  },
  {
    "text": "kubernetes was running Docker engines for a long time and then then the docker shim was was removed and you know the",
    "start": "2072720",
    "end": "2079118"
  },
  {
    "text": "whole runtime change the container runtime change that was like a huge huge deal but at some point Docker swarm I'm",
    "start": "2079119",
    "end": "2086200"
  },
  {
    "text": "sure it was a great choice and people said kubernetes okay it's a new thing you know not not so unproven and because",
    "start": "2086200",
    "end": "2093040"
  },
  {
    "text": "he had Docker right and Docker was was a great tool and even to this day you know lot of people depend on it and it's just",
    "start": "2093040",
    "end": "2099280"
  },
  {
    "text": "so easy it's the easiest thing so I'm wondering at what point the kubernetes I",
    "start": "2099280",
    "end": "2105400"
  },
  {
    "text": "I don't say like was like starting to get maybe more popular and why I mean that that always fascinated me I think",
    "start": "2105400",
    "end": "2111079"
  },
  {
    "text": "we had the kubernetes documentary so I have a lot of like the kubernetes story but I'm missing the docker and the",
    "start": "2111079",
    "end": "2116440"
  },
  {
    "text": "docker swarm story yeah I think it the main reason behind that is that swarm was about you know again he started with",
    "start": "2116440",
    "end": "2123440"
  },
  {
    "text": "a simple promise of you have one Docker machine and now you have multiple",
    "start": "2123440",
    "end": "2128520"
  },
  {
    "text": "machines and we're going to help you with that whereas kubernetes is much more than running containers it's this",
    "start": "2128520",
    "end": "2135760"
  },
  {
    "text": "you know this set of API construct where like you can do a bunch of stuff on top",
    "start": "2135760",
    "end": "2141440"
  },
  {
    "text": "running containers is one thing you can do and at the beginning was the the main thing you could do but it was very much",
    "start": "2141440",
    "end": "2148440"
  },
  {
    "text": "extensible like it was easier for the ecoystem to plug into that you know for",
    "start": "2148440",
    "end": "2153520"
  },
  {
    "text": "load balancers to plug into that to have a third parties plug into that and and so I think that really contributed for",
    "start": "2153520",
    "end": "2160040"
  },
  {
    "text": "the ecosystem to kind of standardize on that it was hard at the time if you",
    "start": "2160040",
    "end": "2165920"
  },
  {
    "text": "wanted to you know swap something out of swarm you you had to make a PR against",
    "start": "2165920",
    "end": "2171040"
  },
  {
    "text": "swarm and and do that so it was hard for vendors basically to to come in because also we didn't want to approve you know",
    "start": "2171040",
    "end": "2177440"
  },
  {
    "text": "every single vendor PR that came in we call those like driveby PRS where like a vendor would like drop their PR and you",
    "start": "2177440",
    "end": "2184760"
  },
  {
    "text": "know it would be buggy like six months later but it would never you know contribute resources to fix it and so",
    "start": "2184760",
    "end": "2190319"
  },
  {
    "text": "we're kind of you know solving one problem of running containers whereas",
    "start": "2190319",
    "end": "2195560"
  },
  {
    "text": "kubernetes started to be this orchestration API not not just orchestration it was like a a a cloud",
    "start": "2195560",
    "end": "2202079"
  },
  {
    "text": "API where like a bunch of vendors could just standardize on that with a yaml file come in drop their controllers and",
    "start": "2202079",
    "end": "2208839"
  },
  {
    "text": "so I think that's the reason why kubernetes became so popular the thing to remember also the time is that it was",
    "start": "2208839",
    "end": "2215839"
  },
  {
    "text": "not you know swarm versus bad is there were like many Tools around like you mentioned cor and for instance cor at",
    "start": "2215839",
    "end": "2222560"
  },
  {
    "text": "Fleet to you know manage you know a bunch of containers there was Nomad by Hashi cor which is still around and and",
    "start": "2222560",
    "end": "2229520"
  },
  {
    "text": "works great as far as I know there was warm of course there was kubernetes there was mesos yeah that was used by",
    "start": "2229520",
    "end": "2236400"
  },
  {
    "text": "Enterprises like a lot of big companies were using that and so Apple I remember yeah I think they were one of the",
    "start": "2236400",
    "end": "2241920"
  },
  {
    "text": "biggest users of uh Twitter also like uh we're using mazos and so so we had it",
    "start": "2241920",
    "end": "2248800"
  },
  {
    "text": "was a time where there were a bunch of tools for different needs mesos for",
    "start": "2248800",
    "end": "2253839"
  },
  {
    "text": "Enterprises and Fleet if you were like into the core kind of ecosystem it maybe",
    "start": "2253839",
    "end": "2259119"
  },
  {
    "text": "made sense uh Nomad you know for hashy Corp made sense and then swarm it's this",
    "start": "2259119",
    "end": "2265760"
  },
  {
    "text": "built-in thing simple to use and then kubernetes takes it like in a different approach where it's it's an API but at",
    "start": "2265760",
    "end": "2273280"
  },
  {
    "text": "the end of the day like the ecosystem standardized so much that it canot you know overshadowed all the other tools",
    "start": "2273280",
    "end": "2279720"
  },
  {
    "text": "but back in the day like there were like five or six different tools and with many users in each and TW their own you",
    "start": "2279720",
    "end": "2286160"
  },
  {
    "text": "know depending on the use case yeah that's actually a good point I I I forget about the other tools you're right there were there I remember msos I",
    "start": "2286160",
    "end": "2293200"
  },
  {
    "text": "remember trying it and thinking wow this thing is really complex at the time I was I was in into cloudfoundry and I was",
    "start": "2293200",
    "end": "2299680"
  },
  {
    "text": "like part of the cloudfoundry ecosystem and I like that idea around like how simple it is compared to like it was",
    "start": "2299680",
    "end": "2306400"
  },
  {
    "text": "almost as as simple as Heroku I really like that there was Bosch the whole like",
    "start": "2306400",
    "end": "2311520"
  },
  {
    "text": "management of like Cloud Foundry and all the services that you had the stateful services so there were some good things",
    "start": "2311520",
    "end": "2317440"
  },
  {
    "text": "in that ecosystem which you know I I worked on for a bunch of years and at one point that was the simplest thing so",
    "start": "2317440",
    "end": "2324520"
  },
  {
    "text": "you're right there was like so many more things but somehow kubernetes just you know eclipsed everything else that's",
    "start": "2324520",
    "end": "2331119"
  },
  {
    "text": "what happened and I'm I'm wondering what comes after kubernetes that's something which is on my mind a lot and I see see",
    "start": "2331119",
    "end": "2337599"
  },
  {
    "text": "Docker and I see kubernetes and then I see something else and I'd like to think",
    "start": "2337599",
    "end": "2343319"
  },
  {
    "text": "on on on my best days that I'm working on that something else but we'll see we'll see when it launches and we'll see",
    "start": "2343319",
    "end": "2348839"
  },
  {
    "text": "you know how how the users adopt it and and what happens afterwards so but that is a topic for a different day for sure",
    "start": "2348839",
    "end": "2355640"
  },
  {
    "text": "so when it comes to Docker swarm what are the good memories that you have from",
    "start": "2355640",
    "end": "2361480"
  },
  {
    "text": "the time that you spend working on it maybe something that's memorable even to this day something that you're proud of",
    "start": "2361480",
    "end": "2367760"
  },
  {
    "text": "something that you know you it always makes you smile do you have a couple of those things I have a ton of fun",
    "start": "2367760",
    "end": "2372960"
  },
  {
    "text": "memories with swarm I I spent I think overall probably over three years",
    "start": "2372960",
    "end": "2378200"
  },
  {
    "text": "working working on that at first at first it was with my cooworker Victor VI",
    "start": "2378200",
    "end": "2383839"
  },
  {
    "text": "it was just the two of us at the very beginning and yeah a bunch of memories",
    "start": "2383839",
    "end": "2389000"
  },
  {
    "text": "like are going to all these conferences and meetups and getting like a ton of question and excitement like people were",
    "start": "2389000",
    "end": "2395319"
  },
  {
    "text": "excited because we were answering like a they had but I guess my fondest memory must be like 2016 when we introduced",
    "start": "2395319",
    "end": "2403640"
  },
  {
    "text": "Docker swarm and it was hard it was especially hard because we were trying to make something simple and to make it",
    "start": "2403640",
    "end": "2411599"
  },
  {
    "text": "simple you know we had to pull in every team working at Docker to to make it",
    "start": "2411599",
    "end": "2417839"
  },
  {
    "text": "happen so you know we wanted we had a few you know core goals for swarm one",
    "start": "2417839",
    "end": "2424400"
  },
  {
    "text": "was to be simple so with a bunch of help with br and consensus and stuff like that the other one was to be secure by",
    "start": "2424400",
    "end": "2431560"
  },
  {
    "text": "default so the the security team helped us a lot with you know Mutual TLS and",
    "start": "2431560",
    "end": "2437000"
  },
  {
    "text": "and things like that we needed a bunch of help from networking to do multi-os networking also suddenly everything that",
    "start": "2437000",
    "end": "2444240"
  },
  {
    "text": "used to work fine in single machine was completely broken like the volumes API",
    "start": "2444240",
    "end": "2449359"
  },
  {
    "text": "you know Docker volume create that cool works with one machine but now we need plugins or even the engine itself you",
    "start": "2449359",
    "end": "2456119"
  },
  {
    "text": "know since it could now it could optionally run an extra process like we had to to change it so we ended up",
    "start": "2456119",
    "end": "2463319"
  },
  {
    "text": "having like the entire company basically all the teams working in a way or",
    "start": "2463319",
    "end": "2468640"
  },
  {
    "text": "another inside the project and that was really really fun to see yeah nice oh I can imagine I mean Docker it was like",
    "start": "2468640",
    "end": "2476040"
  },
  {
    "text": "such a craze when it first came like the first couple of years and then there was like all these things like the EDI of",
    "start": "2476040",
    "end": "2482040"
  },
  {
    "text": "nature of like the various things that you mentioned and then swarm came along I remember that uh was a point where I",
    "start": "2482040",
    "end": "2487960"
  },
  {
    "text": "just I couldn't keep track of all the things that that were happening there was like so much from coming from the docker ecosystem that was quite the",
    "start": "2487960",
    "end": "2494520"
  },
  {
    "text": "sight to behold like even like on the receiving end was overwhelming just to see how many things were happening and",
    "start": "2494520",
    "end": "2500920"
  },
  {
    "text": "how quickly they were happening some very big challenges for sure is something that you would have done",
    "start": "2500920",
    "end": "2506280"
  },
  {
    "text": "differently knowing what you know today honestly I I don't think so I think we did what we did with the information we",
    "start": "2506280",
    "end": "2512480"
  },
  {
    "text": "had at the time and again I think like the ecosystem was entirely different back then you know like containers were",
    "start": "2512480",
    "end": "2518480"
  },
  {
    "text": "a shiny new thing people didn't know what to do with them and you know people were still running like VMS with like",
    "start": "2518480",
    "end": "2525560"
  },
  {
    "text": "shell scripts at boot time to kind of configure dependencies or cloning like hasn't changed much yeah but right",
    "start": "2525560",
    "end": "2533760"
  },
  {
    "text": "now it's kind of Niche to do that whereas before that was standard like by default like you would clone Amis you",
    "start": "2533760",
    "end": "2539960"
  },
  {
    "text": "know manage Amis there were actually a few Cool Tools from ashik of like Packer do you actually create like your Amis",
    "start": "2539960",
    "end": "2546760"
  },
  {
    "text": "with more programmatically but I think given the information we had like that's",
    "start": "2546760",
    "end": "2552079"
  },
  {
    "text": "the best we could do so I probably do exactly the same thing so as we prepare to wrap up what would you say is the",
    "start": "2552079",
    "end": "2560400"
  },
  {
    "text": "most important thing for for Tyler as he's considering whether to go Docker swarm or whether he should bite the",
    "start": "2560400",
    "end": "2567359"
  },
  {
    "text": "bullet and go for kubernetes what would you tell him I would say to teller to",
    "start": "2567359",
    "end": "2572640"
  },
  {
    "text": "look at your requirements and what you're trying to achieve and I would suggest to unless it's part you know you",
    "start": "2572640",
    "end": "2581400"
  },
  {
    "text": "have some special requirements I would strongly suggest to go towards a managed",
    "start": "2581400",
    "end": "2586480"
  },
  {
    "text": "service doesn't need to be kubernetes can be like ECS or Cloud run or Lambda",
    "start": "2586480",
    "end": "2592800"
  },
  {
    "text": "or depends on you know what kind of payloads you want to run but I would advise against you know running machines",
    "start": "2592800",
    "end": "2599480"
  },
  {
    "text": "and getting PID for machines I think in you know in 2022 now like there's there's no need to be to be page in the",
    "start": "2599480",
    "end": "2605720"
  },
  {
    "text": "middle of night because a machine one down so I would you know suggest yes to maybe if you find kubernetes to be a",
    "start": "2605720",
    "end": "2612319"
  },
  {
    "text": "little bit too hard to learn I would ask like what are you trying you know what kind of payload are you trying to run",
    "start": "2612319",
    "end": "2618319"
  },
  {
    "text": "and if it's a simple web service maybe you could consider like a Google Cloud run or you know fargate or you know",
    "start": "2618319",
    "end": "2627160"
  },
  {
    "text": "there's many other services than than kubernetes but the suggestion is the same is to look for something managed",
    "start": "2627160",
    "end": "2632280"
  },
  {
    "text": "and not to worry about machines that's a very good point and even if you have to use the platform as a service these days",
    "start": "2632280",
    "end": "2638400"
  },
  {
    "text": "whether it's Heroku whether it's fly iio whether it's something else it doesn't really matter you know maybe that's",
    "start": "2638400",
    "end": "2643880"
  },
  {
    "text": "enough maybe that's all you need if all you're trying to do is run some images and you have a database and that's about",
    "start": "2643880",
    "end": "2649280"
  },
  {
    "text": "it okay Andrea it's been an absolute pleasure talking to you thank you very much for joining me Tyler I hope this",
    "start": "2649280",
    "end": "2654839"
  },
  {
    "text": "was helpful for you and if you have any follow-up questions drop them in the comments there will be a lot of links in",
    "start": "2654839",
    "end": "2660960"
  },
  {
    "text": "the show notes uh enjoy some talks from 2015 2016 uh some slides from Andrea",
    "start": "2660960",
    "end": "2667720"
  },
  {
    "text": "some of them some of them are really really good by the way yeah see you around Tyler and thank you again very",
    "start": "2667720",
    "end": "2673040"
  },
  {
    "text": "much Andrea for joining me today thank you so much it's been a",
    "start": "2673040",
    "end": "2677599"
  },
  {
    "text": "pleasure thank you for tuning into another episode of shipit check out our other podcast for developers Chang",
    "start": "2678480",
    "end": "2685680"
  },
  {
    "text": "log.com slm you can connect with like B developers from all over the world our",
    "start": "2685680",
    "end": "2691640"
  },
  {
    "text": "ch.com community thank you fastly for the worldwide lowla",
    "start": "2691640",
    "end": "2697599"
  },
  {
    "text": "change.com our listeners love those blazing fast MP3s your Beats are awesome",
    "start": "2697599",
    "end": "2705160"
  },
  {
    "text": "break Master s that's it for this week see you all next week my last thing for",
    "start": "2705160",
    "end": "2710440"
  },
  {
    "text": "today is to mention that Andrea is the first guest in the history of shipit to",
    "start": "2710440",
    "end": "2715800"
  },
  {
    "text": "have two back-to-back episodes next week in episode 48 we'll talk with Andrea",
    "start": "2715800",
    "end": "2722440"
  },
  {
    "text": "Eric Sam and Solomon about launching dagger and what happened next it's going",
    "start": "2722440",
    "end": "2728440"
  },
  {
    "text": "to be",
    "start": "2728440",
    "end": "2730920"
  },
  {
    "text": "great",
    "start": "2734240",
    "end": "2737240"
  }
]