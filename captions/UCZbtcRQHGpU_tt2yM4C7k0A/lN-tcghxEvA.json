[
  {
    "text": "[Music] [Applause] [Music]",
    "start": "760",
    "end": "10390"
  },
  {
    "text": "what's up friends welcome back this is the change log we feature the hackers the leaders and the innovators behind",
    "start": "12280",
    "end": "19439"
  },
  {
    "text": "sver we're joined by predra gesy and Chris kicho two sver nerds that's what",
    "start": "19439",
    "end": "25199"
  },
  {
    "text": "Jared called them and they didn't get upset on today's show we explore the challenges and the ad advantages of",
    "start": "25199",
    "end": "30880"
  },
  {
    "text": "semantic versioning AKA sver we highlight the need for improved tooling around sver where semantic version",
    "start": "30880",
    "end": "38120"
  },
  {
    "text": "really shines and where it's needed how types can influence sver alternative approaches and whether or not there's a",
    "start": "38120",
    "end": "43719"
  },
  {
    "text": "better way and why it's not as simple is just opting out if you're a sver nerd",
    "start": "43719",
    "end": "48920"
  },
  {
    "text": "like predrag and Chris well this shows for you a massive thank you to our friends and our partners at",
    "start": "48920",
    "end": "56199"
  },
  {
    "text": "fly.io that is the home of Chang log.com with fly you can launch your app near",
    "start": "56199",
    "end": "61480"
  },
  {
    "text": "your users it's good to be near your users and they'll help you do it with no Ops learn more at",
    "start": "61480",
    "end": "68400"
  },
  {
    "text": "fly.io all right let's [Music]",
    "start": "68400",
    "end": "76200"
  },
  {
    "text": "sver what's up friends I'm here with a good friend of mine FAS abuka DJ FAS is",
    "start": "76200",
    "end": "81920"
  },
  {
    "text": "the founder and CEO of socket socket helps to protect some of the best engineering teams out there with their",
    "start": "81920",
    "end": "88439"
  },
  {
    "text": "developer First Security platform platform they protect your code from both vulnerable and malicious",
    "start": "88439",
    "end": "94240"
  },
  {
    "text": "dependencies so we've known each other for a while now for Ross well let's imagine somehow I've landed myself a",
    "start": "94240",
    "end": "100680"
  },
  {
    "text": "verell and because I'm a big fan of you I understand what socket is but I don't know how to explain it to anybody else",
    "start": "100680",
    "end": "106079"
  },
  {
    "text": "there I've I've brought you into a meeting we're considering socket because we want to secure dependencies we want to ship faster we want everything that",
    "start": "106079",
    "end": "113240"
  },
  {
    "text": "you promise from socket how do you explain socket to my team ever so yeah socket is a developer first security",
    "start": "113240",
    "end": "120399"
  },
  {
    "text": "platform that stops vulnerable and malicious open-source dependencies from",
    "start": "120399",
    "end": "125600"
  },
  {
    "text": "infiltrating your most critical apps so we do that by focusing on real threats",
    "start": "125600",
    "end": "130800"
  },
  {
    "text": "and keeping out all the types of risks that are out there in open source dependencies everything from malicious",
    "start": "130800",
    "end": "136959"
  },
  {
    "text": "dependencies typo squat attacks back doors risky dependencies dependencies with hidden Behavior there's all kinds",
    "start": "136959",
    "end": "143480"
  },
  {
    "text": "of risks out there a lot of reasons why a dependency might be bad news and",
    "start": "143480",
    "end": "148560"
  },
  {
    "text": "socket can help you as a developer just keep all that out of your app and keep things nice and clean and pristine",
    "start": "148560",
    "end": "153959"
  },
  {
    "text": "amongst your dependencies I saw recently Dracula I'm a fan of Dracula I don't",
    "start": "153959",
    "end": "159319"
  },
  {
    "text": "know about you but I love that theme big fan of zenoa and I saw there was like a misspelling there and so because Dracula",
    "start": "159319",
    "end": "166560"
  },
  {
    "text": "is installed on vs code and lots of different places I saw there was a typo squat sitting there that had different",
    "start": "166560",
    "end": "172599"
  },
  {
    "text": "intentions than obviously Dracula did is that an example of what you mean",
    "start": "172599",
    "end": "177920"
  },
  {
    "text": "absolutely yeah Dracula that's a perfect example it's super common these days to see that type of an attack where you see",
    "start": "177920",
    "end": "184400"
  },
  {
    "text": "a common dependency that you have an attacker just pretending to be that dependency typoing the name of it by one",
    "start": "184400",
    "end": "190400"
  },
  {
    "text": "letter and then trying to get unsuspecting developers to install it unfortunately we're seeing more and more of these types of attacks in the",
    "start": "190400",
    "end": "196680"
  },
  {
    "text": "community and they're taking advantage of the trust and open source as developers we need to be more aware of the dependencies we're using and make",
    "start": "196680",
    "end": "203319"
  },
  {
    "text": "sure that we're not pulling in anything that could risk the data of our users or cause you know a big breach at our",
    "start": "203319",
    "end": "209319"
  },
  {
    "text": "companies and so part of that is obviously being more careful and asking questions and looking more carefully at",
    "start": "209319",
    "end": "214799"
  },
  {
    "text": "the dependencies we use but also part of that is tooling it's it's really a hard problem to to solve just on your own as",
    "start": "214799",
    "end": "220319"
  },
  {
    "text": "a single developer and so bringing in a tool like socket can really help automate a lot of that work for you it",
    "start": "220319",
    "end": "225439"
  },
  {
    "text": "just sort of sits there in the background it's really really quiet it doesn't create a lot of noise but if you",
    "start": "225439",
    "end": "230519"
  },
  {
    "text": "were to pull in something that was back door or compromised in some way we would",
    "start": "230519",
    "end": "235920"
  },
  {
    "text": "jump into action right in the pr or right in the in your editor or even as early as as you browse the web we have a",
    "start": "235920",
    "end": "242159"
  },
  {
    "text": "a web extension that can actually give you information if you're looking at a package uh that that's dangerous or if",
    "start": "242159",
    "end": "247760"
  },
  {
    "text": "you're browsing you know stack Overflow and you see uh somebody saying hey just install this dependency to uh solve your",
    "start": "247760",
    "end": "254239"
  },
  {
    "text": "problems a lot of times even that can be a way to get the attacker's code onto your machine so socket jumps in at all",
    "start": "254239",
    "end": "259880"
  },
  {
    "text": "those different places and can tell you if if something is dangerous and stop you from from owning yourself yes don't",
    "start": "259880",
    "end": "266000"
  },
  {
    "text": "get yourself owned use socket check them out socket dodev big fan of you foros",
    "start": "266000",
    "end": "272160"
  },
  {
    "text": "big fan of what you're doing with socket proactive versus reactive to me is the",
    "start": "272160",
    "end": "277280"
  },
  {
    "text": "ultimate shift left for developers it is totally developer first check it out socket. deev install the GitHub app too",
    "start": "277280",
    "end": "284800"
  },
  {
    "text": "easy or book a demo once again socket dodev that's s.dev",
    "start": "284800",
    "end": "292120"
  },
  {
    "text": "[Music]",
    "start": "294580",
    "end": "315759"
  },
  {
    "text": "we're here with two awesome people that reached out via Twitter to talk about something goes back to our root sh the",
    "start": "316039",
    "end": "322840"
  },
  {
    "text": "very first episode of this podcast was sver technically right remember that",
    "start": "322840",
    "end": "328440"
  },
  {
    "text": "0.01 yes and then we got crap because 0.0.2 was not sver but we did it anyways so we're here",
    "start": "328440",
    "end": "336479"
  },
  {
    "text": "with predra gy and Chris kicho welcome to the change log thank you what do you",
    "start": "336479",
    "end": "341840"
  },
  {
    "text": "think about the fact that we sver or tried to our podcast episode Pretty Sweet right pretty we tried for like",
    "start": "341840",
    "end": "349000"
  },
  {
    "text": "30ish episodes I want to say like around 30 or 40 we decided nah it's not going to work anymore when were the breaking",
    "start": "349000",
    "end": "354400"
  },
  {
    "text": "changes that's the problem is it just wasn't as semantic as as as intended",
    "start": "354400",
    "end": "359800"
  },
  {
    "text": "every time you change formats it's a breaking change right if we apply rust rules then you know 0.0 dox every",
    "start": "359800",
    "end": "365800"
  },
  {
    "text": "release is a breaking change right every one is Major so that sounds good to me there you go technically before zero",
    "start": "365800",
    "end": "373160"
  },
  {
    "text": "before 1.0 you can do whatever you want and the versions are allowed to do whatever they say per the sver spec so",
    "start": "373160",
    "end": "378680"
  },
  {
    "text": "except in Rust yes and npm actually they both have opinions hey we just walked",
    "start": "378680",
    "end": "385400"
  },
  {
    "text": "right into what we're here to talk about that's right so we are here if you haven't read the title which I'm sure we'll have sver in there somewhere we",
    "start": "385400",
    "end": "391160"
  },
  {
    "text": "are here to talk about semantic versioning with two sver nerds I'll just call you all that you can take a if you",
    "start": "391160",
    "end": "397240"
  },
  {
    "text": "want not meant to be offended who have thought deeply on this topic Adam and I of course have thought uh shallowly I",
    "start": "397240",
    "end": "404120"
  },
  {
    "text": "would say no offense very shallow yeah yeah shallowly on the topic we know it we've lived with it we've seen its",
    "start": "404120",
    "end": "409680"
  },
  {
    "text": "failures and its successes but let's get to know you by way of sver so predi you",
    "start": "409680",
    "end": "414800"
  },
  {
    "text": "have been working with sver in the rust Community is that right yes so I'm the author of AOL called cargo sver which is",
    "start": "414800",
    "end": "422160"
  },
  {
    "text": "a linter for semantic versioning so when you're about to publish a new version of your package cargo sver can check its",
    "start": "422160",
    "end": "428560"
  },
  {
    "text": "API against the previous release and just make sure that everything's looking",
    "start": "428560",
    "end": "434319"
  },
  {
    "text": "good that you haven't made any breaking changes or that if you have made breaking changes the next release is",
    "start": "434319",
    "end": "439400"
  },
  {
    "text": "Major not minor so you're not going to break anyone in the ecosystem gotcha and Chris your work with sver is what",
    "start": "439400",
    "end": "446560"
  },
  {
    "text": "basically twofold one my biggest one was I spent a bunch of time I worked at",
    "start": "446560",
    "end": "452360"
  },
  {
    "text": "LinkedIn for about 5 years and one of the things I worked on was typescript adoption at LinkedIn LinkedIn is one of",
    "start": "452360",
    "end": "459440"
  },
  {
    "text": "the few big tech companies that instead of doing a big mono repo for all of its code does a bunch of small repos and",
    "start": "459440",
    "end": "466800"
  },
  {
    "text": "uses sver internally and so as we were looking at how do you adopt something",
    "start": "466800",
    "end": "473159"
  },
  {
    "text": "like typescript we wanted a really good handle on how is that going to intersect",
    "start": "473159",
    "end": "478479"
  },
  {
    "text": "with our our front-end web development ecosystem uh using emberjs and using a",
    "start": "478479",
    "end": "485159"
  },
  {
    "text": "bunch of repos using sver internally and then also externally and so I ended up",
    "start": "485159",
    "end": "491400"
  },
  {
    "text": "writing a spec which lives at s- ts.org for what does it mean to try to apply",
    "start": "491400",
    "end": "499280"
  },
  {
    "text": "sver to typescript among other things because typescript ships breaking changes in what the npm ecosystem thinks",
    "start": "499280",
    "end": "506039"
  },
  {
    "text": "of as minor releases and also because the type system of typescript and I'm",
    "start": "506039",
    "end": "511840"
  },
  {
    "text": "sure we'll get into more of this as we go but it complicates what it means to make a breaking change in really",
    "start": "511840",
    "end": "518719"
  },
  {
    "text": "interesting ways and that got me running down asking what does it mean if you",
    "start": "518719",
    "end": "524000"
  },
  {
    "text": "have things that borderline on you know fancy types that only show up in Haskell",
    "start": "524000",
    "end": "529839"
  },
  {
    "text": "or Idris otherwise affecting how your sver spec actually works and then I",
    "start": "529839",
    "end": "536800"
  },
  {
    "text": "recently gave a talk on this sub subject which is how prog and I ended up talking",
    "start": "536800",
    "end": "542640"
  },
  {
    "text": "with each other in which I looked at okay what is everybody doing what's the state of the art for how to handle",
    "start": "542640",
    "end": "550040"
  },
  {
    "text": "versioning whether you're in Ruby or node on kind of one end of the spectrum or whether you're in rust or Elm or when",
    "start": "550040",
    "end": "557480"
  },
  {
    "text": "you're out there doing crazy things and crazy in a very good way here like what the Unison programming language can do",
    "start": "557480",
    "end": "564680"
  },
  {
    "text": "and just tried to say here's kind of the range of options and here's where we might be able to go in the future by",
    "start": "564680",
    "end": "570920"
  },
  {
    "text": "pulling in new ideas in computer science research and and so on so I'm at least",
    "start": "570920",
    "end": "577120"
  },
  {
    "text": "as much like fredr and I are competing for who's the nerdiest onver here MH I",
    "start": "577120",
    "end": "583720"
  },
  {
    "text": "think I've gone fairly deep I'm I'm mostly focused on Rust and I also have done some prototyping on a similar sver",
    "start": "583720",
    "end": "590480"
  },
  {
    "text": "linter for python so I think I've gone deep and Chris has gone wide MH there",
    "start": "590480",
    "end": "595640"
  },
  {
    "text": "you go well if we were to stay shallow for another 2 or 3 minutes and got all of us on board with a foundation of what",
    "start": "595640",
    "end": "602600"
  },
  {
    "text": "semantic versioning is for the lay folk Chris you want to Define it for people",
    "start": "602600",
    "end": "608720"
  },
  {
    "text": "yeah the big idea is that versioning is a tool for communicating with the",
    "start": "608720",
    "end": "614480"
  },
  {
    "text": "consumers of your package your app whatever it may be and sver looked at",
    "start": "614480",
    "end": "620279"
  },
  {
    "text": "this problem over a decade ago and said there are a bunch of emergent ways that",
    "start": "620279",
    "end": "626920"
  },
  {
    "text": "the software ecosystem has come up with to kind of describe the the feel of",
    "start": "626920",
    "end": "631959"
  },
  {
    "text": "these changes over time it'd be great to give them names that we can all use to talk about them consistently and to give",
    "start": "631959",
    "end": "640240"
  },
  {
    "text": "those names some semantics and so semantic versioning where the names are",
    "start": "640240",
    "end": "645600"
  },
  {
    "text": "major minor and patch for the kind of typical number do number. number",
    "start": "645600",
    "end": "652079"
  },
  {
    "text": "versioning scheme that again emerged organically over the course of decades prior to that and so a patch version",
    "start": "652079",
    "end": "659320"
  },
  {
    "text": "means this has a bug fix in it and it's otherwise backwards compatible a minor",
    "start": "659320",
    "end": "664800"
  },
  {
    "text": "version means it might have bug fixes and it has some new feature and it's backwards compatible and a major version",
    "start": "664800",
    "end": "671839"
  },
  {
    "text": "means there are breaking changes in this there might also be features there might also be bug fixes and then there's",
    "start": "671839",
    "end": "678760"
  },
  {
    "text": "additional metadata you're allowed to tag on to the end like this is a pre-release version so 1.2.3",
    "start": "678760",
    "end": "684959"
  },
  {
    "text": "alpha. tells you it's an alpha release and you can stick build metad on the end or whatever else you want but the big",
    "start": "684959",
    "end": "691480"
  },
  {
    "text": "the big and important bit is that semantic notion of what major minor and",
    "start": "691480",
    "end": "697000"
  },
  {
    "text": "Patch mean and the shared vocabulary for talking about them and I think it's also",
    "start": "697000",
    "end": "702360"
  },
  {
    "text": "important to think about what sver means from a user's perspective because when I",
    "start": "702360",
    "end": "707440"
  },
  {
    "text": "maintain a tool and I have a few hundred dependencies I don't necessarily want to",
    "start": "707440",
    "end": "712800"
  },
  {
    "text": "look very closely at the various different version numbers and think about what they all mean but what I do",
    "start": "712800",
    "end": "717959"
  },
  {
    "text": "want to be able to do is say run cargo update inside my rust project and know",
    "start": "717959",
    "end": "723480"
  },
  {
    "text": "that because everyone adheres to what is a breaking change and when it gets published as major and not minor the",
    "start": "723480",
    "end": "730040"
  },
  {
    "text": "updates that cargo is going to make to my lock file are going to be backwards compatible they're going to result in me",
    "start": "730040",
    "end": "737440"
  },
  {
    "text": "still having a working building project at the end of that command and this is not specific to rust I could also do the",
    "start": "737440",
    "end": "743920"
  },
  {
    "text": "same thing for the npm ecosystem and typescript let's say I could do the same thing for python at the end of the day",
    "start": "743920",
    "end": "749639"
  },
  {
    "text": "as a consumer of sver I don't care about the numbers I don't care about the meanings I just want to not have to sign",
    "start": "749639",
    "end": "756920"
  },
  {
    "text": "myself up for fixing things that I did not intend to break right I ran a",
    "start": "756920",
    "end": "761959"
  },
  {
    "text": "command I wanted some new dependencies that are compatible with my build and I want that to be the case every time and",
    "start": "761959",
    "end": "768680"
  },
  {
    "text": "notionally you want that to have the same basic meaning even if you're jumping across ecosystems like bundler",
    "start": "768680",
    "end": "774279"
  },
  {
    "text": "and composer and npm and cargo and all of these can use the same basic language",
    "start": "774279",
    "end": "780600"
  },
  {
    "text": "and so your experience in principle we can talk about it in practice but in principle should be the same that you",
    "start": "780600",
    "end": "786600"
  },
  {
    "text": "can give a you know a specifier to your package manager and say look only give me minor bumps to this and I'll I'll",
    "start": "786600",
    "end": "793720"
  },
  {
    "text": "take new features if they come in and I'll take Patch versions for sure if they come in but don't give me any breaking changes and npm should be able",
    "start": "793720",
    "end": "801120"
  },
  {
    "text": "to say that and bundler should be able to say that and I as a user should be able to say okay cool this is going to",
    "start": "801120",
    "end": "807120"
  },
  {
    "text": "work the same basic way maybe I need to tweak the to syntax a little or think about a couple different things but it should translate across ecosystems more",
    "start": "807120",
    "end": "813920"
  },
  {
    "text": "or less and I love the choice of words there should be ominous I think we'll come back to that",
    "start": "813920",
    "end": "820720"
  },
  {
    "text": "yeah well me I think that's the big problem right go ahead Adam I was going to say like this might be like the biggest question I have for this whole",
    "start": "820720",
    "end": "826240"
  },
  {
    "text": "show and it might be just transcending all the topics but it's like is sver poorly adopted generally or poorly",
    "start": "826240",
    "end": "833600"
  },
  {
    "text": "misunderstood which makes it hard to fully adopt without pain cuz like I feel like that's kind of hard like I don't",
    "start": "833600",
    "end": "840000"
  },
  {
    "text": "fully get sver in all the ways there's a lot of y'all are sver nerds as Jared lovingly called you guys you know and so",
    "start": "840000",
    "end": "847320"
  },
  {
    "text": "there's a level of a depth level that you all understand sver that to me if I",
    "start": "847320",
    "end": "852800"
  },
  {
    "text": "eject and do my job and I come back in and sver matters I've forgotten all the",
    "start": "852800",
    "end": "858399"
  },
  {
    "text": "things and so I just wonder if there's like a lot of people like me and potentially Jared you Aspire like I do",
    "start": "858399",
    "end": "864399"
  },
  {
    "text": "with that same kind of thing is you you eject you do your job and you kind of come back and you're like reminding",
    "start": "864399",
    "end": "869480"
  },
  {
    "text": "yourself exactly all the implications of sber so is it is it poorly adopted and",
    "start": "869480",
    "end": "874920"
  },
  {
    "text": "then generally to adopt it and to use it it's hard because not everybody does it the same way I think it's a tooling",
    "start": "874920",
    "end": "881000"
  },
  {
    "text": "problem to be perfectly honest if any kind of Technology requires that you earn a PhD in it before you can be a",
    "start": "881000",
    "end": "887800"
  },
  {
    "text": "proficient user then it's not going to go very far right and the rules of sver",
    "start": "887800",
    "end": "892839"
  },
  {
    "text": "in Rust and typescript and python they are not obvious I mean I've been doing this for years and there's hardly a week",
    "start": "892839",
    "end": "900639"
  },
  {
    "text": "that goes by that I don't learn about a new horrifying way to accidentally cause a breaking change in a rust project in a",
    "start": "900639",
    "end": "907639"
  },
  {
    "text": "python project in a in a typescript project right so the fundamental problem here are that the rules are too complex",
    "start": "907639",
    "end": "915399"
  },
  {
    "text": "there's too many of them it's too easy to break them without noticing uh Chris and I have some fantastic examples of of",
    "start": "915399",
    "end": "922120"
  },
  {
    "text": "doing this in in Rus and typescript where the most innocuous seeming change",
    "start": "922120",
    "end": "927639"
  },
  {
    "text": "ends up being breaking for some reason that no sane human would ever think of",
    "start": "927639",
    "end": "932680"
  },
  {
    "text": "right so the real answer here is the tooling just needs to be good we can't keep all of these rules in our head and",
    "start": "932680",
    "end": "939440"
  },
  {
    "text": "we need tools to do that for us and so I authored one of these tools it's not perfect yet but it's getting better",
    "start": "939440",
    "end": "945839"
  },
  {
    "text": "every day and I think the name of the game is not to hold ourselves to an unreasonable standard of perfection and",
    "start": "945839",
    "end": "952120"
  },
  {
    "text": "just minimize the number of times that a developer publishes a change and then wakes up the next morning to 100 frust",
    "start": "952120",
    "end": "959240"
  },
  {
    "text": "users saying why did you break my project right because that's a regr change that happened right we want as",
    "start": "959240",
    "end": "966079"
  },
  {
    "text": "few of those as possible and maybe we get to zero one day I don't think we're there but I think that trying to get as",
    "start": "966079",
    "end": "972360"
  },
  {
    "text": "close as possible to zero is a valiant effort and I think we can make a solid dent in that I would say too like in a",
    "start": "972360",
    "end": "978199"
  },
  {
    "text": "in a multi-person project though you also have multiple people that can version or have implications into the",
    "start": "978199",
    "end": "984000"
  },
  {
    "text": "versioning and like who determines whether it is a bug fix or a break you",
    "start": "984000",
    "end": "989759"
  },
  {
    "text": "know like you don't always know either so you may unintentionally submit something to your",
    "start": "989759",
    "end": "995399"
  },
  {
    "text": "repository or make a change you know doing a release or somebody does a release for you all I mean there's a million different ways it could happen",
    "start": "995399",
    "end": "1002160"
  },
  {
    "text": "it seems like it's such a brittle process Frau with opportunity to fail I think that's right one of the things",
    "start": "1002160",
    "end": "1008920"
  },
  {
    "text": "that I dug into really deeply when I was talking about this at a conference month",
    "start": "1008920",
    "end": "1014199"
  },
  {
    "text": "and a half ago is exactly that Dynamic that what makes this difficult is those",
    "start": "1014199",
    "end": "1019680"
  },
  {
    "text": "semantics all sound good but the definition of a breaking change gets",
    "start": "1019680",
    "end": "1025160"
  },
  {
    "text": "fuzzy so there's a guy named hyam Wright who works or worked I'm not sure if he's still there at Google who coined a great",
    "start": "1025160",
    "end": "1032600"
  },
  {
    "text": "law called Ham's law and a co-worker of his put it up on the internet at I think it's hyams law.com and it says in",
    "start": "1032600",
    "end": "1041798"
  },
  {
    "text": "basically so many words given a sufficient number of users of any API",
    "start": "1041799",
    "end": "1047839"
  },
  {
    "text": "all observable behaviors of the system will be depended on by somebody and my observation is that the number of users",
    "start": "1047839",
    "end": "1055520"
  },
  {
    "text": "is like a few dozen it's not many and that can be used as an argument to say",
    "start": "1055520",
    "end": "1060960"
  },
  {
    "text": "sver doesn't count or is not sensible because anything you do can break",
    "start": "1060960",
    "end": "1066720"
  },
  {
    "text": "somebody and Bug fixes will probably break somebody this is actually the",
    "start": "1066720",
    "end": "1072080"
  },
  {
    "text": "reason that typescript the compiler ships what I would think of as breaking",
    "start": "1072080",
    "end": "1077640"
  },
  {
    "text": "changes in it's minor releases because their argument from a philosophical",
    "start": "1077640",
    "end": "1082720"
  },
  {
    "text": "point of view is any change you make to a compiler breaks someone so it's not sensible to have a discussion about what",
    "start": "1082720",
    "end": "1089200"
  },
  {
    "text": "a breaking change is or isn't now I don't actually agree with that but I do think it gets at something really",
    "start": "1089200",
    "end": "1096360"
  },
  {
    "text": "important which is that ultimately we're not dealing in something that's purely a",
    "start": "1096360",
    "end": "1101919"
  },
  {
    "text": "technical problem to be solved because ultimately again virging is about communication right it's about that",
    "start": "1101919",
    "end": "1108240"
  },
  {
    "text": "conversation you're trying to have with your end user often a conversation you're trying to keep as low bandwidth",
    "start": "1108240",
    "end": "1114200"
  },
  {
    "text": "as possible where they just see version number change what do I need to think about it before they even go digging",
    "start": "1114200",
    "end": "1119840"
  },
  {
    "text": "into your release notes so that they can say oh yeah this one should be safe let me try it bump worked cool great and I",
    "start": "1119840",
    "end": "1127200"
  },
  {
    "text": "move on with my day and so you have this tension of saying what's a bug if my bug",
    "start": "1127200",
    "end": "1133760"
  },
  {
    "text": "fix which is a real bug fix breaks my entire user base do I call it a bug fix",
    "start": "1133760",
    "end": "1139919"
  },
  {
    "text": "anymore and I think what that gets at is that you still need human judgment in",
    "start": "1139919",
    "end": "1145280"
  },
  {
    "text": "there and what you want is for the tool to catch all the cases which are",
    "start": "1145280",
    "end": "1150640"
  },
  {
    "text": "knowable so all the cases where you can say no for sure this is a breaking change you want the tool to tell you",
    "start": "1150640",
    "end": "1155880"
  },
  {
    "text": "that and then additionally you're going to have things on top of that which might also be breaking changes where",
    "start": "1155880",
    "end": "1163039"
  },
  {
    "text": "you're saying okay this thing might not be a breaking change in terms of you",
    "start": "1163039",
    "end": "1168520"
  },
  {
    "text": "know that ridiculous 10,000w spec I wrote about typescript or in terms of what cargo SE checks can catch today but",
    "start": "1168520",
    "end": "1176400"
  },
  {
    "text": "I'm looking at it and I'm saying this one's going to break 96% of my users I'm",
    "start": "1176400",
    "end": "1181640"
  },
  {
    "text": "going to go ahead and call it a breaking change because I'm the human in charge of this and I care about my users and I'm going to make that judgment call so",
    "start": "1181640",
    "end": "1189320"
  },
  {
    "text": "it's it's sort of a start with the the things you can prove or know",
    "start": "1189320",
    "end": "1195320"
  },
  {
    "text": "based on tooling and that eliminates a massive amount of the argument or",
    "start": "1195320",
    "end": "1201280"
  },
  {
    "text": "confusion in the space because you can just trust the tool to do it and then pull in the human judgment and say does",
    "start": "1201280",
    "end": "1207320"
  },
  {
    "text": "this bug fix feel like a breaking change okay then it is because again communication tool above all and this is",
    "start": "1207320",
    "end": "1214880"
  },
  {
    "text": "interesting because I think it's sort of the opposite of many other linters",
    "start": "1214880",
    "end": "1220159"
  },
  {
    "text": "where false negatives are actually okay not only are they okay they're going to happen no matter how we feel about them",
    "start": "1220159",
    "end": "1227600"
  },
  {
    "text": "right until we solve that pesky halting problem right like no sver Checker can catch",
    "start": "1227600",
    "end": "1233880"
  },
  {
    "text": "everything human judgment is always going to be necessary what we really strongly don't want is false positives",
    "start": "1233880",
    "end": "1240600"
  },
  {
    "text": "right the tool saying I found a breaking change where that is not the case so we",
    "start": "1240600",
    "end": "1246120"
  },
  {
    "text": "want our tools to be extremely confident when they report something and it's okay",
    "start": "1246120",
    "end": "1251159"
  },
  {
    "text": "if they don't catch everything and that's the approach that cargo sver takes that's the approach that my my",
    "start": "1251159",
    "end": "1256200"
  },
  {
    "text": "sver lter for python takes I just think think that's the correct approach and that's not always the right approach for",
    "start": "1256200",
    "end": "1261559"
  },
  {
    "text": "every flavor of linter right right sometimes the false positive is safer but here I I tend very strongly to agree",
    "start": "1261559",
    "end": "1268640"
  },
  {
    "text": "and a good example is like what Elm does Elm has a very conservative and fairly minimal approach to the way it thinks",
    "start": "1268640",
    "end": "1275360"
  },
  {
    "text": "about it it basically just looks at the the changes when you do something at a type level you know did this add a",
    "start": "1275360",
    "end": "1282240"
  },
  {
    "text": "parameter to the function did it remove one did it add or remove a a field on a data structure and very simple checks",
    "start": "1282240",
    "end": "1289279"
  },
  {
    "text": "like that and that's all it does but it does enforce that and you it's built into the package publishing flow and I",
    "start": "1289279",
    "end": "1295559"
  },
  {
    "text": "think that's great again it leaves room for the human judgment but it doesn't it it also sets a conservative Baseline",
    "start": "1295559",
    "end": "1301400"
  },
  {
    "text": "that's guaranteed to be accurate aund like it's never going to false positive you because any of those changes can be",
    "start": "1301400",
    "end": "1307520"
  },
  {
    "text": "statically known nope 100% you made this change that's going to that's going to",
    "start": "1307520",
    "end": "1312760"
  },
  {
    "text": "host somebody right [Music]",
    "start": "1312760",
    "end": "1324819"
  },
  {
    "text": "what's up friends I'm here in the breaks with David Shu founder and CEO at reto if you didn't know reto is the fastest",
    "start": "1326559",
    "end": "1333760"
  },
  {
    "text": "way to build internal software so David we're here to talk about retool I love retool you know that been a fan of yours",
    "start": "1333760",
    "end": "1340039"
  },
  {
    "text": "for years but I'm on the outside and you're clearly on the inside right you're on the inside right I think so",
    "start": "1340039",
    "end": "1346200"
  },
  {
    "text": "yeah I'd say So Okay cool so give given that you're on the inside and I'm not on the inside who is using retool and why",
    "start": "1346200",
    "end": "1354520"
  },
  {
    "text": "are they using retool yeah so the primary reason someone uses retool is typically they are a backend engineer",
    "start": "1354520",
    "end": "1361440"
  },
  {
    "text": "who's looking to build some sort of internal tool and it involves the front end and back in Engineers typically",
    "start": "1361440",
    "end": "1367200"
  },
  {
    "text": "don't care too much for the front end they might not know react Redux all that well and they say hey I just want to you",
    "start": "1367200",
    "end": "1372640"
  },
  {
    "text": "know simple button simple form on top of my database or API why is it so hard and so that's kind of the core concept",
    "start": "1372640",
    "end": "1378039"
  },
  {
    "text": "behind retool is frontend web development has gotten so difficult in the past 5 10 20 years it's so",
    "start": "1378039",
    "end": "1385760"
  },
  {
    "text": "complicated today put together a simple form with a submit button have to submit to an API you have to worry for example",
    "start": "1385760",
    "end": "1391960"
  },
  {
    "text": "about oh you know when you press a submit button you got to debounce it or if you got to disable it when it's you know is fetching is true and then when",
    "start": "1391960",
    "end": "1398360"
  },
  {
    "text": "comes back you got to enable the button again when there's an error you got to display the error message there's so much crap down with building a simple",
    "start": "1398360",
    "end": "1405240"
  },
  {
    "text": "form like that that R takes that all away and so really I think the core reason why someone would use R tool is",
    "start": "1405240",
    "end": "1410840"
  },
  {
    "text": "they just don't want to build any more internal tools I want to save some time yeah clearly the front end has gotten complex no doubt about that I think even",
    "start": "1410840",
    "end": "1417679"
  },
  {
    "text": "front Enders would agree with that sentiment and then you have backend folks that already have access to everything API Keys production database",
    "start": "1417679",
    "end": "1425679"
  },
  {
    "text": "servers whatever but then to just stand up retool to me seems like the next real",
    "start": "1425679",
    "end": "1431039"
  },
  {
    "text": "easy button because you can just remove the entire front end layer complexity",
    "start": "1431039",
    "end": "1436440"
  },
  {
    "text": "you're not trying to take it away you're just trying to augment it you're trying to give developers a given interface",
    "start": "1436440",
    "end": "1443200"
  },
  {
    "text": "that's retool build out your own admin your own View to a Google sheet or to",
    "start": "1443200",
    "end": "1448840"
  },
  {
    "text": "the production database all inside reto let reto be the front end to the already",
    "start": "1448840",
    "end": "1454440"
  },
  {
    "text": "existing back end is that about right yeah that is exactly right the way we",
    "start": "1454440",
    "end": "1460159"
  },
  {
    "text": "think about it is we want to abstract away things that a developer should not",
    "start": "1460159",
    "end": "1465760"
  },
  {
    "text": "need to focus on such that developer can focus on what is truly specific or unique to their business and so the",
    "start": "1465760",
    "end": "1471799"
  },
  {
    "text": "vision of what we want to build is something like an AWS actually where I think AWS really fundamentally",
    "start": "1471799",
    "end": "1478360"
  },
  {
    "text": "transformed the infrastructure layer Back in the Day Developers to spend all their time thinking about how do I go",
    "start": "1478360",
    "end": "1484000"
  },
  {
    "text": "rack servers how do I uh go manage cooling manage power supplies how do I upgrade my database without it going",
    "start": "1484000",
    "end": "1490720"
  },
  {
    "text": "down how do I change out the hard drive while still being online all these problems and they're not problems",
    "start": "1490720",
    "end": "1497000"
  },
  {
    "text": "anymore because nowadays when you want your database just go to RDS to press a few buttons and so what aw has did to",
    "start": "1497000",
    "end": "1502120"
  },
  {
    "text": "the infrastructure layer is what we want to do to the application layer specifically on the front end today and",
    "start": "1502120",
    "end": "1508240"
  },
  {
    "text": "for me that's pretty exciting because as a developer myself uh I'm not really honestly that interested for example in",
    "start": "1508240",
    "end": "1514960"
  },
  {
    "text": "managing infrastructure in a nuts and bolts way now I would much rather be like hey you know I want S3 bucket boom",
    "start": "1514960",
    "end": "1520279"
  },
  {
    "text": "there's an S3 bucket I want a database boom there's a database and similarly on the front end or on the in the application layer there is so much crap",
    "start": "1520279",
    "end": "1527559"
  },
  {
    "text": "people have to do do today when it comes to building a simple crud application it's like you know you probably have to install 10 15 maybe even 20 different",
    "start": "1527559",
    "end": "1534559"
  },
  {
    "text": "libraries you probably don't know what most of libraries do it's really complicated to load a simple form if you",
    "start": "1534559",
    "end": "1540240"
  },
  {
    "text": "know you're probably downloading almost like a megabyte or two of JavaScript it's so much crap to build a simple form",
    "start": "1540240",
    "end": "1546159"
  },
  {
    "text": "and so that's kind of the idea behind retool is could it be a lot simpler could we just make it so much faster",
    "start": "1546159",
    "end": "1551440"
  },
  {
    "text": "could you go from nothing to a form on top of your database or API in two minutes or we think so yeah I think so",
    "start": "1551440",
    "end": "1557279"
  },
  {
    "text": "too so listeners retool is built for scale it's built for Enterprise it's",
    "start": "1557279",
    "end": "1562840"
  },
  {
    "text": "built for everyone and retool is built for developers that's you you can self-host it you can run into cloud and",
    "start": "1562840",
    "end": "1569159"
  },
  {
    "text": "custom SSO audit log sock to type 2 Professional Services starting with retool is simple fast and of course it's",
    "start": "1569159",
    "end": "1576799"
  },
  {
    "text": "free if you want to try it right now so go to ret.com changelog that's re T",
    "start": "1576799",
    "end": "1584919"
  },
  {
    "text": "l.com SL changelog",
    "start": "1584919",
    "end": "1589600"
  },
  {
    "text": "let me make two somewhat contradictory statements which I both think are valid",
    "start": "1595960",
    "end": "1601320"
  },
  {
    "text": "the first one is that I have been a user of sver tooling for many years in",
    "start": "1601320",
    "end": "1607440"
  },
  {
    "text": "roughly three different sver oriented camps Ruby Elixir JavaScript as just an",
    "start": "1607440",
    "end": "1613080"
  },
  {
    "text": "application developer and roughly speaking and I know sver enough to",
    "start": "1613080",
    "end": "1618440"
  },
  {
    "text": "realize like major minor patch what should be safe what what should I che check blah blah blah blah I've rarely",
    "start": "1618440",
    "end": "1625120"
  },
  {
    "text": "been bitten by these problems as a user now you guys are at the library level and you're like the tooling level and so",
    "start": "1625120",
    "end": "1630760"
  },
  {
    "text": "so very generally the system isn't terrible like we're we're we are talking",
    "start": "1630760",
    "end": "1635840"
  },
  {
    "text": "about its downfalls and we are nitpicking and there are many ways that it breaks and the problem is we don't",
    "start": "1635840",
    "end": "1642360"
  },
  {
    "text": "even know we didn't know it broke until it's too late in fact we didn't think it was going to be a break and so we communicated wrong like these things all",
    "start": "1642360",
    "end": "1648480"
  },
  {
    "text": "issues and ones that we all bun up against in some places better than others but generally speaking I think",
    "start": "1648480",
    "end": "1654080"
  },
  {
    "text": "it's been somewhat of a win that being said with the tooling situation predi",
    "start": "1654080",
    "end": "1659799"
  },
  {
    "text": "that you're talking about and with our desire to constrain ourselves from miscommunicating are we finding the",
    "start": "1659799",
    "end": "1666720"
  },
  {
    "text": "local maximum right are we are we trying to polish a turd so to speak are we is",
    "start": "1666720",
    "end": "1673559"
  },
  {
    "text": "there ever a solution to this problem is it worth saying you know we can try to",
    "start": "1673559",
    "end": "1678760"
  },
  {
    "text": "clean up the world that we're living in or we can just invent a brand new world is there is sver just fundamentally",
    "start": "1678760",
    "end": "1684720"
  },
  {
    "text": "broken and we're not going to fix it and we could probably just do version in a different way some people just ignore it all together your thoughts uh I actually",
    "start": "1684720",
    "end": "1691640"
  },
  {
    "text": "have some some hard data to to share on this so about a year ago four enterprising college students and I",
    "start": "1691640",
    "end": "1698559"
  },
  {
    "text": "embarked on a journey to figure out how good the state of sver compliance is in the rust ecosystem now rust statically",
    "start": "1698559",
    "end": "1706000"
  },
  {
    "text": "compiled language you know biased toward systems you'd expect you know if anyone is very hardcore about adhering to sver",
    "start": "1706000",
    "end": "1713519"
  },
  {
    "text": "properly it should be rust right yeah for sure so what we did is we took the top 1,000 most downloaded rust libraries",
    "start": "1713519",
    "end": "1721919"
  },
  {
    "text": "right so these are extremely popular things like you know CI and Tokyo and things like that things that",
    "start": "1721919",
    "end": "1729200"
  },
  {
    "text": "multi-billion dollar companies depend on you know easily right and they're developed by some of the smartest most",
    "start": "1729200",
    "end": "1734960"
  },
  {
    "text": "experienced people in the ecosystem and we scanned ,000 of their releases total",
    "start": "1734960",
    "end": "1740279"
  },
  {
    "text": "we found that more than one in six of them has unintentionally shipped a samber violation that we could find and",
    "start": "1740279",
    "end": "1745640"
  },
  {
    "text": "we found that more than 3% of all releases contained at least one sver",
    "start": "1745640",
    "end": "1751440"
  },
  {
    "text": "violation that we could detect and could have prevented 3% of every release means",
    "start": "1751440",
    "end": "1756679"
  },
  {
    "text": "that on average if I run cargo update once every 10 days my project is broken once right like every you know 10 days",
    "start": "1756679",
    "end": "1764440"
  },
  {
    "text": "that I run cargo update I've updated one dependency that will introduce a breaking change now it's unclear whether",
    "start": "1764440",
    "end": "1771320"
  },
  {
    "text": "I did actually use the the part of the API that ended up being broken by that breaking change or not right so I might",
    "start": "1771320",
    "end": "1777720"
  },
  {
    "text": "get lucky and it might be okay but now let's think about this on a population time scale right there aren't 10 people",
    "start": "1777720",
    "end": "1783279"
  },
  {
    "text": "depending on these libraries right when these breaking changes happen they break",
    "start": "1783279",
    "end": "1788880"
  },
  {
    "text": "the entire ecosystem and so thousands of people have to spend their time figuring out",
    "start": "1788880",
    "end": "1794200"
  },
  {
    "text": "why the heck the build is red all of a sudden and then maintainers on the other side have to all of a sudden in an",
    "start": "1794200",
    "end": "1801320"
  },
  {
    "text": "unscheduled highly stressful highly highly charged environment publish an emergency patch that either undo the",
    "start": "1801320",
    "end": "1807960"
  },
  {
    "text": "thing or whatever it was imagine if it was bundled with a security fix now all of a sudden the pressure is even worse",
    "start": "1807960",
    "end": "1814679"
  },
  {
    "text": "right so as a user when I run cargo update I don't want to be broken as a maintainer when I run cargo publish I",
    "start": "1814679",
    "end": "1821399"
  },
  {
    "text": "don't want to break people as a member of this ecosystem I want the people that",
    "start": "1821399",
    "end": "1826919"
  },
  {
    "text": "don't have a lot of time in their hands to not spend their time pointlessly fighting Tooling in one way or another I",
    "start": "1826919",
    "end": "1834159"
  },
  {
    "text": "want all of the maintainers of all of the libraries that I depend on to not have to worry about were they broken or were they going to break somebody so the",
    "start": "1834159",
    "end": "1842039"
  },
  {
    "text": "the thing here that we're talking about you know sounds like a small effect 3% yeah whatever rounding error maybe it's",
    "start": "1842039",
    "end": "1847799"
  },
  {
    "text": "okay but the thing is that it adds up these little bits of friction here and there they really add up when you",
    "start": "1847799",
    "end": "1854039"
  },
  {
    "text": "consider the large population and the longtime Horizon of these projects and how many times you know these projects",
    "start": "1854039",
    "end": "1860440"
  },
  {
    "text": "get downloaded and used every week right so even though the individual impact on",
    "start": "1860440",
    "end": "1865679"
  },
  {
    "text": "a single person's day is probably next to zero multiply that out to the number",
    "start": "1865679",
    "end": "1870840"
  },
  {
    "text": "of people that depend on that software and all of a sudden the impact is pretty darn significant okay so you're saying it's not good enough as is and tooling",
    "start": "1870840",
    "end": "1878440"
  },
  {
    "text": "can improve can it get us into a from 3% down to a minuscule fraction in which we",
    "start": "1878440",
    "end": "1885559"
  },
  {
    "text": "can live with this Chris your thoughts on that I think the answer is yes and one of the reasons that I'm more bullish",
    "start": "1885559",
    "end": "1892000"
  },
  {
    "text": "on sticking with sver and putting tooling around it is because I did survey the rest of the the world as it",
    "start": "1892000",
    "end": "1898159"
  },
  {
    "text": "were when it comes to versioning and there are a lot of approaches that just say ah these problems with sver are",
    "start": "1898159",
    "end": "1904480"
  },
  {
    "text": "fundamental scrap it uh one of them solo ver is just have one version number it's",
    "start": "1904480",
    "end": "1910799"
  },
  {
    "text": "one two three Etc just go up and that has a certain appeal to it but the",
    "start": "1910799",
    "end": "1917320"
  },
  {
    "text": "actual fundamental issue there hasn't changed all it does is take the burden",
    "start": "1917320",
    "end": "1923159"
  },
  {
    "text": "off of the maintainer of a library and put it on all of the users it says okay",
    "start": "1923159",
    "end": "1928679"
  },
  {
    "text": "now you're responsible anytime any one of your dependencies changes including transitively anywhere in your dependency",
    "start": "1928679",
    "end": "1934639"
  },
  {
    "text": "tree to go read the the release notes which tend to encode things like breaking changes in the release notes",
    "start": "1934639",
    "end": "1941320"
  },
  {
    "text": "because again communication problem right we want to know what what did this do and so also as an aside all of those",
    "start": "1941320",
    "end": "1949840"
  },
  {
    "text": "proposals include things like well you can also stick like pre-release numbers on the end and I'm like but what hold on",
    "start": "1949840",
    "end": "1956240"
  },
  {
    "text": "hold on seems kind of like we're backing our way back toward this whole sver thing now aren't we shouldn't your pre-release just be another",
    "start": "1956240",
    "end": "1963279"
  },
  {
    "text": "number I think there is a sense in which there is a maybe fundamental local",
    "start": "1963279",
    "end": "1971200"
  },
  {
    "text": "maximum like maybe maybe it's local but the Hill's so big that we're not going to find a different path could be wrong",
    "start": "1971200",
    "end": "1978399"
  },
  {
    "text": "about that but when I go looking around the things that seem like they might",
    "start": "1978399",
    "end": "1984840"
  },
  {
    "text": "change the calculus here don't so much eliminate the value of sver as they do",
    "start": "1984840",
    "end": "1992120"
  },
  {
    "text": "build on it so a good example here is what the Unison programming language does pretty small language but it is",
    "start": "1992120",
    "end": "1999399"
  },
  {
    "text": "aimed at industry it's not pure research and they do something that's really",
    "start": "1999399",
    "end": "2005159"
  },
  {
    "text": "wacky in the best way you don't store your code as plain text instead they",
    "start": "2005159",
    "end": "2012080"
  },
  {
    "text": "take advantage of the fact that they're a pure functional programming language with really wellp specified semantics",
    "start": "2012080",
    "end": "2017399"
  },
  {
    "text": "and they say okay we can take your code normalize it hash it and store the",
    "start": "2017399",
    "end": "2023440"
  },
  {
    "text": "compiled output of it with a pointer to it which means a whole bunch of interesting things but for the purposes",
    "start": "2023440",
    "end": "2030760"
  },
  {
    "text": "of versioning means when I make it breaking change the original version is still there because that hashed compile",
    "start": "2030760",
    "end": "2037919"
  },
  {
    "text": "version of it got committed to a database instead of to plain text and that database version is what anybody",
    "start": "2037919",
    "end": "2043559"
  },
  {
    "text": "who depends on it sees so when I add a new parameter to my function the consumers are still pointing to the old",
    "start": "2043559",
    "end": "2050280"
  },
  {
    "text": "function which means they can pull this update and say okay I can progressively",
    "start": "2050280",
    "end": "2055358"
  },
  {
    "text": "switch over to the new function signature but I can do that at will and the two can live next to each other and",
    "start": "2055359",
    "end": "2060638"
  },
  {
    "text": "because it is a pure functional programming language with no side effects that aren't managed off in the",
    "start": "2060639",
    "end": "2066398"
  },
  {
    "text": "runtime etc etc you know leave all that aside suffice it to say because of that choice they can just quote unquote ship",
    "start": "2066399",
    "end": "2074720"
  },
  {
    "text": "a breaking change without it ever breaking anyone the reason you still want sver here though is because sver is",
    "start": "2074720",
    "end": "2081320"
  },
  {
    "text": "a communication tool and so sver lets you say okay there are these new",
    "start": "2081320",
    "end": "2086358"
  },
  {
    "text": "features in the library here's a bug fix you're going to want this one and even though that means you need to actually",
    "start": "2086359",
    "end": "2092079"
  },
  {
    "text": "go update which compiled version of this function you're pointing to you're getting data from that and when you go",
    "start": "2092079",
    "end": "2098359"
  },
  {
    "text": "to publish your library you want to be able to use that information even knowing that it's not going to break",
    "start": "2098359",
    "end": "2104720"
  },
  {
    "text": "your users in the same way it does let you then say oh I didn't actually mean to make a breaking change here I I",
    "start": "2104720",
    "end": "2112119"
  },
  {
    "text": "wanted this to be compatible and to just keep working forward so things like that I think are",
    "start": "2112119",
    "end": "2118960"
  },
  {
    "text": "Pointers in the right direction there's also a couple papers out there from Folks at the Nova University of Lisbon",
    "start": "2118960",
    "end": "2126640"
  },
  {
    "text": "who are asking like what happens if you bake versions as types into Java Java",
    "start": "2126640",
    "end": "2132280"
  },
  {
    "text": "because it's the kind of default language to do this kind of research on their proposal is very interesting from",
    "start": "2132280",
    "end": "2138640"
  },
  {
    "text": "a type theoretic and versioning perspective and would never get adopted in industry in a million years because",
    "start": "2138640",
    "end": "2144000"
  },
  {
    "text": "it's just way too much boilerplate but it does the same thing we're talking about it bakes this notion of backwards",
    "start": "2144000",
    "end": "2152319"
  },
  {
    "text": "compatibility in in a way that I think would if you were going to actually ship something like that in an industrial",
    "start": "2152319",
    "end": "2158720"
  },
  {
    "text": "programming language you would actually want sver as basically how you do it and",
    "start": "2158720",
    "end": "2164720"
  },
  {
    "text": "their type system that they slap on top of java effectively encode sver with",
    "start": "2164720",
    "end": "2170560"
  },
  {
    "text": "keywords it's like upgrades and replaces and things like that so I think there's",
    "start": "2170560",
    "end": "2177160"
  },
  {
    "text": "work to be done here but I don't think it's going to be in the near term for one so we're going to need the tooling",
    "start": "2177160",
    "end": "2183520"
  },
  {
    "text": "and even if and when we see something like that type system on top of java or what Unison is doing becoming more",
    "start": "2183520",
    "end": "2191119"
  },
  {
    "text": "widespread I think those kinds of things lower the risks in really interesting and important ways but they would still",
    "start": "2191119",
    "end": "2200040"
  },
  {
    "text": "really benefit from the kinds of tooling that we're talking about they also though highlight I think one of the",
    "start": "2200040",
    "end": "2207319"
  },
  {
    "text": "things that's easy to miss in these kinds of discussions which is a lot of times people like me who are type Theory",
    "start": "2207319",
    "end": "2215000"
  },
  {
    "text": "nerds Etc like to go looking for that kind of a solution to a problem it has",
    "start": "2215000",
    "end": "2220200"
  },
  {
    "text": "two limitations one is that's never going to work for Ruby I say never but",
    "start": "2220200",
    "end": "2226440"
  },
  {
    "text": "like you could imagine a world in which type adoption for Ruby is at 100% but that world seems very unlikely to me not",
    "start": "2226440",
    "end": "2233240"
  },
  {
    "text": "least because a lot of people who love Ruby love it because it's dynamically typed and second doing all of those",
    "start": "2233240",
    "end": "2241280"
  },
  {
    "text": "things purely at that like let's bake it into the type system level has costs",
    "start": "2241280",
    "end": "2246319"
  },
  {
    "text": "because it turns out that that itself then becomes a thing that you need to think about in terms of the versioning",
    "start": "2246319",
    "end": "2251520"
  },
  {
    "text": "of your language because one of the things that shows up is that the more foundational whatever your tool is like",
    "start": "2251520",
    "end": "2258359"
  },
  {
    "text": "if you're an app and you just have consumers it's not that big of a deal your versioning is basically purely",
    "start": "2258359",
    "end": "2263800"
  },
  {
    "text": "marketing if you're a library you have a bunch of apps that use you and maybe some other libraries if you're a framework that everybody else Builds on",
    "start": "2263800",
    "end": "2271000"
  },
  {
    "text": "how well you do this now affects everybody else in the entire ecosystem if you're programming language you're",
    "start": "2271000",
    "end": "2276839"
  },
  {
    "text": "kind of doing at the maximum level and you still have to communicate those versioning constraints to other people",
    "start": "2276839",
    "end": "2282240"
  },
  {
    "text": "and the more complicated your type system is the harder it is to actually",
    "start": "2282240",
    "end": "2287760"
  },
  {
    "text": "understand what the implications are for versioning so the tendency that people like me have to say ah bake it into the",
    "start": "2287760",
    "end": "2293680"
  },
  {
    "text": "types then it'll be rigorous and checked forever can actually undermine your net goals here because now you've made it",
    "start": "2293680",
    "end": "2300160"
  },
  {
    "text": "harder to think about this fundamental communication problem and this is an area where Chris and I had a had an",
    "start": "2300160",
    "end": "2306440"
  },
  {
    "text": "interesting discussion that made us feel like it this would be a good podcast topic I agree with him that building",
    "start": "2306440",
    "end": "2313160"
  },
  {
    "text": "versioning into the type system of a language like Ruby or python is not the way to go here but that doesn't mean",
    "start": "2313160",
    "end": "2319000"
  },
  {
    "text": "that we can't build sber tooling for dynamic languages and in fact I've built",
    "start": "2319000",
    "end": "2324720"
  },
  {
    "text": "a python semantic versioning linter that's in closed beta with a few friends right now but if someone listening to",
    "start": "2324720",
    "end": "2331040"
  },
  {
    "text": "this wants access uh find me on social media I'm I'm very happy to to send it your way the core idea is that",
    "start": "2331040",
    "end": "2338040"
  },
  {
    "text": "when we as programmers look at a piece of code and a change to that code we",
    "start": "2338040",
    "end": "2343160"
  },
  {
    "text": "have a set of rules and heris that we run in our minds to determine if something is breaking right a public",
    "start": "2343160",
    "end": "2348960"
  },
  {
    "text": "function got deleted a function signature changed now it takes a different number of arguments a default",
    "start": "2348960",
    "end": "2354560"
  },
  {
    "text": "got you know went away from somewhere there's nothing stopping us from encoding those rules in a machine",
    "start": "2354560",
    "end": "2360880"
  },
  {
    "text": "checkable way and just have the computer go through that checklist and make sure",
    "start": "2360880",
    "end": "2366560"
  },
  {
    "text": "that we didn't mess any up right now this tool isn't doing anything differently to what we were doing and if",
    "start": "2366560",
    "end": "2373000"
  },
  {
    "text": "it finds nothing and we find nothing then great just chip it as a minor and everything's fine but on the off chance",
    "start": "2373000",
    "end": "2379520"
  },
  {
    "text": "that we haven't had our caffeine that day or we're just tired or you know we",
    "start": "2379520",
    "end": "2384839"
  },
  {
    "text": "have something else going on in our mind and we miss one of those things and the tool catches it that's just pure win",
    "start": "2384839",
    "end": "2391839"
  },
  {
    "text": "right so it's those cases that I'm very interested in catching with tools it's fine they're never going to be perfect",
    "start": "2391839",
    "end": "2397440"
  },
  {
    "text": "I'm not perfect either I'm just very interested in finding the spaces where my imperfections and the tools",
    "start": "2397440",
    "end": "2403520"
  },
  {
    "text": "imperfections happen to not overlaps that at least one of us catches it mhm I",
    "start": "2403520",
    "end": "2408800"
  },
  {
    "text": "mean I like that because it's pragmatic and because it seems achievable I mean it's just work it's probably hard work",
    "start": "2408800",
    "end": "2415040"
  },
  {
    "text": "and I'm glad you put some of that work in but it's really like taking that 3% which is probably a high water mark",
    "start": "2415040",
    "end": "2420119"
  },
  {
    "text": "considering it's the rust ecosystem it's probably a much higher percent in other places it's actually much higher in Rust",
    "start": "2420119",
    "end": "2425920"
  },
  {
    "text": "as well because those are just the issues that we found by running the tool if you use that the tool the 3% goes to",
    "start": "2425920",
    "end": "2432960"
  },
  {
    "text": "zero because the tool would have caught all of that and prevented it right so that number could only grow even in Rust",
    "start": "2432960",
    "end": "2438839"
  },
  {
    "text": "because the tool gets better every day so how comprehensive is the tool like are you do you have like a set number of",
    "start": "2438839",
    "end": "2444560"
  },
  {
    "text": "things you're checking and you're just adding to that constantly how's it work absolutely so we have about 80 lenss right now so that means there are 80",
    "start": "2444560",
    "end": "2451839"
  },
  {
    "text": "flavors of breaking changes for which if they happen we could construct a program",
    "start": "2451839",
    "end": "2457440"
  },
  {
    "text": "that gets broken by that breaking chain so we could constructively prove that something bad happened either that",
    "start": "2457440",
    "end": "2463280"
  },
  {
    "text": "program doesn't compile anymore or it triggers undefined Behavior so it would be caught by Miri rust's undefined",
    "start": "2463280",
    "end": "2469119"
  },
  {
    "text": "Behavior scanner or something like that so something very obviously goes wrong based on the thing that we found and we",
    "start": "2469119",
    "end": "2475480"
  },
  {
    "text": "can offer constructive proof of that I also have a list in an issue on the",
    "start": "2475480",
    "end": "2480680"
  },
  {
    "text": "Project's GitHub of like 150 more things that we should catch that we don't catch",
    "start": "2480680",
    "end": "2486119"
  },
  {
    "text": "yet and on a fairly regular basis new contributors to the project come in and",
    "start": "2486119",
    "end": "2491359"
  },
  {
    "text": "they go ah this bit me last week I'm going to check this thing off the list and they come in they write a lint they",
    "start": "2491359",
    "end": "2498000"
  },
  {
    "text": "open up a request we merge it and the next release that problem is never going to be a problem for them or for anyone",
    "start": "2498000",
    "end": "2504079"
  },
  {
    "text": "else ever again so long as they remember to run the tool in CI before publishing or on their local machine if that's how",
    "start": "2504079",
    "end": "2510240"
  },
  {
    "text": "they publish so it's it's more of a never again kind of a tool and not",
    "start": "2510240",
    "end": "2516200"
  },
  {
    "text": "really a perfectionist IC idealistic sort of approach yeah exactly yeah yeah",
    "start": "2516200",
    "end": "2521359"
  },
  {
    "text": "I love it so that's that's that knocks off rust though and you got something you're working on in Python but of",
    "start": "2521359",
    "end": "2527440"
  },
  {
    "text": "course there are many programming languages extent and many ecosystems so",
    "start": "2527440",
    "end": "2532960"
  },
  {
    "text": "some of which nominally do sver I mean there's all the ones that just don't do it I mean that's that's the other thing",
    "start": "2532960",
    "end": "2538000"
  },
  {
    "text": "with first of all you have to buy in sver but then also the communication of like how you do sver forget the tooling",
    "start": "2538000",
    "end": "2544960"
  },
  {
    "text": "just like I'm sure there's different ideas of what sver is even in the minds of of one person probably but you know",
    "start": "2544960",
    "end": "2551119"
  },
  {
    "text": "what I'm saying like yeah we do sver except for for the majors because we want to have a marketing opportunity and so we don't we throw it out the window",
    "start": "2551119",
    "end": "2556960"
  },
  {
    "text": "when it comes time to like Mark it because that's a communication problem as well and one that many people dislike sver because of right they can't Market",
    "start": "2556960",
    "end": "2563559"
  },
  {
    "text": "they're big they big releases I actually think that is the biggest unsolved week point of sver like more than the",
    "start": "2563559",
    "end": "2571359"
  },
  {
    "text": "philosophical what is a bug fix problem because that one's really one that we can just agree kind of make a definition",
    "start": "2571359",
    "end": "2578640"
  },
  {
    "text": "make a contract and run with it everybody can get on the same page maybe I don't like the contract you picked but",
    "start": "2578640",
    "end": "2583760"
  },
  {
    "text": "I can at least understand it and follow it the the fact that versions are also a",
    "start": "2583760",
    "end": "2589680"
  },
  {
    "text": "tool for marketing makes it very difficult for projects which do sver and also do",
    "start": "2589680",
    "end": "2596599"
  },
  {
    "text": "breaking changes to figure out how to use their marketing now rust itself as a",
    "start": "2596599",
    "end": "2603440"
  },
  {
    "text": "language has just said oh we'll never ship a breaking change problem solved we'll we'll Marketing in entirely other",
    "start": "2603440",
    "end": "2609079"
  },
  {
    "text": "ways uh emberjs famously is like the most sver project ever and has struggled",
    "start": "2609079",
    "end": "2616720"
  },
  {
    "text": "enormously with this because the JavaScript Community looks at Big releases and thinks ah this is emberjs 5",
    "start": "2616720",
    "end": "2624240"
  },
  {
    "text": "or emberjs 6 coming up in however many months from now sweet big breaking big",
    "start": "2624240",
    "end": "2629960"
  },
  {
    "text": "cool features because when you look at react 19 you get a bunch of cool features with it a ton of stuff and some",
    "start": "2629960",
    "end": "2635960"
  },
  {
    "text": "breaking behaviors that they you know slowly built up to over the course of the eight react 18 life cycle but then",
    "start": "2635960",
    "end": "2643480"
  },
  {
    "text": "you get to Ember five and it says no new features and you say I'm sorry what because Ember says no the only thing we",
    "start": "2643480",
    "end": "2650520"
  },
  {
    "text": "use major versions for is removing deprecated code and in some ways that's very powerful because it means that you",
    "start": "2650520",
    "end": "2657960"
  },
  {
    "text": "can think about how you schedule in updating to minor releases updating to",
    "start": "2657960",
    "end": "2663079"
  },
  {
    "text": "long-term support minor releases and then okay if an ember releas comes every 18 months I can just Brack it in I need",
    "start": "2663079",
    "end": "2671160"
  },
  {
    "text": "to have these deprecations cleaned up by time x whatever that ends up being",
    "start": "2671160",
    "end": "2676599"
  },
  {
    "text": "that's really powerful and you also know that you're not coupled to the existence of this new",
    "start": "2676599",
    "end": "2683720"
  },
  {
    "text": "features for I have to get through these breaking changes first that's great but how do you tell that story and I I would",
    "start": "2683720",
    "end": "2690640"
  },
  {
    "text": "put it as a former Ember framework Court team member who thought about this a bunch we never figured it out like Ember",
    "start": "2690640",
    "end": "2696599"
  },
  {
    "text": "tried to use additions to do this which is similar to rust's notion of additions",
    "start": "2696599",
    "end": "2701839"
  },
  {
    "text": "it's just kind of big everything comes together at a point in time we've updated all the documentation all the",
    "start": "2701839",
    "end": "2706960"
  },
  {
    "text": "apis are coherent everything is in a place where we've made this really significant change to the ecosystem it's",
    "start": "2706960",
    "end": "2713800"
  },
  {
    "text": "a good idea that in in the Ember case I don't think has worked I think it has sort of worked in rust's case because it",
    "start": "2713800",
    "end": "2720359"
  },
  {
    "text": "comes with other trade-offs around being able to make changes to the surface syntax of the language that are opt in",
    "start": "2720359",
    "end": "2726640"
  },
  {
    "text": "but breing and backwards compatible that's that's a whole different podcast and a different discussion super cool worth talking about but I don't think we",
    "start": "2726640",
    "end": "2734079"
  },
  {
    "text": "have a solution for this particular Dynamic of how do if we're going to sver",
    "start": "2734079",
    "end": "2739559"
  },
  {
    "text": "seriously how do we communicate here's a big marketing moment Ember editions is I",
    "start": "2739559",
    "end": "2747000"
  },
  {
    "text": "think a step in the right direction there but I've sometimes wondered if we",
    "start": "2747000",
    "end": "2752200"
  },
  {
    "text": "don't need like marketing version as just a totally different thing mhm and I",
    "start": "2752200",
    "end": "2757280"
  },
  {
    "text": "think that's what additions points at but I I don't know I think it might also",
    "start": "2757280",
    "end": "2762920"
  },
  {
    "text": "be a matter of seeing somebody with enough scale try it because Ember is very small has a lot of great things",
    "start": "2762920",
    "end": "2769599"
  },
  {
    "text": "going for it but you know if you're two% 4% whatever of the broader JavaScript",
    "start": "2769599",
    "end": "2775920"
  },
  {
    "text": "ecosystem trying that kind of thing whereas if react did it and did it that way I think it might stick more in",
    "start": "2775920",
    "end": "2783800"
  },
  {
    "text": "people's minds of oh this is how this works now I don't expect expect the Rea Community to try that but it's you could",
    "start": "2783800",
    "end": "2789480"
  },
  {
    "text": "imagine that a bigger project might be able to influence the way people think about versioning more effectively by",
    "start": "2789480",
    "end": "2794880"
  },
  {
    "text": "taking that swing but it might just also not work and we'd have to try something else I also have a maybe strange idea",
    "start": "2794880",
    "end": "2801839"
  },
  {
    "text": "for for how to maybe fix this what if we made breaking changes not actually require major versions and still adhere",
    "start": "2801839",
    "end": "2809000"
  },
  {
    "text": "to December so we could actually Reserve major versions for marketing only crazy",
    "start": "2809000",
    "end": "2814920"
  },
  {
    "text": "I know hear me out and just to be clear I am not planning on building this until",
    "start": "2814920",
    "end": "2820599"
  },
  {
    "text": "there is a lot more funding flowing to Cargo sver checks and the other projects I'm working on but it is a genuine idea",
    "start": "2820599",
    "end": "2827160"
  },
  {
    "text": "that I think could work imagine that we could detect with very good confidence",
    "start": "2827160",
    "end": "2833640"
  },
  {
    "text": "breaking changes in a mechanical fashion and based on the change that we see",
    "start": "2833640",
    "end": "2839800"
  },
  {
    "text": "right like this argument is now necessary in functions as opposed to previously we could pick up a default",
    "start": "2839800",
    "end": "2846280"
  },
  {
    "text": "whatever if we could generate codee mods rules for how to change code so that it's",
    "start": "2846280",
    "end": "2852000"
  },
  {
    "text": "compliant in the new version and preserves the behavior of the old version right where when I run cargo",
    "start": "2852000",
    "end": "2859640"
  },
  {
    "text": "update or uh you know the equivalent and npm or pip or poetry or whatever in",
    "start": "2859640",
    "end": "2865760"
  },
  {
    "text": "addition to picking up the new version it also goes in and tweaks my uses of the code that it updated dependencies",
    "start": "2865760",
    "end": "2871640"
  },
  {
    "text": "for so that I'm no longer broken right this still satisfies my objective of the",
    "start": "2871640",
    "end": "2876839"
  },
  {
    "text": "the build is still green before and after right and there was a breaking change in the API but that breaking",
    "start": "2876839",
    "end": "2883720"
  },
  {
    "text": "change only affects me the next time I write a piece of code that uses that API",
    "start": "2883720",
    "end": "2889240"
  },
  {
    "text": "and not any of the existing uses right so in my book if you ship code mods that",
    "start": "2889240",
    "end": "2895079"
  },
  {
    "text": "are of sufficient quality for all of the changes that are breaking that does not necessitate a major change toere DEC",
    "start": "2895079",
    "end": "2902720"
  },
  {
    "text": "right because no Human Action was involved in making that change that just completely mechanical right and at that",
    "start": "2902720",
    "end": "2909760"
  },
  {
    "text": "point we can say major versions are for marketing and everything else can be minor now obviously this requires a",
    "start": "2909760",
    "end": "2916119"
  },
  {
    "text": "bunch of tooling and infrastructure that we don't have and tooling and infrastructure that I would love to build if someone wants to send a lot of",
    "start": "2916119",
    "end": "2922920"
  },
  {
    "text": "money to my GitHub sponsors page um but I think it's a viable future that we could have that solves both this problem",
    "start": "2922920",
    "end": "2930440"
  },
  {
    "text": "and a lot of ergonomics and usability problems of sver as well yeah that's interesting it's a cool idea very much",
    "start": "2930440",
    "end": "2937160"
  },
  {
    "text": "feels like a boil of the ocean kind of a thing that's what people said about uh cargo sver checks when I started it there was a lot of this will never work",
    "start": "2937160",
    "end": "2944640"
  },
  {
    "text": "uh I think one of the things that strikes me about that is that it works",
    "start": "2944640",
    "end": "2950240"
  },
  {
    "text": "if and only if you can make it as you said genuinely 100% on the code",
    "start": "2950240",
    "end": "2955760"
  },
  {
    "text": "modability side of it and so I think it gets at the human communication Dynamic",
    "start": "2955760",
    "end": "2961240"
  },
  {
    "text": "piece of it again one of the things I think about a lot is okay if this operation used to be you know to use the",
    "start": "2961240",
    "end": "2969240"
  },
  {
    "text": "per standard performance language o of one it's constant time access to get something out of this data structure and",
    "start": "2969240",
    "end": "2976359"
  },
  {
    "text": "now I made a change to the performance of that data structure that gives it way better memory characteristics but now",
    "start": "2976359",
    "end": "2982599"
  },
  {
    "text": "makes it o of n so it it scales with the size of the number of or the number of items in the data structure and the",
    "start": "2982599",
    "end": "2989040"
  },
  {
    "text": "surface level API didn't change that's a breaking change in my book because you",
    "start": "2989040",
    "end": "2994280"
  },
  {
    "text": "can radically impact the performance of your end user systems by doing that but",
    "start": "2994280",
    "end": "3000799"
  },
  {
    "text": "it's not going to be statically catchable by the kinds of things that could code modit because the API hasn't",
    "start": "3000799",
    "end": "3006960"
  },
  {
    "text": "changed and so I think there's an interesting CH like I think what you just described as good and it's actually",
    "start": "3006960",
    "end": "3013480"
  },
  {
    "text": "kind of the improved version of what rust and Ember and some other JS Frameworks have tried to do of when we",
    "start": "3013480",
    "end": "3020040"
  },
  {
    "text": "ship a deprecation we also ship a code mod with it that moves you to the new API and that goes a long way",
    "start": "3020040",
    "end": "3027440"
  },
  {
    "text": "especially if it's one of the ones that's 100% rather than like 80% and now you have to do the last 80% yourself and",
    "start": "3027440",
    "end": "3033440"
  },
  {
    "text": "yes listeners I said 80% both times on purpose because that is my experience of how that goes you solve that 80% and the",
    "start": "3033440",
    "end": "3039720"
  },
  {
    "text": "last 20% takes another 80% of the time I think the other challenge there is",
    "start": "3039720",
    "end": "3048400"
  },
  {
    "text": "making the thing trustworthy enough that people feel like it's safe to do that as",
    "start": "3048400",
    "end": "3054160"
  },
  {
    "text": "part of their npm update or cargo update or whatever it is and I think you",
    "start": "3054160",
    "end": "3059359"
  },
  {
    "text": "probably have more leverage to do it in an ecosystem with types than one that is",
    "start": "3059359",
    "end": "3066000"
  },
  {
    "text": "without types for the simple reason that it's easier to be confident that you got it right with that code mod not",
    "start": "3066000",
    "end": "3072480"
  },
  {
    "text": "necessarily impossible in Ruby or JS or whatever but but",
    "start": "3072480",
    "end": "3077799"
  },
  {
    "text": "easier H it seems like for incremental",
    "start": "3077799",
    "end": "3083520"
  },
  {
    "text": "adoption I like the idea PR but it seems like for that just simply adding a prefixed I mean",
    "start": "3083520",
    "end": "3090280"
  },
  {
    "text": "Chris is kind of joking but maybe would work kind of like why don't we just add another number that if your if your",
    "start": "3090280",
    "end": "3097000"
  },
  {
    "text": "version has four numbers the first one's marketing if it has three numbers then it's just the old style and so you could",
    "start": "3097000",
    "end": "3103680"
  },
  {
    "text": "just have that and not having to fix that problem of the breaking change with",
    "start": "3103680",
    "end": "3108839"
  },
  {
    "text": "the code mods thing which I still think would be a worthy goal and one that you should definitely get sponsored by",
    "start": "3108839",
    "end": "3115040"
  },
  {
    "text": "somebody to work on but it seems like it's really far away from something that we could use would it always remain like",
    "start": "3115040",
    "end": "3120880"
  },
  {
    "text": "one in front of that so if you had four numbers would the number one or number two be like because that's a thing too",
    "start": "3120880",
    "end": "3126040"
  },
  {
    "text": "with marketing is not to say negatively about those folks but they're not generally in the minutia like we are",
    "start": "3126040",
    "end": "3131480"
  },
  {
    "text": "here and there's a a thought process break where what they think is marketing is simply what is acceptable what's",
    "start": "3131480",
    "end": "3138400"
  },
  {
    "text": "praiseworthy what's celebratory not so much practical and pragmatic in the application state right right so it's",
    "start": "3138400",
    "end": "3145319"
  },
  {
    "text": "really just window addess ing it's not really useful it's just there to be there to represent which is why it's",
    "start": "3145319",
    "end": "3152200"
  },
  {
    "text": "optional right there's almost a sense in which the ordering is the opposite of what we want for marketing reasons true",
    "start": "3152200",
    "end": "3160200"
  },
  {
    "text": "in that the minor release which comes along whether it's on a Cadence like",
    "start": "3160200",
    "end": "3165920"
  },
  {
    "text": "rust or Chrome or whatever where it comes out on a predictable timeline or",
    "start": "3165920",
    "end": "3171920"
  },
  {
    "text": "where it comes out whenever it comes out the minor release if you think about sver semantics is actually the marketing",
    "start": "3171920",
    "end": "3178799"
  },
  {
    "text": "excitement it's the we got new stuff moment and yet it's the second slot",
    "start": "3178799",
    "end": "3184200"
  },
  {
    "text": "right and the something broke is the first slot because re there's a good reason for it which is it's the one",
    "start": "3184200",
    "end": "3190680"
  },
  {
    "text": "that's going to hurt the most hopefully the other ones won't hurt but doing the breaking changes is going to be some",
    "start": "3190680",
    "end": "3196240"
  },
  {
    "text": "work that's why it's breaking I don't have a solution for that but it yeah it",
    "start": "3196240",
    "end": "3201480"
  },
  {
    "text": "does feel like they're backwards that way and in fact when I was making slides for that talk one of the things I",
    "start": "3201480",
    "end": "3206760"
  },
  {
    "text": "noticed is that when I went to explain it and I I think I did this when I was talking about it earlier you want to explain the order upside down you want",
    "start": "3206760",
    "end": "3214480"
  },
  {
    "text": "to start with patch and say a patch is a bug fix and then a minor is a feature or",
    "start": "3214480",
    "end": "3220599"
  },
  {
    "text": "a bug fix and and then the major is breaking changes and maybe also a",
    "start": "3220599",
    "end": "3226480"
  },
  {
    "text": "feature or a bug fix but you almost end up kind of backwards from the sver ordering and I do kind of wonder if the",
    "start": "3226480",
    "end": "3234720"
  },
  {
    "text": "the move you know to your question earlier Jared about is sver even the right shape I think if we were to take a",
    "start": "3234720",
    "end": "3241680"
  },
  {
    "text": "different swing at it we want to keep all of those bits as it were of data but",
    "start": "3241680",
    "end": "3247440"
  },
  {
    "text": "we might want to find some way to treat them as a different kind of ordering and",
    "start": "3247440",
    "end": "3254000"
  },
  {
    "text": "getting really nerdy here for a sense it's not clear to me that when we think about like partial orders or total",
    "start": "3254000",
    "end": "3260920"
  },
  {
    "text": "orders in a deep type theoretic sense that that's actually quite the right model for versioning",
    "start": "3260920",
    "end": "3268799"
  },
  {
    "text": "and the marketing part becomes a piece of that because the marketing thing May",
    "start": "3268799",
    "end": "3275280"
  },
  {
    "text": "really be very distinct from when breaking changes land and both of those are really important bits but it feels",
    "start": "3275280",
    "end": "3282200"
  },
  {
    "text": "really weird to say that I have version 2 do where that's the marketing version",
    "start": "3282200",
    "end": "3288040"
  },
  {
    "text": "four where there have been four breaking changes as part of marketing version two that feels weird and then all of these",
    "start": "3288040",
    "end": "3295319"
  },
  {
    "text": "other feature numbers along the way as part of it and maybe just thinking about",
    "start": "3295319",
    "end": "3300760"
  },
  {
    "text": "different ordering schemes or ways to kind of decouple those further could be a part of the future here you need all",
    "start": "3300760",
    "end": "3307880"
  },
  {
    "text": "of the bits though you need the the marketing bit somewhere and you need the breaking change bit somewhere and you",
    "start": "3307880",
    "end": "3315319"
  },
  {
    "text": "need the bug fix bit somewhere mhm one more thing that's interesting is that uh",
    "start": "3315319",
    "end": "3321520"
  },
  {
    "text": "there'll be names so like dragon fish for example you know not only is it and",
    "start": "3321520",
    "end": "3326760"
  },
  {
    "text": "I'm talking about trass here in this case tras scale uh 24.4 which actually is not sver it's it's I've learned today",
    "start": "3326760",
    "end": "3334520"
  },
  {
    "text": "it's called Calver didn't really even it makes sense but yep I didn't consider the fact that it's the 24th year and the",
    "start": "3334520",
    "end": "3340119"
  },
  {
    "text": "fourth month so they have a release cycle everyone understands that that's also they've adopted the auntu way as",
    "start": "3340119",
    "end": "3346280"
  },
  {
    "text": "well which is you know year and month and they have a release schedule but they they also call it a name and in the",
    "start": "3346280",
    "end": "3352960"
  },
  {
    "text": "case of auntu they have certain names I think they're all based on pixel are if I recall correctly and then Dragonfish",
    "start": "3352960",
    "end": "3359319"
  },
  {
    "text": "in the case of tras scale that this is what they named it so they add one more nomenclature which really is their",
    "start": "3359319",
    "end": "3364680"
  },
  {
    "text": "marketing term so I wonder like is the fourth number really required can you just leverage a naming schema that's",
    "start": "3364680",
    "end": "3372079"
  },
  {
    "text": "what Ember has tried to do and again that's the question of like does that work or not I think auntu is interesting",
    "start": "3372079",
    "end": "3378960"
  },
  {
    "text": "as an example I'm not in that ecosystem anymore I used to run auntu for a bunch",
    "start": "3378960",
    "end": "3384559"
  },
  {
    "text": "of things but I never even when I did I don't remember remembering the names very well I remembered the Cadence but",
    "start": "3384559",
    "end": "3391640"
  },
  {
    "text": "Calver is interesting Calver being calender based versioning because once",
    "start": "3391640",
    "end": "3396680"
  },
  {
    "text": "again you're back to read the release notes as your mechanic for did this break something that I depended on",
    "start": "3396680",
    "end": "3403720"
  },
  {
    "text": "because Calver tells you when something happened but it doesn't tell you what happened then it's in that way kind of",
    "start": "3403720",
    "end": "3411039"
  },
  {
    "text": "like solo which says even less I like Calver better because it it at least gives you a date that's useful uh but",
    "start": "3411039",
    "end": "3417880"
  },
  {
    "text": "both of them have the problem of they basically reduced to something happened right but what what happened is what I",
    "start": "3417880",
    "end": "3423480"
  },
  {
    "text": "want to know and I think the big name for it The Branding name for it as",
    "start": "3423480",
    "end": "3429720"
  },
  {
    "text": "you're saying Adam it helps cuz then you can actually use something and I was incorrect I think it's Debian that",
    "start": "3429720",
    "end": "3435119"
  },
  {
    "text": "leverages picks our characters right jar yeah Toy Story was where they started I'm not sure if they moved on from there and I don't no I think abun actually has",
    "start": "3435119",
    "end": "3441359"
  },
  {
    "text": "a double name and I'm not sure I'm trying to figure out quickly cuz I messed up yeah they're like alliterative animal",
    "start": "3441359",
    "end": "3447200"
  },
  {
    "text": "yeah liter of animals is exactly it I think righty warthog was 410 warthog I",
    "start": "3447200",
    "end": "3452480"
  },
  {
    "text": "remember but I do agree I never go back and remember like which one was I know Sid cuz that's the experimental Branch",
    "start": "3452480",
    "end": "3458039"
  },
  {
    "text": "that's a great name for for that but then like the rest of the Debian releases it was like was this Woody was",
    "start": "3458039",
    "end": "3463280"
  },
  {
    "text": "this Buzz was this I don't know because they're important as they come up but",
    "start": "3463280",
    "end": "3468640"
  },
  {
    "text": "historically I just forget which ones which because you have a bunch of them over time so they kind of lose their meaning I think Calver really has a",
    "start": "3468640",
    "end": "3475559"
  },
  {
    "text": "place with products less so than with libraries because I think just like knowing it is nice to know when was this",
    "start": "3475559",
    "end": "3481280"
  },
  {
    "text": "product released because it's right there in the in the version number but I agree it really doesn't tell you much about that release which is fine for",
    "start": "3481280",
    "end": "3488440"
  },
  {
    "text": "products because you have all kinds of other things around them but with libraries we want to know more details",
    "start": "3488440",
    "end": "3495319"
  },
  {
    "text": "right like these are this is like business not fun kind of stuff right like we we don't want to break our",
    "start": "3495319",
    "end": "3500520"
  },
  {
    "text": "businesses and for libraries and Frameworks I think of sver as Calver",
    "start": "3500520",
    "end": "3505920"
  },
  {
    "text": "with an extra optimization slot in a sense think about it this way if every",
    "start": "3505920",
    "end": "3511680"
  },
  {
    "text": "calber release you release twice a year is allowed to make breaking changes right that's just like as if you updated",
    "start": "3511680",
    "end": "3517640"
  },
  {
    "text": "the major number in every release but every so often there's a release that does not make any breaking changes maybe",
    "start": "3517640",
    "end": "3523920"
  },
  {
    "text": "it's just some patches maybe it's some new features that don't affect existing functionality if you tell me that you've",
    "start": "3523920",
    "end": "3529599"
  },
  {
    "text": "made such a release I don't have to pay as much attention when upgrading I will expect that I can just let my package",
    "start": "3529599",
    "end": "3536839"
  },
  {
    "text": "manager for my ecosystem handle it for me with no action from my part right now",
    "start": "3536839",
    "end": "3543160"
  },
  {
    "text": "you could be conservative you could say I'm not sure maybe I've made a breaking change and release a new major every time right and that still aderes to sver",
    "start": "3543160",
    "end": "3551520"
  },
  {
    "text": "that also happens to be solver in practice but if you tell me that you've made breaking changes more often than",
    "start": "3551520",
    "end": "3559280"
  },
  {
    "text": "strictly necessary then you're Shifting the effort on my part like Chris was saying earlier right the more you can",
    "start": "3559280",
    "end": "3565599"
  },
  {
    "text": "tell me that based on your gut feeling you have not made breaking changes and ideally based on the best available tooling for",
    "start": "3565599",
    "end": "3572039"
  },
  {
    "text": "your ecosystem you also have not made any breaking changes the more often I'll",
    "start": "3572039",
    "end": "3577280"
  },
  {
    "text": "will be able to patch feeling confident about it and ideally not spend six hours",
    "start": "3577280",
    "end": "3582880"
  },
  {
    "text": "than chasing type errors or worse you know misbehaviors in a system that I've deployed to production right so I think",
    "start": "3582880",
    "end": "3589160"
  },
  {
    "text": "sber is just an optimization over what we could get otherwise because I optimize away the necessity of me",
    "start": "3589160",
    "end": "3595200"
  },
  {
    "text": "reading the release notes religiously for every one of the 400 odd dependencies that my project depends on",
    "start": "3595200",
    "end": "3601359"
  },
  {
    "text": "I do think that is suggestive though of the value of calendar driven releases I",
    "start": "3601359",
    "end": "3607280"
  },
  {
    "text": "think predictability inversion is actually really really helpful in that regard so the fact that typescript",
    "start": "3607280",
    "end": "3613160"
  },
  {
    "text": "releases basically quarterly is really helpful for planning around it the fact that rust releases every 6 weeks is",
    "start": "3613160",
    "end": "3620240"
  },
  {
    "text": "really helpful for planning around it and it's helpful for all the teams who work on those projects because it gives",
    "start": "3620240",
    "end": "3625799"
  },
  {
    "text": "them schedule but it also means that you can think okay maybe we don't have the appetite as an organization to take a",
    "start": "3625799",
    "end": "3632680"
  },
  {
    "text": "typescript update every quarter but knowing that they come out quarterly I can bundle it up and say I'm going to do",
    "start": "3632680",
    "end": "3638680"
  },
  {
    "text": "this every six months or I'm going to do this every year or whatever the Cadence I choose and it's very difficult to do",
    "start": "3638680",
    "end": "3645440"
  },
  {
    "text": "that in ecosystems where that kind of schedule doesn't exist so",
    "start": "3645440",
    "end": "3651079"
  },
  {
    "text": "historically uh I don't think C has and they may have shifted this in recent years but it wasn't the case for a long",
    "start": "3651079",
    "end": "3657119"
  },
  {
    "text": "time that there was a predictable Cadence they came when they came and that meant you couldn't plan around that",
    "start": "3657119",
    "end": "3662640"
  },
  {
    "text": "for a long time Ember didn't do that and you couldn't plan around it react certainly doesn't react 19 comes when react 19 comes and the entire ecosystem",
    "start": "3662640",
    "end": "3670480"
  },
  {
    "text": "gets to go woo let's figure this out now okay there's going to be a ride I think having a schedule one of",
    "start": "3670480",
    "end": "3678559"
  },
  {
    "text": "the things that prog just said they got me thinking is it would be really interesting if your major version",
    "start": "3678559",
    "end": "3683880"
  },
  {
    "text": "intentionally adopted the calendar versioning nomenclature because that would pull you out of the the frame of",
    "start": "3683880",
    "end": "3690839"
  },
  {
    "text": "thinking about it as a marketing version because 2404 like",
    "start": "3690839",
    "end": "3696520"
  },
  {
    "text": "24-4 do1 do like. 1.2 doesn't make you think ah the",
    "start": "3696520",
    "end": "3702440"
  },
  {
    "text": "marketing version 21-4 like that's not a marketing version that no and that might",
    "start": "3702440",
    "end": "3707760"
  },
  {
    "text": "be enough of a shift and you could still codify that like this is a system that",
    "start": "3707760",
    "end": "3713559"
  },
  {
    "text": "tools know how to process as cish in shape because it's still",
    "start": "3713559",
    "end": "3721400"
  },
  {
    "text": "predictable it's still month year with a dashing between them it's trivial to parse but doing that might give you as",
    "start": "3721400",
    "end": "3729400"
  },
  {
    "text": "an ecosystem a chance of much more clearly distinguishing okay this is a timed",
    "start": "3729400",
    "end": "3736480"
  },
  {
    "text": "release that bundles up the breaking changes since the last timed release and in effect doing the kind of",
    "start": "3736480",
    "end": "3743039"
  },
  {
    "text": "thing that ember is trying to do now and that others I I would like to see try to do four breaking changes where they just",
    "start": "3743039",
    "end": "3749079"
  },
  {
    "text": "angular does this node does this lots of things do this lean into it I think",
    "start": "3749079",
    "end": "3754680"
  },
  {
    "text": "angular and node could do exactly this and instead of saying it's node 22 you",
    "start": "3754680",
    "end": "3761319"
  },
  {
    "text": "could imagine especially since they have a six-month Cadence that it's node 24-h whatever I don't remember when the",
    "start": "3761319",
    "end": "3769039"
  },
  {
    "text": "next one comes out I think September or something so 24-9 and then the patch and bug fix Rel",
    "start": "3769039",
    "end": "3775839"
  },
  {
    "text": "or patch and feature releases in it that could be a really helpful way of distinguishing the marketing",
    "start": "3775839",
    "end": "3781950"
  },
  {
    "text": "[Music]",
    "start": "3781950",
    "end": "3794079"
  },
  {
    "text": "Dynamics hey friends every time you're out there in the world and you're on public Wi-Fi let's say a hotel a cafe an",
    "start": "3794079",
    "end": "3801520"
  },
  {
    "text": "airport you're traveling you're at a friend's house and maybe they're not very trustworthy maybe they are who",
    "start": "3801520",
    "end": "3807279"
  },
  {
    "text": "knows you're not secure any hacker on that Network can gain access to steal",
    "start": "3807279",
    "end": "3813240"
  },
  {
    "text": "your stuff take your personal data and do what they want with it and it doesn't take much technical knowledge to hack",
    "start": "3813240",
    "end": "3819480"
  },
  {
    "text": "someone just some cheap Hardware is needed a Raspberry Pi I think your data is valuable and I think hackers think so",
    "start": "3819480",
    "end": "3826480"
  },
  {
    "text": "too because they can make up to $11,000 per person just selling your personal information on the dark web",
    "start": "3826480",
    "end": "3833079"
  },
  {
    "text": "could be your phone number could be your address could be your driver's license number whatever they can get their hands",
    "start": "3833079",
    "end": "3838520"
  },
  {
    "text": "on they're going to sell it $1,000 per person that's crazy but expressvpn stops",
    "start": "3838520",
    "end": "3844000"
  },
  {
    "text": "those Hackers from stealing your personal data by creating a secure encrypted tunnel between your device and",
    "start": "3844000",
    "end": "3849640"
  },
  {
    "text": "the internet and what I appreciate most about expressvpn personally is it is",
    "start": "3849640",
    "end": "3854799"
  },
  {
    "text": "super secure it would take a hacker with a supercomputer over 1 billion years to",
    "start": "3854799",
    "end": "3861599"
  },
  {
    "text": "get past expressvpn's encryption and it's also easy to use fire up the app",
    "start": "3861599",
    "end": "3867279"
  },
  {
    "text": "and click one button and you get protected and that's what I do when I'm in a cafe or an airport or I'm out there",
    "start": "3867279",
    "end": "3873920"
  },
  {
    "text": "about I'm getting my tires changed I'm getting my oil changed I'm using expressvpn to protect myself and you can",
    "start": "3873920",
    "end": "3880760"
  },
  {
    "text": "too go to expressvpn.com changelog that's ex p",
    "start": "3880760",
    "end": "3890838"
  },
  {
    "text": "rsvpn docomo and you can get an extra 3 months",
    "start": "3891119",
    "end": "3896240"
  },
  {
    "text": "free again expressvpn.com",
    "start": "3896240",
    "end": "3901760"
  },
  {
    "text": "[Music]",
    "start": "3902600",
    "end": "3912160"
  },
  {
    "text": "changelog let's draw a Cora here potentially because arguably auntu has",
    "start": "3912160",
    "end": "3918039"
  },
  {
    "text": "become one of the most popular flavors of Linux to install right like a lot of people use it they were the first to",
    "start": "3918039",
    "end": "3925200"
  },
  {
    "text": "come up with LTS they do use you know this nure you just mentioned I just wonder like is there a reason",
    "start": "3925200",
    "end": "3931200"
  },
  {
    "text": "potentially beyond the quality of the release cycle the team behind it what",
    "start": "3931200",
    "end": "3936240"
  },
  {
    "text": "they've done Etc has their ability to popularize ltss to be more trustworthy",
    "start": "3936240",
    "end": "3941480"
  },
  {
    "text": "over time as well as this n clature of 244 or 20204 2004 whatever the however",
    "start": "3941480",
    "end": "3947640"
  },
  {
    "text": "it frames out has that do you think that's been a correlate to their success I think there are two values there one",
    "start": "3947640",
    "end": "3953880"
  },
  {
    "text": "is the clarity in communication and the other one is the clarity in scheduling both internally and externally so the",
    "start": "3953880",
    "end": "3960640"
  },
  {
    "text": "communication that LTS says if you use this you are not on the hook for worrying about security patches you will",
    "start": "3960640",
    "end": "3967520"
  },
  {
    "text": "get those security patches for predetermined period of time and so you know what you're signing yourself up for",
    "start": "3967520",
    "end": "3974039"
  },
  {
    "text": "right and being able to credibly make that commitment is valuable the other",
    "start": "3974039",
    "end": "3979359"
  },
  {
    "text": "half of it is the schedule certainty both internally and externally because I remember some some ago I was going to",
    "start": "3979359",
    "end": "3987279"
  },
  {
    "text": "build a new computer for myself and I looked at the calendar and I was like oh what I should do is I should wait for",
    "start": "3987279",
    "end": "3992599"
  },
  {
    "text": "another month because there's going to be a new LTS release out and so I don't want to set up a brand new Linux install",
    "start": "3992599",
    "end": "3998799"
  },
  {
    "text": "when I'm going to have to go through the whole process again in a month right and knowing that that",
    "start": "3998799",
    "end": "4004599"
  },
  {
    "text": "calendar you know is dependable and is going to happen on a predictable Cadence is very very valuable I imagine for a",
    "start": "4004599",
    "end": "4011760"
  },
  {
    "text": "large project like that it's also very valuable internally because if you're trying to ship a new feature you don't",
    "start": "4011760",
    "end": "4017920"
  },
  {
    "text": "have to worry about like will I make it into the next release on time depending on when that next release is you know",
    "start": "4017920",
    "end": "4024279"
  },
  {
    "text": "when the next release is you know when the deadline is it's the same deadline every year right and so you know where",
    "start": "4024279",
    "end": "4030240"
  },
  {
    "text": "you stand you don't have to do any horse trading with the release manager or PM or whatever you know and exchange favors",
    "start": "4030240",
    "end": "4037680"
  },
  {
    "text": "and or or whatever else needs to happen I think it it eliminates and streamlines",
    "start": "4037680",
    "end": "4042839"
  },
  {
    "text": "a lot of that effort that normally has to happen whenever ever you're trying to Wrangle a big project toward a a",
    "start": "4042839",
    "end": "4048960"
  },
  {
    "text": "release and I think that's that's useful both for the project itself as well as for people depending on it Downstream at",
    "start": "4048960",
    "end": "4056240"
  },
  {
    "text": "the same time though even with your scenario where you want to wait a month because you know the date at the same time if you have confidence in the",
    "start": "4056240",
    "end": "4063119"
  },
  {
    "text": "upgradeability from one version to another like the10 release in particular",
    "start": "4063119",
    "end": "4068640"
  },
  {
    "text": "uh Jared you know I've had I've disclosed you behind the scenes some fear like oh my gosh I've got to upgrade my auntu I'm going to just I'm going to",
    "start": "4068640",
    "end": "4075680"
  },
  {
    "text": "the system I'm going to backup and I'm going start from scratch but I've learned and I've come to you know trust",
    "start": "4075680",
    "end": "4081039"
  },
  {
    "text": "their ability to architect good software to give me an upgrade path and it's also like this is probably specific to Linux",
    "start": "4081039",
    "end": "4088200"
  },
  {
    "text": "that as soon as you log in it lets you know hey you've got an upgrade availability you know do release",
    "start": "4088200",
    "end": "4093400"
  },
  {
    "text": "whatever it is for the command you can run I've learned to trust that so at the same time I might be well my you know 20",
    "start": "4093400",
    "end": "4101199"
  },
  {
    "text": "whatever 21.10 of auntu can easy upgrade it 2204",
    "start": "4101199",
    "end": "4106719"
  },
  {
    "text": "safely and I've done it once before and I'll do it again so there you go so I won't wait the month because I have",
    "start": "4106719",
    "end": "4112000"
  },
  {
    "text": "trust in their ability to release properly but I do think it really comes back to the beginning of the show when",
    "start": "4112000",
    "end": "4117880"
  },
  {
    "text": "you said sver is really about communication it's a machine readable way to communicate for both machines and",
    "start": "4117880",
    "end": "4124120"
  },
  {
    "text": "humans that communicates in a lot of ways and the challenge really is is like how well do people adopt it and are",
    "start": "4124120",
    "end": "4131120"
  },
  {
    "text": "there different perations of it that misalign or you know un align I suppose",
    "start": "4131120",
    "end": "4137359"
  },
  {
    "text": "that makes it challenging to do zver and like you all said before if you have to have a PhD in it is it really worth",
    "start": "4137359",
    "end": "4143679"
  },
  {
    "text": "doing that's true but I think you know coming out of this conversation I'm not thinking sver needs to die by any means",
    "start": "4143679",
    "end": "4150600"
  },
  {
    "text": "I'm thinking it needs to live and need have people like you behind it but it is super challenging and I think to your",
    "start": "4150600",
    "end": "4156719"
  },
  {
    "text": "point there the more that you can make those kinds of transitions",
    "start": "4156719",
    "end": "4162560"
  },
  {
    "text": "seamless this gets it exactly the kind of thing prog was describing around code",
    "start": "4162560",
    "end": "4168359"
  },
  {
    "text": "mods even if you are shipping a breaking change like even if you don't adopt the slightly more I'm still mulling on it",
    "start": "4168359",
    "end": "4176000"
  },
  {
    "text": "proposal there of it's not breaking as long as the code mod is good enough even if you don't do that if every breaking",
    "start": "4176000",
    "end": "4181880"
  },
  {
    "text": "change you make every deprecation you make comes with a good enough code mod so that when you do actually make that",
    "start": "4181880",
    "end": "4188318"
  },
  {
    "text": "breaking change you could have the kind of confidence that you're talking about Adam that you could know that when I go",
    "start": "4188319",
    "end": "4193679"
  },
  {
    "text": "from react 19 to react 20 or laravel whatever the current major is to the",
    "start": "4193679",
    "end": "4199159"
  },
  {
    "text": "next one and so on that it's going to come with that kind of Automation and that becomes a norm across the ecosystem",
    "start": "4199159",
    "end": "4206239"
  },
  {
    "text": "or or at least for those foundational pieces I think that would give you a lot more confidence to say I can take this",
    "start": "4206239",
    "end": "4214440"
  },
  {
    "text": "upgrade that is going to be breaking but I'm not going to be broken by it because",
    "start": "4214440",
    "end": "4220120"
  },
  {
    "text": "the ecosystem has built this value around this socio technical cont",
    "start": "4220120",
    "end": "4225320"
  },
  {
    "text": "contract we've set up with sver and we're going to apply all of our technical skill to make the social part",
    "start": "4225320",
    "end": "4231360"
  },
  {
    "text": "of it better I also think there's a lovely positive feedback loop going on here we've noticed this I think we're",
    "start": "4231360",
    "end": "4238400"
  },
  {
    "text": "all on the same page that releasing your software more often is better than than not right I'm thinking in the context of",
    "start": "4238400",
    "end": "4244520"
  },
  {
    "text": "say like a SAS application right if you release once a year it's going to be a much more painful release cycle than if",
    "start": "4244520",
    "end": "4250040"
  },
  {
    "text": "you release every week or every day right because big changes are hard to test and small changes are better",
    "start": "4250040",
    "end": "4256159"
  },
  {
    "text": "I think there's something similar to be said about software and the the rate at which you apply upgrades right if you",
    "start": "4256159",
    "end": "4263320"
  },
  {
    "text": "accumulate 400 version upgrades and try to do them all at once I mean good luck to you I just don't want to be anywhere",
    "start": "4263320",
    "end": "4268600"
  },
  {
    "text": "in your blast radius right if you try to upgrade them you know once a week or",
    "start": "4268600",
    "end": "4273679"
  },
  {
    "text": "even once a day and you have high confidence in the tooling then good",
    "start": "4273679",
    "end": "4279560"
  },
  {
    "text": "things happen Downstream of you so more good things happen and so on and so on the primary method by which Caro sver",
    "start": "4279560",
    "end": "4286840"
  },
  {
    "text": "checks the rust sver linter I built gets adopted is that somebody has an accident",
    "start": "4286840",
    "end": "4292719"
  },
  {
    "text": "you know rolls a natural one and right I mean it really is an accident right like",
    "start": "4292719",
    "end": "4298520"
  },
  {
    "text": "they they didn't mean to to cause a breaking change it just happens to them right and then they break somebody and",
    "start": "4298520",
    "end": "4304719"
  },
  {
    "text": "then somebody opens an issue and says hey you broke me like this is bad you need to fix this and a lot of the time",
    "start": "4304719",
    "end": "4311400"
  },
  {
    "text": "someone says oh by the way like Caro samex catches this and then no fingers",
    "start": "4311400",
    "end": "4316480"
  },
  {
    "text": "are pointed you know no blame is assigned but you very quickly see that project adopt cargo sver checks for the",
    "start": "4316480",
    "end": "4321760"
  },
  {
    "text": "next release right and if they adopt cargo sver checks and they ship fewer",
    "start": "4321760",
    "end": "4326840"
  },
  {
    "text": "braking changes then libraries that reexport their API and you know rely on",
    "start": "4326840",
    "end": "4332199"
  },
  {
    "text": "it to provide some capabilities Downstream they get broken less often they might also adopt cargo sver checks",
    "start": "4332199",
    "end": "4338159"
  },
  {
    "text": "because they see it works well and all of a sudden you know a rising tide lifts all boats right everyone's software is",
    "start": "4338159",
    "end": "4343480"
  },
  {
    "text": "better off we can all be updated more often so we all benefit from the new features faster we get better",
    "start": "4343480",
    "end": "4349600"
  },
  {
    "text": "performance we get you know security patches patched more promptly and not you know festering open for for months",
    "start": "4349600",
    "end": "4356440"
  },
  {
    "text": "while we try to figure out how to navigate our way through all of the changes that we've accumulated because we haven't updated any piece of software",
    "start": "4356440",
    "end": "4362560"
  },
  {
    "text": "since you know 2017 right I mean I wish I were making this up but like these are things that",
    "start": "4362560",
    "end": "4368440"
  },
  {
    "text": "happen in the real world right like wasn't there the case that uh a large number of government machines all over",
    "start": "4368440",
    "end": "4374960"
  },
  {
    "text": "the world they're still running Windows XP right they don't do that because it's fun why do they do it it's very",
    "start": "4374960",
    "end": "4382199"
  },
  {
    "text": "difficult to upgrade okay I want you just say that's all to be super clear yeah it's hard",
    "start": "4382199",
    "end": "4388360"
  },
  {
    "text": "upgrade so you would you trust the upgrade path it's a little easier but that comes with maturity too XP was",
    "start": "4388360",
    "end": "4394080"
  },
  {
    "text": "super old right it's important that you not just trust the path but you walk the path regularly right because then you",
    "start": "4394080",
    "end": "4400040"
  },
  {
    "text": "have smaller Downstream effects because you have less change every time that you make that change",
    "start": "4400040",
    "end": "4405800"
  },
  {
    "text": "I think that's wisdom hasn't Microsoft uh Windows been notoriously hard to",
    "start": "4405800",
    "end": "4411719"
  },
  {
    "text": "upgrade every new major version and that been like until maybe more recently has it been less hard whereas like Mac OS",
    "start": "4411719",
    "end": "4418920"
  },
  {
    "text": "for example which is a popular developer machine has been generally easier to adopt new versions and they've made the",
    "start": "4418920",
    "end": "4424560"
  },
  {
    "text": "upgrade path semi easy I for the most part pretty easy interesting I've had the opposite experience personally",
    "start": "4424560",
    "end": "4430960"
  },
  {
    "text": "really your mileage may vary developer machines might be different different I mean if you're installing specialized",
    "start": "4430960",
    "end": "4437239"
  },
  {
    "text": "tools I we feel that too we do audio Productions so there's times whenever I literally I think on my main machine I",
    "start": "4437239",
    "end": "4442840"
  },
  {
    "text": "may have just recently gotten I don't even what the latest version of Mac OS is so I'm not a great example of it I usually wait one year to a half a year",
    "start": "4442840",
    "end": "4450520"
  },
  {
    "text": "just to make sure all their kinks are out because Adobe is always behind and Adobe is our suite of production tooling",
    "start": "4450520",
    "end": "4457320"
  },
  {
    "text": "and so I know there's some level of latency between the two and I just can't risk it cuz I want to make sure you all",
    "start": "4457320",
    "end": "4463000"
  },
  {
    "text": "sound amazing our shows are awesome they go time and I can't be the one that's the bottleneck on those things because",
    "start": "4463000",
    "end": "4468800"
  },
  {
    "text": "of my desire to be on the latest Mac OS so that aside I do think the upgrade",
    "start": "4468800",
    "end": "4474840"
  },
  {
    "text": "path generally is easier in my experience with Mac OS I think that actually gets at something really",
    "start": "4474840",
    "end": "4479960"
  },
  {
    "text": "important that we haven't touched on so far which is that a concern for backward",
    "start": "4479960",
    "end": "4485320"
  },
  {
    "text": "compatibility which can make upgrading easier in this context the fact that you",
    "start": "4485320",
    "end": "4490760"
  },
  {
    "text": "can still run 16-bit dos applications on Windows 11 which is amazing in a lot of",
    "start": "4490760",
    "end": "4496000"
  },
  {
    "text": "ways also makes it much harder to move the platform forward in other ways so",
    "start": "4496000",
    "end": "4501800"
  },
  {
    "text": "Apple by contrast like you want to run a application from the Doss 16bit Doss era",
    "start": "4501800",
    "end": "4509000"
  },
  {
    "text": "maybe if you're running it in an emulator written in JavaScript you can do that cool but on the operating system",
    "start": "4509000",
    "end": "4515600"
  },
  {
    "text": "absolutely not on the other hand that's part of what makes it really easier I'm not going to say easy because it's an",
    "start": "4515600",
    "end": "4521800"
  },
  {
    "text": "enormously hard task but easier for Apple to do something like ship an architecture transition from x86 to arm",
    "start": "4521800",
    "end": "4529400"
  },
  {
    "text": "and pull off the whole thing in a matter of like 2 and a half years 3 years because they're willing to just cut",
    "start": "4529400",
    "end": "4535360"
  },
  {
    "text": "their losses for backwards compatibility sometimes and we see the same thing",
    "start": "4535360",
    "end": "4541080"
  },
  {
    "text": "for a higher level of the stack that a framework that is willing to make",
    "start": "4541080",
    "end": "4546880"
  },
  {
    "text": "breaking changes on the regular can move forward faster but that's more cost for",
    "start": "4546880",
    "end": "4552440"
  },
  {
    "text": "the people upgrading by the same token somebody who's really committed to backward compatibility can",
    "start": "4552440",
    "end": "4559639"
  },
  {
    "text": "bring along all of the people on their ecosystem very well but it can often be much harder for them to get the benefits",
    "start": "4559639",
    "end": "4565960"
  },
  {
    "text": "of trying new things and I think here actually the example of react and ember",
    "start": "4565960",
    "end": "4572120"
  },
  {
    "text": "in the JS ecosystem is a really good example of this especially it's less true now react has gotten way",
    "start": "4572120",
    "end": "4579440"
  },
  {
    "text": "more thoughtful about breaking changes but in that kind of mid 2010s to you",
    "start": "4579440",
    "end": "4584760"
  },
  {
    "text": "know you know like 2018 2019 time react would shipbreaking changes much more",
    "start": "4584760",
    "end": "4591320"
  },
  {
    "text": "than Ember would and react got to try a lot more things than Ember did on the other hand I've talked to a lot of",
    "start": "4591320",
    "end": "4597280"
  },
  {
    "text": "senior engineers at very large companies who got stuck on react 16 and never",
    "start": "4597280",
    "end": "4603120"
  },
  {
    "text": "moved on and that's less true for Ember but Ember got to try a lot fewer things",
    "start": "4603120",
    "end": "4608880"
  },
  {
    "text": "along the way there's just a fundamental tension there that then gets manifested in your versioning and and the",
    "start": "4608880",
    "end": "4615880"
  },
  {
    "text": "versioning is often a symptom rather than the cause in that case it's telling you a true story but the story it's",
    "start": "4615880",
    "end": "4622520"
  },
  {
    "text": "telling you might be telling you something else about the Dynamics the fact that windows can still run dos",
    "start": "4622520",
    "end": "4629159"
  },
  {
    "text": "16-bit applications has other consequences for the kind of incoherence",
    "start": "4629159",
    "end": "4635000"
  },
  {
    "text": "of the windows ecosystem but that's a really big benefit if you're an Enterprise it administrator who wants to",
    "start": "4635000",
    "end": "4641360"
  },
  {
    "text": "not spend a lot of cost on upgrading applic that just work for you tradeoffs",
    "start": "4641360",
    "end": "4648120"
  },
  {
    "text": "all the way down I also think that good tooling on the part of language",
    "start": "4648120",
    "end": "4653400"
  },
  {
    "text": "developers can massively you know tweak whether this problem is insurmountable",
    "start": "4653400",
    "end": "4658760"
  },
  {
    "text": "or not that bad you know it's it's always somewhere on that Spectrum right",
    "start": "4658760",
    "end": "4664080"
  },
  {
    "text": "rust has a has an interesting feature that I've I I really did not appreciate fully when I was starting out which is",
    "start": "4664080",
    "end": "4671040"
  },
  {
    "text": "that you can have multiple major versions of the same library in your project exist at the same time and like",
    "start": "4671040",
    "end": "4678520"
  },
  {
    "text": "Chris you were just saying this is not a decision that was taken lightly and is not something that is available for free",
    "start": "4678520",
    "end": "4684920"
  },
  {
    "text": "for one obvious consequence it makes the version resolver much much more complicated right because it now needs",
    "start": "4684920",
    "end": "4691960"
  },
  {
    "text": "to solve a problem that is much bigger in scope but what that means is that if you know Chris you wrote a library that",
    "start": "4691960",
    "end": "4698520"
  },
  {
    "text": "depends on Fu version one and I wrote a library that depends on Foo version two and now Adam wants to use both of our",
    "start": "4698520",
    "end": "4705320"
  },
  {
    "text": "libraries so long as our libraries are not something extremely fundamental like a framework like react that expects to",
    "start": "4705320",
    "end": "4711880"
  },
  {
    "text": "be you know in in full control of everything going on in the in the environment Adam can probably just use",
    "start": "4711880",
    "end": "4718280"
  },
  {
    "text": "both of our libraries and be completely fine with the fact that the two of us can't agree on which version is the",
    "start": "4718280",
    "end": "4724000"
  },
  {
    "text": "correct version of this dependency that Adam doesn't know or care about right now this is also not for free to Adam",
    "start": "4724000",
    "end": "4730560"
  },
  {
    "text": "right it it means that when Adam compiles his project he has to compile two versions of this dependency and not",
    "start": "4730560",
    "end": "4736000"
  },
  {
    "text": "one so maybe his binary size is a little bit bigger and maybe there's a little bit of bloat in the development",
    "start": "4736000",
    "end": "4741080"
  },
  {
    "text": "environment and stuff like that right but the alternative is Adam having to pick between your library and mine and I",
    "start": "4741080",
    "end": "4748719"
  },
  {
    "text": "can tell you from the python 2v3 transition that is not a pleasant experience to be in I mean bad time I",
    "start": "4748719",
    "end": "4755320"
  },
  {
    "text": "lived it I I made good software money just like moving stuff from python 2 to",
    "start": "4755320",
    "end": "4760480"
  },
  {
    "text": "Python 3 and if I could have made half as much while dealing with none of that that might have been a worthwhile trade",
    "start": "4760480",
    "end": "4766440"
  },
  {
    "text": "I think that also gets at different languages have to make different trade-offs there you've npm allows that",
    "start": "4766440",
    "end": "4773600"
  },
  {
    "text": "as to yarn and pnpm and so on but you generally are fine with that on the server and extremely not fine with that",
    "start": "4773600",
    "end": "4781040"
  },
  {
    "text": "on the client because your bundle size ends up mattering enormously and so you",
    "start": "4781040",
    "end": "4787120"
  },
  {
    "text": "have to be able to pick different trade-offs and the npm ETC one is hard because it's trying to serve both a",
    "start": "4787120",
    "end": "4793480"
  },
  {
    "text": "server ecosystem and a client ecosystem a browser ecosystem and those just have",
    "start": "4793480",
    "end": "4798679"
  },
  {
    "text": "fundamentally different needs one thing that rust doesn't do and npm theoretically does and yarn and pnpm",
    "start": "4798679",
    "end": "4805800"
  },
  {
    "text": "actually do is support the idea of peer dependencies which is this secondary",
    "start": "4805800",
    "end": "4811719"
  },
  {
    "text": "Dimension to all of this where you want to be able to say I want to support a",
    "start": "4811719",
    "end": "4817159"
  },
  {
    "text": "range of versions of this dependency of mine and I want to maybe even be able to",
    "start": "4817159",
    "end": "4822560"
  },
  {
    "text": "test against them and in principle that's possible in the npm ecosystem and",
    "start": "4822560",
    "end": "4828840"
  },
  {
    "text": "more or less nowhere else I think it's an under invested area",
    "start": "4828840",
    "end": "4834280"
  },
  {
    "text": "if you're building a new programming language you should bake pure dependencies in as a first class concept because Frameworks react being the",
    "start": "4834280",
    "end": "4840840"
  },
  {
    "text": "classic example but in Rust Tokyo is a very good example similarly things that sit at that Foundation level that",
    "start": "4840840",
    "end": "4847280"
  },
  {
    "text": "everything else Builds on you really want to be able to say my library is",
    "start": "4847280",
    "end": "4853159"
  },
  {
    "text": "currently built against the latest vers version and progs is built against a version four minor versions back but",
    "start": "4853159",
    "end": "4859400"
  },
  {
    "text": "both of us just say we have a peer dependency on the same major and your",
    "start": "4859400",
    "end": "4865120"
  },
  {
    "text": "resolver can now say ah I'm going to get the version that satisfies both of these and neither of you ships a direct",
    "start": "4865120",
    "end": "4872040"
  },
  {
    "text": "dependency on it you both specify a peer dependency and that can quote unquote just work and it's a very powerful thing",
    "start": "4872040",
    "end": "4879560"
  },
  {
    "text": "that mostly doesn't exist again yarn and pnpm finally have gotten this right in",
    "start": "4879560",
    "end": "4884760"
  },
  {
    "text": "the last two to three years but it allows you to pick a different set of trade-offs and to bring",
    "start": "4884760",
    "end": "4890960"
  },
  {
    "text": "this all the way back around in very full circle to does SRA work it only works because you have that ability to",
    "start": "4890960",
    "end": "4897360"
  },
  {
    "text": "communicate those sets of constraints that these share the same major version",
    "start": "4897360",
    "end": "4904000"
  },
  {
    "text": "and they might differ on which features they're using but they share the same major and so you can actually build",
    "start": "4904000",
    "end": "4910760"
  },
  {
    "text": "tooling around that and you can't do that without something shaped like sver even if we iterate on the details along",
    "start": "4910760",
    "end": "4918639"
  },
  {
    "text": "the way well you answered my unspoken question which was is there a better way and is it too late to unadopt",
    "start": "4918639",
    "end": "4926400"
  },
  {
    "text": "sver that was my unspoken question it's kind of been camping out in that area as like is it is it is there a better way",
    "start": "4926400",
    "end": "4932520"
  },
  {
    "text": "because there it's fra with a lot of issues and a lot of challenges but is there a better way and I think you just kind of answer that I I think the best",
    "start": "4932520",
    "end": "4940040"
  },
  {
    "text": "place to take it from here is to invest in tooling that we have and make it work",
    "start": "4940040",
    "end": "4945120"
  },
  {
    "text": "in even more of the cases starting from scratch we're going to relearn a lot of the same very painful lessons in a much",
    "start": "4945120",
    "end": "4951480"
  },
  {
    "text": "longer time scale I think right well let's leave folks with some way points Frederick to some of the tooling you've",
    "start": "4951480",
    "end": "4957880"
  },
  {
    "text": "been building perhaps Chris how they can connect with you to plug into this conversation and have a say CU there are",
    "start": "4957880",
    "end": "4965440"
  },
  {
    "text": "so many details and so many little Avenues and ways that we can go with this we could talk about it all day but",
    "start": "4965440",
    "end": "4971239"
  },
  {
    "text": "we may walk in circles uh sver checks what do you call it crate sver checks",
    "start": "4971239",
    "end": "4976520"
  },
  {
    "text": "cargo sver checks cargo sver checks seems like maybe state-of-the-art for people who want to build similar tooling",
    "start": "4976520",
    "end": "4983239"
  },
  {
    "text": "for their ecosystem we have to permeate all ecosystems with this tooling so that everybody who's doing sver can actually",
    "start": "4983239",
    "end": "4989960"
  },
  {
    "text": "do sver as well as we possibly can so maybe that's a great place for people to either help out in rust or look at what",
    "start": "4989960",
    "end": "4997040"
  },
  {
    "text": "you're up to and emulate in their language of choice absolutely and the infrastructure that cargo sver checks is",
    "start": "4997040",
    "end": "5003920"
  },
  {
    "text": "built on uh the core piece is called trustfall it is a weird take on a database query",
    "start": "5003920",
    "end": "5011199"
  },
  {
    "text": "engine that is a topic for a whole other podcast episode at sometime okay but the",
    "start": "5011199",
    "end": "5016280"
  },
  {
    "text": "key thing there is that it's language agnostic so it has bindings for python it works in JavaScript you can you know",
    "start": "5016280",
    "end": "5021800"
  },
  {
    "text": "you can run it in wasm in the web browser if you wanted to you could call it from anything and so you could use it as the",
    "start": "5021800",
    "end": "5028080"
  },
  {
    "text": "foundation of a sver linter for another language that's in fact how my python sver linter works as well",
    "start": "5028080",
    "end": "5035040"
  },
  {
    "text": "and I'm trying to talk Chris into building one for typescript I already have too many projects but if somebody else wants to",
    "start": "5035040",
    "end": "5041880"
  },
  {
    "text": "partner with us on it there you go then what reach out yeah then reach out okay",
    "start": "5041880",
    "end": "5049520"
  },
  {
    "text": "yeah so finish sentence prog I'll let you finish and then I'll yeah and cargo",
    "start": "5049520",
    "end": "5055000"
  },
  {
    "text": "sford checks and trustfall are both completely open source so if someone wants to to come in learn how to write",
    "start": "5055000",
    "end": "5060760"
  },
  {
    "text": "some lints uh check out a weird database maybe write some datab optimizations or",
    "start": "5060760",
    "end": "5065920"
  },
  {
    "text": "you know whatever whatever you're interested in very happy to do that uh like I mentioned earlier I worked with",
    "start": "5065920",
    "end": "5072520"
  },
  {
    "text": "four college students who did some tremendous work and honestly made cargo sver checks into into what it is today",
    "start": "5072520",
    "end": "5079560"
  },
  {
    "text": "so if four people who hadn't even finished College yet could have such a spectacular imp impact on the ecosystem",
    "start": "5079560",
    "end": "5085960"
  },
  {
    "text": "then anyone listening to this podcast could absolutely have a huge impact so come talk to me I'm very happy to help",
    "start": "5085960",
    "end": "5092480"
  },
  {
    "text": "yeah on my end I will say if you're in the typescript community do look at sver",
    "start": "5092480",
    "end": "5098119"
  },
  {
    "text": "ts.org sver DTS the other thing is I'm happy to help",
    "start": "5098119",
    "end": "5104320"
  },
  {
    "text": "someone get up to speed on how you would translate that spec which it's very long",
    "start": "5104320",
    "end": "5109600"
  },
  {
    "text": "and very detailed because it has to be how you would translate that into a",
    "start": "5109600",
    "end": "5114960"
  },
  {
    "text": "query rule set for something like trustfall because I do think we could do",
    "start": "5114960",
    "end": "5120239"
  },
  {
    "text": "it and I think we could do it using a lot of existing infrastructure like typescript ES exellent I don't think it",
    "start": "5120239",
    "end": "5125679"
  },
  {
    "text": "would be a boil the ocean from scratch project but the other thing I'll say is if you want to think about hey how would",
    "start": "5125679",
    "end": "5132679"
  },
  {
    "text": "we do this for Elixir especially as Elixir starts pulling in types and makes a lot of these things even more",
    "start": "5132679",
    "end": "5138639"
  },
  {
    "text": "tractable than it would already be today I'd be very happy to talk to you about what a s- elixir.com",
    "start": "5138639",
    "end": "5147080"
  },
  {
    "text": "a 10,000-word document which you can read through and gets added to on the regular typescript now has one though",
    "start": "5154400",
    "end": "5159840"
  },
  {
    "text": "I'm basically the only maintainer I would love other people to contribute there and if we started building up that",
    "start": "5159840",
    "end": "5166679"
  },
  {
    "text": "kind of ecosystem of projects for a variety of languages what does it look like in C what does it look like in Java",
    "start": "5166679",
    "end": "5173440"
  },
  {
    "text": "and started making that more of a norm what does it look like in Ruby that can also get a flywheel going because",
    "start": "5173440",
    "end": "5179880"
  },
  {
    "text": "someone doing the time to think through that and then a bunch of other people taking the time to Cod that into",
    "start": "5179880",
    "end": "5185800"
  },
  {
    "text": "something like the trustfall rules engine build a schema and ship those kinds of things we could make this a",
    "start": "5185800",
    "end": "5192639"
  },
  {
    "text": "norm that is maybe we're having a five a conversation 5 years from now where tons",
    "start": "5192639",
    "end": "5198320"
  },
  {
    "text": "of languages do this and it's just normal that would be amazing and it's just time and effort and that's a big",
    "start": "5198320",
    "end": "5204639"
  },
  {
    "text": "just on that statement but it is a just these things are actually tractable",
    "start": "5204639",
    "end": "5209719"
  },
  {
    "text": "solvable problems so come talk to me you can find me at chris.com and email and",
    "start": "5209719",
    "end": "5215360"
  },
  {
    "text": "whatnot is all there I'm on I'm really easy I'm at Chris kicho everywhere",
    "start": "5215360",
    "end": "5220520"
  },
  {
    "text": "because it's a globally unique identifier there's only one of me on the planet so right good for you easy to",
    "start": "5220520",
    "end": "5226960"
  },
  {
    "text": "find my blog is predrug because a is a TLD and it's an uncommon enough name oh",
    "start": "5226960",
    "end": "5234239"
  },
  {
    "text": "he's a TLD hacker it's just love it well that cool you guys make sure we get",
    "start": "5234239",
    "end": "5239400"
  },
  {
    "text": "links to all of those things I got Ham's law we have some other stuff that we'll throw into the show notes so everybody",
    "start": "5239400",
    "end": "5246040"
  },
  {
    "text": "can just click through versus having to type and memorize and whatnot very cool Adam anything else my thought after this",
    "start": "5246040",
    "end": "5252560"
  },
  {
    "text": "conversation is that there should be some sort of like Consortium or working group or just like Collective for sver",
    "start": "5252560",
    "end": "5258600"
  },
  {
    "text": "because people who care right because you've got skin of the game you do care and you've got expertise that applies",
    "start": "5258600",
    "end": "5265360"
  },
  {
    "text": "and so just as you said if you want to help somebody else in a different ecosystem you're willing to help them out I feel like there needs to be like a",
    "start": "5265360",
    "end": "5271520"
  },
  {
    "text": "little group of you you all folks who just care enough to cross-pollinate so that the whole entire ecosystem of",
    "start": "5271520",
    "end": "5277679"
  },
  {
    "text": "software gets better because it's not about camps that's why this show is called the change log and not the Rush",
    "start": "5277679",
    "end": "5282760"
  },
  {
    "text": "show or the Ruby show or the whatever show because we cared more more importantly about software at large the",
    "start": "5282760",
    "end": "5287800"
  },
  {
    "text": "intersection of software and business and all the fun things you know about this show that's why we went that route",
    "start": "5287800",
    "end": "5293159"
  },
  {
    "text": "because we cared about software at large open source at large and just really the direction we can all go the culture of software development and so I would",
    "start": "5293159",
    "end": "5299880"
  },
  {
    "text": "encourage you guys to consider if if it doesn't exist make it exist and if you sver nerds yeah sver nerds there you go",
    "start": "5299880",
    "end": "5306600"
  },
  {
    "text": "I like that Jared come join the sver Nerds Community is there a nerds tldd cuz then we could have sver nerds that",
    "start": "5306600",
    "end": "5312320"
  },
  {
    "text": "would be the best there needs to be there should be yeah pred go figure something out awesome thanks guys yeah thank you",
    "start": "5312320",
    "end": "5318840"
  },
  {
    "text": "so much it's been awesome my pleasure yeah thanks for having us thank you for having",
    "start": "5318840",
    "end": "5324239"
  },
  {
    "text": "us okay sver nerds unite it is time to communicate better software through",
    "start": "5325280",
    "end": "5331600"
  },
  {
    "text": "versioning and I'm I've changed my mind during this podcast I came into the show and maybe you can tell because I was",
    "start": "5331600",
    "end": "5339040"
  },
  {
    "text": "kind of against sver it's kind of hard to understand it's generally been problematic for me others may have",
    "start": "5339040",
    "end": "5345320"
  },
  {
    "text": "different experience but after hearing prog and Chris's arguments and their",
    "start": "5345320",
    "end": "5350360"
  },
  {
    "text": "stances and their experiences and their passion really and more so their expertise in sver I'm",
    "start": "5350360",
    "end": "5359199"
  },
  {
    "text": "thankful they're on the front lines for one and number two I'm kind of for it it does communicate it has a place and we",
    "start": "5359199",
    "end": "5366400"
  },
  {
    "text": "just need to keep working to improve it working to adopt it and working to better help folks understand exactly",
    "start": "5366400",
    "end": "5372880"
  },
  {
    "text": "what sver is where its place is and how to use it what do you think come hang with us in Slack",
    "start": "5372880",
    "end": "5380230"
  },
  {
    "text": "[Music]",
    "start": "5380230",
    "end": "5385479"
  },
  {
    "text": "drop the ads get a sticker pack bonus content closer to the metal all the fun",
    "start": "5394239",
    "end": "5399960"
  },
  {
    "text": "things you get when you directly support us through changw Plus+ once again Chang",
    "start": "5399960",
    "end": "5405600"
  },
  {
    "text": "law.com Plus+ okay a massive thank you to my new",
    "start": "5405600",
    "end": "5410840"
  },
  {
    "text": "friends over at reto well I say new friends because I made some new friends",
    "start": "5410840",
    "end": "5416520"
  },
  {
    "text": "I went a couple layers deeper I talked to David Shu the founder and CEO I",
    "start": "5416520",
    "end": "5423280"
  },
  {
    "text": "talked to Tamar Ben sharkar on behalf of neon recently and I've been talking to Daniel Kim behind the scenes making all",
    "start": "5423280",
    "end": "5429159"
  },
  {
    "text": "that happen it's so fun to work with partners and sponsors like rol and they're awesome check them out ret.com",
    "start": "5429159",
    "end": "5436280"
  },
  {
    "text": "and of course to our good friend Foss abuka DJ representing socket socket",
    "start": "5436280",
    "end": "5442440"
  },
  {
    "text": "dodev ship faster Security dependencies check them out socket dodev and also to",
    "start": "5442440",
    "end": "5449320"
  },
  {
    "text": "our partners over at fly that's the home of changel law.com we love them you",
    "start": "5449320",
    "end": "5454639"
  },
  {
    "text": "should love them too check them out fly.io and to the beat freak in Residence break master cylinder those",
    "start": "5454639",
    "end": "5461719"
  },
  {
    "text": "beats so banging so banging okay plus plus subscribers stick around everyone",
    "start": "5461719",
    "end": "5467119"
  },
  {
    "text": "else we'll see you on",
    "start": "5467119",
    "end": "5471000"
  },
  {
    "text": "Friday Fredick you wrote one of my favorite blog posts of the year you wrote it on April Fool's Day it was not",
    "start": "5472920",
    "end": "5480360"
  },
  {
    "text": "a trick it actually happened this was the the why I only works when it's raining and I didn't know you then I",
    "start": "5480360",
    "end": "5487880"
  },
  {
    "text": "know you now I'm happy to know you I shared it on chain dog news cuz I love this little story share with Adam I'm",
    "start": "5487880",
    "end": "5493920"
  },
  {
    "text": "not sure if Adam saw this Chris I'm you're you're nodding along so you know this story pretty well this is just a hilarious fact of life in the common in",
    "start": "5493920",
    "end": "5502280"
  },
  {
    "text": "the modern world can you tell that story just briefly for our Plus+ people absolutely so it's a completely true",
    "start": "5502280",
    "end": "5508040"
  },
  {
    "text": "story uh it was part of uh a project called April cools that a friend of mine started uh we decided that it was a",
    "start": "5508040",
    "end": "5514719"
  },
  {
    "text": "little bit tacky to to lie to people on April 1st and instead decided to",
    "start": "5514719",
    "end": "5520360"
  },
  {
    "text": "pleasantly surprise people with true stories that are on topics unrelated to our usual beat",
    "start": "5520360",
    "end": "5527480"
  }
]