[
  {
    "text": "imagine what happens if you",
    "start": "80",
    "end": "1839"
  },
  {
    "text": "have one of these objects that's a",
    "start": "1839",
    "end": "3760"
  },
  {
    "text": "little bit complicated right maybe it's",
    "start": "3760",
    "end": "5200"
  },
  {
    "text": "big maybe it's small but maybe it's a",
    "start": "5200",
    "end": "6480"
  },
  {
    "text": "struct and it's got some slice pointers",
    "start": "6480",
    "end": "8400"
  },
  {
    "text": "maybe you're actually like slicing the",
    "start": "8400",
    "end": "10480"
  },
  {
    "text": "front off of those slice pointers little",
    "start": "10480",
    "end": "12160"
  },
  {
    "text": "by little because you're maybe you're",
    "start": "12160",
    "end": "13360"
  },
  {
    "text": "implementing a cue or something whatever",
    "start": "13360",
    "end": "15280"
  },
  {
    "text": "it is that we do when we slice off the",
    "start": "15280",
    "end": "16880"
  },
  {
    "text": "heads of our",
    "start": "16880",
    "end": "18160"
  },
  {
    "text": "our slice pointers is it as it turns out",
    "start": "18160",
    "end": "20320"
  },
  {
    "text": "the garbage collector cannot free the",
    "start": "20320",
    "end": "22880"
  },
  {
    "text": "front half of slices if you take off the",
    "start": "22880",
    "end": "25359"
  },
  {
    "text": "first five elements of a slice and then",
    "start": "25359",
    "end": "27359"
  },
  {
    "text": "you don't change what that slice is",
    "start": "27359",
    "end": "29119"
  },
  {
    "text": "pointing to that that array never",
    "start": "29119",
    "end": "30880"
  },
  {
    "text": "changes let's say those first five",
    "start": "30880",
    "end": "32880"
  },
  {
    "text": "elements will stay on the heap forever",
    "start": "32880",
    "end": "34719"
  },
  {
    "text": "and let's say that they actually are",
    "start": "34719",
    "end": "35920"
  },
  {
    "text": "pointers to some other giant objects and",
    "start": "35920",
    "end": "37680"
  },
  {
    "text": "those those objects are basically lost",
    "start": "37680",
    "end": "39360"
  },
  {
    "text": "and you'll never really know you can get",
    "start": "39360",
    "end": "41120"
  },
  {
    "text": "into really really bad territory with",
    "start": "41120",
    "end": "43360"
  },
  {
    "text": "stuff like that and that's happened to",
    "start": "43360",
    "end": "44879"
  },
  {
    "text": "me several times working on cockroachdb",
    "start": "44879",
    "end": "47520"
  },
  {
    "text": "which is this big go program that has a",
    "start": "47520",
    "end": "49600"
  },
  {
    "text": "lot of tricky stuff to deal with memory",
    "start": "49600",
    "end": "52160"
  },
  {
    "text": "yeah that's one that uh i've seen myself",
    "start": "52160",
    "end": "54480"
  },
  {
    "text": "because i was trying to teach people how",
    "start": "54480",
    "end": "56320"
  },
  {
    "text": "to use a key or how to write a q and go",
    "start": "56320",
    "end": "58079"
  },
  {
    "text": "like the simple implementation you want",
    "start": "58079",
    "end": "59680"
  },
  {
    "text": "to do that but then you also have to",
    "start": "59680",
    "end": "61120"
  },
  {
    "text": "like have the caveat of like if this",
    "start": "61120",
    "end": "63199"
  },
  {
    "text": "goes long enough it's eventually going",
    "start": "63199",
    "end": "64960"
  },
  {
    "text": "to break because you're just going to",
    "start": "64960",
    "end": "66960"
  },
  {
    "text": "definitely keep using memory so it's",
    "start": "66960",
    "end": "69119"
  },
  {
    "text": "like hard because you're like i want to",
    "start": "69119",
    "end": "70159"
  },
  {
    "text": "show you the simple version but i also",
    "start": "70159",
    "end": "72240"
  },
  {
    "text": "don't want you to have something in your",
    "start": "72240",
    "end": "73439"
  },
  {
    "text": "code that potentially is going to be",
    "start": "73439",
    "end": "74799"
  },
  {
    "text": "problematic",
    "start": "74799",
    "end": "76390"
  },
  {
    "text": "[Music]",
    "start": "76390",
    "end": "80548"
  }
]