[
  {
    "text": "there was Collective frustration by everyone and I think that was a moment",
    "start": "40",
    "end": "5319"
  },
  {
    "text": "in View's history I think the the most controversial thing probably happened that that in View's history where they",
    "start": "5319",
    "end": "11960"
  },
  {
    "text": "were like oh this is a mistake we've made and we need to figure out how to be better and I think I've seen a lot of",
    "start": "11960",
    "end": "17640"
  },
  {
    "text": "progress from that point on yeah if anything it's made me want to use view more because I'm like this is",
    "start": "17640",
    "end": "25560"
  },
  {
    "text": "great B with for change log is provided by fastly Le more at fast.com we move",
    "start": "25880",
    "end": "32398"
  },
  {
    "text": "fast and fix things here at change law because of rbar check them out at rar.com and we're hosted on Leno Cloud",
    "start": "32399",
    "end": "38680"
  },
  {
    "text": "servers head to lin.com changelog this episode is brought to you",
    "start": "38680",
    "end": "44840"
  },
  {
    "text": "by robbar move fast and fix things resolve errors in minutes and deploy with confidence head to robot.com",
    "start": "44840",
    "end": "52000"
  },
  {
    "text": "changelog requested demo get started today it's loved by developers trusted by Enterprises and most of all we use it",
    "start": "52000",
    "end": "59600"
  },
  {
    "text": "here at Chang log move fast and fix things with rollbar once again rar.com",
    "start": "59600",
    "end": "66810"
  },
  {
    "text": "[Music]",
    "start": "66810",
    "end": "69930"
  },
  {
    "text": "changelog welcome to JS party your weekly celebration of JavaScript and the",
    "start": "76640",
    "end": "81960"
  },
  {
    "text": "web on next week's episode I assemble a team of web RTC experts maybe you've heard of them Seuss Hinton frosta DJ and",
    "start": "81960",
    "end": "88880"
  },
  {
    "text": "Michael Rogers and we do a deep dive on this practically ubiquitous yet still complicated API it's an amazing episode",
    "start": "88880",
    "end": "95600"
  },
  {
    "text": "if you just can't wait the video is on our YouTube channel otherwise subscribe to the Pod if you haven't and be notified when that one drops right now",
    "start": "95600",
    "end": "102880"
  },
  {
    "text": "we've got the framework Wars we've got T and shout outs hey it's party time [Music]",
    "start": "102880",
    "end": "111220"
  },
  {
    "text": "y'all hello and welcome to another exciting JS party I'm your host this",
    "start": "114079",
    "end": "119240"
  },
  {
    "text": "week Nick and I am joined by three fantastic panelists first off kall how's it going kall hello it's good welcome",
    "start": "119240",
    "end": "127759"
  },
  {
    "text": "welcome and also Divia Divia welcome hello hello and finally last but",
    "start": "127759",
    "end": "134160"
  },
  {
    "text": "definitely not least is Chris or AKA Bon skull Bon skull how's it going howdy we",
    "start": "134160",
    "end": "140640"
  },
  {
    "text": "have an exciting show lined up for you today uh we are going to be talking first off about the framework Wars and",
    "start": "140640",
    "end": "146800"
  },
  {
    "text": "specifically what is new in view what is coming down the pipeline apparently",
    "start": "146800",
    "end": "152160"
  },
  {
    "text": "soonish with V3 and our resident Vue expert Divia is going to walk us through that Divia do you want to tell us some",
    "start": "152160",
    "end": "158440"
  },
  {
    "text": "of the exciting things coming in V3 yeah definitely so we've talked a lot I think in previous episodes cable and I have",
    "start": "158440",
    "end": "165560"
  },
  {
    "text": "gabbed on and on about V3 and we've speculated many times as to when V3 will",
    "start": "165560",
    "end": "173280"
  },
  {
    "text": "appear and come to the four without knowing exactly when that date is but I",
    "start": "173280",
    "end": "178319"
  },
  {
    "text": "think it was the the beginning of this month so July 1st avue opened an issue",
    "start": "178319",
    "end": "183560"
  },
  {
    "text": "in the rfc's uh repo for vew with the status update which is something that",
    "start": "183560",
    "end": "189239"
  },
  {
    "text": "we've been waiting for for a really long time because I think view through was slated to be released at the end of 2019",
    "start": "189239",
    "end": "196080"
  },
  {
    "text": "and then they were like beginning 2020 I think eventually it was around Q2 so we are in sort of Q2 are we Q2 yeah and so",
    "start": "196080",
    "end": "204920"
  },
  {
    "text": "there's finally an actual status update it's not super clear as to the exact date that the release will happen but",
    "start": "204920",
    "end": "212120"
  },
  {
    "text": "there is like a long thread that points to the targets that they have at the moment which is actually the closest",
    "start": "212120",
    "end": "217920"
  },
  {
    "text": "that they've ever gone to telling you a timeline and so from that particular doc",
    "start": "217920",
    "end": "223280"
  },
  {
    "text": "which we'll copy in the in the notes it says that ie1 compatibility will be by",
    "start": "223280",
    "end": "229640"
  },
  {
    "text": "July 2020 I would say end of July because we're currently at the beginning of July we haven't heard anything yet so",
    "start": "229640",
    "end": "236079"
  },
  {
    "text": "um July 2020 I think is i1 compatibility as well as the migration guide which I think is going to be really important",
    "start": "236079",
    "end": "242560"
  },
  {
    "text": "for people to migrate their applications but in terms of using V3 I believe it's fairly production ready at the moment",
    "start": "242560",
    "end": "249840"
  },
  {
    "text": "and by production ready I mean it's ready if you don't care about i1 otherwise it's not production ready",
    "start": "249840",
    "end": "256280"
  },
  {
    "text": "but it is ready to be used I think they've compartmentalized various parts of u3 so you can use the composition API",
    "start": "256280",
    "end": "263400"
  },
  {
    "text": "you can use vew router in the V3 form and so on and so you can pick and choose and use various parts of u3 and updated",
    "start": "263400",
    "end": "271960"
  },
  {
    "text": "the updated release without having to wait for a lot of these pieces if you don't care about that very cool so",
    "start": "271960",
    "end": "278160"
  },
  {
    "text": "that's actually really exciting I think the final release date when they're like everything will be cut and dry done is",
    "start": "278160",
    "end": "284000"
  },
  {
    "text": "August according to this document it says early August is when final release will happen when you can sort of say",
    "start": "284000",
    "end": "291560"
  },
  {
    "text": "it's actually fully ready but yeah actually that's super soon so that's like you know in a month or two we'll",
    "start": "291560",
    "end": "297560"
  },
  {
    "text": "have you3 finally here that's fingers crossed that this deadline does not extend further but I would say that's",
    "start": "297560",
    "end": "305360"
  },
  {
    "text": "the most exciting thing I think and alongside that way I think you might have seen But Evan has also been talking",
    "start": "305360",
    "end": "311240"
  },
  {
    "text": "a lot about various experiments he's been doing with view so Vite is I think we've talked about it in a previous",
    "start": "311240",
    "end": "317160"
  },
  {
    "text": "episode was something that he just released one day which I assume was just like while working on view3 decided to",
    "start": "317160",
    "end": "324800"
  },
  {
    "text": "do something else he's dog fooding dog fooding essentially view3 and modern",
    "start": "324800",
    "end": "330560"
  },
  {
    "text": "experimental standards like ASM and so on I think he uses snow pack so that",
    "start": "330560",
    "end": "335840"
  },
  {
    "text": "that's also a really cool thing that came out of the overall like development in dog fooding vi3 so there's so much",
    "start": "335840",
    "end": "341800"
  },
  {
    "text": "that's happening in that space I think in the next two months you'll see a lot of like exciting developments and",
    "start": "341800",
    "end": "347520"
  },
  {
    "text": "probably a bunch of blog posts and comments and tweets very cool yeah",
    "start": "347520",
    "end": "352840"
  },
  {
    "text": "August is uh depending on how you view time right now it's an eternity away or it's tomorrow it's exactly or both oh",
    "start": "352840",
    "end": "361960"
  },
  {
    "text": "time is so bizarre right now well and thinking about it I know Evan youu has",
    "start": "361960",
    "end": "367400"
  },
  {
    "text": "at least one kid and I don't know how many of the other folks working on the view3 release also have kids but I feel",
    "start": "367400",
    "end": "372960"
  },
  {
    "text": "like we can give them a little slack on shipping late at least given mine and every other parents experience over the",
    "start": "372960",
    "end": "380000"
  },
  {
    "text": "last few months shipping anything right now really feels like an accomplishment so yeah yeah uh but just to kind of",
    "start": "380000",
    "end": "387440"
  },
  {
    "text": "touch a little bit on the history of view3 uh because we've definitely talked about it before and surprise surprise",
    "start": "387440",
    "end": "393800"
  },
  {
    "text": "one of the things that I specifically remember about it is that it's being Rewritten in typescript I don't know why that part would stick in my head but it",
    "start": "393800",
    "end": "401120"
  },
  {
    "text": "did and uh also didn't it start off as kind of a private repo that just the",
    "start": "401120",
    "end": "406160"
  },
  {
    "text": "core team was kind of working on in secret for a while to kind of get their ideas flushed out and then obviously",
    "start": "406160",
    "end": "411759"
  },
  {
    "text": "it's been opened up since then is that right yes so one thing that was pretty interesting is the development process",
    "start": "411759",
    "end": "417680"
  },
  {
    "text": "for vue3 happened right about at the same time as the view team also started really using an RFC process request for",
    "start": "417680",
    "end": "425520"
  },
  {
    "text": "comments process so they kept the core development experiments early in view3",
    "start": "425520",
    "end": "432680"
  },
  {
    "text": "as a private repo but they were broadcasting a lot of the proposals for",
    "start": "432680",
    "end": "438240"
  },
  {
    "text": "features in public and working out through those in public which to me was a really interesting balance of let's",
    "start": "438240",
    "end": "445759"
  },
  {
    "text": "not have the experience where we have something super raw and un ready and we get 20 million issues and pull requests",
    "start": "445759",
    "end": "452280"
  },
  {
    "text": "from people who don't understand what we're doing but let's also have this process be open so folks can actually",
    "start": "452280",
    "end": "457800"
  },
  {
    "text": "get their opinions in and it's not just happening in secret yeah I imagine that that's where the prologue version of you",
    "start": "457800",
    "end": "466159"
  },
  {
    "text": "died potentially oh Nick I've missed you I really like the RFC process",
    "start": "466159",
    "end": "473919"
  },
  {
    "text": "because I think it was also a really good way for the community to feel heard because for the longest time there this",
    "start": "473919",
    "end": "480599"
  },
  {
    "text": "uh concept that V had like aenue is the the bdfl of Vu and he held the Reigns",
    "start": "480599",
    "end": "487919"
  },
  {
    "text": "and there was always speculation as to what would happen if a boss hit Evan or a dinosaur ate him or something and he",
    "start": "487919",
    "end": "495039"
  },
  {
    "text": "no longer could be part of the project and so the RFC was also in line with making sure that the community had there",
    "start": "495039",
    "end": "500879"
  },
  {
    "text": "was transparency so people knew what was being worked on and I think it was also the beginning of the core team and",
    "start": "500879",
    "end": "507560"
  },
  {
    "text": "various members of the core team taking more respons ibility for core because a lot of them were part of they owned",
    "start": "507560",
    "end": "513640"
  },
  {
    "text": "various parts of the ecosystem like the router and vux and so on but I think call was a lot of it Evan's",
    "start": "513640",
    "end": "519399"
  },
  {
    "text": "responsibility and so I think with the release of an RFC process and more",
    "start": "519399",
    "end": "524640"
  },
  {
    "text": "transparency the uh various members of the core team started being more involved with core and I think Evan wanted that as well and he's talked",
    "start": "524640",
    "end": "531640"
  },
  {
    "text": "about wanting that and making sure that everyone is part of that so that he could slowly you know seed",
    "start": "531640",
    "end": "537040"
  },
  {
    "text": "responsibility to people and I think that that's really cool because it also shows the community aspect of view and",
    "start": "537040",
    "end": "543720"
  },
  {
    "text": "we've talked about this before that the success of a framework has to do with the people who use it as well and I",
    "start": "543720",
    "end": "549480"
  },
  {
    "text": "think sometimes people forget that because they're like my framework uses X technology and it's awesome and it",
    "start": "549480",
    "end": "554839"
  },
  {
    "text": "doesn't matter who uses it it's just like this technology speaks for itself and people will use it because of how",
    "start": "554839",
    "end": "560079"
  },
  {
    "text": "great it is but I think that is a Mis Noma and view has shown through its",
    "start": "560079",
    "end": "566160"
  },
  {
    "text": "actions and through all these processes that they have in place that they care about the people who use it a lot and they actually listen so the RFC process",
    "start": "566160",
    "end": "572920"
  },
  {
    "text": "is not just like a shell where they're like oh let's pretend we listen to people and then close the issue and",
    "start": "572920",
    "end": "578079"
  },
  {
    "text": "never listen to them but I've actually seen like Evan taking a lot of the rfc's",
    "start": "578079",
    "end": "583680"
  },
  {
    "text": "into consideration and actually changing apis as a result so that's actually really great to see that yeah there was",
    "start": "583680",
    "end": "589600"
  },
  {
    "text": "a pretty dramatic shift in what became the composition API shook out the",
    "start": "589600",
    "end": "596320"
  },
  {
    "text": "composition API started out as the functional API proposal which was the hooks inspired change to",
    "start": "596320",
    "end": "602839"
  },
  {
    "text": "view that I'm probably the most excited of anything in view3 about that and some of the stuff that that enables but the",
    "start": "602839",
    "end": "609959"
  },
  {
    "text": "first version of that got a lot of blowback and it was super impressive to me to watch that process play out and I",
    "start": "609959",
    "end": "618079"
  },
  {
    "text": "mean that's challenging Community Management how do you nudge people towards change while also accepting",
    "start": "618079",
    "end": "624600"
  },
  {
    "text": "legitimate criticisms and using that to make the final outcome better but I think and the whole team there did a",
    "start": "624600",
    "end": "630680"
  },
  {
    "text": "great job yeah it's always hard because I think Everyone's a Critic right and",
    "start": "630680",
    "end": "636000"
  },
  {
    "text": "not a lot of people are doing the work and everyone's just quick to criticize and so it's also easy to get really",
    "start": "636000",
    "end": "641399"
  },
  {
    "text": "defensive and I've seen Frameworks do that where the moment someone raises an issue they get automatically defensive",
    "start": "641399",
    "end": "647440"
  },
  {
    "text": "and they double down on the decision they've made and within view there was sort of this like criticism that came up",
    "start": "647440",
    "end": "653160"
  },
  {
    "text": "in the beginning because with the functional API in particular that was actually really controversial because",
    "start": "653160",
    "end": "658399"
  },
  {
    "text": "when it was released they talked about and this was I think April or May of last year when they released the",
    "start": "658399",
    "end": "664560"
  },
  {
    "text": "functional API RFC and it eluded to the possibility of the functional API being",
    "start": "664560",
    "end": "670839"
  },
  {
    "text": "a new syntax and not being Backward Compatible so V3 would just move away from current V2 syntax and move into",
    "start": "670839",
    "end": "677720"
  },
  {
    "text": "this territory and like not actually support V2 at all there was Collective",
    "start": "677720",
    "end": "684240"
  },
  {
    "text": "frustration by everyone and I think that was a moment in View's history I think",
    "start": "684240",
    "end": "690200"
  },
  {
    "text": "the the most controversial thing probably happened that that in View's history where they were like oh this is",
    "start": "690200",
    "end": "696680"
  },
  {
    "text": "a mistake we've made and we need to figure out how to be better and I think I've seen a lot of progress from that",
    "start": "696680",
    "end": "702440"
  },
  {
    "text": "point on yeah if anything it's made me want to use view more because I'm like this is great well and contrast it to",
    "start": "702440",
    "end": "709480"
  },
  {
    "text": "the angular debacle of several years back oh yeah that's what having the community engagement and the RFC process",
    "start": "709480",
    "end": "716079"
  },
  {
    "text": "gets you is you see how big of a debacle it's going to be before it's written in code and released and you're able to",
    "start": "716079",
    "end": "722800"
  },
  {
    "text": "head that off at the pass you're talking about like angular 24 that that whole area yeah so angular one to angular 2",
    "start": "722800",
    "end": "731120"
  },
  {
    "text": "there was no migration path there was no anything it's still a confusion to this day I mean it reminds me of the Python",
    "start": "731120",
    "end": "737360"
  },
  {
    "text": "23 debacle as well right like if you don't think about how you're going to migrate people off of these things or",
    "start": "737360",
    "end": "744760"
  },
  {
    "text": "how you're going to maintain backwards compatibility one or the other you got to pick one then you end up in this",
    "start": "744760",
    "end": "750000"
  },
  {
    "text": "bifurcated world where you're supporting both and it's a nightmare yeah I think react does the same thing as well they",
    "start": "750000",
    "end": "755839"
  },
  {
    "text": "have quite a transparent RFC process I don't know the internals of the decision-making process as well because",
    "start": "755839",
    "end": "762839"
  },
  {
    "text": "they're a bit unique because a company is tied to the framework it's not completely Community Driven but I do see",
    "start": "762839",
    "end": "770760"
  },
  {
    "text": "at least the intention is there with the RFC process but of course slightly different because they do have company",
    "start": "770760",
    "end": "776959"
  },
  {
    "text": "goals to to meet as well there so that's awesome hearing that they're doing",
    "start": "776959",
    "end": "783199"
  },
  {
    "text": "Community Management really well that's something that is very easy to mess up and very hard to get right and it seems",
    "start": "783199",
    "end": "789839"
  },
  {
    "text": "like the RFC process is a really good way to not just take that Community feedback but also as you've pointed out",
    "start": "789839",
    "end": "796839"
  },
  {
    "text": "they are learning from that and integrating Community feedback into creating a view that everyone wants to",
    "start": "796839",
    "end": "802720"
  },
  {
    "text": "use which is really great so on that what are some of the big changes between vue2 and vue3 um is there any anything",
    "start": "802720",
    "end": "810000"
  },
  {
    "text": "majorly drastic well as a user you might be excited to hear you know drops in",
    "start": "810000",
    "end": "815760"
  },
  {
    "text": "average size from what is it 20 or 30 kilobytes minifi to 10ish drops in CPU",
    "start": "815760",
    "end": "822800"
  },
  {
    "text": "usage I heard an estimate that EV put out of it cuts it by a factor of 10 so",
    "start": "822800",
    "end": "828639"
  },
  {
    "text": "your 10x less CPU usage in normal use",
    "start": "828639",
    "end": "833800"
  },
  {
    "text": "and the probably the most exciting thing to me as somebody who loves to just like",
    "start": "833800",
    "end": "839480"
  },
  {
    "text": "geek out on stuff is that they're exposing the reactivity API through this composition API so that you can not just",
    "start": "839480",
    "end": "847079"
  },
  {
    "text": "use it within view blessed constructs but really build structures around it",
    "start": "847079",
    "end": "853519"
  },
  {
    "text": "build your own compositions based on reactivity and I think honestly the web",
    "start": "853519",
    "end": "860160"
  },
  {
    "text": "World especially the front end world is moving to reactivity based approaches and mental models and thinking across",
    "start": "860160",
    "end": "866160"
  },
  {
    "text": "the board and I'm super excited to see that being exposed as raw primitive and rather than having it just something",
    "start": "866160",
    "end": "871639"
  },
  {
    "text": "that magically happens as a part of the framework yeah I think that one's a big one in terms of user land changes",
    "start": "871639",
    "end": "879560"
  },
  {
    "text": "because a lot of it is performance changes and the way they do tree shaking has changed the bundle size has changed",
    "start": "879560",
    "end": "885360"
  },
  {
    "text": "I think the the biggest differences in terms of what users will notice from using or writing view is like First",
    "start": "885360",
    "end": "891959"
  },
  {
    "text": "Class Type support and then also as kall said the composition API is a really big one because that's actually still visive",
    "start": "891959",
    "end": "899639"
  },
  {
    "text": "in the community even though there was an R RFC process and it was heavily talked about online on Twitter on GitHub",
    "start": "899639",
    "end": "905680"
  },
  {
    "text": "and various other places you still hear people getting really like upset about it or really excited about it this it's",
    "start": "905680",
    "end": "911279"
  },
  {
    "text": "very divisive because of how different it is with using V2 currently and that's",
    "start": "911279",
    "end": "918040"
  },
  {
    "text": "mainly because it as kall mentioned it's just like encapsulating the reactivity system of view so you could just use",
    "start": "918040",
    "end": "925320"
  },
  {
    "text": "like functions rather than view components and so so the view or the",
    "start": "925320",
    "end": "930519"
  },
  {
    "text": "components are basically moved out or isolated from the functionality which",
    "start": "930519",
    "end": "935680"
  },
  {
    "text": "makes reusability a bit easier to some people it's a bit more complicated I would argue it's easier um but I've",
    "start": "935680",
    "end": "943319"
  },
  {
    "text": "drank the Kool-Aid so I'm all for that but it's just really",
    "start": "943319",
    "end": "948360"
  },
  {
    "text": "interesting and I think it'll be neat to see what kind of patterns emerge from this because from my understanding with",
    "start": "948360",
    "end": "955560"
  },
  {
    "text": "the composition API there isn't really like a proper pattern as to how to write it so for example the way I've been",
    "start": "955560",
    "end": "962560"
  },
  {
    "text": "using the composition API I create a functions folder in my source folder and then I write the functions and and so",
    "start": "962560",
    "end": "969600"
  },
  {
    "text": "it's very different because with regular patterns in view you if you have components it's in a components folder",
    "start": "969600",
    "end": "975839"
  },
  {
    "text": "and there's a sort of a tried and true pattern for how you would use them across an application and I think with",
    "start": "975839",
    "end": "981360"
  },
  {
    "text": "the composition API they've yet to emerge patterns because people it's not widely adopted enough for that so it'll",
    "start": "981360",
    "end": "987759"
  },
  {
    "text": "be interesting to see what kinds of things emerge yeah I feel like the hooks ecosystem around react",
    "start": "987759",
    "end": "994839"
  },
  {
    "text": "took a solid six to9 months to really develop into good",
    "start": "994839",
    "end": "1001600"
  },
  {
    "text": "patterns libraries established best practices and all of that and I expect",
    "start": "1001600",
    "end": "1006720"
  },
  {
    "text": "we'll see a similar Thing Once view3 actually ships yeah so are those composition functions do they kind of",
    "start": "1006720",
    "end": "1013040"
  },
  {
    "text": "parallel hooks I don't actually know much about view they are hooks inspired",
    "start": "1013040",
    "end": "1018440"
  },
  {
    "text": "but not hooks exactly equivalent sure I honestly my impression of them is they",
    "start": "1018440",
    "end": "1025079"
  },
  {
    "text": "feel more naturally continuous from the way that Vue felt before whereas hooks",
    "start": "1025079",
    "end": "1031839"
  },
  {
    "text": "was a big mental shift in how react functioned but that's a personal opinion",
    "start": "1031839",
    "end": "1038480"
  },
  {
    "text": "I know there are folks who disagree and say no this is too big of a change this is following on and it's really",
    "start": "1038480",
    "end": "1045000"
  },
  {
    "text": "complicated very cool well yeah that looks like something that going to be very exciting to play around with in",
    "start": "1045000",
    "end": "1050799"
  },
  {
    "text": "just a few short years or tomorrow depending on how you're looking at it so we will look forward to talking more",
    "start": "1050799",
    "end": "1056160"
  },
  {
    "text": "about V3 as it comes [Music]",
    "start": "1056160",
    "end": "1067490"
  },
  {
    "text": "out what up party animals here's some news that you may not have heard yet Gatsby now has a partnership program if",
    "start": "1070840",
    "end": "1077919"
  },
  {
    "text": "you are building gat gby sites for clients or you're not yet but you wish you were you can now grow that with",
    "start": "1077919",
    "end": "1083520"
  },
  {
    "text": "confidence by getting support and resources directly from the Gatsby team become a Gatsby certified partner today",
    "start": "1083520",
    "end": "1090000"
  },
  {
    "text": "to accelerate your growth alongside their amazing ecosystem get exclusive access to Gatsby's product road map beta",
    "start": "1090000",
    "end": "1096440"
  },
  {
    "text": "test new features access training materials and connect with the Gatsby team there is a whole bundle of",
    "start": "1096440",
    "end": "1102320"
  },
  {
    "text": "partnership benefits the sky is the limit so check out gasby partnership program using the link in the show notes",
    "start": "1102320",
    "end": "1108159"
  },
  {
    "text": "or point your browser to Gatsby js. c/ changelog once again there's a link in",
    "start": "1108159",
    "end": "1114240"
  },
  {
    "text": "your show notes or gatsbyjs doccom SL",
    "start": "1114240",
    "end": "1119919"
  },
  {
    "text": "[Music]",
    "start": "1125810",
    "end": "1137720"
  },
  {
    "text": "changelog now in this segment we're going to talk about things that we've learned I won't",
    "start": "1137720",
    "end": "1143880"
  },
  {
    "text": "say today I've learned because maybe I didn't learn that much by lunchtime today but recently I have learned some",
    "start": "1143880",
    "end": "1152280"
  },
  {
    "text": "cool things and I'm sure the other panelists have as well so let's share some cool things that we've learned uh",
    "start": "1152280",
    "end": "1159640"
  },
  {
    "text": "recently and to start us off kall do you want to start sure so I have been doing",
    "start": "1159640",
    "end": "1165960"
  },
  {
    "text": "a lot of work in react recently contrast to our view episode early and learning about different pieces and things of it",
    "start": "1165960",
    "end": "1172280"
  },
  {
    "text": "and I ran into a problem that I wasn't sure how to solve and ended up learning something about contexts and how context",
    "start": "1172280",
    "end": "1179240"
  },
  {
    "text": "works so for those who aren't super familiar contexts are a way to avoid the",
    "start": "1179240",
    "end": "1184880"
  },
  {
    "text": "prop drilling problem where you have some data that is shared through many many layers of components and so you can",
    "start": "1184880",
    "end": "1192799"
  },
  {
    "text": "set up a context provider which essentially says here's some data and possibly some functions but here's some",
    "start": "1192799",
    "end": "1198919"
  },
  {
    "text": "data that I'm going to make available and then any one of the children below",
    "start": "1198919",
    "end": "1204400"
  },
  {
    "text": "that context can access that data and I had a situation where I was providing",
    "start": "1204400",
    "end": "1210000"
  },
  {
    "text": "some functions and I wanted them to have different defaults at different layers of the hierarchy so I for example wanted",
    "start": "1210000",
    "end": "1216880"
  },
  {
    "text": "uh report to be able to insert additional context to provide a set of defaults for those functions and I was",
    "start": "1216880",
    "end": "1223120"
  },
  {
    "text": "trying to figure out how do I do it do I pull that context and modify it or things like that and what I learned is contexts are adowable they have a",
    "start": "1223120",
    "end": "1231240"
  },
  {
    "text": "particular key for the provider that it is that you're going to do it and you can load that context in one location",
    "start": "1231240",
    "end": "1237760"
  },
  {
    "text": "and then provide a shadow of it that might be a changed version or a completely different implementation but",
    "start": "1237760",
    "end": "1244120"
  },
  {
    "text": "that is tied into that same context provider and everything that's a child",
    "start": "1244120",
    "end": "1249760"
  },
  {
    "text": "of you will get that new version so I was able to have in this case it was a translation service and I had a translation service with different",
    "start": "1249760",
    "end": "1256440"
  },
  {
    "text": "defaults that I was just I would take take the original context I would get any information that it had I would add",
    "start": "1256440",
    "end": "1262520"
  },
  {
    "text": "additional information and create a new version of the translation service and provide it to my children and so that's",
    "start": "1262520",
    "end": "1268799"
  },
  {
    "text": "what I learned is how do you combine and override context you do it by taking advantage of this shadowing approach",
    "start": "1268799",
    "end": "1275000"
  },
  {
    "text": "that is awesome maybe I'm not following along fully but does it make it easier",
    "start": "1275000",
    "end": "1280039"
  },
  {
    "text": "harder to test with that like being able to set those or does it not really change that good question so I think it",
    "start": "1280039",
    "end": "1289080"
  },
  {
    "text": "depends a little bit on what layers you're testing in okay well actually anytime you have context what it means is that the component that you're",
    "start": "1289080",
    "end": "1296559"
  },
  {
    "text": "testing is dependent not only on the props that are being passed in but the context that is being provided and so",
    "start": "1296559",
    "end": "1302320"
  },
  {
    "text": "that's something that you have to take into account in your testing and in this case now you have two different ways",
    "start": "1302320",
    "end": "1309120"
  },
  {
    "text": "that that context being provided could be set up so potentially you would have to take that into account in your",
    "start": "1309120",
    "end": "1314679"
  },
  {
    "text": "testing but I think you know it's still reasonably well decoupled right it's",
    "start": "1314679",
    "end": "1319760"
  },
  {
    "text": "still like you have to test each of these providers that you're creating and then you have to test that the",
    "start": "1319760",
    "end": "1325000"
  },
  {
    "text": "underlying components can deal with the types of things that are being provided but the API was still consistent so the",
    "start": "1325000",
    "end": "1332000"
  },
  {
    "text": "the component testing in this case didn't have to change you called the same functions you call them in the same way and in fact that's probably pretty",
    "start": "1332000",
    "end": "1337960"
  },
  {
    "text": "important as a principle you need to make the context that you're providing provide exactly the same API that it had",
    "start": "1337960",
    "end": "1346880"
  },
  {
    "text": "previously so component testing didn't change and it was just essentially",
    "start": "1346880",
    "end": "1352240"
  },
  {
    "text": "testing two different forms of the context provider nice all right Divia do",
    "start": "1352240",
    "end": "1357799"
  },
  {
    "text": "you want to go next yeah I can go next mine is not JavaScript because I haven't been writing as much JavaScript well I",
    "start": "1357799",
    "end": "1363760"
  },
  {
    "text": "have been I've been writing view but I know a lot about view that it's it's hard to be today I learned I'll talk",
    "start": "1363760",
    "end": "1369720"
  },
  {
    "text": "about rust because that's something I've been writing um even though this is JS party rust party rust party so I've been",
    "start": "1369720",
    "end": "1377799"
  },
  {
    "text": "writing a lot of rust at work and it's been a very Steep Hill which is not",
    "start": "1377799",
    "end": "1383000"
  },
  {
    "text": "contrary to popular belief I think people know that already and one of the things that I had to learn is this",
    "start": "1383000",
    "end": "1389960"
  },
  {
    "text": "concept of references and copy traits and essentially this idea of like when",
    "start": "1389960",
    "end": "1396840"
  },
  {
    "text": "you're using a particular thing like for instance if you have a like a parameter",
    "start": "1396840",
    "end": "1402120"
  },
  {
    "text": "or variable elsewhere and you want to use that particular variable within rust essentially there's a concept called",
    "start": "1402120",
    "end": "1409159"
  },
  {
    "text": "lifetimes so if a thing is used here and then you want to use it again later rust",
    "start": "1409159",
    "end": "1414960"
  },
  {
    "text": "essentially kills it or removes it from memory because it's sort of trying to be as memory safe as possible and I might",
    "start": "1414960",
    "end": "1422559"
  },
  {
    "text": "be wrong in explaining this completely which shows that this is very confusing for me myself as I understand this but",
    "start": "1422559",
    "end": "1430039"
  },
  {
    "text": "um you have to essentially get around it using lifetimes and I don't understand lifetimes for the life of me and so what",
    "start": "1430039",
    "end": "1437200"
  },
  {
    "text": "I've been doing instead is is sort of trying to understand how references work by cheating by creating a",
    "start": "1437200",
    "end": "1443919"
  },
  {
    "text": "variable so it's no longer a reference is just like a completely new thing so it's been interesting just like sort of",
    "start": "1443919",
    "end": "1450360"
  },
  {
    "text": "playing around with the various ways of how memory is managed within rust because I think in JavaScript we don't",
    "start": "1450360",
    "end": "1455440"
  },
  {
    "text": "think about that at all what is that yeah exactly it's just automatically garbage collected for you and everything",
    "start": "1455440",
    "end": "1462679"
  },
  {
    "text": "is done and so you don't think about it but when you think in a systems language",
    "start": "1462679",
    "end": "1468600"
  },
  {
    "text": "like rust where memory and safety is really important you have to start thinking about how exactly things are",
    "start": "1468600",
    "end": "1475279"
  },
  {
    "text": "being used um how references were like what can be copied or cloned if you",
    "start": "1475279",
    "end": "1482279"
  },
  {
    "text": "wanted to use the thing elsewhere in your code and so on so yeah this is like a today I'm continuing to learn rather",
    "start": "1482279",
    "end": "1489720"
  },
  {
    "text": "than I learned so are you using the Clone method and and stuff to yeah yeah",
    "start": "1489720",
    "end": "1496159"
  },
  {
    "text": "that's also the interesting thing I didn't realize and maybe this is very obvious I didn't realize that strings",
    "start": "1496159",
    "end": "1503440"
  },
  {
    "text": "aren't automatically copyable like you can't just copy a string you have to clone it which string which good",
    "start": "1503440",
    "end": "1511120"
  },
  {
    "text": "question the string from like if you do so not a reference string like an actual",
    "start": "1511120",
    "end": "1517880"
  },
  {
    "text": "string capital S string capital S string so if you do capital S string colon",
    "start": "1517880",
    "end": "1523000"
  },
  {
    "text": "colon from whatever the string is that's what I mean that string that is not",
    "start": "1523000",
    "end": "1528399"
  },
  {
    "text": "copyable it doesn't have a copy trait which is another thing that you have to learn in Rust what is a trait and so",
    "start": "1528399",
    "end": "1535039"
  },
  {
    "text": "just understanding how exactly to use things that seem really easy to use",
    "start": "1535039",
    "end": "1542159"
  },
  {
    "text": "within rust so that's been fun it's been a fun Rabbit Hole to go down as I",
    "start": "1542159",
    "end": "1547799"
  },
  {
    "text": "Implement a single API and point it takes way longer than like",
    "start": "1547799",
    "end": "1554120"
  },
  {
    "text": "doing it a node or something but uh it's a very steep learning curve it's very difficult to learn but when you do",
    "start": "1554120",
    "end": "1559799"
  },
  {
    "text": "figure it out it's very satisfying so yeah oh yeah every time like it actually compiles and right it it feels awesome",
    "start": "1559799",
    "end": "1567600"
  },
  {
    "text": "because you beat the borrow cheer and you win rust because you",
    "start": "1567600",
    "end": "1575279"
  },
  {
    "text": "actually got it to compile that sounds about the opposite of JavaScript where you figure it out you figure out how it",
    "start": "1575279",
    "end": "1581080"
  },
  {
    "text": "works and then you just set there asking yourself why yeah I was going to say that once",
    "start": "1581080",
    "end": "1586960"
  },
  {
    "text": "you beat the borrow Checker you're pretty confident it's actually going to work which is kind of the opposite of",
    "start": "1586960",
    "end": "1592919"
  },
  {
    "text": "JavaScript fair that is fair although there is some Kinks with like JavaScript with typescript because the compiler",
    "start": "1593919",
    "end": "1600399"
  },
  {
    "text": "will yell at you for like lately I've I've been frustrated with typescript because I was using the Monaco editor in",
    "start": "1600399",
    "end": "1607159"
  },
  {
    "text": "one of my components and I didn't have the types for it and so I just used any and then typescript help that me they",
    "start": "1607159",
    "end": "1614039"
  },
  {
    "text": "were like do not use the any and even if I tried to turn it I I ended up turning it off in my te s config but I felt",
    "start": "1614039",
    "end": "1619279"
  },
  {
    "text": "really bad because it felt like I wasn't really using typescript I was cheating my way around it so after fighting with",
    "start": "1619279",
    "end": "1626919"
  },
  {
    "text": "rust when you come back to typescript is it like oh you're the like gentle abuser honestly yes because the thing with",
    "start": "1626919",
    "end": "1633360"
  },
  {
    "text": "learning rust is it's so difficult you don't know what you're doing and then you come to typescript and you're like oh okay this is easy like whatever",
    "start": "1633360",
    "end": "1640600"
  },
  {
    "text": "because you can also like cheat your way around the config versus in Rust there's no cheating you can't",
    "start": "1640600",
    "end": "1646679"
  },
  {
    "text": "cheat and SC you can be like just poke at it or like cover it up with like you",
    "start": "1646679",
    "end": "1652760"
  },
  {
    "text": "know and forget that it's there type ignore type ignore yeah well I will set",
    "start": "1652760",
    "end": "1658440"
  },
  {
    "text": "aside this strongly worded email that I'm writing to you now Divia about me in",
    "start": "1658440",
    "end": "1664679"
  },
  {
    "text": "typescript and uh I I'll tell you about something that I learned recently and um",
    "start": "1664919",
    "end": "1670559"
  },
  {
    "text": "I I was working on some code uh specifically some tests in typescript for a serers side API and I was using",
    "start": "1670559",
    "end": "1678880"
  },
  {
    "text": "Apollo client uh which is a way to make graphql calls basically but I wanted to",
    "start": "1678880",
    "end": "1685120"
  },
  {
    "text": "mock that out in my tests because I don't want to actually make graphql calls in these specific tests that I was",
    "start": "1685120",
    "end": "1690159"
  },
  {
    "text": "doing and I'm sure there's a way to do it but I was kind of going really fast in just using the just. mock feature",
    "start": "1690159",
    "end": "1697799"
  },
  {
    "text": "where I can give it you know Apollo client and then provide it with a factory function telling it what to",
    "start": "1697799",
    "end": "1704480"
  },
  {
    "text": "actually return When I use anything inside of there specifically the Apollo client Constructor and I swear every",
    "start": "1704480",
    "end": "1711559"
  },
  {
    "text": "time I do this with just mocking I have to just kind of throw code at the wall and figure out what actually works",
    "start": "1711559",
    "end": "1718519"
  },
  {
    "text": "because I can never remember exactly how to mock like a Constructor to have it",
    "start": "1718519",
    "end": "1723960"
  },
  {
    "text": "return like the methods that I want to have mocked so I can check those and make sure that they're called and and",
    "start": "1723960",
    "end": "1729559"
  },
  {
    "text": "such so I spend a lot of time doing that but anyway I got it working and the way",
    "start": "1729559",
    "end": "1734880"
  },
  {
    "text": "that I got it working was by in that factory function saying that anytime you I'm requesting Apollo client here's a",
    "start": "1734880",
    "end": "1741640"
  },
  {
    "text": "function to call and that function returns an object that has my mocks on it and so it was just using specifically",
    "start": "1741640",
    "end": "1748559"
  },
  {
    "text": "the function keyword I couldn't use Arrow functions because you can't instantiate Arrow functions you can't",
    "start": "1748559",
    "end": "1754440"
  },
  {
    "text": "call them with new so I spent a little bit of time remembering that or being",
    "start": "1754440",
    "end": "1760880"
  },
  {
    "text": "kindly reminded of that by by the tool and then got it working and go to commit",
    "start": "1760880",
    "end": "1767760"
  },
  {
    "text": "everything thing and we have a pre-commit hook that runs and will run es l-- fix to fix any es lint problems",
    "start": "1767760",
    "end": "1775880"
  },
  {
    "text": "and it decided that it didn't like my use of function the function keyword in there so it rewrote that to be not an",
    "start": "1775880",
    "end": "1783000"
  },
  {
    "text": "arrow function but the third function syntax which is the shorthand when you have a function on an object where it's",
    "start": "1783000",
    "end": "1788440"
  },
  {
    "text": "just the name open parentheses Clos parentheses and then open curly bracket close curly bracket and your functions",
    "start": "1788440",
    "end": "1793960"
  },
  {
    "text": "in there so it's just removing the the function keyword or so it would seem but that one you also cannot instantiate",
    "start": "1793960",
    "end": "1801360"
  },
  {
    "text": "as new and I think that what was happening was because I wasn't actually using the this keyword in there it esent",
    "start": "1801360",
    "end": "1808279"
  },
  {
    "text": "just assumed that it could rewrite that to be the shorthand syntax and everything would be okay pushed it up",
    "start": "1808279",
    "end": "1814640"
  },
  {
    "text": "and of course CI caught that all of my tests failed because it couldn't actually instantiate any of those uh so",
    "start": "1814640",
    "end": "1820799"
  },
  {
    "text": "I got very mad at es lint for for a couple of days but then I I ended up rewriting that to instead of using an",
    "start": "1820799",
    "end": "1828240"
  },
  {
    "text": "actual function just use an anonymous class and have that as the the value that I return for Apollo client instead",
    "start": "1828240",
    "end": "1835600"
  },
  {
    "text": "but the thing I learned is there are several ways to uh write functions in",
    "start": "1835600",
    "end": "1841399"
  },
  {
    "text": "JavaScript and of course we know that the big differences in the different",
    "start": "1841399",
    "end": "1846720"
  },
  {
    "text": "syntaxes is how they handle the context or the this keyword in there but also the newer ones can't be instantiated",
    "start": "1846720",
    "end": "1854039"
  },
  {
    "text": "with new and so that is uh something that I begging learned this week is",
    "start": "1854039",
    "end": "1860399"
  },
  {
    "text": "there a use case for calling new on a method of some classes",
    "start": "1860399",
    "end": "1868600"
  },
  {
    "text": "prototype I couldn't I don't think so not that I can think of yeah this is",
    "start": "1868600",
    "end": "1874320"
  },
  {
    "text": "like very weird code right because it's I'm trying to mock out something in a test so it's not like production level",
    "start": "1874320",
    "end": "1880559"
  },
  {
    "text": "code that would actually be running anywhere except for in in tests and it's kind of a a hack from the beginning",
    "start": "1880559",
    "end": "1886639"
  },
  {
    "text": "that's how I feel whenever I'm writing using just. mock so bones call what have",
    "start": "1886639",
    "end": "1892159"
  },
  {
    "text": "you learned recently so the thing that I wanted to say that I thought was neat",
    "start": "1892159",
    "end": "1897360"
  },
  {
    "text": "and this actually is a thing that Nick taught me via a tweet on",
    "start": "1897360",
    "end": "1903760"
  },
  {
    "text": "twitter.com and um I'm not sure how to speak the the code here but essentially",
    "start": "1903760",
    "end": "1910519"
  },
  {
    "text": "it's something in your git config so a git config is kind of like I don't know",
    "start": "1910519",
    "end": "1916080"
  },
  {
    "text": "it's kind of like an any file right it's kind of sort of toml like right and so",
    "start": "1916080",
    "end": "1921200"
  },
  {
    "text": "you have a header which is in the um square brackets and that's include and",
    "start": "1921200",
    "end": "1926240"
  },
  {
    "text": "with the include thing you can give it paths to other git config files",
    "start": "1926240",
    "end": "1932440"
  },
  {
    "text": "essentially and so you can have your root gtit config in your home dur and",
    "start": "1932440",
    "end": "1937760"
  },
  {
    "text": "then in this include section you can go and pull in other files right and so if",
    "start": "1937760",
    "end": "1944760"
  },
  {
    "text": "you are like me and like Nick apparently you have a DOT files your dot files are",
    "start": "1944760",
    "end": "1951039"
  },
  {
    "text": "all in git and you want or the idea is",
    "start": "1951039",
    "end": "1956320"
  },
  {
    "text": "probably to be able to share them across different machines and use them in",
    "start": "1956320",
    "end": "1961440"
  },
  {
    "text": "different contexts and there's certain things that you don't want to commit to",
    "start": "1961440",
    "end": "1967080"
  },
  {
    "text": "VCS like I don't know secrets for Nic was email addresses and so what you can",
    "start": "1967080",
    "end": "1972840"
  },
  {
    "text": "do is you can tell git hey include this other git config file and it is cool",
    "start": "1972840",
    "end": "1979080"
  },
  {
    "text": "about it and it will not complain apparently if that file doesn't exist and so if you're on say your work",
    "start": "1979080",
    "end": "1986240"
  },
  {
    "text": "computer you can have your dot files there and you can say hey include this",
    "start": "1986240",
    "end": "1992240"
  },
  {
    "text": "other work specific get config right and in that g config you can Define what is",
    "start": "1992240",
    "end": "1998200"
  },
  {
    "text": "it like a user an email address you know G key whatever you want to add in there",
    "start": "1998200",
    "end": "2003639"
  },
  {
    "text": "and so yeah I thought that was neat also I think there's oh right so if you have",
    "start": "2003639",
    "end": "2009080"
  },
  {
    "text": "a repo say you're doing this on one machine and you have a working copy and that's for your work right how do you",
    "start": "2009080",
    "end": "2015760"
  },
  {
    "text": "say okay everything in here is it like a per directory basis or can you have like",
    "start": "2015760",
    "end": "2021080"
  },
  {
    "text": "a Parent Directory and say okay everything under this Parent Directory needs to use this username is that what",
    "start": "2021080",
    "end": "2026880"
  },
  {
    "text": "you do yeah that's exactly it uh so you mentioned there's that include the ability to include another",
    "start": "2026880",
    "end": "2033240"
  },
  {
    "text": "file there's also a variation of that called include if okay and in there you can give it a couple of different",
    "start": "2033240",
    "end": "2038840"
  },
  {
    "text": "options but one of them is include if G der and you give it a partial path to",
    "start": "2038840",
    "end": "2044840"
  },
  {
    "text": "where that g directory might exist and if whatever G directory you're in",
    "start": "2044840",
    "end": "2050398"
  },
  {
    "text": "matches that partial path in any way so like for M I have like a work directory where all of the repos I've cloned are",
    "start": "2050399",
    "end": "2056720"
  },
  {
    "text": "in that work directory and it has you know a specific name so I can just say includ if geter is the path to that work",
    "start": "2056720",
    "end": "2064878"
  },
  {
    "text": "directory and then anything in there will source that other get config so that you can do other overrides in there",
    "start": "2064879",
    "end": "2071679"
  },
  {
    "text": "that are very specific to like your work for example right that's cool that's",
    "start": "2071679",
    "end": "2077158"
  },
  {
    "text": "cool yeah and if you didn't care about like putting your your username and email in VCS I mean it seems like you",
    "start": "2077159",
    "end": "2083800"
  },
  {
    "text": "could just use include if in your main git config too if you didn't want this like extra file that wasn't under",
    "start": "2083800",
    "end": "2090440"
  },
  {
    "text": "Version Control yeah yeah anyway yeah where did you learn that",
    "start": "2090440",
    "end": "2096639"
  },
  {
    "text": "Nick through the the git docks on on the internet yeah there's gold in there yes",
    "start": "2096640",
    "end": "2103240"
  },
  {
    "text": "there are cool things that git does uh in config files that you probably have no idea about and I find new things all",
    "start": "2103240",
    "end": "2110720"
  },
  {
    "text": "the time yeah the really cool part of that is that if those files don't exist get doesn't complain at you it just",
    "start": "2110720",
    "end": "2117520"
  },
  {
    "text": "ignores them quietly which is what it should do well that's what I [Music]",
    "start": "2117520",
    "end": "2126640"
  },
  {
    "text": "learned [Music]",
    "start": "2126640",
    "end": "2134920"
  },
  {
    "text": "this episode is brought to you by digital ocean droplets managed kubernetes managed databases spaces",
    "start": "2134920",
    "end": "2141880"
  },
  {
    "text": "object storage volume block storage Advanced networking like virtual private clouds and Cloud firewalls developer",
    "start": "2141880",
    "end": "2148480"
  },
  {
    "text": "tooling like the robust API and CLI to make sure you can interact with your infrastructure the way you want to",
    "start": "2148480",
    "end": "2154680"
  },
  {
    "text": "digital ocean is designed for developers and built for businesses join Over",
    "start": "2154680",
    "end": "2160160"
  },
  {
    "text": "150,000 businesses that develop manage and scale their applications with digital ocean head to do. changelog to",
    "start": "2160160",
    "end": "2167800"
  },
  {
    "text": "get started with a $100 credit again do. [Music]",
    "start": "2167800",
    "end": "2186359"
  },
  {
    "text": "changelog in this segment we're going to give some shoutouts or talk about",
    "start": "2186359",
    "end": "2191520"
  },
  {
    "text": "stories of the week uh very interesting things that are happening recently uh so a little bit different from today I",
    "start": "2191520",
    "end": "2197240"
  },
  {
    "text": "learned these are interesting things that we plan to learn or that have happened in the community in the news uh",
    "start": "2197240",
    "end": "2204200"
  },
  {
    "text": "or just shout outs to some really cool people or projects that we've seen so starting us off Chris do you want to go",
    "start": "2204200",
    "end": "2210319"
  },
  {
    "text": "first yes I do um so I wanted to shout out to one of the maintainers of mocha",
    "start": "2210319",
    "end": "2217280"
  },
  {
    "text": "and he has been a maintainer for I don't know several years now Peter Mueller he",
    "start": "2217280",
    "end": "2222720"
  },
  {
    "text": "is monter M ner on GitHub and so what Peter did recently was he basically tore",
    "start": "2222720",
    "end": "2231400"
  },
  {
    "text": "out our build tool chain so our build tool chain has been browsery for a very",
    "start": "2231400",
    "end": "2236520"
  },
  {
    "text": "long time and Soka kind of has these two",
    "start": "2236520",
    "end": "2241760"
  },
  {
    "text": "areas of the code base they're not split out as well as they should be but um we",
    "start": "2241760",
    "end": "2247640"
  },
  {
    "text": "have one area which runs in node and it only runs in node and in there since we",
    "start": "2247640",
    "end": "2253680"
  },
  {
    "text": "support node 10 or newer we can use all the cool syntax and then we have this",
    "start": "2253680",
    "end": "2259400"
  },
  {
    "text": "other area which is okay this code gets shipped to a browser so in here we have",
    "start": "2259400",
    "end": "2264880"
  },
  {
    "text": "to use essentially code that runs in ie11 and we have uh historically not run",
    "start": "2264880",
    "end": "2272040"
  },
  {
    "text": "any transpilers or anything anyway this is just terrible and it's like not fun",
    "start": "2272040",
    "end": "2278400"
  },
  {
    "text": "um because we have an eslint file that has essentially this big list of files that you can use modern syntax on and",
    "start": "2278400",
    "end": "2286880"
  },
  {
    "text": "everything else you can't and so you know you don't necessarily know as I said it's not well divided or organized",
    "start": "2286880",
    "end": "2294599"
  },
  {
    "text": "but you don't necessarily know from any given file whether or not you can use I don't know the class keyword right so uh",
    "start": "2294599",
    "end": "2301839"
  },
  {
    "text": "what he did is he he pulled out browserify and he moved us over to rollup and uh you know there's Babel and",
    "start": "2301839",
    "end": "2310160"
  },
  {
    "text": "all sorts of other well not all sorts of other things but those are the main ones right so we can now use these modern",
    "start": "2310160",
    "end": "2318599"
  },
  {
    "text": "syntax across the entire mocha code base which is a relief really it's painful",
    "start": "2318599",
    "end": "2324800"
  },
  {
    "text": "not to be able to use those things and and so I just wanted to thank you Peter",
    "start": "2324800",
    "end": "2330240"
  },
  {
    "text": "for your effort and getting that landed it is awesome and thanks cool thank you",
    "start": "2330240",
    "end": "2337119"
  },
  {
    "text": "Chris uh Divia you want to go next yeah so my shout outs are a thematic so I've been",
    "start": "2337119",
    "end": "2345240"
  },
  {
    "text": "I've been as I mentioned writing a lot of typescript in Rust and what has been really useful is using the the",
    "start": "2345240",
    "end": "2351880"
  },
  {
    "text": "playgrounds for for either so typescript has the I think it's called play yeah",
    "start": "2351880",
    "end": "2357640"
  },
  {
    "text": "it's a playground typescript playground and then rust has a very similar one as well which allows you to just like write",
    "start": "2357640",
    "end": "2364440"
  },
  {
    "text": "some code and then compile it and it gives you like really good error messaging as well as like examples I",
    "start": "2364440",
    "end": "2370079"
  },
  {
    "text": "don't think the rust one gives you examples but the typescript one does so if I don't know how to write something",
    "start": "2370079",
    "end": "2375920"
  },
  {
    "text": "let's say there's a chance that the examples will show like for instance if I don't know how to write async away8 in",
    "start": "2375920",
    "end": "2381280"
  },
  {
    "text": "typescript there is an example for it that I can automatically load into the playground and that has been phenomenal",
    "start": "2381280",
    "end": "2387440"
  },
  {
    "text": "for me because I don't have to look at the documentation because I I actually really dislike types script stocks I",
    "start": "2387440",
    "end": "2393800"
  },
  {
    "text": "think they're very difficult to read and I think in general whenever people docum using the typescript docs it's very like",
    "start": "2393800",
    "end": "2400599"
  },
  {
    "text": "it gives me a sense of what types something takes but not how to use the thing which is really annoying and so I",
    "start": "2400599",
    "end": "2408440"
  },
  {
    "text": "think the playground has been really useful in terms of ramping up really quickly when I need to get a question",
    "start": "2408440",
    "end": "2413920"
  },
  {
    "text": "answered so I don't have to read the docs I can just like automatically load an example or try to figure out how to",
    "start": "2413920",
    "end": "2421200"
  },
  {
    "text": "type it and then get typescript to yell at me within the playground itself so like one I don't um have to do that",
    "start": "2421200",
    "end": "2428079"
  },
  {
    "text": "within my project itself I can just do this in this independent playground and same for rust I can just do write some",
    "start": "2428079",
    "end": "2434240"
  },
  {
    "text": "Rust code in independent playground without having to set up a configuration environment or like run my entire rust",
    "start": "2434240",
    "end": "2440480"
  },
  {
    "text": "project to see if one thing worked and so honestly there's a huge shout out to people who write playgrounds I believe",
    "start": "2440480",
    "end": "2447079"
  },
  {
    "text": "the rust one is written by the integer 32 team there's probably someone",
    "start": "2447079",
    "end": "2452760"
  },
  {
    "text": "specifically there that I'm forgetting but that is phenomenal and I think really useful for my learning with the I",
    "start": "2452760",
    "end": "2459160"
  },
  {
    "text": "I have no idea who wrote the typ Tre playground but it's great and I actually like the current version of the",
    "start": "2459160",
    "end": "2465040"
  },
  {
    "text": "playground not the future version I think there's a V3 of it I really dislike the",
    "start": "2465040",
    "end": "2470400"
  },
  {
    "text": "V3 it's very unclear and confusing and I find the V2 one which is the current",
    "start": "2470400",
    "end": "2477000"
  },
  {
    "text": "version one way clearer personally but regardless people who write playgrounds",
    "start": "2477000",
    "end": "2482200"
  },
  {
    "text": "are great because it's a really great way to get people to like get comfortable with it I think similar on",
    "start": "2482200",
    "end": "2487520"
  },
  {
    "text": "that vein is like when SAS was first introduced as like a tric SAS so you can write like SAS functions and variables",
    "start": "2487520",
    "end": "2495000"
  },
  {
    "text": "and then get that to compile to CSS so it's a really quick way of like just prototyping without having to like read",
    "start": "2495000",
    "end": "2501359"
  },
  {
    "text": "docs so yeah that's my shout out that's really cool yeah I will agree with you",
    "start": "2501359",
    "end": "2507119"
  },
  {
    "text": "on that I've been mostly using the V2 playground uh but the one thing that I",
    "start": "2507119",
    "end": "2513119"
  },
  {
    "text": "really do like in V3 and it's an experimental feature is uh it will show you the of whatever you type in there oh",
    "start": "2513119",
    "end": "2520119"
  },
  {
    "text": "right that's true yeah that is nice but yeah definitely some cool work I I also",
    "start": "2520119",
    "end": "2525200"
  },
  {
    "text": "love that it's just so sharable with with these playgrounds like you can type some code and then yes that's true Yes",
    "start": "2525200",
    "end": "2530640"
  },
  {
    "text": "actually I forgot that that's a very nice feature too because then I can easily just be like I'm struggling with",
    "start": "2530640",
    "end": "2536640"
  },
  {
    "text": "this and then someone can send me a typescript playground and show me how to write the thing so nice cool I will go",
    "start": "2536640",
    "end": "2543040"
  },
  {
    "text": "next and the cool thing that I wanted to shout out is uh something that uh Zack",
    "start": "2543040",
    "end": "2548359"
  },
  {
    "text": "letherman has been working on and it's called speed lefi um and it's a a pretty cool way to continuously measure",
    "start": "2548359",
    "end": "2555480"
  },
  {
    "text": "performance uh specifically of static sites and it's got a full dashboard that is running on netfi that shows the",
    "start": "2555480",
    "end": "2562680"
  },
  {
    "text": "performance over time of different static sites using 11d or n or next or",
    "start": "2562680",
    "end": "2569200"
  },
  {
    "text": "other tools like that and it'll it'll show you every time it runs and how those have changed and it has a graph",
    "start": "2569200",
    "end": "2574359"
  },
  {
    "text": "that shows exactly what's changed it'll give their Lighthouse scores and you can break down I believe you can break down",
    "start": "2574359",
    "end": "2581359"
  },
  {
    "text": "into specific pages to see how those are performing uh which is really cool so",
    "start": "2581359",
    "end": "2587599"
  },
  {
    "text": "yeah I'll throw a a link to that in the show notes and kall uh what do you got",
    "start": "2587599",
    "end": "2594200"
  },
  {
    "text": "yeah so I have two different things that I want to shout out they're both pretty small um or stories that I saw that I thought were neat the first one is there",
    "start": "2594200",
    "end": "2601680"
  },
  {
    "text": "was a new release of chrome Dev tools that adds uh support for editing or",
    "start": "2601680",
    "end": "2607319"
  },
  {
    "text": "better support for editing Styles created with the CSS object model apis which essentially means you any sort of",
    "start": "2607319",
    "end": "2614800"
  },
  {
    "text": "CSS injs framework that you're using many of them are now using those object model and they were previously",
    "start": "2614800",
    "end": "2621040"
  },
  {
    "text": "uneditable in Dev tools which meant that one of the key tooling that you had for",
    "start": "2621040",
    "end": "2626400"
  },
  {
    "text": "visibility into and changing of your Styles was not available in a CSS and JS",
    "start": "2626400",
    "end": "2631640"
  },
  {
    "text": "world and I'm still not a huge fan of CSS njs for many use cases but it is a",
    "start": "2631640",
    "end": "2637559"
  },
  {
    "text": "critical tool for some use cases particularly large teams and and distributed teams large products and",
    "start": "2637559",
    "end": "2644359"
  },
  {
    "text": "it's also something that at least a lot of the react World is moving towards so I think we've got to have good support",
    "start": "2644359",
    "end": "2649760"
  },
  {
    "text": "for it and i' just love to see that uh tooling support coming along for it I am grudgingly using styled components in my",
    "start": "2649760",
    "end": "2657440"
  },
  {
    "text": "stuff at work right now and even mostly getting used to it but still not a fan",
    "start": "2657440",
    "end": "2662880"
  },
  {
    "text": "anyway uh the other thing I want to shout out is in one of the breaks after we talked about View and all this stuff",
    "start": "2662880",
    "end": "2668599"
  },
  {
    "text": "looking I went and clicked in on a view newsletter on the vue.js news and I saw some stuff uh PR posted in the rfc's by",
    "start": "2668599",
    "end": "2676559"
  },
  {
    "text": "evu about single file component improvements and the thing I want to shout out about it that I think is really cool is it's doing essentially a",
    "start": "2676559",
    "end": "2684319"
  },
  {
    "text": "set of compile time sugar and changes for cleaning up how you do things",
    "start": "2684319",
    "end": "2690160"
  },
  {
    "text": "inspired by spelt and nice longtime listeners will know that I I'm a big",
    "start": "2690160",
    "end": "2696359"
  },
  {
    "text": "proponent of moving more and more things in our front-end ecosystem to compile time and trying to pre-compile them",
    "start": "2696359",
    "end": "2702160"
  },
  {
    "text": "that's to in my mind what jamstack is all about that's what enables edgeu Computing it's a huge thing and I love",
    "start": "2702160",
    "end": "2709160"
  },
  {
    "text": "to see this kind of pro cross-pollination of innovation in that space happening between Frameworks",
    "start": "2709160",
    "end": "2715680"
  },
  {
    "text": "because that's something that I think spelt has really pushed the bar on and made some dramatic improvements and I",
    "start": "2715680",
    "end": "2722559"
  },
  {
    "text": "I'm excited to see where it goes and as it goes into other Frameworks becomes vifi for view maybe react will pick up",
    "start": "2722559",
    "end": "2729920"
  },
  {
    "text": "some interesting tips and how that Innovation continues to roll nice yeah",
    "start": "2729920",
    "end": "2735559"
  },
  {
    "text": "very cool all right well that is what we have for the party this week thank you",
    "start": "2735559",
    "end": "2740680"
  },
  {
    "text": "so much to our panelists uh kall Divia and Chris and we will see you next week",
    "start": "2740680",
    "end": "2746680"
  },
  {
    "text": "party on immediately regretted saying party",
    "start": "2746680",
    "end": "2752839"
  },
  {
    "text": "on you can comment on this and every episode on cha.com there's a link in",
    "start": "2755920",
    "end": "2762000"
  },
  {
    "text": "your show notes for easy clickins or just hit up cha.com in your browser toour and let your voice be heard oh and",
    "start": "2762000",
    "end": "2768800"
  },
  {
    "text": "did you know we have an awesome Weekly Newsletter over 15,000 devs just like yourself hit the easy button on keeping",
    "start": "2768800",
    "end": "2774440"
  },
  {
    "text": "up with what's fresh and new in software world we include the hottest repos the best articles and the biggest news with",
    "start": "2774440",
    "end": "2780599"
  },
  {
    "text": "just enough commentary to add context and nerdy jokes but not so much that you're overwhelmed big thanks to Nick n",
    "start": "2780599",
    "end": "2786720"
  },
  {
    "text": "for MC in this episode to kall Divia and Chris for joining on the fun to break",
    "start": "2786720",
    "end": "2791839"
  },
  {
    "text": "master cylinder for all the awesome beats and to our longtime sponsors thank you rollbar Leno and fley last but not",
    "start": "2791839",
    "end": "2798400"
  },
  {
    "text": "least thank you for listening we truly appreciate it that's all for now web RTC",
    "start": "2798400",
    "end": "2803839"
  },
  {
    "text": "next [Music]",
    "start": "2803839",
    "end": "2813000"
  },
  {
    "text": "week party on Wayne party on G",
    "start": "2813000",
    "end": "2818839"
  }
]