[
  {
    "text": "bandwith for change log is provided by fastly learn more at fastly.com we move",
    "start": "40",
    "end": "5520"
  },
  {
    "text": "fast and fix things here at change log because of rbar check them out at roar.com and we're hosted on Leno Cloud",
    "start": "5520",
    "end": "11840"
  },
  {
    "text": "servers head to lin.com changelog this episode is brought to you",
    "start": "11840",
    "end": "17320"
  },
  {
    "text": "by lenoe our Cloud Server of choice it is so easy to get started with lenoe servers start at just five bucks a month",
    "start": "17320",
    "end": "23599"
  },
  {
    "text": "we host change log on Lino Cloud servers and we love it we get great 24/7 support Zeus like Powers with",
    "start": "23599",
    "end": "30519"
  },
  {
    "text": "ssds a super fast 40 GB per second Network and Incredibly fast CPUs for",
    "start": "30519",
    "end": "36360"
  },
  {
    "text": "processing and we trust L because they keep it fast they keep it simple check them out at lin.com",
    "start": "36360",
    "end": "44160"
  },
  {
    "text": "[Music] changelog welcome to go time a podcast",
    "start": "53000",
    "end": "59480"
  },
  {
    "text": "featuring diverse panel and special guests discussing Cloud infrastructure distributed systems microservices",
    "start": "59480",
    "end": "65840"
  },
  {
    "text": "kubernetes Docker oh and also go we record live every Tuesday at 300 p.m.",
    "start": "65840",
    "end": "71240"
  },
  {
    "text": "Eastern new Pacific join the community SL with us in real time during the show in the gotime FM channel in go for slack",
    "start": "71240",
    "end": "77799"
  },
  {
    "text": "follow us on Twitter we're at gotime FM listen live at change.com or subscribe",
    "start": "77799",
    "end": "83600"
  },
  {
    "text": "at changel law.com gotime and now on to the show hello everybody Welcome To Go time",
    "start": "83600",
    "end": "91840"
  },
  {
    "text": "this week we're going to be talking about structuring go programs I think this is a question that pretty much everybody asked at some point and we all",
    "start": "91840",
    "end": "99520"
  },
  {
    "text": "probably make that mistake where we do it what we consider the wrong way later and yell at ourselves a little bit",
    "start": "99520",
    "end": "105880"
  },
  {
    "text": "joining me today I have Johnny Boro hello there I say it right this time you",
    "start": "105880",
    "end": "110920"
  },
  {
    "text": "did say it right this time all right I'm learning I didn't like have my recording from last week to say for sure um we",
    "start": "110920",
    "end": "117000"
  },
  {
    "text": "have a guest Corey lenu or lenoi lenu lenu I didn't get a chance to ask you",
    "start": "117000",
    "end": "122399"
  },
  {
    "text": "beforehand in that 20 minutes of downtime and we have Matt ryer who",
    "start": "122399",
    "end": "127840"
  },
  {
    "text": "wanted to take the back seat today and just pretend like he was a guest thanks for having me all right so if Matt sounds better",
    "start": "127840",
    "end": "135120"
  },
  {
    "text": "today it's because he's at his company's HQ in their podcasting lab or whatever",
    "start": "135120",
    "end": "140920"
  },
  {
    "text": "you want to call it yeah I'm in I'm in Costa Mesa which is south of La so it's",
    "start": "140920",
    "end": "146000"
  },
  {
    "text": "Californian weather I've actually come here to call off uh given the heat wave that's happening in Europe at the moment",
    "start": "146000",
    "end": "152560"
  },
  {
    "text": "um and and they wanted me to mention that they are hiring so if there's Gophers out there that are looking for",
    "start": "152560",
    "end": "158480"
  },
  {
    "text": "work careers. veritone doc v r i t o n e and uh yeah you know do some computers",
    "start": "158480",
    "end": "165680"
  },
  {
    "text": "and that well and because I'm in the gojobs Channel all the time the very first question you're going to get is the is that remote that is a great",
    "start": "165680",
    "end": "172720"
  },
  {
    "text": "question and you have to ask through the process I I'm encouraging I'm",
    "start": "172720",
    "end": "178239"
  },
  {
    "text": "encouraging that um but but currently that's not the way that they do it but I think if there's enough people that ask",
    "start": "178239",
    "end": "183680"
  },
  {
    "text": "that question yeah okay awesome so I want to start off by I guess just sort",
    "start": "183680",
    "end": "190440"
  },
  {
    "text": "of discussing why is app structure something that we all care about so much you know why is this a question that",
    "start": "190440",
    "end": "196440"
  },
  {
    "text": "everybody asks why is it something that anybody who gets you know joins or starts writing and go is going to be",
    "start": "196440",
    "end": "201720"
  },
  {
    "text": "like you know how do I structure my code where do I put my files why is this something that matters yeah I think",
    "start": "201720",
    "end": "207440"
  },
  {
    "text": "that's a great question and like when we learn when we're learning go we tend to",
    "start": "207440",
    "end": "214239"
  },
  {
    "text": "do it just in a single file or sometimes we even use the playground that's hosted online we think of it as very kind of",
    "start": "214239",
    "end": "221680"
  },
  {
    "text": "small scale and in practice when you're going to build something you the first",
    "start": "221680",
    "end": "227319"
  },
  {
    "text": "thing you have to start doing is making files and folders and things so it's kind of like it's the first thing you do",
    "start": "227319",
    "end": "234040"
  },
  {
    "text": "but it's the last thing we ever talk about so I feel like it this this podcast is going to be uh hopefully shed",
    "start": "234040",
    "end": "241239"
  },
  {
    "text": "some light on this but yeah essentially for me it's about maintainability the structure of the program is really all",
    "start": "241239",
    "end": "248200"
  },
  {
    "text": "about how can you quickly go to the place you need in order to work on the",
    "start": "248200",
    "end": "253480"
  },
  {
    "text": "thing you need to work on and good structures good file names good folder names this this stuff all helps with",
    "start": "253480",
    "end": "260840"
  },
  {
    "text": "that process so to to add to that um I think there's a certain level of sort of",
    "start": "260840",
    "end": "267280"
  },
  {
    "text": "expectation right when when you especially first start to navigate a project um or if you're on a team with",
    "start": "267280",
    "end": "273600"
  },
  {
    "text": "multiple projects multiple repositories um there's a um you expect that when you're going from Project to project",
    "start": "273600",
    "end": "279800"
  },
  {
    "text": "you're going to have you know a similar structure whatever it is that your team has sort of a um standardized on right",
    "start": "279800",
    "end": "286000"
  },
  {
    "text": "so if if you if you're building web applications you're going to expect the same structure from Project to project",
    "start": "286000",
    "end": "291400"
  },
  {
    "text": "if you're building apis you might expect something different pure backend Services Network to Applications you're",
    "start": "291400",
    "end": "296440"
  },
  {
    "text": "going to expect C certain um like a a certain sh shape right for the repository and where things go um this",
    "start": "296440",
    "end": "303080"
  },
  {
    "text": "definitely helps with sort of readability and knowing kind of where to go how to navigate right um um",
    "start": "303080",
    "end": "308600"
  },
  {
    "text": "repositories and in projects um I think what we will probably um definitely",
    "start": "308600",
    "end": "313759"
  },
  {
    "text": "touch on is what what is the expected or what what should be the expected um",
    "start": "313759",
    "end": "319639"
  },
  {
    "text": "organizational sort of structure of certain kinds of programs right so if I'm writing a program if I'm writing an",
    "start": "319639",
    "end": "325199"
  },
  {
    "text": "application that is based on a on a framework right there's going to be certain expectations you know that the framework itself is imposing if I'm",
    "start": "325199",
    "end": "331919"
  },
  {
    "text": "writing something you know say some sort of grpc service right there's there's some things you're going to do that you won't do with a with a traditional",
    "start": "331919",
    "end": "338880"
  },
  {
    "text": "application so again it's all about the expectations that you're you're setting by by adopting a particular layout",
    "start": "338880",
    "end": "345120"
  },
  {
    "text": "structure yeah and go itself puts some constraints on too because obviously everything inside a folder is grouped",
    "start": "345120",
    "end": "352479"
  },
  {
    "text": "logically as a package so that's important that's significant we have to know about that one of the interesting",
    "start": "352479",
    "end": "359840"
  },
  {
    "text": "things that's different for go to other languages is nested folders don't really",
    "start": "359840",
    "end": "366080"
  },
  {
    "text": "do anything special they don't represent nested packages or anything so there's no special privileges by having folders",
    "start": "366080",
    "end": "373000"
  },
  {
    "text": "nested and sometimes in other languages that is the case uh so that's worth you know there are some rules that are worth",
    "start": "373000",
    "end": "379880"
  },
  {
    "text": "learning and necessary to learn but of course there's still within that there's",
    "start": "379880",
    "end": "384919"
  },
  {
    "text": "still lots of different ways to do things like do you just bundle everything into one package do you break",
    "start": "384919",
    "end": "391280"
  },
  {
    "text": "everything out into tiny packages or is it somewhere in between and when do you do these things and all that's is it's",
    "start": "391280",
    "end": "397960"
  },
  {
    "text": "kind of almost an art form on its own don't you think yeah so let me ask this",
    "start": "397960",
    "end": "403520"
  },
  {
    "text": "question because we've all been doing go for a while when you start a project and let's say you know it's going to be a",
    "start": "403520",
    "end": "408680"
  },
  {
    "text": "mediumsized project what's the first thing you do do you just create your main file do you create 20 different",
    "start": "408680",
    "end": "415199"
  },
  {
    "text": "folders like what is it that you do um I can say that my guess is there's not a",
    "start": "415199",
    "end": "420680"
  },
  {
    "text": "right way to do this but I'm very much the type of person who just starts with one flat structure and then later once",
    "start": "420680",
    "end": "427400"
  },
  {
    "text": "I've got some more code there then I'll start trusting myself to separate cuz I found that every time I try to separate",
    "start": "427400",
    "end": "433319"
  },
  {
    "text": "ahead of time it's you can plan for a lot of things but I feel like you just",
    "start": "433319",
    "end": "439280"
  },
  {
    "text": "you you miss something like you miss that one Edge case or something that throws your whole thing you makes it you",
    "start": "439280",
    "end": "444400"
  },
  {
    "text": "have to throw it out the door throw out the window whatever you want to say and I I've just found that I do a little bit",
    "start": "444400",
    "end": "449639"
  },
  {
    "text": "better if I get something down that I can work from and then I come back and refactor yeah so you sort of let the structure emerge from the work you're",
    "start": "449639",
    "end": "456759"
  },
  {
    "text": "doing rather than try and imagine it up front and I think that as a principle is great that's actually how I do it too",
    "start": "456759",
    "end": "463199"
  },
  {
    "text": "and I tell people cuz because you know when you go and look at an open source project it's got its own structure and",
    "start": "463199",
    "end": "470720"
  },
  {
    "text": "it feels it feels important and it feels significant so it's very natural I think",
    "start": "470720",
    "end": "475759"
  },
  {
    "text": "for people especially Junior devs to think well I need to learn how they made those decisions but really they probably",
    "start": "475759",
    "end": "483599"
  },
  {
    "text": "evolved too they probably started with something different probably flat and they started to pull things out as and",
    "start": "483599",
    "end": "490360"
  },
  {
    "text": "when they needed to and doing that in response to real pain is is the right",
    "start": "490360",
    "end": "495479"
  },
  {
    "text": "time to do it because it's very clear the problem you're trying to solve for yourself if you try and imagine up front",
    "start": "495479",
    "end": "502680"
  },
  {
    "text": "like you say John you might get it right but maybe you won't um and you know as",
    "start": "502680",
    "end": "508759"
  },
  {
    "text": "we actually do the coding we we learn so much so yeah it's it's something that I",
    "start": "508759",
    "end": "515279"
  },
  {
    "text": "think people should be a bit more relaxed about than they are don't worry about it you can worry about it later I",
    "start": "515279",
    "end": "522560"
  },
  {
    "text": "I say worry about it a little bit um just to write amount and whatever that is for you is that's going to be a sweet",
    "start": "522560",
    "end": "528959"
  },
  {
    "text": "spot that you have to like find right so for example my sweet spot is that if I know I'm building um you know I'm",
    "start": "528959",
    "end": "534920"
  },
  {
    "text": "working on a project that's going of have some sort of a um binary right as a as a work product um so the first thing",
    "start": "534920",
    "end": "541079"
  },
  {
    "text": "I do is you know I open up the the the project um and then I go and create a CMD folder followed by the name of the",
    "start": "541079",
    "end": "547079"
  },
  {
    "text": "project that way when I do my builds you know I get the right name for the executable and in in there I create a",
    "start": "547079",
    "end": "552279"
  },
  {
    "text": "main.go right and my main.go my my objective is to keep it as thin and",
    "start": "552279",
    "end": "557519"
  },
  {
    "text": "light as possible right so that at that point I'm okay well from this main. go um what am I going to call in right what",
    "start": "557519",
    "end": "564640"
  },
  {
    "text": "and Bic the the the rest of the the application right which is basically providing the package name sort of um",
    "start": "564640",
    "end": "570480"
  },
  {
    "text": "structure what am I going to be pulling in what do I need to actually start doing work from this main.go right and",
    "start": "570480",
    "end": "576399"
  },
  {
    "text": "obviously in your main. go this is where I'm sort of reading options um arguments being p in if I have to do any sort of",
    "start": "576399",
    "end": "582360"
  },
  {
    "text": "initialization or configuration reading from the environment where wherever they're coming from I'm doing all that and there and basically trying very very",
    "start": "582360",
    "end": "589200"
  },
  {
    "text": "hard to keep any sort of business logic out of that main. go and then from there once I've got a starting point there",
    "start": "589200",
    "end": "594480"
  },
  {
    "text": "then I basically um come out if you will of of that main.go and then start working on the rest of the package so in",
    "start": "594480",
    "end": "601640"
  },
  {
    "text": "in the past I used to sort of uh follow an approach whereby I created a sort of a PKG folder at the root level of the",
    "start": "601640",
    "end": "607240"
  },
  {
    "text": "project and then start to create you know sort of um things in there as well I've sort of gotten away um from from",
    "start": "607240",
    "end": "612959"
  },
  {
    "text": "that model basically I try to keep go files at the top level now um but I've gone back and forth and there's you know",
    "start": "612959",
    "end": "618640"
  },
  {
    "text": "it's it's not a wrong way to do it it's just a slightly different way to do it you know you package up or your sort of go files in in a own directory this is",
    "start": "618640",
    "end": "626279"
  },
  {
    "text": "usually useful if you have um if what you're building is it has a bunch of different Assets in there maybe there's",
    "start": "626279",
    "end": "631560"
  },
  {
    "text": "like some maybe you need to produce some some HTML and CSS and JavaScript so you don't I don't want I don't like that's all that stuff sort of being right next",
    "start": "631560",
    "end": "637760"
  },
  {
    "text": "to my go code so I might create a PKG folder for that but other than those sort of slightly Nuance kind of things",
    "start": "637760",
    "end": "642880"
  },
  {
    "text": "like basically I start with that main.go for the executable and sort of work my way out from there I used to do a thing",
    "start": "642880",
    "end": "649360"
  },
  {
    "text": "where I my my main program or the command the program itself the package",
    "start": "649360",
    "end": "654800"
  },
  {
    "text": "main thing that would always just call out to another package package and that",
    "start": "654800",
    "end": "659839"
  },
  {
    "text": "allowed me helped me with testability and it helped me with the fact that this package could be used now in more places",
    "start": "659839",
    "end": "667720"
  },
  {
    "text": "but I kind of stopped doing it because I realized I never used that package in any other place you know so I only ever",
    "start": "667720",
    "end": "674079"
  },
  {
    "text": "ended up using it in in the main program so now I I I sort I I sort of bundle",
    "start": "674079",
    "end": "680880"
  },
  {
    "text": "things I still won't put much in the in the main file in the main.go file um",
    "start": "680880",
    "end": "688120"
  },
  {
    "text": "because I feel like this more storytelling opportunities with having different files alongside that but uh",
    "start": "688120",
    "end": "695040"
  },
  {
    "text": "yeah so Johnny do you do you tend to do that where you call out to another package or do you do you have the actual",
    "start": "695040",
    "end": "702200"
  },
  {
    "text": "logic inside that main package I I try to I I usually call out because I think",
    "start": "702200",
    "end": "710680"
  },
  {
    "text": "um I it's really hard for me to sort of uh like I'm really trying I'm usually",
    "start": "710680",
    "end": "716639"
  },
  {
    "text": "really trying to keep package meain as as small as possible um and and I",
    "start": "716639",
    "end": "721800"
  },
  {
    "text": "usually like almost immediately basically you know and call in right",
    "start": "721800",
    "end": "726920"
  },
  {
    "text": "like a different package right the because to me the the having that entry",
    "start": "726920",
    "end": "732639"
  },
  {
    "text": "point is that's the only purpose it should solve right so I'm not defining sort of domain models in there I'm not",
    "start": "732639",
    "end": "737680"
  },
  {
    "text": "creating sort of um um sort of a sort of the experimental sort of you know when you start out you know everything's",
    "start": "737680",
    "end": "743440"
  },
  {
    "text": "inside of main I go like I find that to be to be a little messy but that's the way I think right it's not right wrong",
    "start": "743440",
    "end": "749199"
  },
  {
    "text": "that's just the way I think so I usually end up most like 99% of the time I immediately you know missing pulling",
    "start": "749199",
    "end": "755480"
  },
  {
    "text": "pulling a a package I will say that like one of the things I do really like about go is the ability to take something",
    "start": "755480",
    "end": "762040"
  },
  {
    "text": "that's in Main and pull it out and throw it somewhere else is like it's so easy to do that I think that's why like when",
    "start": "762040",
    "end": "767959"
  },
  {
    "text": "you say there is no right or wrong I completely agree because like there are some languages where I feel like you",
    "start": "767959",
    "end": "773480"
  },
  {
    "text": "have to Define all the stuff up front and that's not the case and go at all and because of that you can kind of get",
    "start": "773480",
    "end": "779399"
  },
  {
    "text": "away with just moving things around I will say that I I would imagine that part of our differences in how we design",
    "start": "779399",
    "end": "786120"
  },
  {
    "text": "stuff also depends on the context of like how we're doing it like whether or not we're with a big team um whether or",
    "start": "786120",
    "end": "792240"
  },
  {
    "text": "not we're basically what we're building all sorts of things like that because I I mean I know I personally",
    "start": "792240",
    "end": "799399"
  },
  {
    "text": "tend to work on projects that are very very small like at most two or three developers are that's very very common",
    "start": "799399",
    "end": "804519"
  },
  {
    "text": "for me and as a result what I have to worry about is very very different from what you know somebody with a bigger",
    "start": "804519",
    "end": "810560"
  },
  {
    "text": "team's going to have to worry about yeah that's that's very interesting actually um I think context probably does matter",
    "start": "810560",
    "end": "817560"
  },
  {
    "text": "and also if you've already got an existing code base that has some patterns it's probably worth for the",
    "start": "817560",
    "end": "823320"
  },
  {
    "text": "sake of it just following those patterns just being consistent even if you don't love it or there's some some tradeoffs",
    "start": "823320",
    "end": "830120"
  },
  {
    "text": "you're not happy with uh just consistency is probably an important if you already have that you always know",
    "start": "830120",
    "end": "835880"
  },
  {
    "text": "there's going to be a 2.0 right so that's kind of where you you can push it down the road um but I agree I think",
    "start": "835880",
    "end": "841639"
  },
  {
    "text": "productivity is really important one of the things that I really try to focus on when I talk to people about package design is I try to get them to",
    "start": "841639",
    "end": "848519"
  },
  {
    "text": "understand you need to ship the product so you need to get it across the line and we can always refactor later and",
    "start": "848519",
    "end": "854519"
  },
  {
    "text": "again I'm not I'm not also arguing for like oh we can always push everything down the road and someday we'll have this massive refactor clearly there's",
    "start": "854519",
    "end": "861000"
  },
  {
    "text": "there's got to be a a boundary and there's got to be some give and take uh but primarily I I find just write the",
    "start": "861000",
    "end": "866440"
  },
  {
    "text": "code get it to work um things kind of follow it on their own after that anyway and go tends to be really fast to refact",
    "start": "866440",
    "end": "872959"
  },
  {
    "text": "excuse me tends to be really fast to refactor so it's not like other languages where you know you're writing",
    "start": "872959",
    "end": "878360"
  },
  {
    "text": "all this huge technical debt and I think that's the one thing and go yes we have technical debt but I've never felt",
    "start": "878360",
    "end": "883959"
  },
  {
    "text": "technical debt in go like I have in any other language and I think that's pretty refreshing and allows me to kind of just",
    "start": "883959",
    "end": "889560"
  },
  {
    "text": "throw caution to the wind a little bit get that code written and then refactor it later and not really worry about",
    "start": "889560",
    "end": "894680"
  },
  {
    "text": "missing my deadlines I think the lack of oo and class hierarchies and stuff really helps with the with how good is",
    "start": "894680",
    "end": "901440"
  },
  {
    "text": "at refactoring in go because you know you it's you we tend not to build these big complicated structures that are then",
    "start": "901440",
    "end": "908639"
  },
  {
    "text": "difficult to pull apart later everything tends to be quite flat and that sort of gives you more power but what about file",
    "start": "908639",
    "end": "916680"
  },
  {
    "text": "names do you have any now again there are some constraints and some conventions in go if it's uncore T.O",
    "start": "916680",
    "end": "924399"
  },
  {
    "text": "that's a test file so uh are there any other things like that don't think there are but but do you have other patterns",
    "start": "924399",
    "end": "931800"
  },
  {
    "text": "for file names and things I think one of the patterns and this isn't my pattern by any means is if you have a package",
    "start": "931800",
    "end": "938759"
  },
  {
    "text": "called Fu your entry point is f.o and because a lot of times people always ask me what's the first file and so I find",
    "start": "938759",
    "end": "945600"
  },
  {
    "text": "if you follow that pattern of naming your file after your directory name you know that when you open up that",
    "start": "945600",
    "end": "951639"
  },
  {
    "text": "directory the first thing you should go to is there that's kind of where the meat of it is the description of it things are going to Fan out from there",
    "start": "951639",
    "end": "957600"
  },
  {
    "text": "uh that helps a lot um that's kind of one of the bigger ones that I've adopted and it's worked well it feels really strange at first cuz it",
    "start": "957600",
    "end": "963839"
  },
  {
    "text": "feels like an echo and you're always told in programming don't Echo anything and you know and here I'm going to Echo this naming pattern but for me it works",
    "start": "963839",
    "end": "970399"
  },
  {
    "text": "out fine I think even having what main.go you don't have to name it main.go no so like that's just kind of",
    "start": "970399",
    "end": "978440"
  },
  {
    "text": "a there's no like we've even said main.go here several times inferring like we assume the main functions in",
    "start": "978440",
    "end": "984120"
  },
  {
    "text": "there and if somebody did a program or you know wrote something that didn't have it it'd be really confusing yeah",
    "start": "984120",
    "end": "989279"
  },
  {
    "text": "that's true I don't know beside that like do I'm trying to think if I remember any projects that did anything with like uh OS specific build files um",
    "start": "989279",
    "end": "997880"
  },
  {
    "text": "but I don't remember exactly what I saw yeah there's there's another convention there is that there's another one if you have underscore Linux and underscore",
    "start": "997880",
    "end": "1004920"
  },
  {
    "text": "Darwin and things right they are the tool the tooling does take that into account when building so there are some",
    "start": "1004920",
    "end": "1011440"
  },
  {
    "text": "rules that are worth learning but what about like do you tend to structure your",
    "start": "1011440",
    "end": "1017120"
  },
  {
    "text": "packages by by responsibility like do you have like a I I'll tend to have a if I've got if",
    "start": "1017120",
    "end": "1024038"
  },
  {
    "text": "I've got a concept of comments in a in a program I'll have a comments. go and",
    "start": "1024039",
    "end": "1029798"
  },
  {
    "text": "then that'll try I'll try and have everything to do with comments in that file that's different to other languages",
    "start": "1029799",
    "end": "1037678"
  },
  {
    "text": "that I've worked with in the past where I might have uh I might have models where I have the the comments",
    "start": "1037679",
    "end": "1044640"
  },
  {
    "text": "model is amongst other models inside that how do you how do you do it I",
    "start": "1044640",
    "end": "1051240"
  },
  {
    "text": "personally I personally find that if I'm not working in a framework where where some of these conventions are being sort",
    "start": "1051240",
    "end": "1057320"
  },
  {
    "text": "of enforced and so this um like um configuration by convention kind of",
    "start": "1057320",
    "end": "1062880"
  },
  {
    "text": "things um things that are sort of expected to be named a certain way um I",
    "start": "1062880",
    "end": "1067919"
  },
  {
    "text": "I tend to sort of um run away from that model quite quickly I follow the same sort of uh um domain based sort of logic",
    "start": "1067919",
    "end": "1075000"
  },
  {
    "text": "right if if you know to to use your example comments I might have everything having to do comments in there so I wouldn't have a models you know um",
    "start": "1075000",
    "end": "1082520"
  },
  {
    "text": "folder or models. go with a with a comment type in there I might go with with the name of the thing that way it",
    "start": "1082520",
    "end": "1088480"
  },
  {
    "text": "also not only sort of keeps it um um smaller keeps the file smaller um because it only has to do with things",
    "start": "1088480",
    "end": "1094760"
  },
  {
    "text": "that related to comments um but also sort of allows me to sort of again navigability right I can sort of jump to",
    "start": "1094760",
    "end": "1101360"
  },
  {
    "text": "what I need to I know exactly where to go and if I have a comments underscore you know test I go I know all my test my",
    "start": "1101360",
    "end": "1106960"
  },
  {
    "text": "comments aren't there right so or if I have a models. go or types. go or I tend to see some of these things in in",
    "start": "1106960",
    "end": "1113200"
  },
  {
    "text": "projects here and there or a models folder with the different models in there then that means I still have to jump to some maybe there's a controls",
    "start": "1113200",
    "end": "1120120"
  },
  {
    "text": "folder right and maybe there's a maybe there's a UT Tails folder God forbid maybe there's a you know like these sort",
    "start": "1120120",
    "end": "1125440"
  },
  {
    "text": "of U like it's it's I'm I'm I'm organizing by by the domain I'm working with not by some predefined sort of you",
    "start": "1125440",
    "end": "1132799"
  },
  {
    "text": "know like preset way of doing it unless I'm working on the framework then everybody understands right that that",
    "start": "1132799",
    "end": "1138440"
  },
  {
    "text": "what the expectations of the framework are right that we can we can all be productive because we know all the models are in the models folder we know",
    "start": "1138440",
    "end": "1144400"
  },
  {
    "text": "all the controls are in the controls folder right so it's not wrong by any means it's just what is the expectation of the team right one of the things I",
    "start": "1144400",
    "end": "1151720"
  },
  {
    "text": "find um especially because I teach a lot of corporate groups is that when you try to approach them and tell them things",
    "start": "1151720",
    "end": "1157880"
  },
  {
    "text": "like you know comments go in its own package and the first thing you get back from how do I save it right like I have",
    "start": "1157880",
    "end": "1163760"
  },
  {
    "text": "to have this database layer and and I'm used to everything being in models and I pass a model to my data layer and it just saves it and it's really confusing",
    "start": "1163760",
    "end": "1170360"
  },
  {
    "text": "because you're trying to explain to them and of course they're new to go and you're trying to show them well no comments can you know you can use",
    "start": "1170360",
    "end": "1176000"
  },
  {
    "text": "dependency injection right you can go ahead and when you create that new comment you can give it its method that saves it and what that allows you to do",
    "start": "1176000",
    "end": "1183120"
  },
  {
    "text": "is really to create all your testing like you were saying around comments in testing all the functionality around",
    "start": "1183120",
    "end": "1189120"
  },
  {
    "text": "comments in that package and do everything you want to saving it has actually nothing to do with comments",
    "start": "1189120",
    "end": "1195640"
  },
  {
    "text": "that's actually not a responsibility you care about and that is probably the single hardest concept that you try to",
    "start": "1195640",
    "end": "1201840"
  },
  {
    "text": "impart on people that are new to go and that really does come back into package and in layout because they they",
    "start": "1201840",
    "end": "1208280"
  },
  {
    "text": "immediately instinctually coming from these other backgrounds like well no it's got to be a model it's got to have the data layer and all these things and",
    "start": "1208280",
    "end": "1213880"
  },
  {
    "text": "and they just don't understand and then once you show them how to break it apart and you just inject it with something as",
    "start": "1213880",
    "end": "1219039"
  },
  {
    "text": "simple as a oneline interface that has a save and a you know or or a load right like there's this interface is just itty",
    "start": "1219039",
    "end": "1224720"
  },
  {
    "text": "bitty and now you don't care about it at all it does it's not something you test anymore you're just done with it um that",
    "start": "1224720",
    "end": "1230960"
  },
  {
    "text": "is liberating but it's hard that is a hard Paradigm to",
    "start": "1230960",
    "end": "1236158"
  },
  {
    "text": "[Music]",
    "start": "1237390",
    "end": "1247039"
  },
  {
    "text": "understand this episode is brought to you by X team X team is the world's most",
    "start": "1247039",
    "end": "1252200"
  },
  {
    "text": "energizing Community for developers work from anywhere in the world with leading Brands experience belonging unlike any",
    "start": "1252200",
    "end": "1258480"
  },
  {
    "text": "other community and stay energized by doing more of what you love in this segment I talk with Brian Chartrand EX",
    "start": "1258480",
    "end": "1265080"
  },
  {
    "text": "Team CEO about their Global community and whether or not culture requires an office you know I often hear people say",
    "start": "1265080",
    "end": "1272960"
  },
  {
    "text": "that you know you can't have culture unless you have an office which is just hilarious and and really you know I",
    "start": "1272960",
    "end": "1279600"
  },
  {
    "text": "think what's going to make remote companies truly figure this out moving forward is the same thing that we did",
    "start": "1279600",
    "end": "1285480"
  },
  {
    "text": "you know we looked at the past 20 25 years of communities online you know",
    "start": "1285480",
    "end": "1291360"
  },
  {
    "text": "primarily in in the gaming space because that's where a lot of the the biggest most successful communities online have",
    "start": "1291360",
    "end": "1296640"
  },
  {
    "text": "been you know World of Warcraft one of the longest standing communities out there and and looking at how are they",
    "start": "1296640",
    "end": "1302320"
  },
  {
    "text": "able to engage people so insanely powerfully despite being all around the",
    "start": "1302320",
    "end": "1307720"
  },
  {
    "text": "world and so we looked at that for inspiration and and we've built this community and and remote company around",
    "start": "1307720",
    "end": "1314320"
  },
  {
    "text": "those same sort of values and you know ways of bringing people together to",
    "start": "1314320",
    "end": "1319720"
  },
  {
    "text": "engage uh in unique ways like today we we had an an RPG in in a slack channel",
    "start": "1319720",
    "end": "1325120"
  },
  {
    "text": "that went for an hour and it brought people from 30 countries around the world all at the same time to play this",
    "start": "1325120",
    "end": "1330200"
  },
  {
    "text": "RPG together and and get energized from it and use that energy to then spend the rest of their day doing great work all",
    "start": "1330200",
    "end": "1336559"
  },
  {
    "text": "right if you're looking to join one of the most energizing communities for developers out there work from anywhere in the world with leading Brands and get",
    "start": "1336559",
    "end": "1342640"
  },
  {
    "text": "supported to do more of what you love than had the X team.com to learn more again X",
    "start": "1342640",
    "end": "1350278"
  },
  {
    "text": "[Music]",
    "start": "1352580",
    "end": "1361919"
  },
  {
    "text": "team.com it's funny cuz like I feel like I like Cory and I deal with completely different audiences in in the sense that",
    "start": "1361919",
    "end": "1368640"
  },
  {
    "text": "his audience is probably corporate people bringing a trainer in and a lot of times I'm dealing with people who",
    "start": "1368640",
    "end": "1374039"
  },
  {
    "text": "have not the most programming experience in the world especially like web development stuff like that so I've actually taken the exact opposite",
    "start": "1374039",
    "end": "1380080"
  },
  {
    "text": "approach of if you've seen something like rails or any of those others you've probably seen MVC where it's thrown into",
    "start": "1380080",
    "end": "1385159"
  },
  {
    "text": "a models view or a folder and a views folder and I'm like it's just going to be easier to start with that and like",
    "start": "1385159",
    "end": "1391640"
  },
  {
    "text": "let me just show you a way that you can get stuff going with that and then I I very much do encourage people to spend",
    "start": "1391640",
    "end": "1398120"
  },
  {
    "text": "some time refactoring you know try a different layout try reorganizing your stuff try doing something different but",
    "start": "1398120",
    "end": "1403679"
  },
  {
    "text": "I want them to see that like you can get productive very quickly and go even if you don't do things",
    "start": "1403679",
    "end": "1408840"
  },
  {
    "text": "you know the exact perfect way or you know maybe it's not the way you're going to do it 10 years from now but it's good to have something to start with um so I",
    "start": "1408840",
    "end": "1416880"
  },
  {
    "text": "think that like just knowing your audience and like knowing what all they have to learn sometimes when you're just learning about all these things like you",
    "start": "1416880",
    "end": "1422919"
  },
  {
    "text": "have no idea how to encrypt passwords you have no idea what csrf is you have no idea like all these different things",
    "start": "1422919",
    "end": "1428640"
  },
  {
    "text": "trying to tell them okay now we need to learn about context and we need to learn about like you know what's the context of this comment where it could change",
    "start": "1428640",
    "end": "1434799"
  },
  {
    "text": "from time to time um that's a lot to wrap your head around so I think just you know having a way to",
    "start": "1434799",
    "end": "1440440"
  },
  {
    "text": "sort of skip over that is very valuable for some projects so I I think sometimes you can get caught up and think well",
    "start": "1440440",
    "end": "1446440"
  },
  {
    "text": "what if we have to refactor this later but I mean like Cory said there's always a chance for a V2 but also like it's not",
    "start": "1446440",
    "end": "1452679"
  },
  {
    "text": "that hard to start pulling things out and redoing it if you need to I've done this to my own project several times and I actually do this pretty frequently as",
    "start": "1452679",
    "end": "1458880"
  },
  {
    "text": "a way to like if I I have an idea like I want to see what if I design my code like this what does it turn out like what are the flaws I will take like an",
    "start": "1458880",
    "end": "1465840"
  },
  {
    "text": "existing database or an existing app and I'll be like can I rewrite this in this other way and like see how it does like",
    "start": "1465840",
    "end": "1472440"
  },
  {
    "text": "see what I think of it I think you should be very careful with um with the Assumption unless you know for sure that",
    "start": "1472440",
    "end": "1477720"
  },
  {
    "text": "you are going to have a chance to do a V2 right should be very careful with the assumption that you're going to get a chance to refactor that code CU I mean",
    "start": "1477720",
    "end": "1484640"
  },
  {
    "text": "under the right pressure I mean that thing is shipping as you built it so I guess yeah it depends on how you mean but so like I guess I say that in the",
    "start": "1484640",
    "end": "1491520"
  },
  {
    "text": "sense that a vast majority of people who are learning at least with me are building something that is realistically",
    "start": "1491520",
    "end": "1497520"
  },
  {
    "text": "not going to be like they're building the same thing I'm building so like we don't need a million of the same app so",
    "start": "1497520",
    "end": "1503320"
  },
  {
    "text": "they're probably going to build something new at some point um and even if you don't get a full V2 you can go back and refactor some stuff it's not",
    "start": "1503320",
    "end": "1509399"
  },
  {
    "text": "like you have to completely rewrite from scratch um so sometimes when I say V2 I don't necessarily mean you know we're",
    "start": "1509399",
    "end": "1516200"
  },
  {
    "text": "going to throw this whole thing out the door because I I do agree with you that's way more rare in real businesses",
    "start": "1516200",
    "end": "1522520"
  },
  {
    "text": "then than it actually like I'd say that probably doesn't happen a lot in real businesses I think this is actually a",
    "start": "1522520",
    "end": "1528520"
  },
  {
    "text": "lesson for those real businesses that we're talking about they need to the you",
    "start": "1528520",
    "end": "1533559"
  },
  {
    "text": "know they need to make the time and give the developers the space so that they can do refactoring it's vital and you",
    "start": "1533559",
    "end": "1541600"
  },
  {
    "text": "know I say this a lot but we're obsessed with how long's this going to take to get done the first time we feel like",
    "start": "1541600",
    "end": "1547919"
  },
  {
    "text": "it's we're going to create a product and then it's done and then we deploy and there's it's a little bit like that but",
    "start": "1547919",
    "end": "1554399"
  },
  {
    "text": "in a lot of ways it's really not like that much at all if the project is long and it's going to have a it's going to",
    "start": "1554399",
    "end": "1560360"
  },
  {
    "text": "be successful then it's going to have a big maintenance cost to it and part of",
    "start": "1560360",
    "end": "1565880"
  },
  {
    "text": "that is refactoring to make your future maintenance easier those some small",
    "start": "1565880",
    "end": "1571120"
  },
  {
    "text": "investment early can really pay dividends later so we need to empower",
    "start": "1571120",
    "end": "1576360"
  },
  {
    "text": "developers to do that and and Engineers out there need to kind of figure learn",
    "start": "1576360",
    "end": "1582279"
  },
  {
    "text": "this learn why this is important and make the case for it as well so sometimes because you can't expect",
    "start": "1582279",
    "end": "1588960"
  },
  {
    "text": "necessarily like a manager doesn't know they think of it as as they we do the dev we do the sometimes they that's",
    "start": "1588960",
    "end": "1595080"
  },
  {
    "text": "literally how they organize it as well so yeah there needs to be more of a conversation around the value of",
    "start": "1595080",
    "end": "1602440"
  },
  {
    "text": "refactoring and you need to let a team know that they can make mistakes you can",
    "start": "1602440",
    "end": "1607600"
  },
  {
    "text": "structure the application in however you like you can get it wrong because you",
    "start": "1607600",
    "end": "1612679"
  },
  {
    "text": "know hopefully you've got a culture that lets you then fix that but but that culture is is is a privilege at the",
    "start": "1612679",
    "end": "1619440"
  },
  {
    "text": "moment for sure and it's quite rare in my experience yeah one of the products",
    "start": "1619440",
    "end": "1625200"
  },
  {
    "text": "that I worked on I work with some really bright Engineers um not sure why I was there but they were pretty smart uh and",
    "start": "1625200",
    "end": "1630520"
  },
  {
    "text": "what they did is they really kind of instilled in me is that you take your first pass uh and then before you push",
    "start": "1630520",
    "end": "1636159"
  },
  {
    "text": "it up you refactor and then you push that up before you actually start your pull request you refactor again and it",
    "start": "1636159",
    "end": "1642000"
  },
  {
    "text": "got to the point where you know when I did any any feature work it went through two or three fairly significant",
    "start": "1642000",
    "end": "1648399"
  },
  {
    "text": "refactors from myself um because you get your rough draft you get it working uh",
    "start": "1648399",
    "end": "1654440"
  },
  {
    "text": "and then you refactor and then you refactor again and you really kind of add that last polish and at first I",
    "start": "1654440",
    "end": "1659679"
  },
  {
    "text": "thought because you know I'm an entrepreneur I like to ship code I like to you know get it all there and just be done and I thought that it was just a",
    "start": "1659679",
    "end": "1666559"
  },
  {
    "text": "lot of wasted time with that refactoring and I found in the long run",
    "start": "1666559",
    "end": "1671720"
  },
  {
    "text": "it made you think a lot more about it and then it also started making me think next time I did a feature that refactor",
    "start": "1671720",
    "end": "1677480"
  },
  {
    "text": "BR really lent kind of like a muscle exercise right like I just learned to do things better up front uh and I didn't",
    "start": "1677480",
    "end": "1682640"
  },
  {
    "text": "leave as much technical debt up front every time either and so those things make a big difference so that refactoring isn't just you know coming",
    "start": "1682640",
    "end": "1689559"
  },
  {
    "text": "back 3 months later a lot of my refactoring happens before I ever actually ask for the code review yeah",
    "start": "1689559",
    "end": "1694840"
  },
  {
    "text": "that's really interesting the point you made then is quite a great it's a great one the refactoring is not just about",
    "start": "1694840",
    "end": "1700080"
  },
  {
    "text": "fixing the code it's it's a learning exercise and actually if you do the refactor with another person or even as",
    "start": "1700080",
    "end": "1707799"
  },
  {
    "text": "a team sometimes it's quite fun to do mob programming sessions I don't know if you've ever tried that the the yeah the",
    "start": "1707799",
    "end": "1715440"
  },
  {
    "text": "learning you get you're right informs the next time you do it and that's really how you build experience that's",
    "start": "1715440",
    "end": "1720960"
  },
  {
    "text": "why sometimes we will jump over and create certain package structures just",
    "start": "1720960",
    "end": "1726799"
  },
  {
    "text": "because of our experience we might start doing that the first time and that's another thing I think Junior developers",
    "start": "1726799",
    "end": "1732799"
  },
  {
    "text": "see that and think well I feel like I don't know enough here so yeah yes it's",
    "start": "1732799",
    "end": "1738200"
  },
  {
    "text": "but it is a journey and refactoring is part of that learning process yeah I think I think you you this is very very",
    "start": "1738200",
    "end": "1744760"
  },
  {
    "text": "important what You' just said M because I think um the sort of my habits stem",
    "start": "1744760",
    "end": "1750000"
  },
  {
    "text": "from having having done these kinds of things over and over and over again so I I already have sort of a well-worn path",
    "start": "1750000",
    "end": "1757360"
  },
  {
    "text": "right in my mind about what the final um State should look like so I sort of um",
    "start": "1757360",
    "end": "1763480"
  },
  {
    "text": "for what is at low cost to me right early on I sort of reset some things",
    "start": "1763480",
    "end": "1768640"
  },
  {
    "text": "right I don't because I don't have to think about them that hard because I know I'm going to get there anyway even before the first PR so that that big",
    "start": "1768640",
    "end": "1775640"
  },
  {
    "text": "jump right you know that seemingly big jump for a junior developer like may be sort of a barrier they they they start",
    "start": "1775640",
    "end": "1782200"
  },
  {
    "text": "basically stressing themselves out thinking oh like why why can't I why can't I do it that way right what am I missing why why am I doing this wrong",
    "start": "1782200",
    "end": "1788360"
  },
  {
    "text": "why can't I get this right so you know if you're listening Junior developer it's not you right it's just experience",
    "start": "1788360",
    "end": "1794000"
  },
  {
    "text": "right the experien folks basically have seen enough patterns right they've seen enough things that can they can start",
    "start": "1794000",
    "end": "1799519"
  },
  {
    "text": "start to anticipate certain problems in certain ways they need to sort of structure their code and sort of get get",
    "start": "1799519",
    "end": "1804919"
  },
  {
    "text": "a leg up on that right but still at the end like like Cory is saying you still need to you're still doing sort of a a",
    "start": "1804919",
    "end": "1811320"
  },
  {
    "text": "continuous refactoring even before you get to the first PR even people people look at that basically at the code",
    "start": "1811320",
    "end": "1816600"
  },
  {
    "text": "you're you're doing that sort of refractor because you're like oh okay I set up these things here let me let me",
    "start": "1816600",
    "end": "1821880"
  },
  {
    "text": "I've thought about this domain a little more maybe you got some new information from from externally and that informs",
    "start": "1821880",
    "end": "1827399"
  },
  {
    "text": "your thinking informs your decision making and you go back and you start REM moving things around a little bit but",
    "start": "1827399",
    "end": "1832600"
  },
  {
    "text": "it's it's it's it's an experience right that's that's that that's at play there not not some pre-formulated way that you",
    "start": "1832600",
    "end": "1839840"
  },
  {
    "text": "that that you you're you don't know about some secret that you know developers are hiding from you that you don't know about it's more it's really",
    "start": "1839840",
    "end": "1846000"
  },
  {
    "text": "experience less and less than anything else I think what that generally means is as a junior developer or like if",
    "start": "1846000",
    "end": "1851399"
  },
  {
    "text": "somebody new to go whatever if you're trying to figure out the right way to structure your stuff your go code one of",
    "start": "1851399",
    "end": "1856720"
  },
  {
    "text": "the great ways is if you join a team with experienced developers you can submit PRS and even if they're not perfect your team can walk you through",
    "start": "1856720",
    "end": "1863159"
  },
  {
    "text": "the process of like here or why we're going to change these things you know it's a really good learning experience",
    "start": "1863159",
    "end": "1868480"
  },
  {
    "text": "so that works really well for a team that has some experienced developers do you have any advice for people who are",
    "start": "1868480",
    "end": "1873880"
  },
  {
    "text": "either kind of on their own or people who are you maybe the entire team is new to go I would always say open source is",
    "start": "1873880",
    "end": "1881880"
  },
  {
    "text": "a nice place to go and if you don't have a team you know the open source community can be that team to some",
    "start": "1881880",
    "end": "1889039"
  },
  {
    "text": "extent and generally speaking in go I like to think that we are very friendly",
    "start": "1889039",
    "end": "1894279"
  },
  {
    "text": "and welcoming to new people um sometimes we don't always get it perfect you know",
    "start": "1894279",
    "end": "1900720"
  },
  {
    "text": "we can if you you can say things and they come across a bit harsh sometimes and things but generally speaking I like",
    "start": "1900720",
    "end": "1907519"
  },
  {
    "text": "to think of go as being quite welcoming so that's a nice way to do it if you if you go and look at an existing project",
    "start": "1907519",
    "end": "1913720"
  },
  {
    "text": "and contribute to a a project then that that's a way to get a bit more of that",
    "start": "1913720",
    "end": "1919000"
  },
  {
    "text": "experience I think one of the other things too and and I get this question a lot it's kind of related to what you're asking is when I'm training um new",
    "start": "1919000",
    "end": "1926559"
  },
  {
    "text": "corporate developers CU you're right that is mostly who I'm usually training is they always ask me this question and",
    "start": "1926559",
    "end": "1932399"
  },
  {
    "text": "it's can you point me to the best practices for package design for package layout and the interesting thing about",
    "start": "1932399",
    "end": "1939559"
  },
  {
    "text": "it is go is still a relatively young language and what we're still finding is",
    "start": "1939559",
    "end": "1944760"
  },
  {
    "text": "even we'll call it experience go developers you want to be uh is that we're still learning if I",
    "start": "1944760",
    "end": "1950000"
  },
  {
    "text": "look back at my code every 6 months since I've written code starting in 2012 every 6 months looks like it's a",
    "start": "1950000",
    "end": "1956240"
  },
  {
    "text": "completely different developer stepped in not even kind of the same person um",
    "start": "1956240",
    "end": "1961320"
  },
  {
    "text": "and it's shocking and I can almost tell you like what year I wrote the code based on the style It Was Written In",
    "start": "1961320",
    "end": "1967120"
  },
  {
    "text": "from my own code it it's it's shocking and so it's a really hard one to answer right so when I get the question you",
    "start": "1967120",
    "end": "1973279"
  },
  {
    "text": "know what's that best practice it's kind of like what we started the show out with right we put out five or six links",
    "start": "1973279",
    "end": "1978320"
  },
  {
    "text": "and said well here's a whole bunch of ideas they all have pros and cons but",
    "start": "1978320",
    "end": "1983799"
  },
  {
    "text": "there is no one single winner and there is no best practice the only best practice I will tell you is to write the",
    "start": "1983799",
    "end": "1991399"
  },
  {
    "text": "code that's what you have to do and then you have to refactor but you can't not write the code and I also tell people",
    "start": "1991399",
    "end": "1998639"
  },
  {
    "text": "too and I think this is really good like from what John was saying don't jump into the deep end if you're new to go",
    "start": "1998639",
    "end": "2004799"
  },
  {
    "text": "and you've seen this really cool talk on how to structure these go projects and you don't even understand the basics of",
    "start": "2004799",
    "end": "2010200"
  },
  {
    "text": "go yet you're going to regret that decision cuz it's not going to work out for you and you're just going to you're",
    "start": "2010200",
    "end": "2016919"
  },
  {
    "text": "going to create more technical debt that way than if You' have just done it some way that you can understand to refactor later right that can be a form of",
    "start": "2016919",
    "end": "2023440"
  },
  {
    "text": "premature optimization yeah that that would be my advice to somebody just starting out would be create a if it's a",
    "start": "2023440",
    "end": "2030200"
  },
  {
    "text": "package create the file with the same name as the package like you say Cory Because by the way you may not need more",
    "start": "2030200",
    "end": "2036120"
  },
  {
    "text": "files as well and and then you just have a that file then you also have the test",
    "start": "2036120",
    "end": "2041720"
  },
  {
    "text": "file always next to it and go from there and set off on the journey and write the",
    "start": "2041720",
    "end": "2047360"
  },
  {
    "text": "code and and and see yeah um and ask for help too you know that I I'd I'd be",
    "start": "2047360",
    "end": "2054919"
  },
  {
    "text": "happy if someone tweeted me and said could you check out this package and give me your thoughts on it I quite like",
    "start": "2054919",
    "end": "2060398"
  },
  {
    "text": "doing that so I always uh am happy to receive those kinds of requests and but",
    "start": "2060399",
    "end": "2065960"
  },
  {
    "text": "you like you say there AR it's we can't just write a list and say follow these rules and you'll be",
    "start": "2065960",
    "end": "2072118"
  },
  {
    "text": "fine but we I don't think we can ever really do that if I'm honest I think it's it's all about tradeoffs um I",
    "start": "2072119",
    "end": "2080560"
  },
  {
    "text": "wonder though there's something that I always do and I always advocate for and",
    "start": "2080560",
    "end": "2085720"
  },
  {
    "text": "that is the monor repo of having everything for a whole company in one",
    "start": "2085720",
    "end": "2091520"
  },
  {
    "text": "GitHub repo I've done this and I love it",
    "start": "2091520",
    "end": "2096560"
  },
  {
    "text": "I love love the fact that a single PR can contain some documentation changes",
    "start": "2096560",
    "end": "2101920"
  },
  {
    "text": "the API tweaks some of the UI to make those changes happen uh maybe some",
    "start": "2101920",
    "end": "2107480"
  },
  {
    "text": "database things as well I love that that can all go as one PR that gets merged in",
    "start": "2107480",
    "end": "2113440"
  },
  {
    "text": "at the same time you know you not you don't ever have to worry in that case too much about components being out of",
    "start": "2113440",
    "end": "2119760"
  },
  {
    "text": "sync but like John I work on Tiny teams generally so that's much easier to do",
    "start": "2119760",
    "end": "2125680"
  },
  {
    "text": "but there are big companies that have monor Reapers can I just say one thing for context for everybody who you know",
    "start": "2125680",
    "end": "2131079"
  },
  {
    "text": "since you're all just listening I get to watch one of the one of the panelist shake his head no while another one",
    "start": "2131079",
    "end": "2136599"
  },
  {
    "text": "shakes his head yes while Matt's saying that so uh there's definitely a difference of opinions here with some",
    "start": "2136599",
    "end": "2142160"
  },
  {
    "text": "people so don't feel like you have to agree with Matt oh you have to Matt's always",
    "start": "2142160",
    "end": "2147400"
  },
  {
    "text": "right one of the things about monor repos I guess to the piggy back on that is that you know dependency management",
    "start": "2147400",
    "end": "2154000"
  },
  {
    "text": "is a pain end of story right like it's it's always been very painful and go uh and we're getting better at it and we're",
    "start": "2154000",
    "end": "2159480"
  },
  {
    "text": "not going to go into that whole whole conversation but what it does solve as a mono repo is it solves all of your local",
    "start": "2159480",
    "end": "2166599"
  },
  {
    "text": "dependency management and that's a real kicker because I've worked on projects where we had a mono repo and then we",
    "start": "2166599",
    "end": "2173400"
  },
  {
    "text": "split to a non-mo repo and I think I spent more time by the end of that project getting everything in sync",
    "start": "2173400",
    "end": "2179960"
  },
  {
    "text": "because I would have five commits lined up you know it's one for this repo one this repo one this repo one this repo",
    "start": "2179960",
    "end": "2185400"
  },
  {
    "text": "the one commit was the change made the other four commits were getting every all the other packages to use that commit and then you had to have all your",
    "start": "2185400",
    "end": "2192280"
  },
  {
    "text": "testing Frameworks set up to be able to use those right commits um it was a lot of work and it was a real pain and I",
    "start": "2192280",
    "end": "2198640"
  },
  {
    "text": "really did miss when we had a monor repo so I'm a big monor repo fan so earlier Matt was talking about like getting the",
    "start": "2198640",
    "end": "2205079"
  },
  {
    "text": "freedom to refactor when you need to and like not being locked into one version of it and how sometimes with management",
    "start": "2205079",
    "end": "2210800"
  },
  {
    "text": "that's hard I do sometimes wonder if part of the reason microservices are so popular is because you know it's such a",
    "start": "2210800",
    "end": "2217680"
  },
  {
    "text": "small unit that you're not even if that one thing get locked into some design you don't like it's not the whole thing",
    "start": "2217680",
    "end": "2223160"
  },
  {
    "text": "it's that one small thing the next microservice we start from scratch and we can learn from our mistakes so I will",
    "start": "2223160",
    "end": "2228960"
  },
  {
    "text": "say that they even like you know not just the cost of using it and implementing it and and you're making",
    "start": "2228960",
    "end": "2234839"
  },
  {
    "text": "changes like you said there are other costs to having one big monor repo where",
    "start": "2234839",
    "end": "2240160"
  },
  {
    "text": "you know if somebody starts off with a bad pattern and you kind of want to just keep using it for consistency sake am",
    "start": "2240160",
    "end": "2245640"
  },
  {
    "text": "monor repo can it can get really big at that point yeah but it's worth saying that just because you have a monor repo",
    "start": "2245640",
    "end": "2252040"
  },
  {
    "text": "that doesn't say anything about the deployment or the architecture of your application so it doesn't mean you have",
    "start": "2252040",
    "end": "2258440"
  },
  {
    "text": "a monolith because you have a monor repo you can still have microservices in that at machine box we had we had for the",
    "start": "2258440",
    "end": "2265760"
  },
  {
    "text": "whole lifespan of since the very beginning we had one repository and",
    "start": "2265760",
    "end": "2271280"
  },
  {
    "text": "there was a folder in there called boxes and then subfolders for each of the different capabilities that we had and",
    "start": "2271280",
    "end": "2277160"
  },
  {
    "text": "they were our products and then we had our website in there too we had some legal things in there it was it was uh",
    "start": "2277160",
    "end": "2284400"
  },
  {
    "text": "very nice and very simple but they each of those things was with their own tiny",
    "start": "2284400",
    "end": "2289680"
  },
  {
    "text": "little component that we deployed in sometimes interesting in different ways the the thing with model repo is that",
    "start": "2289680",
    "end": "2296160"
  },
  {
    "text": "you're you're you're going to need tooling around around how you you do deployments how you do c CI and CD and",
    "start": "2296160",
    "end": "2303839"
  },
  {
    "text": "how you do um how you sort of manage and and and sort of orchestrate things",
    "start": "2303839",
    "end": "2309400"
  },
  {
    "text": "right so you need you usually need tooling right um um with that whereby with a with a single um project so I",
    "start": "2309400",
    "end": "2315920"
  },
  {
    "text": "kind of understand what what John was saying is that if you have a small if you have a small project say well it can",
    "start": "2315920",
    "end": "2321480"
  },
  {
    "text": "be microservice but it doesn't have to be small I've seen I've seen very big",
    "start": "2321480",
    "end": "2326680"
  },
  {
    "text": "microservices but uh for the sake of argument right if you have if you have a a small relatively speaking project um",
    "start": "2326680",
    "end": "2333319"
  },
  {
    "text": "that's in its own repo right you can you can do you can try certain certain things right in in in that project that",
    "start": "2333319",
    "end": "2338760"
  },
  {
    "text": "perhaps is prohibitive right on the model repo right you can try different deployment model you can try a different",
    "start": "2338760",
    "end": "2344680"
  },
  {
    "text": "um um approach of of doing your CI so there's there's there's some flexibility it's a tra like everything else in in in",
    "start": "2344680",
    "end": "2351079"
  },
  {
    "text": "engineering it's a trade-off right so but for me like I've seen I've seen the model reper work well when you have",
    "start": "2351079",
    "end": "2357000"
  },
  {
    "text": "enough Engineers around that you can sort of you know peel off one or two of them to go build the tooling necessary",
    "start": "2357000",
    "end": "2362839"
  },
  {
    "text": "to to make the whole team productive if it's just you and and you know maybe a couple of other folks um you know again",
    "start": "2362839",
    "end": "2370200"
  },
  {
    "text": "you're going you're going to have to sort of experiment and see where the street spot is but generally speaking",
    "start": "2370200",
    "end": "2375680"
  },
  {
    "text": "with monor repos you need tooling and you need people that are going to take care of that Tooling in the long term",
    "start": "2375680",
    "end": "2380839"
  },
  {
    "text": "yeah I must admit that continuous integration is more difficult in a monor repo for those that don't know",
    "start": "2380839",
    "end": "2387280"
  },
  {
    "text": "continuous integration is you can get it so that when you push when you create a poll request it automatically runs a set",
    "start": "2387280",
    "end": "2394079"
  },
  {
    "text": "of tests uh or and do some other activities uh for you before you then",
    "start": "2394079",
    "end": "2400400"
  },
  {
    "text": "merge into master and so of course if you have a big repo you have to do extra",
    "start": "2400400",
    "end": "2405960"
  },
  {
    "text": "work to figure out what's changed in order like I I don't need to run all the tests I only need to really run these",
    "start": "2405960",
    "end": "2411720"
  },
  {
    "text": "few that have touching what's changed um at machine box we ran every test and",
    "start": "2411720",
    "end": "2417960"
  },
  {
    "text": "that just meant that meant we we made sure that the tests ran extremely",
    "start": "2417960",
    "end": "2423079"
  },
  {
    "text": "quickly uh but yes that is it is more more difficult um when you do that and",
    "start": "2423079",
    "end": "2428960"
  },
  {
    "text": "of course the other thing is for open source projects if you've got a package that you're going to open source then",
    "start": "2428960",
    "end": "2434240"
  },
  {
    "text": "that that should just be its own repo because that's just how we do packages",
    "start": "2434240",
    "end": "2439400"
  },
  {
    "text": "in go so but but for company work I I I",
    "start": "2439400",
    "end": "2444520"
  },
  {
    "text": "I must admit I just I'm in love with the mono Reaper at the moment so I have a a different topic real quick while we're",
    "start": "2444520",
    "end": "2450560"
  },
  {
    "text": "talking about structuring go projects one of the questions I get that's related to structuring is actually",
    "start": "2450560",
    "end": "2456880"
  },
  {
    "text": "how many lines should be in a file and how many files should you have per",
    "start": "2456880",
    "end": "2461960"
  },
  {
    "text": "package so see people want to know what they should be doing don't they they",
    "start": "2461960",
    "end": "2467280"
  },
  {
    "text": "want to be told these answers to things and I just don't think there's an answer to that I'm quite happy with quite long",
    "start": "2467280",
    "end": "2474480"
  },
  {
    "text": "files as long as it's all as long as it all makes sense and the way I structure go files I tend to have I do it by",
    "start": "2474480",
    "end": "2481560"
  },
  {
    "text": "importance so if there's a if it's a comments Dogo file I'll have the comments struct at the top because that",
    "start": "2481560",
    "end": "2489640"
  },
  {
    "text": "kind of sets the it gives you know it sets the tone for the rest of the file it tells you this is the sort of data",
    "start": "2489640",
    "end": "2495560"
  },
  {
    "text": "structure that we're working on and then you might have um Constructors and important functions and then you might",
    "start": "2495560",
    "end": "2503160"
  },
  {
    "text": "have methods and things and all the way down to maybe some little helper",
    "start": "2503160",
    "end": "2508520"
  },
  {
    "text": "functions that are pulled out just so because I can unit test them easier uh and they'll tend to be down in the",
    "start": "2508520",
    "end": "2514720"
  },
  {
    "text": "bottom of it so but I I don't know I don't think there's a a maximum limit",
    "start": "2514720",
    "end": "2520680"
  },
  {
    "text": "but I think just naturally I I they haven't grown out of uh out to",
    "start": "2520680",
    "end": "2528200"
  },
  {
    "text": "Wild one thing that's interesting to me about that is I feel like we instinctively just want to split things",
    "start": "2528200",
    "end": "2533839"
  },
  {
    "text": "up all the time like we don't like big files we don't like having like we don't like opening a folder and seeing 50 go",
    "start": "2533839",
    "end": "2540520"
  },
  {
    "text": "files in there for whatever reason we just do not like it it doesn't matter if it is really easy to navigate we're",
    "start": "2540520",
    "end": "2546240"
  },
  {
    "text": "still like going to think this is something's wrong here for whatever reason and it's I guess it's just weird",
    "start": "2546240",
    "end": "2551960"
  },
  {
    "text": "to me at times cuz you almost have to make the mistake of splitting something up too much before you'll finally take a step back and realize I'm you know like",
    "start": "2551960",
    "end": "2559599"
  },
  {
    "text": "it's it's to the point where you're making a package with one function then you make another package with one function finally you're like maybe I'm",
    "start": "2559599",
    "end": "2565040"
  },
  {
    "text": "going a little bit extreme here um but like you have to almost do it before you believe it and before you you catch on",
    "start": "2565040",
    "end": "2570960"
  },
  {
    "text": "that that might not be the best approach that's because we we we tend to we're",
    "start": "2570960",
    "end": "2576400"
  },
  {
    "text": "we're visual creatures right so we tend to look at right um You you sort of make",
    "start": "2576400",
    "end": "2581880"
  },
  {
    "text": "um decisions whether you realize it or not you're already making decisions simply by navigating a the photo structure of a project right you're",
    "start": "2581880",
    "end": "2588400"
  },
  {
    "text": "you're you're again if you saw models controllers views you might say oh this is an NVC app kind of thing right if you",
    "start": "2588400",
    "end": "2594559"
  },
  {
    "text": "saw you know a bunch of files into into you know the root of the project you might be like oh maybe this is a a",
    "start": "2594559",
    "end": "2600800"
  },
  {
    "text": "library you know like something that meant to be imported or something right if you saw a CMD folder you're like oh yeah this thing's to build you know an",
    "start": "2600800",
    "end": "2606920"
  },
  {
    "text": "executable at some point so there's there's some some some that's part of the idiomatic right quote unquote",
    "start": "2606920",
    "end": "2612599"
  },
  {
    "text": "idiomatic go right there's there's some expectations that is set by both the community and perhaps within your own",
    "start": "2612599",
    "end": "2617800"
  },
  {
    "text": "team that helps you sort of navigate and understand this is part of the read readability thing right but there's no",
    "start": "2617800",
    "end": "2623599"
  },
  {
    "text": "hard and fast rules right like Matt saying there's no hard and fast rule on how many you know lines you should have",
    "start": "2623599",
    "end": "2629440"
  },
  {
    "text": "in a go file or how many you know file go files you should have in a folder it's all going to depend on sort of how",
    "start": "2629440",
    "end": "2636200"
  },
  {
    "text": "you reason about the code and the funny thing is some people reason naturally they reason differently so for some",
    "start": "2636200",
    "end": "2641559"
  },
  {
    "text": "people they could the same project could be organized you know 12 different ways right and it would still make sense to when they come back to it so it's going",
    "start": "2641559",
    "end": "2648480"
  },
  {
    "text": "there's going there's going to be a bit of a um if if you're not sort of the the originat of a project when you then you",
    "start": "2648480",
    "end": "2654640"
  },
  {
    "text": "start navigating one you're going to have to sort of um try to put yourself in the shoes of whoever created it right",
    "start": "2654640",
    "end": "2659920"
  },
  {
    "text": "um if you can and then so it sort of kind of helps you think the way they might have perhaps thought in order to",
    "start": "2659920",
    "end": "2665599"
  },
  {
    "text": "assemble right the project structure you're looking at one of the other patterns I picked up too when it comes to that you know when it comes to how do",
    "start": "2665599",
    "end": "2672240"
  },
  {
    "text": "I know when to break a package up or where does it belong is that like let's take your comments package that you had",
    "start": "2672240",
    "end": "2678480"
  },
  {
    "text": "um and all of a sudden it starts to evolve and I can feel like there's two concepts in here right so suddenly comments is bigger than comments right",
    "start": "2678480",
    "end": "2684400"
  },
  {
    "text": "so you know it's time to refactor this package and let's just take the concept maybe there's a formatter like I now have this fancy thing that formats my",
    "start": "2684400",
    "end": "2690880"
  },
  {
    "text": "comments but it's got all this logic in it and it feels like it's related to comments but it's definitely its own",
    "start": "2690880",
    "end": "2697200"
  },
  {
    "text": "concept at this point right it it just belong it's too big to belong in here and what I've seen is I've seen people",
    "start": "2697200",
    "end": "2702440"
  },
  {
    "text": "you know create a comments uncore format or package or something like that and this is where that nesting I think comes in that we talked about earlier it",
    "start": "2702440",
    "end": "2708839"
  },
  {
    "text": "doesn't have any purpose in go it doesn't mean anything special but under comments package I would put a formatter",
    "start": "2708839",
    "end": "2714520"
  },
  {
    "text": "package and so now it's kind of weird because you're going to do formatter do whatever right so it's going to read",
    "start": "2714520",
    "end": "2719960"
  },
  {
    "text": "like that in your code it doesn't have any comment specific thing in that naming but it lives underneath the comments package and what I find is that",
    "start": "2719960",
    "end": "2726839"
  },
  {
    "text": "I like to drop that into that nesting structure and then I always find I reach down from my packages but I never reach",
    "start": "2726839",
    "end": "2734040"
  },
  {
    "text": "back up from my packages so comments can reach into formatter but formatter should never reach into commenter or up",
    "start": "2734040",
    "end": "2740720"
  },
  {
    "text": "up the chain anymore in fact commenter typically won't reach anywhere up anywhere in my entire system so that's",
    "start": "2740720",
    "end": "2747480"
  },
  {
    "text": "one of the patterns I picked up that works out well and I'm curious if you've picked up any patterns like that that's where that's where your internal um",
    "start": "2747480",
    "end": "2754440"
  },
  {
    "text": "package would would benefit as well um for those who don't know like go has basically this this mechanism whereby if",
    "start": "2754440",
    "end": "2760200"
  },
  {
    "text": "you put um go files inside of an internal package right only the only the things that are in that package and",
    "start": "2760200",
    "end": "2766720"
  },
  {
    "text": "below are accessible right um in in that project so that could that's a nice way of actually sort of hiding and",
    "start": "2766720",
    "end": "2773280"
  },
  {
    "text": "preventing right things that are in that internal package from sort of uh peeking out so to speak into other things I'm",
    "start": "2773280",
    "end": "2780200"
  },
  {
    "text": "curious just on that one right there and I've gotten bit by the internal package only when it came to blackbox testing",
    "start": "2780200",
    "end": "2786520"
  },
  {
    "text": "and I'm curious maybe I just maybe there's a convention I'm not aware of but um I once put all of the uh Proto",
    "start": "2786520",
    "end": "2792559"
  },
  {
    "text": "files in internal and then when it came to testing you had to have those structures right but you couldn't get at",
    "start": "2792559",
    "end": "2798160"
  },
  {
    "text": "them in a blackbox test so how do you solve that",
    "start": "2798160",
    "end": "2803440"
  },
  {
    "text": "problem that is a good one I haven't come across that particular issue myself okay and again I just tend to do",
    "start": "2803440",
    "end": "2809839"
  },
  {
    "text": "blackbox I mean again so the way I solved it was I did internal testing right like that was the only way to solve it cuz I had to have access but",
    "start": "2809839",
    "end": "2815559"
  },
  {
    "text": "that where internal has bit me before and I find that I reserve internal for something like truly like this is",
    "start": "2815559",
    "end": "2821040"
  },
  {
    "text": "private private like I don't want anybody to ever touch this on the naming of those sub packages Corey I actually",
    "start": "2821040",
    "end": "2828640"
  },
  {
    "text": "will repeat the name so if it's comments and then you've got comments formatter I",
    "start": "2828640",
    "end": "2833880"
  },
  {
    "text": "will call it comments formatter so you do get a bit of that uh repetition in",
    "start": "2833880",
    "end": "2839160"
  },
  {
    "text": "the folder structure but I think having the having the package name clear when you come to use it is worth it HTTP test",
    "start": "2839160",
    "end": "2845800"
  },
  {
    "text": "test package is an example in the standard library that does this the package is net HTTP HTTP test so you",
    "start": "2845800",
    "end": "2853599"
  },
  {
    "text": "know that in a way you feel like that's redundant when you look at it at that point but in your code then you get to",
    "start": "2853599",
    "end": "2859119"
  },
  {
    "text": "say HTTP test do something yeah there's some real Val validity to that because I",
    "start": "2859119",
    "end": "2864240"
  },
  {
    "text": "think at the end of the day um when I read code especially when I'm coming to a new project and I see something being",
    "start": "2864240",
    "end": "2870200"
  },
  {
    "text": "referenced and I don't know what it is and then when I finally track it I'm like oh it's this sub package over here",
    "start": "2870200",
    "end": "2875440"
  },
  {
    "text": "it makes total sense where it was but I was frustrated that I had to chase this down to find out what I was looking at",
    "start": "2875440",
    "end": "2881559"
  },
  {
    "text": "um yeah it's kind of optimized for writing not really reading and I like to optimize for reading yeah completely",
    "start": "2881559",
    "end": "2887660"
  },
  {
    "text": "[Music]",
    "start": "2887660",
    "end": "2896020"
  },
  {
    "text": "agree this episode is brought to you by strong DM manage and secure remote",
    "start": "2897920",
    "end": "2903200"
  },
  {
    "text": "access to any database any server on PR more in the cloud and environments they",
    "start": "2903200",
    "end": "2908480"
  },
  {
    "text": "make it easy for devops teams to enforce the security and controls infos set teams require so if your engineers need",
    "start": "2908480",
    "end": "2914960"
  },
  {
    "text": "access you need strong DM so what can strong DM do for your team first off more control less hassle Grant or revoke",
    "start": "2914960",
    "end": "2922520"
  },
  {
    "text": "access to any database or server in one command use your SSO to manage access to",
    "start": "2922520",
    "end": "2927640"
  },
  {
    "text": "every database every server and environment second total visibility strong DM upgrades your audit logs log",
    "start": "2927640",
    "end": "2934319"
  },
  {
    "text": "every permission change every query every SSH and every RDP command and know",
    "start": "2934319",
    "end": "2939680"
  },
  {
    "text": "who issued those changes and of course faster stock 2 compliance easily enforce access controls and instantly answer",
    "start": "2939680",
    "end": "2947040"
  },
  {
    "text": "auditor questions head to strong dm.com gotime to learn more and request a free",
    "start": "2947040",
    "end": "2952200"
  },
  {
    "text": "demo again strong dm.com [Music]",
    "start": "2952200",
    "end": "2964520"
  },
  {
    "text": "gotime so like we talk about having the photo",
    "start": "2964520",
    "end": "2970559"
  },
  {
    "text": "structure like this and how you're always reaching down go is probably the first language I've used that doesn't allow cyclical Imports which I know",
    "start": "2970559",
    "end": "2977079"
  },
  {
    "text": "coming from Ruby I feel like everybody just does it naturally there all the time so it was a you know big change um",
    "start": "2977079",
    "end": "2984200"
  },
  {
    "text": "I guess my question for you guys would be like do you agree with that decision is that something that you know like I",
    "start": "2984200",
    "end": "2990000"
  },
  {
    "text": "think now that you get used to it it's like okay we're designing all these things to go work around that is there a time where you kind of wish I wish just",
    "start": "2990000",
    "end": "2996119"
  },
  {
    "text": "go you go just had cyclical Imports there has been for me in the past but usually that's because I've bro I've",
    "start": "2996119",
    "end": "3002160"
  },
  {
    "text": "tried to break things out too early one of the advantages of just having everything in one package is that all",
    "start": "3002160",
    "end": "3009359"
  },
  {
    "text": "your dependencies are just there you can't you're not importing things so you don't have uh you can't have that uh",
    "start": "3009359",
    "end": "3015720"
  },
  {
    "text": "cyclical dependency thing but I I do like it for the uh just for the it kind",
    "start": "3015720",
    "end": "3022040"
  },
  {
    "text": "of forces things to be more simple having that rule so yeah but again I",
    "start": "3022040",
    "end": "3027760"
  },
  {
    "text": "might just be used to it or it fits with the way I already write code anyway in",
    "start": "3027760",
    "end": "3034280"
  },
  {
    "text": "Ruby yeah I mean you can do anything can't you in Ruby you can literally do anything which I used to do Ruby by the",
    "start": "3034280",
    "end": "3040680"
  },
  {
    "text": "way I loved Ruby but it can do anything you can well I it's like in JavaScript",
    "start": "3040680",
    "end": "3047960"
  },
  {
    "text": "right if you have a JavaScript function that takes a string you can just pass the browser in instead do you know what",
    "start": "3047960",
    "end": "3053599"
  },
  {
    "text": "I mean it's like what so yeah I like type safety I do and I",
    "start": "3053599",
    "end": "3058640"
  },
  {
    "text": "like these kind of rules that constrain us and and I find it helps me be more creative yeah I think that from a",
    "start": "3058640",
    "end": "3065440"
  },
  {
    "text": "cyclical dependency standpoint when I first started go and I came from Ruby as well I got bit by that a lot and it took",
    "start": "3065440",
    "end": "3071280"
  },
  {
    "text": "me while to figure it out and I can't remember the last time I've ever had that air creep up when I compiled um cuz",
    "start": "3071280",
    "end": "3078359"
  },
  {
    "text": "you've just become so ingrained where everything is its own concept right like everything's contained in its own",
    "start": "3078359",
    "end": "3083880"
  },
  {
    "text": "package and you just you know by using simple interfaces and and decoupling like it just becomes just second nature",
    "start": "3083880",
    "end": "3091559"
  },
  {
    "text": "um but yeah the only time I think it really bit me was when I was first doing go and I accidentally used the name of",
    "start": "3091559",
    "end": "3098359"
  },
  {
    "text": "the package inside the package I was in like you know I was in the food package I food at something I just didn't realize I did it and I got this massive",
    "start": "3098359",
    "end": "3105640"
  },
  {
    "text": "set of Errors for cyclical Imports and I didn't know what it meant I spent 3 days refactoring tearing it apart only to",
    "start": "3105640",
    "end": "3112359"
  },
  {
    "text": "find out I just had to remove the food dot cuz that was just a typo basically um so that that was my first learning",
    "start": "3112359",
    "end": "3119520"
  },
  {
    "text": "with dependencies but yeah that that's true i' I've come across that one yeah",
    "start": "3119520",
    "end": "3125520"
  },
  {
    "text": "thankfully I haven't spent three days on it but I did I did run across that um I mean usually with the cyclical import",
    "start": "3125520",
    "end": "3131599"
  },
  {
    "text": "stuff that usually is usually a hint that I have a design problem I have an issue right there maybe there's there's",
    "start": "3131599",
    "end": "3138200"
  },
  {
    "text": "another type that's screaming to get out um maybe I need to leverage interfaces more but that's usually like a like a",
    "start": "3138200",
    "end": "3144960"
  },
  {
    "text": "strong like a a loud yell right that's basically saying hey you have a design issue in this code so that's that's when",
    "start": "3144960",
    "end": "3151319"
  },
  {
    "text": "I usually take a step back sit down figure out exactly what I'm trying to do maybe I need to introduce a proper abstraction or something uh and then",
    "start": "3151319",
    "end": "3157680"
  },
  {
    "text": "usually like uh it's it's once you sit down and think about it that the the the issue typic at least for me will will",
    "start": "3157680",
    "end": "3164319"
  },
  {
    "text": "will sort of rear its head out so like oh okay I'm I'm trying to do this and really what I really want to do is is",
    "start": "3164319",
    "end": "3169680"
  },
  {
    "text": "that right so it's it's really like a sign of a design issue it's interesting there's another thing that that drives",
    "start": "3169680",
    "end": "3176319"
  },
  {
    "text": "us towards these problems and that is our obsession with writing dry code so",
    "start": "3176319",
    "end": "3181720"
  },
  {
    "text": "if we have two packages and we and we or actually when we have a package and we're writing a new one and then we want",
    "start": "3181720",
    "end": "3188720"
  },
  {
    "text": "to use some similar Concepts that we've used in another package our for some reason our very natural tendency is to",
    "start": "3188720",
    "end": "3196480"
  },
  {
    "text": "immediately create another third package and will that can become a dependency of these other two packages that's how",
    "start": "3196480",
    "end": "3204079"
  },
  {
    "text": "certainly how I think think about that you know that's my kind of initial uh",
    "start": "3204079",
    "end": "3210400"
  },
  {
    "text": "reaction to when I encounter that I want to dry the code up and I found that if I",
    "start": "3210400",
    "end": "3216359"
  },
  {
    "text": "can resist that Temptation I end up with much better code so instead of taking",
    "start": "3216359",
    "end": "3222040"
  },
  {
    "text": "out things that are common leave them there repeat them even copy and paste from another package um it's okay to do",
    "start": "3222040",
    "end": "3229359"
  },
  {
    "text": "that and I call it moist code and I think we should all write moist code oh I like that I like that I I mean",
    "start": "3229359",
    "end": "3237760"
  },
  {
    "text": "with re use like I've been on teams where you know like um I feel like there's always this need especially from",
    "start": "3237760",
    "end": "3243680"
  },
  {
    "text": "juning developers who kind of seeking feedback and input and mentorship kind of thing they look say well I know I",
    "start": "3243680",
    "end": "3249000"
  },
  {
    "text": "know you said don't refactor too soon but when is the right time right to refactor code that I'm seeing that's being repeated right so like eventually",
    "start": "3249000",
    "end": "3255760"
  },
  {
    "text": "I had to come up with a rule I'm like okay well you don't you don't refactor this code until you've seen it at least",
    "start": "3255760",
    "end": "3261280"
  },
  {
    "text": "three times right then then you can refactor right obviously you know it's it's you it's arbitrary I came up with",
    "start": "3261280",
    "end": "3268200"
  },
  {
    "text": "I'm like that's for me that's been a sweet spot so I'm like that's sort of what I recommend but you know usually I",
    "start": "3268200",
    "end": "3273599"
  },
  {
    "text": "won't bother like you know refactoring repeated code at all until I seen it two at least two or three times I don't",
    "start": "3273599",
    "end": "3280319"
  },
  {
    "text": "think three is arbitary what what three is it's quite interesting I think it's right so the first one is just the first",
    "start": "3280319",
    "end": "3286920"
  },
  {
    "text": "time you've done it so fine that's number one the second one is the where all the Temptation is cuz now like oh",
    "start": "3286920",
    "end": "3292880"
  },
  {
    "text": "we're doing something similar so that's the one that needs the most resistance and then the third time when you come to",
    "start": "3292880",
    "end": "3299160"
  },
  {
    "text": "look at it now you've got three different examples of where this is",
    "start": "3299160",
    "end": "3304400"
  },
  {
    "text": "going to be used you're much better placed to design appropriate abstraction",
    "start": "3304400",
    "end": "3310559"
  },
  {
    "text": "at this point and you can do it based on real data you've got real code you've got real stuff you're not trying to",
    "start": "3310559",
    "end": "3317119"
  },
  {
    "text": "imagine it right I think the third time is also important because you you get a chance to see if either one of the first",
    "start": "3317119",
    "end": "3322680"
  },
  {
    "text": "two evolved or changed cuz I I think there's a lot of times where we see two things and we're like these are the same",
    "start": "3322680",
    "end": "3327880"
  },
  {
    "text": "but realistically they're slightly different in some subtle way and you don't know it until like you know a",
    "start": "3327880",
    "end": "3332960"
  },
  {
    "text": "little while later so if you wait till the third time you're giving that code time to actually show you what the differences are going to be so just",
    "start": "3332960",
    "end": "3339599"
  },
  {
    "text": "jumping back to cyclical Imports though if you don't mind um like where I see it come up the most",
    "start": "3339599",
    "end": "3345480"
  },
  {
    "text": "is psych psych what you're say um can't we give you an",
    "start": "3345480",
    "end": "3351720"
  },
  {
    "text": "error uh so like where I see it pop up is people will get this idea of okay I'm",
    "start": "3351720",
    "end": "3356880"
  },
  {
    "text": "going to try to split my code into like here's my comments package and here's my users package and it usually stems from",
    "start": "3356880",
    "end": "3363680"
  },
  {
    "text": "things like relations in like a SQL database where like a user has many comments and a comment has a user and",
    "start": "3363680",
    "end": "3369280"
  },
  {
    "text": "that's almost always where it comes from and it's it's it's hard at times when you see people doing that because you're",
    "start": "3369280",
    "end": "3374480"
  },
  {
    "text": "like I get why you're doing this but like we need to think about how we're structuring our code you know some different stuff like that just kind of",
    "start": "3374480",
    "end": "3381039"
  },
  {
    "text": "uh you know get around it so I guess one of the big reasons I bring it up is I don't want people to feel bad if they",
    "start": "3381039",
    "end": "3386359"
  },
  {
    "text": "run into it that doesn't mean you're you're necessarily designing poorly or anything um it is a challenging problem",
    "start": "3386359",
    "end": "3391640"
  },
  {
    "text": "at times and there are languages that kind of make you like make it easy to ignore that problem or just to you just",
    "start": "3391640",
    "end": "3397160"
  },
  {
    "text": "move on it doesn't matter and goes just unfortunately not one of them in that way and that's where you end up with the",
    "start": "3397160",
    "end": "3403680"
  },
  {
    "text": "user comments package well sometimes yeah or you end up with a lot",
    "start": "3403680",
    "end": "3410760"
  },
  {
    "text": "of code that's just kind of switching between types as well well I think the other thing is like Matt said people",
    "start": "3410760",
    "end": "3415839"
  },
  {
    "text": "don't want to or maybe it was Johnny but basically people don't like to repeat stuff so like people don't like to like",
    "start": "3415839",
    "end": "3422200"
  },
  {
    "text": "they like to have one struct and this maps to the database and that's it and they don't like to like rewrite that anywhere and I've seen code where having",
    "start": "3422200",
    "end": "3429520"
  },
  {
    "text": "multiple different versions of the same struct that's you know in the database rep you know sometimes that's useful I",
    "start": "3429520",
    "end": "3434599"
  },
  {
    "text": "love that you said as Johnny has already said people don't like to repeat things well I like to repeat things apparently",
    "start": "3434599",
    "end": "3442039"
  },
  {
    "text": "it's worth it's worth repeating apparently I'm really good at you know cycling and",
    "start": "3442039",
    "end": "3449000"
  },
  {
    "text": "repeating okay so I one thing I did find interesting is we're talking about code structure and one of the first things",
    "start": "3449000",
    "end": "3454760"
  },
  {
    "text": "that almost always comes up is folders and you file names that sort of stuff Matt you would had me look at your your",
    "start": "3454760",
    "end": "3461200"
  },
  {
    "text": "talk you giving it go for con and one of the things that was interesting to me is that you're talking about how you",
    "start": "3461200",
    "end": "3466280"
  },
  {
    "text": "structure your how you write your apps and a lot of that's how you structure code and where things go but you never",
    "start": "3466280",
    "end": "3471359"
  },
  {
    "text": "once really mention folders that I'm aware of but yet it was was still really insightful like I guess do you guys know",
    "start": "3471359",
    "end": "3478960"
  },
  {
    "text": "like why do you think that's the case do you think it's just people just don't understand how to organize things or you",
    "start": "3478960",
    "end": "3484880"
  },
  {
    "text": "know and they just get so caught up on the folders or you know is there something else going on well I I tried",
    "start": "3484880",
    "end": "3490240"
  },
  {
    "text": "to write about that in that blog post and I tried to talk about that in my",
    "start": "3490240",
    "end": "3495599"
  },
  {
    "text": "HTTP talks but the problem is as we've talked about if you provide like the end",
    "start": "3495599",
    "end": "3502480"
  },
  {
    "text": "state of something then that doesn't necessarily help Junior developers um to",
    "start": "3502480",
    "end": "3510920"
  },
  {
    "text": "to see the sort of rationale and the reason why that we've ended up in that position and sometimes depending on the",
    "start": "3510920",
    "end": "3519280"
  },
  {
    "text": "where you are in the project so really the context of the project sometimes I do it differently myself so I don't find",
    "start": "3519280",
    "end": "3526440"
  },
  {
    "text": "that there was enough of a common set of patterns there's a couple I talk about like I talk about I keep all my roots in",
    "start": "3526440",
    "end": "3532720"
  },
  {
    "text": "one file called roots. go so this is where I break the rule of having uh",
    "start": "3532720",
    "end": "3537960"
  },
  {
    "text": "things grouped by responsibility and I do that for a good reason because I get a I get a kind of",
    "start": "3537960",
    "end": "3544960"
  },
  {
    "text": "landscape I can see visually the entire service in one place so I find that to be very useful so I sort of break my own",
    "start": "3544960",
    "end": "3551960"
  },
  {
    "text": "rules sometimes as well um and I never I just never found enough commonality for",
    "start": "3551960",
    "end": "3557440"
  },
  {
    "text": "folders and files and things okay so I guess to sort of we don't have a ton of",
    "start": "3557440",
    "end": "3563480"
  },
  {
    "text": "time left do you want to talk about approaches you've tried that you've come to regret or mistakes you've made cuz I",
    "start": "3563480",
    "end": "3569400"
  },
  {
    "text": "feel like you know we always talk about like here's the end end State like this is what we should be doing but we don't really talk about you know what we've",
    "start": "3569400",
    "end": "3575720"
  },
  {
    "text": "tried what didn't work well about it you know things like that or even whether or not trying it was worthwhile from my",
    "start": "3575720",
    "end": "3581880"
  },
  {
    "text": "standpoint there's some approaches I always want to try CU they sound fantastic and then it comes down to I",
    "start": "3581880",
    "end": "3589920"
  },
  {
    "text": "don't try them because I just have to get the code ship so there's always kind of that regret where there's there's a couple ones especially some of the Talks",
    "start": "3589920",
    "end": "3595400"
  },
  {
    "text": "by cat like she's got some really interesting approaches out there and I really want to give them a go one of",
    "start": "3595400",
    "end": "3600480"
  },
  {
    "text": "these days but I also know that there's a lot more work involved there because everything's abstracted significantly",
    "start": "3600480",
    "end": "3606359"
  },
  {
    "text": "more than what I normally do um and so I don't know where to go with that one of these days I might try it uh and I'm",
    "start": "3606359",
    "end": "3611839"
  },
  {
    "text": "really curious how it works out in in practice but fundamentally I do end up",
    "start": "3611839",
    "end": "3617799"
  },
  {
    "text": "with a lot of the same same packages that I always have you know I have like my CMD package um",
    "start": "3617799",
    "end": "3624680"
  },
  {
    "text": "have my domain package I have a lot of the same ones um I don't have models I don't have UTS uh and it took me a long",
    "start": "3624680",
    "end": "3631480"
  },
  {
    "text": "time to agree with not having a models package it really did I fought that for a long time like what is the problem",
    "start": "3631480",
    "end": "3637960"
  },
  {
    "text": "with having the models package and it really just does come down to it does say nothing it says nothing and I think",
    "start": "3637960",
    "end": "3644119"
  },
  {
    "text": "if your package says nothing about it just in its name you've made a mistake that's a really hard one to understand",
    "start": "3644119",
    "end": "3650319"
  },
  {
    "text": "and I can't convince you of that I'm not going to try to convince you of that I'm not going to tell value what's wrong or",
    "start": "3650319",
    "end": "3655359"
  },
  {
    "text": "right I'm hoping that you just come to the that conclusion on your own after you've done it enough times but that's a",
    "start": "3655359",
    "end": "3660599"
  },
  {
    "text": "hard pill to swallow for a lot of people it was a hard pill for me to swallow so would you say that you're saying like",
    "start": "3660599",
    "end": "3666319"
  },
  {
    "text": "they have to do that enough on their own to come to that conclusion so it's almost like I I guess I would get the impression that if you hadn't done it",
    "start": "3666319",
    "end": "3673039"
  },
  {
    "text": "enough times you might not have ever come to that conclusion like you almost had to make those mistakes to to start",
    "start": "3673039",
    "end": "3678079"
  },
  {
    "text": "to learn you know gradually over time like oh I can actually Express this better in this other way right and guess",
    "start": "3678079",
    "end": "3684760"
  },
  {
    "text": "here's the way I would like to explain the models right so let's take a user because we all have a user in most of our packages um and when you have a",
    "start": "3684760",
    "end": "3691280"
  },
  {
    "text": "models. user it's just this data struct there's no Behavior around it maybe there's a validation maybe there's some",
    "start": "3691280",
    "end": "3697000"
  },
  {
    "text": "simple things but it tends to be this really shallow package of just a bunch of data structs and some really simple",
    "start": "3697000",
    "end": "3704039"
  },
  {
    "text": "tests and it just kind of feels like it's just kind of hanging out there but when you have a user package suddenly",
    "start": "3704039",
    "end": "3710480"
  },
  {
    "text": "becomes a very rich package says a lot about itself and it manages its own own behavior and I think that's where when I",
    "start": "3710480",
    "end": "3717400"
  },
  {
    "text": "flipped over to that type of Paradigm that my code became better more understandable um I mean I may have a",
    "start": "3717400",
    "end": "3723760"
  },
  {
    "text": "domain package that in there has a user package and has a um you know comments",
    "start": "3723760",
    "end": "3729160"
  },
  {
    "text": "package or whatever or maybe they're flat within domains it doesn't really matter but the the idea there is it's no",
    "start": "3729160",
    "end": "3734200"
  },
  {
    "text": "longer just a data struct it's not something simplistic in its concept it's the entire the entire thing it's the",
    "start": "3734200",
    "end": "3740960"
  },
  {
    "text": "whole concept which makes a difference for me early on the the some of the very first mistakes I was making was",
    "start": "3740960",
    "end": "3747319"
  },
  {
    "text": "basically to have package bloat basically I had pack I basically created a package inide of a package pack it was",
    "start": "3747319",
    "end": "3753680"
  },
  {
    "text": "like it was like why why what value right I had to basically ask myself what value am I getting from from splitting",
    "start": "3753680",
    "end": "3760440"
  },
  {
    "text": "up right um creating this this this deep hierarchy of things like what why why am I thinking about it that way so that",
    "start": "3760440",
    "end": "3766799"
  },
  {
    "text": "them from being able to say well I can see myself reusing this bit right this",
    "start": "3766799",
    "end": "3772160"
  },
  {
    "text": "portion this package right out of of out of you know this project in a different",
    "start": "3772160",
    "end": "3777240"
  },
  {
    "text": "project right and I'm like well then then I'm creating these dependencies between things right that that I don't",
    "start": "3777240",
    "end": "3783760"
  },
  {
    "text": "need to have right if I really need to use some of the concepts inside of this project just copy the darn",
    "start": "3783760",
    "end": "3790119"
  },
  {
    "text": "file just go put it back over there right like why am I creating these nested dependencies and hierarchies in",
    "start": "3790119",
    "end": "3796359"
  },
  {
    "text": "my in my code so I started basically you know other than having sort of a um um",
    "start": "3796359",
    "end": "3801640"
  },
  {
    "text": "sort of this this ritual really of of for certain projects of creating that c my my CMD folder and putting things in",
    "start": "3801640",
    "end": "3807760"
  },
  {
    "text": "there I really start out flat right and I and I let the the design I let the domain sort of inform like where do I",
    "start": "3807760",
    "end": "3814599"
  },
  {
    "text": "need to create packages and packages under packages right so I think that that notion right there is something",
    "start": "3814599",
    "end": "3820440"
  },
  {
    "text": "basically I carried over from other um Frameworks and other environments other languages that I kind of needed to leave",
    "start": "3820440",
    "end": "3825480"
  },
  {
    "text": "at the door like so many things in go you kind of have to leave a lot of things at the door right and learn to",
    "start": "3825480",
    "end": "3830640"
  },
  {
    "text": "appreciate go for what it is before bringing things and expecting certain things to to sort of expecting the",
    "start": "3830640",
    "end": "3836200"
  },
  {
    "text": "language sort of Bend to your will so to speak right you can do you can write you can write go like you write Java um like",
    "start": "3836200",
    "end": "3844079"
  },
  {
    "text": "you write Ruby um I I don't recommend it it's it's going to end up biting you but you know you can do that but it I'd",
    "start": "3844079",
    "end": "3851920"
  },
  {
    "text": "caution that basically start out you know again go is was meant to be a simple way right of of of of coding of",
    "start": "3851920",
    "end": "3860440"
  },
  {
    "text": "programming really so approach Your Design the same way right start sample and let the let the domain you're work",
    "start": "3860440",
    "end": "3867079"
  },
  {
    "text": "in sort of inform like where where you set up boundaries I think that's great advice one of one of the mistakes I made",
    "start": "3867079",
    "end": "3873520"
  },
  {
    "text": "quite early was I fell I I really fell in love with go interfaces and I never",
    "start": "3873520",
    "end": "3878640"
  },
  {
    "text": "really fell out of love with them to be honest so if I had a package that had say a greeter type and a new greeter",
    "start": "3878640",
    "end": "3887119"
  },
  {
    "text": "Constructor say something like that I would always have an interface there too uh and sometimes I'd hide the the struct",
    "start": "3887119",
    "end": "3894440"
  },
  {
    "text": "and I would only return this interface because I just felt like now there's an interface other people can write",
    "start": "3894440",
    "end": "3900119"
  },
  {
    "text": "greeters and they can write Mark versions if they need to for testing and things and sometimes I would even",
    "start": "3900119",
    "end": "3905640"
  },
  {
    "text": "provide the mark version in the package for testing to help with testing because it's so important and eventually I got some code",
    "start": "3905640",
    "end": "3913960"
  },
  {
    "text": "review probably from somebody on Twitter uh which said which sort of pointed out",
    "start": "3913960",
    "end": "3919359"
  },
  {
    "text": "actually you don't need to do that you can just return the the the concrete type the stru",
    "start": "3919359",
    "end": "3924720"
  },
  {
    "text": "and if somebody else needs an interface they can write their own interface in go",
    "start": "3924720",
    "end": "3930000"
  },
  {
    "text": "we have this duck typing they call it structural typing so you the only",
    "start": "3930000",
    "end": "3936680"
  },
  {
    "text": "requirement for a struct or a type to implement an interface is it just has to have the same methods you don't have to",
    "start": "3936680",
    "end": "3942640"
  },
  {
    "text": "explicitly say like in some languages that I implement this interface explicitly so you users can write their",
    "start": "3942640",
    "end": "3951200"
  },
  {
    "text": "own interface then they can use that interface in their e code it's you can even use that as a storytelling",
    "start": "3951200",
    "end": "3958119"
  },
  {
    "text": "opportunity and not include every field if this greeta struct had 10 methods but",
    "start": "3958119",
    "end": "3963200"
  },
  {
    "text": "I'm only using one of them I could just have an interface with that one method makes it dead clear what I'm going to be",
    "start": "3963200",
    "end": "3968920"
  },
  {
    "text": "using this type for and it's less work when it comes to mocking or writing new",
    "start": "3968920",
    "end": "3974279"
  },
  {
    "text": "implementations to replace it so I think one of the um one of the approaches",
    "start": "3974279",
    "end": "3980200"
  },
  {
    "text": "Johnny you said you know go is like a simp it's meant to be a simple way of programming and I think it's it's worth",
    "start": "3980200",
    "end": "3987160"
  },
  {
    "text": "thinking about like what's the easiest thing to do and and be be a bit lazy too",
    "start": "3987160",
    "end": "3993960"
  },
  {
    "text": "uh do less do it do the minimum you can do and then you like so you know I",
    "start": "3993960",
    "end": "3999799"
  },
  {
    "text": "wouldn't then bother with the interface if I was doing less and that tends to be quite a good way to think about it now",
    "start": "3999799",
    "end": "4007559"
  },
  {
    "text": "of course there are times when you have to do some work hopefully that means we've got a job so that's good and at",
    "start": "4007559",
    "end": "4014400"
  },
  {
    "text": "that time then you have to do some work so then you do it but again do the minimum do the absolute minimum uh if",
    "start": "4014400",
    "end": "4020920"
  },
  {
    "text": "you can and you find that you you you defer a lot of decisions to to the time",
    "start": "4020920",
    "end": "4027680"
  },
  {
    "text": "when you're better placed to make them kind of like using defer",
    "start": "4027680",
    "end": "4033319"
  },
  {
    "text": "yes that's my favorite keyword by the way all right so I think that's about it",
    "start": "4033319",
    "end": "4039160"
  },
  {
    "text": "uh I think we' pretty much hit a little bit over an hour mark so thank you everybody for joining us",
    "start": "4039160",
    "end": "4044680"
  },
  {
    "text": "um if you haven't joined us on the go time slack Channel and the go for slack you should definitely check that out too",
    "start": "4044680",
    "end": "4050480"
  },
  {
    "text": "uh Ben Johnson and some others have been chatting and Ben has written a very you know very awesome article about you know",
    "start": "4050480",
    "end": "4056039"
  },
  {
    "text": "structuring your go applications I think most or all of us have probably read it so um I know it's definitely influenced",
    "start": "4056039",
    "end": "4062200"
  },
  {
    "text": "the way I've designed some of my code and it's really helped so you should check out that sort of stuff too ask questions um we really appreciate you",
    "start": "4062200",
    "end": "4069039"
  },
  {
    "text": "guys tuning in all right thank you for tuning in to",
    "start": "4069039",
    "end": "4075160"
  },
  {
    "text": "this week's episode of go time if you're not yet hang with us in go for slack we have a channel called go time FM look it",
    "start": "4075160",
    "end": "4082279"
  },
  {
    "text": "up you'll find us hang with us during the live shows connect with other members of the community share stories",
    "start": "4082279",
    "end": "4088200"
  },
  {
    "text": "share code share coffee recipes whatever it's a lot of fun also we have discussions at Chang law.com on every",
    "start": "4088200",
    "end": "4095200"
  },
  {
    "text": "episode head to changel love.com go time find this episode and discuss it with",
    "start": "4095200",
    "end": "4100318"
  },
  {
    "text": "the community also thanks to fasty our bandwidth partner Roar for helping us move fast and fix things and Leno for",
    "start": "4100319",
    "end": "4107120"
  },
  {
    "text": "hosting the change law platform our music is produced by the mysterious breake master cylinder and if you want",
    "start": "4107120",
    "end": "4112520"
  },
  {
    "text": "to hear more awesome podcasts like this subscribe to our Master feed it's one feed to rule them all plus some extras",
    "start": "4112520",
    "end": "4118920"
  },
  {
    "text": "that only hit the master feed head to change.com slm or search for changw",
    "start": "4118920",
    "end": "4124238"
  },
  {
    "text": "master in your podcast client you'll find us thanks for tuning in we'll see you next",
    "start": "4124239",
    "end": "4129778"
  },
  {
    "text": "[Music] week",
    "start": "4129779",
    "end": "4135310"
  },
  {
    "text": "[Music]",
    "start": "4135310",
    "end": "4162499"
  },
  {
    "text": "come [Music]",
    "start": "4162719",
    "end": "4176979"
  },
  {
    "text": "hey guess what brain science is officially launched episode number one is on the feed right now so had to",
    "start": "4181679",
    "end": "4187600"
  },
  {
    "text": "chain.com brain science to listen to subscribe and to join us on this journey of exploring the human mind once again",
    "start": "4187600",
    "end": "4194920"
  },
  {
    "text": "Chang law.com brain science or search for brain science in your favorite podcast",
    "start": "4194920",
    "end": "4201719"
  },
  {
    "text": "[Music]",
    "start": "4203170",
    "end": "4214880"
  },
  {
    "text": "app",
    "start": "4214880",
    "end": "4217880"
  }
]