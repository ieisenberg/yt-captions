[
  {
    "text": "bandwidth for change log is provided by fastly learn more at fastly.com and",
    "start": "120",
    "end": "5920"
  },
  {
    "text": "we're hosted on Leno servers head to lin.com changelog I'm David Chase and it is go",
    "start": "5920",
    "end": "15230"
  },
  {
    "text": "[Music]",
    "start": "15230",
    "end": "24578"
  },
  {
    "text": "time it's go time a weekly podcast where we discuss interesting topics around the go program language the community and",
    "start": "24640",
    "end": "31720"
  },
  {
    "text": "everything in between if you currently write go or aspire to this is the show for",
    "start": "31720",
    "end": "37210"
  },
  {
    "text": "[Music]",
    "start": "37210",
    "end": "45639"
  },
  {
    "text": "you welcome back everybody this is go Time episode number 52 where we're joined by David Chase I'm Brian ketton",
    "start": "46800",
    "end": "54800"
  },
  {
    "text": "standing in for Eric St Martin who is out today I'm joined by carlesia Pinto",
    "start": "54800",
    "end": "60320"
  },
  {
    "text": "hi everybody and Ashley mcnamer if you're filling in for Eric who am I",
    "start": "60320",
    "end": "65640"
  },
  {
    "text": "filling in for you're filling in for me perfect yep I'm standing in for Eric",
    "start": "65640",
    "end": "70840"
  },
  {
    "text": "you're standing in for me carsia is standing in for carissia and David is standing in for David right perfect so",
    "start": "70840",
    "end": "79320"
  },
  {
    "text": "David why don't you start off by introducing yourself kind of giving us uh some background and telling us what you do so I guess my background is in",
    "start": "79320",
    "end": "88840"
  },
  {
    "text": "programming languages compilers and programming language run times um this",
    "start": "88840",
    "end": "95119"
  },
  {
    "text": "started out way back when when Fortran but now I work on go mostly on",
    "start": "95119",
    "end": "102560"
  },
  {
    "text": "the go compiler but there is a pretty healthy runtime component to the",
    "start": "102560",
    "end": "110000"
  },
  {
    "text": "compiler work so and the garbage collector for instance requires right",
    "start": "110000",
    "end": "115880"
  },
  {
    "text": "barriers the compiler has to be aware of them and it can do optimization ations involving them the scheduling and go is",
    "start": "115880",
    "end": "123520"
  },
  {
    "text": "cooperative and the compiler enforces the cooperation and I'm already pretty",
    "start": "123520",
    "end": "128520"
  },
  {
    "text": "much down deep in the weeds with what I do but those examples of what the work is like I have experience with some of",
    "start": "128520",
    "end": "136920"
  },
  {
    "text": "the features that people talk about wanting for goto so I try to contribute there too",
    "start": "136920",
    "end": "144560"
  },
  {
    "text": "like generics nice so can you kind of you know I'm I'm a more of a business",
    "start": "144560",
    "end": "152120"
  },
  {
    "text": "information guy rather than a computer science guy can you kind of give us the run a rundown of what components are",
    "start": "152120",
    "end": "158239"
  },
  {
    "text": "involved in a compiler what what what does a a compiler do when I type in",
    "start": "158239",
    "end": "163720"
  },
  {
    "text": "source code stop stealing my questions hey Brian hey be",
    "start": "163720",
    "end": "171319"
  },
  {
    "text": "nice so it it varies somewhat from compiler to compiler but in",
    "start": "171319",
    "end": "177519"
  },
  {
    "text": "general uh they they tend to have phases and they sort of mix and match so you",
    "start": "177519",
    "end": "183599"
  },
  {
    "text": "start with you start with the characters they tend to transform those into a tree based",
    "start": "183599",
    "end": "190000"
  },
  {
    "text": "representation usually they do scanning to break it into tokens and then parsing",
    "start": "190000",
    "end": "196000"
  },
  {
    "text": "to combine the tokens into more struct with more structure once you have the tree you can",
    "start": "196000",
    "end": "202239"
  },
  {
    "text": "do a certain amount of I think they would call you you would call it semantic analysis so enforcing a lot of",
    "start": "202239",
    "end": "209360"
  },
  {
    "text": "the rules of the language you know can you look at this can you look at that do the types match and so on and some",
    "start": "209360",
    "end": "216599"
  },
  {
    "text": "compilers go straight from the go go straight from tree to code generation and in fact the go compiler used to do",
    "start": "216599",
    "end": "223040"
  },
  {
    "text": "that uh about God I can't even remember which",
    "start": "223040",
    "end": "228439"
  },
  {
    "text": "release it was um I guess we lit up SSA at 1.7 we",
    "start": "228439",
    "end": "233799"
  },
  {
    "text": "added a phase um Keith Randall talked about this at goer con and that talk",
    "start": "233799",
    "end": "239280"
  },
  {
    "text": "will be on online in a little while but we we added a lower level phase it's",
    "start": "239280",
    "end": "244360"
  },
  {
    "text": "somewhat closer to the machine code but it is also structured and it makes it easy to",
    "start": "244360",
    "end": "252480"
  },
  {
    "text": "express a lot of optimizations and it was surprisingly easy to do our ports",
    "start": "252480",
    "end": "258560"
  },
  {
    "text": "too um when we went from supporting it on one platform to all of them so the go",
    "start": "258560",
    "end": "264639"
  },
  {
    "text": "compiler again is characters come in scan and parse into an do semantic",
    "start": "264639",
    "end": "270160"
  },
  {
    "text": "analysis to enforce rules transform as to SSA and do a certain amount of",
    "start": "270160",
    "end": "276840"
  },
  {
    "text": "optimization and then we interfac the go assembler and outcomes machine code um",
    "start": "276840",
    "end": "284000"
  },
  {
    "text": "that's that's a crude description there are certain important analyses that we do on the tree based form still and it",
    "start": "284000",
    "end": "293400"
  },
  {
    "text": "would actually be a lot of work to get some of them out uh Escape analysis is actually inter procedure",
    "start": "293400",
    "end": "301039"
  },
  {
    "text": "within the package within the package that's being compiled and on top of all the packages",
    "start": "301039",
    "end": "307600"
  },
  {
    "text": "that it requires and it would be nice to move that into the SSA framework but it",
    "start": "307600",
    "end": "314880"
  },
  {
    "text": "would require several changes to the SSA framework and in particular it would require us to do the entire package at",
    "start": "314880",
    "end": "321680"
  },
  {
    "text": "one time in SSA which is not what it's built to do just yet so when you say you do Escape",
    "start": "321680",
    "end": "328560"
  },
  {
    "text": "analysis against the a um does that mean that there are notations added to the",
    "start": "328560",
    "end": "335440"
  },
  {
    "text": "source code somehow or to the abstract syntax tree that show what the results",
    "start": "335440",
    "end": "341319"
  },
  {
    "text": "of that escape analysis how does that analysis move from the as into the final",
    "start": "341319",
    "end": "346440"
  },
  {
    "text": "generated code so the as nodes um sort of an artifact if you go",
    "start": "346440",
    "end": "352440"
  },
  {
    "text": "look at the Go Source tree you will find two ests and one of them is sort of very",
    "start": "352440",
    "end": "360080"
  },
  {
    "text": "visible and it's for public consumption for source code transformation there's the one there's",
    "start": "360080",
    "end": "366880"
  },
  {
    "text": "also the one that the compiler uses and the one that the compiler uses the as",
    "start": "366880",
    "end": "372400"
  },
  {
    "text": "nodes have a lot of extra baggage added to them to do just that among other",
    "start": "372400",
    "end": "377639"
  },
  {
    "text": "things so that you can say this this identifier had its address taken",
    "start": "377639",
    "end": "384039"
  },
  {
    "text": "therefore it probably can't go into register um Escape analysis runs over",
    "start": "384039",
    "end": "391160"
  },
  {
    "text": "all the identifiers that have their address taken or all the Expressions too because you can have so at the at the",
    "start": "391160",
    "end": "397800"
  },
  {
    "text": "tree level you know sort of everything can have a name even if it doesn't have a source code name and so everything",
    "start": "397800",
    "end": "403440"
  },
  {
    "text": "that could have its address taken Escape analysis looks to see where those addresses go and not only locally tags",
    "start": "403440",
    "end": "412160"
  },
  {
    "text": "them by saying you know your HEAP your HEAP your HEAP uh you're stack your stack your stack um it also generates",
    "start": "412160",
    "end": "420160"
  },
  {
    "text": "interprocedural summary information to go into the export data for the package",
    "start": "420160",
    "end": "426479"
  },
  {
    "text": "so that if you I I don't have any handy examples but there are functions that",
    "start": "426479",
    "end": "432840"
  },
  {
    "text": "you can call of say two parameters and it says this guy this function yeah you pass the pointers in but that's okay",
    "start": "432840",
    "end": "439000"
  },
  {
    "text": "this function looks but does not does not tell does not spread them around so",
    "start": "439000",
    "end": "444360"
  },
  {
    "text": "if they weren't escaping they're still not escaping so may have been again",
    "start": "444360",
    "end": "449400"
  },
  {
    "text": "deeper in the weeds but no that's where we want to go we want to go deep okay we have several uh listener questions so",
    "start": "449400",
    "end": "457960"
  },
  {
    "text": "we're going to start with with Matt first he said what is a good place to get started if you want to contribute to",
    "start": "457960",
    "end": "463879"
  },
  {
    "text": "the go compiler oh oh I'm seeing the slack Channel I",
    "start": "463879",
    "end": "469560"
  },
  {
    "text": "wasn't paying attention rats it's fine I'll read them",
    "start": "469560",
    "end": "474800"
  },
  {
    "text": "so my personal hobby horse this month is",
    "start": "474800",
    "end": "479879"
  },
  {
    "text": "that we need better benchmarks but that's not the same as the technical work on the compiler even though it's",
    "start": "479879",
    "end": "486039"
  },
  {
    "text": "really important um because our our benchmarks are not the things that people run that",
    "start": "486039",
    "end": "492360"
  },
  {
    "text": "they actually care about um not all the architectures",
    "start": "492360",
    "end": "497479"
  },
  {
    "text": "receive the same amount of attention so if someone were say a particular fan of",
    "start": "497479",
    "end": "503879"
  },
  {
    "text": "arm or arm 64 power PC 64 or mips we",
    "start": "503879",
    "end": "508960"
  },
  {
    "text": "have people who look at nips and nip 64 um it's possible that there are",
    "start": "508960",
    "end": "516399"
  },
  {
    "text": "idioms that we're getting wrong and we could do better and so the I'm I'm",
    "start": "516399",
    "end": "522518"
  },
  {
    "text": "thinking about what's the most accessible part of the compiler and the most accessible part of the compiler is",
    "start": "522519",
    "end": "528600"
  },
  {
    "text": "to me at least so that could be wrong where we lower the code from generic SSA",
    "start": "528600",
    "end": "534760"
  },
  {
    "text": "to the various architectures instruction sets that's pattern matching and it's",
    "start": "534760",
    "end": "541480"
  },
  {
    "text": "pretty obvious to see what it's doing and there have been cases where we just",
    "start": "541480",
    "end": "546920"
  },
  {
    "text": "didn't have the right pattern for something or we were missing a pattern some of them could be a little groty but",
    "start": "546920",
    "end": "552240"
  },
  {
    "text": "they're not all and that's just a good place to um it's it's a good place to",
    "start": "552240",
    "end": "557800"
  },
  {
    "text": "start you can you can you can look at it and you can understand what's happening if that makes any sense that that's so",
    "start": "557800",
    "end": "565160"
  },
  {
    "text": "that brings up a question for me though does do we do we no longer have the um intermediate go assembler that's",
    "start": "565160",
    "end": "572720"
  },
  {
    "text": "output is that is there still a step that outputs go assembler the old plan N9 assembler which then gets translated",
    "start": "572720",
    "end": "579519"
  },
  {
    "text": "or is that step gone now um it's essentially still there it's building",
    "start": "579519",
    "end": "584880"
  },
  {
    "text": "internal assembler data structures I don't think we're I don't think we're actually writing a file oh I see I know",
    "start": "584880",
    "end": "590399"
  },
  {
    "text": "we're not writing a file there's a follow-up question to Matt's original question about how to contribute and he",
    "start": "590399",
    "end": "596640"
  },
  {
    "text": "was asking if there is any uh recommended reading for Kyler internals um hang on just a",
    "start": "596640",
    "end": "603920"
  },
  {
    "text": "second I'm fully expecting David to come back with the title of his book that he wrote right same no I have not written",
    "start": "603920",
    "end": "612000"
  },
  {
    "text": "the book um I was going to grab three books that I know of I don't",
    "start": "612000",
    "end": "621600"
  },
  {
    "text": "actually know if any of these do a good job of covering",
    "start": "621600",
    "end": "627760"
  },
  {
    "text": "SSA okay okay so we have a little one",
    "start": "627760",
    "end": "633480"
  },
  {
    "text": "whole sub chapter in Cooper and Toren so that's one that's engineering a",
    "start": "633480",
    "end": "640480"
  },
  {
    "text": "compiler and what you can also do um if you want to research that question a",
    "start": "640480",
    "end": "646480"
  },
  {
    "text": "little bit is you can drop it in the slack Channel later and I can help remind you okay that might be a good thing to",
    "start": "646480",
    "end": "654079"
  },
  {
    "text": "do um wowzers yeah so I have I have several",
    "start": "654079",
    "end": "659360"
  },
  {
    "text": "compiler books I know that Andrew Appel has written several for very in various",
    "start": "659360",
    "end": "666519"
  },
  {
    "text": "programming languages which might be interesting to",
    "start": "666519",
    "end": "672920"
  },
  {
    "text": "um look at if you were you know if you were already familiar with a particular programming language that is another another choice",
    "start": "672920",
    "end": "682360"
  },
  {
    "text": "so here's a question is there a a compiler that people consider to be like",
    "start": "682360",
    "end": "687959"
  },
  {
    "text": "a a canonical compiler implementation or a particularly easy to access or easy to",
    "start": "687959",
    "end": "694839"
  },
  {
    "text": "grab compiler implementation like is there one compiler that's so much nicer than all the",
    "start": "694839",
    "end": "700279"
  },
  {
    "text": "others um there used to be one um LCC",
    "start": "700279",
    "end": "705680"
  },
  {
    "text": "had a reputation it a Fraser and Hansen but it's it's you know some of this is a",
    "start": "705680",
    "end": "711959"
  },
  {
    "text": "little old but it was a relatively small",
    "start": "711959",
    "end": "717000"
  },
  {
    "text": "relatively easy to comprehend compiler um I don't think that the go",
    "start": "717000",
    "end": "722079"
  },
  {
    "text": "compiler is necessarily that scary um I",
    "start": "722079",
    "end": "727240"
  },
  {
    "text": "don't know it seems pretty scary to me um like I want you to explain everything like I'm five yeah so the problem is I'm",
    "start": "727240",
    "end": "734360"
  },
  {
    "text": "sitting here thinking of the compilers I've worked in and what's happens is that anything that's successful gets",
    "start": "734360",
    "end": "740880"
  },
  {
    "text": "ported to a lot of architectures and then as soon as it gets ported to a lot of architectures that introduces all the",
    "start": "740880",
    "end": "748240"
  },
  {
    "text": "generality that you need to support a bunch of architectures and then people want it to go faster and you start",
    "start": "748240",
    "end": "755120"
  },
  {
    "text": "getting more and more hair and optimizations and go compiler is not",
    "start": "755120",
    "end": "762920"
  },
  {
    "text": "bad it's not bad it's not bad what what could make it better um well so this is a problem",
    "start": "762920",
    "end": "770320"
  },
  {
    "text": "because it means better for whom so we have stuff in the pipeline right now that is going to be I think way better",
    "start": "770320",
    "end": "777519"
  },
  {
    "text": "for compile time and a little bit better for performance",
    "start": "777519",
    "end": "782839"
  },
  {
    "text": "so we think that if we improve the um import export again we already improved",
    "start": "782839",
    "end": "788279"
  },
  {
    "text": "it once if we do it again then we can make it more on demand and less batchy",
    "start": "788279",
    "end": "796560"
  },
  {
    "text": "and then that in turn will allow us to turn on inlining um what they call Mid",
    "start": "796560",
    "end": "802240"
  },
  {
    "text": "stack in lining and so that'll be good we you know we think that that might make everything about 5% faster",
    "start": "802240",
    "end": "809399"
  },
  {
    "text": "um except that it won't make compile time faster until we do this lazy um",
    "start": "809399",
    "end": "815120"
  },
  {
    "text": "lazy import lazy import will be great at automate compiling a little bit faster than it is right now even even with the",
    "start": "815120",
    "end": "822399"
  },
  {
    "text": "expensive extra inlining but from the point of view of reading the compiler it",
    "start": "822399",
    "end": "827959"
  },
  {
    "text": "got a little worse yeah that makes some sense I mean there's always a a cost",
    "start": "827959",
    "end": "833040"
  },
  {
    "text": "what else is in the pipeline for the compiler for one nine wa for 110",
    "start": "833040",
    "end": "839680"
  },
  {
    "text": "well yeah two 1 nine 110 2.0 so I don't know everything I know",
    "start": "839680",
    "end": "847399"
  },
  {
    "text": "around me um we tried to get in a CL a big CL that would have improved the",
    "start": "847399",
    "end": "854199"
  },
  {
    "text": "debugging experience for optimized code and we didn't make it and so that is",
    "start": "854199",
    "end": "860959"
  },
  {
    "text": "definitely in the pipeline uh we want to we want to have a better story for that we want to you know if you have to in",
    "start": "860959",
    "end": "868120"
  },
  {
    "text": "particular if you have a crash and you get a dump that's generally optimized code which is the usual case for go and",
    "start": "868120",
    "end": "875560"
  },
  {
    "text": "what was the C for well so when we run SSA it tends to break up variable",
    "start": "875560",
    "end": "881160"
  },
  {
    "text": "lifetimes into into smaller chunks and so they'll go in and out of registers",
    "start": "881160",
    "end": "886800"
  },
  {
    "text": "they they right now they're still homed to the same same stack slot but over",
    "start": "886800",
    "end": "892000"
  },
  {
    "text": "this you know this basic block it might be in a register and then a little while later it might be in a different",
    "start": "892000",
    "end": "897680"
  },
  {
    "text": "register and so we have to emit the debugging information that describes that value",
    "start": "897680",
    "end": "904480"
  },
  {
    "text": "movement in and out of registers so we that's that's something that we really",
    "start": "904480",
    "end": "909800"
  },
  {
    "text": "want to get done at 110 um we have been getting more and",
    "start": "909800",
    "end": "915600"
  },
  {
    "text": "more trouble with Loop so I mentioned that the",
    "start": "915600",
    "end": "920720"
  },
  {
    "text": "cooperation The Cooperative scheduling in go is enforced by the",
    "start": "920720",
    "end": "926199"
  },
  {
    "text": "compiler and right now it's kind of lightly enforced it enforces it when you",
    "start": "926199",
    "end": "933839"
  },
  {
    "text": "enter a function or method but if you are running in a tight",
    "start": "933839",
    "end": "939680"
  },
  {
    "text": "Loop that has no function calls within it it does not enforce any cooperation",
    "start": "939680",
    "end": "946360"
  },
  {
    "text": "there and this is a particular problem um ree hiltner mentioned this in his um",
    "start": "946360",
    "end": "954600"
  },
  {
    "text": "tutorial or his talk also at goer con also you know where the garbage collector needs it needs to interrupt",
    "start": "954600",
    "end": "961839"
  },
  {
    "text": "all the threads right at the beginning of a GC just for a few microseconds but it does need to",
    "start": "961839",
    "end": "968480"
  },
  {
    "text": "interrupt all of them and it does this by asking them to reschedule themselves they all reschedule they discover that a",
    "start": "968480",
    "end": "975160"
  },
  {
    "text": "garbage collection is in process they go stand in a corner and wait till the GC does its thing and then says yeah back",
    "start": "975160",
    "end": "981560"
  },
  {
    "text": "in the pool go and then there's this one guy running a tight Loop and the GC",
    "start": "981560",
    "end": "987160"
  },
  {
    "text": "tries to tap him on the shoulder he does not respond and does not respond and does",
    "start": "987160",
    "end": "993399"
  },
  {
    "text": "not respond and does not respond and so everything hangs up and it can be a an",
    "start": "993399",
    "end": "999319"
  },
  {
    "text": "appreciable fraction of your pause time for GC and in some rare cases it can be",
    "start": "999319",
    "end": "1005759"
  },
  {
    "text": "long and so we need to fix that and so we need to change the compiler to add",
    "start": "1005759",
    "end": "1011759"
  },
  {
    "text": "the preemption check on every loop back Edge and the problem with that is it slows down your Loops a little bit m and",
    "start": "1011759",
    "end": "1018600"
  },
  {
    "text": "Some Loops it slows down a lot so there's follow-up work to try to figure",
    "start": "1018600",
    "end": "1023920"
  },
  {
    "text": "out if we can mitigate this cost um using a clever implementation we have already tried",
    "start": "1023920",
    "end": "1030959"
  },
  {
    "text": "Loop unrolling and for whatever reason it was not helpful so either we did it",
    "start": "1030959",
    "end": "1037199"
  },
  {
    "text": "wrong um we probably did it wrong because we did it kind of in a very bloody minded way um just you know take",
    "start": "1037199",
    "end": "1045880"
  },
  {
    "text": "the loop don't get smart about the indexing or anything just do the check over and over it just I want to say make",
    "start": "1045880",
    "end": "1052640"
  },
  {
    "text": "two copies of the body but check after every execution of the body so twice per",
    "start": "1052640",
    "end": "1057960"
  },
  {
    "text": "Loop whereas in many counted Loops you could say well I'm going to unroll by two increment by two and then I'll worry",
    "start": "1057960",
    "end": "1064480"
  },
  {
    "text": "about the odd case at the end and so we didn't do anything that clever so that's",
    "start": "1064480",
    "end": "1069760"
  },
  {
    "text": "also for 110 is dealing with that and the and the knock on problems there um",
    "start": "1069760",
    "end": "1076080"
  },
  {
    "text": "the garbage collector guys are looking into whether they can make generational collection work and that will add a",
    "start": "1076080",
    "end": "1083080"
  },
  {
    "text": "right barrier that's going to be on all the time which will then motivate us to look",
    "start": "1083080",
    "end": "1088480"
  },
  {
    "text": "a lot harder at right barrier optimizations I I don't know who's going to be doing that um might be me might be",
    "start": "1088480",
    "end": "1096200"
  },
  {
    "text": "somebody else but we're certainly motivated to look at it I wonder if you have a",
    "start": "1096200",
    "end": "1102600"
  },
  {
    "text": "feature that is on at the top of your wish list that if you had no constraint",
    "start": "1102600",
    "end": "1109240"
  },
  {
    "text": "you could Implement that and make go a ton better I hate to say if it had no",
    "start": "1109240",
    "end": "1115159"
  },
  {
    "text": "constraints because that's not really that's not really go and pretend",
    "start": "1115159",
    "end": "1122120"
  },
  {
    "text": "it's magic pretend it's magic yes oh man maybe no time constraints or no budget",
    "start": "1122120",
    "end": "1129919"
  },
  {
    "text": "constraints well so are you talking completely compatible you talking about Go the language or go its",
    "start": "1129919",
    "end": "1137320"
  },
  {
    "text": "implementation Go the language um I just trying to assess where your mind is in",
    "start": "1137320",
    "end": "1143240"
  },
  {
    "text": "terms of uh what you admire like what you admire about go and how do you see",
    "start": "1143240",
    "end": "1150480"
  },
  {
    "text": "it becoming better than it is it doesn't really matter I just wanted to get a sense for how you think about",
    "start": "1150480",
    "end": "1158280"
  },
  {
    "text": "go so if I were to say look at the proposals that went by in the last year",
    "start": "1158280",
    "end": "1164080"
  },
  {
    "text": "or so for goto the one that I really really kind",
    "start": "1164080",
    "end": "1169120"
  },
  {
    "text": "of would love to see that you know that I almost thought they could have put in it had I think it had syntax that would",
    "start": "1169120",
    "end": "1174960"
  },
  {
    "text": "have allowed us to put it in if we wanted to was the multi-dimensional",
    "start": "1174960",
    "end": "1180880"
  },
  {
    "text": "slices uh that's really kind of my foray and background speaking there",
    "start": "1180880",
    "end": "1186200"
  },
  {
    "text": "but um it's one of these things where people who don't write that kind of code think yeah yeah it's easy you just you",
    "start": "1186200",
    "end": "1193280"
  },
  {
    "text": "just coat it up it's fine um and it's the usual thing anything that I don't actually have to do that someone else",
    "start": "1193280",
    "end": "1199720"
  },
  {
    "text": "has to do that must be easy and it's really much nicer to have the multi-dimensional syntax and it's really",
    "start": "1199720",
    "end": "1207559"
  },
  {
    "text": "much better in terms of generating code and doing bounce check elimination if you have it built into the",
    "start": "1207559",
    "end": "1213919"
  },
  {
    "text": "language and it's tremendously useful and for a certain kind of computing and",
    "start": "1213919",
    "end": "1220039"
  },
  {
    "text": "the people for her it's useful this is the Fortran crowd they've sort of been stuck at",
    "start": "1220039",
    "end": "1226360"
  },
  {
    "text": "Fortran for ages uh C++ has done amazing things for them but often you have to be",
    "start": "1226360",
    "end": "1233520"
  },
  {
    "text": "willing to sign up for crazy C++ templates um you know goes this nice",
    "start": "1233520",
    "end": "1240840"
  },
  {
    "text": "clean comprehendable language it's just a little thing and you could do I it",
    "start": "1240840",
    "end": "1246799"
  },
  {
    "text": "appeals to me you know generics it's like oh yeah generics would be cool if we could agree on what they",
    "start": "1246799",
    "end": "1252960"
  },
  {
    "text": "meant um and if we could agree on their implementation character characteristic",
    "start": "1252960",
    "end": "1258679"
  },
  {
    "text": "of what we wanted to do and and there's all sorts of risks where it might not make it a better language yeah of course",
    "start": "1258679",
    "end": "1266600"
  },
  {
    "text": "so um I so the one for me that looked like the most likely to win would be the",
    "start": "1266600",
    "end": "1271840"
  },
  {
    "text": "multi-dimensional slices I liked that a lot it didn't make it in made me sad I",
    "start": "1271840",
    "end": "1277200"
  },
  {
    "text": "want to flip this question around and ask you what it's in goal",
    "start": "1277200",
    "end": "1282400"
  },
  {
    "text": "today from a compiler perspective that you would be happy removing and maybe",
    "start": "1282400",
    "end": "1288679"
  },
  {
    "text": "that's not even a fair question because uh as far as functionality go is already",
    "start": "1288679",
    "end": "1294000"
  },
  {
    "text": "so minimalist but I was wondering if you had one or two things that you could get",
    "start": "1294000",
    "end": "1299600"
  },
  {
    "text": "rid of easily um I have it's not a compiler",
    "start": "1299600",
    "end": "1306440"
  },
  {
    "text": "thing um I have opinions about how things go back and",
    "start": "1306440",
    "end": "1313640"
  },
  {
    "text": "forth to SEO and we're close and I think that we're",
    "start": "1313640",
    "end": "1320039"
  },
  {
    "text": "converging um we may be we may have already met and I may I may have just",
    "start": "1320039",
    "end": "1325320"
  },
  {
    "text": "misunderstood because I don't do enough SEO programming to get a really good feel for some of the",
    "start": "1325320",
    "end": "1330919"
  },
  {
    "text": "details um nah that's not probably not even that it's a t like you said it's a",
    "start": "1330919",
    "end": "1337159"
  },
  {
    "text": "tiny language they did not put a lot of um there's not a lot of crud in it yeah",
    "start": "1337159",
    "end": "1343520"
  },
  {
    "text": "we like it that way yeah we do like it that way yes uh Mansfield has a has a",
    "start": "1343520",
    "end": "1350080"
  },
  {
    "text": "question that sort of uh ties back into what you were talking about before how the changes that you guys are making are not really going to affect uh compile",
    "start": "1350080",
    "end": "1356520"
  },
  {
    "text": "time uh he was asking uh do you think that the speed of compilation is hamstringing the advancements in the",
    "start": "1356520",
    "end": "1362520"
  },
  {
    "text": "compiler I thought that that was a good question so what he says advancements he's talking about like 17 zillion",
    "start": "1362520",
    "end": "1371080"
  },
  {
    "text": "amazing optimizations that we could be doing but we're not um at one level yeah sure",
    "start": "1371080",
    "end": "1378600"
  },
  {
    "text": "but I have worked on compilers like that and if you want to",
    "start": "1378600",
    "end": "1385400"
  },
  {
    "text": "have so there so there's an aspect of go that makes it I want to say I this is a",
    "start": "1385400",
    "end": "1392159"
  },
  {
    "text": "tricky conversation to have but um he says it's a loaded question",
    "start": "1392159",
    "end": "1397559"
  },
  {
    "text": "but I mean his question is loaded but if you do a lot you know if you do you know",
    "start": "1397559",
    "end": "1403919"
  },
  {
    "text": "absolutely there are things there are optimizations that we are unlike to do",
    "start": "1403919",
    "end": "1409240"
  },
  {
    "text": "because the implementation costs are too high and otherwise it is it is just kind",
    "start": "1409240",
    "end": "1415440"
  },
  {
    "text": "of a pain and you sort of live with it um in some cases it means that",
    "start": "1415440",
    "end": "1422919"
  },
  {
    "text": "you you know it's it's one of these usual you know three three good things choose",
    "start": "1422919",
    "end": "1428120"
  },
  {
    "text": "two um because you could make a compiler that did more optimization and also ran",
    "start": "1428120",
    "end": "1434799"
  },
  {
    "text": "quickly is but that often means that you would be using",
    "start": "1434799",
    "end": "1440679"
  },
  {
    "text": "really hairy algorithms and we've had to do this already so you know returning to the SSA",
    "start": "1440679",
    "end": "1448440"
  },
  {
    "text": "representation it's really interesting because it lets you express a number of",
    "start": "1448440",
    "end": "1453880"
  },
  {
    "text": "optimizations in a very clean way and it lets you express these transformations in a very clean way but if you actually",
    "start": "1453880",
    "end": "1461440"
  },
  {
    "text": "look at how SSA is generated there is a step in there that for some inputs the",
    "start": "1461440",
    "end": "1468720"
  },
  {
    "text": "first time we did it just caused the compiler to go eight you know 6",
    "start": "1468720",
    "end": "1475000"
  },
  {
    "text": "Gigabytes 40 minutes that kind of crazy and we read papers and so we had",
    "start": "1475000",
    "end": "1481960"
  },
  {
    "text": "to go and Implement stuff from papers and we have also had um bugs every once",
    "start": "1481960",
    "end": "1488039"
  },
  {
    "text": "in a while where someone very cleverly took a recursive depth for search",
    "start": "1488039",
    "end": "1495080"
  },
  {
    "text": "numbering transformation kind of an algorithm and they got the and they dsed it they",
    "start": "1495080",
    "end": "1501440"
  },
  {
    "text": "turned it into something that maintained its own stack and they subtly perturbed the depth for search numbering and it",
    "start": "1501440",
    "end": "1507919"
  },
  {
    "text": "wasn't really depth for search anymore and you'd get these crazy bugs that you would not catch with any simple example",
    "start": "1507919",
    "end": "1515600"
  },
  {
    "text": "so again you get a fast you know you have a nice fast compiler but some of the algorithms underpinning SSA are",
    "start": "1515600",
    "end": "1524279"
  },
  {
    "text": "delicate and sneaky and so this is the problem you like yeah were willing to just burn time we could pretty easily",
    "start": "1524279",
    "end": "1531559"
  },
  {
    "text": "Implement some hairy optimizations some some more aggressive",
    "start": "1531559",
    "end": "1536760"
  },
  {
    "text": "optimizations uh but we can't burn time so whatever we do we have to be a lot more clever right the other reason to",
    "start": "1536760",
    "end": "1544559"
  },
  {
    "text": "prefer Simplicity I think and this may just be me is um I think one reason to",
    "start": "1544559",
    "end": "1552960"
  },
  {
    "text": "like go right now is that you do have a prayer of understanding it end to end",
    "start": "1552960",
    "end": "1559799"
  },
  {
    "text": "whereas you know a c compiler is crazy nowadays and a Java compiler including",
    "start": "1559799",
    "end": "1567039"
  },
  {
    "text": "hotspot is absolutely crazy just bananas and what you care about that for",
    "start": "1567039",
    "end": "1573880"
  },
  {
    "text": "is for things like correctness and security you know go is not a formally verified compiler but those are pretty",
    "start": "1573880",
    "end": "1580799"
  },
  {
    "text": "rare but they're getting less rare and you could imagine that if we kept the language small that maybe we get there",
    "start": "1580799",
    "end": "1588159"
  },
  {
    "text": "someday maybe not this go compiler but another one but even without formal",
    "start": "1588159",
    "end": "1593919"
  },
  {
    "text": "verification we at least have a chance of you know reading the whole thing and understanding all the parts and how they",
    "start": "1593919",
    "end": "1599840"
  },
  {
    "text": "work it is so refreshing to hear someone like you say that and that was actually",
    "start": "1599840",
    "end": "1605240"
  },
  {
    "text": "I actually wanted to confirm that when you were talking about Simplicity you were talking about",
    "start": "1605240",
    "end": "1610559"
  },
  {
    "text": "readability well I mean ultimately it's you worry a little bit about about it",
    "start": "1610559",
    "end": "1615799"
  },
  {
    "text": "from the point of view of security but um I mean you know don't forget who worked on this compiler Ken Thompson",
    "start": "1615799",
    "end": "1622120"
  },
  {
    "text": "trusting trust yeah best paper ever I like for you to",
    "start": "1622120",
    "end": "1628760"
  },
  {
    "text": "tell us more about what you just mentioned uh about um I forgot the words",
    "start": "1628760",
    "end": "1634720"
  },
  {
    "text": "you said verified compiler exactly what is that yes somebody just asked that and",
    "start": "1634720",
    "end": "1641399"
  },
  {
    "text": "and why is that important so I I'm sorry and why don't we have",
    "start": "1641399",
    "end": "1646520"
  },
  {
    "text": "it ah so I don't have direct experience",
    "start": "1646520",
    "end": "1652880"
  },
  {
    "text": "with them so I want to you know be careful I don't go out on the limb and make stuff",
    "start": "1652880",
    "end": "1658640"
  },
  {
    "text": "up um a verified compiler is one where you have proved that its Transformations",
    "start": "1658640",
    "end": "1667320"
  },
  {
    "text": "you formally proved that its Transformations are formally",
    "start": "1667320",
    "end": "1672559"
  },
  {
    "text": "correct and part of the reason that you don't have these",
    "start": "1672559",
    "end": "1678279"
  },
  {
    "text": "is because if you're going to talk about actual you know dotted eyes and cross te",
    "start": "1678279",
    "end": "1685279"
  },
  {
    "text": "correctness you need to have an exact specification of the input language and Its Behavior intended behavior and then",
    "start": "1685279",
    "end": "1692919"
  },
  {
    "text": "you need to have an exact specification of how the hardware is going to behave or in the case of so much of our",
    "start": "1692919",
    "end": "1700640"
  },
  {
    "text": "Hardware you have to have an exact specification of how a subset that you the subset that you use",
    "start": "1700640",
    "end": "1707960"
  },
  {
    "text": "of the hardware behaves so in particular if you don't know for sure what some of these instructions do then you don't do",
    "start": "1707960",
    "end": "1714240"
  },
  {
    "text": "those instructions so part of the obstacle is getting the specifications clean specs",
    "start": "1714240",
    "end": "1721159"
  },
  {
    "text": "for the endpoints and then the rest of the problem is that you get back to the",
    "start": "1721159",
    "end": "1727640"
  },
  {
    "text": "boy I want my code to run fast and I want my compiler to compile code quickly and this forces you either to",
    "start": "1727640",
    "end": "1736399"
  },
  {
    "text": "have a great big you know you end up with the giant compiler you end up with the tricky algorithms and you might not",
    "start": "1736399",
    "end": "1743360"
  },
  {
    "text": "have a proof for some of them okay uh is that getting in the in the vague",
    "start": "1743360",
    "end": "1749279"
  },
  {
    "text": "Direction I mean but you've actually proved that it's going to do the right thing and you have a proof you don't just have",
    "start": "1749279",
    "end": "1754960"
  },
  {
    "text": "testing it's too hard for me to grasp the why if we have verified like we have",
    "start": "1754960",
    "end": "1761880"
  },
  {
    "text": "proved it but we have we just we don't have the test I don't know what that means but we don't have to go deep into",
    "start": "1761880",
    "end": "1768519"
  },
  {
    "text": "that into those words I'm just curious whether we have to verify every backend every different Target so do you have to",
    "start": "1768519",
    "end": "1774640"
  },
  {
    "text": "verify for x86 64 and also for arm five or whatever is there you have to Target",
    "start": "1774640",
    "end": "1781480"
  },
  {
    "text": "you have to verify each different Target well what do you mean do you want",
    "start": "1781480",
    "end": "1786600"
  },
  {
    "text": "you know it's verified where it's verified and if you don't then you don't know for sure and you know we don't know",
    "start": "1786600",
    "end": "1791919"
  },
  {
    "text": "this now I mean we're talking about a different world than the one that we're in the world that we're in we we compile",
    "start": "1791919",
    "end": "1797760"
  },
  {
    "text": "our code and we feel lucky I feel lucky every time my code compiles",
    "start": "1797760",
    "end": "1803760"
  },
  {
    "text": "okay so but you know there is you know and",
    "start": "1803760",
    "end": "1809240"
  },
  {
    "text": "certainly when you work on a compiler there's you know a lot of times I'm working with a buggy compiler because",
    "start": "1809240",
    "end": "1814799"
  },
  {
    "text": "I'm usually breaking it but I mean right now these are only used in very um",
    "start": "1814799",
    "end": "1822000"
  },
  {
    "text": "high-risk applications I believe they are used um my recollection is that some",
    "start": "1822000",
    "end": "1827880"
  },
  {
    "text": "of the interesting work has happened in England and I think that and I think",
    "start": "1827880",
    "end": "1834360"
  },
  {
    "text": "that some of it is used in avionics code so you know real-time controllers for Flight",
    "start": "1834360",
    "end": "1840640"
  },
  {
    "text": "Services and things like that um that makes sense and I could be wrong on the",
    "start": "1840640",
    "end": "1845799"
  },
  {
    "text": "details because I'm pretty sure that they would I'm pretty sure that the guys doing Airbus would care about",
    "start": "1845799",
    "end": "1851840"
  },
  {
    "text": "this so I have a follow-up question on something we talked about a little bit before um the idea of adding more",
    "start": "1851840",
    "end": "1860399"
  },
  {
    "text": "optimizations at the expense of compilation speed do you think there's",
    "start": "1860399",
    "end": "1865720"
  },
  {
    "text": "an a chance that we'll end up with um optimizations that are guarded by Flags",
    "start": "1865720",
    "end": "1871240"
  },
  {
    "text": "build flags like GCC has for example I I assume it has to happen",
    "start": "1871240",
    "end": "1878679"
  },
  {
    "text": "eventually but I think it's our intent to put it off as long as we can",
    "start": "1878679",
    "end": "1884440"
  },
  {
    "text": "because every flag that you add then becomes something that you have to test",
    "start": "1884440",
    "end": "1889679"
  },
  {
    "text": "and then every flag that you add becomes something that you have to document and um you know and it",
    "start": "1889679",
    "end": "1896799"
  },
  {
    "text": "complicates it complicates everything it complicates your bug reporting uh you",
    "start": "1896799",
    "end": "1902679"
  },
  {
    "text": "know you have the option you know what happens if you have a bunch of packages that you depend upon and they're just",
    "start": "1902679",
    "end": "1909880"
  },
  {
    "text": "and some of them are compiled one way and some of them are compiled the other way and then you have a bug and then you have to report the bug does the bug",
    "start": "1909880",
    "end": "1916880"
  },
  {
    "text": "report report have to include the compilation flags for each of the packages that you have in it um I mean I",
    "start": "1916880",
    "end": "1924559"
  },
  {
    "text": "assume nonetheless that it will have to happen there will come a time when there's enough um extra performance to",
    "start": "1924559",
    "end": "1932039"
  },
  {
    "text": "be had for something that's sufficiently important but it hasn't happened yet so",
    "start": "1932039",
    "end": "1937480"
  },
  {
    "text": "in terms of performance I know that the llvm ecosystem was considered very early",
    "start": "1937480",
    "end": "1943080"
  },
  {
    "text": "on and go and it's changed quite a bit uh in the last 10 years since since they",
    "start": "1943080",
    "end": "1948600"
  },
  {
    "text": "looked at it is there a possibility for a back end for go and lvm in the future",
    "start": "1948600",
    "end": "1955639"
  },
  {
    "text": "uh it's being worked on uh thanan Macintosh who is I can't see him because",
    "start": "1955639",
    "end": "1963159"
  },
  {
    "text": "I've got my door closed but he sits like you know 20 feet that away from me fan",
    "start": "1963159",
    "end": "1969399"
  },
  {
    "text": "Macintosh is working on that um we're not there yet and it will be a while",
    "start": "1969399",
    "end": "1976039"
  },
  {
    "text": "before we get the same garbage collector but this might be an option for people",
    "start": "1976039",
    "end": "1981799"
  },
  {
    "text": "who maybe don't need the amazing sub millisecond pause times",
    "start": "1981799",
    "end": "1988039"
  },
  {
    "text": "and want higher throughput would that also bring I'm I'm not terribly familiar with llm lvm but",
    "start": "1988039",
    "end": "1995159"
  },
  {
    "text": "wouldn't it bring a lot of extra tooling too to the uh ecosystem I don't know I'm not that",
    "start": "1995159",
    "end": "2001360"
  },
  {
    "text": "familiar with llvm either okay we'll find out someday okay okay so Caleb",
    "start": "2001360",
    "end": "2008960"
  },
  {
    "text": "asked the most important question in my opinion what kind of pie does a go",
    "start": "2008960",
    "end": "2014639"
  },
  {
    "text": "compiler team like best oh his what's up key lime versus um",
    "start": "2014639",
    "end": "2021360"
  },
  {
    "text": "thean hey you're you are not limited to those pies no that's that's a that's a",
    "start": "2021360",
    "end": "2026480"
  },
  {
    "text": "really bad subset of pies I mean if you don't include banana cream then it's not even a pie question wait why why is this",
    "start": "2026480",
    "end": "2033919"
  },
  {
    "text": "question even being asked why not like what kind of muffin or Donuts why pie",
    "start": "2033919",
    "end": "2039320"
  },
  {
    "text": "because is that a joke is that an eternal okay is that why okay guys we can't it right now we're just interested",
    "start": "2039320",
    "end": "2046720"
  },
  {
    "text": "in pies but we could go into the whole pastry line so I can definitely say that for me",
    "start": "2046720",
    "end": "2054679"
  },
  {
    "text": "pie beats muffins and Pie beats",
    "start": "2054679",
    "end": "2059878"
  },
  {
    "text": "Donuts I don't know if it beats Donuts that's easy but",
    "start": "2061040",
    "end": "2067679"
  },
  {
    "text": "and personally I am very happy with either key lime or pecan pie um I did",
    "start": "2067679",
    "end": "2075800"
  },
  {
    "text": "once make six pecan pies for science where each one was a different",
    "start": "2075800",
    "end": "2081520"
  },
  {
    "text": "recipe so I could see which one was the best recipe nice which one was the best",
    "start": "2081520",
    "end": "2087638"
  },
  {
    "text": "recipe that's the problem I um I forgot that that's a that's a big",
    "start": "2087639",
    "end": "2093079"
  },
  {
    "text": "problem you can't say that one was the best and not no you could say that one was the best but not remember which one",
    "start": "2093079",
    "end": "2100040"
  },
  {
    "text": "that's true one was the best there's no doubt that one was the best and I think maybe the most",
    "start": "2100040",
    "end": "2106320"
  },
  {
    "text": "important thing to do is make six pies again yes for science of course for",
    "start": "2106320",
    "end": "2111400"
  },
  {
    "text": "science science I do recall that the recipes with butter in them really ended",
    "start": "2111400",
    "end": "2118480"
  },
  {
    "text": "up kind of slimy and I wouldn't recommend that oh that's",
    "start": "2118480",
    "end": "2124079"
  },
  {
    "text": "upsetting yeah okay so p was the answer or key lime I like key lime a lot",
    "start": "2124079",
    "end": "2133320"
  },
  {
    "text": "um pean pie is just amazing it's just",
    "start": "2133320",
    "end": "2139760"
  },
  {
    "text": "so I think Pon Pie has to many",
    "start": "2139760",
    "end": "2145160"
  },
  {
    "text": "peons how dare you it's just too nut I",
    "start": "2145240",
    "end": "2150359"
  },
  {
    "text": "know but I do like both of those pies they're they are no no Boston cream pie for you oh",
    "start": "2150359",
    "end": "2158800"
  },
  {
    "text": "it's it's okay I mean pie is good um you know I'm trying to think of",
    "start": "2158800",
    "end": "2164440"
  },
  {
    "text": "you know which P pan has to win actually um I don't know I'm all about Apple Alam",
    "start": "2164440",
    "end": "2171119"
  },
  {
    "text": "mode now you we we asked David this question you can't tell him he's wrong",
    "start": "2171119",
    "end": "2176760"
  },
  {
    "text": "that that's telling him his answer is wrong are you paining him I think you're",
    "start": "2176760",
    "end": "2181800"
  },
  {
    "text": "paining David oh my God can we hashtag that immediately yes just trying to",
    "start": "2181800",
    "end": "2187720"
  },
  {
    "text": "they're trying to refresh my memory and I think that's okay because there's a",
    "start": "2187720",
    "end": "2192760"
  },
  {
    "text": "lot of pies I mean there's chess pie um you can make a key lime recipe with",
    "start": "2192760",
    "end": "2198760"
  },
  {
    "text": "other sour Citrus besides limes and those some of those are very good so a",
    "start": "2198760",
    "end": "2206160"
  },
  {
    "text": "um a keyme pie that's instead made with calaman juice it's very",
    "start": "2206160",
    "end": "2212720"
  },
  {
    "text": "nice wow all I'm saying is that you should not have to give an answer without receiving piie so Caleb uh yes",
    "start": "2212720",
    "end": "2220319"
  },
  {
    "text": "that's right Caleb so get your shipping engines ready because it's time to send some pies to the compiler team truth hey",
    "start": "2220319",
    "end": "2228119"
  },
  {
    "text": "can I get a pie too I don't even care what pie just be a homemade pie and I'm",
    "start": "2228119",
    "end": "2235799"
  },
  {
    "text": "happy I homemade I agree semi",
    "start": "2235880",
    "end": "2242880"
  },
  {
    "text": "pie so I I have one thing to add on the pie subject then we should probably move on because we're a little bit off topic",
    "start": "2242880",
    "end": "2250440"
  },
  {
    "text": "but the best pie in the entire universe was made by Emerald legasi at his",
    "start": "2250440",
    "end": "2256119"
  },
  {
    "text": "restaurant and it's banana cream pie and it's the by far the best pie",
    "start": "2256119",
    "end": "2261760"
  },
  {
    "text": "ever I I won't even begin to describe how good it is because I'm hungry right now but if you get an opportunity to eat",
    "start": "2261760",
    "end": "2267520"
  },
  {
    "text": "Emerald agassi's banana cream pie it's it's a lifechanging religious experience",
    "start": "2267520",
    "end": "2273079"
  },
  {
    "text": "where is this at any of uh Emerald lassi restaurants he's got a couple in",
    "start": "2273079",
    "end": "2279680"
  },
  {
    "text": "Louisiana and he has a couple here in Orlando and I don't know where else good",
    "start": "2279680",
    "end": "2286720"
  },
  {
    "text": "stuff crazy good stuff Beyond good stuff so on that note on that uh",
    "start": "2286720",
    "end": "2295480"
  },
  {
    "text": "Sidetrack note we should probably move on to interesting go projects and",
    "start": "2295480",
    "end": "2300599"
  },
  {
    "text": "news as we are starting to run low on time somebody suggesting that maybe we",
    "start": "2300599",
    "end": "2306640"
  },
  {
    "text": "should have our next goer con at a place where we can get that pie and I think that's a really really interesting idea",
    "start": "2306640",
    "end": "2312040"
  },
  {
    "text": "that we should explore I agree so let's move on to go projects and news anything interesting other than goer con happened",
    "start": "2312040",
    "end": "2318760"
  },
  {
    "text": "in the last couple weeks that we want to bring up are you serious did you just ask that question I did but anything",
    "start": "2318760",
    "end": "2325800"
  },
  {
    "text": "exciting outside of goer con I mean we'll have a whole show just about goer con outside of goer con yes no I'm sorry",
    "start": "2325800",
    "end": "2335280"
  },
  {
    "text": "I'm still no nobody's prepared to talk anything about anything besides gopher con I'm still I'm still getting Over",
    "start": "2335280",
    "end": "2342640"
  },
  {
    "text": "Gopher con slowly it's all I think about yeah I'm I'm still a little tired so I ran across",
    "start": "2342640",
    "end": "2349960"
  },
  {
    "text": "a couple news items that uh were interesting this week um jbd wrote a great article on the scheduler and that",
    "start": "2349960",
    "end": "2357760"
  },
  {
    "text": "is at r.org R ky.org um really good article about how the",
    "start": "2357760",
    "end": "2366040"
  },
  {
    "text": "schedule works and I always like those um those deep dives into the things that",
    "start": "2366040",
    "end": "2371160"
  },
  {
    "text": "are happening underneath so that was cool and then um there's a cool game",
    "start": "2371160",
    "end": "2377440"
  },
  {
    "text": "engine that I noticed on GitHub about two weeks ago that I didn't get to mention because we haven't had a show",
    "start": "2377440",
    "end": "2382680"
  },
  {
    "text": "for a while and it's called Oak and that's at github.com o",
    "start": "2382680",
    "end": "2388319"
  },
  {
    "text": "Moke and it's a go based pure go based",
    "start": "2388319",
    "end": "2393480"
  },
  {
    "text": "game engine so it does all of its rendering and and all of that stuff OMG",
    "start": "2393480",
    "end": "2399839"
  },
  {
    "text": "Brian can we play with it in the pocket chip yes we can play with a pocket chip",
    "start": "2399839",
    "end": "2406319"
  },
  {
    "text": "oh my goodness exactly okay so exciting so yeah it",
    "start": "2406319",
    "end": "2412440"
  },
  {
    "text": "looks very cool and uh has very very few dependencies underneath which I think is",
    "start": "2412440",
    "end": "2418400"
  },
  {
    "text": "probably the best part when I was reading I actually did a couple of their um examples and ran code and it it",
    "start": "2418400",
    "end": "2424400"
  },
  {
    "text": "worked really beautifully and it has very very few dependencies um the only thing on Linux is an audio dependency so",
    "start": "2424400",
    "end": "2431839"
  },
  {
    "text": "it's very self-contained which is kind of slick this is happy it is happy and",
    "start": "2431839",
    "end": "2438200"
  },
  {
    "text": "and speaking we should probably kind of circle back and talk about these pocket chips real quick the uh the pocket chip",
    "start": "2438200",
    "end": "2444359"
  },
  {
    "text": "is this amazing cool little computer thing um it's it's smaller than a",
    "start": "2444359",
    "end": "2450599"
  },
  {
    "text": "Raspberry Pi uh but it's got a A little maybe 4ish inch TFT screen and a",
    "start": "2450599",
    "end": "2457960"
  },
  {
    "text": "keyboard on it and it's um arm s maybe arm s chip and it's just so cool you you",
    "start": "2457960",
    "end": "2465440"
  },
  {
    "text": "push a little button and it boots into Linux and it does cool stuff it plays retro games and whatever but of course",
    "start": "2465440",
    "end": "2471200"
  },
  {
    "text": "the first thing I did was booted up to the terminal and after typing you name just to find out what it was running",
    "start": "2471200",
    "end": "2476599"
  },
  {
    "text": "which is Debian uh I installed go as one does and it runs go very beautifully and",
    "start": "2476599",
    "end": "2483960"
  },
  {
    "text": "it's it's slick little toy it is so cute and you can 3D print um like cases for",
    "start": "2483960",
    "end": "2490400"
  },
  {
    "text": "it did you see that Brian I've got one printing right now A a screen cover with",
    "start": "2490400",
    "end": "2496400"
  },
  {
    "text": "the uh key caps and key covers I went into my garage and I did not see a",
    "start": "2496400",
    "end": "2502640"
  },
  {
    "text": "tarantula so I might take my 3D printer out of my garage you you braved the",
    "start": "2502640",
    "end": "2507720"
  },
  {
    "text": "spider just to get to the 3D printer I did you were awesome well you didn't see",
    "start": "2507720",
    "end": "2513680"
  },
  {
    "text": "the spider don't just you doesn't mean he's not crawling on your back right now",
    "start": "2513680",
    "end": "2520119"
  },
  {
    "text": "why would you do that to me why would you say those things to me people to give people context uh we",
    "start": "2520119",
    "end": "2527400"
  },
  {
    "text": "so we're talking about the pocket chip because that was what was gifted to the goer conon speakers yes and it is just",
    "start": "2527400",
    "end": "2535400"
  },
  {
    "text": "it's it's a 60 or $70 computer it's so amazing so much fun if you like it all",
    "start": "2535400",
    "end": "2541359"
  },
  {
    "text": "playing with um small devices especially something that is Linux but very very",
    "start": "2541359",
    "end": "2549079"
  },
  {
    "text": "portable and has a cute little screen and keyboard then I can't recommend the pocket chip enough it's it's tons of fun",
    "start": "2549079",
    "end": "2556520"
  },
  {
    "text": "I really haven't stopped playing with mine since last week totally amazing so",
    "start": "2556520",
    "end": "2563079"
  },
  {
    "text": "back to news there's a great new book out by Katherine Cox Bay one of our speakers from uh maybe go foron",
    "start": "2563079",
    "end": "2570440"
  },
  {
    "text": "2015 called concurrency and go and that's a O'Reilly book that was just",
    "start": "2570440",
    "end": "2575880"
  },
  {
    "text": "relased released to print so I think it's available in electronic form but not quite yet in paper form and yeah",
    "start": "2575880",
    "end": "2583119"
  },
  {
    "text": "very exciting I I had the privilege of reading through an earlier version of it and it's it's very well done concurrency",
    "start": "2583119",
    "end": "2589960"
  },
  {
    "text": "and go is a tough topic to hit and she did a great job on it so I'm excited",
    "start": "2589960",
    "end": "2595000"
  },
  {
    "text": "that there's another good resource for concurrency out there and a whole book dedicated to it yeah exactly I'm really",
    "start": "2595000",
    "end": "2601680"
  },
  {
    "text": "excited to see a whole book about concurrency and I pre-order it I'm",
    "start": "2601680",
    "end": "2607440"
  },
  {
    "text": "waiting for my hard copy because it's important enough that I want to hold it in my",
    "start": "2607440",
    "end": "2613558"
  },
  {
    "text": "hand and I wanted to uh on the topic of schedulers I wanted to make sure we mention Cindy 3",
    "start": "2613960",
    "end": "2622119"
  },
  {
    "text": "Daran I might have mispronounced her last name but it's Cindy and she wrote an amazing uh blog post about cluster",
    "start": "2622119",
    "end": "2629920"
  },
  {
    "text": "schedulers it's really well written she got a lot of Praise online for the Post",
    "start": "2629920",
    "end": "2636079"
  },
  {
    "text": "so if you're interested in schedulers should read that too oh that was a very",
    "start": "2636079",
    "end": "2641480"
  },
  {
    "text": "good post I agree yeah now I know what you're talking about good we should put the link to that up on the show Notes",
    "start": "2641480",
    "end": "2647599"
  },
  {
    "text": "too I just yeah I just dropped it I'm not sure if I'm using the right document but oh perfect yes yes Cindy's really",
    "start": "2647599",
    "end": "2654920"
  },
  {
    "text": "active in the San Francisco go Community yes all right so we'd like to",
    "start": "2654920",
    "end": "2661599"
  },
  {
    "text": "end our show with uh free software Friday which is a shout out to any open source group or maintainer or project uh",
    "start": "2661599",
    "end": "2669119"
  },
  {
    "text": "that you love that you enjoy that you can't live without um and it's something",
    "start": "2669119",
    "end": "2674559"
  },
  {
    "text": "that we like to do because we use a lot of open source and we really appreciate all the hard work that people put into",
    "start": "2674559",
    "end": "2681160"
  },
  {
    "text": "those projects and feel like they're kind of thankless so um I will start off",
    "start": "2681160",
    "end": "2686800"
  },
  {
    "text": "by shouting out to Dave Cheney because we just don't give Dave enough credit for all of the amazing work he does for",
    "start": "2686800",
    "end": "2693000"
  },
  {
    "text": "our community if you have a question about go there's a blog post that Dave wrote that covers it if you have a",
    "start": "2693000",
    "end": "2700800"
  },
  {
    "text": "problem that you need to solve and go he probably wrote the canonical package that fixes that problem like his package",
    "start": "2700800",
    "end": "2707559"
  },
  {
    "text": "errors um I I don't know where we need to start to get his errors package included into the standard library but",
    "start": "2707559",
    "end": "2715079"
  },
  {
    "text": "if it doesn't happen I'm going to leave go for Pony so just just FYI I'm go if",
    "start": "2715079",
    "end": "2721440"
  },
  {
    "text": "we don't get errors in the standard Library plus one to all of Dave also",
    "start": "2721440",
    "end": "2726960"
  },
  {
    "text": "puts in an unbelievable immeasurable amount of work into helping us prepare",
    "start": "2726960",
    "end": "2732640"
  },
  {
    "text": "the speakers for goeran each year not only does he head the selection committee but then he spends countless",
    "start": "2732640",
    "end": "2740359"
  },
  {
    "text": "hours with each speaker helping them prepare and getting them up to the A+",
    "start": "2740359",
    "end": "2745599"
  },
  {
    "text": "level that we expect from our speakers and that we get from our speakers every year so uh you just we we can't thank",
    "start": "2745599",
    "end": "2751839"
  },
  {
    "text": "Dave enough for all that he does for our community and that's why he is my number one free software Friday shout out",
    "start": "2751839",
    "end": "2759559"
  },
  {
    "text": "anybody else have a a person or a project or a thing that they want to shout out for free software Friday I",
    "start": "2759559",
    "end": "2765200"
  },
  {
    "text": "want to give a sh shout out to godok it's amazing that uh it's such a",
    "start": "2765200",
    "end": "2772119"
  },
  {
    "text": "neat tool that we have and for people who are new and don't know you can run",
    "start": "2772119",
    "end": "2778480"
  },
  {
    "text": "go do on your machine if you're offline and you get on your browser all the",
    "start": "2778480",
    "end": "2784520"
  },
  {
    "text": "documentation for all p packages that you have residing in your system and uh",
    "start": "2784520",
    "end": "2790680"
  },
  {
    "text": "yesterday I found out that you can write documentation for each of your packages",
    "start": "2790680",
    "end": "2796040"
  },
  {
    "text": "in a separate file called dot dot uh doc",
    "start": "2796040",
    "end": "2801559"
  },
  {
    "text": "Dogo if you have a lot of documentation to write you can put it all in there uh",
    "start": "2801559",
    "end": "2808000"
  },
  {
    "text": "so instead of ending up with separate files with tons of documentation in those files it's really neat I didn't",
    "start": "2808000",
    "end": "2814119"
  },
  {
    "text": "know that very nice nice I want to shout out Brian and Eric you had to have known",
    "start": "2814119",
    "end": "2820720"
  },
  {
    "text": "that this was coming um gopher con was amazing every detail was on point the",
    "start": "2820720",
    "end": "2829000"
  },
  {
    "text": "sessions were awesome that uh contributor day oh my God why why why is",
    "start": "2829000",
    "end": "2835920"
  },
  {
    "text": "the go team not doing those like once a week it was so good that was great the",
    "start": "2835920",
    "end": "2841839"
  },
  {
    "text": "the contributor thing was amazing I don't know if they had a final count but I I think more than 100 people got",
    "start": "2841839",
    "end": "2849119"
  },
  {
    "text": "onboarded to contribute to go and I don't I don't know how many contributions there were but it was a lot and so many people were excited",
    "start": "2849119",
    "end": "2856319"
  },
  {
    "text": "about that we found bugs oh that's fabulous I mean you know",
    "start": "2856319",
    "end": "2864319"
  },
  {
    "text": "you get new people you get new people using go and uh and they do stuff that",
    "start": "2864319",
    "end": "2869760"
  },
  {
    "text": "you hadn't realized that someone would try and you get bugs very cool that's",
    "start": "2869760",
    "end": "2877839"
  },
  {
    "text": "awesome so we we do have uh some statistics from Jess friselle 44 new",
    "start": "2877839",
    "end": "2883040"
  },
  {
    "text": "open CLS of which 22 were merged as of 246 this afternoon that is awesome great",
    "start": "2883040",
    "end": "2890400"
  },
  {
    "text": "news and and it we can't even talk about this without me thinking about Brad Fitzpatrick's picture of him with his uh",
    "start": "2890400",
    "end": "2897119"
  },
  {
    "text": "looks good to me shirt on and a handful of gophers stacked around him as he was",
    "start": "2897119",
    "end": "2902400"
  },
  {
    "text": "helping us remotely take care of business which is awesome so we should U definitely thank Steve",
    "start": "2902400",
    "end": "2908800"
  },
  {
    "text": "frania for putting that whole thing together and everybody who contributed in the room from the mentors all the way",
    "start": "2908800",
    "end": "2914400"
  },
  {
    "text": "to the uh people who learned how to contribute the first time it was fabulous yeah it was so good yeah we",
    "start": "2914400",
    "end": "2921319"
  },
  {
    "text": "were we are talking about a few of the Meetup organizers were so taken by the",
    "start": "2921319",
    "end": "2928559"
  },
  {
    "text": "whole exercise that we are I mean different people went up to Steve",
    "start": "2928559",
    "end": "2934200"
  },
  {
    "text": "separately in so him the same thing which is we should be doing this a few times a year like just getting meetups",
    "start": "2934200",
    "end": "2941760"
  },
  {
    "text": "meetup groups going through exactly that Workshop so it might be H it might",
    "start": "2941760",
    "end": "2947160"
  },
  {
    "text": "happen it might be happen actually reminds me one of the Arizona meetups I",
    "start": "2947160",
    "end": "2952720"
  },
  {
    "text": "just saw on Twitter today they're actually going through the same exercise at their Meetup this this coming month",
    "start": "2952720",
    "end": "2957839"
  },
  {
    "text": "Phoenix yes Brian Downs thank you Phoenix for doing this exact same thing that's awesome you got to love Brian DS",
    "start": "2957839",
    "end": "2964640"
  },
  {
    "text": "for being on on top of his Meetup organizing game so if you're in the Phoenix area go go to the Phoenix next",
    "start": "2964640",
    "end": "2971720"
  },
  {
    "text": "Phoenix Meetup and you can get that same experience so my wish list is to go",
    "start": "2971720",
    "end": "2977319"
  },
  {
    "text": "through that and have someone from the go team or one or two people going through the CL submited so we can have",
    "start": "2977319",
    "end": "2984079"
  },
  {
    "text": "that quick feedback loop anyway that's awesome all right so",
    "start": "2984079",
    "end": "2991480"
  },
  {
    "text": "um anybody else have a free software Friday shout out that they want to make Dave do you have one um day in day out",
    "start": "2991480",
    "end": "2999839"
  },
  {
    "text": "I'd have to say macports because I am I use a Mac all",
    "start": "2999839",
    "end": "3006119"
  },
  {
    "text": "the time and I use the Unix tools all the time and a lot of them on a Mac you",
    "start": "3006119",
    "end": "3011880"
  },
  {
    "text": "know you know these guys are getting a lot of Leverage off of the fact that they're packaging other open source",
    "start": "3011880",
    "end": "3018160"
  },
  {
    "text": "software but uh it's a lot of work I have you know helped debug a few of them",
    "start": "3018160",
    "end": "3026359"
  },
  {
    "text": "and you know just just all the packaging work is um is a big deal now I have a",
    "start": "3026359",
    "end": "3033040"
  },
  {
    "text": "question for you on the macports since we've got just a moment um how do you",
    "start": "3033040",
    "end": "3038200"
  },
  {
    "text": "find it in terms of of quality and and kind of completion I I I used macports",
    "start": "3038200",
    "end": "3044680"
  },
  {
    "text": "maybe 2006 or 2005 quite a while ago and abandoned it for home brew because",
    "start": "3044680",
    "end": "3051760"
  },
  {
    "text": "macports just didn't seem to be that stable is are you do you have any any issues with with macports or is it is it",
    "start": "3051760",
    "end": "3059079"
  },
  {
    "text": "solid for you um it is more solid now than it was um I don't know why I didn't",
    "start": "3059079",
    "end": "3065359"
  },
  {
    "text": "do home brew back then I don't know if there was home brew there was thinkink and so and I tried both and I",
    "start": "3065359",
    "end": "3072839"
  },
  {
    "text": "ended up settling on macports um it's better now they do a",
    "start": "3072839",
    "end": "3078440"
  },
  {
    "text": "better job with in terms of the dependency tracking and the rebuilt",
    "start": "3078440",
    "end": "3083880"
  },
  {
    "text": "tracking and the cleanup that used to it used to be to more often you'd get",
    "start": "3083880",
    "end": "3090720"
  },
  {
    "text": "wedged and have to uninstall a bunch of stuff and reinstall clean and I can't remember the last time I had to do",
    "start": "3090720",
    "end": "3097359"
  },
  {
    "text": "that and I at the time well for what as late as five years ago like so 2012",
    "start": "3097359",
    "end": "3105280"
  },
  {
    "text": "2011 we were um hosting a big old track thing on it and I mean we were hosting track on",
    "start": "3105280",
    "end": "3113240"
  },
  {
    "text": "another box but I was actually mirroring the server on my laptop and it was using",
    "start": "3113240",
    "end": "3119480"
  },
  {
    "text": "macports to get me everything that I needed and everything that I needed",
    "start": "3119480",
    "end": "3124559"
  },
  {
    "text": "included you know track and Python and SQ SQL light and um",
    "start": "3124559",
    "end": "3132119"
  },
  {
    "text": "Mercurial and a lot you know the whole Tech Tool chain and this was this was",
    "start": "3132119",
    "end": "3138640"
  },
  {
    "text": "for this crazy website that would run Tech it would use emac and Tech emac in",
    "start": "3138640",
    "end": "3144400"
  },
  {
    "text": "batch mode and Tech to do um processing to turn your code into something",
    "start": "3144400",
    "end": "3150119"
  },
  {
    "text": "formatted in a pretty mathematical style and and it worked and it worked it's a",
    "start": "3150119",
    "end": "3159920"
  },
  {
    "text": "miracle all right so um I think that wraps up our show today I'd like to",
    "start": "3159920",
    "end": "3165440"
  },
  {
    "text": "thank David Chase for joining us and going deep into compiler land I I",
    "start": "3165440",
    "end": "3171079"
  },
  {
    "text": "probably learned more in the last hour than I've learned in years on compilers I really appreciate that and thanks to",
    "start": "3171079",
    "end": "3177400"
  },
  {
    "text": "everyone who's listening and the folks out on the slack Channel thank you so much if you enjoy the show be sure to",
    "start": "3177400",
    "end": "3184280"
  },
  {
    "text": "share it with fellow go programmers in your uh meetups in your office uh all",
    "start": "3184280",
    "end": "3190559"
  },
  {
    "text": "across the land and you can easily subscribe by heading to go time. FM And subscribe to",
    "start": "3190559",
    "end": "3197200"
  },
  {
    "text": "our weekly email which is coming soon you can follow us on Twitter at gotime FM and if there's anything you want to",
    "start": "3197200",
    "end": "3204200"
  },
  {
    "text": "discuss on the show or if you've got a guest that you think we should have head over to go time or github.com gotime fm/",
    "start": "3204200",
    "end": "3211359"
  },
  {
    "text": "ping and open an issue so with that uh thanks everyone we really appreciate it",
    "start": "3211359",
    "end": "3216559"
  },
  {
    "text": "thank you thank you and thank you Dave you're welcome thank you for having",
    "start": "3216559",
    "end": "3222798"
  },
  {
    "text": "me all right that's it for this episode of go time tune in live on Thursdays at",
    "start": "3222839",
    "end": "3228319"
  },
  {
    "text": "3 p.m. us Eastern Chang law.com join the community and slack with us in real",
    "start": "3228319",
    "end": "3234799"
  },
  {
    "text": "tender the shows H the Chang log.com Community follow us on Twitter we're at",
    "start": "3234799",
    "end": "3240079"
  },
  {
    "text": "gotime FM special thanks to fastly our bandwidth partner head the fantasy.com",
    "start": "3240079",
    "end": "3245200"
  },
  {
    "text": "to learn more also lenoe we host everything we do on Leno servers head to lin.com change log go time is edited by",
    "start": "3245200",
    "end": "3253440"
  },
  {
    "text": "Jonathan Youngblood and the theme music for Go time is produced by the mysterious break master cylinder we'll",
    "start": "3253440",
    "end": "3258520"
  },
  {
    "text": "see you again next week thanks for [Music]",
    "start": "3258520",
    "end": "3264079"
  },
  {
    "text": "listening [Music]",
    "start": "3264079",
    "end": "3270049"
  }
]