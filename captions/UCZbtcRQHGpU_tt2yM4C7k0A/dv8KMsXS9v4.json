[
  {
    "text": "welcome back everyone this is the change log and I'm your host Adam stovak this is episode 168 and we're joined today by",
    "start": "9960",
    "end": "17240"
  },
  {
    "text": "Julius voles from SoundCloud to talk about Prometheus an Open Source service monitoring system written in go super",
    "start": "17240",
    "end": "24680"
  },
  {
    "text": "awesome conversation today talked about the data model the query language and all the inet we had three awesome SP",
    "start": "24680",
    "end": "29960"
  },
  {
    "text": "sponsors for the show Cod ship toptw and digital ocean our first sponsor is cod",
    "start": "29960",
    "end": "36239"
  },
  {
    "text": "ship there you hosted continuous delivery service focusing on speed security and customizability and they've",
    "start": "36239",
    "end": "42960"
  },
  {
    "text": "launched a brand new feature called organizations now you can create teams set permissions for specific team",
    "start": "42960",
    "end": "49360"
  },
  {
    "text": "members and improve collaboration in your continuous delivery workflows maintain centralized control over your",
    "start": "49360",
    "end": "56520"
  },
  {
    "text": "organization's projects and teams with Cod Chip's new organiz A's plans you can",
    "start": "56520",
    "end": "61719"
  },
  {
    "text": "save 20% off any Premium plan you choose for 3 months by using this code the change law podcast again that code is",
    "start": "61719",
    "end": "69320"
  },
  {
    "text": "the change law podcast and you'll save 20% off any Premium plan you choose for 3 months head to Cod ship.com thechange",
    "start": "69320",
    "end": "77159"
  },
  {
    "text": "law to get started and now on to the [Music]",
    "start": "77159",
    "end": "86280"
  },
  {
    "text": "show all right everybody we're back we got a great show lineup today one we actually been waiting for for a bit it",
    "start": "86280",
    "end": "91439"
  },
  {
    "text": "was recommended by Peter Bon we just talked about him and go kid and go for con all that stuff but Peter was",
    "start": "91439",
    "end": "97600"
  },
  {
    "text": "recommending This Jared our last uh guest was saying that this was their you",
    "start": "97600",
    "end": "102920"
  },
  {
    "text": "know promethus was their Tech to play with so we had to get Julius VES on the line here so Julius welcome to the show",
    "start": "102920",
    "end": "109960"
  },
  {
    "text": "hi pleasure to be here and Al we got uh Jared hanging out in the wings there say what's up Jared what's up Jared so Jared",
    "start": "109960",
    "end": "117759"
  },
  {
    "text": "we we were at uh go foron not long ago we met Julius and also bjor who couldn't",
    "start": "117759",
    "end": "122840"
  },
  {
    "text": "make this this call but um we were excited to finally get a chance to get",
    "start": "122840",
    "end": "128319"
  },
  {
    "text": "Prometheus and this conversation talking about um metrics tracking and stuff like that on the show so what's the what's",
    "start": "128319",
    "end": "135440"
  },
  {
    "text": "the best way to open this one up you want to talk about julus a bit you want to go right into the tech well first let me say that uh you know we kind of did",
    "start": "135440",
    "end": "142080"
  },
  {
    "text": "the hallway track at gopher con we're out interviewing people and talking with everybody and there was two things",
    "start": "142080",
    "end": "147720"
  },
  {
    "text": "people were excited about one was Ben Johnson who we lined up to come up here pretty soon and the stuff that he's been",
    "start": "147720",
    "end": "153200"
  },
  {
    "text": "up to and the other one that everybody was excited about was Prometheus yes in fact I think Julius you guys even got a",
    "start": "153200",
    "end": "159560"
  },
  {
    "text": "shout out during one of the Keynotes is that correct yeah we got a bunch of shout outs uh I think from Peter's talk",
    "start": "159560",
    "end": "166400"
  },
  {
    "text": "from Tasha's talk uh the keynote so yeah really really exciting very cool so",
    "start": "166400",
    "end": "171720"
  },
  {
    "text": "we're excited to hear about it we want to know all the details but I think Adam maybe if we start with the history we",
    "start": "171720",
    "end": "176920"
  },
  {
    "text": "can kind of see you know why Prometheus even exist you want to start there let's let's do",
    "start": "176920",
    "end": "182480"
  },
  {
    "text": "that so Julius you've been you've been with SoundCloud for a bit before that you were with Google what uh what was",
    "start": "182480",
    "end": "190080"
  },
  {
    "text": "going on to make Prometheus a thing for you yeah so when I was at Google I was actually doing something completely",
    "start": "190080",
    "end": "196319"
  },
  {
    "text": "different I was in Google's production offline storage system so basically we",
    "start": "196319",
    "end": "201799"
  },
  {
    "text": "had many tens of data centers with huge tape libraries backing up all production",
    "start": "201799",
    "end": "207480"
  },
  {
    "text": "data that Google had so basically exabyte scale backup system globally um",
    "start": "207480",
    "end": "214080"
  },
  {
    "text": "so monitoring wasn't really my specialty there but uh I definitely came in contact with it as a site reliability",
    "start": "214080",
    "end": "221200"
  },
  {
    "text": "engineer on that service and uh when I left Google and joined SoundCloud back",
    "start": "221200",
    "end": "227599"
  },
  {
    "text": "in 2012 um it went as it often goes when",
    "start": "227599",
    "end": "232920"
  },
  {
    "text": "googlers left s when when goog has left Google at around that time especially",
    "start": "232920",
    "end": "238640"
  },
  {
    "text": "they felt a bit n nak it in terms of uh what the open source World provided them in in terms of infrastructure um because",
    "start": "238640",
    "end": "246239"
  },
  {
    "text": "at Google you have like an awesome cluster schedule you've got awesome monitoring systems awesome storage systems and so on suddenly you get like",
    "start": "246239",
    "end": "253159"
  },
  {
    "text": "thrown out into the wild and you miss all of that stuff and you you feel just this urgent need to be building a lot of",
    "start": "253159",
    "end": "259079"
  },
  {
    "text": "that yourself again um but when I joined SoundCloud um a month prior to that",
    "start": "259079",
    "end": "265440"
  },
  {
    "text": "another exg googler was also joining SoundCloud Matt proud and he felt even more strongly about this and he was",
    "start": "265440",
    "end": "272000"
  },
  {
    "text": "particularly unhappy with the state of Open Source monitoring systems so he had",
    "start": "272000",
    "end": "277840"
  },
  {
    "text": "actually already in his free time started building um client libraries for",
    "start": "277840",
    "end": "283800"
  },
  {
    "text": "instrumenting services with with metrics and and his his Grand Vision was to build a whole monitoring system so when",
    "start": "283800",
    "end": "291240"
  },
  {
    "text": "I joined a month later um he kind of pulled me on board and we started building something in our free time that",
    "start": "291240",
    "end": "299160"
  },
  {
    "text": "eventually became Prometheus so just in the first months uh end of 2012 that was",
    "start": "299160",
    "end": "304840"
  },
  {
    "text": "really just our free time uh finally we got uh enough of it working in such a",
    "start": "304840",
    "end": "310360"
  },
  {
    "text": "way that we could uh expose data from Services collect it uh query it and",
    "start": "310360",
    "end": "316759"
  },
  {
    "text": "maybe you know even show it in a graph and that was the point when we decided okay this is actually going somewhere",
    "start": "316759",
    "end": "323280"
  },
  {
    "text": "let's give this a name let's call it Prometheus and uh we like briefly afterwards we started forly introducing",
    "start": "323280",
    "end": "330080"
  },
  {
    "text": "that at SoundCloud um and yeah nowadays it has become soundcloud's uh standard",
    "start": "330080",
    "end": "335639"
  },
  {
    "text": "monitoring system in Time series database now now deep topic aside I got to ask the question which is one of my",
    "start": "335639",
    "end": "342840"
  },
  {
    "text": "favorite movies out there by Really Scott is a movie called Prometheus MH is",
    "start": "342840",
    "end": "348039"
  },
  {
    "text": "there any correlation I have never watched that movie actually well we see aliens come out of the code at some point right so that that was actually",
    "start": "348039",
    "end": "355280"
  },
  {
    "text": "funny I think it actually came out around the same time but it wasn't really on my radar back then um I think",
    "start": "355280",
    "end": "362080"
  },
  {
    "text": "i' I just briefly had heard about it but it wasn't really any it wasn't really",
    "start": "362080",
    "end": "367520"
  },
  {
    "text": "connected to this okay all right yeah Prometheus uh the movie came out in 2012",
    "start": "367520",
    "end": "373800"
  },
  {
    "text": "and I Remember Loving the name and not loving the movie so much Adam so maybe that's a separate show but we could uh",
    "start": "373800",
    "end": "379840"
  },
  {
    "text": "yeah we could go I I heard a I heard a lot of bad things about that movie we could pause this for a minute let me rant I mean we can go start another show",
    "start": "379840",
    "end": "387759"
  },
  {
    "text": "I'm just kid Maybe I should go a bit more into what we had at SoundCloud back then and because that was kind of the",
    "start": "387759",
    "end": "393960"
  },
  {
    "text": "the the big motivation to to build Prometheus well you said you said that you felt naked as a googler you felt",
    "start": "393960",
    "end": "399560"
  },
  {
    "text": "naked coming out of like Google and some of the things missing so this was obviously one of those things missing",
    "start": "399560",
    "end": "405440"
  },
  {
    "text": "right yeah yeah but but you might ask there there there were many open source monitoring systems right why why were we",
    "start": "405440",
    "end": "411960"
  },
  {
    "text": "not happy with those we're asking that question I like that question I actually had that question queued up that's the next question cool so I mean back then",
    "start": "411960",
    "end": "421039"
  },
  {
    "text": "uh SoundCloud was doing this migration that a lot of companies do migrating from one monolithic web application to a",
    "start": "421039",
    "end": "427800"
  },
  {
    "text": "set of microservices just because uh the initial monolithic application has grown too big too complex people don't want to",
    "start": "427800",
    "end": "435280"
  },
  {
    "text": "maintain it anymore you can't have independent groups deploying independent things so SoundCloud uh pretty early on",
    "start": "435280",
    "end": "442479"
  },
  {
    "text": "actually started adopting go and buil their own kind of Heroku style in-house",
    "start": "442479",
    "end": "448160"
  },
  {
    "text": "cluster Schuler uh called bazooka and that's kind of that that was already a",
    "start": "448160",
    "end": "454160"
  },
  {
    "text": "container scheduling system a very early form uh we still using that actually before um before Docker came out before",
    "start": "454160",
    "end": "461680"
  },
  {
    "text": "kubernetes and so on came out and uh the challenge was now that we had these hundreds of microservices running on",
    "start": "461680",
    "end": "468960"
  },
  {
    "text": "these bazooka clusters um with thousands of instances and developers whenever",
    "start": "468960",
    "end": "474840"
  },
  {
    "text": "they built a new revision uh maybe every day even scaled down the old revision",
    "start": "474840",
    "end": "480159"
  },
  {
    "text": "and scaled up the new revisions and all these instances would land on random hosts and on random ports and somehow we",
    "start": "480159",
    "end": "488199"
  },
  {
    "text": "needed to monitor them so what we did back then was uh what SoundCloud did",
    "start": "488199",
    "end": "494240"
  },
  {
    "text": "back then was uh use statsd and graphite as the main uh time series based um",
    "start": "494240",
    "end": "501080"
  },
  {
    "text": "monitoring system so uh statd and graphite had several problems so when I",
    "start": "501080",
    "end": "507360"
  },
  {
    "text": "joined I remember the statsd server almost falling over because it was a single threaded note application running",
    "start": "507360",
    "end": "514518"
  },
  {
    "text": "on a huge BV machine but it could only use one one core so it was actually throwing away UDP packets left and right",
    "start": "514519",
    "end": "521479"
  },
  {
    "text": "I don't know if you know how statd Works uh the general working model is that let's say you have a set of web servers",
    "start": "521479",
    "end": "529279"
  },
  {
    "text": "um let's say an API server and you have 100 instances of that um then if you want to count the",
    "start": "529279",
    "end": "536320"
  },
  {
    "text": "number of HTTP requests that happen in that entire service every one of these",
    "start": "536320",
    "end": "542839"
  },
  {
    "text": "instances for every request that they handle send a UDP packet to statsd and",
    "start": "542839",
    "end": "549440"
  },
  {
    "text": "statsd will count from all these 100 instances will count up all these",
    "start": "549440",
    "end": "554680"
  },
  {
    "text": "counter packets from these different instances over usually a 10 seconds interval and then finally sum them all",
    "start": "554680",
    "end": "561680"
  },
  {
    "text": "up uh and write a single data point out to graphite at the time so graphite is a",
    "start": "561680",
    "end": "567959"
  },
  {
    "text": "Time series storage system system and stats is kind of in front of it to aggregate counter data into a final",
    "start": "567959",
    "end": "574560"
  },
  {
    "text": "count per 10 seconds and um you can do some stuff there like you can say uh on",
    "start": "574560",
    "end": "581399"
  },
  {
    "text": "the on the service side please only send every 10th uh UDP packet or something so",
    "start": "581399",
    "end": "587560"
  },
  {
    "text": "you alleviate the load somewhat um but the the main pattern is here that you're",
    "start": "587560",
    "end": "593800"
  },
  {
    "text": "doing the counting in the stats decide and um yeah that that that sty wasn't",
    "start": "593800",
    "end": "599839"
  },
  {
    "text": "really scalable it was throwing away UDP packets wasn't really working that well anymore um and the other problem was",
    "start": "599839",
    "end": "608000"
  },
  {
    "text": "graphite's inherent data model so in graphite uh if you store a metric um a",
    "start": "608000",
    "end": "613440"
  },
  {
    "text": "Time series um it's only a single metric name with no Dimensions so it has some",
    "start": "613440",
    "end": "619680"
  },
  {
    "text": "dots in the middle that allow you to separate components of a metric name and people use that to encode implicit",
    "start": "619680",
    "end": "627200"
  },
  {
    "text": "Dimensions so for for example you might have a metric named",
    "start": "627200",
    "end": "632600"
  },
  {
    "text": "api. http.get do2 200 to count the",
    "start": "632600",
    "end": "639560"
  },
  {
    "text": "successfully handled get requests of an IPI server and and that works kind of it",
    "start": "639560",
    "end": "645440"
  },
  {
    "text": "doesn't scale too well graphite doesn't deal very well with uh you going wild with these Dimensions um it doesn't",
    "start": "645440",
    "end": "653399"
  },
  {
    "text": "allow you in the query language to be particularly flexible about how you query for these dimensions and they're",
    "start": "653399",
    "end": "659440"
  },
  {
    "text": "also implicit so you look at one of these dot separated components and you can kind of guess what what it would",
    "start": "659440",
    "end": "665800"
  },
  {
    "text": "mean but you only see the value you don't see the key usually um another problem there was that um due to this",
    "start": "665800",
    "end": "673360"
  },
  {
    "text": "limited dimensionality it was really hard to figure out which particular host or",
    "start": "673360",
    "end": "680360"
  },
  {
    "text": "which particular service instance um um a metric was was coming",
    "start": "680360",
    "end": "686920"
  },
  {
    "text": "from so let's say you have a global latency Spike um",
    "start": "686920",
    "end": "692279"
  },
  {
    "text": "so if you have these counters over 100 instances they all get counted into one metric in the end and you don't really",
    "start": "692279",
    "end": "698600"
  },
  {
    "text": "see uh if there is a spike was it only in one instance was it in all instances",
    "start": "698600",
    "end": "704120"
  },
  {
    "text": "you can't really drill down there anymore um some teams have actually then encoded the instance and the port like",
    "start": "704120",
    "end": "712000"
  },
  {
    "text": "the host and the port of an instance into the metric name into one of these dot separated components but graphite",
    "start": "712000",
    "end": "719480"
  },
  {
    "text": "is not really meant for that and and it blew up pretty quickly so they had to",
    "start": "719480",
    "end": "725240"
  },
  {
    "text": "run their own graphite server but that is not particularly fun because graphite is not so fun to run either um so yeah",
    "start": "725240",
    "end": "732880"
  },
  {
    "text": "these were kind of the the problems we encountered with the statsd and graphite combination that was for service",
    "start": "732880",
    "end": "740040"
  },
  {
    "text": "monitoring um so when I say monitoring actually I I kind of mean I mean different people mean different things",
    "start": "740040",
    "end": "746320"
  },
  {
    "text": "with that I mean both Time series ction and trending and alerting some people",
    "start": "746320",
    "end": "751600"
  },
  {
    "text": "when they say monitoring they think of only something like naos only something that alerts people end what so did you",
    "start": "751600",
    "end": "759160"
  },
  {
    "text": "hear that naos oh how do you pronounce it we had the European take on it I took a took a",
    "start": "759160",
    "end": "765959"
  },
  {
    "text": "break there to to butt in but pre preall you can mention it Jared but uh he set",
    "start": "765959",
    "end": "771839"
  },
  {
    "text": "up some nagio servers ah so anyways you said so NEOS",
    "start": "771839",
    "end": "777800"
  },
  {
    "text": "is the way you from I don't know how to pronounce it that's just you know I used to be a you know a network administrator",
    "start": "777800",
    "end": "782839"
  },
  {
    "text": "back in the day and I was the only one doing it so you never say it out loud but I just thought it was nagios because",
    "start": "782839",
    "end": "788079"
  },
  {
    "text": "it nags you all the time I thought they had a play on words but that makes so much more sense but nagios could be",
    "start": "788079",
    "end": "794519"
  },
  {
    "text": "right I don't know I see that makes sense there you go but yeah I mean I think when I think of alerting I think",
    "start": "794519",
    "end": "800040"
  },
  {
    "text": "of something more like that but you actually say service monitoring you include alerting in that in your definition is that what you're saying I",
    "start": "800040",
    "end": "805680"
  },
  {
    "text": "include I I include time seuse collection I include uh the graphing I include the alerting so the whole",
    "start": "805680",
    "end": "811240"
  },
  {
    "text": "complex of getting metrics from your systems and and acting on it and notifying someone okay um it's it's kind",
    "start": "811240",
    "end": "818440"
  },
  {
    "text": "of just a def question of definition I guess sure um yeah so so we used nagios",
    "start": "818440",
    "end": "823519"
  },
  {
    "text": "nagios back then um what like yeah uh partially just running completely these",
    "start": "823519",
    "end": "829240"
  },
  {
    "text": "stateless checks that you run on a host to see if things are good right now um and partially based on graphite based",
    "start": "829240",
    "end": "836079"
  },
  {
    "text": "time series and um yeah that was fine but nus is kind of also from the 9s uh",
    "start": "836079",
    "end": "842880"
  },
  {
    "text": "it's its data model is very limited I mean it knows about hosts and services",
    "start": "842880",
    "end": "848079"
  },
  {
    "text": "on those hosts and if you have something like a cluster wide check or things that",
    "start": "848079",
    "end": "853240"
  },
  {
    "text": "just don't fit into that pattern you kind of have to squeeze them into that pattern and that sometimes works",
    "start": "853240",
    "end": "858959"
  },
  {
    "text": "sometimes not that great um it's really hard to Silence by any arbitrary",
    "start": "858959",
    "end": "864240"
  },
  {
    "text": "dimensions in naos so um yeah the the the data model there is also a bit",
    "start": "864240",
    "end": "869600"
  },
  {
    "text": "painful the UI I think we don't even need to talk about um nowadays we're actually using is Singa which has a bit",
    "start": "869600",
    "end": "875800"
  },
  {
    "text": "better UI but still uh is Singa is U basically a drop in replacement for",
    "start": "875800",
    "end": "881360"
  },
  {
    "text": "nagios so you just it uses the same database I don't think you have to change much it's just kind of a new UI",
    "start": "881360",
    "end": "887800"
  },
  {
    "text": "and I think it has a bit of a different uh more scalable mechanism for executing",
    "start": "887800",
    "end": "893120"
  },
  {
    "text": "checks um but I'm not really an expert in in in that area um yeah yeah so for",
    "start": "893120",
    "end": "899759"
  },
  {
    "text": "that was for service monitoring and for host monitoring we had ganglia and ganglia is pretty much completely you",
    "start": "899759",
    "end": "906839"
  },
  {
    "text": "know you have the host as a dimensional key there but not much else of course also the metric name but there's no",
    "start": "906839",
    "end": "913519"
  },
  {
    "text": "query language there's no nice graphing interface and so on you get these pretty static dashboards with host metrics and",
    "start": "913519",
    "end": "922120"
  },
  {
    "text": "um yeah so we used also naos of course for for the host uh alerting then um",
    "start": "922120",
    "end": "929160"
  },
  {
    "text": "this might be a pre a little bit premature but I just went to the nagios and we're all going to say it different ways by the way nagios nagios nagos um",
    "start": "929160",
    "end": "937680"
  },
  {
    "text": "they say they're the industry standard for it infrastructure monitoring what is the goal or what was the goal with",
    "start": "937680",
    "end": "942959"
  },
  {
    "text": "Prometheus was it to you know redo what everyone had been doing not quite so",
    "start": "942959",
    "end": "948279"
  },
  {
    "text": "well cuz you have opinions and you know obviously some some skills to do it but",
    "start": "948279",
    "end": "954920"
  },
  {
    "text": "was it is it the goal to sort of unseat some of these existing players or is it to just sort of like rebuild something",
    "start": "954920",
    "end": "960440"
  },
  {
    "text": "new that that made sense for SoundCloud uh yeah definitely so uh for us it was the goal to replace statsd to",
    "start": "960440",
    "end": "966920"
  },
  {
    "text": "replace graphite to replace nagios in the end with a new kind of ecosystem that is uh more powerful and more",
    "start": "966920",
    "end": "974319"
  },
  {
    "text": "integrated and allows you to do more stuff in a more Modern Way um so yeah",
    "start": "974319",
    "end": "980880"
  },
  {
    "text": "definitely we we hope to make people depend Less on those uh old tools I would say so we we kind of sometimes J",
    "start": "980880",
    "end": "988639"
  },
  {
    "text": "call it a Next Generation monitoring system and it it does try to cover all the aspects from instrumenting your",
    "start": "988639",
    "end": "995360"
  },
  {
    "text": "services collecting the data um showing the data in the dashboard uh alerting on",
    "start": "995360",
    "end": "1001240"
  },
  {
    "text": "the data if something is wrong and then sending those notifications to you so",
    "start": "1001240",
    "end": "1006279"
  },
  {
    "text": "yeah it tries to cover basically the whole field um what it does not do is event-based monitoring so if you if you",
    "start": "1006279",
    "end": "1014160"
  },
  {
    "text": "want to do per account uh per per request accounting let's say you want to",
    "start": "1014160",
    "end": "1020519"
  },
  {
    "text": "uh really collect every individual event you know a use case like logging or a use case like um uh elastic search where",
    "start": "1020519",
    "end": "1028240"
  },
  {
    "text": "you can really put every individual record of what happened in there that's not really what we're trying to do uh",
    "start": "1028240",
    "end": "1034079"
  },
  {
    "text": "promethus is really in the business of collecting purely numeric time series",
    "start": "1034079",
    "end": "1039640"
  },
  {
    "text": "that have a metric name and a set of key value dimensions and those the metric",
    "start": "1039640",
    "end": "1045480"
  },
  {
    "text": "name and the key value Dimensions uh unique identify every series and that",
    "start": "1045480",
    "end": "1050960"
  },
  {
    "text": "you can then actually use together with the query language to do really powerful queries to Aggregate and slice and dice",
    "start": "1050960",
    "end": "1058240"
  },
  {
    "text": "uh based on whatever Dimension you're currently interested in during the query actually and",
    "start": "1058240",
    "end": "1064400"
  },
  {
    "text": "yeah so you started building this in your free time or your you and your buddy started building it um curious",
    "start": "1064400",
    "end": "1070360"
  },
  {
    "text": "just kind of the the inner workings of SoundCloud where they're at with open source and how much Freedom they give",
    "start": "1070360",
    "end": "1076480"
  },
  {
    "text": "you as an engineer was this something that you had to sell to your boss or to the company or was it just like well",
    "start": "1076480",
    "end": "1082760"
  },
  {
    "text": "we're doing this now and whatever you guys think is the best solution must be right yeah so this was definitely an",
    "start": "1082760",
    "end": "1089640"
  },
  {
    "text": "interesting history uh I think at the beginning we just took uh the Liberty ourself to do that in our free time uh",
    "start": "1089640",
    "end": "1096240"
  },
  {
    "text": "there was a lot of resistance at the beginning to introduce that at SoundCloud which totally makes sense to",
    "start": "1096240",
    "end": "1101440"
  },
  {
    "text": "me especially in retrospect because to be honest at the beginning nothing was really working it was I mean",
    "start": "1101440",
    "end": "1109080"
  },
  {
    "text": "late 2012 early 2013 um the the main server was pretty",
    "start": "1109080",
    "end": "1115039"
  },
  {
    "text": "immature it wasn't really performing well there a lot of e ecosystem components were missing um and there was",
    "start": "1115039",
    "end": "1122640"
  },
  {
    "text": "no real dashboarding solution yet and so on but like as time went on we just kind of you know we I I think we we took we",
    "start": "1122640",
    "end": "1130320"
  },
  {
    "text": "took quite some Liberties there um in just pushing this project on and uh it",
    "start": "1130320",
    "end": "1136640"
  },
  {
    "text": "became better and better and I would say like probably one and a half years in we had the main server that collects the",
    "start": "1136640",
    "end": "1144200"
  },
  {
    "text": "time series and makes them creable we had that pretty mature and stable um we",
    "start": "1144200",
    "end": "1149600"
  },
  {
    "text": "had uh prom Dash which is the Prometheus dashboard Builder so finally people were",
    "start": "1149600",
    "end": "1155039"
  },
  {
    "text": "actually able to build uh dashboards on top of the data that they collected and",
    "start": "1155039",
    "end": "1160240"
  },
  {
    "text": "we also had uh one of our really first killer use cases where we got uh",
    "start": "1160240",
    "end": "1165320"
  },
  {
    "text": "instrumentation about all the containers that were running on bazooka or in-house Heroku system so uh you could you could",
    "start": "1165320",
    "end": "1173120"
  },
  {
    "text": "get for every application revision and proc type uh keyed by those dimensions",
    "start": "1173120",
    "end": "1178480"
  },
  {
    "text": "and more actually uh the current CPU usage the memory usage the memory limit",
    "start": "1178480",
    "end": "1183600"
  },
  {
    "text": "and so on and so on and that really started convincing people that this was really worth it and then I think that",
    "start": "1183600",
    "end": "1189880"
  },
  {
    "text": "was kind of the Tipping Point where shortly after um the Strategic bet was",
    "start": "1189880",
    "end": "1195080"
  },
  {
    "text": "made in in SoundCloud to to Really switch to that and in terms of open sourcing that was interesting because we",
    "start": "1195080",
    "end": "1201840"
  },
  {
    "text": "when we started this uh initially we just put it up on GitHub without asking anyone on its own",
    "start": "1201840",
    "end": "1207760"
  },
  {
    "text": "organization and um so it's kind of a weird status I guess um it was a private",
    "start": "1207760",
    "end": "1216480"
  },
  {
    "text": "project it's still arguably I mean it was definitely started in in in the free time Matt even started before he joined",
    "start": "1216480",
    "end": "1223480"
  },
  {
    "text": "SoundCloud and um we've been trying since then to keep it as independent as possible from any single company so we",
    "start": "1223480",
    "end": "1230960"
  },
  {
    "text": "really want this to be an open Community Project without you know one company controlling too much of the direction",
    "start": "1230960",
    "end": "1237320"
  },
  {
    "text": "and so on um and uh before so we we we we put it on GitHub back then but we",
    "start": "1237320",
    "end": "1243440"
  },
  {
    "text": "really didn't make any noise about it so we only told a couple of friends uh especially also other ex googlers",
    "start": "1243440",
    "end": "1249840"
  },
  {
    "text": "because so we I guess I have to say Prometheus is kind of inspired by a lot",
    "start": "1249840",
    "end": "1255880"
  },
  {
    "text": "of what we learned about monitoring at Google and a lot of people who quit Google then asked either asked us hey do",
    "start": "1255880",
    "end": "1262280"
  },
  {
    "text": "you know anything similar or they just discovered Prometheus and kind of noticed that it was very similar to what",
    "start": "1262280",
    "end": "1268320"
  },
  {
    "text": "they've been used to so before we even you know went more public about",
    "start": "1268320",
    "end": "1273760"
  },
  {
    "text": "promethus we had a kind of an Insider circle of people using it testing it already at uh one of our ex colleagues",
    "start": "1273760",
    "end": "1280760"
  },
  {
    "text": "from SoundCloud who then went to Docker he started using it at Docker and another colleague used it at box ever",
    "start": "1280760",
    "end": "1287919"
  },
  {
    "text": "which which is a Dublin based company and uh so he he is in Dublin and um in",
    "start": "1287919",
    "end": "1295320"
  },
  {
    "text": "terms of open sourcing so it was open source but only in the beginning of this year for the record since it's a podcast",
    "start": "1295320",
    "end": "1301799"
  },
  {
    "text": "uh this year is 2015 uh in January we decided okay it's finally it's really ready enough to",
    "start": "1301799",
    "end": "1307919"
  },
  {
    "text": "share with a broader audience so um just leading up to that we had a lot",
    "start": "1307919",
    "end": "1314559"
  },
  {
    "text": "of discussions with you know internal departments about how we should communicate the this and what's the legal status around that in the end",
    "start": "1314559",
    "end": "1321120"
  },
  {
    "text": "everything was pretty relaxed and we had uh you know blog posts on the SoundCloud",
    "start": "1321120",
    "end": "1326440"
  },
  {
    "text": "backstage blog and on box Evers blog and uh I think on my Docker colleagues uh",
    "start": "1326440",
    "end": "1333039"
  },
  {
    "text": "private blog back then and yeah and and then it really took off and um that was",
    "start": "1333039",
    "end": "1339039"
  },
  {
    "text": "so it took some work then though it took some commitment from you and Matt and others that were sort of seeing the",
    "start": "1339039",
    "end": "1344360"
  },
  {
    "text": "light where this can go and then I was say you just run it concurrently alongside your stats D stuff until it",
    "start": "1344360",
    "end": "1350080"
  },
  {
    "text": "showed its value and then you were able to eventually cut over or you still running your stats D stuff as well um so",
    "start": "1350080",
    "end": "1357039"
  },
  {
    "text": "yeah that that's what we did and uh sty is still running because you know you never turn off old systems in practice",
    "start": "1357039",
    "end": "1363679"
  },
  {
    "text": "but um uh practically nobody's using that anymore very few people are using that so if you're building a new service",
    "start": "1363679",
    "end": "1370200"
  },
  {
    "text": "at SoundCloud it's it's going to use Prometheus um there's some uh Legacy",
    "start": "1370200",
    "end": "1375480"
  },
  {
    "text": "stuff on stats DM graphite still and there's some stuff that was hard to convert but uh yeah for the most part",
    "start": "1375480",
    "end": "1381880"
  },
  {
    "text": "it's all Prometheus now and yeah it's it's been really a ride especially since",
    "start": "1381880",
    "end": "1389279"
  },
  {
    "text": "uh being more more vocal about it beginning of the year um we've really I mean the community has grown crazily uh",
    "start": "1389279",
    "end": "1397520"
  },
  {
    "text": "we have contributors from all kinds of companies um we get a lot of",
    "start": "1397520",
    "end": "1403600"
  },
  {
    "text": "contributions basically we get contributions almost every day if not multiple I think Google is now Google's",
    "start": "1403600",
    "end": "1410679"
  },
  {
    "text": "kubernetes is now natively instrumented with Prometheus metrics so if you want to monitor",
    "start": "1410679",
    "end": "1415960"
  },
  {
    "text": "kubernetes uh you don't even need to have kind of any kind of adapter to get",
    "start": "1415960",
    "end": "1421000"
  },
  {
    "text": "Prometheus metrics out of there um you have core OS adopting it quite a lot for",
    "start": "1421000",
    "end": "1426520"
  },
  {
    "text": "their components so etcd is one notable mention there that is already um sprinkled with Prometheus metrics um",
    "start": "1426520",
    "end": "1434240"
  },
  {
    "text": "then you have digital ocean completely adopting it for their internal monitoring right now um I don't know how",
    "start": "1434240",
    "end": "1441360"
  },
  {
    "text": "much I can say about that but I think these are the three companies where they're like reasonably public about",
    "start": "1441360",
    "end": "1446760"
  },
  {
    "text": "what they're doing with with Prometheus I know of a bunch more but uh I I'm not sure you know how much I can say about",
    "start": "1446760",
    "end": "1453400"
  },
  {
    "text": "those sure well there's definitely tons of details that any system that looks to replace a handful of Legacy systems um",
    "start": "1453400",
    "end": "1460720"
  },
  {
    "text": "will have many moving parts and you have an architecture you have a data model there's a query language there's lots of",
    "start": "1460720",
    "end": "1465880"
  },
  {
    "text": "details we want to ask you about all of them first we're going to take a quick sponsor break uh hear a word from our",
    "start": "1465880",
    "end": "1472120"
  },
  {
    "text": "awesome sponsor and then we will be back with all the nitty-gritty details of",
    "start": "1472120",
    "end": "1477159"
  },
  {
    "text": "Prometheus be right back toptw is by far the best place to work as a freelance software developer I",
    "start": "1477159",
    "end": "1484960"
  },
  {
    "text": "had a chance to sit down and talk with Brendon benot the co-founder and COO of toptw and I asked Brendon to share some",
    "start": "1484960",
    "end": "1491240"
  },
  {
    "text": "details about the foundation of topt what makes topt different and what makes",
    "start": "1491240",
    "end": "1496559"
  },
  {
    "text": "their network of elite Engineers so strong take a listen I mean I'm one of the co-founders and I'm an engineer um I",
    "start": "1496559",
    "end": "1505159"
  },
  {
    "text": "studied chemical engineering and to pay for this super expensive degree I was freelancing as a software developer and",
    "start": "1505159",
    "end": "1510480"
  },
  {
    "text": "by the time I finished realized that being a software developer was pretty awesome and so I kept doing that and my",
    "start": "1510480",
    "end": "1517679"
  },
  {
    "text": "co-founder is in a similar situation as well and so we wanted to solve a problem",
    "start": "1517679",
    "end": "1522880"
  },
  {
    "text": "as engineers and do it from as a network of Engineers kind of for engineers by engineers and having that perspective",
    "start": "1522880",
    "end": "1531200"
  },
  {
    "text": "and and consistently bringing on new team members who also share this really",
    "start": "1531200",
    "end": "1536360"
  },
  {
    "text": "makes topt different and that it's a network of Engineers not kind of like",
    "start": "1536360",
    "end": "1541480"
  },
  {
    "text": "you have topt and then the developers it's never about us and them it's it's always us like everybody at topt for the",
    "start": "1541480",
    "end": "1548559"
  },
  {
    "text": "most part refers to topt as their company and they feel like it's their company and everybody acts like a core team member even though they're",
    "start": "1548559",
    "end": "1554720"
  },
  {
    "text": "Freelancers within the toptown network and all of these things are extremely important to us all right if you're",
    "start": "1554720",
    "end": "1560919"
  },
  {
    "text": "interested in learning more about what toptw is all about head to tot.com /d",
    "start": "1560919",
    "end": "1566600"
  },
  {
    "text": "developers that's T o.com developers to learn more and make",
    "start": "1566600",
    "end": "1572520"
  },
  {
    "text": "sure you tell them to change law sent you all right we are back talking to",
    "start": "1572520",
    "end": "1578000"
  },
  {
    "text": "Julius BS about Prometheus the data monitoring uh system out of well kind of",
    "start": "1578000",
    "end": "1584279"
  },
  {
    "text": "out of SoundCloud maintained by some SoundCloud people used by SoundCloud and others and really uh making a name for",
    "start": "1584279",
    "end": "1591200"
  },
  {
    "text": "itself in the industry Julius we want to talk to you about um the details of Prometheus you've talked about some of",
    "start": "1591200",
    "end": "1598159"
  },
  {
    "text": "the problems that you guys have run up against in different systems and you obviously look to um solve those",
    "start": "1598159",
    "end": "1604799"
  },
  {
    "text": "problems with PR Prometheus so maybe uh take us through the high level points and we'll dig down as we find them",
    "start": "1604799",
    "end": "1610760"
  },
  {
    "text": "interesting starting with the architecture I know it's kind of hard without visualizations but if you could",
    "start": "1610760",
    "end": "1615840"
  },
  {
    "text": "lay it out in words what are all the moving parts and how do they fit together sure um I actually have the",
    "start": "1615840",
    "end": "1623159"
  },
  {
    "text": "advantage that I have the architecture diagram in front of me but if if you as a podcast uh listener also want to view",
    "start": "1623159",
    "end": "1629960"
  },
  {
    "text": "it head over to prometheus. and scroll down in the overview section so um I think the heart",
    "start": "1629960",
    "end": "1637360"
  },
  {
    "text": "of Prometheus is the Prometheus server which is really you run one or multiple",
    "start": "1637360",
    "end": "1642880"
  },
  {
    "text": "of those in your company and you configure it to scrap targets so",
    "start": "1642880",
    "end": "1648880"
  },
  {
    "text": "basically services that you're interested in um Prometheus is kind of",
    "start": "1648880",
    "end": "1655159"
  },
  {
    "text": "believes in the Church of pull that means it pulls data rather than having data sent to it and uh actually we",
    "start": "1655159",
    "end": "1662039"
  },
  {
    "text": "should really go into why we decided to do that because that's an interesting religious kind of Point um but let's do",
    "start": "1662039",
    "end": "1668559"
  },
  {
    "text": "that later maybe um so you configure that server to scrape your services and",
    "start": "1668559",
    "end": "1674000"
  },
  {
    "text": "these services are can can be one of three different things so it could either be your own service that you can",
    "start": "1674000",
    "end": "1681320"
  },
  {
    "text": "instrument with one of our client libraries and the client libraries allow you to expose things such count as",
    "start": "1681320",
    "end": "1689120"
  },
  {
    "text": "counter metrics um gauges histograms and summaries the latter two are kind of",
    "start": "1689120",
    "end": "1695039"
  },
  {
    "text": "hybrid metric types that give you either you know like bucketed histograms or quantiles um and uh so so the client",
    "start": "1695039",
    "end": "1704000"
  },
  {
    "text": "libraries give you programming language objects that allow you to track counter",
    "start": "1704000",
    "end": "1709480"
  },
  {
    "text": "State and so on and then also expose it over HTTP and uh promethus server the",
    "start": "1709480",
    "end": "1715919"
  },
  {
    "text": "Prometheus server then comes by regularly usually every 15 30 or 1 minute or whatever you configure and",
    "start": "1715919",
    "end": "1723480"
  },
  {
    "text": "scrapes that endpoint gets the only the current state of the metric so there's no history in the client but only gets",
    "start": "1723480",
    "end": "1729519"
  },
  {
    "text": "the current state so let's say for a counter it would just get how many",
    "start": "1729519",
    "end": "1735039"
  },
  {
    "text": "requests have happened since this service instance started and the counters never reset so you could have",
    "start": "1735039",
    "end": "1742399"
  },
  {
    "text": "uh two totally independent Prometheus servers scraping the same Target and getting the identical data um and so",
    "start": "1742399",
    "end": "1750720"
  },
  {
    "text": "Prometheus does that stores these metrics locally in a local storage um I",
    "start": "1750720",
    "end": "1756600"
  },
  {
    "text": "should say that currently we only really for for the querying um we only really",
    "start": "1756600",
    "end": "1762559"
  },
  {
    "text": "have a local on disk storage our goal was to have single server nodes which",
    "start": "1762559",
    "end": "1768399"
  },
  {
    "text": "are uh completely uh independent of any other thing on the network when you you",
    "start": "1768399",
    "end": "1774200"
  },
  {
    "text": "know when when uh things really go Ary and you need to uh figure out what's",
    "start": "1774200",
    "end": "1779279"
  },
  {
    "text": "going on during an outage um you really can go to that one server and look at",
    "start": "1779279",
    "end": "1784480"
  },
  {
    "text": "your metrics without having to depend on you know complex distributed backend storage and so on we do have support for",
    "start": "1784480",
    "end": "1792880"
  },
  {
    "text": "writing to uh experimental support for writing to open tsdb and influx TB at",
    "start": "1792880",
    "end": "1798279"
  },
  {
    "text": "the moment but it's not possible yet to read back from those through Prometheus",
    "start": "1798279",
    "end": "1804159"
  },
  {
    "text": "via prometheus's query language so you if you want to get data out of those again currently you would still have to",
    "start": "1804159",
    "end": "1809960"
  },
  {
    "text": "then head to those other systems but that's on the long-term road map we definitely want to have like a long-term",
    "start": "1809960",
    "end": "1815600"
  },
  {
    "text": "storage that is uh read that that that we can read back from uh the local",
    "start": "1815600",
    "end": "1820799"
  },
  {
    "text": "storage is good for you know a couple of weeks or maybe even months maybe longer depending on how much data you have but",
    "start": "1820799",
    "end": "1826559"
  },
  {
    "text": "it's not really as a forever storage so yeah so Simplicity decision just just",
    "start": "1826559",
    "end": "1833200"
  },
  {
    "text": "because you guys want it to be simple yeah on one hand it's much simpler to",
    "start": "1833200",
    "end": "1838480"
  },
  {
    "text": "implement of course than a distributed system and we also believe that through this Simplicity hopefully you'll get",
    "start": "1838480",
    "end": "1846039"
  },
  {
    "text": "more reliable more reliability out of this in the end so if if let's say you wanted to have um ha High availability",
    "start": "1846039",
    "end": "1854760"
  },
  {
    "text": "you would simply run two identically configured prometh servers scraping exactly the same data and if one goes",
    "start": "1854760",
    "end": "1860799"
  },
  {
    "text": "down you still have the other one to go to but they're uh not clustered so they're completely independent of each",
    "start": "1860799",
    "end": "1866960"
  },
  {
    "text": "other and if you want to investigate State during an outage you just need one of them up and you can go to either one",
    "start": "1866960",
    "end": "1873559"
  },
  {
    "text": "and and see what's actually happening um okay so normally instrumented jobs are one of the three",
    "start": "1873559",
    "end": "1880559"
  },
  {
    "text": "types of things that um Prometheus can collect data from but you might also",
    "start": "1880559",
    "end": "1886360"
  },
  {
    "text": "have something like like a Linux host machine or ha proxy or engine x uh",
    "start": "1886360",
    "end": "1893000"
  },
  {
    "text": "things that you cannot easily at least instrument directly you probably wouldn't want to go into the Linux kernel and build a module that exports",
    "start": "1893000",
    "end": "1900639"
  },
  {
    "text": "uh Prometheus metrics over HTTP right so for that we have a set of export servers",
    "start": "1900639",
    "end": "1907000"
  },
  {
    "text": "we call them exporters um which are just basically basically uh little jobs",
    "start": "1907000",
    "end": "1912559"
  },
  {
    "text": "little uh binaries that you run close to whatever you're interested in monitoring",
    "start": "1912559",
    "end": "1918120"
  },
  {
    "text": "and they know how to extract the native metrics from from that system so for example in the case of the host exporter",
    "start": "1918120",
    "end": "1926000"
  },
  {
    "text": "it would go to the proc file system and give you a lot of information about the",
    "start": "1926000",
    "end": "1931159"
  },
  {
    "text": "networking and the Diss and so on and so on and um these little exporters then",
    "start": "1931159",
    "end": "1937600"
  },
  {
    "text": "transform what they collect locally into a set of Prometheus metric which they again expose on an HTTP endpoint for",
    "start": "1937600",
    "end": "1945080"
  },
  {
    "text": "Prometheus to scrape and that's how promethus can get information from these kinds of systems and we have a lot of",
    "start": "1945080",
    "end": "1951279"
  },
  {
    "text": "exporters for all kinds of systems there already um finally the third kind of",
    "start": "1951279",
    "end": "1958440"
  },
  {
    "text": "thing you might want to Monitor and which is can be a challenge is things like batch jobs or things that are just",
    "start": "1958440",
    "end": "1964960"
  },
  {
    "text": "too shortlived to be exposing metrics and to be scraped reliably by Prometheus",
    "start": "1964960",
    "end": "1971320"
  },
  {
    "text": "um so in that case let's say you have a daily daily batch job which deletes some users or so on and you want to track the",
    "start": "1971320",
    "end": "1978679"
  },
  {
    "text": "last time it ran successfully and how many users it deleted for that we have something called the push Gateway which",
    "start": "1978679",
    "end": "1985320"
  },
  {
    "text": "is kind of the glue between the push and the pull World which you're only really supposed to be using when you really",
    "start": "1985320",
    "end": "1990919"
  },
  {
    "text": "have to um and the batch job could then push at the end of its run usually these",
    "start": "1990919",
    "end": "1997279"
  },
  {
    "text": "metrics the last run and and the deleted users to that push Gateway and the push",
    "start": "1997279",
    "end": "2002440"
  },
  {
    "text": "Gateway would simply hold on to those metrics forever and the prometh server",
    "start": "2002440",
    "end": "2007679"
  },
  {
    "text": "can then come by and scrape it from the push Gateway and yeah so this is kind of",
    "start": "2007679",
    "end": "2012720"
  },
  {
    "text": "the data ingestion side of things um in",
    "start": "2012720",
    "end": "2017919"
  },
  {
    "text": "the architecture further there so after the data is collected and stored um we",
    "start": "2017919",
    "end": "2023600"
  },
  {
    "text": "have we can do two interesting things with the data we can look at it as a human on the dashboard or directly on",
    "start": "2023600",
    "end": "2030360"
  },
  {
    "text": "the Pria server so for dashboarding we have uh a couple of solutions we have",
    "start": "2030360",
    "end": "2036320"
  },
  {
    "text": "prom Dash the Prometheus dashboard Builder is really kind of a UI based uh",
    "start": "2036320",
    "end": "2041440"
  },
  {
    "text": "click based dashboard Builder similar to grafana uh when I started building prom Dash grafana to my knowledge didn't",
    "start": "2041440",
    "end": "2048440"
  },
  {
    "text": "really exist yet or not at all um but it's it's roughly comparable to that U",
    "start": "2048440",
    "end": "2053960"
  },
  {
    "text": "but since then grafana now also has experimental uh Prometheus graphing",
    "start": "2053960",
    "end": "2059480"
  },
  {
    "text": "support um and there's a third visualization option where you can serve",
    "start": "2059480",
    "end": "2066560"
  },
  {
    "text": "d DC HTML templates directly from the Prometheus server that's kind of a power",
    "start": "2066560",
    "end": "2072760"
  },
  {
    "text": "user use case where you can build any kinds of HTML based dashboards uh and",
    "start": "2072760",
    "end": "2078320"
  },
  {
    "text": "these templates then have access to the query language of Prometheus so um they allow you to build like even Dynamic",
    "start": "2078320",
    "end": "2085960"
  },
  {
    "text": "layouts um depending on the data that you have in your in your Prometheus",
    "start": "2085960",
    "end": "2091440"
  },
  {
    "text": "instance um so that's visualization and then the last part that",
    "start": "2091440",
    "end": "2097440"
  },
  {
    "text": "we do in Prometheus is alerting um so",
    "start": "2097440",
    "end": "2102680"
  },
  {
    "text": "you have collected a lot of data now about all your systems your hosts and your services and now you can actually",
    "start": "2102680",
    "end": "2107920"
  },
  {
    "text": "make use of that data to see if something is wrong somewhere um to see",
    "start": "2107920",
    "end": "2113119"
  },
  {
    "text": "if a batch job hasn't run for a while to see if the request rate of some services are too low or errors are spiking up and",
    "start": "2113119",
    "end": "2121680"
  },
  {
    "text": "uh you can actually use the same powerful career language that you can use to display stuff you can use the",
    "start": "2121680",
    "end": "2128240"
  },
  {
    "text": "same language to formulate alert conditions under which uh people should",
    "start": "2128240",
    "end": "2133800"
  },
  {
    "text": "get notified and since you might have multiple of these Prometheus servers",
    "start": "2133800",
    "end": "2139520"
  },
  {
    "text": "that each compute these alert conditions in the company you might want to do some correlation between them and alert",
    "start": "2139520",
    "end": "2146200"
  },
  {
    "text": "rooting and so on and that's better done in a central place so you usually have",
    "start": "2146200",
    "end": "2151640"
  },
  {
    "text": "one or few alert managers in your company that's a separate binary again",
    "start": "2151640",
    "end": "2157000"
  },
  {
    "text": "that you run usually once um that all the Prometheus in your organization send",
    "start": "2157000",
    "end": "2162920"
  },
  {
    "text": "currently firing alerts to and um the alert manager then can do things like",
    "start": "2162920",
    "end": "2170160"
  },
  {
    "text": "inhibit one alert if another one is firing uh it knows how to root uh alerts",
    "start": "2170160",
    "end": "2175640"
  },
  {
    "text": "based on uh the key value dimensions on the alerts to specific notification",
    "start": "2175640",
    "end": "2182240"
  },
  {
    "text": "configurations to specific teams and so on and it supports a a range of notification mechanisms like pager Duty",
    "start": "2182240",
    "end": "2189800"
  },
  {
    "text": "email slack and so on so that that's kind of the overall overview over over",
    "start": "2189800",
    "end": "2195359"
  },
  {
    "text": "Prometheus just one question on the visualization side what's the purpose of having a separate like the prom Dash um",
    "start": "2195359",
    "end": "2202400"
  },
  {
    "text": "aspect and then also builtin graphing and querying is one for a certain use case",
    "start": "2202400",
    "end": "2208480"
  },
  {
    "text": "and one for a different use case yeah definitely so the built-in graphing is really more useful for ad hoc",
    "start": "2208480",
    "end": "2215680"
  },
  {
    "text": "exploration uh really off data that is in one prometheo server and uh that's",
    "start": "2215680",
    "end": "2221040"
  },
  {
    "text": "good you know if even if your prom Dash is down and you really just want to see what's happening in one promethee server",
    "start": "2221040",
    "end": "2227040"
  },
  {
    "text": "you can go there you can do very rudimentary graphing so it doesn't have all the bells and whistles that prom",
    "start": "2227040",
    "end": "2232200"
  },
  {
    "text": "Dash has uh you know like stacked uh it does have stacked uh graphs but it doesn't have like multiple axes multiple",
    "start": "2232200",
    "end": "2238760"
  },
  {
    "text": "expressions in one graph different color schemes and things like that uh so it's it's quite simple but it allows you in",
    "start": "2238760",
    "end": "2245599"
  },
  {
    "text": "the worst case to still you know explore the data uh in that Promethea server and",
    "start": "2245599",
    "end": "2251480"
  },
  {
    "text": "promd dash is really a dashboard Builder so that's for when you really want to persist a dashboard forever and for",
    "start": "2251480",
    "end": "2257240"
  },
  {
    "text": "other people to to see and to share and uh especially it's it's very useful",
    "start": "2257240",
    "end": "2262720"
  },
  {
    "text": "let's say I think in SoundCloud we have maybe roughly 50 Promethea servers um",
    "start": "2262720",
    "end": "2268200"
  },
  {
    "text": "and we have one Central prom dash installation which just knows about all these Prometheus servers and in there",
    "start": "2268200",
    "end": "2274960"
  },
  {
    "text": "you can then have dashboards or even single graphs where you show uh you show",
    "start": "2274960",
    "end": "2280480"
  },
  {
    "text": "time series or query expressions from multiple different servers in one graph",
    "start": "2280480",
    "end": "2286040"
  },
  {
    "text": "um so yeah it's more of this nice wall dashboard use case yeah so the alert",
    "start": "2286040",
    "end": "2292880"
  },
  {
    "text": "management would be part of the built-in UI that the configuration of your alerts and stuff would be what you use the",
    "start": "2292880",
    "end": "2298800"
  },
  {
    "text": "built-in UI for or yeah so for for alerting that's actually part of that",
    "start": "2298800",
    "end": "2305680"
  },
  {
    "text": "that's partially in the Prometheus server and partially in the alert manager okay um so in the Prometheus",
    "start": "2305680",
    "end": "2310920"
  },
  {
    "text": "server you can Define rules um basically rules that alerting rules that get",
    "start": "2310920",
    "end": "2317079"
  },
  {
    "text": "executed let's say every 30 seconds or one minute commonly uh depending on what you configure and what happens there is",
    "start": "2317079",
    "end": "2325839"
  },
  {
    "text": "that it really just executes a query expression and sees if there are any results from that expression we maybe",
    "start": "2325839",
    "end": "2333119"
  },
  {
    "text": "should go a bit into the how the query language Works um and if there are any results from that",
    "start": "2333119",
    "end": "2339680"
  },
  {
    "text": "expression they get transformed into labeled alerts and get transferred to the alert manager where they can then be",
    "start": "2339680",
    "end": "2346040"
  },
  {
    "text": "deduped silenced rooted and so on um and this is kind of interesting because this",
    "start": "2346040",
    "end": "2352040"
  },
  {
    "text": "whole labeled key value data model goes all the way from the instrumented",
    "start": "2352040",
    "end": "2357680"
  },
  {
    "text": "services to the storage to the querying and all the way to the alert manager um",
    "start": "2357680",
    "end": "2363640"
  },
  {
    "text": "so you really have that chain of of dimensional information to to work with",
    "start": "2363640",
    "end": "2368680"
  },
  {
    "text": "uh at every point in in in the chain yeah mean it sounds like everything builds off the query language and the",
    "start": "2368680",
    "end": "2374079"
  },
  {
    "text": "query language builds off of the data model exactly so maybe the data model is probably the next place to to dig in and",
    "start": "2374079",
    "end": "2380720"
  },
  {
    "text": "and tell us you know what it is how it all works and maybe if that's unique to",
    "start": "2380720",
    "end": "2386319"
  },
  {
    "text": "Prometheus or something you took from somewhere else just going into the details on how the actual data is",
    "start": "2386319",
    "end": "2391640"
  },
  {
    "text": "modeled sure um so Prometheus stores Time series and time series have a",
    "start": "2391640",
    "end": "2398520"
  },
  {
    "text": "metric name and they have a set of key value Dimensions which we just call",
    "start": "2398520",
    "end": "2404920"
  },
  {
    "text": "labels um so you might have something like a metric name HTTP requests total",
    "start": "2404920",
    "end": "2411400"
  },
  {
    "text": "which tracks the total number of HTTP requests that have been handled by a",
    "start": "2411400",
    "end": "2416560"
  },
  {
    "text": "certain service instance since it started and but then you might be interested in drilling down right you",
    "start": "2416560",
    "end": "2422040"
  },
  {
    "text": "would want to know which of these are get requests uh which which uh path handlers uh um have been hit and so on",
    "start": "2422040",
    "end": "2431240"
  },
  {
    "text": "and for that you can use the labeled Dimensions so uh for example you might have um method equals get on there and",
    "start": "2431240",
    "end": "2438800"
  },
  {
    "text": "you might have status equals 200 for the outcome and so on and um these",
    "start": "2438800",
    "end": "2446079"
  },
  {
    "text": "dimensions then get stored and they allow you to",
    "start": "2446079",
    "end": "2452760"
  },
  {
    "text": "quy Time series by these Dimensions so you could say you know you know sum over all the dimensions except the um status",
    "start": "2452760",
    "end": "2460319"
  },
  {
    "text": "code Dimension then you would get the total uh number of requests over all your service instances but uh keyed by",
    "start": "2460319",
    "end": "2469160"
  },
  {
    "text": "by the uh status code so that Dimension would be preserved or you could uh just select a specific Dimension or um you",
    "start": "2469160",
    "end": "2477000"
  },
  {
    "text": "can even do so let's say you have one metric and you have all these kind of",
    "start": "2477000",
    "end": "2482079"
  },
  {
    "text": "subdimensional instantiations of that metric you know one for method equals get one for method equals put and then",
    "start": "2482079",
    "end": "2488200"
  },
  {
    "text": "under these you have you know uh the the other labeled Dimensions um so for one",
    "start": "2488200",
    "end": "2493640"
  },
  {
    "text": "metric name you actually get a lot of Time series with all these different label sets and",
    "start": "2493640",
    "end": "2500520"
  },
  {
    "text": "um now if I just query for just the the metric name um I get all these time",
    "start": "2500520",
    "end": "2506760"
  },
  {
    "text": "series back if I don't filter if I don't Aggregate and so on right and uh that's actually that can be very useful so um",
    "start": "2506760",
    "end": "2514200"
  },
  {
    "text": "let's say on bazooka we have used case where we have one set of these time",
    "start": "2514200",
    "end": "2519560"
  },
  {
    "text": "series just describing for every instance running on bazooka um what is",
    "start": "2519560",
    "end": "2525599"
  },
  {
    "text": "the memory limit how much memory can it use before the cluster manager kills it",
    "start": "2525599",
    "end": "2530680"
  },
  {
    "text": "right and we have another metric called um basically the the current memory",
    "start": "2530680",
    "end": "2536079"
  },
  {
    "text": "usage and if we just have these two metric names we can actually in the Carey language just put a minus in",
    "start": "2536079",
    "end": "2542559"
  },
  {
    "text": "between them to subtract uh the current user from the limit to get kind of the headro",
    "start": "2542559",
    "end": "2549599"
  },
  {
    "text": "you know the the the memory that they can still use before they would get killed if we wanted to know like how",
    "start": "2549599",
    "end": "2555480"
  },
  {
    "text": "well do instances utilize their memory and what would actually happen if we just put a minus between these two",
    "start": "2555480",
    "end": "2561920"
  },
  {
    "text": "metric names um is that not only a single number uh that's not only a single",
    "start": "2561920",
    "end": "2567599"
  },
  {
    "text": "number on the left or a single number on the right but you have these whole uh let's say vectors of Time series on each",
    "start": "2567599",
    "end": "2574800"
  },
  {
    "text": "side of this binary operation and they get matched on identical label sets so uh the usage of one instance is",
    "start": "2574800",
    "end": "2584119"
  },
  {
    "text": "matched with the limit of another instance and so on and so on and in the end as the output of the expression you",
    "start": "2584119",
    "end": "2591359"
  },
  {
    "text": "get uh again the current Headroom per instance uh with all the dimensional",
    "start": "2591359",
    "end": "2597359"
  },
  {
    "text": "labels still preserved and you know you can do go more fancy than that you don't need to have an exact match there",
    "start": "2597359",
    "end": "2603720"
  },
  {
    "text": "there's like several language constructs that allow you to do one to n or n to to",
    "start": "2603720",
    "end": "2609520"
  },
  {
    "text": "one matches and so on and and specify how exactly to match things but this kind of vector-based uh matching Algebra",
    "start": "2609520",
    "end": "2616760"
  },
  {
    "text": "I think is um quite unique to Prometheus at least in the open source world yeah",
    "start": "2616760",
    "end": "2622480"
  },
  {
    "text": "so the you give it a name and then a series of labels and it sounds like the labels that's what you refer to as the",
    "start": "2622480",
    "end": "2629480"
  },
  {
    "text": "multi-dimensional uh aspect because each label you add adds a dimension to that particular time series mhm and and then",
    "start": "2629480",
    "end": "2636520"
  },
  {
    "text": "your guys's like built-in querying for that construct is really where it gets",
    "start": "2636520",
    "end": "2641760"
  },
  {
    "text": "sounds like the flexibility is coming from am I following you yep that's totally correct and maybe one word of",
    "start": "2641760",
    "end": "2647960"
  },
  {
    "text": "warning for the labels they're really meant to be uh kind of Dimensions but um",
    "start": "2647960",
    "end": "2655480"
  },
  {
    "text": "they're not meant to be of arbitrary cardinality so let's say if you wanted to store uh a user ID of a service with",
    "start": "2655480",
    "end": "2663040"
  },
  {
    "text": "millions of users you probably would not want to use um a label value for that",
    "start": "2663040",
    "end": "2668480"
  },
  {
    "text": "because you would suddenly get millions of Time series for this one metric um so you really have to be aware of that",
    "start": "2668480",
    "end": "2674839"
  },
  {
    "text": "every combination of labels on a metric creates one new time series",
    "start": "2674839",
    "end": "2680440"
  },
  {
    "text": "automatically um so if you and these time series are indexed and so on and and you know they need to be managed um",
    "start": "2680440",
    "end": "2687520"
  },
  {
    "text": "so if you really want to have that kind of uh highly arbitrarily uh High",
    "start": "2687520",
    "end": "2694200"
  },
  {
    "text": "cardinality dimensional insight like storing email addresses or storing user IDs and so on or the content of my SQL",
    "start": "2694200",
    "end": "2702119"
  },
  {
    "text": "queries um the actual crey string um then you you're probably better served",
    "start": "2702119",
    "end": "2708280"
  },
  {
    "text": "with something like you know a log based system you know influx CB or elastic",
    "start": "2708280",
    "end": "2713520"
  },
  {
    "text": "search uh and so on that really can store individual events individual things with arbitrary",
    "start": "2713520",
    "end": "2719839"
  },
  {
    "text": "metadata um yep so I can see where the labels might get a little bit where 's",
    "start": "2719839",
    "end": "2726680"
  },
  {
    "text": "better and worst practices with them whereas you know with a more just a key",
    "start": "2726680",
    "end": "2732119"
  },
  {
    "text": "value Nam spacing thing it's it's pretty easy to just come up with the next name you drill down one dimension but as you",
    "start": "2732119",
    "end": "2737720"
  },
  {
    "text": "add Dimensions I can see where it get difficult and you're in fact warning against things not to do is there a",
    "start": "2737720",
    "end": "2743280"
  },
  {
    "text": "place to go where it's like hey what how how would I do this in a typical situation because I think across many",
    "start": "2743280",
    "end": "2749480"
  },
  {
    "text": "organizations the type of metrics are similar do you guys have best practices or things you've learned at SoundCloud",
    "start": "2749480",
    "end": "2755000"
  },
  {
    "text": "best ways to use Prometheus labels oh yeah definitely um so we actually have a whole section on best practices uh at",
    "start": "2755000",
    "end": "2762040"
  },
  {
    "text": "the very bottom of our website about metric and label naming and how to build good consoles dashboards and alerting",
    "start": "2762040",
    "end": "2768640"
  },
  {
    "text": "and so on um I think yeah one one thing that really just happen sometimes at SoundCloud is that people mistakenly uh",
    "start": "2768640",
    "end": "2775640"
  },
  {
    "text": "either by not yet knowing the Prometheus data model well enough or just by making simple simple mistake in the code um",
    "start": "2775640",
    "end": "2782920"
  },
  {
    "text": "have set some of these label Dimensions let's say to a track ID or a user ID and",
    "start": "2782920",
    "end": "2788079"
  },
  {
    "text": "that then creates you know millions and millions of Time series um I mean Prometheus a single prometh server can",
    "start": "2788079",
    "end": "2794760"
  },
  {
    "text": "handle millions of Time series but you know if if you just overdo it a bit and",
    "start": "2794760",
    "end": "2799960"
  },
  {
    "text": "you're not careful about what you stick into label values then you're you can really easily blow up a prometh server",
    "start": "2799960",
    "end": "2807079"
  },
  {
    "text": "and um yeah so so keep keep keep those labeled Dimensions to Sayan bounded",
    "start": "2807079",
    "end": "2812720"
  },
  {
    "text": "thing so you know you always have Prometheus autom automatically attaches some of them anyways so you get the name",
    "start": "2812720",
    "end": "2819079"
  },
  {
    "text": "of the job which is kind of the name of the service it's just terminology I guess um the name of the service which",
    "start": "2819079",
    "end": "2825200"
  },
  {
    "text": "we call Job um the host and Port of the instance by default and um that already",
    "start": "2825200",
    "end": "2833079"
  },
  {
    "text": "gives you some dimensionality even if you don't have any labels on the on on on the side of your service right so you",
    "start": "2833079",
    "end": "2839559"
  },
  {
    "text": "at least get if you have 100 instances you get 100 time series for this one",
    "start": "2839559",
    "end": "2844640"
  },
  {
    "text": "metric which could be the number of HTTP requests and then you have to multiply that by all the other dimensions that",
    "start": "2844640",
    "end": "2851280"
  },
  {
    "text": "you add um and that can easily end up for a single metric you can easily get you know thousands or even 10 thousands",
    "start": "2851280",
    "end": "2857680"
  },
  {
    "text": "of of Time series well certainly lots of moving Parts when we talk about Prometheus so",
    "start": "2857680",
    "end": "2864480"
  },
  {
    "text": "um I'm I'm going to assume that based on this conversation so many people are like I want to try it out I want to get",
    "start": "2864480",
    "end": "2871599"
  },
  {
    "text": "started so we're going to take a quick break and when we come back we're going to talk about just that be right",
    "start": "2871599",
    "end": "2878280"
  },
  {
    "text": "back I have yet to meet a single person who doesn't love digital ocean if you've",
    "start": "2878280",
    "end": "2883359"
  },
  {
    "text": "tried digital ocean you know how awesome it is and here at the change log everything we have runs on blazing fast",
    "start": "2883359",
    "end": "2890839"
  },
  {
    "text": "SSD Cloud servers from digital ocean and I want you to use the code change log when you sign up today to get a free",
    "start": "2890839",
    "end": "2898040"
  },
  {
    "text": "month run a server with 1 gig of RAM and 30 gigs of SSD drive space totally for",
    "start": "2898040",
    "end": "2903319"
  },
  {
    "text": "free on digital ocean use the code code Chang log again that code is Chang log",
    "start": "2903319",
    "end": "2909559"
  },
  {
    "text": "use that when you sign up for a new account head to digital ocean.com to sign up and tell them the change log",
    "start": "2909559",
    "end": "2914960"
  },
  {
    "text": "sent you all right we're back with uh Julius VES talking about Prometheus uh and",
    "start": "2914960",
    "end": "2923400"
  },
  {
    "text": "while we were on that break we realized that getting started is a good step to to go towards next but we forgot we want to kind of go back a little bit on this",
    "start": "2923400",
    "end": "2930200"
  },
  {
    "text": "religious piece of push versus pull when it comes to Prometheus so jul why don't you lead us through that that piece",
    "start": "2930200",
    "end": "2935400"
  },
  {
    "text": "there sure um so this is funny because it's a bit of a religious thing and uh push can",
    "start": "2935400",
    "end": "2942440"
  },
  {
    "text": "be you know pull can be sometimes better sometimes it pushes better depending on the type of environment you're using the",
    "start": "2942440",
    "end": "2948880"
  },
  {
    "text": "Prometheus in um but one of our team members even wrote a blog post about",
    "start": "2948880",
    "end": "2954400"
  },
  {
    "text": "push versus pull for monitoring um he's he's Brian from from Dublin and you can",
    "start": "2954400",
    "end": "2959680"
  },
  {
    "text": "find that in our FAQ actually um uh but I think some points are interesting so",
    "start": "2959680",
    "end": "2965079"
  },
  {
    "text": "if you so I I think first let's start with one advantage of push push is really easy to",
    "start": "2965079",
    "end": "2970480"
  },
  {
    "text": "get through firewalls if your monitoring system is easily reachable from everywhere you know you only need to",
    "start": "2970480",
    "end": "2976839"
  },
  {
    "text": "make one point one network Point available on the Internet or in your",
    "start": "2976839",
    "end": "2982240"
  },
  {
    "text": "local in your company's Network or whatever um and then everyone just needs to be able to push somehow to that um",
    "start": "2982240",
    "end": "2989960"
  },
  {
    "text": "with PLL sometimes people run into the into the problem that let's say you know if they have",
    "start": "2989960",
    "end": "2996520"
  },
  {
    "text": "setups where they need to pull from various endpoints on the internet and",
    "start": "2996520",
    "end": "3001880"
  },
  {
    "text": "they should be secured and so on you know they have to have a bit more they need to now secure and make available n",
    "start": "3001880",
    "end": "3008400"
  },
  {
    "text": "end points instead of one um so that's that's often what what",
    "start": "3008400",
    "end": "3013520"
  },
  {
    "text": "uh what pains people when when they can't use pull um but but for us especially in these kind of um modern",
    "start": "3013520",
    "end": "3021240"
  },
  {
    "text": "web company environments where you have your own data centers or your own virtual private clouds and you have",
    "start": "3021240",
    "end": "3027040"
  },
  {
    "text": "internally trusted environments where you can just pull from every Target um pull really has a number of advantages",
    "start": "3027040",
    "end": "3034079"
  },
  {
    "text": "so one thing that's really really nice is that you can just manually go per",
    "start": "3034079",
    "end": "3040480"
  },
  {
    "text": "HTTP to a Target and get uh the current state of the target so by default if you",
    "start": "3040480",
    "end": "3046960"
  },
  {
    "text": "go to uh an end a Prometheus endpoint on a service um you will get a text based",
    "start": "3046960",
    "end": "3053319"
  },
  {
    "text": "format that will tell you the current state of all the metric and you don't even need a server",
    "start": "3053319",
    "end": "3058440"
  },
  {
    "text": "for that so that's one nice thing um you can run a complete copy of production",
    "start": "3058440",
    "end": "3063960"
  },
  {
    "text": "monitoring on your laptop or anywhere you can just bring up a second copy of",
    "start": "3063960",
    "end": "3069280"
  },
  {
    "text": "all of it to to do experiments to try out new alerting rules and so on and that copy will get the exact same data",
    "start": "3069280",
    "end": "3076559"
  },
  {
    "text": "as your production version of monitoring uh without you having to configure the",
    "start": "3076559",
    "end": "3081720"
  },
  {
    "text": "actual services to send data somewhere else and um we kind of argue that if you're doing",
    "start": "3081720",
    "end": "3088680"
  },
  {
    "text": "service monitoring and alerting you kind of need to know your monitoring system kind of needs to know anyways where your",
    "start": "3088680",
    "end": "3096480"
  },
  {
    "text": "services live uh and which Services should currently be there because otherwise it can't really alert you",
    "start": "3096480",
    "end": "3103520"
  },
  {
    "text": "about a Target being down or or so on because it doesn't know if it should be gone if it was deprovisioned or you know",
    "start": "3103520",
    "end": "3110880"
  },
  {
    "text": "if it is just crash looping for example so with that kind of argument uh the",
    "start": "3110880",
    "end": "3116640"
  },
  {
    "text": "monitoring system should be knowing what your targets are anyways so the knowledge is already there so that also",
    "start": "3116640",
    "end": "3122440"
  },
  {
    "text": "makes it easier to pull the data and makes it easier to tell in monitoring",
    "start": "3122440",
    "end": "3127720"
  },
  {
    "text": "and alerting whether a Target is currently down and um yeah so we we we we don't",
    "start": "3127720",
    "end": "3135160"
  },
  {
    "text": "think otherwise that it's like a huge issue whether you do push or pull uh especially in terms of scalability it",
    "start": "3135160",
    "end": "3141640"
  },
  {
    "text": "doesn't really matter that much um but yeah kind of depends on on on your",
    "start": "3141640",
    "end": "3147359"
  },
  {
    "text": "environment I think there would be some scalability aspects of polling as more you had more services more hosts um I",
    "start": "3147359",
    "end": "3155079"
  },
  {
    "text": "guess you know you had your stats D servers dropping UDP packets it seems like cap catching a UDP packets a lot",
    "start": "3155079",
    "end": "3161480"
  },
  {
    "text": "easier than going out and requesting data um have you found in practice that that's just not a big issue yeah so uh",
    "start": "3161480",
    "end": "3168799"
  },
  {
    "text": "that's actually interesting point so that's that's really not an issue at all so the actual pulling side of things has",
    "start": "3168799",
    "end": "3174880"
  },
  {
    "text": "never been a bottleneck for us but it's also very important to point out here that the whole fundamental way of how",
    "start": "3174880",
    "end": "3181839"
  },
  {
    "text": "data is transferred is quite different in the statsd model to the Prometheus model uh as I said earlier in the statsd",
    "start": "3181839",
    "end": "3189160"
  },
  {
    "text": "model you send UDP packets basically proportionally to the amount of user",
    "start": "3189160",
    "end": "3194400"
  },
  {
    "text": "traffic you get right like for every HTTP request or every 10th or so on you send a UDP packet please count this",
    "start": "3194400",
    "end": "3200559"
  },
  {
    "text": "please count this please count this why don't you just increment a number in",
    "start": "3200559",
    "end": "3206280"
  },
  {
    "text": "memory on the on on your web server and then every 15 seconds or so uh you know",
    "start": "3206280",
    "end": "3212520"
  },
  {
    "text": "transfer the current counter state so that's prometheus's philosophy um the",
    "start": "3212520",
    "end": "3217799"
  },
  {
    "text": "nice thing is there it uses way less traffic like orders of magnitude less",
    "start": "3217799",
    "end": "3223079"
  },
  {
    "text": "traffic it uses less computation in the client especially if you have uh services that you know do many thousands",
    "start": "3223079",
    "end": "3230760"
  },
  {
    "text": "or even more requests per seconds you might have some uh multicore High perform performance rep rter which can",
    "start": "3230760",
    "end": "3236880"
  },
  {
    "text": "do hundreds of thousands or or more uh requests and um there you know sending a",
    "start": "3236880",
    "end": "3243960"
  },
  {
    "text": "UDP packet for every request would actually be quite prohibitive and the other thing is that if these counter UDP",
    "start": "3243960",
    "end": "3250079"
  },
  {
    "text": "packets in the staty world get lost you just get a lower total request rate",
    "start": "3250079",
    "end": "3256079"
  },
  {
    "text": "displayed in your monitoring system and you have no clue that these packets were actually lost um with the Prometheus",
    "start": "3256079",
    "end": "3262200"
  },
  {
    "text": "model if a scrape fails one time it doesn't really matter so much because",
    "start": "3262200",
    "end": "3267280"
  },
  {
    "text": "let's say the next scrape works you will still not lose any of these counter increments that have happened because",
    "start": "3267280",
    "end": "3273680"
  },
  {
    "text": "they're tracked on the on the service side right in every instance uh these",
    "start": "3273680",
    "end": "3279000"
  },
  {
    "text": "counters are just continuously incrementing from from the start of the instance and every time I come come by I",
    "start": "3279000",
    "end": "3285799"
  },
  {
    "text": "just see what's the current state and um that's also a very good argument for not",
    "start": "3285799",
    "end": "3291559"
  },
  {
    "text": "doing any kind of rate pre-computation on the server side but doing that on on",
    "start": "3291559",
    "end": "3297200"
  },
  {
    "text": "the Promethea server side so in your service really just count things up don't expose rates because let's say if",
    "start": "3297200",
    "end": "3303400"
  },
  {
    "text": "you do expose rates um you know there just kind of a derivative of a counter",
    "start": "3303400",
    "end": "3309720"
  },
  {
    "text": "um then you might really if you miss a if you miss a scrape then you might really miss a peak in a rate and if you",
    "start": "3309720",
    "end": "3318240"
  },
  {
    "text": "miss a scrape with a counter you just get a bit less a bit worse time",
    "start": "3318240",
    "end": "3323480"
  },
  {
    "text": "resolution over that data but you would never miss any increments of that counter in after a while makes sense mhm",
    "start": "3323480",
    "end": "3329720"
  },
  {
    "text": "that's certain makes sense that on the theory of why you go which path because on one side you can lose data on the",
    "start": "3329720",
    "end": "3335520"
  },
  {
    "text": "other side you're just kind of missing some time exactly yeah and I was actually interesting um the way I fixed",
    "start": "3335520",
    "end": "3342880"
  },
  {
    "text": "this whole statsd dilemma um before we had Prometheus in SoundCloud was actually quite similar to what",
    "start": "3342880",
    "end": "3348400"
  },
  {
    "text": "Prometheus is doing now so I actually put um a local staty on every host where",
    "start": "3348400",
    "end": "3355359"
  },
  {
    "text": "Services were running and services were just sending local UDP packets to those statsd and then these local statsd would",
    "start": "3355359",
    "end": "3362480"
  },
  {
    "text": "preaggregate those counters over you know half a second or so and then send",
    "start": "3362480",
    "end": "3367680"
  },
  {
    "text": "that resulting counter to the global statsd so that's kind of similar you're already kind of moving moving the",
    "start": "3367680",
    "end": "3374280"
  },
  {
    "text": "aggregation to the individual hosts but you're not having it in the same process and Prometheus is even moving that into",
    "start": "3374280",
    "end": "3380319"
  },
  {
    "text": "your process into your memory space and uh yeah you don't need to create an Network package just just just to",
    "start": "3380319",
    "end": "3386599"
  },
  {
    "text": "counter request or something else um I don't know if that's interesting um there are other types of metrics that",
    "start": "3386599",
    "end": "3393400"
  },
  {
    "text": "Prometheus supports besides counters so we have gauges um maybe I should go into",
    "start": "3393400",
    "end": "3398520"
  },
  {
    "text": "what these are um depending on on where you want to go now I think um it would",
    "start": "3398520",
    "end": "3404960"
  },
  {
    "text": "be awesome to go that much deeper but I think we're getting close to our time so what i' like to do is um is Cap there",
    "start": "3404960",
    "end": "3411799"
  },
  {
    "text": "maybe you will write an awesome blog post will deeper into that or something like that or maybe we can have you back on some point um but I think at this",
    "start": "3411799",
    "end": "3419720"
  },
  {
    "text": "point let's let's dive into getting started so for those that are going to Prometheus and thinking like man this is",
    "start": "3419720",
    "end": "3425839"
  },
  {
    "text": "really awesome I want to check this out um if you go into the documentation area",
    "start": "3425839",
    "end": "3431000"
  },
  {
    "text": "there's a getting started I think that's actually what the button on the homepage takes you to is that right the the",
    "start": "3431000",
    "end": "3436319"
  },
  {
    "text": "getting started button yes takes you right there so if you go to prometheus. and you click the button at the on the",
    "start": "3436319",
    "end": "3442799"
  },
  {
    "text": "homepage which says get started Ed you actually get started which is kind of nice but you get this really awesome",
    "start": "3442799",
    "end": "3448880"
  },
  {
    "text": "guide a hell World St guide that sort of takes you through from zero to to running a Prometheus server so what is",
    "start": "3448880",
    "end": "3455680"
  },
  {
    "text": "it like to get started I guess maybe moving away from other monitoring Services can you walk through some of the pains potentially or the the process",
    "start": "3455680",
    "end": "3463160"
  },
  {
    "text": "to get started with with Prometheus sure um I think one of the most consistent",
    "start": "3463160",
    "end": "3468480"
  },
  {
    "text": "feedbacks we have gotten about Prometheus is how easy it is to get started so that's actually quite nice um",
    "start": "3468480",
    "end": "3475359"
  },
  {
    "text": "the the reason is that Prometheus is written mostly in go I mean the server is written completely in go the there",
    "start": "3475359",
    "end": "3481680"
  },
  {
    "text": "are client libraries for different languages and so on um but especially the server being written in go uh and go",
    "start": "3481680",
    "end": "3489280"
  },
  {
    "text": "producing you know statically compiled binaries that you can just Deploy on a machine without having to think about",
    "start": "3489280",
    "end": "3495400"
  },
  {
    "text": "you know run times or shared libraries and so on that makes it very easy to get",
    "start": "3495400",
    "end": "3501240"
  },
  {
    "text": "started and deploy uh we have uh pre-built B that you can download for the major architectures um it's also",
    "start": "3501240",
    "end": "3508880"
  },
  {
    "text": "very easy with our make file to uh download all dependencies in a",
    "start": "3508880",
    "end": "3514119"
  },
  {
    "text": "hermetically contained um environment to to just start building go from head",
    "start": "3514119",
    "end": "3520319"
  },
  {
    "text": "yourself or from some release version if you want to um you need to create a configuration file there's one in the",
    "start": "3520319",
    "end": "3526920"
  },
  {
    "text": "getting started guide here of course um that's just one file you point to it and",
    "start": "3526920",
    "end": "3532240"
  },
  {
    "text": "then by default Prometheus will just store all your data in a local directory and um yeah and it will just start",
    "start": "3532240",
    "end": "3539640"
  },
  {
    "text": "scraping data so you can I mean it takes roughly if if you're fast it takes maybe five minutes to get",
    "start": "3539640",
    "end": "3545680"
  },
  {
    "text": "started and then you have a running Prometheus server um of course for that to be interesting uh you need some",
    "start": "3545680",
    "end": "3553079"
  },
  {
    "text": "example services that that you that you can scrape and so on and there of course it depends a bit on on what you want to",
    "start": "3553079",
    "end": "3560119"
  },
  {
    "text": "instrument um prom Dash um is the one",
    "start": "3560119",
    "end": "3565599"
  },
  {
    "text": "exception in the whole ecosystem which is not written in go it's actually it's actually rails application um but it's",
    "start": "3565599",
    "end": "3573559"
  },
  {
    "text": "really more of a light backend I mean the whole rails backend really only stores uh the dashboards as Json blobs",
    "start": "3573559",
    "end": "3580359"
  },
  {
    "text": "and could theoretically pretty easily be replaced by something else uh all the logic is in the JavaScript front end and",
    "start": "3580359",
    "end": "3588039"
  },
  {
    "text": "um yeah but but we have Docker containers for everything as well like for all the components so if you really",
    "start": "3588039",
    "end": "3593359"
  },
  {
    "text": "feel like oh I really don't want want to set up rails you know just use the the use the um prom Das Docker container and",
    "start": "3593359",
    "end": "3600240"
  },
  {
    "text": "hopefully that will be less painful um and let's",
    "start": "3600240",
    "end": "3606480"
  },
  {
    "text": "see yeah but I mean that's basically as easy as is you need you need to download the latest binary unpack it drop in a",
    "start": "3606480",
    "end": "3614559"
  },
  {
    "text": "config file and just start it and it's running and is by default one of the",
    "start": "3614559",
    "end": "3620240"
  },
  {
    "text": "default configuration files here is set up in such a way that Prometheus collects data on its own metrix",
    "start": "3620240",
    "end": "3627559"
  },
  {
    "text": "Exposition endpoint so Prometheus instruments itself via one of the",
    "start": "3627559",
    "end": "3633039"
  },
  {
    "text": "Prometheus client libraries so you it can monitor itself basically so that's a nice uh use case to get started if you",
    "start": "3633039",
    "end": "3639720"
  },
  {
    "text": "just want to look at some very simple Prometheus metrics without having any Services uh another thing that's really",
    "start": "3639720",
    "end": "3646480"
  },
  {
    "text": "nice to get started with is because everyone has this is the node exporter which basically by the way has nothing",
    "start": "3646480",
    "end": "3653440"
  },
  {
    "text": "to do with node JM s uh but a host so we um so the node exporter is a host",
    "start": "3653440",
    "end": "3660160"
  },
  {
    "text": "exporter it export it exports host metrics um and that's a really nice",
    "start": "3660160",
    "end": "3665720"
  },
  {
    "text": "thing to get started with um you just started you don't I mean you can set a lot of command line Flags but if you",
    "start": "3665720",
    "end": "3671039"
  },
  {
    "text": "don't specify anything by default it will do the right thing and you configure Prometheus to scrape that uh",
    "start": "3671039",
    "end": "3677839"
  },
  {
    "text": "either statically or via some kind of service Discovery and um yeah and then",
    "start": "3677839",
    "end": "3683559"
  },
  {
    "text": "you get host about about either your local machine or or your data center machines and so on",
    "start": "3683559",
    "end": "3689799"
  },
  {
    "text": "that's pretty easy too while we're talking about getting started I got to imagine that people are saying okay when I get started I also want to have a",
    "start": "3689799",
    "end": "3695599"
  },
  {
    "text": "community to sort of hang around so you've got a Twitter handle of course you got a mail mailing list and you got",
    "start": "3695599",
    "end": "3701559"
  },
  {
    "text": "IRC uh so those those are three ways that people can hang out and sort of catch up I was on the mailing list",
    "start": "3701559",
    "end": "3706720"
  },
  {
    "text": "recently and just see that it's pretty Lively and active so um when you're getting started if you have any",
    "start": "3706720",
    "end": "3712640"
  },
  {
    "text": "questions then there's this Milling list to look at as well which will link up in the show notes of course mhm and",
    "start": "3712640",
    "end": "3719119"
  },
  {
    "text": "definitely stop by the IRC channel so we're there basically every day very active a lot of people are coming there",
    "start": "3719119",
    "end": "3725400"
  },
  {
    "text": "asking questions and we're always super happy to answer um and yeah so that's",
    "start": "3725400",
    "end": "3730599"
  },
  {
    "text": "that's kind of the the fastest channel to reach us and the mailing list is good for uh longer questions and more",
    "start": "3730599",
    "end": "3737359"
  },
  {
    "text": "persistent communication so it's Prometheus on free node and then uh Prometheus developers",
    "start": "3737359",
    "end": "3745240"
  },
  {
    "text": "as a Google Group which we'll link out to you so you have to worry about trying to trying to say that you or all this",
    "start": "3745240",
    "end": "3750559"
  },
  {
    "text": "that's not readable it's not that's not that's not pretty which you out cool uh well the Google group it's not quite as",
    "start": "3750559",
    "end": "3758200"
  },
  {
    "text": "easy to yeah you don't want to read that out in the podcast no no that's that's boring we Chang blog.com 168 you'll get",
    "start": "3758200",
    "end": "3765760"
  },
  {
    "text": "all the links we even found that blog post of push versus Paul that he",
    "start": "3765760",
    "end": "3771160"
  },
  {
    "text": "referenced so we'll have that in there as well yeah yep or just head over to prometheus. click on the community Tab",
    "start": "3771160",
    "end": "3777440"
  },
  {
    "text": "and you have all the channels there that's true and yeah we're very very happy about any contributors and uh I",
    "start": "3777440",
    "end": "3783920"
  },
  {
    "text": "think um who we could especially use because we're all backend people is someone who really likes doing front-end",
    "start": "3783920",
    "end": "3790559"
  },
  {
    "text": "stuff um that's traditionally what's always lacking in these kind of infrastructure projects that's a good",
    "start": "3790559",
    "end": "3796480"
  },
  {
    "text": "segue there Jared to the CAU arms then that's right sounds like one Julius if you were going to uh request help or",
    "start": "3796480",
    "end": "3803599"
  },
  {
    "text": "give a call to arm of the open source Community uh would you say frontend",
    "start": "3803599",
    "end": "3808680"
  },
  {
    "text": "developers is what we're after what would you say to the open source Community how we can help you out yeah in general it would be great to have",
    "start": "3808680",
    "end": "3814599"
  },
  {
    "text": "more frontend interested people in the in the infrastructure world right and uh that goes for Prometheus as well um uh",
    "start": "3814599",
    "end": "3822920"
  },
  {
    "text": "we've been coding a lot of the you know prom Dash is very front Endy and and the graphing interface in Prometheus",
    "start": "3822920",
    "end": "3829960"
  },
  {
    "text": "itself but um it would be really great to to get people people who feel like really strongly about infrastructure and",
    "start": "3829960",
    "end": "3837839"
  },
  {
    "text": "nice front ends and help us you know refactor a lot of things there improve",
    "start": "3837839",
    "end": "3843440"
  },
  {
    "text": "the UI make it shiny um that's definitely always very nice thing to",
    "start": "3843440",
    "end": "3848720"
  },
  {
    "text": "have but you know any other kinds of contributions are great too I think two of the areas that are",
    "start": "3848720",
    "end": "3854359"
  },
  {
    "text": "currently um still lacking and that will get the most kind of the most attention in the future uh are the alert manager",
    "start": "3854359",
    "end": "3862319"
  },
  {
    "text": "which we are currently redesigning and uh reimplementing over the next months",
    "start": "3862319",
    "end": "3868640"
  },
  {
    "text": "to be more production ready and more powerful uh but also any some kind of long-term storage integration so we have",
    "start": "3868640",
    "end": "3875119"
  },
  {
    "text": "these ways of writing out data to currently open tsdb or influx DB but it",
    "start": "3875119",
    "end": "3880760"
  },
  {
    "text": "would be really great to have a full readback implementation where you can query the long-term storage through the",
    "start": "3880760",
    "end": "3887520"
  },
  {
    "text": "Promethea server again and you know if either someone wants to implement that for an existing backend system or wants",
    "start": "3887520",
    "end": "3894839"
  },
  {
    "text": "to even maybe create uh a completely new Prometheus specific long-term storage",
    "start": "3894839",
    "end": "3900039"
  },
  {
    "text": "that would be interesting as well um but there's a lot of stuff to do maybe head to the different issue trackers on the",
    "start": "3900039",
    "end": "3906839"
  },
  {
    "text": "various Prometheus um GitHub projects which are all under github.com",
    "start": "3906839",
    "end": "3912359"
  },
  {
    "text": "Prometheus and check out if there's anything that that looks interesting to you so there you have it sounds like",
    "start": "3912359",
    "end": "3918319"
  },
  {
    "text": "lots of different ways to get involved and while we're asking our closing questions Julius we would be remiss not",
    "start": "3918319",
    "end": "3924279"
  },
  {
    "text": "to ask the one everybody loves which is who is your programming hero I hoped you would not ask that one",
    "start": "3924279",
    "end": "3931200"
  },
  {
    "text": "okay no uh definitely Bjorn there you go",
    "start": "3931200",
    "end": "3937039"
  },
  {
    "text": "Bjorn Bjorn is Bjorn is my part one of my partners in crime on on Prometheus we're quite a bunch now actually um also",
    "start": "3937039",
    "end": "3944720"
  },
  {
    "text": "actually this is funny because um we also hired an intern right now who who we are going to transform to be a",
    "start": "3944720",
    "end": "3951359"
  },
  {
    "text": "full-timer at SoundCloud and we found him through Prometheus contributions and he's very young like 23 and he out he",
    "start": "3951359",
    "end": "3959440"
  },
  {
    "text": "outcodes me every day you he's very very very smart and I actually every day",
    "start": "3959440",
    "end": "3964880"
  },
  {
    "text": "astounded by the what's his name uh Fabian and uh yeah every day astounded",
    "start": "3964880",
    "end": "3971200"
  },
  {
    "text": "by the quality and the quantity of his of his uh coding but also of of his uh",
    "start": "3971200",
    "end": "3977119"
  },
  {
    "text": "communication in the community a really really great person um I guess more in",
    "start": "3977119",
    "end": "3983400"
  },
  {
    "text": "in terms of traditional programming Heroes I guess when I was a child I really was like had a bit of a coding",
    "start": "3983400",
    "end": "3990720"
  },
  {
    "text": "crush on John KAC um you know with the with the early",
    "start": "3990720",
    "end": "3996000"
  },
  {
    "text": "it games in the '90s doom and so on um definitely in the go Community uh Rob",
    "start": "3996000",
    "end": "4003480"
  },
  {
    "text": "Pike and you probably have heard or even met on at gophercon about Dimitri viov",
    "start": "4003480",
    "end": "4010240"
  },
  {
    "text": "from uh he he's from Google he's not really on the go team but uh he's on the",
    "start": "4010240",
    "end": "4015319"
  },
  {
    "text": "dynamic tools team of Google and but he has contributed so many awesome awesome",
    "start": "4015319",
    "end": "4020799"
  },
  {
    "text": "features to the go runtime and and tooling around that the race detector um",
    "start": "4020799",
    "end": "4026960"
  },
  {
    "text": "the new tracing framework this fuzzing framework that also just now found actually a bug in prometheus's cre",
    "start": "4026960",
    "end": "4032920"
  },
  {
    "text": "language really great um had a lot of these really hardcore tools for uh",
    "start": "4032920",
    "end": "4039160"
  },
  {
    "text": "getting you know dynamic information about about your code um and he found",
    "start": "4039160",
    "end": "4045000"
  },
  {
    "text": "hundreds of bugs with that so I was really impressed when when when I heard about that and he also gave gave a",
    "start": "4045000",
    "end": "4050319"
  },
  {
    "text": "really great talk about that uh at at goer con that I can highly recommend yeah that was another one I",
    "start": "4050319",
    "end": "4056839"
  },
  {
    "text": "didn't mention on top of the show Ben Johnson and his open source databased stuff and then Dimitri and specifically",
    "start": "4056839",
    "end": "4062760"
  },
  {
    "text": "his talk on r on uh like you just said was one that everybody was kind of raving about as they came out of the",
    "start": "4062760",
    "end": "4068680"
  },
  {
    "text": "conference room so you're not the only one who's thinks he's pretty awesome",
    "start": "4068680",
    "end": "4074440"
  },
  {
    "text": "yep all right Julius well it was great having you on the show definitely um",
    "start": "4074440",
    "end": "4079920"
  },
  {
    "text": "something we've been wanting to get you on the show before to talk about Prometheus and everything it's doing and what you all are doing at SoundCloud so",
    "start": "4079920",
    "end": "4086400"
  },
  {
    "text": "definitely fun having you on the show today um want to thank our awesome sponsors for the show coip top to and",
    "start": "4086400",
    "end": "4093559"
  },
  {
    "text": "digital ocean making this show possible also want to thank our awesome listeners and remind everyone that's uh not a",
    "start": "4093559",
    "end": "4100159"
  },
  {
    "text": "member yet that we are member supported you can join the community and get access to the members slack Channel as",
    "start": "4100159",
    "end": "4105318"
  },
  {
    "text": "well as many other awesome benefits of supporting the Chang law go to Chang law.com",
    "start": "4105319",
    "end": "4110600"
  },
  {
    "text": "membership and while you're there you might as well sign up for change allw weekly and change allw nightly which is our weekly and nightly emails both",
    "start": "4110600",
    "end": "4117120"
  },
  {
    "text": "respectively at/ weekly and slightly uh J what's the next week's show we we do have one show scheduled",
    "start": "4117120",
    "end": "4124080"
  },
  {
    "text": "what is that next week's show I put me on the spot man uh I think",
    "start": "4124080",
    "end": "4129520"
  },
  {
    "text": "it might be Ben Johnson we got a couple databases I know",
    "start": "4129520",
    "end": "4135359"
  },
  {
    "text": "he's coming up seconds he's on August he records on",
    "start": "4135359",
    "end": "4140640"
  },
  {
    "text": "August 14th so we'll have a show between him and now but we don't know who it is we don't know who it is okay we're going",
    "start": "4140640",
    "end": "4146520"
  },
  {
    "text": "to try and tease out what the next show is but nonetheless we have lots of awesome shows coming up soon but until",
    "start": "4146520",
    "end": "4152640"
  },
  {
    "text": "then let's say goodbye see you see you thank",
    "start": "4152640",
    "end": "4159000"
  },
  {
    "text": "you",
    "start": "4162719",
    "end": "4165719"
  },
  {
    "text": "[Music]",
    "start": "4172819",
    "end": "4190789"
  },
  {
    "text": "aah",
    "start": "4192719",
    "end": "4195719"
  }
]