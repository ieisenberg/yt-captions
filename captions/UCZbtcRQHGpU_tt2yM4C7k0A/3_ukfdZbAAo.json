[
  {
    "text": "bandwith for change log is provided by fastly learn more at fastly.com we move",
    "start": "40",
    "end": "5560"
  },
  {
    "text": "fast and fix things here at change log because of robbar check them out at rar.com and we're hosted on Leno Cloud",
    "start": "5560",
    "end": "11840"
  },
  {
    "text": "servers at the lin.com changelog this episode is brought to you",
    "start": "11840",
    "end": "17320"
  },
  {
    "text": "by robbar robbar is realtime error monitoring alerting and analytics that",
    "start": "17320",
    "end": "22680"
  },
  {
    "text": "helps you resolve production errors of minutes and IAL with Paul bigger the founder of Circle C a trusted customer",
    "start": "22680",
    "end": "28160"
  },
  {
    "text": "rbar and Paul says they don't deploy a service without installing rollar first",
    "start": "28160",
    "end": "33320"
  },
  {
    "text": "it's that crucial to them we operate at serious scale and literally the first",
    "start": "33320",
    "end": "38760"
  },
  {
    "text": "thing we do when we create a new service is is we install rollar in it like we we need to have that visibility uh and",
    "start": "38760",
    "end": "46280"
  },
  {
    "text": "without that visibility it would be impossible to run at the scale we do and certainly with the number of people that",
    "start": "46280",
    "end": "52120"
  },
  {
    "text": "we have like we're relatively small team operating a major service and without",
    "start": "52120",
    "end": "57199"
  },
  {
    "text": "the visibility that robot gives us into our exceptions it just it just wouldn't be possible all right if you want to",
    "start": "57199",
    "end": "62239"
  },
  {
    "text": "follow Paul's footsteps and start deploying with confidence today head to rar.com changelog once again rar.com",
    "start": "62239",
    "end": "71280"
  },
  {
    "text": "changelog what is really Hood with you you know who it is Mix A Lot JS party is",
    "start": "77000",
    "end": "83280"
  },
  {
    "text": "the greatest JavaScript podcast on planet Earth there ain't no party like a",
    "start": "83280",
    "end": "89159"
  },
  {
    "text": "JS party party and a JS party don't stop cuz when you hear them epic beats y'all better take your seat JS party is in the",
    "start": "89159",
    "end": "97790"
  },
  {
    "text": "[Applause] building hello and welcome to another",
    "start": "97790",
    "end": "103479"
  },
  {
    "text": "adventure with JS party I'm Nick ni and I am so happy to be here today Hoy Hoy",
    "start": "103479",
    "end": "110680"
  },
  {
    "text": "and I want to introduce my fantastic panel with me today uh first we'll start with Divia Divia welcome hello happy to",
    "start": "110680",
    "end": "117759"
  },
  {
    "text": "be here then we have kall hey hey to go with your Hoy",
    "start": "117759",
    "end": "124200"
  },
  {
    "text": "Hoy and Michael welcome hey we should create distinctive like sounds for each",
    "start": "124200",
    "end": "131280"
  },
  {
    "text": "of us was that part of the agreement that I missed like we all had to have distinct sounds oh you didn't get your",
    "start": "131280",
    "end": "136400"
  },
  {
    "text": "code name and and your your distinctive yell oh some somebody messed up onboarding",
    "start": "136400",
    "end": "142360"
  },
  {
    "text": "you I know clearly do you want to make up one right now it's fine I'll think about it I",
    "start": "142360",
    "end": "150080"
  },
  {
    "text": "think about it all right well today we are talking about all things es modules and where that is what's going on with",
    "start": "150080",
    "end": "156760"
  },
  {
    "text": "that there's been some recent news and we've got our resident expert Michael Rogers here to walk us through it tell",
    "start": "156760",
    "end": "163040"
  },
  {
    "text": "us what it is so maybe we can start off uh because we we're kind of discussing on the preall a little bit how we're",
    "start": "163040",
    "end": "168959"
  },
  {
    "text": "really not experts besides you Michael in this and so let's start off and get us all on the same footing with what is",
    "start": "168959",
    "end": "175159"
  },
  {
    "text": "actually es modules what does that mean yeah yeah well um let's go back a little",
    "start": "175159",
    "end": "181120"
  },
  {
    "text": "bit so they wrote a spec tc39 wrote a spec for modules a",
    "start": "181120",
    "end": "187040"
  },
  {
    "text": "long time ago like before they had their new staging process and as a result it was ratified a little bit too early to",
    "start": "187040",
    "end": "192400"
  },
  {
    "text": "be honest but the goal was to put a module system in the browser so you know",
    "start": "192400",
    "end": "197760"
  },
  {
    "text": "you got a module system in node wouldn't it be cool if you had a module system that was native in the browser and the",
    "start": "197760",
    "end": "202920"
  },
  {
    "text": "browser has like a very unique set of constraints compared to something like node and so the standard was really",
    "start": "202920",
    "end": "208080"
  },
  {
    "text": "written around those constraints and this is kind of an important thing that node already had uh modules so this is",
    "start": "208080",
    "end": "215080"
  },
  {
    "text": "coming after that yes yes I mean if you want to go all the way back to ES4 I",
    "start": "215080",
    "end": "220159"
  },
  {
    "text": "think that they had considered it a little bit um but it was very different and stuff and like they came back to it",
    "start": "220159",
    "end": "226120"
  },
  {
    "text": "after node kind of had an ecosystem and when they started working on it node's ecosystem was not what it is now but by",
    "start": "226120",
    "end": "232079"
  },
  {
    "text": "the time that they finished it was something that they probably should have considered just a little bit more there were some really tiny corners of",
    "start": "232079",
    "end": "237439"
  },
  {
    "text": "incompatibility that were tough to work through but anyway years before it even it shows up in",
    "start": "237439",
    "end": "242879"
  },
  {
    "text": "browsers right it shows up in web packing and compilers and so the Syntax for esm is",
    "start": "242879",
    "end": "249480"
  },
  {
    "text": "something that people have been using for a long time like everybody uses react from I think day one react used like import syntax right and just ran",
    "start": "249480",
    "end": "255400"
  },
  {
    "text": "that through a compiler um the thing is like that syntax change is probably not worth taking a giant ecosystem break",
    "start": "255400",
    "end": "262720"
  },
  {
    "text": "right like it's it's sort of it's just different from the other syntax um if you're running through a compiler",
    "start": "262720",
    "end": "268800"
  },
  {
    "text": "there's really not a very big functional difference between the two syntaxes and what they output the the main reason to",
    "start": "268800",
    "end": "274680"
  },
  {
    "text": "have esm is so that we can have a module system in the browser and then hopefully put that module system also in node and",
    "start": "274680",
    "end": "281080"
  },
  {
    "text": "then at the end of the day maybe we can have modules that work in the browser and in node and maybe even in future",
    "start": "281080",
    "end": "287440"
  },
  {
    "text": "platforms without a compiler and it's actually very important to move past compilers there's a lot of problems and",
    "start": "287440",
    "end": "293039"
  },
  {
    "text": "Corners that compilers paint us into that we won't get out of until we can you know do something that is not you",
    "start": "293039",
    "end": "300080"
  },
  {
    "text": "know bundling everything into one file asset so yeah everybody thinks they're using esm but they're really not and in",
    "start": "300080",
    "end": "305960"
  },
  {
    "text": "fact almost nobody's using esm I found out in browsers in particular like",
    "start": "305960",
    "end": "311120"
  },
  {
    "text": "there's just not a lot of people that have written this because I mean think about it right you can't use any node modules can't use any browser modules",
    "start": "311120",
    "end": "317240"
  },
  {
    "text": "that require compiler um like there's you know you you're really kind of on your own so",
    "start": "317240",
    "end": "322280"
  },
  {
    "text": "there's not a ton of people right now using uh Native esm but I think that the goal now um for a lot of people sort of",
    "start": "322280",
    "end": "328880"
  },
  {
    "text": "around the JavaScript standards and around the sort of node ecosystem is to move in a direction of these Universal",
    "start": "328880",
    "end": "335319"
  },
  {
    "text": "modules that we can run everywhere without a compiler that does make for kind of an interesting question around",
    "start": "335319",
    "end": "341039"
  },
  {
    "text": "what is the migration path right if we're already using a",
    "start": "341039",
    "end": "346160"
  },
  {
    "text": "compiler either because we wanted the zsm module like or just because you",
    "start": "346160",
    "end": "351759"
  },
  {
    "text": "maybe we're writing typescript or we're writing jss we're writing something else that requires transpilation of some sort",
    "start": "351759",
    "end": "357280"
  },
  {
    "text": "one what are the benefits to migrate towards a more pure esm approach rather",
    "start": "357280",
    "end": "362520"
  },
  {
    "text": "than TR piling down to commonjs and two like what's the incentive for folks like what's the path",
    "start": "362520",
    "end": "370000"
  },
  {
    "text": "to get there there's a couple things with that right it's not about moving entirely past compilers it's really",
    "start": "370000",
    "end": "376560"
  },
  {
    "text": "about having the output of a potential compiler run everywhere so not bundling",
    "start": "376560",
    "end": "382039"
  },
  {
    "text": "all of the code together and targeting an environment for the final compilation right so still using typescript but your",
    "start": "382039",
    "end": "388919"
  },
  {
    "text": "typescript file turning into native esm module files that then are loaded one by",
    "start": "388919",
    "end": "394000"
  },
  {
    "text": "one in a file not in a big bundle right um so you can you can imagine building up some tools that can migrate not all",
    "start": "394000",
    "end": "400840"
  },
  {
    "text": "of the npm ecosystem and everything that we built but certainly parts of it it's certainly you know possible and working",
    "start": "400840",
    "end": "405880"
  },
  {
    "text": "some of the dsls and things like typescript into that equation isn't going to be too difficult I think that",
    "start": "405880",
    "end": "411479"
  },
  {
    "text": "the harder thing is that you know everything that touches node.js standard library for instance everything that",
    "start": "411479",
    "end": "418199"
  },
  {
    "text": "touches browser that aren't available in node those are things that we can't make work in both places in one source file",
    "start": "418199",
    "end": "426759"
  },
  {
    "text": "right so we actually we need to create some some more abstract like a probably something that looks like a new standard",
    "start": "426759",
    "end": "432599"
  },
  {
    "text": "library that can mount on top of all of these systems so that um your your final targets just use that kind of built-in",
    "start": "432599",
    "end": "438479"
  },
  {
    "text": "system that makes sense so when we say that esm is no longer experimental it's",
    "start": "438479",
    "end": "444599"
  },
  {
    "text": "live that means we can sort of start using it but a lot of the infrastructure that's going to be needed to to start",
    "start": "444599",
    "end": "450520"
  },
  {
    "text": "using this at scale is not there yet oh correct yeah yeah no it's very early I mean it's it's really hard to sort of",
    "start": "450520",
    "end": "457000"
  },
  {
    "text": "unwind people's heads because they're like they've been using the Syntax for 5 years what do you mean it's it's new",
    "start": "457000",
    "end": "462680"
  },
  {
    "text": "right but you know really like building an ecosystem and starting to build real applications using only esm natively is",
    "start": "462680",
    "end": "470560"
  },
  {
    "text": "really something very new and we are talking about rewriting huge portions of the ecosystem and and getting rid of a",
    "start": "470560",
    "end": "475639"
  },
  {
    "text": "lot of tooling yeah a couple things about the constraints in the browser so you end up having this onetoone match",
    "start": "475639",
    "end": "481520"
  },
  {
    "text": "between a string that you import and a file URL so you can use these things",
    "start": "481520",
    "end": "486840"
  },
  {
    "text": "called import maps to to create sort of name spaces and things like that so that you can do fancy stuff with those names but at the end of the day that name has",
    "start": "486840",
    "end": "493720"
  },
  {
    "text": "to just translate into a single file URL um and this is a really important distinction because node does not do",
    "start": "493720",
    "end": "499680"
  },
  {
    "text": "that like node takes a raw name it looks at different file extensions it look it works its way up the the tree in order",
    "start": "499680",
    "end": "505960"
  },
  {
    "text": "to figure out what thing to load um all of that kind of dynamic loading and we solve a lot of really important problems",
    "start": "505960",
    "end": "511720"
  },
  {
    "text": "for ecosystem building in that Dynamic algorithm um that's gone so we like can't use that anymore we have to figure",
    "start": "511720",
    "end": "517399"
  },
  {
    "text": "out how to solve all of those problems in a different way um everything that you do in package Json right now",
    "start": "517399",
    "end": "522479"
  },
  {
    "text": "anything that you put in package Json that you rely on that changes sort of how the source file is interpreted or loaded that doesn't work anymore you",
    "start": "522479",
    "end": "529200"
  },
  {
    "text": "can't have out of- band information either so there's just you know a lot of problems that we figured out how to solve with compilers that when we move",
    "start": "529200",
    "end": "536800"
  },
  {
    "text": "them into this other space we have to find different tools in different approaches to solving them can we break",
    "start": "536800",
    "end": "542279"
  },
  {
    "text": "down one example of that so you know we're talking about automatic finding of different things so like this is for",
    "start": "542279",
    "end": "548720"
  },
  {
    "text": "example like requiring something that lives in a package that I've npm installed or something like that there's",
    "start": "548720",
    "end": "555000"
  },
  {
    "text": "some magic that happens right right so that's part of what's going away is are there other",
    "start": "555000",
    "end": "560839"
  },
  {
    "text": "things in that uh chain that I'm I'm not thinking of or is that the main one so that that's the main one but you have to",
    "start": "560839",
    "end": "566360"
  },
  {
    "text": "think of all the different problems that get solved there CU it's not just one thing right like one thing is that um you know it looks at different file",
    "start": "566360",
    "end": "572000"
  },
  {
    "text": "extensions so you know if you install something that will automatically transpile typescript it'll check for TS",
    "start": "572000",
    "end": "577079"
  },
  {
    "text": "files njs files right like that's that's a nice feature um so you can't do Dynamic",
    "start": "577079",
    "end": "582560"
  },
  {
    "text": "loading so you got to figure out how to like you know front load all of the work that you would have done before that the really important thing that the thing",
    "start": "582560",
    "end": "588440"
  },
  {
    "text": "that npm does maybe better than any other package manager in the world is that if two people rely on a package and",
    "start": "588440",
    "end": "596079"
  },
  {
    "text": "they publish at different times and so they need different versions of it because it changes they do an import of just that bare",
    "start": "596079",
    "end": "602519"
  },
  {
    "text": "string and they get the right version that they needed and you can have these two things existing the same name space",
    "start": "602519",
    "end": "608519"
  },
  {
    "text": "so that that string require that you do in node um does not map to that file it",
    "start": "608519",
    "end": "616360"
  },
  {
    "text": "maps to the version of the file that you put in some other metadata and and that is that is not a global right like that",
    "start": "616360",
    "end": "622040"
  },
  {
    "text": "is not a global registry inside of the the system in Python and Ruby and most program languages that is just a a",
    "start": "622040",
    "end": "627839"
  },
  {
    "text": "global system um and if two packages that you're trying to require needed two different versions you've got to figure",
    "start": "627839",
    "end": "633040"
  },
  {
    "text": "out how to resolve that manually Maybe by updating it and so this is why npm",
    "start": "633040",
    "end": "638440"
  },
  {
    "text": "has such an amazing ecosystem and and these really big dependency networks because people can so freely rely on",
    "start": "638440",
    "end": "644680"
  },
  {
    "text": "other people's code without worrying about having to manually resolve coordination issues that needs another",
    "start": "644680",
    "end": "650639"
  },
  {
    "text": "way to solve that problem because now we can't solve that with the dynamic loader and we can't hook code into the browser",
    "start": "650639",
    "end": "656279"
  },
  {
    "text": "to do this either I mean like these constraints in the browser are there for a reason like you you really can't go oh",
    "start": "656279",
    "end": "661600"
  },
  {
    "text": "well let me try like four different Earls and see what they say and then when they come back I'll like decide if",
    "start": "661600",
    "end": "666839"
  },
  {
    "text": "I'm going to load something else like nobody's waiting for that page to load that long so is that really a constraint",
    "start": "666839",
    "end": "672000"
  },
  {
    "text": "of what we're trying to do with node is having parody with the constraints that the browser has uh when it comes to",
    "start": "672000",
    "end": "678200"
  },
  {
    "text": "module loading sort of I mean I would say that node's top priority right now is just supporting a native module",
    "start": "678200",
    "end": "685399"
  },
  {
    "text": "system and we can talk about custom loaders later but they they have code in there to figure out what to do with",
    "start": "685399",
    "end": "691959"
  },
  {
    "text": "Dynamic loading you can actually access nodes algorithm to do Dynamic loading and stuff like that so if you're only solving these problems in node you can",
    "start": "691959",
    "end": "698880"
  },
  {
    "text": "figure out a way to solve it probably natively because you have much more Dynamic logic but that's not going to port to the browser so whatever you end",
    "start": "698880",
    "end": "705000"
  },
  {
    "text": "up with if you go that route um you're not going to end up with with source files that will work in both the browser",
    "start": "705000",
    "end": "711040"
  },
  {
    "text": "and and nodes so if we want Universal JavaScript we have to have to figure out tooling that we can build on top of that node L load interface that then also",
    "start": "711040",
    "end": "718240"
  },
  {
    "text": "just works natively in the browser in fact like the right thing to do really is just scale everything down to the",
    "start": "718240",
    "end": "723720"
  },
  {
    "text": "browser constraints and find creative ways to resolve that and then if you need to do crazy little hacks in node",
    "start": "723720",
    "end": "729480"
  },
  {
    "text": "fine because you have a dynamic loader that that you can write code in uh that you don't have in the browser at all the",
    "start": "729480",
    "end": "736079"
  },
  {
    "text": "closest thing you have in the browser is um if you load a service worker once that service worker is loaded you can",
    "start": "736079",
    "end": "741959"
  },
  {
    "text": "now take over the HTP Earls for your domain and so you can do really Dynamic things um For What and up being file",
    "start": "741959",
    "end": "750199"
  },
  {
    "text": "Earls to the browser um but that's kind of advanced and and because it's a service worker and you can't rely on it always being loaded it's not a a full",
    "start": "750199",
    "end": "757279"
  },
  {
    "text": "solution it's really sort of like a performance upgrade now when it comes to the loader and Es modules obviously",
    "start": "757279",
    "end": "764160"
  },
  {
    "text": "they've been in the works for a while and behind a flag for a while and I know that there was a couple of competing",
    "start": "764160",
    "end": "770240"
  },
  {
    "text": "approaches to this and so I guess I'm kind of just lost in the confusion of",
    "start": "770240",
    "end": "775320"
  },
  {
    "text": "everything because I know at one point they they were talking about like changes to the package Json or changes",
    "start": "775320",
    "end": "780760"
  },
  {
    "text": "to the file extension to like MJS for example where has that landed so the MJS",
    "start": "780760",
    "end": "786199"
  },
  {
    "text": "thing was pretty controversial it was there to solve one really specific problem and this is actually the main",
    "start": "786199",
    "end": "793320"
  },
  {
    "text": "thing that I was talking about when I said that they probably launch the spec a little bit early in the browser you",
    "start": "793320",
    "end": "798680"
  },
  {
    "text": "have this uh script type equals module thing that you do so there's a different looking script include when you include",
    "start": "798680",
    "end": "805040"
  },
  {
    "text": "JavaScript that it knows is an es module versus code that is not is modules are strict mode by default so you can't just",
    "start": "805040",
    "end": "812279"
  },
  {
    "text": "interpret the file and there's no signal when you look at the file to know how to interpret it and that it's strict mode",
    "start": "812279",
    "end": "818639"
  },
  {
    "text": "because it won't have the the strict mode practice any anymore in it for a lot of reasons just detection does not",
    "start": "818639",
    "end": "823920"
  },
  {
    "text": "work well so you need some signal in node that replaces that script module eus browser to say these things are",
    "start": "823920",
    "end": "830759"
  },
  {
    "text": "going to be es modules there's two ways to do that one is that you can have a MJS file extension that still is in node",
    "start": "830759",
    "end": "837720"
  },
  {
    "text": "and it works um another is that you can put this thing in your package Json",
    "start": "837720",
    "end": "843240"
  },
  {
    "text": "called type equals module and then all of the files in your package will be interpreted that way by node natively",
    "start": "843240",
    "end": "850279"
  },
  {
    "text": "all of your JS files and that's sort of like a more ideal pattern the the",
    "start": "850279",
    "end": "855720"
  },
  {
    "text": "problem that you get into is that man so webpack is very confused by native esm",
    "start": "855720",
    "end": "863800"
  },
  {
    "text": "could we just stop it so web go there right like the problem you run into yeah yeah weback has an even",
    "start": "863800",
    "end": "870800"
  },
  {
    "text": "tougher problem to deal with right because they convinced like millions of developers to write import statements",
    "start": "870800",
    "end": "878279"
  },
  {
    "text": "injs files and then they compiled them into something else and then when those",
    "start": "878279",
    "end": "884480"
  },
  {
    "text": "are actually native when those are native modules that use the native syntax and they it actually means",
    "start": "884480",
    "end": "891000"
  },
  {
    "text": "something different they kind of don't know how to compile that well and what to do there so trying to use native esm",
    "start": "891000",
    "end": "898560"
  },
  {
    "text": "is a really good way to break all your webpack stuff which is very ironic because so much of the push to finish up",
    "start": "898560",
    "end": "906519"
  },
  {
    "text": "esm was from people using it in weback and now it's all broken but yeah",
    "start": "906519",
    "end": "913320"
  },
  {
    "text": "uh so that's the situation is that a current state of webpack situation or is there there a fundamental challenge",
    "start": "913320",
    "end": "920560"
  },
  {
    "text": "underlying that as far as I know that's the situation that is what I found like",
    "start": "920560",
    "end": "925639"
  },
  {
    "text": "the current current state rather than there's something fundamental that prevents them right right I mean I had conversations with people just a few",
    "start": "925639",
    "end": "931800"
  },
  {
    "text": "weeks ago who thought this was still a problem I ran into it personally maybe 3",
    "start": "931800",
    "end": "937920"
  },
  {
    "text": "months ago four months ago something like that so that was like the the first time that I noticed how bad it was maybe",
    "start": "937920",
    "end": "943199"
  },
  {
    "text": "somebody's working on this maybe they're not the fact that you know esm in node just came out from behind the flag",
    "start": "943199",
    "end": "949160"
  },
  {
    "text": "probably means that it didn't have the highest priority on trying to resolve it um I don't know what the fix is it is a",
    "start": "949160",
    "end": "954880"
  },
  {
    "text": "webpack problem it is a webpack concern it's going to have to be handled on their end and I really don't envy the",
    "start": "954880",
    "end": "961079"
  },
  {
    "text": "position that they're in because in node it took roughly 3 years to figure this out and it took changes to the spec and",
    "start": "961079",
    "end": "967759"
  },
  {
    "text": "it took an MJS extension and so it's really not easy so yeah we'll we'll kind",
    "start": "967759",
    "end": "973920"
  },
  {
    "text": "of see how that shakes out would that also be the case for rollup cuz I know rollup uses like polyfills for import",
    "start": "973920",
    "end": "981279"
  },
  {
    "text": "export I think yeah probably so is there yeah so like would it would",
    "start": "981279",
    "end": "986759"
  },
  {
    "text": "theoretically do you know if ASM would work work with rollup as is or is that something that needs to be fixed there",
    "start": "986759",
    "end": "992480"
  },
  {
    "text": "as well I I don't know I haven't used rollup really okay should I ask the begin folks about this they've done a",
    "start": "992480",
    "end": "998360"
  },
  {
    "text": "ton of stuff with uh rollup and and Native esm and they're actually using native esm in the browser and then just",
    "start": "998360",
    "end": "1004720"
  },
  {
    "text": "using rollup on the deploy so their their whole kind of Dev environment is just natively loading the original files",
    "start": "1004720",
    "end": "1010120"
  },
  {
    "text": "and then they use rollup to publish something so they have figured out how to make this work and they have a tool chain on top of rollup to do it so it's",
    "start": "1010120",
    "end": "1017759"
  },
  {
    "text": "it's possible it may like some configuration might not work like out of the box I think that they've essentially figured out how to do it but again I",
    "start": "1017759",
    "end": "1024400"
  },
  {
    "text": "think that where this becomes really tricky is where you start importing other things that are not following the",
    "start": "1024400",
    "end": "1030240"
  },
  {
    "text": "same sort of standard right where you're you're loading other npm modules and then those have potentially like you",
    "start": "1030240",
    "end": "1036280"
  },
  {
    "text": "know separate entry points for node in the browser and you know what if they're esm is that a is that the browser entry",
    "start": "1036280",
    "end": "1042640"
  },
  {
    "text": "point is at the node entry point like how do you transpile that and so how all these options interact",
    "start": "1042640",
    "end": "1049640"
  },
  {
    "text": "is really difficult to figure out because it's not a very clean Matrix right like we're we used to think of",
    "start": "1049640",
    "end": "1055039"
  },
  {
    "text": "node in the browser and now we're thinking of is a module esm or old style",
    "start": "1055039",
    "end": "1060880"
  },
  {
    "text": "and that doesn't tell you if it belongs in either of those buckets and so yeah it's a difficult",
    "start": "1060880",
    "end": "1067679"
  },
  {
    "text": "problem there's a lot of really you know sort of um odd edge cases I would say that if you were going to try to adopt native VSM today um and try to do",
    "start": "1067679",
    "end": "1074799"
  },
  {
    "text": "something with it it would really only be worth it if you were using it natively in the browser and you weren't",
    "start": "1074799",
    "end": "1080039"
  },
  {
    "text": "trying to depend on a bunch of stuff that wasn't written that way I don't think that it's worth it today to do",
    "start": "1080039",
    "end": "1085240"
  },
  {
    "text": "that I think that in the future we'll probably have better tools but if you if you want to like you know play around with it today and be part of like you",
    "start": "1085240",
    "end": "1090799"
  },
  {
    "text": "know building a new like kind of universal JavaScript ecosystem like awesome dive in uh it's totally worth it",
    "start": "1090799",
    "end": "1096960"
  },
  {
    "text": "for that but yeah if you just want to you know make your react app work but you want it to be NM like you're you're",
    "start": "1096960",
    "end": "1103520"
  },
  {
    "text": "going to suffer I wouldn't recommend that all right but I imagine most like modules use commonjs as is and so if you",
    "start": "1103520",
    "end": "1111400"
  },
  {
    "text": "wanted to use native esm you would also equally struggle wouldn't you because then you would have",
    "start": "1111400",
    "end": "1117240"
  },
  {
    "text": "like commonjs and then You' try to use native stuff potentially using web Haack or something else to",
    "start": "1117240",
    "end": "1122919"
  },
  {
    "text": "transpile so that it works together I don't even know how you would Cobble that people use lots of",
    "start": "1122919",
    "end": "1129000"
  },
  {
    "text": "things that is the case there's not a lot of stuff in npm that uses native esm",
    "start": "1129000",
    "end": "1136520"
  },
  {
    "text": "targeted at node but if it was targeted at the browser it could potentially run in node right mhm and there's really",
    "start": "1136520",
    "end": "1142799"
  },
  {
    "text": "this question of like you know when you're transpiling some code that way what's",
    "start": "1142799",
    "end": "1149200"
  },
  {
    "text": "the intended target you know or what what was the original intended target versus where you're trying to compile it to because that kind of tells you how",
    "start": "1149200",
    "end": "1155919"
  },
  {
    "text": "you need to get at certain things yeah it's it's tough problems you know a lot of people have a lot of code to",
    "start": "1155919",
    "end": "1163320"
  },
  {
    "text": "write",
    "start": "1167720",
    "end": "1170720"
  },
  {
    "text": "this episode is brought to you by digital ocean digital ocean is the simplest Cloud platform for developers",
    "start": "1180720",
    "end": "1186280"
  },
  {
    "text": "and teams with products like droplets spaces kubernetes load balancers block",
    "start": "1186280",
    "end": "1191640"
  },
  {
    "text": "storage and pre-built oneclick apps you can deploy manage and scale Cloud applications faster and more efficient",
    "start": "1191640",
    "end": "1198840"
  },
  {
    "text": "ly on digital ocean whether you're running one virtual machine or 10,000 digital ocean makes managing your",
    "start": "1198840",
    "end": "1204320"
  },
  {
    "text": "infrastructure way too easy head to do. changelog again do.",
    "start": "1204320",
    "end": "1213320"
  },
  {
    "text": "[Music] changelog all right so we've been",
    "start": "1216890",
    "end": "1223080"
  },
  {
    "text": "talking about uh esm and what that is and it's uh now available in without a",
    "start": "1223080",
    "end": "1229240"
  },
  {
    "text": "flag so let's let's talk a little bit about compatibility so with with this you mentioned that there are you",
    "start": "1229240",
    "end": "1235520"
  },
  {
    "text": "basically have to be explicit about what you're loading and there's a couple of different ways to do that either with",
    "start": "1235520",
    "end": "1241120"
  },
  {
    "text": "like the MJS extension or with a type of module I think you said in the package",
    "start": "1241120",
    "end": "1246440"
  },
  {
    "text": "Json my question is if I had a big project that was written like a big",
    "start": "1246440",
    "end": "1252000"
  },
  {
    "text": "package in node could I incrementally start switching things over to esm or",
    "start": "1252000",
    "end": "1257559"
  },
  {
    "text": "would I have to kind of do it all at once you could theoretically with the MJS file extension right so then you",
    "start": "1257559",
    "end": "1263840"
  },
  {
    "text": "could have the files live next to each other and you'd have the right signal there are some difficulties importing between them that you would have to deal",
    "start": "1263840",
    "end": "1270000"
  },
  {
    "text": "with is that just things like like the default export versus like the different",
    "start": "1270000",
    "end": "1275400"
  },
  {
    "text": "like more of a dynamic load or a dynamic export that you might have with commonjs things like that so there just there are",
    "start": "1275400",
    "end": "1281880"
  },
  {
    "text": "features in each one that can't be ported yeah so it it gets a little tricky I wouldn't recommend doing it a",
    "start": "1281880",
    "end": "1288200"
  },
  {
    "text": "file at a time I'd recommend doing it a module at a time um and and if you have a really big application uh I would",
    "start": "1288200",
    "end": "1294640"
  },
  {
    "text": "start breaking parts off into independent modules that are that are then uh just native esm that that would",
    "start": "1294640",
    "end": "1301640"
  },
  {
    "text": "be the route that I would recommend yeah it's tough don't move applications over yet just don't do",
    "start": "1301640",
    "end": "1309240"
  },
  {
    "text": "that it's there I have to jump on it in the early days of node in the early days of node a lot of people came to the",
    "start": "1309240",
    "end": "1317000"
  },
  {
    "text": "ecosystem specifically because there were no modules because they wanted to be the people that wrote that first",
    "start": "1317000",
    "end": "1322120"
  },
  {
    "text": "thing and there's it's really exciting to be part of that community and it's really exciting work to do and just like",
    "start": "1322120",
    "end": "1328640"
  },
  {
    "text": "in general if you are early to something and it blows up there are really big rewards to you personally so just like",
    "start": "1328640",
    "end": "1335200"
  },
  {
    "text": "FYI if if people are looking to like step up their career like these things really do pay off in the long run a lot",
    "start": "1335200",
    "end": "1342440"
  },
  {
    "text": "of people around node uh did quite well not me but",
    "start": "1342440",
    "end": "1347520"
  },
  {
    "text": "uh know I mean I'm fine I'm fine uh I just you know I didn't have like an exit or you know something like that but uh",
    "start": "1347520",
    "end": "1354279"
  },
  {
    "text": "you know a lot of people did yeah it's just it's really fun um I'm honestly kind of one of the things that really excites me about this is kind of getting",
    "start": "1354279",
    "end": "1360880"
  },
  {
    "text": "back to that and and going like oh you know what like nobody has figured out like how to write command line utilities",
    "start": "1360880",
    "end": "1366480"
  },
  {
    "text": "that that you know you could potentially Port around or like one thing that I've been working on lately is like how do we write tests that you could run in both",
    "start": "1366480",
    "end": "1374240"
  },
  {
    "text": "node and in the browser and that would be really great I'll talk a little bit later about this this dependency management thing that I wrote but it' be",
    "start": "1374240",
    "end": "1380039"
  },
  {
    "text": "really cool if like when I want to check if updated one of my dependencies breaks something I can just do it in a website",
    "start": "1380039",
    "end": "1386039"
  },
  {
    "text": "and in an i frame sandbox it can run all of those tests right um and I don't I don't have to like you know spin up some",
    "start": "1386039",
    "end": "1391520"
  },
  {
    "text": "infrastructure to go do the test like we would with any kind of node package you can sort of like start to break out of",
    "start": "1391520",
    "end": "1396679"
  },
  {
    "text": "the platform so there there's there's a lot of flexibility a lot of things that we'll be able to do with this new system once it's built and some of the most",
    "start": "1396679",
    "end": "1403240"
  },
  {
    "text": "exciting things to build right now are at the the sort of intersection of like the new things that you need to do and",
    "start": "1403240",
    "end": "1408520"
  },
  {
    "text": "and the gaps that don't exist yet so kind of along those so you mentioned there are some things that you can do or",
    "start": "1408520",
    "end": "1415200"
  },
  {
    "text": "Express in each type of module system that aren't expressable in the other like if you wanted to to bridge between",
    "start": "1415200",
    "end": "1422880"
  },
  {
    "text": "those and you mentioned like do stuff as a module at a time like what are the options available to you I me one that",
    "start": "1422880",
    "end": "1429840"
  },
  {
    "text": "I'm thinking of is like I remember when I first started doing node after years of doing the browser I tried to set up",
    "start": "1429840",
    "end": "1435120"
  },
  {
    "text": "transpiling within node and it was like it was pretty freaking FL flakey but um is that how you'd go or like how would",
    "start": "1435120",
    "end": "1442159"
  },
  {
    "text": "you start pulling in Native esm modules as you created them into a commonjs",
    "start": "1442159",
    "end": "1448440"
  },
  {
    "text": "application carefully so if you're only using nodes native system and you",
    "start": "1448440",
    "end": "1454840"
  },
  {
    "text": "weren't using a compiler you could do it pretty easily you know you you could publish it to npm you could just import",
    "start": "1454840",
    "end": "1461600"
  },
  {
    "text": "it like any other package by name that you just installed that part of it should work now that esm is out from",
    "start": "1461600",
    "end": "1467399"
  },
  {
    "text": "behind the flag what's not going to work though is anything that requires Dynamic hooks into the module",
    "start": "1467399",
    "end": "1474880"
  },
  {
    "text": "system and you'd be surprised at how many things you rely on that do that so",
    "start": "1474880",
    "end": "1480880"
  },
  {
    "text": "any transpiling of languages at import time is all done that way so if you use",
    "start": "1480880",
    "end": "1485960"
  },
  {
    "text": "typescript copy scripts any kind of transpiler in node itself you now don't",
    "start": "1485960",
    "end": "1491840"
  },
  {
    "text": "have that loader to do that dynamically and the dynamic loader interface is like a separate sort of command line flag and",
    "start": "1491840",
    "end": "1497799"
  },
  {
    "text": "you really only get one of them so there's a very kind of different ergonomics that that happen around it it's also still experimental and very",
    "start": "1497799",
    "end": "1504640"
  },
  {
    "text": "buggy like if you do any IO in it it just",
    "start": "1504640",
    "end": "1510000"
  },
  {
    "text": "crashes so yeah I found that out the hard way uh I have some crazy hacks around this but yeah I think that if if",
    "start": "1510000",
    "end": "1516559"
  },
  {
    "text": "you're just writing JavaScript if you're just using it in node it's pretty easy and and you won't be too mad okay so now",
    "start": "1516559",
    "end": "1523520"
  },
  {
    "text": "that it's outside of the flag I can import NS M module uh into a file that",
    "start": "1523520",
    "end": "1532039"
  },
  {
    "text": "is otherwise using commonjs or other things it's just then that would have to",
    "start": "1532039",
    "end": "1537399"
  },
  {
    "text": "export can I require an import into the same file without using a transpiler yes",
    "start": "1537399",
    "end": "1542679"
  },
  {
    "text": "okay there are some caveats but yes okay so so long as I'm doing your vanilla",
    "start": "1542679",
    "end": "1550000"
  },
  {
    "text": "stuff there and I've I can do that Import in both places so if I'm doing it module at a time interesting but how you",
    "start": "1550000",
    "end": "1558399"
  },
  {
    "text": "import it is really specific there are like things that you can't do if you're",
    "start": "1558399",
    "end": "1563480"
  },
  {
    "text": "going between the two systems so and there's there's documentation on that I would just read through that they've",
    "start": "1563480",
    "end": "1569200"
  },
  {
    "text": "documented that quite well awesome and we should probably include a link to that in the show notes so you were talking about sort of the benefits of or",
    "start": "1569200",
    "end": "1576960"
  },
  {
    "text": "the potential benefits of getting into the trend early and build publishing modules do you think the future of this",
    "start": "1576960",
    "end": "1582200"
  },
  {
    "text": "is a new set of esm focused modules or is it migrating older commonjs modules",
    "start": "1582200",
    "end": "1588720"
  },
  {
    "text": "to esm um I think it's mostly going to be new it's actually quite difficult to",
    "start": "1588720",
    "end": "1595000"
  },
  {
    "text": "imagine compiling a lot of what's in mpm today into a file that would run",
    "start": "1595000",
    "end": "1602120"
  },
  {
    "text": "universally that's really hard it's possible but it it's probably pretty unlikely you may end up with some pretty",
    "start": "1602120",
    "end": "1609600"
  },
  {
    "text": "gross stuff in there you could potentially end up with you know just a a bundle as one of the dependencies so",
    "start": "1609600",
    "end": "1614799"
  },
  {
    "text": "you're not getting any of the the other subfile and and module dup lication stuff like that there's a lot of",
    "start": "1614799",
    "end": "1620200"
  },
  {
    "text": "concerns that you should have about that method yeah and I mean to be honest a",
    "start": "1620200",
    "end": "1625440"
  },
  {
    "text": "lot of what we rely on is pretty",
    "start": "1625440",
    "end": "1630559"
  },
  {
    "text": "garbage and like I I mean I wrote some of it so it's okay like I can say this um it yeah it's it's it's really",
    "start": "1631640",
    "end": "1640919"
  },
  {
    "text": "bad like we I we've just been stacking layers upon layers upon layers upon layers and and a lot of things in our",
    "start": "1640919",
    "end": "1647399"
  },
  {
    "text": "depth chains are are not maintained anymore and simple packages with just a few depths and every time that I you",
    "start": "1647399",
    "end": "1653360"
  },
  {
    "text": "know run npm install it's like you have 12 known vulnerabilities in your Deb tree and I'm like really and you're like npm fix audit fix",
    "start": "1653360",
    "end": "1660799"
  },
  {
    "text": "and then it's like yeah no we can't sorry like uh this is like not great",
    "start": "1660799",
    "end": "1666080"
  },
  {
    "text": "this is not a great state of things another thing too is that I think that it would be presumptuous to assume that",
    "start": "1666080",
    "end": "1673200"
  },
  {
    "text": "this whole ecosystem that we built at first without even thinking about browsers at all and then for the next",
    "start": "1673200",
    "end": "1679480"
  },
  {
    "text": "sort of 5 years of that only thinking in terms of compilers that the modules that",
    "start": "1679480",
    "end": "1685000"
  },
  {
    "text": "we built in that ecosystem are just going to work easily and and performant",
    "start": "1685000",
    "end": "1690080"
  },
  {
    "text": "in this new system that you know if you're loading these as individual files in the browser that you're going to want",
    "start": "1690080",
    "end": "1696679"
  },
  {
    "text": "you know the exact same kind of patterns in that ecosystem I think that ecosystems form really organically and",
    "start": "1696679",
    "end": "1703799"
  },
  {
    "text": "whatever constraints that you impose on the that you have in the tooling or in the usage end up sort of uh persisting",
    "start": "1703799",
    "end": "1709720"
  },
  {
    "text": "into the way that people develop things into that graph like that the early node ecosystem before we had a lot of",
    "start": "1709720",
    "end": "1715000"
  },
  {
    "text": "transpiling before webpack I mean we had browser IFI but but it was very sort of node Centric the patterns and de trees",
    "start": "1715000",
    "end": "1721200"
  },
  {
    "text": "looked very different and now they look quite different from that because of how much it's changed for a lot of the front",
    "start": "1721200",
    "end": "1726600"
  },
  {
    "text": "end tooling and I I would just not expect to see us just like Port that",
    "start": "1726600",
    "end": "1731720"
  },
  {
    "text": "directly over to this new system uh that that wouldn't make a ton of sense to me",
    "start": "1731720",
    "end": "1737000"
  },
  {
    "text": "and a lot of why we want to do this is so that we can get better performance than we get from bundling for most",
    "start": "1737000",
    "end": "1742440"
  },
  {
    "text": "application use cases and uh some of the trade-offs that you would probably have to make when you were migrating all that",
    "start": "1742440",
    "end": "1748159"
  },
  {
    "text": "stuff over would you know bring you back to you know worse states of performance than bundling would so that's probably",
    "start": "1748159",
    "end": "1754399"
  },
  {
    "text": "going to be one of the big drives uh over time to get people to to this is is",
    "start": "1754399",
    "end": "1760760"
  },
  {
    "text": "performance potentially yeah yeah yeah so I I can talk a little bit about how how I solve that or I'm working on",
    "start": "1760760",
    "end": "1765919"
  },
  {
    "text": "solving that I should say yeah so I I wrote little package manager called regge for Universal JavaScript so it",
    "start": "1765919",
    "end": "1774039"
  },
  {
    "text": "uses the the custom loader in node and it works sort of natively in the browser and the way that it works is that you",
    "start": "1774039",
    "end": "1780480"
  },
  {
    "text": "give it a file and it sort of parses through the whole depb tree uh and it basically statically links everything it",
    "start": "1780480",
    "end": "1786960"
  },
  {
    "text": "basically takes each one of the files so whether they're local files or their files that are in the sort of package",
    "start": "1786960",
    "end": "1792080"
  },
  {
    "text": "registry and it puts this data structure around them it's a data structure uses a",
    "start": "1792080",
    "end": "1797240"
  },
  {
    "text": "a technique called hash trees um or Merkel trees it's very similar to the data structure they have in git and I'll",
    "start": "1797240",
    "end": "1803200"
  },
  {
    "text": "get it like git is amazing at so many things and so there's a lot of reasons to use that data structure but um you",
    "start": "1803200",
    "end": "1809799"
  },
  {
    "text": "end up with a with a hash for every module essentially and so what you do is you replace all these import statements",
    "start": "1809799",
    "end": "1815159"
  },
  {
    "text": "with Imports of the hashes all the way down um and then you know you get a new root hash module for the thing you",
    "start": "1815159",
    "end": "1820320"
  },
  {
    "text": "published and then you stick it on you know a name or or whatever that you're putting you know or a version tag",
    "start": "1820320",
    "end": "1825519"
  },
  {
    "text": "whatever that sort of static linking process means that you can now have two modules rely on two different versions",
    "start": "1825519",
    "end": "1831720"
  },
  {
    "text": "of the same thing because you've swapped out the name for just the sort of statically linked name um it means you",
    "start": "1831720",
    "end": "1837080"
  },
  {
    "text": "have a full and mutable data structure for the entire dep Tre of everything that's ever published which is really nice you don't no package lock files no",
    "start": "1837080",
    "end": "1843360"
  },
  {
    "text": "extra like it's all just that by default and the really cool thing about this is because we have that uh statically",
    "start": "1843360",
    "end": "1849679"
  },
  {
    "text": "mapped tree we can basically let me think about",
    "start": "1849679",
    "end": "1855240"
  },
  {
    "text": "this for a second um oh HP push so now when you ask for a module I can go oh",
    "start": "1855240",
    "end": "1862000"
  },
  {
    "text": "yeah I know what that is and I know all the depths of it so I'm just going to push you all those files and so we",
    "start": "1862000",
    "end": "1867639"
  },
  {
    "text": "basically get a a sort of unminified bundle version of all those files which is amazing and if you use brole",
    "start": "1867639",
    "end": "1873080"
  },
  {
    "text": "compression you don't really need minification like it's it's like in like 8% probably of a savings but the really",
    "start": "1873080",
    "end": "1879639"
  },
  {
    "text": "cool thing is that like then then you go and ask for that module again right say that module is your application code yeah when you go and ask for that module",
    "start": "1879639",
    "end": "1886320"
  },
  {
    "text": "again you're going to give me an e tag for the last one and if it updated that eag is not for",
    "start": "1886320",
    "end": "1891639"
  },
  {
    "text": "one file it's actually for the entire package tree so I can diff those two trees and then I can just HTP push you",
    "start": "1891639",
    "end": "1898360"
  },
  {
    "text": "the files that changed um so when so when you update one module and it has a",
    "start": "1898360",
    "end": "1904279"
  },
  {
    "text": "dep you just get those files and not the entire tree again so the problem with bundle performance is that every time",
    "start": "1904279",
    "end": "1909760"
  },
  {
    "text": "you load the page you're going to get the bundle again because people are doing like daily deploys and so whenever",
    "start": "1909760",
    "end": "1915679"
  },
  {
    "text": "you reload like it's changed and so you're blowing out the cash every time um so for any applications that like you",
    "start": "1915679",
    "end": "1921080"
  },
  {
    "text": "load twice and update you will end up getting better performance out of this system does this also let you like can",
    "start": "1921080",
    "end": "1929960"
  },
  {
    "text": "you cash those modules cross domain so here's the thing uh technically yes",
    "start": "1929960",
    "end": "1936639"
  },
  {
    "text": "technically today most browsers treat their HTTP cache as a universal cache the caveat here is that that's going",
    "start": "1936639",
    "end": "1942679"
  },
  {
    "text": "away browsers for uh they've found really clever ways to like fingerprint people people and one of them is is by",
    "start": "1942679",
    "end": "1950519"
  },
  {
    "text": "this shared HP cache like you know that if you get a resource back reasonably fast that they already had it and so if",
    "start": "1950519",
    "end": "1957760"
  },
  {
    "text": "you know the New York Times is the only place still relying on some old module",
    "start": "1957760",
    "end": "1963720"
  },
  {
    "text": "then you can just go like oh let me see how long it takes to load that module and then I know if you went to the New York Times And so there's like a",
    "start": "1963720",
    "end": "1970000"
  },
  {
    "text": "tracking Vector here there's some their fingerprinting Ventures it's bad so browsers are are by and large I think",
    "start": "1970000",
    "end": "1976679"
  },
  {
    "text": "moving towards the model now where the HTTP cach is no longer shared between domains so the HTP cach for your",
    "start": "1976679",
    "end": "1982360"
  },
  {
    "text": "application even of other domains is just going to be scoped to your application because we can't have nice",
    "start": "1982360",
    "end": "1989000"
  },
  {
    "text": "things yeah I mean I I can see all of the reasons there and it just makes me sad I know I know it's really it's",
    "start": "1989200",
    "end": "1996360"
  },
  {
    "text": "really bad yeah if we could figure out how to fix that we could go back to uh the system that we had before you know",
    "start": "1996360",
    "end": "2002360"
  },
  {
    "text": "this is why everybody uses that CDN version of jQuery because everybody already has it in their cash right and",
    "start": "2002360",
    "end": "2008840"
  },
  {
    "text": "and uh yeah we could have had something very similar to that but um unfortunately that's that's probably going away we shouldn't rely on that",
    "start": "2008840",
    "end": "2014880"
  },
  {
    "text": "that actually raises so that's if you use CDN that you're not going to have that shared it's still going to be",
    "start": "2014880",
    "end": "2021120"
  },
  {
    "text": "across the domain of the web page rather than the oh my gosh yep",
    "start": "2021120",
    "end": "2027799"
  },
  {
    "text": "sorry sorry to break it to you yeah that fingerprinting is pretty",
    "start": "2027799",
    "end": "2033360"
  },
  {
    "text": "clever but also completely disgusting oh yeah yeah advertisers are very clever",
    "start": "2033360",
    "end": "2039080"
  },
  {
    "text": "um it's true another really cool thing that I can do talking about sort of D duplication so this still D duplicates",
    "start": "2039080",
    "end": "2045880"
  },
  {
    "text": "between say you dynamically load a module later right you're still going to have great cach between you know all",
    "start": "2045880",
    "end": "2051280"
  },
  {
    "text": "these modules for any of the sub dependencies that's going to work really well another thing that I do though is",
    "start": "2051280",
    "end": "2056480"
  },
  {
    "text": "that so I'm using these data structures that I built for the Next Generation version of ipfs it's called unitv 2 so",
    "start": "2056480",
    "end": "2062960"
  },
  {
    "text": "these are data structures to represent a file and directories but we're not using the directories in reg because in reg a",
    "start": "2062960",
    "end": "2068520"
  },
  {
    "text": "package is a file and it has a on toone relationship with just a file because that's how the browser thinks of it so it's better that we think about it that",
    "start": "2068520",
    "end": "2074720"
  },
  {
    "text": "way but this other thing that I'm doing is that um I'm actually chunking up the file and then referring to the like the",
    "start": "2074720",
    "end": "2081040"
  },
  {
    "text": "the hash of the file is actually then like an array of all the parts um and the hashes of those parts so there's",
    "start": "2081040",
    "end": "2087520"
  },
  {
    "text": "this algorithm called Rabin that uh rsync developed like forever ago so arsing has used this for a very very",
    "start": "2087520",
    "end": "2093679"
  },
  {
    "text": "long time and what it does is it it gives you really consistent block boundary so it it uses sort of this rotating hash",
    "start": "2093679",
    "end": "2100800"
  },
  {
    "text": "fingerprint over the file to give you really consistent boundaries even between changes of the file so what that",
    "start": "2100800",
    "end": "2106240"
  },
  {
    "text": "means is that when you change part of a file you're only going to change that one block and you're not going to then like push all the offsets in every every",
    "start": "2106240",
    "end": "2113000"
  },
  {
    "text": "block after that like you would if you just sort of chunked it up by like some integer right some Max size this is",
    "start": "2113000",
    "end": "2119320"
  },
  {
    "text": "really cool because in node and potentially in the browser with service workers we actually get subfile data D",
    "start": "2119320",
    "end": "2125520"
  },
  {
    "text": "duplication so um as your sort of pulling down files locally regge keeps just a local cache on your system and as",
    "start": "2125520",
    "end": "2133119"
  },
  {
    "text": "new versions of that package come out you're literally just pulling like the btes and the blocks that change you're not even pulling down the whole files",
    "start": "2133119",
    "end": "2138880"
  },
  {
    "text": "that changed anymore so it's just like this incredibly efficient um SN and caching uh protocol for everything and",
    "start": "2138880",
    "end": "2144560"
  },
  {
    "text": "is that all set up just as soon as you load a package that's using regge is that what's setting it up in the browser",
    "start": "2144560",
    "end": "2151160"
  },
  {
    "text": "the browser can't really use that because it has to think that things is just file URLs like in a service worker",
    "start": "2151160",
    "end": "2156599"
  },
  {
    "text": "I could take over that space and then like have the data structured locally and the way that the registry works is that the registry just serves you all of",
    "start": "2156599",
    "end": "2162800"
  },
  {
    "text": "these files by hash and it'll give you the metad or the file data potentially",
    "start": "2162800",
    "end": "2167920"
  },
  {
    "text": "depending on the API that you hit for every package as well um but what you do in node is that you actually like parse",
    "start": "2167920",
    "end": "2174640"
  },
  {
    "text": "through that whole tree go oh what parts of this do I not have yet and then it goes and pulls down the the underlying",
    "start": "2174640",
    "end": "2181000"
  },
  {
    "text": "block data from the registry and then just materializes the files that you need eventually as you need them like I",
    "start": "2181000",
    "end": "2186640"
  },
  {
    "text": "want to do this really Dynam Al as you needed eventually but because there's this bug in the loader right now where I can't do any IO there's actually a step",
    "start": "2186640",
    "end": "2193119"
  },
  {
    "text": "before your code runs where I materialize all the files so that I don't then have to do new iio um in the",
    "start": "2193119",
    "end": "2199119"
  },
  {
    "text": "loader itself but yeah yeah yeah so it's really cool there's some really cool stuff I ended up chatting with Brian",
    "start": "2199119",
    "end": "2205319"
  },
  {
    "text": "Laro for a while who's doing this this big server lless thing and he made the point that you know we have like maybe",
    "start": "2205319",
    "end": "2211200"
  },
  {
    "text": "like a half dozen HTTP apis now so I mean in the browser you've got the service worker API for doing servers",
    "start": "2211200",
    "end": "2218520"
  },
  {
    "text": "you've got the Lambda API which is like just his own weird thing you have no js's API you probably have like a new",
    "start": "2218520",
    "end": "2224520"
  },
  {
    "text": "style node.js API at some point mapping something to work on top of all of these is actually really difficult like",
    "start": "2224520",
    "end": "2230079"
  },
  {
    "text": "nobody's written like just a a nice standard that that you could port on top of all of these but if we Define such a",
    "start": "2230079",
    "end": "2236800"
  },
  {
    "text": "standard you know just like here's you know write a function like this that takes this request and this response object this is what they look like and",
    "start": "2236800",
    "end": "2242800"
  },
  {
    "text": "we'll create those and interact with them proper and you return or or like a maybe it's just a request and then you",
    "start": "2242800",
    "end": "2248520"
  },
  {
    "text": "return you know some kind of response object right figure out what the signature used to look like and then we",
    "start": "2248520",
    "end": "2254560"
  },
  {
    "text": "can map that on top of all these systems and then if anybody publishes anything into this package registry he can have a",
    "start": "2254560",
    "end": "2260560"
  },
  {
    "text": "service in Lambda or a service in Cloud flare workers or wherever where you just give it any hash that's in the registry",
    "start": "2260560",
    "end": "2265839"
  },
  {
    "text": "and it'll run that function and you know he can have like his users with different accounts for for the actual compute cost of that and all of the sort",
    "start": "2265839",
    "end": "2272119"
  },
  {
    "text": "of uh pricing and tallying but you know they don't have to worry about like actually deploying any of that stuff",
    "start": "2272119",
    "end": "2278359"
  },
  {
    "text": "um it's all just there kind of just in time and there you don't have the advertiser message yes exactly exactly",
    "start": "2278359",
    "end": "2284599"
  },
  {
    "text": "exactly um and then I don't think that I can talk about it but like I can't talk about specifics but like if there was",
    "start": "2284599",
    "end": "2291240"
  },
  {
    "text": "theoretically a way to share a directory or some kind of shared resource across a",
    "start": "2291240",
    "end": "2296640"
  },
  {
    "text": "bunch of different Lambda functions the cash for all of them could just be in the same thing and be really localized",
    "start": "2296640",
    "end": "2302079"
  },
  {
    "text": "so yeah I mean there's a reason that like CDN use hashes for everything and these these data structures uh work",
    "start": "2302079",
    "end": "2308480"
  },
  {
    "text": "really really nicely with lru based caches because each data structure sort of roots as its own hash and then any of",
    "start": "2308480",
    "end": "2314960"
  },
  {
    "text": "the common pieces in that data structure that don't change that continue to get access will stay in even if the the",
    "start": "2314960",
    "end": "2320119"
  },
  {
    "text": "route changes and and things change over time and they need to fall out of the cache so there's just a lot of things in general about these data structures that",
    "start": "2320119",
    "end": "2326359"
  },
  {
    "text": "are that are quite nice that I've been working on for a while now and this is like kind of the the first application that I'm really putting it through so",
    "start": "2326359",
    "end": "2333480"
  },
  {
    "text": "got it so this is for you're doing this native registry for esm module yep it's up now it's it's in cloudflow worker so",
    "start": "2333480",
    "end": "2339800"
  },
  {
    "text": "it's pretty fast don't uh put too much data in it or else you you'll mess up my",
    "start": "2339800",
    "end": "2346240"
  },
  {
    "text": "account I might have to shut it down how if at all does this interact",
    "start": "2346240",
    "end": "2351400"
  },
  {
    "text": "with other registries like npm oh it doesn't at all no um there's no compatibility if there is any",
    "start": "2351400",
    "end": "2357839"
  },
  {
    "text": "compatibility at some point it it'll end up being some way to take packages out of mpm and compile them to regge um and",
    "start": "2357839",
    "end": "2365599"
  },
  {
    "text": "and potentially even you know maybe somebody puts up a name space where you just just in time kind of materialize those assets and and move them over but",
    "start": "2365599",
    "end": "2372920"
  },
  {
    "text": "when you're thinking about what a package is in npm uh how it's referenced",
    "start": "2372920",
    "end": "2377960"
  },
  {
    "text": "and how it is loaded there's not really a way to do direct compatibility in that",
    "start": "2377960",
    "end": "2383040"
  },
  {
    "text": "direction you could pretty easily take a regge package and just like push it into npm that would be pretty trivial but",
    "start": "2383040",
    "end": "2389079"
  },
  {
    "text": "because you can't do the dynamic loading you can't reason about things the same way and you yeah you can't really Port",
    "start": "2389079",
    "end": "2395200"
  },
  {
    "text": "them over very well you you you really end up just kind of compiling it into something else but you know npm doesn't",
    "start": "2395200",
    "end": "2400480"
  },
  {
    "text": "work natively in the browser so it's like you got to kind of pick",
    "start": "2400480",
    "end": "2405640"
  },
  {
    "text": "[Music] one this episode is brought to you by",
    "start": "2406200",
    "end": "2413880"
  },
  {
    "text": "Brave big news from the brave team version 1.0 is official that means our",
    "start": "2413880",
    "end": "2419359"
  },
  {
    "text": "favorite open source privacy focused blazing fast browser is ready for prime time their brand new IOS app landed just",
    "start": "2419359",
    "end": "2426520"
  },
  {
    "text": "in time for the announce announcement and the brave team is celebrating by granting 8 million basic attention",
    "start": "2426520",
    "end": "2431720"
  },
  {
    "text": "tokens to the community that means when you download the iOS app you get 20 bat absolutely free put it to good use by",
    "start": "2431720",
    "end": "2438960"
  },
  {
    "text": "heading to changel log.com hitting the triangle icon in the upper right hand corner and flipping us a",
    "start": "2438960",
    "end": "2444900"
  },
  {
    "text": "[Music]",
    "start": "2444900",
    "end": "2447949"
  },
  {
    "text": "tip all right well that was quite a deep dive into modules uh and the biggest takeaway I",
    "start": "2455880",
    "end": "2462000"
  },
  {
    "text": "got is don't use them yet so that that's great I will continue",
    "start": "2462000",
    "end": "2467040"
  },
  {
    "text": "to to do what I'm doing and do it well uh which is not use them right now uh",
    "start": "2467040",
    "end": "2472079"
  },
  {
    "text": "other than you know through the the approximation that I'm using through typescript right now uh and I'll",
    "start": "2472079",
    "end": "2477800"
  },
  {
    "text": "continue to be happy with that uh so thank you for that Michael that was really awesome uh now let's talk about",
    "start": "2477800",
    "end": "2484520"
  },
  {
    "text": "one of our recurring segments which is I'm excited about X where X can be literally anything and kall do you want",
    "start": "2484520",
    "end": "2490240"
  },
  {
    "text": "to start us off sure I am excited about CSS subgrid which just shipped in the",
    "start": "2490240",
    "end": "2496400"
  },
  {
    "text": "latest version of Firefox Firefox 71 and this is the level two part of the CSS",
    "start": "2496400",
    "end": "2502839"
  },
  {
    "text": "grid layout specification so this allows us to Nest grids within one another which solves some really tricky problems",
    "start": "2502839",
    "end": "2509800"
  },
  {
    "text": "with getting nested grid items lining up with your original grid so previously it",
    "start": "2509800",
    "end": "2515640"
  },
  {
    "text": "was pretty hard to for for example have isolated components that used grid and",
    "start": "2515640",
    "end": "2521480"
  },
  {
    "text": "put them correctly inside layouts or other components that used grid and CSS grid makes that straightforward and",
    "start": "2521480",
    "end": "2528720"
  },
  {
    "text": "helps in a ton of different ways so I'm super super excited about that um it just launched it's only available in",
    "start": "2528720",
    "end": "2535079"
  },
  {
    "text": "Firefox so once again don't use this for real yet because it will break in the",
    "start": "2535079",
    "end": "2540240"
  },
  {
    "text": "majority of browsers that are not Firefox um you know I think we're at 60 or 70% of people using Chrome Super on",
    "start": "2540240",
    "end": "2546160"
  },
  {
    "text": "brand for this one [Laughter] but it's coming uh and it's real and you",
    "start": "2546160",
    "end": "2552960"
  },
  {
    "text": "can play with it for real in Firefox 71 which just shipped so go very cool that",
    "start": "2552960",
    "end": "2559800"
  },
  {
    "text": "is something I will definitely check out and continue to not use but check it",
    "start": "2559800",
    "end": "2566079"
  },
  {
    "text": "out Divia you want to go next yeah sure so um I'm really excited about the web",
    "start": "2566079",
    "end": "2572440"
  },
  {
    "text": "Almanac it was officially released at Chrome Dev Summit this year which is",
    "start": "2572440",
    "end": "2578119"
  },
  {
    "text": "2019 and um Rick Viscomi worked on it and there's a lot of like contributions",
    "start": "2578119",
    "end": "2583599"
  },
  {
    "text": "to the web Almanac it's really neat because it's essentially just a whole plethora of knowledge of various web",
    "start": "2583599",
    "end": "2590480"
  },
  {
    "text": "related things and it takes in a lot of um expert information on specific things",
    "start": "2590480",
    "end": "2595920"
  },
  {
    "text": "so like performance as well as JavaScript and CSS and various other pieces that you might not fully",
    "start": "2595920",
    "end": "2602359"
  },
  {
    "text": "understand or like have the full yeah just have the full understanding of that piece and so it gives you a really",
    "start": "2602359",
    "end": "2609200"
  },
  {
    "text": "highlevel concept of what that is from like a web perspective and then there's also some data associated with like for",
    "start": "2609200",
    "end": "2616720"
  },
  {
    "text": "example the JavaScript one talks about General like JavaScript bytes per page like the average amounts and like what",
    "start": "2616720",
    "end": "2623319"
  },
  {
    "text": "that means from a performance standpoint and things like that which I think often times as developers you hear a lot of",
    "start": "2623319",
    "end": "2630440"
  },
  {
    "text": "numbers thrown at you you're like oh this is whatever kilobytes of data and you're like okay I don't understand what",
    "start": "2630440",
    "end": "2636079"
  },
  {
    "text": "that means um and the almanac breaks down like key",
    "start": "2636079",
    "end": "2641440"
  },
  {
    "text": "figures that you as a developer should know or what is useful for you to know",
    "start": "2641440",
    "end": "2646680"
  },
  {
    "text": "um and that's really cool so I'm excited about that it's very well done as well so another thing that I did I actually",
    "start": "2646680",
    "end": "2653079"
  },
  {
    "text": "did this quite a while ago I started pulling all of the data I think I may have talked about this on a prior one",
    "start": "2653079",
    "end": "2658319"
  },
  {
    "text": "but I started pulling all the GitHub archive data and filtering it and getting a lot of sort of daily metrics out of it and for a while now I've just",
    "start": "2658319",
    "end": "2664440"
  },
  {
    "text": "been creating a markdown file every day in this repo using GitHub actions and sending myself an email and so this has",
    "start": "2664440",
    "end": "2670319"
  },
  {
    "text": "been really cool like I I I've started to learn a lot about sort of what is trending on GitHub and projects that I",
    "start": "2670319",
    "end": "2675720"
  },
  {
    "text": "wouldn't have seen otherwise and and different stuff that's going on and which projects are active and which ones aren't and so now I opened up that that",
    "start": "2675720",
    "end": "2681800"
  },
  {
    "text": "email list so now you can subscribe to it so you can you can find the link at github.com K my name spelled up uh SL daily",
    "start": "2681800",
    "end": "2690880"
  },
  {
    "text": "also there'll probably be a link in the show notes it actually turned me onto this project that I just never would have seen called postwoman that is like",
    "start": "2690880",
    "end": "2697559"
  },
  {
    "text": "it's really popular like it it's like sustained stars like for weeks now um",
    "start": "2697559",
    "end": "2703040"
  },
  {
    "text": "and it's it's this API request Builder that was built in vue.js and it's really phenomenal like it's it's a really",
    "start": "2703040",
    "end": "2709079"
  },
  {
    "text": "really nice project but yeah and I just I never would have seen this if it wasn't for um looking like just kind of",
    "start": "2709079",
    "end": "2716160"
  },
  {
    "text": "sitting in this data for a while now and yeah so that that was what I called to bring up super cool project check it out",
    "start": "2716160",
    "end": "2722359"
  },
  {
    "text": "where was that email list again like it's on your page there's a link in the",
    "start": "2722359",
    "end": "2727520"
  },
  {
    "text": "repo um like the the actual you know how you can say like here's my website the website is actually just a link to go",
    "start": "2727520",
    "end": "2733760"
  },
  {
    "text": "sign up for the email list um but we'll also put the link directly in the show notes I imagine too so yep yes I think",
    "start": "2733760",
    "end": "2739599"
  },
  {
    "text": "that would be we'll put it in the show notes and congratulations you have broken the trend uh I have used",
    "start": "2739599",
    "end": "2745599"
  },
  {
    "text": "postwoman and it's great oh so there's something I I have used and will continue to use instead of not",
    "start": "2745599",
    "end": "2752640"
  },
  {
    "text": "used so cool cool and uh I'll go next and um to round it off the the thing",
    "start": "2754319",
    "end": "2760559"
  },
  {
    "text": "that I'm excited about uh is it's a terminal emulator called Kitty its",
    "start": "2760559",
    "end": "2765960"
  },
  {
    "text": "tagline is it's a fast featureful gpub based terminal emulator and I have been a long time iterm to user but this",
    "start": "2765960",
    "end": "2774200"
  },
  {
    "text": "quickly got me going I really like it a lot and it's just so fast like you would",
    "start": "2774200",
    "end": "2779400"
  },
  {
    "text": "think that I wouldn't complain too much about a terminal being slow but it can be quite slow and especially if you're",
    "start": "2779400",
    "end": "2785760"
  },
  {
    "text": "trying to use something like ligature in iterm that turns off the GPU render uh in iterm so it's pretty slow but Kitty",
    "start": "2785760",
    "end": "2792760"
  },
  {
    "text": "takes care of that so you can have liat if you want them and it's still really Snappy uh so you can get that from",
    "start": "2792760",
    "end": "2799319"
  },
  {
    "text": "Homebrew uh for not just Mac but uh Linux as well and maybe some kind of WSL",
    "start": "2799319",
    "end": "2806200"
  },
  {
    "text": "windows or something but uh yeah check it out Kitty we'll have a link to that in the show notes yeah I I did not",
    "start": "2806200",
    "end": "2811839"
  },
  {
    "text": "realize how slow the terminals that I was using were until I started using the blink terminal on iPad Pro and I was",
    "start": "2811839",
    "end": "2818240"
  },
  {
    "text": "like this is so fast like what is going on um yeah yeah blink blink is pretty",
    "start": "2818240",
    "end": "2825720"
  },
  {
    "text": "fantastic yeah without it I I just feel like I'm running like my editor in electron or something",
    "start": "2825720",
    "end": "2833079"
  },
  {
    "text": "yeah well that does it for our show today thank you uh to all of the wonderful panelists for for talking",
    "start": "2833760",
    "end": "2838920"
  },
  {
    "text": "modules talking about awesome things that you're excited about and we will see you next week",
    "start": "2838920",
    "end": "2844599"
  },
  {
    "text": "cheers all right thank you for tuning in to JS party this week tune in live on Thursdays at 1 p.m. us Eastern at",
    "start": "2844599",
    "end": "2852359"
  },
  {
    "text": "change.com join the community and slack with us in real time during the shows head to Chang law.com community and do",
    "start": "2852359",
    "end": "2859480"
  },
  {
    "text": "us a favor share this show with a friend we just have a podcast going to overcast and favorite it and thank you to fastly",
    "start": "2859480",
    "end": "2866359"
  },
  {
    "text": "our bandwidth partner head to fastly.com to learn more and we move fast to fix things around here at change LW because",
    "start": "2866359",
    "end": "2871680"
  },
  {
    "text": "of rbar check them out at rar.com we're hosted on Leno Cloud servers at the the",
    "start": "2871680",
    "end": "2877000"
  },
  {
    "text": "l.com changelog check them out and support this show our music is produced by break master cylinder and you can",
    "start": "2877000",
    "end": "2883079"
  },
  {
    "text": "find more shows just like this at changel love.com thanks for tuning in we'll see you next",
    "start": "2883079",
    "end": "2888380"
  },
  {
    "text": "[Music]",
    "start": "2888380",
    "end": "2892988"
  },
  {
    "text": "week",
    "start": "2895000",
    "end": "2898000"
  }
]