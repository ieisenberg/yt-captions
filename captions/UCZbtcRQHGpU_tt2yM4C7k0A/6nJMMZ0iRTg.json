[
  {
    "text": "so I'm Bill Kennedy and it's now go [Music]",
    "start": "80",
    "end": "17829"
  },
  {
    "text": "time it's go time a weekly podcast where we discuss interesting topics around the go programming language the community",
    "start": "18039",
    "end": "24800"
  },
  {
    "text": "and everything in between if you currently write go or aspire to this is the show for you",
    "start": "24800",
    "end": "31599"
  },
  {
    "text": "all right everybody welcome back for another episode of go time it's episode number six uh I'm Eric St Maron today",
    "start": "31599",
    "end": "38440"
  },
  {
    "text": "here with me we have Brian ketton say hello Brian hello and we have caria",
    "start": "38440",
    "end": "44280"
  },
  {
    "text": "Campos say hello glad to be here hi everybody and we have a special guest with us today um Bill Kennedy from ardan",
    "start": "44280",
    "end": "51600"
  },
  {
    "text": "labs and go bridge is here with us today you might also know him from all of his",
    "start": "51600",
    "end": "57079"
  },
  {
    "text": "workshops that he does like the world now right bill yeah I've been lucky",
    "start": "57079",
    "end": "62160"
  },
  {
    "text": "enough to get into uh Europe a couple of times this year yeah this is it's crazy",
    "start": "62160",
    "end": "67320"
  },
  {
    "text": "it's like every every day we see you somewhere else I don't know how the planes arrive in time for your",
    "start": "67320",
    "end": "74439"
  },
  {
    "text": "workshops scheduling is difficult sometimes for sure I I mean what's your",
    "start": "74880",
    "end": "79960"
  },
  {
    "text": "mileage look like for frequent flyer miles I think I'm at like 130,000 miles right",
    "start": "79960",
    "end": "87400"
  },
  {
    "text": "now I don't envy you Diamond Elite I'm uh on American I am now",
    "start": "87400",
    "end": "93720"
  },
  {
    "text": "platinum on my way to Executive Platinum nice but yes these are not goals that",
    "start": "93720",
    "end": "99040"
  },
  {
    "text": "you should you should want to achieve do you have your favorite uh",
    "start": "99040",
    "end": "104360"
  },
  {
    "text": "soap and shampoo that comes in a small bottle I leverage whatever the hotel has",
    "start": "104360",
    "end": "110640"
  },
  {
    "text": "to the extent that I can uh so today we're going to be talking with Bill about mechanical",
    "start": "110640",
    "end": "116520"
  },
  {
    "text": "sympathy so I think this is going to be a really interesting topic um before we get into that let's uh let's talk news",
    "start": "116520",
    "end": "123560"
  },
  {
    "text": "and interesting projects anybody have anything interesting they want to talk about before we get into it with Bill",
    "start": "123560",
    "end": "129319"
  },
  {
    "text": "you know it was a pretty quiet week in in goon from my perspective but I did find two relatively interesting projects",
    "start": "129319",
    "end": "136879"
  },
  {
    "text": "the first one I thought might be a winner in the best hack of the Year award um in the show notes you'll find a",
    "start": "136879",
    "end": "144640"
  },
  {
    "text": "link to the blog post from axen ack.com where they hacked together a way",
    "start": "144640",
    "end": "151360"
  },
  {
    "text": "to send statsd type metrics to Google analytics which seems like an",
    "start": "151360",
    "end": "156720"
  },
  {
    "text": "interesting shoehorn and it it looks like it works pretty well so you get a nice uh free statsd monitoring for your",
    "start": "156720",
    "end": "163760"
  },
  {
    "text": "servers uh using Google analytics inappropriately I approve completely of this plan you know but the interesting",
    "start": "163760",
    "end": "171120"
  },
  {
    "text": "thing about that though is you can see it alongside uh metrics that you're already collecting in Google Google",
    "start": "171120",
    "end": "176760"
  },
  {
    "text": "analytics and how some of those things might impact um your funnel so I can't",
    "start": "176760",
    "end": "182640"
  },
  {
    "text": "think of any specific uses I'd use it for off the bat but it does I think it has potential to be",
    "start": "182640",
    "end": "189560"
  },
  {
    "text": "valuable it was interesting to say the least I'm not sure I would put it in production on a useful system what if",
    "start": "189560",
    "end": "195120"
  },
  {
    "text": "Google decided that they could figure out that traffic and start tossing it yeah I think I prefer grafana or",
    "start": "195120",
    "end": "201400"
  },
  {
    "text": "something like that but data dog all the way data dog is good stuff too so the",
    "start": "201400",
    "end": "208000"
  },
  {
    "text": "second interesting project I found is is one in the multitude of vendoring",
    "start": "208000",
    "end": "213040"
  },
  {
    "text": "projects this one's called Manu m n l and you'll find the link to that in the show notes and it's it's another one",
    "start": "213040",
    "end": "220360"
  },
  {
    "text": "that does vendoring uh with get sub modules this time and it looked to be one of the better um vendoring packages",
    "start": "220360",
    "end": "228480"
  },
  {
    "text": "that that supports skit sub modules so it had some had some very nice uh commands and utilities with it I'm",
    "start": "228480",
    "end": "235040"
  },
  {
    "text": "interested to see though how they solve some of the drawbacks from using sub modules because um a lot of people have",
    "start": "235040",
    "end": "242239"
  },
  {
    "text": "reservations about using G subm modules there's kind of some um inherent flaws",
    "start": "242239",
    "end": "247560"
  },
  {
    "text": "with the way it works like number one would be that um you're still riant on",
    "start": "247560",
    "end": "254120"
  },
  {
    "text": "that repository to exist in the future so if it went down or somebody decided",
    "start": "254120",
    "end": "259600"
  },
  {
    "text": "to delete their project because that totally never happens or even just rename it you still",
    "start": "259600",
    "end": "265759"
  },
  {
    "text": "wouldn't have access to the code but some of it also comes in the way um subm modules work so if I pull down your",
    "start": "265759",
    "end": "274080"
  },
  {
    "text": "project and I I need to do a get subm module update to update my local versions of those subm modules but if I",
    "start": "274080",
    "end": "281199"
  },
  {
    "text": "don't do that I'm still running with my um prior versions of those subm modules",
    "start": "281199",
    "end": "288080"
  },
  {
    "text": "so but by checking out your code it doesn't move my subm modules with it so I can accidentally commit my older",
    "start": "288080",
    "end": "294400"
  },
  {
    "text": "versions of your stuff and those lines are really simp like really easy to miss",
    "start": "294400",
    "end": "300039"
  },
  {
    "text": "um and there's a couple issues too with with the way those things are kind of merged and stuff too so I'm interested",
    "start": "300039",
    "end": "306280"
  },
  {
    "text": "to see how that's solved because people step on each other's subm modules all",
    "start": "306280",
    "end": "311360"
  },
  {
    "text": "the time you see it where you know I pull down your changes but I didn't notice you had subm module updates but",
    "start": "311360",
    "end": "317479"
  },
  {
    "text": "then I commit my commit and my subm module uh versions are different than yours and I just kind of step on yours",
    "start": "317479",
    "end": "324759"
  },
  {
    "text": "um but I mean these are problems that people were having years ago so maybe there's some stuff in git now that",
    "start": "324759",
    "end": "330000"
  },
  {
    "text": "accounts for it maybe the tool accounts for it a little bit too um I guess if you did it on like a commit hook or",
    "start": "330000",
    "end": "335720"
  },
  {
    "text": "something you could probably but yeah it it's interesting though um sub modules",
    "start": "335720",
    "end": "340759"
  },
  {
    "text": "can be valuable and they can also be a pain but I guess everything in programming can be right always have you",
    "start": "340759",
    "end": "347080"
  },
  {
    "text": "guys used sub modules before anybody I have I have I did not run into any",
    "start": "347080",
    "end": "353199"
  },
  {
    "text": "problem that's didn't do anything crazy just Dro a sub module there to access it",
    "start": "353199",
    "end": "359319"
  },
  {
    "text": "yeah I'll find a link surrounding some of those um pitfalls uh and we'll drop it in the show notes before this is",
    "start": "359319",
    "end": "365560"
  },
  {
    "text": "released I this has been a couple years so I can't remember the name of one off the top of my head but I know people",
    "start": "365560",
    "end": "371720"
  },
  {
    "text": "were having a lot of uh weird issues so anything else we want to talk about that's all I had I don't have anything I",
    "start": "371720",
    "end": "379160"
  },
  {
    "text": "know what we do want to talk about mechanical sympathy exactly yes first",
    "start": "379160",
    "end": "385120"
  },
  {
    "text": "things first thing where did this name come from we were talking about this earlier but I want to hear from the",
    "start": "385120",
    "end": "391240"
  },
  {
    "text": "horse mouth it didn't come from me I this is a term that um I think I got",
    "start": "391240",
    "end": "397680"
  },
  {
    "text": "from um Martin Thompson who watch any of his videos he says he got it from a race",
    "start": "397680",
    "end": "403720"
  },
  {
    "text": "car driver yeah Jackie Stewart was a a Formula 1 driver and I think during an",
    "start": "403720",
    "end": "409120"
  },
  {
    "text": "interview he had said something along the lines of you know you don't need to be an engineer or a mechanic or",
    "start": "409120",
    "end": "414319"
  },
  {
    "text": "something to be a race car driver but you need to have mechanical sympathy and basically he was just implying by having",
    "start": "414319",
    "end": "421080"
  },
  {
    "text": "some level of understanding of how the machine the the the car worked that made",
    "start": "421080",
    "end": "427919"
  },
  {
    "text": "you a better driver and I think as Bill kind of pointed out uh Martin Thompson I think it was um started applying that to",
    "start": "427919",
    "end": "435720"
  },
  {
    "text": "programming so bill would you like to fill us in a bit on how how you think that that concept applies to programming",
    "start": "435720",
    "end": "443000"
  },
  {
    "text": "yeah I mean I only have a perspective on it from the ghost side and it's something I really focus on and the",
    "start": "443000",
    "end": "449400"
  },
  {
    "text": "training I I kind of focus on two things in the training data oriented design and",
    "start": "449400",
    "end": "454919"
  },
  {
    "text": "mechanical sympathy and and try to show how the language go itself is very in",
    "start": "454919",
    "end": "461400"
  },
  {
    "text": "tune around these two ideas um and and I really really believe",
    "start": "461400",
    "end": "467159"
  },
  {
    "text": "um that if you don't understand the data that you're working with you do not understand the problem that you're",
    "start": "467159",
    "end": "473000"
  },
  {
    "text": "trying to solve it all starts there like everything every problem that we're trying to solve is really a",
    "start": "473000",
    "end": "479840"
  },
  {
    "text": "data manipulation problem in some fashion some in some way so it all",
    "start": "479840",
    "end": "485120"
  },
  {
    "text": "really starts with the data and it's this idea that if you don't understand",
    "start": "485120",
    "end": "490599"
  },
  {
    "text": "the data you're working with you don't understand the problem and if you don't understand the cost of solving that problem you can't really reason about",
    "start": "490599",
    "end": "496879"
  },
  {
    "text": "solving it and to be able to reason about the cost you have to have some understanding of what every line of code",
    "start": "496879",
    "end": "504000"
  },
  {
    "text": "is doing and and how that's affecting the operating system and the hardware",
    "start": "504000",
    "end": "509360"
  },
  {
    "text": "which is there to execute those instructions that that you're spending time writing to begin with so I think",
    "start": "509360",
    "end": "515399"
  },
  {
    "text": "it's it's that relationship that I'm really interested in and and think about in terms of what go is doing to help us",
    "start": "515399",
    "end": "522320"
  },
  {
    "text": "so when you talk about mechanical sympathy you're talking about things at the physical level like the discs the",
    "start": "522320",
    "end": "530240"
  },
  {
    "text": "caches the CPU electrical things um how much of that as a programmer do we have",
    "start": "530240",
    "end": "536360"
  },
  {
    "text": "to care about I really focus it around the data",
    "start": "536360",
    "end": "541480"
  },
  {
    "text": "that you're working with and so you know one of the things that I've learned is",
    "start": "541480",
    "end": "547160"
  },
  {
    "text": "that the hardware that we're working today are processors you know they're now multicore processors and every core",
    "start": "547160",
    "end": "553000"
  },
  {
    "text": "has their own sets of local caches that L1 and L2 cache in many cases belong to",
    "start": "553000",
    "end": "558399"
  },
  {
    "text": "each core cores could then share an L3 cache and you just don't have access",
    "start": "558399",
    "end": "563839"
  },
  {
    "text": "anymore directly to main memory so if you're writing code where the hardware",
    "start": "563839",
    "end": "571000"
  },
  {
    "text": "cannot predict access to the data you're working with then you're going to have",
    "start": "571000",
    "end": "576519"
  },
  {
    "text": "these cash misses that can cost you hundreds of clock Cycles in in one architecture that Scott Myers uses in",
    "start": "576519",
    "end": "583240"
  },
  {
    "text": "one of his talks it's 107 clock Cycles every time you have a cach miss and now that's going to change from Hardware to",
    "start": "583240",
    "end": "589279"
  },
  {
    "text": "Hardware but if you can imagine employing some sort of Link linked list data structure where on every iteration",
    "start": "589279",
    "end": "597200"
  },
  {
    "text": "you're accessing a different not in the list and every Noe in that list is not",
    "start": "597200",
    "end": "603000"
  },
  {
    "text": "sympathetic with the caching system doesn't exist on their on the same cach lines I you could be chugging through",
    "start": "603000",
    "end": "609079"
  },
  {
    "text": "memory without even realizing it without even understanding why it's as slow as",
    "start": "609079",
    "end": "614720"
  },
  {
    "text": "as it is so so from let's let's back up here just a second too because um a lot",
    "start": "614720",
    "end": "621399"
  },
  {
    "text": "of people come from Dynamic languages you know Ruby python um and even go abstracts these Concepts from you um",
    "start": "621399",
    "end": "628760"
  },
  {
    "text": "let's let's take a second and talk about CPU caches and and what those are",
    "start": "628760",
    "end": "634000"
  },
  {
    "text": "because I I would argue that probably a lot of people aren't even familiar with what a CPU cache is so we got to talk",
    "start": "634000",
    "end": "641680"
  },
  {
    "text": "about this at a very high representative level because Hardware is really different but in essence if we're",
    "start": "641680",
    "end": "647880"
  },
  {
    "text": "dealing with piece of Hardware that has caches then then from our perspective it it it can be all the same and so the",
    "start": "647880",
    "end": "654720"
  },
  {
    "text": "idea is that that Hardware needs to have the m memory that we're working with as",
    "start": "654720",
    "end": "660440"
  },
  {
    "text": "close to it as possible and what's going to happen today is if you need any even",
    "start": "660440",
    "end": "666600"
  },
  {
    "text": "a bite of memory that's sitting out in main it's got to move from Main memory into into let's say the L1 or L2 cache",
    "start": "666600",
    "end": "673320"
  },
  {
    "text": "for it to be used and these caches get pulled in and out on cash lines and the",
    "start": "673320",
    "end": "679920"
  },
  {
    "text": "default Cash Line today we probably working with is a 64 bite cach line and",
    "start": "679920",
    "end": "685680"
  },
  {
    "text": "so the idea is that we the the idea now is if you have instructions that are",
    "start": "685680",
    "end": "691120"
  },
  {
    "text": "working with data which is what we do right I mean this is what we do all day we're reading memory we're writing to memory this memory has to now get into",
    "start": "691120",
    "end": "698560"
  },
  {
    "text": "the caching system in order for us to be able to use it um this data is going to be moving on these 64 byte cach lines",
    "start": "698560",
    "end": "705200"
  },
  {
    "text": "from Main and back in and so one of the things that we can do to be sympathetic",
    "start": "705200",
    "end": "711880"
  },
  {
    "text": "with the hardware is try to work with data in as contiguous blocks as possible",
    "start": "711880",
    "end": "717720"
  },
  {
    "text": "the more contiguous are data is you usually then at that point are probably",
    "start": "717720",
    "end": "724279"
  },
  {
    "text": "iterating over that data and iterating over data can create what are called you",
    "start": "724279",
    "end": "729880"
  },
  {
    "text": "know predictable access patterns to that data that the hardware today can pick up on and so if we really want to give the",
    "start": "729880",
    "end": "738199"
  },
  {
    "text": "hardware its best opportunity to take advantage of everything that's in there we've got to be sympathetic with it",
    "start": "738199",
    "end": "744399"
  },
  {
    "text": "we've got to try to look at data in a way of what are our working sets of dat can we lay data out continuously work",
    "start": "744399",
    "end": "751000"
  },
  {
    "text": "with data continuously and can we create predictable access patterns around that so the hardware can pick up on what what",
    "start": "751000",
    "end": "756920"
  },
  {
    "text": "are the next cach lines that are probably in play or will definitely be in play and pull those into the caches",
    "start": "756920",
    "end": "764120"
  },
  {
    "text": "before those next instructions need them how does somebody learn about what",
    "start": "764120",
    "end": "770320"
  },
  {
    "text": "predictable access uh patterns look like and what can they do to achieve",
    "start": "770320",
    "end": "778120"
  },
  {
    "text": "that from today's perspective it is the array",
    "start": "778120",
    "end": "783560"
  },
  {
    "text": "that is really the most important data structure from the hardware perspective",
    "start": "783560",
    "end": "788639"
  },
  {
    "text": "because it is the array that allows you to create contiguous blocks of memory",
    "start": "788639",
    "end": "794000"
  },
  {
    "text": "well I guess stru are aligned that way too right say it again I'm sorry structs are also aligned contiguously they are",
    "start": "794000",
    "end": "801880"
  },
  {
    "text": "but but if I was going to create a user struct and I was going to create a 100,000 of those and I didn't lay that",
    "start": "801880",
    "end": "807079"
  },
  {
    "text": "out contiguous I lay you know I created a just a link list of these particular",
    "start": "807079",
    "end": "812480"
  },
  {
    "text": "user values and they laid out all over in memory almost randomly and you started walking down that link list the",
    "start": "812480",
    "end": "818680"
  },
  {
    "text": "hardware is not going to be able to pick up on any any pattern there and you're basically going to be chugging through",
    "start": "818680",
    "end": "825480"
  },
  {
    "text": "memory because every every access is going to be a a cach miss so we're trying to we're trying to eliminate that",
    "start": "825480",
    "end": "831600"
  },
  {
    "text": "by trying to keep all of the data that we can as close together as possible and the least number of cach lines as",
    "start": "831600",
    "end": "837440"
  },
  {
    "text": "possible Right because over the years processors even though they haven't got significantly faster they've become much",
    "start": "837440",
    "end": "844120"
  },
  {
    "text": "better at multitasking so while the processor may be you know performing a math",
    "start": "844120",
    "end": "850360"
  },
  {
    "text": "calculation at the same in the same cycle it can be pulling you know making the next stride and pulling the next",
    "start": "850360",
    "end": "855600"
  },
  {
    "text": "cach line in uh so that the next iteration the data is already there and",
    "start": "855600",
    "end": "861120"
  },
  {
    "text": "it's basically for free if it can predict what that next cach line is then",
    "start": "861120",
    "end": "866839"
  },
  {
    "text": "it absolutely can do that but of course not being sympathetic and helping it be able to predict these things then it",
    "start": "866839",
    "end": "874600"
  },
  {
    "text": "can't pull that cach line until it knows exactly now this is where the data is that I need yeah and it's I'm sorry I",
    "start": "874600",
    "end": "882759"
  },
  {
    "text": "was just going to say so the access patterns how you talk about it being important thinking about the data and",
    "start": "882759",
    "end": "887800"
  },
  {
    "text": "how you're working with it uh I guess the the two main points I can think of is basically temporal and spatial",
    "start": "887800",
    "end": "894560"
  },
  {
    "text": "locality right working with things that are um located next to each other in memory or working on um the same pieces",
    "start": "894560",
    "end": "902160"
  },
  {
    "text": "of data at the same time right kind of to your point where you can minimize the number of cash misses yeah and hopefully",
    "start": "902160",
    "end": "909079"
  },
  {
    "text": "even if I mean you're not going to avoid cash misses altogether but if you have a",
    "start": "909079",
    "end": "914279"
  },
  {
    "text": "a working set of data that you're going to be doing a lot of processing on you know once it gets pulled in now it's there you can leverage it it's you know",
    "start": "914279",
    "end": "920880"
  },
  {
    "text": "if you're bouncing around memory all the time and it's somewhat random you're you're just going to chug through it so",
    "start": "920880",
    "end": "927240"
  },
  {
    "text": "let's give an idea of bouncing around memory a link a link list to me could be",
    "start": "927240",
    "end": "932279"
  },
  {
    "text": "a scenario where right you have a node of data that node of data points to another node of data and that node of",
    "start": "932279",
    "end": "937880"
  },
  {
    "text": "data points to another node of data and depending on how and when that data was created that could be almost anywhere",
    "start": "937880",
    "end": "945240"
  },
  {
    "text": "right in the heat depending on how that's how that's getting created and when and how it's getting hooked up so",
    "start": "945240",
    "end": "951040"
  },
  {
    "text": "you can't guarantee in that case that every single note is on the same cach line or even in cach lines that are next",
    "start": "951040",
    "end": "956560"
  },
  {
    "text": "to each other and I guess another example would be like a multi-dimensional array right iterating",
    "start": "956560",
    "end": "962120"
  },
  {
    "text": "over row based versus column based yeah ex yeah I actually have some examples in",
    "start": "962120",
    "end": "967800"
  },
  {
    "text": "the training with that over benchmarking where you actually see a significant difference in",
    "start": "967800",
    "end": "973040"
  },
  {
    "text": "performance um if you go row based you see it's much faster than if you go column based kind of breaking breaking",
    "start": "973040",
    "end": "980720"
  },
  {
    "text": "the the you know going against the grain yeah so it's interesting though right because we we typically think about memory for free right you know we're",
    "start": "980720",
    "end": "987880"
  },
  {
    "text": "like oh yeah it's it's in Ram Ram's fast at least I don't have to go to dis for it right but doing something like column",
    "start": "987880",
    "end": "994040"
  },
  {
    "text": "first or Row first uh iteration over like an array like that I mean it really",
    "start": "994040",
    "end": "999720"
  },
  {
    "text": "demonstrates the point how much how much slower it is to go to Ram than CPU cache",
    "start": "999720",
    "end": "1006160"
  },
  {
    "text": "and it it really shows its head you know the bigger that grows and there's other things too um uh even just because we",
    "start": "1006160",
    "end": "1014160"
  },
  {
    "text": "use typical operating systems have the uh I always mess up this name the",
    "start": "1014160",
    "end": "1019199"
  },
  {
    "text": "transaction look aside buffer I think is what it's called where basically it Maps",
    "start": "1019199",
    "end": "1024558"
  },
  {
    "text": "the address for memory your program has to the real memory physical memory address",
    "start": "1024559",
    "end": "1030839"
  },
  {
    "text": "and that has Pages too that you can blow out and it kind of has to load back in and that's expensive right so every time",
    "start": "1030839",
    "end": "1036520"
  },
  {
    "text": "you blow that out because you're you're not working with uh memory that's located next to each",
    "start": "1036520",
    "end": "1041839"
  },
  {
    "text": "other you know my interest in this actually started to develop when I came",
    "start": "1041839",
    "end": "1047360"
  },
  {
    "text": "into go because from that before that I was in C and we had lists and we had cues and we",
    "start": "1047360",
    "end": "1053240"
  },
  {
    "text": "had Stacks we had data structures right and even C++ gave us all these data structures and when I came into go I was",
    "start": "1053240",
    "end": "1059799"
  },
  {
    "text": "like where are all my data structures like I don't understand this so I just see an array I see a slice which I",
    "start": "1059799",
    "end": "1065880"
  },
  {
    "text": "honestly didn't understand at the time and I see maps and it's really silly because I didn't really understand what",
    "start": "1065880",
    "end": "1072440"
  },
  {
    "text": "slices were I just thought they were really just arays when back in school we were really taught to you know are",
    "start": "1072440",
    "end": "1078919"
  },
  {
    "text": "difficult to work with and I actually avoided slices for the first couple of months working in go using link lists",
    "start": "1078919",
    "end": "1086960"
  },
  {
    "text": "because I I I honestly didn't understand why we didn't have data structures and eventually at some point I realized that",
    "start": "1086960",
    "end": "1093320"
  },
  {
    "text": "everybody's using slices and the language is pushing you towards slices and I figured out I had to really learn",
    "start": "1093320",
    "end": "1099720"
  },
  {
    "text": "what this is and now when you step back and you look at it from this point of view I mean the the underlying data",
    "start": "1099720",
    "end": "1105360"
  },
  {
    "text": "structure for the slice is an array right the slice is the most important data structure in go and as I peel this",
    "start": "1105360",
    "end": "1111880"
  },
  {
    "text": "onion every month about more and more about go all I keep seeing is how go is pushing us towards writing sympathetic",
    "start": "1111880",
    "end": "1119679"
  },
  {
    "text": "code goes pushing us towards doing the right things without anybody realizing It Go wants us to work with these slices",
    "start": "1119679",
    "end": "1126840"
  },
  {
    "text": "because then we're really working with arrays and contiguous memory and it's giving us our best opportunity to have",
    "start": "1126840",
    "end": "1133159"
  },
  {
    "text": "these sympathies without even realizing that we're being sympathetic with the hardware so go to me is just an",
    "start": "1133159",
    "end": "1140320"
  },
  {
    "text": "incredibly fascinating language when it comes to that and other areas of the language too where you see that you're",
    "start": "1140320",
    "end": "1145919"
  },
  {
    "text": "really being sympathetic with like the operating system scheduler on the concurrency side without even realizing",
    "start": "1145919",
    "end": "1151720"
  },
  {
    "text": "it right just these idioms and these things that we tell people to do all the time they're they're based not on just",
    "start": "1151720",
    "end": "1158799"
  },
  {
    "text": "hey we want you to do this they're based on real things around performance Simplicity readability those types of",
    "start": "1158799",
    "end": "1165400"
  },
  {
    "text": "things it all kind of comes full circle yeah I think there's a lot of programming idioms that can be followed",
    "start": "1165400",
    "end": "1171360"
  },
  {
    "text": "to help but I think you're right I guess I had never really considered some of the uh language functionality that um",
    "start": "1171360",
    "end": "1178200"
  },
  {
    "text": "it's abstracting away these uh these things and making our programs more",
    "start": "1178200",
    "end": "1183600"
  },
  {
    "text": "sympathetic by default right channels are a good example too right you know you're you're you're passing pieces of",
    "start": "1183600",
    "end": "1190440"
  },
  {
    "text": "data over between threads so that um the data can stay locally on the cache for",
    "start": "1190440",
    "end": "1195559"
  },
  {
    "text": "that particular thread but what about the reference types your slice your Maps your channel values right we're always",
    "start": "1195559",
    "end": "1201799"
  },
  {
    "text": "told do not share these everybody can get a copy of these values and what",
    "start": "1201799",
    "end": "1207120"
  },
  {
    "text": "that's doing is it's allowing us to not put pressure on the GC right like we get to leverage the stacks to their fullest",
    "start": "1207120",
    "end": "1214280"
  },
  {
    "text": "extent because everybody can get a copy of this slice what's the thing that's being shared underneath is what let's",
    "start": "1214280",
    "end": "1220360"
  },
  {
    "text": "say necessarily has to be in the Heap just that and all these little objects that we need to pass values around",
    "start": "1220360",
    "end": "1226559"
  },
  {
    "text": "across these program boundaries we get to leverage the stack right because there's going to be two areas where",
    "start": "1226559",
    "end": "1232000"
  },
  {
    "text": "we're going to want to focus around performance one will be I think around data oriented design and are we being",
    "start": "1232000",
    "end": "1238360"
  },
  {
    "text": "sympathetic with the hardware and the caching systems are we working with data the best way we can and then the other",
    "start": "1238360",
    "end": "1243880"
  },
  {
    "text": "side is going to be can we reduce pressure on the on the garbage collector so it doesn't have to run as much right",
    "start": "1243880",
    "end": "1251000"
  },
  {
    "text": "and these are two areas um where I think we can focus just day one around performance when we're not getting",
    "start": "1251000",
    "end": "1257120"
  },
  {
    "text": "enough of it but I I tell everybody in my classes all the time I go don't become Paralyzed by all this stuff you",
    "start": "1257120",
    "end": "1264440"
  },
  {
    "text": "you have to get whatever it is you're working on working first and then you",
    "start": "1264440",
    "end": "1270000"
  },
  {
    "text": "can profile and and measure what's working but the the profiling tooling is amazing right you can see the low",
    "start": "1270000",
    "end": "1276120"
  },
  {
    "text": "hanging fruit and then look at where you can spend real time where does your time",
    "start": "1276120",
    "end": "1281559"
  },
  {
    "text": "need to be and then these things kick in to help you understand how can I get some better performance here am I not",
    "start": "1281559",
    "end": "1288520"
  },
  {
    "text": "being sympathetic with the caching system I'm not being sympathetic with the operating system am I not being sympathetic with the garbage collector",
    "start": "1288520",
    "end": "1294039"
  },
  {
    "text": "is I'm just allocating too much stuff here where when I don't need to how about the data oriented design I mean I",
    "start": "1294039",
    "end": "1302640"
  },
  {
    "text": "understand we don't want to maximize performance ahead of time before you",
    "start": "1302640",
    "end": "1307679"
  },
  {
    "text": "know what you need what you need to optimize and even where you need to optimize how about the concept of data",
    "start": "1307679",
    "end": "1313720"
  },
  {
    "text": "oriented design I can't totally see you designing your software in a way that is",
    "start": "1313720",
    "end": "1320279"
  },
  {
    "text": "not data oriented and is to make it work and you",
    "start": "1320279",
    "end": "1326000"
  },
  {
    "text": "might or might not have performance issues but let's say you do and you want to change things around it seems to me",
    "start": "1326000",
    "end": "1332679"
  },
  {
    "text": "if you didn't start out thinking about data oriented uh that way of doing it",
    "start": "1332679",
    "end": "1339320"
  },
  {
    "text": "the changes will be so great um the redoing would be so great versus if you",
    "start": "1339320",
    "end": "1345919"
  },
  {
    "text": "had started out thinking in that way and should we be doing that not so much in terms of let's try to optimize",
    "start": "1345919",
    "end": "1353200"
  },
  {
    "text": "performance too early but is there are there payoffs of starting out with a DAT",
    "start": "1353200",
    "end": "1359919"
  },
  {
    "text": "data oriented design that that go beyond performance maybe just code",
    "start": "1359919",
    "end": "1365919"
  },
  {
    "text": "readability uh maintainability that kind of thing so go is an object-oriented",
    "start": "1365919",
    "end": "1373120"
  },
  {
    "text": "programming language but I don't want people writing objectoriented programing",
    "start": "1373120",
    "end": "1378200"
  },
  {
    "text": "and go and I think that's the line I think if you're writing objectoriented software you're not thinking about the",
    "start": "1378200",
    "end": "1384520"
  },
  {
    "text": "data first you're thinking about all of those relationships and and object-oriented programming designs tend",
    "start": "1384520",
    "end": "1391520"
  },
  {
    "text": "to create link lists at the end of the day I mean that's what they're doing they're to me not sympathetic with the",
    "start": "1391520",
    "end": "1396720"
  },
  {
    "text": "way the hardware works today and so for me this is about separating where you can the data that",
    "start": "1396720",
    "end": "1403559"
  },
  {
    "text": "you're working on and then the the behavior that's that's going against that data and I a big fan of functions I",
    "start": "1403559",
    "end": "1410320"
  },
  {
    "text": "love functions one of the things that was so great when I got back when I got into to go was I had my functions back",
    "start": "1410320",
    "end": "1416039"
  },
  {
    "text": "not everything had to be a method on a class uh and I think functions can also help reduce a huge amount of your code",
    "start": "1416039",
    "end": "1423960"
  },
  {
    "text": "when you're using them in a sense where here's my state and here's some Behavior I mean methods play a huge role in go",
    "start": "1423960",
    "end": "1429760"
  },
  {
    "text": "I'm not saying that you're not going to have methods um but for me it's about not thinking about architecting things",
    "start": "1429760",
    "end": "1436440"
  },
  {
    "text": "in terms of an object oriented designer pattern but really thinking about this is the data the these are the",
    "start": "1436440",
    "end": "1442320"
  },
  {
    "text": "manipulations this is the input this is the output and how do I do that the least amount of code and now the data",
    "start": "1442320",
    "end": "1448880"
  },
  {
    "text": "oriented design uh concept came from the game programming world I I believe yes",
    "start": "1448880",
    "end": "1455919"
  },
  {
    "text": "so and a lot of their problems were were similar right they needed things to happen fast because they need High frame",
    "start": "1455919",
    "end": "1462279"
  },
  {
    "text": "rates so they tried to start organizing their code in a manner um so that they",
    "start": "1462279",
    "end": "1467960"
  },
  {
    "text": "so that the data that they were working with was spatially located so you know they they grouped the data they worked",
    "start": "1467960",
    "end": "1473440"
  },
  {
    "text": "with commonly together to pass around versus um working with objects yes right",
    "start": "1473440",
    "end": "1479520"
  },
  {
    "text": "they have to do n number of things in x amount of time and and time is not changing right so they have to make that",
    "start": "1479520",
    "end": "1486640"
  },
  {
    "text": "happen and so yeah they they started to learn that if they they had to be even",
    "start": "1486640",
    "end": "1491799"
  },
  {
    "text": "more sympathetic um than anyone else but I think the slice the idea of being able",
    "start": "1491799",
    "end": "1497480"
  },
  {
    "text": "to Leverage The Slice as much as possible when it is practical when it is reasonable is giving you a lot of this",
    "start": "1497480",
    "end": "1503919"
  },
  {
    "text": "without you even realizing it uh and that's one of the things I love about go is that go is given us the things that",
    "start": "1503919",
    "end": "1510520"
  },
  {
    "text": "we need and it's pushing us towards these things by saying well I'm not going to give you any other data structure and I'm giving you maps and",
    "start": "1510520",
    "end": "1516120"
  },
  {
    "text": "I'm giving you slices and even maps are leveraging contiguous memory underneath",
    "start": "1516120",
    "end": "1521799"
  },
  {
    "text": "and then with all the reference type values if we're not sharing them we're passing them around you know everybody gets a copy you're just get these things",
    "start": "1521799",
    "end": "1528840"
  },
  {
    "text": "but yeah I think I heard the term first from Mike Aton on a talk from 2014 where",
    "start": "1528840",
    "end": "1535440"
  },
  {
    "text": "he goes into lower level detail than some of it I can't even understand about how he's leveraging data or and design",
    "start": "1535440",
    "end": "1542640"
  },
  {
    "text": "um and that gaming systems that he's building so when we were researching the show I came up I found the term false",
    "start": "1542640",
    "end": "1549240"
  },
  {
    "text": "sharing how does that fit into this whole picture yeah so now we're getting really",
    "start": "1549240",
    "end": "1554720"
  },
  {
    "text": "deep inside the the hardware a little bit but the idea is that because every",
    "start": "1554720",
    "end": "1561720"
  },
  {
    "text": "core is going to be loaded with cash lines if you have let's say two threads",
    "start": "1561720",
    "end": "1569080"
  },
  {
    "text": "one each running on a different core working with the same data that happens",
    "start": "1569080",
    "end": "1574440"
  },
  {
    "text": "to be on the same cach line you now technically have two copies of that data",
    "start": "1574440",
    "end": "1580760"
  },
  {
    "text": "one in the cash for core one and one in the cash for core two and so um you",
    "start": "1580760",
    "end": "1588200"
  },
  {
    "text": "don't really have let's say and even if each thread is working with a different",
    "start": "1588200",
    "end": "1593279"
  },
  {
    "text": "bite on each cach line you don't have a concurrency issue there right you don't have a data race issue but you do have a",
    "start": "1593279",
    "end": "1599720"
  },
  {
    "text": "situation where the same data is now duplicated inside of a cache for two",
    "start": "1599720",
    "end": "1605320"
  },
  {
    "text": "different cores now the false sharing comes in because of that it's false sh you don't",
    "start": "1605320",
    "end": "1611840"
  },
  {
    "text": "really from your perspective you're not really sharing data but from the",
    "start": "1611840",
    "end": "1617000"
  },
  {
    "text": "hardware persp perspective this data is being shared the problem with faal sharing",
    "start": "1617000",
    "end": "1622200"
  },
  {
    "text": "doesn't come from Reading because if you're reading data I mean it's it's when that data gets mutated because as",
    "start": "1622200",
    "end": "1628559"
  },
  {
    "text": "soon as one thread on One Core mutates any data in that cach line all other",
    "start": "1628559",
    "end": "1634640"
  },
  {
    "text": "copies of that cach line in all other cores now have to be considered dirty",
    "start": "1634640",
    "end": "1640679"
  },
  {
    "text": "and when that other thread goes to do something on that cach line its own copy of The Cash Line and it's dirty you now",
    "start": "1640679",
    "end": "1647200"
  },
  {
    "text": "have to wait for a new version of the cach line to come in and so that can",
    "start": "1647200",
    "end": "1652240"
  },
  {
    "text": "create performance problems uh an example that Scott Myers uses is that somebody's created a global array of",
    "start": "1652240",
    "end": "1659679"
  },
  {
    "text": "counters so all of these counters let's say you know all these let's say there's 16 counters all on the same cach line",
    "start": "1659679",
    "end": "1667440"
  },
  {
    "text": "and you launch 16 threads each thread getting its own index of of a counter on",
    "start": "1667440",
    "end": "1674480"
  },
  {
    "text": "this cash line and all 16 threads getting their own core we now have 16 copies of this cach line of these",
    "start": "1674480",
    "end": "1681559"
  },
  {
    "text": "counters in every single core and every time one thread writes increments its",
    "start": "1681559",
    "end": "1686880"
  },
  {
    "text": "counter all other 15 other caches now have to be marked as dirty and you're chugging through memory because every",
    "start": "1686880",
    "end": "1693880"
  },
  {
    "text": "thread that does a plus plus on their counter is causing every other thread now to have to wait for their copy of",
    "start": "1693880",
    "end": "1700080"
  },
  {
    "text": "the cach line to get updated so that's really what fault sharing is all",
    "start": "1700080",
    "end": "1706440"
  },
  {
    "text": "about so an example of that would be if you had a single backing array holding",
    "start": "1706440",
    "end": "1711960"
  },
  {
    "text": "all of your counters yep so and and we see stuff like this all the time right",
    "start": "1711960",
    "end": "1717720"
  },
  {
    "text": "so like in your package if you had a publicly exported array or slice for",
    "start": "1717720",
    "end": "1723200"
  },
  {
    "text": "that matter that just isn't um isn't appended to well even when it is appended to but for example you have an",
    "start": "1723200",
    "end": "1729360"
  },
  {
    "text": "array of you know eight eight B integers that you're using as counters so your",
    "start": "1729360",
    "end": "1734440"
  },
  {
    "text": "example would be if each one of the threads used using those were scheduled onto different",
    "start": "1734440",
    "end": "1741200"
  },
  {
    "text": "CPUs um or cores um that incrementing any one of those would cause all of the",
    "start": "1741200",
    "end": "1748120"
  },
  {
    "text": "caches to be blown out for that particular Cash Line that's right because from your perspective you're not",
    "start": "1748120",
    "end": "1754519"
  },
  {
    "text": "caching but from the hardware perspective you are because every core has a unique has its own copy of that",
    "start": "1754519",
    "end": "1760880"
  },
  {
    "text": "same exact cach line so and I guess this kind of Echoes back to your um whole",
    "start": "1760880",
    "end": "1766640"
  },
  {
    "text": "data Orient design right because if you were if you were keeping all the data locally um that you're working with they",
    "start": "1766640",
    "end": "1773480"
  },
  {
    "text": "wouldn't be grouped together somewhere else right because the counters don't make sense together they make sense on",
    "start": "1773480",
    "end": "1778799"
  },
  {
    "text": "their individual so the solution to that is since every go routin stack and the",
    "start": "1778799",
    "end": "1785159"
  },
  {
    "text": "stack frame in that particular case for any go team is going to be on its own unique Cash Line the solution to",
    "start": "1785159",
    "end": "1791440"
  },
  {
    "text": "something like that would be to perform your counters on a local variable that would be on your C for each Say thread",
    "start": "1791440",
    "end": "1798919"
  },
  {
    "text": "or go you know for each thread in that case and therefore every time each thread performs a plus plus it's on a",
    "start": "1798919",
    "end": "1806279"
  },
  {
    "text": "unique cach line and at the end of that algorithm you might perform one last right to the",
    "start": "1806279",
    "end": "1812080"
  },
  {
    "text": "global um and that's not going to hurt you that's that's a one time boom boom boom boom and so right so data locality",
    "start": "1812080",
    "end": "1819320"
  },
  {
    "text": "when we're talking about not just reading but writing can also add a huge",
    "start": "1819320",
    "end": "1824559"
  },
  {
    "text": "help in terms of being sympathetic with the way the masing system works so if you had to pick just a couple takeaways",
    "start": "1824559",
    "end": "1831000"
  },
  {
    "text": "for everyone things to to be cognizant of When developing to be to start at least the Journey of being more",
    "start": "1831000",
    "end": "1837279"
  },
  {
    "text": "sympathetic to the hardware uh what would those be I tell everyone if they're not sure how to do something ask",
    "start": "1837279",
    "end": "1845000"
  },
  {
    "text": "the question around what is the most idiomatic way to do this and go because many of those answers are already tuned",
    "start": "1845000",
    "end": "1852559"
  },
  {
    "text": "to being sympathetic with the operating system or the hardware the next thing I tell people is if you're working with",
    "start": "1852559",
    "end": "1858399"
  },
  {
    "text": "data try to work with slices of values as your initial load of data you can",
    "start": "1858399",
    "end": "1864279"
  },
  {
    "text": "share different elements of those slices but the core data you're working with we try to keep it as contiguous as possible",
    "start": "1864279",
    "end": "1871559"
  },
  {
    "text": "it's not going to be perfect because you're going to have strings and you're going to have reference types that will",
    "start": "1871559",
    "end": "1877039"
  },
  {
    "text": "have pointers to things but the compiler your tool it's going to do its best if we work with it to to help us there and",
    "start": "1877039",
    "end": "1883720"
  },
  {
    "text": "try to think about if you're working with very large sets of data what are the working SE that you might be working",
    "start": "1883720",
    "end": "1888840"
  },
  {
    "text": "with at any given time try to keep that together um and really try to avoid when",
    "start": "1888840",
    "end": "1894320"
  },
  {
    "text": "you can when it's practical things like link lists that are not going to really help you create predictable access",
    "start": "1894320",
    "end": "1900960"
  },
  {
    "text": "patterns there are times where whatever you're doing the algorithms you're trying to build are not they're they're",
    "start": "1900960",
    "end": "1907360"
  },
  {
    "text": "just not going to be practical for arrays and and linear traversals and things that is what it is but I think a",
    "start": "1907360",
    "end": "1913919"
  },
  {
    "text": "lot of times you can lay that data out in a way and work with it in a way where where you can gain these um sympathies",
    "start": "1913919",
    "end": "1921840"
  },
  {
    "text": "and still implement the algorithms that you're trying to implement so what about laying out your data at a lower level um",
    "start": "1921840",
    "end": "1929760"
  },
  {
    "text": "I I know when we talked about this a few months ago when you came to visit us in Tampa you talked about the size of the",
    "start": "1929760",
    "end": "1935080"
  },
  {
    "text": "structs and keeping them within word boundaries um how does that affect",
    "start": "1935080",
    "end": "1940799"
  },
  {
    "text": "processing speed I'm not really sure if I said that I'm not the if it's data",
    "start": "1940799",
    "end": "1948720"
  },
  {
    "text": "right so to me when I look at a struct I look at it in two different ways what I'll ask is does this struct represent",
    "start": "1948720",
    "end": "1954760"
  },
  {
    "text": "like pure data or is it a struct that's going to be some sort of concept like a pool of go or change I'm creating a pool",
    "start": "1954760",
    "end": "1960559"
  },
  {
    "text": "of go or change I'm going to create multiple instances of this thing it's managing go or changes let me do work that's that's one thing right but if the",
    "start": "1960559",
    "end": "1968000"
  },
  {
    "text": "struct is going to be pure data then the size of that struct is what it needs to",
    "start": "1968000",
    "end": "1973200"
  },
  {
    "text": "be whether it's 4K or 24 bytes it is what it is but what I'm looking at then",
    "start": "1973200",
    "end": "1979240"
  },
  {
    "text": "is the concept of of padding right if it's pure data where I'm going to create",
    "start": "1979240",
    "end": "1984760"
  },
  {
    "text": "100 thousands of these strs and even lay them out continuously in memory I don't",
    "start": "1984760",
    "end": "1990320"
  },
  {
    "text": "want to lay the fields out in such a way where I'm going to get extra padding bites in between that's going to cause",
    "start": "1990320",
    "end": "1996639"
  },
  {
    "text": "me now to have to use more memory than I need to but that's only when the struct",
    "start": "1996639",
    "end": "2003080"
  },
  {
    "text": "in my in my view the struct is really pure data other than that I want to lay Fields out in a struct that makes sense",
    "start": "2003080",
    "end": "2009840"
  },
  {
    "text": "organizationally to what that struct is doing so yeah sorry I was just going to",
    "start": "2009840",
    "end": "2015559"
  },
  {
    "text": "say so one of the things I think might come into play there if you look at strs is if the struck is large enough where",
    "start": "2015559",
    "end": "2021559"
  },
  {
    "text": "it doesn't all fit in a cash line right if you're using if you're using",
    "start": "2021559",
    "end": "2027399"
  },
  {
    "text": "properties at the top of it and at the bottom of it you could keep blowing out The Cash Line as you're just doing",
    "start": "2027399",
    "end": "2033320"
  },
  {
    "text": "typical work so I think sometimes it might come into play to organize your struct in a manner so that the things",
    "start": "2033320",
    "end": "2040039"
  },
  {
    "text": "that are often used together are grouped together to ensure that they align properly but I mean this gets into like",
    "start": "2040039",
    "end": "2048079"
  },
  {
    "text": "going in depth into performance optimizations and you know sometimes",
    "start": "2048079",
    "end": "2053158"
  },
  {
    "text": "it's a little too far right that could be a level of micro optimization if these strs let's say",
    "start": "2053159",
    "end": "2059679"
  },
  {
    "text": "they do span over 64 bytes they're still being laid out across two cache lines",
    "start": "2059679",
    "end": "2064720"
  },
  {
    "text": "right and the next one might be laying into the next one so you still might see the same sympathies anyway um if you",
    "start": "2064720",
    "end": "2071679"
  },
  {
    "text": "start mutating these things right then we go back to the fault sharing issues and you know the hardware today is",
    "start": "2071679",
    "end": "2078240"
  },
  {
    "text": "designed to copy copy data really really fast too and so I I tell people don't",
    "start": "2078240",
    "end": "2085440"
  },
  {
    "text": "panic because you think you've got a a struct that's too large to copy and now we're just going to start sharing it",
    "start": "2085440",
    "end": "2092040"
  },
  {
    "text": "everywhere right like until you performance until you do some performance profiling you don't you",
    "start": "2092040",
    "end": "2097440"
  },
  {
    "text": "don't really know so I rather the code be really reasonable around what we're",
    "start": "2097440",
    "end": "2103119"
  },
  {
    "text": "trying to solve and not start thinking about performance as you're writing the code we can always go in performance and",
    "start": "2103119",
    "end": "2109680"
  },
  {
    "text": "profile it later and we just might decide that you know what yeah this was too large to make copies of based on how",
    "start": "2109680",
    "end": "2116480"
  },
  {
    "text": "we're using it and it was better performing and sharing this um across",
    "start": "2116480",
    "end": "2121880"
  },
  {
    "text": "these program boundaries what are some easy things to do some easy rule of thumbs that can",
    "start": "2121880",
    "end": "2129280"
  },
  {
    "text": "help people achieve this data oriented design thinking about grouping data that",
    "start": "2129280",
    "end": "2136160"
  },
  {
    "text": "you're going to use together in the same place how how do you when you start out",
    "start": "2136160",
    "end": "2142720"
  },
  {
    "text": "a uh program how do you think about these things I I really believe that every",
    "start": "2142720",
    "end": "2149680"
  },
  {
    "text": "problem we solve is a data problem it's some data manipulation and so the very first thing I'm doing on projects is I'm",
    "start": "2149680",
    "end": "2156000"
  },
  {
    "text": "asking what is the data that we're working with what is my input and what is it we're trying to achieve where where are we trying to get to right",
    "start": "2156000",
    "end": "2162319"
  },
  {
    "text": "here's my input here's my output and then we can start thinking about how we're going to get from from here to",
    "start": "2162319",
    "end": "2167720"
  },
  {
    "text": "there and sometimes these are really complex problems right we've got to break them down into really really small",
    "start": "2167720",
    "end": "2175720"
  },
  {
    "text": "obtainable smaller data transformation problems and that's for me when I start thinking about what does this data look",
    "start": "2175720",
    "end": "2181680"
  },
  {
    "text": "like is some of this pure data is some of this more constructs around how we",
    "start": "2181680",
    "end": "2186960"
  },
  {
    "text": "want to do the manipulations and then things that like Eric and Brian were already saying well we know that this is going to go across",
    "start": "2186960",
    "end": "2194359"
  },
  {
    "text": "maybe multiple cach lines is a pretty large data can we group The working sets together these types of things um I",
    "start": "2194359",
    "end": "2200920"
  },
  {
    "text": "don't get completely paralyzed over it because we have to solve the problem if",
    "start": "2200920",
    "end": "2206599"
  },
  {
    "text": "you don't get something to work you can't apply almost you can't do any of this you got to get something to work",
    "start": "2206599",
    "end": "2212359"
  },
  {
    "text": "first but I think what's brilliant is go is pushing Us in the the direction to do",
    "start": "2212359",
    "end": "2217920"
  },
  {
    "text": "things fairly right the first time if we follow the idioms if we work with slices of values if we're we're doing things",
    "start": "2217920",
    "end": "2225520"
  },
  {
    "text": "the way that as a community over the last few years we've been we've been directing people to do so do you have",
    "start": "2225520",
    "end": "2231160"
  },
  {
    "text": "any resources for us to and I go out and start exploring these Concepts oh yeah",
    "start": "2231160",
    "end": "2236400"
  },
  {
    "text": "on the on the go training um GitHub repo under ardan labot trining I actually",
    "start": "2236400",
    "end": "2242560"
  },
  {
    "text": "have a folder in there called reading and I've got a ton of links I've kind of pulled out for people to to read and",
    "start": "2242560",
    "end": "2250040"
  },
  {
    "text": "there's a whole section there around CPU caches and the Linux operating system and how the schedule works and things",
    "start": "2250040",
    "end": "2255760"
  },
  {
    "text": "like that then throughout the training material for each section there's a ton of links and resources to learn more so",
    "start": "2255760",
    "end": "2263520"
  },
  {
    "text": "everything that I know is comes from these videos and articles and I'm always rereading them as well because there's",
    "start": "2263520",
    "end": "2269680"
  },
  {
    "text": "so much air it takes me sometimes a couple of months to absorb some stuff and then I'll go back and read it again",
    "start": "2269680",
    "end": "2276240"
  },
  {
    "text": "and get more so yeah it's all out there and I've tried to create a good collection of this this stuff and it's",
    "start": "2276240",
    "end": "2282480"
  },
  {
    "text": "all there in the training repo all right I have a little bit of a change of a subject um there's a Grassroots movement",
    "start": "2282480",
    "end": "2288839"
  },
  {
    "text": "going around I'm not sure if you're aware of it but there are several people that are talking about cosplaying as you",
    "start": "2288839",
    "end": "2294280"
  },
  {
    "text": "this year at gophercon did you know about this uh could you give them some advice on maybe where to find the Hat I",
    "start": "2294280",
    "end": "2301400"
  },
  {
    "text": "say that again they want the Hat they're they're looking to dress up as you this year at gopher con",
    "start": "2301400",
    "end": "2307040"
  },
  {
    "text": "several people have mentioned it that is too expensive to be playing",
    "start": "2307040",
    "end": "2313000"
  },
  {
    "text": "that game I'm gonna put this out there free beer for anybody who comes dressed as Bill",
    "start": "2313000",
    "end": "2318960"
  },
  {
    "text": "Kennedy oh my God I will drink tickets all",
    "start": "2318960",
    "end": "2326359"
  },
  {
    "text": "night I I will even steal the real hat and give it to yout has if that's all",
    "start": "2327920",
    "end": "2334240"
  },
  {
    "text": "you're missing oh oh that's priceless so we",
    "start": "2334240",
    "end": "2339359"
  },
  {
    "text": "know you're a busy guy Bill um you've got workshops going on at goer con you've got the book going on is there",
    "start": "2339359",
    "end": "2344960"
  },
  {
    "text": "anything you want to tell us about any of those things that you've got going on other than your training the the the thing I mean the",
    "start": "2344960",
    "end": "2351800"
  },
  {
    "text": "trainings are always really exciting and I'm really excited to be doing a Nats workshop on the on the third day of go",
    "start": "2351800",
    "end": "2358960"
  },
  {
    "text": "for con but I think one of the things I'm really excited about right now is um",
    "start": "2358960",
    "end": "2364200"
  },
  {
    "text": "caria and I um through gbridge we started the remote Meetup platform and we're putting a an Allstar",
    "start": "2364200",
    "end": "2372280"
  },
  {
    "text": "lineup of speakers together right now that will start speaking um in June and",
    "start": "2372280",
    "end": "2378200"
  },
  {
    "text": "July and it's it's going to be awesome because doesn't matter where you live everybody's going to be able to come",
    "start": "2378200",
    "end": "2383880"
  },
  {
    "text": "together and and the platform the big Mark uh Market platform is uh really amazing in terms of being able to have",
    "start": "2383880",
    "end": "2389880"
  },
  {
    "text": "collaboration um but the real goal for us here is not for gbridge to have a remote Meetup but but for anybody no",
    "start": "2389880",
    "end": "2397200"
  },
  {
    "text": "matter where they live to be able to start their own Meetup to be able to find their speakers of the things that",
    "start": "2397200",
    "end": "2403400"
  },
  {
    "text": "they're interested in and and have a Meetup even if they're the only person that lives in this small town or remote",
    "start": "2403400",
    "end": "2408680"
  },
  {
    "text": "area of the world start a meet up find people who have similar interests find your own speakers and and and start to",
    "start": "2408680",
    "end": "2415920"
  },
  {
    "text": "meet you know I'm I'm really hoping that we can see another 10 or 15 go meetups",
    "start": "2415920",
    "end": "2421040"
  },
  {
    "text": "by the end of the year all being driven around this idea of a remote Meetup that's a neat idea yeah Brian and I uh",
    "start": "2421040",
    "end": "2427920"
  },
  {
    "text": "commonly don't make it out to the Tampa one I mean time gets the better of you so right but I know so many people that",
    "start": "2427920",
    "end": "2434079"
  },
  {
    "text": "come to me and they they they get even me when I'm in Miami in San Francisco's",
    "start": "2434079",
    "end": "2439240"
  },
  {
    "text": "holding a Meetup with people that I want to hear and I can't get out there it's",
    "start": "2439240",
    "end": "2445280"
  },
  {
    "text": "you know it can be depressing sometimes but what what's great about this is is",
    "start": "2445280",
    "end": "2450480"
  },
  {
    "text": "you're going to be able to really start your own Meetup and speakers from all around the world can come in and you",
    "start": "2450480",
    "end": "2456400"
  },
  {
    "text": "don't have to feel like you're missing out and I love the go Community right I mean you can reach out anybody can reach",
    "start": "2456400",
    "end": "2463079"
  },
  {
    "text": "out to Brian and say Brian will you give me a can you do a talk for a Meetup and Brian's gonna say yes he will say yes I",
    "start": "2463079",
    "end": "2468720"
  },
  {
    "text": "will say yes so many say yes on his behalf I can't get Eric to say yes but we're gonna get Eric to say yes one day",
    "start": "2468720",
    "end": "2475200"
  },
  {
    "text": "too one day B do you want to mention some of the people that have already",
    "start": "2475200",
    "end": "2480920"
  },
  {
    "text": "agreed to do a a Meetup yeah so we have um I hope I'm",
    "start": "2480920",
    "end": "2486680"
  },
  {
    "text": "pronouncing her last name right B Tammy Boo from Dropbox who's scheduled to talk",
    "start": "2486680",
    "end": "2491760"
  },
  {
    "text": "I haven't published this yet um Kelsey high tower has agreed to give a talk too",
    "start": "2491760",
    "end": "2497200"
  },
  {
    "text": "um so I'll be publishing um that very soon on the days that are there and",
    "start": "2497200",
    "end": "2502440"
  },
  {
    "text": "we've reached out to a few more people I haven't gotten confirmations yet so hopefully they're going to be coming in",
    "start": "2502440",
    "end": "2508599"
  },
  {
    "text": "soon and we'll publish that on our Meetup page and um you know we'll tweet that out and we're really really excited",
    "start": "2508599",
    "end": "2514240"
  },
  {
    "text": "about that that's really awesome yes and and I suggest people to sign up",
    "start": "2514240",
    "end": "2519680"
  },
  {
    "text": "there is a limit of 100 attende DS so when you",
    "start": "2519680",
    "end": "2524800"
  },
  {
    "text": "see um the the Tweet going out just go and sign up so you don't be left out and",
    "start": "2524800",
    "end": "2531319"
  },
  {
    "text": "I have to say um compose.io is sponsoring our Plus",
    "start": "2531319",
    "end": "2536760"
  },
  {
    "text": "account that gives us the 100 people so we're really excited that they stepped up and um they're supporting the go",
    "start": "2536760",
    "end": "2543400"
  },
  {
    "text": "Community absolutely that's great there also goer con sponsors so double props",
    "start": "2543400",
    "end": "2548440"
  },
  {
    "text": "to them yeah so that's what I'm kind of focusing on now um with what little time",
    "start": "2548440",
    "end": "2554040"
  },
  {
    "text": "I have trying to get enough speakers set up and really show people the power of the platform so others will come in and",
    "start": "2554040",
    "end": "2559160"
  },
  {
    "text": "start their own meetups at the end of the day that's what I would love to see I don't think you're quite busy enough",
    "start": "2559160",
    "end": "2565160"
  },
  {
    "text": "bill it's not like you travel or anything I mean no well you know I have a lot of time on",
    "start": "2565160",
    "end": "2572480"
  },
  {
    "text": "planes uh so sleep on them oh I can't can't I can't sleep in cars I can't",
    "start": "2572800",
    "end": "2577960"
  },
  {
    "text": "sleep on planes I I just in general I can't sleep I",
    "start": "2577960",
    "end": "2583200"
  },
  {
    "text": "guess uh so typically like I guess we're running out of time here but uh typically the way we close out uh the",
    "start": "2583200",
    "end": "2589240"
  },
  {
    "text": "shows is we like to thank open source projects that have kind of made our",
    "start": "2589240",
    "end": "2594839"
  },
  {
    "text": "lives better and easier just to show appreciation so we'll quickly go around",
    "start": "2594839",
    "end": "2600319"
  },
  {
    "text": "the virtual room here and everybody can give a quick shout out Bill if you've got one handy you're welcome to",
    "start": "2600319",
    "end": "2606640"
  },
  {
    "text": "one that I've been working on um because I I do some work on the coral project",
    "start": "2606640",
    "end": "2611839"
  },
  {
    "text": "which is an open source project is Anvil iio which is providing um authentication",
    "start": "2611839",
    "end": "2617200"
  },
  {
    "text": "and authorization it's all written in node um but we've added some some ghost",
    "start": "2617200",
    "end": "2622319"
  },
  {
    "text": "support on the client side and and it's a really cool platform awesome Brian so",
    "start": "2622319",
    "end": "2628280"
  },
  {
    "text": "uh one of the projects that I wanted to shout out this week was go validator uh it's the link will be in the show notes",
    "start": "2628280",
    "end": "2633960"
  },
  {
    "text": "but if you've ever had to validate in bound data you know how painful it is to write that Rex for email validation or",
    "start": "2633960",
    "end": "2641040"
  },
  {
    "text": "credit card validations this is a uh a project by Alex sasich that collects all",
    "start": "2641040",
    "end": "2648920"
  },
  {
    "text": "of the important validations that you might need to do for incoming data and it's it's just a treasure Trove of of",
    "start": "2648920",
    "end": "2654720"
  },
  {
    "text": "good validations you know even if you're against dependencies this is one you",
    "start": "2654720",
    "end": "2659760"
  },
  {
    "text": "want to have because they're very nicely organized list of things to validate your data excellent caria I want to give",
    "start": "2659760",
    "end": "2668599"
  },
  {
    "text": "a shout out to Joe fit fitzal can't pronounce it properly he is",
    "start": "2668599",
    "end": "2675240"
  },
  {
    "text": "the one who does all the go uh packages for Adam and he does an amazing job he",
    "start": "2675240",
    "end": "2682160"
  },
  {
    "text": "has a go plus and autocomplete go go",
    "start": "2682160",
    "end": "2688280"
  },
  {
    "text": "meta lter and tester go a bunch of packages I use them all the time he's",
    "start": "2688280",
    "end": "2694640"
  },
  {
    "text": "amazing he's frequently on the editor channnel on goer slack and very helpful",
    "start": "2694640",
    "end": "2701599"
  },
  {
    "text": "love the things that he's doing for Adam thank you Joe I didn't even know there was an editor Channel these these",
    "start": "2701599",
    "end": "2708200"
  },
  {
    "text": "channels pop up too fast like wait there's a channel for that some is there a barbecue Channel",
    "start": "2708200",
    "end": "2714160"
  },
  {
    "text": "there is now there is a bar Channel there is yeah that's a silly",
    "start": "2714160",
    "end": "2719319"
  },
  {
    "text": "question so this is funny this is kind of sidelining here but somebody made a comment about like needing a barbecue",
    "start": "2719319",
    "end": "2726200"
  },
  {
    "text": "gopher so we're like we should totally see whether the ardan guys will create one for us and there apparently already",
    "start": "2726200",
    "end": "2731680"
  },
  {
    "text": "exists one there's already a goer like standing at a grill or what I forget what it looks like now he's standing at",
    "start": "2731680",
    "end": "2737960"
  },
  {
    "text": "a grill he's got a cowboy hat on he's got an apron and he's got the barbecue tongs and I can tell you that the shirts",
    "start": "2737960",
    "end": "2743839"
  },
  {
    "text": "have already been ordered where's mine on it's in the mail Eric",
    "start": "2743839",
    "end": "2750119"
  },
  {
    "text": "sweet uh so for me I'm going to thank Hashi Corp uh particularly I'm using their lru cash this week um that they",
    "start": "2750119",
    "end": "2757520"
  },
  {
    "text": "have available but uh many times before grying to you know vagrant Vault uh",
    "start": "2757520",
    "end": "2764880"
  },
  {
    "text": "console there so many other tools are useful so I'm just going to Blink itly say ashy core so we encourage everybody",
    "start": "2764880",
    "end": "2772200"
  },
  {
    "text": "else to thank their favorite open source projects through uh Twitter or any other",
    "start": "2772200",
    "end": "2777359"
  },
  {
    "text": "social media um reaching out is often just a good thing as Brian spoke to in I",
    "start": "2777359",
    "end": "2783480"
  },
  {
    "text": "think it was episode one um you know just getting that that comment from people makes it all the difference",
    "start": "2783480",
    "end": "2789880"
  },
  {
    "text": "sometimes so with that said I think we are out of time unfortunately but it has been quite a fun episode and uh we",
    "start": "2789880",
    "end": "2798440"
  },
  {
    "text": "definitely want to thank bill for coming on the show with us and I'm I know myself I'm going to be digging through more of the stuff he's got in the",
    "start": "2798440",
    "end": "2804640"
  },
  {
    "text": "training material because I've got tons of free time too right all of",
    "start": "2804640",
    "end": "2810079"
  },
  {
    "text": "us exactly and thanks for having me on this was a lot of fun definitely want to",
    "start": "2810079",
    "end": "2815200"
  },
  {
    "text": "thank bill or I'm sorry Brian and caresia for for the panel I think this",
    "start": "2815200",
    "end": "2820680"
  },
  {
    "text": "has been one of my favorite episodes um thank everybody who's listening I think",
    "start": "2820680",
    "end": "2825760"
  },
  {
    "text": "uh Adam told us what there's like 25 plus people listening this week live that's crazy so yeah it's great",
    "start": "2825760",
    "end": "2832880"
  },
  {
    "text": "it's growing yeah so um we also uh released our first episode which is both",
    "start": "2832880",
    "end": "2838559"
  },
  {
    "text": "good and terrible scary yeah yeah definitely",
    "start": "2838559",
    "end": "2843680"
  },
  {
    "text": "scary but you can get it so gotime FM will redirect to uh change log site",
    "start": "2843680",
    "end": "2850440"
  },
  {
    "text": "where our first episode is hosted while the CMS is completed by popular demand",
    "start": "2850440",
    "end": "2855559"
  },
  {
    "text": "we have started releasing episodes uh before the CMS is completed so you'll find that there and uh probably within",
    "start": "2855559",
    "end": "2862520"
  },
  {
    "text": "the next week um some more episodes will be dropping uh for everybody who's uh",
    "start": "2862520",
    "end": "2868800"
  },
  {
    "text": "impatient um I don't know whether the newsletter signup is on that site but if",
    "start": "2868800",
    "end": "2874359"
  },
  {
    "text": "it's not it is there or will be here soon um so keep checking back to the go time FM to to sign back",
    "start": "2874359",
    "end": "2880720"
  },
  {
    "text": "up uh iTunes will drop I think in about a week and a half uh something like that",
    "start": "2880720",
    "end": "2885760"
  },
  {
    "text": "because they take forever to approve unless they tell us for some reason they don't like our",
    "start": "2885760",
    "end": "2891520"
  },
  {
    "text": "show not approved so uh we are on Twitter at gotime FM um when you are listening live",
    "start": "2891520",
    "end": "2899839"
  },
  {
    "text": "uh go time FM channel on slack you can also socialize with us and did I miss",
    "start": "2899839",
    "end": "2905040"
  },
  {
    "text": "anything did we get it all no it was a busy episode all right awesome so with",
    "start": "2905040",
    "end": "2911040"
  },
  {
    "text": "that uh thanks everybody for being on the show and we'll see you next week bye",
    "start": "2911040",
    "end": "2916800"
  },
  {
    "text": "goodbye [Music]",
    "start": "2916800",
    "end": "2934209"
  },
  {
    "text": "bye [Music]",
    "start": "2934599",
    "end": "2939569"
  }
]