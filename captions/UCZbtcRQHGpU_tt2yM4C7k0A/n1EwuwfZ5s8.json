[
  {
    "text": "you're going to have to get in line on the Jordan proposal like I think I beat you to that okay well I'm cutting the",
    "start": "40",
    "end": "6160"
  },
  {
    "text": "line have you ever been propositioned on a podcast before this is turning weird but as you",
    "start": "6160",
    "end": "12240"
  },
  {
    "text": "said kall this is a day of Firsts okay this is so plot twist Jordan we actually",
    "start": "12240",
    "end": "17680"
  },
  {
    "text": "brought you here to pitch you all of our ideas this is like sh tank but for tc39",
    "start": "17680",
    "end": "23880"
  },
  {
    "text": "yeah we're holding him hostage actually can we just can we just Advance some proposals now that we have you hostage",
    "start": "23880",
    "end": "31960"
  },
  {
    "text": "B with for change log is provided by fastly learn more at fastly.com we move",
    "start": "31960",
    "end": "37520"
  },
  {
    "text": "fast and fix things here at Chang law because of rbar check them out at rar.com and we're hosted on linode cloud",
    "start": "37520",
    "end": "43840"
  },
  {
    "text": "servers head to lin.com change log this episode of Ja party is brought",
    "start": "43840",
    "end": "51239"
  },
  {
    "text": "to you by robbar deploy with confidence more often spend less time worrying and",
    "start": "51239",
    "end": "56359"
  },
  {
    "text": "more time on improving your code you can feel safe knowing every errors reported in real time with rbar check them out at",
    "start": "56359",
    "end": "63079"
  },
  {
    "text": "rar.com [Music]",
    "start": "63079",
    "end": "73880"
  },
  {
    "text": "welcome to JS party a weekly celebration of JavaScript and the web I'm Adam",
    "start": "73880",
    "end": "79280"
  },
  {
    "text": "stovak editor-in Chief here at change log and today kall is joined by ml Hussein and Emma bosan with special",
    "start": "79280",
    "end": "86400"
  },
  {
    "text": "guest Jordan harban discussing what's happening in tc39 land stay tuned to next week's show with special guest",
    "start": "86400",
    "end": "92799"
  },
  {
    "text": "Stephanie Mario coming on to talk about creating that content all right here we",
    "start": "92799",
    "end": "98680"
  },
  {
    "text": "[Applause]",
    "start": "98900",
    "end": "103989"
  },
  {
    "text": "go hello JS party people and welcome to this week's JS party I am kall I will be",
    "start": "108119",
    "end": "115640"
  },
  {
    "text": "your MC today and I am joined by three wonderful people so excited to introduce",
    "start": "115640",
    "end": "121039"
  },
  {
    "text": "especially because I have three firsts going on so first off Emma is joining us this is the first time I'm on a podcast",
    "start": "121039",
    "end": "127719"
  },
  {
    "text": "with you since you moved how's it going Emma it's going great I'm living in a house full of",
    "start": "127719",
    "end": "133080"
  },
  {
    "text": "cardboard Ikea I literally live in Ikea now so it's great awesome next AML first",
    "start": "133080",
    "end": "139599"
  },
  {
    "text": "time I'm on a episode with you when you're actually on the team I think we've interviewed before but welcome so",
    "start": "139599",
    "end": "145480"
  },
  {
    "text": "excited to have you thank you so excited to be here uh k and next we have a super",
    "start": "145480",
    "end": "152080"
  },
  {
    "text": "special guest Jordan Harbor and is joining us to talk about tc39 and what's",
    "start": "152080",
    "end": "158760"
  },
  {
    "text": "coming down to the bite Jordan how you doing good thanks great to be here so let's get started by talking a little",
    "start": "158760",
    "end": "165000"
  },
  {
    "text": "bit Jordan can you kind of introduce yourself and what your role is with tc39 yeah sure uh so I'm Jordan like I I",
    "start": "165000",
    "end": "173000"
  },
  {
    "text": "kind of have two roles couple roles on tc39 the primary one is actually just as",
    "start": "173000",
    "end": "178120"
  },
  {
    "text": "a delegate uh meaning I represent my employer and you know provide feedback",
    "start": "178120",
    "end": "184159"
  },
  {
    "text": "on proposals Champion proposals myself and attend the meetings which are six times a year but the other role that I",
    "start": "184159",
    "end": "190319"
  },
  {
    "text": "have is I'm one of the editors of the specification and have been for about two and a half years at the moment there's four uh the number has changed",
    "start": "190319",
    "end": "197560"
  },
  {
    "text": "historically there was one and now we have kind of a group of people to help uh share the workload uh and so the",
    "start": "197560",
    "end": "202879"
  },
  {
    "text": "editors are responsible for uh merging changes into the specification once the",
    "start": "202879",
    "end": "209400"
  },
  {
    "text": "Committees agreed on them and you know can can make editorial judgment calls about how things are worded but you know",
    "start": "209400",
    "end": "215080"
  },
  {
    "text": "the semantics are decided by The Wider committee all right and just in case anyone on our listening crew doesn't",
    "start": "215080",
    "end": "221159"
  },
  {
    "text": "know already tc39 the specification you are editing is sorry yes uh tc39 is the",
    "start": "221159",
    "end": "227400"
  },
  {
    "text": "technical committee that writes the specification for JavaScript the language that runs in web browsers so",
    "start": "227400",
    "end": "233280"
  },
  {
    "text": "exceedingly relevant for those of us on JS party so let's do just a super quick overview of what the process is and then",
    "start": "233280",
    "end": "239360"
  },
  {
    "text": "dive into the fun stuff about what are the things coming down the pipe yeah absolutely so uh ever since 2015 es6",
    "start": "239360",
    "end": "246720"
  },
  {
    "text": "we've been operating under a process where every year we release a new addition of the specification with whatever changes have landed in the",
    "start": "246720",
    "end": "252920"
  },
  {
    "text": "interim uh and there's a process for with multiple stages for proposals to",
    "start": "252920",
    "end": "258519"
  },
  {
    "text": "move through in order to land in the language uh so the earliest stage is",
    "start": "258519",
    "end": "263680"
  },
  {
    "text": "stage zero which is you know kind of like I got this wild idea stage one is the committee agrees that this is is a",
    "start": "263680",
    "end": "270360"
  },
  {
    "text": "problem that we need to explore further stage two is that uh this is a solution",
    "start": "270360",
    "end": "275560"
  },
  {
    "text": "we want to solve the problem and put it in a solution in the language and we have a pretty good idea of what that solution looks like stage three is the",
    "start": "275560",
    "end": "282199"
  },
  {
    "text": "solution's pretty much finished and until it's actually implemented we can't be you know and shift in browsers and",
    "start": "282199",
    "end": "287720"
  },
  {
    "text": "other engines we can't be you know we won't know about any other changes we need to make uh until that time and then",
    "start": "287720",
    "end": "293960"
  },
  {
    "text": "stage four is when it's finished and lands in the specification and so with Babel we can start using these about stage zero right",
    "start": "293960",
    "end": "300919"
  },
  {
    "text": "so certainly you could you have the ability to do so but I phrased those stages very carefully in that the actual",
    "start": "300919",
    "end": "308400"
  },
  {
    "text": "solution isn't finalized until stage three so or the earlier in the stage",
    "start": "308400",
    "end": "313680"
  },
  {
    "text": "process that you use something the more likely it is to change in a way that will cause a lot of churn and breakage",
    "start": "313680",
    "end": "320280"
  },
  {
    "text": "in your code base so while it's great to experiment with early stage proposals uh it's generally a very ill-advised idea",
    "start": "320280",
    "end": "327880"
  },
  {
    "text": "to use them in production before stage three yeah thanks for asking that very poignant question kall because for me",
    "start": "327880",
    "end": "335560"
  },
  {
    "text": "stage zero is like an idea right stage zero is anybody from the internet can",
    "start": "335560",
    "end": "341960"
  },
  {
    "text": "submit a poll request and it's a stage zero proposal right so there's there's no kind of barrier to entry well I mean",
    "start": "341960",
    "end": "348680"
  },
  {
    "text": "and anyone is actually actually Jordan could you clarify that yeah absolutely so um anyone can write a proposal but in",
    "start": "348680",
    "end": "355800"
  },
  {
    "text": "order to be considered an actual proposal a tc39 delegate has to Champion",
    "start": "355800",
    "end": "361800"
  },
  {
    "text": "it meaning has to put their name to it and agree to kind of drive it through the process uh and sheph it and there",
    "start": "361800",
    "end": "367960"
  },
  {
    "text": "can be more than one Champion but there has to be at least one uh and although there's not a strict requirement for",
    "start": "367960",
    "end": "373520"
  },
  {
    "text": "stage zero Beyond it's got a champion uh typically we don't add things to the",
    "start": "373520",
    "end": "378759"
  },
  {
    "text": "list uh in the proposals repo on GitHub until it's both championed and also like",
    "start": "378759",
    "end": "384599"
  },
  {
    "text": "at least added onto an agenda you know planned to be discussed at an upcoming meeting okay got it so there is a",
    "start": "384599",
    "end": "390880"
  },
  {
    "text": "anybody view but that anybody view is in the poll requests like as opposed to the merged items that reflect on the list is",
    "start": "390880",
    "end": "398160"
  },
  {
    "text": "that correct right okay got it yeah and certainly anybody could author a pull request to change something in a",
    "start": "398160",
    "end": "404360"
  },
  {
    "text": "specification but we have two categories two big categories editorial and normative editorial is like you just",
    "start": "404360",
    "end": "410440"
  },
  {
    "text": "worded it differently you spelled some things differently uh normative is where like runtime JavaScript code could observe the difference and normative",
    "start": "410440",
    "end": "417120"
  },
  {
    "text": "changes require committee agreement committee consent and depending on what the change is you",
    "start": "417120",
    "end": "422319"
  },
  {
    "text": "know we sort of make judgment calls as to whether something needs to be a proposal or just a poll request what are",
    "start": "422319",
    "end": "427879"
  },
  {
    "text": "some of the strangest proposals that have come through I think that there have been a",
    "start": "427879",
    "end": "433360"
  },
  {
    "text": "lot of ideas that people have I'm hesitant to call out specific ones because I don't want the individuals who",
    "start": "433360",
    "end": "439039"
  },
  {
    "text": "came up with them to be discouraged but I would say that folks",
    "start": "439039",
    "end": "444960"
  },
  {
    "text": "often will have a favorite Concept in a different language and will naturally",
    "start": "444960",
    "end": "450039"
  },
  {
    "text": "expect that concept to work in JavaScript and will come up with what",
    "start": "450039",
    "end": "455080"
  },
  {
    "text": "they think is a good solution to provide that feature without really thinking through all the the rest of the",
    "start": "455080",
    "end": "460960"
  },
  {
    "text": "consequences and so it might be that the concept is actually great but that solution is inappropriate for JavaScript",
    "start": "460960",
    "end": "467800"
  },
  {
    "text": "but it also could be that that concept is inappropriate for JavaScript and those discussions are difficult to have",
    "start": "467800",
    "end": "473960"
  },
  {
    "text": "without discouraging people from interacting so like I I'm sure I could dredge up specifics but I don't have",
    "start": "473960",
    "end": "479759"
  },
  {
    "text": "anything off the top of my head I'm curious how did you become part of the tc39 panel sure so I was maintaining the",
    "start": "479759",
    "end": "487520"
  },
  {
    "text": "es5 shim and es6 shim back in 2014 I still am but that was at the time they",
    "start": "487520",
    "end": "493159"
  },
  {
    "text": "were basically the primary way anybody polyfilled JavaScript language features meaning like uh provided them to an",
    "start": "493159",
    "end": "500240"
  },
  {
    "text": "older browser that didn't ship them already and as a result I had to kind of pay attention to the specification",
    "start": "500240",
    "end": "506080"
  },
  {
    "text": "itself in order to implement those correctly and one of the main ERS of jQuery actually reached out to me on",
    "start": "506080",
    "end": "511440"
  },
  {
    "text": "Twitter and asked if I wanted to attend as a guest and in that first meeting I I was able to like provide you know advice",
    "start": "511440",
    "end": "520719"
  },
  {
    "text": "that changed the specification and that like that was a really good feeling kind of a it was very exciting to be able to",
    "start": "520719",
    "end": "527360"
  },
  {
    "text": "have made a substantive change to such an important language and so I kind of",
    "start": "527360",
    "end": "532839"
  },
  {
    "text": "caught the bug and uh immediately started advocating that my that my",
    "start": "532839",
    "end": "538200"
  },
  {
    "text": "company join and send me as a delegate and have't looked back this is just a PSA for anyone listening that Twitter is",
    "start": "538200",
    "end": "545399"
  },
  {
    "text": "actually a very important networking and marketing tool so if you're looking to Branch out and you know join new",
    "start": "545399",
    "end": "552079"
  },
  {
    "text": "organizations or get new career opportunities highly recommend it yeah it's definitely like the millennial",
    "start": "552079",
    "end": "558560"
  },
  {
    "text": "marketing tool more more so than LinkedIn I feel like LinkedIn is for business people and uh VCS and marketers",
    "start": "558560",
    "end": "567240"
  },
  {
    "text": "that want to connect with each other and like tw Twitter is how like the rest of us connect and Market our and promote",
    "start": "567240",
    "end": "573200"
  },
  {
    "text": "our work and interests but yeah no Jordan like super fascinating Insight you know I think for me what's really",
    "start": "573200",
    "end": "580000"
  },
  {
    "text": "cool about the like seeing the evolution of this tc39 uh story is the you know",
    "start": "580000",
    "end": "586800"
  },
  {
    "text": "more and more involvement from like practitioners I would say and you know there there's always been I would say",
    "start": "586800",
    "end": "593120"
  },
  {
    "text": "involvement from implementers and and for for those of you wondering what are implementers implementers are people who",
    "start": "593120",
    "end": "598480"
  },
  {
    "text": "work at browsers that like write the C cc++ code that like the the JavaScript",
    "start": "598480",
    "end": "603839"
  },
  {
    "text": "engines use right so those are implementers and then there's a bunch of like language nerds that are you know",
    "start": "603839",
    "end": "609320"
  },
  {
    "text": "typically part of these language committees that you know very uh into kind of language design but maybe more",
    "start": "609320",
    "end": "615519"
  },
  {
    "text": "removed from the day-to-day you know actual usage of of that language uh and then you have folks like Jordan who you",
    "start": "615519",
    "end": "621760"
  },
  {
    "text": "know come from the web developer world that are practitioners right so the folks that are actually like using that",
    "start": "621760",
    "end": "627120"
  },
  {
    "text": "language and so what you have is this like triangle of like implementers language nerds sorry I",
    "start": "627120",
    "end": "633600"
  },
  {
    "text": "can't come up with a better word for that and then you have web developers and I think like the push pull tension between those three groups is like how",
    "start": "633600",
    "end": "640399"
  },
  {
    "text": "you have this like it has produced this lovely body of work since ecos script 2015 and So speaking of body of work",
    "start": "640399",
    "end": "648160"
  },
  {
    "text": "let's get into like talking about what's coming down the pipeline so kall should we start with like do we want to work",
    "start": "648160",
    "end": "653600"
  },
  {
    "text": "our way from like idea to serious or do we want to go from serious to like idea",
    "start": "653600",
    "end": "658839"
  },
  {
    "text": "like how do we want to do this oh good question well let's take a couple just out of sequence where we just say like",
    "start": "658839",
    "end": "665320"
  },
  {
    "text": "what are the most interesting to you things happening right now and then we can do something a little more",
    "start": "665320",
    "end": "671399"
  },
  {
    "text": "systematic in the next couple segments so Jordan what's the most interesting proposal of any stage to you right",
    "start": "671399",
    "end": "679320"
  },
  {
    "text": "now I have a couple so one of them is class Fields private and public class",
    "start": "679320",
    "end": "685760"
  },
  {
    "text": "fields which is currently stage three it's shift in a couple browsers so it's hopefully moving to stage four soon but",
    "start": "685760",
    "end": "692880"
  },
  {
    "text": "it's uh it is still stage three also records and tupal just hit stage three that's uh a new or stage two excuse me",
    "start": "692880",
    "end": "700240"
  },
  {
    "text": "that's a new primitive uh that's kind of like it's like an immutable object or an immutable array but it's a primitive so",
    "start": "700240",
    "end": "706760"
  },
  {
    "text": "you can compare them with equal signs and it like Compares their contents",
    "start": "706760",
    "end": "712760"
  },
  {
    "text": "instead of just their identity so like two objects that have a key a with a value one aren't equal but two records",
    "start": "712760",
    "end": "720000"
  },
  {
    "text": "that have this those same contents are equal you know like immutablejs and immer and a few other libraries in this",
    "start": "720000",
    "end": "725360"
  },
  {
    "text": "space all are attempting to solve this problem and records and tuples will be in the language to do that is it a new",
    "start": "725360",
    "end": "731680"
  },
  {
    "text": "built-in essentially yes okay all right so for those of you wondering what's a",
    "start": "731680",
    "end": "737240"
  },
  {
    "text": "built-in well we have objects like map and set and number and array that are",
    "start": "737240",
    "end": "743800"
  },
  {
    "text": "all built-ins and so uh with ecas script 6 which is ecas script 2015 we have a",
    "start": "743800",
    "end": "749600"
  },
  {
    "text": "few new built-ins I think but like symbol is like another I can think of as you know and so this would be like a new",
    "start": "749600",
    "end": "755399"
  },
  {
    "text": "thing as opposed to like an extension of something that's pre-existing and so I'm really curious like when these new",
    "start": "755399",
    "end": "761720"
  },
  {
    "text": "built-ins get added to the language like what what's the reaction from implementers right because I'm I keep",
    "start": "761720",
    "end": "767320"
  },
  {
    "text": "thinking of uh JavaScript engines as this like Jengo Board of like C like code and I'm just curious like what it's",
    "start": "767320",
    "end": "773839"
  },
  {
    "text": "like to manage that you know I'm not sure what the coding patterns are in",
    "start": "773839",
    "end": "779240"
  },
  {
    "text": "terms of like being able to reuse functionality and you know how folks",
    "start": "779240",
    "end": "784800"
  },
  {
    "text": "maintain performance benchmarking like you know I'm an implementer somebody wants to me to create a whole new",
    "start": "784800",
    "end": "790639"
  },
  {
    "text": "built-in like what what happens yeah well I mean whether it's a like syntax",
    "start": "790639",
    "end": "796680"
  },
  {
    "text": "or you know A Primitive or you know API like like map and set or something I think that the general sense I get is",
    "start": "796680",
    "end": "803360"
  },
  {
    "text": "that the way implementers think about these things is how they might build it in a way where it can be made fast",
    "start": "803360",
    "end": "809160"
  },
  {
    "text": "either immediately or in the future and in particular they think about will this",
    "start": "809160",
    "end": "814639"
  },
  {
    "text": "new feature make existing code patterns slower and that's usually a big no no so",
    "start": "814639",
    "end": "820880"
  },
  {
    "text": "it's fine if a new thing is slow but it's not fine if a new thing slows down old things and it's also only fine if a",
    "start": "820880",
    "end": "828279"
  },
  {
    "text": "new thing is slow I think if they think that it's possible to make it faster in",
    "start": "828279",
    "end": "834160"
  },
  {
    "text": "the future I'm not an implementer so I'm not 100% sure that's how they approach it but that's the sense I get from these",
    "start": "834160",
    "end": "839759"
  },
  {
    "text": "conversations and then there's you know as you mentioned there's implementers and sort of language effici atas and",
    "start": "839759",
    "end": "846759"
  },
  {
    "text": "practitioners but all of us have our own kind of opinions and we all use JavaScript in some ways and so the",
    "start": "846759",
    "end": "854000"
  },
  {
    "text": "conversations end up getting really complex because everyone's kind of wearing multiple hats at the same time uh when they're expressing an opinion",
    "start": "854000",
    "end": "860440"
  },
  {
    "text": "and I just want to clarify too I think uh you brought up an interesting point around not wanting to make existing",
    "start": "860440",
    "end": "866279"
  },
  {
    "text": "things slower by adding this new feature or um I I can think of like decorators you",
    "start": "866279",
    "end": "872720"
  },
  {
    "text": "know that kind of was rejected because of that reason from my understanding and so um can you shed some light on that",
    "start": "872720",
    "end": "880279"
  },
  {
    "text": "yeah um so for specifically for decorators it had Advanced to stage two and was on its like third or fourth",
    "start": "880279",
    "end": "886000"
  },
  {
    "text": "iteration and it it asked for stage three the Champions asked for stage three for the proposal and couple",
    "start": "886000",
    "end": "891680"
  },
  {
    "text": "implementers withheld consensus for that advancement so it wasn't like rejecting The Proposal but basically saying that",
    "start": "891680",
    "end": "896839"
  },
  {
    "text": "this the solution that had been designed that they couldn't figure out they were convinced that they any way they",
    "start": "896839",
    "end": "902120"
  },
  {
    "text": "implemented it was going to make all classes slower not just decorated ones and that was not something they found",
    "start": "902120",
    "end": "908120"
  },
  {
    "text": "acceptable so you know the the decorator's proposal is still a stage two thing it's like a problem the",
    "start": "908120",
    "end": "913839"
  },
  {
    "text": "committee wants to solve in the language but uh it's not clear really what the solution is going to look like at the",
    "start": "913839",
    "end": "919320"
  },
  {
    "text": "moment can we really quick for the two proposals you highlighted like I think if for someone who's not living in this",
    "start": "919320",
    "end": "925279"
  },
  {
    "text": "space those sound kind of dry right like okay it's this new fundamental attribute",
    "start": "925279",
    "end": "931720"
  },
  {
    "text": "so let's explore a little bit about what that enables like I think you sort of hinted at a little bit talking about",
    "start": "931720",
    "end": "936959"
  },
  {
    "text": "immer but like what does having these immutable types enable us to do with JavaScript that we can't do very well",
    "start": "936959",
    "end": "942639"
  },
  {
    "text": "right now yeah it's essentially fast comparison by content everything in JavaScript Compares roughly by you know",
    "start": "942639",
    "end": "948959"
  },
  {
    "text": "identity You could argue that Primitives compare by contents like three equals three right but there's no way if you",
    "start": "948959",
    "end": "954800"
  },
  {
    "text": "have like a complex data structure with uh like an object or an array any equality has to you know inefficiently",
    "start": "954800",
    "end": "962199"
  },
  {
    "text": "move through every key value pair or every item in the array uh or every item in the set and so forth in order to do",
    "start": "962199",
    "end": "969639"
  },
  {
    "text": "those comparisons and react for example has a bunch of things that they do to do",
    "start": "969639",
    "end": "975240"
  },
  {
    "text": "shallow comparisons and then like when the shallow comparison fails they just re-render everything so if if you're a",
    "start": "975240",
    "end": "980920"
  },
  {
    "text": "react developer you you know may have been familiar with pure components or the used memo you know component wrapper",
    "start": "980920",
    "end": "988519"
  },
  {
    "text": "all of which are designed to try and avoid the performance hit from doing",
    "start": "988519",
    "end": "993639"
  },
  {
    "text": "deep comparisons of objects and with recers and tupal then you no longer need",
    "start": "993639",
    "end": "1000000"
  },
  {
    "text": "to do a deep comparison you just compare them directly and effectively",
    "start": "1000000",
    "end": "1005720"
  },
  {
    "text": "immediately it'll tell you this is the same thing or this is like the this has the same stuff or it doesn't have the",
    "start": "1005720",
    "end": "1011639"
  },
  {
    "text": "same stuff you're WR that it's dry a lot of the stuff we do in tc39 is dry it's it's low-level capabilities or",
    "start": "1011639",
    "end": "1019360"
  },
  {
    "text": "it's kind of sugar like abstractions better ways to do things simpler ways to do things so you know dayto Day",
    "start": "1019360",
    "end": "1026000"
  },
  {
    "text": "Developers are probably going to get a lot more excited about something like temporal which is a new proposal for",
    "start": "1026000",
    "end": "1032480"
  },
  {
    "text": "it's stage two right now for basically providing a much better way to do dates and times than the pretty broken date",
    "start": "1032480",
    "end": "1038600"
  },
  {
    "text": "object we have because temporal is something developers are going to use directly whereas records and tupal they",
    "start": "1038600",
    "end": "1044438"
  },
  {
    "text": "may or may not use them directly but they're going to make the web faster for every using react which I'm pretty",
    "start": "1044439",
    "end": "1050720"
  },
  {
    "text": "excited about potentially yeah and that's I'm hesitant to claim that it will definitely make react faster but",
    "start": "1050720",
    "end": "1055919"
  },
  {
    "text": "either way there's a lot of libraries that will be able to use them under the hood in order to make the web faster",
    "start": "1055919",
    "end": "1061080"
  },
  {
    "text": "even if you're not using them directly that makes a lot of sense I I think for me what's what's really interesting",
    "start": "1061080",
    "end": "1066600"
  },
  {
    "text": "about this is built-in um for those of you who use Babel which is probably majority of you Babel helps us like",
    "start": "1066600",
    "end": "1072679"
  },
  {
    "text": "create transforms or polyfills and for things like built-ins what Babel does is it'll you need a polyfill right because",
    "start": "1072679",
    "end": "1079760"
  },
  {
    "text": "there's no kind of like onetoone mapping right it's not syntactic sugar whatever it's not an extension of of something so",
    "start": "1079760",
    "end": "1087240"
  },
  {
    "text": "I would imagine that the polyfill for tupal records on tup is probably really simple and so for those of you who maybe",
    "start": "1087240",
    "end": "1094159"
  },
  {
    "text": "want to like get a little bit of under the hood kind of exposure to some of these language specifications I would",
    "start": "1094159",
    "end": "1100360"
  },
  {
    "text": "highly recommend uh looking at the polyfills because those are written in JavaScript um and uh usually they're",
    "start": "1100360",
    "end": "1106520"
  },
  {
    "text": "fairly easy to follow along so awesome I mean yeah the way I became more familiar with the spec was definitely like",
    "start": "1106520",
    "end": "1113799"
  },
  {
    "text": "looking at the polyfill code for a specific function that I like where I knew how it worked so I looked at how it was built that helped a lot so that's I",
    "start": "1113799",
    "end": "1120919"
  },
  {
    "text": "think that's really good advice yeah well well thank you Mr Jordan and um I I",
    "start": "1120919",
    "end": "1126080"
  },
  {
    "text": "just learned today that you were Mr Babel before Babel like uh if anyone didn't catch that in the sense that you",
    "start": "1126080",
    "end": "1132400"
  },
  {
    "text": "were creating these shims before things like and you know and polyils before Babble was a thing before build tools",
    "start": "1132400",
    "end": "1139720"
  },
  {
    "text": "became the thing and so it's really I didn't know that you had this cool callback story Jordan to be clear I",
    "start": "1139720",
    "end": "1145360"
  },
  {
    "text": "didn't even I didn't create them I mainly just took them over and like okay became the maintainer of them okay got",
    "start": "1145360",
    "end": "1151480"
  },
  {
    "text": "it these have been things the web have been using for a while okay cool yeah I was going to say the typical open source hero hero story of like like maintainer",
    "start": "1151480",
    "end": "1158360"
  },
  {
    "text": "gets burnt out new maintainer takes over and like you know does the shepherding all right so let's now take a quick",
    "start": "1158360",
    "end": "1165280"
  },
  {
    "text": "break and we'll be back shortly to talk a little bit more specifics about what's going to happen in the next year coming",
    "start": "1165280",
    "end": "1171520"
  },
  {
    "text": "out of",
    "start": "1171520",
    "end": "1173720"
  },
  {
    "text": "tc39 this episode is brought to you by digital ocean droplets manage kubernetes",
    "start": "1181200",
    "end": "1186760"
  },
  {
    "text": "manage databases spaces object storage volume block storage Advanced networking",
    "start": "1186760",
    "end": "1192679"
  },
  {
    "text": "like virtual private clouds and Cloud firewalls developer tooling like the robust API and CLI to make sure you can",
    "start": "1192679",
    "end": "1199640"
  },
  {
    "text": "interact with your infrastructure the way you want to digital ocean is designed for developers and built for",
    "start": "1199640",
    "end": "1205200"
  },
  {
    "text": "businesses join Over 150,000 businesses that develop manage and scale their",
    "start": "1205200",
    "end": "1211200"
  },
  {
    "text": "applications with digital ocean head to do. change log to get started with a $100 credit again do.",
    "start": "1211200",
    "end": "1218600"
  },
  {
    "text": "[Music]",
    "start": "1218600",
    "end": "1224950"
  },
  {
    "text": "changelog [Music]",
    "start": "1227640",
    "end": "1234349"
  },
  {
    "text": "all right let's get back to it Emma was saying that for her proposals really reminded her of something a little",
    "start": "1238440",
    "end": "1244919"
  },
  {
    "text": "different than tc39 Emma do you want to take us into this so really my favorite",
    "start": "1244919",
    "end": "1250120"
  },
  {
    "text": "proposal that I've ever seen was the one on The Bachelor uh and my favorite ones",
    "start": "1250120",
    "end": "1255360"
  },
  {
    "text": "are the ones where they get rejected rejections are not fun if if you're the person being rejected but um they're",
    "start": "1255360",
    "end": "1260760"
  },
  {
    "text": "interesting for the onlooker so I'm curious why would a proposal in tc39 get",
    "start": "1260760",
    "end": "1267000"
  },
  {
    "text": "rejected like give us all the dirty details sure um so yeah I've had a number of proposals rejected",
    "start": "1267000",
    "end": "1273919"
  },
  {
    "text": "tc39 I had one that I tried to get advancement like La at the last meeting and it got blocked so it's uh it happens",
    "start": "1273919",
    "end": "1279919"
  },
  {
    "text": "a lot I think that it kind of depends on what kind of proposal it is like when they're for something that's that's",
    "start": "1279919",
    "end": "1285720"
  },
  {
    "text": "really foundational for the language and it's kind of it'll change a lot of stuff it'll be a really big deal then people",
    "start": "1285720",
    "end": "1292000"
  },
  {
    "text": "are a lot more nervous about advancing it and want to be a lot more confident about the consequences before they do",
    "start": "1292000",
    "end": "1298559"
  },
  {
    "text": "you know before they move it on whereas you know something simple you know it it's it's a lot tougher to come up with",
    "start": "1298559",
    "end": "1306120"
  },
  {
    "text": "a good reason not to move it forward so like uh one of the proposals that went",
    "start": "1306120",
    "end": "1311760"
  },
  {
    "text": "my proposals that went well was like object. uh values and object. entries and those were relatively",
    "start": "1311760",
    "end": "1317400"
  },
  {
    "text": "straightforward we already had object do keys keys values and entries were already Concepts like it kind of there",
    "start": "1317400",
    "end": "1322679"
  },
  {
    "text": "were a bunch of libraries uh in the ecosystem that already did this stuff so there weren't that many reasons to",
    "start": "1322679",
    "end": "1327960"
  },
  {
    "text": "reject that proposal you know there were just kind of people would massage the shape of it you know they had like bike",
    "start": "1327960",
    "end": "1333480"
  },
  {
    "text": "shed type opinions but then like I had another proposal that was like error dois error like array do isarray just",
    "start": "1333480",
    "end": "1341200"
  },
  {
    "text": "you know I wanted a way to determine something with an error reliably okay that sounds super duh though could you",
    "start": "1341200",
    "end": "1347200"
  },
  {
    "text": "talk like error is error like I feel like that is like what's your thought process behind that smush error do is",
    "start": "1347200",
    "end": "1354480"
  },
  {
    "text": "error yeah explain please essentially there's the concept if you're familiar",
    "start": "1354480",
    "end": "1359760"
  },
  {
    "text": "with iframes how you can have like a different array Constructor in an if frame than you can in the regular web",
    "start": "1359760",
    "end": "1365200"
  },
  {
    "text": "page those are called Realms and so if you want to you can't use instance of array to determine if an array from an",
    "start": "1365200",
    "end": "1372080"
  },
  {
    "text": "iframe is an array or not because it's a different array Constructor so you have to use the array. isarray function to",
    "start": "1372080",
    "end": "1378640"
  },
  {
    "text": "tell you if something's really in Array or not and similarly there isn't any crossr way to say something's an error",
    "start": "1378640",
    "end": "1385559"
  },
  {
    "text": "you can only say instance of error and that doesn't work if it's from like an iframe so realms for anyone who doesn't",
    "start": "1385559",
    "end": "1391960"
  },
  {
    "text": "know what Realms are Realms are like different environments within the browser you can kind of think about it",
    "start": "1391960",
    "end": "1397640"
  },
  {
    "text": "that way so like service workers like its own kind of environment realm where",
    "start": "1397640",
    "end": "1403039"
  },
  {
    "text": "web worker is if frames are right so when you're like in a browser you know",
    "start": "1403039",
    "end": "1408159"
  },
  {
    "text": "you're main document is like the main realm and and each of these Realms has a different this instance um and I think",
    "start": "1408159",
    "end": "1415279"
  },
  {
    "text": "we can get into like talking about this in a little bit because Jordan is the one who proposed uh Global this which is",
    "start": "1415279",
    "end": "1421400"
  },
  {
    "text": "a thing we can discuss in a bit so Realms are like these these spaces right so like these con different contexts and",
    "start": "1421400",
    "end": "1428200"
  },
  {
    "text": "so now that we kind of know what Realms are could you explain again what is all this like instance and reference",
    "start": "1428200",
    "end": "1434000"
  },
  {
    "text": "checking that it doesn't equate like I'm not clear on why that happens like could you explain so if you do two square",
    "start": "1434000",
    "end": "1439840"
  },
  {
    "text": "brackets that makes an array and that has a DOT Constructor property right and",
    "start": "1439840",
    "end": "1445520"
  },
  {
    "text": "then that array is do Constructor property is going to be the array capital A array function but if you do",
    "start": "1445520",
    "end": "1451559"
  },
  {
    "text": "the the square brackets inside an iframe and also do it on the main part of the web page and you try and like do triple",
    "start": "1451559",
    "end": "1459320"
  },
  {
    "text": "equals with those Constructors that's not going to be equal they're different Constructors those two array functions are different yeah I know that makes",
    "start": "1459320",
    "end": "1465440"
  },
  {
    "text": "sense I would understand that to be different because they they different objects in memory though that's exactly",
    "start": "1465440",
    "end": "1471799"
  },
  {
    "text": "right okay but I'm just saying why is that a realm issue versus like a like I",
    "start": "1471799",
    "end": "1477399"
  },
  {
    "text": "just create array one array two and I say is array one and array two equal like I would expect like no no I think",
    "start": "1477399",
    "end": "1484039"
  },
  {
    "text": "we're trying to figure out the class right like is this an array that I can work with what kind of thing is it yeah",
    "start": "1484039",
    "end": "1490399"
  },
  {
    "text": "what type of thing is it I see I see God okay thank you and so if there if you want to know that if somebody gives you",
    "start": "1490399",
    "end": "1495640"
  },
  {
    "text": "a value and you don't know what it is and you want to figure out what kind of thing it is and you want to see if it's an array array. isarray is the only way",
    "start": "1495640",
    "end": "1502840"
  },
  {
    "text": "to do that like that's always correct yeah well I'm just curious though if if I somebody passes me a null value or a",
    "start": "1502840",
    "end": "1510600"
  },
  {
    "text": "symbol and I try to call is array or is error on that no I think it's a class",
    "start": "1510600",
    "end": "1516559"
  },
  {
    "text": "method right so it's a it's a method on the array class yeah it's a static method correct yeah no I'm just I'm just",
    "start": "1516559",
    "end": "1523000"
  },
  {
    "text": "saying that though would I I would just get an error saying like property is property is not there it would return",
    "start": "1523000",
    "end": "1529559"
  },
  {
    "text": "false no no no you'd pass in your value right so you're not calling object do isarray you're calling array. isarray",
    "start": "1529559",
    "end": "1536000"
  },
  {
    "text": "pass object ah okay go got it got it got it sorry yeah yeah yeah I'm spacing out on the API so yeah the API is you pass",
    "start": "1536000",
    "end": "1542679"
  },
  {
    "text": "it the thing okay got it I'm going to propose to Jordan right now because look I really want a class I'm not getting",
    "start": "1542679",
    "end": "1549480"
  },
  {
    "text": "down on one knee because I'm too tired you're gonna have to get in line on the Jordan proposal like I think I beat you",
    "start": "1549480",
    "end": "1555080"
  },
  {
    "text": "to that okay well I'm cutting the line have you ever been propositioned on a podcast",
    "start": "1555080",
    "end": "1561279"
  },
  {
    "text": "before this is turning weird but as you said K this is a day of Firsts okay this",
    "start": "1561279",
    "end": "1567320"
  },
  {
    "text": "is so plot twist Jordan we actually brought you here to pitch you all of our ideas this is like sharp tank but for",
    "start": "1567320",
    "end": "1574760"
  },
  {
    "text": "TSA 39 yeah we're holding him hostage actually can we just can we just Advance some proposals now that we have you",
    "start": "1574760",
    "end": "1581080"
  },
  {
    "text": "hostage okay so I know we've got array. isarray I want array do why is my array",
    "start": "1581080",
    "end": "1587520"
  },
  {
    "text": "not an array tell me where it went wrong I actually have an mpm package",
    "start": "1587520",
    "end": "1593200"
  },
  {
    "text": "called is Dash equal where you can pass it to things uh and there's a there's a",
    "start": "1593200",
    "end": "1598480"
  },
  {
    "text": "a y function in it you can pass it two things and it'll give you some text that tells you why they're different if",
    "start": "1598480",
    "end": "1603600"
  },
  {
    "text": "that's helpful oh close close okay yeah and that is the classic definition of",
    "start": "1603600",
    "end": "1609240"
  },
  {
    "text": "like the oneline package right like that is the left pad of JavaScript in many way way more than one line but yeah oh",
    "start": "1609240",
    "end": "1615880"
  },
  {
    "text": "it is okay well you know I feel like I could write that that in one line Jordan shame on",
    "start": "1615880",
    "end": "1620919"
  },
  {
    "text": "you pull requests open just kidding no just kidding actually speaking I just",
    "start": "1620919",
    "end": "1627440"
  },
  {
    "text": "take a tangent on on module design you know I I think um what's his is it soras",
    "start": "1627440",
    "end": "1632880"
  },
  {
    "text": "I never know how to pronounce his name like I like the cool dinosaur guy who has like every single package on npm",
    "start": "1632880",
    "end": "1637960"
  },
  {
    "text": "like what's his I don't know how to pronounce it out loud either yeah okay so I'm happy that this is a universally shared problem kall do you know I feel",
    "start": "1637960",
    "end": "1645200"
  },
  {
    "text": "like I don't even know who you're talking about oh you know who I'm talking about cindor I usually read it as cerus I have no idea if that's right",
    "start": "1645200",
    "end": "1652760"
  },
  {
    "text": "all right well Cinders cindersaur somebody correct us somebody tweet us the video or like the correct",
    "start": "1652760",
    "end": "1659840"
  },
  {
    "text": "pronunciation of his name cindersaur oh that guy that I recognize it from your",
    "start": "1659840",
    "end": "1665679"
  },
  {
    "text": "name of him how would you read that in your head I don't know okay all right well so",
    "start": "1665679",
    "end": "1672840"
  },
  {
    "text": "Cinder sorus said this one time he's actually like kind of a Fountain of Knowledge but he said that like for for",
    "start": "1672840",
    "end": "1679320"
  },
  {
    "text": "him it doesn't really matter like whether a module is one line or a thousand lines in the sense that like it",
    "start": "1679320",
    "end": "1684880"
  },
  {
    "text": "abstracts away some Behavior right and so ultimately like when you you know so lines of code is not necessarily a",
    "start": "1684880",
    "end": "1691399"
  },
  {
    "text": "useful metric to judge a package by I would say dependencies is though for me like when I'm when I'm always picking",
    "start": "1691399",
    "end": "1697320"
  },
  {
    "text": "packages I'm like how many dependencies do you have because ultimately like all those dependencies become your problem",
    "start": "1697320",
    "end": "1702919"
  },
  {
    "text": "as soon as you like you know import this into your into your app in the sense that like you might have peer dependency",
    "start": "1702919",
    "end": "1708840"
  },
  {
    "text": "issue conflicts Downstream like security issues so just just a tangent there on like picking modules like don't judge",
    "start": "1708840",
    "end": "1715760"
  },
  {
    "text": "the lines of code so basically yeah well and you mentioned left pad while that happened I was actually in the like",
    "start": "1715760",
    "end": "1722679"
  },
  {
    "text": "middle of proposing string. prototype. pad start and Pad end which were stage two at the time and it was very amusing",
    "start": "1722679",
    "end": "1729840"
  },
  {
    "text": "to me that almost every Hacker News comment that said that's just a oneline thing they all wrote it wrong every one",
    "start": "1729840",
    "end": "1735519"
  },
  {
    "text": "of them had bugs so even a oneline Chang is often can often be very difficult to",
    "start": "1735519",
    "end": "1741039"
  },
  {
    "text": "write correctly and so there's a lot of value in having uh a separately well",
    "start": "1741039",
    "end": "1746120"
  },
  {
    "text": "tested well-used package to abstract that away I don't think anyone who's ever worked with a regular expression",
    "start": "1746120",
    "end": "1751480"
  },
  {
    "text": "would doubt you on that so I really want to know what this syndrome is called",
    "start": "1751480",
    "end": "1757799"
  },
  {
    "text": "when you vehemently believe that something is part of this tc39 spec and",
    "start": "1757799",
    "end": "1763399"
  },
  {
    "text": "it is not because today I had one of those moments where we were working and I'm like all right we need to check if",
    "start": "1763399",
    "end": "1768720"
  },
  {
    "text": "our array is empty array do is empty it's definitely on there I know it is I know I can just check that length of",
    "start": "1768720",
    "end": "1774640"
  },
  {
    "text": "zero but I was 99% sure that that existed and it didn't so like what ises that called like we've got to come up",
    "start": "1774640",
    "end": "1780320"
  },
  {
    "text": "with some name because I'm not the only one that's experienced this I mean it might be the same phenomenon as remembering how to spell Baron scen",
    "start": "1780320",
    "end": "1786760"
  },
  {
    "text": "Bears Dunning or Krueger Dunning I don't know how to say that but it's there's a",
    "start": "1786760",
    "end": "1792000"
  },
  {
    "text": "meme out there that it's a parallel universe thing so maybe it's that maybe it really existed in the universe you're",
    "start": "1792000",
    "end": "1797200"
  },
  {
    "text": "from yeah the baron stain versus Baron stain yeah my kids are really into Baron stain Bears right now but I always",
    "start": "1797200",
    "end": "1803480"
  },
  {
    "text": "thought it was Baron stain that's super cool they also have like they are not internally consistent",
    "start": "1803480",
    "end": "1809399"
  },
  {
    "text": "I've been reading a lot of them now right like they reference their honeymoon location like five times",
    "start": "1809399",
    "end": "1815519"
  },
  {
    "text": "differently in different books so I think uh this sort of I think it's there",
    "start": "1815519",
    "end": "1821080"
  },
  {
    "text": "but it's not there it's not unique to tc39 so Jordan do you want to tell us about global this since we talked about",
    "start": "1821080",
    "end": "1827440"
  },
  {
    "text": "realms sure like what stage is that in and also for my understanding the the whole there",
    "start": "1827440",
    "end": "1834360"
  },
  {
    "text": "was this kind of hoopla around the name itself and maybe can you shed some light on like how hard it is like to name",
    "start": "1834360",
    "end": "1842120"
  },
  {
    "text": "things when you're writing job like ecmascript specs because because like there's only a limited number of keys on",
    "start": "1842120",
    "end": "1848519"
  },
  {
    "text": "a keyboard and there's a lot of stuff that's already taken and like how does that how does that work well so the",
    "start": "1848519",
    "end": "1854360"
  },
  {
    "text": "proposal itself was basically uh the the global the there wasn't a way in the",
    "start": "1854360",
    "end": "1859919"
  },
  {
    "text": "language a universal way to reference it so browsers had window node had Global",
    "start": "1859919",
    "end": "1865799"
  },
  {
    "text": "um other engines had you know nothing or something different and so this was a proposal to come up with a single way to",
    "start": "1865799",
    "end": "1872399"
  },
  {
    "text": "to reference it right just pick a spelling and let's all agree that this is the magic word that references the",
    "start": "1872399",
    "end": "1877559"
  },
  {
    "text": "global object we're done um The Challenge in naming it was twofold uh",
    "start": "1877559",
    "end": "1885039"
  },
  {
    "text": "the first was that I started out just calling it Global and and then we shipped it and then it broke Flickr wait",
    "start": "1885039",
    "end": "1890120"
  },
  {
    "text": "flick flicker is still a thing flickr.com this well at the time that we shipped it in like 2017 or something it",
    "start": "1890120",
    "end": "1896159"
  },
  {
    "text": "very much was oh wow I haven't been to it okay I'm sure I'm sure it's still a thing the web has long it was using an",
    "start": "1896159",
    "end": "1901799"
  },
  {
    "text": "old version of moment that was compiled with a in-house concat you know bundler",
    "start": "1901799",
    "end": "1909200"
  },
  {
    "text": "tool and just the way that it did that ended up breaking when Global was a variable that already existed which",
    "start": "1909200",
    "end": "1916039"
  },
  {
    "text": "sucked but also you know it that that name was just kind of not an option because one thing that is the most",
    "start": "1916039",
    "end": "1922840"
  },
  {
    "text": "important part of tc39 is do not break the web so anything that causes you know",
    "start": "1922840",
    "end": "1929919"
  },
  {
    "text": "any noticeable number of websites to break is just not something browsers are going to want to ship and so it's not something we put in a specification so",
    "start": "1929919",
    "end": "1937320"
  },
  {
    "text": "then I had to come up with a new name and that there was a lot of bike sheds um you know there was a lot of ideas",
    "start": "1937320",
    "end": "1943360"
  },
  {
    "text": "thrown out and what I ended up doing was asking another browser to gather data",
    "start": "1943360",
    "end": "1950320"
  },
  {
    "text": "about which ones were already in use basically trying in advance to see which",
    "start": "1950320",
    "end": "1955679"
  },
  {
    "text": "names would work and I came up with like 30 names and the response was that's too",
    "start": "1955679",
    "end": "1961240"
  },
  {
    "text": "many give us like five and so I I put Global on there as a control and then I",
    "start": "1961240",
    "end": "1966960"
  },
  {
    "text": "put a few others uh including Global this which is the name it ended up having and you know looked at the the",
    "start": "1966960",
    "end": "1973960"
  },
  {
    "text": "the number of websites using it and the result was that Global this was the safest option mhm it was like the the",
    "start": "1973960",
    "end": "1980320"
  },
  {
    "text": "name that nobody else thought of cuz it was so bad like nobody used it like it was available like those those crappy",
    "start": "1980320",
    "end": "1986240"
  },
  {
    "text": "domain names if you want to add new keywords you got to pick words that nobody would ever think to use exactly",
    "start": "1986240",
    "end": "1994080"
  },
  {
    "text": "that's exactly right cable yeah so there's I mean there were a lot of there",
    "start": "1994080",
    "end": "1999760"
  },
  {
    "text": "was a lot of reaction like basically the name that name Global this was approved by the committee and we went forward",
    "start": "1999760",
    "end": "2005240"
  },
  {
    "text": "with it and about two months later a couple folks with large Twitter followings noticed it and a bunch of",
    "start": "2005240",
    "end": "2010600"
  },
  {
    "text": "people showed up on the repo with their you know very angry that the name that",
    "start": "2010600",
    "end": "2015799"
  },
  {
    "text": "we chose wasn't one that they liked and with different ideas and so what finally ended up relaxing it was another",
    "start": "2015799",
    "end": "2022799"
  },
  {
    "text": "Committee Member uh Julia uh who works at Mozilla she helped me write a naming",
    "start": "2022799",
    "end": "2028200"
  },
  {
    "text": "document that was basically a bunch of constraints like musts and shoulds and must Nots and should Nots and for each",
    "start": "2028200",
    "end": "2034799"
  },
  {
    "text": "constraint it explained what it was and why it existed and then for each one it saides are the names that this this",
    "start": "2034799",
    "end": "2041760"
  },
  {
    "text": "allows these are the names that are still okay with this constraint and after you're done reading through that document it turns out it's pretty",
    "start": "2041760",
    "end": "2049040"
  },
  {
    "text": "difficult to still disagree with the name you can dislike it of course but",
    "start": "2049040",
    "end": "2054200"
  },
  {
    "text": "like it's becomes apparent why it was one of the only options and that was really helpful and I'm I want to do that",
    "start": "2054200",
    "end": "2061839"
  },
  {
    "text": "for future for any anything I do that's contentious around proposals in the future because that changed what was a",
    "start": "2061839",
    "end": "2067040"
  },
  {
    "text": "very like nightmarish couple weeks of GitHub notifications for me into like a",
    "start": "2067040",
    "end": "2072200"
  },
  {
    "text": "very manageable com thing like a streamlined yeah I gotta say I've been doing a lot of thinking around change",
    "start": "2072200",
    "end": "2078240"
  },
  {
    "text": "management and like and like nerd hurting and like what the most efficient way to do that is and I think that",
    "start": "2078240",
    "end": "2084240"
  },
  {
    "text": "strategy that you took is really cool we'll link that document uh that you created in the show notes so folks can",
    "start": "2084240",
    "end": "2089638"
  },
  {
    "text": "take a look at it as well but yeah that's super neat and did that document also lead to smoosh oh so I don't",
    "start": "2089639",
    "end": "2097359"
  },
  {
    "text": "remember remember the exact order in which these happened but smoosh was because the original name for array.",
    "start": "2097359",
    "end": "2103320"
  },
  {
    "text": "prototype. flat was array. prototype. flaten and that it turns out that a library called mols had used that word",
    "start": "2103320",
    "end": "2111880"
  },
  {
    "text": "and so it would break websites if arrays started having a flatten method and one",
    "start": "2111880",
    "end": "2118480"
  },
  {
    "text": "of the Champions or the champion for that proposal posted a I think mostly",
    "start": "2118480",
    "end": "2125320"
  },
  {
    "text": "joking GitHub issue saying he was going to rename it from flatten to smoosh and",
    "start": "2125320",
    "end": "2131720"
  },
  {
    "text": "a lot of folks took it very seriously and some folks even tried to create a campaign to like make it web",
    "start": "2131720",
    "end": "2138760"
  },
  {
    "text": "incompatible to name it smoosh like they tried to make it so that some websites would break if arrays started having",
    "start": "2138760",
    "end": "2145040"
  },
  {
    "text": "smoosh and yeah I thought that was a little taking it too far though like I",
    "start": "2145040",
    "end": "2150800"
  },
  {
    "text": "thought that was like not nice it was like people trying to actively start a gorilla campaign to like uh jeopardize",
    "start": "2150800",
    "end": "2157240"
  },
  {
    "text": "the success of this proposal like you know even though it it was a joke to begin with like but like most people",
    "start": "2157240",
    "end": "2162359"
  },
  {
    "text": "didn't know that it was a joke and then like it just got out of hand really fast and it's just like WTF you know right",
    "start": "2162359",
    "end": "2170240"
  },
  {
    "text": "wait wait wait people were deliberately being mean on the internet oh yeah that never happens never developers are the",
    "start": "2170240",
    "end": "2178400"
  },
  {
    "text": "nicest people with that let's take another quick break and we'll come back and talk a little bit more about some of",
    "start": "2178400",
    "end": "2185839"
  },
  {
    "text": "the wild stuff that's weighed down still in stage one and",
    "start": "2185839",
    "end": "2191280"
  },
  {
    "text": "[Music]",
    "start": "2191490",
    "end": "2200040"
  },
  {
    "text": "zero what up JS party people it's your boy here Adam stovak and I have a question for you are you having trouble",
    "start": "2200040",
    "end": "2206400"
  },
  {
    "text": "uncovering performance issues in your nodejs apps if so check out our friends at Scout APM that's Scout apm.com",
    "start": "2206400",
    "end": "2213680"
  },
  {
    "text": "changelog Scout is application monitoring that automatically supports key nodejs moning metrics instruments",
    "start": "2213680",
    "end": "2220160"
  },
  {
    "text": "many node GS libraries automatically detects easy to miss n plus1 queries that sneak into production plus a ton",
    "start": "2220160",
    "end": "2226319"
  },
  {
    "text": "more and of course Scout is easy to install via mpm package learn more and get started for free at Scout apm.com",
    "start": "2226319",
    "end": "2233720"
  },
  {
    "text": "changelog no credit cards required that's Scout apm.com",
    "start": "2233720",
    "end": "2239680"
  },
  {
    "text": "[Music]",
    "start": "2240660",
    "end": "2243780"
  },
  {
    "text": "changelog [Music]",
    "start": "2246520",
    "end": "2258839"
  },
  {
    "text": "so Jordan yeah let's talk about date time and JavaScript so dates times time zones",
    "start": "2258839",
    "end": "2268280"
  },
  {
    "text": "they're the things that have been known to to break a man you know yeah unfortunately the the",
    "start": "2268280",
    "end": "2275000"
  },
  {
    "text": "JavaScript date object is not great there's a lot of things about it that are underspecified meaning browsers do",
    "start": "2275000",
    "end": "2281319"
  },
  {
    "text": "things slightly differently it's always in local time so you can't represent a time in a different time zone and it's",
    "start": "2281319",
    "end": "2287839"
  },
  {
    "text": "really easy to screw up the math but the time zone math as you're trying to make those adjustments and you can't have a",
    "start": "2287839",
    "end": "2294720"
  },
  {
    "text": "date without a time you can't have a time without a date like I broke a date picker or a date picker I I built broke",
    "start": "2294720",
    "end": "2301079"
  },
  {
    "text": "one time because uh we picked midnight as the just placeholder time right for",
    "start": "2301079",
    "end": "2308680"
  },
  {
    "text": "for the dates and in Brazil once a year",
    "start": "2308680",
    "end": "2313960"
  },
  {
    "text": "midnight doesn't exist because their Daylight Savings Time advances at midnight and says 2 am so in Brazil a",
    "start": "2313960",
    "end": "2321160"
  },
  {
    "text": "date picker on Twitter like twitter.com uh broke because of JavaScript State",
    "start": "2321160",
    "end": "2326720"
  },
  {
    "text": "object and this stuff happens all the time um what did Brazil do during Y2K like did were they like extra freaked",
    "start": "2326720",
    "end": "2333359"
  },
  {
    "text": "out because they were like we also in addition to like you like we also have a weird Edge case with the way we do dime",
    "start": "2333359",
    "end": "2340000"
  },
  {
    "text": "in Brazil and it's and it's I mean almost anything you can think of that you know like there's a there's a great",
    "start": "2340000",
    "end": "2345760"
  },
  {
    "text": "article called falsehoods programmers believe about names and it's like a hundred things that many of us take for granted that that's the way names work",
    "start": "2345760",
    "end": "2352079"
  },
  {
    "text": "and in fact that's not and it's there's uh if someone were to make that list about uh dates times and time zones it",
    "start": "2352079",
    "end": "2358560"
  },
  {
    "text": "would probably be much much longer there's just so many like almost everything is an edge case there's",
    "start": "2358560",
    "end": "2364640"
  },
  {
    "text": "really no standards for a lot of the stuff so luckily there's a stage two proposal called temporal that's",
    "start": "2364640",
    "end": "2370280"
  },
  {
    "text": "attempting to address this and some of its Champions actually are maintainers of momentjs which is one of the",
    "start": "2370280",
    "end": "2377040"
  },
  {
    "text": "libraries that has solved this the best in the ecosystem so far actually can we take a moment to thank moment JS and",
    "start": "2377040",
    "end": "2383960"
  },
  {
    "text": "like folks like Maggie and Phil Maggie pint from Microsoft Philip Dunkle from Bloomberg and Matt yeah and then yeah",
    "start": "2383960",
    "end": "2390960"
  },
  {
    "text": "Matt Johnson I'm not sure where Matt Johnson works but like momentjs has like totally smoothed over a lot of the",
    "start": "2390960",
    "end": "2398520"
  },
  {
    "text": "headaches that used to be things that everyone had to do on their own and like do imperfectly and so this is kind of",
    "start": "2398520",
    "end": "2405280"
  },
  {
    "text": "like a really great example of like web developers taking complex like complexity and like abstracting it away",
    "start": "2405280",
    "end": "2412599"
  },
  {
    "text": "into like a smooth API and you know dealing with the the the inop issues as",
    "start": "2412599",
    "end": "2418240"
  },
  {
    "text": "well like you know in addition to like the the complexities around around daytime so what's really interesting is",
    "start": "2418240",
    "end": "2423440"
  },
  {
    "text": "like folks for moment are like let's like okay cool we we've learned a lot writing moment now let's take moment and",
    "start": "2423440",
    "end": "2430839"
  },
  {
    "text": "like put it in the browser right so this is like a really good example of like web",
    "start": "2430839",
    "end": "2435920"
  },
  {
    "text": "developers making the cow paths you know like innovating on the web with",
    "start": "2435920",
    "end": "2441319"
  },
  {
    "text": "libraries and then eventually abstracting that behavior back into the platform so that we can no longer have",
    "start": "2441319",
    "end": "2447760"
  },
  {
    "text": "to use moment and so moment is now like in just full maintenance mode you know there no new features or anything still",
    "start": "2447760",
    "end": "2453400"
  },
  {
    "text": "works fine but the goal is like we we're going to have this natively in the browser with temporal which we're going to hear about from Jordan in a second",
    "start": "2453400",
    "end": "2460319"
  },
  {
    "text": "which is really really good because while I love moment my bundle size does not right to totally moment is huge that",
    "start": "2460319",
    "end": "2467680"
  },
  {
    "text": "thing is massive yeah I couldn't agree with you more um the other thing is you",
    "start": "2467680",
    "end": "2473240"
  },
  {
    "text": "know promises is are another really good example of like web developers like innovating hard on the web and then",
    "start": "2473240",
    "end": "2479880"
  },
  {
    "text": "coming up with a standard A+ promise kind of spec and then having that actually be what drove forward the",
    "start": "2479880",
    "end": "2486760"
  },
  {
    "text": "language as well and so web developers like are you know a huge like innovating",
    "start": "2486760",
    "end": "2492240"
  },
  {
    "text": "freely without the constraints of like the standards world is like a huge like",
    "start": "2492240",
    "end": "2497440"
  },
  {
    "text": "it's something we should never take for granted right like we should always have web developers doing crazy things and creating lots of libraries and solving",
    "start": "2497440",
    "end": "2503280"
  },
  {
    "text": "lots of problems because eventually one of those is going to stick and solve a really hard problem for the web and then",
    "start": "2503280",
    "end": "2508319"
  },
  {
    "text": "eventually hopefully be abstracted away into the platform and so they're like a really key part of like Innovation on",
    "start": "2508319",
    "end": "2513880"
  },
  {
    "text": "the platform and I just don't think we like give credit enough to like folks who write libraries that solve hard",
    "start": "2513880",
    "end": "2519599"
  },
  {
    "text": "problems for us I'm done with my Soliloquy now no it's perfect and the other great",
    "start": "2519599",
    "end": "2525280"
  },
  {
    "text": "thing is that one of the bigger complaints folks still have about moment JS besides bundle size is that it's",
    "start": "2525280",
    "end": "2530480"
  },
  {
    "text": "stateful and mutable right like a given moment object what does that mean what could you tell us like could you break",
    "start": "2530480",
    "end": "2535960"
  },
  {
    "text": "that down yeah sure so you can when you make a moment object if you then want to",
    "start": "2535960",
    "end": "2541480"
  },
  {
    "text": "like make it be last week or next year or something you have to change that object just like JavaScript State object",
    "start": "2541480",
    "end": "2548520"
  },
  {
    "text": "instead of there's not a clean easy way to like make a new one or you have to remember to do it right like moment has",
    "start": "2548520",
    "end": "2554119"
  },
  {
    "text": "a do clone method and what that means is it could be easy to have bugs from",
    "start": "2554119",
    "end": "2560359"
  },
  {
    "text": "accidentally changing an object in one place that you're relying on not being changed in another place so one of the",
    "start": "2560359",
    "end": "2566200"
  },
  {
    "text": "things that temporal is going to do is not suffer from that problem so once you've created a temporal object there's",
    "start": "2566200",
    "end": "2573520"
  },
  {
    "text": "lots of ways to easily spit off a brand new temporal object that's changed right",
    "start": "2573520",
    "end": "2578800"
  },
  {
    "text": "like so you can get a new temporal object that's for last week but it won't let you change the original object so it",
    "start": "2578800",
    "end": "2585319"
  },
  {
    "text": "kind of sidesteps a lot of that whole class of problems we've been talking a lot about temporal temporal temporal",
    "start": "2585319",
    "end": "2591000"
  },
  {
    "text": "let's just take a few steps back for our listeners what is temporal and then let's talk a little bit about the",
    "start": "2591000",
    "end": "2596960"
  },
  {
    "text": "specifics for like a vapi and what are the enormous goals that they have yeah I think there's also some opportunities if",
    "start": "2596960",
    "end": "2603240"
  },
  {
    "text": "I remember I was at a tc39 meeting like this time last year in Berlin and I remember like there was some",
    "start": "2603240",
    "end": "2610599"
  },
  {
    "text": "really cool things that folks from Apple were proposing around modules you know what I'm talking about right built-in",
    "start": "2610599",
    "end": "2616800"
  },
  {
    "text": "modules like built-in modules and like that could potentially actually be something that temporal leverage sorry",
    "start": "2616800",
    "end": "2624000"
  },
  {
    "text": "to get in the weeds but I I think this is like a I'll be quick about this uh but basically built-in modules there's a",
    "start": "2624000",
    "end": "2630440"
  },
  {
    "text": "proposal out there to like um have built-in modules so that like JavaScript engines don't have to like have every",
    "start": "2630440",
    "end": "2636400"
  },
  {
    "text": "single teacher in the language that they can just kind of do this like on demand thing that we do in JavaScript where we",
    "start": "2636400",
    "end": "2642040"
  },
  {
    "text": "like import something and so the idea here is like something that does date time like we don't have to like load",
    "start": "2642040",
    "end": "2648359"
  },
  {
    "text": "every JavaScript Engine with like all of the date time like um translations you",
    "start": "2648359",
    "end": "2653920"
  },
  {
    "text": "know even for internationalization like the idea is we can just do like an in on just in time kind of loading a loading",
    "start": "2653920",
    "end": "2659800"
  },
  {
    "text": "so I thought that was like a really cool thing where temporal actually was like hey let's maybe slow down because maybe we can release using modules and stuff",
    "start": "2659800",
    "end": "2666280"
  },
  {
    "text": "like that so so that's actually browsers already do that for globals so the built-in modules isn't necessary for",
    "start": "2666280",
    "end": "2671920"
  },
  {
    "text": "that optimization um oh okay good and and then separately built-in modules has a lot of obstacles so the temporal",
    "start": "2671920",
    "end": "2679280"
  },
  {
    "text": "proposal decided not to try and stall itself like lock itself on that so at the moment it's going to supply a global",
    "start": "2679280",
    "end": "2686160"
  },
  {
    "text": "temporal namespace that contains a couple different types so I I mean stage",
    "start": "2686160",
    "end": "2691359"
  },
  {
    "text": "two and so the names are changing a little bit and I don't have them all in my head but one of them is currently",
    "start": "2691359",
    "end": "2697880"
  },
  {
    "text": "called absolute and so it it represents like a fixed point in time like unrelated to location or like which",
    "start": "2697880",
    "end": "2704559"
  },
  {
    "text": "calendar system you're using then there's another one called a date time which is like a calendar date and then like wall clock time like you know in a",
    "start": "2704559",
    "end": "2712400"
  },
  {
    "text": "specific location in a specific time zone right and then there's a Time",
    "start": "2712400",
    "end": "2717559"
  },
  {
    "text": "object which is just the the wall clock time so if you need to say this is a meeting or you know the I don't know I",
    "start": "2717559",
    "end": "2724200"
  },
  {
    "text": "wake up every day at 7: am you don't need a date to represent that you just need a time that's the object for that",
    "start": "2724200",
    "end": "2730040"
  },
  {
    "text": "and similarly there's a date object where it's like my birthday is the same date every year I don't care what time",
    "start": "2730040",
    "end": "2735119"
  },
  {
    "text": "it is it's that date and then there's a few other types like there's one called year month and month day so a birthday",
    "start": "2735119",
    "end": "2741200"
  },
  {
    "text": "is actually more of a month day because it happens every year and a year month could be pretty much anything that",
    "start": "2741200",
    "end": "2746760"
  },
  {
    "text": "happens monthly doesn't matter which day it happens on like if if you got paid monthly you could use de month for that",
    "start": "2746760",
    "end": "2753119"
  },
  {
    "text": "and so on uh and then there's also a time zone and a calendar object so it's kind of to help manage all the",
    "start": "2753119",
    "end": "2759359"
  },
  {
    "text": "complexity around that stuff which is also part of the reason why moment is so large because of all the time zone and",
    "start": "2759359",
    "end": "2764480"
  },
  {
    "text": "calendar information it has to hold so the the built-in modules question was well be you know we don't want to stick",
    "start": "2764480",
    "end": "2769520"
  },
  {
    "text": "seven or eight new globals you know and it's a little it's you know we'd rather not have a a name space to hold them so",
    "start": "2769520",
    "end": "2776599"
  },
  {
    "text": "maybe we can do it as a built-in module but the performance and functionality for the users is going to be the same either way so at the moment it's",
    "start": "2776599",
    "end": "2782640"
  },
  {
    "text": "proceeding as a just a regular Global like all the other built-in stuff in childt and given stage two what do you think the likely",
    "start": "2782640",
    "end": "2789920"
  },
  {
    "text": "timeline is looking like cuz like some of us are salivating to get to this stuff but we know from a Mel that we",
    "start": "2789920",
    "end": "2795000"
  },
  {
    "text": "shouldn't use it yet yeah right exactly right please please don't use it yet experiment but don't ship it to the",
    "start": "2795000",
    "end": "2800680"
  },
  {
    "text": "actual web they just didn't an update in the last meeting and their current plan uh as I understand it is that by the",
    "start": "2800680",
    "end": "2807400"
  },
  {
    "text": "September meeting they are hoping to have it finalized meaning they're going",
    "start": "2807400",
    "end": "2813240"
  },
  {
    "text": "to get to a point where they stop changing the spec a lot and then hopefully by the November meeting that",
    "start": "2813240",
    "end": "2819319"
  },
  {
    "text": "will have been enough time for the official the like select the designated reviewers for the proposal as well as",
    "start": "2819319",
    "end": "2825640"
  },
  {
    "text": "the editors to review it all and then after it's been reviewed it will be eligible for stage three if the",
    "start": "2825640",
    "end": "2831359"
  },
  {
    "text": "committee agrees so the optimistic timeline then is that it might get stage three in November but you know that that",
    "start": "2831359",
    "end": "2837599"
  },
  {
    "text": "requires that there be sufficient review time that there not be major changes coming out of that and also that the",
    "start": "2837599",
    "end": "2842800"
  },
  {
    "text": "committee agrees to it at stage three but yeah uh once it's stage three browser start shipping it so yeah super",
    "start": "2842800",
    "end": "2849280"
  },
  {
    "text": "cool and and this is kind of one of those features that has been in the pipeline probably pretty long right like",
    "start": "2849280",
    "end": "2856520"
  },
  {
    "text": "a number of years this a number of years yeah so I mean it took took a while to get this right and it's nice to see that",
    "start": "2856520",
    "end": "2861839"
  },
  {
    "text": "it's finally getting to a stage of maturity and a graduation time you know I feel like uh yeah it's like stage two",
    "start": "2861839",
    "end": "2869240"
  },
  {
    "text": "is Middle School and like stage three is high school you know like stage four and",
    "start": "2869240",
    "end": "2874520"
  },
  {
    "text": "above is like I'm done I'm an adult now like you know so it's like really nice to see that Arc and I'm I'm friends with",
    "start": "2874520",
    "end": "2880920"
  },
  {
    "text": "some of the folks that are championing it and and authoring it so I'm like really happy that this is uh something",
    "start": "2880920",
    "end": "2886400"
  },
  {
    "text": "that they get to like make a dent on and make a huge difference for the web like not just in terms of like simplifying",
    "start": "2886400",
    "end": "2893079"
  },
  {
    "text": "the API design and abstracting it into the platform but to kind of go back to kall's point like we're also saving",
    "start": "2893079",
    "end": "2899440"
  },
  {
    "text": "bites and bites matter just even from like a resource perspective that's like less trees that we're burning or that's",
    "start": "2899440",
    "end": "2905800"
  },
  {
    "text": "less energy that we're using and it's it's it's a big deal so hey with moment",
    "start": "2905800",
    "end": "2911040"
  },
  {
    "text": "it's like tens or hundreds of kilobytes not just bytes yeah it takes a lot of",
    "start": "2911040",
    "end": "2916240"
  },
  {
    "text": "complex bundler configuration to to bypass that problem yeah so this has",
    "start": "2916240",
    "end": "2921839"
  },
  {
    "text": "been fun Jordan I think we've learned a lot and we've learned about some of the interesting stuff coming in we've gotten",
    "start": "2921839",
    "end": "2927000"
  },
  {
    "text": "some on air proposals and all sorts of fun stuff I think uh with that we're going to wrap up for now but thank you",
    "start": "2927000",
    "end": "2934119"
  },
  {
    "text": "for joining us Jordan happy to be here thanks for having thank you AML thank you Emma and we'll",
    "start": "2934119",
    "end": "2940079"
  },
  {
    "text": "catch you next time next week next party this is kall signing",
    "start": "2940079",
    "end": "2945200"
  },
  {
    "text": "out did you hear we are launching a membership program it's called change log Plus+ and we think it'll be super",
    "start": "2945319",
    "end": "2952000"
  },
  {
    "text": "cool join the club for 10 bucks a month or $100 a year and if you move fast you can get in for just six bucks a month or",
    "start": "2952000",
    "end": "2958839"
  },
  {
    "text": "$60 a year that discount ends on September 1st so join today to support",
    "start": "2958839",
    "end": "2963960"
  },
  {
    "text": "our work get closer to the metal and make the ad disappear learn more at changel law.com",
    "start": "2963960",
    "end": "2969880"
  },
  {
    "text": "plusplus once again that's Chang law.com plusus plusus JS party is brought to you",
    "start": "2969880",
    "end": "2976079"
  },
  {
    "text": "by amazing sponsors thanks again to fastly lenoe and robbar for their continued support and our beats are",
    "start": "2976079",
    "end": "2983119"
  },
  {
    "text": "produced by the one and only brake master cylinder that's all for now we'll talk to you again next",
    "start": "2983119",
    "end": "2990318"
  },
  {
    "text": "week [Music]",
    "start": "2995640",
    "end": "3005170"
  }
]