[
  {
    "text": "this week on the change love we're talking fresh faster and new web Frameworks by way of JS party yes",
    "start": "6399",
    "end": "11719"
  },
  {
    "text": "today's show is a web framework sampler because a new batch of web frams have emerged there's always something new",
    "start": "11719",
    "end": "18320"
  },
  {
    "text": "happening in the friend world and GS party does an amazing job covering that so what's fresh faster and new the first",
    "start": "18320",
    "end": "25240"
  },
  {
    "text": "segement of the show today focuses on Dino's fresh new framework Luca Cado joins Jaren fro to talk about fresh a",
    "start": "25240",
    "end": "31599"
  },
  {
    "text": "Next Generation web framework Built For Speed reliability and simplicity in",
    "start": "31599",
    "end": "37000"
  },
  {
    "text": "segment two angle JS Creator misco H joins Jared and Cal to talk about quick he says quick is a fundamental",
    "start": "37000",
    "end": "43760"
  },
  {
    "text": "rethinking of how web application should work and he's attempting to convince Jared and kall that the implications of",
    "start": "43760",
    "end": "50360"
  },
  {
    "text": "that are big and in the last segment a Mel talks with Fred shot about Astro 1.0",
    "start": "50360",
    "end": "56199"
  },
  {
    "text": "they go deep on how Astro is built to pull content from anywhere and serve it fast with their next Generation Island",
    "start": "56199",
    "end": "61760"
  },
  {
    "text": "architecture as you may have expected there is a bonus on today's show for our Plus+ subscribers 8 minutes in fact Fred",
    "start": "61760",
    "end": "69159"
  },
  {
    "text": "shot comes back to explain Astro Islands it goes deep on how to extract your UI into smaller isolated components on the",
    "start": "69159",
    "end": "76000"
  },
  {
    "text": "page and unused JavaScript is replaced with lightweight HTML to guarantee faster loads and time to interactive if",
    "start": "76000",
    "end": "83280"
  },
  {
    "text": "you're not A++ subscriber don't worry it's easy changel love.com Plus+ will get you started a big thank you to our",
    "start": "83280",
    "end": "90240"
  },
  {
    "text": "friends at fastly and fly bandwidth for change log is provided by fastly learn more at fastly.com and our friends at",
    "start": "90240",
    "end": "97159"
  },
  {
    "text": "fly let you put your app and your database close your users all over the world it is like a CDN for your entire",
    "start": "97159",
    "end": "102640"
  },
  {
    "text": "application learn more at",
    "start": "102640",
    "end": "106439"
  },
  {
    "text": "[Music] fly.io hey friends influx days is back",
    "start": "107870",
    "end": "115600"
  },
  {
    "text": "this is a two-day developer conference from our friends at influx data and it's is dedicated to building iot analytics",
    "start": "115600",
    "end": "122399"
  },
  {
    "text": "and Cloud applications with influx DB it is happening November 2nd and 3rd learn more and register at influx days.com",
    "start": "122399",
    "end": "130280"
  },
  {
    "text": "this year we showcase the breadth and depth of the influx DB platform as the critical infrastructure behind today",
    "start": "130280",
    "end": "136360"
  },
  {
    "text": "applications and digital businesses if you're new to influx or you're building Advanced time series applications influx",
    "start": "136360",
    "end": "143160"
  },
  {
    "text": "days sessions and trainings will give you the skills you need to support your individual Builder Journey here's the",
    "start": "143160",
    "end": "148480"
  },
  {
    "text": "breakdown two free days of virtual user conference watch parties in SF and",
    "start": "148480",
    "end": "154040"
  },
  {
    "text": "London free training on Telegraph open source server agent pay training on flux",
    "start": "154040",
    "end": "159080"
  },
  {
    "text": "in London again this is all happening November 2nd and 3rd learn more and register at influx days.com again influx",
    "start": "159080",
    "end": "168720"
  },
  {
    "text": "[Music]",
    "start": "168720",
    "end": "174189"
  },
  {
    "text": "days.com",
    "start": "178760",
    "end": "181760"
  },
  {
    "text": "it's Luca Cado from the dino team welcome LCA hey thanks for having me",
    "start": "194799",
    "end": "200840"
  },
  {
    "text": "thanks for being here Fresh Off Your launch and I can't avoid a pun ah you've",
    "start": "200840",
    "end": "206840"
  },
  {
    "text": "launched a fresh new heard that one before yeah it's going to you're going to hear it a lot more yeah as well sorry",
    "start": "206840",
    "end": "214000"
  },
  {
    "text": "you picked the name not me I do like it yeah it's a good I like the lemon based icon as well cool stuff a new web",
    "start": "214000",
    "end": "222799"
  },
  {
    "text": "framework for Dino from Dino it's like an official Dino project right like yall are building it and supporting it into",
    "start": "222799",
    "end": "229840"
  },
  {
    "text": "the future that's that's it awesome what was the idea why like what what was the impetus or the reason why you decided to",
    "start": "229840",
    "end": "236400"
  },
  {
    "text": "build this yeah so originally the idea was actually not to build a framework the idea was to just like have like a",
    "start": "236400",
    "end": "242120"
  },
  {
    "text": "tech demo to Showcase like a bunch of cool features in Dino and like how you can use them together to like make",
    "start": "242120",
    "end": "248319"
  },
  {
    "text": "websites essentially and over time this turned into oh wait this is actually really nice to use like we started",
    "start": "248319",
    "end": "254239"
  },
  {
    "text": "building utilities all over the place which were like nice to use and it turned out that we could integrate this",
    "start": "254239",
    "end": "260840"
  },
  {
    "text": "all together into some sort of like cohesive bundle and we started using that for some internal projects team",
    "start": "260840",
    "end": "267120"
  },
  {
    "text": "internally really liked it so we decided to um put more effort into it and open",
    "start": "267120",
    "end": "272440"
  },
  {
    "text": "source it I like how the JS Community I guess the TS Community as well what we call ourselves nowadays the web web devs",
    "start": "272440",
    "end": "279199"
  },
  {
    "text": "are starting to embrace just even the term framework like we're starting to see Frameworks come out at a long time",
    "start": "279199",
    "end": "284680"
  },
  {
    "text": "it was like libraries and routers and packages and it was very much a build",
    "start": "284680",
    "end": "289759"
  },
  {
    "text": "your own thing out of these smaller things but I think at this point",
    "start": "289759",
    "end": "295600"
  },
  {
    "text": "Frameworks are they're back again or they're here for the first time perhaps I think we're stting starting to be like you know what it's nice to have a lot of",
    "start": "295600",
    "end": "301759"
  },
  {
    "text": "things all in one place maintained by a group and I wonder was that something you all thought about like even the word",
    "start": "301759",
    "end": "308120"
  },
  {
    "text": "framework for this thing yeah yeah one of the core ideas of Dino for a long time right to have this whole battery is included runtime where we're not just a",
    "start": "308120",
    "end": "315080"
  },
  {
    "text": "runtime but we also provide things like formatting and linting and testing and dependency management and documentation",
    "start": "315080",
    "end": "321759"
  },
  {
    "text": "generation and million other things all in the same binary maintained by the same people with the same opinions to",
    "start": "321759",
    "end": "328160"
  },
  {
    "text": "sort of give you like a cohesive experience and I think this actually like it's very nice that we managed to",
    "start": "328160",
    "end": "334319"
  },
  {
    "text": "also extend this to this like web framework now because those same ideas that we build Dino with we also used to",
    "start": "334319",
    "end": "340199"
  },
  {
    "text": "build this framework right so like it really nicely integrates with Dino and it has the same like core principles",
    "start": "340199",
    "end": "346360"
  },
  {
    "text": "that things should be fast and things should be easy to use and things should not be bloated Frost what about your",
    "start": "346360",
    "end": "351520"
  },
  {
    "text": "thoughts on Frameworks versus libraries I know you've even' very much a bring things together like make your own",
    "start": "351520",
    "end": "357759"
  },
  {
    "text": "decisions I do like that ethos have like like I'm going to pick like a Craftsman would pick their tools you know and I",
    "start": "357759",
    "end": "363319"
  },
  {
    "text": "know that you built a lot of websites over the years and it seems like each time we talk about the tech inside your websites and it's always a little bit",
    "start": "363319",
    "end": "369639"
  },
  {
    "text": "different like you pick different things curious what your thoughts are on like the framework movement that's happening",
    "start": "369639",
    "end": "375440"
  },
  {
    "text": "currently I'm a huge fan of it actually I I'm starting to lean more toward that",
    "start": "375440",
    "end": "381440"
  },
  {
    "text": "direction just it's nice to not have to think about these details when you're trying to solve a problem and to keep",
    "start": "381440",
    "end": "387960"
  },
  {
    "text": "your mind at the level of the problem you're solving and not constantly going down into the lower level and trying to",
    "start": "387960",
    "end": "395039"
  },
  {
    "text": "tweak the way the routing works or or that you know these kinds of implementation details when you're trying to just solve a problem so I'm a",
    "start": "395039",
    "end": "402240"
  },
  {
    "text": "huge fan of it now and it helps you focus on what you're trying to do just the actual problem you're trying to",
    "start": "402240",
    "end": "407400"
  },
  {
    "text": "solve yeah I feel like very often with a lot of people it's like they think they don't like it until they start using it",
    "start": "407400",
    "end": "413360"
  },
  {
    "text": "like they think they don't want the opinionation until they use something which has the opinionation and then they",
    "start": "413360",
    "end": "418400"
  },
  {
    "text": "don't want to go back right because it just once you've used it you realize like how much time this saves You by not",
    "start": "418400",
    "end": "423759"
  },
  {
    "text": "having to make all these decisions but have someone else make the decisions for you mhm yeah so I'm from the the old",
    "start": "423759",
    "end": "429199"
  },
  {
    "text": "days of the web where like pre- rails pre- Ruby on Rails there wasn't much and",
    "start": "429199",
    "end": "435000"
  },
  {
    "text": "then that really brought like the framework into the Forefront and then there was like a backlash against that",
    "start": "435000",
    "end": "440879"
  },
  {
    "text": "in the Ruby world with Sinatra which is morein to like Express in terms of what it provides and you could use Ruby on",
    "start": "440879",
    "end": "448599"
  },
  {
    "text": "Rails which was aad batteries included framework in the Ruby world right to build your web apps or you could go the",
    "start": "448599",
    "end": "454120"
  },
  {
    "text": "Sinatra route which was like this super clean minimal but beautiful basically router plus some other things and if you",
    "start": "454120",
    "end": "462199"
  },
  {
    "text": "use that you would then pull in different things that you need and I got attracted to that style and I went that",
    "start": "462199",
    "end": "468360"
  },
  {
    "text": "way a couple websites and what I found myself was like piece mealing together",
    "start": "468360",
    "end": "473800"
  },
  {
    "text": "Sinatra plus all these other components to basically be my own ad hoc RW on",
    "start": "473800",
    "end": "479680"
  },
  {
    "text": "Rails and then but it was just mine I'm the only one that you know it wasn't along with the big group of people working on it you know like I had all",
    "start": "479680",
    "end": "485879"
  },
  {
    "text": "these 17 different plugins in order to recreate that I think something about",
    "start": "485879",
    "end": "491800"
  },
  {
    "text": "that gravity of a bunch of people all putting their work on this one thing",
    "start": "491800",
    "end": "497000"
  },
  {
    "text": "especially when it's supported by like the runtime creators and maintainers is",
    "start": "497000",
    "end": "502440"
  },
  {
    "text": "pretty attractive even though at first it kind of offends your sensibilities of like hey I'd rather pick each part",
    "start": "502440",
    "end": "509400"
  },
  {
    "text": "eventually you start to see like why that's attractive and so it's pretty cool that I think we're starting to see",
    "start": "509400",
    "end": "516399"
  },
  {
    "text": "a lot of people step up and say let's let's go batteries included and see how that turns out so fresh has its own view",
    "start": "516399",
    "end": "523080"
  },
  {
    "text": "of the world every framework does otherwise why create a new one right just contribute to one that currently",
    "start": "523080",
    "end": "530000"
  },
  {
    "text": "exists tell us the perspective of the dino team and the fresh team on what a",
    "start": "530000",
    "end": "536240"
  },
  {
    "text": "web framework in 2022 should look like sure um so so fresh is really built to be fast like fast as in it serves fast",
    "start": "536240",
    "end": "543959"
  },
  {
    "text": "websites and you as a user using a website should have a great user experience and a reliable user",
    "start": "543959",
    "end": "550079"
  },
  {
    "text": "experience even if you're in a slow Network or in a slow device it should not drain your battery it should try to",
    "start": "550079",
    "end": "555360"
  },
  {
    "text": "use the platform for as many things as possible it shouldn't try to reinvent the wheel um so fresh really tries to",
    "start": "555360",
    "end": "561600"
  },
  {
    "text": "not reinvent the wheel pretty much anywhere it tries to really stick close to things that have already proven",
    "start": "561600",
    "end": "568079"
  },
  {
    "text": "popular in other Frameworks and that have have shown to be very fast or very reliable for users over the last couple",
    "start": "568079",
    "end": "574880"
  },
  {
    "text": "years one of them being service rendering by default and not shipping megabytes of or or even hundreds of",
    "start": "574880",
    "end": "581320"
  },
  {
    "text": "kilobytes to of JavaScript to users on every request but rather shipping them rendered HTML and then hydrating parts",
    "start": "581320",
    "end": "588640"
  },
  {
    "text": "of that HTML as is necessary so that's kind of the the worldview tried to make",
    "start": "588640",
    "end": "593680"
  },
  {
    "text": "it like fast and small and use things which people are already familiar with and have Prov proven to work well so no",
    "start": "593680",
    "end": "601040"
  },
  {
    "text": "build step no configuration unless you want to a lot of the niceties the zero",
    "start": "601040",
    "end": "606440"
  },
  {
    "text": "JavaScript overhead into the client by default but of course kind of allowing you to opt into more and more of that as",
    "start": "606440",
    "end": "614720"
  },
  {
    "text": "need be so it's a multi-page server side runer application like as you navigate",
    "start": "614720",
    "end": "620120"
  },
  {
    "text": "different pages in your browser are you loading fresh pages every time yeah",
    "start": "620120",
    "end": "625600"
  },
  {
    "text": "exactly so like there's no client side routing at all it's all completely servers i' routed and there's obviously",
    "start": "625600",
    "end": "631000"
  },
  {
    "text": "downsides to this right like there's upsides and downsides there's a trade-offs that you have to make like if you want to have very great offline",
    "start": "631000",
    "end": "637480"
  },
  {
    "text": "experience that's not something you can do like you need to do more on the client but most pages are things like",
    "start": "637480",
    "end": "642800"
  },
  {
    "text": "blogs or marketing sites or like even applications where like e-commerce sites",
    "start": "642800",
    "end": "648680"
  },
  {
    "text": "which are they're applications right like you can there's a lot of interaction that goes on there but you don't want them to imagine to buy",
    "start": "648680",
    "end": "655760"
  },
  {
    "text": "something you'd have to like open your web browser or your app store sorry search for the the store that you're",
    "start": "655760",
    "end": "660800"
  },
  {
    "text": "trying to buy something from download their app and then start using that like that's sort of how we're building a lot of sites right now except you don't go",
    "start": "660800",
    "end": "667560"
  },
  {
    "text": "to the App Store but instead you type into URL and then you have to wait like six or 7 seconds on your 3g connection",
    "start": "667560",
    "end": "673120"
  },
  {
    "text": "or or 20 seconds for all the JavaScript to download before you like see any anything that's interactive that's",
    "start": "673120",
    "end": "679480"
  },
  {
    "text": "really not a great development like we want to push back on that and try to do as much server side as possible and",
    "start": "679480",
    "end": "684920"
  },
  {
    "text": "really only ship things to the browser that's absolutely necessary to be in the browser M like things that require sub",
    "start": "684920",
    "end": "691240"
  },
  {
    "text": "100 millisecond response times like changing the color of a input field as",
    "start": "691240",
    "end": "696800"
  },
  {
    "text": "you type like input validation that kind of stuff I wish there were some her istics around that decision of client",
    "start": "696800",
    "end": "702480"
  },
  {
    "text": "side routing versus server side routing because it really seems like there are",
    "start": "702480",
    "end": "708320"
  },
  {
    "text": "cases where each one has its strengths and I think my view of the world is that",
    "start": "708320",
    "end": "714760"
  },
  {
    "text": "server side rendering and routing I guess as a consequence of that is probably like the 8020 I think it's on",
    "start": "714760",
    "end": "721480"
  },
  {
    "text": "the 80 side of websites and web apps whereas client side is probably more on",
    "start": "721480",
    "end": "726519"
  },
  {
    "text": "the 20 and if it was me it's probably like 9010 but that's just my view of the world but I think it's hard to make that",
    "start": "726519",
    "end": "732920"
  },
  {
    "text": "call have you ever had to decide like do I do client side like Spa do I do client",
    "start": "732920",
    "end": "738079"
  },
  {
    "text": "side routing do I do server side and what are the Tipping points that would",
    "start": "738079",
    "end": "743399"
  },
  {
    "text": "push you in one direction or the other in terms of like what you're trying to build I think that with spas or you know",
    "start": "743399",
    "end": "749800"
  },
  {
    "text": "client side routing single page apps that that model you have the flexibility that if you do decide you need some of",
    "start": "749800",
    "end": "756079"
  },
  {
    "text": "those features like you do want to have I don't know let's say audio playing across page loads so like you can have",
    "start": "756079",
    "end": "761639"
  },
  {
    "text": "music you know some audio player playing even when you click a link or something like that that that stuff's just not even possible in the in the fully",
    "start": "761639",
    "end": "768240"
  },
  {
    "text": "multi-page app model and so I think some people probably are picking these client",
    "start": "768240",
    "end": "774000"
  },
  {
    "text": "side single page app you know models for their website just because of the flexibility of like not knowing",
    "start": "774000",
    "end": "779560"
  },
  {
    "text": "whether they're going to need that in the future and um not wanting to be trapped I guess I felt that myself when",
    "start": "779560",
    "end": "785160"
  },
  {
    "text": "I was building bit midi I needed that behavior and so I was forced into this sort of model but then other times I've",
    "start": "785160",
    "end": "791320"
  },
  {
    "text": "wanted to do I wanted to just use like react or preact and have this nice sort of modern development flow and but also",
    "start": "791320",
    "end": "798959"
  },
  {
    "text": "be able to do server side rendering and have no client JavaScript and I felt like it was pretty hard to get like I",
    "start": "798959",
    "end": "805040"
  },
  {
    "text": "was either going to have to go and build a really old school website or have to take on client side routing and client",
    "start": "805040",
    "end": "810639"
  },
  {
    "text": "side everything and so it's cool that fresh is I I really like that it's like you get to write your your app in a",
    "start": "810639",
    "end": "817079"
  },
  {
    "text": "modern way and get the sort of like one-way data flow that react and preact and all that stuff gives you while still",
    "start": "817079",
    "end": "823399"
  },
  {
    "text": "getting all the advantages of a multi- page app so I think this is actually going to be a really nice sweet spot for",
    "start": "823399",
    "end": "828680"
  },
  {
    "text": "folks yeah like I I always like to like the example of like figma and like your",
    "start": "828680",
    "end": "833800"
  },
  {
    "text": "blog page right like figma is very obviously something that you need to do client side rendering for like this is",
    "start": "833800",
    "end": "839079"
  },
  {
    "text": "something that's impossible to do with with servers there's just too much interaction but something like your blog",
    "start": "839079",
    "end": "844279"
  },
  {
    "text": "this probably does not require servers rendering at all and it's like or sorry it doesn't require client side rendering",
    "start": "844279",
    "end": "849839"
  },
  {
    "text": "at all it can be fully service side rendered and like it's really difficult to figure out like at what point like is",
    "start": "849839",
    "end": "855120"
  },
  {
    "text": "an e-commerce site right like is that something you need to Spa MPA I think it really depends like as Farah said like",
    "start": "855120",
    "end": "861839"
  },
  {
    "text": "on exactly what you want to be doing like if there are things that you require an spa for then you sort of have",
    "start": "861839",
    "end": "868000"
  },
  {
    "text": "to use an Spa right but like I think you should try to default to an NPA and then only go with the spa route if you really",
    "start": "868000",
    "end": "874600"
  },
  {
    "text": "have to like if there's no other way around it yeah I would agree with that what's the flow like then for upgrading",
    "start": "874600",
    "end": "880880"
  },
  {
    "text": "to an spa or going into an Spa once you've started building something in fresh I see on your site you have this",
    "start": "880880",
    "end": "886199"
  },
  {
    "text": "thing called like an island maybe could you explain a little bit about Islands because I've never heard it seems like",
    "start": "886199",
    "end": "891360"
  },
  {
    "text": "every so often there's these new words that the JavaScript Community kind of invents for New Concepts like tree",
    "start": "891360",
    "end": "896720"
  },
  {
    "text": "shaking was one a while ago that it felt like we already had a word for it like in C compilers they call that a Linker",
    "start": "896720",
    "end": "902959"
  },
  {
    "text": "you know the linking step um but we had to create a new word so is is Island something like that could you explain",
    "start": "902959",
    "end": "908160"
  },
  {
    "text": "what an island is for us yeah yeah islands is like Progressive hydration essentially well it's not quite",
    "start": "908160",
    "end": "913600"
  },
  {
    "text": "Progressive hydration it kind of depends on how you Define progressive hydration the idea of islands is that do server side rendering and you enhance with",
    "start": "913600",
    "end": "921279"
  },
  {
    "text": "client interaction only some components of the page on the client so for example",
    "start": "921279",
    "end": "926720"
  },
  {
    "text": "you have a blog page with comment section you want the comment section to be like highly interactive and client",
    "start": "926720",
    "end": "932360"
  },
  {
    "text": "side rendered but you want the markdown itself of the blog to be completely servers side rendered the idea is that",
    "start": "932360",
    "end": "938319"
  },
  {
    "text": "that comment section can be an island which is like client side rendered the JavaScript for that a ship to the client",
    "start": "938319",
    "end": "944279"
  },
  {
    "text": "but the surrounding scaffold does not need to be shipped to the client at all like only the mark the markup itself the",
    "start": "944279",
    "end": "949600"
  },
  {
    "text": "the HTML needs to be shipped to the to the client and this like Jason Miller came up with the this concept of Island",
    "start": "949600",
    "end": "955399"
  },
  {
    "text": "architectures like two years ago I think he wrote a blog post about it there's a really great illustration on",
    "start": "955399",
    "end": "961240"
  },
  {
    "text": "his blog actually about like that really like showcases very well what it looks like where you have this page and you",
    "start": "961240",
    "end": "967399"
  },
  {
    "text": "like very specifically hydrate certain components but not the entire page okay so an island would be a specific",
    "start": "967399",
    "end": "974720"
  },
  {
    "text": "component that you want to hydrate client side let's take the comments example because I think I get it but I",
    "start": "974720",
    "end": "980199"
  },
  {
    "text": "might not get it is your whole comments section the island or is each individual",
    "start": "980199",
    "end": "985319"
  },
  {
    "text": "comment an island as everything in software it always depends right um sure",
    "start": "985319",
    "end": "990720"
  },
  {
    "text": "sure let's say you want to update the comments like you want to live refresh them in the browser as they're being",
    "start": "990720",
    "end": "996360"
  },
  {
    "text": "posted you would make the entire comment section an island because then you can like add or remove comments from the",
    "start": "996360",
    "end": "1003040"
  },
  {
    "text": "list if instead you want to let's say each comment has a share button which",
    "start": "1003040",
    "end": "1008199"
  },
  {
    "text": "opens like a share dialogue and that needs some client side JavaScript then like the comment content itself can be",
    "start": "1008199",
    "end": "1013440"
  },
  {
    "text": "Ser side rendered then you could make one Island per comment it's really like the lowest the smallest component",
    "start": "1013440",
    "end": "1019959"
  },
  {
    "text": "surrounding the interaction I guess okay so let's imagine a Circumstance the",
    "start": "1019959",
    "end": "1025280"
  },
  {
    "text": "former circumstance so we have a comments section that we want to be highly interactive each comment just",
    "start": "1025280",
    "end": "1030918"
  },
  {
    "text": "like floats in from the site or whatever we want to do okay so I make my comments",
    "start": "1030919",
    "end": "1036600"
  },
  {
    "text": "component an island and that means it's client side hydrated but what about the",
    "start": "1036600",
    "end": "1043438"
  },
  {
    "text": "existing comments that are previously there so on a typical MPA service side rendered you know I have seven comments",
    "start": "1043439",
    "end": "1049480"
  },
  {
    "text": "on my blog post and I hit command Arta refresh my server is going to render the HTML for those seven comments now do",
    "start": "1049480",
    "end": "1056320"
  },
  {
    "text": "that still happen but now you hydrate the interactivity or you actually just dynamically loading the HTML or what",
    "start": "1056320",
    "end": "1063440"
  },
  {
    "text": "Json whatever it is that gets hydrated you can do either so by default what will happen is that it will render the",
    "start": "1063440",
    "end": "1070039"
  },
  {
    "text": "HTML on both the client and the server so the fresh homepage has like this counter example on like right in the",
    "start": "1070039",
    "end": "1076799"
  },
  {
    "text": "homepage that counter server side rendered but the server side render has the buttons disabled for example so when",
    "start": "1076799",
    "end": "1083120"
  },
  {
    "text": "the client hydrates it enables the buttons so you still have the shell there you don't get like a layout jump",
    "start": "1083120",
    "end": "1088200"
  },
  {
    "text": "but it's not interactive yet and it shows that it is interactive until the JavaScript is there on the client to",
    "start": "1088200",
    "end": "1093799"
  },
  {
    "text": "like deal with it but like if you want to render some scaffold on the server that's in your component you can",
    "start": "1093799",
    "end": "1099400"
  },
  {
    "text": "conditionally check like if I'm on the server return scaffold right yeah or if you want it crawled so like maybe I want",
    "start": "1099400",
    "end": "1105919"
  },
  {
    "text": "my comment section crawled and so I'm going to server side render that being said every time you add a comment you break my cash and now I'm",
    "start": "1105919",
    "end": "1111919"
  },
  {
    "text": "dynamically rendering this page more often than I would other be I I would otherwise and so there's performance",
    "start": "1111919",
    "end": "1117520"
  },
  {
    "text": "concerns so it's kind of an it depends all the way down and it sounds like with the islands architecture you have the",
    "start": "1117520",
    "end": "1123400"
  },
  {
    "text": "flexibility to make those decisions yeah on a case-by casee basis a lot of Frameworks like nexj and remix they'll",
    "start": "1123400",
    "end": "1129720"
  },
  {
    "text": "send the entire renderer for the entire page to the client right to be able to do client side navigation and and",
    "start": "1129720",
    "end": "1135880"
  },
  {
    "text": "routing and because fresh does not do any of this like you can be very very specific about what you sent to the",
    "start": "1135880",
    "end": "1142120"
  },
  {
    "text": "client you can really scale it down to as small as you need it to be and what are the wins for doing that so the wins",
    "start": "1142120",
    "end": "1148280"
  },
  {
    "text": "are that you ship a last JavaScript to the client right like if you have a Blog and use nextjs and you have like use",
    "start": "1148280",
    "end": "1154600"
  },
  {
    "text": "like react markdown or whatever to render some markdown into HTML you do",
    "start": "1154600",
    "end": "1159640"
  },
  {
    "text": "that once on the server then you ship the entire rendering infrastructure to the client you ship the mark down to the",
    "start": "1159640",
    "end": "1165280"
  },
  {
    "text": "client and then you do the rendering again on the client even though it's already been done on the server like what's the point there right like that's",
    "start": "1165280",
    "end": "1171679"
  },
  {
    "text": "that's just wasting CPU Cycles on your mobile device so M the content hasn't changed since the server rendered it",
    "start": "1171679",
    "end": "1177159"
  },
  {
    "text": "versus when the client renders it so you can avoid that entire thing so this Island's concept is not like a fringe",
    "start": "1177159",
    "end": "1185159"
  },
  {
    "text": "part of fresh this is like core to what fresh is right cuz I generated a scaffolded app and there's routes and",
    "start": "1185159",
    "end": "1191720"
  },
  {
    "text": "there's Island like these are folder names in the structures islands and routes and so you're gonna be writing some islands I suppose when you're using",
    "start": "1191720",
    "end": "1198760"
  },
  {
    "text": "fresh yep okay Frost is this an old concept that's been renamed or is this A New Concept for you cuz now he's",
    "start": "1198760",
    "end": "1204640"
  },
  {
    "text": "explained what it means I mean for me it makes sense but I'm not sure if it had like a previous name or if it's actually just like been invented by Jason Miller",
    "start": "1204640",
    "end": "1211679"
  },
  {
    "text": "and and the JS peoples it's not ringing any bells for me I mean I know there's other Frameworks that let you decide",
    "start": "1211679",
    "end": "1217840"
  },
  {
    "text": "whether certain components should run on the client or on the server I think meteor even had like something a long",
    "start": "1217840",
    "end": "1225400"
  },
  {
    "text": "time ago I don't know what they called it I think like my question about islands is just like how easy is it to go between something being an island and",
    "start": "1225400",
    "end": "1231080"
  },
  {
    "text": "something not being an island like because you have a whole folder there for it so like if I start making some islands and then I realize actually I",
    "start": "1231080",
    "end": "1237799"
  },
  {
    "text": "don't want this to be an island is it a whole bunch of work to go back and forth because I would worry about no I'd almost want it to be just like a Boolean",
    "start": "1237799",
    "end": "1243360"
  },
  {
    "text": "or something that I could turn on say do this on the client or do this on the server yeah and it really is like the",
    "start": "1243360",
    "end": "1248960"
  },
  {
    "text": "Boolean is is it in this folder or is in like is it in your component folder is in your Islands folder that's it like",
    "start": "1248960",
    "end": "1254400"
  },
  {
    "text": "that's the only difference the files are exactly the same it's just a regular pre component the code is just a regular preac component yeah Okay and like the",
    "start": "1254400",
    "end": "1261640"
  },
  {
    "text": "server side render will automatically figure out when you're importing and or actually not when you're importing but when you're using an island and it'll",
    "start": "1261640",
    "end": "1268080"
  },
  {
    "text": "only ship the code to the client if you're actually using a given Island so you can have like hundreds of islands",
    "start": "1268080",
    "end": "1273320"
  },
  {
    "text": "and it'll only send the code for the islands that you're actually using to the client okay so the the framework is",
    "start": "1273320",
    "end": "1278960"
  },
  {
    "text": "just smart enough to know it's in this folder these are islands and if it's not it's not an island like that's that's your indicator yeah so drag and drop for",
    "start": "1278960",
    "end": "1286120"
  },
  {
    "text": "us just drag it out of that Islands folder drop it into the components I guess yeah interesting not the best",
    "start": "1286120",
    "end": "1291919"
  },
  {
    "text": "diffs well I don't know like on GitHub like a Boolean prop or something would be a better diff in terms of like I'm",
    "start": "1291919",
    "end": "1297480"
  },
  {
    "text": "switching it but you know trade-offs I also wonder if you're going to want to be have more flexibility down the line",
    "start": "1297480",
    "end": "1303000"
  },
  {
    "text": "in terms of like how do you deal with an island cuz like you might want to have certain ones where there's not even a server side render at all and it's like",
    "start": "1303000",
    "end": "1310080"
  },
  {
    "text": "100% client side or maybe uh you want some where it blocks the page like you want to this like island is super",
    "start": "1310080",
    "end": "1316960"
  },
  {
    "text": "important so you want to like I don't know send it like pretty urgently down or I can imagine somewhere would say",
    "start": "1316960",
    "end": "1322159"
  },
  {
    "text": "like don't even like load the code for this until they scroll it into view because this is like a really low priority Island so just save on that JS",
    "start": "1322159",
    "end": "1328520"
  },
  {
    "text": "if they don't even scroll to the comments section yeah you know don't even send it I wonder if you're going to do if you're going to need to add more",
    "start": "1328520",
    "end": "1333840"
  },
  {
    "text": "options and more more Flags there and then the islands folder won't be enough because you need like islands and then like three other kinds of types of",
    "start": "1333840",
    "end": "1341440"
  },
  {
    "text": "islands yeah yeah I get it so I think right now what fresh does is it will",
    "start": "1341440",
    "end": "1346679"
  },
  {
    "text": "hydrate the islands as quick as it can but it'll like still try to yield to the browser as often as it can so you don't",
    "start": "1346679",
    "end": "1352440"
  },
  {
    "text": "like block animations stuff like that but it is actually totally possible that",
    "start": "1352440",
    "end": "1357640"
  },
  {
    "text": "we add an option in the future where you could just like export an options bag from your Islands file in your Islands",
    "start": "1357640",
    "end": "1363159"
  },
  {
    "text": "folder so the other restriction is that you have to have one Island per file in the islands folder so every file is",
    "start": "1363159",
    "end": "1370200"
  },
  {
    "text": "specifically one Island so you can like have an options bag there which says this island should only be hydrated once",
    "start": "1370200",
    "end": "1376400"
  },
  {
    "text": "it Scrolls into view or once like it should only be loaded on small devices or it should only be loaded when this media query matches or whatever",
    "start": "1376400",
    "end": "1383120"
  },
  {
    "text": "else right it's just not implemented because yeah that would be pretty cool yeah that's cool so the islands folder",
    "start": "1383120",
    "end": "1389679"
  },
  {
    "text": "then the routes folder tell us about routing how it works yeah so the routes folder is actually very much inspired by",
    "start": "1389679",
    "end": "1395919"
  },
  {
    "text": "nextjs this is one of these things which it just like nextjs did an awesome job originally with how the routing worked",
    "start": "1395919",
    "end": "1402559"
  },
  {
    "text": "it still does I think and yeah it's pretty much it works the same way like it's one file per route you can like",
    "start": "1402559",
    "end": "1408600"
  },
  {
    "text": "have Dynamic routes where you like specify the match yourself if you need to do something really Advanced but yeah",
    "start": "1408600",
    "end": "1414200"
  },
  {
    "text": "it's one file per route and the route can have a component that it renders and it can have a Handler and that Handler",
    "start": "1414200",
    "end": "1420480"
  },
  {
    "text": "can do things like data loading handlers are really just like asnc functions which take in a request and return a",
    "start": "1420480",
    "end": "1426679"
  },
  {
    "text": "response web request and web response so you can like do anything you want in there and at any point in time you can",
    "start": "1426679",
    "end": "1432600"
  },
  {
    "text": "call the render function this might not make much sense if you haven't seen the code but it's right in the documentation",
    "start": "1432600",
    "end": "1437960"
  },
  {
    "text": "if you want to look at it and you can call that render function that will render out the component into a response and by default you don't need to specify",
    "start": "1437960",
    "end": "1444080"
  },
  {
    "text": "this like the default for the Handler is that it just renders out your component but like if you want to do data loading",
    "start": "1444080",
    "end": "1450120"
  },
  {
    "text": "you can do that in there or if you want to do like a redirect you can also do that in there you can do like anything",
    "start": "1450120",
    "end": "1455919"
  },
  {
    "text": "you want in there it's just a just an HTTP Handler right and like you can have different HTP handlers for post methods and get methods so you can like handle",
    "start": "1455919",
    "end": "1462640"
  },
  {
    "text": "form submissions that way as well the routes folder is really you have one file per p path like path matcher you",
    "start": "1462640",
    "end": "1469919"
  },
  {
    "text": "want to match and inside of there you can declare both a component to render for that page and the handlers for each",
    "start": "1469919",
    "end": "1477080"
  },
  {
    "text": "of the HTP methods that you want to handle this is really cool I like it a lot it's really elegant thanks yeah yeah",
    "start": "1477080",
    "end": "1483480"
  },
  {
    "text": "yeah it's cool you have you have like a Handler function that gets called and you can do your data fetching in there",
    "start": "1483480",
    "end": "1488600"
  },
  {
    "text": "and then you can have the jsx component that gets passed in all the props those",
    "start": "1488600",
    "end": "1494760"
  },
  {
    "text": "basically come from anything that's matched in the URL so like props from the URL like",
    "start": "1494760",
    "end": "1500480"
  },
  {
    "text": "different you know sort of substitutions in the URL and then also anything that the get Handler decides to return so",
    "start": "1500480",
    "end": "1506399"
  },
  {
    "text": "that's where you can do your you're like fetching stuff from the database or whatever you need to do that's really cool does that mean that this get",
    "start": "1506399",
    "end": "1512440"
  },
  {
    "text": "Handler thing runs every single for every single request yeah okay yeah so what you can do and this is not",
    "start": "1512440",
    "end": "1518159"
  },
  {
    "text": "implemented right now well it it is if you put in some muscle work yourself but you can cach these things as well you",
    "start": "1518159",
    "end": "1523360"
  },
  {
    "text": "can have something called middle Wares which allow you to essentially intercept routes before they're matched or",
    "start": "1523360",
    "end": "1529559"
  },
  {
    "text": "intercept like large swats of routes all at once and there you can do things like cashing for example if you don't want to",
    "start": "1529559",
    "end": "1535760"
  },
  {
    "text": "render on every request so how would that work if you wanted to like have a page that only you build it only once a",
    "start": "1535760",
    "end": "1542520"
  },
  {
    "text": "day or something like that you only so the idea with fresh is still that you would have you always have a server running like it's really built to deploy",
    "start": "1542520",
    "end": "1549000"
  },
  {
    "text": "to the edge to deploy to things like do know deploying Cloud for workers where you can render really close like server",
    "start": "1549000",
    "end": "1554200"
  },
  {
    "text": "said render close to your users and where the cost of doing that is very low so if you want to do something like that",
    "start": "1554200",
    "end": "1560000"
  },
  {
    "text": "what you would probably do is You' put a CDN in front of the like the origin and",
    "start": "1560000",
    "end": "1565399"
  },
  {
    "text": "use like cach response headers to tell the CDN to Cache Pages for a given amount of time which is what we do with Chang log.com and it it works great I",
    "start": "1565399",
    "end": "1572760"
  },
  {
    "text": "think it's a actually a really great strategy is just serice side render it but then just cash it for as long as you",
    "start": "1572760",
    "end": "1578200"
  },
  {
    "text": "want at your CDN now that assumes that you have a CDN of course but what about the data then so if I have my dos",
    "start": "1578200",
    "end": "1586720"
  },
  {
    "text": "running on all these different Cloud flare workers or Dino deploy edges and I'm server side rendering a response but",
    "start": "1586720",
    "end": "1593679"
  },
  {
    "text": "let's say I've got a postgress database that lives in LaGuardia or something mhm do they all just connect back to that or",
    "start": "1593679",
    "end": "1599240"
  },
  {
    "text": "is there way of making that sucker live close to the edges it's kind of a load",
    "start": "1599240",
    "end": "1604279"
  },
  {
    "text": "of question because I know this is something that lots of people are working on I want to hear what your thoughts are on it it really depends as",
    "start": "1604279",
    "end": "1609960"
  },
  {
    "text": "as always it depends um cop out no yeah no no I'm just prefixing this cuz I'm",
    "start": "1609960",
    "end": "1616000"
  },
  {
    "text": "going to like have answer a bunch of different ways here so one way of doing this is if you're really read heavy you",
    "start": "1616000",
    "end": "1622000"
  },
  {
    "text": "can do Global distributed replicas right right for your data if your data doesn't",
    "start": "1622000",
    "end": "1627039"
  },
  {
    "text": "change very often you can do caches and if your data does change very often you can have use something like cockroach TB",
    "start": "1627039",
    "end": "1633320"
  },
  {
    "text": "which can run in a bunch of regions across the world and it can even in inside of the same like SQL table you",
    "start": "1633320",
    "end": "1639679"
  },
  {
    "text": "could have certain rows live in certain regions and certain other rows live in certain other regions so for example for",
    "start": "1639679",
    "end": "1645760"
  },
  {
    "text": "users that are in the EU you'd have their data live in Frankfurt and if for users in the US you'd have it live in",
    "start": "1645760",
    "end": "1652640"
  },
  {
    "text": "somewhere in the US in like Ohio or whatever and for users in Asia you could have it live in I don't know Singapore",
    "start": "1652640",
    "end": "1658200"
  },
  {
    "text": "or Japan or something like that this really depends exactly on what you're doing like for a Blog it probably",
    "start": "1658200",
    "end": "1664159"
  },
  {
    "text": "doesn't matter too much right even if you have a comment section on a Blog you could do caching there where if a",
    "start": "1664159",
    "end": "1669919"
  },
  {
    "text": "comment like shows up after 30 seconds versus after none no seconds like that",
    "start": "1669919",
    "end": "1675880"
  },
  {
    "text": "doesn't really matter too much right can you render an Island by itself and the reason why I asked that is I'm starting",
    "start": "1675880",
    "end": "1681720"
  },
  {
    "text": "to think about this situation where you have this server side rendered or cached",
    "start": "1681720",
    "end": "1687120"
  },
  {
    "text": "in the case of what you're saying with put an origin you know put put a CDN in front of your origin and cach the response that works great except for",
    "start": "1687120",
    "end": "1693919"
  },
  {
    "text": "like lots of websites have just like some sections that are Dynamic let me change that not just Dynamic but",
    "start": "1693919",
    "end": "1700240"
  },
  {
    "text": "personalized MH to like the signed in user for example yeah and so that breaks a lot of caching in many places and",
    "start": "1700240",
    "end": "1706159"
  },
  {
    "text": "you're like well I have to render the whole p P dynamically because it's different for Luca than it is for fos",
    "start": "1706159",
    "end": "1711840"
  },
  {
    "text": "mhm and I can have one that's for everybody who's logged out but once you're logged in it breaks but I think maybe with Islands if you had like",
    "start": "1711840",
    "end": "1718559"
  },
  {
    "text": "certain areas of your site that are personalized you could potentially have",
    "start": "1718559",
    "end": "1724039"
  },
  {
    "text": "a static version of the HTML server side rendered quote unquote but it's the same",
    "start": "1724039",
    "end": "1729120"
  },
  {
    "text": "every time or whatever cached and then maybe hydrate just the dynamic personalized portions if you could have",
    "start": "1729120",
    "end": "1735760"
  },
  {
    "text": "an Island by itself just be rendered is that something people are doing yeah so that's possible one problem with that is",
    "start": "1735760",
    "end": "1742120"
  },
  {
    "text": "that it you would essentially send back a empty shell to users if they're signed in right and you would then fill in that",
    "start": "1742120",
    "end": "1747919"
  },
  {
    "text": "shell using client side rendering we much prefer the model where for stuff like this you just render the page on",
    "start": "1747919",
    "end": "1754840"
  },
  {
    "text": "every request dynamically we have these edges nowadays like doo deploy is like 34 regions across the world uh you can",
    "start": "1754840",
    "end": "1760760"
  },
  {
    "text": "get like 50 millisecond response St from like anywhere like not if you're in like Australia yeah but now if I'm going back to LaGuardia for my data like if you",
    "start": "1760760",
    "end": "1767679"
  },
  {
    "text": "think about an app like Facebook which I honestly don't know how it works cuz I haven't used Facebook since like 2008",
    "start": "1767679",
    "end": "1773799"
  },
  {
    "text": "but I know it has like messenger I know it's got your list of friends it's got your news like all these things are highly personalized to who you are yeah",
    "start": "1773799",
    "end": "1780760"
  },
  {
    "text": "like all that data needs to get fetched from some database somewhere sure at",
    "start": "1780760",
    "end": "1786519"
  },
  {
    "text": "that point your Edge executions they're kind of moot aren't they exactly you need to have your data distributed as",
    "start": "1786519",
    "end": "1792360"
  },
  {
    "text": "well right like if you only have your compute distributed but not your data then yeah like that's not great and",
    "start": "1792360",
    "end": "1798600"
  },
  {
    "text": "things like HOH htb which is postest compatible by the way does allow you to do this it allows you to spread data",
    "start": "1798600",
    "end": "1804640"
  },
  {
    "text": "across the world to where your users are so that you can have really fast read",
    "start": "1804640",
    "end": "1810080"
  },
  {
    "text": "and write access to your data right and like if you don't care about write access so much you can have Global replicas and Global replicas will allow",
    "start": "1810080",
    "end": "1816519"
  },
  {
    "text": "you to do really fast reads from anywhere yeah at the cost of slightly Soler rights because you need to talk to",
    "start": "1816519",
    "end": "1823039"
  },
  {
    "text": "some Central database for the rights this really goes hand inand with having a some robust story on global",
    "start": "1823039",
    "end": "1829200"
  },
  {
    "text": "distributed data and I think that is actually something that currently we're really lacking like we don't really have",
    "start": "1829200",
    "end": "1835080"
  },
  {
    "text": "a lot of good options for that and like I don't want to leak too much stuff but this is something we are working on for Doo deploy and like to have have really",
    "start": "1835080",
    "end": "1842159"
  },
  {
    "text": "awesome globally distributed data where you don't have to think of these trade-offs as much it'll just like figure it out for you so you can have",
    "start": "1842159",
    "end": "1848399"
  },
  {
    "text": "like Fast read access anywhere to your data I think that's the goose that lays the golden egg right there it's",
    "start": "1848399",
    "end": "1854000"
  },
  {
    "text": "interesting to hear that you're working on it I know fly.io for instance is working on it I pretty sure Cloud flare",
    "start": "1854000",
    "end": "1859720"
  },
  {
    "text": "is working on it I bet netlify is working on it Etc so exciting and like",
    "start": "1859720",
    "end": "1864799"
  },
  {
    "text": "you said there are people like fauna cockroach who are providing like the data layer for those things but somebody",
    "start": "1864799",
    "end": "1870320"
  },
  {
    "text": "that pulls it all together into a singular service I think is a pretty compelling offer at that point I think",
    "start": "1870320",
    "end": "1875760"
  },
  {
    "text": "until then like all this other stuff is cool but you're kind of like got that one missing piece you want to tell us",
    "start": "1875760",
    "end": "1881919"
  },
  {
    "text": "more I mean you don't want to say too much but you could say more that don't one get you in trouble he just smiling",
    "start": "1881919",
    "end": "1888080"
  },
  {
    "text": "at me now no [Laughter] comment oh let's take a break right here",
    "start": "1888080",
    "end": "1895279"
  },
  {
    "text": "we'll tease them we'll have a [Music]",
    "start": "1895279",
    "end": "1915279"
  },
  {
    "text": "cliffhanger this episode is is brought to you by our friends at Square develop on the platform that sellers trust",
    "start": "1915279",
    "end": "1920960"
  },
  {
    "text": "here's what you can do with square you can Bridge more experiences you can build online mobile and in-person commerce experiences that connect more",
    "start": "1920960",
    "end": "1928200"
  },
  {
    "text": "customers and sellers you can build custom booking Solutions you can create and track orders you can accept payments",
    "start": "1928200",
    "end": "1934080"
  },
  {
    "text": "you can manage and curate inventory you can organize customers you can manage employees you can extend Square gift",
    "start": "1934080",
    "end": "1940240"
  },
  {
    "text": "cards to your app you can use afterpay and all this is powered by the world class square apis and S K that enable",
    "start": "1940240",
    "end": "1948279"
  },
  {
    "text": "you to build full featured business apps for yourself or millions of square sellers so much is available as a square",
    "start": "1948279",
    "end": "1954639"
  },
  {
    "text": "Solutions partner learn more and get started at changel log.com Square again changel log.com",
    "start": "1954639",
    "end": "1961280"
  },
  {
    "text": "[Music]",
    "start": "1961280",
    "end": "1976039"
  },
  {
    "text": "Square",
    "start": "1976039",
    "end": "1979039"
  },
  {
    "text": "okay let's get into it quick an HTML first framework mishko there's lots of",
    "start": "1982200",
    "end": "1988720"
  },
  {
    "text": "Frameworks out there you're the creator of one of them it's still out there people still use it kall lots of people are still using it but there's react",
    "start": "1988720",
    "end": "1995360"
  },
  {
    "text": "there's view there's felt there's new Frameworks like fresh from the dino side",
    "start": "1995360",
    "end": "2001279"
  },
  {
    "text": "why another framework the million dollar question yeah and that's a very good place to start you know why other",
    "start": "2001279",
    "end": "2007240"
  },
  {
    "text": "framework and you're right there is a dime a dozen for them are isn't there out there so I'm going to go on a lium",
    "start": "2007240",
    "end": "2013480"
  },
  {
    "text": "here and hopefully I'm not going to be too controversial and I'm going to say that like all the existing Frameworks you're",
    "start": "2013480",
    "end": "2019679"
  },
  {
    "text": "familiar with angular view swel Etc and kind of angular I'm going to maybe take some credit here kind of started the",
    "start": "2019679",
    "end": "2025159"
  },
  {
    "text": "trend of component-based client side Frameworks they all are essentially the",
    "start": "2025159",
    "end": "2030679"
  },
  {
    "text": "same in the sense that how they work but of course the syntax and the DX is very different right so do you do you like",
    "start": "2030679",
    "end": "2037320"
  },
  {
    "text": "your templates in the form of a string do you like them in the form of a jsx do you like them inline together with the",
    "start": "2037320",
    "end": "2042519"
  },
  {
    "text": "code or separated in the files Etc these are all different kind of trade-offs different Frameworks make but in the",
    "start": "2042519",
    "end": "2048679"
  },
  {
    "text": "heart of them like at the core of how they work they're all essentially the same and what I mean by that is that",
    "start": "2048679",
    "end": "2053919"
  },
  {
    "text": "they really have one concern and that is to just render things on the client and it's pretty much what they kind of all",
    "start": "2053919",
    "end": "2060520"
  },
  {
    "text": "do and so quick is a different thing right quick is what I call resumable and",
    "start": "2060520",
    "end": "2067440"
  },
  {
    "text": "the best way I can explain resumable is well let me back up a second so the existing Frameworks that we have I call",
    "start": "2067440",
    "end": "2073118"
  },
  {
    "text": "them replayable meaning that when they are start up on the client so if you do",
    "start": "2073119",
    "end": "2078200"
  },
  {
    "text": "serers side rendering they have to replay all of the work that the server did in order to get them in the correct state right and we we have a word for",
    "start": "2078200",
    "end": "2084760"
  },
  {
    "text": "that and that word is hydration and what that means is that when you navigate to a page you might immediately see a",
    "start": "2084760",
    "end": "2091240"
  },
  {
    "text": "server side rendered content but there is some time before you can actually interact with the page and the problem",
    "start": "2091240",
    "end": "2096480"
  },
  {
    "text": "is the more complicated the page becomes the more time it requires to wake up and",
    "start": "2096480",
    "end": "2101880"
  },
  {
    "text": "of course we have tricks like lazy loading but it turns out lazy loading doesn't quite work here because lazy loading is only useful for components",
    "start": "2101880",
    "end": "2108000"
  },
  {
    "text": "that are not currently in the Dom tree if a component is in a Dom tree you have to hydrate it and that means that even",
    "start": "2108000",
    "end": "2114520"
  },
  {
    "text": "if it's lazy loaded component you have to load it and then do all this stuff so all of that means in practice that",
    "start": "2114520",
    "end": "2119760"
  },
  {
    "text": "especially on mobile devices and slow connections the startup performance is kind of bad and Google has this thing",
    "start": "2119760",
    "end": "2126520"
  },
  {
    "text": "called Google page speed score and they they measure and they look at different websites and how they do and they're",
    "start": "2126520",
    "end": "2131880"
  },
  {
    "text": "just trying to kind of push the industry towards like faster better experiences for the end users and the Google page",
    "start": "2131880",
    "end": "2137560"
  },
  {
    "text": "speed score is not very good for most websites right so and then the reason I'm going to argue for that is because",
    "start": "2137560",
    "end": "2143680"
  },
  {
    "text": "all these Frameworks have this thing called hydration so I kind of spoke for a long time in the in the thing and I haven't really talked about quick but",
    "start": "2143680",
    "end": "2149800"
  },
  {
    "text": "does that make sense so far I'm with you k you with him yeah okay so before I",
    "start": "2149800",
    "end": "2155880"
  },
  {
    "text": "kind of explain how quick works I think it's useful to kind of go and do a parallel so back in the day when like",
    "start": "2155880",
    "end": "2162440"
  },
  {
    "text": "VMware first came out virtual machines I was blown away with a particular thing",
    "start": "2162440",
    "end": "2167480"
  },
  {
    "text": "about them which is that on my host computer I can boot up let's say Linux as my virtual machine and the Linux",
    "start": "2167480",
    "end": "2174920"
  },
  {
    "text": "boots up goes into through its boot up process and finally at some point I can log in and once I'm logged in I can",
    "start": "2174920",
    "end": "2180400"
  },
  {
    "text": "let's say open up a uh Chrome browser and I can navigate to like Google docs for example I can start writing my",
    "start": "2180400",
    "end": "2186800"
  },
  {
    "text": "document and at some point I can just save the virtual machine into a disk and I can take that file and send it to a",
    "start": "2186800",
    "end": "2193240"
  },
  {
    "text": "friend of mine and that friend can then just open the file up and continue exactly where I left off right",
    "start": "2193240",
    "end": "2199079"
  },
  {
    "text": "specifically they don't have to go through the boot up process the login process the opening up of the Chrome or",
    "start": "2199079",
    "end": "2205960"
  },
  {
    "text": "uh Google Docs or anything like that they literally bam they're in the final thing and ready to go right and this is",
    "start": "2205960",
    "end": "2212240"
  },
  {
    "text": "what I call resumable okay and it is specifically how our current Frameworks do not work right they can't do that",
    "start": "2212240",
    "end": "2218400"
  },
  {
    "text": "trick instead what they do is they essentially every time you to navigate to a page they for all practical purposes they have to boot up and this",
    "start": "2218400",
    "end": "2225119"
  },
  {
    "text": "Buddha process is what we call hydration is really the way the framework recovers",
    "start": "2225119",
    "end": "2231000"
  },
  {
    "text": "all of the information about where the components are where the listeners are what is the data and so on and so forth",
    "start": "2231000",
    "end": "2237520"
  },
  {
    "text": "and we have some tricks like we can like prevent the client application from",
    "start": "2237520",
    "end": "2242800"
  },
  {
    "text": "doing fetch requests back to the server by prefetching and preop cating like local caches that we can inline into",
    "start": "2242800",
    "end": "2250000"
  },
  {
    "text": "into our page but end of the day like the application has to replay right it has to hydrate it has to boot up it has",
    "start": "2250000",
    "end": "2256000"
  },
  {
    "text": "to go through all of these phases and all of these phases kind of slow us down",
    "start": "2256000",
    "end": "2261040"
  },
  {
    "text": "in terms of the startup what it means in practice is that if somebody sends you a link on Twitter or somewhere says like",
    "start": "2261040",
    "end": "2266079"
  },
  {
    "text": "look at these awesome shoes you should go buy them you get the link you click on it and you see the shoes immediately and then you're like oh I want to buy it",
    "start": "2266079",
    "end": "2272160"
  },
  {
    "text": "I hit the at the shopping cart and nothing happens for several seconds right and at some point you're just like you know what I don't really need the",
    "start": "2272160",
    "end": "2278160"
  },
  {
    "text": "shoes right and you leave and so if we can improve a startup performance I",
    "start": "2278160",
    "end": "2284960"
  },
  {
    "text": "think it's a huge impact for companies and Amazon has done tons of studies on this that they basically published and I",
    "start": "2284960",
    "end": "2290119"
  },
  {
    "text": "don't know the exact numbers but basically they say for every you know 100 milliseconds that we can improve rendering performance and interactively",
    "start": "2290119",
    "end": "2295800"
  },
  {
    "text": "performance it's like x million dollar worth of revenue for us right so they actually know this and they spent huge",
    "start": "2295800",
    "end": "2302040"
  },
  {
    "text": "amounts of time and effort making sure that they can be as fast as possible and so this one of the reasons actually that",
    "start": "2302040",
    "end": "2309200"
  },
  {
    "text": "Amazon actually doesn't use any framework because all Frameworks have this hydration or res replayability",
    "start": "2309200",
    "end": "2315200"
  },
  {
    "text": "property like this startup cost property and it would make the startup performance of Amazon slow and so they",
    "start": "2315200",
    "end": "2322079"
  },
  {
    "text": "have kind of a custom I don't know what they do but it's not any existing framework right I just wanted to comment",
    "start": "2322079",
    "end": "2327400"
  },
  {
    "text": "real quick on the impulse buy of those shoes like you know first three or 4 seconds you're like I want to buy these",
    "start": "2327400",
    "end": "2332760"
  },
  {
    "text": "suckers but the point is taken it's just funny to think about somebody clicking a link and just like ready to buy shoes",
    "start": "2332760",
    "end": "2337920"
  },
  {
    "text": "before the thing can even download the payload that being said around the world different places you know maybe that could be 8 9 10 12 seconds if things are",
    "start": "2337920",
    "end": "2345119"
  },
  {
    "text": "not going well so Google page speed right emulates things and you can go and navigate to many popular brands I don't",
    "start": "2345119",
    "end": "2352560"
  },
  {
    "text": "want to call anybody out and Google page speed will say 30 seconds before the page is interactive really and it's like",
    "start": "2352560",
    "end": "2359040"
  },
  {
    "text": "common big Brands right so the point is like you can go and look at top 50",
    "start": "2359040",
    "end": "2365119"
  },
  {
    "text": "e-commerce websites and what you will discover is that I think the number like in terms of performance like Google puts",
    "start": "2365119",
    "end": "2371720"
  },
  {
    "text": "them in the red yellow and green bucket top 50 websites right nobody's in the green green is a unicorn that doesn't",
    "start": "2371720",
    "end": "2378560"
  },
  {
    "text": "exist and I know for your simple Hello World website you can probably get green but I'm talking about a real e-commerce",
    "start": "2378560",
    "end": "2385000"
  },
  {
    "text": "websit with the real needs right nobody's in the green there are very few in the yellow I believe Amazon is in the",
    "start": "2385000",
    "end": "2391119"
  },
  {
    "text": "yellow I believe Ikea is in the yellow and Staples which kind of surprises me is in the yellow and and then everybody",
    "start": "2391119",
    "end": "2396920"
  },
  {
    "text": "else right for you wow even like Nike yeah yeah I mean assuming everyone and",
    "start": "2396920",
    "end": "2403160"
  },
  {
    "text": "so the interesting thing for me is that we have this thing in the industry where like say your website is slow what we do",
    "start": "2403160",
    "end": "2410040"
  },
  {
    "text": "is we we kind of blame the developers like oh your developers are not very good they messed up like they should",
    "start": "2410040",
    "end": "2415280"
  },
  {
    "text": "have done this this this like it's easy to kind of blame the developer for this thing but it turns out that developer",
    "start": "2415280",
    "end": "2421200"
  },
  {
    "text": "has actually very little choice about this or to put it differently like if I practice the best practices for whatever",
    "start": "2421200",
    "end": "2428000"
  },
  {
    "text": "framework I'm using right I will end up in a place that is less than ideal right",
    "start": "2428000",
    "end": "2434839"
  },
  {
    "text": "like you don't get performant website out of the box by just following the best practices right it's usually like",
    "start": "2434839",
    "end": "2440119"
  },
  {
    "text": "some crazy hacks that you have to do and spend time on afterwards in order to get there so I'd love to dig in a little bit",
    "start": "2440119",
    "end": "2447200"
  },
  {
    "text": "actually on the the virtual machine analogy yeah because I think it's quite interesting to think about and I I don't",
    "start": "2447200",
    "end": "2453480"
  },
  {
    "text": "know the numbers on this but when you send a virtual machine with State it's boot it up I would assume and correct me",
    "start": "2453480",
    "end": "2460440"
  },
  {
    "text": "if you know know better on this but you have to send much more data across because you're sending application State",
    "start": "2460440",
    "end": "2466359"
  },
  {
    "text": "and all these different things as compared to Simply booting from a boot file or something like that and I know",
    "start": "2466359",
    "end": "2473040"
  },
  {
    "text": "in the sort of web world was it cloudflare or someone was looking at doing web workers and trying to make",
    "start": "2473040",
    "end": "2480200"
  },
  {
    "text": "them boot faster so that you know if you were running JavaScript you wouldn't have to boot up the whole JavaScript",
    "start": "2480200",
    "end": "2485359"
  },
  {
    "text": "process and they compile it down to an image in web assembly and it was much much faster to boot but they're doing",
    "start": "2485359",
    "end": "2492480"
  },
  {
    "text": "that on the machine where sending bites over the wire is not a problem so I'm",
    "start": "2492480",
    "end": "2498040"
  },
  {
    "text": "kind of curious first of all like do you happen to know what is the space differential in terms of how much data",
    "start": "2498040",
    "end": "2503839"
  },
  {
    "text": "you need to send to kind of boot up in space and how does that play out when we're talking about something that's going to happen over a web connection",
    "start": "2503839",
    "end": "2510400"
  },
  {
    "text": "potentially a slow one yeah so that's all excellent questions actually I think the short answer is you're taking the analogy too far",
    "start": "2510400",
    "end": "2517640"
  },
  {
    "text": "fair enough okay I was wondering that as well yeah yeah so what I'm trying to get out is that we have this property we",
    "start": "2517640",
    "end": "2523440"
  },
  {
    "text": "call reasonability which is that the application can resume where the server left off and what we mean by that is",
    "start": "2523440",
    "end": "2530040"
  },
  {
    "text": "that at no point should there be duplication of work like if server did some work then the client shouldn't have",
    "start": "2530040",
    "end": "2536440"
  },
  {
    "text": "to do that right now in a normal VM machine like yes you serialize the whole",
    "start": "2536440",
    "end": "2542200"
  },
  {
    "text": "memory which is huge right and that's not kind of how this works like we're not right sending a serialized state in",
    "start": "2542200",
    "end": "2548440"
  },
  {
    "text": "here instead what we do is we basically say what we want to do is we want to serialize the state of the application",
    "start": "2548440",
    "end": "2554680"
  },
  {
    "text": "as well as the state of the framework people forget about the state of the framework because usually the framework kind of deals for it on your own right",
    "start": "2554680",
    "end": "2561200"
  },
  {
    "text": "but when you let's say using nextjs with react and by the way I'm not picking on any particular framework they all kind",
    "start": "2561200",
    "end": "2566760"
  },
  {
    "text": "of work the same way so I'm just going to use react and nextjs because it's a common thing that people understand so",
    "start": "2566760",
    "end": "2572319"
  },
  {
    "text": "if you use nextjs and react the nextjs will serialize your state I think in something called the next data property",
    "start": "2572319",
    "end": "2577720"
  },
  {
    "text": "or something like that yeah it'll just dump that on the page and everything boots up from there yeah it will just dump that on the page right so that's",
    "start": "2577720",
    "end": "2583680"
  },
  {
    "text": "the state of the app so to speak but what it doesn't dump on a page because react doesn't kind of expose it is the",
    "start": "2583680",
    "end": "2590440"
  },
  {
    "text": "state of the framework what I mean by state of the framework is like framework needs to know like where are the components where are the listeners what",
    "start": "2590440",
    "end": "2596079"
  },
  {
    "text": "do I do when you click on this button and so on and so forth there's a huge amount of state that exists inside of the react that isn't exposed to you and",
    "start": "2596079",
    "end": "2603559"
  },
  {
    "text": "you don't usually think about it but it's there and and what quick does is basically says not only am I going to",
    "start": "2603559",
    "end": "2609280"
  },
  {
    "text": "serialize the App State which others already do right I'm also going to serialize the internal state of the",
    "start": "2609280",
    "end": "2615280"
  },
  {
    "text": "framework itself which others don't do right so that's one thing that we do",
    "start": "2615280",
    "end": "2620520"
  },
  {
    "text": "differently the second thing and by the way the amount of data isn't that big like the amount of State information is not that big right the second thing we",
    "start": "2620520",
    "end": "2627240"
  },
  {
    "text": "do is we now have to also serialize things like where are the component boundaries and we can serialize that directly into the HTML by adding special",
    "start": "2627240",
    "end": "2633960"
  },
  {
    "text": "tags and we also need to serialize we're the listeners in a Dom tree and we can do that as well by adding special",
    "start": "2633960",
    "end": "2640480"
  },
  {
    "text": "attribute tags into the HTML so between HTML and your Json payload that represents the state of the system we",
    "start": "2640480",
    "end": "2646960"
  },
  {
    "text": "can basically serialize everything we need to make this thing run now of course next question is like where's the",
    "start": "2646960",
    "end": "2652559"
  },
  {
    "text": "code so that's the next big problem and existing Frameworks have this particular problem which I call you know single",
    "start": "2652559",
    "end": "2660079"
  },
  {
    "text": "entry point problem what it means that that existing framework has a single main method so to speak right where the",
    "start": "2660079",
    "end": "2666760"
  },
  {
    "text": "application boots up and this main method is the only way to get into the",
    "start": "2666760",
    "end": "2671800"
  },
  {
    "text": "application system and therefore this the only way to get the system up and running and there's the only way to",
    "start": "2671800",
    "end": "2678559"
  },
  {
    "text": "create chunks bundles and so on so forth when you have something that's resumable like quick let's say you just have a",
    "start": "2678559",
    "end": "2684880"
  },
  {
    "text": "page with two buttons If I click on button a then I'm entering the system",
    "start": "2684880",
    "end": "2690160"
  },
  {
    "text": "through a different path different chunk different code that I have to download then when I click on a button B and so",
    "start": "2690160",
    "end": "2697559"
  },
  {
    "text": "quick not only has to figure out how to serialize All State it has a second problem which is that it needs to take",
    "start": "2697559",
    "end": "2702920"
  },
  {
    "text": "your source code and break it down into lots and lots of small JavaScript files",
    "start": "2702920",
    "end": "2708400"
  },
  {
    "text": "or the other way to think about it is it has to break it up into lots of entry points right every single interaction",
    "start": "2708400",
    "end": "2715520"
  },
  {
    "text": "that you can do with a page is a potential entry point that re-enters the system in a different way an existing uh",
    "start": "2715520",
    "end": "2722920"
  },
  {
    "text": "framework have this problem that like well they end up with a single chunk and therefore you have to download the",
    "start": "2722920",
    "end": "2728280"
  },
  {
    "text": "whole thing at once and not only does it whole thing at once you can't really resume it because you have to kind of",
    "start": "2728280",
    "end": "2735240"
  },
  {
    "text": "execute the main method in order to kind of build up the internal things what the quick needs to do is needs to take this",
    "start": "2735240",
    "end": "2741160"
  },
  {
    "text": "the source code and break it up into lots and lots and lots of small amounts create lots of entry points and then every component every listener every",
    "start": "2741160",
    "end": "2748440"
  },
  {
    "text": "effect and so on and so forth becomes a separate entry point in a system and then when I click button a I only",
    "start": "2748440",
    "end": "2755520"
  },
  {
    "text": "download down the buttons a behavior and when I click on button B I only download button B's Behavior so on the end result",
    "start": "2755520",
    "end": "2762520"
  },
  {
    "text": "here is that we are actually downloading a lot less code than an equivalent regular application and specifically if",
    "start": "2762520",
    "end": "2769760"
  },
  {
    "text": "you look at a typical app lots of components are what I would call static in other words they're they're just kind",
    "start": "2769760",
    "end": "2775359"
  },
  {
    "text": "of for the layout purposes they don't actually do anything right and quick can",
    "start": "2775359",
    "end": "2780720"
  },
  {
    "text": "basically look at all this stuff and say this is all static stuff it's already serice side rendered I will never ever need to render this on a client and",
    "start": "2780720",
    "end": "2787880"
  },
  {
    "text": "therefore this code never gets shipped to the client so you end up with actually a lot less JavaScript than you",
    "start": "2787880",
    "end": "2793079"
  },
  {
    "text": "would on an equivalent framework application so this is reminding me actually a lot about spelt which I think",
    "start": "2793079",
    "end": "2799640"
  },
  {
    "text": "in some ways is different than react view angular they take because of the pre-compile and I am not a spelt expert",
    "start": "2799640",
    "end": "2806559"
  },
  {
    "text": "but I have played around with it a little bit and I think they they do some amount of the same types of optimizations where because they're",
    "start": "2806559",
    "end": "2813000"
  },
  {
    "text": "pre-compiling they can have multiple entry points if there's no dynamism you don't get any JavaScript for a component",
    "start": "2813000",
    "end": "2818720"
  },
  {
    "text": "and they don't have this sort of virtual Dom thing which creates that need for the centralized main Loop that you have",
    "start": "2818720",
    "end": "2825040"
  },
  {
    "text": "in like a view or a react but I think they still do have a hydration problem yeah so I'm kind of curious are those",
    "start": "2825040",
    "end": "2831319"
  },
  {
    "text": "problems deeply connected for you they are they are absolutely deeply connected actually I'm also not an expert at swal",
    "start": "2831319",
    "end": "2838119"
  },
  {
    "text": "but my understanding is that they only have one entry point I don't think they can create separate ones the thing that swelt does really well is they can prune",
    "start": "2838119",
    "end": "2845520"
  },
  {
    "text": "the tree right because they don't have vdom they can prune the tree and say like oh these things never change and",
    "start": "2845520",
    "end": "2851240"
  },
  {
    "text": "therefore I don't have to do updates on them but they still have hydration because in order to recover the state",
    "start": "2851240",
    "end": "2857200"
  },
  {
    "text": "like swelt is also reactive which means like something changes they know how to just update a specific part on the page",
    "start": "2857200",
    "end": "2863720"
  },
  {
    "text": "which is all great but in order to rebuild the information about where the components are where the reactivity are",
    "start": "2863720",
    "end": "2869680"
  },
  {
    "text": "like if I change this data I have to change this component and so on and so forth in order to rebuild all this information they have to execute the",
    "start": "2869680",
    "end": "2876160"
  },
  {
    "text": "application at least once at the very beginning the theme for all of these Frameworks is that in order to recover",
    "start": "2876160",
    "end": "2883760"
  },
  {
    "text": "the internal state of the framework they have to execute the application in the process of executing of the application",
    "start": "2883760",
    "end": "2889720"
  },
  {
    "text": "is what rebuilds the internal state of the framework and you're correct that different Frameworks are you can say",
    "start": "2889720",
    "end": "2895880"
  },
  {
    "text": "have different efficiency factors in terms of how good they are at rebuilding but I think quick is in a category of",
    "start": "2895880",
    "end": "2902400"
  },
  {
    "text": "its own because it just serializes everything and you don't have to download anything in order to make it",
    "start": "2902400",
    "end": "2908240"
  },
  {
    "text": "page interactive right so imagine anything you can build in like swell you can build in react and vice versa right",
    "start": "2908240",
    "end": "2914200"
  },
  {
    "text": "there's like we all agree that all these Frameworks are kind of universally the same thing kind of apps",
    "start": "2914200",
    "end": "2919880"
  },
  {
    "text": "that they allow you to build and the same is true also for quick like whatever you can build in swel react view angular and so on you can also",
    "start": "2919880",
    "end": "2926440"
  },
  {
    "text": "build in quick so the kinds of applications you build are absolutely identical that's different is how the",
    "start": "2926440",
    "end": "2933640"
  },
  {
    "text": "application resumes on the client and all kinds of other implications we can get into it in this show but the",
    "start": "2933640",
    "end": "2939240"
  },
  {
    "text": "reasonability is kind of the key difference so I'm thinking about the statement that you said about the server",
    "start": "2939240",
    "end": "2944960"
  },
  {
    "text": "side rendering and the client side rendering with quick there's never any duplication there's never any work",
    "start": "2944960",
    "end": "2951280"
  },
  {
    "text": "that's done twice and I'm curious is quick aware of server is a server aware",
    "start": "2951280",
    "end": "2957920"
  },
  {
    "text": "of quick how does a server know the state of the page in order to not render things that have already been updated",
    "start": "2957920",
    "end": "2964040"
  },
  {
    "text": "since it rendered last is there server s side is it full stack or I don't understand exactly how it works yeah yes",
    "start": "2964040",
    "end": "2969359"
  },
  {
    "text": "that's an excellent question so the big difference is that as I said existing Frameworks really they only care about",
    "start": "2969359",
    "end": "2975040"
  },
  {
    "text": "client side rendering and the reason why quick can do all these things is that quick doesn't just care about client",
    "start": "2975040",
    "end": "2981160"
  },
  {
    "text": "side rendering it also cares about serers side rendering it also cares about serialization of the data sending",
    "start": "2981160",
    "end": "2987040"
  },
  {
    "text": "the data across deserialization bundling breaking the application into chunks and so on and so forth so in that sense",
    "start": "2987040",
    "end": "2994040"
  },
  {
    "text": "quick is a full stack like it cares about the whole thing because that's the only way quck can deliver all these",
    "start": "2994040",
    "end": "3001160"
  },
  {
    "text": "things also we also care about prefetching of the code as well so basically all of the concerns that you",
    "start": "3001160",
    "end": "3008520"
  },
  {
    "text": "as a developer need to worry about in terms of like what makes an application performant are directly the",
    "start": "3008520",
    "end": "3014880"
  },
  {
    "text": "responsibility or the thing that the framework cares about and has an opinion about and lays everything out for you",
    "start": "3014880",
    "end": "3020760"
  },
  {
    "text": "and so that's kind of the biggest difference between it is because we own the whole thing end to end we can do",
    "start": "3020760",
    "end": "3027599"
  },
  {
    "text": "certain things that others cannot like let me give you an example in order to break up the application into pieces",
    "start": "3027599",
    "end": "3033799"
  },
  {
    "text": "let's take a simple example of let's say you have a component that's a counter there's a button you click on a count a button and it increments right we need",
    "start": "3033799",
    "end": "3041240"
  },
  {
    "text": "to be able to take this listener for the button and be able to Lazy load it now",
    "start": "3041240",
    "end": "3046640"
  },
  {
    "text": "in this particular example of course when you click on a button you're also going to have to re-render the component and so they always come together but",
    "start": "3046640",
    "end": "3052040"
  },
  {
    "text": "like let's say it's a more complicated example that sometimes you don't have to rerender it so the problem is that",
    "start": "3052040",
    "end": "3057440"
  },
  {
    "text": "you'll do something like a button onclick equals you know State Plus+ or",
    "start": "3057440",
    "end": "3062480"
  },
  {
    "text": "something along those lines right you cannot take that function the closure",
    "start": "3062480",
    "end": "3067520"
  },
  {
    "text": "that increments the counter and lazy load it because it closes over the state",
    "start": "3067520",
    "end": "3073839"
  },
  {
    "text": "right so if you pull out the function and make it Lazy loadable by itself the function will not work because it will",
    "start": "3073839",
    "end": "3080040"
  },
  {
    "text": "say well what's the current count like I'm incrementing something but what is it how do I get it right and if you just",
    "start": "3080040",
    "end": "3085880"
  },
  {
    "text": "lazy load code I say that the code has Amnesia right it doesn't have the information that you need so as",
    "start": "3085880",
    "end": "3092640"
  },
  {
    "text": "developers we know how to serialize code that's just JavaScript we know how to",
    "start": "3092640",
    "end": "3098200"
  },
  {
    "text": "serialize data well that's just Json but what we don't really know is how to",
    "start": "3098200",
    "end": "3103400"
  },
  {
    "text": "serialize closures right closure is function Plus data and so the thing that",
    "start": "3103400",
    "end": "3109000"
  },
  {
    "text": "quick can do is it can serialize closures so it can take the closure that",
    "start": "3109000",
    "end": "3114319"
  },
  {
    "text": "represents your button that's you know add one to the count and we know how to extract that on the top level and",
    "start": "3114319",
    "end": "3121440"
  },
  {
    "text": "serialize the associated data with it and then make that whole thing lazy loadable M the only way to do that is if",
    "start": "3121440",
    "end": "3129240"
  },
  {
    "text": "the bundler and the runtime cooperate right but existing Frameworks they're",
    "start": "3129240",
    "end": "3135760"
  },
  {
    "text": "like I'm bundling is not my problem and therefore a bundler can't do anything that would change the semantics of the",
    "start": "3135760",
    "end": "3141799"
  },
  {
    "text": "code and so the bundlers are very limited in what they can do because doing something crazy would make the",
    "start": "3141799",
    "end": "3147839"
  },
  {
    "text": "application be broken right whereas the Frameworks are like well bundling is not our problem and so the amount of things",
    "start": "3147839",
    "end": "3153839"
  },
  {
    "text": "you can do are very minimal we are because we own the whole thing we can do magical things where we can be like oh",
    "start": "3153839",
    "end": "3160040"
  },
  {
    "text": "it's a closure that closes a bunch of variables let me extract it to a top level function I understand which",
    "start": "3160040",
    "end": "3165240"
  },
  {
    "text": "variables you closed over I know how to serialize them I know how to recover them I'm going to make a special kind of",
    "start": "3165240",
    "end": "3170599"
  },
  {
    "text": "function for you that of course won't run by itself but the framework expects",
    "start": "3170599",
    "end": "3175640"
  },
  {
    "text": "this and a framework knows how to put everything back together in such a way to kind of recover everything right and",
    "start": "3175640",
    "end": "3180680"
  },
  {
    "text": "so this is where the magic is so you are transforming the code you're applying custom compilations in order to make it",
    "start": "3180680",
    "end": "3188000"
  },
  {
    "text": "resumable that's right interesting so you've write code quick develop DX",
    "start": "3188000",
    "end": "3194240"
  },
  {
    "text": "developer experience right is extremely similar to react so if you know react you know quick and this is intentional",
    "start": "3194240",
    "end": "3200440"
  },
  {
    "text": "right this is not like we thought about this and we're like this is the way to do it so we tionally designed the DX to",
    "start": "3200440",
    "end": "3206920"
  },
  {
    "text": "be like react so you write your functions your components and so on and so forth now quick has a special thing",
    "start": "3206920",
    "end": "3212040"
  },
  {
    "text": "where we add dollar signs to the API so it's not use effect we actually",
    "start": "3212040",
    "end": "3218559"
  },
  {
    "text": "understand server and client so we added an extra word in there it's use client effect dollar sign and a dollar sign",
    "start": "3218559",
    "end": "3224880"
  },
  {
    "text": "communicates two things it both communicates to the developer and also to what we call the optimizer the thing",
    "start": "3224880",
    "end": "3230160"
  },
  {
    "text": "that can rearrange the source code so the optimizer it basically says pull this out as a lazy loadable thing and to",
    "start": "3230160",
    "end": "3237200"
  },
  {
    "text": "the developer it basically says special rules apply here like you can't just do anything here like you can do a lot of",
    "start": "3237200",
    "end": "3243240"
  },
  {
    "text": "things but special rules apply and basically the the special rules are that you have to understand is one this thing",
    "start": "3243240",
    "end": "3249240"
  },
  {
    "text": "is going to be uh behind a lazy loaded boundary which means it's a promise it's not a direct thing and two is we can",
    "start": "3249240",
    "end": "3257079"
  },
  {
    "text": "serialize lots of things but not everything so you you have to be careful about like what kind of things are",
    "start": "3257079",
    "end": "3264079"
  },
  {
    "text": "serializable but you know the framework will eagerly tell you that you know you're trying to like capture something",
    "start": "3264079",
    "end": "3269240"
  },
  {
    "text": "that's not serializable so that we have a good developer experience but for the most part you'd be surprised how we",
    "start": "3269240",
    "end": "3274400"
  },
  {
    "text": "basically figured out how to serialize just about anything so obviously the basic things like objects Primitives are",
    "start": "3274400",
    "end": "3280440"
  },
  {
    "text": "easy but we know how to serialize closures which is kind of mind-blowing",
    "start": "3280440",
    "end": "3285640"
  },
  {
    "text": "but I guess we know how to serialize that so that already gives you a lot of things and we recently figured out how to serialize promises which is even more",
    "start": "3285640",
    "end": "3293559"
  },
  {
    "text": "blind blowing right and so certain things we cannot serialize like um I don't know if you",
    "start": "3293559",
    "end": "3299920"
  },
  {
    "text": "create a set interval and then you know you get a number back and it's a number like that has no meaning outside of the",
    "start": "3299920",
    "end": "3305839"
  },
  {
    "text": "server or you know the place where you got it so there are constraints you have to understand and work with but for the",
    "start": "3305839",
    "end": "3311960"
  },
  {
    "text": "most part you can just like write your application the way you want we know how to break it up into pieces and that's",
    "start": "3311960",
    "end": "3318599"
  },
  {
    "text": "extremely difficult by the way like that's that's one of the blackest magic we have with quick I mean I'm happy to",
    "start": "3318599",
    "end": "3324240"
  },
  {
    "text": "go into the details it's not like a secret or anything right but it is this thing that was super hard to figure out",
    "start": "3324240",
    "end": "3329720"
  },
  {
    "text": "and now because we have that we get the resum ability property right so that on the client let's say you have the",
    "start": "3329720",
    "end": "3336000"
  },
  {
    "text": "counter example on a client let's say you click the button that says you know add one and let's say this button",
    "start": "3336000",
    "end": "3342079"
  },
  {
    "text": "randomly decided whether or not to increment the value or not right so when you click on the button the system has",
    "start": "3342079",
    "end": "3347480"
  },
  {
    "text": "to download the closure that represents the incrementer there's no choice about that so you have to download that and",
    "start": "3347480",
    "end": "3353359"
  },
  {
    "text": "then let's say that button decides that that it's not going to increment things because it's random then the system is",
    "start": "3353359",
    "end": "3358400"
  },
  {
    "text": "done there's nothing more to download but if the button randomly decides actually I am going to increment the",
    "start": "3358400",
    "end": "3364160"
  },
  {
    "text": "value then now the system has to be reactive and say oh you modified this thing which component is invalidated",
    "start": "3364160",
    "end": "3371720"
  },
  {
    "text": "because of the action you have done right and most Frameworks are like oh I",
    "start": "3371720",
    "end": "3376760"
  },
  {
    "text": "give up just renter everything and then there's like ways to kind of prune the tree right but when you say give up and",
    "start": "3376760",
    "end": "3382160"
  },
  {
    "text": "render everything you just mean like oh download the whole application so that's not a thing for us reactive Frameworks",
    "start": "3382160",
    "end": "3387640"
  },
  {
    "text": "are like oh I know you modified this therefore I have to modify this component and so they have an advantage",
    "start": "3387640",
    "end": "3393440"
  },
  {
    "text": "except in order for them to rebuild the reactivity graph they have to run the application once at the very beginning",
    "start": "3393440",
    "end": "3400000"
  },
  {
    "text": "so that's useless all right so the thing that quick understands is what is the",
    "start": "3400000",
    "end": "3405880"
  },
  {
    "text": "reactivity graph but this reactivity graph is actually serialized into the HTML so that when you go and modify the",
    "start": "3405880",
    "end": "3412799"
  },
  {
    "text": "count value quick can say uhuh I know exactly which component I need to download and update and so it can be",
    "start": "3412799",
    "end": "3419480"
  },
  {
    "text": "extremely surgical about it right now imagine a page where you have add to shopping cart right you have your",
    "start": "3419480",
    "end": "3425319"
  },
  {
    "text": "prototypical shoe you say add to the shopping cart right so when you hit that button the code behind it will go",
    "start": "3425319",
    "end": "3431119"
  },
  {
    "text": "probably and update some shopping cart data object which then means that I have to render the shopping cart right so you",
    "start": "3431119",
    "end": "3436799"
  },
  {
    "text": "have to download the code for clicking on the button for out of the shopping cart and you have to download the code",
    "start": "3436799",
    "end": "3443760"
  },
  {
    "text": "for the rendering of the shopping cart but notice what you didn't download first of all you didn't download anything else on the page but you didn't",
    "start": "3443760",
    "end": "3450359"
  },
  {
    "text": "even download the component Associated that originally rendered the button for adding to the shopping cart because like",
    "start": "3450359",
    "end": "3457400"
  },
  {
    "text": "you didn't change that part you didn't reent done anything over there so why should we even download this right so",
    "start": "3457400",
    "end": "3463520"
  },
  {
    "text": "the one way to think about it is one of the things that quick is trying to do is to say look if you're going to go",
    "start": "3463520",
    "end": "3468599"
  },
  {
    "text": "through the trouble of downloading some JavaScript then you better execute the whole thing right like we don't want to",
    "start": "3468599",
    "end": "3473680"
  },
  {
    "text": "be in a situation where like we download JavaScript and then don't execute it like so if you look at code coverage for",
    "start": "3473680",
    "end": "3480240"
  },
  {
    "text": "a quick application you should be pretty close to 100 right because we're only downloading and executing stuff that we",
    "start": "3480240",
    "end": "3487520"
  },
  {
    "text": "actually need to do right and so the magical bit is like how do you take an application that is written in a",
    "start": "3487520",
    "end": "3493520"
  },
  {
    "text": "standard react like way and break it up into lots and lots of entry points",
    "start": "3493520",
    "end": "3499240"
  },
  {
    "text": "create ideal bundle sizes and do all of this magic that needs to happen and then basically push all of this thing to the",
    "start": "3499240",
    "end": "3507200"
  },
  {
    "text": "browser in a way where the developer doesn't have to think about any of this stuff so I want to dig into one",
    "start": "3507200",
    "end": "3513000"
  },
  {
    "text": "particular thing there and that's how are you thinking about how State moves through these different components",
    "start": "3513000",
    "end": "3518480"
  },
  {
    "text": "because I was thinking about your example where you have a button somewhere on a page and you have a shopping cart somewhere else on the page",
    "start": "3518480",
    "end": "3524440"
  },
  {
    "text": "and you change some State based on the button and it only impacts the shopping cart yeah in many component-based",
    "start": "3524440",
    "end": "3531960"
  },
  {
    "text": "applications that state may live in like a prop or something that is propagated through a number of parents to get down",
    "start": "3531960",
    "end": "3538839"
  },
  {
    "text": "into whatever the actual component that's depending on it is yeah our current implementation is inspired by",
    "start": "3538839",
    "end": "3545760"
  },
  {
    "text": "mobex or kind of what I believe what spelt does as well so we have stores and",
    "start": "3545760",
    "end": "3551039"
  },
  {
    "text": "stores have properties and you pass stores around and then when you read from the store that's how we know that a",
    "start": "3551039",
    "end": "3557039"
  },
  {
    "text": "subscription has happened and when you write into a store that's how we know that you modified something that's one way to do it we're also actually",
    "start": "3557039",
    "end": "3563599"
  },
  {
    "text": "thinking hard about what solid JS does they have signals and that is another interesting thing that we would like to",
    "start": "3563599",
    "end": "3570799"
  },
  {
    "text": "explore we're kind of exploring it we're liking it we'll see where the thing actually lands but yeah the idea is that",
    "start": "3570799",
    "end": "3577359"
  },
  {
    "text": "you pass stores rather than props so that you don't do much prop drilling you can also have context Etc but yeah if",
    "start": "3577359",
    "end": "3583599"
  },
  {
    "text": "you do the classical prop drilling then you have the problem that you'll force re-rendering all throughout the system",
    "start": "3583599",
    "end": "3589280"
  },
  {
    "text": "and you don't want to do that right yeah that makes sense VI also has a store-based system a lot of the times so",
    "start": "3589280",
    "end": "3594799"
  },
  {
    "text": "yeah it's yeah what I'm kind of getting on is that like your developer experience for building an application",
    "start": "3594799",
    "end": "3600200"
  },
  {
    "text": "is very much unchanged and it's probably closest to react but like maybe some things like stores from viewers felt Etc",
    "start": "3600200",
    "end": "3607240"
  },
  {
    "text": "but fundamentally the DX is something you're very very familiar with right but",
    "start": "3607240",
    "end": "3612559"
  },
  {
    "text": "that's not what we're selling here like we're not selling you a better DX we're selling you a better experience for your",
    "start": "3612559",
    "end": "3619079"
  },
  {
    "text": "end user because we are smarter in a way we bundle execute and deliver the information to the client so what's the",
    "start": "3619079",
    "end": "3626240"
  },
  {
    "text": "Practical difference then so like what you're offering with quick let's say the DX is relatively the same as you using",
    "start": "3626240",
    "end": "3631599"
  },
  {
    "text": "react you know put some dollar signs at the end of things there's a few more rules or different rules what's the",
    "start": "3631599",
    "end": "3636680"
  },
  {
    "text": "Practical difference is it an order of magnitude in a complicated application like yeah we you talking about your",
    "start": "3636680",
    "end": "3642200"
  },
  {
    "text": "app's going to be 10x faster 100x like what happens when I use quick instead of react yeah so we have our homepage",
    "start": "3642200",
    "end": "3648119"
  },
  {
    "text": "Builder iio homepage and we actually have that homepage originally was a nextjs react homepage and uh we just",
    "start": "3648119",
    "end": "3654559"
  },
  {
    "text": "switch it over to quick and actually we have the ability to run both Pages simultaneously so if you go to Builder iio question mark render equals next you",
    "start": "3654559",
    "end": "3661680"
  },
  {
    "text": "get the nextjs one if you just do without anything you get the quick one if you open up in Chrome sorry if you",
    "start": "3661680",
    "end": "3668680"
  },
  {
    "text": "open up in Google page speed we get I think around 40 our score is in Google",
    "start": "3668680",
    "end": "3673920"
  },
  {
    "text": "pay speed and in nextjs and about 95 in quick now I'm not picking up M nextjs",
    "start": "3673920",
    "end": "3679760"
  },
  {
    "text": "like we could have done this in any other framework I think the numbers will be about the same because they all fundamentally have hydration that's",
    "start": "3679760",
    "end": "3687240"
  },
  {
    "text": "happening and what we're really paying for is the hydration here right okay so no matter which framework you kind of choose out of that category I think",
    "start": "3687240",
    "end": "3693520"
  },
  {
    "text": "you'll see similar numbers if you go to Chrome and if you open up you know Dev tools and you can go to the performance",
    "start": "3693520",
    "end": "3699920"
  },
  {
    "text": "and the performance you record the startup thing what you'll see is that Builder IO page on a on a you know",
    "start": "3699920",
    "end": "3706400"
  },
  {
    "text": "desktop computer spends I believe something around 80 milliseconds executing JavaScript at startup and that",
    "start": "3706400",
    "end": "3711880"
  },
  {
    "text": "includes quick and party tab and third party scripts and everything right and",
    "start": "3711880",
    "end": "3718079"
  },
  {
    "text": "in the nextjs version it takes I believe 800 milliseconds so we're talking 10x",
    "start": "3718079",
    "end": "3723359"
  },
  {
    "text": "Improvement in the amount of JavaScript that the browser has to execute on Startup but I think the Improvement is",
    "start": "3723359",
    "end": "3729760"
  },
  {
    "text": "even greater because when you have a regular framework like let's go to the",
    "start": "3729760",
    "end": "3734799"
  },
  {
    "text": "example of somebody sends you a link to the shoe and there's a buy button you want to click when you do the normal",
    "start": "3734799",
    "end": "3740480"
  },
  {
    "text": "Frameworks right you render everything there's a button and you click on the button and nothing's happened because you clicked on it too early right and so",
    "start": "3740480",
    "end": "3748279"
  },
  {
    "text": "you have to wait until hydration is finished before you can click on a button and that can take time and you",
    "start": "3748279",
    "end": "3753480"
  },
  {
    "text": "know on a mobile device it can take literally tens of seconds the nice property of quick is that the moment",
    "start": "3753480",
    "end": "3761359"
  },
  {
    "text": "quick HTML loads the HTML contains all of the information about where the listeners are and it also includes",
    "start": "3761359",
    "end": "3768920"
  },
  {
    "text": "little tiny what we call aill which is a piece of JavaScript that sets up a global listener for every everything at",
    "start": "3768920",
    "end": "3774760"
  },
  {
    "text": "the root which is super tiny it's about 1 kilobyte it executes in like under 10 milliseconds it costs nothing basically",
    "start": "3774760",
    "end": "3782480"
  },
  {
    "text": "and this pil is ready to listen for things immediately right so as soon as",
    "start": "3782480",
    "end": "3788200"
  },
  {
    "text": "the HTML shows up with a button inlined inside of the HTML is a script tag that already executed is already listening",
    "start": "3788200",
    "end": "3794319"
  },
  {
    "text": "for click button so when you go and click that click goes directly and gets immediately processed and now of course",
    "start": "3794319",
    "end": "3800599"
  },
  {
    "text": "you have to fetch the JavaScript but instead of fetching this huge thing which is the whole application you're fetching just the code necessary for",
    "start": "3800599",
    "end": "3807520"
  },
  {
    "text": "that button right you cannot get any more efficient like we have removed",
    "start": "3807520",
    "end": "3812839"
  },
  {
    "text": "everything that is strictly not needed and we ended up with the absolute bare essential like there's nothing else left",
    "start": "3812839",
    "end": "3819359"
  },
  {
    "text": "to remove the other thing we do is we also know statistically and also we can",
    "start": "3819359",
    "end": "3824559"
  },
  {
    "text": "kind of guess through heuristics as to what are the possible things that you as a developer can do and so even before",
    "start": "3824559",
    "end": "3830440"
  },
  {
    "text": "you click on the button we already instruct the browser with a pre pre fetch links to say like this is most",
    "start": "3830440",
    "end": "3836599"
  },
  {
    "text": "likely what's going to happen so go and start prefetching this JavaScript we don't execute the JavaScript we're just",
    "start": "3836599",
    "end": "3842319"
  },
  {
    "text": "prefetching it but the nice property is that if we guess wrong and you click on a button your request goes in front of",
    "start": "3842319",
    "end": "3848760"
  },
  {
    "text": "the prefetch requests right so you immediately even pull yourself up so all of this basically means is that you are",
    "start": "3848760",
    "end": "3855119"
  },
  {
    "text": "essentially ready to interact with the page immediately it's hard to imagine a scenario where the interaction would be",
    "start": "3855119",
    "end": "3861720"
  },
  {
    "text": "even better like I don't know what else could be removed out of this particular thing this equation right just a blank",
    "start": "3861720",
    "end": "3866880"
  },
  {
    "text": "page you know just white just nothing",
    "start": "3866880",
    "end": "3870880"
  },
  {
    "text": "[Music]",
    "start": "3876030",
    "end": "3880780"
  },
  {
    "text": "exactly hey friends this episode is brought to you by my friends and",
    "start": "3889799",
    "end": "3895039"
  },
  {
    "text": "potentially your friends too at fire hydrant and I'm here with Robert Ross founder and CEO of fire hydrant and",
    "start": "3895039",
    "end": "3901520"
  },
  {
    "text": "Robert there are several options out there for Incident Management but what is it that makes fire hydrant different",
    "start": "3901520",
    "end": "3908319"
  },
  {
    "text": "the reason that we think that fire hyron is is on to something is because we're meeting companies really where they are",
    "start": "3908319",
    "end": "3914599"
  },
  {
    "text": "we faced the same problems that every company in the industry that is building and releasing software is also facing so",
    "start": "3914599",
    "end": "3922279"
  },
  {
    "text": "where do you want people to be able to sign line up for fire hydrant and immediately be able to kick off an",
    "start": "3922279",
    "end": "3927440"
  },
  {
    "text": "incident using the best practices that we've built and we've experienced and have gathered through the other amazing",
    "start": "3927440",
    "end": "3934039"
  },
  {
    "text": "customers that use our tool it really is a very quick time to value and we want people to have a long jump from where",
    "start": "3934039",
    "end": "3940319"
  },
  {
    "text": "they are to where they want to be in Incident Management I love it thank you Robert small teams up to 10 people can",
    "start": "3940319",
    "end": "3948119"
  },
  {
    "text": "get started for free with all fire hydrant features included there's no credit card required to sign up they are making it too easy to to get started so",
    "start": "3948119",
    "end": "3955039"
  },
  {
    "text": "check them out at fireh hydrant dcom again fireh hydrant decom and by our",
    "start": "3955039",
    "end": "3960760"
  },
  {
    "text": "friends at retool retool helps teams focus on product development and customer value not building and",
    "start": "3960760",
    "end": "3967319"
  },
  {
    "text": "maintaining internal tools it's a low code platform built specifically for developers no more UI libraries no more",
    "start": "3967319",
    "end": "3974680"
  },
  {
    "text": "hacking together data sources and no more worrying about access controls start shipping internal apps to move",
    "start": "3974680",
    "end": "3980839"
  },
  {
    "text": "your business forward in minutes with basically zero up time reliability or maintenance burden on your team some of",
    "start": "3980839",
    "end": "3987520"
  },
  {
    "text": "the best teams out there trust retool brex coinbase plaid door Dash legal",
    "start": "3987520",
    "end": "3992680"
  },
  {
    "text": "genius Amazon Alberts pelaton and so many more the developers at these teams",
    "start": "3992680",
    "end": "3998240"
  },
  {
    "text": "trust retool as their platform to build their internal tools and that means you can too it's free to try so head to",
    "start": "3998240",
    "end": "4004520"
  },
  {
    "text": "ret.com changelog again ret.com",
    "start": "4004520",
    "end": "4010520"
  },
  {
    "text": "changelog [Music]",
    "start": "4013000",
    "end": "4028160"
  },
  {
    "text": "so Astros is you know kind of just came out with this one. but it's really not",
    "start": "4028160",
    "end": "4033200"
  },
  {
    "text": "new I mean it's new yes but not really it's I feel like you know I've been hearing about Astro for a while I've",
    "start": "4033200",
    "end": "4038599"
  },
  {
    "text": "been seeing you all push stuff and it's been this slow kind of reveal so can you kind of give us some time L and give us",
    "start": "4038599",
    "end": "4044599"
  },
  {
    "text": "some insights into kind of like how long have you been working on this project and what motivated it yeah it's like",
    "start": "4044599",
    "end": "4049839"
  },
  {
    "text": "every overnight success there's years in the making this this really traces back to even that PE of story but Astro",
    "start": "4049839",
    "end": "4055960"
  },
  {
    "text": "itself I think is about if you go back to the first commit like a year and a half old so we've really been working on this for a while trying to get it right",
    "start": "4055960",
    "end": "4062319"
  },
  {
    "text": "before we kind of stamp it with that V1 the best way to explain it is essentially a Content focused or",
    "start": "4062319",
    "end": "4067799"
  },
  {
    "text": "content-driven web framework so if you're thinking of how you want to build your website and you're looking at like nextjs uh Ste kid or n or maybe you're",
    "start": "4067799",
    "end": "4075920"
  },
  {
    "text": "looking at like a static jamstack Builder like 11year Hugo we're trying to be the best choice for anyone who's",
    "start": "4075920",
    "end": "4081559"
  },
  {
    "text": "building a Content site so marketing sites portfolios blogs personal sites if",
    "start": "4081559",
    "end": "4088000"
  },
  {
    "text": "the focus of what you're building is content getting content to someone who's trying to breed or consume that content",
    "start": "4088000",
    "end": "4093640"
  },
  {
    "text": "that's where we're trying to be the best at and we have a lot of really cool features that are kind of designed explicitly for that use case where we",
    "start": "4093640",
    "end": "4099600"
  },
  {
    "text": "see other Frameworks optimizing more for apps and dashboards",
    "start": "4099600",
    "end": "4104640"
  },
  {
    "text": "comp are all well and we build a framewor for people who build sites and",
    "start": "4104640",
    "end": "4111520"
  },
  {
    "text": "that's what after is yeah know that that makes a ton of sense Fred I feel like for me that's like a really refreshing",
    "start": "4111520",
    "end": "4117960"
  },
  {
    "text": "kind of I think motivator and perspective because to some degree like even things like amp were really created",
    "start": "4117960",
    "end": "4123640"
  },
  {
    "text": "right to focus on all right well you know we have all these kind of static sites that need to get to users faster",
    "start": "4123640",
    "end": "4129758"
  },
  {
    "text": "what do we do oh I know let's just limit all the JavaScript right and also come up with our own cryptic set of rules and",
    "start": "4129759",
    "end": "4137040"
  },
  {
    "text": "oh I don't know like use private servers to prioritize caching and blah blah blah maybe few years down the line make a lot",
    "start": "4137040",
    "end": "4144120"
  },
  {
    "text": "of Publishers and whoever angry right so you know For Better or Worse we're going to make the web Faster by making it only what we let you do in this little",
    "start": "4144120",
    "end": "4150679"
  },
  {
    "text": "sandbox and therefore the web is fast now and good and yeah that's pretty antie antithetical to yeah a lot of",
    "start": "4150679",
    "end": "4156400"
  },
  {
    "text": "things about the web right but again I appreciate for me right I appreciate the",
    "start": "4156400",
    "end": "4161600"
  },
  {
    "text": "experiment I appreciate the innovation and I appreciate the intent right so now like how do we kind of further evolve",
    "start": "4161600",
    "end": "4167600"
  },
  {
    "text": "from that right and feels like asro is kind of taking a step in that direction I think for me like this focus on",
    "start": "4167600",
    "end": "4173560"
  },
  {
    "text": "content and content like websites that are like you know that's your Niche I'd say like okay great job picking a niche",
    "start": "4173560",
    "end": "4180798"
  },
  {
    "text": "because that's really the majority of the internet right yeah it's as far as niches go you can't really get much",
    "start": "4180799",
    "end": "4185880"
  },
  {
    "text": "bigger um I think the last numbers I saw is like around 60% of the internet is like are the top 500 sites are that type",
    "start": "4185880",
    "end": "4192640"
  },
  {
    "text": "of content focused sit so yeah as far as niches go it's a big one yeah I totally",
    "start": "4192640",
    "end": "4197880"
  },
  {
    "text": "agree and like where would you say places like Reddit fall into that spectrum because I feel like Reddit is like so heavy on content it's like read",
    "start": "4197880",
    "end": "4205040"
  },
  {
    "text": "read read for the most part and then there's there's some interactivity there as well from users but that's like user",
    "start": "4205040",
    "end": "4211520"
  },
  {
    "text": "generated content I feel like yeah so like where does that kind of fall in that Spectrum for you I think you use",
    "start": "4211520",
    "end": "4217239"
  },
  {
    "text": "the right word which is Spectrum it's definitely different sites and even different pages within a site can kind of take different form so yeah like the",
    "start": "4217239",
    "end": "4225120"
  },
  {
    "text": "creation of content is much more interactive than just reading the content and then once you get into the comments it's there's a lot of little",
    "start": "4225120",
    "end": "4231159"
  },
  {
    "text": "interactive bits right so we like that like content Focus because it really kind of is our North Star but there's",
    "start": "4231159",
    "end": "4236920"
  },
  {
    "text": "really cool features that kind of back that up so the big one is thinking about how you architecture site the biggest",
    "start": "4236920",
    "end": "4242040"
  },
  {
    "text": "difference that Astro has from others is that we really like this idea of generating your page it's all static",
    "start": "4242040",
    "end": "4247760"
  },
  {
    "text": "HTML and then you're hydrating like the interactive bits around the page so for some things if everything is connected",
    "start": "4247760",
    "end": "4253679"
  },
  {
    "text": "data like you post something here it updates a dashboard there like this doesn't work for every use case but for",
    "start": "4253679",
    "end": "4258760"
  },
  {
    "text": "Content when the majority of the site is actually the static thing that you're consuming it really works well to kind",
    "start": "4258760",
    "end": "4263960"
  },
  {
    "text": "of color in almost within the lines like a paint by numbers well here's the kind of interactive comment here here's the",
    "start": "4263960",
    "end": "4270000"
  },
  {
    "text": "button here here's the navigation there the benefit of that is that you're actually only hydrating individual parts",
    "start": "4270000",
    "end": "4275400"
  },
  {
    "text": "of the site and the performance benefit there is that you're not sending down this entire Javascript app to your users",
    "start": "4275400",
    "end": "4280719"
  },
  {
    "text": "you're sending down these little Snippets so that's the biggest difference Reddit it works really well Hacker News is kind of this like clone",
    "start": "4280719",
    "end": "4286840"
  },
  {
    "text": "demo that people like to Benchmark Astro against yeah get The nextjs Hacker News versus the SP kid Hacker News versus the",
    "start": "4286840",
    "end": "4292679"
  },
  {
    "text": "Astro and the interesting thing about Astro is unlike all those other ones we don't have to send a Javascript app to",
    "start": "4292679",
    "end": "4298000"
  },
  {
    "text": "render that page and make it interactive we're just making sure the comment button is interactive the navigation is",
    "start": "4298000",
    "end": "4303120"
  },
  {
    "text": "interactive it's much more selective and therefore much more fast we're just sending way less JavaScript down to your users at the end of the day yeah again",
    "start": "4303120",
    "end": "4309880"
  },
  {
    "text": "that's another really refreshing take and I think another way that I think Astro and the folks involved with the",
    "start": "4309880",
    "end": "4316360"
  },
  {
    "text": "project as a whole have really helped push the community's thinking on this and we'll get into some really cool stuff in a second like islands and no",
    "start": "4316360",
    "end": "4323920"
  },
  {
    "text": "not islands in the sun which is what I always think of I'm like islands in the you know no different kinds of islands",
    "start": "4323920",
    "end": "4329840"
  },
  {
    "text": "but I think what's interesting for me is that thinking about architecture that way means that you're also always",
    "start": "4329840",
    "end": "4335440"
  },
  {
    "text": "planning for that fast by default experience right and you're being very",
    "start": "4335440",
    "end": "4340840"
  },
  {
    "text": "intentional about what you want to be expensive and like it versus kind of this opposite",
    "start": "4340840",
    "end": "4346440"
  },
  {
    "text": "world that we've been living in for however many years or you know where it's like we are just by default like",
    "start": "4346440",
    "end": "4352840"
  },
  {
    "text": "everything is chunky and heavy and we ship it and then we start subtracting from there after the fact it's kind of",
    "start": "4352840",
    "end": "4359080"
  },
  {
    "text": "painful like no wonder teams have so much difficulty like making their apps performant like we're speaking English",
    "start": "4359080",
    "end": "4365800"
  },
  {
    "text": "when we need to be speaking Italian or something like that right it's like what are we even doing so it kind of like are",
    "start": "4365800",
    "end": "4372199"
  },
  {
    "text": "we using the right tools are are we using the right methodology are we using the right architecture like I would say",
    "start": "4372199",
    "end": "4377480"
  },
  {
    "text": "no no no right and so I think it's like yeah I mean I said this before on the",
    "start": "4377480",
    "end": "4382560"
  },
  {
    "text": "show I'll say it again might make some people upset right but for me in 2022",
    "start": "4382560",
    "end": "4388600"
  },
  {
    "text": "like love tools like react but they come with their own set of problems and whatnot but generally like if I wasn't",
    "start": "4388600",
    "end": "4395320"
  },
  {
    "text": "designing for a multiplatform use case where I needed this to run in a native",
    "start": "4395320",
    "end": "4400440"
  },
  {
    "text": "application or in a VR headset or whatever like if I just needed this to be on the web I would not be using a",
    "start": "4400440",
    "end": "4406199"
  },
  {
    "text": "tool like react to like create a simple website I just wouldn't it's just too chunky it's not it just there's too much",
    "start": "4406199",
    "end": "4411679"
  },
  {
    "text": "overhead it's got too many pieces of luggage you know so I'll take the other side of that and I you need to stop me",
    "start": "4411679",
    "end": "4417440"
  },
  {
    "text": "because I will talk about I find the history of like how we got to where we are fascinating but I actually don't and",
    "start": "4417440",
    "end": "4423440"
  },
  {
    "text": "I think I'm in the minority of like the web perf like die hards here but I don't know if I find react the problem as much",
    "start": "4423440",
    "end": "4429080"
  },
  {
    "text": "as I find the everything is react kind of thinking and that then applies like",
    "start": "4429080",
    "end": "4434120"
  },
  {
    "text": "everything is felt everything is view where if you imagine like even like a simple hello world nextjs site and I'm",
    "start": "4434120",
    "end": "4440280"
  },
  {
    "text": "not picking nextjs this is like the model that they use that everyone else is using you're not just sending down the like a hello world there's nothing",
    "start": "4440280",
    "end": "4446880"
  },
  {
    "text": "really interactive but you're sending down JavaScript to power it and this history goes all the way back to like create react app where right and",
    "start": "4446880",
    "end": "4453760"
  },
  {
    "text": "jamstack really kind of pushed this because there were a lot of benefits to it but the thinking that your whole site is a Javascript app it's rendering on",
    "start": "4453760",
    "end": "4459960"
  },
  {
    "text": "the client you're only thinking in one code base you have this really nice separation concerns your backends an API",
    "start": "4459960",
    "end": "4465520"
  },
  {
    "text": "your UI is all one code based like there's really nice organizational things that people love from the",
    "start": "4465520",
    "end": "4470920"
  },
  {
    "text": "developers perspective right isn't that DX though that's like the DX's yeah yeah the DX is incredible it's unbeatable",
    "start": "4470920",
    "end": "4477800"
  },
  {
    "text": "versus like you know like PHP I worked on sites where you're rendering HTML with PHP and then you're also rendering",
    "start": "4477800",
    "end": "4483159"
  },
  {
    "text": "it again with react it's like you're trying to keep two code based it's I've seen some bad stuff yeah but it's that",
    "start": "4483159",
    "end": "4488520"
  },
  {
    "text": "idea of like the DX was so good but then we just took that path and 10 years later we found ourselves where we keep",
    "start": "4488520",
    "end": "4494639"
  },
  {
    "text": "adding complexity and adding more code to solve a problem that is inherently too much code that's our take on it that",
    "start": "4494639",
    "end": "4501239"
  },
  {
    "text": "it's not that reacts problem it's that we've way over indexed on how much is powered by react or view or spelt at the",
    "start": "4501239",
    "end": "4506719"
  },
  {
    "text": "end of the day more the more code you're asking the user to run you're just fighting physics at that point that's code that has to run on your user's",
    "start": "4506719",
    "end": "4512560"
  },
  {
    "text": "device it's going to slow it down yeah no I mean that makes a ton of sense and again it just take goes back to like the",
    "start": "4512560",
    "end": "4518719"
  },
  {
    "text": "intentionality of what we're doing and how often like we're all working under",
    "start": "4518719",
    "end": "4523840"
  },
  {
    "text": "such constraints and such like you know cow paths that also the community has paved right there's best practices",
    "start": "4523840",
    "end": "4530159"
  },
  {
    "text": "there's tools like CRA that like you know create your actop that make things so easy and just one button and right",
    "start": "4530159",
    "end": "4535800"
  },
  {
    "text": "like if we're not careful about the complexities that we're abstracting right like if we're abstracting away",
    "start": "4535800",
    "end": "4541880"
  },
  {
    "text": "things like that are okay generally best practices and good decisions like great but like the risk of mass adoption and",
    "start": "4541880",
    "end": "4549600"
  },
  {
    "text": "abstracting Away some of those things like is you're making bad decisions that you didn't even make you know you're just a tool made for you right yeah the",
    "start": "4549600",
    "end": "4557320"
  },
  {
    "text": "way we phrase it is like create react app and a lot of others they'll if you ever look in your known modules when you install something with create react app",
    "start": "4557320",
    "end": "4563360"
  },
  {
    "text": "there's I think like 2,000 packages 2,000 dependencies all sitting on top of each other and we call that like it's",
    "start": "4563360",
    "end": "4569639"
  },
  {
    "text": "complexity but kind of wrapped and like hidden from you but then when you want to go and do something new it's either",
    "start": "4569639",
    "end": "4574920"
  },
  {
    "text": "the tool says no you can't do that like there's too much here you're going to mess it up or like okay but be careful",
    "start": "4574920",
    "end": "4580280"
  },
  {
    "text": "if anything breaks good luck finding which one of the $2,000 dependencies is causing that problem right so it's like",
    "start": "4580280",
    "end": "4586560"
  },
  {
    "text": "we've hidden complexity for so long what I love about this kind of new wave of tools like Astro is what if we just",
    "start": "4586560",
    "end": "4593000"
  },
  {
    "text": "actually removed a lot of that complexity what if we dropped down what you have to think about when you build and instead gave you something that",
    "start": "4593000",
    "end": "4599120"
  },
  {
    "text": "starts from first principles web standards HTML right I think that's a much better place than just continuing",
    "start": "4599120",
    "end": "4605239"
  },
  {
    "text": "to wrap the complexity in more and more layers of abstraction yeah I know that that makes a ton of sense and like put",
    "start": "4605239",
    "end": "4610440"
  },
  {
    "text": "the onus on the developer to int Al make the decisions about where they want to",
    "start": "4610440",
    "end": "4616960"
  },
  {
    "text": "take the app in terms of like which sections am I bulking up and being very intentional about those decisions also",
    "start": "4616960",
    "end": "4622920"
  },
  {
    "text": "like everyone when they have the time to think about it typically like comes to the right conclusions but it's just",
    "start": "4622920",
    "end": "4628960"
  },
  {
    "text": "actually like have we even thought about what we're doing really right most of us are just like on autopilot and in all",
    "start": "4628960",
    "end": "4635639"
  },
  {
    "text": "fairness to create rack up I don't think anybody could have predicted the way it was going to take off like clearly there",
    "start": "4635639",
    "end": "4641360"
  },
  {
    "text": "was a need in the community for all of like kind of like having more boilerplate templates that could serve",
    "start": "4641360",
    "end": "4649520"
  },
  {
    "text": "and manage away all of the JavaScript tooling complexity right because there is some fatigue there from the community",
    "start": "4649520",
    "end": "4654880"
  },
  {
    "text": "and like that's something that we can't like not talk about right cuz like that is a real thing real problem right and",
    "start": "4654880",
    "end": "4662080"
  },
  {
    "text": "react was also the first application we've talked about this on the show before that went to MPN land and like",
    "start": "4662080",
    "end": "4667880"
  },
  {
    "text": "said okay JavaScript front-end developers we're going to go hijack the node Community now CU we need no tooling",
    "start": "4667880",
    "end": "4674320"
  },
  {
    "text": "to build JavaScript apps now and you know that was a shift that happened and then we then we ended up with a bunch of",
    "start": "4674320",
    "end": "4680840"
  },
  {
    "text": "no tools that needed to build your front end app and right and then node changed and all the tools have to yeah it's right we really like this term",
    "start": "4680840",
    "end": "4687000"
  },
  {
    "text": "all-in-one and I think it's a larger Trend I think Deno kind of falls into this like bun if you've seen that like I",
    "start": "4687000",
    "end": "4692840"
  },
  {
    "text": "think people are starting to feel more comfortable presenting something as a full complete platform and not a",
    "start": "4692840",
    "end": "4698920"
  },
  {
    "text": "collection of 2,000 different packages all hopefully working together cuz it's a lot hard to maintain so we like this",
    "start": "4698920",
    "end": "4704199"
  },
  {
    "text": "idea of Astro being a really stable runtime almost or platform or Foundation whatever you want to call it that is",
    "start": "4704199",
    "end": "4710400"
  },
  {
    "text": "much more like build on top of this and we got you Fred that was really insightful and super interesting kind of",
    "start": "4710400",
    "end": "4717040"
  },
  {
    "text": "digging into some of the context and history behind some of the motivations of Astro and like just kind of y'all",
    "start": "4717040",
    "end": "4724120"
  },
  {
    "text": "make some pretty bold promises here I kind of we'll list through some of those",
    "start": "4724120",
    "end": "4729280"
  },
  {
    "text": "right so Astros content focused server first fast by default easy to use and",
    "start": "4729280",
    "end": "4736320"
  },
  {
    "text": "fully featured but flexible right and I think that's interesting that's a tough",
    "start": "4736320",
    "end": "4741520"
  },
  {
    "text": "fully featured but flexible I mean that's how do you make it easy for newbies to get started and make good",
    "start": "4741520",
    "end": "4748280"
  },
  {
    "text": "decisions without having to really think about it and then how do you not hold back power users right like that's like",
    "start": "4748280",
    "end": "4755120"
  },
  {
    "text": "the always the struggle with API design so let's get into some of this so we've talked a lot about the content Focus",
    "start": "4755120",
    "end": "4761080"
  },
  {
    "text": "piece can we talk about the server first piece because there's quite a bit here",
    "start": "4761080",
    "end": "4766159"
  },
  {
    "text": "with just being server first for me it's like I kind of read that like yall are promising that this renders in the",
    "start": "4766159",
    "end": "4772679"
  },
  {
    "text": "server so you don't have to ever worry about any state management or whatever",
    "start": "4772679",
    "end": "4778320"
  },
  {
    "text": "else unless you want to but I I'm just curious like what does that even mean can you explain that to folks yeah no",
    "start": "4778320",
    "end": "4784520"
  },
  {
    "text": "definitely so we really ties back to what we were just talking about because what we see is we're flipping the model a bit where if the last 10 years have",
    "start": "4784520",
    "end": "4792000"
  },
  {
    "text": "been all about like let's build a big Javascript app that runs on the client and the server we're saying let's go",
    "start": "4792000",
    "end": "4797760"
  },
  {
    "text": "back to when a lot of the work happened on the server because there's really nice performance implications there so",
    "start": "4797760",
    "end": "4803120"
  },
  {
    "text": "this is a kind of message that a lot of other Frameworks are starting to try to tell but we have this really unique opportunity to just tell it from a fully",
    "start": "4803120",
    "end": "4809760"
  },
  {
    "text": "like fundamental what we do best is generate HTML and then make it interactive versus you know what we do",
    "start": "4809760",
    "end": "4816320"
  },
  {
    "text": "best being like a JavaScript application so the way that we see it is that we are very server first the templating",
    "start": "4816320",
    "end": "4821840"
  },
  {
    "text": "language that kind of comes buil in Astro is essentially sugar on top of creating HTML templates it's a nice way",
    "start": "4821840",
    "end": "4827560"
  },
  {
    "text": "to work with HTML and then we pair that with a way to bring different components in only when you need them so if you",
    "start": "4827560",
    "end": "4833480"
  },
  {
    "text": "like react or you like view or spelt you can actually use those components to build your UI but again by default we're",
    "start": "4833480",
    "end": "4839960"
  },
  {
    "text": "just going to render them out server rendered to HTML and zero JavaScript being sent down the wire unless you kind",
    "start": "4839960",
    "end": "4845520"
  },
  {
    "text": "of like opt into it you say like no this component should be interactive give me the JavaScript I'll pay the cost for the",
    "start": "4845520",
    "end": "4851239"
  },
  {
    "text": "user's performance but I'll get this really nice interactive component versus every other framework is default I'll",
    "start": "4851239",
    "end": "4856840"
  },
  {
    "text": "send it all they might need all of it so just send it all I see we've SLI that model that makes sense so how do you all",
    "start": "4856840",
    "end": "4863719"
  },
  {
    "text": "handle this uncanny valley that we get with server side rendering where it's like well it looks great cuz it's like",
    "start": "4863719",
    "end": "4871080"
  },
  {
    "text": "oh this came fast and it looks interactable and I try to click it right away and like oh nothing's happening oh",
    "start": "4871080",
    "end": "4876960"
  },
  {
    "text": "JavaScript still parsing and loading right some of that can be managed by reducing the amount of JavaScript that you send but you're still just gaming",
    "start": "4876960",
    "end": "4883520"
  },
  {
    "text": "the system right it's never going to be zero seconds or zero milliseconds to process that JavaScript chunk so like",
    "start": "4883520",
    "end": "4890400"
  },
  {
    "text": "how are you dealing with that if at all like are we just kind of leveraging the fact that like because the users have to",
    "start": "4890400",
    "end": "4895920"
  },
  {
    "text": "be intentional and optin it's usually a lot less JavaScript like and then there's also no framework JavaScript",
    "start": "4895920",
    "end": "4901000"
  },
  {
    "text": "that's being sent along with this right I'm just curious like how are you all managing that on cany Valley that's the",
    "start": "4901000",
    "end": "4906280"
  },
  {
    "text": "problem that Astro like exists to solve for which the en Kenny Valley is a result of the fact that okay we're going",
    "start": "4906280",
    "end": "4912280"
  },
  {
    "text": "to ser side render your JavaScript application in one of these other Frameworks and then we're going to send the whole page down as a full",
    "start": "4912280",
    "end": "4918080"
  },
  {
    "text": "application and nothing's going to be interacted until all of it is that's really a uniquely Spa kind of problem",
    "start": "4918080",
    "end": "4926080"
  },
  {
    "text": "that's really a uniquely kind of that model problem that we just don't have you still do need to make sure that your components can handle you know what",
    "start": "4926080",
    "end": "4932560"
  },
  {
    "text": "happens if they can they fall back to good behaviors but the nice thing about when we can kind of hydrate in different",
    "start": "4932560",
    "end": "4938440"
  },
  {
    "text": "components we're doing that in isolation in parallel so we large JavaScript application suffer from the problem of",
    "start": "4938440",
    "end": "4944800"
  },
  {
    "text": "everything has to load before anything can be interactive there's this really nice model where we can actually treat every component on the page differently",
    "start": "4944800",
    "end": "4951120"
  },
  {
    "text": "so for example if it's not visible we're not going to run it like until the user Scrolls down to it that's when we'll",
    "start": "4951120",
    "end": "4956840"
  },
  {
    "text": "hydrate it that's a really cool like uniquely asro feature because we're treating that component isolated from",
    "start": "4956840",
    "end": "4962760"
  },
  {
    "text": "everything else on the page and the other being like if something's really a high priority you can bump up how quickly it loads and you can also load",
    "start": "4962760",
    "end": "4969679"
  },
  {
    "text": "that without worrying that something really big and heavy is going to block it mhm so your big heavy image Carousel",
    "start": "4969679",
    "end": "4974719"
  },
  {
    "text": "lower on the page that's not going to block the you know bu button that's somewhere in the middle of the page from",
    "start": "4974719",
    "end": "4980239"
  },
  {
    "text": "becoming interactive and loading so it's a much more decoupled and by result",
    "start": "4980239",
    "end": "4985480"
  },
  {
    "text": "things that are like really essential can load much faster because we let you kind of control what loads when and how",
    "start": "4985480",
    "end": "4991360"
  },
  {
    "text": "how high priority it is yeah know that makes sense and so there is this like waterfall that you get with like",
    "start": "4991360",
    "end": "4998440"
  },
  {
    "text": "unbundled ecma modules right like if you have a bunch of different JavaScript chunks like true loading in parallel",
    "start": "4998440",
    "end": "5005400"
  },
  {
    "text": "like is that even achievable really in the browser these days like I don't know you tell me FR yeah I mean that's that",
    "start": "5005400",
    "end": "5011639"
  },
  {
    "text": "kind of gets into something else you mentioned which is the fast by default just because these things can load in parallel doesn't mean we've like blown",
    "start": "5011639",
    "end": "5018480"
  },
  {
    "text": "away all the performance optimizations of bundling and minification we still do do that but it's a really interesting",
    "start": "5018480",
    "end": "5024400"
  },
  {
    "text": "model instead of saying okay here's your whole page as a single JavaScript bundle we're saying almost like here's each",
    "start": "5024400",
    "end": "5029760"
  },
  {
    "text": "component as its own island is a term we like to use use it's its own bundle it can load in parallel and so you actually",
    "start": "5029760",
    "end": "5036199"
  },
  {
    "text": "are getting still bundled and optimized without you really having to think much about it but it's a result of us kind of",
    "start": "5036199",
    "end": "5041719"
  },
  {
    "text": "behind the scenes still giving you the model while handling the complexity of it behind the scenes for you that makes",
    "start": "5041719",
    "end": "5046920"
  },
  {
    "text": "sense so there is some intelligence that's under like being managed under the hood in terms of like optimizations",
    "start": "5046920",
    "end": "5052840"
  },
  {
    "text": "that are still happening yeah it's a big thing of trying to keep that away from the user having to it's the trick of how",
    "start": "5052840",
    "end": "5058840"
  },
  {
    "text": "do you talk about your framework when every framework claims to be fast right but what we like to say is it's fast by",
    "start": "5058840",
    "end": "5063920"
  },
  {
    "text": "default which I don't think any other framework can really claim what we mean by that is like it should be hard to build a slow site with Astro because for",
    "start": "5063920",
    "end": "5071239"
  },
  {
    "text": "Content sites performance is so key it's key to conversions and Google SEO they're going to rank faster sites over",
    "start": "5071239",
    "end": "5076320"
  },
  {
    "text": "slower sites right and a lot of other Frameworks you're kind of like okay well we built a s site what do we do okay",
    "start": "5076320",
    "end": "5082159"
  },
  {
    "text": "well we can optimize let's bring in a performance expert let's spend a Sprint on just performance and maybe you can make some progress but we want to come",
    "start": "5082159",
    "end": "5088840"
  },
  {
    "text": "from a principle of like it should be really difficult you should be like having to to try to make Astro slow for it to be slow yeah otherwise we' like",
    "start": "5088840",
    "end": "5096159"
  },
  {
    "text": "just keeping you out of that pit is really a a main goal of the project yeah yeah yeah yeah know that makes sense",
    "start": "5096159",
    "end": "5103000"
  },
  {
    "text": "that's really great to hear and I would say that like I think that's an interesting Nuance that I I didn't even",
    "start": "5103000",
    "end": "5108760"
  },
  {
    "text": "pick up on reading your docs like fast by default yes you're right it is the by",
    "start": "5108760",
    "end": "5114320"
  },
  {
    "text": "default part that I think you maybe you need to like bold that or something or put some confetti around it or something",
    "start": "5114320",
    "end": "5120719"
  },
  {
    "text": "yeah you have to try you got break Astro to break our performance story that's our goal that's cool good marketing and",
    "start": "5120719",
    "end": "5128080"
  },
  {
    "text": "so another kind of pitch on the Astro site is easy to use and I noticed that there is",
    "start": "5128080",
    "end": "5134800"
  },
  {
    "text": "aastro UI language that's kind of part of this framework so can you kind of",
    "start": "5134800",
    "end": "5139960"
  },
  {
    "text": "tell me a little bit about that and easy to use is a tough claim because that's",
    "start": "5139960",
    "end": "5145159"
  },
  {
    "text": "always relative but like how easy is it like is it as easy as jsx right where",
    "start": "5145159",
    "end": "5150840"
  },
  {
    "text": "it's like it's looks like G HTML sort of and like but still comes with its uh I",
    "start": "5150840",
    "end": "5158000"
  },
  {
    "text": "would say dragons right if so what's easy here I will call out that what you're reading is kind of like our",
    "start": "5158000",
    "end": "5163920"
  },
  {
    "text": "aspirations like we want Astro to be easy to use and we make design decisions for that goal over maybe something else",
    "start": "5163920",
    "end": "5170520"
  },
  {
    "text": "like a really complex feature that's really hard to use we like we'll avoid that even if maybe there's some reason",
    "start": "5170520",
    "end": "5175960"
  },
  {
    "text": "to do it other than it's something that we really value is we want to always be easy to use when we design astroid as",
    "start": "5175960",
    "end": "5182320"
  },
  {
    "text": "language as a framework as a platform all these things MH so I agree I want to like why use this oh it's easy to use",
    "start": "5182320",
    "end": "5188119"
  },
  {
    "text": "like I'm always like every again everyone says that but it's our aspiration we really value that over other things that other Frameworks might",
    "start": "5188119",
    "end": "5194840"
  },
  {
    "text": "value over ease of use okay that makes sense and so can you give me an example of like an easy to use API in the",
    "start": "5194840",
    "end": "5202440"
  },
  {
    "text": "library like something that's uniquely easy to use in Astro than some other framework that whoever might be using",
    "start": "5202440",
    "end": "5209199"
  },
  {
    "text": "yeah so you mentioned the asro file which I think is a really good example of how we're kind of trying to give like basically two different paths you can go",
    "start": "5209199",
    "end": "5215480"
  },
  {
    "text": "down and you can mix them as you want so if you love react you love spel you love view bring those into your project",
    "start": "5215480",
    "end": "5221159"
  },
  {
    "text": "they're going to work just like anything else to generate your UI so there's this idea of kind of bringing something you",
    "start": "5221159",
    "end": "5226360"
  },
  {
    "text": "know to feel comfortable pretty much from day one using Astro even if you're migrating a site like bring that site as",
    "start": "5226360",
    "end": "5232639"
  },
  {
    "text": "long as there weren't like framework specific bits if it's just a react component that's like super agnostic",
    "start": "5232639",
    "end": "5238080"
  },
  {
    "text": "fantastic it'll probably work in Astro assuming you kind of meet that you know you didn't bring in anything that was",
    "start": "5238080",
    "end": "5243679"
  },
  {
    "text": "framework specific from the old world the other side of that is Astro is US building a templating language that's",
    "start": "5243679",
    "end": "5249639"
  },
  {
    "text": "really just HTML so one of these things about using react or spelt or view is you're having to learn a framework that",
    "start": "5249639",
    "end": "5256400"
  },
  {
    "text": "was built for the client side so it's dealing with reactivity and hooks and you know these like atoms that are",
    "start": "5256400",
    "end": "5262880"
  },
  {
    "text": "responding to State changes like that was those are all Frameworks that were designed first for the client which has a much more complex interaction story",
    "start": "5262880",
    "end": "5269040"
  },
  {
    "text": "and then have kind of been backported to the server because we're so server first in our thinking Astro is just a template",
    "start": "5269040",
    "end": "5275719"
  },
  {
    "text": "language for the server there's no reactivity to worry about there's no hooks like everything's going to run once and render yeah and that gives us",
    "start": "5275719",
    "end": "5282400"
  },
  {
    "text": "essentially something that's just HTML so so we call like HTML with some like nice sta features like a GSX expression",
    "start": "5282400",
    "end": "5288679"
  },
  {
    "text": "if you want to do some sort of templating you can use components in it so it feels a lot like a spelter react",
    "start": "5288679",
    "end": "5294639"
  },
  {
    "text": "but we've Stripped Away all the bits that aren't really relevant on the server so you have your kind of framework that you love and then also we",
    "start": "5294639",
    "end": "5301080"
  },
  {
    "text": "try and give you this Baseline that's just HTML with a couple of little things you can opt into if you want them that's",
    "start": "5301080",
    "end": "5306480"
  },
  {
    "text": "so cool and yeah you know honestly I didn't even really put those things together in my head really like when you",
    "start": "5306480",
    "end": "5313880"
  },
  {
    "text": "optimize for Server first then when you're optimizing for HTML you also buy default like it's just easy to use",
    "start": "5313880",
    "end": "5321239"
  },
  {
    "text": "because you're not like you know yeah reactivity is really where things get complicated right yeah that's like the",
    "start": "5321239",
    "end": "5327000"
  },
  {
    "text": "2011 301 401 501 classes you know HTML",
    "start": "5327000",
    "end": "5332080"
  },
  {
    "text": "is like beginner friendly but doesn't hold you back on in terms of presenting structurally complex data or sites",
    "start": "5332080",
    "end": "5339360"
  },
  {
    "text": "either right so that's like the beauty of HTML it's something that's always bothered me of like oh this Hello World",
    "start": "5339360",
    "end": "5344480"
  },
  {
    "text": "tutorial well we need to learn a bundler you need to learn GSX you need to learn react you need to learn a state",
    "start": "5344480",
    "end": "5349880"
  },
  {
    "text": "management system a router like there's like a lot to learn in web development today and it's all about rendering HTML",
    "start": "5349880",
    "end": "5356360"
  },
  {
    "text": "at the end of the day so could we build a kind of getting started flow that is just HT like valid HTML works as a",
    "start": "5356360",
    "end": "5362320"
  },
  {
    "text": "template as a component in our syntax so yeah if you just want to copy an HTML from anywhere put in an Astra site",
    "start": "5362320",
    "end": "5368080"
  },
  {
    "text": "that's a site you youve just built a site with Astra that's our hell world yeah yeah know that that makes sense and",
    "start": "5368080",
    "end": "5373719"
  },
  {
    "text": "fly featured but flexible is the other thing right so you hinted a little bit about like bring your own sites bring",
    "start": "5373719",
    "end": "5379760"
  },
  {
    "text": "your own you can kind of B yof which is a thing that you all have coined bring",
    "start": "5379760",
    "end": "5384960"
  },
  {
    "text": "your own framework very cool you what does that even mean like there's over 100 Astro Integrations to choose from",
    "start": "5384960",
    "end": "5391440"
  },
  {
    "text": "like what Astro Integrations it sounds like a physics seminar of some kind but",
    "start": "5391440",
    "end": "5398000"
  },
  {
    "text": "I could be wrong yeah you got to put on your lab coat put on your your goggles jump into your config files current",
    "start": "5398000",
    "end": "5404280"
  },
  {
    "text": "astral projection for this equation is you know oh no you know it's okay listen",
    "start": "5404280",
    "end": "5410080"
  },
  {
    "text": "this is why I don't like writing it's hard to write Astro Integrations I'm",
    "start": "5410080",
    "end": "5415520"
  },
  {
    "text": "sure make sense in the context of web development so and in the context of Astro so why are you tell tell us about",
    "start": "5415520",
    "end": "5422280"
  },
  {
    "text": "what that is so yeah no I'm just laughing because I'm never going to be able to get that image out of my mind for the rest of my life I'm sorry as",
    "start": "5422280",
    "end": "5429400"
  },
  {
    "text": "asro Integrations yeah it's okay it's hilarious yeah it's our plug-in ecosystem we really like this idea of",
    "start": "5429400",
    "end": "5436719"
  },
  {
    "text": "our core providing all the things you need so when you install Astro you have the basic building blocks of the site",
    "start": "5436719",
    "end": "5442719"
  },
  {
    "text": "but then you know this idea of bringing your own framework it's a pretty lofty big scope kind of goal we couldn't build",
    "start": "5442719",
    "end": "5449600"
  },
  {
    "text": "everything into core without it just becoming this maintenance it's nightmare so right what we offer is this idea of like everything you need to build a site",
    "start": "5449600",
    "end": "5456159"
  },
  {
    "text": "is built into Astro we're going to focus on content sites so stuff like RSS feeds",
    "start": "5456159",
    "end": "5461320"
  },
  {
    "text": "God what else rendering mark down there's like all these nice little like very much more coming from like a blog",
    "start": "5461320",
    "end": "5467960"
  },
  {
    "text": "or like an 11d nice to have that are essential in the uh in the content site",
    "start": "5467960",
    "end": "5473400"
  },
  {
    "text": "so we build stuff like that in or make it really easy to grab off the shelf mhm and then when you want to use something",
    "start": "5473400",
    "end": "5479280"
  },
  {
    "text": "like Tailwind or reactor spelt we essentially have not just a kind of a plug-in and integration but also even a",
    "start": "5479280",
    "end": "5484880"
  },
  {
    "text": "command that you can run so Astro add react is going to do all the work to get that set up for you it's GNA mpm install",
    "start": "5484880",
    "end": "5491040"
  },
  {
    "text": "the package it's going to add it to your config file as you'd expect and the idea is you run that and now you can use a",
    "start": "5491040",
    "end": "5496159"
  },
  {
    "text": "react component in your project or spelt or view or Tailwind or whatever it is you need that is so cool but like I have",
    "start": "5496159",
    "end": "5501800"
  },
  {
    "text": "to ask like as maintainers what is it like trying to normalize the JavaScript",
    "start": "5501800",
    "end": "5507440"
  },
  {
    "text": "Community cuz it feels like that's what you're doing you're like we're just going to run a big normalization query",
    "start": "5507440",
    "end": "5513320"
  },
  {
    "text": "on the JavaScript Community are you like hooking into their the public interface or like the output of these tools CU",
    "start": "5513320",
    "end": "5520320"
  },
  {
    "text": "it's too much to like go any lower but I'm just curious like how are you managing this and normalizing this",
    "start": "5520320",
    "end": "5525840"
  },
  {
    "text": "experience like yeah that's kind of the key of why the astr syntax exists it",
    "start": "5525840",
    "end": "5531159"
  },
  {
    "text": "gives us that base layer where you can then plug in these Frameworks into it so create your shell and then put in your",
    "start": "5531159",
    "end": "5537199"
  },
  {
    "text": "react component and if you wanted to build an SBA if you wanted your whole page to be one react component or many",
    "start": "5537199",
    "end": "5542480"
  },
  {
    "text": "react components you never wanted to tou AST syntax that's fine too but that's kind of the normalization layer I think",
    "start": "5542480",
    "end": "5547800"
  },
  {
    "text": "that's that's actually pretty much exactly the magic that we've kind of shipped yeah the reason it's not too",
    "start": "5547800",
    "end": "5552960"
  },
  {
    "text": "much for us to lift is that serers side rendering a react component that's essentially what every other framework is doing for your whole site we're just",
    "start": "5552960",
    "end": "5559960"
  },
  {
    "text": "doing it shrunken down to a single component so it's almost this full circle story where react started early",
    "start": "5559960",
    "end": "5565480"
  },
  {
    "text": "days it was like yep here's a component here's a component it was all frontend focused and then the kind of build your",
    "start": "5565480",
    "end": "5571360"
  },
  {
    "text": "app as a Javascript app with react that all came later but we're just tapping into that original story which is use react",
    "start": "5571360",
    "end": "5577800"
  },
  {
    "text": "to build this component on the page all the same API work so we're basically doing the same thing that nextjs is doing or any react framework yeah that",
    "start": "5577800",
    "end": "5585360"
  },
  {
    "text": "is going to call the like server rendering internally to create that [Music]",
    "start": "5585360",
    "end": "5592520"
  },
  {
    "text": "HTML holy web Frameworks Batman we have made it to the end of the show wow so",
    "start": "5592520",
    "end": "5598600"
  },
  {
    "text": "much web Frameworks talk right there can you believe it three different web Frameworks recently on the",
    "start": "5598600",
    "end": "5604960"
  },
  {
    "text": "front end world no way if you're in total disbelief we want to hear from you in the comments check us out at",
    "start": "5604960",
    "end": "5610440"
  },
  {
    "text": "changelog fm/ 59 this is episode",
    "start": "5610440",
    "end": "5616159"
  },
  {
    "text": "509 a big shout out to our friends and our partners at fastly and fly and of",
    "start": "5616159",
    "end": "5621639"
  },
  {
    "text": "course to break master cylinder for those awesome banging beats those beats are banging and I love them do you love",
    "start": "5621639",
    "end": "5627360"
  },
  {
    "text": "them I think you love them and hey I mentioned this already about 8 plus minutes for a Plus+ subscribers a lot of",
    "start": "5627360",
    "end": "5633920"
  },
  {
    "text": "Plus in going on there but hey Plus+ is Plus+ check it out Plus+ changel law.com",
    "start": "5633920",
    "end": "5640199"
  },
  {
    "text": "plusus plusus is too easy support us directly make the ads disappear and get",
    "start": "5640199",
    "end": "5646119"
  },
  {
    "text": "access to that bonus content that's it this Show's done thank you again for tuning in we will see you on",
    "start": "5646119",
    "end": "5653639"
  },
  {
    "text": "[Music] Monday",
    "start": "5655860",
    "end": "5663210"
  },
  {
    "text": "[Music]",
    "start": "5663210",
    "end": "5672159"
  },
  {
    "text": "[Music] [Applause] [Music]",
    "start": "5675360",
    "end": "5686999"
  },
  {
    "text": "[Music] love",
    "start": "5690030",
    "end": "5696560"
  }
]