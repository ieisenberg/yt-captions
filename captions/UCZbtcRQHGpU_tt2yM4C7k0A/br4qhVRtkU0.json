[
  {
    "text": "anything on the web people will say like can this happen hey it's the web Anything Could Happen you could ask for things in order they could come back out",
    "start": "80",
    "end": "6359"
  },
  {
    "text": "of order all these other things what the state machine lets you do is like collapse that Infinity down to a few",
    "start": "6359",
    "end": "12240"
  },
  {
    "text": "manageable States you can think about big thanks to our partners lenow",
    "start": "12240",
    "end": "18520"
  },
  {
    "text": "fastly and launch Darkly we love Len they keep it fast and simple get a $100",
    "start": "18520",
    "end": "23640"
  },
  {
    "text": "in credit at lin.com changelog our bandwidth is provided by fastly learn",
    "start": "23640",
    "end": "28800"
  },
  {
    "text": "more at fastly.com and get your feature Flags Power by launch darkley get a demo at launch",
    "start": "28800",
    "end": "34399"
  },
  {
    "text": "dark.com more and more startups are using retool to focus their time on their core",
    "start": "34399",
    "end": "40000"
  },
  {
    "text": "product and that's exactly why they launch retool for startups this is a program that gives early stage Founders",
    "start": "40000",
    "end": "45440"
  },
  {
    "text": "free access to a lot of the software needed for great internal tooling and retools work with thousands of startups",
    "start": "45440",
    "end": "51360"
  },
  {
    "text": "and the trend line they noticed was technical Founders spending tons of time building internal tools that means at",
    "start": "51360",
    "end": "57520"
  },
  {
    "text": "this critical stage these Founders were distra active from their core product the goal is simple make it 10 times",
    "start": "57520",
    "end": "63680"
  },
  {
    "text": "faster to build the admin panels CR apps and the dashboard's most early stage teams need and retool has bundled",
    "start": "63680",
    "end": "69759"
  },
  {
    "text": "together a year of free access to retool with over $160,000 in partner discounts",
    "start": "69759",
    "end": "75240"
  },
  {
    "text": "to save you money while building retool apps with common Integrations like AWS mongod DB brex and segment there is so",
    "start": "75240",
    "end": "82720"
  },
  {
    "text": "much you can do with retool you can use these free credits to build tools that join product and building data into a single customer view tools that convert",
    "start": "82720",
    "end": "89439"
  },
  {
    "text": "manual workflows into fully featured apps for your team or tools that help non-technical teammates get access to",
    "start": "89439",
    "end": "95600"
  },
  {
    "text": "your database to read and write data analyze and query these are just a few examples learn more apply and join",
    "start": "95600",
    "end": "102280"
  },
  {
    "text": "Lightning demos at ret.com startups again ret.com",
    "start": "102280",
    "end": "108270"
  },
  {
    "text": "[Music]",
    "start": "108270",
    "end": "114719"
  },
  {
    "text": "startups this is JS party your weekly celebration",
    "start": "118840",
    "end": "124920"
  },
  {
    "text": "of JavaScript and the web we have some awesome episodes in the queue front end",
    "start": "124920",
    "end": "130239"
  },
  {
    "text": "Feud one passwords web stack fastify with Mato Kina and a whole lot more",
    "start": "130239",
    "end": "135879"
  },
  {
    "text": "subscribe today at JSP party. FM and follow the show on Twitter we are at JSP",
    "start": "135879",
    "end": "140920"
  },
  {
    "text": "party FM all right let's transition the state machine hey it's party time",
    "start": "140920",
    "end": "146940"
  },
  {
    "text": "[Applause] y'all",
    "start": "146940",
    "end": "151840"
  },
  {
    "text": "[Applause] hello Internet welcome to JS party I'm your host this week Nick nii Hoy Hoy and",
    "start": "155170",
    "end": "162440"
  },
  {
    "text": "I am joined by two wonderful co-panelists kall what's up kall hello",
    "start": "162440",
    "end": "167720"
  },
  {
    "text": "good to be back hello everyone welcome we're happy to have you back and I'm also joined by AML AML how's it going",
    "start": "167720",
    "end": "174480"
  },
  {
    "text": "hello hello I'm having a fan girl moment so I'll have to restrain myself today",
    "start": "174480",
    "end": "180599"
  },
  {
    "text": "absolutely I think we all are it's a very exciting podcast today uh today we are talking to David Ked David how's it",
    "start": "180599",
    "end": "188599"
  },
  {
    "text": "going going good how are you all doing fantastic and we are talking about you",
    "start": "188599",
    "end": "194239"
  },
  {
    "text": "and your fantastic project xstate and so uh why don't we kick off uh learning a",
    "start": "194239",
    "end": "200440"
  },
  {
    "text": "little bit more about you tell us tell us what's up sure so you might have noticed my screen name David K piano the",
    "start": "200440",
    "end": "206760"
  },
  {
    "text": "piano is not my last name as you probably surmised uh I went to college for piano and then discovered that um",
    "start": "206760",
    "end": "212799"
  },
  {
    "text": "doing web developments actually pays a lot more than playing piano so I sort of Switched Fields went into that and yeah",
    "start": "212799",
    "end": "220920"
  },
  {
    "text": "so uh you know I started at a startup as a junior developer and it was like the",
    "start": "220920",
    "end": "226799"
  },
  {
    "text": "startup where there were just all of these crazy workflows and multi-part forms and like one one of those things",
    "start": "226799",
    "end": "233040"
  },
  {
    "text": "where like you would click a checkbox and then a certain field would show unless this other checkbox was clicked then you have to do this and you might",
    "start": "233040",
    "end": "239120"
  },
  {
    "text": "go to a different step Etc and that was just really confusing to me as a junior",
    "start": "239120",
    "end": "244200"
  },
  {
    "text": "developer so I'm like there's got to be a better pattern for doing all this so I I was doing some research and I actually",
    "start": "244200",
    "end": "251319"
  },
  {
    "text": "just stumbled upon State machines so it's nothing that I learned at University like a lot of other you know",
    "start": "251319",
    "end": "257840"
  },
  {
    "text": "developers might have learned it's just like wow this is a nice visual language and I'm a visual learner and as a",
    "start": "257840",
    "end": "264280"
  },
  {
    "text": "musician like that's important too because you have sheet music which is a visual way of representing like what",
    "start": "264280",
    "end": "269840"
  },
  {
    "text": "you're supposed to play and so I was like hey I really dig this visual language let's uh dig more into it and",
    "start": "269840",
    "end": "276720"
  },
  {
    "text": "actually find out why it's not more popular today fast forward a few years I",
    "start": "276720",
    "end": "281840"
  },
  {
    "text": "uh decided to just put all of my learnings into what at the time was a toy project I actually called it estado",
    "start": "281840",
    "end": "288840"
  },
  {
    "text": "like the Spanish word for estate but I eventually changed that name yeah it's",
    "start": "288840",
    "end": "293880"
  },
  {
    "text": "awesome so that toy project had all of seven GitHub stars for many years until",
    "start": "293880",
    "end": "299880"
  },
  {
    "text": "actually decided to give a conference talk about it and yeah so it became X States and uh here we are I have a lot",
    "start": "299880",
    "end": "307960"
  },
  {
    "text": "of really good contributors working on it and um you know I'm just really",
    "start": "307960",
    "end": "313080"
  },
  {
    "text": "excited like where it's gotten to right now and you know where it's going to be in the future before we dive into xstate",
    "start": "313080",
    "end": "319240"
  },
  {
    "text": "I'm curious to hear more about piano do you still play a lot I know multiple developers who development is like their",
    "start": "319240",
    "end": "326440"
  },
  {
    "text": "it's their equivalent of serving tables right it's how they pay their way for their either professional music or",
    "start": "326440",
    "end": "331720"
  },
  {
    "text": "professional theater or whatever it is career so are you still going strong on the piano yeah I am in fact my pianoist",
    "start": "331720",
    "end": "338960"
  },
  {
    "text": "right here actually the pianoist actually over there but I have a Lego piano right there that did look very",
    "start": "338960",
    "end": "344240"
  },
  {
    "text": "tiny yeah yeah tiny piano it is playable actually um but uh yeah from time to",
    "start": "344240",
    "end": "351560"
  },
  {
    "text": "time I still perform you know just it's small like uh concerts things like that",
    "start": "351560",
    "end": "357280"
  },
  {
    "text": "so yeah try to keep it up that's very cool and is there any kind of",
    "start": "357280",
    "end": "362319"
  },
  {
    "text": "correlation between um instruments like that and state machines now that you've",
    "start": "362319",
    "end": "367440"
  },
  {
    "text": "really dug into those I would say the only correlation is the fact that like",
    "start": "367440",
    "end": "372560"
  },
  {
    "text": "what I talked about sheet music A visual representation of like you you have notes and bar lines and like just a",
    "start": "372560",
    "end": "379199"
  },
  {
    "text": "really limited set of notation for expressing a huge variety of music like centuries worth of music and I'm like",
    "start": "379199",
    "end": "386080"
  },
  {
    "text": "okay is there any sort of visual whatever it's called visual formalism that exists for application logic in the",
    "start": "386080",
    "end": "392360"
  },
  {
    "text": "same way and so I think that's the connection like just State machines and state charts can really describe not",
    "start": "392360",
    "end": "399520"
  },
  {
    "text": "everything but almost everything yeah okay so I'm like really digging this analogy and I don't consider myself like",
    "start": "399520",
    "end": "407479"
  },
  {
    "text": "a state machine nerd because like I I'm very familiar with people who really",
    "start": "407479",
    "end": "412919"
  },
  {
    "text": "love nerding out about State machines and a lot of my state machine nerd friends who happen to also write",
    "start": "412919",
    "end": "419080"
  },
  {
    "text": "JavaScript for a living love estate uh and I'll share some interesting Back stories later but this",
    "start": "419080",
    "end": "425960"
  },
  {
    "text": "kind of analogy of like this state machine needing a visual representation",
    "start": "425960",
    "end": "431280"
  },
  {
    "text": "and how it's similar to sheet music and if you really think about an orchestra I mean it is this giant kind of state",
    "start": "431280",
    "end": "438240"
  },
  {
    "text": "machine between multiple musicians that need to coordinate events and activities",
    "start": "438240",
    "end": "443479"
  },
  {
    "text": "in a synchronized fashion you know for a set duration of time it really is a very",
    "start": "443479",
    "end": "449080"
  },
  {
    "text": "interesting analogy and I think like your background in your story is just",
    "start": "449080",
    "end": "454400"
  },
  {
    "text": "like one small example of like why diversity and Tech is super important",
    "start": "454400",
    "end": "460400"
  },
  {
    "text": "not just age and race and ableism but like literally like what did you do",
    "start": "460400",
    "end": "465840"
  },
  {
    "text": "before this job you know what I mean like that unique perspective that you bring it's just you know it shows in the",
    "start": "465840",
    "end": "472520"
  },
  {
    "text": "way you approach problem solving and so you know we're really lucky to have you and yeah glad you picked this profession",
    "start": "472520",
    "end": "479039"
  },
  {
    "text": "to help pay your bills cuz yeah thank you yeah so before we dig too far in uh",
    "start": "479039",
    "end": "485759"
  },
  {
    "text": "maybe let's take a step back and Define what a state machine is so State machine",
    "start": "485759",
    "end": "491319"
  },
  {
    "text": "it's one of those things that sounds really really complicated and it's like oh my I need to go get a CS degree or",
    "start": "491319",
    "end": "497360"
  },
  {
    "text": "something in order to really understand it but as scary as it sounds it's actually pretty simple a state machine",
    "start": "497360",
    "end": "505479"
  },
  {
    "text": "is like you could describe something like even a human let's used me as an example as being in one of a finite",
    "start": "505479",
    "end": "512800"
  },
  {
    "text": "number of states and I can't be in more than one of these finite States at a time and so an example of a finite state",
    "start": "512800",
    "end": "519240"
  },
  {
    "text": "would be sleeping or awake I'm either sleeping or awake I can't be both sleeping and awake otherwise I have to",
    "start": "519240",
    "end": "525120"
  },
  {
    "text": "go see a doctor and deal with that whole thing don't want to do that so I could only be in one of those States and I",
    "start": "525120",
    "end": "530640"
  },
  {
    "text": "could also transition between sleeping and awake so if my alarm goes up hopefully I go from the sleeping to the",
    "start": "530640",
    "end": "537800"
  },
  {
    "text": "awake state and so what finite States really are are behaviors and by behaviors I mean how you or how some",
    "start": "537800",
    "end": "545320"
  },
  {
    "text": "entity reacts to events so I'm going to react differently to events when I'm sleeping versus when I'm awake and so",
    "start": "545320",
    "end": "552320"
  },
  {
    "text": "finite seat machines are just a collection of those behaviors of or finite States and events that come in so",
    "start": "552320",
    "end": "559519"
  },
  {
    "text": "a more practical example I mean this is JS party after all so like let's talk promises and fetching data like you're",
    "start": "559519",
    "end": "566760"
  },
  {
    "text": "either loading data or the data loaded or there's an error but you're not going to have more than one of those happen at",
    "start": "566760",
    "end": "573160"
  },
  {
    "text": "the same time you can't get both error and success or you can't get both loading and error and the problem today",
    "start": "573160",
    "end": "580560"
  },
  {
    "text": "is that there's lots of applications where they do do that like I'm sure you've run into an application where it's like I know my internet's fast but",
    "start": "580560",
    "end": "587040"
  },
  {
    "text": "this loading spinner has been going on for like 2 minutes now I'm pretty sure there's an error but it's just not going",
    "start": "587040",
    "end": "593360"
  },
  {
    "text": "to tell me it's going to show the loading spinner indefinitely so problems like that are solved by SE machines",
    "start": "593360",
    "end": "599040"
  },
  {
    "text": "where that's impossible you can't be both in an eror State and a loading State you have to be in one of those",
    "start": "599040",
    "end": "604519"
  },
  {
    "text": "wait a second David have you are you not familiar with a tiny little project called graphql I feel like graphql has like",
    "start": "604519",
    "end": "611720"
  },
  {
    "text": "broken all the rules there you know I mean you can get your success response",
    "start": "611720",
    "end": "616880"
  },
  {
    "text": "you can get partial response and you get a list of your errors and of course like zero respect for HTTP codes you know and",
    "start": "616880",
    "end": "624279"
  },
  {
    "text": "everything is a post and like what the f I mean you know I I love graphql but",
    "start": "624279",
    "end": "629440"
  },
  {
    "text": "like you know some things about the spec are really bothersome to my heart I",
    "start": "629440",
    "end": "635399"
  },
  {
    "text": "think graphql is highlighting David's point right so yeah the web in general",
    "start": "635399",
    "end": "640639"
  },
  {
    "text": "like anything on the web people will say like hey can this happen hey it's the web Anything Could Happen you could ask",
    "start": "640639",
    "end": "645920"
  },
  {
    "text": "for things in order they could come back out of order all these other things and what the state machine lets you do is",
    "start": "645920",
    "end": "651440"
  },
  {
    "text": "like collapse that Infinity down to a few manageable States you can think about right right some determinism right",
    "start": "651440",
    "end": "658519"
  },
  {
    "text": "mhm you on determinism you use that word in finite and is that just synonymous",
    "start": "658519",
    "end": "664519"
  },
  {
    "text": "with State machine like if you're talking about a state machine is it always a finite State machine and does",
    "start": "664519",
    "end": "669880"
  },
  {
    "text": "the word finite mean there's a finite number of states or there's a finite number of states I can be in at once so",
    "start": "669880",
    "end": "676000"
  },
  {
    "text": "finite is basically how you organize all of the possible you know states that",
    "start": "676000",
    "end": "681560"
  },
  {
    "text": "your application can be in and so it's more of a communication mechanism than",
    "start": "681560",
    "end": "687160"
  },
  {
    "text": "reality because obviously in this world like you know there's infinite number of you know different states that things",
    "start": "687160",
    "end": "693279"
  },
  {
    "text": "can be in but like finite is just for you know grouping so for example sleeping versus awake like my body is",
    "start": "693279",
    "end": "699360"
  },
  {
    "text": "still the same number of cells it's just that some are I I don't know how I I didn't take Anatomy but yeah it's just",
    "start": "699360",
    "end": "705839"
  },
  {
    "text": "that we discreetly Define sleeping and awake as two separate states and so",
    "start": "705839",
    "end": "711880"
  },
  {
    "text": "again it's a communication mechanism and it's a necessary one too because we as developers want to talk about what can",
    "start": "711880",
    "end": "718880"
  },
  {
    "text": "happen in certain States instead of like oh just check this Boolean flag and if this is false and that's true and this",
    "start": "718880",
    "end": "726240"
  },
  {
    "text": "and this are false then do this like that's really confusing and so yeah it's",
    "start": "726240",
    "end": "732560"
  },
  {
    "text": "a social construct sort of I think we do have to be careful too right so sleeping",
    "start": "732560",
    "end": "737959"
  },
  {
    "text": "and awake is a really convenient pair to talk about but we need some sort of way to capture the state of mind which is I",
    "start": "737959",
    "end": "745199"
  },
  {
    "text": "fell asleep on the couch but now my 8-year-old has jumped on top of me I'm definitely not all the way awake but I",
    "start": "745199",
    "end": "750440"
  },
  {
    "text": "don't think sleep captures that either right so um and I mean we're going really forward here but that's where you",
    "start": "750440",
    "end": "756680"
  },
  {
    "text": "get into State charts where now you have all of these little States like this half sleep half awake state where you're",
    "start": "756680",
    "end": "762279"
  },
  {
    "text": "definitely not sleeping you're definitely not fully awake but you're like in between there but you could say that's a subset of being awake or maybe",
    "start": "762279",
    "end": "769880"
  },
  {
    "text": "a subset of being asleep however you want to categorize that and state charts help you organize that I like that so I",
    "start": "769880",
    "end": "777160"
  },
  {
    "text": "haven't dealt that much with kind of layered State machines in that way so how do you think about that when you",
    "start": "777160",
    "end": "782839"
  },
  {
    "text": "have these sort of substates that are going on is it kind of similar to you might think of a class hierarchy or",
    "start": "782839",
    "end": "788680"
  },
  {
    "text": "something where you inherit things from the above state but you can override things or or how else would you address",
    "start": "788680",
    "end": "794040"
  },
  {
    "text": "that it's not so much inheriting it's more um just grouping similar behaviors together the way it works is uh by event",
    "start": "794040",
    "end": "801800"
  },
  {
    "text": "propagation too so basically when you have a state and that state has nested States those nested States take",
    "start": "801800",
    "end": "808680"
  },
  {
    "text": "priorities so if an event happens those smaller child states are going to respond to it first and if it doesn't",
    "start": "808680",
    "end": "813959"
  },
  {
    "text": "handle it it goes to the parents Etc All State charts can be made into State",
    "start": "813959",
    "end": "819199"
  },
  {
    "text": "machines it's just that when you convert a state chart to a state machine you get what's called State explosion because",
    "start": "819199",
    "end": "825240"
  },
  {
    "text": "you get all of these unorganized dates honestly I think uh this is sort of met but that's one of the biggest reasons",
    "start": "825240",
    "end": "831959"
  },
  {
    "text": "for the learning curve behind xate is that there's so much to learn with State charts but I want to emphasize that",
    "start": "831959",
    "end": "837160"
  },
  {
    "text": "state charts are just an organization mechanism it's one of those things where you don't have to learn at all before",
    "start": "837160",
    "end": "842880"
  },
  {
    "text": "you start using it just know that there are tools there that help you better organize your States and all of this is",
    "start": "842880",
    "end": "850040"
  },
  {
    "text": "a lot better than you know of course organizing like a ton of Boolean variables so if I was to play that back",
    "start": "850040",
    "end": "856320"
  },
  {
    "text": "to you the state machine is essentially the flattened version it doesn't have all the context of how these states relate to each other except in the rules",
    "start": "856320",
    "end": "863560"
  },
  {
    "text": "that are written out and so it can be potentially hard to understand that higher level structure whereas the state",
    "start": "863560",
    "end": "869480"
  },
  {
    "text": "is kind of a grouped set of State machine pieces so that you can see that",
    "start": "869480",
    "end": "874759"
  },
  {
    "text": "bigger picture a little bit more oh these are really substates of this and this is how they relate to each other in what priority is that a fair assessment",
    "start": "874759",
    "end": "882360"
  },
  {
    "text": "yeah exactly I mean imagine making like a web page where you have no nesting of elements that would be your state",
    "start": "882360",
    "end": "888839"
  },
  {
    "text": "machine so State charts are sort of the Revolutionary thing that says hey you could Nest elements however you'd like",
    "start": "888839",
    "end": "895279"
  },
  {
    "text": "yeah so I mean U it's a really great summary and analys alogy David great summary kall great analogy David so",
    "start": "895279",
    "end": "904160"
  },
  {
    "text": "Props points for both of you um so for me like I think this like this concept of like encapsulated States is you know",
    "start": "904160",
    "end": "911240"
  },
  {
    "text": "maybe something that isn't explicitly said here like having kind of that encapsulation where nested states are",
    "start": "911240",
    "end": "918560"
  },
  {
    "text": "not necessarily triggerable by higher level uh kind of state machines right so",
    "start": "918560",
    "end": "923920"
  },
  {
    "text": "you have to get to this path and take this left and take this right in order to trigger this nested state like that's",
    "start": "923920",
    "end": "929720"
  },
  {
    "text": "kind of cool but I think for me it kind of it still goes back to that like age-old question of like local state",
    "start": "929720",
    "end": "936079"
  },
  {
    "text": "versus global application State and like when to encapsulate what right like if you have a calendar widget and you know",
    "start": "936079",
    "end": "943199"
  },
  {
    "text": "a user's picking their dates and that maybe that's part of a form and let's say you want to have some form State",
    "start": "943199",
    "end": "949360"
  },
  {
    "text": "what are you persisting what are you saving what's what's application state if the user wants to rehydrate you know",
    "start": "949360",
    "end": "954440"
  },
  {
    "text": "after a refresh like where are you bringing them back right like and I think you know for me that's something",
    "start": "954440",
    "end": "959880"
  },
  {
    "text": "that xate doesn't have a strong opinion on right like it's kind of like you design",
    "start": "959880",
    "end": "966079"
  },
  {
    "text": "it how you want to but however like I do think like there are still some principles around",
    "start": "966079",
    "end": "971680"
  },
  {
    "text": "encapsulation when something is can be shared by other things and when it should trickle down and also like the",
    "start": "971680",
    "end": "977560"
  },
  {
    "text": "directional management of State events like that's still a little bit fuzzy I think for most folks including me you",
    "start": "977560",
    "end": "984000"
  },
  {
    "text": "know like I always have to think about it it's never like a it's not always like an automatic thing for me",
    "start": "984000",
    "end": "989560"
  },
  {
    "text": "where I know how this is supposed to flow then it's okay to also refactor and you get it wrong you know mhm and so",
    "start": "989560",
    "end": "995759"
  },
  {
    "text": "that's where we get into uh the actor model so that's sort of like the second half of xate which again people think",
    "start": "995759",
    "end": "1002160"
  },
  {
    "text": "it's a big learning curve but it's actually a lot simpler you know than you might think so with the actor model",
    "start": "1002160",
    "end": "1008199"
  },
  {
    "text": "instead of having just this one giant day chart like just sort of determining or even like ad hoc machines like just",
    "start": "1008199",
    "end": "1014519"
  },
  {
    "text": "figuring out like the logic for different components you have this actor model where you have individual actors",
    "start": "1014519",
    "end": "1021440"
  },
  {
    "text": "where you you could think of them like class instances or just like things that you could send messages to and the",
    "start": "1021440",
    "end": "1027120"
  },
  {
    "text": "behavior of each actor is Guided by a state machine so an actor can send a",
    "start": "1027120",
    "end": "1032280"
  },
  {
    "text": "message to another actor so for example you could consider like uh if you're",
    "start": "1032280",
    "end": "1037319"
  },
  {
    "text": "listening for Mouse move events on a Dom element that's an actor and so when",
    "start": "1037319",
    "end": "1042438"
  },
  {
    "text": "you're setting up ad event listener and checking for those Mouse moves you would send those events probably to something",
    "start": "1042439",
    "end": "1048640"
  },
  {
    "text": "else and so that would be another actor and so that actor might be in charge of like",
    "start": "1048640",
    "end": "1053840"
  },
  {
    "text": "coordinating all this movements like you know if it's a drag drop actor or something like that that's another",
    "start": "1053840",
    "end": "1059320"
  },
  {
    "text": "conceptual shift at least in frontend developments is thinking of everything in your app as like just little entities",
    "start": "1059320",
    "end": "1065880"
  },
  {
    "text": "talking to each other and it's also something that's very different than for example Redux where Redux it's like okay",
    "start": "1065880",
    "end": "1072480"
  },
  {
    "text": "everything is in this one Global store and if you don't have things that fit in this Global store good luck find",
    "start": "1072480",
    "end": "1079320"
  },
  {
    "text": "somewhere else to put them you they can't live in Redux and so xate takes a different approach and it's like it",
    "start": "1079320",
    "end": "1084760"
  },
  {
    "text": "doesn't matter whether it's local or Global you could set up that actor hierarchy however you want and access it",
    "start": "1084760",
    "end": "1091120"
  },
  {
    "text": "uh wherever you want so that sounds to me a lot like the type of encapsulation we're used to thinking about in terms of",
    "start": "1091120",
    "end": "1097120"
  },
  {
    "text": "data for component level data but in this case it's not just data but it's",
    "start": "1097120",
    "end": "1103880"
  },
  {
    "text": "this whole state machine of like what are the potential States is this once again sort of tactic sugar to help us",
    "start": "1103880",
    "end": "1109799"
  },
  {
    "text": "think about this could you compile that up into a single Global State machine if you wanted to and if so are there any",
    "start": "1109799",
    "end": "1115880"
  },
  {
    "text": "sorts of interesting like analyses or invariant checkings we can do on that as far as like compiling like a bunch of",
    "start": "1115880",
    "end": "1121480"
  },
  {
    "text": "actors into a single state machine I would say not really it's sort of like asking like can we compile all four of",
    "start": "1121480",
    "end": "1128400"
  },
  {
    "text": "us into a single Mega human doesn't really work that way um as far as Ste",
    "start": "1128400",
    "end": "1134080"
  },
  {
    "text": "machines itself that could compile down to just like normal code you don't need",
    "start": "1134080",
    "end": "1139320"
  },
  {
    "text": "to use a library and in fact I wrote an article you don't need a library for State machines actors sort of work the",
    "start": "1139320",
    "end": "1144440"
  },
  {
    "text": "same way too it's just this contract between objects where you could just talk to different objects so what",
    "start": "1144440",
    "end": "1150440"
  },
  {
    "text": "constitutes an actor and also by the way does this mean kall that like nine women can't make a baby in a month because",
    "start": "1150440",
    "end": "1158080"
  },
  {
    "text": "that just like ruins my plans I have heard that yes no I guess where I was trying to get to is like conceptually",
    "start": "1158080",
    "end": "1165480"
  },
  {
    "text": "where are the where are the lines of a statement machine and cuz one of the real benefits of State machines is that",
    "start": "1165480",
    "end": "1171720"
  },
  {
    "text": "they're extremely analyzable right you can put something in an exact State you can reproduce that state exactly you can",
    "start": "1171720",
    "end": "1178280"
  },
  {
    "text": "always understand what's going to happen here and when we talk about breaking apart into actors there is in and of",
    "start": "1178280",
    "end": "1185640"
  },
  {
    "text": "itself kind of a useful abstraction there right the actor model for thinking about things is quite useful message passing is a nice way to to delineate",
    "start": "1185640",
    "end": "1192200"
  },
  {
    "text": "things and within each actor you have that property of there's a nice",
    "start": "1192200",
    "end": "1197280"
  },
  {
    "text": "analyzable State machine but it does make me wonder if we put in the Restriction of only actors can send",
    "start": "1197280",
    "end": "1204280"
  },
  {
    "text": "messages to actors so we're we're keeping everything is within our our sort of model of xstate State machines",
    "start": "1204280",
    "end": "1212039"
  },
  {
    "text": "and to be fair I've never played with xstate so this is all hypothetical in my head I don't that's fair you have a much more concrete model at that point you",
    "start": "1212039",
    "end": "1219480"
  },
  {
    "text": "know every message is potentially the result of a state transition or something along those lines so",
    "start": "1219480",
    "end": "1225880"
  },
  {
    "text": "conceptually these State machines are part of a more a larger Global State machine yeah if we say only actors can",
    "start": "1225880",
    "end": "1232960"
  },
  {
    "text": "send messages to actors All actors are themselves State machines then we should be able to do",
    "start": "1232960",
    "end": "1239120"
  },
  {
    "text": "some amount of combination of actors and say okay even though it's a useful",
    "start": "1239120",
    "end": "1244640"
  },
  {
    "text": "organizing technique to have these be isolated we can model them as one larger thing so that we can run Global checks",
    "start": "1244640",
    "end": "1251280"
  },
  {
    "text": "and say are there loops that we might get into or other situations where this is not a valid State machine all right I",
    "start": "1251280",
    "end": "1257960"
  },
  {
    "text": "understand you now so yeah this is more along the lines of orchestration so with orchestration you have like this",
    "start": "1257960",
    "end": "1264559"
  },
  {
    "text": "hierarchy of actors where again this is not Global State like Redux but you have like a global orchestrating actor and",
    "start": "1264559",
    "end": "1271559"
  },
  {
    "text": "then you have maybe child actors that were spawn by it and those child actors could also spawn Child Actors and all of",
    "start": "1271559",
    "end": "1277679"
  },
  {
    "text": "these actors could be talking to each other but you are ideally organizing your app in a way that you have a",
    "start": "1277679",
    "end": "1283880"
  },
  {
    "text": "central orchestrator you know just like an Orchestra conductor that is re receiving messages and maybe delegating",
    "start": "1283880",
    "end": "1290600"
  },
  {
    "text": "to other actors okay you do this and you do that sort of like working at a company where it's not co-workers",
    "start": "1290600",
    "end": "1297240"
  },
  {
    "text": "telling each other what to do at least hopefully it's more like the manager is",
    "start": "1297240",
    "end": "1302440"
  },
  {
    "text": "understanding what needs to be done is getting changes as they happen in other signals and then is telling um their uh",
    "start": "1302440",
    "end": "1309640"
  },
  {
    "text": "employees like okay you do this you do that so doing it that way you could",
    "start": "1309640",
    "end": "1315360"
  },
  {
    "text": "think of like just this massive network of actors as just like you have a central orchestration unit and events",
    "start": "1315360",
    "end": "1322159"
  },
  {
    "text": "come in from the other actors so you don't need to worry about like okay well how do we like combine those actors",
    "start": "1322159",
    "end": "1327960"
  },
  {
    "text": "together just know that there's a potential number of events that are going to come from somewhere and so with",
    "start": "1327960",
    "end": "1334159"
  },
  {
    "text": "that you could fully test your orchestration and ensure that hey if this event comes in this is going to",
    "start": "1334159",
    "end": "1339919"
  },
  {
    "text": "happen if this other event comes in then this Behavior might change and then this might happen so abstracting it that way",
    "start": "1339919",
    "end": "1347159"
  },
  {
    "text": "it actually makes it a lot easier to test and that's sort of one of the central ideas behind um modelbased",
    "start": "1347159",
    "end": "1353320"
  },
  {
    "text": "testing it's called where you're not even thinking about like oh man I have to mock this I have to make sure that",
    "start": "1353320",
    "end": "1359880"
  },
  {
    "text": "this is integrated with that it's more like okay everything is just events so you receive those events and you receive",
    "start": "1359880",
    "end": "1366760"
  },
  {
    "text": "like a just a whole bunch of combinations of events and you ensure that the uh State resulting from those",
    "start": "1366760",
    "end": "1373240"
  },
  {
    "text": "events is as expected according to your model",
    "start": "1373240",
    "end": "1380440"
  },
  {
    "text": "[Music]",
    "start": "1380640",
    "end": "1391410"
  },
  {
    "text": "what's up party people this episode is brought to you by alzero alzero is a for",
    "start": "1392559",
    "end": "1397679"
  },
  {
    "text": "developers by developers identity platform built for the cloud era they secure billions of logins every year",
    "start": "1397679",
    "end": "1404080"
  },
  {
    "text": "identity is the front door of every user interaction and the login experience can make or break a user's first impression",
    "start": "1404080",
    "end": "1410799"
  },
  {
    "text": "identity and authentication is never a set it and forget it thing that means when teams decide to roll their own they",
    "start": "1410799",
    "end": "1416000"
  },
  {
    "text": "are taking on the full burden of constantly evolving industry standards customer expectations and data breach",
    "start": "1416000",
    "end": "1421320"
  },
  {
    "text": "tactics and they often don't have the time expertise or resources to meet those needs this takes away from",
    "start": "1421320",
    "end": "1427240"
  },
  {
    "text": "critical time needed to innovate and to improve their core product off zero has solved this problem for every developer",
    "start": "1427240",
    "end": "1433120"
  },
  {
    "text": "to give teams their time back and to make applications more secure with off zero security compliance and Industry",
    "start": "1433120",
    "end": "1439960"
  },
  {
    "text": "standards they're always up todate developers are free to provide the login options their users want with the",
    "start": "1439960",
    "end": "1446600"
  },
  {
    "text": "security their application demands make login off zeros problem not yours learn",
    "start": "1446600",
    "end": "1451720"
  },
  {
    "text": "more at off zero.com again [Music]",
    "start": "1451720",
    "end": "1465760"
  },
  {
    "text": "offer.com un estto so um yeah I definitely just said Uno",
    "start": "1465760",
    "end": "1472440"
  },
  {
    "text": "EST that happened cuz you know xate was originally for it's a formerly known as",
    "start": "1472440",
    "end": "1479000"
  },
  {
    "text": "EST not to derail but I would love to know why you didn't stick with that yeah exactly who made you change it darn it",
    "start": "1479000",
    "end": "1485679"
  },
  {
    "text": "okay there was Redux mob X like there's the the whole X thing was going on so I'm like okay I have to find something",
    "start": "1485679",
    "end": "1491919"
  },
  {
    "text": "with x and x date was available so I took it and then I backpad and like added meaning to the x it means like a",
    "start": "1491919",
    "end": "1499640"
  },
  {
    "text": "transition like a crossing of some sort so I have no idea what they mean in",
    "start": "1499640",
    "end": "1504760"
  },
  {
    "text": "Redux and mobx but at least I came up with some sort of meaning they mean nothing it's just cool it's the coolest",
    "start": "1504760",
    "end": "1510320"
  },
  {
    "text": "letter they're remixes and available domain names you know what I'm saying yeah and GitHub names um but but anyway",
    "start": "1510320",
    "end": "1517840"
  },
  {
    "text": "so back to question time we talked a little bit about orchestration and actors we kind of did a little bit of a deep dive so I'm just going to ask you",
    "start": "1517840",
    "end": "1524520"
  },
  {
    "text": "to just like take a few steps back cuz I'm I'm a little lost so can can we talk a little bit about like what actually",
    "start": "1524520",
    "end": "1530159"
  },
  {
    "text": "constitutes an actor what is an orchestrator and really like what are",
    "start": "1530159",
    "end": "1535320"
  },
  {
    "text": "the general moving pieces for a production level xate State machine yeah",
    "start": "1535320",
    "end": "1542240"
  },
  {
    "text": "so actor think about our ourselves really I'm an actor not not like an",
    "start": "1542240",
    "end": "1547559"
  },
  {
    "text": "actor actor but like I'm an entity and I'm just calling us an actor Nick's an actor kall's an actor am you're an actor",
    "start": "1547559",
    "end": "1554720"
  },
  {
    "text": "so I'm an actor actor I'm actually a diva thank you very much all right well",
    "start": "1554720",
    "end": "1560600"
  },
  {
    "text": "subset of actor yeah specialized subass of actor thank you thank you thank you gentlemen thank you so with actors what",
    "start": "1560600",
    "end": "1568080"
  },
  {
    "text": "we're doing right now is we're talking to each other we're sending each other messages and so that's like one of the",
    "start": "1568080",
    "end": "1574480"
  },
  {
    "text": "primary functions of an actor the way that actors communicate is by sending messages and so actors can send messages",
    "start": "1574480",
    "end": "1582760"
  },
  {
    "text": "actors can receive messages of course but could they choose what they want to listen to they can that's an actor's",
    "start": "1582760",
    "end": "1589320"
  },
  {
    "text": "Behavior so I have a behavior and that behavior can change depending on the message that I get you know like if",
    "start": "1589320",
    "end": "1595679"
  },
  {
    "text": "someone offends me on Twitter then my behavior might be a little bit different so you know it depends on the messages",
    "start": "1595679",
    "end": "1601200"
  },
  {
    "text": "you receive and also actors have their own local private state so with this",
    "start": "1601200",
    "end": "1608559"
  },
  {
    "text": "whole analogy I have thoughts in my head right now you're all thinking something I don't know what those thoughts are I",
    "start": "1608559",
    "end": "1614120"
  },
  {
    "text": "can't read your mind so how do I get that information out of you you well I",
    "start": "1614120",
    "end": "1619320"
  },
  {
    "text": "ask you just like you're asking me questions right now we're sending a message and we're hopefully anticipating",
    "start": "1619320",
    "end": "1625840"
  },
  {
    "text": "a message back otherwise it would be really awkward that's how actors communicate so actors are just things",
    "start": "1625840",
    "end": "1632159"
  },
  {
    "text": "that send and receive messages now actors could also do things like spawn other actors and just create this",
    "start": "1632159",
    "end": "1637559"
  },
  {
    "text": "network of actors but those are the three basic uh parts of actors so just like to recap it's sending messages",
    "start": "1637559",
    "end": "1644559"
  },
  {
    "text": "listening to messages that you subscribe to and then spawning other actors",
    "start": "1644559",
    "end": "1649760"
  },
  {
    "text": "exactly and and that's all there is to it actors are State machines as well right they encapsulate State machines",
    "start": "1649760",
    "end": "1657080"
  },
  {
    "text": "right yeah you can think of it that way so actors exhibit State machine Behavior whether it's implicit or explicit just",
    "start": "1657080",
    "end": "1663240"
  },
  {
    "text": "because State machines and actors go really well together since actors Define their behavior based on events they",
    "start": "1663240",
    "end": "1669519"
  },
  {
    "text": "receive and that's exactly how a state Machine Works would you have a scenario where there's no actor it's just a state",
    "start": "1669519",
    "end": "1675559"
  },
  {
    "text": "machine well so a a state machine that's it's like a blueprint it's a description it's like saying there's a blueprints of",
    "start": "1675559",
    "end": "1681919"
  },
  {
    "text": "a house but there is no actual house so yeah so then like can an actor contain",
    "start": "1681919",
    "end": "1687440"
  },
  {
    "text": "an actor contain an actor like is there like infinite levels of nesting and so like actors even if they're nested and",
    "start": "1687440",
    "end": "1693919"
  },
  {
    "text": "encapsulated they still can listen to messages that are outside of their immediate scope like in the upper levels",
    "start": "1693919",
    "end": "1700039"
  },
  {
    "text": "of the bubble versus the inner yeah so first of all yeah actors could spawn actors all the way down but as far as",
    "start": "1700039",
    "end": "1706240"
  },
  {
    "text": "receiving and sending messages that that's another constraint of actors in that I can only send messages to someone",
    "start": "1706240",
    "end": "1712799"
  },
  {
    "text": "that I have contact with so right now I could talk to all of you but if I want to talk to someone in like the YouTube",
    "start": "1712799",
    "end": "1719399"
  },
  {
    "text": "chat or some other live stream somewhere I don't have a direct connection with them so I cannot do that right now and",
    "start": "1719399",
    "end": "1726039"
  },
  {
    "text": "likewise if you don't have a connection with me then you can't send messages to me same thing with actors so the way",
    "start": "1726039",
    "end": "1731720"
  },
  {
    "text": "that actors talk to each other is by having reference to other actors like having their email address or phone",
    "start": "1731720",
    "end": "1737000"
  },
  {
    "text": "number that raises a question that I had which is are all of these messages pointto point or can you like subscribe",
    "start": "1737000",
    "end": "1744120"
  },
  {
    "text": "to messages so you could get like a multicast type of phenomenon going on yeah so actors are just the building",
    "start": "1744120",
    "end": "1750200"
  },
  {
    "text": "block and you could create abstractions on top of that so one of the most popular libraries for just the actor",
    "start": "1750200",
    "end": "1756240"
  },
  {
    "text": "model in general is AKA really popular in the Java and the scalla ecosystem they also have the notion of subscribing",
    "start": "1756240",
    "end": "1763200"
  },
  {
    "text": "and topics and other things you might find like multicasting and all of that",
    "start": "1763200",
    "end": "1768320"
  },
  {
    "text": "so yeah you could definitely build abstractions on top of just those basic actor model rules like for example if",
    "start": "1768320",
    "end": "1774080"
  },
  {
    "text": "you wanted to build your own subscription mechanism on you know actors it's nothing new it's just okay",
    "start": "1774080",
    "end": "1780279"
  },
  {
    "text": "as part of my internal State I might have a list of subscribers and whenever a subscriber sends a message saying I",
    "start": "1780279",
    "end": "1786600"
  },
  {
    "text": "want to subscribe to you I added to that list of subscribers so now I have a reference and so when I feel like",
    "start": "1786600",
    "end": "1792279"
  },
  {
    "text": "emitting or multicasting something I will go to my list of subscribers and just iterate through and message each",
    "start": "1792279",
    "end": "1798480"
  },
  {
    "text": "one of them I'm still a little confus sorry if I'm like super slow brain today all good but I'm still a little confused",
    "start": "1798480",
    "end": "1804919"
  },
  {
    "text": "at how an actor is supposed to know about another actor before they can communicate like you can't just publish",
    "start": "1804919",
    "end": "1812240"
  },
  {
    "text": "a name of an actor or is that is that what you mean by that they need to know the name like or that they need to have",
    "start": "1812240",
    "end": "1818640"
  },
  {
    "text": "contact it's more like they have to have you know reference um for example how",
    "start": "1818640",
    "end": "1823679"
  },
  {
    "text": "did you all know about me how did I know about you someone probably told you or you saw something on Twitter which",
    "start": "1823679",
    "end": "1829679"
  },
  {
    "text": "Twitter you could think of Twitter as its own actor so yeah and actors can",
    "start": "1829679",
    "end": "1834840"
  },
  {
    "text": "come to know of other actors by two basic mechanisms either they're born with it so when a parents actor creates",
    "start": "1834840",
    "end": "1842000"
  },
  {
    "text": "a child actor could say by the way you know this actor or you know even as simple as you know me as your parents or",
    "start": "1842000",
    "end": "1848799"
  },
  {
    "text": "I could send them a message and say hey you should check out this other actor this is a reference to that actor okay",
    "start": "1848799",
    "end": "1855679"
  },
  {
    "text": "yeah so you could send through messages that makes sense that's awesome I also love the like maybe they were born with",
    "start": "1855679",
    "end": "1861639"
  },
  {
    "text": "it you know it's like a good reference to like Lady Gaga you know I was born this way and then then uh what the other",
    "start": "1861639",
    "end": "1868559"
  },
  {
    "text": "Maybelline maybe she was born anyways so I think the question I have is like in",
    "start": "1868559",
    "end": "1873639"
  },
  {
    "text": "terms of event flow right like the thing that flux architectures popularized in",
    "start": "1873639",
    "end": "1880120"
  },
  {
    "text": "the front end was this kind of downwards data prop event propagation workflow",
    "start": "1880120",
    "end": "1886760"
  },
  {
    "text": "right and kind of was an attempt to Wrangle all of the spaghetti events that",
    "start": "1886760",
    "end": "1892960"
  },
  {
    "text": "were flying everywhere in the front-end Community before that like think of java you know jQuery code bases that didn't",
    "start": "1892960",
    "end": "1898880"
  },
  {
    "text": "use like Frameworks right jQuery is a library and codes just you know whatever things are using IES and function scope",
    "start": "1898880",
    "end": "1905360"
  },
  {
    "text": "in order to like encapsulate and so there just was never a predictable way to like debug a problem because you",
    "start": "1905360",
    "end": "1911000"
  },
  {
    "text": "never knew like what was talking to what right you know what I mean yeah and then we introduced the same pups up pattern",
    "start": "1911000",
    "end": "1917480"
  },
  {
    "text": "and the front end and downwards data flow and like good component architecture and hierarchies and so are",
    "start": "1917480",
    "end": "1924600"
  },
  {
    "text": "there some best practices or just like recommended flows for events or is that just like something that doesn't matter",
    "start": "1924600",
    "end": "1932200"
  },
  {
    "text": "in the world of xate because you know once you are in a given scenario there is going to be a level of determinism",
    "start": "1932200",
    "end": "1938519"
  },
  {
    "text": "regardless of whether that Arrow came from above or below or from the side you know so I I think one of the most",
    "start": "1938519",
    "end": "1945000"
  },
  {
    "text": "important things is separation of concerns with libraries that love to just put everything in one Global store",
    "start": "1945000",
    "end": "1950799"
  },
  {
    "text": "it's like you're sort of you're either making an artificial separation of concerns or you're completely",
    "start": "1950799",
    "end": "1956480"
  },
  {
    "text": "eliminating it entirely and saying everything is either Global or figure it out like I talked about and so with exit",
    "start": "1956480",
    "end": "1962639"
  },
  {
    "text": "it really encourages you to be like okay if there is some like actor that's",
    "start": "1962639",
    "end": "1968679"
  },
  {
    "text": "concerned with this and another actor concerned with that then those should be two separate State machines or actors however you want to make it and it's",
    "start": "1968679",
    "end": "1975639"
  },
  {
    "text": "also forcing you to abstract everything via events and so that further reinforces separation of concerns",
    "start": "1975639",
    "end": "1982039"
  },
  {
    "text": "because now it's no longer about like oh what's the right method name or what part of the data do I have to read from",
    "start": "1982039",
    "end": "1988360"
  },
  {
    "text": "this state and once the right time to read it it's like no it's all just events you're just sing in uh sending an",
    "start": "1988360",
    "end": "1994360"
  },
  {
    "text": "events and hoping that the actor does the right thing with it and uh as far as getting State it's receiving an events",
    "start": "1994360",
    "end": "2001080"
  },
  {
    "text": "whether you're subscribing to it implicitly or you're actually explicitly getting that event sensed directly from",
    "start": "2001080",
    "end": "2007320"
  },
  {
    "text": "the actor to the other actor with xate the architecture is really about simplifying",
    "start": "2007320",
    "end": "2013279"
  },
  {
    "text": "and having everything in terms of isolated behaviors and message passing",
    "start": "2013279",
    "end": "2019159"
  },
  {
    "text": "and that's pretty much it and so I I feel like that makes your logic a lots",
    "start": "2019159",
    "end": "2024440"
  },
  {
    "text": "more predictable and it's something that you could even extract and communicate with uh you know non-technical people",
    "start": "2024440",
    "end": "2031799"
  },
  {
    "text": "for sure yeah that I think that's like the whole um it helps you kind of decouple your design and discovery",
    "start": "2031799",
    "end": "2037880"
  },
  {
    "text": "process and I have to give credit to um Alec Lavoy who's a teammate of mine at Indigo who was the first person to",
    "start": "2037880",
    "end": "2044480"
  },
  {
    "text": "introduced me to xstate I had spent a few years kind of away from Front End explicitly because I was I was at npm",
    "start": "2044480",
    "end": "2050520"
  },
  {
    "text": "and I was just doing things with electron before that and so I kind of came back into the front end worlds like",
    "start": "2050520",
    "end": "2057118"
  },
  {
    "text": "and then all of a sudden xate was a thing and Alec introduced me to it and he was really trying to push us creating",
    "start": "2057119",
    "end": "2063440"
  },
  {
    "text": "State machines with our designers and incorporating that into our development",
    "start": "2063440",
    "end": "2068800"
  },
  {
    "text": "process because it's like you get this artifact that you can then code against right because here's your spec here's",
    "start": "2068800",
    "end": "2075320"
  },
  {
    "text": "this flowchart you know you can host it somewhere you can put it in a GitHub issue and it's this thing that helps you",
    "start": "2075320",
    "end": "2080960"
  },
  {
    "text": "decouple the design and Discovery process and just make sure that you've got all your error States you've kind of thought through all the different",
    "start": "2080960",
    "end": "2086960"
  },
  {
    "text": "scenarios and then you know you can decide what you want to support in this iteration what you don't right build in",
    "start": "2086960",
    "end": "2093158"
  },
  {
    "text": "placeholders and it's just a just a really great communication tool so really Kudos uh for doing that M and",
    "start": "2093159",
    "end": "2100320"
  },
  {
    "text": "kudos to Alec you know yeah yeah I think touching on that a little bit ail you",
    "start": "2100320",
    "end": "2105520"
  },
  {
    "text": "mentioned like an artifact being able to look at there the first things that you'll see and like if you go to the",
    "start": "2105520",
    "end": "2110839"
  },
  {
    "text": "xate site one of the the four links on the page is to the visualizer and that's",
    "start": "2110839",
    "end": "2116560"
  },
  {
    "text": "this tool that lets you visualize the state machine in a non-code way that's like a like a a state chart is that what",
    "start": "2116560",
    "end": "2122960"
  },
  {
    "text": "you would consider a state chart David yeah that's a state chart and I really like that because it's like that is",
    "start": "2122960",
    "end": "2128839"
  },
  {
    "text": "something that you can take to your non-technical stakeholders and show like every possible state of an application",
    "start": "2128839",
    "end": "2134800"
  },
  {
    "text": "or a component and then you have this this hardcoded uh diagram that then you",
    "start": "2134800",
    "end": "2139960"
  },
  {
    "text": "can code against to to actually produce the intended output and it will only ever be the intended output because you",
    "start": "2139960",
    "end": "2147000"
  },
  {
    "text": "can't be in any other non-defined state which is really cool exactly and it's interactive so it's like hardcoded but",
    "start": "2147000",
    "end": "2154040"
  },
  {
    "text": "it's like it's interactive there an interactive guy to it mhm which can all be run in memory like you don't even",
    "start": "2154040",
    "end": "2160480"
  },
  {
    "text": "need to be online you know the visualizer was also on my list of things to talk through because I I love it I",
    "start": "2160480",
    "end": "2165960"
  },
  {
    "text": "think it is a key for thinking about these things and as yall are talking about lets you bridge between things um",
    "start": "2165960",
    "end": "2171680"
  },
  {
    "text": "the thing I'm curious about is does it handle kind of multiactor multi-state",
    "start": "2171680",
    "end": "2176839"
  },
  {
    "text": "systems or these sort of higher level architectures with orchestrators and things that you were talking about is that something the visualizer can can",
    "start": "2176839",
    "end": "2182880"
  },
  {
    "text": "show for us yeah definitely um not the visualizer the xt. j.org SLV uh that's",
    "start": "2182880",
    "end": "2189240"
  },
  {
    "text": "actually an older version of the visualizer and we're working right now on making a brand new version but",
    "start": "2189240",
    "end": "2195040"
  },
  {
    "text": "there's also the xate inspector which works as a visualizer but not for code that you paste in but rather for code",
    "start": "2195040",
    "end": "2201240"
  },
  {
    "text": "that's actually running in your application and so what you do is you would hook it up to an application",
    "start": "2201240",
    "end": "2206280"
  },
  {
    "text": "that's using xstate and that might be a a actor with a machine which might be",
    "start": "2206280",
    "end": "2211880"
  },
  {
    "text": "spawning other actors and so uh there's a sequence panel where you could",
    "start": "2211880",
    "end": "2217000"
  },
  {
    "text": "actually see how those actors are sending messages and talking to each other and this is actually another",
    "start": "2217000",
    "end": "2222440"
  },
  {
    "text": "classic thing that you might have used before I'm pretty sure called sequence diagrams just like those you know line",
    "start": "2222440",
    "end": "2228960"
  },
  {
    "text": "diagrams where it's like all right this is going to here and that's going to there and by the way the little figures at the top those are called actors in a",
    "start": "2228960",
    "end": "2235560"
  },
  {
    "text": "sequence diagram too exact same thing and so those are really useful for communicating like how different systems",
    "start": "2235560",
    "end": "2242119"
  },
  {
    "text": "or different actors are talking to each other and what the potential scenarios are so the inspector can do that and",
    "start": "2242119",
    "end": "2249400"
  },
  {
    "text": "right now we're working on just like a completely revamped visualizer inspector that's just going to let you do",
    "start": "2249400",
    "end": "2255839"
  },
  {
    "text": "everything whether it's copy paste code in or you know inspect applications in",
    "start": "2255839",
    "end": "2261119"
  },
  {
    "text": "real time so X8 is like like framework agnostic right you can use this with any framework it's not it's similar to Redux",
    "start": "2261119",
    "end": "2268920"
  },
  {
    "text": "does it have a bunch of dependencies or is it like a zero dependency Library",
    "start": "2268920",
    "end": "2274520"
  },
  {
    "text": "zero right now there's zero and it's always going to be zero awesome don't quote me on that but I I'm really that's",
    "start": "2274520",
    "end": "2280440"
  },
  {
    "text": "a high level goal and uh like in terms of the S because obviously there's a bunch of developer tooling that's not",
    "start": "2280440",
    "end": "2286240"
  },
  {
    "text": "going to ship with your production source code but like out of what ships to production like how big are we talking of a footprint like hex is a",
    "start": "2286240",
    "end": "2293560"
  },
  {
    "text": "about the same size as mobx in that regard around between I think 15 and 17 kilobytes minified however in version 5",
    "start": "2293560",
    "end": "2301520"
  },
  {
    "text": "we're working on making it smaller and if you want to just use basic state machines and you're like I really want",
    "start": "2301520",
    "end": "2307680"
  },
  {
    "text": "to pull in all of xate for it even though it's only 15 kilobytes there's something called xate FSM which weighs",
    "start": "2307680",
    "end": "2313839"
  },
  {
    "text": "in at 1.5 kilobytes it's really really really tiny it's like xate light yeah",
    "start": "2313839",
    "end": "2319800"
  },
  {
    "text": "yeah it's a flatter version of xate so you're not going to get your you know nested States or any of the fancy like",
    "start": "2319800",
    "end": "2325240"
  },
  {
    "text": "history States or invocations or things like that but for a basic state machine where you're like okay we we could draw",
    "start": "2325240",
    "end": "2331079"
  },
  {
    "text": "this clearly as a flat State machine xstate FSM is going to be your best bet right so have you considered calling it",
    "start": "2331079",
    "end": "2338760"
  },
  {
    "text": "diet estado CU that would be a really good name I don't know what FSM is you're not letting go of this are youl",
    "start": "2338760",
    "end": "2345599"
  },
  {
    "text": "I'm just saying it's such a good name I mean you know I don't speak Spanish but like you could call it esto esto esto",
    "start": "2345599",
    "end": "2353440"
  },
  {
    "text": "there we go I think I still have the mpm name so you know what I I might do something with it just as an Easter egg",
    "start": "2353440",
    "end": "2359119"
  },
  {
    "text": "or something just publish copies of what's the latest M you know main branch",
    "start": "2359119",
    "end": "2364160"
  },
  {
    "text": "and onto there too so people can choose to use that back that won't get confusing at all no not not at all it's",
    "start": "2364160",
    "end": "2372200"
  },
  {
    "text": "like how react used to be called fajs and oh no way I didn't know that yeah yeah no no one really uses that anymore",
    "start": "2372200",
    "end": "2378359"
  },
  {
    "text": "it used to be called fax like like a fax machine yeah oh fax oh that's so weird",
    "start": "2378359",
    "end": "2383920"
  },
  {
    "text": "yeah yeah so in terms of like what xate offers like you know there's the visualizer there's obviously the core",
    "start": "2383920",
    "end": "2390720"
  },
  {
    "text": "source Library like what else is there oh there's a lot there's the visualizer the inspector the core Library",
    "start": "2390720",
    "end": "2397880"
  },
  {
    "text": "there is something called xate test which like I was talking about earlier it's a modelbased testing Library where",
    "start": "2397880",
    "end": "2404920"
  },
  {
    "text": "you give it a state machine describing your application and it will automatically generate like all the hundreds of different ways that someone",
    "start": "2404920",
    "end": "2411760"
  },
  {
    "text": "can interact with the application and then you just run that through just or add Puppeteer play right to that too and",
    "start": "2411760",
    "end": "2418240"
  },
  {
    "text": "it's going to basically write the test for you there's also what else do we",
    "start": "2418240",
    "end": "2423440"
  },
  {
    "text": "have xate immer if you want to use immer with xate x State FSM xate graph which",
    "start": "2423440",
    "end": "2429560"
  },
  {
    "text": "is just graph based utilities for xate that's really useful for like all of our visualization and graph drawing parts of",
    "start": "2429560",
    "end": "2435760"
  },
  {
    "text": "xstate and actually mapping out all the states we're thinking of some future packages too uh besides like the",
    "start": "2435760",
    "end": "2442079"
  },
  {
    "text": "adapters to react and View and spelt and all of that we're thinking about like a",
    "start": "2442079",
    "end": "2447240"
  },
  {
    "text": "xate router and an xate form so we're still planning those yeah it's going to",
    "start": "2447240",
    "end": "2452599"
  },
  {
    "text": "become a big ecosystem just deep Machining goodness as an example would State router be like a replacement for",
    "start": "2452599",
    "end": "2459599"
  },
  {
    "text": "like like a react router type uh component or would it work in tandem",
    "start": "2459599",
    "end": "2464680"
  },
  {
    "text": "with that it would probably work in tandm whereas with a react router it's like all right just Define your routes",
    "start": "2464680",
    "end": "2469920"
  },
  {
    "text": "as components and if you don't want a route showing then just don't render it on the screen xstate router is more like",
    "start": "2469920",
    "end": "2475560"
  },
  {
    "text": "give us all of your routes up front we're going to map it out for you so that you could either navigate directly",
    "start": "2475560",
    "end": "2480680"
  },
  {
    "text": "or if you click next then the state machine knows exactly where that next link is going to be instead of",
    "start": "2480680",
    "end": "2485760"
  },
  {
    "text": "hardcoding it into your application view layer oh my God that's like even just",
    "start": "2485760",
    "end": "2491400"
  },
  {
    "text": "like hearing that makes me feel good but yeah know I I think there's a lot of stuff around URL management source of",
    "start": "2491400",
    "end": "2498720"
  },
  {
    "text": "Truth for State kind of server meets client kind of transitions for SSR apps",
    "start": "2498720",
    "end": "2506400"
  },
  {
    "text": "like all that kind of stuff I want to get into and like middle World patterns that were popularized with Redux like",
    "start": "2506400",
    "end": "2511800"
  },
  {
    "text": "what's the kind of xate equivalent",
    "start": "2511800",
    "end": "2517480"
  },
  {
    "text": "[Music]",
    "start": "2517480",
    "end": "2522999"
  },
  {
    "text": "what's up party people this episode is brought to you by micro micro AKA m30 is",
    "start": "2523560",
    "end": "2529920"
  },
  {
    "text": "a new Cloud platform built for developers by developers our good friend Asam Asam is leading this and if you're",
    "start": "2529920",
    "end": "2536079"
  },
  {
    "text": "tired of AWS and feeling overwhelmed by the cloud infinite billing and an Endless Sea of docks it is time for a",
    "start": "2536079",
    "end": "2542079"
  },
  {
    "text": "change the micro team is reimagining the cloud for the next generation m30 is a",
    "start": "2542079",
    "end": "2547319"
  },
  {
    "text": "new developer friendly platform to explore search and use simpler apis for everyday consumption all in one place",
    "start": "2547319",
    "end": "2554800"
  },
  {
    "text": "get access to the apis you need in one click and test them right there on the web before using them simple fast and",
    "start": "2554800",
    "end": "2561200"
  },
  {
    "text": "affordable you won't get burned by bottomless billing you top up your account and pay as you go and right now",
    "start": "2561200",
    "end": "2566880"
  },
  {
    "text": "they're in early development and building up the first set of apis and they're looking for feedback from developers sign up and get $5 in free",
    "start": "2566880",
    "end": "2573640"
  },
  {
    "text": "credits kick the tires give them your input so they can build the best AP you want to use every single day learn more",
    "start": "2573640",
    "end": "2579800"
  },
  {
    "text": "at m3.com again m3.com [Music]",
    "start": "2579800",
    "end": "2595359"
  },
  {
    "text": "let's bring us back and talk a little bit more about what we were just leaving off on around State machine driven",
    "start": "2597800",
    "end": "2605040"
  },
  {
    "text": "routing and the piece of this that I want to kind of dive into is one of the",
    "start": "2605040",
    "end": "2611480"
  },
  {
    "text": "ageold pendulums in software development generally and that we've seen in the front end is between imperative and",
    "start": "2611480",
    "end": "2617200"
  },
  {
    "text": "declarative approaches to programming and I think we see this in our front-end Frameworks react is very imperative even",
    "start": "2617200",
    "end": "2624160"
  },
  {
    "text": "though it enables a more declarative view of components view is actually a much more declarative model for",
    "start": "2624160",
    "end": "2630920"
  },
  {
    "text": "programming and mental model but I think when it comes to stuff like routing and",
    "start": "2630920",
    "end": "2636559"
  },
  {
    "text": "application State one of the the nice things that you can get with a state machine approach is it it feels once",
    "start": "2636559",
    "end": "2641720"
  },
  {
    "text": "again very declarative something where you can say these are the ways that the world should be go and make it happen",
    "start": "2641720",
    "end": "2647680"
  },
  {
    "text": "and I'm curious is that something that you're seeing people use xate to do how do you think about that how much of that",
    "start": "2647680",
    "end": "2654800"
  },
  {
    "text": "kind of mapping from here's the Declaration to what does the app need to do does xate do for you versus you have",
    "start": "2654800",
    "end": "2660520"
  },
  {
    "text": "to implement so yeah people have been experimenting with using xate and routing and there's a a handful of",
    "start": "2660520",
    "end": "2667440"
  },
  {
    "text": "libraries just sort of playing around with this idea and it is something that we need to think about more just because",
    "start": "2667440",
    "end": "2673440"
  },
  {
    "text": "there's something that seems to go against what a state machine is which is the fact that I can navigate to any",
    "start": "2673440",
    "end": "2679800"
  },
  {
    "text": "routes I want just by changing it in the address bar so it's not exactly an event it's more like hey just teleport me",
    "start": "2679800",
    "end": "2685599"
  },
  {
    "text": "directly to this state it's not really super against what a state machine is it's more like there's these implicit",
    "start": "2685599",
    "end": "2691559"
  },
  {
    "text": "transitions where you could just transition to any state at any time but those still need to be made explicit you",
    "start": "2691559",
    "end": "2697559"
  },
  {
    "text": "should know like what are all the routes you could go to and also uh as state machines are you know very founded on",
    "start": "2697559",
    "end": "2703800"
  },
  {
    "text": "like just having your application logic be safe there has to be some safeguards for like if I go to slash admin it's",
    "start": "2703800",
    "end": "2711000"
  },
  {
    "text": "going to check am I logged in otherwise it needs to boot me to a login screen",
    "start": "2711000",
    "end": "2716640"
  },
  {
    "text": "well all right ideally I should be logged in and an admin I can just be logged in and do all sorts of crazy stuff but yeah some of the earliest",
    "start": "2716640",
    "end": "2723720"
  },
  {
    "text": "examples I've actually seen of using State charts uh was actually before I even started programming it was with",
    "start": "2723720",
    "end": "2730359"
  },
  {
    "text": "Ember or when Ember used to be called Sprouts core Sprout core used State charts a lot and so this was like again",
    "start": "2730359",
    "end": "2737359"
  },
  {
    "text": "before I even touched well I I touched computers before then but before I like was really hardcore into programming and",
    "start": "2737359",
    "end": "2744160"
  },
  {
    "text": "it was really interesting there there's actually this experiments uh with Ember and routing and using State charts for",
    "start": "2744160",
    "end": "2750079"
  },
  {
    "text": "routing and it actually has some pretty cool state chart diagrams and that dates back to",
    "start": "2750079",
    "end": "2755480"
  },
  {
    "text": "2013 I believe so um yeah this problem has been thought about a lot before when Ember was a big",
    "start": "2755480",
    "end": "2763559"
  },
  {
    "text": "advocate of what you were talking about ML on the break of everything stateful",
    "start": "2763559",
    "end": "2768680"
  },
  {
    "text": "about your UI being driven by your URL and your url representing your state",
    "start": "2768680",
    "end": "2774200"
  },
  {
    "text": "yeah I'm convinced that like Ember developer like the core team they're",
    "start": "2774200",
    "end": "2779400"
  },
  {
    "text": "like the game developers of the JavaScript Community cuz like you know how there's that like that saying that like hey everything you've thought of",
    "start": "2779400",
    "end": "2786359"
  },
  {
    "text": "like as your big new idea like game developers invented 10 years ago like I feel like Ember they they just so many",
    "start": "2786359",
    "end": "2792960"
  },
  {
    "text": "things that like they did right Dojo already did that yeah yeah yeah yeah do Dojo too right but like but the point is",
    "start": "2792960",
    "end": "2798640"
  },
  {
    "text": "it's it's just amazing to see how certain patterns were in the Zeitgeist",
    "start": "2798640",
    "end": "2804319"
  },
  {
    "text": "very early on but they just didn't get the traction until people like burn their hand in the pot and then like",
    "start": "2804319",
    "end": "2811400"
  },
  {
    "text": "learn the hard way you know and that's the thing sometimes people just don't like you can preach all you want but",
    "start": "2811400",
    "end": "2816880"
  },
  {
    "text": "until they get burned and or see the merits for themselves with increased velocity reduction of bugs you know",
    "start": "2816880",
    "end": "2824079"
  },
  {
    "text": "better predictability like faster onboarding right so this isn't just actually about how your users experience",
    "start": "2824079",
    "end": "2832599"
  },
  {
    "text": "your application because quite frankly it's like an invisible thing for your users right but you know it's it's really kind of a tool for how we do our",
    "start": "2832599",
    "end": "2840040"
  },
  {
    "text": "internal data and you know code management so communication is a big",
    "start": "2840040",
    "end": "2845240"
  },
  {
    "text": "part of that I think you know both for on boarding as well as just external stakeholders that are non-technical it's",
    "start": "2845240",
    "end": "2851280"
  },
  {
    "text": "funny I wanted to mention even with game developers you talk to them about State machines you're like yeah I've been using them we've been using them for",
    "start": "2851280",
    "end": "2857599"
  },
  {
    "text": "decades like why do you think it's a new thing it's not right yeah they're like",
    "start": "2857599",
    "end": "2862960"
  },
  {
    "text": "oh we have something it's called estado just kidding just kidding just kidding just kidding I'm GNA stop trying to make",
    "start": "2862960",
    "end": "2869319"
  },
  {
    "text": "estado happen I'm like this is like my fetch you know I keep trying to make fetch happen bone skull uh one of our",
    "start": "2869319",
    "end": "2876880"
  },
  {
    "text": "regular panelist was commenting in the chat about this he's like why are there so many state libraries and ceremony",
    "start": "2876880",
    "end": "2883599"
  },
  {
    "text": "around State libraries in the front end in JavaScript world like this is a solved problem the solution is State machines this has existed for a long",
    "start": "2883599",
    "end": "2890760"
  },
  {
    "text": "long time I'm actually kind of curious David as you've been kind of marketing",
    "start": "2890760",
    "end": "2895960"
  },
  {
    "text": "xstate bringing this to the world do you have any insight into why the frontend",
    "start": "2895960",
    "end": "2902079"
  },
  {
    "text": "world in particular has been so slow to adopt State machines and and be interested in this yeah and trust me",
    "start": "2902079",
    "end": "2908839"
  },
  {
    "text": "it's been an uphill battle because first of all we don't like being told that the way that we're doing things is like not",
    "start": "2908839",
    "end": "2914760"
  },
  {
    "text": "the best way to do them you could have just stopped right there where you're like we don't like being told anything",
    "start": "2914760",
    "end": "2920960"
  },
  {
    "text": "yeah right yeah it's amazing we even have people listening to this podcast quite person so yeah yeah no there",
    "start": "2920960",
    "end": "2927400"
  },
  {
    "text": "there's people who are like no you're being a thought leader you're trying to introduce something new you know Etc and",
    "start": "2927400",
    "end": "2933200"
  },
  {
    "text": "what I'm doing works and is just fine and so I'm over trying to say like first of all what we're doing is just a pale",
    "start": "2933200",
    "end": "2940799"
  },
  {
    "text": "imitation of what we should be doing which is you know modeling these things as state machines or at least some sort",
    "start": "2940799",
    "end": "2945920"
  },
  {
    "text": "of events driven architecture rather than trying to manipulate State directly and Noti I didn't say mutate State",
    "start": "2945920",
    "end": "2952040"
  },
  {
    "text": "directly because all of these State Management libraries are like okay we're technically not allowed to like",
    "start": "2952040",
    "end": "2957599"
  },
  {
    "text": "imperatively mutate States so we're just going to give developers a really easy way to manipulate States but it's still",
    "start": "2957599",
    "end": "2964760"
  },
  {
    "text": "sort of the same problem like all right now you you avoid the problem of having shared data access but you're",
    "start": "2964760",
    "end": "2970960"
  },
  {
    "text": "introducing a new problem of like you don't know when things are going to change just because they could change from anywhere and that's a huge problem",
    "start": "2970960",
    "end": "2978760"
  },
  {
    "text": "but yeah actually takes the approach of you know something that's been around for you know just many many decades and",
    "start": "2978760",
    "end": "2985079"
  },
  {
    "text": "also we we were talking in the break about like how uh someone was like why do we even need State machines anyway",
    "start": "2985079",
    "end": "2991240"
  },
  {
    "text": "the way I'm doing things works just fine so I'm sort of rallying against that works just fine because that's only half",
    "start": "2991240",
    "end": "2998480"
  },
  {
    "text": "the battle like we don't code just to make something work we code to make it",
    "start": "2998480",
    "end": "3004160"
  },
  {
    "text": "work to prevent it from not working and to also communicate to the rest of our team and ideally even to users and",
    "start": "3004160",
    "end": "3010559"
  },
  {
    "text": "designers and other people how the app is supposed to work so I could code something in assembly actually I can't",
    "start": "3010559",
    "end": "3017440"
  },
  {
    "text": "tell on no assembly but I could code something in C where it's like okay I made this complex thing it works don't",
    "start": "3017440",
    "end": "3023920"
  },
  {
    "text": "touch it but no one else will understand and I feel like my job is incomplete if",
    "start": "3023920",
    "end": "3029400"
  },
  {
    "text": "the code I write is not understandable by others amen can we just take a moment",
    "start": "3029400",
    "end": "3034960"
  },
  {
    "text": "of silence just preach on brother seriously that I couldn't agree more",
    "start": "3034960",
    "end": "3040520"
  },
  {
    "text": "honestly like the other really big thing is that you know when you read code",
    "start": "3040520",
    "end": "3045960"
  },
  {
    "text": "sometimes and you're like oh my God like what's up with the paranoia level in this code like all these shields from",
    "start": "3045960",
    "end": "3052680"
  },
  {
    "text": "all these angles it's like is this like some function that's used in every file in every method like why are you being",
    "start": "3052680",
    "end": "3059599"
  },
  {
    "text": "so like shielded like you can kind of reduce that paranoia level as well in your code and for me more",
    "start": "3059599",
    "end": "3067119"
  },
  {
    "text": "importantly this enables you to optimize your code to be easily changed and",
    "start": "3067119",
    "end": "3073040"
  },
  {
    "text": "extensible right and like we don't talk about that enough I've been on this kick lately where I'm like optimize for",
    "start": "3073040",
    "end": "3079319"
  },
  {
    "text": "change everybody you know I've like said that like literally 100 times this week because if we're you know we have to",
    "start": "3079319",
    "end": "3085000"
  },
  {
    "text": "optimize our code for change like if think that our code is not going to change or that this thing should stay",
    "start": "3085000",
    "end": "3090440"
  },
  {
    "text": "the way it is like uh you are not living in a reality that is like real world you",
    "start": "3090440",
    "end": "3095599"
  },
  {
    "text": "know application development right code is living breathing cruft you name it",
    "start": "3095599",
    "end": "3101119"
  },
  {
    "text": "like people you know come and go and you know libraries die things need to kind",
    "start": "3101119",
    "end": "3106520"
  },
  {
    "text": "of move on uh and you have to be able to um kind of weather that change and",
    "start": "3106520",
    "end": "3112960"
  },
  {
    "text": "support easy pivots right especially if you're a startup or a small company that's still like trying to validate your product",
    "start": "3112960",
    "end": "3118319"
  },
  {
    "text": "Market fit you know right it's just huge uh for kind of I think bringing that ease of communication and determinism",
    "start": "3118319",
    "end": "3125920"
  },
  {
    "text": "into your applications like yeah and that's the point I want our lap lap app",
    "start": "3125920",
    "end": "3131119"
  },
  {
    "text": "logic that we writes I want that to be a communication mechanism like something where we could create that visual",
    "start": "3131119",
    "end": "3136359"
  },
  {
    "text": "artifact and share with other people like hey this is how it works and then if they're like well like you were",
    "start": "3136359",
    "end": "3142079"
  },
  {
    "text": "talking about this is going to change or I need to add this feature we could know know exactly where the app is going to",
    "start": "3142079",
    "end": "3148799"
  },
  {
    "text": "be affected whereas if you just do things the normal way we've been coding for many years it's like okay this is",
    "start": "3148799",
    "end": "3155599"
  },
  {
    "text": "another Boolean that's going to go in a dozen of our if statements somewhere and we're going to have to check it all and",
    "start": "3155599",
    "end": "3161799"
  },
  {
    "text": "let's hope we have tests but there's a really good chance that we don't have tests to capture this Behavior I think",
    "start": "3161799",
    "end": "3167240"
  },
  {
    "text": "there is a a level of to which like this is another thing to have in your mind another learning curve to climb and part",
    "start": "3167240",
    "end": "3174720"
  },
  {
    "text": "of the the challenge here is we're still navigating this transition mentally from",
    "start": "3174720",
    "end": "3180640"
  },
  {
    "text": "Front Ends being simple to front ends being where most much of the complexity of our applications lands and that",
    "start": "3180640",
    "end": "3187079"
  },
  {
    "text": "transition is playing out in many many different domains but I think even within an application right like to your",
    "start": "3187079",
    "end": "3193440"
  },
  {
    "text": "point managing one Boolean is not very hard is not very much mental overhead and is if that's all it's ever going to",
    "start": "3193440",
    "end": "3199799"
  },
  {
    "text": "be probably simpler than incorporating a state machine Library yeah so a question",
    "start": "3199799",
    "end": "3205640"
  },
  {
    "text": "I'd have for you is do you have a rule of thumb or of kind of what level of complexity what number of different",
    "start": "3205640",
    "end": "3211920"
  },
  {
    "text": "factors or states does it start to become worthwhile from a mental overhead standpoint to incorporate a state",
    "start": "3211920",
    "end": "3217960"
  },
  {
    "text": "machine so there's no hard and fast rule if there was I would say like as soon as",
    "start": "3217960",
    "end": "3223839"
  },
  {
    "text": "you're getting to three booleans or more then you know maybe consider how the different behaviors of your app can",
    "start": "3223839",
    "end": "3230960"
  },
  {
    "text": "change and you know just what they are I always say like you don't need a state machine if your app isn't complex I also",
    "start": "3230960",
    "end": "3238720"
  },
  {
    "text": "say that your app will never stay complex unless you're doing some sort of toy project that you forgot about or",
    "start": "3238720",
    "end": "3245359"
  },
  {
    "text": "just a simple app like I don't know even I was thinking of like the yo app where you just like press yo to your friends",
    "start": "3245359",
    "end": "3251599"
  },
  {
    "text": "like even that has enough complexity that merits a state machine but yeah we're not writing simple apps we're not",
    "start": "3251599",
    "end": "3257400"
  },
  {
    "text": "paid to write simple apps we're paid to write apps that are eventually going to grow in complexity and features and edge",
    "start": "3257400",
    "end": "3264799"
  },
  {
    "text": "cases and we need some sort of scalable way of managing that we kind of said this a little bit quickly but like so",
    "start": "3264799",
    "end": "3271920"
  },
  {
    "text": "I'm a fan of you know your source of Truth and your application being in your url your applications should always be",
    "start": "3271920",
    "end": "3278559"
  },
  {
    "text": "able to rehydrate from a URL refresh you know somebody refreshes their screen or",
    "start": "3278559",
    "end": "3283640"
  },
  {
    "text": "they're in a Wi-Fi situation you know like they should be able to refresh and like stuff shouldn't break you know you",
    "start": "3283640",
    "end": "3289920"
  },
  {
    "text": "know I'd like to kind of understand how xate makes that reality easy and you",
    "start": "3289920",
    "end": "3295440"
  },
  {
    "text": "know the whole kind of like rehydration States and you know also in particular",
    "start": "3295440",
    "end": "3300640"
  },
  {
    "text": "when working with clients and local storage you know if there are tools or utils or kind of patterns around like",
    "start": "3300640",
    "end": "3308280"
  },
  {
    "text": "rehydration of your application State and this might tie in a little bit to what I was going to ask too so I'll just",
    "start": "3308280",
    "end": "3314040"
  },
  {
    "text": "kind of throw it out there as well maybe I'm not fully seeing like how it's implemented or how how it's like",
    "start": "3314040",
    "end": "3319119"
  },
  {
    "text": "implemented in in practice and like if I were going to try and Implement a state machine in my existing app that has a",
    "start": "3319119",
    "end": "3326000"
  },
  {
    "text": "lot of already kind of managed state with a bunch of different things like you know maybe a lot of stuff in context",
    "start": "3326000",
    "end": "3332640"
  },
  {
    "text": "and providers and is xate like a way to manage that component state that might",
    "start": "3332640",
    "end": "3339119"
  },
  {
    "text": "exist out there or like some other Global state or is it more it should take the rein from that yeah that's two",
    "start": "3339119",
    "end": "3346039"
  },
  {
    "text": "really good questions so I'll talk about the um persistence one first xate does have a way to basically take whatever",
    "start": "3346039",
    "end": "3352799"
  },
  {
    "text": "state your state machine is in including any extra data which ites doesn't really fall into the finite State category you",
    "start": "3352799",
    "end": "3358799"
  },
  {
    "text": "could persist that and then you could restore the same machine at that given state so in a way it sort of acts like",
    "start": "3358799",
    "end": "3365520"
  },
  {
    "text": "you know any other state management Library where you could do that and this is a hard problem to solve but we're working on a way of also persisting",
    "start": "3365520",
    "end": "3372119"
  },
  {
    "text": "actors so if your state machine is in a state where there's other child actors who also might have other child actors",
    "start": "3372119",
    "end": "3379359"
  },
  {
    "text": "then pretty soon you'll be able to persist those as well and restore those actors to those St or at least try like",
    "start": "3379359",
    "end": "3385920"
  },
  {
    "text": "for examp example if you have a promise request or something then chances are you're going to need to rerun that",
    "start": "3385920",
    "end": "3391200"
  },
  {
    "text": "promise request when you reload the page yeah but you know what this kind of brings me to my next thing which is kind",
    "start": "3391200",
    "end": "3396640"
  },
  {
    "text": "of actually middleware patterns because you know I could very easily see there being a middleware that was activated",
    "start": "3396640",
    "end": "3404440"
  },
  {
    "text": "anytime there's a promise and it knows how to handle a cancellation state or like a failed state or you know so",
    "start": "3404440",
    "end": "3411119"
  },
  {
    "text": "you're not like repeating a bunch of code everywhere in all these different actors and so you know CU Redux kind of",
    "start": "3411119",
    "end": "3418319"
  },
  {
    "text": "popularized the middleware model right so did Express you know if we're like really go back a little bit further but",
    "start": "3418319",
    "end": "3424760"
  },
  {
    "text": "you know it just kind of was like here's a bunch of things that'll run every time there's a state update it may or may not",
    "start": "3424760",
    "end": "3430760"
  },
  {
    "text": "trigger some business logic that's in your middleware for example like if there's an error like log to Sentry",
    "start": "3430760",
    "end": "3436359"
  },
  {
    "text": "right that's one thing you put in your middleware if you want to normalize some data if you want to yeah so you might be",
    "start": "3436359",
    "end": "3442520"
  },
  {
    "text": "either happy or sad to know that there is no such thing as middleware in xstate and there never will be and that's",
    "start": "3442520",
    "end": "3449039"
  },
  {
    "text": "because xate has this abstraction of state and events and that's pretty much it and well also actors which",
    "start": "3449039",
    "end": "3455359"
  },
  {
    "text": "encapsulate those States and events and so everything works through that so if you want to add analytics to something",
    "start": "3455359",
    "end": "3461839"
  },
  {
    "text": "then your state machine it has a subscribe method just like you know anything in rxjs and you you could do",
    "start": "3461839",
    "end": "3468640"
  },
  {
    "text": "whatever you want with those State updates so you could send it to some analytics or some logging Service uh and",
    "start": "3468640",
    "end": "3474480"
  },
  {
    "text": "do things that way now Redux and libraries like it they need middleware to handle side effects and that's",
    "start": "3474480",
    "end": "3480960"
  },
  {
    "text": "because they are completely hands-off with side effects xate on the other hand says no side effects which xate calls",
    "start": "3480960",
    "end": "3488599"
  },
  {
    "text": "actions are extremely important like your your app will not work without side effects so we need some declarative way",
    "start": "3488599",
    "end": "3495319"
  },
  {
    "text": "of managing side effects and so that's exactly what X8 provides and so it does so in terms of spawning or invoking",
    "start": "3495319",
    "end": "3502280"
  },
  {
    "text": "actors or even just performing oneoff actions so yeah it has that built-in",
    "start": "3502280",
    "end": "3507680"
  },
  {
    "text": "notion so instead of requiring middleware for that that's just part of like just the notion of actions and",
    "start": "3507680",
    "end": "3513240"
  },
  {
    "text": "services which you can provide externally too and so yeah well I guess my thing is how do you avoid duplicating",
    "start": "3513240",
    "end": "3520960"
  },
  {
    "text": "subscribes or events everywhere right like if I want something to happen every time a data fetch is triggered how do I",
    "start": "3520960",
    "end": "3528640"
  },
  {
    "text": "avoid needing to update like all of these different state machines in my app you know what I mean like is there a way",
    "start": "3528640",
    "end": "3534760"
  },
  {
    "text": "to centralize that is there like a hook for before all or after all or before",
    "start": "3534760",
    "end": "3540240"
  },
  {
    "text": "age I mean yeah there's different patterns and this gets sort of more into advanced sex state but you could have",
    "start": "3540240",
    "end": "3545760"
  },
  {
    "text": "like parallel States and um you could also have actions that happen on every",
    "start": "3545760",
    "end": "3550960"
  },
  {
    "text": "event and things like that but the easiest way to get started with that is just you know calling do subscribe and",
    "start": "3550960",
    "end": "3556880"
  },
  {
    "text": "handling State changes uh that way okay wow very cool does xstate work with",
    "start": "3556880",
    "end": "3563760"
  },
  {
    "text": "suspense in react oh my God can we not talk about suspense that is a broken API",
    "start": "3563760",
    "end": "3569640"
  },
  {
    "text": "does anything work with suspense that's a better question I suppose yeah suspenseful and concurrent mode that",
    "start": "3569640",
    "end": "3576079"
  },
  {
    "text": "that was a um something tricky that we were trying to figure out for bad idea I I won't say it out loud but yeah",
    "start": "3576079",
    "end": "3583599"
  },
  {
    "text": "and that that's why I'm really glad that concurrent mode sort of just didn't become a whole mode and it became like",
    "start": "3583599",
    "end": "3589799"
  },
  {
    "text": "you know more isolated things but xate does not work with suspense yet by",
    "start": "3589799",
    "end": "3595520"
  },
  {
    "text": "working with suspense uh we mean like just having these built-in things where it could actually throw promises and say",
    "start": "3595520",
    "end": "3601599"
  },
  {
    "text": "hey I'm in some sort of pending State I think that that's a good idea at least to support so we're going to just",
    "start": "3601599",
    "end": "3607359"
  },
  {
    "text": "experiment with that definitely not priority and so going back to your earlier question Nick about like how it",
    "start": "3607359",
    "end": "3612799"
  },
  {
    "text": "integrates with like existing code in other libraries you could use xate like",
    "start": "3612799",
    "end": "3617920"
  },
  {
    "text": "either at the smallest level or at some Global orchestration level it doesn't need to encapsulate or like just take",
    "start": "3617920",
    "end": "3625480"
  },
  {
    "text": "over your entire application States you could definitely do it incrementally and that's a good way of using X dat as well",
    "start": "3625480",
    "end": "3633280"
  },
  {
    "text": "yeah that's actually a good point because that that actually helps with incremental kind of adoption and refactoring refactoring in place you",
    "start": "3633280",
    "end": "3639640"
  },
  {
    "text": "know yeah some of you some of you slowly refactoring your views and components to slowly be managed by xate that's pretty",
    "start": "3639640",
    "end": "3645599"
  },
  {
    "text": "cool so as we're kind of winding down here you know how can folks contribute to the project sounds like you know you",
    "start": "3645599",
    "end": "3652520"
  },
  {
    "text": "definitely have a road mapap you've got an active kind of healthy project and so",
    "start": "3652520",
    "end": "3658599"
  },
  {
    "text": "how can folks contribute and get in touch with you sure we're we're always accepting um you know pull requests",
    "start": "3658599",
    "end": "3664880"
  },
  {
    "text": "especially for documentation and we actually have a new I mean I should have done this years ago but we have an",
    "start": "3664880",
    "end": "3670400"
  },
  {
    "text": "examples directory on the page where we're just filling it up with um as many useful examples as we can like recipes",
    "start": "3670400",
    "end": "3677960"
  },
  {
    "text": "yeah yeah so the recipes are also in the documentation as well like how to use this with view or angular Etc yeah so",
    "start": "3677960",
    "end": "3686160"
  },
  {
    "text": "that and also participating in the discussion forum so if you go to",
    "start": "3686160",
    "end": "3691720"
  },
  {
    "text": "discord.gg exate there's just a whole lot of really helpful people in there",
    "start": "3691720",
    "end": "3696880"
  },
  {
    "text": "either sharing crazy ideas or offering help at all hours of the day and I know",
    "start": "3696880",
    "end": "3702039"
  },
  {
    "text": "because I'm one of those people offering help at all hours of the day over there so yeah just participating and trying it",
    "start": "3702039",
    "end": "3708640"
  },
  {
    "text": "out on your projects that's so awesome and where is xap being used right now",
    "start": "3708640",
    "end": "3713760"
  },
  {
    "text": "cuz I remember you know this goes back to my conversation with Alec I have a very healthy skepticism for new",
    "start": "3713760",
    "end": "3720279"
  },
  {
    "text": "technologies and especially when to adopt them at a large corporation",
    "start": "3720279",
    "end": "3725599"
  },
  {
    "text": "because I have to if I'm going to push a tool then I have to take on the maintenance burden of making sure everybody's aligned and trained and",
    "start": "3725599",
    "end": "3732200"
  },
  {
    "text": "everything is updated and standardized so it's you know it's not an easy thing um or something I take lightly and I",
    "start": "3732200",
    "end": "3738279"
  },
  {
    "text": "remember because I hadn't heard about xate when Alec Lavoy introduced it to me um I was really like I don't know where",
    "start": "3738279",
    "end": "3745000"
  },
  {
    "text": "is this being used you know like especially like I don't know if this is like javascript's new hot thing you know",
    "start": "3745000",
    "end": "3750279"
  },
  {
    "text": "what I mean so yeah can you give us kind of a sense of like what that adoption curve has been like for you yeah sure so",
    "start": "3750279",
    "end": "3756559"
  },
  {
    "text": "um I actually asked this question on Twitter a few months ago and uh I was surprised to learned that there's a lot",
    "start": "3756559",
    "end": "3762920"
  },
  {
    "text": "of companies using xate in production notably I mean Microsoft even I didn't",
    "start": "3762920",
    "end": "3768279"
  },
  {
    "text": "work in any projects at Microsoft that use xate it's just like Microsoft's a huge company so they've used xate in",
    "start": "3768279",
    "end": "3774319"
  },
  {
    "text": "various projects uh in including uh one of their education tools and also the Microsoft to-do app Netflix is using it",
    "start": "3774319",
    "end": "3781039"
  },
  {
    "text": "Lego um Amazon is using it in their AWS amplify service to handle authentication",
    "start": "3781039",
    "end": "3787960"
  },
  {
    "text": "so you could say that X dat is being indirectly used by just hundreds of thousands of developers you know that",
    "start": "3787960",
    "end": "3794440"
  },
  {
    "text": "way it's part of Gatsby as well honestly there's yeah there's a lot of places",
    "start": "3794440",
    "end": "3800079"
  },
  {
    "text": "that's being used I can't think of a project that isn't in Gatsby Gatsby is like the kitchen sink of like framewor",
    "start": "3800079",
    "end": "3806400"
  },
  {
    "text": "it's either Gatsby or or nextjs so yeah so cool well thank you so much for your",
    "start": "3806400",
    "end": "3812839"
  },
  {
    "text": "time David it's been absolute pleasure and yeah I'm excited to try this in production you know please do it's on my",
    "start": "3812839",
    "end": "3819400"
  },
  {
    "text": "recommendation list for the UI architecture at go likewise yeah all right awesome and pretty soon I'm going",
    "start": "3819400",
    "end": "3825680"
  },
  {
    "text": "to write a like getting started with XD in three minutes article so zero",
    "start": "3825680",
    "end": "3830880"
  },
  {
    "text": "excuses nice cool let us know we'll retweet it all right well thank you so",
    "start": "3830880",
    "end": "3836440"
  },
  {
    "text": "much for coming on thanks kall and AML for joining and uh we will see you next week bye",
    "start": "3836440",
    "end": "3842320"
  },
  {
    "text": "[Music] kids frontend Feud returns next week we",
    "start": "3842320",
    "end": "3848960"
  },
  {
    "text": "have Amelia teaming up with shop talks Chris coer and Dave rert to battle it out with Divia West boss and Scott",
    "start": "3848960",
    "end": "3856520"
  },
  {
    "text": "tulinsky from syntax I won't spoil the ending but I will tell you it all comes",
    "start": "3856520",
    "end": "3861760"
  },
  {
    "text": "down to the final round of play subscribe now so you don't miss it at JSP party. FM or in your favorite",
    "start": "3861760",
    "end": "3867920"
  },
  {
    "text": "podcast app you'll find us JS party is produced by Jared Santo that's me with",
    "start": "3867920",
    "end": "3873440"
  },
  {
    "text": "music by break master cylinder that's not me we are brought to you by our awesome Partners shout out to fley laun",
    "start": "3873440",
    "end": "3880359"
  },
  {
    "text": "starkley and lenoe that's JS party for this week we'll talk to you again next",
    "start": "3880359",
    "end": "3885830"
  },
  {
    "text": "[Music]",
    "start": "3885830",
    "end": "3891050"
  },
  {
    "text": "time [Music]",
    "start": "3894640",
    "end": "3908480"
  },
  {
    "text": "listen listen listen X gone state it to you wait for",
    "start": "3908480",
    "end": "3914839"
  },
  {
    "text": "you to State it on your own X gone deliver it to you knock knock open up the door it's real with the non-stop pop",
    "start": "3914839",
    "end": "3921400"
  },
  {
    "text": "pop and stainless steel",
    "start": "3921400",
    "end": "3927640"
  },
  {
    "text": "love",
    "start": "3929039",
    "end": "3932039"
  }
]