[
  {
    "text": "BWI for change log is provided by fastly learn more at fastly.com we move fast",
    "start": "40",
    "end": "5799"
  },
  {
    "text": "and fix things here at Chang log because of robbar check them out at rar.com and we're hosted on Leno Cloud servers head",
    "start": "5799",
    "end": "12759"
  },
  {
    "text": "to lin.com changelog this episode is brought to you by robbar move fast and fix things",
    "start": "12759",
    "end": "20480"
  },
  {
    "text": "resolve errors of minutes and deploy with confidence head to rar.com change love requested demo get started today",
    "start": "20480",
    "end": "27760"
  },
  {
    "text": "it's loved by developers trusted by Enterprise and most of all we use it here at change",
    "start": "27760",
    "end": "32800"
  },
  {
    "text": "log move fast and fix things with rollbar once again rar.com",
    "start": "32800",
    "end": "39370"
  },
  {
    "text": "[Music]",
    "start": "39370",
    "end": "42449"
  },
  {
    "text": "changelog welcome to JS party a community celebration of JavaScript and the web tune in live on Thursdays at 1:",
    "start": "46520",
    "end": "53760"
  },
  {
    "text": "p.m Eastern 10: a.m. Pacific at Chang log.com slive join the community and",
    "start": "53760",
    "end": "58800"
  },
  {
    "text": "slack with us during the show at change.com community and follow us on Twitter we are at JSP party FM all right",
    "start": "58800",
    "end": "66240"
  },
  {
    "text": "let's do [Applause] this all right the sound of those beats",
    "start": "66240",
    "end": "73400"
  },
  {
    "text": "means it's your favorite and my favorite party time it is JS party time this week",
    "start": "73400",
    "end": "78600"
  },
  {
    "text": "hi there I'm kall I'll be your MC today and I am joined by three amazing panelists uh first Divia sadar Divia how",
    "start": "78600",
    "end": "86439"
  },
  {
    "text": "you doing hello hello pretty good we also have two elusive panelists Michael",
    "start": "86439",
    "end": "93880"
  },
  {
    "text": "Rogers hey and faras auka DJ how's it going kall I am so excited to have this",
    "start": "93880",
    "end": "101280"
  },
  {
    "text": "I think the last time we managed to do an episode with both Michael and FAS on the same show I was just sitting there",
    "start": "101280",
    "end": "106560"
  },
  {
    "text": "with my mouth open absorbing things the whole time um and divy is going to add even more our topic for today we're",
    "start": "106560",
    "end": "113960"
  },
  {
    "text": "going to talk about refactoring large projects which is something that I've been doing a lot of this last month or",
    "start": "113960",
    "end": "121759"
  },
  {
    "text": "two I joined a new company and got immediately thrust into hey here's this long-standing refactor that needs to get",
    "start": "121759",
    "end": "128479"
  },
  {
    "text": "done you have fresh eyes why don't you tackle it but I want to really lean on the panelists here to get a lot of",
    "start": "128479",
    "end": "134400"
  },
  {
    "text": "knowledge so let's start with the first piece of the process of even decision-making looking at our panelist",
    "start": "134400",
    "end": "141400"
  },
  {
    "text": "Michael FAS or Divia any of you chime in how do you decide when is it time to do a big refactor you know should you do it",
    "start": "141400",
    "end": "148599"
  },
  {
    "text": "when should you do it what code deserves to be refactored for me it's when I have",
    "start": "148599",
    "end": "153720"
  },
  {
    "text": "to there's no other option sometimes you you just realize like okay it's going to be easier to rewrite this than it will",
    "start": "153720",
    "end": "161560"
  },
  {
    "text": "be to use it in some other way that it wasn't actually designed for yeah I often find that refactoring is done like",
    "start": "161560",
    "end": "170080"
  },
  {
    "text": "it's kind of the thing that people don't look forward to unless it's refactoring it to a specific concept or technology",
    "start": "170080",
    "end": "177599"
  },
  {
    "text": "that you're really excited about but often times when you're you're refactoring like large projects or Legacy projects it tends to be something",
    "start": "177599",
    "end": "183599"
  },
  {
    "text": "that you'll you'll like push down to someone else hopefully like you do it",
    "start": "183599",
    "end": "189239"
  },
  {
    "text": "yeah that's generally the reaction I often see I've done it too so I'm guilty",
    "start": "189239",
    "end": "194920"
  },
  {
    "text": "that's funny cuz I feel like a lot of times devs have a reputation for over",
    "start": "194920",
    "end": "200159"
  },
  {
    "text": "wanting to refactor oh this code isn't perfect I'm going to refactor it this code isn't perfect I'm going to refactor it I think Young devs do that a",
    "start": "200159",
    "end": "208080"
  },
  {
    "text": "lot people haven't been by that multiple times yeah when Michael creates stuff",
    "start": "208080",
    "end": "213239"
  },
  {
    "text": "it's perfect no no no I I just I've been pushing back recently like I think the",
    "start": "213239",
    "end": "218439"
  },
  {
    "text": "younger you are the less that you've heard of like second system syndrome and things like that and all the problems",
    "start": "218439",
    "end": "223680"
  },
  {
    "text": "that come into place when you actually sit down to redo something it's interesting it's like you can go extreme",
    "start": "223680",
    "end": "230200"
  },
  {
    "text": "in both directions you can refactor too much but you can also like I mean I've",
    "start": "230200",
    "end": "235439"
  },
  {
    "text": "worked at some companies where they basically never want to refactor and the code is just you know the code looks like that you know they're using stuff",
    "start": "235439",
    "end": "242560"
  },
  {
    "text": "that has much much better Replacements and using methods that just aren't the",
    "start": "242560",
    "end": "247760"
  },
  {
    "text": "best way to do stuff anymore and they're like really hesitant to refactor it because there's no tests there's risk of",
    "start": "247760",
    "end": "253799"
  },
  {
    "text": "breakage it kind of works oh and there's all these other things that we could do that seem more important to the product",
    "start": "253799",
    "end": "259680"
  },
  {
    "text": "managers or the people who are making the decisions about what developers work on so you know it can really go wrong in",
    "start": "259680",
    "end": "265680"
  },
  {
    "text": "both ways too much refactoring or not enough so do you have a decision- making process you use for deciding when you",
    "start": "265680",
    "end": "272759"
  },
  {
    "text": "have to do it or when is the right time I think if you start to notice a lot of problems originating in one area of the",
    "start": "272759",
    "end": "278880"
  },
  {
    "text": "code base you find that like a huge number of the last set of bugs that you've had to go and fix have some sort",
    "start": "278880",
    "end": "285440"
  },
  {
    "text": "of source some sort of root cause that's in common it might be that that's a good place to consider a better design I can",
    "start": "285440",
    "end": "292240"
  },
  {
    "text": "also see if you feel like working in that part of the codebase is really demotivational like it feels bad to you",
    "start": "292240",
    "end": "298039"
  },
  {
    "text": "it discourages you it makes you not want to do it or like teammates on on your team feel that way too then it could just be like a big drag on everybody and",
    "start": "298039",
    "end": "305680"
  },
  {
    "text": "that slows down like the speed at which you can do stuff and it just makes work less fun so that would be another reason",
    "start": "305680",
    "end": "311240"
  },
  {
    "text": "to do it and that's more of an emotional reason but it's also that's like really important there's probably other reasons yeah what what do others think I agree",
    "start": "311240",
    "end": "318120"
  },
  {
    "text": "with the gut reaction thing because that often is the reason I refactor certain things like I sort of know intuitively",
    "start": "318120",
    "end": "324639"
  },
  {
    "text": "that it isn't exactly how I want it to be and then that generally tends to",
    "start": "324639",
    "end": "330319"
  },
  {
    "text": "motivate me to refactor it and also it goes hand in hand with being excited",
    "start": "330319",
    "end": "336000"
  },
  {
    "text": "about that refactor because you think that it needs to be better and you work on it it's not always the case because",
    "start": "336000",
    "end": "341400"
  },
  {
    "text": "there are times when you think something smells but then you don't want to touch it cuz it just is too much work or it's",
    "start": "341400",
    "end": "347400"
  },
  {
    "text": "going to you're going to go down this Rabbid hole of work and there's no light at the end of the tunnel so there's",
    "start": "347400",
    "end": "353520"
  },
  {
    "text": "always that fear as well I think there there's also certain things for which there's no replacement for refactoring",
    "start": "353520",
    "end": "359160"
  },
  {
    "text": "right like if you're using a library and it has just like a way too big bundle size because it was never designed for",
    "start": "359160",
    "end": "365720"
  },
  {
    "text": "that you were just thinking about node when you wrote it maybe the only way to fix that is to refactor it there's no like quick and easy way to just make the",
    "start": "365720",
    "end": "371960"
  },
  {
    "text": "bundle size less you end up using completely different modules and you end up doing things in a very different way so you end up doing kind of a full",
    "start": "371960",
    "end": "378199"
  },
  {
    "text": "refactor just to to take that on so there's certain cases in which you really have no other option other than",
    "start": "378199",
    "end": "384240"
  },
  {
    "text": "just you know maybe using a different Library well alongside that it's also if if technology deprecate so like it's",
    "start": "384240",
    "end": "390720"
  },
  {
    "text": "2020 so python 2 is completely deprecated and so if your code is written in Python 2 you're going to have",
    "start": "390720",
    "end": "396400"
  },
  {
    "text": "to move it over and that almost necessitates refactoring because otherwise your code won't work moving",
    "start": "396400",
    "end": "402360"
  },
  {
    "text": "forward so that actually that raises there's sort of two different areas that cause refactoring so one is code smells",
    "start": "402360",
    "end": "408360"
  },
  {
    "text": "things are bad I don't like this it's causing bugs and the other is there's some sort of functionality or",
    "start": "408360",
    "end": "415000"
  },
  {
    "text": "requirement that this code is not meeting and that its current structure means it is in capable of meeting so I",
    "start": "415000",
    "end": "420759"
  },
  {
    "text": "need to change it the first one I think was what FAS and Divia you were talking",
    "start": "420759",
    "end": "426720"
  },
  {
    "text": "about first like how bad is it is it causing a lot of bugs I've seen I maybe even talked about on the podcast with",
    "start": "426720",
    "end": "432759"
  },
  {
    "text": "somebody there's like these two axes that you can look at things or code on it's how complicated or how complex is",
    "start": "432759",
    "end": "438879"
  },
  {
    "text": "it and how frequently is it being touched or modified so you can have a",
    "start": "438879",
    "end": "444039"
  },
  {
    "text": "super complicated ugly function that just kind of works and you never have to",
    "start": "444039",
    "end": "450720"
  },
  {
    "text": "touch it and there's no reason to refactor that or on the flip side you could have code that's changing a lot but is actually really well factored and",
    "start": "450720",
    "end": "456720"
  },
  {
    "text": "works well and you don't need to refactor that either but in that corner case of this is both really complicated",
    "start": "456720",
    "end": "463680"
  },
  {
    "text": "and it's being modified or dealt with a lot that's a place where a code smell indicates hey like this is probably",
    "start": "463680",
    "end": "470159"
  },
  {
    "text": "worth refactoring yeah totally it's it's about deciding you know where the time is best spent for sure if the grossness",
    "start": "470159",
    "end": "476720"
  },
  {
    "text": "is isolated somewhere and you never have to look at it and it still could affect the rest of the system like if the",
    "start": "476720",
    "end": "482159"
  },
  {
    "text": "performance is bad and that actually ends up causing problems for users or for developers but if it's performing",
    "start": "482159",
    "end": "488879"
  },
  {
    "text": "fine and you know if you from the outside world that code is actually just doing its job well it's just that when",
    "start": "488879",
    "end": "495000"
  },
  {
    "text": "you actually crack it open and look at it it's gross it doesn't really matter so much if if it's if it's working I",
    "start": "495000",
    "end": "500759"
  },
  {
    "text": "mean yeah there's all kinds of things that people care about in coding and you know and you know style and aesthetic",
    "start": "500759",
    "end": "507599"
  },
  {
    "text": "and stuff like this matters but if like you said if you're not looking at the code very often and there's no other glaring issue with it like performance",
    "start": "507599",
    "end": "513959"
  },
  {
    "text": "or security or it not being supported anymore because of an the platform changing or something like that then",
    "start": "513959",
    "end": "519360"
  },
  {
    "text": "there really it seems like there's very little reason to expend effort there yeah the big refactor that I've been",
    "start": "519360",
    "end": "525320"
  },
  {
    "text": "working on recently or recently wrapped up and then I'm looking at another one were both the other category they were",
    "start": "525320",
    "end": "532080"
  },
  {
    "text": "related to new requirements so in one example it was we have this service it's",
    "start": "532080",
    "end": "537279"
  },
  {
    "text": "great except it doesn't enable streaming data and so when you the number of",
    "start": "537279",
    "end": "543000"
  },
  {
    "text": "things you're working with get large you're updating lots of things at the same time it gets really slow and unfortunately the way it was set up it",
    "start": "543000",
    "end": "549440"
  },
  {
    "text": "was really hard to enable streaming so we did this big refactor of the service",
    "start": "549440",
    "end": "556360"
  },
  {
    "text": "to in most cases behave exactly the same way but expose one more layer which",
    "start": "556360",
    "end": "561519"
  },
  {
    "text": "would let you stream it if you needed to I think Michael your examples of or or",
    "start": "561519",
    "end": "567200"
  },
  {
    "text": "even Diva's most recent of like okay python two is being deprecated you must",
    "start": "567200",
    "end": "572360"
  },
  {
    "text": "go to the new version that's going to force some some sort of refactor so I",
    "start": "572360",
    "end": "577959"
  },
  {
    "text": "think that's probably I don't know well what's your sense is that a more common case where it's new requirements forcing",
    "start": "577959",
    "end": "583560"
  },
  {
    "text": "the refactor or is it you know code smells complexity and",
    "start": "583560",
    "end": "588640"
  },
  {
    "text": "bugs I don't know if you can say it's one or the other definitively because it",
    "start": "588640",
    "end": "593800"
  },
  {
    "text": "often is there's a mix of both and even in scenarios where like there's one",
    "start": "593800",
    "end": "599640"
  },
  {
    "text": "project being refactored this those two scenarios might exist for them to decide",
    "start": "599640",
    "end": "605320"
  },
  {
    "text": "to refactor something and that has happened before in code bases I've worked where it's a matter of like one",
    "start": "605320",
    "end": "611760"
  },
  {
    "text": "technolog is being deprecated like in the case of python or even in the case of react when you go from react 15 to 16",
    "start": "611760",
    "end": "617640"
  },
  {
    "text": "which was like a major one that happened but then alongside that it's also like uh things were not as modular things",
    "start": "617640",
    "end": "624519"
  },
  {
    "text": "were not as well built maybe using react hooks would make it better and so there's like this idea of put it it",
    "start": "624519",
    "end": "632079"
  },
  {
    "text": "essentially it's a decision that the team or whoever is in charge of the code base has to make whether or not it's worth the time and effort because I",
    "start": "632079",
    "end": "638600"
  },
  {
    "text": "think that factors in quite a lot because like sure refactoring is great and all but like like FAS was mentioning",
    "start": "638600",
    "end": "645519"
  },
  {
    "text": "does it actually add value because sometimes if a thing works like refactoring is nice but is it worth that",
    "start": "645519",
    "end": "651720"
  },
  {
    "text": "time is is it better for you to work on something else like the user experience or like another project entirely",
    "start": "651720",
    "end": "660160"
  },
  {
    "text": "yeah sometimes I worry that the developer Community is really into fashion you know and like refactoring",
    "start": "660160",
    "end": "665800"
  },
  {
    "text": "for the sake of you know well this code doesn't look like what modern code is",
    "start": "665800",
    "end": "671160"
  },
  {
    "text": "supposed to look like these days and you know the kids at school are going to make fun of me if I write code that",
    "start": "671160",
    "end": "678040"
  },
  {
    "text": "looks like this I can't go to school wearing that you know like I have to fix it or else I'm G to get called out for",
    "start": "678040",
    "end": "684160"
  },
  {
    "text": "being old school or something like that so that's not a good reason I think it should be more about you know",
    "start": "684160",
    "end": "690440"
  },
  {
    "text": "discovering that you picked the wrong abstraction and that you know this",
    "start": "690440",
    "end": "696200"
  },
  {
    "text": "abstraction is actually just making your life harder when trying to solve this problem and so actually we're going to",
    "start": "696200",
    "end": "702399"
  },
  {
    "text": "redesign the way that this class works or we're going to redesign the way that this entire module works because we're it's not exposing the right interfaces",
    "start": "702399",
    "end": "709040"
  },
  {
    "text": "to actually help us get our job done you know that's like more of a legitimate good use of time for refactoring I don't",
    "start": "709040",
    "end": "716079"
  },
  {
    "text": "know it's sort of arbitrary how you distinguish between a lot of those things like how do you distinguish",
    "start": "716079",
    "end": "721399"
  },
  {
    "text": "between it's a new hotness or it's a new requirement like if you're building a new thing and you're using new stuff",
    "start": "721399",
    "end": "727399"
  },
  {
    "text": "like like let's take like callbacks and promises right like you're building a a new feature and so you're using the new",
    "start": "727399",
    "end": "733519"
  },
  {
    "text": "promise based stuff and then you have to interact with some old library that is still callback based and there's some",
    "start": "733519",
    "end": "740120"
  },
  {
    "text": "funkiness with it so you need to refactor it for the new thing then is a new requirement like there there's new",
    "start": "740120",
    "end": "745800"
  },
  {
    "text": "usage of it that needs this new pattern and so it makes sense to just and refactor it I think that like I don't",
    "start": "745800",
    "end": "751720"
  },
  {
    "text": "know you could paint that either way that you wanted to honestly I wasn't subtweeting callbacks versus promises I",
    "start": "751720",
    "end": "757880"
  },
  {
    "text": "was not I promis that is actually that is actually a new requirement and that is about you",
    "start": "757880",
    "end": "763519"
  },
  {
    "text": "know like the interface fundamentally being different so I yeah I would consider that like legitimate for",
    "start": "763519",
    "end": "769680"
  },
  {
    "text": "sure it does create kind of an interesting Push Pull between so we talked with Katie Syler Miller about",
    "start": "769680",
    "end": "776720"
  },
  {
    "text": "etsy's tech stack and they had this whole principle of use boring Tech use stuff that's not on the bleeding edge because they're you know they're",
    "start": "776720",
    "end": "783240"
  },
  {
    "text": "delivering product they're not worrying about the bleeding edge but at some point that bites you in the butt because",
    "start": "783240",
    "end": "790279"
  },
  {
    "text": "like in the JavaScript ecosystem things move so fast there have been legitimate large improvements in the last year two",
    "start": "790279",
    "end": "798440"
  },
  {
    "text": "years 3 years and they're talking five or six years like how long do you let something sit just because it's working",
    "start": "798440",
    "end": "805600"
  },
  {
    "text": "as it currently is but it's continuing to stagnate and be harder to find people",
    "start": "805600",
    "end": "811120"
  },
  {
    "text": "to support and be harder to extend and do things like that yeah a lot of people say that same thing Brian laroo has has",
    "start": "811120",
    "end": "816959"
  },
  {
    "text": "the same thing the use boring Tech thing I think that when you really nail down though what Brian does and what his his",
    "start": "816959",
    "end": "823639"
  },
  {
    "text": "team does is that they that's not actually how they operate like what what they're really talking about is like it's fine to use the the new thing or",
    "start": "823639",
    "end": "830680"
  },
  {
    "text": "even the next thing as long as the thing that you're working on is actually the next thing and not a thing that we're",
    "start": "830680",
    "end": "837120"
  },
  {
    "text": "just going to ditch in a few years or is going to change so dramatically that the way that you did it doesn't really",
    "start": "837120",
    "end": "843000"
  },
  {
    "text": "matter right like it's fine to take new syntax but if taking that new syntax requires like a compiler chain that you",
    "start": "843000",
    "end": "848720"
  },
  {
    "text": "wouldn't have used otherwise it's probably actually not worth it and just wait for that syntax to show up in the",
    "start": "848720",
    "end": "853880"
  },
  {
    "text": "language and that you're using and in the platforms that you're using natively you know like a lot of people really bet",
    "start": "853880",
    "end": "859440"
  },
  {
    "text": "hard on coffee scripts and that turned out to not be maybe the best bet uh for",
    "start": "859440",
    "end": "864639"
  },
  {
    "text": "a lot of those libraries I think that you see a similar argument right now going in both directions about typescript a lot of people think that",
    "start": "864639",
    "end": "870759"
  },
  {
    "text": "it's like just all everything is going to be written with this now in the future and a lot of other people saying like I've been down this road before and",
    "start": "870759",
    "end": "876839"
  },
  {
    "text": "it was called copy script and it didn't happen and enough of the features landed in the language that we just kind of",
    "start": "876839",
    "end": "882160"
  },
  {
    "text": "forgot about it so I think yeah like I don't think that anybody really believes that you should only use the thing that",
    "start": "882160",
    "end": "888600"
  },
  {
    "text": "everybody was using three years ago in the JavaScript ecosystem because we know that like anything that you that was",
    "start": "888600",
    "end": "894920"
  },
  {
    "text": "super popular three years ago we can see already what the next thing is beyond that I think that what people actually object to is like using a thing that",
    "start": "894920",
    "end": "901959"
  },
  {
    "text": "they believe won't be around in a few years or you know and there's a lot of arguments about you know who is right",
    "start": "901959",
    "end": "908040"
  },
  {
    "text": "about what's going to be around in the future one more quick question in this area of decision-making about",
    "start": "908040",
    "end": "913720"
  },
  {
    "text": "refactoring is it worth drawing a distinction between a refactor and a total rewrite and when is one the right",
    "start": "913720",
    "end": "920120"
  },
  {
    "text": "answer versus the other can we Define those things I guess that's part of my question like is there a difference",
    "start": "920120",
    "end": "926639"
  },
  {
    "text": "between you know when we're saying refactoring are we including in our heads everything up to and including",
    "start": "926639",
    "end": "932120"
  },
  {
    "text": "rewriting this thing from scratch or is there a more contained definition there",
    "start": "932120",
    "end": "938000"
  },
  {
    "text": "so I'll I'll paint a definition so one is like literally a diff so you can",
    "start": "938000",
    "end": "943519"
  },
  {
    "text": "think of it like it may be a major diff but you can still see how all the code got moved around the other is like a new",
    "start": "943519",
    "end": "949480"
  },
  {
    "text": "clean Branch or a new clean repo that is just a complete reimplementation that is then presumably exposing the same or a",
    "start": "949480",
    "end": "956720"
  },
  {
    "text": "very similar API that people can migrate to so the end result is probably you know an API that is either compliant",
    "start": "956720",
    "end": "963079"
  },
  {
    "text": "with the prior API or only change so much that people can easily migrate to it but the approach to how you do it is",
    "start": "963079",
    "end": "969399"
  },
  {
    "text": "a little different and that you would either use the existing code or you would just start with a clean slate so",
    "start": "969399",
    "end": "974560"
  },
  {
    "text": "then the idea for a rewrite because it's a complete rewrite would be that it you",
    "start": "974560",
    "end": "980440"
  },
  {
    "text": "can't gradually migrate to it it's essentially you flip a switch just to turn from one thing to another because",
    "start": "980440",
    "end": "988199"
  },
  {
    "text": "if we Define it that way a refactor can be done in chunks where you work on certain pieces of the code base",
    "start": "988199",
    "end": "994480"
  },
  {
    "text": "obviously it might not be as clean as that but with a rewrite because you're rewriting the entire thing then you",
    "start": "994480",
    "end": "1000040"
  },
  {
    "text": "can't just be like use both versions because they'd be in different states at",
    "start": "1000040",
    "end": "1006199"
  },
  {
    "text": "any given time yeah I think there's also sometimes a problem of like there's",
    "start": "1006199",
    "end": "1012480"
  },
  {
    "text": "a desire to rewrite because it is a blank slate and you lose a lot of learnings you lose a lot",
    "start": "1012480",
    "end": "1019360"
  },
  {
    "text": "of stuff that maybe this thing that is kind of weird in the code was actually",
    "start": "1019360",
    "end": "1024520"
  },
  {
    "text": "there for a historical reason that is not relevant but maybe it was there because it works around an edge case",
    "start": "1024520",
    "end": "1030000"
  },
  {
    "text": "that you haven't considered yet I actually disagree that you lose the learnings I agree in terms of you lose",
    "start": "1030000",
    "end": "1036959"
  },
  {
    "text": "the history of the learnings because you're moving from one entire like code",
    "start": "1036959",
    "end": "1042079"
  },
  {
    "text": "base to another essentially when you rewrite so you lose that linear history that happens when you refactor on top of",
    "start": "1042079",
    "end": "1048240"
  },
  {
    "text": "an existing thing but sometimes when you do a rewrite you can take whatever you",
    "start": "1048240",
    "end": "1053640"
  },
  {
    "text": "learned from building it the first time and apply it to the new thing and it might actually make for a better product",
    "start": "1053640",
    "end": "1061160"
  },
  {
    "text": "just because you have a lot more experience and there's a lot of feedback",
    "start": "1061160",
    "end": "1066480"
  },
  {
    "text": "that you had from the previous way of writing things that you can build into",
    "start": "1066480",
    "end": "1071799"
  },
  {
    "text": "the application the new application you're writing without having to like refactor it to reach that point all",
    "start": "1071799",
    "end": "1077880"
  },
  {
    "text": "right so would there be any reasons to do one versus the other that you can think of I off the top of",
    "start": "1077880",
    "end": "1085320"
  },
  {
    "text": "my head I feel like time is like the one thing because every time someone wants to rewrite something especially if it's",
    "start": "1085320",
    "end": "1091640"
  },
  {
    "text": "a large app which is kind of what we're talking about with large projects that takes so much time it's almost you might",
    "start": "1091640",
    "end": "1098640"
  },
  {
    "text": "almost need a team just dedicated to that effort because whenever you do a rewrite the assumption is you're",
    "start": "1098640",
    "end": "1104880"
  },
  {
    "text": "rewriting an application that people are using which means that you might also have to be maintaining that project that",
    "start": "1104880",
    "end": "1110640"
  },
  {
    "text": "people are using so there's like a lot of things that are happening at the same time and so it's a matter of like do you",
    "start": "1110640",
    "end": "1117320"
  },
  {
    "text": "have the time and the people to work on it it's like I think a big Contender when you think of refactoring versus",
    "start": "1117320",
    "end": "1123960"
  },
  {
    "text": "rewriting for us Michael thoughts on this closing piece for this segment I'm always just skeptical when people say",
    "start": "1123960",
    "end": "1130080"
  },
  {
    "text": "like oh we're gonna rewrite everything in a large app and it's going to be way better I've Just Seen It Go off the",
    "start": "1130080",
    "end": "1135400"
  },
  {
    "text": "rails like too many times and take far longer I tend to like iterative approaches to refactor where you know",
    "start": "1135400",
    "end": "1142760"
  },
  {
    "text": "different parts are done in pieces and can potentially be more easily paralized between different people and",
    "start": "1142760",
    "end": "1148120"
  },
  {
    "text": "communicated well and tested independently that that's another thing too I think that like when you approach something iteratively it encourages you",
    "start": "1148120",
    "end": "1155120"
  },
  {
    "text": "to to write tests and to deliver things in an iterative Manner and often when you needed to refactor one of the big",
    "start": "1155120",
    "end": "1160559"
  },
  {
    "text": "pain points is that there weren't enough tests and so that pushes you in the right direction whereas when you just go off and radit all a new from scratch",
    "start": "1160559",
    "end": "1169200"
  },
  {
    "text": "people who didn't write tests before tend to not write them end and it's just the same problem all over again yeah I want to Echo Michael I feel like the",
    "start": "1169200",
    "end": "1176080"
  },
  {
    "text": "tendency of programmers is probably like like I like I said before you can you can air too much in One Direction or the",
    "start": "1176080",
    "end": "1182760"
  },
  {
    "text": "other direction they're both like in you know in terms of refactoring too much or not enough and I think a rewrite is just",
    "start": "1182760",
    "end": "1188159"
  },
  {
    "text": "like a more significant refactor really in terms of the definition of it but it's probably worse to refactor Too Much",
    "start": "1188159",
    "end": "1194799"
  },
  {
    "text": "I Feel like in terms of just getting things done because program like I feel like we as programmers look at code and",
    "start": "1194799",
    "end": "1200320"
  },
  {
    "text": "just say h this is so hard to understand and that's cuz like it is actually harder to read code than to write code",
    "start": "1200320",
    "end": "1207440"
  },
  {
    "text": "that's just how it is so it's going to be like annoying to read someone else's code and the instinct to just throw it",
    "start": "1207440",
    "end": "1213960"
  },
  {
    "text": "all away and start over is like very strong it's probably a lot of the time a mistake because it might that code it",
    "start": "1213960",
    "end": "1221320"
  },
  {
    "text": "might be gross for a reason because those gross parts are bug fixes or learnings that you know that that ended",
    "start": "1221320",
    "end": "1227679"
  },
  {
    "text": "up in there over time that will cause problems if you just throw it all out and start start a fresh uh and the tests",
    "start": "1227679",
    "end": "1233280"
  },
  {
    "text": "are also a big issue too you won't write tests if you're just completely throwing everything out so yeah I just say be",
    "start": "1233280",
    "end": "1239559"
  },
  {
    "text": "careful when you feel like super strong feelings about throwing things out and starting",
    "start": "1239559",
    "end": "1246360"
  },
  {
    "text": "[Laughter] [Music]",
    "start": "1246830",
    "end": "1253278"
  },
  {
    "text": "over this episode is brought to to you by digital ocean digital ocean provides worry-free database hosting with their",
    "start": "1256520",
    "end": "1263200"
  },
  {
    "text": "managed databases if you need to get data in and out of postgress MySQL or",
    "start": "1263200",
    "end": "1268320"
  },
  {
    "text": "redus call on the worldclass support teams at digital ocean and stop wasting time on setup backup and maintenance get",
    "start": "1268320",
    "end": "1275279"
  },
  {
    "text": "simple predictable pricing get detailed documentation get up and running in minutes so you can get on with your",
    "start": "1275279",
    "end": "1282080"
  },
  {
    "text": "business what are you waiting for H to do. co/ changelog again that's do. co/",
    "start": "1282080",
    "end": "1288120"
  },
  {
    "text": "changelog [Music]",
    "start": "1288120",
    "end": "1293420"
  },
  {
    "text": "[Music] let's talk a little bit more about refactoring now digging into approaches",
    "start": "1299400",
    "end": "1306279"
  },
  {
    "text": "and tactics to make sure that your big refactoring project is going to be a success given that we talked a lot about",
    "start": "1306279",
    "end": "1312600"
  },
  {
    "text": "tests in the last section I think that should that will probably feature highly but let's throw the question out first",
    "start": "1312600",
    "end": "1319240"
  },
  {
    "text": "to Divia when you're about to take on a big refactoring project how do you approach that what tactics do you use I",
    "start": "1319240",
    "end": "1326200"
  },
  {
    "text": "feel like this is like just a very it seems obvious but maybe not one of the things I do is I try to write some",
    "start": "1326200",
    "end": "1334039"
  },
  {
    "text": "basically isolate the piece that I'm trying to refactor and then perhaps writing tests to cover those use cases",
    "start": "1334039",
    "end": "1340880"
  },
  {
    "text": "to be like this is kind of what it does at the moment and it works as well for",
    "start": "1340880",
    "end": "1346840"
  },
  {
    "text": "documentation for me as I'm refactoring it to figure out what exactly I'm doing because often times when you refactor",
    "start": "1346840",
    "end": "1353919"
  },
  {
    "text": "and you go very deep down a rabbit hole you lose track of why you were doing it in the first place and so sometimes for",
    "start": "1353919",
    "end": "1360200"
  },
  {
    "text": "me being able to write down what I'm doing in the form of a test allows me to",
    "start": "1360200",
    "end": "1365679"
  },
  {
    "text": "isolate that piece of work and also to make sure that when I refactor it it does the thing that it was doing before",
    "start": "1365679",
    "end": "1372120"
  },
  {
    "text": "maybe it's a little better maybe it's the same but slightly like easier to read but it also keeps me on track",
    "start": "1372120",
    "end": "1378960"
  },
  {
    "text": "because often times when I refactor and this happens a lot when you're refactoring one piece you realize that",
    "start": "1378960",
    "end": "1385960"
  },
  {
    "text": "there are other pieces that need refactoring and then you just start going and touching every piece of the code base and then there comes a point",
    "start": "1385960",
    "end": "1392440"
  },
  {
    "text": "where everything is a jumble of like all kinds of diffs that one the git history",
    "start": "1392440",
    "end": "1398679"
  },
  {
    "text": "looks like crazy you have all kinds of conflicts and two the th your your refactor no longer works so you refactor",
    "start": "1398679",
    "end": "1405480"
  },
  {
    "text": "a bunch of things but things don't work as expected and so there's weird edge cases that happen so for me that's like",
    "start": "1405480",
    "end": "1411360"
  },
  {
    "text": "one of the like very important things I do it's it's almost like test driven refactoring just because it's it keeps",
    "start": "1411360",
    "end": "1418400"
  },
  {
    "text": "me in check it makes sure I do the thing I'm supposed to be doing without getting distracted really easily which happens I",
    "start": "1418400",
    "end": "1424640"
  },
  {
    "text": "really like the idea of doing it in phases I think in a case where you don't have tests which you shouldn't do that",
    "start": "1424640",
    "end": "1429679"
  },
  {
    "text": "but like say say you have a code base that doesn't have tests and you need to you need to refactor it anyway if you do",
    "start": "1429679",
    "end": "1435080"
  },
  {
    "text": "it in stages and you know you refactor one function or you know one file at a",
    "start": "1435080",
    "end": "1440120"
  },
  {
    "text": "time and each of those goes into a commit and then a poll request and you go through a pro like a process for each",
    "start": "1440120",
    "end": "1446039"
  },
  {
    "text": "piece doing it piece by piece then at least later on if a bug is found and somebody says you know hey this like",
    "start": "1446039",
    "end": "1451960"
  },
  {
    "text": "part of the thing this part of the app stopped working or this function now has a bug when I call it this way then you",
    "start": "1451960",
    "end": "1457720"
  },
  {
    "text": "can like write a test for the bug that they found at the time that it's reported and then you can use get BCT to",
    "start": "1457720",
    "end": "1465440"
  },
  {
    "text": "basically find the commit where it was introduced and and then you can be like okay then I must have made a you know a",
    "start": "1465440",
    "end": "1472000"
  },
  {
    "text": "mistake when I was editing this particular function or this particular file because you can isolate the exact",
    "start": "1472000",
    "end": "1477200"
  },
  {
    "text": "commit where it was introduced once you write that test later but if you just did it all in one giant commit then",
    "start": "1477200",
    "end": "1483240"
  },
  {
    "text": "you're going to when you do get byct you're just going to be like oh so when I did that big refactor and changed",
    "start": "1483240",
    "end": "1488720"
  },
  {
    "text": "every line of the project then I must have introduced the bug there and you don't really have an option to just",
    "start": "1488720",
    "end": "1493840"
  },
  {
    "text": "revert I mean you could revert the entire refactor but then you know that's just like you waste it all the time you",
    "start": "1493840",
    "end": "1499520"
  },
  {
    "text": "know and you you're going to have to now look through it to find where the bug is whereas if you just did a commit at a",
    "start": "1499520",
    "end": "1504840"
  },
  {
    "text": "time for each little piece then it's like not that hard to either just revert that one piece for now until you can",
    "start": "1504840",
    "end": "1510559"
  },
  {
    "text": "figure out what the problem is you know or to just to find the bug in that small piece because it's not that many lines",
    "start": "1510559",
    "end": "1516360"
  },
  {
    "text": "of code it's much easier to find so I don't know that piece by piece is definitely the way to go I also find",
    "start": "1516360",
    "end": "1522399"
  },
  {
    "text": "that whenever you're like if you're working on a team that's working on a code base that works really well because",
    "start": "1522399",
    "end": "1527960"
  },
  {
    "text": "when you're refactoring there's often a specific GitHub issue associated with that refactor and then when you do a",
    "start": "1527960",
    "end": "1535320"
  },
  {
    "text": "pull request to the main code base one of the things that I've done and I I do regularly is that whenever you submit a",
    "start": "1535320",
    "end": "1542520"
  },
  {
    "text": "PR for a refactor for a specific thing there's a testing strategy that goes into it to be like test that this thing",
    "start": "1542520",
    "end": "1548760"
  },
  {
    "text": "works test that this thing works and having someone else look at the thing that you're working on or that you",
    "start": "1548760",
    "end": "1554080"
  },
  {
    "text": "worked on gives you a second opinion on whether or not it's worth refactoring cuz there have been times",
    "start": "1554080",
    "end": "1560159"
  },
  {
    "text": "where I refactored something I created like a testing strategy in the pr and it's been rejected because like what I",
    "start": "1560159",
    "end": "1567360"
  },
  {
    "text": "thought needed to be refactored was not something that was worth adding to the code base or that was not worth like",
    "start": "1567360",
    "end": "1575159"
  },
  {
    "text": "integrating into the the project itself but overall like in the event that it was it's useful to have that history of",
    "start": "1575159",
    "end": "1581720"
  },
  {
    "text": "like one like for us you're mentioning having that git history but also having that history in GitHub because I can",
    "start": "1581720",
    "end": "1587360"
  },
  {
    "text": "look at a closed issue and I can see at what point a specific feature was refactored or worked on and",
    "start": "1587360",
    "end": "1593760"
  },
  {
    "text": "then just like Trac back really easily and for me that's much simpler than using git bisect I find git bisect very",
    "start": "1593760",
    "end": "1601760"
  },
  {
    "text": "confusing personally there have been times where I made like very small commits for things which is great but then when you use git bisect there's",
    "start": "1601760",
    "end": "1608919"
  },
  {
    "text": "just like all this history I have to go through and then I lo lose where exactly I am and then tracking makes it really",
    "start": "1608919",
    "end": "1615360"
  },
  {
    "text": "hard I'm sure tracking is supposed to be easy with it but maybe just the task of having to go through all of your history",
    "start": "1615360",
    "end": "1622520"
  },
  {
    "text": "and finding the one thing that introduced a bug is is quite a big one it's one of my objections to get squash",
    "start": "1622520",
    "end": "1629440"
  },
  {
    "text": "because you lose a lot of that history and I think if you do small PRS okay if",
    "start": "1629440",
    "end": "1635960"
  },
  {
    "text": "not it can be a problem I definitely have a tendency if I'm doing a large",
    "start": "1635960",
    "end": "1641360"
  },
  {
    "text": "project to do it all in a future branch and keep that Branch up to date but then if I squash it it bisc just goes away",
    "start": "1641360",
    "end": "1648039"
  },
  {
    "text": "yeah also with large PRS the the one thing is like it's a headache for a review and no one wants to touch that um",
    "start": "1648039",
    "end": "1655919"
  },
  {
    "text": "and then the other thing with feature branches which can be good is just like again it's isolated to the refactor or",
    "start": "1655919",
    "end": "1662399"
  },
  {
    "text": "the task that you're working on but the downside is that with feature branches especially if it's an ongoing task and",
    "start": "1662399",
    "end": "1668120"
  },
  {
    "text": "you're just constantly working on it you have to really be on top of making sure that it's up to date because if it's not",
    "start": "1668120",
    "end": "1674880"
  },
  {
    "text": "it goes stale really quickly and then when you try to rebase to m master so that everything or whatever make sure",
    "start": "1674880",
    "end": "1680880"
  },
  {
    "text": "that it's up to date with Master you get all kinds of conflicts and that's like such a headache and when that happens I",
    "start": "1680880",
    "end": "1686960"
  },
  {
    "text": "generally just like burn it to the ground and then start again or just cherry pick the commits I want and then",
    "start": "1686960",
    "end": "1693039"
  },
  {
    "text": "start all over again so that's something to keep in mind if you do that kind of",
    "start": "1693039",
    "end": "1698360"
  },
  {
    "text": "approach yeah if your team isn't already sold on the refactor then certainly um sending sending a small PR that's like",
    "start": "1698360",
    "end": "1704840"
  },
  {
    "text": "you know changing one file and saying uh what do you all think about this this is the world we could be living in this",
    "start": "1704840",
    "end": "1709880"
  },
  {
    "text": "wouldn't this be so much better look at this one file I changed but if you just change every single line in the entire project and say guys isn't this great",
    "start": "1709880",
    "end": "1716679"
  },
  {
    "text": "people are going to be like what no I can't like understand anything and it's extremely intimidating to um to review",
    "start": "1716679",
    "end": "1722880"
  },
  {
    "text": "it and and also this is like a really important Pro tip when you're refactoring don't refactor the tests and",
    "start": "1722880",
    "end": "1730039"
  },
  {
    "text": "the code itself in the same at the same time because then you're not actually testing anything like I've actually been",
    "start": "1730039",
    "end": "1736399"
  },
  {
    "text": "dealing with this a little bit because I've been refactor a lot of my code from es5 to you know es6 you know modern sort",
    "start": "1736399",
    "end": "1741880"
  },
  {
    "text": "of class syntax and stuff a lot of old old packages and it's tempting to just run a tool across the entire package",
    "start": "1741880",
    "end": "1748320"
  },
  {
    "text": "that just turns the whole thing into you know the new syntax for you or you know to just do everything at once if it's",
    "start": "1748320",
    "end": "1753600"
  },
  {
    "text": "relatively small package with you know a couple hundred lines but the problem is if you refactor the package and then you",
    "start": "1753600",
    "end": "1760200"
  },
  {
    "text": "also refactor the tests and you introduce a bug in the tests at the same time uh you know the tool changes",
    "start": "1760200",
    "end": "1766039"
  },
  {
    "text": "something wrong in both the package and the tests then they can the bugs can cancel each other out and it'll look",
    "start": "1766039",
    "end": "1771880"
  },
  {
    "text": "like there's no issue the tests will just pass so you need to really keep the tests completely unchanged and fixed",
    "start": "1771880",
    "end": "1778519"
  },
  {
    "text": "while you're refactoring the code in the project so that the tests are actually confirming that yes it worked before and",
    "start": "1778519",
    "end": "1784320"
  },
  {
    "text": "yes it works after right so that's just something to keep in mind it's kind of obvious when you think about it but it's",
    "start": "1784320",
    "end": "1790039"
  },
  {
    "text": "easy to forget 100% I think there's actually multiple things that you should",
    "start": "1790039",
    "end": "1795080"
  },
  {
    "text": "do kind of orthogonally so test is one work on the tests at one point one commit make sure everything's working",
    "start": "1795080",
    "end": "1802360"
  },
  {
    "text": "structure and then functionality right so if you're doing the refactor Because",
    "start": "1802360",
    "end": "1807480"
  },
  {
    "text": "you want to enable some new functionality you should not add that",
    "start": "1807480",
    "end": "1812519"
  },
  {
    "text": "new functionality in the same commit or same block of work as you're restructuring how things work so I want",
    "start": "1812519",
    "end": "1820039"
  },
  {
    "text": "to explore a little bit this kind of idea of doing things incrementally and how you approach it so Frost you",
    "start": "1820039",
    "end": "1826159"
  },
  {
    "text": "mentioned you know do one file and it's the new approach or maybe it's using a new library or something like that in a",
    "start": "1826159",
    "end": "1833559"
  },
  {
    "text": "really large code base it's pretty much impossible to refactor everything so",
    "start": "1833559",
    "end": "1840799"
  },
  {
    "text": "you're going to have to do some sort of incrementality like I've seen people use like this Walled Garden approach or they're like okay here's the good",
    "start": "1840799",
    "end": "1847320"
  },
  {
    "text": "section that's on to the new approach and things move there over time and once it's in there it's got to stay in the",
    "start": "1847320",
    "end": "1852360"
  },
  {
    "text": "new version but not or or invert SLE like here's a section that of code that",
    "start": "1852360",
    "end": "1857600"
  },
  {
    "text": "is old and shall not be touched and shall not be moved to the new version like what have what have yall used for",
    "start": "1857600",
    "end": "1863880"
  },
  {
    "text": "that well it's easier to do the wal Garden approach if you are using a lot of packages to build up your application",
    "start": "1863880",
    "end": "1869919"
  },
  {
    "text": "and I know this is not like that Comon of an approach for building like an actual web app it's more common in the",
    "start": "1869919",
    "end": "1875279"
  },
  {
    "text": "open source world where you know in libraries you know in open source libraries where those are composed usually of a lot of packages because",
    "start": "1875279",
    "end": "1882039"
  },
  {
    "text": "there you can just say you know we're just going to refactor this one package for now and then we'll do the next next",
    "start": "1882039",
    "end": "1888159"
  },
  {
    "text": "one after that and the next one after that and so it's kind of like pre- decomposed for you in a way it's like easier to do I have less experience",
    "start": "1888159",
    "end": "1895159"
  },
  {
    "text": "doing it on a very large web app where it's all in one repo and you have like maybe a framework that's tying",
    "start": "1895159",
    "end": "1901399"
  },
  {
    "text": "everything together so it's hard sometimes to be able to just like move to something else like to Swit like say",
    "start": "1901399",
    "end": "1906799"
  },
  {
    "text": "you're switching Frameworks like it's hard to like I I have no experience in doing that like while the app is still",
    "start": "1906799",
    "end": "1912360"
  },
  {
    "text": "functional where you have like half you know half react and half view or something like that but um yeah I'm",
    "start": "1912360",
    "end": "1918480"
  },
  {
    "text": "curious what other people have have run into with that and how they've dealt with it so I have one recently that's",
    "start": "1918480",
    "end": "1924240"
  },
  {
    "text": "kind of interesting so I had this a couple packages where in order for it to really be useful it has to ship with a",
    "start": "1924240",
    "end": "1931080"
  },
  {
    "text": "lot of dependencies that that really kind of blow up the bundle size um and so you you want to have the default in",
    "start": "1931080",
    "end": "1937559"
  },
  {
    "text": "in node in particular like have all this extra functionality but also when people care you really need to be able to pair",
    "start": "1937559",
    "end": "1943080"
  },
  {
    "text": "that down and just ship with the things that they're going to use and need so you have this big contract between the",
    "start": "1943080",
    "end": "1948320"
  },
  {
    "text": "two use cases and so when I did this new refactor what I ended up doing was creating a new import endpoint that was",
    "start": "1948320",
    "end": "1955559"
  },
  {
    "text": "like you know SL module bear and then that that be import doesn't give you any of the other functionality you basically",
    "start": "1955559",
    "end": "1961720"
  },
  {
    "text": "have to configure it with like different function calls and then I just updated the the main export like the default so",
    "start": "1961720",
    "end": "1968320"
  },
  {
    "text": "that it didn't break compatibility to just import that bare version and then add all the things that it add and that",
    "start": "1968320",
    "end": "1973960"
  },
  {
    "text": "that seems to actually work really well um and hit a lot of the same stuff I had a similar situation in which we realized",
    "start": "1973960",
    "end": "1980559"
  },
  {
    "text": "that in order to actually be quote unquote safe about some operations we",
    "start": "1980559",
    "end": "1985600"
  },
  {
    "text": "had to do like a lot of extra memory allocations and so I ended up doing the thing that the nodejs core does which is",
    "start": "1985600",
    "end": "1992440"
  },
  {
    "text": "that you you like the default API does all these extra mem copies and then there's also paired functions right",
    "start": "1992440",
    "end": "1998279"
  },
  {
    "text": "beside it that are called unsafe that do the unsafe thing and in both of these libraries it was really important that I had 100% test coverage in both just so",
    "start": "1998279",
    "end": "2005039"
  },
  {
    "text": "that I knew that I was actually hitting all the code paths for all these point but that that model of refactoring",
    "start": "2005039",
    "end": "2010559"
  },
  {
    "text": "seemed to work really well when I needed that new functionality but didn't want to break compatibility I like that bare approach that you mentioned yeah I like",
    "start": "2010559",
    "end": "2017600"
  },
  {
    "text": "that I think think um layering as well uh in the project that I did",
    "start": "2017600",
    "end": "2023120"
  },
  {
    "text": "recently it was exposing a new API but as I built out that new API first I",
    "start": "2023120",
    "end": "2029760"
  },
  {
    "text": "built it on top of the old API and then I inverted it so because the reason was",
    "start": "2029760",
    "end": "2035159"
  },
  {
    "text": "to enable new functionality the old API didn't do so did the the first version saying okay",
    "start": "2035159",
    "end": "2041519"
  },
  {
    "text": "this implements the functionality but it doesn't get the performance benefits we want it's implemented on top of the old one rework the internals so that it can",
    "start": "2041519",
    "end": "2048760"
  },
  {
    "text": "do more powerful things and now rebuild the old API on top of the new one if",
    "start": "2048760",
    "end": "2054158"
  },
  {
    "text": "that makes sense so you kind of people who are utilizing the tools can choose",
    "start": "2054159",
    "end": "2060960"
  },
  {
    "text": "to go to the new version or in your case they can choose to go to the bare version but they can also still use the",
    "start": "2060960",
    "end": "2068079"
  },
  {
    "text": "old API even if I've totally ripped out the internals of it I am curious do you",
    "start": "2068079",
    "end": "2073280"
  },
  {
    "text": "do you have any experience with the front-end multif framework migration CU that is something that I",
    "start": "2073280",
    "end": "2078720"
  },
  {
    "text": "see happening in a few places it's actually happening at my current workplace but I haven't been super involved in it and I think there are",
    "start": "2078720",
    "end": "2085919"
  },
  {
    "text": "some trickiness to that yeah I haven't worked on that kind of a thing per se",
    "start": "2085919",
    "end": "2092760"
  },
  {
    "text": "cuz often times when I've worked on code bases we've already picked a technology and we just move",
    "start": "2092760",
    "end": "2098160"
  },
  {
    "text": "along with it but it's it's often whenever we work with different Frameworks it's on different projects so",
    "start": "2098160",
    "end": "2103560"
  },
  {
    "text": "it's not on the same code base thankfully although it has happened before I wasn't part of this project but",
    "start": "2103560",
    "end": "2108680"
  },
  {
    "text": "NFI used to be an angular application and then now we're a react app so there was a a huge refactor that happened from",
    "start": "2108680",
    "end": "2115440"
  },
  {
    "text": "angular to react but I can't speak to that mainly because I did not write any of that code and I wasn't part of that",
    "start": "2115440",
    "end": "2122720"
  },
  {
    "text": "process at all and this was like I think 2016 so it's been a couple of years yeah",
    "start": "2122720",
    "end": "2130160"
  },
  {
    "text": "I think there's I've definitely seen you know situations where you're embedding",
    "start": "2130160",
    "end": "2136480"
  },
  {
    "text": "components from one inside of the other and so there's like a component by component migration process that sort of",
    "start": "2136480",
    "end": "2143280"
  },
  {
    "text": "models the isolated uh process that we're talking about when it comes to packages",
    "start": "2143280",
    "end": "2149960"
  },
  {
    "text": "there I think it was usually like touching things as they needed to be changed rather than doing you know oh",
    "start": "2149960",
    "end": "2157720"
  },
  {
    "text": "this functionality needs to change we're change to the UI we'll build the new version in for example react instead of",
    "start": "2157720",
    "end": "2163160"
  },
  {
    "text": "view or react instead of angular whatever you're coming from but I didn't see as much of here we're going to",
    "start": "2163160",
    "end": "2169400"
  },
  {
    "text": "exactly replicate that old component using the new",
    "start": "2169400",
    "end": "2174920"
  },
  {
    "text": "framework yeah I don't actually think that's possible because every framework has idiosyncrasies to them and so if a",
    "start": "2174920",
    "end": "2183240"
  },
  {
    "text": "component is written in angular and you wanted to move it to reactor view you would have to take a different approach",
    "start": "2183240",
    "end": "2188760"
  },
  {
    "text": "it's not a oneto one so any framework saying it's just JavaScript is just a lie because it's not if it's just",
    "start": "2188760",
    "end": "2195680"
  },
  {
    "text": "JavaScript it would make it it would be very easy to move from one to another and it's not because it's very specific",
    "start": "2195680",
    "end": "2202440"
  },
  {
    "text": "so yeah if you were to write it and move from one to another it's always tricky",
    "start": "2202440",
    "end": "2208800"
  },
  {
    "text": "and I haven't heard examples of that process being smooth it often is like",
    "start": "2208800",
    "end": "2213880"
  },
  {
    "text": "very clunky it requires a lot of work and a lot of planning and yeah because",
    "start": "2213880",
    "end": "2219160"
  },
  {
    "text": "it's a rewrite it's not a refactor at that point or unless a rewrite is a subset of refactoring but yeah all right",
    "start": "2219160",
    "end": "2226720"
  },
  {
    "text": "what about other tactics approaches or gotas that you've run into in big refactoring",
    "start": "2226720",
    "end": "2233319"
  },
  {
    "text": "projects Michael I feel like this is an area you have a very opinionated approach to development with lots of",
    "start": "2233319",
    "end": "2239280"
  },
  {
    "text": "small modules so you probably have a different approach to this than folks in",
    "start": "2239280",
    "end": "2245640"
  },
  {
    "text": "the massive you know modeli repo area but what challenges have you run into or",
    "start": "2245640",
    "end": "2251520"
  },
  {
    "text": "what gotas would you highlight for folks well actually funny enough like one of the things that the JS ipfs team is",
    "start": "2251520",
    "end": "2257040"
  },
  {
    "text": "doing right now is moving to a monor repo because it actually just got too complicated to have a lot of things in",
    "start": "2257040",
    "end": "2263160"
  },
  {
    "text": "external modules that were really only consumed by jsip PFS and didn't really",
    "start": "2263160",
    "end": "2269440"
  },
  {
    "text": "have a a good reason to be outside of it I mean they do need to be separate modules but they shouldn't be in",
    "start": "2269440",
    "end": "2275319"
  },
  {
    "text": "separate repos because it's just it just end up being too hard to coordinate all the changes to them so I mean there",
    "start": "2275319",
    "end": "2281359"
  },
  {
    "text": "there are like different approaches that you can take for different situations um and that that is actually all part of",
    "start": "2281359",
    "end": "2286960"
  },
  {
    "text": "another massive refactor that's happening in JS ipfs having small modules really helps you when you're refactoring I would say that like as",
    "start": "2286960",
    "end": "2294000"
  },
  {
    "text": "much as we say that this helps with refactors what usually ends up happening with small",
    "start": "2294000",
    "end": "2299079"
  },
  {
    "text": "module authors is that they just write a new module like half the time it's just like okay well that that old thing was",
    "start": "2299079",
    "end": "2304920"
  },
  {
    "text": "like working but I need a new thing and it's a big enough API change that why don't I just write a new library and and",
    "start": "2304920",
    "end": "2310240"
  },
  {
    "text": "I actually I think that that's one of the benefits to the small modules approach is that because that could have",
    "start": "2310240",
    "end": "2315680"
  },
  {
    "text": "sometimes like I instead of using my old library I use somebody else's library because it matches the patterns that I'm",
    "start": "2315680",
    "end": "2321640"
  },
  {
    "text": "going towards better and because I I broke things out into smaller components it was easier to adopt a different",
    "start": "2321640",
    "end": "2327599"
  },
  {
    "text": "library and swap something out or you know write a new library if I need to write it so yeah I mean that that always",
    "start": "2327599",
    "end": "2332880"
  },
  {
    "text": "helps that always makes it easier I think that if you have you know the more monolithic your software is the harder that it is updated increment in any way",
    "start": "2332880",
    "end": "2339599"
  },
  {
    "text": "and this is like a case in which it's particularly difficult at the same time",
    "start": "2339599",
    "end": "2344640"
  },
  {
    "text": "if you have a large application built out of all these tiny things the challenge is then coordinating all those",
    "start": "2344640",
    "end": "2349800"
  },
  {
    "text": "changes up so if you have a refactor in one area that has application throughout the entire depth graph that update is",
    "start": "2349800",
    "end": "2356720"
  },
  {
    "text": "really painful like incredibly painful like I find it's easier to just set it aside and do the whole thing in parallel",
    "start": "2356720",
    "end": "2364079"
  },
  {
    "text": "and you know like basically ship a new version of the entire step I to do that because it is quite",
    "start": "2364079",
    "end": "2369560"
  },
  {
    "text": "difficult interesting I feel like there's a couple things to unpack there so first off your statement about",
    "start": "2369560",
    "end": "2375160"
  },
  {
    "text": "essentially just rewrite a new module is that in your mind what leads to the many old unmaintained",
    "start": "2375160",
    "end": "2381960"
  },
  {
    "text": "module problem that we end up with in JavaScript I mean is it a problem like",
    "start": "2381960",
    "end": "2387400"
  },
  {
    "text": "this is like a a tree falls in the forest and nobody's there to hear it problem right like it is not a problem",
    "start": "2387400",
    "end": "2393839"
  },
  {
    "text": "to have modules that nobody cares about or uses in the ecosystem and so if no if nobody new is adopting",
    "start": "2393839",
    "end": "2399839"
  },
  {
    "text": "it and then it doesn't actually have much of a maintenance burden and nobody really cares and they can just move on to the new thing I think that it's only",
    "start": "2399839",
    "end": "2406640"
  },
  {
    "text": "a problem when like a lot of people depend on a thing that is old and are actively depending on it and building new things on it it's not maintained yes",
    "start": "2406640",
    "end": "2414720"
  },
  {
    "text": "that's a problem that you get in any ecosystem like because that's that's like a sustainability and governance issue that's not even a problem with the",
    "start": "2414720",
    "end": "2420920"
  },
  {
    "text": "size of something right well yeah but if your general tendency is oh I need",
    "start": "2420920",
    "end": "2426319"
  },
  {
    "text": "something different so I'm going to do a new version rather than I'm going to maintain and update this old version I",
    "start": "2426319",
    "end": "2431960"
  },
  {
    "text": "feel like that's that's kind of what led to the event stream situation right like the original author had moved on three",
    "start": "2431960",
    "end": "2439720"
  },
  {
    "text": "times or something like that right he's like this doesn't work for me anymore I'm GNA do a new version oh that doesn't",
    "start": "2439720",
    "end": "2444920"
  },
  {
    "text": "work for more I'm gonna like he was done yeah but like that is a better approach than Breaking compatibility in that",
    "start": "2444920",
    "end": "2452280"
  },
  {
    "text": "module because like a lot of those changes that that he did in those new modules were different enough approaches",
    "start": "2452280",
    "end": "2458000"
  },
  {
    "text": "that they would have been like backwards andc compatible API changes so it's actually like less useful to people that",
    "start": "2458000",
    "end": "2463640"
  },
  {
    "text": "depend on a library to take a big breaking API change than it is to just build a new library because nobody",
    "start": "2463640",
    "end": "2469760"
  },
  {
    "text": "maintains those old major versions after they push a new major so they're they're effectively saying like not only are we",
    "start": "2469760",
    "end": "2476520"
  },
  {
    "text": "not maintaining the old one you don't even get to update it anymore and like we're not really taking patches to",
    "start": "2476520",
    "end": "2481920"
  },
  {
    "text": "update the old thing anymore at least like when you go and build a new thing and you say like the Breakin API",
    "start": "2481920",
    "end": "2487319"
  },
  {
    "text": "compatibilities over here in this new thing other people can go update the old thing that want to stay on the old",
    "start": "2487319",
    "end": "2493000"
  },
  {
    "text": "thing interesting so it increases fragmentation but that could be a good",
    "start": "2493000",
    "end": "2498079"
  },
  {
    "text": "thing oh definitely I mean like we we've had a lot of like painful upgrades in the in the JS ecosystem of moving to all",
    "start": "2498079",
    "end": "2504720"
  },
  {
    "text": "these new patterns but the one thing that has actually made it like not as awful is the fact that everything is so",
    "start": "2504720",
    "end": "2510200"
  },
  {
    "text": "fragmented and that BR like moving to new versions of a lot of these pieces into the new library is actually not as",
    "start": "2510200",
    "end": "2516440"
  },
  {
    "text": "difficult as it would be if we had a like a lot of really really big Frameworks like I mean python is is you",
    "start": "2516440",
    "end": "2521960"
  },
  {
    "text": "know it's been over a decade of them taking like relatively modest breaking changes to be fair and it's still a",
    "start": "2521960",
    "end": "2528640"
  },
  {
    "text": "problem right like we've gone through like what what is it now we're on like the third set of pattern breakages in",
    "start": "2528640",
    "end": "2534520"
  },
  {
    "text": "across the node e system and like things are mostly working the python case is astounding to me still I don't",
    "start": "2534520",
    "end": "2540800"
  },
  {
    "text": "understand the back the reasons behind it but it it is an astounding example of how badly things could go yeah I bet I",
    "start": "2540800",
    "end": "2548800"
  },
  {
    "text": "think I know Michael has a lot of thoughts on that actually well I I was using python when",
    "start": "2548800",
    "end": "2554440"
  },
  {
    "text": "that breaking change was taken and so and that was one of the many things that",
    "start": "2554440",
    "end": "2560119"
  },
  {
    "text": "led me to move to node and adopt node when node came out because it wasn't just that they were breaking",
    "start": "2560119",
    "end": "2565559"
  },
  {
    "text": "compatibility they were breaking compatibility to resolve none of the problems that people had comp Python and",
    "start": "2565559",
    "end": "2571319"
  },
  {
    "text": "in many ways made a lot of them worse and so yeah like they didn't deal with like concurrency they didn't with like",
    "start": "2571319",
    "end": "2578200"
  },
  {
    "text": "the performance of the VM they actually made the VM slower like they like all the feedback that people who were using python had about the language and the",
    "start": "2578200",
    "end": "2584920"
  },
  {
    "text": "platform at the time we just not addressed by it that was my main problem with it was just that there didn't seem to be alignment between the core team",
    "start": "2584920",
    "end": "2590640"
  },
  {
    "text": "and and the ecosystem and I think that that's one of the things that made the upgrade so painful right like not only",
    "start": "2590640",
    "end": "2596640"
  },
  {
    "text": "is this a breaking change where we have to update a lot of our code but it's slower like why would we take it and it",
    "start": "2596640",
    "end": "2602839"
  },
  {
    "text": "doesn't address like the actual problems that we have that we're over here trying to solve so yeah I don't know I I I",
    "start": "2602839",
    "end": "2609119"
  },
  {
    "text": "don't think that we should index too much on on that I think that other languages have done breaking changes that have been much more successful and",
    "start": "2609119",
    "end": "2615520"
  },
  {
    "text": "I think in in JavaScript we don't really break we we just take entirely new",
    "start": "2615520",
    "end": "2620800"
  },
  {
    "text": "parallel patterns the language incredibly large and then we say like",
    "start": "2620800",
    "end": "2626119"
  },
  {
    "text": "everybody should use this now it's it's worked surprisingly well",
    "start": "2626119",
    "end": "2631200"
  },
  {
    "text": "like I'm I'm honestly impressed with how much of the ecosystem has migrated to these new patterns like we effective we",
    "start": "2631200",
    "end": "2637319"
  },
  {
    "text": "have a new language and and the old language is still there but most people don't use it or learn it yeah it is a",
    "start": "2637319",
    "end": "2643599"
  },
  {
    "text": "fascinating example of how the legacy of the web and the fact that JavaScript came out of the web has influenced it",
    "start": "2643599",
    "end": "2648920"
  },
  {
    "text": "right because the number one rule is you don't break the web because there's lots of old stuff that has to keep working so",
    "start": "2648920",
    "end": "2654599"
  },
  {
    "text": "you end up with a situation where yeah anything that is a breaking API change becomes essentially maintained in",
    "start": "2654599",
    "end": "2662030"
  },
  {
    "text": "[Music] parallel",
    "start": "2662030",
    "end": "2669040"
  },
  {
    "text": "this episode is brought to you by algolia search technology to power your business trusted by twitch stripe Adobe",
    "start": "2669079",
    "end": "2675880"
  },
  {
    "text": "and many more even us yes we use them to power our search and we love the way they obsess over that developer",
    "start": "2675880",
    "end": "2681920"
  },
  {
    "text": "experience they let us fine-tune the index for the best results and report back what people are searching for even",
    "start": "2681920",
    "end": "2687520"
  },
  {
    "text": "surfacing Search terms that get zero results which we love check the show notes for a link to get started for free",
    "start": "2687520",
    "end": "2693440"
  },
  {
    "text": "or head to aliac to learn more",
    "start": "2693440",
    "end": "2699040"
  },
  {
    "text": "[Music]",
    "start": "2699850",
    "end": "2710440"
  },
  {
    "text": "all right let's talk Pro tips how to make your life your career your coding",
    "start": "2710440",
    "end": "2715800"
  },
  {
    "text": "what have you better and we're going to start with Michael cuz over the break he said he had a couple different things",
    "start": "2715800",
    "end": "2720839"
  },
  {
    "text": "and that's going to give fos more time to think about it cool yeah yeah uh so one is that I so there been like a half",
    "start": "2720839",
    "end": "2728040"
  },
  {
    "text": "dozen popular package managers for vim and all of them are like kind of annoying to work with and a lot of them",
    "start": "2728040",
    "end": "2733559"
  },
  {
    "text": "a lot of them really really leverage python uh which is fine Python's a fine language but it actually doesn't have great startup performance and so I found",
    "start": "2733559",
    "end": "2740200"
  },
  {
    "text": "the performance really lacking in those systems it turns out that Vim actually uh has a native pack adventor called",
    "start": "2740200",
    "end": "2746119"
  },
  {
    "text": "themm pack that I didn't even know about and the way that it works is that you just put a bunch of stuff in this",
    "start": "2746119",
    "end": "2751280"
  },
  {
    "text": "directory and then it just works like if you put it in a start directory it starts up and it's a little bit annoying",
    "start": "2751280",
    "end": "2757119"
  },
  {
    "text": "configure but um it's really like nicely repeatable and so this fits really well with like the way that I build out my my",
    "start": "2757119",
    "end": "2763200"
  },
  {
    "text": "Dev environment which is like through this development container um so I now have a repository Michael",
    "start": "2763200",
    "end": "2769720"
  },
  {
    "text": "sl- vmx and this is just the vmx I actually only use one right now uh which",
    "start": "2769720",
    "end": "2774800"
  },
  {
    "text": "is like a called nerd commenter but that that is now uh what I like put it's part",
    "start": "2774800",
    "end": "2780319"
  },
  {
    "text": "of my container build process where I pull that in and put it into each container so that I have all those V modules there so there's no like you",
    "start": "2780319",
    "end": "2786960"
  },
  {
    "text": "know external shell calls or anything and no no messing around with the MC file it's literally just put things in",
    "start": "2786960",
    "end": "2792240"
  },
  {
    "text": "this directory which is great and then I think secondly I may have mentioned this a few times but I've started to rethink",
    "start": "2792240",
    "end": "2797760"
  },
  {
    "text": "the the way that I approach programming as a practice and part of that has been kind of debugging my own mind and",
    "start": "2797760",
    "end": "2803960"
  },
  {
    "text": "thinking about the different states of mind that I'm in while I write code and I started to document these a bit",
    "start": "2803960",
    "end": "2809400"
  },
  {
    "text": "because as I talked to other people about Dev setups and choices and things like that it it's good to get on the",
    "start": "2809400",
    "end": "2815000"
  },
  {
    "text": "same page in terms of language so um at Michael wayof code way- of- code um I've",
    "start": "2815000",
    "end": "2821640"
  },
  {
    "text": "started to document that and and essentially it's just like they three kind of states of mind that you cycle",
    "start": "2821640",
    "end": "2827520"
  },
  {
    "text": "through while you program and each state of mind actually lends itself to very different tools and workflow so that's",
    "start": "2827520",
    "end": "2834280"
  },
  {
    "text": "an interesting thing to check out and uh some people have been asking questions as well that I've been answering in the",
    "start": "2834280",
    "end": "2839680"
  },
  {
    "text": "issues and whatnot so that's about it cool awesome Divia are you ready you",
    "start": "2839680",
    "end": "2846160"
  },
  {
    "text": "look ready yeah I can go so one of the things that I've been doing a lot this year in line",
    "start": "2846160",
    "end": "2853599"
  },
  {
    "text": "with with making resolutions I didn't really make any resolutions but one of the things I've been forcing myself to",
    "start": "2853599",
    "end": "2859760"
  },
  {
    "text": "do better is I tend to push tasks that I",
    "start": "2859760",
    "end": "2866319"
  },
  {
    "text": "don't want to do to the next day for eternity until I actually really have to",
    "start": "2866319",
    "end": "2872240"
  },
  {
    "text": "do them that includes planning for travel if I have to go to a conference I generally",
    "start": "2872240",
    "end": "2877800"
  },
  {
    "text": "plan for travel not as early as I should like I because I just really hate the",
    "start": "2877800",
    "end": "2884359"
  },
  {
    "text": "process of doing that and it adds to a lot of anxiety because I just generally",
    "start": "2884359",
    "end": "2889760"
  },
  {
    "text": "keep thinking about the thing I should be doing but I don't want to do even though I have the time like I might have a pocket of time that I can work on it",
    "start": "2889760",
    "end": "2895960"
  },
  {
    "text": "and I don't because I'd rather do something else and so one of the things I've been pushing myself to do more is",
    "start": "2895960",
    "end": "2901079"
  },
  {
    "text": "just to do the thing so like just send the email it's not that hard and what helps with that is to write down like in",
    "start": "2901079",
    "end": "2907680"
  },
  {
    "text": "the morning I'll just write down all the things I want to do including all the microtasks and it really helps to write",
    "start": "2907680",
    "end": "2913319"
  },
  {
    "text": "it down because then I can see what I need to do for the day including big tasks so if I need to write a blog post",
    "start": "2913319",
    "end": "2919960"
  },
  {
    "text": "or create a specific tool then I can work on those cuz that takes up a lot of",
    "start": "2919960",
    "end": "2925640"
  },
  {
    "text": "Mind space but then when there are breaks in tasks that I'm working on I can just look at the microtasks that I",
    "start": "2925640",
    "end": "2932000"
  },
  {
    "text": "need to do and do those which actually adds to me getting things done",
    "start": "2932000",
    "end": "2937559"
  },
  {
    "text": "more so than if I just don't write them down and try not to think that they exist and that's really helped me just",
    "start": "2937559",
    "end": "2944000"
  },
  {
    "text": "to like manage anxiety with not have not doing the things I should be doing and also making sure that I'm tracking",
    "start": "2944000",
    "end": "2949599"
  },
  {
    "text": "progress cuz it's it's nice to be like oh I only did two large tasks but I did like 10 Micro tasks that's actually",
    "start": "2949599",
    "end": "2956400"
  },
  {
    "text": "really satisfying and then alongside that is also an eternal goal of mine has",
    "start": "2956400",
    "end": "2962319"
  },
  {
    "text": "been just to write a lot more because I don't write often I tend to get get into like rhythms of writing a lot and then",
    "start": "2962319",
    "end": "2969200"
  },
  {
    "text": "not writing which might happen again but for this month I've been blogging every",
    "start": "2969200",
    "end": "2974799"
  },
  {
    "text": "day and the way I've done that is through micro blogging so essentially instead of expecting myself to write a",
    "start": "2974799",
    "end": "2981640"
  },
  {
    "text": "really long blog post I'll write a tiny one and like publish that I've been",
    "start": "2981640",
    "end": "2986799"
  },
  {
    "text": "publishing to Dev too and specifically given myself like a area of focus so",
    "start": "2986799",
    "end": "2992760"
  },
  {
    "text": "it's January so I created a Blog series called amary where I talk about jamstack",
    "start": "2992760",
    "end": "2999359"
  },
  {
    "text": "cuz puns are fun and it's been great just because it's like again a task that I do every day so um in the mornings",
    "start": "2999359",
    "end": "3006640"
  },
  {
    "text": "generally is when I write and so I can sit down and write for you know 30 minutes to an hour and that gives me",
    "start": "3006640",
    "end": "3013559"
  },
  {
    "text": "like one I'm accomplished because I did a thing and I published in the world and then that accomplishment I can just ride",
    "start": "3013559",
    "end": "3019640"
  },
  {
    "text": "that wave of getting things done for the rest of the day awesome I'll go next and",
    "start": "3019640",
    "end": "3024680"
  },
  {
    "text": "then we'll close out with FAS so my Pro tip is",
    "start": "3024680",
    "end": "3030440"
  },
  {
    "text": "to identify the things that you want to be learning and growing on and then do everything you can to move that the",
    "start": "3030440",
    "end": "3038040"
  },
  {
    "text": "process of doing the learning and growing there out of volitional something that you're deciding to do over and over again so set up",
    "start": "3038040",
    "end": "3045000"
  },
  {
    "text": "commitments and habits that are going to force you into a pattern of growth for those things the best example I have",
    "start": "3045000",
    "end": "3051640"
  },
  {
    "text": "this have for this was when I first started working on speaking and public speaking I signed up for for Toast",
    "start": "3051640",
    "end": "3057000"
  },
  {
    "text": "Masters I would go every week regardless of whether or not I had something ready I would go it would force me to speak it",
    "start": "3057000",
    "end": "3062760"
  },
  {
    "text": "would force me to do things sometimes I was signing up for things that were volutional but regardless the default",
    "start": "3062760",
    "end": "3068720"
  },
  {
    "text": "was to go to put myself in an environment where I'm practicing where I'm learning and where you the",
    "start": "3068720",
    "end": "3073920"
  },
  {
    "text": "environment was going to encourage me to keep making progress on this thing that I had decided that I wanted to because",
    "start": "3073920",
    "end": "3079799"
  },
  {
    "text": "willpower is hard and anything that you set up to require willpower will probably not happen and it'll quickly",
    "start": "3079799",
    "end": "3086160"
  },
  {
    "text": "fall off off and so you commitments to other people and habits where you just",
    "start": "3086160",
    "end": "3093119"
  },
  {
    "text": "go and it's not a decision it's just something that happens make a huge difference for your ability to actually",
    "start": "3093119",
    "end": "3100760"
  },
  {
    "text": "continue to learn and grow and you know if there's anything we know about our industry or the way the world is growing",
    "start": "3100760",
    "end": "3105920"
  },
  {
    "text": "we have to continually learn and grow if we want to succeed you have to keep moving in order to even stand still much",
    "start": "3105920",
    "end": "3112760"
  },
  {
    "text": "less get better so identify what it is that you are working on right now what",
    "start": "3112760",
    "end": "3118079"
  },
  {
    "text": "is your learning path what is your growth path make the decision once sign up for something that happens every week",
    "start": "3118079",
    "end": "3123680"
  },
  {
    "text": "or every month or every day what is it so that it's no longer a decision you're making over and over again to learn it's",
    "start": "3123680",
    "end": "3129799"
  },
  {
    "text": "just part of your routine and let's close with for us for us Pro tips for us",
    "start": "3129799",
    "end": "3135280"
  },
  {
    "text": "K you should have gone last that was the that would have been the perfect one to end on mine is my Pro tip is that one thing",
    "start": "3135280",
    "end": "3144720"
  },
  {
    "text": "you know along the lines of what you were saying cable is actually to get in a habit of learning one new thing a day",
    "start": "3144720",
    "end": "3151319"
  },
  {
    "text": "so it's it's a thing you can incorporate into your into your workflow so that it's not you know it's not a thing that",
    "start": "3151319",
    "end": "3156359"
  },
  {
    "text": "you have to go and spend a whole day learning a new thing but it's like while you're doing a task if you can find one part of it that can be slightly improved",
    "start": "3156359",
    "end": "3163760"
  },
  {
    "text": "or slightly optimized and uh and if you just keep doing that over a course of a long time you end up you know that one",
    "start": "3163760",
    "end": "3169720"
  },
  {
    "text": "small habit ends up uh you know leading you to a place where you know at the end of the year you've learned a whole bunch of of little things and you're much",
    "start": "3169720",
    "end": "3175720"
  },
  {
    "text": "better so along those lines I have a concrete suggestion of something that's really powerful I'm sure a lot of the",
    "start": "3175720",
    "end": "3182079"
  },
  {
    "text": "listeners know about you know bash aliases uh or Z you know whatever shell you use you can set up aliases so that",
    "start": "3182079",
    "end": "3188480"
  },
  {
    "text": "you can type little shortcut words that will end up running a much longer command um if you don't know about that",
    "start": "3188480",
    "end": "3194119"
  },
  {
    "text": "check that out it's really powerful it's a really powerful way to sort of save a lot of typing for commands that you type",
    "start": "3194119",
    "end": "3199400"
  },
  {
    "text": "really frequently so stuff that I type really frequently are things like npm start uh or npm test uh and so for those",
    "start": "3199400",
    "end": "3207400"
  },
  {
    "text": "I have little aliases where I can just type the letter T to run npm test or you",
    "start": "3207400",
    "end": "3212440"
  },
  {
    "text": "know uh you can run you can type the letter you to run npm update and little things like this that I do frequently",
    "start": "3212440",
    "end": "3218200"
  },
  {
    "text": "throughout the day are just much faster now and a lot quicker to type and also a really cool Alias that helps me",
    "start": "3218200",
    "end": "3227240"
  },
  {
    "text": "publish a lot of packages is I have little aliases for publishing new versions because there's a whole set of",
    "start": "3227240",
    "end": "3233000"
  },
  {
    "text": "steps that usually need to run when you do that things like um making sure that the current working directory is clean",
    "start": "3233000",
    "end": "3241000"
  },
  {
    "text": "you don't have changes that are staged checking what files are going to actually be included in the package uh",
    "start": "3241000",
    "end": "3246960"
  },
  {
    "text": "running npm install and npm test and making sure the tests pass actually incrementing the version and making a",
    "start": "3246960",
    "end": "3253680"
  },
  {
    "text": "commit for that setting a git tag and then running any build scripts that may be present or updating the authors that",
    "start": "3253680",
    "end": "3261119"
  },
  {
    "text": "are in if you have like an author's file there's a whole bunch of things you can do and then finally actually pushing that up to n M and I have all of that",
    "start": "3261119",
    "end": "3267640"
  },
  {
    "text": "behind a single command which is really cool so I can literally just say patch",
    "start": "3267640",
    "end": "3272680"
  },
  {
    "text": "or minor or major and then like a whole series of things just gets kicked off and it's it feels really powerful to be",
    "start": "3272680",
    "end": "3279000"
  },
  {
    "text": "able to do that so that's a huge Pro tip for me and if you ever wonder how some npm authors can publish you know like 20",
    "start": "3279000",
    "end": "3287040"
  },
  {
    "text": "or 50 times in a day this is how they're doing it they're not they're not superhuman like doing like things",
    "start": "3287040",
    "end": "3293040"
  },
  {
    "text": "constantly it's like they have like a giant script that's basically running that's like doing all the little things for them that makes makes things appear",
    "start": "3293040",
    "end": "3299760"
  },
  {
    "text": "to be really fast so um that's my Pro tip I don't even run this manually I",
    "start": "3299760",
    "end": "3306040"
  },
  {
    "text": "just have GitHub actions to it always one uping me Michael you always",
    "start": "3306040",
    "end": "3312000"
  },
  {
    "text": "got yeah I read an article recently about how the combination of",
    "start": "3312000",
    "end": "3317760"
  },
  {
    "text": "accumulative advantage and winner take all effects means that often times even",
    "start": "3317760",
    "end": "3323359"
  },
  {
    "text": "1% improvements if you're 1% better than the competition I in something you can get disproportionate benefits whether",
    "start": "3323359",
    "end": "3330039"
  },
  {
    "text": "it's you know double the effect or 100% of the victory or what have you so these",
    "start": "3330039",
    "end": "3335400"
  },
  {
    "text": "little micro improvements over time they add up and make a massive difference in",
    "start": "3335400",
    "end": "3340599"
  },
  {
    "text": "your productivity and success all right with that I think that wraps up our JS party for the day thank",
    "start": "3340599",
    "end": "3348599"
  },
  {
    "text": "you everyone for coming thank you Divia thank you for Ross thank you Michael this has been a lot of fun and we'll",
    "start": "3348599",
    "end": "3355640"
  },
  {
    "text": "catch you next week this is kall signing out thank you for tuning in to JS party",
    "start": "3355640",
    "end": "3362640"
  },
  {
    "text": "we record live on Thursdays come hang out with us it's a lot of fun if you have an awesome show idea or guest you'd",
    "start": "3362640",
    "end": "3368079"
  },
  {
    "text": "like to have us invite on let us know at chain.com request or hit us up on",
    "start": "3368079",
    "end": "3373200"
  },
  {
    "text": "Twitter we're JS party FM our beats are produced by the one and only breakmaster cylinder and we're brought to you by",
    "start": "3373200",
    "end": "3378799"
  },
  {
    "text": "awesome sponsors support them they support us we've got fastly on bandwidth lenoe on hosting and robar on bugs",
    "start": "3378799",
    "end": "3384880"
  },
  {
    "text": "thanks again for listening we'll talk to you next [Music]",
    "start": "3384880",
    "end": "3407559"
  },
  {
    "text": "week",
    "start": "3409039",
    "end": "3412039"
  }
]