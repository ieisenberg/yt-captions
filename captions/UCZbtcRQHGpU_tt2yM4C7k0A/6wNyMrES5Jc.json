[
  {
    "text": "B for Chang log is provided by fastly learn more at fastly.com we move fast",
    "start": "80",
    "end": "6279"
  },
  {
    "text": "and fix things here at change log because of rbar check them out at rar.com and we're hosted on Leno servers",
    "start": "6279",
    "end": "12799"
  },
  {
    "text": "head to lin.com changelog this episode is sponsored by our friends at rbar how important is it",
    "start": "12799",
    "end": "19359"
  },
  {
    "text": "for you to catch errors before your users do what if you could resolve those errors in minutes and then deploy with",
    "start": "19359",
    "end": "25240"
  },
  {
    "text": "confidence that's exactly what robar enables for software teams one of the most frustrating things we all deal with",
    "start": "25240",
    "end": "30960"
  },
  {
    "text": "is errors most teams either a rely on their users to report errors or B use",
    "start": "30960",
    "end": "36040"
  },
  {
    "text": "log files and lists of Errors to debug problems that's such a waste of time instantly know what's broken and why",
    "start": "36040",
    "end": "42640"
  },
  {
    "text": "with rollar reduce time wasted debugging and automatically capture errors alongside Rich diagnostic data to help",
    "start": "42640",
    "end": "49600"
  },
  {
    "text": "you defeat impactful errors you can integrate rollar into your existing workflow it integrates with your source",
    "start": "49600",
    "end": "55160"
  },
  {
    "text": "code repository and deployment system to give you deep insights into exactly what changes has caused each error give",
    "start": "55160",
    "end": "61399"
  },
  {
    "text": "rollar a try today at no cost to you no credit card is required our listeners get access to the bootstrap plan with a",
    "start": "61399",
    "end": "68040"
  },
  {
    "text": "100,000 events for free for 90 days to get started head to rar.com",
    "start": "68040",
    "end": "74840"
  },
  {
    "text": "[Music]",
    "start": "74840",
    "end": "80048"
  },
  {
    "text": "[Music] changelog welcome to JS party a weekly",
    "start": "84930",
    "end": "90400"
  },
  {
    "text": "celebration of JavaScript in the web tune in live on Thursdays at 1 p.m. us",
    "start": "90400",
    "end": "95479"
  },
  {
    "text": "Eastern at changel law.com join the community and slack with us in real time during the shows at the Chang law.com",
    "start": "95479",
    "end": "102280"
  },
  {
    "text": "Community follow us on Twitter or at JSP party FM and now on to the",
    "start": "102280",
    "end": "108640"
  },
  {
    "text": "show hello there and welcome to another episode of JS party where every week we are throwing a party about JavaScript",
    "start": "108640",
    "end": "115799"
  },
  {
    "text": "and the web I'm your MC for this show kall and I am super pumped about today's episode because we're not just talking",
    "start": "115799",
    "end": "121920"
  },
  {
    "text": "JavaScript we're actually jumping over and talking about web assembly and we have a special guest joining us today",
    "start": "121920",
    "end": "127159"
  },
  {
    "text": "Jay Phelps hi Jay hey dude that song like now I know why it's called JS party",
    "start": "127159",
    "end": "133000"
  },
  {
    "text": "I wanted to dance I dance every time if you can see me I'm I'm here rocking out in front of my microphone uh awesome",
    "start": "133000",
    "end": "140599"
  },
  {
    "text": "thanks for joining us also on the line we have sus Hinton hi sus hey it's good to be back thanks for having me I'm really excited about this topic today as",
    "start": "140599",
    "end": "146879"
  },
  {
    "text": "well yeah I think it'll be good um so we have lot of interesting topics to discuss related to web assembly but I",
    "start": "146879",
    "end": "153640"
  },
  {
    "text": "think there's a key thing we have to figure out first which is how do we pronounce the abbreviation is it wasum",
    "start": "153640",
    "end": "161120"
  },
  {
    "text": "or is it wasm so that's a great question I think it's a more of a regional thing",
    "start": "161120",
    "end": "166840"
  },
  {
    "text": "because I say wasm but a majority of the people in the community group and in the working group call it",
    "start": "166840",
    "end": "173599"
  },
  {
    "text": "wasm um yeah I I honestly I have no idea I don't think there's a correct",
    "start": "173599",
    "end": "179159"
  },
  {
    "text": "pronunciation I think it's just um Regional and then also like for me personally wasm just feels weird to say",
    "start": "179159",
    "end": "187879"
  },
  {
    "text": "like where I mean jar Jared argues that it",
    "start": "187879",
    "end": "193000"
  },
  {
    "text": "should be wasm because then it sound rhymes with awesome and so we can have our title for today wasm is awesome",
    "start": "193000",
    "end": "199519"
  },
  {
    "text": "exactly but at the same time WM you can be like",
    "start": "199519",
    "end": "204840"
  },
  {
    "text": "was you know like the Bud Light commercials well in one of our one of our Chris Hiller who's not on today he",
    "start": "204840",
    "end": "212400"
  },
  {
    "text": "had he wrote a poem for web assembly he said instructions by Christopher Hiller",
    "start": "212400",
    "end": "218519"
  },
  {
    "text": "wasm hasm you ryes yes we we do I didn't",
    "start": "218519",
    "end": "228319"
  },
  {
    "text": "prepare a wrap for you Jay but uh we we like to goof off a little bit so let's actually step back since this is",
    "start": "228319",
    "end": "234319"
  },
  {
    "text": "typically a conversation about JavaScript and not all of our audience maybe knows that much about about web",
    "start": "234319",
    "end": "240439"
  },
  {
    "text": "assembly uh you're our one of our experts uh J you want to kind of give an",
    "start": "240439",
    "end": "245519"
  },
  {
    "text": "overview of of what it is and what it enables sure yeah it's like the you know",
    "start": "245519",
    "end": "251840"
  },
  {
    "text": "like the the phrase that they that they like to use is that it's an efficient low-level bite code for the web um but",
    "start": "251840",
    "end": "258320"
  },
  {
    "text": "we kind of have to distill that down and talk a little bit more about what that means um like the E like the efficiency",
    "start": "258320",
    "end": "263560"
  },
  {
    "text": "side of things it it kind of means efficient in in almost every single way not just efficient as in like performant",
    "start": "263560",
    "end": "271880"
  },
  {
    "text": "uh while it's while the application's actually running which it is uh but it's also efficient in trying to be efficient",
    "start": "271880",
    "end": "278479"
  },
  {
    "text": "in the actual size of the files and also efficient in in sending that those files",
    "start": "278479",
    "end": "284680"
  },
  {
    "text": "over the internet and then getting them compiled to the person's native machine code so in the last couple years there's",
    "start": "284680",
    "end": "291360"
  },
  {
    "text": "been a lot of discussion about the uh about the parstimes of things like",
    "start": "291360",
    "end": "297479"
  },
  {
    "text": "JavaScript right so like you you may have worked really hard to get your bundle size down to 500 Meg or or less",
    "start": "297479",
    "end": "304479"
  },
  {
    "text": "or more or whatever and now you're looking at the performance flame graphs and seeing that you know it takes a long",
    "start": "304479",
    "end": "310600"
  },
  {
    "text": "time especially on these mobile devices to actually even parse and compile the JavaScript and with web assembly the",
    "start": "310600",
    "end": "318160"
  },
  {
    "text": "goal is to do something totally different to do what's called streaming compilation and that means that while",
    "start": "318160",
    "end": "325280"
  },
  {
    "text": "the browser is downloading those bytes from the internet it can actually compile it right then and there it",
    "start": "325280",
    "end": "331120"
  },
  {
    "text": "parses and compiles the web assembly by code while it's being downloaded it doesn't have to wait for the file to to",
    "start": "331120",
    "end": "337240"
  },
  {
    "text": "complete and that's huge because in in in this this is a fairly new feature added to web assembly in in in some",
    "start": "337240",
    "end": "343919"
  },
  {
    "text": "browsers like uh in particularly Firefox and chrome but in in those in in those",
    "start": "343919",
    "end": "349440"
  },
  {
    "text": "instances for example uh Firefox is able to download and compile the web assembly",
    "start": "349440",
    "end": "355759"
  },
  {
    "text": "or excuse me the Firefox is able to compile the web assembly faster than it actually is is downloaded over the internet on average um you know there's",
    "start": "355759",
    "end": "362880"
  },
  {
    "text": "certain cases where like your you know internet's super super fast and your computer super super slow um where",
    "start": "362880",
    "end": "369039"
  },
  {
    "text": "that's not going to be true but particularly on things like mobile devices that can be huge because you",
    "start": "369039",
    "end": "374599"
  },
  {
    "text": "know now the compilation that that parsing and compile step that runs in your browser is no longer the bottleneck",
    "start": "374599",
    "end": "381199"
  },
  {
    "text": "it's you know the back to being the internet there's two things in there I think that I would be worth breaking down so one was sort of compilation as",
    "start": "381199",
    "end": "388680"
  },
  {
    "text": "you go which in JavaScript you you kind of need to have Global visibility before you can truly compile it is that not",
    "start": "388680",
    "end": "394919"
  },
  {
    "text": "true for web assembly it's it is it's somewhat true for for web assembly you it can compile it because of the way the",
    "start": "394919",
    "end": "401720"
  },
  {
    "text": "things are broken up into section it's going to depend on the the the actual virtual machine implementation about",
    "start": "401720",
    "end": "407280"
  },
  {
    "text": "whether it's able to compile in between different segments like the I don't want to get too low low level but the B the",
    "start": "407280",
    "end": "414599"
  },
  {
    "text": "the files themselves are broken up into these segments and the different",
    "start": "414599",
    "end": "419680"
  },
  {
    "text": "different things are organized inside the files in a way that you might not normally like if you don't know anything about binaries and like native compiled",
    "start": "419680",
    "end": "427639"
  },
  {
    "text": "code it might be weird to actually distill down what about what the files contain because they split things like",
    "start": "427639",
    "end": "434360"
  },
  {
    "text": "the code bodies of all the functions are put in different sections than like the names for the functions and for um",
    "start": "434360",
    "end": "440759"
  },
  {
    "text": "Imports and for uh different like all your strings and all the all the data",
    "start": "440759",
    "end": "446039"
  },
  {
    "text": "segment things like that are going to be in totally different sections and and uh and so depending on the actual",
    "start": "446039",
    "end": "454879"
  },
  {
    "text": "virtual machine it may be able to compile just the individual's uh sections separately like it may have to",
    "start": "454879",
    "end": "461120"
  },
  {
    "text": "wait for that section to finish like finish downloading before it can compile it but in but in um I don't want to",
    "start": "461120",
    "end": "466520"
  },
  {
    "text": "speak for them but my understanding of the um the mozilla's virtual machine implementation is that it is able to",
    "start": "466520",
    "end": "472840"
  },
  {
    "text": "compile them as they're coming in even within the same segments the same the same sections and and then that",
    "start": "472840",
    "end": "480680"
  },
  {
    "text": "yeah it is very cool and um so it has to with JavaScript there's just a lot like",
    "start": "480680",
    "end": "486840"
  },
  {
    "text": "JavaScript was not designed as a compilation Target it was designed as a programming language like so all these",
    "start": "486840",
    "end": "492800"
  },
  {
    "text": "type of tricks that they can do to make things super easy to parse super easy to",
    "start": "492800",
    "end": "498039"
  },
  {
    "text": "compile those are things that weren't thought of when when JavaScript was being made right not at all like it",
    "start": "498039",
    "end": "503800"
  },
  {
    "text": "wasn't even a fleeting thought and so that's why web assembly is such a great compilation Target and that's what it's",
    "start": "503800",
    "end": "509520"
  },
  {
    "text": "intended as it's not intended for you to write it by hand although you certainly can just like you can write native",
    "start": "509520",
    "end": "516399"
  },
  {
    "text": "machine code By Hand by using an assembly language like a textual representation of the machine code you can do the exact same thing with web",
    "start": "516399",
    "end": "522800"
  },
  {
    "text": "assembly there's a textual representation of the B code and uh",
    "start": "522800",
    "end": "528519"
  },
  {
    "text": "that's why that's actually one reason one thing I wanted to talk about which is that web the name web assembly is",
    "start": "528519",
    "end": "534320"
  },
  {
    "text": "actually a misnomer because web assembly itself is neither for the web or like no",
    "start": "534320",
    "end": "540760"
  },
  {
    "text": "neither specifically for the web nor is it actually an Assembly Language it's it's a bite code not an assembly",
    "start": "540760",
    "end": "546079"
  },
  {
    "text": "language and so it it while it sounds super cool and buzzworthy buzzworthy um",
    "start": "546079",
    "end": "551440"
  },
  {
    "text": "it's actually not a web assembly and the reason why I'm saying it's not for the web is the specification actually is",
    "start": "551440",
    "end": "557959"
  },
  {
    "text": "completely agnostic of a browser or JavaScript or anything like that and",
    "start": "557959",
    "end": "563519"
  },
  {
    "text": "that's done intentional because designing these type of this this low-l",
    "start": "563519",
    "end": "568600"
  },
  {
    "text": "bike code this is pretty unprecedented in fact where you have all these major companies coming together and deciding",
    "start": "568600",
    "end": "575959"
  },
  {
    "text": "on an instruction set this has never been done like literally I'm not kidding it's never been done where uh all these",
    "start": "575959",
    "end": "582880"
  },
  {
    "text": "major companies come together and create an instruction set and so they they they knew that this was unprecedented knew",
    "start": "582880",
    "end": "588160"
  },
  {
    "text": "that this is going to be useful work outside of just the browser and that's why they you know been careful to not",
    "start": "588160",
    "end": "595079"
  },
  {
    "text": "make it specific to the web per se now they keep the web in mind and certainly",
    "start": "595079",
    "end": "600320"
  },
  {
    "text": "what's that oh so something you said there got me thinking so essentially this is like redesigning Java bite code",
    "start": "600320",
    "end": "606120"
  },
  {
    "text": "or something so you could have a global global virtual machine but instead of it being by owned by a single company that",
    "start": "606120",
    "end": "612480"
  },
  {
    "text": "uh some someone like Oracle could acquire and do nasty things to it's",
    "start": "612480",
    "end": "617600"
  },
  {
    "text": "developed in the open yeah exactly I mean there's there's some an there's some certainly some some things that are",
    "start": "617600",
    "end": "623399"
  },
  {
    "text": "analogous to to the jvm and the jbm bike code um and you know there's been been a",
    "start": "623399",
    "end": "629800"
  },
  {
    "text": "couple attempts at doing similar things to this like creating a a generic bik code that's super low level like the jvm",
    "start": "629800",
    "end": "636040"
  },
  {
    "text": "is kind of a bad example simply because it is very like if you if you actually look at the jvm bik codes they're very",
    "start": "636040",
    "end": "642320"
  },
  {
    "text": "specific to Java it's like it's very clear they had Java in mind when they were like very Java in mind when they",
    "start": "642320",
    "end": "648639"
  },
  {
    "text": "were uh designing the B codes um whereas with web assembly it is it's it's pretty",
    "start": "648639",
    "end": "654040"
  },
  {
    "text": "generic it's pretty low level it's about as low level as you can get while still abstracting the underlying machine but",
    "start": "654040",
    "end": "660720"
  },
  {
    "text": "uh so that's so I think that's important like it's very very very lowlevel it's not something you typically will write",
    "start": "660720",
    "end": "666120"
  },
  {
    "text": "by hand um unless you're looking for Ultra performance or you're working on tooling interesting so if we kind of",
    "start": "666120",
    "end": "671839"
  },
  {
    "text": "explore that direction then um so it sounds like what you're saying is we're calling it web assembly but really the",
    "start": "671839",
    "end": "678440"
  },
  {
    "text": "web is like the the web is base camp right Everest is some place that is essentially a universal virtual machine",
    "start": "678440",
    "end": "685560"
  },
  {
    "text": "uh yep that's exactly right and I I think that's one of the most exciting things about web assembly to me is that",
    "start": "685560",
    "end": "692440"
  },
  {
    "text": "it's not tied to the future of of browsers and all that stuff per se like",
    "start": "692440",
    "end": "697639"
  },
  {
    "text": "it there already are are places and people who are using web assembly in completely unrelated web cases like like",
    "start": "697639",
    "end": "704279"
  },
  {
    "text": "the ethereum virtual machine for example is being Rewritten to use web assembly as their Isa um and their their",
    "start": "704279",
    "end": "710240"
  },
  {
    "text": "instruction set excuse me and uh and there's other use cases as well there's",
    "start": "710240",
    "end": "715959"
  },
  {
    "text": "even there's even a person who's on the community group who is trying to to create an actual micr kernel like the",
    "start": "715959",
    "end": "722360"
  },
  {
    "text": "the the core functionality of an operating system that runs web assembly natively and like without needing to use",
    "start": "722360",
    "end": "728839"
  },
  {
    "text": "system calls for like if you know a lot about OS stuff they have different like rings to the security privileges of of",
    "start": "728839",
    "end": "734920"
  },
  {
    "text": "an operating system and with web assembly the way it's sandboxed you'd actually don't need those Rings if if",
    "start": "734920",
    "end": "741760"
  },
  {
    "text": "all applications were written in web uh and compiled to web assembly and so you could do some very",
    "start": "741760",
    "end": "748000"
  },
  {
    "text": "interesting optimizations there there really is not a lot of preceden for this so it's it's the the the long-term",
    "start": "748000",
    "end": "754880"
  },
  {
    "text": "viability of it is open question but uh kind of a really cool and exciting thing because I I would love to see web",
    "start": "754880",
    "end": "761160"
  },
  {
    "text": "assembly be that Gap that bridging of native applications to web applications",
    "start": "761160",
    "end": "766240"
  },
  {
    "text": "and making it so that eventually the browser just gets absorbed into the operating system and and there's no distinction because I think that that's",
    "start": "766240",
    "end": "773240"
  },
  {
    "text": "you know Chrome OS is a perfect example of of what does the future maybe look like you know where the brow and the OS",
    "start": "773240",
    "end": "779920"
  },
  {
    "text": "are one and the same and I think web assembly really helps bridge that Gap I could see like this is a huge I hav't",
    "start": "779920",
    "end": "787240"
  },
  {
    "text": "you know huge bet type of thing but I could see companies you know like Apple and Google you know with their Android",
    "start": "787240",
    "end": "793839"
  },
  {
    "text": "and iOS deciding to eventually support web assembly as a first class application um format instead of their",
    "start": "793839",
    "end": "801000"
  },
  {
    "text": "proprietary um Solutions because they both have to do sandboxing and they both came up with their own proprietary way",
    "start": "801000",
    "end": "806800"
  },
  {
    "text": "of doing that right well and they right now they're already supporting a JavaScript engine as an increasingly",
    "start": "806800",
    "end": "814320"
  },
  {
    "text": "first class way to develop applications so this is kind of a just one step further down the road potentially more",
    "start": "814320",
    "end": "820399"
  },
  {
    "text": "General right huh yeah and you could you could the you could theoretically ship um web assembly as a as in in an app",
    "start": "820399",
    "end": "827600"
  },
  {
    "text": "today on both those platforms since they have the you they have JavaScript core and all that and V8 um I I don't know of",
    "start": "827600",
    "end": "834759"
  },
  {
    "text": "anyone who's doing so though interesting so stepping back a little bit to browsers uh partially because a lot of",
    "start": "834759",
    "end": "840800"
  },
  {
    "text": "our audiences kind of web developer focused um you know Firefox has really been pushing the edge on this and I",
    "start": "840800",
    "end": "847639"
  },
  {
    "text": "think you know their super high performance compiler showing essentially they can you know load and compile this",
    "start": "847639",
    "end": "854720"
  },
  {
    "text": "stuff as fast as it comes over the wire U is really highlighting the potential",
    "start": "854720",
    "end": "859800"
  },
  {
    "text": "of web assembly is there any info out there about some of the other major browsers doing that level of",
    "start": "859800",
    "end": "865240"
  },
  {
    "text": "optimization I mean I I don't see as much news but you're you're in the know",
    "start": "865240",
    "end": "870720"
  },
  {
    "text": "you know are Chrome and Edge and Safari are those teams working on how do we get this thing you know compiling as fast as",
    "start": "870720",
    "end": "877320"
  },
  {
    "text": "it comes over the wire oh you they AB they absolutely are um they don't talk about it as much as Milla does and",
    "start": "877320",
    "end": "884839"
  },
  {
    "text": "there's you know the last I checked at least um they had a streaming like",
    "start": "884839",
    "end": "890000"
  },
  {
    "text": "Chrome I don't remember if it's in the actual release or if it was on the canary that I was using but Chrome did",
    "start": "890000",
    "end": "895079"
  },
  {
    "text": "support streaming compilation but the performance of it was was not not as um",
    "start": "895079",
    "end": "900759"
  },
  {
    "text": "what's the word the tful word it was not as good as as Mo as Firefox at the time but it's you know it's an incremental",
    "start": "900759",
    "end": "907480"
  },
  {
    "text": "thing right like do make it I I really do subscribe to the make it work make it right make it fast type of mentality and",
    "start": "907480",
    "end": "916399"
  },
  {
    "text": "and they they do as well I mean I don't know if they officially subscribe to that but they at least certainly act",
    "start": "916399",
    "end": "921519"
  },
  {
    "text": "like they do and uh and uh so really there's you know there's a lot of still",
    "start": "921519",
    "end": "928120"
  },
  {
    "text": "there's a lot of room head for optimization in in all these major browsers and they kind of you know we'll",
    "start": "928120",
    "end": "933519"
  },
  {
    "text": "go head-to-head um you know one one thing will be faster in one browser and then a totally other thing will be",
    "start": "933519",
    "end": "939279"
  },
  {
    "text": "faster in the other browser and you know it's the same same world as JavaScript um and uh like one of the biggest things",
    "start": "939279",
    "end": "946480"
  },
  {
    "text": "and we'll touch on that I'm sure later is just the the uh calling into JavaScript performance you know there's been a ton of work that's been",
    "start": "946480",
    "end": "952720"
  },
  {
    "text": "prioritizing on making that faster just so it's more practical yeah so that's actually an interesting area to explore",
    "start": "952720",
    "end": "959360"
  },
  {
    "text": "um how how easy or hard is it to access Dom and other you know apis that right",
    "start": "959360",
    "end": "966000"
  },
  {
    "text": "now you would access in JavaScript so that's one of the interesting things about web assembly currently and one of",
    "start": "966000",
    "end": "971600"
  },
  {
    "text": "the reasons why I attribute web assembly has not taken off is web assembly so",
    "start": "971600",
    "end": "977959"
  },
  {
    "text": "they they the community group and the working group definitely subscribe to the make it work make it right make it fast type of thing and so there you know",
    "start": "977959",
    "end": "985880"
  },
  {
    "text": "everything's very minimal MVP uh as as far as the abilities and stuff like that so in the MVP of of web assembly web",
    "start": "985880",
    "end": "993600"
  },
  {
    "text": "assembly itself cannot access the Dom directly it can't it can't actually do any external IO or side effects um",
    "start": "993600",
    "end": "1002519"
  },
  {
    "text": "directly so it can't to make Ajax request it can't open files it can't do signal interrupts it you know it can't",
    "start": "1002519",
    "end": "1008880"
  },
  {
    "text": "do any of those external stuff instead it has to call into JavaScript to do",
    "start": "1008880",
    "end": "1013920"
  },
  {
    "text": "that so JavaScript has to basically instantiate a web assembly module and say hey here are the functions you can",
    "start": "1013920",
    "end": "1020600"
  },
  {
    "text": "call and so it has to give bindings to Dom related stuff and in web assembly",
    "start": "1020600",
    "end": "1027240"
  },
  {
    "text": "currently you can't pass around like a Dom node or manipulate Dom or anything like that because there just there's no",
    "start": "1027240",
    "end": "1033480"
  },
  {
    "text": "concept of it there's basically a giant linear memory that is a bunch of numbers",
    "start": "1033480",
    "end": "1038558"
  },
  {
    "text": "just like you know you would deal with with um with native code native machine code there are no abstractions currently",
    "start": "1038559",
    "end": "1044839"
  },
  {
    "text": "about like structs and objects and and garbage collection and stuff like that um so because of that there is a cost to",
    "start": "1044839",
    "end": "1053280"
  },
  {
    "text": "calling into JavaScript there you know it is a bridge and all all the browser vendors that I've looked at um actually",
    "start": "1053280",
    "end": "1060600"
  },
  {
    "text": "I should just say I've only looked at how V8 and how webkit or or JavaScript Court does it and in both those cases",
    "start": "1060600",
    "end": "1066720"
  },
  {
    "text": "they used existing interfaces um that uh have a lot of overhead that's kind of un",
    "start": "1066720",
    "end": "1072679"
  },
  {
    "text": "unnecessary overhead and they basically just took the simplest route which I which I agree with I think is great to",
    "start": "1072679",
    "end": "1079120"
  },
  {
    "text": "um not try and produce up you know create new code that you think is going to be faster without proving that it",
    "start": "1079120",
    "end": "1085360"
  },
  {
    "text": "really would be faster um but there's a lot of work being done to improve that speed and at the same time there is work",
    "start": "1085360",
    "end": "1093600"
  },
  {
    "text": "being done in the specification process to make web assembly be able to access those things directly without even",
    "start": "1093600",
    "end": "1100280"
  },
  {
    "text": "needing JavaScript involved at all and that's I think going to be the key to web assembly's future to make it open up",
    "start": "1100280",
    "end": "1106919"
  },
  {
    "text": "because right now we're in a situation where if you have a native background if you've done C++ C or rust or you can or",
    "start": "1106919",
    "end": "1114880"
  },
  {
    "text": "you have a desire to learn those things web assembly is great for you like it's a great use case there's a lot of things",
    "start": "1114880",
    "end": "1120039"
  },
  {
    "text": "you can do with it but a lot of JavaScript people and a lot of browser web people don't have that background",
    "start": "1120039",
    "end": "1126960"
  },
  {
    "text": "and so but they may have a Java background they may have a C background or desire or they may want to use these",
    "start": "1126960",
    "end": "1133240"
  },
  {
    "text": "new hot new languages like reason or Elm and those other other more Dynamic Lang",
    "start": "1133240",
    "end": "1138760"
  },
  {
    "text": "angues but still you know like the big thing about all those languages I just listed is that they're all garbage",
    "start": "1138760",
    "end": "1144280"
  },
  {
    "text": "collected and versus cc++ R those are not garbage collected languages and so",
    "start": "1144280",
    "end": "1150360"
  },
  {
    "text": "the ability to touch Dom directly really it it it doesn't require",
    "start": "1150360",
    "end": "1157640"
  },
  {
    "text": "having garbage collection but it definitely it makes it so one of the problems so imagine this if you're",
    "start": "1157640",
    "end": "1163799"
  },
  {
    "text": "calling across the foreign function interface you're calling that calling across that bridge to JavaScript and you create a Dom node and that Dom node",
    "start": "1163799",
    "end": "1171960"
  },
  {
    "text": "somehow get is is a reference inside web assembly well how would web assembly know when to collect to automatically",
    "start": "1171960",
    "end": "1179000"
  },
  {
    "text": "collect that to actually garbage collect that inside if if web assembly was just this giant linear memory like it is",
    "start": "1179000",
    "end": "1184760"
  },
  {
    "text": "right now you wouldn't be able to know like it it it wouldn't work well it wouldn't work at all and so you can do",
    "start": "1184760",
    "end": "1190440"
  },
  {
    "text": "tricks like the current current um implementations of languages compiling to web assembly that require garbage",
    "start": "1190440",
    "end": "1197000"
  },
  {
    "text": "collection do tricks to work around that they work but they don't perform as",
    "start": "1197000",
    "end": "1202120"
  },
  {
    "text": "well as they should and so web assembly really needs first class support for the",
    "start": "1202120",
    "end": "1207799"
  },
  {
    "text": "underlying garbage collector that's in the virtual machine the same garbage collector that JavaScript is using web",
    "start": "1207799",
    "end": "1212960"
  },
  {
    "text": "assembly will get access to and that's all going to be that's not something",
    "start": "1212960",
    "end": "1218200"
  },
  {
    "text": "that like you as a language person like if you're if you're not a compiler author you're not going to you're not going to have to deal with this like to",
    "start": "1218200",
    "end": "1223840"
  },
  {
    "text": "you it just means that your Java your C++ or your Java your C your your Elm",
    "start": "1223840",
    "end": "1228880"
  },
  {
    "text": "those will just work correctly and but as a compiler author this is all very important information um to make the",
    "start": "1228880",
    "end": "1235919"
  },
  {
    "text": "languages efficient and that's why a lot of languages have been holding out um C has done a ton of experimentation and",
    "start": "1235919",
    "end": "1241520"
  },
  {
    "text": "they've got the the Blazer stuff that compiles to web assembly that works pretty well um go uh another garbage",
    "start": "1241520",
    "end": "1248520"
  },
  {
    "text": "collected language just released their their ability to compile to web assembly um but it doesn't perform as great and",
    "start": "1248520",
    "end": "1256000"
  },
  {
    "text": "um the binaries are kind of bloated that's a common common theme that you're going to see um when when a new language",
    "start": "1256000",
    "end": "1261440"
  },
  {
    "text": "decides to Target web assembly for the first time is things are going to be slow at first and your binaries are",
    "start": "1261440",
    "end": "1266720"
  },
  {
    "text": "going to be bloated um that's a pretty normal thing because make it work make it right make it fast right so you do it",
    "start": "1266720",
    "end": "1274000"
  },
  {
    "text": "in those order if they if they try and skip the first two steps and go right to making something fast or small uh you",
    "start": "1274000",
    "end": "1281360"
  },
  {
    "text": "fail you take longer you don't do it right it's it's just better to follow it in those steps but I can I realize how",
    "start": "1281360",
    "end": "1288600"
  },
  {
    "text": "frustrating it can be because some people are like oh web assembly is supposed to be this you know you know",
    "start": "1288600",
    "end": "1294039"
  },
  {
    "text": "smaller and faster but yet it's it's bigger and slower than JavaScript and",
    "start": "1294039",
    "end": "1299080"
  },
  {
    "text": "that's you know JavaScript it's just not fair because JavaScript has had so many years to be optimized um really when",
    "start": "1299080",
    "end": "1304960"
  },
  {
    "text": "we're talking about the the the benefits of web assembly we're talking about the hypothetical benefits that can be",
    "start": "1304960",
    "end": "1311559"
  },
  {
    "text": "attained we've basically lifted that ceiling that exists on Java on JavaScript there's a ceiling you know",
    "start": "1311559",
    "end": "1317320"
  },
  {
    "text": "like using JavaScript as a comp Target there's a ceiling we know and web assembly lifts that ceiling much higher",
    "start": "1317320",
    "end": "1323400"
  },
  {
    "text": "so that we can get better performance but it's going to take time it really [Music]",
    "start": "1323400",
    "end": "1332880"
  },
  {
    "text": "is this episode of JS party is brought to you by hired one thing people hate doing is searching for a new job it's so",
    "start": "1332880",
    "end": "1340440"
  },
  {
    "text": "painful to search through open positions on every job board Under the Sun the process to find a new job is such a mess",
    "start": "1340440",
    "end": "1347640"
  },
  {
    "text": "if only there was an easier way well I'm here to tell you there is our friends at hired have made it so companies send you",
    "start": "1347640",
    "end": "1355400"
  },
  {
    "text": "offers with salary benefits and even Equity upfront all you have to do is answer a few questions to Showcase who",
    "start": "1355400",
    "end": "1361760"
  },
  {
    "text": "you are and what type of job you're looking for they work with more than 6,000 companies from startups to large",
    "start": "1361760",
    "end": "1367640"
  },
  {
    "text": "publicly traded companies and 14 major Tech hubs in North America and Europe you get to see all of your interview",
    "start": "1367640",
    "end": "1373679"
  },
  {
    "text": "requests you can accept reject or make changes to their offer even before you talk with anyone and here's the kicker",
    "start": "1373679",
    "end": "1380400"
  },
  {
    "text": "it's totally free this isn't going to cost you anything it's not like you have to go there and spend money to get this opportunity and if you get a job through",
    "start": "1380400",
    "end": "1386799"
  },
  {
    "text": "hired they're even going to give you a bonus it's normally $300 but since you're a listener of JS party they're",
    "start": "1386799",
    "end": "1392120"
  },
  {
    "text": "going to give you $600 instead and even if you're not looking for a job you can refer a friend and hired will send you a",
    "start": "1392120",
    "end": "1399240"
  },
  {
    "text": "check for get this $ 1,337 when they accept the job as you",
    "start": "1399240",
    "end": "1405400"
  },
  {
    "text": "can see hired makes it too easy get started at High /jp",
    "start": "1405400",
    "end": "1412400"
  },
  {
    "text": "[Music]",
    "start": "1416970",
    "end": "1420119"
  },
  {
    "text": "party Sue you're often doing some pretty interesting edge cases of stuff web USB",
    "start": "1424880",
    "end": "1430440"
  },
  {
    "text": "funny gaming stuff things like that like what's your take on on web assembly and where things are I feel like that's such",
    "start": "1430440",
    "end": "1435840"
  },
  {
    "text": "an accurate description I feel like always the edge case with everything that I'm trying to do um yeah I'm really",
    "start": "1435840",
    "end": "1442159"
  },
  {
    "text": "interested in web assembly for like obviously these load times are amazing",
    "start": "1442159",
    "end": "1447600"
  },
  {
    "text": "with the you know streaming compilations but once you've actually downloaded the WM package and or the the module sorry",
    "start": "1447600",
    "end": "1454240"
  },
  {
    "text": "and your running it I'm interested in what web assembly is actually really good at with regards to what it can run",
    "start": "1454240",
    "end": "1461840"
  },
  {
    "text": "so you know I I've been reading things about it and I'm seeing that it's good at things like crunching numbers which",
    "start": "1461840",
    "end": "1467440"
  },
  {
    "text": "obviously makes me think of things like gaming but I also want to see if we can",
    "start": "1467440",
    "end": "1472640"
  },
  {
    "text": "hack it to just be able to Port tools that normally run in something like you",
    "start": "1472640",
    "end": "1478120"
  },
  {
    "text": "know just on your desktop with C or um you know an even lower level language than that I'm wondering can we Port",
    "start": "1478120",
    "end": "1485200"
  },
  {
    "text": "things to the browser similar to what we used to kind of use in scrip them for like that's what I want to know well ABS",
    "start": "1485200",
    "end": "1492399"
  },
  {
    "text": "absolutely you're 100% right that you know any because it's such a low-level Target the thing that people are going",
    "start": "1492399",
    "end": "1499399"
  },
  {
    "text": "to you know the things that are is absolute best at is crunching number type of things because you know in",
    "start": "1499399",
    "end": "1505200"
  },
  {
    "text": "JavaScript the the virtual machine can only do so much about making assumptions about the various types of things and",
    "start": "1505200",
    "end": "1511279"
  },
  {
    "text": "you have to be very careful to not you know type your code in a certain way so that it doesn't you know de optimize and",
    "start": "1511279",
    "end": "1517440"
  },
  {
    "text": "stuff like that whereas with web assembly it's very strictly typed and there's a lot of optimization it's table to do um so like the that that being",
    "start": "1517440",
    "end": "1525799"
  },
  {
    "text": "said you know like things that are technically end up being crunching numbers and you may not realize that it is crunching numbers is like um I don't",
    "start": "1525799",
    "end": "1533559"
  },
  {
    "text": "know if you guys have seen the S like so there's a project Mozilla maintains um called Source Maps like Source map is",
    "start": "1533559",
    "end": "1540640"
  },
  {
    "text": "the mpm name and as it sounds it's for creating and uh reading sourcemap files",
    "start": "1540640",
    "end": "1547000"
  },
  {
    "text": "for JavaScript and it's actually the library that the the Mozilla Dev tools",
    "start": "1547000",
    "end": "1552360"
  },
  {
    "text": "uses it's the same Source map library that Babel uses and Les and a bunch of",
    "start": "1552360",
    "end": "1557480"
  },
  {
    "text": "projects it's the one of the most popular it is the most popular Source map implementation and they thought the",
    "start": "1557480",
    "end": "1563559"
  },
  {
    "text": "exact same thing they said hm is this something that you know we should try and compile this to web assembly like",
    "start": "1563559",
    "end": "1569520"
  },
  {
    "text": "they had it written in JavaScript before so then they what they did is they ported it to rust and then compiled that",
    "start": "1569520",
    "end": "1574760"
  },
  {
    "text": "rust to web assembly and the their very first version of it uh was",
    "start": "1574760",
    "end": "1580039"
  },
  {
    "text": "5.8 times faster than the JavaScript implementation wow and they did a little",
    "start": "1580039",
    "end": "1585919"
  },
  {
    "text": "bit of tweaking a little bit of um uh algorithmic improvements just basically taking advantage of of uh uh the of",
    "start": "1585919",
    "end": "1594480"
  },
  {
    "text": "knowledge of the fact that it's going to be compiled to a much more native Target and um right now it's 10.9 times",
    "start": "1594480",
    "end": "1601679"
  },
  {
    "text": "faster and so for I know I appreciate that when my babo builds and you know",
    "start": "1601679",
    "end": "1606799"
  },
  {
    "text": "the dev tools and all that stuff but uh that's just un example now certainly you it is possible to create examples that",
    "start": "1606799",
    "end": "1613600"
  },
  {
    "text": "are actually even slower than JavaScript um and that surprises a lot of people lot of people say well how can that be",
    "start": "1613600",
    "end": "1620279"
  },
  {
    "text": "possible and and that's ultimately just because JavaScript has had a lot more time to be",
    "start": "1620279",
    "end": "1625679"
  },
  {
    "text": "optimized and W with because JavaScript is a much higher level language so think",
    "start": "1625679",
    "end": "1631640"
  },
  {
    "text": "of it this way when you create a class in JavaScript the underlying virtual machine has a notion of objects and",
    "start": "1631640",
    "end": "1638840"
  },
  {
    "text": "classes it knows what a class is and what an object is and can use that use that knowledge to make optimizations",
    "start": "1638840",
    "end": "1645919"
  },
  {
    "text": "because it can make assumptions based on that however with web assembly currently there actually is No Object model",
    "start": "1645919",
    "end": "1652600"
  },
  {
    "text": "there's no knowledge of objects there's you basically you can think of a typed array like I don't know if you're familiar with typed arrays but or just a",
    "start": "1652600",
    "end": "1659360"
  },
  {
    "text": "regular array in JavaScript think of a regular array in JavaScript and imagine all you can do is add and remove numbers",
    "start": "1659360",
    "end": "1667360"
  },
  {
    "text": "in that array and welcome to web assembly because that's essentially what",
    "start": "1667360",
    "end": "1672960"
  },
  {
    "text": "it all boils down to I mean that's kind of simplify oversimplifying it a little bit but it just gives you to the example",
    "start": "1672960",
    "end": "1679080"
  },
  {
    "text": "of web the web assembly virtual machine has no knowledge of objects and classes and stuff if your language you're",
    "start": "1679080",
    "end": "1685200"
  },
  {
    "text": "programming in has those they get desugared down they get compiled down to you know loads and stores into this",
    "start": "1685200",
    "end": "1691480"
  },
  {
    "text": "linear memory and it's all you know like where the the start and the end of a class in memory is is a convention",
    "start": "1691480",
    "end": "1698799"
  },
  {
    "text": "essentially like the compiler knows just by convention and and by keeping track of that at compile time rather than at",
    "start": "1698799",
    "end": "1705120"
  },
  {
    "text": "runtime typically in most languages aren't those types of optimizations what your compiler 2 web assembly would do",
    "start": "1705120",
    "end": "1711080"
  },
  {
    "text": "like we're moving the tool chain out of the browser and into the compiler that's exactly yeah exactly right however the",
    "start": "1711080",
    "end": "1717840"
  },
  {
    "text": "the there is a limitation of that the compiler in this case doesn't know the underlying machine code so it can't",
    "start": "1717840",
    "end": "1724760"
  },
  {
    "text": "utilize so you know what I'm saying so like it has to can only compile to web assembly and web assembly doesn't have",
    "start": "1724760",
    "end": "1731240"
  },
  {
    "text": "all the tricks in the book for because like CPUs these days modern real native CPUs have a lot of exotic instructions",
    "start": "1731240",
    "end": "1738880"
  },
  {
    "text": "and things that you can do for special cases to to increase performance and web",
    "start": "1738880",
    "end": "1744640"
  },
  {
    "text": "assembly you you know you don't get direct access to those things you and there no way to like hint to the virtual",
    "start": "1744640",
    "end": "1749760"
  },
  {
    "text": "machine hey you know use this specific instruction or whatever if it's available um and so the web assembly",
    "start": "1749760",
    "end": "1755519"
  },
  {
    "text": "virtual machines it's really up to them to try and deduce these types of things and um you know I don't want to focus",
    "start": "1755519",
    "end": "1761080"
  },
  {
    "text": "too much on that example because it's just an unexampled but the point being is that there there's always going to be",
    "start": "1761080",
    "end": "1766159"
  },
  {
    "text": "cases where web assembly uh can be slower than than something that is a little more high level and has more you",
    "start": "1766159",
    "end": "1772559"
  },
  {
    "text": "know the the virtual machine has more knowledge of but by and large once once web assembly has had a bunch of time in",
    "start": "1772559",
    "end": "1779519"
  },
  {
    "text": "the wild and they've improved the optimizations around the uh the compilations that they do um then web",
    "start": "1779519",
    "end": "1786399"
  },
  {
    "text": "assembly will beat JavaScript in in in a large majority of cases um it may not be true today in every case but in a large",
    "start": "1786399",
    "end": "1792679"
  },
  {
    "text": "majority of cases it will beat it that kind of uh underlying tooling stuff is really interesting to me one of the",
    "start": "1792679",
    "end": "1798679"
  },
  {
    "text": "things that I was thinking about as I was uh doing research for this episode is like if you look at um what's going",
    "start": "1798679",
    "end": "1805120"
  },
  {
    "text": "on in and I'm I'm a web front end guy so I'm thinking in that world but you look at like what react is doing with their",
    "start": "1805120",
    "end": "1811120"
  },
  {
    "text": "new architecture they're under the you behind the hood slicing and dicing work and doing all sorts of uh kind of magic",
    "start": "1811120",
    "end": "1819000"
  },
  {
    "text": "compilation uh computation things that then that your application never has to worry about and then running them out",
    "start": "1819000",
    "end": "1825360"
  },
  {
    "text": "that could be happening in web assembly oh absolutely and the only reason it's not at least in my opinion I don't want to speak for them but you know I've",
    "start": "1825360",
    "end": "1831159"
  },
  {
    "text": "talked to Sebastian and a couple other people on the rack Court team about this because I'm a big advocate for web assembly and ultimately it comes down to",
    "start": "1831159",
    "end": "1839360"
  },
  {
    "text": "the bridge the uh it comes down to the garbage collection and the fact that that that web assembly has to call",
    "start": "1839360",
    "end": "1844919"
  },
  {
    "text": "across that JavaScript Bridge it just it just doesn't it's just they're just not interested in in doing a lot of effort",
    "start": "1844919",
    "end": "1852200"
  },
  {
    "text": "or a lot of uh commitment into something that has a potential of being slow but",
    "start": "1852200",
    "end": "1857279"
  },
  {
    "text": "at the same time like you know there's there's projects like the glimmer uh virtual virtual machine for Ember the",
    "start": "1857279",
    "end": "1863600"
  },
  {
    "text": "Ember Ember is another competing UI framework and they've got a a GL the glimmer engine is their underlying",
    "start": "1863600",
    "end": "1868919"
  },
  {
    "text": "render how their underlying rendering works and they've recently actually started an effort to actually Implement",
    "start": "1868919",
    "end": "1875039"
  },
  {
    "text": "their virtual machine in Rust that compiles to web assembly and at this point it's you know",
    "start": "1875039",
    "end": "1882120"
  },
  {
    "text": "they've been this is what a almost a year in the making if not more and it's it in a lot of ways it's a",
    "start": "1882120",
    "end": "1888720"
  },
  {
    "text": "research project because it is unknown whether you know in the end the the performance benefits of web assembly",
    "start": "1888720",
    "end": "1895120"
  },
  {
    "text": "itself will get negated Enough by the cost of of calling across into",
    "start": "1895120",
    "end": "1901080"
  },
  {
    "text": "JavaScript you know like there some initial benchmarks suggests that sometimes it does sometimes it doesn't",
    "start": "1901080",
    "end": "1906240"
  },
  {
    "text": "you know that that type of stuff but it is a little too early to tell definitively whether it's going to be a win in the long term it's without a",
    "start": "1906240",
    "end": "1912519"
  },
  {
    "text": "doubt going to be a win it's just just yeah exactly unfortunately and and um if you're doing things like games like you",
    "start": "1912519",
    "end": "1919159"
  },
  {
    "text": "can get great performance right now today in games just because you know you don't need to cross that bridge super",
    "start": "1919159",
    "end": "1924559"
  },
  {
    "text": "often um but when you're touching Dom and stuff like that what you have to do you don't have to do but to to really",
    "start": "1924559",
    "end": "1931000"
  },
  {
    "text": "get you know glimmer ember style performance you you have to batch up your changes and and send those changes",
    "start": "1931000",
    "end": "1937880"
  },
  {
    "text": "in like a change list across the wire and then across that bridge and then apply those changes um at a single time",
    "start": "1937880",
    "end": "1944200"
  },
  {
    "text": "just to minimize the cost of that bridge but I but I you know I think that that performances is is I don't think it",
    "start": "1944200",
    "end": "1950919"
  },
  {
    "text": "definitely is going to to increase significantly over the coming years Seuss did you have other examples in",
    "start": "1950919",
    "end": "1957279"
  },
  {
    "text": "mind that you were curious about I really just want to have a compiler compiled into web assembly that's what I",
    "start": "1957279",
    "end": "1964600"
  },
  {
    "text": "want to see you know you you look at those websites like repple it and um",
    "start": "1964600",
    "end": "1969880"
  },
  {
    "text": "other websites that allow you to essentially be editing things in the actual browser and this is the missing",
    "start": "1969880",
    "end": "1975600"
  },
  {
    "text": "puzzle piece for me on a on a personal project where you know I would love to be able to move something like AVR g++",
    "start": "1975600",
    "end": "1981320"
  },
  {
    "text": "to be able to be run in the browser and the the bridge isn't too bad with passing over something as small as you",
    "start": "1981320",
    "end": "1987799"
  },
  {
    "text": "know a C++ file to compile using that and so I guess I'm interested in that",
    "start": "1987799",
    "end": "1992880"
  },
  {
    "text": "iny in that how hard is it to put existing tools that might be written in C++ or rust like I know that there's",
    "start": "1992880",
    "end": "2000080"
  },
  {
    "text": "some work you need to do or you even need to kind of write these sort of pseudo interfaces um in order to get",
    "start": "2000080",
    "end": "2006279"
  },
  {
    "text": "that cleanly coming over what are the current challenges in people being able to do uh probably more sort of unique",
    "start": "2006279",
    "end": "2012679"
  },
  {
    "text": "projects like that so um so M scripton you mentioned earlier which is a project",
    "start": "2012679",
    "end": "2018639"
  },
  {
    "text": "that the folks uh one of the guys who's at Milla created originally and it was",
    "start": "2018639",
    "end": "2024000"
  },
  {
    "text": "designed for a predecessor of web assembly called asm.js and I'm not going to talk too much about that but it was",
    "start": "2024000",
    "end": "2030159"
  },
  {
    "text": "essentially a predecessor an attempt to do something similar to web assembly before this and they were able to reuse",
    "start": "2030159",
    "end": "2035600"
  },
  {
    "text": "a lot of that architecture and now script's primary goal is web assembly and so mcrip if you've got a C or C++",
    "start": "2035600",
    "end": "2042760"
  },
  {
    "text": "project it's definitely the way to go it uh it's it basically wraps on top of",
    "start": "2042760",
    "end": "2047839"
  },
  {
    "text": "clang and it uses same arguments and everything and instead the the the main",
    "start": "2047839",
    "end": "2053440"
  },
  {
    "text": "thing that M scripton these days provides is a standard Library an implementation of the standard library",
    "start": "2053440",
    "end": "2059079"
  },
  {
    "text": "for the browser so you know especially right now because of the bridge to",
    "start": "2059079",
    "end": "2064679"
  },
  {
    "text": "JavaScript some of these things have to be implemented in JavaScript and so it comes with all of that stuff and I have",
    "start": "2064679",
    "end": "2070358"
  },
  {
    "text": "helped several people with their C++ existing C++ projects and I think most people are going to be surprised at how",
    "start": "2070359",
    "end": "2077398"
  },
  {
    "text": "little they need to do to get their project their their projects working on in web assembly their C++ projects now",
    "start": "2077399",
    "end": "2084079"
  },
  {
    "text": "ultimately is going to depend like the the issues you'll run into are most likely things like uh platform specific",
    "start": "2084079",
    "end": "2091800"
  },
  {
    "text": "apis and even even then though some of those platform specific apis have been shimmed out and will just naturally work",
    "start": "2091800",
    "end": "2098040"
  },
  {
    "text": "but you know like if you're especially on the graphic side of things you may have to do some if you know some if defs",
    "start": "2098040",
    "end": "2104839"
  },
  {
    "text": "where you're saying you know if it's this if it's a Mac platform D that use this otherwise if it's web assembly you",
    "start": "2104839",
    "end": "2110320"
  },
  {
    "text": "know call this header from m scripton m scripton provides um headers for accessing HTML 5 and all that so it it",
    "start": "2110320",
    "end": "2117760"
  },
  {
    "text": "takes care of that for you you just have to call them um but a lot of the you know all the like for example if you",
    "start": "2117760",
    "end": "2123680"
  },
  {
    "text": "you're touching the file system all of that stuff gets emulated in M script and automatically for you um if you're using",
    "start": "2123680",
    "end": "2129800"
  },
  {
    "text": "anything from the standard Library it will just be automatic and you don't have to do anything special uh you might",
    "start": "2129800",
    "end": "2135560"
  },
  {
    "text": "find other edges uh multi-threaded environment is not currently it was",
    "start": "2135560",
    "end": "2140880"
  },
  {
    "text": "working for a little bit and now it's not working because of the uh Spectre and meltdown exploits the browsers had",
    "start": "2140880",
    "end": "2146880"
  },
  {
    "text": "to disable shared array buffers and so and shared array buffer is required to be able to do the multi-threading so it",
    "start": "2146880",
    "end": "2153319"
  },
  {
    "text": "currently does not work that's uh one deal breaker for a lot of people who you know have C++ stuff is they they might",
    "start": "2153319",
    "end": "2159640"
  },
  {
    "text": "be surprised where they have threads is that uh something that's under active development to fix because I feel like",
    "start": "2159640",
    "end": "2165599"
  },
  {
    "text": "one of the things that's really exciting about uh web assembly is the potential",
    "start": "2165599",
    "end": "2170800"
  },
  {
    "text": "of a you know fine grain parallelism approach in the browser right you know",
    "start": "2170800",
    "end": "2176359"
  },
  {
    "text": "uh Lin Clark we we were talking about Lin Clark earlier I saw a keynote that she did recently where she's talking",
    "start": "2176359",
    "end": "2182119"
  },
  {
    "text": "about paralyzing everything in the browser because we know that parallelization is the way to unlock",
    "start": "2182119",
    "end": "2187599"
  },
  {
    "text": "continued performance gains at this point and client code is the one place that's very hard to do that because",
    "start": "2187599",
    "end": "2194280"
  },
  {
    "text": "javascript's Primitives for parallelization you know web workers or whatever they're pretty coar grained",
    "start": "2194280",
    "end": "2199720"
  },
  {
    "text": "they're hard to use um for a lot of situations but if you could use rust",
    "start": "2199720",
    "end": "2204839"
  },
  {
    "text": "which is very good at writing fine grain parallel code and compile to web assembly and just have it run like that",
    "start": "2204839",
    "end": "2210240"
  },
  {
    "text": "unlocks a huge amount right yeah I um I don't know the latest from the browser vendors other than the last thing I knew",
    "start": "2210240",
    "end": "2217640"
  },
  {
    "text": "was that they were doing research on the ways the best ways to be able to unlock",
    "start": "2217640",
    "end": "2223560"
  },
  {
    "text": "Shar to Ray buffer without exposing those exploits again um they seem the",
    "start": "2223560",
    "end": "2228880"
  },
  {
    "text": "one the they mentioned it in one of the community group meetings um a couple weeks back and they seemed confident",
    "start": "2228880",
    "end": "2235079"
  },
  {
    "text": "that it was like they they talked about it in a way of like when we reenable it",
    "start": "2235079",
    "end": "2240200"
  },
  {
    "text": "not if we reenable it so I I'm assuming that they have confidence in it but um I",
    "start": "2240200",
    "end": "2245359"
  },
  {
    "text": "unfortunately don't know specific timelines there has been talk so currently web",
    "start": "2245359",
    "end": "2250599"
  },
  {
    "text": "assembly when you do multi-threading if shared aay buffer was exposed in the browser uh it does actually use web",
    "start": "2250599",
    "end": "2258079"
  },
  {
    "text": "workers technically now that's not when you're doing something like C++ or rust that's actually not a big deal the only",
    "start": "2258079",
    "end": "2264319"
  },
  {
    "text": "big deal about that is that the cost of spinning up a new one um the cost of",
    "start": "2264319",
    "end": "2269520"
  },
  {
    "text": "spinning up a new thread is you know relatively cheap compared to the cost of spinning up a new web worker um you know",
    "start": "2269520",
    "end": "2276400"
  },
  {
    "text": "in a lot of ways that can be help by pooling and stuff like that but the otherwise like once the once the web worker AKA thread in this case is is",
    "start": "2276400",
    "end": "2283760"
  },
  {
    "text": "spinned up then there's no you know no major issues on performance or something like thatc and you don't have to deal",
    "start": "2283760",
    "end": "2290119"
  },
  {
    "text": "with like the transferability because again with Rustin and C++ everything ends up just being numbers and you're",
    "start": "2290119",
    "end": "2295720"
  },
  {
    "text": "able to access that through the shared array buffer which is one of the problems with JavaScript is you know you can't send a class or an object over the",
    "start": "2295720",
    "end": "2303040"
  },
  {
    "text": "wire without it being serialized because that would be unsafe but with with with shared Ray buffers because they're",
    "start": "2303040",
    "end": "2309960"
  },
  {
    "text": "just numbers you can use the atomic operations to to U lock and waight for",
    "start": "2309960",
    "end": "2316160"
  },
  {
    "text": "the different values across threads and stuff like that and um you know that those abstractions get compiled away but",
    "start": "2316160",
    "end": "2323079"
  },
  {
    "text": "so but there has been talk my point of that was there has been talk actually even in the last uh community group meeting which I think was either",
    "start": "2323079",
    "end": "2328560"
  },
  {
    "text": "yesterday or the day before I can't remember um of you know do we expose",
    "start": "2328560",
    "end": "2334240"
  },
  {
    "text": "real threads like P thread type of things to web assembly MH and it's a",
    "start": "2334240",
    "end": "2340319"
  },
  {
    "text": "contentious subject because the it it sounds like my take out at this point is",
    "start": "2340319",
    "end": "2345800"
  },
  {
    "text": "the answer is yes but the answer is not right now because it's a really really",
    "start": "2345800",
    "end": "2350920"
  },
  {
    "text": "big undertaking like because it really once you expose real P threads it",
    "start": "2350920",
    "end": "2356240"
  },
  {
    "text": "indirectly makes JavaScript multi-threaded whether you want it to be or not because now you have you know you",
    "start": "2356240",
    "end": "2364680"
  },
  {
    "text": "have uh concurrent threads that can call into JavaScript concurrently and create races within JavaScript itself and the",
    "start": "2364680",
    "end": "2372280"
  },
  {
    "text": "existing virtual machines for JavaScript are not thread safe like they are not",
    "start": "2372280",
    "end": "2378240"
  },
  {
    "text": "like so there'd be a lot of work that would need to be done to make JavaScript itself work correctly in in a world",
    "start": "2378240",
    "end": "2385119"
  },
  {
    "text": "where you can call into it from a multi-threaded environment a true multi-threaded environment oh that's interesting yeah I wonder if you could",
    "start": "2385119",
    "end": "2391720"
  },
  {
    "text": "essentially create a you know Ruby style Global interpreter lock on the JavaScript piece you have these things",
    "start": "2391720",
    "end": "2398040"
  },
  {
    "text": "running along but then as soon as they call into JavaScript Suddenly It's serialized right right right yeah like something similar cuz like right now",
    "start": "2398040",
    "end": "2405359"
  },
  {
    "text": "essentially when you do the web worker style stuff it's fine like you have true multi-threaded in a way with with your",
    "start": "2405359",
    "end": "2411839"
  },
  {
    "text": "web assembly contexts but as soon as you want to call in the JavaScript if you're not on the main thread you the only way",
    "start": "2411839",
    "end": "2416920"
  },
  {
    "text": "to do it is to post message which is that's what saves JavaScript today from that complexity is you have to post",
    "start": "2416920",
    "end": "2424000"
  },
  {
    "text": "message so you can't create those races I mean you can create races but not in the same there not the same type of race",
    "start": "2424000",
    "end": "2431000"
  },
  {
    "text": "not a not a actual language level race where the compiler has to be aware of these things like you can be if you",
    "start": "2431000",
    "end": "2437400"
  },
  {
    "text": "haven't dealt with actual like very low-level races before not you but the everyone in just in general um they they",
    "start": "2437400",
    "end": "2443200"
  },
  {
    "text": "can be very unintuitive like and very difficult um so I I I I empathize I",
    "start": "2443200",
    "end": "2450720"
  },
  {
    "text": "empathize with the ver with the browser vendors pushing back on it they I think they've done a good job of acknowledging",
    "start": "2450720",
    "end": "2456280"
  },
  {
    "text": "that it's an inevitability but realizing that there are bigger fish to fry right",
    "start": "2456280",
    "end": "2461400"
  },
  {
    "text": "now and you know we want to focus on the host bindings we want to focus on the garbage collection and if we focus on",
    "start": "2461400",
    "end": "2468680"
  },
  {
    "text": "the on the multi- threading you know that's just going to take away time and push back those those implement the you",
    "start": "2468680",
    "end": "2473760"
  },
  {
    "text": "know the GC and the host binding stuff so um I think that they've got you know and that's part of make it fast right",
    "start": "2473760",
    "end": "2480160"
  },
  {
    "text": "like first they're working on make it work make it right and then make it fast finally we'll work on make it fast",
    "start": "2480160",
    "end": "2488400"
  },
  {
    "text": "[Music] hey everyone I'm Tim Smith Senior",
    "start": "2488400",
    "end": "2494240"
  },
  {
    "text": "producer here at Chang log you know how important it is to stay in the no and our Weekly Newsletter helps you and",
    "start": "2494240",
    "end": "2500480"
  },
  {
    "text": "thousands of other developers do exactly that it's the developer news that matters nothing more and nothing less",
    "start": "2500480",
    "end": "2507440"
  },
  {
    "text": "visit changel log.com and subscribe [Music]",
    "start": "2507440",
    "end": "2516199"
  },
  {
    "text": "today [Music]",
    "start": "2516240",
    "end": "2525720"
  },
  {
    "text": "um so let's let's count this as as we're we're rolling in um and I think there is your it's your weird idea but I think",
    "start": "2525720",
    "end": "2532520"
  },
  {
    "text": "there's actually something really key and interesting there um and two pieces actually so one is in terms of",
    "start": "2532520",
    "end": "2539119"
  },
  {
    "text": "distribution right so you know folks who are coding in these other languages um",
    "start": "2539119",
    "end": "2544680"
  },
  {
    "text": "who want something that's more native level performance but want to be able to tap into the greatest distribution",
    "start": "2544680",
    "end": "2549920"
  },
  {
    "text": "Network in the world which is the internet and the browser um but then the other one that I think is interesting is",
    "start": "2549920",
    "end": "2555839"
  },
  {
    "text": "something we've touched on a few times which is learnability uh you know the the tools",
    "start": "2555839",
    "end": "2562359"
  },
  {
    "text": "like jsfiddle and code pen and things like that that essentially give you a",
    "start": "2562359",
    "end": "2569079"
  },
  {
    "text": "browser environment for development and for sharing code have dramatically",
    "start": "2569079",
    "end": "2574680"
  },
  {
    "text": "accelerated the ability of people to learn web development Technologies if we can get compilation",
    "start": "2574680",
    "end": "2582200"
  },
  {
    "text": "and runtime and all of that working in the browser like what does that do for",
    "start": "2582200",
    "end": "2587640"
  },
  {
    "text": "the learnability of of all these previously kind of systems languages where you had to do a lot of local setup",
    "start": "2587640",
    "end": "2593440"
  },
  {
    "text": "yeah that's what I want I want I want us to stop like having a call out to a cloud service to compile the code that",
    "start": "2593440",
    "end": "2599960"
  },
  {
    "text": "you're writing in the the browser ID right you know I want someone to plug an Arduino in they're using you know a web",
    "start": "2599960",
    "end": "2606280"
  },
  {
    "text": "USB to be able bble to um upload the code but it needs to be compiled first and if that's all happening completely",
    "start": "2606280",
    "end": "2611720"
  },
  {
    "text": "offline and they can open a browser that's even just running stuff in like local storage that to me is where we've",
    "start": "2611720",
    "end": "2617599"
  },
  {
    "text": "finally hit the point where you've got easily distributed educational you know resources like that I think you totally",
    "start": "2617599",
    "end": "2624119"
  },
  {
    "text": "hit the nail in the head there as to why at least I'm so excited about it I totally agree so a lot of the tool chain",
    "start": "2624119",
    "end": "2630559"
  },
  {
    "text": "right now is built uh they're using an lovm back endend right to Output web assembly that's right yeah there there's",
    "start": "2630559",
    "end": "2636720"
  },
  {
    "text": "there's a bunch of community so there's stuff like banerian and wabbit and stuff but uh those are early projects to you",
    "start": "2636720",
    "end": "2644079"
  },
  {
    "text": "know for experimentation and optimization and stuff but the primary bread you know the primary goal",
    "start": "2644079",
    "end": "2651720"
  },
  {
    "text": "is to to use llbm and and most tooling will end up using llvm to generate their",
    "start": "2651720",
    "end": "2656760"
  },
  {
    "text": "web assembly well and llvm is pretty mature so they and most compilers you know focus on bootstrapping right like",
    "start": "2656760",
    "end": "2663520"
  },
  {
    "text": "how do I compile myself with with myself so can has any body tried bootstrapping llvm with web assembly uhhuh yep yep it",
    "start": "2663520",
    "end": "2671400"
  },
  {
    "text": "does work it does work and in fact there's a bunch of different stuff like it doesn't work for every case but um",
    "start": "2671400",
    "end": "2677960"
  },
  {
    "text": "yes it's been done there's also JavaScript core itself which is the JavaScript engine for for Safari it has",
    "start": "2677960",
    "end": "2684920"
  },
  {
    "text": "been compiled to web assembly so you can run JavaScript core in JavaScript",
    "start": "2684920",
    "end": "2690520"
  },
  {
    "text": "core with through web assembly um and it actually was faster than you might",
    "start": "2690520",
    "end": "2695960"
  },
  {
    "text": "expect like it was like like hm that was actually surprisingly fast did it create a speed increase or it was no no that",
    "start": "2695960",
    "end": "2703480"
  },
  {
    "text": "would be hilarious though if that was the case um that would break my brain yeah it that would break my brain as too",
    "start": "2703480",
    "end": "2710280"
  },
  {
    "text": "like theoretically that could be possible like like it is definitely you",
    "start": "2710280",
    "end": "2715440"
  },
  {
    "text": "know what it would let you do though it would let you test JavaScript core in Edge or in Chrome like you could embed",
    "start": "2715440",
    "end": "2723160"
  },
  {
    "text": "Safari's JavaScript engine into other browsers new level of those like you",
    "start": "2723160",
    "end": "2728400"
  },
  {
    "text": "know standardized unit tests that they're now running I'm sorry was that a question well no I'm just starting to",
    "start": "2728400",
    "end": "2733680"
  },
  {
    "text": "think about like what if what if you could compile for example chakra core to web assembly as well could you how many",
    "start": "2733680",
    "end": "2739839"
  },
  {
    "text": "layers of JavaScript could you run right that's how you cheat and get",
    "start": "2739839",
    "end": "2746359"
  },
  {
    "text": "threads right exactly yeah so we could run can we run",
    "start": "2746359",
    "end": "2753000"
  },
  {
    "text": "a JavaScript engine in a web worker or something like that can we we have like calling up back and forth between all of",
    "start": "2753000",
    "end": "2759480"
  },
  {
    "text": "these different engines got to be a trade off yeah yeah there's always a cost I mean like",
    "start": "2759480",
    "end": "2765839"
  },
  {
    "text": "theoretically being able to like right right now it there is not an easy way",
    "start": "2765839",
    "end": "2771440"
  },
  {
    "text": "it's possible but it's not an easy way to jit your your web assembly to create to actually send a jit like let's say",
    "start": "2771440",
    "end": "2778599"
  },
  {
    "text": "that you wanted to do an implementation of JavaScript and compil that implementation of JavaScript a",
    "start": "2778599",
    "end": "2783680"
  },
  {
    "text": "JavaScript virtual machine to compiled the web assembly you could do it today um but generating new web assembly code",
    "start": "2783680",
    "end": "2790760"
  },
  {
    "text": "on demand like via adjust in time compilation uh is just not there's no first class support for that within web",
    "start": "2790760",
    "end": "2796920"
  },
  {
    "text": "assembly itself because again you got to call out to JavaScript create a new Javas create a new web assembly module from JavaScript and that you know that",
    "start": "2796920",
    "end": "2803119"
  },
  {
    "text": "has a cost especially for for small you know if all you're doing is trying to jit a single function um that's just not",
    "start": "2803119",
    "end": "2810920"
  },
  {
    "text": "going to be worth it uh but it is definitely a stated goal you know we're going to get there it just takes time",
    "start": "2810920",
    "end": "2816920"
  },
  {
    "text": "was kind of amazing um so we touched a little bit on tool chains um and that",
    "start": "2816920",
    "end": "2822680"
  },
  {
    "text": "was one of the things that was kind of interesting you're looking around um somebody's done a a dock of like all the",
    "start": "2822680",
    "end": "2829839"
  },
  {
    "text": "different languages that have compiled a web assembly support and there's like 20 or 30 different environments that",
    "start": "2829839",
    "end": "2835240"
  },
  {
    "text": "support this at this point sure yep is that the awesome WM uh we website or is",
    "start": "2835240",
    "end": "2840960"
  },
  {
    "text": "that a different one uh it might have been uh let me look I I actually wrote a blog post about was I got so excited",
    "start": "2840960",
    "end": "2848319"
  },
  {
    "text": "working getting ready for this episode that well it was funny right I was working on this episode and I was like this is really cool and so I went on",
    "start": "2848319",
    "end": "2854440"
  },
  {
    "text": "quora and was starting to answer questions and that got me more excited and I was like I got to write a blog post about this so I went went and wrote",
    "start": "2854440",
    "end": "2861480"
  },
  {
    "text": "a a post about you know sort of how web assembly is accelerating the future of of web development and kind of what it's",
    "start": "2861480",
    "end": "2867760"
  },
  {
    "text": "potentially going to enable um yeah let's see so I have a link to that yeah",
    "start": "2867760",
    "end": "2873119"
  },
  {
    "text": "it was the awesome wome Langs that's what it was so that's that's the list list of environments you know and it's",
    "start": "2873119",
    "end": "2878839"
  },
  {
    "text": "got uh you know your esoteric languages like brain is written in uh you has a",
    "start": "2878839",
    "end": "2885720"
  },
  {
    "text": "compiler prologue and things like that but there's also like C C C++ dot you",
    "start": "2885720",
    "end": "2891760"
  },
  {
    "text": "know the whole net environment python uh hascal Java go like all of these things",
    "start": "2891760",
    "end": "2898640"
  },
  {
    "text": "are now capable of compiling to web assembly they're just not production ready though a lot of those are not production ready unfortunately which",
    "start": "2898640",
    "end": "2905319"
  },
  {
    "text": "ones would you say are rust and C++ are by far the biggest ones that are production ready those I would have full",
    "start": "2905319",
    "end": "2912000"
  },
  {
    "text": "confidence in using those in production any of the dynamic ones any ones that require garbage collection and all that",
    "start": "2912000",
    "end": "2918359"
  },
  {
    "text": "stuff uh you may be able to use it in production but you're definitely going to be a early adopter um you know go for",
    "start": "2918359",
    "end": "2926480"
  },
  {
    "text": "example had to do a lot of clever tricks to work around um the like they had to",
    "start": "2926480",
    "end": "2933760"
  },
  {
    "text": "they essentially spill their entire call stack into linear memory so that they can do uh garbage collection on it and",
    "start": "2933760",
    "end": "2941440"
  },
  {
    "text": "that has a pretty big cost and it's it's a temporary Trade off right until web assembly gets that GC support or the",
    "start": "2941440",
    "end": "2948680"
  },
  {
    "text": "ability to introspect the the call stack within like it it's this is all this is getting pretty low level but the web",
    "start": "2948680",
    "end": "2954559"
  },
  {
    "text": "assembly stack it's a stack machine and you can't currently introspect that stack um so there's the to do any kind",
    "start": "2954559",
    "end": "2962839"
  },
  {
    "text": "of garbage collection within your language you have to basically duplicate or move the uh your pointers and and",
    "start": "2962839",
    "end": "2969280"
  },
  {
    "text": "your your Lo stuff that may be locally on like you would normally have on the stack has to actually get in linear",
    "start": "2969280",
    "end": "2975720"
  },
  {
    "text": "memory like essentially you can think of it as even things you would normally do on the stack you have to do on the Heap",
    "start": "2975720",
    "end": "2981359"
  },
  {
    "text": "and so that I hopefully you know if if you know a little bit about stack versus Heap that can give you an example of",
    "start": "2981359",
    "end": "2987440"
  },
  {
    "text": "that it's you know going to be expensive to be spilling these things into the into that linear memory yeah as a as a",
    "start": "2987440",
    "end": "2994000"
  },
  {
    "text": "highlight of how expensive that is I saw thing recently that um it's just sort of an a side but Microsoft Edge sped up uh",
    "start": "2994000",
    "end": "3002760"
  },
  {
    "text": "some form of array looping by 2.5x by changing the implementation from C++ to",
    "start": "3002760",
    "end": "3008200"
  },
  {
    "text": "JavaScript of all things but the main reason was that let them shift their memory so they were were able to shift",
    "start": "3008200",
    "end": "3015839"
  },
  {
    "text": "from Heap to stack interesting you have to share that link with me later because I I i' love to read that it was pretty I",
    "start": "3015839",
    "end": "3022760"
  },
  {
    "text": "I saw that and I was like so you're speeding up your JavaScript by going from a native implementation to writing",
    "start": "3022760",
    "end": "3028559"
  },
  {
    "text": "it in JavaScript I love that and that's I think one of the hard things it's the",
    "start": "3028559",
    "end": "3034319"
  },
  {
    "text": "hardest thing about talking about performance and web assembly is no different is Nuance right I can say it's",
    "start": "3034319",
    "end": "3042000"
  },
  {
    "text": "faster but that's not always true right there's certainly going to be cases where javascripts faster especially now",
    "start": "3042000",
    "end": "3048680"
  },
  {
    "text": "because it's so early and I think that that's you know the trouble people have is they get so you know they they latch",
    "start": "3048680",
    "end": "3056319"
  },
  {
    "text": "onto a specific phrase and then they try and prove how wrong it is you know they're like oh web assembly they're",
    "start": "3056319",
    "end": "3062520"
  },
  {
    "text": "like you know oh the binaries are small huh well I'm going to go and and use this brand new tool chain that just got",
    "start": "3062520",
    "end": "3069680"
  },
  {
    "text": "released and complain about how the binaries are are are 10 Megs or something you know like uh it's true",
    "start": "3069680",
    "end": "3076799"
  },
  {
    "text": "that like the especially from the Native world like so think about it this way the native world for the most part has",
    "start": "3076799",
    "end": "3083040"
  },
  {
    "text": "not really had to care about file size it's it's there it's within reason right you don't want you know a 2 gab",
    "start": "3083040",
    "end": "3090559"
  },
  {
    "text": "executable but the difference between you know one bite and a Meg is really",
    "start": "3090559",
    "end": "3098440"
  },
  {
    "text": "pointless in in the native world for the most part and so they they haven't",
    "start": "3098440",
    "end": "3103720"
  },
  {
    "text": "really focused on those types of optimizations historically so the tool tool chain stuff that compiles to web",
    "start": "3103720",
    "end": "3109359"
  },
  {
    "text": "assembly you know the early on stuff and they' it's already gotten way better but early early on it was pretty bad like it",
    "start": "3109359",
    "end": "3115280"
  },
  {
    "text": "would not be unusual to compile the web assembly and get um you know 20 meg",
    "start": "3115280",
    "end": "3120839"
  },
  {
    "text": "files and you they've gotten improve super improvements on that and now like",
    "start": "3120839",
    "end": "3125960"
  },
  {
    "text": "with it with rust and C++ with the right with the right flags and stuff you can get that down to you know just a couple",
    "start": "3125960",
    "end": "3132440"
  },
  {
    "text": "of K for just a hello for a simple Hello World um but you know like there's a lot",
    "start": "3132440",
    "end": "3138839"
  },
  {
    "text": "of trade-offs right so like one of the biggest things ironically for Rus and C++ is you need a way to allocate memory",
    "start": "3138839",
    "end": "3145200"
  },
  {
    "text": "on the Heap and so like your Malik and you're free and Malik and free are actually fairly large implementations",
    "start": "3145200",
    "end": "3152160"
  },
  {
    "text": "for most of them like there's um there's a bunch of like there's the ones that come with like built into the operating",
    "start": "3152160",
    "end": "3158040"
  },
  {
    "text": "systems and stuff but then there's Community Based ones like rust uses a totally different one by default than",
    "start": "3158040",
    "end": "3163400"
  },
  {
    "text": "than OS ones because you know they have different trade-offs but all of those allocators are the trade-off was one of",
    "start": "3163400",
    "end": "3171799"
  },
  {
    "text": "the trade-offs they did was having more code like to you know to to like you",
    "start": "3171799",
    "end": "3178559"
  },
  {
    "text": "have bigger binary size smaller Heap usage overall like fragmentation and stuff like that so one of the choices",
    "start": "3178559",
    "end": "3185400"
  },
  {
    "text": "people are going to have to make and rust is actually uh um rust and C++",
    "start": "3185400",
    "end": "3191000"
  },
  {
    "text": "excuse me are both the the people who are working on the web assembly implementations are both working on um smaller allocators that will make the",
    "start": "3191000",
    "end": "3198119"
  },
  {
    "text": "opposite trade-off of of like you can choose you can say I want a smaller bundle at the expense of having slower",
    "start": "3198119",
    "end": "3205440"
  },
  {
    "text": "allocations um you know cuz you you can't you know it's it's all physics right it's give and take you can't just",
    "start": "3205440",
    "end": "3211040"
  },
  {
    "text": "magically create things be fast um so it'll depend on the project like if",
    "start": "3211040",
    "end": "3216520"
  },
  {
    "text": "you're trying to L like a perfect example of it is if you're trying to use if you're just trying to compile to web",
    "start": "3216520",
    "end": "3223119"
  },
  {
    "text": "assembly a small Library tiny little Library you may want to use the smaller allocator that you know trades file size",
    "start": "3223119",
    "end": "3230920"
  },
  {
    "text": "for performance uh if you're writing your entire app in a language that comp pass",
    "start": "3230920",
    "end": "3236960"
  },
  {
    "text": "to web assembly you probably don't care about that you probably want the better allocator because that size is",
    "start": "3236960",
    "end": "3242960"
  },
  {
    "text": "essentially amortized like that that if the allocator is 2 kilobytes in the grand scheme of your app 2 kilobytes",
    "start": "3242960",
    "end": "3249359"
  },
  {
    "text": "means nothing right so it's like it'd be worth that performance difference and um",
    "start": "3249359",
    "end": "3254599"
  },
  {
    "text": "and we're not talking like slow versus Fast we're just talking you know micro benchmarks especially when it comes to",
    "start": "3254599",
    "end": "3260559"
  },
  {
    "text": "to very small allocations so here's an interesting question along these lines um so we're describing here if we were",
    "start": "3260559",
    "end": "3268240"
  },
  {
    "text": "going to the you know compiled language world is basically everything is statically linked right you're embedding",
    "start": "3268240",
    "end": "3273520"
  },
  {
    "text": "all these libraries that you're going to use in your binary that you're going to ship is there anything on the horizon",
    "start": "3273520",
    "end": "3281240"
  },
  {
    "text": "that looks like you essentially Dynamic systems libraries so that you know the browsers and whatever VMS would have a",
    "start": "3281240",
    "end": "3288000"
  },
  {
    "text": "standard Malik implementation that you could dynamically link to and not have to ship that over the wire um you know",
    "start": "3288000",
    "end": "3294119"
  },
  {
    "text": "you can think of the anything you import from the web assembly module or when you",
    "start": "3294119",
    "end": "3299400"
  },
  {
    "text": "say import the you're not doing that in your C++ or your rest but the the compiler does it so like because web",
    "start": "3299400",
    "end": "3305839"
  },
  {
    "text": "simp can't do anything without you know can't do anything external without JavaScript you technically already you",
    "start": "3305839",
    "end": "3311520"
  },
  {
    "text": "already are doing Dynamic linking always like you can't use web assembly in the browser today without Dynamic linking",
    "start": "3311520",
    "end": "3317839"
  },
  {
    "text": "something and um as far as the browser providing something there's going to you know it's going to provide the host",
    "start": "3317839",
    "end": "3323640"
  },
  {
    "text": "bindings eventually so you'll be able to create Dom nodes and print of the log print of the log and all that so that's",
    "start": "3323640",
    "end": "3329680"
  },
  {
    "text": "technically going to be dynamically linked uh as far as providing standard Library stuff like Malak and free or um",
    "start": "3329680",
    "end": "3338280"
  },
  {
    "text": "sbrk like the lower the lower end ones of those there's been discussions um",
    "start": "3338280",
    "end": "3343799"
  },
  {
    "text": "it's tough because it's such an opinionated thing right like Malik is even is even even something that most",
    "start": "3343799",
    "end": "3350920"
  },
  {
    "text": "people would if you if you know about Malik you might not even realize that there are lots of implementations of Malik that's an opinionated thing so",
    "start": "3350920",
    "end": "3359039"
  },
  {
    "text": "right um instead of that one of the focuses has been also making",
    "start": "3359039",
    "end": "3364640"
  },
  {
    "text": "caching making the caching story easier so that that becomes less of an issue you can imagine there being lots of CDN",
    "start": "3364640",
    "end": "3373000"
  },
  {
    "text": "links for standard Library stuff you know like you know you you pull in the C standard library and that just gets",
    "start": "3373000",
    "end": "3379960"
  },
  {
    "text": "cashed and reused across you know cross origin between all the different web assembly applications and stuff like",
    "start": "3379960",
    "end": "3385359"
  },
  {
    "text": "that so the you know like not just the file gets cached but the compilation itself gets",
    "start": "3385359",
    "end": "3390640"
  },
  {
    "text": "cached so the fact that it's you know a different file doesn't really you know it's not really that important um that's",
    "start": "3390640",
    "end": "3397599"
  },
  {
    "text": "not doable today but that is um definitely you know something that that's been considered and talked about",
    "start": "3397599",
    "end": "3403880"
  },
  {
    "text": "and um a goal is to make those type of use cases easier it's just so that um you know code can get reused especially",
    "start": "3403880",
    "end": "3410319"
  },
  {
    "text": "when when you know things can that you can have a lot of excess file size that you just don't you don't you know it's",
    "start": "3410319",
    "end": "3415599"
  },
  {
    "text": "kind of a pain because it's like kind of goes back to the jQuery days right where every website had jQuery and it's like",
    "start": "3415599",
    "end": "3421480"
  },
  {
    "text": "well wouldn't it be nice if everyone just shared the same jQuery yep and we got that with cdns and then we",
    "start": "3421480",
    "end": "3428280"
  },
  {
    "text": "introduced module bu and now we've thrown it exactly and then we walked away from it y but uh you know there's",
    "start": "3428280",
    "end": "3433720"
  },
  {
    "text": "some things where it's where you know in the JavaScript World things move very quickly whereas like in some of the",
    "start": "3433720",
    "end": "3440200"
  },
  {
    "text": "standard Library worlds they move very slowly like the CH like Malik doesn't really change for the most part for for",
    "start": "3440200",
    "end": "3446880"
  },
  {
    "text": "a lot of standard libraries you know there's always going to be new implementations and stuff like that but",
    "start": "3446880",
    "end": "3452440"
  },
  {
    "text": "uh you know the caching those things heavily can can is definitely something we're going to want to do at some point",
    "start": "3452440",
    "end": "3459119"
  },
  {
    "text": "um whether the browser will expose those things directly itself like provide its own opinionated Malik and free if I had",
    "start": "3459119",
    "end": "3465680"
  },
  {
    "text": "to guess I would say they won't um it's just too contentious like I just I just",
    "start": "3465680",
    "end": "3471039"
  },
  {
    "text": "can't see that happening Suz anything else on your mind for web assembly you said coming in you had lots of questions",
    "start": "3471039",
    "end": "3476680"
  },
  {
    "text": "yeah I think that I'm thinking about this from the web developer perspective you know who works 9 to5 UM at a company",
    "start": "3476680",
    "end": "3484200"
  },
  {
    "text": "that you know they work on a product that gets released on the web given that this is so early on and given that",
    "start": "3484200",
    "end": "3490240"
  },
  {
    "text": "there's a few already like performance benef um you know based benefits for starting to use web assembly are there",
    "start": "3490240",
    "end": "3498119"
  },
  {
    "text": "any lwh hanging fruit that they can sort of focus on for now while they're waiting for it to be ready where they",
    "start": "3498119",
    "end": "3504160"
  },
  {
    "text": "can sort of arm themselves with enough knowledge to start using this stuff to",
    "start": "3504160",
    "end": "3510280"
  },
  {
    "text": "improve the product that they're already working on I guess you know how is it relevant to um you know the day-to-day",
    "start": "3510280",
    "end": "3516119"
  },
  {
    "text": "web developer right now well aside from the fact that you know like you're probably already using web actually I",
    "start": "3516119",
    "end": "3522400"
  },
  {
    "text": "would say I would argue that almost every single person listening to this is probably using web assembly without knowing it like going back to that that",
    "start": "3522400",
    "end": "3528160"
  },
  {
    "text": "Source map is an example of of one of the many projects that have imported to web assembly that we all use just",
    "start": "3528160",
    "end": "3534839"
  },
  {
    "text": "transparently um I would say if if you're I I personally",
    "start": "3534839",
    "end": "3540079"
  },
  {
    "text": "even though I'm super obsessed with assembly and super excited about it I don't try and I don't try and Advocate",
    "start": "3540079",
    "end": "3546160"
  },
  {
    "text": "people Force you know Force themselves or or I don't super Advocate you know try and find somewhere just to use web",
    "start": "3546160",
    "end": "3552400"
  },
  {
    "text": "assembly for the sake of um so certainly the average crud app with where you know all you do is just you know you read you",
    "start": "3552400",
    "end": "3559119"
  },
  {
    "text": "know most applications are this way you just read files or read data from an API and then update those those forms and",
    "start": "3559119",
    "end": "3565359"
  },
  {
    "text": "stuff like that those things are not going to be super benefit from web assembly at this point I would not recommend going down that route um but",
    "start": "3565359",
    "end": "3573000"
  },
  {
    "text": "if you do with a lot of um you know if you do deal with as as you guys are saying kind of weird things um the I",
    "start": "3573000",
    "end": "3580119"
  },
  {
    "text": "would say the more weird it is the probably more likely it's a good fit forb assembly at this point um you know",
    "start": "3580119",
    "end": "3585480"
  },
  {
    "text": "like things with anything with dealing with algorithmic anything like you're dealing with algorithms it's probably a",
    "start": "3585480",
    "end": "3590599"
  },
  {
    "text": "great fit for web assembly um Graphics in general as well and um in the future",
    "start": "3590599",
    "end": "3596039"
  },
  {
    "text": "you know web assembly is going to get simd which is that single instruction multiple data it's really useful for for",
    "start": "3596039",
    "end": "3601319"
  },
  {
    "text": "doing vector-based stuff um really I am trying to I want people to be more aware",
    "start": "3601319",
    "end": "3607680"
  },
  {
    "text": "and excited about web assembly so that the browsers uh focus more on it as well so",
    "start": "3607680",
    "end": "3612799"
  },
  {
    "text": "that the revolution that I think is coming gets sped up right and in a perfect world like I'm envisioning five",
    "start": "3612799",
    "end": "3619839"
  },
  {
    "text": "years from now you don't really need to know anything about web assembly like it's just an implementation detail of",
    "start": "3619839",
    "end": "3626480"
  },
  {
    "text": "the language you're using right just like machine code like how many people compile for iOS and and know anything",
    "start": "3626480",
    "end": "3633240"
  },
  {
    "text": "about the arm instruction instruction set you know probably a tiny tiny",
    "start": "3633240",
    "end": "3638599"
  },
  {
    "text": "fraction of people doing that and so they don't need to know how their code gets compiled um and runs on the native",
    "start": "3638599",
    "end": "3646359"
  },
  {
    "text": "thing it just works uh we're we're not quite there yet with web assembly because it's so early but that's the",
    "start": "3646359",
    "end": "3651920"
  },
  {
    "text": "goal is that you you will just be able to transparently take advantage of it you'll be able to use your reason your",
    "start": "3651920",
    "end": "3657559"
  },
  {
    "text": "Elm or some brand new language that hasn't even existed yet and um transparently compiled to web assembly",
    "start": "3657559",
    "end": "3663400"
  },
  {
    "text": "and everything just [Music] works all right thank you for tuning in",
    "start": "3663400",
    "end": "3668480"
  },
  {
    "text": "to JS party this week tuning live on Thursdays at 1 p.m us Eastern at Chang",
    "start": "3668480",
    "end": "3674559"
  },
  {
    "text": "law.com Live join the community and slack with us in real time during the shows head to Chang law.com SL community",
    "start": "3674559",
    "end": "3681079"
  },
  {
    "text": "and do us a favor share this show with a friend RN a podcast go into overcast and favored it and thank you to fastly our",
    "start": "3681079",
    "end": "3688359"
  },
  {
    "text": "bandwidth partner head to fastly.com to learn more and we move fast to fix things right here at Chang law because",
    "start": "3688359",
    "end": "3693520"
  },
  {
    "text": "of rbar check them out at roar.com we're hosted on Leno Cloud servers at the",
    "start": "3693520",
    "end": "3698760"
  },
  {
    "text": "lin.com changelog check them out and support this show our music is produced by break master cylinder and you can",
    "start": "3698760",
    "end": "3704920"
  },
  {
    "text": "find more shows just like this at change.com thanks for tuning in we'll see you next",
    "start": "3704920",
    "end": "3710900"
  },
  {
    "text": "[Music] week",
    "start": "3710900",
    "end": "3717839"
  }
]