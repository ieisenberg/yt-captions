[
  {
    "text": "what are some of the ways you've seen people push migrations to production what does that process look like so I think there's three main ways the first",
    "start": "120",
    "end": "6960"
  },
  {
    "text": "one is doing it ad hog like running SQL against your database creating tables and so forth so we call that let's say",
    "start": "6960",
    "end": "12559"
  },
  {
    "text": "the manual way then there's the semi manual way where you have a tool let's say on your Local Host like Goose or",
    "start": "12559",
    "end": "19199"
  },
  {
    "text": "goang migrate and you set up the connection strings and then you're just reading directly from your local file",
    "start": "19199",
    "end": "24560"
  },
  {
    "text": "system and then applying that to production but then eventually when you get to larger organizations where you",
    "start": "24560",
    "end": "30160"
  },
  {
    "text": "want to have auditability versioning being able to track like what happened in production then you set up a",
    "start": "30160",
    "end": "36640"
  },
  {
    "text": "continuous deployment environment where that step of physically taking some files and applying them production is",
    "start": "36640",
    "end": "42239"
  },
  {
    "text": "carried out in your cicd pipeline what's up Gophers have you",
    "start": "42239",
    "end": "48440"
  },
  {
    "text": "heard of the devops platform that's helping teams and orgs work more efficiently deliver better software",
    "start": "48440",
    "end": "53800"
  },
  {
    "text": "faster and reduce risk and cost what if I told you there's a free tier for that platform as well yes I'm talking about G",
    "start": "53800",
    "end": "59960"
  },
  {
    "text": "lab the devops platform that empowers organizations to maximize the overall return on software development by",
    "start": "59960",
    "end": "66040"
  },
  {
    "text": "delivering software faster more efficiently while strengthening security and compliance G laab helps teams",
    "start": "66040",
    "end": "72240"
  },
  {
    "text": "identify and address blockers immediately in a single tool focus on delivering value not maintaining",
    "start": "72240",
    "end": "78040"
  },
  {
    "text": "Integrations and automate security and compliance without compromising speed or spend you can get started with their",
    "start": "78040",
    "end": "83920"
  },
  {
    "text": "free tier with no credit card required and prove to yourself and your team that the platform has everything you need",
    "start": "83920",
    "end": "89280"
  },
  {
    "text": "head to a out. gitlab.com Solutions devops platform or check the",
    "start": "89280",
    "end": "95520"
  },
  {
    "text": "CHS for a link to get started again links are in the show [Music]",
    "start": "95520",
    "end": "106769"
  },
  {
    "text": "notes let's do it it's go time welcome to go time your source for diverse",
    "start": "112320",
    "end": "119360"
  },
  {
    "text": "discussions from around the go Community special thanks to our partners at fastly for making sure you receive our MP3s",
    "start": "119360",
    "end": "125920"
  },
  {
    "text": "super fast all around the world check them out at fastly.com we record live",
    "start": "125920",
    "end": "131599"
  },
  {
    "text": "each and every Tuesday at 300 p.m. us Eastern come hang with the go time crew",
    "start": "131599",
    "end": "136800"
  },
  {
    "text": "and chat along in the go time FM channel of go ver slack okay here we",
    "start": "136800",
    "end": "142220"
  },
  {
    "text": "[Music] go hello everyone and welcome to go time",
    "start": "142220",
    "end": "150280"
  },
  {
    "text": "so today I am joined by Mike fredman hey Mike how are you hello I'm also joined",
    "start": "150280",
    "end": "155560"
  },
  {
    "text": "by voytech VTEC hello there VTech how are you I'm good and today we're going to be talking about schema migrations so",
    "start": "155560",
    "end": "162120"
  },
  {
    "text": "we're going to be talking about tools that you can use to manage these different processes around them some",
    "start": "162120",
    "end": "167680"
  },
  {
    "text": "mistakes you can make and maybe some tips on how to avoid them hopefully so we're going to be diving into all of",
    "start": "167680",
    "end": "173120"
  },
  {
    "text": "that let's just start off by talking about what are migrations do one of you want to take that one yeah sure I could",
    "start": "173120",
    "end": "179519"
  },
  {
    "text": "take crack at it so at a very high level migrations or the type of migrations",
    "start": "179519",
    "end": "184799"
  },
  {
    "text": "that we're going to talk about are schema migrations so that's taking some SQL and then evolving your database over",
    "start": "184799",
    "end": "192920"
  },
  {
    "text": "time So for anybody who like started I guess depends on when you started but for somebody who started in the day",
    "start": "192920",
    "end": "198360"
  },
  {
    "text": "where you would just pop into like PHP myadmin and just type in some SQL and and change your data base why do we need",
    "start": "198360",
    "end": "205920"
  },
  {
    "text": "something to track migrations like why is that an important thing voytech do you want to take that one sure I think",
    "start": "205920",
    "end": "211680"
  },
  {
    "text": "about uh database migration as a g for your SQL schema you need to make sure",
    "start": "211680",
    "end": "217959"
  },
  {
    "text": "that the schema is correct and valid in all environments including the local",
    "start": "217959",
    "end": "223760"
  },
  {
    "text": "host for all the developers machines and then for development staging production whatever environment you have you want",
    "start": "223760",
    "end": "230760"
  },
  {
    "text": "to make sure that your database schema is always in the same state that makes",
    "start": "230760",
    "end": "236120"
  },
  {
    "text": "sense I'm sure we've all ran into some of those issues where uh something seems to be working locally and it's not",
    "start": "236120",
    "end": "242079"
  },
  {
    "text": "somewhere else and database migrations can definitely be one of those cases where if you've done something locally",
    "start": "242079",
    "end": "247360"
  },
  {
    "text": "and forgot and you've done it it can have a big impact on whether it's going to work somewhere else so to start here",
    "start": "247360",
    "end": "253239"
  },
  {
    "text": "I want to talk a little bit about the tooling around it because one of the questions we get asked a lot is how should people be running these",
    "start": "253239",
    "end": "259440"
  },
  {
    "text": "migrations what sort of tooling should they be using and you know how do these tools even work and I think a lot of",
    "start": "259440",
    "end": "264759"
  },
  {
    "text": "times this stems from the fact that people come from a framework like Ruby on Rails where all of that kind of baked",
    "start": "264759",
    "end": "270400"
  },
  {
    "text": "into it and they don't even think about it but then in go that's not really the case because we're not using a big framework so what are some of the tools",
    "start": "270400",
    "end": "277039"
  },
  {
    "text": "out there and I guess if you can elaborate a little bit on like what they're actually doing behind the scenes",
    "start": "277039",
    "end": "282400"
  },
  {
    "text": "I guess maybe we should maybe as a suggestion take it one step back and understand like why we're doing this in",
    "start": "282400",
    "end": "288880"
  },
  {
    "text": "the first place before we get to a tool so like before you even jump into a tool as a developer you're usually developing",
    "start": "288880",
    "end": "295280"
  },
  {
    "text": "some backend application and you want to make incremental changes to your database because new requirements come",
    "start": "295280",
    "end": "301880"
  },
  {
    "text": "up or you understand users better and if you're a single developer on a single",
    "start": "301880",
    "end": "307240"
  },
  {
    "text": "system you can probably get away by applying migrations directly doing an ad",
    "start": "307240",
    "end": "312479"
  },
  {
    "text": "hoc deployment and then just calling it a day but as soon as you get into a team or an organization and you have multiple",
    "start": "312479",
    "end": "319280"
  },
  {
    "text": "developers working in parallel there needs to be some sort of a process to coordinate how do you incrementally make",
    "start": "319280",
    "end": "325600"
  },
  {
    "text": "changes to your database over time and then you want to sort of decouple that from your application and then be able",
    "start": "325600",
    "end": "332960"
  },
  {
    "text": "to eventually roll that out so some of the tools that you would use would be go",
    "start": "332960",
    "end": "338280"
  },
  {
    "text": "langang migrate I think that's the most popular one probably because of SEO I think there's other ones such as dbate",
    "start": "338280",
    "end": "344840"
  },
  {
    "text": "me and voytech maintain one called Presley Goose but at a very high level the way these things work is usually",
    "start": "344840",
    "end": "351720"
  },
  {
    "text": "have a migrations directory and that directory is going to contain SQL files",
    "start": "351720",
    "end": "357360"
  },
  {
    "text": "or go files depending if the tool supports and those files are usually going to be",
    "start": "357360",
    "end": "362639"
  },
  {
    "text": "incrementing integers so like 1 2 3 or they might be timestamps like year month",
    "start": "362639",
    "end": "368039"
  },
  {
    "text": "date hour minute seconds so they're large numbers but they're still incrementing over time and then these",
    "start": "368039",
    "end": "374400"
  },
  {
    "text": "tools they're only responsibility is to read those files and determine whether",
    "start": "374400",
    "end": "380919"
  },
  {
    "text": "those migrations have been applied or not and then keep track of that with usually a mat metad data or schema",
    "start": "380919",
    "end": "388759"
  },
  {
    "text": "history tape in a database so when you talk about like a history table in the database this means I think a lot of",
    "start": "388759",
    "end": "394360"
  },
  {
    "text": "people don't quite realize this but this would mean that we're actually your tool is going to create a table in their database that keeps track of these",
    "start": "394360",
    "end": "400520"
  },
  {
    "text": "things so whenever it's actually running the migrations it's going to say has migration 01 run and if so it's going to",
    "start": "400520",
    "end": "406639"
  },
  {
    "text": "skip it otherwise it's going to run it is that correct yeah that's pretty much what it does depending on the tool",
    "start": "406639",
    "end": "411880"
  },
  {
    "text": "different tools work slightly differently but conceptually that's what happens is you read your files you read",
    "start": "411880",
    "end": "417960"
  },
  {
    "text": "kind of where you are in in terms of the version that you're currently at and then any new migrations should be",
    "start": "417960",
    "end": "424400"
  },
  {
    "text": "applied so presumably this could lead to a case where I guess the one way I'd look at it is I think I've seen people",
    "start": "424400",
    "end": "430360"
  },
  {
    "text": "change migrations that have already run and then that can be confusing to them and I think that's in part because they don't quite understand how they work and",
    "start": "430360",
    "end": "437520"
  },
  {
    "text": "I suppose this could also lead to cases where you need to undo migration so what would that process look like yeah so",
    "start": "437520",
    "end": "443160"
  },
  {
    "text": "usually when you write these SQL files you'll usually create an up migration so",
    "start": "443160",
    "end": "449000"
  },
  {
    "text": "that'll be something like create table alter table add an index maybe even drop an index that could be your up migration",
    "start": "449000",
    "end": "456160"
  },
  {
    "text": "and then you'll provide the corresponding way to roll that change back so it'll be something like Drop",
    "start": "456160",
    "end": "462800"
  },
  {
    "text": "table drop a column drop an index whatever that may be so depending on the",
    "start": "462800",
    "end": "468039"
  },
  {
    "text": "tool you use like for example go laying migrate you have two separate files so you'll have something like 01 create",
    "start": "468039",
    "end": "475520"
  },
  {
    "text": "table up and then you'll have 01 create table down down and when you do your up",
    "start": "475520",
    "end": "481759"
  },
  {
    "text": "migrations that creates the table when you do your down migration that drops the table so you kind of have a way to",
    "start": "481759",
    "end": "487560"
  },
  {
    "text": "go forwards and backwards in your migrations so when we're looking at these migrations another question that",
    "start": "487560",
    "end": "493120"
  },
  {
    "text": "that I've seen pop up is is it possible for them to run not like directly in the order that's listed you know like if",
    "start": "493120",
    "end": "498759"
  },
  {
    "text": "you're sorting I guess alphabetically I'm not sure what the basically you know they're sorted by the number like the 0",
    "start": "498759",
    "end": "504639"
  },
  {
    "text": "1 02 03 is it possible for these to not run in the order that they're listed in the directory it depends on the tool so",
    "start": "504639",
    "end": "511599"
  },
  {
    "text": "this is actually an interesting one because the number one requested feature",
    "start": "511599",
    "end": "516719"
  },
  {
    "text": "in Goose was being able to apply outof order migrations because from what I",
    "start": "516719",
    "end": "522399"
  },
  {
    "text": "understand and it's been like eight years since I've done any rails work in rails you have time based migrations and",
    "start": "522399",
    "end": "529959"
  },
  {
    "text": "you kind of just apply the migration and call it a day you don't think about it too too much so depending on the tool if",
    "start": "529959",
    "end": "538000"
  },
  {
    "text": "you're tracking every every single migration that you have historically applied you can start to determine",
    "start": "538000",
    "end": "544120"
  },
  {
    "text": "whether you have outof order migrations and the way you get to outof order migrations can be for example two",
    "start": "544120",
    "end": "550279"
  },
  {
    "text": "developers checking out the repo on the same day creating let's say a sequential number or a time space number and then",
    "start": "550279",
    "end": "557839"
  },
  {
    "text": "trying to apply those depending on the Tool uh you'll get conflicts like if you're trying to apply migration 26 and",
    "start": "557839",
    "end": "564240"
  },
  {
    "text": "another developer already applied 26 like the tool will tell you to fail but the tool can also detect that you have",
    "start": "564240",
    "end": "571560"
  },
  {
    "text": "outof order migrations and allow you to apply those migrations if you want to or",
    "start": "571560",
    "end": "577600"
  },
  {
    "text": "if you don't Supply the correct flag it'll just fail and say hey this is out of order you need to either fix it or",
    "start": "577600",
    "end": "583480"
  },
  {
    "text": "provide the flag goang migrate does not do this because it only keeps track of",
    "start": "583480",
    "end": "588720"
  },
  {
    "text": "the latest migration that was applied so you literally have like your metadata table it'll have one entry in there and",
    "start": "588720",
    "end": "595920"
  },
  {
    "text": "it'll say like migration 14 has been applied and that's but you don't know historically when the other migrations",
    "start": "595920",
    "end": "601839"
  },
  {
    "text": "have been applied okay personally I think it's better idea to use the sequential versions I think there are",
    "start": "601839",
    "end": "609480"
  },
  {
    "text": "there are pros and cons to both approaches if you have the time stamp migrations I think it's a little bit",
    "start": "609480",
    "end": "616880"
  },
  {
    "text": "easier for the developers to work with it because you generate the file just once the time stamp will be generated at",
    "start": "616880",
    "end": "623519"
  },
  {
    "text": "the time where you actually execute the command to create the migration file and then you call the day but then if you",
    "start": "623519",
    "end": "630959"
  },
  {
    "text": "have multiple people working on different feature branches at the same time some of the feature branches might",
    "start": "630959",
    "end": "637079"
  },
  {
    "text": "take much longer to get merged into the main branch and eventually you will end",
    "start": "637079",
    "end": "643600"
  },
  {
    "text": "up in a state where perhaps you push something into development or staging",
    "start": "643600",
    "end": "649320"
  },
  {
    "text": "environment sooner than it would get apply to production and this may happen",
    "start": "649320",
    "end": "656399"
  },
  {
    "text": "with the time stamp migrations however I think it's just very like Edge casy",
    "start": "656399",
    "end": "662600"
  },
  {
    "text": "thing that can happen if you run into any issues with this approach I prefer the sequential like increments for div",
    "start": "662600",
    "end": "670560"
  },
  {
    "text": "vering just because I like to think about this history for the schema uh",
    "start": "670560",
    "end": "676639"
  },
  {
    "text": "linearly right so every single change has to go in order and this is ured by",
    "start": "676639",
    "end": "684760"
  },
  {
    "text": "the sequential numbers I think it's one of those things that like out of order sort made sense with rails where people",
    "start": "684760",
    "end": "690440"
  },
  {
    "text": "expect things to kind of magically work they don't want to have to go in and like merge some conflict where you know",
    "start": "690440",
    "end": "695839"
  },
  {
    "text": "two people both generated a migration 24 or something because with when you're using migrations that are like expected",
    "start": "695839",
    "end": "701880"
  },
  {
    "text": "to go in a sequential order I suppose the the issue there is that if you and I check out a branch at the same time",
    "start": "701880",
    "end": "707360"
  },
  {
    "text": "voytech and then you check yours in sooner when I go to check mine in all of a sudden my migration number is going to be wrong I'm going to have to fix",
    "start": "707360",
    "end": "713360"
  },
  {
    "text": "something at that point to to actually get it to work and I think one of the reasons people like the out of order is",
    "start": "713360",
    "end": "718399"
  },
  {
    "text": "that they don't really have to worry about it they can kind of just if they're time based at least you can just submit it and be like okay whatever it",
    "start": "718399",
    "end": "723839"
  },
  {
    "text": "runs but there's definitely cases that that could be an issue or it's definitely a bad idea to have something",
    "start": "723839",
    "end": "729800"
  },
  {
    "text": "where you've only tested it in one order on your computer and then when you go to push it to production it's going to be running in a different order and you",
    "start": "729800",
    "end": "735680"
  },
  {
    "text": "don't actually know for sure that's going to work that's exactly right so like this out of order thing it may have",
    "start": "735680",
    "end": "741880"
  },
  {
    "text": "some edge cases but you're very unlikely to hit them but once you hit them it's",
    "start": "741880",
    "end": "747079"
  },
  {
    "text": "going to be a big problem and you will have a hard time dealing with some production issue right but there's one",
    "start": "747079",
    "end": "753800"
  },
  {
    "text": "more thing that I want wanted to mention I think the sequential numbering might have another benefit which is if you are",
    "start": "753800",
    "end": "761720"
  },
  {
    "text": "pushing a single change single deployment consisting of five different migration files maybe one of them is",
    "start": "761720",
    "end": "768519"
  },
  {
    "text": "adding a new table second one is adding a new column somewhere else the third",
    "start": "768519",
    "end": "774000"
  },
  {
    "text": "one is doing indexes or some data manipulation right what happens if this",
    "start": "774000",
    "end": "779680"
  },
  {
    "text": "doesn't go well how do you roll back to the very first migration that you wanted",
    "start": "779680",
    "end": "785079"
  },
  {
    "text": "to push out if for example the fourth one failed with the time stamp migrations the tool would have to",
    "start": "785079",
    "end": "792600"
  },
  {
    "text": "somehow track it in the database so you can roll back the right ones because you",
    "start": "792600",
    "end": "798120"
  },
  {
    "text": "cannot really rely on the number anymore so you need to rely on some other",
    "start": "798120",
    "end": "803160"
  },
  {
    "text": "mechanism with sequential numbers it's quite easy if you apply four then you'll",
    "start": "803160",
    "end": "808279"
  },
  {
    "text": "just roll back the the recent four that's it yeah I think that's a good thing to keep in mind because While most",
    "start": "808279",
    "end": "814079"
  },
  {
    "text": "of the time migrations hopefully go well the few times that they don't especially if you're trying to deploy or something",
    "start": "814079",
    "end": "819959"
  },
  {
    "text": "like that's not a time when you want to be like trying to figure out your tooling or how it works I know I've had",
    "start": "819959",
    "end": "825279"
  },
  {
    "text": "experiences not in production but I've had other experiences where like something goes wrong with a migration",
    "start": "825279",
    "end": "830320"
  },
  {
    "text": "and it's always frustrating to have to sit there and figure out how do I fix this and get back to a working State again I call this panic mode it is panic",
    "start": "830320",
    "end": "837399"
  },
  {
    "text": "mode sometimes because you cannot think straight when there are people calling",
    "start": "837399",
    "end": "842440"
  },
  {
    "text": "you that there's a you know Productions down what am I going to do so talking about that when you talked about",
    "start": "842440",
    "end": "847600"
  },
  {
    "text": "migrations that go bad I think different tools sort of handle this differently so I know one of the approaches is to what",
    "start": "847600",
    "end": "853880"
  },
  {
    "text": "run the entire migration in a transaction and then other tools I guess sometimes don't kind of what's the",
    "start": "853880",
    "end": "860279"
  },
  {
    "text": "difference for people out there who what's the difference between running at migration maybe what are some of the pros or cons to not doing that so G is",
    "start": "860279",
    "end": "867240"
  },
  {
    "text": "uh actually giving you the option to run a migration within the transaction or",
    "start": "867240",
    "end": "872959"
  },
  {
    "text": "not which is good because like not all the SQL queries can be run within the transaction right by default it is run",
    "start": "872959",
    "end": "880920"
  },
  {
    "text": "in transaction and it's good because if something fails you know that it will roll back to the previous state and the",
    "start": "880920",
    "end": "887560"
  },
  {
    "text": "database engine will handle the rest you can know for sure that the state of the database will be in good shape there is",
    "start": "887560",
    "end": "895279"
  },
  {
    "text": "also one more thing which is yeah that's what I wanted to mention about goine migrate it is using database locking",
    "start": "895279",
    "end": "902279"
  },
  {
    "text": "mechanism so for example when you run this it will lock the database first and",
    "start": "902279",
    "end": "907839"
  },
  {
    "text": "then it will start to apply all the migrations and then it will commit to",
    "start": "907839",
    "end": "913040"
  },
  {
    "text": "transaction and then it will unlock the database again so that's one of the difference between goine migrate and",
    "start": "913040",
    "end": "920639"
  },
  {
    "text": "pressle go pressle Goose on the other hand doesn't use any locking mechanism",
    "start": "920639",
    "end": "926040"
  },
  {
    "text": "because it supports lots of different database d drivers and not all of them can do locking and it actually defers",
    "start": "926040",
    "end": "933480"
  },
  {
    "text": "this problem to the executor so you are you as a developer or Ops guy you're",
    "start": "933480",
    "end": "940440"
  },
  {
    "text": "responsible to run the migration tool as a Singleton process and that can be done",
    "start": "940440",
    "end": "946720"
  },
  {
    "text": "in multiple ways in kubernetes he would spin up a job or a pot which has to",
    "start": "946720",
    "end": "952920"
  },
  {
    "text": "succeed and kubernetes will handle it because of the unique name of the PO or",
    "start": "952920",
    "end": "958279"
  },
  {
    "text": "if you you have some other tooling you need to make sure that you run this first before deploying the new version",
    "start": "958279",
    "end": "964440"
  },
  {
    "text": "of the application if you do the Locking that's fine too but I actually ran into",
    "start": "964440",
    "end": "970560"
  },
  {
    "text": "some issues with that when I locked the whole database and then I had to ask",
    "start": "970560",
    "end": "975839"
  },
  {
    "text": "like a dbas team to go into the database to to fix it for me because the database",
    "start": "975839",
    "end": "983040"
  },
  {
    "text": "was in the lock State and I couldn't fix it myself okay so like when we're",
    "start": "983040",
    "end": "988079"
  },
  {
    "text": "talking about the things running in migrations and you guys have also mentioned that it's possible to undo a",
    "start": "988079",
    "end": "993360"
  },
  {
    "text": "migration but in reality there are migrations that you can't truthfully undo if that makes sense so can you give",
    "start": "993360",
    "end": "999880"
  },
  {
    "text": "some examples of like what those type of migrations might be for people out there kind of wondering what those are I guess",
    "start": "999880",
    "end": "1005360"
  },
  {
    "text": "you can really undo stuff like deleting tables deleting deleting columns right",
    "start": "1005360",
    "end": "1010839"
  },
  {
    "text": "so I think like a good practice in general is don't delete stuff",
    "start": "1010839",
    "end": "1015959"
  },
  {
    "text": "prematurely right you are better off of leaving the table for a week or two and",
    "start": "1015959",
    "end": "1021360"
  },
  {
    "text": "then delete it when you know for a fact that it's not being used anywhere because if you deploy an uh like a",
    "start": "1021360",
    "end": "1028480"
  },
  {
    "text": "version of your schema and maybe your application that deletes some data you are losing a way to roll back that's",
    "start": "1028480",
    "end": "1035760"
  },
  {
    "text": "kind of the problem okay I was to say deletes are the ones that I've seen most common I there's Sometimes some Alters in data and things like that that are",
    "start": "1035760",
    "end": "1041640"
  },
  {
    "text": "also hard to revert but it kind of depends on what the alter is I think any type of data manipulation would be",
    "start": "1041640",
    "end": "1047558"
  },
  {
    "text": "another example to to so if you're changing the data let's say you're using some Json data structure in MySQL or",
    "start": "1047559",
    "end": "1055360"
  },
  {
    "text": "Json B in postgress and you're manipulating the data you're better off to again do some backup first because",
    "start": "1055360",
    "end": "1062919"
  },
  {
    "text": "there's no way back makes [Music]",
    "start": "1062919",
    "end": "1071440"
  },
  {
    "text": "sense hey there it's Jared again have you heard about change log Plus+ it's",
    "start": "1071440",
    "end": "1076600"
  },
  {
    "text": "our membership program you can join going to directly support our work on go time as a thanks for your support we",
    "start": "1076600",
    "end": "1082360"
  },
  {
    "text": "hook you up with an ad free feed discounts on merch plus some bonuses like extended episodes sign up today at",
    "start": "1082360",
    "end": "1089080"
  },
  {
    "text": "Chang log.com plusus",
    "start": "1089080",
    "end": "1093158"
  },
  {
    "text": "[Music]",
    "start": "1096550",
    "end": "1104749"
  },
  {
    "text": "plusus so when we're talking about migrations do you have advice on sort of how to set",
    "start": "1107320",
    "end": "1114159"
  },
  {
    "text": "up that process because at times we do need to eventually delete data or maybe we need to add a new column then we need",
    "start": "1114159",
    "end": "1119840"
  },
  {
    "text": "to deploy some code that uses that column so do you have advice on people sort of like what process they should be",
    "start": "1119840",
    "end": "1125240"
  },
  {
    "text": "using for that type of release if that makes sense I could probably describe what we did and I think that's what a",
    "start": "1125240",
    "end": "1130840"
  },
  {
    "text": "lot of folks do you typically want to decouple your migration steps from your",
    "start": "1130840",
    "end": "1136679"
  },
  {
    "text": "application so this is the one thing that a lot of folks try to do and it may",
    "start": "1136679",
    "end": "1142000"
  },
  {
    "text": "or may not work out well is in your runtime for example you're trying to add your migration steps within the same",
    "start": "1142000",
    "end": "1148480"
  },
  {
    "text": "application that you're running so this literally same binary that you're compiling and that's going to potentially get you into troubles and we",
    "start": "1148480",
    "end": "1154559"
  },
  {
    "text": "can elaborate on that but what we've seen works best is when you have your",
    "start": "1154559",
    "end": "1160240"
  },
  {
    "text": "application and then you have your migration step so in our case for example we have kubernetes so that's",
    "start": "1160240",
    "end": "1166880"
  },
  {
    "text": "doing a rolling up upgrade where we sequentially apply the migration steps",
    "start": "1166880",
    "end": "1173280"
  },
  {
    "text": "first and then we do a rolling upgrade of the nodes now the thing to remember",
    "start": "1173280",
    "end": "1178840"
  },
  {
    "text": "there is that those nodes are going to have an old version and a new version of your application running at one time so",
    "start": "1178840",
    "end": "1185960"
  },
  {
    "text": "they're going to coexist so whatever changes you're making to your database have to be forwards and backwards",
    "start": "1185960",
    "end": "1192360"
  },
  {
    "text": "compatible in the old and new versions of the application so some migration you",
    "start": "1192360",
    "end": "1198600"
  },
  {
    "text": "actually have to split into two steps so you can't do it all in one step so the way that usually works is write your",
    "start": "1198600",
    "end": "1205840"
  },
  {
    "text": "migration update your code deploy that change set through production and then",
    "start": "1205840",
    "end": "1211360"
  },
  {
    "text": "write another migration Andor more code changes and then deploy that again and",
    "start": "1211360",
    "end": "1217360"
  },
  {
    "text": "the main reason you want to do that nowadays is to accomplish zero downtime deployments like it's easy when you can",
    "start": "1217360",
    "end": "1225360"
  },
  {
    "text": "just say oh I'm going to turn the application into maintenance mode and then you don't have to worry about rights happening to your database and",
    "start": "1225360",
    "end": "1231400"
  },
  {
    "text": "you can go nuts but if you have a high available system you have to be careful",
    "start": "1231400",
    "end": "1237280"
  },
  {
    "text": "with how you structure that and the way I explained it I think is the way most folks do it no that makes sense it's one",
    "start": "1237280",
    "end": "1244559"
  },
  {
    "text": "of those things that it's hard and sometimes it's more painful to do because you have to take work and basically split it up over several",
    "start": "1244559",
    "end": "1250840"
  },
  {
    "text": "deploys and that can sort of feel like a drag but at the same time I've seen it",
    "start": "1250840",
    "end": "1256200"
  },
  {
    "text": "save my butt several times as how I'd put it where you can actually make these data changes and things still continue to run",
    "start": "1256200",
    "end": "1261960"
  },
  {
    "text": "you have a little bit of time to make sure it's what you want before you go through speaking about that can you",
    "start": "1261960",
    "end": "1267520"
  },
  {
    "text": "think of any other like mistakes or pitfalls that people might make whenever they're setting up migrations I know one",
    "start": "1267520",
    "end": "1273520"
  },
  {
    "text": "example that we got from Twitter was uh Nate had I forget who specifically but I",
    "start": "1273520",
    "end": "1279000"
  },
  {
    "text": "have Nate in my notes um Nate had mentioned that his team likes to use just like 01- migration. up or basically",
    "start": "1279000",
    "end": "1287600"
  },
  {
    "text": "they they pick up a specific name so it's like 01- migration and 02- migration and they actually use like the",
    "start": "1287600",
    "end": "1293760"
  },
  {
    "text": "word migration so that if they end up without of order or two conflicting like two developers have zero2 migration that",
    "start": "1293760",
    "end": "1301279"
  },
  {
    "text": "when they go to commit the code they immediately see like oh this one's already taken I need to go update it are there any other like tips like that or",
    "start": "1301279",
    "end": "1308080"
  },
  {
    "text": "or pitfalls that you've seen people fall into I think if you're using tooling you",
    "start": "1308080",
    "end": "1313120"
  },
  {
    "text": "can typically catch those things like for example Goose offers a way to just create those files without you having to",
    "start": "1313120",
    "end": "1319240"
  },
  {
    "text": "think about it so it'll look in your migrations folder see that 76 do the",
    "start": "1319240",
    "end": "1324480"
  },
  {
    "text": "last migration it will create 77 it does it like O7 77 with a name so you don't even have",
    "start": "1324480",
    "end": "1331960"
  },
  {
    "text": "to think about naming at that point yeah I don't really have much in the way because tooling takes care of so much of",
    "start": "1331960",
    "end": "1337880"
  },
  {
    "text": "that okay so when you talk about the tooling would you suggest that people",
    "start": "1337880",
    "end": "1343000"
  },
  {
    "text": "who want to learn a little bit more about this process actually spend some time maybe building a really simple migration on their own oh 100% And this",
    "start": "1343000",
    "end": "1350520"
  },
  {
    "text": "is one of those things I wanted to point out the real heroes here are the folks writing the database drivers thank you",
    "start": "1350520",
    "end": "1356600"
  },
  {
    "text": "to those people for writing those drivers because none of this would not be possible these migration tools that",
    "start": "1356600",
    "end": "1362000"
  },
  {
    "text": "we mentioned Goose goang migrate dbate and a plethora of other ones they're really just thin rappers with some",
    "start": "1362000",
    "end": "1368440"
  },
  {
    "text": "functionality in terms of like reading some files parsing the SQL statements",
    "start": "1368440",
    "end": "1373640"
  },
  {
    "text": "and then applying that through SQL DB or SQL transaction and then just exec with",
    "start": "1373640",
    "end": "1379799"
  },
  {
    "text": "contact or something like that so definitely worth spending some time thinking through like how would you",
    "start": "1379799",
    "end": "1385400"
  },
  {
    "text": "write a migration tool and you'll come to the consensus that it's actually not that bad it's actually something I did",
    "start": "1385400",
    "end": "1390960"
  },
  {
    "text": "once on my own and I did it and go as well and like I found the version in go was a lot cleaner than I expected it to",
    "start": "1390960",
    "end": "1397600"
  },
  {
    "text": "be I think you can basically get something working in like a 100 lines of code or something like that I think you had mentioned earlier that I think Goose",
    "start": "1397600",
    "end": "1403840"
  },
  {
    "text": "supports goof files as well is that correct yes it does Okay so like even supporting like your own custom",
    "start": "1403840",
    "end": "1409880"
  },
  {
    "text": "functions as migrations wasn't that bad in the sense that you could basically just write a function that reads a SQL",
    "start": "1409880",
    "end": "1415440"
  },
  {
    "text": "file and turns that into a g function and then you can also just pass G functions into like here's my list of migration steps here's the ID for each",
    "start": "1415440",
    "end": "1422279"
  },
  {
    "text": "one and let it run them and I I've showed it to some people who have had some confusions around migrations in the",
    "start": "1422279",
    "end": "1428039"
  },
  {
    "text": "past and it's kind of crazy how enlightening that is just to see like oh there's nothing too magical going on",
    "start": "1428039",
    "end": "1434200"
  },
  {
    "text": "it's really just following some series of steps and like not to say there's not more going on with your tooling because there's a lot of things that it can do",
    "start": "1434200",
    "end": "1440120"
  },
  {
    "text": "to help save you but it's nice to see what exactly the core of it is and like",
    "start": "1440120",
    "end": "1445320"
  },
  {
    "text": "that it's really nothing too magical going on there so the next question I have for you is talking about going to",
    "start": "1445320",
    "end": "1452000"
  },
  {
    "text": "production so we all deploy in different ways for instance I think Mike you had",
    "start": "1452000",
    "end": "1457279"
  },
  {
    "text": "talked about sort of building this into your application so that when you or some people like to build in their",
    "start": "1457279",
    "end": "1462320"
  },
  {
    "text": "application so when they deploy it it just kind of automatically does that and you've talked about also having it as a separate step so what are some of the",
    "start": "1462320",
    "end": "1469120"
  },
  {
    "text": "ways you've seen people push you know migrations to production you know what does that process look like yeah so I",
    "start": "1469120",
    "end": "1475159"
  },
  {
    "text": "think there's three main ways the first one is doing it at hog like running SQL against your database creating tables",
    "start": "1475159",
    "end": "1481520"
  },
  {
    "text": "and so forth so we call that let's say the manual way then there's the semi manual way where you have a tool let's",
    "start": "1481520",
    "end": "1488760"
  },
  {
    "text": "say on your Local Host like Goose or goang migrate and you set up the connection strings and then you're just",
    "start": "1488760",
    "end": "1494520"
  },
  {
    "text": "reading directly from your local file system and then applying that to production but then eventually when you get to",
    "start": "1494520",
    "end": "1500200"
  },
  {
    "text": "larger organizations where you truly want to have auditability versioning being able to track like what happened",
    "start": "1500200",
    "end": "1506919"
  },
  {
    "text": "in production then you set up a continuous deployment environment where that step of physically taking some",
    "start": "1506919",
    "end": "1513720"
  },
  {
    "text": "files and apply them production is carried out in a continuous in your cicd pipeline and I think you and I talked at",
    "start": "1513720",
    "end": "1520799"
  },
  {
    "text": "one point or maybe it was Vo Tech and I I'm not sure but I know one of the things that sometimes comes up is that",
    "start": "1520799",
    "end": "1526399"
  },
  {
    "text": "when we're running on one server things feel simple because you know you can deploy you can wait for the migrations to run and then you can deploy the new",
    "start": "1526399",
    "end": "1532440"
  },
  {
    "text": "code but a lot of times people end up getting in a case where they're running in multiple servers so do they need to",
    "start": "1532440",
    "end": "1539080"
  },
  {
    "text": "change their process I guess is what I'm asking to support that sort of setup where their application is running in multiple places or you know what does",
    "start": "1539080",
    "end": "1545440"
  },
  {
    "text": "that look like I think it may depend on the tool itself that you're using as I",
    "start": "1545440",
    "end": "1550640"
  },
  {
    "text": "mentioned previously some of those migration tools use locking mechanism so",
    "start": "1550640",
    "end": "1556159"
  },
  {
    "text": "even if you have 100 hundreds of nodes running at the same time and you're deploying them via some rolling update",
    "start": "1556159",
    "end": "1564120"
  },
  {
    "text": "mechanism they will eventually hang on and wait for the first instance to",
    "start": "1564120",
    "end": "1570320"
  },
  {
    "text": "finish the migration first because of the locking mechanism it has some pitfalls too because the mechanism can",
    "start": "1570320",
    "end": "1576880"
  },
  {
    "text": "hang and then you need to resolve it by hand I would say the other approach is",
    "start": "1576880",
    "end": "1582279"
  },
  {
    "text": "to really run a singl ton process so you just need to make sure that your CD",
    "start": "1582279",
    "end": "1588880"
  },
  {
    "text": "pipeline has either a manual step or it has some dependency between your",
    "start": "1588880",
    "end": "1595559"
  },
  {
    "text": "migration and then uh deployment of the rest of the application I saw people",
    "start": "1595559",
    "end": "1601000"
  },
  {
    "text": "using init containers in kubernetes to do this but that relies on the locking",
    "start": "1601000",
    "end": "1606679"
  },
  {
    "text": "mechanism I saw people and that's including me that are running like a",
    "start": "1606679",
    "end": "1613320"
  },
  {
    "text": "single process instead and waiting for the success or failure on that one so I",
    "start": "1613320",
    "end": "1620159"
  },
  {
    "text": "guess it depends on the tool another one I've seen people ask about is like GitHub actions have you seen people use",
    "start": "1620159",
    "end": "1625679"
  },
  {
    "text": "something like that with their like if they're using it for deployment and you know continuous integration stuff have you seen people successfully use a step",
    "start": "1625679",
    "end": "1632360"
  },
  {
    "text": "there that runs migrations before doing a deploy or are there some reasons why that would be a bad idea I can't really",
    "start": "1632360",
    "end": "1638240"
  },
  {
    "text": "think of a reason it really depends on the infrastructure and the cicd pipeline",
    "start": "1638240",
    "end": "1643679"
  },
  {
    "text": "of that specific organization I mean GitHub actions is at the end CD pipeline or cicd pipeline",
    "start": "1643679",
    "end": "1651799"
  },
  {
    "text": "anyway and that's what most of the folks out there are using for deployments as",
    "start": "1651799",
    "end": "1656840"
  },
  {
    "text": "well so I mean as long as you can depend on one step to another and make sure",
    "start": "1656840",
    "end": "1662799"
  },
  {
    "text": "that the migration was successful first before deploying the rest of the application you're good to go no that",
    "start": "1662799",
    "end": "1669200"
  },
  {
    "text": "makes sense I know it's one that people are more familiar with a lot of times especially when they're getting started I feel like GitHub actions are a little",
    "start": "1669200",
    "end": "1675320"
  },
  {
    "text": "bit more approachable obviously when you you get to larger scale corporations there's usually some process involved",
    "start": "1675320",
    "end": "1681120"
  },
  {
    "text": "and I know these questions are hard to answer because everybody's deployment process and everybody's production environment is so different I think",
    "start": "1681120",
    "end": "1687960"
  },
  {
    "text": "that's something it takes a while to realize when you're new to development until you actually go workplaces and realize that everybody has a million",
    "start": "1687960",
    "end": "1693720"
  },
  {
    "text": "custom tools built because they've kind of evolved this production environment so you take everything you're learning",
    "start": "1693720",
    "end": "1699640"
  },
  {
    "text": "and you kind of learn to adapt it to where you're working and what you're doing I think GitHub actions are perfectly fine because in GitHub actions",
    "start": "1699640",
    "end": "1705600"
  },
  {
    "text": "you have workflows and you have jobs and then within jobs you have steps and as long as one of those steps and steps are",
    "start": "1705600",
    "end": "1711640"
  },
  {
    "text": "run uh sequentially if I remember correctly within a single job so as long as one of those steps is like apply your",
    "start": "1711640",
    "end": "1718240"
  },
  {
    "text": "migrations and then the next step is like roll out your application I think that's a perfectly valid way to do it",
    "start": "1718240",
    "end": "1724440"
  },
  {
    "text": "it's actually how I do it for the little toy website that I have best of go.d that's exactly how it works with",
    "start": "1724440",
    "end": "1730480"
  },
  {
    "text": "get of actions awesome so the next thing I have is about testing people always want to know how do you test different",
    "start": "1730480",
    "end": "1736519"
  },
  {
    "text": "parts of your code and when it comes to touching data obviously that's a a very important thing to make sure you don't",
    "start": "1736519",
    "end": "1742240"
  },
  {
    "text": "mess up we've all heard horror stories about people accidentally dropping databases and things like that so how do",
    "start": "1742240",
    "end": "1747519"
  },
  {
    "text": "you test migrations um what are some different techniques people can use to avoid having big mistakes yeah so",
    "start": "1747519",
    "end": "1754399"
  },
  {
    "text": "testing migrations can usually be done in your continuous environment like a CI environment and the best way I found",
    "start": "1754399",
    "end": "1761840"
  },
  {
    "text": "doing that is you kind of apply your migration add some data apply migration",
    "start": "1761840",
    "end": "1768000"
  },
  {
    "text": "add some data apply migration add some data and keep doing going that all the way up and then once you're all the way",
    "start": "1768000",
    "end": "1773240"
  },
  {
    "text": "at the top run migrate down all the way down to zero so you're kind of testing both the up and down and you do that",
    "start": "1773240",
    "end": "1779799"
  },
  {
    "text": "literally on every single merge to your main branch or on every single PR push",
    "start": "1779799",
    "end": "1785600"
  },
  {
    "text": "so that's one way to test it and it's usually a good way to test it and that's actually why we have these tools is",
    "start": "1785600",
    "end": "1790960"
  },
  {
    "text": "because a lot of times you want to mimic what production looks like or what it currently is now and what the change",
    "start": "1790960",
    "end": "1797480"
  },
  {
    "text": "will look like and you don't always have access to your production database so you can't just drop the schema and then",
    "start": "1797480",
    "end": "1804080"
  },
  {
    "text": "try to test against that you just you want to decouple that especially at larger organizations so your migrations",
    "start": "1804080",
    "end": "1811039"
  },
  {
    "text": "is a source of Truth and you're kind of migrating up to whatever the production",
    "start": "1811039",
    "end": "1816559"
  },
  {
    "text": "is and then testing your change side as you go up and down so when you talk about testing this what does the test",
    "start": "1816559",
    "end": "1822000"
  },
  {
    "text": "actually look like is it like a go test file is it something else you're doing like how would you typically do that right for example now I work at buff and",
    "start": "1822000",
    "end": "1829240"
  },
  {
    "text": "the way we do it is for every migration that we apply we also do a few insert and update statements and then the next",
    "start": "1829240",
    "end": "1836039"
  },
  {
    "text": "person that comes in they write a few insert or update statements and you're kind of just constantly checking to make",
    "start": "1836039",
    "end": "1841720"
  },
  {
    "text": "sure that the things that you migrated you can actually insert data into there and then once at the end of the test",
    "start": "1841720",
    "end": "1848440"
  },
  {
    "text": "it'll run all the down migrations and make sure that you have nothing left in your database so literally doing that",
    "start": "1848440",
    "end": "1854320"
  },
  {
    "text": "inside like something like testing. T and just a big test file with some",
    "start": "1854320",
    "end": "1859440"
  },
  {
    "text": "helpers around that what I also like to do on top of that is to check the final",
    "start": "1859440",
    "end": "1864880"
  },
  {
    "text": "schema of the database so both postgress MySQL and other databases let you",
    "start": "1864880",
    "end": "1870840"
  },
  {
    "text": "explore the schema uh drop the schema from the database and what I found",
    "start": "1870840",
    "end": "1876240"
  },
  {
    "text": "really useful is to check out the dard schema into your GitHub repository and",
    "start": "1876240",
    "end": "1882360"
  },
  {
    "text": "then check your staging or even production schemas against that and",
    "start": "1882360",
    "end": "1887519"
  },
  {
    "text": "compare it from time to time just to make sure that the schema is valid and in the same state everywhere is that",
    "start": "1887519",
    "end": "1894279"
  },
  {
    "text": "something that people are checking into their tool link like sorry is that something they're checking into to get like the schema that they're going to be",
    "start": "1894279",
    "end": "1899880"
  },
  {
    "text": "like okay everybody should compare to this or how does that check process work in your mind right so you can check the",
    "start": "1899880",
    "end": "1906600"
  },
  {
    "text": "final schema after you run all the migrations into your git repository and",
    "start": "1906600",
    "end": "1911760"
  },
  {
    "text": "then this is also applicable to your local host so even when you're developing your own own new migrations",
    "start": "1911760",
    "end": "1919039"
  },
  {
    "text": "uh you see the changes against this file and you can compare if this is exactly",
    "start": "1919039",
    "end": "1924080"
  },
  {
    "text": "what you meant to do so git actually helps you see the changes in the final",
    "start": "1924080",
    "end": "1930600"
  },
  {
    "text": "schema which is very useful okay yeah so maybe I can expand on that one I also found that useful where you kind of",
    "start": "1930600",
    "end": "1937799"
  },
  {
    "text": "apply all of your migrations and at the end of that let's say in CI you ask CI to drop the current schema so you're",
    "start": "1937799",
    "end": "1944360"
  },
  {
    "text": "running let's say a postgress database in a container you're apply all your migrations and you're dropping the schema and now the developer also",
    "start": "1944360",
    "end": "1951760"
  },
  {
    "text": "checked in a schema file and then you can do a diff against those and if that",
    "start": "1951760",
    "end": "1957240"
  },
  {
    "text": "let's say developer accidentally locally added an extra index that'll show up in the diff and that'll fail C saying",
    "start": "1957240",
    "end": "1963720"
  },
  {
    "text": "you're trying to commit something that you probably applied that isn't part of your migrations and then when you go to",
    "start": "1963720",
    "end": "1969639"
  },
  {
    "text": "auditing you can then ask let's say once a quarter or once a month or maybe even",
    "start": "1969639",
    "end": "1974760"
  },
  {
    "text": "automated in some way a DBA to say give me the current schema in production and",
    "start": "1974760",
    "end": "1981360"
  },
  {
    "text": "then compare that against the schema that you have checked in on your main branch and you'll oftentimes find that",
    "start": "1981360",
    "end": "1987639"
  },
  {
    "text": "let's say you go on vacation and there was some something exploded and some dbas logged into the database and added",
    "start": "1987639",
    "end": "1995000"
  },
  {
    "text": "some indexes and all of a sudden that's not reflecting your migrations so you've kind of lost that source of truth but",
    "start": "1995000",
    "end": "2001559"
  },
  {
    "text": "checking in that schema and then comparing it from time to time allows you to catch any discrepancies that might have happened because people did",
    "start": "2001559",
    "end": "2008480"
  },
  {
    "text": "some manual operations so when that type of thing happens does it make sense to try to go through the effort of somehow",
    "start": "2008480",
    "end": "2015039"
  },
  {
    "text": "getting a migration file like basically you want a migration that's not actually going to run when it goes to production",
    "start": "2015039",
    "end": "2020159"
  },
  {
    "text": "because it's already been run in production so is it worth the effort of trying to do that so local development environments sort of reflect production",
    "start": "2020159",
    "end": "2026679"
  },
  {
    "text": "better or how do you handle those situations I think this type of changes",
    "start": "2026679",
    "end": "2031880"
  },
  {
    "text": "that let's say some performance Engineers or dbas would do is adding the",
    "start": "2031880",
    "end": "2038000"
  },
  {
    "text": "indexes as Mike mentioned and just to make sure that for example the CPU of",
    "start": "2038000",
    "end": "2043720"
  },
  {
    "text": "the database server goes down immediately when there's a high traffic Spike or whatever and for those SQL",
    "start": "2043720",
    "end": "2052280"
  },
  {
    "text": "queries you can always write um upsert like where so for example you can check",
    "start": "2052280",
    "end": "2058679"
  },
  {
    "text": "if the index already exists so create index if it doesn't exist and do the",
    "start": "2058679",
    "end": "2064919"
  },
  {
    "text": "operation without uh failure but yes I believe that it's worth it to keep the",
    "start": "2064919",
    "end": "2071560"
  },
  {
    "text": "schema uh same everywhere for example I'm working with one of my customers who",
    "start": "2071560",
    "end": "2077280"
  },
  {
    "text": "has production in five different regions around the globe and I would be very",
    "start": "2077280",
    "end": "2082520"
  },
  {
    "text": "surprised if there was like a different database schema just in Europe Compared to North America and then something",
    "start": "2082520",
    "end": "2089158"
  },
  {
    "text": "would blow up because of it so I like to be in charge of our database schema",
    "start": "2089159",
    "end": "2094919"
  },
  {
    "text": "because schemas is our State the most important thing of our application that",
    "start": "2094919",
    "end": "2100320"
  },
  {
    "text": "makes sense and it also makes sense what you were saying earlier Mike about developers can sometimes make changes locally when they're sort of tinkering",
    "start": "2100320",
    "end": "2107079"
  },
  {
    "text": "with things and it's easy to forget especially if you have a long weekend or anything you can forget that you even tried some different change to your",
    "start": "2107079",
    "end": "2113160"
  },
  {
    "text": "database and we don't always just drop our database and rebuild it before we submit things so it's definitely a good",
    "start": "2113160",
    "end": "2118480"
  },
  {
    "text": "check to [Music]",
    "start": "2118480",
    "end": "2123329"
  },
  {
    "text": "have [Music]",
    "start": "2125800",
    "end": "2130510"
  },
  {
    "text": "hey Jared here one of the things we can count on in the software industry is",
    "start": "2131920",
    "end": "2137359"
  },
  {
    "text": "change the state-ofthe-art changes so fast in fact that keeping up can feel like a whole other job on top of your",
    "start": "2137359",
    "end": "2144200"
  },
  {
    "text": "actual job that's why we created change log weekly it's our totally free",
    "start": "2144200",
    "end": "2149319"
  },
  {
    "text": "newsletter that we drop in your inbox each and every Sunday we link to the latest news the best articles and the",
    "start": "2149319",
    "end": "2156520"
  },
  {
    "text": "most interesting projects that you should be aware of we also add a little commentary from us saying why",
    "start": "2156520",
    "end": "2162319"
  },
  {
    "text": "something's important pointing you to other instances of a trend or just making a dorky joke to keep it Lively so",
    "start": "2162319",
    "end": "2168400"
  },
  {
    "text": "if you haven't yet I recommend subscribing to change log weekly and help us help you keep up with the",
    "start": "2168400",
    "end": "2174000"
  },
  {
    "text": "latest head to",
    "start": "2174000",
    "end": "2177359"
  },
  {
    "text": "changelog.txt [Music]",
    "start": "2185720",
    "end": "2197900"
  },
  {
    "text": "[Applause] so I guess we're getting close to the end so we're going to start talking about unpopular opinions soon but before",
    "start": "2197900",
    "end": "2204319"
  },
  {
    "text": "that are there any big takeaways or words of wisdom or anything like that that you'd like to share with people",
    "start": "2204319",
    "end": "2210319"
  },
  {
    "text": "before we move on right documentation Disaster Recovery documentation be ready",
    "start": "2210319",
    "end": "2216520"
  },
  {
    "text": "be be ready to have backups and be able to actually apply them if you need to",
    "start": "2216520",
    "end": "2222760"
  },
  {
    "text": "because if you are in panic mode if the company is down just because of some production issue you will not thanks",
    "start": "2222760",
    "end": "2229839"
  },
  {
    "text": "trade so be ready that's my advice voch is that something you suggest people actually like go through the process of",
    "start": "2229839",
    "end": "2236319"
  },
  {
    "text": "trying it once before they get into actual panic mode yeah that's definitely useful when you're writing this disaster",
    "start": "2236319",
    "end": "2242960"
  },
  {
    "text": "recover document you should be also trying it by hand right that's kind of the point okay so",
    "start": "2242960",
    "end": "2249400"
  },
  {
    "text": "basically have a A playbook to go by so that you aren't making it up as you go when you're also freaking out at the",
    "start": "2249400",
    "end": "2254560"
  },
  {
    "text": "same time yeah that's right and same for goes for roll backs if there is a",
    "start": "2254560",
    "end": "2259839"
  },
  {
    "text": "problem uh same goes to potentially think about if it's worth it to do the",
    "start": "2259839",
    "end": "2265839"
  },
  {
    "text": "roll back or if you should go and release a hot fix instead it's all about tradeoffs but you got to be ready Mike",
    "start": "2265839",
    "end": "2273800"
  },
  {
    "text": "yeah I was just going to piggyback on that and say please please please always have backups you don't realize it until",
    "start": "2273800",
    "end": "2279760"
  },
  {
    "text": "you need it and if it's not there when you need it you're screwed so make sure you have backups and make sure you",
    "start": "2279760",
    "end": "2285400"
  },
  {
    "text": "understand how to actually apply those backups and do disaster recover it's one of those things everyone talks about",
    "start": "2285400",
    "end": "2290560"
  },
  {
    "text": "everyone documents but if you don't actually go through the steps and do it when there's panic and you don't know",
    "start": "2290560",
    "end": "2296800"
  },
  {
    "text": "what you're doing then you're going to be in trouble I think I've also heard stories of people where they thought",
    "start": "2296800",
    "end": "2302000"
  },
  {
    "text": "they had backups and then when it came time to actually use them they realized that the backup process like wasn't working the way they thought it was so",
    "start": "2302000",
    "end": "2309160"
  },
  {
    "text": "all of a sudden they don't have the backups they thought they did like yes you want to write the stuff and test it but I think it's also good to",
    "start": "2309160",
    "end": "2314640"
  },
  {
    "text": "periodically verify that it's still working the way you expected with your backups because the last thing you want to do is find out your backups are six",
    "start": "2314640",
    "end": "2321119"
  },
  {
    "text": "months old when you have a major outage yeah that's for sure and like if you're using a database from one of those big",
    "start": "2321119",
    "end": "2328000"
  },
  {
    "text": "providers then use their own backups there's no need to write your your own",
    "start": "2328000",
    "end": "2333480"
  },
  {
    "text": "tooling for that it's one of those things where I do a lot of like smaller projects with like myself or myself or",
    "start": "2333480",
    "end": "2338839"
  },
  {
    "text": "one or two other developers and sometimes it can feel like you're getting cut by a thousand different like",
    "start": "2338839",
    "end": "2345160"
  },
  {
    "text": "a thousand paper cuts when you have all these different bills stacking up and you know you aren't a big company so you're paying for all these things like",
    "start": "2345160",
    "end": "2350720"
  },
  {
    "text": "backups and database hosting but at the same time there are so many easy ways to",
    "start": "2350720",
    "end": "2356119"
  },
  {
    "text": "just break everything or screw everything up if you don't just rely on them like they are incredibly helpful",
    "start": "2356119",
    "end": "2361839"
  },
  {
    "text": "just I know that sometimes people like like to avoid them or like to try to roll something custom because don't want to spend that extra couple dollars but",
    "start": "2361839",
    "end": "2368760"
  },
  {
    "text": "at the end of the day if you're planning on doing something that's like using real data and people are paying for it's worth getting it right okay we are going",
    "start": "2368760",
    "end": "2376040"
  },
  {
    "text": "to move on to unpopular [Music] opinions",
    "start": "2376040",
    "end": "2383280"
  },
  {
    "text": "un I actually think you should probably [Music]",
    "start": "2383280",
    "end": "2388860"
  },
  {
    "text": "leave [Music] op okay voytech I think you you said you",
    "start": "2389240",
    "end": "2396920"
  },
  {
    "text": "have an unpopular opinion for us would you like to share yeah I mean generics",
    "start": "2396920",
    "end": "2402560"
  },
  {
    "text": "I'm not against it I'm very excited about the feature I can't wait for it and I'm already playing with it but I'm",
    "start": "2402560",
    "end": "2409839"
  },
  {
    "text": "also scared for the go Community like what's going to happen in the next two years I'm sure that people will use it",
    "start": "2409839",
    "end": "2417000"
  },
  {
    "text": "and abuse it to the levels that we will eventually realize that generics don't",
    "start": "2417000",
    "end": "2422720"
  },
  {
    "text": "really help there I think this kind of happened with the go channels back in the day people were very excited about",
    "start": "2422720",
    "end": "2428839"
  },
  {
    "text": "the channels and they used it everywhere prematurely like they didn't really make sense and it's settled and now people",
    "start": "2428839",
    "end": "2436400"
  },
  {
    "text": "only use it for specific use cases and I think the same applies to go generics so",
    "start": "2436400",
    "end": "2442520"
  },
  {
    "text": "people please don't go crazy I think my one hope around that is that anybody coming to go from a language that",
    "start": "2442520",
    "end": "2448079"
  },
  {
    "text": "already has generics isn't going to be like oh I need to use these generics because they've already had enough experience with it whereas the",
    "start": "2448079",
    "end": "2454640"
  },
  {
    "text": "concurrency stuff if you're coming from a language that doesn't have great concurrent Primitives it's a really",
    "start": "2454640",
    "end": "2460079"
  },
  {
    "text": "tempting to use them all the time because you just haven't ever seen them before an example of this is like when I",
    "start": "2460079",
    "end": "2465359"
  },
  {
    "text": "first learned about meta programming in Ruby I used it way way too much because it was just so cool and then you start",
    "start": "2465359",
    "end": "2471200"
  },
  {
    "text": "debugging code that's using meta programming and you're like oh I don't want to use this ever again if I can avoid it yeah I think like the reason",
    "start": "2471200",
    "end": "2477560"
  },
  {
    "text": "why we all love go it's simplicity so I'm just hoping that we will not lose it",
    "start": "2477560",
    "end": "2483720"
  },
  {
    "text": "anytime soon Mike do you have an unpopular you'd like to share yeah I do so hindsight is always 2020 but I think",
    "start": "2483720",
    "end": "2490599"
  },
  {
    "text": "one of the biggest mistakes and go is the logger struct it should have been a",
    "start": "2490599",
    "end": "2495960"
  },
  {
    "text": "logging interface and because there's no unified interface to kind of like marry",
    "start": "2495960",
    "end": "2502680"
  },
  {
    "text": "all of these thirdparty packages you have everyone Reinventing what a logger",
    "start": "2502680",
    "end": "2508200"
  },
  {
    "text": "interface is which creates a huge problem because if let's say you're at an organization and you want to create a",
    "start": "2508200",
    "end": "2514319"
  },
  {
    "text": "structured logger that 10 12 15 teams are going to use you're constantly going to have them coming up to you and saying",
    "start": "2514319",
    "end": "2520359"
  },
  {
    "text": "well this doesn't satisfy this package that I imported and this one doesn't satisfy this package all of a sudden",
    "start": "2520359",
    "end": "2525560"
  },
  {
    "text": "your structured logger that you wrote for your company is going to have like 50 methods on it because it's trying to",
    "start": "2525560",
    "end": "2531640"
  },
  {
    "text": "satisfy all of these different Community logging interfaces that's one that in my mind I think would have been hard to",
    "start": "2531640",
    "end": "2537599"
  },
  {
    "text": "sort of predict up front it's almost like the the standard Library it's hard for them to enforce this is what a",
    "start": "2537599",
    "end": "2542680"
  },
  {
    "text": "logger should look like all the time because like you're saying everybody has wants and needs I don't disagree with",
    "start": "2542680",
    "end": "2548800"
  },
  {
    "text": "you fully but I'm also like wondering like if I was the person in charge of Designing that interface I would have struggled to be like what is going to",
    "start": "2548800",
    "end": "2555559"
  },
  {
    "text": "satisfy everybody's needs but you might also be right in the sense that had there been an interface maybe all those",
    "start": "2555559",
    "end": "2561280"
  },
  {
    "text": "third party tools would have been more likely to adapt and like make their tool work for it because I think about like",
    "start": "2561280",
    "end": "2566720"
  },
  {
    "text": "the HTTP handlers and stuff like that and almost every router out there tries",
    "start": "2566720",
    "end": "2572079"
  },
  {
    "text": "to make it work well with the standard HTTP Handler whereas I mean there are a couple that don't but for V you know",
    "start": "2572079",
    "end": "2578760"
  },
  {
    "text": "various reasons but for the most part A lot of them do maybe a good start would be to have uh this interface",
    "start": "2578760",
    "end": "2586440"
  },
  {
    "text": "implementing the methods that are currently available in the standard logger struct that's a good start that's",
    "start": "2586440",
    "end": "2593079"
  },
  {
    "text": "I'm trying to even think about which ones are there because I don't think I ever used the standard loging struct so it's I'm sure I've used it but it's not",
    "start": "2593079",
    "end": "2599839"
  },
  {
    "text": "common as how I'd put it so I would have thought everybody would have agreed that we needed a logging interface but it",
    "start": "2599839",
    "end": "2606319"
  },
  {
    "text": "seems to be slightly more unpopular than I would have expected so I'm actually genuinely curious what the feedback and",
    "start": "2606319",
    "end": "2612800"
  },
  {
    "text": "the reaction would be because I've struggled with that quite a bit I'm assuming that you're in a place like",
    "start": "2612800",
    "end": "2618359"
  },
  {
    "text": "when you talk about a company that's going to be using it in 15 projects to me that sounds like a reasonably sized",
    "start": "2618359",
    "end": "2623720"
  },
  {
    "text": "company with a you decent amount of Engineers whereas I think part of the reason that it's not that I disagree",
    "start": "2623720",
    "end": "2629040"
  },
  {
    "text": "with it it's just more it's never been as much of an issue but as I said earlier a lot of my projects are very small so it's easy to just be like like",
    "start": "2629040",
    "end": "2636240"
  },
  {
    "text": "companywide this is what we're using Everybody Get on Board and I think at a big company that's much harder to do",
    "start": "2636240",
    "end": "2643200"
  },
  {
    "text": "yeah but it also creates a little bit of fragmentation because if you have everyone redefining what an interface is",
    "start": "2643200",
    "end": "2650640"
  },
  {
    "text": "within their project I feel like that's something that should inevitably be solved at the standard Library level but",
    "start": "2650640",
    "end": "2658079"
  },
  {
    "text": "who knows it's a tough one I guess we'll see that it's I suppose it's something they could potentially introduce a new",
    "start": "2658079",
    "end": "2663480"
  },
  {
    "text": "package in the future for and at that point third libraries would hopefully start to move towards that but who knows",
    "start": "2663480",
    "end": "2670240"
  },
  {
    "text": "so I have a a followup maybe unpopular type of question for you what do you",
    "start": "2670240",
    "end": "2675720"
  },
  {
    "text": "guys think of the any Alias that they're adding in go 1.18 So for anybody listening who doesn't know what this is",
    "start": "2675720",
    "end": "2682559"
  },
  {
    "text": "basically they're adding a type Alias where the word any and Y is going to map to the empty interface so interface then",
    "start": "2682559",
    "end": "2689800"
  },
  {
    "text": "left curly bracket right curly bracket where there's no methods defined I don't have a strong opinion on this one I'm",
    "start": "2689800",
    "end": "2696040"
  },
  {
    "text": "quite used to any from typescript even though if you're using typescript you shouldn't be using any right so I think",
    "start": "2696040",
    "end": "2704200"
  },
  {
    "text": "it's fine but yes I get your point because suddenly we will see",
    "start": "2704200",
    "end": "2709559"
  },
  {
    "text": "interfaces and NES everywhere and it will get mixed up yeah I also don't have",
    "start": "2709559",
    "end": "2715359"
  },
  {
    "text": "much of a strong opinion on that one I kind of installed 1.18 saw a whole bunch of errors with empty interfaces and any",
    "start": "2715359",
    "end": "2722800"
  },
  {
    "text": "I'm like well I'm going back to one 17.5 call it a day I used it briefly and I",
    "start": "2722800",
    "end": "2728119"
  },
  {
    "text": "will say that getting used to typing any was weird I'd have to use it more to really to get it and I do agree that",
    "start": "2728119",
    "end": "2734599"
  },
  {
    "text": "like hopefully a lot of projects just switch everything over to any because without doing that I think it is going",
    "start": "2734599",
    "end": "2740240"
  },
  {
    "text": "to be you're still going to have that confusion of somebody new to go eventually runs into this empty interface and they're like what is this",
    "start": "2740240",
    "end": "2745839"
  },
  {
    "text": "thing why is it there because I think that's kind of an inevitable step for anybody learning go as they see this",
    "start": "2745839",
    "end": "2750880"
  },
  {
    "text": "empty interface and they're like what is this thing this makes no sense what's like for some reason it's just a at",
    "start": "2750880",
    "end": "2756000"
  },
  {
    "text": "first it made no sense to me and then when you stop to think about it you're like oh that makes more sense it just",
    "start": "2756000",
    "end": "2761200"
  },
  {
    "text": "like wasn't like as intuitive as I would have thought that's such a good point because one of the beautiful things",
    "start": "2761200",
    "end": "2766559"
  },
  {
    "text": "about go is I could go type something in a search engine find an article from like",
    "start": "2766559",
    "end": "2772119"
  },
  {
    "text": "2015 which would be like what six seven years old now and it would be exactly",
    "start": "2772119",
    "end": "2777440"
  },
  {
    "text": "the same like not much has changed in go so there's so much resources out there that are going to reference like empty",
    "start": "2777440",
    "end": "2783000"
  },
  {
    "text": "interfaces and then now we have any so for new folks I don't know that it might cause confusion and the more things you",
    "start": "2783000",
    "end": "2789400"
  },
  {
    "text": "add to a language to blo it the harder it becomes and you lose what voyex side",
    "start": "2789400",
    "end": "2794440"
  },
  {
    "text": "is the Simplicity of the language I wonder if the gum will eventually replace interfaces with any's it would",
    "start": "2794440",
    "end": "2802119"
  },
  {
    "text": "be a nice way to clean it up but I don't know I guess we'll have to wait and see I know I've seen people show some I",
    "start": "2802119",
    "end": "2808160"
  },
  {
    "text": "think it was Brad Fitz Pat fatrick pck I think is who it was I'm trying to remember for sure but I think he had uh",
    "start": "2808160",
    "end": "2814760"
  },
  {
    "text": "posted something on Twitter that was like a short little snippet of how you could go replace it in all of your code if you wanted to so things like that but",
    "start": "2814760",
    "end": "2821280"
  },
  {
    "text": "still like Mike said with with tutorials it's not going to be that easy which is going to be kind of challenging and",
    "start": "2821280",
    "end": "2826839"
  },
  {
    "text": "that's going to make it different I suppose I know that was one of the things that always frustrated me with JavaScript is it felt like every few",
    "start": "2826839",
    "end": "2832880"
  },
  {
    "text": "years there was kind of a new way to do some certain things and you'd still see tutorials or or code that use the old",
    "start": "2832880",
    "end": "2838319"
  },
  {
    "text": "way because nobody's going to go update everything that exists and that could be challenging to somebody who's learning",
    "start": "2838319",
    "end": "2844480"
  },
  {
    "text": "so I'm curious to see how goes I'm hopeful but at the same time I uh I suspect it might also lead to more",
    "start": "2844480",
    "end": "2850520"
  },
  {
    "text": "confusion for at least like the first year where people are coming and they're like why are both of these things kind of doing the same thing okay thank you",
    "start": "2850520",
    "end": "2857599"
  },
  {
    "text": "Mike thank you voytech for joining me I will play us out thanks for inviting",
    "start": "2857599",
    "end": "2863640"
  },
  {
    "text": "me change log plus plus members get a bonus 15 minutes on this episode after",
    "start": "2865040",
    "end": "2870680"
  },
  {
    "text": "the official show ended John and the guys went on to discuss om's upper DB",
    "start": "2870680",
    "end": "2876160"
  },
  {
    "text": "migration gotcha performance concerns and more if you aren't a Plus+ subscriber fix that bug at changel",
    "start": "2876160",
    "end": "2883240"
  },
  {
    "text": "log.com SL Plus+ and get in on extended episodes like this one special thanks to",
    "start": "2883240",
    "end": "2889280"
  },
  {
    "text": "break master cylinder for the beats and thanks again to fastly for shipping our MP3s super fast all around the world",
    "start": "2889280",
    "end": "2896319"
  },
  {
    "text": "next week Natalie and Johnny are joined by Mike eastom to discuss Ai and ml Ops Ino stay tuned for that one it's what's",
    "start": "2896319",
    "end": "2903480"
  },
  {
    "text": "coming up next time on go time [Music]",
    "start": "2903480",
    "end": "2928609"
  },
  {
    "text": "k",
    "start": "2930839",
    "end": "2933839"
  }
]