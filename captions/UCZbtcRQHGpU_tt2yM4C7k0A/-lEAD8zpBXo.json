[
  {
    "text": "[Music] what is up everyone Adam stovak here editor-in chief of change log we teamed",
    "start": "590",
    "end": "7680"
  },
  {
    "text": "up with some friends of ours over at Heroku to promote their podcast called kodish you can check it out at Heroku",
    "start": "7680",
    "end": "13839"
  },
  {
    "text": "comom podcasts codish and today we're dropping a full length episode right",
    "start": "13839",
    "end": "19000"
  },
  {
    "text": "here in the JS party feed featuring ow and O of Heroku joined by Tam goal talking about the pros and cons of using",
    "start": "19000",
    "end": "26119"
  },
  {
    "text": "graphql in your applications here we go [Music]",
    "start": "26119",
    "end": "36680"
  },
  {
    "text": "hello and welcome to codish an exploration of the lives of modern developers join us as we dive into",
    "start": "36680",
    "end": "43200"
  },
  {
    "text": "topics like languages and Frameworks data and event driven architectures and",
    "start": "43200",
    "end": "48320"
  },
  {
    "text": "individual and team productivity all tailored to developers and Engineering leaders this episode is part of our",
    "start": "48320",
    "end": "55280"
  },
  {
    "text": "deeply technical series hello welcome to the kodes",
    "start": "55280",
    "end": "62120"
  },
  {
    "text": "podcast my name is 0 o I'm an engineer from Heroku with me today we have Tam my",
    "start": "62120",
    "end": "69159"
  },
  {
    "text": "goo a CEO from a company called hasu today we are going to talk about",
    "start": "69159",
    "end": "75080"
  },
  {
    "text": "graphql so what is graphql and what is the motivation behind it graphql is uh",
    "start": "75080",
    "end": "82600"
  },
  {
    "text": "API specification very similar to rest uh and very similar to soap before that",
    "start": "82600",
    "end": "88200"
  },
  {
    "text": "um and it's an API specification um that focuses on making data fetch kind of API",
    "start": "88200",
    "end": "94520"
  },
  {
    "text": "calls easy especially for front-end applications it is a specification that",
    "start": "94520",
    "end": "99799"
  },
  {
    "text": "is agnostic to language or framework um and even protocol so you can Implement",
    "start": "99799",
    "end": "106159"
  },
  {
    "text": "graphql on top of HTTP or something else and you can Implement a graphql server",
    "start": "106159",
    "end": "111280"
  },
  {
    "text": "and a graphql client in any language uh in any framework um and it is independent to that again very similar",
    "start": "111280",
    "end": "117759"
  },
  {
    "text": "to the way rest um and so forth the key motivation behind graphql was um to make",
    "start": "117759",
    "end": "124759"
  },
  {
    "text": "it easier for uh front-end developers um and application developers to make API",
    "start": "124759",
    "end": "130759"
  },
  {
    "text": "calls um and to fetch data from API calls there are some nuances around that",
    "start": "130760",
    "end": "135800"
  },
  {
    "text": "and I can I can dive deeper but um it was primarily designed for application developers to be able to build quickly",
    "start": "135800",
    "end": "141280"
  },
  {
    "text": "and to be able to integrate apis uh and use apis inside their applications uh faster yeah that's excellent so you men",
    "start": "141280",
    "end": "149879"
  },
  {
    "text": "mention about client side application so like what kind of client side application are you talking about a",
    "start": "149879",
    "end": "156599"
  },
  {
    "text": "browser app or a CR app yeah I'm talking about I'm talking about browser",
    "start": "156599",
    "end": "161800"
  },
  {
    "text": "applications or I'm talking about web applications and mobile applications in fact graphql first started getting used",
    "start": "161800",
    "end": "168599"
  },
  {
    "text": "in Facebook for the iOS application so even for mobile applications uh but basically developers who are kind of",
    "start": "168599",
    "end": "174879"
  },
  {
    "text": "building front-end uh user facing applications uh it's it was primarily designed for them but graphql just like",
    "start": "174879",
    "end": "181840"
  },
  {
    "text": "any other API can technically use any client in server but you can see direct features in the design that make it very",
    "start": "181840",
    "end": "188400"
  },
  {
    "text": "suitable for front end applications got it so graph Q would be another one that",
    "start": "188400",
    "end": "194040"
  },
  {
    "text": "I consider if I Implement my client application so maybe before comparing r",
    "start": "194040",
    "end": "199319"
  },
  {
    "text": "with graphql what would be the cost and benefit of implementing graphql so so",
    "start": "199319",
    "end": "204599"
  },
  {
    "text": "there are technical costs and benefits of course to implementing graphql but one of the most um important motivations",
    "start": "204599",
    "end": "211879"
  },
  {
    "text": "are are kind of I think the primary U benefit to graphql and where graphql",
    "start": "211879",
    "end": "216920"
  },
  {
    "text": "shines is going to be where you are building a web API and the consumers of",
    "start": "216920",
    "end": "222280"
  },
  {
    "text": "your API are mostly going to be um frontend applications right so that's",
    "start": "222280",
    "end": "227319"
  },
  {
    "text": "that's the case where you would think about saying well maybe maybe I don't expose a rest API but you know maybe I",
    "start": "227319",
    "end": "232640"
  },
  {
    "text": "expose a graphql API and and the reason why this has a tremendous amount of benefit is because like as a front- end",
    "start": "232640",
    "end": "240239"
  },
  {
    "text": "developer if I wear the shoes of a front end developer I love building out the application I love caring about the user",
    "start": "240239",
    "end": "245360"
  },
  {
    "text": "experience I love um making sure that users you know love the product that I build uh but the part that I hate is the",
    "start": "245360",
    "end": "253040"
  },
  {
    "text": "part where I need to integrate apis to actually make the application work right and um and this bit is painful because",
    "start": "253040",
    "end": "259919"
  },
  {
    "text": "traditionally with apis um you know if you just think about integrating an API the first thing is that uh most modern",
    "start": "259919",
    "end": "266600"
  },
  {
    "text": "applications today the same screen that you look at the the same web page or the same Mobile screen that you're looking",
    "start": "266600",
    "end": "272000"
  },
  {
    "text": "at you you actually make a a variety of API calls to kind of different things right maybe you're making a sass API API",
    "start": "272000",
    "end": "278840"
  },
  {
    "text": "call to a SAS service maybe you're making an API call to your own web server um you're fetching different kinds of resources let's say for example",
    "start": "278840",
    "end": "284919"
  },
  {
    "text": "you're building a profile page you know you need to you need to make an API call to fetch the user information like the",
    "start": "284919",
    "end": "290600"
  },
  {
    "text": "username and email and then maybe you need to make another API call to fetch the address information you want to show",
    "start": "290600",
    "end": "295960"
  },
  {
    "text": "the you know the last five addresses of this user on their profile page so you make another API call for doing that and",
    "start": "295960",
    "end": "302039"
  },
  {
    "text": "soon you realize that for kind of pages that are becoming complicated you realize that you as a front-end developer start making you know lots of",
    "start": "302039",
    "end": "309360"
  },
  {
    "text": "API calls and uh this process is painful because you have API calls are asynchronous so um you know you you make",
    "start": "309360",
    "end": "315919"
  },
  {
    "text": "an API call you wait for the network to kind of give you data and then the user is kind of blocked till then and then",
    "start": "315919",
    "end": "321720"
  },
  {
    "text": "they kind of see data coming in right uh and imagine if you have like five or six API calls you just have different parts",
    "start": "321720",
    "end": "327520"
  },
  {
    "text": "of the screen kind of loading in different speed or you know you have to take care of issues like that um and and",
    "start": "327520",
    "end": "332880"
  },
  {
    "text": "these are things that You' already figured out when you built the app but then when you did the API integration",
    "start": "332880",
    "end": "338000"
  },
  {
    "text": "you know everything was it wasn't fun and um and this is not a new problem right this is a fairly old problem and",
    "start": "338000",
    "end": "343880"
  },
  {
    "text": "so what people started doing was they said you know we'll have something like a BFF like a back end for front end um",
    "start": "343880",
    "end": "349800"
  },
  {
    "text": "and we'll aggregate this API so we'll give we'll provide one API where you can fetch all the other five like resources",
    "start": "349800",
    "end": "356280"
  },
  {
    "text": "that you wanted and show that on your screen this was kind of becoming Aon um meanwhile simultaneously on the Facebook",
    "start": "356280",
    "end": "363160"
  },
  {
    "text": "side they said you know what what if we create um and what if we like think about all these problems that front-end",
    "start": "363160",
    "end": "369400"
  },
  {
    "text": "developers face and we kind of solve this problem more systematically right so what they did was they said instead",
    "start": "369400",
    "end": "376400"
  },
  {
    "text": "of making uh a bunch of API calls why don't we all have a single API endpoint",
    "start": "376400",
    "end": "381800"
  },
  {
    "text": "let's give this endpoint to the front end developer team and and what that Dev team can do is say I can make an API",
    "start": "381800",
    "end": "388639"
  },
  {
    "text": "call and in instead of you know specifying the resource that I want as a part of the URL so instead of saying",
    "start": "388639",
    "end": "394080"
  },
  {
    "text": "something like I want to get / user or slash user slash address instead of",
    "start": "394080",
    "end": "400759"
  },
  {
    "text": "saying something like that you can now say you know slra ql and what you submit to this endpoint is a query so you make",
    "start": "400759",
    "end": "407759"
  },
  {
    "text": "a post request where you submit a query and you say I want I query for user and",
    "start": "407759",
    "end": "414759"
  },
  {
    "text": "within user I want ID comma name and I want address and within add address",
    "start": "414759",
    "end": "420080"
  },
  {
    "text": "which is like uh you know like a nested node inside the user object I want um address. ID address. Street address.",
    "start": "420080",
    "end": "428000"
  },
  {
    "text": "City address. Country right and you can specify exactly the shape uh of the",
    "start": "428000",
    "end": "433680"
  },
  {
    "text": "resource that you want and the graph server then kind of figures out that okay you need to fetch like three or",
    "start": "433680",
    "end": "439840"
  },
  {
    "text": "four different resources so um let's make this uh API call and and let's",
    "start": "439840",
    "end": "445160"
  },
  {
    "text": "let's fetch all these resources and let's send these resources to the front end so from the front end developer point of view now it's a great",
    "start": "445160",
    "end": "451120"
  },
  {
    "text": "experience right because now I can make one API call I can specify in that API my query uh and I can get exactly the",
    "start": "451120",
    "end": "458160"
  },
  {
    "text": "data that I want um and so this is a huge benefit to the front end developer what you're saying is graph Q allow me",
    "start": "458160",
    "end": "465879"
  },
  {
    "text": "to have one endpoint that can query all the domain logic that I want to query",
    "start": "465879",
    "end": "473199"
  },
  {
    "text": "exactly exactly and it's very similar to imagine that as uh you know as as maybe",
    "start": "473199",
    "end": "478759"
  },
  {
    "text": "if you're building a API right uh as a developer you have something like SQL or",
    "start": "478759",
    "end": "484520"
  },
  {
    "text": "like you know a query language with  or something like that you have you have you have SQL and using SQL you",
    "start": "484520",
    "end": "490479"
  },
  {
    "text": "can query everything in the database right you can you can query anything in the database that you want and SQL is",
    "start": "490479",
    "end": "496919"
  },
  {
    "text": "great for doing that um but imagine if the database gave you like rest end points right wouldn't you be like it",
    "start": "496919",
    "end": "503039"
  },
  {
    "text": "would be so irritating for the backend developer because every time you want to like you know fetch something interesting you want to maybe do a joint",
    "start": "503039",
    "end": "509879"
  },
  {
    "text": "you want to do some filtering it's so inconvenient because you kind of want to fetch you want to make a better query",
    "start": "509879",
    "end": "515240"
  },
  {
    "text": "for fetching you know the entire kind of quote unquote graph or relationship structure that you want um graphql is",
    "start": "515240",
    "end": "522240"
  },
  {
    "text": "very analogous to that power it gives the front end developer that kind of",
    "start": "522240",
    "end": "527560"
  },
  {
    "text": "power right that kind of flexibility in saying here are the domain resources and",
    "start": "527560",
    "end": "532800"
  },
  {
    "text": "here's my query for fetching the precise slice of domain resources that I want and that power is so amazing for front",
    "start": "532800",
    "end": "539600"
  },
  {
    "text": "end developers because now they don't have to wait for backend developers to create new endpoints right they can",
    "start": "539600",
    "end": "545160"
  },
  {
    "text": "always query for exactly what they want um as long as somehow the domain models are represented on the back end um it's",
    "start": "545160",
    "end": "551120"
  },
  {
    "text": "a great experience for front end developers so how would I get started creating a graph QR application do I",
    "start": "551120",
    "end": "559079"
  },
  {
    "text": "Define some sort of schema to open up my API employing or how how would I get",
    "start": "559079",
    "end": "565680"
  },
  {
    "text": "started it's very similar to how you would get started with uh with how you would get started with building just a",
    "start": "565680",
    "end": "570720"
  },
  {
    "text": "normal API in a client server web application right so you on the front end um you know you're building your app",
    "start": "570720",
    "end": "577200"
  },
  {
    "text": "you start making API calls and you use something like a rest client or you use some kind of HTTP client so on the front",
    "start": "577200",
    "end": "582959"
  },
  {
    "text": "end you know you build your front end but instead of using an HTTP client you use a graphql client um and graphql",
    "start": "582959",
    "end": "589120"
  },
  {
    "text": "client is basically a simple wrapper on top of an HTTP client which allows you to conveniently create queries um and",
    "start": "589120",
    "end": "596320"
  },
  {
    "text": "then you know you don't have to put in the exact URL and the parameters you just have to sub you just write out your graph Feld query and you get the data",
    "start": "596320",
    "end": "603160"
  },
  {
    "text": "and then you can start using that data in your um application and on the back end um very similar to how you have um",
    "start": "603160",
    "end": "610279"
  },
  {
    "text": "you know how you would build a rest server or like you know maybe just an API server uh a typical pattern is that",
    "start": "610279",
    "end": "616079"
  },
  {
    "text": "you create something like a routes file or a url's file right and so you specify the different URL paths and the",
    "start": "616079",
    "end": "622640"
  },
  {
    "text": "different resources that you want to make available so maybe you say I have a get endpoint for user you have a get",
    "start": "622640",
    "end": "628399"
  },
  {
    "text": "endpoint for user address you have a post endpoint for um you know creating a user and stuff like that um and then you",
    "start": "628399",
    "end": "635360"
  },
  {
    "text": "would have in in the in the in the rest API world you would have kind of mapped these um URLs to functions and these",
    "start": "635360",
    "end": "644720"
  },
  {
    "text": "functions or controllers would have actually um executed some kind of data",
    "start": "644720",
    "end": "650000"
  },
  {
    "text": "fetching logic or some security and authorization logic and then return that data or return that Json um in in the",
    "start": "650000",
    "end": "657480"
  },
  {
    "text": "graphql world it's very similar but instead of mapping URLs to functions",
    "start": "657480",
    "end": "663399"
  },
  {
    "text": "what you do is you map uh you create graphql uh types right so you say I have",
    "start": "663399",
    "end": "668639"
  },
  {
    "text": "a user type and I have let's say an address type and every user has an",
    "start": "668639",
    "end": "674560"
  },
  {
    "text": "address and so what you do is you say this is the user type I'm going to have",
    "start": "674560",
    "end": "679600"
  },
  {
    "text": "an address field inside the user type which is a reference to the address type",
    "start": "679600",
    "end": "684959"
  },
  {
    "text": "right so you kind of create these two types that are linked to each other uh um and then for each each of these kind",
    "start": "684959",
    "end": "691800"
  },
  {
    "text": "of types or Fields you attach a function so you say that if somebody requests for",
    "start": "691800",
    "end": "697839"
  },
  {
    "text": "the user like field or the user type then this function can execute the logic for fetching the exact data for user",
    "start": "697839",
    "end": "705959"
  },
  {
    "text": "right and similarly for address you specify a function and you say this function knows how to fetch the address",
    "start": "705959",
    "end": "711720"
  },
  {
    "text": "information so now if the front-end application makes a query and says I want user id1 uh name and address and",
    "start": "711720",
    "end": "719440"
  },
  {
    "text": "for address I want address. city right so what happens is your server will execute the function for user execute",
    "start": "719440",
    "end": "725639"
  },
  {
    "text": "the function for address it will run these two functions and then kind of get the data put it into a Json structure",
    "start": "725639",
    "end": "731399"
  },
  {
    "text": "and then respond to the client so very similar to what you would have done like no magic it's just that instead of",
    "start": "731399",
    "end": "737839"
  },
  {
    "text": "instead of having something that can process a URL and map it to a function you instead process a query and map it",
    "start": "737839",
    "end": "744639"
  },
  {
    "text": "to a function um these functions are called resolvers so you map fields to resolvers like you map URLs to",
    "start": "744639",
    "end": "751120"
  },
  {
    "text": "controllers um very similar um so what what would be a cases that graph ql",
    "start": "751120",
    "end": "756399"
  },
  {
    "text": "would not be the good set so a graphql API um you know from the description like I was I was giving you it seems it",
    "start": "756399",
    "end": "763120"
  },
  {
    "text": "would be it's quite clear that if you have uh you know you you can model your",
    "start": "763120",
    "end": "768440"
  },
  {
    "text": "uh domain objects with a schema and then every time I make a request you return some Json data right um that itself will",
    "start": "768440",
    "end": "776079"
  },
  {
    "text": "kind of point out those conditions where you realize that graph is not a good fit for example if you have binary data",
    "start": "776079",
    "end": "782040"
  },
  {
    "text": "right let's say for example I make a request and I say I want to fetch an image right or I want to fetch a video",
    "start": "782040",
    "end": "788199"
  },
  {
    "text": "right or I need to fetch a stream of of some data um in those cases graphql is",
    "start": "788199",
    "end": "793399"
  },
  {
    "text": "not ideal or even if the return if the return if the response is not Json well that's a pretty clear fit for not being",
    "start": "793399",
    "end": "799720"
  },
  {
    "text": "a great fit for graphql uh but even if you have things like streaming or you have binary data that's not a good fit",
    "start": "799720",
    "end": "806199"
  },
  {
    "text": "for graphql as well and sometimes depending on the application that you have uh you know you you might not you",
    "start": "806199",
    "end": "813240"
  },
  {
    "text": "you you might realize that the way that you're modeling uh the way that your API models are built it doesn't really fit",
    "start": "813240",
    "end": "821199"
  },
  {
    "text": "with graphql or you know maybe it's very chatty maybe the client and the server are kind of very chatty maybe it's an",
    "start": "821199",
    "end": "826920"
  },
  {
    "text": "internal application it's very chatty um and it's it's not a great fit for graphql but in most applications that we",
    "start": "826920",
    "end": "833839"
  },
  {
    "text": "think about in the web and mobile landscape graphql actually ends up being a really good fit so now let's uh change",
    "start": "833839",
    "end": "840560"
  },
  {
    "text": "a little bit of the topic to uh the adoption of graphql what is driving",
    "start": "840560",
    "end": "845680"
  },
  {
    "text": "graphql adoption today graphql makes the front end and the dev the app Dev team",
    "start": "845680",
    "end": "852880"
  },
  {
    "text": "it gives them superpowers right um it makes them very productive so in all of the cases where the end user application",
    "start": "852880",
    "end": "861639"
  },
  {
    "text": "and the quality of the end user application and the agility of being able to add remove and iterate on",
    "start": "861639",
    "end": "868279"
  },
  {
    "text": "features of the end user application is important um graphql becomes very useful",
    "start": "868279",
    "end": "873399"
  },
  {
    "text": "so wherever we notice that the business drivers are closely correlated to um the",
    "start": "873399",
    "end": "879199"
  },
  {
    "text": "quality of the end user application graphql starts kind of sneaking in and the frontend team says you know what if",
    "start": "879199",
    "end": "885240"
  },
  {
    "text": "you want us to be productive give us a graphql API um and that's kind of the primary vector and that kind of also",
    "start": "885240",
    "end": "891399"
  },
  {
    "text": "answerers situations where you know graph C is not a primary Vector right so that's kind of the primary reason and",
    "start": "891399",
    "end": "896800"
  },
  {
    "text": "and what and what we notice in the world today is that um so much of the way that we use technology and the way people are",
    "start": "896800",
    "end": "902360"
  },
  {
    "text": "using technology has shifted to being able to provide a good user experience",
    "start": "902360",
    "end": "907959"
  },
  {
    "text": "on on an application right and so many things uh for any business right whether it's a consumer like a startup or a",
    "start": "907959",
    "end": "915160"
  },
  {
    "text": "large technology giant or whether it's a Enterprise um you know even if it's like a a small store um so much of the way",
    "start": "915160",
    "end": "922680"
  },
  {
    "text": "that they deliver technology to their end users is Shifting to the front end right and the and the power of the",
    "start": "922680",
    "end": "929600"
  },
  {
    "text": "application of the front end that graphql is becoming important um and I think those two factors combined um are",
    "start": "929600",
    "end": "936279"
  },
  {
    "text": "kind of causing a massive amount of graphql Buzz uh for in the front end",
    "start": "936279",
    "end": "941839"
  },
  {
    "text": "ecosystem um now let's change the topic a little bit to the best practices of uh using graphql what are some of the best",
    "start": "941839",
    "end": "949040"
  },
  {
    "text": "practice in your opinion for using graphql I think it depends a lot on the existing situation that you have you",
    "start": "949040",
    "end": "955160"
  },
  {
    "text": "know maybe U let's say for example you have a monolith application um or let's",
    "start": "955160",
    "end": "960759"
  },
  {
    "text": "say you have microservices um let's say you don't have front-end applications and you have mostly service to service",
    "start": "960759",
    "end": "966319"
  },
  {
    "text": "communication uh or you know and and so you have kind of different scenarios right let's say you're building a new application or let's say you're kind of",
    "start": "966319",
    "end": "972880"
  },
  {
    "text": "adding graphql to an existing application um and so in all of those scenarios the kind of different things",
    "start": "972880",
    "end": "978040"
  },
  {
    "text": "are the best practices of using graphql vary um but uh what what is um and and",
    "start": "978040",
    "end": "984040"
  },
  {
    "text": "if I can kind of break down these individual scenarios uh one by one if you have an existing monolith and you",
    "start": "984040",
    "end": "990560"
  },
  {
    "text": "want to use graphql there is good tooling today so what you would do is you would use a graphql kind of um I",
    "start": "990560",
    "end": "996519"
  },
  {
    "text": "won't say framework but you will use something like a graphql module or a graphql library and this graphql Library",
    "start": "996519",
    "end": "1002720"
  },
  {
    "text": "will allow you to create a graphql schema and map those graph schemas to resolvers and these resolvers that you",
    "start": "1002720",
    "end": "1009600"
  },
  {
    "text": "implement will kind of talk to the underlying controllers that you have within the monolith and in this case",
    "start": "1009600",
    "end": "1015680"
  },
  {
    "text": "what you do is you you have the ability to design a graphql schema that is similar to your rest models but that",
    "start": "1015680",
    "end": "1023079"
  },
  {
    "text": "also reflects the requirements of what the front end developers want um and so you can kind of design that graphql",
    "start": "1023079",
    "end": "1028760"
  },
  {
    "text": "schema and then you can build that out um and then you can map that now depending on the framework that you're using there are different approaches for",
    "start": "1028760",
    "end": "1035079"
  },
  {
    "text": "doing this one of the common approaches today is to have a graphql schema and then build manually write a graphql",
    "start": "1035079",
    "end": "1041918"
  },
  {
    "text": "schema which is a different language so it's a different language altogether U you you have a file and inside that you",
    "start": "1041919",
    "end": "1047600"
  },
  {
    "text": "write the graphql uh schema that kind of becomes the URLs or the routes file right uh that's one approach uh the",
    "start": "1047600",
    "end": "1054000"
  },
  {
    "text": "other approach is if you are for example you have a Java if you have some kind of typed language right let's say you have",
    "start": "1054000",
    "end": "1060080"
  },
  {
    "text": "Java or um I think now maybe typescript these languages you are already modeling",
    "start": "1060080",
    "end": "1065880"
  },
  {
    "text": "the resources right and in these cases very often like for example with spring boot you you might not even be",
    "start": "1065880",
    "end": "1071559"
  },
  {
    "text": "explicitly creating rest API end points right you might just be creating models um and the rest API end points are",
    "start": "1071559",
    "end": "1078080"
  },
  {
    "text": "almost autogen generated right um and in these cases actually what you can do is you can you know you can just build your",
    "start": "1078080",
    "end": "1083520"
  },
  {
    "text": "models and these models will generate the graphql schema and the graphql API automatically for you in this case uh",
    "start": "1083520",
    "end": "1089720"
  },
  {
    "text": "you know it basically your graphical schema reflects the kind of models that you have and that kind of ends up working as well so this is kind of like",
    "start": "1089720",
    "end": "1096679"
  },
  {
    "text": "the different ways that you have um on the monolithic side um when you have microservices uh graphql becomes very",
    "start": "1096679",
    "end": "1104039"
  },
  {
    "text": "painful uh to use um and uh this is this is actually a point of stress for the",
    "start": "1104039",
    "end": "1109840"
  },
  {
    "text": "community at the moment which is you know how how do we deal with graphql and microservices I feel U there there are",
    "start": "1109840",
    "end": "1115799"
  },
  {
    "text": "many there are many different approaches that have emerged uh a very common approach is the graphql Gateway approach",
    "start": "1115799",
    "end": "1121640"
  },
  {
    "text": "um and which is very very similar to The backend for front end approach that's the BFF approach right so what you do is",
    "start": "1121640",
    "end": "1127960"
  },
  {
    "text": "you say um I'm going to build uh there's you take out a small team like a team of two or three people um or you you know",
    "start": "1127960",
    "end": "1135240"
  },
  {
    "text": "maybe the front-end developers kind of decide to put together this team uh and this team now builds a graphql",
    "start": "1135240",
    "end": "1141919"
  },
  {
    "text": "server uh and This graphql Server uh provides the kind of graphql schema and",
    "start": "1141919",
    "end": "1147120"
  },
  {
    "text": "graph API for the front-end developers or for the different applications that are being used uh and on the back it",
    "start": "1147120",
    "end": "1153400"
  },
  {
    "text": "queries these different microservices uh that you already have I think the best practice for using graphql is what would",
    "start": "1153400",
    "end": "1160840"
  },
  {
    "text": "give you uh what really works for you uh and I think it's very similar again to",
    "start": "1160840",
    "end": "1166480"
  },
  {
    "text": "the early days of rest where you know you have a lot of rest best practices and the way you should use rest verbs and the way you should do rest model",
    "start": "1166480",
    "end": "1173240"
  },
  {
    "text": "your resources but once rest became an API that was used everywhere you know people started crafting their rest API",
    "start": "1173240",
    "end": "1179919"
  },
  {
    "text": "to be more suitable to what they wanted to do and you know what their application was doing um and it",
    "start": "1179919",
    "end": "1185520"
  },
  {
    "text": "automatically kind of went through changes right so there's a lot a lot of convention that emerged around different",
    "start": "1185520",
    "end": "1190880"
  },
  {
    "text": "kinds of domains and how to use the rest API properly and what to do with the rest API um and we are going to go",
    "start": "1190880",
    "end": "1196440"
  },
  {
    "text": "through that Journey with graphql as well um where we you see many different kinds of use cases and best practices",
    "start": "1196440",
    "end": "1201960"
  },
  {
    "text": "and patterns emerge around those use cases um for for how you can use graphql so you have built a company to",
    "start": "1201960",
    "end": "1210159"
  },
  {
    "text": "have the the team to use graphql for a cloud n application have you seen any",
    "start": "1210159",
    "end": "1215240"
  },
  {
    "text": "interesting usage of graphql it's been a fascinating Journey for us um you know we we a we're a open source engine we",
    "start": "1215240",
    "end": "1222200"
  },
  {
    "text": "launched just about a year ago um and you know kind of it it's a graphql",
    "start": "1222200",
    "end": "1228360"
  },
  {
    "text": "engine that you know works with the postest database um and U we've now added the capability of it to be able to",
    "start": "1228360",
    "end": "1234679"
  },
  {
    "text": "talk to other microservices um so that you can kind of connect different microservices together and create a",
    "start": "1234679",
    "end": "1240159"
  },
  {
    "text": "unified graphql endpoint um and uh and our graphql engine takes care of being able to kind of you know join across uh",
    "start": "1240159",
    "end": "1247720"
  },
  {
    "text": "these services or join across what I call mider services and databases um and",
    "start": "1247720",
    "end": "1253360"
  },
  {
    "text": "provide um an authorization kind of system so that you can uh you can expose",
    "start": "1253360",
    "end": "1258559"
  },
  {
    "text": "expose right parts of the graphql schema to the right end users right sometimes you don't want to expose the whole graphql schema um and you able to",
    "start": "1258559",
    "end": "1265520"
  },
  {
    "text": "enforce certain authorization policies uh there is another transformation that is happening in the world you know today",
    "start": "1265520",
    "end": "1271840"
  },
  {
    "text": "which is the whole Cloud native transformation U you know movement from containers to uh making containers",
    "start": "1271840",
    "end": "1278480"
  },
  {
    "text": "stateless right uh and to to even serverless functions which is kind of like you know the extreme uh of of a",
    "start": "1278480",
    "end": "1285039"
  },
  {
    "text": "microservice right that that is an entire movement that is happening in one part of the industry so the",
    "start": "1285039",
    "end": "1291600"
  },
  {
    "text": "backend developers are moving towards being event driven of being decoupled",
    "start": "1291600",
    "end": "1296799"
  },
  {
    "text": "having services having microservices having server dysfunctions right of using you know multiple SAS apis they",
    "start": "1296799",
    "end": "1303200"
  },
  {
    "text": "use vendor products uh they use uh they use an API created by other team so um",
    "start": "1303200",
    "end": "1308760"
  },
  {
    "text": "so that is kind of that is kind of one entire uh industry movement that is happening fored by Docker and kubernetes",
    "start": "1308760",
    "end": "1315279"
  },
  {
    "text": "and all of the cloud native Innovation that is happening and on the other end you know there's the front end team uh and the front end team wants graphql and",
    "start": "1315279",
    "end": "1321960"
  },
  {
    "text": "graphql works really well with the monolith right uh but it does not work really well with microservices or",
    "start": "1321960",
    "end": "1328120"
  },
  {
    "text": "service functions or whatever um and so there's been a tremendous amount of interest uh in trying to figure out how",
    "start": "1328120",
    "end": "1334919"
  },
  {
    "text": "we can make both of those Landscapes work well together right um in a knife way to connect a graphql API to various",
    "start": "1334919",
    "end": "1342240"
  },
  {
    "text": "seress functions and microservices is not hard uh but to actually make that work at scale to deal with performance",
    "start": "1342240",
    "end": "1348279"
  },
  {
    "text": "to to deal with caching to deal with security um it it it's it requires a new form of thinking for the organization to",
    "start": "1348279",
    "end": "1355679"
  },
  {
    "text": "actually make graph K work really well uh you know with a with a quote unquote Cloud native backend and by Cloud native",
    "start": "1355679",
    "end": "1361240"
  },
  {
    "text": "I mean you know things that are uh microservices and seress functions and that are event driven so that are",
    "start": "1361240",
    "end": "1366760"
  },
  {
    "text": "stateless um and and there's been a tremendous amount of interest in trying to make that work together uh so so the",
    "start": "1366760",
    "end": "1374320"
  },
  {
    "text": "short answer is yes there's a huge amount of interest in trying to make sure that we can we can get the best out",
    "start": "1374320",
    "end": "1380200"
  },
  {
    "text": "of graphql for the application development team and we can get the best out of our backend um and back end",
    "start": "1380200",
    "end": "1386360"
  },
  {
    "text": "agility right um and backend is a lose word right means everything may be on the infrastructure and get a tremendous",
    "start": "1386360",
    "end": "1392200"
  },
  {
    "text": "amount of developer agility uh on on the back end as way excellent so you touchbase a little bit of graph ql and",
    "start": "1392200",
    "end": "1399960"
  },
  {
    "text": "microservices and talk about how your company is trying to solve this issue I wonder though like what what are the",
    "start": "1399960",
    "end": "1405799"
  },
  {
    "text": "pains and learning uh between you well using graphql for",
    "start": "1405799",
    "end": "1412440"
  },
  {
    "text": "microservices right right um I think so um so so you know like like I was I was",
    "start": "1412440",
    "end": "1418400"
  },
  {
    "text": "mentioning a little bit before um a graphql API is powered by a graphql",
    "start": "1418400",
    "end": "1423600"
  },
  {
    "text": "schema um and the graphql schema is essentially like a type system right um",
    "start": "1423600",
    "end": "1428720"
  },
  {
    "text": "and so if you if you come from a if you if you programmed in a you know type language kind of environment or",
    "start": "1428720",
    "end": "1434200"
  },
  {
    "text": "statically typed environment you notice that you create types um you build typ types or you build classes uh right",
    "start": "1434200",
    "end": "1440840"
  },
  {
    "text": "function maybe you build types or maybe you're building classes and objects and things like that um and then as you're",
    "start": "1440840",
    "end": "1445880"
  },
  {
    "text": "building things um you know let's say you make an error uh in in the name of particular type right or the way you're",
    "start": "1445880",
    "end": "1451840"
  },
  {
    "text": "referring to a particular type so maybe like the user type has an address uh field and the address field is pointing",
    "start": "1451840",
    "end": "1457840"
  },
  {
    "text": "to an address type or a user class and an address class um and let's say you make a spelling error uh inside the way",
    "start": "1457840",
    "end": "1463679"
  },
  {
    "text": "you refer to the address class from the user class um when you build it your compiler will tell you you know what",
    "start": "1463679",
    "end": "1469760"
  },
  {
    "text": "here's a problem um there is no such thing as uh ad RIS right you spelled",
    "start": "1469760",
    "end": "1476039"
  },
  {
    "text": "address like this this thing does not exist um and so what you do as a developer is you're like oh okay I need",
    "start": "1476039",
    "end": "1481520"
  },
  {
    "text": "to go fix that and so you go fix it or maybe somebody else who's building a different module uh they named the they",
    "start": "1481520",
    "end": "1487960"
  },
  {
    "text": "named their class user as well and so now when they try to build it they're like hey duplicate declaration right don't uh what's happening um and so then",
    "start": "1487960",
    "end": "1495120"
  },
  {
    "text": "you as developers coordinate and you talk to each other uh and you fix this problem um but when you think about",
    "start": "1495120",
    "end": "1502080"
  },
  {
    "text": "graphql with microservices u each microservice defines their own set of apis right um and and when you try to",
    "start": "1502080",
    "end": "1510760"
  },
  {
    "text": "bring them together with graphql what you're trying to say is hey these are the various types of microservice one",
    "start": "1510760",
    "end": "1516440"
  },
  {
    "text": "these are the various Resources by microservice 2 and these are maybe the relationships between microservice one",
    "start": "1516440",
    "end": "1521799"
  },
  {
    "text": "and two between the types exposed by micros service 1 and two now the problem is that if you kind of think about the",
    "start": "1521799",
    "end": "1527960"
  },
  {
    "text": "to l of how these two microservices and types come together um this is very challenging right because the same",
    "start": "1527960",
    "end": "1534480"
  },
  {
    "text": "problems that I talked about like maybe you're maybe you want to connect the user type to the address type uh how how",
    "start": "1534480",
    "end": "1541120"
  },
  {
    "text": "do you keep track of the fact that the type names are evolving or changing or that there are errors in the references",
    "start": "1541120",
    "end": "1546200"
  },
  {
    "text": "that you've created right so maybe when you dynamically build a graph how do you know that um it actually makes sense",
    "start": "1546200",
    "end": "1551919"
  },
  {
    "text": "right there is actually there are actually services that are handling this this it it the the problem moves out",
    "start": "1551919",
    "end": "1558360"
  },
  {
    "text": "from the build time and moves into like the run time right and and that's just more challenging to deal with um and um",
    "start": "1558360",
    "end": "1566720"
  },
  {
    "text": "and so that's kind of just maybe one example but you can have all kinds of problems with overlapping types or you can have like duplicate declarations and",
    "start": "1566720",
    "end": "1572760"
  },
  {
    "text": "stuff like that yeah thank you for sharing your experience with uh graph C and",
    "start": "1572760",
    "end": "1578440"
  },
  {
    "text": "microservices currently there's a working draft of uh the graph K back",
    "start": "1578440",
    "end": "1584279"
  },
  {
    "text": "what's new what's coming up next there are lots of discussions that are happening uh in the graphql spec in the",
    "start": "1584279",
    "end": "1591279"
  },
  {
    "text": "graphql draft around how to be able to um you know name space things or whether we should do it in graphql or not or um",
    "start": "1591279",
    "end": "1597600"
  },
  {
    "text": "when you think about graphel mutations and input types uh of whether we want interfaces for input types or not um and",
    "start": "1597600",
    "end": "1604320"
  },
  {
    "text": "so there's a lot of active discussion there uh but but for the most part the bulk of the graphel spec has is uh is is",
    "start": "1604320",
    "end": "1612000"
  },
  {
    "text": "very solid um a lot of a lot of the stuff that you need to do that you need to build is all pretty much done there",
    "start": "1612000",
    "end": "1618320"
  },
  {
    "text": "are a few nuances that I think are being worked out um and I think there's a lot of pressure from the graph Fuel and microservices side of things um to move",
    "start": "1618320",
    "end": "1625240"
  },
  {
    "text": "the graph fuel spec in a particular direction but so far graphql is very solid and the and the spec is really",
    "start": "1625240",
    "end": "1630360"
  },
  {
    "text": "solid is there any topic that you would like to cover that is not covered today",
    "start": "1630360",
    "end": "1635760"
  },
  {
    "text": "I would urge folks to go try out graphql and learn graphql so that's that's really easy to do um at least to learn",
    "start": "1635760",
    "end": "1642279"
  },
  {
    "text": "about graph right whether you decide to use it or not uh tremendous amount lots of resources to be able to kind of",
    "start": "1642279",
    "end": "1648279"
  },
  {
    "text": "quickly build an application of graphql on the front end or use a graphql API on the front end or uh you know build a",
    "start": "1648279",
    "end": "1653480"
  },
  {
    "text": "small graphql server just to get a flavor of what it takes um and and I know I mentioned a lot of challenges",
    "start": "1653480",
    "end": "1658840"
  },
  {
    "text": "with graphql uh but you know I I absolutely love graphql and I think it's uh it's going to be amazing so it's",
    "start": "1658840",
    "end": "1665440"
  },
  {
    "text": "important for us as a community to you know get handson uh and and experience the benefits of graphql um use a graphql",
    "start": "1665440",
    "end": "1672799"
  },
  {
    "text": "API integrate a graphql API understand the nuances of graphql uh uh and uh and",
    "start": "1672799",
    "end": "1678360"
  },
  {
    "text": "and I think that'll help the community kind of evolve and figure out uh what the different kinds of things we can do with graph qlr what is the best way to",
    "start": "1678360",
    "end": "1685279"
  },
  {
    "text": "learn about graphql um there are there are many different resources depending on what",
    "start": "1685279",
    "end": "1691559"
  },
  {
    "text": "you're trying to do um I think on the depending on the language or the framework that you're using if you're a backend developer um you there are",
    "start": "1691559",
    "end": "1698360"
  },
  {
    "text": "several nice tutorials uh you can just if you just search for um like there's",
    "start": "1698360",
    "end": "1704320"
  },
  {
    "text": "there's something called awesome graph ql which has a bunch of resources uh on the spe specific backend framework and",
    "start": "1704320",
    "end": "1709399"
  },
  {
    "text": "what kind of graphql Library you can use and they usually have some nice tutorials um on the front end side of",
    "start": "1709399",
    "end": "1715720"
  },
  {
    "text": "things uh there are lots of egg there are lots of courses on Egghead uh that have a nice introduction to graphql or",
    "start": "1715720",
    "end": "1722240"
  },
  {
    "text": "udmi um we maintain an open-source uh set of tutorials on learn. hass.io uh",
    "start": "1722240",
    "end": "1729080"
  },
  {
    "text": "where you can uh kind of take two hours to learn how to integrate graphql into your react app as a react developer so",
    "start": "1729080",
    "end": "1735519"
  },
  {
    "text": "we have tutorials for react angular flutter reason ml Elm typescript uh and",
    "start": "1735519",
    "end": "1742279"
  },
  {
    "text": "iOS Android and react native as well uh all maintained by the community uh and kind of helps you get started with",
    "start": "1742279",
    "end": "1748360"
  },
  {
    "text": "graphql super fast the best way to to find resources for graphql is usually to",
    "start": "1748360",
    "end": "1753799"
  },
  {
    "text": "scope it in by the specific technology stack that you want to be interested in",
    "start": "1753799",
    "end": "1759240"
  },
  {
    "text": "um if you generally want to get a flavor for what the graphql API is um you can head to the graphql org website um but",
    "start": "1759240",
    "end": "1767720"
  },
  {
    "text": "from my personal experience um reading about graphql did not help me as much as",
    "start": "1767720",
    "end": "1772760"
  },
  {
    "text": "when I used graphql to build a front-end application and that's when things started kicking for me um so I would",
    "start": "1772760",
    "end": "1778039"
  },
  {
    "text": "encourage you to kind of build something with graphql especially on the front end to understand the uh Power of graph Q",
    "start": "1778039",
    "end": "1785039"
  },
  {
    "text": "thank you for joining us today Tama it was has been a really useful conversation with you on graphql thank",
    "start": "1785039",
    "end": "1790840"
  },
  {
    "text": "you for having me thanks for joining us for this episode of the kodish podcast kodish is",
    "start": "1790840",
    "end": "1798039"
  },
  {
    "text": "is produced by Heroku the easiest way to deploy manage and scale your applications in the cloud if You' like",
    "start": "1798039",
    "end": "1804279"
  },
  {
    "text": "to learn more about kodish or any of heroku's podcasts please visit hu.com",
    "start": "1804279",
    "end": "1811158"
  },
  {
    "text": "[Music] podcast",
    "start": "1812260",
    "end": "1819760"
  }
]