[
  {
    "text": "[Applause]",
    "start": "410",
    "end": "5410"
  },
  {
    "text": "what up python nerds I'm Jared and you are listening to the change log where",
    "start": "12400",
    "end": "18160"
  },
  {
    "text": "each and every week we sit down with the hackers the leaders and the innovators",
    "start": "18160",
    "end": "24359"
  },
  {
    "text": "of the software world to pick their brain to learn from their mistakes to get inspired Ed by their accomplishments",
    "start": "24359",
    "end": "31640"
  },
  {
    "text": "and to have a lot of fun along the way on this episode I'm joined by the",
    "start": "31640",
    "end": "36879"
  },
  {
    "text": "co-hosts of the core. py podcast Pablo Galindo and wush longa whose name I will",
    "start": "36879",
    "end": "43440"
  },
  {
    "text": "pronounce Lucas from here on out because it's just a lot easier for me on core.",
    "start": "43440",
    "end": "48559"
  },
  {
    "text": "py they talk about python internals because they work on python internals",
    "start": "48559",
    "end": "53600"
  },
  {
    "text": "and today we're talking about python 3.13 which is right around the corner when we recorded this conversation last",
    "start": "53600",
    "end": "60280"
  },
  {
    "text": "week it was slated to be released on October 1st but now they are targeting October 7th so if you're listening to",
    "start": "60280",
    "end": "67560"
  },
  {
    "text": "this in the future 3.13 is fully baked but if you are listening right after we hit publish wait a week or grab the",
    "start": "67560",
    "end": "75240"
  },
  {
    "text": "release candidate which is 99% baked why are we all so excited about python 3.13",
    "start": "75240",
    "end": "81439"
  },
  {
    "text": "well the global interpreter lock aka the Gill is now experimentally optional this",
    "start": "81439",
    "end": "87320"
  },
  {
    "text": "is a huge deal as python is finally free threaded and able to run with true",
    "start": "87320",
    "end": "93200"
  },
  {
    "text": "parallelism there's more of course and we get into all the details I think you'll enjoy it even if like me you",
    "start": "93200",
    "end": "99759"
  },
  {
    "text": "aren't a regular pythonista but first a mention of our partners at fly.io over 3",
    "start": "99759",
    "end": "106040"
  },
  {
    "text": "million apps have launched on fly including ours and you can too in less",
    "start": "106040",
    "end": "111159"
  },
  {
    "text": "than 5 minutes learn how at fly.io okay free threaded python on the",
    "start": "111159",
    "end": "117039"
  },
  {
    "text": "change log let's do this [Music]",
    "start": "117039",
    "end": "125688"
  },
  {
    "text": "hey friends I'm here with Dave Rosenthal C of senty so Dave I know lots of developers know about Sentry know about",
    "start": "125759",
    "end": "132599"
  },
  {
    "text": "the platform because hey we use Sentry and we love Sentry and I know tracing is one of the next big Frontiers for",
    "start": "132599",
    "end": "139040"
  },
  {
    "text": "sentury why add tracing to the platform why tracing and why now when we first",
    "start": "139040",
    "end": "144400"
  },
  {
    "text": "launched the ability to collect tracing data we were really emphasizing the",
    "start": "144400",
    "end": "149440"
  },
  {
    "text": "performance aspect of that the kind of application performance monitoring aspect you know because you have these things that are spans that measure how",
    "start": "149440",
    "end": "155440"
  },
  {
    "text": "long something takes and so the natural thing is to try to graph their durations and think about their durations and you",
    "start": "155440",
    "end": "160879"
  },
  {
    "text": "know warn somebody if the durations are getting too long but what we've realized is that the performance stuff ends up",
    "start": "160879",
    "end": "167440"
  },
  {
    "text": "being just a bunch of gauges to look at and it's not super actionable Sentry is",
    "start": "167440",
    "end": "172640"
  },
  {
    "text": "all about this notion of debuggability and actually making it easier to fix the problem not just sort of giving you more gauges a lot of what we're trying to do",
    "start": "172640",
    "end": "179360"
  },
  {
    "text": "now is focus a little bit less on the sort of just the performance monitoring side of things and turn tracing into a",
    "start": "179360",
    "end": "185319"
  },
  {
    "text": "tool that actually AIDS the debug ability of problems I love it okay so they mean it when they say code breaks",
    "start": "185319",
    "end": "191680"
  },
  {
    "text": "fix it faster with Sentry more than 100,000 growing teams use Sentry to find problems fast and you can too learn more",
    "start": "191680",
    "end": "199000"
  },
  {
    "text": "at sentry.io that's s n t r",
    "start": "199000",
    "end": "204519"
  },
  {
    "text": "y. and use our code change law get $100 off the team plan that's almost 4 months",
    "start": "204519",
    "end": "210680"
  },
  {
    "text": "free for you to try out Sentry once again",
    "start": "210680",
    "end": "215680"
  },
  {
    "text": "[Music]",
    "start": "218320",
    "end": "230360"
  },
  {
    "text": "sentry.io today I'm joined by Pablo Galindo and Lucas longa from",
    "start": "232239",
    "end": "238720"
  },
  {
    "text": "corpy a podcast all about python internals because these two work on",
    "start": "238720",
    "end": "244760"
  },
  {
    "text": "python internals welcome to the show guys thank you very much for having us happy to be here now your podcast is it",
    "start": "244760",
    "end": "251599"
  },
  {
    "text": "usually just the two of you talking to each other or do you have a third party ever ever every now and again we would",
    "start": "251599",
    "end": "257400"
  },
  {
    "text": "invite a guest but mostly it's just the two of us yeah when people are fed up of listening to us and then then we recent",
    "start": "257400",
    "end": "264280"
  },
  {
    "text": "went to now we've been asked to start a python podcast a few times as well as",
    "start": "264280",
    "end": "269759"
  },
  {
    "text": "was an Elixir podcast and a Russ podcast and we don't usually feel like we have anything to add to the conversation",
    "start": "269759",
    "end": "276360"
  },
  {
    "text": "except when it came to python I remember telling our friend Brett Canon I said you guys should have a podcast where",
    "start": "276360",
    "end": "281919"
  },
  {
    "text": "it's like the people who work on python talking about python not randos like I",
    "start": "281919",
    "end": "288080"
  },
  {
    "text": "would be or people on the you know it's a huge Community but there's no voice that it's like coming from the core team",
    "start": "288080",
    "end": "294320"
  },
  {
    "text": "and so I think it's pretty cool when did you guys start this and what was the big idea so um we started",
    "start": "294320",
    "end": "300560"
  },
  {
    "text": "one year ago um we were in the right now we are in the core developer spring uh at meta so this is a basically a meeting",
    "start": "300560",
    "end": "307800"
  },
  {
    "text": "that we do every single year when we try to bring all the cor developers together and you know the Sparks and conversation",
    "start": "307800",
    "end": "313160"
  },
  {
    "text": "in person because uh you know open source is basically based on a synchronous communication but from time to time it's very good to you know not",
    "start": "313160",
    "end": "319479"
  },
  {
    "text": "having to discuss and with like an entire day just to tell the other person I don't like your your proposal um so",
    "start": "319479",
    "end": "326759"
  },
  {
    "text": "yeah so we we um after that you know these meetings have a lot of discussions and they are super rich regarding that",
    "start": "326759",
    "end": "332440"
  },
  {
    "text": "like it's fantastic like is one of my favorite moments of the year and um so I reach to guish and I say hey uh it would",
    "start": "332440",
    "end": "338520"
  },
  {
    "text": "be actually very cool if because like what happens here like uh people don't really know the discussions they just",
    "start": "338520",
    "end": "343680"
  },
  {
    "text": "know the output of them and like there is many of these projects that that you know take years or like they only s",
    "start": "343680",
    "end": "349120"
  },
  {
    "text": "after a time and there are some of these projects that just die and they never happen and I I was telling like it would",
    "start": "349120",
    "end": "354160"
  },
  {
    "text": "be super cool if we have this this space when we can talk about like you know how how the sausage is made right and all",
    "start": "354160",
    "end": "360240"
  },
  {
    "text": "this this crazy ideas that we're having and how they kind of transform into it because like there is this I mean to",
    "start": "360240",
    "end": "365960"
  },
  {
    "text": "some extent is improving but there is this perception from people that core developers are these alien developers",
    "start": "365960",
    "end": "371759"
  },
  {
    "text": "that you know like uh I don't know they go into this room and and then python happens but it's just like we are just regular people right exactly so our idea",
    "start": "371759",
    "end": "379479"
  },
  {
    "text": "was first kind of the mystify with the the core development thing so it's not yes you know we're just regular people",
    "start": "379479",
    "end": "385680"
  },
  {
    "text": "right just doing the thing and the other is that kind of trying to inspire people to uh join this right so ideally we we",
    "start": "385680",
    "end": "391680"
  },
  {
    "text": "can talk about like not only the project that we're doing but also like how hard it is or how we struggle and and uh we",
    "start": "391680",
    "end": "398360"
  },
  {
    "text": "try to always have some inspirational notes on the episode so people can say hey maybe this is something that I want",
    "start": "398360",
    "end": "404479"
  },
  {
    "text": "to do and then and this is was gu idea U we also try to highlight uh contributions that people have done",
    "start": "404479",
    "end": "410840"
  },
  {
    "text": "because like at the end of the day you know people only know the big things you know okay the the new parer or the jet",
    "start": "410840",
    "end": "416759"
  },
  {
    "text": "or the garbage collector whatever it is but there is a lot of very cool contributions for core developers or or regular people that are",
    "start": "416759",
    "end": "423080"
  },
  {
    "text": "contributing to C python so we spend at the end of the episode some time trying to like you know go through the last you",
    "start": "423080",
    "end": "428680"
  },
  {
    "text": "know we we call this section what's going on in cpython and we we try to highlight like the different things that",
    "start": "428680",
    "end": "434919"
  },
  {
    "text": "people are doing so so people know about them and hopefully like if a name comes again and again like people say I know I",
    "start": "434919",
    "end": "440520"
  },
  {
    "text": "know that person that's cool so Lucas Pablo speaks very fast how do you keep",
    "start": "440520",
    "end": "445840"
  },
  {
    "text": "up with him experience it's just a matter of just doing this for uh for long enough uh we've known each other",
    "start": "445840",
    "end": "452440"
  },
  {
    "text": "for uh a few years before that so I was prepared for uh the Spanish 2x you know",
    "start": "452440",
    "end": "459800"
  },
  {
    "text": "speaking speed yeah built-in 2x right like um we we were joking you know about",
    "start": "459800",
    "end": "465400"
  },
  {
    "text": "this like many times because people who are listening to our podcast which for the most part is um python enthusiasts",
    "start": "465400",
    "end": "472800"
  },
  {
    "text": "but really the python core team itself you know so they're saying yes like this",
    "start": "472800",
    "end": "478080"
  },
  {
    "text": "is the one podcast that they can not listen to us at 2x um because Pao is speaking quickly I am not speaking so",
    "start": "478080",
    "end": "485120"
  },
  {
    "text": "fast so maybe you know with this development of AI and everything we should have some adaptive playback speed",
    "start": "485120",
    "end": "491840"
  },
  {
    "text": "where it recognizes who is talking and for me it would be 2x for Pablo would be like wo whoo wo no 075 actually I don't",
    "start": "491840",
    "end": "499400"
  },
  {
    "text": "think it's One X is enough funny yeah some sort of normalization where they just both go to the same speed that",
    "start": "499400",
    "end": "505360"
  },
  {
    "text": "would be a cool feature we um as an anecdote as small anecdote we um at Pon",
    "start": "505360",
    "end": "511120"
  },
  {
    "text": "this is this big conference that happens every year well there's several ones but the big one is in the US so um I I normally just normally keep like a talk",
    "start": "511120",
    "end": "518080"
  },
  {
    "text": "every year so uh the the especially Pon us there is this uh people that try to transcribe life so like people with",
    "start": "518080",
    "end": "524880"
  },
  {
    "text": "hearing problems like can read so it's really cool and this year I before you give the talk I apologize to the person",
    "start": "524880",
    "end": "530720"
  },
  {
    "text": "it's like I'm really sorry about what is going to happen but I I not be able to speak slower and she were like yeah yeah",
    "start": "530720",
    "end": "536720"
  },
  {
    "text": "no problem but like o she really trug with that but yes she keep up like she",
    "start": "536720",
    "end": "542000"
  },
  {
    "text": "was really good yeah the closed captioning at Pon is a magical thing it turns out that it does help people with",
    "start": "542000",
    "end": "549800"
  },
  {
    "text": "um you know hearing disabilities to participate in the conference but it's also helpful even for other participants",
    "start": "549800",
    "end": "557040"
  },
  {
    "text": "right so a just as subtitles are being turned on by most people watching now",
    "start": "557040",
    "end": "563000"
  },
  {
    "text": "like TV shows and other programs at home the clst captions happen to be helpful",
    "start": "563000",
    "end": "568399"
  },
  {
    "text": "for regular atten these as well so uh this is something that has become a staple of Pon us I'm very happy that uh",
    "start": "568399",
    "end": "576320"
  },
  {
    "text": "this is there definitely some people present more of a challenge to the persons actually doing the close",
    "start": "576320",
    "end": "582880"
  },
  {
    "text": "captioning I'm always amazed not just at how fast they they go but you know how much they can express the different you",
    "start": "582880",
    "end": "590560"
  },
  {
    "text": "know tlas and python specific terms that we're using you would think you know",
    "start": "590560",
    "end": "596120"
  },
  {
    "text": "okay like this is very industry specific and if you talk to dad or you know to some your friends that are not in Tech",
    "start": "596120",
    "end": "602880"
  },
  {
    "text": "some of the words verbs and so on that we're using like might be mystifying you don't even know how to spell this and",
    "start": "602880",
    "end": "609440"
  },
  {
    "text": "yet the people doing the close captioning are excellent at this uh you'll be surprised how like obscure",
    "start": "609440",
    "end": "616519"
  },
  {
    "text": "project names and so on they they are just perfectly able to spell just correctly and I I it always touches my",
    "start": "616519",
    "end": "624279"
  },
  {
    "text": "heart when I see my own name spelled correctly uh which also does happen they added me to their alphabet so like you",
    "start": "624279",
    "end": "630399"
  },
  {
    "text": "know I'm like ah this is awesome that is awesome the Personal Touch means so much",
    "start": "630399",
    "end": "635839"
  },
  {
    "text": "it does and it's worth uh it's worth going that extra mile in those circumstances well we're here today to",
    "start": "635839",
    "end": "641279"
  },
  {
    "text": "talk about python 3.13 hopefully I'll be able to keep up with you Pablo because not only do you",
    "start": "641279",
    "end": "647880"
  },
  {
    "text": "speak fast but you know I'm kind of a visitor to your guys's world so uh maybe keep them in check Lucas we're going to",
    "start": "647880",
    "end": "655160"
  },
  {
    "text": "specifically talk about the biggest and I guess I mean this is Monumental in fact",
    "start": "655160",
    "end": "660240"
  },
  {
    "text": "Our Community member who thought we should do an episode on this shout out to Christian klous or Claus says this is",
    "start": "660240",
    "end": "668200"
  },
  {
    "text": "kind of massive for python EA is this the biggest feature coming out in 3.13",
    "start": "668200",
    "end": "674720"
  },
  {
    "text": "which should probably be out there if you're listening to this we're shipping this October 2nd and slated to release",
    "start": "674720",
    "end": "680440"
  },
  {
    "text": "October 1st officially at least the RC is out there but you know software and ship dates we think it's probably out",
    "start": "680440",
    "end": "686240"
  },
  {
    "text": "there if not coming very very very soon the ability to disable or remove the",
    "start": "686240",
    "end": "692480"
  },
  {
    "text": "global interpreter lock or the Gill as it so lovingly referred to let's start",
    "start": "692480",
    "end": "698760"
  },
  {
    "text": "at base principles what is the Gill and then after that why would you want to",
    "start": "698760",
    "end": "703800"
  },
  {
    "text": "remove it right so the the Gil is basically a ginormous lock all around",
    "start": "703800",
    "end": "709040"
  },
  {
    "text": "python so when like python is really you know the language but it's really doesn't exist right like it's an",
    "start": "709040",
    "end": "715120"
  },
  {
    "text": "abstraction and really normally there is a second language behind in C python is C which which is um see python is the",
    "start": "715120",
    "end": "720639"
  },
  {
    "text": "the fall implementation of python that normally people use there there are others but then when the this program",
    "start": "720639",
    "end": "726160"
  },
  {
    "text": "that is the python interpreter is executing python code you know it can have multiple threats at the same time and all these like little objects that",
    "start": "726160",
    "end": "733399"
  },
  {
    "text": "python exposes um could be mutated at the same time which is a problem and python in particular see python as well",
    "start": "733399",
    "end": "739199"
  },
  {
    "text": "and most of the implementations is reference counted this means that to the side if an object is still alive or you",
    "start": "739199",
    "end": "744839"
  },
  {
    "text": "can The Interpreter can actually get rid of it we have this little number inside every object that tells how many",
    "start": "744839",
    "end": "750519"
  },
  {
    "text": "different structors or fields are using it right and when this number reaches zero we know that we can remove it right",
    "start": "750519",
    "end": "757279"
  },
  {
    "text": "but as any person who has done some multi- threading multi threading uh in computer science knows having a little",
    "start": "757279",
    "end": "763760"
  },
  {
    "text": "number being mutated by multiple threats at the same time is not bu so the solution is basically to add a g normous",
    "start": "763760",
    "end": "770920"
  },
  {
    "text": "lock All Around The Interpreter so because we don't know what the threats are doing we need to just basically lock",
    "start": "770920",
    "end": "776800"
  },
  {
    "text": "the entire thing so this means that only one threat at a time can be accessing python code and executing python code",
    "start": "776800",
    "end": "783760"
  },
  {
    "text": "which means that you you can still use threads because those threads can switch from one to the other which is what we",
    "start": "783760",
    "end": "789360"
  },
  {
    "text": "call concurrency like you don't need to wait until one thre finishes to start the other so they inter leave but",
    "start": "789360",
    "end": "795639"
  },
  {
    "text": "there's no parallelism really because like only one thread at a time can be executing python code which which is a",
    "start": "795639",
    "end": "801199"
  },
  {
    "text": "big problem in these days when we have you know machines with the 120 something",
    "start": "801199",
    "end": "806600"
  },
  {
    "text": "course if you have thread Reaper or or or servers right or even your phone right like your phone have plenty of",
    "start": "806600",
    "end": "813000"
  },
  {
    "text": "cores and right now you are running python on iOS which is now a thing by the way this is something python iOS is",
    "start": "813000",
    "end": "821000"
  },
  {
    "text": "a is a thing as well let's earmark that for a future part of this conversation so what you're saying is when running",
    "start": "821000",
    "end": "827040"
  },
  {
    "text": "python you can switch quickly between cores but you can't actually run the",
    "start": "827040",
    "end": "832880"
  },
  {
    "text": "same code on multiple cores at the exact same time so you're saying it's concurrent but it's not parallel yes",
    "start": "832880",
    "end": "838800"
  },
  {
    "text": "correct because of that lock one at a time and it can switch the at the speed of light but no true parallelism until",
    "start": "838800",
    "end": "846880"
  },
  {
    "text": "now right so um there were a few ways in which we worked around this obviously",
    "start": "846880",
    "end": "853560"
  },
  {
    "text": "huge design limitation so there are plenty of cases in which we're confident we can drop the global interpreter lock",
    "start": "853560",
    "end": "860839"
  },
  {
    "text": "for what is happening on a particular thread so if your particular thread is",
    "start": "860839",
    "end": "865880"
  },
  {
    "text": "doing some big nonp computation that is only on the sides of numbers that are not shared as python objects like you",
    "start": "865880",
    "end": "873079"
  },
  {
    "text": "can drop the global lock in the time that this computation happens so you can let other threads execute python in the",
    "start": "873079",
    "end": "880079"
  },
  {
    "text": "time if your thread is waiting on a blocking network connection it also does not need to hold the lock because on",
    "start": "880079",
    "end": "887079"
  },
  {
    "text": "that particular moment in time there is not going to be any python code executing so you can give that Gil right",
    "start": "887079",
    "end": "894160"
  },
  {
    "text": "to somebody else so there are special cases in which we were already sort of",
    "start": "894160",
    "end": "900160"
  },
  {
    "text": "parallel more than not but it is very implicit it depends on us carefully",
    "start": "900160",
    "end": "906399"
  },
  {
    "text": "finding all those special cases and enabling them and in the end it does not scale for regular user application so if",
    "start": "906399",
    "end": "913240"
  },
  {
    "text": "you just write python code that Loops over things and you know just execute",
    "start": "913240",
    "end": "918440"
  },
  {
    "text": "some string concatenations does like all these regular things that you expect from a Python program most of the time",
    "start": "918440",
    "end": "925000"
  },
  {
    "text": "you're not going to be seeing any parallelism there well and this works one important thing here is that is is",
    "start": "925000",
    "end": "931519"
  },
  {
    "text": "um technically Gil is more than just a lock it's a condition variable which is a very specific kind of synchronization",
    "start": "931519",
    "end": "937199"
  },
  {
    "text": "primitive it's a Boolean that tells you you have it or not and an Act loog and the thing is that you cannot you cannot",
    "start": "937199",
    "end": "943519"
  },
  {
    "text": "select which like when one thread says I don't need the Gil like someone else you know pick it up you cannot select which",
    "start": "943519",
    "end": "950199"
  },
  {
    "text": "one is going to do it like this is up to the OS like you're using Linux so the Linux canel decides who is the next one",
    "start": "950199",
    "end": "956040"
  },
  {
    "text": "and this can be not great because like the Linux May don't know what you're doing so you can have one thread for",
    "start": "956040",
    "end": "961639"
  },
  {
    "text": "instance that is super CPU hungry like it's just crunching numbers so that thread is like all the time want in this",
    "start": "961639",
    "end": "967880"
  },
  {
    "text": "gild right and then you have many threats that are doing these IO operations maybe they are waiting on a socket or something like that and but",
    "start": "967880",
    "end": "973880"
  },
  {
    "text": "because of how condition variables work and the schedular in Linux Works which you can TW a bit but like not from python normally that CPU like threat",
    "start": "973880",
    "end": "981600"
  },
  {
    "text": "will pick up that condition variable and the guild many more times so it's almost like a race right when the guild is",
    "start": "981600",
    "end": "986800"
  },
  {
    "text": "released it's like you know you have a gun in a in a race and then you you fire the gun to signal that the race starts",
    "start": "986800",
    "end": "993160"
  },
  {
    "text": "and then all the threats try to grab it at the same time and the first one that has it that's the one that wins but there is nothing preventing that threat",
    "start": "993160",
    "end": "999720"
  },
  {
    "text": "to keep it like getting it the next time and the next time so even if if you are used to it and you can still say well",
    "start": "999720",
    "end": "1006079"
  },
  {
    "text": "maybe I can work with that limitation it's very difficult to reason about it and to try to adapt it to your needs",
    "start": "1006079",
    "end": "1012759"
  },
  {
    "text": "because it's really up to theice who gets the G or not this is one of the primary reasons why python",
    "start": "1012759",
    "end": "1020000"
  },
  {
    "text": "reputation is being serviceable in terms of speed but for certain workloads certain things it's too slow right",
    "start": "1020000",
    "end": "1026640"
  },
  {
    "text": "because of the Gill this is one of the reasons why people will say h I might pick something else because of the Gill",
    "start": "1026640",
    "end": "1032760"
  },
  {
    "text": "fair or not fair yes well like it's it's a fact it depends yes it's a fact tell",
    "start": "1032760",
    "end": "1039520"
  },
  {
    "text": "me tell me why right so first of all the speed of python is mostly affected by the fact that it um does a tone of",
    "start": "1039520",
    "end": "1047240"
  },
  {
    "text": "indirection right like that the thing that costs the most in computer science save for bad algorithms is IND Direction",
    "start": "1047240",
    "end": "1053880"
  },
  {
    "text": "so every time where some language can just point at memory read a value and it's done it's going to be faster than a",
    "start": "1053880",
    "end": "1060080"
  },
  {
    "text": "language that well actually everything is dynamic so you point at a value but then that value has another value so you",
    "start": "1060080",
    "end": "1066400"
  },
  {
    "text": "have to go somewhere else in memory to read another value then decide what to do and read yet another value so every",
    "start": "1066400",
    "end": "1072919"
  },
  {
    "text": "time in in Python that you're accessing an attribute you're executing a ton of code compared to accessing a field in a",
    "start": "1072919",
    "end": "1079960"
  },
  {
    "text": "struct in C so that's going to be the main factor of it being slow but the way",
    "start": "1079960",
    "end": "1085240"
  },
  {
    "text": "where Gail is hampering us is scalability which means simply for things that you could paralyze you",
    "start": "1085240",
    "end": "1092440"
  },
  {
    "text": "cannot do that effectively so this is where the reputation of like well not really scalable comes in but ironically",
    "start": "1092440",
    "end": "1099240"
  },
  {
    "text": "the Gill also makes python faster than it would be without it the reason why is",
    "start": "1099240",
    "end": "1104840"
  },
  {
    "text": "because reference counting is a major reason for the the global interpreter",
    "start": "1104840",
    "end": "1109919"
  },
  {
    "text": "locks existence but it's not the only reason you need a lock in your interpreter there's going to be internal",
    "start": "1109919",
    "end": "1116559"
  },
  {
    "text": "data structures like dictionaries where if you insert another key that wasn't there before maybe there's going to be",
    "start": "1116559",
    "end": "1123000"
  },
  {
    "text": "some rehashing that happens right so suddenly the simple operation is going to take a little more time than usual so",
    "start": "1123000",
    "end": "1129919"
  },
  {
    "text": "there's going to be a time a split split second where the internal structure of",
    "start": "1129919",
    "end": "1135000"
  },
  {
    "text": "the dictionary is inconsistent right for example you would be able to see that it has more elements in terms of count than",
    "start": "1135000",
    "end": "1141880"
  },
  {
    "text": "you actually are able to access or you're going to be trying to access an element that is there it claims it's",
    "start": "1141880",
    "end": "1148480"
  },
  {
    "text": "there but you cannot get it yet because the dictionary is being mutated right so for all those things and there's plenty",
    "start": "1148480",
    "end": "1155760"
  },
  {
    "text": "of cases like that the global net lck is very convenient because we are already holding it because we care about the",
    "start": "1155760",
    "end": "1163039"
  },
  {
    "text": "reference counts be to be always correct so there's no other lock we need to to care about and this is this is actually",
    "start": "1163039",
    "end": "1170559"
  },
  {
    "text": "making matters cheaper because we only have this one and once you hold it you can just run and it's great and plenty",
    "start": "1170559",
    "end": "1178080"
  },
  {
    "text": "of authors of C extensions like uh npy and so on can also depend on the fact",
    "start": "1178080",
    "end": "1184320"
  },
  {
    "text": "that as soon as you have the global lock you have a lock that you can yourself depend on for your own synchronization",
    "start": "1184320",
    "end": "1191240"
  },
  {
    "text": "need so now without that you're going to have to have fine grained locking so for",
    "start": "1191240",
    "end": "1197080"
  },
  {
    "text": "for every of those use cases that require synchronization you're going to have to have a smaller lock and it turns",
    "start": "1197080",
    "end": "1203400"
  },
  {
    "text": "out that if you do this then you gain scalability but you um pay the price of",
    "start": "1203400",
    "end": "1210000"
  },
  {
    "text": "single-threaded performance since uh catching you know being able to acquire",
    "start": "1210000",
    "end": "1215120"
  },
  {
    "text": "multiple locks is necessarily slower than just doing it once right it also has other consequences apart from this",
    "start": "1215120",
    "end": "1222600"
  },
  {
    "text": "this particular aspect which is correctness right now if you have ever done like multi threaded in a in a",
    "start": "1222600",
    "end": "1228840"
  },
  {
    "text": "language which requires locks like say your C+ SP or something like that like the when when you don't have those locks",
    "start": "1228840",
    "end": "1235240"
  },
  {
    "text": "then you go into this thing that people call Andy Behavior right like you know unicorns can appear in your program and",
    "start": "1235240",
    "end": "1241840"
  },
  {
    "text": "things can happen in Python because it's cial like sure the results can be garbage but it's not going to crash",
    "start": "1241840",
    "end": "1247240"
  },
  {
    "text": "because like you know it's just one at a time and this especially happens as well on this uh C extensions or these native",
    "start": "1247240",
    "end": "1254000"
  },
  {
    "text": "extensions which can be anything like if you have you could you could think about like well you know if if I add one of",
    "start": "1254000",
    "end": "1259080"
  },
  {
    "text": "these logs per extension sure may have these problems that guash is mentioning but like you know doesn't sound too bad",
    "start": "1259080",
    "end": "1265000"
  },
  {
    "text": "but like one of the problems if you have many logs is that now those logs can interact between themselves so if one extension happen to call another for any",
    "start": "1265000",
    "end": "1272000"
  },
  {
    "text": "reason like there is call back schedule or there is actually direct interaction or something like that those locks Now",
    "start": "1272000",
    "end": "1278200"
  },
  {
    "text": "can do things like dead loging or live loging or like reentrancy uh if you don't have something prepared and you",
    "start": "1278200",
    "end": "1285480"
  },
  {
    "text": "know remember that these extensions are made by different people so like now you have backs that only happen across them",
    "start": "1285480",
    "end": "1291240"
  },
  {
    "text": "and that is a nare like this is just real nare right and dril is basically protecting this because there is one",
    "start": "1291240",
    "end": "1297679"
  },
  {
    "text": "single one so all of them share it um so it's very easy to reason about it compared to not having it hey friends",
    "start": "1297679",
    "end": "1305120"
  },
  {
    "text": "you know we're big fans of fly.io and I'm here with Kurt Mackey co-founder and CEO of fly Kur we've had",
    "start": "1305120",
    "end": "1313080"
  },
  {
    "text": "some conversations and I've heard you say that public clouds suck what is your personal lens in into public clouds",
    "start": "1313080",
    "end": "1319840"
  },
  {
    "text": "sucking and how does fly not suck all right so public clouds suck I actually",
    "start": "1319840",
    "end": "1325240"
  },
  {
    "text": "think most ways of Hosting stuff on the internet sucks and I have a lot of theories about why this is but almost",
    "start": "1325240",
    "end": "1331120"
  },
  {
    "text": "doesn't matter the reality is if like I've built a new app for like generating sandwich recipes because my family's",
    "start": "1331120",
    "end": "1337360"
  },
  {
    "text": "just into specific types of sandwiches that use Brown schwager as a component for example and then I want to like put",
    "start": "1337360",
    "end": "1342919"
  },
  {
    "text": "that somewhere you go to AWS and it's harder than just going getting like a",
    "start": "1342919",
    "end": "1348159"
  },
  {
    "text": "dedic at server from header it's like it's actually like more complicated to figure out how to deploy my dumb sandwich app on top of AWS because it's",
    "start": "1348159",
    "end": "1355360"
  },
  {
    "text": "not built for me as a developer to be productive with it's built for other people it's built for platform teams to",
    "start": "1355360",
    "end": "1361120"
  },
  {
    "text": "kind of build the infrastructure of their dreams and hopefully create a new ux that's useful for the developers that",
    "start": "1361120",
    "end": "1366200"
  },
  {
    "text": "they work with and again like I feel like every time I talk about this it's like I'm just too impatient I don't particularly want to go figure so many",
    "start": "1366200",
    "end": "1373440"
  },
  {
    "text": "things out purely to put my sandwich app in front of people and I don't particularly want to have to go talk to aat team once my sandwich app becomes a",
    "start": "1373440",
    "end": "1380400"
  },
  {
    "text": "huge startup and IPOs and I have to like do a deploy uh I kind of feel like all that stuff should just work for me",
    "start": "1380400",
    "end": "1386799"
  },
  {
    "text": "without me having to go ask permission or talk to anyone else and so this is a lot this informed a lot of how we've",
    "start": "1386799",
    "end": "1392480"
  },
  {
    "text": "built fly like we're still a public Cloud we still have a lot of very similar low-level Primitives as the",
    "start": "1392480",
    "end": "1398240"
  },
  {
    "text": "bigger guys but in general they're designed to be used directly by developers they're not built for a",
    "start": "1398240",
    "end": "1404480"
  },
  {
    "text": "platform team to kind of Cobble together they're designed to be useful quickly for developers one of the ways we've",
    "start": "1404480",
    "end": "1410840"
  },
  {
    "text": "thought about this is is if you can turn a very difficult problem into a 2-hour problem people will build much more",
    "start": "1410840",
    "end": "1416200"
  },
  {
    "text": "interesting types of apps and so this is why we've done things like made it easy to run an app multi- region most",
    "start": "1416200",
    "end": "1421600"
  },
  {
    "text": "companies don't run multi- region apps on public clouds because it's it's functionally impossible to do without a",
    "start": "1421600",
    "end": "1428000"
  },
  {
    "text": "huge amount of upfront effort uh it's why we've made things like the the virtual machine Primitives behind just a",
    "start": "1428000",
    "end": "1433799"
  },
  {
    "text": "simple API most people don't do like code sandboxing or their own virtualization because it's just not",
    "start": "1433799",
    "end": "1439240"
  },
  {
    "text": "really easy it's not there's just no path to that on top of the clouds so in general like I feel like and I it's not",
    "start": "1439240",
    "end": "1446200"
  },
  {
    "text": "really fair of me to say public clouds suck because they were built for a different time if you build one of these things starting in 2007 the world's very",
    "start": "1446200",
    "end": "1453159"
  },
  {
    "text": "different than it is right now and so a lot of what I'm saying I think is that public clouds are kind of old and",
    "start": "1453159",
    "end": "1458880"
  },
  {
    "text": "there's a new version of public clouds that we should all be building on top of that are definitely going to make me as a developer much happier than I was like",
    "start": "1458880",
    "end": "1466039"
  },
  {
    "text": "five or six years ago when I was kind of stuck in this quack so AWS was built for a different era a",
    "start": "1466039",
    "end": "1471640"
  },
  {
    "text": "different Cloud era and fly a public Cloud yes but a public Cloud built for",
    "start": "1471640",
    "end": "1476840"
  },
  {
    "text": "developers who ship that's a difference and we here at changel are developers who ship so you should trust us try out",
    "start": "1476840",
    "end": "1484039"
  },
  {
    "text": "fly fly.io over 3 million apps that includes us have launched on fly the lever the",
    "start": "1484039",
    "end": "1490880"
  },
  {
    "text": "global anycast low balancing the zero config private networking Hardware",
    "start": "1490880",
    "end": "1495919"
  },
  {
    "text": "isolation instant wire guard VPN connection with push button deployments scaling to",
    "start": "1495919",
    "end": "1501480"
  },
  {
    "text": "thousands of instances this is the cloud you want check it out",
    "start": "1501480",
    "end": "1507120"
  },
  {
    "text": "fly.io again fly.io and I'm also here with Kyle Carberry co-founder and CTO over at",
    "start": "1507120",
    "end": "1514360"
  },
  {
    "text": "coder.com and they pair well with fly.io coder is an open-source Cloud",
    "start": "1514360",
    "end": "1520760"
  },
  {
    "text": "development environment a CD you can host this in your cloud or on premise So",
    "start": "1520760",
    "end": "1526000"
  },
  {
    "text": "Cal walk me through the process a a CDE lets developers put their development environment in the cloud walk me through",
    "start": "1526000",
    "end": "1532399"
  },
  {
    "text": "the process they get an invite from their platform team to join their coder instance they got to sign in set up",
    "start": "1532399",
    "end": "1538840"
  },
  {
    "text": "their keys set up their code editor how's it work step one for them we try to make it remarkably easy for the dev",
    "start": "1538840",
    "end": "1545520"
  },
  {
    "text": "we never get any features ever for the developer they'll click that link that their platform team sends out they'll",
    "start": "1545520",
    "end": "1551919"
  },
  {
    "text": "sign in with oadc or Google and they'll really just press one button to create a",
    "start": "1551919",
    "end": "1556960"
  },
  {
    "text": "development environment that might provision like a kubernetes pod or an aw svm you know will show the user what's",
    "start": "1556960",
    "end": "1563640"
  },
  {
    "text": "provisioned but they don't really have to care from that point you'll see a couple buttons appear to open the editors that you're used to like vs code",
    "start": "1563640",
    "end": "1570559"
  },
  {
    "text": "desktop or you know vs code through the web or you can install our CLI through our CLI you really just log into coder",
    "start": "1570559",
    "end": "1576960"
  },
  {
    "text": "and we take care of everything for you when you SSH into a workspace you don't have to worry about Keys it really just",
    "start": "1576960",
    "end": "1582399"
  },
  {
    "text": "kind of like beautifully magically works in the background for you and connects you to your workspace we actually connect peerto peers as well you know if",
    "start": "1582399",
    "end": "1589279"
  },
  {
    "text": "the coder server goes down for a second because of an upgrade you don't have to worry about disconnects and we always get you the lowest latency possible one",
    "start": "1589279",
    "end": "1595320"
  },
  {
    "text": "of our core values is is will never be slower than SSH period full stop and so we connect you peer to-peer directly to",
    "start": "1595320",
    "end": "1600679"
  },
  {
    "text": "the workspace so it feels just as native as it possibly could very cool thank you Kyle well friends it might be time to",
    "start": "1600679",
    "end": "1607080"
  },
  {
    "text": "consider a cloud development environment a CDE and open source is awesome and coder is fully open source you can go to",
    "start": "1607080",
    "end": "1614880"
  },
  {
    "text": "coder.com right now install coder open source start a premium trial or get a",
    "start": "1614880",
    "end": "1620559"
  },
  {
    "text": "demo for me my first step I installed it on my proxmox box and played with it it",
    "start": "1620559",
    "end": "1625799"
  },
  {
    "text": "was so cool I loved it again coder.com coder.com",
    "start": "1625799",
    "end": "1632320"
  },
  {
    "text": "so if you have slower single-threaded performance you have",
    "start": "1634360",
    "end": "1641039"
  },
  {
    "text": "loss of features in terms of it being a or more complexity potentially right",
    "start": "1641039",
    "end": "1646080"
  },
  {
    "text": "because your loss of a single lock now you need find gring locks and all kinds of other things you can do which is",
    "start": "1646080",
    "end": "1651919"
  },
  {
    "text": "problematic and a huge lift by many developers over how long you guys been",
    "start": "1651919",
    "end": "1658440"
  },
  {
    "text": "working on this this has been many years in the making many years in the making yes okay add all those together worth it",
    "start": "1658440",
    "end": "1666679"
  },
  {
    "text": "well we we we see we will see we we can answer that we can answer that we don't know so we we in the stage of uh so",
    "start": "1666679",
    "end": "1673880"
  },
  {
    "text": "actually this is an important thing by the way which I don't think we have mentioned this uh in through3 indeed there is a Bild of python that will not",
    "start": "1673880",
    "end": "1680440"
  },
  {
    "text": "have the glow interpret lock but you don't get it by default you need to manually compile python I mean there is",
    "start": "1680440",
    "end": "1686279"
  },
  {
    "text": "people that are Distributing python with this so probably you don't need to manually do it like you can fetch it from your distribution probably some",
    "start": "1686279",
    "end": "1691720"
  },
  {
    "text": "build it yes exactly but but but it's not the normal one like if you install python 313 it has the guil like it's not",
    "start": "1691720",
    "end": "1697240"
  },
  {
    "text": "like a flag that you give when you run python it's a separate executable yes you need to it's actually call python",
    "start": "1697240",
    "end": "1702880"
  },
  {
    "text": "313 t t [Music] free whatever uh",
    "start": "1702880",
    "end": "1708919"
  },
  {
    "text": "just the way it is yeah exactly yeah you go so so you need to run that and with that build you",
    "start": "1708919",
    "end": "1715360"
  },
  {
    "text": "can actually select at run time only with that one you can select at run time you want the or not and this is very useful in case you want to try the",
    "start": "1715360",
    "end": "1722799"
  },
  {
    "text": "performance difference or because you want to like imagine for instance you are doing one of these libraries and you want to test your library works with and",
    "start": "1722799",
    "end": "1729159"
  },
  {
    "text": "without but you don't want to you know run your CI with two bills or whatever so so you can do it there are",
    "start": "1729159",
    "end": "1734480"
  },
  {
    "text": "consequences of this because for instance in Python over the years we have added a lot of new optimizations",
    "start": "1734480",
    "end": "1740720"
  },
  {
    "text": "like for instance one of the things that I think guas was missing on the recent python is low is that apart from this old New Direction and it's actually part",
    "start": "1740720",
    "end": "1747880"
  },
  {
    "text": "of the reason but uh is that it's Dynamic right like uh so this is very important like if you are adding two variables X and Y the interpret is going",
    "start": "1747880",
    "end": "1754880"
  },
  {
    "text": "to say what is X oh X is an integer okay let me fix the code for adding integers okay what is y ah it's an integer okay",
    "start": "1754880",
    "end": "1760480"
  },
  {
    "text": "let me fix the code okay and then the next iteration of the loop is going to say the same thing what is X so like it's very annoying compared to just like",
    "start": "1760480",
    "end": "1766720"
  },
  {
    "text": "you know here's a bunch of B and I'm going to add this to this bunch of bites because I know what they are right so uh",
    "start": "1766720",
    "end": "1772480"
  },
  {
    "text": "in this particular case precisely to avoid this this dynamism we have added a lot of optimizations that try to find",
    "start": "1772480",
    "end": "1778919"
  },
  {
    "text": "this pattern so they say okay you're you're adding these two variables together but you know the last 3,000",
    "start": "1778919",
    "end": "1784000"
  },
  {
    "text": "times I have seen this addition there were integers so you know it's kind of a good chance that there are integers the",
    "start": "1784000",
    "end": "1789159"
  },
  {
    "text": "next time so I'm going to create this like super performance code that is going to just reach into the into the internals of the integer object in",
    "start": "1789159",
    "end": "1795600"
  },
  {
    "text": "Python is going to grab the real integer and it's going to add it at CS speed it's like you know it's going to create a result like without asking all these",
    "start": "1795600",
    "end": "1801679"
  },
  {
    "text": "stupid questions and then he going to box it again into a python object and it's much faster you know you can still",
    "start": "1801679",
    "end": "1807080"
  },
  {
    "text": "have a float suddenly and it will de optimize and what not but like that is good problem all those optimizations",
    "start": "1807080",
    "end": "1812600"
  },
  {
    "text": "don't work without the Gill because because they're not thread safe so the the if you use the single threaded",
    "start": "1812600",
    "end": "1819000"
  },
  {
    "text": "version of the or the free threaded version which is a bit of a mouthful so you use Python 33t but you don't uh you",
    "start": "1819000",
    "end": "1826039"
  },
  {
    "text": "don't have the Gil activated you also don't the optimizations activated because we don't know if they're safe or",
    "start": "1826039",
    "end": "1831159"
  },
  {
    "text": "not so so you know what what does it mean it means that the free thread version is lower in single threaded so",
    "start": "1831159",
    "end": "1838440"
  },
  {
    "text": "so that you only run one thread and you're using the python 313t version is lower because they don't have those",
    "start": "1838440",
    "end": "1844720"
  },
  {
    "text": "optimizations activated slower for now or slower for good right for now great question so let's maybe take a step back",
    "start": "1844720",
    "end": "1851360"
  },
  {
    "text": "and explain the kind of strategy that we took with this particular project which is a huge undertaking but at the same",
    "start": "1851360",
    "end": "1858679"
  },
  {
    "text": "time we have a release Cadence that releases pythons every year predictively",
    "start": "1858679",
    "end": "1864159"
  },
  {
    "text": "in October you're going to get a new version of python so there's no way you can shove a big transition like this",
    "start": "1864159",
    "end": "1870639"
  },
  {
    "text": "within 12 months so what we're doing instead essentially what you're getting is a state of the project as we are in",
    "start": "1870639",
    "end": "1878360"
  },
  {
    "text": "right now so there are things that we still need to do that are still not done",
    "start": "1878360",
    "end": "1883519"
  },
  {
    "text": "most importantly this um split for the main interpreter still having the global",
    "start": "1883519",
    "end": "1888919"
  },
  {
    "text": "interpreter lock and so on and an experimental one that you have to build yourself and then you can run without",
    "start": "1888919",
    "end": "1894840"
  },
  {
    "text": "the global interpret lock that is deliberate because with all those costs that we described um we really need to",
    "start": "1894840",
    "end": "1902320"
  },
  {
    "text": "reach out to the community saying like look this is now not an idea you can actually grab this Python and check",
    "start": "1902320",
    "end": "1909320"
  },
  {
    "text": "whether this helps you is it better is it worthwhile the scalability for this",
    "start": "1909320",
    "end": "1914960"
  },
  {
    "text": "extra complexity within the implementation and maybe this cognitive complexity that is going",
    "start": "1914960",
    "end": "1920919"
  },
  {
    "text": "to be sort of passed on to the user is that worth it so the community will have to now step in and um try out this new",
    "start": "1920919",
    "end": "1928799"
  },
  {
    "text": "Python and see okay this is slower than the non-ed version but that's um hopefully temporary but the question to",
    "start": "1928799",
    "end": "1935360"
  },
  {
    "text": "answer is does the scalability that this enables help right so we really need",
    "start": "1935360",
    "end": "1941159"
  },
  {
    "text": "them to to you know give us two thumbs up like okay keep actually working on",
    "start": "1941159",
    "end": "1946200"
  },
  {
    "text": "this since this specialization that um Pablo described",
    "start": "1946200",
    "end": "1952159"
  },
  {
    "text": "and the jit compilation that you know follows um from that and so on and so on",
    "start": "1952159",
    "end": "1958279"
  },
  {
    "text": "are obviously features that we really want to have including in the free threaded version and there are ways to",
    "start": "1958279",
    "end": "1965679"
  },
  {
    "text": "go around it but they are very complex it is in fact like on the bleeding edge of computer science as we know it there",
    "start": "1965679",
    "end": "1972720"
  },
  {
    "text": "are plenty of known strategies for improving uh performance of of",
    "start": "1972720",
    "end": "1978360"
  },
  {
    "text": "interpreted languages that are single threaded for free threaded interpreted",
    "start": "1978360",
    "end": "1983519"
  },
  {
    "text": "languages this is really where the science sort of is still uh unclear",
    "start": "1983519",
    "end": "1989360"
  },
  {
    "text": "right because JavaScript there has been so much investment in that like making that fast with V8 right like in Chrome",
    "start": "1989360",
    "end": "1996000"
  },
  {
    "text": "and so on and so on well that is single threaded like for the intent and purposes of our understanding of the um",
    "start": "1996000",
    "end": "2003480"
  },
  {
    "text": "interpreter with a free- threaded python how to make that fast is more of a",
    "start": "2003480",
    "end": "2009120"
  },
  {
    "text": "challenge like literally members of our team are going to be the people writing papers about this later so this is going",
    "start": "2009120",
    "end": "2016120"
  },
  {
    "text": "to take time longer than one release longer than two releases but at the same time we want to release what we already",
    "start": "2016120",
    "end": "2022559"
  },
  {
    "text": "have so that it's no longer just a pipe dream it's no longer just a plan or idea",
    "start": "2022559",
    "end": "2028200"
  },
  {
    "text": "users can actually experiment with this and tell us okay this is actually awesome this enables a use case we",
    "start": "2028200",
    "end": "2034279"
  },
  {
    "text": "couldn't even try before because that's our our chicken and EG problem before we actually enable this we don't",
    "start": "2034279",
    "end": "2040519"
  },
  {
    "text": "see use cases uh that are now impossible so we cannot tell whether there's an",
    "start": "2040519",
    "end": "2045880"
  },
  {
    "text": "untapped uh you know um area of python usage that would be now enabled with uh",
    "start": "2045880",
    "end": "2053480"
  },
  {
    "text": "uh free threading so this is what we're doing with 313 this is essentially this current state of the project now you can",
    "start": "2053480",
    "end": "2060638"
  },
  {
    "text": "experiment with it you can see whether your web framework is going to be faster now whether now you're going to be able",
    "start": "2060639",
    "end": "2066240"
  },
  {
    "text": "to process uh data in parallel and so on and so on this is essentially you know",
    "start": "2066240",
    "end": "2071960"
  },
  {
    "text": "one step of a longer project right and it's out there in release candidate it's",
    "start": "2071960",
    "end": "2077000"
  },
  {
    "text": "probably out there as we speak at least in the official 3.13 experimental as you guys pointed out are there early",
    "start": "2077000",
    "end": "2084158"
  },
  {
    "text": "indicators are there people who have been just pining for this and they've already tried it in the RC and are",
    "start": "2084159",
    "end": "2089398"
  },
  {
    "text": "saying wow we're seeing this or or no so actually that's a very good point so one",
    "start": "2089399",
    "end": "2095440"
  },
  {
    "text": "of the things that actually surprised me a lot because like we did a new one of the announ here was how the community",
    "start": "2095440",
    "end": "2101599"
  },
  {
    "text": "was going to adopt this the reason being that is just not that python needs to be multi is that now if you compile uh C",
    "start": "2101599",
    "end": "2108560"
  },
  {
    "text": "extensions which are really really popular in Python right that's one of the reasons still people so many people",
    "start": "2108560",
    "end": "2113880"
  },
  {
    "text": "use Python the language because you know all the machine learning doesn't happen in pure python it happens on compile",
    "start": "2113880",
    "end": "2119200"
  },
  {
    "text": "code and coola and gpus but like python is the driver or the glue so so all that",
    "start": "2119200",
    "end": "2124760"
  },
  {
    "text": "code needs to be changed or adapted at least because like you know now you don't have that lock protecting you and",
    "start": "2124760",
    "end": "2130960"
  },
  {
    "text": "like who knows what happens now right so you need to which is really challenging because right right now you need to go",
    "start": "2130960",
    "end": "2136119"
  },
  {
    "text": "through the entire cold base like the huge thing and sanitize uh the cold base",
    "start": "2136119",
    "end": "2141400"
  },
  {
    "text": "through this particular problem which and there's not a manual for that if you think about it like so you need to",
    "start": "2141400",
    "end": "2146440"
  },
  {
    "text": "reason about the entire thing and we were a bit scared about like how people will approach this because or or or like",
    "start": "2146440",
    "end": "2153400"
  },
  {
    "text": "what will that happen in the sense that you know if you don't do this or you don't this correctly is is going to crash all the time or it's going to",
    "start": "2153400",
    "end": "2159440"
  },
  {
    "text": "crash just once every blue moon or whatever right so we don't know so one of the things that we have seen and is really impressive is that the community",
    "start": "2159440",
    "end": "2165599"
  },
  {
    "text": "has jumped at this like incredible like like people are building like uh two versions of every of these extensions",
    "start": "2165599",
    "end": "2172319"
  },
  {
    "text": "one for the normal build one for the free throw the bill which is already huge right this doubl your CI time doubl",
    "start": "2172319",
    "end": "2178040"
  },
  {
    "text": "your restorage for for the um extensions uh so it's a lot of work",
    "start": "2178040",
    "end": "2183760"
  },
  {
    "text": "actually and there's a lot of people that are so excited to jump to these extensions and they Tred to fix it and Reon and like TR to try this these",
    "start": "2183760",
    "end": "2190520"
  },
  {
    "text": "little locks all around um so so all those people have been trying it and one of the things I have been super super",
    "start": "2190520",
    "end": "2196839"
  },
  {
    "text": "surprised here is that once you add like those extensions and you have like a final application like I don't know a",
    "start": "2196839",
    "end": "2203200"
  },
  {
    "text": "machine learning whatever it is right or like an llm or whatever you're thinking that uses a lot of these things right",
    "start": "2203200",
    "end": "2209560"
  },
  {
    "text": "it's just not one like like five six seven really complex one plus the interpreters plus maybe a web server",
    "start": "2209560",
    "end": "2215400"
  },
  {
    "text": "something like that and then you run it through the free thread verion it just works I mean again who knows like maybe",
    "start": "2215400",
    "end": "2220640"
  },
  {
    "text": "maybe every Saturday just you know like you need your entire s team looking at it but like but right now like it's not",
    "start": "2220640",
    "end": "2226720"
  },
  {
    "text": "Mega crashing because what we thought is that this was going to immediately crash like when you add enough complexity to",
    "start": "2226720",
    "end": "2233720"
  },
  {
    "text": "this because it's just a statistic thing right like like the chances that there is some bad interaction when you put out",
    "start": "2233720",
    "end": "2239440"
  },
  {
    "text": "of threats and and the amount of C that this he just is inevitable right and it's still you know we from time to time",
    "start": "2239440",
    "end": "2245280"
  },
  {
    "text": "we find very funky inter when like you know you call a method and something sometimes like another method is called",
    "start": "2245280",
    "end": "2251680"
  },
  {
    "text": "because like there was something like a memory reordering problem which is a very technical like deep thing right but",
    "start": "2251680",
    "end": "2256839"
  },
  {
    "text": "like like and the bag in that particular thing is just hell but like that is very rare and obviously we fix it immediately",
    "start": "2256839",
    "end": "2262839"
  },
  {
    "text": "and we are really surprising about first how many people have jumped at this and they're super excited and they want all of the extensions and working and second",
    "start": "2262839",
    "end": "2270200"
  },
  {
    "text": "how quote unquote a stable disase like as meaning that how little bags we have",
    "start": "2270200",
    "end": "2275440"
  },
  {
    "text": "seen in the while like we expected many many many more right and we are seeing very little so so right now it's super",
    "start": "2275440",
    "end": "2281440"
  },
  {
    "text": "super promising yeah like what what does help is that we do have the people behind it like some girls who actually",
    "start": "2281440",
    "end": "2287960"
  },
  {
    "text": "did the Prototype of 39 and then 312 now who is working on making this for 313",
    "start": "2287960",
    "end": "2294480"
  },
  {
    "text": "and forwards uh is being helped by other Engineers who are like really into this",
    "start": "2294480",
    "end": "2299520"
  },
  {
    "text": "and are able to find um threat safety issues and data races and so on uh we",
    "start": "2299520",
    "end": "2305839"
  },
  {
    "text": "were able to set up threats on ier which is uh very complex to set up in an",
    "start": "2305839",
    "end": "2312160"
  },
  {
    "text": "interpreter environment like python turns out it does help us with finding those issues some of them are pretty H",
    "start": "2312160",
    "end": "2319200"
  },
  {
    "text": "uh funny like uh figuring out that for this entire time the thread handle in",
    "start": "2319200",
    "end": "2325280"
  },
  {
    "text": "Python was not thread safe itself or the threading lock was not thread safe itself so like once you actually like",
    "start": "2325280",
    "end": "2331960"
  },
  {
    "text": "did the operations of locking yes those were uh those were threat safe but the and but the python object that you used",
    "start": "2331960",
    "end": "2338800"
  },
  {
    "text": "was not because it didn't have to be and now like all of those things have to be actually like fixed so they are probably",
    "start": "2338800",
    "end": "2345000"
  },
  {
    "text": "formally correct now um so yeah like there there's been um a lot of work and a lot of work is uh still to be done but",
    "start": "2345000",
    "end": "2352920"
  },
  {
    "text": "we are you know kind of our hearts are warmed by how um little you know",
    "start": "2352920",
    "end": "2358040"
  },
  {
    "text": "terrible and unsolvable issues we've seen so far some of them are like you",
    "start": "2358040",
    "end": "2363200"
  },
  {
    "text": "know uh complex to debug and complex to diagnose but we've been successful in",
    "start": "2363200",
    "end": "2369079"
  },
  {
    "text": "you know improving the situation so far as we go so if for your average programmer out there with their average",
    "start": "2369079",
    "end": "2375880"
  },
  {
    "text": "python app whether it be a web app or a desktop app or whatever should they be",
    "start": "2375880",
    "end": "2381040"
  },
  {
    "text": "hopping on this experimental and giving it a try or is it a thing where it's like if you don't know that your code is thread safe it's probably not or is it",
    "start": "2381040",
    "end": "2388280"
  },
  {
    "text": "the other way around like what's the water feel like is it warm is it are there alligators in there well it",
    "start": "2388280",
    "end": "2394640"
  },
  {
    "text": "depends right like if they if they are paid to make sure that the thing is stable the recommendation is not like",
    "start": "2394640",
    "end": "2400880"
  },
  {
    "text": "because like I mean try it out sure uh you can get very excited by the way like one of the things that we have seen a",
    "start": "2400880",
    "end": "2406599"
  },
  {
    "text": "lot of my me myself right like for instance the company I work Bloomberg is that we have tried like to see what will",
    "start": "2406599",
    "end": "2412520"
  },
  {
    "text": "happen like you know even if it crosses from one every every three months like whatever it is but just just to see a",
    "start": "2412520",
    "end": "2417560"
  },
  {
    "text": "sense of like what is the Improvement here because like if then down the line you're going to justify any effort on",
    "start": "2417560",
    "end": "2422599"
  },
  {
    "text": "your side to you know adapt your thing to the free thread version it's very good that you know what you're going to",
    "start": "2422599",
    "end": "2428079"
  },
  {
    "text": "gain so so that for sure trying really we really want people to try and tell us what they see and like what doesn't work",
    "start": "2428079",
    "end": "2434400"
  },
  {
    "text": "is this a production ready workload absolutely not because not only because uh not not because we know it's going to",
    "start": "2434400",
    "end": "2440359"
  },
  {
    "text": "crash or anything but because uh we we don't know the the real stat of the thing right like we we take um you know",
    "start": "2440359",
    "end": "2446599"
  },
  {
    "text": "stability very very seriously in the core team um so we are not comfortable right now that's that's what the thing",
    "start": "2446599",
    "end": "2452400"
  },
  {
    "text": "is called experimental because we are not comfortable right now telling like recommending people you know like",
    "start": "2452400",
    "end": "2457720"
  },
  {
    "text": "especially when when you don't not only have The Interpreter but all these other things right like and and you know still",
    "start": "2457720",
    "end": "2463000"
  },
  {
    "text": "we need to figure out like good API for those extensions to you know hook into interpreter and things like that that is",
    "start": "2463000",
    "end": "2469200"
  },
  {
    "text": "not there right now so so the chances that that you know we can look at these things and say yeah this can in",
    "start": "2469200",
    "end": "2475079"
  },
  {
    "text": "production no problem is almost zero right now but as we release python 314 and 15 we will move this experimental",
    "start": "2475079",
    "end": "2483359"
  },
  {
    "text": "into supported which means that you can run it in production but it still will be too versions and eventually uh when",
    "start": "2483359",
    "end": "2489359"
  },
  {
    "text": "we gain enough confidence that you know this is the future we all want it it will be only one python which will be",
    "start": "2489359",
    "end": "2495560"
  },
  {
    "text": "you know python without uh the freeth version but until we call it stable and",
    "start": "2495560",
    "end": "2501640"
  },
  {
    "text": "uh you know supported that's the keyword supported I wouldn't recommend people to actually use it in production",
    "start": "2501640",
    "end": "2507079"
  },
  {
    "text": "environments yeah production environments however I would be a little more optimistic about this uh saying",
    "start": "2507079",
    "end": "2513480"
  },
  {
    "text": "that if you are an end user probably the kind of the amusement park is still",
    "start": "2513480",
    "end": "2519280"
  },
  {
    "text": "being built for you so like that this is this is not like something that is ready for end consumption unless you are",
    "start": "2519280",
    "end": "2525720"
  },
  {
    "text": "really just trying to just see how pure python Works without all the libraries that you depend on however if you are a",
    "start": "2525720",
    "end": "2533560"
  },
  {
    "text": "maintainer of a library that a lot of people depend on you might be interested",
    "start": "2533560",
    "end": "2538680"
  },
  {
    "text": "in checking it right now right like so we already see plenty of interest from",
    "start": "2538680",
    "end": "2544119"
  },
  {
    "text": "uh the data science libraries in web framework and so on and so on and that's exactly the right moment for them to",
    "start": "2544119",
    "end": "2551960"
  },
  {
    "text": "identify whether there's any blocking issues or whether the gains are not",
    "start": "2551960",
    "end": "2557040"
  },
  {
    "text": "enough for uh for us to justify the change or maybe the opposite or maybe they're amazed at how how better things",
    "start": "2557040",
    "end": "2563200"
  },
  {
    "text": "are right now like funnily enough even things that were not ever designed with",
    "start": "2563200",
    "end": "2568400"
  },
  {
    "text": "free threading in mind like ASN Kyo like you you run the test Suite of as Kyo and",
    "start": "2568400",
    "end": "2573839"
  },
  {
    "text": "it's just faster on uh free threading because it just can magically utilize",
    "start": "2573839",
    "end": "2579839"
  },
  {
    "text": "the fact that it is now truly parallel so there is promise there definitely we",
    "start": "2579839",
    "end": "2585000"
  },
  {
    "text": "expect that you know once the library authors is actually you know go through some of those Hoops that are required",
    "start": "2585000",
    "end": "2591640"
  },
  {
    "text": "for their things to be supported by the free threaded version we're going to see uptake on more libraries and then more",
    "start": "2591640",
    "end": "2598520"
  },
  {
    "text": "users and so on so now is the time for the library maintainers to check it out but for end users it is a little soon",
    "start": "2598520",
    "end": "2605680"
  },
  {
    "text": "that makes a lot of sense so somebody should start a list of libraries which have taken that initiative there is a",
    "start": "2605680",
    "end": "2612359"
  },
  {
    "text": "list like that right now there is a website I forget the name right now like we might add this to the metadata of",
    "start": "2612359",
    "end": "2618640"
  },
  {
    "text": "this episode so that you can check this out uh yeah just as in the python 223 transition we had a list like this there",
    "start": "2618640",
    "end": "2625960"
  },
  {
    "text": "is a list it is very fresh so I forget the the the the website name right now um but it's there is there cool very",
    "start": "2625960",
    "end": "2634280"
  },
  {
    "text": "cool well it's definitely exciting times I mean excited and I don't use python on the regular but I think that's early",
    "start": "2634280",
    "end": "2641960"
  },
  {
    "text": "indicators of something that's potentially a huge success so congrats to you guys and the whole team for the",
    "start": "2641960",
    "end": "2647520"
  },
  {
    "text": "effort at least to make it no longer theoretical and make it an actual piece of software bleeding edge piece of",
    "start": "2647520",
    "end": "2654160"
  },
  {
    "text": "software that's going to produce even some papers should we move on to the jit Lucas you mentioned the jit is another",
    "start": "2654160",
    "end": "2660440"
  },
  {
    "text": "feature 3.13 or there is there more to say about the Gil I'm assuming these things will probably interact as topics",
    "start": "2660440",
    "end": "2666160"
  },
  {
    "text": "right so the J is still like uh one of those other topics that I remember being",
    "start": "2666160",
    "end": "2672920"
  },
  {
    "text": "uh this big you know pipe dream of C python for as long as I can remember",
    "start": "2672920",
    "end": "2678720"
  },
  {
    "text": "right we grew a few attempts to have a jet in a Forks of python or entirely new",
    "start": "2678720",
    "end": "2684599"
  },
  {
    "text": "python interpreters most of those efforts failed there's one hold out that",
    "start": "2684599",
    "end": "2689839"
  },
  {
    "text": "is actually doing very well that's piie and that is actually jitted which proves",
    "start": "2689839",
    "end": "2695040"
  },
  {
    "text": "that this language can success uh use this I know performance strategy",
    "start": "2695040",
    "end": "2700920"
  },
  {
    "text": "for uh good results as a clarification also for the people that don't know byy",
    "start": "2700920",
    "end": "2706079"
  },
  {
    "text": "is not AIT for cpython it's an entire different interpreter um so it's it's",
    "start": "2706079",
    "end": "2711440"
  },
  {
    "text": "like the same language but it's it's just a different interpreter written actually in Python which is J then but",
    "start": "2711440",
    "end": "2717359"
  },
  {
    "text": "it's a it's a separate thing yes it's a it is an entirely a separate technological stack it is attempting to",
    "start": "2717359",
    "end": "2724359"
  },
  {
    "text": "be bug to buug compatible with cpython you know people adopting it have seen",
    "start": "2724359",
    "end": "2730200"
  },
  {
    "text": "you know your mileage may vary sort of you know results where uh it might be",
    "start": "2730200",
    "end": "2735240"
  },
  {
    "text": "really a drop in replacement in some cases it might be more tricky to actually adopt it um otherwise plus the",
    "start": "2735240",
    "end": "2742040"
  },
  {
    "text": "approach of jitting they're using is uh uh has some characteristics with memory usage being larger and so on so depends",
    "start": "2742040",
    "end": "2749359"
  },
  {
    "text": "on your use case but obviously the most popular version of python is cpython is the version that we are working on so",
    "start": "2749359",
    "end": "2756559"
  },
  {
    "text": "this is an idea that just comes back and comes back and comes back like when will python have a just in time compiler so",
    "start": "2756559",
    "end": "2764480"
  },
  {
    "text": "to like a large approximation if you squint really hard this specialization",
    "start": "2764480",
    "end": "2769920"
  },
  {
    "text": "that Pablo already mentioned is sort of slowly becoming a form of what the jits",
    "start": "2769920",
    "end": "2775440"
  },
  {
    "text": "are doing which is to remove all this IND Direction but the last step that they did not take so far those",
    "start": "2775440",
    "end": "2782119"
  },
  {
    "text": "optimizations is to actually replace running this C code with this C code uh",
    "start": "2782119",
    "end": "2787319"
  },
  {
    "text": "with an actual compilation to machine code as we go dynamically which is what",
    "start": "2787319",
    "end": "2792920"
  },
  {
    "text": "the jit is doing and brand Booker one of uh our core team members found out this",
    "start": "2792920",
    "end": "2799119"
  },
  {
    "text": "paper about how you can automatically generate a jit for the Lua interpreter",
    "start": "2799119",
    "end": "2806079"
  },
  {
    "text": "and how it is uh slower than a handwritten in jit but not by that much",
    "start": "2806079",
    "end": "2812319"
  },
  {
    "text": "as you would expect and it is much more maintainable and using this approach",
    "start": "2812319",
    "end": "2817520"
  },
  {
    "text": "with this additional Machinery that is needed for the just time compiler that",
    "start": "2817520",
    "end": "2822920"
  },
  {
    "text": "you know tries to compile during our build time like you know the simple U",
    "start": "2822920",
    "end": "2828000"
  },
  {
    "text": "the simple op codes that we are later glued together to this um optimize",
    "start": "2828000",
    "end": "2833720"
  },
  {
    "text": "machine code and so on and to discover whether that Trace that we're running is still correct or maybe we need to throw",
    "start": "2833720",
    "end": "2840400"
  },
  {
    "text": "it away because we thought this thing that we're running is like adding to integers right but now we're seeing Oh",
    "start": "2840400",
    "end": "2846920"
  },
  {
    "text": "there's a float that we did not expect so we need to throw out this optimized code and actually go back to The Interpreter again so all this",
    "start": "2846920",
    "end": "2853880"
  },
  {
    "text": "infrastructure is already in 313 and so far we can proudly say that",
    "start": "2853880",
    "end": "2860079"
  },
  {
    "text": "with all this added python is not slower right 0% faster yes it is 0% faster",
    "start": "2860079",
    "end": "2866839"
  },
  {
    "text": "because again with the relase Cadence that we're having 12 months of work is a",
    "start": "2866839",
    "end": "2872720"
  },
  {
    "text": "lot right obviously but it is not enough to like just say we started from zero",
    "start": "2872720",
    "end": "2877800"
  },
  {
    "text": "jit and ended up with a mature jit like V8 we are done this it is just simply",
    "start": "2877800",
    "end": "2882920"
  },
  {
    "text": "impossible especially that our team is much smaller than the V8 teams much",
    "start": "2882920",
    "end": "2888400"
  },
  {
    "text": "smaller than the Java hotspot team and so on and so on so yeah so so far there is another experimental feature in",
    "start": "2888400",
    "end": "2895079"
  },
  {
    "text": "Python 313 which is the jet you have to compile with that and you have to enable",
    "start": "2895079",
    "end": "2900400"
  },
  {
    "text": "it uh when you're running python so it does not have most of the optimizations",
    "start": "2900400",
    "end": "2906400"
  },
  {
    "text": "that you expect from the Justin Time compiler because that entire technology",
    "start": "2906400",
    "end": "2912079"
  },
  {
    "text": "of Justin Time compilation is essentially a framework on top of which you can now make optimizations that make",
    "start": "2912079",
    "end": "2919040"
  },
  {
    "text": "things faster for example if within the trace that you're building you know",
    "start": "2919040",
    "end": "2924160"
  },
  {
    "text": "connecting all those machine code blocks that are now faster and removing in Direction you have multiple checks",
    "start": "2924160",
    "end": "2931319"
  },
  {
    "text": "whether something is none or something is an integer you can move that check of",
    "start": "2931319",
    "end": "2937000"
  },
  {
    "text": "that same piece of data to the front of the trace and just do that check once and you don't have to repeat it in",
    "start": "2937000",
    "end": "2943319"
  },
  {
    "text": "different parts of the code and so on and to make sure that the traces are as long as possible those are uh different",
    "start": "2943319",
    "end": "2950440"
  },
  {
    "text": "you know kind of levels of optimization you want to jit relatively quickly so",
    "start": "2950440",
    "end": "2955680"
  },
  {
    "text": "that people can see the uplift uh very quickly but you don't want to jit every code that is being executed because that",
    "start": "2955680",
    "end": "2961799"
  },
  {
    "text": "would make the memory usage crazy so there's you know things that you need to dial in there and Implement so it is",
    "start": "2961799",
    "end": "2968760"
  },
  {
    "text": "very much an in progress project it looks very promising but so far python 313 is uh you know snapshot of the",
    "start": "2968760",
    "end": "2977160"
  },
  {
    "text": "current stage of that effort as well Pablo anything to add well uh one of the",
    "start": "2977160",
    "end": "2982920"
  },
  {
    "text": "things that is very exciting with with the Jet right now is that um the the the approach itself is quite cool like for",
    "start": "2982920",
    "end": "2988960"
  },
  {
    "text": "instance um if you're making a j for dynamic language one of the biggest challenges is not only you know adding",
    "start": "2988960",
    "end": "2994280"
  },
  {
    "text": "the infrastructure itself for a particular CPU but like architecture is that you need to do it for all of them",
    "start": "2994280",
    "end": "2999680"
  },
  {
    "text": "and for every single OS because you know at the end you're writing machine code and machine code depends on like you",
    "start": "2999680",
    "end": "3004920"
  },
  {
    "text": "know your CPU architecture your platform you know so you need one so so the jit is not the jit or as we like to know",
    "start": "3004920",
    "end": "3011520"
  },
  {
    "text": "call it legit but uh you know you need one for python sorry one for Windows one for Mac",
    "start": "3011520",
    "end": "3017760"
  },
  {
    "text": "OS one for Linux but also one for MD 64 one for AR 64 one for rb7 so you can you",
    "start": "3017760",
    "end": "3025240"
  },
  {
    "text": "can imagine how hard this actually is because you basically implementing compiler right so but this are this",
    "start": "3025240",
    "end": "3031280"
  },
  {
    "text": "approach that the brand is is taking not only has advantage that is is basically leveraging an existing compiler behind",
    "start": "3031280",
    "end": "3037480"
  },
  {
    "text": "in this particular case llbm but also um is doing it at the front so it doesn't",
    "start": "3037480",
    "end": "3043079"
  },
  {
    "text": "happen at compile time like all that assembly code has been generated before and the only thing that we need to do at",
    "start": "3043079",
    "end": "3048200"
  },
  {
    "text": "run time is Stitch those things together so we have these templates so Clan is basically or lb is not a runtime",
    "start": "3048200",
    "end": "3054359"
  },
  {
    "text": "dependency like it's just a build time dependency so you build build all these like you know assembly code and it uses the native compiler for your platform so",
    "start": "3054359",
    "end": "3060640"
  },
  {
    "text": "if you're in some forsaken platform like I don't know ax or something like that uh it it will work if you are able to",
    "start": "3060640",
    "end": "3066920"
  },
  {
    "text": "run Clank there um so that that that's great but also which is really cool and most jits need to also Implement",
    "start": "3066920",
    "end": "3073359"
  },
  {
    "text": "themselves is that we are able to leverage an optimizing compiler for this particular workload right so so not only",
    "start": "3073359",
    "end": "3079480"
  },
  {
    "text": "that assembly code you know worse for every architecture because someone else actually implemented the the back end",
    "start": "3079480",
    "end": "3085160"
  },
  {
    "text": "but also we can leverage all optimizations that everybody that using L lbm is using it's the same optimizations that R is using like R is",
    "start": "3085160",
    "end": "3092160"
  },
  {
    "text": "using lbm these days still and they are using I mean if you program the IR the intermediate representation correctly",
    "start": "3092160",
    "end": "3098119"
  },
  {
    "text": "and then you you are able to liate that well which is not you know it's easier said that but uh the idea is that now",
    "start": "3098119",
    "end": "3104119"
  },
  {
    "text": "you can use this set common of very like these many years of computer of compiler research just to make your C faster and",
    "start": "3104119",
    "end": "3110480"
  },
  {
    "text": "then you can we can just leverage that immediately as opposed to having to reimplement all those things and have",
    "start": "3110480",
    "end": "3116280"
  },
  {
    "text": "like SSA ourself and like you know dreaming and all that stuff like now you know you just run clang you get some",
    "start": "3116280",
    "end": "3122559"
  },
  {
    "text": "super cool assembly out we need to just Stitch it together and feel like the symbols and what not but like it's a",
    "start": "3122559",
    "end": "3128079"
  },
  {
    "text": "much like you can get results much much faster than if we need to implement a full-blown ye for uh for for python so",
    "start": "3128079",
    "end": "3135280"
  },
  {
    "text": "very excited it's like a jet Factory yeah right Java",
    "start": "3135280",
    "end": "3141000"
  },
  {
    "text": "style you guys use factories in Python G template Factory what's up friends I'm here in",
    "start": "3141000",
    "end": "3147319"
  },
  {
    "text": "the breaks with Dennis Pinos founder and CEO of unblocked check him out at get",
    "start": "3147319",
    "end": "3154040"
  },
  {
    "text": "unblocked.gdn you know we speak to developers who is",
    "start": "3154040",
    "end": "3160799"
  },
  {
    "text": "unblocked best for who needs to use it yeah unblocked helps large teams with",
    "start": "3160799",
    "end": "3166359"
  },
  {
    "text": "old code bases understand why something has been done in the past it helps them",
    "start": "3166359",
    "end": "3172079"
  },
  {
    "text": "understand what happens if they make changes to it basically all the questions that would typically ask a",
    "start": "3172079",
    "end": "3178200"
  },
  {
    "text": "coworker um you no longer have to interrupt them you don't have to wait for their response you don't have to if",
    "start": "3178200",
    "end": "3184280"
  },
  {
    "text": "you're geographically distributed you don't have to wait for that response you don't have to wait for you know you don't have to dig through documentation",
    "start": "3184280",
    "end": "3190599"
  },
  {
    "text": "you don't have to try to find the answer in Confluence and jira what we basically do is give you the answer by you just",
    "start": "3190599",
    "end": "3198000"
  },
  {
    "text": "asking a question the way that we got to the problem as a consequence of our kind of lived experience we're actually going",
    "start": "3198000",
    "end": "3203319"
  },
  {
    "text": "to call the company bother which is like you don't bother me I don't bother you right instead of like being tapped on",
    "start": "3203319",
    "end": "3209079"
  },
  {
    "text": "the shoulder or interruptive slack messages we could just use bother and",
    "start": "3209079",
    "end": "3214480"
  },
  {
    "text": "get uh get the answers that we wanted we didn't go with that name because it's a little bit of a negative connotation but",
    "start": "3214480",
    "end": "3220040"
  },
  {
    "text": "helping developers get on blocked by answering questions or surfacing data and discussions within the context of",
    "start": "3220040",
    "end": "3225680"
  },
  {
    "text": "their IDE relative to the code that they're looking at is something that thousands of developers love so far I",
    "start": "3225680",
    "end": "3231040"
  },
  {
    "text": "think our listeners are really familiar with AI tooling very familiar with code generation l lm's how is unblocked",
    "start": "3231040",
    "end": "3238839"
  },
  {
    "text": "different from what else is out there a lot of code generation tools help you write the code to solve a problem we sit",
    "start": "3238839",
    "end": "3245440"
  },
  {
    "text": "Upstream of that our goal is to help provide the context that you need if you think about where you spend your time",
    "start": "3245440",
    "end": "3251240"
  },
  {
    "text": "when you're trying to solve a new problem understanding how that system works why it was built that way what are",
    "start": "3251240",
    "end": "3256480"
  },
  {
    "text": "the ramifications of changing something that's the problem that unblock tries to solve for you we take the data and",
    "start": "3256480",
    "end": "3262480"
  },
  {
    "text": "discussions of all of these the source code and all those systems to provide that answer for you so that you can get",
    "start": "3262480",
    "end": "3268599"
  },
  {
    "text": "that context and then you can go and write that code we had this great example of a company who hires you know",
    "start": "3268599",
    "end": "3275359"
  },
  {
    "text": "very competent developers it took them 5 days that developer 5 days to write 12",
    "start": "3275359",
    "end": "3280799"
  },
  {
    "text": "lines of code and his feedback to us was it's not that it takes you 5 days to write 12 lines of code it took them 5",
    "start": "3280799",
    "end": "3287799"
  },
  {
    "text": "days to get the information that they needed to write those 12 lines of code and then it takes probably about 30",
    "start": "3287799",
    "end": "3293960"
  },
  {
    "text": "minutes to write those 12 lines of code and rip off that PR okay the next step to get unblocked for you and your team",
    "start": "3293960",
    "end": "3300920"
  },
  {
    "text": "is to go to get",
    "start": "3300920",
    "end": "3304400"
  },
  {
    "text": "unblock.on else on the team take a meeting or waste any time whatsoever",
    "start": "3309119",
    "end": "3314640"
  },
  {
    "text": "again get unlocked.com that's g u NBL",
    "start": "3314640",
    "end": "3321160"
  },
  {
    "text": "ed.com and get unblocked",
    "start": "3321160",
    "end": "3325960"
  },
  {
    "text": "if we can move this conversation up a level for a moment do you guys like this one-year release Cadence it seems like it has it this guy implemented that idea",
    "start": "3327000",
    "end": "3334760"
  },
  {
    "text": "so like what do you think he's going to say who did we you you did this yes uh",
    "start": "3334760",
    "end": "3340200"
  },
  {
    "text": "so like we we can make this like good cop bad cop or like you know actually Devil's Advocate and you know like this",
    "start": "3340200",
    "end": "3347280"
  },
  {
    "text": "guy trying this good so I'm also the release manager of some ancient python",
    "start": "3347280",
    "end": "3352960"
  },
  {
    "text": "versions in fact when python 313 comes out out the first version I released",
    "start": "3352960",
    "end": "3358520"
  },
  {
    "text": "which is python 3.8 is going end of life so you know we're going to say goodbye to that it was a very very you know nice",
    "start": "3358520",
    "end": "3365559"
  },
  {
    "text": "release I really enjoyed python 3.8 but it's time to move on so if your use case",
    "start": "3365559",
    "end": "3370760"
  },
  {
    "text": "if your production is still running on 3.8 well now it's high time to move since it's not going to receive any",
    "start": "3370760",
    "end": "3376960"
  },
  {
    "text": "security updates anymore right so at the time I joined as the release manager the",
    "start": "3376960",
    "end": "3383119"
  },
  {
    "text": "release process was a little bit hand wavy in terms of when are we releasing python so the theory said we're",
    "start": "3383119",
    "end": "3390559"
  },
  {
    "text": "releasing it every 18 month is but it could be anywhere between 18 and two",
    "start": "3390559",
    "end": "3396280"
  },
  {
    "text": "years and you know you couldn't really tell and definitely what you could not expect was which time of the year is",
    "start": "3396280",
    "end": "3403760"
  },
  {
    "text": "this going to happen in and the consequence of this was that Linux distributions in particular but also",
    "start": "3403760",
    "end": "3410480"
  },
  {
    "text": "other operating systems and and users were lagging behind adoption of Python 3",
    "start": "3410480",
    "end": "3415760"
  },
  {
    "text": "version a lot you know and people are like well python 2 no because Python 2.7",
    "start": "3415760",
    "end": "3421039"
  },
  {
    "text": "right but like Python 2.7 was out and then essentially Frozen for a long long",
    "start": "3421039",
    "end": "3426240"
  },
  {
    "text": "time so people forgot how this thing looked like before in times of python",
    "start": "3426240",
    "end": "3431280"
  },
  {
    "text": "2.3 2.4 2.5 2.6 and then 2.7 uh that unstable release Cadence was problematic",
    "start": "3431280",
    "end": "3438520"
  },
  {
    "text": "and that cost for example for Fedora which later is source for what is happening Red Hat was lagging behind",
    "start": "3438520",
    "end": "3445000"
  },
  {
    "text": "with the releases that we had and it turns out that the infrastructure that the big Linux distributions have",
    "start": "3445000",
    "end": "3451200"
  },
  {
    "text": "like abunto and like redhad is extremely useful for us to early find bugs in a",
    "start": "3451200",
    "end": "3458839"
  },
  {
    "text": "new version that we are developing in the betas in the release candidates and so on so it would be worthwhile if we",
    "start": "3458839",
    "end": "3467039"
  },
  {
    "text": "could actually ship the newest version of python with those Linux distributions",
    "start": "3467039",
    "end": "3472680"
  },
  {
    "text": "as they are also developed and go through their respective betas and so on that's also great for the end user right",
    "start": "3472680",
    "end": "3479480"
  },
  {
    "text": "because then by your Autumn release of Fedora you are released with the newest",
    "start": "3479480",
    "end": "3484839"
  },
  {
    "text": "version of python that was just released that is an A great experience for the end user so I wrote a pep a python",
    "start": "3484839",
    "end": "3492559"
  },
  {
    "text": "enhancement proposal document arguing those things that I'm just telling you that it would be amazing to have a fixed",
    "start": "3492559",
    "end": "3499240"
  },
  {
    "text": "release Cadence like that we can trust and share with the L distributions such",
    "start": "3499240",
    "end": "3505319"
  },
  {
    "text": "that they can essentially rely on us having certain milestones in the release",
    "start": "3505319",
    "end": "3511599"
  },
  {
    "text": "like reaching beta one like reaching release candidate one so that they can use the latest version as soon as",
    "start": "3511599",
    "end": "3517680"
  },
  {
    "text": "possible and we switch to the release uh Cadence in Python 3.9 and we've been",
    "start": "3517680",
    "end": "3523000"
  },
  {
    "text": "using it ever since uh so yeah your owner um that's my position uh on this",
    "start": "3523000",
    "end": "3529440"
  },
  {
    "text": "issue well as the other release manager of uh an verion now so I released three",
    "start": "3529440",
    "end": "3535720"
  },
  {
    "text": "3 l I mean one of the problems that this this thing uh I mean it has worked",
    "start": "3535720",
    "end": "3540880"
  },
  {
    "text": "really well I think like and people in general and just to be clear like you know so w doesn't kill me after we",
    "start": "3540880",
    "end": "3546280"
  },
  {
    "text": "finish the podcast I think it's a positive change right like and so so in general very good I think it has bring",
    "start": "3546280",
    "end": "3552359"
  },
  {
    "text": "some predictability people actually now have like you know dates and they can they can uh you know put their lives",
    "start": "3552359",
    "end": "3558760"
  },
  {
    "text": "around one of the the interesting you know side effects of this is that now people have this this impression that",
    "start": "3558760",
    "end": "3566280"
  },
  {
    "text": "python is releasing too often so every single year is a new version and then the old version because like you know",
    "start": "3566280",
    "end": "3571480"
  },
  {
    "text": "out of support or like first back fix support and then security support so they have this feeling that you know",
    "start": "3571480",
    "end": "3577799"
  },
  {
    "text": "they're going to be uh if they don't move fast enough uh they are going to be a to support super soon which which was",
    "start": "3577799",
    "end": "3583000"
  },
  {
    "text": "always true is just that you get the numbers like changing slower so the impression was that it's happening",
    "start": "3583000",
    "end": "3588799"
  },
  {
    "text": "slower but right now this is like moving this impression that you know python is changing too quickly right or whatever it is the other downside that this has",
    "start": "3588799",
    "end": "3595720"
  },
  {
    "text": "is that as you can see for instance for python 313 it means that because we need to release every single year uh we",
    "start": "3595720",
    "end": "3600960"
  },
  {
    "text": "releasing these features maybe like like big ones like the noil or or the jet in particular not being super exciting so",
    "start": "3600960",
    "end": "3607839"
  },
  {
    "text": "for instance the jet in particular % faster well it's kind of cool but where would you use it well if we have a 2",
    "start": "3607839",
    "end": "3613160"
  },
  {
    "text": "release maybe it will be a bit better so so you get these weird situations so so planning big projects uh right now is a",
    "start": "3613160",
    "end": "3619920"
  },
  {
    "text": "bit more challenging for instance one of the things that uh happened in Python 39 if I recall uh we changed the par of the",
    "start": "3619920",
    "end": "3626640"
  },
  {
    "text": "language like B different part which I'd like to describe as changing the wheels of a car that is moving uh not the best",
    "start": "3626640",
    "end": "3633640"
  },
  {
    "text": "feeling um but that was a bit like that could have U like we we could have have",
    "start": "3633640",
    "end": "3639400"
  },
  {
    "text": "some extra rest if that was a twoyear releas Cadence and we didn't have to you know uh like finish everything and all",
    "start": "3639400",
    "end": "3646280"
  },
  {
    "text": "the validation in one year I mean this doesn't mean that it was Rush it's just that we have to put more hours just because we wanted to make to the release",
    "start": "3646280",
    "end": "3652400"
  },
  {
    "text": "but on the other hand like this you know it's humans making it so uh even before when when the situation was like wach",
    "start": "3652400",
    "end": "3659119"
  },
  {
    "text": "was describing the day of beta freeze which is the moment when that no new features can come in and only back FES",
    "start": "3659119",
    "end": "3664480"
  },
  {
    "text": "from that point on in the release everybody was Ring their feature and the the last day you know like right all the",
    "start": "3664480",
    "end": "3670559"
  },
  {
    "text": "new features like so so you know humans are human so it doesn't really matter but um that's one of the like this",
    "start": "3670559",
    "end": "3676960"
  },
  {
    "text": "certainly the heat has been raised a bit because like right now it's released more often and and the numbers are changing faster that was more the angle",
    "start": "3676960",
    "end": "3683839"
  },
  {
    "text": "I was coming from was from the the when the Train leades the station once a year you better get your stuff on",
    "start": "3683839",
    "end": "3690920"
  },
  {
    "text": "it whether it's ready or not right and I I appreciate I didn't know the history of where it came from so I think this is",
    "start": "3690920",
    "end": "3696960"
  },
  {
    "text": "definitely progress and and Improvement predictability you know each time of year it's going to go out etc etc and it",
    "start": "3696960",
    "end": "3703880"
  },
  {
    "text": "makes a lot of sense especially a large project like this with tons of people using it you want to be predictable but",
    "start": "3703880",
    "end": "3709000"
  },
  {
    "text": "also not too frequent I would probably tend towards more frequent because now you have the train leaving the station",
    "start": "3709000",
    "end": "3714960"
  },
  {
    "text": "more times and if you don't if you miss this one that's all right we got another train leaving six weeks from now and so",
    "start": "3714960",
    "end": "3720039"
  },
  {
    "text": "you can hop on when it's ready versus having to hop on once a year and that's had you know we've seen success in",
    "start": "3720039",
    "end": "3725240"
  },
  {
    "text": "projects like Chrome Etc with like rolling every six weeks whatever is ready we're going to ship a new version",
    "start": "3725240",
    "end": "3731480"
  },
  {
    "text": "I don't know if that works with languages in run times you guys know way better than I do which is why I asked the question right like I guess for",
    "start": "3731480",
    "end": "3738079"
  },
  {
    "text": "compil languages that might in fact like work better for us the the difference is",
    "start": "3738079",
    "end": "3743520"
  },
  {
    "text": "that we're interpreted so there's a lot of code that is lying next to your interpreter and then you're trying to",
    "start": "3743520",
    "end": "3749599"
  },
  {
    "text": "run it with whatever is available to you with a lot of the libraries that we're supporting their particular issue so you",
    "start": "3749599",
    "end": "3756920"
  },
  {
    "text": "know like now I'm going to be the Devil's Advocate because like Pablo like was too apologetic so like you know let me like wow wow yeah like sa yeah let me",
    "start": "3756920",
    "end": "3765640"
  },
  {
    "text": "just say like hey this is this is all a compromise you know and there's obviously going to be things that are better and things that are worse the the",
    "start": "3765640",
    "end": "3771880"
  },
  {
    "text": "price to be paid for shorter release cadences is that The Matrix of tests of",
    "start": "3771880",
    "end": "3778440"
  },
  {
    "text": "CI that a library maintainer has to now kind of suffer with so has to run is",
    "start": "3778440",
    "end": "3785160"
  },
  {
    "text": "larger right because the just the number of versions that is out there that people are using like there's just more",
    "start": "3785160",
    "end": "3792319"
  },
  {
    "text": "versions than there were before right you had 27 and 36 maybe and then 37",
    "start": "3792319",
    "end": "3797680"
  },
  {
    "text": "appeared some 18 or 19 months later so um the growth of this Matrix like was um",
    "start": "3797680",
    "end": "3804559"
  },
  {
    "text": "sort of spread out en time now that Matrix is bigger I would claim that okay",
    "start": "3804559",
    "end": "3809960"
  },
  {
    "text": "it's good that we're testing with every particular version to identify where an incompatibility arrows or something",
    "start": "3809960",
    "end": "3817119"
  },
  {
    "text": "however I I always like to say that it's still the same sausage right we're still the same sort of team that is developing",
    "start": "3817119",
    "end": "3824240"
  },
  {
    "text": "the thing we still have the same velocity only we slice it thinner now so",
    "start": "3824240",
    "end": "3830039"
  },
  {
    "text": "like every release is easier to migrate to um compared to like the last release",
    "start": "3830039",
    "end": "3835440"
  },
  {
    "text": "because you know that's fewer changes yeah psychologically speaking that's a very",
    "start": "3835440",
    "end": "3841480"
  },
  {
    "text": "good point actually that that I'm glad that you mentioned because like one of the things that happen when you release every two years or more especially for a",
    "start": "3841480",
    "end": "3847839"
  },
  {
    "text": "language that that you know needs to evolve and need to change things and maybe doesn't have I mean we care a lot of backwards compatibility don't get me",
    "start": "3847839",
    "end": "3854240"
  },
  {
    "text": "wrong but like other languages like C++ clearly care even more so so for a language that change this much changing",
    "start": "3854240",
    "end": "3860880"
  },
  {
    "text": "and adapting your code and all the libraries for a twoe worth of changes is brutal which means that and we saw that",
    "start": "3860880",
    "end": "3868200"
  },
  {
    "text": "before right which means that like until New libraries are compatible with the new version there's a non-rival amount",
    "start": "3868200",
    "end": "3873799"
  },
  {
    "text": "of time so as a user or as a Company employee that you want to leverage these new features you probably want to wait a",
    "start": "3873799",
    "end": "3879640"
  },
  {
    "text": "lot because you know now people talk about the scheduling the work and you know like oh you know and finding even",
    "start": "3879640",
    "end": "3885319"
  },
  {
    "text": "how much it is and Library maintainer says well I will fix it later but when the changes are smaller that is like",
    "start": "3885319",
    "end": "3891279"
  },
  {
    "text": "psychologically speaking obviously in reality is more L the same modulos and nonlinear interaction but in general",
    "start": "3891279",
    "end": "3897400"
  },
  {
    "text": "when the changes are smaller then it's more enticing because like at least you know okay maybe this this this and this thing and sure maybe you need to wait",
    "start": "3897400",
    "end": "3903480"
  },
  {
    "text": "for another library to do it but like normally like and right now what we have seen uh compared with 38 when we started",
    "start": "3903480",
    "end": "3910599"
  },
  {
    "text": "doing this right is that that people jump earlier like before for instance one of the biggest libraries in this",
    "start": "3910599",
    "end": "3915839"
  },
  {
    "text": "numai which this numerical uh Computing in C right and for and what not so so",
    "start": "3915839",
    "end": "3921400"
  },
  {
    "text": "that Library used to take a long time to be compatible with new versions like right or sometimes even like half a year",
    "start": "3921400",
    "end": "3928240"
  },
  {
    "text": "or something and right now we are having it almost day one so so so this is fantastic because like people that want",
    "start": "3928240",
    "end": "3934720"
  },
  {
    "text": "to use the new features in the language you know they are not held back by the fact that their own particular",
    "start": "3934720",
    "end": "3940520"
  },
  {
    "text": "dependencies don't don't don't have uh you know the support for this so most of these things I don't think you can",
    "start": "3940520",
    "end": "3945960"
  },
  {
    "text": "approach it from a data driven kind of like perspective because this is uh it's very difficult to say what is better",
    "start": "3945960",
    "end": "3951359"
  },
  {
    "text": "what it worse but like certainly like you know from a psychological point of view I think it's again I think you have a very good point",
    "start": "3951359",
    "end": "3957520"
  },
  {
    "text": "like not too not too soon like not too often sorry but like also not too like like in behind I think it's earlier is",
    "start": "3957520",
    "end": "3964160"
  },
  {
    "text": "better maybe not too too early like we every three weeks it will be impossible for a compile language like you will we",
    "start": "3964160",
    "end": "3969920"
  },
  {
    "text": "will ship a j compiler that UNC compiles like un optimizes your code right it will be it will be like 6% lower or",
    "start": "3969920",
    "end": "3976640"
  },
  {
    "text": "something but one year yeah good I want to add one thing so napai is not doing",
    "start": "3976640",
    "end": "3982920"
  },
  {
    "text": "as well as Pablo is claiming they're doing way better there are already wheels for python 313 before the release",
    "start": "3982920",
    "end": "3991119"
  },
  {
    "text": "of python 313 those wheels are going to work on the final version of python 313",
    "start": "3991119",
    "end": "3996920"
  },
  {
    "text": "released October 1st we're releasing this like mid-september they're already there moreover they're also already",
    "start": "3996920",
    "end": "4003760"
  },
  {
    "text": "there for the specific version that is this experimental comp experimental",
    "start": "4003760",
    "end": "4009200"
  },
  {
    "text": "interor that does not have the G so I think everyone a non-al amount of",
    "start": "4009200",
    "end": "4014599"
  },
  {
    "text": "listeners probably like saying like what what is that wheel what is this thing yeah so it's this binary package that",
    "start": "4014599",
    "end": "4021640"
  },
  {
    "text": "lives on the python package index on PPI that people download NPI from when they say pip install NPI so if you say pip",
    "start": "4021640",
    "end": "4029000"
  },
  {
    "text": "install NPI from python 313 on day one you're going to be using wheels that are already there before the release of",
    "start": "4029000",
    "end": "4036440"
  },
  {
    "text": "Python 3 is this another word for a build it's like a build is a basically it's a binary package so it's a package",
    "start": "4036440",
    "end": "4041839"
  },
  {
    "text": "that is not doesn't contain python code only why do we make up another term for it well this is the key right because",
    "start": "4041839",
    "end": "4047200"
  },
  {
    "text": "the python package index used to well I think it still is it's called The Cheese Shop because it's all about like this",
    "start": "4047200",
    "end": "4052880"
  },
  {
    "text": "multi python references and jokes right so it's a sketch multi python that that goes to this cheese shop and a wheel is",
    "start": "4052880",
    "end": "4058520"
  },
  {
    "text": "a wheel of cheese you know ha taken that one a bit",
    "start": "4058520",
    "end": "4063920"
  },
  {
    "text": "too far maybe or like pip do you know pip uh um I mean this is a slightly different joke but like do you know pip",
    "start": "4063920",
    "end": "4069480"
  },
  {
    "text": "pip is the pcket installer for python right so when you install python you do pip install you know what pip means",
    "start": "4069480",
    "end": "4074640"
  },
  {
    "text": "python install packages peep installs packages yes okay so recursive acronym",
    "start": "4074640",
    "end": "4080240"
  },
  {
    "text": "recursive recursive uh yeah yeah recursive acronyms I'm well aware of but I'm not a montypython guy so I miss",
    "start": "4080240",
    "end": "4087000"
  },
  {
    "text": "completely this reference right so well you know I was missing this reference for years and someone pointed out like",
    "start": "4087000",
    "end": "4093799"
  },
  {
    "text": "well I suppose it makes sense like I have to watch it is it from Holy Grail or which movie is this no I think it's",
    "start": "4093799",
    "end": "4099758"
  },
  {
    "text": "one of the Flying Circus maybe yes one of the episodes of The Flying Circus has a skit about the the the the chese shop",
    "start": "4099759",
    "end": "4106040"
  },
  {
    "text": "and that's where that comes from obscure reference to build an entire python",
    "start": "4106040",
    "end": "4112159"
  },
  {
    "text": "ecosystem around but okay I I think it's not helping for Python program look like they they're in a Goen or something but",
    "start": "4112159",
    "end": "4118719"
  },
  {
    "text": "but you just need to have some you just have to have some file extension for those things and some name for those",
    "start": "4118719",
    "end": "4125120"
  },
  {
    "text": "things we used to have a more primitive early format for this sort of thing and",
    "start": "4125120",
    "end": "4130480"
  },
  {
    "text": "those were called eggs eggs were because you know snakes lay eggs right so that",
    "start": "4130480",
    "end": "4135758"
  },
  {
    "text": "that that made the this other sort of reference because Python and the name comes from Monty Python but a lot of",
    "start": "4135759",
    "end": "4142199"
  },
  {
    "text": "people just see the name Python and they're like yeah snakes are cool so so snakes we accept both sort of ways of",
    "start": "4142199",
    "end": "4148520"
  },
  {
    "text": "interpreting this because snakes are indeed cool yes sure uh but yeah like now that we knew that eggs are not",
    "start": "4148520",
    "end": "4155359"
  },
  {
    "text": "enough for what we need for proper binary packages we were like ah where to",
    "start": "4155359",
    "end": "4160400"
  },
  {
    "text": "go now with names and naming is hard let me tell you this much like naming is very hard so someone jumping in the",
    "start": "4160400",
    "end": "4165560"
  },
  {
    "text": "middle of the podcast listening to us talk about X and SES like wasn't this about tech again this background is",
    "start": "4165560",
    "end": "4171480"
  },
  {
    "text": "spectacular cuz you do run out of you know references with with snakes like how many things can you actually",
    "start": "4171480",
    "end": "4177199"
  },
  {
    "text": "reference but with Monty Python there's just countless references you can make just people won't get them but yeah yeah",
    "start": "4177199",
    "end": "4183000"
  },
  {
    "text": "they're very obscure these days like yeah it's it's an increasingly old and and hard to hard to get like you know",
    "start": "4183000",
    "end": "4188679"
  },
  {
    "text": "for instance one of the one of the funny ones the one of these attempts at did compilers from back in the day I think",
    "start": "4188679",
    "end": "4194120"
  },
  {
    "text": "from Google was called swallow like the you know from the Monty Python uh of no",
    "start": "4194120",
    "end": "4200040"
  },
  {
    "text": "no sorry Holy Grail Holy Grail yeah Hil speit of the unated SW yes good stuff",
    "start": "4200040",
    "end": "4205960"
  },
  {
    "text": "okay good meta conversation on release Cadence I think I agree with all your",
    "start": "4205960",
    "end": "4211040"
  },
  {
    "text": "points you have to find that sweet spot and as frequent as you can be reliable",
    "start": "4211040",
    "end": "4216280"
  },
  {
    "text": "without being too frequent and that probably varies per project and I'm happy that you guys are happy with once",
    "start": "4216280",
    "end": "4222159"
  },
  {
    "text": "a year um certainly better than what yall were doing before that's very cool let's go back to python",
    "start": "4222159",
    "end": "4227640"
  },
  {
    "text": "3.13 cuz Pablo at the beginning you you mentioned it's officially iOS compatible",
    "start": "4227640",
    "end": "4233120"
  },
  {
    "text": "or something what does this mean like you can just fire up python on your iPhone or well um not quite yet I will",
    "start": "4233120",
    "end": "4239920"
  },
  {
    "text": "say but like one of the things that like so cpython has a very old build system right is auto tools which is this uh you",
    "start": "4239920",
    "end": "4246640"
  },
  {
    "text": "know config make right people that have been like doing Linux for a long time proba I have run into this and and one",
    "start": "4246640",
    "end": "4252760"
  },
  {
    "text": "of the challenges of this is that U well and is like another different for Windows but like both Mac OS and most",
    "start": "4252760",
    "end": "4258679"
  },
  {
    "text": "like Unix platform use that so for a long time that that was okay but there was like a lot of platforms that that",
    "start": "4258679",
    "end": "4265040"
  },
  {
    "text": "you know we couldn't support just because like partially because the build system and partially because the source requires changes like for instance like",
    "start": "4265040",
    "end": "4271960"
  },
  {
    "text": "many of the things that we the efforts that we're trying to do right now to make python available in the browser uh",
    "start": "4271960",
    "end": "4277440"
  },
  {
    "text": "I don't know you have hear about this but right now there's a good effort to ensure that python can run in the browser and it's a good alternative to",
    "start": "4277440",
    "end": "4283840"
  },
  {
    "text": "to JavaScript this is a project for instance called biscript which allows people to run like python instead of",
    "start": "4283840",
    "end": "4290280"
  },
  {
    "text": "JavaScript which is quite cool so that those require changes in these like build systems and um and even the source",
    "start": "4290280",
    "end": "4297560"
  },
  {
    "text": "of itself and iOS in particular has quite a lot of challenges actually probably gues can chime in to specify",
    "start": "4297560",
    "end": "4304080"
  },
  {
    "text": "those since this is very close to his heart but one one person in particular that has been working for iOS support",
    "start": "4304080",
    "end": "4310199"
  },
  {
    "text": "which is Russ Russell Kim yeah he works right now at anakonda which is one of the python companies uh so he has been",
    "start": "4310199",
    "end": "4317360"
  },
  {
    "text": "working quite hard to ensure that you know both the build system and the source itself uh you know works on iOS",
    "start": "4317360",
    "end": "4324239"
  },
  {
    "text": "which has a lot of challenges right because iOS has not only like a alien way of doing things but many apis are",
    "start": "4324239",
    "end": "4330639"
  },
  {
    "text": "not available there or all available but you need this this specific things that you need to Apple to bless you with",
    "start": "4330639",
    "end": "4336480"
  },
  {
    "text": "their power just to be able to use like the compil like how does the G compile right now you know like who knows",
    "start": "4336480",
    "end": "4342360"
  },
  {
    "text": "probably can maybe let's start like from the very beginning there so the the goal",
    "start": "4342360",
    "end": "4347560"
  },
  {
    "text": "that we have with this iOS support for the time being at least is not to have",
    "start": "4347560",
    "end": "4352760"
  },
  {
    "text": "an application on the app store called python that's not what we're doing what",
    "start": "4352760",
    "end": "4357800"
  },
  {
    "text": "we are doing right now is to have the python distribution The Source distribution ready entirely for being",
    "start": "4357800",
    "end": "4365760"
  },
  {
    "text": "embedded within another application that somebody wants to release on the app store for iOS right um this was",
    "start": "4365760",
    "end": "4373760"
  },
  {
    "text": "theoretically possible in the past with already a ton of hacks that Russell Keith mgee historically made uh for a",
    "start": "4373760",
    "end": "4381040"
  },
  {
    "text": "project called beware that is just running python on mobile on both Android and iOS but the python source code our",
    "start": "4381040",
    "end": "4389800"
  },
  {
    "text": "uh Source distribution was not making this easy there are plenty of changes that you may have to make because the",
    "start": "4389800",
    "end": "4395639"
  },
  {
    "text": "phone platform uh like that Apple came up with is very limited it is limited uh",
    "start": "4395639",
    "end": "4402560"
  },
  {
    "text": "um kind of uh By Design such that it's more secure and it's sort of uh you know",
    "start": "4402560",
    "end": "4409120"
  },
  {
    "text": "doesn't waste your battery too much and it does a bunch of other things that make it easier for applications to be",
    "start": "4409120",
    "end": "4415280"
  },
  {
    "text": "just swiped up to kill them and they don't run any runaway processes and whatnot so there are apis there that are",
    "start": "4415280",
    "end": "4422560"
  },
  {
    "text": "not allowed there are others that are just not implemented so they're not available so you cannot run you cannot",
    "start": "4422560",
    "end": "4429159"
  },
  {
    "text": "run threads and so on so this sort of thing causes of um embedding python to",
    "start": "4429159",
    "end": "4435199"
  },
  {
    "text": "be complex and then there's the new and increasingly strict rules around when",
    "start": "4435199",
    "end": "4441199"
  },
  {
    "text": "you're packaging some sort of binary blob and want to put it on the official app store for Apple they have this",
    "start": "4441199",
    "end": "4448480"
  },
  {
    "text": "automated and sometimes in person but mostly automated review process whether what you're publishing is safe so",
    "start": "4448480",
    "end": "4455080"
  },
  {
    "text": "there's plenty of things that interpreted language like python would do that would be flagged by those",
    "start": "4455080",
    "end": "4460920"
  },
  {
    "text": "automated systems as unsafe that this this code is doing something fishy so there are changes needed for those",
    "start": "4460920",
    "end": "4467480"
  },
  {
    "text": "things to just pass review so that your application that emits python can successfully actually appear on the App",
    "start": "4467480",
    "end": "4473679"
  },
  {
    "text": "Store like including until very recently you couldn't really have just Dynamic",
    "start": "4473679",
    "end": "4479120"
  },
  {
    "text": "libraries lying around in your bundle that you're publishing on the App Store everything had to be statically compiled",
    "start": "4479120",
    "end": "4485840"
  },
  {
    "text": "which puts depending on libraries like NPI into Jeopardy because it is very hard for um like external C extensions",
    "start": "4485840",
    "end": "4493400"
  },
  {
    "text": "to be built in a way that they are both all part of a single binary now this",
    "start": "4493400",
    "end": "4499199"
  },
  {
    "text": "extension is lifted however you have to sign everything that you're publishing",
    "start": "4499199",
    "end": "4504239"
  },
  {
    "text": "to the App Store separately so it has to be notorized by Apple it has to be signed with your application developer",
    "start": "4504239",
    "end": "4511080"
  },
  {
    "text": "certificate and so on so you know you know when you're sending out this code to Apple that okay this is the code I",
    "start": "4511080",
    "end": "4517560"
  },
  {
    "text": "built nobody medal with it and then Apple notorized it that okay this one is safe to be run by you know users phones",
    "start": "4517560",
    "end": "4524560"
  },
  {
    "text": "and so on so all this infrastructure like it seems like something that shouldn't really be our concern but all",
    "start": "4524560",
    "end": "4531960"
  },
  {
    "text": "of this was making it hard for python to just be embedded and now with Russell's hard work this is a platform that we",
    "start": "4531960",
    "end": "4539440"
  },
  {
    "text": "support so if you want to have a text editor that has Automation in Python if you do want to have an editor uh like",
    "start": "4539440",
    "end": "4546520"
  },
  {
    "text": "you know for python source code like there's a few of those like pythonista pyto and so on now it's going to be much",
    "start": "4546520",
    "end": "4553120"
  },
  {
    "text": "easier for the authors of those to upgrade to a newer version of python this is why those all those apps lagged",
    "start": "4553120",
    "end": "4559560"
  },
  {
    "text": "behind and they were still on python 3.8 or 3.10 because it was a ton of work to",
    "start": "4559560",
    "end": "4564880"
  },
  {
    "text": "upgrade and redo all those hacks in a newer python versions so now unnecessary we support it definitely wasn't what I",
    "start": "4564880",
    "end": "4571800"
  },
  {
    "text": "was thinking but it makes a ton of sense I think it's going to make some people very excited what are you thinking about yeah",
    "start": "4571800",
    "end": "4579239"
  },
  {
    "text": "yeah what were you thinking about you write some python code and deploy an app based on it like build an app in Python",
    "start": "4579239",
    "end": "4586719"
  },
  {
    "text": "right so this is kind of step two for the bware project that Russell Keith Magi is part of and which is now being",
    "start": "4586719",
    "end": "4593400"
  },
  {
    "text": "uh essentially sponsored by Anaconda where yeah you're you're going to be able to build python applications from",
    "start": "4593400",
    "end": "4599320"
  },
  {
    "text": "scratch and end up with an app on the iPhone that you can put on the App Store and it's fine right but the first step",
    "start": "4599320",
    "end": "4605719"
  },
  {
    "text": "of this is that all this um additional tooling that uh beer is building on top",
    "start": "4605719",
    "end": "4611639"
  },
  {
    "text": "of python needs to rely on python being embeddable right also conceptually",
    "start": "4611639",
    "end": "4617400"
  },
  {
    "text": "speaking is not different from the first use case because like you you're not going to have one single python in the App Store that everybody can use and you",
    "start": "4617400",
    "end": "4624360"
  },
  {
    "text": "know no you need to like have every everyone will have a different python version so so it's a trivial embedding",
    "start": "4624360",
    "end": "4629719"
  },
  {
    "text": "so you not embeding this one a text editor you're ining it on a binary that is just python yes but you also want to",
    "start": "4629719",
    "end": "4635600"
  },
  {
    "text": "see like you know not only your python code you want to see your dependencies as well right so now okay so this is the",
    "start": "4635600",
    "end": "4641520"
  },
  {
    "text": "same like if a text editor you want a text editor to have python inside to do some extension you may want some",
    "start": "4641520",
    "end": "4647040"
  },
  {
    "text": "extensions that python can do to interact with something else right so so maybe you want also that and the",
    "start": "4647040",
    "end": "4652159"
  },
  {
    "text": "dependencies so is technically you know if you Queen hard enough is really the same case it's just that for the",
    "start": "4652159",
    "end": "4658120"
  },
  {
    "text": "developer that um just wants like you know to put some files and maybe to say",
    "start": "4658120",
    "end": "4663280"
  },
  {
    "text": "you know I require this and that that's a lot of work and you know you're in the business of compiling python yourself",
    "start": "4663280",
    "end": "4668800"
  },
  {
    "text": "like what are you talking about like so so it's much better if if we can offer a specific workflow well workflow that",
    "start": "4668800",
    "end": "4675480"
  },
  {
    "text": "says like okay if your case is only like you know this and that and like you only have these dependencies then you know",
    "start": "4675480",
    "end": "4680560"
  },
  {
    "text": "you just click this put this here and the build process will take that for you so you don't need to that's step two but",
    "start": "4680560",
    "end": "4686280"
  },
  {
    "text": "but you know conceptually speaking is just a dep tooling not not really a undertaking but really it's like you",
    "start": "4686280",
    "end": "4693440"
  },
  {
    "text": "know it's again incremental steps so the important thing here is as well that like this is now part of our CI we are",
    "start": "4693440",
    "end": "4700960"
  },
  {
    "text": "building python on iOS every time you make a change so it's going to be M much",
    "start": "4700960",
    "end": "4706600"
  },
  {
    "text": "less probable for us to introduce changes without knowing that they break",
    "start": "4706600",
    "end": "4711719"
  },
  {
    "text": "support for running this on the phone which should be great news for anybody that actually wants to see python on",
    "start": "4711719",
    "end": "4718199"
  },
  {
    "text": "mobile devices because now you're going to Care to keep this running well now you have me thinking about the Future",
    "start": "4718199",
    "end": "4723719"
  },
  {
    "text": "Let's close on this wish list imagine that the three of us are sitting down",
    "start": "4723719",
    "end": "4729000"
  },
  {
    "text": "next September and talking about 314 what do you want us to be talking",
    "start": "4729000",
    "end": "4735360"
  },
  {
    "text": "about what do you hope we're talking about going into 314 each of you oh okay so my dreams are simple I want",
    "start": "4735360",
    "end": "4742679"
  },
  {
    "text": "everything uh I like that so honest honestly I",
    "start": "4742679",
    "end": "4748280"
  },
  {
    "text": "sponsored the you know making the the optional um pep so this is very close to",
    "start": "4748280",
    "end": "4753880"
  },
  {
    "text": "my heart what I would like to see is for this to pay off for um the library developers to step in try it out and say",
    "start": "4753880",
    "end": "4761400"
  },
  {
    "text": "like hey actually this is helping us what is related to this to see that the uh performance you know efforts that we",
    "start": "4761400",
    "end": "4767840"
  },
  {
    "text": "are having separately from the global lock removal actually converge and you",
    "start": "4767840",
    "end": "4774040"
  },
  {
    "text": "know kind of do work with this free threaded version and also finally again",
    "start": "4774040",
    "end": "4780239"
  },
  {
    "text": "free threading we don't expect people to actually start new threads randomly and",
    "start": "4780239",
    "end": "4785679"
  },
  {
    "text": "end up in this you know crazy world of free threading where you can just easily just write bad applications by writing",
    "start": "4785679",
    "end": "4793679"
  },
  {
    "text": "on top of your vir and accessing data you shouldn't and you know kind of we don't want to reintroduce models that",
    "start": "4793679",
    "end": "4800520"
  },
  {
    "text": "already we know failed in other languages we want tooling to be more high level so I want this more high",
    "start": "4800520",
    "end": "4807280"
  },
  {
    "text": "level tooling to start popping up slowly we deliberately didn't suggest any so",
    "start": "4807280",
    "end": "4813040"
  },
  {
    "text": "far we want to see what the community actually wants to use there's kind of things that happened in other more",
    "start": "4813040",
    "end": "4819880"
  },
  {
    "text": "younger um programming languages you know you have go routines right like you have channels in different uh",
    "start": "4819880",
    "end": "4826840"
  },
  {
    "text": "programming languages and so on so I'm very excited to see where this goes so this free threading evolution is what I",
    "start": "4826840",
    "end": "4833800"
  },
  {
    "text": "would like to be able to tell you next year that you know has done great leaps",
    "start": "4833800",
    "end": "4839920"
  },
  {
    "text": "and it's now way more usable and it's literally the future so yeah well in my",
    "start": "4839920",
    "end": "4845239"
  },
  {
    "text": "case I think apart froming what gash just said I think I think the the key form is that this pays off like which is",
    "start": "4845239",
    "end": "4851560"
  },
  {
    "text": "non trivial right like it may pay off for some users for sure that are really hungry about this like like what I",
    "start": "4851560",
    "end": "4857760"
  },
  {
    "text": "really want to know is that people like you know for a lot of time like removing the Gil has been almost like joke about",
    "start": "4857760",
    "end": "4864520"
  },
  {
    "text": "like you know this is what is missing like you know this will be like the last thing and and and everything will be so",
    "start": "4864520",
    "end": "4870040"
  },
  {
    "text": "green and fantastic when we remove the Gil well now now you know prove it so I want to see like everybody saying like",
    "start": "4870040",
    "end": "4876400"
  },
  {
    "text": "you know now that there is no Gil oh I finally can do this and deep this thing which is not going to happen fully right",
    "start": "4876400",
    "end": "4881719"
  },
  {
    "text": "because like you know people still will reach to other Lang which is for other reasons uh and performance right but",
    "start": "4881719",
    "end": "4887040"
  },
  {
    "text": "like I just want to see a big impact there and and ideally we talk again for 314 like we are saying okay this make a",
    "start": "4887040",
    "end": "4894320"
  },
  {
    "text": "difference right so it was cool sure like and some people really like it but like wow like now it's a different",
    "start": "4894320",
    "end": "4899560"
  },
  {
    "text": "Playfield right like so so it's different the other thing that that I would like to to see and this is a bit more personal uh so this is a project",
    "start": "4899560",
    "end": "4905920"
  },
  {
    "text": "that I started I think python 310 and um which is that uh a lot of people were",
    "start": "4905920",
    "end": "4911719"
  },
  {
    "text": "complaining that the kind of the user experience of the language was not really great in term of like error messages and things like that so like",
    "start": "4911719",
    "end": "4918360"
  },
  {
    "text": "you know syntax errors and like you mistype something and like there is some some import problem so that was really",
    "start": "4918360",
    "end": "4925159"
  },
  {
    "text": "bad like to the point that there was some situations that was laughable and um we have worked quite a lot like with",
    "start": "4925159",
    "end": "4931679"
  },
  {
    "text": "the new parage and with many other improvements to improve this to the point that right now I'm super happy to see that many like even papers that are",
    "start": "4931679",
    "end": "4938560"
  },
  {
    "text": "researching error messages are cting python as like one of the obviously not in the same category as Ras because like we can all agree that Ras has fantastic",
    "start": "4938560",
    "end": "4945120"
  },
  {
    "text": "error messages different kind because those are compile time error messages and we are talking about runtime ones if",
    "start": "4945120",
    "end": "4950520"
  },
  {
    "text": "you don't consider the par but but what we are right now like quite quite high in that sense to the point that I think",
    "start": "4950520",
    "end": "4956719"
  },
  {
    "text": "there was some some research about like how llms can reason about what's wrun about your go from the errors and and",
    "start": "4956719",
    "end": "4962920"
  },
  {
    "text": "you run it in 311 it was like a 13 sorry a 30% like better uh you know",
    "start": "4962920",
    "end": "4968960"
  },
  {
    "text": "performance of those just because it's telling you a bit more right so you can fix the code a bit better which is quite",
    "start": "4968960",
    "end": "4974040"
  },
  {
    "text": "cool so uh we continue doing this thing and we are we are trying to add like even bigger changes to The Interpreter",
    "start": "4974040",
    "end": "4979719"
  },
  {
    "text": "that help in this regard which is challenging because you know those changes sometimes require some some",
    "start": "4979719",
    "end": "4984800"
  },
  {
    "text": "non-trivial performance games there so obviously we don't want to affect performance but to do that we need to",
    "start": "4984800",
    "end": "4990360"
  },
  {
    "text": "like put a lot of engineering there so in 314 um we are probably going to try",
    "start": "4990360",
    "end": "4995800"
  },
  {
    "text": "like some new ones that are quite big uh so we went to hopefully when we talk again those have actually been",
    "start": "4995800",
    "end": "5001440"
  },
  {
    "text": "implemented and and they have been successful which I I would love to see yeah that's awesome I was reading about",
    "start": "5001440",
    "end": "5006920"
  },
  {
    "text": "your improved error messages and I think that's the kind of thing that has to be a sustained effort over time it's like",
    "start": "5006920",
    "end": "5012239"
  },
  {
    "text": "one of those paper cuts kind of things where it's like we're just going to continue to polish this thing and so a",
    "start": "5012239",
    "end": "5018360"
  },
  {
    "text": "great effort I'm glad that you struck that up well the podcast core. py if you",
    "start": "5018360",
    "end": "5024040"
  },
  {
    "text": "are a super python nerd and want to nerd out with these two about internals on a",
    "start": "5024040",
    "end": "5029480"
  },
  {
    "text": "more frequent basis then we'll cover it here on the change log which sounds like it's going to be about once a year love",
    "start": "5029480",
    "end": "5034639"
  },
  {
    "text": "to have you guys back next September and be talking about 3:14 hopefully all of our wishes will have come to fruition",
    "start": "5034639",
    "end": "5041280"
  },
  {
    "text": "and we'll have people out there free bird it I mean free threading it right free threading Q Leonard Skinner",
    "start": "5041280",
    "end": "5048420"
  },
  {
    "text": "[Music]",
    "start": "5048420",
    "end": "5051469"
  },
  {
    "text": "here and uh enjoying the new python with no Gill and the performance improvements",
    "start": "5054840",
    "end": "5061360"
  },
  {
    "text": "that are possible there lots of potential I'm certainly looking forward to it guys thanks so much for coming on",
    "start": "5061360",
    "end": "5066800"
  },
  {
    "text": "the show this week thanks for having us yeah thanks for having us been a",
    "start": "5066800",
    "end": "5072040"
  },
  {
    "text": "pleasure okay so now that python is officially experimentally free birded I",
    "start": "5074280",
    "end": "5080440"
  },
  {
    "text": "mean free threaded are you going to defenestrate the Gill let us know in",
    "start": "5080440",
    "end": "5087000"
  },
  {
    "text": "zulip yes the change log community's conversations are now happening in zulip",
    "start": "5087000",
    "end": "5093080"
  },
  {
    "text": "joined today by signing up at Chang log.com commmunity if you've already signed up",
    "start": "5093080",
    "end": "5099360"
  },
  {
    "text": "but you want your zulip invite just sign in and click on send me a zulip invite you'll see it of course it's totally",
    "start": "5099360",
    "end": "5105280"
  },
  {
    "text": "free and a totally cool place to hang out and discuss let's do one more big",
    "start": "5105280",
    "end": "5111159"
  },
  {
    "text": "thanks to our sponsors of this episode Sentry we love Sentry you might too use",
    "start": "5111159",
    "end": "5116719"
  },
  {
    "text": "code change log save 100 bucks fly.io the home of changel log.com ship",
    "start": "5116719",
    "end": "5123040"
  },
  {
    "text": "something in 5 minutes or less learn how at fly.io and of course to coder.com and",
    "start": "5123040",
    "end": "5130080"
  },
  {
    "text": "unblocked please support our sponsors they support us and thank you of course",
    "start": "5130080",
    "end": "5135639"
  },
  {
    "text": "to the goat break master cylinder is the greatest beat freak of all times finally",
    "start": "5135639",
    "end": "5141639"
  },
  {
    "text": "thank you for listening to our shows we truly appreciate you spending time with us each week that is all for now but on",
    "start": "5141639",
    "end": "5149280"
  },
  {
    "text": "Friday we are talking about developer happiness and unhappiness and product",
    "start": "5149280",
    "end": "5154400"
  },
  {
    "text": "activity or lack thereof with our friend aboda from DX that is a fun one so stay",
    "start": "5154400",
    "end": "5160880"
  },
  {
    "text": "tuned that's all for now but we'll talk to you again on Friday",
    "start": "5160880",
    "end": "5167158"
  },
  {
    "text": "[Music]",
    "start": "5170550",
    "end": "5187649"
  },
  {
    "text": "[Music]",
    "start": "5190070",
    "end": "5201250"
  },
  {
    "text": "[Music] King love",
    "start": "5205740",
    "end": "5212920"
  }
]