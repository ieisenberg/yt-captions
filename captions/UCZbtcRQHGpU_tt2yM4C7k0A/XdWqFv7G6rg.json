[
  {
    "text": "bandwidth for change log is provided by fastly learn more at fastly.com and",
    "start": "160",
    "end": "5920"
  },
  {
    "text": "we're hosted on Leno servers head to lin.com",
    "start": "5920",
    "end": "10920"
  },
  {
    "text": "changelog this episode of JS party is brought to you by hired hired matches",
    "start": "11599",
    "end": "16840"
  },
  {
    "text": "outstanding people with the world's most Innovative companies at hired your dream job is waiting to apply to you instead",
    "start": "16840",
    "end": "24519"
  },
  {
    "text": "of endlessly applying to companies hoping for the best hired put you in control of when and how you connect with",
    "start": "24519",
    "end": "31080"
  },
  {
    "text": "interesting opportunities the best part is hired is completely free to you it",
    "start": "31080",
    "end": "36160"
  },
  {
    "text": "won't cost you anything in fact they pay you to get hired head to hired.com JSP",
    "start": "36160",
    "end": "42160"
  },
  {
    "text": "party don't Google it this URL is the only way to double the hiring bonus to $600 once again hire.com JSP party and",
    "start": "42160",
    "end": "50600"
  },
  {
    "text": "now on to the [Music]",
    "start": "50600",
    "end": "57849"
  },
  {
    "text": "show welcome to JS party a weekly celebration",
    "start": "58920",
    "end": "64080"
  },
  {
    "text": "of JavaScript and the web tune in live on Fridays at 3pm us Eastern at Chang",
    "start": "64080",
    "end": "69600"
  },
  {
    "text": "law.com join the community and slack with us in real time head to Chang law.com Community follow us on Twitter",
    "start": "69600",
    "end": "76520"
  },
  {
    "text": "or @js party FM and now on to the show hey everybody Welcome to JS party where",
    "start": "76520",
    "end": "81840"
  },
  {
    "text": "it's a party every week with JavaScript uh we've got a special guest today uh say hello to John David Dalton also",
    "start": "81840",
    "end": "88640"
  },
  {
    "text": "known as jdd hi that's me I'm",
    "start": "88640",
    "end": "94399"
  },
  {
    "text": "JT I'm Michael Rogers and I'm Alex zon and today we're going to dive into es",
    "start": "94399",
    "end": "100880"
  },
  {
    "text": "modules um so to kick us off um I want to get into the history vs modules",
    "start": "100880",
    "end": "107360"
  },
  {
    "text": "because I I listened to this uh terrible podcast in the JS party feed where yay",
    "start": "107360",
    "end": "114560"
  },
  {
    "text": "query took over and Paul Irish made some interesting statements about how uh",
    "start": "114560",
    "end": "120719"
  },
  {
    "text": "the node modules did it wrong and how you know why do you know es modules have",
    "start": "120719",
    "end": "125840"
  },
  {
    "text": "to be MJS if they're the ones that suck which that was my line yeah yes okay",
    "start": "125840",
    "end": "131720"
  },
  {
    "text": "yeah that was your line yeah so the pro yeah you know that that kind of argument works if if history doesn't matter oh no",
    "start": "131720",
    "end": "139080"
  },
  {
    "text": "I mean I think I think if you if you listen I think we understand the",
    "start": "139080",
    "end": "145000"
  },
  {
    "text": "situation it was just kind of a fun time to use the uh he's the one who sucks line from Office Space right right but",
    "start": "145000",
    "end": "153120"
  },
  {
    "text": "when I listened to that in my headphones I was screaming because I was like we couldn't have done anything at the time because C modules didn't exist so we",
    "start": "153120",
    "end": "160720"
  },
  {
    "text": "were joking earlier that um we're highly qualified to to do this because um Alex",
    "start": "160720",
    "end": "166000"
  },
  {
    "text": "wrote two sentences of the AMD spec and I wrote one sentence of a I I wrote one",
    "start": "166000",
    "end": "171080"
  },
  {
    "text": "sentence of a revision to the common Jazz spec so we're were well qualified I mean I can't think of people who would",
    "start": "171080",
    "end": "177239"
  },
  {
    "text": "have written more than that I write code that supports yeah yeah so to to really go as far back",
    "start": "177239",
    "end": "184120"
  },
  {
    "text": "as we can JavaScript is like a thing that you script include in your page it's been that way for a long time um",
    "start": "184120",
    "end": "190400"
  },
  {
    "text": "first people to do everything are usually Dojo they do it in this way that that everybody ends up hating but Dojo",
    "start": "190400",
    "end": "196239"
  },
  {
    "text": "really did do modules first uh they they had you know an independent loader where you could really isolate your code and",
    "start": "196239",
    "end": "202159"
  },
  {
    "text": "and write your own stuff and um this was way way before um uh what are they uh",
    "start": "202159",
    "end": "208480"
  },
  {
    "text": "Source Maps so in order to get line numbers while you're debugging you really did have to do the async loading stuff so they had this whole async",
    "start": "208480",
    "end": "214760"
  },
  {
    "text": "loading system for debugging um they had a giant Java tool chain for actually bundling everything together before",
    "start": "214760",
    "end": "220519"
  },
  {
    "text": "people really bundle their code like that at first it was uh all synchronous",
    "start": "220519",
    "end": "225599"
  },
  {
    "text": "right yeah like it it literally used synchronous uh Ajax and Evo oh yeah",
    "start": "225599",
    "end": "230840"
  },
  {
    "text": "that's right it was synchronous xhr it would take like three minutes for your app to boot and then that's kind of",
    "start": "230840",
    "end": "237040"
  },
  {
    "text": "where I am so uh what's his he's one of my favorite people in the entire world uh James uh uh Road AMD uh oh my",
    "start": "237040",
    "end": "246360"
  },
  {
    "text": "goodness this is I'm SP James uh oh",
    "start": "246360",
    "end": "251760"
  },
  {
    "text": "man require JS GitHub yeah I'm doing the same",
    "start": "251760",
    "end": "259320"
  },
  {
    "text": "thing uh he he's seriously uh J Jr Burke James Burke that's what it is okay uh J",
    "start": "259320",
    "end": "264800"
  },
  {
    "text": "James Burke was on the dojo team so AMD actually kind of came out of Dojo a little bit that's cool and then and then",
    "start": "264800",
    "end": "270800"
  },
  {
    "text": "like was the official loader once like the required JS kind of started to exist",
    "start": "270800",
    "end": "276880"
  },
  {
    "text": "but there was like the first synchronous loader and then there was the asynchronous version of that and then",
    "start": "276880",
    "end": "282680"
  },
  {
    "text": "that kind of turned into the am AMD spec so like even stuff we still kind of at least deal with today I don't know too",
    "start": "282680",
    "end": "289320"
  },
  {
    "text": "many people still using AMD but it all comes from that original Dojo stuff like very directly so so before we get into",
    "start": "289320",
    "end": "297000"
  },
  {
    "text": "AMD though I think that we do need to rewind a little bit so um sort of I don't think that they really looked at",
    "start": "297000",
    "end": "302120"
  },
  {
    "text": "Dojo at all when they did this but there was this early server JS Community where people were you know building a",
    "start": "302120",
    "end": "307800"
  },
  {
    "text": "JavaScript platform for the back end um the primary one at the time was one called narwhal which was uh on the jvm",
    "start": "307800",
    "end": "314639"
  },
  {
    "text": "uh and these were really dominant before kind of node came around um and there were a lot of people you know thinking",
    "start": "314639",
    "end": "319840"
  },
  {
    "text": "about different ways to build out this back end the one interesting thing about narwhal though was that it did have a",
    "start": "319840",
    "end": "325880"
  },
  {
    "text": "lot of synchronous IO patterns inside of it um so their module system was synchronous and",
    "start": "325880",
    "end": "333440"
  },
  {
    "text": "even though I had to do file IO and all that kind of stuff um so they didn't do any async loader at all because it didn't really matter to them and so they",
    "start": "333440",
    "end": "339919"
  },
  {
    "text": "wrote this really simple module pattern did it use load no I'd have to ask Chris cowall I'd",
    "start": "339919",
    "end": "348000"
  },
  {
    "text": "have to ask Chris to make sure but I don't I don't think so okay um but this was this was like the first I I think",
    "start": "348000",
    "end": "354160"
  },
  {
    "text": "more kind of formalized spec for you know how you could write JavaScript modules um the traditional noj",
    "start": "354160",
    "end": "360240"
  },
  {
    "text": "module users have seen this pattern it's very similar the the big difference that that I would note that is very important",
    "start": "360240",
    "end": "367280"
  },
  {
    "text": "is that the module that exports equals a function that whole pattern where a module could just be one function that",
    "start": "367280",
    "end": "372319"
  },
  {
    "text": "didn't exist in the common JS spec correct that was something that got added later um and so a lot of people",
    "start": "372319",
    "end": "378080"
  },
  {
    "text": "started using the spec in the Narwhal space and when nodejs started uh it grabbed that spec um also uh couchdb I",
    "start": "378080",
    "end": "384840"
  },
  {
    "text": "think still to this day has common Jace module support so you can you know um add them into properties on a view um",
    "start": "384840",
    "end": "392360"
  },
  {
    "text": "and then in your view you can actually use commonjs modules so the spec kind of got around and people started using it",
    "start": "392360",
    "end": "397759"
  },
  {
    "text": "for modules and stuff like that but eventually node just became so popular that the server JS effort kind of died",
    "start": "397759",
    "end": "404479"
  },
  {
    "text": "off um and a lot of and and node started to make some very node specific",
    "start": "404479",
    "end": "410360"
  },
  {
    "text": "adjustments to the module system so it's really not it compliant in any way with any spec that the commonjs wrote it's",
    "start": "410360",
    "end": "416479"
  },
  {
    "text": "not just that module. exports equals the function thing um there's a lot of other stuff in there about how the resolution",
    "start": "416479",
    "end": "422319"
  },
  {
    "text": "Works inside of nodecore modules and all these other little tricky things that really matter when you start to say oh",
    "start": "422319",
    "end": "428599"
  },
  {
    "text": "let's add another module spec but a lot of people didn't like this module",
    "start": "428599",
    "end": "434240"
  },
  {
    "text": "system including James Burke um they felt like it was not quite fit for the",
    "start": "434240",
    "end": "440639"
  },
  {
    "text": "web because it didn't have this async loader uh because it wasn't built around that stuff and so that's where they were",
    "start": "440639",
    "end": "446479"
  },
  {
    "text": "objectively right right yeah I mean it's synchronous vers is asynchronous so the",
    "start": "446479",
    "end": "451520"
  },
  {
    "text": "web synchronous on the web is not great well I mean synchronous in node is also not a thing but with with node what we",
    "start": "451520",
    "end": "458800"
  },
  {
    "text": "figured out was that even though everything in node is async it actually makes sense to have a sync module system because you need to load up your entire",
    "start": "458800",
    "end": "465599"
  },
  {
    "text": "application um before you can sense on the server right yes okay yes that that that",
    "start": "465599",
    "end": "472240"
  },
  {
    "text": "is fair um but what people were doing already with browser fi was they were taking a bunch of these modules and bundling them up and and using them in",
    "start": "472240",
    "end": "478720"
  },
  {
    "text": "their web application and everybody in production even if you're using AMD ends up doing this",
    "start": "478720",
    "end": "484240"
  },
  {
    "text": "bundle step it's really only in debugging where you want to truly asynchronously load these things right and potentially in the http2 push future",
    "start": "484240",
    "end": "492759"
  },
  {
    "text": "but yeah yeah I I've seen some interesting benchmarks around that um that show that it's it's still not I",
    "start": "492759",
    "end": "498159"
  },
  {
    "text": "think we're far away from from that but yeah it's it's some theoretical future where it's just as fast to not bundle",
    "start": "498159",
    "end": "504440"
  },
  {
    "text": "right right right um and so you but so so the AMD speec comes along um",
    "start": "504440",
    "end": "509960"
  },
  {
    "text": "I it had a lot of good fans people that really like actually part of commonjs as well yeah so it was a commonjs spec yep",
    "start": "509960",
    "end": "516760"
  },
  {
    "text": "yep so they went they went back to commonjs and so when we talk about server JS in the commonjs community this",
    "start": "516760",
    "end": "522200"
  },
  {
    "text": "was a a mailing list like it wasn't an official standards body it was really like a mailing list of people that uh",
    "start": "522200",
    "end": "528200"
  },
  {
    "text": "argued about specs that they were writing on a Wiki there wasn't much of there wasn't much of a process um and",
    "start": "528200",
    "end": "534560"
  },
  {
    "text": "that I think AMD passed without too much turmoil but when they started Ed to try",
    "start": "534560",
    "end": "539839"
  },
  {
    "text": "and Define promises they got into a lot of trouble um because people just could not",
    "start": "539839",
    "end": "545959"
  },
  {
    "text": "agree and so they ended up with I think five specs or something anyway um yeah so that kind of",
    "start": "545959",
    "end": "553480"
  },
  {
    "text": "brings us to uh es modules right so I",
    "start": "553480",
    "end": "558519"
  },
  {
    "text": "think ES4 had a module spec in it um which you know ES4 kind of died off um",
    "start": "558519",
    "end": "564959"
  },
  {
    "text": "and then there was still though like a spec kind of floating around that was very much based on python very very",
    "start": "564959",
    "end": "570399"
  },
  {
    "text": "pythonic um and that had some really kind of like some some anti-patterns in it that we we really advocated against",
    "start": "570399",
    "end": "577839"
  },
  {
    "text": "um in node for instance like the the import Star from something if You' ever seen this where in in you can do this in",
    "start": "577839",
    "end": "584600"
  },
  {
    "text": "Python and few other module systems where you basically say every property in this module just dump it into the",
    "start": "584600",
    "end": "589839"
  },
  {
    "text": "current name space with that name um it seems really convenient but it makes it impossible to figure out where things in",
    "start": "589839",
    "end": "595959"
  },
  {
    "text": "the scope came from and so it's just a Terri feature that nobody should should be using um but you can do it you can do",
    "start": "595959",
    "end": "603480"
  },
  {
    "text": "it in current es modules but you have to uh it doesn't dump it into the Nam space so you can import Star as Fu and then",
    "start": "603480",
    "end": "610720"
  },
  {
    "text": "use uh use like the the bucket of things off of Foo which is cool right so so",
    "start": "610720",
    "end": "616120"
  },
  {
    "text": "that that dumps it into one property that is named at the top totally reasonable it's totally different but",
    "start": "616120",
    "end": "621640"
  },
  {
    "text": "it's still uh like I I know in in some systems like Java whenever you uh import",
    "start": "621640",
    "end": "628480"
  },
  {
    "text": "Star versus is import something specific your runtime gets a lot bigger because",
    "start": "628480",
    "end": "634600"
  },
  {
    "text": "you have to actually pull in all those things separately they're separate files all that kind of stuff but JavaScript it rarely matters it's usually like a",
    "start": "634600",
    "end": "640399"
  },
  {
    "text": "single file it's rarely like someone re-exporting a bunch of stuff so it ends up not changing anything the the main",
    "start": "640399",
    "end": "647120"
  },
  {
    "text": "problem with it is that you know you have three import statements and uh and they all say import Star from somewhere",
    "start": "647120",
    "end": "653399"
  },
  {
    "text": "and then and you know one of them gets the bar property from Foo and then later in the code it's just calling bar and",
    "start": "653399",
    "end": "658880"
  },
  {
    "text": "you're like where the hell did bar come from like I need to know what this does I need to look up its docks like there's just no way to figure this out um so",
    "start": "658880",
    "end": "666320"
  },
  {
    "text": "that that was so anyway so they they revised the spec um they they made it",
    "start": "666320",
    "end": "672560"
  },
  {
    "text": "it's still pretty pythonic but um it definitely started to use some of the new syntax coming down the pipe um that",
    "start": "672560",
    "end": "677760"
  },
  {
    "text": "was also in es6 stuff like that and were either you involved in the spec process",
    "start": "677760",
    "end": "683320"
  },
  {
    "text": "at that point where it kind of came back on the table um and then Yehuda got involved to try and make it a bit more",
    "start": "683320",
    "end": "689040"
  },
  {
    "text": "um ex like compatible with node no I wasn't I I popped in a little bit",
    "start": "689040",
    "end": "695200"
  },
  {
    "text": "later yeah I mean I followed the the tweets about it I I I'm usually when it comes to",
    "start": "695200",
    "end": "701760"
  },
  {
    "text": "syntax I'm um I'm not a Krogan I'm pretty open to new new syntax so I'm I'm like let's let's have the new syntax",
    "start": "701760",
    "end": "708680"
  },
  {
    "text": "let's let's start hammering on it um and uh using it to see to see what shakes",
    "start": "708680",
    "end": "713720"
  },
  {
    "text": "out so I'm all for like at the time I was all for the import the export all that stuff so",
    "start": "713720",
    "end": "719800"
  },
  {
    "text": "right and and I think like the specs sat in a weird state for quite a while so",
    "start": "719800",
    "end": "725040"
  },
  {
    "text": "this was before um a lot of new processes were put into place um at tc39",
    "start": "725040",
    "end": "731720"
  },
  {
    "text": "so the spec kind of lingered with people poking at it nobody had really implemented it yet um nobody was using",
    "start": "731720",
    "end": "737440"
  },
  {
    "text": "it in the wild because this was kind of pre- Babble um so we didn't have we didn't have kind of you know people",
    "start": "737440",
    "end": "742600"
  },
  {
    "text": "really experimenting with syntax on the bleeding edge like that and I think most importantly now there's a staging",
    "start": "742600",
    "end": "748880"
  },
  {
    "text": "process where you kind of go through stage zero stage one and in each stage there are some bars around how many implementations there need to be and how",
    "start": "748880",
    "end": "755199"
  },
  {
    "text": "much input that they've gotten but there's a couple specs in in what we call es6 which is really es 2015 um that",
    "start": "755199",
    "end": "761959"
  },
  {
    "text": "predate that process uh and one of those specs is the es module spec so so it got finalized before there were really many",
    "start": "761959",
    "end": "768399"
  },
  {
    "text": "implementations out there and um there were some big question marks around like the loader for instance like the the",
    "start": "768399",
    "end": "774440"
  },
  {
    "text": "module loader is another spec in in the w3c that is you know even even less",
    "start": "774440",
    "end": "780040"
  },
  {
    "text": "worked on um so anyway this was at the",
    "start": "780040",
    "end": "785360"
  },
  {
    "text": "time uh that it got kind of ratified in s 2015 there was a lot of people saying you know oh well this is going to be",
    "start": "785360",
    "end": "791240"
  },
  {
    "text": "compatible with node because Yehuda had done a bunch of work looking at you know how node modules look and and work kind",
    "start": "791240",
    "end": "797040"
  },
  {
    "text": "of to spec and how yes modules work and let's make sure that they have feature parody um when Bradley started to really",
    "start": "797040",
    "end": "804079"
  },
  {
    "text": "dig into this though Bradley Mech um and figure out how we might actually you know implement the support he started to",
    "start": "804079",
    "end": "810240"
  },
  {
    "text": "run into a lot of kind of crazy edge cases and gotas um in how nodes module",
    "start": "810240",
    "end": "816240"
  },
  {
    "text": "system not only you know works today and loads modules but also how it can be kind of dynamically shifted and and",
    "start": "816240",
    "end": "822519"
  },
  {
    "text": "stuff like that and and these are not really I mean we call them edge cases uh because you don't find them until you go",
    "start": "822519",
    "end": "827839"
  },
  {
    "text": "way down this rabbit hole but they affect something like you know 20 or 30% of the node ecosystem so it's important",
    "start": "827839",
    "end": "833120"
  },
  {
    "text": "that these actually get fixed um and that's I think where where you really got involved jdd right like you started",
    "start": "833120",
    "end": "838160"
  },
  {
    "text": "to work on spec and and looking at changes so I think you you can really dig into this I got involved um o last",
    "start": "838160",
    "end": "846600"
  },
  {
    "text": "year around June May June um I had seen a lot of the discussion about MJS pop up",
    "start": "846600",
    "end": "854240"
  },
  {
    "text": "uh and I W I didn't really like the idea of a new file extension so I po let's",
    "start": "854240",
    "end": "859959"
  },
  {
    "text": "unwind that a little bit let's unwind that a little bit so like why why do you need an MJS extension like why can't it",
    "start": "859959",
    "end": "865360"
  },
  {
    "text": "like you know in in the in the browser you you have this new script include basically that that signals hey this is",
    "start": "865360",
    "end": "871920"
  },
  {
    "text": "an this is a new style module not an old style JavaScript thing but we don't have that in note you have type equals module",
    "start": "871920",
    "end": "877639"
  },
  {
    "text": "in the browser uh in node node loads Things based off of file extension um",
    "start": "877639",
    "end": "884639"
  },
  {
    "text": "ajs file a Json file a node are handled based on their extension and then it",
    "start": "884639",
    "end": "891199"
  },
  {
    "text": "defaults tojs it falls back if it doesn't recognize the extension um so",
    "start": "891199",
    "end": "897079"
  },
  {
    "text": "for node because the existing module system is commonjs there needs to be a",
    "start": "897079",
    "end": "902399"
  },
  {
    "text": "way to distinguish quickly between uh your par schols if it's going to be common JS or if it's going to be a",
    "start": "902399",
    "end": "908240"
  },
  {
    "text": "module uh an esm module um I wait esm an",
    "start": "908240",
    "end": "913399"
  },
  {
    "text": "esm um because uh they behave differently and there's different rules in place for them uh one of the things",
    "start": "913399",
    "end": "920880"
  },
  {
    "text": "is like uh your ecmascript module is going to have implicit strict mode and",
    "start": "920880",
    "end": "926600"
  },
  {
    "text": "um there's certain syntaxes that are allowed in one and and the other so that's why the extension is is there",
    "start": "926600",
    "end": "932720"
  },
  {
    "text": "okay and you didn't like the idea that there would be this new extension m i mean so I uh yeah I mean I I to me it",
    "start": "932720",
    "end": "940959"
  },
  {
    "text": "it's basically the the problem was is that H all new facing proper JavaScript",
    "start": "940959",
    "end": "947440"
  },
  {
    "text": "proper like ecmascript modules would would require this new extension and uh",
    "start": "947440",
    "end": "954720"
  },
  {
    "text": "it introduced some other things too where it was like well node is not a vacuum even versions of node so projects",
    "start": "954720",
    "end": "961759"
  },
  {
    "text": "don't tend to just support one version of node uh there's usually three versions that you end up supporting um",
    "start": "961759",
    "end": "967600"
  },
  {
    "text": "and so when if if this is introduced you're still going to have to have a a trans pile step if you're if you're",
    "start": "967600",
    "end": "974120"
  },
  {
    "text": "going to want to support node 9 or node 8 um and so then that leades to leads to",
    "start": "974120",
    "end": "980000"
  },
  {
    "text": "things like doubling your package size um because you want to have your MJS and",
    "start": "980000",
    "end": "986040"
  },
  {
    "text": "your JS but then that also leads to things like transpilation is not 100%",
    "start": "986040",
    "end": "991800"
  },
  {
    "text": "accurate so you get these weird edge cases that a bug will appear in your",
    "start": "991800",
    "end": "997120"
  },
  {
    "text": "node 9 code but not your node 10 code in the same package and so I I didn't like the Gap there for that I think there's",
    "start": "997120",
    "end": "1005600"
  },
  {
    "text": "an additional gotcha in the transations too right where you know as we've been working with with tc39 to figure out",
    "start": "1005600",
    "end": "1011319"
  },
  {
    "text": "what parts of the spec maybe need to shift or adjust in order to give to make our support work we're finding things in",
    "start": "1011319",
    "end": "1017480"
  },
  {
    "text": "in the Babel transpilation to today that make the module system behave slightly",
    "start": "1017480",
    "end": "1022639"
  },
  {
    "text": "differently than the spec says and so we're moving towards the spec but we're actually kind of departing from the way",
    "start": "1022639",
    "end": "1028280"
  },
  {
    "text": "that that Babel works so if you're just using transpilation you may actually end up with a completely different Behavior",
    "start": "1028280",
    "end": "1034038"
  },
  {
    "text": "than what you actually wanted but my my main nitpick was just on the the the parse detection or the detection of the",
    "start": "1034039",
    "end": "1040438"
  },
  {
    "text": "goal I I didn't want to introduce a new file extension because that also carries over into the browser I mean you say the",
    "start": "1040439",
    "end": "1045678"
  },
  {
    "text": "browser doesn't matter doesn't uh doesn't care what extension it is but there's already blog posts that say Hey",
    "start": "1045679",
    "end": "1050919"
  },
  {
    "text": "just write all your code in MJS even even for the browser and I uh I just I",
    "start": "1050919",
    "end": "1056559"
  },
  {
    "text": "think that's it's it seems unnecessary and it seems like there should be a way around that um and so I've been I've",
    "start": "1056559",
    "end": "1064160"
  },
  {
    "text": "been kicking around uh Alternatives so last year I introduced with Bradley a",
    "start": "1064160",
    "end": "1069600"
  },
  {
    "text": "proposal called unambiguous JavaScript grammar which is a way that says uh if",
    "start": "1069600",
    "end": "1075880"
  },
  {
    "text": "your module has at least an import or and Export uh then you know that it is",
    "start": "1075880",
    "end": "1082039"
  },
  {
    "text": "an esm file instead of a commonjs file or a script Target um because it has",
    "start": "1082039",
    "end": "1087960"
  },
  {
    "text": "import or export um at the time uh node really wanted that to be mandated by the",
    "start": "1087960",
    "end": "1095159"
  },
  {
    "text": "language so they took it to the tc39 and said hey tc39 uh would you be interested in",
    "start": "1095159",
    "end": "1101320"
  },
  {
    "text": "changing the language to to mandate this basically saying that an es module must have an import or export to make make it",
    "start": "1101320",
    "end": "1108120"
  },
  {
    "text": "a ambiguous uh the the reason is is that if you don't have an import or export",
    "start": "1108120",
    "end": "1113679"
  },
  {
    "text": "there's no way to determine if this is a script file or a commonjs file or uh esm",
    "start": "1113679",
    "end": "1121520"
  },
  {
    "text": "um because it could look like any of them uh that happened to fall through though so they they decided that uh no",
    "start": "1121520",
    "end": "1128440"
  },
  {
    "text": "they would not mandate that and so because they couldn't get a language change they uh went back to saying well",
    "start": "1128440",
    "end": "1135559"
  },
  {
    "text": "since we can't know based on grammar we're going to have to go back based on file extension um and so they they went",
    "start": "1135559",
    "end": "1142720"
  },
  {
    "text": "uh at least right now with that proposal so can you dig a bit more into into the",
    "start": "1142720",
    "end": "1148240"
  },
  {
    "text": "logic there like why why did they they not go with this unambiguous grammar like why didn't they say that because",
    "start": "1148240",
    "end": "1155080"
  },
  {
    "text": "they want um assurances uh so you one of the the things is when you're",
    "start": "1155080",
    "end": "1160120"
  },
  {
    "text": "refactoring your code you might remove an import or you might remove an export uh and uh be in a state where you're a",
    "start": "1160120",
    "end": "1167480"
  },
  {
    "text": "side effect only module which means no import or export uh and then if you do that you've unintentionally changed your",
    "start": "1167480",
    "end": "1173400"
  },
  {
    "text": "par goal so you'll go from implicit strict mode to to to not strict mode um certain keywords will be available to",
    "start": "1173400",
    "end": "1180039"
  },
  {
    "text": "you or not available to you uh so it's a stumbling block right the there needs to",
    "start": "1180039",
    "end": "1185360"
  },
  {
    "text": "be intent there so like in the in the browser you say that something is a type",
    "start": "1185360",
    "end": "1190720"
  },
  {
    "text": "equals module it's very explicit but with unambiguous it requires it at a",
    "start": "1190720",
    "end": "1196600"
  },
  {
    "text": "syntax level and just having import or export it's easy to slip out of that and",
    "start": "1196600",
    "end": "1202280"
  },
  {
    "text": "accidentally go to a different par schal uh which is why there's other proposals now a year later that say Hey you can",
    "start": "1202280",
    "end": "1210000"
  },
  {
    "text": "have a new directive that's like use module uh because that's an explicit opin to uh esm and something that won't",
    "start": "1210000",
    "end": "1218440"
  },
  {
    "text": "likely disappear when you're refactoring your code so that that brings us through up to that spec um so what what does the",
    "start": "1218440",
    "end": "1226480"
  },
  {
    "text": "landscape look like now like who is implementing s modules how have they implemented them like no no is is",
    "start": "1226480",
    "end": "1232520"
  },
  {
    "text": "currently pursuing this uh both in standards and in in an implementation uh trying to make this work with with MJS",
    "start": "1232520",
    "end": "1239400"
  },
  {
    "text": "uh what's the current status of the spec and and the overall implementations in browsers and stuff like that so I",
    "start": "1239400",
    "end": "1244960"
  },
  {
    "text": "believe uh so Edge has experimental um I think Firefox and",
    "start": "1244960",
    "end": "1250200"
  },
  {
    "text": "chrome are both experimental as well and then I believe it has shipped in Safari so basically all the major ones have it",
    "start": "1250200",
    "end": "1256280"
  },
  {
    "text": "either experimental or shipped that means you have to like turn on a flag and about something or other right or",
    "start": "1256280",
    "end": "1262880"
  },
  {
    "text": "have a preview build of the the browser y so it's coming it's it's right around",
    "start": "1262880",
    "end": "1268360"
  },
  {
    "text": "the corner it's super super close it's not something that's like a year out it's something that is like months out",
    "start": "1268360",
    "end": "1275559"
  },
  {
    "text": "so there's also the loader spec right which is its own kind of thing are have",
    "start": "1275559",
    "end": "1280679"
  },
  {
    "text": "they also implemented the loader spec and and are they considering that more experimental somehow I honestly I have I",
    "start": "1280679",
    "end": "1287960"
  },
  {
    "text": "I don't know anything about the loader spec it is a it is super fuzzy to me I",
    "start": "1287960",
    "end": "1293159"
  },
  {
    "text": "have I don't know who's following that I'm I'm I'm over here on the syntax side",
    "start": "1293159",
    "end": "1299120"
  },
  {
    "text": "have you guys seen systemjs check that out at all so systemjs does a lot of stuff with the",
    "start": "1299120",
    "end": "1306159"
  },
  {
    "text": "the loader right um beat with it's built with the es module loader project it's",
    "start": "1306159",
    "end": "1311840"
  },
  {
    "text": "the es module loader polyfill has the lowle like so it's a polyfill of the loader well it uses that in order to do",
    "start": "1311840",
    "end": "1318919"
  },
  {
    "text": "more but uh it uses the minimal polyfill for the loader API and then on top of",
    "start": "1318919",
    "end": "1324960"
  },
  {
    "text": "that it uses it does other stuff um it's pretty cool I I was actually expecting",
    "start": "1324960",
    "end": "1330880"
  },
  {
    "text": "it to catch on a little more because it kind of does a lot of like what jdd is doing now um with like crazy support for",
    "start": "1330880",
    "end": "1339559"
  },
  {
    "text": "all different types of uh things um but I think it went a little too hard into",
    "start": "1339559",
    "end": "1345880"
  },
  {
    "text": "trying to like create its own whole ecosystem and I bet you that's probably what kind of got it but it it does a lot",
    "start": "1345880",
    "end": "1351679"
  },
  {
    "text": "it has a lot of uh loader override type things that like kind of get get towards",
    "start": "1351679",
    "end": "1358760"
  },
  {
    "text": "that that's a guy bedford's project systemjs it's worth checking out uh I don't uh I don't know I mean it has",
    "start": "1358760",
    "end": "1364960"
  },
  {
    "text": "8,000 stars on on GitHub so it's not exactly hurting but I I've never used it so I can't really talk too much about it",
    "start": "1364960",
    "end": "1371440"
  },
  {
    "text": "but I think it's roughly in this space I I believe I've seen a couple projects use it um I know he's really into that",
    "start": "1371440",
    "end": "1377919"
  },
  {
    "text": "loader space so I would I like to find devs that are super passionate about uh",
    "start": "1377919",
    "end": "1383320"
  },
  {
    "text": "a certain topic and kind of defer to them uh for it so I mean if he's if he's in it and probably has is is into all of",
    "start": "1383320",
    "end": "1391400"
  },
  {
    "text": "the spec and and follows all of that stuff so I would say if you have a question or something feel free to Ping them on it yeah it's a cool project",
    "start": "1391400",
    "end": "1398960"
  },
  {
    "text": "people should check it out I had a blog post long time ago as we all did about",
    "start": "1398960",
    "end": "1405440"
  },
  {
    "text": "uh AMD versus commonjs that I thought I'd find spot to to put in here and it's",
    "start": "1405440",
    "end": "1411039"
  },
  {
    "text": "not like uh it's not super important but like there was I remember that post yeah",
    "start": "1411039",
    "end": "1416720"
  },
  {
    "text": "I I think it was a good post uh still it it was like a response I think to some",
    "start": "1416720",
    "end": "1422400"
  },
  {
    "text": "terrible Tom Dale post where it's like give up AMD you've lost everyone else is",
    "start": "1422400",
    "end": "1427559"
  },
  {
    "text": "dumb which is interesting because I'm pretty sure a lot of Ember uses AMD under the cover I was gonna just say",
    "start": "1427559",
    "end": "1433480"
  },
  {
    "text": "that ember does choose yeah so so I think maybe he read my blog post which was it's just that like I don't care",
    "start": "1433480",
    "end": "1439520"
  },
  {
    "text": "what you author in like authoring has like if you're going to compile that's fine but if we're like defining a module",
    "start": "1439520",
    "end": "1446400"
  },
  {
    "text": "spec that just has to work everywhere for everyone in all cases then AMD is the super set like if if if you write",
    "start": "1446400",
    "end": "1454039"
  },
  {
    "text": "synchronous like require statements and you want to use browser file to compile it down compile it down to AMD and then",
    "start": "1454039",
    "end": "1459840"
  },
  {
    "text": "everything will be interoperable whether you use AMD or you use the thing that needs to compile to AMD but like the",
    "start": "1459840",
    "end": "1465600"
  },
  {
    "text": "whole point of it was like why like the the standard that we all choose needs to",
    "start": "1465600",
    "end": "1470880"
  },
  {
    "text": "be usable on the web without nodejs right like you should you shouldn't need a server step in order to like use the",
    "start": "1470880",
    "end": "1478039"
  },
  {
    "text": "default module specification but everyone's going to compile it's just right now everyone compiles like even to",
    "start": "1478039",
    "end": "1484039"
  },
  {
    "text": "this day like browserify compiles down to a function that's wrapped in functions with keys and then webpack",
    "start": "1484039",
    "end": "1490640"
  },
  {
    "text": "uses like these IDs that uh throw everything onto an object and like I feel like we could have kind of like",
    "start": "1490640",
    "end": "1497880"
  },
  {
    "text": "inter able bik code modules uh at least for a long time now we have es6 whatever",
    "start": "1497880",
    "end": "1503200"
  },
  {
    "text": "and it'll be fixed there was even a build step for AMD and that was rjs the the build Optimizer right but that yeah",
    "start": "1503200",
    "end": "1510039"
  },
  {
    "text": "and so I don't care if you keep it a I don't if you if you don't mind authoring an AMD which I didn't then you might as",
    "start": "1510039",
    "end": "1515520"
  },
  {
    "text": "well write it and you you're going to build it but but like AMD worked without a builder it was a it was an",
    "start": "1515520",
    "end": "1521520"
  },
  {
    "text": "optimization step I never understood those kinds of fights uh like if you",
    "start": "1521520",
    "end": "1527120"
  },
  {
    "text": "like commonjs use commonjs if you like AMD use AMD if you're a library author",
    "start": "1527120",
    "end": "1533279"
  },
  {
    "text": "support both and you'll get more users so like I I I understand you uh uh in",
    "start": "1533279",
    "end": "1539240"
  },
  {
    "text": "best DJs were uh a uh AMD or or a UMD uh",
    "start": "1539240",
    "end": "1545120"
  },
  {
    "text": "Creator right uh we didn't talk about that either uh but I would have been",
    "start": "1545120",
    "end": "1550240"
  },
  {
    "text": "more of a fan of just like instead of UMD needing to exist why doesn't commonjs just compile down to AMD like",
    "start": "1550240",
    "end": "1556880"
  },
  {
    "text": "that that was my like use whatever you want and then everyone compiles down to AMD including people who use AMD and",
    "start": "1556880",
    "end": "1562960"
  },
  {
    "text": "that would like solve everyone's problem uh every like at what at what point do you compile it down though do you like",
    "start": "1562960",
    "end": "1568880"
  },
  {
    "text": "if you read a reasonable module do you compile it down before you publish that module or do you just P publish that",
    "start": "1568880",
    "end": "1574320"
  },
  {
    "text": "module in the regular kind of node module system and expect that somebody when they use the browser is going to",
    "start": "1574320",
    "end": "1579440"
  },
  {
    "text": "use it compiled through through everyone much like now like you can't really ship",
    "start": "1579440",
    "end": "1585240"
  },
  {
    "text": "uh es6 or whatever uh or a lot of times you you you have to kind of transpile that way everyone no matter their build",
    "start": "1585240",
    "end": "1592159"
  },
  {
    "text": "stack can can use it so the idea is like your disc folder would have your AMD compiled you write in commonjs and you",
    "start": "1592159",
    "end": "1598559"
  },
  {
    "text": "compile everything down to to uh AMD in your disc folder along with you know your coffee script or whatever we were",
    "start": "1598559",
    "end": "1604919"
  },
  {
    "text": "doing back then yeah I mean I remember I'm I'm like remembering my position during this weird fight with AMD and",
    "start": "1604919",
    "end": "1611520"
  },
  {
    "text": "like the reality was we had like aund like just way too many modules in the",
    "start": "1611520",
    "end": "1617080"
  },
  {
    "text": "node ecosystem that were being used by by like browser tools and being compiled on of the browser to to say okay well",
    "start": "1617080",
    "end": "1624080"
  },
  {
    "text": "we're just going to not use the spec anymore for publishing kind of reusable components um and on the what does it",
    "start": "1624080",
    "end": "1630200"
  },
  {
    "text": "get compiled to side when you use it on the browser yeah AMD made more sense for people to use but also we we could",
    "start": "1630200",
    "end": "1637240"
  },
  {
    "text": "already there was already a spec for ES modules like we knew that there was going to be a module spec in the browser at some point in",
    "start": "1637240",
    "end": "1643679"
  },
  {
    "text": "time it was extremely early and and not like in no way was that a thing that",
    "start": "1643679",
    "end": "1650240"
  },
  {
    "text": "anyone thought would happen anytime soon and it didn't it didn't happen for five more years um right right well hasn't",
    "start": "1650240",
    "end": "1656440"
  },
  {
    "text": "happen right right I I think the thing that I think the thing that nobody really saw coming was um Babble taking",
    "start": "1656440",
    "end": "1662679"
  },
  {
    "text": "off and then Frameworks being built as Babble tool chains like react so at that",
    "start": "1662679",
    "end": "1668440"
  },
  {
    "text": "point right like um you can use these new standards and just have them compiled down to whatever and like it",
    "start": "1668440",
    "end": "1674080"
  },
  {
    "text": "doesn't there's really it's not even worth having an argument over what that's compiled down to if it's you know",
    "start": "1674080",
    "end": "1679399"
  },
  {
    "text": "commonjs like you know AMD or commonjs or whatever as long as there's a good source map I actually think it's still a",
    "start": "1679399",
    "end": "1685159"
  },
  {
    "text": "little bit sad that like it will eventually not be true anymore like eventually modules will work in the",
    "start": "1685159",
    "end": "1690880"
  },
  {
    "text": "browser uh without node but I think it is a bad thing and was bad for the web",
    "start": "1690880",
    "end": "1698279"
  },
  {
    "text": "or whatever um and like there are tons of bad things for the web and it's fine everything's going to be fine but I",
    "start": "1698279",
    "end": "1704120"
  },
  {
    "text": "think it's a bad thing for the web that we let that happen to to the point where",
    "start": "1704120",
    "end": "1709840"
  },
  {
    "text": "like if you want to use JavaScript on the web you also have to use node that like that became a rule right um and",
    "start": "1709840",
    "end": "1717320"
  },
  {
    "text": "that's great for node but bad I think for the web like we locked people into you must use this server side JavaScript",
    "start": "1717320",
    "end": "1724559"
  },
  {
    "text": "thing in order to use this open platform uh that's completely different ecosystem",
    "start": "1724559",
    "end": "1731159"
  },
  {
    "text": "so this is what I argue with though one like referring to it as the server side thing is a little bit disingenuous",
    "start": "1731159",
    "end": "1736240"
  },
  {
    "text": "because when you use it this way you're actually using as like a frontend compile step and and you're using it as like you know the way that you would use",
    "start": "1736240",
    "end": "1742159"
  },
  {
    "text": "python or like well but you don't call python a server language when you use it to just like run a script on your local",
    "start": "1742159",
    "end": "1747200"
  },
  {
    "text": "system right like it's just it's a system language sure I don't care what what I mean is that people already had",
    "start": "1747200",
    "end": "1753279"
  },
  {
    "text": "Ruby build pipelines right like if you but they sucked I mean compared to what",
    "start": "1753279",
    "end": "1758559"
  },
  {
    "text": "we have now I mean they I mean like they they all could have got better in the same amount of time if no no they no",
    "start": "1758559",
    "end": "1764640"
  },
  {
    "text": "they couldn't because like because the people that innovated people that have been innovating in these tool chains get",
    "start": "1764640",
    "end": "1770159"
  },
  {
    "text": "to work in JavaScript and that's the language that they know and love and they're part of that same community and the reason why we have much better tool",
    "start": "1770159",
    "end": "1775600"
  },
  {
    "text": "chain like note is not a particularly great language for this actually like",
    "start": "1775600",
    "end": "1781360"
  },
  {
    "text": "doing doing everything in myio into callbacks is like not particularly good at this case I mean your your bias is",
    "start": "1781360",
    "end": "1787559"
  },
  {
    "text": "showing in my opinion I think I think we can parse JavaScript uh modules and any",
    "start": "1787559",
    "end": "1793279"
  },
  {
    "text": "language that we want like write a par I mean we were in",
    "start": "1793279",
    "end": "1798840"
  },
  {
    "text": "uh for for one thing and and two like there were plenty of really fundamental",
    "start": "1798840",
    "end": "1804640"
  },
  {
    "text": "huge leaps in tooling that happen like in rails and in in a lot of these things",
    "start": "1804640",
    "end": "1810080"
  },
  {
    "text": "like prior to any of this taking off and to think that like that those tools",
    "start": "1810080",
    "end": "1815360"
  },
  {
    "text": "would have just stagnated because node never existed to come save the day because everyone could type everything",
    "start": "1815360",
    "end": "1820919"
  },
  {
    "text": "in JavaScript that's not what I'm saying that's exactly what you're saying no no what I'm saying is no what I'm saying is",
    "start": "1820919",
    "end": "1827440"
  },
  {
    "text": "that it's it's definitely revision is history to say that it would have been better if we didn't have to use node for these things because we we what we get",
    "start": "1827440",
    "end": "1834799"
  },
  {
    "text": "from having a tool chain that can take all of these different node pieces and put them together regardless of what",
    "start": "1834799",
    "end": "1839919"
  },
  {
    "text": "language it's in is more valuable than not having it so we're going to move to the system anyway and the reason that we moved to node was was because these",
    "start": "1839919",
    "end": "1847000"
  },
  {
    "text": "people were able to innovate quicker in JavaScript so like like remember you were at it I I remember that you were",
    "start": "1847000",
    "end": "1852960"
  },
  {
    "text": "here so in 2011 at the first nodec um in Portland",
    "start": "1852960",
    "end": "1858559"
  },
  {
    "text": "we had a panel and we basically asked the one of the questions of the panel was what should you not use node for and",
    "start": "1858559",
    "end": "1864080"
  },
  {
    "text": "everyone on the panel agreed includ right Ryan doll Isaac's like everybody I think Brendan Ike was even on it like",
    "start": "1864080",
    "end": "1871000"
  },
  {
    "text": "you probably don't want to use this for system stuff for you know what you use Mak scripts for and things like that",
    "start": "1871000",
    "end": "1876960"
  },
  {
    "text": "like it's nice to to have a synchronous flow when you do that stuff literally the thing that is maybe the major use",
    "start": "1876960",
    "end": "1882200"
  },
  {
    "text": "case right now in no we were saying no it's probably not good for this and at the time you know Merrick was able to",
    "start": "1882200",
    "end": "1887399"
  },
  {
    "text": "wrap half of the all the modules and node that tells you like the size of the ecosystem at the time that mpm hadn't",
    "start": "1887399",
    "end": "1893639"
  },
  {
    "text": "grown to but you know after that there were so many things written in node um",
    "start": "1893639",
    "end": "1899480"
  },
  {
    "text": "and so many things written in JavaScript that could be compiled down to the browser that it was like oh wow we get to tap into this great ecosystem when we",
    "start": "1899480",
    "end": "1905639"
  },
  {
    "text": "write this tooling this is a much better language to do this in and a bunch of people like stopped doing this stuff in",
    "start": "1905639",
    "end": "1912000"
  },
  {
    "text": "Ruby and started doing it in node like they found it better even though it's not particularly a better no they found",
    "start": "1912000",
    "end": "1917080"
  },
  {
    "text": "it required uh my problem isn't that who made them do this my problem isn't that node",
    "start": "1917080",
    "end": "1924279"
  },
  {
    "text": "existed and offered these tools my problem is that the default thing that we all chose required you to use this",
    "start": "1924279",
    "end": "1931760"
  },
  {
    "text": "single language uh like we we got away from being able to do anything in any",
    "start": "1931760",
    "end": "1937760"
  },
  {
    "text": "other language because we standardized a tool like a specific tool so I'm not mad",
    "start": "1937760",
    "end": "1943519"
  },
  {
    "text": "that node existed but I think node should have compiled down to a common",
    "start": "1943519",
    "end": "1949440"
  },
  {
    "text": "format that worked on the web versus uh having everyone need to switch their",
    "start": "1949440",
    "end": "1955279"
  },
  {
    "text": "entire systems over rather than choose their tool based on their needs or whatever see this is what I don't get",
    "start": "1955279",
    "end": "1961559"
  },
  {
    "text": "the revisionist history is to say like oh well the rails tools aren't good now and that's that's because everyone had",
    "start": "1961559",
    "end": "1967639"
  },
  {
    "text": "to switch over like like of course this has to those because like every tool",
    "start": "1967639",
    "end": "1973960"
  },
  {
    "text": "that takes a node module in the node format and puts it into something compiled for the browser has to have its",
    "start": "1973960",
    "end": "1980559"
  },
  {
    "text": "own interpretation of the module system it doesn't get to leverage noes module system so like that being nodes module",
    "start": "1980559",
    "end": "1986440"
  },
  {
    "text": "system is really no different than it being an AMD as far as Ruby is concerned if you're parsing that in Ruby and you",
    "start": "1986440",
    "end": "1991840"
  },
  {
    "text": "and creating a ruby tool chain around it you don't get any particular benefit actually out of using node you still have to implement the entire module",
    "start": "1991840",
    "end": "1998039"
  },
  {
    "text": "system or at least enough of it to compile things down browser IFI doesn't like use nodes module system it has to",
    "start": "1998039",
    "end": "2003799"
  },
  {
    "text": "actually reimplement it I think that is a very simple way of thinking about that sure uh I I",
    "start": "2003799",
    "end": "2012320"
  },
  {
    "text": "think that these workflows won because they're better honestly I'm not saying that they aren't better I thought they",
    "start": "2012320",
    "end": "2017919"
  },
  {
    "text": "won because just I I want to write in JavaScript and so when the opportunity",
    "start": "2017919",
    "end": "2023159"
  },
  {
    "text": "came to be able to do that uh and have system level access be able to write",
    "start": "2023159",
    "end": "2029000"
  },
  {
    "text": "files and and and load modules uh and reuse code I jumped at it like that that",
    "start": "2029000",
    "end": "2035399"
  },
  {
    "text": "was a no-brainer for me to switch Yeah so I think maybe both of you are misunderstanding me I would have",
    "start": "2035399",
    "end": "2041480"
  },
  {
    "text": "immediately used all of the notes stuff like I think it is the best tool for the job etc etc but I think that it is",
    "start": "2041480",
    "end": "2049960"
  },
  {
    "text": "explicitly anti- web to to essentially say this is the new standard even if",
    "start": "2049960",
    "end": "2056000"
  },
  {
    "text": "it's not a real standard everyone said this is how everyone has to do it from now on which required people running",
    "start": "2056000",
    "end": "2062079"
  },
  {
    "text": "node um and I think the the fact that node was the standard for modules",
    "start": "2062079",
    "end": "2068320"
  },
  {
    "text": "um and it did not work on the web uh without using node was was a step",
    "start": "2068320",
    "end": "2074000"
  },
  {
    "text": "backwards before we took step forwards and that's all I'm say I still used it how do you load AMD modules without any",
    "start": "2074000",
    "end": "2080878"
  },
  {
    "text": "code to load the AMD module uh I mean like AMD by default just works like uh",
    "start": "2080879",
    "end": "2087960"
  },
  {
    "text": "it it injects still a little loader there's still a little loader there like you you you have like the AMG run AMD",
    "start": "2087960",
    "end": "2094358"
  },
  {
    "text": "runtime uh there's even like a miniature one like you know 2K or something alond I think it's called um and and like",
    "start": "2094359",
    "end": "2101520"
  },
  {
    "text": "whenever you like it sets up the name space for things to be able to require and Define and then uh it loads your",
    "start": "2101520",
    "end": "2108680"
  },
  {
    "text": "script and then whenever you require a new script um it is asynchronous so it doesn't run the function until it loads",
    "start": "2108680",
    "end": "2115200"
  },
  {
    "text": "the three scripts that uh you you say are required to to run this and then those are then available inside of uh",
    "start": "2115200",
    "end": "2121839"
  },
  {
    "text": "the function that eventually gets R it works completely without any build and I think that's a good default uh because",
    "start": "2121839",
    "end": "2129200"
  },
  {
    "text": "it doesn't require people who just want to like build a website to learn node uh whatsoever or learn any service at",
    "start": "2129200",
    "end": "2135560"
  },
  {
    "text": "anything so you can actually you can also do this with any module in mpm like",
    "start": "2135560",
    "end": "2141560"
  },
  {
    "text": "there's a thing called browser fi CDN where you can just in a web browser say oh yeah just require this module and not",
    "start": "2141560",
    "end": "2148800"
  },
  {
    "text": "you don't have to have a node build pipeline you don't you don't need a build pipeline like you you can just use it and it and it's not super popular",
    "start": "2148800",
    "end": "2154880"
  },
  {
    "text": "because guess what everybody has a build tool chain anyway no it's not super popular because the only thing I can",
    "start": "2154880",
    "end": "2160280"
  },
  {
    "text": "think of that's worse than requiring node is requiring browserify cdn.com as",
    "start": "2160280",
    "end": "2166640"
  },
  {
    "text": "the required thing to build web pages like like that's not a solution to",
    "start": "2166640",
    "end": "2174440"
  },
  {
    "text": "this problem generally it it is it is uh someone else doing the node build pipeline for you uh that's that's still",
    "start": "2174440",
    "end": "2181880"
  },
  {
    "text": "requires node as a Sidetrack though there is an AMD loader for node too so",
    "start": "2181880",
    "end": "2186920"
  },
  {
    "text": "that was kind of cool you could you could use AMD syntax and and have it work in node as well if you if you",
    "start": "2186920",
    "end": "2193560"
  },
  {
    "text": "required the loader AMD actually even worked in most simple synchronous cases",
    "start": "2193560",
    "end": "2199599"
  },
  {
    "text": "um with a small build step that that didn't need any context of like you",
    "start": "2199599",
    "end": "2205359"
  },
  {
    "text": "could do it with bash like uh so so you just need to add a line up top a lineup bottom essentially wrap it in a require",
    "start": "2205359",
    "end": "2211200"
  },
  {
    "text": "function um and then as long as you had uh essentially statically analyzable",
    "start": "2211200",
    "end": "2217960"
  },
  {
    "text": "with Rex um require statements it could then do a function. two string and then",
    "start": "2217960",
    "end": "2224599"
  },
  {
    "text": "figure out what you're going to require and then not call your function until it asynchronously loaded those things um",
    "start": "2224599",
    "end": "2230599"
  },
  {
    "text": "that that was an alternate thing that most people didn't know about but so you could actually author synchronously and",
    "start": "2230599",
    "end": "2236280"
  },
  {
    "text": "then still ship async uh AMD with like a",
    "start": "2236280",
    "end": "2241359"
  },
  {
    "text": "bash build step that just can cat at a line up top and up bottom all I'm saying is that everything's fine and and I",
    "start": "2241359",
    "end": "2247800"
  },
  {
    "text": "would I used the tools that were the best but I I still think it was anti- web and we could have done better and we",
    "start": "2247800",
    "end": "2253160"
  },
  {
    "text": "should have done better we should I I don't agree I don't agree that it's anti- web but I I will say that I will",
    "start": "2253160",
    "end": "2258400"
  },
  {
    "text": "say that the recurring theme Here is that the thing that is standardized and adopted is just more important than the",
    "start": "2258400",
    "end": "2264280"
  },
  {
    "text": "thing with feature X um and that's like a recurring theme that we'll see in technology forever um that like the the",
    "start": "2264280",
    "end": "2270720"
  },
  {
    "text": "thing that everybody happens to be using the thing that gets the most adoption at a certain point in time um is what we",
    "start": "2270720",
    "end": "2276680"
  },
  {
    "text": "end up standardizing to even if it lacks you know feature X I think that is the direct reason why websites are really",
    "start": "2276680",
    "end": "2283920"
  },
  {
    "text": "slow on mobile devices today like node is node is the reason the the fact that synchronous giant build no seriously",
    "start": "2283920",
    "end": "2290760"
  },
  {
    "text": "this fact that synchronous giant builds became the quick standard of just like",
    "start": "2290760",
    "end": "2295839"
  },
  {
    "text": "take everything in your node modules and build it into this giant object that you ship as a 4 gigabyte file uh at the",
    "start": "2295839",
    "end": "2302640"
  },
  {
    "text": "beginning of your website synchronously that's like the node pattern I thought Alex ston was my co-host Alex",
    "start": "2302640",
    "end": "2308640"
  },
  {
    "text": "Russell that's the problem so like if we would have if we would have started with something that could do asynchronous",
    "start": "2308640",
    "end": "2314400"
  },
  {
    "text": "loading then I think we'd be in a much better place where people would only be loading things that they needed for any",
    "start": "2314400",
    "end": "2319520"
  },
  {
    "text": "given Page by default because that's how it works I I I I actually think that",
    "start": "2319520",
    "end": "2326000"
  },
  {
    "text": "it's very valuable to not have to write a lot of your own code and whoever is the best at you know creating reusable",
    "start": "2326000",
    "end": "2332359"
  },
  {
    "text": "code and dependency networks that allow you to do a lot more while writing a lot less are going to win and eventually",
    "start": "2332359",
    "end": "2337800"
  },
  {
    "text": "that's going to turn into a bigger bundle and like it doesn't really matter who like whoever won was going to be the",
    "start": "2337800",
    "end": "2343319"
  },
  {
    "text": "best at creating this future problem no I mean like by default if you",
    "start": "2343319",
    "end": "2348800"
  },
  {
    "text": "asynchronously loaded packages you could just say uh like nothing has to change",
    "start": "2348800",
    "end": "2354160"
  },
  {
    "text": "is just when you hit this page the new package loads is like a it's a built-in kind of feature to to the asynchronicity",
    "start": "2354160",
    "end": "2361040"
  },
  {
    "text": "of of the thing right now you have to do like uh right now there's some cool stuff with like async A8 on top of",
    "start": "2361040",
    "end": "2367640"
  },
  {
    "text": "imports that people are starting to blob onto for asynchronous imports and those are cool and like finally we're back",
    "start": "2367640",
    "end": "2373680"
  },
  {
    "text": "into a world where this is possible and I think once that catches on to do like hey this is a different view on a",
    "start": "2373680",
    "end": "2379800"
  },
  {
    "text": "different route and has a bunch of different dependencies because it's my settings then once people move like into",
    "start": "2379800",
    "end": "2386400"
  },
  {
    "text": "this idea of sometimes I can asynchronously load uh like dependencies then bundle sizes will immediate like",
    "start": "2386400",
    "end": "2392880"
  },
  {
    "text": "like if you cut your bundle size in half like that's huge uh like just two separate parts your that's insanely huge",
    "start": "2392880",
    "end": "2399920"
  },
  {
    "text": "it's already making its way into build tools too like webpack now supports Dynamic import syntax and should should",
    "start": "2399920",
    "end": "2406119"
  },
  {
    "text": "do that uh deliver part of the bundle up front and then part as needed so I I",
    "start": "2406119",
    "end": "2411440"
  },
  {
    "text": "don't know like I'm I'm somewhat skeptical of like our ability to cut up the application code this much to make a",
    "start": "2411440",
    "end": "2417880"
  },
  {
    "text": "big difference for secondary and third loads when if you have a service worker",
    "start": "2417880",
    "end": "2423319"
  },
  {
    "text": "it gets loaded after the first load anyway and if you have a mechanism by which you can update it before they requested the new code like when you",
    "start": "2423319",
    "end": "2429480"
  },
  {
    "text": "publish something it gets downloaded by the user in the background um before it's actually needed that's always going",
    "start": "2429480",
    "end": "2435400"
  },
  {
    "text": "to be much much faster there are definitely parts of the solution to this problem but you can never get around the",
    "start": "2435400",
    "end": "2440920"
  },
  {
    "text": "fact that the first time that you go to a web page it takes 10 seconds on a a",
    "start": "2440920",
    "end": "2446560"
  },
  {
    "text": "not brand new iPhone uh to to like parse the JavaScript you know it's it's a real",
    "start": "2446560",
    "end": "2452000"
  },
  {
    "text": "problem and it's not going away um and I think that the our current build system is a direct",
    "start": "2452000",
    "end": "2458920"
  },
  {
    "text": "child and and the cause of it is because we we adopted a synchronous server side",
    "start": "2458920",
    "end": "2465760"
  },
  {
    "text": "Tool uh for doing Web Web building and and I don't agree with that at all but",
    "start": "2465760",
    "end": "2472200"
  },
  {
    "text": "okay I think we at some point we have to move on though all right so uh Alex",
    "start": "2472200",
    "end": "2478520"
  },
  {
    "text": "Russell is going to take a break and then we're going to get Alex seon back for a minute all right and then when we",
    "start": "2478520",
    "end": "2484520"
  },
  {
    "text": "come back we can we can get into the project of the week [Music]",
    "start": "2484520",
    "end": "2492510"
  },
  {
    "text": "this episode is brought to you by topt a Global Network of top freelance software developers designers and finance experts",
    "start": "2495720",
    "end": "2504359"
  },
  {
    "text": "if you're looking for contract or freelance opportunities apply to join toptw to work with top clients like",
    "start": "2504359",
    "end": "2509760"
  },
  {
    "text": "Airbnb artsy zendesk and more when you join topt you'll be part of a global",
    "start": "2509760",
    "end": "2514880"
  },
  {
    "text": "community of developers who have the freedom of flexib ability to live where they want travel attend top tile events",
    "start": "2514880",
    "end": "2520920"
  },
  {
    "text": "all over the world and more and on the flip side if you're looking to hire developers designers or Finance experts",
    "start": "2520920",
    "end": "2527800"
  },
  {
    "text": "toptw makes it super easy to find qualified talent to join your team head to tot.com that's T",
    "start": "2527800",
    "end": "2534480"
  },
  {
    "text": "o.com and tell them Adam from The change log sent you this episode of JS party is",
    "start": "2534480",
    "end": "2540760"
  },
  {
    "text": "brought to you by our friends at Century sentury is an open-source air tracking",
    "start": "2540760",
    "end": "2546119"
  },
  {
    "text": "application that shows you every crash in your stack as it happens it gives you details to prioritize identify reproduce",
    "start": "2546119",
    "end": "2554040"
  },
  {
    "text": "and fix each issue they also give you information to support your team so you can use that information to reach out to",
    "start": "2554040",
    "end": "2560280"
  },
  {
    "text": "those affected head to change.com Sentry start tracking your erors today for free get off the ground with their free plan",
    "start": "2560280",
    "end": "2566920"
  },
  {
    "text": "once again Chang log.com Sentry tell them me sent you and back to the",
    "start": "2566920",
    "end": "2573250"
  },
  {
    "text": "[Music] show",
    "start": "2573250",
    "end": "2579119"
  },
  {
    "text": "let's dig in out of the project of the week um so jdd you wrote a loader um to",
    "start": "2581720",
    "end": "2588599"
  },
  {
    "text": "uh I believe this is to the the universal spec right that that you're working on yes so I'm uh as part of lash",
    "start": "2588599",
    "end": "2596680"
  },
  {
    "text": "5 uh so lash 5 is the thing I'm working on uh it's going to be uh es6 plus only",
    "start": "2596680",
    "end": "2604599"
  },
  {
    "text": "and I did not want to have to transpile pilot uh back for node four uh or five",
    "start": "2604599",
    "end": "2612720"
  },
  {
    "text": "or whatever and so I wanted there to be a loader for that um and so I had to",
    "start": "2612720",
    "end": "2618599"
  },
  {
    "text": "create one um so I've created a work in progress this has not been published yet",
    "start": "2618599",
    "end": "2623720"
  },
  {
    "text": "if you go to the repo which is GitHub standard things esm uh you'll see the ecmascript module loader there uh it is",
    "start": "2623720",
    "end": "2631640"
  },
  {
    "text": "for uh node 4 plus it supports js. MJS s",
    "start": "2631640",
    "end": "2637880"
  },
  {
    "text": "it supports Dynamic Imports it supports the file protocol it supports live bindings uh it's going to be a spec",
    "start": "2637880",
    "end": "2645119"
  },
  {
    "text": "compliant by default uh which means that things like unambiguous grammar are off",
    "start": "2645119",
    "end": "2651000"
  },
  {
    "text": "by default but you can opt into them um things like carrying over some of the commonjs goodies like dur name and file",
    "start": "2651000",
    "end": "2657960"
  },
  {
    "text": "name require named exports of commonjs modules all of that can be opted into uh",
    "start": "2657960",
    "end": "2663640"
  },
  {
    "text": "but by default it will follow uh the node behavior of what MJS and esm is in",
    "start": "2663640",
    "end": "2671079"
  },
  {
    "text": "node 10 except it will be available for node 4 plus so uh that's what's nice",
    "start": "2671079",
    "end": "2676680"
  },
  {
    "text": "about that is that you can just ship uh one version of your code and it just works uh the consumers of your package",
    "start": "2676680",
    "end": "2683280"
  },
  {
    "text": "don't have to care about it either um they don't have they don't have to worry about if you're they're loading esm or",
    "start": "2683280",
    "end": "2689240"
  },
  {
    "text": "commonjs for them things will just work so it really just it removes a compile step it removes having to have a a dual",
    "start": "2689240",
    "end": "2696559"
  },
  {
    "text": "packages is uh it allows you to support a a range of node versions um and you",
    "start": "2696559",
    "end": "2702559"
  },
  {
    "text": "can use import export so it's a win so I I really got to ask you so the usage",
    "start": "2702559",
    "end": "2707760"
  },
  {
    "text": "here is you basically you just you do require uh sesm and then the import syntax in the",
    "start": "2707760",
    "end": "2716359"
  },
  {
    "text": "language starts to work properly so how the hell did you do that like okay I'm",
    "start": "2716359",
    "end": "2721480"
  },
  {
    "text": "looking at this going like how how would this ever work so uh for and need to add",
    "start": "2721480",
    "end": "2727400"
  },
  {
    "text": "an example for for common usage what you would normally do is um inside your package you have an",
    "start": "2727400",
    "end": "2733839"
  },
  {
    "text": "index.js uh so your index.js can be basically two lines long the first line",
    "start": "2733839",
    "end": "2739160"
  },
  {
    "text": "is to require the the standard esm loader uh the second line is to then uh",
    "start": "2739160",
    "end": "2744960"
  },
  {
    "text": "require your uh esm code uh usually module. exorts equals require your your",
    "start": "2744960",
    "end": "2751160"
  },
  {
    "text": "whatever MJS and then default um so that's it and then after that all of",
    "start": "2751160",
    "end": "2756440"
  },
  {
    "text": "your M code should just work uh what we do is we tie into nodes module compiling",
    "start": "2756440",
    "end": "2764440"
  },
  {
    "text": "and loading mechanism and we can then parse the code uh transpile it on the",
    "start": "2764440",
    "end": "2771280"
  },
  {
    "text": "fly cach it uh and then load it um but the thing is is because that we're",
    "start": "2771280",
    "end": "2776599"
  },
  {
    "text": "dealing with such a small subset of the language we can make we can do this in microseconds so not even milliseconds",
    "start": "2776599",
    "end": "2783400"
  },
  {
    "text": "super fast it's cached so it's only done once for the lifetime of the the unchanged file um which means that most",
    "start": "2783400",
    "end": "2791960"
  },
  {
    "text": "of the time you'll you'll it will be comparable to commonjs loads and that's how we do it we we just it's a quick",
    "start": "2791960",
    "end": "2798240"
  },
  {
    "text": "it's a quick Speedy transpile uh and then I I selectively wrap the loader uh",
    "start": "2798240",
    "end": "2805040"
  },
  {
    "text": "so what we've been able to do is most of the time whenever you have a loader that you're overwriting it's a global change",
    "start": "2805040",
    "end": "2811599"
  },
  {
    "text": "but that would be uh not good um because you would have modules that all of a sudden start working that did not opt",
    "start": "2811599",
    "end": "2817960"
  },
  {
    "text": "into it so I've done a lot of work to ensure that only packages that are using",
    "start": "2817960",
    "end": "2823280"
  },
  {
    "text": "the standard esm loader get the Behavior I've also done it in a way to where you",
    "start": "2823280",
    "end": "2828559"
  },
  {
    "text": "can support versions of the esm loader so one package can be using version one one package can be using version two and",
    "start": "2828559",
    "end": "2835559"
  },
  {
    "text": "they're not going to conflict or stomp on each other that's impressive that's that's really hard to do properly yeah",
    "start": "2835559",
    "end": "2842079"
  },
  {
    "text": "so so we've got got that going um so the idea is that again the user should not",
    "start": "2842079",
    "end": "2848160"
  },
  {
    "text": "have to the consumer should not have to worry about it it's just a way for you as a as a package author to have your",
    "start": "2848160",
    "end": "2855559"
  },
  {
    "text": "import export with a very little ceremony you basically require it as a as a dependency and then you have that",
    "start": "2855559",
    "end": "2862880"
  },
  {
    "text": "that small hook inside your your index.js file to uh load in your esm",
    "start": "2862880",
    "end": "2868920"
  },
  {
    "text": "code uh which is great because later on if you decide to drop the loader and you only want to do a node 10 plus then you",
    "start": "2868920",
    "end": "2875079"
  },
  {
    "text": "just change the index.js file and and that's it so I wanted it to be super lightweight now I I like again I",
    "start": "2875079",
    "end": "2883040"
  },
  {
    "text": "like I like unambiguous module grammar I don't necessarily want all my code to be",
    "start": "2883040",
    "end": "2888520"
  },
  {
    "text": "MJS I like a lot of the node carryover stuff so for me I'll be configuring it",
    "start": "2888520",
    "end": "2893720"
  },
  {
    "text": "uh with those options but for everyone else it will be standards and as spec compliant as possible by default so that",
    "start": "2893720",
    "end": "2901240"
  },
  {
    "text": "which is great because if it's if it's spec compliant by default then you can take that same code that you're writing",
    "start": "2901240",
    "end": "2906559"
  },
  {
    "text": "and loading a node and then you can take Babel and transform it back if you want to for like a website or you can you can",
    "start": "2906559",
    "end": "2913599"
  },
  {
    "text": "browserify it or or or webpack and bundle it and it should just work so having it be spec compliant by default",
    "start": "2913599",
    "end": "2920240"
  },
  {
    "text": "it's a pretty nice default well and and to make you know Alex here very happy it",
    "start": "2920240",
    "end": "2925359"
  },
  {
    "text": "means that you can just use this in the browser without any tooling and without node right well yeah you so here's the",
    "start": "2925359",
    "end": "2931559"
  },
  {
    "text": "deal eventually eventually when when we have ra some support well no B so so",
    "start": "2931559",
    "end": "2938079"
  },
  {
    "text": "node so esm in node will still have node's module resolution lookup I",
    "start": "2938079",
    "end": "2943480"
  },
  {
    "text": "believe oh right right so that doesn't transfer over to that doesn't transfer over to the browser I wish it did",
    "start": "2943480",
    "end": "2949359"
  },
  {
    "text": "because that's super handy but whatever it could with with a loader over right I assume that is that is that is correct",
    "start": "2949359",
    "end": "2955200"
  },
  {
    "text": "you are you are right so but the the good thing is is that existing tools",
    "start": "2955200",
    "end": "2960240"
  },
  {
    "text": "should continue to work so this is something that you can opt into it gives you enhanced uh support so another thing",
    "start": "2960240",
    "end": "2967200"
  },
  {
    "text": "I like is that with with node version 7 plus it's like 99.9% uh es6 compliant right it's just",
    "start": "2967200",
    "end": "2975280"
  },
  {
    "text": "essentially missing like tail call and uh import export so this this little",
    "start": "2975280",
    "end": "2982559"
  },
  {
    "text": "this import loader this esm loader just adds that import export bit uh to the",
    "start": "2982559",
    "end": "2987880"
  },
  {
    "text": "language so it's not having to support a ton of crazy stuff that's why it can also be super fast uh in inside of its",
    "start": "2987880",
    "end": "2994760"
  },
  {
    "text": "um its Transformations uh one of the first things I did was reach out to uh one of the acorn devs to see if they",
    "start": "2994760",
    "end": "3001000"
  },
  {
    "text": "could come up with a way to do a fast top level parse uh and they sure enough they were able to cook one up in like a",
    "start": "3001000",
    "end": "3007000"
  },
  {
    "text": "day and a half I then took that to a project uh called rapi which is uh done",
    "start": "3007000",
    "end": "3012559"
  },
  {
    "text": "by Benjamin or Ben Newman and rifi is is what my loader is based on so then I",
    "start": "3012559",
    "end": "3018520"
  },
  {
    "text": "started contributing to rifi improving its load time improving its parse time uh adding support for uh gzipped modules",
    "start": "3018520",
    "end": "3026760"
  },
  {
    "text": "some other things uh and then from there am now able to fork and create the esm",
    "start": "3026760",
    "end": "3031960"
  },
  {
    "text": "letter so it's been it's been like a 4mon plus process on this that's it for",
    "start": "3031960",
    "end": "3039240"
  },
  {
    "text": "me yes but well so four months for me but for Ben Ben Ben Ben has been working",
    "start": "3039240",
    "end": "3044880"
  },
  {
    "text": "on this project for over a year so I'm leveraging the work and the experience",
    "start": "3044880",
    "end": "3050400"
  },
  {
    "text": "uh a project that has not only been worked on for a year but it's being used by meteorjs right now in production so",
    "start": "3050400",
    "end": "3057319"
  },
  {
    "text": "it gives me confidence that wow so this thing this thing is not just like it's more there's some substance to it it's",
    "start": "3057319",
    "end": "3064079"
  },
  {
    "text": "not just all Theory this is something that is actually being used at a company people depend on it uh so I I felt a",
    "start": "3064079",
    "end": "3070480"
  },
  {
    "text": "little more confident taking that as my basing it as as as my approach to the the problem as well and I like to me",
    "start": "3070480",
    "end": "3078040"
  },
  {
    "text": "it's super simple it's one function called and after that you get it what's nice is as you see based on the readme",
    "start": "3078040",
    "end": "3084079"
  },
  {
    "text": "it works in the rippel the node reppel too which is you just require it and then all of a sudden the syntax just works import export after that uh which",
    "start": "3084079",
    "end": "3091319"
  },
  {
    "text": "is super handy um so I I I dig that too um one of the things that I'm I'm",
    "start": "3091319",
    "end": "3096520"
  },
  {
    "text": "excited about that's non-standard is the support of gzipped modules so you know",
    "start": "3096520",
    "end": "3102359"
  },
  {
    "text": "you know the browser supports gzip compression for your your resources JavaScript CSS HTML it it seamlessly uh",
    "start": "3102359",
    "end": "3110000"
  },
  {
    "text": "handles that node doesn't uh seamlessly handle that loading those kinds of resources uh node has G support built in",
    "start": "3110000",
    "end": "3118119"
  },
  {
    "text": "but there's just not a loader mechanism for it um because load Das is depended",
    "start": "3118119",
    "end": "3123599"
  },
  {
    "text": "on by a good chunk of the ecosystem um I get to see report after report about",
    "start": "3123599",
    "end": "3129760"
  },
  {
    "text": "file size and the current build tools going back to like build tools having some issues uh the current build tools",
    "start": "3129760",
    "end": "3136720"
  },
  {
    "text": "don't show the minified gzipped size of something they show the on disk size of",
    "start": "3136720",
    "end": "3143040"
  },
  {
    "text": "your node modules package uh and low Dash happens to to ship it's Dev build",
    "start": "3143040",
    "end": "3148920"
  },
  {
    "text": "in the node package so that means it's got all of its source all of its documentation and source code inlined um",
    "start": "3148920",
    "end": "3154960"
  },
  {
    "text": "so it's a 4 megabyte uh on dis low das5 will be gzipped and will be less than 90",
    "start": "3154960",
    "end": "3161839"
  },
  {
    "text": "kilobytes on disk so I've I've optimized it heavily there and one of the secret",
    "start": "3161839",
    "end": "3167520"
  },
  {
    "text": "sauces to that is loading uh gzi files uh seamlessly so to the end user their",
    "start": "3167520",
    "end": "3173720"
  },
  {
    "text": "code will just work um but in instead of it loading ajs file it's loading a gjs",
    "start": "3173720",
    "end": "3179760"
  },
  {
    "text": "Dogz or MJS Dogz file I mean so word a caution though not everybody should do that because if you if you have a lot of",
    "start": "3179760",
    "end": "3186359"
  },
  {
    "text": "tiny GB files they end up being like really large actually right like there's not a huge amount of uh benefit to that",
    "start": "3186359",
    "end": "3193960"
  },
  {
    "text": "and I imagine uncompressing it um in real time can be kind of slow as well for that so actually uh if you gzipped",
    "start": "3193960",
    "end": "3201359"
  },
  {
    "text": "so I did an experiment where I just gzip my node modules folder uh Babble you know uh after a while your build tools",
    "start": "3201359",
    "end": "3208079"
  },
  {
    "text": "and your build change you you'll have over a gigabyte inside your node modules folder uh so I gzipped it and I saved",
    "start": "3208079",
    "end": "3215040"
  },
  {
    "text": "500 megabytes uh out of the gate uh and it turns out that iio reading from disk",
    "start": "3215040",
    "end": "3220799"
  },
  {
    "text": "is actually more expensive in many cases than inflating gzip uh uh through your",
    "start": "3220799",
    "end": "3226760"
  },
  {
    "text": "CPU um so in many cases a small Gip files will actually load faster uh Isaac",
    "start": "3226760",
    "end": "3234559"
  },
  {
    "text": "uh of mpm formally noed uh has also uh written a 3X faster gzip loader uh which",
    "start": "3234559",
    "end": "3242319"
  },
  {
    "text": "is what I'm also using um so it's it's super fast uh I'll be using it for like",
    "start": "3242319",
    "end": "3248359"
  },
  {
    "text": "I said for low Dash I like that because it's low Dash is you can if you if you",
    "start": "3248359",
    "end": "3253400"
  },
  {
    "text": "want to load the kitchen sink it's 600 plus modules so I'm using that as my Benchmark for the esm loader as well",
    "start": "3253400",
    "end": "3259640"
  },
  {
    "text": "seeing like how fast I can load 600 plus modules in node with or without the gzip",
    "start": "3259640",
    "end": "3265400"
  },
  {
    "text": "there so I will say it's it's not a silver bullet but for me since most people have multiple versions of low Das",
    "start": "3265400",
    "end": "3272079"
  },
  {
    "text": "4 megabytes Time 4 megabytes Time 4 megabytes or or plus 4 megabytes starts to add up um and eat into people's",
    "start": "3272079",
    "end": "3278640"
  },
  {
    "text": "quotas for things like Azure functions or AWS lambdas or electron apps and",
    "start": "3278640",
    "end": "3283799"
  },
  {
    "text": "things like that like your your node modules folder tends to inflate and and can have consequences so it's nice to be",
    "start": "3283799",
    "end": "3290119"
  },
  {
    "text": "able to have a way to to to zip that up that's a really good point yeah but yeah",
    "start": "3290119",
    "end": "3296720"
  },
  {
    "text": "it's opt in though I'll be using it the actual esm loader so what this doesn't show is that the esm loader will will be",
    "start": "3296720",
    "end": "3303200"
  },
  {
    "text": "a zero dependency package and will be under 30 or under 40 kilobytes so the",
    "start": "3303200",
    "end": "3308480"
  },
  {
    "text": "esm loader is not only small but zero dependency as well so I wanted people to",
    "start": "3308480",
    "end": "3313880"
  },
  {
    "text": "be able to feel like they can add this to their Project without having it bloat it up so I'm using web pack to actually",
    "start": "3313880",
    "end": "3321079"
  },
  {
    "text": "build optimize the loader uh I'm using zop flea to compress it and then using",
    "start": "3321079",
    "end": "3326319"
  },
  {
    "text": "using the built-in gzip support to load it up and execute it and it actually runs on par with a non- gzipped version",
    "start": "3326319",
    "end": "3333039"
  },
  {
    "text": "but it goes from being over 240 kilobytes to just being under 40 kilobytes so again it'll be fast it'll",
    "start": "3333039",
    "end": "3340599"
  },
  {
    "text": "be small zero dependency package that you can just include lash will be taking a dependency on it I'm uh incorporating",
    "start": "3340599",
    "end": "3348920"
  },
  {
    "text": "feedback from people like caurus because he's he's massive in the ecosystem and so I want him on board with the esm",
    "start": "3348920",
    "end": "3355760"
  },
  {
    "text": "loader as well well the naming is that based on his his tweet that said I will",
    "start": "3355760",
    "end": "3360960"
  },
  {
    "text": "never move to MJS in the history I had been I had been uh discussing this with",
    "start": "3360960",
    "end": "3366599"
  },
  {
    "text": "him uh before that even if you notice in his tweet he says he might use the the loader that I'm working on so oh nice",
    "start": "3366599",
    "end": "3372720"
  },
  {
    "text": "he's been in the loop for a while so uh I like even the name uh I one of the",
    "start": "3372720",
    "end": "3378280"
  },
  {
    "text": "first things I did was look up a a standard official looking name uh and",
    "start": "3378280",
    "end": "3383400"
  },
  {
    "text": "and get the name space for that in the package uh for that um it's because I want it to feel official I want it to be",
    "start": "3383400",
    "end": "3390559"
  },
  {
    "text": "spec compliant I want it to be easy to reach for uh and use and that would be a",
    "start": "3390559",
    "end": "3396559"
  },
  {
    "text": "userland solution to this whole like MJS esm compatibility issue that will crop",
    "start": "3396559",
    "end": "3404799"
  },
  {
    "text": "up so Corbin in the uh in the chat is asking you know just general kind of",
    "start": "3404799",
    "end": "3410520"
  },
  {
    "text": "what's the SSD and CPU um on what you're doing these benchmarks on oh good question so I have have a",
    "start": "3410520",
    "end": "3418400"
  },
  {
    "text": "what it's the uh the MacBook Pro uh touch bar laptop plugged in um even",
    "start": "3418400",
    "end": "3426960"
  },
  {
    "text": "unplugged I get similar speeds unless I'm on low battery and that's when CPU starts to kick in uh I will say that it",
    "start": "3426960",
    "end": "3433200"
  },
  {
    "text": "varies uh from Project to project but the cost to me isn't egregious and in",
    "start": "3433200",
    "end": "3439200"
  },
  {
    "text": "some cases is a benefit so for me the file size savings is is the biggest win for the compressed file what the what",
    "start": "3439200",
    "end": "3446640"
  },
  {
    "text": "are people's concern there they're just on like a a resource constrained device like a like a Raspberry Pi or something",
    "start": "3446640",
    "end": "3452760"
  },
  {
    "text": "well I I also think that like when you're comparing the trade-off of gzip right is that it's a lower file size but",
    "start": "3452760",
    "end": "3458240"
  },
  {
    "text": "then you have to take some CPU Cycles to decompress it and so if you have you know it matters if you have a a fast CPU",
    "start": "3458240",
    "end": "3464680"
  },
  {
    "text": "versus a slow disc or a slow disc versus a fast CPU um or if you just have a fast both right right on a MacBook I mean you",
    "start": "3464680",
    "end": "3472119"
  },
  {
    "text": "do have an SSD but you're also on top of the worst file system ever created by human beings but also this is also a",
    "start": "3472119",
    "end": "3478119"
  },
  {
    "text": "single time load for the lifetime of the application because node caches the loaded modules as well so what you're",
    "start": "3478119",
    "end": "3484480"
  },
  {
    "text": "looking up is uh what you'll be concerned with is your startup cost uh and and that's something that you can",
    "start": "3484480",
    "end": "3490079"
  },
  {
    "text": "weigh for me uh the benefits pretty clear because most PE so I for I I",
    "start": "3490079",
    "end": "3495200"
  },
  {
    "text": "should also mention this is that L Das 5 will not have an index file will not have a a main monolithic include",
    "start": "3495200",
    "end": "3502000"
  },
  {
    "text": "everything is cherry-picked um which means that um a common usage is for",
    "start": "3502000",
    "end": "3507640"
  },
  {
    "text": "people to reach for about five or six of the 300 plus methods and just use five or six um so for me five or six small",
    "start": "3507640",
    "end": "3516440"
  },
  {
    "text": "loads are nothing right and so I get to save over three megabytes in package",
    "start": "3516440",
    "end": "3522720"
  },
  {
    "text": "download and and have almost negligible impact on load uh it's a win for me in",
    "start": "3522720",
    "end": "3528480"
  },
  {
    "text": "that case so does that so right now I I actually end up pulling down the the low",
    "start": "3528480",
    "end": "3533960"
  },
  {
    "text": "Dash do whatever method that I need from from mpm so that I get a smaller version",
    "start": "3533960",
    "end": "3539039"
  },
  {
    "text": "um how is that going to change in L das5 with this oh so so that actually ends up being a larger version um so you're I'm",
    "start": "3539039",
    "end": "3547079"
  },
  {
    "text": "I'm I'm stopping the the individually packaged methods like the low dash.",
    "start": "3547079",
    "end": "3552559"
  },
  {
    "text": "chunk package um because turns out code can't be shared very well across those",
    "start": "3552559",
    "end": "3558559"
  },
  {
    "text": "packages something that's nice about a a single package that has a lot of subm modules within it is that you can use",
    "start": "3558559",
    "end": "3565440"
  },
  {
    "text": "build uh optimizations inside webpack or Babel to Alias and reduce functionality",
    "start": "3565440",
    "end": "3573000"
  },
  {
    "text": "and that's something that doesn't travel well across packages um so I would end up actually duplicating a lot of code in",
    "start": "3573000",
    "end": "3579680"
  },
  {
    "text": "those individual packages um something I'm doing with the L Das 5 is before uh",
    "start": "3579680",
    "end": "3586799"
  },
  {
    "text": "it went give you all the functionality up front and then you have to opt out of",
    "start": "3586799",
    "end": "3591960"
  },
  {
    "text": "functionality which means it created a bigger build by default uh L 5 is going",
    "start": "3591960",
    "end": "3597039"
  },
  {
    "text": "in the opposite direction and giving you minimal functionality up front and then there's there will be mechanisms for you",
    "start": "3597039",
    "end": "3602680"
  },
  {
    "text": "to opt into more functionality so you'll get smaller builds by default so with",
    "start": "3602680",
    "end": "3607799"
  },
  {
    "text": "that I I think that uh the need for individual packages uh will be reduced",
    "start": "3607799",
    "end": "3613680"
  },
  {
    "text": "and I can standardize folks on just using the single low Das package and the build tools that around that like the",
    "start": "3613680",
    "end": "3619400"
  },
  {
    "text": "web pack and babble or whatever you need to optimize and enhance your package and bundle so in order to do this are roll",
    "start": "3619400",
    "end": "3627000"
  },
  {
    "text": "up and webpack going to have to become aware of your module system or actually",
    "start": "3627000",
    "end": "3632400"
  },
  {
    "text": "uh for the gzip files they will they will have to become aware I've already contributed the loader to webpack and",
    "start": "3632400",
    "end": "3638680"
  },
  {
    "text": "it's part of their webpack contrib so it's already in webpack it's already been published for them for the other",
    "start": "3638680",
    "end": "3644839"
  },
  {
    "text": "ones yeah they'll have to uh what's great is that it's it's about two lines of JavaScript to get it to work uh it's",
    "start": "3644839",
    "end": "3652039"
  },
  {
    "text": "really not complex because node already has gzip support uh has has a has a ZB",
    "start": "3652039",
    "end": "3657200"
  },
  {
    "text": "module so it's like you read the file in as a buffer you pass it to the gzip",
    "start": "3657200",
    "end": "3662760"
  },
  {
    "text": "decompressor and then you spit out the output so it's super tiny but yeah they'll have to they'll have to add that",
    "start": "3662760",
    "end": "3669039"
  },
  {
    "text": "and I think that with low Dash it will get added so so I'm not I'm not super worried about that there there will be a",
    "start": "3669039",
    "end": "3675559"
  },
  {
    "text": "time where like webpack will have it uh and others won't but I I kind of I use",
    "start": "3675559",
    "end": "3681640"
  },
  {
    "text": "webpack it's it's the thing with momentum so I I went and targeted that first that's great Alex do you have any",
    "start": "3681640",
    "end": "3687760"
  },
  {
    "text": "remaining questions before we move on to picks no I think let's do some picks yeah yeah this is all super compelling",
    "start": "3687760",
    "end": "3693640"
  },
  {
    "text": "all right Alex why don't you kick us off uh I am going to pick uh somewhat of an",
    "start": "3693640",
    "end": "3699400"
  },
  {
    "text": "ecosystem of ideas kind of uh it's it's the fantasy land specification so um at",
    "start": "3699400",
    "end": "3708960"
  },
  {
    "text": "stripe we use some types and then there are some people who are really into types uh and they make me use them a",
    "start": "3708960",
    "end": "3715480"
  },
  {
    "text": "little more than I like but some things end up being really pretty and good uh and there's uh there's kind of this",
    "start": "3715480",
    "end": "3723200"
  },
  {
    "text": "specification for interoperability of common algebraic structures in JavaScript called Fantasy Land um I",
    "start": "3723200",
    "end": "3729559"
  },
  {
    "text": "think they're referring to the fact that if everyone used this everything would be so much better which is like maybe",
    "start": "3729559",
    "end": "3735400"
  },
  {
    "text": "actually I I believe that they were naming that because someone had been poking fun at them in a in in a in a",
    "start": "3735400",
    "end": "3742839"
  },
  {
    "text": "like a Reddit thread and they said you must be living in a fantasy land um and then that's how the spec name came I so",
    "start": "3742839",
    "end": "3750079"
  },
  {
    "text": "I like it a lot but I agree that it is a fantasy land but they have just like a set uh and we use some subset of these",
    "start": "3750079",
    "end": "3756880"
  },
  {
    "text": "at stripe uh as part of our stuff but it's just like uh whenever you need either uh algebraic structure to handle",
    "start": "3756880",
    "end": "3765079"
  },
  {
    "text": "errors and uh left map right map whatever type stuff but then the there's a kind of a community that wraps popular",
    "start": "3765079",
    "end": "3772319"
  },
  {
    "text": "things so for instance there's a low Dash fantasy land uh implementation that",
    "start": "3772319",
    "end": "3777720"
  },
  {
    "text": "oh way yeah so you can get that or you can get ramda Fantasy Land as well like",
    "start": "3777720",
    "end": "3783200"
  },
  {
    "text": "any of that different stuff that kind of like uh it's not only is it typed because there are like uh type deps for",
    "start": "3783200",
    "end": "3789359"
  },
  {
    "text": "both typescript and and uh flow type but uh but also it adds in these uh kind of",
    "start": "3789359",
    "end": "3795240"
  },
  {
    "text": "algebraic structures for for how things come back and and and how you use them and things and it's cool uh I think if",
    "start": "3795240",
    "end": "3801839"
  },
  {
    "text": "you kind of start with it um or use it for some like base core of uh you know",
    "start": "3801839",
    "end": "3807279"
  },
  {
    "text": "your fetching code or something like that like any sub ecosystem could completely use this and be pretty",
    "start": "3807279",
    "end": "3813920"
  },
  {
    "text": "successful uh even if you can't use it like across everything because like other libraries don't necessarily I tend",
    "start": "3813920",
    "end": "3821079"
  },
  {
    "text": "to think uh for functional programming a little goes a long way I'm into the a",
    "start": "3821079",
    "end": "3827760"
  },
  {
    "text": "little bit in moderation is a good thing yeah um I am on the fence about this",
    "start": "3827760",
    "end": "3833480"
  },
  {
    "text": "whole FP thing I I I offer functional uh forms of low Dash modules called Low Das",
    "start": "3833480",
    "end": "3839920"
  },
  {
    "text": "FP it's built into the the existing 4.0 um and that has everything autoc",
    "start": "3839920",
    "end": "3846480"
  },
  {
    "text": "carried data last immutable all of that stuff right um and I I kind of see it in",
    "start": "3846480",
    "end": "3853079"
  },
  {
    "text": "the same vein as like I supported AMD uh and the fans of AMD are were so uh",
    "start": "3853079",
    "end": "3862480"
  },
  {
    "text": "gung-ho and so supportive that they gave my li they gave low Dash a boost right",
    "start": "3862480",
    "end": "3869160"
  },
  {
    "text": "in terms of usage and they were super loyal uh and I see FP as kind of that same thing where it may not be as big of",
    "start": "3869160",
    "end": "3875760"
  },
  {
    "text": "an audience but they are very enthusiastic the users of of functional uh programming styles are very",
    "start": "3875760",
    "end": "3882440"
  },
  {
    "text": "enthusiastic they're super eager to help so I I'm trying to decide how to how to",
    "start": "3882440",
    "end": "3887599"
  },
  {
    "text": "continue that with lash 5 too totally cool yeah yeah you should look into Fantasy Land yeah it's actually the the",
    "start": "3887599",
    "end": "3895760"
  },
  {
    "text": "most requested feature on low Dash right now is a fantasy land compliant version well cool bet you didn't know that yeah",
    "start": "3895760",
    "end": "3902160"
  },
  {
    "text": "man totally totally close I did see that issue but but yeah yeah all right um",
    "start": "3902160",
    "end": "3908400"
  },
  {
    "text": "Alex or sorry jdd you got a pick for us I do have a pick um and it is for",
    "start": "3908400",
    "end": "3914599"
  },
  {
    "text": "projects like Babel I would say they're always looking for uh contributors to",
    "start": "3914599",
    "end": "3919760"
  },
  {
    "text": "help um so there's projects that I see are requesting for contributions and",
    "start": "3919760",
    "end": "3925200"
  },
  {
    "text": "poor request would be things like mocha momentjs Babel um if you're looking for",
    "start": "3925200",
    "end": "3931279"
  },
  {
    "text": "to to get into open source uh and you're looking to kind of get your feet wet uh",
    "start": "3931279",
    "end": "3936640"
  },
  {
    "text": "they have open issues that are uh tagged for things like good time first uh",
    "start": "3936640",
    "end": "3942520"
  },
  {
    "text": "contribution uh documentation tweaks things like that are a good way to get into open source and you're really going",
    "start": "3942520",
    "end": "3948000"
  },
  {
    "text": "to be helping out the projects so I would say like look look to those especially if you use them in your day",
    "start": "3948000",
    "end": "3953920"
  },
  {
    "text": "job like if you're used bble go contribute back to it if you use momentjs which is awesome for dates uh",
    "start": "3953920",
    "end": "3961079"
  },
  {
    "text": "you know contribute back a little bit it means the world to the contributors I mean they're they're just like everyone else they're trying to find the time to",
    "start": "3961079",
    "end": "3967480"
  },
  {
    "text": "work on projects so having a a helping hand or you know even contributing like",
    "start": "3967480",
    "end": "3973160"
  },
  {
    "text": "feedback to an issue or documentation is a big help so check out uh Babel",
    "start": "3973160",
    "end": "3978839"
  },
  {
    "text": "momentjs uh and mocha yeah the time may have passed but for a long time the best",
    "start": "3978839",
    "end": "3984359"
  },
  {
    "text": "place to find to contribute where where anything that TJ wrote and abandoned uh",
    "start": "3984359",
    "end": "3989880"
  },
  {
    "text": "was in dire need of people to to do easy fixes so I guess mocha still Falls there",
    "start": "3989880",
    "end": "3995520"
  },
  {
    "text": "but yeah but I I'm just like that would that means the world to people like help out uh load Das itself is in a pretty",
    "start": "3995520",
    "end": "4002039"
  },
  {
    "text": "good stable state I'm I'm taking my time with version five so I'm I'm coasting on",
    "start": "4002039",
    "end": "4007440"
  },
  {
    "text": "that front but on these other ones these other projects they could really use some some some help managing issues and",
    "start": "4007440",
    "end": "4014039"
  },
  {
    "text": "pull requests and features cool all right my pick is a map Zen um",
    "start": "4014039",
    "end": "4019720"
  },
  {
    "text": "if you've ever had like integrate a map uh with a website or app that you're using um You probably poked around with",
    "start": "4019720",
    "end": "4025279"
  },
  {
    "text": "a few things that are terrible and then settled on Mbox and Mbox definitely set like a great standard they were better",
    "start": "4025279",
    "end": "4031079"
  },
  {
    "text": "than everything else um but they get really pricey really fast um if you kind",
    "start": "4031079",
    "end": "4036640"
  },
  {
    "text": "of blow out the free tier um and also I mean I just have a bunch of codes sitting around that I have to copy and",
    "start": "4036640",
    "end": "4042799"
  },
  {
    "text": "paste in in order to figure out how to do things um so the maps and JavaScript API is just a little bit more evolved a",
    "start": "4042799",
    "end": "4050279"
  },
  {
    "text": "little bit easier to use they've got a lot of like just they have a lot of the same kind of support and cool tools and everything but it's just a bit easier um",
    "start": "4050279",
    "end": "4057480"
  },
  {
    "text": "the ergonomics are a bit nicer and uh much more incremental pricing so um love and map in that's it cool all right",
    "start": "4057480",
    "end": "4066480"
  },
  {
    "text": "thanks everybody for joining us thanks jdd for coming on for this episode thanks for having me yeah yeah anytime",
    "start": "4066480",
    "end": "4073520"
  },
  {
    "text": "um and uh with that we're we're all done for the day thanks everybody bye",
    "start": "4073520",
    "end": "4080559"
  },
  {
    "text": "bye all right thank you for tuning in to GS party this week thanks also to our",
    "start": "4080720",
    "end": "4086000"
  },
  {
    "text": "sponsors top to Century and hired also thanks to fastly our bandwidth partner",
    "start": "4086000",
    "end": "4091680"
  },
  {
    "text": "head toast.com to learn more we host everything we do on Leno servers head to",
    "start": "4091680",
    "end": "4096838"
  },
  {
    "text": "lin.com changelog check them out support the show this show is produced by myself",
    "start": "4096839",
    "end": "4102000"
  },
  {
    "text": "Adam stovak and edited by Jonathan Young Blood and the awesome music you've been hearing is produced by the mysterious",
    "start": "4102000",
    "end": "4108040"
  },
  {
    "text": "break master cylinder we do this show live every Friday at 300 p.m. us Eastern",
    "start": "4108040",
    "end": "4113880"
  },
  {
    "text": "noon Pacific so join us at Chang law.com slack with us in real time head to Chang",
    "start": "4113880",
    "end": "4121480"
  },
  {
    "text": "law.com Community we'll see you again next week thanks for [Music]",
    "start": "4121480",
    "end": "4134440"
  },
  {
    "text": "listening [Music]",
    "start": "4134440",
    "end": "4164359"
  },
  {
    "text": "he no",
    "start": "4164359",
    "end": "4169758"
  }
]