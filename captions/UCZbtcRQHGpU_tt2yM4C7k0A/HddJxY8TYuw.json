[
  {
    "text": "how",
    "start": "2720",
    "end": "3679"
  },
  {
    "text": "do you actually use postgres",
    "start": "3679",
    "end": "7040"
  },
  {
    "text": "and i'm even thinking like in the",
    "start": "7040",
    "end": "8400"
  },
  {
    "text": "context of say a",
    "start": "8400",
    "end": "10240"
  },
  {
    "text": "website that is hosting a blog at what",
    "start": "10240",
    "end": "13599"
  },
  {
    "text": "point",
    "start": "13599",
    "end": "14000"
  },
  {
    "text": "would you make a connection to postgres",
    "start": "14000",
    "end": "16400"
  },
  {
    "text": "do you tend",
    "start": "16400",
    "end": "17119"
  },
  {
    "text": "to make one connection per instance",
    "start": "17119",
    "end": "20640"
  },
  {
    "text": "of your code running and then create",
    "start": "20640",
    "end": "23359"
  },
  {
    "text": "sessions off that or does",
    "start": "23359",
    "end": "24960"
  },
  {
    "text": "each handler would each handler make its",
    "start": "24960",
    "end": "27439"
  },
  {
    "text": "own connection how does it actually work",
    "start": "27439",
    "end": "30240"
  },
  {
    "text": "you know from a go developer's point of",
    "start": "30240",
    "end": "31760"
  },
  {
    "text": "view yeah so",
    "start": "31760",
    "end": "33600"
  },
  {
    "text": "if we take a step back and look at the",
    "start": "33600",
    "end": "35600"
  },
  {
    "text": "uh standard library database sql package",
    "start": "35600",
    "end": "38320"
  },
  {
    "text": "that actually has a connection pool",
    "start": "38320",
    "end": "39680"
  },
  {
    "text": "built in so if you come from another",
    "start": "39680",
    "end": "41280"
  },
  {
    "text": "language",
    "start": "41280",
    "end": "41840"
  },
  {
    "text": "like python or ruby you might be",
    "start": "41840",
    "end": "44559"
  },
  {
    "text": "familiar with",
    "start": "44559",
    "end": "45680"
  },
  {
    "text": "putting something i think there's a",
    "start": "45680",
    "end": "47760"
  },
  {
    "text": "postgres bouncer or something like that",
    "start": "47760",
    "end": "49039"
  },
  {
    "text": "which does connection pooling between",
    "start": "49039",
    "end": "51199"
  },
  {
    "text": "your database and your client in go you",
    "start": "51199",
    "end": "54320"
  },
  {
    "text": "don't need to do that sort of thing",
    "start": "54320",
    "end": "55199"
  },
  {
    "text": "because it's already built into the",
    "start": "55199",
    "end": "56399"
  },
  {
    "text": "standard library",
    "start": "56399",
    "end": "57280"
  },
  {
    "text": "so what you would normally do when you",
    "start": "57280",
    "end": "58719"
  },
  {
    "text": "connect to the database is just create a",
    "start": "58719",
    "end": "60480"
  },
  {
    "text": "single",
    "start": "60480",
    "end": "61320"
  },
  {
    "text": "sql.db handle and then that's safe for",
    "start": "61320",
    "end": "64720"
  },
  {
    "text": "concurrent use",
    "start": "64720",
    "end": "65680"
  },
  {
    "text": "so you can use that in all of your",
    "start": "65680",
    "end": "66960"
  },
  {
    "text": "handlers even though they're being",
    "start": "66960",
    "end": "68159"
  },
  {
    "text": "called from different guardians",
    "start": "68159",
    "end": "69520"
  },
  {
    "text": "from different clients and you can also",
    "start": "69520",
    "end": "71520"
  },
  {
    "text": "configure things such as",
    "start": "71520",
    "end": "72960"
  },
  {
    "text": "max connections on the",
    "start": "72960",
    "end": "76000"
  },
  {
    "text": "sql connection but normally that's all",
    "start": "76000",
    "end": "78799"
  },
  {
    "text": "handled by the go standard libraries you",
    "start": "78799",
    "end": "80159"
  },
  {
    "text": "don't really have to worry about it",
    "start": "80159",
    "end": "81759"
  },
  {
    "text": "which is really nice",
    "start": "81759",
    "end": "87840"
  },
  {
    "text": "you",
    "start": "89200",
    "end": "91280"
  }
]