[
  {
    "text": "the struggle here is we wanted to build something that met a need that we had on",
    "start": "80",
    "end": "6200"
  },
  {
    "text": "the preact team which was like preact is Tiny and it's really good if you want to do a lightweight project so where's our",
    "start": "6200",
    "end": "11840"
  },
  {
    "text": "tooling for that right where's our you know we have a weback based tool that's like you know used in production by a",
    "start": "11840",
    "end": "17600"
  },
  {
    "text": "bunch of high-profile sites but that's the heavyweight tool right where's the prototyping tool so that was the one",
    "start": "17600",
    "end": "22760"
  },
  {
    "text": "hand but then the other hand is myself and and a bunch of others who who just sort of happen to be on the preact team",
    "start": "22760",
    "end": "29359"
  },
  {
    "text": "we've been kind of on the sidelines in the bundler ecosystem for a little while you know prodding people kind of trying",
    "start": "29359",
    "end": "36160"
  },
  {
    "text": "to to get consensus on a direction that we can move in to further this idea of like writing modern code and shipping",
    "start": "36160",
    "end": "42840"
  },
  {
    "text": "modern code and and getting these things right bandwith for change log is",
    "start": "42840",
    "end": "49000"
  },
  {
    "text": "provided by fastly learn more at fastly.com our feature flags are power",
    "start": "49000",
    "end": "54079"
  },
  {
    "text": "by launch darkley check them out at launchdarkly dcom and we're hosted on looc cloud servers get $100 and hosting",
    "start": "54079",
    "end": "60640"
  },
  {
    "text": "credit at lin.com changelog what's up JS party people have you ever wondered if you could be",
    "start": "60640",
    "end": "66799"
  },
  {
    "text": "offering a faster less buggy experience for your customers well with Ray Gun error and performance monitoring you",
    "start": "66799",
    "end": "73159"
  },
  {
    "text": "have all the information you need at your fingertips to quickly find and fix errors and performance issues across",
    "start": "73159",
    "end": "79479"
  },
  {
    "text": "your Tex Stack Down to the line of code ray gun makes it easy to monitor the impact of your performance improvements",
    "start": "79479",
    "end": "84560"
  },
  {
    "text": "quickly identify issues across web and mobile apps and see how your code performs in the hands of your customers",
    "start": "84560",
    "end": "90600"
  },
  {
    "text": "this saves you time this saves you money and this saves your sanity head to Ray gun.com to join thousands of customer C",
    "start": "90600",
    "end": "96880"
  },
  {
    "text": "software teams who use ray gun every single day again Ray gun.com to give them a try with a free 14-day",
    "start": "96880",
    "end": "103580"
  },
  {
    "text": "[Music]",
    "start": "103580",
    "end": "111200"
  },
  {
    "text": "trial [Music] welcome everyone you're listening to JS",
    "start": "118840",
    "end": "125240"
  },
  {
    "text": "party a weekly celebration of java script and the web we are giving away",
    "start": "125240",
    "end": "130440"
  },
  {
    "text": "two free tickets to the test JS Summit on January 28th and 29th all you have to",
    "start": "130440",
    "end": "135640"
  },
  {
    "text": "do is follow us on Twitter to be entered to win we are at JSP party FM follow that account now before you forget we",
    "start": "135640",
    "end": "142800"
  },
  {
    "text": "have an excellent show for you today if I do say so myself let's get right into it hey it's party time",
    "start": "142800",
    "end": "148840"
  },
  {
    "text": "y'all [Applause]",
    "start": "148840",
    "end": "153409"
  },
  {
    "text": "[Applause] hello out there welcome to JS party it's 2021 we are here I'm Jared I your",
    "start": "156640",
    "end": "163959"
  },
  {
    "text": "internet friend and I'm joined as not always but as often by one of my internet friends Nick nii is in the",
    "start": "163959",
    "end": "170280"
  },
  {
    "text": "house what's up Nick a Hoy Hoy a Hoy Hoy to you we are joined by a special guest",
    "start": "170280",
    "end": "176599"
  },
  {
    "text": "Today Jason Miller you may know as develop it hello he is making the web",
    "start": "176599",
    "end": "183360"
  },
  {
    "text": "faster at Google he's the creator of preactjs the P very important there and",
    "start": "183360",
    "end": "188720"
  },
  {
    "text": "he's on the podcast so welcome Jason hi I'm happy to be here we're very happy to have you and we are happy to talk about",
    "start": "188720",
    "end": "195440"
  },
  {
    "text": "your new thing we'll talk about preact I guess by proxy because it's involved in wmr but preact was not what prompted the",
    "start": "195440",
    "end": "203519"
  },
  {
    "text": "call wmr is and wmr is a cool tiny little",
    "start": "203519",
    "end": "209080"
  },
  {
    "text": "all-in-one development tool for modern web apps which brings a question to my",
    "start": "209080",
    "end": "215360"
  },
  {
    "text": "mind which I'll ask in a second but the first question before I know what that",
    "start": "215360",
    "end": "220959"
  },
  {
    "text": "question well I got two questions queued up so I guess you can guess which one's which the first one is what does wmr",
    "start": "220959",
    "end": "226640"
  },
  {
    "text": "stand for and I know that that's not controversial but it's like ambiguous because you're not really sure yet",
    "start": "226640",
    "end": "232640"
  },
  {
    "text": "you've got some multiple things going on tell us what wmr stands for Jason yeah I can never remember what the team decided",
    "start": "232640",
    "end": "239560"
  },
  {
    "text": "on to to say it was an argument would be a miscategorization it's more uh you know",
    "start": "239560",
    "end": "245360"
  },
  {
    "text": "the npm header how they scroll through random definitions of what npm might mean we essentially just have a joke",
    "start": "245360",
    "end": "250959"
  },
  {
    "text": "where we continue to do that in our chat so I think like the dry boring version",
    "start": "250959",
    "end": "258479"
  },
  {
    "text": "is uh originally I started this project as a joke and the joke was it was going",
    "start": "258479",
    "end": "264919"
  },
  {
    "text": "to be called warm module replacement uh which is like",
    "start": "264919",
    "end": "270240"
  },
  {
    "text": "not hot than hot modular replacement like it's modular replacement that you can touch I don't",
    "start": "270240",
    "end": "276800"
  },
  {
    "text": "know it seemed funny at the time and the npm name was free and then we spent a",
    "start": "276800",
    "end": "283440"
  },
  {
    "text": "week or two trying to come up with a better name and failed and so we we called the company Apple or we called",
    "start": "283440",
    "end": "289560"
  },
  {
    "text": "the project wmr you know this is probably something that we can help out",
    "start": "289560",
    "end": "295160"
  },
  {
    "text": "with yes like there's a lot of funny ones I forget what the one there's like wet module replacement okay or somebody",
    "start": "295160",
    "end": "302840"
  },
  {
    "text": "suggested web modules runtime uh which that feels kind of",
    "start": "302840",
    "end": "307960"
  },
  {
    "text": "reasonable right that one's almost too normal so here's what we here's what we did Jason we saw this conundrum and",
    "start": "307960",
    "end": "315120"
  },
  {
    "text": "we're fans of the mpm scrolling title or not scrolling but you know random",
    "start": "315120",
    "end": "320199"
  },
  {
    "text": "acronym replacement and so we thought we'd help you out we assembled a crack team of uh marketers and came up with",
    "start": "320199",
    "end": "327199"
  },
  {
    "text": "some alternate uh replacements for so we're going to pitch you a few you let us know if you like these uh the first",
    "start": "327199",
    "end": "333880"
  },
  {
    "text": "one is Windows me returns yeah I would take that that's a",
    "start": "333880",
    "end": "339319"
  },
  {
    "text": "good one uh whales meet rodents okay doesn't make any sense at all well",
    "start": "339319",
    "end": "344720"
  },
  {
    "text": "what's the there's a program language is a rodent is it go that's a gopher and a gopher is a rodent so I think you're I",
    "start": "344720",
    "end": "350720"
  },
  {
    "text": "think you're on point there yeah if a gopher is a rodent or is it a type of I don't know no I do believe it is if a",
    "start": "350720",
    "end": "356880"
  },
  {
    "text": "cafei Bara is a rodent then a gopher is definitely a rodent I think they are both of the rodentia family I know",
    "start": "356880",
    "end": "363479"
  },
  {
    "text": "nothing about science they got big teeth I don't the genus it's the or a philm I don't know I",
    "start": "363479",
    "end": "369639"
  },
  {
    "text": "don't know what's going on is it a platypus or is it not a platypus that's all we care about uh a couple other ones for you wmr Wicked Mr",
    "start": "369639",
    "end": "376680"
  },
  {
    "text": "renderer yeah I like that one I like that one we tried a recursive acronym in the style of G not Unix but it didn't",
    "start": "376680",
    "end": "382840"
  },
  {
    "text": "work out at all windows or wmr means reboot see it doesn't even I can't even",
    "start": "382840",
    "end": "388360"
  },
  {
    "text": "finish it where's my Roomba yeah so that would make sense",
    "start": "388360",
    "end": "394000"
  },
  {
    "text": "because when I googled this after we created and launched the project I was seeing if we had gotten any form of",
    "start": "394000",
    "end": "400000"
  },
  {
    "text": "notoriety yeah apparently wmr was already a thing that I wasn't aware of called where's my refund which is like a",
    "start": "400000",
    "end": "406720"
  },
  {
    "text": "service offered by the IRS oh wow I'm not American so I I didn't know that",
    "start": "406720",
    "end": "411960"
  },
  {
    "text": "it's like your tax returns or something yeah so okay well the last one this one is yours Nick Waldo's my roommate now",
    "start": "411960",
    "end": "421400"
  },
  {
    "text": "do you actually name Waldo that actually answers the question also where's Waldo it's he's right",
    "start": "421400",
    "end": "427440"
  },
  {
    "text": "here just you never wearing Stripes whatever I guess he just got over it so",
    "start": "427440",
    "end": "432520"
  },
  {
    "text": "what we can do is when The Show Goes live out there on uh the internet so we can put a pull out and find out which of",
    "start": "432520",
    "end": "438240"
  },
  {
    "text": "these are the best wmr and then you'll be required to use that from here on out I think that's a fair just set up a bot",
    "start": "438240",
    "end": "445000"
  },
  {
    "text": "to PR the headline change in the read me every week Conant yeah or we'll just",
    "start": "445000",
    "end": "450479"
  },
  {
    "text": "have Nick do it yeah got the time he's got the",
    "start": "450479",
    "end": "456080"
  },
  {
    "text": "time Nick will applying static site generation to read me Nick will write a",
    "start": "456080",
    "end": "462039"
  },
  {
    "text": "neovim plugin which uh writes a bot which submits the pr that's the way Nick",
    "start": "462039",
    "end": "468080"
  },
  {
    "text": "does it okay well I would say enough Tom Foolery but uh there'll probably be some more",
    "start": "468080",
    "end": "473599"
  },
  {
    "text": "upcoming but in between the Ridiculousness let's get some actual content out there uh wmr who cares what",
    "start": "473599",
    "end": "480479"
  },
  {
    "text": "it stands for as I said your little tagline is a tiny all-in-one development tool for modern web apps and so that",
    "start": "480479",
    "end": "486319"
  },
  {
    "text": "begs the question then what is a modern web app that's the one you knew I was going to ask yeah that's right so have",
    "start": "486319",
    "end": "493240"
  },
  {
    "text": "at it what's a modern web app so there's probably two answers for that one is it's a web app that you're building now",
    "start": "493240",
    "end": "499879"
  },
  {
    "text": "uh because you know modern is a time frame and that time frame is recent okay",
    "start": "499879",
    "end": "507039"
  },
  {
    "text": "that's a good safe answer yeah that's that's the lame answer right the maybe",
    "start": "507039",
    "end": "512360"
  },
  {
    "text": "more appropriate answer is it's a web app where the thing that you have front",
    "start": "512360",
    "end": "520039"
  },
  {
    "text": "of mind and the constraints that you have on your mind as you develop are",
    "start": "520039",
    "end": "525600"
  },
  {
    "text": "modern browsers modern ux modern dependencies um sort of this",
    "start": "525600",
    "end": "533640"
  },
  {
    "text": "General assumption that this is not going to be you know trying to use code",
    "start": "533640",
    "end": "539440"
  },
  {
    "text": "from the late 2000s this is not going to be trying to service necessarily browsers from the late 2000s certainly",
    "start": "539440",
    "end": "546800"
  },
  {
    "text": "it would be written in modern JavaScript which yeah you know another recursive definition there but it's you know es",
    "start": "546800",
    "end": "553000"
  },
  {
    "text": "20107 or newer kind of thing and the most important one I think at least at",
    "start": "553000",
    "end": "559120"
  },
  {
    "text": "least for me is the tool chain is optimized to give you the best",
    "start": "559120",
    "end": "564640"
  },
  {
    "text": "experience possible for you know es modules and types script and some of",
    "start": "564640",
    "end": "570560"
  },
  {
    "text": "these things that are now omnipresent on npm but there are still large swaths of",
    "start": "570560",
    "end": "576880"
  },
  {
    "text": "modules on npm that have not moved over to those things or or that sort of exist from an era prior to all of that and so",
    "start": "576880",
    "end": "584040"
  },
  {
    "text": "you know in a typical bundler setup especially in like an ahead of time bundling",
    "start": "584040",
    "end": "589279"
  },
  {
    "text": "setup generally there is layers of abstraction added in so you know you",
    "start": "589279",
    "end": "594560"
  },
  {
    "text": "import a thing and you're not actually importing that thing you're importing like a compiled ver of that thing",
    "start": "594560",
    "end": "601839"
  },
  {
    "text": "um and wmr basically takes the stance that some of those layers of abstraction",
    "start": "601839",
    "end": "609560"
  },
  {
    "text": "actually hurt um newer more readable dependencies",
    "start": "609560",
    "end": "614680"
  },
  {
    "text": "in code you might write in order to support older maybe less readable and",
    "start": "614680",
    "end": "620839"
  },
  {
    "text": "and in W's case we hope slightly less important to your project modules and so",
    "start": "620839",
    "end": "626839"
  },
  {
    "text": "the idea is like okay well let's build a tool that tries to still sort of support some",
    "start": "626839",
    "end": "632640"
  },
  {
    "text": "of the older stuff but the focus if we have to choose the focus is always going",
    "start": "632640",
    "end": "637800"
  },
  {
    "text": "to be on make the sort of more recent newer stuff uh as good as it can be so",
    "start": "637800",
    "end": "644200"
  },
  {
    "text": "don't don't detract from it just in order to have compatibility so if you were to liken it",
    "start": "644200",
    "end": "649519"
  },
  {
    "text": "to something that already exists just for for context or for a frame of reference like what kind of a thing is",
    "start": "649519",
    "end": "655320"
  },
  {
    "text": "it would you say it's kind of like a create react app or it's kind of like a nextjs or like is kind of like a web",
    "start": "655320",
    "end": "660959"
  },
  {
    "text": "pack like what's it kind of like that people would be like okay it's like this but different it's weirdly probably closest",
    "start": "660959",
    "end": "668480"
  },
  {
    "text": "to webpack but that might be sort of a an awkward comparison like in terms of",
    "start": "668480",
    "end": "674120"
  },
  {
    "text": "existing tools it's closest to Vite or vet never got Clarity on how that's",
    "start": "674120",
    "end": "679160"
  },
  {
    "text": "pronounced right views new bundler and snow pack and also es Dev server modern",
    "start": "679160",
    "end": "684639"
  },
  {
    "text": "Dev server I can't remember which is the more recent name it exists in that space like esm first gotcha bundlers non",
    "start": "684639",
    "end": "693800"
  },
  {
    "text": "bundlers and I guess the thing that makes it maybe sort of like webpack in that regard actually I shouldn't say",
    "start": "693800",
    "end": "700320"
  },
  {
    "text": "webpack it's it's closest to parcel in that regard wmr really really really tries",
    "start": "700320",
    "end": "706120"
  },
  {
    "text": "to remove itself from your field of view as a developer so it tries to sort of",
    "start": "706120",
    "end": "711519"
  },
  {
    "text": "stay out of the way normally when you start a project with a bundler like like a webpack or a rollup your first job is",
    "start": "711519",
    "end": "717680"
  },
  {
    "text": "configure the bundler uh you know tell it the semantics of your project and your file structure and what you're",
    "start": "717680",
    "end": "723600"
  },
  {
    "text": "trying to build there's good reasons why bundlers allow that right roll up and by packar super versatile tools right but",
    "start": "723600",
    "end": "730399"
  },
  {
    "text": "that's also you know as somebody who has like a fairly severe ADHD sufferer and",
    "start": "730399",
    "end": "736320"
  },
  {
    "text": "who does a lot of prototyping to manage to be productive despite that",
    "start": "736320",
    "end": "741680"
  },
  {
    "text": "all of those like stop configure those are all steps that kind",
    "start": "741680",
    "end": "747120"
  },
  {
    "text": "of get in the way of you actually starting a project or they at the very least they eat into the time that you",
    "start": "747120",
    "end": "753240"
  },
  {
    "text": "might spend if you know if you have two hours to prototype something you really don't want to spend the first hour and a half yeah configuring your bundler I've",
    "start": "753240",
    "end": "759360"
  },
  {
    "text": "definitely failed hackathons for that very reason um so it's very much about greasing the skids right like just get",
    "start": "759360",
    "end": "765399"
  },
  {
    "text": "me running no config or zero you know out of the box pre-configured for you",
    "start": "765399",
    "end": "771399"
  },
  {
    "text": "don't make me think style tooling yeah and the interesting take here cuz like",
    "start": "771399",
    "end": "776839"
  },
  {
    "text": "we have Micro bundle which is basically written by the same people um obviously that micro bundle is it's basically a",
    "start": "776839",
    "end": "783079"
  },
  {
    "text": "configuration for rollup that you install as a as a command line tool so you don't have to also install rollup",
    "start": "783079",
    "end": "788240"
  },
  {
    "text": "and that one is very strictly like we're just rollup but with heavy-handed",
    "start": "788240",
    "end": "793639"
  },
  {
    "text": "defaults that make sense for a lot of modules wmr kind of tried to flip that on its head we do support configuration",
    "start": "793639",
    "end": "800160"
  },
  {
    "text": "which is already different from micr bundle but instead of basically saying we're going to give you what we think is",
    "start": "800160",
    "end": "807519"
  },
  {
    "text": "right out of the box as defaults what wmr does is it tries to extract all of",
    "start": "807519",
    "end": "813680"
  },
  {
    "text": "the possible configuration defaults from what you write so rather than saying you",
    "start": "813680",
    "end": "822600"
  },
  {
    "text": "know this is how you reference entry modules in your HTML like this this is",
    "start": "822600",
    "end": "827959"
  },
  {
    "text": "how you you bundle and then reference stuff from HTML instead we flip that on its head we say we will look at your",
    "start": "827959",
    "end": "833240"
  },
  {
    "text": "HTML and find the modules that you have referenced there and that's how we'll figure out how to bundle your application so was like a was definitely",
    "start": "833240",
    "end": "840320"
  },
  {
    "text": "a Trailblazer in this regard and they they still do this very well they really try and like give you a bundler that",
    "start": "840320",
    "end": "846440"
  },
  {
    "text": "incorporates the web's defaults as its defaults so you don't have to you know sort of tell the bundler yes I am",
    "start": "846440",
    "end": "852519"
  },
  {
    "text": "building for the browser yes these are the semantics of a browser those are things that that you can actually just know up front in a in a bundler and it",
    "start": "852519",
    "end": "860000"
  },
  {
    "text": "even tries to take that I I probably get into the semantics of why this ends up",
    "start": "860000",
    "end": "865360"
  },
  {
    "text": "mattering later but like um you know how webpack has like the optimized chunks configuration or whatever and you can",
    "start": "865360",
    "end": "871160"
  },
  {
    "text": "kind of tell it like oh collapse such and such of stuff if it's below this threshold right um rollup doesn't have",
    "start": "871160",
    "end": "877680"
  },
  {
    "text": "that but we grafted it into rollup which is what powers wmr's production output",
    "start": "877680",
    "end": "884480"
  },
  {
    "text": "so we basically like for CSS files as an example wmr will try to not produce CSS",
    "start": "884480",
    "end": "890000"
  },
  {
    "text": "files below one kilobyte because in general that's going to be the point at which the headers for your request are",
    "start": "890000",
    "end": "898680"
  },
  {
    "text": "approach roaching the size of the response body itself and and you start to see really really diminishing returns",
    "start": "898680",
    "end": "904120"
  },
  {
    "text": "in terms of like Gip compression which has a threshold of about okay um so it",
    "start": "904120",
    "end": "909320"
  },
  {
    "text": "basically tried like tried to work back from like compression thresholds uh TCP window sizes um you know all these sorts",
    "start": "909320",
    "end": "916199"
  },
  {
    "text": "of things that like oh there's like actual specifications that Define these things or at the very least there's",
    "start": "916199",
    "end": "921360"
  },
  {
    "text": "convention that defines these things why don't we just have that be what defines the defaults for the tool so it really",
    "start": "921360",
    "end": "926880"
  },
  {
    "text": "tries to like stay your way not by telling you what to do but by",
    "start": "926880",
    "end": "933920"
  },
  {
    "text": "finding concrete I don't want to say evidence based I feel like that's that's giving it too much credit finding",
    "start": "933920",
    "end": "939240"
  },
  {
    "text": "concrete sort of obvious defaults that you're going to tell the bundler at some",
    "start": "939240",
    "end": "944759"
  },
  {
    "text": "point anyway when you're doing your optimization and just saying H screw it we're just going to do that by default like that that's a logical default to",
    "start": "944759",
    "end": "951600"
  },
  {
    "text": "have I kind of think I'm listening to you talk about it almost sounds like akin to like a compiler doing type",
    "start": "951600",
    "end": "957279"
  },
  {
    "text": "inference where it's like I think you must be using an INT right now so I'm just going to infer that that's what it is and not make you declare it like you",
    "start": "957279",
    "end": "964880"
  },
  {
    "text": "might in some other typed languages this is kind of like config inference or style inference to a certain degree not",
    "start": "964880",
    "end": "971240"
  },
  {
    "text": "trying to give you your too much credit again but it's kind of akin to that right like you're like well yeah find",
    "start": "971240",
    "end": "976480"
  },
  {
    "text": "out what they're doing and also what's the best practice here that if they don't want to defer from that or divert",
    "start": "976480",
    "end": "982360"
  },
  {
    "text": "from that and just do that but also like what style are you using we'll just go ahead and just do that right and so like",
    "start": "982360",
    "end": "990079"
  },
  {
    "text": "the the similarity there is actually it's pretty reasonable you could almost",
    "start": "990079",
    "end": "995920"
  },
  {
    "text": "think of wmr as let's say in production mode only because development mode is this whole other story but in production",
    "start": "995920",
    "end": "1002319"
  },
  {
    "text": "mode it's almost like wmr looks at your codebase and generates a rollup config",
    "start": "1002319",
    "end": "1007720"
  },
  {
    "text": "that is optimal for that codebase and then runs it that's actually sort of how it works it's it's a little bit more",
    "start": "1007720",
    "end": "1014240"
  },
  {
    "text": "complex and contextual than that but at least in terms of our production output that's you can kind of think of it like",
    "start": "1014240",
    "end": "1019440"
  },
  {
    "text": "that right like in a normal bundler you would configure entry points and your",
    "start": "1019440",
    "end": "1025000"
  },
  {
    "text": "minifier and you know uh your node modules resolution and like all the",
    "start": "1025000",
    "end": "1030880"
  },
  {
    "text": "weird like oh you know but the react is modules commonly used from esm with named Imports but it doesn't have any so",
    "start": "1030880",
    "end": "1037120"
  },
  {
    "text": "like patch that instead we we just do all that on the Fly based on the code",
    "start": "1037120",
    "end": "1043160"
  },
  {
    "text": "that you wrote because like you already wrote code that essentially said oh you know import type of from react is so we",
    "start": "1043160",
    "end": "1049640"
  },
  {
    "text": "don't we don't need configuration to know that you're trying to use named imports from a commonjs module it's right there in the code so that's that's",
    "start": "1049640",
    "end": "1056120"
  },
  {
    "text": "the one angle and the other whole piece of this is during development wmr",
    "start": "1056120",
    "end": "1063520"
  },
  {
    "text": "doesn't actually really bundle at all and so this is where the sky pack or snow pack and Vite and modern Dev server",
    "start": "1063520",
    "end": "1072039"
  },
  {
    "text": "comparison kind of comes into play right wmr like it's really similar to those",
    "start": "1072039",
    "end": "1077799"
  },
  {
    "text": "tools uh and to be honest throughout the entire development of this project since we started it in May I should I want to",
    "start": "1077799",
    "end": "1084440"
  },
  {
    "text": "say April May we've been kind of discussing stuff with with the authors of those tools behind the scenes saying like hey like at some point maybe we",
    "start": "1084440",
    "end": "1091679"
  },
  {
    "text": "should just like consolidate these things but I think the logical thing and the thing that's going to be most beneficial for the ecosystem right now",
    "start": "1091679",
    "end": "1098120"
  },
  {
    "text": "is to just kind of let these flowers bloom for a little bit and then see what are the similarities what did we end up",
    "start": "1098120",
    "end": "1104240"
  },
  {
    "text": "duplicating how can we collaborate better and so what what we tried to do with wmr is working back from that model",
    "start": "1104240",
    "end": "1111600"
  },
  {
    "text": "of in development you're not bundling we're just shipping modules over the wire as HTP requests we tried to",
    "start": "1111600",
    "end": "1117360"
  },
  {
    "text": "optimize the pathway for every module from disk to browser and so instead of",
    "start": "1117360",
    "end": "1123960"
  },
  {
    "text": "pulling a module off disk running it through Babble running it through turer",
    "start": "1123960",
    "end": "1129320"
  },
  {
    "text": "running it through a you know a source code Transformer that finds import statements and rewrites them because",
    "start": "1129320",
    "end": "1134520"
  },
  {
    "text": "very Imports don't work in browsers instead of doing all those steps generally in sequin generally with",
    "start": "1134520",
    "end": "1139960"
  },
  {
    "text": "different tools we actually wrote Our Own Babel compatible Transformer and",
    "start": "1139960",
    "end": "1147080"
  },
  {
    "text": "rollup compatible plug-in API so if you ever built a rollup plugin that whole",
    "start": "1147080",
    "end": "1153480"
  },
  {
    "text": "API is is actually supported by wmr even though wmr is not running rollup we just",
    "start": "1153480",
    "end": "1159280"
  },
  {
    "text": "call all the same hooks in the same order we expose the same Acorn parsing stuff but at the end of the day what it",
    "start": "1159280",
    "end": "1164400"
  },
  {
    "text": "means is we read a module off disk and put it in an in memory cache we pass it",
    "start": "1164400",
    "end": "1169559"
  },
  {
    "text": "through atmost one a transformation that will parse all of the code but will in",
    "start": "1169559",
    "end": "1176520"
  },
  {
    "text": "almost no cases will it stringify all of the code it's only going to like re serialize mutated as noes so it's",
    "start": "1176520",
    "end": "1182960"
  },
  {
    "text": "extremely fast but actually in most cases no ASD Transformations we're using",
    "start": "1182960",
    "end": "1188799"
  },
  {
    "text": "uh guy bedford's es module lexer to do basically token based Transformations so",
    "start": "1188799",
    "end": "1194400"
  },
  {
    "text": "we you know we don't make a whole graph of your code we literally just know that like oh this is an import state and here's the string that was imported what",
    "start": "1194400",
    "end": "1200799"
  },
  {
    "text": "are you going to do with this string and then that all feeds back through this rollup based plugin API or rollup",
    "start": "1200799",
    "end": "1206000"
  },
  {
    "text": "compatible plugin API but the idea is like basically wmr should get modules into the browser as",
    "start": "1206000",
    "end": "1213919"
  },
  {
    "text": "roughly as fast as it can read the module off disk and stream it to the browser it really shouldn't be adding",
    "start": "1213919",
    "end": "1219360"
  },
  {
    "text": "any overhead to each request in order to do Transformations um and that originally",
    "start": "1219360",
    "end": "1226320"
  },
  {
    "text": "actually just comes from uh I work on glitch a lot um it's cheap",
    "start": "1226320",
    "end": "1233799"
  },
  {
    "text": "it's just a habit I've gotten into yeah and glitch has a static like mode but the static mode",
    "start": "1233799",
    "end": "1241280"
  },
  {
    "text": "doesn't support like jsx or typescript or bar Imports or ES modules or node modules for that matter which it's just",
    "start": "1241280",
    "end": "1248080"
  },
  {
    "text": "slightly too limited and so I originally was I started wmr as like a better",
    "start": "1248080",
    "end": "1254120"
  },
  {
    "text": "glitch static right so basically a static file server that like gotcha does some intelligence stuff with JavaScript",
    "start": "1254120",
    "end": "1259760"
  },
  {
    "text": "but very little just just what's necessary to make it usable and so that's that's kind of the premise there",
    "start": "1259760",
    "end": "1265799"
  },
  {
    "text": "that's also where this whole concept of not having to install dependencies came from so like it's a pain in the butt to",
    "start": "1265799",
    "end": "1273640"
  },
  {
    "text": "manage your package Jon and especially on glitch every edit you make to the package Json red downloads all the node",
    "start": "1273640",
    "end": "1279039"
  },
  {
    "text": "modules by a pnpm and populates them in in the node modules directory in",
    "start": "1279039",
    "end": "1284360"
  },
  {
    "text": "wmr if you don't run npm install and you import a pack package in your code we",
    "start": "1284360",
    "end": "1290360"
  },
  {
    "text": "just go and fetch it from the registry and stream it to disk um and interestingly we stream it to disk",
    "start": "1290360",
    "end": "1297039"
  },
  {
    "text": "knowing that you're only going to use it as like a source code package so we don't run package install scripts",
    "start": "1297039",
    "end": "1302760"
  },
  {
    "text": "because that's unsafe we don't uh we don't even write temp files test files",
    "start": "1302760",
    "end": "1308520"
  },
  {
    "text": "unused Source stuff to disk you basically get a node modules directory that only contains package.json js& TS",
    "start": "1308520",
    "end": "1316080"
  },
  {
    "text": "files and typescript definitions which is kind of nice something about that just sounds like almost too good to",
    "start": "1316080",
    "end": "1323039"
  },
  {
    "text": "be true kind of a thing like is that I mean's definitely you're thinking like what could go wrong something something",
    "start": "1323039",
    "end": "1328640"
  },
  {
    "text": "has to be able to go wrong there right yeah I mean like there was definitely some push back we got in the initial",
    "start": "1328640",
    "end": "1334360"
  },
  {
    "text": "announcement saying oh we're doing streaming install because I think people think oh streaming install they're running npm install in the background",
    "start": "1334360",
    "end": "1340320"
  },
  {
    "text": "and we don't actually even use the npm client at all in any form this actually does so you're just literally fetching",
    "start": "1340320",
    "end": "1346679"
  },
  {
    "text": "the source files and that's like than that so it's it's fetching the tarball direct from the npm registry okay uh and",
    "start": "1346679",
    "end": "1353480"
  },
  {
    "text": "it streams it and as each file in the tarball passes through our streaming",
    "start": "1353480",
    "end": "1359480"
  },
  {
    "text": "unar and unzip uh mechanics those files get",
    "start": "1359480",
    "end": "1364640"
  },
  {
    "text": "analyzed and conditionally written to dis so if you have something like a shell script or an executable it never",
    "start": "1364640",
    "end": "1370840"
  },
  {
    "text": "even makes it out of memory so I don't want to say it's it's secure but it's it definitely avoids all the foot guns that",
    "start": "1370840",
    "end": "1377240"
  },
  {
    "text": "would immediately jump to mind for like hey streaming Auto install um it's it's also just really fast so that you",
    "start": "1377240",
    "end": "1384000"
  },
  {
    "text": "basically we can get your dependency installed and shipped to the browser or whatever file from it you were importing",
    "start": "1384000",
    "end": "1390360"
  },
  {
    "text": "as fast as we can get that tar ball from npm because it's streaming sounds like an awesome feature it kind of goes along with what you're talking about with the",
    "start": "1390360",
    "end": "1396200"
  },
  {
    "text": "inference where it's like you're using this okay we'll get it for you and that's it you know well we know not only",
    "start": "1396200",
    "end": "1401880"
  },
  {
    "text": "are you using you know the preact package but we know that you're using it from wmr and we know that",
    "start": "1401880",
    "end": "1408960"
  },
  {
    "text": "as an example the preact package has an export map which defines what is externally accessible what files are",
    "start": "1408960",
    "end": "1415520"
  },
  {
    "text": "externally accessible and so we know that in in a like a properly spec",
    "start": "1415520",
    "end": "1421000"
  },
  {
    "text": "compliant bundler you can't import files that aren't in the export map so we just won't write those files to disk because",
    "start": "1421000",
    "end": "1427760"
  },
  {
    "text": "they they frankly don't exist unless they're typescript definitions because typescript kind of made if it's own",
    "start": "1427760",
    "end": "1433120"
  },
  {
    "text": "thing there but that's fine it's very few files uh but you know we can sort of infer like oh this isn't just a random",
    "start": "1433120",
    "end": "1438600"
  },
  {
    "text": "package it's not a command line tool that you're installing it's not arbitrary code it's it's Source text",
    "start": "1438600",
    "end": "1444120"
  },
  {
    "text": "that you're going to want to import yeah and so when we do that again with the",
    "start": "1444120",
    "end": "1449159"
  },
  {
    "text": "inference thing we stream it to disk and we we send you the file because like you're waiting on on this request in the",
    "start": "1449159",
    "end": "1454480"
  },
  {
    "text": "browser the browser will either have reloaded or hot module updated or whatever and you're sitting there waiting for this dependency to download",
    "start": "1454480",
    "end": "1460440"
  },
  {
    "text": "we get the dependency to the browser right away it runs through a extremely",
    "start": "1460440",
    "end": "1466640"
  },
  {
    "text": "lightweight rollup pass but doesn't do any minification doesn't do any mangling anything like that um it basically just",
    "start": "1466640",
    "end": "1474039"
  },
  {
    "text": "concatenates modules together that wouldn't have been individually addressable anyway so that we're not shipping like thousands of vs modules",
    "start": "1474039",
    "end": "1480039"
  },
  {
    "text": "over the wire but sort of like a as close to zero milliseconds as we can get there and then behind the scenes after",
    "start": "1480039",
    "end": "1487000"
  },
  {
    "text": "you've actually requested that module and after it's been loaded in the browser we then schedule it to go off",
    "start": "1487000",
    "end": "1492360"
  },
  {
    "text": "into a minification and broadly compression pass and so you know if you import preact you'll get preact right",
    "start": "1492360",
    "end": "1498480"
  },
  {
    "text": "way but then after a second dish or two of idle time wmr will have already",
    "start": "1498480",
    "end": "1504720"
  },
  {
    "text": "generated a hyper optimized version of that dependency and written it back to disk so that the next time you request",
    "start": "1504720",
    "end": "1510600"
  },
  {
    "text": "it you get the optimized broadly compressed version but just stream from dis there's there's no overhead on the",
    "start": "1510600",
    "end": "1516080"
  },
  {
    "text": "request itself yeah it's sort of a it's a funky setup but you said that when it",
    "start": "1516080",
    "end": "1521640"
  },
  {
    "text": "goes to the browser in that either development or production build I guess probably both um it's just basically the",
    "start": "1521640",
    "end": "1527000"
  },
  {
    "text": "concatenated fils it's not actually running like es modules in the browser is that right uh so it does use native",
    "start": "1527000",
    "end": "1532840"
  },
  {
    "text": "esm for everything yeah okay so actually that's one of the reasons why the the rollup bundling process is done even for",
    "start": "1532840",
    "end": "1539039"
  },
  {
    "text": "the unoptimized version is that's where we convert commonjs and UMD to e esm",
    "start": "1539039",
    "end": "1544720"
  },
  {
    "text": "gotcha so I guess I'm a little I'm a little behind on you actually using like",
    "start": "1544720",
    "end": "1550120"
  },
  {
    "text": "direct esm because I do it through typescript and I ran the create wmr",
    "start": "1550120",
    "end": "1556640"
  },
  {
    "text": "project and kind of played around with that a little bit it looks like there's kind of a mix of like like I'm specifically looking at the Imports and",
    "start": "1556640",
    "end": "1562919"
  },
  {
    "text": "like there's some with file extension some without and I was wondering like is it doing rewrites of those for me",
    "start": "1562919",
    "end": "1568360"
  },
  {
    "text": "automatically or yes yes so and and that has that has shaped a little bit since",
    "start": "1568360",
    "end": "1575440"
  },
  {
    "text": "this tool was originally created uh so we always have Rewritten be specifiers just because the browser is going to it",
    "start": "1575440",
    "end": "1582399"
  },
  {
    "text": "just is a syntax error in the browser um and there's no way for us to patch that in on the front end so like if if you do",
    "start": "1582399",
    "end": "1588039"
  },
  {
    "text": "like import Fu the module Fu we will rewrite that to I think it's import a URL like",
    "start": "1588039",
    "end": "1595120"
  },
  {
    "text": "slash npm Fu okay and you know it's a pattern it always looks like that you kind of get youth scene on the front end",
    "start": "1595120",
    "end": "1600559"
  },
  {
    "text": "and in your browser's network console you'll just see Foo because it shows the the base name not the path name in the",
    "start": "1600559",
    "end": "1607000"
  },
  {
    "text": "case of something like typescript or if you're using uh JavaScript files and you",
    "start": "1607000",
    "end": "1614200"
  },
  {
    "text": "don't want to use file extensions um wmr that in its current state will infer",
    "start": "1614200",
    "end": "1623200"
  },
  {
    "text": "the file extension and um and like you know correct it so in",
    "start": "1623200",
    "end": "1629320"
  },
  {
    "text": "the browser you know if you imported slash utils and the file on dis was called",
    "start": "1629320",
    "end": "1637520"
  },
  {
    "text": "utils.py yeah and so basically that happens because I mentioned we we support the rollup plug-in API during",
    "start": "1647159",
    "end": "1653520"
  },
  {
    "text": "development originally we did not do file extension inference so if if you wanted to import a file that had an",
    "start": "1653520",
    "end": "1659679"
  },
  {
    "text": "extension whether it's typescript JavaScript TSX whatever you just type the file out with the extension I I",
    "start": "1659679",
    "end": "1665600"
  },
  {
    "text": "actually personally really like that approach because I know that behind the scenes that means that wmr never ever",
    "start": "1665600",
    "end": "1670919"
  },
  {
    "text": "has to read a directory or call uh into nodes file system API to check if something exists basically when you do",
    "start": "1670919",
    "end": "1677240"
  },
  {
    "text": "an import core read file that's it so even if you were writing typescript you would do like a TS extension for all of",
    "start": "1677240",
    "end": "1683799"
  },
  {
    "text": "those or you could also use ajs extension but that that's a typescript ISM the JS extension when there's a TS",
    "start": "1683799",
    "end": "1691600"
  },
  {
    "text": "file on disk is the TS file okay but that was actually one of the reasons why we ended up going down the the road of",
    "start": "1691600",
    "end": "1699399"
  },
  {
    "text": "implementing file extension inference so you kind of treat it like ASI a little bit and yeah exactly you don't have to",
    "start": "1699399",
    "end": "1706840"
  },
  {
    "text": "use it and it is faster if you don't use it but you can use it and so one weird case where where this actually rears its",
    "start": "1706840",
    "end": "1713200"
  },
  {
    "text": "head is like if you have a script tag in an HTML document the correct thing to do in wmr is to include the full file",
    "start": "1713200",
    "end": "1719399"
  },
  {
    "text": "extension of that script regardless of what it is if if it doesn't exist don't put it if it's a TSX it would be you",
    "start": "1719399",
    "end": "1725320"
  },
  {
    "text": "know sl. TSX and that's just like we're trying to steer people towards the spec",
    "start": "1725320",
    "end": "1732240"
  },
  {
    "text": "which says like there is no magic a URL is just a URL there is no such thing as",
    "start": "1732240",
    "end": "1737320"
  },
  {
    "text": "inference but we also uh to the earlier point we are aware that a lot of people are used",
    "start": "1737320",
    "end": "1743799"
  },
  {
    "text": "to the semantics of things like create react app and which are essentially the semantics of leek and so as kind of a",
    "start": "1743799",
    "end": "1750720"
  },
  {
    "text": "way to bridge that Gap we do the inference you can there there's a debug",
    "start": "1750720",
    "end": "1755960"
  },
  {
    "text": "environment variable that you can set to one and that will print out all of the",
    "start": "1755960",
    "end": "1761360"
  },
  {
    "text": "plugins that got executed on every request and you can actually see in real time like oh wow I just round tripped",
    "start": "1761360",
    "end": "1767000"
  },
  {
    "text": "through the file extension resolver three times just because I didn't want to type. TSX um and so we're not we",
    "start": "1767000",
    "end": "1773399"
  },
  {
    "text": "won't show the performance stats on it because it's on a per request basis it's very minimal but you can still see like",
    "start": "1773399",
    "end": "1779440"
  },
  {
    "text": "you know this this is what I've opted into by by choosing that thing um uh the",
    "start": "1779440",
    "end": "1785039"
  },
  {
    "text": "other piece of this is um I I think the file extensions thing especially for",
    "start": "1785039",
    "end": "1791039"
  },
  {
    "text": "typescript is still just sort of in the last stages of kind of settling out the",
    "start": "1791039",
    "end": "1797159"
  },
  {
    "text": "nice thing with with specifying full file extensions is at least in vs code and I think jet brains if you have any",
    "start": "1797159",
    "end": "1804519"
  },
  {
    "text": "Imports that have a file extension in your module and you use like the Auto Import thing like you click a suggested",
    "start": "1804519",
    "end": "1811440"
  },
  {
    "text": "result and it and it Imports that new import will also use a file extension so it's smart enough to see like oh this",
    "start": "1811440",
    "end": "1817760"
  },
  {
    "text": "person is typing file extensions out I don't think it does it on a project-wide basis by default yet which would be like",
    "start": "1817760",
    "end": "1823360"
  },
  {
    "text": "a nice next step MH that's sort of why you see that and I think right now the template",
    "start": "1823360",
    "end": "1828519"
  },
  {
    "text": "I think we ship. JS by default yep although typescript is supported by wmr",
    "start": "1828519",
    "end": "1835039"
  },
  {
    "text": "itself by default uh we don't scaffold it by default yeah I I noticed that",
    "start": "1835039",
    "end": "1840360"
  },
  {
    "text": "there was a TS config in there that it created and then I just went into there's a a header. JS file and I just",
    "start": "1840360",
    "end": "1846200"
  },
  {
    "text": "renamed it to header. TS and it still worked so yeah so the that's actually an interesting point so like wmr you know",
    "start": "1846200",
    "end": "1852880"
  },
  {
    "text": "obviously there's a whole bunch of stuff that it's doing it's goals or whatever but the other piece is this is from the",
    "start": "1852880",
    "end": "1858240"
  },
  {
    "text": "preact team and the preact team we still by and large write everything in vanilla",
    "start": "1858240",
    "end": "1864399"
  },
  {
    "text": "JavaScript but over the past year or two have all but rep platformed onto JS doc",
    "start": "1864399",
    "end": "1872399"
  },
  {
    "text": "based typescript that is actually just JavaScript um to the point where wmr",
    "start": "1872399",
    "end": "1878360"
  },
  {
    "text": "itself is written in JS and JS doc but is strictly typed gotcha like a type",
    "start": "1878360",
    "end": "1884960"
  },
  {
    "text": "error breaks the pill uh which Which is less crazy than you'd think because there's this clever thing where you can",
    "start": "1884960",
    "end": "1891679"
  },
  {
    "text": "stick all your types as ambient types in the source directory and then just reference them without even having to",
    "start": "1891679",
    "end": "1897240"
  },
  {
    "text": "import anything from your JS do annotations and the typescript team has been really good over the past year",
    "start": "1897240",
    "end": "1903200"
  },
  {
    "text": "about like extending the JS do functionality and finding like that nice balance of like JS do that isn't",
    "start": "1903200",
    "end": "1909279"
  },
  {
    "text": "entirely typescript specific and so we've we've like we're all on board on",
    "start": "1909279",
    "end": "1914480"
  },
  {
    "text": "that like that even the the main preact code base right now is basically being Rewritten to to use this strict variant",
    "start": "1914480",
    "end": "1921200"
  },
  {
    "text": "and so we kind of wanted to scaffold something that kind of shows people like hey like you can turn on CJs and get all",
    "start": "1921200",
    "end": "1927519"
  },
  {
    "text": "these lovely compiler isms that you wouldn't expect from a standard JavaScript environment as long as you're using an editor that that cares about",
    "start": "1927519",
    "end": "1934039"
  },
  {
    "text": "typescript and then the other piece is we support CSS modules and some import",
    "start": "1934039",
    "end": "1939880"
  },
  {
    "text": "prefixes like you can do like I think it's uh URL col and and then the path to",
    "start": "1939880",
    "end": "1945039"
  },
  {
    "text": "something and it will when the thing you import is is the URL of that file um",
    "start": "1945039",
    "end": "1951440"
  },
  {
    "text": "which I think parcel supports the same thing how does typescript handle an import that looks like that well so that's that's what the TS config is",
    "start": "1951440",
    "end": "1957399"
  },
  {
    "text": "actually for so when you install wmr or actually it's not the TS config when you install wmr we ship ambient types in the",
    "start": "1957399",
    "end": "1964519"
  },
  {
    "text": "wmr package that Define ambient module definitions using Wild Card statements",
    "start": "1964519",
    "end": "1969559"
  },
  {
    "text": "for URL Cole and star same thing for CSS modules if if you import some you know",
    "start": "1969559",
    "end": "1975679"
  },
  {
    "text": "star. module. CSS the import like the value generated by the import will be an",
    "start": "1975679",
    "end": "1980960"
  },
  {
    "text": "object mapping of class names nice and again so like we are providing you the",
    "start": "1980960",
    "end": "1986679"
  },
  {
    "text": "the thing and it's it's technically configurable you could turn this off but like that's the default so we provide you the type definitions for that",
    "start": "1986679",
    "end": "1992880"
  },
  {
    "text": "default which is it's nice this is something that like I think we always wanted to do it in preact CLI but we didn't have the module. CSS thing that",
    "start": "1992880",
    "end": "2000559"
  },
  {
    "text": "convention uh and we maybe couldn't guess as much about the type of code you",
    "start": "2000559",
    "end": "2006320"
  },
  {
    "text": "were trying to write to be able to infer the [Music]",
    "start": "2006320",
    "end": "2018840"
  },
  {
    "text": "things hey there party animals Jared here I want to take a moment to tell you about changelog Plus+ it's our",
    "start": "2018840",
    "end": "2026000"
  },
  {
    "text": "membership program where you can directly support JS party and all of the podcasts we create here at changelog",
    "start": "2026000",
    "end": "2032600"
  },
  {
    "text": "ditch the ads get closer to the metal and enjoy supporting JS party into the future",
    "start": "2032600",
    "end": "2038320"
  },
  {
    "text": "once again that's changelog.md love to have you with",
    "start": "2038320",
    "end": "2044398"
  },
  {
    "text": "[Music]",
    "start": "2045150",
    "end": "2055499"
  },
  {
    "text": "us so as I mentioned I uh was playing with the create wmr or mpm init wmr",
    "start": "2056280",
    "end": "2063200"
  },
  {
    "text": "which was really cool and uh playing with the project that it creates there uh I really love just how like you said",
    "start": "2063200",
    "end": "2069560"
  },
  {
    "text": "I wasn't spending any time configuring things I was just going and I wanted to use typescript so I renamed the file to",
    "start": "2069560",
    "end": "2074960"
  },
  {
    "text": "DTS and it just worked and that was really awesome but the create wmr",
    "start": "2074960",
    "end": "2080200"
  },
  {
    "text": "package or the project template that it uses ships with preact and I was curious about the relationship between wmr and",
    "start": "2080200",
    "end": "2086760"
  },
  {
    "text": "preact and is that a requirement or can it really work with anything yeah tell us a little bit about that so definitely",
    "start": "2086760",
    "end": "2092320"
  },
  {
    "text": "not a requirement the struggle here is we wanted to build something that",
    "start": "2092320",
    "end": "2098440"
  },
  {
    "text": "met a need that we had on the preact team which was like preact is Tiny and it's really good if you want to do a",
    "start": "2098440",
    "end": "2103880"
  },
  {
    "text": "lightweight project so where's our tooling for that where is our you know we have a webpack based tool that's like",
    "start": "2103880",
    "end": "2110280"
  },
  {
    "text": "you know used in production by a bunch of high-profile sites but it's that's the heavyweight tool right where's the prototyping tool so that was the one",
    "start": "2110280",
    "end": "2117200"
  },
  {
    "text": "hand but then the other hand is myself and and a bunch of others who who just sort of happen to be on the preact team",
    "start": "2117200",
    "end": "2123800"
  },
  {
    "text": "we've been kind of on the sidelines in the bundler ecosystem for a little while",
    "start": "2123800",
    "end": "2129599"
  },
  {
    "text": "at least you know leading through 2019 and 2020 you know prodding people kind of trying to to get consensus on a",
    "start": "2129599",
    "end": "2135920"
  },
  {
    "text": "direction that we can move in to further this idea of like writing modern code",
    "start": "2135920",
    "end": "2141079"
  },
  {
    "text": "and shipping modern code and and getting these things right where like I feel like everybody in the community at this",
    "start": "2141079",
    "end": "2146160"
  },
  {
    "text": "point is at least mostly you know rallying around like we want to start",
    "start": "2146160",
    "end": "2152560"
  },
  {
    "text": "shipping modern code given that it's supported in the overwhelming majority of browsers you know 95 % of browsers",
    "start": "2152560",
    "end": "2158400"
  },
  {
    "text": "support es 20107 and so like from my this is actually like the thing that my",
    "start": "2158400",
    "end": "2163599"
  },
  {
    "text": "Google work has been focused on for the last like two years has been going and finding all like the the choke points",
    "start": "2163599",
    "end": "2170400"
  },
  {
    "text": "there and trying to do the research and outline a solution that's it might not",
    "start": "2170400",
    "end": "2175880"
  },
  {
    "text": "be the perfect solution but it might be the way forward so part of that is like trying to convince folks to use export",
    "start": "2175880",
    "end": "2183400"
  },
  {
    "text": "Maps the nude node feature as a way to publish modern JavaScript packages so you can publish a package that has",
    "start": "2183400",
    "end": "2189160"
  },
  {
    "text": "modern and Legacy JavaScript and now bundlers have a way to use one if they they know how to get to it and there's",
    "start": "2189160",
    "end": "2195200"
  },
  {
    "text": "various reasons why I you know in the article that I released in December and the and the video that went along with",
    "start": "2195200",
    "end": "2201280"
  },
  {
    "text": "it um kind of explain how that could be justified right like um",
    "start": "2201280",
    "end": "2208400"
  },
  {
    "text": "node started supporting export maps in 12.7 and node 12 or 12.9 and that",
    "start": "2208400",
    "end": "2213920"
  },
  {
    "text": "version of node supports es 20109 so if you ship an export it only works in a",
    "start": "2213920",
    "end": "2219000"
  },
  {
    "text": "version of node that supports modern JS and thus you would assume that that code would be potentially modern JS because",
    "start": "2219000",
    "end": "2225560"
  },
  {
    "text": "it's modern package so we kind of extrapolating that like okay well what if bundlers also jumped on that same",
    "start": "2225560",
    "end": "2231560"
  },
  {
    "text": "assumption could this be finally the modern field that we've been not able to standardize for five years and so that",
    "start": "2231560",
    "end": "2239240"
  },
  {
    "text": "and the timing of of browser support kind of converging on on that 2017 Baseline there was a very clear need for",
    "start": "2239240",
    "end": "2247319"
  },
  {
    "text": "a a tool or or really a bunch of tools to basically like stake the claim here saying like actually it's not just that",
    "start": "2247319",
    "end": "2254000"
  },
  {
    "text": "we can ship smaller bundles using modern code but also like we can do a better development experience you know we we",
    "start": "2254000",
    "end": "2259680"
  },
  {
    "text": "can ship readable code in development that's not one line of a vow for a 2",
    "start": "2259680",
    "end": "2265839"
  },
  {
    "text": "megabyte module and so the non preact part was just getting a tool out there",
    "start": "2265839",
    "end": "2271960"
  },
  {
    "text": "that demonstrates in addition to what snow pack and and Vite and some others have have demonstrated",
    "start": "2271960",
    "end": "2278079"
  },
  {
    "text": "getting a tool out there that demonstrates that like there is even more that we could do if we double down",
    "start": "2278079",
    "end": "2283480"
  },
  {
    "text": "on this like wmr ships http2 out of the box you know on the overwhelming",
    "start": "2283480",
    "end": "2289720"
  },
  {
    "text": "majority of machines it will set up certificates for you and basically at some point you will get prompted to",
    "start": "2289720",
    "end": "2295599"
  },
  {
    "text": "enter your administrator password which I know scares the crap out of people rightfully so but this is using",
    "start": "2295599",
    "end": "2301599"
  },
  {
    "text": "literally the deao standard module that implements this thing it's relatively safe All Things Considered but we",
    "start": "2301599",
    "end": "2307560"
  },
  {
    "text": "out of the box because we know that H2 with es modules is the fastest and best",
    "start": "2307560",
    "end": "2312599"
  },
  {
    "text": "experienced during development and then also showing like when you platform on ES modules things like hot module",
    "start": "2312599",
    "end": "2319880"
  },
  {
    "text": "reloading and asset references can also get easier so like hot module reloading",
    "start": "2319880",
    "end": "2325160"
  },
  {
    "text": "is just you dynamically import the current module with a query stream parameter to to bust the cache that's it",
    "start": "2325160",
    "end": "2332520"
  },
  {
    "text": "um you know there's some weird logic that we do right now to rep patch exports onto the old module but even that we're we're actively pursuing",
    "start": "2332520",
    "end": "2339520"
  },
  {
    "text": "Avenues of getting rid of that piece um and the goal there is to show like not only can we ship something that's that's",
    "start": "2339520",
    "end": "2345480"
  },
  {
    "text": "truly good but also like we can ship something that's actually fairly easy to understand right like sitting here you",
    "start": "2345480",
    "end": "2351760"
  },
  {
    "text": "know I said dynamically import the current module and replace it like you can kind of picture how that would work",
    "start": "2351760",
    "end": "2357560"
  },
  {
    "text": "yeah D Dynamic import object assign you know and that's that's roughly accurate",
    "start": "2357560",
    "end": "2364079"
  },
  {
    "text": "yeah you know minus some some weird close enough approximation about what's exactly happening right and so there's",
    "start": "2364079",
    "end": "2370160"
  },
  {
    "text": "there's just a lot less guesswork between you and the actual generated code that you run in the browser which",
    "start": "2370160",
    "end": "2376440"
  },
  {
    "text": "is potentially less surface area to have things go wrong in and so then getting",
    "start": "2376440",
    "end": "2382760"
  },
  {
    "text": "back to kind of the preact thing our goal with this was basically keep wmr as agnostic as it can",
    "start": "2382760",
    "end": "2391359"
  },
  {
    "text": "possibly be to preact so that all of the little pieces inside wmr because wmr is",
    "start": "2391359",
    "end": "2398400"
  },
  {
    "text": "it's literally just built has like 20 rollup plugins and a couple of Standalone libraries we haven't yet",
    "start": "2398400",
    "end": "2405119"
  },
  {
    "text": "published yet but they're like they're all independent keep that totally separate so that you know Vite can grab",
    "start": "2405119",
    "end": "2411240"
  },
  {
    "text": "the plug-in API and use it or you know I've actually just this morning been making the rounds looking at all of the",
    "start": "2411240",
    "end": "2417319"
  },
  {
    "text": "export maps implementations in these bundlers finding some issues with them and it's very clear that like it's not",
    "start": "2417319",
    "end": "2423359"
  },
  {
    "text": "to say the W markets this right but having a package possibly wmr's export Maps implementation that just gets",
    "start": "2423359",
    "end": "2430319"
  },
  {
    "text": "extracted out and published npm as like a here's how you resolve export Maps type package that's valuable and it",
    "start": "2430319",
    "end": "2436400"
  },
  {
    "text": "would be really shameful for us to like do the work of building this and hopefully getting things correct but have it be weirdly preex specific right",
    "start": "2436400",
    "end": "2443040"
  },
  {
    "text": "like that doesn't that doesn't make sense to me and so we try to keep the core and and essentially everything",
    "start": "2443040",
    "end": "2448839"
  },
  {
    "text": "about wmr preact agnostic except when it came to",
    "start": "2448839",
    "end": "2455079"
  },
  {
    "text": "scaffolding so by default we scaffold um the jsx support so that it",
    "start": "2455079",
    "end": "2462880"
  },
  {
    "text": "generates um it's actually generating tag templat which is unique and I don't",
    "start": "2462880",
    "end": "2469119"
  },
  {
    "text": "know that that's been done elsewhere before but again that's that modern first montra the modern side yeah yeah",
    "start": "2469119",
    "end": "2474359"
  },
  {
    "text": "exactly um but the tag templates by default uh they are bound to preact it takes two seconds to rebind them to",
    "start": "2474359",
    "end": "2481000"
  },
  {
    "text": "another Library like VI or react or your own custom thing but the the default is",
    "start": "2481000",
    "end": "2486440"
  },
  {
    "text": "is preact just because we have to serve both needs uh and then the create wmr uh package which that was",
    "start": "2486440",
    "end": "2495440"
  },
  {
    "text": "built the day before launch just so that people could use the tool easily but the create wmr package scaffolds scaffolds a",
    "start": "2495440",
    "end": "2502000"
  },
  {
    "text": "preact app because that's the one that we were most confident people would be able to like poke around with and try",
    "start": "2502000",
    "end": "2507880"
  },
  {
    "text": "even if you're not a preact user even if you're like a react user or a view user like you can get a feel for it and it",
    "start": "2507880",
    "end": "2514880"
  },
  {
    "text": "lets us show off pop module reloading and some things like that and then the last piece is wmr in about the last two",
    "start": "2514880",
    "end": "2523960"
  },
  {
    "text": "months leading up to the launch like originally we were going to launch it in August and we kind of had to sit down and decided like oh you know what maybe",
    "start": "2523960",
    "end": "2532040"
  },
  {
    "text": "there's more we can do here maybe we can ship more than just a good hot modu replacement solution and we kind of went",
    "start": "2532040",
    "end": "2537079"
  },
  {
    "text": "back to the drawing board and added things like the pre-rendering and the CSS optimization stage and a lot of that",
    "start": "2537079",
    "end": "2545200"
  },
  {
    "text": "a lot of the reason why you see preact as the fault now is because preact was the test bed that we used for all of",
    "start": "2545200",
    "end": "2551520"
  },
  {
    "text": "this so create wmr will scaffold the project that when you do wmr build or",
    "start": "2551520",
    "end": "2557800"
  },
  {
    "text": "npm run build uh you don't need JavaScript to run the output at all and",
    "start": "2557800",
    "end": "2563640"
  },
  {
    "text": "preact in the scaffolded thing is how that works but the API is actually completely independent like",
    "start": "2563640",
    "end": "2570559"
  },
  {
    "text": "pre-rendering in wmr is just you export a function called pre-render from whatever the first script tag in your",
    "start": "2570559",
    "end": "2576559"
  },
  {
    "text": "HTML file is and that function it's an async function so it returns a promise",
    "start": "2576559",
    "end": "2582640"
  },
  {
    "text": "resolving to an object with an HTML string property and a links property",
    "start": "2582640",
    "end": "2587720"
  },
  {
    "text": "that is an array of strings uh and so the HTML is the stuff that you pre-rendered however you chose to do",
    "start": "2587720",
    "end": "2593880"
  },
  {
    "text": "that could just be returning a string if you wanted but you could see how that would work in View and react and spil and whatever and then the links property",
    "start": "2593880",
    "end": "2600440"
  },
  {
    "text": "is if you want other URLs to then go and pre-render and wmr won't it won't",
    "start": "2600440",
    "end": "2605880"
  },
  {
    "text": "pre-render if it's already pre-rendered stuff but that's actually the guts of how our automatic pre-rendering works",
    "start": "2605880",
    "end": "2612480"
  },
  {
    "text": "and it has nothing to do with with preact it happens that preact can use that in a way that is extremely optimal",
    "start": "2612480",
    "end": "2619000"
  },
  {
    "text": "uh we don't ever have to parse the HTML because we generated it and the thing that looks for links happens during the",
    "start": "2619000",
    "end": "2624960"
  },
  {
    "text": "generation of the HTML but it's just an array of strings and so like anybody I I think there was",
    "start": "2624960",
    "end": "2631280"
  },
  {
    "text": "somebody working on a on a spelt test for this and we've got one bug we need to fix for compiling SP templates but",
    "start": "2631280",
    "end": "2638319"
  },
  {
    "text": "like you could easily adopt this to any framework and so my hope here would be like because wmr supports config files",
    "start": "2638319",
    "end": "2646240"
  },
  {
    "text": "and anyone can create their own replacement for create wmr it's a really simple package somebody could create",
    "start": "2646240",
    "end": "2653000"
  },
  {
    "text": "like a you know a package that scaffolds a wmr based react app or Vue app or spelt app and it would be just as much",
    "start": "2653000",
    "end": "2660400"
  },
  {
    "text": "of a first class citizen as preact it just would have a config file like a oneline config file that just says like",
    "start": "2660400",
    "end": "2667359"
  },
  {
    "text": "export default react plugin right it's very minimal changes so somebody could create",
    "start": "2667359",
    "end": "2674720"
  },
  {
    "text": "that and somebody will probably create that yeah that's my or Fork wmr but like forking wmr we lose out on a lot of the",
    "start": "2674720",
    "end": "2683359"
  },
  {
    "text": "like um sheared momentum aspect and collaboration aspect not to say that wmr",
    "start": "2683359",
    "end": "2689280"
  },
  {
    "text": "is necessarily the place where it should happen right but the Hope was like if everybody's using plugins on top of the",
    "start": "2689280",
    "end": "2694760"
  },
  {
    "text": "tool then we can make the tool better and at some point when we take all the pieces of the tool and publish them to npm as independent things everyone",
    "start": "2694760",
    "end": "2701839"
  },
  {
    "text": "benefits kind of leads me to a meta question around collaboration versus you know competition and like the decision",
    "start": "2701839",
    "end": "2708720"
  },
  {
    "text": "here to start a new tool of course it was like well prak needs something you know we need our story and so it makes",
    "start": "2708720",
    "end": "2714480"
  },
  {
    "text": "sense that the preact team would make their own story and I I like how you're building it in a way that can be reused",
    "start": "2714480",
    "end": "2720800"
  },
  {
    "text": "and collaborated as much as possible but still be like preact tool but like you",
    "start": "2720800",
    "end": "2726599"
  },
  {
    "text": "said there snow pack there's these other efforts out there and the decision was we're going to build at this level of",
    "start": "2726599",
    "end": "2733680"
  },
  {
    "text": "abstraction we're going to experiment so that there's more things but then at for",
    "start": "2733680",
    "end": "2738920"
  },
  {
    "text": "example the export Maps level you're like well if we extract this into a library everybody who's doing Vite or",
    "start": "2738920",
    "end": "2745400"
  },
  {
    "text": "doing these other tools could use the export Maps library and we could collaborate at that level how do we know",
    "start": "2745400",
    "end": "2751119"
  },
  {
    "text": "which layers of abstraction is like we need a thousand ideas to flourish and how do we know like hey one good ide we",
    "start": "2751119",
    "end": "2757280"
  },
  {
    "text": "can all collaborate let's team up like where where do we draw those lines it seems to me like a very difficult thing",
    "start": "2757280",
    "end": "2763960"
  },
  {
    "text": "to decide it it is an extremely hard problem it is a distributed problem I have this terrible habit of throwing",
    "start": "2763960",
    "end": "2770000"
  },
  {
    "text": "myself at distributed problems um for some reason Google seems to be willing to keep me on staff partly partly to do",
    "start": "2770000",
    "end": "2777599"
  },
  {
    "text": "that yeah um and so like I I mentioned I was making the rounds looking at everybody's export map implementations",
    "start": "2777599",
    "end": "2783520"
  },
  {
    "text": "rollup just landed it I think Lars from the uh web server implemented it in roll",
    "start": "2783520",
    "end": "2789000"
  },
  {
    "text": "up yay but part of the reason why I'm doing that and this is not to say that I'm the most objective person to be",
    "start": "2789000",
    "end": "2795880"
  },
  {
    "text": "doing this but I'm I'm hoping that I can go and sort of do the survey write the doc that kind of gives the lay of the",
    "start": "2795880",
    "end": "2802240"
  },
  {
    "text": "land publish that and then whether or not wmr is the right implementation from",
    "start": "2802240",
    "end": "2808400"
  },
  {
    "text": "which to derive the common implementation I will have kind of one",
    "start": "2808400",
    "end": "2814960"
  },
  {
    "text": "place that summarizes all of the current uh implementations M I think the",
    "start": "2814960",
    "end": "2821920"
  },
  {
    "text": "difficulty is always with the thing you said which is like okay export Maps is",
    "start": "2821920",
    "end": "2827319"
  },
  {
    "text": "an easy one because that's that's a spec it's something that not there so obviously there's there's value in a shared implementation of a spec in a",
    "start": "2827319",
    "end": "2833480"
  },
  {
    "text": "reference implementation essentially and bundlers aren't necessarily able to use nodes implementation because it is not",
    "start": "2833480",
    "end": "2841079"
  },
  {
    "text": "independent of node so it's not technically a pure reference implementation and that's not to disparage of but it's just it fits their",
    "start": "2841079",
    "end": "2848480"
  },
  {
    "text": "need yeah right um the other things are Harrier so we wrote that custom a",
    "start": "2848480",
    "end": "2854920"
  },
  {
    "text": "Transformer that is largely Babel compatible what do we do with that right like is that a wmr thing we literally",
    "start": "2854920",
    "end": "2861400"
  },
  {
    "text": "built it to optimize wmr's performance while still supporting Babble plugins",
    "start": "2861400",
    "end": "2866480"
  },
  {
    "text": "but like does the community need a sort of potentially lighter weight Babel",
    "start": "2866480",
    "end": "2872480"
  },
  {
    "text": "alternative not sure about that right my default answer would be no that's actually something we don't need or or",
    "start": "2872480",
    "end": "2879319"
  },
  {
    "text": "potentially don't want yeah that that's that gets tricky and and all these things were also written in JavaScript",
    "start": "2879319",
    "end": "2884720"
  },
  {
    "text": "and right now there's that whole move towards like okay could we use a faster language we even have an experimental PR",
    "start": "2884720",
    "end": "2892040"
  },
  {
    "text": "from a while back that uses es build for JS Transformations and minification um which was very",
    "start": "2892040",
    "end": "2898040"
  },
  {
    "text": "fast which is a go tool right yeah it's written and go uh it has a great JavaScript interface we used it prior to",
    "start": "2898040",
    "end": "2904520"
  },
  {
    "text": "it being pluggable but for our need is we use turer for minification and we use this custom babby thing for",
    "start": "2904520",
    "end": "2911880"
  },
  {
    "text": "transformation it does both of those things and it does them faster than both of those things by a lot um so I think",
    "start": "2911880",
    "end": "2918079"
  },
  {
    "text": "there's potential there but we we didn't want to this is actually the reason why wmr wasn't published as wmr and 16",
    "start": "2918079",
    "end": "2924720"
  },
  {
    "text": "packages that power wmr there's lots of packages in there that are independent and publishable but where the rationale",
    "start": "2924720",
    "end": "2933760"
  },
  {
    "text": "or the logic for why we would publish those things as independent is not clear or we already know that we don't want to",
    "start": "2933760",
    "end": "2940359"
  },
  {
    "text": "and so some of the stuff that's in there is stop gaps while we wait for the ecosystem to settle so that we can use",
    "start": "2940359",
    "end": "2946799"
  },
  {
    "text": "someone else's thing gotcha yeah I don't have a clear answer on that yeah not not clear answer that's a difficult decision",
    "start": "2946799",
    "end": "2953440"
  },
  {
    "text": "and like you said it's a distributed problem so it's not as if like you just get to decide that right like everybody",
    "start": "2953440",
    "end": "2958559"
  },
  {
    "text": "collaborates or doesn't and they make their decisions and this team makes that decision and sometimes it's the right",
    "start": "2958559",
    "end": "2963960"
  },
  {
    "text": "sometimes it's the wrong and it's just a it's an interesting I think mind space to consider those things but that's meta",
    "start": "2963960",
    "end": "2970040"
  },
  {
    "text": "bringing it back down to kind of ground floor here uh for somebody who's just like oh wmr looks cool I really like how",
    "start": "2970040",
    "end": "2976720"
  },
  {
    "text": "you don't even have to like I was actually playing with it as well it's Nick and I was like I haven't seen this npm and nit thing where like I didn't",
    "start": "2976720",
    "end": "2983599"
  },
  {
    "text": "even I expect to like install Das that's first time I'd use it too yeah you don't even like just to put an emphasis on it",
    "start": "2983599",
    "end": "2989720"
  },
  {
    "text": "you don't like npm install dasg wmr at all like you just innit a new project",
    "start": "2989720",
    "end": "2995359"
  },
  {
    "text": "npm andit wmr and then your project name and it just is done and even the project name is optional if you run npm and N",
    "start": "2995359",
    "end": "3002160"
  },
  {
    "text": "wmr in a directory we'll make the directory at wmr so so cool stuff like that is what gets people excited go",
    "start": "3002160",
    "end": "3008280"
  },
  {
    "text": "ahead Nick I was gonna say when I ran it uh and then cded into the directory I it ran so fast so I ran mpm install just",
    "start": "3008280",
    "end": "3014599"
  },
  {
    "text": "assuming I had to do that then I looked in the node modules directory and there was like nothing there it was great",
    "start": "3014599",
    "end": "3020400"
  },
  {
    "text": "right so lots of cool stuff like ground floor for people who are like this is a pretty neat tool um what is cool about",
    "start": "3020400",
    "end": "3027680"
  },
  {
    "text": "it and I guess before you answer that it gives its breadth right so it says from development to production so there's the",
    "start": "3027680",
    "end": "3034079"
  },
  {
    "text": "breadth of the tool like you're going to use this to Dev but you're also going to deploy production apps with this but it doesn't give the",
    "start": "3034079",
    "end": "3040079"
  },
  {
    "text": "scale you've mentioned prototypes you mention like hackathons if I'm reaching for a tool",
    "start": "3040079",
    "end": "3046160"
  },
  {
    "text": "tomorrow to build a modern web app like what kind of web app would I use wmr and",
    "start": "3046160",
    "end": "3051480"
  },
  {
    "text": "maybe where does it stop scaling or does it stop the scaling is there a a complexity like if I'm building a modern",
    "start": "3051480",
    "end": "3057079"
  },
  {
    "text": "Gmail would I maybe reach for something I'm building a modern Gmail right now with wmr you are that's that's hilarious",
    "start": "3057079",
    "end": "3064960"
  },
  {
    "text": "yeah okay so nothing to do with my employer but just like I what I want is",
    "start": "3064960",
    "end": "3070160"
  },
  {
    "text": "uh something that is not just a male client because I'm sick of just a mail clients I want a work client that has",
    "start": "3070160",
    "end": "3075880"
  },
  {
    "text": "all of my tasks and my calendar and my emails and my to-dos and does time based notifications and stuff like that so",
    "start": "3075880",
    "end": "3081480"
  },
  {
    "text": "maybe that answers the scale question like but web W is your tool so of course you're going to use your own tool but if I'm not you and I'm is there a scale",
    "start": "3081480",
    "end": "3088799"
  },
  {
    "text": "problem or not like is is it just it's it's smooth for prototypes but you could build a complex multifaced web app with",
    "start": "3088799",
    "end": "3095920"
  },
  {
    "text": "this thing so there's there's two hals to this the first is it's new and so you",
    "start": "3095920",
    "end": "3102480"
  },
  {
    "text": "know like with every new tool there's obviously always going to be warts I don't know whether me not running into",
    "start": "3102480",
    "end": "3109680"
  },
  {
    "text": "them is more because I know what the warts are or maybe it's the other half which is that I I don't tend to be the",
    "start": "3109680",
    "end": "3115559"
  },
  {
    "text": "person using the like packages I I mostly write my software I don't install",
    "start": "3115559",
    "end": "3121240"
  },
  {
    "text": "a lot of it with the exception of like UI tool kits uh which was always the big challenge with wmr that we had to",
    "start": "3121240",
    "end": "3127559"
  },
  {
    "text": "overcome because they're big and right early and they use weird weird package",
    "start": "3127559",
    "end": "3132599"
  },
  {
    "text": "semantics that aren't always correct uh but they those work in wmr at least the",
    "start": "3132599",
    "end": "3138000"
  },
  {
    "text": "other piece is the actual physical scaling of the development time approach",
    "start": "3138000",
    "end": "3143079"
  },
  {
    "text": "of shipping es modules there have been some maybe not super",
    "start": "3143079",
    "end": "3148520"
  },
  {
    "text": "scientific uh kind of experiments and right now the answers we have are",
    "start": "3148520",
    "end": "3154799"
  },
  {
    "text": "whatever the opposite of definitive is it's it's just we know that if you ship",
    "start": "3154799",
    "end": "3160680"
  },
  {
    "text": "you know 10,000 individual es modules uh especially if you're using",
    "start": "3160680",
    "end": "3166280"
  },
  {
    "text": "http1 that's going to be somewhat slow and I'm actually in a in a unique",
    "start": "3166280",
    "end": "3171680"
  },
  {
    "text": "position where I am building wmr on one hand with the preact team and we're",
    "start": "3171680",
    "end": "3178000"
  },
  {
    "text": "relying on that but then also I'm talking to the Chrome and V8 teams on the other side uh who are investigating",
    "start": "3178000",
    "end": "3185079"
  },
  {
    "text": "module streaming performance um and so we're actually using this and and things",
    "start": "3185079",
    "end": "3191240"
  },
  {
    "text": "that look like this in in benchmarks right now gotcha so there's a there's a bit of a cart and horse situation there",
    "start": "3191240",
    "end": "3197040"
  },
  {
    "text": "from the performance standpoint for scaling up many thousands of modules but even today for Fairly large siiz",
    "start": "3197040",
    "end": "3203799"
  },
  {
    "text": "projects the way that this constraint ends up working is that your npm",
    "start": "3203799",
    "end": "3209200"
  },
  {
    "text": "dependencies actually don't scale one to one with the number of files on dis because we we do compile those with",
    "start": "3209200",
    "end": "3215240"
  },
  {
    "text": "rollup and so like in a typical project you'll kind of you'll add a bunch of dependencies to your project and then at",
    "start": "3215240",
    "end": "3220559"
  },
  {
    "text": "a certain point it mostly plateaus right like you're not constantly reading new dependencies from mpm as you work you",
    "start": "3220559",
    "end": "3227000"
  },
  {
    "text": "you kind of end up with like your framework you substrate and then a couple of random things that get added over time um but that number doesn't",
    "start": "3227000",
    "end": "3233119"
  },
  {
    "text": "grow super fast and those all get cached in the HP cach on disk so they're relatively fast and then the number that",
    "start": "3233119",
    "end": "3240839"
  },
  {
    "text": "does change relative to your files on disk is your source files so that's kind of the thing that you would want to keep",
    "start": "3240839",
    "end": "3246160"
  },
  {
    "text": "in mind I don't know that today I would necessarily jump to using wmr on a",
    "start": "3246160",
    "end": "3252440"
  },
  {
    "text": "project that has 2,000 source files um I don't have any reason not to suggest",
    "start": "3252440",
    "end": "3258480"
  },
  {
    "text": "doing that just don't um yeah exact but like that would be the scaling characteristic that I would that I would",
    "start": "3258480",
    "end": "3264839"
  },
  {
    "text": "be concerned about right not concerned from like should I do this standpoint but like how long is this going to take",
    "start": "3264839",
    "end": "3270240"
  },
  {
    "text": "during development standpoint and like hot module reloading helps with that because that's now you're only talking",
    "start": "3270240",
    "end": "3276040"
  },
  {
    "text": "about the first load that might be waiting to stream modules to disk and this all changes as the semantics of",
    "start": "3276040",
    "end": "3281720"
  },
  {
    "text": "browser module streaming parsing change but that's the main one the other side of the coin which is what about",
    "start": "3281720",
    "end": "3288960"
  },
  {
    "text": "production yeah I don't think I'm like",
    "start": "3288960",
    "end": "3294799"
  },
  {
    "text": "overstating wmr abilities I don't think it would be overstating wmr's abilities to say that",
    "start": "3294799",
    "end": "3300720"
  },
  {
    "text": "it is fairly solid because in production wmr is just a fairly sane rollup config",
    "start": "3300720",
    "end": "3309160"
  },
  {
    "text": "like it's you know it's not actually we don't hit the custom code Pathways we're not running through our own plug-in",
    "start": "3309160",
    "end": "3315119"
  },
  {
    "text": "Runner we're not doing those things it's like pretty similar to a standard rollup config we use our node modules",
    "start": "3315119",
    "end": "3322480"
  },
  {
    "text": "resolution um but we actually do that so that it's never going to be different in production than it was in development",
    "start": "3322480",
    "end": "3327680"
  },
  {
    "text": "because that would be very awful um and you know some similar things for transpiling like we we use the custom",
    "start": "3327680",
    "end": "3333039"
  },
  {
    "text": "transpiler again because we don't want it to be different but then when we go to Minify like we Minify with CER",
    "start": "3333039",
    "end": "3338799"
  },
  {
    "text": "standard tool we bundle with rollup standard tool by default the browser support for wmr is modern browsers you",
    "start": "3338799",
    "end": "3345359"
  },
  {
    "text": "know question mark essentially Edge 16 plus stuff that supports script type module but there is a a one file plugin",
    "start": "3345359",
    "end": "3354200"
  },
  {
    "text": "that runs those bundles through Babel so now they and and creat copies of them so now you have their modern files certify",
    "start": "3354200",
    "end": "3361160"
  },
  {
    "text": "a script type module to 95% of browsers and then it creates a second set of files that it automatically injects",
    "start": "3361160",
    "end": "3368000"
  },
  {
    "text": "script no module tags for and serves to Legacy browsers and poly fills them so",
    "start": "3368000",
    "end": "3373680"
  },
  {
    "text": "like in terms of the you know the production output quality the production output like what has been taken into",
    "start": "3373680",
    "end": "3379920"
  },
  {
    "text": "consideration there's not really a consequential difference between what wmr can produce and what other tools can",
    "start": "3379920",
    "end": "3385880"
  },
  {
    "text": "produce yeah really honestly the main thing to point out is just it the production output is rollup based and",
    "start": "3385880",
    "end": "3392599"
  },
  {
    "text": "rollup it is the gold standard for production output at this point it's not the default and so that's always",
    "start": "3392599",
    "end": "3398960"
  },
  {
    "text": "something to consider is like usually this for for people would mean moving away from a webpack configuration and",
    "start": "3398960",
    "end": "3404520"
  },
  {
    "text": "onto a rollup one but I think there's lots of reasons why one might consider doing that so so that's something to to",
    "start": "3404520",
    "end": "3410880"
  },
  {
    "text": "kind of consider yeah another aspect of scale in terms of app complexity which I think also affects the production story",
    "start": "3410880",
    "end": "3418640"
  },
  {
    "text": "is not just module count or that kind of complexity but as soon as you start to want to do like maybe custom server",
    "start": "3418640",
    "end": "3426559"
  },
  {
    "text": "responses I know there's there's like a plug-in interface for middlewares and stuff so you can proxy you can add some",
    "start": "3426559",
    "end": "3433400"
  },
  {
    "text": "headers surely you can shoot yourself at that point once you start to extend it to like return arbitrary responses based",
    "start": "3433400",
    "end": "3440319"
  },
  {
    "text": "on logic now you're basically running a dynamic web server and you can of course have production issues there right yeah",
    "start": "3440319",
    "end": "3446559"
  },
  {
    "text": "that's that's a good point and and so I don't think we've we've properly put verbiage around this in the readme and",
    "start": "3446559",
    "end": "3452640"
  },
  {
    "text": "in some of our stuff but in the in the launch announcement and in the couple videos I did we want to be clear like",
    "start": "3452640",
    "end": "3457799"
  },
  {
    "text": "wmr serve like our our production style server right we did not build that as a",
    "start": "3457799",
    "end": "3464680"
  },
  {
    "text": "suggestion that you should use that to serve your application in production I wouldn't do that because like at the end",
    "start": "3464680",
    "end": "3471039"
  },
  {
    "text": "of the day the best outcome is it's the PO module and the serve modle module",
    "start": "3471039",
    "end": "3476640"
  },
  {
    "text": "both by Luke Edwards which are great modules but that's all it's doing like it's you know it's that and then an http2 server and really in production",
    "start": "3476640",
    "end": "3484359"
  },
  {
    "text": "you shouldn't be serving http2 from node you should be serving it from your CDN and at that point why serve your files",
    "start": "3484359",
    "end": "3490160"
  },
  {
    "text": "from node in the first place deploy them to a CDN you know deploy them to netlify to uh Cloud flare now they've got Pages",
    "start": "3490160",
    "end": "3496920"
  },
  {
    "text": "or Firebase wherever the prod server that we bundled its goal was to give you a very",
    "start": "3496920",
    "end": "3505760"
  },
  {
    "text": "accurate local representation of what prod would be like okay that's actually why we had the middleware support so you",
    "start": "3505760",
    "end": "3511440"
  },
  {
    "text": "can add proxies and stuff is because in production you might have that setup but I I don't think it would make sense to",
    "start": "3511440",
    "end": "3517559"
  },
  {
    "text": "do that through wmr we're the development and bundling side of things and we we'll get you to production but",
    "start": "3517559",
    "end": "3522640"
  },
  {
    "text": "we aren't production right like it produces production assets but it is not your production server yeah and that's",
    "start": "3522640",
    "end": "3529920"
  },
  {
    "text": "that's actually a dividing line that I think we could make clearer and you had mentioned nextjs early on nextjs it is a",
    "start": "3529920",
    "end": "3536240"
  },
  {
    "text": "server right it is a a runtime that your application runs in wmr it really we have no intention of",
    "start": "3536240",
    "end": "3543440"
  },
  {
    "text": "being that there was an SSR plugin that I built more as like an experiment to",
    "start": "3543440",
    "end": "3549119"
  },
  {
    "text": "see could you do it um but even then I think if we ever actually formalized",
    "start": "3549119",
    "end": "3555440"
  },
  {
    "text": "going down that road it would still be we will generate a server as a JS file",
    "start": "3555440",
    "end": "3561920"
  },
  {
    "text": "that you're going to go and host yourself right and and it'll or it'll be like a piece of middle whereare that you're going to mount into your own node",
    "start": "3561920",
    "end": "3567520"
  },
  {
    "text": "server because wmr is not a stack that's kind of the dividing line that's a good distinction from an outsider reading the",
    "start": "3567520",
    "end": "3574319"
  },
  {
    "text": "read me and checking it out and like I said is it is it like a nextjs because I'm trying to figure out like is this",
    "start": "3574319",
    "end": "3580119"
  },
  {
    "text": "going to host a hybrid application or not I mean it can obviously it could it can yeah but does it want to be that and",
    "start": "3580119",
    "end": "3586480"
  },
  {
    "text": "I think the answer to that sounds like no it doesn't really want to be that no and to to the point where like I think in order to do that we would end up",
    "start": "3586480",
    "end": "3592799"
  },
  {
    "text": "having to compromise on being good at generating stattic caps and if there was a need there I would rather have it be a",
    "start": "3592799",
    "end": "3599240"
  },
  {
    "text": "separate tool or or like a tool that uses wmr for bundling but that's it and and like there's a bunch of folks right",
    "start": "3599240",
    "end": "3604799"
  },
  {
    "text": "now who are trying out wiring up 11 the static site generator and then just",
    "start": "3604799",
    "end": "3610000"
  },
  {
    "text": "using wmr as the front end thing so like you can have 11 with a script type",
    "start": "3610000",
    "end": "3615440"
  },
  {
    "text": "module tag that just points at wmr or even use wmr's middleware thing to proxy to 11t but then when you do like a",
    "start": "3615440",
    "end": "3622240"
  },
  {
    "text": "production build you're just saying heyr give me your assets okay those are in 11t now 11t is ultimately the stack uh",
    "start": "3622240",
    "end": "3630119"
  },
  {
    "text": "and to me that just fits a lot better with the model it's generative not",
    "start": "3630119",
    "end": "3635240"
  },
  {
    "text": "runtime gotcha anything Nick no that sounds really interesting I like that's kind of a use case I was thinking of is",
    "start": "3635240",
    "end": "3642280"
  },
  {
    "text": "using wmr with 11d kind of just as like a side project fun idea and a way to get",
    "start": "3642280",
    "end": "3648440"
  },
  {
    "text": "to use this a little bit more it does seem like a good fit and especially like",
    "start": "3648440",
    "end": "3654160"
  },
  {
    "text": "because we have that thing where we start from HTM files and in development we don't even look at the htl file it's",
    "start": "3654160",
    "end": "3659640"
  },
  {
    "text": "just that first script tag request when it comes into the HP server we deal with that it lends itself quite well you",
    "start": "3659640",
    "end": "3665000"
  },
  {
    "text": "would get hot module replacement in 11t which is normally a pain in the ass to set up yeah that'd be really cool and",
    "start": "3665000",
    "end": "3671720"
  },
  {
    "text": "then the other piece there is there are folks myself included who",
    "start": "3671720",
    "end": "3678440"
  },
  {
    "text": "if you're not currently using 11t or let's say you're building a website that isn't strictly content you might want to",
    "start": "3678440",
    "end": "3685760"
  },
  {
    "text": "have have page based routing kind of in an xjs style and so we have plugins and",
    "start": "3685760",
    "end": "3690880"
  },
  {
    "text": "recipes now it actually it basically just there's a plugin that lets you import a directory it Returns the files",
    "start": "3690880",
    "end": "3697039"
  },
  {
    "text": "in the directory as an array and you could actually build a whole static side generator on top of that so we've got uh",
    "start": "3697039",
    "end": "3702079"
  },
  {
    "text": "demos now showing how to do that but like wmr is actually lower level than any of those things so that's it's more",
    "start": "3702079",
    "end": "3708200"
  },
  {
    "text": "like if you want to do that you can if it's fully supported but we're not telling you like this is what it's for",
    "start": "3708200",
    "end": "3714160"
  },
  {
    "text": "well the project can be found github.com preactjs wmr or hey just hop into your",
    "start": "3714160",
    "end": "3720720"
  },
  {
    "text": "terminal and type npm andit wmr and you can even leave off your project name it'll just take your current directory",
    "start": "3720720",
    "end": "3726520"
  },
  {
    "text": "and turn into something cool be aware that it will blow up your directory right and that's not like a w go ahead",
    "start": "3726520",
    "end": "3732920"
  },
  {
    "text": "and run that go ahead and run that in your home directory everything will be just fine and Jason Miller thanks so much for",
    "start": "3732920",
    "end": "3739520"
  },
  {
    "text": "joining us uh you can find Jason online he's at developer _ develop it depending",
    "start": "3739520",
    "end": "3745640"
  },
  {
    "text": "on the context what's the best way to reach you Jason Twitter the best GitHub",
    "start": "3745640",
    "end": "3750720"
  },
  {
    "text": "what yeah Twitter's fine all right so links to Jason in the show notes links to wmr all the things discussed on this",
    "start": "3750720",
    "end": "3756880"
  },
  {
    "text": "episode of course are right there in your show notes for easy clicking Nick thanks for hanging out for our first",
    "start": "3756880",
    "end": "3762079"
  },
  {
    "text": "episode back Jason thanks for joining us and for really putting so much work into these cool new tools I mean I love not",
    "start": "3762079",
    "end": "3769319"
  },
  {
    "text": "having to write cool new tools but getting to just use these cool new tools and criticize them and enjoy them and so",
    "start": "3769319",
    "end": "3775960"
  },
  {
    "text": "we appreciate all the effort you are putting into pushing the web forward for all of us that's our show talk to you",
    "start": "3775960",
    "end": "3782000"
  },
  {
    "text": "again next week if you're a first time listener",
    "start": "3782000",
    "end": "3787720"
  },
  {
    "text": "stick around why don't you subscribe now at JSP party. FM or search for JS party",
    "start": "3787720",
    "end": "3793079"
  },
  {
    "text": "in your favorite podcast app you'll find us oh and while you're there maybe leave us a nice review We love those also",
    "start": "3793079",
    "end": "3800319"
  },
  {
    "text": "don't forget we're giving away those two free tickets to test JS Summit follow at JSP party FM to enter we'll announce the",
    "start": "3800319",
    "end": "3806480"
  },
  {
    "text": "winners real soon now music for jazz parties produced by the beat freak break master cylinder and we're brought to you",
    "start": "3806480",
    "end": "3811680"
  },
  {
    "text": "by some awesome sponsors special thanks to fastly launch darkley and Len Noe for their continued support next up on the",
    "start": "3811680",
    "end": "3818079"
  },
  {
    "text": "PO I sit down with a creator of developer road maps to discuss the paths you can take to being a web developer in",
    "start": "3818079",
    "end": "3823880"
  },
  {
    "text": "2021 that episode's hit in your podcast feed next [Music]",
    "start": "3823880",
    "end": "3834720"
  },
  {
    "text": "week [Music]",
    "start": "3834720",
    "end": "3843480"
  },
  {
    "text": "just waiting for dark mode to eventually land in node.js [Music]",
    "start": "3843480",
    "end": "3851780"
  }
]