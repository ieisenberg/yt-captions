[
  {
    "text": "first of all beat covers both the development part and the Bel part during",
    "start": "80",
    "end": "5440"
  },
  {
    "text": "development it is a Dev server and during build we actually run a full bundling process using rollup so if you",
    "start": "5440",
    "end": "12679"
  },
  {
    "text": "use webpack you have to install webpack webpack CLI webpack Dev server then you",
    "start": "12679",
    "end": "17880"
  },
  {
    "text": "need to configure the dev server to do the same thing with the actual build but V tries to just have all these things in",
    "start": "17880",
    "end": "24519"
  },
  {
    "text": "one package what's up friends this episode",
    "start": "24519",
    "end": "31359"
  },
  {
    "text": "is brought to you by our friends at retool the locco platform for developers to build internal tools some of the best",
    "start": "31359",
    "end": "37000"
  },
  {
    "text": "teams out there trust retool Rex coinbase plaid door Dash legal genius",
    "start": "37000",
    "end": "42239"
  },
  {
    "text": "Amazon all birds pelaton and so many more the developers at these teams trust retool as a platform to build their",
    "start": "42239",
    "end": "49079"
  },
  {
    "text": "internal tools and that means you can too it's free to try so head to ret.com changelog again ret.com",
    "start": "49079",
    "end": "57210"
  },
  {
    "text": "[Music] changelog [Music]",
    "start": "57210",
    "end": "63700"
  },
  {
    "text": "[Music] this is JS party your weekly celebration",
    "start": "68290",
    "end": "73439"
  },
  {
    "text": "of JavaScript and the web we record live on Thursdays at 1:00 p.m. us Eastern 10:",
    "start": "73439",
    "end": "79560"
  },
  {
    "text": "a.m. Pacific join in on the hij Jinks at JSP party. fm/ Community it's totally",
    "start": "79560",
    "end": "85200"
  },
  {
    "text": "free and don't forget to follow us on Twitter at JSP party FM special thanks",
    "start": "85200",
    "end": "90720"
  },
  {
    "text": "to our partners at fastly for delivering you our episodes super fast all around the world check them out at fastly.com",
    "start": "90720",
    "end": "97640"
  },
  {
    "text": "all right here we go hey it's party time",
    "start": "97640",
    "end": "102840"
  },
  {
    "text": "[Applause] y'all hello JS party listeners we have a very special show today and it's",
    "start": "104030",
    "end": "110040"
  },
  {
    "text": "actually extra special because we're recording it at a special hour because our guest is so special like we made all",
    "start": "110040",
    "end": "115320"
  },
  {
    "text": "kinds of like there's coffee going on for Nick and I this is very exciting so",
    "start": "115320",
    "end": "120880"
  },
  {
    "text": "Nick Nick is my co-panelist for today hello Nick welcome ho ho how are you it's been a hot minute since we've been on a show together I feel like yeah",
    "start": "120880",
    "end": "128119"
  },
  {
    "text": "right it has how are you doing I'm doing great I miss you and I'm happy to like",
    "start": "128119",
    "end": "133360"
  },
  {
    "text": "be talking about V with you today with our special guest Evan Yao Evan welcome",
    "start": "133360",
    "end": "141519"
  },
  {
    "text": "we're so happy to have you here thank you thank you welcome yeah happy to be here too yeah you're like this for me",
    "start": "141519",
    "end": "147760"
  },
  {
    "text": "you're like this um I don't know I I feel like you're the most I'm trying to say a word that won't get censored",
    "start": "147760",
    "end": "154120"
  },
  {
    "text": "you're the most prolific one of the most prolific open source Developers for me",
    "start": "154120",
    "end": "159159"
  },
  {
    "text": "thank you yeah really I I think your story and your journey has been so interesting I think you've gone from",
    "start": "159159",
    "end": "164720"
  },
  {
    "text": "working at like a big company to kind of working independently for yourself and supporting yourself and creating some",
    "start": "164720",
    "end": "171360"
  },
  {
    "text": "really great open source tools in the while you've been doing that um so can you tell us a little bit about yourself for folks who might not be familiar and",
    "start": "171360",
    "end": "178360"
  },
  {
    "text": "yeah give us a little bit of your origin story hi everyone my name is Evan Yo and",
    "start": "178360",
    "end": "183680"
  },
  {
    "text": "I'm a full-time open source developer and I've been doing that since 2016 so",
    "start": "183680",
    "end": "191480"
  },
  {
    "text": "it's like almost six years now before that I worked at Silicon Valley startup called meteor and before that at Google",
    "start": "191480",
    "end": "198440"
  },
  {
    "text": "for a bit over two years so I mostly work on two projects VJs and vit which",
    "start": "198440",
    "end": "206159"
  },
  {
    "text": "we're talking about today yeah and uh I spent first half of my life in China second",
    "start": "206159",
    "end": "212480"
  },
  {
    "text": "half in the US and uh recently just moved to Singapore so this is like the",
    "start": "212480",
    "end": "217920"
  },
  {
    "text": "third chapter and put me in a really awkward time zone for scheduling",
    "start": "217920",
    "end": "223239"
  },
  {
    "text": "meetings with us people yeah it's it's like we're we're on almost a 12-hour Spectrum here you know so it's like 9:00",
    "start": "223239",
    "end": "230159"
  },
  {
    "text": "for you and exactly 8: a.m. for me 7:00 a.m. for so fun times no well thank you",
    "start": "230159",
    "end": "237239"
  },
  {
    "text": "so much we're so happy to have you here Evan and I think for me one of the reasons why I find your work kind of",
    "start": "237239",
    "end": "243280"
  },
  {
    "text": "like so interesting is I think you've always somehow managed to challenge the status quo and like whip out something",
    "start": "243280",
    "end": "249760"
  },
  {
    "text": "that's like not only impressive in terms of its like ability but I think in terms of its Community as well I think like",
    "start": "249760",
    "end": "255879"
  },
  {
    "text": "view has just kind of like we were just talking last week with Toby LEL about",
    "start": "255879",
    "end": "261560"
  },
  {
    "text": "kind of Open Source sustainability and what it's like also for corporations to start like drawing all of our boundaries",
    "start": "261560",
    "end": "268040"
  },
  {
    "text": "for us within like largely adopted open source projects and you know I feel like view has like stayed true to its",
    "start": "268040",
    "end": "274280"
  },
  {
    "text": "Community roots and it's really great to see like you've done the same thing also with vit so can you tell us like what is",
    "start": "274280",
    "end": "281080"
  },
  {
    "text": "vit so we've first of all anyone who's like vit I thought it's bite what's going on yeah so feet is the French word",
    "start": "281080",
    "end": "288120"
  },
  {
    "text": "for quick so view is in fact also a French word so oh yes the technically",
    "start": "288120",
    "end": "293960"
  },
  {
    "text": "correct pronunciation would be Vu but I just decided to go with v and with v I decided okay it's a French word let's",
    "start": "293960",
    "end": "300880"
  },
  {
    "text": "let's pronounce it the French way so because I get the opportunity to actually set the record straight off the bat so this time I'm I'm doing that but",
    "start": "300880",
    "end": "308639"
  },
  {
    "text": "yeah it's a play on the quick right because the original motivation of building V was we were having some",
    "start": "308639",
    "end": "315919"
  },
  {
    "text": "really slow build times and during development waiting for the things to compile and it's U especially for large",
    "start": "315919",
    "end": "323160"
  },
  {
    "text": "view applications so I was getting fed up a little bit myself so I was looking into ways to say can we make this a bit",
    "start": "323160",
    "end": "330280"
  },
  {
    "text": "quicker when I think I okay I maybe this is the thing that I'll do it so I decided to give it the name that has",
    "start": "330280",
    "end": "336560"
  },
  {
    "text": "some connection to to quick or being fast we did a a uh hack week at my work",
    "start": "336560",
    "end": "342240"
  },
  {
    "text": "a few months ago back in November and we had to do like pitches and my pitch was let's replace create react app with v",
    "start": "342240",
    "end": "349520"
  },
  {
    "text": "and see how that goes for a week and and uh as part of my pitch I was just like V rhymes with feet and that's how I",
    "start": "349520",
    "end": "355560"
  },
  {
    "text": "hammered it in the pron correct pronunciation okay VES with",
    "start": "355560",
    "end": "362280"
  },
  {
    "text": "feet yeah so first of all um thank you for even like drawing the lines for me that like view is yeah also French like",
    "start": "362280",
    "end": "369960"
  },
  {
    "text": "I didn't even like make that connection which is so weird like um so also you would you're clearly also winning on",
    "start": "369960",
    "end": "376080"
  },
  {
    "text": "naming it seems right like uh so got the alliteration going French",
    "start": "376080",
    "end": "382639"
  },
  {
    "text": "Connection um French Connection also a clothing store by the way it is right",
    "start": "382639",
    "end": "388639"
  },
  {
    "text": "but anyways so slow build times right so can you kind of like walk folks through",
    "start": "388639",
    "end": "393720"
  },
  {
    "text": "like what was kind of maybe some of the source of that slowness right because for a long time on the web have not had",
    "start": "393720",
    "end": "400759"
  },
  {
    "text": "our a native module system and so the community has put together all of these kind of like variations like AMD",
    "start": "400759",
    "end": "408160"
  },
  {
    "text": "commonjs UMD iies and like you know whatever else like we could think of",
    "start": "408160",
    "end": "413720"
  },
  {
    "text": "right and you know ecmascript 6 kind of like has saved us from that Universe right so but it's taken a long time to",
    "start": "413720",
    "end": "420520"
  },
  {
    "text": "really roll that out in terms of like have we been able to really benefit from having unbundled um modules in the",
    "start": "420520",
    "end": "427280"
  },
  {
    "text": "browser and also in our build system so can you walk us through like how esm has maybe saved the day a little I would say",
    "start": "427280",
    "end": "433800"
  },
  {
    "text": "esm natively in the browser presented us an opportunity to sort of just rethink",
    "start": "433800",
    "end": "439479"
  },
  {
    "text": "how the model should work because previously because we didn't have a native module support in the browser we",
    "start": "439479",
    "end": "445400"
  },
  {
    "text": "have to basically bundle everything ourselves so that's why we had tools",
    "start": "445400",
    "end": "451319"
  },
  {
    "text": "like browserify webpack rollup they're all bundlers because their primary goal",
    "start": "451319",
    "end": "457120"
  },
  {
    "text": "is to take your Source modules and then concatenate them also uh put them into",
    "start": "457120",
    "end": "462879"
  },
  {
    "text": "the essentially pretend there is a module system and put everything into one file that the browser can understand",
    "start": "462879",
    "end": "469000"
  },
  {
    "text": "and the major downside of this is um for every change that we make even if we",
    "start": "469000",
    "end": "474039"
  },
  {
    "text": "just change a single module we have to still bundle the whole thing because we have to re build this whole entire",
    "start": "474039",
    "end": "481000"
  },
  {
    "text": "bundle so that we can reload it in the browser so this essentially means during",
    "start": "481000",
    "end": "486400"
  },
  {
    "text": "development to the build speed just deteriorates linearly with the size of",
    "start": "486400",
    "end": "491599"
  },
  {
    "text": "your app the bigger your app is the slower the build gets so if you you have an app with a thousand modules even if",
    "start": "491599",
    "end": "498919"
  },
  {
    "text": "you just added a single one of them you have to wait like 10 seconds for the thing to build and it just gets worse",
    "start": "498919",
    "end": "504479"
  },
  {
    "text": "and worse the longer you work on a project right so um that's why we start to have Concepts like hot module",
    "start": "504479",
    "end": "510840"
  },
  {
    "text": "replacement but interestingly enough uh even if we did have hot module",
    "start": "510840",
    "end": "515880"
  },
  {
    "text": "replacement with webpack primarily so we we discovered that I'm not entirely sure",
    "start": "515880",
    "end": "521518"
  },
  {
    "text": "the uh the the actual reason behind it but what we found in the wild is that",
    "start": "521519",
    "end": "526839"
  },
  {
    "text": "hot module replacement performance also deteriorates the bigger your app gets and that's very common in large webpack",
    "start": "526839",
    "end": "533560"
  },
  {
    "text": "based projects so I don't want to say that like webpack is the the cause of",
    "start": "533560",
    "end": "539200"
  },
  {
    "text": "this problem because it's a Pioneer in in actually braining the concept of bundling mainstream right the thing that",
    "start": "539200",
    "end": "546240"
  },
  {
    "text": "we noticed is uh because our tool chain for view called vew CLI was webpack",
    "start": "546240",
    "end": "551279"
  },
  {
    "text": "based and view single file components also have some pretty intensive compiling involved so when we have a",
    "start": "551279",
    "end": "557959"
  },
  {
    "text": "large view project it can still take like four to five seconds even if you just addit a single file and then for",
    "start": "557959",
    "end": "564720"
  },
  {
    "text": "the hot module replacement to happen and for me that really kills the the feedback Loop the overall flow when I'm",
    "start": "564720",
    "end": "570959"
  },
  {
    "text": "working on something because I'm just making a simple tweak I have to wait 5",
    "start": "570959",
    "end": "576000"
  },
  {
    "text": "seconds and it just like during that 5 Seconds my mind gets a hold of something maybe I I see a message see a Twitter",
    "start": "576000",
    "end": "583360"
  },
  {
    "text": "message or something then I just get distracted the longer the the feedback loop is the more chances that you get",
    "start": "583360",
    "end": "590880"
  },
  {
    "text": "distracted or you just lose your Flow State when you're working on something so I was really wishing that I could",
    "start": "590880",
    "end": "598360"
  },
  {
    "text": "find a find a solution that gives me that really instant Snappy feedback loop",
    "start": "598360",
    "end": "604519"
  },
  {
    "text": "when we first started working on the web because you just load a script into an HTML file you refresh the page",
    "start": "604519",
    "end": "611519"
  },
  {
    "text": "everything is you just refresh everything just reloads right there's you don't have to wait for things to",
    "start": "611519",
    "end": "616760"
  },
  {
    "text": "compile so native esm kind of gives you that really Snappy thing right you just",
    "start": "616760",
    "end": "622640"
  },
  {
    "text": "write naps modules the browser can handle it it's really fast up to a",
    "start": "622640",
    "end": "627800"
  },
  {
    "text": "certain point there is some interesting technical limitations we can talk about later but for most apps if you're just",
    "start": "627800",
    "end": "634519"
  },
  {
    "text": "loading maybe 100 modules the speed is very very good especially during local",
    "start": "634519",
    "end": "640560"
  },
  {
    "text": "development so combined with that is um if we also build rethink how hot module",
    "start": "640560",
    "end": "647800"
  },
  {
    "text": "replacement can be implemented over native es modules instead over a bundling model we can decouple the hot",
    "start": "647800",
    "end": "655040"
  },
  {
    "text": "module replacement performance from the size of our app so no matter how many",
    "start": "655040",
    "end": "660160"
  },
  {
    "text": "modules you have in your module graph if you're editing just a single module only",
    "start": "660160",
    "end": "665519"
  },
  {
    "text": "that module and the import chain that Imports that module should be invalidated that's the ideal situation",
    "start": "665519",
    "end": "672399"
  },
  {
    "text": "and that's what feeds hot module replacement is able to do so that keeps",
    "start": "672399",
    "end": "677440"
  },
  {
    "text": "the hot module replacement speed constant even if your app is really huge",
    "start": "677440",
    "end": "682839"
  },
  {
    "text": "yeah that was a really great like uh summary of like the benefit of like moving from this linearly like growing",
    "start": "682839",
    "end": "690279"
  },
  {
    "text": "build time to kind of the benefit of just yeah like everything is modularized and so even the hot module replacement",
    "start": "690279",
    "end": "697120"
  },
  {
    "text": "is like able to be more optimized and you know and so this really makes a lot",
    "start": "697120",
    "end": "702160"
  },
  {
    "text": "of sense so Evan can you tell us a little bit about how you were able to",
    "start": "702160",
    "end": "707880"
  },
  {
    "text": "also leverage es build to handle some of this um heavy lifting I talked a little",
    "start": "707880",
    "end": "713000"
  },
  {
    "text": "bit about the limitation of native esm and the limitation is it struggles a little bit when you have too many many",
    "start": "713000",
    "end": "719440"
  },
  {
    "text": "modules loaded in the browser let's say uh when you're loading 100 brow 100 modules it's Snappy it's fast but once",
    "start": "719440",
    "end": "727160"
  },
  {
    "text": "you do something in the thousands it just starts to congest at the network",
    "start": "727160",
    "end": "732279"
  },
  {
    "text": "level because the browser has to make a HTTP request for every module that's fetched so when you have too many",
    "start": "732279",
    "end": "738959"
  },
  {
    "text": "modules being fetched in parallel the browser just gets stuck a little bit and you kind of have this sort of waterfall",
    "start": "738959",
    "end": "745320"
  },
  {
    "text": "of waiting for the request to come back and we noticed that there are two",
    "start": "745320",
    "end": "750760"
  },
  {
    "text": "aspects to solve this problem the first is U because esm is loaded on Demand",
    "start": "750760",
    "end": "757000"
  },
  {
    "text": "right so if you do code splitting say you lazy import certain parts of your",
    "start": "757000",
    "end": "763040"
  },
  {
    "text": "app which we should do in production for better performance right for our users it turns out that would also improve",
    "start": "763040",
    "end": "770440"
  },
  {
    "text": "your local development performance when you're using native esm because now you're only loading the modules that",
    "start": "770440",
    "end": "777000"
  },
  {
    "text": "you're actually working on say if you have a big app with like 20 routes but you're only working on one screen and if",
    "start": "777000",
    "end": "784320"
  },
  {
    "text": "each route is lazy loaded then even during development you're only loading and compiling the modules that's on the",
    "start": "784320",
    "end": "790920"
  },
  {
    "text": "route that you're currently working on so that's one aspect of it so we really actively encourage our users to think",
    "start": "790920",
    "end": "797279"
  },
  {
    "text": "about cothing even right when you're developing because that affects both development and production performance",
    "start": "797279",
    "end": "804360"
  },
  {
    "text": "the second aspect of it is a lot of these dependencies for example uh when",
    "start": "804360",
    "end": "809440"
  },
  {
    "text": "you import low Dash so low Dash has an es module build called Low Dash es but it has like 600 internal modules so when",
    "start": "809440",
    "end": "818199"
  },
  {
    "text": "you import low Dash directly low Dash yes directly the browser makes 600 requests all at once and it just goes",
    "start": "818199",
    "end": "825480"
  },
  {
    "text": "crazy so one thing we noticed that is um because these dependencies are almost",
    "start": "825480",
    "end": "832040"
  },
  {
    "text": "always guaranteed to be playing JavaScript there's really no special transform logic that you need to do",
    "start": "832040",
    "end": "838160"
  },
  {
    "text": "about them so so we can then we go back to the bundling route but we sort of pre-b bundle them so this is where Ved",
    "start": "838160",
    "end": "845639"
  },
  {
    "text": "tries to to be smart is uh it it separates your source code from your dependencies because your first your",
    "start": "845639",
    "end": "851800"
  },
  {
    "text": "dependencies don't change often second they're almost always plain JavaScript so we pre-process them each dependency",
    "start": "851800",
    "end": "858279"
  },
  {
    "text": "gets bundled pre-bundled into one file and we do that with es build so this is where es build comes in so es build",
    "start": "858279",
    "end": "865120"
  },
  {
    "text": "serves multiple rows in in V it's a really great project so we first use it",
    "start": "865120",
    "end": "870680"
  },
  {
    "text": "for dependency pre pre-b bundling as I said so this allows us to squash for example low dases from 600 modules to",
    "start": "870680",
    "end": "878320"
  },
  {
    "text": "just one module so now it loads Snappy it doesn't create all these extra",
    "start": "878320",
    "end": "883680"
  },
  {
    "text": "requests and because es build is extremely fast and what we notice that",
    "start": "883680",
    "end": "889079"
  },
  {
    "text": "is a lot of time is actually wasted in large projects a lot of time is wasted when you rebuild the project it's",
    "start": "889079",
    "end": "894839"
  },
  {
    "text": "actually just building the dependencies over and over again when if your dependen dependencies version didn't",
    "start": "894839",
    "end": "901160"
  },
  {
    "text": "change why are you rebuilding it over and over again so on your first server start Vach will prebundle your",
    "start": "901160",
    "end": "906800"
  },
  {
    "text": "dependencies and then cash them so on the next server start if your package dependencies your lock file didn't",
    "start": "906800",
    "end": "913399"
  },
  {
    "text": "change we'll just reuse everything just cashing we don't need to do any work again you just cash them right yeah that",
    "start": "913399",
    "end": "919720"
  },
  {
    "text": "makes a lot of sense I I worked with someone who like worked on the like a webpack plugin I think it was like",
    "start": "919720",
    "end": "925720"
  },
  {
    "text": "weback cach we'll put it in the show notes but it was like it dll plug yeah it was a plugin that like helped",
    "start": "925720",
    "end": "931839"
  },
  {
    "text": "optimize your web pack build time and rebuild time because it just cashed all of that it did a lot of caching and I",
    "start": "931839",
    "end": "938959"
  },
  {
    "text": "think like that was like the it ended up being the base spec for like how webpack handled perf in V4 or something like",
    "start": "938959",
    "end": "946240"
  },
  {
    "text": "that right like they kind of took that model from that plugin yeah file system caching is obviously going to be a big",
    "start": "946240",
    "end": "952480"
  },
  {
    "text": "performance boost but the thing is uh a weback because everything is bundled",
    "start": "952480",
    "end": "958079"
  },
  {
    "text": "together essentially your how your code Imports dependencies would affect how",
    "start": "958079",
    "end": "964399"
  },
  {
    "text": "the dependency should be bundled so changes in your source code would actually invalidate the cash for your",
    "start": "964399",
    "end": "971720"
  },
  {
    "text": "dependencies in some way so in webpack if you want to really consistently cache",
    "start": "971720",
    "end": "977519"
  },
  {
    "text": "your dependency build result you have to use something like the DL plugin which is uh pretty complicated to configure",
    "start": "977519",
    "end": "985120"
  },
  {
    "text": "right so one of the things that we also kind of struggle with is you can do a lot of very Advanced optimizations with",
    "start": "985120",
    "end": "992319"
  },
  {
    "text": "webpack but they are very very hard to get right also the more of these",
    "start": "992319",
    "end": "999319"
  },
  {
    "text": "Advanced plugins or configurations that you use the harder it gets for you to get everything working together nicely",
    "start": "999319",
    "end": "1006560"
  },
  {
    "text": "because we maintained VCI over a very long time and VCI is sort of this uh",
    "start": "1006560",
    "end": "1012000"
  },
  {
    "text": "battery included webpack based solution we try to do most of the complicated",
    "start": "1012000",
    "end": "1017560"
  },
  {
    "text": "stuff for our user and during that process we absorbed so much complexity it it's just getting out of hand while",
    "start": "1017560",
    "end": "1024438"
  },
  {
    "text": "working on V I also try to learn from the things that we we learned during the",
    "start": "1024439",
    "end": "1029798"
  },
  {
    "text": "development of UCI to say okay where is this step where maybe we can drop down",
    "start": "1029799",
    "end": "1035880"
  },
  {
    "text": "to the right layer of abstraction like directly in the in the tooling itself to solve some of this complexity problem",
    "start": "1035880",
    "end": "1042558"
  },
  {
    "text": "instead of having the base tooling to be extremely configurable but then the configuration layer becomes extremely",
    "start": "1042559",
    "end": "1048558"
  },
  {
    "text": "comp how about we just collapse these two layers together so that we solve the complexity directly in the tooling so",
    "start": "1048559",
    "end": "1055760"
  },
  {
    "text": "that we make the higher level system much simpler so a question I had about the the assumption that you make on",
    "start": "1055760",
    "end": "1061480"
  },
  {
    "text": "dependencies and I'm just wondering how V handles non-js dependencies because like a lot that I can think of is like",
    "start": "1061480",
    "end": "1067440"
  },
  {
    "text": "maybe Tailwind classes and um you know CSS or svgs things like that I see mhm",
    "start": "1067440",
    "end": "1073400"
  },
  {
    "text": "there are two ways to deal with this the first is for uh assets like cisss or SVG",
    "start": "1073400",
    "end": "1078640"
  },
  {
    "text": "when you import them okay we externalize them during the pre- bundling phase so",
    "start": "1078640",
    "end": "1084520"
  },
  {
    "text": "those files will will essentially be preserved and then go through the same",
    "start": "1084520",
    "end": "1090640"
  },
  {
    "text": "plug-in pipeline as your source files the second way to do it for example if you have a package that is uh shipping",
    "start": "1090640",
    "end": "1098120"
  },
  {
    "text": "directly say View files or spout files you can use the configuration option to",
    "start": "1098120",
    "end": "1104000"
  },
  {
    "text": "say don't prebundle this just load this as normal source files so all those",
    "start": "1104000",
    "end": "1109600"
  },
  {
    "text": "files will go through the same plug-in configuration as your source file yeah I mean I I think for me what was so cool",
    "start": "1109600",
    "end": "1115559"
  },
  {
    "text": "about V was like I think there's like hindsight Factor right H like we've been",
    "start": "1115559",
    "end": "1121280"
  },
  {
    "text": "bundling and doing complex build development locally for a while now where we've been able to kind of like",
    "start": "1121280",
    "end": "1126520"
  },
  {
    "text": "synthesize on like some really big pain points in our community right like you've named some of them around build",
    "start": "1126520",
    "end": "1132360"
  },
  {
    "text": "time and like optimization of like our module loading and lazy loading right",
    "start": "1132360",
    "end": "1139559"
  },
  {
    "text": "but also I think there's stuff like just having CSS support like just work and",
    "start": "1139559",
    "end": "1145960"
  },
  {
    "text": "then typescript support just work right so I mean we're starting to kind of like it feels like we're moving a few layers",
    "start": "1145960",
    "end": "1151640"
  },
  {
    "text": "up on our abstractions you know where we're okay the community seems to generally be synthesizing on these best",
    "start": "1151640",
    "end": "1158120"
  },
  {
    "text": "practices so let's in Congress like move up a few layers right so we can spend",
    "start": "1158120",
    "end": "1163280"
  },
  {
    "text": "more time focusing on the core problems that you need to solve for your app versus like twiddling with your web pack",
    "start": "1163280",
    "end": "1168480"
  },
  {
    "text": "and fig right because and this is not a show where we're poo pooping on webpack like we're all standing on the shoulders",
    "start": "1168480",
    "end": "1173640"
  },
  {
    "text": "of giants right like we you know webpack helped like enable us to like learn so many different things right and so now",
    "start": "1173640",
    "end": "1180720"
  },
  {
    "text": "we're just like doing what we do as web developers you know and just kind of like take the pain points and like",
    "start": "1180720",
    "end": "1185880"
  },
  {
    "text": "innovate on those like cow paths a little further but that that's just it like they're working within those cow",
    "start": "1185880",
    "end": "1191440"
  },
  {
    "text": "paths and really optimizing for that because that is in a lot of ways like the general way to do development now",
    "start": "1191440",
    "end": "1198760"
  },
  {
    "text": "and so you can build on top of that and just make those assumptions and keep things a lot smoother for the general",
    "start": "1198760",
    "end": "1204640"
  },
  {
    "text": "use case which is just so nice yeah I'm the same way as you Evan if if it's",
    "start": "1204640",
    "end": "1209960"
  },
  {
    "text": "taking a couple of seconds to build or to like refresh my mind just immediately wants to go somewhere else and so like",
    "start": "1209960",
    "end": "1216919"
  },
  {
    "text": "the hot module replacement is amazing especially like when I'm I've been working on a multi-part form component",
    "start": "1216919",
    "end": "1222320"
  },
  {
    "text": "for a long time if I could have it automatically refreshed at the part of the form that I'm at instead of having",
    "start": "1222320",
    "end": "1228159"
  },
  {
    "text": "to restart every time and go through it that makes such a difference and so it's so nice that's why I was a big fan of",
    "start": "1228159",
    "end": "1234799"
  },
  {
    "text": "like AMD back in the day because it just immediately reloaded and oh yeah theer understood it yeah in some way I think",
    "start": "1234799",
    "end": "1240919"
  },
  {
    "text": "when V when V first came out uh people were joking like isn't this just like",
    "start": "1240919",
    "end": "1246000"
  },
  {
    "text": "AMD back in the like required JS back in the days well you know history does repeat itself I think we had a talk with",
    "start": "1246000",
    "end": "1252240"
  },
  {
    "text": "Rich haris like a few weeks ago and I think we kind of circled on no no pun intended we circled on like this um",
    "start": "1252240",
    "end": "1259280"
  },
  {
    "text": "we're not doing a full circle necessarily we are there's a pendulum swing happening but it's a progressive",
    "start": "1259280",
    "end": "1264760"
  },
  {
    "text": "one right it's like we're pendulum swinging but we're continuing to progress and go up you",
    "start": "1264760",
    "end": "1270640"
  },
  {
    "text": "[Music]",
    "start": "1270640",
    "end": "1280869"
  },
  {
    "text": "know what's up party people this episode is brought to you by our friends at ray gun ray gun gives you inst visibility",
    "start": "1281840",
    "end": "1289480"
  },
  {
    "text": "into the health of your software get actionable realtime insights into the quality and the performance of your web",
    "start": "1289480",
    "end": "1296080"
  },
  {
    "text": "and mobile apps ray gun delivers modern tooling for customer Centric teams airor",
    "start": "1296080",
    "end": "1301360"
  },
  {
    "text": "monitoring and crash reporting should better quality software faster get code level insights into the health of your",
    "start": "1301360",
    "end": "1307320"
  },
  {
    "text": "application in real time and start fixing the errors impacting your end users experience you get real user",
    "start": "1307320",
    "end": "1313520"
  },
  {
    "text": "monitoring quickly identify and resolve front-end performance issues impacting real users in real time understand",
    "start": "1313520",
    "end": "1320840"
  },
  {
    "text": "exactly how your application performed for every user session and Page load and of course application performance Bing",
    "start": "1320840",
    "end": "1327120"
  },
  {
    "text": "gain unrivaled visibility into server side performance unlock detailed code",
    "start": "1327120",
    "end": "1332440"
  },
  {
    "text": "level insights into the root cause of performance issues so you can take action and deliver Lightning Fast",
    "start": "1332440",
    "end": "1338440"
  },
  {
    "text": "digital experiences the next step is to head to Ray gun.com and start your free",
    "start": "1338440",
    "end": "1343480"
  },
  {
    "text": "14-day trial no credit card required join thousands of customer Centric software teams who use ray gun every",
    "start": "1343480",
    "end": "1349559"
  },
  {
    "text": "single day again Ray gun.com [Music]",
    "start": "1349559",
    "end": "1365400"
  },
  {
    "text": "so we talked about V and kind of introduced what it is and what it does",
    "start": "1365400",
    "end": "1370679"
  },
  {
    "text": "but let's talk about where it fits into the tool chain like what if you replace",
    "start": "1370679",
    "end": "1375840"
  },
  {
    "text": "your current build system with v what are you actually placing what are the the nuts and bolts of it yeah so first",
    "start": "1375840",
    "end": "1381440"
  },
  {
    "text": "of all beat covers both the development part and the build part so it's during",
    "start": "1381440",
    "end": "1388679"
  },
  {
    "text": "development it is a Dev server and during build we actually run a full",
    "start": "1388679",
    "end": "1394039"
  },
  {
    "text": "bundling process using rollup so if you use webpack right you would have to",
    "start": "1394039",
    "end": "1399640"
  },
  {
    "text": "configure you have to install webpack webpack CLI webpack Dev server then you",
    "start": "1399640",
    "end": "1405159"
  },
  {
    "text": "need to configure the dev server to do the same thing with the the actual build but V tries to um just have all these",
    "start": "1405159",
    "end": "1412600"
  },
  {
    "text": "things in in one package so when it comes to the modules it handles typescript out of the box using yes",
    "start": "1412600",
    "end": "1419760"
  },
  {
    "text": "build so it only transforms the syntax it strips away your types spits out plain JavaScript it doesn't do type",
    "start": "1419760",
    "end": "1426320"
  },
  {
    "text": "checking one of the reasons we do that is because TSC type checking is really",
    "start": "1426320",
    "end": "1431360"
  },
  {
    "text": "slow so having that to be part of the modu transform pipeline is actually a",
    "start": "1431360",
    "end": "1436400"
  },
  {
    "text": "Major Performance killer on the other hand if you use something like vs code your vs code already runs a typescript",
    "start": "1436400",
    "end": "1442720"
  },
  {
    "text": "language service and you already get all these type teching what you're working on your code so why would why would you",
    "start": "1442720",
    "end": "1449240"
  },
  {
    "text": "want to do it as part of your build process to just slow it down seems very redundant yeah yeah right for those who",
    "start": "1449240",
    "end": "1456360"
  },
  {
    "text": "really want to have type checking during the like on your command line we also have a plug-in system like the community",
    "start": "1456360",
    "end": "1463880"
  },
  {
    "text": "has come up with plugins that allow us to just run TSC in a separate process so",
    "start": "1463880",
    "end": "1469200"
  },
  {
    "text": "it can leverage multiple cores without making your whole build pipeline slower I think that's also a better model than",
    "start": "1469200",
    "end": "1475840"
  },
  {
    "text": "uh doing type checking as as part of a module transform so that's typescript and because the build is extremely fast",
    "start": "1475840",
    "end": "1482559"
  },
  {
    "text": "you don't really notice a difference when you just like you can literally replace all your JS files to TS and the",
    "start": "1482559",
    "end": "1488559"
  },
  {
    "text": "Bild speed will be the same nice that's really powerful yeah I think for me what's lost on some developers is like",
    "start": "1488559",
    "end": "1495360"
  },
  {
    "text": "that TSC is like good for type checking and I would say like transforming that",
    "start": "1495360",
    "end": "1501480"
  },
  {
    "text": "into JavaScript it can be a whole other separate process and that's typically best done with Babel because Babel I",
    "start": "1501480",
    "end": "1507919"
  },
  {
    "text": "think is a better Transformer than you know the TSC uh compiler and so it's",
    "start": "1507919",
    "end": "1513159"
  },
  {
    "text": "good to kind of split those up if you can where you just like you use TSC for types and babble for for transforming so",
    "start": "1513159",
    "end": "1519840"
  },
  {
    "text": "I'm curious to see like what are what else like where does Babble even fit into this like this world what decisions",
    "start": "1519840",
    "end": "1526880"
  },
  {
    "text": "did you make let's put you on the spot yeah so by default we don't even need Babble anymore if you're building a v",
    "start": "1526880",
    "end": "1533799"
  },
  {
    "text": "app so the default assumption the target browser support is uh modern browsers",
    "start": "1533799",
    "end": "1538919"
  },
  {
    "text": "when you build with v the output is in fact also native esm so it assumes your",
    "start": "1538919",
    "end": "1545080"
  },
  {
    "text": "browser already supports native esm you can support older browsers but that",
    "start": "1545080",
    "end": "1550720"
  },
  {
    "text": "requires using a dedicated plug Legacy plugin so the Legacy pluging will in",
    "start": "1550720",
    "end": "1556559"
  },
  {
    "text": "fact pull in Babel using B preset M to actually do all the transpiling down",
    "start": "1556559",
    "end": "1562360"
  },
  {
    "text": "leveling your syntax and all that but if you are targeting above es",
    "start": "1562360",
    "end": "1567880"
  },
  {
    "text": "2015 es build already does a lot of the syntax down leveling so if you're targeting modern you still don't need",
    "start": "1567880",
    "end": "1574440"
  },
  {
    "text": "Babel so Babel really only comes in two scenarios one is you're really targeting Legacy browsers and two is uh you need",
    "start": "1574440",
    "end": "1582360"
  },
  {
    "text": "to do really custom plugins like completely custom Babel plugins that's",
    "start": "1582360",
    "end": "1587520"
  },
  {
    "text": "where bble plugging another case where bevel pluging coming is uh when if you",
    "start": "1587520",
    "end": "1593240"
  },
  {
    "text": "use react you're using or non JavaScript like you know I'm using like stage two",
    "start": "1593240",
    "end": "1598440"
  },
  {
    "text": "and stage one like right yeah yeah like you want to get those early proposals in",
    "start": "1598440",
    "end": "1604399"
  },
  {
    "text": "you can use Babel and you can directly use rollup plug-in Babel because V is",
    "start": "1604399",
    "end": "1609679"
  },
  {
    "text": "compatible with most rollup plugins so you don't even need to like look for for",
    "start": "1609679",
    "end": "1615520"
  },
  {
    "text": "a lot of things you don't even need to look for a v specific pluging nice you can look at the existing rollup",
    "start": "1615520",
    "end": "1621240"
  },
  {
    "text": "ecosystem and we also have a page where lists all the compatibility of existing",
    "start": "1621240",
    "end": "1626520"
  },
  {
    "text": "roller plugins with beads and I think we cover all the official plugins we Maybe cover like 80% to to or more of them so",
    "start": "1626520",
    "end": "1635919"
  },
  {
    "text": "yes you can use FAO if you want but if you're targeting modern browsers the chances are you don't really need to",
    "start": "1635919",
    "end": "1641720"
  },
  {
    "text": "there was another use case that I found in my My Week with v and that was if you",
    "start": "1641720",
    "end": "1646919"
  },
  {
    "text": "are relying in any way on the actual code being like I don't even know if I'm",
    "start": "1646919",
    "end": "1652799"
  },
  {
    "text": "saying this right but like would Babble essentially be treating that code kind of like commonjs and then like it's",
    "start": "1652799",
    "end": "1658159"
  },
  {
    "text": "transpiling it to not yes modules right I'm not sure if I so the specific use",
    "start": "1658159",
    "end": "1663480"
  },
  {
    "text": "case I'm I'm thinking of and like one way that we ended up having to use the babble plugin for V was specifically for",
    "start": "1663480",
    "end": "1670679"
  },
  {
    "text": "our tests and that was because we were using just. Mock and we needed to be able to get into the module loading to",
    "start": "1670679",
    "end": "1678200"
  },
  {
    "text": "Place modules with MOX so are you using just yeah okay so using just with v is",
    "start": "1678200",
    "end": "1685279"
  },
  {
    "text": "uh has always being a bit awkward because yeah just has opinions just has loud ones just didn't",
    "start": "1685279",
    "end": "1692080"
  },
  {
    "text": "really have native builting async transform support MH so for a very long time we're completely blocked on that so",
    "start": "1692080",
    "end": "1699559"
  },
  {
    "text": "in the I think in J 27 they finally shipped it so now technically we have a",
    "start": "1699559",
    "end": "1705600"
  },
  {
    "text": "first class integration with just but still it's sort of nonoptimal because",
    "start": "1705600",
    "end": "1710880"
  },
  {
    "text": "just really is like people using just are very used to configure completely",
    "start": "1710880",
    "end": "1716240"
  },
  {
    "text": "separate set of transforms just for Just Right which in a lot of cases is redundant and you have two",
    "start": "1716240",
    "end": "1723440"
  },
  {
    "text": "configurations two different set of plugins for two systems so that's why we",
    "start": "1723440",
    "end": "1728919"
  },
  {
    "text": "actually the community came up with a project called vest yes and uh it's a",
    "start": "1728919",
    "end": "1734000"
  },
  {
    "text": "vit native test Runner it uses V itself as it transform Pipeline and uh it uses",
    "start": "1734000",
    "end": "1741080"
  },
  {
    "text": "a lot of veds features like it it reruns your tests almost like hot module",
    "start": "1741080",
    "end": "1746360"
  },
  {
    "text": "replacement it can even directly read your V config file and just use exactly the same config so you just have one",
    "start": "1746360",
    "end": "1752159"
  },
  {
    "text": "config file and it just automatically do the exact same thing as your source files so when V first came out testing",
    "start": "1752159",
    "end": "1759279"
  },
  {
    "text": "unit testing was a major paino for a lot of our early adopters but I think with vest it's really a a solved problem now",
    "start": "1759279",
    "end": "1766279"
  },
  {
    "text": "in fact vest can be used even in nonv projects we've heard a lot of people",
    "start": "1766279",
    "end": "1771600"
  },
  {
    "text": "just migrating from J to v test without even using V and they found their test",
    "start": "1771600",
    "end": "1778039"
  },
  {
    "text": "to be running much faster nice yeah and they're probably maintaining less configuration as a result too yeah so",
    "start": "1778039",
    "end": "1784200"
  },
  {
    "text": "Evan I just kind of want to go back to the babble point because I think you know I find a babble so just because an",
    "start": "1784200",
    "end": "1789799"
  },
  {
    "text": "ecma standard gets published like ecas script 2022 if it gets published wrer 2020 2019 just cuz the standards",
    "start": "1789799",
    "end": "1797320"
  },
  {
    "text": "published doesn't mean it's it's actually universally implemented in all modern browsers either right so Babel M",
    "start": "1797320",
    "end": "1803960"
  },
  {
    "text": "like or Babel preset M like essentially kind of help manage that Matrix of like hey you're targeting the last two",
    "start": "1803960",
    "end": "1809880"
  },
  {
    "text": "versions of every modern browser no Legacy browsers we know which browser supports what you know and they maintain",
    "start": "1809880",
    "end": "1816200"
  },
  {
    "text": "this real-time check and so like where does that come into play cuz I feel like just right like is there an equivalent",
    "start": "1816200",
    "end": "1823000"
  },
  {
    "text": "of that in the v EOS system oh yeah so first of all es build covers that to a certain extent so es build when we do",
    "start": "1823000",
    "end": "1830679"
  },
  {
    "text": "our final build production build we do have an option called build. Target you",
    "start": "1830679",
    "end": "1836799"
  },
  {
    "text": "can say Target es 2015 if you set that Target then all the syntax that's above",
    "start": "1836799",
    "end": "1842600"
  },
  {
    "text": "es 2015 es build okay will downlevel that for example if you use object",
    "start": "1842600",
    "end": "1848360"
  },
  {
    "text": "spread but you target is 2015 es build actually handles that for you it will inline a helper for you sort of like",
    "start": "1848360",
    "end": "1855360"
  },
  {
    "text": "Babel helpers and then transform your why I say T5",
    "start": "1855360",
    "end": "1862000"
  },
  {
    "text": "or most you don't bble for production build that is the other aspect of it is",
    "start": "1862000",
    "end": "1869559"
  },
  {
    "text": "my personal preference is when I'm say developing I um I don't know maybe I'm",
    "start": "1869559",
    "end": "1875120"
  },
  {
    "text": "able to just uh when I when I using some features because I work on view as a",
    "start": "1875120",
    "end": "1880440"
  },
  {
    "text": "library author I kind of just memorize all the which which es Edition has a",
    "start": "1880440",
    "end": "1887600"
  },
  {
    "text": "certain featur so I'm like I'm always trying to remember okay this is our browser Baseline support I can't use",
    "start": "1887600",
    "end": "1893279"
  },
  {
    "text": "this I I have I can use this I cannot use that so I'm getting used to that but yeah I realized like for uh average",
    "start": "1893279",
    "end": "1899960"
  },
  {
    "text": "Everyday People the rest of us for the rest of us average folk not average but",
    "start": "1899960",
    "end": "1905919"
  },
  {
    "text": "like for most developers yeah know I know I know I know what you mean for people who work on applications right",
    "start": "1905919",
    "end": "1911480"
  },
  {
    "text": "yeah you don't want to really just have to remember like which which feature you can use or not use so you want to leave",
    "start": "1911480",
    "end": "1917519"
  },
  {
    "text": "that to the tools so I'm glad es build does that but if you want to go even",
    "start": "1917519",
    "end": "1923240"
  },
  {
    "text": "lower than es 2015 that then bble preset M obviously covers that for you I think",
    "start": "1923240",
    "end": "1929120"
  },
  {
    "text": "s swc also replicates bble preset M so we in fact have users in the ecosystem",
    "start": "1929120",
    "end": "1936200"
  },
  {
    "text": "to use S swc as a babble placement in certain cases as well what is sswc I've",
    "start": "1936200",
    "end": "1943320"
  },
  {
    "text": "like seen it floating around on the ecosystem so I feel like I know what it is like at a high level do you want to just maybe explain that to our listeners",
    "start": "1943320",
    "end": "1950320"
  },
  {
    "text": "to put simply it's sort of like Babel but written in Rust yeah it's a good segue to like our rust it's more",
    "start": "1950320",
    "end": "1955919"
  },
  {
    "text": "opinionated them Babble you can write plugins but you can only write plugins in Rust so it's a bit harder to extend",
    "start": "1955919",
    "end": "1963039"
  },
  {
    "text": "for normal JS developers like I haven't been able to write a s swc plugin myself",
    "start": "1963039",
    "end": "1969559"
  },
  {
    "text": "but like from a conceptual level it does the similar things it pares your code transforms to a then spits out",
    "start": "1969559",
    "end": "1976360"
  },
  {
    "text": "JavaScript yeah I mean I say like for me it's just like if we're pegging against OS script 2015 we're also like holding",
    "start": "1976360",
    "end": "1982519"
  },
  {
    "text": "the web back a little right because like there's some things that are newer that would be supported in some browsers",
    "start": "1982519",
    "end": "1988080"
  },
  {
    "text": "universally across newer standards but I would love to Peg against es 2015 to be",
    "start": "1988080",
    "end": "1993639"
  },
  {
    "text": "honest really okay until June when the end of life of Internet Explorer comes",
    "start": "1993639",
    "end": "1999120"
  },
  {
    "text": "I'm still on that train yeah we were just holding the web back yeah I personally think it's an interesting",
    "start": "1999120",
    "end": "2005159"
  },
  {
    "text": "tradeoff because for a v-based build pipeline Babble is in fact a pretty",
    "start": "2005159",
    "end": "2010600"
  },
  {
    "text": "heavy dependency to add for sure into it because without Babel just by adding",
    "start": "2010600",
    "end": "2016720"
  },
  {
    "text": "Babble into a production build pipeline you could slow down your build by like 30% or 40% so when you have that in mind",
    "start": "2016720",
    "end": "2024279"
  },
  {
    "text": "I'm like if I can get 30% faster builds by just not using stage two features I'm",
    "start": "2024279",
    "end": "2030440"
  },
  {
    "text": "all for it I actually have numbers against that with create react app and bble our biggest app in a monor repo",
    "start": "2030440",
    "end": "2036960"
  },
  {
    "text": "took two minutes to build when we replaced it completely with v it went down to 22 seconds wow and then when we",
    "start": "2036960",
    "end": "2044440"
  },
  {
    "text": "replaced it with V with the Legacy the babble plugin for it it went back up to",
    "start": "2044440",
    "end": "2049720"
  },
  {
    "text": "2 minutes and 20 seconds so we got about 10 seconds faster than create react up",
    "start": "2049720",
    "end": "2054760"
  },
  {
    "text": "but it was still majorly slow yeah it's mostly because preset end is a very very",
    "start": "2054760",
    "end": "2060960"
  },
  {
    "text": "intensive set of transforms MH it it just does so many things it has to do so",
    "start": "2060960",
    "end": "2067079"
  },
  {
    "text": "many checks that's where really it slows things down yeah mhm yeah and so like we have like",
    "start": "2067079",
    "end": "2072398"
  },
  {
    "text": "this like TurnKey experience for the most part if you're targeting you know modern browsers which is like great and",
    "start": "2072399",
    "end": "2078638"
  },
  {
    "text": "then you have jsx support out of the box and you have CSS processors support like",
    "start": "2078639",
    "end": "2084280"
  },
  {
    "text": "out of the box and then you can import web workers easily and you can like",
    "start": "2084280",
    "end": "2089398"
  },
  {
    "text": "import wasm files like whoa there's this so much like like who like you know who are these developers who are like using",
    "start": "2089399",
    "end": "2096000"
  },
  {
    "text": "wasm and web workers and like jsx like I want to know these people cuz like I'm just like we need to get them on the",
    "start": "2096000",
    "end": "2101920"
  },
  {
    "text": "show okay tell us about your apps surprisingly there are a lot of people",
    "start": "2101920",
    "end": "2107280"
  },
  {
    "text": "using these uh I I would just meant all together but yeah I know like in isolation I think yeah for sure yeah we",
    "start": "2107280",
    "end": "2114160"
  },
  {
    "text": "just recently had to rework our web worker support because uh I think someone from Google tweeted about like I",
    "start": "2114160",
    "end": "2121960"
  },
  {
    "text": "really like be but the web worker support is kind of using a custom query string which I don't like I kind of want",
    "start": "2121960",
    "end": "2128480"
  },
  {
    "text": "to mention parcel which is another bundler project build tool project so",
    "start": "2128480",
    "end": "2133599"
  },
  {
    "text": "parcel is actually the first build tool that comes up with this sort of battery included everything works out of the box",
    "start": "2133599",
    "end": "2140079"
  },
  {
    "text": "concept yeah so when poso first came out it it was the zero configuration build",
    "start": "2140079",
    "end": "2146359"
  },
  {
    "text": "tool in a lot of ways the philosophy of like assuming that certain things should",
    "start": "2146359",
    "end": "2152319"
  },
  {
    "text": "work a certain way and make it work out of the box this philosophy really aligns between V and Par",
    "start": "2152319",
    "end": "2158160"
  },
  {
    "text": "so I just want to give a shout out because parcel is obviously the first tool to to do this kind of thing so a",
    "start": "2158160",
    "end": "2163760"
  },
  {
    "text": "lot of people who like feed also likes parcel for the same reason and they recently rode a lot of their internals",
    "start": "2163760",
    "end": "2170200"
  },
  {
    "text": "with rust so it's also pretty cool to check out parcel 2 is a really",
    "start": "2170200",
    "end": "2175280"
  },
  {
    "text": "impressive project that's a project that I feel like I I wish I've had a chance to like play around with because it's",
    "start": "2175280",
    "end": "2180319"
  },
  {
    "text": "really like just following it like I feel like they've always been pushing the boundaries of like how things should",
    "start": "2180319",
    "end": "2187359"
  },
  {
    "text": "work work like the the thought leadership in like Northstar I think has been with the parcel like parcel like",
    "start": "2187359",
    "end": "2193440"
  },
  {
    "text": "implementation in apis and so yeah we'll have to maybe have them on the show sometime but so I guess like",
    "start": "2193440",
    "end": "2199880"
  },
  {
    "text": "specifically like with this wasm you know workflow I mean this is just really",
    "start": "2199880",
    "end": "2205160"
  },
  {
    "text": "cool so how are you can you tell us a little bit about how this works so essentially you're we're able to import",
    "start": "2205160",
    "end": "2211960"
  },
  {
    "text": "wasm files yeah it's really a simple transform because we don't do all the m",
    "start": "2211960",
    "end": "2217640"
  },
  {
    "text": "magic so when you manually do a WM file you have to fetch it yourself then you",
    "start": "2217640",
    "end": "2224240"
  },
  {
    "text": "instantiate WM instance so it's basically a lot of grunt work whenever",
    "start": "2224240",
    "end": "2230160"
  },
  {
    "text": "you want to import some WM into JavaScript using just native web apis so",
    "start": "2230160",
    "end": "2236400"
  },
  {
    "text": "we try to give you uh some help at the syntax level so when you when we see",
    "start": "2236400",
    "end": "2241680"
  },
  {
    "text": "that you're trying to import a WM file we just transform into the code that you",
    "start": "2241680",
    "end": "2246839"
  },
  {
    "text": "would write uh manually of instantiating it than",
    "start": "2246839",
    "end": "2251960"
  },
  {
    "text": "doing certain things okay I see so it's all just spild time transforms I see okay that that makes sense but still",
    "start": "2251960",
    "end": "2258640"
  },
  {
    "text": "using web native apis right I guess this may maybe a similar pattern for web you're essentially do you handle like",
    "start": "2258640",
    "end": "2265040"
  },
  {
    "text": "the instantiation of the worker yeah interesting the other part about workers",
    "start": "2265040",
    "end": "2270680"
  },
  {
    "text": "is uh you want to apply the same transforms on your workers as your other part of code for example you want to",
    "start": "2270680",
    "end": "2275920"
  },
  {
    "text": "write your workers with type script right you want to have module Imports",
    "start": "2275920",
    "end": "2281119"
  },
  {
    "text": "maybe you have a worker but you want to have multiple files that import one another but some browsers don't support",
    "start": "2281119",
    "end": "2286240"
  },
  {
    "text": "module workers yet so we have to prebundle the worker for you so that your worker would work everywhere that's",
    "start": "2286240",
    "end": "2293319"
  },
  {
    "text": "a lot of these kind of things that we do under the hood so you can have a simple syntax just import the worker and then",
    "start": "2293319",
    "end": "2299400"
  },
  {
    "text": "use it without having to worry about okay how do I transpile the workers how do I bundle the worker and all that",
    "start": "2299400",
    "end": "2305880"
  },
  {
    "text": "stuff but like you know how like work ERS have all these special rules because they're running in a in a specific",
    "start": "2305880",
    "end": "2311000"
  },
  {
    "text": "context like I'm curious like is there like a lint package or something along those lines that in V for like um",
    "start": "2311000",
    "end": "2317440"
  },
  {
    "text": "handling all of the rules around workers yeah V doesn't really do that for you okay we've actually had this thing uh",
    "start": "2317440",
    "end": "2324680"
  },
  {
    "text": "where uh you can use typescript to essentially use a different TS config",
    "start": "2324680",
    "end": "2330319"
  },
  {
    "text": "for your worker files I see okay so you get rid of the global APS that you",
    "start": "2330319",
    "end": "2335800"
  },
  {
    "text": "shouldn't have access to mhm MH in that part of your project yeah I feel like that's the thing with workers that",
    "start": "2335800",
    "end": "2341760"
  },
  {
    "text": "always DPS me up is like you you just always need to make sure that like you're not doing certain things and I",
    "start": "2341760",
    "end": "2346839"
  },
  {
    "text": "always find out the hard way you know like so just like we just need some",
    "start": "2346839",
    "end": "2352160"
  },
  {
    "text": "linting rules you know I should probably research that yeah I'm sure it exists shout out to a cool project called Party",
    "start": "2352160",
    "end": "2358160"
  },
  {
    "text": "Town oh yes yes Party Town third the third party scripts yeah but they basically created a way to so run",
    "start": "2358160",
    "end": "2365920"
  },
  {
    "text": "codeing the worker but still have access to the normal browser apis yeah they're on my list of people who I really want",
    "start": "2365920",
    "end": "2371440"
  },
  {
    "text": "to like actually interview cuz I mean that project is the most creative that I have seen in a very long time and like I",
    "start": "2371440",
    "end": "2377079"
  },
  {
    "text": "don't know how that it's like black magic to like how does that even work I don't even know like what are they how are they doing that you know it creates",
    "start": "2377079",
    "end": "2384560"
  },
  {
    "text": "a proxy object that simulates the browser so every operation that you call",
    "start": "2384560",
    "end": "2390560"
  },
  {
    "text": "they buffer it into a series of commands then send it to the main thread do the things then send it back yeah so this is",
    "start": "2390560",
    "end": "2397079"
  },
  {
    "text": "where like proxy is probably also one of the like least understood but also most",
    "start": "2397079",
    "end": "2402319"
  },
  {
    "text": "powerful built-ins in JavaScript right like you have to it's extremely powerful so powerful oh my gosh yeah um probably",
    "start": "2402319",
    "end": "2409319"
  },
  {
    "text": "do a whole show on proxy so you know we talked a little bit earlier about like a",
    "start": "2409319",
    "end": "2414440"
  },
  {
    "text": "rollup config being supported with v and I'm assuming obviously all the tree shaking happens as well so can you kind",
    "start": "2414440",
    "end": "2421960"
  },
  {
    "text": "of talk about this decision to kind of support rollup like there's some you know intentional kind of steering I",
    "start": "2421960",
    "end": "2427800"
  },
  {
    "text": "think you're doing but with uh that's an opinionated thing opinionated move I think a good opinion but it's",
    "start": "2427800",
    "end": "2433760"
  },
  {
    "text": "opinionated nonetheless so yeah so initially obviously if we could we would",
    "start": "2433760",
    "end": "2440319"
  },
  {
    "text": "want to do the bundling with uh es build because it's just so fast but the thing",
    "start": "2440319",
    "end": "2446240"
  },
  {
    "text": "is uh I tested with that but the thing is with es build is that um it's great for bundling libraries but it's still",
    "start": "2446240",
    "end": "2454040"
  },
  {
    "text": "kind of a bit immature when it comes to Bund Ling applications because when",
    "start": "2454040",
    "end": "2459200"
  },
  {
    "text": "you're bounding applications you have a different layer of concern that is cod",
    "start": "2459200",
    "end": "2465119"
  },
  {
    "text": "splitting chunk hashing and how to best optimize your chunking so that you get the best loading performance in",
    "start": "2465119",
    "end": "2471640"
  },
  {
    "text": "production so in that aspect webpack gives you the most control but it's",
    "start": "2471640",
    "end": "2477640"
  },
  {
    "text": "extremely complicated again like it's really really hard to to get a good",
    "start": "2477640",
    "end": "2483040"
  },
  {
    "text": "default you have to learn how webpack chunk splitting integration work so",
    "start": "2483040",
    "end": "2488720"
  },
  {
    "text": "rollup gives you less control but still enough for most common cases the more",
    "start": "2488720",
    "end": "2494800"
  },
  {
    "text": "important part is rollup makes it easier for us to sort of give you a good default out of the box whereas es build",
    "start": "2494800",
    "end": "2502280"
  },
  {
    "text": "gives you almost no control in terms of chunking so when it comes to the um",
    "start": "2502280",
    "end": "2507480"
  },
  {
    "text": "final production build we we basically were facing this decision of should we just go with ESB directly or should we",
    "start": "2507480",
    "end": "2513920"
  },
  {
    "text": "go with rollup which is more mature for application bundling at the same time there's another Advantage is that rollup",
    "start": "2513920",
    "end": "2520560"
  },
  {
    "text": "has this already ex huge existing ecosystem and personally I also really",
    "start": "2520560",
    "end": "2525599"
  },
  {
    "text": "like rollups plug-in API it's a very concise simple but also very powerful",
    "start": "2525599",
    "end": "2532359"
  },
  {
    "text": "plug-in API when I was writing the view single file component support for rollup",
    "start": "2532359",
    "end": "2538480"
  },
  {
    "text": "and webpack the rollup implementation is just so much easier to understand even",
    "start": "2538480",
    "end": "2543880"
  },
  {
    "text": "for myself so I felt like a good plugging API is also really important for a build tool because essentially the",
    "start": "2543880",
    "end": "2552200"
  },
  {
    "text": "outof thebox features designs the Baseline experience for all users but",
    "start": "2552200",
    "end": "2558280"
  },
  {
    "text": "how good the plug-in API is decides the ceiling of the user experience so one",
    "start": "2558280",
    "end": "2564240"
  },
  {
    "text": "reason that a lot of advanced users also like Ved is because they can pretty much do anything they want by writing their",
    "start": "2564240",
    "end": "2571400"
  },
  {
    "text": "own B plugins so they're not sort of even though a lot of things are opinionated they're work out of the box",
    "start": "2571400",
    "end": "2578640"
  },
  {
    "text": "they can still sort of Bend V to do what they want V to do by writing their own",
    "start": "2578640",
    "end": "2584400"
  },
  {
    "text": "plugins so I think this is extremely important for power users right so",
    "start": "2584400",
    "end": "2590079"
  },
  {
    "text": "having good defaults appeal to the maybe 80% of the users who just want to get",
    "start": "2590079",
    "end": "2596319"
  },
  {
    "text": "things working but at the same time there will be this group of power users who want to do Advanced things and you",
    "start": "2596319",
    "end": "2603520"
  },
  {
    "text": "need to give them that uh ability to do that with a nice API so I think rollups",
    "start": "2603520",
    "end": "2608800"
  },
  {
    "text": "API is a good way to give them that power and rollup itself is also you know",
    "start": "2608800",
    "end": "2615400"
  },
  {
    "text": "powerful enough for us to give normal users a good default for production performance and then it has a great",
    "start": "2615400",
    "end": "2622200"
  },
  {
    "text": "ecosystem so going with rollup is uh essentially a sort of a trade-off decision between the plugging API",
    "start": "2622200",
    "end": "2629800"
  },
  {
    "text": "friendliness the existing ecosystem and how we can give a better production",
    "start": "2629800",
    "end": "2636160"
  },
  {
    "text": "build performance out of the box for for end users I would say the the reason we",
    "start": "2636160",
    "end": "2641800"
  },
  {
    "text": "choose certain on lower level tools to do certain things is not always fixing stone for feet because our goal is to",
    "start": "2641800",
    "end": "2648280"
  },
  {
    "text": "have a coherent package to do things so if say there is a rust based alternative",
    "start": "2648280",
    "end": "2654440"
  },
  {
    "text": "that can replace rollup but is much faster but gives you the same ability like can be compatible with rollup",
    "start": "2654440",
    "end": "2660680"
  },
  {
    "text": "plugins then we can switch to that I know someone who is working on a rust space version of rollup oh wow",
    "start": "2660680",
    "end": "2667800"
  },
  {
    "text": "yeah so this is a really great segue into like what I want to get into next around like rust and where this fits",
    "start": "2667800",
    "end": "2672880"
  },
  {
    "text": "into the ecosystem I mean and so there's a lots to discuss I'm also eager to hear about like the serde rendering story for",
    "start": "2672880",
    "end": "2678520"
  },
  {
    "text": "V and all that and then also I want to hear about your wish list like you know if like Evan could like wave his magic",
    "start": "2678520",
    "end": "2684839"
  },
  {
    "text": "wand like what you know what would you want to change or what would you want to do or what would you want to implemented or which issue do would you want closed",
    "start": "2684839",
    "end": "2691640"
  },
  {
    "text": "you know so so yeah I know I know we're like we're too many too many",
    "start": "2691640",
    "end": "2697870"
  },
  {
    "text": "[Music]",
    "start": "2697870",
    "end": "2702850"
  },
  {
    "text": "this episode is brought to you by signal wire signal wire offers apis sdks and",
    "start": "2703119",
    "end": "2709400"
  },
  {
    "text": "Edge networks around the world for building the realest Real Time video and video communication apps with less than",
    "start": "2709400",
    "end": "2716319"
  },
  {
    "text": "50 milliseconds of latency they use websockets to deliver 300% lower latency than apis built on rest making it ideal",
    "start": "2716319",
    "end": "2724160"
  },
  {
    "text": "for apps where every millisecond and responsive makes a difference like apps that need instant natural language",
    "start": "2724160",
    "end": "2730839"
  },
  {
    "text": "understanding realtime Machine Vision or large scale video and audio conferencing here's what makes them different they",
    "start": "2730839",
    "end": "2736599"
  },
  {
    "text": "use MCU multi-point control unit that mixes all video and all audio feeds on",
    "start": "2736599",
    "end": "2742480"
  },
  {
    "text": "the server side and then distributes a single unified stream back to every",
    "start": "2742480",
    "end": "2747680"
  },
  {
    "text": "participant that way every participant in the apps you ship experience the same video and the same audio your apps have",
    "start": "2747680",
    "end": "2754559"
  },
  {
    "text": "none of the awkward audio effects obvious lag and jumpy video it's all smooth great ux creating a more lifelike",
    "start": "2754559",
    "end": "2761960"
  },
  {
    "text": "virtual experience without compromising audio or the video quality head to Signal wire.com svideo mention JS party",
    "start": "2761960",
    "end": "2768680"
  },
  {
    "text": "to receive an extra 5,000 video minutes just go to Signal wire.com video and",
    "start": "2768680",
    "end": "2774040"
  },
  {
    "text": "remember mention JS party to get those extra 5,000 video [Music]",
    "start": "2774040",
    "end": "2785920"
  },
  {
    "text": "minutes [Music]",
    "start": "2785920",
    "end": "2797319"
  },
  {
    "text": "all right Evan so that was like a really impressive and exhaustive rundown of V's",
    "start": "2797319",
    "end": "2802839"
  },
  {
    "text": "capabilities it was not soit but actually know vit list was not soet I don't know all right bad joke either way",
    "start": "2802839",
    "end": "2811079"
  },
  {
    "text": "we've covered like I think a good chunk of like I would say some of the Highlight features but really there's so much more and I encourage everyone to",
    "start": "2811079",
    "end": "2818480"
  },
  {
    "text": "check out like your awesome documentation cuz really it's quite impressive like how rich and robust and",
    "start": "2818480",
    "end": "2825240"
  },
  {
    "text": "well organized your docs are I just wanted to say kudos to you and your team thanks good documentation is so",
    "start": "2825240",
    "end": "2831079"
  },
  {
    "text": "difficult for open source projects because there's so much bias like you know as a as a maintainer on the other side right so I know that like I don't",
    "start": "2831079",
    "end": "2837839"
  },
  {
    "text": "know if Chris is still helping out doing docs but like I remember there was like a few people on The View team that were",
    "start": "2837839",
    "end": "2843160"
  },
  {
    "text": "helping with view docs so I don't know if you've got the same thing going with v but yeah it's a beautiful beautiful",
    "start": "2843160",
    "end": "2849599"
  },
  {
    "text": "website so we do have a team so after I wrote the initial Edition most of the",
    "start": "2849599",
    "end": "2854640"
  },
  {
    "text": "later edits were just made by the team and we also have PRS from our users too",
    "start": "2854640",
    "end": "2860079"
  },
  {
    "text": "oh that's great yeah so thank you for pushing that envelope and I think you know we really I'd love to kind of get",
    "start": "2860079",
    "end": "2866160"
  },
  {
    "text": "into server side rendering and like what that story is because that has typically been I'm curious to see if Vita smoothed",
    "start": "2866160",
    "end": "2873040"
  },
  {
    "text": "out those edges yeah so for service ey rendering the first thing is is if you doing it with node right your code needs",
    "start": "2873040",
    "end": "2879680"
  },
  {
    "text": "to run node the challenge is for a lot of apps for a lot of projects you have",
    "start": "2879680",
    "end": "2885280"
  },
  {
    "text": "to compile your code differently when you're targeting either your client or you're targeting the server so there are",
    "start": "2885280",
    "end": "2891440"
  },
  {
    "text": "different code paths some code you want to only run in node some code you only want to run in on the client and then",
    "start": "2891440",
    "end": "2898920"
  },
  {
    "text": "there's also uh for example for view or spelt we actually compile our components",
    "start": "2898920",
    "end": "2905119"
  },
  {
    "text": "differently when targeting CLI or targeting SSR because uh we in fact compile our components into more",
    "start": "2905119",
    "end": "2911559"
  },
  {
    "text": "efficient string concatenation when we're doing servic rendering so this means for the same set of source files",
    "start": "2911559",
    "end": "2919520"
  },
  {
    "text": "you actually need to have two different compile output So to that you can do",
    "start": "2919520",
    "end": "2925839"
  },
  {
    "text": "service rendering previously with web hack the most Frameworks do it in a way that you actually just bundle make two",
    "start": "2925839",
    "end": "2932640"
  },
  {
    "text": "bundles simultaneously so every time you edit something you build rebuild the two bundles um and that gets really",
    "start": "2932640",
    "end": "2940079"
  },
  {
    "text": "complicated and is also kind of slow so when we're doing thinking about serite",
    "start": "2940079",
    "end": "2945280"
  },
  {
    "text": "ring with beat is we want to have this same sort of Snappy instant update even for the SSR the idea actually originally",
    "start": "2945280",
    "end": "2952839"
  },
  {
    "text": "first was first conceived by Rich Harris so rich was working on spell kit so he",
    "start": "2952839",
    "end": "2959839"
  },
  {
    "text": "made this very uh early version of a transform that can take a es module file",
    "start": "2959839",
    "end": "2966760"
  },
  {
    "text": "then rewrite it into something that can be instantiated in no. JS in memory",
    "start": "2966760",
    "end": "2973440"
  },
  {
    "text": "basically creating a sort of virtual runtime for ES modules in no. JS wow",
    "start": "2973440",
    "end": "2980119"
  },
  {
    "text": "that's wild yeah this is pre like esm supported node right like before there",
    "start": "2980119",
    "end": "2986040"
  },
  {
    "text": "was a path for like I'm not sure probably native esm was already in an",
    "start": "2986040",
    "end": "2991079"
  },
  {
    "text": "experimental version of node at that time the thing is we have different requirements we can't just use native esm because because we want to be able",
    "start": "2991079",
    "end": "2998760"
  },
  {
    "text": "to precisely replace and invalidate part of the module graph oh right right right",
    "start": "2998760",
    "end": "3003880"
  },
  {
    "text": "right when you edit files and you can't easily do that with Native esm so we need to control the module graph which",
    "start": "3003880",
    "end": "3011119"
  },
  {
    "text": "is why we have to do this or Subs so rich came up with that idea first when they were working on spell kit he that",
    "start": "3011119",
    "end": "3018400"
  },
  {
    "text": "idea into snow pack which is another no bundler no bundle go tool with with a",
    "start": "3018400",
    "end": "3024799"
  },
  {
    "text": "very similar scope to V right we were sort of uh competing cuz we the two",
    "start": "3024799",
    "end": "3030520"
  },
  {
    "text": "projects actually came out around the same time but with uh kind of different design positions on some parts of like",
    "start": "3030520",
    "end": "3037480"
  },
  {
    "text": "how we handle deps and how we handle certain things so rich was",
    "start": "3037480",
    "end": "3043359"
  },
  {
    "text": "investigating how like which tool he want to base spell kit upon so as a test",
    "start": "3043359",
    "end": "3049520"
  },
  {
    "text": "he PR his uh SSR modu transform into snow pack so I saw that at a felt like",
    "start": "3049520",
    "end": "3057440"
  },
  {
    "text": "oh this is a genius idea so essentially I implement the same thing in v and the",
    "start": "3057440",
    "end": "3063400"
  },
  {
    "text": "cool thing is we are able to apply the same CLI side trans plug-in pipelines on",
    "start": "3063400",
    "end": "3069720"
  },
  {
    "text": "that node side module as well and in order to do that we have to extend rollups plugging format so that you can",
    "start": "3069720",
    "end": "3076200"
  },
  {
    "text": "use the same plugging to do different transforms based on whether you are doing SSR or not so do you have like a",
    "start": "3076200",
    "end": "3081799"
  },
  {
    "text": "little abstraction layer in there yeah so essentially we took Rich space transform then we combined it with V's",
    "start": "3081799",
    "end": "3088680"
  },
  {
    "text": "plugging system and got it to a state where you can uh essentially use it",
    "start": "3088680",
    "end": "3094880"
  },
  {
    "text": "quite smoothly to run arbitrary SSR for any framework so we can do that with for",
    "start": "3094880",
    "end": "3101760"
  },
  {
    "text": "react we can do that for for view we can do that for spel wow so it's generic enough but also uh so I think that's",
    "start": "3101760",
    "end": "3109040"
  },
  {
    "text": "also what I kind of proud about with beat is we we try to find the right",
    "start": "3109040",
    "end": "3114880"
  },
  {
    "text": "abstraction boundaries so that we do just enough inside the framework so that",
    "start": "3114880",
    "end": "3120760"
  },
  {
    "text": "it's still flexible enough to support different High other Frameworks like client side Frameworks but for the",
    "start": "3120760",
    "end": "3127960"
  },
  {
    "text": "client side Frameworks we do so much that they can basically all share the",
    "start": "3127960",
    "end": "3133839"
  },
  {
    "text": "same underlying implementation without duplicating work with one another which is why I think we are seeing a lot of uh",
    "start": "3133839",
    "end": "3141160"
  },
  {
    "text": "other Frameworks like uh solid or barle they essentially they're able to do",
    "start": "3141160",
    "end": "3146920"
  },
  {
    "text": "their service arer implementation using v as well so I think that's that's super great because uh we have this common",
    "start": "3146920",
    "end": "3153799"
  },
  {
    "text": "Foundation that can be leveraged by different client Frameworks to do so they don't have to reinvent the wheels",
    "start": "3153799",
    "end": "3160200"
  },
  {
    "text": "all over again so I think uh this sort of is a you know there are ideas coming",
    "start": "3160200",
    "end": "3165280"
  },
  {
    "text": "from different places and we V came up with a the most usable sort of flexible",
    "start": "3165280",
    "end": "3173319"
  },
  {
    "text": "but still powerful enough solution for people so uh a lot of these higher level",
    "start": "3173319",
    "end": "3178720"
  },
  {
    "text": "Frameworks start to sort of gravitate towards that as the common base and spell kit is now also based on V so",
    "start": "3178720",
    "end": "3186480"
  },
  {
    "text": "using this same SSR system we also have uh hydrogen which is the new react",
    "start": "3186480",
    "end": "3192920"
  },
  {
    "text": "framework by Shopify which is also using V SSR wow yeah I mean it's like amazing",
    "start": "3192920",
    "end": "3198760"
  },
  {
    "text": "to see all this convergence of ideas and it can of came full circle like Rich PR",
    "start": "3198760",
    "end": "3204079"
  },
  {
    "text": "like created this thing implemented it in like a snow pack which is used by Astro and you know or like in that in",
    "start": "3204079",
    "end": "3211680"
  },
  {
    "text": "that other ecosystem and then like V and then like now you know spelt kit is using V like it's just coming full",
    "start": "3211680",
    "end": "3218079"
  },
  {
    "text": "circle in a way that's very interesting so I'm curious like so you can still use all the plugins and like you can still",
    "start": "3218079",
    "end": "3224640"
  },
  {
    "text": "use all of the same plugins that you would if you were just doing a client side rendered app like in this SSR",
    "start": "3224640",
    "end": "3230240"
  },
  {
    "text": "workflow right yeah okay but you're just leveraging this like virtual virtual in",
    "start": "3230240",
    "end": "3235880"
  },
  {
    "text": "context where you're replacing the module like in memory you know like in the me the module graph in memory",
    "start": "3235880",
    "end": "3242079"
  },
  {
    "text": "essentially yeah so is there like a limit I'm just curious for like gigantic applications like just think like you",
    "start": "3242079",
    "end": "3248319"
  },
  {
    "text": "know a really complex app like something from Walmart for example right if Walmart started using V like would they",
    "start": "3248319",
    "end": "3254920"
  },
  {
    "text": "need like would they be able to do it on like a Macbook that doesn't have a ton of memory like or would they like how",
    "start": "3254920",
    "end": "3260720"
  },
  {
    "text": "would like what are the constraints there they probably could because um technically the way we instantiate these",
    "start": "3260720",
    "end": "3267640"
  },
  {
    "text": "modules wouldn't be more memory intensive compared to Native node esm",
    "start": "3267640",
    "end": "3273440"
  },
  {
    "text": "it's really just uh instead of node instantiating those modules we're just",
    "start": "3273440",
    "end": "3278680"
  },
  {
    "text": "letting V8 instantiate it as as function Scopes technically we don't really incur",
    "start": "3278680",
    "end": "3285000"
  },
  {
    "text": "more memory usage okay yeah this is fascinating I mean we'll try to like link to either this part of the code or",
    "start": "3285000",
    "end": "3293680"
  },
  {
    "text": "maybe the pr or anything like we'll try to get some info from Evan and for folks who want to dig into the specifics of",
    "start": "3293680",
    "end": "3299599"
  },
  {
    "text": "this but this is fascinating um I feel like it could beat own show and so SSR support out of the box for multiple",
    "start": "3299599",
    "end": "3305920"
  },
  {
    "text": "Frameworks that's huge I mean and fast SSR like for local development",
    "start": "3305920",
    "end": "3312599"
  },
  {
    "text": "specifically very very exciting I don't know I mean I haven't you haven't said the word typescript yet so we haven't",
    "start": "3312599",
    "end": "3317960"
  },
  {
    "text": "heard from Nick but I mean I can see Nick's Nick that's his magic word you have to say the word typescript like you",
    "start": "3317960",
    "end": "3323640"
  },
  {
    "text": "know he'll be like did somebody say typescript the perk up immediately yes",
    "start": "3323640",
    "end": "3331319"
  },
  {
    "text": "immediately but yeah yeah ni I um so anyway so we're moving on to kind of",
    "start": "3331319",
    "end": "3336599"
  },
  {
    "text": "some of this other stuff that we covered around like rust right so we've seen like this interesting shift in our",
    "start": "3336599",
    "end": "3343319"
  },
  {
    "text": "community towards like hey JavaScript build times are taking too long like we need to like we need to go lower lower",
    "start": "3343319",
    "end": "3351200"
  },
  {
    "text": "closer to the metal we need to use rust to like speed that up quite frankly like it's wor working right like things are",
    "start": "3351200",
    "end": "3358039"
  },
  {
    "text": "faster with these um rust binaries for me I worry about the tradeoff and this",
    "start": "3358039",
    "end": "3363319"
  },
  {
    "text": "is probably me just maybe I don't know being like Grandma cranky about it but but like I just worry about like you",
    "start": "3363319",
    "end": "3369240"
  },
  {
    "text": "know the tradeoff that we're making with just shaving a little bit of time here and there like we're also losing like",
    "start": "3369240",
    "end": "3376119"
  },
  {
    "text": "our interoperability and ability for people to contribute and know what's going on and debug Etc so I'm just love",
    "start": "3376119",
    "end": "3382880"
  },
  {
    "text": "to hear like your thoughts on that yeah I definitely share a concern I've actually argued with people about this",
    "start": "3382880",
    "end": "3388799"
  },
  {
    "text": "on Twitter because uh I think there was an article basically saying like rust is",
    "start": "3388799",
    "end": "3394400"
  },
  {
    "text": "the the future of JavaScript tooling and I was I was expressing the same concern",
    "start": "3394400",
    "end": "3400680"
  },
  {
    "text": "pretty much I was I'm was saying okay so rust is fast but it's harder to write",
    "start": "3400680",
    "end": "3407200"
  },
  {
    "text": "it's harder to understand and especially if you have a rust based dependency I",
    "start": "3407200",
    "end": "3413440"
  },
  {
    "text": "can't just crack open note modules and see what's going on I can't patch it myself on the spot you can't debug it",
    "start": "3413440",
    "end": "3420000"
  },
  {
    "text": "even if I look at the source code there's a good chance that I can't figure out how to fix it so when you",
    "start": "3420000",
    "end": "3425079"
  },
  {
    "text": "think about Babel the reason Babel became so successful is because people can write plugins for it and you can",
    "start": "3425079",
    "end": "3431839"
  },
  {
    "text": "actually try to if you already know JavaScript then you can try to read its guide and understand how pluging work",
    "start": "3431839",
    "end": "3439240"
  },
  {
    "text": "but performing coding rust is not easy so the the author incidentally the",
    "start": "3439240",
    "end": "3445039"
  },
  {
    "text": "author of s who is should be a very very Advanced rust developer he was trying to",
    "start": "3445039",
    "end": "3452799"
  },
  {
    "text": "reimplement typescripts type checking logic in Rust and he gave up because he",
    "start": "3452799",
    "end": "3459039"
  },
  {
    "text": "was like this is just too hard in Rust the way the typescripts own codebase",
    "start": "3459039",
    "end": "3464160"
  },
  {
    "text": "works it's typescript is written in typescript I think right it is it is typ",
    "start": "3464160",
    "end": "3469440"
  },
  {
    "text": "safe but it's still uses a lot of these Dynamic features of JavaScript where you have like these sort of dynamic",
    "start": "3469440",
    "end": "3475319"
  },
  {
    "text": "references between different parts of your code bases data structures that reference one another and this is what",
    "start": "3475319",
    "end": "3482079"
  },
  {
    "text": "rust doesn't like rust is like you need to be very explicit about what memory",
    "start": "3482079",
    "end": "3487880"
  },
  {
    "text": "you want to put where you need to have the life cyod like don't just like link things everywhere and if you use unsafe",
    "start": "3487880",
    "end": "3495319"
  },
  {
    "text": "it's like oh no like your code will be unmaintainable I think I saw this tweet",
    "start": "3495319",
    "end": "3500640"
  },
  {
    "text": "or maybe a similar one where they were talking about like reimplementing the typescript type Checker in another",
    "start": "3500640",
    "end": "3505799"
  },
  {
    "text": "language like rust or or something go something else and it really came down to like somebody got like a base set of",
    "start": "3505799",
    "end": "3512760"
  },
  {
    "text": "features from typescript working but yeah yeah I saw the TS team like chimed in and it's like well try generics like",
    "start": "3512760",
    "end": "3517880"
  },
  {
    "text": "generics just won't really work yeah there was a there was a sub tweet from the TST member I remember uh saying like",
    "start": "3517880",
    "end": "3526200"
  },
  {
    "text": "every couple months someone would write a new cash implementation that's like 30 F 30 times faster than M cached and ask",
    "start": "3526200",
    "end": "3534839"
  },
  {
    "text": "like hey can you use this this for Amazon and and the Amazon cash team is",
    "start": "3534839",
    "end": "3540319"
  },
  {
    "text": "like um no like does it do this does it do that mhm I think it's it's an",
    "start": "3540319",
    "end": "3545720"
  },
  {
    "text": "interesting challenge I'm pretty sure like given the the right people and the",
    "start": "3545720",
    "end": "3550839"
  },
  {
    "text": "enough effort and investment yeah you can definitely do that but the the thing",
    "start": "3550839",
    "end": "3556720"
  },
  {
    "text": "is like Microsoft probably has that resource probably has that expertise but",
    "start": "3556720",
    "end": "3561760"
  },
  {
    "text": "they're not doing it and they're probably not doing it doing it for a reason that said I do agree that the",
    "start": "3561760",
    "end": "3568920"
  },
  {
    "text": "speed of type checking is slowly becoming the only major bottleneck of",
    "start": "3568920",
    "end": "3575039"
  },
  {
    "text": "development speed right because syntax transforms is relatively easy especially",
    "start": "3575039",
    "end": "3580960"
  },
  {
    "text": "with go like es build already like people argue over whether rust is faster",
    "start": "3580960",
    "end": "3586720"
  },
  {
    "text": "or go is faster but I mean as you can see s swc and ESB they are comparable in",
    "start": "3586720",
    "end": "3591880"
  },
  {
    "text": "terms of raw speed when when it's just transpiling or bundling stuff this thing",
    "start": "3591880",
    "end": "3597799"
  },
  {
    "text": "is relatively easy for Native languages and they can do this extremely fast I",
    "start": "3597799",
    "end": "3604680"
  },
  {
    "text": "think that the complexity of typescript itself is not just like type checking itself is complex but also you need to",
    "start": "3604680",
    "end": "3611359"
  },
  {
    "text": "replicate what typescript is doing right now and a lot of that has historical reasons like historical burdens you need",
    "start": "3611359",
    "end": "3618480"
  },
  {
    "text": "to basically uh do everything typescript does in exactly the same way and then",
    "start": "3618480",
    "end": "3624000"
  },
  {
    "text": "you have to play feature catchup yeah and I think that's extremely difficult it seems like a losing game honestly",
    "start": "3624000",
    "end": "3630880"
  },
  {
    "text": "like like in the sense that like it's never going to be perfect and you're never going to be caught up 100% And",
    "start": "3630880",
    "end": "3637119"
  },
  {
    "text": "also just yeah yeah that is kind of the big bottleneck right now but it is another use case for just relying on on",
    "start": "3637119",
    "end": "3644079"
  },
  {
    "text": "type checking like in your editor at least it's kind of like it is a little slower but it is async so I can like move on to the next line and it will",
    "start": "3644079",
    "end": "3650079"
  },
  {
    "text": "just Bing me you know oh something's wrong here right right right it doesn't instantly block you right from keep",
    "start": "3650079",
    "end": "3656440"
  },
  {
    "text": "thinking about your code yeah I would agree with you Nick that's a really good point but also like I think for me",
    "start": "3656440",
    "end": "3662440"
  },
  {
    "text": "there's a deeper separation here that we need to kind of like I think think about more broadly which is like that our",
    "start": "3662440",
    "end": "3668280"
  },
  {
    "text": "types never run in production right so like also like you know this is a",
    "start": "3668280",
    "end": "3673720"
  },
  {
    "text": "development Aid and it's a build time check and I think we should start thinking about those two things as",
    "start": "3673720",
    "end": "3679119"
  },
  {
    "text": "separate because like when we're trying to optimize our developer workflow and",
    "start": "3679119",
    "end": "3684319"
  },
  {
    "text": "like take on this you you know and like couple the concerns like a little like it's it gets a little muddy right",
    "start": "3684319",
    "end": "3689880"
  },
  {
    "text": "especially because like you know God forbid like if typescript isn't the hot thing in 2 years like what then you know",
    "start": "3689880",
    "end": "3695440"
  },
  {
    "text": "like you know we're stuck with this like but we have this fast way like what V does presumably with ESG or ES build I",
    "start": "3695440",
    "end": "3701640"
  },
  {
    "text": "mean is is build yeah it can just ignore typescript and continue on so it's getting out of the way in development",
    "start": "3701640",
    "end": "3708119"
  },
  {
    "text": "time and not really slowing anything down which is really good mhhm yeah there's a few other things I kind of",
    "start": "3708119",
    "end": "3713559"
  },
  {
    "text": "want to touch upon regarding these native dependencies there are some certain kind of jobs that JavaScript can",
    "start": "3713559",
    "end": "3720559"
  },
  {
    "text": "actually be pretty performant because V8 is uh pretty amazing like if you write",
    "start": "3720559",
    "end": "3726200"
  },
  {
    "text": "JavaScript code in the right way you can get pretty close to Native performance in certain cases CU one of the things",
    "start": "3726200",
    "end": "3733359"
  },
  {
    "text": "that V tries to do is we avoid full as parses during development like a lot of",
    "start": "3733359",
    "end": "3739599"
  },
  {
    "text": "these features that we do for example uh we resolve your Imports and rewrite them",
    "start": "3739599",
    "end": "3745240"
  },
  {
    "text": "we do that that without doing full ASD parses we use uh es module lexer which",
    "start": "3745240",
    "end": "3751440"
  },
  {
    "text": "is written in C to only find the Imports then we rewrite those things using",
    "start": "3751440",
    "end": "3757160"
  },
  {
    "text": "another package called Magic string which is super lightweight it only do this sort of direct string manipulations",
    "start": "3757160",
    "end": "3764319"
  },
  {
    "text": "without doing full a transforms so it's a an order of magnitude faster than say",
    "start": "3764319",
    "end": "3770039"
  },
  {
    "text": "parsing it with Acorn and then transforming the a then printing it out is that because you're only looking for",
    "start": "3770039",
    "end": "3775799"
  },
  {
    "text": "for the Imports for our listeners like I think when you're parsing like when you're let's say like const hello equals",
    "start": "3775799",
    "end": "3782839"
  },
  {
    "text": "World a string world like when you're parsing that one line like the first step is like the compiler does is like",
    "start": "3782839",
    "end": "3789000"
  },
  {
    "text": "actually just break the that string up and try to find the tokens right so that's like the lexican right so that's",
    "start": "3789000",
    "end": "3795039"
  },
  {
    "text": "like what is const what is Hello what is the String right so like breaking that up and then it goes into like actually",
    "start": "3795039",
    "end": "3801279"
  },
  {
    "text": "parsing like the tree and whatever and creating that as so I'm just curious like what's the benefit of the thing",
    "start": "3801279",
    "end": "3807160"
  },
  {
    "text": "that you're doing like actually parsing the whole file into as is expensive right right right so first of all you",
    "start": "3807160",
    "end": "3813359"
  },
  {
    "text": "have to actually par then you create all these as objects which creates memory",
    "start": "3813359",
    "end": "3818440"
  },
  {
    "text": "then there's garbage collection and then you need to serialize the as to print the transform thing but if you're only",
    "start": "3818440",
    "end": "3824880"
  },
  {
    "text": "doing our only goal is to rewrite the import statements so es module lexer is",
    "start": "3824880",
    "end": "3831640"
  },
  {
    "text": "essentially a shortcut that only looks for import statements so it doesn't care about anything else it looks for import",
    "start": "3831640",
    "end": "3838599"
  },
  {
    "text": "statements gives us their locations so we can then look at those import",
    "start": "3838599",
    "end": "3843839"
  },
  {
    "text": "statement sources resolve them rewrite them so when we rewrite them we use",
    "start": "3843839",
    "end": "3849160"
  },
  {
    "text": "another package called Magic string which only do these really fast simple",
    "start": "3849160",
    "end": "3854319"
  },
  {
    "text": "string manipulations like replacing a part of the string while retaining the relative positions of everything else",
    "start": "3854319",
    "end": "3860119"
  },
  {
    "text": "and then generating a source map so this is in fact the only transform that does",
    "start": "3860119",
    "end": "3866200"
  },
  {
    "text": "by default like if you don't use any plugins this is the only thing we do which is why it it stays really really",
    "start": "3866200",
    "end": "3872240"
  },
  {
    "text": "fast so we've been thinking about maybe we can replace magic string with a native dependency that does the same",
    "start": "3872240",
    "end": "3878680"
  },
  {
    "text": "thing because it feels like a good candidate and turns out someone actually did that so they reimplemented magic",
    "start": "3878680",
    "end": "3884200"
  },
  {
    "text": "string using rust and in the performance Benchmark you notice that it's only",
    "start": "3884200",
    "end": "3889680"
  },
  {
    "text": "maybe 30 to 40% faster than the JavaScript version and for us that",
    "start": "3889680",
    "end": "3894760"
  },
  {
    "text": "becomes a much less attractive tradeoff because the JavaScript version of magic",
    "start": "3894760",
    "end": "3900520"
  },
  {
    "text": "string is lighter like when you compile something for Native it incurs another",
    "start": "3900520",
    "end": "3905599"
  },
  {
    "text": "issue which is distribution right now for example you're trying to download",
    "start": "3905599",
    "end": "3911000"
  },
  {
    "text": "like rustler go they all have to compile into native boundaries and they you have to compile all these different artifacts",
    "start": "3911000",
    "end": "3916039"
  },
  {
    "text": "for different operating systems and then when the end user tries to install them",
    "start": "3916039",
    "end": "3921079"
  },
  {
    "text": "we need a way to figure out you only install the correct binary for your Target operating system and previously",
    "start": "3921079",
    "end": "3927079"
  },
  {
    "text": "it was a big hack like everyone is doing their own thing like you have to use a posting stall script to like detect the",
    "start": "3927079",
    "end": "3934119"
  },
  {
    "text": "target OS then do a fetch yourself fetch the binary and then put it on the machine which just sounds super sketchy",
    "start": "3934119",
    "end": "3941200"
  },
  {
    "text": "right it's like a super insecure way of doing things especially because it's not like we in the JavaScript Community have",
    "start": "3941200",
    "end": "3947799"
  },
  {
    "text": "the same hygiene around dependency management that folks who've been doing native development have right like we",
    "start": "3947799",
    "end": "3953799"
  },
  {
    "text": "just npm install stuff and like we're not expecting like oh I'm going to run this like there's this binary that's",
    "start": "3953799",
    "end": "3959960"
  },
  {
    "text": "compiling or whatever like I mean grant that that does happen but the whole point is like yeah we don't have the",
    "start": "3959960",
    "end": "3965279"
  },
  {
    "text": "same hygiene around like lowlevel code running on our machine you know that like a Linux developer would have for",
    "start": "3965279",
    "end": "3971400"
  },
  {
    "text": "example you know so but yeah no I'm I'm just happy to hear that you have the same sentiment you Evan like you know so",
    "start": "3971400",
    "end": "3978960"
  },
  {
    "text": "this is one of the problems that the mpm ecosystem needs to solve next is like how do we efficiently and secularly",
    "start": "3978960",
    "end": "3986160"
  },
  {
    "text": "distribute these native binaries if you want to actually make make it easier for people to write JavaScript tooling with",
    "start": "3986160",
    "end": "3992760"
  },
  {
    "text": "Native languages CU that's what from what I see this is still kind of something that's lacking from the",
    "start": "3992760",
    "end": "3998440"
  },
  {
    "text": "ecosystem very much so I mean we're having trouble doing that with just plain old JavaScript Evan so like you",
    "start": "3998440",
    "end": "4004359"
  },
  {
    "text": "know let alone the like native binaries but I'm just happy like Nick's probably",
    "start": "4004359",
    "end": "4010000"
  },
  {
    "text": "heard me say this a bunch of times like I poo poo on this like I don't know about rust in the JavaScript ecosystem",
    "start": "4010000",
    "end": "4015359"
  },
  {
    "text": "like I'm you know this doesn't make me feel good like I feel like the odd person out so Evan like thank you for",
    "start": "4015359",
    "end": "4021960"
  },
  {
    "text": "making me feel less crazy and less paranoid and yeah I'm with you yeah so",
    "start": "4021960",
    "end": "4027480"
  },
  {
    "text": "just to kind of like wrap up our discussion like we could talk about this for hours like what's your wish list Evan like what are some things like that",
    "start": "4027480",
    "end": "4034200"
  },
  {
    "text": "you're like eager to see land eager to like some things on the road map that you're excited about or some things that",
    "start": "4034200",
    "end": "4040000"
  },
  {
    "text": "you wish you could change like sky's the limit No Boundaries here so okay if there's one thing thing I wish should",
    "start": "4040000",
    "end": "4046039"
  },
  {
    "text": "could change is if we can magically fix the node esm problem y agreed",
    "start": "4046039",
    "end": "4052799"
  },
  {
    "text": "check that would probably take some miracle but that's probably my number",
    "start": "4052799",
    "end": "4058480"
  },
  {
    "text": "one thing right now mhm also some of the Legacy module headaches in the ecosystem",
    "start": "4058480",
    "end": "4065200"
  },
  {
    "text": "that we we've seen is like actually we've had this issue all along with vat is that some old packages in the",
    "start": "4065200",
    "end": "4071599"
  },
  {
    "text": "ecosystem they're like we need to ship esm now so they ship esm version but the",
    "start": "4071599",
    "end": "4076760"
  },
  {
    "text": "code actually contains required calls and like Imports dependency that's still",
    "start": "4076760",
    "end": "4082480"
  },
  {
    "text": "commonjs and all that weird stuff like basically a mixed modu graph and it just",
    "start": "4082480",
    "end": "4088000"
  },
  {
    "text": "creates all sort of headaches and these packages also don't really play well when you're trying to load them in",
    "start": "4088000",
    "end": "4094960"
  },
  {
    "text": "Native nodes native esm mod mode yeah we've made a mess we have like this mess",
    "start": "4094960",
    "end": "4100440"
  },
  {
    "text": "right now with modules and in node specifically cuz it's just yeah things are clashing in weird ways cuz we've",
    "start": "4100440",
    "end": "4106920"
  },
  {
    "text": "gotten really creative over the years and like I think this is just like a it's it's not anybody in The community's",
    "start": "4106920",
    "end": "4112278"
  },
  {
    "text": "Fault right this is just like we needed a solution for this much earlier and like resolving like yeah and like taking",
    "start": "4112279",
    "end": "4119238"
  },
  {
    "text": "a train that's like going 90 M hour West and telling it to go 90 M hour East is",
    "start": "4119239",
    "end": "4124640"
  },
  {
    "text": "like that is not an easy feat you know so just like for what it's worth like yeah part of the reason why uh with v we",
    "start": "4124640",
    "end": "4132080"
  },
  {
    "text": "kind of we're like okay we're a new tool so we try to push our our users to say okay if you want to use esm stick to the",
    "start": "4132080",
    "end": "4140359"
  },
  {
    "text": "packages that actually ship proper esm right we get a lot of bug reports about this kind of packages that like",
    "start": "4140359",
    "end": "4146838"
  },
  {
    "text": "sometimes these authors don't even know there are shipping packages that have mixed module formats in them so",
    "start": "4146839",
    "end": "4152159"
  },
  {
    "text": "basically we try to tell the users okay you can let that author know they're actually shipping mixed formats maybe",
    "start": "4152159",
    "end": "4158758"
  },
  {
    "text": "they can fix that so we can help move the ecosystem forward instead of asking our us build tools to support these",
    "start": "4158759",
    "end": "4166520"
  },
  {
    "text": "technically incorrect formats forever right because build tools also like when we create that abstraction we also",
    "start": "4166520",
    "end": "4171960"
  },
  {
    "text": "create a crutch right like yeah so it's like let's fix the source problem but yeah I mean that's the long taale of",
    "start": "4171960",
    "end": "4178278"
  },
  {
    "text": "Open Source is also tough right like there's no guarantee of maintainer is even still working on something that's still like widely adopted right so it's",
    "start": "4178279",
    "end": "4185679"
  },
  {
    "text": "another challenge and like npm doesn't make it easy to like identify like hey here's the newer version of this thing",
    "start": "4185679",
    "end": "4191560"
  },
  {
    "text": "that somebody forked and is maintaining like there's no easy way to also redirect people to like the newer thing",
    "start": "4191560",
    "end": "4197560"
  },
  {
    "text": "you know but yeah so any other wish lists like before we wrap up like are",
    "start": "4197560",
    "end": "4202600"
  },
  {
    "text": "you like everything is perfect with Beats another wish list is uh if someone",
    "start": "4202600",
    "end": "4207920"
  },
  {
    "text": "rewrites rollup with rust I know someone's already working on it I just wish like they can finish it",
    "start": "4207920",
    "end": "4214000"
  },
  {
    "text": "faster but yeah that would actually help feat quite a bit but that'll probably",
    "start": "4214000",
    "end": "4219239"
  },
  {
    "text": "take some time but I wish like that can happen sooner rewriting roll up with in Rust yeah oh wow yeah so the idea like I",
    "start": "4219239",
    "end": "4228000"
  },
  {
    "text": "kind of forgot to go back a little bit regarding my stance on Native tooling is I think we don't want to naify",
    "start": "4228000",
    "end": "4235800"
  },
  {
    "text": "everything the dependencies yeah yeah the I think we should niy certain really",
    "start": "4235800",
    "end": "4240840"
  },
  {
    "text": "really well scoped important infrastructure projects I think that's the that's the right line right",
    "start": "4240840",
    "end": "4246640"
  },
  {
    "text": "something like Babble or rollup like these things that's the backbone of a",
    "start": "4246640",
    "end": "4251679"
  },
  {
    "text": "lot of people's Bill Stacks where also you don't necessarily touch its code",
    "start": "4251679",
    "end": "4257320"
  },
  {
    "text": "very often I think these are good candidates to be Rewritten with Native languages because they would provide",
    "start": "4257320",
    "end": "4264679"
  },
  {
    "text": "significant overall build speed or whatever for the entire ecosystem but",
    "start": "4264679",
    "end": "4269920"
  },
  {
    "text": "like if you say you have a tiny helper library and you read it in Rust it's probably not worth it yeah no I think",
    "start": "4269920",
    "end": "4276600"
  },
  {
    "text": "you're right that sounds like the right boundary to draw for sure like and I think that's like a nuanced but important distinction you're you're",
    "start": "4276600",
    "end": "4282120"
  },
  {
    "text": "absolutely right so yeah I think it's hard to get that level of nuance out in the community though because I think",
    "start": "4282120",
    "end": "4288000"
  },
  {
    "text": "people like just there's a hype train going on it's like hype hype hype hype hype hype you know nobody's like listening so Nuance gets lost but it's",
    "start": "4288000",
    "end": "4295800"
  },
  {
    "text": "fine I'm I'm confident we always find a way to do the right thing always so you know just good ideas float so Evan this",
    "start": "4295800",
    "end": "4302719"
  },
  {
    "text": "has been like such a wow I mean it's 9:00 a.m. where I am and I feel like",
    "start": "4302719",
    "end": "4307760"
  },
  {
    "text": "I've already had like8 hours worth of schooling so like but really thank you",
    "start": "4307760",
    "end": "4313000"
  },
  {
    "text": "so much for like educating us and like walking us through some of the decisions that you and your team made it's a great",
    "start": "4313000",
    "end": "4319400"
  },
  {
    "text": "conversation yeah really just um I feel like I could I've always been a fan from afar and now I'm like yeah Evan you're",
    "start": "4319400",
    "end": "4326199"
  },
  {
    "text": "actually also a really good teacher so please consider like doing more doing more like just lectures open lectures",
    "start": "4326199",
    "end": "4332080"
  },
  {
    "text": "like you know just just twitch stream your thoughts I'll listen like I'll be there okay taking notes",
    "start": "4332080",
    "end": "4338719"
  },
  {
    "text": "agreed maybe I should get into streaming maybe you should yep see you heard it",
    "start": "4338719",
    "end": "4343760"
  },
  {
    "text": "here first everyone you know you'll have me to thank for all your future knowledge you be sure to like And",
    "start": "4343760",
    "end": "4349239"
  },
  {
    "text": "subscribe yeah like And subscribe exactly you know and we'll come up with like a French name for your stream",
    "start": "4349239",
    "end": "4354719"
  },
  {
    "text": "channel like we'll have to think like what would it be I don't know what's the French word for twitch I have no idea",
    "start": "4354719",
    "end": "4360000"
  },
  {
    "text": "but I'm sure we can find it I got it are you googling I got to go to Google Translate again Google translate right",
    "start": "4360000",
    "end": "4367320"
  },
  {
    "text": "yeah so we'll put all the links in our show notes for everything we discussed today there's a lot to unpack so um",
    "start": "4367320",
    "end": "4372960"
  },
  {
    "text": "we're excited for you to dig into that and with that said it's been a wonderful show and yet again like thank you to my",
    "start": "4372960",
    "end": "4379199"
  },
  {
    "text": "lovely co-host Nick nii it's been a pleasure and so we'll talk to you next week everyone likewise bye-bye",
    "start": "4379199",
    "end": "4387960"
  },
  {
    "text": "bye all right that is our show thank you for listening what do you think let us",
    "start": "4388719",
    "end": "4394040"
  },
  {
    "text": "know in the comments yes you can comment on every JS party episode on Chang log.com there's a direct link to the",
    "start": "4394040",
    "end": "4400600"
  },
  {
    "text": "comment thread for this episode at the top of your show notes if you're digging JS party do us a solid by recommending",
    "start": "4400600",
    "end": "4405760"
  },
  {
    "text": "the show to a friend we'd love to have them listening along and hey it'll give you one more thing to talk about next time you see each other JS party is",
    "start": "4405760",
    "end": "4412320"
  },
  {
    "text": "produced by me Jered Santo with break master cylinder beats in the mix thanks again to our partners at fastly for",
    "start": "4412320",
    "end": "4418239"
  },
  {
    "text": "delivering this episode super fast all around the world next up on the Pod we",
    "start": "4418239",
    "end": "4423480"
  },
  {
    "text": "are letting the segments recur Ally Amelia cable and myself play a round of story of the week followed by T so you",
    "start": "4423480",
    "end": "4430480"
  },
  {
    "text": "can learn alongside us and I'm speaking with the author of vest a validations framework inspired by unit testing",
    "start": "4430480",
    "end": "4436400"
  },
  {
    "text": "libraries stay tuned to JSP party. FM we'll have it ready for you next",
    "start": "4436400",
    "end": "4442640"
  },
  {
    "text": "[Music]",
    "start": "4442640",
    "end": "4447679"
  },
  {
    "text": "week",
    "start": "4447679",
    "end": "4450679"
  }
]