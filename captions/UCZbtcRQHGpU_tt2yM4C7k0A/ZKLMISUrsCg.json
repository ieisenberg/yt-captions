[
  {
    "text": "I've done a few things with ebpf a little bit here and there actually delve has a trace functionality which works",
    "start": "80",
    "end": "6960"
  },
  {
    "text": "somewhat similar but it works at a higher level using p trace and some of those other kind of CIS calls and I've",
    "start": "6960",
    "end": "13040"
  },
  {
    "text": "thought about experimenting a little bit on Linux systems that support it replacing that with like an ebpf backed",
    "start": "13040",
    "end": "18800"
  },
  {
    "text": "tracing system so Grant if you ever want to send a pull request we'd love to have",
    "start": "18800",
    "end": "25039"
  },
  {
    "text": "it yeah I would yeah I am happy to I am happy to integrate from the West",
    "start": "25039",
    "end": "32599"
  },
  {
    "text": "code to the visualization I would love that this is",
    "start": "32600",
    "end": "37840"
  },
  {
    "text": "the most productive meeting I've ever been in wasn't even meant to be a",
    "start": "37840",
    "end": "43399"
  },
  {
    "text": "meeting B with for change log is provided by fastly learn more at fastly.com our feature flags are powered",
    "start": "43399",
    "end": "50800"
  },
  {
    "text": "by launch darkley check them out at launchdarkly decom and we're hosted on Lino Cloud servers get $100 in hosting",
    "start": "50800",
    "end": "57359"
  },
  {
    "text": "credit at lin.com changelog",
    "start": "57359",
    "end": "61920"
  },
  {
    "text": "whether you're working on a personal project or managing Enterprise infrastructure you deserve simple",
    "start": "62680",
    "end": "67720"
  },
  {
    "text": "affordable and accessible cloud computing Solutions so you can take your project to the next level simplify your",
    "start": "67720",
    "end": "74119"
  },
  {
    "text": "life with Leno's Linux VMS to develop deploy and scale your applications faster and easier get started on Lino",
    "start": "74119",
    "end": "81799"
  },
  {
    "text": "today with $100 in free credit for our listeners you can find all the details at lin.com changelog or if you're not at",
    "start": "81799",
    "end": "89040"
  },
  {
    "text": "your desk just text change log to 474747 and get instant access to that",
    "start": "89040",
    "end": "94439"
  },
  {
    "text": "100 bucks linode has 11 global data centers and provides 24/7 365 human",
    "start": "94439",
    "end": "100439"
  },
  {
    "text": "support with no tiers or handoffs regardless of your plan size in addition to shared and dedicated compute",
    "start": "100439",
    "end": "106560"
  },
  {
    "text": "instances you can use that $100 credit on S3 compatible object storage manage kubernetes and more visit lin.com",
    "start": "106560",
    "end": "114280"
  },
  {
    "text": "changelog and click on the create free Account button to get started or just text changelog to 47",
    "start": "114280",
    "end": "120360"
  },
  {
    "text": "74747 get started today on",
    "start": "120360",
    "end": "124640"
  },
  {
    "text": "Leno let's do it it's go time welcome to go time your source for diverse",
    "start": "133040",
    "end": "140040"
  },
  {
    "text": "discussions from around the go Community we're taking you back to go foron this week for our second live episode from",
    "start": "140040",
    "end": "146519"
  },
  {
    "text": "the conference we hope you enjoy it and if you do please tell us round about go time okay let's get straight into it",
    "start": "146519",
    "end": "152480"
  },
  {
    "text": "shall we here we",
    "start": "152480",
    "end": "156319"
  },
  {
    "text": "[Music]",
    "start": "159760",
    "end": "166019"
  },
  {
    "text": "go hello there and welcome to a very special episode of go time and it's a",
    "start": "167800",
    "end": "174519"
  },
  {
    "text": "goer con mashup um this is the lunchtime sessions for goer con and also a go Time",
    "start": "174519",
    "end": "181080"
  },
  {
    "text": "episode so welcome today we're talking about what we do when things go wrong a",
    "start": "181080",
    "end": "188239"
  },
  {
    "text": "manager once asked me uh to only write code that didn't have any bugs in it so",
    "start": "188239",
    "end": "194200"
  },
  {
    "text": "that was an interesting thing we're going to find out today what are bugs and what can we do to get rid of them uh",
    "start": "194200",
    "end": "201560"
  },
  {
    "text": "or make sure they're never there in the first place and we'll look at tools and techniques around this too with our",
    "start": "201560",
    "end": "207720"
  },
  {
    "text": "expert panel who I'm going to introduce now we're joined by Hannah Kim from The",
    "start": "207720",
    "end": "214159"
  },
  {
    "text": "Go Team hello Hannah hi welcome to go time yeah I don't know if like I'm an",
    "start": "214159",
    "end": "219319"
  },
  {
    "text": "expert but thank you very much for inviting me to go time it's so exciting yeah I'm so honored yes we are more than",
    "start": "219319",
    "end": "225799"
  },
  {
    "text": "welcome to be here sorry I do sometimes accidentally say expert and people don't like that it sets things up so um don't",
    "start": "225799",
    "end": "232920"
  },
  {
    "text": "worry no pressure uh we're also joined by Grant salela Richmond hello Grant hi",
    "start": "232920",
    "end": "238640"
  },
  {
    "text": "thanks for having me wow welcome mate you're very welcome are you having a good day so far so far so good goer con",
    "start": "238640",
    "end": "244799"
  },
  {
    "text": "is uh so far the talks have been great great well hopefully we won't ruin it and we're also joined by Derek Parker",
    "start": "244799",
    "end": "253360"
  },
  {
    "text": "hello Derek hello everybody hello welcome to go time/ go foron lunchtime",
    "start": "253360",
    "end": "259840"
  },
  {
    "text": "session thank you and uh good evening good morning for me on the west coast having my second cup of coffee great",
    "start": "259840",
    "end": "267360"
  },
  {
    "text": "enjoy it so yes I should say Derek you work at red hat and you actually created",
    "start": "267360",
    "end": "274120"
  },
  {
    "text": "delve didn't you which is a debugger yeah that's correct okay so so this will be good because we'll definitely dig",
    "start": "274120",
    "end": "280960"
  },
  {
    "text": "into that a little bit more it's such a great tool and you know it's a great way to get rid of bugs but maybe we could",
    "start": "280960",
    "end": "286960"
  },
  {
    "text": "start what is a bug why was it a little bit absurd that my manager asked me to",
    "start": "286960",
    "end": "292720"
  },
  {
    "text": "only write code that didn't have bugs in I would say what is a bug a bug is I",
    "start": "292720",
    "end": "298919"
  },
  {
    "text": "guess something unexpected in your code or or something incorrect right is what it's typically is is how I think most",
    "start": "298919",
    "end": "306080"
  },
  {
    "text": "people typically think of it it's something not only unexpected but just just incorrect a wrong result or a wrong",
    "start": "306080",
    "end": "312639"
  },
  {
    "text": "something and uh the absurdity I think of that statement comes from you know",
    "start": "312639",
    "end": "319280"
  },
  {
    "text": "how could you have the premonition not to you know sometimes it's maybe a little bit out of your control when a",
    "start": "319280",
    "end": "325120"
  },
  {
    "text": "when a bug happens you know like I would say like weird things can happen running on a different architecture could expose",
    "start": "325120",
    "end": "331479"
  },
  {
    "text": "a bug that you wouldn't have seen on on the CPU architecture that you're using or in a different environment or with",
    "start": "331479",
    "end": "337039"
  },
  {
    "text": "different environment variables or whatever you know there there could be so many things outside of your direct",
    "start": "337039",
    "end": "342440"
  },
  {
    "text": "control that could expose a bug which I think is part of the absurdity of that",
    "start": "342440",
    "end": "347840"
  },
  {
    "text": "statement that please write code that does not have bugs yes yeah so um right",
    "start": "347840",
    "end": "355039"
  },
  {
    "text": "it's just behavior that happens that we don't want to happen but of course there's no way for the compiler to know",
    "start": "355039",
    "end": "362000"
  },
  {
    "text": "that that shouldn't happen it's not like a type error where you can have a compiler look at the code and you know",
    "start": "362000",
    "end": "368199"
  },
  {
    "text": "tell you or fail the compilation if if if things aren't right it's kind of they",
    "start": "368199",
    "end": "373960"
  },
  {
    "text": "emerge sometimes from either different ways things are interacting or just",
    "start": "373960",
    "end": "379720"
  },
  {
    "text": "sometimes it's uh you know made a mistake happens too yeah sometimes bugs turn into features so yeah that's yeah",
    "start": "379720",
    "end": "387400"
  },
  {
    "text": "absolutely especially when when I've done it I will always pretend it it was meant to be like that it's a great one",
    "start": "387400",
    "end": "394759"
  },
  {
    "text": "so what do we mean by debugging then is this just any method that anything you",
    "start": "394759",
    "end": "399919"
  },
  {
    "text": "do to get rid of bugs is that debugging or is debugging a more specific technical term so I suppose when you're",
    "start": "399919",
    "end": "408599"
  },
  {
    "text": "you know using a debugger doing some type of debugging you're trying to",
    "start": "408599",
    "end": "414440"
  },
  {
    "text": "figure out what it is that's causing this unexpected behavior that you know every everybody has an intention when",
    "start": "414440",
    "end": "420960"
  },
  {
    "text": "they're writing their code so just like how you said that there's no way for the compiler to tell you know what you meant",
    "start": "420960",
    "end": "427639"
  },
  {
    "text": "for your code to do it's doing exactly what you told it to do so you know let's",
    "start": "427639",
    "end": "432800"
  },
  {
    "text": "say you're seeing some bug um you know output that's coming out of your program",
    "start": "432800",
    "end": "438039"
  },
  {
    "text": "is not as expected or you're just seeing some errors that you didn't expect to happen the act of debugging is trying to",
    "start": "438039",
    "end": "446199"
  },
  {
    "text": "figure out what's causing that bug you know where in your code did you have some logic that isn't what you intended",
    "start": "446199",
    "end": "453319"
  },
  {
    "text": "it to be and trying to figure that out so that you could then fix it yeah and",
    "start": "453319",
    "end": "459199"
  },
  {
    "text": "when you come to debugging then with techniques and tools do you have a",
    "start": "459199",
    "end": "464800"
  },
  {
    "text": "particular favorite of what's your sort of go-to what's the first thing you do when you've noticed something's wrong",
    "start": "464800",
    "end": "470879"
  },
  {
    "text": "does it depend or so I I will say that I think there is a sort of a a half joke",
    "start": "470879",
    "end": "478120"
  },
  {
    "text": "within all of the tech industry that you know adding print statements to your",
    "start": "478120",
    "end": "485039"
  },
  {
    "text": "code is wrong or like an amateur approach but to be honest if your",
    "start": "485039",
    "end": "492120"
  },
  {
    "text": "program compiles particularly quickly there's no reason that adding a print",
    "start": "492120",
    "end": "497319"
  },
  {
    "text": "statement should be looked at as you know like a dirty way of doing it so you",
    "start": "497319",
    "end": "502479"
  },
  {
    "text": "know the feedback loop you know when you're debugging you want to have a quick feedback loop so if it's a simple",
    "start": "502479",
    "end": "507520"
  },
  {
    "text": "enough program where you could just add a print statement at you know a certain point that's printing out the contents of variables I don't think there's",
    "start": "507520",
    "end": "514440"
  },
  {
    "text": "anything wrong with that because it's an intuitive interface you know that like I want to know what happens at this point",
    "start": "514440",
    "end": "520599"
  },
  {
    "text": "in the program if it's a particularly complex program or you know the compile",
    "start": "520599",
    "end": "526279"
  },
  {
    "text": "time is long and you need a faster feedback loop or something like that that's when I would typically use a debugger or some type of tracing tool",
    "start": "526279",
    "end": "533519"
  },
  {
    "text": "but nothing wrong with print statements yeah I think that's a great I'm really pleased you said that because I've met",
    "start": "533519",
    "end": "539640"
  },
  {
    "text": "Junior developers who feel like that's they're just they don't know how to use a debugger or they don't know what",
    "start": "539640",
    "end": "545560"
  },
  {
    "text": "they're doing and they just put prints out but it is completely legitimate uh",
    "start": "545560",
    "end": "550920"
  },
  {
    "text": "in fact it tends to be my go-to thing is doing that and there's a there's a particular verb that's very useful in go",
    "start": "550920",
    "end": "557320"
  },
  {
    "text": "if you use f if you use the F package you can do like percent plus v and then",
    "start": "557320",
    "end": "562399"
  },
  {
    "text": "give it any type and it does a really good job of describing that type even if it's a complicated kind of struct with",
    "start": "562399",
    "end": "569279"
  },
  {
    "text": "nested data and all sorts uh and you see the field names too which is quite useful are there any other favorite",
    "start": "569279",
    "end": "576040"
  },
  {
    "text": "techniques like that that are sort of simple debuggable things printing's a",
    "start": "576040",
    "end": "582320"
  },
  {
    "text": "great one certainly uh you know I'm sure both DK and Hannah can can talk about using delve but I certainly use delve",
    "start": "582320",
    "end": "590640"
  },
  {
    "text": "you know full flesh debugger right so delves are kind of a different Beast",
    "start": "590640",
    "end": "595720"
  },
  {
    "text": "really and the other one that that we should talk about before we get onto delve is test code because actually test",
    "start": "595720",
    "end": "601000"
  },
  {
    "text": "code is a great way to debug your code one trick that I find works really well",
    "start": "601000",
    "end": "606880"
  },
  {
    "text": "is if somebody identifies there's a bug if you ask them to write a failing test",
    "start": "606880",
    "end": "613079"
  },
  {
    "text": "if they can do that you know that is a great way you remove all ambiguity you're looking you know you speaking the",
    "start": "613079",
    "end": "619000"
  },
  {
    "text": "same language you look at the code and if it's a failed test you know you've",
    "start": "619000",
    "end": "624120"
  },
  {
    "text": "proven that there's a bug there and sometimes the test is wrong and some of the assumptions are wrong and that's",
    "start": "624120",
    "end": "629880"
  },
  {
    "text": "that's one thing but usually it does kind of highlight the bug and then of course once it's fixed you can put that",
    "start": "629880",
    "end": "635639"
  },
  {
    "text": "test into your test suite and you kind of never get that same bug again Hannah",
    "start": "635639",
    "end": "641680"
  },
  {
    "text": "you work on the go team and you're working on the VSS code plugin for go",
    "start": "641680",
    "end": "647440"
  },
  {
    "text": "right so tell us about that then that plugs into the IDE integrates so turns",
    "start": "647440",
    "end": "653880"
  },
  {
    "text": "visual code from being what might it may be just a sort of basic text editor and",
    "start": "653880",
    "end": "659320"
  },
  {
    "text": "adds some kind of go intelligence to it is that fair oh yeah and also it has a",
    "start": "659320",
    "end": "665720"
  },
  {
    "text": "debugger integration too and also what kind of facilities that actually helps",
    "start": "665720",
    "end": "671720"
  },
  {
    "text": "like users to write a good test like or kind of templating and auto complete and",
    "start": "671720",
    "end": "677839"
  },
  {
    "text": "that kind of features and also like a test command so with just one click uh",
    "start": "677839",
    "end": "682880"
  },
  {
    "text": "you can write test on your package yeah so yeah but for debuging like a purpose",
    "start": "682880",
    "end": "691800"
  },
  {
    "text": "I think yeah my go to is still like a print app and look or that kind of thing",
    "start": "691800",
    "end": "697600"
  },
  {
    "text": "so yeah yeah so maybe it's time then just to talk about delve maybe we could",
    "start": "697600",
    "end": "703120"
  },
  {
    "text": "start by just for anybody that hasn't used a debugger before and maybe Derek",
    "start": "703120",
    "end": "708560"
  },
  {
    "text": "this is one for you what is a debugger and what's it doing how does it work how do you use it yeah so I actually heard",
    "start": "708560",
    "end": "716320"
  },
  {
    "text": "like a a really good explanation yesterday from Jason who I was",
    "start": "716320",
    "end": "721360"
  },
  {
    "text": "co-instructing our workshop with the format or is it a human you're not talking about the data",
    "start": "721360",
    "end": "728079"
  },
  {
    "text": "format he a human got it okay that's a half joke like what um",
    "start": "728079",
    "end": "735440"
  },
  {
    "text": "Grant did earlier just not funny go on sorry I like the way that um Jason kind",
    "start": "735440",
    "end": "742399"
  },
  {
    "text": "of explained like what a tool like a debugger is so it's actually kind of like uh like I think that the name",
    "start": "742399",
    "end": "749800"
  },
  {
    "text": "debugger is a little bit of a misnomer like the tool itself doesn't actually fix the bug for you it's just a it's",
    "start": "749800",
    "end": "756760"
  },
  {
    "text": "just a tool that you can use to understand your program right it's it's just like a it's a way to just",
    "start": "756760",
    "end": "763360"
  },
  {
    "text": "understand what your program is doing and then once you figure out what's going wrong you can fix the bug it",
    "start": "763360",
    "end": "768519"
  },
  {
    "text": "doesn't fix the bug for you but whose faults that you're the Creator and co-maintainer of Del so really you've",
    "start": "768519",
    "end": "774839"
  },
  {
    "text": "only got yourself to blame there in the next release you know we're working on it but it's actually an interesting point",
    "start": "774839",
    "end": "781040"
  },
  {
    "text": "it can't be done automatically otherwise of course the tooling would be doing it for you you know you have to sort of",
    "start": "781040",
    "end": "786560"
  },
  {
    "text": "tell it what correct is and you've already told it what incorrect is right",
    "start": "786560",
    "end": "792040"
  },
  {
    "text": "yeah I think it's approaching like any kind of debugging situation with the mindset of like how can I gain insight",
    "start": "792040",
    "end": "799560"
  },
  {
    "text": "into what's actually happening and how can I do that in a way that will quickly",
    "start": "799560",
    "end": "804839"
  },
  {
    "text": "allow me to figure out what's going wrong so that I can fix it and I think think kind of like what Grant said",
    "start": "804839",
    "end": "810240"
  },
  {
    "text": "earlier whatever gives you the the fastest feedback loop that's kind of what you should pursue so whether that's",
    "start": "810240",
    "end": "816040"
  },
  {
    "text": "you know I I do print line debugging all the time as well especially when like working on delve it's hard to debug a",
    "start": "816040",
    "end": "823000"
  },
  {
    "text": "debugger with a debugger sometimes so doing like print line debugging in those kind of situations and kind of whatever",
    "start": "823000",
    "end": "828880"
  },
  {
    "text": "gives you the quickest feedback loop I think is the the best tool to reach for in that",
    "start": "828880",
    "end": "834560"
  },
  {
    "text": "situation okay so if printing the results isn't working for you then delve",
    "start": "834560",
    "end": "840800"
  },
  {
    "text": "allows you to kind of set a break point doesn't it and what happens then in the program the program stops at that point",
    "start": "840800",
    "end": "848199"
  },
  {
    "text": "yeah exactly so with a tool like Del like a a traditional like Source level debugger you're interacting with your",
    "start": "848199",
    "end": "854680"
  },
  {
    "text": "program like in real time and and that's kind of what's fun and interesting about using a debugger is you have the ability",
    "start": "854680",
    "end": "862000"
  },
  {
    "text": "to stop what's happening inspect State even change state if you want continue",
    "start": "862000",
    "end": "867600"
  },
  {
    "text": "so yeah like for example when you start up a new debug session and you you set a breakpoint you continue to it you're",
    "start": "867600",
    "end": "873279"
  },
  {
    "text": "telling the the program I want to stop at this specific location and just check out what's going on you know see how I",
    "start": "873279",
    "end": "880160"
  },
  {
    "text": "got here you can you can look at the stack Trace you can see the value of variables and and if you want to",
    "start": "880160",
    "end": "885480"
  },
  {
    "text": "experiment a little bit debuggers also can let you experiment so you can say for example like change the value of a",
    "start": "885480",
    "end": "891560"
  },
  {
    "text": "variable and see if that gives you the result that you wanted so it gives you a little bit more of like real time",
    "start": "891560",
    "end": "898920"
  },
  {
    "text": "interaction like getting back to that quicker feedback loop you know without like changing a variable in the code",
    "start": "898920",
    "end": "904600"
  },
  {
    "text": "recompiling it rerunning it trying to hit that bug again or seeing if you don't you can kind of do some interactive stuff within like a debug",
    "start": "904600",
    "end": "911800"
  },
  {
    "text": "session and you can step then can't you through the instructions so you can advance the program step by step slowly",
    "start": "911800",
    "end": "918759"
  },
  {
    "text": "and keep an eye on things just so you understand what's happening it's sort of like puts it into slow slow motion and",
    "start": "918759",
    "end": "924720"
  },
  {
    "text": "lets you do that carefully right yeah yeah absolutely exactly and how does",
    "start": "924720",
    "end": "929959"
  },
  {
    "text": "that actually work what's going on do you have to build the binary specifically with that debug information",
    "start": "929959",
    "end": "935880"
  },
  {
    "text": "added to it or can you just debug anything yeah so all binaries include",
    "start": "935880",
    "end": "941040"
  },
  {
    "text": "information called it's called dwarf information um and that's like a a standard uh a a standard format of debug",
    "start": "941040",
    "end": "949600"
  },
  {
    "text": "information basically it it tells tools like delve how to find variables how to unwind the stack how to do all all kinds",
    "start": "949600",
    "end": "957399"
  },
  {
    "text": "of things so go by default will build that into all binaries you have to opt",
    "start": "957399",
    "end": "962680"
  },
  {
    "text": "out of it specifically um and the only reason why you would opt out of it would be maybe you really really care about",
    "start": "962680",
    "end": "968440"
  },
  {
    "text": "binary size and and you want to get out every every last you know bit that you can to make to shrink your binary as",
    "start": "968440",
    "end": "974639"
  },
  {
    "text": "much as possible but by default that information is going to be in there the only other thing that like delve does by",
    "start": "974639",
    "end": "981560"
  },
  {
    "text": "default and I would recommend folks do if they're going to try to debug their go applications processes whatever is go",
    "start": "981560",
    "end": "990000"
  },
  {
    "text": "also by default will put in optimizations so like if you're familiar with like GCC or some other compiler you",
    "start": "990000",
    "end": "996000"
  },
  {
    "text": "have to explicitly tell it what level of optimization you want and you kind of have to opt into some of the more um",
    "start": "996000",
    "end": "1002279"
  },
  {
    "text": "extreme optimizations but go does that by default um and that's great for when you're building a production binary you",
    "start": "1002279",
    "end": "1008079"
  },
  {
    "text": "want to ship it off it's going to be fast and performant and all that but it could be it could hamper debugging a",
    "start": "1008079",
    "end": "1013160"
  },
  {
    "text": "little bit because of like inlining functions can get weird sometimes Del handles it really well well now and and",
    "start": "1013160",
    "end": "1019240"
  },
  {
    "text": "the go compiler has gotten um a lot better at providing information um for how to for telling debuggers how to",
    "start": "1019240",
    "end": "1025600"
  },
  {
    "text": "handle that but um there's there's there's still certain weirdness there that you can run into when trying to",
    "start": "1025600",
    "end": "1030880"
  },
  {
    "text": "debug and optimize binary so that's the only caveat that that I would like explicitly",
    "start": "1030880",
    "end": "1036160"
  },
  {
    "text": "mentioned that's interesting and so Hannah when when you talk about V the vs code plug-in and it has debugger support",
    "start": "1036160",
    "end": "1044640"
  },
  {
    "text": "does it support delve well actually delve behind the scene actually like other editors like",
    "start": "1044640",
    "end": "1052000"
  },
  {
    "text": "goand they also use the Del so basically theci like when user request to debug",
    "start": "1052000",
    "end": "1058840"
  },
  {
    "text": "their code it actually formulates all this Del command and then invoke Del and",
    "start": "1058840",
    "end": "1064200"
  },
  {
    "text": "ask Del to answer the question and then most of modern IDs they have a kind of",
    "start": "1064200",
    "end": "1069840"
  },
  {
    "text": "like all this local variable Global variable or stack trace or so it just",
    "start": "1069840",
    "end": "1075520"
  },
  {
    "text": "ask Del and then it yeah all the information are like a visible through",
    "start": "1075520",
    "end": "1081039"
  },
  {
    "text": "all this UI and then users can actually step through all this yeah step through",
    "start": "1081039",
    "end": "1086960"
  },
  {
    "text": "the program using the UI and again we ask Dev to do all this stuffff so idea",
    "start": "1086960",
    "end": "1093919"
  },
  {
    "text": "is work is kind of like provide the best experience user experience and visualize the data coming in and coming out uh",
    "start": "1093919",
    "end": "1101159"
  },
  {
    "text": "like I mean all the information between this delve and like a the front end yeah",
    "start": "1101159",
    "end": "1108520"
  },
  {
    "text": "so that's really nice then so you don't have to learn these complicated commands",
    "start": "1108520",
    "end": "1113960"
  },
  {
    "text": "and you don't have to know about the the dwar uh data or anything like that because it's integrated yeah ideally",
    "start": "1113960",
    "end": "1121600"
  },
  {
    "text": "yeah because it's integrated you get to just do it right in your code the same place where you're writing the code so",
    "start": "1121600",
    "end": "1128000"
  },
  {
    "text": "that's really cool how do you actually do that then in in VSS code how do you set a breakpoint so actually what the",
    "start": "1128000",
    "end": "1135240"
  },
  {
    "text": "Nic thing about Del is Dela has the API so like all this method and the",
    "start": "1135240",
    "end": "1140720"
  },
  {
    "text": "instruction they are actually they can be invoked through the RPC and so we",
    "start": "1140720",
    "end": "1146960"
  },
  {
    "text": "just launched the Headless Del like a server and then the from the Del like vs",
    "start": "1146960",
    "end": "1153400"
  },
  {
    "text": "code we also use uh so from the vs code we just invoke this RPC and there is",
    "start": "1153400",
    "end": "1159080"
  },
  {
    "text": "some recent movement about the debug adapter protocol that is kind of like a",
    "start": "1159080",
    "end": "1165200"
  },
  {
    "text": "standardize all this so not there go debugger but there is GDB there is lb",
    "start": "1165200",
    "end": "1171520"
  },
  {
    "text": "and there is Javascript debugger and like there are all kind of debuggers right and then we have a vs code so vs",
    "start": "1171520",
    "end": "1178760"
  },
  {
    "text": "code team yeah they try to standardize the interaction between debugger just general debugger and editor so it's",
    "start": "1178760",
    "end": "1186720"
  },
  {
    "text": "called debug adapter protocol and like a vs code go extension spe Del adapter",
    "start": "1186720",
    "end": "1194600"
  },
  {
    "text": "protocol and there is a small tiny Del adapter uh debug adap adapter that actually talks Del RPC so it's a little",
    "start": "1194600",
    "end": "1203000"
  },
  {
    "text": "bit complicated but we try to minimi like a simplify this like communication",
    "start": "1203000",
    "end": "1208240"
  },
  {
    "text": "path so that the next version I hope like the communication is more like",
    "start": "1208240",
    "end": "1213280"
  },
  {
    "text": "efficient and like yeah so yeah that is the gener direction we are heading at",
    "start": "1213280",
    "end": "1219880"
  },
  {
    "text": "that's really cool then that's nice it's nice because we don't as users of this we don't sort of have to worry about",
    "start": "1219880",
    "end": "1225320"
  },
  {
    "text": "that right that's like something that happens behind the scenes we get to just",
    "start": "1225320",
    "end": "1230520"
  },
  {
    "text": "use use the vs code interface so that yeah that's really [Music]",
    "start": "1230520",
    "end": "1244480"
  },
  {
    "text": "great how much time does your team spend building and maintaining internal tooling I'm talking about those behind",
    "start": "1244480",
    "end": "1250320"
  },
  {
    "text": "the-scenes apps the ones no one else sees the S3 uploader you built last year for the marketing team that quick",
    "start": "1250320",
    "end": "1256520"
  },
  {
    "text": "Firebase admin panel that let you monitor key kpis maybe even the tool your data science team had together so",
    "start": "1256520",
    "end": "1263000"
  },
  {
    "text": "they can provide custom ad spend analytics now these are tools you need so you build them and that makes sense",
    "start": "1263000",
    "end": "1269159"
  },
  {
    "text": "but the question is could you have built them in less time with less effort and less overhead and maintenance required",
    "start": "1269159",
    "end": "1276039"
  },
  {
    "text": "and the answer to that question is yes that's where retail comes in Rohan Chopra engineering director at door Dash",
    "start": "1276039",
    "end": "1282520"
  },
  {
    "text": "has this to say about retool quote the tools we've been able to quickly build with retool have allowed us to empower",
    "start": "1282520",
    "end": "1288200"
  },
  {
    "text": "and scale our local operators all while reducing the dependency on engineering end quote now the internal tooling",
    "start": "1288200",
    "end": "1295120"
  },
  {
    "text": "process at door Dash was bogged down with manual data entry missed handoffs and long turnaround times and after",
    "start": "1295120",
    "end": "1300720"
  },
  {
    "text": "integrating retool door Dash was able to cut the engineering time required to build tools by a factor of 10x and",
    "start": "1300720",
    "end": "1306679"
  },
  {
    "text": "eliminate the air prone manual processes that play their workflows they were able to empower backend Engineers who",
    "start": "1306679",
    "end": "1311960"
  },
  {
    "text": "wouldn't otherwise be able to build front ends from scratch and these Engineers were able to build fully functional apps in reto in hour hours",
    "start": "1311960",
    "end": "1318559"
  },
  {
    "text": "not days or weeks your next step is to try it free at ret.com changelog again",
    "start": "1318559",
    "end": "1324279"
  },
  {
    "text": "ret.com [Music]",
    "start": "1324279",
    "end": "1337640"
  },
  {
    "text": "[Music]",
    "start": "1341840",
    "end": "1346960"
  },
  {
    "text": "Chang I'm interested um Grant your talk is is",
    "start": "1346960",
    "end": "1353799"
  },
  {
    "text": "your talk on Friday uh yes Friday I think something around 4:00 MH it's",
    "start": "1353799",
    "end": "1359919"
  },
  {
    "text": "meaningless to me because I'm in a different time zone oh eastern time yeah okay I I think we should get rid of time",
    "start": "1359919",
    "end": "1365679"
  },
  {
    "text": "zones by the way I think that was a bug I think there's a bug in in that to be honest i' like we should all just follow",
    "start": "1365679",
    "end": "1371080"
  },
  {
    "text": "New York time if you like I mean don't you know jumped to an assumption there I",
    "start": "1371080",
    "end": "1376720"
  },
  {
    "text": "mean Greenwich I live near grenwich which is actually where they invented time I think so do you know what I mean",
    "start": "1376720",
    "end": "1383039"
  },
  {
    "text": "I live near grenwich Village yeah which is okay um I wasn't going to say there's a",
    "start": "1383039",
    "end": "1389480"
  },
  {
    "text": "line and you've crossed it I was going to say in Greenwich there's a line that's like the Meridian zero line you",
    "start": "1389480",
    "end": "1395080"
  },
  {
    "text": "can sort of go and I got across it yeah it's all right um so yeah I was going to",
    "start": "1395080",
    "end": "1401320"
  },
  {
    "text": "ask what is your talk about on Friday so my talk is about tracing go programs",
    "start": "1401320",
    "end": "1406559"
  },
  {
    "text": "with ebpf uh so ebpf has been talked about a lot uh at various different",
    "start": "1406559",
    "end": "1414039"
  },
  {
    "text": "conferences for the past you know two or three years it's been gaining a lot of momentum and it's a feature of the Linux",
    "start": "1414039",
    "end": "1422360"
  },
  {
    "text": "kernel so it's certainly Linux specific but what it allows you to do is add ad",
    "start": "1422360",
    "end": "1429919"
  },
  {
    "text": "hoc ad logic to the Linux kernel and I know that's very abstract but the way",
    "start": "1429919",
    "end": "1435640"
  },
  {
    "text": "that it's often put Brendan Greg a you know leader in the ebpf space likes to",
    "start": "1435640",
    "end": "1441720"
  },
  {
    "text": "put it as ebpf does to the Linux kernel what JavaScript does to HTML so you can",
    "start": "1441720",
    "end": "1450000"
  },
  {
    "text": "attach ebpf programs you could think of them as as scripts and attach them to various hooks such as to network sockets",
    "start": "1450000",
    "end": "1458320"
  },
  {
    "text": "every time a packet comes in and have some logic or to Kernel probes which you know every time source code is executed",
    "start": "1458320",
    "end": "1465240"
  },
  {
    "text": "within the Linux kernel itself and in particular what my talk is about is attaching ebpf programs to something",
    "start": "1465240",
    "end": "1472559"
  },
  {
    "text": "called U probes and U probes attach to what essentially is sour like source",
    "start": "1472559",
    "end": "1480159"
  },
  {
    "text": "code symbols so if you have a go program that has a function",
    "start": "1480159",
    "end": "1485279"
  },
  {
    "text": "called test function you can attach a u probe to that and attach an ebpf program",
    "start": "1485279",
    "end": "1491279"
  },
  {
    "text": "to that U probe so that every time a process executes that function so if you",
    "start": "1491279",
    "end": "1497320"
  },
  {
    "text": "run that program uh and it's you know running service or or whatever else you could have essentially a script respond",
    "start": "1497320",
    "end": "1506120"
  },
  {
    "text": "to that function every time it's called so you could print out what the arguments are you could have some Logic",
    "start": "1506120",
    "end": "1512000"
  },
  {
    "text": "for inspecting another area of memory you know and it's useful for debugging",
    "start": "1512000",
    "end": "1517399"
  },
  {
    "text": "for monitoring potentially for fuzzing or fault injection as well so does the",
    "start": "1517399",
    "end": "1524120"
  },
  {
    "text": "original function still run and you just sort of intercepted it or do you replace it that's a a really good question so it",
    "start": "1524120",
    "end": "1531520"
  },
  {
    "text": "does still run it doesn't stop the program from running at all it doesn't affect the process it runs in its own",
    "start": "1531520",
    "end": "1539039"
  },
  {
    "text": "essent it runs in its own virtual machine inside the Linux kernel actually so the the difference between or you",
    "start": "1539039",
    "end": "1546080"
  },
  {
    "text": "know I guess there's a lot of difference in terms of the underlying technology but the advantage to",
    "start": "1546080",
    "end": "1551840"
  },
  {
    "text": "ebpf uh which I guess could also be seen as a disadvantage uh compared to debuggers is that it's not stopping the",
    "start": "1551840",
    "end": "1558640"
  },
  {
    "text": "program it's not attaching to to the process you can have a running program",
    "start": "1558640",
    "end": "1565360"
  },
  {
    "text": "that is completely unaware of the fact that it's you know being inspected via ebpf because you're doing it down at the",
    "start": "1565360",
    "end": "1572679"
  },
  {
    "text": "low levels of the operating system I guess exactly so what what use cases are",
    "start": "1572679",
    "end": "1578559"
  },
  {
    "text": "there for that then from a kind of debugging practical standpoint what sorts of things can you do so I have a I",
    "start": "1578559",
    "end": "1584360"
  },
  {
    "text": "have a project I'll shamelessly plug in I'm almost at 100 stars go go start it uh it's called Weaver uh it's on my",
    "start": "1584360",
    "end": "1590399"
  },
  {
    "text": "GitHub Grant Seltzer Weaver and what I'm trying to do is have srace like",
    "start": "1590399",
    "end": "1597880"
  },
  {
    "text": "functionality srace is another tracing tool that you run a program it'll print out every time a system call is executed",
    "start": "1597880",
    "end": "1604919"
  },
  {
    "text": "uh where I'm trying to have a functionality like that for go programs well where you run a go program and",
    "start": "1604919",
    "end": "1611240"
  },
  {
    "text": "every time any function inside of that is called so you know all of your",
    "start": "1611240",
    "end": "1617039"
  },
  {
    "text": "functions in all of your packages every time they're called it will print out a line with it was called at this",
    "start": "1617039",
    "end": "1623960"
  },
  {
    "text": "timestamp and the arguments passed had these values and its return was X Y or Z",
    "start": "1623960",
    "end": "1630760"
  },
  {
    "text": "so the application there is you know for debugging purposes let's say you want to",
    "start": "1630760",
    "end": "1635799"
  },
  {
    "text": "know why you're getting some garbled output and you want to know at what",
    "start": "1635799",
    "end": "1641159"
  },
  {
    "text": "point down the function call stack a function was getting some weird output",
    "start": "1641159",
    "end": "1647600"
  },
  {
    "text": "and you see somewhere along the line like this function for like print or like you know a wrapper around print f",
    "start": "1647600",
    "end": "1654039"
  },
  {
    "text": "is getting really weird output so then you might want to start inspecting at the the function that called that one um",
    "start": "1654039",
    "end": "1660600"
  },
  {
    "text": "it's also useful for uh you know not that I'm saying that this is the the",
    "start": "1660600",
    "end": "1666240"
  },
  {
    "text": "greatest idea um it's still a developing ecosystem but you could attach these two",
    "start": "1666240",
    "end": "1672519"
  },
  {
    "text": "Services running in production because it has such a minimal uh effect on",
    "start": "1672519",
    "end": "1678279"
  },
  {
    "text": "the uh performance of of the service and you could attach it to to running programs as",
    "start": "1678279",
    "end": "1684039"
  },
  {
    "text": "well that is really interesting I mean can can you interact can you like I",
    "start": "1684039",
    "end": "1690120"
  },
  {
    "text": "guess you can't change things in these little ebpf programs can you so I have a",
    "start": "1690120",
    "end": "1696600"
  },
  {
    "text": "little example of how you can actually uh in my talk there is a really good talk that was given at some security",
    "start": "1696600",
    "end": "1704120"
  },
  {
    "text": "conference uh I can link it later but of how you can write essentially malicious code with ebpf but even for",
    "start": "1704120",
    "end": "1710919"
  },
  {
    "text": "non-malicious purposes you could actually write to to memory uh from ebpf so you can change the value of",
    "start": "1710919",
    "end": "1717720"
  },
  {
    "text": "parameters which I do in my talk wow and do would you recommend that or not sure",
    "start": "1717720",
    "end": "1723360"
  },
  {
    "text": "yet I think it has its use cases if you trying to do let's say something like fault injection where you know you have",
    "start": "1723360",
    "end": "1732440"
  },
  {
    "text": "processes that are communicating with one another and you have a function that is pulling in from a another endpoint",
    "start": "1732440",
    "end": "1738799"
  },
  {
    "text": "and if you don't want to have that external dependency you could have an ebpf program that writes some garble",
    "start": "1738799",
    "end": "1745080"
  },
  {
    "text": "data to you know to a particular function and you know see how your your program reacts to it uh and you could",
    "start": "1745080",
    "end": "1753000"
  },
  {
    "text": "also if you have a compiled and running Service uh and you want to see if you",
    "start": "1753000",
    "end": "1758039"
  },
  {
    "text": "know a particular fixed your source code will will fix the issue you can write",
    "start": "1758039",
    "end": "1763120"
  },
  {
    "text": "you know insert a small ebpf program that writes correct data you know if it was getting incorrect data and if that",
    "start": "1763120",
    "end": "1769559"
  },
  {
    "text": "fixes your whole issue you know uh that's you know the symptom of it but I",
    "start": "1769559",
    "end": "1774600"
  },
  {
    "text": "guess it depends on a Case by case basis certainly not in production I'll say that and so these scripts what language",
    "start": "1774600",
    "end": "1780200"
  },
  {
    "text": "are they does it have its own little language is it something that would be familiar to us so it would be familiar",
    "start": "1780200",
    "end": "1785960"
  },
  {
    "text": "to you it's essentially C it's uh a subset of C there are some restrictions to it but it essentially looks like C I",
    "start": "1785960",
    "end": "1792559"
  },
  {
    "text": "guess the language could be called BPF and it's you know there's a verifier Within the Linux kernel when you try and",
    "start": "1792559",
    "end": "1798960"
  },
  {
    "text": "and load the bite code it's an llvm backed uh compiler ah it's a really interesting",
    "start": "1798960",
    "end": "1805360"
  },
  {
    "text": "thing do you think there's work what's what's sort of next before we can start using that kind of technique is it is it",
    "start": "1805360",
    "end": "1812399"
  },
  {
    "text": "because it's it feels like it's quite a new thing on the scene has it been around where did it come from so the",
    "start": "1812399",
    "end": "1818960"
  },
  {
    "text": "original technology of it I think was I don't even want to guess like early 2000s it used to be strictly for packet",
    "start": "1818960",
    "end": "1827840"
  },
  {
    "text": "processing but I would say it's been within the past two years or so that the ecosystem has really developed there's a",
    "start": "1827840",
    "end": "1834399"
  },
  {
    "text": "group of of startups I know Facebook does a lot of uh ebpf stuff and they've contributed to the community quite a bit",
    "start": "1834399",
    "end": "1841399"
  },
  {
    "text": "I would say there's no better time to start doing it than right now because the ecosystem definitely is developing",
    "start": "1841399",
    "end": "1847720"
  },
  {
    "text": "but there's a really strong community of people who you know really help one another you know try and figure this all",
    "start": "1847720",
    "end": "1854640"
  },
  {
    "text": "out and Define what good ebpf code looks like and what the ecosystem related to",
    "start": "1854640",
    "end": "1859840"
  },
  {
    "text": "how it's related to go uh looks like um so I think it's best to get in at the at",
    "start": "1859840",
    "end": "1866399"
  },
  {
    "text": "the ground floor so to speak very interesting yeah it's definitely something to play with it sounds like one of those things that's",
    "start": "1866399",
    "end": "1873240"
  },
  {
    "text": "can be extremely powerful but also a bit like in C and C++ you can do like",
    "start": "1873240",
    "end": "1879159"
  },
  {
    "text": "operator overloading and things which is if used correctly it can be great but as",
    "start": "1879159",
    "end": "1885799"
  },
  {
    "text": "soon as it's abused you end up not knowing what an ad means in the in the code you know what a plus symbol is",
    "start": "1885799",
    "end": "1892919"
  },
  {
    "text": "doing to things fair enough there's probably one of those things you would end up using it very cautiously I",
    "start": "1892919",
    "end": "1898159"
  },
  {
    "text": "suppose yeah that's fair I will say that the goal of my talk is to show how accessible the the technology is and you",
    "start": "1898159",
    "end": "1905279"
  },
  {
    "text": "don't have to have any expertise in the low levels of Linux or even of go for",
    "start": "1905279",
    "end": "1910480"
  },
  {
    "text": "that matter like you could really start playing around with it and it can make a whole new class of of problems much more",
    "start": "1910480",
    "end": "1918039"
  },
  {
    "text": "accessible to so many more people have you ever used it Derek are you aware of it um yeah I I've done uh a",
    "start": "1918039",
    "end": "1926080"
  },
  {
    "text": "few things with with ebpf um a little bit here and there actually delve has a trace functionality which works somewhat",
    "start": "1926080",
    "end": "1933519"
  },
  {
    "text": "similar but it works at a higher level using p trace and some of those other kind of CIS calls and I've thought about",
    "start": "1933519",
    "end": "1940880"
  },
  {
    "text": "experimenting a little bit replacing on Linux systems that support it replacing that with like an ebpf back tracing",
    "start": "1940880",
    "end": "1947559"
  },
  {
    "text": "system so Grant if you ever want to send a poll request we'd love to have",
    "start": "1947559",
    "end": "1953600"
  },
  {
    "text": "it yeah I yeah I am happy to I am happy to integrate from the vest",
    "start": "1953600",
    "end": "1960600"
  },
  {
    "text": "code side with the visualization I would love that this is",
    "start": "1960600",
    "end": "1966600"
  },
  {
    "text": "the most productive meeting I've ever been in it wasn't even meant to be a meeting yeah and the the benefit like of",
    "start": "1966600",
    "end": "1974080"
  },
  {
    "text": "what Grant was talking about doing it like the ebpf route versus so go does it kind of at a higher level",
    "start": "1974080",
    "end": "1979799"
  },
  {
    "text": "using like P CIS calls and and various other like CIS calls on different platforms like Windows and stuff like",
    "start": "1979799",
    "end": "1984919"
  },
  {
    "text": "that but the fundamental problem of why it's like slower than the approach that that Grant described with ebpf is like",
    "start": "1984919",
    "end": "1991840"
  },
  {
    "text": "ebpf stays all within the kernel so there's no contact switching from kernel space to user space back to Kernel space",
    "start": "1991840",
    "end": "1998039"
  },
  {
    "text": "back to user space that contact switch can get expensive so when Dove traces in",
    "start": "1998039",
    "end": "2003760"
  },
  {
    "text": "kind of a a more portable way it traces in such a way where there's you know you",
    "start": "2003760",
    "end": "2008960"
  },
  {
    "text": "do switch from the kernel to user space back to the kernel back to the user space and typically you don't really see",
    "start": "2008960",
    "end": "2015360"
  },
  {
    "text": "like that much of a Slowdown if you're just tracing a program locally or or something like that but certainly there is a performance hit there that could be",
    "start": "2015360",
    "end": "2022600"
  },
  {
    "text": "like alleviated by switching to ebpf where appropriate where possible but usually people are",
    "start": "2022600",
    "end": "2029679"
  },
  {
    "text": "debugging not in production but I mean does it change does that change at all or is this we're not going to we're",
    "start": "2029679",
    "end": "2035519"
  },
  {
    "text": "still going to keep doing how we doing it you know what I mean I think with ebpf you could make the case that it's",
    "start": "2035519",
    "end": "2041360"
  },
  {
    "text": "easier and a little bit safer and more rational to do in in a production environment I would say I wouldn't",
    "start": "2041360",
    "end": "2047600"
  },
  {
    "text": "recommend doing like a like a delve trace on a production system unless you really really had to for example yeah",
    "start": "2047600",
    "end": "2054638"
  },
  {
    "text": "there you're just going to run into some performance penalties there um is really kind of the biggest",
    "start": "2054639",
    "end": "2060598"
  },
  {
    "text": "issue [Music]",
    "start": "2065879",
    "end": "2071358"
  },
  {
    "text": "what up Gophers Jared Santo here your humble producer I want to take a quick moment to tell you about Chang log Plus+",
    "start": "2071359",
    "end": "2078760"
  },
  {
    "text": "it's our membership program where you can directly support go time and all the podcasts we create here at Chang log",
    "start": "2078760",
    "end": "2085440"
  },
  {
    "text": "ditch the ads get closer to the metal and enjoy supporting go time into the future learn more at Chang log.com",
    "start": "2085440",
    "end": "2092240"
  },
  {
    "text": "plusus plusus once again that's check it out we'd love to have you with",
    "start": "2092240",
    "end": "2100640"
  },
  {
    "text": "[Music]",
    "start": "2103760",
    "end": "2113469"
  },
  {
    "text": "us Hannah you mentioned earlier that delb has an API an RPC API what is that",
    "start": "2114320",
    "end": "2120560"
  },
  {
    "text": "what does that look like how do you consume that how does vs code is it an HTTP API are there is it protuff how how",
    "start": "2120560",
    "end": "2128079"
  },
  {
    "text": "does it actually work yeah so Derek is there yeah here so it's a little bit weird to answer the question so I think",
    "start": "2128079",
    "end": "2136320"
  },
  {
    "text": "yeah that is a Json RPC like one right so it's just like the Json streaming",
    "start": "2136320",
    "end": "2143040"
  },
  {
    "text": "between client and server like it's a simple one and yeah that is a kind of",
    "start": "2143040",
    "end": "2148079"
  },
  {
    "text": "like another Json rpc2 based like a protocol so just do Json message",
    "start": "2148079",
    "end": "2153599"
  },
  {
    "text": "exchange M so you start the program start the debugger delve and does it",
    "start": "2153599",
    "end": "2159520"
  },
  {
    "text": "then return back some end point for you to hit or how does it work yeah so like",
    "start": "2159520",
    "end": "2164680"
  },
  {
    "text": "a yeah just connected to the soet the network soet like a the port and then create a soet and then yeah",
    "start": "2164680",
    "end": "2172400"
  },
  {
    "text": "communication over the socket yeah very cool well you see that I asked that",
    "start": "2172400",
    "end": "2177839"
  },
  {
    "text": "because that's quite interesting because I think there's a whole Space of tooling uh particularly like static analysis or",
    "start": "2177839",
    "end": "2183960"
  },
  {
    "text": "even other sort of runtime tools like debuggers and there's there sort of a lot of choice for how how to build those",
    "start": "2183960",
    "end": "2190560"
  },
  {
    "text": "things so that they can be easily consumed by plugins and things so that's it's quite interesting to always is",
    "start": "2190560",
    "end": "2197040"
  },
  {
    "text": "quite interesting to hear about that uh when did the VSS code plug-in officially",
    "start": "2197040",
    "end": "2202079"
  },
  {
    "text": "get taken up by the go team because it used to just be something else before didn't it yeah so it was originally",
    "start": "2202079",
    "end": "2208240"
  },
  {
    "text": "owned by Microsoft Microsoft team and I think V Cod go was one of the earliest",
    "start": "2208240",
    "end": "2215160"
  },
  {
    "text": "language supporting uh plug in vs Cod ORD and then for a while like it was in",
    "start": "2215160",
    "end": "2222240"
  },
  {
    "text": "the maintenance mode and this year actually we got the responsibility to",
    "start": "2222240",
    "end": "2228720"
  },
  {
    "text": "maintain like so I think there was the blog post from like blog. golang.org",
    "start": "2228720",
    "end": "2234040"
  },
  {
    "text": "about this transition so now like a the tool team inside of like a go team in",
    "start": "2234040",
    "end": "2241839"
  },
  {
    "text": "Google yeah we are maintaining this plugin M how many is on the go tool team",
    "start": "2241839",
    "end": "2247599"
  },
  {
    "text": "tool team H I remember when there was just the go team and now there's like there's a security team there's a team",
    "start": "2247599",
    "end": "2254480"
  },
  {
    "text": "for tools right it's really growing yeah so yeah so yeah there is a high demand",
    "start": "2254480",
    "end": "2261920"
  },
  {
    "text": "so yeah we we need a lot of work to do and so there is like currently the go",
    "start": "2261920",
    "end": "2269160"
  },
  {
    "text": "pleas team that is the like go place is the one of the biggest project I don't know if you heard about it yes that is",
    "start": "2269160",
    "end": "2276240"
  },
  {
    "text": "the language like a service implementation for the go language and",
    "start": "2276240",
    "end": "2282520"
  },
  {
    "text": "yeah the go tool team is basically yeah provide the best developer experience yeah including the debug support or",
    "start": "2282520",
    "end": "2289319"
  },
  {
    "text": "language intelligence support and yeah so vco the go is a kind of like one",
    "start": "2289319",
    "end": "2295040"
  },
  {
    "text": "project one of the project and currently like we are based on the New York and like a handful number of like a few of",
    "start": "2295040",
    "end": "2301800"
  },
  {
    "text": "us are working on yeah various aspect of this developer experience",
    "start": "2301800",
    "end": "2307359"
  },
  {
    "text": "Improvement yeah well we all appreciate all the work of course because it's very nice for us to just we just get to use",
    "start": "2307359",
    "end": "2313599"
  },
  {
    "text": "it and it hopefully makes our lives easier so but I do like to thank people that have contributed this goes for",
    "start": "2313599",
    "end": "2319079"
  },
  {
    "text": "everyone on this call can you give us any spoilers about things that you're working on now though that we might see",
    "start": "2319079",
    "end": "2325000"
  },
  {
    "text": "soon won't tell anyone I won't that is Technic that is legally",
    "start": "2325000",
    "end": "2331920"
  },
  {
    "text": "water tyght so what's coming next H yeah so",
    "start": "2331920",
    "end": "2339280"
  },
  {
    "text": "yeah we are currently like uh working really hard to use go as a like the",
    "start": "2339280",
    "end": "2346599"
  },
  {
    "text": "default like go intelligent yeah go language Ser yeah go language service",
    "start": "2346599",
    "end": "2353400"
  },
  {
    "text": "and also we are now currently working on the like I think I talked about it right",
    "start": "2353400",
    "end": "2359119"
  },
  {
    "text": "the debug adapter plugin adapter protocol so that we can simplify and then provide a like a more performant",
    "start": "2359119",
    "end": "2366520"
  },
  {
    "text": "like debugging experience from the B code users yeah so yeah so that is yeah",
    "start": "2366520",
    "end": "2373160"
  },
  {
    "text": "they are the two big main project I'm currently working on mhm oh great yeah",
    "start": "2373160",
    "end": "2378240"
  },
  {
    "text": "that sounds good and what and what about uh FID Del I mean is is that pretty much",
    "start": "2378240",
    "end": "2383720"
  },
  {
    "text": "kind of done or is there a road map there I'm interested in what's coming next for that too um yeah it's it's one",
    "start": "2383720",
    "end": "2391480"
  },
  {
    "text": "of those things where it's it's still constantly evolving we have a few kind of big things planned we always work to",
    "start": "2391480",
    "end": "2397560"
  },
  {
    "text": "keep up to date with the latest go release so go 116 is coming out soon with each release like that there's",
    "start": "2397560",
    "end": "2404400"
  },
  {
    "text": "subtle things that may change in the runtime or how the binaries are put together that delve kind of has to adapt",
    "start": "2404400",
    "end": "2409760"
  },
  {
    "text": "to so we continuously work on supporting the latest release making sure that you",
    "start": "2409760",
    "end": "2415200"
  },
  {
    "text": "know by the time that release comes out there's a Del version that can support and debug it so that's always kind of a big thing for us we also have a few kind",
    "start": "2415200",
    "end": "2422720"
  },
  {
    "text": "of interesting like features coming up down the line so my com container is working on a feature where you can",
    "start": "2422720",
    "end": "2428920"
  },
  {
    "text": "during an interactive debug session you can create and produce a cord dump from",
    "start": "2428920",
    "end": "2434560"
  },
  {
    "text": "the the process that you're debugging so it's similar to like GC core if folks have ever used something like that but",
    "start": "2434560",
    "end": "2439839"
  },
  {
    "text": "works a little bit differently so that's kind of a cool feature that's coming up another big push that we're kind of",
    "start": "2439839",
    "end": "2445560"
  },
  {
    "text": "trying to do is improve the overall architecture support so right now delve",
    "start": "2445560",
    "end": "2451319"
  },
  {
    "text": "actually only supports a subset of all of the architectures that uh go can actually run on and it supports the the",
    "start": "2451319",
    "end": "2457599"
  },
  {
    "text": "main ones that folks actually use you know amd64 arm 64 things like that but",
    "start": "2457599",
    "end": "2463000"
  },
  {
    "text": "there are some kind of outlier architectures that go supports that that delve doesn't yet that we're also",
    "start": "2463000",
    "end": "2468319"
  },
  {
    "text": "working on as well so there's a poll request up right now for supporting 32bit arm we're looking at supporting",
    "start": "2468319",
    "end": "2474440"
  },
  {
    "text": "like power PC 64 and s390x which are kind of weird architectures but those",
    "start": "2474440",
    "end": "2479560"
  },
  {
    "text": "are kind of some of the bigger things that we have on the road map so far M what about Apple silicon yeah so that's",
    "start": "2479560",
    "end": "2485520"
  },
  {
    "text": "an interesting one because with delve we actually have like a so we have a few different backends that delve can",
    "start": "2485520",
    "end": "2491040"
  },
  {
    "text": "actually use so there's a native back end which we actually we wrote and maintain and we can actually interact",
    "start": "2491040",
    "end": "2496880"
  },
  {
    "text": "with other backends so like the talk that I'm giving tomorrow is on using Milla RR as a backend to do like record",
    "start": "2496880",
    "end": "2503119"
  },
  {
    "text": "replay debugging so with that delve on Mac OS actually uses um ledb server as",
    "start": "2503119",
    "end": "2510599"
  },
  {
    "text": "the back end we have a native Mac back end but it turns out that the documentation for the mock uh konel is",
    "start": "2510599",
    "end": "2519040"
  },
  {
    "text": "horrendous and trying to figure out like how to actually work and interact with that konel means like when I wrote the",
    "start": "2519040",
    "end": "2525119"
  },
  {
    "text": "original back end for Mac it was digging through like the open source kernel to",
    "start": "2525119",
    "end": "2530760"
  },
  {
    "text": "to figure out um some of these like P Trace commands and and some of these weird stuff that I that I had to do cuz",
    "start": "2530760",
    "end": "2535920"
  },
  {
    "text": "the documentation is subpar for that kind of thing so all that to say we use ldb server on the back end so there's",
    "start": "2535920",
    "end": "2542680"
  },
  {
    "text": "some kind of changes that we have to do internally with delve but some of the heavy lifting we kind of get for free by",
    "start": "2542680",
    "end": "2549000"
  },
  {
    "text": "using lb server which you know um apple is certainly going to make work on on",
    "start": "2549000",
    "end": "2554200"
  },
  {
    "text": "their uh silicon so okay great wow so delve really is kind of a big thing cuz",
    "start": "2554200",
    "end": "2560680"
  },
  {
    "text": "I always think of it as this little tool I mean how big is it big in terms of",
    "start": "2560680",
    "end": "2566280"
  },
  {
    "text": "what metric size it's a fairly I I mean no I don't know the the scope of the the",
    "start": "2566280",
    "end": "2571640"
  },
  {
    "text": "actual source code and all that stuff it it's definitely grown and it's grown a little bit and complexity over the years",
    "start": "2571640",
    "end": "2578040"
  },
  {
    "text": "as we've introduced like different back ends and and things like that the goal has kind of always been to to keep it as",
    "start": "2578040",
    "end": "2585000"
  },
  {
    "text": "simple and straightforward from a code perspective um as possible but you know over time obviously things get more",
    "start": "2585000",
    "end": "2591160"
  },
  {
    "text": "complicated and you have to deal with weird weird situations but yeah I mean from just you know like the perspective",
    "start": "2591160",
    "end": "2597960"
  },
  {
    "text": "of the code and stuff like that the project itself it's a fairly big project at this point yeah it sounds like it",
    "start": "2597960",
    "end": "2603839"
  },
  {
    "text": "when new features come to go like say generics lands in go what will that mean",
    "start": "2603839",
    "end": "2609359"
  },
  {
    "text": "for delve you know is there things you're just going to get for free or will there be times when certain",
    "start": "2609359",
    "end": "2614480"
  },
  {
    "text": "language features are added that that that creates a lot of work for you it depends so a lot of that we would get",
    "start": "2614480",
    "end": "2622119"
  },
  {
    "text": "for free a little bit by the kind of debug information that's provided from like go binaries and things like that so",
    "start": "2622119",
    "end": "2628400"
  },
  {
    "text": "it would kind of be up to the go compiler and Linker to produce the the correct information that delve needs to",
    "start": "2628400",
    "end": "2634960"
  },
  {
    "text": "be able to debug that stuff properly and with big new features like that sometimes the support is there sometimes",
    "start": "2634960",
    "end": "2640800"
  },
  {
    "text": "it's not you know sometimes we have to work with folks Upstream to to get that in or or submit some patches ourselves",
    "start": "2640800",
    "end": "2647480"
  },
  {
    "text": "and things like that but a lot of it comes with like just coordination with with a go team there's there's certain",
    "start": "2647480",
    "end": "2653400"
  },
  {
    "text": "things that are go specific that you know we've had to work really closely with with the go team to be able to",
    "start": "2653400",
    "end": "2659400"
  },
  {
    "text": "achieve like for example function calls this is something that actually requires support from the go runtime um and we",
    "start": "2659400",
    "end": "2666119"
  },
  {
    "text": "had to work with the go team to to kind of make that happen it was a coordinated effort so sometimes there's more coordination sometimes we get stuff for",
    "start": "2666119",
    "end": "2673160"
  },
  {
    "text": "free oh cool okay well it's time for our",
    "start": "2673160",
    "end": "2678559"
  },
  {
    "text": "regular slot it's time for unpopular [Music]",
    "start": "2678559",
    "end": "2687800"
  },
  {
    "text": "opinions I actually think should probably [Music]",
    "start": "2687800",
    "end": "2694960"
  },
  {
    "text": "leave [Music] so who wants to kick us off with an",
    "start": "2694960",
    "end": "2701160"
  },
  {
    "text": "unpopular opinion I will say that when you mentioned this I was going to say that print statements are okay for",
    "start": "2701160",
    "end": "2707839"
  },
  {
    "text": "debugging but I don't think that will be that unpopular so I will say that baseball is the by far most exciting",
    "start": "2707839",
    "end": "2718119"
  },
  {
    "text": "sport in the world baseball which one's that it's the it's the one with the all the bases and the ball cluing the name",
    "start": "2718119",
    "end": "2726520"
  },
  {
    "text": "absolutely clever name now actually I did genuinely didn't didn't actually make that link well baseball it gives us",
    "start": "2726520",
    "end": "2733280"
  },
  {
    "text": "lots of um like uh metaphors doesn't it Le it contributes the most metaphors but",
    "start": "2733280",
    "end": "2739079"
  },
  {
    "text": "I don't know uh H is baseball a good Hannah do you agree is baseball a good",
    "start": "2739079",
    "end": "2744520"
  },
  {
    "text": "sport so other than us and some Asian countries who play baseball yeah I don't",
    "start": "2744520",
    "end": "2751520"
  },
  {
    "text": "know Latin America yeah oh yeah and in EUR no not really no we have uh kind of",
    "start": "2751520",
    "end": "2759280"
  },
  {
    "text": "versions different versions of it I don't know but yeah that is potentially unpopular we will justest it but they",
    "start": "2759280",
    "end": "2765680"
  },
  {
    "text": "are missing the best sport right apparently so yeah that's what we've heard according to Grant yeah uh Derek",
    "start": "2765680",
    "end": "2773359"
  },
  {
    "text": "is baseball the best sport best or or most most exciting I I I would refute",
    "start": "2773359",
    "end": "2779200"
  },
  {
    "text": "refute most exciting I think football is is pretty exciting I get excited watching Weir I don't know if you",
    "start": "2779200",
    "end": "2785240"
  },
  {
    "text": "consider this sport but I like watching like poker Champions championships and stuff and that pretty exciting so it's",
    "start": "2785240",
    "end": "2791880"
  },
  {
    "text": "depends on your metric I watch the Starcraft online the Starcraft championships yeah there you go that's",
    "start": "2791880",
    "end": "2797480"
  },
  {
    "text": "exciting yeah yeah yeah but I just don't go outside so I've certainly never play",
    "start": "2797480",
    "end": "2802599"
  },
  {
    "text": "baseball I think a baseball is exciting yeah especially like uh cuz when you",
    "start": "2802599",
    "end": "2808319"
  },
  {
    "text": "watch baseball like you eat hot dog you drink a beer like how cool is that right",
    "start": "2808319",
    "end": "2813720"
  },
  {
    "text": "that's the most exciting one like a soccer you have to watch it you basketball you have to watch it baseball",
    "start": "2813720",
    "end": "2820400"
  },
  {
    "text": "it's so slow and relaxing B sport you don't have to pay attention to it that's how good it is that's how exciting yeah",
    "start": "2820400",
    "end": "2827839"
  },
  {
    "text": "you can just focus on your hot dog do we have any other unpopular opinions and by the way we test these on",
    "start": "2827839",
    "end": "2833760"
  },
  {
    "text": "our Twitter at gotime FM so if there's uh we'll find out if that is indeed",
    "start": "2833760",
    "end": "2839319"
  },
  {
    "text": "popular or not any others we've got a couple of minutes I have a like an opinion like",
    "start": "2839319",
    "end": "2845559"
  },
  {
    "text": "the world will be better if everybody uses Linux oh",
    "start": "2845559",
    "end": "2851400"
  },
  {
    "text": "that it's a controver oh yeah all the evf like all this pet TR like they are",
    "start": "2851400",
    "end": "2858800"
  },
  {
    "text": "not available in other platforms like yeah but what about every other app in",
    "start": "2858800",
    "end": "2864119"
  },
  {
    "text": "the world but I suppose if everyone was using it if everyone's using it they",
    "start": "2864119",
    "end": "2869559"
  },
  {
    "text": "would be they would work too wouldn't they that's a fair one yeah Derek do you have an unpopular opinion I don't think",
    "start": "2869559",
    "end": "2876119"
  },
  {
    "text": "so do you agree with the Linux one I think the world could be a better place if everybody use",
    "start": "2876119",
    "end": "2881760"
  },
  {
    "text": "Linux I'm not as creative as everybody else I don't have anything off the top of my head that's unpopular you created",
    "start": "2881760",
    "end": "2888240"
  },
  {
    "text": "delve so you've done it you've accidentally uh fulfilled your contractual obligations to provide an",
    "start": "2888240",
    "end": "2894920"
  },
  {
    "text": "unpopular opinion for us we are running out of time so I really only have time",
    "start": "2894920",
    "end": "2901640"
  },
  {
    "text": "to say thank you so much for doing this it was a great conversation uh I wish we could spend more time and in fact we'll",
    "start": "2901640",
    "end": "2907960"
  },
  {
    "text": "invite you back at some point to come and do another go Time episode thank you very much to my guests Hannah Grant and",
    "start": "2907960",
    "end": "2914960"
  },
  {
    "text": "Derek it's been a pleasure goodbye thank you so much thank you thank you yeah",
    "start": "2914960",
    "end": "2921079"
  },
  {
    "text": "thank you for inviting me on if you enjoyed this episode subscribe",
    "start": "2921079",
    "end": "2928599"
  },
  {
    "text": "now at go time. FM hey we are getting close to the end of the year and you may be dusting off the old blog to write",
    "start": "2928599",
    "end": "2934480"
  },
  {
    "text": "that epic best of or worst of post if so we love if you'd include go time in your",
    "start": "2934480",
    "end": "2939960"
  },
  {
    "text": "list of favorites let us know on Twitter when you publish I can pretty much guarantee you a retweet from at gotime",
    "start": "2939960",
    "end": "2945599"
  },
  {
    "text": "FM music for Go time is produced by the mysterious one break master cylinder and we're brought to you by awesome sponsors",
    "start": "2945599",
    "end": "2952079"
  },
  {
    "text": "thanks again to fley Leno and launch darkley that's our show on the next episode Ellen corbus joins Matt Chris",
    "start": "2952079",
    "end": "2959440"
  },
  {
    "text": "and Natalie to discuss go in other spoken languages it's a good one so stay tuned for that next",
    "start": "2959440",
    "end": "2965930"
  },
  {
    "text": "[Music]",
    "start": "2965930",
    "end": "2994520"
  },
  {
    "text": "sweek",
    "start": "2994520",
    "end": "2997520"
  },
  {
    "text": "[Music]",
    "start": "2999560",
    "end": "3024440"
  },
  {
    "text": "come [Music]",
    "start": "3024440",
    "end": "3031089"
  },
  {
    "text": "I never know a joke when somebody asks me for a joke you know it's like one of those things like like tell me the the",
    "start": "3035440",
    "end": "3041480"
  },
  {
    "text": "dumbest joke you know it's like at that moment it's like I've never heard a joke in my entire life like I don't even like",
    "start": "3041480",
    "end": "3047640"
  },
  {
    "text": "just don't index the information in that way do we right thing yeah it's like I can't you should have told me you were",
    "start": "3047640",
    "end": "3052920"
  },
  {
    "text": "going to do that and then I'd have an index earlier as it is yeah nothing all my jokes are",
    "start": "3052920",
    "end": "3059400"
  },
  {
    "text": "from my kids cuz they ask Alexa for jokes all the time and they're just",
    "start": "3059400",
    "end": "3065400"
  },
  {
    "text": "dumbest jokes ever and those are literally the only ones I know CU they'll ask me like six time I have a",
    "start": "3065400",
    "end": "3070599"
  },
  {
    "text": "bunch of kids so each kid will ask me the same joke because they just learned it from their brother or sister they think I've never heard it I've heard",
    "start": "3070599",
    "end": "3076200"
  },
  {
    "text": "them all six times what has four wheels and flies a",
    "start": "3076200",
    "end": "3081599"
  },
  {
    "text": "garbage truck see they're not funny but I knew it immediately H it's not funny why does it fly it has",
    "start": "3081599",
    "end": "3088079"
  },
  {
    "text": "flies oh has flies yeah what has four wheels and flies oh right there you go I",
    "start": "3088079",
    "end": "3094319"
  },
  {
    "text": "see it is funny it's better than you thought it was yeah I need it explaining",
    "start": "3094319",
    "end": "3099880"
  },
  {
    "text": "but yeah once it's explained I'm all over it my did you know that ducks can",
    "start": "3099880",
    "end": "3104920"
  },
  {
    "text": "float can they yeah I didn't know that what do you mean of course they did they were always on the water aren't they is",
    "start": "3104920",
    "end": "3110760"
  },
  {
    "text": "this another joke no it's not a joke can float yeah I think it's pretty cool are",
    "start": "3110760",
    "end": "3117400"
  },
  {
    "text": "they floating or swimming uh I guess a little bit of [Music]",
    "start": "3117400",
    "end": "3125000"
  },
  {
    "text": "both",
    "start": "3125000",
    "end": "3128000"
  }
]