[
  {
    "text": "this episode of the change log is brought to you by pusher.com Pusher is a",
    "start": "280",
    "end": "5560"
  },
  {
    "text": "hosted API for quickly adding scalable realtime functionality to web and mobile apps if you're building anything that",
    "start": "5560",
    "end": "12639"
  },
  {
    "text": "needs to get data from the server back to the client asynchronously you need to",
    "start": "12639",
    "end": "18000"
  },
  {
    "text": "check out Pusher they've got a number of tutorials to help you get started everything from a quick start guide to",
    "start": "18000",
    "end": "23640"
  },
  {
    "text": "building a realtime chat client push notifications activity streams and more",
    "start": "23640",
    "end": "29000"
  },
  {
    "text": "use our coupon code the change log to save 15% off your first month join the",
    "start": "29000",
    "end": "35520"
  },
  {
    "text": "real time web today and get your free API account head to pusher.com",
    "start": "35520",
    "end": "41370"
  },
  {
    "text": "[Music]",
    "start": "41370",
    "end": "54518"
  },
  {
    "text": "Welcome to the change log episode 0.8.1 I'm Adam kovak and I'm W",
    "start": "55480",
    "end": "61239"
  },
  {
    "text": "Netherland this is the Chang log we cover W fresh and new and open source if you found us on iTunes we're also in the",
    "start": "61239",
    "end": "66240"
  },
  {
    "text": "web at the Chang log.com we're also up on GitHub head to github.com exlore you'll find some trending repost some",
    "start": "66240",
    "end": "71680"
  },
  {
    "text": "feature repost more blog as well as the audio podcast and if you're on Twitter follow the change log and me Adam stack",
    "start": "71680",
    "end": "78360"
  },
  {
    "text": "and I'm penguin p n g w y NN fun episode this week talk to Tony arer aka bascule",
    "start": "78360",
    "end": "84159"
  },
  {
    "text": "I believe on Twitter about his projects Celluloid and Diesel and real basically",
    "start": "84159",
    "end": "89880"
  },
  {
    "text": "multi-threaded programming in Ruby this seems to be a go-to project for folks building these types of applications in",
    "start": "89880",
    "end": "97798"
  },
  {
    "text": "Ruby stuff I'll never use huh yeah pretty much it's interesting to some folks out there it's uh we mentioned it",
    "start": "98439",
    "end": "105439"
  },
  {
    "text": "in uh the voice of RP the adhesion episode I had to think about the project name the adhesion episode 079 was the",
    "start": "105439",
    "end": "112640"
  },
  {
    "text": "last time we uh we mentioned Celluloid but it's come up a few times on the",
    "start": "112640",
    "end": "118159"
  },
  {
    "text": "chains law yeah and even though it's not popular with me that that episode was really popular so if you haven't listened to it go back and listen",
    "start": "118159",
    "end": "123840"
  },
  {
    "text": "there's people out there that listen to the show I promise yeah sure fun episode this week should we get to it let's do",
    "start": "123840",
    "end": "131119"
  },
  {
    "text": "[Music]",
    "start": "131540",
    "end": "134599"
  },
  {
    "text": "it chatting today with Tony ereri from Living Social uh the Creator behind",
    "start": "137760",
    "end": "143280"
  },
  {
    "text": "Celluloid and some other projects so Tony for those that don't know you want you introduce yourself uh hi there I'm",
    "start": "143280",
    "end": "149160"
  },
  {
    "text": "Tony or I've been doing Ruby about 7 years now I guess uh kind of jumped in",
    "start": "149160",
    "end": "155840"
  },
  {
    "text": "with the rails bandwagon there in 2005 uh got on board with like ra",
    "start": "155840",
    "end": "161800"
  },
  {
    "text": "0.11 this was back when uh everybody was deploying with fast CG and Lighty was",
    "start": "161800",
    "end": "167280"
  },
  {
    "text": "the cool new hotness of the day so I guess I've been around a",
    "start": "167280",
    "end": "172599"
  },
  {
    "text": "while so why say you Lloyd want you give us a little background behind this project uh so I used to do a lot of uh",
    "start": "172599",
    "end": "180040"
  },
  {
    "text": "Network programming in c and when you do stuff in C right you have to build your",
    "start": "180040",
    "end": "185239"
  },
  {
    "text": "own abstractions uh so I had kind of an idea of what I wanted to do or always wanted",
    "start": "185239",
    "end": "191200"
  },
  {
    "text": "to do and c and I discovered earling and earling had sort of tick and all the",
    "start": "191200",
    "end": "196519"
  },
  {
    "text": "stuff I had wanted to do and uh put a really nice face on it and erlang was",
    "start": "196519",
    "end": "201799"
  },
  {
    "text": "kind of how I discovered things like the actor model and uh basically seeing",
    "start": "201799",
    "end": "207080"
  },
  {
    "text": "approaches to concurrency that also work for distribution when did you start the",
    "start": "207080",
    "end": "212959"
  },
  {
    "text": "project I started it around uh this time last year it's a little bit over a year",
    "start": "212959",
    "end": "218439"
  },
  {
    "text": "old now uh I was like lying in bed one night kind of you know around like 3:00 a.m.",
    "start": "218439",
    "end": "225159"
  },
  {
    "text": "or something trying to go to sleep uh just kind of thinking about uh so I was",
    "start": "225159",
    "end": "230799"
  },
  {
    "text": "working on a programming language Rea which was like trying to bring Ruby to the earling VM I thinking you know do I",
    "start": "230799",
    "end": "237159"
  },
  {
    "text": "really need to make a new programming language or can I just take all the airling ideas back over to Ruby which",
    "start": "237159",
    "end": "243439"
  },
  {
    "text": "something I tried before I I tried a reactor which was yeah another project",
    "start": "243439",
    "end": "248840"
  },
  {
    "text": "trying to bring sort of Earl langy ideas to uh to Ruby and I abandoned that",
    "start": "248840",
    "end": "254120"
  },
  {
    "text": "switched to Rea and I was like again like you know maybe I can bring all this",
    "start": "254120",
    "end": "259759"
  },
  {
    "text": "stuff to Ruby we don't need a new language and everybody can just Rite this stuff and Ruby let's dive in there",
    "start": "259759",
    "end": "265199"
  },
  {
    "text": "for a moment what are some of these lingy ideas so the big problem I think is rubious don't like concurrency and we",
    "start": "265199",
    "end": "272639"
  },
  {
    "text": "really need it uh in the modern world right we have uh computers with multicore",
    "start": "272639",
    "end": "278880"
  },
  {
    "text": "processors uh you know we have rails applications that sit around and do nothing while they're talking to the",
    "start": "278880",
    "end": "285280"
  },
  {
    "text": "database so I mean all all these things can be solved with threads and rubius",
    "start": "285280",
    "end": "290840"
  },
  {
    "text": "just don't want to use them and I would really like to change that what are some of the libraries that",
    "start": "290840",
    "end": "297520"
  },
  {
    "text": "you can or can't use if you're using cellular ID sort of adapter support do you need to really take advantage and",
    "start": "297520",
    "end": "303639"
  },
  {
    "text": "exploit this uh so Celluloid will work with any thread safe ruby gems you want",
    "start": "303639",
    "end": "309479"
  },
  {
    "text": "to use so if you want to use rails you want to use Sinatra You can actually drop Celluloid in in the background uh",
    "start": "309479",
    "end": "317080"
  },
  {
    "text": "right now there's unfortunately no Celluloid rails plugin type of thing to kind of give you a happy path for that",
    "start": "317080",
    "end": "324280"
  },
  {
    "text": "but if you're using rails in thread safe mode you can just go ahead and drop in celluloid let's talk about some of these",
    "start": "324280",
    "end": "331000"
  },
  {
    "text": "I guess sub projects of CID uh there's the io project there's Dell and real what what what are these three uh so uh",
    "start": "331000",
    "end": "339800"
  },
  {
    "text": "the the first one you mentioned was Celluloid iio right mhm okay so uh",
    "start": "339800",
    "end": "345800"
  },
  {
    "text": "Celluloid IO lets you do evented IO inside of an actor so it uh it's",
    "start": "345800",
    "end": "351840"
  },
  {
    "text": "basically a combination of the actor model and the reactor pattern so uh basically each of these",
    "start": "351840",
    "end": "359560"
  },
  {
    "text": "objects is kind each of the concurrent objects SL actors is kind of like an",
    "start": "359560",
    "end": "364600"
  },
  {
    "text": "event Loop in and of itself right so that act actor model works by having actors you send them messages then they",
    "start": "364600",
    "end": "372800"
  },
  {
    "text": "can send you messages back so when you're waiting for messages with",
    "start": "372800",
    "end": "377880"
  },
  {
    "text": "Celluloid IO you can also wait for other IO Handles in the system so you can have one actor that's",
    "start": "377880",
    "end": "385479"
  },
  {
    "text": "potentially waiting for uh you know 10,000 and possibly other uh sockets or",
    "start": "385479",
    "end": "392680"
  },
  {
    "text": "something right so it's similar to like event machine or OJs but you can have as",
    "start": "392680",
    "end": "398160"
  },
  {
    "text": "many of those actors as you want in the system you can kind of uh isolate what",
    "start": "398160",
    "end": "404160"
  },
  {
    "text": "connections they deal with so you don't have one event Loop dealing with uh all your clients and then in the same event",
    "start": "404160",
    "end": "411319"
  },
  {
    "text": "Loop you're like trying to make outgoing connections to other services uh if you've ever had to debug",
    "start": "411319",
    "end": "418520"
  },
  {
    "text": "uh somewhere where one of these event Loops is getting stuck it's really nasty so Celluloid uh Celluloid IO",
    "start": "418520",
    "end": "426000"
  },
  {
    "text": "specifically lets you isolate uh which actors are handling what so that's easier to bug so the canical example of",
    "start": "426000",
    "end": "434400"
  },
  {
    "text": "these types of um projects are usually chat servers but let's get a little bit more specific without divulging anything",
    "start": "434400",
    "end": "440520"
  },
  {
    "text": "that you can't share what types of apps at Living Social are you building with this sort of project uh so we're not",
    "start": "440520",
    "end": "448520"
  },
  {
    "text": "actually using uh Celluloid iio Living Social uh we're presently investigating",
    "start": "448520",
    "end": "454160"
  },
  {
    "text": "Diesel and that's uh we're building an internal platform as a",
    "start": "454160",
    "end": "459479"
  },
  {
    "text": "service so it's uh some of the monitoring and automation around that we're uh investigating using diesel but",
    "start": "459479",
    "end": "467280"
  },
  {
    "text": "know it's still in the preliminary stages gotcha so Adam keys on the commit",
    "start": "467280",
    "end": "472680"
  },
  {
    "text": "list here on Celluloid iio just assumed that it was a living social joint yeah",
    "start": "472680",
    "end": "479120"
  },
  {
    "text": "no I mean he he's just a [Laughter] fan so what about uh",
    "start": "479120",
    "end": "485800"
  },
  {
    "text": "diesel so diesel uh one of the neat things about the Octor model is it's",
    "start": "485800",
    "end": "491000"
  },
  {
    "text": "really easy to extend from building concurrent systems inside of a single VM",
    "start": "491000",
    "end": "496599"
  },
  {
    "text": "two distributed systems that run on multiple computers and that's because uh",
    "start": "496599",
    "end": "502879"
  },
  {
    "text": "the the actor model provides you this really high level abstraction with you know these sort of vague terms so so I",
    "start": "502879",
    "end": "510080"
  },
  {
    "text": "mean the basic idea is an actor has a mailbox and that mailbox has an address so it doesn't really matter where that",
    "start": "510080",
    "end": "516680"
  },
  {
    "text": "actor lives it can be in the same VM it can be on the other side of the world uh as long as you have its address you can",
    "start": "516680",
    "end": "523080"
  },
  {
    "text": "send it a message so DL uh lets you build",
    "start": "523080",
    "end": "529080"
  },
  {
    "text": "systems with Celluloid that span multiple computers how drastically does",
    "start": "529080",
    "end": "534279"
  },
  {
    "text": "that change your architecture uh so the idea is it shouldn't",
    "start": "534279",
    "end": "539920"
  },
  {
    "text": "uh basically you can prototype everything inside a single VM and then when you actually want to pull it apart",
    "start": "539920",
    "end": "545880"
  },
  {
    "text": "and distribute it into separate Services it's just as easy as starting services in different VMS instead of all in the",
    "start": "545880",
    "end": "552480"
  },
  {
    "text": "same VM so a couple of times here in the docs you mentioned zero mq and we talked",
    "start": "552480",
    "end": "558079"
  },
  {
    "text": "about that when uh Z Shaw was on the show what's the the selling point for",
    "start": "558079",
    "end": "564240"
  },
  {
    "text": "zero zero mq other than I suppose speed uh well it is an actually",
    "start": "564240",
    "end": "570000"
  },
  {
    "text": "speed so I mean zerum Keys very fast uh it's bu Diesel and Celluloid zmq were",
    "start": "570000",
    "end": "578000"
  },
  {
    "text": "built on this Library called uh ffi R zmq made by Chuck K he's done a really",
    "start": "578000",
    "end": "583760"
  },
  {
    "text": "good job of uh optimizing that as much as possible and getting the latency as low as possible but really it's not",
    "start": "583760",
    "end": "591120"
  },
  {
    "text": "about speed it's about uh having a higher level message transport than TCP",
    "start": "591120",
    "end": "597680"
  },
  {
    "text": "itself so uh Zer mq is some really neat features as far as if your network gets",
    "start": "597680",
    "end": "603200"
  },
  {
    "text": "partitioned and you try to send send a message to another node right uh with",
    "start": "603200",
    "end": "608560"
  },
  {
    "text": "TCP that can potentially time out or give you an error and zero mq will hold",
    "start": "608560",
    "end": "614480"
  },
  {
    "text": "on to those messages and memory and Quee them up and then as soon as uh that",
    "start": "614480",
    "end": "619640"
  },
  {
    "text": "connection becomes available again it can send them all off so it's sort of uh",
    "start": "619640",
    "end": "624959"
  },
  {
    "text": "sort of gives you some basic features of message cuys but without a broker [Music]",
    "start": "624959",
    "end": "630680"
  },
  {
    "text": "how long has uh Zer mq been around uh I've known about it for like",
    "start": "630680",
    "end": "635920"
  },
  {
    "text": "three years I think maybe even more uh it's not like terribly new at",
    "start": "635920",
    "end": "642360"
  },
  {
    "text": "this point it's actually fairly mature and uh you know a lot of people are using it now uh there's projects like",
    "start": "642360",
    "end": "649440"
  },
  {
    "text": "storm which is sort of this uh distributed function processing system built enclosure and uh people are doing",
    "start": "649440",
    "end": "657240"
  },
  {
    "text": "really neat stuff with it now so I'm a fan are projects like Celluloid and and",
    "start": "657240",
    "end": "663079"
  },
  {
    "text": "Diesel this vented model and this distributed model is this the frontier of Ruby and Frontier of some other",
    "start": "663079",
    "end": "669560"
  },
  {
    "text": "languages or is this just uh somewhere where you're like you like to play uh",
    "start": "669560",
    "end": "676279"
  },
  {
    "text": "well I mean so there's erlang which has been doing this thing for like almost 20 years now uh or more than that I guess",
    "start": "676279",
    "end": "684720"
  },
  {
    "text": "but so I mean earling was really ahead of its time as far as the stuff go uh I",
    "start": "684720",
    "end": "690560"
  },
  {
    "text": "would definitely say this is the frontier for concurrency in Ruby there's really no other game in town as far as I",
    "start": "690560",
    "end": "697120"
  },
  {
    "text": "know so instead of pulling these features into Ruby how come we're not seeing Frameworks I guess built on top",
    "start": "697120",
    "end": "702440"
  },
  {
    "text": "of earling what's the barrier there uh so that's been tried quite a bit",
    "start": "702440",
    "end": "707639"
  },
  {
    "text": "actually there were a bunch of projects to do that probably most notably uh vertebra from engine yard tried to do",
    "start": "707639",
    "end": "715560"
  },
  {
    "text": "this uh and it just ended up being over comp complicated uh Ezra a simpler",
    "start": "715560",
    "end": "722200"
  },
  {
    "text": "project with rabbit mq called uh nanite which is sort of you can sort of",
    "start": "722200",
    "end": "729680"
  },
  {
    "text": "look at that as being a little bit uh similar to diesel but uh Diesel's a lot more full",
    "start": "729680",
    "end": "737160"
  },
  {
    "text": "featured I would say uh Nan G1 agent and",
    "start": "737160",
    "end": "742519"
  },
  {
    "text": "uh diesel gives you as many as you want that are as easy to implement as just writing or a ruby class uh and then",
    "start": "742519",
    "end": "749880"
  },
  {
    "text": "Diesel doesn't have a broker right so with Nan you had to deal with setting up Robin mq and it's high availability is a",
    "start": "749880",
    "end": "758120"
  },
  {
    "text": "little bit tricky you have to do like a sand or drbd or something so uh Diesel",
    "start": "758120",
    "end": "763639"
  },
  {
    "text": "doesn't have any of those problems because it's fully decentralized what about",
    "start": "763639",
    "end": "769040"
  },
  {
    "text": "real uh so real is a web server I wrote on top of Celluloid",
    "start": "769040",
    "end": "774519"
  },
  {
    "text": "IO uh some of the goals there were to have a nice modern web server without a",
    "start": "774519",
    "end": "781120"
  },
  {
    "text": "rack API because rack is kind of problematic in Celluloid uh specifically the way it",
    "start": "781120",
    "end": "787839"
  },
  {
    "text": "implements middleware loves to uh sort of use a ton of your stock right uh",
    "start": "787839",
    "end": "794519"
  },
  {
    "text": "Celluloid uses fibers and on uh Ruby 1 19 yarv at least you only have a forward",
    "start": "794519",
    "end": "801399"
  },
  {
    "text": "kilobyte stock for fibers so using Rack in conjunction with",
    "start": "801399",
    "end": "806480"
  },
  {
    "text": "fibers is kind of Impractical is some people who tried to run like a full rail stack on top of it",
    "start": "806480",
    "end": "813000"
  },
  {
    "text": "discovered uh so the the other thing in addition to just not using rack that I",
    "start": "813000",
    "end": "818720"
  },
  {
    "text": "uh want to accomplish is uh having a nice integrated web server built on",
    "start": "818720",
    "end": "824199"
  },
  {
    "text": "Celluloid iio with websocket support uh that features kind of vaporware right",
    "start": "824199",
    "end": "830000"
  },
  {
    "text": "now but I've been looking at uh some stuff like lib web sockets that's available for Ruby and uh seems like",
    "start": "830000",
    "end": "837839"
  },
  {
    "text": "there's some pretty awesome libraries I can tap into since I try to tackle that problem so real appears to be pretty",
    "start": "837839",
    "end": "845320"
  },
  {
    "text": "bare metal it's um yeah yeah so it lacks a lot of the uh routing and DSL and some",
    "start": "845320",
    "end": "851199"
  },
  {
    "text": "of the things we've come to expect from Ruby web Frameworks yeah yeah so I suppose it's geared more towards a",
    "start": "851199",
    "end": "857720"
  },
  {
    "text": "single-purpose just Ultra fast types of servers uh well there's",
    "start": "857720",
    "end": "863519"
  },
  {
    "text": "that and also uh I've been trying to get it working with web machine",
    "start": "863519",
    "end": "869399"
  },
  {
    "text": "so Sean cribs kind of pushed a proof of concept of a web machine driver for it and I just need to add some missing",
    "start": "869399",
    "end": "876839"
  },
  {
    "text": "features to reel and uh write some tests for that after there and uh I think you",
    "start": "876839",
    "end": "883000"
  },
  {
    "text": "can use web machine for all the stuff where you need a higher level of abstraction Sean cribs is from baso and",
    "start": "883000",
    "end": "889759"
  },
  {
    "text": "RI yeah yep so also slings a bit of earling if I recall yeah",
    "start": "889759",
    "end": "897320"
  },
  {
    "text": "yeah so what's what sort of projects are you building if you're not building these low-level projects I mean I'm",
    "start": "897320",
    "end": "903639"
  },
  {
    "text": "always fascinated by folks that are building Frameworks and libraries that ultimately other developers build and",
    "start": "903639",
    "end": "910759"
  },
  {
    "text": "that's what they're doing exclusively but what sort of you know I guess user facing work are you",
    "start": "910759",
    "end": "917480"
  },
  {
    "text": "doing uh so I don't really have any super serious projects I'm building with",
    "start": "917480",
    "end": "923000"
  },
  {
    "text": "Celluloid uh couple of them I built an IRC bot called cellon",
    "start": "923000",
    "end": "929360"
  },
  {
    "text": "uh sort of similar to hubot but more unix's philosophy where each script is just a script and uh if you print from",
    "start": "929360",
    "end": "936759"
  },
  {
    "text": "it it prints to the IRC channel that kind of thing uh the other one is called the cryptosphere",
    "start": "936759",
    "end": "943000"
  },
  {
    "text": "uh this is a project I recognize kind of above my technical ability right now but",
    "start": "943000",
    "end": "950399"
  },
  {
    "text": "it's something I like to hack on uh it's sort of like a peer-to-peer distributed encrypted data store that's",
    "start": "950399",
    "end": "958680"
  },
  {
    "text": "completely decentralized so anybody can join uh I guess the closest projects",
    "start": "958680",
    "end": "964959"
  },
  {
    "text": "today would be something like freet uh there's also gnet well your projects have come up on",
    "start": "964959",
    "end": "971680"
  },
  {
    "text": "a couple of episodes the most recent ones were the adher episode and then also Travis CI so do you have I guess",
    "start": "971680",
    "end": "978839"
  },
  {
    "text": "other developers that are working on their projects ping you and and asking you questions about how to integrate",
    "start": "978839",
    "end": "984399"
  },
  {
    "text": "salid or are you actively marketing the project uh yeah definitely so uh there's",
    "start": "984399",
    "end": "989680"
  },
  {
    "text": "an IRC channel uh just uh pound Celluloid on free node and uh actually",
    "start": "989680",
    "end": "995800"
  },
  {
    "text": "there's been quite a bit of traffic in there lately uh so yeah like uh Ben langfield",
    "start": "995800",
    "end": "1002040"
  },
  {
    "text": "I believe is his name for aderson right has been right I mean he he isn't on the",
    "start": "1002040",
    "end": "1007480"
  },
  {
    "text": "RC Channel per se but uh he he's definitely been one of the main ones talking to me and obviously uh uh",
    "start": "1007480",
    "end": "1014440"
  },
  {
    "text": "earling was created for telepan so I think that's a really a good fit there",
    "start": "1014440",
    "end": "1020360"
  },
  {
    "text": "uh but yeah I mean there's been a lot of people who already have a project and",
    "start": "1020360",
    "end": "1025438"
  },
  {
    "text": "they've you know been dealing with some of the issues of threads and they're like I just want something simpler so",
    "start": "1025439",
    "end": "1031959"
  },
  {
    "text": "it's it's been a lot of Investigation of uh rewriting existing projects with",
    "start": "1031959",
    "end": "1038079"
  },
  {
    "text": "Celluloid are you seeing an uptick and Adoption of these projects yeah or not",
    "start": "1038079",
    "end": "1044280"
  },
  {
    "text": "if not adoption then interest so uh you know just people who've",
    "start": "1044280",
    "end": "1049480"
  },
  {
    "text": "you they basically are to the point where they're like I need a framework because my multi-thread program is too",
    "start": "1049480",
    "end": "1054919"
  },
  {
    "text": "complex so uh definitely a lot of interest from uh that type of person how",
    "start": "1054919",
    "end": "1061280"
  },
  {
    "text": "much influence if any have you gotten from either node or twisted or some of the other Frameworks in the other",
    "start": "1061280",
    "end": "1068120"
  },
  {
    "text": "languages uh so definitely uh I've gotten a lot of uh inspiration out of",
    "start": "1068120",
    "end": "1074919"
  },
  {
    "text": "python uh there are a lot of similar projects to the this that I had uh sort",
    "start": "1074919",
    "end": "1080480"
  },
  {
    "text": "of looked at when I was originally developing rev actor uh some of those are like there's",
    "start": "1080480",
    "end": "1087000"
  },
  {
    "text": "one called uh chamelia uh another one called a eventlet so th those projects were",
    "start": "1087000",
    "end": "1094480"
  },
  {
    "text": "pretty influential um see beyond that I mean the main the",
    "start": "1094480",
    "end": "1099520"
  },
  {
    "text": "main influence of Celluloid in general is [Laughter] ear hey everyone just want to tell you",
    "start": "1099520",
    "end": "1106400"
  },
  {
    "text": "about a cool project that supports the change it's called hacker newsletter it's a Weekly Newsletter delivered every",
    "start": "1106400",
    "end": "1113200"
  },
  {
    "text": "Friday that shares some of the best articles on startups technology programming and more all links are",
    "start": "1113200",
    "end": "1119159"
  },
  {
    "text": "curated by hand from the ever popular Hacker News website and right now two",
    "start": "1119159",
    "end": "1125120"
  },
  {
    "text": "big events are happening the 100th issue of hacker newsletter and 10,000",
    "start": "1125120",
    "end": "1130520"
  },
  {
    "text": "subscribers so to celebrate 10 lucky subscribers who open the 100th issue",
    "start": "1130520",
    "end": "1136080"
  },
  {
    "text": "which comes out June 88th will win some very cool prizes for full details",
    "start": "1136080",
    "end": "1142039"
  },
  {
    "text": "subscribe today at hackernews letter.com shifting gears for a moment we had",
    "start": "1142039",
    "end": "1147320"
  },
  {
    "text": "planed to talk about Light Rail and from the time that we set up this interview to till today um there's been another",
    "start": "1147320",
    "end": "1153840"
  },
  {
    "text": "project that's been introduced which is the rails API um so we were talk talking before we",
    "start": "1153840",
    "end": "1159679"
  },
  {
    "text": "started recording and it sounds like you're going to uh kind of shut her down on light rail yeah so I mean the whole",
    "start": "1159679",
    "end": "1167240"
  },
  {
    "text": "goal of light rail was uh while I was working at strobe I was there with uh three rails core members uh youa cats",
    "start": "1167240",
    "end": "1176039"
  },
  {
    "text": "Carl lur and Jose valim and uh Carl and Jose had built uh a rails three stock",
    "start": "1176039",
    "end": "1184320"
  },
  {
    "text": "specifically for strobe which had been stripped down and uh stripped down the",
    "start": "1184320",
    "end": "1189960"
  },
  {
    "text": "action controller metal specifically and from there we just pulled in the stuff we needed so uh I I",
    "start": "1189960",
    "end": "1197840"
  },
  {
    "text": "thought I just put that out there and see if it's stuck and you know I I",
    "start": "1197840",
    "end": "1203280"
  },
  {
    "text": "talked to Jose like is this a good idea am I competing with rails and it turns",
    "start": "1203280",
    "end": "1208559"
  },
  {
    "text": "out I I was kind of competing with rails even though Jose uh gave me the go-ahead to release it there but you know it's",
    "start": "1208559",
    "end": "1216679"
  },
  {
    "text": "been a little bit of a debacle uh trying to get a standard way to build rails",
    "start": "1216679",
    "end": "1222360"
  },
  {
    "text": "apps that are only adjacent on apis but uh now I would say use light",
    "start": "1222360",
    "end": "1228679"
  },
  {
    "text": "rail checkout rails API instead from Santiago pastorino I should mention yeah",
    "start": "1228679",
    "end": "1234880"
  },
  {
    "text": "yeah it's on the blog uh any big differences between what they've done with rails API and what light rail is",
    "start": "1234880",
    "end": "1242600"
  },
  {
    "text": "was uh so rails API contains a lot of stuff that's an evolution of stuff that",
    "start": "1242600",
    "end": "1249679"
  },
  {
    "text": "Jose had originally developed uh that we shipped in light rail uh he had this thing called rappers in uh light rail",
    "start": "1249679",
    "end": "1258520"
  },
  {
    "text": "that actually has been pretty much completely Rewritten and replaced by this thing called active model",
    "start": "1258520",
    "end": "1264480"
  },
  {
    "text": "serializers but the basic idea is there's a canonical way to represent",
    "start": "1264480",
    "end": "1270320"
  },
  {
    "text": "Json uh so you know some like right now everybody makes their own Json apis and",
    "start": "1270320",
    "end": "1276679"
  },
  {
    "text": "they all look completely different so active model serializers was trying to give you way a standardize so everything",
    "start": "1276679",
    "end": "1284720"
  },
  {
    "text": "that sort of talks this specific Json format can all talk to each other and you don't have to write a bunch of",
    "start": "1284720",
    "end": "1290520"
  },
  {
    "text": "oneoff Json generators and Json clients is that set a level above the models or",
    "start": "1290520",
    "end": "1297600"
  },
  {
    "text": "they mixed into the models is it a presenter pattern how does that uh it's its own object that interacts with the",
    "start": "1297600",
    "end": "1303600"
  },
  {
    "text": "models but has uh some context beyond what the model does I think right now",
    "start": "1303600",
    "end": "1309799"
  },
  {
    "text": "the context is only the current user but it uh it it provides an abstraction for serializing Json and and",
    "start": "1309799",
    "end": "1318240"
  },
  {
    "text": "specifically stuff like you have a client who wants to pull in a resource but that has a bunch of associations and",
    "start": "1318240",
    "end": "1324799"
  },
  {
    "text": "you want to grab those all in a single request it uh it gives you an abstract way to do that that's a common use case",
    "start": "1324799",
    "end": "1332039"
  },
  {
    "text": "I think that's a lot a lot of times where a lot of these projects in this space kind of fall down for me is they assume that you got one representation",
    "start": "1332039",
    "end": "1339080"
  },
  {
    "text": "of this particular resource throughout your entire API and a lot of times there's little nuggets that you want to",
    "start": "1339080",
    "end": "1345440"
  },
  {
    "text": "share in this context that you want a fuller you know representation in another context yeah I've been using jbuilder",
    "start": "1345440",
    "end": "1352159"
  },
  {
    "text": "which is the hh's project U recently and I've liked it for that reason you kind",
    "start": "1352159",
    "end": "1357600"
  },
  {
    "text": "of handcraft and roll your own your own jaceon in that regard and it supports partials and and",
    "start": "1357600",
    "end": "1365400"
  },
  {
    "text": "Views terrible name but neat project I I mean I think that's kind of the the",
    "start": "1365400",
    "end": "1371279"
  },
  {
    "text": "underlying philosophical debate is like is a serializer closer to a view or is",
    "start": "1371279",
    "end": "1377000"
  },
  {
    "text": "it actually some some higher level abstraction that's completely",
    "start": "1377000",
    "end": "1382400"
  },
  {
    "text": "different there's a lot of room for um I guess implementation details when you",
    "start": "1382400",
    "end": "1387720"
  },
  {
    "text": "come to build an API in rails I know that the rails way is to really support",
    "start": "1387720",
    "end": "1393559"
  },
  {
    "text": "bare array apis and it seems like in inevitably you want some sort of wrapper envelope or something or some sort of",
    "start": "1393559",
    "end": "1400080"
  },
  {
    "text": "response object where the actual return value is hanging off of that so that you",
    "start": "1400080",
    "end": "1406120"
  },
  {
    "text": "can see total number of Records imp pagination info and some other things that just unless you stuff those into headers that are just difficult if you",
    "start": "1406120",
    "end": "1412640"
  },
  {
    "text": "return bare API arrays yeah I mean so there's actually",
    "start": "1412640",
    "end": "1417880"
  },
  {
    "text": "some security concerns around bar apis or bar arrays I mean because uh arrays",
    "start": "1417880",
    "end": "1425000"
  },
  {
    "text": "in JavaScript map onto objects so you can redefine things that uh arrays do and",
    "start": "1425000",
    "end": "1431279"
  },
  {
    "text": "potentially malicious script can get access to that data that way so uh bar",
    "start": "1431279",
    "end": "1437720"
  },
  {
    "text": "is in general are bad but uh the the real advantage of something like octom",
    "start": "1437720",
    "end": "1444039"
  },
  {
    "text": "model serializers I think is uh it handles relational data so if you when I",
    "start": "1444039",
    "end": "1450919"
  },
  {
    "text": "was talking about including other resources you know there's a bunch of ways to do that right you could sort of",
    "start": "1450919",
    "end": "1456559"
  },
  {
    "text": "Nest the resources you want inside of uh the one you retrieved and that's bad",
    "start": "1456559",
    "end": "1462600"
  },
  {
    "text": "because you could end up nesting it in several places and then the question",
    "start": "1462600",
    "end": "1467880"
  },
  {
    "text": "comes which of these uh which of these is the canonical one right if you have three copies of the same resource inside",
    "start": "1467880",
    "end": "1474919"
  },
  {
    "text": "your Json so uh actim model serializers flattens that all out and then uses IDs",
    "start": "1474919",
    "end": "1481960"
  },
  {
    "text": "uh as a way to associate uh you know the parent data to its",
    "start": "1481960",
    "end": "1487120"
  },
  {
    "text": "associations you know when I came to Ruby and rails I guess 2006 one of the",
    "start": "1487120",
    "end": "1492159"
  },
  {
    "text": "selling points was you know convention over uh configuration and it was just an easy on-ramp it seems like we're getting",
    "start": "1492159",
    "end": "1498520"
  },
  {
    "text": "a lot more complex with the problems we're trying to solve do you see any issues with just introducing so many different decisions for the new rails",
    "start": "1498520",
    "end": "1505720"
  },
  {
    "text": "developer that's coming to the stack uh I I think it's the other way around I think it makes it say the end",
    "start": "1505720",
    "end": "1513039"
  },
  {
    "text": "user has to do less because more of these decisions have already been made for them uh you know some people may not",
    "start": "1513039",
    "end": "1520440"
  },
  {
    "text": "like that some people may want to build their own Json serializers uh having done that by hand",
    "start": "1520440",
    "end": "1528240"
  },
  {
    "text": "like so many many times over the years uh I'd love for there to be just one",
    "start": "1528240",
    "end": "1534000"
  },
  {
    "text": "solution for that problem so do you consider yourself a polyglot uh I I do in that uh I",
    "start": "1534000",
    "end": "1542399"
  },
  {
    "text": "investigate a law languages I I like to learn uh little tricks from them but",
    "start": "1542399",
    "end": "1548919"
  },
  {
    "text": "really the only two languages I'm super comfortable with are uh arubian",
    "start": "1548919",
    "end": "1554320"
  },
  {
    "text": "earling so I I mean there there's not a lot of other languages I'd be really",
    "start": "1554320",
    "end": "1560000"
  },
  {
    "text": "confident in building like a large project in right now so a lot of times I'll ask folks what features of",
    "start": "1560000",
    "end": "1565760"
  },
  {
    "text": "languages would they want to steal and bring into their favorite language and you have gone down that path with",
    "start": "1565760",
    "end": "1571240"
  },
  {
    "text": "earling if actually you know in more than one uh way try to to fix that",
    "start": "1571240",
    "end": "1577120"
  },
  {
    "text": "problem any other features some any other languages you've used other than the concurrency problems that you'd like",
    "start": "1577120",
    "end": "1582960"
  },
  {
    "text": "to solve in Ruby uh so the two big ones I've seen kind of getting uh a little",
    "start": "1582960",
    "end": "1589080"
  },
  {
    "text": "bit more attention lately are object capability systems so the the idea of uh a",
    "start": "1589080",
    "end": "1597120"
  },
  {
    "text": "capability system is you can have complete control over what objects in",
    "start": "1597120",
    "end": "1603039"
  },
  {
    "text": "the system another object can access uh so this this is sort of an outgrowth of the actor model itself",
    "start": "1603039",
    "end": "1610039"
  },
  {
    "text": "actually so uh you can introduce an object to another object basically as",
    "start": "1610039",
    "end": "1615840"
  },
  {
    "text": "soon as you do that object can access the other object and uh where this is a",
    "start": "1615840",
    "end": "1620919"
  },
  {
    "text": "huge concern right now is in the browser because we're trying to do mashups right we're trying to pull in third party code",
    "start": "1620919",
    "end": "1627840"
  },
  {
    "text": "M but right now uh that code can basically do whatever it wants it can go",
    "start": "1627840",
    "end": "1633640"
  },
  {
    "text": "knots on the page it can read anything in the Dom it can transmit stuff back to",
    "start": "1633640",
    "end": "1638880"
  },
  {
    "text": "whatever server it wants via like a script tag or image tags or anything",
    "start": "1638880",
    "end": "1643960"
  },
  {
    "text": "like that right so uh the situation there is kind of out of control and there's a lot of people at uh ecma",
    "start": "1643960",
    "end": "1650960"
  },
  {
    "text": "trying to sort that out right now uh there's actually a language called e which nobody's ever heard of",
    "start": "1650960",
    "end": "1658279"
  },
  {
    "text": "but uh it it was that's got to be hard to Google yeah uh but uh it was built on",
    "start": "1658279",
    "end": "1664799"
  },
  {
    "text": "uh object capability systems and I I think those are pretty interesting um",
    "start": "1664799",
    "end": "1670000"
  },
  {
    "text": "the the other thing I really like uh comes out of this framework called killum on Java that's this idea of",
    "start": "1670000",
    "end": "1677679"
  },
  {
    "text": "linear ownership transfers so uh right now when you write a multi-thread",
    "start": "1677679",
    "end": "1682760"
  },
  {
    "text": "program a mutable State language any thread can just trash that state right",
    "start": "1682760",
    "end": "1688279"
  },
  {
    "text": "like any thread that has the handle of the object can do whatever it wants uh an ownership transfer systems or a way",
    "start": "1688279",
    "end": "1695039"
  },
  {
    "text": "to prevent that by handing off uh ownership of a particular object to",
    "start": "1695039",
    "end": "1701080"
  },
  {
    "text": "another thread so you can go I'm done with this object here you go and if you try to use",
    "start": "1701080",
    "end": "1707760"
  },
  {
    "text": "that handle again from the original thread it raises an exception so I I think that's a good way",
    "start": "1707760",
    "end": "1714840"
  },
  {
    "text": "to build uh safe multi-thread programs even though you have mutable State you",
    "start": "1714840",
    "end": "1720720"
  },
  {
    "text": "mentioned a few patterns there seems to be the scale between developer and then programmer and then computer scientist",
    "start": "1720720",
    "end": "1726960"
  },
  {
    "text": "um how how fluent does a developer coming to the rail stack or Ruby stack",
    "start": "1726960",
    "end": "1732120"
  },
  {
    "text": "nowadays have to be in these patterns or how much of them are just baked into the tools they use uh I i' still like to say",
    "start": "1732120",
    "end": "1739399"
  },
  {
    "text": "onboarding and rails is fairly easy once you get over the uh hurdle of installing",
    "start": "1739399",
    "end": "1745279"
  },
  {
    "text": "rails especially on a Mac but uh you know I I think really uh there there's",
    "start": "1745279",
    "end": "1752519"
  },
  {
    "text": "not a whole lot of background you need to get started in rails right now I",
    "start": "1752519",
    "end": "1758279"
  },
  {
    "text": "think they've done a really good job keeping the API uh clean and easy to use",
    "start": "1758279",
    "end": "1764679"
  },
  {
    "text": "so I I wouldn't say you have to be a computer scientist to use rails there seems to be an uptick though and",
    "start": "1764679",
    "end": "1771159"
  },
  {
    "text": "interest I guess in these patterns in the Ruby Community I'm hearing a lot more about DCI and some other um",
    "start": "1771159",
    "end": "1777679"
  },
  {
    "text": "patterns that keep rearing their head every couple of weeks do you have a opinion on DCI uh I I I have a fairly",
    "start": "1777679",
    "end": "1785240"
  },
  {
    "text": "negative opinion of DCI itself uh if you actually read the description it cannot",
    "start": "1785240",
    "end": "1791080"
  },
  {
    "text": "be implemented in the ways that uh rubius uh what they're calling DCI uh",
    "start": "1791080",
    "end": "1797519"
  },
  {
    "text": "you know they they explicitly say it can't be implemented in any of those ways uh so the first is through a mix in",
    "start": "1797519",
    "end": "1804799"
  },
  {
    "text": "a runtime basically right like you have a module you extend on an object uh so that one's bad because it",
    "start": "1804799",
    "end": "1812440"
  },
  {
    "text": "blows the method cache uh so there's another way to implement it which is",
    "start": "1812440",
    "end": "1818440"
  },
  {
    "text": "through delegation if you actually read the DCI paper they say you cannot use either of",
    "start": "1818440",
    "end": "1824039"
  },
  {
    "text": "those to implement DCI so I kind of confused as to what DCI",
    "start": "1824039",
    "end": "1829440"
  },
  {
    "text": "actually is if it isn't either of those things right how many of these patterns do you think have Affinity to the",
    "start": "1829440",
    "end": "1835320"
  },
  {
    "text": "language they were originally you know thought up in I guess like a better",
    "start": "1835320",
    "end": "1840519"
  },
  {
    "text": "phrase uh I I think Ruby can handle most object-oriented programming patterns uh",
    "start": "1840519",
    "end": "1847559"
  },
  {
    "text": "so I mean it kind of depends the reason I asked that a lot of times when I'm in JavaScript circles I see rubius that are",
    "start": "1847559",
    "end": "1854080"
  },
  {
    "text": "getting into node try to you know p a lot of the the module behavior that we",
    "start": "1854080",
    "end": "1859320"
  },
  {
    "text": "take for granted and Ruby into JavaScript and just you know start pulling their out because javascript's fundamentally different language yeah",
    "start": "1859320",
    "end": "1866039"
  },
  {
    "text": "yeah um I mean so you could ask H do about that right C's actually done a",
    "start": "1866039",
    "end": "1872440"
  },
  {
    "text": "full mixing system inside of emberjs which has its own object model thoughts",
    "start": "1872440",
    "end": "1878519"
  },
  {
    "text": "on hyper media apis uh I definitely like not having to construct URLs if that's really the only",
    "start": "1878519",
    "end": "1887240"
  },
  {
    "text": "thing hyper media gets you I guess that's a win we need to do a show on this I'm uh you I'm still kind of on the",
    "start": "1887240",
    "end": "1893159"
  },
  {
    "text": "fence myself I I like the promise I mean everybody's got this dream of pointing you know some sort of code to a root URL",
    "start": "1893159",
    "end": "1900519"
  },
  {
    "text": "and just have this wrapper organically unfold um what troubles me about a lot",
    "start": "1900519",
    "end": "1906039"
  },
  {
    "text": "of the things that I'm reading is just the lack of uh type on some of the returns and the folks that are building",
    "start": "1906039",
    "end": "1912840"
  },
  {
    "text": "out hyperdia apis will talk about it's just MIM types right um a lot of their examples are HTML and XML which are not",
    "start": "1912840",
    "end": "1919559"
  },
  {
    "text": "typed and then as you know just a Jo blow Ruby rapper developer that I am you",
    "start": "1919559",
    "end": "1926120"
  },
  {
    "text": "know there's things we take for granted and that Jason has just made like a dial",
    "start": "1926120",
    "end": "1931440"
  },
  {
    "text": "tone we don't even think about it right if I have to sit there and construct you know objects for every mind type I'm",
    "start": "1931440",
    "end": "1937120"
  },
  {
    "text": "going to consume I'd go crazy yeah I mean that's where you get into stuff like soaped code generation",
    "start": "1937120",
    "end": "1944320"
  },
  {
    "text": "and that kind of thing so I you know I mean perhaps it could be done run time perhaps you could uh point something at",
    "start": "1944320",
    "end": "1951120"
  },
  {
    "text": "an API and have it meta program all that stuff for you I'm not really sure uh you",
    "start": "1951120",
    "end": "1956240"
  },
  {
    "text": "know I I'm kind of on the uh I'm on the uh distributed object side of that debate right like you know there's all",
    "start": "1956240",
    "end": "1963760"
  },
  {
    "text": "this stuff that requires a lot of standardization if we're building HTTP apis which just goes away if you're",
    "start": "1963760",
    "end": "1969880"
  },
  {
    "text": "using distributed objects I should say I'm quite ignorant on the subject so far I'm learning more",
    "start": "1969880",
    "end": "1976039"
  },
  {
    "text": "but uh we need to do a show with Micah mson and maybe Steve kabnick our contributor here on the change log he's",
    "start": "1976039",
    "end": "1982440"
  },
  {
    "text": "got a book coming out on hyper media apis just to talk about the subject seems to be really hot but also kind of",
    "start": "1982440",
    "end": "1989320"
  },
  {
    "text": "it's one of those things where you know we have uh if you in JavaScript circles",
    "start": "1989320",
    "end": "1994360"
  },
  {
    "text": "uh if you want to end a debate you just you know start screaming crockford right and if you're talking about Big Data you",
    "start": "1994360",
    "end": "2000679"
  },
  {
    "text": "you'll say you know Dynamo and verer wuggles right but if it's HTTP and rest",
    "start": "2000679",
    "end": "2006279"
  },
  {
    "text": "now it seems like people just scream Fielding nobody really understands that paper but yet we all claim this is what",
    "start": "2006279",
    "end": "2013480"
  },
  {
    "text": "Fielding would have wanted so I mean I think we have the problem solved fairly",
    "start": "2013480",
    "end": "2018880"
  },
  {
    "text": "well it's all just kind of bike shedding around these little minor issues I guess my my big thing is we're we're still",
    "start": "2018880",
    "end": "2025760"
  },
  {
    "text": "trying to embrace rest yeah yeah and I'm sett you know I'm happy when I stumble",
    "start": "2025760",
    "end": "2031200"
  },
  {
    "text": "across a rest dish API um as long as they're not wrapping you clearly wrapping every database table you know",
    "start": "2031200",
    "end": "2039200"
  },
  {
    "text": "as a as a rest uh endpoint or call that's fine um as long as I don't have to deal with",
    "start": "2039200",
    "end": "2047080"
  },
  {
    "text": "a schema or document type definition I'm I'm cool with it too but like we're",
    "start": "2047080",
    "end": "2052440"
  },
  {
    "text": "raising the bar a bit on people that are still trying to get their heads around uh retish apis yeah",
    "start": "2052440",
    "end": "2059919"
  },
  {
    "text": "yeah so when you're not hacking on uh Celluloid or Dell or some of these other",
    "start": "2059919",
    "end": "2065480"
  },
  {
    "text": "projects what's got you excited as far as open source uh so there's a project I've been",
    "start": "2065480",
    "end": "2072079"
  },
  {
    "text": "contributing to uh in Python called uh Tahoe uh the least Authority file system",
    "start": "2072079",
    "end": "2080158"
  },
  {
    "text": "uh I I just redesigned uh their landing page there because it's kind of ugly but",
    "start": "2080159",
    "end": "2086398"
  },
  {
    "text": "um this is a really neat Tool uh so I mentioned the cryptosphere earlier uh",
    "start": "2086399",
    "end": "2092118"
  },
  {
    "text": "Taho is kind of the inspiration for that but um it's a great tool for uh if you",
    "start": "2092119",
    "end": "2097800"
  },
  {
    "text": "want to run a uh Cooperative backup system with your friends if you have a bunch of people who have cable modems or",
    "start": "2097800",
    "end": "2105079"
  },
  {
    "text": "run servers or whatever you can kind of just install this on all those computers",
    "start": "2105079",
    "end": "2110720"
  },
  {
    "text": "and so long as the bandwidth and storage is more or less free to you then you get",
    "start": "2110720",
    "end": "2116079"
  },
  {
    "text": "uh free collaborative backups with this and you can also use it to share data so uh I I've been really enjoying",
    "start": "2116079",
    "end": "2123720"
  },
  {
    "text": "that um I I'm definitely a big fan of Travis CI I just got to hang out with",
    "start": "2123720",
    "end": "2130040"
  },
  {
    "text": "all those guys at rails comp uh except for Matias but I finally got a invite to",
    "start": "2130040",
    "end": "2136760"
  },
  {
    "text": "the private um version of that it's quite well done oh yeah",
    "start": "2136760",
    "end": "2143440"
  },
  {
    "text": "nice I I have not seen it myself yet but what about your text editor uh so I I use a few different",
    "start": "2143440",
    "end": "2151200"
  },
  {
    "text": "ones um I I still use text me as my primary editor uh",
    "start": "2151200",
    "end": "2157319"
  },
  {
    "text": "I've been sort of investigating macvim so I've known how to use VI since",
    "start": "2157319",
    "end": "2163480"
  },
  {
    "text": "I was like 13 or something but uh you know I don't really like using it as my",
    "start": "2163480",
    "end": "2169440"
  },
  {
    "text": "day-to-day editor I guess uh so I I'm a Mac User right in no 10 is",
    "start": "2169440",
    "end": "2175880"
  },
  {
    "text": "these sort of ubiquitous uh emac style key bindings throughout the whole OS so if I go to switch to Vim I have to",
    "start": "2175880",
    "end": "2183720"
  },
  {
    "text": "like sort of contact shift to Vim mode and stuff of uh just using the emac key",
    "start": "2183720",
    "end": "2189839"
  },
  {
    "text": "bindings uh I played around with emac quite a bit when I was learning closure and uh it seems pretty cool but",
    "start": "2189839",
    "end": "2197839"
  },
  {
    "text": "I just couldn't get over the learning curve and you know I wasn't really uh",
    "start": "2197839",
    "end": "2202960"
  },
  {
    "text": "sure if I did I would really actually enjoy it so uh yeah for for now I generally kind",
    "start": "2202960",
    "end": "2210319"
  },
  {
    "text": "of STI with textmate and I use uh Vim on the command line for sort of short oneoff type edits",
    "start": "2210319",
    "end": "2217240"
  },
  {
    "text": "what was your thoughts on closure uh I really like closure I think it solves a lot of the problems that",
    "start": "2217240",
    "end": "2223400"
  },
  {
    "text": "made lisp in practical in the past uh you know just being on the jvm",
    "start": "2223400",
    "end": "2229280"
  },
  {
    "text": "they can tap into the whole ecosystem of jvm libraries and they finally well they",
    "start": "2229280",
    "end": "2235280"
  },
  {
    "text": "being rich hickey uh finally added Syntax for some other data structures",
    "start": "2235280",
    "end": "2240400"
  },
  {
    "text": "besides list right so it has uh maps and vectors that are really handy uh as far as trying to build",
    "start": "2240400",
    "end": "2248079"
  },
  {
    "text": "something big in closure I I'm just not sure I would really prefer doing it",
    "start": "2248079",
    "end": "2253680"
  },
  {
    "text": "inclosure to Ruby like uh in terms of everything like",
    "start": "2253680",
    "end": "2259800"
  },
  {
    "text": "maintainability and my ability to sort of comprehend the code base I think it's",
    "start": "2259800",
    "end": "2265200"
  },
  {
    "text": "just easier to do in Ruby although I think uh probably the result if I wrote enclosure would be a lot faster in a",
    "start": "2265200",
    "end": "2272720"
  },
  {
    "text": "better performance do you have a programming hero uh yeah it's a tough question I guess I have a few of them uh",
    "start": "2272720",
    "end": "2280280"
  },
  {
    "text": "I'm a big fan of the earling guys I I've never met Joe Armstrong but met the uh",
    "start": "2280280",
    "end": "2285760"
  },
  {
    "text": "co-creator of earling uh Robert vering and uh they're both pretty cool guys I",
    "start": "2285760",
    "end": "2291920"
  },
  {
    "text": "think they were really way ahead of their time with earling and uh a lot of this stuff you",
    "start": "2291920",
    "end": "2297680"
  },
  {
    "text": "know it's becoming relevant now that we have uh these massively multi-core computers and really fast internet and",
    "start": "2297680",
    "end": "2305200"
  },
  {
    "text": "everybody's building distributed programs now I ask all three of those questions now because the last three",
    "start": "2305200",
    "end": "2311119"
  },
  {
    "text": "episodes see I always assume that nobody's ever heard this show and so we kind of end uh the episodes and those",
    "start": "2311119",
    "end": "2318040"
  },
  {
    "text": "questions the last three episodes we've hung up and someone's pasted in our chat later hey dude you didn't ask me X",
    "start": "2318040",
    "end": "2324400"
  },
  {
    "text": "question and yeah I still had my answer ready so all right nice chatting with you today Tony thanks for giving us the",
    "start": "2324400",
    "end": "2330760"
  },
  {
    "text": "lowdown on Celluloid and the other projects appreciate it yeah cool",
    "start": "2330760",
    "end": "2337450"
  },
  {
    "text": "[Music] [Applause] [Music]",
    "start": "2337450",
    "end": "2346260"
  },
  {
    "text": "[Applause] [Music] see it in my eyes so could",
    "start": "2346260",
    "end": "2356880"
  },
  {
    "text": "I",
    "start": "2358440",
    "end": "2361440"
  },
  {
    "text": "myself as",
    "start": "2365440",
    "end": "2372920"
  }
]