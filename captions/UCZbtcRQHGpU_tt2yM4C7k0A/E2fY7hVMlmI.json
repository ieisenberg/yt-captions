[
  {
    "text": "bandwidth for JS party is provided by fastly learn more at fastly.com",
    "start": "240",
    "end": "7360"
  },
  {
    "text": "[Music] welcome to JS party a weekly celebration",
    "start": "7360",
    "end": "12920"
  },
  {
    "text": "of JavaScript and the web tune in live on Fridays at 3 pm us Eastern at changel",
    "start": "12920",
    "end": "18439"
  },
  {
    "text": "law.com join the community and slack with us in real time head to changel law.com community follow us on Twitter",
    "start": "18439",
    "end": "25320"
  },
  {
    "text": "or @js party FM and now on to the show hey everybody Welcome to JS party we're",
    "start": "25320",
    "end": "30920"
  },
  {
    "text": "to party every week with JavaScript we're back I'm Michael Rogers I'm Rachel",
    "start": "30920",
    "end": "36120"
  },
  {
    "text": "white and I'm Alan Samson yep and uh Rachel and I are back",
    "start": "36120",
    "end": "41960"
  },
  {
    "text": "from uh from a nice little vacation in Europe um if you uh if you didn't like",
    "start": "41960",
    "end": "47320"
  },
  {
    "text": "check out uh the episode where yay query took over definitely go back and listen to that one that one was so good that um",
    "start": "47320",
    "end": "54800"
  },
  {
    "text": "Rachel and I were actually fired I got a text uh from mam stovak well while I was in here but just said you're fired um",
    "start": "54800",
    "end": "61800"
  },
  {
    "text": "and then it turned out that they can't do it uh they can't schedule it for another 9 months so we're we're filling",
    "start": "61800",
    "end": "69159"
  },
  {
    "text": "in now for them until uh until they can come back around all right let's jump",
    "start": "69159",
    "end": "74640"
  },
  {
    "text": "into it okay so we're GNA talk about actually using uh ESX es es6 and es7 uh",
    "start": "74640",
    "end": "82920"
  },
  {
    "text": "features new language features with and without compilers and some of the trade-offs and stuff like that so years",
    "start": "82920",
    "end": "89159"
  },
  {
    "text": "now is it I don't I I think that we should just",
    "start": "89159",
    "end": "94799"
  },
  {
    "text": "talk about specific features rather than what bucket they land in because they actually get implemented sort of out of order anyway right",
    "start": "94799",
    "end": "101240"
  },
  {
    "text": "so Rachel what what features are you using that you that you've been enjoying from the the new language stuff I'm",
    "start": "101240",
    "end": "108640"
  },
  {
    "text": "not you're not any no I mean the only thing that I've I've used really because",
    "start": "108640",
    "end": "115439"
  },
  {
    "text": "like since I don't write production code nobody tells me what to do so I kind of just",
    "start": "115439",
    "end": "120680"
  },
  {
    "text": "do what I've always done so like I've I've worked with some things that have",
    "start": "120680",
    "end": "126039"
  },
  {
    "text": "like the new variable naming and stuff like that but that's really all that",
    "start": "126039",
    "end": "131480"
  },
  {
    "text": "I've dipped my toes in and what what is the other thing like let is in there I don't know enlighten me let's been there",
    "start": "131480",
    "end": "138440"
  },
  {
    "text": "forever I think like the big ones for the big ones for me have been uh Arrow",
    "start": "138440",
    "end": "144000"
  },
  {
    "text": "functions template literals yeah the arrow functions are super cool and I totally get that it's like the the it",
    "start": "144000",
    "end": "150160"
  },
  {
    "text": "helps with like readability so much but like I I'm still stuck in that mindset",
    "start": "150160",
    "end": "155280"
  },
  {
    "text": "of like forgetting to use it and I feel like if I'm going to incorporate all of the new type of things I'm going to have",
    "start": "155280",
    "end": "161319"
  },
  {
    "text": "to like enforce it to strict in my like code linting but other than that like",
    "start": "161319",
    "end": "167000"
  },
  {
    "text": "I'm not actively like going out of my way to use it because nobody tells me what to do when I write",
    "start": "167000",
    "end": "173120"
  },
  {
    "text": "code I I I so let me jump in I think I",
    "start": "173120",
    "end": "178720"
  },
  {
    "text": "disagree that um it it makes code more readable I often",
    "start": "178720",
    "end": "183760"
  },
  {
    "text": "am looking at like typed and arrow function uh JavaScript so like there are",
    "start": "183760",
    "end": "191000"
  },
  {
    "text": "types in there and then there are Arrow functions and people are use like implicit returns and stuff and I look at",
    "start": "191000",
    "end": "196120"
  },
  {
    "text": "it and it does not look recognizable to me like I'm smart",
    "start": "196120",
    "end": "201360"
  },
  {
    "text": "enough to like figure it out or whatever but I can no longer like scan it the same way I don't know it's just a skill",
    "start": "201360",
    "end": "206760"
  },
  {
    "text": "that that you I'm lucky enough that a lot of the stuff that I work on is fairly small so when it's much smaller",
    "start": "206760",
    "end": "213200"
  },
  {
    "text": "scale I think it's readable but I could totally get if you're looking at like larger systems where you would like be",
    "start": "213200",
    "end": "219159"
  },
  {
    "text": "scanning through a lot of lines it would be kind of hard to pattern match yeah certainly like encourages uh",
    "start": "219159",
    "end": "227040"
  },
  {
    "text": "unnamed functions for for one thing right yeah that's true I do like I don't",
    "start": "227040",
    "end": "232640"
  },
  {
    "text": "like Anonymous functions I like to try and name everything if I can I don't know I",
    "start": "232640",
    "end": "237840"
  },
  {
    "text": "mean I they gotten so small and so kind of easy to use that I'm able to use them",
    "start": "237840",
    "end": "244280"
  },
  {
    "text": "in a ways that you you wouldn't use functions before because it would just be two verbose right there there's a",
    "start": "244280",
    "end": "250680"
  },
  {
    "text": "couple um like libraries that have written for um like templatized uh HTML",
    "start": "250680",
    "end": "257079"
  },
  {
    "text": "and using functions inside of a template lit Ral and stuff like that like that would have just been T verbose",
    "start": "257079",
    "end": "262759"
  },
  {
    "text": "beforehand right sure um and and I think I'm I mean I was certainly one of those people like I mean you you can dig up me",
    "start": "262759",
    "end": "269759"
  },
  {
    "text": "saying this that like the problem with arrow functions is that it's just a bunch of extra semantics that you have",
    "start": "269759",
    "end": "274880"
  },
  {
    "text": "to keep in your head which is true like it it is um and like to your point Alex",
    "start": "274880",
    "end": "280280"
  },
  {
    "text": "it's certainly not as easily readable as the word function it's pretty clear what that is this arrow thing like could be",
    "start": "280280",
    "end": "286840"
  },
  {
    "text": "anything right and so it is more semantics you have to keep in your head like like any other language rule um but",
    "start": "286840",
    "end": "294240"
  },
  {
    "text": "the nettic the semantics so just to sorry to interrupt the semantics are are are may be easier because it's just like",
    "start": "294240",
    "end": "302000"
  },
  {
    "text": "it's um we talked about this a little bit while gone um it is uh kind of uh",
    "start": "302000",
    "end": "308840"
  },
  {
    "text": "just literal scope uh of of the variables there's no bound um it's just",
    "start": "308840",
    "end": "314639"
  },
  {
    "text": "lexical scope of a variable so you can reason about what a variable or what",
    "start": "314639",
    "end": "320160"
  },
  {
    "text": "this is much more simply because it's impossible for it to be anything but",
    "start": "320160",
    "end": "325680"
  },
  {
    "text": "lexical lexically bound so to some degree like you can forget about some",
    "start": "325680",
    "end": "332039"
  },
  {
    "text": "things that functions add and then to another degree like it's hard to scan",
    "start": "332039",
    "end": "338160"
  },
  {
    "text": "maybe especially with implicit returns yeah yeah yeah I was just going to say whatever sort of complexity they they",
    "start": "338160",
    "end": "345160"
  },
  {
    "text": "take take out of the pool Pie by uh by not having this um they probably add it with the implicit return stuff but it so",
    "start": "345160",
    "end": "352199"
  },
  {
    "text": "I'm I I don't know if you saw this or not but there was a uh a post that somebody did where uh he was essentially",
    "start": "352199",
    "end": "358680"
  },
  {
    "text": "saying that his his style guide now is that he no longer uses the function uh keyword ever so he doesn't use old style",
    "start": "358680",
    "end": "364960"
  },
  {
    "text": "functions anywhere um everything is Arrow functions um and classes um have",
    "start": "364960",
    "end": "371599"
  },
  {
    "text": "like a different new function Syntax for properties and so he uses those when when you would have traditionally used",
    "start": "371599",
    "end": "377120"
  },
  {
    "text": "um functions for any kind of prototypal stuff or or referencing this um I'm I'm curious is this just for like personal",
    "start": "377120",
    "end": "384720"
  },
  {
    "text": "projects or is this like in practice in his job or you do not know think both I",
    "start": "384720",
    "end": "390479"
  },
  {
    "text": "think both I mean he's certainly advocating it to other people which I assume you know would also be for production use but I I think that the",
    "start": "390479",
    "end": "397680"
  },
  {
    "text": "argument that this actually can reduce complexity if you stop using older syntax is is one that comes up a lot",
    "start": "397680",
    "end": "403840"
  },
  {
    "text": "like people talk about yeah you know like like eventually the language does get simpler if we can stop using some of",
    "start": "403840",
    "end": "408919"
  },
  {
    "text": "these older forms um and this is this is certainly you know somebody advocating for that so the the primary Rift I had",
    "start": "408919",
    "end": "416280"
  },
  {
    "text": "with the person at my company who who felt the same was that I was thinking of functions as the default and arrows as",
    "start": "416280",
    "end": "422960"
  },
  {
    "text": "the sugar and he was thinking of arrows as the default and functions as the sugar because arrows are other than in",
    "start": "422960",
    "end": "430960"
  },
  {
    "text": "implicit returns uh are simpler in the sense that they can't be bound and so he's like well why would we use the more",
    "start": "430960",
    "end": "438520"
  },
  {
    "text": "complex one that can have all these weird binding situations instead of using the default Arrow functions which",
    "start": "438520",
    "end": "444280"
  },
  {
    "text": "are lexically bound and so you always know and so like for me an Unbound",
    "start": "444280",
    "end": "450319"
  },
  {
    "text": "function keyword is fine like an Unbound function is fine because like I'm just",
    "start": "450319",
    "end": "455520"
  },
  {
    "text": "not using this inside of it but for him it's like why would you use the thing that could be bound when you could just",
    "start": "455520",
    "end": "460639"
  },
  {
    "text": "use the thing that's always lexically bound and and so it's an interesting like perspective of once you kind of",
    "start": "460639",
    "end": "467319"
  },
  {
    "text": "switch over like seeing the arrows as the default and the function as like",
    "start": "467319",
    "end": "472520"
  },
  {
    "text": "this thing that can be different the problem is that so so even uh I forgot who you said does this but uh the the",
    "start": "472520",
    "end": "480039"
  },
  {
    "text": "class um functions if you just use the syntax inside classes where you do you",
    "start": "480039",
    "end": "486039"
  },
  {
    "text": "know a class and then you just tab inside the the blocks and you do function name um that is not an arrow",
    "start": "486039",
    "end": "492680"
  },
  {
    "text": "function it's not lexically bound um you have to do function name equals open",
    "start": "492680",
    "end": "498319"
  },
  {
    "text": "paren uh Arrow function function in order to get electrically bound uh uh",
    "start": "498319",
    "end": "504280"
  },
  {
    "text": "function in there so it's actually like you kind of have to modify some of that syntax and then like if you decide okay",
    "start": "504280",
    "end": "510000"
  },
  {
    "text": "I'm always going to use that syntax like the Constructor inside of there can't be listed like that you have to do the",
    "start": "510000",
    "end": "515080"
  },
  {
    "text": "Constructor the old way and so it could be bound uh but you can't find Constructors and then like a whole bunch",
    "start": "515080",
    "end": "522039"
  },
  {
    "text": "of things like that get start getting weird well in in the case of classes though you you often do want to",
    "start": "522039",
    "end": "527360"
  },
  {
    "text": "reference this though like you have a use for that I think that what he was saying was that we we can take the function keyword out of it at least and",
    "start": "527360",
    "end": "533120"
  },
  {
    "text": "then we can not have this ambiguity yeah no so what I'm saying is that uh if you use aror functions the functions can't",
    "start": "533120",
    "end": "539480"
  },
  {
    "text": "be rebound um it's it's guaranteed to be lexically bound whereas if you use just",
    "start": "539480",
    "end": "545160"
  },
  {
    "text": "the class syntax it more mimics using the function keyword and then using this",
    "start": "545160",
    "end": "551160"
  },
  {
    "text": "will default to the right thing probably to to what you want but uh pulling it out like if you just use an instance fun",
    "start": "551160",
    "end": "558800"
  },
  {
    "text": "like kind of like a static function like this can change very quickly to window uh like all those types of problems",
    "start": "558800",
    "end": "564640"
  },
  {
    "text": "start to show up again it's just sugar for um you know uh prototype",
    "start": "564640",
    "end": "570040"
  },
  {
    "text": "properties on on an object so so there are still gotas if you use the class syntax like you could still go further",
    "start": "570040",
    "end": "576440"
  },
  {
    "text": "and say I still want to use Arrow syntax inside of my classes if that makes",
    "start": "576440",
    "end": "582120"
  },
  {
    "text": "sense yeah yeah I guess you you could take and I think if if you are going to",
    "start": "582120",
    "end": "587320"
  },
  {
    "text": "say we require Arrow functions everywhere they can be used you should also require them in classes to so",
    "start": "587320",
    "end": "594760"
  },
  {
    "text": "rather than saying like function name open pen arguments and then brackets",
    "start": "594760",
    "end": "599880"
  },
  {
    "text": "with the function you should say function name equals open pen uh fat",
    "start": "599880",
    "end": "606079"
  },
  {
    "text": "Arrow brackets um if that kind of kind of makes sense yeah yeah I I don't think that the that the point that any of",
    "start": "606079",
    "end": "612360"
  },
  {
    "text": "these people are trying to make though is to be Zealot about Arrow functions I think the point that they're making is that we can deprecate the use of the",
    "start": "612360",
    "end": "618839"
  },
  {
    "text": "function keyword and just rely on these new rules and then we get when we get out of a lot of like ambiguity if we're",
    "start": "618839",
    "end": "625399"
  },
  {
    "text": "just using the new rules around um around yeah classes and I think I",
    "start": "625399",
    "end": "630839"
  },
  {
    "text": "disagree on what those people at least the people I've talked to who are doing this aren't necessarily like they're not",
    "start": "630839",
    "end": "637399"
  },
  {
    "text": "doing it just because they think it looks better it's smaller or it's more streamlined or anything like that",
    "start": "637399",
    "end": "642480"
  },
  {
    "text": "they're explicitly doing it because of the lexically bound uh ambiguity like",
    "start": "642480",
    "end": "648399"
  },
  {
    "text": "problems go away and so you end up with a program that only has lexically B",
    "start": "648399",
    "end": "655160"
  },
  {
    "text": "bindable functions um and so it's important to do it everywhere even if the syntax was old like if",
    "start": "655160",
    "end": "661600"
  },
  {
    "text": "there's some way to use the old Stu the old function syntax and then just say oh this is lexic bound function like they",
    "start": "661600",
    "end": "668399"
  },
  {
    "text": "would still be cool with that it's not about the fat Arrow it's about the semantics of how the function kind of",
    "start": "668399",
    "end": "674360"
  },
  {
    "text": "exists and how it can change and what context it can run in and uh it's taking away the foot gun of this changing out",
    "start": "674360",
    "end": "681560"
  },
  {
    "text": "from under you I think is is the goal okay so transitioning a little bit",
    "start": "681560",
    "end": "688120"
  },
  {
    "text": "like we're talking about all these features and and I assume that we're talking about using them well actually",
    "start": "688120",
    "end": "693480"
  },
  {
    "text": "my assumption is we're talking about using them without a compiler and I think that may not be your assumption um",
    "start": "693480",
    "end": "699920"
  },
  {
    "text": "I'm wondering like so where can you where do you have to have a compiler down to es5 to use this stuff right now",
    "start": "699920",
    "end": "706000"
  },
  {
    "text": "like where like like are there iot devices that have older be that we have to worry about are there um like which",
    "start": "706000",
    "end": "714320"
  },
  {
    "text": "browsers like still don't support this kind of garbage I mean we're we're not supporting I6 anymore right like we're",
    "start": "714320",
    "end": "719920"
  },
  {
    "text": "done with that that doesn't I 10 11 get into some of the territory but still are",
    "start": "719920",
    "end": "726240"
  },
  {
    "text": "missing quite a bit I think the problem is that um and Babel's perfectly capable of",
    "start": "726240",
    "end": "732480"
  },
  {
    "text": "doing this it's just somewhat uninteresting to try to solve unless",
    "start": "732480",
    "end": "737519"
  },
  {
    "text": "there's a a a performance problem but if you think about your application there's",
    "start": "737519",
    "end": "742560"
  },
  {
    "text": "probably let's say you're using 10 new es star features um and one of them is",
    "start": "742560",
    "end": "750800"
  },
  {
    "text": "like object spreads which is like totally going to get in the language uh but isn't in any browsers or node or",
    "start": "750800",
    "end": "757760"
  },
  {
    "text": "anything like that it's it's just like an obvious thing that we're going to do and it's really useful uh to be able to",
    "start": "757760",
    "end": "763839"
  },
  {
    "text": "much like an argument spread or an array spread you can do the same thing into an object it kind of like finally solves",
    "start": "763839",
    "end": "769320"
  },
  {
    "text": "the uh jQuery extend uh thing uh so does object assign but the problem is that",
    "start": "769320",
    "end": "776920"
  },
  {
    "text": "you're already compiling with Babel at that point uh and so you're saying like well I want all these features in Babel",
    "start": "776920",
    "end": "783040"
  },
  {
    "text": "and you could just say well I just want object spreads and I know the rest will but at the point where you pull in a",
    "start": "783040",
    "end": "789279"
  },
  {
    "text": "compiler you're like well I might as well just go down to es5 uh and I think that's the common way it's just let me pull in all the everything that I know I",
    "start": "789279",
    "end": "796320"
  },
  {
    "text": "need to compile to um because I want to to just work everywhere and then people",
    "start": "796320",
    "end": "801920"
  },
  {
    "text": "don't think about it too much past there because there isn't too much of a hit uh for for many things this isn't my",
    "start": "801920",
    "end": "808600"
  },
  {
    "text": "thinking at all all though and like I don't I don't know if if Rachel feels similar to this but like I don't use a",
    "start": "808600",
    "end": "814000"
  },
  {
    "text": "compiler like ever um for like down to a different language and so like I I only use browsers that support this and like",
    "start": "814000",
    "end": "820320"
  },
  {
    "text": "if it's a feature that isn't widely available like I just don't use that feature same I don't yeah yeah I think",
    "start": "820320",
    "end": "826360"
  },
  {
    "text": "you guys are definitely the minority I don't I don't think like that seems a little nuts to me like I I really enjoy",
    "start": "826360",
    "end": "832800"
  },
  {
    "text": "like line numbers and like just like a lot of the Simplicity of not having it",
    "start": "832800",
    "end": "838279"
  },
  {
    "text": "well yes yes yes provided that you have all that tooled properly and and and it can be kind of a pain I I mean like look if you're going",
    "start": "838279",
    "end": "844240"
  },
  {
    "text": "to use Babel then you're already in this but or sorry if you're going to use like react you're already in this boat right",
    "start": "844240",
    "end": "849600"
  },
  {
    "text": "so there there's enough people like using Frameworks or other upper level tools where the compiler is just part of",
    "start": "849600",
    "end": "854839"
  },
  {
    "text": "that tool chain already but like I'm certainly not going to add Babble to my node project in order to use object",
    "start": "854839",
    "end": "861120"
  },
  {
    "text": "spread like that's not going to be that that's just like I don't understand that thinking and I don't think that a lot of people do that I think a lot of people",
    "start": "861120",
    "end": "868160"
  },
  {
    "text": "do that I think it's pretty common these days to just start your project writing in the new thing even if",
    "start": "868160",
    "end": "875360"
  },
  {
    "text": "it's compatible with like the latest browsers of the latest whatever and still pure node module your pure node",
    "start": "875360",
    "end": "881079"
  },
  {
    "text": "module you're you're going to like already have a compiler aity I think node is is a little bit less this way",
    "start": "881079",
    "end": "887759"
  },
  {
    "text": "because um because there are different Norms there um but I think even in those cases",
    "start": "887759",
    "end": "894720"
  },
  {
    "text": "it's somewhat common uh to see yeah sure like I wonder how many iot projects",
    "start": "894720",
    "end": "900560"
  },
  {
    "text": "Rachel has seen where they're compiling things with Babel not not many that's for",
    "start": "900560",
    "end": "907519"
  },
  {
    "text": "sure yeah I mean I I think iot projects",
    "start": "907519",
    "end": "912639"
  },
  {
    "text": "in the grand scheme of the amount of JavaScript that's being written are a small percentage and and that doesn't",
    "start": "912639",
    "end": "919360"
  },
  {
    "text": "make them unimportant or anything like that I'm just saying that that I think the average JavaScript developer these",
    "start": "919360",
    "end": "926199"
  },
  {
    "text": "days is working in a framework and those Frameworks somewhat already introduce enough compile steps to where it's just",
    "start": "926199",
    "end": "932759"
  },
  {
    "text": "a non-issue to to add this so if you're working in view or you're working in react or you're working in Ember you're",
    "start": "932759",
    "end": "938680"
  },
  {
    "text": "working in angular you're working in any of these things you have a babble like uh compiler already uh in your stack and",
    "start": "938680",
    "end": "946880"
  },
  {
    "text": "so adding object spreads is is just like a decision you can make or not so I feel",
    "start": "946880",
    "end": "952839"
  },
  {
    "text": "like the most of the features that I have used and interacted with would have been like things that we touched on",
    "start": "952839",
    "end": "958120"
  },
  {
    "text": "already you know onlet Arrow functions um some of the the way that they're doing class definitions and stuff like",
    "start": "958120",
    "end": "965319"
  },
  {
    "text": "that I guess this is about going to be the same thing that Michael was just about to ask are there any like features",
    "start": "965319",
    "end": "970880"
  },
  {
    "text": "that you aren't using like which ones do you too think are the ones that people aren't really like um you know fully",
    "start": "970880",
    "end": "977519"
  },
  {
    "text": "embracing or trying out yet uh I mean I guess there's two buckets there ones",
    "start": "977519",
    "end": "983720"
  },
  {
    "text": "that people aren't trying out yet because they're bad and ones that people aren't trying out yet because uh they",
    "start": "983720",
    "end": "989040"
  },
  {
    "text": "aren't fully aware of them or they aren't fully powerful or things like that I guess there things that go on",
    "start": "989040",
    "end": "995639"
  },
  {
    "text": "both buckets I mean a lot of the stuff we use in Babel and the stuff that we're compiling down to is stuff that isn't",
    "start": "995639",
    "end": "1002680"
  },
  {
    "text": "even finished getting through Emma and will change like modules is something that everyone uses and like a lot of the",
    "start": "1002680",
    "end": "1008839"
  },
  {
    "text": "semantics of how modules load like haven't been known for a really long",
    "start": "1008839",
    "end": "1014240"
  },
  {
    "text": "time and that's kind of the driving force behind the problem with getting proper modules into Javas into into node",
    "start": "1014240",
    "end": "1022720"
  },
  {
    "text": "uh specifically because we've been doing it slightly wrong for so long because we",
    "start": "1022720",
    "end": "1028079"
  },
  {
    "text": "kind of just wanted to compile ahead of time that now there's a clash in the semantics of how it should really work",
    "start": "1028079",
    "end": "1033880"
  },
  {
    "text": "and we're going to have to kind of work around that problem uh for a little while yeah I mean without getting into",
    "start": "1033880",
    "end": "1040079"
  },
  {
    "text": "the specifics there there's actually a particular point where the spec sort of implies but but does not define how",
    "start": "1040079",
    "end": "1046880"
  },
  {
    "text": "things are supposed to work and babble made a decision about how they work at one point um and we're not going to be",
    "start": "1046880",
    "end": "1053799"
  },
  {
    "text": "able to support that and noted in fact that spec committee said that we should not do that and go that route because of",
    "start": "1053799",
    "end": "1059919"
  },
  {
    "text": "some of the other trade-offs that it would have to make um so yeah there's just there's stuff that until there you",
    "start": "1059919",
    "end": "1065840"
  },
  {
    "text": "know that one's even out like that one is actually in the spec we just haven't had enough implementations to know what some of these like really really Nitty",
    "start": "1065840",
    "end": "1072880"
  },
  {
    "text": "Gritty details are um so yeah yeah I mean like you're you're you're by",
    "start": "1072880",
    "end": "1078880"
  },
  {
    "text": "definition kind of on the bleeding edge if you're using features that aren't even actually in the browser yet modules",
    "start": "1078880",
    "end": "1084600"
  },
  {
    "text": "are in the browser now though in one browser yeah pretty cool yeah so what what",
    "start": "1084600",
    "end": "1092760"
  },
  {
    "text": "features are you staying away from though like actually staying away from the ones that I don't",
    "start": "1092760",
    "end": "1098880"
  },
  {
    "text": "need I think proxies are a terrible idea and that nobody should use them they're just a giant performance",
    "start": "1098880",
    "end": "1105240"
  },
  {
    "text": "bottleneck were a really good idea for like a hot set it seemed like a really",
    "start": "1105240",
    "end": "1111039"
  },
  {
    "text": "solid solution to a thing that everyone was trying to solve at the time and then like we found different ways to we found",
    "start": "1111039",
    "end": "1118600"
  },
  {
    "text": "better ways to solve those user land problems and then proxies became this um thing that that made a lot less sense",
    "start": "1118600",
    "end": "1126039"
  },
  {
    "text": "namely like the get set type problems like the way that ember used to work",
    "start": "1126039",
    "end": "1131360"
  },
  {
    "text": "where you have to do doget and do set like there was a world where proxies in",
    "start": "1131360",
    "end": "1136440"
  },
  {
    "text": "the future could do more get Setter type stuff to where you could just say you know like my object. Fu equals 5 and",
    "start": "1136440",
    "end": "1145559"
  },
  {
    "text": "then that would be the same as saying my object uh set Fu five or whatever like",
    "start": "1145559",
    "end": "1152000"
  },
  {
    "text": "it would happen to do like it would need to do that because we need to run functions when things change in order to render uh but now with like virtual Doms",
    "start": "1152000",
    "end": "1159880"
  },
  {
    "text": "and and all that kind of stuff like the the community moved on to different techniques",
    "start": "1159880",
    "end": "1165520"
  },
  {
    "text": "for uh solving that problem that a little less magic um so I think proxies",
    "start": "1165520",
    "end": "1171880"
  },
  {
    "text": "kind of fell there are there are certainly like use cases but I think they're pretty pretty small generally if",
    "start": "1171880",
    "end": "1178080"
  },
  {
    "text": "you're using proxies you're hacking the crap out of a closed Library these days",
    "start": "1178080",
    "end": "1184400"
  },
  {
    "text": "yeah I remember similar features are in Python meta classes and the the guidance",
    "start": "1184400",
    "end": "1190120"
  },
  {
    "text": "for meta classes is don't use meta classes uh other other things I'm trying",
    "start": "1190120",
    "end": "1197159"
  },
  {
    "text": "to think they're definitely like proposals that I think it's it's less about I'll use anything that's kind of",
    "start": "1197159",
    "end": "1203960"
  },
  {
    "text": "in the language like they're pretty conservative I Think About by the time it gets in the language everyone's",
    "start": "1203960",
    "end": "1210600"
  },
  {
    "text": "already been using it for so long that it's not even that cool uh but there are",
    "start": "1210600",
    "end": "1216440"
  },
  {
    "text": "definitely things that are you know level two in the spec that uh I don't think are ever going to make it things",
    "start": "1216440",
    "end": "1222799"
  },
  {
    "text": "like uh you could turn on stuff for like immutable types or",
    "start": "1222799",
    "end": "1227840"
  },
  {
    "text": "even like uh one thing I don't use as decorators um I am skeptical that decorators are going to go the distance",
    "start": "1227840",
    "end": "1234880"
  },
  {
    "text": "and so I've been avoiding uh decorators I don't have any data I'm just waiting",
    "start": "1234880",
    "end": "1241360"
  },
  {
    "text": "till they're like more of a sure thing I guess um if that makes I used them when I was a python programmer and my general",
    "start": "1241360",
    "end": "1247960"
  },
  {
    "text": "feeling is that they complicate more than they simplify yeah there there are some cases where they're like I think",
    "start": "1247960",
    "end": "1254600"
  },
  {
    "text": "the authentication case for decorators is so pretty all the time it's just like this is an authenticated function and",
    "start": "1254600",
    "end": "1261799"
  },
  {
    "text": "just like magically makes off something that makes sense uh like on a per",
    "start": "1261799",
    "end": "1267039"
  },
  {
    "text": "function basis and so like that's such a cool use case for decorators that that it makes you want to use them a little",
    "start": "1267039",
    "end": "1272600"
  },
  {
    "text": "bit more but um but I I think they have a place and I know the Ember Community uses them a little bit like there are",
    "start": "1272600",
    "end": "1278640"
  },
  {
    "text": "also people in the react Community uh Ember concurrent uh uses decorators to do um some of their stuff and I think",
    "start": "1278640",
    "end": "1286279"
  },
  {
    "text": "that it's a it's a decent use case for it but General um I haven't seen a huge",
    "start": "1286279",
    "end": "1291320"
  },
  {
    "text": "need for them even though I'd probably use them once they made it into the language once they became more of a",
    "start": "1291320",
    "end": "1296919"
  },
  {
    "text": "first class supported Thing by the libraries I was using I don't know I'm I'm more on the functional programming",
    "start": "1296919",
    "end": "1303200"
  },
  {
    "text": "side of things and so I just don't I don't like encouraging people to write more classes sure I think I think uh I",
    "start": "1303200",
    "end": "1310120"
  },
  {
    "text": "mean that's a different conversation but uh there there are kind of two properties that I I think the I'm pretty",
    "start": "1310120",
    "end": "1317840"
  },
  {
    "text": "happy with the react worlds uh there are function components and some people are",
    "start": "1317840",
    "end": "1323080"
  },
  {
    "text": "are very big into that but I actually don't mind CL the class components but",
    "start": "1323080",
    "end": "1329080"
  },
  {
    "text": "then all functions that are a part of it are um like pure functions and uh like",
    "start": "1329080",
    "end": "1335240"
  },
  {
    "text": "that kind of stuff kind of a mix of some of the better parts of each of the of the patterns to where you don't have",
    "start": "1335240",
    "end": "1341120"
  },
  {
    "text": "crazy side effects and you don't have these different things and uh but then",
    "start": "1341120",
    "end": "1346320"
  },
  {
    "text": "your kind of view layer is a little more readable than just you know a function that calls a function that sends half of",
    "start": "1346320",
    "end": "1353200"
  },
  {
    "text": "its arguments to another function uh so I don't know I think there's Middle Ground there that's",
    "start": "1353200",
    "end": "1359360"
  },
  {
    "text": "nice yeah I think that we've we've hit a nice little spot here um I think we can",
    "start": "1359360",
    "end": "1365400"
  },
  {
    "text": "take a short break uh when we come back we're going to get into create react",
    "start": "1365400",
    "end": "1370880"
  },
  {
    "text": "app first SP for the show today is our friends at Sentry helping you to find",
    "start": "1370880",
    "end": "1376080"
  },
  {
    "text": "and fix your errors in your applications you can start tracking your errors today totally free they support react angular",
    "start": "1376080",
    "end": "1382520"
  },
  {
    "text": "Ember view backbone and no Frameworks like Express and COA you can view actual code and stack traces including support",
    "start": "1382520",
    "end": "1389559"
  },
  {
    "text": "for Source Maps see the errors Earl parameters and session information and even prompt your user for feedback when",
    "start": "1389559",
    "end": "1396200"
  },
  {
    "text": "you have frontend errors head to JSP party. fm/ centry start tracking your errors for free today no credit card",
    "start": "1396200",
    "end": "1402720"
  },
  {
    "text": "required get off the ground with their free plan and when you're ready to expand your usage simply pay as you go",
    "start": "1402720",
    "end": "1407880"
  },
  {
    "text": "once again JSP party. fm/ century and now back to the",
    "start": "1407880",
    "end": "1413400"
  },
  {
    "text": "show we're going to get into some new features that just landed in create react app um it actually seems like a",
    "start": "1413400",
    "end": "1420440"
  },
  {
    "text": "pretty substantial change uh we've talked about 1.0 yeah yeah we we talked about create react DEA on the show",
    "start": "1420440",
    "end": "1426840"
  },
  {
    "text": "before but um Alex why don't you give us a little bit U of that backstory and a little bit about this in less than 12",
    "start": "1426840",
    "end": "1434200"
  },
  {
    "text": "minutes how about that L that's tough that's that's an Alex problem uh all",
    "start": "1434200",
    "end": "1439559"
  },
  {
    "text": "right create rack app uh is very similar to Ember CI if you've uh ever used Ember",
    "start": "1439559",
    "end": "1445760"
  },
  {
    "text": "um I think uh angular has its own CLI tool as well that I don't know the name",
    "start": "1445760",
    "end": "1450840"
  },
  {
    "text": "of uh but but pretty much the the goal of create react app uh is to kind of",
    "start": "1450840",
    "end": "1457360"
  },
  {
    "text": "manage all of the things that Michael's always complaining about for you that way you don't have to care about them um",
    "start": "1457360",
    "end": "1463440"
  },
  {
    "text": "so if you like want to color completely in the lines uh of the like suggested",
    "start": "1463440",
    "end": "1471480"
  },
  {
    "text": "react World set of tools and webpack for that matter well yeah that it's included",
    "start": "1471480",
    "end": "1478880"
  },
  {
    "text": "in the suggested um react World set of tools uh then you can use create react",
    "start": "1478880",
    "end": "1485080"
  },
  {
    "text": "app and the idea is that you can say create react app to do and then you have",
    "start": "1485080",
    "end": "1491399"
  },
  {
    "text": "a react app for to-dos that automatically compiles your es6 uh has a",
    "start": "1491399",
    "end": "1497679"
  },
  {
    "text": "way to do CSS in JavaScript and uh does error handling and building and all",
    "start": "1497679",
    "end": "1505360"
  },
  {
    "text": "sorts of the different things that you would normally have to set up manually one by one all as this one big kind of",
    "start": "1505360",
    "end": "1511559"
  },
  {
    "text": "package it's kind of a template to get started with a project but uh one thing that is in and the history is",
    "start": "1511559",
    "end": "1517919"
  },
  {
    "text": "interesting it was like a a hack weekend project because react was one of a lot",
    "start": "1517919",
    "end": "1523960"
  },
  {
    "text": "of the feedback react got was that there's no kind of Baseline of guarantee",
    "start": "1523960",
    "end": "1529039"
  },
  {
    "text": "supported tools that work together and this is kind of like an answer to say like well this stuff all works together",
    "start": "1529039",
    "end": "1535600"
  },
  {
    "text": "the and then so it was kind of like a hackathon one day thing and then it's grown up a lot um since uh since then",
    "start": "1535600",
    "end": "1543360"
  },
  {
    "text": "and this is the 1.0 release so it's uh been in use by a lot of people already",
    "start": "1543360",
    "end": "1549440"
  },
  {
    "text": "um but now now it's gone 1.0 and and so the idea is uh you have to stay within",
    "start": "1549440",
    "end": "1556279"
  },
  {
    "text": "their uh within their like so even like it configures your es lint it configures your webpack it configures your CSS",
    "start": "1556279",
    "end": "1562960"
  },
  {
    "text": "configures your Babel all those different things and that configuration is even hidden from you because if you",
    "start": "1562960",
    "end": "1568640"
  },
  {
    "text": "change it then it's hard for them to make the assumptions that they can make and so you can either choose to use",
    "start": "1568640",
    "end": "1575039"
  },
  {
    "text": "create react app as this thing that you can constantly update because you're staying within the coloring lines or you",
    "start": "1575039",
    "end": "1581399"
  },
  {
    "text": "can use create react app to like generate a thing and then you can uh do what they call ejecting and so you can",
    "start": "1581399",
    "end": "1587880"
  },
  {
    "text": "eject from create react app as soon as you create your app it'll pull all that configuration into kind of your core",
    "start": "1587880",
    "end": "1594039"
  },
  {
    "text": "directory or where it would go if you wrote it yourself and then you can just edit it and all that stuff but you can no longer kind of pull updates from",
    "start": "1594039",
    "end": "1601039"
  },
  {
    "text": "create react app uh in order to like get automatic updates if that kind of makes",
    "start": "1601039",
    "end": "1606159"
  },
  {
    "text": "sense um so does that make sense as kind of a background um makes sense to me",
    "start": "1606159",
    "end": "1613320"
  },
  {
    "text": "cool uh so like in general I found that like with the things at work that are",
    "start": "1613320",
    "end": "1620679"
  },
  {
    "text": "difficult uh to like uh do if I want to do a create react up I have to eject",
    "start": "1620679",
    "end": "1625720"
  },
  {
    "text": "pretty fast um because we need to change one eslint thing in order to work with",
    "start": "1625720",
    "end": "1631559"
  },
  {
    "text": "our build servers and it's like that kind of snaks uh and and that's like part of the deal it's like if you can't",
    "start": "1631559",
    "end": "1636960"
  },
  {
    "text": "do it then you just don't get the updates and and sometimes that uh is not a problem in general like I haven't kind",
    "start": "1636960",
    "end": "1643000"
  },
  {
    "text": "of missed I haven't like paid enough attention to create react app to to get mad when they have an update and my",
    "start": "1643000",
    "end": "1649200"
  },
  {
    "text": "thing can update with them but this release would be maybe a good example of something that's like well if you stayed",
    "start": "1649200",
    "end": "1655440"
  },
  {
    "text": "in the coloring lines this would be a really Nifty change so we can go through the changes in 1.0 um if you all want",
    "start": "1655440",
    "end": "1662399"
  },
  {
    "text": "sure sure I my my first question is that it so it says something something on the order of like okay you can use Import",
    "start": "1662399",
    "end": "1668440"
  },
  {
    "text": "and Export semantics now without actually compiling down to commonjs but it's compiling down to something right",
    "start": "1668440",
    "end": "1673640"
  },
  {
    "text": "just to get into the browser it's not it's not relying on the browser's support yet uh so it could uh so the",
    "start": "1673640",
    "end": "1679919"
  },
  {
    "text": "idea is uh this is a I think you skipped ahead webpack 2 is a part of uh create",
    "start": "1679919",
    "end": "1688600"
  },
  {
    "text": "react app now so it used to be based on weback one most people are on weback one weback 2 is pretty new and it's it's",
    "start": "1688600",
    "end": "1694360"
  },
  {
    "text": "pretty uh it's a larger departure than a lot of 2.0's would be and so it's going to take some work uh to get people moved",
    "start": "1694360",
    "end": "1701480"
  },
  {
    "text": "over but one of the features of webpack 2 is that um it it supports uh imports",
    "start": "1701480",
    "end": "1708559"
  },
  {
    "text": "and exports natively like at all as part of its parser uh and so before if you",
    "start": "1708559",
    "end": "1716279"
  },
  {
    "text": "gave webpack 2 uh imports and exports es6 modules and you did you weren't",
    "start": "1716279",
    "end": "1721559"
  },
  {
    "text": "using Babel nothing would happen like it would break uh because it wouldn't understand that so what the steps would",
    "start": "1721559",
    "end": "1727640"
  },
  {
    "text": "be would be compile with Babel to uh you know require statements and then pass it",
    "start": "1727640",
    "end": "1734320"
  },
  {
    "text": "to weback and then webpack could understand the require statements but there are some features in uh es6",
    "start": "1734320",
    "end": "1741840"
  },
  {
    "text": "modules like uh static analysis and stuff like that that uh are more guaranteed in es6 modules so they were",
    "start": "1741840",
    "end": "1748559"
  },
  {
    "text": "able to say like all right we no longer care if you pass this require or um",
    "start": "1748559",
    "end": "1753919"
  },
  {
    "text": "these things and so you may skip the babble step in order to pass imports and exports rather than uh first compiling",
    "start": "1753919",
    "end": "1761240"
  },
  {
    "text": "down to weback and then it can use like the proper static analysis that is guaranteed as part of es6 modules in",
    "start": "1761240",
    "end": "1767840"
  },
  {
    "text": "order to do better things uh with regards to bundle size and tree shaking and dynamic loading and all that kind of",
    "start": "1767840",
    "end": "1774200"
  },
  {
    "text": "stuff um and so it's more of a what does webpack understand rather than you still",
    "start": "1774200",
    "end": "1779799"
  },
  {
    "text": "May well you still more than likely at the end will compile it down to to require statements that like from",
    "start": "1779799",
    "end": "1785760"
  },
  {
    "text": "whatever library in order to to bundle it all together it's like part of what webpack does but it natively understands",
    "start": "1785760",
    "end": "1791760"
  },
  {
    "text": "imports and exports now uh and that is now included automatically in create react app which means that if you were",
    "start": "1791760",
    "end": "1798039"
  },
  {
    "text": "were coloring the lines before all you have to do is update your create react",
    "start": "1798039",
    "end": "1803480"
  },
  {
    "text": "app uh kind of instance the version and you were automatically upgraded from",
    "start": "1803480",
    "end": "1808640"
  },
  {
    "text": "winpack one to wepack 2 which is kind of the amazing thing is that like whoa that was a a pretty big upgrade um from from",
    "start": "1808640",
    "end": "1817919"
  },
  {
    "text": "webpack 1 to two that a lot of people are going to spend a lot of time rewriting their webpack configurations and it was free because you stay within",
    "start": "1817919",
    "end": "1824360"
  },
  {
    "text": "the lines someone else like worked on the hard parts of that which is cool it's Nifty it's a good idea does that",
    "start": "1824360",
    "end": "1830200"
  },
  {
    "text": "make sense Michael yeah it's just it's yeah I'm just constantly sort of reframing how to think about webpack I",
    "start": "1830200",
    "end": "1837480"
  },
  {
    "text": "think that for the longest time I think everybody kind of thought of it as like this compile tool and but in actuality",
    "start": "1837480",
    "end": "1844480"
  },
  {
    "text": "it's more like a platform onto itself like it has a lot of Primitives like a",
    "start": "1844480",
    "end": "1850080"
  },
  {
    "text": "like its own module system and with multip with more types and things like that than the node does um so yeah I'm",
    "start": "1850080",
    "end": "1856880"
  },
  {
    "text": "just kind of reframing how to think about that yeah it is an interesting tool like it kind of crosses over a few",
    "start": "1856880",
    "end": "1863919"
  },
  {
    "text": "different boundaries of old tools that we've had and so if you think about it as a grunt type thing you'll think about",
    "start": "1863919",
    "end": "1870279"
  },
  {
    "text": "it as a grunt type thing and if you think about it as a Babel type thing you'll think about it as a babble type thing but like it kind of is more of a a",
    "start": "1870279",
    "end": "1878440"
  },
  {
    "text": "piece of glue um but then it still needs to understand things like you six modules natively in order to do uh tree",
    "start": "1878440",
    "end": "1885399"
  },
  {
    "text": "shaking and things like that so it's an inter interesting it's an interesting project so I was going through and like",
    "start": "1885399",
    "end": "1892639"
  },
  {
    "text": "reading the whole what's new in the react or create react app article and a bunch of it made sense to me but there's",
    "start": "1892639",
    "end": "1898679"
  },
  {
    "text": "some things in here that I've like never heard of and I have no idea what they are so uh one of those being just 20",
    "start": "1898679",
    "end": "1907360"
  },
  {
    "text": "could oh a react specific thing just is the test running framework for react",
    "start": "1907360",
    "end": "1912399"
  },
  {
    "text": "it's the so it's just they've upgraded just um uh I guess two versions that",
    "start": "1912399",
    "end": "1917519"
  },
  {
    "text": "used to be death 18 or something like that there are like testing uh is we should do a whole",
    "start": "1917519",
    "end": "1924559"
  },
  {
    "text": "episode on testing sometime in the future but um one of the hardest parts",
    "start": "1924559",
    "end": "1930200"
  },
  {
    "text": "about testing in the past if if you guys have done testing like at scale for a web app which may not be the case uh uh",
    "start": "1930200",
    "end": "1937919"
  },
  {
    "text": "but like functional tests are so sad where you need to like pop open a browser with uh xvfb and then send web",
    "start": "1937919",
    "end": "1947159"
  },
  {
    "text": "driver command to it in order to try to click around like they're so slow there they have so many like false positives",
    "start": "1947159",
    "end": "1954639"
  },
  {
    "text": "and timeouts and problems and chrome automatically updates and breaks all your tests and web driver",
    "start": "1954639",
    "end": "1960679"
  },
  {
    "text": "implementations are shady between the different but like there's so many problems with that that there's this new",
    "start": "1960679",
    "end": "1966639"
  },
  {
    "text": "world of writing like unit tests where you can kind of Mount uh components",
    "start": "1966639",
    "end": "1972679"
  },
  {
    "text": "directly into memory and then uh like kind of write functional style tests as",
    "start": "1972679",
    "end": "1980120"
  },
  {
    "text": "um something that doesn't need a browser uh at all um and it's a little different than running like jsom which is like uh",
    "start": "1980120",
    "end": "1987519"
  },
  {
    "text": "essentially providing it a a subset of a browser and you can do a lot of the tests that you used to do very slowly",
    "start": "1987519",
    "end": "1994559"
  },
  {
    "text": "very um non-deterministically with browsers uh as a unit test where you say",
    "start": "1994559",
    "end": "2000360"
  },
  {
    "text": "like well if this function like if a click is applied here and then uh this the Dom should then reflect these",
    "start": "2000360",
    "end": "2006960"
  },
  {
    "text": "different things and and you can test all that stuff um like on a per component basis very quickly without",
    "start": "2006960",
    "end": "2012360"
  },
  {
    "text": "spinning up a whole browser so just is is good at um at helping you manage",
    "start": "2012360",
    "end": "2019200"
  },
  {
    "text": "those types of things um in general if you're writing react code uh there's a",
    "start": "2019200",
    "end": "2025720"
  },
  {
    "text": "pretty Jess would be your default Choice even if it's not I I doubt it has like",
    "start": "2025720",
    "end": "2030760"
  },
  {
    "text": "more than 70% saturation but that's that's pretty good there's still quite a few other options that that people use",
    "start": "2030760",
    "end": "2037960"
  },
  {
    "text": "AA and a few different things just is I think coming around and winning the default choice for testing because",
    "start": "2037960",
    "end": "2044799"
  },
  {
    "text": "Facebook wrote it and supports it and stuff so is this one just bundled with the new release yeah so just just used",
    "start": "2044799",
    "end": "2051480"
  },
  {
    "text": "to be bundled it's just a new version and so there are new things um the the highlights include immersive watch mode",
    "start": "2051480",
    "end": "2058440"
  },
  {
    "text": "uh better snapshot format so snapshots are where you can say like once this is rendered with this data the HTML should",
    "start": "2058440",
    "end": "2064240"
  },
  {
    "text": "look exactly like X and then it can test so it's kind of kind of like whenever people do screenshots with uh like CSS",
    "start": "2064240",
    "end": "2070800"
  },
  {
    "text": "Frameworks and stuff like that say it needs to be Pixel Perfect you can do the same thing with the HTML output of your",
    "start": "2070800",
    "end": "2076760"
  },
  {
    "text": "components uh you can just say snapshot like I don't need to write down what it should look like but I know this is good",
    "start": "2076760",
    "end": "2082240"
  },
  {
    "text": "snapshot it shouldn't change unless I change that module and so if some dependency accidentally starts changing",
    "start": "2082240",
    "end": "2088118"
  },
  {
    "text": "your HTML you'll get a test failure um and then just like the output and uh and",
    "start": "2088119",
    "end": "2094520"
  },
  {
    "text": "stuff apis for for new new stuff in react so um you also get automatic coverage",
    "start": "2094520",
    "end": "2100880"
  },
  {
    "text": "reporting which is which is good cool so it's kind of just like enforcing good",
    "start": "2100880",
    "end": "2105920"
  },
  {
    "text": "practices on you anyway yeah and whenever you do a create react up it'll start you up with a test directory with",
    "start": "2105920",
    "end": "2111280"
  },
  {
    "text": "a test already written uh in imported and building and all that kind of stuff to where it's like really you as soon as",
    "start": "2111280",
    "end": "2117680"
  },
  {
    "text": "you write your thing it's a very fast and easy example on how to start writing",
    "start": "2117680",
    "end": "2123359"
  },
  {
    "text": "tests for your uh thing without needing to learn about how to configure J",
    "start": "2123359",
    "end": "2128560"
  },
  {
    "text": "that's awesome yeah one one tough thing um if for for writing web apps is is if",
    "start": "2128560",
    "end": "2136560"
  },
  {
    "text": "you want to write tests in the same JavaScript that you write your components and stuff in uh but if you're",
    "start": "2136560",
    "end": "2142000"
  },
  {
    "text": "using Babel and webpack and stuff in order to compile everything down then you start need to like watch and compile",
    "start": "2142000",
    "end": "2148520"
  },
  {
    "text": "your test directory which is cool but then like while you're writing your app",
    "start": "2148520",
    "end": "2153880"
  },
  {
    "text": "you're spending an additional you know 3 seconds every time you do a a save compiling your your thousands of tests",
    "start": "2153880",
    "end": "2160480"
  },
  {
    "text": "that you've written and so like there there needs to be good configuration on whether you're kind of in a mode where",
    "start": "2160480",
    "end": "2166200"
  },
  {
    "text": "tests run or get compiled or whether it's important for them to get recompiled and and most of that's",
    "start": "2166200",
    "end": "2171720"
  },
  {
    "text": "handled to where you're not doing like unnecessary work as you're working and then your test can still be in like new",
    "start": "2171720",
    "end": "2178400"
  },
  {
    "text": "cool uh good es60 Babble stuff that that you write your other components in you",
    "start": "2178400",
    "end": "2183520"
  },
  {
    "text": "don't have to switch context to write like old older School Javas script for your tests great so move moving off of",
    "start": "2183520",
    "end": "2191040"
  },
  {
    "text": "testing because I think it's boring no I'm just kidding um so I I see that one of the",
    "start": "2191040",
    "end": "2198880"
  },
  {
    "text": "things that it also does is it just uh it adds a service worker like automatically and has an offline caching",
    "start": "2198880",
    "end": "2204599"
  },
  {
    "text": "strategy which like I think is great that service worker support and pwas are like Landing in Frameworks like this I'm",
    "start": "2204599",
    "end": "2211760"
  },
  {
    "text": "terrified at the idea of the framework just like implementing a caching strategy that I don't understand",
    "start": "2211760",
    "end": "2218280"
  },
  {
    "text": "um sure because like I I've spent so much time fighting cashes like yeah it's just kind of worrisome so yeah I put a",
    "start": "2218280",
    "end": "2225319"
  },
  {
    "text": "service worker on txj uh early on the tjs website in 2015",
    "start": "2225319",
    "end": "2231560"
  },
  {
    "text": "I think uh and if someone had hit it between like 2: am and 3:00 a.m a week",
    "start": "2231560",
    "end": "2238000"
  },
  {
    "text": "before the conference then they would still have be be being served that version of the website for the rest of",
    "start": "2238000",
    "end": "2243960"
  },
  {
    "text": "their lives unless they like went in and cleared the the service worker uh so",
    "start": "2243960",
    "end": "2249040"
  },
  {
    "text": "like there there's definitely some danger to where like you can get yourself in a place where you accidentally cash everything and there's",
    "start": "2249040",
    "end": "2256119"
  },
  {
    "text": "no way to break out and that can be unfortunate but uh I haven't dug deep into their service work implementation",
    "start": "2256119",
    "end": "2263240"
  },
  {
    "text": "but my gut is that if you don't do anything weird uh it should it should be fine and if you do something weird uh",
    "start": "2263240",
    "end": "2269760"
  },
  {
    "text": "sorry uh yeah I I I my gut is that is that it's fine for normal stuff and uh",
    "start": "2269760",
    "end": "2276480"
  },
  {
    "text": "you probably need to turn it off for for crazier stuff or if you want like something like it's probably very",
    "start": "2276480",
    "end": "2282160"
  },
  {
    "text": "Baseline and very uh lazy in the sense that it uh isn't",
    "start": "2282160",
    "end": "2288119"
  },
  {
    "text": "going to do too much because it can't assume as much but if you think about just like a caching strategy of like",
    "start": "2288119",
    "end": "2293599"
  },
  {
    "text": "have we seen this before like you think about a cash sh if we've seen it before return the old one uh and then go grab",
    "start": "2293599",
    "end": "2300640"
  },
  {
    "text": "the new always go grab the new one and if there is a new one that's different than the old one go ahead and also send",
    "start": "2300640",
    "end": "2306520"
  },
  {
    "text": "up another event for uh Hey new data and if that's kind of built into the idea of",
    "start": "2306520",
    "end": "2312440"
  },
  {
    "text": "how you render things which a lot of the react stuff is like as things change like it automatically updates then it",
    "start": "2312440",
    "end": "2319640"
  },
  {
    "text": "can kind of be a good default strategy oh yeah I hadn't really thought about that like react has a lot of",
    "start": "2319640",
    "end": "2325480"
  },
  {
    "text": "understanding about the individual components so it knows if re-renders need to happen when the back end updates that's that's interesting yeah there",
    "start": "2325480",
    "end": "2332440"
  },
  {
    "text": "there's some nice uh synchronicity in in some of that stuff uh I think but yeah",
    "start": "2332440",
    "end": "2339720"
  },
  {
    "text": "it's not going to be a silver bullet but I think it's pretty good something uh Ember doesn't have service worker but",
    "start": "2339720",
    "end": "2346200"
  },
  {
    "text": "they have uh by default they serve like whenever you do Ember serve uh a what is",
    "start": "2346200",
    "end": "2352800"
  },
  {
    "text": "it a CSP a a con content security policy which I think is a really cool default",
    "start": "2352800",
    "end": "2357880"
  },
  {
    "text": "to have just to like uh make that a more widely used thing just like beat by",
    "start": "2357880",
    "end": "2364280"
  },
  {
    "text": "default xss is harder in Ember apps than it is in in in other apps because they",
    "start": "2364280",
    "end": "2369760"
  },
  {
    "text": "uh do CSP and so I I really like these uh toolkit style CLI uh helper things",
    "start": "2369760",
    "end": "2379160"
  },
  {
    "text": "doing things like solid generic defaults that maybe aren't the best version of them but maybe get people thinking about",
    "start": "2379160",
    "end": "2385599"
  },
  {
    "text": "service workers or get people thinking about CSP and we'll work in in all the simple cases as well interesting very",
    "start": "2385599",
    "end": "2393720"
  },
  {
    "text": "interesting you sound skeptical but I no I think just in in general like on the",
    "start": "2393720",
    "end": "2400599"
  },
  {
    "text": "surface this looks like a like a boilerplate generator and it's actually",
    "start": "2400599",
    "end": "2406359"
  },
  {
    "text": "very much not just a boiler plate generator I mean it is that too yeah yeah yeah yeah I mean obviously a living",
    "start": "2406359",
    "end": "2413000"
  },
  {
    "text": "boiler plate uh generator kind of um yeah yeah that's that's intense though",
    "start": "2413000",
    "end": "2420000"
  },
  {
    "text": "well it's a it's a boilerplate generator but it keeps on helping like it just helps you continue on developing the app",
    "start": "2420000",
    "end": "2427359"
  },
  {
    "text": "it doesn't just like run once and then you like don't use it right because it helps you put together all of the tools",
    "start": "2427359",
    "end": "2433040"
  },
  {
    "text": "that you need for it right yeah I mean it's like all of this stuff feels like",
    "start": "2433040",
    "end": "2438240"
  },
  {
    "text": "it's a uh great grandchild of rails where rails would uh uh there's a word",
    "start": "2438240",
    "end": "2446200"
  },
  {
    "text": "for it uh it would generate code uh like you would just say rail's new controller",
    "start": "2446200",
    "end": "2452119"
  },
  {
    "text": "scaffolding scff that's the that's the word uh and it definitely feels kind of like scaffolding there's a bit of",
    "start": "2452119",
    "end": "2457920"
  },
  {
    "text": "scaffolding like in the initial like create react app um but I think it focuses Less on generating code for you",
    "start": "2457920",
    "end": "2465319"
  },
  {
    "text": "and more about providing tools and examples and kind of a baseline for you to build on and then allowing like the",
    "start": "2465319",
    "end": "2472960"
  },
  {
    "text": "kind of one of the things of scaffolding is like once it generates that code that code is is stuck there forever uh in",
    "start": "2472960",
    "end": "2480240"
  },
  {
    "text": "that format whereas I think more of the strategy with create rack is that uh",
    "start": "2480240",
    "end": "2485560"
  },
  {
    "text": "hopefully it scaffolds little enough to where it can update those things that it",
    "start": "2485560",
    "end": "2491240"
  },
  {
    "text": "it has generated like on the Fly I think the last thing that's interesting um in",
    "start": "2491240",
    "end": "2497160"
  },
  {
    "text": "the uh we not webc uh create react app 1.0 release is the uh code splitting",
    "start": "2497160",
    "end": "2503640"
  },
  {
    "text": "stuff and that's part of webpack uh as well but there's a standard that no one",
    "start": "2503640",
    "end": "2508839"
  },
  {
    "text": "uses um for dynamic Imports it mixes uh asyn weight with import um and I hadn't",
    "start": "2508839",
    "end": "2517440"
  },
  {
    "text": "looked into it much because it was wasn't really a great place to use it but it's like it's part of the standard track uh um and like I don't know where",
    "start": "2517440",
    "end": "2525800"
  },
  {
    "text": "it is in that but um you can have an async function and then you can import",
    "start": "2525800",
    "end": "2530839"
  },
  {
    "text": "something you can do a weight import and and then that will automatically build into a separate like all the",
    "start": "2530839",
    "end": "2537119"
  },
  {
    "text": "dependencies of the thing that you're asynchronously importing uh can be built",
    "start": "2537119",
    "end": "2542400"
  },
  {
    "text": "into a separate uh bundle yeah I I think you're you're complicating it a little bit like it's a piece of syntax that",
    "start": "2542400",
    "end": "2549160"
  },
  {
    "text": "allows you to with a function do the same thing you do with Syntax for importing right so and the nice thing",
    "start": "2549160",
    "end": "2555640"
  },
  {
    "text": "about that is that at some point in the future which is like not part of the you know initial um interpretation phase of",
    "start": "2555640",
    "end": "2562119"
  },
  {
    "text": "the browser you can say import this module um and then what you're saying is that like now we we can actually use",
    "start": "2562119",
    "end": "2567280"
  },
  {
    "text": "that for code splitting because you can say oh well like these these little pieces that you don't necessarily need we can now import dynamically using the",
    "start": "2567280",
    "end": "2574119"
  },
  {
    "text": "same kind of module system right I guess I was complicating because would be invalid syntax to just throw an import",
    "start": "2574119",
    "end": "2580079"
  },
  {
    "text": "uh there so it needs to be like supported syntax it's not just like something you could do before but people",
    "start": "2580079",
    "end": "2585680"
  },
  {
    "text": "didn't know about it I think is like awaiting an import is not uh like it needs to be statically analyzable or or",
    "start": "2585680",
    "end": "2592640"
  },
  {
    "text": "at least be um known to be a part of it that isn't statically analyzable because",
    "start": "2592640",
    "end": "2598319"
  },
  {
    "text": "it doesn't need to be so you know something like that uh and that's why I think it's part of the standard track uh to to do asynchronous Imports um like",
    "start": "2598319",
    "end": "2607720"
  },
  {
    "text": "like this and so y create react app supports this in order to do uh bundles",
    "start": "2607720",
    "end": "2612920"
  },
  {
    "text": "which is a huge part of like the pwa communities problem like you if you follow Alex Russell or whatever you'll",
    "start": "2612920",
    "end": "2619720"
  },
  {
    "text": "you'll know that your JavaScript that you're serving by default is far too large um and so if you can do some if",
    "start": "2619720",
    "end": "2626280"
  },
  {
    "text": "you can turn on http2 and then do something like a a handful of these",
    "start": "2626280",
    "end": "2631599"
  },
  {
    "text": "asynchronous Imports for large portions of your application I think it could go a long way to like loading far less",
    "start": "2631599",
    "end": "2638480"
  },
  {
    "text": "JavaScript uh on load which is which is really Nifty I think this is such a good",
    "start": "2638480",
    "end": "2643880"
  },
  {
    "text": "direction to like automatically for like give to people I hope they use it in the Baseline example that they generate you",
    "start": "2643880",
    "end": "2650200"
  },
  {
    "text": "know that way people use it yeah sort sort of following on with your talk about scaffolding it seems like the big",
    "start": "2650200",
    "end": "2656760"
  },
  {
    "text": "difference between this and what rails does is like you said rails will generate a lot of boiler plate code this",
    "start": "2656760",
    "end": "2662240"
  },
  {
    "text": "seems to generate a lot of configuration right like we have like like the joke",
    "start": "2662240",
    "end": "2667559"
  },
  {
    "text": "about webpack is that like you you only write one web pack configuration and then you copy paste it into every",
    "start": "2667559",
    "end": "2673319"
  },
  {
    "text": "project I mean that's a make file joke but yeah yeah yeah exactly right um but",
    "start": "2673319",
    "end": "2679200"
  },
  {
    "text": "I think also like um like you were saying one of the things this does is really standardize you know what is the",
    "start": "2679200",
    "end": "2685920"
  },
  {
    "text": "the proper path for writing a react app with all these different configurations and so this allows you to sort of add",
    "start": "2685920",
    "end": "2691400"
  },
  {
    "text": "features over time to that configuration um without trying to get you know thousands and thousands of develop",
    "start": "2691400",
    "end": "2697000"
  },
  {
    "text": "velers to update their you know this particular line in their web pack config right it's it's a noble cause and other",
    "start": "2697000",
    "end": "2703800"
  },
  {
    "text": "people are doing it like em and stuff are doing this well uh as well like when you upgrade these like new world",
    "start": "2703800",
    "end": "2711000"
  },
  {
    "text": "configuration CLI tools uh you get instant improvements in your",
    "start": "2711000",
    "end": "2716520"
  },
  {
    "text": "applications which is cool uh I I really like like everything still works and now",
    "start": "2716520",
    "end": "2721599"
  },
  {
    "text": "it's 20% faster it's like whenever Ember did the glimmer update you did was",
    "start": "2721599",
    "end": "2727800"
  },
  {
    "text": "upgrade Ember and suddenly everything was using glimmer it was all supported unless you're doing something weird you",
    "start": "2727800",
    "end": "2733520"
  },
  {
    "text": "know and and suddenly your website rendered faster and I think that's a cool world like for I think that's a",
    "start": "2733520",
    "end": "2739480"
  },
  {
    "text": "good goal for these uh well-used Frameworks to to to go after yeah",
    "start": "2739480",
    "end": "2746960"
  },
  {
    "text": "definitely one thing I can't wait to see is not compiling down to es5 anymore but compiling down to you know a set of",
    "start": "2746960",
    "end": "2753160"
  },
  {
    "text": "features that are actually mostly supported because there's a lot of performance benefits to like Arrow functions are faster than regular",
    "start": "2753160",
    "end": "2758920"
  },
  {
    "text": "functions in in V8 and yeah for the most part you know people that are working with compilers aren't getting those",
    "start": "2758920",
    "end": "2764040"
  },
  {
    "text": "performance benefits right now yeah you can choose you can configure that uh not in create react app but in a generic",
    "start": "2764040",
    "end": "2770319"
  },
  {
    "text": "Babel config you can say these are the things this is the target uh set of features that I want to compile down to",
    "start": "2770319",
    "end": "2776800"
  },
  {
    "text": "so it's certainly possible but I don't think many people uh go that far well and also there's only one minifier that",
    "start": "2776800",
    "end": "2782520"
  },
  {
    "text": "supports it as well so and and it's still under really active development so that's one of the",
    "start": "2782520",
    "end": "2789240"
  },
  {
    "text": "things that you kind of lose anyway I think that we're about time for another Break um we're going to take a short",
    "start": "2789240",
    "end": "2794880"
  },
  {
    "text": "little break here and then when we come back we're going to talk about the project of the week if you're looking for trusted",
    "start": "2794880",
    "end": "2801319"
  },
  {
    "text": "freelance Talent ready to join your team right now I mean like within the week",
    "start": "2801319",
    "end": "2806839"
  },
  {
    "text": "call up on my friends at topt T o.com and as a listener of the show you",
    "start": "2806839",
    "end": "2811960"
  },
  {
    "text": "might actually be one of those developers or designers looking for awesome freelance independent contractor",
    "start": "2811960",
    "end": "2819240"
  },
  {
    "text": "type opportunities where you can still be a remote worker you can still have the freedom you have right now which means you can travel anywhere you could",
    "start": "2819240",
    "end": "2825520"
  },
  {
    "text": "be anywhere and do what you do we love top top they've been supporting this show for a very long time they're really",
    "start": "2825520",
    "end": "2831480"
  },
  {
    "text": "good friends of ours if you want a personal introduction I'd be glad to give that to you email me Adam",
    "start": "2831480",
    "end": "2837480"
  },
  {
    "text": "change.com otherwise head to top.com that's t o tal.com to learn more tell",
    "start": "2837480",
    "end": "2843760"
  },
  {
    "text": "them ad them from change L sentu and now back to the show",
    "start": "2843760",
    "end": "2848839"
  },
  {
    "text": "our project of the week this week is electron um there's been so much stuff about electron I'm sure that we've",
    "start": "2849520",
    "end": "2855400"
  },
  {
    "text": "talked about electron apps on here um I know that the change log did like a whole episode as well um just for for",
    "start": "2855400",
    "end": "2862559"
  },
  {
    "text": "some quick background electron is a way to build desktop applications for Mac windows and Linux uh using node.js and",
    "start": "2862559",
    "end": "2869880"
  },
  {
    "text": "browser Technologies so you if you can make a website and use nodejs you can write an electron app um and it's just",
    "start": "2869880",
    "end": "2878720"
  },
  {
    "text": "it was uh originally broken out of the adom editor um the GitHub was doing it was initially called sort of I think",
    "start": "2878720",
    "end": "2885119"
  },
  {
    "text": "Adam shell and then um Jessica Lord and some of the the good people at GitHub uh",
    "start": "2885119",
    "end": "2890640"
  },
  {
    "text": "moved it into its own project and now it's really taken off so yeah and some of the some of the electron apps that",
    "start": "2890640",
    "end": "2896480"
  },
  {
    "text": "people might know of is like hyper and slack and something that we talked about",
    "start": "2896480",
    "end": "2901520"
  },
  {
    "text": "recently which is web Torrent and stuff like that Visual Studio code um which is",
    "start": "2901520",
    "end": "2907319"
  },
  {
    "text": "my current editor of choice as well um yeah it's one of the interesting things that I I've seen about it is that um I",
    "start": "2907319",
    "end": "2914599"
  },
  {
    "text": "think a lot of people initially viewed it as like oh I can take my website and turn it into a desktop app that's sort",
    "start": "2914599",
    "end": "2920119"
  },
  {
    "text": "of what the slack app does um but I've or you know I can write desktop apps but",
    "start": "2920119",
    "end": "2925880"
  },
  {
    "text": "it's a pain to do them cross browser so I will write them in this instead but what I've seen lately are applications",
    "start": "2925880",
    "end": "2931520"
  },
  {
    "text": "that I don't think would even exist if it wasn't for you know having unrestrict",
    "start": "2931520",
    "end": "2937160"
  },
  {
    "text": "access to nodejs um and and then just being able to put a a browser front end",
    "start": "2937160",
    "end": "2942359"
  },
  {
    "text": "on that like the just the size of the ecosystem is so amazing um you know mongod DB has like a new DB admin thing",
    "start": "2942359",
    "end": "2950480"
  },
  {
    "text": "um that's like a desktop app with electron vtra is like this new music app that is like way prettier and nicer than",
    "start": "2950480",
    "end": "2958440"
  },
  {
    "text": "iTunes um and and that is just you know because like they they knew node.js really well they can really dig into the",
    "start": "2958440",
    "end": "2964680"
  },
  {
    "text": "the nitty-gritty there um and they need like the the a lot of the stuff that they're doing with data storage and syncing and stuff they need that",
    "start": "2964680",
    "end": "2970720"
  },
  {
    "text": "performance that layer they couldn't just do it as a pure web app so it's awesome have you built",
    "start": "2970720",
    "end": "2977480"
  },
  {
    "text": "anything with electron yes yes um I've i' I mean I've",
    "start": "2977480",
    "end": "2983960"
  },
  {
    "text": "gone through I I wrote a little um kind of browser viewer uh on top of ipfs",
    "start": "2983960",
    "end": "2989760"
  },
  {
    "text": "because I wanted to to play around with ipfs so I made like a little like drag and drop thing um I have I'm about",
    "start": "2989760",
    "end": "2996880"
  },
  {
    "text": "halfway done with like a desktop version of roll call um that uses electron as",
    "start": "2996880",
    "end": "3002520"
  },
  {
    "text": "well um and then I pulled down and and just worked with a couple projects like um I I dug into the brave code at one B",
    "start": "3002520",
    "end": "3009720"
  },
  {
    "text": "at one time which is also an electron app and uh or it was back then I think",
    "start": "3009720",
    "end": "3015440"
  },
  {
    "text": "now they're on their Fork of electron um and there was another app that I I can't remember that I I sent a pull request",
    "start": "3015440",
    "end": "3021799"
  },
  {
    "text": "too and so I I had to pull it down that way and all of them have been great I mean I'm comfortable with node um so",
    "start": "3021799",
    "end": "3028520"
  },
  {
    "text": "it's it's a really kind of comfortable place to be to to develop in but what about you yeah I mean I mean I'm super",
    "start": "3028520",
    "end": "3034240"
  },
  {
    "text": "comfortable with node 2 and electron like has always been something that you know I've known existed as a thing but",
    "start": "3034240",
    "end": "3042520"
  },
  {
    "text": "like is there anything extra that people that already know how to build like web applications with node would need to",
    "start": "3042520",
    "end": "3048760"
  },
  {
    "text": "know in order to get up and running with electron or does electron kind of like just wrap around all that stuff I mean",
    "start": "3048760",
    "end": "3056200"
  },
  {
    "text": "it it w WS around all of it but also I I think like I I don't think that we can",
    "start": "3056200",
    "end": "3061280"
  },
  {
    "text": "underestimate like how much stuff there is in npm right now like how many modules and um to make like a lot of web",
    "start": "3061280",
    "end": "3069880"
  },
  {
    "text": "apps work a ton of what you do is that you build these backend services that just you know talk to some something",
    "start": "3069880",
    "end": "3077040"
  },
  {
    "text": "that is like has less security around it and more of the node ecosystem and then you push that to the browser in some way",
    "start": "3077040",
    "end": "3083000"
  },
  {
    "text": "um and I've seen a lot of people just get up and running so quickly on ideas because they can just store directly on",
    "start": "3083000",
    "end": "3089000"
  },
  {
    "text": "the file system and access every module in npm and then put a web front end on it and not have to spin up a backend",
    "start": "3089000",
    "end": "3095160"
  },
  {
    "text": "service not have to deal with you know a front end and a back end where they just like kind of have it all mashed together",
    "start": "3095160",
    "end": "3100799"
  },
  {
    "text": "um in this environment electron Alex yeah have you made",
    "start": "3100799",
    "end": "3107000"
  },
  {
    "text": "anything uh in in Adam no um I my experience with adom or in electron um",
    "start": "3107000",
    "end": "3115079"
  },
  {
    "text": "has been installing the uh electron bin or uh like actually we",
    "start": "3115079",
    "end": "3122680"
  },
  {
    "text": "used electron in order to do screenshots for our uh CSS Library visual diffs",
    "start": "3122680",
    "end": "3130760"
  },
  {
    "text": "because it was easier to just uh run electron cross browser render something",
    "start": "3130760",
    "end": "3136640"
  },
  {
    "text": "and then use uh the stuff to take a screenshot and then not even reload Pages just inject the new components",
    "start": "3136640",
    "end": "3144040"
  },
  {
    "text": "into the same page and then you could take like a ton of screenshots all in a row and and ended up being really fast I think there's an open source library",
    "start": "3144040",
    "end": "3150160"
  },
  {
    "text": "that we have I can I can find the leak uh but yeah so I used it for a pretty different thing but uh yeah like that",
    "start": "3150160",
    "end": "3158480"
  },
  {
    "text": "that may be an interesting use case of it it's just like it's a cross browser environment to run HTML in uh headlessly",
    "start": "3158480",
    "end": "3166200"
  },
  {
    "text": "um which is kind of cool yeah what was the thing that um oh I I this is going",
    "start": "3166200",
    "end": "3174200"
  },
  {
    "text": "to be a horrible uh uh it's going to Showcase my horrible memory what was the thing that",
    "start": "3174200",
    "end": "3180040"
  },
  {
    "text": "adobe had that was allowing you to make apps easier it might have just been like in",
    "start": "3180040",
    "end": "3187000"
  },
  {
    "text": "Max or something does anyone know what I'm talking about yeah they had they had an editor and then they had um yeah the",
    "start": "3187000",
    "end": "3195240"
  },
  {
    "text": "name of the stuff but it was like kind of Dream Weaver 2000 or whatever uh well",
    "start": "3195240",
    "end": "3200920"
  },
  {
    "text": "no not not not Dream Weaver it was one that actually let you get um some kind",
    "start": "3200920",
    "end": "3206839"
  },
  {
    "text": "of obviously I guess it's not yes Adobe Air so like Corbin you in",
    "start": "3206839",
    "end": "3212960"
  },
  {
    "text": "the channel thanks okay cool soob flex and flex I",
    "start": "3212960",
    "end": "3219079"
  },
  {
    "text": "think is what it eventually became right Flex was the framework uh that you you",
    "start": "3219079",
    "end": "3224319"
  },
  {
    "text": "wrote in and you wrote that air was the container that it would run it okay okay",
    "start": "3224319",
    "end": "3231240"
  },
  {
    "text": "hold on the cops are coming again um it was all flash based action script",
    "start": "3231240",
    "end": "3238280"
  },
  {
    "text": "uh the cops are coming to arrest Rachel for talking about Doby",
    "start": "3238280",
    "end": "3243720"
  },
  {
    "text": "flat excuse me oh okay cool so I mean I remember when that came out and I was like whoa this is rad and I mean",
    "start": "3243720",
    "end": "3250960"
  },
  {
    "text": "electron seems like I know that people are talking about it a lot but I feel like people should be talking about it",
    "start": "3250960",
    "end": "3259160"
  },
  {
    "text": "more um I know that's just like a handwavy thing to say but like why",
    "start": "3259160",
    "end": "3265400"
  },
  {
    "text": "aren't people that are making like pretty rad apps just not also like by default making them in electron as well",
    "start": "3265400",
    "end": "3272599"
  },
  {
    "text": "does anybody know because the web is important an important distribution",
    "start": "3272599",
    "end": "3277960"
  },
  {
    "text": "platform and uh defaulting to Native applications uh is maybe not the best",
    "start": "3277960",
    "end": "3285040"
  },
  {
    "text": "strategy to reach the most people well I mean I think yeah go ahead",
    "start": "3285040",
    "end": "3291760"
  },
  {
    "text": "well there's I I think like uh if if you if you talk of people that have apps",
    "start": "3291760",
    "end": "3298079"
  },
  {
    "text": "that people use like in their like daily like like any app that you use for kind of business or anything you open up",
    "start": "3298079",
    "end": "3303680"
  },
  {
    "text": "daily people prefer desktop applications um like well they don't have to but if",
    "start": "3303680",
    "end": "3310119"
  },
  {
    "text": "you talk to like slack for instance right like they have ostensively the exact same thing on their on the website as they do on the desktop and the",
    "start": "3310119",
    "end": "3316160"
  },
  {
    "text": "desktop has a lot more engagement um because yeah but getting to people",
    "start": "3316160",
    "end": "3321880"
  },
  {
    "text": "initially asking them to you know before they've seen any value download this thing it is a bit of a stretch for for a",
    "start": "3321880",
    "end": "3328599"
  },
  {
    "text": "lot of use cases um but I think that once once you have people's attention and you really want to up their engagement that's where desktop",
    "start": "3328599",
    "end": "3334960"
  },
  {
    "text": "applications are really useful I agree there we go well we we we still value the desktop it looks like um",
    "start": "3334960",
    "end": "3343000"
  },
  {
    "text": "but yeah there's been some great uh articles lately um one so GitHub actually they have these GitHub desktop",
    "start": "3343000",
    "end": "3349799"
  },
  {
    "text": "apps that they they built a while back uh and they had not actually moved them to electron yet and so um they wrote up",
    "start": "3349799",
    "end": "3356079"
  },
  {
    "text": "their experience of you know some C and Objective C developers that are used to writing you know native applications for",
    "start": "3356079",
    "end": "3362359"
  },
  {
    "text": "Windows and Mac what their experience was like you know moving to electron and and doing electron stuff it was it's",
    "start": "3362359",
    "end": "3367599"
  },
  {
    "text": "pretty interesting I I recommend it um yeah all right let's move on to",
    "start": "3367599",
    "end": "3373760"
  },
  {
    "text": "our picks all right everybody got their picks locked and loaded yeah but mine's",
    "start": "3373760",
    "end": "3379119"
  },
  {
    "text": "a cop out okay well we'll start with your cop out then and then we'll go up",
    "start": "3379119",
    "end": "3384640"
  },
  {
    "text": "1.0 baby oh shut up you can't pick the project of the week that's like cheating",
    "start": "3384640",
    "end": "3391240"
  },
  {
    "text": "okay webpack [Laughter] two tell us about whip Pack 2 what's in",
    "start": "3391240",
    "end": "3398079"
  },
  {
    "text": "it uh tree shaking so so",
    "start": "3398079",
    "end": "3404799"
  },
  {
    "text": "I all right I'm just gonna I'm gonna go on a little bit of a tangent here and you're gonna get mad about it but I",
    "start": "3404799",
    "end": "3410640"
  },
  {
    "text": "think that if you need tree shaking you're dependent on some anti patterns I don't think that we should have the",
    "start": "3410640",
    "end": "3416240"
  },
  {
    "text": "these grab bag modules with a bunch of other properties in them that you should be shaking out I think that we should be using modules that do one thing and only",
    "start": "3416240",
    "end": "3423520"
  },
  {
    "text": "export one thing and then you don't need to tree Shake there you go",
    "start": "3423520",
    "end": "3430400"
  },
  {
    "text": "maybe maybe it's an amazing",
    "start": "3430400",
    "end": "3435599"
  },
  {
    "text": "rebuttal maybe anyway my my pick of the",
    "start": "3435599",
    "end": "3442559"
  },
  {
    "text": "week were you going to say something else go ahead Al I was going to say that I I agree uh to an extent uh that if you",
    "start": "3442559",
    "end": "3451720"
  },
  {
    "text": "if you write something that is a little bit does a few too many things then tree",
    "start": "3451720",
    "end": "3456920"
  },
  {
    "text": "shaking becomes a crutch but I also think that like take a substack",
    "start": "3456920",
    "end": "3462160"
  },
  {
    "text": "something take a set of tools that are only substack and you'll still get some",
    "start": "3462160",
    "end": "3467880"
  },
  {
    "text": "benefit from tree shaking in the end it won't be massive but might as well do it",
    "start": "3467880",
    "end": "3473000"
  },
  {
    "text": "um so uh I think tree shaking becomes even more uh cool when it when it can",
    "start": "3473000",
    "end": "3480319"
  },
  {
    "text": "the dead code removal be like types plus um well so I I guess uh you guys were",
    "start": "3480319",
    "end": "3486520"
  },
  {
    "text": "gone when we we made this the project of the week it was uh what was that thing uh code code uh code something came out",
    "start": "3486520",
    "end": "3493559"
  },
  {
    "text": "recently Facebook uh it was the project anyways it tries to like code unroll and",
    "start": "3493559",
    "end": "3500920"
  },
  {
    "text": "like uh pre-compute things that are already like available to compute at at",
    "start": "3500920",
    "end": "3506160"
  },
  {
    "text": "run time uh or at compiler time uh and so things like that are also going to be",
    "start": "3506160",
    "end": "3511799"
  },
  {
    "text": "massive like to where like there's an if statement inside of a substack module and there's no way that's going to run",
    "start": "3511799",
    "end": "3518000"
  },
  {
    "text": "based on the configuration uh and therefore it can be compiled out and that's tree shaking like and it should",
    "start": "3518000",
    "end": "3524119"
  },
  {
    "text": "be fine use it all use everything use every minifier at the same",
    "start": "3524119",
    "end": "3530640"
  },
  {
    "text": "time all right Rachel what's your pick so so my pick of the week is a talk from",
    "start": "3532520",
    "end": "3540079"
  },
  {
    "text": "JS comyu that just happened that I unfortunately did not get to see in person but it's from uh anjun Vil and",
    "start": "3540079",
    "end": "3548119"
  },
  {
    "text": "it's about immutable data structures for functional JS and she just like explains",
    "start": "3548119",
    "end": "3553760"
  },
  {
    "text": "it in such a really simplified easy to understand way",
    "start": "3553760",
    "end": "3560920"
  },
  {
    "text": "for people that don't really understand what you know immutability or mutability or functional like programming looks",
    "start": "3560920",
    "end": "3568240"
  },
  {
    "text": "like aka me and so like she just gives visuals that explains like how nodes",
    "start": "3568240",
    "end": "3574880"
  },
  {
    "text": "work and how like you can do different things with it and how it like you can",
    "start": "3574880",
    "end": "3581240"
  },
  {
    "text": "have the arrays structured in um well I guess that's what mutability and immutability is but she explains it in a",
    "start": "3581240",
    "end": "3588160"
  },
  {
    "text": "way that makes sense and she talks about it in context of um David Nolan's Mory",
    "start": "3588160",
    "end": "3594440"
  },
  {
    "text": "library and face book's IM imut immutablejs library and shows examples",
    "start": "3594440",
    "end": "3599920"
  },
  {
    "text": "from both so that you're able to like one understand the concept and see how different libraries are handling that",
    "start": "3599920",
    "end": "3606160"
  },
  {
    "text": "kind of thing um so yeah if anybody else was wondering about that kind of thing",
    "start": "3606160",
    "end": "3611680"
  },
  {
    "text": "there's a link to it and it's pretty great awesome earlier in the episode we talked about features that we don't uh",
    "start": "3611680",
    "end": "3618760"
  },
  {
    "text": "use my wish is that there was a way to use a mutable JS as uh like the default",
    "start": "3618760",
    "end": "3625640"
  },
  {
    "text": "in this syntax like like there could be a babble plugin for just like immutable",
    "start": "3625640",
    "end": "3631160"
  },
  {
    "text": "versions of things and there actually is a spec um I think uh Seb marage uh uh",
    "start": "3631160",
    "end": "3637280"
  },
  {
    "text": "proposed immutable data structures to Emma but I think it it's dead and it's not going to go and makes me sad but I",
    "start": "3637280",
    "end": "3645400"
  },
  {
    "text": "really want to use a mutable JS but I really hate changing the syntax uh for everything I just want I want native",
    "start": "3645400",
    "end": "3652000"
  },
  {
    "text": "immutable data structures and so that's a good example of something that I don't use that I wish I could",
    "start": "3652000",
    "end": "3658720"
  },
  {
    "text": "cool cool okay um my pick is a book um",
    "start": "3658720",
    "end": "3665359"
  },
  {
    "text": "it's actually a really old book it came out like in the 80s I think um ' 84",
    "start": "3665359",
    "end": "3670760"
  },
  {
    "text": "crazy um but it's called hackers it is not uh for the film hackers it is not",
    "start": "3670760",
    "end": "3677559"
  },
  {
    "text": "there's no rollerblading um know hackers is about the kind of origins of hacker culture",
    "start": "3677559",
    "end": "3684760"
  },
  {
    "text": "which eventually kind of became early technology and open source culture um so the the you you can skip the third part",
    "start": "3684760",
    "end": "3691599"
  },
  {
    "text": "the book is in three parts you can the third one does not hold up um but the the first one is is basically from the",
    "start": "3691599",
    "end": "3698440"
  },
  {
    "text": "tech Model Railroad Club at MIT in the late 50s and early 60s that started using computers in a very different way",
    "start": "3698440",
    "end": "3705880"
  },
  {
    "text": "um and how their kind of culture evolved and became the AI lab um at MIT which",
    "start": "3705880",
    "end": "3712559"
  },
  {
    "text": "you know spawned a bunch of other AI labs and was like all of the early kind of programming culture came out of um",
    "start": "3712559",
    "end": "3718240"
  },
  {
    "text": "out of what was going on there what's the chapter about so so hold on the second chapter is about uh kind of The",
    "start": "3718240",
    "end": "3724760"
  },
  {
    "text": "Homebrew Computer Club and early apple and early Computing like in in the Bay Area and also how um a bunch of like",
    "start": "3724760",
    "end": "3731559"
  },
  {
    "text": "really kind of crazy counterculture political figures um like also informed",
    "start": "3731559",
    "end": "3736640"
  },
  {
    "text": "that culture and what they were doing and that's super interesting the third section is about uh the the gaming",
    "start": "3736640",
    "end": "3743200"
  },
  {
    "text": "industry in like this in Sierra and all those companies that were like in the early 80s and and it was more of like a",
    "start": "3743200",
    "end": "3750359"
  },
  {
    "text": "at the time it was like oh and then this is what people are doing right now but it really doesn't connect very well to",
    "start": "3750359",
    "end": "3755440"
  },
  {
    "text": "the other parts and it really doesn't hold up as like like this particular section of computing is not nearly as",
    "start": "3755440",
    "end": "3761160"
  },
  {
    "text": "influential as these other ones like in hindsight right um but also I will there",
    "start": "3761160",
    "end": "3766599"
  },
  {
    "text": "is there's some appendic appendices one of the pendencies is called the last",
    "start": "3766599",
    "end": "3772319"
  },
  {
    "text": "hacker and it's about the last person person in the MIT media lab or sorry the",
    "start": "3772319",
    "end": "3778920"
  },
  {
    "text": "MIT AI lab um that is kind of The Keeper of the flame for hacker culture and it's",
    "start": "3778920",
    "end": "3785319"
  },
  {
    "text": "it's about Richard stalman before he started the Gano project and before there was even a such thing as copy LIF",
    "start": "3785319",
    "end": "3790920"
  },
  {
    "text": "licenses or a GPL to argue about um and it is fascinating um and explains so",
    "start": "3790920",
    "end": "3797680"
  },
  {
    "text": "much uh so yeah I I've been reading been trying to read a lot about kind of early hacker culture and and how The Counter",
    "start": "3797680",
    "end": "3804119"
  },
  {
    "text": "Culture movement kind of played into all this stuff and uh this is like one of the the best books to to really dig into",
    "start": "3804119",
    "end": "3810559"
  },
  {
    "text": "it so it's by Steve Levy it's called hackers there you go my pick is the",
    "start": "3810559",
    "end": "3816480"
  },
  {
    "text": "movie sneakers oh that's a good movie that's it's really the only Tech movie",
    "start": "3816480",
    "end": "3823200"
  },
  {
    "text": "that holds up Riv River Phoenix yeah yeah oh man that's a good",
    "start": "3823200",
    "end": "3830279"
  },
  {
    "text": "one that's a really good one some some Robert Redford okay",
    "start": "3830279",
    "end": "3836760"
  },
  {
    "text": "anyway anyway great talking with y'all I think that we're just about done now uh rate",
    "start": "3836760",
    "end": "3842760"
  },
  {
    "text": "US on iTunes check us out at",
    "start": "3842760",
    "end": "3847359"
  },
  {
    "text": "[Music]",
    "start": "3848380",
    "end": "3851488"
  },
  {
    "text": "[Music] party hope you enjoyed it we record this",
    "start": "3862470",
    "end": "3867880"
  },
  {
    "text": "show live every Friday at 300 p.m. us Eastern so if you want to listen live you can head the chain law.com Community",
    "start": "3867880",
    "end": "3875440"
  },
  {
    "text": "get in slack hang out with us in real time special thanks to our sponsors sensur and toptw also thanks to fastly",
    "start": "3875440",
    "end": "3883359"
  },
  {
    "text": "our bandwidth partner at the fastly.com to learn more this episode was edited by Jonathan Youngblood and the theme music",
    "start": "3883359",
    "end": "3889760"
  },
  {
    "text": "for JS party is produced by the mysterious break master cylinder we'll see you again next week thanks for",
    "start": "3889760",
    "end": "3897960"
  },
  {
    "text": "listening",
    "start": "3904400",
    "end": "3907400"
  }
]