[
  {
    "text": "if I can generate a library that's what I want to do I don't care about the underlying technology at all whether it's XML or something else I don't",
    "start": "40",
    "end": "6120"
  },
  {
    "text": "really care I just want like give me a library that's easy to use XML John really Johnny I've used way more XML in",
    "start": "6120",
    "end": "13280"
  },
  {
    "text": "my life than I really care",
    "start": "13280",
    "end": "16320"
  },
  {
    "text": "to this episode is brought to you by our friends at Square develop on the plow from the sellers trust here's what you",
    "start": "18920",
    "end": "24920"
  },
  {
    "text": "can do with square you can Bridge more experiences you can build online mobile and in-person",
    "start": "24920",
    "end": "30240"
  },
  {
    "text": "experiences that connect more customers and sellers you can build custom booking Solutions you can create and track",
    "start": "30240",
    "end": "36040"
  },
  {
    "text": "orders you can accept payments you can manage and curate inventory you can organize customers you can manage",
    "start": "36040",
    "end": "41559"
  },
  {
    "text": "employees you can extend Square gift cards to your app you can use afterpay and all this is powered by the world",
    "start": "41559",
    "end": "48559"
  },
  {
    "text": "class square apis and sdks that enable you to build full featured business apps",
    "start": "48559",
    "end": "53600"
  },
  {
    "text": "for yourself or millions of square sellers so much is available as a square Solutions partner learn more and get",
    "start": "53600",
    "end": "60320"
  },
  {
    "text": "started at Chang log.com Square again Chang log.com [Music]",
    "start": "60320",
    "end": "73780"
  },
  {
    "text": "Square let's do it it's go time welcome to go time the only place you'll hear",
    "start": "79400",
    "end": "86920"
  },
  {
    "text": "diverse discussions from all around the go community merch alert go time t-shirts are restocked in the merch shop",
    "start": "86920",
    "end": "94079"
  },
  {
    "text": "and just in time for Holiday delivery we even have the much anticipated kaisen shirt ready to ship out buy yours at go",
    "start": "94079",
    "end": "101520"
  },
  {
    "text": "time. fm/ merch thanks to fastly for delivering go time super fast to wherever you listen check them out at",
    "start": "101520",
    "end": "108280"
  },
  {
    "text": "fastly.com and to our friends at fly.io deploy your app servers close to your",
    "start": "108280",
    "end": "113360"
  },
  {
    "text": "users no Ops required learn more at fly.io okay here we go",
    "start": "113360",
    "end": "121320"
  },
  {
    "text": "hello everyone and welcome to go time today we're going to be talking about protocol buffers and grpc as well as",
    "start": "121320",
    "end": "127399"
  },
  {
    "text": "some common misconceptions around them today I am joined by OE Shaw who works",
    "start": "127399",
    "end": "132840"
  },
  {
    "text": "on protocol compiler schema registry and RPC tools at buff previously he's worked",
    "start": "132840",
    "end": "137959"
  },
  {
    "text": "on several Thrift compilers and a custom L7 Network protocol so he has a lot of",
    "start": "137959",
    "end": "143120"
  },
  {
    "text": "experience in this space with protocol buffers RPC and related Technologies also if you've ever used the zap logging",
    "start": "143120",
    "end": "149480"
  },
  {
    "text": "package you've probably used O's code o how are you I'm good how are you doing John I am doing well a little bit raspy",
    "start": "149480",
    "end": "157040"
  },
  {
    "text": "in the throat so I apologize for that I'm also hosting with Johnny borico Johnny how are you I'm feeling good I'm",
    "start": "157040",
    "end": "165120"
  },
  {
    "text": "tired but relieved been working on something for a little while and it's finally coming out tomorrow so I'm",
    "start": "165120",
    "end": "170599"
  },
  {
    "text": "pretty excited about that that's awesome release days are always fun yes assuming they go well I hope yours does yes all",
    "start": "170599",
    "end": "178720"
  },
  {
    "text": "right so uh you'll have to let let us know about that once it's released yeah yeah indeed so OE we first started",
    "start": "178720",
    "end": "185480"
  },
  {
    "text": "talking back whenever Matt did an episode on what was it bloat that can come with software MH and this protocol",
    "start": "185480",
    "end": "192319"
  },
  {
    "text": "buffers came up because they're something that when you import them they can lead to a lot of extra code being",
    "start": "192319",
    "end": "197440"
  },
  {
    "text": "imported sort of behind the scenes without realizing it so we wanted to talk a little bit about sort of like",
    "start": "197440",
    "end": "202720"
  },
  {
    "text": "different implementations of these things and all that stuff but first let's just start off with the basics and and what are protocol buffers that's a",
    "start": "202720",
    "end": "209920"
  },
  {
    "text": "great question protocol buffers are actually they're two separate things that are kind of closely related but",
    "start": "209920",
    "end": "216319"
  },
  {
    "text": "it's important to have a little bit of air space between them the first thing they are is they're a little language",
    "start": "216319",
    "end": "222239"
  },
  {
    "text": "for writing schemas for your data and the second thing is that it's also a",
    "start": "222239",
    "end": "227280"
  },
  {
    "text": "binary format to serialize the data um and those two things are closely related",
    "start": "227280",
    "end": "232519"
  },
  {
    "text": "but they're not quite the same ultimately they're a tool to make programmers more efficient so I guess if",
    "start": "232519",
    "end": "239120"
  },
  {
    "text": "we're looking at them as as a tool to make programmers more efficient was that the only reason they were created was just that efficiency I think no but I",
    "start": "239120",
    "end": "246560"
  },
  {
    "text": "think certainly like today that's the most compelling thing about them so if",
    "start": "246560",
    "end": "251720"
  },
  {
    "text": "you imagine you know we're mostly go programmers and go has really found a",
    "start": "251720",
    "end": "257519"
  },
  {
    "text": "home in like building Network Services and building microservices so I imagine that a lot of",
    "start": "257519",
    "end": "262720"
  },
  {
    "text": "go programmers have written a rest API or at least like written some structs to",
    "start": "262720",
    "end": "267880"
  },
  {
    "text": "serialize data to Json and so the way you do that and go is you're writing your rest API and",
    "start": "267880",
    "end": "273680"
  },
  {
    "text": "typically you'll write a g struct for each request and response shape and you'll add some struct tags to tell the",
    "start": "273680",
    "end": "280720"
  },
  {
    "text": "standard lib how to transform your struct into this like text wire format",
    "start": "280720",
    "end": "286560"
  },
  {
    "text": "and that's fine it's actually it's really nice it's pretty ergonomic the problem is that if you have an API you",
    "start": "286560",
    "end": "291759"
  },
  {
    "text": "probably have clients and they might be in typescript in a web browser they might be in cotlin or Swift on mobile",
    "start": "291759",
    "end": "298320"
  },
  {
    "text": "clients Maybe maybe there's some python client on your back end and all those clients end up rewriting that exact same",
    "start": "298320",
    "end": "306120"
  },
  {
    "text": "ghost struct for the request and the response in their language of choice and so you end up with the exact same data",
    "start": "306120",
    "end": "313720"
  },
  {
    "text": "and the same schema for that data Rewritten by hand in go in typescript in",
    "start": "313720",
    "end": "320120"
  },
  {
    "text": "cotlin and Python and C++ all over the place that's just it's a bunch of toil",
    "start": "320120",
    "end": "326800"
  },
  {
    "text": "for not not much purpose it's really prone and it's hard to reason about you",
    "start": "326800",
    "end": "331919"
  },
  {
    "text": "have to manually look at this special part of your code that's exposed to",
    "start": "331919",
    "end": "337000"
  },
  {
    "text": "callers and with every change you have to sit and you have to think okay how is this going to affect my clients like can",
    "start": "337000",
    "end": "343639"
  },
  {
    "text": "I rename this field can I change it from being required to being optional can I change it from being optional to being",
    "start": "343639",
    "end": "350440"
  },
  {
    "text": "required Google was running into this in the early 2000s at the time XML was",
    "start": "350440",
    "end": "357360"
  },
  {
    "text": "really invogue and they were looking for for something that was simpler that was",
    "start": "357360",
    "end": "362520"
  },
  {
    "text": "more productive for programmers and as an important concern for Google but maybe not so much for the rest of us",
    "start": "362520",
    "end": "369120"
  },
  {
    "text": "something that was more efficient for computers and so they invented protocol buffers so I guess I'm thinking of this",
    "start": "369120",
    "end": "375720"
  },
  {
    "text": "like if it's something Google invented for Google scale is this one of those technologies that is only a good fit if",
    "start": "375720",
    "end": "381440"
  },
  {
    "text": "you're a Google or is this something that like what types of applications does this fit well for yeah I think you",
    "start": "381440",
    "end": "388240"
  },
  {
    "text": "know it's certainly compelling if you're at Google scale I mean kind of clearly like they're still protab buff from top",
    "start": "388240",
    "end": "394479"
  },
  {
    "text": "to bottom and most other large you know if you look at a lot of these large tech companies they have some equivalent to",
    "start": "394479",
    "end": "400880"
  },
  {
    "text": "protocol buffers sometimes it's actually Proto buff sometimes it's a very similar system that took a bunch of inspiration",
    "start": "400880",
    "end": "406960"
  },
  {
    "text": "from Proto but for any go I think you",
    "start": "406960",
    "end": "412160"
  },
  {
    "text": "want to avoid redoing the same eror prone work over and over again you know that's why we're not we're not calling",
    "start": "412160",
    "end": "418680"
  },
  {
    "text": "like the P thread read apis directly we're not freeing memory manually like these are just tedious error prone tasks",
    "start": "418680",
    "end": "426879"
  },
  {
    "text": "so if you're building an API and you have clients writing a protuff schema is basically the same amount of work as",
    "start": "426879",
    "end": "433080"
  },
  {
    "text": "writing a ghost struct it looks pretty similar it's like a name a curly brace some field names and some types there's",
    "start": "433080",
    "end": "439720"
  },
  {
    "text": "some numbers for the fields but other than that it's basically the same thing you run a code generator and you get",
    "start": "439720",
    "end": "446440"
  },
  {
    "text": "more or less the same ghost structs that you would have written by hand but you can add a little bit to your",
    "start": "446440",
    "end": "452160"
  },
  {
    "text": "code gen invocation and you can also get like Ruby classes or typescript types or",
    "start": "452160",
    "end": "458080"
  },
  {
    "text": "python classes or cotet stuff and you can get the code that you generate it",
    "start": "458080",
    "end": "464599"
  },
  {
    "text": "works with the protuff binary format but it works equally well with Json so in a",
    "start": "464599",
    "end": "470720"
  },
  {
    "text": "lot of circumstances I certainly use protocol buffers just as a schema language for my",
    "start": "470720",
    "end": "476599"
  },
  {
    "text": "Json what are you trading off this sounds all good but there's always a trade-off of course there is yeah so I",
    "start": "476599",
    "end": "484319"
  },
  {
    "text": "think in go you're not trading off a ton cuz you would have been handwriting these strs one way or another I don't",
    "start": "484319",
    "end": "490680"
  },
  {
    "text": "see much go code that's really dealing with Json as like map string any as part",
    "start": "490680",
    "end": "497080"
  },
  {
    "text": "of writing an API in other languages you do trade-off the ability to have like",
    "start": "497080",
    "end": "502560"
  },
  {
    "text": "really Loosely typed apis so in Python like you could certainly UNM Marshall",
    "start": "502560",
    "end": "508479"
  },
  {
    "text": "Json into a dictionary without any typ pins and just pass that around and",
    "start": "508479",
    "end": "513800"
  },
  {
    "text": "that's totally fine it takes basically no code and protuff encourages you to do",
    "start": "513800",
    "end": "519680"
  },
  {
    "text": "that differently you need a schema in go sometimes like the protuff",
    "start": "519680",
    "end": "525680"
  },
  {
    "text": "representation of a type in Json is not what you might expect so like if you",
    "start": "525680",
    "end": "531640"
  },
  {
    "text": "serialize an int64 to Json with protocol buffers what you get is a string and that's because",
    "start": "531640",
    "end": "539320"
  },
  {
    "text": "because like many Json run times like treat numbers as floats and so there",
    "start": "539320",
    "end": "546240"
  },
  {
    "text": "isn't 64 bits of space available so the only safe way to send them around is as a string this is usually not it's not a",
    "start": "546240",
    "end": "555240"
  },
  {
    "text": "major concern because the other end of the transaction is also using protocol buffers and so it's parsing the string",
    "start": "555240",
    "end": "562200"
  },
  {
    "text": "automatically and turning it into an INT on the other end you have to deal with the protuff tool chain which is often",
    "start": "562200",
    "end": "569200"
  },
  {
    "text": "has some rough edges and we can talk about all that stuff in detail if you want but especially in go I don't think",
    "start": "569200",
    "end": "575440"
  },
  {
    "text": "the trade-off started that you're getting a lot for free and you're only giving up a little bit when you",
    "start": "575440",
    "end": "580839"
  },
  {
    "text": "mentioned the uh trade-off of not being able to have like the more flexible API",
    "start": "580839",
    "end": "586240"
  },
  {
    "text": "I guess I also view that as like a win like it's kind of a trade-off but also kind of a win because I've also worked",
    "start": "586240",
    "end": "591480"
  },
  {
    "text": "with apis where trying to write a library and go that works with it is very challenging because you can tell",
    "start": "591480",
    "end": "596839"
  },
  {
    "text": "the API was written in like python where a certain field can be like one of six types and it's really annoying to parse",
    "start": "596839",
    "end": "603640"
  },
  {
    "text": "because it's like I got to figure out which one it is before I even try to parse it that's right yeah one of my",
    "start": "603640",
    "end": "609320"
  },
  {
    "text": "co-workers often describes prabu as static typing for data and it has",
    "start": "609320",
    "end": "614440"
  },
  {
    "text": "basically the same trade-offs as static typing for programming languages you have to declare your types up front",
    "start": "614440",
    "end": "620880"
  },
  {
    "text": "changing them can be a little bit harder like you have to think about forward and backward compatibility but you get apis that are",
    "start": "620880",
    "end": "627640"
  },
  {
    "text": "kind of self-documenting in a nice way often it's easier for your ID to do work for you it's easier for tools to catch",
    "start": "627640",
    "end": "634839"
  },
  {
    "text": "errors so I mean I think this is a familiar debate and in general like in",
    "start": "634839",
    "end": "640399"
  },
  {
    "text": "2022 it seems like big parts of the industry are moving back towards static typing right typescript is super",
    "start": "640399",
    "end": "648560"
  },
  {
    "text": "popular python is growing typ hints Ruby is growing gradual typing via a bunch of",
    "start": "648560",
    "end": "653800"
  },
  {
    "text": "stripe stuff and rust is like taking type systems into areas that many other",
    "start": "653800",
    "end": "659639"
  },
  {
    "text": "languages have avoided this kind of reminds me of like there's a couple",
    "start": "659639",
    "end": "665040"
  },
  {
    "text": "Tools around Json apis where you basically Define a schema and it helps generate libraries for various languages",
    "start": "665040",
    "end": "672000"
  },
  {
    "text": "I think was Swagger one of those Swagger is a little bit more extensive Swagger",
    "start": "672000",
    "end": "677320"
  },
  {
    "text": "at least as we've talked about them right protocol buffers are just about structs they're about like data shapes",
    "start": "677320",
    "end": "683560"
  },
  {
    "text": "okay Swagger covers that but it also covers kind of the shape of your rest API",
    "start": "683560",
    "end": "689480"
  },
  {
    "text": "maybe this whole show is going to be an unpopular opinion but like my view of like if you look at a",
    "start": "689480",
    "end": "696760"
  },
  {
    "text": "Swagger schema or you look at Jason schema you look at and you're like oh my God am I really supposed to be writing",
    "start": "696760",
    "end": "703320"
  },
  {
    "text": "this by hand it's so Bose like it's just",
    "start": "703320",
    "end": "708600"
  },
  {
    "text": "scads of nested Json I haven't used Swagger a lot so I can't speak to that",
    "start": "708600",
    "end": "713720"
  },
  {
    "text": "but I can definitely say I've seen a lot of companies that were writing apis that needed like basically it's a public API",
    "start": "713720",
    "end": "719800"
  },
  {
    "text": "so they wanted to provide libraries for various languages MH and you would think Swagger was a perfect fit but because",
    "start": "719800",
    "end": "726920"
  },
  {
    "text": "for one reason or another they opted not to use Swagger and I think a lot of times it probably was like you were describing it just wasn't very appealing",
    "start": "726920",
    "end": "733760"
  },
  {
    "text": "to learn and use Swagger when they looked at it I'm kind of wondering how you'd compare protocol buffers to",
    "start": "733760",
    "end": "739120"
  },
  {
    "text": "something like Swagger since I think a lot of people have probably heard of swagger but I'm not positive I think",
    "start": "739120",
    "end": "744440"
  },
  {
    "text": "that's true like Swagger the new name is open API there have been a couple of versions so they're on open API V3 now",
    "start": "744440",
    "end": "750880"
  },
  {
    "text": "and it includes most of Json schema which is like the data struct part of the language we can talk about like the",
    "start": "750880",
    "end": "758360"
  },
  {
    "text": "the network API parts of it later I think it's a better fit for comparing to grpc but for the data parts of it it has",
    "start": "758360",
    "end": "766000"
  },
  {
    "text": "a really kind of impoverished type system so the only native types in Json",
    "start": "766000",
    "end": "773040"
  },
  {
    "text": "API are the types that JavaScript supports so you have array string number",
    "start": "773040",
    "end": "779040"
  },
  {
    "text": "object that's it that means that like everything you build on top of that ends up like not feeling that great like",
    "start": "779040",
    "end": "785720"
  },
  {
    "text": "there's really no way to say this is a date the best you can do is say like",
    "start": "785720",
    "end": "791959"
  },
  {
    "text": "this is my handwritten object type that has these numbers affiliated with it or",
    "start": "791959",
    "end": "797320"
  },
  {
    "text": "this is a string and here's a Rex that validates that it's ISO you know",
    "start": "797320",
    "end": "802440"
  },
  {
    "text": "8601 and it's just really really verbose like if you're talking about saying like",
    "start": "802440",
    "end": "808560"
  },
  {
    "text": "I could write a g struct with some struct tags or I could write Jason schema writing the Jason schema is a ton",
    "start": "808560",
    "end": "815040"
  },
  {
    "text": "more work so there's this like little cottage industry I mean well I guess",
    "start": "815040",
    "end": "820240"
  },
  {
    "text": "very large industry of like goys to write these schemas because they're so laborious see but now I have to buy",
    "start": "820240",
    "end": "828160"
  },
  {
    "text": "another tool and learn how to use that tool and maybe it has its own quirks and",
    "start": "828160",
    "end": "833680"
  },
  {
    "text": "yeah so for vendors it's great they're like yeah we'll sell you something to do all this you know for",
    "start": "833680",
    "end": "839440"
  },
  {
    "text": "you but yeah now I have another dependency exactly and if you look at the specification like there are parts",
    "start": "839440",
    "end": "845000"
  },
  {
    "text": "of this language that I understand why in a really Loosely Federated world of",
    "start": "845000",
    "end": "850199"
  },
  {
    "text": "the web some of these things make sense but if you're a company or a person publishing a schema they're a little",
    "start": "850199",
    "end": "856199"
  },
  {
    "text": "offputting to me as a go programmer you're like oh I can include a reference",
    "start": "856199",
    "end": "861240"
  },
  {
    "text": "to another schema on a different server and just like transclude it into my",
    "start": "861240",
    "end": "866839"
  },
  {
    "text": "schema there's a whole separate part of spec about meta schemas so there's like some form of meta programming in the",
    "start": "866839",
    "end": "873399"
  },
  {
    "text": "schema language there's a special call out when you're implementing Cod genen for these things especially at runtime",
    "start": "873399",
    "end": "880720"
  },
  {
    "text": "that schemas can mutually reference each other so you have to take special care to break cycles and avoid like infinite",
    "start": "880720",
    "end": "887560"
  },
  {
    "text": "recursion these are just not the kind of problems that I want to think about when I'm defining a",
    "start": "887560",
    "end": "892759"
  },
  {
    "text": "struct I want this whole class of problems to be impossible I generally I want this world to be as simple and",
    "start": "892759",
    "end": "899240"
  },
  {
    "text": "predictable as it can be protuff is much more on that side of the world part of",
    "start": "899240",
    "end": "905199"
  },
  {
    "text": "why I think that's so appealing and go is that protocol buffers and ghost share a lot of DNA from Google a Proto buff",
    "start": "905199",
    "end": "911759"
  },
  {
    "text": "message looks a lot like a ghost struct and so if you are a go developer and",
    "start": "911759",
    "end": "917320"
  },
  {
    "text": "you're thinking which of these should I do the amount of effort it takes to write a prod schema is about what you",
    "start": "917320",
    "end": "924360"
  },
  {
    "text": "would spend on a ghost draft anyways um you get a rich type system there's like ins fix size variable size byes",
    "start": "924360",
    "end": "933279"
  },
  {
    "text": "strings objects that are well-known types that get shared across the whole ecosystem for like durations",
    "start": "933279",
    "end": "941880"
  },
  {
    "text": "dates there are a bunch of Escape hatches if you need them for Loosely typed data so John for the situation you",
    "start": "941880",
    "end": "948560"
  },
  {
    "text": "describing you can say like this field is one of the following types and that",
    "start": "948560",
    "end": "954720"
  },
  {
    "text": "generates code that's a little bit awkward kind of unavoidably but you can express this you can also express the",
    "start": "954720",
    "end": "961519"
  },
  {
    "text": "idea like this field is just a thing and like I have no idea what it is we'll find out at runtime those things are just I think",
    "start": "961519",
    "end": "969120"
  },
  {
    "text": "appropriately irritating to use it kind of gives you a hint that you're going down the wrong road yeah so",
    "start": "969120",
    "end": "976800"
  },
  {
    "text": "if we're looking at like um protocol buffers I think it's commonly compared with things like Json or maybe",
    "start": "976800",
    "end": "982480"
  },
  {
    "text": "graphql would you compare it to graphql okay so if we're looking at those things and we're trying to expose something to",
    "start": "982480",
    "end": "988880"
  },
  {
    "text": "let's say the public we wanted to build an API that has public consumers not just internally y are protocol buffer is",
    "start": "988880",
    "end": "994480"
  },
  {
    "text": "a good fit for that type of situation I think they are with one caveat I think",
    "start": "994480",
    "end": "999839"
  },
  {
    "text": "protuff is simple especially if you use protuff schemas to to accept and send",
    "start": "999839",
    "end": "1007680"
  },
  {
    "text": "Json this is really easy for other people to use because they don't really have to know about the pr buff part at",
    "start": "1007680",
    "end": "1013519"
  },
  {
    "text": "all if they would like to continue handwriting classes to generate Json they're more than welcome to do so but",
    "start": "1013519",
    "end": "1020240"
  },
  {
    "text": "they have this kind of efficient binary protocol available to them usually when you talk about exposing protuff apis",
    "start": "1020240",
    "end": "1026760"
  },
  {
    "text": "you're talking about grpc right because protu the language is really just about",
    "start": "1026760",
    "end": "1032280"
  },
  {
    "text": "data it doesn't have anything like an interface or a function say like my API",
    "start": "1032280",
    "end": "1038558"
  },
  {
    "text": "does something without grpc the one caveat right is that",
    "start": "1038559",
    "end": "1045640"
  },
  {
    "text": "historically like the tools to work with protocol buffers are kind of rough like they're open source kind of directly",
    "start": "1045640",
    "end": "1052400"
  },
  {
    "text": "from the way Google uses them and within Google they're part of this really sophisticated unified build system and",
    "start": "1052400",
    "end": "1059320"
  },
  {
    "text": "monor repo and all this other stuff so the protuff tools are this really low",
    "start": "1059320",
    "end": "1064480"
  },
  {
    "text": "level component in a very complicated stack outside of Google well we just",
    "start": "1064480",
    "end": "1070799"
  },
  {
    "text": "have the protuff piece but not the rest of the stack and so if you're building",
    "start": "1070799",
    "end": "1076159"
  },
  {
    "text": "an external facing API and you're working in go and you've got all this PR stuff figured out but your client is",
    "start": "1076159",
    "end": "1084240"
  },
  {
    "text": "like a node like a node client and you go to them and say well step one is you",
    "start": "1084240",
    "end": "1090520"
  },
  {
    "text": "need to write a make file and you need to call protoc C in the following ways",
    "start": "1090520",
    "end": "1095559"
  },
  {
    "text": "they look at you like you're crazy like what a make file like what are we living in 1986 what are you talking",
    "start": "1095559",
    "end": "1102559"
  },
  {
    "text": "about so I think there's um there's a lot of space to build tools that make",
    "start": "1102559",
    "end": "1108159"
  },
  {
    "text": "that easier and more approachable there's no reason why given a protuff schema your instructions to the client",
    "start": "1108159",
    "end": "1114600"
  },
  {
    "text": "can't be like hey don't worry about any of the prot stuff like from your",
    "start": "1114600",
    "end": "1120760"
  },
  {
    "text": "perspective I hand wrote a client for you and it's an npm package just download that and on your end you're",
    "start": "1120760",
    "end": "1127520"
  },
  {
    "text": "like yeah I autogenerated the package and I uploaded and I didn't handwrite anything but to your callers it should",
    "start": "1127520",
    "end": "1134480"
  },
  {
    "text": "look like they're just getting a package so we've talked about sort of the efficiency of not having to sort of uh",
    "start": "1134480",
    "end": "1141640"
  },
  {
    "text": "hand Wrangle all these things right but we haven't talked really about we mention it but never really talked about",
    "start": "1141640",
    "end": "1147200"
  },
  {
    "text": "sort of the efficiency of Transport right basically when you have that Banner format can you sort of clarify",
    "start": "1147200",
    "end": "1152440"
  },
  {
    "text": "what the major gains of the ban format are over to dist traditional means yeah",
    "start": "1152440",
    "end": "1158480"
  },
  {
    "text": "typically binary formats have a bunch of optimizations available to them that",
    "start": "1158480",
    "end": "1164039"
  },
  {
    "text": "text based formats like could technically use but rarely do",
    "start": "1164039",
    "end": "1169200"
  },
  {
    "text": "um so if you imagine how a computer is parsing a Json object usually it's like",
    "start": "1169200",
    "end": "1177000"
  },
  {
    "text": "you know you're kind of like advancing one Rune at a time and then kind of",
    "start": "1177000",
    "end": "1182240"
  },
  {
    "text": "maintaining some look back and you're looking for a bunch of object delimiters and keeping state for How Deeply nested",
    "start": "1182240",
    "end": "1187799"
  },
  {
    "text": "in this object you are it's just kind of this like complicated stateful process",
    "start": "1187799",
    "end": "1192919"
  },
  {
    "text": "binary protocols typically work differently you know it'll say hey the next field coming coming up is a string",
    "start": "1192919",
    "end": "1199919"
  },
  {
    "text": "and it's 70 bytes long and then the parser just like grabs the next 70 bytes and interprets them as a string in",
    "start": "1199919",
    "end": "1205840"
  },
  {
    "text": "memory and is done there's no looking for delimeters there's no escaping there's none of this stuff that makes Json complicated from a like parser",
    "start": "1205840",
    "end": "1213720"
  },
  {
    "text": "level and typically like protuff goes out of its way to try and make that binary like small so it does a bunch of",
    "start": "1213720",
    "end": "1221840"
  },
  {
    "text": "tricks to minimize the size of things ultimately like these are all really clever tricks but Json is also really",
    "start": "1221840",
    "end": "1229000"
  },
  {
    "text": "widely used you can make a Json incredibly fast um there's a CS professor in Canada named Daniel lamir",
    "start": "1229000",
    "end": "1234640"
  },
  {
    "text": "who did a bunch of research in using like simd instructions to parse Json and",
    "start": "1234640",
    "end": "1240159"
  },
  {
    "text": "he has like a commodity computer parsing like gigabytes of Json per second I mean it's absurd and compression is really",
    "start": "1240159",
    "end": "1248039"
  },
  {
    "text": "effective like even protuff the binary format benefits from being compressed so like once you're gzipping the Json and",
    "start": "1248039",
    "end": "1254760"
  },
  {
    "text": "gzipping the binary like the difference gets a lot smaller so I think once",
    "start": "1254760",
    "end": "1260640"
  },
  {
    "text": "you're using a protuff schema you have this binary format at your fingertips",
    "start": "1260640",
    "end": "1265720"
  },
  {
    "text": "and so you might as well use it I mean even if the Practical perfect Improvement for your particular use case",
    "start": "1265720",
    "end": "1271880"
  },
  {
    "text": "is like 20% 20% kind of a lot you might as well just grab it and get that benefit if it's sitting right in front",
    "start": "1271880",
    "end": "1278200"
  },
  {
    "text": "of you but I don't know that that benefit is really so significant when all is said",
    "start": "1278200",
    "end": "1284760"
  },
  {
    "text": "and done like that it's really the motivating use case for protocol buffers mhm does that make sense Johnny or was",
    "start": "1284760",
    "end": "1291400"
  },
  {
    "text": "that just a bunch of noise no no no that makes sense so while you were talking it occurred to me or I just recall that the",
    "start": "1291400",
    "end": "1299120"
  },
  {
    "text": "ghost standard library has an encoding mechanism which supports binary",
    "start": "1299120",
    "end": "1304520"
  },
  {
    "text": "transmitting Marshall binary there there is that but I'm also thinking of the Gob",
    "start": "1304520",
    "end": "1309720"
  },
  {
    "text": "package yes let's talk about the Gob package like why why is it that we're not all using Gob is it that we're not",
    "start": "1309720",
    "end": "1315559"
  },
  {
    "text": "all go developers I mean that's partly it right but the god package my recollection at",
    "start": "1315559",
    "end": "1321320"
  },
  {
    "text": "least is that the god package makes some very important like there's some very important caveats in the package dock",
    "start": "1321320",
    "end": "1327600"
  },
  {
    "text": "for Gob one of them is that this is just my recollection I can check real quick but from what I remember the binary Gob",
    "start": "1327600",
    "end": "1335880"
  },
  {
    "text": "representation is not guaranteed to be stable across Go versions mhm so like",
    "start": "1335880",
    "end": "1341240"
  },
  {
    "text": "forget interop with JavaScript like if you're on go 119 interop with 117 might",
    "start": "1341240",
    "end": "1346279"
  },
  {
    "text": "be busted too mhm I think it is also not like specifically",
    "start": "1346279",
    "end": "1352360"
  },
  {
    "text": "optimized for like speed or size it's just like not that widely used right mhm",
    "start": "1352360",
    "end": "1359640"
  },
  {
    "text": "but just kind of by the nature of the business buff does we spend a lot of time with protocol buffers and like",
    "start": "1359640",
    "end": "1364760"
  },
  {
    "text": "talking to various people kind of like deep in protuff at Google like at least",
    "start": "1364760",
    "end": "1370640"
  },
  {
    "text": "what I've been told is that there's so much protuff from top to bottom in",
    "start": "1370640",
    "end": "1376120"
  },
  {
    "text": "Google's internal stack that like relatively modest per improvements to",
    "start": "1376120",
    "end": "1382799"
  },
  {
    "text": "protuff can change Google's overall CPU use by like 3 or 4% MH so like PFF is",
    "start": "1382799",
    "end": "1391919"
  },
  {
    "text": "language agnostic it has a specification that's public and it has just like a",
    "start": "1391919",
    "end": "1398440"
  },
  {
    "text": "tremendous number of miles put on it and I don't think you get any of that from Gob mhm yep fair enough Gob is super",
    "start": "1398440",
    "end": "1406559"
  },
  {
    "text": "convenient though it you can just like Marshall a thing and that's really nice I would love it if you could do that",
    "start": "1406559",
    "end": "1412600"
  },
  {
    "text": "with protocol buffers you just can't you need go on either side of the fence obviously and and that is one of the",
    "start": "1412600",
    "end": "1418600"
  },
  {
    "text": "drawbacks right you don't have that cross language support unless everybody starts implementing a go encoder and decoder and and whatnot and like parsing",
    "start": "1418600",
    "end": "1425880"
  },
  {
    "text": "a Gob like the schema is a struct right so parsing that requires parsing go",
    "start": "1425880",
    "end": "1431880"
  },
  {
    "text": "right which is kind of a tall order it's not totally obvious to me at least",
    "start": "1431880",
    "end": "1438559"
  },
  {
    "text": "I think it would be challenging to write a tool for example that looks at a diff",
    "start": "1438559",
    "end": "1444760"
  },
  {
    "text": "between two go files and says like hey stop right there MH you broke your",
    "start": "1444760",
    "end": "1451039"
  },
  {
    "text": "clients MH MH if you deploy this change all your existing clients are going to be broken it's like I'm sure it's doable",
    "start": "1451039",
    "end": "1458159"
  },
  {
    "text": "but it's not trivial it's not quite as straightforward as it is with a simpler more purpose-built thing like PR this",
    "start": "1458159",
    "end": "1465559"
  },
  {
    "text": "conversation also reminded me of it one point in the past we talked about the Json parser in the standard library and",
    "start": "1465559",
    "end": "1471679"
  },
  {
    "text": "it's like not as fast as some third party Json parsers because if I recall correctly the Json parser has to like",
    "start": "1471679",
    "end": "1477520"
  },
  {
    "text": "read the entire Json object to verify that it's valid Json first and then it actually goes back to parsing it a",
    "start": "1477520",
    "end": "1483240"
  },
  {
    "text": "second time I believe that's right I'd have to go back and check though but as a result like it means that it's not",
    "start": "1483240",
    "end": "1489279"
  },
  {
    "text": "like the most optimal parser whereas like when you mentioned the binary format it's just assuming this is valid",
    "start": "1489279",
    "end": "1495200"
  },
  {
    "text": "data we're going to go ahead and use it but but it's worth noting that for most people that optimization isn't so",
    "start": "1495200",
    "end": "1502159"
  },
  {
    "text": "important that they've replaced the standard library with a custom Json parser of some sort that's right and you",
    "start": "1502159",
    "end": "1508679"
  },
  {
    "text": "know you can get I mean to be fair as the author of like a Bizarro custom Json",
    "start": "1508679",
    "end": "1515760"
  },
  {
    "text": "encoder is like not that hard to encode Json much much faster like zap the",
    "start": "1515760",
    "end": "1524240"
  },
  {
    "text": "logging package eror like part of why it's faster is that it has its own Json encoder and that's pretty easy cuz Json",
    "start": "1524240",
    "end": "1531279"
  },
  {
    "text": "is like a really simple string format so even if you want to make Json really",
    "start": "1531279",
    "end": "1537640"
  },
  {
    "text": "fast you can do that by just biting off half the problem like if you make encoding super fast and decoding is",
    "start": "1537640",
    "end": "1543720"
  },
  {
    "text": "still like not that fast well that's 50% of the win for like 10% of the",
    "start": "1543720",
    "end": "1550060"
  },
  {
    "text": "[Music]",
    "start": "1550060",
    "end": "1556679"
  },
  {
    "text": "effort [Music]",
    "start": "1556679",
    "end": "1561840"
  },
  {
    "text": "hey friends this episode is brought to you by my friends and potentially your friends too at fire hydrant and I'm here",
    "start": "1561840",
    "end": "1568799"
  },
  {
    "text": "with Robert Ross founder and CEO of fire hydrant and Robert there are several",
    "start": "1568799",
    "end": "1573919"
  },
  {
    "text": "options out there for Incident Management but what is it that makes fire hydrant different the reason that",
    "start": "1573919",
    "end": "1580279"
  },
  {
    "text": "we think that fire hydrant is is on to something is cuz we're meeting companies really where they are we faced the same",
    "start": "1580279",
    "end": "1587159"
  },
  {
    "text": "problems that every company in the industry that is building and releasing software is also facing so where you",
    "start": "1587159",
    "end": "1593679"
  },
  {
    "text": "want people to be able to sign up for fire hydrant and immediately be able to kick off an incident using the best",
    "start": "1593679",
    "end": "1599960"
  },
  {
    "text": "practices that we've built and we've experienced and have gathered through the other amazing customers that use our",
    "start": "1599960",
    "end": "1605919"
  },
  {
    "text": "tool it really is a very quick time to value and we want people to have a long jump from where they are to where they",
    "start": "1605919",
    "end": "1612720"
  },
  {
    "text": "want to be in Incident Management I love it thank you Robert small teams up up to",
    "start": "1612720",
    "end": "1617919"
  },
  {
    "text": "10 people can get started for free with all fire hydrant features included there's no credit card required to sign",
    "start": "1617919",
    "end": "1623279"
  },
  {
    "text": "up they are making it too easy to get started so check them out at fireh hydrant dcom again fireh hydrant",
    "start": "1623279",
    "end": "1632520"
  },
  {
    "text": "[Music]",
    "start": "1632570",
    "end": "1643368"
  },
  {
    "text": "dcom [Music]",
    "start": "1646520",
    "end": "1656720"
  },
  {
    "text": "so we've been talking about protocol buffers which are you know how we're going to format the data generally when",
    "start": "1656720",
    "end": "1662320"
  },
  {
    "text": "this conversation comes up you don't hear about protocol buffers on their own you hear about protocol buffers and grpc",
    "start": "1662320",
    "end": "1668200"
  },
  {
    "text": "so what is the grpc part of this so I mean let's go back to our we're building",
    "start": "1668200",
    "end": "1674000"
  },
  {
    "text": "a rest API example so we're ready structs for our requests and",
    "start": "1674000",
    "end": "1679960"
  },
  {
    "text": "responses other than implementing our business logic what's the other work we're doing basically what we're doing",
    "start": "1679960",
    "end": "1685919"
  },
  {
    "text": "is we're designing a routing scheme so you're saying okay my I have some function that's going to get a list of",
    "start": "1685919",
    "end": "1693039"
  },
  {
    "text": "users and maybe the users are scoped to like one organization and I can pass",
    "start": "1693039",
    "end": "1699159"
  },
  {
    "text": "some filters to the query how do I represent that in a rest API I sit down",
    "start": "1699159",
    "end": "1705080"
  },
  {
    "text": "and I say like okay this is like a read so it's probably going to be a get and then the organization ID if like most",
    "start": "1705080",
    "end": "1711919"
  },
  {
    "text": "rest apis that I've seen that's going to go in the URL so it's going to be get you know slorg SL1 SL",
    "start": "1711919",
    "end": "1719279"
  },
  {
    "text": "users and then I'm going to take my filter parameters and I'm going to put them in as query params and now I'm in",
    "start": "1719279",
    "end": "1726279"
  },
  {
    "text": "like hand serializing territory so I need to decide how to represent every type that I accept as a filter as a",
    "start": "1726279",
    "end": "1733399"
  },
  {
    "text": "string in query parameters if any of those parameters are arrays we just",
    "start": "1733399",
    "end": "1738799"
  },
  {
    "text": "start praying like no one knows how to represent an array in a corate parameter do we use commas do I just pass the",
    "start": "1738799",
    "end": "1745080"
  },
  {
    "text": "parameter 18 times like do I just give up and serialize it to Json and then like URL Escape it and shove that in the",
    "start": "1745080",
    "end": "1752159"
  },
  {
    "text": "Cy prams no one knows these are all like",
    "start": "1752159",
    "end": "1757600"
  },
  {
    "text": "really low rent decisions like nobody in practice I think basically nobody cares",
    "start": "1757600",
    "end": "1764960"
  },
  {
    "text": "like I just wanted to get my data and most of my clients if they're looking at",
    "start": "1764960",
    "end": "1770440"
  },
  {
    "text": "any of this they're upset like I just wanted you to hand me code to call this",
    "start": "1770440",
    "end": "1775760"
  },
  {
    "text": "API and these Plumbing details are like not all that",
    "start": "1775760",
    "end": "1781000"
  },
  {
    "text": "interesting so what protuff does is it just like it has an equivalent of ghost",
    "start": "1781000",
    "end": "1786440"
  },
  {
    "text": "struct it has an equivalent of an interface you give it a name you write a curly BRAC and then you write a function",
    "start": "1786440",
    "end": "1792679"
  },
  {
    "text": "name with some input parameters and output parameters the inputs and outputs are all all protuff",
    "start": "1792679",
    "end": "1798600"
  },
  {
    "text": "messages and so in this world I would write an interface and I would call it",
    "start": "1798600",
    "end": "1804600"
  },
  {
    "text": "user service or user API and it would have a function called get",
    "start": "1804600",
    "end": "1810000"
  },
  {
    "text": "users and that function would take a protuff message with like nice strongly",
    "start": "1810000",
    "end": "1815240"
  },
  {
    "text": "typed arguments I could have the organization ID in there I could have",
    "start": "1815240",
    "end": "1820320"
  },
  {
    "text": "any number of array types or Maps or whatever I like and all these routing",
    "start": "1820320",
    "end": "1827080"
  },
  {
    "text": "and serialization decisions get made for me in a predictable way and I get nice",
    "start": "1827080",
    "end": "1832240"
  },
  {
    "text": "generated code where all I need to do as the server owner is Implement that go",
    "start": "1832240",
    "end": "1837360"
  },
  {
    "text": "interface so I need to write a struct with a get users method and for the client like because all of this is",
    "start": "1837360",
    "end": "1844679"
  },
  {
    "text": "really regular and predictable it is easy to generate good code what's the",
    "start": "1844679",
    "end": "1851960"
  },
  {
    "text": "alternative like the alternative is something like Swagger right and swag",
    "start": "1851960",
    "end": "1857200"
  },
  {
    "text": "tager or open API they are designed to be able to describe any rest API and so you don't",
    "start": "1857200",
    "end": "1865399"
  },
  {
    "text": "actually avoid any of these decisions you're just you're in the same like tedium of Plumbing decisions but instead",
    "start": "1865399",
    "end": "1873200"
  },
  {
    "text": "of writing them using the net HTTP apis you're writing them in this like big verbose Json",
    "start": "1873200",
    "end": "1879840"
  },
  {
    "text": "document and because the schema supports any way of routing it's really hard to",
    "start": "1879840",
    "end": "1886600"
  },
  {
    "text": "generate good code because there's this gigantic Universe of options and that's",
    "start": "1886600",
    "end": "1892559"
  },
  {
    "text": "really difficult to cope with as a user I think especially a go programmer right",
    "start": "1892559",
    "end": "1897880"
  },
  {
    "text": "like partu feels really familiar like I write some structs I write some interfaces I run a code",
    "start": "1897880",
    "end": "1904039"
  },
  {
    "text": "generator and then as a server I'm just implementing an interface that looks just like the schema I wrote like life",
    "start": "1904039",
    "end": "1910799"
  },
  {
    "text": "is pretty simple and then you use an RPC runtime like grpc you hand it your",
    "start": "1910799",
    "end": "1915960"
  },
  {
    "text": "interface and it starts serving HTTP traffic for you are there alternative run times other than grpc",
    "start": "1915960",
    "end": "1925519"
  },
  {
    "text": "Yes actually from the episode on bloat from a couple of months ago egon's company storage sounds like from their",
    "start": "1925519",
    "end": "1933200"
  },
  {
    "text": "public blog post that they were using grpc and they were dissatisfied with a bunch of things about it and so they",
    "start": "1933200",
    "end": "1939000"
  },
  {
    "text": "wrote an alternate RPC runtime it's called drpc and it basically operates at a",
    "start": "1939000",
    "end": "1945720"
  },
  {
    "text": "lower level in the networking stack but to a programmer it's very similar you",
    "start": "1945720",
    "end": "1951200"
  },
  {
    "text": "write some prabu definitions you generate some code you implement an interface and then you hand that",
    "start": "1951200",
    "end": "1956600"
  },
  {
    "text": "interface over to like a networking package to serve traffic it's incompatible with trpc is that story is",
    "start": "1956600",
    "end": "1964559"
  },
  {
    "text": "a little complicated but it's like operating directly at a TCP level so it's not serving HTTP traffic but again",
    "start": "1964559",
    "end": "1971240"
  },
  {
    "text": "as a programmer it looks pretty similar twitch has a similar thing called torp Thrift is is very similar to protocol",
    "start": "1971240",
    "end": "1979039"
  },
  {
    "text": "buffers and it has its own wire format there's Duo from I think Alibaba which",
    "start": "1979039",
    "end": "1985440"
  },
  {
    "text": "is like kind of similar in principle okay it's interesting to me that this is",
    "start": "1985440",
    "end": "1990960"
  },
  {
    "text": "a problem that has there's been enough solutions to this problem that I think it makes it pretty clear that developers",
    "start": "1990960",
    "end": "1997279"
  },
  {
    "text": "are like hey this is a struggle even an example I can think of is Matt was supposed to join us but he couldn't but",
    "start": "1997279",
    "end": "2004039"
  },
  {
    "text": "Matt whenever he was building Pace uh created a library called Auto that you would basically create go I think it was",
    "start": "2004039",
    "end": "2011039"
  },
  {
    "text": "Ghost structs and interfaces and it would generate a JavaScript library that would connect to and then it would",
    "start": "2011039",
    "end": "2016679"
  },
  {
    "text": "generate like a go server and then you would sort of just plug in the rest of the code yep it was meant to be relatively simplistic I think and just",
    "start": "2016679",
    "end": "2023360"
  },
  {
    "text": "support their needs but it's interesting to me that even in those cases people will go out of their way to build",
    "start": "2023360",
    "end": "2029279"
  },
  {
    "text": "something on their own when other Solutions like grpc do exist so I guess",
    "start": "2029279",
    "end": "2034399"
  },
  {
    "text": "my question to this is why do you think people people invent a new simpler version when something like grpc exists",
    "start": "2034399",
    "end": "2041600"
  },
  {
    "text": "is it the complexity of grpc is it something else I don't know I mean have you guys worked with grpc I have not",
    "start": "2041600",
    "end": "2047919"
  },
  {
    "text": "that much Johnny's smiling I think the answer is probably yes I have so Johnny like you tell me like are you whipping",
    "start": "2047919",
    "end": "2053118"
  },
  {
    "text": "out grpc go for your personal projects I've kind of been to the place where",
    "start": "2053119",
    "end": "2058240"
  },
  {
    "text": "like I had to make that decision right I was like basically the trade-off I was making in my head is look I can go and",
    "start": "2058240",
    "end": "2063638"
  },
  {
    "text": "try to Wrangle something myself or I can take something that is off the shelf and",
    "start": "2063639",
    "end": "2068800"
  },
  {
    "text": "just accept whatever tradeoffs that presents but just get my job done right so I'm not going to be writing myself a",
    "start": "2068800",
    "end": "2075960"
  },
  {
    "text": "new runtime or a new protocol or a new whatever it is because that's not the job right it's like saying oh I need to",
    "start": "2075960",
    "end": "2081358"
  },
  {
    "text": "write more I need to publish blog post more let me go write a blog engine first right yeah you got to start by writing a",
    "start": "2081359",
    "end": "2086878"
  },
  {
    "text": "markdown parsel Johnny it's the only way to start if I just want to play around and for educational purposes and I just want",
    "start": "2086879",
    "end": "2093560"
  },
  {
    "text": "to reverse engineer something or build my own just so I can educate myself and know how something works yeah that's fine but if I'm like trying to ship",
    "start": "2093560",
    "end": "2100000"
  },
  {
    "text": "something heck no I'm going to go with what most people are using I'm going to pick something off the shelf or you know",
    "start": "2100000",
    "end": "2105760"
  },
  {
    "text": "go grpc whatever it is and I know that's going to work for my use cases and and call it a day so it depends on what it",
    "start": "2105760",
    "end": "2111200"
  },
  {
    "text": "is I'm trying to do I think that's right yeah I think a lot of people find themselves in that situation right",
    "start": "2111200",
    "end": "2116240"
  },
  {
    "text": "there's only so many problems in the world that you're interested enough in to really like peek under the covers and",
    "start": "2116240",
    "end": "2121480"
  },
  {
    "text": "start digging around and writing your own stuff and so I've never met Matt or",
    "start": "2121480",
    "end": "2126560"
  },
  {
    "text": "talked him but just based on the fact that he gave a gophercon talk about how he builds HTTP apis like he has opinions",
    "start": "2126560",
    "end": "2132920"
  },
  {
    "text": "here and he wrote I assume wrote aotto to like make those opinions kind of",
    "start": "2132920",
    "end": "2138440"
  },
  {
    "text": "easier to apply across a big code base at PACE mhm I would imagine another",
    "start": "2138440",
    "end": "2143680"
  },
  {
    "text": "aspect of this is that because it's a startup when you release open source libraries and things like that it's kind",
    "start": "2143680",
    "end": "2148800"
  },
  {
    "text": "of marketing so I think sometimes people ignore that aspect of like there needs to be marketing with a new business of",
    "start": "2148800",
    "end": "2154880"
  },
  {
    "text": "any sort so like Tech blog posts are a great way to do that and sometimes that means you actually have to do something",
    "start": "2154880",
    "end": "2160839"
  },
  {
    "text": "to write about you're accusing Matt of being a marketer not a developer let's not wave",
    "start": "2160839",
    "end": "2166960"
  },
  {
    "text": "that brush around too wildly okay I mean whether or not Matt was trying to I can say for certain that he knows how to",
    "start": "2166960",
    "end": "2173079"
  },
  {
    "text": "Market to a degree because his blog posts whenever he starts a new company and things like that are all great",
    "start": "2173079",
    "end": "2178640"
  },
  {
    "text": "marketing tools to you know help build a business like you have to do those things if you just build something in",
    "start": "2178640",
    "end": "2183720"
  },
  {
    "text": "isolation and nobody knows about it then it's really hard def find those users so I'm not saying that was his whole",
    "start": "2183720",
    "end": "2189079"
  },
  {
    "text": "reasoning for it but I'm saying that definitely could have played a role in it is hey this is something I'm interested in it's pretty cool and we",
    "start": "2189079",
    "end": "2195960"
  },
  {
    "text": "can build it pretty quickly and use it as a marketing tool so I think that's another factor to consider mhm I think",
    "start": "2195960",
    "end": "2201160"
  },
  {
    "text": "you know there's so like grpc grew out of this internal system at Google that's",
    "start": "2201160",
    "end": "2206680"
  },
  {
    "text": "called stubby and like Google is protuff all the way down and internally it's all",
    "start": "2206680",
    "end": "2213400"
  },
  {
    "text": "run on this stubby thing and stubby is not not on top of HTTP stubby is like a",
    "start": "2213400",
    "end": "2219720"
  },
  {
    "text": "competitor to http and so it's like protuff flavored http2 kind of and it",
    "start": "2219720",
    "end": "2226200"
  },
  {
    "text": "works super well it's like the like word on the street is that like the tight Loops in stubby are handwritten x86",
    "start": "2226200",
    "end": "2233119"
  },
  {
    "text": "written by like you know touring award-winning programmers and stuff right it's like stub's amazing everyone",
    "start": "2233119",
    "end": "2238200"
  },
  {
    "text": "you know it's great perfect eventually Google wants to write an API that somebody else is going to call or they",
    "start": "2238200",
    "end": "2244240"
  },
  {
    "text": "want to like hand you client to like bid on ads and they just like they can't",
    "start": "2244240",
    "end": "2250599"
  },
  {
    "text": "hand you this stubby thing because you look at you're like what is this like how do I write a load balancer for this like what even is any of",
    "start": "2250599",
    "end": "2257400"
  },
  {
    "text": "this and so they were kind like oh okay the rest of the world kind of wants HTTP",
    "start": "2257400",
    "end": "2264400"
  },
  {
    "text": "right we have this robust infrastructure for load balancers and proxies and caching and all this stuff and I have a",
    "start": "2264400",
    "end": "2271319"
  },
  {
    "text": "lot of client libraries and a lot of servers and so I want HTTP but they want something that that",
    "start": "2271319",
    "end": "2276680"
  },
  {
    "text": "is like semantically kind of easy for them to bridge their inside world and their outside world so they need protuff",
    "start": "2276680",
    "end": "2283079"
  },
  {
    "text": "flavored HTTP there were a bunch of exg googlers who had invented things like this at",
    "start": "2283079",
    "end": "2289079"
  },
  {
    "text": "other companies but Google wanted the one that they thought was the right thing and so they they staffed a team",
    "start": "2289079",
    "end": "2294839"
  },
  {
    "text": "and they built grpc grpc is basically used like at the boundary of gcp but it's not like",
    "start": "2294839",
    "end": "2301680"
  },
  {
    "text": "running the internals of Google it's really it's this like bridging technology and then it's for open source use",
    "start": "2301680",
    "end": "2308359"
  },
  {
    "text": "but it has this Aura of Mystique about it where you're like oh grpc it's like it's fancy it's complicated it's big big",
    "start": "2308359",
    "end": "2315079"
  },
  {
    "text": "code base and so there's only in go like there's one grpc implementation it's",
    "start": "2315079",
    "end": "2321440"
  },
  {
    "text": "grpc go and in Java there's basically one implementation written by Google the",
    "start": "2321440",
    "end": "2327520"
  },
  {
    "text": "protocol right is pretty simple you could describe it in English in a couple",
    "start": "2327520",
    "end": "2333400"
  },
  {
    "text": "of paragraphs it's basically like given a protuff schema here's how you figure",
    "start": "2333400",
    "end": "2338880"
  },
  {
    "text": "out the path here's a couple of headers you have to set and here's how you take the bites of protuff and shove them into",
    "start": "2338880",
    "end": "2344560"
  },
  {
    "text": "the body like that's it it's not conceptually so different from rest it's",
    "start": "2344560",
    "end": "2350240"
  },
  {
    "text": "not hard to write a grpc Handler or client from scratch I gave a goer con",
    "start": "2350240",
    "end": "2355839"
  },
  {
    "text": "lightning talk just like a couple months ago we wrote an HTTP Handler from scratch using the standard livb that",
    "start": "2355839",
    "end": "2361480"
  },
  {
    "text": "speaks to your PC in 7 minutes it's like one slide of code",
    "start": "2361480",
    "end": "2367560"
  },
  {
    "text": "and so just like there are a million rest packages and a million flag parsing",
    "start": "2367560",
    "end": "2373920"
  },
  {
    "text": "libraries and a million different like Json libraries there's room in the world",
    "start": "2373920",
    "end": "2380119"
  },
  {
    "text": "for more than one grpc implementation that makes different trade-offs and I think just like you",
    "start": "2380119",
    "end": "2386640"
  },
  {
    "text": "look around you're like building an app like a CLI and at some point you looked around you said like ah am I a purist am",
    "start": "2386640",
    "end": "2394079"
  },
  {
    "text": "I like a standard Li Flags kind of person am I a cobra person right or am I like",
    "start": "2394079",
    "end": "2401599"
  },
  {
    "text": "way out in like left field and I'm using you know like a what's that company uh charm bracelet and like glow and like",
    "start": "2401599",
    "end": "2408280"
  },
  {
    "text": "this like fancy interactive CLIA stuff like I personally am more of a standard",
    "start": "2408280",
    "end": "2413760"
  },
  {
    "text": "Li Flags kind of person it does a job right it does the job and I like it's small and I kind of learned it once and",
    "start": "2413760",
    "end": "2419839"
  },
  {
    "text": "then I just decided that I didn't really care that much about this problem anymore the same thing is true of go",
    "start": "2419839",
    "end": "2425240"
  },
  {
    "text": "there's a go specification there's like the standard go compiler tool chain but there's also GCC go and",
    "start": "2425240",
    "end": "2432079"
  },
  {
    "text": "there's tiny go and they make different tradeoffs that are useful to people there's HTTP which has a bunch of rfc's",
    "start": "2432079",
    "end": "2439160"
  },
  {
    "text": "to define the spec it's a big complicated spec and there are a bunch of implementations right there's engine",
    "start": "2439160",
    "end": "2444400"
  },
  {
    "text": "X there's Apache there's net HTTP and go but there's also fast HTTP right which",
    "start": "2444400",
    "end": "2450079"
  },
  {
    "text": "makes different tradeoffs and there's implementations in other languages too right we didn't write engine X and then",
    "start": "2450079",
    "end": "2456440"
  },
  {
    "text": "say like I don't know everyone else just ffi into ngtb good luck I think there's",
    "start": "2456440",
    "end": "2461520"
  },
  {
    "text": "space for um a grpc implementation that maybe meets people who are writing Rest",
    "start": "2461520",
    "end": "2467800"
  },
  {
    "text": "apis today like where they are instead of making tradeoffs that are appropriate",
    "start": "2467800",
    "end": "2473720"
  },
  {
    "text": "for a Google maybe but like not so appropriate for Pace MH so I suppose",
    "start": "2473720",
    "end": "2479760"
  },
  {
    "text": "this is a good time to say that is what you guys are working on correct at buff Buff's working on a lot of things I",
    "start": "2479760",
    "end": "2484839"
  },
  {
    "text": "think I've alluded before the idea that like the tools for protocol buffers in open source are kind of rough they're",
    "start": "2484839",
    "end": "2490960"
  },
  {
    "text": "pretty low level and they're a little bit they have a big barrier to entry so most of all we working on our protuff",
    "start": "2490960",
    "end": "2496800"
  },
  {
    "text": "tools so buff writes its own protuff compiler from scratch that's a lot we",
    "start": "2496800",
    "end": "2503319"
  },
  {
    "text": "think a lot easier to use than protocy we also work on a schema registry one of the important things about protocol",
    "start": "2503319",
    "end": "2509560"
  },
  {
    "text": "buffers is that if you're using the binary format you can't do anything with the data without the schema so so Json",
    "start": "2509560",
    "end": "2516760"
  },
  {
    "text": "you can just like shove it around you can shove it into a Kafka topic read it at the other end and you're good to go you don't really need any other",
    "start": "2516760",
    "end": "2523240"
  },
  {
    "text": "information for prabu when you slurp out the binary from Kafka you need a schema",
    "start": "2523240",
    "end": "2528800"
  },
  {
    "text": "otherwise you don't know what any of it means it's not self-describing so we build a schema registry that lets you push and pull",
    "start": "2528800",
    "end": "2536599"
  },
  {
    "text": "schemas it also handles code gen so like if I write an API and I Define it in",
    "start": "2536599",
    "end": "2542359"
  },
  {
    "text": "protocol buffers and I push my schema to the buff scheme the registry any client",
    "start": "2542359",
    "end": "2548520"
  },
  {
    "text": "can just npm install a package from the registry automatically without any effort from the server or the client or",
    "start": "2548520",
    "end": "2555240"
  },
  {
    "text": "they can pip install or go get a package with a ready too client that's kind of",
    "start": "2555240",
    "end": "2561520"
  },
  {
    "text": "the business is selling the schema registry our view is that like you said",
    "start": "2561520",
    "end": "2567400"
  },
  {
    "text": "John like grpc and Proto buff are kind of intimately connected and for people to be really",
    "start": "2567400",
    "end": "2573880"
  },
  {
    "text": "excited about using pru for everything they they kind of also have to be excited about using grpc for a lot of",
    "start": "2573880",
    "end": "2579280"
  },
  {
    "text": "things grpc does a lot of things super duper well like if you are very",
    "start": "2579280",
    "end": "2584839"
  },
  {
    "text": "concerned in your rest API about having like excellent http2 flow control",
    "start": "2584839",
    "end": "2589960"
  },
  {
    "text": "between like Australia and Brazil grpc has your back it's really good at stuff",
    "start": "2589960",
    "end": "2595200"
  },
  {
    "text": "like that it's not so good at just being like interoperable with the rest of go",
    "start": "2595200",
    "end": "2600880"
  },
  {
    "text": "it has its own HTTP server its own HTTP stack it's not compatible with net http",
    "start": "2600880",
    "end": "2606240"
  },
  {
    "text": "p is really big like you just can't serve grpc traffic",
    "start": "2606240",
    "end": "2611839"
  },
  {
    "text": "alongside like your website or your like rest API or some like convenient HTTP",
    "start": "2611839",
    "end": "2618400"
  },
  {
    "text": "API to like download a file just because they wrote their own HTTP transport so",
    "start": "2618400",
    "end": "2625760"
  },
  {
    "text": "at buff we work on this thing called connect it's a dropin grpc replacement it's wire compatible works with every",
    "start": "2625760",
    "end": "2632920"
  },
  {
    "text": "grpc client and it's all net HD HTTP it generates HTTP do handlers clients use",
    "start": "2632920",
    "end": "2641920"
  },
  {
    "text": "httpclient and it works with like any MX or any middleware package that works with net HTP so I think to a go",
    "start": "2641920",
    "end": "2650280"
  },
  {
    "text": "programmer it feels a lot more like rather than a whole different world",
    "start": "2650280",
    "end": "2655680"
  },
  {
    "text": "where all of a sudden it doesn't even really feel like HTTP anymore it feels more like someone generated the boring",
    "start": "2655680",
    "end": "2662920"
  },
  {
    "text": "rest code for you but it slots in into the same ecosystem you're familiar with",
    "start": "2662920",
    "end": "2668480"
  },
  {
    "text": "it's like if you know net HTTP if you know middleware that you like like some",
    "start": "2668480",
    "end": "2673520"
  },
  {
    "text": "gzipping Handler or something else if you have a router that you really like like you're into chai",
    "start": "2673520",
    "end": "2680720"
  },
  {
    "text": "or Jin Julian Schmid's HTP R Jen orever right yeah any of those things right",
    "start": "2680720",
    "end": "2687240"
  },
  {
    "text": "this just like slots right in there so your grpc handlers plug in right alongside all your other ones I think",
    "start": "2687240",
    "end": "2693040"
  },
  {
    "text": "there's space for that and I think it's like it's nice it's a tiny bit slower just because it supports much more of",
    "start": "2693040",
    "end": "2700280"
  },
  {
    "text": "HTTP than the grpc stuff does I don't think most of us look at net HTTP and",
    "start": "2700280",
    "end": "2705680"
  },
  {
    "text": "we're like that codes for Chumps so slow unusable in production have you seen",
    "start": "2705680",
    "end": "2711040"
  },
  {
    "text": "some of the new go releases when people set up a Hello World server and they're like ah it's 40% slower it's just how",
    "start": "2711040",
    "end": "2717480"
  },
  {
    "text": "could they I mean it's the same protu runtime and net HTTP right so you're like generally speaking perf wise you're",
    "start": "2717480",
    "end": "2725040"
  },
  {
    "text": "in the ballpark that you're familiar with and that's proven itself to be good for this huge variety of use cases MH we",
    "start": "2725040",
    "end": "2732160"
  },
  {
    "text": "do the same thing for typescript and we're working on a similar runtime for",
    "start": "2732160",
    "end": "2737200"
  },
  {
    "text": "mobile phones I think over there like the standard grpc protog off trade-offs",
    "start": "2737200",
    "end": "2742280"
  },
  {
    "text": "are like a little more out of the norm and so there's more space to do",
    "start": "2742280",
    "end": "2747680"
  },
  {
    "text": "something that feels really good to web developers or mobile developers so you mentioned all sort of statically typed",
    "start": "2747680",
    "end": "2754880"
  },
  {
    "text": "languages for this I imagine that's deliberate you're avoiding some of the more Dynamic stuff you know I think even",
    "start": "2754880",
    "end": "2761599"
  },
  {
    "text": "in dynamically typed languages right like python is a great example the python ecosystem right if you look at",
    "start": "2761599",
    "end": "2767720"
  },
  {
    "text": "some of like the the most interesting stuff in fast API it's generating type",
    "start": "2767720",
    "end": "2772839"
  },
  {
    "text": "hints that represent your apis nicely and so even a lot of languages that are",
    "start": "2772839",
    "end": "2778920"
  },
  {
    "text": "really dynamically typed it's convenient for you as a programmer like where you",
    "start": "2778920",
    "end": "2784520"
  },
  {
    "text": "can to have good type information at the boundaries of different modules and code",
    "start": "2784520",
    "end": "2789599"
  },
  {
    "text": "and inside if you want your business logic to be all like object or dictionary that's fine that's your",
    "start": "2789599",
    "end": "2795240"
  },
  {
    "text": "choice that's rough that's a rough choice but sure keep going I'm actually like less opposed to it than a lot of",
    "start": "2795240",
    "end": "2802160"
  },
  {
    "text": "goers like there's a time and a place for everything you know right right right if I'm in a Jupiter notebook and",
    "start": "2802160",
    "end": "2808240"
  },
  {
    "text": "I'm like M fetching some data from some service just to like run a bunch of numpy on it like whatever is in between",
    "start": "2808240",
    "end": "2815480"
  },
  {
    "text": "this API call and my numpy array is really like I don't care that much I just want it to happen I don't really",
    "start": "2815480",
    "end": "2821720"
  },
  {
    "text": "want to be in you know like go num trying to like Dimension an array and decide whether I'm looking for INT 64s",
    "start": "2821720",
    "end": "2828359"
  },
  {
    "text": "or in 32s Ian just like I want numbers and that's about all I know right so",
    "start": "2828359",
    "end": "2833839"
  },
  {
    "text": "we're talking about all of this I will say that part of the reason I don't have a lot of experience with grpc is that",
    "start": "2833839",
    "end": "2839760"
  },
  {
    "text": "historically you see things like oh it's you hear about stubby or something at Google or a custom h GTP implementation",
    "start": "2839760",
    "end": "2846760"
  },
  {
    "text": "for the grpc stuff for go and it always struck me as something that was used more for like internal Communications",
    "start": "2846760",
    "end": "2855079"
  },
  {
    "text": "inside of your application and not really a user like something you made user visible so like that was kind of",
    "start": "2855079",
    "end": "2861119"
  },
  {
    "text": "the mindset I always had is that a I guess what it sounds like is that was a very invalid belief or conception or",
    "start": "2861119",
    "end": "2867920"
  },
  {
    "text": "would you say that's generally still somewhat true I don't know Johnny what do you think have my opinions but I",
    "start": "2867920",
    "end": "2873280"
  },
  {
    "text": "think people will go what they know best to get a job done and will only sort of",
    "start": "2873280",
    "end": "2879319"
  },
  {
    "text": "step outside well let's just say there are two classes of developers out there",
    "start": "2879319",
    "end": "2884559"
  },
  {
    "text": "there are those who go what they know and uh try to get the job done as",
    "start": "2884559",
    "end": "2890680"
  },
  {
    "text": "quickly as possible and there are those who look for opportunities to bring in new things even when it's not",
    "start": "2890680",
    "end": "2896040"
  },
  {
    "text": "necessarily a requirement right to solve the problem itself I've been on either",
    "start": "2896040",
    "end": "2901640"
  },
  {
    "text": "side uh over the years I'm not sure John sounds more like he's the I'm going to",
    "start": "2901640",
    "end": "2907319"
  },
  {
    "text": "go what I know because I have a job to do and I need to get paid and move on to the next thing yeah when you're",
    "start": "2907319",
    "end": "2913200"
  },
  {
    "text": "self-employed I feel like that it's like self-employed with kids",
    "start": "2913200",
    "end": "2918559"
  },
  {
    "text": "you're like I don't have time to learn new stuff right now right exactly exactly and then you have those you know who work at larger companies and they",
    "start": "2918559",
    "end": "2924960"
  },
  {
    "text": "don't have to worry about you know getting paid to feed their you know family and they can take more Liberties",
    "start": "2924960",
    "end": "2930079"
  },
  {
    "text": "I would say I think that's right so if you were building like a publicly I guess what I'm kind of wondering is like",
    "start": "2930079",
    "end": "2935319"
  },
  {
    "text": "if you were building an API that you wanted to expose to the public for whatever reason is grpc something you",
    "start": "2935319",
    "end": "2940599"
  },
  {
    "text": "would consider using for that if you knew grpc really well and like we're good with it or would you say that you'd",
    "start": "2940599",
    "end": "2945799"
  },
  {
    "text": "prefer just to build like a Json API in a more I don't want to say traditional way but like I guess like what people",
    "start": "2945799",
    "end": "2951440"
  },
  {
    "text": "are used to seeing I would use connect and I would build an API using like",
    "start": "2951440",
    "end": "2957200"
  },
  {
    "text": "prabu schemas for my own development I would tell most of my clients hey if",
    "start": "2957200",
    "end": "2963200"
  },
  {
    "text": "you're trying to call my API from JavaScript like forget about all this other stuff like it's HTTP and Json under the hood just download this client",
    "start": "2963200",
    "end": "2970200"
  },
  {
    "text": "Library like why do you care what's going on inside I'm going to jump you right to the thing you actually want",
    "start": "2970200",
    "end": "2976000"
  },
  {
    "text": "which is code same for python same for go and I'll say like if you want to curl my API",
    "start": "2976000",
    "end": "2983760"
  },
  {
    "text": "right or you have some ad hoc thing or you're writing code in you know I don't know Zig and I don't have a library off",
    "start": "2983760",
    "end": "2989960"
  },
  {
    "text": "the shelf for you it's really simple like here's what the Json looks like and you just post it to this API like this",
    "start": "2989960",
    "end": "2996960"
  },
  {
    "text": "path post some Json you'll get some Json back that's it it sounds like you would use grpc but you would just make sure",
    "start": "2996960",
    "end": "3003359"
  },
  {
    "text": "you're using that Json format so that if they need to do something else they can pretty easily there's some subtlety",
    "start": "3003359",
    "end": "3009160"
  },
  {
    "text": "there grpc connect supports the whole grpc protocol it also",
    "start": "3009160",
    "end": "3015680"
  },
  {
    "text": "supports its own protocol that is very similar to grpc like your code stays the",
    "start": "3015680",
    "end": "3022920"
  },
  {
    "text": "same you flop a config flag you can speak your own this other protocol that",
    "start": "3022920",
    "end": "3028839"
  },
  {
    "text": "looks much more like rest where you can just post some Json this is actually not",
    "start": "3028839",
    "end": "3034000"
  },
  {
    "text": "feasible with off-the-shelf grpc stuff by default like grpc go or grpc Java",
    "start": "3034000",
    "end": "3040319"
  },
  {
    "text": "they also don't they can't communicate with a web browser which is like generally a big limitation for an",
    "start": "3040319",
    "end": "3045880"
  },
  {
    "text": "external API kind of opens that up twitch did the same thing it's like one of their priorities was being able to",
    "start": "3045880",
    "end": "3051240"
  },
  {
    "text": "talk to any HTTP client anywhere so I would use connect I would use protocol buffers and I would tell clients kind of",
    "start": "3051240",
    "end": "3058720"
  },
  {
    "text": "in backend e languages to use connect generated code or grpc generated code",
    "start": "3058720",
    "end": "3065319"
  },
  {
    "text": "and I would say if you want to curl this or call it from a browser or something you might have code gen available or you might just be posting some Json just",
    "start": "3065319",
    "end": "3072240"
  },
  {
    "text": "like you would post Json to AR rest API okay I think that helps because I know historically like the fact that you said",
    "start": "3072240",
    "end": "3078319"
  },
  {
    "text": "that like you couldn't communicate with an HTTP browser the minute I hear that I'm like oh this isn't going to work like that's yeah I know this is kind of",
    "start": "3078319",
    "end": "3085440"
  },
  {
    "text": "showstopper yeah it's uh especially if you're building a web application and you're like well that's my one use case",
    "start": "3085440",
    "end": "3091040"
  },
  {
    "text": "so I mean even if you're not building a web application right you're building an API and like browsers are really",
    "start": "3091040",
    "end": "3096920"
  },
  {
    "text": "convenient like the network tab is really nice it's like convenient debuging environment it's got this like real programming language repple for you",
    "start": "3096920",
    "end": "3103440"
  },
  {
    "text": "to play in like it's the most widely diplayed HTTP client in the world why wouldn't your HTTP protocol support it",
    "start": "3103440",
    "end": "3110240"
  },
  {
    "text": "it's a historical misstep in the grpc protocol I think grpc uses this little",
    "start": "3110240",
    "end": "3117240"
  },
  {
    "text": "known corner of HTTP called trailers they're just headers that come after the",
    "start": "3117240",
    "end": "3123079"
  },
  {
    "text": "body they're useful for a bunch of reasons like having some way to send metadata after the body is really",
    "start": "3123079",
    "end": "3130680"
  },
  {
    "text": "helpful they chose to send them as HTTP trailers at the time they were making these decisions it looked like browsers",
    "start": "3130680",
    "end": "3138000"
  },
  {
    "text": "were going to support trailers so they had kind of decided that they were going to probably do it but hadn't actually",
    "start": "3138000",
    "end": "3144599"
  },
  {
    "text": "done it yet and then as soon as any browser vendor got involved they all said absolutely",
    "start": "3144599",
    "end": "3149960"
  },
  {
    "text": "not we're never doing this and a bunch of other HTP software never supported",
    "start": "3149960",
    "end": "3155079"
  },
  {
    "text": "trailers they've been around since the late 90s and basically nothing ever supported them so if you have like a",
    "start": "3155079",
    "end": "3160240"
  },
  {
    "text": "rails app you're not serving up trailers any day soon and so that's kind of like",
    "start": "3160240",
    "end": "3166480"
  },
  {
    "text": "really made grpc hard to adopt for external apis but",
    "start": "3166480",
    "end": "3171720"
  },
  {
    "text": "that's not like an intrinsic problem with protocol buffers it just just means like you need a little translation layer",
    "start": "3171720",
    "end": "3177799"
  },
  {
    "text": "or you need a different Library those libraries are pretty small you know connect does all of grpc and this other",
    "start": "3177799",
    "end": "3185200"
  },
  {
    "text": "thing in less than 10,000 lines of go it's like 20x smaller than grpc go it's",
    "start": "3185200",
    "end": "3192160"
  },
  {
    "text": "like this is all totally doable if you're just optimizing for something different so in short yeah I would say",
    "start": "3192160",
    "end": "3200200"
  },
  {
    "text": "that like you should use protocol barers for your external apis yeah John it's it's definitely something I'm I'm open",
    "start": "3200200",
    "end": "3206440"
  },
  {
    "text": "to exploring but I mean it's it's kind of the same as graphql like it's always struck me as interesting technology but",
    "start": "3206440",
    "end": "3212760"
  },
  {
    "text": "when I don't have a direct need for it it's really hard to like go out of my way and use it extensively to like build",
    "start": "3212760",
    "end": "3219880"
  },
  {
    "text": "something because you know people are like oh well your API is changing I'm like that's not happening to me like it's happening to Facebook it's uh like",
    "start": "3219880",
    "end": "3225920"
  },
  {
    "text": "our needs are very different when you write your your external apis right when",
    "start": "3225920",
    "end": "3231359"
  },
  {
    "text": "you're calling them from your web apps are you typically like handwriting code in the browser to call those apis so",
    "start": "3231359",
    "end": "3238119"
  },
  {
    "text": "you're writing like react hooks or whatever if I can generate a library or do something like that I always opt to",
    "start": "3238119",
    "end": "3243839"
  },
  {
    "text": "do that because it's just simpler but it it really depends like one of the restraints I get at times is that I also",
    "start": "3243839",
    "end": "3250119"
  },
  {
    "text": "make courses that help people learn stuff so when I'm looking at things that can also influence what technologies I",
    "start": "3250119",
    "end": "3256160"
  },
  {
    "text": "opt to use because when you rely on third parties and all of a sudden they break or they change drastically then",
    "start": "3256160",
    "end": "3261440"
  },
  {
    "text": "all of a sudden that material is useless so sometimes you're like well if I can stick with just just manually using",
    "start": "3261440",
    "end": "3266520"
  },
  {
    "text": "Fetch and and doing this then maybe that's going to you stand the test of time a lot better and if it explains",
    "start": "3266520",
    "end": "3273240"
  },
  {
    "text": "sort of how something standard Works to somebody that's also helpful so it really just depends on the context for",
    "start": "3273240",
    "end": "3278920"
  },
  {
    "text": "that that makes sense but most of the time if I can generate a library that's what I want to do I don't care about the",
    "start": "3278920",
    "end": "3283960"
  },
  {
    "text": "underlying technology at all like whether it's XML or something else I don't really care I just want like give",
    "start": "3283960",
    "end": "3289359"
  },
  {
    "text": "me a library that's easy to use XML John really Johnny I've used way more XML in",
    "start": "3289359",
    "end": "3295960"
  },
  {
    "text": "my life than I really care to that's right oh man at one job um we're doing a",
    "start": "3295960",
    "end": "3302799"
  },
  {
    "text": "bunch of work like Enterprise Integration work with fin serve companies and I was like praying for XML",
    "start": "3302799",
    "end": "3307960"
  },
  {
    "text": "there were all these weirdo handrolled binary formats was like back in the day",
    "start": "3307960",
    "end": "3313319"
  },
  {
    "text": "we thought these ins were going to be 32 bits so like you know if this flag is set you know jump to the end of the file",
    "start": "3313319",
    "end": "3319599"
  },
  {
    "text": "and look for where we added another 32 bits for the top bits because you know the numbers got too big or something and",
    "start": "3319599",
    "end": "3325599"
  },
  {
    "text": "wow it was all bananas so I can see why everyone was really excited about XML I",
    "start": "3325599",
    "end": "3331599"
  },
  {
    "text": "was never excited about XML it was just one of those things that I started a company where we interacted with a lot of shipping apis and a lot of them were",
    "start": "3331599",
    "end": "3337960"
  },
  {
    "text": "using XML so I just got very familiar with it and I at the end of the day I just came to the conclusion that I don't",
    "start": "3337960",
    "end": "3344520"
  },
  {
    "text": "actually care what your API uses as long as like there's a good way like a good library or something to communicate with",
    "start": "3344520",
    "end": "3350359"
  },
  {
    "text": "it and as long as it gets simplified in that sense and I think most developers stand in that point or have that same",
    "start": "3350359",
    "end": "3355960"
  },
  {
    "text": "Viewpoint of if you give me a good Library I never look to see what you're even using behind the scenes because it",
    "start": "3355960",
    "end": "3361799"
  },
  {
    "text": "doesn't matter to me but if there's not a library then clearly I have to look and see what you're using and then if it's XML I'm going to be like what is",
    "start": "3361799",
    "end": "3368000"
  },
  {
    "text": "your problem no that's when you dust off the old xslt book that's right oh man you",
    "start": "3368000",
    "end": "3374799"
  },
  {
    "text": "got you got buried somewhere in your basement I had that one the O'Reilly book and there's like a snake wood cut",
    "start": "3374799",
    "end": "3380839"
  },
  {
    "text": "on the cover or something yeah oh my God",
    "start": "3380839",
    "end": "3386920"
  },
  {
    "text": "[Music] hi everyone this is John Calhoun one of",
    "start": "3396790",
    "end": "3403520"
  },
  {
    "text": "your gotime hosts in addition to hosting go time I also create courses that help people like your self-learn go some of",
    "start": "3403520",
    "end": "3410480"
  },
  {
    "text": "these courses are free but I also have paid courses that teach topics like web development or testing with go I wanted",
    "start": "3410480",
    "end": "3416240"
  },
  {
    "text": "to let you know that I'm having a Black Friday sale from November 21st until November 29th during that time all of my",
    "start": "3416240",
    "end": "3422680"
  },
  {
    "text": "paid courses are 50% off so it's a great time to check them out you can find links to all of my courses at calhoun.",
    "start": "3422680",
    "end": "3429359"
  },
  {
    "text": "i/c courses that is c a l hu",
    "start": "3429359",
    "end": "3434440"
  },
  {
    "text": "n./ courses from there you can find out more about each course you can request a sample and you can also sign up for some",
    "start": "3434440",
    "end": "3441039"
  },
  {
    "text": "of my free courses to see if you like my teaching style thanks for listening to go time and for all of your",
    "start": "3441039",
    "end": "3447559"
  },
  {
    "text": "[Music]",
    "start": "3449060",
    "end": "3456170"
  },
  {
    "text": "support I think in 2022 right the way the industry is today Proto is a good",
    "start": "3457319",
    "end": "3463960"
  },
  {
    "text": "middle ground for exactly that developer so like you write a little schema your",
    "start": "3463960",
    "end": "3469480"
  },
  {
    "text": "serers side implementation gets easier it's a little easier to Wrangle and you can just hand and your clients's fully",
    "start": "3469480",
    "end": "3477119"
  },
  {
    "text": "generated ready to go client code and whatever has happening in between like",
    "start": "3477119",
    "end": "3483640"
  },
  {
    "text": "it's reasonable but it's not like artisanally handcrafted you know hypertext as the",
    "start": "3483640",
    "end": "3490200"
  },
  {
    "text": "engine of application State like this is not you know Roy fielding's thesis",
    "start": "3490200",
    "end": "3495400"
  },
  {
    "text": "brought to life it's just like work a day code that gets the job done and is",
    "start": "3495400",
    "end": "3501520"
  },
  {
    "text": "pragmatic and pretty reasonable and is ultimately just someb in plumbing we've all got jobs to do you have like your",
    "start": "3501520",
    "end": "3508039"
  },
  {
    "text": "server is supposed to be doing something you know and like we just want to get to that part of it as quickly as possible",
    "start": "3508039",
    "end": "3514359"
  },
  {
    "text": "and on the front end you're like well I'm trying to like build a UI here I didn't I don't really care about any of the plumbing I just wanted some",
    "start": "3514359",
    "end": "3519839"
  },
  {
    "text": "functions to call and the faster we can get the server author and the client to",
    "start": "3519839",
    "end": "3525039"
  },
  {
    "text": "calling functions and not worrying about like the plumbing the better off we all are so I think we're getting near the",
    "start": "3525039",
    "end": "3531799"
  },
  {
    "text": "end of the episode we're going to move into the unpopular [Music]",
    "start": "3531799",
    "end": "3538320"
  },
  {
    "text": "opinion opinion I actually think you should probably",
    "start": "3538839",
    "end": "3544880"
  },
  {
    "text": "leave aret do you have an unpopular opinion for us oh I don't know how",
    "start": "3551520",
    "end": "3556599"
  },
  {
    "text": "unpopular it's going to be but we mentioned at the top that I wrote this structured logging Library called zap",
    "start": "3556599",
    "end": "3562599"
  },
  {
    "text": "there's a bunch of libraries like it now there's like zero log and they're they're proposing to introduce something like this to the standard lib I think",
    "start": "3562599",
    "end": "3569640"
  },
  {
    "text": "this whole thing is just so fundamentally misguided I felt that since starting to write zap I just think",
    "start": "3569640",
    "end": "3575760"
  },
  {
    "text": "it's all a bad idea so you think structured logging itself is a bad idea the way it's done here yeah we",
    "start": "3575760",
    "end": "3581319"
  },
  {
    "text": "introduced you by saying that if you've used zap you've probably used your code and now you're telling us that that was a bad idea you know for a bunch of",
    "start": "3581319",
    "end": "3587880"
  },
  {
    "text": "reasons we like I was at Uber at the time I was writing like a service mesh thing for a stubby like protocol it had",
    "start": "3587880",
    "end": "3596119"
  },
  {
    "text": "like tight performance requirements we were feeling really good we'd like written this service mesh proxy thing",
    "start": "3596119",
    "end": "3602119"
  },
  {
    "text": "we'd met all the per requirements and Johnny you're going to hate this but at the end we came back like now we shall",
    "start": "3602119",
    "end": "3608680"
  },
  {
    "text": "add the observability and you add a couple of log statements and a couple of like",
    "start": "3608680",
    "end": "3613880"
  },
  {
    "text": "metric increments and all of a sudden I'm staring at a thousand Heap allocations the perf budget went out the",
    "start": "3613880",
    "end": "3620359"
  },
  {
    "text": "window you're like well we could just ship it without the logs or the tricks but that's not good and so to fit with",
    "start": "3620359",
    "end": "3628520"
  },
  {
    "text": "the log infrastructure of the company we had to emit Json and there was like really no facility for running a Rex",
    "start": "3628520",
    "end": "3635839"
  },
  {
    "text": "over a string in the log ingestion and like dashboarding stuff and so I kind of invented this",
    "start": "3635839",
    "end": "3642559"
  },
  {
    "text": "like ultimately like very fussy API for producing logs just to avoid Heap",
    "start": "3642559",
    "end": "3649280"
  },
  {
    "text": "allocations more or less and to avoid like re serializing data that we'd already serialized once and it is so",
    "start": "3649280",
    "end": "3657319"
  },
  {
    "text": "fussy I mean it's just unreal and you thought you'd unleash it on the rest of the community no so actually internally",
    "start": "3657319",
    "end": "3664559"
  },
  {
    "text": "at Uber what we did is we just like put this thing behind a facade that looked like the Old Logging library and it was",
    "start": "3664559",
    "end": "3671480"
  },
  {
    "text": "like 30% faster and you're like well if everything just got 30% faster for no code changes this is a huge win right",
    "start": "3671480",
    "end": "3678680"
  },
  {
    "text": "there's like zillions of cores just you know parsing map string any mhm if we",
    "start": "3678680",
    "end": "3684000"
  },
  {
    "text": "can get rid of that that that's great but I didn't expect anyone apart from like the lowest level infro code to",
    "start": "3684000",
    "end": "3690319"
  },
  {
    "text": "actually be using this API and what I didn't count on is you're like well we're a bunch of backend",
    "start": "3690319",
    "end": "3696000"
  },
  {
    "text": "engineers and everybody wants to flex you want to be like oh this is the fastest service at the company like look",
    "start": "3696000",
    "end": "3701799"
  },
  {
    "text": "at how fast this API is I have two Heap allocations in this whole code path so everybody was using this API it's kind",
    "start": "3701799",
    "end": "3709520"
  },
  {
    "text": "of like this is crazy we should be logging strings with fump up printf and",
    "start": "3709520",
    "end": "3716520"
  },
  {
    "text": "if you want to like wrap them in Json like all the way at some boundary or like put the process ID and the host",
    "start": "3716520",
    "end": "3721839"
  },
  {
    "text": "name or whatever in there that's fine but like as a programmer I shouldn't be staring at this super fussy Json",
    "start": "3721839",
    "end": "3727720"
  },
  {
    "text": "production API and like if I can't convince you of that I want to at least",
    "start": "3727720",
    "end": "3733720"
  },
  {
    "text": "convince you that Json is just the worst format like we're going to produce Json and then Docker is going to parse it and",
    "start": "3733720",
    "end": "3739880"
  },
  {
    "text": "re Escape it and then filebeats going to parse it and re-encode it and and then log stash is going to parse it and",
    "start": "3739880",
    "end": "3746119"
  },
  {
    "text": "re-encode it and then elastic search is going to parse it and index and you're like what are we doing at least use",
    "start": "3746119",
    "end": "3753319"
  },
  {
    "text": "message pack or something that's binary and like three times faster and we just",
    "start": "3753319",
    "end": "3758680"
  },
  {
    "text": "you know like to give money to the cloud venders that's cool I keeping that whole industry in business Johnny's not biased",
    "start": "3758680",
    "end": "3764480"
  },
  {
    "text": "at all here it's just for the amount of effort spent golfing allocations out of this one log API right the fact that end",
    "start": "3764480",
    "end": "3773400"
  },
  {
    "text": "to end this this is just stupendously inefficient like it should matter we",
    "start": "3773400",
    "end": "3779440"
  },
  {
    "text": "should pick a format that at the very least if you want this really fucy logging API in between your program and",
    "start": "3779440",
    "end": "3788279"
  },
  {
    "text": "like the ultimate search index or whatever we should pick something that's easy and cheap to work with Okay so",
    "start": "3788279",
    "end": "3794760"
  },
  {
    "text": "structured logging thumbs down for me nice oh we're going to see how well",
    "start": "3794760",
    "end": "3801079"
  },
  {
    "text": "that one does I'm just going to be quiet cuz I",
    "start": "3801079",
    "end": "3806319"
  },
  {
    "text": "don't the like upside to being a oneperson company is that I don't really work on things that need to worry about",
    "start": "3806319",
    "end": "3812880"
  },
  {
    "text": "any of those performance issues or anything like that so I can kind of get away with whatever I want I use the",
    "start": "3812880",
    "end": "3818520"
  },
  {
    "text": "standard lips log package in all of my personal stuff I use print line a lot for printing stuff like if I need to",
    "start": "3818520",
    "end": "3825559"
  },
  {
    "text": "know something but that's cuz it's just me so it's like okay this is pretty easy to deal with I don't have a crazy amount of traffic I'm currently not running any",
    "start": "3825559",
    "end": "3832960"
  },
  {
    "text": "services with more than like 100 ,000 users so it's not like too crazy that's a very successful self-run business",
    "start": "3832960",
    "end": "3839720"
  },
  {
    "text": "seriously 100,000 people's a lot it's not like concurrent for sure it's like there's 100,000 signups for a free",
    "start": "3839720",
    "end": "3846079"
  },
  {
    "text": "course and at this point like probably half of them haven't logged on in who knows how long how are you not like a",
    "start": "3846079",
    "end": "3852279"
  },
  {
    "text": "multi-billion dollar VC funded Juggernaut at this point CU that's a free course when things are free got",
    "start": "3852279",
    "end": "3858920"
  },
  {
    "text": "it well that hasn't stopped anybody for the last five or six years that's true",
    "start": "3858920",
    "end": "3864240"
  },
  {
    "text": "that's true I'd have to have some Grand Vision then and I don't have that my vision is just to try to help people learn go and just make it free I'll tell",
    "start": "3864240",
    "end": "3871400"
  },
  {
    "text": "you I'll send you a slide deck for a 10% [Laughter] cut oh man that's awesome that's awesome",
    "start": "3871400",
    "end": "3878279"
  },
  {
    "text": "so you don't have an unpopular opinion John I I do not Johnny what is your unpopular opinion okay well since you",
    "start": "3878279",
    "end": "3884720"
  },
  {
    "text": "and I you know both teach go so you might appreciate this I think if you",
    "start": "3884720",
    "end": "3889880"
  },
  {
    "text": "have a training where you're are not actually typing code and showing people how it actually feels and looks like to",
    "start": "3889880",
    "end": "3897520"
  },
  {
    "text": "write the code in an editor if all you have is slideware and and things and",
    "start": "3897520",
    "end": "3903359"
  },
  {
    "text": "animations and things I think you're doing it wrong I think you need to actually show an editor you need to show",
    "start": "3903359",
    "end": "3908760"
  },
  {
    "text": "you writing in code in order for it to sink in a bit more I agree with that",
    "start": "3908760",
    "end": "3914160"
  },
  {
    "text": "100% not like in almost everything you can teach MH like just to sort of back",
    "start": "3914160",
    "end": "3920079"
  },
  {
    "text": "that up when students learn about like algorithms in school I feel like half the reason they don't really understand",
    "start": "3920079",
    "end": "3925720"
  },
  {
    "text": "them is because they're often not seeing code and they're not like using it extensively so like they might see a",
    "start": "3925720",
    "end": "3932920"
  },
  {
    "text": "couple blips of code on the screen or something but they don't actually like walk through like let's actually write a binary search from the ground up and see",
    "start": "3932920",
    "end": "3939839"
  },
  {
    "text": "how it works MH and I can say from school I had so many classmates who just could if you ask them to write a binary",
    "start": "3939839",
    "end": "3945920"
  },
  {
    "text": "search they could explain it to you but they could not code it for some reason so there was some disconnect there and",
    "start": "3945920",
    "end": "3951880"
  },
  {
    "text": "then I did programming team so I had to code this this type of stuff like all the time the programming team is like um",
    "start": "3951880",
    "end": "3957520"
  },
  {
    "text": "like uh top coder or like Google code Jam that type of stuff is what we did all the time I got to work with other",
    "start": "3957520",
    "end": "3963599"
  },
  {
    "text": "people who were very good at like breaking it down and showing you like here's 10 examples of actually coding this thing and by the end you felt like",
    "start": "3963599",
    "end": "3970680"
  },
  {
    "text": "you understood the algorithms so much better than like just the sort of like the idea of it being explained to you",
    "start": "3970680",
    "end": "3977720"
  },
  {
    "text": "and I like I feel like that's true for pretty much anything you're teaching programming wise if you can really",
    "start": "3977720",
    "end": "3983279"
  },
  {
    "text": "illustrate you know here's how you code it I think that really helps it sink in and especially if people code along and",
    "start": "3983279",
    "end": "3989039"
  },
  {
    "text": "try to do it on their own because I think that's another mistake people make is that they'll they won't put in the",
    "start": "3989039",
    "end": "3994200"
  },
  {
    "text": "time of actually trying to do it themselves to see like what it feels like for themselves to code it mhm I",
    "start": "3994200",
    "end": "4000279"
  },
  {
    "text": "don't know how your trainings are with that Johnny because we give slightly different types of trainings but if they code along or not oh yeah absolutely the",
    "start": "4000279",
    "end": "4007520"
  },
  {
    "text": "the code along is encourag as matter of fact this is a good segue into a Shameless plug um by the time this this",
    "start": "4007520",
    "end": "4014240"
  },
  {
    "text": "episode is available um the I have a new training coming out with LinkedIn learning actually it's a Hands-On",
    "start": "4014240",
    "end": "4019960"
  },
  {
    "text": "introductory uh um go course so for those who have been sort of looking to get into go and are coming from other",
    "start": "4019960",
    "end": "4026000"
  },
  {
    "text": "languages and kind of really know you really want to know okay how do I quickly level up and go um in a very",
    "start": "4026000",
    "end": "4031359"
  },
  {
    "text": "Hands-On sort of way where you see me write code as I explain Concepts and things the good thing is uh it's going",
    "start": "4031359",
    "end": "4037000"
  },
  {
    "text": "to be available free through February so if you need a link um when you hear this",
    "start": "4037000",
    "end": "4042720"
  },
  {
    "text": "podcast if you need a link just hit me up on Twitter and I'll send you a link so I'm worked very hard on it looking",
    "start": "4042720",
    "end": "4048440"
  },
  {
    "text": "forward to actually putting this thing out in the world it's kind of when one of your babies right John you know you work on it you toil and you sweat nights",
    "start": "4048440",
    "end": "4055319"
  },
  {
    "text": "weekends all the things and then when it comes out and you're kind of super proud of it and this is definitely one of them for me so is this the thing that's",
    "start": "4055319",
    "end": "4061440"
  },
  {
    "text": "launching tomorrow that you were mentioning at the beginning code spaces there yep that's the thing launching tomorrow along with the GitHub at GitHub",
    "start": "4061440",
    "end": "4069599"
  },
  {
    "text": "universe and some cod spaces stuff so it's upon us so hopefully I'm not breaking any any rules and stuff in and",
    "start": "4069599",
    "end": "4075119"
  },
  {
    "text": "in having sort of a a recording that shows up you know a week or two later so it's just in time nice nice I learned",
    "start": "4075119",
    "end": "4083640"
  },
  {
    "text": "programming like commercial programming before my first job with like a Learn",
    "start": "4083640",
    "end": "4088880"
  },
  {
    "text": "Python book that was very much in line with your opinion Johnny mhm it was Zed Shaw's Learn Python the Hard Way yeah",
    "start": "4088880",
    "end": "4096238"
  },
  {
    "text": "and it was literally just a bunch of code that you just hand type and push enter and try and figure out why it did what it did yep and I remember I burned",
    "start": "4096239",
    "end": "4103159"
  },
  {
    "text": "through the whole thing because I had somehow convinced them that I knew how to program before I started but I didn't",
    "start": "4103159",
    "end": "4108318"
  },
  {
    "text": "really nice like certainly not in Python and was under the gun to really figure",
    "start": "4108319",
    "end": "4113480"
  },
  {
    "text": "it out quick those are the best right well I showed up there and I was like I know how to could and they kind of look",
    "start": "4113480",
    "end": "4118600"
  },
  {
    "text": "at me and they're like yeah that checks out come on it was not the greatest nice Johnny",
    "start": "4118600",
    "end": "4127318"
  },
  {
    "text": "to speak to your point though like it always baffles me that like if you took somebody to like a soccer training and",
    "start": "4127319",
    "end": "4133000"
  },
  {
    "text": "you never got a socer ball out everybody would be like what is going on like right just watch me do this you know you",
    "start": "4133000",
    "end": "4140000"
  },
  {
    "text": "don't get to touch the ball it would be kind of ridiculous but like in programming for some reason that sometimes happens and like there are",
    "start": "4140000",
    "end": "4146238"
  },
  {
    "text": "some topics where you can sort of talk about things at a high level but a lot of times that code is very important and",
    "start": "4146239",
    "end": "4152920"
  },
  {
    "text": "I know as developers we like to say like oh we get paid to think and do these other things and the code's a small part of it which is true but you also like",
    "start": "4152920",
    "end": "4159758"
  },
  {
    "text": "the code helps make things sink in and I think you get to that point where you can focus on thinking when the code is",
    "start": "4159759",
    "end": "4165480"
  },
  {
    "text": "kind of a that's a small detail but you have to learn how to implement that small detail and actually do it mhm how",
    "start": "4165480",
    "end": "4171480"
  },
  {
    "text": "much have generics like made you revisit your your courses John none at all so",
    "start": "4171480",
    "end": "4177000"
  },
  {
    "text": "far but that's because so right now one of my courses like honestly it needs",
    "start": "4177000",
    "end": "4182120"
  },
  {
    "text": "updated more because of tooling changes got so like go modules and some other stuff like that and it's not that the",
    "start": "4182120",
    "end": "4188560"
  },
  {
    "text": "code is no longer valid it's more just when somebody's in that sort of beginner to intermediate phase it's kind of",
    "start": "4188560",
    "end": "4194640"
  },
  {
    "text": "confusing if they haven't run into it already to be like hey this code doesn't work because I don't have a module set",
    "start": "4194640",
    "end": "4199840"
  },
  {
    "text": "up and my videos don't mention it because it didn't exist at the time yeah so it's like okay that sucks but I",
    "start": "4199840",
    "end": "4205800"
  },
  {
    "text": "generally don't try to do anything that has like generics where they'd even be a part of it because it's more focused on",
    "start": "4205800",
    "end": "4211760"
  },
  {
    "text": "that beginner to sort of intermediate type grouping at the moment I do plan on doing a little bit more advanced stuff",
    "start": "4211760",
    "end": "4217600"
  },
  {
    "text": "which is like I have a course in the works that's sort of been I've been toiling away at it for a while but as",
    "start": "4217600",
    "end": "4222880"
  },
  {
    "text": "Johnny knows those can take forever so mhm that's always interesting but I think I'll use generics I don't think",
    "start": "4222880",
    "end": "4229480"
  },
  {
    "text": "too many people are going to need us to write generics and maybe I'll have something that covers that at some point but I don't think most people actually",
    "start": "4229480",
    "end": "4235440"
  },
  {
    "text": "need to write generics very often I think that's fair I pretty much the only I'm I've I've Rewritten the same code to",
    "start": "4235440",
    "end": "4241800"
  },
  {
    "text": "generate a set of like a given type five or six times now so I'm looking forward to getting rid of that and just having a",
    "start": "4241800",
    "end": "4248080"
  },
  {
    "text": "generic set type that I can card around mhm that's pretty much the only data structure that routinely end up wanting",
    "start": "4248080",
    "end": "4255280"
  },
  {
    "text": "right I guess now that I think about it I do have a course that like it's a course that's meant to cover some more",
    "start": "4255280",
    "end": "4261080"
  },
  {
    "text": "common algorithms and data structures and it's like a free one that I was just I it's something I enjoy so I wanted to",
    "start": "4261080",
    "end": "4266640"
  },
  {
    "text": "teach it that way but and I'll probably add generics to that one at some point just cuz people are going to be like why",
    "start": "4266640",
    "end": "4272320"
  },
  {
    "text": "aren't you using generics but I still think a lot of the time it's easier to teach something without them yeah that",
    "start": "4272320",
    "end": "4277719"
  },
  {
    "text": "makes sense and then like make sure they understand it with like let's just assume we're using strings right now and just write it that way mhm then take the",
    "start": "4277719",
    "end": "4284239"
  },
  {
    "text": "next step and that partially stemmed from the fact that I know a couple people who have been in college over the last 5 to 10 years who have ended up",
    "start": "4284239",
    "end": "4290760"
  },
  {
    "text": "helping because they're like friends of my younger sister or something like that and in so many cases somebody will come",
    "start": "4290760",
    "end": "4296159"
  },
  {
    "text": "to me and they'll be like I'm trying to implement this algorithm and I don't know what this like Java's te thing is",
    "start": "4296159",
    "end": "4302080"
  },
  {
    "text": "and all this other stuff and it's because like they understand the algorithm but all of a sudden generics were thrown in there as part of like the",
    "start": "4302080",
    "end": "4309080"
  },
  {
    "text": "implementation and they're like I don't really get what this is like it was not taught to me very well well so they get",
    "start": "4309080",
    "end": "4315080"
  },
  {
    "text": "caught up on that and like in many cases I've told them okay let's just ignore the T stuff can you just write this",
    "start": "4315080",
    "end": "4320440"
  },
  {
    "text": "assuming that you have this class that it's a string like don't worry about other data types just assume it's a string and then all of a sudden they're",
    "start": "4320440",
    "end": "4326800"
  },
  {
    "text": "like oh yeah that's fine and they write it all and then I'm like okay now let's put the T stuff back and it's a little bit more annoying but it's like that's",
    "start": "4326800",
    "end": "4333520"
  },
  {
    "text": "all that was was just letting you use any data type and it really shouldn't have been the thing that stopped you from moving forward that's kind of nice",
    "start": "4333520",
    "end": "4339600"
  },
  {
    "text": "about the like the evolution of go as a language we like you really feel",
    "start": "4339600",
    "end": "4344719"
  },
  {
    "text": "intimately aware of how at least one implementation of generics might work",
    "start": "4344719",
    "end": "4350280"
  },
  {
    "text": "because you've spent so many years writing code generators you're like yeah this really literally is like I'm just",
    "start": "4350280",
    "end": "4355800"
  },
  {
    "text": "going to shove a string into the code here for this templated data Type M you",
    "start": "4355800",
    "end": "4362000"
  },
  {
    "text": "kind of like a visceral appreciation for the problem that generics solves mhm that makes a lot of sense I'm definitely",
    "start": "4362000",
    "end": "4368719"
  },
  {
    "text": "a fan of generics for data structures that sort of thing I just I guess we've moved on from that debate luckily or I",
    "start": "4368719",
    "end": "4375480"
  },
  {
    "text": "think at least in my circle it feels like we have but yeah I think so yeah and I don't feel like it's been like",
    "start": "4375480",
    "end": "4381280"
  },
  {
    "text": "this big apocalypse like everybody thought it was going to be at least I haven't seen a million packages released",
    "start": "4381280",
    "end": "4387320"
  },
  {
    "text": "that have way too much generic use maybe I'm getting old and don't have time to look for these things now you're not",
    "start": "4387320",
    "end": "4393600"
  },
  {
    "text": "trying enough things not trying enough new things John I mean that's definitely true these days compared to what I used",
    "start": "4393600",
    "end": "4398880"
  },
  {
    "text": "to like there was definitely a time where I would have been like oh grpc looks sweet I got to throw this in or something and find a way to use it and",
    "start": "4398880",
    "end": "4405719"
  },
  {
    "text": "now I'm like do I have a real need for this cuz otherwise I'm just going to use what I know works that makes sense I",
    "start": "4405719",
    "end": "4411880"
  },
  {
    "text": "think I run into generics a lot because like when you work on protocol buffers",
    "start": "4411880",
    "end": "4417120"
  },
  {
    "text": "you're also working on code generation that makes sense there and so those kind of naturally come together right you're like oh could I generate less code if I",
    "start": "4417120",
    "end": "4424480"
  },
  {
    "text": "use generics here right the answer is yes but yeah suitable use yeah yeah cool",
    "start": "4424480",
    "end": "4431880"
  },
  {
    "text": "all right oay thank you for joining us and talking about everything grpc and protocol buffers Johnny always great to",
    "start": "4431880",
    "end": "4439239"
  },
  {
    "text": "have you yes likewise thank you so much it was nice to meet both of you",
    "start": "4439239",
    "end": "4444678"
  },
  {
    "text": "likewise all right that is the show for this week thanks for hanging with us if",
    "start": "4448120",
    "end": "4453639"
  },
  {
    "text": "this is your first time listening subscribe to the Pod at go time. FM and if you're a longtime gotimer do us a",
    "start": "4453639",
    "end": "4460400"
  },
  {
    "text": "solid by sharing the show with your friends help us help more more people with weekly go related goodness thanks",
    "start": "4460400",
    "end": "4466560"
  },
  {
    "text": "once again to fastly and fly.io for partnering with us check out what they're up to at fastly.com and at",
    "start": "4466560",
    "end": "4473719"
  },
  {
    "text": "fly.io and of course thank you to our beat freaking residents breakmaster cylinder our beats are banging because",
    "start": "4473719",
    "end": "4479480"
  },
  {
    "text": "BMC bangs out dope beats that's how it works next time on go time John and",
    "start": "4479480",
    "end": "4484920"
  },
  {
    "text": "Johnny are back but this time Johnny's in the driver's seat they're discussing software delivery at scale with nant Roy",
    "start": "4484920",
    "end": "4492679"
  },
  {
    "text": "from Pinterest engineering we'll have that episode ready for you next",
    "start": "4492679",
    "end": "4498840"
  },
  {
    "text": "week",
    "start": "4506280",
    "end": "4509280"
  }
]