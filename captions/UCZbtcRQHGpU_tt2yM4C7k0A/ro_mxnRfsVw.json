[
  {
    "text": "hey how's it going I'm your host gahar Lazo and you're listening to ship it a podcast about getting your best ideas",
    "start": "560",
    "end": "8120"
  },
  {
    "text": "into the world and seeing what happens we talk about code Ops infrastructure",
    "start": "8120",
    "end": "13480"
  },
  {
    "text": "and the people that make it happen yes we focus on the people because everything else is an implementation",
    "start": "13480",
    "end": "20400"
  },
  {
    "text": "detail chaos engineering is not just for super sres it is not meant to prevent",
    "start": "20400",
    "end": "27359"
  },
  {
    "text": "outages and it is not just about Hardware chaos engineering is about",
    "start": "27359",
    "end": "32360"
  },
  {
    "text": "testing how reliable your systems are it's meant to show you how things fail",
    "start": "32360",
    "end": "38280"
  },
  {
    "text": "including when other dependent systems fail think cascading failures this is a",
    "start": "38280",
    "end": "44200"
  },
  {
    "text": "great way of discovering many inconvenient truths about that beautiful code that you wrote today we will be",
    "start": "44200",
    "end": "51039"
  },
  {
    "text": "learning about chaos engineering from Uma CEO and co-founder of chaos native",
    "start": "51039",
    "end": "56719"
  },
  {
    "text": "and cartic CTO and also a chaos native co-founder litmus which is chaos",
    "start": "56719",
    "end": "63519"
  },
  {
    "text": "engineering for your kubernetes comes up big thanks to our partners fastly launch",
    "start": "63519",
    "end": "68799"
  },
  {
    "text": "Darkly and Leno our bandwidth is provided by fastly learn more at fastly.com feature Flags powered by",
    "start": "68799",
    "end": "75360"
  },
  {
    "text": "launch dark.com and we love lenoe they keep it fast and simple check them out",
    "start": "75360",
    "end": "81200"
  },
  {
    "text": "at lin.com",
    "start": "81200",
    "end": "83960"
  },
  {
    "text": "changelog this episode of ship it is brought to you by render the zero devops Cloud that empowers you to ship faster",
    "start": "88920",
    "end": "95600"
  },
  {
    "text": "than your competitors here's hro goel CEO of render sharing why developers choose render over Heroku and how",
    "start": "95600",
    "end": "102000"
  },
  {
    "text": "they're innovating much faster a lot of render customers come to us from huku and they tell us render is what huku",
    "start": "102000",
    "end": "109159"
  },
  {
    "text": "could have been I think it's because we offer a more streamlined approach to hosting modern Cloud applications at a",
    "start": "109159",
    "end": "115560"
  },
  {
    "text": "significantly better price point applications on render heal the M themselves and scale automatically",
    "start": "115560",
    "end": "122439"
  },
  {
    "text": "giving developers the features and flexibility of something like kubernetes but without any of the complexity we're",
    "start": "122439",
    "end": "129280"
  },
  {
    "text": "always working to bring the latest industry advances to our platform so your applications can Leverage The",
    "start": "129280",
    "end": "135319"
  },
  {
    "text": "state-of the art in the cloud without you having to do or learn anything all right learn more about how render",
    "start": "135319",
    "end": "141480"
  },
  {
    "text": "compares to Heroku at",
    "start": "141480",
    "end": "144879"
  },
  {
    "text": "render.png render platform again that's",
    "start": "148840",
    "end": "153360"
  },
  {
    "text": "[Music]",
    "start": "155440",
    "end": "163939"
  },
  {
    "text": "[Music]",
    "start": "168000",
    "end": "177840"
  },
  {
    "text": "render.png price and unless you've had some Network outages or some packet loss or even like at your home you always",
    "start": "178840",
    "end": "185400"
  },
  {
    "text": "think it will work right there won't be any problems well it doesn't work like that in reality discs fail all the time",
    "start": "185400",
    "end": "191879"
  },
  {
    "text": "the more infrastructure you have the more you realize how just often discs fail CDN fail all the time uh in episode",
    "start": "191879",
    "end": "201200"
  },
  {
    "text": "10 we talked about how fastly failed for a few minutes and half the internet went down that was an interesting one so how",
    "start": "201200",
    "end": "209159"
  },
  {
    "text": "do you know that the beautifully crafted code that you ship continuously it's test driven it's beautiful it gets out",
    "start": "209159",
    "end": "216439"
  },
  {
    "text": "there how do you know that you'll continue serving its purpose when failures happen because they will happen",
    "start": "216439",
    "end": "222439"
  },
  {
    "text": "I think at least in my mind that's where chaos engineering comes in but what is your perspective Uma",
    "start": "222439",
    "end": "229519"
  },
  {
    "text": "that's right chaos engineering it was being viewed in a little bit different",
    "start": "229519",
    "end": "235000"
  },
  {
    "text": "way earlier it was purely for stopping the outages the sres were tasked with",
    "start": "235000",
    "end": "242599"
  },
  {
    "text": "the you know I tried everything but now can you do something new you are a super",
    "start": "242599",
    "end": "248799"
  },
  {
    "text": "sari so okay let me do chaos engineering but um I believe it's changing right",
    "start": "248799",
    "end": "256320"
  },
  {
    "text": "chaos engineering is uh a little bit more",
    "start": "256320",
    "end": "261400"
  },
  {
    "text": "than a tough piece uh that is meant for super sres uh now chaos engineering is",
    "start": "261400",
    "end": "269160"
  },
  {
    "text": "more of um a good and easy and a musthave tool for deop as long as you're",
    "start": "269160",
    "end": "275960"
  },
  {
    "text": "trying to improve something on reliability yes you're right it's it's about reliability nothing is reliable",
    "start": "275960",
    "end": "282840"
  },
  {
    "text": "not just networks almost um uh anything that you deal with if it is software is",
    "start": "282840",
    "end": "289039"
  },
  {
    "text": "unreliable it is reliable to some extent but not 100% so I believe chaos",
    "start": "289039",
    "end": "295400"
  },
  {
    "text": "engineering is still an evolving subject and uh it has evolved in the last few",
    "start": "295400",
    "end": "301360"
  },
  {
    "text": "years from being uh purely a Fascination for nsre as an expert subject for an SRE",
    "start": "301360",
    "end": "310080"
  },
  {
    "text": "into more of um you know must have good to have tool for all sorts of um roles",
    "start": "310080",
    "end": "318120"
  },
  {
    "text": "ranging from uh Sr to all the way to developer that's that's my observation",
    "start": "318120",
    "end": "325440"
  },
  {
    "text": "so okay chaos engineering is important it's an evolving topic it's I think a",
    "start": "325440",
    "end": "331639"
  },
  {
    "text": "feel that changes quite a bit right it's chaotic pun intended so why is it",
    "start": "331639",
    "end": "338319"
  },
  {
    "text": "important cartic why is chaos engineering important for shipping code writing code what is the link there I",
    "start": "338319",
    "end": "345319"
  },
  {
    "text": "think you mentioned about fastly going down for a few minutes and that took half the internet down with it and I'm",
    "start": "345319",
    "end": "351680"
  },
  {
    "text": "sure it would have cost a lot down times are extremely costly you would want to avoid them",
    "start": "351680",
    "end": "358000"
  },
  {
    "text": "dearly and that is is I think enough motivation for you to test how reliable",
    "start": "358000",
    "end": "363639"
  },
  {
    "text": "your systems are and it's like Umar mentioned it's not something that you",
    "start": "363639",
    "end": "368759"
  },
  {
    "text": "only do in production though that is where the benefits of chaos inating has",
    "start": "368759",
    "end": "374840"
  },
  {
    "text": "been most realized over the last decade or so but it is important that you go ahead",
    "start": "374840",
    "end": "383039"
  },
  {
    "text": "and test your systems because there is so much changing there in your",
    "start": "383039",
    "end": "389000"
  },
  {
    "text": "deployment environment all the time in today's microservices world the application that you're deploying in",
    "start": "389000",
    "end": "395120"
  },
  {
    "text": "your deployment environment could be kubernetes it could be somewhere on the cloud there are so",
    "start": "395120",
    "end": "400919"
  },
  {
    "text": "many other moving parts that you depend on to give you that wholesome experience for the user things that help developers",
    "start": "400919",
    "end": "408680"
  },
  {
    "text": "support sres and things that are viewed by the end user there are so many",
    "start": "408680",
    "end": "413840"
  },
  {
    "text": "components in the deployment environment which cat to different audiences help running the entire system",
    "start": "413840",
    "end": "420440"
  },
  {
    "text": "it's possible any of those components may go down relying in varied degree of",
    "start": "420440",
    "end": "427280"
  },
  {
    "text": "degradation in user experience it could inhibit your support team from serving customers better or",
    "start": "427280",
    "end": "434599"
  },
  {
    "text": "the customers might have a direct impact not being able to use your service and that is something we would",
    "start": "434599",
    "end": "440680"
  },
  {
    "text": "want to avoid and K enging is a lot about learning your systems as well many",
    "start": "440680",
    "end": "446240"
  },
  {
    "text": "times we assume certain infrastructure [Music] AIDS while developing code which turn",
    "start": "446240",
    "end": "453639"
  },
  {
    "text": "out to be untrue when you're actually deploying it and you're uh really want to know what's going to happen when",
    "start": "453639",
    "end": "461000"
  },
  {
    "text": "things fail in the infra side so yes I think that is really about",
    "start": "461000",
    "end": "467000"
  },
  {
    "text": "chaos engineering as as to why that is important so taking that how do you",
    "start": "467000",
    "end": "474000"
  },
  {
    "text": "chaos engineer a CDN there's just one that you have in your system",
    "start": "474000",
    "end": "480159"
  },
  {
    "text": "how do you apply chaos engineering principles to test the resiliency of",
    "start": "480159",
    "end": "485680"
  },
  {
    "text": "your CDN can you do that even I think ultimately you would host your CDN on",
    "start": "485680",
    "end": "493599"
  },
  {
    "text": "infrastructure that you're either putting on your own data centers or on the cloud so ultimately anything that's",
    "start": "493599",
    "end": "500680"
  },
  {
    "text": "powering software is ultimately built on some platform and you could go ahead and",
    "start": "500680",
    "end": "507879"
  },
  {
    "text": "start off by checking what happens when something fails in the platform it could",
    "start": "507879",
    "end": "513120"
  },
  {
    "text": "be a disk it could be a network it could be some resource",
    "start": "513120",
    "end": "518479"
  },
  {
    "text": "exertion that you are seeing in the platforms that is hosting the CDM and I'm sure when you're building the",
    "start": "518479",
    "end": "526240"
  },
  {
    "text": "network the data Network you you're still ensuring that data spread across",
    "start": "526240",
    "end": "532200"
  },
  {
    "text": "different machines different regions or areas and you're somehow built buing",
    "start": "532200",
    "end": "539680"
  },
  {
    "text": "some amount of resiliency into how the data is served retrieved and served to",
    "start": "539680",
    "end": "544720"
  },
  {
    "text": "your inducers as part of a CDN so you can check the extent of high",
    "start": "544720",
    "end": "550320"
  },
  {
    "text": "availability that you have built in by targeting some very simple infrastructure faults I would say that",
    "start": "550320",
    "end": "557040"
  },
  {
    "text": "would be a good starting point okay what do you think Umar anything to add I mean CDN it's a complex topic which part of",
    "start": "557040",
    "end": "565600"
  },
  {
    "text": "CDN you're talking about the delivery your networks need to be reliable your",
    "start": "565600",
    "end": "571920"
  },
  {
    "text": "supporting infrastructure need to be reliable and the software that runs CDN",
    "start": "571920",
    "end": "577399"
  },
  {
    "text": "need to be reliable right so the idea of applying chaos engineering to your CDM",
    "start": "577399",
    "end": "585200"
  },
  {
    "text": "is to improve something that's already mostly reliable right today the cdna is",
    "start": "585200",
    "end": "592320"
  },
  {
    "text": "reliable we all work on internet but it is services like fastly going down once",
    "start": "592320",
    "end": "598680"
  },
  {
    "text": "or you know you a year or even less often yeah first time in five years for",
    "start": "598680",
    "end": "604360"
  },
  {
    "text": "us first time in five years and we took that and we are saying that hey you know",
    "start": "604360",
    "end": "610200"
  },
  {
    "text": "something has happened how do I apply chaos engineering into it uh in reality it's not that simple in my opinion right",
    "start": "610200",
    "end": "617320"
  },
  {
    "text": "M site reliability itself is an engineering chaos is an engineering",
    "start": "617320",
    "end": "623200"
  },
  {
    "text": "right so engineering comes with the understanding what's going on and there",
    "start": "623200",
    "end": "628519"
  },
  {
    "text": "is no unique way of saying that this is exactly how I'm going to fix it it is going to depend on what is the problem",
    "start": "628519",
    "end": "636240"
  },
  {
    "text": "in that given situation so I would say you can apply chaos engineering not just",
    "start": "636240",
    "end": "643000"
  },
  {
    "text": "only to CDN to any other system but really looking at the way the services",
    "start": "643000",
    "end": "650360"
  },
  {
    "text": "are architected or deployed and look at the services and see is there something",
    "start": "650360",
    "end": "658519"
  },
  {
    "text": "that I can see as a low hanging fruit that's either doubtful about reliability",
    "start": "658519",
    "end": "665920"
  },
  {
    "text": "or you know it's constantly causing me trouble let me go and attack that debug",
    "start": "665920",
    "end": "672720"
  },
  {
    "text": "that right so then the one way to debug that is can I actually introduce a fault",
    "start": "672720",
    "end": "678959"
  },
  {
    "text": "and see right so you need more ways of reproducing The Faults and then you go",
    "start": "678959",
    "end": "685000"
  },
  {
    "text": "and go to your sres or sres generally go and try to fix up quick recovery points",
    "start": "685000",
    "end": "691920"
  },
  {
    "text": "or try to avoid that um dependency on that failure but really you need to go",
    "start": "691920",
    "end": "698079"
  },
  {
    "text": "back to developers to really fix the root cause of it right so when you if you ask me to summarize",
    "start": "698079",
    "end": "705839"
  },
  {
    "text": "the whole chaos engineering for CDN it needs to be at different levels infrastructure infrastructure again is",
    "start": "705839",
    "end": "712800"
  },
  {
    "text": "storage and network if I uh recollect some of the scenarios that I heard of",
    "start": "712800",
    "end": "718440"
  },
  {
    "text": "it's always about a slow storage and that caused more of a bigger issue all",
    "start": "718440",
    "end": "724800"
  },
  {
    "text": "of a sudden and uh it never happened the storage slowness right or networks",
    "start": "724800",
    "end": "730600"
  },
  {
    "text": "usually are very tolerant in terms of faults but still you know like double",
    "start": "730600",
    "end": "735720"
  },
  {
    "text": "triple Falls can happen so one is about uh verifying how reliable is your",
    "start": "735720",
    "end": "742959"
  },
  {
    "text": "infrastructure dependency right so try to continue some slownesses intentionally and keep verifying your",
    "start": "742959",
    "end": "749560"
  },
  {
    "text": "CDN continues to work and that's one level the other level is take a look at",
    "start": "749560",
    "end": "754800"
  },
  {
    "text": "your services and how reliable you are and then if networks go slow or storage",
    "start": "754800",
    "end": "761920"
  },
  {
    "text": "go slow do you have a software that is reliable enough to switch on to",
    "start": "761920",
    "end": "767160"
  },
  {
    "text": "something else or do something that's more proactive to keep continuing to S",
    "start": "767160",
    "end": "772800"
  },
  {
    "text": "the data so as I said it's it's engineering and it that's why we need good tools for set the engineers that's",
    "start": "772800",
    "end": "780680"
  },
  {
    "text": "chaos enger that makes perfect sense to me so if I had to summarize what chaos",
    "start": "780680",
    "end": "786600"
  },
  {
    "text": "engineering is in one short sentence to me that would be the injection of",
    "start": "786600",
    "end": "792800"
  },
  {
    "text": "artificial faults they're not real they're artificial they're made we make them to see how the system as a whole",
    "start": "792800",
    "end": "799760"
  },
  {
    "text": "reacts to those artificial faults would you refine that add something more to",
    "start": "799760",
    "end": "805720"
  },
  {
    "text": "that what is it what what is chaos injuring to you in one short sentence I'll probably take a crack at it and I",
    "start": "805720",
    "end": "812639"
  },
  {
    "text": "think Kik can give probably better answer I usually separate chaos and",
    "start": "812639",
    "end": "818680"
  },
  {
    "text": "Engineering as two different words in my mind people always think chaos engineering is chaos to me it is it's",
    "start": "818680",
    "end": "826800"
  },
  {
    "text": "easy to introduce chaos of course you have no better tools it's uh faster to",
    "start": "826800",
    "end": "831880"
  },
  {
    "text": "introduce chaos but I would give more preference or more importance to the",
    "start": "831880",
    "end": "839120"
  },
  {
    "text": "engineering side of chaos engineering it is always about what should happen when",
    "start": "839120",
    "end": "844519"
  },
  {
    "text": "you introduce a fault right a very simple fault a very simple Service uh if",
    "start": "844519",
    "end": "850440"
  },
  {
    "text": "it fails how you react to it uh is always well tested your Dev Q Sr user",
    "start": "850440",
    "end": "857480"
  },
  {
    "text": "acceptance test we are living in the modern day all our systems are like uh",
    "start": "857480",
    "end": "863240"
  },
  {
    "text": "very modern so but failures do happen because",
    "start": "863240",
    "end": "868399"
  },
  {
    "text": "something unex expected untested has happened all right and um now we are",
    "start": "868399",
    "end": "874360"
  },
  {
    "text": "looking at chaos engineering as a way to unearth those Falls in a in a willful",
    "start": "874360",
    "end": "880560"
  },
  {
    "text": "manner right so what is chaos Engineering in that sense is when a fault happens what should you look for",
    "start": "880560",
    "end": "888680"
  },
  {
    "text": "right uh how do you actually search uh for a fault right so that's the steady",
    "start": "888680",
    "end": "894600"
  },
  {
    "text": "state hypothesis right if you go and look at what is my study State you can",
    "start": "894600",
    "end": "901000"
  },
  {
    "text": "look at just one service or look at many services together and uh if you define",
    "start": "901000",
    "end": "907560"
  },
  {
    "text": "the stady state hypothesis that is closer to your business or a business",
    "start": "907560",
    "end": "913639"
  },
  {
    "text": "loss then you will come to chaos right so and the tools and the strategy design",
    "start": "913639",
    "end": "922759"
  },
  {
    "text": "should go towards thinking more on the engineering side of you know how can I",
    "start": "922759",
    "end": "930160"
  },
  {
    "text": "avoid a certain loss or how can I unearth a complex scenario or a complex",
    "start": "930160",
    "end": "936800"
  },
  {
    "text": "quy scenario and then I can split that scenario into multiple chaos stuff then",
    "start": "936800",
    "end": "942360"
  },
  {
    "text": "that becomes easy actually so yeah it's engineering that's that's the way I look",
    "start": "942360",
    "end": "947720"
  },
  {
    "text": "at I really I'm really looking forward to KK's question but before that I would like to ask you Umar how do you look at",
    "start": "947720",
    "end": "955360"
  },
  {
    "text": "a system how do you look at the steady state of a system what do you use I would generally Define the system in the",
    "start": "955360",
    "end": "964279"
  },
  {
    "text": "minds of people who are the Persona that are using and uh what keeps sres and uh",
    "start": "964279",
    "end": "973040"
  },
  {
    "text": "the management of the sres up at night right so it's something that is uh",
    "start": "973040",
    "end": "978920"
  },
  {
    "text": "closer to business criticality the service right so that's what the system",
    "start": "978920",
    "end": "985079"
  },
  {
    "text": "to me is it it is not really about the technical stack and uh technical stack comes later",
    "start": "985079",
    "end": "992399"
  },
  {
    "text": "that's where we introduce chaos but um the system really is about service and service catalog hierarchy of services",
    "start": "992399",
    "end": "1000079"
  },
  {
    "text": "dependency of services this is what the system is so I would go ahead and Define",
    "start": "1000079",
    "end": "1006319"
  },
  {
    "text": "that map and um identify the critical",
    "start": "1006319",
    "end": "1011759"
  },
  {
    "text": "points and then I'll start thinking about uh you know manually if I",
    "start": "1011759",
    "end": "1017199"
  },
  {
    "text": "introduce the fa what all will shake up right where what can uh Len enough what",
    "start": "1017199",
    "end": "1023079"
  },
  {
    "text": "can fail and uh who will wake up first right um before the customer start",
    "start": "1023079",
    "end": "1029160"
  },
  {
    "text": "screaming too much so that's that's what is the system in my uh view where you're",
    "start": "1029160",
    "end": "1035720"
  },
  {
    "text": "going to apply chaos engineering on so what I'm hearing is that not only you",
    "start": "1035720",
    "end": "1041480"
  },
  {
    "text": "need to know all the services that make up a system but also what does it mean",
    "start": "1041480",
    "end": "1047760"
  },
  {
    "text": "for end users to be happy when it comes to using that system so you define all",
    "start": "1047760",
    "end": "1052840"
  },
  {
    "text": "the services and make the system and also what does healthy mean for every single component in the system and that",
    "start": "1052840",
    "end": "1059240"
  },
  {
    "text": "is your steady state right steady state is Define What happiness means for your end users capture that somehow I imagine",
    "start": "1059240",
    "end": "1066640"
  },
  {
    "text": "dashboards metrics logs no yes again it depends on how world or",
    "start": "1066640",
    "end": "1073720"
  },
  {
    "text": "structured the system is it's it's really about uh good dashboards if you have and uh you are using good service",
    "start": "1073720",
    "end": "1082000"
  },
  {
    "text": "level object uh scheme then you have a system that you are looking at right and",
    "start": "1082000",
    "end": "1088640"
  },
  {
    "text": "if you're only measuring how often the PS are happening and if you're really depending on how happy my customers are",
    "start": "1088640",
    "end": "1096640"
  },
  {
    "text": "as a metric generally to rely on how reliable your systems are then you are",
    "start": "1096640",
    "end": "1101760"
  },
  {
    "text": "in for a surprise yeah you should have a good U uh schematic of uh the service",
    "start": "1101760",
    "end": "1107200"
  },
  {
    "text": "level objectives that is a great answer very complete uh a lot more",
    "start": "1107200",
    "end": "1112799"
  },
  {
    "text": "comprehensive than I was expecting but was very very good which comes back to cartic and the question was I know we",
    "start": "1112799",
    "end": "1119480"
  },
  {
    "text": "talked a lot so let's restate the question uh the question was what is chaos Engineering in one short sentence",
    "start": "1119480",
    "end": "1126640"
  },
  {
    "text": "yeah I think we are living in the times of the pandemic so let's call it injecting harm to build immunity just",
    "start": "1126640",
    "end": "1134080"
  },
  {
    "text": "that instead of injecting harm into human beings you're doing it on systems so I would U Define chaos engineering as",
    "start": "1134080",
    "end": "1141559"
  },
  {
    "text": "that and made a great point about um study State hypothesis I think when",
    "start": "1141559",
    "end": "1148039"
  },
  {
    "text": "Netflix and Salesforce and Amazon all these folks put together the principles of chaos a long time back they made that",
    "start": "1148039",
    "end": "1155880"
  },
  {
    "text": "as the central piece of the discipline of chaos engineering along with",
    "start": "1155880",
    "end": "1161520"
  },
  {
    "text": "recommendations to try different kinds of faults and run chaos continuously uh",
    "start": "1161520",
    "end": "1167159"
  },
  {
    "text": "because you never know when this is system behaves in what way because of what change induced into it so yes I",
    "start": "1167159",
    "end": "1175120"
  },
  {
    "text": "think chaos engineering is a lot about scientifically trying to understand or",
    "start": "1175120",
    "end": "1180919"
  },
  {
    "text": "mapping user happiness to metrics and logs and events study State can be very",
    "start": "1180919",
    "end": "1186480"
  },
  {
    "text": "diverse and today's age that diversity has just increased you could be talking",
    "start": "1186480",
    "end": "1191679"
  },
  {
    "text": "about metrics you could be talking about the availability of some Downstream service or it could be something on your",
    "start": "1191679",
    "end": "1200679"
  },
  {
    "text": "clusters so we talking about resources in kubernetes it could be the state of a",
    "start": "1200679",
    "end": "1205760"
  },
  {
    "text": "resource and there are custom resources that extend the traditional kubernetes",
    "start": "1205760",
    "end": "1211600"
  },
  {
    "text": "capabilities to a lot of domain specific intelligence so being able to validate",
    "start": "1211600",
    "end": "1217120"
  },
  {
    "text": "that info is also part of study state so I think yes chaos engineering is about",
    "start": "1217120",
    "end": "1222400"
  },
  {
    "text": "willful fault injection like you mentioned there are artificially inducing faults in order to to verify",
    "start": "1222400",
    "end": "1229480"
  },
  {
    "text": "how the system is behaving and have good means of identifying the",
    "start": "1229480",
    "end": "1234960"
  },
  {
    "text": "deviation in study State and checking whether with it whether it is within tolerable limits or no and then it's all",
    "start": "1234960",
    "end": "1242360"
  },
  {
    "text": "about doing it continuously by going back to the drawing board fixing your application business logic or maybe your",
    "start": "1242360",
    "end": "1248919"
  },
  {
    "text": "deployment practices coming back and repeating it and this proceeding with",
    "start": "1248919",
    "end": "1254200"
  },
  {
    "text": "the next possible outage that you can think of",
    "start": "1254200",
    "end": "1259650"
  },
  {
    "text": "[Music]",
    "start": "1259650",
    "end": "1266320"
  },
  {
    "text": "what's up shippers this episode is brought to you by senty you already know working code means happy customers and",
    "start": "1266320",
    "end": "1272400"
  },
  {
    "text": "that's exactly why teams choose sentury from airor tracking to Performance monitoring Sentry helps team see what",
    "start": "1272400",
    "end": "1277840"
  },
  {
    "text": "actually matters resolve problems quicker and learn continuously about their applications from the front end to",
    "start": "1277840",
    "end": "1283000"
  },
  {
    "text": "the back end over a million developers and 70,000 organizations already ship better software faster with Sentry that",
    "start": "1283000",
    "end": "1290080"
  },
  {
    "text": "includes us and guess what you can too ship it listeners new to Sentry get the team plan for free for 3 months use the",
    "start": "1290080",
    "end": "1296600"
  },
  {
    "text": "code ship it when you sign up head to sentry.io and use the code ship",
    "start": "1296600",
    "end": "1302460"
  },
  {
    "text": "[Music]",
    "start": "1302460",
    "end": "1308599"
  },
  {
    "text": "it this doesn't happen often but uh I was talking to one of our listeners Patrick F in slack and he has a question",
    "start": "1317520",
    "end": "1325520"
  },
  {
    "text": "more like a suggestion which I think is a very good one to bring up in this",
    "start": "1325520",
    "end": "1330640"
  },
  {
    "text": "interview in this conversation this episode Patrick is saying that he would love to hear about practicing",
    "start": "1330640",
    "end": "1337039"
  },
  {
    "text": "inefficiencies or applying nonest practices in small doses I know it's not",
    "start": "1337039",
    "end": "1343799"
  },
  {
    "text": "exactly the chaos engineering that we discussed but I can see an over AP",
    "start": "1343799",
    "end": "1349039"
  },
  {
    "text": "between doing the wrong thing on purpose and Chaos engineering what do you think",
    "start": "1349039",
    "end": "1355039"
  },
  {
    "text": "cartic I think it makes sense and I think this is especially true when you're trying out trying to find out",
    "start": "1355039",
    "end": "1361880"
  },
  {
    "text": "rather how good your security systems are there's a entire new category of or",
    "start": "1361880",
    "end": "1368320"
  },
  {
    "text": "a subcategory within chos engineering called as security chaos engineering where people are trying to find out how",
    "start": "1368320",
    "end": "1374840"
  },
  {
    "text": "reliable their systems are in terms of security by introducing some vulnerabilities deliberately and um I",
    "start": "1374840",
    "end": "1382320"
  },
  {
    "text": "can relate a lot to Patrick when he says running things in the nonb practice way",
    "start": "1382320",
    "end": "1387720"
  },
  {
    "text": "you can run privileged containers Mount host paths and basically try and see how",
    "start": "1387720",
    "end": "1394480"
  },
  {
    "text": "your system behaves is it being called out do you have the right policies that restrict you from doing so these are",
    "start": "1394480",
    "end": "1401480"
  },
  {
    "text": "things that you would want to find out and um not just for security I think",
    "start": "1401480",
    "end": "1406840"
  },
  {
    "text": "that's probably one thing that comes to mind straight away but even for other scenarios maybe we talked about running",
    "start": "1406840",
    "end": "1414240"
  },
  {
    "text": "single replicas of applications sometimes you would want to see what is the recovery time of your",
    "start": "1414240",
    "end": "1420840"
  },
  {
    "text": "app let's say you were not running multiple replicas of an application you were just going with a single replica",
    "start": "1420840",
    "end": "1426320"
  },
  {
    "text": "and there was a failure you might want to figure out how best or how quickly you were able to",
    "start": "1426320",
    "end": "1432400"
  },
  {
    "text": "recover maybe reschedule and bring up once again register to your register the",
    "start": "1432400",
    "end": "1438440"
  },
  {
    "text": "proxy and then start suring data once again how quickly does this happen",
    "start": "1438440",
    "end": "1443640"
  },
  {
    "text": "sometimes you would you might want to run in modes that are not classified as",
    "start": "1443640",
    "end": "1448880"
  },
  {
    "text": "the the best practices you would still learn a lot about your system by running",
    "start": "1448880",
    "end": "1454240"
  },
  {
    "text": "that way so that's something that is uh should be done but most probably on",
    "start": "1454240",
    "end": "1460799"
  },
  {
    "text": "staging environments or development clusters because you would not want to",
    "start": "1460799",
    "end": "1465919"
  },
  {
    "text": "attempt this in production because these are things you would still learn anyways where you're running it even in a nonpr",
    "start": "1465919",
    "end": "1472960"
  },
  {
    "text": "environment anything to add um to that yeah it's actually a very interesting question I think uh you're saying",
    "start": "1472960",
    "end": "1480320"
  },
  {
    "text": "Patrick is asking should we do Implement non-best practices or inefficient",
    "start": "1480320",
    "end": "1486679"
  },
  {
    "text": "practices so I'm saying the same thing when I say chaos is a best practice",
    "start": "1486679",
    "end": "1492039"
  },
  {
    "text": "right it's a must have that really means that you introduce non- bestest practices into your production that is",
    "start": "1492039",
    "end": "1499200"
  },
  {
    "text": "chaos right so your best practice says that do everything right so chaos",
    "start": "1499200",
    "end": "1505760"
  },
  {
    "text": "engineering says that break something don't assume that everything will happen so the best practice is to have chaos",
    "start": "1505760",
    "end": "1512240"
  },
  {
    "text": "engineering that means uh this practic is not to follow always the best practices that you asked to follow and",
    "start": "1512240",
    "end": "1519200"
  },
  {
    "text": "uh as a result of breaking things on purpose or willful fault injection you",
    "start": "1519200",
    "end": "1524399"
  },
  {
    "text": "will improve your best practices that means you did follow some non best practi practice and um that une Earth",
    "start": "1524399",
    "end": "1531640"
  },
  {
    "text": "does something so you tuned your best practices so I would say he's 100% right",
    "start": "1531640",
    "end": "1537919"
  },
  {
    "text": "and uh he's just put it differently and we are putting chaos engineering as a more polished word but uh it's it's an",
    "start": "1537919",
    "end": "1545840"
  },
  {
    "text": "AB absolute thing no one can tell everything will work fine I always keep going back to how many learnings I",
    "start": "1545840",
    "end": "1553120"
  },
  {
    "text": "personally used to take from fire drills or even like red team thinking that was",
    "start": "1553120",
    "end": "1558440"
  },
  {
    "text": "a very powerful one but taking a step back and summarizing this is you tend to",
    "start": "1558440",
    "end": "1565240"
  },
  {
    "text": "learn more from failures than from successes right so when you fail there's",
    "start": "1565240",
    "end": "1570799"
  },
  {
    "text": "a lot of learnings there when you succeed sure but maybe doesn't feel as",
    "start": "1570799",
    "end": "1576440"
  },
  {
    "text": "significant maybe because also like the the the loss bias I think like when you",
    "start": "1576440",
    "end": "1581840"
  },
  {
    "text": "lose something it feels worse than when you win something I think it's rooted in",
    "start": "1581840",
    "end": "1586960"
  },
  {
    "text": "that loss feels like big like oh what my database was deleted oh no versus the",
    "start": "1586960",
    "end": "1592640"
  },
  {
    "text": "migration just worked sure it's okay no big deal right I think that's that's the way I thing about it okay so that was a",
    "start": "1592640",
    "end": "1599799"
  },
  {
    "text": "good one hopefully Patrick uh got what um well not what he was expecting but got something good out of this now I",
    "start": "1599799",
    "end": "1606640"
  },
  {
    "text": "would like us to go into a specific use case and I keep bringing this one up the change log.com application we are in a",
    "start": "1606640",
    "end": "1613960"
  },
  {
    "text": "unique position to be able to experiment and learn new things in the context of the app that runs all our shows all our",
    "start": "1613960",
    "end": "1622880"
  },
  {
    "text": "podcasts uh that's pretty unique as far as I know so Chang log.com is a",
    "start": "1622880",
    "end": "1629279"
  },
  {
    "text": "monolithic three tier application there's a front end a backend and a database it's single instance for",
    "start": "1629279",
    "end": "1635080"
  },
  {
    "text": "various reasons episode 10 has all the details and uh I'm wondering if we were",
    "start": "1635080",
    "end": "1640440"
  },
  {
    "text": "to start using chaos engineering practices which from what I'm hearing they're mostly targeted towards",
    "start": "1640440",
    "end": "1647159"
  },
  {
    "text": "microservices I think that's where they shine but what chaos engineering practices could we use for our",
    "start": "1647159",
    "end": "1654399"
  },
  {
    "text": "application just to see how resil resilient it is I think chos engineering is as applicable and important for",
    "start": "1654399",
    "end": "1662600"
  },
  {
    "text": "monolithic applications as they are for microservices sure I I think its",
    "start": "1662600",
    "end": "1667840"
  },
  {
    "text": "adoption has been uh increased because of all this paradigm shift to microservices and the fact that you have",
    "start": "1667840",
    "end": "1674679"
  },
  {
    "text": "more possible failure points the surface area for failure is much more with microservices but that's not to say that",
    "start": "1674679",
    "end": "1681600"
  },
  {
    "text": "it cannot be applied in principle to monolithic applications in spite of being monolith there are some amount of",
    "start": "1681600",
    "end": "1689720"
  },
  {
    "text": "dependencies that you would still have let's say infrastructural dependencies we talked about databases being used as",
    "start": "1689720",
    "end": "1696600"
  },
  {
    "text": "part of the stack it's very much possible that the diss become slow your",
    "start": "1696600",
    "end": "1703399"
  },
  {
    "text": "rights become very slow it's possible that you have space is getting filled up",
    "start": "1703399",
    "end": "1709080"
  },
  {
    "text": "you don't have space anymore to write things how you going to behave as an application that's probably very read",
    "start": "1709080",
    "end": "1715799"
  },
  {
    "text": "intensive and you are having some problems but you still have enough in",
    "start": "1715799",
    "end": "1721240"
  },
  {
    "text": "place to keep the users happy while you are able to recover your systems manually so this is something that you would still check even if you were",
    "start": "1721240",
    "end": "1728200"
  },
  {
    "text": "running a monolithic application and that's that's true for a lot of other infrastructure components as well and",
    "start": "1728200",
    "end": "1735919"
  },
  {
    "text": "when you do chos engineering then there are two ways of deriving the scenarios to get started with chaos one",
    "start": "1735919",
    "end": "1743720"
  },
  {
    "text": "approach is a completely explorative approach you take a look at the system you identify things these are the things",
    "start": "1743720",
    "end": "1749840"
  },
  {
    "text": "that can go wrong then you start going ahead and doing those controlled failures and noticing your system and",
    "start": "1749840",
    "end": "1757159"
  },
  {
    "text": "how it behaves the other way of deriving scenarios is to look for data historic",
    "start": "1757159",
    "end": "1763519"
  },
  {
    "text": "data of what has gone wrong before and what is the most problem atic area how",
    "start": "1763519",
    "end": "1769640"
  },
  {
    "text": "many times did I have to grow my volume how many times did I have to increase",
    "start": "1769640",
    "end": "1778360"
  },
  {
    "text": "the uh CPU course on my system and um when there was a lot of um interest lot",
    "start": "1778360",
    "end": "1785679"
  },
  {
    "text": "of reads lot of traffic what was the component that I needed to be most careful about which displayed let not",
    "start": "1785679",
    "end": "1793039"
  },
  {
    "text": "erroneous characteristics but characteristics that you would not identify as optimal behavor behavior and",
    "start": "1793039",
    "end": "1799080"
  },
  {
    "text": "then you go ahead and derive the scenario from there and go ahead and do it right so that pattern is common for",
    "start": "1799080",
    "end": "1805360"
  },
  {
    "text": "both monolithic as well as microservice applications but the general concept of chos engineering still applies here too",
    "start": "1805360",
    "end": "1812440"
  },
  {
    "text": "it's just that the failures here might be more tied to the infrastructure",
    "start": "1812440",
    "end": "1818200"
  },
  {
    "text": "rather than something that you would think of in case of micros microservices",
    "start": "1818200",
    "end": "1823960"
  },
  {
    "text": "world where the dependencies and services that you're running along with",
    "start": "1823960",
    "end": "1829360"
  },
  {
    "text": "your main business app offer as much food or as much possibility of failures",
    "start": "1829360",
    "end": "1835120"
  },
  {
    "text": "rather than the hosting infrastructure I would say so what tools would we use to",
    "start": "1835120",
    "end": "1840919"
  },
  {
    "text": "do all those things is there like a tool that you would recommend that we pick up and try simulating these scenarios or",
    "start": "1840919",
    "end": "1848480"
  },
  {
    "text": "faults whatever you want to call them yeah you were asking uh two creators of lus chaos project what tool would you",
    "start": "1848480",
    "end": "1855639"
  },
  {
    "text": "use yeah of course we both maybe not lmus",
    "start": "1855639",
    "end": "1861039"
  },
  {
    "text": "chaos it can happen unlikely but if you want to uh run into real chaos in chaos",
    "start": "1861039",
    "end": "1868960"
  },
  {
    "text": "engineering don't use uh litmas but if you want uh to stay organized in chaos",
    "start": "1868960",
    "end": "1874600"
  },
  {
    "text": "engineering you might uh choose litmas okay yeah the idea of litmas chaos is uh",
    "start": "1874600",
    "end": "1880120"
  },
  {
    "text": "to make sure that we provide a platform not just an experiment as I mentioned",
    "start": "1880120",
    "end": "1886440"
  },
  {
    "text": "earlier chaos engineering is real engineering you go through managing the experiments you managing the stady stop",
    "start": "1886440",
    "end": "1894000"
  },
  {
    "text": "stady State hypothesis logic and you keep changing it you're not happy with what you did last time so how do you",
    "start": "1894000",
    "end": "1900840"
  },
  {
    "text": "manage it in your system there are multiple versions of it we needed a platform uh in our prior life work life",
    "start": "1900840",
    "end": "1909279"
  },
  {
    "text": "that's when we looked for some good care enging tool and started writing lmas and",
    "start": "1909279",
    "end": "1914360"
  },
  {
    "text": "it became more widely adopted yeah I would say you can start with litmus and litmus is",
    "start": "1914360",
    "end": "1921000"
  },
  {
    "text": "just a chaos engineering platform but for you at change log I would also recommend the best practices as uh first",
    "start": "1921000",
    "end": "1928799"
  },
  {
    "text": "of all you need to play the role of um you know person outside the system try",
    "start": "1928799",
    "end": "1934760"
  },
  {
    "text": "to discover don't uh assume too much about uh how your system works but uh",
    "start": "1934760",
    "end": "1940880"
  },
  {
    "text": "start with game days apply uh the logic of um you know something will break when",
    "start": "1940880",
    "end": "1946799"
  },
  {
    "text": "I do something crazy right that's what is g day and then that",
    "start": "1946799",
    "end": "1952480"
  },
  {
    "text": "uh brings some good unknowns hopefully in the first day and then it shakes up",
    "start": "1952480",
    "end": "1957840"
  },
  {
    "text": "your uh co-workers and your management and then you you start putting a better",
    "start": "1957840",
    "end": "1964720"
  },
  {
    "text": "holistic approach then I would also say as a prerequisite you need to have good",
    "start": "1964720",
    "end": "1971159"
  },
  {
    "text": "metrics or a dashboard even before you apply chaos engineering do you have a",
    "start": "1971159",
    "end": "1977039"
  },
  {
    "text": "good monitoring system system because when you actually do apply it breaks but then you need to be able to take care of",
    "start": "1977039",
    "end": "1984360"
  },
  {
    "text": "uh observing what what has gone wrong and what do I do now right so it all goes in uh hand in hand Discovery and uh",
    "start": "1984360",
    "end": "1993480"
  },
  {
    "text": "reliability metrics reliability observability system all those things need to be in place and then start with",
    "start": "1993480",
    "end": "2001360"
  },
  {
    "text": "uh probably the back end right the infrastructure and even though it's monolithic you can still apply some",
    "start": "2001360",
    "end": "2008200"
  },
  {
    "text": "service level chaos such as you know push too much traffic into one of the",
    "start": "2008200",
    "end": "2015399"
  },
  {
    "text": "services that you use less but that can cause stress on overall systems and then",
    "start": "2015399",
    "end": "2023000"
  },
  {
    "text": "um there is a lot that you can do when you proactively in your pre-production environment right try to start there and",
    "start": "2023000",
    "end": "2030600"
  },
  {
    "text": "learn and then go from the either right or left into production or into you you",
    "start": "2030600",
    "end": "2036840"
  },
  {
    "text": "may find something that that you can improve on your uh pipeline so you can go and introduce uh this failures into",
    "start": "2036840",
    "end": "2044519"
  },
  {
    "text": "your pipeline and that might uh be a good place right for overall efficiency of your devops so when it comes to",
    "start": "2044519",
    "end": "2051520"
  },
  {
    "text": "starting with litmus the litmus platform I imagine we would need to have an account right on this platform it's not",
    "start": "2051520",
    "end": "2057240"
  },
  {
    "text": "something that we would run is that right litmus is a kubernetes application",
    "start": "2057240",
    "end": "2062398"
  },
  {
    "text": "it's not SAS so it's a kubernetes application completely open source it's a c ncf project you take and uh install",
    "start": "2062399",
    "end": "2071679"
  },
  {
    "text": "litmas on kubernetes it uh spins up a chaos Center and uh chaos Center you can",
    "start": "2071679",
    "end": "2080398"
  },
  {
    "text": "log in and you connect wherever you want to run chaos from there you you connect",
    "start": "2080399",
    "end": "2086440"
  },
  {
    "text": "to chaos Center and um you can then pick up a chaos experiment or a fault and uh",
    "start": "2086440",
    "end": "2094280"
  },
  {
    "text": "direct that fault towards your target or to the agent right you can run it on",
    "start": "2094280",
    "end": "2100119"
  },
  {
    "text": "your existing kubernetes or spin up a small kubernetes cluster uh to run",
    "start": "2100119",
    "end": "2105680"
  },
  {
    "text": "litness M and uh it is quite thin um but it is a kubernetes distributed",
    "start": "2105680",
    "end": "2111839"
  },
  {
    "text": "application you can scale it up if you're hundreds of uh Q SRS are using a",
    "start": "2111839",
    "end": "2119520"
  },
  {
    "text": "single instance of hitas it can scale up easily do you install it as a Helm chart",
    "start": "2119520",
    "end": "2124920"
  },
  {
    "text": "is there like an operator that comes with its own CR how how this get installed on",
    "start": "2124920",
    "end": "2131000"
  },
  {
    "text": "kubernetes yes you're right about that you do have a Helm chart that helps to",
    "start": "2131000",
    "end": "2136960"
  },
  {
    "text": "install the control plane offness and as part of the setup process",
    "start": "2136960",
    "end": "2144240"
  },
  {
    "text": "of the control plane you would go ahead and set up the um account and the",
    "start": "2144240",
    "end": "2151599"
  },
  {
    "text": "account is most probably about the users who's going to do the chaos and and uh",
    "start": "2151599",
    "end": "2158440"
  },
  {
    "text": "the next part is about the agent infrastructure this is the environment",
    "start": "2158440",
    "end": "2164440"
  },
  {
    "text": "you're going to actually do the experiments in so this can be the same place where you have the control plane installed Umar mentioned that litness",
    "start": "2164440",
    "end": "2170880"
  },
  {
    "text": "runs as a kuties app or you could have other clusters in your Fleet where you want to do chaos you would be",
    "start": "2170880",
    "end": "2176960"
  },
  {
    "text": "registering that into the portal and that is where the operators and crds get",
    "start": "2176960",
    "end": "2182280"
  },
  {
    "text": "installed as part of the agent setup and you can then go ahead and construct",
    "start": "2182280",
    "end": "2188079"
  },
  {
    "text": "scenarios or B flows as we call them through the litmus Center the chaos",
    "start": "2188079",
    "end": "2193480"
  },
  {
    "text": "Center and then they get executed inside the cluster where the agent takes",
    "start": "2193480",
    "end": "2199160"
  },
  {
    "text": "responsibility of playing the Manifest the custom resources and then reconciling them and then actually doing",
    "start": "2199160",
    "end": "2206040"
  },
  {
    "text": "the fault injection and study State validation process so I've seen somewhere I don't remember where uh Argo",
    "start": "2206040",
    "end": "2213760"
  },
  {
    "text": "CD being somehow related to this as well what is that relationship between litmus",
    "start": "2213760",
    "end": "2219200"
  },
  {
    "text": "and Argo CD we use Argo workflows as part of the chaos scenario construction",
    "start": "2219200",
    "end": "2227040"
  },
  {
    "text": "so we chose Argo workflows for its flexibility to order or sequence fults",
    "start": "2227040",
    "end": "2234800"
  },
  {
    "text": "in different ways it's workflow engine at its score we've instrumented the Arco workflows with some litmas intelligence",
    "start": "2234800",
    "end": "2242640"
  },
  {
    "text": "the the containers that carry out the steps within a workflow understand lmus API so they are used as part of the chos",
    "start": "2242640",
    "end": "2250160"
  },
  {
    "text": "workflows the Arco cd part I'm sure you might have heard of it more around the",
    "start": "2250160",
    "end": "2256440"
  },
  {
    "text": "gitops support that litmas offers so when we built litmas one of",
    "start": "2256440",
    "end": "2262640"
  },
  {
    "text": "the things we wanted to do was somehow weave in the chaos engineering aspects",
    "start": "2262640",
    "end": "2268720"
  },
  {
    "text": "into the standard gitops flow that people are beginning to use and people",
    "start": "2268720",
    "end": "2274520"
  },
  {
    "text": "are trying to use GPS to ensure the applications and infrastructure is maintained in a single source of truth",
    "start": "2274520",
    "end": "2281000"
  },
  {
    "text": "that is gate and they ensure that what is on their deployment environments match what is in their source and there",
    "start": "2281000",
    "end": "2288079"
  },
  {
    "text": "are controllers also called as um gitops operators which ensure that your",
    "start": "2288079",
    "end": "2295280"
  },
  {
    "text": "applications are upgraded whenever they change in the source Etc and often times",
    "start": "2295280",
    "end": "2300400"
  },
  {
    "text": "we see that people who have upgraded applications in their environment of or they have deployed new infrastructure",
    "start": "2300400",
    "end": "2307200"
  },
  {
    "text": "one to verify its sanity and one means of verifying sanity is by performing",
    "start": "2307200",
    "end": "2312520"
  },
  {
    "text": "some chaos experiments along with the specific expectation of what's going to happen",
    "start": "2312520",
    "end": "2318839"
  },
  {
    "text": "and they already have hypothesis in mind that they burn in into the experiment definition the experiment has the",
    "start": "2318839",
    "end": "2326040"
  },
  {
    "text": "ability to specify validation intent within it so people want to do those sanity checks whenever they've upgraded",
    "start": "2326040",
    "end": "2333119"
  },
  {
    "text": "their infrastructure or upgraded their applications and it was done in a manual way way so we wanted to automate that",
    "start": "2333119",
    "end": "2339839"
  },
  {
    "text": "and provide these users or this Persona with the means to run chaos experiments",
    "start": "2339839",
    "end": "2345960"
  },
  {
    "text": "automatically when something is changed via The kops Operators that's when we brought about the event tracker",
    "start": "2345960",
    "end": "2353079"
  },
  {
    "text": "functionality within litmas it runs as a separate microservice in your cluster so whenever Arco CD upgrades your",
    "start": "2353079",
    "end": "2360400"
  },
  {
    "text": "application on the cluster you have the option of triggering a predefined or a",
    "start": "2360400",
    "end": "2366160"
  },
  {
    "text": "pre- subscribed C SPF flow against it and um that happens via a call to the",
    "start": "2366160",
    "end": "2372680"
  },
  {
    "text": "chaos center from the event tracker service running in your cluster so that",
    "start": "2372680",
    "end": "2378079"
  },
  {
    "text": "is the relation that we have with Arco CD and it is true for other popular",
    "start": "2378079",
    "end": "2383920"
  },
  {
    "text": "giops toools as well could be flux or ke or you might have built in something",
    "start": "2383920",
    "end": "2389960"
  },
  {
    "text": "with your own you might have R some tooling by yourself using Helm so you have the option of triggering litmus",
    "start": "2389960",
    "end": "2396880"
  },
  {
    "text": "experiment or workflows as sanity checks post a standard giops operation and",
    "start": "2396880",
    "end": "2404160"
  },
  {
    "text": "there's another angle to it uh litmus also supports gitops for the chaos",
    "start": "2404160",
    "end": "2409520"
  },
  {
    "text": "artifacts so when you construct chaos scenarios these workflow manifests can",
    "start": "2409520",
    "end": "2414880"
  },
  {
    "text": "also be stored in git or committed into git automatically when you make changes",
    "start": "2414880",
    "end": "2419920"
  },
  {
    "text": "to the chaos workflows in your Source you will have that changes reflected on your Kos Center as well so that is",
    "start": "2419920",
    "end": "2426880"
  },
  {
    "text": "another perspective or uh way of looking at rmus with giops okay that makes a lot",
    "start": "2426880",
    "end": "2433480"
  },
  {
    "text": "of sense so I'm starting to form this like mental model in my head of how all this all this fits together in our setup",
    "start": "2433480",
    "end": "2441119"
  },
  {
    "text": "I can start seeing the integration points but what I'm wondering now Uma is if someone doesn't have",
    "start": "2441119",
    "end": "2448720"
  },
  {
    "text": "kubernetes how they start even using this so when you talk about litmas you",
    "start": "2448720",
    "end": "2454560"
  },
  {
    "text": "need kubernetes to run the chaos center right where the control plane of um",
    "start": "2454560",
    "end": "2461960"
  },
  {
    "text": "chaos engineering is put together right where the sres and developers interact",
    "start": "2461960",
    "end": "2468480"
  },
  {
    "text": "with it and where you interact with the chaos experiments that are stored on the Hub or on your private uh gate",
    "start": "2468480",
    "end": "2476599"
  },
  {
    "text": "repository all that is running as a kubernetes application so if you don't",
    "start": "2476599",
    "end": "2482800"
  },
  {
    "text": "have a kubernetes uh environment and your chaos engineering needs is for a",
    "start": "2482800",
    "end": "2488119"
  },
  {
    "text": "non- kubernetes kubernetes environment you just need to uh spin up a small",
    "start": "2488119",
    "end": "2494000"
  },
  {
    "text": "kubernetes cluster to host uh litmas chos Center and then you can",
    "start": "2494000",
    "end": "2501720"
  },
  {
    "text": "still create chaos scenarios or workflows or experiments towards your",
    "start": "2501720",
    "end": "2508599"
  },
  {
    "text": "monolithic Legacy applications or the regular infrastructure chaos such as any",
    "start": "2508599",
    "end": "2515280"
  },
  {
    "text": "cloud or virtual machines all that stuff right so litmus does not work just only",
    "start": "2515280",
    "end": "2522760"
  },
  {
    "text": "for kubernetes it works for everyone but we built it as a cloud native application for all good",
    "start": "2522760",
    "end": "2531280"
  },
  {
    "text": "[Music]",
    "start": "2533250",
    "end": "2543880"
  },
  {
    "text": "reasons what's up shippers this episode is to you by our friends at teleport",
    "start": "2543880",
    "end": "2549480"
  },
  {
    "text": "with teleport access plane you can quickly access any Computing resource anywhere engineers and security teams",
    "start": "2549480",
    "end": "2555720"
  },
  {
    "text": "can unify access to SSH servers kubernetes clusters web applications and databases across all environments",
    "start": "2555720",
    "end": "2562280"
  },
  {
    "text": "teleport is open core which you can use for free and it's supported by their cloud-hosted version which lets you",
    "start": "2562280",
    "end": "2567680"
  },
  {
    "text": "forget about configuring updating or managing teleport the teleport team does all that for you your team can focus on",
    "start": "2567680",
    "end": "2573960"
  },
  {
    "text": "your projects and spend less time worrying about infrastructure access try teleport today in the cloud self-hosted",
    "start": "2573960",
    "end": "2580520"
  },
  {
    "text": "or open source head to go teleport.to or more and get started again goport.com",
    "start": "2580520",
    "end": "2586510"
  },
  {
    "text": "[Music]",
    "start": "2586510",
    "end": "2595599"
  },
  {
    "text": "so this is a very special topic for me the reason why it's special is because I",
    "start": "2595599",
    "end": "2603240"
  },
  {
    "text": "disagreed with Kelsey hi Tower about running databases on kubernetes and I learned in the hard way again pun",
    "start": "2603240",
    "end": "2610480"
  },
  {
    "text": "intended that if you run databases on kubernetes the database needs to be",
    "start": "2610480",
    "end": "2615920"
  },
  {
    "text": "built for distributed system that comes and goes very quickly failures are",
    "start": "2615920",
    "end": "2622160"
  },
  {
    "text": "intermittent and they can take milliseconds and it can mess up with replication that's actually what",
    "start": "2622160",
    "end": "2627760"
  },
  {
    "text": "happened in our case when we run a post SQL cluster on kuties we tried crunchy",
    "start": "2627760",
    "end": "2633160"
  },
  {
    "text": "data and we also tried the zanda operator so we tried both and in both cases our replica fell",
    "start": "2633160",
    "end": "2641599"
  },
  {
    "text": "behind the writer head log uh just stopped replicating and then the master or like the primary shall I say the",
    "start": "2641599",
    "end": "2648240"
  },
  {
    "text": "primary the disc filled up crashed couldn't resume couldn't restart because",
    "start": "2648240",
    "end": "2654359"
  },
  {
    "text": "the disc was full the right headlock filled the disc the replication got broken uh we couldn't promote the",
    "start": "2654359",
    "end": "2659559"
  },
  {
    "text": "follower to be the leader because um it was too far behind so we had downtime we",
    "start": "2659559",
    "end": "2666640"
  },
  {
    "text": "lost some data so what do you think about running databases on kubernetes Zuma I know you have a bit of experience",
    "start": "2666640",
    "end": "2673280"
  },
  {
    "text": "in this area that's why I ask you first yes litmus is born out of trying to fix",
    "start": "2673280",
    "end": "2678880"
  },
  {
    "text": "bux when you're trying to run databases on kubernetes so I kind of have an",
    "start": "2678880",
    "end": "2685000"
  },
  {
    "text": "opinion that you cannot have an option of not running kubernetes and databases",
    "start": "2685000",
    "end": "2690559"
  },
  {
    "text": "on kubernetes forever five years ago that was not requirement uh 2 years ago",
    "start": "2690559",
    "end": "2696400"
  },
  {
    "text": "people thought it's very very difficult now I think there are mixed opinions uh",
    "start": "2696400",
    "end": "2702079"
  },
  {
    "text": "there are people running databases on kubernetes there's a good active Community you know data on kubernetes",
    "start": "2702079",
    "end": "2709680"
  },
  {
    "text": "community things are improving and uh it is an evolving subject and tools are",
    "start": "2709680",
    "end": "2716079"
  },
  {
    "text": "coming in uh databases are also changing right so the stateful sets or the the",
    "start": "2716079",
    "end": "2723960"
  },
  {
    "text": "root elements within kubernetes that are enabling distributed databases but at",
    "start": "2723960",
    "end": "2730160"
  },
  {
    "text": "the same time there are storage elements that are being built or improvised for",
    "start": "2730160",
    "end": "2738319"
  },
  {
    "text": "running databases on kubernetes right for example my earlier project open EPS",
    "start": "2738319",
    "end": "2745480"
  },
  {
    "text": "uh which is uh still a popular subject in in this space is uh having um the",
    "start": "2745480",
    "end": "2752599"
  },
  {
    "text": "concept of containerized storage right so you try to consider the storage as",
    "start": "2752599",
    "end": "2759559"
  },
  {
    "text": "container an element that is built for uh running data on kubernetes and",
    "start": "2759559",
    "end": "2765880"
  },
  {
    "text": "similarly there is an element of local PV that is started by kubernetes itself",
    "start": "2765880",
    "end": "2773200"
  },
  {
    "text": "and there are solutions being built on top of local PV what happens when this moves or this goes down so I would say",
    "start": "2773200",
    "end": "2781839"
  },
  {
    "text": "there are people who are running data on kubernetes but because the",
    "start": "2781839",
    "end": "2787240"
  },
  {
    "text": "infrastructure also becomes a microservice you need to understand that there are more failures that can happen",
    "start": "2787240",
    "end": "2794119"
  },
  {
    "text": "right so storage is not guaranteed to be running in one place it can just move around and uh how do you actually handle",
    "start": "2794119",
    "end": "2801359"
  },
  {
    "text": "that situation handle your application to do that so just assume that it's not",
    "start": "2801359",
    "end": "2807079"
  },
  {
    "text": "just your pod that can just go off and come back in assume that your storage",
    "start": "2807079",
    "end": "2812319"
  },
  {
    "text": "also can go off and come back in right so this is a natural thing and that's why your application just need to be",
    "start": "2812319",
    "end": "2819240"
  },
  {
    "text": "aware of s scenarios and build it for more resilience and Chaos engineering as",
    "start": "2819240",
    "end": "2825680"
  },
  {
    "text": "chaos C is a principle that can definitely help in in all these things so we will hopefully in a few years from",
    "start": "2825680",
    "end": "2832520"
  },
  {
    "text": "now you there will be questions like oh we thought data on kubernetes is not",
    "start": "2832520",
    "end": "2838640"
  },
  {
    "text": "possible but I see many people running it that could be what will happen is my",
    "start": "2838640",
    "end": "2844480"
  },
  {
    "text": "opinion I would I would agree with that I think there a process of um as you mentioned at the beginning of the",
    "start": "2844480",
    "end": "2851079"
  },
  {
    "text": "interview it's evolving so I think the storage the data layer is evolving on kubernetes but also the networking I",
    "start": "2851079",
    "end": "2857920"
  },
  {
    "text": "think it's evolving because in our case um in well the one that I mentioned earlier it was a networking High Network",
    "start": "2857920",
    "end": "2865000"
  },
  {
    "text": "latency packet loss very high packet loss which just messed up the replication poster sequel so it wasn't",
    "start": "2865000",
    "end": "2871119"
  },
  {
    "text": "specific to any Operator by the way it wasn't crunchy data's fault it was not zalando's fault the op operator",
    "start": "2871119",
    "end": "2877359"
  },
  {
    "text": "themselves that's what I'm referring to it was just the network was just messing up with a post SQL replication that's",
    "start": "2877359",
    "end": "2884040"
  },
  {
    "text": "that's what the problem was in other cases uh for the app itself when we had a three node communities cluster by the",
    "start": "2884040",
    "end": "2890599"
  },
  {
    "text": "way of a single node one I know it's very contentious but guess what it works better so reality says and the",
    "start": "2890599",
    "end": "2897119"
  },
  {
    "text": "practicality says it works better the point is when we had three nodes those volumes that should have moved around",
    "start": "2897119",
    "end": "2903640"
  },
  {
    "text": "the the PVS they didn't uh there were stuck and they couldn't get unstuck from the N that went away and because they",
    "start": "2903640",
    "end": "2909800"
  },
  {
    "text": "were in they remained in this unstuck in this stuck State couldn't detach they couldn't be reattached to other nodes so",
    "start": "2909800",
    "end": "2916559"
  },
  {
    "text": "that was a bit of a problem as well which hit us I know that things improved and they evolved but I don't feel they",
    "start": "2916559",
    "end": "2922440"
  },
  {
    "text": "are there yet especially if the database was not built to be distributed one from",
    "start": "2922440",
    "end": "2927720"
  },
  {
    "text": "day one what I'm wondering now cartic is if there is such a stateful system which was built to be distributed from day one",
    "start": "2927720",
    "end": "2933960"
  },
  {
    "text": "and it understands that and it's like in its DNA a is it easier to run it on",
    "start": "2933960",
    "end": "2939400"
  },
  {
    "text": "kubernetes I'm thinking maybe a message broker that was built to be distributed it still has some state but it works as",
    "start": "2939400",
    "end": "2946760"
  },
  {
    "text": "distributed system what do you think does does that make it easier yes I think to a great degree",
    "start": "2946760",
    "end": "2953720"
  },
  {
    "text": "does but the network problems are not going away anywhere Jad so if you take a",
    "start": "2953720",
    "end": "2959799"
  },
  {
    "text": "look at the litmas slack channel on the kubernetes workspace Network latency and",
    "start": "2959799",
    "end": "2965559"
  },
  {
    "text": "network loss are problem the most popular discussion items people are trying those experiments much more than",
    "start": "2965559",
    "end": "2971760"
  },
  {
    "text": "they trying other experiments so it is something that will continue to be there",
    "start": "2971760",
    "end": "2977880"
  },
  {
    "text": "as the network also evolves with storage and all the other Concepts um in the",
    "start": "2977880",
    "end": "2984040"
  },
  {
    "text": "cloud native world we will still have to address these uh network problems once in a while so message Brokers is a good",
    "start": "2984040",
    "end": "2992640"
  },
  {
    "text": "example and in fact um when we try to build some illustration for application",
    "start": "2992640",
    "end": "2999720"
  },
  {
    "text": "specific chaos experiments within litmas so application specific chaos is is a category of chaos experiments in which",
    "start": "2999720",
    "end": "3008119"
  },
  {
    "text": "the experiment business logic has some native checks health checks that are uh",
    "start": "3008119",
    "end": "3013400"
  },
  {
    "text": "specific to an app and they also consist of certain faults that are need to to a particular app and um uh the these are",
    "start": "3013400",
    "end": "3022000"
  },
  {
    "text": "these could be just the standard faults applied within an application context or",
    "start": "3022000",
    "end": "3027119"
  },
  {
    "text": "there could be some faults that are very native or very specific to a given application type so the first",
    "start": "3027119",
    "end": "3035040"
  },
  {
    "text": "application specific experiment that we considered was Kafka and um we have some",
    "start": "3035040",
    "end": "3040799"
  },
  {
    "text": "communities that are actually trying outness against Kafka uh strey is um one",
    "start": "3040799",
    "end": "3046839"
  },
  {
    "text": "of the Kafka providers who we are speaking with and trying to collaborate on to identify good scenarios that can",
    "start": "3046839",
    "end": "3053920"
  },
  {
    "text": "be used as part of testing what is relevant in the message broker world",
    "start": "3053920",
    "end": "3059720"
  },
  {
    "text": "is let us say you have some very intelligent message broker that is",
    "start": "3059720",
    "end": "3065520"
  },
  {
    "text": "capable of you know handling message cues and doing failovers and doing",
    "start": "3065520",
    "end": "3072240"
  },
  {
    "text": "elections and things like that because here also there is some amount of State involved so you have storage at play you",
    "start": "3072240",
    "end": "3080319"
  },
  {
    "text": "have Network at play you have all these things one of the scenarios that we got started with was killing a partition",
    "start": "3080319",
    "end": "3088200"
  },
  {
    "text": "leader which could also be a controller broker and then you have a series of",
    "start": "3088200",
    "end": "3093359"
  },
  {
    "text": "things happening you have um re-elections happening you're basically trying speak to zookeeper and you're",
    "start": "3093359",
    "end": "3099760"
  },
  {
    "text": "trying to ensure that the fails happen quick enough so the consumer message",
    "start": "3099760",
    "end": "3105400"
  },
  {
    "text": "timeout is not breached posession timeouts are not breached so these are things you would still want to find out",
    "start": "3105400",
    "end": "3111400"
  },
  {
    "text": "these are good experiments you would still do in these kind of environments differs from infra to infra when we did",
    "start": "3111400",
    "end": "3118000"
  },
  {
    "text": "this Kafka experiment on AWS with the standard storage class EBS based storage",
    "start": "3118000",
    "end": "3124640"
  },
  {
    "text": "class with the AWS cni versus when we did it against gke with the GPD based default storage",
    "start": "3124640",
    "end": "3131839"
  },
  {
    "text": "class and the cni there we saw there was a difference in the recovery times we",
    "start": "3131839",
    "end": "3137000"
  },
  {
    "text": "saw that we needed to set different timeouts at the consumer for the sample message stream that we were doing and",
    "start": "3137000",
    "end": "3144200"
  },
  {
    "text": "this experiment was a simple pod delete experiment you will have the need for chaos Engineering in these environments",
    "start": "3144200",
    "end": "3150960"
  },
  {
    "text": "as well both to learn about the system as well as prove some hypothesis that",
    "start": "3150960",
    "end": "3156119"
  },
  {
    "text": "you might already have around timeouts and such settings that you have so to come back to the earlier question will",
    "start": "3156119",
    "end": "3163160"
  },
  {
    "text": "data on kubernetes become simpler when uh application architecture evolves to become becoming distributed yes I think",
    "start": "3163160",
    "end": "3170200"
  },
  {
    "text": "that will definitely help and I'm just trying to tie together chaos engineering there the adoption of data on on",
    "start": "3170200",
    "end": "3177680"
  },
  {
    "text": "kubernetes can be accelerated much in the way general kubernetes adoption itself can be accelerated through chaos",
    "start": "3177680",
    "end": "3184079"
  },
  {
    "text": "engineering and um there are folks uh in the litmus community and I'm sure with",
    "start": "3184079",
    "end": "3190000"
  },
  {
    "text": "um I'm sure there are other projects speaking to such users as well where",
    "start": "3190000",
    "end": "3195480"
  },
  {
    "text": "they want to use kubernetes in production but they're not really confident about doing so and uh they",
    "start": "3195480",
    "end": "3201839"
  },
  {
    "text": "want to set up staging clusters test out lot of failures uh failures on the",
    "start": "3201839",
    "end": "3207480"
  },
  {
    "text": "kubernetes control plane itself you have your schedulers or controller managers going for a toss you have hcd going for",
    "start": "3207480",
    "end": "3214040"
  },
  {
    "text": "a toss and then you're also trying to see what happens when you kill pods the",
    "start": "3214040",
    "end": "3220240"
  },
  {
    "text": "multi- attach error issue as we typ typically like to call it the volume not",
    "start": "3220240",
    "end": "3225880"
  },
  {
    "text": "getting detached from one node and therefore it doesn't get attached to the other node this is something we found",
    "start": "3225880",
    "end": "3232119"
  },
  {
    "text": "very early in open EVS using the chaos experiment and something has come up in the six storage world to fix it today",
    "start": "3232119",
    "end": "3239680"
  },
  {
    "text": "and open EVS has taken those fixes on board so I think both the application",
    "start": "3239680",
    "end": "3248240"
  },
  {
    "text": "architecture the data architecture becoming more distributed as well as evolving chaos",
    "start": "3248240",
    "end": "3255079"
  },
  {
    "text": "engineering practices will ensure that the adoption of databases into kubernetes as well as the general",
    "start": "3255079",
    "end": "3261280"
  },
  {
    "text": "kubernetes adoption itself will increase I think the most important point that",
    "start": "3261280",
    "end": "3266760"
  },
  {
    "text": "resonates with me that you've made cartic is around the different platforms",
    "start": "3266760",
    "end": "3272079"
  },
  {
    "text": "having different recovery times I think that's really powerful because if you're",
    "start": "3272079",
    "end": "3277440"
  },
  {
    "text": "for example as we are running on linode we cannot apply the same approaches that",
    "start": "3277440",
    "end": "3282880"
  },
  {
    "text": "someone may be running on gcp or someone running on AWS infrastructure matters a",
    "start": "3282880",
    "end": "3288400"
  },
  {
    "text": "lot so then how do you know how does it behave in your case well one solution",
    "start": "3288400",
    "end": "3294400"
  },
  {
    "text": "would be to maybe apply litmus chaos and see how it behaves in practice also not",
    "start": "3294400",
    "end": "3300880"
  },
  {
    "text": "to mention that you do upgrades to your communities things improve most of the time but sometimes they get worse so how",
    "start": "3300880",
    "end": "3308280"
  },
  {
    "text": "do you find out what got worse before rolling in production and everything just failing over in hopefully failing",
    "start": "3308280",
    "end": "3315920"
  },
  {
    "text": "over other times just failing in unexpected ways so how do you Preen some of that and we all know that as much as",
    "start": "3315920",
    "end": "3323760"
  },
  {
    "text": "we want to be confident from our staging experiments the best failures happen in",
    "start": "3323760",
    "end": "3330480"
  },
  {
    "text": "production so as much as you can try to preempt things in staging until you go",
    "start": "3330480",
    "end": "3336880"
  },
  {
    "text": "into production you won't see it so maybe trying to generate production level load if it's possible it's not",
    "start": "3336880",
    "end": "3343079"
  },
  {
    "text": "always possible that would help so as a listener if I had to remember one thing",
    "start": "3343079",
    "end": "3348920"
  },
  {
    "text": "from this conversation what would that be uma yeah so the last stage of relax",
    "start": "3348920",
    "end": "3356520"
  },
  {
    "text": "ility is to be able to confidently Generate random triggers",
    "start": "3356520",
    "end": "3364599"
  },
  {
    "text": "after you apply uh every change to your system in production right so you you",
    "start": "3364599",
    "end": "3371400"
  },
  {
    "text": "upgraded you have good CD system and uh you applied the change in production but",
    "start": "3371400",
    "end": "3379520"
  },
  {
    "text": "also extend that CD to create a random fault uh because of that change and uh",
    "start": "3379520",
    "end": "3387000"
  },
  {
    "text": "if you are so confident that means you are testing well and it takes time and Chaos engineering uh starting in in some",
    "start": "3387000",
    "end": "3395280"
  },
  {
    "text": "form uh either in pre-production or in QA it all helps reaching that goal but",
    "start": "3395280",
    "end": "3402000"
  },
  {
    "text": "always remember that unless you are doing that confidently breaking things",
    "start": "3402000",
    "end": "3408039"
  },
  {
    "text": "confidently your systems are not reliable you can just assume that they are reliable but they're not so use",
    "start": "3408039",
    "end": "3414319"
  },
  {
    "text": "chaos engineering as a friend what do you think Artic would you agree with that doing Chaos engineering and",
    "start": "3414319",
    "end": "3420880"
  },
  {
    "text": "production is really like the ultimate stage the Nirvana of a very mature um",
    "start": "3420880",
    "end": "3428039"
  },
  {
    "text": "practice that you've set up in your organization so start small and explore lot of failures and",
    "start": "3428039",
    "end": "3437000"
  },
  {
    "text": "establish a culture of continuous chaos at all levels chaos has become more",
    "start": "3437000",
    "end": "3442720"
  },
  {
    "text": "democratic more ubiquitous nowadays the philosophy of chaos is sort of",
    "start": "3442720",
    "end": "3447880"
  },
  {
    "text": "percolated to all personas like said earlier from developers to QA Engineers",
    "start": "3447880",
    "end": "3453599"
  },
  {
    "text": "to sres so go ahead and perform chaos and then you will be able to uh sort of",
    "start": "3453599",
    "end": "3461400"
  },
  {
    "text": "confidently deploy uh your applications and sleep better at night thank you very much",
    "start": "3461400",
    "end": "3467359"
  },
  {
    "text": "carik thank you much umaa uh that was a great thought to end on a very powerful",
    "start": "3467359",
    "end": "3473119"
  },
  {
    "text": "one so yeah go forth and break things that's what we're saying in production by the way because until you do that in",
    "start": "3473119",
    "end": "3479400"
  },
  {
    "text": "production it's okay but it's not great so for the proper challenge the ultimate",
    "start": "3479400",
    "end": "3484559"
  },
  {
    "text": "Frontier some call It Go in production and break things and see how resilient",
    "start": "3484559",
    "end": "3489640"
  },
  {
    "text": "your system really is because those are the real failures that matter or the",
    "start": "3489640",
    "end": "3495359"
  },
  {
    "text": "only failures that matter you can learn from all the others but the production ones are special so the sooner you get",
    "start": "3495359",
    "end": "3501000"
  },
  {
    "text": "there and sooner you start applying these practices as Uma and CTI described the better off you will be be the more",
    "start": "3501000",
    "end": "3506720"
  },
  {
    "text": "resilient your system will be and system doesn't mean your stack it means the",
    "start": "3506720",
    "end": "3512880"
  },
  {
    "text": "value that you deliver to the people that use your system thank you m thank you cartic it's been a pleasure I hope",
    "start": "3512880",
    "end": "3519119"
  },
  {
    "text": "to see you again soon thank you good thank [Music]",
    "start": "3519119",
    "end": "3524839"
  },
  {
    "text": "you that's it for this episode of ship it thank you for tuning in we have a",
    "start": "3524839",
    "end": "3529920"
  },
  {
    "text": "bunch of podcasts for developers at Chang log that you should check out subscribe to the master feed at changel",
    "start": "3529920",
    "end": "3536400"
  },
  {
    "text": "log.com slm to get everything we ship I want to",
    "start": "3536400",
    "end": "3541640"
  },
  {
    "text": "personally invite you to join your fellow Chang loggers at",
    "start": "3541640",
    "end": "3546890"
  },
  {
    "text": "[Music]",
    "start": "3546890",
    "end": "3551549"
  },
  {
    "text": "chang.org again to our partners fastly launch",
    "start": "3555480",
    "end": "3562079"
  },
  {
    "text": "Darkly and N Out also thanks to break master cylinder for making all our",
    "start": "3562079",
    "end": "3567480"
  },
  {
    "text": "awesome beats that's it for this week see you next",
    "start": "3567480",
    "end": "3572760"
  },
  {
    "text": "[Music]",
    "start": "3574010",
    "end": "3594039"
  },
  {
    "text": "week",
    "start": "3595039",
    "end": "3598039"
  },
  {
    "text": "love",
    "start": "3600799",
    "end": "3603799"
  }
]